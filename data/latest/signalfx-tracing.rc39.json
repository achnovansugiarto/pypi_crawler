{
  "info": {
    "author": "SignalFx",
    "author_email": "signalfx-oss@splunk.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "> # :warning: Deprecation Notice\n> **The SignalFx Tracing Library for Python is deprecated for Python 3 and will reach End of Support on December 17th, 2022. After that date, this repository will be archived and no longer receive updates. Until then, only critical security fixes and bug fixes will be provided.**\n>\n>Going forward, Python 3 applications should use the [Splunk Distribution of OpenTelemetry\n>Python](https://github.com/signalfx/splunk-otel-python), which offers similar capabilities and fully supports the OpenTelemetry standard. To learn how to migrate, see [Migrate from the SignalFx Python Tracing Library](https://quickdraw.splunk.com/redirect/?product=Observability&location=python.otel.repo.migration&version=current).\n\n---\n\n# SignalFx Tracing Library for Python\n\nThe SignalFx Tracing Library for Python automatically instruments your\nPython 2.7 or 3.4+ application to capture and report distributed traces to\nSignalFx with a single function. The library does so by configuring an\nOpenTracing-compatible tracer you can use to capture and export trace spans.\nYou can use the tracer to embed custom instrumentation in the automatically\ngenerated traces.\n\nThe SignalFx-Tracing Library for Python works by detecting your libraries and\nframeworks and configuring available instrumentors for distributed tracing via\nthe Python [OpenTracing API 2.0](https://pypi.org/project/opentracing/2.0.0/).\nBy default, its footprint is small and doesn't declare any instrumentors as\ndependencies.\n\nThe library provides helpful [utilities](./scripts/README.md) to\ninstall each applicable instrumentor along with a compatible tracer. The\nbootstrap utility selectively installs custom instrumentors listed in the\n[instrumentor requirements file](./requirements-inst.txt). The application\nrunner creates a tracer with a modified \n[Jaeger Client](https://github.com/signalfx/jaeger-client-python) ready for\nreporting to SignalFx and auto-instruments your app without any required\ncode changes.\n\nThe library enables tracing with constant sampling (i.e., 100% chance of tracing)\nand reports each span to SignalFx. Where applicable, context propagation uses\n[B3 headers](https://github.com/openzipkin/b3-propagation).\n\nFor more information about automatically instrumenting your application, see\n[Automatically instrument a Python application](#Automatically-instrument-a-Python-application).\n\nIf you don't want to automatically instrument all applicable libraries and\nframeworks, specify your target module to manually instrument your Python\napplication. For more information about manually instrumenting your application,\nsee [Manually instrument a Python application](#Manually-instrument-a-Python-application).\n\n## Requirements and supported software\n\nThese are the supported libraries.\n\n| Library | Versions supported | Instrumentation name(s) | Notes |\n| ---     | ---                | ---                     | ---   |\n|[Celery](./signalfx_tracing/libraries/celery_/README.md) | 3.1+ | `instrument(celery=True)` | |\n| [Django](./signalfx_tracing/libraries/django_/README.md) | 1.8+ | `instrument(django=True)` | Requires `signalfx_tracing` in the project's installed applications. |\n| [Elasticsearch](./signalfx_tracing/libraries/elasticsearch_/README.md) | 2.0+ | `instrument(elasticsearch=True)` | |\n| [Falcon](./signalfx_tracing/libraries/falcon_/README.md) | 2.0+ | `instrument(falcon=True)` | |\n| [Flask](./signalfx_tracing/libraries/flask_/README.md) | 0.10+ | `instrument(flask=True)` | |\n| [Psycopg](./signalfx_tracing/libraries/psycopg2_/README.md) | 2.7+ | `instrument(psycopg2=True)` | |\n| [PyMongo](./signalfx_tracing/libraries/pymongo_/README.md) | 3.1+ | `instrument(pymongo=True)` | |\n| [PyMySQL](./signalfx_tracing/libraries/pymysql_/README.md) | 0.8+ | `instrument(pymysql=True)` | |\n| [Redis-Py](./signalfx_tracing/libraries/redis_/README.md) | 2.10+ | `instrument(redis=True)` | |\n| [Requests](./signalfx_tracing/libraries/requests_/README.md) | 2.0+ | `instrument(requests=True)` | |\n| [Tornado 4.3-6.x](./signalfx_tracing/libraries/tornado_/README.md) | 4.3-6.x | `instrument(tornado=True)` | |\n\nIf you don't provide a  `config` dictionary or don't specify the following items\nfor your tracer, these environment variables are checked before selecting a\ndefault value:\n\n| Config kwarg | environment variable | default value | notes |\n|--------------|----------------------|---------------|-------|\n| `service_name` | `SIGNALFX_SERVICE_NAME` | `'SignalFx-Tracing'` | The name to identify the service in SignalFx. |\n| `N/A` | `SIGNALFX_ENV` | `''` | The environment name to attach to span's process tags and, if log is injection is enabled, to be injected to logs. Can also be set when creating a tracer: `create_tracer(config={'tags': {'environment': 'my-prod'}})`. |\n| `jaeger_endpoint` | `SIGNALFX_ENDPOINT_URL` | `'http://localhost:9080/v1/trace'` | The endpoint the tracer sends spans to. Send spans to a Smart Agent, OpenTelemetry Collector, or a SignalFx ingest endpoint. |\n| `jaeger_password` | `SIGNALFX_ACCESS_TOKEN` | `None` | The SignalFx organization access token. |\n| `N/A` | `SIGNALFX_RECORDED_VALUE_MAX_LENGTH` | `1200` | The maximum length an attribute value can have. Values longer than this are truncated. |\n| `N/A` | `SPLUNK_TRACE_RESPONSE_HEADER_ENABLED` | `true` | Enables adding Server-Timing header to HTTP responses. |\n\n## Automatically instrument a Python application\n\nInstall the tracing library, use the `sfx-py-trace-bootstrap` utility to\nconfigure instrumentation and create a tracer, and automatically instrument your\napplication with the `sfx-py-trace` utility. Install instrumentation and the\nJaeger tracer with the [bootstrap utility](./scripts/README.md#sfx-py-trace-bootstrap) and\nautomatically instrument your application with the [application runner](./scripts/README.md#sfx-py-trace).\n\n`sfx-py-trace` can't enable auto-instrumentation of Django projects by itself\nbecause you have to add the `signalfx_tracing` instrumentor in the project settings'\ninstalled applications. Once you specify the application, use `sfx-py-trace` as\ndescribed in the \n[Django instrumentation documentation](./signalfx_tracing/libraries/django_/README.md).\n\n`sfx-py-trace` creates a Jaeger tracer instance using the access token specified\nwith the environment variable or argument to report your spans to SignalFx. It\nthen calls `auto_instrument()` before running your target application file in\nits own module namespace. Due to potential deadlocks in importing forking code,\nyou can't initialize the standard Jaeger tracer as a side effect of an import\nstatement. For more information, see\n[Python threading doc](https://docs.python.org/2/library/threading.html#importing-in-threaded-code) \nand [known Jaeger issue](https://github.com/jaegertracing/jaeger-client-python/issues/60#issuecomment-318909730).\nBecause of this issue, and for general lack of HTTP reporting support, use the\nmodified [Jaeger tracer](#Tracer) that provides deferred thread creation to\navoid this constraint.\n\n`sfx-py-trace` attempts to instrument all available libraries there are\ncorresponding instrumentations installed on your system for. If you want to\nprevent the tracing of particular libraries at run time, set the\n`SIGNALFX_<LIBRARY_NAME>_ENABLED=False` environment variable when launching the\n`sfx-py-trace` process. For example, to prevent auto-instrumentation of Tornado,\nyou could run:\n\n```sh\n  $ SIGNALFX_TORNADO_ENABLED=False sfx-py-trace my_application.py\n```\n\nThe supported value of each library name is the uppercase form of the\ncorresponding `instrument()` [keyword argument](#Supported-Frameworks-and-Libraries).\n\n1. Set the service name, endpoint URL, and access token:\n    ```bash\n    # Specify a name and environment for the service in SignalFx.\n    $ export SIGNALFX_SERVICE_NAME=\"your_service\"\n    $ export SIGNALFX_ENV=\"prod\"\n    # Set the endpoint URL for the Smart Agent, OpenTelemetry Collector, or ingest endpoint.\n    $ export SIGNALFX_ENDPOINT_URL=\"http://localhost:9080/v1/trace\"\n    # If you're reporting directly to SignalFx without a Smart Agent or Collector, provide the access token for your SignalFx organization.\n    $ export SIGNALFX_ACCESS_TOKEN=\"your_access_token\"\n    ```\n2. Install the tracing library:\n    ```bash\n    $ pip install signalfx-tracing\n    ```\n3. Run the bootstrap utility:\n    ```bash\n    $ sfx-py-trace-bootstrap\n    ```\n4. Run the trace utility:\n    ```bash\n    $ sfx-py-trace your_application.py --app_arg_one --app_arg_two\n    ```\n\n## Manually configure the tracing library components\n\nManually configure each applicable instrumentor, tracer, and instrument your\napplication. Manually instrumenting an application is helpful when you want to\nmonitor more than the auto-instrumentation process configures or you want to\nadd custom instrumentation tags.\n\n1. Uninstall any previous instrumentor versions. If you use the bootstrap\nutility, it automatically does this for you. \n2. Install the tracing library:\n      ```bash\n    $ pip install signalfx-tracing\n      ```\n3. Install applicable instrumentors. There are a few ways to do this.\n   1. Run the bootstrap utility:\n        ```bash\n      $ sfx-py-trace-bootstrap\n        ```\n   2. Run the bootstrap utility and specify a target installation directory that\n   includes the most recent tracing library provided by PyPI:\n        ```bash\n  \t\t$ sfx-py-trace-bootstrap -t /your/site/packages/directory \n        ```\n   3. Run the bootstrap utility without installing the Jaeger tracer from your\n   project's source tree:\n        ```bash\n  \t\t$ scripts/bootstrap.py --deps-only\n        ```\n   4. Install the supported instrumentors as package extras from a cloned repository:\n        ```bash\n  \t \t$ git clone https://github.com/signalfx/signalfx-python-tracing.git\n      # View setup.py for available package extras.\n      # If you're using a pip version older than version 18, include\n      # --process-dependency-links in the install command.\n\t    $ pip install './signalfx-python-tracing[extra,extra,extra]'\n      ```\n4. Set the service name, endpoint URL, and access token:\n    ```bash\n    # Specify a name for the service in SignalFx.\n    $ export SIGNALFX_SERVICE_NAME=\"your_service\"\n    # Set the endpoint URL for the Smart Agent, OpenTelemetry Collector, or ingest endpoint.\n    $ export SIGNALFX_ENDPOINT_URL=\"http://localhost:9080/v1/trace\"\n    # Provide the access token for your SignalFx organization.\n    $ export SIGNALFX_ACCESS_TOKEN=\"your_access_token\"\n    ```\n5. Create a tracer using `signalfx_tracing.utils.create_tracer()`. This sets\nthe global `opentracing.tracer` by default. The tracer uses the\n`SIGNALFX_ACCESS_TOKEN` environment variable. By default, `create_tracer()`\nstores the initial tracer created upon first invocation and returns that instance\nfor subsequent invocations. If you need to use multiple tracers, you can provide\n`create_tracer(allow_multiple=True)` as a named argument.\n      ```python\n      from signalfx_tracing import create_tracer\n\n      tracer = create_tracer()\n      ```\n    If you're instrumenting a Tornado application, import the Tornado Scope Manager\n    when you create the tracer:\n      ```python\n      from tornado_opentracing.scope_managers import TornadoScopeManager\n      from signalfx_tracing import create_tracer\n\n      tracer = create_tracer(\n        scope_manager=TornadoScopeManager\n      )\n      ```\n\n6. Instrument your code. You can automatically instrument your code or manually\ninstrument your code. You can convert `instrument()` and `auto_instrument()` to\nno-ops by setting the `SIGNALFX_TRACING_ENABLED` environment variable to `False`\nor `0`. This can be helpful when you're developing your application locally or\ndeploying in a test environment.\n   1. Automatically instrument your code:\n      ```python\n      from signalfx_tracing import auto_instrument, create_tracer\n      tracer = create_tracer()\n      auto_instrument(tracer)\n      ```\n   2. Manually instrument your code:\n      ```python\n      from signalfx_tracing import create_tracer, instrument\n\n      tracer = create_tracer()\n      # or to specify service name and environment\n      tracer = create_tracer(config={'service_name': 'my-python-service', 'tags': {'environment': 'prod'}})\n\n      instrument(tracer, flask=True)\n      # or\n      instrument(flask=True)  # uses the global Tracer from opentracing.tracer by default\n\n      import flask\n\n      traced_app = flask.Flask('MyTracedApplication')\n\n      @traced_app.route('/hello_world')\n      def traced_route():\n        # Obtain active span created by traced middleware\n        span = tracer.scope_manager.active.span\n        span.set_tag('Hello', 'World')\n        span.log_kv({'event': 'initiated'})\n        return 'Hello!'  # Span is automatically finished after request handler\n      ```\n1. Automatically create spans for custom application logic with a trace decorator:\n      ```python\n      from signalfx_tracing import trace\n      import opentracing\n\n      from my_app import annotate, compute, report\n\n\n      @trace  # uses global opentracing.tracer set by signalfx_tracing.utils.create_tracer()\n      def my_function(arg):  # default span operation name is the name of the function\n          # span will automatically trace duration of my_function() without any modifications necessary\n          annotated = annotate(arg)\n          return MyBusinessLogic().my_other_function(annotated)\n\n\n      class MyBusinessLogic:\n\n          @classmethod  # It's necessary to declare @trace after @classmethod and @staticmethod\n          @trace('MyOperation')  # Specify span operation name\n          def my_other_function(cls, arg):\n              # Using OpenTracing api, it's possible to modify current spans.\n              # This active span is 'MyOperation', the current traced function and child of 'my_function'.\n              span = opentracing.tracer.active_span\n              span.set_tag('MyAnnotation', arg)\n              value = cls.my_additional_function(arg)\n              return report(value)\n\n          @staticmethod\n          @trace('MyOtherOperation',  # Specify span operation name and tags\n                 tags={'tag_name':'tag_value','another_tag_name':'another_tag_value'})\n          def my_additional_function(arg):\n              span = opentracing.tracer.active_span  # This active span is 'MyOtherOperation', the child of 'MyOperation'.\n              value = compute(arg)\n              span.set_tag('ComputedValue', value)\n              return value\n      ```\n    Any invocation of `my_function()` results in a trace consisting of at least\n    three spans whose relationship mirrors the call graph. If `my_function()` were\n    to be called from another traced function or auto-instrumented request handler, \n    its resulting span would be parented by that caller function's span.\n\n## Tracer debug logging\n\nThe tracer can be configured to log debugging information by setting `SIGNALFX_TRACING_DEBUG` to `true`. This tell the tracer to log additional information that might be\nhelpful in understanding how it operates. Note that in order for debug logging to work, you application must initialize logging with `logging.basicConfig()` first.\n\n## Inject trace ID, span ID, service name and environment into logs\n\nLink individual log entries with trace IDs and span IDs associated with corresponding events. The SignalFx Python instrumentation patches `logging.Logger.makeRecord` method to automatically inject trace context into all `LogRecord` objects. When `SIGNALFX_LOGS_INJECTION` environment variable is set to `true`, the logging instrumentation also sets a custom logging format to automatically inject the trace context into logs. The default format looks like the following:\n\n```\n%(asctime)s %(levelname)s [%(name)s] [%(filename)s:%(lineno)d] [signalfx.trace_id=%(sfxTraceId)s signalfx.span_id=%(sfxSpanId)s signalfx.service=%(sfxService)s signalfx.environment=%(sfxEnvironment)s] - %(message)s\n```\n\nIf you don't want the instrumentation to set a custom logging format and would rather use your format, you can set `SIGNALFX_LOGS_INJECTION` to `false` to disable automatic injection. You can then add `%(sfxSpanId)s` and `%(sfxTraceId)s` to your log format to inject the trace context. Alternately, you can keep automatic injection enabled and pass your custom logging format to the instrumentation by setting the `SIGNALFX_LOGGING_FORMAT` env var. \n\nLog injection is not enabled by default and can be enabled by setting `SIGNALFX_LOGS_INJECTION` environment variable to `true`.\n\n## Manually installing instrumentations\n\n`sfx-py-trace-bootstrap` command automatically detects and installs the relevant instrumentations for your environment. If for some reason you cannot use the bootstrap command, you can manually install the relevant packages with pip. Following is a list of all the libraries we support and the commands to install their corresponding instrumentation packages.\n\n| Library/Framework | Instrumentation Package |\n| ----------------- | ----------------------- | \n| celery | signalfx-instrumentation-celery |\n| django | signalfx-instrumentation-django |\n| elasticsearch | signalfx-instrumentation-elasticsearch |\n| flask | signalfx-instrumentation-flask |\n| psycopg | signalfx-instrumentation-dbapi |\n| pymongo | signalfx-instrumentation-pymongo |\n| pymysql | signalfx-instrumentation-dbapi |\n| redis | signalfx-instrumentation-redis |\n| requests | signalfx-instrumentation-requests |\n| tornado | signalfx-instrumentation-tornado |\n\n\n### Example\n\nIf your Python app is using flask and you want to install flask instrumentation, you'd have to run \n\n```\npip install signalfx-instrumentation-flask\n```\n\nor add the package to your `requirements.txt` file.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "http://github.com/signalfx/signalfx-python-tracing/tarball/master",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/signalfx/signalfx-python-tracing",
    "keywords": "",
    "license": "Apache Software License v2",
    "maintainer": "",
    "maintainer_email": "",
    "name": "signalfx-tracing",
    "package_url": "https://pypi.org/project/signalfx-tracing/",
    "platform": "",
    "project_url": "https://pypi.org/project/signalfx-tracing/",
    "project_urls": {
      "Download": "http://github.com/signalfx/signalfx-python-tracing/tarball/master",
      "Homepage": "http://github.com/signalfx/signalfx-python-tracing"
    },
    "release_url": "https://pypi.org/project/signalfx-tracing/2.2.0/",
    "requires_dist": [
      "opentracing (<2.4,>=2.1)",
      "six (>=1.12.0)",
      "wrapt",
      "signalfx-instrumentation-celery (>=1.0.0) ; extra == 'celery'",
      "signalfx-instrumentation-dbapi (>=1.0.0) ; extra == 'dbapi'",
      "signalfx-instrumentation-django (>=1.2.0) ; extra == 'django'",
      "signalfx-instrumentation-elasticsearch (>=1.0.0) ; extra == 'elasticsearch'",
      "signalfx-instrumentation-flask (>=1.3.0) ; extra == 'flask'",
      "django ; extra == 'instrumentation_tests'",
      "docker ; extra == 'instrumentation_tests'",
      "elasticsearch ; extra == 'instrumentation_tests'",
      "flask ; extra == 'instrumentation_tests'",
      "flake8 ; extra == 'instrumentation_tests'",
      "falcon (<3.0) ; extra == 'instrumentation_tests'",
      "mock ; extra == 'instrumentation_tests'",
      "mockupdb ; extra == 'instrumentation_tests'",
      "psycopg2 ; extra == 'instrumentation_tests'",
      "pymongo ; extra == 'instrumentation_tests'",
      "pymysql ; extra == 'instrumentation_tests'",
      "pytest ; extra == 'instrumentation_tests'",
      "pytest-django ; extra == 'instrumentation_tests'",
      "redis ; extra == 'instrumentation_tests'",
      "requests ; extra == 'instrumentation_tests'",
      "six ; extra == 'instrumentation_tests'",
      "tornado ; extra == 'instrumentation_tests'",
      "sfx-jaeger-client (>=3.13.1b0.dev6) ; extra == 'instrumentation_tests'",
      "signalfx-instrumentation-celery (>=1.0.0) ; extra == 'instrumentation_tests'",
      "signalfx-instrumentation-dbapi (>=1.0.0) ; extra == 'instrumentation_tests'",
      "signalfx-instrumentation-django (>=1.2.0) ; extra == 'instrumentation_tests'",
      "signalfx-instrumentation-elasticsearch (>=1.0.0) ; extra == 'instrumentation_tests'",
      "signalfx-instrumentation-flask (>=1.3.0) ; extra == 'instrumentation_tests'",
      "signalfx-instrumentation-pymongo (>=1.0.0) ; extra == 'instrumentation_tests'",
      "signalfx-instrumentation-redis (>=1.0.0) ; extra == 'instrumentation_tests'",
      "signalfx-instrumentation-requests (>=1.0.0) ; extra == 'instrumentation_tests'",
      "signalfx-instrumentation-tornado (>=1.2.0) ; extra == 'instrumentation_tests'",
      "sfx-jaeger-client (>=3.13.1b0.dev6) ; extra == 'jaeger'",
      "signalfx-instrumentation-dbapi (>=1.0.0) ; extra == 'psycopg2'",
      "signalfx-instrumentation-pymongo (>=1.0.0) ; extra == 'pymongo'",
      "signalfx-instrumentation-dbapi (>=1.0.0) ; extra == 'pymysql'",
      "signalfx-instrumentation-redis (>=1.0.0) ; extra == 'redis'",
      "signalfx-instrumentation-requests (>=1.0.0) ; extra == 'requests'",
      "signalfx-instrumentation-tornado (>=1.2.0) ; extra == 'tornado'",
      "mock ; extra == 'unit_tests'",
      "pytest ; extra == 'unit_tests'",
      "six ; extra == 'unit_tests'",
      "sfx-jaeger-client ; extra == 'unit_tests'"
    ],
    "requires_python": "",
    "summary": "Provides auto-instrumentation for OpenTracing-traced libraries and frameworks",
    "version": "2.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11927388,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "914c42eefa24022a593e38be6698d7d94511712f24fdfd6c8c5d0b1b19231eba",
          "md5": "885663d0d099551d24bf33f848a8d359",
          "sha256": "62a4960a65694a0d63c5e13a5d68b0b497f644a915ca53ae01d8b14e8f5a32bb"
        },
        "downloads": -1,
        "filename": "signalfx-tracing-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "885663d0d099551d24bf33f848a8d359",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29252,
        "upload_time": "2018-12-14T22:06:48",
        "upload_time_iso_8601": "2018-12-14T22:06:48.388097Z",
        "url": "https://files.pythonhosted.org/packages/91/4c/42eefa24022a593e38be6698d7d94511712f24fdfd6c8c5d0b1b19231eba/signalfx-tracing-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a0a90b1f02f300cad2c42c651f01ca7987dec24cab4af6164533e58aa08ab989",
          "md5": "cda4bf853e24bde4ac4b5920028b121d",
          "sha256": "69c57ffdf77aabee9f701af89f3259521c9f94243ecb999bdcb4adc42c833991"
        },
        "downloads": -1,
        "filename": "signalfx-tracing-0.0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "cda4bf853e24bde4ac4b5920028b121d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19381,
        "upload_time": "2018-12-17T15:39:02",
        "upload_time_iso_8601": "2018-12-17T15:39:02.637831Z",
        "url": "https://files.pythonhosted.org/packages/a0/a9/0b1f02f300cad2c42c651f01ca7987dec24cab4af6164533e58aa08ab989/signalfx-tracing-0.0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2885d0a7cf863dc804b23fbbf7434b037b104a36dab04a14daf293160e4472aa",
          "md5": "dfe6c4aeb7a5e6332883429b4410f916",
          "sha256": "51316bf357379d38410e3df64a390b74b8c793fc70ef9812101b83b075378fa9"
        },
        "downloads": -1,
        "filename": "signalfx-tracing-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "dfe6c4aeb7a5e6332883429b4410f916",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19431,
        "upload_time": "2018-12-18T00:59:38",
        "upload_time_iso_8601": "2018-12-18T00:59:38.976656Z",
        "url": "https://files.pythonhosted.org/packages/28/85/d0a7cf863dc804b23fbbf7434b037b104a36dab04a14daf293160e4472aa/signalfx-tracing-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "716c40cfcf6dc0e4ebe787b3d27c2498ec66e1996ba08afb72a9463a808c5ab6",
          "md5": "29505e0f928f7425ab9c4c361e6fd961",
          "sha256": "7ee2f11dda8adddc3f6f487f01a0e28fb39d0526aafb1ebf5a28db3bb46663dd"
        },
        "downloads": -1,
        "filename": "signalfx-tracing-0.0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "29505e0f928f7425ab9c4c361e6fd961",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23635,
        "upload_time": "2019-05-06T15:42:06",
        "upload_time_iso_8601": "2019-05-06T15:42:06.463778Z",
        "url": "https://files.pythonhosted.org/packages/71/6c/40cfcf6dc0e4ebe787b3d27c2498ec66e1996ba08afb72a9463a808c5ab6/signalfx-tracing-0.0.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d9e6fad1aca7cb3f5cfa579086019ee7d7f71a30a363dcf2d6ff62f5bc9b6d56",
          "md5": "47d858aae403587a214ed32b9544c199",
          "sha256": "7b597f3d4f90136f30cb2c23c840deb2f756ae8c7e74e22c5eab941b962a2195"
        },
        "downloads": -1,
        "filename": "signalfx-tracing-0.0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "47d858aae403587a214ed32b9544c199",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26961,
        "upload_time": "2019-07-12T13:46:02",
        "upload_time_iso_8601": "2019-07-12T13:46:02.071479Z",
        "url": "https://files.pythonhosted.org/packages/d9/e6/fad1aca7cb3f5cfa579086019ee7d7f71a30a363dcf2d6ff62f5bc9b6d56/signalfx-tracing-0.0.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4b053cf6d2e35a880e3e1387196a549daff4c00254e3090180a2e12e58f4f683",
          "md5": "4177ef985efea9959df0bf0d0bada457",
          "sha256": "5f0c677048ed035799ad0e0396ed8f7430cbde6c8f30f1dca9809cea6d572650"
        },
        "downloads": -1,
        "filename": "signalfx-tracing-0.0.12.tar.gz",
        "has_sig": false,
        "md5_digest": "4177ef985efea9959df0bf0d0bada457",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 27095,
        "upload_time": "2019-07-19T18:44:30",
        "upload_time_iso_8601": "2019-07-19T18:44:30.145837Z",
        "url": "https://files.pythonhosted.org/packages/4b/05/3cf6d2e35a880e3e1387196a549daff4c00254e3090180a2e12e58f4f683/signalfx-tracing-0.0.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.12.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dea645326bf14fb6e84a8fd39deb18a1693865752b21424576b6ed8cf4ec0882",
          "md5": "20353dabaa5c477cbb3dced06ef22f19",
          "sha256": "31fcf5c623ef51a447c8e1370ae8d1c57c049a192bb8df1486566591ccfbbfaf"
        },
        "downloads": -1,
        "filename": "signalfx-tracing-0.0.12.1.tar.gz",
        "has_sig": false,
        "md5_digest": "20353dabaa5c477cbb3dced06ef22f19",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 27120,
        "upload_time": "2019-07-23T21:41:51",
        "upload_time_iso_8601": "2019-07-23T21:41:51.282189Z",
        "url": "https://files.pythonhosted.org/packages/de/a6/45326bf14fb6e84a8fd39deb18a1693865752b21424576b6ed8cf4ec0882/signalfx-tracing-0.0.12.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad3908e82def093678166b0ced3b8fce2c76a8dba0e4a811b5714d21d561ccb2",
          "md5": "bba83a937806b2b99696052a1c9f228f",
          "sha256": "fe63b9825eea2ecc2f0d1cf65ac3e1643a391cd984cdffc134c092ef02ee9f22"
        },
        "downloads": -1,
        "filename": "signalfx-tracing-0.0.13.tar.gz",
        "has_sig": false,
        "md5_digest": "bba83a937806b2b99696052a1c9f228f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28075,
        "upload_time": "2019-09-25T11:05:53",
        "upload_time_iso_8601": "2019-09-25T11:05:53.178166Z",
        "url": "https://files.pythonhosted.org/packages/ad/39/08e82def093678166b0ced3b8fce2c76a8dba0e4a811b5714d21d561ccb2/signalfx-tracing-0.0.13.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.14": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "23db74ba1fb9830bd9647d9e2950179ce5c4fd7e73f023fa49210b61741c6c41",
          "md5": "f941c5ae56056bd88d65a4f9a79b3759",
          "sha256": "19fef76644ea597618f321740005da54a9c7064b802479bc374963ec4aab883a"
        },
        "downloads": -1,
        "filename": "signalfx-tracing-0.0.14.tar.gz",
        "has_sig": false,
        "md5_digest": "f941c5ae56056bd88d65a4f9a79b3759",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28104,
        "upload_time": "2019-11-06T15:19:17",
        "upload_time_iso_8601": "2019-11-06T15:19:17.491910Z",
        "url": "https://files.pythonhosted.org/packages/23/db/74ba1fb9830bd9647d9e2950179ce5c4fd7e73f023fa49210b61741c6c41/signalfx-tracing-0.0.14.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.14.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2bb378a7292a4230a70c39ad6ba86ee22d7eb0ac87a0a23774d4ec24f327feec",
          "md5": "1eb5d531947522d4439d1d305689b7cb",
          "sha256": "beb642789959430c86c5651561c6fa5070b2eac2e3edef4bed68aa4732f1df67"
        },
        "downloads": -1,
        "filename": "signalfx-tracing-0.0.14.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1eb5d531947522d4439d1d305689b7cb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28120,
        "upload_time": "2019-11-06T15:24:25",
        "upload_time_iso_8601": "2019-11-06T15:24:25.951324Z",
        "url": "https://files.pythonhosted.org/packages/2b/b3/78a7292a4230a70c39ad6ba86ee22d7eb0ac87a0a23774d4ec24f327feec/signalfx-tracing-0.0.14.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.15": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "daccbbf3c832238aca54e44d8ee33726a2e0ef9ac0149f6da89b5068c1ef339f",
          "md5": "31525151ece58ec9878afb22fd7e8758",
          "sha256": "6b53e967c2193cac5429275389db4e0bfac1c3e39165ee966a7bd0f22ba3804b"
        },
        "downloads": -1,
        "filename": "signalfx-tracing-0.0.15.tar.gz",
        "has_sig": false,
        "md5_digest": "31525151ece58ec9878afb22fd7e8758",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28779,
        "upload_time": "2020-02-14T21:50:40",
        "upload_time_iso_8601": "2020-02-14T21:50:40.801248Z",
        "url": "https://files.pythonhosted.org/packages/da/cc/bbf3c832238aca54e44d8ee33726a2e0ef9ac0149f6da89b5068c1ef339f/signalfx-tracing-0.0.15.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.16": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "36f00f72d802384e765407a3f054087cd2c6f0710c0a225a0f5d0900b0069ac9",
          "md5": "80ea2b5753ec018253f94f2f260f0152",
          "sha256": "4da80392e946efecb846e6b1619f1dcdf7daeabe97ed05fb6024cd850879621d"
        },
        "downloads": -1,
        "filename": "signalfx-tracing-0.0.16.tar.gz",
        "has_sig": false,
        "md5_digest": "80ea2b5753ec018253f94f2f260f0152",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28556,
        "upload_time": "2020-03-19T23:21:46",
        "upload_time_iso_8601": "2020-03-19T23:21:46.981018Z",
        "url": "https://files.pythonhosted.org/packages/36/f0/0f72d802384e765407a3f054087cd2c6f0710c0a225a0f5d0900b0069ac9/signalfx-tracing-0.0.16.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a5df592e95afe4d75f122c053e485c8fdc7f60d70df2bb8bd45476d034e4d685",
          "md5": "288cd7ff10470e05c015cf2fe702a73d",
          "sha256": "9ced3de8f19513fb5460fa386f5fbeaf12aea18aaf7e4aafd912e1e7c72b9ba4"
        },
        "downloads": -1,
        "filename": "signalfx-tracing-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "288cd7ff10470e05c015cf2fe702a73d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19568,
        "upload_time": "2019-01-04T22:32:12",
        "upload_time_iso_8601": "2019-01-04T22:32:12.349759Z",
        "url": "https://files.pythonhosted.org/packages/a5/df/592e95afe4d75f122c053e485c8fdc7f60d70df2bb8bd45476d034e4d685/signalfx-tracing-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "767442b70f188d56ba56578a92d0fcffab820f7ef28a04044d149a05f8e4cc01",
          "md5": "7b0dec6d7a1bb26e98470b30fc0dd117",
          "sha256": "a5e80e38126a962ac33face80a14685ec51b1353c9e20c023e121d12ac76fae9"
        },
        "downloads": -1,
        "filename": "signalfx-tracing-0.0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7b0dec6d7a1bb26e98470b30fc0dd117",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19562,
        "upload_time": "2019-01-04T22:35:19",
        "upload_time_iso_8601": "2019-01-04T22:35:19.328144Z",
        "url": "https://files.pythonhosted.org/packages/76/74/42b70f188d56ba56578a92d0fcffab820f7ef28a04044d149a05f8e4cc01/signalfx-tracing-0.0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "769c620af371ac158dccb8a67d65607a90cb8d22f0fb93358f18e0eed43351da",
          "md5": "2d1385177d998b1a8a9410b9f7552566",
          "sha256": "294ea628436b11afbe98e71ff3bf6d750bc2ca7fd82548fe7c2b7b8f4bcfdb39"
        },
        "downloads": -1,
        "filename": "signalfx-tracing-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "2d1385177d998b1a8a9410b9f7552566",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20189,
        "upload_time": "2019-01-09T20:48:32",
        "upload_time_iso_8601": "2019-01-09T20:48:32.012664Z",
        "url": "https://files.pythonhosted.org/packages/76/9c/620af371ac158dccb8a67d65607a90cb8d22f0fb93358f18e0eed43351da/signalfx-tracing-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "83f64d87c82b3b5657bf4abeeccaad5ec5f8b274f060ae48ad74abec6648be4d",
          "md5": "3d35fa4b2b3d224ad06f713d6f74635c",
          "sha256": "9f23b9310f0d1172d08940da229b4133dfc381fc5a75b59364cf28626ba49855"
        },
        "downloads": -1,
        "filename": "signalfx-tracing-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "3d35fa4b2b3d224ad06f713d6f74635c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20928,
        "upload_time": "2019-01-17T20:44:25",
        "upload_time_iso_8601": "2019-01-17T20:44:25.363597Z",
        "url": "https://files.pythonhosted.org/packages/83/f6/4d87c82b3b5657bf4abeeccaad5ec5f8b274f060ae48ad74abec6648be4d/signalfx-tracing-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9518c7ecc15f8adb007a30899b184b1a74bf889929f73b0d373326eb70a00c15",
          "md5": "02bcbce8029d72af5e5c3dc95bd7c1e1",
          "sha256": "98689b7f35670c6331bd991d3028c3fc80981c1d8592baaafe7819c07fbb9abc"
        },
        "downloads": -1,
        "filename": "signalfx-tracing-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "02bcbce8029d72af5e5c3dc95bd7c1e1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21962,
        "upload_time": "2019-02-04T14:20:48",
        "upload_time_iso_8601": "2019-02-04T14:20:48.693821Z",
        "url": "https://files.pythonhosted.org/packages/95/18/c7ecc15f8adb007a30899b184b1a74bf889929f73b0d373326eb70a00c15/signalfx-tracing-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2906ba4290c8fdaee5c946315913c4de65dcf23bf6c2b226d8587a05ac981992",
          "md5": "b8b6d5375cefa2073bd41afc11f3912f",
          "sha256": "24cd447d317c7a4bf18abd3ee10812314c92f2bd259b6f868e4d343bdfe83054"
        },
        "downloads": -1,
        "filename": "signalfx-tracing-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "b8b6d5375cefa2073bd41afc11f3912f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25048,
        "upload_time": "2019-02-06T14:51:42",
        "upload_time_iso_8601": "2019-02-06T14:51:42.150557Z",
        "url": "https://files.pythonhosted.org/packages/29/06/ba4290c8fdaee5c946315913c4de65dcf23bf6c2b226d8587a05ac981992/signalfx-tracing-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6c4406148627ca1de2501539dc32c8855c2db0a5ae85d9d60d5dc1ce36ffc55",
          "md5": "8740902c2575b75171c2b7a36c064cec",
          "sha256": "439ec18d7aa742baf2a6299b56f6fc86f10784020ed14cab6bf50af2ff76093a"
        },
        "downloads": -1,
        "filename": "signalfx-tracing-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "8740902c2575b75171c2b7a36c064cec",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25360,
        "upload_time": "2019-02-21T22:18:31",
        "upload_time_iso_8601": "2019-02-21T22:18:31.504415Z",
        "url": "https://files.pythonhosted.org/packages/a6/c4/406148627ca1de2501539dc32c8855c2db0a5ae85d9d60d5dc1ce36ffc55/signalfx-tracing-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "48835b45ae05d62eb9ca07fdcd9fec35b9cc168378cdc004e115bd66b4ddd0b6",
          "md5": "a5364029cd499924e77a25e1719e0093",
          "sha256": "92ea99883aa5f634b1d9fa8688b0288fc89bd88cdb5a43476b30288ee00d6b2e"
        },
        "downloads": -1,
        "filename": "signalfx-tracing-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "a5364029cd499924e77a25e1719e0093",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26393,
        "upload_time": "2019-03-18T18:57:43",
        "upload_time_iso_8601": "2019-03-18T18:57:43.904525Z",
        "url": "https://files.pythonhosted.org/packages/48/83/5b45ae05d62eb9ca07fdcd9fec35b9cc168378cdc004e115bd66b4ddd0b6/signalfx-tracing-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a5055731e15d00a82137d7f33aabc8e2f7bd126b34674de36c57c2cf5f0cfba",
          "md5": "52a44f14e06829acf072ab3755e25fdd",
          "sha256": "7e67d5e4d2ef7d06a53bd9cf7689ea11abd1e2c301a0d02849d11849a8862a24"
        },
        "downloads": -1,
        "filename": "signalfx-tracing-0.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "52a44f14e06829acf072ab3755e25fdd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26634,
        "upload_time": "2019-03-25T13:37:30",
        "upload_time_iso_8601": "2019-03-25T13:37:30.195259Z",
        "url": "https://files.pythonhosted.org/packages/9a/50/55731e15d00a82137d7f33aabc8e2f7bd126b34674de36c57c2cf5f0cfba/signalfx-tracing-0.0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "31e7897a29ec9115769a5a2e28ad370014a433e618893ba768e00a892ec568fc",
          "md5": "6d3efcb98499c0431a2aa12b0f541ad4",
          "sha256": "dc8f7cf018f8c1f2aeee479a9c5e1393e7c48e854b4e8b9c51d6033fc35f1c69"
        },
        "downloads": -1,
        "filename": "signalfx-tracing-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6d3efcb98499c0431a2aa12b0f541ad4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29344,
        "upload_time": "2020-07-14T10:21:29",
        "upload_time_iso_8601": "2020-07-14T10:21:29.609740Z",
        "url": "https://files.pythonhosted.org/packages/31/e7/897a29ec9115769a5a2e28ad370014a433e618893ba768e00a892ec568fc/signalfx-tracing-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "29af8663eb6a9c6997db1b6737c92362723ca0f88086039339599a00f90228fb",
          "md5": "2a425924005a0f3b85f835f89d629f9a",
          "sha256": "a4c3757d3c4c21a9f0087ae8690949fc52ef748f2aaba4071dbd4f77e20e2574"
        },
        "downloads": -1,
        "filename": "signalfx-tracing-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2a425924005a0f3b85f835f89d629f9a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30456,
        "upload_time": "2020-08-20T10:20:07",
        "upload_time_iso_8601": "2020-08-20T10:20:07.595337Z",
        "url": "https://files.pythonhosted.org/packages/29/af/8663eb6a9c6997db1b6737c92362723ca0f88086039339599a00f90228fb/signalfx-tracing-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4354fcd18f5a002a50db290a7e5bd94c4c17c730a7602241192a314fc7161662",
          "md5": "b4a15a36e9a4a54c29cd93954f87418d",
          "sha256": "cf51584b8029965deca0160b0477ea636fec28ad7bd9ca2958381621e05ea760"
        },
        "downloads": -1,
        "filename": "signalfx-tracing-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b4a15a36e9a4a54c29cd93954f87418d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30626,
        "upload_time": "2020-09-10T19:29:20",
        "upload_time_iso_8601": "2020-09-10T19:29:20.198964Z",
        "url": "https://files.pythonhosted.org/packages/43/54/fcd18f5a002a50db290a7e5bd94c4c17c730a7602241192a314fc7161662/signalfx-tracing-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b3506693eff26e4e030f3ef9a31dd193a4e004e4f3a9d23d46daa8905f569e96",
          "md5": "fea359b4e304f665a62b288b123edece",
          "sha256": "9b60fc531efd306b4668229e55b54e2d0fe87bf10697dcd39a8a52d3ed522fcd"
        },
        "downloads": -1,
        "filename": "signalfx-tracing-1.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fea359b4e304f665a62b288b123edece",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 31092,
        "upload_time": "2020-09-25T19:21:38",
        "upload_time_iso_8601": "2020-09-25T19:21:38.503135Z",
        "url": "https://files.pythonhosted.org/packages/b3/50/6693eff26e4e030f3ef9a31dd193a4e004e4f3a9d23d46daa8905f569e96/signalfx-tracing-1.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7cbc4a6e04b210fca61aad6f84881cd98b7ee9dc82d0b1b90f5e2a930f7698f4",
          "md5": "9167223dcd510f46c12c47ed989444c9",
          "sha256": "717b78094bd0673af2baf6417a90cd4afa66bfdafb3f50b1d241a9f71aa64be3"
        },
        "downloads": -1,
        "filename": "signalfx-tracing-1.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9167223dcd510f46c12c47ed989444c9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 31111,
        "upload_time": "2020-10-01T17:53:09",
        "upload_time_iso_8601": "2020-10-01T17:53:09.210868Z",
        "url": "https://files.pythonhosted.org/packages/7c/bc/4a6e04b210fca61aad6f84881cd98b7ee9dc82d0b1b90f5e2a930f7698f4/signalfx-tracing-1.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c1a4e9b7494abd90f467c6266aeb6bed8dfa0dfe7a70502725f20a37dfeafc4",
          "md5": "6ae32921630c9334446a84c4add77d77",
          "sha256": "e74429cb3437b0b09093135b9c9963d532c54edd58498cea3fa42b975f04191c"
        },
        "downloads": -1,
        "filename": "signalfx-tracing-1.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6ae32921630c9334446a84c4add77d77",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28808,
        "upload_time": "2020-10-02T17:38:45",
        "upload_time_iso_8601": "2020-10-02T17:38:45.332918Z",
        "url": "https://files.pythonhosted.org/packages/8c/1a/4e9b7494abd90f467c6266aeb6bed8dfa0dfe7a70502725f20a37dfeafc4/signalfx-tracing-1.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4daf0a6df721a5a3080ffcd2043e75cd77c63a0d666356cf0037c6afc542abc3",
          "md5": "5e29a2c9980f9e65df8cf6643a07ca98",
          "sha256": "d1ae8aeb0825bb9817e278b961d588985787eaabaa3c8388b0629dabf7640766"
        },
        "downloads": -1,
        "filename": "signalfx-tracing-1.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5e29a2c9980f9e65df8cf6643a07ca98",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30519,
        "upload_time": "2020-10-02T18:35:54",
        "upload_time_iso_8601": "2020-10-02T18:35:54.332501Z",
        "url": "https://files.pythonhosted.org/packages/4d/af/0a6df721a5a3080ffcd2043e75cd77c63a0d666356cf0037c6afc542abc3/signalfx-tracing-1.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1230f87ac1f29acb881216d04ad5e61e7d51c6afc4325a0eae81a6008011b141",
          "md5": "b896e7660f4603feabf129918ffe444c",
          "sha256": "6c4cda110021fc54ba309be19adf7c712a1b26026128eded4373795a01c273fd"
        },
        "downloads": -1,
        "filename": "signalfx-tracing-1.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b896e7660f4603feabf129918ffe444c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29149,
        "upload_time": "2020-10-05T17:56:12",
        "upload_time_iso_8601": "2020-10-05T17:56:12.621152Z",
        "url": "https://files.pythonhosted.org/packages/12/30/f87ac1f29acb881216d04ad5e61e7d51c6afc4325a0eae81a6008011b141/signalfx-tracing-1.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f1f15e0d523d20f795420c2f3544616886c62c678e689102919ad24292bf0ce3",
          "md5": "8810db8f41793fe2e3cfdad360868b7f",
          "sha256": "98203c7590ccea969e4d9a865871394221846e00ac6ff640db89fc50b56b2302"
        },
        "downloads": -1,
        "filename": "signalfx-tracing-1.6.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8810db8f41793fe2e3cfdad360868b7f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 32860,
        "upload_time": "2020-10-08T01:22:36",
        "upload_time_iso_8601": "2020-10-08T01:22:36.613387Z",
        "url": "https://files.pythonhosted.org/packages/f1/f1/5e0d523d20f795420c2f3544616886c62c678e689102919ad24292bf0ce3/signalfx-tracing-1.6.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7a00ebb125de825fee9a7a26b2775ea1790a83f3ab29abbd55e1fec63b4baa85",
          "md5": "d9f9cc31ae67156c4a976f7eb653932e",
          "sha256": "0c5c34fb5cdd5107d66e8ea1973273f167d6f4a8fe06ed181c635fe4f361fc78"
        },
        "downloads": -1,
        "filename": "signalfx-tracing-1.6.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d9f9cc31ae67156c4a976f7eb653932e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29158,
        "upload_time": "2020-10-08T01:38:51",
        "upload_time_iso_8601": "2020-10-08T01:38:51.822096Z",
        "url": "https://files.pythonhosted.org/packages/7a/00/ebb125de825fee9a7a26b2775ea1790a83f3ab29abbd55e1fec63b4baa85/signalfx-tracing-1.6.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b6f266c51895c3c31e6fed3adab7b6265eed5c4ba2814107ee56a142488a1b46",
          "md5": "78ecee22b36bb402ce06b99e0a1703ed",
          "sha256": "a7a56f9587af69e43ae1b05f47dfdb811428d69603fa2340769db6bf4a18c7f3"
        },
        "downloads": -1,
        "filename": "signalfx-tracing-1.6.3.tar.gz",
        "has_sig": false,
        "md5_digest": "78ecee22b36bb402ce06b99e0a1703ed",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29697,
        "upload_time": "2020-10-20T20:17:22",
        "upload_time_iso_8601": "2020-10-20T20:17:22.414789Z",
        "url": "https://files.pythonhosted.org/packages/b6/f2/66c51895c3c31e6fed3adab7b6265eed5c4ba2814107ee56a142488a1b46/signalfx-tracing-1.6.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee4ab26a911419af2144f1bfd4454774fd7b7c57409b54d9400c96604e3b4508",
          "md5": "1eebb9c14500232200040d196604773d",
          "sha256": "2c6cc7c1e2a3bdbc83439001ba396e27171324bbe96fc602d841f3434ad7f2a1"
        },
        "downloads": -1,
        "filename": "signalfx-tracing-1.6.4.tar.gz",
        "has_sig": false,
        "md5_digest": "1eebb9c14500232200040d196604773d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 33550,
        "upload_time": "2020-10-21T21:03:57",
        "upload_time_iso_8601": "2020-10-21T21:03:57.963621Z",
        "url": "https://files.pythonhosted.org/packages/ee/4a/b26a911419af2144f1bfd4454774fd7b7c57409b54d9400c96604e3b4508/signalfx-tracing-1.6.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6df4bc1d9638da1a93feef526c9eefe49c974a2365cbbdc4caaf03dae4d7e2f7",
          "md5": "e13aba704360bb95b65edb946e2a7a02",
          "sha256": "fc9270e8d936c7ef783b689288af6f4974150ad717b685151ea84e322856b2cd"
        },
        "downloads": -1,
        "filename": "signalfx-tracing-1.6.5.tar.gz",
        "has_sig": false,
        "md5_digest": "e13aba704360bb95b65edb946e2a7a02",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 33549,
        "upload_time": "2020-10-22T18:49:31",
        "upload_time_iso_8601": "2020-10-22T18:49:31.289931Z",
        "url": "https://files.pythonhosted.org/packages/6d/f4/bc1d9638da1a93feef526c9eefe49c974a2365cbbdc4caaf03dae4d7e2f7/signalfx-tracing-1.6.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d3266067ef5667cb84c0429ee4b2d12ee430943d17baf507f0fe6dc6c57863f1",
          "md5": "bb601f6ee58e870c962f7c52a40da94e",
          "sha256": "f4de99eae6701485c5cd2f2543960f7b4488b93d87f07c7f8b4651ee9d616d78"
        },
        "downloads": -1,
        "filename": "signalfx-tracing-1.6.6.tar.gz",
        "has_sig": false,
        "md5_digest": "bb601f6ee58e870c962f7c52a40da94e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 33594,
        "upload_time": "2020-12-18T14:48:58",
        "upload_time_iso_8601": "2020-12-18T14:48:58.549714Z",
        "url": "https://files.pythonhosted.org/packages/d3/26/6067ef5667cb84c0429ee4b2d12ee430943d17baf507f0fe6dc6c57863f1/signalfx-tracing-1.6.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "59ebf372ae8fe457872785adad30518f60cc9f5f0d4ba5b3930b949d75799c5c",
          "md5": "8e38d59dd4345599fbdb90cf587e88ce",
          "sha256": "e9db071f73319eaebd7621210b7d16738cd5390ebef9cba6591253a7866c6b31"
        },
        "downloads": -1,
        "filename": "signalfx-tracing-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8e38d59dd4345599fbdb90cf587e88ce",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29333,
        "upload_time": "2021-01-25T20:04:40",
        "upload_time_iso_8601": "2021-01-25T20:04:40.619623Z",
        "url": "https://files.pythonhosted.org/packages/59/eb/f372ae8fe457872785adad30518f60cc9f5f0d4ba5b3930b949d75799c5c/signalfx-tracing-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e5208fa36f347daf4e576c1ffb3c01501779cba9a84fe573c0a6e52219b8ddb0",
          "md5": "fc3a098baae28aa5491f45c1e6d605f6",
          "sha256": "583020acd71753197321d4b648cee5e2b939c22b6a6e4eef69da0a05738807ee"
        },
        "downloads": -1,
        "filename": "signalfx-tracing-2.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "fc3a098baae28aa5491f45c1e6d605f6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29354,
        "upload_time": "2021-02-02T13:27:08",
        "upload_time_iso_8601": "2021-02-02T13:27:08.608061Z",
        "url": "https://files.pythonhosted.org/packages/e5/20/8fa36f347daf4e576c1ffb3c01501779cba9a84fe573c0a6e52219b8ddb0/signalfx-tracing-2.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e4cec3d89379910e1d101418e11f3535e438b15ecec9847d3483c7c2db13a1af",
          "md5": "bb5f6ef987a592eaaeff609bbd15fef5",
          "sha256": "95106c3d3059a8ab4207a0de5abeaa75bfc105ac1561f93c3b082a0e947fefe8"
        },
        "downloads": -1,
        "filename": "signalfx-tracing-2.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bb5f6ef987a592eaaeff609bbd15fef5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 34561,
        "upload_time": "2021-04-23T10:09:27",
        "upload_time_iso_8601": "2021-04-23T10:09:27.041258Z",
        "url": "https://files.pythonhosted.org/packages/e4/ce/c3d89379910e1d101418e11f3535e438b15ecec9847d3483c7c2db13a1af/signalfx-tracing-2.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "afca345d7fd099d35d8a8120c5da8106f13cf490090314806ef2102e365aa89a",
          "md5": "bf1e7a20424776135db4d9b6cb7cfad8",
          "sha256": "a45729b9c91d629b382e7932603042e71fe5dd4ffa6b8b89165a0da3ab698cd3"
        },
        "downloads": -1,
        "filename": "signalfx_tracing-2.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bf1e7a20424776135db4d9b6cb7cfad8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 93822,
        "upload_time": "2021-11-04T16:09:58",
        "upload_time_iso_8601": "2021-11-04T16:09:58.450233Z",
        "url": "https://files.pythonhosted.org/packages/af/ca/345d7fd099d35d8a8120c5da8106f13cf490090314806ef2102e365aa89a/signalfx_tracing-2.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "afca345d7fd099d35d8a8120c5da8106f13cf490090314806ef2102e365aa89a",
        "md5": "bf1e7a20424776135db4d9b6cb7cfad8",
        "sha256": "a45729b9c91d629b382e7932603042e71fe5dd4ffa6b8b89165a0da3ab698cd3"
      },
      "downloads": -1,
      "filename": "signalfx_tracing-2.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "bf1e7a20424776135db4d9b6cb7cfad8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 93822,
      "upload_time": "2021-11-04T16:09:58",
      "upload_time_iso_8601": "2021-11-04T16:09:58.450233Z",
      "url": "https://files.pythonhosted.org/packages/af/ca/345d7fd099d35d8a8120c5da8106f13cf490090314806ef2102e365aa89a/signalfx_tracing-2.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}