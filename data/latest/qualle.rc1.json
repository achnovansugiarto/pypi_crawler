{
  "info": {
    "author": "AutoSE",
    "author_email": "autose@zbw.eu",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "# Qualle\n![CI](https://github.com/zbw/qualle/actions/workflows/main.yml/badge.svg)\n[![codecov](https://codecov.io/gh/zbw/qualle/branch/master/graph/badge.svg?token=ZE7OWKA83Q)](https://codecov.io/gh/zbw/qualle)\n\nThis is an implementation of the Qualle framework as proposed in the paper\n[1] and accompanying source code.\n\nThe framework allows to train a model which can be used to predict\nthe quality of the result of applying a multi-label classification (MLC) \nmethod on a document. In this implementation, only the\n[recall](https://en.wikipedia.org/wiki/Precision_and_recall) \nis predicted for a document, but in principle\nany document-level quality estimation (such as the prediction of precision) \ncan be implemented analogously.\n\nQualle provides a command-line interface to train\nand evaluate models. In addition, a REST webservice for predicting\nthe recall of a MLC result is provided.\n\n### Command line interface (CLI)\nIn order to run the CLI, you must install the packages from the Pipfile.\nThe interface is then accessible from the module ``qualle.main``. To\nsee the help message, run (inside the Qualle directory)\n\n``python -m qualle.main -h``\n\n\n### Train\nIn order to train a model you have to provide a training data file.\nThis file has to be a tabular-separated file (tsv) in the format (tabular is marked with ``\\t``)\n\n```document-content\\tpredicted_labels_with_scores\\ttrue_labels```\n\nwhere\n- ``document-content`` is a string describing the content of the document\n(more precisely: the string on which the MLC method is trained), e.g. the title\n- ``predicted_labels_with_scores`` is a comma-separated list of pairs ``predicted_label:confidence-score``\n(this is basically the output of the MLC method)\n- ``true_labels`` is a comma-separated list of true labels (ground truth)\n\nFor example, a row in the data file could look like this:\n\n``Optimal investment policy of the regulated firm\\tConcept0:0.5,Concept1:1\\tConcept0,Concept3``\n\nTo train a model, use the ``main`` module inside ``qualle``, e.g.:\n\n``python -m qualle.main train /path/to/train_data_file /path/to/output/model``\n\nIt is also possible to use label calibration using the subthesauri of a thesaurus (such as the [STW](http://zbw.eu/stw/version/latest/about))\nas categories (please read the paper for more explanations). Consult the help (see above) for the required options.\n\n### Evaluate\nYou must provide a test data file and the path to a trained model in order to evaluate that model.\nThe test data file has the same format as the training data file. Metrics\nsuch as the [explained variation](https://en.wikipedia.org/wiki/Explained_variation) are printed out, describing the quality\nof the recall prediction (please consult the paper for more information).\n\n### REST interface\nTo perform the prediction on a MLC result, a REST interface can be started. \n[uvicorn](https://www.uvicorn.org/) is used as HTTP server. You can also use any\nASGI server implementation and create the ASGI app directly with the method\n``qualle.interface.rest.create_app``. You need to provide the environment variable\nMODEL_FILE with the path to the model (see ``qualle.interface.config.RESTSettings``).\n\nThe REST endpoint expects a HTTP POST with the result of a MLC for a list of documents\nas body. The format is JSON as specified in ``qualle/openapi.json``. You can also use\nthe Swagger UI accessible at ``http://address_of_server/docs`` to play around a bit.\n\n### Deployment with Docker\nYou can use the Dockerfile included in this project to build a Docker image. E.g.:\n\n ``docker build -t qualle .``\n\nPer default, gunicorn is used to run the REST interface on ``0.0.0.0:8000``\nYou need to pass the required settings per environment variable. E.g.:\n\n``docker run --rm -it --env model_file=/model -v /path/to/model:/model -p 8000:8000 qualle``\n\nOf course you can also use the Docker image to train or evaluate by using a \ndifferent command as input to [docker run](https://docs.docker.com/engine/reference/run/#general-form).\n\n## References\n[1] [Toepfer, Martin, and Christin Seifert. \"Content-based quality estimation for automatic subject indexing of short texts under precision and recall constraints.\" International Conference on Theory and Practice of Digital Libraries. Springer, Cham, 2018., DOI 10.1007/978-3-030-00066-0_1](https://arxiv.org/abs/1806.02743)\n\n## Context information\nThis code was created as part of the subject indexing automatization effort at [ZBW - Leibniz Information Centre for Economics](https://www.zbw.eu/en/). See [our homepage](https://www.zbw.eu/en/about-us/key-activities/automated-subject-indexing) for more information, publications, and contact details.\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/zbw/qualle",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "qualle",
    "package_url": "https://pypi.org/project/qualle/",
    "platform": null,
    "project_url": "https://pypi.org/project/qualle/",
    "project_urls": {
      "Homepage": "https://github.com/zbw/qualle"
    },
    "release_url": "https://pypi.org/project/qualle/0.1.1/",
    "requires_dist": [
      "fastapi (<0.67,>=0.66)",
      "pydantic (<1.9,>=1.8.2)",
      "rdflib (<4.3,>=4.2)",
      "scikit-learn (<0.25,>=0.24)",
      "scipy (<1.7,>=1.6)",
      "stwfsapy (==0.1.5)",
      "uvicorn (<0.15,>=0.14)"
    ],
    "requires_python": ">=3.8,<3.10",
    "summary": "A framework to predict the quality of a multi-label classification result",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17332802,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "06ce06c0277bb06f6ab71d011a5ce2accec854c513557fd8a1eb7ec2e6447e2e",
          "md5": "ff6b79b529ff71790368aff344acd0a5",
          "sha256": "5ab753e7e1569bb928c01563d55e2eb681c2861409a29a3c0f6f001433e1a9be"
        },
        "downloads": -1,
        "filename": "qualle-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ff6b79b529ff71790368aff344acd0a5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<3.10",
        "size": 35027,
        "upload_time": "2022-12-08T11:30:28",
        "upload_time_iso_8601": "2022-12-08T11:30:28.744183Z",
        "url": "https://files.pythonhosted.org/packages/06/ce/06c0277bb06f6ab71d011a5ce2accec854c513557fd8a1eb7ec2e6447e2e/qualle-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "60380166efa9809145b982b26697a275616c82138e6e024f2ae539ddd8a75bc4",
          "md5": "5f71f8c4b63d1c275930d85361f196ab",
          "sha256": "1d4445c80e4be666a74228a5df8e3127ba4e942470835e35d551d0681a5cc7b0"
        },
        "downloads": -1,
        "filename": "qualle-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5f71f8c4b63d1c275930d85361f196ab",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<3.10",
        "size": 21852,
        "upload_time": "2022-12-08T11:30:30",
        "upload_time_iso_8601": "2022-12-08T11:30:30.278978Z",
        "url": "https://files.pythonhosted.org/packages/60/38/0166efa9809145b982b26697a275616c82138e6e024f2ae539ddd8a75bc4/qualle-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "06ce06c0277bb06f6ab71d011a5ce2accec854c513557fd8a1eb7ec2e6447e2e",
        "md5": "ff6b79b529ff71790368aff344acd0a5",
        "sha256": "5ab753e7e1569bb928c01563d55e2eb681c2861409a29a3c0f6f001433e1a9be"
      },
      "downloads": -1,
      "filename": "qualle-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ff6b79b529ff71790368aff344acd0a5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<3.10",
      "size": 35027,
      "upload_time": "2022-12-08T11:30:28",
      "upload_time_iso_8601": "2022-12-08T11:30:28.744183Z",
      "url": "https://files.pythonhosted.org/packages/06/ce/06c0277bb06f6ab71d011a5ce2accec854c513557fd8a1eb7ec2e6447e2e/qualle-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "60380166efa9809145b982b26697a275616c82138e6e024f2ae539ddd8a75bc4",
        "md5": "5f71f8c4b63d1c275930d85361f196ab",
        "sha256": "1d4445c80e4be666a74228a5df8e3127ba4e942470835e35d551d0681a5cc7b0"
      },
      "downloads": -1,
      "filename": "qualle-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "5f71f8c4b63d1c275930d85361f196ab",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<3.10",
      "size": 21852,
      "upload_time": "2022-12-08T11:30:30",
      "upload_time_iso_8601": "2022-12-08T11:30:30.278978Z",
      "url": "https://files.pythonhosted.org/packages/60/38/0166efa9809145b982b26697a275616c82138e6e024f2ae539ddd8a75bc4/qualle-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}