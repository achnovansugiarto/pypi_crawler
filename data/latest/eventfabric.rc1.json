{
  "info": {
    "author": "Mariano Guerra",
    "author_email": "mariano@marianoguerra.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Environment :: MacOS X",
      "Environment :: No Input/Output (Daemon)",
      "Environment :: Other Environment",
      "Environment :: Win32 (MS Windows)",
      "Intended Audience :: Developers",
      "Intended Audience :: Information Technology",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: OS Independent",
      "Operating System :: Other OS",
      "Operating System :: POSIX",
      "Operating System :: POSIX :: BSD",
      "Operating System :: POSIX :: Linux",
      "Operating System :: POSIX :: Other",
      "Operating System :: POSIX :: SunOS/Solaris",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3",
      "Topic :: Communications",
      "Topic :: Internet",
      "Topic :: Internet :: Log Analysis",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: System :: Monitoring",
      "Topic :: System :: Networking",
      "Topic :: System :: Networking :: Monitoring"
    ],
    "description": "Event Fabric API Client\n=======================\n\nPython 2 and 3 implementation of Event Fabric API to send events.\n\nSetup\n-----\n\nThe library dependes on the `Requests <http://docs.python-requests.org/en/latest/>`_ HTTP library, install it with::\n\n    pip install requests\n\nUsage\n-----\n\nsee the examples folder for more usage examples\n\n::\n\n    # import the library\n    >>> import eventfabric as ef\n\n    # create a client instance specifying username and password\n    >>> client = ef.Client(\"username\", \"password\")\n\n    # authenticate, should return True and 200, if not there was an error\n    >>> client.login()\n    (True, <Response [200]>)\n\n    # create an event instance\n\n    # the first parameter is a free form JSON\n    # value that contains information about the event\n\n    # the second is the name of the channel where that event will go to\n\n    # the channel is used to subscribe to a stream of events with the same\n    # channel id\n    >>> event1 = ef.Event({\"name\": \"Bob\", \"count\": 10}, \"my.channel\")\n\n    # send the event, it should return True and 201, if not there was an error,\n    # make sure to check for authentication errors on long running agents to\n    # reauthenticate in case your credentials expire\n    >>> client.send_event(event1)\n    (True, <Response [201]>)\n\nTest\n----\n\n::\n\n    python tests/eventfabric_tests.py\n\nLicense\n-------\n\nMIT",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/EventFabric/python-api",
    "keywords": null,
    "license": "MIT License",
    "maintainer": null,
    "maintainer_email": null,
    "name": "eventfabric",
    "package_url": "https://pypi.org/project/eventfabric/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/eventfabric/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/EventFabric/python-api"
    },
    "release_url": "https://pypi.org/project/eventfabric/0.1.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Event Fabric API client library",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 833351,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c044a2662556a214be906740b03c7bcdb9f287bc19b5469779b85cda561eb9e6",
          "md5": "504b551c906336ea3e5052f7ecdc403c",
          "sha256": "75856e7536f06c7192984ae3fc1ad4b45e149c15867564ce531014c65a0c9662"
        },
        "downloads": -1,
        "filename": "eventfabric-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "504b551c906336ea3e5052f7ecdc403c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3100,
        "upload_time": "2013-08-06T11:23:46",
        "upload_time_iso_8601": "2013-08-06T11:23:46.667363Z",
        "url": "https://files.pythonhosted.org/packages/c0/44/a2662556a214be906740b03c7bcdb9f287bc19b5469779b85cda561eb9e6/eventfabric-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c044a2662556a214be906740b03c7bcdb9f287bc19b5469779b85cda561eb9e6",
        "md5": "504b551c906336ea3e5052f7ecdc403c",
        "sha256": "75856e7536f06c7192984ae3fc1ad4b45e149c15867564ce531014c65a0c9662"
      },
      "downloads": -1,
      "filename": "eventfabric-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "504b551c906336ea3e5052f7ecdc403c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3100,
      "upload_time": "2013-08-06T11:23:46",
      "upload_time_iso_8601": "2013-08-06T11:23:46.667363Z",
      "url": "https://files.pythonhosted.org/packages/c0/44/a2662556a214be906740b03c7bcdb9f287bc19b5469779b85cda561eb9e6/eventfabric-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}