{
  "info": {
    "author": "Steinwurf ApS",
    "author_email": "contact@steinwurf.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Plugins",
      "Environment :: Web Environment",
      "Framework :: Sphinx :: Extension",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Documentation",
      "Topic :: Documentation :: Sphinx",
      "Topic :: Software Development :: Documentation",
      "Topic :: Text Processing",
      "Topic :: Utilities"
    ],
    "description": "============\nIntroduction\n============\n\n|PyPi| |Waf Python Tests| |Black| |Flake8| |Pip Install|\n\n.. |PyPi| image:: https://badge.fury.io/py/giit.svg\n    :target: https://badge.fury.io/py/giit\n\n.. |Waf Python Tests| image:: https://github.com/steinwurf/giit/actions/workflows/waf.yml/badge.svg\n   :target: https://github.com/steinwurf/giit/actions/workflows/waf.yml\n\n.. |Flake8| image:: https://github.com/steinwurf/giit/actions/workflows/flake8.yml/badge.svg\n    :target: https://github.com/steinwurf/giit/actions/workflows/flake8.yml\n\n.. |Black| image:: https://github.com/steinwurf/giit/actions/workflows/black.yml/badge.svg\n      :target: https://github.com/steinwurf/giit/actions/workflows/black.yml\n\n.. |Pip Install| image:: https://github.com/steinwurf/giit/actions/workflows/pip.yml/badge.svg\n      :target: https://github.com/steinwurf/giit/actions/workflows/pip.yml\n\n\nThe Git Iterator ``giit`` is a small tool for running commands on\nbranches and tags of a git repository.\n\nIt's original purpose was to allow Sphinx documentation to be easily\ngenerated for all available tags of a bunch of different repositories. However,\nshould you find a different use for it - you should also be able to adapt it\nto other scenarios.\n\n.. contents:: Table of Contents:\n   :local:\n\nQuick Start\n===========\n\nTo use ``giit`` you define a ``giit.json`` file which contains the steps\nyou want ``giit`` to be able to run. Note, the ``giit.json`` file can\nlive in the root of the repository.\n\nLet's say we want to generate the Sphinx documentation for a specific\nrepository.\n\nInstallation\n------------\n\n``giit`` is a Python package so you can ``pip install`` it. If you just want to\ntry it out use a virtualenv or similar::\n\n    $ virtualenv giit\n    $ source giit/bin/activate\n\nNow install the ``giit`` package::\n\n    $ pip install giit\n\n\nExample: C++ project documentation ``endian``\n---------------------------------------------\n\n``giit`` uses a ``giit.json`` file to describe the different steps::\n\n    {\n        \"docs\": {\n            \"branches.regex.filters\": [\n                \"origin/master\"\n            ],\n            \"scripts\": [\n                \"sphinx-build -b html . ${build_path}\"\n            ],\n            \"cwd\": \"${source_path}/docs\",\n            \"requirements\": \"${source_path}/docs/requirements.txt\"\n        }\n    }\n\nLets build the ``endian`` Sphinx documentation\n(https://steinwurf-endian.netlify.app/latest/) by running ``giit``::\n\n    giit docs https://github.com/steinwurf/endian.git --config_path ./giit.json\n\nYou should now seem something like::\n\n    Lets go: docs\n    Building into: /tmp/giit/data/build/endian-30a816\n    Using git version: 2.34.1\n    Using git repository: https://github.com/steinwurf/endian.git\n    Running: git clone into /tmp/giit/data/clones/endian-30a816\n    Using giit.json from path /tmp/giit_cwd/giit.json\n    Tasks generated 1\n    Running task [1/1]: scope 'branch' name 'master' checkout 'origin/master'\n    Python: sphinx-build -b html . /tmp/giit/data/build/endian-30a816\n\nIf you visit ``/tmp/giit/data/build/endian-30a816`` with your web browser\nyou should be able to see the ``endian`` Sphinx documentation.\n\n``giit.json`` location\n======================\n\nSince the content of the ``giit.json`` file fully determines the steps\ntaken by ``giit`` understanding how the ``giit.json`` file is found is\nquite important.\n\nThe following outlines the rules:\n\n1. Passing a path using ``--config_path`` or passing a branch\n   using ``--config_branch``.\n\n2. If no config path or branch is passed by the user and ``giit`` is\n   invoked with an URL (like in the ``endian`` example).\n\n   Example::\n\n        giit docs https://github.com/endian/endian.git\n\n   In this case ``giit`` will look at the root of the repository in\n   ``origin/master`` branch for a ``giit.json``.\n\n3. If no config path or branch is passed by the user and ``giit`` is\n   invoked with a path::\n\n       git docs ../path/to/repo\n\n   In this case ``giit`` will try to find a ``giit.json`` at\n   ``../path/to/repo/giit.json``.\n\nFilters and tasks\n=================\n\nAs we saw in the ``endian`` example a single task is generated for building\nthe ``origin/master`` branch. We can generate more tasks by setting up more\nfilters.\n\nAs a quick note it is also possible to not specify any filters. In that case\na single task for running the specified scripts will be gererated (with a\nlimited context - see below).\n\nTo specify the different filters here are the available options:\n\n``branches.regex.filters``\n--------------------------\n\nThis is a list of regular expressions that will be matched against the branch\nname. If the regular expression matches a task will be generated.\n\nFor example (in ``giit.json``)::\n\n        \"branches.regex.filters\": [\n            \"origin/master\",\n            \"(\\d+\\.\\d+.\\d+)-LTS\"\n        ]\n\n\n``branches.source_branch``\n--------------------------\n\nWhen invoking ``giit`` with a path to a repository e.g.:\n``giit docs ../path/repo``. ``giit`` can be instructed to build the\nremote tracking branch currently checkout out in ``../path/repo``.\n\nThis is useful in continuous integration systems.\n\nFor example (in ``giit.json``)::\n\n        \"branches.source_branch\": true\n\n``tags.regex.filters``\n--------------------------\n\nThis is a list of regular expressions that will be matched against\nthe tag name. If the regular expression matches a task will be\ngenerated.\n\nFor example (in ``giit.json``)::\n\n        \"tags.regex.filters\": [\n            \"(\\d+\\.\\d+.\\d+)\"\n        ]\n\n``tags.semver.filters``\n------------------------\n\nIf a project uses sematic versioning the semver filter can be used.\n\nFor example (in ``giit.json``)::\n\n        \"tags.semver.filters\": [\n            \">=0.1.1\", \"<0.3.0\"\n        ]\n\nWe use https://python-semanticversion.readthedocs.io/en/latest/ you\ncan find more examples of requirement specifications there.\n\n``tags.semver.relaxed``\n-----------------------\n\nIf a project uses \"kind-of\" semver, such as ``1.20``, you can set the\nsemver filter in relaxed mode and still use the filters.\n\nFor example (in ``giit.json``)::\n\n    \"tags.semver.relaxed\": true\n\n``workingtree``\n---------------\n\nThe ``workingtree`` filter is useful for quickly iterating on stuff.\nIt is similar to the ``source_branch`` filter. In that if ``giit`` is\ninvoked with a path, then that path will be the ``workingtree`` this\nallows you to run ``giit`` without commit'ing pushing changes.\n\nFor example (in ``giit.json``)::\n\n    \"workingtree\": true\n\nNo filter\n---------\n\nIf you pass no filter e.g. ``tags``, ``branches`` or ``workingtree``, giit\nwill generate a single task for just running the script.\n\nCommand-line filtering\n----------------------\n\nPer default ``giit`` will run all tasks generated by the config file. By specifying\nthe task_filter argument you can filter which tasks are run.\nAny tasks that doesn't match the given shell-style wildcard\nexpression will not be run.\nThe special characters used in shell-style wildcards are:\n\n+------------+------------------------------------+\n| Pattern    | Meaning                            |\n+============+====================================+\n| ``*``      | matches everything                 |\n+------------+------------------------------------+\n| ``?``      | matches any single character       |\n+------------+------------------------------------+\n| ``[seq]``  | matches any character in *seq*     |\n+------------+------------------------------------+\n| ``[!seq]`` | matches any character not in *seq* |\n+------------+------------------------------------+\n\nContext and variables\n=====================\n\nIn the ``endian`` example you may have noticed what we used the\n``${build_path}`` and ``${source_path}`` in the ``json`` configuration.\n\nThese denote variables that will be substituted when running the\ntasks. The following variables are always available:\n\n* ``build_path``: This points to the directory where the command\n  is expected to output any artifacts produced by the command. It is\n  up to the ``giit.json`` author to ensure this happens.\n\n* ``source_path``: This is the path to where the current git\n  repository is checked out.\n\n* ``checkout``: This is the checkout of that was used.\n\n* ``name``: This is a shorter version of checkout. E.g. for branches\n  if the checkout is ``origin/master`` the name will be ``master``.\n  Also if the ``checkout`` contains ``/`` that may result in\n  unwanted sub-directories. In the ``name`` we replace ``/`` with ``_``.\n  So if a branch is called ``origin/bug/543`` the name will be ``bug_543``.\n\n* ``scope``: This can be one of three values. Either ``tag``,\n  ``branch`` or ``workingtree``.\n\nNote, only the ``${build_path}`` variable is available when running without\nany filters.\n\nExample\n-------\n\nHere we will use the ``${name}`` variable to output documentation\nfor the different tags to different folders::\n\n    {\n        \"docs\": {\n            \"branches.regex.filters\": [\n                \"origin/master\"\n            ],\n            \"tags.semver.filters\": [\n                \">=1.20\"\n            ],\n            \"tags.semver.relaxed\": true,\n            \"scripts\": [\n                \"sphinx-build -b html . ${build_path}/${name}\"\n            ],\n            \"python_path\": \"${source_path}/src\",\n            \"cwd\": \"${source_path}/docs\",\n            \"requirements\": \"${source_path}/docs/requirements.txt\"\n        }\n    }\n\nUser variables\n--------------\n\nIn some cases we want to define our own variables according to some\nsimple rules.\n\nThis is done either using the ``variables`` attribute in the json or by using\nthe ``--variable [name] [value]`` command line argument.\n\nUser variables are define using the following syntax::\n\n    scope:remote_branch:variable_name\n\nWhere ``scope`` and ``remote_branch`` are optional.\n\nThis can be used to customize e.g. the output of a command. Consider\nthe following example::\n\n    {\n        \"docs\": {\n            ...\n            \"scripts\": [\n                \"sphinx-build -b html . ${output_path}\"\n            ],\n            \"variables\": {\n                \"branch:origin/master:output_path\": \"${build_path}/docs/latest\",\n                \"branch:output_path\": \"${build_path}/sphinx/${name}\",\n                \"tag:output_path\": \"${build_path}/docs/${name}\",\n                \"workingtree:output_path\": \"${build_path}/workingtree/sphinx\"\n            }\n        }\n    }\n\nWhen calling ``giit docs ...`` we use the user defined ``output_path``\nvariable.\n\nLet walk though the different values ``output_path`` can take.\n\n* If scope is ``branch`` and the branch is ``origin/master`` then\n  ``output_path`` will be ``${build_path}/docs/latest``.\n* For all other branches ``output_path`` will be\n  ``${build_path}/sphinx/${name}`` where ``${name}`` will be the\n  branch name.\n* For the tags ``output_path`` will be ``${build_path}/docs/${name}``\n  where name is the tag value e.g. ``1.0.0`` etc.\n* Finally if we are in the ``workingtree`` scope the ``output_path``\n  variable will be ``${build_path}/workingtree/sphinx``\n\nLets see how this could look (``build_path`` is ``/tmp/project``)::\n\n    Tag 1.0.0 -----------> /tmp/project/docs/1.0.0\n    Tag 2.0.0 -----------> /tmp/project/docs/2.0.0\n    Tag 2.1.0 -----------> /tmp/project/docs/2.1.0\n    Tag 3.0.0 -----------> /tmp/project/docs/3.0.0\n    Branch master -------> /tmp/project/docs/latest\n    Branch trying_new ---> /tmp/project/sphinx/trying_new\n    Branch new_idea -----> /tmp/project/sphinx/new_idea\n    Workingtree ---------> /tmp/project/workingtree\n\n\nOptional Variables\n==================\nIn some cases you may want to have optional variables. These can be specified\nin a similar way as with non optional variables, the only difference is that you\nneed to use the ``£`` character instead of the ``$`` character.\nIf the variable doesn't exists it simply be removed.\n\n\nEscaping Variable Replacements\n==============================\nIf you want to use either ``$`` or ``£`` as characters in the giit configuration\nfile, you need to escape them.\nThis is done using ``$$`` or ``££`` respectively.\n\n\n``giit`` command line arguments\n===============================\n\nThe ``giit`` tool takes two mandatory arguments and a number of options::\n\n    giit STEP REPOSITORY [--options]\n\nArgument: ``STEP``\n------------------\n\nSelects the step in the ``giit.json`` file to run.\n\nArgument: ``REPOSITORY``\n------------------------\n\nThe URL or path to the git repository.\n\nOption: ``--build_path``\n------------------------\n\nSets the build path (i.e. where the output artifacts/data) will be generated/\nbuilt. This argument is available in the ``giit.json`` as the ``${build_path}``\nvariable.\n\nOption: ``--giit_path``\n-----------------------\n\nThis path is where the ``giit`` tool will store configurations, virtualenvs\nclones created while running the tool. It also serves as a cache, to speed up\nbuilds.\n\nOption: ``--config_branch``\n---------------------------\n\nSpecifies the a branch where the ``giit.json`` file will be take from.\n\nOption: ``--config_path``\n-------------------------\n\nSets the path to where the ``giit.json`` file.\n\nOption ``--variable``\n---------------------\n\nExtends the variables set for each step.\n\nOption ``-v`` / ``--verbose``\n------------------------------\n\nAllows the verbosity level of the tool to be increased\ngenerating more debug information on the command line.\n\n\nThe ``clean`` step\n==================\n\nThis step is always defined, in addition to the steps defined in\nthe ``giit.json`` file. The ``clean`` step just remove the\n``build_path``.\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/steinwurf/",
    "keywords": "giit",
    "license": "BSD 3-clause \"New\" or \"Revised\" License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "giit",
    "package_url": "https://pypi.org/project/giit/",
    "platform": null,
    "project_url": "https://pypi.org/project/giit/",
    "project_urls": {
      "Homepage": "https://github.com/steinwurf/"
    },
    "release_url": "https://pypi.org/project/giit/8.0.0/",
    "requires_dist": [
      "click",
      "colorama",
      "schema",
      "semantic-version",
      "six",
      "virtualenv"
    ],
    "requires_python": "",
    "summary": "Wrapper git to automate running scripts.",
    "version": "8.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13840379,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d315339c33a400d6338bd164b3558cdcd696162127ea3f97b52e8b8af1051ed6",
          "md5": "bd26182210b8507067722c8674d8826a",
          "sha256": "d8d20f8e12a731474dc6da2b93131a2eea4131090bfe8f8bdbaa5daa9af20d79"
        },
        "downloads": -1,
        "filename": "giit-1.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bd26182210b8507067722c8674d8826a",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 27091,
        "upload_time": "2018-06-26T07:37:23",
        "upload_time_iso_8601": "2018-06-26T07:37:23.340511Z",
        "url": "https://files.pythonhosted.org/packages/d3/15/339c33a400d6338bd164b3558cdcd696162127ea3f97b52e8b8af1051ed6/giit-1.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "94a7c416210e8100b5070c89997d1dec0de91cede9974c0fa04bea2d3beeb49c",
          "md5": "65a8aec69ee656dee0cc7b6a9a4a6e49",
          "sha256": "688f7ea2f0a98c5d00bf4df49e3de7f47447ac4988956264d00032e47fc9cc5c"
        },
        "downloads": -1,
        "filename": "giit-1.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "65a8aec69ee656dee0cc7b6a9a4a6e49",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 27170,
        "upload_time": "2018-06-26T10:17:11",
        "upload_time_iso_8601": "2018-06-26T10:17:11.448716Z",
        "url": "https://files.pythonhosted.org/packages/94/a7/c416210e8100b5070c89997d1dec0de91cede9974c0fa04bea2d3beeb49c/giit-1.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fea6390e70bb881ee26fe3b8a81f3e54b8e5c858d6cd5d87257ae803a8a810c6",
          "md5": "1ef490b3948b02ca87091a72b9f56291",
          "sha256": "3b033c03e5f7d35eb2c575a6acbcd9a27e6a63f36a572e7b472c4287c9af43b6"
        },
        "downloads": -1,
        "filename": "giit-1.0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1ef490b3948b02ca87091a72b9f56291",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 27167,
        "upload_time": "2018-06-26T11:36:19",
        "upload_time_iso_8601": "2018-06-26T11:36:19.184651Z",
        "url": "https://files.pythonhosted.org/packages/fe/a6/390e70bb881ee26fe3b8a81f3e54b8e5c858d6cd5d87257ae803a8a810c6/giit-1.0.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "549d3aec83cbfc0fe27638712eb11b8a6e09b1f1a1b09abb6198dd71ea6e9923",
          "md5": "cf36ebfc529de8c9bc933c30965efa15",
          "sha256": "eb1641661ce899aaa60f0153271a48197f80814fd4a31d3791482889ed9bb59c"
        },
        "downloads": -1,
        "filename": "giit-1.0.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cf36ebfc529de8c9bc933c30965efa15",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 27220,
        "upload_time": "2018-06-26T14:49:24",
        "upload_time_iso_8601": "2018-06-26T14:49:24.393564Z",
        "url": "https://files.pythonhosted.org/packages/54/9d/3aec83cbfc0fe27638712eb11b8a6e09b1f1a1b09abb6198dd71ea6e9923/giit-1.0.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ce055e936080f39af10c2d5764ca91c328b1f44dd5d26b77235bd0c117f86e9b",
          "md5": "4e6d818dae145ff125e56f6de565764f",
          "sha256": "e3533dd8226cf09b8a7db3cc628acd6087c5541a7bc8e7b6cd07a11cff4540d3"
        },
        "downloads": -1,
        "filename": "giit-2.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4e6d818dae145ff125e56f6de565764f",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 27684,
        "upload_time": "2018-06-27T10:14:20",
        "upload_time_iso_8601": "2018-06-27T10:14:20.098208Z",
        "url": "https://files.pythonhosted.org/packages/ce/05/5e936080f39af10c2d5764ca91c328b1f44dd5d26b77235bd0c117f86e9b/giit-2.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7ee19ccdc6cdfe77fc4ebe560ecf48a9c06726ae30ef72e79a0ff3a57a2e0445",
          "md5": "b773f5c1aa4c03d2f71e494add9cbfb0",
          "sha256": "2ef39b390086238bf1338b664a5318872fb77f8b442e5c34cfbcdbe4c892a8df"
        },
        "downloads": -1,
        "filename": "giit-2.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b773f5c1aa4c03d2f71e494add9cbfb0",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 28152,
        "upload_time": "2018-06-27T13:24:38",
        "upload_time_iso_8601": "2018-06-27T13:24:38.163861Z",
        "url": "https://files.pythonhosted.org/packages/7e/e1/9ccdc6cdfe77fc4ebe560ecf48a9c06726ae30ef72e79a0ff3a57a2e0445/giit-2.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6cb7f2cec9339dc5120ceb450e83ba4d91405bcd95f70913b4e4e538ad53a0e1",
          "md5": "55064a9c4a2ff74c896e57cf8a32d75e",
          "sha256": "8017617e8dd8362c86a6bbcca190a45a7915ecba5cb6061511fa2cb48f03e3b5"
        },
        "downloads": -1,
        "filename": "giit-3.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "55064a9c4a2ff74c896e57cf8a32d75e",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 28612,
        "upload_time": "2018-06-29T12:28:28",
        "upload_time_iso_8601": "2018-06-29T12:28:28.355788Z",
        "url": "https://files.pythonhosted.org/packages/6c/b7/f2cec9339dc5120ceb450e83ba4d91405bcd95f70913b4e4e538ad53a0e1/giit-3.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9acc04e28b16ddbd0da73e7419141c52f323c3e4fe99be01936e29042f7bdac6",
          "md5": "28f3dd31818b4def923ef9af702d936c",
          "sha256": "b2e2a6d1ea5be6a9ccbc54a6a953d65fe6a8e6113be98a86a1c11b014649673d"
        },
        "downloads": -1,
        "filename": "giit-4.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "28f3dd31818b4def923ef9af702d936c",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 31922,
        "upload_time": "2020-02-04T05:19:35",
        "upload_time_iso_8601": "2020-02-04T05:19:35.423672Z",
        "url": "https://files.pythonhosted.org/packages/9a/cc/04e28b16ddbd0da73e7419141c52f323c3e4fe99be01936e29042f7bdac6/giit-4.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "95ab7bd465b4aacafdf05ee7be22328bc1c209c0489fe164394ae8cf477a1d1c",
          "md5": "c4c4008f9cab6d50b1756bffcd581b4c",
          "sha256": "f9babfbd498551b5b882c8a7e10ca19f7d060635763e48449f3303812485364d"
        },
        "downloads": -1,
        "filename": "giit-5.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c4c4008f9cab6d50b1756bffcd581b4c",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 31982,
        "upload_time": "2020-02-04T12:08:12",
        "upload_time_iso_8601": "2020-02-04T12:08:12.003526Z",
        "url": "https://files.pythonhosted.org/packages/95/ab/7bd465b4aacafdf05ee7be22328bc1c209c0489fe164394ae8cf477a1d1c/giit-5.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c79cd921fc4d0b35217d9be2a80e674420535ac35ef7122798fd7877117a6053",
          "md5": "ba88fadbe94bb15f1d045032fa0cb5ea",
          "sha256": "86bba21ff673ef5a6b45dee8fa3903e648b13176296cc4af8ece81597cafe702"
        },
        "downloads": -1,
        "filename": "giit-6.0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ba88fadbe94bb15f1d045032fa0cb5ea",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 30880,
        "upload_time": "2020-12-01T13:33:11",
        "upload_time_iso_8601": "2020-12-01T13:33:11.495014Z",
        "url": "https://files.pythonhosted.org/packages/c7/9c/d921fc4d0b35217d9be2a80e674420535ac35ef7122798fd7877117a6053/giit-6.0.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9013fda859708ffeea0c57ccb9adb5422d235fd4f29135629c91f9cfbe6bd9cb",
          "md5": "cd8b77b58ff6b71645e3a77c44b1fec5",
          "sha256": "ef434fd4ce6a8926d795694669bdcc8d8548a0ab725c22eaf8633b93048881f0"
        },
        "downloads": -1,
        "filename": "giit-6.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cd8b77b58ff6b71645e3a77c44b1fec5",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 31004,
        "upload_time": "2021-03-10T09:17:58",
        "upload_time_iso_8601": "2021-03-10T09:17:58.759623Z",
        "url": "https://files.pythonhosted.org/packages/90/13/fda859708ffeea0c57ccb9adb5422d235fd4f29135629c91f9cfbe6bd9cb/giit-6.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "7.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "09c5c04ab02f20f906720ac3b4fadb3af0b90471653ff1fca4d1bf4c2c51040f",
          "md5": "97136620f3335f55a5f96c1ce09ccd93",
          "sha256": "28dcf396226de301201b88a27e84954c112a9cecf0c6e6cfdada2c85642b6073"
        },
        "downloads": -1,
        "filename": "giit-7.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "97136620f3335f55a5f96c1ce09ccd93",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 30760,
        "upload_time": "2022-05-05T11:59:19",
        "upload_time_iso_8601": "2022-05-05T11:59:19.291081Z",
        "url": "https://files.pythonhosted.org/packages/09/c5/c04ab02f20f906720ac3b4fadb3af0b90471653ff1fca4d1bf4c2c51040f/giit-7.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "7.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b18a41c72c4861d4454da9d416338b871ea9947caa6b7118e0385dc112a3b8e4",
          "md5": "9b55caad0d10806f419252b01e26d1be",
          "sha256": "aaceeeff4091aa9bd82cf3be0f985acd1c4c1de435e5e9c6d1f58f9dd09f642a"
        },
        "downloads": -1,
        "filename": "giit-7.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9b55caad0d10806f419252b01e26d1be",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 31200,
        "upload_time": "2022-05-09T13:26:17",
        "upload_time_iso_8601": "2022-05-09T13:26:17.890335Z",
        "url": "https://files.pythonhosted.org/packages/b1/8a/41c72c4861d4454da9d416338b871ea9947caa6b7118e0385dc112a3b8e4/giit-7.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "7.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "77aa31cd7dc0be309c70e87c0ace85ba41725d8f5ca33d67d1a5525f75496078",
          "md5": "7493972093552f9d484e90304e4d6857",
          "sha256": "39152e6815a489aed584289f7a932613662a91229b6da01be933d903c119bb1c"
        },
        "downloads": -1,
        "filename": "giit-7.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7493972093552f9d484e90304e4d6857",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 31192,
        "upload_time": "2022-05-12T11:08:24",
        "upload_time_iso_8601": "2022-05-12T11:08:24.874793Z",
        "url": "https://files.pythonhosted.org/packages/77/aa/31cd7dc0be309c70e87c0ace85ba41725d8f5ca33d67d1a5525f75496078/giit-7.1.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "7.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fda9b43e11bbb132b2f548dfa1c58a1e7b24a95d1d68f05cfb8d25e2968f0663",
          "md5": "2d957d48525e63ed84a4fcba7c195d6d",
          "sha256": "27b56531fcd45709d92f7e519fba394c5e2b900ecbcd5bec91e919677c853817"
        },
        "downloads": -1,
        "filename": "giit-7.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2d957d48525e63ed84a4fcba7c195d6d",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 32874,
        "upload_time": "2022-05-12T12:35:57",
        "upload_time_iso_8601": "2022-05-12T12:35:57.282157Z",
        "url": "https://files.pythonhosted.org/packages/fd/a9/b43e11bbb132b2f548dfa1c58a1e7b24a95d1d68f05cfb8d25e2968f0663/giit-7.2.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "7.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ae74db92056db5838b978ac754f389ed8aed63cbeacb829cf064b5c4fba66df0",
          "md5": "533dd0960917b77f62cadd4d52760bd3",
          "sha256": "9183068533fa4bffbdef9bbb884fc3178f07b7d5b09f7b2173dff473e6d5f68b"
        },
        "downloads": -1,
        "filename": "giit-7.2.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "533dd0960917b77f62cadd4d52760bd3",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 32874,
        "upload_time": "2022-05-16T07:22:07",
        "upload_time_iso_8601": "2022-05-16T07:22:07.373203Z",
        "url": "https://files.pythonhosted.org/packages/ae/74/db92056db5838b978ac754f389ed8aed63cbeacb829cf064b5c4fba66df0/giit-7.2.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "7.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e8604c78e67a23aff9937dcaf964cb9a4b347dabfbb49134327d50c84891396",
          "md5": "fed1ff6a684a737a7616d6d2f6a861af",
          "sha256": "6f0c3dc84cda0472afe7f5f4cd30a53dbe378d1d15258e53f052c6c420cf2042"
        },
        "downloads": -1,
        "filename": "giit-7.2.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fed1ff6a684a737a7616d6d2f6a861af",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 32907,
        "upload_time": "2022-05-16T11:00:07",
        "upload_time_iso_8601": "2022-05-16T11:00:07.372653Z",
        "url": "https://files.pythonhosted.org/packages/7e/86/04c78e67a23aff9937dcaf964cb9a4b347dabfbb49134327d50c84891396/giit-7.2.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "8.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70dbe9d42f70fe84ce55d40d0e11ca7d081e1bc0526189fedfaa50286389c73f",
          "md5": "de4ad8aafff8ed4330a7eb640ebccca6",
          "sha256": "76deba1622b00a88cbc7f5fcdd4b39c524f63b755a99958ea83b93981f25aedd"
        },
        "downloads": -1,
        "filename": "giit-8.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "de4ad8aafff8ed4330a7eb640ebccca6",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 31353,
        "upload_time": "2022-05-17T11:39:25",
        "upload_time_iso_8601": "2022-05-17T11:39:25.541914Z",
        "url": "https://files.pythonhosted.org/packages/70/db/e9d42f70fe84ce55d40d0e11ca7d081e1bc0526189fedfaa50286389c73f/giit-8.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "70dbe9d42f70fe84ce55d40d0e11ca7d081e1bc0526189fedfaa50286389c73f",
        "md5": "de4ad8aafff8ed4330a7eb640ebccca6",
        "sha256": "76deba1622b00a88cbc7f5fcdd4b39c524f63b755a99958ea83b93981f25aedd"
      },
      "downloads": -1,
      "filename": "giit-8.0.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "de4ad8aafff8ed4330a7eb640ebccca6",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 31353,
      "upload_time": "2022-05-17T11:39:25",
      "upload_time_iso_8601": "2022-05-17T11:39:25.541914Z",
      "url": "https://files.pythonhosted.org/packages/70/db/e9d42f70fe84ce55d40d0e11ca7d081e1bc0526189fedfaa50286389c73f/giit-8.0.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}