{
  "info": {
    "author": "nevermined-io",
    "author_email": "root@nevermined.io",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "[![banner](https://raw.githubusercontent.com/nevermined-io/assets/main/images/logo/banner_logo.png)](https://nevermined.io)\n\n# Nevermined Secret Store Client\n\n>    üê≥  Python client for Parity Secret Store.\n> [nevermined.io](https://nevermined.io)\n\n\n[![PyPI](https://img.shields.io/pypi/v/nevermined-secret-store.svg)](https://pypi.org/project/nevermined-secret-store/)\n[![Python package](https://github.com/nevermined-io/secret-store-client-py/workflows/Python%20package/badge.svg)](https://github.com/nevermined-io/secret-store-client-py/actions)\n\n---\n\n## Table of Contents\n\n- [Nevermined Secret Store Client](#nevermined-secret-store-client)\n  - [Table of Contents](#table-of-contents)\n  - [Features](#features)\n  - [Prerequisites](#prerequisites)\n  - [Quickstart](#quickstart)\n      - [Instantiate a publisher](#instantiate-a-publisher)\n      - [Publish a document](#publish-a-document)\n      - [Instantiate a consumer](#instantiate-a-consumer)\n      - [Decrypt the document](#decrypt-the-document)\n  - [Development](#development)\n      - [Download and compile the Parity Ethereum client](#download-and-compile-the-parity-ethereum-client)\n      - [Configure a publisher node](#configure-a-publisher-node)\n      - [Configure a consumer node](#configure-a-consumer-node)\n      - [Configure a Secret Store node](#configure-a-secret-store-node)\n      - [Deploy the test permission contract](#deploy-the-test-permission-contract)\n      - [Run the nodes](#run-the-nodes)\n      - [Execute integration tests](#execute-integration-tests)\n    - [TLDR](#tldr)\n  - [New Version](#new-version)\n  - [Attribution](#attribution)\n  - [License](#license)\n\n---\n\n## Features\n\n- Encrypt and publish encrypted documents to the Parity Secret Store.\n- Fetch and decrypt the documents from the Parity Secret Store, if permissions are given.\n\n## Prerequisites\n\n- A URL of a Secret Store node that accepts requests.\n- A supported version of Python. For details, see `setup.py`.\n- A JSON-RPC URL of the [Parity EVM client](https://github.com/paritytech/parity-ethereum). It is strongly recommended to run the client locally.\n\n- A publisher Ethereum account, for publishing documents.\n- A consumer Ethreum account, for consuming documents.\n\n## Quickstart\n\n#### Instantiate a publisher\n\n```\nfrom secret_store_client import Client\n\nsecret_store_url = 'http://localhost:8010'\nparity_client_url = 'http://localhost:8545'\npublisher_address = '0xc8307e6fbe40e97061a7b9f88b98df9249e4cefd'\npublisher_password = 'publisherpwd'\n\npublisher = Client(secret_store_url, parity_client_url,\n                   publisher_address, publisher_password)\n```\n\n#### Publish a document\n\n```\nimport hashlib\n\ndocument = 'mySecretDocument'\n# we need a 256 bit hash\ndocument_id = hashlib.sha256(document.encode()).hexdigest()\n\nencrypted = publisher.publish_document(document_id, document)\n```\n\nBy default, if there are multiple Secret Store nodes, all nodes are required to participate in the encryption process. You can allow one or more nodes to not participate by passing a custom `threshold` parameter:\n\n```\nencrypted = publisher.publish_document(document_id, document, threshold=1)\n```\n\nYou can find some guidance on how to choose a threshold [here](https://wiki.parity.io/Secret-Store#server-key-generation-session).\n\n#### Instantiate a consumer\n\n```\nfrom secret_store_client import Client\n\nsecret_store_url = 'http://localhost:8010'\nparity_client_url = 'http://localhost:8545'\nconsumer_address = '0xe887f790103a108e9c500cf167bfef019f5f41e0'\nconsumer_password = 'consumerpwd'\n\nconsumer = Client(secret_store_url, parity_client_url,\n                  consumer_address, consumer_password)\n```\n\n#### Decrypt the document\n\n```\ndecrypted = consumer.decrypt_document(document_id, encrypted)\n\nassert 'mySecretDocument' == decrypted\n```\n\n## Development\n\nThe Secret Store setup instructions in this section is a simplification of the instructions presented [here](https://wiki.parity.io/Secret-Store-Tutorial-1.html).\n\n#### Download and compile the Parity Ethereum client\n\nFollow these [instructions](https://wiki.parity.io/Secret-Store-Tutorial-1.html#1-enable-the-secret-store-feature-of-parity).\n\nPut the `./target/release/parity` binary somewhere on your PATH.\n\n#### Configure a publisher node\n\nMake a copy of the user configuration template.\n\n```\ncp integration_tests/configs/users.template.toml integration_tests/configs/users.toml\n```\n\nCreate an account.\n\n```\nparity --config integration_tests/configs/users.toml account new\n```\n\nIt asks you for a password and outputs an address.\n\n\nNow make a copy of the test configuration template.\n\n```\ncp integration_tests/configs/test_setup.template.conf integration_tests/configs/test_setup.conf\n```\n\nInsert your publisher password and address into the corresponding placeholders inside `test_setup.conf`.\n\n\n#### Configure a consumer node\n\nRepeat the steps from the previous section except for this time fill in consumer address and password in the configuration file.\n\n\n#### Configure a Secret Store node\n\nMake a copy of the Secret Store configuration template.\n\n```\ncp integration_tests/configs/secret_store.template.toml integration_tests/configs/secret_store.toml\n```\n\nCreate an account.\n\n```\nparity --config integration_tests/configs/secret_store.toml account new\n```\n\nIt asks you for a password and outputs an address.\n\nPut your password into `integration_tests/configs/ss.pwd`. Put the account address into the corresponding place\ninside `integration_tests/configs/secret_store.toml` and uncomment the `password =` line.\n\nRun the Secret Store node.\n\n```\nparity --config integration_tests/configs/secret_store.toml\n```\n\nIt outputs its public node URL.\n\n```\n...\nPublic node URL: enode://a67dd8d6ffbf81fdd98fdae6902c527c77de34bc6fc39ffa8767126ee71d73484f8f7f692c02f095682b2578e11af004ab68ba47d8a923a7b868a040d2f6d479@192.168.86.248:30301\n```\n\nInsert this URL into the `bootnodes` list of your `users.toml`.\n\n#### Deploy the test permission contract\n\nInstall `truffle`:\n\n```\nnpm -g install truffle@beta\n```\n\nNote the versions the process was tested with.\n```\nnpm 6.4.1\nnode v9.11.2\nTruffle v5.0.0-beta.1 (core: 5.0.0-beta.1)\nSolidity v0.4.25 (solc-js)\n```\n\nCompile the contract.\n\n```\ntruffle compile\n```\n\nDeploy the contract.\n\n```\ntruffle migrate\n```\n\nIt outputs \"contract address\". Copy it and insert as a value for `acl_contract` into `secret_store.toml`.\n\nRelaunch the node for the change to take action.\n\n#### Run the nodes\n\nThe steps above have to only be performed once. Every time you want to develop or test, just run the Secret Store node and the Parity Ethereum client.\n\nRun the Secret Store node:\n\n```\nparity --config integration_tests/configs/secret_store.toml\n```\n\nRun the Parity Ethereum client:\n```\nparity --config integration_tests/configs/users.toml\n```\n\n#### Execute integration tests\n\nMake sure the Secret Store node and the Parity Ethereum client are up and running, then execute:\n\n```\npython3 setup.py test\n```\n\n### TLDR\n\n```\npip install flake8\nflake8 secret_store_client integration_tests tests\n```\n\n## New Version\n\nThe `bumpversion.sh` script helps to bump the project version. You can execute the script using as first argument {major|minor|patch} to bump accordingly the version.\n\n## Attribution\n\nThis project is based in the Ocean Protocol [Python Secret Store Client](https://github.com/oceanprotocol/secret-store-client-py).\nIt keeps the same Apache v2 License and adds some improvements. See [NOTICE file](NOTICE).\n\n## License\n\n```\nCopyright 2020 Keyko GmbH\nThis product includes software developed at\nBigchainDB GmbH and Ocean Protocol (https://www.oceanprotocol.com/)\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/nevermined-io/secret-store-client-py",
    "keywords": "nevermined-secret-store",
    "license": "Apache Software License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "nevermined-secret-store",
    "package_url": "https://pypi.org/project/nevermined-secret-store/",
    "platform": "",
    "project_url": "https://pypi.org/project/nevermined-secret-store/",
    "project_urls": {
      "Homepage": "https://github.com/nevermined-io/secret-store-client-py"
    },
    "release_url": "https://pypi.org/project/nevermined-secret-store/0.1.1/",
    "requires_dist": [
      "requests (~=2.21.0)",
      "bumpversion ; extra == 'dev'",
      "pkginfo ; extra == 'dev'",
      "twine ; extra == 'dev'",
      "watchdog ; extra == 'dev'",
      "pytest ; extra == 'dev'",
      "pytest ; extra == 'test'"
    ],
    "requires_python": "",
    "summary": "üê≥ Python client for Parity Secret Store.",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9959337,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "12e1cd166d8b5d239f823e4c71ecb07e045e1b0c40307e79222decf13192b062",
          "md5": "aaaa4ae4de7f9a9d15708ee9dd01c5bb",
          "sha256": "5ee125d759c2ba66868e6d98ff54a3544b55088ef0326872c2c7c6edb477ff54"
        },
        "downloads": -1,
        "filename": "nevermined_secret_store-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "aaaa4ae4de7f9a9d15708ee9dd01c5bb",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 10587,
        "upload_time": "2020-11-09T10:46:57",
        "upload_time_iso_8601": "2020-11-09T10:46:57.855346Z",
        "url": "https://files.pythonhosted.org/packages/12/e1/cd166d8b5d239f823e4c71ecb07e045e1b0c40307e79222decf13192b062/nevermined_secret_store-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8e34693523e2a359933faf4adec579e7d975dc193160632f65bd84604ec79344",
          "md5": "93b5a9db4425e0dd57699e02c1f49f29",
          "sha256": "7a5d98a399e0f3b499ce37e0ee0bad2066082d63e6fa1e1730d9654cbea1af58"
        },
        "downloads": -1,
        "filename": "nevermined_secret_store-0.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "93b5a9db4425e0dd57699e02c1f49f29",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 10577,
        "upload_time": "2021-04-02T18:13:25",
        "upload_time_iso_8601": "2021-04-02T18:13:25.633260Z",
        "url": "https://files.pythonhosted.org/packages/8e/34/693523e2a359933faf4adec579e7d975dc193160632f65bd84604ec79344/nevermined_secret_store-0.1.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ac3c7202691f0812c4a0a85055d7a831b94693f8461f9006b86539457e2e0e1a",
          "md5": "0d01503233ea97c1b44411fed6bddba8",
          "sha256": "3a9304cbd80f97d0767b5f7d34757b14ab3d924ab8ac9582d8b65186b1f8262e"
        },
        "downloads": -1,
        "filename": "nevermined-secret-store-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0d01503233ea97c1b44411fed6bddba8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10636,
        "upload_time": "2021-04-02T18:13:26",
        "upload_time_iso_8601": "2021-04-02T18:13:26.980300Z",
        "url": "https://files.pythonhosted.org/packages/ac/3c/7202691f0812c4a0a85055d7a831b94693f8461f9006b86539457e2e0e1a/nevermined-secret-store-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8e34693523e2a359933faf4adec579e7d975dc193160632f65bd84604ec79344",
        "md5": "93b5a9db4425e0dd57699e02c1f49f29",
        "sha256": "7a5d98a399e0f3b499ce37e0ee0bad2066082d63e6fa1e1730d9654cbea1af58"
      },
      "downloads": -1,
      "filename": "nevermined_secret_store-0.1.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "93b5a9db4425e0dd57699e02c1f49f29",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 10577,
      "upload_time": "2021-04-02T18:13:25",
      "upload_time_iso_8601": "2021-04-02T18:13:25.633260Z",
      "url": "https://files.pythonhosted.org/packages/8e/34/693523e2a359933faf4adec579e7d975dc193160632f65bd84604ec79344/nevermined_secret_store-0.1.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ac3c7202691f0812c4a0a85055d7a831b94693f8461f9006b86539457e2e0e1a",
        "md5": "0d01503233ea97c1b44411fed6bddba8",
        "sha256": "3a9304cbd80f97d0767b5f7d34757b14ab3d924ab8ac9582d8b65186b1f8262e"
      },
      "downloads": -1,
      "filename": "nevermined-secret-store-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "0d01503233ea97c1b44411fed6bddba8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10636,
      "upload_time": "2021-04-02T18:13:26",
      "upload_time_iso_8601": "2021-04-02T18:13:26.980300Z",
      "url": "https://files.pythonhosted.org/packages/ac/3c/7202691f0812c4a0a85055d7a831b94693f8461f9006b86539457e2e0e1a/nevermined-secret-store-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}