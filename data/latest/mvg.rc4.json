{
  "info": {
    "author": "",
    "author_email": "Martin Dziura <m.dziura@tum.de>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# mvg\n\nThis package aims to provide a clean, performant and barrier-free interface to timetable information of the *Münchner Verkehrsgesellschaft* (MVG), responsible for public transport in Munich. It exports the class `MvgApi` to retrieve stations, lines and departures from the unofficial JSON API at https://www.mvg.de.\n\n## Disclaimer\n\nThis project is **not an official project from the Münchner Verkehrsgesellschaft (MVG)**. It was developed as a private project from lack of a documented and openly accessible API. It simply reproduces the requests made by https://www.mvg.de to provide a barrier-free access to local timetable information.\n\nTherefore, the following **usage restrictions from the MVG Imprint do apply to all users of this package**:\n\n> Our systems are used for direct customer interaction. The processing of our content or data by third parties requires our express consent. For **private, non-commercial purposes, moderate use is tolerated** without our explicit consent. Any form of **data mining does not constitute moderate use**. We reserve the right to revoke this permission in principle or in individual cases. Please direct any questions to: redaktion@mvg.de\n> \n> (from https://www.mvg.de/impressum.html, accessed on 04. Feb 2023)\n\n## Why another MVG package?\n\nThe project was inspired by two existing packages:\n- The package [PyMVGLive](https://pypi.org/project/PyMVGLive) from 2017 does provide an interface to the former MVGLive API at `mvg-live.de`. As of 2022 the MVGLive website does not exist anymore and the package has been archived. Although the old API still works for some stations, it does not for others - mainly due to updated station identifiers. Therefore, the package is considered deprecated and cannot be used for new designs.\n- The newer package [mvg-api](https://pypi.org/project/mvg-api) offers an implementation from 2020 based on the API at `www.mvg.de/api/fahrinfo`. It considers the updated station identifiers and still works perfectly. This package provides the basis for recent projects such as [mvg-cli](https://pypi.org/project/mvg-cli).\n\nSo why another MVG API package? In the end three reasons were decisive:\n- The recent website at uses a new API at `www.mvg.de/api/fib/v2`, which seems to be more performant than the previous one.\n- None of the existing packages offer asynchronous calls for concurrent code projects.\n- An optimized package was required to develop a [Home Assistant](https://www.home-assistant.io) integration.\n\n## Installation\n\nInstall from the Python Package Index (PyPI) using `pip`:\n```\npip install mvg\n```\n\n## Basic Usage\n\nThe interface was designed to be simple and intuitive. Basic usage follows these steps:\n- Find a station using `MvgApi.station(station)` by its name and place (e.g. `\"Universität, München\"`) or its global station identifier (e.g. `\"de:09162:70\"`).\n- Alternatively, `MvgApi.nearby(latitude, longitude)` finds the nearest station.\n- Create an API instance using `MvgApi(station)` by station name and place or its global identifier.\n- Use the method `.departures()` to retrieve information from the API.\n\nA basic example looks like this:\n\n```python\nfrom mvg import MvgApi\n\nstation = MvgApi.station('Universität, München')\nif station:\n    mvgapi = MvgApi(station['id'])\n    departures = mvgapi.departures()\n    print(station, departures)\n```\n\n### Available Stations and Lines\n\nThe static methods `MvgApi.stations()` and `MvgApi.lines()` expose a list of all available stations and a list of all available lines from designated API endpoints. While these calls are great for reference, they are also quite extensive and should not be used within a frequent query loop.\n\n### Filters\n\nThe results from `.departures(limit, offset, transport_types)` can be filtered using the following arguments:\n\n- `limit` limits the output to the given number of departures, defaults to 10\n- `offset` adds an offset (e.g. walking distance to the station) in minutes, defaults to 0\n- `transport_types` filters the result by a list of transport types (e.g. `[TransportType.UBAHN]`)\n\nA filtered example looks like this:\n\n```python\nfrom mvg import MvgApi, TransportType\n\nstation = MvgApi.station('Universität, München')\nif station:\n    mvgapi = MvgApi(station['id'])\n    departures = mvgapi.departures(\n        limit=3,\n        offset=5,\n        transport_types=[TransportType.UBAHN])\n    print(station, departures)\n```\n\n### Example results\n\n`station()` or `nearby()` results a `dict`:\n```\n{ \n'id': 'de:09162:70', \n'name': 'Universität', \n'place': 'München'\n}\n```\n`departures()` results a `list` of `dict`:\n```\n[{\n'time': 1668524580,\n'planned': 1668524460,\n'line': 'U3',\n'destination': 'Fürstenried West',\n'type': 'U-Bahn',\n'icon': 'mdi:subway',\n'cancelled': False,\n'messages': []\n}, ... ]\n```\n\n## Advanced Usage: Asynchronous Methods\n\nThe class `MvgApi` internally calls asynchronous methods using `asyncio` and `aiohttp` to perform the web requests efficiently. These asynchronous methods are marked by the suffix `_async` and can be utilized by users in projects with concurrent code.\n\nThe basic example but with asynchronous calls looks like this:\n\n```python\nimport asyncio\nfrom mvg import MvgApi\n\nasync def demo() -> None:\n    station = await MvgApi.station_async('Universität, München')\n    if station:\n        departures = MvgApi.departures_async(station['id'])\n        print(station, await departures)\nloop = asyncio.get_event_loop()\nloop.run_until_complete(demo())\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mvg",
    "package_url": "https://pypi.org/project/mvg/",
    "platform": null,
    "project_url": "https://pypi.org/project/mvg/",
    "project_urls": {
      "Bug Tracker": "https://github.com/mondbaron/mvg/issues",
      "Documentation": "https://mondbaron.github.io/mvg",
      "Source": "https://github.com/mondbaron/mvg"
    },
    "release_url": "https://pypi.org/project/mvg/1.0.2/",
    "requires_dist": [
      "aiohttp (~=3.8)",
      "furl (~=2.1)",
      "autopep8 ; extra == 'dev'",
      "build ; extra == 'dev'",
      "flake8 ; extra == 'dev'",
      "mypy ; extra == 'dev'",
      "pylint ; extra == 'dev'",
      "pytest ; extra == 'dev'",
      "pytest-asyncio ; extra == 'dev'",
      "sphinx ; extra == 'dev'",
      "sphinx-mdinclude ; extra == 'dev'",
      "sphinx-pyproject ; extra == 'dev'",
      "sphinx-rtd-theme ; extra == 'dev'",
      "twine ; extra == 'dev'"
    ],
    "requires_python": ">=3.7",
    "summary": "An unofficial interface to timetable information of the Münchner Verkehrsgesellschaft (MVG).",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16793495,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1027bea8f7e6788f21367285bb44b8ece8b194ea58f592e40ebc3f62303f5c49",
          "md5": "8c0ff367eb495867dc15fbde1a4e4fc7",
          "sha256": "b662f2303d5caffd1f6cd0ede9453f83bc178a6ef2f64b058b1d046c9c7fbedc"
        },
        "downloads": -1,
        "filename": "mvg-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8c0ff367eb495867dc15fbde1a4e4fc7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 7895,
        "upload_time": "2023-02-05T03:00:04",
        "upload_time_iso_8601": "2023-02-05T03:00:04.213537Z",
        "url": "https://files.pythonhosted.org/packages/10/27/bea8f7e6788f21367285bb44b8ece8b194ea58f592e40ebc3f62303f5c49/mvg-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6d73d94f1b949ecd4e66326de30b8adc9d6901e5591ab05f771e7c3e061df14b",
          "md5": "f87f78507e8da01927d4bf5eafad4490",
          "sha256": "e3360ca4f0e49bb8befcb5d16b5b0cc23c0ee38b567725b8c0e9595dc0fc473d"
        },
        "downloads": -1,
        "filename": "mvg-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f87f78507e8da01927d4bf5eafad4490",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9983,
        "upload_time": "2023-02-05T03:00:05",
        "upload_time_iso_8601": "2023-02-05T03:00:05.987055Z",
        "url": "https://files.pythonhosted.org/packages/6d/73/d94f1b949ecd4e66326de30b8adc9d6901e5591ab05f771e7c3e061df14b/mvg-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf7f2affca4ce217360c7f5ee2efb1aed0097f893aee30faaa0f858501c9a239",
          "md5": "7836430502a57c8ae208c8575c29acec",
          "sha256": "150cab62ed46e432135516259222736050e6dc30a7c6da8728830a9ed635f188"
        },
        "downloads": -1,
        "filename": "mvg-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7836430502a57c8ae208c8575c29acec",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 7898,
        "upload_time": "2023-02-05T03:21:45",
        "upload_time_iso_8601": "2023-02-05T03:21:45.275069Z",
        "url": "https://files.pythonhosted.org/packages/bf/7f/2affca4ce217360c7f5ee2efb1aed0097f893aee30faaa0f858501c9a239/mvg-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e1a5183e44a766f58ffafd9e8bacfe1730c408233257b4bc03da820b3324fb47",
          "md5": "b4ad220c8a950ab6b323b90b4f13f7b7",
          "sha256": "2822341193d488b6195017246491e8ee1f3da2034af96814f15a9f364b303150"
        },
        "downloads": -1,
        "filename": "mvg-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b4ad220c8a950ab6b323b90b4f13f7b7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9992,
        "upload_time": "2023-02-05T03:21:48",
        "upload_time_iso_8601": "2023-02-05T03:21:48.053713Z",
        "url": "https://files.pythonhosted.org/packages/e1/a5/183e44a766f58ffafd9e8bacfe1730c408233257b4bc03da820b3324fb47/mvg-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e1d6e465024ecfa6d33cb1d00fd0a21ad3bba509f62c9e92bc44339baea0b0ff",
          "md5": "df1a492168bed4a615d35e3394a18061",
          "sha256": "0383dc3c4febeea509ce93b531d555285cb3140558c423f280dd7bd5cd30d15f"
        },
        "downloads": -1,
        "filename": "mvg-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "df1a492168bed4a615d35e3394a18061",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 7905,
        "upload_time": "2023-02-05T03:34:54",
        "upload_time_iso_8601": "2023-02-05T03:34:54.528309Z",
        "url": "https://files.pythonhosted.org/packages/e1/d6/e465024ecfa6d33cb1d00fd0a21ad3bba509f62c9e92bc44339baea0b0ff/mvg-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4ec98c30a1a28e97da88e870f85da2c4e4d4f454923ca4446dd9cbdbe0472c07",
          "md5": "4799e40deb34bef1e72cf18d62bf2281",
          "sha256": "9c520d18785f573fe4ce7990c302b8ad358a89a70382e330f3dcc8558692bfb4"
        },
        "downloads": -1,
        "filename": "mvg-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4799e40deb34bef1e72cf18d62bf2281",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 10005,
        "upload_time": "2023-02-05T03:34:57",
        "upload_time_iso_8601": "2023-02-05T03:34:57.192035Z",
        "url": "https://files.pythonhosted.org/packages/4e/c9/8c30a1a28e97da88e870f85da2c4e4d4f454923ca4446dd9cbdbe0472c07/mvg-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b7fc8513df52bfe6f66db42aafd38e2c227f0aadf309e96b5b89487e62f87dbd",
          "md5": "1c63f04a1d5a9c5bb4b679c8921e860c",
          "sha256": "c87daafdf923a90702495d957c078ab485830a373ad8ebc37227ef9606e31fee"
        },
        "downloads": -1,
        "filename": "mvg-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1c63f04a1d5a9c5bb4b679c8921e860c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 7901,
        "upload_time": "2023-02-10T17:16:24",
        "upload_time_iso_8601": "2023-02-10T17:16:24.734941Z",
        "url": "https://files.pythonhosted.org/packages/b7/fc/8513df52bfe6f66db42aafd38e2c227f0aadf309e96b5b89487e62f87dbd/mvg-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a0a9e2011614ea835a4f644abbe889741b35f63e94824bd3eede3435836452c1",
          "md5": "842b60ec5ca5a574661bf4ca28f9f855",
          "sha256": "608c225fdb3ed47c637c5e961154f5cf1a857bd1f2c49f245b25d76e9cd6e02c"
        },
        "downloads": -1,
        "filename": "mvg-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "842b60ec5ca5a574661bf4ca28f9f855",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 10216,
        "upload_time": "2023-02-10T17:16:26",
        "upload_time_iso_8601": "2023-02-10T17:16:26.761149Z",
        "url": "https://files.pythonhosted.org/packages/a0/a9/e2011614ea835a4f644abbe889741b35f63e94824bd3eede3435836452c1/mvg-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b7fc8513df52bfe6f66db42aafd38e2c227f0aadf309e96b5b89487e62f87dbd",
        "md5": "1c63f04a1d5a9c5bb4b679c8921e860c",
        "sha256": "c87daafdf923a90702495d957c078ab485830a373ad8ebc37227ef9606e31fee"
      },
      "downloads": -1,
      "filename": "mvg-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1c63f04a1d5a9c5bb4b679c8921e860c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 7901,
      "upload_time": "2023-02-10T17:16:24",
      "upload_time_iso_8601": "2023-02-10T17:16:24.734941Z",
      "url": "https://files.pythonhosted.org/packages/b7/fc/8513df52bfe6f66db42aafd38e2c227f0aadf309e96b5b89487e62f87dbd/mvg-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a0a9e2011614ea835a4f644abbe889741b35f63e94824bd3eede3435836452c1",
        "md5": "842b60ec5ca5a574661bf4ca28f9f855",
        "sha256": "608c225fdb3ed47c637c5e961154f5cf1a857bd1f2c49f245b25d76e9cd6e02c"
      },
      "downloads": -1,
      "filename": "mvg-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "842b60ec5ca5a574661bf4ca28f9f855",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 10216,
      "upload_time": "2023-02-10T17:16:26",
      "upload_time_iso_8601": "2023-02-10T17:16:26.761149Z",
      "url": "https://files.pythonhosted.org/packages/a0/a9/e2011614ea835a4f644abbe889741b35f63e94824bd3eede3435836452c1/mvg-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}