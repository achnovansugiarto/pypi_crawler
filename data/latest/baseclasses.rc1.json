{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development :: Libraries",
      "Topic :: Utilities"
    ],
    "description": "# baseclasses\n\nSimple dataclasses alternative (beta)\n\n[![PyPI version](https://badge.fury.io/py/baseclasses.svg)](https://badge.fury.io/py/baseclasses)\n[![PyPI Supported Python Versions](https://img.shields.io/pypi/pyversions/baseclasses.svg)](https://pypi.python.org/pypi/baseclasses/)\n[![GitHub Actions (Tests)](https://github.com/yanovs/baseclasses/workflows/Test/badge.svg)](https://github.com/yanovs/baseclasses)\n\n## Installation\n\n`baseclasses` is available on [PyPI](https://pypi.org/project/baseclasses/):\n\n```bash\npip install baseclasses\n```\n\n## Quick Start\n\n`baseclasses` is an alternative to [`dataclasses`](https://docs.python.org/3/library/dataclasses.html).\n\nThere are many such alternatives, and there are a lot of reasons \nto use them (including the built-in\n`dataclasses`), but if you want a library with:\n\n- No monkey-patched methods generated from strings\n- No special decorators, just regular inheritance\n- Ability to order fields in subclasses as desired\n- Auto-inheritance of parent properties, with ability to change per subclass\n- Emphasis on keyword args over positional args\n- Optional `__pre_init__` ability to mutate kwargs\n- Optional ability to reference other kwargs in `default_factory` func\n- A shorthand helper to specify `InternalStateField`\n- Ability to differentiate between `str` and `repr`\n\nyou can give `baseclasses` a try. E.g.:\n\n```python\nfrom typing import Dict, Optional\n\nimport baseclasses\n\n\n# No decorator\nclass Foo(baseclasses.FrozenBaseClass):\n    a: int\n    b: int\n    c: Optional[str] = baseclasses.Field(default=\"hello\", hash=False)\n    _d: Dict = baseclasses.InternalStateField(default_factory=dict)\n\n\n# Auto-inherits FrozenBaseClass properties\nclass ChildFoo(Foo):\n    # No problems with child class field ordering\n    x: float\n\n    # Dynamic defaults\n    y: int = baseclasses.Field(\n        default_factory=lambda **kwargs: kwargs[\"a\"] * 2.0\n    )\n\n\n# Override frozen state per child class\nclass MutableChildFoo(ChildFoo, frozen=False):\n    pass\n```\n\n## Comparisons to Alternatives\n\nSee [`tests/test_compare.py`](https://github.com/yanovs/baseclasses/blob/main/baseclasses/tests/test_compare.py).\n\nLike [dataclasses](https://docs.python.org/3/library/dataclasses.html), but:\n- No issues with adding new optional fields because you're forced to \nuse `kwargs` in all but the simplest cases\n- Uses `metaclass` and simple inheritance over monkey-patched generated code\n- Child classes automatically inherit state from parent, \nso no need to re-declare\n- But you can also change `frozen` status per child class\n- You can use `default_factory(lambda **kwargs: ...)` to access init fields\n- Or you can mutate kwargs with an optional `__pre_init__`\n- More consistent with traditional OOP style \n(e.g., `obj.get_fields()` instead of `dataclasses.get_fields(obj)`)\n\nLike [dataclassy](https://github.com/biqqles/dataclassy) but:\n- Uses `metaclass` and simple inheritance over monkey-patched generated code\n\nThere are others:\n- [attrs](https://github.com/python-attrs/attrs)\n- [pydantic](https://github.com/samuelcolvin/pydantic)\n- [traitlets](https://github.com/ipython/traitlets)\n- [param](https://param.holoviz.org/)\n\nNote: there are [perfectly valid reasons](https://peps.python.org/pep-0557/#rationale) \nfor why the Python community\ndecided to use generated code over simple inheritance.\n`baseclasses` is just an alternative that implements things differently.\n\n## TODO\n\n- [ ] Add `init` property to field (to mirror `dataclasses`)\n- [ ] Expose `obj.replace(**kwargs)` (to mirror `dataclasses`)\n- [ ] Consider `serialize` property to field\n- [ ] Take advantage of [PEP 681 included in Python 3.11](https://docs.python.org/3/whatsnew/3.11.html#whatsnew311-pep681)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/yanovs/baseclasses",
    "keywords": "dataclasses",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "baseclasses",
    "package_url": "https://pypi.org/project/baseclasses/",
    "platform": "any",
    "project_url": "https://pypi.org/project/baseclasses/",
    "project_urls": {
      "Homepage": "https://github.com/yanovs/baseclasses",
      "Packaging": "https://pypi.org/project/baseclasses/",
      "Source": "https://github.com/yanovs/baseclasses",
      "Tracker": "https://github.com/yanovs/baseclasses/issues"
    },
    "release_url": "https://pypi.org/project/baseclasses/0.1.0/",
    "requires_dist": [
      "build (>=0.6.0) ; extra == 'building'",
      "setuptools-scm[toml] (>=3.4) ; extra == 'building'",
      "wheel (>=0.38.0) ; extra == 'building'",
      "black (>=22.8) ; extra == 'testing'",
      "cached-property (>=1.5.2) ; extra == 'testing'",
      "docformatter (>=1.5.0) ; extra == 'testing'",
      "flake8 (>=5.0.4) ; extra == 'testing'",
      "isort (>=5.2.2) ; extra == 'testing'",
      "mypy (>=0.800) ; extra == 'testing'",
      "pytest (>=6.2.5) ; extra == 'testing'",
      "pytest-cov (<3,>=2) ; extra == 'testing'",
      "pyright (>=0.0.13) ; extra == 'testing'",
      "tox (>=3.27.1) ; extra == 'testing'"
    ],
    "requires_python": ">=3.7",
    "summary": "Dataclasses alternative",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16322374,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4c75aa6da94a4e576db7ba56acdece947db9c346fabca7a1189cd1b7e8787d7b",
          "md5": "132e6f56fee81bd0a65daecbe72f1718",
          "sha256": "7e5a9dd5f2e4f7dcf48449edf92c50ccb73221d68f7095dee1acd51bf74be321"
        },
        "downloads": -1,
        "filename": "baseclasses-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "132e6f56fee81bd0a65daecbe72f1718",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 15167,
        "upload_time": "2023-01-05T21:46:25",
        "upload_time_iso_8601": "2023-01-05T21:46:25.301768Z",
        "url": "https://files.pythonhosted.org/packages/4c/75/aa6da94a4e576db7ba56acdece947db9c346fabca7a1189cd1b7e8787d7b/baseclasses-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4af768422ac3c0c1e88cdc6e60190f9f0cd165cf4c8e8aee9d9dfabc14ddf938",
          "md5": "4c508334817167ac2bd18404041fa2a4",
          "sha256": "4cb3b11d6960dabb977d88e65fe52194d8fe58aa07e117e3408fe5a213a62df2"
        },
        "downloads": -1,
        "filename": "baseclasses-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4c508334817167ac2bd18404041fa2a4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 18043,
        "upload_time": "2023-01-05T21:46:26",
        "upload_time_iso_8601": "2023-01-05T21:46:26.776081Z",
        "url": "https://files.pythonhosted.org/packages/4a/f7/68422ac3c0c1e88cdc6e60190f9f0cd165cf4c8e8aee9d9dfabc14ddf938/baseclasses-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4c75aa6da94a4e576db7ba56acdece947db9c346fabca7a1189cd1b7e8787d7b",
        "md5": "132e6f56fee81bd0a65daecbe72f1718",
        "sha256": "7e5a9dd5f2e4f7dcf48449edf92c50ccb73221d68f7095dee1acd51bf74be321"
      },
      "downloads": -1,
      "filename": "baseclasses-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "132e6f56fee81bd0a65daecbe72f1718",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 15167,
      "upload_time": "2023-01-05T21:46:25",
      "upload_time_iso_8601": "2023-01-05T21:46:25.301768Z",
      "url": "https://files.pythonhosted.org/packages/4c/75/aa6da94a4e576db7ba56acdece947db9c346fabca7a1189cd1b7e8787d7b/baseclasses-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4af768422ac3c0c1e88cdc6e60190f9f0cd165cf4c8e8aee9d9dfabc14ddf938",
        "md5": "4c508334817167ac2bd18404041fa2a4",
        "sha256": "4cb3b11d6960dabb977d88e65fe52194d8fe58aa07e117e3408fe5a213a62df2"
      },
      "downloads": -1,
      "filename": "baseclasses-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "4c508334817167ac2bd18404041fa2a4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 18043,
      "upload_time": "2023-01-05T21:46:26",
      "upload_time_iso_8601": "2023-01-05T21:46:26.776081Z",
      "url": "https://files.pythonhosted.org/packages/4a/f7/68422ac3c0c1e88cdc6e60190f9f0cd165cf4c8e8aee9d9dfabc14ddf938/baseclasses-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}