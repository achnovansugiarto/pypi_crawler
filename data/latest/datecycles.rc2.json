{
  "info": {
    "author": "Niko JÃ¤rvinen",
    "author_email": "nbjarvinen@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries",
      "Topic :: Utilities"
    ],
    "description": "# datecycles\n\nSimple library for complicated date cycling rules\n\n[PyPI](https://pypi.org/project/datecycles/)\n\n[GitHub](https://github.com/b10011/datecycles)\n\n## Installation\n\n```bash\npip install --upgrade datecycles\n```\n\n## \"Documentation\"\n\nCurrently there is no proper documentation, but the code is somewhat commented,\nthere are examples at the end of this README, there are bunch of tests and\nhere's explanations for the parameters:\n\n```python3\ndatecycles(\n    every_n,\n    unit,\n    day=None,\n    weekday=None,\n    start=None,\n    end=None,\n    count=None,\n    shift_to_workday=None,\n    country=None,\n    holidays=None,\n    tzinfo=None,\n)\n```\n\n`every_n: int` defines the cycle interval.\n\n`unit: str` defines the interval unit / cycle duration. Allowed values:\n`\"day\", \"week\", \"month\", \"year\"`.\n\n`day: Optional[int]` defines the day of month that is requested. Cannot be used\nwith `weekday`.\n\n`start: Optional[arrow.arrow.Arrow]` defines the minimum date.\n\n`end: Optional[arrow.arrow.Arrow]` defines the maximum date. Can be used with\n`count`.\n\n`count: Optional[int]` defines maximum number of results returned. Can be used\nwith `end`.\n\n`shift_to_workday: Optional[str]` defines how to handle results that are at\nweekends or holidays. `\"next\"` finds the next workday, `\"previous\"` finds the\nprevious workday, `\"skip\"` skips the result completely, `None` returns the\nresult as is without shifting the date.\n\n`country: str` defines the country to be used for holidays. Allowed values\nare those that can be found in Python\n[holidays](https://github.com/dr-prodigy/python-holidays) library. For example,\n`holidays.Finland` and `holidays.FI` both exist so values `\"Finland\"` and `\"FI\"`\nare both valid values.\n\n`holidays: Union[dict, list]` defines the holidays. Can't be used with\n`country`. If some custom holidays must be combined with country's holidays,\nsee [holidays](https://github.com/dr-prodigy/python-holidays) documentation\nregarding adding custom holidays.\n\n`tzinfo: str` defines the timezone used in results. `start` and `end` must also\nhave the same timezone that's defined here. Allowed values are those that\n[arrow](https://github.com/arrow-py/arrow) accepts as a timezone.\n\n## Usage\n\nImporting:\n\n```python3\n# Import the function\nfrom datecycles import datecycles\n```\n\n### Example 1\n\nCycle every month on 2nd day, starting from 2021-07-10, take 5 first results\n\n```python3\ndatecycles(\n    1,\n    \"month\",\n    day=2,\n    start=arrow.get(2021, 7, 10),\n    count=5\n)\n\n# [<Arrow [2021-08-02T00:00:00+00:00]>,\n#  <Arrow [2021-09-02T00:00:00+00:00]>,\n#  <Arrow [2021-10-02T00:00:00+00:00]>,\n#  <Arrow [2021-11-02T00:00:00+00:00]>,\n#  <Arrow [2021-12-02T00:00:00+00:00]>]\n```\n\n### Example 2\n\nCycle every month on first friday, starting from 2021-07-10 until end of year\n\n```python3\ndatecycles(\n    1,\n    \"month\",\n    weekday=(0, False, \"friday\"),\n    start=arrow.get(2021, 7, 10),\n    end=arrow.get(2021, 12, 31)\n)\n\n# [<Arrow [2021-08-06T00:00:00+00:00]>,\n#  <Arrow [2021-09-03T00:00:00+00:00]>,\n#  <Arrow [2021-10-01T00:00:00+00:00]>,\n#  <Arrow [2021-11-05T00:00:00+00:00]>,\n#  <Arrow [2021-12-03T00:00:00+00:00]>]\n```\n\n### Example 3\n\nCycle every month on first friday that appears in a full week, starting from\n2021-07-10 until end of year\n\n```python3\ndatecycles(\n    1,\n    \"month\",\n    weekday=(0, True, \"friday\"),\n    start=arrow.get(2021, 7, 10),\n    end=arrow.get(2021, 12, 31)\n)\n\n# [<Arrow [2021-08-06T00:00:00+00:00]>,\n#  <Arrow [2021-09-10T00:00:00+00:00]>,\n#  <Arrow [2021-10-08T00:00:00+00:00]>,\n#  <Arrow [2021-11-05T00:00:00+00:00]>,\n#  <Arrow [2021-12-10T00:00:00+00:00]>]\n```\n\n### Example 4\n\nCycle every 3rd month on last friday that appears in a full week, starting from\n2021-09-01, take 4 first results\n\n```python3\ndatecycles(\n    3,\n    \"month\",\n    weekday=(-1, True, \"friday\"),\n    start=arrow.get(2021, 9, 1),\n    count=4\n)\n\n# [<Arrow [2021-09-24T00:00:00+00:00]>,\n#  <Arrow [2021-12-24T00:00:00+00:00]>,\n#  <Arrow [2022-03-25T00:00:00+00:00]>,\n#  <Arrow [2022-06-24T00:00:00+00:00]>]\n```\n\n### Example 5\n\nCycle every 3rd month on last friday that appears in a full week, starting from\n2021-09-01, take 4 first results, in case the result is a weekend day or\nholiday in Finland, go to the next workday\n\n```python3\ndatecycles(\n    3,\n    \"month\",\n    weekday=(-1, True, \"friday\"),\n    start=arrow.get(2021, 9, 1),\n    count=4,\n    shift_to_workday=\"next\",\n    country=\"Finland\"\n)\n\n# [<Arrow [2021-09-24T00:00:00+00:00]>,\n#  <Arrow [2021-12-27T00:00:00+00:00]>,\n#  <Arrow [2022-03-25T00:00:00+00:00]>,\n#  <Arrow [2022-06-27T00:00:00+00:00]>]\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/b10011/datecycles",
    "keywords": "date,time,calendar,cycling",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "datecycles",
    "package_url": "https://pypi.org/project/datecycles/",
    "platform": "",
    "project_url": "https://pypi.org/project/datecycles/",
    "project_urls": {
      "Documentation": "https://github.com/b10011/datecycles",
      "Homepage": "https://github.com/b10011/datecycles",
      "Repository": "https://github.com/b10011/datecycles"
    },
    "release_url": "https://pypi.org/project/datecycles/0.1.2/",
    "requires_dist": [
      "arrow (>=1.1.1,<2.0.0)",
      "holidays (>=0.11.1,<0.12.0)"
    ],
    "requires_python": ">=3.6,<4.0",
    "summary": "Simple library for complicated date cycling rules",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10874418,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4b7e38bf7069fb4cea6ba82e847713ab6a14a18a2c680c3f66b6a6688ded00c",
          "md5": "80317728ad271ef572ad07681a5040dd",
          "sha256": "049e676dd1bb89bbaa706f3e5a2e0b6221b833c177dd9b2e005b4033b37874c9"
        },
        "downloads": -1,
        "filename": "datecycles-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "80317728ad271ef572ad07681a5040dd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 4227,
        "upload_time": "2021-07-10T15:21:25",
        "upload_time_iso_8601": "2021-07-10T15:21:25.029926Z",
        "url": "https://files.pythonhosted.org/packages/a4/b7/e38bf7069fb4cea6ba82e847713ab6a14a18a2c680c3f66b6a6688ded00c/datecycles-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1058a0efd1cf623060c3d09136cad0604170099800603ff98103a269ee23a20a",
          "md5": "1ce598f47458e3915b1df425507b0cc7",
          "sha256": "87cee63b98485f26d6bbe682ca131bcda16d1469f1e6ba338317c6932e673fb6"
        },
        "downloads": -1,
        "filename": "datecycles-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1ce598f47458e3915b1df425507b0cc7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4.0",
        "size": 3851,
        "upload_time": "2021-07-10T15:21:26",
        "upload_time_iso_8601": "2021-07-10T15:21:26.490083Z",
        "url": "https://files.pythonhosted.org/packages/10/58/a0efd1cf623060c3d09136cad0604170099800603ff98103a269ee23a20a/datecycles-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "84d06fca1eb293c69d2e1bead199c9dc3b1be322d14de72b64c3e99c6c403cb0",
          "md5": "726096d06dc13749a51de49b7095afde",
          "sha256": "dd9ff47938ab0f9cb1834d5a5ff3310157ba58b9e5621c0c21d08768aee60569"
        },
        "downloads": -1,
        "filename": "datecycles-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "726096d06dc13749a51de49b7095afde",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 5699,
        "upload_time": "2021-07-10T15:27:04",
        "upload_time_iso_8601": "2021-07-10T15:27:04.530475Z",
        "url": "https://files.pythonhosted.org/packages/84/d0/6fca1eb293c69d2e1bead199c9dc3b1be322d14de72b64c3e99c6c403cb0/datecycles-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0c9df7e6efac080999cfdb76fcd22be395c306ccaacdebcf5c68d385a2654a7b",
          "md5": "df3a6e01cc54a5894aadafbf5f73f588",
          "sha256": "6c855fdb3e25d7822837cb7f26c9d29d4654fd433a7921953fd268f69d58531d"
        },
        "downloads": -1,
        "filename": "datecycles-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "df3a6e01cc54a5894aadafbf5f73f588",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4.0",
        "size": 5926,
        "upload_time": "2021-07-10T15:27:06",
        "upload_time_iso_8601": "2021-07-10T15:27:06.666728Z",
        "url": "https://files.pythonhosted.org/packages/0c/9d/f7e6efac080999cfdb76fcd22be395c306ccaacdebcf5c68d385a2654a7b/datecycles-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "84d06fca1eb293c69d2e1bead199c9dc3b1be322d14de72b64c3e99c6c403cb0",
        "md5": "726096d06dc13749a51de49b7095afde",
        "sha256": "dd9ff47938ab0f9cb1834d5a5ff3310157ba58b9e5621c0c21d08768aee60569"
      },
      "downloads": -1,
      "filename": "datecycles-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "726096d06dc13749a51de49b7095afde",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6,<4.0",
      "size": 5699,
      "upload_time": "2021-07-10T15:27:04",
      "upload_time_iso_8601": "2021-07-10T15:27:04.530475Z",
      "url": "https://files.pythonhosted.org/packages/84/d0/6fca1eb293c69d2e1bead199c9dc3b1be322d14de72b64c3e99c6c403cb0/datecycles-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0c9df7e6efac080999cfdb76fcd22be395c306ccaacdebcf5c68d385a2654a7b",
        "md5": "df3a6e01cc54a5894aadafbf5f73f588",
        "sha256": "6c855fdb3e25d7822837cb7f26c9d29d4654fd433a7921953fd268f69d58531d"
      },
      "downloads": -1,
      "filename": "datecycles-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "df3a6e01cc54a5894aadafbf5f73f588",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6,<4.0",
      "size": 5926,
      "upload_time": "2021-07-10T15:27:06",
      "upload_time_iso_8601": "2021-07-10T15:27:06.666728Z",
      "url": "https://files.pythonhosted.org/packages/0c/9d/f7e6efac080999cfdb76fcd22be395c306ccaacdebcf5c68d385a2654a7b/datecycles-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}