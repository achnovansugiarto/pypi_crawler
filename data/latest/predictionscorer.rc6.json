{
  "info": {
    "author": "Yngve Hoiseth",
    "author_email": "yngve@hoiseth.net",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "![Code style: Black](https://img.shields.io/badge/code%20style-black-000000.svg)\n![tests](https://github.com/yhoiseth/python-prediction-scorer/workflows/tests/badge.svg)\n[![PyPI version](https://badge.fury.io/py/predictionscorer.svg)](https://badge.fury.io/py/predictionscorer)\n\n# Python Prediction Scorer\n\n- [Python Prediction Scorer](#python-prediction-scorer)\n  - [Motivation](#motivation)\n  - [Status](#status)\n  - [Goals](#goals)\n  - [Background](#background)\n  - [Installation](#installation)\n    - [System requirements](#system-requirements)\n  - [Usage](#usage)\n    - [Choice predictions](#choice-predictions)\n      - [Brier](#brier)\n      - [Logarithmic](#logarithmic)\n      - [Practical](#practical)\n      - [Quadratic](#quadratic)\n  - [Changelog](#changelog)\n  - [Goals and judgment calls](#goals-and-judgment-calls)\n    - [Feature complete](#feature-complete)\n    - [Easy to read (for as many people as possible)](#easy-to-read-for-as-many-people-as-possible)\n    - [Easy and predictable to use with modern tools](#easy-and-predictable-to-use-with-modern-tools)\n  - [Contributing](#contributing)\n\n<small><i><a href='http://ecotrust-canada.github.io/markdown-toc/'>Table of contents generated with markdown-toc</a></i></small>\n\n## Motivation\n\nThe purpose of this library is to score predictions.\n\n## Background\n\nSome of the code in this library comes from my work at [Empiricast](https://yngve.hoiseth.net/empiricast-post-mortem/), a forecasting startup I co-founded.\n\nFor a thorough introduction to scoring rules, see [Calibration Scoring Rules for Practical Prediction Training](https://arxiv.org/abs/1808.07501v1) by [Spencer Greenberg](https://www.spencergreenberg.com/).\n\n## Features\n\n1. 4 scoring rules for choice predictions:\n   1. Brier\n   2. Logarithmic\n   3. Practical\n   4. Quadratic\n2. Fully type hinted\n3. 100 percent test coverage\n\n## REST API\n\nPython Prediction Scorer is also available as a REST API. This is useful if you are not using Python or if you are using a Python version that we don’t support. The documentation is available on [https://predictionscorer.herokuapp.com/docs](https://predictionscorer.herokuapp.com/docs).\n\n## Installation\n\n`pip install predictionscorer`\n\n### System requirements\n\nPython Prediction Scorer requires Python 3.8.\n\n## Usage\n\n### Choice predictions\n\nFor _choice predictions_, the forecaster assigns probabilities to different answers. As an example, let’s say that George and Kramer made the following forecasts for the result of a game where the home team ended up winning:\n\n| Result         | George | Kramer | Correct |\n| -------------- | ------ | ------ | ------- |\n| Home team wins | 40 %   | 65 %   | Yes     |\n| Tie            | 30 %   | 10 %   | No      |\n| Away team wins | 30 %   | 25 %   | No      |\n\nKramer assigned a higher probability to the correct answer than George did, so his forecast was better. But how much better? In order to find out, we must _quantify the quality_ of their predictions. That’s what this library does.\n\nWe have four _scoring rules_ to determine this:\n\n1. Brier\n2. Logarithmic\n3. Practical\n4. Quadratic\n\nLet us look at each of them.\n\n#### Brier\n\nBrier scores range from 0 to 2. Lower is better.\n\n![Brier scores for probabilities 0-100](docs/charts/brier.svg)\n\n```python\nfrom predictionscorer.rules import brier_score\n\ngeorge_probability = 0.4\nkramer_probability = 0.65\n\ngeorge_score = brier_score(george_probability) # 0.72\nkramer_score = brier_score(kramer_probability) # 0.2450\n```\n\n#### Logarithmic\n\nLogarithmic scores range from approaching infinity (worst) to 0 (best):\n\n![Logarithmic scores for probabilities 0-100](docs/charts/logarithmic.svg)\n\n```python\nfrom predictionscorer.rules import logarithmic_score\n\ngeorge_probability = 0.4\nkramer_probability = 0.65\n\ngeorge_score = logarithmic_score(george_probability) # 1.32\nkramer_probability = logarithmic_score(kramer_probability) # 0.62\n```\n\n#### Practical\n\nPractical scores range from approaching negative infinity (worst) to a configurable maximum — we use 2:\n\n![Practical scores for probabilities 0-100](docs/charts/practical.svg)\n\n```python\nfrom predictionscorer.rules import practical_score\n\ngeorge_probability = 0.4\nkramer_probability = 0.65\n\ngeorge_score = practical_score(0.4) # -0.64\nkramer_score = practical_score(0.65) # 0.76\n```\n\n`practical_score` accepts two optional parameters:\n\n| Name                  | Default             |\n| --------------------- | ------------------- |\n| `max_practical_score` | `Decimal(2)`        |\n| `max_probability`     | `Decimal(\"0.9999\")` |\n\n#### Quadratic\n\nQuadratic scores range from -1 (worst) to 1 (best):\n\n![Quadratic scores for probabilities 0-100](docs/charts/quadratic.svg)\n\n```python\nfrom predictionscorer.rules import quadratic_score\n\ngeorge_probability = 0.4\nkramer_probability = 0.65\n\ngeorge_score = quadratic_score(george_probability) # 0.28\nkramer_score = quadratic_score(kramer_probability) # 0.76\n```\n\n## Changelog\n\nSee [CHANGELOG.md](CHANGELOG.md).\n\n## Contributing\n\nPlease [open an issue on GitHub](https://github.com/yhoiseth/python-prediction-scorer/issues/new) if you discover any problems or potential for improvement. They are very welcome. Comments on the API design are especially useful at this point.\n\nAlso, see [CONTRIBUTING.md](CONTRIBUTING.md).",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/yhoiseth/python-prediction-scorer",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "predictionscorer",
    "package_url": "https://pypi.org/project/predictionscorer/",
    "platform": "",
    "project_url": "https://pypi.org/project/predictionscorer/",
    "project_urls": {
      "Homepage": "https://github.com/yhoiseth/python-prediction-scorer"
    },
    "release_url": "https://pypi.org/project/predictionscorer/1.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.8,<3.9",
    "summary": "Python library to score predictions",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8291757,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b019ba737d67e42d44f00c0e49a206738947bdd4f7765504ef58ab8c36338693",
          "md5": "f1004593bc6c853ee377e119587f1d1b",
          "sha256": "67cda7eedf55c662f351746a254acd8859c9909c98baf077fb4548d7750dbb26"
        },
        "downloads": -1,
        "filename": "predictionscorer-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f1004593bc6c853ee377e119587f1d1b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2358,
        "upload_time": "2020-04-15T07:52:33",
        "upload_time_iso_8601": "2020-04-15T07:52:33.374185Z",
        "url": "https://files.pythonhosted.org/packages/b0/19/ba737d67e42d44f00c0e49a206738947bdd4f7765504ef58ab8c36338693/predictionscorer-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5e12934c7b2db3123d6196e837879463661c4e1a34f4afcd275914c621efbc66",
          "md5": "9a6140195f67f614c11d6077783bf86f",
          "sha256": "802589e77f42601c2963fa8fbab9b3e754605cf2ad1a186e6fcfa779def184a7"
        },
        "downloads": -1,
        "filename": "predictionscorer-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9a6140195f67f614c11d6077783bf86f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 2729,
        "upload_time": "2020-04-15T08:16:06",
        "upload_time_iso_8601": "2020-04-15T08:16:06.499890Z",
        "url": "https://files.pythonhosted.org/packages/5e/12/934c7b2db3123d6196e837879463661c4e1a34f4afcd275914c621efbc66/predictionscorer-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c88389aed82af5085d0415cfb9086da8d81bf5627bd5ad269b5e13016943cff2",
          "md5": "47e4b455914de6aa1f0e696f0d8cd382",
          "sha256": "740c6d50bb2efaf20af130db37bd4bde200ffe7bec3588ea39932f74184e0f03"
        },
        "downloads": -1,
        "filename": "predictionscorer-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "47e4b455914de6aa1f0e696f0d8cd382",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 6319,
        "upload_time": "2020-05-15T10:17:35",
        "upload_time_iso_8601": "2020-05-15T10:17:35.607894Z",
        "url": "https://files.pythonhosted.org/packages/c8/83/89aed82af5085d0415cfb9086da8d81bf5627bd5ad269b5e13016943cff2/predictionscorer-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b29a73457082699db5281cc760b47ba7c091df1640567235a59e5d82e8f6eb27",
          "md5": "9bbfa94c50aa0e70ccbec25bb725e5a4",
          "sha256": "b22885107b6a6dcdf9a98d75a2ef9bea62b79c22215d154225960fdb4d4cbfc9"
        },
        "downloads": -1,
        "filename": "predictionscorer-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9bbfa94c50aa0e70ccbec25bb725e5a4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 14555,
        "upload_time": "2020-05-24T14:03:52",
        "upload_time_iso_8601": "2020-05-24T14:03:52.680552Z",
        "url": "https://files.pythonhosted.org/packages/b2/9a/73457082699db5281cc760b47ba7c091df1640567235a59e5d82e8f6eb27/predictionscorer-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7d0d4fbfb674ddecd091306552d2ddd7c9e6d02e58ca8df10844450068b1243c",
          "md5": "1aabe3605d616946ba54857d37072af5",
          "sha256": "971bd3e1880c2a15a1a9a712136f338e6dab863ecbb487fb7e750a9f40dd620b"
        },
        "downloads": -1,
        "filename": "predictionscorer-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1aabe3605d616946ba54857d37072af5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<3.9",
        "size": 5294,
        "upload_time": "2020-07-14T15:11:39",
        "upload_time_iso_8601": "2020-07-14T15:11:39.419117Z",
        "url": "https://files.pythonhosted.org/packages/7d/0d/4fbfb674ddecd091306552d2ddd7c9e6d02e58ca8df10844450068b1243c/predictionscorer-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3874cb123cbd1ebb6a52fa2466d21b6984b5b52f1378b4746503583873bd5405",
          "md5": "4cdd066ab9414a3a8d0ffa5961934be6",
          "sha256": "cbdb0087bb9c42536e8e0aa6d94d1b59737dee41957b550731861194867b73b4"
        },
        "downloads": -1,
        "filename": "predictionscorer-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4cdd066ab9414a3a8d0ffa5961934be6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<3.9",
        "size": 5463,
        "upload_time": "2020-09-28T20:29:25",
        "upload_time_iso_8601": "2020-09-28T20:29:25.984123Z",
        "url": "https://files.pythonhosted.org/packages/38/74/cb123cbd1ebb6a52fa2466d21b6984b5b52f1378b4746503583873bd5405/predictionscorer-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3874cb123cbd1ebb6a52fa2466d21b6984b5b52f1378b4746503583873bd5405",
        "md5": "4cdd066ab9414a3a8d0ffa5961934be6",
        "sha256": "cbdb0087bb9c42536e8e0aa6d94d1b59737dee41957b550731861194867b73b4"
      },
      "downloads": -1,
      "filename": "predictionscorer-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "4cdd066ab9414a3a8d0ffa5961934be6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<3.9",
      "size": 5463,
      "upload_time": "2020-09-28T20:29:25",
      "upload_time_iso_8601": "2020-09-28T20:29:25.984123Z",
      "url": "https://files.pythonhosted.org/packages/38/74/cb123cbd1ebb6a52fa2466d21b6984b5b52f1378b4746503583873bd5405/predictionscorer-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}