{
  "info": {
    "author": "Mohit Rajput",
    "author_email": "mohitrajput901@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# coco-transform-util\nA python package to perform same transformation to coco-annotation as performed on the image.\n\n\n## Installation\n\n### Way 1\n```bash\n$ git clone https://github.com/Cargill-AI/coco-transform-util.git\n$ cd coco-transform-util\n$ python3 setup.py install\n```\n\n### Way 2\n```bash\n$ pip3 install git+https://github.com/Cargill-AI/coco-transform-util.git\n<<< Username: <user_id or email>\n<<< Password: <personal access token or SSH key>\n```\nPersonal Access token looks like this `83b318cg875a5g302e5fdaag74afc8ceb6a91a2e`.\n\nReference: [How to generate Personal Access token](https://docs.github.com/en/github/authenticating-to-github/keeping-your-account-and-data-secure/creating-a-personal-access-token)  \n\n### Check installation\n```python\nimport ctu\nprint(ctu.__version__)\n```\n\n\n## Benefits and Use Cases\n\n1. Faster Model Training: Decrease the size of images and accordingly its annotation will be changed using this.  \n2. Flexibility: Rescaling of images and annotations to meet the need of Model/Framework.  \n3. Cost Saving: Lesser Computation requirement as images can be downscaled.  \n4. Interpretability: Annotation Visualization is also a part of this package.\n5. Data Augmentation: \\<more practical in future\\>\n6. Ability to handle other cases: Added Functionality such as cropping or padding of the annotation can help in multiple other cases such as:\n    - cropping out each object image & annotation from an original image\n    - cropping unnecessary area to zoom in on some particular area.\n    - converting images to 1:1 aspect ratio by using padding and/or cropping.\n  \n  \n## How to use it?\n  \n### Core\nThere are four core modules inside that helps in performing operations on COCO Annotation. These can imported as shown below:  \n```python\nfrom ctu import WholeCoco2SingleImgCoco, Coco2CocoRel, CocoRel2CocoSpecificSize, AggreagateCoco  \n```  \nIt's recommended that you have look at `samples/example_core_modules.py` to understand and explore how to use these.\n  \n### Wrapper\nMaking use of wrappers can also come in handly to perform multiple operations in a much simpler and interpretable manner using the functions provided below:  \n```python\nfrom ctu import (\n    sample_modif_step_di, get_modif_imag, get_modif_coco_annotation, \n    accept_and_process_modif_di, ImgTransform, Visualize\n)\n```\nIt's recommended that you have look at `samples/example_highlevel_function.py` to understand and explore how to use these. \n  \n  \nSome sample data has also been provided with this package at `example_data/*` to explore these functionalities.  \n  \n  \n## Demo / Sample\n\nA sample HTML created from Jupyter-Notebook, contating some sample results has been added to the path `samples/Demo-SampleOutput.html`.  \n  \n  \n## Version History\n\n- v0.1: Core Modules: `WholeCoco2SingleImgCoco, Coco2CocoRel, CocoRel2CocoSpecificSize`. External Dependency on AMLEET package.\n- v0.2: Removed the dependency on AMLEET package. Develop Core Module: `AggreagateCoco`. Addition of field \"area\" under \"annotations\" in coco.\n- v0.3: Completed: Remove the out of frame coordinates in annotation. Update & add fields in \"annotation\" \\> \"images\". Ability to create transparent and general mask `create_mask`. **In Development:** Ability to export transformed image, mask and annotation per image wise and as a whole too. \n\n  \n## Future  \n- Update the image fields in \"images\" key. (done)\n- Crop out the annotation which are out-of-frame based on recent image shape. (done)\n- Annotation Visualization + Mask creation can become a core feature to this library. (done)\n- Rotate 90 degree left/right.  \n- Flip horizontally or vertically. \n- COCO to other annotation format can also be a feature to this package.\n\n## Push to pypi\n```bash\n$ python3 setup.py sdist\n$ twine upload dist/*\n```\n\n\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Cargill-AI/coco-transform-util",
    "keywords": "COCO,Computer Vision,Deep Learning",
    "license": "",
    "maintainer": "Mohit Rajput",
    "maintainer_email": "mohitrajput901@gmail.com",
    "name": "ctu",
    "package_url": "https://pypi.org/project/ctu/",
    "platform": null,
    "project_url": "https://pypi.org/project/ctu/",
    "project_urls": {
      "Homepage": "https://github.com/Cargill-AI/coco-transform-util"
    },
    "release_url": "https://pypi.org/project/ctu/0.2.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A python package to perform same transformation to coco-annotation as performed on the image.",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13192048,
  "releases": {
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "02e90e347eaef500f9228260943d6dae0e095b9bfe688f06d8a601a72bc23d56",
          "md5": "b22e38c931e7608112d77591b2205fca",
          "sha256": "06bb68048a0b7c500d179194d19cf27882261aef706aad0b5c8af4e9e787383f"
        },
        "downloads": -1,
        "filename": "ctu-0.2-py3.9.egg",
        "has_sig": false,
        "md5_digest": "b22e38c931e7608112d77591b2205fca",
        "packagetype": "bdist_egg",
        "python_version": "0.2",
        "requires_python": null,
        "size": 38288,
        "upload_time": "2022-03-16T10:28:50",
        "upload_time_iso_8601": "2022-03-16T10:28:50.213710Z",
        "url": "https://files.pythonhosted.org/packages/02/e9/0e347eaef500f9228260943d6dae0e095b9bfe688f06d8a601a72bc23d56/ctu-0.2-py3.9.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5e989818ef9bad1980dac98ef855a6e4529bed6baec5c50e915e111790fdf872",
          "md5": "587ac492e1c5fb71241e2a114352a513",
          "sha256": "3bb494ec9dc7496c9f1d749be6c3c0c668a4c612b79a68577d3e3bc3fe4fc91f"
        },
        "downloads": -1,
        "filename": "ctu-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "587ac492e1c5fb71241e2a114352a513",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18109,
        "upload_time": "2022-01-13T14:36:40",
        "upload_time_iso_8601": "2022-01-13T14:36:40.168132Z",
        "url": "https://files.pythonhosted.org/packages/5e/98/9818ef9bad1980dac98ef855a6e4529bed6baec5c50e915e111790fdf872/ctu-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "57989283589fa8fd7ec5dd510daf146c1050be1faea9be8b47c7ff25970626bc",
          "md5": "4ae117c6ea4a1ac875a04e2bbe79f6c9",
          "sha256": "b0625e1a29714ec756c88f570e32e40ea7930c11aceb2c76b2b2963000cfc9ad"
        },
        "downloads": -1,
        "filename": "ctu-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4ae117c6ea4a1ac875a04e2bbe79f6c9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18454,
        "upload_time": "2022-03-16T10:28:51",
        "upload_time_iso_8601": "2022-03-16T10:28:51.484495Z",
        "url": "https://files.pythonhosted.org/packages/57/98/9283589fa8fd7ec5dd510daf146c1050be1faea9be8b47c7ff25970626bc/ctu-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "57989283589fa8fd7ec5dd510daf146c1050be1faea9be8b47c7ff25970626bc",
        "md5": "4ae117c6ea4a1ac875a04e2bbe79f6c9",
        "sha256": "b0625e1a29714ec756c88f570e32e40ea7930c11aceb2c76b2b2963000cfc9ad"
      },
      "downloads": -1,
      "filename": "ctu-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "4ae117c6ea4a1ac875a04e2bbe79f6c9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 18454,
      "upload_time": "2022-03-16T10:28:51",
      "upload_time_iso_8601": "2022-03-16T10:28:51.484495Z",
      "url": "https://files.pythonhosted.org/packages/57/98/9283589fa8fd7ec5dd510daf146c1050be1faea9be8b47c7ff25970626bc/ctu-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}