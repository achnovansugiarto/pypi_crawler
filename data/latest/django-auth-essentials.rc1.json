{
  "info": {
    "author": "Iqbal Mahdi",
    "author_email": "mahdiiqbal37@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 3.2",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "======================\ndjango-auth-essentials\n======================\n\n\"django-auth-essentials\" is a Django app that provides all the basic and necessary authentication and account verification functionalities you need for your django project, out of the bat.\nOnce successfully integrated to your project, you don't need to worry about register, login/logout, password change/reset functionalities as \"django-auth-essentials\" takes care of those.\n\"django-auth-essentials\" also provides email/account verification options to make your life easier.\n\nDetailed documentation is in the \"docs\" directory.\n\nQuick start\n-----------\n\n1. Add ``django_auth_essentials`` to your INSTALLED_APPS setting like this::\n\n    INSTALLED_APPS = [\n        ...\n        'django_auth_essentials',\n    ]\n\n2. Include the django_auth_essentials URLconf in your project urls.py like this::\n\n    path('accounts/', include('django_auth_essentials.urls')),\n\n3. Start the development server ``python manage.py runserver``.\n\n4. Visit http://127.0.0.1:8000/accounts/login/ to test it yourself.\n\nConfiguration\n-------------\n\nWith above steps, you've successfully integrated \"django_auth_essentials\" to your project.\nBut there is more you can do with \"django_auth_essentials\". It comes with several different configuration options. You can configure it as per your project requirements.\n\nThe initial integration already provides register, login/logout and password changing functionalities. Below are some extra and handy configurations for \"django_auth_essentials\".\n\nUser Email Configurations\n-------------------------\n\n``REQUIRE_EMAIL`` determines whether email is required when registering::\n\n    # by default it's set to False (Not required)\n    REQUIRE_EMAIL = True\n\n``UNIQUE_EMAIL`` determines if registering email should be unique or not::\n\n    # by default it's set to False (Not unique)\n    UNIQUE_EMAIL = True\n\n``ALLOW_VERIFICATION`` determines the integration of email verification feature::\n\n    # by default it's set to False (No verification)\n    ALLOW_VERIFICATION = True\n\nNOTE: If you have this setting turned on you don't need to specify ``UNIQUE_EMAIL`` or ``REQUIRE_EMAIL``\n\nPassword Reset Configuration\n----------------------------\n\n``ALLOW_PASSWORD_RESET`` determines the integration of password resetting feature::\n\n    # by default it's set to False (Not integrated)\n    ALLOW_PASSWORD_RESET = True\n\nNOTE: For ``ALLOW_VERIFICATION`` and ``ALLOW_PASSWORD_RESET`` settings to work, you need to specify email settings for your project. Verification email and password resetting email will utilize those settings. For example::\n\n    ...\n    EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\n\n    # This Configuration is for gmail\n    EMAIL_HOST = 'smtp.gmail.com'\n    EMAIL_USE_TLS = True\n    EMAIL_PORT = 587\n    EMAIL_HOST_USER = 'yourmail@gmail.com'\n    EMAIL_HOST_PASSWORD = 'yourpassword'\n\nAccess Restricting Configurations\n---------------------------------\n\nNOTE: If you defined your own access restriction logics, you can avoid these settings completely.\n\n``RESTRICT_UNAUTHENTICATED_USER_ACCESS`` determines if \"django_auth_essentials\" 's default access restriction for unauthenticated users to regitration, login, password reset and email verification pages only should be implemented::\n\n    # by default set to False (Not implemented)\n    RESTRICT_UNAUTHENTICATED_USER_ACCESS = True\n\n``LOGIN_REQUIRED_EXEMPT_URLS`` a List  | Let's you add custom urls you want to be accessible to the unauthenticated users if you have ``RESTRICT_UNAUTHENTICATED_USER_ACCESS`` turned on::\n    \n    LOGIN_REQUIRED_EXEMPT_URLS = [\n        'allow/path/one/',\n        'allow/path/two/',\n    ]\n\n``UNAUTHENTICATED_SPECIFIC_URLS`` a List | Let's you add custom urls you want to be accessible specificly to the unauthenticated users::\n\n    UNAUTHENTICATED_SPECIFIC_URLS = [\n        'auth-user/not-allowed/one/',\n        'auth-user/not-allowed/two/',\n    ]\n\nNOTE: If you have any dynamic urls you want to include in the ``LOGIN_REQUIRED_EXEMPT_URLS`` and/or ``UNAUTHENTICATED_SPECIFIC_URLS`` configurations, simply specify the url path leading upto the dynamic part. For example if your dynamic url is something like \"dynamic/url/<pk>/\" all you need to do is add \"dynamic/url/\" to the desired setting.\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mah-di",
    "keywords": "django,authentication,email verification,account verification,auth",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-auth-essentials",
    "package_url": "https://pypi.org/project/django-auth-essentials/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-auth-essentials/",
    "project_urls": {
      "Homepage": "https://github.com/mah-di"
    },
    "release_url": "https://pypi.org/project/django-auth-essentials/1.0/",
    "requires_dist": [
      "Django (>=3.0)"
    ],
    "requires_python": ">=3",
    "summary": "A Django app that provides authentication, password change, password reset and account verification functionalities.",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11624779,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bcde0ae0c5d0db6b55c353b056668958807cea0627707d31f90e6e120b3db913",
          "md5": "47446a771c56eedc5b5653defdc19fcb",
          "sha256": "f3a18e4fc869e2f3676a52e1712f7409521b34ce2f664bba682ddd9ba8d79778"
        },
        "downloads": -1,
        "filename": "django_auth_essentials-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "47446a771c56eedc5b5653defdc19fcb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 21736,
        "upload_time": "2021-10-04T16:13:46",
        "upload_time_iso_8601": "2021-10-04T16:13:46.192878Z",
        "url": "https://files.pythonhosted.org/packages/bc/de/0ae0c5d0db6b55c353b056668958807cea0627707d31f90e6e120b3db913/django_auth_essentials-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c596c886af9270047389f5411dd9d71d240c460eb9fe6c235df091b5eb1d9ed",
          "md5": "54f725e10cbb2c6367859b4d2183766a",
          "sha256": "b941f5d0756a0b7874ad76524d2a885fcf15166ef69206ff83a61519321fb045"
        },
        "downloads": -1,
        "filename": "django-auth-essentials-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "54f725e10cbb2c6367859b4d2183766a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 14291,
        "upload_time": "2021-10-04T16:13:48",
        "upload_time_iso_8601": "2021-10-04T16:13:48.213381Z",
        "url": "https://files.pythonhosted.org/packages/8c/59/6c886af9270047389f5411dd9d71d240c460eb9fe6c235df091b5eb1d9ed/django-auth-essentials-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bcde0ae0c5d0db6b55c353b056668958807cea0627707d31f90e6e120b3db913",
        "md5": "47446a771c56eedc5b5653defdc19fcb",
        "sha256": "f3a18e4fc869e2f3676a52e1712f7409521b34ce2f664bba682ddd9ba8d79778"
      },
      "downloads": -1,
      "filename": "django_auth_essentials-1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "47446a771c56eedc5b5653defdc19fcb",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3",
      "size": 21736,
      "upload_time": "2021-10-04T16:13:46",
      "upload_time_iso_8601": "2021-10-04T16:13:46.192878Z",
      "url": "https://files.pythonhosted.org/packages/bc/de/0ae0c5d0db6b55c353b056668958807cea0627707d31f90e6e120b3db913/django_auth_essentials-1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8c596c886af9270047389f5411dd9d71d240c460eb9fe6c235df091b5eb1d9ed",
        "md5": "54f725e10cbb2c6367859b4d2183766a",
        "sha256": "b941f5d0756a0b7874ad76524d2a885fcf15166ef69206ff83a61519321fb045"
      },
      "downloads": -1,
      "filename": "django-auth-essentials-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "54f725e10cbb2c6367859b4d2183766a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3",
      "size": 14291,
      "upload_time": "2021-10-04T16:13:48",
      "upload_time_iso_8601": "2021-10-04T16:13:48.213381Z",
      "url": "https://files.pythonhosted.org/packages/8c/59/6c886af9270047389f5411dd9d71d240c460eb9fe6c235df091b5eb1d9ed/django-auth-essentials-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}