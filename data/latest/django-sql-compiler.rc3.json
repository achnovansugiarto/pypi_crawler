{
  "info": {
    "author": "Grok Data / Jared Stufft",
    "author_email": "jared@grokdata.tech",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Web Environment",
      "Framework :: Django",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# Django SQL Compiler\n\nA light-weight module to generate usable SQL from a Django QuerySet.\n\n## Backend Support\nCurrently, `django-sql-compiler` only supports connections made via the `django.db.backends.postgresql` backend.\n\n## About Django SQL Compiler\nThe Django ORM is very useful for abstracting away SQL queries from the focus of the developer. This is very useful\nfor preventing SQL injection attacks and generating queries programmatically using applied logic in your Django app.\n\nHowever, very complex queries (such as those used in reporting, analytics, or data science projects) can be difficult\nor impossible to create with the Django ORM alone. The ORM provides the `.raw` query method and exposes the raw database \n`connection` objects which can be used to execute arbitrary SQL against the database. In doing so, we lose the benefit\nof the ORM with respect to dynamically adding components to the query (such as filters in a `WHERE` clause) in a way that \nprevents injection attacks.\n\nThe base Django `QuerySet` object has a `Query` object available at the `.query` property. Casting this `Query` object as a `str` \nprints out what looks like a valid SQL query. However, this version of the query is not properly escaped or quoted, meaning \nit's not **actually** valid SQL unless there are no dynamic components (such as filters from user input) in the `QuerySet`.\n\n`django-sql-compiler` aims to provide a way to generate clean, usable SQL from a given `QuerySet`, which can be used in \ntandem with a raw SQL query to give SQL users more flexibility in querying their Django-connected database while still \nretaining the Django ORM for security and dynamic query generation purposes.\n\n## Usage\nInstall the package:\n```\npip install django-sql-compiler\n```\n\nAdd `sql_compiler` to your `INSTALLED_APPS`:\n\n```python\nINSTALLED_APPS = [\n    ...,\n    'sql_compiler'\n]\n```\n\nAdd the `SQLCompilerManager` to your models:\n\n```python\nfrom django.db import models\nfrom sql_compiler import SQLCompilerManager\n\n\nclass MyModel(models.Model):\n\n    objects = SQLCompilerManager()\n    field_one = models.IntegerField()\n    field_two = models.CharField(max_length=200)\n    field_three = models.DateTimeField()\n\n```\n\nFor a given `QuerySet` on the model, you can access the executable query be accessing the `.executable_query` property of the `QuerySet`.\n\n```python\nquery_set = MyModel.objects.filter(field_one__lte=10)\nexecutable_query = query_set.executable_query\nprint(executable_query)\n```\n\nThis query can then be used in another query as a Common Table Expression or Subquery:\n\n```python\n# Basic usage\nwrapper_query = \"\"\"select * from ({}) a\"\"\".format(executable_query)\nnew_queryset = MyModel.objects.raw(wrapper_query)\n\n```\n\nWhile this is a very simple example, you can use this in more complicated queries:\n```python\n\n# inside a view\nfiltered_query_set = MyModel.objects.filter(\n    field_one__lte=request.data.get('field_one_filter', 0),\n    field_two__in=request.data.get('field_two_filter', [])\n    )\n    \n\nmore_complex_query = \"\"\"\nselect\n    RANK() over (partition by a.field_one order by a.field_three desc) as rnk\n    ,a.field_one\n    ,a.field_two\nfrom\n    ({}) a\n\"\"\".format(filtered_query_set.executable_query)\n\nmore_complex_results = MyModel.objects.raw(more_complex_query)\n```\n\nNow, users who are more familiar with SQL rather than the Django ORM can use the ORM for security and conveniently\ngenerating SQL queries and use SQL for the rest of their transformations.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/GrokData/django-sql-compiler",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-sql-compiler",
    "package_url": "https://pypi.org/project/django-sql-compiler/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-sql-compiler/",
    "project_urls": {
      "Homepage": "https://github.com/GrokData/django-sql-compiler"
    },
    "release_url": "https://pypi.org/project/django-sql-compiler/0.1.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A light-weight module to generate usable SQL from a Django QuerySet.",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10656143,
  "releases": {
    "0.0.5a0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "10739900a97c26ea96214f1a765c115abb351ff27d1a09d51cf5e64fcea18e43",
          "md5": "4d43e073b73add3b89a6af8392643ee9",
          "sha256": "e57b562a3508762c860e168c0b4e6b1b8195bf8ff117588ec25c5e0378f62e30"
        },
        "downloads": -1,
        "filename": "django_sql_compiler-0.0.5a0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4d43e073b73add3b89a6af8392643ee9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6088,
        "upload_time": "2020-08-28T18:59:20",
        "upload_time_iso_8601": "2020-08-28T18:59:20.905422Z",
        "url": "https://files.pythonhosted.org/packages/10/73/9900a97c26ea96214f1a765c115abb351ff27d1a09d51cf5e64fcea18e43/django_sql_compiler-0.0.5a0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7d2ef40a15edc2e865dec5ee1f3875a7bbe6f87c0b61d5f8b1bc8bea4d8234c4",
          "md5": "caa38c28daa12004146d2d4e776f84e8",
          "sha256": "968bfc0cdc379e2404653cda67c4bd859c50e56520713f461025300a1472cb50"
        },
        "downloads": -1,
        "filename": "django-sql-compiler-0.0.5a0.tar.gz",
        "has_sig": false,
        "md5_digest": "caa38c28daa12004146d2d4e776f84e8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4318,
        "upload_time": "2020-08-28T18:59:23",
        "upload_time_iso_8601": "2020-08-28T18:59:23.846782Z",
        "url": "https://files.pythonhosted.org/packages/7d/2e/f40a15edc2e865dec5ee1f3875a7bbe6f87c0b61d5f8b1bc8bea4d8234c4/django-sql-compiler-0.0.5a0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1ea916bc9e65cac3e63ffb4d0611ae36f3588fd9724862b3835cbc8978d34692",
          "md5": "2f1e238ab1213deca4b2cbc9aff77545",
          "sha256": "e2c61485b419bb5e9741c6b5e3896fbb95f47d2083b2be6fcc0ca4c4a7fd2c47"
        },
        "downloads": -1,
        "filename": "django_sql_compiler-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2f1e238ab1213deca4b2cbc9aff77545",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6078,
        "upload_time": "2021-06-15T20:06:16",
        "upload_time_iso_8601": "2021-06-15T20:06:16.341842Z",
        "url": "https://files.pythonhosted.org/packages/1e/a9/16bc9e65cac3e63ffb4d0611ae36f3588fd9724862b3835cbc8978d34692/django_sql_compiler-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "af540bdfca9800ca8d4fe1a39b918460c2f2f123d713e2b2eb958204c5be4aec",
          "md5": "d90b7181607a75d59a7a644e1da04808",
          "sha256": "1126ed0cbe58e0dc216d74d8ed6a17c8aea58e7e5da3fd9e793ecbd1b5f4646f"
        },
        "downloads": -1,
        "filename": "django-sql-compiler-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d90b7181607a75d59a7a644e1da04808",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4351,
        "upload_time": "2021-06-15T20:06:45",
        "upload_time_iso_8601": "2021-06-15T20:06:45.456756Z",
        "url": "https://files.pythonhosted.org/packages/af/54/0bdfca9800ca8d4fe1a39b918460c2f2f123d713e2b2eb958204c5be4aec/django-sql-compiler-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2abb839b102e56df4dd6fd41f55a43af08adc597ca56bdcac4efef1cecd27f3b",
          "md5": "1f9f1f784c5bbf614fd3799035716cee",
          "sha256": "a23862a1f39439461bfa89d9043f805210c19932c790b127ddf08972a184c807"
        },
        "downloads": -1,
        "filename": "django-sql-compiler-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1f9f1f784c5bbf614fd3799035716cee",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4386,
        "upload_time": "2021-06-15T20:27:29",
        "upload_time_iso_8601": "2021-06-15T20:27:29.113665Z",
        "url": "https://files.pythonhosted.org/packages/2a/bb/839b102e56df4dd6fd41f55a43af08adc597ca56bdcac4efef1cecd27f3b/django-sql-compiler-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2abb839b102e56df4dd6fd41f55a43af08adc597ca56bdcac4efef1cecd27f3b",
        "md5": "1f9f1f784c5bbf614fd3799035716cee",
        "sha256": "a23862a1f39439461bfa89d9043f805210c19932c790b127ddf08972a184c807"
      },
      "downloads": -1,
      "filename": "django-sql-compiler-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "1f9f1f784c5bbf614fd3799035716cee",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4386,
      "upload_time": "2021-06-15T20:27:29",
      "upload_time_iso_8601": "2021-06-15T20:27:29.113665Z",
      "url": "https://files.pythonhosted.org/packages/2a/bb/839b102e56df4dd6fd41f55a43af08adc597ca56bdcac4efef1cecd27f3b/django-sql-compiler-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}