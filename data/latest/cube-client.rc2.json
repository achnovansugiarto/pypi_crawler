{
  "info": {
    "author": "Thomas Sileo",
    "author_email": "thomas.sileo@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Topic :: Database"
    ],
    "description": "===========\nCube-client\n===========\n\nA Python client for `Cube: Time Series Data Collection & Analysis <http://square.github.com/cube/>`_.\n\n.. image:: https://pypip.in/v/cube-client/badge.png\n        :target: https://crate.io/packages/cube-client\n\n.. image:: https://pypip.in/d/cube-client/badge.png\n        :target: https://crate.io/packages/cube-client\n\n\nFeatures\n========\n\nYou can post (`Collector <https://github.com/square/cube/wiki/Collector>`_) and request (`Evaluator <https://github.com/square/cube/wiki/Evaluator>`_) data to/from Cube.\n\n- Post events\n- Request events\n- Request metrics\n- Request known event types\n\n\nOverview\n========\n\n.. code-block:: python\n\n    >>> from cube import Cube, ONE_HOUR\n    >>> c = Cube()\n    >>> \n    >>> c.put('sample_data', {'myval': 10})\n    [{'data': {'myval': 10}, 'type': 'sample_data', 'time': '2012-10-01T13:04:04.453929'}]\n\n    >>> c.event('sample_data')\n    [{u'time': u'2012-10-01T13:04:04.453Z'}]\n\n    >>> c.put('sample_data', {'myval': 20})\n    [{'data': {'myval': 20}, 'type': 'sample_data', 'time': '2012-10-01T13:04:39.725676'}]\n\n    >>> c.event('sample_data')\n    [{u'time': u'2012-10-01T13:04:04.453Z'}, {u'time': u'2012-10-01T13:04:39.725Z'}]\n\n    >>> c.event('sample_data(myval)')\n    [{u'data': {u'myval': 10}, u'time': u'2012-10-01T13:04:04.453Z'}, {u'data': {u'myval': 20}, u'time': u'2012-10-01T13:04:39.725Z'}]\n\n    >>> c.metric('sum(sample_data)', step=ONE_HOUR, start='2012-10-01')\n    [{u'value': 0, u'time': u'2012-10-01T00:00:00.000Z'}, {u'value': 0, u'time': u'2012-10-01T01:00:00.000Z'}, {u'value': 0, u'time': u'2012-10-01T02:00:00.000Z'}, {u'value': 0, u'time': u'2012-10-01T03:00:00.000Z'}, {u'value': 0, u'time': u'2012-10-01T04:00:00.000Z'}, {u'value': 0, u'time': u'2012-10-01T05:00:00.000Z'}, {u'value': 0, u'time': u'2012-10-01T06:00:00.000Z'}, {u'value': 0, u'time': u'2012-10-01T07:00:00.000Z'}, {u'value': 0, u'time': u'2012-10-01T08:00:00.000Z'}, {u'value': 0, u'time': u'2012-10-01T09:00:00.000Z'}, {u'value': 0, u'time': u'2012-10-01T10:00:00.000Z'}, {u'value': 0, u'time': u'2012-10-01T11:00:00.000Z'}, {u'value': 0, u'time': u'2012-10-01T12:00:00.000Z'}, {u'value': 2, u'time': u'2012-10-01T13:00:00.000Z'}]\n\n\nRequirements\n============\n\n- `Requests <http://docs.python-requests.org/en/latest/>`_\n\n\nInstallation\n============\n\n::\n\n    $ pip install cube-client\n\n\nUsage\n=====\n\n.. code-block:: python\n\n    from cube import Cube, ONE_HOUR\n    from datetime import datetime\n\n    cube = Cube()\n    # or\n    cube = Cube('localhost') \n\n    # Create an event\n    cube.put(\"myevent\", {'temp': 30})\n    # or\n    cube.put(\"myevent\", {'temp': 30}, time=datetime.now().isoformat())\n\n    # Low level queries\n    # =================\n\n    # Request events data\n    # See Cube queries:\n    # https://github.com/square/cube/wiki/Queries#wiki-metric\n    cube.event('myevent(temp)')\n\n    # Request metrics\n    cube.metric('sum(myevent(temp))', step='36e5', start='2013-9-01'))\n    # or\n    cube.metric('sum(myevent(temp))', step=ONE_HOUR, start=datetime(2013, 9, 1))\n\n    # Request known event types\n    cube.types()\n\n    # High level queries\n    # ==================\n\n    from cube.expressions import EventExpression, Sum\n    temp = EventExpression('myevent', 'temp')\n\n    cube.metric(Sum(temp), step=ONE_HOUR, start='2013-10-1')\n\n\nEvent helper\n------------\n\n.. code-block:: python\n\n    from cube import Cube, Event, Sum\n\n    cube = Cube()\n\n    my_event = cube.get_event('myevent')\n    # or\n    my_event = Event(cube, 'myevent')\n\n    my_event.put({'temp': 10})\n    my_event.put({'temp': 20})\n\n    my_event.event()\n    # [{u'time': u'2012-10-01T13:04:04.453Z'}, {u'time': u'2012-10-01T13:04:39.725Z'}]\n\n    my_event.event('myevent(temp)')\n\n    temp = my_event.expression('temp').gt('temp', 15)\n    # => myevent(temp).gt(temp, 15)\n\n    my_event.metric(Sum(temp))\n    # => my_event.metric('sum(myevent(temp).gt(temp, 15))')\n\n\nMetric resolutions shortcut\n---------------------------\n\n- **TEN_SECOND** for **1e4** - 10-second\n- **ONE_MINUTE** for **6e4** - 1-minute \n- **FIVE_MINUTE** for **3e5** - 5-minute\n- **ONE_HOUR** for **36e5** - 1-hour\n- **ONE_DAY** for **864e5** - 1-day\n\n.. code-block:: python\n\n    from cube import ONE_HOUR, FIVE_MINUTE\n\nTime utils\n----------\n\n.. code-block:: python\n\n    from cube import ONE_HOUR\n    from cube.time_utils import timeago\n\n\n    c.metric('sum(myevent(key))', step=ONE_HOUR, start=timeago('6h'))\n\n\nChangelog\n=========\n\n0.2.0\n-----\n\n**Not released yet**\n\n- Cleaned code (PEP8)\n- Compatible with requests 2.0\n- Added metric resolution shortcut\n- Added a Event helper\n- Merged some parts of `pypercube <https://github.com/sbuss/pypercube>`_, ``time_utils``, ``EventExpression`` and ``Filter``.\n\n\n\nLicense (MIT)\n=============\n\nCopyright (c) 2013 Thomas Sileo and Steven Buss\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/tsileo/cube-client",
    "keywords": "cube time series",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "cube-client",
    "package_url": "https://pypi.org/project/cube-client/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/cube-client/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/tsileo/cube-client"
    },
    "release_url": "https://pypi.org/project/cube-client/0.2.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "A Python client for Cube: Time Series Data Collection & Analysis",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 884849,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9616717c5d0bb4f7c6a097f1d9851a48bc48a76b2cd51c151b54946682fe1c4d",
          "md5": "de80d9f8d8da4434c54a76f33bf06147",
          "sha256": "4029c6c0641f1f070794ea997d63a9345050c8ed7473e47320879743d3285866"
        },
        "downloads": -1,
        "filename": "cube-client-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "de80d9f8d8da4434c54a76f33bf06147",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3397,
        "upload_time": "2012-10-01T11:54:37",
        "upload_time_iso_8601": "2012-10-01T11:54:37.210686Z",
        "url": "https://files.pythonhosted.org/packages/96/16/717c5d0bb4f7c6a097f1d9851a48bc48a76b2cd51c151b54946682fe1c4d/cube-client-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cac04f146a95ae2ad366e98e04d4a72deef348a703368d492d67e7accc2616ad",
          "md5": "db789558ee0ee1a6d5eeed1dc5e58196",
          "sha256": "55c397d335b9e20afa8cc0279f49e35d0e78780919e465c4d0e1dc30532ea10f"
        },
        "downloads": -1,
        "filename": "cube-client-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "db789558ee0ee1a6d5eeed1dc5e58196",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11605,
        "upload_time": "2013-10-09T06:52:55",
        "upload_time_iso_8601": "2013-10-09T06:52:55.725355Z",
        "url": "https://files.pythonhosted.org/packages/ca/c0/4f146a95ae2ad366e98e04d4a72deef348a703368d492d67e7accc2616ad/cube-client-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cac04f146a95ae2ad366e98e04d4a72deef348a703368d492d67e7accc2616ad",
        "md5": "db789558ee0ee1a6d5eeed1dc5e58196",
        "sha256": "55c397d335b9e20afa8cc0279f49e35d0e78780919e465c4d0e1dc30532ea10f"
      },
      "downloads": -1,
      "filename": "cube-client-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "db789558ee0ee1a6d5eeed1dc5e58196",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11605,
      "upload_time": "2013-10-09T06:52:55",
      "upload_time_iso_8601": "2013-10-09T06:52:55.725355Z",
      "url": "https://files.pythonhosted.org/packages/ca/c0/4f146a95ae2ad366e98e04d4a72deef348a703368d492d67e7accc2616ad/cube-client-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}