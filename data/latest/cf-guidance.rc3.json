{
  "info": {
    "author": "enzokro",
    "author_email": "christopher.kroenke@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "cf_guidance\n================\n\n<!-- WARNING: THIS FILE WAS AUTOGENERATED! DO NOT EDIT! -->\n\nThis library has normalizations and schedules for the Classifier-free\nGuidance parameter in Diffusion models. We call the guidance modifiers\n`transforms`.\n\nIt seems that `transforms` can improve the quality of generated images\nacross Diffusion pipelines. To be specific:\n\n- Normalizing can help with image syntax.  \n- Scheduling can improve image details.\n\nFor more details, please check out the official [blog\npost](https://enzokro.dev/blog/posts/2022-11-15-guidance-expts-1/).\n\n## Install\n\n``` sh\npip install cf_guidance\n```\n\n## How to use\n\nThe follow section creates a few example schedules. Then, we use the\nschedules to initialize different kinds of `transforms`.\n\n### Creating Cosine schedules\n\nWe create a few different schedules:\n\nA Cosine schedule that starts from the default Guidance parameter in\ndiffusion $\\left( G = 7.5\\right)$ and works it way down to a minimum of\n$0.15$.\n\nNext we create the same schedule, except with an initial `warmup`. With\nwarmup, $G$ starts from $0.15$ and linearly works up to a maximum\n$G_\\text{max} = 7.5$. Here we warmup over the first 10% of the total\ndiffusion steps. After warmup, the schedule decreases following a cosine\ncurve.\n\nFinally, we create a schedule with small values of $G$. This is meant\nfor the guidance transform\n[`TNormGuidance`](https://enzokro.github.io/guidance_transforms/transforms.html#tnormguidance).\nThis transforms puts the vectors on a similar scale, so we need a much\nsmaller value than usual when mixing them.\n\n``` python\nfrom cf_guidance.schedules import get_cos_sched\n```\n\n``` python\n# Parameters from the blog post\nmax_val = 7.5\nmin_val = 0.15\nnum_steps = 50\nnum_warmup_steps = 5\n\n\n# 1) Baseline cosine schedule\ncos_params = {\n    'max_val':           max_val,\n    'num_steps':         num_steps,\n    'min_val':           min_val,\n    'num_warmup_steps':  0,\n}\n\n# 2) Cosine schedule with warmup \nwarmup_cos_params = {\n    'max_val':           max_val,\n    'num_steps':         num_steps,\n    'min_val':           min_val,\n    'warmup_init_val':   min_val + 1., # to show we can offset the warmup relative to min\n    'num_warmup_steps':  num_warmup_steps,\n}\n\n# 3) Cosine schedule with small values for T-Norm guidance\nt_scale_params = {\n    'max_val':         0.25,\n    'num_steps':       num_steps,\n    'min_val':         0.05,\n}\n\n# create the schedules\ncos_g = get_cos_sched(**cos_params)\nwarmup_g = get_cos_sched(**warmup_cos_params)\nTNorm_g = get_cos_sched(**t_scale_params)\n```\n\nLet’s plot these schedules to see what they look like.\n\n``` python\nimport matplotlib.pyplot as plt\n```\n\n``` python\n# plot them \nplt.plot(cos_g)\nplt.xlabel('Diffusion Timesteps')\nplt.ylabel('$G$ Guidance Parameter')\nplt.title('Cosine Schedule');\n```\n\n![](index_files/figure-commonmark/cell-5-output-1.png)\n\n``` python\nplt.plot(warmup_g)\nplt.xlabel('Diffusion Timesteps')\nplt.ylabel('$G$ Guidance Parameter')\nplt.title('Warmup Cosine Schedule');\n```\n\n![](index_files/figure-commonmark/cell-6-output-1.png)\n\n``` python\nplt.plot(TNorm_g)\nplt.xlabel('Diffusion Timesteps')\nplt.ylabel('$G$ Guidance Parameter')\nplt.title('Small Cosine Schedule to T-Norm');\n```\n\n![](index_files/figure-commonmark/cell-7-output-1.png)\n\n### Creating Guidance Transforms\n\nGuidance transforms take one initialization parameter: `schedules`. This\nis a map from parameter names to an array-like, indexable sequence of\nvalues.\n\nFor a given parameter `name` at diffusion timestep `idx`, the value of\n`schedules[name][idx]` should be the value of that parameter at the\ngiven timestep.\n\nIn this case, we call the parameter $G$ as a lowercase ‘g’.\n\n``` python\nfrom cf_guidance.transforms import *\n```\n\n``` python\n# Create a baseline Guidance with cosine schedule. \nsample_sched = {'g': cos_g}\nguidance = GuidanceTfm(sample_sched)\n\n# Guidance with normalization and a cosine schedule.\nnorm_guidance = BaseNormGuidance(sample_sched)\n\n# T-Norm Guidance with the smaller-valued schedule\nsmall_sched = {'g': TNorm_g}\nsmall_guidance = TNormGuidance(small_sched)\n```\n\n### Using the transforms in a Diffusion pipeline\n\nThe code snippet below shows where and how these transforms are used in\nan image `generate()` pipeline. We will use the `norm_guidance` class\ncreated above for the example.\n\nSpecifically, we call this `norm_tfm` with the following arguments:\n\n- The unconditioned noise predictions.  \n- The conditional noise predictions.  \n- The current timestep index.\n\nWe borrow code from the [official\n`StableDiffusionPipeline`](https://github.com/nateraw/stable-diffusion-videos/blob/main/stable_diffusion_videos/stable_diffusion_pipeline.py#L448)\nfrom HuggingFace to show where our `norm_tfm` goes. This seems like a\ngood starting point, since many scripts and functions are based on this\nHuggingFace script.\n\n``` python\n    # inside of `StableDiffusionPipeline`\n    \n    for i, t in enumerate(self.progress_bar(timesteps_tensor)):\n        # expand the latents if we are doing classifier free guidance\n        latent_model_input = torch.cat([latents] * 2) if do_classifier_free_guidance else latents\n        latent_model_input = self.scheduler.scale_model_input(latent_model_input, t)\n\n        # predict the noise residual\n        noise_pred = self.unet(latent_model_input, t, encoder_hidden_states=text_embeddings).sample\n\n        # NOTE: our transforms go here:\n        ###############################\n        if do_classifier_free_guidance:\n            noise_pred_uncond, noise_pred_text = noise_pred.chunk(2)\n\n            ## OLD UPADTE\n            #noise_pred = noise_pred_uncond + guidance_scale * (noise_pred_text - noise_pred_uncond)\n\n            # NEW cf_guidance UPDATE\n            noise_pred = norm_guidance(noise_pred_uncond, noise_pred_text, i)\n```\n\n### Creating more cosine schedules\n\nThe cosine schedule function was based on a combination of the Cosine\nschedulers in\n[timm](https://github.com/rwightman/pytorch-image-models/blob/main/timm/scheduler/cosine_lr.py)\nand\n[HuggingFace](https://github.com/huggingface/transformers/blob/v4.24.0/src/transformers/optimization.py#L104).\n\nIt has a variety of parameters to support many different schedule\ncombinations, as shown below.\n\n``` python\n# using wilder parameters, worth exploring\ntwo_cycles = {\n    'max_val':           max_val,\n    'num_steps':         num_steps,\n    'min_val':           min_val,\n    'num_cycles':        1,\n    'warmup_init_val':   min_val + 1., # to show we can offset the warmup relative to min\n    'num_warmup_steps':  0,\n}\n\n\n\nk_decay_cos = {\n    'max_val':           max_val,\n    'num_steps':         num_steps,\n    'min_val':           min_val,\n    'num_cycles':        1.5,\n    'k_decay':           0.7,\n    'warmup_init_val':   min_val + 1., # to show we can offset the warmup relative to min\n    'num_warmup_steps':  num_warmup_steps,\n}\n\n# create the schedules\ntwo_cycle_sched = get_cos_sched(**two_cycles)\nk_decay_sched = get_cos_sched(**k_decay_cos)\n```\n\n``` python\nplt.plot(two_cycle_sched)\nplt.title('Cosine With a Full Cycle');\n```\n\n![](index_files/figure-commonmark/cell-11-output-1.png)\n\n``` python\nplt.plot(k_decay_sched)\nplt.title('Cosine with Warmup, 1.5 Cycles, and K-decay');\n```\n\n![](index_files/figure-commonmark/cell-12-output-1.png)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/enzokro/guidance_transforms",
    "keywords": "nbdev jupyter notebook python",
    "license": "Apache Software License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cf-guidance",
    "package_url": "https://pypi.org/project/cf-guidance/",
    "platform": null,
    "project_url": "https://pypi.org/project/cf-guidance/",
    "project_urls": {
      "Homepage": "https://github.com/enzokro/guidance_transforms"
    },
    "release_url": "https://pypi.org/project/cf-guidance/0.0.3/",
    "requires_dist": [
      "torch (>=1.7)"
    ],
    "requires_python": ">=3.7",
    "summary": "Transforms for Classifier-free Guidance",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15816843,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "66ca04aaa9910c4a803d14bbfd8d31d6149f11c48fa271634ff499d5411394de",
          "md5": "8a3b6562b4f4c5123602b1eb63784bd1",
          "sha256": "be433bf0c3e0cf0cce207602a39c09a0be9621e269a43d9d795c4ce564a7b26c"
        },
        "downloads": -1,
        "filename": "cf_guidance-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8a3b6562b4f4c5123602b1eb63784bd1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 11275,
        "upload_time": "2022-11-18T15:06:08",
        "upload_time_iso_8601": "2022-11-18T15:06:08.912049Z",
        "url": "https://files.pythonhosted.org/packages/66/ca/04aaa9910c4a803d14bbfd8d31d6149f11c48fa271634ff499d5411394de/cf_guidance-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5133a090f89d723742160715b347eb762579284ae69541eb70b270ae9b5bea00",
          "md5": "f3f2ed2c42a61f1377d5983e075d77e4",
          "sha256": "7ab2a42dc41d29f73e90f59f3a715dd50b95564f6d0d72d45e0e91c9abc0a615"
        },
        "downloads": -1,
        "filename": "cf_guidance-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f3f2ed2c42a61f1377d5983e075d77e4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 11637,
        "upload_time": "2022-11-18T15:06:10",
        "upload_time_iso_8601": "2022-11-18T15:06:10.481871Z",
        "url": "https://files.pythonhosted.org/packages/51/33/a090f89d723742160715b347eb762579284ae69541eb70b270ae9b5bea00/cf_guidance-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "19470074ef37aaca865e92b30d5586dcfaeb0bf440587d4f7d14f09deecbf523",
          "md5": "246825070c73a816afa893a4b1e29bf6",
          "sha256": "64e4da2ef769e1a9d277a61ef02707d8a0eb8b8c6fc7d91296b8bc89d06c790b"
        },
        "downloads": -1,
        "filename": "cf_guidance-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "246825070c73a816afa893a4b1e29bf6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 11263,
        "upload_time": "2022-11-18T15:13:59",
        "upload_time_iso_8601": "2022-11-18T15:13:59.564669Z",
        "url": "https://files.pythonhosted.org/packages/19/47/0074ef37aaca865e92b30d5586dcfaeb0bf440587d4f7d14f09deecbf523/cf_guidance-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f8e414a8dd08778714aeb6cdb6577dd549ebf08fda9c624b69534c7d29c5074d",
          "md5": "d2249e0f31173893d90c74f24150ce19",
          "sha256": "2c64f0be12e41101361edc6887d9415d8a9d0ce56070bb83ed5237f1b3437cb3"
        },
        "downloads": -1,
        "filename": "cf_guidance-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d2249e0f31173893d90c74f24150ce19",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 11603,
        "upload_time": "2022-11-18T15:14:00",
        "upload_time_iso_8601": "2022-11-18T15:14:00.941921Z",
        "url": "https://files.pythonhosted.org/packages/f8/e4/14a8dd08778714aeb6cdb6577dd549ebf08fda9c624b69534c7d29c5074d/cf_guidance-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "57d6dd7c0eb132a441e89dd9b3b419a7e83bbf22e8802781c60b86d09c2564a8",
          "md5": "4312c08dc7fe8545230eba6b5aab8020",
          "sha256": "dd8e68b37f3e614067ff283682b29977a2ed2c17de8f924929853a2df33fde4b"
        },
        "downloads": -1,
        "filename": "cf_guidance-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4312c08dc7fe8545230eba6b5aab8020",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 11286,
        "upload_time": "2022-11-18T16:13:03",
        "upload_time_iso_8601": "2022-11-18T16:13:03.289559Z",
        "url": "https://files.pythonhosted.org/packages/57/d6/dd7c0eb132a441e89dd9b3b419a7e83bbf22e8802781c60b86d09c2564a8/cf_guidance-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eaab7631c63a9936827d011bce7d28bd3e278ed16f8f809776e1a874469a48f5",
          "md5": "f709c4906d8d039f22477c4d7ee0b741",
          "sha256": "a2b83fb1c76a52cc328d7f0c961488c5026685969a967476802dbe0ca47a4af5"
        },
        "downloads": -1,
        "filename": "cf_guidance-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "f709c4906d8d039f22477c4d7ee0b741",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 11639,
        "upload_time": "2022-11-18T16:13:04",
        "upload_time_iso_8601": "2022-11-18T16:13:04.706676Z",
        "url": "https://files.pythonhosted.org/packages/ea/ab/7631c63a9936827d011bce7d28bd3e278ed16f8f809776e1a874469a48f5/cf_guidance-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "57d6dd7c0eb132a441e89dd9b3b419a7e83bbf22e8802781c60b86d09c2564a8",
        "md5": "4312c08dc7fe8545230eba6b5aab8020",
        "sha256": "dd8e68b37f3e614067ff283682b29977a2ed2c17de8f924929853a2df33fde4b"
      },
      "downloads": -1,
      "filename": "cf_guidance-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4312c08dc7fe8545230eba6b5aab8020",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 11286,
      "upload_time": "2022-11-18T16:13:03",
      "upload_time_iso_8601": "2022-11-18T16:13:03.289559Z",
      "url": "https://files.pythonhosted.org/packages/57/d6/dd7c0eb132a441e89dd9b3b419a7e83bbf22e8802781c60b86d09c2564a8/cf_guidance-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "eaab7631c63a9936827d011bce7d28bd3e278ed16f8f809776e1a874469a48f5",
        "md5": "f709c4906d8d039f22477c4d7ee0b741",
        "sha256": "a2b83fb1c76a52cc328d7f0c961488c5026685969a967476802dbe0ca47a4af5"
      },
      "downloads": -1,
      "filename": "cf_guidance-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "f709c4906d8d039f22477c4d7ee0b741",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 11639,
      "upload_time": "2022-11-18T16:13:04",
      "upload_time_iso_8601": "2022-11-18T16:13:04.706676Z",
      "url": "https://files.pythonhosted.org/packages/ea/ab/7631c63a9936827d011bce7d28bd3e278ed16f8f809776e1a874469a48f5/cf_guidance-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}