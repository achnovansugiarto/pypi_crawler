{
  "info": {
    "author": "Kardi Teknomo",
    "author_email": "teknomo@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: Free for non-commercial use",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Education",
      "Topic :: Scientific/Engineering :: Mathematics",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# Ideal Flow Network Python Library\n\n\nThis Python module is the core library for the computation of Ideal Flow Network (IFN). The IFN theory was proposed by [Kardi Teknomo](http://people.revoledu.com/kardi/) in 2015 and subsequently developed by his team. Check also: https://people.revoledu.com/kardi/research/trajectory/ifn/index.html\n\nIdeal Flow is a new concept to analyze transportation networks or communication network. For IFN application to traffic assignment check [IFN-Transport](https://github.com/teknomo/ifn-transport) for more details. \n\n\n# How to Install\n\n > **pip install IdealFlowNetwork**\n\nCheck Also in [Pypi](https://pypi.org/project/IdealFlowNetwork/)\n\n\n# Scientific Basis\nThe following publications are the foundations of Ideal Flow analysis:\n\n+ Teknomo, K., Gardon, R. and Saloma, C. (2019), Ideal Flow Traffic Analysis: A Case Study on a Campus Road Network, Philippine Journal of Science 148 (1): 5162.\n+ Teknomo, K. (2018) Ideal Flow of Markov Chain, Discrete Mathematics, Algorithms and Applications, doi: 10.1142/S1793830918500738 \n+ [Teknomo, K.](http://people.revoledu.com/kardi/publication/index.html) and Gardon, R.W. (2017) Intersection Analysis Using the Ideal Flow Model, Proceeding of the IEEE 20th International Conference on Intelligent Transportation Systems, Oct 16-19, 2017, Yokohama, Japan\n+ [Teknomo, K.](http://people.revoledu.com/kardi/publication/index.html) (2017) Ideal Relative Flow Distribution on Directed Network, Proceeding of the 12th Eastern Asia Society for Transportation Studies (EASTS), Ho Chi Minh, Vietnam Sept 18-21, 2017.\n+ [Teknomo, K.](https://arxiv.org/abs/1706.08856) (2017) Premagic and Ideal Flow Matrices. https://arxiv.org/abs/1706.08856\n+ Gardon, R.W. and [Teknomo, K.](http://people.revoledu.com/kardi/publication/index.html) (2017) Analysis of the Distribution of Traffic Density Using the Ideal Flow Method and the Principle of Maximum Entropy, Proceedings of the 17th Philippine Computing Science Congress, Cebu City, March 2017\n+ [Teknomo, K.](http://people.revoledu.com/kardi/publication/index.html) (2015) Ideal Flow Based on Random Walk on Directed Graph, The 9th International collaboration Symposium on Information, Production and Systems (ISIPS 2015) 16-18 Nov 2015, Waseda University, KitaKyushu, Japan. \n\nPlease cite any of those papers if you use or improve this python library.\n\n\nFunctions  | Description\n---------- | -----------\nA = capacity2adj(C) | convert capacity matrix to adjacency matrix\nS = capacity2stochastic(C) | convert capacity matrix into stochastic matrix\nS = adj2stochastic(A) | convert adjacency matrix to stochastic matrix of equal outflow distribution\nS = idealFlow2stochastic(F) | convert ideal flow matrix into Markov stochastic matrix \npi = steadyStateMC(S,kappa) | convert stochastic matrix into steady state Markov vector. kappa is the total of Markov vector.\nF = idealFlow(S,pi) | return ideal flow matrix based on stochastic matrix and Markov vector\nF = adj2idealFlow(A,kappa) | convert adjacency matrix into ideal flow matrix of equal distribution of outflow. kappa is the total flow    \nF = capacity2idealFlow(C,kappa) | convert capacity matrix into ideal flow vector, kappa is the total flow\nsR = sumOfRow(M) | return vector sum of rows of matrix M\nsC = sumOfCol(M) | return row vector sum of columns of matrix M\nd = isSquare(M) | return True if M is a square matrix\nd = isNonNegative(M) | return True of M is a non-negative matrix\nd = isPositive(M) | return True of M is a positive matrix\nd = isPremagic(M) | return True if M is premagic matrix\nd = isIrreducible(M) | return True if M is irreducible matrix\nd = isIdealFlow(M) | return True if M is an ideal flow matrix\nh = networkEntropy(S) | return the value of network entropy\ne = entropyRatio(S) | return network entropy ratio\n\nTutorial on Ideal Flow Network is available in [Revoledu.com](http://people.revoledu.com/kardi/tutorial/Python/Ideal+Flow.html)\n\n(c) 2021 Kardi Teknomo\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/teknomo/IdealFlowNetwork/blob/Development/dist/IdealFlowNetwork-1.0.3.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://people.revoledu.com/kardi/",
    "keywords": "IFN,Markov,irreducible,premagic",
    "license": "GNU General Public License v3.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "IdealFlowNetwork",
    "package_url": "https://pypi.org/project/IdealFlowNetwork/",
    "platform": "any",
    "project_url": "https://pypi.org/project/IdealFlowNetwork/",
    "project_urls": {
      "Bug Tracker": "https://github.com/teknomo/IdealFlowNetwork/issues",
      "Download": "https://github.com/teknomo/IdealFlowNetwork/blob/Development/dist/IdealFlowNetwork-1.0.3.tar.gz",
      "Homepage": "http://people.revoledu.com/kardi/"
    },
    "release_url": "https://pypi.org/project/IdealFlowNetwork/1.0.3/",
    "requires_dist": [
      "numpy",
      "pandas"
    ],
    "requires_python": ">=3.6",
    "summary": "Ideal Flow Network Python Library",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10917813,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "028a8c5af87db496f845b62ab24b3d79de71b0b2234a73e536dff98f1fb6d9e3",
          "md5": "0ca81be491a4c7fd70aaee92c441b019",
          "sha256": "e039df92594c184538c50c07ac53a74f19b7437d8e7f5bf93ccbc6ae322aa56f"
        },
        "downloads": -1,
        "filename": "IdealFlowNetwork-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0ca81be491a4c7fd70aaee92c441b019",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5967,
        "upload_time": "2021-07-14T10:09:29",
        "upload_time_iso_8601": "2021-07-14T10:09:29.115399Z",
        "url": "https://files.pythonhosted.org/packages/02/8a/8c5af87db496f845b62ab24b3d79de71b0b2234a73e536dff98f1fb6d9e3/IdealFlowNetwork-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a9555376b7ee2b080c206fa7471c0fd6dbfb786ac8bad0cb7572def477aab356",
          "md5": "7a7c6db8bcb1dadb870dc56615a3d835",
          "sha256": "921a8d6a79585d40dfbd9dd445d30fb1af08b860ddb6f53f5a4926d1ed938620"
        },
        "downloads": -1,
        "filename": "IdealFlowNetwork-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7a7c6db8bcb1dadb870dc56615a3d835",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6175,
        "upload_time": "2021-07-14T12:51:06",
        "upload_time_iso_8601": "2021-07-14T12:51:06.260686Z",
        "url": "https://files.pythonhosted.org/packages/a9/55/5376b7ee2b080c206fa7471c0fd6dbfb786ac8bad0cb7572def477aab356/IdealFlowNetwork-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "28994154cea5e2d3e5d55eb86b6018ace8168c288afeb6537463eeea00d93b2d",
          "md5": "6728f283a0abbd2c8553816eea7f9b23",
          "sha256": "3bfca659ea3b017bd8e839e1facfb345a8ab6afb18eebdedf367773f9f2977e6"
        },
        "downloads": -1,
        "filename": "IdealFlowNetwork-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6728f283a0abbd2c8553816eea7f9b23",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6511,
        "upload_time": "2021-07-15T13:11:50",
        "upload_time_iso_8601": "2021-07-15T13:11:50.885892Z",
        "url": "https://files.pythonhosted.org/packages/28/99/4154cea5e2d3e5d55eb86b6018ace8168c288afeb6537463eeea00d93b2d/IdealFlowNetwork-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "78f8bb7541ba8993891af77217e917ca59e546b9db8b3e1ba1f43d31bf08890c",
          "md5": "a1fffbe36d58a5975fd4df8758b89439",
          "sha256": "f24ca4160217616fd28e8a1668490458b9661dc1d8f88ea2b4781585d1fb867b"
        },
        "downloads": -1,
        "filename": "IdealFlowNetwork-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "a1fffbe36d58a5975fd4df8758b89439",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6591,
        "upload_time": "2021-07-15T13:11:52",
        "upload_time_iso_8601": "2021-07-15T13:11:52.276404Z",
        "url": "https://files.pythonhosted.org/packages/78/f8/bb7541ba8993891af77217e917ca59e546b9db8b3e1ba1f43d31bf08890c/IdealFlowNetwork-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "28994154cea5e2d3e5d55eb86b6018ace8168c288afeb6537463eeea00d93b2d",
        "md5": "6728f283a0abbd2c8553816eea7f9b23",
        "sha256": "3bfca659ea3b017bd8e839e1facfb345a8ab6afb18eebdedf367773f9f2977e6"
      },
      "downloads": -1,
      "filename": "IdealFlowNetwork-1.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6728f283a0abbd2c8553816eea7f9b23",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 6511,
      "upload_time": "2021-07-15T13:11:50",
      "upload_time_iso_8601": "2021-07-15T13:11:50.885892Z",
      "url": "https://files.pythonhosted.org/packages/28/99/4154cea5e2d3e5d55eb86b6018ace8168c288afeb6537463eeea00d93b2d/IdealFlowNetwork-1.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "78f8bb7541ba8993891af77217e917ca59e546b9db8b3e1ba1f43d31bf08890c",
        "md5": "a1fffbe36d58a5975fd4df8758b89439",
        "sha256": "f24ca4160217616fd28e8a1668490458b9661dc1d8f88ea2b4781585d1fb867b"
      },
      "downloads": -1,
      "filename": "IdealFlowNetwork-1.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "a1fffbe36d58a5975fd4df8758b89439",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 6591,
      "upload_time": "2021-07-15T13:11:52",
      "upload_time_iso_8601": "2021-07-15T13:11:52.276404Z",
      "url": "https://files.pythonhosted.org/packages/78/f8/bb7541ba8993891af77217e917ca59e546b9db8b3e1ba1f43d31bf08890c/IdealFlowNetwork-1.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}