{
  "info": {
    "author": "Daniel Dunn",
    "author_email": "dannydunn@eternityforest.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# scullery\nPython library for things like media playback, thread pools, and a message bus. It is essentially the parts of KaithemAutomation\nthat make sense independantly.\n\nThere is a lot of functionality planned, but it's not at all neccesary to use or understand all of it to use one piece.\n\nYou will obviously need the Python Gstreamer bindings for those features(but not unrelated features), and several other\ndependancies.\n\n\n\n## Intro\nSee example.py for more details. Also see the equally simple audio and video player.\n\n## Testing\nWarning, takes over audio, starts JACK, makes noise:python3 -m unittest discover tests\n\nRunning just one test suite: python3 -m unittest tests/testFluidSynth.py\n\n## Examples\n```python\nimport scullery.workers\n\"This file demonstrates a lot of scullery's functionality in a small package\"\n\n#Most things require this thread pool to be running\nscullery.workers.start()\n\n#Including just importing this, #Todo?\nimport scullery.messagebus\n\nimport scullery.persist\n\n#Start the gst pipeline\ndef subscriber(topic,val):\n\n    print(\"Got a message\")\n\n#Unsubscribe happens automatically if we don't keep a ref to the function\nscullery.messagebus.subscribe(\"/test/topic\",subscriber)\n\n#Post a message, the actual subscribers all run in the background worker pool\nscullery.messagebus.postMessage(\"/test/topic\",\"TestPayload\")\n\nimport time\n\n#Also supports YAML, txt, bin for the appropriate datatypes, if the YAML lib is there.\n#Can use .gz or .b2z to compress. Saved atomically with tilde files and UNIX rename semantics.\n#Checks if it actually needs to save before actually writing the file.\nimport os\n#Get an abs path\nfn = os.path.join(os.path.dirname(os.path.abspath(__file__)),\"testFile.json\")\nprint(\"Going to save data to: \"+fn)\nscullery.persist.save(myData,fn)\nassert scullery.persist.load(fn)==myData\n\n\n\nwhile(1):\n    time.sleep(1)\n```\n\n### scullery.messagebus\n\n#### scullery.messagebus.subscribe(callback,topic)\nSubscribe to a topic. Topics are a slash delimited heirarchy,a # at the end is a wildcard,\njust like MQTT.\n\n\n#### scullery.messagebus.subscriberErrorHandlers  = []\n\nList of functions to be called whenever an error happens in a subscribed function.\n\nSignature must be function,topic,value.\n\nIf the function has an attribute messagebusWrapperFor, the value of that property is passed instead of the function itself. Any higher level stuff that uses the message bus must set this property when wrapping functions.\n\n\n\n### scullery.units\nThis module deals with unit conversions.\n\n#### scullery.units.convert(value,fromUnit, toUnit)\nTry to convert the value, falling back to the (very slow) pint library for less common conversions not natively\nsupported.\n\n\n### scullery.mqtt\n\n#### scullery.mqtt.getConnection(server, port=1883, password=None, messageBusName=None)\n\nCreates an MQTT connection. To speify username, use user@server.net syntax.\n\nTo use an internal fake server for testing, use the server \"__virtual__\".\n\nThis connection handles automatically reconnecting and resubscribing for you.  If a connection to a user@server already exists,\nit will return that connection.  \n\nAll traffic goes through the internal message bus first, on topics that will begin with /mqtt/. Normally, the internal name is server+\":\"+port\nBut you can specify it explicitly.  The topic name also acts as a sort of internal ID, and the system understands new connections with the same ID\nto be replacements for the old one. All subscriptions will carry over.\n\nResubscriptions are stored in a master list.  If you subscribe, then delete the connection and recreate a new connection with the same message bus\nname, everything will carry on like nothing happened, so long as you kept a reference to the subscribed function.\n\nYou can even create one connection, delete it, make a new one with the same internal messageBusName, to a different server, and all the old subscriptions\nwill be \"remade\" at the new server, as the system knows that the new connection is a \"replacement\" for the old name.\n\nYou cannot have two connections to the same user@server combo with different internal names or passwords, however, if you do not supply a password,\nand the existing connection has one, it will still work as it is simply returning the existing one.\n\nThis feature is meant to make GUI config easier, so that changing a connection doesn't break all existing users of that connection.\n\n##### Passive connections\n\nIf server is '', it will not create any real connections, but will still publish and subscribe to the internal\nbus, meaning that you can use it as a \"passive\" connection which uses a real connection configured elsewhere.\n\nNote that you will(currently) only recieve through passives if the backend also subscribed to that topic, subscribing through a passive\nconnecting is truly passive, but this may change. At the moment, think of them like \"spy\" connections.\n\nTo use a passive connection, you obviously need to specify the same messageBusName on the passive and backend.\n\n##### MQTTConnection.publish(self, topic, message, qos=2, encoding=\"json\"):\n\nEncoding may be: json,msgpack, raw, utf8\n\n##### MQTTConnection.subscribe(self, topic, function, qos=2, encoding=\"json\")\nFunction is passed f(topic,message). \n\nScullery only weakly references, so if you delete or otherwise let the function be GCed, it is auto unsubscribed.\n\n##### MQTTConnection.unsubscribe(self, topic, function)\nAutomatically unsubscribes from the actual MQTT topic when there are no more local subscribers. Note that subscriptions through a \"\n\n\n\n\n\n# Everything below this should be moved to a separate library.\n\nIt will still be included as a compatibility stub that just calls into the external stuff.\n\n\n\n### scullery.jack\n\nThis submodule requires pyjack, and of course Jack. You should normally import this somewhere if using IceFlow with JACK.\n\n#### Message Bus activity\n\n##### /system/jack/newport\n A PortInfo object with a .name, isInput, and isOutput property gets posted here whenever a new port is added to JACK.\n\n##### /system/jack/delport\n A PortInfo object gets posted here whenever a port is unregistered.\n\n##### system/jack/started\nWhen jack is started or restarted\n\n\n\n#### Config:\n```python\n\n#Only relevant if manageJackProcess is True\njackPeriods = 3\nperiodSize = 128\n\n#These apply to soundcards other than the main system card\nusbPeriodSize = 384\nusbLatency = 384\n\nrealtimePriority = 70\n\n#Do we want to run PulseAudio and the pulse jack backend?\n#Note that we automatically kill any pulseaudio process we find before\nusePulse= True\n\nsharePulse = None\n\n#Should we create alsa_in and alsa_out ports for every soundcard, with persistant names?\nmanageSoundcards = True\n\n#Should we start the jack process itself, and auto restart it?\n#If False, we just try to use an existing one.\n#Must set this to True before calling startManaging!\nmanageJackProcess = False\n```\n\n\n#### sullery.jack.startManaging()\nStart the worker thread and enable management functions\n\n#### scullery.jack.startJackServer()\nActually start the jack server. They are separate because you may want to do this yourself.\n\n#### scullery.jack.Airwire(from,to)\nReturn an Airwire object. This is a declaration that you want to connect two clients or ports and keep them connected.\nIf you try to connect a client to a single port, all outputs get mixed down. Likewise a port to a client duplicates to all inputs.\n\nThey start in the disconnected state.\n\n\n#### scullery.jack.Airwire.connect()\nConnect and stay connected. Even if a client dissapears and comes back. Deleting the Airwire will disconnect.\nNote that manually disconnecting may not be undone, to prevent annoyance.\n\n#### scullery.jack.Airwire.disconnect()\nDisconnect.\n\n\n\n### scullery.fluidsynth\n\nThis module deals with MIDI synthesis\n\n### scullery.fluidsynth.FluidSynth(self, soundfont=None,jackClientName=None)\n\nCreates an instance of the FluidSynth soundfont synthesizer. Soundfont is an file path, or it defaults\nto one that sometimes ships with fluidsynth. if jackClientName is provided, outputs audio via JACK.\n\nYou don't have to worry about cleanup, that happens automatically on GC.\n\nUsing this without JACK may not work.\n\n#### fs.noteOn(channel,note,velocity)\n#### fs.noteOff(channel,note)\n#### fs.setInstrument(channel,instrument)\nSet the instrumemt. If instrument is str, we will use the closest match we can find, or raise an error.\n\n\n\n### scullery.iceflow.GStreamerPipeline\nThis is the base class for making GStreamer apps\n\n#### addElement(elementType, name=None, connectToOutput=None,**kwargs)\n\nAdds an element to the pipe and returns a weakref proxy. Normally, this will connect to the last added\nelement, but you can explicitly pass a an object to connect to. If the last object is a decodebin, it will be connected when a suitable pad\non that is available.\n\nThe `**kwargs` are used to set properties of the element.\n\n#### addPILCapture(resolution, connectToOutput=None,buffer=1)\nAdds a PILCapture object which acts like a video sink. It will buffer the most recent N frames, discarding as needed.\n\n##### PILCapture.pull()\nReturn a video frame as a PIL/Pillow Image. May return None on empty buffers.\n\n#### setProperty(element, property, value)\nSet a prop of an element, with some added nice features like converting strings to GstCaps where needed, and checking that filesrc locations are actually\nvalid files that exist.\n\n#### onMessage(source, name, structure)\nUsed for subclassing. Called when a message that has a structure is seen on the bus. Source is the GST elemeny, struct is dict-like, and name is a string.\n\n#### play()\nIf paused, start. If never started, raise an error.\n\n#### start()\nStart running\n\n#### stop()\n\nPermanently stop and clean up.\n\n#### pause()\n\nWhat it sounds like\n\n#### isActive()\n\nReturn True if playing or paused\n\n#### seek(t=None, rate=None)\nSeek to a time, set playback rate, or both.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/EternityForest/scullery",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "scullery",
    "package_url": "https://pypi.org/project/scullery/",
    "platform": "",
    "project_url": "https://pypi.org/project/scullery/",
    "project_urls": {
      "Homepage": "https://github.com/EternityForest/scullery"
    },
    "release_url": "https://pypi.org/project/scullery/0.1.8/",
    "requires_dist": [
      "pyyaml",
      "typeguard",
      "sf2utils",
      "pyFluidSynth",
      "paho-mqtt",
      "pyreap"
    ],
    "requires_python": ">=3.6",
    "summary": "A utility library based on KaithemAutomation featuring a GStreamer wrapper",
    "version": "0.1.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12315523,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e51891ff9e96b63bd3f432cbb2efe0901d17bee267f06237d28fa582d0a1b438",
          "md5": "76830d048b5ce707c6764fa9bd4e227d",
          "sha256": "d1f621e1609db4044ad40265d07374b2d1b1056a0044d5fe20b1e3d3a2f063b9"
        },
        "downloads": -1,
        "filename": "scullery-0.1.0-py3.7.egg",
        "has_sig": false,
        "md5_digest": "76830d048b5ce707c6764fa9bd4e227d",
        "packagetype": "bdist_egg",
        "python_version": "3.7",
        "requires_python": ">=3.6",
        "size": 138024,
        "upload_time": "2020-02-17T05:11:59",
        "upload_time_iso_8601": "2020-02-17T05:11:59.364648Z",
        "url": "https://files.pythonhosted.org/packages/e5/18/91ff9e96b63bd3f432cbb2efe0901d17bee267f06237d28fa582d0a1b438/scullery-0.1.0-py3.7.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5b00afb0ac46b476b1d2023283ff5e17f50f1e0af38deab51b95e0247c5313c1",
          "md5": "ae7a55d9cd2e1788756f481dbe1d41b7",
          "sha256": "db121f47427b217d81bd9b0440ba0babda1a31217ad782af052300a025383c85"
        },
        "downloads": -1,
        "filename": "scullery-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ae7a55d9cd2e1788756f481dbe1d41b7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 74281,
        "upload_time": "2020-02-11T13:04:17",
        "upload_time_iso_8601": "2020-02-11T13:04:17.364945Z",
        "url": "https://files.pythonhosted.org/packages/5b/00/afb0ac46b476b1d2023283ff5e17f50f1e0af38deab51b95e0247c5313c1/scullery-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2e6e5aa87a88523aae9dc9b61757fce5b368d652a31aac8899aee8ca5dd0f6f7",
          "md5": "b720e2091fcdce900b7da95a0ef23df0",
          "sha256": "34ccbae3e7985ffd275073243fdccfe1501ce3b72ee94a021d44762bba12e91d"
        },
        "downloads": -1,
        "filename": "scullery-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b720e2091fcdce900b7da95a0ef23df0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 56380,
        "upload_time": "2020-02-11T13:04:20",
        "upload_time_iso_8601": "2020-02-11T13:04:20.751681Z",
        "url": "https://files.pythonhosted.org/packages/2e/6e/5aa87a88523aae9dc9b61757fce5b368d652a31aac8899aee8ca5dd0f6f7/scullery-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9ca5a2e6efa676ce32fcf14439983681e48ff7128f0b79b8d28a38271c20a9cf",
          "md5": "6aaf455d6efe9483c7170146cb358e06",
          "sha256": "cbdbb3b30bc828db6fc79950f61749401d445f2447a145dee92d8a7b1ad735ee"
        },
        "downloads": -1,
        "filename": "scullery-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6aaf455d6efe9483c7170146cb358e06",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 77072,
        "upload_time": "2020-02-17T05:11:55",
        "upload_time_iso_8601": "2020-02-17T05:11:55.672392Z",
        "url": "https://files.pythonhosted.org/packages/9c/a5/a2e6efa676ce32fcf14439983681e48ff7128f0b79b8d28a38271c20a9cf/scullery-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2202d776111a7ddb2b408a8fe709bb62de6d413bb1f41690e7cb7d104137de0d",
          "md5": "c5bea134d6820b95b5cd1bd7f5ddf122",
          "sha256": "b8de0b3c25acc4d6769e7d3966da0c674772da36fac2a85879b80d0ec819cbc5"
        },
        "downloads": -1,
        "filename": "scullery-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c5bea134d6820b95b5cd1bd7f5ddf122",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 59053,
        "upload_time": "2020-02-17T05:12:05",
        "upload_time_iso_8601": "2020-02-17T05:12:05.091389Z",
        "url": "https://files.pythonhosted.org/packages/22/02/d776111a7ddb2b408a8fe709bb62de6d413bb1f41690e7cb7d104137de0d/scullery-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3343e85f6a664d4d3446351d4b99d6950f1ae0d219073e43b4564136617bec27",
          "md5": "667d501e0b217db976cf8c66cb2a630b",
          "sha256": "09f107e86fab8b0759d6e0219047b55a5101e8edcf1b5f01ff23fdfdb76143d8"
        },
        "downloads": -1,
        "filename": "scullery-0.1.2-py3.8.egg",
        "has_sig": false,
        "md5_digest": "667d501e0b217db976cf8c66cb2a630b",
        "packagetype": "bdist_egg",
        "python_version": "3.8",
        "requires_python": ">=3.6",
        "size": 151805,
        "upload_time": "2020-08-02T04:43:16",
        "upload_time_iso_8601": "2020-08-02T04:43:16.873116Z",
        "url": "https://files.pythonhosted.org/packages/33/43/e85f6a664d4d3446351d4b99d6950f1ae0d219073e43b4564136617bec27/scullery-0.1.2-py3.8.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f3aeac866ce036e9e1ec238e9708cb8ecc1d39df051351a69c304b1f9a51ea53",
          "md5": "ed41a572fffccd3d39049cf362a444fb",
          "sha256": "06a83e231d31a59562489fe43ff4da417b6781df8c92abf2f3b8b556f32443ca"
        },
        "downloads": -1,
        "filename": "scullery-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ed41a572fffccd3d39049cf362a444fb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 79147,
        "upload_time": "2020-05-15T10:41:03",
        "upload_time_iso_8601": "2020-05-15T10:41:03.099280Z",
        "url": "https://files.pythonhosted.org/packages/f3/ae/ac866ce036e9e1ec238e9708cb8ecc1d39df051351a69c304b1f9a51ea53/scullery-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d594635bca2f02d992bb87a540f2a3aeba66f427a2d998bc38cd322fe0220835",
          "md5": "0acf639601a8208991e8104804519eae",
          "sha256": "1d9e0f30cd40f04386ed281e7761320fc93889143efa3b41d2851223c6cb260f"
        },
        "downloads": -1,
        "filename": "scullery-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0acf639601a8208991e8104804519eae",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 62297,
        "upload_time": "2020-05-15T10:41:06",
        "upload_time_iso_8601": "2020-05-15T10:41:06.039936Z",
        "url": "https://files.pythonhosted.org/packages/d5/94/635bca2f02d992bb87a540f2a3aeba66f427a2d998bc38cd322fe0220835/scullery-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fee8a3a295e5c89a6868af3d2dccc6ece69f703eabd66f87c68722eedfcd81a1",
          "md5": "49e38d101e73f0f0e6307dc8e4f9216c",
          "sha256": "e274649bd1d331d7201c19147e81a8f9db0ddbff65207265f55286beb9af25e4"
        },
        "downloads": -1,
        "filename": "scullery-0.1.3-py3.8.egg",
        "has_sig": false,
        "md5_digest": "49e38d101e73f0f0e6307dc8e4f9216c",
        "packagetype": "bdist_egg",
        "python_version": "3.8",
        "requires_python": ">=3.6",
        "size": 151805,
        "upload_time": "2020-08-02T04:43:21",
        "upload_time_iso_8601": "2020-08-02T04:43:21.650839Z",
        "url": "https://files.pythonhosted.org/packages/fe/e8/a3a295e5c89a6868af3d2dccc6ece69f703eabd66f87c68722eedfcd81a1/scullery-0.1.3-py3.8.egg",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "45cd3cf1e53585879395f61fdebcc3e547cf7c3ba760ab5bcb6a1d3cdd6a0e56",
          "md5": "c0da468fd61087cf5a4995fbf9208630",
          "sha256": "bcd8ba2bc575da5fa51cb2ba10c28019781b37afc50235ea11a0aa5a3af614e3"
        },
        "downloads": -1,
        "filename": "scullery-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c0da468fd61087cf5a4995fbf9208630",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 93203,
        "upload_time": "2020-08-02T04:43:13",
        "upload_time_iso_8601": "2020-08-02T04:43:13.863500Z",
        "url": "https://files.pythonhosted.org/packages/45/cd/3cf1e53585879395f61fdebcc3e547cf7c3ba760ab5bcb6a1d3cdd6a0e56/scullery-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "234bcd53c2f6b2cace0c28e59df7600372a496dc5b11ea8177b4248d862cce27",
          "md5": "c2b1a1e7108ed7e22d29b98d42bb0012",
          "sha256": "a9267fdd5766d78d845e89e12996f1ef69a6ab1279268498abb0aa144cce5d3c"
        },
        "downloads": -1,
        "filename": "scullery-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "c2b1a1e7108ed7e22d29b98d42bb0012",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 74110,
        "upload_time": "2020-08-02T04:43:26",
        "upload_time_iso_8601": "2020-08-02T04:43:26.107762Z",
        "url": "https://files.pythonhosted.org/packages/23/4b/cd53c2f6b2cace0c28e59df7600372a496dc5b11ea8177b4248d862cce27/scullery-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3937732a76f7b01e2ed1c339f865b6ff5d0ce6cd58f477f706af2dfab052c315",
          "md5": "a6e63b8c8d2fefa414955c80d8057e81",
          "sha256": "5c1ae126470e1597fd46ba500094d73ea3769d5d72f42bf00de97690bb509584"
        },
        "downloads": -1,
        "filename": "scullery-0.1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a6e63b8c8d2fefa414955c80d8057e81",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 95924,
        "upload_time": "2020-09-16T08:10:16",
        "upload_time_iso_8601": "2020-09-16T08:10:16.462960Z",
        "url": "https://files.pythonhosted.org/packages/39/37/732a76f7b01e2ed1c339f865b6ff5d0ce6cd58f477f706af2dfab052c315/scullery-0.1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "92ce1ea4376202330514d6a01e25b8d57652a42119be2cb828ef1a1fcea222ab",
          "md5": "6b106bb7433e87f7937236bbb0580bba",
          "sha256": "afd9a8abfa5bf32ce7527710746e9ce087cea910e9906d9e541256491ff68cef"
        },
        "downloads": -1,
        "filename": "scullery-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "6b106bb7433e87f7937236bbb0580bba",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 77900,
        "upload_time": "2020-09-16T08:10:26",
        "upload_time_iso_8601": "2020-09-16T08:10:26.691486Z",
        "url": "https://files.pythonhosted.org/packages/92/ce/1ea4376202330514d6a01e25b8d57652a42119be2cb828ef1a1fcea222ab/scullery-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2293b3924f92bd3f11d9bac0265d11cc58f7652488face80b09abe8eb86a05b7",
          "md5": "a48ff476d9638bdcf587f54bc1a001bb",
          "sha256": "c3bc0ca6bb4303364ae412849b5acdca59ff0f8952cf3b77d2e396cd03591e38"
        },
        "downloads": -1,
        "filename": "scullery-0.1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a48ff476d9638bdcf587f54bc1a001bb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 97474,
        "upload_time": "2020-12-29T17:30:17",
        "upload_time_iso_8601": "2020-12-29T17:30:17.511235Z",
        "url": "https://files.pythonhosted.org/packages/22/93/b3924f92bd3f11d9bac0265d11cc58f7652488face80b09abe8eb86a05b7/scullery-0.1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "90832478491b0786857c9ce251acd7fe1a95b9e825a16e95741888f99a23e145",
          "md5": "29e7b2dc92daa37e3d748127801c3ae7",
          "sha256": "30de6368b26f1201816c91a093fe156f8b179464990671fbfc775731e2985fc0"
        },
        "downloads": -1,
        "filename": "scullery-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "29e7b2dc92daa37e3d748127801c3ae7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 79925,
        "upload_time": "2020-12-29T17:30:30",
        "upload_time_iso_8601": "2020-12-29T17:30:30.069494Z",
        "url": "https://files.pythonhosted.org/packages/90/83/2478491b0786857c9ce251acd7fe1a95b9e825a16e95741888f99a23e145/scullery-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "432f806dc0c0e5f00f881164100b6ded6debb7bff1268b3800a4bd37a7010bb5",
          "md5": "74bf546fea6e83ff7a4c6d7c3c0a7f6e",
          "sha256": "0b225c68d81b103094332fc7676a32ca01822c88620ce19f7616448eb3dcc6bc"
        },
        "downloads": -1,
        "filename": "scullery-0.1.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "74bf546fea6e83ff7a4c6d7c3c0a7f6e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 97497,
        "upload_time": "2021-01-10T05:59:03",
        "upload_time_iso_8601": "2021-01-10T05:59:03.984420Z",
        "url": "https://files.pythonhosted.org/packages/43/2f/806dc0c0e5f00f881164100b6ded6debb7bff1268b3800a4bd37a7010bb5/scullery-0.1.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b076e944aa95ef722bd4bcab626056b74290bdc9aaa92ef751e4c4b35ae2e402",
          "md5": "c4b0468384397bb5dc5e5cd450e366c9",
          "sha256": "0500ba17f6c54e0e08035d76a946b64b2237b6da32d793c5856a0109a5abe21b"
        },
        "downloads": -1,
        "filename": "scullery-0.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "c4b0468384397bb5dc5e5cd450e366c9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 79969,
        "upload_time": "2021-01-10T05:59:17",
        "upload_time_iso_8601": "2021-01-10T05:59:17.682915Z",
        "url": "https://files.pythonhosted.org/packages/b0/76/e944aa95ef722bd4bcab626056b74290bdc9aaa92ef751e4c4b35ae2e402/scullery-0.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9aaeb54e4e3444228e8ef59aed95c29ed073ada026555654dbdad91f177d92f1",
          "md5": "bc1c69211e6d98dd164ebb597f9cf0b2",
          "sha256": "c5274ee0175eba4cce86093b48d9bde670647a9899610822f41c3953f08ccc0c"
        },
        "downloads": -1,
        "filename": "scullery-0.1.8-py3.9.egg",
        "has_sig": false,
        "md5_digest": "bc1c69211e6d98dd164ebb597f9cf0b2",
        "packagetype": "bdist_egg",
        "python_version": "0.1.8",
        "requires_python": ">=3.6",
        "size": 252242,
        "upload_time": "2021-12-15T18:41:12",
        "upload_time_iso_8601": "2021-12-15T18:41:12.549948Z",
        "url": "https://files.pythonhosted.org/packages/9a/ae/b54e4e3444228e8ef59aed95c29ed073ada026555654dbdad91f177d92f1/scullery-0.1.8-py3.9.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ff50fe4eb8a10516c066ee98bdda47ede57020517accf094259cef00e63bd4e6",
          "md5": "5bb9c9a0d427a88c0175324d65a1358a",
          "sha256": "5c23a2991665662351550089051e24ee2d6328d3e55a1ca2817d3ef154753a1d"
        },
        "downloads": -1,
        "filename": "scullery-0.1.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5bb9c9a0d427a88c0175324d65a1358a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 136186,
        "upload_time": "2021-12-15T18:41:06",
        "upload_time_iso_8601": "2021-12-15T18:41:06.688701Z",
        "url": "https://files.pythonhosted.org/packages/ff/50/fe4eb8a10516c066ee98bdda47ede57020517accf094259cef00e63bd4e6/scullery-0.1.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "853c2e47b27443dceec50118cd001d2ab35ae63226c3082327f77832c6db2b38",
          "md5": "4884ad37ba7a8c20597c3c13d94b9647",
          "sha256": "e0307e6edd7577b6d255767322ec79d9de561b41fee295bb5c6cc6c8a9442d0e"
        },
        "downloads": -1,
        "filename": "scullery-0.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "4884ad37ba7a8c20597c3c13d94b9647",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 92878,
        "upload_time": "2021-12-15T18:41:14",
        "upload_time_iso_8601": "2021-12-15T18:41:14.055128Z",
        "url": "https://files.pythonhosted.org/packages/85/3c/2e47b27443dceec50118cd001d2ab35ae63226c3082327f77832c6db2b38/scullery-0.1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9aaeb54e4e3444228e8ef59aed95c29ed073ada026555654dbdad91f177d92f1",
        "md5": "bc1c69211e6d98dd164ebb597f9cf0b2",
        "sha256": "c5274ee0175eba4cce86093b48d9bde670647a9899610822f41c3953f08ccc0c"
      },
      "downloads": -1,
      "filename": "scullery-0.1.8-py3.9.egg",
      "has_sig": false,
      "md5_digest": "bc1c69211e6d98dd164ebb597f9cf0b2",
      "packagetype": "bdist_egg",
      "python_version": "0.1.8",
      "requires_python": ">=3.6",
      "size": 252242,
      "upload_time": "2021-12-15T18:41:12",
      "upload_time_iso_8601": "2021-12-15T18:41:12.549948Z",
      "url": "https://files.pythonhosted.org/packages/9a/ae/b54e4e3444228e8ef59aed95c29ed073ada026555654dbdad91f177d92f1/scullery-0.1.8-py3.9.egg",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ff50fe4eb8a10516c066ee98bdda47ede57020517accf094259cef00e63bd4e6",
        "md5": "5bb9c9a0d427a88c0175324d65a1358a",
        "sha256": "5c23a2991665662351550089051e24ee2d6328d3e55a1ca2817d3ef154753a1d"
      },
      "downloads": -1,
      "filename": "scullery-0.1.8-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5bb9c9a0d427a88c0175324d65a1358a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 136186,
      "upload_time": "2021-12-15T18:41:06",
      "upload_time_iso_8601": "2021-12-15T18:41:06.688701Z",
      "url": "https://files.pythonhosted.org/packages/ff/50/fe4eb8a10516c066ee98bdda47ede57020517accf094259cef00e63bd4e6/scullery-0.1.8-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "853c2e47b27443dceec50118cd001d2ab35ae63226c3082327f77832c6db2b38",
        "md5": "4884ad37ba7a8c20597c3c13d94b9647",
        "sha256": "e0307e6edd7577b6d255767322ec79d9de561b41fee295bb5c6cc6c8a9442d0e"
      },
      "downloads": -1,
      "filename": "scullery-0.1.8.tar.gz",
      "has_sig": false,
      "md5_digest": "4884ad37ba7a8c20597c3c13d94b9647",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 92878,
      "upload_time": "2021-12-15T18:41:14",
      "upload_time_iso_8601": "2021-12-15T18:41:14.055128Z",
      "url": "https://files.pythonhosted.org/packages/85/3c/2e47b27443dceec50118cd001d2ab35ae63226c3082327f77832c6db2b38/scullery-0.1.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}