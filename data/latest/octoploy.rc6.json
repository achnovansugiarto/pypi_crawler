{
  "info": {
    "author": "davidgiga1993",
    "author_email": "david@dev-core.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# Kubernetes / openshift templating and deployment engine\n\nSimple python templating and deployment engine for openshift/k8 yml files. Detect changes made and only applies the\nrequired objects.\n\n## Use case\n\nThis tool was born in the need to a simple templating system which can track changes (similar to terraform) but\nwith k8s object awareness.\n\n## Installation\n\n- Python 3.8 or later\n- `kubectl` or `oc` binary in path\n\n```\npip install octoploy\n```\n\n## Usage\n\n```mermaid\ngraph  TB\n    root[Root folder<br>_root.yml]\n    root --> app1[App 1<br>_index.yml<br>k8s yml files]\n    root --> app2[App 2<br>_index.yml<br>k8s yml files]\n\n```\n\nIn octoploy you define apps, each app can contain multiple yml files. Additionally, there is a project configuration\nwhich describes the k8 namespace.\n\nAll yml files will be pre-processed before they will be imported. This includes replacing any known `${KEY}` variables\nwith their associate values and merging referenced templates.\n\n### Deploy / Plan\n\nDeploys everything\n\n```\noctoploy deploy-all\n```\n\nDeploys all object of the app with the give name\n\n```\noctoploy deploy nginx\n```\n\nThe same commands are available for `plan` - which will list changes to be applied.\n\n```\noctoploy plan / plan-all\n```\n\nThis command executes the `on-config-change` trigger\n\n```\noctoploy reload prometheus\n```\n\n### Config structure\n\n```\nconfigs\n|- _root.yml <- Root config\n|- my-app <- App\n    |- _index.yml <- App config\n    |- dc.yml <- Openshift/K8 yml file(s)\n    |- secrets.yml < Encrypted secrets file\n```\n\n### Root config\n\nHere is a sample `_root.yml` file\n\n```yml\n# Name of the namespace / openshift project\nproject: 'my-oc-project'\n\n# K8s context which should be used for deploying\ncontext: 'my-k8s-cluster-config'\n\n# OPTIONAL STUFF\n# Global variables\nvars:\n  DOMAIN: \"dev-core.org\"\n```\n\n### App config\n\nAn app is represented by a folder containing an `_index.yml` file and any additional openshift yml files. The following\nshows all available parameters. Only the first 3 are required.\n\n```yml\n# The type defines how the app will be used.\n# Can be \"app\" (default) or \"template\"\ntype: 'app'\n\n# Indicates if this app should be deployed or ignored\nenabled: true\n\n# Name of the deployment, available as variable, see below\nname: 'my-app'\n\n# Template which should be applied, none by default\napplyTemplates: [ ]\n\n# Templates which should be applied AFTER processing the other templates and base yml files\npostApplyTemplates: [ ]\n\n# Action which should be executed if a configmap has been changed\non-config-change:\n  # Available options: \n  # deploy (re-deploys the deployment config - openshift specific)\n  - deploy\n\n  # exec (Executes a command inside the running container)\n  - exec:\n      command: /bin/sh\n      args:\n        - \"-c\"\n        - \"kill -HUP $(ps a | grep prometheus | grep -v grep | awk '{print $1}')\"\n\n# Additional variables which are used for replacements\nvars:\n  NSQ_NAME: 'nsq-core'\n\n# Required parameters which must be passed to this app.\n# This can be done via the CLI or if this app is a template the referring app can define it in \"vars\" \nparams:\n  - PASSWORD\n\n# File based configmaps\nconfigmaps:\n  - name: nginx-config\n    files:\n      - file: \"nginx.conf\"\n```\n\n### Configmaps\n\nIn addition to the regular configmaps you can also define configmaps with a file source. This is done in\nthe `_index.yml` file:\n\n```yml\nconfigmaps:\n  - name: nginx-config\n    files:\n      - file: \"nginx.conf\"\n```\n\nThis will create a new configmap from the file `nginx.conf` with the name `nginx-config`. Any changes made to the file\nwill be automatically deployed.\n\n### Variables\n\nYou can refer to variables in yml files by using `${VAR-NAME}`. Variables can also be loaded from files (see loaders\nbelow).\n\n```yml\n# _index.yml\nvars:\n  # Regular key/value assignment\n  key: value\n```\n\nIt is also possible to decorate objects using variables and merge them into other objects:\n\n```yml\n# _index.yml\nvars:\n  someMerging:\n    hello: world\n    replicas: 2\n```\n\n```yml\n# dc.yml\nspec:\n  replicas: 1\n  _merge: ${someMerging}\n```\n\nResults in:\n\n```yml\nspec:\n  replicas: 2\n  hello: world\n```\n\n### Global variables\n\nThe following variables are available anywhere inside the yml files by default\n\n| Key         | Value                                |\n|-------------|--------------------------------------| \n| `APP_NAME`  | Name of the app in the `_index.yml`  |\n| `NAMESPACE` | Name of the namespace in `_root.yml` |\n\n### Value Loaders\n\nYou can load values from various sources using value loaders\n\n```yml\nvars:\n  # This will load the public/private and intermediate certs\n  # from a pem file and store it in *_KEY, *_PUBLIC, *_CACERT\n  # where * is the key of the value.\n  # In this example: CERT_KEY, CERT_PUBLIC, CERT_CACERT\n  CERT:\n    loader: pem\n    file: my-cert.pem\n\n  # Load the content of a file into \"MY_FILE\"\n  MY_FILE:\n    loader: file\n    file: someFile.bin\n    # Optional: Defines in which encoding the file content should be read\n    # utf-8 by default, only applicable if \"conversion\" is not set.\n    encoding: utf-8\n\n    # Optional: Conversion can be used to convert a binary file \n    # into a string representation, in this base base64 \n    conversion: base64\n\n  # Load the content of environment variables into ENV_*\n  ENV:\n    loader: env\n ```\n\n### Templates\n\nYou can use templates to reuse and generate yml files. This might be useful when you want\nto attach sidecar containers to multiple apps. To do so you create a new app with the `type` field set\nto `template`. Other apps can now refer to this template via the `applyTemplates` or `postApplyTemplates` field.\nTemplates can refer to other templates (recursively). Any vars defined are passed to the next template.\n\n```mermaid\nclassDiagram\n    App <|-- Root: App receives global variables\n    Template <|-- App: Template receives variables\n\n    Template --|>App: Injects yml files into app\n    class Root{\n      +variables\n    }\n    class App{\n      +parameters\n      +k8s yml files\n    }\n    class Template{\n      +parameters\n      +k8s yml files\n    }  \n```\n\nExample:\n\n```\n|- some-template\n    |- _index.yml\n    |- dc.yml\n\n|- my-app\n    |- _index.yml <-- Referes to \"some-template\"\n    |- others.yml\n```\n\nWill result in\n\n```\n|- my-app\n    |- _index.yml\n    |- others.yml\n    |- dc.yml\n```\n\n#### Object merging\n\nThe template engine support content aware object merging. This allows you to decorate existing templates or enhance apps\nwith features. A common example would be a template which adds a monitoring sidecar container. In the `examples` you can\nfind the `nsq-template` which defines a sidecar container.\n\nHere is a minimal example:\n\n```yml\n# examples/nsq-template/dc.yml\nkind: DeploymentConfig\napiVersion: v1\nspec:\n  template:\n    spec:\n    containers:\n      - name: \"nsqd\"\n      image: \"nsqio/nsq\"\n```\n\n```yml\n# examples/my-app/dc.yml\nkind: DeploymentConfig\napiVersion: v1\nmetadata:\n  name: \"${DC_NAME}\"\n\nspec:\n  replicas: 1\n  selector:\n    name: \"${DC_NAME}\"\n  strategy:\n    type: Rolling\n\n  template:\n    metadata:\n      labels:\n        name: \"${DC_NAME}\"\n\n    spec:\n      containers:\n        - name: \"${DC_NAME}\"\n          image: \"docker-registry.default.svc:5000/oc-project/my-app:prod\"\n```\n\nIf we now apply the nsq-template to our app using `postApplyTemplates: [nsq-template]` the\n`DeploymentConfig` object gets automatically merged:\n\n```yml\n# Merged result after applying template\nkind: DeploymentConfig\napiVersion: v1\nmetadata:\n  name: \"${DC_NAME}\"\n\nspec:\n  replicas: 1\n  selector:\n    name: \"${DC_NAME}\"\n  strategy:\n    type: Rolling\n\n  template:\n    metadata:\n      labels:\n        name: \"${DC_NAME}\"\n\n    spec:\n      containers:\n        - name: \"${DC_NAME}\"\n          image: \"docker-registry.default.svc:5000/oc-project/my-app:prod\"\n        # This is the part of the template\n        - name: \"nsqd\"\n          image: \"nsqio/nsq\"\n```\n\n#### Loops\n\nLoops allow you to apply the same template with different parameters. This is useful when deploying microservices which\nall have the same openshift config.\n\n```yml\n# _index.yml\nenabled: true\napplyTemplates: [ api-template ]\nforEach:\n  # NAME is required for each instance that should be created\n  - NAME: entity-compare-api\n    # You can define other vars as well\n    PORT: 8080\n\n  - NAME: favorite-api\n    PORT: 8081\n```\n\n#### Library\n\nIt's possible to define whole project as a `library`. This allows all apps and templates to be reused by another\nproject. An example would be the same setup for multiple systems which are separated by projects (e.g. `dev/test/prod`).\n\n```yml\n# testLib/_root.yml\ntype: library\n\n# Required parameters\nparams:\n  - domain\n  - dockerDomain\n  - imageStreamTag\n```\n\n```yml\n# prod/_root.yml\nproject: 'prod-project'\ninherit: testLib\n\n# Required parameters\nvars:\n  domain: my-prod.dev-core.org\n  dockerDomain: prod-docker.com\n  imageStreamTag: prod\n```\n\nWhen you now deploy the `prod` project it will inherit all apps inside `testLib`.\n\n## Secrets\n\nYou can encrypt your k8s secrets using\n\n```bash\nexport OCTOPLOY_KEY=\"my password\"\noctoploy encrypt secrets.yml\n```\n\nThe file will be updated in place.\n\nFor deploying encrypted secrets, you'll need to set the environment variable\n`OCTOPLOY_KEY` with your key used to encrypt the data.\n\n## Change tracking\n\nChanges are detected by storing a md5 sum in the label of the object. If this hash has changed the whole object will be\napplied. If no label has been found in openshift the object is assumed to be equal, and the label is added.\n\nCurrently, the actual fields of the yml files are not compared, however this is a planned feature.  \n\n## Examples\n\nAll examples can be found in the `examples` folder.\n\n## Contribute\n\nThe code should be mostly commented. If you found a bug or want to improve something feel free to open an issue and\ndiscuss your ideas.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/davidgiga1993/octoploy",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "octoploy",
    "package_url": "https://pypi.org/project/octoploy/",
    "platform": null,
    "project_url": "https://pypi.org/project/octoploy/",
    "project_urls": {
      "Homepage": "https://github.com/davidgiga1993/octoploy"
    },
    "release_url": "https://pypi.org/project/octoploy/1.1.0/",
    "requires_dist": [
      "pyyaml",
      "pycryptodome"
    ],
    "requires_python": ">=3.8",
    "summary": "Simple kubernetes / openshift templating engine with templating, libraries, state tracking",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16235244,
  "releases": {
    "1.0.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "35a0cab17cfbe6a82ba8380b8f044579ae593d6c5703dd5b08fd0d70ac8d4471",
          "md5": "aa4780f39a06d03e18e4af901c0a5cfe",
          "sha256": "b357dda548a6f69c2ff4ca9040a0d803da303187900c77b6160a06752107b7d4"
        },
        "downloads": -1,
        "filename": "octoploy-1.0.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "aa4780f39a06d03e18e4af901c0a5cfe",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 45139,
        "upload_time": "2022-05-04T07:02:22",
        "upload_time_iso_8601": "2022-05-04T07:02:22.868453Z",
        "url": "https://files.pythonhosted.org/packages/35/a0/cab17cfbe6a82ba8380b8f044579ae593d6c5703dd5b08fd0d70ac8d4471/octoploy-1.0.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "46cbf8e63c2fcd89a245e31760ed0ee5778b7d223d4b47fb4a35337c254587bb",
          "md5": "c5b161323772d60672a2890d20449a52",
          "sha256": "7b7abe9466fc16f1b74623c33ad922d22b7712869b95871df966322bc524faf2"
        },
        "downloads": -1,
        "filename": "octoploy-1.0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "c5b161323772d60672a2890d20449a52",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 39643,
        "upload_time": "2022-05-04T07:02:24",
        "upload_time_iso_8601": "2022-05-04T07:02:24.629461Z",
        "url": "https://files.pythonhosted.org/packages/46/cb/f8e63c2fcd89a245e31760ed0ee5778b7d223d4b47fb4a35337c254587bb/octoploy-1.0.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82367c4e6e6af4f3343a7efa1e78e2e3291ae429008586a57f49d96ee6e6f3d9",
          "md5": "4c90b03ce8fbd165ed3ff956f3ab20cb",
          "sha256": "4d6f8911019da322d73b89c28cc21d75dd5b258b6e214bd42fd2488817948584"
        },
        "downloads": -1,
        "filename": "octoploy-1.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4c90b03ce8fbd165ed3ff956f3ab20cb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 42933,
        "upload_time": "2022-02-03T07:54:21",
        "upload_time_iso_8601": "2022-02-03T07:54:21.620670Z",
        "url": "https://files.pythonhosted.org/packages/82/36/7c4e6e6af4f3343a7efa1e78e2e3291ae429008586a57f49d96ee6e6f3d9/octoploy-1.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d56fe24ecdc492ca8884b131a2a14e287af25385cd7915ec29f035bb4212693a",
          "md5": "a9ef231a3b46e3f94761a90ceb4d5e66",
          "sha256": "fb8af8a712da4ecc4619270f9f967290a827211ef6648b5528b492f25212a3fa"
        },
        "downloads": -1,
        "filename": "octoploy-1.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "a9ef231a3b46e3f94761a90ceb4d5e66",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 38099,
        "upload_time": "2022-02-03T07:54:22",
        "upload_time_iso_8601": "2022-02-03T07:54:22.488504Z",
        "url": "https://files.pythonhosted.org/packages/d5/6f/e24ecdc492ca8884b131a2a14e287af25385cd7915ec29f035bb4212693a/octoploy-1.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "704e62df5ab975b9b51630328a49f70caa6a688c9950d712986ce68231111118",
          "md5": "0118ef881cefd801c3219ec63350a358",
          "sha256": "86a3b0b9b1ae32cbf24f18e4ed68d8a64de3956e4f7b38e0e6226ca74f8fe52b"
        },
        "downloads": -1,
        "filename": "octoploy-1.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0118ef881cefd801c3219ec63350a358",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 44505,
        "upload_time": "2022-03-31T12:56:36",
        "upload_time_iso_8601": "2022-03-31T12:56:36.286574Z",
        "url": "https://files.pythonhosted.org/packages/70/4e/62df5ab975b9b51630328a49f70caa6a688c9950d712986ce68231111118/octoploy-1.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "26dc1cf02fabb76d25b9b05457cbd4532a1e6cd60b9dad757d20cffcc878e1f7",
          "md5": "a6ca5777bceb00cde075ce69d1322086",
          "sha256": "bc77b2340b83aa72d64f0527a5bbb28ed51d74ad75038800d2729b7b365ab057"
        },
        "downloads": -1,
        "filename": "octoploy-1.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "a6ca5777bceb00cde075ce69d1322086",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 39374,
        "upload_time": "2022-03-31T12:56:37",
        "upload_time_iso_8601": "2022-03-31T12:56:37.318234Z",
        "url": "https://files.pythonhosted.org/packages/26/dc/1cf02fabb76d25b9b05457cbd4532a1e6cd60b9dad757d20cffcc878e1f7/octoploy-1.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6fea550c8459a281c006849763eaaab592f39a7c07c37b46da2ad50e1331a96f",
          "md5": "6e8142372367e38310c5df809f2b65f8",
          "sha256": "306fcb26e9408601a2ca509a2df4de1e406c49817c86b587b99239c0db9cdabd"
        },
        "downloads": -1,
        "filename": "octoploy-1.0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6e8142372367e38310c5df809f2b65f8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 44507,
        "upload_time": "2022-04-04T13:41:54",
        "upload_time_iso_8601": "2022-04-04T13:41:54.176220Z",
        "url": "https://files.pythonhosted.org/packages/6f/ea/550c8459a281c006849763eaaab592f39a7c07c37b46da2ad50e1331a96f/octoploy-1.0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "be95150967b52185341249cb4063d319e586314bb399b90854b0ac5845506005",
          "md5": "7ebc22d165da3a8778ed1fce694d829d",
          "sha256": "eae547a47365f42cc8a98433885e63ed0d9df2a59055415769ac8d913c1debae"
        },
        "downloads": -1,
        "filename": "octoploy-1.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "7ebc22d165da3a8778ed1fce694d829d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 39397,
        "upload_time": "2022-04-04T13:41:55",
        "upload_time_iso_8601": "2022-04-04T13:41:55.333122Z",
        "url": "https://files.pythonhosted.org/packages/be/95/150967b52185341249cb4063d319e586314bb399b90854b0ac5845506005/octoploy-1.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3819f0cece66c2f96d3a29dbfd57c509125e0c4432db74f8e2e623c5d44fbd3f",
          "md5": "4d39a987bdcf5d0fca29f7fbdcec7dac",
          "sha256": "90fa7a84a7c242c885bcca3876a12da03b0db8fdf1fae995f526470e6039d20f"
        },
        "downloads": -1,
        "filename": "octoploy-1.0.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4d39a987bdcf5d0fca29f7fbdcec7dac",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 45041,
        "upload_time": "2022-04-05T07:58:46",
        "upload_time_iso_8601": "2022-04-05T07:58:46.918545Z",
        "url": "https://files.pythonhosted.org/packages/38/19/f0cece66c2f96d3a29dbfd57c509125e0c4432db74f8e2e623c5d44fbd3f/octoploy-1.0.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5841128050f0cda6ef828297c6c8d45d604a75186a467247ef4a311395d693a1",
          "md5": "428541f8374bad986dfd45ff117dc76d",
          "sha256": "4b63e0a5d120d977599a242ab777a648259f3b5322f16d514f4b1d5ce6e68c00"
        },
        "downloads": -1,
        "filename": "octoploy-1.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "428541f8374bad986dfd45ff117dc76d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 39594,
        "upload_time": "2022-04-05T07:58:48",
        "upload_time_iso_8601": "2022-04-05T07:58:48.301256Z",
        "url": "https://files.pythonhosted.org/packages/58/41/128050f0cda6ef828297c6c8d45d604a75186a467247ef4a311395d693a1/octoploy-1.0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7b69caa648650f47754523d419047ea0be7477a7cad2db92dc8f2e8ad517caae",
          "md5": "f0eb3a2350fd4161c401de018e1220ce",
          "sha256": "36b332bf36b302fb82601974b6c2705020ed9f8268bf168bc0cf5757263d181c"
        },
        "downloads": -1,
        "filename": "octoploy-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f0eb3a2350fd4161c401de018e1220ce",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 52342,
        "upload_time": "2022-12-28T07:45:35",
        "upload_time_iso_8601": "2022-12-28T07:45:35.187303Z",
        "url": "https://files.pythonhosted.org/packages/7b/69/caa648650f47754523d419047ea0be7477a7cad2db92dc8f2e8ad517caae/octoploy-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1356614007251800924e625cae3fa2f7769c8315a471ba4e31b147b2b126ba2c",
          "md5": "83fef871300c112cb709510aa1b95327",
          "sha256": "4925ddb6de982e138b035d6f24a68164cb1d3e870e883b28294f52395161fc78"
        },
        "downloads": -1,
        "filename": "octoploy-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "83fef871300c112cb709510aa1b95327",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 44893,
        "upload_time": "2022-12-28T07:45:36",
        "upload_time_iso_8601": "2022-12-28T07:45:36.560440Z",
        "url": "https://files.pythonhosted.org/packages/13/56/614007251800924e625cae3fa2f7769c8315a471ba4e31b147b2b126ba2c/octoploy-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7b69caa648650f47754523d419047ea0be7477a7cad2db92dc8f2e8ad517caae",
        "md5": "f0eb3a2350fd4161c401de018e1220ce",
        "sha256": "36b332bf36b302fb82601974b6c2705020ed9f8268bf168bc0cf5757263d181c"
      },
      "downloads": -1,
      "filename": "octoploy-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f0eb3a2350fd4161c401de018e1220ce",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 52342,
      "upload_time": "2022-12-28T07:45:35",
      "upload_time_iso_8601": "2022-12-28T07:45:35.187303Z",
      "url": "https://files.pythonhosted.org/packages/7b/69/caa648650f47754523d419047ea0be7477a7cad2db92dc8f2e8ad517caae/octoploy-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1356614007251800924e625cae3fa2f7769c8315a471ba4e31b147b2b126ba2c",
        "md5": "83fef871300c112cb709510aa1b95327",
        "sha256": "4925ddb6de982e138b035d6f24a68164cb1d3e870e883b28294f52395161fc78"
      },
      "downloads": -1,
      "filename": "octoploy-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "83fef871300c112cb709510aa1b95327",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 44893,
      "upload_time": "2022-12-28T07:45:36",
      "upload_time_iso_8601": "2022-12-28T07:45:36.560440Z",
      "url": "https://files.pythonhosted.org/packages/13/56/614007251800924e625cae3fa2f7769c8315a471ba4e31b147b2b126ba2c/octoploy-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}