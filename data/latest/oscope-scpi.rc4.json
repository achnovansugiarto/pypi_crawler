{
  "info": {
    "author": "Stephen Goadhouse",
    "author_email": "sgoadhouse@virginia.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Physics",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# oscope-scpi\n\nMy organization was lucky enough to gain new oscilloscopes. They are\nalso HP/Agilent/Keysight oscilloscopes and they also use SCPI commands\nbut they are newer and unfortunately (or maybe I will learn it is\nfortunate), much of the syntax of the commands changed. Plus these new\nscopes have expanded abilities and therefore have expanded\ncommands. Therefore, I mirrored my [MSO-X 3000A specific\nproject](https://github.com/sgoadhouse/msox3000) to this one to be\nmore generic and allow me to expand to other types of oscilloscopes.\n\nSo consider the old msox3000 project to be dead and future work will\ngo into this project.\n\n# Description\n\nControl of Oscilloscopes with SCPI Command Sets through python via PyVisa\n\nThis uses the brilliant PyVISA python package along with the PyVisa-PY\naccess mode which eliminates the need for the (very buggy, in my\nexperience) VISA library to be installed on your computer. However,\nPyVISA-PY does require `libusb` which is useful for FTDI control and\nother things.\n\nThe intent is to support as many oscilloscopes as is\npossible. However, I only have access to a few Keysight oscilloscopes\nso that is what has been coded and tested. If you are interested in\nadding support for Rigol, Tektronix or some other SCPI Oscilloscope,\nthen contact me for details in how to add those. Since Rigol is\nsuspiciously similar to Keysight, which they use to manufacture, Rigol\noscilloscopes may closely follow the Keysight DSOX/MSOX series in\ndso.py and may work if dso.py is copied and modified to be specific to\nRigol.\n\nThe support for the newly released Keysight EXR Series is a complete\nguess based on how similar EXR and MXR Series are. If you have an EXR\nSeries oscilloscope, I would be happy to hear how it works.\n\n# Installation\n\nTo install the oscope-scpi package, clone this GIT repository and then\nrun the following command in the top level folder:\n\n```\npython setup.py install\n```\n\nAlternatively, can add a path to this package to the environment\nvariable PYTHONPATH or even add the path to it at the start of your\npython script. Use your favorite web search engine to find out more\ndetails. If you follow this route, you will need to also install all\nof the dependant packages which are shown below under Requirements.\n\nEven better, oscope-scpi is on PyPi. So you can simply use the\nfollowing and the required dependancies should get installed for you:\n\n```\npip install oscope_scpi\n```\n\n## Requirements\n* [argparse](https://docs.python.org/3/library/argparse.html) \n* [numpy 1.19.5](https://numpy.org/)\n   * if installing on python 3.6 or 3.7, numpy 1.19.5 will be installed\n   * if installing on python 3.8+, then the latest numpy will be installed\n      * Up to numpy 1.22.3 has been verified\n* [python](http://www.python.org/)\n   * pyvisa no longer supports python 2.7+ so neither does this package - use older version of [MSOX3000](https://github.com/sgoadhouse/msox3000) if need python 2.7+\n* [pyvisa 1.11.3](https://pyvisa.readthedocs.io/en/stable/)\n* [pyvisa-py 0.5.2](https://pyvisa-py.readthedocs.io/en/latest/) \n* [quantiphy 2.3.0](http://quantiphy.readthedocs.io/en/stable/) \n\nIn order to run the example scripts `oscope.py` and `oscopeplot.py`, will also need to manually install:\n* [matplotlib 3.3.4](https://matplotlib.org)\n   * If cannot install `matplotlib` on your system, see the comments in `oscope.py` on how to modify it to work without `matplotlib`. \n\nWith the use of pyvisa-py, should not have to install the National\nInstruments VISA driver.\n\n## Features\n\nThis code is not an exhaustive coverage of all available commands and\nqueries of the oscilloscopes. The features that do exist are mainly\nones that improve productivity like grabbing a screen hardcopy\ndirectly to an image file on a computer with a descriptive name. This\neliminates the need to save to a USB stick with no descriptive name,\nkeep track of which hardcopy is which and then eventually take the USB\ndrive to a computer to download and attempt to figure out which\nhardcopy is which. Likewise, I have never bothered to use signal\nlabels because the oscilloscope interface for adding the labels was\nprimitive and impractical. With this code, can now easily send labels\nfrom the computer which are easy to create and update.\n\nCurrently, this is a list of the features that are supported so far:\n\n* Support for all analog channels, '1', '2', etc.\n* Support for digital channels 'POD1', 'POD2', etc.\n* Support for many other analog channels like math functions and saved waveforms.\n* Reading of all available single channel measurements \n* Reading of all available DVM measurements, if supported by oscilloscope\n* Installing measurements to statistics display\n* Reading data from statistics display\n* Screen Hardcopy to PNG image file\n* Reading actual waveform data to a numpy NPZ file\n* Saving oscilloscope setup to a file\n* Loading oscilloscope setup from saved file\n* Issuing Autoscale for supported channel(s)\n* Screen Annotation\n* Channel Labels for only the analog channels\n* Run/Stop/Single mode control\n\nIt is expected that new interfaces will be added over time to control\nand automate the oscilloscope. The key features that would be good to\nadd next are: trigger setup, horizontal and vertical scale control,\nzoom control\n\n## Channels\n\nAlmost all functions require a target channel. Once a\nchannel is passed into a function, the object will remember it and\nmake it the default for all subsequence function calls that do not\nsupply a channel. The channel value is a string or can also be a list\nof strings, in the case of setupAutoscale(). Currently, the valid\nchannel values are:\n\n* '1' or CHAN1 for analog channel 1\n* '2' or CHAN2 for analog channel 2\n* '3' or CHAN3 for analog channel 3 if it exists on the oscilloscope\n* '4' or CHAN4 for analog channel 4 if it exists on the oscilloscope\n* '5' or CHAN5 for analog channel 5 if it exists on the oscilloscope\n* '6' or CHAN6 for analog channel 6 if it exists on the oscilloscope\n* '7' or CHAN7 for analog channel 7 if it exists on the oscilloscope\n* '8' or CHAN8 for analog channel 8 if it exists on the oscilloscope\n* 'DIFFx' where x is the channel number: Differential Channel on oscilloscopes that support this\n* 'COMMx' where x is the channel number: Common-mode Channel on oscilloscopes that support this\n* 'FUNCx' where x is 1-16: Function channels, like Math and FFT, etc.\n* 'HIST' for Histogram\n* 'WMEMx' for saved Waveforms in Memory; x starts at 1 and can go to 4 or 8\n* 'POD1' for the grouping of digital channels 0-7 on a MSO/MXR/EXR model\n* 'POD2' for the grouping of digital channels 8-15 on a MSO/MXR/EXR model\n* 'PODALL' for the grouping of digital channels 0-15 on a MXR/EXR model\n* 'BUSx' where x is 1-4: protocol busses (although have not seen this to be useful)\n\n## Usage and Examples\nThe code is a basic class for controlling and accessing the\nsupported oscilloscopes.\n\nThe examples are written to access the oscilloscope over\nethernet/TCPIP. So the examples need to know the IP address of your\nspecific oscilloscope. Also, PyVISA can support other access\nmechanisms, like USB. So the examples must be edited to use the\nresource string or VISA descriptor of your particular\ndevice. Alternatively, you can set an environment variable, OSCOPE\\_IP\nto the desired VISA resource string before running the code. If not using\nethernet to access your device, search online for the proper resource\nstring needed to access your device.\n\nFor more detailed examples, see:\n\n```\noscope.py -h\n```\n\nA basic example that installs a few measurements to the statistics\ndisplay, adds some annotations and signal labels and then saves a\nhardcopy to a file.\n\n```python\n# Lookup environment variable OSCOPE_IP and use it as the resource\n# name or use the TCPIP0 string if the environment variable does\n# not exist\nfrom oscope_scpi import Oscilloscope\nfrom os import environ\nresource = environ.get('OSCOPE_IP', 'TCPIP0::172.16.2.13::INSTR')\n\n# create your visa instrument\ninstr = Oscilloscope(resource)\n\n# Upgrade Object to best match based on IDN string\ninstr = instr.getBestClass()\n\n# Open connection to instrument\ninstr.open()\n\n# set to channel 1\n#\n# NOTE: can pass channel to each method or just set it\n# once and it becomes the default for all following calls. If pass the\n# channel to a Class method call, it will become the default for\n# following method calls.\ninstr.channel = '1'\n\n# Enable output of channel, if it is not already enabled\nif not instr.isOutputOn():\n    instr.outputOn()\n\n# Install measurements to display in statistics display and also\n# return their current values here\nprint('Ch. {} Settings: {:6.4e} V  PW {:6.4e} s\\n'.\n          format(instr.channel, instr.measureVoltAverage(install=True),\n                     instr.measurePosPulseWidth(install=True)))\n\n# Add an annotation to the screen before hardcopy\ninstr.annotate(\"{} {} {}\".format('Example of Annotation','for Channel',instr.channel), 'ch1')\n\n# Change label of the channel to \"MySig1\"\ninstr.channelLabel('MySig1')\n\n# Make sure the statistics display is showing for the hardcopy\ninstr.measureStatistics()\n\n# STOP Oscilloscope (not required for hardcopy - only showing example of how to do it)\ninstr.modeStop()\n\n# Save a hardcopy of the screen to file 'outfile.png'\ninstr.hardcopy('outfile.png')\n\n# SINGLE mode (just an example)\ninstr.modeSingle()\n\n# Change label back to the default\n#\n# NOTE: can use instr.channelLabelOff() but showing an example of sending a SCPI command directly\ninstr._instWrite('DISPlay:LABel OFF')\n\n# RUN mode (since demo Stop and Single, restore Run mode)\ninstr.modeRun()\n\n# Turn off the annotation\ninstr.annotateOff()\n    \n# turn off the channel\ninstr.outputOff()\n\n# return to LOCAL mode\ninstr.setLocal()\n\ninstr.close()\n```\n\n## Taking it Further\nThis implements a small subset of available commands.\n\nFor information on what is possible for the HP/Agilent/Keysight MSO-X/DSO-X\n3000A, see the\n[Keysight InfiniiVision\n3000 X-Series Oscilloscopes Programming Guide](https://www.keysight.com/us/en/assets/9018-06894/programming-guides/9018-06894.pdf)\n\nFor information on what is possible for the HP/Agilent/Keysight MSO-X/DSO-X\n3000T, see the\n[Keysight InfiniiVision\n3000T X-Series Oscilloscopes Programming Guide](https://www.keysight.com/us/en/assets/9018-07265/programming-guides/9018-07265.pdf)\n\nFor the Keysight MXR/EXR-Series Oscilloscopes, see [Keysight Infiniium MXR/EXR-Series Oscilloscopes\nProgrammer's Guide](https://www.keysight.com/us/en/assets/9018-18183/programming-guides/9018-18183.pdf)\n\nFor the Keysight UXR-Series Oscilloscopes, see [Keysight Infiniium UXR-Series Oscilloscopes\nProgrammer's Guide](https://www.keysight.com/us/en/assets/9018-07723/programming-guides/9018-07723.pdf)\n\nFor what is possible with general instruments that adhere to the\nIEEE 488 SCPI specification, like the MSO-X 3000A, see the\n[SCPI 1999 Specification](http://www.ivifoundation.org/docs/scpi-99.pdf)\nand the\n[SCPI Wikipedia](https://en.wikipedia.org/wiki/Standard_Commands_for_Programmable_Instruments) entry.\n\n## Contact\nPlease send bug reports or feedback to Stephen Goadhouse\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sgoadhouse/oscope-scpi",
    "keywords": "HP,Agilent,Keysight,MSO3000,MSOX3000,DSO3000,DSOX3000,MXR,MXR058A,EXR,UXR,UXR0334A,PyVISA,VISA,SCPI,INSTRUMENT",
    "license": "MIT",
    "maintainer": "Stephen Goadhouse",
    "maintainer_email": "sgoadhouse@virginia.edu",
    "name": "oscope-scpi",
    "package_url": "https://pypi.org/project/oscope-scpi/",
    "platform": null,
    "project_url": "https://pypi.org/project/oscope-scpi/",
    "project_urls": {
      "Homepage": "https://github.com/sgoadhouse/oscope-scpi"
    },
    "release_url": "https://pypi.org/project/oscope-scpi/0.1.13/",
    "requires_dist": [
      "pyvisa (>=1.11.3)",
      "pyvisa-py (>=0.5.2)",
      "argparse",
      "QuantiPhy (>=2.3.0)",
      "numpy (==1.19.5) ; python_version < \"3.8\"",
      "numpy (>=1.19.5) ; python_version >= \"3.8\""
    ],
    "requires_python": ">=3.6",
    "summary": "Control of Oscilloscopes with SCPI command sets like Keysight MSO-X/DSO-X 3000A/3000T, UXR, MXR and EXR Series through python via PyVisa",
    "version": "0.1.13",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13693703,
  "releases": {
    "0.1.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1c48c8c0afa67009e6f3c1102b49c1d68d61583649073b1e83cdecf129247dc5",
          "md5": "004bc8a7f70727562ab28e55ea8dfb71",
          "sha256": "e45f892472a69184842a7d1b33cd72809f5afd622523b97a6ddbf6a0aeb02972"
        },
        "downloads": -1,
        "filename": "oscope_scpi-0.1.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "004bc8a7f70727562ab28e55ea8dfb71",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 40076,
        "upload_time": "2021-05-07T04:04:41",
        "upload_time_iso_8601": "2021-05-07T04:04:41.294779Z",
        "url": "https://files.pythonhosted.org/packages/1c/48/c8c0afa67009e6f3c1102b49c1d68d61583649073b1e83cdecf129247dc5/oscope_scpi-0.1.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5b9f3fc1852f7685bb187ba4f58ecfbbbdaa9f09bf164b416f3dda30ce086d6d",
          "md5": "06f74d773c31b93b1fba211e9cbaad89",
          "sha256": "1b6c1e75087cb9c466dde97d92437f61817618ec9c9dc91b4d5ee1a5dbe3572f"
        },
        "downloads": -1,
        "filename": "oscope_scpi-0.1.10.tar.gz",
        "has_sig": false,
        "md5_digest": "06f74d773c31b93b1fba211e9cbaad89",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 41418,
        "upload_time": "2021-05-07T04:04:43",
        "upload_time_iso_8601": "2021-05-07T04:04:43.950795Z",
        "url": "https://files.pythonhosted.org/packages/5b/9f/3fc1852f7685bb187ba4f58ecfbbbdaa9f09bf164b416f3dda30ce086d6d/oscope_scpi-0.1.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3b9bc39b4f57636a47766a0e767e4c2b7842bffc018c3a704e3ee83c890b5883",
          "md5": "eb3f7997c310fb0b3a43b0bca79bcb97",
          "sha256": "1186daaf1e25757cc5abc709d17f0837074e0ef66510ef9a6d7852b08dcbf45b"
        },
        "downloads": -1,
        "filename": "oscope_scpi-0.1.11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eb3f7997c310fb0b3a43b0bca79bcb97",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 40076,
        "upload_time": "2021-05-07T04:30:29",
        "upload_time_iso_8601": "2021-05-07T04:30:29.413421Z",
        "url": "https://files.pythonhosted.org/packages/3b/9b/c39b4f57636a47766a0e767e4c2b7842bffc018c3a704e3ee83c890b5883/oscope_scpi-0.1.11-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f638d3bee7531134d7d8c40472755909edf45a2b8f2ac1631c8b2c2ac94d445",
          "md5": "06a53934cdecd20410b13a7e0a20fab3",
          "sha256": "ff1b4765051bcf8f9ab003033cbcaa16b364869ce2553e35cb7b45128ac74081"
        },
        "downloads": -1,
        "filename": "oscope_scpi-0.1.11.tar.gz",
        "has_sig": false,
        "md5_digest": "06a53934cdecd20410b13a7e0a20fab3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 41423,
        "upload_time": "2021-05-07T04:30:31",
        "upload_time_iso_8601": "2021-05-07T04:30:31.518969Z",
        "url": "https://files.pythonhosted.org/packages/5f/63/8d3bee7531134d7d8c40472755909edf45a2b8f2ac1631c8b2c2ac94d445/oscope_scpi-0.1.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f7b95d09e77ce95c98efc080874ba5edfc2f9054aa47623cdfbb8470791b15fb",
          "md5": "26c9392aafe0d42894b0c26c78c9c64f",
          "sha256": "8162390428947eb68b6ccafdb0251c38903137595086e88a3922b9c254f59e56"
        },
        "downloads": -1,
        "filename": "oscope_scpi-0.1.12-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "26c9392aafe0d42894b0c26c78c9c64f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 41142,
        "upload_time": "2021-11-05T01:54:17",
        "upload_time_iso_8601": "2021-11-05T01:54:17.929552Z",
        "url": "https://files.pythonhosted.org/packages/f7/b9/5d09e77ce95c98efc080874ba5edfc2f9054aa47623cdfbb8470791b15fb/oscope_scpi-0.1.12-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "485d9e32541323261bb3d23cf1405432ed1507f716a62ddd1b3d0eac50eb3384",
          "md5": "af3be933fea7493fb9cfc0a58544913c",
          "sha256": "e42e2b86a500b16a28b427ede30e915de853eb5cb382f57f8a14f98b16f210ac"
        },
        "downloads": -1,
        "filename": "oscope_scpi-0.1.12.tar.gz",
        "has_sig": false,
        "md5_digest": "af3be933fea7493fb9cfc0a58544913c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 42662,
        "upload_time": "2021-11-05T01:54:19",
        "upload_time_iso_8601": "2021-11-05T01:54:19.422817Z",
        "url": "https://files.pythonhosted.org/packages/48/5d/9e32541323261bb3d23cf1405432ed1507f716a62ddd1b3d0eac50eb3384/oscope_scpi-0.1.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "504d98c642a92a32e60b2e3a35a35a02429183e816b727ce62d5d9fe12832529",
          "md5": "8bf68c585d8e4b677ad37edf0c49f61c",
          "sha256": "659ec2ce26ba5ff51c9f07e3c68b7f21521bfd5ff308bdf4187b4343586ce639"
        },
        "downloads": -1,
        "filename": "oscope_scpi-0.1.13-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8bf68c585d8e4b677ad37edf0c49f61c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 41311,
        "upload_time": "2022-05-02T23:14:35",
        "upload_time_iso_8601": "2022-05-02T23:14:35.970972Z",
        "url": "https://files.pythonhosted.org/packages/50/4d/98c642a92a32e60b2e3a35a35a02429183e816b727ce62d5d9fe12832529/oscope_scpi-0.1.13-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6e597dbdf6ff26491cb253673e511ac04b853a59659dbe22a4fe7d6c9db68757",
          "md5": "e34ad06a2474b38b365c038a8a9f5c93",
          "sha256": "87a06c15d53efa06f28af256aab09237c5f88b376c83a478ed5e94ae63529317"
        },
        "downloads": -1,
        "filename": "oscope_scpi-0.1.13.tar.gz",
        "has_sig": false,
        "md5_digest": "e34ad06a2474b38b365c038a8a9f5c93",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 43687,
        "upload_time": "2022-05-02T23:14:38",
        "upload_time_iso_8601": "2022-05-02T23:14:38.642825Z",
        "url": "https://files.pythonhosted.org/packages/6e/59/7dbdf6ff26491cb253673e511ac04b853a59659dbe22a4fe7d6c9db68757/oscope_scpi-0.1.13.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "504d98c642a92a32e60b2e3a35a35a02429183e816b727ce62d5d9fe12832529",
        "md5": "8bf68c585d8e4b677ad37edf0c49f61c",
        "sha256": "659ec2ce26ba5ff51c9f07e3c68b7f21521bfd5ff308bdf4187b4343586ce639"
      },
      "downloads": -1,
      "filename": "oscope_scpi-0.1.13-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8bf68c585d8e4b677ad37edf0c49f61c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 41311,
      "upload_time": "2022-05-02T23:14:35",
      "upload_time_iso_8601": "2022-05-02T23:14:35.970972Z",
      "url": "https://files.pythonhosted.org/packages/50/4d/98c642a92a32e60b2e3a35a35a02429183e816b727ce62d5d9fe12832529/oscope_scpi-0.1.13-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6e597dbdf6ff26491cb253673e511ac04b853a59659dbe22a4fe7d6c9db68757",
        "md5": "e34ad06a2474b38b365c038a8a9f5c93",
        "sha256": "87a06c15d53efa06f28af256aab09237c5f88b376c83a478ed5e94ae63529317"
      },
      "downloads": -1,
      "filename": "oscope_scpi-0.1.13.tar.gz",
      "has_sig": false,
      "md5_digest": "e34ad06a2474b38b365c038a8a9f5c93",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 43687,
      "upload_time": "2022-05-02T23:14:38",
      "upload_time_iso_8601": "2022-05-02T23:14:38.642825Z",
      "url": "https://files.pythonhosted.org/packages/6e/59/7dbdf6ff26491cb253673e511ac04b853a59659dbe22a4fe7d6c9db68757/oscope_scpi-0.1.13.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}