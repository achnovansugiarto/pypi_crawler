{
  "info": {
    "author": "Ravindra Marella",
    "author_email": "mv.ravindra007@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Scientific/Engineering :: Mathematics",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "Run OpenAI Gym environments on an external process or remote machine using gRPC.\n\n## Installation\n\n[Install Gym] (not required if using [Docker]) and run:\n\n```sh\npip install gymx\n```\n\nIt is recommended to use a [virtual environment].\n\n## Usage\n\n### Server\n\nTo start the server run:\n\n```sh\npython -m gymx\n```\n\nTo use a different port run:\n\n```sh\npython -m gymx --port=54321\n```\n\nYou can also run the server using [Docker]:\n\n```sh\ndocker run -p 54321:54321 album/gymx\n```\n\n### Client\n\nInside your application use:\n\n```py\nfrom gymx import Env\n\nenv = Env('CartPole-v0')\n```\n\nTo specify the server address use:\n\n```py\nenv = Env('CartPole-v0', address='localhost:54321')\n```\n\n#### API\n\n-   `env.reset()`: Reset the environment's state. Returns `observation`.\n-   `env.step(action)`: Step the environment by one timestep. Returns `observation`, `reward`, `done`, `next_episode`. Unlike the original gym API, it automatically resets the environment when done and returns next episode's observation instead of `info`.\n\n[virtual environment]: https://docs.python.org/3/library/venv.html\n[install gym]: https://github.com/openai/gym#installation\n[docker]: https://docs.docker.com/",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/AppliedDeepLearning/gymx",
    "keywords": "gymx gym grpc reinforcement-learning",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "gymx",
    "package_url": "https://pypi.org/project/gymx/",
    "platform": "",
    "project_url": "https://pypi.org/project/gymx/",
    "project_urls": {
      "Homepage": "https://github.com/AppliedDeepLearning/gymx"
    },
    "release_url": "https://pypi.org/project/gymx/0.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Run OpenAI Gym environments on an external process or remote machine using gRPC.",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4234298,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4c8bcb82f465062ab212a6dc9b28dc92b94e19bc252d6e93622854d89f23e42d",
          "md5": "c1cbcde313604d005f7ba67bff8151c9",
          "sha256": "f65a04669aaf59a56b3273fdf61503a2539dbccfe4f82e4ecf5fe286149e28e9"
        },
        "downloads": -1,
        "filename": "gymx-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c1cbcde313604d005f7ba67bff8151c9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5227,
        "upload_time": "2018-08-31T17:42:05",
        "upload_time_iso_8601": "2018-08-31T17:42:05.657017Z",
        "url": "https://files.pythonhosted.org/packages/4c/8b/cb82f465062ab212a6dc9b28dc92b94e19bc252d6e93622854d89f23e42d/gymx-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a1372b9fce09979ddbcf2525a8443b7d4ed24ad13d5a6665499ceefc1fd1439c",
          "md5": "5f555cf7a445216c5fa29810e675e29e",
          "sha256": "0a975ef566f6f53ac90a7e7fceb21beeb1dc2090cc7ad17175cb446f9b3e2400"
        },
        "downloads": -1,
        "filename": "gymx-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5f555cf7a445216c5fa29810e675e29e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5533,
        "upload_time": "2018-09-03T13:10:52",
        "upload_time_iso_8601": "2018-09-03T13:10:52.920239Z",
        "url": "https://files.pythonhosted.org/packages/a1/37/2b9fce09979ddbcf2525a8443b7d4ed24ad13d5a6665499ceefc1fd1439c/gymx-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a1372b9fce09979ddbcf2525a8443b7d4ed24ad13d5a6665499ceefc1fd1439c",
        "md5": "5f555cf7a445216c5fa29810e675e29e",
        "sha256": "0a975ef566f6f53ac90a7e7fceb21beeb1dc2090cc7ad17175cb446f9b3e2400"
      },
      "downloads": -1,
      "filename": "gymx-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "5f555cf7a445216c5fa29810e675e29e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5533,
      "upload_time": "2018-09-03T13:10:52",
      "upload_time_iso_8601": "2018-09-03T13:10:52.920239Z",
      "url": "https://files.pythonhosted.org/packages/a1/37/2b9fce09979ddbcf2525a8443b7d4ed24ad13d5a6665499ceefc1fd1439c/gymx-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}