{
  "info": {
    "author": "MaliciaLab",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Security"
    ],
    "description": "# AVClass\n\nAVClass is a Python package and command line tool to tag / label\nmalware samples.\nYou input the AV labels for a large number of malware samples\n(e.g., VirusTotal JSON reports)\nand it outputs a list of tags extracted from the AV labels of each sample.\n\nBy default, AVClass outputs the most likely family name for each sample,\nbut it can also output other tags that capture\nthe malware class (e.g., *worm*, *ransomware*, *grayware*),\nbehaviors (e.g., *spam*, *ddos*), and\nfile properties (e.g., *packed*, *themida*, *bundle*, *nsis*).\n\nIf you are wondering if this is AVClass or AVClass2,\nthe answer is this is the right place for both.\nThe old AVClass code has been deprecated and\nAVClass2 has been renamed as AVClass.\nA longer explanation is below.\n\n## Installation\n```shell\npip install avclass-malicialab\n```\n\n## Examples\n\nTo obtain the most likely family name for each sample, run:\n\n```shell\navclass -f examples/vtv2_sample.json\n```\n\nthe output on stdout will be:\n\n```\n602695c8f2ad76564bddcaf47b76edff  zeroaccess\nf117cc1477513cb181cc2e9fcaab39b2  winwebsec\n```\n\nwhich simply reports the most common family name for each sample.\n\nFor some samples, AVClass may return:\n\n```\n5e31d16d6bf35ea117d6d2c4d42ea879\tSINGLETON:5e31d16d6bf35ea117d6d2c4d42ea879\n```\n\nThis means that AVClass was not able to identify a family name for that sample.\nAVClass uses the SINGLETON:hash terminology,\n(e.g., instead of an empty string or NULL)\nso that the second column can be used as a cluster identifier where\neach unlabeled sample is placed in its own cluster.\nThis prevents considering that all unlabeled samples are part of the\nsame family / cluster.\n\nTo extract all tags for each sample run:\n\n```shell\navclass -f examples/vtv2_sample.json -t\n```\n\nthe output on stdout will be:\n\n```\n602695c8f2ad76564bddcaf47b76edff  52  FAM:zeroaccess|19,FILE:os:windows|16,BEH:server|8,CLASS:backdoor|8,FILE:packed|7\nf117cc1477513cb181cc2e9fcaab39b2  39  CLASS:rogueware|15,BEH:alertuser|15,FILE:os:windows|11,FAM:winwebsec|4,CLASS:grayware|4,CLASS:grayware:tool|3,FILE:packed|3\n```\nwhich means sample *602695c8f2ad76564bddcaf47b76edff*\nwas flagged by 52 AV engines and that\n19 of them mention it belongs to the *zeroaccess* family,\n16 that it runs on *windows*,\n8 that it is a *backdoor*, and\n7 that it is a *packed* file.\nSample *f117cc1477513cb181cc2e9fcaab39b2* is flagged by 39 AV engines and\n15 of them mention its class to be *rogueware*,\n15 that it has the *alertuser* behavior,\n11 that it runs on *windows*,\n4 that it belongs to the *winwebsec* family,\nand so on.\n\nYou can also place the output in a file of your choosing with the _-o_ option:\n\n```shell\navclass -f examples/vtv2_sample.json -o output.txt\n```\n\n## Why is AVClass useful?\n\nBecause a lot of times security researchers want to extract family and other\ninformation from AV labels, but this process is not as simple as it looks,\nespecially if you need to do it for large numbers (e.g., millions) of samples.\nSome advantages of AVClass are:\n\n1. *Automatic.* It avoids manual work that does not scale for large datasets.\n\n2. *Vendor-agnostic.* It operates on the labels of any available set of AV\nengines, which can vary from sample to sample.\n\n3. *Cross-platform.* It can be used for any platforms supported by AV\nengines, e.g., Windows or Android malware.\n\n4. *Does not require executables.* AV labels can be obtained from online\nservices like VirusTotal using a sample's hash,\neven when the executable is not available.\n\n5. *Quantified accuracy.* We have evaluated AVClass on millions of\nsamples and publicly available malware datasets with ground truth.\nEvaluation details are in the RAID 2016 and ACSAC 2020 papers\n(see References section).\n\n6. *Open source.* The code is available and we are happy to incorporate\nsuggestions and improvements so that the security community benefits from\nthe tool.\n\n## Limitations\n\nThe main limitations of AVClass is that its output depends\non the input AV labels.\nAVClass tries to compensate for the noise on the AV labels,\nbut it cannot identify tags if AV engines do not provide non-generic tokens\nin the labels of a sample.\nIn particular, it only outputs tags that appear in the labels of\nat least 2 AV engines.\n\nStill, there are many samples that can be tagged\nand thus we believe you will find it useful.\n\n## Is this AVClass or AVClass2?\n\nThe short answer is that the current code in this repo is\nbased on the code of AVClass2.\nThe original AVClass code has been deprecated.\nBelow, we detail this process.\n\nWe originally published AVClass in RAID 2016 and made its code\navailable in this repository in July 2016.\nAVClass extracted only the family names from the input samples.\n\nWe published AVClass2 in ACSAC 2020 and made its code\navailable in this repository in September 2020.\nAVClass2 extracted all tags from the input samples and included a\ncompatibility option to provide only the family names in the\nsame format as the original AVClass.\n\nFor 2.5 years, both tools were available in this repository in\nseparate directories.\nIn February 2023, we decided to \ndeprecate the original AVClass code,\nrename AVClass2 as AVClass, \nrelease a PyPI package to ease installation, and \nclean the command line options.\n\n## Input formats\n\nAVClass supports four input JSONL formats\n(i.e., one JSON object per line).\n\n1. VirusTotal v3 API reports,\nwhere each line in the input *file* should be the full JSON of a\nVirusTotal API version 3 response with a *File* object report,\ne.g., obtained by querying https://www.virustotal.com/api/v3/files/{hash}\nThere is an example VirusTotal v3 input file in examples/vtv3_sample.json\n\n```shell\navclass -f examples/vtv3_sample.json -o output.txt\n```\n\n2. VirusTotal v2 API reports,\nwhere each line in the input *file* should be the full JSON of a\nVirusTotal v2 API response to the */file/report* endpoint,\ne.g., obtained by querying https://www.virustotal.com/vtapi/v2/file/report?apikey={apikey}&resource={hash}\nThere is an example VirusTotal v2 input file in examples/vtv2_sample.json\n\n```shell\navclass -f examples/vtv2_sample.json -o output.txt\n```\n\n3. OPSWAT MetaDefender reports,\nwhere each line in the input *file* should be the full JSON\nobtained from OPSWAT MetaDefender.\nThere is an example OPSWAT MetaDefender input file in\nexamples/opswat_md_sample.json\n\n```shell\navclass -f examples/opswat_md_sample.json -o output.txt\n```\n\n4. Simplified format,\nwhere each line in the input *file* should be a JSON\nwith (at least) these fields:\n{md5, sha1, sha256, av_labels}.\nThere is an example of such input file in *examples/malheurReference_lb.json*\nIf you are obtaining AV labels from sources other than VirusTotal you \nmay want to convert them to this format.\n\n```shell\navclass -f examples/malheurReference_lb.json -o output.txt\n```\n\n**Multiple input files and different formats**\n\nAVClass can handle multiple input files putting the results in the\nsame output files\n(if you want results in separate files, process each input file separately).\nAVClass automatically detects the format of each file, \nso it is possible to mix input files.\n\nFor example, you can provide as input the three test files\n(each of a different format) in the examples directory:\n\n```shell\navclass -f examples/vtv3_sample.json -f examples/vtv2_sample.json -f examples/malheurReference_lb.json -f examples/opswat_md_sample.json -o output.txt\n```\n\noutput.txt will have 3135 lines: 3130 samples from malheurReference_lb.json,\n3 samples from vtv2_sample.json, 1 sample from vtv3_sample.json, and\n1 sample from opswat_md_sample.json.\n\nYou can also provide as input a directory with the -d option and \nAVClass will process all files in that directory. \n\n```shell\navclass -d <directory>\n```\n\nIt is also possible to combine -f with -d,\nThus, this command works:\n\n```shell\navclass -f <file> -d <directory>\n```\n\nAt this point you have read the most important information on\nhow to use AVClass.\nThe following sections describe steps that most users will not need.\n\n## Labeling: Using only Selected AV Engines\n\nBy default, AVClass will use the labels of all AV engines that appear in\nthe input reports.\nIf you want to limit AVClass to use only the labels of certain AV engines,\nyou can use the -av option to pass it a file where each line has the name of\nan AV engine (case-sensitive).\n\nFor example, you could create a file engines.txt with three lines:\nBitDefender\nF-Secure\nSophos\n\n```shell\navclass -av engines.txt -f examples/vtv2_sample.json -t -o output.txt\n```\n\nwould output into output.txt:\n```\n602695c8f2ad76564bddcaf47b76edff  3 FAM:zeroaccess|2\nf117cc1477513cb181cc2e9fcaab39b2  3\n```\n\nwhere only the labels of BitDefender, F-Secure, and Sophos have been used\nto extract tags.\nThe output states all three selected engines flag both samples as malicious.\nNote that the number of detections is with respect to the provided engines,\ni.e., even if the first sample has 52 detections,\nthe number of detections is a maximum of 3 in this case.\nFor the first sample, two AV engines identify the family as *zeroaccess* but\nfor the second sample no tags are identified in the labels\nof the three selected AV engines.\n\n## Labeling: Ground Truth Evaluation\n\nIf you have family ground truth for some malware samples,\ni.e., you know the true family for those samples,\nyou can evaluate the accuracy of the family tags output by AVClass on\nthose samples with respect to that ground truth.\nThe evaluation metrics used are precision, recall, and F1 measure.\nSee our\n[RAID 2016 paper](https://software.imdea.org/~juanca/papers/avclass_raid16.pdf) for their definition.\nNote that the ground truth evaluation does not apply to non-family tags,\ni.e., it only evaluates family labeling.\n\n```shell\navclass -f examples/malheurReference_lb.json -gt examples/malheurReference_gt.tsv -o malheurReference.labels\n```\n\nThe output includes these lines:\n\n```\nCalculating precision and recall\n3131 out of 3131\nPrecision: 90.81  Recall: 93.95 F1-Measure: 92.35\n```\n\nEach line in the *examples/malheurReference_gt.tsv* file has\nthree **tab-separated** columns (hash, AVClass family, GT family):\n\n```\nafdd8f086dfcb8d2cf26c566e784476dd899ec10 adrotator ADROTATOR\n```\n\nwhich indicates that sample afdd8f086dfcb8d2cf26c566e784476dd899ec10 \nis identified as *adrotator* by AVClass and \nits ground truth family is *ADROTATOR*.\nEach sample in the input file should also appear in the ground truth file.\nNote that the particular label assigned to each family does not matter.\nWhat matters is that all samples in the same family are assigned\nthe same family name (i.e., the same string in the second column)\n\nThe ground truth can be obtained from publicly available malware datasets.\nThe one in *examples/malheurReference_gt.tsv* comes from the\n[Malheur](http://www.mlsec.org/malheur/) dataset.\nThere are other public datasets with ground truth such as\n[Drebin](https://www.sec.cs.tu-bs.de/~danarp/drebin/) or\n[Malicia](http://malicia-project.com/dataset.html).\n\n\n## Update Module\n\nThe update module can be used to suggest additions and changes to the input\ntaxonomy, tagging rules, and expansion rules.\nBy default, AVClass uses the default taxonomy, tagging, and expansion files\nincluded in the repository.\nThus, we expect that most users will not need to run the update module.\nBut, below we explain how to run in case you need to.\n\nUsing the update module comprises of two steps.\nThe first step is obtaining an alias file:\n\n```shell\navclass -f examples/malheurReference_lb.json -aliasdetect -o /dev/null\n```\n\nThe above command will create a file named \\<file\\>.alias,\nmalheurReference_lb.alias in our example. This file has 7 columns:\n\n1. t1: token that is an alias\n2. t2: tag for which t1 is an alias\n3. |t1|: number of input samples where t1 was observed\n4. |t2|: number of input samples where t2 was observed\n5. |t1^t2|: number of input samples where both t1 and t2 were observed\n6. |t1^t2|/|t1|: ratio of input samples where both t1 and t2 were observed over the number of input samples where t1 was observed.\n7. |t1^t2|/|t2|: ratio of input samples where both t1 and t2 were observed over the number of input samples where t2 was observed.\n\nThe Update Module takes the above file as input with the -alias option,\nas well as the default taxonomy, tagging, and expansion files\nin the data directory.\nIt outputs updated taxonomy, tagging, and expansion files that include the\nsuggested additions and changes.\n\n```shell\navclass-update -alias malheurReference_lb.alias -o output_prefix\n```\n\nThis will produce three files:\noutput_prefix.taxonomy, output_prefix.tagging, output_prefix.expansion.\nYou can diff the output and input files to analyze the proposed changes.\n\nYou can also modify the input taxonomy, tagging, and expansion rules in place,\nrather than producing new files:\n\n```shell\navclass-update -alias malheurReference_lb.alias -update\n```\n\n## Customizing AVClass\n\nAVClass is fully customizable:\nTagging, Expansion and Taxonomy files can be easily modified by the analyst\neither manually or by running the update module.\n\nIf you change those files manually, we recommend running\nafterwards the normalization script to keep them tidy.\nIt sorts the tags in the taxonomy and performs some basic cleaning like\nremoving redundant entries:\n\n```shell\navclass-normalize -tax mytaxonomy -tag mytagging -exp myexpansions\n```\n\nIf the modifications are in the default files in the data directory you can\nsimply run:\n\n```shell\navclass-normalize\n```\n\n## Evaluating and comparing with AVClass\n\nOther researchers may want to independently evaluate AVClass/AVClass2 and\nto compare it with their own approaches.\nWe encourage such evaluation, feedback on limitations, and proposals for\nimprovement.\nHowever, we have observed a number of common errors in such evaluations that\nshould be avoided.\nThus, if you need to compare your approach with AVClass/AVClass2,\nplease read the [evaluation page](EVALUATION.md)\n\n## Dependencies\n\nAVClass is written in Python.\nIt should run on Python versions above 2.7 and 3.0.\n\nIt does not require installing any dependencies.\n\n## Support and Contributing\n\nIf you have issues or want to contribute, please file a issue or perform a\npull request through GitHub.\n\n## License\n\nAVClass is released under the MIT license\n\n## References\n\nThe design and evaluation of AVClass is detailed in our\n[RAID 2016 paper](https://software.imdea.org/~juanca/papers/avclass_raid16.pdf):\n\n> Marcos Sebastián, Richard Rivera, Platon Kotzias, and Juan Caballero.<br>\nAVClass: A Tool for Massive Malware Labeling.<br>\nIn Proceedings of the International Symposium on Research in\nAttacks, Intrusions and Defenses,\nSeptember 2016.\n\nThe design and evaluation of AVClass2 is detailed in our\n[ACSAC 2020 paper](https://arxiv.org/pdf/2006.10615.pdf):\n\n> Silvia Sebastián, Juan Caballero.<br>\nAVClass2: Massive Malware Tag Extraction from AV Labels.<br>\nIn proceedings of the Annual Computer Security Applications Conference,\nDecember 2020.\n\n## Contributors\n\nSeveral members of the MaliciaLab at the\n[IMDEA Software Institute](http://software.imdea.org)\nhave contributed to AVClass:\nMarcos Sebastián, Richard Rivera, Platon Kotzias, Srdjan Matic,\nSilvia Sebastián, and Juan Caballero.\n\nGitHub users with significant contributions to AVClass include\n(let us know if you believe you should be listed here):\n[eljeffeg](https://github.com/eljeffeg)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "malware,malware family,tag,AV label",
    "license": "MIT License  Copyright (c) 2016-2020 MaliciaLab @ IMDEA Software Institute  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  ",
    "maintainer": "",
    "maintainer_email": "",
    "name": "avclass-malicialab",
    "package_url": "https://pypi.org/project/avclass-malicialab/",
    "platform": null,
    "project_url": "https://pypi.org/project/avclass-malicialab/",
    "project_urls": {
      "Homepage": "https://github.com/malicialab/avclass"
    },
    "release_url": "https://pypi.org/project/avclass-malicialab/2.7.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "AVClass is a Python package and command line tool to tag / label malware samples.",
    "version": "2.7.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17412248,
  "releases": {
    "2.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e233974e3804be791a045c01da4681a96f84d90aee2193dd25abf613ec05dd72",
          "md5": "cef12b00fe2004f0507315b119d159ca",
          "sha256": "c5317225d7e7eb79261d539399572e1603d88b2739cbabdf6f63b75970f5de37"
        },
        "downloads": -1,
        "filename": "avclass_malicialab-2.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cef12b00fe2004f0507315b119d159ca",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 26286,
        "upload_time": "2023-02-23T10:16:57",
        "upload_time_iso_8601": "2023-02-23T10:16:57.235580Z",
        "url": "https://files.pythonhosted.org/packages/e2/33/974e3804be791a045c01da4681a96f84d90aee2193dd25abf613ec05dd72/avclass_malicialab-2.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "873c6285d778d7dfaedd1b01d1ecd38cd8b2c339e4369946b5c05d85c12e7c5b",
          "md5": "75cbc907b18ff319cc69ce38616dcc74",
          "sha256": "b7ae7171d984f2d95d7876e6f559ebbe73a5a5d13f291d39d1f4c14a4eb33a23"
        },
        "downloads": -1,
        "filename": "avclass-malicialab-2.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "75cbc907b18ff319cc69ce38616dcc74",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29437,
        "upload_time": "2023-02-23T10:16:59",
        "upload_time_iso_8601": "2023-02-23T10:16:59.185588Z",
        "url": "https://files.pythonhosted.org/packages/87/3c/6285d778d7dfaedd1b01d1ecd38cd8b2c339e4369946b5c05d85c12e7c5b/avclass-malicialab-2.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e3946f3cfdd26d2fb42bbb9a3f4673057f2ac0f6b72232ee35f7ce20ec4bced",
          "md5": "4c9127c3fb76f2b97ded98ffd0dd88ae",
          "sha256": "c1946aba66335f394d51a657ee2f20b88c9dea8f5021fa488b89adaa86973abe"
        },
        "downloads": -1,
        "filename": "avclass_malicialab-2.5.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4c9127c3fb76f2b97ded98ffd0dd88ae",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 26282,
        "upload_time": "2023-02-23T10:31:18",
        "upload_time_iso_8601": "2023-02-23T10:31:18.427527Z",
        "url": "https://files.pythonhosted.org/packages/7e/39/46f3cfdd26d2fb42bbb9a3f4673057f2ac0f6b72232ee35f7ce20ec4bced/avclass_malicialab-2.5.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f31bfcab268a779e8458990e4b0037f3d49d87c12ed94f2516a130b5efe6cf01",
          "md5": "197d427a165364a887e3b0136fa714d4",
          "sha256": "9758963541b528b4220d8c97217b15939094213dc0263a730f935c7888931971"
        },
        "downloads": -1,
        "filename": "avclass-malicialab-2.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "197d427a165364a887e3b0136fa714d4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29488,
        "upload_time": "2023-02-23T10:31:21",
        "upload_time_iso_8601": "2023-02-23T10:31:21.310182Z",
        "url": "https://files.pythonhosted.org/packages/f3/1b/fcab268a779e8458990e4b0037f3d49d87c12ed94f2516a130b5efe6cf01/avclass-malicialab-2.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.5.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2fb935d68c00a8a807660044671466f5f70069dd64771d641ec3b0de5865ddfb",
          "md5": "7e991bdcfba53676e7c24c3fa87ca8bf",
          "sha256": "056cd38cfff56325b420708a53503af48e861b23fc33cde3b7c73fbb35c349fd"
        },
        "downloads": -1,
        "filename": "avclass_malicialab-2.5.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7e991bdcfba53676e7c24c3fa87ca8bf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 44421,
        "upload_time": "2023-02-23T10:42:36",
        "upload_time_iso_8601": "2023-02-23T10:42:36.739011Z",
        "url": "https://files.pythonhosted.org/packages/2f/b9/35d68c00a8a807660044671466f5f70069dd64771d641ec3b0de5865ddfb/avclass_malicialab-2.5.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f1e48140719c7ff5509f82e83570131bdb25cb4e2a4c1debfc2d0b00d0d72226",
          "md5": "0dd7a38593c402873eac88d3f3dee8b8",
          "sha256": "f21981555c10fc57dd130164d5e452e7d444cc666c2111c1f504892acf62bfba"
        },
        "downloads": -1,
        "filename": "avclass-malicialab-2.5.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0dd7a38593c402873eac88d3f3dee8b8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 47580,
        "upload_time": "2023-02-23T10:42:41",
        "upload_time_iso_8601": "2023-02-23T10:42:41.547947Z",
        "url": "https://files.pythonhosted.org/packages/f1/e4/8140719c7ff5509f82e83570131bdb25cb4e2a4c1debfc2d0b00d0d72226/avclass-malicialab-2.5.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "da32892f97e5769922e8a19beacba8a651a6d33fa81d840812b12347ded7acd0",
          "md5": "eb7d9e6e0b35d4e6aee7ce0f19a00abb",
          "sha256": "02c2691d423f9e557f4e271496fe3bc954d835737a4b8211d33bc00d47b61f86"
        },
        "downloads": -1,
        "filename": "avclass_malicialab-2.6.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eb7d9e6e0b35d4e6aee7ce0f19a00abb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 44140,
        "upload_time": "2023-02-23T21:06:05",
        "upload_time_iso_8601": "2023-02-23T21:06:05.944029Z",
        "url": "https://files.pythonhosted.org/packages/da/32/892f97e5769922e8a19beacba8a651a6d33fa81d840812b12347ded7acd0/avclass_malicialab-2.6.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "967f85849f160d375c75175477db0a965a1ef52a6eaa8939cb74edb39884b043",
          "md5": "d15112c1ae637fff746c27806ed9c513",
          "sha256": "5eb2cc878c40e0f86d7baeaca9345b3e3d75f5fb8d4e1419b25fe043a8bd27f5"
        },
        "downloads": -1,
        "filename": "avclass-malicialab-2.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d15112c1ae637fff746c27806ed9c513",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 47167,
        "upload_time": "2023-02-23T21:06:08",
        "upload_time_iso_8601": "2023-02-23T21:06:08.257437Z",
        "url": "https://files.pythonhosted.org/packages/96/7f/85849f160d375c75175477db0a965a1ef52a6eaa8939cb74edb39884b043/avclass-malicialab-2.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d89c66b9b43de63c8c4f163f3ceb40998fbdadbcfabf2ba70478cc9cf500eec8",
          "md5": "650355597649d1491db15410b1c08b36",
          "sha256": "a5edd67cc4ff3f905d08a1e91861973e41fcddf635ba240216034cca7ffed9e5"
        },
        "downloads": -1,
        "filename": "avclass_malicialab-2.7.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "650355597649d1491db15410b1c08b36",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 44908,
        "upload_time": "2023-02-26T20:27:56",
        "upload_time_iso_8601": "2023-02-26T20:27:56.546316Z",
        "url": "https://files.pythonhosted.org/packages/d8/9c/66b9b43de63c8c4f163f3ceb40998fbdadbcfabf2ba70478cc9cf500eec8/avclass_malicialab-2.7.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a2a25dbd46b8b197e7620a8c02f8493947e9f449699a04776e9363dc50a44fdf",
          "md5": "7ab685e1120f5f49d9f5cadfc7ab6e17",
          "sha256": "d4a7ce834aa81f627ce87780b17c5793f044bc12215742b20baedfde87046ea4"
        },
        "downloads": -1,
        "filename": "avclass-malicialab-2.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7ab685e1120f5f49d9f5cadfc7ab6e17",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 47744,
        "upload_time": "2023-02-26T20:27:58",
        "upload_time_iso_8601": "2023-02-26T20:27:58.906987Z",
        "url": "https://files.pythonhosted.org/packages/a2/a2/5dbd46b8b197e7620a8c02f8493947e9f449699a04776e9363dc50a44fdf/avclass-malicialab-2.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.7.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d618b3becaac911b4f478ee1adf2ecc4075b5cf1aca9a714b1f40b0b4370b4f2",
          "md5": "f416dfe6bf84db3bdd979151a7264056",
          "sha256": "563d25124dc2917f0488994cdcd09c52dc3e14e58b1d5db1c92a5af722e1ee2c"
        },
        "downloads": -1,
        "filename": "avclass_malicialab-2.7.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f416dfe6bf84db3bdd979151a7264056",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 45144,
        "upload_time": "2023-02-27T10:56:21",
        "upload_time_iso_8601": "2023-02-27T10:56:21.013472Z",
        "url": "https://files.pythonhosted.org/packages/d6/18/b3becaac911b4f478ee1adf2ecc4075b5cf1aca9a714b1f40b0b4370b4f2/avclass_malicialab-2.7.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d47438c2fb2d260fb2dccaddea7e34eca0cd6d42232429260b5aced04d8b20f7",
          "md5": "06077ac7f70ad2400536599c4f3fafbf",
          "sha256": "71cfb8984913bd0062edd307acb65b2d47fd3c8e3323ce202a2cc2adf03cc39d"
        },
        "downloads": -1,
        "filename": "avclass-malicialab-2.7.1.tar.gz",
        "has_sig": false,
        "md5_digest": "06077ac7f70ad2400536599c4f3fafbf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 48076,
        "upload_time": "2023-02-27T10:56:22",
        "upload_time_iso_8601": "2023-02-27T10:56:22.779802Z",
        "url": "https://files.pythonhosted.org/packages/d4/74/38c2fb2d260fb2dccaddea7e34eca0cd6d42232429260b5aced04d8b20f7/avclass-malicialab-2.7.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.7.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "93bdae39150e9baecb82d5b57f4ab1e7958ba290de93b203139bcd154c667e56",
          "md5": "daa9727391f599ad1135b52b345a4cc5",
          "sha256": "0246b8c342f64e93574226b7c185636ecb6431408dd80fbeba47d4d77f26ab02"
        },
        "downloads": -1,
        "filename": "avclass_malicialab-2.7.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "daa9727391f599ad1135b52b345a4cc5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 46635,
        "upload_time": "2023-03-04T13:30:31",
        "upload_time_iso_8601": "2023-03-04T13:30:31.617125Z",
        "url": "https://files.pythonhosted.org/packages/93/bd/ae39150e9baecb82d5b57f4ab1e7958ba290de93b203139bcd154c667e56/avclass_malicialab-2.7.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "059ae23807a1301dffae3099b0257ff0d59ddc0464d02616cdc63d4b5d3f1f1d",
          "md5": "e935fa3da301ff588ff87947b6605aed",
          "sha256": "03941fb4c2c741e4a69a4b3fef909b4775b48cb29c6475c2d0c9f418f7313a57"
        },
        "downloads": -1,
        "filename": "avclass-malicialab-2.7.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e935fa3da301ff588ff87947b6605aed",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 49299,
        "upload_time": "2023-03-04T13:30:33",
        "upload_time_iso_8601": "2023-03-04T13:30:33.348540Z",
        "url": "https://files.pythonhosted.org/packages/05/9a/e23807a1301dffae3099b0257ff0d59ddc0464d02616cdc63d4b5d3f1f1d/avclass-malicialab-2.7.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.7.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e2685efecc524fa476f189c44c66a96b3b171bdd2e99db5f0257575cbda6039c",
          "md5": "d80e560c780fa9b0c43761457e7e9672",
          "sha256": "1bfc7c1858e02a5d1ca7650ea7fce2c7268da3908e134b451da95671d111df27"
        },
        "downloads": -1,
        "filename": "avclass_malicialab-2.7.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d80e560c780fa9b0c43761457e7e9672",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 46644,
        "upload_time": "2023-03-23T08:33:57",
        "upload_time_iso_8601": "2023-03-23T08:33:57.713074Z",
        "url": "https://files.pythonhosted.org/packages/e2/68/5efecc524fa476f189c44c66a96b3b171bdd2e99db5f0257575cbda6039c/avclass_malicialab-2.7.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3ffbf7e1b89a149a96875d070f1b929474096a81271600a0fb9a1c508991b6aa",
          "md5": "904e05c932486ad529732135d489e023",
          "sha256": "4c4c7917f34d3b333435af5e5e226fcd0b348a6540f4b12b40eea1f34b0d8155"
        },
        "downloads": -1,
        "filename": "avclass-malicialab-2.7.3.tar.gz",
        "has_sig": false,
        "md5_digest": "904e05c932486ad529732135d489e023",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 49312,
        "upload_time": "2023-03-23T08:34:00",
        "upload_time_iso_8601": "2023-03-23T08:34:00.131409Z",
        "url": "https://files.pythonhosted.org/packages/3f/fb/f7e1b89a149a96875d070f1b929474096a81271600a0fb9a1c508991b6aa/avclass-malicialab-2.7.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e2685efecc524fa476f189c44c66a96b3b171bdd2e99db5f0257575cbda6039c",
        "md5": "d80e560c780fa9b0c43761457e7e9672",
        "sha256": "1bfc7c1858e02a5d1ca7650ea7fce2c7268da3908e134b451da95671d111df27"
      },
      "downloads": -1,
      "filename": "avclass_malicialab-2.7.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d80e560c780fa9b0c43761457e7e9672",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 46644,
      "upload_time": "2023-03-23T08:33:57",
      "upload_time_iso_8601": "2023-03-23T08:33:57.713074Z",
      "url": "https://files.pythonhosted.org/packages/e2/68/5efecc524fa476f189c44c66a96b3b171bdd2e99db5f0257575cbda6039c/avclass_malicialab-2.7.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3ffbf7e1b89a149a96875d070f1b929474096a81271600a0fb9a1c508991b6aa",
        "md5": "904e05c932486ad529732135d489e023",
        "sha256": "4c4c7917f34d3b333435af5e5e226fcd0b348a6540f4b12b40eea1f34b0d8155"
      },
      "downloads": -1,
      "filename": "avclass-malicialab-2.7.3.tar.gz",
      "has_sig": false,
      "md5_digest": "904e05c932486ad529732135d489e023",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 49312,
      "upload_time": "2023-03-23T08:34:00",
      "upload_time_iso_8601": "2023-03-23T08:34:00.131409Z",
      "url": "https://files.pythonhosted.org/packages/3f/fb/f7e1b89a149a96875d070f1b929474096a81271600a0fb9a1c508991b6aa/avclass-malicialab-2.7.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}