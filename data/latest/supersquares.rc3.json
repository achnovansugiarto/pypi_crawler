{
  "info": {
    "author": "Sammy Pardes",
    "author_email": "sammy.pardes@syr.edu",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Super Squares\n\nSuper Squares is a tool that allows anyone to generate and randomly assign Super Bowl squares.\n\n## Prerequisites \n\nBefore you begin, ensure you have met the following requirements:\n\n- You have read the documentation\n\n## Installing Super Squares\n\nTo install Super Squares, follow these steps on all OS devices:\n\n1. Install using the following command: `pip install supersquares`\n2. Import the package with: `from supersquares import squares`\n\n## Functions Overview \n\n### Square Stats \n\nThe `square_stats()` function prints information about a created Squares instance. This information incluces the number of rows and columns. The default number of rows and columns is 10. There is no default value for the minimum or maximum number of squares per player. Unless otherwise specified, the team associated with the number of rows is the AFC and the NFC team aligns with the columns. The default cost per square is $5.00 and the payouts are 15% for Q1 and Q3, 30% for Q2, and 40% for Q4.\n\nThe square_stats() function does not take any input. \n\n### Add Player\n\nTo add a player to the Squares instance, use the `add_player()` function. This function takes a player name as a string and the number of squares as an integer. Only unique names will be accepted. If there are minimum or maximum square requirements, they must be met. There must be enough available squares for a player to be added.\n\n### Assign Squares\n\nUse `assign_squares()` to give each player randomized squares corresponding to the number they purchased. This function does not take any input. \n\n### Assign Empty Squares\n\nThe `assign_empty_squares()` function can be used to randomly assign any blank squares to players already in the pool and does not take any variables as input. \n\n### Get Player Squares\n\nUse the `print_squares()` function to generate a tabulated format of the squares and save the grid as a .csv file called \"squares.csv\". No input is needed to print the squares.\n\n### Payout \n\nEach player has squares associated with their name. To get the squares assigned to a specific player, user the `get_player_squares()` function, which takes the player name string as input.\n\n## Usage Example\n\n1. Create a Squares() instance with the desired parameters and store it in a variable.\n\tInput: \n\t```\n\tsquares_example = Squares(cost_per_square = 10, \n\t\t\t\t\t\t\tteam_a = \"Pawnee\", \n\t\t\t\t\t\t\tteam_b = \"Eagleton\",\n\t\t\t\t\t\t\tmin_squares = 1,\n\t\t\t\t\t\t\tq1 = 10, \n\t\t\t\t\t\t\tq3 = 10, \n\t\t\t\t\t\t\tq4 = 50)\n\t```\n2. View the specifications of the grid \n\tInput: \n\t```\n\tsquares_example.square_stats()\n\t```\n\tOutput: \n\t```\n\tNumber of rows: 10\n\tNumber of columns: 10\n\tMinimum number of squares: 1\n\tMaximum number of squares: None\n\tTeam A: Pawnee\n\tTeam B: Eagleton\n\tCost per square: $10\n\tTotal pot: $1000\n\t\tQ1 payout: 10%, $100.0\n\t\tHalftime payout: 30%, $300.0\n\t\tQ3 payout: 10%, $100.0\n\t\tFinal Score payout: 50%, $500.0\n\tAvailable squares: 100\n\tUnavailable squares: 0\n\t```\n3. Add new users to the pool. Note: the entered number of squares must be available in the pool. Players must have unique names. \n\tInput: \n\t```\n\tsquares_example.add_player(\"Leslie\", 10)\n\tsquares_example.add_player(\"Ben\", 15)\n\tsquares_example.add_player(\"Ron\", 10)\n\tsquares_example.add_player(\"Ann\", 10)\n\tsquares_example.add_player(\"Donna\", 15)\n\tsquares_example.add_player(\"April\", 5)\n\tsquares_example.add_player(\"Tom\", 10)\n\tsquares_example.add_player(\"Chris\", 10)\n\tsquares_example.add_player(\"Andy\", 10)\n\tsquares_example.add_player(\"Jerry\", 5)\n\t```\n4. Assign squares to all of the players at once \n\tInput: \n\t```\n\tsquares_example.assign_squares()\n\t```\n5. Check the squares assigned to a specific user \n\tInput: \n\t```\n\tsquares_example.get_player_squares(\"Leslie\")\n\t```\n\tOutput: \n\t```\n\tLeslie has the following squares: [(4, 9), (2, 8), (3, 9), (7, 6), (2, 6), (6, 8), (2, 2), (8, 2), (5, 3), (6, 6)]\n\t```\n6. Print the grid\n\tInput:\n\t```\n\tsquares_example.print_squares()\n\t```\n\tOutput: \n\t```\n\t\t\t0           1           2           3           4           5           6           7           8           9\n\t\t\tEagleton    Eagleton    Eagleton    Eagleton    Eagleton    Eagleton    Eagleton    Eagleton    Eagleton    Eagleton\n\t------  ----------  ----------  ----------  ----------  ----------  ----------  ----------  ----------  ----------  ----------\n\t0       Ben         Ann         Donna       Chris       Andy        Chris       Ron         Ben         Chris       Donna\n\tPawnee\n\t1       Ron         Tom         Tom         Chris       Ann         April       Ann         Andy        Ben         Ann\n\tPawnee\n\t2       Ben         Chris       Leslie      Donna       Ron         Donna       Leslie      Ron         Leslie      April\n\tPawnee\n\t3       Chris       Ann         Chris       Chris       Ben         Tom         Donna       Andy        Andy        Leslie\n\tPawnee\n\t4       April       Andy        Donna       Ron         Donna       Jerry       Ann         Ron         Ben         Leslie\n\tPawnee\n\t5       Donna       Ann         Ben         Leslie      Ben         Andy        Donna       April       Ben         Tom\n\tPawnee\n\t6       Tom         Tom         Ben         Ben         Jerry       Tom         Leslie      Ron         Leslie      Donna\n\tPawnee\n\t7       Chris       Donna       Ben         Ann         Ben         Andy        Leslie      Ron         Donna       Ron\n\tPawnee\n\t8       Donna       Andy        Leslie      Tom         Jerry       April       Ron         Ann         Jerry       Ben\n\tPawnee\n\t9       Tom         Andy        Donna       Andy        Chris       Tom         Donna       Ann         Jerry       Ben\n\tPawnee\n\t```\n7. Enter the score at the end of each quarter \n\tInput:\n\t```\n\tsquares_example.payout(7, 28, 1)\n\t```\n\tOutput: \n\t```\n\tThe Q1 winner is Donna with the (7, 8) square. They win $100.0!\n\t```\n\n## FAQ\n\n### What variables can be modified?\n- Number of rows (default = 10)\n- Number of columns (default = 10)\n- Minimum number of squares (default = None)\n- Maximum number of squares (default = None)\n- Team A Name (default = AFC)\n- Team B Name (default = NFC)\n- Cost per squares (default = $5.00)\n- Quarter 1 payout percentage (default = 15%)\n- Halftime payout percentage (default = 30%)\n- Quarter 3 payout percentage (default = 15%)\n- Final score payout percentage (default = 40%)\n\n### Why can't I manually choose squares?\nAccoring to [sportingnews.com](https://www.sportingnews.com/us/nfl/news/super-bowl-squares-grid-2023-best-numbers/ltur0ayv6wvsdkyjjk2cnmdo), the most frequently occuring squares are (0,0), (0, 3), (3, 0), (0, 7), (7, 0), (3, 7) and (7, 3). Squares are assigned randomly to fairly distribute squares with a greater chance of winning.\n\n## Contact\nIf you want to contact me, you can reach me at slpardes@syr.edu.\n\n## License\nThis project uses the following license: MIT License.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/slpardes/super_squares/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "supersquares",
    "package_url": "https://pypi.org/project/supersquares/",
    "platform": null,
    "project_url": "https://pypi.org/project/supersquares/",
    "project_urls": {
      "Homepage": "https://github.com/slpardes/super_squares/"
    },
    "release_url": "https://pypi.org/project/supersquares/0.0.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Create Super Bowl squares",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16799512,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "42dea48386888f77d50cdb8f2dd48ebfd719923e4b5d3cef0918c517cb851eb2",
          "md5": "80df7db0b917e9e12c0636dd10d4d0c4",
          "sha256": "ca399c530054fcb84cd4d8224fabdafccd93cdcfb4240140e4a2af2149185a5c"
        },
        "downloads": -1,
        "filename": "supersquares-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "80df7db0b917e9e12c0636dd10d4d0c4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7158,
        "upload_time": "2023-02-10T20:46:54",
        "upload_time_iso_8601": "2023-02-10T20:46:54.815694Z",
        "url": "https://files.pythonhosted.org/packages/42/de/a48386888f77d50cdb8f2dd48ebfd719923e4b5d3cef0918c517cb851eb2/supersquares-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "53bd4fcbac1e2c99c4ab23b345cba0036043c3584139985841590926fc5487cf",
          "md5": "75990f4dbe92b3006a8a47a9365e6952",
          "sha256": "e547a15698e3eaa0629c70483c8f0803b445ab0bb58df022907e0ce9369cca6b"
        },
        "downloads": -1,
        "filename": "supersquares-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "75990f4dbe92b3006a8a47a9365e6952",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6459,
        "upload_time": "2023-02-10T20:46:56",
        "upload_time_iso_8601": "2023-02-10T20:46:56.268104Z",
        "url": "https://files.pythonhosted.org/packages/53/bd/4fcbac1e2c99c4ab23b345cba0036043c3584139985841590926fc5487cf/supersquares-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "58eb6f5eb00278a00582299ea673f1771dbae4a974e48aba2b94cd07a5c8b844",
          "md5": "7f1769b13999898bb9cb26eeb8e2009a",
          "sha256": "da058a7cabdc9b3ae896683171ba45185c6ea5c48a1a82513bf23ada6e141eef"
        },
        "downloads": -1,
        "filename": "supersquares-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7f1769b13999898bb9cb26eeb8e2009a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7161,
        "upload_time": "2023-02-10T21:36:45",
        "upload_time_iso_8601": "2023-02-10T21:36:45.956491Z",
        "url": "https://files.pythonhosted.org/packages/58/eb/6f5eb00278a00582299ea673f1771dbae4a974e48aba2b94cd07a5c8b844/supersquares-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b2843824615ef588fc758f999b415dce8caf462a93f8ff97564f5b259b226bee",
          "md5": "1b922111543d52b9df1faa48f2b70d4c",
          "sha256": "0787d76f15fad01d07f167e5532a6cc738885f7b84ea5ade398fc40b096d33fb"
        },
        "downloads": -1,
        "filename": "supersquares-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "1b922111543d52b9df1faa48f2b70d4c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6449,
        "upload_time": "2023-02-10T21:36:48",
        "upload_time_iso_8601": "2023-02-10T21:36:48.651480Z",
        "url": "https://files.pythonhosted.org/packages/b2/84/3824615ef588fc758f999b415dce8caf462a93f8ff97564f5b259b226bee/supersquares-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c499a9047bbc7c6503975d017585af90d6a719959720f3745f674ef7b00c3415",
          "md5": "6c106d9d2fb02baa0b80e04473fe5464",
          "sha256": "315fc2394a8fe440166b9fbfc733279c2ee2562084729ff0a2a2a97417b2f7bd"
        },
        "downloads": -1,
        "filename": "supersquares-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6c106d9d2fb02baa0b80e04473fe5464",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7161,
        "upload_time": "2023-02-10T21:47:21",
        "upload_time_iso_8601": "2023-02-10T21:47:21.810698Z",
        "url": "https://files.pythonhosted.org/packages/c4/99/a9047bbc7c6503975d017585af90d6a719959720f3745f674ef7b00c3415/supersquares-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fc0d5c27e3e7dc6d8675e2f2f252fc70c6397d80c61fbf58e5068f36afca3583",
          "md5": "8581b9438da181d658b0f6c33c0a9d43",
          "sha256": "655c132a50c9831325c9294d8dab5847a966db461740877e1f150ce8a6cd49f6"
        },
        "downloads": -1,
        "filename": "supersquares-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "8581b9438da181d658b0f6c33c0a9d43",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6460,
        "upload_time": "2023-02-10T21:47:25",
        "upload_time_iso_8601": "2023-02-10T21:47:25.471040Z",
        "url": "https://files.pythonhosted.org/packages/fc/0d/5c27e3e7dc6d8675e2f2f252fc70c6397d80c61fbf58e5068f36afca3583/supersquares-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c499a9047bbc7c6503975d017585af90d6a719959720f3745f674ef7b00c3415",
        "md5": "6c106d9d2fb02baa0b80e04473fe5464",
        "sha256": "315fc2394a8fe440166b9fbfc733279c2ee2562084729ff0a2a2a97417b2f7bd"
      },
      "downloads": -1,
      "filename": "supersquares-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6c106d9d2fb02baa0b80e04473fe5464",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 7161,
      "upload_time": "2023-02-10T21:47:21",
      "upload_time_iso_8601": "2023-02-10T21:47:21.810698Z",
      "url": "https://files.pythonhosted.org/packages/c4/99/a9047bbc7c6503975d017585af90d6a719959720f3745f674ef7b00c3415/supersquares-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fc0d5c27e3e7dc6d8675e2f2f252fc70c6397d80c61fbf58e5068f36afca3583",
        "md5": "8581b9438da181d658b0f6c33c0a9d43",
        "sha256": "655c132a50c9831325c9294d8dab5847a966db461740877e1f150ce8a6cd49f6"
      },
      "downloads": -1,
      "filename": "supersquares-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "8581b9438da181d658b0f6c33c0a9d43",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6460,
      "upload_time": "2023-02-10T21:47:25",
      "upload_time_iso_8601": "2023-02-10T21:47:25.471040Z",
      "url": "https://files.pythonhosted.org/packages/fc/0d/5c27e3e7dc6d8675e2f2f252fc70c6397d80c61fbf58e5068f36afca3583/supersquares-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}