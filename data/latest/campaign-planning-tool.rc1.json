{
  "info": {
    "author": "Nikola Vasiljevic",
    "author_email": "niva@dtu.dk",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3.7",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "[![DOI](https://zenodo.org/badge/199527963.svg)](https://zenodo.org/badge/latestdoi/199527963)\n# campaign-planning-tool: <br>Python library for planning and configuring scanning lidar measurement campaigns\n## Why campaign-planning-tool?\nPlanning scanning lidar measurement campaigns is not a trivial task. There are many constraints, originating  both from the campaign site as well from the lidar technology, which a campaign planner needs to consider to derive the best possible layout of the campaign. The same can be said for configuring scanning lidars to acquire high-quality measurements.\n\nThese tasks have been typically done ad-hoc and manually, thus requiring lidar expertize. However, since 2018 a work has been put to digitalize these processes, making them simpler for end-users.\n\n[After almost a decade of planning and configuring scanning lidar measurement campaigns](https://zenodo.org/record/1442592), the accumulated experience and knowledge has been converted to **campaign-planning-tool** library, fascilitating the above mentioned tasks. \n\n**You don't need to be a scanning lidar expert anymore to design and configure scanning lidar campaigns!!!**\n<br>That burden has been eliminated now, or at least that's the hope!\n\n## What campaign-planning-tool is capable of doing?\n**campaign-planning-tool** provides users with a set of methods (read functions) that will allow them to:\n* Optimize measurement positions\n* Generate GIS layers which facilitate placement of lidars \n* Optimize and synchronize trajectories for multiple lidars\n* Export results in human and machine readable formats (KML, XML, YAML, etc.)\n* and more ...\n\n...and this is only the beginning ! <br> <br>\nFor more details check out a:\n* [paper that describes the campaign-planning-tool background](https://www.wind-energ-sci-discuss.net/wes-2019-13/)\n* [presentation from the WESC conference in Cork](https://zenodo.org/record/3247797).\n<br>\nWith every new version of the library new functionalities will be aded, and this is where you as a community of users can help!\n\n## How can I get campaign-planning-tool?\nThrough DTU hosted **conda-forge**!<br>\nIf you don't have [Anaconda](https://www.anaconda.com/) or [Miniconda](https://docs.conda.io/en/latest/miniconda.html) installed on your computer you should install either of them first.\n\nAfterwards, copy and execute the following command in the terminal:\n```\nconda create -n CPT -c https://conda.windenergy.dtu.dk/channel/open -c conda-forge --no-channel-priority campaign-planning-tool\n```\nThis will create a new conda enviroment **CPT**, and download and install **campaign-planning-tool** library together with all the dependencies. Feel free to change the name of the environment to whatever name it suites  you (i.e., simply change CPT to something else).\n\nFollowing the installation you need to activate newly made enviroment in the terminal:\n```\nsource activate CPT\n```\nNow start the python editor of your choice, for example **jupyter**:\n```\njupyter-notebook\n```\nOnce in **jupyter** import the CPT class:\n```\nfrom campaign_planning_tool import CPT\n```\nand start using the library (using underscores to call library is not a mistake!).\n\nThe library is fully documented so hit *help* to get a class or class method description:\n```\nhelp(CPT)\nor\nhelp(CPT.set_utm_zone)\n```\n## Examples \nWorking with a new library is always a bit of pain.<br>To get you up with speed download [Jupyter examples](https://github.com/niva83/campaign-planning-tool-examples/archive/master.zip). \n<br>\nSoon the instructional videos will be available as well!\n\n## Issues, Requests, Kudos and Curses\nIf you have issues running campaign-planning-tool or you have requests or by any chance you want to contribute to the further development of the library please post Issues or make Pull requests on Github. \n\n<br>So far Windows user are currently facing an issue running method [export_kml](https://github.com/niva83/campaign-planning-tool/issues/3#issue-490216648).<br>Currently version 0.1.2 is under test which solves the reported issue.\n\n## How to cite campaign-planning-tool \nIf you are using **campaign-planning-tool**, it would be great to cite this repository as well the paper which describes methodology which was used to develop the library: \n```\n*repository*\nNikola Vasiljevic. (2019, August 28). \ncampaign-planning-tool v0.1.3 \nZenodo. http://doi.org/10.5281/zenodo.3462049 \tSep 26, 2019\n\n*paper*\nVasiljević, N., Vignaroli, A., Bechmann, A., and Wagner, R.: \nDigitalization of scanning lidar measurement campaign planning, \nWind Energ. Sci. Discuss., in review, 2019. \n\n```\n\n## Acknowledgement \nWell deserved kudos go to awesome developers of following Python libraries that are an integrating part of **campaign-planning-tool**:\n\n* [whitebox](https://pypi.org/project/whitebox/)\n* [srtm.py](https://github.com/tkrajina/srtm.py)\n* [rasterio](https://https://rasterio.readthedocs.io/)\n* [geopandas](http://geopandas.org/)\n* [numpy](https://www.numpy.org/)\n* [pandas](https://pandas.pydata.org/)\n* [pillow](https://pillow.readthedocs.io/en/stable/)\n* [dicttoxml](https://pypi.org/project/dicttoxml/)\n* [simplekml](https://simplekml.readthedocs.io/en/latest/)\n* [pyyaml](https://pyyaml.org/)\n* [matplotlib](https://matplotlib.org/)\n* [jupyter](https://jupyter.org/)\n* [pylint](https://www.pylint.org/)\n\nas well to the members of [RECAST](http://www.recastproject.dk/project) project: [Andrea Vignaroli](https://www.dtu.dk/english/service/phonebook/person?id=94735&tab=2&qt=dtupublicationquery) (DTU), [Andreas Bechmann](https://www.dtu.dk/english/service/phonebook/person?id=20603&tab=1) (DTU), [Rozenn Wagner](https://www.dtu.dk/english/service/phonebook/person?id=38872&tab=2&qt=dtupublicationquery) (DTU) and [Morten Thøgersen](https://dk.linkedin.com/in/morten-lybech-th%C3%B8gersen-4114746) (EMD) who helped in crafting the methodology, and not to forget [Neil Davis](https://www.dtu.dk/english/service/phonebook/person?id=68826&tab=1) (DTU) who helped making the library available through **conda-forge**.\n\n## License\ncampaign-planning-tool is provided under the [BSD-3-Clause](https://opensource.org/licenses/BSD-3-Clause) license.\n\n\n## Contact\n[Nikola Vasiljević](https://www.dtu.dk/english/service/phonebook/person?id=62218&tab=2&qt=dtupublicationquery), niva@dtu.dk",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/niva83/campaign-planning-tool",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "campaign-planning-tool",
    "package_url": "https://pypi.org/project/campaign-planning-tool/",
    "platform": "",
    "project_url": "https://pypi.org/project/campaign-planning-tool/",
    "project_urls": {
      "Homepage": "https://github.com/niva83/campaign-planning-tool"
    },
    "release_url": "https://pypi.org/project/campaign-planning-tool/0.1.3/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Python library for scanning lidar campaign planning",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 5894599,
  "releases": {
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "07240c0b4f53d4f0055ad091cd1cbdce8509fc1ce1cb4cbb6cdb5c79fc5a9fbe",
          "md5": "c6afefc3006454f027b9271b30be9ff9",
          "sha256": "80115154a1acfb7dea45cf60d20723a7e05bb61f16f9e6e6e51185bca5d4b146"
        },
        "downloads": -1,
        "filename": "campaign-planning-tool-0.1.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c6afefc3006454f027b9271b30be9ff9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 39059,
        "upload_time": "2019-09-27T07:17:44",
        "upload_time_iso_8601": "2019-09-27T07:17:44.210486Z",
        "url": "https://files.pythonhosted.org/packages/07/24/0c0b4f53d4f0055ad091cd1cbdce8509fc1ce1cb4cbb6cdb5c79fc5a9fbe/campaign-planning-tool-0.1.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "07240c0b4f53d4f0055ad091cd1cbdce8509fc1ce1cb4cbb6cdb5c79fc5a9fbe",
        "md5": "c6afefc3006454f027b9271b30be9ff9",
        "sha256": "80115154a1acfb7dea45cf60d20723a7e05bb61f16f9e6e6e51185bca5d4b146"
      },
      "downloads": -1,
      "filename": "campaign-planning-tool-0.1.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "c6afefc3006454f027b9271b30be9ff9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 39059,
      "upload_time": "2019-09-27T07:17:44",
      "upload_time_iso_8601": "2019-09-27T07:17:44.210486Z",
      "url": "https://files.pythonhosted.org/packages/07/24/0c0b4f53d4f0055ad091cd1cbdce8509fc1ce1cb4cbb6cdb5c79fc5a9fbe/campaign-planning-tool-0.1.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}