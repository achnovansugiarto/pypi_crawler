{
  "info": {
    "author": "",
    "author_email": "Numba Developers <none@none.none>",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3"
    ],
    "description": "# numba-rvsdg\n\nNumba compatible RVSDG (Regionalized Value State Dependence Graph)  utilities.\n\n## about\n\nThis repository contains Numba compatible utilities for working with RVSDGs\n(Regionalized Value State Dependency Graphs). RVSDGs are a type of\nIntermediary Representation (IR) suitable for regularizing Python bytecode\nwithin Numba.\n\nThe code in this repository is an implementation of the CFG restructuring\nalgorithms in Bahmann2015, specifically those from section 4.1 and 4.2: namely\n\"loop restructuring\" and \"branch restructuring\". These are interesting for\nNumba because they serve to clearly identify regions withing the Python\nbytecode.\n\n## dependencies\n\n* Python 3.11\n* graphviz\n* pyyaml\n\nAs of 2023-03-06 you can create a conda env using the following:\n\n```\nconda env create -n numba-rvsdg python=3.11 python-graphviz\nconda activate numba-rvsdg\npip install pyyaml\n```\n\nAt the time of writing `pyyaml` was not available for Python 3.11 via\n`defaults` so it had to be installed with `pip`.\n\n## overview\n\nThe following files are included in this repository:\n\n```\nnumba_rvsdg\n├── __init__.py\n├── core\n│   ├── datastructures\n│   │   ├── basic_block.py  # BasicBlock implementation\n│   │   ├── block_map.py    # BlockMap implementation, maps labels to blocks\n│   │   ├── byte_flow.py    # ByteFlow implementation, BlockMap + bytecode\n│   │   ├── flow_info.py    # Converts program to ByteFlow\n│   │   └── labels.py       # Collection of Label classes\n│   ├── transformations.py  # Algorithms\n│   └── utils.py            # Miscellaneous utilities\n├── networkx_vendored\n│   └── scc.py              # Strongly Connected Componets (loop detection)\n├── rendering\n│   └── rendering.py        # Graphivz based rendering of BlockMaps\n├── tests\n│   ├── simulator.py        # Simulator utility for running SCFGs\n│   ├── test_byteflow.py    # Testung ByteFlow and others\n│   ├── test_fig3.py        # Testing fig. 3 from Bahman2015\n│   ├── test_fig4.py        # Testing fig. 4 from Bahman2015\n│   ├── test_simulate.py    # Simulator based testing\n│   └── test_transforms.py  # Testing graph transformations\n└── utils\n```\n\n## example\n\nThe following will process the given example function and display the four\ndifferent stages. \"initial\" is the unprocessed bytecode as produced by\ncpython. \"closed\" is simply the closed variant of the initial CFG. \"loop\nrestructuring\" is the loop-restructured version and \"branch-restructured\" is\nthe final form which includes closing, loop-restructuring and\nbranch-restructuring.\n\n\n```python\n# Example: for loop with branch and early exit\ndef foo(n):\n    c = 0\n    for i in range(n):\n        c += 1\n        if i == 100:\n            break\n    return c\n\nflow = ByteFlow.from_bytecode(foo)\nByteFlowRenderer().render_byteflow(flow).view(\"initial\")\n\ncflow = flow._join_returns()\nByteFlowRenderer().render_byteflow(cflow).view(\"closed\")\n\nlflow = cflow._restructure_loop()\nByteFlowRenderer().render_byteflow(lflow).view(\"loop restructured\")\n\nbflow = lflow._restructure_branch()\nByteFlowRenderer().render_byteflow(bflow).view(\"branch restructured\")\n```\n\n![initial](docs/images/initial.png \"initial\")\n![closed](docs/images/closed.png \"closed\")\n![loop-restructured](docs/images/loop_restructured.png \"loop-restructured\")\n![branch-restructured](docs/images/branch_restructured.png \"branch-restructured\")\n\n## references\n\n* `Reismann2020` -- https://arxiv.org/pdf/1912.05036.pdf -- Describes the concept of RVSDGs\n* `Bahmann2015` -- https://dl.acm.org/doi/pdf/10.1145/2693261 -- Describes the transformation\n  algorithms implemented\n\n## license\n\nCopyright (c) 2022, Anaconda, Inc.\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\nRedistributions of source code must retain the above copyright notice,\nthis list of conditions and the following disclaimer.\n\nRedistributions in binary form must reproduce the above copyright\nnotice, this list of conditions and the following disclaimer in the\ndocumentation and/or other materials provided with the distribution.\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nHOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "numba",
    "license": "BSD-2-Clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "numba-rvsdg",
    "package_url": "https://pypi.org/project/numba-rvsdg/",
    "platform": null,
    "project_url": "https://pypi.org/project/numba-rvsdg/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/numba-rvsdg/0.0.1/",
    "requires_dist": [
      "graphviz",
      "pyyaml"
    ],
    "requires_python": ">=3.11",
    "summary": "Numba Compatible RVSDG utilities",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17494208,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "49dec270ea09898dd5f56aa9a1eaf4cd938ed1bacec262f63d1466337eb57f68",
          "md5": "0af7a3ad372f8f8cda560439eb117c4b",
          "sha256": "6fe03b1498e41f71a5d4427514a614b3a9b8da991115633297400b8dbb40a899"
        },
        "downloads": -1,
        "filename": "numba_rvsdg-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0af7a3ad372f8f8cda560439eb117c4b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.11",
        "size": 4350,
        "upload_time": "2023-03-27T15:20:11",
        "upload_time_iso_8601": "2023-03-27T15:20:11.719911Z",
        "url": "https://files.pythonhosted.org/packages/49/de/c270ea09898dd5f56aa9a1eaf4cd938ed1bacec262f63d1466337eb57f68/numba_rvsdg-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c1e7dbc105158b0b774d694dca08107bcc943e535bedc476e2a1bf20688b8210",
          "md5": "ae6c3d76fd4076849b21730f90d47dba",
          "sha256": "6dbb526173637722ec583c6b25d3cf848a0665ec86fa687370a1e0cd8f7f0695"
        },
        "downloads": -1,
        "filename": "numba_rvsdg-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ae6c3d76fd4076849b21730f90d47dba",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.11",
        "size": 3631,
        "upload_time": "2023-03-27T15:20:15",
        "upload_time_iso_8601": "2023-03-27T15:20:15.171830Z",
        "url": "https://files.pythonhosted.org/packages/c1/e7/dbc105158b0b774d694dca08107bcc943e535bedc476e2a1bf20688b8210/numba_rvsdg-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "49dec270ea09898dd5f56aa9a1eaf4cd938ed1bacec262f63d1466337eb57f68",
        "md5": "0af7a3ad372f8f8cda560439eb117c4b",
        "sha256": "6fe03b1498e41f71a5d4427514a614b3a9b8da991115633297400b8dbb40a899"
      },
      "downloads": -1,
      "filename": "numba_rvsdg-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0af7a3ad372f8f8cda560439eb117c4b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.11",
      "size": 4350,
      "upload_time": "2023-03-27T15:20:11",
      "upload_time_iso_8601": "2023-03-27T15:20:11.719911Z",
      "url": "https://files.pythonhosted.org/packages/49/de/c270ea09898dd5f56aa9a1eaf4cd938ed1bacec262f63d1466337eb57f68/numba_rvsdg-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c1e7dbc105158b0b774d694dca08107bcc943e535bedc476e2a1bf20688b8210",
        "md5": "ae6c3d76fd4076849b21730f90d47dba",
        "sha256": "6dbb526173637722ec583c6b25d3cf848a0665ec86fa687370a1e0cd8f7f0695"
      },
      "downloads": -1,
      "filename": "numba_rvsdg-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "ae6c3d76fd4076849b21730f90d47dba",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.11",
      "size": 3631,
      "upload_time": "2023-03-27T15:20:15",
      "upload_time_iso_8601": "2023-03-27T15:20:15.171830Z",
      "url": "https://files.pythonhosted.org/packages/c1/e7/dbc105158b0b774d694dca08107bcc943e535bedc476e2a1bf20688b8210/numba_rvsdg-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}