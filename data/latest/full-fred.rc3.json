{
  "info": {
    "author": "Zachary A. Kraehling",
    "author_email": "zaknyy@protonmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Intended Audience :: Financial and Insurance Industry",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "\n[![Build Status](https://travis-ci.com/7astro7/full_fred.svg?branch=master)](https://travis-ci.com/7astro7/full_fred)\n\n# full_fred\n`full_fred` is a Python interface to \n[FRED (Federal Reserve Economic Data)](https://fred.stlouisfed.org/) that\nprioritizes user preference, flexibility, and speed. `full_fred`'s API translates to Python\n[every type of request FRED supports](https://fred.stlouisfed.org/docs/api/fred/):\neach query for Categories, Releases, Series, Sources, and Tags \nfound within FRED's web service has a method associated with it in `full_fred`.\n`full_fred` minimizes redundant queries for the sake of users and FRED's servers. \nAfter a request for data is made to FRED web service the retrieved data \nis stored in a dictionary, accessible and fungible\n\n## Installation\n    pip install full-fred\n\n## Testing\n```full_fred``` requires ```pytest```. Tests can be run with ```FRED_API_KEY``` environment variable set and:\n\n```python\npytest\n```\n\n## Usage\n\n### API Key \nQueries to FRED web service require an API key. FRED has [free API keys available with an account (also free)](https://research.stlouisfed.org/useraccount/apikey)\n\nYou can tell ```full_fred``` about an api key in 2 secure ways:\n1. fred.api_key_file can be set by passing it to the constructor\n```python\nIn [4]: from full_fred.fred import Fred\n\nIn [5]: fred = Fred('example_key.txt')\n\nIn [6]: fred.get_api_key_file()\nOut[6]: 'example_key.txt'\n```\nThis will set it too\n```python\nIn [3]: fred.set_api_key_file('example_key.txt')\nOut[3]: True\n```\nIf the file assigned to ```api_key_file``` can't be found, ```full_fred``` will say so immediately if api_key_file is set using \nthe surefire ```fred.set_api_key_file()```  \n\n2. FRED_API_KEY Environment Variable\n\n```full_fred``` will automatically detect your api key if it's assigned to an environment variable named ```FRED_API_KEY```.\nTo check that FRED_API_KEY environment variable is detected, you can use \n\n```python\nIn [7]: fred.env_api_key_found()\nOut[7]: True\n```\n\n```full_fred``` does not store your api key in an attribute for the sake of security: to send queries to FRED's databases, ```full_fred``` uses the value of \nFRED_API_KEY environment variable or the first line of fred.api_key_file\n\n### Fetching data\n\nA pandas DataFrame stores observations when a request for data values is made\n\n```python\nfred.get_series_df('GDPPOT')\n    realtime_start realtime_end        date               value\n0       2021-04-03   2021-04-03  1949-01-01         2103.179936\n1       2021-04-03   2021-04-03  1949-04-01  2130.7327210000003\n2       2021-04-03   2021-04-03  1949-07-01  2159.4478710000003\n3       2021-04-03   2021-04-03  1949-10-01         2186.907265\n4       2021-04-03   2021-04-03  1950-01-01          2216.07306\n..             ...          ...         ...                 ...\n327     2021-04-03   2021-04-03  2030-10-01            23219.35\n328     2021-04-03   2021-04-03  2031-01-01            23318.31\n329     2021-04-03   2021-04-03  2031-04-01            23417.38\n330     2021-04-03   2021-04-03  2031-07-01            23516.38\n331     2021-04-03   2021-04-03  2031-10-01            23615.28\n\n[332 rows x 4 columns]\n```\nThe fetched data is stored in fred.series_stack (see __Accessing fetched data__ section for more on retrieving queried data)\n\n```python\nfred.series_stack['get_series_df']\n{'realtime_start': '2021-04-03',\n 'realtime_end': '2021-04-03',\n 'observation_start': '1600-01-01',\n 'observation_end': '9999-12-31',\n 'units': 'lin',\n 'output_type': 1,\n 'file_type': 'json',\n 'order_by': 'observation_date',\n 'sort_order': 'asc',\n 'count': 332,\n 'offset': 0,\n 'limit': 100000,\n 'series_id': 'GDPPOT',\n 'df':     \nrealtime_start      realtime_end        date               value\n 0       2021-04-03   2021-04-03  1949-01-01         2103.179936\n 1       2021-04-03   2021-04-03  1949-04-01  2130.7327210000003\n 2       2021-04-03   2021-04-03  1949-07-01  2159.4478710000003\n 3       2021-04-03   2021-04-03  1949-10-01         2186.907265\n 4       2021-04-03   2021-04-03  1950-01-01          2216.07306\n ..             ...          ...         ...                 ...\n 327     2021-04-03   2021-04-03  2030-10-01            23219.35\n 328     2021-04-03   2021-04-03  2031-01-01            23318.31\n 329     2021-04-03   2021-04-03  2031-04-01            23417.38\n 330     2021-04-03   2021-04-03  2031-07-01            23516.38\n 331     2021-04-03   2021-04-03  2031-10-01            23615.28\n \n [332 rows x 4 columns]}\n```\n\n\nTo find a specific category_id or to search FRED categories from\nmost general to most specific start with the root category 0. \nA search along the lines of the following can help to pinpoint different \ncategory_ids:\n\n```python\nIn [4]: fred.get_child_categories(0)\nOut[4]: \n{'categories': [{'id': 32991,\n   'name': 'Money, Banking, & Finance',\n   'parent_id': 0},\n  {'id': 10,\n   'name': 'Population, Employment, & Labor Markets',\n   'parent_id': 0},\n  {'id': 32992, 'name': 'National Accounts', 'parent_id': 0},\n  {'id': 1, 'name': 'Production & Business Activity', 'parent_id': 0},\n  {'id': 32455, 'name': 'Prices', 'parent_id': 0},\n  {'id': 32263, 'name': 'International Data', 'parent_id': 0},\n  {'id': 32213, 'name': 'Greenbook Projections', 'parent_id': 0},\n  {'id': 3008, 'name': 'U.S. Regional Data', 'parent_id': 0},\n  {'id': 33060, 'name': 'Academic Data', 'parent_id': 0}]}\n\nIn [5]: fred.category_stack['get_child_categories']\nOut[5]: \n{'categories': [{'id': 32991,\n   'name': 'Money, Banking, & Finance',\n   'parent_id': 0},\n  {'id': 10,\n   'name': 'Population, Employment, & Labor Markets',\n   'parent_id': 0},\n  {'id': 32992, 'name': 'National Accounts', 'parent_id': 0},\n  {'id': 1, 'name': 'Production & Business Activity', 'parent_id': 0},\n  {'id': 32455, 'name': 'Prices', 'parent_id': 0},\n  {'id': 32263, 'name': 'International Data', 'parent_id': 0},\n  {'id': 32213, 'name': 'Greenbook Projections', 'parent_id': 0},\n  {'id': 3008, 'name': 'U.S. Regional Data', 'parent_id': 0},\n  {'id': 33060, 'name': 'Academic Data', 'parent_id': 0}]}\n```\n\nThe [whole gamut of requests on FRED web service](https://fred.stlouisfed.org/docs/api/fred/) is implemented. The example below \nis one among many other methods in the API, listed in the next section\n\n```python\nIn [1]: from full_fred.fred import Fred\n\nIn [2]: fred = Fred()\n\nIn [3]: fred.get_series_vintagedates('FYFSD', limit = 15)\nOut[3]: \n{'realtime_start': '1776-07-04',\n 'realtime_end': '9999-12-31',\n 'order_by': 'vintage_date',\n 'sort_order': 'asc',\n 'count': 46,\n 'offset': 0,\n 'limit': 15,\n 'vintage_dates': [\n    '1998-02-02',\n    '1998-10-26',\n    '1999-02-01',\n    '1999-10-25',\n    '2000-02-07',\n    '2000-10-20',\n    '2001-04-09',\n    '2001-10-24',\n    '2002-02-04',\n    '2002-10-23',\n    '2003-02-03',\n    '2003-10-15',\n    '2004-02-02',\n    '2004-10-12',\n    '2005-02-23']}\n\nIn [4]: fred.series_stack['get_series_vintagedates']\nOut[4]: \n{'realtime_start': '1776-07-04',\n 'realtime_end': '9999-12-31',\n 'order_by': 'vintage_date',\n 'sort_order': 'asc',\n 'count': 46,\n 'offset': 0,\n 'limit': 15,\n 'vintage_dates': [\n    '1998-02-02',\n    '1998-10-26',\n    '1999-02-01',\n    '1999-10-25',\n    '2000-02-07',\n    '2000-10-20',\n    '2001-04-09',\n    '2001-10-24',\n    '2002-02-04',\n    '2002-10-23',\n    '2003-02-03',\n    '2003-10-15',\n    '2004-02-02',\n    '2004-10-12',\n    '2005-02-23']}\n```\n\n### Accessing fetched data\n\nThere are 5 stacks: \n\n```fred.category_stack```\n```fred.release_stack```\n```fred.series_stack```\n```fred.source_stack```\n```fred.tag_stack```\n\nAfter a method is called the returned data is stored using the method name for its key\n\nMethods that store data in category stack:\n```python\nfred.category_stack[\"get_a_category\"]\nfred.category_stack[\"get_child_categories\"]\nfred.category_stack[\"get_related_categories\"]\nfred.category_stack[\"get_series_in_a_category\"]\nfred.category_stack[\"get_tags_for_a_category\"]\nfred.category_stack[\"get_related_tags_for_a_category\"]\n```\n\nMethods that store data in release stack:\n```python\nfred.release_stack[\"get_a_release\"]\nfred.release_stack[\"get_tags_for_a_release\"]\nfred.release_stack[\"get_series_on_a_release\"]\nfred.release_stack[\"get_sources_for_a_release\"]\nfred.release_stack[\"get_related_tags_for_release\"]\nfred.release_stack[\"get_release_dates_all_releases\"]\nfred.release_stack[\"get_release_tables\"]\nfred.release_stack[\"get_release_dates\"]\nfred.release_stack[\"get_all_releases\"]\n```\n\nMethods that store data in series stack:\n```python\nfred.series_stack[\"get_a_series\"]\nfred.series_stack[\"get_categories_of_series\"]\nfred.series_stack[\"get_series_df\"]\nfred.series_stack[\"get_release_for_a_series\"]\nfred.series_stack[\"search_for_series\"]\nfred.series_stack[\"get_tags_for_series_search\"]\nfred.series_stack[\"get_related_tags_for_series_search\"]\nfred.series_stack[\"get_tags_for_a_series\"]\nfred.series_stack[\"get_series_updates\"]\nfred.series_stack[\"get_series_vintagedates\"]\n```\n\nMethods that store data in source stack:\n```python\nfred.source_stack[\"get_all_sources\"]\nfred.source_stack[\"get_releases_for_a_source\"]\nfred.source_stack[\"get_a_source\"]\n```\n\nMethods that store data in tag stack:\n```python\nfred.tag_stack[\"get_all_tags\"]\nfred.tag_stack[\"get_related_tags_for_a_tag\"]\nfred.tag_stack[\"get_series_matching_tags\"]\n```\n\n### full_fred realtime period and observation start/end defaults\nBy default ```fred.realtime_start``` and ```fred.realtime_end``` are set to None. \nrealtime_start and realtime_end arguments override ```fred.realtime_start``` and ```fred.realtime_end```.\n\n```fred.observation_start``` and ```fred.observation_end``` are also None by default. \nobservation_start and observation_end arguments override ```fred.observation_start``` and ```fred.observation_end```.\n\n## Contributing\nThe ```full_fred``` project welcomes feature requests, bug reports, bug fixes, documentation improvements, contributions of all kinds.\n```full_fred``` aims to be responsive in integrating patches and listening to your feedback to be a community-driven API.\nThis project is also new and while ```full_fred``` is still young there's great opportunity to contribute elements that may have disproportionate\nimpact in the long run\n\n## License\nGPLv3\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/7astro7/full_fred",
    "keywords": "economics,API,econ,fred,financial,FRED",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "full-fred",
    "package_url": "https://pypi.org/project/full-fred/",
    "platform": "Any",
    "project_url": "https://pypi.org/project/full-fred/",
    "project_urls": {
      "Homepage": "https://github.com/7astro7/full_fred",
      "Source": "https://github.com/7astro7/full_fred",
      "Tracker": "https://github.com/7astro7/full_fred/issues"
    },
    "release_url": "https://pypi.org/project/full-fred/0.0.9a3/",
    "requires_dist": [
      "pandas",
      "requests"
    ],
    "requires_python": "",
    "summary": "Full interface to Federal Reserve Economic Data (FRED)",
    "version": "0.0.9a3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10880657,
  "releases": {
    "0.0.9a1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "60100a9e3d6504a112b742db0e2a0eb9066555e5766297e5d04c054baa3d6a46",
          "md5": "09f4d11b5b0e9c810081bfc9e41e5e2d",
          "sha256": "c04d737985f80e395e902e38f83485c1fb17b3decedc6ec8d9644ce0041ce87b"
        },
        "downloads": -1,
        "filename": "full_fred-0.0.9a1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "09f4d11b5b0e9c810081bfc9e41e5e2d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 46838,
        "upload_time": "2021-04-11T05:36:35",
        "upload_time_iso_8601": "2021-04-11T05:36:35.745479Z",
        "url": "https://files.pythonhosted.org/packages/60/10/0a9e3d6504a112b742db0e2a0eb9066555e5766297e5d04c054baa3d6a46/full_fred-0.0.9a1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "baa032f238dc199854684365785c1d7f9f6301b356cc9e2fb3212c4fd429633f",
          "md5": "5d8cda17e02c5303ea437730c1e085ef",
          "sha256": "9227b17fd73af0191cb0302a830b2f413129ce9d6adaabce1a8b94a5fc9cc36c"
        },
        "downloads": -1,
        "filename": "full_fred-0.0.9a1.tar.gz",
        "has_sig": false,
        "md5_digest": "5d8cda17e02c5303ea437730c1e085ef",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 41980,
        "upload_time": "2021-04-11T05:36:37",
        "upload_time_iso_8601": "2021-04-11T05:36:37.582655Z",
        "url": "https://files.pythonhosted.org/packages/ba/a0/32f238dc199854684365785c1d7f9f6301b356cc9e2fb3212c4fd429633f/full_fred-0.0.9a1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.9a2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c172cebff8149a938b6d188563c5a89579f72551d38dfe8bdc7f949f5d84af7e",
          "md5": "e54e88853835b65d86f715caac6dc6d1",
          "sha256": "134e9fc8a75c5a02b6b028b860304d5c7ef99895081be4565f356e107b10faeb"
        },
        "downloads": -1,
        "filename": "full_fred-0.0.9a2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e54e88853835b65d86f715caac6dc6d1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 47525,
        "upload_time": "2021-05-11T07:31:09",
        "upload_time_iso_8601": "2021-05-11T07:31:09.211563Z",
        "url": "https://files.pythonhosted.org/packages/c1/72/cebff8149a938b6d188563c5a89579f72551d38dfe8bdc7f949f5d84af7e/full_fred-0.0.9a2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a7920956c2501ac43e0c0482a9f04510caeadd189e926e7dd95814e95ba5cc6a",
          "md5": "7f42835c9ccd554c9bfd8ff84e595cb4",
          "sha256": "22304c72095efa06e17761decdc47f2ad62919decb0186c7ae99b358efb73210"
        },
        "downloads": -1,
        "filename": "full_fred-0.0.9a2.tar.gz",
        "has_sig": false,
        "md5_digest": "7f42835c9ccd554c9bfd8ff84e595cb4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 42583,
        "upload_time": "2021-05-11T07:31:11",
        "upload_time_iso_8601": "2021-05-11T07:31:11.121567Z",
        "url": "https://files.pythonhosted.org/packages/a7/92/0956c2501ac43e0c0482a9f04510caeadd189e926e7dd95814e95ba5cc6a/full_fred-0.0.9a2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.9a3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7de1d80031e02dbeb5a322c51592e68a8d0ed0d6a4639652cb52c0084979d23d",
          "md5": "54a2a45ad027bfa5845905328ff41c40",
          "sha256": "4af1ce4d3754b1a70e9a9bb821a4db7f073dd0cbb8bfc23507d2fcdf9bd55286"
        },
        "downloads": -1,
        "filename": "full_fred-0.0.9a3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "54a2a45ad027bfa5845905328ff41c40",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 47649,
        "upload_time": "2021-07-12T00:15:12",
        "upload_time_iso_8601": "2021-07-12T00:15:12.328792Z",
        "url": "https://files.pythonhosted.org/packages/7d/e1/d80031e02dbeb5a322c51592e68a8d0ed0d6a4639652cb52c0084979d23d/full_fred-0.0.9a3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6e26a379da45f510b5a6c0d70afbd561d6b2ec9efaf6e99b1a84523b4de6c7b4",
          "md5": "6d6bd8bd86093dbca4c41674bf745aa3",
          "sha256": "f6fd4973b65dbf9f1494378a4302ddd365023601ab3e94fd5eef265f286f8951"
        },
        "downloads": -1,
        "filename": "full_fred-0.0.9a3.tar.gz",
        "has_sig": false,
        "md5_digest": "6d6bd8bd86093dbca4c41674bf745aa3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 41795,
        "upload_time": "2021-07-12T00:15:14",
        "upload_time_iso_8601": "2021-07-12T00:15:14.484006Z",
        "url": "https://files.pythonhosted.org/packages/6e/26/a379da45f510b5a6c0d70afbd561d6b2ec9efaf6e99b1a84523b4de6c7b4/full_fred-0.0.9a3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7de1d80031e02dbeb5a322c51592e68a8d0ed0d6a4639652cb52c0084979d23d",
        "md5": "54a2a45ad027bfa5845905328ff41c40",
        "sha256": "4af1ce4d3754b1a70e9a9bb821a4db7f073dd0cbb8bfc23507d2fcdf9bd55286"
      },
      "downloads": -1,
      "filename": "full_fred-0.0.9a3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "54a2a45ad027bfa5845905328ff41c40",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 47649,
      "upload_time": "2021-07-12T00:15:12",
      "upload_time_iso_8601": "2021-07-12T00:15:12.328792Z",
      "url": "https://files.pythonhosted.org/packages/7d/e1/d80031e02dbeb5a322c51592e68a8d0ed0d6a4639652cb52c0084979d23d/full_fred-0.0.9a3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6e26a379da45f510b5a6c0d70afbd561d6b2ec9efaf6e99b1a84523b4de6c7b4",
        "md5": "6d6bd8bd86093dbca4c41674bf745aa3",
        "sha256": "f6fd4973b65dbf9f1494378a4302ddd365023601ab3e94fd5eef265f286f8951"
      },
      "downloads": -1,
      "filename": "full_fred-0.0.9a3.tar.gz",
      "has_sig": false,
      "md5_digest": "6d6bd8bd86093dbca4c41674bf745aa3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 41795,
      "upload_time": "2021-07-12T00:15:14",
      "upload_time_iso_8601": "2021-07-12T00:15:14.484006Z",
      "url": "https://files.pythonhosted.org/packages/6e/26/a379da45f510b5a6c0d70afbd561d6b2ec9efaf6e99b1a84523b4de6c7b4/full_fred-0.0.9a3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}