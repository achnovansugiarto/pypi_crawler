{
  "info": {
    "author": "Marc Wouts",
    "author_email": "marc.wouts@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Framework :: Jupyter",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# World Trade Statistics (WITS) API in Python\n\n[![Build Status](https://travis-ci.com/mwouts/world_trade_data.svg?branch=master)](https://travis-ci.com/mwouts/world_trade_data)\n[![codecov.io](https://codecov.io/github/mwouts/world_trade_data/coverage.svg?branch=master)](https://codecov.io/github/mwouts/world_trade_data?branch=master)\n[![Language grade: Python](https://img.shields.io/badge/lgtm-A+-brightgreen.svg)](https://lgtm.com/projects/g/mwouts/world_trade_data/context:python)\n[![Pypi](https://img.shields.io/pypi/v/world_trade_data.svg)](https://pypi.python.org/pypi/world_trade_data)\n[![pyversions](https://img.shields.io/pypi/pyversions/world_trade_data.svg)](https://pypi.python.org/pypi/world_trade_data)\n[![Jupyter Notebook](https://img.shields.io/badge/Binder-Notebook-blue.svg)](\n    https://mybinder.org/v2/gh/mwouts/world_trade_data/master?filepath=README.md)\n[![GitHub.io](https://img.shields.io/badge/GitHub-HTML-blue.svg)](https://mwouts.github.io/world_trade_data)\n<a class=\"github-button\" href=\"https://github.com/mwouts/world_trade_data\" data-icon=\"octicon-star\" data-show-count=\"true\" aria-label=\"Star mwouts/world_trade_data on GitHub\">Star</a>\n\nThis package is an implementation of the [World Integrated Trade Solution API](https://wits.worldbank.org/witsapiintro.aspx).\nUse this package to explore the [Trade and Tariff Data](https://wits.worldbank.org/) published by the [World Bank](https://www.worldbank.org/).\n\nThis python package itself is licenced under the MIT License. Different Terms and Conditions apply to the WITS data itself, please read the [Frequently Asked Questions](https://wits.worldbank.org/faqs.html) on the WITS website.\n\n# Quick tutorial\n\n## Installation\n\nInstall or update the _World Trade Data_ python package with\n\n```\npip install world_trade_data --upgrade\n```\n\n## Get the list of countries, products, indicators\n\nSee the outputs of the commands below on [GitHub](https://mwouts.github.io/world_trade_data/). Or even, open this `README.md` as a notebook and run it interactively on [Binder](https://mybinder.org/v2/gh/mwouts/world_trade_data/master?filepath=README.md)!\n\n```python\nimport pandas as pd\nimport world_trade_data as wits\npd.set_option('display.max_rows', 6)\n```\n\n```python\nwits.get_countries()\n```\n\n```python\nwits.get_products()\n```\n\n```python\nwits.get_indicators()\n```\n\nAll these methods accept a `datasource` argument, which can be any of\n```python\nwits.DATASOURCES\n```\n\nThe nomenclature, and data availability, are accessible with `get_nomenclatures()` and `get_dataavailability()`.\n\n## Get the Trade or Tariff data\n\nIndicators are available with `get_indicator`. Tariff rates can be loaded with `get_tariff_reported` and `get_tariff_estimated`.\n\n## Working with codes rather than with category names\n\nThe three functions above accept a `name_or_id` argument that defaults to `'name'`. Use `name_or_id='id'` to \nget codes rather than full description for products and countries:\n\n```python\nwits.get_indicator('MPRT-TRD-VL', reporter='usa', year='2017', name_or_id='id')\n```\n\n## Sample use case\n\nIn the below we show how to collect and plot the Import and Export data for the USA in 2017.\n\n![](https://raw.githubusercontent.com/mwouts/world_trade_data/master/examples/usa_2017.png)\n\nTo begin with, we request the values for the corresponding import and exports. Here, we use the default value for `partner='wld'`, and the default value for `product='all'`.\n\n```python\nusa_imports_2017 = wits.get_indicator('MPRT-TRD-VL', reporter='usa', year='2017')\nusa_exports_2017 = wits.get_indicator('XPRT-TRD-VL', reporter='usa', year='2017')\n```\n\n```python\nusa_imports_2017\n```\n\nNow we remove the first levels of the index\n\n```python\nusa_imports_2017 = usa_imports_2017.loc['Annual'].loc['United States'].loc['World']\nusa_exports_2017 = usa_exports_2017.loc['Annual'].loc['United States'].loc['World']\n```\n\nNote that one line in the table gives the value for imports on all products:\n\n```python\nusa_imports_2017.loc['All Products']\n```\n\nIn order to avoid double counting, we only look at sectors:\n\n```python\nproducts = wits.get_products()\nsectors = products.loc[(products.grouptype=='Sector') & (products.index!='Total')].productdescription.values\nsectors\n```\n\nand make sure that we reproduce well the total:\n\n```python\nassert pd.np.isclose(usa_imports_2017.loc[sectors].Value.sum(), usa_imports_2017.loc['All Products'].Value)\n```\n\nFinally we represent the data using e.g. [Plotly's Pie Charts](https://plot.ly/python/pie-charts/)\n\n```python\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\n\nimports_musd = usa_imports_2017.loc[sectors].Value / 1e3\nexports_musd = usa_exports_2017.loc[sectors].Value / 1e3\n\nfig = make_subplots(rows=1, cols=2, specs=[[{'type':'domain'}, {'type':'domain'}]])\nfig.add_trace(go.Pie(labels=sectors, values=imports_musd, name=\"Imports\"), 1, 1)\nfig.add_trace(go.Pie(labels=sectors, values=exports_musd, name=\"Exports\"), 1, 2)\n\nfig.update_traces(hole=.4, \n                  scalegroup='usa',\n                  textinfo='label',\n                  hovertemplate = \"%{label}<br>%{value:,.0f}M$<br>%{percent}\")\n\nfig.update_layout(\n    title_text=\"Trade Statistics, USA, 2017\",\n    annotations=[dict(text='Imports<br>{:.3f}T$'.format(imports_musd.sum()/1e6),\n                      x=0.17, y=0.5, font_size=16, showarrow=False),\n                 dict(text='Exports<br>{:.3f}T$'.format(exports_musd.sum()/1e6),\n                      x=0.83, y=0.5, font_size=16, showarrow=False)])\nfig.show(renderer='notebook_connected')\n```\n\n# References & Alternatives\n\n- The official [WITS portal](https://wits.worldbank.org/) let you visualize and download trade and tariff data. And the API implemented in this package is documented [here](https://wits.worldbank.org/witsapiintro.aspx).\n- The WITS data can be accessed in R with the [tradestatistics](https://tradestatistics.io/) library.\n- An alternative way to access the WITS data is to use [pandasdmx](https://pandasdmx.readthedocs.io/).\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mwouts/world_trade_data",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "world-trade-data",
    "package_url": "https://pypi.org/project/world-trade-data/",
    "platform": null,
    "project_url": "https://pypi.org/project/world-trade-data/",
    "project_urls": {
      "Homepage": "https://github.com/mwouts/world_trade_data"
    },
    "release_url": "https://pypi.org/project/world-trade-data/0.1.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "World Integrated Trade Solution (WITS) API in Python",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14768178,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "65068dd602728a33cb95a07849fb11adaa8127692552a2271402a522b46ef67d",
          "md5": "76559cb0ed2435ef86e621a5677ae0b5",
          "sha256": "1d74fb4b45b985e2a38cb091960ceb5fb03e82650ff6c429395c5deb5ee07d43"
        },
        "downloads": -1,
        "filename": "world_trade_data-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "76559cb0ed2435ef86e621a5677ae0b5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9177,
        "upload_time": "2019-11-24T23:15:32",
        "upload_time_iso_8601": "2019-11-24T23:15:32.980898Z",
        "url": "https://files.pythonhosted.org/packages/65/06/8dd602728a33cb95a07849fb11adaa8127692552a2271402a522b46ef67d/world_trade_data-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "42542bbf7611164f6704dd94d34835cd31dcbfbe37ac1ce10e7e51bcf5741728",
          "md5": "7c2908cc526823a3dae01df3cf77ba5b",
          "sha256": "ac7aa1065171db5a6d0cf1d7e222aaec13769215968833684709813d09153daa"
        },
        "downloads": -1,
        "filename": "world_trade_data-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7c2908cc526823a3dae01df3cf77ba5b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11043,
        "upload_time": "2022-08-15T19:04:27",
        "upload_time_iso_8601": "2022-08-15T19:04:27.160383Z",
        "url": "https://files.pythonhosted.org/packages/42/54/2bbf7611164f6704dd94d34835cd31dcbfbe37ac1ce10e7e51bcf5741728/world_trade_data-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "42542bbf7611164f6704dd94d34835cd31dcbfbe37ac1ce10e7e51bcf5741728",
        "md5": "7c2908cc526823a3dae01df3cf77ba5b",
        "sha256": "ac7aa1065171db5a6d0cf1d7e222aaec13769215968833684709813d09153daa"
      },
      "downloads": -1,
      "filename": "world_trade_data-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "7c2908cc526823a3dae01df3cf77ba5b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11043,
      "upload_time": "2022-08-15T19:04:27",
      "upload_time_iso_8601": "2022-08-15T19:04:27.160383Z",
      "url": "https://files.pythonhosted.org/packages/42/54/2bbf7611164f6704dd94d34835cd31dcbfbe37ac1ce10e7e51bcf5741728/world_trade_data-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}