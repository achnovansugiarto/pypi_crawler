{
  "info": {
    "author": "Morten Brekkevold",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# Argus API Client\n\nThis is the official Python client library for the \n[Argus](https://github.com/Uninett/Argus) API server.\n\nThe Argus server is an incident registry, capable of aggregating alerts from \nmultiple source systems. Argus also can send event notifications (via e-mail,\nSMS, etc.) when incidents are created or resolved.\n\n## Usage examples\n\nThe pyargus library models [the official API endoints of\nArgus](https://argus-server.readthedocs.io/en/latest/api.html) as methods on an\nAPI client object.\n\nAt the moment, only the methods and models needed to interact with\nincident-related endpoints are supported.\n\nThe `Client` class is found in `pyargus.client`, and the various supported data\nmodels, such as `Incident`, `Event`, `Acknowledgement` and `SourceSystem`, are\nimplemented in `pyargus.models.\n\n### Listing open incidents that have not been acknowledged\n\n```pycon\n>>> from pyargus.client import Client\n>>> c = Client(api_root_url=\"https://argus.example.org/api/v1\", token=\"foobar\")\n>>> for incident in c.get_incidents(open=True, acked=False):\n...    print(incident)\n...\nIncident(pk=4, start_time=datetime.datetime(2021, 4, 4, 16, 37, 43, 293726, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200), '+02:00')), end_time=datetime.datetime(9999, 12, 31, 23, 59, 59, 999999), source=SourceSystem(pk=2, name='testnav', type='nav', user=3, base_url='http://localhost/'), source_incident_id='202430', details_url='http://localhost/search/event/202430', description='uninett-gsw2 BGP session with 158.38.3.112 is DOWN', level=5, ticket_url='', tags={'location': 'Teknobyen Innovasjonssenter', 'kundetjeneste': 'Nett_CNaaS', 'kunde': 'example.org', 'event_type': 'bgpState', 'alert_type': 'bgpDown', 'room': '100', 'organization': 'uninett.srv', 'host': 'uninett-gsw2.uninett.no'}, stateful=True, open=True, acked=False)\nIncident(pk=3, start_time=datetime.datetime(2021, 4, 4, 16, 32, 53, 128780, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200), '+02:00')), end_time=datetime.datetime(9999, 12, 31, 23, 59, 59, 999999), source=SourceSystem(pk=2, name='testnav', type='nav', user=3, base_url='http://localhost/'), source_incident_id='202429', details_url='http://localhost/search/event/202429', description='uninett-gsw1 BGP session with 158.38.3.112 is DOWN', level=5, ticket_url='', tags={'location': 'Teknobyen Innovasjonssenter', 'kundetjeneste': 'Nett_CNaaS', 'kunde': 'example.org', 'event_type': 'bgpState', 'alert_type': 'bgpDown', 'host': 'uninett-gsw1.uninett.no', 'room': '100', 'organization': 'uninett.srv'}, stateful=True, open=True, acked=False)\nIncident(pk=2, start_time=datetime.datetime(2017, 8, 31, 14, 58, 31, 118794, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200), '+02:00')), end_time=datetime.datetime(9999, 12, 31, 23, 59, 59, 999999), source=SourceSystem(pk=2, name='testnav', type='nav', user=3, base_url='http://localhost/'), source_incident_id='184296', details_url='http://localhost/search/event/184296', description='Link DOWN on Gi0/3 at oldsmobile.lab (Simple is better than complex)', level=5, ticket_url='', tags={'room': '113', 'location': 'Teknobyen Innovasjonssenter', 'organization': 'uninett.testlab', 'kundetjeneste': 'Nett_CNaaS', 'kunde': 'example.org', 'event_type': 'linkState', 'alert_type': 'linkDown', 'host': 'oldsmobile.lab.uninett.no', 'interface': 'Gi0/3'}, stateful=True, open=True, acked=False)\n```\n\nAs you can see, the arguments given to `get_incidents()` are translated\nverbatim into the arguments supported by the `/incidents` endpoint in the API.\n\n### List only \"my\" incidents\n\nThe incidents API also has an `/incidents/mine` endpoint, which works just like\nthe `/incidents` endpoint, but searches onl only the incidents that were posted\nby the connecting user. This is useful for glue services, when they need to\ncompare the list of open Argus incidents it has produced with the current list\nof active alerts in its source system.\n\nExample:\n\n```pycon\n>>> from pyargus.client import Client\n>>> c = Client(api_root_url=\"https://argus.example.org/api/v1\", token=\"foobar\")\n>>> for incident in c.get_my_incidents(open=True, acked=False):\n...    print(incident)\n...\nIncident(pk=3, start_time=datetime.datetime(2021, 4, 4, 16, 32, 53, 128780, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200), '+02:00')), end_time=datetime.datetime(9999, 12, 31, 23, 59, 59, 999999), source=SourceSystem(pk=3, name='foobar, type='nav', user=4, base_url='http://localhost/'), source_incident_id='2716057', details_url='http://localhost/search/event/2716057', description='uninett-gsw1 BGP session with 158.38.3.112 is DOWN', level=5, ticket_url='', tags={'location': 'Teknobyen Innovasjonssenter', 'kundetjeneste': 'Nett_CNaaS', 'kunde': 'example.org', 'event_type': 'bgpState', 'alert_type': 'bgpDown', 'host': 'uninett-gsw1.uninett.no', 'room': '100', 'organization': 'uninett.srv'}, stateful=True, open=True, acked=False)\n```\n\n### Post a new incident\n\n```pycon\n>>> from pyargus.client import Client\n>>> from pyargus.models import Incident\n>>> from datetime import datetime\n>>> c = Client(api_root_url=\"https://argus.example.org/api/v1\", token=\"foobar\")\n>>> i = Incident(\n...     description=\"The earth was demolished to make way for a hyperspace bypass\", \n...     start_time=datetime.now(),\n...     tags={\n...         \"host\": \"earth.example.org\",\n...     }\n... )\n>>> c.post_incident(i)\nIncident(pk=8, start_time=datetime.datetime(2021, 4, 22, 11, 41, 53, 580947, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200), '+02:00')), end_time=None, source=SourceSystem(pk=2, name='testnav', type='nav', user=3, base_url='http://localhost/'), source_incident_id='', details_url='', description='The earth was demolished to make way for a hyperspace bypass', level=5, ticket_url='', tags={'host': 'earth.example.org'}, stateful=False, open=False, acked=False)\n```\n\nThe `post_incident()` method returns the full `Incident` record, as stored in\nArgus. If you need it, you can get the incident ID from the the primary key\nattribute `pk`, in case you need to address it directly later.\n\n### Close an existing incident\n\nIncidents are closed by posting a *END* type event to an incident's event\nlog, with an optional timestamp. The `Client` class provides the follow\nconvenience method for this operation:\n\n```pycon\n>>> from pyargus.client import Client\n>>> from datetime import datetime\n>>> c = Client(api_root_url=\"https://argus.example.org/api/v1\", token=\"foobar\")\n>>> c.resolve_incident(incident=8, description=\"The demolition was cancelled\", timestamp=datetime.now())\nEvent(pk=10, actor='testnav', description='The demolition was cancelled', incident=8, received=datetime.datetime(2021, 4, 22, 11, 47, 11, 978438, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200), '+02:00')), timestamp=datetime.datetime(2021, 4, 22, 11, 47, 11, 946076, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200), '+02:00')), type='END')\n```\n\n### Modify an existing incident\n\nArgus does not allow modification of most an incident's attributes, but things\nlike the tag list can be changed. Modifications are made by constructing an\n`Incident` object with the `pk` attribute set to the id of the incident you\nwish you modify, and then adding values to the attributes you wish to modify:\n\n```pycon\n>>> from pyargus.client import Client\n>>> from pyargus.models import Incident\n>>> from datetime import datetime\n>>> c = Client(api_root_url=\"https://argus.example.org/api/v1\", token=\"foobar\")\n>>> i = Incident(\n...     pk=8,\n...     tags={\n...         \"host\": \"earth.example.org\",\n...         \"location\": \"Milky way\",\n...     }\n... )\n>>> c.update_incident(i)\nIncident(pk=8, start_time=datetime.datetime(2021, 4, 22, 11, 41, 53, 580947, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200), '+02:00')), end_time=None, source=SourceSystem(pk=2, name='testnav', type='nav', user=3, base_url='http://localhost/'), source_incident_id='', details_url='', description='The earth was demolished to make way for a hyperspace bypass', level=None, ticket_url='', tags={'host': 'earth.example.org', 'location': 'Milky way'}, stateful=False, open=False, acked=False)\n\n```\n\n### Stateless incidents\n\nArgus supports a concept of \"stateless\" incidents. Stateless incidents\nrepresent single points in time, and do not have an end time. To explicitly\ncreate stateless incidents, set the `end_time` attribute to the STATELESS\nsentinel, like so:\n\n```python\nfrom datetime import datetime\nfrom pyargus.models import Incident, STATELESS\n\nstateless_incident = Incident(\n    description=\"Something happened\",\n    start_time=datetime.now(),\n    end_time=STATELESS\n)\n```\n\n## BUGS\n\n* Doesn't provide high-level error handling yet.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Uninett/pyargus",
    "keywords": "api,argus,client",
    "license": "Apache-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "argus-api-client",
    "package_url": "https://pypi.org/project/argus-api-client/",
    "platform": "",
    "project_url": "https://pypi.org/project/argus-api-client/",
    "project_urls": {
      "Homepage": "https://github.com/Uninett/pyargus"
    },
    "release_url": "https://pypi.org/project/argus-api-client/0.4.3/",
    "requires_dist": null,
    "requires_python": "<4,>=3.7",
    "summary": "A Python API client library for the Argus alert aggregator server",
    "version": "0.4.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12850397,
  "releases": {
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7b82a4d11acbbd885b399ec39873c54ccbc5a535186536e9f39f83e4bcb3ec25",
          "md5": "803bfe2215eb70208824e46445cfdddd",
          "sha256": "68df777341b4747b50b2294e2cd73ebf4af7709fce9a9c902a5972e46b1bb480"
        },
        "downloads": -1,
        "filename": "argus_api_client-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "803bfe2215eb70208824e46445cfdddd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9714,
        "upload_time": "2020-10-27T09:08:16",
        "upload_time_iso_8601": "2020-10-27T09:08:16.622116Z",
        "url": "https://files.pythonhosted.org/packages/7b/82/a4d11acbbd885b399ec39873c54ccbc5a535186536e9f39f83e4bcb3ec25/argus_api_client-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dcb911dc2c890ba856d7ffd1cb9cd8a9ac80bca0c339677a1833770d96513ec9",
          "md5": "5ab16426093897276aab11357d234b1b",
          "sha256": "fb4b95589cad86fc32bb43efa62d4559adc23c56b69d837c14a4a1af15f475cf"
        },
        "downloads": -1,
        "filename": "argus-api-client-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "5ab16426093897276aab11357d234b1b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5057,
        "upload_time": "2020-10-27T09:08:19",
        "upload_time_iso_8601": "2020-10-27T09:08:19.539015Z",
        "url": "https://files.pythonhosted.org/packages/dc/b9/11dc2c890ba856d7ffd1cb9cd8a9ac80bca0c339677a1833770d96513ec9/argus-api-client-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dbbcb0a9b7915688c0875be0d9c3bbd9d0617463076961712e8976e0333be13d",
          "md5": "fbff7fd76aa52cc1841ebc15999c81e5",
          "sha256": "7f29b0b8bf004c156c6a499f58477d67b8936749acca6a63b062e2770a6cdd2b"
        },
        "downloads": -1,
        "filename": "argus_api_client-0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fbff7fd76aa52cc1841ebc15999c81e5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9729,
        "upload_time": "2020-11-04T09:42:07",
        "upload_time_iso_8601": "2020-11-04T09:42:07.811356Z",
        "url": "https://files.pythonhosted.org/packages/db/bc/b0a9b7915688c0875be0d9c3bbd9d0617463076961712e8976e0333be13d/argus_api_client-0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a00cf4de1e8b1c4686c8186ff20a4793b69f637311ff28a42a0dbcd8ffe3f5db",
          "md5": "b8b360372661bf7796021bda83a2be89",
          "sha256": "691aa7e74a5570628a5e1082e74e3ac102ce6e56a673af4035887adbe1813390"
        },
        "downloads": -1,
        "filename": "argus-api-client-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "b8b360372661bf7796021bda83a2be89",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5083,
        "upload_time": "2020-11-04T09:42:09",
        "upload_time_iso_8601": "2020-11-04T09:42:09.031084Z",
        "url": "https://files.pythonhosted.org/packages/a0/0c/f4de1e8b1c4686c8186ff20a4793b69f637311ff28a42a0dbcd8ffe3f5db/argus-api-client-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e8d08aed9d03dc543d1a8472feb8b9feeb69f44d7f3b45baf827691e23566742",
          "md5": "4a4874baaf6502a74ba9bfe4a6a56f14",
          "sha256": "d7f93de49b6279a9abe7265a7b05d5a152cb07e44e8c5ab6cf1964ff12e0d123"
        },
        "downloads": -1,
        "filename": "argus_api_client-0.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4a4874baaf6502a74ba9bfe4a6a56f14",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9754,
        "upload_time": "2020-11-06T09:03:57",
        "upload_time_iso_8601": "2020-11-06T09:03:57.578782Z",
        "url": "https://files.pythonhosted.org/packages/e8/d0/8aed9d03dc543d1a8472feb8b9feeb69f44d7f3b45baf827691e23566742/argus_api_client-0.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c040b9185d944b9c016a09c628284b11418fb8d78564851a5d4638ce513c554a",
          "md5": "af9fe8e5ba7564a694838c556a5ae63e",
          "sha256": "78c633ba51093cbf4f463d140a2282d78a67b6b296c6a0d3994d214a95c3fc1f"
        },
        "downloads": -1,
        "filename": "argus-api-client-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "af9fe8e5ba7564a694838c556a5ae63e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4823,
        "upload_time": "2020-11-06T09:03:59",
        "upload_time_iso_8601": "2020-11-06T09:03:59.286047Z",
        "url": "https://files.pythonhosted.org/packages/c0/40/b9185d944b9c016a09c628284b11418fb8d78564851a5d4638ce513c554a/argus-api-client-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "852f6b6cfd7a58081fcf0a41f7072ef161df9a1775a2575102800bb8fe68c923",
          "md5": "af498029075559ea04c13e3907f9bf5a",
          "sha256": "1449ab43c28cc4e4ac6c7637dafa637815d321a33384e50c01f5328f372dac35"
        },
        "downloads": -1,
        "filename": "argus_api_client-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "af498029075559ea04c13e3907f9bf5a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">= 3.7, <4",
        "size": 11513,
        "upload_time": "2021-04-22T09:59:51",
        "upload_time_iso_8601": "2021-04-22T09:59:51.787694Z",
        "url": "https://files.pythonhosted.org/packages/85/2f/6b6cfd7a58081fcf0a41f7072ef161df9a1775a2575102800bb8fe68c923/argus_api_client-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6651fc88ef24c321c0f6c959c3a54af287d9c84c0a100e63a212fc2b5b51ac29",
          "md5": "6f78fd9fb51207c21596b628505490b4",
          "sha256": "716366d50331a5a6e9f0b405f8072947c795ec4b62e39e511056a25b78c55084"
        },
        "downloads": -1,
        "filename": "argus-api-client-0.4.1.macosx-10.14-x86_64.tar.gz",
        "has_sig": false,
        "md5_digest": "6f78fd9fb51207c21596b628505490b4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">= 3.7, <4",
        "size": 11517,
        "upload_time": "2021-09-21T14:49:11",
        "upload_time_iso_8601": "2021-09-21T14:49:11.969022Z",
        "url": "https://files.pythonhosted.org/packages/66/51/fc88ef24c321c0f6c959c3a54af287d9c84c0a100e63a212fc2b5b51ac29/argus-api-client-0.4.1.macosx-10.14-x86_64.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5ae3df5e945ee8c8d32989e4998c44622e51a14a0dbf5f842bc27d7d39b701d1",
          "md5": "c397b1a0984b93761225af8bee7133d0",
          "sha256": "daa168c8818c370a51172863708083f5cca41902021cededbd784f90635d3d3d"
        },
        "downloads": -1,
        "filename": "argus-api-client-0.4.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c397b1a0984b93761225af8bee7133d0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">= 3.7, <4",
        "size": 6978,
        "upload_time": "2021-09-21T15:14:14",
        "upload_time_iso_8601": "2021-09-21T15:14:14.809985Z",
        "url": "https://files.pythonhosted.org/packages/5a/e3/df5e945ee8c8d32989e4998c44622e51a14a0dbf5f842bc27d7d39b701d1/argus-api-client-0.4.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "47c148492bccc1c0a28da1b25ba32aad1a5a097996f891a0181085bf3a10a41e",
          "md5": "ae642a2e2e809fae231ae11d05afa1c7",
          "sha256": "685e672f910da2d64710bf93c0ba82f275907a94e8d3f3a3c0331a7cef0581c3"
        },
        "downloads": -1,
        "filename": "argus-api-client-0.4.3.tar.gz",
        "has_sig": false,
        "md5_digest": "ae642a2e2e809fae231ae11d05afa1c7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "<4,>=3.7",
        "size": 11012,
        "upload_time": "2022-02-10T13:31:18",
        "upload_time_iso_8601": "2022-02-10T13:31:18.162370Z",
        "url": "https://files.pythonhosted.org/packages/47/c1/48492bccc1c0a28da1b25ba32aad1a5a097996f891a0181085bf3a10a41e/argus-api-client-0.4.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "47c148492bccc1c0a28da1b25ba32aad1a5a097996f891a0181085bf3a10a41e",
        "md5": "ae642a2e2e809fae231ae11d05afa1c7",
        "sha256": "685e672f910da2d64710bf93c0ba82f275907a94e8d3f3a3c0331a7cef0581c3"
      },
      "downloads": -1,
      "filename": "argus-api-client-0.4.3.tar.gz",
      "has_sig": false,
      "md5_digest": "ae642a2e2e809fae231ae11d05afa1c7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "<4,>=3.7",
      "size": 11012,
      "upload_time": "2022-02-10T13:31:18",
      "upload_time_iso_8601": "2022-02-10T13:31:18.162370Z",
      "url": "https://files.pythonhosted.org/packages/47/c1/48492bccc1c0a28da1b25ba32aad1a5a097996f891a0181085bf3a10a41e/argus-api-client-0.4.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}