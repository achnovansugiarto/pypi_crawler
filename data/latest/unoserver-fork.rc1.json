{
  "info": {
    "author": "Alessandro Filippini",
    "author_email": "ale@alepini.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: MIT License",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Office/Business"
    ],
    "description": "unoserver\n=========\n\nUsing LibreOffice as a server for converting documents.\n\nOverview\n--------\n\nUsing LibreOffice to convert documents is easy, you can use a command like this to\nconvert a file to PDF, for example::\n\n    $ libreoffice --headless --convert-to pdf ~/Documents/MyDocument.odf\n\nHowever, that will load LibreOffice into memory, convert a file and then exit LibreOffice,\nwhich means that the next time you convert a document LibreOffice needs to be loaded into\nmemory again.\n\nTo avoid that, LibreOffice has a listener mode, where it can listen for commands via a port,\nand load and convert documents without exiting and reloading the software. This lowers the\nCPU load when converting many documents with somewhere between 50% and 75%, meaning you can\nconvert somewhere between two and four times as many documents in the same time using a listener.\n\nUnoserver contains two commands to help you do this, `unoserver` which starts a listener on the\nspecified IP interface and port, and `unoconverter` which will connect to a listener and ask it\nto convert a document.\n\n\nInstallation\n------------\n\nNB! Windows and Mac support is as of yet untested.\n\nUnoserver needs to be installed by and run with the same Python installation that LibreOffice uses.\nOn Unix this usually means you can just install it with::\n\n   $ sudo pip install unoserver\n\nIf you have multiple versions of LibreOffice installed, you need to install it for each one.\nUsually each LibreOffice install will have it's own `python` executable and you need to run\n`pip` with that executable::\n\n  $ sudo /full/path/to/python -m pip install unoserver\n\nTo find all Python installations that have the relevant LibreOffice libraries installed,\nyou can run a script called `find_uno.py`::\n\n  wget -O find_uno.py https://gist.githubusercontent.com/regebro/036da022dc7d5241a0ee97efdf1458eb/raw/find_uno.py\n  python3 find_uno.py\n\nThis should give an output similar to this::\n\n  Trying python found at /usr/bin/python3... Success!\n  Trying python found at /opt/libreoffice7.1/program/python... Success!\n  Found 2 Pythons with Libreoffice libraries:\n  /usr/bin/python3\n  /opt/libreoffice7.1/program/python\n\nThe `/usr/bin/python3` binary will be the system Python used for versions of\nLibreoffice installed by the system package manager. The Pythons installed\nunder `/opt/` will be Python versions that come with official LibreOffice\ndistributions.\n\nTo install on such distributions, do the following::\n\n  $ wget https://bootstrap.pypa.io/get-pip.py\n  $ sudo /path/to/python get-pip.py\n  $ sudo /path/to/python -m pip install unoserver\n\nYou can also install it in a virtualenv, if you are using the system Python\nfor that virtualenv, and specify the ``--system-site-packages`` parameter::\n\n  $ virtualenv --python=/usr/bin/python3 --system-site-packages virtenv\n  $ virtenv/bin/pip install unoserver\n\nWindows and Mac installs aren't officially supported yet, but on Windows the\npaths to the LibreOffice Python executable are usually in locations such as\n`C:\\\\Program Files (x86)\\\\LibreOffice\\\\python.exe`. On Mac it can be for\nexample `/Applications/LibreOffice.app/Contents/python`.\n\n\nUsage\n-----\n\nInstalling unoserver installs two scripts, `unoserver` and `unoconverter`.\nBoth can also be run as modules with `python3 -m unoserver.server` and\n`python3 -m unoserver.converter` with the same arguments as the main scripts.\n\nUnoserver\n~~~~~~~~~\n\n``unoserver [-h] [--interface INTERFACE] [--port PORT] [--daemon] [--executable EXECUTABLE]``\n\n* `--interface`: The interface used by the server, defaults to \"localhost\"\n* `--port`: The port used by the server, defaults to \"2002\"\n* `--daemon`:  Deamonize the server\n* `--executable`: The path to the LibreOffice executable\n\nUnoconvert\n~~~~~~~~~~\n\n``unoconvert [-h] [--convert-to CONVERT_TO] [--interface INTERFACE] [--port PORT] infile outfile``\n\n* `infile`: The path to the file to be converted (use - for stdin)\n* `outfile`: The path to the converted file (use - for stdout)\n* `--convert-to`: The file type/extension of the output file (ex pdf). Required when using stdout\n* `--interface`: The interface used by the server, defaults to \"localhost\"\n* `--port`: The port used by the server, defaults to \"2002\"\n\n\nDevelopment and Testing\n-----------------------\n\n1. Clone the repo from `https://github.com/unoconv/unoserver`.\n\n2. Setup a virtualenv::\n\n    $ virtualenv --system-site-packages ve\n    $ ve/bin/pip install -e .[devenv]\n\n3. Run tests::\n\n    $ ve/bin/pytest tests\n\n4. Run `flake8` linting:\n\n    $ ve/bin/flake8 src tests\n\n\nComparison with `unoconv`\n-------------------------\n\nUnoserver started as a rewrite, and hopefully a replacement to `unoconv`, a module with support\nfor using LibreOffice as a listener to convert documents.\n\nDifferences for the user\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n* Easier install for system versions of LibreOffice. On Linux, the apckaged versions of LibreOffice\n  typically uses the system Python, making it easy to install `unoserver` with a simple\n  `sudo pip install unoserver` command.\n\n* Separate commands for server and client. The client no longer tries to start a listener and then\n  close it after conversion if it can't find a listener. Instead the new `unoconverter` client\n  requires the `unoserver` to be started. This makes it less practical for one-off converts,\n  but as mentioned that can easily be done with LibreOffice itself.\n\n* The `unoserver` listener does not prevent you from using LibreOffice as a normal user, while the\n  `unoconv` listener would block you from starting LibreOffice to open a document normally.\n\n* You should be able to on a multi-core machine run several `unoservers` with different ports.\n  There is however no support for any form of load balancing in `unoserver`, you would have to\n  implement that yourself in your usage of `unoconverter`.\n\n* Only LibreOffice is officially supported. Other variations are untested.\n\n\nDifferences for the maintainer\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n* It's a complete and clean rewrite, supporting only Python 3, with easier to understand and\n  therefore easier to maintain code, hopefully meaning more people can contribute.\n\n* It doesn't rely on internal mappings of file types and export filters, but asks LibreOffice\n  for this information, which will increase compatibility with different LibreOffice versions,\n  and also lowers maintenance.\n\nContributors\n------------\n\n* Lennart Regebro, regebro@gmail.com\n* Stephan Richter, srichter@shoobx.com\n\n1.3 (unreleased)\n----------------\n\n- Nothing changed yet.\n\n\n1.2 (2022-03-17)\n----------------\n\n- Move logging configuration from import time to the main() functions.\n\n- Improved the handling of KeyboardInterrupt\n\n- Added the deprecated but still necessary com.sun.star.text.WebDocument\n  for HTML docs.\n\n\n1.1 (2021-10-14)\n----------------\n\n- Fixed a bug: If you specified an unknown file extension while piping the\n  result to stdout, you would get a type error instead of the correct error.\n\n- Added an extra check that libreoffice is quite dead when exiting,\n  I experienced a few cases where soffice.bin was using 100% load in the\n  background after unoserver exited. I hope this takes care of that.\n\n- Added ``if __name__ == \"main\":`` blocks so you can run the modules\n  as scripts, and also with ``python3 -m unoserver.server`` and\n  ``python3 -m unoserver.converter``.\n\n\n1.0.1 (2021-09-20)\n------------------\n\n- Fixed a bug that meant `unoserver` did not behave well with Supervisord's restart command.\n\n\n1.0 (2021-08-10)\n----------------\n\n- A few small spelling and grammar changes.\n\n\n1.0b3 (2021-07-01)\n------------------\n\n- Make sure `interface` and `port` options are honored.\n\n- Added an --executable option to the server to pick a specific libreoffice installation.\n\n- Changed the infile and outfile options to be positional.\n\n- Added support for using stdin and stdout.\n\n- Added a --convert-to argument to specify the resulting filetype.\n\n\n1.0b2 (2021-06-24)\n------------------\n\n- A bug prevented converting to or from files in the local directory.\n\n\n1.0b1 (2021-06-24)\n------------------\n\n- First beta release\n\n\n0.0.1 (2021-06-16)\n------------------\n\n- First alpha release\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/AlePini/unoserver",
    "keywords": "libreoffice,conversion,documents,uno,unoconv",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "unoserver-fork",
    "package_url": "https://pypi.org/project/unoserver-fork/",
    "platform": null,
    "project_url": "https://pypi.org/project/unoserver-fork/",
    "project_urls": {
      "Homepage": "https://github.com/AlePini/unoserver"
    },
    "release_url": "https://pypi.org/project/unoserver-fork/1.3.1/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "A server for file conversions with Libre Office. With function to update index",
    "version": "1.3.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15458729,
  "releases": {
    "1.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a45d0f2783f5f7e745b39b1db3bef54b1f423a1ba53e85ecf63cbb7dfb4606f5",
          "md5": "66cf04a92503db97f258d5f3014d6b35",
          "sha256": "4ab73db20ca4c2ad7ee931f69b70f5dbafdf257647359f09ceca7899cca229de"
        },
        "downloads": -1,
        "filename": "unoserver-fork-1.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "66cf04a92503db97f258d5f3014d6b35",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 48115,
        "upload_time": "2022-10-19T08:22:43",
        "upload_time_iso_8601": "2022-10-19T08:22:43.640373Z",
        "url": "https://files.pythonhosted.org/packages/a4/5d/0f2783f5f7e745b39b1db3bef54b1f423a1ba53e85ecf63cbb7dfb4606f5/unoserver-fork-1.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a45d0f2783f5f7e745b39b1db3bef54b1f423a1ba53e85ecf63cbb7dfb4606f5",
        "md5": "66cf04a92503db97f258d5f3014d6b35",
        "sha256": "4ab73db20ca4c2ad7ee931f69b70f5dbafdf257647359f09ceca7899cca229de"
      },
      "downloads": -1,
      "filename": "unoserver-fork-1.3.1.tar.gz",
      "has_sig": false,
      "md5_digest": "66cf04a92503db97f258d5f3014d6b35",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 48115,
      "upload_time": "2022-10-19T08:22:43",
      "upload_time_iso_8601": "2022-10-19T08:22:43.640373Z",
      "url": "https://files.pythonhosted.org/packages/a4/5d/0f2783f5f7e745b39b1db3bef54b1f423a1ba53e85ecf63cbb7dfb4606f5/unoserver-fork-1.3.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}