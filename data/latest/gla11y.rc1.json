{
  "info": {
    "author": "Samuel Thibault",
    "author_email": "sthibault@hypra.fr",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "License :: OSI Approved :: ISC License (ISCL)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Quality Assurance"
    ],
    "description": "GLA11Y (glade accessibility)\n======\n\nThis tool checks accessibility of GtkBuilder .ui files\nproduced e.g. by glade.\nIt looks for various issues, and notably missing or bogus labelling\nrelations.\n\nIt can for instance be used in Continous Integration checks to make sure not to\nintroduce accessibility regressions.\n\n\nThis file describes the tool itself.\n\nThe HOWTO.md file describes how to fix the warnings raised by the tool.\n\n\nInstallation\n------------\n\nJust run\n\n\tmake install\n\nand gla11y will be installed in /usr/local/bin/ by default (can be changed by\nappending prefix=... on the make command line).\n\n\nBasic use\n---------\n\nThe typical use is running\n\n\tgla11y $(find . -name \\*.ui)\n\nwhich will emit all kinds of warnings.\n\n\nUsing suppressions\n------------------\n\nIf there are a lot of warnings for existing issues, it may be preferrable for a\nstart to only show new warnings: run once\n\n\tgla11y -g suppressions $(find . -name \\*.ui)\n\nto create a `suppressions' file which contains rules to suppress the warnings\nfound at the time of generation, and after that,\n\n\tgla11y -s suppressions $(find . -name \\*.ui)\n\nwill only display warnings for new issues.\n\nIf the paths given to the tool are absolute, the -P option allows to remove a\nprefix from the paths.\n\n\nApplication-specific widgets\n----------------------------\n\nBy default, gla11y knows about Gtk standard widgets.  If the application has\nits own self-baked widgets, it may be useful to teach gla11y their role, for\ninstance:\n\n\tgla11y --widgets-ignored +myVBox,myHBox --widgets-needlabel +myEntry $(find . -name \\*.ui)\n\nThe default list of recognized widgets can be obtained with --widgets-print.\n\n\nEnabling/Disabling warnings\n---------------------------\n\nEspecially when starting running gla11y over a very big project with a lot\nof existing warnings, it is useful to enable warnings progressively. The\n--enable/disable options can be used to that end. Their effect accumulate, i.e.\neach --enable/disable option overrides the effect of previous options. For\ninstance:\n\n\tgla11y --disable-all --enable-type undeclared-target $(find . -name \\*.ui)\n\nwill only enable the undeclared-target warning type, while\n\n\tgla11y --enable-all --disable-specific no-labelled-by,GtkSpinner $(find . -name \\*.ui)\n\nwill enable all warnings, except no-labelled-by for GtkSpinner widgets.\n\n\nFatal errors/warnings\n---------------------\n\nBy default, only errors are fatal.  One can however fine-tune this, for instance:\n\n\tgla11y --fatal-all --not-fatal-widgets myWidget $(find . -name \\*.ui)\n\nmakes all warnings (and errors) fatal except for myWiget widgets.  Conversely\n\n\tgla11y --not-fatal-all --fatal-type undeclared-target $(find . -name \\*.ui)\n\nmakes all warnings and errors non-fatal, except error undeclared-target.\n\n\nFalse positives\n---------------\n\nWe have taken great care to avoid false positives, but sometimes they just can't\nbe detected automatically :) The simplest way to avoid them is then to blacklist\nthem. The -f option can be used like -s to suppress warnings, except that they\nwill not be reported at all any more.\n\nThis means that after creating a suppression file that silents the existing\nerrors to concentrate first on avoiding new accessibility issues, one can work\non warnings for existing issues by either fixing them, or moving the suppression\nline from the suppression file passed to the -s option to the suppression file\npassed to the -f option.\n\n\nIntegration in a build system\n-----------------------------\n\nTo integrate the use of gla11y in a build system, you can for instance add to\nconfigure.ac:\n\n\tAC_PATH_PROG([GLA11Y], [gla11y], [true])\n\nand introduce a new Makefile.am rule to trigger a call to gla11y:\n\n\tui_files = foo.ui bar.ui\n\n\tGLA11Y_OUTPUT = ui-a11y.err\n\tGLA11Y_SUPPR  = ui-a11y.suppr\n\tGLA11Y_FALSE  = ui-a11y.false\n\n\tGLA11Y_V = $(GLA11Y_V_@AM_V@)\n\tGLA11Y_V_ = $(GLA11Y_V_@AM_DEFAULT_V@)\n\tGLA11Y_V_0 = @echo \"  GLA11Y  \" $@;\n\tGLA11Y_V_1 = \n\n\tall-local: $(GLA11Y_OUTPUT)\n\t$(GLA11Y_OUTPUT): $(ui_files)\n\t\t$(GLA11Y_V) $(GLA11Y) -P $(srcdir)/ -f $(srcdir)/$(GLA11Y_FALSE) -s $(srcdir)/$(GLA11Y_SUPPR) -o $@ $(ui_files:%=$(srcdir)/%)\n\n\tCLEANFILES += $(GLA11Y_OUTPUT)\n\tEXTRA_DIST += $(GLA11Y_SUPPR) $(GLA11Y_FALSE)\n\nand you can generate ui-a11y.suppr from an initial call to gla11y from the\nsource tree:\n\n\tgla11y -g ui-a11y.suppr foo.ui bar.ui\n\nin order to ignore the existing warnings for a start.\n\n\nFrom then on, the gla11y call will error out if new fatal warnings are produced,\nthus avoiding the corresponding accessibility regressions.  The existing\nwarnings can then be worked on progressively, removing the corresponding\nsuppression rules from the .suppr files accordingly.  In case of false positives\nfrom the tool, they can be transferred from the .suppr file to the .false file.\nSee HOWTO.md for more details on the methodology, which you can point developers\nto.\n\n\nCredits\n-------\n\nGla11y was developped by Hypra (http://hypra.fr/) and Martin Pieuchot under\nthe funding of The Document Foundation tender to implement accessibility\nimprovements (#201704-01)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hypra/gla11y",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "gla11y",
    "package_url": "https://pypi.org/project/gla11y/",
    "platform": "",
    "project_url": "https://pypi.org/project/gla11y/",
    "project_urls": {
      "Homepage": "https://github.com/hypra/gla11y"
    },
    "release_url": "https://pypi.org/project/gla11y/0.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Automatic check of accessibility of .ui files",
    "version": "0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8038281,
  "releases": {
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0fda269aafe73a88e02abe636c2aea7c7e62cd13320ad4974d1c52abaa438266",
          "md5": "e4ef128abb656c10cde25ba29c837be2",
          "sha256": "4e2f5628b7edcbe002178bc2f727bfda51548aae176db932580aca9c5d419774"
        },
        "downloads": -1,
        "filename": "gla11y-0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e4ef128abb656c10cde25ba29c837be2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 15079,
        "upload_time": "2020-08-25T20:12:23",
        "upload_time_iso_8601": "2020-08-25T20:12:23.222380Z",
        "url": "https://files.pythonhosted.org/packages/0f/da/269aafe73a88e02abe636c2aea7c7e62cd13320ad4974d1c52abaa438266/gla11y-0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4fca19a34e2876847edd3c18c50b52bfa8fdeddad247f1e928be00899fa8876d",
          "md5": "7d4427e233b49ce96b8a03029c11899d",
          "sha256": "22ec41e804cc448573192f48e39054cee02ed21c2dd3f817953970fc37591f7b"
        },
        "downloads": -1,
        "filename": "gla11y-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "7d4427e233b49ce96b8a03029c11899d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17413,
        "upload_time": "2020-08-25T20:12:28",
        "upload_time_iso_8601": "2020-08-25T20:12:28.411111Z",
        "url": "https://files.pythonhosted.org/packages/4f/ca/19a34e2876847edd3c18c50b52bfa8fdeddad247f1e928be00899fa8876d/gla11y-0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0fda269aafe73a88e02abe636c2aea7c7e62cd13320ad4974d1c52abaa438266",
        "md5": "e4ef128abb656c10cde25ba29c837be2",
        "sha256": "4e2f5628b7edcbe002178bc2f727bfda51548aae176db932580aca9c5d419774"
      },
      "downloads": -1,
      "filename": "gla11y-0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e4ef128abb656c10cde25ba29c837be2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 15079,
      "upload_time": "2020-08-25T20:12:23",
      "upload_time_iso_8601": "2020-08-25T20:12:23.222380Z",
      "url": "https://files.pythonhosted.org/packages/0f/da/269aafe73a88e02abe636c2aea7c7e62cd13320ad4974d1c52abaa438266/gla11y-0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4fca19a34e2876847edd3c18c50b52bfa8fdeddad247f1e928be00899fa8876d",
        "md5": "7d4427e233b49ce96b8a03029c11899d",
        "sha256": "22ec41e804cc448573192f48e39054cee02ed21c2dd3f817953970fc37591f7b"
      },
      "downloads": -1,
      "filename": "gla11y-0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "7d4427e233b49ce96b8a03029c11899d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 17413,
      "upload_time": "2020-08-25T20:12:28",
      "upload_time_iso_8601": "2020-08-25T20:12:28.411111Z",
      "url": "https://files.pythonhosted.org/packages/4f/ca/19a34e2876847edd3c18c50b52bfa8fdeddad247f1e928be00899fa8876d/gla11y-0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}