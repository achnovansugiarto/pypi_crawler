{
  "info": {
    "author": "Ashwin Shenoy",
    "author_email": "ashwin@traboda.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 3.0",
      "Framework :: Django :: 4.0",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# Chowkidar\n\nA simple, flexible JWT authentication plugin for your Django Strawberry GraphQL APIs.\n\n## Installation\n\n1. Install the package from PyPI:\n\n```bash\npip install chowkidar-strawberry\n```\n\n2. Add `chowkidar_strawberry` to your `INSTALLED_APPS`:\n\n```python\nINSTALLED_APPS = [\n    ...\n    \"chowkidar\",\n]\n```\n\n3. Add `chowkidar.extensions.JWTAuthExtension` to your strawberry schema extensions:-\n\n```python\nfrom chowkidar.extension import JWTAuthExtension\n\nschema = strawberry.Schema(\n    query=Query,\n    mutation=Mutation,\n    extensions=[JWTAuthExtension],\n)\n```\n\n4. Wrap your Strawberry GraphQL view with `chowkidar.view.auth_enabled_view`:\n\n```python\nfrom chowkidar.view import auth_enabled_view\n\nurlpatterns = [\n  ...\n  path(\n      \"graphql/\",\n      auth_enabled_view(\n          GraphQLView.as_view(schema=schema, graphiql=settings.DEBUG)\n      )\n  ),\n]\n```\n\n5. Create a Refresh Token Model inheriting the `chowkidar.models.AbstractRefreshToken` abstract model:\n\n```python\nclass RefreshToken(AbstractRefreshToken, models.Model):\n    pass\n```\n\n(do not forget run to `python manage.py makemigrations` and `python manage.py migrate`)\n\n6. Implement Mutations for `login` and `logout` with `issue_tokens_on_login` and `revoke_tokens_on_logout` respectively:\n\n```python\nimport strawberry\nfrom chowkidar.wrappers import issue_tokens_on_login, revoke_tokens_on_logout\n\n@strawberry.type\nclass AuthMutations:\n  \n  @strawberry.mutation\n  @issue_tokens_on_login\n  def login(self, info, username: str, password: str) -> bool:\n      user = authenticate(username=username, password=password)\n      if user is None:\n          raise Exception(\"Invalid username or password\")\n      \n      # Set LOGIN_USER with the authenticated user's object, in case of successful authentication\n      # else, set LOGIN_USER to None\n      info.context.LOGIN_USER = user\n      \n      return True\n  \n  @strawberry.mutation\n  @revoke_tokens_on_logout\n  def logout(self, info) -> bool:\n      # Set info.context.LOGIN_USER to True for logging out the user\n      info.context.LOGOUT_USER = True\n      \n      return True\n```\n\nAll your resolvers will now get the following parameters from `info.context` -\n - `info.context.userID` - ID of the requesting user, None if not logged-in \n - `info.context.refreshToken`- Refresh token string of the requesting user, None if not logged-in\n\n## Decorators\n\nYou can use these decorators\n\n1. `@login_required` - wrap your resolver with this decorator to ensure the resolver is called only for logged-in users.\n    \n```python\nfrom chowkidar.decorators import login_required\n\n@strawberry.type\nclass Query:\n    \n    @strawberry.field\n    @login_required\n    def movies(self, info) -> List[MovieType]:\n        return Movie.objects.all()\n```\n\n2. `@resolve_user` - wrap this around your resolver to obtain `User` model instance of the requesting user at `info.context.user`. Hits the Database. Will throw an exception if the user is not logged-in.\n\n```python\nfrom chowkidar.decorators import resolve_user\n\n@strawberry.type\nclass Mutation:\n    \n    @strawberry.mutation\n    @resolve_user\n    def create_movie(self, name: str, info) -> List[MovieType]:\n        if not info.context.user.is_superuser:\n            raise Exception(\"Only superusers can create movies\")\n        \n        # Note: Like you see here, for most queryset operations you can use - user_id=info.context.userID, without needing any decorator or hitting the DB.\n        return Movie.objects.create(name=name, user_id=info.context.userID)  \n\n```\n\n## Tracking IP Address & User Agent in Refresh Token\n\n```python\nclass RefreshToken(AbstractRefreshToken, models.Model):\n  ip = models.GenericIPAddressField(null=True, blank=True)\n  userAgent = models.CharField(max_length=255, null=True, blank=True)\n  \n  def process_request_before_save(self, request: HttpRequest):\n      # set IP from the request\n      from ipware import get_client_ip\n      ip, is_routable = get_client_ip(request)\n      self.ip = ip\n      \n      # set user agent from the request\n      agent = None\n      if \"User-Agent\" in request.headers:\n          agent = request.headers[\"user-agent\"]\n      self.userAgent = agent\n```\n\n## Settings\n\nHere are the available settings -\n\n```\nREFRESH_TOKEN_MODEL = None # Required, a model that implements chowkidar.models.AbstractRefreshToken\n\nJWT_REFRESH_TOKEN_N_BYTES: int = 20\n\n# Expiry Settings\n\nJWT_ACCESS_TOKEN_EXPIRATION_DELTA: timedelta = timezone.timedelta(seconds=60)\nJWT_REFRESH_TOKEN_EXPIRATION_DELTA: timedelta = timezone.timedelta(seconds=60 * 60 * 24 * 7)\n\n# Cookie Settings\n\nJWT_ACCESS_TOKEN_COOKIE_NAME: str = 'JWT_ACCESS_TOKEN'\nJWT_REFRESH_TOKEN_COOKIE_NAME: str = 'JWT_REFRESH_TOKEN'\n\nJWT_COOKIE_DOMAIN: str = None\nJWT_COOKIE_SAME_SITE: ['Lax', 'Strict', 'None'] = \"Lax\"\nJWT_COOKIE_SECURE: bool = False\nJWT_COOKIE_HTTP_ONLY: bool = True\n\n\n# JWT Settings\nJWT_SECRET_KEY: str = settings.SECRET_KEY\n)\nJWT_PUBLIC_KEY: str = None\nJWT_PRIVATE_KEY: str = None\n\nJWT_ALGORITHM: str = \"HS256\"\nJWT_LEEWAY: int = 0\nJWT_ISSUER: str = None\n\n```\n\n## How it Works?\n\n- Uses short-lived stateless JWT Access Token set as cookie to authenticate users. An additional, long-running stateful \n  JWT Refresh Token, that is recorded in RefreshToken model, is also generated to automatically to allow refreshing / \n  generating new access token when expired. This process is fully managed automatically at the backend. For issuing\n  new access token using a existing refresh token, the refresh token is validated against the DB. For all other requests,\n  the DB is not hit, but access key is simply validated against its key.\n- `settings.py` enlists various configuration options for this plugin. The default values are set to work out of the box\n  with minimal configuration. You can override these values in your project's `settings.py` to customize the behavior.\n- Uses a [custom Strawberry Extension](https://strawberry.rocks/docs/guides/extensions) to read JWT cookies from the \n  request, for validation, and auto issuing new access token using refresh token when available. Also sets up \n  `info.context.userID` for easy access to the authenticated user's ID in resolvers. This extension is valid throughout\n  the resolving period of the GraphQL request, although auth is processed before actual query execution. This is defined \n  in `extensions.py`.\n- Uses a wrapper function that wraps the GraphQLView to manage cookies. Data for the cookies is sent to this function\n  via setting custom attribute in `request` object from `extensions.py`. This function executes after GraphQL has been\n  fully processed and http response is ready. This is defined in `view.py`.\n- Consumer applications can custom write login/logout mutations, by wrapping those with `@issue_tokens_on_login` and \n  `@revoke_tokens_on_logout` decorators. These are defined in `wrappers.py`\n- Consumer APIs can decorate auth requiring resolvers with `@login_required` (or `@resolve_user`), as well as get \n   get the ID of the requesting user from `info.context.userID`. The decorators are defined in `decorators.py`.\n\n\n## Publishing\n```bash\n    python setup.py sdist\n    twine upload dist/*\n```\n\n\n## Acknowledgement\n\nThis project is inspired by django-graphql-jwt & django-graphql-social-auth by flavors.\n\n## Contribution\n\nContributions are welcome. Please open an issue or a PR.\n\n## License\n\nThis project is licensed under the [GNU General Public License V3](LICENSE).\n\nMade by [Traboda](https://github.com/traboda/chowkidar) with ‚ù§Ô∏è in India üáÆüá≥.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/traboda/chowkidar",
    "keywords": "",
    "license": "GNU-GPL-V3",
    "maintainer": "Ashwin Shenoy",
    "maintainer_email": "ashwin@traboda.com",
    "name": "chowkidar-strawberry",
    "package_url": "https://pypi.org/project/chowkidar-strawberry/",
    "platform": null,
    "project_url": "https://pypi.org/project/chowkidar-strawberry/",
    "project_urls": {
      "Homepage": "https://github.com/traboda/chowkidar"
    },
    "release_url": "https://pypi.org/project/chowkidar-strawberry/0.2.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "All-in-One JWT Authentication plugin for Strawberry",
    "version": "0.2.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16373680,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a537f2410a96bbbd54c2d24d46f7534a60d57884b989474525cb6d15640437c6",
          "md5": "716a23ceafa4f64c31b3d95c2fc0e63f",
          "sha256": "1750e39e531ffbcd91602ae058fd1a5a4b68fb990741f8808b43809304f408d7"
        },
        "downloads": -1,
        "filename": "chowkidar-strawberry-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "716a23ceafa4f64c31b3d95c2fc0e63f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23210,
        "upload_time": "2022-09-20T22:21:53",
        "upload_time_iso_8601": "2022-09-20T22:21:53.330380Z",
        "url": "https://files.pythonhosted.org/packages/a5/37/f2410a96bbbd54c2d24d46f7534a60d57884b989474525cb6d15640437c6/chowkidar-strawberry-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ac8b51ede6b1c05379af844a8ba94e160ea0b31c7ad09e75ad49a69e9fd02998",
          "md5": "a50e5887649e32450794fffa8c3657d9",
          "sha256": "c5d9ae2a79ba1cca665c91e51afc91e22a88cc0fec027adbebc636d1ec506907"
        },
        "downloads": -1,
        "filename": "chowkidar-strawberry-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a50e5887649e32450794fffa8c3657d9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23210,
        "upload_time": "2022-09-21T12:19:35",
        "upload_time_iso_8601": "2022-09-21T12:19:35.224258Z",
        "url": "https://files.pythonhosted.org/packages/ac/8b/51ede6b1c05379af844a8ba94e160ea0b31c7ad09e75ad49a69e9fd02998/chowkidar-strawberry-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "22d9a03b9de22ff9d3b2bc2f74e4ed965006f3fc7f1f5a40856defd5314f4c72",
          "md5": "00a298fa352f4576218e36677e33f570",
          "sha256": "85d3503c731bd08d060f4291d950fce3c472551b928a17aa1075483e559730d1"
        },
        "downloads": -1,
        "filename": "chowkidar-strawberry-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "00a298fa352f4576218e36677e33f570",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23907,
        "upload_time": "2022-09-21T12:26:37",
        "upload_time_iso_8601": "2022-09-21T12:26:37.008306Z",
        "url": "https://files.pythonhosted.org/packages/22/d9/a03b9de22ff9d3b2bc2f74e4ed965006f3fc7f1f5a40856defd5314f4c72/chowkidar-strawberry-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f1d1b54e6e52c62e34eecfe2e453a4209762a876483f60d202e4927adfd376a5",
          "md5": "4a44d3356b9b3c6bbf4c4b187b9bae36",
          "sha256": "0837a4e720302d1c2af22ea3e0211b4e611ede84ae59a55c94ba6907ce9fad97"
        },
        "downloads": -1,
        "filename": "chowkidar-strawberry-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "4a44d3356b9b3c6bbf4c4b187b9bae36",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23910,
        "upload_time": "2022-09-21T18:14:07",
        "upload_time_iso_8601": "2022-09-21T18:14:07.412853Z",
        "url": "https://files.pythonhosted.org/packages/f1/d1/b54e6e52c62e34eecfe2e453a4209762a876483f60d202e4927adfd376a5/chowkidar-strawberry-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "77bc8a6170dbd8e78b17a13b43550a47c19d662d07e0972806e6a8f2373069ab",
          "md5": "2babf4a7f9ff68d8f39f1c3ad898f089",
          "sha256": "bc98f1957e4ce8aaadaf7544c827bb2f8ded580e3255eafa7c8a625da2c4794c"
        },
        "downloads": -1,
        "filename": "chowkidar-strawberry-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "2babf4a7f9ff68d8f39f1c3ad898f089",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23933,
        "upload_time": "2022-09-22T09:57:02",
        "upload_time_iso_8601": "2022-09-22T09:57:02.150510Z",
        "url": "https://files.pythonhosted.org/packages/77/bc/8a6170dbd8e78b17a13b43550a47c19d662d07e0972806e6a8f2373069ab/chowkidar-strawberry-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "93e12c1531e05c7c8684b6a4956ed61ccf9f514296ec50b8c2a6550656d5ecff",
          "md5": "3f06901edd451ea60b078cfb6569675c",
          "sha256": "9f4f9c831665cdafaf2ed0d73004559f22fb1b8ca16fd9f81edb00ce47a36f9a"
        },
        "downloads": -1,
        "filename": "chowkidar-strawberry-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "3f06901edd451ea60b078cfb6569675c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23958,
        "upload_time": "2022-09-22T18:23:12",
        "upload_time_iso_8601": "2022-09-22T18:23:12.514157Z",
        "url": "https://files.pythonhosted.org/packages/93/e1/2c1531e05c7c8684b6a4956ed61ccf9f514296ec50b8c2a6550656d5ecff/chowkidar-strawberry-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2510c6d4418d71ec91dc91e4950dd1f307cd755817b2d6d28d21b7ced790e526",
          "md5": "0018e822093757f878d5a102f2f4a72c",
          "sha256": "b7feff238ee0f782420b1755148c65be05943b87609881a4d9cecd6538b45a9a"
        },
        "downloads": -1,
        "filename": "chowkidar-strawberry-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "0018e822093757f878d5a102f2f4a72c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23957,
        "upload_time": "2022-09-22T18:39:31",
        "upload_time_iso_8601": "2022-09-22T18:39:31.890089Z",
        "url": "https://files.pythonhosted.org/packages/25/10/c6d4418d71ec91dc91e4950dd1f307cd755817b2d6d28d21b7ced790e526/chowkidar-strawberry-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b11020347da77c91dcf5fb3d79e28b737b5157ea92ffc3032e91a9f4e0458254",
          "md5": "63f1fc2a82ba3d651dd05229338bf18d",
          "sha256": "f5811298db61f5d2245b4f03e74be39198ceb182ea8565dead53834f66a36748"
        },
        "downloads": -1,
        "filename": "chowkidar-strawberry-0.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "63f1fc2a82ba3d651dd05229338bf18d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23973,
        "upload_time": "2022-09-23T14:42:13",
        "upload_time_iso_8601": "2022-09-23T14:42:13.909503Z",
        "url": "https://files.pythonhosted.org/packages/b1/10/20347da77c91dcf5fb3d79e28b737b5157ea92ffc3032e91a9f4e0458254/chowkidar-strawberry-0.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "03d41aff0cff062fc3c3f4e4b00a53b4bcbb4f2bada3f164c8289f05eaee1a83",
          "md5": "b33db71328df296e9b7d9bda6f7fa541",
          "sha256": "66be814a3c442fb592781e92c06cf27e8c5ff208e36063e9e4745a02d6f6885e"
        },
        "downloads": -1,
        "filename": "chowkidar-strawberry-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b33db71328df296e9b7d9bda6f7fa541",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25451,
        "upload_time": "2022-09-28T10:41:45",
        "upload_time_iso_8601": "2022-09-28T10:41:45.567627Z",
        "url": "https://files.pythonhosted.org/packages/03/d4/1aff0cff062fc3c3f4e4b00a53b4bcbb4f2bada3f164c8289f05eaee1a83/chowkidar-strawberry-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7f2321f6632d1837f63a6429ff285675a762118586669981b7b0049cd5e412ac",
          "md5": "e3ecd91579b8ee0cbe7fd4ca34b7daa8",
          "sha256": "12ee042774491acdb62db38c20350e643c395b248f74f56ec8c33312349c5297"
        },
        "downloads": -1,
        "filename": "chowkidar-strawberry-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e3ecd91579b8ee0cbe7fd4ca34b7daa8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25751,
        "upload_time": "2022-09-29T08:22:56",
        "upload_time_iso_8601": "2022-09-29T08:22:56.031473Z",
        "url": "https://files.pythonhosted.org/packages/7f/23/21f6632d1837f63a6429ff285675a762118586669981b7b0049cd5e412ac/chowkidar-strawberry-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "090e70db526215c56971fef4554f26461707083ef8384251fb6fc58ffe6c7c78",
          "md5": "b109c65adea954088d3a4702b7487ea1",
          "sha256": "f056f78aa769ab6f5b6983b7b1217b9c02ca356f50e9febd565717eb9928d1e0"
        },
        "downloads": -1,
        "filename": "chowkidar-strawberry-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b109c65adea954088d3a4702b7487ea1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25763,
        "upload_time": "2022-10-06T08:27:33",
        "upload_time_iso_8601": "2022-10-06T08:27:33.060272Z",
        "url": "https://files.pythonhosted.org/packages/09/0e/70db526215c56971fef4554f26461707083ef8384251fb6fc58ffe6c7c78/chowkidar-strawberry-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c059e6fdb952d73652dcae900c5a375e7121eec2bbd25aa64aae97eebe91c1ef",
          "md5": "b645628dca6e91b6c39811d1c5223db8",
          "sha256": "64fc72736388f8e317bec91ca2d796d4f38d64c27c5dc1aa73957df16f4df72f"
        },
        "downloads": -1,
        "filename": "chowkidar-strawberry-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "b645628dca6e91b6c39811d1c5223db8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25680,
        "upload_time": "2022-12-10T10:09:35",
        "upload_time_iso_8601": "2022-12-10T10:09:35.324985Z",
        "url": "https://files.pythonhosted.org/packages/c0/59/e6fdb952d73652dcae900c5a375e7121eec2bbd25aa64aae97eebe91c1ef/chowkidar-strawberry-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e9514e13ccc32c4cacb8e02fe1643338a9a8a0bf79d8be31cc72ffa86eb28d52",
          "md5": "e2529bd9af5bbc5c518a421efbb3c867",
          "sha256": "ea5c73985710a7edce4b2f3b9c620182f11c9b659d7485c0007b93038ff18c72"
        },
        "downloads": -1,
        "filename": "chowkidar-strawberry-0.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "e2529bd9af5bbc5c518a421efbb3c867",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25909,
        "upload_time": "2023-01-10T11:11:21",
        "upload_time_iso_8601": "2023-01-10T11:11:21.468617Z",
        "url": "https://files.pythonhosted.org/packages/e9/51/4e13ccc32c4cacb8e02fe1643338a9a8a0bf79d8be31cc72ffa86eb28d52/chowkidar-strawberry-0.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e9514e13ccc32c4cacb8e02fe1643338a9a8a0bf79d8be31cc72ffa86eb28d52",
        "md5": "e2529bd9af5bbc5c518a421efbb3c867",
        "sha256": "ea5c73985710a7edce4b2f3b9c620182f11c9b659d7485c0007b93038ff18c72"
      },
      "downloads": -1,
      "filename": "chowkidar-strawberry-0.2.4.tar.gz",
      "has_sig": false,
      "md5_digest": "e2529bd9af5bbc5c518a421efbb3c867",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 25909,
      "upload_time": "2023-01-10T11:11:21",
      "upload_time_iso_8601": "2023-01-10T11:11:21.468617Z",
      "url": "https://files.pythonhosted.org/packages/e9/51/4e13ccc32c4cacb8e02fe1643338a9a8a0bf79d8be31cc72ffa86eb28d52/chowkidar-strawberry-0.2.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}