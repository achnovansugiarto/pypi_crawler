{
  "info": {
    "author": "Yuhang Zhou",
    "author_email": "neutjuzyh@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "Intended Audience :: Developers",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3"
    ],
    "description": "\r\n# Life\r\nLife is a library for reinforce learning implemented by PyTorch.\r\n![190503058512b5a059717be2719e6a1](https://user-images.githubusercontent.com/106570281/220634585-7f9375f2-599f-479c-bceb-f624f9932528.jpg)\r\n## 目前，Life库实现的算法有：\r\n- Sarsa\r\n- multi-Sarsa\r\n- Q-Learning\r\n- Dyna-Q\r\n- DQN\r\n- Double-DQN\r\n- Dueling-DQN\r\n- REINFORCE策略梯度\r\n- Actor-Critic\r\n- PPO\r\n- DDPG\r\n- SAC\r\n- BC\r\n- GAIL\r\n- CQL\r\n## 主要特征\r\n- 基于目前主流的深度学习框架pytorch，支持gpu加速。\r\n- 简洁易用，仅需寥寥几行代码，即可实现强化学习算法的构建与训练。\r\n- 覆盖面广，从传统的QLearning，到一些最新的强化学习算法都有实现。\r\n## 图解Life的结构\r\n![life_struct](https://user-images.githubusercontent.com/106570281/221387421-566e1444-ea61-48ed-b68e-34ee1725560f.jpg)\r\n## Life将强化学习算法分为以下几类：\r\n1. 传统的强化学习算法，如Sarsa;\r\n2. 只基于值函数的深度强化学习算法，如DQN;\r\n3. 基于策略函数和值函数的深度强化学习算法，如AC;\r\n4. 模仿强化学习算法，如BC;\r\n5. 离线强化学习算法，如CQL。\r\n## 对于每一类强化学习算法，都配有一个训练器\r\n训练器的名称和算法的名称是一一对应的，如要训练```DQN```，则其训练函数的名称为：\r\n```train_dqn```\r\n### 以DQN为例，其结构如下\r\n![dqn_struct](https://user-images.githubusercontent.com/106570281/221387444-67dc5dc9-4ba1-4707-9bcc-d8ae9abdb7cf.jpg)\r\n其中：\r\n- dqn.py中为传统DQN算法\r\n- dqn_improved.py中为一些改进的DQN算法\r\n- trainer中包含了以上各种dqn算法的训练函数\r\n# Get Started\r\n要使用Life进行强化学习，仅需简单的三步，下面以DQN在CartPole环境上的训练为例进行快速入门：\r\n## 第一步，导入相关的模块\r\n```python\r\nfrom life.dqn.dqn import DQN  # 导入模型\r\nfrom life.dqn.trainer import train_dqn  # 导入训练器\r\nfrom life.envs.dis_env_demo import make  # 环境的一个例子\r\nfrom life.utils.replay.replay_buffer import ReplayBuffer  # 回放池\r\nimport torch\r\nimport matplotlib.pyplot as plt\r\n```\r\n## 第二步，设置超参数，并构建模型\r\n```python\r\n# 设置超参数\r\nlr = 2e-3\r\nnum_episodes = 500\r\nhidden_dim = 128\r\ngamma = 0.98\r\nepsilon = 0.01\r\ntarget_update = 10\r\nbuffer_size = 10000\r\nminimal_size = 500\r\nbatch_size = 64\r\ndevice = torch.device(\"cpu\")  # 也可指定为gpu : torch.device(\"cuda\")\r\n\r\nenv=make()  # 建立环境，这里为 CartPole-v0\r\nreplay_buffer = ReplayBuffer(buffer_size)  # 回放池\r\nstate_dim = env.observation_space.shape[0]\r\naction_dim = env.action_space.n\r\n\r\n# 建立模型\r\nagent = DQN(state_dim, hidden_dim, action_dim, lr, gamma, epsilon,\r\n            target_update, device)  # DQN模型\r\n```\r\n## 第三步，使用训练器训练模型\r\n```python\r\nresult=train_dqn(agent,env,replay_buffer,minimal_size,batch_size,num_episodes)\r\n```\r\n## 上述训练函数返回的是：训练过程中每个回合的汇报，如果你想的话，可以将其可视化出来：\r\n```python\r\nepisodes_list = list(range(len(result)))\r\nplt.figure(figsize=(8,6))\r\nplt.plot(episodes_list, result)\r\nplt.xlabel(\"Episodes\")\r\nplt.ylabel(\"Returns\")\r\nplt.title(\"DQN on {}\".format(\"Cart Pole v1\"))\r\nplt.show()\r\n```\r\n得到：\r\n![dqn_on_cartpole](https://user-images.githubusercontent.com/106570281/221387500-714d271b-51fa-43b5-9025-56dd4b5c76b7.png)\r\n**可见，除了超参数的设置之外，我们构建DQN算法只使用了两行代码：**\r\n```python\r\nfrom life.dqn.dqn import DQN\r\nagent = DQN(state_dim, hidden_dim, action_dim, lr, gamma, epsilon,target_update, device)\r\n```\r\n**我们训练DQN同样只使用了两行代码：**\r\n```python\r\nfrom life.dqn.trainer import train_dqn\r\nresult=train_dqn(agent,env,replay_buffer,minimal_size,batch_size,num_episodes)\r\n```\r\n### 这让我们的强化学习实现的相当简洁和方便！\r\n\r\n## 上述的例子在项目的examples中\r\n# 关于名称与LOGO\r\n- Life的中文含义为：生命，生活，强化学习本来就是人生的一个过程，我们无时无刻不在进行着强化学习。强化学习不仅是一种科学的决策方法，各种算法的思想也给予我们很多人生的哲理，使人受益匪浅。\r\n- LOGO 底色采用深蓝色，图案和文字采用浅蓝白色，整体端庄严谨，富有科技感。文字部分由项目名称LIFE字样和寄语：RL IS THE PROCESS OF LIFE\t即可以理解为强化学习是人生的过程，也可以理解为强化学习是Life库的程序，一语双关。\r\n- LOGO图案部分为4个伸长了的F，同时将F上面一个笔画伸长，使其左旋90°时形成L字样，为LIFE的简写LF; 同时致敬OpenAI的LOGO:\r\n![image](https://user-images.githubusercontent.com/106570281/221387550-49896c2c-dfa9-4f35-a2d6-56314e8cb44f.png)\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "python,pytorch,reinforce learning,deep learning,DQN,QLearning,DDPG,algorithm",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "rllife",
    "package_url": "https://pypi.org/project/rllife/",
    "platform": null,
    "project_url": "https://pypi.org/project/rllife/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/rllife/1.0.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "a reinforce learning library, support both win and linux",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17330023,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a7089f3c869f91fe3e2118838c7e0673cbee2e61a20efdbdd11c1ddfedee70a",
          "md5": "41a24a7bc7cb9e085252747e103022b6",
          "sha256": "89854bfcece9e83a6757191ab009c7ad832231d02133447c5e211f28f49c870f"
        },
        "downloads": -1,
        "filename": "rllife-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "41a24a7bc7cb9e085252747e103022b6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5110,
        "upload_time": "2023-02-26T02:40:45",
        "upload_time_iso_8601": "2023-02-26T02:40:45.433326Z",
        "url": "https://files.pythonhosted.org/packages/8a/70/89f3c869f91fe3e2118838c7e0673cbee2e61a20efdbdd11c1ddfedee70a/rllife-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6b3a8cd31dff5310fb828a8067fe14b63ffe28cf256cbc7593b9f5b9cef674cb",
          "md5": "3cc5db98dd5455a329c57e65c6299046",
          "sha256": "00c23405e1e365a362cda74695edb3242382e8d49daeb8cb3dd5ca30e18ed463"
        },
        "downloads": -1,
        "filename": "rllife-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "3cc5db98dd5455a329c57e65c6299046",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16854,
        "upload_time": "2023-02-26T03:53:39",
        "upload_time_iso_8601": "2023-02-26T03:53:39.465468Z",
        "url": "https://files.pythonhosted.org/packages/6b/3a/8cd31dff5310fb828a8067fe14b63ffe28cf256cbc7593b9f5b9cef674cb/rllife-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd3082330d8c700aec62b681d5e60d0918c312837af85f5d6fa78768e0a4e711",
          "md5": "1df23e3fb3cad4d0618f157a4ee6dee5",
          "sha256": "b7aab9a92b91cfd19d9ebf64d606b2d699dc0192b545e833a5014bfa7e72948f"
        },
        "downloads": -1,
        "filename": "rllife-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "1df23e3fb3cad4d0618f157a4ee6dee5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19546,
        "upload_time": "2023-03-17T07:14:21",
        "upload_time_iso_8601": "2023-03-17T07:14:21.368304Z",
        "url": "https://files.pythonhosted.org/packages/bd/30/82330d8c700aec62b681d5e60d0918c312837af85f5d6fa78768e0a4e711/rllife-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bd3082330d8c700aec62b681d5e60d0918c312837af85f5d6fa78768e0a4e711",
        "md5": "1df23e3fb3cad4d0618f157a4ee6dee5",
        "sha256": "b7aab9a92b91cfd19d9ebf64d606b2d699dc0192b545e833a5014bfa7e72948f"
      },
      "downloads": -1,
      "filename": "rllife-1.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "1df23e3fb3cad4d0618f157a4ee6dee5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 19546,
      "upload_time": "2023-03-17T07:14:21",
      "upload_time_iso_8601": "2023-03-17T07:14:21.368304Z",
      "url": "https://files.pythonhosted.org/packages/bd/30/82330d8c700aec62b681d5e60d0918c312837af85f5d6fa78768e0a4e711/rllife-1.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}