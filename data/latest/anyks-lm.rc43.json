{
  "info": {
    "author": "Yuriy Lobarev",
    "author_email": "forman@anyks.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS",
      "Operating System :: POSIX :: BSD :: FreeBSD",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3"
    ],
    "description": "[![ANYKS Smart language model](https://raw.githubusercontent.com/anyks/alm/master/site/img/banner.jpg)](https://anyks.com)\n\n# ANYKS Language Model (ALM)\n\n## Project goals and features\n\nThe are many toolkits capable of creating language models: ([KenLM](https://github.com/kpu/kenlm), [SriLM](https://github.com/BitMindLab/SRILM), [IRSTLM](https://github.com/irstlm-team/irstlm)), and each of those toolkits may have a reason to exist. But our language model creation toolkit has the following goals and features:\n\n- **UTF-8 support**: Full UTF-8 support without third-party dependencies.\n- **Support of many data formats**: ARPA, Vocab, Map Sequence, N-grams, Binary alm dictionary.\n- **Smoothing algorithms**: Kneser-Nay, Modified Kneser-Nay, Witten-Bell, Additive, Good-Turing, Absolute discounting.\n- **Normalisation and preprocessing for corpora**: Transferring corpus to lowercase, smart tokenization, ability to create black - and white - lists for n-grams.\n- **ARPA modification**: Frequencies and n-grams replacing, adding new n-grams with frequencies, removing n-grams.\n- **Pruning**: N-gram removal based on specified criteria.\n- **Removal of low-probability n-grams**: Removal of n-grams which backoff probability is higher than standard probability.\n- **ARPA recovery**: Recovery of damaged n-grams in ARPA with subsequent recalculation of their backoff probabilities.\n- **Support of additional word features**: Feature extraction: (numbers, roman numbers, ranges of numbers, numeric abbreviations, any other custom attributes) using scripts written in Python3.\n- **Text preprocessing**: Unlike all other language model toolkits, ALM can extract correct context from files with unnormalized texts.\n- **Unknown word token accounting**: Accounting of 〈unk〉 token as full n-gram.\n- **Redefinition of 〈unk〉 token**: Ability to redefine an attribute of an unknown token.\n- **N-grams preprocessing**: Ability to pre-process n-grams before adding them to ARPA using custom Python3 scripts.\n- **Binary container for Language Models**: The binary container supports compression, encryption and installation of copyrights.\n- **Convenient visualization of the Language model assembly process**: ALM implements several types of visualizations: textual, graphic, process indicator, and logging to files or console.\n- **Collection of all n-grams**: Unlike other language model toolkits, ALM is guaranteed to extract all possible n-grams from the corpus, regardless of their length (except for Modified Kneser-Nay); you can also force all n-grams to be taken into account even if they occured only once.\n\n## Requirements\n\n- [Zlib](http://www.zlib.net)\n- [OpenSSL](https://www.openssl.org)\n- [Python3](https://www.python.org/download/releases/3.0)\n- [NLohmann::json](https://github.com/nlohmann/json)\n- [BigInteger](http://mattmccutchen.net/bigint)\n\n## Install PyBind11\n\n```bash\n$ python3 -m pip install pybind11\n```\n\n## Description of Methods\n\n### Methods:\n- **idw** - Word ID retrieval method\n- **idt** - Token ID retrieval method\n- **ids** - Sequence ID retrieval method\n\n### Example:\n```python\n>>> import alm\n>>>\n>>> alm.idw(\"hello\")\n313191024\n>>>\n>>> alm.idw(\"<s>\")\n1\n>>>\n>>> alm.idw(\"</s>\")\n22\n>>>\n>>> alm.idw(\"<unk>\")\n3\n>>>\n>>> alm.idt(\"1424\")\n2\n>>>\n>>> alm.idt(\"hello\")\n0\n>>>\n>>> alm.idw(\"Living\")\n13268942501\n>>>\n>>> alm.idw(\"in\")\n2047\n>>>\n>>> alm.idw(\"the\")\n83201\n>>>\n>>> alm.idw(\"USA\")\n72549\n>>>\n>>> alm.ids([13268942501, 2047, 83201, 72549])\n16314074810955466382\n```\n\n### Description\n| Name      | Description                                                                                                                                           |\n|-----------|-------------------------------------------------------------------------------------------------------------------------------------------------------|\n|〈s〉       | Sentence beginning token                                                                                                                              |\n|〈/s〉      | Sentence end token                                                                                                                                    |\n|〈url〉     | URL-address token                                                                                                                                     |\n|〈num〉     | Number (arabic or roman) token                                                                                                                        |\n|〈unk〉     | Unknown word token                                                                                                                                    |\n|〈time〉    | Time token (15:44:56)                                                                                                                                 |\n|〈score〉   | Score count token (4:3 ¦ 01:04)                                                                                                                       |\n|〈fract〉   | Fraction token (5/20 ¦ 192/864)                                                                                                                       |\n|〈date〉    | Date token (18.07.2004 ¦ 07/18/2004)                                                                                                                  |\n|〈abbr〉    | Abbreviation token (1-й ¦ 2-е ¦ 20-я ¦ p.s ¦ p.s.)                                                                                                    |\n|〈dimen〉   | Dimensions token (200x300 ¦ 1920x1080)                                                                                                                |\n|〈range〉   | Range of numbers token (1-2 ¦ 100-200 ¦ 300-400)                                                                                                      |\n|〈aprox〉   | Approximate number token (~93 ¦ ~95.86 ¦ 10~20)                                                                                                       |\n|〈anum〉    | Pseudo-number token (combination of numbers and other symbols) (T34 ¦ 895-M-86 ¦ 39km)                                                                |\n|〈pcards〉  | Symbols of the play cards (♠ ¦ ♣ ¦ ♥ ¦ ♦ )                                                                                                            |\n|〈punct〉   | Punctuation token (. ¦ , ¦ ? ¦ ! ¦ : ¦ ; ¦ … ¦ ¡ ¦ ¿)                                                                                                 |\n|〈route〉   | Direction symbols (arrows) (← ¦ ↑ ¦ ↓ ¦ ↔ ¦ ↵ ¦ ⇐ ¦ ⇑ ¦ ⇒ ¦ ⇓ ¦ ⇔ ¦ ◄ ¦ ▲ ¦ ► ¦ ▼)                                                                    |\n|〈greek〉   | Symbols of the Greek alphabet (Α ¦ Β ¦ Γ ¦ Δ ¦ Ε ¦ Ζ ¦ Η ¦ Θ ¦ Ι ¦ Κ ¦ Λ ¦ Μ ¦ Ν ¦ Ξ ¦ Ο ¦ Π ¦ Ρ ¦ Σ ¦ Τ ¦ Υ ¦ Φ ¦ Χ ¦ Ψ ¦ Ω)                         |\n|〈isolat〉  | Isolation/quotation token (( ¦ ) ¦ [ ¦ ] ¦ { ¦ } ¦ \" ¦ « ¦ » ¦ „ ¦ “ ¦ ` ¦ ⌈ ¦ ⌉ ¦ ⌊ ¦ ⌋ ¦ ‹ ¦ › ¦ ‚ ¦ ’ ¦ ′ ¦ ‛ ¦ ″ ¦ ‘ ¦ ” ¦ ‟ ¦ ' ¦〈 ¦ 〉)         |\n|〈specl〉   | Special character token (_ ¦ @ ¦ # ¦ № ¦ © ¦ ® ¦ & ¦ § ¦ æ ¦ ø ¦ Þ ¦ – ¦ ‾ ¦ ‑ ¦ — ¦ ¯ ¦ ¶ ¦ ˆ ¦ ˜ ¦ † ¦ ‡ ¦ • ¦ ‰ ¦ ⁄ ¦ ℑ ¦ ℘ ¦ ℜ ¦ ℵ ¦ ◊ ¦ \\ )     |\n|〈currency〉| Symbols of world currencies ($ ¦ € ¦ ₽ ¦ ¢ ¦ £ ¦ ₤ ¦ ¤ ¦ ¥ ¦ ℳ ¦ ₣ ¦ ₴ ¦ ₸ ¦ ₹ ¦ ₩ ¦ ₦ ¦ ₭ ¦ ₪ ¦ ৳ ¦ ƒ ¦ ₨ ¦ ฿ ¦ ₫ ¦ ៛ ¦ ₮ ¦ ₱ ¦ ﷼ ¦ ₡ ¦ ₲ ¦ ؋ ¦ ₵ ¦ ₺ ¦ ₼ ¦ ₾ ¦ ₠ ¦ ₧ ¦ ₯ ¦ ₢ ¦ ₳ ¦ ₥ ¦ ₰ ¦ ₿ ¦ ұ) |\n|〈math〉    | Mathematical operation token (+ ¦ - ¦ = ¦ / ¦ * ¦ ^ ¦ × ¦ ÷ ¦ − ¦ ∕ ¦ ∖ ¦ ∗ ¦ √ ¦ ∝ ¦ ∞ ¦ ∠ ¦ ± ¦ ¹ ¦ ² ¦ ³ ¦ ½ ¦ ⅓ ¦ ¼ ¦ ¾ ¦ % ¦ ~ ¦ · ¦ ⋅ ¦ ° ¦ º ¦ ¬ ¦ ƒ ¦ ∀ ¦ ∂ ¦ ∃ ¦ ∅ ¦ ∇ ¦ ∈ ¦ ∉ ¦ ∋ ¦ ∏ ¦ ∑ ¦ ∧ ¦ ∨ ¦ ∩ ¦ ∪ ¦ ∫ ¦ ∴ ¦ ∼ ¦ ≅ ¦ ≈ ¦ ≠ ¦ ≡ ¦ ≤ ¦ ≥ ¦ ª ¦ ⊂ ¦ ⊃ ¦ ⊄ ¦ ⊆ ¦ ⊇ ¦ ⊕ ¦ ⊗ ¦ ⊥ ¦ ¨) |\n\n---\n\n### Methods:\n- **setZone** - User zone set method\n\n### Example:\n```python\n>>> import alm\n>>>\n>>> alm.setZone(\"com\")\n>>> alm.setZone(\"ru\")\n>>> alm.setZone(\"org\")\n>>> alm.setZone(\"net\")\n```\n\n---\n\n### Methods:\n- **clear** - Method clear all data\n- **setAlphabet** - Method set alphabet\n- **getAlphabet** - Method get alphabet\n\n### Example:\n```python\n>>> import alm\n>>>\n>>> alm.getAlphabet()\n'abcdefghijklmnopqrstuvwxyz'\n>>>\n>>> alm.setAlphabet(\"abcdefghijklmnopqrstuvwxyzабвгдеёжзийклмнопрстуфхцчшщъыьэюя\")\n>>>\n>>> alm.getAlphabet()\n'abcdefghijklmnopqrstuvwxyzабвгдеёжзийклмнопрстуфхцчшщъыьэюя'\n>>>\n>>> alm.clear()\n>>>\n>>> alm.getAlphabet()\n'abcdefghijklmnopqrstuvwxyz'\n```\n\n---\n\n### Methods:\n- **setUnknown** - Method set unknown word\n- **getUnknown** - Method extraction unknown word\n\n### Example:\n```python\n>>> import alm\n>>>\n>>> alm.setUnknown(\"word\")\n>>>\n>>> alm.getUnknown()\n'word'\n```\n\n---\n\n### Methods:\n- **info** - Dictionary information output method\n- **init** - Language Model Initialization Method signature: [smoothing = wittenBell, modified = False, prepares = False, mod = 0.0]\n- **token** - Method for determining the type of the token words\n- **addText** - Method of adding text for estimate\n- **collectCorpus** - Training method of assembling the text data for ALM\n- **pruneVocab** - Dictionary pruning method\n- **buildArpa** - Method for build ARPA\n- **writeALM** - Method for writing data from ARPA file to binary container\n- **writeWords** - Method for writing these words to a file\n- **writeVocab** - Method for writing dictionary data to a file\n- **writeNgrams** - Method of writing data to NGRAMs files\n- **writeMap** - Method of writing sequence map to file\n- **writeSuffix** - Method for writing data to a suffix file for digital abbreviations\n- **writeAbbrs** - Method for writing data to an abbreviation file\n- **getSuffixes** - Method for extracting the list of suffixes of digital abbreviations\n- **writeArpa** - Method of writing data to ARPA file\n- **setSize** - Method for set size N-gram\n- **setLocale** - Method set locale (Default: en_US.UTF-8)\n- **pruneArpa** - Language model pruning method\n- **addWord** - Method for add a word to the dictionary\n- **setThreads** - Method for setting the number of threads used in work (0 - all available threads)\n- **setSubstitutes** - Method for set letters to correct words from mixed alphabets\n- **addAbbr** - Method add abbreviation\n- **setAbbrs** - Method set abbreviations\n- **getAbbrs** - Method for extracting the list of abbreviations\n- **addGoodword** - Method add good word\n- **addBadword** - Method add bad word\n- **readArpa** - Method for reading an ARPA file, language model\n- **readVocab** - Method of reading the dictionary\n- **setAdCw** - Method for set dictionary characteristics (cw - count all words in dataset, ad - count all documents in dataset)\n\n#### Description\n| Smoothing       |\n|-----------------|\n| wittenBell      |\n| addSmooth       |\n| goodTuring      |\n| constDiscount   |\n| naturalDiscount |\n| kneserNey       |\n| modKneserNey    |\n\n### Example:\n```python\n>>> import alm\n>>>\n>>> alm.info(\"./lm.alm\")\n\n\n* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\n* Name: Test Language Model\n\n* Encryption: AES128\n\n* Alphabet: абвгдеёжзийклмнопрстуфхцчшщъыьэюяabcdefghijklmnopqrstuvwxyz\n\n* Build date: 09/18/2020 21:52:00\n\n* N-gram size: 3\n\n* Words: 9373\n\n* N-grams: 25021\n\n* Author: Some name\n\n* Contacts: site: https://example.com, e-mail: info@example.com\n\n* Copyright ©: You company LLC\n\n* License type: MIT\n\n* License text:\n... License text ...\n\n* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\n>>> \n```\n\n### Example:\n```python\n>>> import alm\n>>> import json\n>>> \n>>> alm.setSize(3)\n>>> alm.setThreads(0)\n>>> alm.setLocale(\"en_US.UTF-8\")\n>>> alm.setAlphabet(\"абвгдеёжзийклмнопрстуфхцчшщъыьэюяabcdefghijklmnopqrstuvwxyz\")\n>>> alm.setSubstitutes({'p':'р','c':'с','o':'о','t':'т','k':'к','e':'е','a':'а','h':'н','x':'х','b':'в','m':'м'})\n>>> \n>>> alm.setOption(alm.options_t.allowUnk)\n>>> alm.setOption(alm.options_t.resetUnk)\n>>> alm.setOption(alm.options_t.mixDicts)\n>>> alm.setOption(alm.options_t.tokenWords)\n>>> alm.setOption(alm.options_t.interpolate)\n>>> \n>>> alm.init(alm.smoothing_t.modKneserNey, True, True)\n>>> \n>>> p = alm.getParams()\n>>> p.algorithm\n4\n>>> p.mod\n0.0\n>>> p.prepares\nTrue\n>>> p.modified\nTrue\n>>> alm.idw(\"Сбербанк\")\n13236490857\n>>> alm.idw(\"Совкомбанк\")\n22287680895\n>>> \n>>> alm.token(\"Сбербанк\")\n'<unk>'\n>>> alm.token(\"совкомбанк\")\n'<unk>'\n>>> \n>>> alm.setAbbrs({13236490857, 22287680895})\n>>> \n>>> alm.addAbbr(\"США\")\n>>> alm.addAbbr(\"Сбер\")\n>>> \n>>> alm.token(\"Сбербанк\")\n'<abbr>'\n>>> alm.token(\"совкомбанк\")\n'<abbr>'\n>>> \n>>> alm.token(\"сша\")\n'<abbr>'\n>>> alm.token(\"СБЕР\")\n'<abbr>'\n>>> \n>>> alm.getAbbrs()\n{13236490857, 189243, 22287680895, 26938511}\n>>> \n>>> alm.addGoodword(\"T-34\")\n>>> alm.addGoodword(\"АН-25\")\n>>> \n>>> alm.addBadword(\"ийти\")\n>>> alm.addBadword(\"циган\")\n>>> alm.addBadword(\"апичатка\")\n>>> \n>>> alm.addWord(\"министерство\")\n>>> alm.addWord(\"возмездие\", 0, 1)\n>>> alm.addWord(\"возражение\", alm.idw(\"возражение\"), 2)\n>>> \n>>> def status(text, status):\n...     print(text, status)\n... \n>>> def statusWriteALM(status):\n...     print(\"Write ALM\", status)\n... \n>>> def statusWriteArpa(status):\n...     print(\"Write ARPA\", status)\n... \n>>> def statusBuildArpa(status):\n...     print(\"Build ARPA\", status)\n... \n>>> def statusPrune(status):\n...     print(\"Prune data\", status)\n... \n>>> def statusWords(status):\n...     print(\"Write words\", status)\n... \n>>> def statusVocab(status):\n...     print(\"Write vocab\", status)\n... \n>>> def statusNgram(status):\n...     print(\"Write ngram\", status)\n... \n>>> def statusMap(status):\n...     print(\"Write map\", status)\n... \n>>> def statusSuffix(status):\n...     print(\"Write suffix\", status)\n... \n>>> def statusAbbreviation(status):\n...     print(\"Write abbreviation\", status)\n... \n>>> alm.addText(\"The future is now\", 0)\n>>> \n>>> alm.collectCorpus(\"./correct.txt\", status)\nRead text corpora 0\nRead text corpora 1\nRead text corpora 2\nRead text corpora 3\nRead text corpora 4\nRead text corpora 5\nRead text corpora 6\n...\n>>> alm.pruneVocab(-15.0, 0, 0, statusPrune)\nPrune data 0\nPrune data 1\nPrune data 2\nPrune data 3\nPrune data 4\nPrune data 5\nPrune data 6\n...\n>>> alm.pruneArpa(0.015, 3, statusPrune)\nPrune data 0\nPrune data 1\nPrune data 2\nPrune data 3\nPrune data 4\nPrune data 5\nPrune data 6\n...\n>>> meta = {\n...     \"aes\": 128,\n...     \"name\": \"Test Language Model\",\n...     \"author\": \"Some name\",\n...     \"lictype\": \"MIT\",\n...     \"password\": \"password\",\n...     \"copyright\": \"You company LLC\",\n...     \"lictext\": \"... License text ...\",\n...     \"contacts\": \"site: https://example.com, e-mail: info@example.com\"\n... }\n>>> \n>>> alm.writeALM(\"./lm.alm\", json.dumps(meta), statusWriteALM)\nWrite ALM 0\nWrite ALM 0\nWrite ALM 0\nWrite ALM 0\nWrite ALM 0\nWrite ALM 0\n...\n>>> alm.writeWords(\"./words.txt\", statusWords)\nWrite words 0\nWrite words 1\nWrite words 2\nWrite words 3\nWrite words 4\nWrite words 5\nWrite words 6\n...\n>>> alm.writeVocab(\"./lm.vocab\", statusVocab)\nWrite vocab 0\nWrite vocab 1\nWrite vocab 2\nWrite vocab 3\nWrite vocab 4\nWrite vocab 5\nWrite vocab 6\n...\n>>> alm.writeNgrams(\"./lm.ngram\", statusNgram)\nWrite ngram 0\nWrite ngram 1\nWrite ngram 2\nWrite ngram 3\nWrite ngram 4\nWrite ngram 5\nWrite ngram 6\n...\n>>> alm.writeMap(\"./lm.map\", statusMap, \"|\")\nWrite map 0\nWrite map 1\nWrite map 2\nWrite map 3\nWrite map 4\nWrite map 5\nWrite map 6\n...\n>>> alm.writeSuffix(\"./suffix.txt\", statusSuffix)\nWrite suffix 10\nWrite suffix 20\nWrite suffix 30\nWrite suffix 40\nWrite suffix 50\nWrite suffix 60\n...\n>>> alm.writeAbbrs(\"./words.abbr\", statusAbbreviation)\nWrite abbreviation 25\nWrite abbreviation 50\nWrite abbreviation 75\nWrite abbreviation 100\n...\n>>> alm.getAbbrs()\n{13236490857, 189243, 22287680895, 26938511}\n>>> \n>>> alm.getSuffixes()\n{2633, 1662978425, 14279182218, 3468, 47, 28876661395, 29095464659, 2968, 57, 30}\n>>> \n>>> alm.buildArpa(statusBuildArpa)\nBuild ARPA 0\nBuild ARPA 1\nBuild ARPA 2\nBuild ARPA 3\nBuild ARPA 4\nBuild ARPA 5\nBuild ARPA 6\n...\n>>> alm.writeArpa(\"./lm.arpa\", statusWriteArpa)\nWrite ARPA 0\nWrite ARPA 1\nWrite ARPA 2\nWrite ARPA 3\nWrite ARPA 4\nWrite ARPA 5\nWrite ARPA 6\n...\n```\n\n---\n\n### Methods:\n- **setOption** - Library options setting method\n- **unsetOption** - Disable module option method\n\n### Example:\n```python\n>>> import alm\n>>>\n>>> alm.unsetOption(alm.options_t.debug)\n>>> alm.unsetOption(alm.options_t.mixDicts)\n>>> alm.unsetOption(alm.options_t.onlyGood)\n>>> alm.unsetOption(alm.options_t.confidence)\n...\n```\n\n#### Description\n| Options     | Description                                                                              |\n|-------------|------------------------------------------------------------------------------------------|\n| debug       | Flag debug mode                                                                          |\n| stress      | Flag allowing to stress in words                                                         |\n| uppers      | Flag that allows you to correct the case of letters                                      |\n| onlyGood    | Flag allowing to consider words from the white list only                                 |\n| mixDicts    | Flag allowing the use of words consisting of mixed dictionaries                          |\n| allowUnk    | Flag allowing to unknown word                                                            |\n| resetUnk    | Flag to reset the frequency of an unknown word                                           |\n| allGrams    | Flag allowing accounting of all collected n-grams                                        |\n| lowerCase   | Flag allowing to case-insensitive                                                        |\n| confidence  | Flag ARPA file loading without pre-processing the words                                  |\n| tokenWords  | Flag that takes into account when assembling N-grams, only those tokens that match words |\n| interpolate | Flag allowing to use interpolation in estimating                                         |\n\n---\n\n### Methods:\n- **readMap** - Method for reading sequence map from file\n\n### Example:\n```python\n>>> import alm\n>>>\n>>> alm.setLocale(\"en_US.UTF-8\")\n>>>\n>>> alm.setAlphabet(\"абвгдеёжзийклмнопрстуфхцчшщъыьэюяabcdefghijklmnopqrstuvwxyz\")\n>>> alm.setSubstitutes({'p':'р','c':'с','o':'о','t':'т','k':'к','e':'е','a':'а','h':'н','x':'х','b':'в','m':'м'})\n>>>\n>>> alm.setOption(alm.options_t.allowUnk)\n>>> alm.setOption(alm.options_t.resetUnk)\n>>> alm.setOption(alm.options_t.mixDicts)\n>>> \n>>> def statusMap(text, status):\n...     print(\"Read map\", text, status)\n... \n>>> def statusBuildArpa(status):\n...     print(\"Build ARPA\", status)\n... \n>>> def statusPrune(status):\n...     print(\"Prune data\", status)\n... \n>>> def statusVocab(text, status):\n...     print(\"Read Vocab\", text, status)\n... \n>>> def statusWriteArpa(status):\n...     print(\"Write ARPA\", status)\n... \n>>> alm.init(alm.smoothing_t.wittenBell)\n>>> \n>>> p = alm.getParams()\n>>> p.algorithm\n2\n>>> alm.readVocab(\"./lm.vocab\", statusVocab)\nRead Vocab ./lm.vocab 0\nRead Vocab ./lm.vocab 1\nRead Vocab ./lm.vocab 2\nRead Vocab ./lm.vocab 3\nRead Vocab ./lm.vocab 4\nRead Vocab ./lm.vocab 5\nRead Vocab ./lm.vocab 6\n...\n>>> alm.readMap(\"./lm1.map\", statusMap, \"|\")\nRead map ./lm.map 0\nRead map ./lm.map 1\nRead map ./lm.map 2\nRead map ./lm.map 3\nRead map ./lm.map 4\nRead map ./lm.map 5\nRead map ./lm.map 6\n...\n>>> alm.readMap(\"./lm2.map\", statusMap, \"|\")\nRead map ./lm.map 0\nRead map ./lm.map 1\nRead map ./lm.map 2\nRead map ./lm.map 3\nRead map ./lm.map 4\nRead map ./lm.map 5\nRead map ./lm.map 6\n...\n>>> alm.pruneVocab(-15.0, 0, 0, statusPrune)\nPrune data 0\nPrune data 1\nPrune data 2\nPrune data 3\nPrune data 4\nPrune data 5\nPrune data 6\n...\n>>> alm.buildArpa(statusBuildArpa)\nBuild ARPA 0\nBuild ARPA 1\nBuild ARPA 2\nBuild ARPA 3\nBuild ARPA 4\nBuild ARPA 5\nBuild ARPA 6\n...\n>>> alm.writeArpa(\"./lm.arpa\", statusWriteArpa)\nWrite ARPA 0\nWrite ARPA 1\nWrite ARPA 2\nWrite ARPA 3\nWrite ARPA 4\nWrite ARPA 5\nWrite ARPA 6\n...\n>>> def getWords(word, idw, oc, dc, count):\n...     print(word, idw, oc, dc, count)\n...     return True\n... \n>>> alm.words(getWords)\nа 25 244 12 9373\nб 26 11 6 9373\nв 27 757 12 9373\nж 32 12 7 9373\nи 34 823 12 9373\nк 36 102 12 9373\nо 40 63 12 9373\nп 41 1 1 9373\nр 42 1 1 9373\nс 43 290 12 9373\nу 45 113 12 9373\nХ 47 1 1 9373\nя 57 299 12 9373\nD 61 1 1 9373\nI 66 1 1 9373\nда 2179 32 10 9373\nза 2183 92 12 9373\nна 2189 435 12 9373\nпа 2191 1 1 9373\nта 2194 4 4 9373\nоб 2276 20 10 9373\n...\n>>> alm.getStatistic()\n(13, 38124)\n>> alm.setAdCw(44381, 20)\n>>> alm.getStatistic()\n(20, 44381)\n```\n\n### Example:\n```python\n>>> import alm\n>>>\n>>> alm.setAlphabet(\"абвгдеёжзийклмнопрстуфхцчшщъыьэюяabcdefghijklmnopqrstuvwxyz\")\n>>> alm.setSubstitutes({'p':'р','c':'с','o':'о','t':'т','k':'к','e':'е','a':'а','h':'н','x':'х','b':'в','m':'м'})\n>>>\n>>> alm.setOption(alm.options_t.allowUnk)\n>>> alm.setOption(alm.options_t.resetUnk)\n>>> alm.setOption(alm.options_t.mixDicts)\n>>> \n>>> def statusBuildArpa(status):\n...     print(\"Build ARPA\", status)\n... \n>>> def statusPrune(status):\n...     print(\"Prune data\", status)\n... \n>>> def statusNgram(text, status):\n...     print(\"Read Ngram\", text, status)\n... \n>>> def statusWriteArpa(status):\n...     print(\"Write ARPA\", status)\n... \n>>> alm.init(alm.smoothing_t.addSmooth, False, False, 0.5)\n>>> \n>>> p = alm.getParams()\n>>> p.algorithm\n0\n>>> p.mod\n0.5\n>>> p.prepares\nFalse\n>>> p.modified\nFalse\n>>> \n>>> alm.readNgram(\"./lm.ngram\", statusNgram)\nRead Ngram ./lm.ngram 0\nRead Ngram ./lm.ngram 1\nRead Ngram ./lm.ngram 2\nRead Ngram ./lm.ngram 3\nRead Ngram ./lm.ngram 4\nRead Ngram ./lm.ngram 5\nRead Ngram ./lm.ngram 6\n...\n>>> alm.pruneVocab(-15.0, 0, 0, statusPrune)\nPrune data 0\nPrune data 1\nPrune data 2\nPrune data 3\nPrune data 4\nPrune data 5\nPrune data 6\n...\n>>> alm.buildArpa(statusBuildArpa)\nBuild ARPA 0\nBuild ARPA 1\nBuild ARPA 2\nBuild ARPA 3\nBuild ARPA 4\nBuild ARPA 5\nBuild ARPA 6\n...\n>>> alm.writeArpa(\"./lm.arpa\", statusWriteArpa)\nWrite ARPA 0\nWrite ARPA 1\nWrite ARPA 2\nWrite ARPA 3\nWrite ARPA 4\nWrite ARPA 5\nWrite ARPA 6\n...\n```\n\n---\n\n### Methods:\n- **modify** - ARPA modification method\n- **sweep** - ARPA Low Frequency N-gram Removal Method\n- **repair** - Method of repair of previously calculated ARPA\n\n### Example:\n```python\n>>> import alm\n>>>\n>>> alm.setAlphabet(\"абвгдеёжзийклмнопрстуфхцчшщъыьэюяabcdefghijklmnopqrstuvwxyz\")\n>>>\n>>> alm.setOption(alm.options_t.confidence)\n>>> \n>>> def statusSweep(text, status):\n...     print(\"Sweep n-grams\", text, status)\n... \n>>> def statusWriteArpa(status):\n...     print(\"Write ARPA\", status)\n... \n>>> alm.init()\n>>> \n>>> alm.sweep(\"./lm.arpa\", statusSweep)\nSweep n-grams Read ARPA file 0\nSweep n-grams Read ARPA file 1\nSweep n-grams Read ARPA file 2\nSweep n-grams Read ARPA file 3\nSweep n-grams Read ARPA file 4\nSweep n-grams Read ARPA file 5\nSweep n-grams Read ARPA file 6\n...\nSweep n-grams Sweep N-grams 0\nSweep n-grams Sweep N-grams 1\nSweep n-grams Sweep N-grams 2\nSweep n-grams Sweep N-grams 3\nSweep n-grams Sweep N-grams 4\nSweep n-grams Sweep N-grams 5\nSweep n-grams Sweep N-grams 6\n...\n>>> alm.writeArpa(\"./lm.arpa\", statusWriteArpa)\nWrite ARPA 0\nWrite ARPA 1\nWrite ARPA 2\nWrite ARPA 3\nWrite ARPA 4\nWrite ARPA 5\nWrite ARPA 6\n...\n>>> alm.clear()\n>>> \n>>> alm.setAlphabet(\"абвгдеёжзийклмнопрстуфхцчшщъыьэюяabcdefghijklmnopqrstuvwxyz\")\n>>> \n>>> def statusRepair(text, status):\n...     print(\"Repair n-grams\", text, status)\n... \n>>> def statusWriteArpa(status):\n...     print(\"Write ARPA\", status)\n... \n>>> alm.init()\n>>> \n>>> alm.repair(\"./lm.arpa\", statusRepair)\nRepair n-grams Read ARPA file 0\nRepair n-grams Read ARPA file 1\nRepair n-grams Read ARPA file 2\nRepair n-grams Read ARPA file 3\nRepair n-grams Read ARPA file 4\nRepair n-grams Read ARPA file 5\nRepair n-grams Read ARPA file 6\n...\nRepair n-grams Repair ARPA data 0\nRepair n-grams Repair ARPA data 1\nRepair n-grams Repair ARPA data 2\nRepair n-grams Repair ARPA data 3\nRepair n-grams Repair ARPA data 4\nRepair n-grams Repair ARPA data 5\nRepair n-grams Repair ARPA data 6\n...\n>>> alm.writeArpa(\"./lm.arpa\", statusWriteArpa)\nWrite ARPA 0\nWrite ARPA 1\nWrite ARPA 2\nWrite ARPA 3\nWrite ARPA 4\nWrite ARPA 5\nWrite ARPA 6\n...\n>>> alm.clear()\n>>> \n>>> alm.setAlphabet(\"абвгдеёжзийклмнопрстуфхцчшщъыьэюяabcdefghijklmnopqrstuvwxyz\")\n>>> \n>>> def statusModify(text, status):\n...     print(\"Modify ARPA data\", text, status)\n... \n>>> def statusWriteArpa(status):\n...     print(\"Write ARPA\", status)\n... \n>>> alm.init()\n>>> \n>>> alm.modify(\"./lm.arpa\", \"./remove.txt\", alm.modify_t.remove, statusModify)\nModify ARPA data Read ARPA file 0\nModify ARPA data Read ARPA file 1\nModify ARPA data Read ARPA file 2\nModify ARPA data Read ARPA file 3\nModify ARPA data Read ARPA file 4\nModify ARPA data Read ARPA file 5\nModify ARPA data Read ARPA file 6\n...\nModify ARPA data Modify ARPA data 3\nModify ARPA data Modify ARPA data 10\nModify ARPA data Modify ARPA data 15\nModify ARPA data Modify ARPA data 18\nModify ARPA data Modify ARPA data 24\nModify ARPA data Modify ARPA data 30\n...\n>>> alm.writeArpa(\"./lm.arpa\", statusWriteArpa)\nWrite ARPA 0\nWrite ARPA 1\nWrite ARPA 2\nWrite ARPA 3\nWrite ARPA 4\nWrite ARPA 5\nWrite ARPA 6\n...\n```\n\n### Modification flags\n| Name    | Description                                             |\n|---------|---------------------------------------------------------|\n| emplace | Flag of adding n-gram into existing ARPA file           |\n| remove  | Flag of removing n-gram from existing ARPA file         |\n| change  | Flag of changing n-gram frequency in existing ARPA file |\n| replace | Flag of replacing n-gram in existing ARPA file          |\n\n### File of adding n-gram into existing ARPA file\n```\n-3.002006\tСША\n-1.365296\tграниц США\n-0.988534\tу границ США\n-1.759398\tзамуж за\n-0.092796\tсобираюсь замуж за\n-0.474876\tи тоже\n-19.18453\tможно и тоже\n...\n```\n\n| N-gram frequency      | Separator   | N-gram       |\n|-----------------------|-------------|--------------|\n| -0.988534             | \\t          | у границ США |\n\n### File of changing n-gram frequency in existing ARPA file\n```\n-0.6588787\tполучайте удовольствие </s>\n-0.6588787\tтолько в одном\n-0.6588787\tработа связана с\n-0.6588787\tмужчины и женщины\n-0.6588787\tговоря про то\n-0.6588787\tпотому что я\n-0.6588787\tпотому что это\n-0.6588787\tработу потому что\n-0.6588787\tпейзажи за окном\n-0.6588787\tстатусы для одноклассников\n-0.6588787\tвообще не хочу\n...\n```\n\n| N-gram frequency      | Separator   | N-gram            |\n|-----------------------|-------------|-------------------|\n| -0.6588787            | \\t          | мужчины и женщины |\n\n### File of replacing n-gram in existing ARPA file\n```\nкоем случае нельзя\tтам да тут\nно тем не\tда ты что\nнеожиданный у\tожидаемый к\nв СМИ\tв ФСБ\nШах\tМат\n...\n```\n\n| Existing N-gram       | Separator   | New N-gram        |\n|-----------------------|-------------|-------------------|\n| но тем не             | \\t          | да ты что         |\n\n### File of removing n-gram from existing ARPA file\n```\nну то есть\nну очень большой\nбы было если\nмы с ней\nты смеешься над\nдва года назад\nнад тем что\nили еще что-то\nкак я понял\nкак ни удивительно\nкак вы знаете\nтак и не\nвсе-таки права\nвсе-таки болят\nвсе-таки сдохло\nвсе-таки встала\nвсе-таки решился\nуже\nмне\nмое\nвсе\n...\n```\n\n---\n\n### Methods:\n- **mix** - Multiple ARPA Interpolation Method [backward = True, forward = False]\n- **mix** - Interpolation method of multiple arpa algorithms (Bayesian and Logarithmic-linear) [Bayes: length > 0, Loglinear: length == 0]\n\n### Example:\n```python\n>>> import alm\n>>> \n>>> alm.setAlphabet(\"абвгдеёжзийклмнопрстуфхцчшщъыьэюяabcdefghijklmnopqrstuvwxyz\")\n>>> \n>>> alm.setOption(alm.options_t.confidence)\n>>> \n>>> def statusMix(text, status):\n...     print(\"Mix ARPA data\", text, status)\n... \n>>> def statusWriteArpa(status):\n...     print(\"Write ARPA\", status)\n... \n>>> alm.init()\n>>> \n>>> alm.mix([\"./lm1.arpa\", \"./lm2.arpa\"], [0.02, 0.05], True, statusMix)\nMix ARPA data ./lm1.arpa 0\nMix ARPA data ./lm1.arpa 1\nMix ARPA data ./lm1.arpa 2\nMix ARPA data ./lm1.arpa 3\nMix ARPA data ./lm1.arpa 4\nMix ARPA data ./lm1.arpa 5\nMix ARPA data ./lm1.arpa 6\n...\nMix ARPA data  0\nMix ARPA data  1\nMix ARPA data  2\nMix ARPA data  3\nMix ARPA data  4\nMix ARPA data  5\nMix ARPA data  6\n>>> alm.writeArpa(\"./lm.arpa\", statusWriteArpa)\nWrite ARPA 0\nWrite ARPA 1\nWrite ARPA 2\nWrite ARPA 3\nWrite ARPA 4\nWrite ARPA 5\nWrite ARPA 6\n...\n>>> alm.clear()\n>>> \n>>> alm.setAlphabet(\"абвгдеёжзийклмнопрстуфхцчшщъыьэюяabcdefghijklmnopqrstuvwxyz\")\n>>> \n>>> def statusMix(text, status):\n...     print(\"Mix ARPA data\", text, status)\n... \n>>> def statusWriteArpa(status):\n...     print(\"Write ARPA\", status)\n... \n>>> alm.init()\n>>> \n>>> alm.mix([\"./lm1.arpa\", \"./lm2.arpa\"], [0.02, 0.05], 0, 0.032, statusMix)\nMix ARPA data ./lm1.arpa 0\nMix ARPA data ./lm1.arpa 1\nMix ARPA data ./lm1.arpa 2\nMix ARPA data ./lm1.arpa 3\nMix ARPA data ./lm1.arpa 4\nMix ARPA data ./lm1.arpa 5\nMix ARPA data ./lm1.arpa 6\n...\nMix ARPA data  0\nMix ARPA data  1\nMix ARPA data  2\nMix ARPA data  3\nMix ARPA data  4\nMix ARPA data  5\nMix ARPA data  6\n>>> alm.writeArpa(\"./lm.arpa\", statusWriteArpa)\nWrite ARPA 0\nWrite ARPA 1\nWrite ARPA 2\nWrite ARPA 3\nWrite ARPA 4\nWrite ARPA 5\nWrite ARPA 6\n...\n```\n\n---\n\n### Methods:\n- **size** - Method of obtaining the size of the N-gram\n\n### Example:\n```python\n>>> import alm\n>>>\n>>> alm.setOption(alm.options_t.confidence)\n>>>\n>>> alm.setAlphabet(\"abcdefghijklmnopqrstuvwxyzабвгдеёжзийклмнопрстуфхцчшщъыьэюя\")\n>>>\n>>> alm.readArpa('./lm.arpa')\n>>>\n>>> alm.size()\n3\n```\n\n---\n\n### Methods:\n- **damerauLevenshtein** - Determination of the Damerau-Levenshtein distance in phrases\n- **distanceLevenshtein** - Determination of Levenshtein distance in phrases\n- **tanimoto** - Method for determining Jaccard coefficient (quotient - Tanimoto coefficient)\n- **needlemanWunsch** - Word stretching method\n\n### Example:\n```python\n>>> import alm\n>>> alm.damerauLevenshtein(\"привет\", \"приветик\")\n2\n>>> \n>>> alm.damerauLevenshtein(\"приевтик\", \"приветик\")\n1\n>>> \n>>> alm.distanceLevenshtein(\"приевтик\", \"приветик\")\n2\n>>> \n>>> alm.tanimoto(\"привет\", \"приветик\")\n0.7142857142857143\n>>> \n>>> alm.tanimoto(\"привеитк\", \"приветик\")\n0.4\n>>> \n>>> alm.needlemanWunsch(\"привеитк\", \"приветик\")\n4\n>>> \n>>> alm.needlemanWunsch(\"привет\", \"приветик\")\n2\n>>> \n>>> alm.damerauLevenshtein(\"acre\", \"car\")\n2\n>>> alm.distanceLevenshtein(\"acre\", \"car\")\n3\n>>> \n>>> alm.damerauLevenshtein(\"anteater\", \"theatre\")\n4\n>>> alm.distanceLevenshtein(\"anteater\", \"theatre\")\n5\n>>> \n>>> alm.damerauLevenshtein(\"banana\", \"nanny\")\n3\n>>> alm.distanceLevenshtein(\"banana\", \"nanny\")\n3\n>>> \n>>> alm.damerauLevenshtein(\"cat\", \"crate\")\n2\n>>> alm.distanceLevenshtein(\"cat\", \"crate\")\n2\n>>>\n>>> alm.mulctLevenshtein(\"привет\", \"приветик\")\n4\n>>>\n>>> alm.mulctLevenshtein(\"приевтик\", \"приветик\")\n1\n>>>\n>>> alm.mulctLevenshtein(\"acre\", \"car\")\n3\n>>>\n>>> alm.mulctLevenshtein(\"anteater\", \"theatre\")\n5\n>>>\n>>> alm.mulctLevenshtein(\"banana\", \"nanny\")\n4\n>>>\n>>> alm.mulctLevenshtein(\"cat\", \"crate\")\n4\n```\n\n---\n\n### Methods:\n- **textToJson** - Method to convert text to JSON\n- **isAllowApostrophe** - Apostrophe permission check method\n- **switchAllowApostrophe** - Method for permitting or denying an apostrophe as part of a word\n\n### Example:\n```python\n>>> import alm\n>>>\n>>> def callbackFn(text):\n...     print(text)\n... \n>>> alm.isAllowApostrophe()\nFalse\n>>> alm.switchAllowApostrophe()\n>>>\n>>> alm.isAllowApostrophe()\nTrue\n>>> alm.textToJson(\"«On nous dit qu'aujourd'hui c'est le cas, encore faudra-t-il l'évaluer» l'astronomie\", callbackFn)\n[[\"«\",\"On\",\"nous\",\"dit\",\"qu'aujourd'hui\",\"c'est\",\"le\",\"cas\",\",\",\"encore\",\"faudra-t-il\",\"l'évaluer\",\"»\",\"l'astronomie\"]]\n```\n\n---\n\n### Methods:\n- **jsonToText** - Method to convert JSON to text\n\n### Example:\n```python\n>>> import alm\n>>>\n>>> def callbackFn(text):\n...     print(text)\n... \n>>> alm.jsonToText('[[\"«\",\"On\",\"nous\",\"dit\",\"qu\\'aujourd\\'hui\",\"c\\'est\",\"le\",\"cas\",\",\",\"encore\",\"faudra-t-il\",\"l\\'évaluer\",\"»\",\"l\\'astronomie\"]]', callbackFn)\n«On nous dit qu'aujourd'hui c'est le cas, encore faudra-t-il l'évaluer» l'astronomie\n```\n\n---\n\n### Methods:\n- **restore** - Method for restore text from context\n\n### Example:\n```python\n>>> import alm\n>>>\n>>> alm.setOption(alm.options_t.uppers)\n>>>\n>>> alm.restore([\"«\",\"On\",\"nous\",\"dit\",\"qu\\'aujourd\\'hui\",\"c\\'est\",\"le\",\"cas\",\",\",\"encore\",\"faudra-t-il\",\"l\\'évaluer\",\"»\",\"l\\'astronomie\"])\n\"«On nous dit qu'aujourd'hui c'est le cas, encore faudra-t-il l'évaluer» l'astronomie\"\n```\n\n---\n\n### Methods:\n- **allowStress** - Method for allow using stress in words\n- **disallowStress** - Method for disallow using stress in words\n\n### Example:\n```python\n>>> import alm\n>>>\n>>> alm.setAlphabet(\"abcdefghijklmnopqrstuvwxyzабвгдеёжзийклмнопрстуфхцчшщъыьэюя\")\n>>>\n>>> def callbackFn(text):\n...     print(text)\n... \n>>> alm.textToJson('«Бе́лая стрела́» — согласно распространённой в 1990-е годы в России городской легенде, якобы специально организованная и подготовленная законспирированная правительственная спецслужба, сотрудники которой — бывшие и действовавшие милиционеры и спецназовцы, имеющие право на физическую ликвидацию особо опасных уголовных авторитетов и лидеров орудовавших в России ОПГ, относительно которых не представляется возможным привлечения их к уголовной ответственности законными методами[1][2][3]. Несмотря на отсутствие официальных доказательств существования организации и многочисленные опровержения со стороны силовых структур и служб безопасности[4], в российском обществе легенду считают основанной на подлинных фактах громких убийств криминальных авторитетов, совершённых в 1990-е годы, и не исключают существование реальной спецслужбы[5].', callbackFn)\n[[\"«\",\"Белая\",\"стрела\",\"»\",\"—\",\"согласно\",\"распространённой\",\"в\",\"1990-е\",\"годы\",\"в\",\"России\",\"городской\",\"легенде\",\",\",\"якобы\",\"специально\",\"организованная\",\"и\",\"подготовленная\",\"законспирированная\",\"правительственная\",\"спецслужба\",\",\",\"сотрудники\",\"которой\",\"—\",\"бывшие\",\"и\",\"действовавшие\",\"милиционеры\",\"и\",\"спецназовцы\",\",\",\"имеющие\",\"право\",\"на\",\"физическую\",\"ликвидацию\",\"особо\",\"опасных\",\"уголовных\",\"авторитетов\",\"и\",\"лидеров\",\"орудовавших\",\"в\",\"России\",\"ОПГ\",\",\",\"относительно\",\"которых\",\"не\",\"представляется\",\"возможным\",\"привлечения\",\"их\",\"к\",\"уголовной\",\"ответственности\",\"законными\",\"методами\",\"[\",\"1\",\"]\",\"[\",\"2\",\"]\",\"[\",\"3\",\"]\",\".\"],[\"Несмотря\",\"на\",\"отсутствие\",\"официальных\",\"доказательств\",\"существования\",\"организации\",\"и\",\"многочисленные\",\"опровержения\",\"со\",\"стороны\",\"силовых\",\"структур\",\"и\",\"служб\",\"безопасности\",\"[\",\"4\",\"]\",\",\",\"в\",\"российском\",\"обществе\",\"легенду\",\"считают\",\"основанной\",\"на\",\"подлинных\",\"фактах\",\"громких\",\"убийств\",\"криминальных\",\"авторитетов\",\",\",\"совершённых\",\"в\",\"1990-е\",\"годы\",\",\",\"и\",\"не\",\"исключают\",\"существование\",\"реальной\",\"спецслужбы\",\"[\",\"5\",\"]\",\".\"]]\n>>>\n>>> alm.jsonToText('[[\"«\",\"Белая\",\"стрела\",\"»\",\"—\",\"согласно\",\"распространённой\",\"в\",\"1990-е\",\"годы\",\"в\",\"России\",\"городской\",\"легенде\",\",\",\"якобы\",\"специально\",\"организованная\",\"и\",\"подготовленная\",\"законспирированная\",\"правительственная\",\"спецслужба\",\",\",\"сотрудники\",\"которой\",\"—\",\"бывшие\",\"и\",\"действовавшие\",\"милиционеры\",\"и\",\"спецназовцы\",\",\",\"имеющие\",\"право\",\"на\",\"физическую\",\"ликвидацию\",\"особо\",\"опасных\",\"уголовных\",\"авторитетов\",\"и\",\"лидеров\",\"орудовавших\",\"в\",\"России\",\"ОПГ\",\",\",\"относительно\",\"которых\",\"не\",\"представляется\",\"возможным\",\"привлечения\",\"их\",\"к\",\"уголовной\",\"ответственности\",\"законными\",\"методами\",\"[\",\"1\",\"]\",\"[\",\"2\",\"]\",\"[\",\"3\",\"]\",\".\"],[\"Несмотря\",\"на\",\"отсутствие\",\"официальных\",\"доказательств\",\"существования\",\"организации\",\"и\",\"многочисленные\",\"опровержения\",\"со\",\"стороны\",\"силовых\",\"структур\",\"и\",\"служб\",\"безопасности\",\"[\",\"4\",\"]\",\",\",\"в\",\"российском\",\"обществе\",\"легенду\",\"считают\",\"основанной\",\"на\",\"подлинных\",\"фактах\",\"громких\",\"убийств\",\"криминальных\",\"авторитетов\",\",\",\"совершённых\",\"в\",\"1990-е\",\"годы\",\",\",\"и\",\"не\",\"исключают\",\"существование\",\"реальной\",\"спецслужбы\",\"[\",\"5\",\"]\",\".\"]]', callbackFn)\n«Белая стрела» — согласно распространённой в 1990-е годы в России городской легенде, якобы специально организованная и подготовленная законспирированная правительственная спецслужба, сотрудники которой — бывшие и действовавшие милиционеры и спецназовцы, имеющие право на физическую ликвидацию особо опасных уголовных авторитетов и лидеров орудовавших в России ОПГ, относительно которых не представляется возможным привлечения их к уголовной ответственности законными методами [1] [2] [3].\nНесмотря на отсутствие официальных доказательств существования организации и многочисленные опровержения со стороны силовых структур и служб безопасности [4], в российском обществе легенду считают основанной на подлинных фактах громких убийств криминальных авторитетов, совершённых в 1990-е годы, и не исключают существование реальной спецслужбы [5].\n>>>\n>>> alm.allowStress()\n>>> alm.textToJson('«Бе́лая стрела́» — согласно распространённой в 1990-е годы в России городской легенде, якобы специально организованная и подготовленная законспирированная правительственная спецслужба, сотрудники которой — бывшие и действовавшие милиционеры и спецназовцы, имеющие право на физическую ликвидацию особо опасных уголовных авторитетов и лидеров орудовавших в России ОПГ, относительно которых не представляется возможным привлечения их к уголовной ответственности законными методами[1][2][3]. Несмотря на отсутствие официальных доказательств существования организации и многочисленные опровержения со стороны силовых структур и служб безопасности[4], в российском обществе легенду считают основанной на подлинных фактах громких убийств криминальных авторитетов, совершённых в 1990-е годы, и не исключают существование реальной спецслужбы[5].', callbackFn)\n[[\"«\",\"Бе́лая\",\"стрела́\",\"»\",\"—\",\"согласно\",\"распространённой\",\"в\",\"1990-е\",\"годы\",\"в\",\"России\",\"городской\",\"легенде\",\",\",\"якобы\",\"специально\",\"организованная\",\"и\",\"подготовленная\",\"законспирированная\",\"правительственная\",\"спецслужба\",\",\",\"сотрудники\",\"которой\",\"—\",\"бывшие\",\"и\",\"действовавшие\",\"милиционеры\",\"и\",\"спецназовцы\",\",\",\"имеющие\",\"право\",\"на\",\"физическую\",\"ликвидацию\",\"особо\",\"опасных\",\"уголовных\",\"авторитетов\",\"и\",\"лидеров\",\"орудовавших\",\"в\",\"России\",\"ОПГ\",\",\",\"относительно\",\"которых\",\"не\",\"представляется\",\"возможным\",\"привлечения\",\"их\",\"к\",\"уголовной\",\"ответственности\",\"законными\",\"методами\",\"[\",\"1\",\"]\",\"[\",\"2\",\"]\",\"[\",\"3\",\"]\",\".\"],[\"Несмотря\",\"на\",\"отсутствие\",\"официальных\",\"доказательств\",\"существования\",\"организации\",\"и\",\"многочисленные\",\"опровержения\",\"со\",\"стороны\",\"силовых\",\"структур\",\"и\",\"служб\",\"безопасности\",\"[\",\"4\",\"]\",\",\",\"в\",\"российском\",\"обществе\",\"легенду\",\"считают\",\"основанной\",\"на\",\"подлинных\",\"фактах\",\"громких\",\"убийств\",\"криминальных\",\"авторитетов\",\",\",\"совершённых\",\"в\",\"1990-е\",\"годы\",\",\",\"и\",\"не\",\"исключают\",\"существование\",\"реальной\",\"спецслужбы\",\"[\",\"5\",\"]\",\".\"]]\n>>>\n>>> alm.jsonToText('[[\"«\",\"Бе́лая\",\"стрела́\",\"»\",\"—\",\"согласно\",\"распространённой\",\"в\",\"1990-е\",\"годы\",\"в\",\"России\",\"городской\",\"легенде\",\",\",\"якобы\",\"специально\",\"организованная\",\"и\",\"подготовленная\",\"законспирированная\",\"правительственная\",\"спецслужба\",\",\",\"сотрудники\",\"которой\",\"—\",\"бывшие\",\"и\",\"действовавшие\",\"милиционеры\",\"и\",\"спецназовцы\",\",\",\"имеющие\",\"право\",\"на\",\"физическую\",\"ликвидацию\",\"особо\",\"опасных\",\"уголовных\",\"авторитетов\",\"и\",\"лидеров\",\"орудовавших\",\"в\",\"России\",\"ОПГ\",\",\",\"относительно\",\"которых\",\"не\",\"представляется\",\"возможным\",\"привлечения\",\"их\",\"к\",\"уголовной\",\"ответственности\",\"законными\",\"методами\",\"[\",\"1\",\"]\",\"[\",\"2\",\"]\",\"[\",\"3\",\"]\",\".\"],[\"Несмотря\",\"на\",\"отсутствие\",\"официальных\",\"доказательств\",\"существования\",\"организации\",\"и\",\"многочисленные\",\"опровержения\",\"со\",\"стороны\",\"силовых\",\"структур\",\"и\",\"служб\",\"безопасности\",\"[\",\"4\",\"]\",\",\",\"в\",\"российском\",\"обществе\",\"легенду\",\"считают\",\"основанной\",\"на\",\"подлинных\",\"фактах\",\"громких\",\"убийств\",\"криминальных\",\"авторитетов\",\",\",\"совершённых\",\"в\",\"1990-е\",\"годы\",\",\",\"и\",\"не\",\"исключают\",\"существование\",\"реальной\",\"спецслужбы\",\"[\",\"5\",\"]\",\".\"]]', callbackFn)\n«Бе́лая стрела́» — согласно распространённой в 1990-е годы в России городской легенде, якобы специально организованная и подготовленная законспирированная правительственная спецслужба, сотрудники которой — бывшие и действовавшие милиционеры и спецназовцы, имеющие право на физическую ликвидацию особо опасных уголовных авторитетов и лидеров орудовавших в России ОПГ, относительно которых не представляется возможным привлечения их к уголовной ответственности законными методами [1] [2] [3].\nНесмотря на отсутствие официальных доказательств существования организации и многочисленные опровержения со стороны силовых структур и служб безопасности [4], в российском обществе легенду считают основанной на подлинных фактах громких убийств криминальных авторитетов, совершённых в 1990-е годы, и не исключают существование реальной спецслужбы [5].\n>>>\n>>> alm.disallowStress()\n>>> alm.textToJson('«Бе́лая стрела́» — согласно распространённой в 1990-е годы в России городской легенде, якобы специально организованная и подготовленная законспирированная правительственная спецслужба, сотрудники которой — бывшие и действовавшие милиционеры и спецназовцы, имеющие право на физическую ликвидацию особо опасных уголовных авторитетов и лидеров орудовавших в России ОПГ, относительно которых не представляется возможным привлечения их к уголовной ответственности законными методами[1][2][3]. Несмотря на отсутствие официальных доказательств существования организации и многочисленные опровержения со стороны силовых структур и служб безопасности[4], в российском обществе легенду считают основанной на подлинных фактах громких убийств криминальных авторитетов, совершённых в 1990-е годы, и не исключают существование реальной спецслужбы[5].', callbackFn)\n[[\"«\",\"Белая\",\"стрела\",\"»\",\"—\",\"согласно\",\"распространённой\",\"в\",\"1990-е\",\"годы\",\"в\",\"России\",\"городской\",\"легенде\",\",\",\"якобы\",\"специально\",\"организованная\",\"и\",\"подготовленная\",\"законспирированная\",\"правительственная\",\"спецслужба\",\",\",\"сотрудники\",\"которой\",\"—\",\"бывшие\",\"и\",\"действовавшие\",\"милиционеры\",\"и\",\"спецназовцы\",\",\",\"имеющие\",\"право\",\"на\",\"физическую\",\"ликвидацию\",\"особо\",\"опасных\",\"уголовных\",\"авторитетов\",\"и\",\"лидеров\",\"орудовавших\",\"в\",\"России\",\"ОПГ\",\",\",\"относительно\",\"которых\",\"не\",\"представляется\",\"возможным\",\"привлечения\",\"их\",\"к\",\"уголовной\",\"ответственности\",\"законными\",\"методами\",\"[\",\"1\",\"]\",\"[\",\"2\",\"]\",\"[\",\"3\",\"]\",\".\"],[\"Несмотря\",\"на\",\"отсутствие\",\"официальных\",\"доказательств\",\"существования\",\"организации\",\"и\",\"многочисленные\",\"опровержения\",\"со\",\"стороны\",\"силовых\",\"структур\",\"и\",\"служб\",\"безопасности\",\"[\",\"4\",\"]\",\",\",\"в\",\"российском\",\"обществе\",\"легенду\",\"считают\",\"основанной\",\"на\",\"подлинных\",\"фактах\",\"громких\",\"убийств\",\"криминальных\",\"авторитетов\",\",\",\"совершённых\",\"в\",\"1990-е\",\"годы\",\",\",\"и\",\"не\",\"исключают\",\"существование\",\"реальной\",\"спецслужбы\",\"[\",\"5\",\"]\",\".\"]]\n>>>\n>>> alm.jsonToText('[[\"«\",\"Белая\",\"стрела\",\"»\",\"—\",\"согласно\",\"распространённой\",\"в\",\"1990-е\",\"годы\",\"в\",\"России\",\"городской\",\"легенде\",\",\",\"якобы\",\"специально\",\"организованная\",\"и\",\"подготовленная\",\"законспирированная\",\"правительственная\",\"спецслужба\",\",\",\"сотрудники\",\"которой\",\"—\",\"бывшие\",\"и\",\"действовавшие\",\"милиционеры\",\"и\",\"спецназовцы\",\",\",\"имеющие\",\"право\",\"на\",\"физическую\",\"ликвидацию\",\"особо\",\"опасных\",\"уголовных\",\"авторитетов\",\"и\",\"лидеров\",\"орудовавших\",\"в\",\"России\",\"ОПГ\",\",\",\"относительно\",\"которых\",\"не\",\"представляется\",\"возможным\",\"привлечения\",\"их\",\"к\",\"уголовной\",\"ответственности\",\"законными\",\"методами\",\"[\",\"1\",\"]\",\"[\",\"2\",\"]\",\"[\",\"3\",\"]\",\".\"],[\"Несмотря\",\"на\",\"отсутствие\",\"официальных\",\"доказательств\",\"существования\",\"организации\",\"и\",\"многочисленные\",\"опровержения\",\"со\",\"стороны\",\"силовых\",\"структур\",\"и\",\"служб\",\"безопасности\",\"[\",\"4\",\"]\",\",\",\"в\",\"российском\",\"обществе\",\"легенду\",\"считают\",\"основанной\",\"на\",\"подлинных\",\"фактах\",\"громких\",\"убийств\",\"криминальных\",\"авторитетов\",\",\",\"совершённых\",\"в\",\"1990-е\",\"годы\",\",\",\"и\",\"не\",\"исключают\",\"существование\",\"реальной\",\"спецслужбы\",\"[\",\"5\",\"]\",\".\"]]', callbackFn)\n«Белая стрела» — согласно распространённой в 1990-е годы в России городской легенде, якобы специально организованная и подготовленная законспирированная правительственная спецслужба, сотрудники которой — бывшие и действовавшие милиционеры и спецназовцы, имеющие право на физическую ликвидацию особо опасных уголовных авторитетов и лидеров орудовавших в России ОПГ, относительно которых не представляется возможным привлечения их к уголовной ответственности законными методами [1] [2] [3].\nНесмотря на отсутствие официальных доказательств существования организации и многочисленные опровержения со стороны силовых структур и служб безопасности [4], в российском обществе легенду считают основанной на подлинных фактах громких убийств криминальных авторитетов, совершённых в 1990-е годы, и не исключают существование реальной спецслужбы [5].\n```\n\n---\n\n### Methods:\n- **addBadword** - Method add bad word\n- **setBadwords** - Method set words to blacklist\n- **getBadwords** - Method get words in blacklist\n\n### Example:\n```python\n>>> import alm\n>>>\n>>> alm.setBadwords([\"hello\", \"world\", \"test\"])\n>>>\n>>> alm.getBadwords()\n{1554834897, 2156498622, 28307030}\n>>>\n>>> alm.addBadword(\"test2\")\n>>>\n>>> alm.getBadwords()\n{5170183734, 1554834897, 2156498622, 28307030}\n```\n\n### Example:\n```python\n>>> import alm\n>>>\n>>> alm.setBadwords({24227504, 1219922507, 1794085167})\n>>>\n>>> alm.getBadwords()\n{24227504, 1219922507, 1794085167}\n>>>\n>>> alm.clear(alm.clear_t.badwords)\n>>>\n>>> alm.getBadwords()\n{}\n```\n\n---\n\n### Methods:\n- **addGoodword** - Method add good word\n- **setGoodwords** - Method set words to whitelist\n- **getGoodwords** - Method get words in whitelist\n\n### Example:\n```python\n>>> import alm\n>>>\n>>> alm.setGoodwords([\"hello\", \"world\", \"test\"])\n>>>\n>>> alm.getGoodwords()\n{1554834897, 2156498622, 28307030}\n>>>\n>>> alm.addGoodword(\"test2\")\n>>>\n>>> alm.getGoodwords()\n{5170183734, 1554834897, 2156498622, 28307030}\n>>>\n>>> alm.clear(alm.clear_t.goodwords)\n>>>\n>>  alm.getGoodwords()\n{}\n```\n\n### Example:\n```python\n>>> import alm\n>>>\n>>> alm.setGoodwords({24227504, 1219922507, 1794085167})\n>>>\n>>> alm.getGoodwords()\n{24227504, 1219922507, 1794085167}\n```\n\n---\n\n### Methods:\n- **setUserToken** - Method for adding user token\n- **getUserTokens** - User token list retrieval method\n- **getUserTokenId** - Method for obtaining user token identifier\n- **getUserTokenWord** - Method for obtaining a custom token by its identifier\n\n### Example:\n```python\n>>> import alm\n>>>\n>>> alm.setUserToken(\"usa\")\n>>>\n>>> alm.setUserToken(\"russia\")\n>>>\n>>> alm.getUserTokenId(\"usa\")\n5759809081\n>>>\n>>> alm.getUserTokenId(\"russia\")\n9910674734\n>>>\n>>> alm.getUserTokens()\n['usa', 'russia']\n>>>\n>>> alm.getUserTokenWord(5759809081)\n'usa'\n>>>\n>>> alm.getUserTokenWord(9910674734)\n'russia'\n>>>\n>> alm.clear(alm.clear_t.utokens)\n>>>\n>>> alm.getUserTokens()\n[]\n```\n\n---\n\n### Methods:\n- **findNgram** - N-gram search method in text\n- **word** - \"Method to extract a word by its identifier\"\n\n### Example:\n```python\n>>> import alm\n>>> \n>>> def callbackFn(text):\n...     print(text)\n... \n>>> alm.setOption(alm.options_t.confidence)\n>>> alm.setAlphabet(\"abcdefghijklmnopqrstuvwxyzабвгдеёжзийклмнопрстуфхцчшщъыьэюя\")\n>>> alm.readArpa('./lm.arpa')\n>>> \n>>> alm.idw(\"привет\")\n2487910648\n>>> alm.word(2487910648)\n'привет'\n>>> \n>>> alm.findNgram(\"Особое место занимает чудотворная икона Лобзание Христа Иудою\", callbackFn)\n<s> Особое\nОсобое место\nместо занимает\nзанимает чудотворная\nчудотворная икона\nикона Лобзание\nЛобзание Христа\nХриста Иудою\nИудою </s>\n\n\n>>>\n```\n\n---\n\n### Methods:\n- **setUserTokenMethod** - Method for set a custom token processing function\n\n### Example:\n```python\n>>> import alm\n>>>\n>>> def fn(token, word):\n...     if token and (token == \"<usa>\"):\n...         if word and (word.lower() == \"usa\"):\n...             return True\n...     elif token and (token == \"<russia>\"):\n...         if word and (word.lower() == \"russia\"):\n...             return True\n...     return False\n... \n>>> alm.setUserToken(\"usa\")\n>>>\n>>> alm.setUserToken(\"russia\")\n>>>\n>>> alm.setUserTokenMethod(\"usa\", fn)\n>>>\n>>> alm.setUserTokenMethod(\"russia\", fn)\n>>>\n>>> alm.idw(\"usa\")\n5759809081\n>>>\n>>> alm.idw(\"russia\")\n9910674734\n>>>\n>>> alm.getUserTokenWord(5759809081)\n'usa'\n>>>\n>>> alm.getUserTokenWord(9910674734)\n'russia'\n```\n\n---\n\n### Methods:\n- **setAlmV2** - Method for set the language model type ALMv2\n- **unsetAlmV2** - Method for unset the language model type ALMv2\n- **readALM** - Method for reading data from a binary container\n- **setWordPreprocessingMethod** - Method for set the word preprocessing function\n\n### Example:\n```python\n>>> import alm\n>>> \n>>> alm.setAlmV2()\n>>> \n>>> def run(word, context):\n...     if word == \"возле\": word = \"около\"\n...     return word\n... \n>>> alm.setOption(alm.options_t.debug)\n>>>\n>>> alm.setOption(alm.options_t.confidence)\n>>>\n>>> alm.setAlphabet(\"abcdefghijklmnopqrstuvwxyzабвгдеёжзийклмнопрстуфхцчшщъыьэюя\")\n>>>\n>>> alm.readArpa('./lm.arpa')\n>>>\n>>> alm.setWordPreprocessingMethod(run)\n>>>\n>>> a = alm.perplexity(\"неожиданно из подворотни в Олега ударил яркий прожектор патрульный трактор???с лязгом выкатился и остановился возле мальчика....\")\ninfo: <s> Неожиданно из подворотни в Олега ударил яркий прожектор патрульный трактор <punct> <punct> <punct> </s>\n\ninfo: p( неожиданно | <s> ) \t= [2gram] 0.00038931 [ -3.40969900 ] / 0.99999991\ninfo: p( из | неожиданно ...) \t= [2gram] 0.10110741 [ -0.99521700 ] / 0.99999979\ninfo: p( подворотни | из ...) \t= [2gram] 0.00711798 [ -2.14764300 ] / 1.00000027\ninfo: p( в | подворотни ...) \t= [2gram] 0.51077661 [ -0.29176900 ] / 1.00000021\ninfo: p( олега | в ...) \t= [2gram] 0.00082936 [ -3.08125500 ] / 0.99999974\ninfo: p( ударил | олега ...) \t= [2gram] 0.25002820 [ -0.60201100 ] / 0.99999978\ninfo: p( яркий | ударил ...) \t= [2gram] 0.50002878 [ -0.30100500 ] / 1.00000034\ninfo: p( прожектор | яркий ...) \t= [2gram] 0.50002878 [ -0.30100500 ] / 1.00000034\ninfo: p( патрульный | прожектор ...) \t= [2gram] 0.50002878 [ -0.30100500 ] / 1.00000034\ninfo: p( трактор | патрульный ...) \t= [2gram] 0.50002878 [ -0.30100500 ] / 1.00000034\ninfo: p( <punct> | трактор ...) \t= [OOV] 0.00000000 [ -inf ] / 0.99999973\ninfo: p( <punct> | <punct> ...) \t= [OOV] 0.00000000 [ -inf ] / 0.99999993\ninfo: p( <punct> | <punct> ...) \t= [OOV] 0.00000000 [ -inf ] / 0.99999993\ninfo: p( </s> | <punct> ...) \t= [1gram] 0.05693430 [ -1.24462600 ] / 0.99999993\n\ninfo: 1 sentences, 13 words, 0 OOVs\ninfo: 3 zeroprobs, logprob= -12.97624000 ppl= 8.45034200 ppl1= 9.95800426\n\ninfo: <s> С лязгом выкатился и остановился около мальчика <punct> <punct> <punct> <punct> </s>\n\ninfo: p( с | <s> ) \t= [2gram] 0.00642448 [ -2.19216200 ] / 0.99999991\ninfo: p( лязгом | с ...) \t= [2gram] 0.00195917 [ -2.70792700 ] / 0.99999999\ninfo: p( выкатился | лязгом ...) \t= [2gram] 0.50002878 [ -0.30100500 ] / 1.00000034\ninfo: p( и | выкатился ...) \t= [2gram] 0.51169951 [ -0.29098500 ] / 1.00000024\ninfo: p( остановился | и ...) \t= [2gram] 0.00143382 [ -2.84350600 ] / 0.99999975\ninfo: p( около | остановился ...) \t= [1gram] 0.00011358 [ -3.94468000 ] / 1.00000003\ninfo: p( мальчика | около ...) \t= [1gram] 0.00003932 [ -4.40541100 ] / 1.00000016\ninfo: p( <punct> | мальчика ...) \t= [OOV] 0.00000000 [ -inf ] / 0.99999990\ninfo: p( <punct> | <punct> ...) \t= [OOV] 0.00000000 [ -inf ] / 0.99999993\ninfo: p( <punct> | <punct> ...) \t= [OOV] 0.00000000 [ -inf ] / 0.99999993\ninfo: p( <punct> | <punct> ...) \t= [OOV] 0.00000000 [ -inf ] / 0.99999993\ninfo: p( </s> | <punct> ...) \t= [1gram] 0.05693430 [ -1.24462600 ] / 0.99999993\n\ninfo: 1 sentences, 11 words, 0 OOVs\ninfo: 4 zeroprobs, logprob= -17.93030200 ppl= 31.20267541 ppl1= 42.66064865\n>>> print(a.logprob)\n-30.906542\n```\n\n### Example:\n```python\n>>> import alm\n>>> \n>>> alm.setAlmV2()\n>>> \n>>> alm.setOption(alm.options_t.debug)\n>>>\n>>> alm.setOption(alm.options_t.confidence)\n>>>\n>>> alm.setAlphabet(\"abcdefghijklmnopqrstuvwxyzабвгдеёжзийклмнопрстуфхцчшщъыьэюя\")\n>>>\n>>> def statusAlm(status):\n...     print(\"Read ALM\", status)\n... \n>>> alm.readALM(\"./lm.alm\", \"password\", 128, statusAlm)\nRead ALM 0\nRead ALM 1\nRead ALM 2\nRead ALM 3\nRead ALM 4\nRead ALM 5\nRead ALM 6\n...\n>>>\n>>> a = alm.perplexity(\"неожиданно из подворотни в Олега ударил яркий прожектор патрульный трактор???с лязгом выкатился и остановился возле мальчика....\")\ninfo: <s> Неожиданно из подворотни в Олега ударил яркий прожектор патрульный трактор <punct> <punct> <punct> </s>\n\ninfo: p( неожиданно | <s> ) \t= [2gram] 0.00038931 [ -3.40969900 ] / 0.99999991\ninfo: p( из | неожиданно ...) \t= [2gram] 0.10110741 [ -0.99521700 ] / 0.99999979\ninfo: p( подворотни | из ...) \t= [2gram] 0.00711798 [ -2.14764300 ] / 1.00000027\ninfo: p( в | подворотни ...) \t= [2gram] 0.51077661 [ -0.29176900 ] / 1.00000021\ninfo: p( олега | в ...) \t= [2gram] 0.00082936 [ -3.08125500 ] / 0.99999974\ninfo: p( ударил | олега ...) \t= [2gram] 0.25002820 [ -0.60201100 ] / 0.99999978\ninfo: p( яркий | ударил ...) \t= [2gram] 0.50002878 [ -0.30100500 ] / 1.00000034\ninfo: p( прожектор | яркий ...) \t= [2gram] 0.50002878 [ -0.30100500 ] / 1.00000034\ninfo: p( патрульный | прожектор ...) \t= [2gram] 0.50002878 [ -0.30100500 ] / 1.00000034\ninfo: p( трактор | патрульный ...) \t= [2gram] 0.50002878 [ -0.30100500 ] / 1.00000034\ninfo: p( <punct> | трактор ...) \t= [OOV] 0.00000000 [ -inf ] / 0.99999973\ninfo: p( <punct> | <punct> ...) \t= [OOV] 0.00000000 [ -inf ] / 0.99999993\ninfo: p( <punct> | <punct> ...) \t= [OOV] 0.00000000 [ -inf ] / 0.99999993\ninfo: p( </s> | <punct> ...) \t= [1gram] 0.05693430 [ -1.24462600 ] / 0.99999993\n\ninfo: 1 sentences, 13 words, 0 OOVs\ninfo: 3 zeroprobs, logprob= -12.97624000 ppl= 8.45034200 ppl1= 9.95800426\n\ninfo: <s> С лязгом выкатился и остановился около мальчика <punct> <punct> <punct> <punct> </s>\n\ninfo: p( с | <s> ) \t= [2gram] 0.00642448 [ -2.19216200 ] / 0.99999991\ninfo: p( лязгом | с ...) \t= [2gram] 0.00195917 [ -2.70792700 ] / 0.99999999\ninfo: p( выкатился | лязгом ...) \t= [2gram] 0.50002878 [ -0.30100500 ] / 1.00000034\ninfo: p( и | выкатился ...) \t= [2gram] 0.51169951 [ -0.29098500 ] / 1.00000024\ninfo: p( остановился | и ...) \t= [2gram] 0.00143382 [ -2.84350600 ] / 0.99999975\ninfo: p( около | остановился ...) \t= [1gram] 0.00011358 [ -3.94468000 ] / 1.00000003\ninfo: p( мальчика | около ...) \t= [1gram] 0.00003932 [ -4.40541100 ] / 1.00000016\ninfo: p( <punct> | мальчика ...) \t= [OOV] 0.00000000 [ -inf ] / 0.99999990\ninfo: p( <punct> | <punct> ...) \t= [OOV] 0.00000000 [ -inf ] / 0.99999993\ninfo: p( <punct> | <punct> ...) \t= [OOV] 0.00000000 [ -inf ] / 0.99999993\ninfo: p( <punct> | <punct> ...) \t= [OOV] 0.00000000 [ -inf ] / 0.99999993\ninfo: p( </s> | <punct> ...) \t= [1gram] 0.05693430 [ -1.24462600 ] / 0.99999993\n\ninfo: 1 sentences, 11 words, 0 OOVs\ninfo: 4 zeroprobs, logprob= -17.93030200 ppl= 31.20267541 ppl1= 42.66064865\n>>> print(a.logprob)\n-30.906542\n```\n\n---\n\n### Methods:\n- **setLogfile** - Method of set the file for log output\n- **setOOvFile** - Method set file for saving OOVs words\n\n### Example:\n```python\n>>> import alm\n>>>\n>>> alm.setLogfile(\"./log.txt\")\n>>>\n>>> alm.setOOvFile(\"./oov.txt\")\n```\n\n---\n\n### Methods:\n- **perplexity** - Perplexity calculation\n- **pplConcatenate** - Method of combining perplexia\n- **pplByFiles** - Method for reading perplexity calculation by file or group of files\n\n### Example:\n```python\n>>> import alm\n>>>\n>>> alm.setOption(alm.options_t.confidence)\n>>>\n>>> alm.setAlphabet(\"abcdefghijklmnopqrstuvwxyzабвгдеёжзийклмнопрстуфхцчшщъыьэюя\")\n>>>\n>>> alm.readArpa('./lm.arpa')\n>>>\n>>> a = alm.perplexity(\"неожиданно из подворотни в Олега ударил яркий прожектор патрульный трактор???с лязгом выкатился и остановился возле мальчика....\")\n>>>\n>>> print(a.logprob)\n-30.906542\n>>>\n>>> print(a.oovs)\n0\n>>>\n>>> print(a.words)\n24\n>>>\n>>> print(a.sentences)\n2\n>>>\n>>> print(a.zeroprobs)\n7\n>>>\n>>> print(a.ppl)\n17.229063831108224\n>>>\n>>> print(a.ppl1)\n19.398698060810077\n>>>\n>>> b = alm.pplByFiles(\"./text.txt\")\n>>>\n>>> c = alm.pplConcatenate(a, b)\n>>>\n>>> print(c.ppl)\n7.384123548831112\n```\n\n### Description\n| Name      | Description                                                                 |\n|-----------|-----------------------------------------------------------------------------|\n| ppl       | The meaning of perplexity without considering the beginning of the sentence |\n| ppl1      | The meaning of perplexion taking into account the beginning of the sentence |\n| oovs      | Count of oov words                                                          |\n| words     | Count of words in sentence                                                  |\n| logprob   | Word sequence frequency                                                     |\n| sentences | Count of sequences                                                          |\n| zeroprobs | Count of zero probs                                                         |\n\n---\n\n### Methods:\n- **tokenization** - Method for breaking text into tokens\n\n### Example:\n```python\n>>> import alm\n>>>\n>>> def tokensFn(word, context, reset, stop):\n...     print(word, \" => \", context)\n...     return True\n...\n>>> alm.switchAllowApostrophe()\n>>>\n>>> alm.tokenization(\"«On nous dit qu'aujourd'hui c'est le cas, encore faudra-t-il l'évaluer» l'astronomie\", tokensFn)\n«  =>  []\nOn  =>  ['«']\nnous  =>  ['«', 'On']\ndit  =>  ['«', 'On', 'nous']\nqu'aujourd'hui  =>  ['«', 'On', 'nous', 'dit']\nc'est  =>  ['«', 'On', 'nous', 'dit', \"qu'aujourd'hui\"]\nle  =>  ['«', 'On', 'nous', 'dit', \"qu'aujourd'hui\", \"c'est\"]\ncas  =>  ['«', 'On', 'nous', 'dit', \"qu'aujourd'hui\", \"c'est\", 'le']\n,  =>  ['«', 'On', 'nous', 'dit', \"qu'aujourd'hui\", \"c'est\", 'le', 'cas']\nencore  =>  ['«', 'On', 'nous', 'dit', \"qu'aujourd'hui\", \"c'est\", 'le', 'cas', ',']\nfaudra-t-il  =>  ['«', 'On', 'nous', 'dit', \"qu'aujourd'hui\", \"c'est\", 'le', 'cas', ',', 'encore']\nl  =>  ['«', 'On', 'nous', 'dit', \"qu'aujourd'hui\", \"c'est\", 'le', 'cas', ',', 'encore', 'faudra-t-il', 'l']\n'  =>  ['«', 'On', 'nous', 'dit', \"qu'aujourd'hui\", \"c'est\", 'le', 'cas', ',', 'encore', 'faudra-t-il', 'l']\névaluer  =>  ['«', 'On', 'nous', 'dit', \"qu'aujourd'hui\", \"c'est\", 'le', 'cas', ',', 'encore', 'faudra-t-il', 'l', \"'\"]\n»  =>  ['«', 'On', 'nous', 'dit', \"qu'aujourd'hui\", \"c'est\", 'le', 'cas', ',', 'encore', 'faudra-t-il', 'l', \"'\", 'évaluer']\nl  =>  ['«', 'On', 'nous', 'dit', \"qu'aujourd'hui\", \"c'est\", 'le', 'cas', ',', 'encore', 'faudra-t-il', 'l', \"'\", 'évaluer', '»']\n'  =>  ['«', 'On', 'nous', 'dit', \"qu'aujourd'hui\", \"c'est\", 'le', 'cas', ',', 'encore', 'faudra-t-il', 'l', \"'\", 'évaluer', '»', 'l']\nastronomie  =>  ['«', 'On', 'nous', 'dit', \"qu'aujourd'hui\", \"c'est\", 'le', 'cas', ',', 'encore', 'faudra-t-il', 'l', \"'\", 'évaluer', '»', 'l', \"'\"]\n```\n\n---\n\n### Methods:\n- **setTokenizerFn** - Method for set the function of an external tokenizer\n\n### Example:\n```python\n>>> import alm\n>>>\n>>> def tokenizerFn(text, callback):\n...     word = \"\"\n...     context = []\n...     for letter in text:\n...         if letter == \" \" and len(word) > 0:\n...             if not callback(word, context, False, False): return\n...             context.append(word)\n...             word = \"\"\n...         elif letter == \".\" or letter == \"!\" or letter == \"?\":\n...             if not callback(word, context, True, False): return\n...             word = \"\"\n...             context = []\n...         else:\n...             word += letter\n...     if len(word) > 0:\n...         if not callback(word, context, False, True): return\n...\n>>> def tokensFn(word, context, reset, stop):\n...     print(word, \" => \", context)\n...     return True\n...\n>>> alm.setTokenizerFn(tokenizerFn)\n>>>\n>>> alm.tokenization(\"Hello World today!\", tokensFn)\nHello  =>  []\nWorld  =>  ['Hello']\ntoday  =>  ['Hello', 'World']\n```\n\n---\n\n### Methods:\n- **sentences** - Sentences generation method\n- **sentencesToFile** - Method for assembling a specified number of sentences and writing to a file\n\n### Example:\n```python\n>>> import alm\n>>>\n>>> def sentencesFn(text):\n...     print(\"Sentences:\", text)\n...     return True\n...\n>>> alm.setOption(alm.options_t.confidence)\n>>>\n>>> alm.setAlphabet(\"abcdefghijklmnopqrstuvwxyzабвгдеёжзийклмнопрстуфхцчшщъыьэюя\")\n>>>\n>>> alm.readArpa('./lm.arpa')\n>>>\n>>> alm.sentences(sentencesFn)\nSentences: <s> В общем </s>\nSentences: <s> С лязгом выкатился и остановился возле мальчика </s>\nSentences: <s> У меня нет </s>\nSentences: <s> Я вообще не хочу </s>\nSentences: <s> Да и в общем </s>\nSentences: <s> Не могу </s>\nSentences: <s> Ну в общем </s>\nSentences: <s> Так что я вообще не хочу </s>\nSentences: <s> Потому что я вообще не хочу </s>\nSentences: <s> Продолжение следует </s>\nSentences: <s> Неожиданно из подворотни в олега ударил яркий прожектор патрульный трактор </s>\n>>>\n>>> alm.sentencesToFile(5, \"./result.txt\")\n```\n\n---\n\n### Methods:\n- **fixUppers** - Method for correcting registers in the text\n- **fixUppersByFiles** - Method for correcting text registers in a text file\n\n### Example:\n```python\n>>> import alm\n>>>\n>>> alm.setOption(alm.options_t.confidence)\n>>>\n>>> alm.setAlphabet(\"abcdefghijklmnopqrstuvwxyzабвгдеёжзийклмнопрстуфхцчшщъыьэюя\")\n>>>\n>>> alm.readArpa('./lm.arpa')\n>>>\n>>> alm.fixUppers(\"неожиданно из подворотни в олега ударил яркий прожектор патрульный трактор???с лязгом выкатился и остановился возле мальчика....\")\n'Неожиданно из подворотни в Олега ударил яркий прожектор патрульный трактор??? С лязгом выкатился и остановился возле мальчика....'\n>>>\n>>> alm.fixUppersByFiles(\"./corpus\", \"./result.txt\", \"txt\")\n```\n\n---\n\n### Methods:\n- **checkHypLat** - Hyphen and latin character search method\n\n### Example:\n```python\n>>> import alm\n>>>\n>>> alm.checkHypLat(\"Hello-World\")\n(True, True)\n>>>\n>>> alm.checkHypLat(\"Hello\")\n(False, True)\n>>>\n>>> alm.checkHypLat(\"Привет\")\n(False, False)\n>>>\n>>> alm.checkHypLat(\"так-как\")\n(True, False)\n```\n\n---\n\n### Methods:\n- **getUppers** - Method for extracting registers for each word\n- **countLetter** - Method for counting the amount of a specific letter in a word\n\n### Example:\n```python\n>>> import alm\n>>>\n>>> alm.setOption(alm.options_t.confidence)\n>>>\n>>> alm.readArpa('./lm.arpa')\n>>>\n>>> alm.idw(\"Living\")\n10493385932\n>>>\n>>> alm.idw(\"in\")\n3301\n>>>\n>>> alm.idw(\"the\")\n217280\n>>>\n>>> alm.idw(\"USA\")\n188643\n>>>\n>>> alm.getUppers([10493385932, 3301, 217280, 188643])\n[1, 0, 0, 7]\n>>> \n>>> alm.countLetter(\"hello-world\", \"-\")\n1\n>>>\n>>> alm.countLetter(\"hello-world\", \"l\")\n3\n```\n\n---\n\n### Methods:\n- **urls** - Method for extracting URL address coordinates in a string\n\n### Example:\n```python\n>>> import alm\n>>>\n>>> alm.urls(\"This website: example.com was designed with ...\")\n{14: 25}\n>>>\n>>> alm.urls(\"This website: https://a.b.c.example.net?id=52#test-1 was designed with ...\")\n{14: 52}\n>>>\n>>> alm.urls(\"This website: https://a.b.c.example.net?id=52#test-1 and 127.0.0.1 was designed with ...\")\n{14: 52, 57: 66}\n```\n\n---\n\n### Methods:\n- **roman2Arabic** - Method for translating Roman numerals to Arabic\n\n### Example:\n```python\n>>> import alm\n>>>\n>>> alm.roman2Arabic(\"XVI\")\n16\n```\n\n---\n\n### Methods:\n- **rest** - Method for correction and detection of words with mixed alphabets\n- **setSubstitutes** - Method for set letters to correct words from mixed alphabets\n- **getSubstitutes** - Method of extracting letters to correct words from mixed alphabets\n\n### Example:\n```python\n>>> import alm\n>>>\n>>> alm.setAlphabet(\"abcdefghijklmnopqrstuvwxyzабвгдеёжзийклмнопрстуфхцчшщъыьэюя\")\n>>>\n>>> alm.setSubstitutes({'p':'р','c':'с','o':'о','t':'т','k':'к','e':'е','a':'а','h':'н','x':'х','b':'в','m':'м'})\n>>>\n>>> alm.getSubstitutes()\n{'a': 'а', 'b': 'в', 'c': 'с', 'e': 'е', 'h': 'н', 'k': 'к', 'm': 'м', 'o': 'о', 'p': 'р', 't': 'т', 'x': 'х'}\n>>>\n>>> str = \"ПPИBETИК\"\n>>>\n>>> str.lower()\n'пpиbetик'\n>>>\n>>> alm.rest(str)\n'приветик'\n```\n\n---\n\n### Methods:\n- **setTokensDisable** - Method for set the list of forbidden tokens\n- **setTokensUnknown** - Method for set the list of tokens cast to 〈unk〉\n- **setTokenDisable** - Method for set the list of unidentifiable tokens\n- **setTokenUnknown** - Method of set the list of tokens that need to be identified as 〈unk〉\n- **getTokensDisable** - Method for retrieving the list of forbidden tokens\n- **getTokensUnknown** - Method for extracting a list of tokens reducible to 〈unk〉\n- **setAllTokenDisable** - Method for set all tokens as unidentifiable\n- **setAllTokenUnknown** - The method of set all tokens identified as 〈unk〉\n\n### Example:\n```python\n>>> import alm\n>>>\n>>> alm.idw(\"<date>\")\n6\n>>>\n>>> alm.idw(\"<time>\")\n7\n>>>\n>>> alm.idw(\"<abbr>\")\n5\n>>>\n>>> alm.idw(\"<math>\")\n9\n>>>\n>>> alm.setTokenDisable(\"date|time|abbr|math\")\n>>>\n>>> alm.getTokensDisable()\n{9, 5, 6, 7}\n>>>\n>>> alm.setTokensDisable({6, 7, 5, 9})\n>>>\n>>> alm.setTokenUnknown(\"date|time|abbr|math\")\n>>>\n>>> alm.getTokensUnknown()\n{9, 5, 6, 7}\n>>>\n>>> alm.setTokensUnknown({6, 7, 5, 9})\n>>>\n>>> alm.setAllTokenDisable()\n>>>\n>>> alm.getTokensDisable()\n{2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23}\n>>>\n>>> alm.setAllTokenUnknown()\n>>>\n>>> alm.getTokensUnknown()\n{2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23}\n```\n\n---\n\n### Methods:\n- **countAlphabet** - Method of obtaining the number of letters in the dictionary\n\n### Example:\n```python\n>>> import alm\n>>>\n>>> alm.getAlphabet()\n'abcdefghijklmnopqrstuvwxyz'\n>>>\n>>> alm.countAlphabet()\n26\n>>>\n>>> alm.setAlphabet(\"abcdefghijklmnopqrstuvwxyzабвгдеёжзийклмнопрстуфхцчшщъыьэюя\")\n>>>\n>>> alm.countAlphabet()\n59\n```\n\n---\n\n### Methods:\n- **countBigrams** - Method get count bigrams\n- **countTrigrams** - Method get count trigrams\n- **countGrams** - Method get count N-gram by lm size\n\n### Example:\n```python\n>>> import alm\n>>>\n>>> alm.setOption(alm.options_t.confidence)\n>>>\n>>> alm.setAlphabet(\"abcdefghijklmnopqrstuvwxyzабвгдеёжзийклмнопрстуфхцчшщъыьэюя\")\n>>>\n>>> alm.readArpa('./lm.arpa')\n>>>\n>>> alm.countBigrams(\"неожиданно из подворотни в Олега ударил яркий прожектор патрульный трактор???с лязгом выкатился и остановился возле мальчика....\")\n12\n>>>\n>>> alm.countTrigrams(\"неожиданно из подворотни в Олега ударил яркий прожектор патрульный трактор???с лязгом выкатился и остановился возле мальчика....\")\n10\n>>>\n>>> alm.size()\n3\n>>>\n>>> alm.countGrams(\"неожиданно из подворотни в Олега ударил яркий прожектор патрульный трактор???с лязгом выкатился и остановился возле мальчика....\")\n10\n>>>\n>>> alm.idw(\"неожиданно\")\n3263936167\n>>>\n>>> alm.idw(\"из\")\n5134\n>>>\n>>> alm.idw(\"подворотни\")\n12535356101\n>>>\n>>> alm.idw(\"в\")\n53\n>>>\n>>> alm.idw(\"Олега\")\n2824508300\n>>>\n>>> alm.idw(\"ударил\")\n24816796913\n>>>\n>>> alm.countBigrams([3263936167, 5134, 12535356101, 53, 2824508300, 24816796913])\n5\n>>>\n>>> alm.countTrigrams([3263936167, 5134, 12535356101, 53, 2824508300, 24816796913])\n4\n>>>\n>>> alm.countGrams([3263936167, 5134, 12535356101, 53, 2824508300, 24816796913])\n4\n```\n\n---\n\n### Methods:\n- **arabic2Roman** - Convert arabic number to roman number\n\n### Example:\n```python\n>>> import alm\n>>>\n>>> alm.arabic2Roman(23)\n'XXIII'\n>>>\n>>> alm.arabic2Roman(\"33\")\n'XXXIII'\n```\n\n---\n\n### Methods:\n- **setThreads** - Method for set the number of threads (0 - all threads)\n\n### Example:\n```python\n>>> import alm\n>>>\n>>> alm.setOption(alm.options_t.confidence)\n>>>\n>>> alm.setAlphabet(\"abcdefghijklmnopqrstuvwxyzабвгдеёжзийклмнопрстуфхцчшщъыьэюя\")\n>>>\n>>> alm.readArpa('./lm.arpa')\n>>>\n>>> alm.setThreads(3)\n>>>\n>>> a = alm.pplByFiles(\"./text.txt\")\n>>>\n>>> print(a.logprob)\n-48201.29481399994\n```\n\n---\n\n### Methods:\n- **fti** - Method for removing the fractional part of a number\n\n### Example:\n```python\n>>> import alm\n>>>\n>>> alm.fti(5892.4892)\n5892489200000\n>>>\n>>> alm.fti(5892.4892, 4)\n58924892\n```\n\n---\n\n### Methods:\n- **context** - Method for assembling text context from a sequence\n\n### Example:\n```python\n>>> import alm\n>>>\n>>> alm.setOption(alm.options_t.confidence)\n>>>\n>>> alm.setAlphabet(\"abcdefghijklmnopqrstuvwxyzабвгдеёжзийклмнопрстуфхцчшщъыьэюя\")\n>>>\n>>> alm.readArpa('./lm.arpa')\n>>>\n>>> alm.idw(\"неожиданно\")\n3263936167\n>>>\n>>> alm.idw(\"из\")\n5134\n>>>\n>>> alm.idw(\"подворотни\")\n12535356101\n>>>\n>>> alm.idw(\"в\")\n53\n>>>\n>>> alm.idw(\"Олега\")\n2824508300\n>>>\n>>> alm.idw(\"ударил\")\n24816796913\n>>>\n>>> alm.context([3263936167, 5134, 12535356101, 53, 2824508300, 24816796913])\n'Неожиданно из подворотни в Олега ударил'\n```\n\n---\n\n### Methods:\n- **isAbbr** - Method of checking a word for compliance with an abbreviation\n- **isSuffix** - Method for checking a word for a suffix of a numeric abbreviation\n- **isToken** - Method for checking if an identifier matches a token\n- **isIdWord** - Method for checking if an identifier matches a word\n\n### Example:\n```python\n>>> import alm\n>>>\n>>> alm.setOption(alm.options_t.confidence)\n>>>\n>>> alm.setAlphabet(\"abcdefghijklmnopqrstuvwxyzабвгдеёжзийклмнопрстуфхцчшщъыьэюя\")\n>>>\n>>> alm.readArpa('./lm.arpa')\n>>>\n>>> alm.addAbbr(\"США\")\n>>>\n>>> alm.isAbbr(\"сша\")\nTrue\n>>>\n>>> alm.addSuffix(\"1-я\")\n>>>\n>>> alm.isSuffix(\"1-я\")\nTrue\n>>>\n>>> alm.isToken(alm.idw(\"США\"))\nTrue\n>>>\n>>> alm.isToken(alm.idw(\"1-я\"))\nTrue\n>>>\n>>> alm.isToken(alm.idw(\"125\"))\nTrue\n>>>\n>>> alm.isToken(alm.idw(\"<s>\"))\nTrue\n>>>\n>>> alm.isToken(alm.idw(\"Hello\"))\nFalse\n>>>\n>>> alm.isIdWord(alm.idw(\"https://anyks.com\"))\nTrue\n>>>\n>>> alm.isIdWord(alm.idw(\"Hello\"))\nTrue\n>>>\n>>> alm.isIdWord(alm.idw(\"-\"))\nFalse\n```\n\n---\n\n### Methods:\n- **findByFiles** - Method search N-grams in a text file\n\n### Example:\n```python\n>>> import alm\n>>>\n>>> alm.setOption(alm.options_t.debug)\n>>>\n>>> alm.setOption(alm.options_t.confidence)\n>>>\n>>> alm.setAlphabet(\"abcdefghijklmnopqrstuvwxyzабвгдеёжзийклмнопрстуфхцчшщъыьэюя\")\n>>>\n>>> alm.readArpa('./lm.arpa')\n>>>\n>>> alm.findByFiles(\"./text.txt\", \"./result.txt\")\ninfo: <s> Кукай\nсари кукай\nсари японские\nяпонские каллиграфы\nкаллиграфы я\nя постоянно\nпостоянно навещал\nнавещал их\nих тайно\nтайно от\nот людей\nлюдей </s>\n\n\ninfo: <s> Неожиданно из\nНеожиданно из подворотни\nиз подворотни в\nподворотни в Олега\nв Олега ударил\nОлега ударил яркий\nударил яркий прожектор\nяркий прожектор патрульный\nпрожектор патрульный трактор\nпатрульный трактор\n\n<s> С лязгом\nС лязгом выкатился\nлязгом выкатился и\nвыкатился и остановился\nи остановился возле\nостановился возле мальчика\nвозле мальчика\n```\n\n---\n\n### Methods:\n- **checkSequence** - Sequence Existence Method\n- **existSequence** - Method for checking the existence of a sequence, excluding non-word tokens\n- **checkByFiles** - Method for checking if a sequence exists in a text file\n\n### Example:\n```python\n>>> import alm\n>>>\n>>> alm.setOption(alm.options_t.debug)\n>>>\n>>> alm.setOption(alm.options_t.confidence)\n>>>\n>>> alm.setAlphabet(\"abcdefghijklmnopqrstuvwxyzабвгдеёжзийклмнопрстуфхцчшщъыьэюя\")\n>>>\n>>> alm.readArpa('./lm.arpa')\n>>>\n>>> alm.addAbbr(\"США\")\n>>>\n>>> alm.isAbbr(\"сша\")\n>>>\n>>> alm.checkSequence(\"Неожиданно из подворотни в олега ударил\")\nTrue\n>>>\n>>> alm.checkSequence(\"Сегодня сыграл и в Олега ударил яркий прожектор патрульный трактор с корпоративным сектором\")\nTrue\n>>>\n>>> alm.checkSequence(\"Сегодня сыграл и в Олега ударил яркий прожектор патрульный трактор с корпоративным сектором\", True)\nTrue\n>>>\n>>> alm.checkSequence(\"в Олега ударил яркий\")\nTrue\n>>>\n>>> alm.checkSequence(\"в Олега ударил яркий\", True)\nTrue\n>>>\n>>> alm.checkSequence(\"от госсекретаря США\")\nTrue\n>>>\n>>> alm.checkSequence(\"от госсекретаря США\", True)\nTrue\n>>>\n>>> alm.checkSequence(\"Неожиданно из подворотни в олега ударил\", 2)\nTrue\n>>>\n>>> alm.checkSequence([\"Неожиданно\",\"из\",\"подворотни\",\"в\",\"олега\",\"ударил\"], 2)\nTrue\n>>>\n>>> alm.existSequence(\"<s> Сегодня сыграл и в, Олега ударил яркий прожектор, патрульный трактор - с корпоративным сектором </s>\", 2)\n(True, 0)\n>>>\n>>> alm.existSequence([\"<s>\",\"Сегодня\",\"сыграл\",\"и\",\"в\",\",\",\"Олега\",\"ударил\",\"яркий\",\"прожектор\",\",\",\"патрульный\",\"трактор\",\"-\",\"с\",\"корпоративным\",\"сектором\",\"</s>\"], 2)\n(True, 2)\n>>>\n>>> alm.idw(\"от\")\n6086\n>>>\n>>> alm.idw(\"госсекретаря\")\n51273912082\n>>>\n>>> alm.idw(\"США\")\n5\n>>>\n>>> alm.checkSequence([6086, 51273912082, 5])\nTrue\n>>>\n>>> alm.checkSequence([6086, 51273912082, 5], True)\nTrue\n>>>\n>>> alm.checkSequence([\"от\", \"госсекретаря\", \"США\"])\nTrue\n>>>\n>>> alm.checkSequence([\"от\", \"госсекретаря\", \"США\"], True)\nTrue\n>>>\n>>> alm.checkByFiles(\"./text.txt\", \"./result.txt\")\ninfo: 1999 | YES | Какой-то период времени мы вообще не общались\n\ninfo: 2000 | NO | Неожиданно из подворотни в Олега ударил яркий прожектор патрульный трактор.С лязгом выкатился и остановился возле мальчика.\n\ninfo: 2001 | YES | Так как эти яйца жалко есть а хочется все больше любоваться их можно покрыть лаком даже прозрачным лаком для ногтей\n\ninfo: 2002 | NO | кукай <unk> <unk> сари кукай <unk> <unk> сари японские каллиграфы я постоянно навещал их тайно от людей\n\ninfo: 2003 | NO | Неожиданно из подворотни в Олега ударил яркий прожектор патрульный трактор???С лязгом выкатился и остановился возле мальчика....\n\ninfo: 2004 | NO | Неожиданно из подворотни в Олега ударил яркий прожектор патрульный трактор?С лязгом выкатился и остановился возле мальчика.\n\ninfo: 2005 | YES | Сегодня яичницей никто не завтракал как впрочем и вчера на ближайшем к нам рынке мы ели фруктовый салат со свежевыжатым соком как в старые добрые времена в Бразилии\n\ninfo: 2006 | NO | Неожиданно из подворотни в Олега ударил яркий прожектор патрульный трактор!С лязгом выкатился и остановился возле мальчика.\n\ninfo: 2007 | NO | Неожиданно из подворотни в Олега ударил яркий прожектор патрульный трактор.с лязгом выкатился и остановился возле мальчика.\n\nAll texts: 2007\nExists texts: 1359\nNot exists texts: 648\n>>>\n>>> alm.checkByFiles(\"./corpus\", \"./result.txt\", False, \"txt\")\ninfo: 1999 | YES | Какой-то период времени мы вообще не общались\n\ninfo: 2000 | NO | Неожиданно из подворотни в Олега ударил яркий прожектор патрульный трактор.С лязгом выкатился и остановился возле мальчика.\n\ninfo: 2001 | YES | Так как эти яйца жалко есть а хочется все больше любоваться их можно покрыть лаком даже прозрачным лаком для ногтей\n\ninfo: 2002 | NO | кукай <unk> <unk> сари кукай <unk> <unk> сари японские каллиграфы я постоянно навещал их тайно от людей\n\ninfo: 2003 | NO | Неожиданно из подворотни в Олега ударил яркий прожектор патрульный трактор???С лязгом выкатился и остановился возле мальчика....\n\ninfo: 2004 | NO | Неожиданно из подворотни в Олега ударил яркий прожектор патрульный трактор?С лязгом выкатился и остановился возле мальчика.\n\ninfo: 2005 | YES | Сегодня яичницей никто не завтракал как впрочем и вчера на ближайшем к нам рынке мы ели фруктовый салат со свежевыжатым соком как в старые добрые времена в Бразилии\n\ninfo: 2006 | NO | Неожиданно из подворотни в Олега ударил яркий прожектор патрульный трактор!С лязгом выкатился и остановился возле мальчика.\n\ninfo: 2007 | NO | Неожиданно из подворотни в Олега ударил яркий прожектор патрульный трактор.с лязгом выкатился и остановился возле мальчика.\n\nAll texts: 2007\nExists texts: 1359\nNot exists texts: 648\n>>>\n>>> alm.checkByFiles(\"./corpus\", \"./result.txt\", True, \"txt\")\ninfo: 2000 | NO | Так как эти яйца жалко есть а хочется все больше любоваться их можно покрыть лаком даже прозрачным лаком для ногтей\n\ninfo: 2001 | NO | Неожиданно из подворотни в Олега ударил яркий прожектор патрульный трактор.С лязгом выкатился и остановился возле мальчика.\n\ninfo: 2002 | NO | Сегодня яичницей никто не завтракал как впрочем и вчера на ближайшем к нам рынке мы ели фруктовый салат со свежевыжатым соком как в старые добрые времена в Бразилии\n\ninfo: 2003 | NO | Неожиданно из подворотни в Олега ударил яркий прожектор патрульный трактор!С лязгом выкатился и остановился возле мальчика.\n\ninfo: 2004 | NO | кукай <unk> <unk> сари кукай <unk> <unk> сари японские каллиграфы я постоянно навещал их тайно от людей\n\ninfo: 2005 | NO | Неожиданно из подворотни в Олега ударил яркий прожектор патрульный трактор?С лязгом выкатился и остановился возле мальчика.\n\ninfo: 2006 | NO | Неожиданно из подворотни в Олега ударил яркий прожектор патрульный трактор???С лязгом выкатился и остановился возле мальчика....\n\ninfo: 2007 | NO | Неожиданно из подворотни в Олега ударил яркий прожектор патрульный трактор.с лязгом выкатился и остановился возле мальчика.\n\nAll texts: 2007\nExists texts: 0\nNot exists texts: 2007\n```\n\n---\n\n### Methods:\n- **check** - String Check Method\n- **match** - String Matching Method\n- **addAbbr** - Method add abbreviation\n- **addSuffix** - Method add number suffix abbreviation\n- **setSuffixes** - Method set number suffix abbreviations\n- **readSuffix** - Method for reading data from a file of suffixes and abbreviations\n\n### Example:\n```python\n>>> import alm\n>>> \n>>> alm.setAlphabet(\"abcdefghijklmnopqrstuvwxyzабвгдеёжзийклмнопрстуфхцчшщъыьэюя\")\n>>> alm.setSubstitutes({'p':'р','c':'с','o':'о','t':'т','k':'к','e':'е','a':'а','h':'н','x':'х','b':'в','m':'м'})\n>>> \n>>> alm.check(\"Дом-2\", alm.check_t.home2)\nTrue\n>>> \n>>> alm.check(\"Дом2\", alm.check_t.home2)\nFalse\n>>> \n>>> alm.check(\"Дом-2\", alm.check_t.latian)\nFalse\n>>> \n>>> alm.check(\"Hello\", alm.check_t.latian)\nTrue\n>>> \n>>> alm.check(\"прiвет\", alm.check_t.latian)\nTrue\n>>> \n>>> alm.check(\"Дом-2\", alm.check_t.hyphen)\nTrue\n>>> \n>>> alm.check(\"Дом2\", alm.check_t.hyphen)\nFalse\n>>> \n>>> alm.check(\"Д\", alm.check_t.letter)\nTrue\n>>> \n>>> alm.check(\"$\", alm.check_t.letter)\nFalse\n>>> \n>>> alm.check(\"-\", alm.check_t.letter)\nFalse\n>>> \n>>> alm.check(\"просtоквaшино\", alm.check_t.similars)\nTrue\n>>> \n>>> alm.match(\"my site http://example.ru, it's true\", alm.match_t.url)\nTrue\n>>> \n>>> alm.match(\"по вашему ip адресу 46.40.123.12 проводится проверка\", alm.match_t.url)\nTrue\n>>> \n>>> alm.match(\"мой адрес в формате IPv6: http://[2001:0db8:11a3:09d7:1f34:8a2e:07a0:765d]/\", alm.match_t.url)\nTrue\n>>> \n>>> alm.match(\"13-я\", alm.match_t.abbr)\nTrue\n>>> \nalm.match(\"13-я-й\", alm.match_t.abbr)\nFalse\n>>> \nalm.match(\"т.д\", alm.match_t.abbr)\nTrue\n>>> \nalm.match(\"т.п.\", alm.match_t.abbr)\nTrue\n>>> \n>>> alm.match(\"С.Ш.А.\", alm.match_t.abbr)\nTrue\n>>> \n>>> alm.addAbbr(\"сша\")\n>>> alm.match(\"США\", alm.match_t.abbr)\nTrue\n>>> \n>>> alm.addSuffix(\"15-летия\")\n>>> alm.match(\"15-летия\", alm.match_t.abbr)\nTrue\n>>> \n>>> alm.getSuffixes()\n{3139900457}\n>>> \n>>> alm.idw(\"лет\")\n328041\n>>> \n>>> alm.idw(\"тых\")\n352214\n>>> \n>>> alm.setSuffixes({328041, 352214})\n>>> \n>>> alm.getSuffixes()\n{328041, 352214}\n>>> \n>>> def status(status):\n...     print(status)\n... \n>>> alm.readSuffix(\"./suffix.abbr\", status)\n>>> \n>>> alm.match(\"15-лет\", alm.match_t.abbr)\nTrue\n>>> \n>>> alm.match(\"20-тых\", alm.match_t.abbr)\nTrue\n>>> \n>>> alm.match(\"15-летия\", alm.match_t.abbr)\nFalse\n>>> \n>>> alm.match(\"Hello\", alm.match_t.latian)\nTrue\n>>> \n>>> alm.match(\"прiвет\", alm.match_t.latian)\nFalse\n>>> \n>>> alm.match(\"23424\", alm.match_t.number)\nTrue\n>>> \n>>> alm.match(\"hello\", alm.match_t.number)\nFalse\n>>> \n>>> alm.match(\"23424.55\", alm.match_t.number)\nFalse\n>>> \n>>> alm.match(\"23424\", alm.match_t.decimal)\nFalse\n>>> \n>>> alm.match(\"23424.55\", alm.match_t.decimal)\nTrue\n>>> \n>>> alm.match(\"23424,55\", alm.match_t.decimal)\nTrue\n>>> \n>>> alm.match(\"-23424.55\", alm.match_t.decimal)\nTrue\n>>> \n>>> alm.match(\"+23424.55\", alm.match_t.decimal)\nTrue\n>>> \n>>> alm.match(\"+23424.55\", alm.match_t.anumber)\nTrue\n>>> \n>>> alm.match(\"15T-34\", alm.match_t.anumber)\nTrue\n>>> \n>>> alm.match(\"hello\", alm.match_t.anumber)\nFalse\n>>> \n>>> alm.match(\"hello\", alm.match_t.allowed)\nTrue\n>>> \n>>> alm.match(\"évaluer\", alm.match_t.allowed)\nFalse\n>>> \n>>> alm.match(\"13\", alm.match_t.allowed)\nTrue\n>>> \n>>> alm.match(\"Hello-World\", alm.match_t.allowed)\nTrue\n>>> \n>>> alm.match(\"Hello\", alm.match_t.math)\nFalse\n>>> \n>>> alm.match(\"+\", alm.match_t.math)\nTrue\n>>> \n>>> alm.match(\"=\", alm.match_t.math)\nTrue\n>>> \n>>> alm.match(\"Hello\", alm.match_t.upper)\nTrue\n>>> \n>>> alm.match(\"hello\", alm.match_t.upper)\nFalse\n>>> \n>>> alm.match(\"hellO\", alm.match_t.upper)\nFalse\n>>> \n>>> alm.match(\"a\", alm.match_t.punct)\nFalse\n>>> \n>>> alm.match(\",\", alm.match_t.punct)\nTrue\n>>> \n>>> alm.match(\" \", alm.match_t.space)\nTrue\n>>> \n>>> alm.match(\"a\", alm.match_t.space)\nFalse\n>>> \n>>> alm.match(\"a\", alm.match_t.special)\nFalse\n>>> \n>>> alm.match(\"±\", alm.match_t.special)\nFalse\n>>> \n>>> alm.match(\"[\", alm.match_t.isolation)\nTrue\n>>> \n>>> alm.match(\"a\", alm.match_t.isolation)\nFalse\n>>> \n>>> alm.match(\"a\", alm.match_t.greek)\nFalse\n>>> \n>>> alm.match(\"Ψ\", alm.match_t.greek)\nTrue\n>>> \n>>> alm.match(\"->\", alm.match_t.route)\nFalse\n>>> \n>>> alm.match(\"⇔\", alm.match_t.route)\nTrue\n>>> \n>>> alm.match(\"a\", alm.match_t.letter)\nTrue\n>>> \n>>> alm.match(\"!\", alm.match_t.letter)\nFalse\n>>> \n>>> alm.match(\"!\", alm.match_t.pcards)\nFalse\n>>> \n>>> alm.match(\"♣\", alm.match_t.pcards)\nTrue\n>>> \n>>> alm.match(\"p\", alm.match_t.currency)\nFalse\n>>> \n>>> alm.match(\"$\", alm.match_t.currency)\nTrue\n>>> \n>>> alm.match(\"€\", alm.match_t.currency)\nTrue\n>>> \n>>> alm.match(\"₽\", alm.match_t.currency)\nTrue\n>>> \n>>> alm.match(\"₿\", alm.match_t.currency)\nTrue\n```\n\n---\n\n### Methods:\n- **delInText** - Method for delete letter in text\n\n### Example:\n```python\n>>> import alm\n>>>\n>>> alm.setAlphabet(\"abcdefghijklmnopqrstuvwxyzабвгдеёжзийклмнопрстуфхцчшщъыьэюя\")\n>>>\n>>> alm.delInText(\"неожиданно из подворотни в Олега ударил яркий прожектор патрульный трактор??? с лязгом выкатился и остановился возле мальчика....\", alm.wdel_t.punct)\n'неожиданно из подворотни в Олега ударил яркий прожектор патрульный трактор с лязгом выкатился и остановился возле мальчика'\n>>>\n>>> alm.delInText(\"hello-world-hello-world\", alm.wdel_t.hyphen)\n'helloworldhelloworld'\n>>>\n>>> alm.delInText(\"неожиданно из подворотни в Олега ударил яркий прожектор патрульный трактор??? с лязгом выкатился и остановился возле мальчика....\", alm.wdel_t.broken)\n'неожиданно из подворотни в Олега ударил яркий прожектор патрульный трактор с лязгом выкатился и остановился возле мальчика'\n>>>\n>>> alm.delInText(\"«On nous dit qu'aujourd'hui c'est le cas, encore faudra-t-il l'évaluer» l'astronomie\", alm.wdel_t.broken)\n\"On nous dit qu'aujourd'hui c'est le cas encore faudra-t-il l'valuer l'astronomie\"\n```\n\n---\n\n### Methods:\n- **countsByFiles** - Method for counting the number of n-grams in a text file\n\n### Example:\n```python\n>>> import alm\n>>>\n>>> alm.setOption(alm.options_t.debug)\n>>>\n>>> alm.setOption(alm.options_t.confidence)\n>>>\n>>> alm.setAlphabet(\"abcdefghijklmnopqrstuvwxyzабвгдеёжзийклмнопрстуфхцчшщъыьэюя\")\n>>>\n>>> alm.readArpa('./lm.arpa')\n>>>\n>>> alm.countsByFiles(\"./text.txt\", \"./result.txt\", 3)\ninfo: 0 | Сегодня яичницей никто не завтракал как впрочем и вчера на ближайшем к нам рынке мы ели фруктовый салат со свежевыжатым соком как в старые добрые времена в Бразилии\n\ninfo: 10 | Неожиданно из подворотни в Олега ударил яркий прожектор патрульный трактор?С лязгом выкатился и остановился возле мальчика.\n\ninfo: 10 | Неожиданно из подворотни в Олега ударил яркий прожектор патрульный трактор!С лязгом выкатился и остановился возле мальчика.\n\ninfo: 0 | Так как эти яйца жалко есть а хочется все больше любоваться их можно покрыть лаком даже прозрачным лаком для ногтей\n\ninfo: 10 | Неожиданно из подворотни в Олега ударил яркий прожектор патрульный трактор???С лязгом выкатился и остановился возле мальчика....\n\nCounts 3grams: 471\n>>>\n>>> alm.countsByFiles(\"./corpus\", \"./result.txt\", 2, \"txt\")\ninfo: 19 | Так как эти яйца жалко есть а хочется все больше любоваться их можно покрыть лаком даже прозрачным лаком для ногтей\n\ninfo: 12 | Неожиданно из подворотни в Олега ударил яркий прожектор патрульный трактор.с лязгом выкатился и остановился возле мальчика.\n\ninfo: 12 | Неожиданно из подворотни в Олега ударил яркий прожектор патрульный трактор!С лязгом выкатился и остановился возле мальчика.\n\ninfo: 10 | кукай <unk> <unk> сари кукай <unk> <unk> сари японские каллиграфы я постоянно навещал их тайно от людей\n\ninfo: 12 | Неожиданно из подворотни в Олега ударил яркий прожектор патрульный трактор???С лязгом выкатился и остановился возле мальчика....\n\ninfo: 12 | Неожиданно из подворотни в Олега ударил яркий прожектор патрульный трактор?С лязгом выкатился и остановился возле мальчика.\n\ninfo: 27 | Сегодня яичницей никто не завтракал как впрочем и вчера на ближайшем к нам рынке мы ели фруктовый салат со свежевыжатым соком как в старые добрые времена в Бразилии\n\nCounts 2grams: 20270\n```\n\n### Description\n| N-gram size | Description         |\n|-------------|---------------------|\n| 1           | language model size |\n| 2           | bigram              |\n| 3           | trigram             |\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/anyks/alm/archive/release.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/anyks/alm",
    "keywords": "nlp,lm,alm,language-model",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "anyks-lm",
    "package_url": "https://pypi.org/project/anyks-lm/",
    "platform": null,
    "project_url": "https://pypi.org/project/anyks-lm/",
    "project_urls": {
      "Download": "https://github.com/anyks/alm/archive/release.tar.gz",
      "Homepage": "https://github.com/anyks/alm"
    },
    "release_url": "https://pypi.org/project/anyks-lm/3.5.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Smart language model",
    "version": "3.5.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16309886,
  "releases": {
    "2.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "87e80e713911e9a4ab6762abfb36c1eed4f487cb0eae717b00c4a6b7fb0f2c99",
          "md5": "22ce70878b5b4f119108d13bfc371bd8",
          "sha256": "fe735985315bf997d6d2478847221b8a8325004c8bc0946eae4677faaf8f94b9"
        },
        "downloads": -1,
        "filename": "anyks_lm-2.1.5-cp37-cp37m-macosx_10_15_x86_64.whl",
        "has_sig": false,
        "md5_digest": "22ce70878b5b4f119108d13bfc371bd8",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.6",
        "size": 884813,
        "upload_time": "2020-05-14T12:07:19",
        "upload_time_iso_8601": "2020-05-14T12:07:19.170830Z",
        "url": "https://files.pythonhosted.org/packages/87/e8/0e713911e9a4ab6762abfb36c1eed4f487cb0eae717b00c4a6b7fb0f2c99/anyks_lm-2.1.5-cp37-cp37m-macosx_10_15_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "341de50a91eadc3ca1ab1b3511602d14a835dccbdd7ba9c5778cb454be576867",
          "md5": "efdcdce531b6d9945e3673d57944e51f",
          "sha256": "f0c132026e252acd03d0f55558247f7d8962a0390f8c275b548f88ef3cef5e6a"
        },
        "downloads": -1,
        "filename": "anyks-lm-2.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "efdcdce531b6d9945e3673d57944e51f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 370833,
        "upload_time": "2020-05-14T12:07:22",
        "upload_time_iso_8601": "2020-05-14T12:07:22.498737Z",
        "url": "https://files.pythonhosted.org/packages/34/1d/e50a91eadc3ca1ab1b3511602d14a835dccbdd7ba9c5778cb454be576867/anyks-lm-2.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7055502a33094991d8862d2525898fc16012b8a8a51ea58bb4f1e2521865da1d",
          "md5": "49d133a23eb9d9ae359f51a937c81bd4",
          "sha256": "32c4eabdf84a9ee9b8b81e12f71f7ed66b776f10f7720e3222963cd811ba641f"
        },
        "downloads": -1,
        "filename": "anyks_lm-2.1.6-cp37-cp37m-macosx_10_15_x86_64.whl",
        "has_sig": false,
        "md5_digest": "49d133a23eb9d9ae359f51a937c81bd4",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.6",
        "size": 884823,
        "upload_time": "2020-05-15T10:27:05",
        "upload_time_iso_8601": "2020-05-15T10:27:05.497881Z",
        "url": "https://files.pythonhosted.org/packages/70/55/502a33094991d8862d2525898fc16012b8a8a51ea58bb4f1e2521865da1d/anyks_lm-2.1.6-cp37-cp37m-macosx_10_15_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "be92e25b35a13b7e9192779fcc3071d3f1a53deeb7b24b1a64f9795f16f83bc5",
          "md5": "a2ebeef164f9c9a397d097fcf9fa4123",
          "sha256": "198f20dde130c536b0832550dbd1a1dc98b1358e5b5ea83945089a236aaa0b18"
        },
        "downloads": -1,
        "filename": "anyks-lm-2.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "a2ebeef164f9c9a397d097fcf9fa4123",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 370859,
        "upload_time": "2020-05-15T10:27:09",
        "upload_time_iso_8601": "2020-05-15T10:27:09.737454Z",
        "url": "https://files.pythonhosted.org/packages/be/92/e25b35a13b7e9192779fcc3071d3f1a53deeb7b24b1a64f9795f16f83bc5/anyks-lm-2.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "543079cd133f8f0868e601c588281646499d5535acc227413b848b593fde7e0c",
          "md5": "a776438a9904a41660387b41b3fa6372",
          "sha256": "87e967b869be06e69859ed330318377f19ee79037e101f378270ba0619b4918e"
        },
        "downloads": -1,
        "filename": "anyks-lm-2.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "a776438a9904a41660387b41b3fa6372",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 371041,
        "upload_time": "2020-05-16T13:26:02",
        "upload_time_iso_8601": "2020-05-16T13:26:02.960857Z",
        "url": "https://files.pythonhosted.org/packages/54/30/79cd133f8f0868e601c588281646499d5535acc227413b848b593fde7e0c/anyks-lm-2.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b8b2192c448147b1666ab0c9031178ee9f2d078201d210eb6565f50fee60291b",
          "md5": "64f4d2f72b14ea184458dcc3556b9df9",
          "sha256": "224819df221f2a3478c4cde7812dbd495dbeca3b6626521a741b9d6332f7fa57"
        },
        "downloads": -1,
        "filename": "anyks-lm-2.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "64f4d2f72b14ea184458dcc3556b9df9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 371568,
        "upload_time": "2020-05-16T13:32:52",
        "upload_time_iso_8601": "2020-05-16T13:32:52.097345Z",
        "url": "https://files.pythonhosted.org/packages/b8/b2/192c448147b1666ab0c9031178ee9f2d078201d210eb6565f50fee60291b/anyks-lm-2.1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "262a4292dff2c9483169f1626171f37c1656a255416037c376ee32d333ffd43b",
          "md5": "fdd426206ffaa3b846d34b963502acd7",
          "sha256": "0503afd08025f575e85d75fa02e0f6af600a917725c6a248853a0b96cc4d1f69"
        },
        "downloads": -1,
        "filename": "anyks_lm-2.1.9-cp37-cp37m-macosx_10_15_x86_64.whl",
        "has_sig": false,
        "md5_digest": "fdd426206ffaa3b846d34b963502acd7",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.6",
        "size": 886929,
        "upload_time": "2020-05-16T13:37:45",
        "upload_time_iso_8601": "2020-05-16T13:37:45.953635Z",
        "url": "https://files.pythonhosted.org/packages/26/2a/4292dff2c9483169f1626171f37c1656a255416037c376ee32d333ffd43b/anyks_lm-2.1.9-cp37-cp37m-macosx_10_15_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b91030c0b09241e7203d05d885178c59530a505daf77cfee7dae9d0ee369790",
          "md5": "4a73a130dea6bd04ef6a893f6498bce5",
          "sha256": "4dcb057b57028dd55aa711815dc6b5754f60fe0f263ada8204404ee26d680694"
        },
        "downloads": -1,
        "filename": "anyks-lm-2.1.9.tar.gz",
        "has_sig": false,
        "md5_digest": "4a73a130dea6bd04ef6a893f6498bce5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 371579,
        "upload_time": "2020-05-16T13:37:48",
        "upload_time_iso_8601": "2020-05-16T13:37:48.849507Z",
        "url": "https://files.pythonhosted.org/packages/2b/91/030c0b09241e7203d05d885178c59530a505daf77cfee7dae9d0ee369790/anyks-lm-2.1.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "efcd3cd240860a68004806c586363abe665a764426a662ebdb63c84f639e8c01",
          "md5": "7127795463aacf5492a9d49938dcb280",
          "sha256": "4e32beee1c1ec1aeb777616e4d17750a572bf907534e58b6dcbefbce6c3bb89c"
        },
        "downloads": -1,
        "filename": "anyks_lm-3.0.0-cp37-cp37m-macosx_10_15_x86_64.whl",
        "has_sig": false,
        "md5_digest": "7127795463aacf5492a9d49938dcb280",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.6",
        "size": 886925,
        "upload_time": "2020-05-16T13:49:04",
        "upload_time_iso_8601": "2020-05-16T13:49:04.799458Z",
        "url": "https://files.pythonhosted.org/packages/ef/cd/3cd240860a68004806c586363abe665a764426a662ebdb63c84f639e8c01/anyks_lm-3.0.0-cp37-cp37m-macosx_10_15_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fde9ff481c0a149e3b93d05832eec6c496059102fb715934d77b05cc72631358",
          "md5": "6af9a6dad76c7560ab64af4920e0d2d5",
          "sha256": "81596d5b50e64d50e0fef212ae1c0d04aaa226996fe2a23a704f2083f714323b"
        },
        "downloads": -1,
        "filename": "anyks-lm-3.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6af9a6dad76c7560ab64af4920e0d2d5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 371597,
        "upload_time": "2020-05-16T13:49:08",
        "upload_time_iso_8601": "2020-05-16T13:49:08.480178Z",
        "url": "https://files.pythonhosted.org/packages/fd/e9/ff481c0a149e3b93d05832eec6c496059102fb715934d77b05cc72631358/anyks-lm-3.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a87fa386851acccaba819345a71a420cd69bace7d1ffecfb1f96e2fc73de6eb",
          "md5": "a8c530b67d1d2ecf5e18a058ed283ebe",
          "sha256": "674e66d374d992656a63e36d6fcdd39ac7cd18d094b053d8c9d992c99d05797b"
        },
        "downloads": -1,
        "filename": "anyks_lm-3.0.1-cp37-cp37m-macosx_10_15_x86_64.whl",
        "has_sig": false,
        "md5_digest": "a8c530b67d1d2ecf5e18a058ed283ebe",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.6",
        "size": 896407,
        "upload_time": "2020-05-30T20:17:27",
        "upload_time_iso_8601": "2020-05-30T20:17:27.810660Z",
        "url": "https://files.pythonhosted.org/packages/9a/87/fa386851acccaba819345a71a420cd69bace7d1ffecfb1f96e2fc73de6eb/anyks_lm-3.0.1-cp37-cp37m-macosx_10_15_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3e42c21d0d56a1591610ce88c531c0ca0377e4d11c047a4eec3a24bcb0b24248",
          "md5": "bff68bce14e30b140e07223de0ae1315",
          "sha256": "de594d989db287d1f27a0aacb4020f91ec0d514ace623646627ee5aa0b74cf6b"
        },
        "downloads": -1,
        "filename": "anyks-lm-3.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "bff68bce14e30b140e07223de0ae1315",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 379783,
        "upload_time": "2020-05-30T20:17:31",
        "upload_time_iso_8601": "2020-05-30T20:17:31.189011Z",
        "url": "https://files.pythonhosted.org/packages/3e/42/c21d0d56a1591610ce88c531c0ca0377e4d11c047a4eec3a24bcb0b24248/anyks-lm-3.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "573d81f12f0b6daa226a3547ae931c07425b01752439c2a25e508c2474fab3fb",
          "md5": "8978952aaa6e91a36397912da195a387",
          "sha256": "1463ec32317292e8475052e1c25094a9b713a148a932ec0752451e95ef7b955f"
        },
        "downloads": -1,
        "filename": "anyks_lm-3.0.2-cp37-cp37m-macosx_10_15_x86_64.whl",
        "has_sig": false,
        "md5_digest": "8978952aaa6e91a36397912da195a387",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.6",
        "size": 894931,
        "upload_time": "2020-06-06T18:01:12",
        "upload_time_iso_8601": "2020-06-06T18:01:12.144550Z",
        "url": "https://files.pythonhosted.org/packages/57/3d/81f12f0b6daa226a3547ae931c07425b01752439c2a25e508c2474fab3fb/anyks_lm-3.0.2-cp37-cp37m-macosx_10_15_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "43f9202368f95818373437b51b752a0e264f1c6ba7a4b49bdf3254ac36d65902",
          "md5": "ef5606cfe3aff8ab3f6d0b3f5fbf1cad",
          "sha256": "91f8c96782b6de8cb24f5eda687161a74a57414495037f107b035268ebe84ec1"
        },
        "downloads": -1,
        "filename": "anyks-lm-3.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ef5606cfe3aff8ab3f6d0b3f5fbf1cad",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 378710,
        "upload_time": "2020-06-06T18:01:14",
        "upload_time_iso_8601": "2020-06-06T18:01:14.689075Z",
        "url": "https://files.pythonhosted.org/packages/43/f9/202368f95818373437b51b752a0e264f1c6ba7a4b49bdf3254ac36d65902/anyks-lm-3.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3440ed08963aad9b6e6025acc39f2e22594ae08798c451dcbade51290b267c66",
          "md5": "b3a8a89e2d24e5500d9f8eab096bfa46",
          "sha256": "60d76df2b275c3175d8f836e0430b1bb93deaa82cb3b3fe4a0ea160c12309fd1"
        },
        "downloads": -1,
        "filename": "anyks_lm-3.0.3-cp37-cp37m-macosx_10_15_x86_64.whl",
        "has_sig": false,
        "md5_digest": "b3a8a89e2d24e5500d9f8eab096bfa46",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.6",
        "size": 895907,
        "upload_time": "2020-06-12T15:19:07",
        "upload_time_iso_8601": "2020-06-12T15:19:07.087028Z",
        "url": "https://files.pythonhosted.org/packages/34/40/ed08963aad9b6e6025acc39f2e22594ae08798c451dcbade51290b267c66/anyks_lm-3.0.3-cp37-cp37m-macosx_10_15_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "be02a1488674410d8371b893e37889163ae2845173b0612f5e5a6939d61104ab",
          "md5": "b82c0f0ff062dd6138b2d30276b3605b",
          "sha256": "cbf503260a9cad4698c57b514706a460e7582bf480e4a29d85ce6b1306680bb0"
        },
        "downloads": -1,
        "filename": "anyks-lm-3.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "b82c0f0ff062dd6138b2d30276b3605b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 378870,
        "upload_time": "2020-06-12T15:19:09",
        "upload_time_iso_8601": "2020-06-12T15:19:09.340727Z",
        "url": "https://files.pythonhosted.org/packages/be/02/a1488674410d8371b893e37889163ae2845173b0612f5e5a6939d61104ab/anyks-lm-3.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d1869ee7e9fb15686611983639e0a788c5c0bfb43d31c3836a328c3520f3fb13",
          "md5": "3bfb941b4f30e6305fd579af6d755fad",
          "sha256": "cc0fcb31063a0633d98cb73d4e10ae65951c9120bcbe9c50654030b6eeb954e6"
        },
        "downloads": -1,
        "filename": "anyks_lm-3.0.4-cp37-cp37m-macosx_10_15_x86_64.whl",
        "has_sig": false,
        "md5_digest": "3bfb941b4f30e6305fd579af6d755fad",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.6",
        "size": 906733,
        "upload_time": "2020-06-20T11:04:25",
        "upload_time_iso_8601": "2020-06-20T11:04:25.978239Z",
        "url": "https://files.pythonhosted.org/packages/d1/86/9ee7e9fb15686611983639e0a788c5c0bfb43d31c3836a328c3520f3fb13/anyks_lm-3.0.4-cp37-cp37m-macosx_10_15_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5a2bd79e07d1ddbc218e75a6149b47df9124db9c4f16f81dae2ef337f52574ca",
          "md5": "ae2a598f8c86ee11d1469e8c4ff65277",
          "sha256": "d0dd6942af9e9ab1892ec3cd9bd2d99b478a5372e5ceb1cd02a06a999901a731"
        },
        "downloads": -1,
        "filename": "anyks-lm-3.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "ae2a598f8c86ee11d1469e8c4ff65277",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 382835,
        "upload_time": "2020-06-20T11:04:28",
        "upload_time_iso_8601": "2020-06-20T11:04:28.911538Z",
        "url": "https://files.pythonhosted.org/packages/5a/2b/d79e07d1ddbc218e75a6149b47df9124db9c4f16f81dae2ef337f52574ca/anyks-lm-3.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1fd84e81e253cc29107f00a210ce82963d626b06217e5e5d543683a7c89b8011",
          "md5": "f7b4f272fe009ee5856af912b11d5f63",
          "sha256": "ee1c75ccfe5e5bac4ac7df33c867505445d4eea82f1d834800dc6a7e5fcda27b"
        },
        "downloads": -1,
        "filename": "anyks_lm-3.0.5-cp37-cp37m-macosx_10_15_x86_64.whl",
        "has_sig": false,
        "md5_digest": "f7b4f272fe009ee5856af912b11d5f63",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.6",
        "size": 907565,
        "upload_time": "2020-06-20T11:22:27",
        "upload_time_iso_8601": "2020-06-20T11:22:27.519196Z",
        "url": "https://files.pythonhosted.org/packages/1f/d8/4e81e253cc29107f00a210ce82963d626b06217e5e5d543683a7c89b8011/anyks_lm-3.0.5-cp37-cp37m-macosx_10_15_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1460899f9b06eebf0912dbc3eb842ef821030f61318f7f48b354f973b30b087a",
          "md5": "fb3460addb2cb9ab85bb5e80354f25f1",
          "sha256": "420d16560644281463ab8f60d4b0bafad8c93cfe544f1b4acd35a1a2218dbc6b"
        },
        "downloads": -1,
        "filename": "anyks-lm-3.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "fb3460addb2cb9ab85bb5e80354f25f1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 382866,
        "upload_time": "2020-06-20T11:22:29",
        "upload_time_iso_8601": "2020-06-20T11:22:29.828494Z",
        "url": "https://files.pythonhosted.org/packages/14/60/899f9b06eebf0912dbc3eb842ef821030f61318f7f48b354f973b30b087a/anyks-lm-3.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "030a85fb801a8eb0833772bded6f7205d374b79f84fa3ad2f5c3f620725e6d52",
          "md5": "48ae7a858c4764e99aed9348b6d44204",
          "sha256": "d8f38d3dddcfab92d6e71fb49d3a950a1b8ca25411ba959deb7b890beb6431a5"
        },
        "downloads": -1,
        "filename": "anyks_lm-3.0.6-cp37-cp37m-macosx_10_15_x86_64.whl",
        "has_sig": false,
        "md5_digest": "48ae7a858c4764e99aed9348b6d44204",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.6",
        "size": 907062,
        "upload_time": "2020-07-05T17:05:29",
        "upload_time_iso_8601": "2020-07-05T17:05:29.355441Z",
        "url": "https://files.pythonhosted.org/packages/03/0a/85fb801a8eb0833772bded6f7205d374b79f84fa3ad2f5c3f620725e6d52/anyks_lm-3.0.6-cp37-cp37m-macosx_10_15_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f0b40c21932e304af395681d26d6ef2a3628877a760f5cf5c2df78f3abb48984",
          "md5": "110930d511fd94161c8732fc9b0ba77b",
          "sha256": "9e1a13e3360188cb8c072a0b2bea03ce68d76151d4f6b51b5924cf872c37a895"
        },
        "downloads": -1,
        "filename": "anyks-lm-3.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "110930d511fd94161c8732fc9b0ba77b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 382790,
        "upload_time": "2020-07-05T17:05:31",
        "upload_time_iso_8601": "2020-07-05T17:05:31.866789Z",
        "url": "https://files.pythonhosted.org/packages/f0/b4/0c21932e304af395681d26d6ef2a3628877a760f5cf5c2df78f3abb48984/anyks-lm-3.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5bcc6ad75442985a32b19d38f2eb1733f55d92510e1659a677b16ea8b1425405",
          "md5": "73d59d714240d7bf34c1c3de92f8f25d",
          "sha256": "f63b8e9eac978335cd37dae754c43248f82dd5e4029de4e9d1df6031265fc8a9"
        },
        "downloads": -1,
        "filename": "anyks-lm-3.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "73d59d714240d7bf34c1c3de92f8f25d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 382933,
        "upload_time": "2020-07-23T11:13:54",
        "upload_time_iso_8601": "2020-07-23T11:13:54.444421Z",
        "url": "https://files.pythonhosted.org/packages/5b/cc/6ad75442985a32b19d38f2eb1733f55d92510e1659a677b16ea8b1425405/anyks-lm-3.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "887eaeb86c8fdebe4dcc4809e4d82a07751e9baaf5a74d119361950b20b85680",
          "md5": "f4bca2ddefd38e5b9a6b75f77086f932",
          "sha256": "4783f9c5e39b9c832f90eb18f6fc2d11d1b4e38e369f77ed52ab73a3fdddf69c"
        },
        "downloads": -1,
        "filename": "anyks-lm-3.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "f4bca2ddefd38e5b9a6b75f77086f932",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 382960,
        "upload_time": "2020-07-23T11:45:23",
        "upload_time_iso_8601": "2020-07-23T11:45:23.922608Z",
        "url": "https://files.pythonhosted.org/packages/88/7e/aeb86c8fdebe4dcc4809e4d82a07751e9baaf5a74d119361950b20b85680/anyks-lm-3.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b4268c2d29409df5d04f5f724c9f0d991671d06e77073b65dbd082a30f16b26",
          "md5": "9f7f54deaa112bc8d70e7d208185157b",
          "sha256": "819e5f14d65dd6119d25c18945109829365586d58d01faee3396ca3218d4bd81"
        },
        "downloads": -1,
        "filename": "anyks_lm-3.0.9-cp38-cp38-macosx_10_15_x86_64.whl",
        "has_sig": false,
        "md5_digest": "9f7f54deaa112bc8d70e7d208185157b",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.6",
        "size": 923261,
        "upload_time": "2020-07-24T20:32:15",
        "upload_time_iso_8601": "2020-07-24T20:32:15.780419Z",
        "url": "https://files.pythonhosted.org/packages/8b/42/68c2d29409df5d04f5f724c9f0d991671d06e77073b65dbd082a30f16b26/anyks_lm-3.0.9-cp38-cp38-macosx_10_15_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b71a4e9827b31b3555fb710622b5159b9f3a67d56c2e235afd66a39a3d4f0d4d",
          "md5": "c5e0c73c7e3e1f5c6d2c5fb11ccbd822",
          "sha256": "1f44bea3553042781faa8acea2f6f4d41be1b573dd22e1bd623d40f6695bb185"
        },
        "downloads": -1,
        "filename": "anyks-lm-3.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "c5e0c73c7e3e1f5c6d2c5fb11ccbd822",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 397177,
        "upload_time": "2020-07-24T20:32:18",
        "upload_time_iso_8601": "2020-07-24T20:32:18.551282Z",
        "url": "https://files.pythonhosted.org/packages/b7/1a/4e9827b31b3555fb710622b5159b9f3a67d56c2e235afd66a39a3d4f0d4d/anyks-lm-3.0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5452aade7b2acef166142ac406811c07d099da4a7947284011b465d1e3c00a31",
          "md5": "fc86da6506cc81b27e15a620be8fb445",
          "sha256": "eb324a4a449cd3dc99e4d9b7f6cab01850b5e94601ff94be0175abb03dfbed58"
        },
        "downloads": -1,
        "filename": "anyks_lm-3.1.0-cp38-cp38-macosx_10_15_x86_64.whl",
        "has_sig": false,
        "md5_digest": "fc86da6506cc81b27e15a620be8fb445",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.6",
        "size": 923621,
        "upload_time": "2020-07-28T00:57:49",
        "upload_time_iso_8601": "2020-07-28T00:57:49.759643Z",
        "url": "https://files.pythonhosted.org/packages/54/52/aade7b2acef166142ac406811c07d099da4a7947284011b465d1e3c00a31/anyks_lm-3.1.0-cp38-cp38-macosx_10_15_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a17747eb07498bea348c96efbca699c052dde327eb66716cd347cd563249f847",
          "md5": "44caca855855edd315af37e09d7269f2",
          "sha256": "0d5e454da443eb14cf0c4aa30c3f2822e7113a8beeb6002dd00757bb67fff6db"
        },
        "downloads": -1,
        "filename": "anyks-lm-3.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "44caca855855edd315af37e09d7269f2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 397514,
        "upload_time": "2020-07-28T00:57:53",
        "upload_time_iso_8601": "2020-07-28T00:57:53.422291Z",
        "url": "https://files.pythonhosted.org/packages/a1/77/47eb07498bea348c96efbca699c052dde327eb66716cd347cd563249f847/anyks-lm-3.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "14a386e3bee71f8ec07e225ae4d598718bd493c7a91245b7729ed4634e0f6cb0",
          "md5": "c6d567076a4fb5107b010e3c50a2887b",
          "sha256": "be7650a3b0ef43edccbd986b4335a5fdfffb111308bb8c1cb87ac9d66b3154fd"
        },
        "downloads": -1,
        "filename": "anyks_lm-3.1.1-cp38-cp38-macosx_10_15_x86_64.whl",
        "has_sig": false,
        "md5_digest": "c6d567076a4fb5107b010e3c50a2887b",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.6",
        "size": 923696,
        "upload_time": "2020-07-28T01:18:23",
        "upload_time_iso_8601": "2020-07-28T01:18:23.440287Z",
        "url": "https://files.pythonhosted.org/packages/14/a3/86e3bee71f8ec07e225ae4d598718bd493c7a91245b7729ed4634e0f6cb0/anyks_lm-3.1.1-cp38-cp38-macosx_10_15_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f15315c646a17f66311f0ea627d1acd520abddcb01d627f1df2ae0aef7d52224",
          "md5": "555a44b207ed459d7b41d1f6aeeb4247",
          "sha256": "7d58a346f1b826fb75cd57f817f8d3df4c73299183333e622fea295b621f1a11"
        },
        "downloads": -1,
        "filename": "anyks-lm-3.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "555a44b207ed459d7b41d1f6aeeb4247",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 397560,
        "upload_time": "2020-07-28T01:18:26",
        "upload_time_iso_8601": "2020-07-28T01:18:26.465934Z",
        "url": "https://files.pythonhosted.org/packages/f1/53/15c646a17f66311f0ea627d1acd520abddcb01d627f1df2ae0aef7d52224/anyks-lm-3.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "050923b48e9f81ca4cedd831e12a1cdfa241fc59d6e312b7991364876a1e1d95",
          "md5": "c521dc1d4ac67d9ea5a33d94139488d4",
          "sha256": "062630ad96bc90c048f256a8cfccef1dc850a7b708609fd2745f2a8156ce1acd"
        },
        "downloads": -1,
        "filename": "anyks_lm-3.1.4-cp38-cp38-macosx_10_15_x86_64.whl",
        "has_sig": false,
        "md5_digest": "c521dc1d4ac67d9ea5a33d94139488d4",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.6",
        "size": 922776,
        "upload_time": "2020-07-29T15:26:29",
        "upload_time_iso_8601": "2020-07-29T15:26:29.007174Z",
        "url": "https://files.pythonhosted.org/packages/05/09/23b48e9f81ca4cedd831e12a1cdfa241fc59d6e312b7991364876a1e1d95/anyks_lm-3.1.4-cp38-cp38-macosx_10_15_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1582de2a562e04a55644797db58c842237989f9643cafa28fd67b952f7da14d1",
          "md5": "7eba1464b20da1f58102a2dedb358de9",
          "sha256": "2bea2368d3e2ab66f59ffcaddf3e2a8cab888dc7149e99968c37523fb7ed4038"
        },
        "downloads": -1,
        "filename": "anyks-lm-3.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "7eba1464b20da1f58102a2dedb358de9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 398367,
        "upload_time": "2020-07-29T15:26:33",
        "upload_time_iso_8601": "2020-07-29T15:26:33.615309Z",
        "url": "https://files.pythonhosted.org/packages/15/82/de2a562e04a55644797db58c842237989f9643cafa28fd67b952f7da14d1/anyks-lm-3.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "872bbde249f014aa20ff871324b0dccf7d4554cb3f9fbea6afe8005772837f1a",
          "md5": "de36c85d140b4d088e189e7ceeda9e81",
          "sha256": "22312ec5157f035d23ef16c943507973a05eeba70b034b026dcc9c7e03c985bf"
        },
        "downloads": -1,
        "filename": "anyks_lm-3.1.5-cp38-cp38-macosx_10_15_x86_64.whl",
        "has_sig": false,
        "md5_digest": "de36c85d140b4d088e189e7ceeda9e81",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.6",
        "size": 923125,
        "upload_time": "2020-07-30T16:20:05",
        "upload_time_iso_8601": "2020-07-30T16:20:05.785672Z",
        "url": "https://files.pythonhosted.org/packages/87/2b/bde249f014aa20ff871324b0dccf7d4554cb3f9fbea6afe8005772837f1a/anyks_lm-3.1.5-cp38-cp38-macosx_10_15_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5c145c8c5f4735be3e9df8fe0eb4f150410c101b1ce418919cac3099eec9686e",
          "md5": "292eb50710b4c9ed7f10fc3269a6cf1a",
          "sha256": "28ef2a65d3ae7ce69340785477773150f5f9428f9b37df0cb9e1fd034626460a"
        },
        "downloads": -1,
        "filename": "anyks-lm-3.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "292eb50710b4c9ed7f10fc3269a6cf1a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 398703,
        "upload_time": "2020-07-30T16:20:08",
        "upload_time_iso_8601": "2020-07-30T16:20:08.615694Z",
        "url": "https://files.pythonhosted.org/packages/5c/14/5c8c5f4735be3e9df8fe0eb4f150410c101b1ce418919cac3099eec9686e/anyks-lm-3.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "120475e14c05b80dc4d41a77d3c95eb883d4326be5aa0c420a6c62f68773ba91",
          "md5": "61dc4ed08a3571f506544c9c1635a0b3",
          "sha256": "e9d14b440bdb0c358bf8ea8330344c6c41e534326dc4fd9ae4e46c2485f2f838"
        },
        "downloads": -1,
        "filename": "anyks-lm-3.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "61dc4ed08a3571f506544c9c1635a0b3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 260925,
        "upload_time": "2020-07-31T13:27:39",
        "upload_time_iso_8601": "2020-07-31T13:27:39.806871Z",
        "url": "https://files.pythonhosted.org/packages/12/04/75e14c05b80dc4d41a77d3c95eb883d4326be5aa0c420a6c62f68773ba91/anyks-lm-3.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3732c5f9985f5172da87427940a18ddf0787fe5bf064a6e2a6c5da189b9ad539",
          "md5": "8f7cc70994a925f4c45d18e130c833b4",
          "sha256": "a62554eddd8eb22b8613de4bfc0fb7bd264bfd567e94a0a40b42b27272f1b680"
        },
        "downloads": -1,
        "filename": "anyks_lm-3.1.7-cp38-cp38-macosx_10_15_x86_64.whl",
        "has_sig": false,
        "md5_digest": "8f7cc70994a925f4c45d18e130c833b4",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.6",
        "size": 906050,
        "upload_time": "2020-07-31T13:33:42",
        "upload_time_iso_8601": "2020-07-31T13:33:42.354778Z",
        "url": "https://files.pythonhosted.org/packages/37/32/c5f9985f5172da87427940a18ddf0787fe5bf064a6e2a6c5da189b9ad539/anyks_lm-3.1.7-cp38-cp38-macosx_10_15_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2891d071d3b001e72a3306b47763f9ffab6cbc61d36e0499b254e5ad07cd5718",
          "md5": "1f85ea346df46fd218c1a4aed3386152",
          "sha256": "85cc520199cdf5a0cbdb0eab88e922ed563b4bad0b2fc4bc459196081cabe419"
        },
        "downloads": -1,
        "filename": "anyks-lm-3.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "1f85ea346df46fd218c1a4aed3386152",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 394101,
        "upload_time": "2020-07-31T13:33:47",
        "upload_time_iso_8601": "2020-07-31T13:33:47.282780Z",
        "url": "https://files.pythonhosted.org/packages/28/91/d071d3b001e72a3306b47763f9ffab6cbc61d36e0499b254e5ad07cd5718/anyks-lm-3.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "26b1846ec8cfe7cd5671402d3321086d5e3e5835bddbc7da128b69da37e0f3b6",
          "md5": "2607ce1149304a6574367f4f03853cb6",
          "sha256": "0aa68da3df2190eaae5cdf0240e1aef722476b9183ce368e182e22b80986c9f3"
        },
        "downloads": -1,
        "filename": "anyks_lm-3.1.8-cp38-cp38-macosx_10_15_x86_64.whl",
        "has_sig": false,
        "md5_digest": "2607ce1149304a6574367f4f03853cb6",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.6",
        "size": 906232,
        "upload_time": "2020-07-31T22:22:22",
        "upload_time_iso_8601": "2020-07-31T22:22:22.619933Z",
        "url": "https://files.pythonhosted.org/packages/26/b1/846ec8cfe7cd5671402d3321086d5e3e5835bddbc7da128b69da37e0f3b6/anyks_lm-3.1.8-cp38-cp38-macosx_10_15_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6e41f6cd960ad8dab424d7482681d645bc171e16d6b050b63323dc004cf6abc4",
          "md5": "e2c22ecb0ac2ee73f03806d7a13ecb92",
          "sha256": "3f615e6bcca2f87da9c416d289c688629d251c244e03c8d9a54708dadc855747"
        },
        "downloads": -1,
        "filename": "anyks-lm-3.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "e2c22ecb0ac2ee73f03806d7a13ecb92",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 394174,
        "upload_time": "2020-07-31T22:22:26",
        "upload_time_iso_8601": "2020-07-31T22:22:26.492921Z",
        "url": "https://files.pythonhosted.org/packages/6e/41/f6cd960ad8dab424d7482681d645bc171e16d6b050b63323dc004cf6abc4/anyks-lm-3.1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.1.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "773e3724b0fc61eb223d3819711f6569dcb89603db9b1718c6850de59c0223fc",
          "md5": "7a0a643ab2094c69c6f56b327eb52d8c",
          "sha256": "8e5a91ea92be4b363fe98a50003e7a5f4b2da7941e92bb8f893307bd123282be"
        },
        "downloads": -1,
        "filename": "anyks_lm-3.1.9-cp38-cp38-macosx_10_15_x86_64.whl",
        "has_sig": false,
        "md5_digest": "7a0a643ab2094c69c6f56b327eb52d8c",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.6",
        "size": 905346,
        "upload_time": "2020-08-02T14:38:40",
        "upload_time_iso_8601": "2020-08-02T14:38:40.714168Z",
        "url": "https://files.pythonhosted.org/packages/77/3e/3724b0fc61eb223d3819711f6569dcb89603db9b1718c6850de59c0223fc/anyks_lm-3.1.9-cp38-cp38-macosx_10_15_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3e8d2a4c96db894ac3944de75740afeeec8cc2006c4d384a6f4a2a58b1f12eb1",
          "md5": "af4dab330a19962de4b975ed3f9a2635",
          "sha256": "22ee1c1767ed285bb398066f1391bf8d55235417775a9b170086adada6e71e30"
        },
        "downloads": -1,
        "filename": "anyks-lm-3.1.9.tar.gz",
        "has_sig": false,
        "md5_digest": "af4dab330a19962de4b975ed3f9a2635",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 393691,
        "upload_time": "2020-08-02T14:38:43",
        "upload_time_iso_8601": "2020-08-02T14:38:43.474264Z",
        "url": "https://files.pythonhosted.org/packages/3e/8d/2a4c96db894ac3944de75740afeeec8cc2006c4d384a6f4a2a58b1f12eb1/anyks-lm-3.1.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "609b951d87ca35e860e87fbc8aed95fe3bb2c6fd573c8c30f82391d68e76d1ed",
          "md5": "9d4eab11597f5a77a980301170d8dbe0",
          "sha256": "b8c2ec23aaab65f805c8cb68f4da8311df00715436937a4aedd26a9385be9e72"
        },
        "downloads": -1,
        "filename": "anyks_lm-3.2.0-cp38-cp38-macosx_10_15_x86_64.whl",
        "has_sig": false,
        "md5_digest": "9d4eab11597f5a77a980301170d8dbe0",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.6",
        "size": 906405,
        "upload_time": "2020-08-02T17:23:15",
        "upload_time_iso_8601": "2020-08-02T17:23:15.884362Z",
        "url": "https://files.pythonhosted.org/packages/60/9b/951d87ca35e860e87fbc8aed95fe3bb2c6fd573c8c30f82391d68e76d1ed/anyks_lm-3.2.0-cp38-cp38-macosx_10_15_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "72f282318ba7a00e8b015eeb6d7192e762a5099e54eac5c12395476a3e6f1e89",
          "md5": "4e8fe58e4854a65d3cd56d13cfd6a555",
          "sha256": "fb514f00497420c581865aecf5e57730dbaa2b083a324eb248a7aef6069929f6"
        },
        "downloads": -1,
        "filename": "anyks-lm-3.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4e8fe58e4854a65d3cd56d13cfd6a555",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 393819,
        "upload_time": "2020-08-02T17:23:18",
        "upload_time_iso_8601": "2020-08-02T17:23:18.752374Z",
        "url": "https://files.pythonhosted.org/packages/72/f2/82318ba7a00e8b015eeb6d7192e762a5099e54eac5c12395476a3e6f1e89/anyks-lm-3.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "85ba7190fb3d3e28a1a5e3e851d17836454f977001402b39bcb56765c1b984b4",
          "md5": "5cf236a1bf94698e148986a4f67fc64e",
          "sha256": "6e232964fcdafd6942024b578d5876541869d18f25828570c1d4fddb6927eaba"
        },
        "downloads": -1,
        "filename": "anyks_lm-3.2.1-cp38-cp38-macosx_10_15_x86_64.whl",
        "has_sig": false,
        "md5_digest": "5cf236a1bf94698e148986a4f67fc64e",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.6",
        "size": 906415,
        "upload_time": "2020-08-02T20:11:08",
        "upload_time_iso_8601": "2020-08-02T20:11:08.307541Z",
        "url": "https://files.pythonhosted.org/packages/85/ba/7190fb3d3e28a1a5e3e851d17836454f977001402b39bcb56765c1b984b4/anyks_lm-3.2.1-cp38-cp38-macosx_10_15_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd908b1ad46ebca1373f33f70b7c303969080afd461cd664bc546fde53feb842",
          "md5": "7ef12fcab8605b12025988fd7d1b8689",
          "sha256": "082e173dd9fd308efcb2e8c7eb8c3c94391e90f2786b816a5636cbd911ec3692"
        },
        "downloads": -1,
        "filename": "anyks-lm-3.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7ef12fcab8605b12025988fd7d1b8689",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 393801,
        "upload_time": "2020-08-02T20:11:11",
        "upload_time_iso_8601": "2020-08-02T20:11:11.126248Z",
        "url": "https://files.pythonhosted.org/packages/cd/90/8b1ad46ebca1373f33f70b7c303969080afd461cd664bc546fde53feb842/anyks-lm-3.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1a768b9d1204660eaf11610daf6a75e45280f4dcc278d16f714b846cfd5634ca",
          "md5": "7724e474d312f98e638ca9c5a5d25a7e",
          "sha256": "3d53461a60f25f830e0d093e22b40ed057d90b9a4d47e12b3eb4612223e6e97b"
        },
        "downloads": -1,
        "filename": "anyks_lm-3.2.2-cp38-cp38-macosx_10_15_x86_64.whl",
        "has_sig": false,
        "md5_digest": "7724e474d312f98e638ca9c5a5d25a7e",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.6",
        "size": 905455,
        "upload_time": "2020-08-04T14:01:23",
        "upload_time_iso_8601": "2020-08-04T14:01:23.938779Z",
        "url": "https://files.pythonhosted.org/packages/1a/76/8b9d1204660eaf11610daf6a75e45280f4dcc278d16f714b846cfd5634ca/anyks_lm-3.2.2-cp38-cp38-macosx_10_15_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "da594d1a52f1c6f226c2f960df2a17dddf1c9e816defc33cc0474726ea7f4f24",
          "md5": "e83c25587d107dfce5eb51d1fbc94024",
          "sha256": "bdcd35a7e1437b0b9e8d68f33980c7304958c2c3c0c8e3bbf58bb4865601c278"
        },
        "downloads": -1,
        "filename": "anyks-lm-3.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e83c25587d107dfce5eb51d1fbc94024",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 393709,
        "upload_time": "2020-08-04T14:01:28",
        "upload_time_iso_8601": "2020-08-04T14:01:28.174846Z",
        "url": "https://files.pythonhosted.org/packages/da/59/4d1a52f1c6f226c2f960df2a17dddf1c9e816defc33cc0474726ea7f4f24/anyks-lm-3.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d897f7eee3c01bdee972de5aad9393dc8602af753ca5bfa51c1876d6702a286b",
          "md5": "c08036886955ea483dbdbb22d7eac8eb",
          "sha256": "32f3f5eb11957ac07c5e0ed416215eb202433a6a77c0dede87be37df03344f73"
        },
        "downloads": -1,
        "filename": "anyks_lm-3.2.3-cp38-cp38-macosx_10_15_x86_64.whl",
        "has_sig": false,
        "md5_digest": "c08036886955ea483dbdbb22d7eac8eb",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.6",
        "size": 905471,
        "upload_time": "2020-08-04T15:13:12",
        "upload_time_iso_8601": "2020-08-04T15:13:12.295397Z",
        "url": "https://files.pythonhosted.org/packages/d8/97/f7eee3c01bdee972de5aad9393dc8602af753ca5bfa51c1876d6702a286b/anyks_lm-3.2.3-cp38-cp38-macosx_10_15_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eacee1d0833bf05b25b931af67143372b42107d8806f7dc363629bc3adcca976",
          "md5": "e2295d93feb804806b0c8742d70f8a83",
          "sha256": "be94a3d6c7564e098a48e2a3e651546dd5ab88e2241a16fdfb442469c82ce671"
        },
        "downloads": -1,
        "filename": "anyks-lm-3.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "e2295d93feb804806b0c8742d70f8a83",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 393718,
        "upload_time": "2020-08-04T15:13:15",
        "upload_time_iso_8601": "2020-08-04T15:13:15.395419Z",
        "url": "https://files.pythonhosted.org/packages/ea/ce/e1d0833bf05b25b931af67143372b42107d8806f7dc363629bc3adcca976/anyks-lm-3.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b7a1b028cb6361cf4df7be0333834fe3f115a493fc844428ee6ec7bfaf81bf0e",
          "md5": "be8f3e8fc3a3c60b128443afe6cb1933",
          "sha256": "241ce0e427097cd61932e7596329aa60d39489fdc8df42abe4ffcef4aec54cb8"
        },
        "downloads": -1,
        "filename": "anyks_lm-3.2.4-cp38-cp38-macosx_10_15_x86_64.whl",
        "has_sig": false,
        "md5_digest": "be8f3e8fc3a3c60b128443afe6cb1933",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.6",
        "size": 905495,
        "upload_time": "2020-08-04T22:00:39",
        "upload_time_iso_8601": "2020-08-04T22:00:39.265691Z",
        "url": "https://files.pythonhosted.org/packages/b7/a1/b028cb6361cf4df7be0333834fe3f115a493fc844428ee6ec7bfaf81bf0e/anyks_lm-3.2.4-cp38-cp38-macosx_10_15_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b7860952d6c9003be5feb0a11a3e9e819839371f3bd2d8e779dc957eb024b0f6",
          "md5": "abc49e04f096d7cb2928b5b0e41fd2dc",
          "sha256": "fdecdbaabfadfbf129233c35b8151a8a5caf7e3e34bdd32fe6c9b2666a70f7dd"
        },
        "downloads": -1,
        "filename": "anyks-lm-3.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "abc49e04f096d7cb2928b5b0e41fd2dc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 393715,
        "upload_time": "2020-08-04T22:00:43",
        "upload_time_iso_8601": "2020-08-04T22:00:43.758684Z",
        "url": "https://files.pythonhosted.org/packages/b7/86/0952d6c9003be5feb0a11a3e9e819839371f3bd2d8e779dc957eb024b0f6/anyks-lm-3.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c30e8edc307ab3d125d0aa66d38bb3301f86ad518a42baf6d54769aa96af29c4",
          "md5": "8d6fe8fc01f2e5b177034a7b1ad2d8f6",
          "sha256": "e4887b2c9043fedc23ffdd2b61e6e7bbec4ec248a6310f60342a226864c389d1"
        },
        "downloads": -1,
        "filename": "anyks_lm-3.2.5-cp38-cp38-macosx_10_15_x86_64.whl",
        "has_sig": false,
        "md5_digest": "8d6fe8fc01f2e5b177034a7b1ad2d8f6",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.6",
        "size": 905515,
        "upload_time": "2020-08-06T14:37:45",
        "upload_time_iso_8601": "2020-08-06T14:37:45.393370Z",
        "url": "https://files.pythonhosted.org/packages/c3/0e/8edc307ab3d125d0aa66d38bb3301f86ad518a42baf6d54769aa96af29c4/anyks_lm-3.2.5-cp38-cp38-macosx_10_15_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "75765bb5b0d74f179ec5a3233d2a054de5db34d5a9ce0a38464f52b5329c3bb1",
          "md5": "33683b8d498ae596fbf4b1d2528e6ec6",
          "sha256": "f1176545bfbdc5ff4c17c8eb192cb3356cae6747e08caf92783f1dff1b7f949d"
        },
        "downloads": -1,
        "filename": "anyks-lm-3.2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "33683b8d498ae596fbf4b1d2528e6ec6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 393641,
        "upload_time": "2020-08-06T14:37:48",
        "upload_time_iso_8601": "2020-08-06T14:37:48.401135Z",
        "url": "https://files.pythonhosted.org/packages/75/76/5bb5b0d74f179ec5a3233d2a054de5db34d5a9ce0a38464f52b5329c3bb1/anyks-lm-3.2.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.2.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "32dccd22b53dbfb082bed5025872557e9dd29a2a886b8fad0e479ef7c6c7d63f",
          "md5": "2fc832ca64768e7bd6f7a640a10e5e28",
          "sha256": "d90470d264b1b3dd640683488bf1aae8b666048b2876e781ac90429c325939fd"
        },
        "downloads": -1,
        "filename": "anyks_lm-3.2.6-cp38-cp38-macosx_10_15_x86_64.whl",
        "has_sig": false,
        "md5_digest": "2fc832ca64768e7bd6f7a640a10e5e28",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.6",
        "size": 905516,
        "upload_time": "2020-08-06T19:45:34",
        "upload_time_iso_8601": "2020-08-06T19:45:34.528695Z",
        "url": "https://files.pythonhosted.org/packages/32/dc/cd22b53dbfb082bed5025872557e9dd29a2a886b8fad0e479ef7c6c7d63f/anyks_lm-3.2.6-cp38-cp38-macosx_10_15_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cda3c48d5625737f1b3f7d9e8c971fe8a0eb8db9fbe07d4763b019fd1049fd10",
          "md5": "ced8464570e4b4c824718621f5a38d03",
          "sha256": "130a586dfd8bdefb6e2d54ea9805407c6d5abce229e1ba178199bf780202f8b1"
        },
        "downloads": -1,
        "filename": "anyks-lm-3.2.6.tar.gz",
        "has_sig": false,
        "md5_digest": "ced8464570e4b4c824718621f5a38d03",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 393661,
        "upload_time": "2020-08-06T19:45:37",
        "upload_time_iso_8601": "2020-08-06T19:45:37.798791Z",
        "url": "https://files.pythonhosted.org/packages/cd/a3/c48d5625737f1b3f7d9e8c971fe8a0eb8db9fbe07d4763b019fd1049fd10/anyks-lm-3.2.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.2.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c346ced1814ffe8d8ce6662034b330eb53522910fe25adf27edc47ebe53544f6",
          "md5": "ed070dcac1c11542929b6e90144bdfdc",
          "sha256": "dee5fb07510c66062dc0cd07c76d9a1b3ac42687074be3b254367a86c3d47cae"
        },
        "downloads": -1,
        "filename": "anyks-lm-3.2.8.tar.gz",
        "has_sig": false,
        "md5_digest": "ed070dcac1c11542929b6e90144bdfdc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 402721,
        "upload_time": "2020-08-30T20:44:42",
        "upload_time_iso_8601": "2020-08-30T20:44:42.305339Z",
        "url": "https://files.pythonhosted.org/packages/c3/46/ced1814ffe8d8ce6662034b330eb53522910fe25adf27edc47ebe53544f6/anyks-lm-3.2.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.2.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e01917bf33705ebbbc376dcfe674e2cb72d30f6d139c0a44238575cb77f3680c",
          "md5": "38607338848ce1a4a02f413761f52e81",
          "sha256": "4da66992aa36fa80e5251673deca485546d06891270b776660e1132536c196f3"
        },
        "downloads": -1,
        "filename": "anyks_lm-3.2.9-cp38-cp38-macosx_10_15_x86_64.whl",
        "has_sig": false,
        "md5_digest": "38607338848ce1a4a02f413761f52e81",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.6",
        "size": 930132,
        "upload_time": "2020-08-30T21:42:47",
        "upload_time_iso_8601": "2020-08-30T21:42:47.436016Z",
        "url": "https://files.pythonhosted.org/packages/e0/19/17bf33705ebbbc376dcfe674e2cb72d30f6d139c0a44238575cb77f3680c/anyks_lm-3.2.9-cp38-cp38-macosx_10_15_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "60eb155574bb0480f2337900bfb034ffdd74212998078daf35940111eae27c0d",
          "md5": "951d5cd8d965fe5d81153d8220d16233",
          "sha256": "aece224e7f1cb2d3fe1fc3f2106530553f47c26e2681888b1e45a3ffbf526f29"
        },
        "downloads": -1,
        "filename": "anyks-lm-3.2.9.tar.gz",
        "has_sig": false,
        "md5_digest": "951d5cd8d965fe5d81153d8220d16233",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 403048,
        "upload_time": "2020-08-30T21:42:50",
        "upload_time_iso_8601": "2020-08-30T21:42:50.468608Z",
        "url": "https://files.pythonhosted.org/packages/60/eb/155574bb0480f2337900bfb034ffdd74212998078daf35940111eae27c0d/anyks-lm-3.2.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6a89f83440bb785701a1fd6df5414af03b7931d14f93937024cf861d41abfd4",
          "md5": "e048d72123127c384180931a3cd74fee",
          "sha256": "6fdff27fa6c70974df9f5105efa5d77519d527b4bc889d2c6da47df3d00115d0"
        },
        "downloads": -1,
        "filename": "anyks_lm-3.3.1-cp38-cp38-macosx_10_15_x86_64.whl",
        "has_sig": false,
        "md5_digest": "e048d72123127c384180931a3cd74fee",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.6",
        "size": 931342,
        "upload_time": "2020-09-02T20:18:52",
        "upload_time_iso_8601": "2020-09-02T20:18:52.774484Z",
        "url": "https://files.pythonhosted.org/packages/a6/a8/9f83440bb785701a1fd6df5414af03b7931d14f93937024cf861d41abfd4/anyks_lm-3.3.1-cp38-cp38-macosx_10_15_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ddc665de536370c60e9c8133126299c1493edfe1cc3522d8148785c10c04872b",
          "md5": "2b656b63f9d86d7fadc7973974088661",
          "sha256": "8183a225c3a6efc8728f2c2b424fa9ce68512129747b027726e42eb2544b52ab"
        },
        "downloads": -1,
        "filename": "anyks-lm-3.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2b656b63f9d86d7fadc7973974088661",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 403598,
        "upload_time": "2020-09-02T20:18:56",
        "upload_time_iso_8601": "2020-09-02T20:18:56.014966Z",
        "url": "https://files.pythonhosted.org/packages/dd/c6/65de536370c60e9c8133126299c1493edfe1cc3522d8148785c10c04872b/anyks-lm-3.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "80fce6573b088205af33d0d4f71ca3df98904f624a9a8236ab2b928876ac1f66",
          "md5": "3f64598dd8bf47d551ff76b710b6c899",
          "sha256": "00805bdd62a893382074ff931a0952907c6245b372b4b7fc204c4e9d00a642d4"
        },
        "downloads": -1,
        "filename": "anyks_lm-3.3.2-cp38-cp38-macosx_10_15_x86_64.whl",
        "has_sig": false,
        "md5_digest": "3f64598dd8bf47d551ff76b710b6c899",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.6",
        "size": 931094,
        "upload_time": "2020-09-04T10:35:18",
        "upload_time_iso_8601": "2020-09-04T10:35:18.950445Z",
        "url": "https://files.pythonhosted.org/packages/80/fc/e6573b088205af33d0d4f71ca3df98904f624a9a8236ab2b928876ac1f66/anyks_lm-3.3.2-cp38-cp38-macosx_10_15_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee45a8d8bd686b90f077ee2f1d0d2f7024ab461cb34b442ec065ef7d4db195c3",
          "md5": "1876d2fada86f895791d94e2e39b555b",
          "sha256": "0da72975ed4f2a1357aec2b2049c754f1f53331cb2a505dcb5cb5d41295c1f2d"
        },
        "downloads": -1,
        "filename": "anyks-lm-3.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "1876d2fada86f895791d94e2e39b555b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 403569,
        "upload_time": "2020-09-04T10:35:21",
        "upload_time_iso_8601": "2020-09-04T10:35:21.620193Z",
        "url": "https://files.pythonhosted.org/packages/ee/45/a8d8bd686b90f077ee2f1d0d2f7024ab461cb34b442ec065ef7d4db195c3/anyks-lm-3.3.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.3.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9c8f14adc14e9323c3d1403fa1ee1c508ff34b26c4f9af57bac38c6ca96c3941",
          "md5": "835d20930e7c97ace285802c5aed12cc",
          "sha256": "e7cc88dfc9ebadcb01f292c524d32a8152d2d8a41031a5007688e41d0b66be95"
        },
        "downloads": -1,
        "filename": "anyks_lm-3.3.3-cp38-cp38-macosx_10_15_x86_64.whl",
        "has_sig": false,
        "md5_digest": "835d20930e7c97ace285802c5aed12cc",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.6",
        "size": 931085,
        "upload_time": "2020-09-04T13:34:21",
        "upload_time_iso_8601": "2020-09-04T13:34:21.930498Z",
        "url": "https://files.pythonhosted.org/packages/9c/8f/14adc14e9323c3d1403fa1ee1c508ff34b26c4f9af57bac38c6ca96c3941/anyks_lm-3.3.3-cp38-cp38-macosx_10_15_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8e8029f9a21e3f3385cf6ddb5ad0fe1cdbf0a8e51bfa3cf02c3211466c4f96ec",
          "md5": "52e6967178ae2939b125ca8fc5282dd1",
          "sha256": "0d77df9a451ebba65bb01b34ed02a07ff80ba26ae8a559820ee78ced1c3e2f1b"
        },
        "downloads": -1,
        "filename": "anyks-lm-3.3.3.tar.gz",
        "has_sig": false,
        "md5_digest": "52e6967178ae2939b125ca8fc5282dd1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 403584,
        "upload_time": "2020-09-04T13:34:26",
        "upload_time_iso_8601": "2020-09-04T13:34:26.111963Z",
        "url": "https://files.pythonhosted.org/packages/8e/80/29f9a21e3f3385cf6ddb5ad0fe1cdbf0a8e51bfa3cf02c3211466c4f96ec/anyks-lm-3.3.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.3.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8937723bbcef9a46208d9d7c6d5813f0febee2fe6f7cd3ad4f50c7aa855ba40d",
          "md5": "bd8f355e051a1d23ba37a151f65206db",
          "sha256": "e24b8e662501e9a54a2cfac5c0ca3afe274763858521390c55c2dcb26c6d7d8c"
        },
        "downloads": -1,
        "filename": "anyks_lm-3.3.4-cp38-cp38-macosx_10_15_x86_64.whl",
        "has_sig": false,
        "md5_digest": "bd8f355e051a1d23ba37a151f65206db",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.6",
        "size": 931185,
        "upload_time": "2020-09-04T16:54:00",
        "upload_time_iso_8601": "2020-09-04T16:54:00.693282Z",
        "url": "https://files.pythonhosted.org/packages/89/37/723bbcef9a46208d9d7c6d5813f0febee2fe6f7cd3ad4f50c7aa855ba40d/anyks_lm-3.3.4-cp38-cp38-macosx_10_15_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e34355328efdded37fb4696c6ab11143b17014b0d9092c944b765aab5a999fdf",
          "md5": "2ca36f647cdba9cec1fa788b0d6f9129",
          "sha256": "6651ea069eeaca2148d32db77c9b1df3897e7441691b84cb366560b508464192"
        },
        "downloads": -1,
        "filename": "anyks-lm-3.3.4.tar.gz",
        "has_sig": false,
        "md5_digest": "2ca36f647cdba9cec1fa788b0d6f9129",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 403668,
        "upload_time": "2020-09-04T16:54:03",
        "upload_time_iso_8601": "2020-09-04T16:54:03.430858Z",
        "url": "https://files.pythonhosted.org/packages/e3/43/55328efdded37fb4696c6ab11143b17014b0d9092c944b765aab5a999fdf/anyks-lm-3.3.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.3.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "83a7796db71d0874ad4d208b136a42afdc70780a789245d56cb28d3743552563",
          "md5": "8e7191c03c0a903b8f5ab8d72c9efbfc",
          "sha256": "f46735ac59ef4b71c282d463d657a9befe9998cfaa4c842834c84bca0176297b"
        },
        "downloads": -1,
        "filename": "anyks_lm-3.3.5-cp38-cp38-macosx_10_15_x86_64.whl",
        "has_sig": false,
        "md5_digest": "8e7191c03c0a903b8f5ab8d72c9efbfc",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.6",
        "size": 931185,
        "upload_time": "2020-09-05T22:00:06",
        "upload_time_iso_8601": "2020-09-05T22:00:06.230877Z",
        "url": "https://files.pythonhosted.org/packages/83/a7/796db71d0874ad4d208b136a42afdc70780a789245d56cb28d3743552563/anyks_lm-3.3.5-cp38-cp38-macosx_10_15_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a7903e15e97d96874053a3d1910e9fa2f277174a5c3b9b667c768a10e267acff",
          "md5": "63f5ca9b3545326dd5fde44e7b87b766",
          "sha256": "e540930acfee9c27cf2d3caf7807565695c7623404a42240fbb37b2a9a5263f2"
        },
        "downloads": -1,
        "filename": "anyks-lm-3.3.5.tar.gz",
        "has_sig": false,
        "md5_digest": "63f5ca9b3545326dd5fde44e7b87b766",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 403694,
        "upload_time": "2020-09-05T22:00:11",
        "upload_time_iso_8601": "2020-09-05T22:00:11.218482Z",
        "url": "https://files.pythonhosted.org/packages/a7/90/3e15e97d96874053a3d1910e9fa2f277174a5c3b9b667c768a10e267acff/anyks-lm-3.3.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.3.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "026c810681aefe4ea6f719ebd1785ecc011713828ff9950227ac51856cda93b4",
          "md5": "aa101eb93da7e511402e8e86fb2e4757",
          "sha256": "9e362da956273871ce5bfeb13b4bb8c9b3369f15b7dd771194279e06da2a2101"
        },
        "downloads": -1,
        "filename": "anyks_lm-3.3.6-cp38-cp38-macosx_10_15_x86_64.whl",
        "has_sig": false,
        "md5_digest": "aa101eb93da7e511402e8e86fb2e4757",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.6",
        "size": 931271,
        "upload_time": "2020-09-10T18:26:11",
        "upload_time_iso_8601": "2020-09-10T18:26:11.790083Z",
        "url": "https://files.pythonhosted.org/packages/02/6c/810681aefe4ea6f719ebd1785ecc011713828ff9950227ac51856cda93b4/anyks_lm-3.3.6-cp38-cp38-macosx_10_15_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "29e6e3c9deaa174393130e27bea4a014e6ea43a4d3e90f666c829a656663f89b",
          "md5": "9875703826a274d42eb6b59a05a74afb",
          "sha256": "644a806a2101188ad7ac5d6a69c0d04f50a729d335b00f43d988c017572774cd"
        },
        "downloads": -1,
        "filename": "anyks-lm-3.3.6.tar.gz",
        "has_sig": false,
        "md5_digest": "9875703826a274d42eb6b59a05a74afb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 403741,
        "upload_time": "2020-09-10T18:26:16",
        "upload_time_iso_8601": "2020-09-10T18:26:16.448852Z",
        "url": "https://files.pythonhosted.org/packages/29/e6/e3c9deaa174393130e27bea4a014e6ea43a4d3e90f666c829a656663f89b/anyks-lm-3.3.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.4.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ac6b8d621aa8399b93b273a626d81c02b12b25b84f9f67e037fbb0f6e9db4526",
          "md5": "701e0808fb2f590a091ba6a9b113c349",
          "sha256": "eea197f4ea0ad9b76148de1cbb321e50ea39cfa8960c5a8268d3c54fe6554022"
        },
        "downloads": -1,
        "filename": "anyks_lm-3.4.4-cp38-cp38-macosx_10_15_x86_64.whl",
        "has_sig": false,
        "md5_digest": "701e0808fb2f590a091ba6a9b113c349",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.6",
        "size": 1077645,
        "upload_time": "2020-09-19T00:55:03",
        "upload_time_iso_8601": "2020-09-19T00:55:03.310147Z",
        "url": "https://files.pythonhosted.org/packages/ac/6b/8d621aa8399b93b273a626d81c02b12b25b84f9f67e037fbb0f6e9db4526/anyks_lm-3.4.4-cp38-cp38-macosx_10_15_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2fde01835b65f972323b0c45a59e2b054d2ef01039442de4f325291a35e63493",
          "md5": "522005e760530ce57cef4a93f69b7212",
          "sha256": "0cbaa09db597d142149f21c9c7edd5c83f695f50f1f67abdc4a7dfb948c71f11"
        },
        "downloads": -1,
        "filename": "anyks-lm-3.4.4.tar.gz",
        "has_sig": false,
        "md5_digest": "522005e760530ce57cef4a93f69b7212",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 449354,
        "upload_time": "2020-09-19T00:55:08",
        "upload_time_iso_8601": "2020-09-19T00:55:08.096851Z",
        "url": "https://files.pythonhosted.org/packages/2f/de/01835b65f972323b0c45a59e2b054d2ef01039442de4f325291a35e63493/anyks-lm-3.4.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.4.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "554a1dc6f2c8aff0c1e536427b49d4bbfb8032d02ab9840a2dbf7148aed59c5b",
          "md5": "8ae137dee94f1ff6a64f292a60e0cc24",
          "sha256": "252af32b921773fa5d095abac03b9f51f2ecb34befea230ff41ccefc2a042181"
        },
        "downloads": -1,
        "filename": "anyks_lm-3.4.5-cp38-cp38-macosx_10_15_x86_64.whl",
        "has_sig": false,
        "md5_digest": "8ae137dee94f1ff6a64f292a60e0cc24",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.6",
        "size": 1096434,
        "upload_time": "2020-09-19T19:15:48",
        "upload_time_iso_8601": "2020-09-19T19:15:48.062521Z",
        "url": "https://files.pythonhosted.org/packages/55/4a/1dc6f2c8aff0c1e536427b49d4bbfb8032d02ab9840a2dbf7148aed59c5b/anyks_lm-3.4.5-cp38-cp38-macosx_10_15_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "99bb261e3d33e51f73b0953942086e36f815d79631f13048b5ea219cd811b116",
          "md5": "8f8ad2a4ae3df3b74957874a8bd61df6",
          "sha256": "7271df05a216b25630dcc30f50c0d3f8222a817705da04578bac2bf32d8541c8"
        },
        "downloads": -1,
        "filename": "anyks-lm-3.4.5.tar.gz",
        "has_sig": false,
        "md5_digest": "8f8ad2a4ae3df3b74957874a8bd61df6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 449398,
        "upload_time": "2020-09-19T19:15:54",
        "upload_time_iso_8601": "2020-09-19T19:15:54.255728Z",
        "url": "https://files.pythonhosted.org/packages/99/bb/261e3d33e51f73b0953942086e36f815d79631f13048b5ea219cd811b116/anyks-lm-3.4.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.4.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa34eeff212626b58c2423b25783a083cdaaec3549edb7efdb15a66934e8971b",
          "md5": "756264f45c5e9023f777d0f3ee6198e6",
          "sha256": "f68925cd52eaf1a197750ed01d857740ce34c157a302e7fe37f6d40b3723efb8"
        },
        "downloads": -1,
        "filename": "anyks_lm-3.4.8-cp38-cp38-macosx_10_15_x86_64.whl",
        "has_sig": false,
        "md5_digest": "756264f45c5e9023f777d0f3ee6198e6",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.6",
        "size": 1096173,
        "upload_time": "2020-09-19T23:43:55",
        "upload_time_iso_8601": "2020-09-19T23:43:55.022501Z",
        "url": "https://files.pythonhosted.org/packages/aa/34/eeff212626b58c2423b25783a083cdaaec3549edb7efdb15a66934e8971b/anyks_lm-3.4.8-cp38-cp38-macosx_10_15_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b678004ee733e7fd8676d003db5b864e083139981041e0e75a7a0210df24381c",
          "md5": "ccfac0e8602c60f40294df449b534572",
          "sha256": "69b26750fae597ba475a76721c473b53fd0814567a95bfe373929663cba75f2c"
        },
        "downloads": -1,
        "filename": "anyks-lm-3.4.8.tar.gz",
        "has_sig": false,
        "md5_digest": "ccfac0e8602c60f40294df449b534572",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 449263,
        "upload_time": "2020-09-19T23:43:59",
        "upload_time_iso_8601": "2020-09-19T23:43:59.670390Z",
        "url": "https://files.pythonhosted.org/packages/b6/78/004ee733e7fd8676d003db5b864e083139981041e0e75a7a0210df24381c/anyks-lm-3.4.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.4.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "34a7c1fd164f75e4d1e0244cf53dc3db6fbc7c71b7a8e787ac59bb06395b9847",
          "md5": "510598c1633749c8ea13e2fd038c1876",
          "sha256": "6b4340fa07221b2007a9a9a3129820ad93006e5b020521917ef189308bde24d8"
        },
        "downloads": -1,
        "filename": "anyks_lm-3.4.9-cp38-cp38-macosx_10_15_x86_64.whl",
        "has_sig": false,
        "md5_digest": "510598c1633749c8ea13e2fd038c1876",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.6",
        "size": 1096377,
        "upload_time": "2020-09-20T11:29:41",
        "upload_time_iso_8601": "2020-09-20T11:29:41.877346Z",
        "url": "https://files.pythonhosted.org/packages/34/a7/c1fd164f75e4d1e0244cf53dc3db6fbc7c71b7a8e787ac59bb06395b9847/anyks_lm-3.4.9-cp38-cp38-macosx_10_15_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b70a1de664b85468219a0c4bad100eaf2626257354bd187d65642e50f257ed80",
          "md5": "1a3d5696b0e86dfe5c407a15cf7d5a7e",
          "sha256": "7ec7145a4df4d6a0cc1a77cc4935cdfb25623c045c51473c9c5dd7148ef08f85"
        },
        "downloads": -1,
        "filename": "anyks-lm-3.4.9.tar.gz",
        "has_sig": false,
        "md5_digest": "1a3d5696b0e86dfe5c407a15cf7d5a7e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 449313,
        "upload_time": "2020-09-20T11:29:52",
        "upload_time_iso_8601": "2020-09-20T11:29:52.018519Z",
        "url": "https://files.pythonhosted.org/packages/b7/0a/1de664b85468219a0c4bad100eaf2626257354bd187d65642e50f257ed80/anyks-lm-3.4.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6ffae5079319cd6a2fdb1fde521a3d214215d625770eebf0caf21385bbcbb715",
          "md5": "ff4a8fd61d4dbb9ec23a795493c9b9d3",
          "sha256": "42c9f869e957260e564836232bbf0e37c507cc7155a8c6024beaffebf6ac1526"
        },
        "downloads": -1,
        "filename": "anyks_lm-3.5.0-cp39-cp39-macosx_10_9_universal2.whl",
        "has_sig": false,
        "md5_digest": "ff4a8fd61d4dbb9ec23a795493c9b9d3",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": ">=3.6",
        "size": 1986560,
        "upload_time": "2023-01-05T00:04:23",
        "upload_time_iso_8601": "2023-01-05T00:04:23.650547Z",
        "url": "https://files.pythonhosted.org/packages/6f/fa/e5079319cd6a2fdb1fde521a3d214215d625770eebf0caf21385bbcbb715/anyks_lm-3.5.0-cp39-cp39-macosx_10_9_universal2.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3e3d8d49d9c3ff4013891b15d7cb8b9990084ee79acd14bcf05bf43bb40a76a7",
          "md5": "b0f79966fba47aa9d40ddc1c694a6485",
          "sha256": "7cdc9f7614dcde92fda2d4f64462b957f6e2e8427744a4f7b53ecaf794fd299a"
        },
        "downloads": -1,
        "filename": "anyks-lm-3.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b0f79966fba47aa9d40ddc1c694a6485",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 448809,
        "upload_time": "2023-01-05T00:01:56",
        "upload_time_iso_8601": "2023-01-05T00:01:56.914294Z",
        "url": "https://files.pythonhosted.org/packages/3e/3d/8d49d9c3ff4013891b15d7cb8b9990084ee79acd14bcf05bf43bb40a76a7/anyks-lm-3.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6ffae5079319cd6a2fdb1fde521a3d214215d625770eebf0caf21385bbcbb715",
        "md5": "ff4a8fd61d4dbb9ec23a795493c9b9d3",
        "sha256": "42c9f869e957260e564836232bbf0e37c507cc7155a8c6024beaffebf6ac1526"
      },
      "downloads": -1,
      "filename": "anyks_lm-3.5.0-cp39-cp39-macosx_10_9_universal2.whl",
      "has_sig": false,
      "md5_digest": "ff4a8fd61d4dbb9ec23a795493c9b9d3",
      "packagetype": "bdist_wheel",
      "python_version": "cp39",
      "requires_python": ">=3.6",
      "size": 1986560,
      "upload_time": "2023-01-05T00:04:23",
      "upload_time_iso_8601": "2023-01-05T00:04:23.650547Z",
      "url": "https://files.pythonhosted.org/packages/6f/fa/e5079319cd6a2fdb1fde521a3d214215d625770eebf0caf21385bbcbb715/anyks_lm-3.5.0-cp39-cp39-macosx_10_9_universal2.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3e3d8d49d9c3ff4013891b15d7cb8b9990084ee79acd14bcf05bf43bb40a76a7",
        "md5": "b0f79966fba47aa9d40ddc1c694a6485",
        "sha256": "7cdc9f7614dcde92fda2d4f64462b957f6e2e8427744a4f7b53ecaf794fd299a"
      },
      "downloads": -1,
      "filename": "anyks-lm-3.5.0.tar.gz",
      "has_sig": false,
      "md5_digest": "b0f79966fba47aa9d40ddc1c694a6485",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 448809,
      "upload_time": "2023-01-05T00:01:56",
      "upload_time_iso_8601": "2023-01-05T00:01:56.914294Z",
      "url": "https://files.pythonhosted.org/packages/3e/3d/8d49d9c3ff4013891b15d7cb8b9990084ee79acd14bcf05bf43bb40a76a7/anyks-lm-3.5.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}