{
  "info": {
    "author": "fbgencer",
    "author_email": "fbgencer8@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Markdownipy\n\n![](markdownipy_logo.png)\n\nMarkdownipy is a Python library to generate markdown files using only two operators and some helpers\n\nMarkdownipy can be used in jupyter notebooks to generate markdown outputs in python cells or inside any .py file, see below for examples\n\n##  `<`(lower than operator) writes text to markdown file, `|`(pipe operator) just gives property to the text\n\nEven this README file is genereted by markdownipy!\n\n[Checkout example file](./example.py)\n\n## Motivation\n\n---\n\n\nLately, I'm trying to write markdown documentations for different codes and I needed to put\nsome specs, numbers etc. so just copy-paste some tables, links.\nI was trying to change some predefined strings to speed up my writing process, yet\ninstead of text manipulation I just wanted to make it as a library.\n\nSometimes I also forget markdown syntax, so this library requires no memory (I hope so, there is even no function calls) :)\n\nOnly requirement is remembering the properties of markdownipy and the rest will be handled\n\n\n---\n\n### Install\n\n`pip install markdownipy`\n\n---\n\n### Quick start - example Jupyter cell\n\n```python\nfrom markdownipy import markdownipy\nfrom IPython.display import display,Markdown\n\nmd = markdownipy.markdownipy()\n\nmd < \"hello there\" | md.bold\n\nmd < \"This should be a italic text\" | md.italic\ndisplay(Markdown(md.print()))\n```\n\n__See the example jupter notebook output:__ [Example jupyter file](jupyter_example.ipynb)\n\n---\n\n### Quick start - example Python code\n\n```python\nfrom markdownipy import markdownipy\nmd = markdownipy.markdownipy()\n\n#Simple line\nmd < \"Hello there!\"\n\n#Bold text, numbers are also allowed\nmd < 3.14159 | md.bold\n\n#Italic text\nmd < \"Above bold text is just some digits of pi\" | md.italic\n\n#One line code and codeblock\n\nmd < \"One line code \" | md.code\nmd < '''\nvoid markdownipy_helper(int x, int y, int z):\n\treturn x*y*z\n''' | md.codeb(\"cpp\")\n\n\n#Lists \nmd < [\"Item1\",\"Item2\",\"Item3\"]\n\n#Tables\nmd < {\n\t\"Country\":[\"Fran\",\"Kate\",\"Ivan\"],\n\t\"Age\" : [30,48,73]\n}\n\n#E-mail, links\nmd < \"fbgencer8@gmail.com\" | md.link\nmd < \"fbgencer8@gmail.com\" | md.link(\"My mail\")\n\n#Image\nmd < \"./markdownipy_logo.png\" | md.image\n\n#Writing to a file, README or README.md both works!\n#Even md >> sys.stdout prints the whole markdown document\nmd >> \"README\"\n```\n\n---\n\n### Library keywords\n\nThis table is the whole documentation of markdownipy! (Assuming md is the markdown object in python)\n\n|Keywords|Explanation|Markdown equivalent|\n|:---:|:---:|:---:|\n|md.bold|Bold text|`__text__`|\n|md.italic|Italic text|`_text_`|\n|md.strike|Strikethrough text|`~~text~~`|\n|md.code|For single line code|` `code` `|\n|md.codeb|Code fence, takes optional arg as language name|` ```code``` `|\n|md.link or md.link(link_name)|Link text|`[link_name(optional)](link)`|\n|md.hline|Horizontal line|`---`|\n|md.chapter|Chapter|`Chapter_name\\n===`|\n|md.h1|Header level 1|`# Header1`|\n|md.h2|Header level 2|`## Header2`|\n|md.h3|Header level 3|`### Header3`|\n|md.h4|Header level 4|`#### Header4`|\n|md.h5|Header level 5|`##### Header5`|\n|md.h6|Header level 6|`###### Header6`|\n|md.image or md.image(image_name)|Image insertion|`![image_name(optional)](image_path)`|\n|md.task|Task entry in a list|`[ ] text`|\n|md.task_check|Checked task entry in a list|`[x] text`|\n|`object` \\| md.`keyword`|Pipes the above defined line property keywords to the object||\n|md < `object`|Adds any object to document (str,dict,list,numbers etc.)||\n|md > `file_name`|Writes document to a file||\n|md > `stdout`|Prints the document to console||\n|md.print()|Returns the markdown document as string||\n|md.clear()|Clears the markdown document||\n\n---\n\n---\n\n### Headers\n\n\n\n```python\nmd < \"This is a chapter\" | md.chapter\nmd < \"This is header1\" | md.h1\nmd < \"This is header2\" | md.h2\nmd < \"This is header3\" | md.h3\nmd < \"This is header4\" | md.h4\nmd < \"This is header5\" | md.h5\nmd < \"This is header6\" | md.h6\n```\n\n_Output :_\n\n---\n\nThis is a chapter\n===\n\n# This is header1\n\n## This is header2\n\n### This is header3\n\n#### This is header4\n\n##### This is header5\n\n###### This is header6\n\n---\n\n---\n\n### Bold, italic, strikethrough texts\n\n\n\n```python\nmd < \"This should be a bold text\" | md.bold\nmd < \"This is an italic text\" | md.italic\nmd < \"Strikethrough is banned\"  | md.strike\n```\n\n_Output :_\n\n---\n\n__This should be a bold text__\n\n_This is an italic text_\n\n~~Strikethrough is banned~~\n\n---\n\n---\n\n### Lists\n\n\n\n```python\nmd < [\n\t\"Classical mechanics\" | md.bold,\n\t[\n\t\t\"Newton's law of motion\",\n\t\t\"Lagrangian Mechanics\"\n\t],\n\t\"Thermodynamics and statistical mechanics\" | md.italic,\n\t\"Electromagnetism and photonics\",\n\t\"Relativistic mechanics\",\n\t\"Quantum mechanics, atomic physics, and molecular physics\",\n\t[\n\t\t\"*\", #For dot bullet put bullet type\n\t\t\"Schrödinger equation\",\n\t\t\"Quantum field theory\",\n\t\t[\n\t\t\t\"Lists can be nested :)\",\n\t\t\t\"This is another liner\",\n\t\t\t[\n\t\t\t\t\"Oh this is getting serious\" | md.strike,\n\t\t\t\t\"And now bunch of numbers\",\n\t\t\t\t[\n\t\t\t\t\t3.1415,\n\t\t\t\t\t2.7176,\n\t\t\t\t\t99999,\n\t\t\t\t\t88888\n\t\t\t\t],\n\t\t\t\t\"Now another item\"\n\t\t\t],\n\t\t],\n\t\t\"Quantum statistical mechanics\"\n\t],\n\t\"Optics and acoustics\",\n\t\"Condensed matter physics\",\n\t\"High-energy particle physics and nuclear physics\",\n]\n```\n\n_Output :_\n\n---\n\n1. __Classical mechanics__\n\n\t1. Newton's law of motion\n\n\t2. Lagrangian Mechanics\n\n3. _Thermodynamics and statistical mechanics_\n\n4. Electromagnetism and photonics\n\n5. Relativistic mechanics\n\n6. Quantum mechanics, atomic physics, and molecular physics\n\n\t* Schrödinger equation\n\n\t* Quantum field theory\n\n\t\t1. Lists can be nested :)\n\n\t\t2. This is another liner\n\n\t\t\t1. ~~Oh this is getting serious~~\n\n\t\t\t2. And now bunch of numbers\n\n\t\t\t\t1. 3.1415\n\n\t\t\t\t2. 2.7176\n\n\t\t\t\t3. 99999\n\n\t\t\t\t4. 88888\n\n\t\t\t4. Now another item\n\n\t* Quantum statistical mechanics\n\n8. Optics and acoustics\n\n9. Condensed matter physics\n\n10. High-energy particle physics and nuclear physics\n\n---\n\n---\n\n### Table\n\n\n\n```python\nmd < {\n\t\"Name\" : [\"Albert\", \"Paul\" | md.bold, \"Richard\"],\n\t\"Surname\" : [\"Einstein\" | md.italic, \"Dirac\" , \"Feynman\" | md.italic],\n}\n```\n\n_Output :_\n\n---\n\n|Name|Surname|\n|:---:|:---:|\n|Albert|_Einstein_|\n|__Paul__|Dirac|\n|Richard|_Feynman_|\n\n---\n\n---\n\n### Links\n\n\n\n```python\nmd < \"https://github.com/fbgencer/markdownipy\" | md.link(\"Markdownipy website\")\n```\n\n_Output :_\n\n---\n\n[Markdownipy website](https://github.com/fbgencer/markdownipy)\n\n---\n\n---\n\n### Image\n\n\n\n```python\nmd < (\"markdownipy_logo.png\" | md.image(\"Image name\"))\n```\n\n_Output :_\n\n---\n\n![Image name](markdownipy_logo.png)\n\n---\n\n---\n\n### Single line Quote\n\n\n\n```python\nmd << (\"With Great Power Comes Great Responsibility\" | md.quote)\n```\n\n_Output :_\n\n---\n\n> With Great Power Comes Great Responsibility\n\n---\n\n---\n\n### Task lists\n\n\n\n```python\nmd < [\"-\", \n\t\"Take the key\" | md.bold | md.task,\n\t\"Cat food\" | md.bold | md.task_check\n]\n```\n\n_Output :_\n\n---\n\n- [ ] __Take the key__\n\n- [x] __Cat food__\n\n---\n\n---\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/fbgencer/markdownipy",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Markdownipy",
    "package_url": "https://pypi.org/project/Markdownipy/",
    "platform": "",
    "project_url": "https://pypi.org/project/Markdownipy/",
    "project_urls": {
      "Homepage": "https://github.com/fbgencer/markdownipy"
    },
    "release_url": "https://pypi.org/project/Markdownipy/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Markdownipy, python markdown generator library",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12204245,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "66786702412c7926e8d10992ec73be3a3991f96a06a681f3b438f32c50e534fe",
          "md5": "f999ce80ed5fa78c5c77c425367152df",
          "sha256": "89868fbba9b7aa070ab465fe278694bc288926ed7adf49321cd655909b9dbc18"
        },
        "downloads": -1,
        "filename": "Markdownipy-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f999ce80ed5fa78c5c77c425367152df",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6375,
        "upload_time": "2021-12-03T19:32:13",
        "upload_time_iso_8601": "2021-12-03T19:32:13.069284Z",
        "url": "https://files.pythonhosted.org/packages/66/78/6702412c7926e8d10992ec73be3a3991f96a06a681f3b438f32c50e534fe/Markdownipy-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1923d3029310fe5d76bfcd5aa03d1be173fa10c595f7144cb7d317d065798802",
          "md5": "d9cfe0890d589386de14fc07df9c0296",
          "sha256": "df7c7595ac671918e5124eec5894e5797034cf45130caa0cd49f8d90b445c3bc"
        },
        "downloads": -1,
        "filename": "Markdownipy-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d9cfe0890d589386de14fc07df9c0296",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6394,
        "upload_time": "2021-12-03T19:32:14",
        "upload_time_iso_8601": "2021-12-03T19:32:14.907723Z",
        "url": "https://files.pythonhosted.org/packages/19/23/d3029310fe5d76bfcd5aa03d1be173fa10c595f7144cb7d317d065798802/Markdownipy-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "66786702412c7926e8d10992ec73be3a3991f96a06a681f3b438f32c50e534fe",
        "md5": "f999ce80ed5fa78c5c77c425367152df",
        "sha256": "89868fbba9b7aa070ab465fe278694bc288926ed7adf49321cd655909b9dbc18"
      },
      "downloads": -1,
      "filename": "Markdownipy-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f999ce80ed5fa78c5c77c425367152df",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 6375,
      "upload_time": "2021-12-03T19:32:13",
      "upload_time_iso_8601": "2021-12-03T19:32:13.069284Z",
      "url": "https://files.pythonhosted.org/packages/66/78/6702412c7926e8d10992ec73be3a3991f96a06a681f3b438f32c50e534fe/Markdownipy-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1923d3029310fe5d76bfcd5aa03d1be173fa10c595f7144cb7d317d065798802",
        "md5": "d9cfe0890d589386de14fc07df9c0296",
        "sha256": "df7c7595ac671918e5124eec5894e5797034cf45130caa0cd49f8d90b445c3bc"
      },
      "downloads": -1,
      "filename": "Markdownipy-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "d9cfe0890d589386de14fc07df9c0296",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 6394,
      "upload_time": "2021-12-03T19:32:14",
      "upload_time_iso_8601": "2021-12-03T19:32:14.907723Z",
      "url": "https://files.pythonhosted.org/packages/19/23/d3029310fe5d76bfcd5aa03d1be173fa10c595f7144cb7d317d065798802/Markdownipy-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}