{
  "info": {
    "author": "Prem Seetharaman",
    "author_email": "prem@descript.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.7",
      "Topic :: Artistic Software",
      "Topic :: Multimedia",
      "Topic :: Multimedia :: Sound/Audio",
      "Topic :: Multimedia :: Sound/Audio :: Editors",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# PySnapShot\n\nThis is a tiny helper package for saving code associated with\nan experiment, and reloading it at a later time. There are two main functions:\n\n1. `pysnapshot.capture`: Captures the code associated with a module into a snapshot at a given path.\n2. `pysnapshot.load`: Loads the code from the snapshot into a module of a specified name. If no name is given, then the module name is whatever the folder\nname is for the snapshot.\n\n## Usage\n\nLet's say I'm working on the code in `examples/hello_world.py`. Let's save the current version \n(working in the `examples/` directory):\n\n```python\nimport pysnapshot\nimport hello_world\n\n# First let's take a snapshot of the \n# hello_world package.\n\npath = pysnapshot.capture(hello_world, '/tmp/hello_world_snap/', overwrite=True)\nhello_world_snap = pysnapshot.load(path)\nprint(hello_world_snap.__file__)\n\n# The snapshot is loaded from the specified directory. The code was all copied to\n# and is under the snapshot:\n\nprint(\"From original package code\", hello_world.func1())\nprint(\"From snapshot\", hello_world_snap.hello_world.func1())\n\n# You can import from the snapshot as if it were a regular package\n\nfrom hello_world_snap import hello_world\nprint(\"From snapshot, overwriting the original package code\", hello_world.func1())\n```\n\nThis has the output:\n\n```bash\n❯ cd examples/\n❯ python demo.py\n/private/tmp/hello_world_snap/__init__.py\n/Users/prem/research/snapshot/examples/hello_world/hello.py TEST\nFrom original package code TEST\n/private/tmp/hello_world_snap/hello_world/hello.py TEST\nFrom snapshot TEST\n/private/tmp/hello_world_snap/hello_world/hello.py TEST\nFrom snapshot, overwriting the original package code TEST\n```\n\nAnd it created a Python module with this directory structure:\n\n```\n❯ tree '/tmp/hello_world_snap/'\n/tmp/hello_world_snap/\n├── __init__.py\n└── hello_world\n    ├── __init__.py\n    ├── hello.py\n    └── nested\n        └── __init__.py\n```\n\n# Releasing\n\nDo the following steps:\n\n```\npython setup.py sdist\n```\n\nUpload it to test PyPI:\n\n```\npip install twine\ntwine upload --repository testpypi dist/*\npip install -U --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple -U pysnapshot\n```\n\nMake sure you can install it and it works (e.g. run the examples). Now upload\nto actual PyPI:\n\n```\ntwine upload dist/*\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pseeth/pysnapshot",
    "keywords": "machine learning,experimentation",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pysnapshot",
    "package_url": "https://pypi.org/project/pysnapshot/",
    "platform": "",
    "project_url": "https://pypi.org/project/pysnapshot/",
    "project_urls": {
      "Homepage": "https://github.com/pseeth/pysnapshot"
    },
    "release_url": "https://pypi.org/project/pysnapshot/0.1.0a0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Take snapshots of your codebase and reload them easily later.",
    "version": "0.1.0a0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8927217,
  "releases": {
    "0.1.0a0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8fe65610df037db5ba6620756fd025b17d5eb2740d74a2f3dbcec0f7839ae993",
          "md5": "3255336faab4bd85b22a729fd73f8124",
          "sha256": "9273c5b1db2fed47bfd2883be3059b4f494e492dc08c2d61dcc62c6dfd0dea73"
        },
        "downloads": -1,
        "filename": "pysnapshot-0.1.0a0.tar.gz",
        "has_sig": false,
        "md5_digest": "3255336faab4bd85b22a729fd73f8124",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3676,
        "upload_time": "2020-12-17T21:10:51",
        "upload_time_iso_8601": "2020-12-17T21:10:51.330820Z",
        "url": "https://files.pythonhosted.org/packages/8f/e6/5610df037db5ba6620756fd025b17d5eb2740d74a2f3dbcec0f7839ae993/pysnapshot-0.1.0a0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8fe65610df037db5ba6620756fd025b17d5eb2740d74a2f3dbcec0f7839ae993",
        "md5": "3255336faab4bd85b22a729fd73f8124",
        "sha256": "9273c5b1db2fed47bfd2883be3059b4f494e492dc08c2d61dcc62c6dfd0dea73"
      },
      "downloads": -1,
      "filename": "pysnapshot-0.1.0a0.tar.gz",
      "has_sig": false,
      "md5_digest": "3255336faab4bd85b22a729fd73f8124",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3676,
      "upload_time": "2020-12-17T21:10:51",
      "upload_time_iso_8601": "2020-12-17T21:10:51.330820Z",
      "url": "https://files.pythonhosted.org/packages/8f/e6/5610df037db5ba6620756fd025b17d5eb2740d74a2f3dbcec0f7839ae993/pysnapshot-0.1.0a0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}