{
  "info": {
    "author": "Sinch Developer Experience Team",
    "author_email": "dev@sinch.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Communications :: Telephony",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "<h1 align=\"center\">\n\n   [![Sinch Logo](https://cdn.liveagent.com/app/uploads/2021/06/sinch-logo.png)](https://www.sinch.com)\n\n   Python SDK\n\n   [![License](https://img.shields.io/badge/License-Apache_2.0-blue.svg)](https://github.com/sinch/sinch-sdk-python/blob/main/LICENSE)\n\n   [![Linux](https://svgshare.com/i/Zhy.svg)](https://svgshare.com/i/Zhy.svg)\n   [![macOS](https://svgshare.com/i/ZjP.svg)](https://svgshare.com/i/ZjP.svg)\n   [![Windows](https://svgshare.com/i/ZhY.svg)](https://svgshare.com/i/ZhY.svg)\n\n   [![Python 3.8](https://img.shields.io/badge/python-3.8-blue.svg)](https://www.python.org/downloads/release/python-380/)\n   [![Python 3.9](https://img.shields.io/badge/python-3.9-blue.svg)](https://www.python.org/downloads/release/python-390/)\n   [![Python 3.10](https://img.shields.io/badge/python-3.10-blue.svg)](https://www.python.org/downloads/release/python-3100/)\n   [![Python 3.11](https://img.shields.io/badge/python-3.11-blue.svg)](https://www.python.org/downloads/release/python-3110/)\n\n</h1>\n\n## Welcome to Sinch's Python SDK.\n\nHere you'll find documentation to start developing Python code using Sinch services. \n\nTo use this SDK you'll need a Sinch account and API keys. Please sign up at [sinch.com](https://sinch.com)\n\nFor more in depth version of the Sinch APIs, please refer to the official developer portal - [developers.sinch.com](https://developers.sinch.com/)\n\n**This SDK is currently available to select developers for preview use only. It is being provided for the purpose of collecting feedback, and should not be used in production environments.**\n\n* [Installation](#installation)\n* [Getting started](#getting-started)\n* [Logging](#logging)\n* [Custom HTTP client implementation](#custom-http-client-implementation)\n***\n\n\n## Installation\n\nYou can install this package to your virtual environment or to your global Python installation by cloning this repo and typing:\n`pip install sinch`\n\n\n## Getting started\n\n### Client initialization\n\n\nTo initialize communication with Sinch backed, credentials obtained from Sinch portal have to be provided to the main client class of this SDK.\nIt's highly advised to not hardcode those credentials, but to fetch them from environment variables:\n\n```python\nfrom sinch import Client\n\nsinch_client = Client(\n    key_id=\"key_id\",\n    key_secret=\"key_secret\",\n    project_id=\"some_project\"\n)\n```\n\n```python\nimport os\nfrom sinch import Client\n\nsinch_client = Client(\n    key_id=os.getenv(\"KEY_ID\"),\n    key_secret=os.getenv(\"KEY_SECRET\"),\n    project_id=os.getenv(\"PROJECT_ID\")\n)\n```\n\n\n### Domains\n\nEach product from Sinch portfolio is considered and coded as a separate `domain`.\nDomain contains data structures specific to that service, that can be also used by the developer.\n\nAbstract directory structure of the `domain`:\n```\n├── domain_name\n│   ├── __init__.py (public interface of the domain)\n│   ├── endpoints (directory with endpoint definitions)\n│   ├── models (direcotry with data models definitions)\n│   ├── enums.py (enums that can be helpful for a developer; e.g. SinchNumberType)\n│   ├── exceptions.py (exceptions spefific for a particular domain; e.g. NumbersException)\n│\n```\n\nSinch client provides access to the following Sinch product domains:\n\n- Numbers\n- Conversation API\n- SMS\n\n\nUsage example of the `numbers` domain:\n\n```python\nfrom sinch.domains.numbers.enums import NumberType\n\navailable_numbers = sinch_client.numbers.available.list(\n    region_code=\"US\",\n    number_type=NumberType.LOCAL.value,\n    project_id=\"Shrubbery\"\n)\n```\nReturned values are represented as Python `dataclasses`:\n\n```python\nListAvailableNumbersResponse(\n    available_numbers=[\n        Number(\n            phone_number='+17862045855',\n            region_code='US',\n            type='LOCAL',\n            capability=['SMS', 'VOICE'],\n            setup_price={'currency_code': 'EUR', 'amount': '0.80'},\n            monthly_price={'currency_code': 'EUR', 'amount': '0.80'}\n            ...\n```\n\n### Handling exceptions\n\nEach domain throws a `DomainException` exception for an unsuccessful backed call.\n\nExample for Numbers Domain:\n\n```python\nfrom sinch.domains.numbers.exceptions import NumbersException\n\ntry:\n    nums = sinch_client.numbers.available.list(\n        region_code=\"US\",\n        number_type=\"LOCAL\",\n        project_id=\"project\"\n    )\nexcept NumbersException as err:\n    pass\n```\n\nFor handling all possible exceptions thrown by this SDK use `SinchException` (superclass of all Sinch exceptions) form `sinch.core.exceptions`.\n\n\n## Logging\n\nLogging configuration for this SDK utilizes following hierarchy:\n1. If no configuration was provided via `logger_name` or `logger` configurable, SDK will inherit configuration from the root logger with the `Sinch` prefix.\n2. If `logger_name` configurable was provided, SDK will use logger related to that name. For example: `myapp.sinch` will inherit configuration from the `myapp` logger.\n3. If `logger` (logger instance) configurable was provided, SDK will use that particular logger for all its logging operations.\n\nIf all logging returned by this SDK needs to be disabled, usage of `NullHanlder` provided by the standard `logging` module is advised.  \n\n\n## Custom HTTP client implementation\n\nBy default, two HTTP implementations are provided:\n- Synchronous using `requests` HTTP library\n- Asynchronous using `aiohttp` HTTP library\n\nFor creating custom HTTP client code, use either `Client` or `ClientAsync` client and inject your transport during initialisation:\n```python\nsinch_client = ClientAsync(\n    key_id=\"Spanish\",\n    key_secret=\"Inquisition\",\n    project_id=\"some_project\",\n    transport=MyHTTPAsyncImplementation\n)\n```\n\nCustom client has to obey types and methods described by `HTTPTransport` abstract base class:\n```python\nclass HTTPTransport(ABC):\n    @abstractmethod\n    def request(self, endpoint: HTTPEndpoint) -> HTTPResponse:\n        pass\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "sinch,sdk",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sinch",
    "package_url": "https://pypi.org/project/sinch/",
    "platform": null,
    "project_url": "https://pypi.org/project/sinch/",
    "project_urls": {
      "documentation": "https://developers.sinch.com",
      "homepage": "https://github.com/sinch/sinch-sdk-python"
    },
    "release_url": "https://pypi.org/project/sinch/0.1.0/",
    "requires_dist": [
      "requests",
      "aiohttp"
    ],
    "requires_python": ">=3.8",
    "summary": "Sinch SDK for Python programming language",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17403890,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c549e39d2beb923d10ca85dc3f690648e6c99527b0190a38c78be05f94aba6a1",
          "md5": "d4abf0d624f9d3521106876750925589",
          "sha256": "879dece0f5b4a101db1158dd63366fc235b42d9f80b2b95efad42067b14b99e5"
        },
        "downloads": -1,
        "filename": "sinch-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d4abf0d624f9d3521106876750925589",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 106577,
        "upload_time": "2023-03-22T20:27:36",
        "upload_time_iso_8601": "2023-03-22T20:27:36.038755Z",
        "url": "https://files.pythonhosted.org/packages/c5/49/e39d2beb923d10ca85dc3f690648e6c99527b0190a38c78be05f94aba6a1/sinch-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "41010351e612be0693d27fd58dda907c572f2887b4269a16981bea26e39143a0",
          "md5": "6730d0cb4e44c9a2efbb2bafdfb0c67e",
          "sha256": "028cbc19fa479e97222449aac57d2cdff7f4ec519c95c68f757661735ed158b8"
        },
        "downloads": -1,
        "filename": "sinch-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6730d0cb4e44c9a2efbb2bafdfb0c67e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 43212,
        "upload_time": "2023-03-22T20:27:38",
        "upload_time_iso_8601": "2023-03-22T20:27:38.410157Z",
        "url": "https://files.pythonhosted.org/packages/41/01/0351e612be0693d27fd58dda907c572f2887b4269a16981bea26e39143a0/sinch-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c549e39d2beb923d10ca85dc3f690648e6c99527b0190a38c78be05f94aba6a1",
        "md5": "d4abf0d624f9d3521106876750925589",
        "sha256": "879dece0f5b4a101db1158dd63366fc235b42d9f80b2b95efad42067b14b99e5"
      },
      "downloads": -1,
      "filename": "sinch-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d4abf0d624f9d3521106876750925589",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 106577,
      "upload_time": "2023-03-22T20:27:36",
      "upload_time_iso_8601": "2023-03-22T20:27:36.038755Z",
      "url": "https://files.pythonhosted.org/packages/c5/49/e39d2beb923d10ca85dc3f690648e6c99527b0190a38c78be05f94aba6a1/sinch-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "41010351e612be0693d27fd58dda907c572f2887b4269a16981bea26e39143a0",
        "md5": "6730d0cb4e44c9a2efbb2bafdfb0c67e",
        "sha256": "028cbc19fa479e97222449aac57d2cdff7f4ec519c95c68f757661735ed158b8"
      },
      "downloads": -1,
      "filename": "sinch-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "6730d0cb4e44c9a2efbb2bafdfb0c67e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 43212,
      "upload_time": "2023-03-22T20:27:38",
      "upload_time_iso_8601": "2023-03-22T20:27:38.410157Z",
      "url": "https://files.pythonhosted.org/packages/41/01/0351e612be0693d27fd58dda907c572f2887b4269a16981bea26e39143a0/sinch-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}