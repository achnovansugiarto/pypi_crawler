{
  "info": {
    "author": "Adol liu",
    "author_email": "34862933@qq.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "# About\nA basic library could decrease the workload.Most of the problem solved in a real testing job.\n# Function info\n## interface test\n> parameter template \nurl = \"https://test/api/log?requestID=testid&clientToken=testtoken\" body ={\"date\": \"2018-11-04 10:10:10\", \"actions\": [{\"actionTime\": 1542248466944,\"note\"]}}\n### interface basic verification\n---\n   verification of the value of parameter is null\n---\nverification of the parameter in a GET method restful interface link, such as requestID: \n>url = \"https://test/api/log?requestID=&clientToken=testtoken\"\n\nverification of request body in a POST restful interface, type of the body, such as form or raw will self adapted.\ne.g\n>body ={\"date\": \"\",\n\t\"actions\": [{\"actionTime\": 1542248466944,\"note\"]}}\n\n>body ={\"date\": \"2018-11-04 10:10:10\",\n\t\"actions\": [{\"actionTime\": \"\",\"note\"]}}\n\nthe value of parameter is \"\"\n----\n\tverification of null parameter\n----\n\nverification of the parameter in a GET method restful interface link, such as requestID: \n>url = \"https://test/api/log?clientToken=testtoken\"\n\nverification of request body in a POST restful interface, type of the body, such as form or raw will self adapted.\ne.g\n>body ={\n\t\"actions\": [{\"actionTime\": 1542248466944,\"note\"]}}\n\n>body ={\"date\": \"2018-11-04 10:10:10\",\n\t\"actions\": [{\"note\"]}}\n\n\tverification of length of parameter\n----\n range of the length is 1 to 100000。\n\n----\n\n\n>performance test of interface\ncoming soon\nUI automatic test\n\n\n# how to install\n `pip install BlueTest`\n\nor\n\nhttps://pypi.org/project/BlueTest/\n\n# Usage and examples\n\n## example\n\n```python\n└─Project\n        test1.py\n```\ntest1.py：\n```python\nimport BlueTest\nBlueTest.test()\n```\n---\n```python\n└─Project\n│  test1.py\n├─log\n│      all.log #log\n│      error.log #error log\n├─result #reuslt\n│      data.txt\n└─srcdata\n    │  test.csv  #postman serialize\n    │  test.json.postman_collection #postman example\n    └─api #generated .py file according postman\n            log.py\n```\n\n# 简介\n:waxing_gibbous_moon:几个本质懒到家，却被工作压迫的人。为了降低自己的工作量，拍脑袋决定编写一个让小白也可以使用的测试库。一切的出发点都是几个懒人在实际工作中遇到的问题和场景。做这一切的目的是为了少做事。:waning_gibbous_moon:\n# 功能介绍\n## 接口测试\n> 参数模板 下文的介绍中会使用该模板进行说明\nurl = \"https://test/api/log?requestID=testid&clientToken=testtoken\"\nbody ={\"date\": \"2018-11-04 10:10:10\",\n\t\"actions\": [{\"actionTime\": 1542248466944,\"note\"]}}\n\n----\n\n### 接口基础校验\n----\n\t参数值判空校验\n----\n链接中的参数校验,即一般情况下GET参数的校验,以requestID为例:\n>url = \"https://test/api/log?requestID=&clientToken=testtoken\"\n\n请求主体参数的校验，即一般情况下POST参数的校验，form,raw等参数类型均自动处理。\n以body中的date为例，请求参数如下:\n>body ={\"date\": \"\",\n\t\"actions\": [{\"actionTime\": 1542248466944,\"note\"]}}\n\n以body中的actions[0][actionTime]为例，请求参数如下:\n>body ={\"date\": \"2018-11-04 10:10:10\",\n\t\"actions\": [{\"actionTime\": \"\",\"note\"]}}\n\n空值以空字符串为标准。\n\n----\n\t参数判空校验\n----\n链接中的参数校验,即一般情况下GET参数的校验,以requestID为例:\n>url = \"https://test/api/log?clientToken=testtoken\"\n\n请求主体参数的校验，即一般情况下POST参数的校验，form,raw等参数类型均自动处理。\n以body中的date为例，请求参数如下:\n>body ={\n\t\"actions\": [{\"actionTime\": 1542248466944,\"note\"]}}\n\n以body中的actions[0][actionTime]为例，请求参数如下:\n>body ={\"date\": \"2018-11-04 10:10:10\",\n\t\"actions\": [{\"note\"]}}\n\n\t参数长度校验\n----\n参数长度校验范围为1-100000。\n\n----\n\n\n>接口性能测试\n待添加\nUI自动化\n功能已实现，说明待添加\n\n# 安装说明\n安装命令`pip install BlueTest`\n\nor\n\nhttps://pypi.org/project/BlueTest/\n\n# 使用说明及范例\n\n## 范例\n\n```python\n└─Project\n        test1.py\n```\ntest1.py：\n```python\nimport BlueTest\nBlueTest.test()\n```\n---\n```python\n└─Project\n│  test1.py\n├─log\n│      all.log #日志\n│      error.log #错误日志\n├─result #结果\n│      data.txt\n└─srcdata\n    │  test.csv  #postman文件的序列化\n    │  test.json.postman_collection #范例的postman文件\n    └─api #根据postman生成的相关接口py文件\n            log.py\n```\n\n## 使用说明\n```python\nimport BlueTest\nBlueTest.initPostMan(\"test\") #执行完成会生成相应csv文件\n#默认postamen文件路径.//srcdata//name.json.collection\n#默认csv文件生成路径.//srcdata//test.csv\nBlueTest.testByCsvData(\"test\") #执行完成会生成相应结果\n#结果包括 日志文件log 结果文件resul\n```\n---\n```python\nBlueTest.initPostMan(\"test\") #执行完成会生成相应csv文件\nBlueTest.initPostMan(\"test\",result_path=path) #指定csv文件生成路径\n```\n\n```python\nBlueTest.testByCsvData(\"test\") #执行完成会生成相应结果\nBlueTest.testByCsvData(\"test\",normal_test=True) #进行接口基础验证\nBlueTest.testByCsvData(\"test\",normal_test=Fasle) #不进行接口基础验证\nBlueTest.testByCsvData(\"test\",mkpy=True) #生成接口py文件范例如下\n```\n---\n```python\nimport requests\nurl = \"https://nbrecsys.4paradigm.com/action/api/log\"\nquerystring = {'requestID': 'Abac6ban', 'clientToken': '1f9d3d10b0ab404e86c2e61a935d3888'}\npayload = {\"date\":\"2018-11-04 10:21:06\",\"actions\":[{\"requestID\":\"2222\",\"actionTime\":1542248466944,\"action\":\"show\",\"sceneId\":420,\"userId\":\"xubyCjC6zO\",\"itemId\":\"user_define\",\"itemSetId\":\"39\",\"uuid_tt_dd\":\"10_28867322960-222-222\",\"specialType\":\"csdn_net_alliance_ads\",\"ads\":1}]}\nheaders ={'Origin': ' https://blog.csdn.net',\n\t 'User-Agent': ' Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36',\n\t 'Content-Type': ' text/plain',\n\t 'Accept': ' */*',\n\t 'Referer': ' https://blog.csdn.net/qq_37159430/article/details/79970518',\n\t 'Accept-Encoding': ' gzip, deflate, br',\n\t 'Accept-Language': ' zh-CN,zh;q=0.8'}\nresponse = requests.request(\"POST\", url, params=querystring,data=payload,)\nprint(response.text)\n```\n\n其他功能详见源码 :gun:",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/liufeng3486/BluePlug.git",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "BluePlug",
    "package_url": "https://pypi.org/project/BluePlug/",
    "platform": "",
    "project_url": "https://pypi.org/project/BluePlug/",
    "project_urls": {
      "Homepage": "https://github.com/liufeng3486/BluePlug.git"
    },
    "release_url": "https://pypi.org/project/BluePlug/0.0.4/",
    "requires_dist": null,
    "requires_python": ">=3.6.0",
    "summary": "Plug for all.",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4598428,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f3d0ae7fa5631f4d43e6a476f7d5905b188609b55e237e7d56ce4287b3e08d8",
          "md5": "ab9a1931173f3a6037acafbfd5f1ff83",
          "sha256": "235809b8f87d85dfc0da73e44cb7b184380ef6a9891177136104adbc55fbe86a"
        },
        "downloads": -1,
        "filename": "BluePlug-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ab9a1931173f3a6037acafbfd5f1ff83",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 26517,
        "upload_time": "2018-11-28T03:06:30",
        "upload_time_iso_8601": "2018-11-28T03:06:30.884672Z",
        "url": "https://files.pythonhosted.org/packages/2f/3d/0ae7fa5631f4d43e6a476f7d5905b188609b55e237e7d56ce4287b3e08d8/BluePlug-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7a18bd41704c7233566b9a109e0b93bff1f9acb99b8bb7a7ccdca83ae3f8c0aa",
          "md5": "a0342dc0e224a067d1a4f041f1fe6e4b",
          "sha256": "49e0b546e2c8da22e6a29a894818ad735727a20b30ccbcf7b7d478062bf489cb"
        },
        "downloads": -1,
        "filename": "BluePlug-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a0342dc0e224a067d1a4f041f1fe6e4b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 26555,
        "upload_time": "2018-11-28T05:53:39",
        "upload_time_iso_8601": "2018-11-28T05:53:39.014894Z",
        "url": "https://files.pythonhosted.org/packages/7a/18/bd41704c7233566b9a109e0b93bff1f9acb99b8bb7a7ccdca83ae3f8c0aa/BluePlug-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2ab0011d6e7defefa91b34dc4057e122e61120115e1183e47f7db5a1d0173927",
          "md5": "310a16d252c235ea1d78cb1dc4a0ae58",
          "sha256": "9d478deb234c03e2522d17114f3f97a63fdc4f9c797da4ecec9fe6896ffd16c1"
        },
        "downloads": -1,
        "filename": "BluePlug-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "310a16d252c235ea1d78cb1dc4a0ae58",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 27298,
        "upload_time": "2018-12-13T09:01:12",
        "upload_time_iso_8601": "2018-12-13T09:01:12.752363Z",
        "url": "https://files.pythonhosted.org/packages/2a/b0/011d6e7defefa91b34dc4057e122e61120115e1183e47f7db5a1d0173927/BluePlug-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f6096e38e32751e2746f5c3b1712ebe823cdd4d78c3c97f0e3d354f6e46c6a86",
          "md5": "305899d04fff93db2cc2aa3010ff5fc9",
          "sha256": "2746966e48f00c155e0b898cf5df0f6c2058d3fb0923060c886674c3a2d93d9c"
        },
        "downloads": -1,
        "filename": "BluePlug-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "305899d04fff93db2cc2aa3010ff5fc9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 27732,
        "upload_time": "2018-12-14T08:16:33",
        "upload_time_iso_8601": "2018-12-14T08:16:33.095102Z",
        "url": "https://files.pythonhosted.org/packages/f6/09/6e38e32751e2746f5c3b1712ebe823cdd4d78c3c97f0e3d354f6e46c6a86/BluePlug-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f6096e38e32751e2746f5c3b1712ebe823cdd4d78c3c97f0e3d354f6e46c6a86",
        "md5": "305899d04fff93db2cc2aa3010ff5fc9",
        "sha256": "2746966e48f00c155e0b898cf5df0f6c2058d3fb0923060c886674c3a2d93d9c"
      },
      "downloads": -1,
      "filename": "BluePlug-0.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "305899d04fff93db2cc2aa3010ff5fc9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.0",
      "size": 27732,
      "upload_time": "2018-12-14T08:16:33",
      "upload_time_iso_8601": "2018-12-14T08:16:33.095102Z",
      "url": "https://files.pythonhosted.org/packages/f6/09/6e38e32751e2746f5c3b1712ebe823cdd4d78c3c97f0e3d354f6e46c6a86/BluePlug-0.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}