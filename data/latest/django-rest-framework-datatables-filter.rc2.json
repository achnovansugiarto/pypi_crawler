{
  "info": {
    "author": "Sheikh Faisal Anwar",
    "author_email": "faisalanwar21@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 1.10",
      "Framework :: Django :: 1.11",
      "Framework :: Django :: 1.9",
      "Framework :: Django :: 2.0",
      "Framework :: Django :: 2.1",
      "Framework :: Django :: 3.0",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Internet :: WWW/HTTP"
    ],
    "description": "django-rest-framework-datatables\n================================\n\n|build-status-image| |codecov-image| |documentation-status-image| |pypi-version| |py-versions|\n\nOverview\n--------\n\nThis package provides seamless integration between `Django REST framework <https://www.django-rest-framework.org>`_ and `Datatables <https://datatables.net>`_.\n\nInstall django-rest-framework-datatables, call your API with ``?format=datatables`` and it will return a JSON structure that is fully compatible with what Datatables expects.\nIt handles searching, filtering, ordering and most usecases you can imagine with Datatables.\n\nThe great benefit of django-rest-framework-datatables is that you don't have to create a different API, your API still work exactly the same unless you specify the ``datatables`` format on your request.\n\nFull documentation is available on `Read the Docs <http://django-rest-framework-datatables.readthedocs.io/en/latest/>`_ !\n\nRequirements\n------------\n\n-  Python (2.7, 3.4, 3.5, 3.6, 3.7, 3.8)\n-  Django (1.9, 1.10, 1.11, 2.0, 2.1, 2.2, 3.0)\n-  Django REST Framework (3.5, 3.6, 3.7, 3.8, 3.9, 3.10, 3.11)\n\nNote: Django 3.0 is only supported with Django REST Framework 3.11 or superior and DRF-datatables version 0.5.1 or superior.\n\nQuickstart\n----------\n\nInstallation\n~~~~~~~~~~~~\n\nJust use ``pip``:\n\n.. code:: bash\n\n    $ pip install djangorestframework-datatables\n\nConfiguration\n~~~~~~~~~~~~~\n\nTo enable Datatables support in your project, add ``'rest_framework_datatables'`` to your ``INSTALLED_APPS``, and modify your ``REST_FRAMEWORK`` settings like this:\n\n.. code:: python\n\n    REST_FRAMEWORK = {\n        'DEFAULT_RENDERER_CLASSES': (\n            'rest_framework.renderers.JSONRenderer',\n            'rest_framework.renderers.BrowsableAPIRenderer',\n            'rest_framework_datatables.renderers.DatatablesRenderer',\n        ),\n        'DEFAULT_FILTER_BACKENDS': (\n            'rest_framework_datatables.filters.DatatablesFilterBackend',\n        ),\n        'DEFAULT_PAGINATION_CLASS': 'rest_framework_datatables.pagination.DatatablesPageNumberPagination',\n        'PAGE_SIZE': 50,\n    }\n\nAnd that's it !\n~~~~~~~~~~~~~~~\n\nYour API is now fully compatible with Datatables and will provide searching, filtering, ordering and pagination without any modification of your API code !\n\nAlways Serialize Specific Fields\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nSometimes you may want to expose fields regardless of datatable's url parameters. You can do so by setting the ``datatables_always_serialize`` tuple like so:\n\n.. code:: python\n\n    class ArtistSerializer(serializers.ModelSerializer):\n        id = serializers.IntegerField(read_only=True)\n    \n        class Meta:\n            model = Artist\n            fields = (\n                'id', 'name',\n            )\n            datatables_always_serialize = ('id',)\n\nAn example of Datatable\n~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: html\n\n    <!doctype html>\n    <html lang=\"en\">\n    <head>\n      <meta charset=\"utf-8\">\n      <title>Rolling Stone Top 500 albums of all time</title>\n      <link rel=\"stylesheet\" href=\"//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.0.0/css/bootstrap.css\">\n      <link rel=\"stylesheet\" href=\"//cdn.datatables.net/1.10.16/css/dataTables.bootstrap4.min.css\">\n    </head>\n    \n    <body>\n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col-sm-12\">\n            <table id=\"albums\" class=\"table table-striped table-bordered\" style=\"width:100%\">\n              <thead>\n                <tr>\n                  <th>Rank</th>\n                  <th>Artist</th>\n                  <th>Album name</th>\n                  <th>Year</th>\n                  <th>Genres</th>\n                </tr>\n              </thead>\n            </table>\n          </div>\n        </div>\n      </div>\n      <script src=\"//code.jquery.com/jquery-1.12.4.js\"></script>\n      <script src=\"//cdn.datatables.net/1.10.16/js/jquery.dataTables.min.js\"></script>\n      <script src=\"//cdn.datatables.net/1.10.16/js/dataTables.bootstrap4.min.js\"></script>\n      <script>\n          $(document).ready(function() {\n              var table = $('#albums').DataTable({\n                  \"serverSide\": true,\n                  \"ajax\": \"/api/albums/?format=datatables\",\n                  \"columns\": [\n                      {\"data\": \"rank\", \"searchable\": false},\n                      {\"data\": \"artist_name\", \"name\": \"artist.name\"},\n                      {\"data\": \"name\"},\n                      {\"data\": \"year\"},\n                      {\"data\": \"genres\", \"name\": \"genres.name\", \"sortable\": false},\n                  ]\n              });\n          });\n      </script>\n    </body>\n    </html>\n\nExample project\n---------------\n\nTo play with the example project, just clone the repository and run the dev server.\n\n.. code:: bash\n\n    $ git clone https://github.com/izimobil/django-rest-framework-datatables.git\n    $ cd django-rest-framework-datatables\n    $ pip install -r requirements-dev.txt\n    $ python example/manage.py runserver\n    $ firefox http://127.0.0.1:8000\n\nTesting\n-------\n\nInstall development requirements.\n\n.. code:: bash\n\n    $ pip install -r requirements-dev.txt\n\nRun the tests.\n\n.. code:: bash\n\n    $ python example/manage.py test\n\nYou can also use the excellent `tox`_ testing tool to run the tests\nagainst all supported versions of Python and Django. Install tox\nglobally, and then simply run:\n\n.. code:: bash\n\n    $ tox\n\nIf you want to check the coverage, use:\n\n.. code:: bash\n\n    $ coverage run ./example/manage.py test\n    $ coverage report -m\n\nDocumentation\n-------------\n\nThe documentation is available online on `Read the Docs <http://django-rest-framework-datatables.readthedocs.io/en/latest/>`_.\n\nTo build the documentation, youâ€™ll need to install ``sphinx``.\n\n.. code:: bash\n\n    $ pip install -r requirements-docs.txt\n\nTo build the documentation:\n\n.. code:: bash\n\n    $ cd docs\n    $ make clean && make build\n\n\n.. _tox: http://tox.readthedocs.org/en/latest/\n\n.. |build-status-image| image:: https://secure.travis-ci.org/izimobil/django-rest-framework-datatables.svg?branch=master\n   :target: http://travis-ci.org/izimobil/django-rest-framework-datatables?branch=master\n   :alt: Travis build\n\n.. |codecov-image| image:: https://codecov.io/gh/izimobil/django-rest-framework-datatables/branch/master/graph/badge.svg\n  :target: https://codecov.io/gh/izimobil/django-rest-framework-datatables\n\n.. |pypi-version| image:: https://img.shields.io/pypi/v/djangorestframework-datatables.svg\n   :target: https://pypi.python.org/pypi/djangorestframework-datatables\n   :alt: Pypi version\n\n.. |documentation-status-image| image:: https://readthedocs.org/projects/django-rest-framework-datatables/badge/?version=latest\n   :target: http://django-rest-framework-datatables.readthedocs.io/en/latest/?badge=latest\n   :alt: Documentation Status\n\n.. |py-versions| image:: https://img.shields.io/pypi/pyversions/djangorestframework-datatables.svg\n   :target: https://img.shields.io/pypi/pyversions/djangorestframework-datatables.svg\n   :alt: Python versions\n\n.. |dj-versions| image:: https://img.shields.io/pypi/djversions/djangorestframework-datatables.svg\n   :target: https://img.shields.io/pypi/djversions/djangorestframework-datatables.svg\n   :alt: Django versions\n\n\nChangelog\n=========\n\nVersion 0.5.2 (2020-04-10):\n---------------------------\n\n- Added support for POST requests from datatables\n- Avoid extra count queries\n- Handle dummy columns gracefully\n\nVersion 0.5.1 (2020-01-13):\n---------------------------\n\n- Added support for Django 3.0\n- Added support for disabling pagination when the client requests it with length=-1 parameter\n- Added optional column sorting to handle ties\n- Minor code fixes\n\nVersion 0.5.0 (2019-03-31):\n---------------------------\n\n- Fixed total number of rows when view is using multiple filter back-ends\n- New meta option ``datatables_extra_json`` on view for adding key/value pairs to rendered JSON\n- Minor docs fixes\n\nVersion 0.4.1 (2018-11-16):\n---------------------------\n\n- Added support for Django 2.1 and DRF 3.9\n- Updated README\n\nVersion 0.4.0 (2018-06-22):\n---------------------------\n\n- Added top level filtering for nested serializers\n- Added multiple field filtering\n- Added a ?keep= parameter that allows to bypass the filtering of unused fields\n- Better detection of the requested format\n- Fixed typo in Queryset.count() method name\n\n\nVersion 0.3.0 (2018-05-11):\n---------------------------\n\n- Added a serializer Meta option ``datatables_always_serialize`` that allows to specify a tuple of fields that should always be serialized in the response, regardless of what fields are requested in the Datatables request\n- Optimize filters\n- Use AND operator for column filtering instead of OR, to be consistant with the client-side behavior of Datatables\n\nVersion 0.2.1 (2018-04-11):\n---------------------------\n\n- This version replaces the 0.2.0 who was broken (bad setup.py)\n\nVersion 0.2.0 (2018-04-11):\n---------------------------\n\n- Added full documentation\n- Removed serializers, they are no longer necessary, filtering of columns is made by the renderer\n\nVersion 0.1.0 (2018-04-10):\n---------------------------\n\nInitial release.",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sheikhfaisalanwar/django-rest-framework-datatables",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-rest-framework-datatables-filter",
    "package_url": "https://pypi.org/project/django-rest-framework-datatables-filter/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-rest-framework-datatables-filter/",
    "project_urls": {
      "Homepage": "https://github.com/sheikhfaisalanwar/django-rest-framework-datatables"
    },
    "release_url": "https://pypi.org/project/django-rest-framework-datatables-filter/0.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Seamless integration between Django REST framework and Datatables (https://datatables.net)",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8843842,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d1f8cbcdb3ae40bce7969ce67ec8043c311dd9d87be31aac3862da5ca9dc17a2",
          "md5": "395b64700b00339d4ee71ec3aee624b6",
          "sha256": "c71d98b56be6fb816545b98977e6ec624effe2d161e46e1bc69d4711185cfe22"
        },
        "downloads": -1,
        "filename": "django-rest-framework-datatables-filter-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "395b64700b00339d4ee71ec3aee624b6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16834,
        "upload_time": "2020-12-07T22:50:09",
        "upload_time_iso_8601": "2020-12-07T22:50:09.369209Z",
        "url": "https://files.pythonhosted.org/packages/d1/f8/cbcdb3ae40bce7969ce67ec8043c311dd9d87be31aac3862da5ca9dc17a2/django-rest-framework-datatables-filter-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4a78cf9f48f4fc909f86d070f1f41c7b8a86e2ac8821e5c074683d8d0f8aba03",
          "md5": "7828e671c8a163cd9eab12c24bba95f9",
          "sha256": "e99d175c9100e1dd5946966eda6ed0b99c1e9b26968bd523730d217cb173b5d8"
        },
        "downloads": -1,
        "filename": "django-rest-framework-datatables-filter-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7828e671c8a163cd9eab12c24bba95f9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16839,
        "upload_time": "2020-12-07T22:50:10",
        "upload_time_iso_8601": "2020-12-07T22:50:10.983242Z",
        "url": "https://files.pythonhosted.org/packages/4a/78/cf9f48f4fc909f86d070f1f41c7b8a86e2ac8821e5c074683d8d0f8aba03/django-rest-framework-datatables-filter-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4a78cf9f48f4fc909f86d070f1f41c7b8a86e2ac8821e5c074683d8d0f8aba03",
        "md5": "7828e671c8a163cd9eab12c24bba95f9",
        "sha256": "e99d175c9100e1dd5946966eda6ed0b99c1e9b26968bd523730d217cb173b5d8"
      },
      "downloads": -1,
      "filename": "django-rest-framework-datatables-filter-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "7828e671c8a163cd9eab12c24bba95f9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 16839,
      "upload_time": "2020-12-07T22:50:10",
      "upload_time_iso_8601": "2020-12-07T22:50:10.983242Z",
      "url": "https://files.pythonhosted.org/packages/4a/78/cf9f48f4fc909f86d070f1f41c7b8a86e2ac8821e5c074683d8d0f8aba03/django-rest-framework-datatables-filter-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}