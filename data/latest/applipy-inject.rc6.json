{
  "info": {
    "author": "Alessio Linares",
    "author_email": "mail@alessio.cc",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "[![pipeline status](https://gitlab.com/applipy/applipy_inject/badges/master/pipeline.svg)](https://gitlab.com/applipy/applipy_inject/-/pipelines?scope=branches&ref=master)\n[![coverage report](https://gitlab.com/applipy/applipy_inject/badges/master/coverage.svg)](https://gitlab.com/applipy/applipy_inject/-/graphs/master/charts)\n[![PyPI Status](https://img.shields.io/pypi/status/applipy-inject.svg)](https://pypi.org/project/applipy-inject/)\n[![PyPI Version](https://img.shields.io/pypi/v/applipy-inject.svg)](https://pypi.org/project/applipy-inject/)\n[![PyPI Python](https://img.shields.io/pypi/pyversions/applipy-inject.svg)](https://pypi.org/project/applipy-inject/)\n[![PyPI License](https://img.shields.io/pypi/l/applipy-inject.svg)](https://pypi.org/project/applipy-inject/)\n[![PyPI Format](https://img.shields.io/pypi/format/applipy-inject.svg)](https://pypi.org/project/applipy-inject/)\n\n# Applipy Inject\n\n    pip install applipy_inject\n\nLibrary that provides a dependency injector that works with type hinting.\n\n## Basic usage\n\n```python\nfrom applipy_inject import Injector\n\ninjector = Injector()\n\n# bind dictionary instance\ninjector.bind(dict, {'v': 143, 'k': 'bar'})\n\nclass A:\n    def __init__(self, v: int):\n        self.v = v\n\nclass B(A):\n    def __init__(self, d: dict):\n        super().__init__(d['v'])\n        self.d = d\n\n# bind subtype B to type A\ninjector.bind(A, B)\n\nclass C:\n    def __init__(self, a: A):\n        self.a = a\n\n# bind type C\ninjector.bind(C)\n\n# get an instace of type C\nc = injector.get(C)\n\n# the instance is initialized correctly, resolving the dependecy chain\nprint(c.a.v)\n```\nOutput:\n```\n143\n```\n\n### bind(...)\n\nThe `bind()` function lets bind an object to a type. The meaning on the binding\ndepends on the type of the object. In general the object can be one of:\n - instance: an instance of a type\n - type: a type\n - provider: a callable object that has type annotations for its arguments and\n   a return type annotation.\n\nThe bind function can be used in multiple ways:\n\n**bind(type, instance)**\n\nBind an instance to a type. The instance must be an instance of the type or of\na subtype of the type.\n\n```python\ninjector.bind(int, 5)\n```\n\n**bind((typeA, typeB, ...), instance)**\n\nBind an instance to multiple types. The instance must be an instance of all the\ntypes or of a subtype of all the types.\n\n```python\ninjector.bind((str, object), 'hello')\n```\n\n**bind(type)**\n\nThe type is bound as a \"provider\" of its own type and dependecy annotations are\ntaken from the `__init__` function.\n\n```python\ninjector.bind(A)\n```\n\n**bind(type, subtype)**\n\nSimilar to `bind(type)` but subtype is bound to the specified type.\n\n```python\ninjector.bind(A, B)\n```\n\n**bind((typeA, typeB, ...), subtype)**\n\nSimilar to `bind(type, subtype)` but subtype is bound to the specified types.\n\n```python\ninjector.bind((A, B), B)\n# or\ninjector.bind((A, B), C)\n```\n\n**bind(provider)**\n\nThe provider will be bound to the type it returns (as per the type annotation).\n\n```python\ndef provide_A(s: str) -> A:\n    return A(int(s))\n\ninjector.bind(provide_A)\n```\n\n**bind(type, provider)**\n\nSimilar to `bind(provider)` but the provider is bound to the specified type.\nThe annotated return type of the provider must be a subtype of the specified\ntype.\n\n```python\ndef provide_B(v: int, k: str) -> B:\n    return B({'v': v, 'k': k})\n\ninjector.bind(A, provide_B)\n```\n\n**bind((typeA, typeB, ...), provider)**\n\nSimilar to `bind(type, provider)` but the provider is bound to all the\nspecified types. The annotated return type of the provider must be a subtype\nof all the specified types.\n\n```python\ndef provide_B(v: int, k: str) -> B:\n    return B({'v': v, 'k': k})\n\ninjector.bind((A, B), provide_B)\n```\n\n**Common optional parameters:**\n - `name`: defaults to `None`. Lets the user give a name to the binding. This\n   allows to make multiple bindings to the same type and be able to select\n   which one you want to get by using the name.\n\n - `singleton`: defaults to `True`. Define whether the injector should\n   instantiate or call the provider only once and inject always the same\n   instance or return a new result every time. It does not applipy to bound\n   instances.\n\n```python\ninjector.bind(provide_A, name='foo', singleton=False)\n```\n\n### get(...)\n\nGet an instance registered to a given type.\n\nSimilar to `bind()`, there is an optional `name` parameter that tells the\ninjector the name of the instance to get for that type.\n\n```\ninjector.get(A, name='foo')\n```\n\n### get_all(...)\n\nThe `Injector` allows to bind multiple objects to the same type and name.\n`get_all()` retrieves all instances for a given type and name combination as a\nlist, instead of just one as `get()` does.\n\nSimilar to `bind()`, there is an optional `name` parameter that tells the\ninjector the name of the instance to get for that type.\n\n```\ninjector.get_all(A, name='foo')\n```\n\n## Named dependencies\n\nDependencies can be given names so that different providers can depend on\ndifferent instances of the same type. This can be achieved by annotating the\ndependency type with the dependency name:\n\n```python\nfrom typing import Annotated\nfrom applipy_inject import name\n\n\ndef provide_A(s: Annotated[str, name('foo_num')]) -> A:\n    return A(int(s))\n\n\ninjector.bind(str, '13', name='foo_num')\ninjector.bind(provide_A)\n```\n\n## Utility functions\n\n### with_names(provider, names)\n\nGive names to the arguments of an existing provider or class. The injector will\nuse this to set the value for `name` with doing `get()`.\n\n`names` can be:\n - `dict`, where the keys are the names of the arguments and the values are the\n   names for their type.\n - `str`, all arguments will be named with the value\n\n```python\ninjector.bind(with_names(provide_B, {'k': 'name_for_k'}))\n```\n> Note that `v` won't have a name\n\n```python\ninjector.bind(with_names(provide_B, 'name_for_all'))\n```\n> Both `v` and `k` will have name `name_for_all`\n\nIt can also be used on classes:\n```python\ninjector.bind(with_names(C, 'app'))\n```\n\n### named(...)\n\nSimilar to `with_names()` but it is a decorator that is used when defining a\nprovider or class `__init__`.\n\n```python\n\nclass Z:\n    @named({'a': 'conf'})\n    def __init__(self, a: dict, b: str):\n        ...\n\n\n@named('foo')\ndef provide_int(x: int, b: str) -> int:\n    ...\n```\n\nThis is equivalent to using `typing.Annotated` as follows:\n\n```python\nfrom typing import Annotated\nfrom applipy_inject import name\n\nclass Z:\n    def __init__(self, a: Annotated[dict, name('conf')], b: str):\n        ...\n\n\ndef provide_int(x: Annotated[int, name('foo')], b: Annotated[str, name('foo')]) -> int:\n    ...\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/applipy/applipy_inject",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "applipy-inject",
    "package_url": "https://pypi.org/project/applipy-inject/",
    "platform": "",
    "project_url": "https://pypi.org/project/applipy-inject/",
    "project_urls": {
      "Homepage": "https://gitlab.com/applipy/applipy_inject",
      "Source": "https://gitlab.com/applipy/applipy_inject"
    },
    "release_url": "https://pypi.org/project/applipy-inject/1.3.1/",
    "requires_dist": null,
    "requires_python": ">=3.9",
    "summary": "Library that provides a dependency injector that works with type hinting.",
    "version": "1.3.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11278244,
  "releases": {
    "0.11.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3471b6b6be591883de9dcb35950287dfed782d36ee7fae104e55dc5ac3383884",
          "md5": "bf8030672707c312ed2c16569a376ae8",
          "sha256": "c99fce4adebd838d8bf30a75027aeb794d71e03567f94e91a0fc7d94203d67f0"
        },
        "downloads": -1,
        "filename": "applipy_inject-0.11.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bf8030672707c312ed2c16569a376ae8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5657,
        "upload_time": "2020-10-11T11:31:21",
        "upload_time_iso_8601": "2020-10-11T11:31:21.374167Z",
        "url": "https://files.pythonhosted.org/packages/34/71/b6b6be591883de9dcb35950287dfed782d36ee7fae104e55dc5ac3383884/applipy_inject-0.11.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "91651cd886a2d370c7d17004080e1e2602212ce030e50b9834a856b4aee08c44",
          "md5": "9cbdcefe5e7595676e49924eb397430a",
          "sha256": "bd258781f750822fae76c1bbf83eb46c791564968bd3e000679f72d24b4c2cb9"
        },
        "downloads": -1,
        "filename": "applipy_inject-0.11.3.tar.gz",
        "has_sig": false,
        "md5_digest": "9cbdcefe5e7595676e49924eb397430a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5670,
        "upload_time": "2020-10-11T11:31:22",
        "upload_time_iso_8601": "2020-10-11T11:31:22.367313Z",
        "url": "https://files.pythonhosted.org/packages/91/65/1cd886a2d370c7d17004080e1e2602212ce030e50b9834a856b4aee08c44/applipy_inject-0.11.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a7c6ffb09f53fcd5d7584955eb36c82cce3c162a1d21a2c1b53ec03744031e8e",
          "md5": "d02c4aef3508f1caba05b30ddcedb73e",
          "sha256": "caaa8726e12304f94a80cea2b2f96abadc14b25a0b9ef837d2f708941a1ffd79"
        },
        "downloads": -1,
        "filename": "applipy_inject-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d02c4aef3508f1caba05b30ddcedb73e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5708,
        "upload_time": "2020-10-13T20:39:30",
        "upload_time_iso_8601": "2020-10-13T20:39:30.344329Z",
        "url": "https://files.pythonhosted.org/packages/a7/c6/ffb09f53fcd5d7584955eb36c82cce3c162a1d21a2c1b53ec03744031e8e/applipy_inject-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "be4939d16994c7d91f36ff069e65daf037cb18dc971b6cf137dd44d7a2092cfe",
          "md5": "09e9685e1229c9bd6a4c1f7d8d230a91",
          "sha256": "1f5d8f56ec776c1c2067880e0292c3d39c636d51ed9044f9f2080f372a29b00f"
        },
        "downloads": -1,
        "filename": "applipy_inject-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "09e9685e1229c9bd6a4c1f7d8d230a91",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5743,
        "upload_time": "2020-10-13T20:39:31",
        "upload_time_iso_8601": "2020-10-13T20:39:31.431351Z",
        "url": "https://files.pythonhosted.org/packages/be/49/39d16994c7d91f36ff069e65daf037cb18dc971b6cf137dd44d7a2092cfe/applipy_inject-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "07f2e10fac93005180d082240a008d8c4045764451a25a486584a48cda625534",
          "md5": "5214bd4fbb4246fa014b0b394fbc8b9b",
          "sha256": "1806989ab1d32fc32052938d2d8118f2ca4e346fe457a6eb6deefdf76e4f0857"
        },
        "downloads": -1,
        "filename": "applipy_inject-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5214bd4fbb4246fa014b0b394fbc8b9b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6128,
        "upload_time": "2021-03-19T12:12:00",
        "upload_time_iso_8601": "2021-03-19T12:12:00.428856Z",
        "url": "https://files.pythonhosted.org/packages/07/f2/e10fac93005180d082240a008d8c4045764451a25a486584a48cda625534/applipy_inject-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1a5188099f63ca59d9ac434e3ccf0e2c2993741c02a33c938ff43bc3e3d88100",
          "md5": "582532d8d96a86f54718db24b26c08ce",
          "sha256": "02979d42501d1a204ebd26db4d91f48dd3f7abe70f3826cf65111a7cfd2f0766"
        },
        "downloads": -1,
        "filename": "applipy_inject-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "582532d8d96a86f54718db24b26c08ce",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7003,
        "upload_time": "2021-03-19T12:12:01",
        "upload_time_iso_8601": "2021-03-19T12:12:01.214076Z",
        "url": "https://files.pythonhosted.org/packages/1a/51/88099f63ca59d9ac434e3ccf0e2c2993741c02a33c938ff43bc3e3d88100/applipy_inject-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "637dc12d61f8e8ac8aabcfeb937eb1f022f4650f754e20eddbe44a8f918361a7",
          "md5": "79fed51fa52b28b986419eb2aac5f77c",
          "sha256": "471d9aa5c9ebb5fb54de7219e483c19b62e22fb2a710b29cc7eb80e4a464e971"
        },
        "downloads": -1,
        "filename": "applipy_inject-1.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "79fed51fa52b28b986419eb2aac5f77c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6260,
        "upload_time": "2021-04-21T13:20:59",
        "upload_time_iso_8601": "2021-04-21T13:20:59.191039Z",
        "url": "https://files.pythonhosted.org/packages/63/7d/c12d61f8e8ac8aabcfeb937eb1f022f4650f754e20eddbe44a8f918361a7/applipy_inject-1.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "10a7542f89d2d6cd0bc515883f7a8d3a891a25ae133f9c8252fc8d3ee131d474",
          "md5": "e761b24c0401ef54d69e2bab6267ce31",
          "sha256": "a87c19cb051327ef341356ab9b1450e1529fefe833cf43831c09b129ed95815e"
        },
        "downloads": -1,
        "filename": "applipy_inject-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e761b24c0401ef54d69e2bab6267ce31",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7316,
        "upload_time": "2021-04-21T13:21:01",
        "upload_time_iso_8601": "2021-04-21T13:21:01.117910Z",
        "url": "https://files.pythonhosted.org/packages/10/a7/542f89d2d6cd0bc515883f7a8d3a891a25ae133f9c8252fc8d3ee131d474/applipy_inject-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c0bd77087c5cf12594c626e09f913e4ee9ae7559e49cbd9bfc3e830059ceeaee",
          "md5": "fd42668acdc89726a0cd11c2c066fcd8",
          "sha256": "d12a29743207a6d0d56b40a52efb4e51fa7fef18dbeba3b789fba728ffba40f3"
        },
        "downloads": -1,
        "filename": "applipy_inject-1.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fd42668acdc89726a0cd11c2c066fcd8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 7299,
        "upload_time": "2021-08-24T13:17:52",
        "upload_time_iso_8601": "2021-08-24T13:17:52.268823Z",
        "url": "https://files.pythonhosted.org/packages/c0/bd/77087c5cf12594c626e09f913e4ee9ae7559e49cbd9bfc3e830059ceeaee/applipy_inject-1.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8cea27b02e4b3e6e2eb331d3dcca9f41d26432a352e94dbeab4f70037320ca68",
          "md5": "db5bb12d501d4c56bbe75aca0eb8294e",
          "sha256": "3dcb723dc017cd3e8974483268840e40adc8f5447b6925701e5cc0a5a8cfa23c"
        },
        "downloads": -1,
        "filename": "applipy_inject-1.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "db5bb12d501d4c56bbe75aca0eb8294e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 7280,
        "upload_time": "2021-08-24T13:17:53",
        "upload_time_iso_8601": "2021-08-24T13:17:53.873745Z",
        "url": "https://files.pythonhosted.org/packages/8c/ea/27b02e4b3e6e2eb331d3dcca9f41d26432a352e94dbeab4f70037320ca68/applipy_inject-1.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "39ebad0f1a46f9835944f78ececc3c62244057fe3a59696022589a9c58a51529",
          "md5": "6e29e481e93a21dfc15f7ceb0f50537f",
          "sha256": "d7608276f551f0bb11701608d6c00800bd29f5f52a96fa7acb19ac48c98185c7"
        },
        "downloads": -1,
        "filename": "applipy_inject-1.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6e29e481e93a21dfc15f7ceb0f50537f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 7468,
        "upload_time": "2021-08-25T21:32:03",
        "upload_time_iso_8601": "2021-08-25T21:32:03.292805Z",
        "url": "https://files.pythonhosted.org/packages/39/eb/ad0f1a46f9835944f78ececc3c62244057fe3a59696022589a9c58a51529/applipy_inject-1.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a3b302300976f1d7ba077bc50b12c9b53b1e55fbf71687f7bd698d353b16d740",
          "md5": "c025e8f95b9b167a2bd3b04a59aa67d9",
          "sha256": "6e225d2a778fde62f6af02ac934420b91606af67f9281213e81235d9e5e9e93b"
        },
        "downloads": -1,
        "filename": "applipy_inject-1.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c025e8f95b9b167a2bd3b04a59aa67d9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 9065,
        "upload_time": "2021-08-25T21:32:04",
        "upload_time_iso_8601": "2021-08-25T21:32:04.225735Z",
        "url": "https://files.pythonhosted.org/packages/a3/b3/02300976f1d7ba077bc50b12c9b53b1e55fbf71687f7bd698d353b16d740/applipy_inject-1.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "39ebad0f1a46f9835944f78ececc3c62244057fe3a59696022589a9c58a51529",
        "md5": "6e29e481e93a21dfc15f7ceb0f50537f",
        "sha256": "d7608276f551f0bb11701608d6c00800bd29f5f52a96fa7acb19ac48c98185c7"
      },
      "downloads": -1,
      "filename": "applipy_inject-1.3.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6e29e481e93a21dfc15f7ceb0f50537f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 7468,
      "upload_time": "2021-08-25T21:32:03",
      "upload_time_iso_8601": "2021-08-25T21:32:03.292805Z",
      "url": "https://files.pythonhosted.org/packages/39/eb/ad0f1a46f9835944f78ececc3c62244057fe3a59696022589a9c58a51529/applipy_inject-1.3.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a3b302300976f1d7ba077bc50b12c9b53b1e55fbf71687f7bd698d353b16d740",
        "md5": "c025e8f95b9b167a2bd3b04a59aa67d9",
        "sha256": "6e225d2a778fde62f6af02ac934420b91606af67f9281213e81235d9e5e9e93b"
      },
      "downloads": -1,
      "filename": "applipy_inject-1.3.1.tar.gz",
      "has_sig": false,
      "md5_digest": "c025e8f95b9b167a2bd3b04a59aa67d9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 9065,
      "upload_time": "2021-08-25T21:32:04",
      "upload_time_iso_8601": "2021-08-25T21:32:04.225735Z",
      "url": "https://files.pythonhosted.org/packages/a3/b3/02300976f1d7ba077bc50b12c9b53b1e55fbf71687f7bd698d353b16d740/applipy_inject-1.3.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}