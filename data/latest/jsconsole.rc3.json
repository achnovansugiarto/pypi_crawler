{
  "info": {
    "author": "Anime no Sekai",
    "author_email": "niichannomail@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# jsConsole\n A JavaScript Console written for and in python\n\n### What is jsConsole?\njsConsole is a python module that lets you use JavaScript classes and control a browser as you would do in JavaScript in Python!\n\n### Usage\nJust import everything from the module and you are ready to go!\n\n```python\n>>> from jsConsole import *\n#### And now you can use classes like document, window, Math or console from Python!\n\n>>> console.log('jsConsole is ready!')\n'jsConsole is ready!'\n\n>>> window.open('https://google.com', '_self')\n# Opens google.com on the browser #\n\n>>> def hello():\n...     print('Hello')\n...\n\n>>> document.getElementsByClassName('RNNXgb')[0].addEventListener('click', hello) ### Adding an event listener to the search bar from google.com which executes hello() when clicked.\n\n>>> window.kill() # Needed to kill the browser (for it not to stay in the background even with Python quited)\n``` \n\n### Installation\nInstall it with PyPI (`pip`) the Python Dependency/Module Manager.\n\n```bash\npip install jsConsole\n```\n\n### Browser Configuration\nBy default, jsConsole uses Pyppeteer which runs on Chromium to execute JavaScript.\n\nYou can configure the browser you want to use with `jsConsole.internal.config`\n```python\n>>> import jsConsole.internal.config as jsConsoleConfig\n\n>>> jsConsoleConfig.layer # defines the layer (Selenium of Pyppeteer) you want to use --> String\n\n>>> jsConsoleConfig.executable_path # Sets the executable path of the browser you want to use. --> String\n\n>>> jsConsoleConfig.no_sandbox # Sets wether you want to use the --no-sandbox argument whie opening the browser or not (useful for Linux) --> bool\n\n>>> jsConsoleConfig.args # Sets this to pass arguments while opening the browser. --> Needs to be a list\n\n>>> jsConsoleConfig.headless # Sets wether you want the browser to be headless or not with Selenium --> bool\n\n>>> jsConsoleConfig.browsername # Sets the browser you want to use with Selenium ('Chrome', 'Firefox' and 'PhantomJS' are currently supported) --> String\n\n\"\"\"\nDefault Configuration is:\n\nlayer = 'Selenium'\n\nexecutable_path = ''\nno_sandbox = False\nargs = []\n\nheadless = True\nbrowsername = 'Chrome'\n\"\"\"\n\n## Experiment and try different browsers and layers to find the one that fits the best for you. I've personnaly tried my module with the default configurations.\n\n###### If you don't want to worry about drivers and browsers you can use Pyppeteer which will download, install and set up a browser for you.\n\n\n>>> from jsConsole import *\n...\n```\n\n### jsConsole specific functions/method and classes.\n- browser.kill() or window.kill()\n\nUsed to kill the browser instance opened when launched in order to prevent it from staying open in the background even after stopping your script/python execution.\n\n> Check your activity monitor (top, htop, activity monitor, etc.) if there isn't any non-used browsers opened as it may happen when using Selenium and other browser control softwares.\n\n\n- browser (Browser Object)\n\nContains multiple informations about the current browser instance opened:\n\n    - browser: The browser instance, a new page object if using Pyppeteer or a driver instance if using Selenium\n    - layer: The name of the layer used (Selenium or Pyppeteer)\n    - executable_path: The executable path (if specified one) of the browser in use\n    - browsername: The name of the browser in use (i.e Chrome, Firefox)\n    - no_sandbox: Wether or not you activated the option no-sandbox (useful for Linux users)\n    - headless: If you opened the browser instance headlessly (works for Selenium)\n    - args: The arguments passed (if configured) while opening the browser\n    - drivername: The name of the driver in use\n    - connected: Wether or not you are connected to the browser\n    - areClassesInitialized: Internal variable to indicate if the JavaScript are correctly initialized\n    - list_of_variables: Internal variable which tells the variables ID created by jsConsole (i.e when using addEventListener or setTimeout)\n    - dict_of_ids = Internal variable which tells the different setTimeout/setInterval IDs that had been created and if each of them should be enabled or not.\n    - ids_to_thread = Internal variable which tells the different setTimeout/setInterval IDs that had been created and their corresponding thread.\n\n- fresh()\n\nReturns a tuple with a brand new document and window class (after a new page is loaded)\n\nUse it like so:\n```python\n>>> document, window, history = fresh()\n\nWhich returns a new document (_Document) object in the document variable, a new window (_Window) object in the window variable and a new history (_History) object in the history variable.\n\n## I can't provide a new document and window in real-time, seamlessly (even though I tried) because of the way they work.\n```\n\n- newDocument():\n\nReturns a new document (_Document) object\n\n- newWindow():\n\nReturns a new window (_Window) object\n\n- newHistory():\n\nReturns a new history (_History) object\n\n- evaluate():\n\nEvaluates a snippet of JavaScript code if needed (i.e not avaiable yet)\n\n> return_value=True adds \"`return `\" in front of the snippet of code if you want the value to be returned while using Selenium\n\n- document.window and window.window will return an error message because I didn't find a way of linking them without creating a recursion error.\n\n#### You can use python functions in setTimeout(), clearInterval() and addEventListener.\n\n### You should be able to write code as if you were writing in JavaScript.\n\n\n> Â© Anime no Sekai - 2020\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/Animenosekai/jsConsole/archive/v1.0.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Animenosekai/jsConsole",
    "keywords": "javascript, selenium, pyppeteer, js, jsconsole, javascriptconsole, animenosekai, pythontojavascript",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "jsConsole",
    "package_url": "https://pypi.org/project/jsConsole/",
    "platform": "",
    "project_url": "https://pypi.org/project/jsConsole/",
    "project_urls": {
      "Download": "https://github.com/Animenosekai/jsConsole/archive/v1.0.tar.gz",
      "Homepage": "https://github.com/Animenosekai/jsConsole"
    },
    "release_url": "https://pypi.org/project/jsConsole/1.0.2/",
    "requires_dist": [
      "psutil"
    ],
    "requires_python": "",
    "summary": "A JS Console written for and in python",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7997942,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6637063d90844d973a2bcd7d72a30e361b25292f1ae9df76cb2980f65e3d9041",
          "md5": "5fd886fefd57e9041fdecb43b7939ae2",
          "sha256": "a1585bd06daab34e89da081bb1b47f43e2ba8175e0faf65fba84cffcfe0f64f9"
        },
        "downloads": -1,
        "filename": "jsConsole-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5fd886fefd57e9041fdecb43b7939ae2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4884,
        "upload_time": "2020-08-19T18:00:50",
        "upload_time_iso_8601": "2020-08-19T18:00:50.133333Z",
        "url": "https://files.pythonhosted.org/packages/66/37/063d90844d973a2bcd7d72a30e361b25292f1ae9df76cb2980f65e3d9041/jsConsole-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b7aca46aac3f95270891a5c7875ba2a97a11f48653e298a1954570b11af1bcb1",
          "md5": "d63162fe2a3770287455129aa7a4a58e",
          "sha256": "808785cdcca530e241507aa73ce9642d6fb19ed881c126e3a473151f64f5c80f"
        },
        "downloads": -1,
        "filename": "jsConsole-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d63162fe2a3770287455129aa7a4a58e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4524,
        "upload_time": "2020-08-19T18:00:52",
        "upload_time_iso_8601": "2020-08-19T18:00:52.891821Z",
        "url": "https://files.pythonhosted.org/packages/b7/ac/a46aac3f95270891a5c7875ba2a97a11f48653e298a1954570b11af1bcb1/jsConsole-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "16d0892a7643562e5e6b4eaf2a81a51551e2a6ee3d8e630d767fd55c0e7e1eff",
          "md5": "b8c031f51cafa1f2152891d0645849af",
          "sha256": "d91ea7d07397fe0a353b0b12fe2508df5423a79d26fd6b2158b2f4ce880f64f7"
        },
        "downloads": -1,
        "filename": "jsConsole-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b8c031f51cafa1f2152891d0645849af",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4905,
        "upload_time": "2020-08-19T18:46:51",
        "upload_time_iso_8601": "2020-08-19T18:46:51.130198Z",
        "url": "https://files.pythonhosted.org/packages/16/d0/892a7643562e5e6b4eaf2a81a51551e2a6ee3d8e630d767fd55c0e7e1eff/jsConsole-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3a207bfa38f7dd11a96ec9b70bdb2e9394f929c12b253f4ab81ac62517a60ec0",
          "md5": "02ad2edca292c96780a0669b7bb8c4fd",
          "sha256": "4b61d1313d3e55f1820f8a413aa76aaeb3da7ce4ec6699cfdc3351d47b704588"
        },
        "downloads": -1,
        "filename": "jsConsole-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "02ad2edca292c96780a0669b7bb8c4fd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4539,
        "upload_time": "2020-08-19T18:46:52",
        "upload_time_iso_8601": "2020-08-19T18:46:52.809949Z",
        "url": "https://files.pythonhosted.org/packages/3a/20/7bfa38f7dd11a96ec9b70bdb2e9394f929c12b253f4ab81ac62517a60ec0/jsConsole-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6b90d26f555837d3d7dd959d177f4e87c0770dfaffdd0f4879f39d93c9801ae2",
          "md5": "9fc4f7c96c1fe6bdc13e7a7b63fba3b7",
          "sha256": "41d53075a9297bc018686cf97ef8a96055c21e6dbbd5b93a83d9c0b840c41c80"
        },
        "downloads": -1,
        "filename": "jsConsole-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9fc4f7c96c1fe6bdc13e7a7b63fba3b7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 30308,
        "upload_time": "2020-08-19T18:52:50",
        "upload_time_iso_8601": "2020-08-19T18:52:50.546303Z",
        "url": "https://files.pythonhosted.org/packages/6b/90/d26f555837d3d7dd959d177f4e87c0770dfaffdd0f4879f39d93c9801ae2/jsConsole-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0174aead537fa14b234b5fdb0e303f8cfb78f985a6cfe154f335fdd5d2b355bc",
          "md5": "a25a9fad04f09690438bcbf0025078c9",
          "sha256": "13586450103901055715f8fb3b8ea178a3bde8aefe272a710ed7dfff9e06371c"
        },
        "downloads": -1,
        "filename": "jsConsole-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a25a9fad04f09690438bcbf0025078c9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29799,
        "upload_time": "2020-08-19T18:52:52",
        "upload_time_iso_8601": "2020-08-19T18:52:52.333676Z",
        "url": "https://files.pythonhosted.org/packages/01/74/aead537fa14b234b5fdb0e303f8cfb78f985a6cfe154f335fdd5d2b355bc/jsConsole-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6b90d26f555837d3d7dd959d177f4e87c0770dfaffdd0f4879f39d93c9801ae2",
        "md5": "9fc4f7c96c1fe6bdc13e7a7b63fba3b7",
        "sha256": "41d53075a9297bc018686cf97ef8a96055c21e6dbbd5b93a83d9c0b840c41c80"
      },
      "downloads": -1,
      "filename": "jsConsole-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9fc4f7c96c1fe6bdc13e7a7b63fba3b7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 30308,
      "upload_time": "2020-08-19T18:52:50",
      "upload_time_iso_8601": "2020-08-19T18:52:50.546303Z",
      "url": "https://files.pythonhosted.org/packages/6b/90/d26f555837d3d7dd959d177f4e87c0770dfaffdd0f4879f39d93c9801ae2/jsConsole-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0174aead537fa14b234b5fdb0e303f8cfb78f985a6cfe154f335fdd5d2b355bc",
        "md5": "a25a9fad04f09690438bcbf0025078c9",
        "sha256": "13586450103901055715f8fb3b8ea178a3bde8aefe272a710ed7dfff9e06371c"
      },
      "downloads": -1,
      "filename": "jsConsole-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "a25a9fad04f09690438bcbf0025078c9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 29799,
      "upload_time": "2020-08-19T18:52:52",
      "upload_time_iso_8601": "2020-08-19T18:52:52.333676Z",
      "url": "https://files.pythonhosted.org/packages/01/74/aead537fa14b234b5fdb0e303f8cfb78f985a6cfe154f335fdd5d2b355bc/jsConsole-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}