{
  "info": {
    "author": "Marcellus Amadeus",
    "author_email": "marcellus@alana.ai",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "License :: OSI Approved :: MIT License",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3.5",
      "Topic :: Utilities"
    ],
    "description": "Simple logging lib\n==================\n\nAll code should use Python standard log module instead of ``print()``\nfunction.\n\nInstall\n-------\n\n::\n\n    python3 setup.py install\n\nUsage\n-----\n\nBasic usage.\n\n.. code:: python\n\n    from alogs import get_logger\n\n    logger = get_logger('module_name')\n\n    logger.debug('Debug message')\n    logger.info('Info message')\n    logger.warning('Warning message')\n    logger.error('Error message')\n    logger.critical('Critical message')\n\nLog file\n~~~~~~~~\n\nStore logs into a file.\n\n.. code:: python\n\n    from alogs import get_logger\n\n    logger = get_logger('module_name', 'log_file.log')\n\n    logger.debug('Debug message')  # Debug messages *are not* logged into the file\n    logger.info('Info message')\n\nDisable existing loggers\n~~~~~~~~~~~~~~~~~~~~~~~~\n\nPrevent existing loggers to log.\n\n.. code:: python\n\n    from alogs import get_logger\n\n    logger = get_logger('module_name', disable_existing_loggers=True)\n\n    logger.debug('Debug message')\n\nChange default log level\n~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe default log level is DEBUG, but it can be changed:\n\n.. code:: python\n\n    from alogs import get_logger\n\n    logger = get_logger('module_name', root_level='warning')\n\n    logger.debug('Debug message')  # won't appear\n    logger.warning('Info message')\n\nTest\n----\n\nTo test it just execute the ``test.py``:\n\n::\n\n    ~ python3 test.py\n\nYou should see:\n\n::\n\n    *** Simple logs ***\n    DEBUG 2021-02-02 12:58:18,672 MainProcess:16581 test:test_simple_logs() test.py:7 [alogs] = Debug simple message\n    INFO 2021-02-02 12:58:18,672 MainProcess:16581 test:test_simple_logs() test.py:8 [alogs] = Info simple message\n    WARNING 2021-02-02 12:58:18,672 MainProcess:16581 test:test_simple_logs() test.py:9 [alogs] = Warning simple message\n    ERROR 2021-02-02 12:58:18,672 MainProcess:16581 test:test_simple_logs() test.py:10 [alogs] = Error simple message\n    CRITICAL 2021-02-02 12:58:18,672 MainProcess:16581 test:test_simple_logs() test.py:11 [alogs] = Critical simple message\n\n    *** Module logs ***\n    DEBUG 2021-02-02 12:58:18,672 MainProcess:16581 test:test_module_name_logs() test.py:16 [module_name] = Debug module message\n    INFO 2021-02-02 12:58:18,672 MainProcess:16581 test:test_module_name_logs() test.py:17 [module_name] = Info module message\n    WARNING 2021-02-02 12:58:18,673 MainProcess:16581 test:test_module_name_logs() test.py:18 [module_name] = Warning module message\n    ERROR 2021-02-02 12:58:18,673 MainProcess:16581 test:test_module_name_logs() test.py:19 [module_name] = Error module message\n    CRITICAL 2021-02-02 12:58:18,673 MainProcess:16581 test:test_module_name_logs() test.py:20 [module_name] = Critical module message\n\n    *** File logs ***\n    DEBUG 2021-02-02 12:58:18,673 MainProcess:16581 test:test_file_logs() test.py:25 [file_logs] = THIS MESSAGE SHOULD NOT APPEAR ON THE FILE\n    INFO 2021-02-02 12:58:18,673 MainProcess:16581 test:test_file_logs() test.py:26 [file_logs] = Info file message\n    WARNING 2021-02-02 12:58:18,715 MainProcess:16581 test:test_file_logs() test.py:27 [file_logs] = Warning file message\n    ERROR 2021-02-02 12:58:18,715 MainProcess:16581 test:test_file_logs() test.py:28 [file_logs] = Error file message\n    CRITICAL 2021-02-02 12:58:18,715 MainProcess:16581 test:test_file_logs() test.py:29 [file_logs] = Critical file message\n    * Logs written on file \"test.log\" *\n    INFO 02/Feb/2021:12:58:18 -0300 MainProcess:16581 test:test_file_logs() test.py:26 [file_logs] = Info file message\n    WARNING 02/Feb/2021:12:58:18 -0300 MainProcess:16581 test:test_file_logs() test.py:27 [file_logs] = Warning file message\n    ERROR 02/Feb/2021:12:58:18 -0300 MainProcess:16581 test:test_file_logs() test.py:28 [file_logs] = Error file message\n    CRITICAL 02/Feb/2021:12:58:18 -0300 MainProcess:16581 test:test_file_logs() test.py:29 [file_logs] = Critical file message",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "https://bitbucket.org/alana-ai/alogs/archive/v3.3.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://bitbucket.org/alana-ai/alogs",
    "keywords": "logging",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "alogs",
    "package_url": "https://pypi.org/project/alogs/",
    "platform": "os x",
    "project_url": "https://pypi.org/project/alogs/",
    "project_urls": {
      "Download": "https://bitbucket.org/alana-ai/alogs/archive/v3.3.tar.gz",
      "Homepage": "https://bitbucket.org/alana-ai/alogs"
    },
    "release_url": "https://pypi.org/project/alogs/3.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Custom Logging Module",
    "version": "3.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10266336,
  "releases": {
    "3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0e3cf7f5908248d01f537ee07d8f8bdd273c3de3b00fecc863842c9661c92b13",
          "md5": "42632a937a057e3dd854a1ae703e3a21",
          "sha256": "071f31686facdab1335b0866336f9d93866b2f130142d9032f30ed7103347a6b"
        },
        "downloads": -1,
        "filename": "alogs-3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "42632a937a057e3dd854a1ae703e3a21",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2906,
        "upload_time": "2019-07-25T14:47:25",
        "upload_time_iso_8601": "2019-07-25T14:47:25.996860Z",
        "url": "https://files.pythonhosted.org/packages/0e/3c/f7f5908248d01f537ee07d8f8bdd273c3de3b00fecc863842c9661c92b13/alogs-3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7cf12e4b8e03b2ca2fe81ca4a75efb0cb676352e7ca22404123e1b8e8083bd73",
          "md5": "892b87a0409ed8e6ee0752b9843f7a43",
          "sha256": "5edcb637ff9b82f061955c9597ae79c215ce2f0d86f0c2e90526c37af2e203cb"
        },
        "downloads": -1,
        "filename": "alogs-3.3.tar.gz",
        "has_sig": false,
        "md5_digest": "892b87a0409ed8e6ee0752b9843f7a43",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3602,
        "upload_time": "2021-05-05T14:56:15",
        "upload_time_iso_8601": "2021-05-05T14:56:15.593278Z",
        "url": "https://files.pythonhosted.org/packages/7c/f1/2e4b8e03b2ca2fe81ca4a75efb0cb676352e7ca22404123e1b8e8083bd73/alogs-3.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7cf12e4b8e03b2ca2fe81ca4a75efb0cb676352e7ca22404123e1b8e8083bd73",
        "md5": "892b87a0409ed8e6ee0752b9843f7a43",
        "sha256": "5edcb637ff9b82f061955c9597ae79c215ce2f0d86f0c2e90526c37af2e203cb"
      },
      "downloads": -1,
      "filename": "alogs-3.3.tar.gz",
      "has_sig": false,
      "md5_digest": "892b87a0409ed8e6ee0752b9843f7a43",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3602,
      "upload_time": "2021-05-05T14:56:15",
      "upload_time_iso_8601": "2021-05-05T14:56:15.593278Z",
      "url": "https://files.pythonhosted.org/packages/7c/f1/2e4b8e03b2ca2fe81ca4a75efb0cb676352e7ca22404123e1b8e8083bd73/alogs-3.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}