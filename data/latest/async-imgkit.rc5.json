{
  "info": {
    "author": "guilhermef",
    "author_email": "guivideojob@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Text Processing",
      "Topic :: Text Processing :: General",
      "Topic :: Text Processing :: Markup",
      "Topic :: Text Processing :: Markup :: HTML",
      "Topic :: Text Processing :: Markup :: XML",
      "Topic :: Utilities"
    ],
    "description": "Async-IMGKit: Python library of HTML to IMG wrapper\n===================================================\n\n|Build Status| |Code Coverage| |PyPI version|\n\nPython 3 async wrapper for\n`IMGKIT <https://github.com/jarrekk/imgkit>`__.\n\nInstallation\n------------\n\n1. Install async-imgkit:\n\n   .. code:: python\n\n       pip install async-imgkit\n\n2. Install wkhtmltopdf:\n\n-  Debian/Ubuntu:\n\n   .. code:: bash\n\n       sudo apt-get install wkhtmltopdf\n\n   **Warning!** Version in debian/ubuntu repos have reduced\n   functionality (because it compiled without the wkhtmltopdf QT\n   patches), such as adding outlines, headers, footers, TOC etc. To use\n   this options you should install static binary from\n   `wkhtmltopdf <http://wkhtmltopdf.org/>`__ site or you can use this\n   `script <https://github.com/jarrekk/imgkit/blob/master/travis/init.sh>`__.\n\n-  MacOSX\n\n   .. code:: bash\n\n       brew install wkhtmltopdf\n\n-  Windows and other options: check `wkhtmltopdf\n   homepage <http://wkhtmltopdf.org/>`__ for binary installers or `wiki\n   page <https://github.com/pdfkit/pdfkit/wiki/Installing-WKHTMLTOPDF>`__.\n\nUsage\n-----\n\nSimple example:\n\n.. code:: python\n\n    import async_imgkit.api as imgkit\n\n    await imgkit.from_url('http://google.com', 'out.jpg')\n    await imgkit.from_file('test.html', 'out.jpg')\n    await imgkit.from_string('Hello!', 'out.jpg')\n\nYou can pass a list with multiple URLs or files:\n\n.. code:: python\n\n    await imgkit.from_url(['google.com', 'yandex.ru', 'engadget.com'], 'out.jpg')\n    await imgkit.from_file(['file1.html', 'file2.html'], 'out.jpg')\n\nAlso you can pass an opened file:\n\n.. code:: python\n\n    with open('file.html') as f:\n        await imgkit.from_file(f, 'out.jpg')\n\nIf you wish to further process generated IMG, you can read it to a\nvariable:\n\n.. code:: python\n\n    # Use False instead of output path to save pdf to a variable\n    img = await imgkit.from_url('http://google.com', False)\n\nYou can find all wkhtmltoimage options by type ``wkhtmltoimage`` command\nor visit this\n`Manual <http://madalgo.au.dk/~jakobt/wkhtmltoxdoc/wkhtmltoimage_0.10.0_rc2-doc.html>`__.\nYou can drop '--' in option name. If option without value, use *None,\nFalse* or *''* for dict value:. For repeatable options (incl. allow,\ncookie, custom-header, post, postfile, run-script, replace) you may use\na list or a tuple. With option that need multiple values (e.g.\n--custom-header Authorization secret) we may use a 2-tuple (see example\nbelow).\n\n.. code:: python\n\n    options = {\n        'format': 'png',\n        'crop-h': '3',\n        'crop-w': '3',\n        'crop-x': '3',\n        'crop-y': '3',\n        'encoding': \"UTF-8\",\n        'custom-header' : [\n            ('Accept-Encoding', 'gzip')\n        ]\n        'cookie': [\n            ('cookie-name1', 'cookie-value1'),\n            ('cookie-name2', 'cookie-value2'),\n        ],\n        'no-outline': None\n    }\n\n    await imgkit.from_url('http://google.com', 'out.png', options=options)\n\nAt some headless servers, perhaps you need to install **xvfb**:\n\n.. code:: bash\n\n    # at ubuntu server, etc.\n    sudo apt-get install xvfb\n    # at centos server, etc.\n    yum install xorg-x11-server-Xvfb\n\nThen use **IMGKit** with option **xvfb**: ``{\"xvfb\": \"\"}``.\n\nBy default, IMGKit will show all ``wkhtmltoimage`` output. If you don't\nwant it, you need to pass ``quiet`` option:\n\n.. code:: python\n\n    options = {\n        'quiet': ''\n        }\n\n    await imgkit.from_url('google.com', 'out.jpg', options=options)\n\nDue to wkhtmltoimage command syntax, **TOC** and **Cover** options must\nbe specified separately. If you need cover before TOC, use\n``cover_first`` option:\n\n.. code:: python\n\n    toc = {\n        'xsl-style-sheet': 'toc.xsl'\n    }\n\n    cover = 'cover.html'\n\n    await imgkit.from_file('file.html', options=options, toc=toc, cover=cover)\n    await imgkit.from_file('file.html', options=options, toc=toc, cover=cover, cover_first=True)\n\nYou can specify external CSS files when converting files or strings\nusing *css* option.\n\n.. code:: python\n\n    # Single CSS file\n    css = 'example.css'\n    await imgkit.from_file('file.html', options=options, css=css)\n\n    # Multiple CSS files\n    css = ['example.css', 'example2.css']\n    await imgkit.from_file('file.html', options=options, css=css)\n\nYou can also pass any options through meta tags in your HTML:\n\n.. code:: python\n\n    body = \"\"\"\n    <html>\n      <head>\n        <meta name=\"imgkit-format\" content=\"png\"/>\n        <meta name=\"imgkit-orientation\" content=\"Landscape\"/>\n      </head>\n      Hello World!\n      </html>\n    \"\"\"\n\n    await imgkit.from_string(body, 'out.png')\n\nConfiguration\n-------------\n\nEach API call takes an optional config paramater. This should be an\ninstance of ``async_imgkit.api.config()`` API call. It takes the config\noptions as initial paramaters. The available options are:\n\n-  ``wkhtmltoimage`` - the location of the ``wkhtmltoimage`` binary. By\n   default ``async_imgkit`` will attempt to locate this using\n   which\\ ``(on UNIX type systems) or where`` (on Windows).\n-  ``meta_tag_prefix`` - the prefix for ``async_imgkit`` specific meta\n   tags - by default this is ``imgkit-``\n\nExample - for when ``wkhtmltopdf`` is not in ``$PATH``:\n\n.. code:: python\n\n    config = imgkit.config(wkhtmltoimage='/opt/bin/wkhtmltoimage')\n    await imgkit.from_string(html_string, output_file, config=config)\n\nTroubleshooting\n---------------\n\n-  ``IOError: 'No wkhtmltopdf executable found'``:\n\nMake sure that you have wkhtmltoimage in your ``$PATH`` or set via\ncustom configuration (see preceding section). *where wkhtmltoimage* in\nWindows or *which wkhtmltoimage* on Linux should return actual path to\nbinary.\n\n-  ``IOError: 'Command Failed'``:\n\nThis error means that IMGKit was unable to process an input. You can try\nto directly run a command from error message and see what error caused\nfailure (on some wkhtmltoimage versions this can be cause by\nsegmentation faults)\n\nCredit\n------\n\n`python PDFKit <https://github.com/JazzCore/python-pdfkit>`__ `python\nIMGKit <https://github.com/jarrekk/imgkit>`__\n\n.. |Build Status| image:: https://www.travis-ci.com/guilhermef/async-imgkit.svg?branch=master\n   :target: https://www.travis-ci.com/guilhermef/async-imgkit\n.. |Code Coverage| image:: https://codecov.io/github/guilhermef/async-imgkit/branch/master/graph/badge.svg\n   :target: https://codecov.io/github/guilhermef/async-imgkit/\n.. |PyPI version| image:: https://badge.fury.io/py/async-imgkit.svg\n   :target: https://badge.fury.io/py/async-imgkit\n\nAsync-IMGKit author\n-------------------\n\n-  **guilhermef** https://github.com/guilhermef\n\nIMGKit author\n-------------\n\n-  **jarrekk** https://github.com/jarrekk\n\nContributors\n~~~~~~~~~~~~\n\n-  **v-hunt** https://github.com/v-hunt\n-  **pprmint** https://github.com/pprmint\n-  **v-hunt** https://github.com/v-hunt\n-  **arayate** https://github.com/arayate\n-  **berkerboy** https://github.com/berkerboy",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "https://github.com/guilhermef/async-imgkit",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/guilhermef/async-imgkit",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "async-imgkit",
    "package_url": "https://pypi.org/project/async-imgkit/",
    "platform": "",
    "project_url": "https://pypi.org/project/async-imgkit/",
    "project_urls": {
      "Download": "https://github.com/guilhermef/async-imgkit",
      "Homepage": "https://github.com/guilhermef/async-imgkit"
    },
    "release_url": "https://pypi.org/project/async-imgkit/0.0.5/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Wkhtmltopdf python wrapper to convert html to image using the webkit rendering engine and qt",
    "version": "0.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9159334,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c9729b23727248af31d9762dd4b16400f3061c244d69d513422a65618e0b9af",
          "md5": "c06125a56b6a8c96dfa39dcec8b766bc",
          "sha256": "042ef88384bc9fbdc89b65b9351892f109fe1023731979e4fea8aed43421e27c"
        },
        "downloads": -1,
        "filename": "async-imgkit-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c06125a56b6a8c96dfa39dcec8b766bc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6297,
        "upload_time": "2021-01-17T16:18:01",
        "upload_time_iso_8601": "2021-01-17T16:18:01.888089Z",
        "url": "https://files.pythonhosted.org/packages/8c/97/29b23727248af31d9762dd4b16400f3061c244d69d513422a65618e0b9af/async-imgkit-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "62c16518d9900a265168ee6d9d61919d26573dbf540967d7c8470d7d4bfbafc7",
          "md5": "2b7e6df186d19b6681da4b1866ae21c4",
          "sha256": "e382af0a549f46b23319708a1165ad46c64dd56bf1209ef4ad350caa29e581c2"
        },
        "downloads": -1,
        "filename": "async-imgkit-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2b7e6df186d19b6681da4b1866ae21c4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8422,
        "upload_time": "2021-01-17T16:43:41",
        "upload_time_iso_8601": "2021-01-17T16:43:41.097333Z",
        "url": "https://files.pythonhosted.org/packages/62/c1/6518d9900a265168ee6d9d61919d26573dbf540967d7c8470d7d4bfbafc7/async-imgkit-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eb8a92418d006d15880e8bcaacbcb88b7ac2e603f385cbbd59c3700491629a2d",
          "md5": "d98e0e4fb92f56e1d76772035c2aa1d7",
          "sha256": "0c295d6e96f1a1af4cb08e80d77a1ed5cedff1d94a04e7badcd14cc24138d290"
        },
        "downloads": -1,
        "filename": "async-imgkit-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "d98e0e4fb92f56e1d76772035c2aa1d7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8429,
        "upload_time": "2021-01-17T16:51:32",
        "upload_time_iso_8601": "2021-01-17T16:51:32.170147Z",
        "url": "https://files.pythonhosted.org/packages/eb/8a/92418d006d15880e8bcaacbcb88b7ac2e603f385cbbd59c3700491629a2d/async-imgkit-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c9ca18f626369555de6a2ac2bf2944bf005dbe5c0cb606453e849216d6c18819",
          "md5": "12fd13984f86a7eaae307e5ae58dbde7",
          "sha256": "bafcb05d70add3ece5d3b0b9c082e2ae6eb4ce63d01af9284379e4a127dfa33f"
        },
        "downloads": -1,
        "filename": "async-imgkit-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "12fd13984f86a7eaae307e5ae58dbde7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8332,
        "upload_time": "2021-01-17T23:55:56",
        "upload_time_iso_8601": "2021-01-17T23:55:56.675973Z",
        "url": "https://files.pythonhosted.org/packages/c9/ca/18f626369555de6a2ac2bf2944bf005dbe5c0cb606453e849216d6c18819/async-imgkit-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea85a34372d93b166a75c4a191909a423445d4c5004ce889dbf7f27ce81219a0",
          "md5": "07281488e2b2a402cbc187cc0c9405ca",
          "sha256": "b1a7496f46a66dce563ad9b967abc38cf09d334f9e9aaed5eb4b74a357a7853a"
        },
        "downloads": -1,
        "filename": "async-imgkit-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "07281488e2b2a402cbc187cc0c9405ca",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8333,
        "upload_time": "2021-01-18T00:00:24",
        "upload_time_iso_8601": "2021-01-18T00:00:24.119024Z",
        "url": "https://files.pythonhosted.org/packages/ea/85/a34372d93b166a75c4a191909a423445d4c5004ce889dbf7f27ce81219a0/async-imgkit-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ea85a34372d93b166a75c4a191909a423445d4c5004ce889dbf7f27ce81219a0",
        "md5": "07281488e2b2a402cbc187cc0c9405ca",
        "sha256": "b1a7496f46a66dce563ad9b967abc38cf09d334f9e9aaed5eb4b74a357a7853a"
      },
      "downloads": -1,
      "filename": "async-imgkit-0.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "07281488e2b2a402cbc187cc0c9405ca",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8333,
      "upload_time": "2021-01-18T00:00:24",
      "upload_time_iso_8601": "2021-01-18T00:00:24.119024Z",
      "url": "https://files.pythonhosted.org/packages/ea/85/a34372d93b166a75c4a191909a423445d4c5004ce889dbf7f27ce81219a0/async-imgkit-0.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}