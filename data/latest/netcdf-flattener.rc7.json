{
  "info": {
    "author": "Guillaume Obrecht",
    "author_email": "guillaume.obrecht@c-ssystems.de",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# netcdf-flattener\n\nFlatten netCDF files while preserving references as described in the CF Conventions 1.8, chapter 2.7.\n\n## Usage\nThe flattener takes as input and output NetCDF *Dataset* objects, which the user can create or open from *\".nc\"* files \nusing the netCDF4 API. To flatten the Dataset named *\"input_dataset\"* into a Dataset named *\"output_dataset\"*, use the \nfollowing command. In most cases, *\"output_dataset\"* will be an empty Dataset.\n\n    import netcdf_flattener\n    netcdf_flattener.flatten(input_dataset, output_dataset)\n\nBy default, the flattener is in strict mode and returns an exception if a an internal reference from a variable \nattribute to a dimension or variable could not be resolved. To use the lax mode that continues the flattening process \nwith warning, specify the `lax_mode` parameter:\n\n    netcdf_flattener.flatten(input_dataset, output_dataset, lax_mode=True)\n\nFor copying variables that would otherwise be larger than the available memory, the `copy_slices` parameter allows to \nspecify slices to be used when copying the variable. They are specified per variable in a dictionary. The slicing shape \nis either `None` for using a default slice value, or a custom slicing shape in the form of a tuple of the same dimension \nas the variable. If a variable from the Dataset is not contained in the dict, it will not be sliced and copied normally.\n\nSlice shapes should be small enough to fit in memory, but not too small larges loops on small slice can degrade \nperformances drastically. Typically, slices of size in the order of 10^6 to 10^8 are suitable. \n\n    netcdf_flattener.flatten(input_dataset, output_dataset, copy_slices={\"/grp1/var1\": (1000,1000,500,), \"/grp1/var3\": None})\n\n### Limitations    \n\nWhen a CF coordinate variable in the input dataset is in a different\ngroup to its corresponding dimension, the same variable in the output\nflattened dataset will *no longer* be a CF coordinate variable, as its\nname will be prefixed with a different group identifier than its\ndimension. In such cases, it is up to the user to apply the [proximal\nand lateral search alogrithms](https://cfconventions.org/latest.html),\nin conjunction with the mappings defined in the\n``flattener_name_mapping_variables`` and\n``flattener_name_mapping_dimensions`` global attributes, to find which\nnetCDF variables are *acting as* CF coordinate variables in the\nflattened dataset.\n\nFor example, if an input dataset has dimension ``lat`` in the root\ngroup and coordinate variable ``lat(lat)`` in group ``/grp1``, then\nthe flattened dataset will contain dimension ``lat`` and variable\n``grp1__lat(lat)``, both in its root group. In this case, the\n``flattener_name_mapping_variables`` global attribute of the flattened\ndataset will contain the mapping ``\"grp1__lat: /grp1/lat\"`` and the\n``flattener_name_mapping_dimensions`` global attribute will contain\nthe mapping ``\"lat: /lat\"``.\n\n\n## Deployment\n\n### From PyPi\n\n`netCDF-flattener` is in installable with `pip`, for example:\n\n    pip install netcdf-flattener\n\n### From source\n\nInstall the build dependencies:\n\n    python3 -m pip install --upgrade pip setuptools wheel\n\nDownload the source code from\nhttps://gitlab.eumetsat.int/open-source/netcdf-flattener and compile\nthe wheel file, by running the following command from the repository root:\n\n    python3 setup.py bdist_wheel\n\nInstall the wheel file using `pip`:\n\n    python3 -m pip install dist/netcdf_flattener-*.whl\n\n## Support\n\nQuestions and issues should be raised at the issue tracker in the\ncanonical source code repository:\nhttps://gitlab.eumetsat.int/open-source/netcdf-flattener\n\n## Automated testing\n\n### Dependencies\n\nRunning the tests requires having the NetCDF4 libraries installed (ncdump and ncgen applications are required). You can \ninstall them either using your package manager, or \n[build them from the source](https://www.unidata.ucar.edu/software/netcdf/docs/getting_and_building_netcdf.html).\n\nOn CentOS: `sudo yum install netcdf `\n\nInstall Pytest:\n\n    python3 -m pip install pytest\n    \nAll other dependencies are managed by pip and use OSI-approved licenses.\n\n### Run the tests\n\nRun Pytest from the root of the repository: \n\n    python3 -m pytest\n\n## Documentation\n\nA Sphinx project is provided to generate the HTML documentation from the code.\n\nInstall Sphinx: \n\n    python3 -m pip install sphinx\n\nFrom the \"doc\" folder, build the documentation:\n\n    cd doc\n    sphinx-build -b html . build\n\nThe entry point to the documentation is the doc/build/index.html file.\n\n## License\n\nThis code is under Apache 2.0 License. See [LICENSE](LICENSE) for the full license text.\n\n## Authors\n\nSee [AUTHORS](AUTHORS.md) for details.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.eumetsat.int/additional-data-services/netcdf-flattener",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "netcdf-flattener",
    "package_url": "https://pypi.org/project/netcdf-flattener/",
    "platform": "",
    "project_url": "https://pypi.org/project/netcdf-flattener/",
    "project_urls": {
      "Homepage": "https://gitlab.eumetsat.int/additional-data-services/netcdf-flattener"
    },
    "release_url": "https://pypi.org/project/netcdf-flattener/1.2.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "The NetCDF-flattener package",
    "version": "1.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7778199,
  "releases": {
    "1.0.1b2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "33f0aefe8880aff87036d180ed7a57d29ceceab422a759435c166baa6fb8f637",
          "md5": "51c086753900529c1f563ef87eec2bc2",
          "sha256": "7b6eca7f16d52f8bc92700d897fae49307435ccd042b365d8c1dd216333faaaa"
        },
        "downloads": -1,
        "filename": "netcdf-flattener-1.0.1b2.tar.gz",
        "has_sig": false,
        "md5_digest": "51c086753900529c1f563ef87eec2bc2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14736,
        "upload_time": "2020-07-22T09:59:00",
        "upload_time_iso_8601": "2020-07-22T09:59:00.923888Z",
        "url": "https://files.pythonhosted.org/packages/33/f0/aefe8880aff87036d180ed7a57d29ceceab422a759435c166baa6fb8f637/netcdf-flattener-1.0.1b2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1b3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "19e08312fa34e5d8f003cbc3f10cc2b5cad0963d8c8928980e7f63df1f4f9f11",
          "md5": "c98855104761c8cc5928aff934ba01af",
          "sha256": "808392d314b207efd5a28ef447c500f2ca007fe7f534495085f35f1f96fa8de8"
        },
        "downloads": -1,
        "filename": "netcdf-flattener-1.0.1b3.tar.gz",
        "has_sig": false,
        "md5_digest": "c98855104761c8cc5928aff934ba01af",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28395,
        "upload_time": "2020-07-22T13:35:18",
        "upload_time_iso_8601": "2020-07-22T13:35:18.827624Z",
        "url": "https://files.pythonhosted.org/packages/19/e0/8312fa34e5d8f003cbc3f10cc2b5cad0963d8c8928980e7f63df1f4f9f11/netcdf-flattener-1.0.1b3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1b4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea4bf47d1fd4f0ddb967c83f264fff23becae7b42d5d2e696712d8e03bfdd287",
          "md5": "6cee5561fe2429cae05020dc7c7ecbf8",
          "sha256": "b33c5c9eb1219ee2b8a83241d5e827dccb8f2b2e8021749dfd5353b85252a299"
        },
        "downloads": -1,
        "filename": "netcdf-flattener-1.0.1b4.tar.gz",
        "has_sig": false,
        "md5_digest": "6cee5561fe2429cae05020dc7c7ecbf8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28705,
        "upload_time": "2020-07-22T13:55:17",
        "upload_time_iso_8601": "2020-07-22T13:55:17.860276Z",
        "url": "https://files.pythonhosted.org/packages/ea/4b/f47d1fd4f0ddb967c83f264fff23becae7b42d5d2e696712d8e03bfdd287/netcdf-flattener-1.0.1b4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1b5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a0210e8a8fd857ae8865a83b1722d0f8f19753a08ef810725ed8c89767db1622",
          "md5": "a3129bb5c2f536219865c19999acac6b",
          "sha256": "b285dde0bde54dfa2abf0e721af4a3599008e867603230eb071b3b22ea899394"
        },
        "downloads": -1,
        "filename": "netcdf-flattener-1.0.1b5.tar.gz",
        "has_sig": false,
        "md5_digest": "a3129bb5c2f536219865c19999acac6b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28708,
        "upload_time": "2020-07-22T14:03:32",
        "upload_time_iso_8601": "2020-07-22T14:03:32.818981Z",
        "url": "https://files.pythonhosted.org/packages/a0/21/0e8a8fd857ae8865a83b1722d0f8f19753a08ef810725ed8c89767db1622/netcdf-flattener-1.0.1b5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1b6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6a2337ad59cddc1a7c663270bdd92744528adb69b9328d850ddd1661a4121438",
          "md5": "16ae06cc1500cc111f5fdfd71a243039",
          "sha256": "c10c3b8d37b943b95e1a6b61ae70d9f5d9fcd71dd731e65fd5b41d1eee2b45d9"
        },
        "downloads": -1,
        "filename": "netcdf-flattener-1.0.1b6.tar.gz",
        "has_sig": false,
        "md5_digest": "16ae06cc1500cc111f5fdfd71a243039",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26724,
        "upload_time": "2020-07-22T14:16:28",
        "upload_time_iso_8601": "2020-07-22T14:16:28.009616Z",
        "url": "https://files.pythonhosted.org/packages/6a/23/37ad59cddc1a7c663270bdd92744528adb69b9328d850ddd1661a4121438/netcdf-flattener-1.0.1b6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1b7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "96cccaf56c8d0dd37233ea4e09e448527707618439eef8fa726b4d1403648781",
          "md5": "f32425a91b7cc453c419604c727f600a",
          "sha256": "e1af1f7cfd573ae632e2e07ff56b78ce6f9ef462d1534643e6985d70dbc43a4f"
        },
        "downloads": -1,
        "filename": "netcdf-flattener-1.0.1b7.tar.gz",
        "has_sig": false,
        "md5_digest": "f32425a91b7cc453c419604c727f600a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26881,
        "upload_time": "2020-07-23T12:27:39",
        "upload_time_iso_8601": "2020-07-23T12:27:39.798145Z",
        "url": "https://files.pythonhosted.org/packages/96/cc/caf56c8d0dd37233ea4e09e448527707618439eef8fa726b4d1403648781/netcdf-flattener-1.0.1b7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "65ebde60f8e5c52f471faf9c77439d019c38d266940f553e5a9af6a20d6afdce",
          "md5": "280c30b68b16912be6c7e7a23efbca83",
          "sha256": "6f415ad04fcb1bcfcec8d708f2dd2dc16e212a464275c772a8ff55ce5bb4848c"
        },
        "downloads": -1,
        "filename": "netcdf-flattener-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "280c30b68b16912be6c7e7a23efbca83",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26851,
        "upload_time": "2020-07-24T13:26:57",
        "upload_time_iso_8601": "2020-07-24T13:26:57.094585Z",
        "url": "https://files.pythonhosted.org/packages/65/eb/de60f8e5c52f471faf9c77439d019c38d266940f553e5a9af6a20d6afdce/netcdf-flattener-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "65ebde60f8e5c52f471faf9c77439d019c38d266940f553e5a9af6a20d6afdce",
        "md5": "280c30b68b16912be6c7e7a23efbca83",
        "sha256": "6f415ad04fcb1bcfcec8d708f2dd2dc16e212a464275c772a8ff55ce5bb4848c"
      },
      "downloads": -1,
      "filename": "netcdf-flattener-1.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "280c30b68b16912be6c7e7a23efbca83",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 26851,
      "upload_time": "2020-07-24T13:26:57",
      "upload_time_iso_8601": "2020-07-24T13:26:57.094585Z",
      "url": "https://files.pythonhosted.org/packages/65/eb/de60f8e5c52f471faf9c77439d019c38d266940f553e5a9af6a20d6afdce/netcdf-flattener-1.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}