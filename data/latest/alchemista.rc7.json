{
  "info": {
    "author": "Gabriel Galli",
    "author_email": "ggabriel96@hotmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Alchemista\n\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n[![codecov](https://codecov.io/gh/ggabriel96/alchemista/branch/main/graph/badge.svg?token=MYXKIH09FJ)](https://codecov.io/gh/ggabriel96/alchemista)\n\nTools to generate Pydantic models from SQLAlchemy models.\n\nStill experimental.\n\n## Installation\n\nAlchemista is [available in PyPI](https://pypi.org/project/alchemista/).\nTo install it with `pip`, run:\n\n\n```shell\npip install alchemista\n```\n\n## Usage\n\nSimply call the `model_from` function with a SQLAlchemy model.\nEach `Column` in its definition will result in an attribute of the generated model via the Pydantic `Field` function.\n\nFor example, a SQLAlchemy model like the following\n\n```python\nfrom sqlalchemy import Column, Integer, String\nfrom sqlalchemy.orm import declarative_base\n\n\nBase = declarative_base()\n\nclass PersonDB(Base):\n    __tablename__ = \"people\"\n\n    id = Column(Integer, primary_key=True)\n    age = Column(Integer, default=0, nullable=False, doc=\"Age in years\")\n    name = Column(String(128), nullable=False, doc=\"Full name\")\n```\n\ncould have a generated Pydantic model via\n\n```python\nfrom alchemista import model_from\n\nPerson = model_from(PersonDB)\n```\n\nand would result in a Pydantic model equivalent to\n\n```python\nfrom pydantic import BaseModel, Field\n\n\nclass Person(BaseModel):\n    id: int\n    age: int = Field(0, description=\"Age in years\")\n    name: str = Field(..., max_length=128, description=\"Full name\")\n\n    class Config:\n        orm_mode = True\n```\n\nNote that the string length from the column definition was sufficient to add a `max_length` constraint.\nAdditionally, by default, the generated model will have `orm_mode=True`.\nThat can be customized via the `__config__` keyword argument.\n\nThere is also an `exclude` keyword argument that accepts a set of field names to _not_ include in the generated model,\nand an `include` keyword argument accepts a set of field names to _do_ include in the generated model.\nHowever, they are mutually exclusive and cannot be used together.\n\nThis example is available in a short executable form in the [`examples/`](examples/) directory.\n\n## `Field` arguments and `info`\n\nCurrently, the type, default value (either scalar or callable), and the description (from the `doc` attribute) are\nextracted directly from the `Column` definition.\nHowever, except for the type, all of them can be overridden via the `info` dictionary attribute.\nAll other custom arguments to the `Field` function are specified there too.\nThe supported keys are listed in `alchemista.field.Info`.\n\n**Everything specified in `info` is preferred from what has been extracted from `Column`**.\nThis means that the default value and the description can be **overridden** if so desired.\nAlso, similarly to using Pydantic directly, `default` and `default_factory` are mutually-exclusive,\nso they cannot be used together.\nUse `default_factory` if the default value comes from calling a function (without any arguments).\n\nFor example, in the case above,\n\n```python\nname = Column(String(128), nullable=False, doc=\"Full name\", info=dict(description=None, max_length=64))\n```\n\nwould instead result in\n\n```python\nname: str = Field(..., max_length=64)\n```\n\n## `fields_from` and `model_from`\n\nThe `fields_from` function is the function that actually inspects the SQLAlchemy model and builds a dictionary\n    in a format that can be used to generate a Pydantic model.\nSo `model_from` is just a shortcut for calling `fields_from` and then `pydantic.create_model`.\nThe model name that `model_from` sets is `db_model.__name__`.\n\nIf desired, or extra control is needed, `pydantic.create_model` can be used directly, in conjunction with `fields_from`.\nThis allows the customization of the name of the model that will be created and the specification of other\n    `create_model` arguments, like `__base__` and `__validators__` (`model_from` currently only accepts `__config__`).\n\nFor example:\n\n```python\nfrom alchemista import fields_from\nfrom pydantic import create_model\n\n\nMyModel = create_model(\"MyModel\", **fields_from(DBModel))\n```\n\n## `transform`\n\nBoth `fields_from` and `model_from` have a `transform` argument.\nIt is a callable used to transform the fields before generating a Pydantic model.\nThe provided transformation functions are in the `func` module.\nBy default, the `transform` argument is set to `func.unchanged`, which, as the name implies, does nothing.\n\nThe other provided transformation function is `func.nonify`, which makes all fields optional (if they weren't already)\n    and nullable and sets the default value to `None`.\nThis is useful when some kind of \"input model\" is desired.\nFor example, the database model might have an auto-generated primary key, and some other columns with default values.\nWhen updating an entity of this model, one wouldn't want to receive the primary key as an update candidate (which can\n    be solved using the `exclude` argument) and probably wouldn't want the fields with default values to actually have\n    these values, since the update is meant to change only what the user asked to update.\n\nFor example:\n\n```python\nfrom sqlalchemy import Column, Integer, String\nfrom sqlalchemy.orm import declarative_base\n\nfrom alchemista import model_from\nfrom alchemista.func import nonify\n\n\nBase = declarative_base()\n\nclass PersonDB(Base):\n    __tablename__ = \"people\"\n\n    id = Column(Integer, primary_key=True)\n    age = Column(Integer, default=0, nullable=False, doc=\"Age in years\")\n    name = Column(String(128), nullable=False, doc=\"Full name\")\n\n\nPersonInput = model_from(PersonDB, exclude={\"id\"}, transform=nonify)\n```\n\nThe model `PersonInput` is equivalent to the hand-written version below:\n\n```python\nfrom typing import Optional\n\nfrom pydantic import BaseModel, Field\n\n\nclass PersonInput(BaseModel):\n    age: Optional[int] = Field(None, description=\"Age in years\")\n    name: Optional[str] = Field(None, max_length=128, description=\"Full name\")\n\n    class Config:\n        orm_mode = True\n```\n\nNote that both `age` and `name` weren't originally nullable (`Optional`, in Python) and the name was required (age\n    wasn't because it has a default value).\nNow, both fields are nullable and their default value is `None`.\n\n### User-defined transformations\n\nYou can also create your own transformation functions.\nThe expected signature is as follows:\n\n```python\nfrom typing import Tuple\n\nfrom pydantic.fields import FieldInfo\n\ndef transformation(name: str, python_type: type, field: FieldInfo) -> Tuple[type, FieldInfo]:\n    pass\n```\n\nWhere `name` is the name of the field currently being created, `python_type` is its Python type, and `field` is its full\n    Pydantic field specification.\nThe return type is a tuple of the Python type and the field specification.\nThese two can be changed freely (the name can't).\n\n## License\n\nThis project is licensed under the terms of the MIT license.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ggabriel96/alchemista",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "alchemista",
    "package_url": "https://pypi.org/project/alchemista/",
    "platform": "",
    "project_url": "https://pypi.org/project/alchemista/",
    "project_urls": {
      "Homepage": "https://github.com/ggabriel96/alchemista",
      "Repository": "https://github.com/ggabriel96/alchemista"
    },
    "release_url": "https://pypi.org/project/alchemista/0.3.0/",
    "requires_dist": [
      "Deprecated (>=1.2.12,<2.0.0)",
      "SQLAlchemy (>=1.4.14,<2.0.0)",
      "pydantic (>=1.8.1,<2.0.0)"
    ],
    "requires_python": ">=3.8,<4.0",
    "summary": "Tools to convert SQLAlchemy models to Pydantic models",
    "version": "0.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10509181,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2012fffe2caf6032290ec5e0c6fd8c0000c00e9f6ffc71559c20e6fd47dcf338",
          "md5": "3b8ccda2cf8916190d4e771683db290f",
          "sha256": "4447dc49a2f425f631adb5b62ba22509b00da875018efae5a29a387bb7378df8"
        },
        "downloads": -1,
        "filename": "alchemista-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3b8ccda2cf8916190d4e771683db290f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.2,<4.0.0",
        "size": 4589,
        "upload_time": "2021-05-12T02:51:13",
        "upload_time_iso_8601": "2021-05-12T02:51:13.782802Z",
        "url": "https://files.pythonhosted.org/packages/20/12/fffe2caf6032290ec5e0c6fd8c0000c00e9f6ffc71559c20e6fd47dcf338/alchemista-0.1.0-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": "Had an error in LICENSE"
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "78e56fd571ff7ae035786082ae62918ce8d7f3733cc871c6cecfb368532aed16",
          "md5": "b6334852851a6e1be7aaaf2ffd51e7f4",
          "sha256": "7c760f4b80e486756ba19193d465f052f96be597174f052e23d1f6065ef1301f"
        },
        "downloads": -1,
        "filename": "alchemista-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b6334852851a6e1be7aaaf2ffd51e7f4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.2,<4.0.0",
        "size": 4219,
        "upload_time": "2021-05-12T02:51:14",
        "upload_time_iso_8601": "2021-05-12T02:51:14.939606Z",
        "url": "https://files.pythonhosted.org/packages/78/e5/6fd571ff7ae035786082ae62918ce8d7f3733cc871c6cecfb368532aed16/alchemista-0.1.0.tar.gz",
        "yanked": true,
        "yanked_reason": "Had an error in LICENSE"
      }
    ],
    "0.1.0.post1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1540d5325180871d26c7a2195bbc42a50591216f162e13cffb2bce02307bdb5a",
          "md5": "5140cf2855f508ba26234f4700b917da",
          "sha256": "7618dde30068bd9d0cd6aaa9227acf034c0f58f251147aa1f3164761d5734a7e"
        },
        "downloads": -1,
        "filename": "alchemista-0.1.0.post1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5140cf2855f508ba26234f4700b917da",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.2,<4.0.0",
        "size": 4676,
        "upload_time": "2021-05-12T03:50:56",
        "upload_time_iso_8601": "2021-05-12T03:50:56.977365Z",
        "url": "https://files.pythonhosted.org/packages/15/40/d5325180871d26c7a2195bbc42a50591216f162e13cffb2bce02307bdb5a/alchemista-0.1.0.post1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "774f7d40e94ab2c1c5c14cd275bdc35c56316ce1560c5070a4b8c02206d095b7",
          "md5": "a9e06a9d0e66c15d5ad668cde2f427fc",
          "sha256": "73112ab708690542072d44cdaa5db6b0bd80837e125a3ae2fa59e73f20e80275"
        },
        "downloads": -1,
        "filename": "alchemista-0.1.0.post1.tar.gz",
        "has_sig": false,
        "md5_digest": "a9e06a9d0e66c15d5ad668cde2f427fc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.2,<4.0.0",
        "size": 4244,
        "upload_time": "2021-05-12T03:50:58",
        "upload_time_iso_8601": "2021-05-12T03:50:58.065671Z",
        "url": "https://files.pythonhosted.org/packages/77/4f/7d40e94ab2c1c5c14cd275bdc35c56316ce1560c5070a4b8c02206d095b7/alchemista-0.1.0.post1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0.post2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b24ec0301e3bbb63b96a01f989ca24558c2e3b7aa9500fbfc6803ba535591fe0",
          "md5": "f6fecedae19ddd2be19c2559d0749e79",
          "sha256": "931218ba53a0c9f50b791e1b39a9152bb5e251a99a7b2c1545959a3aae15201f"
        },
        "downloads": -1,
        "filename": "alchemista-0.1.0.post2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f6fecedae19ddd2be19c2559d0749e79",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.2,<4.0.0",
        "size": 4723,
        "upload_time": "2021-05-13T01:05:57",
        "upload_time_iso_8601": "2021-05-13T01:05:57.593858Z",
        "url": "https://files.pythonhosted.org/packages/b2/4e/c0301e3bbb63b96a01f989ca24558c2e3b7aa9500fbfc6803ba535591fe0/alchemista-0.1.0.post2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "29dbb952f36e90546eb5cd318debaa6d86de897037f10047159aaa6e7eefc724",
          "md5": "a5bfad83b46526a5d9ccdc6f8186522e",
          "sha256": "49199670fab53fe018019ce72c7aa199b188aeea88e1e8db15c9f4a73c54097f"
        },
        "downloads": -1,
        "filename": "alchemista-0.1.0.post2.tar.gz",
        "has_sig": false,
        "md5_digest": "a5bfad83b46526a5d9ccdc6f8186522e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.2,<4.0.0",
        "size": 4302,
        "upload_time": "2021-05-13T01:05:58",
        "upload_time_iso_8601": "2021-05-13T01:05:58.636030Z",
        "url": "https://files.pythonhosted.org/packages/29/db/b952f36e90546eb5cd318debaa6d86de897037f10047159aaa6e7eefc724/alchemista-0.1.0.post2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ba3fdc172e0e49ae3c71e275655ef1fe5884273cb0952b39b825eefef47c5fb",
          "md5": "59ffabc641c7b94fd42d36be8e0607e3",
          "sha256": "e97fde3c05eea3d482d9d586a1c6cd570dafb5c5994b75e66bca876819c941bf"
        },
        "downloads": -1,
        "filename": "alchemista-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "59ffabc641c7b94fd42d36be8e0607e3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.2,<4.0.0",
        "size": 5561,
        "upload_time": "2021-05-16T23:09:59",
        "upload_time_iso_8601": "2021-05-16T23:09:59.871244Z",
        "url": "https://files.pythonhosted.org/packages/0b/a3/fdc172e0e49ae3c71e275655ef1fe5884273cb0952b39b825eefef47c5fb/alchemista-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ae559c565cbfe172d9820aed3f87ec30c551f8f5b6b70a9cf01fb66d3721f9b7",
          "md5": "bdda5d3393dd744ffa53de5738e57743",
          "sha256": "3d538f1d7968fec82f5c1a716c956f7188cd9d42ebd37ce84d086900b2ef832d"
        },
        "downloads": -1,
        "filename": "alchemista-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "bdda5d3393dd744ffa53de5738e57743",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.2,<4.0.0",
        "size": 5371,
        "upload_time": "2021-05-16T23:10:00",
        "upload_time_iso_8601": "2021-05-16T23:10:00.728125Z",
        "url": "https://files.pythonhosted.org/packages/ae/55/9c565cbfe172d9820aed3f87ec30c551f8f5b6b70a9cf01fb66d3721f9b7/alchemista-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d8861ae7d3d6c301cf2a3e4c7710c416d0207f64cecdbe6e4822ccd77de2c92e",
          "md5": "221dcd40d29ef60f0480335f737f76f0",
          "sha256": "d7e96ea7a45845bdd9d4278a5793a3ecabe5ac149096becef8f4abb509954abc"
        },
        "downloads": -1,
        "filename": "alchemista-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "221dcd40d29ef60f0480335f737f76f0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.2,<4.0.0",
        "size": 6567,
        "upload_time": "2021-05-23T00:15:09",
        "upload_time_iso_8601": "2021-05-23T00:15:09.661143Z",
        "url": "https://files.pythonhosted.org/packages/d8/86/1ae7d3d6c301cf2a3e4c7710c416d0207f64cecdbe6e4822ccd77de2c92e/alchemista-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "54cfc0ba14de656d499fd21ed87164786530e2b85a7adea9284f2a6b226cb462",
          "md5": "9812941135344fae3e342e2653d6f8f9",
          "sha256": "cf487da9a49fa2c18887581a5b3343558b344be6d169b85a4f8cdd1315ca24ba"
        },
        "downloads": -1,
        "filename": "alchemista-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9812941135344fae3e342e2653d6f8f9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.2,<4.0.0",
        "size": 5765,
        "upload_time": "2021-05-23T00:15:10",
        "upload_time_iso_8601": "2021-05-23T00:15:10.946101Z",
        "url": "https://files.pythonhosted.org/packages/54/cf/c0ba14de656d499fd21ed87164786530e2b85a7adea9284f2a6b226cb462/alchemista-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "16be2aa7be12f173eb9a13337fc2d6052ba17a41cd0d4b5c32464f90a2de930f",
          "md5": "1099e0fdf38cd626a2be396d599bbd50",
          "sha256": "35cb726b3050f5bdbc9628b9c48e371b2200ece3bea317535a1d611e3bad9541"
        },
        "downloads": -1,
        "filename": "alchemista-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1099e0fdf38cd626a2be396d599bbd50",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.2,<4.0.0",
        "size": 6898,
        "upload_time": "2021-05-30T01:18:52",
        "upload_time_iso_8601": "2021-05-30T01:18:52.679186Z",
        "url": "https://files.pythonhosted.org/packages/16/be/2aa7be12f173eb9a13337fc2d6052ba17a41cd0d4b5c32464f90a2de930f/alchemista-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "44b0b203b7642925792a9d7d555138edbeb4bbb5e920289e8c78c2e72281ad5b",
          "md5": "1a56aa1565aa814ba4d70db9301b3497",
          "sha256": "1d89d01a3720eb77b5f4e0057be09305169536dfc4f6023286170200c8ce67ca"
        },
        "downloads": -1,
        "filename": "alchemista-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1a56aa1565aa814ba4d70db9301b3497",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.2,<4.0.0",
        "size": 6600,
        "upload_time": "2021-05-30T01:18:53",
        "upload_time_iso_8601": "2021-05-30T01:18:53.830020Z",
        "url": "https://files.pythonhosted.org/packages/44/b0/b203b7642925792a9d7d555138edbeb4bbb5e920289e8c78c2e72281ad5b/alchemista-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2987324ba589dfe9ee09424aff900736f972bfd9ec5e42f1ca47051cd900988f",
          "md5": "922ae06ea6d028af8d91401355c68a0a",
          "sha256": "655176386261f8c06552977e35c0efdf1bb61e25372917f1bb5e765908cbd0af"
        },
        "downloads": -1,
        "filename": "alchemista-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "922ae06ea6d028af8d91401355c68a0a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 8480,
        "upload_time": "2021-05-30T02:26:00",
        "upload_time_iso_8601": "2021-05-30T02:26:00.456774Z",
        "url": "https://files.pythonhosted.org/packages/29/87/324ba589dfe9ee09424aff900736f972bfd9ec5e42f1ca47051cd900988f/alchemista-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa8c631aa6fcf7bf81a76e4288bc571e36af4b696b9d31a9edc842c6565638cf",
          "md5": "4189e866a1e29c7c453bb9b1fd76575c",
          "sha256": "8b08e5f6597f1ca108aff4bffba050d213ebab52c96642078fa155442948f17d"
        },
        "downloads": -1,
        "filename": "alchemista-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4189e866a1e29c7c453bb9b1fd76575c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 9447,
        "upload_time": "2021-05-30T02:26:01",
        "upload_time_iso_8601": "2021-05-30T02:26:01.313170Z",
        "url": "https://files.pythonhosted.org/packages/aa/8c/631aa6fcf7bf81a76e4288bc571e36af4b696b9d31a9edc842c6565638cf/alchemista-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2987324ba589dfe9ee09424aff900736f972bfd9ec5e42f1ca47051cd900988f",
        "md5": "922ae06ea6d028af8d91401355c68a0a",
        "sha256": "655176386261f8c06552977e35c0efdf1bb61e25372917f1bb5e765908cbd0af"
      },
      "downloads": -1,
      "filename": "alchemista-0.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "922ae06ea6d028af8d91401355c68a0a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<4.0",
      "size": 8480,
      "upload_time": "2021-05-30T02:26:00",
      "upload_time_iso_8601": "2021-05-30T02:26:00.456774Z",
      "url": "https://files.pythonhosted.org/packages/29/87/324ba589dfe9ee09424aff900736f972bfd9ec5e42f1ca47051cd900988f/alchemista-0.3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "aa8c631aa6fcf7bf81a76e4288bc571e36af4b696b9d31a9edc842c6565638cf",
        "md5": "4189e866a1e29c7c453bb9b1fd76575c",
        "sha256": "8b08e5f6597f1ca108aff4bffba050d213ebab52c96642078fa155442948f17d"
      },
      "downloads": -1,
      "filename": "alchemista-0.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "4189e866a1e29c7c453bb9b1fd76575c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<4.0",
      "size": 9447,
      "upload_time": "2021-05-30T02:26:01",
      "upload_time_iso_8601": "2021-05-30T02:26:01.313170Z",
      "url": "https://files.pythonhosted.org/packages/aa/8c/631aa6fcf7bf81a76e4288bc571e36af4b696b9d31a9edc842c6565638cf/alchemista-0.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}