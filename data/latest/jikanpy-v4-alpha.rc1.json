{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# jikan-api-client\n\nNOTE: Docs are partly autogenerated -- this is all placeholder for now\n\nA client library for accessing Jikan API\n\n## Usage\n\nFirst, create a client:\n\n```python\nfrom jikan_api_client import Client\n\nclient = Client(base_url=\"https://api.example.com\")\n```\n\nNow call your endpoint and use your models:\n\n```python\nfrom jikan_api_client.models import MyDataModel\nfrom jikan_api_client.api.my_tag import get_my_data_model\nfrom jikan_api_client.types import Response\n\nmy_data: MyDataModel = get_my_data_model.sync(client=client)\n# or if you need more info (e.g. status_code)\nresponse: Response[MyDataModel] = get_my_data_model.sync_detailed(client=client)\n```\n\nOr do the same thing with an async version:\n\n```python\nfrom jikan_api_client.models import MyDataModel\nfrom jikan_api_client.api.my_tag import get_my_data_model\nfrom jikan_api_client.types import Response\n\nmy_data: MyDataModel = await get_my_data_model.asyncio(client=client)\nresponse: Response[MyDataModel] = await get_my_data_model.asyncio_detailed(client=client)\n```\n\nThings to know:\n\n1. Every path/method combo becomes a Python module with four functions:\n\n   1. `sync`: Blocking request that returns parsed data (if successful) or `None`\n   1. `sync_detailed`: Blocking request that always returns a `Request`, optionally with `parsed` set if the request was successful.\n   1. `asyncio`: Like `sync` but the async instead of blocking\n   1. `asyncio_detailed`: Like `sync_detailed` by async instead of blocking\n\n1. All path/query params, and bodies become method arguments.\n1. Any endpoint which did not have a tag will be in `jikan_api_client.api.default`\n\n## Building / publishing this Client\n\nThis project uses [Poetry](https://python-poetry.org/) to manage dependencies and packaging. Here are the basics:\n\n1. Update the metadata in pyproject.toml (e.g. authors, version)\n1. If you're using a private repository, configure it with Poetry\n   1. `poetry config repositories.<your-repository-name> <url-to-your-repository>`\n   1. `poetry config http-basic.<your-repository-name> <username> <password>`\n1. Publish the client with `poetry publish --build -r <your-repository-name>` or, if for public PyPI, just `poetry publish --build`\n\nIf you want to install this client into another project without publishing it (e.g. for development) then:\n\n1. If that project **is using Poetry**, you can simply do `poetry add <path-to-this-client>` from that project\n1. If that project is not using Poetry:\n   1. Build a wheel with `poetry build -f wheel`\n   1. Install that wheel from the other project `pip install <path-to-wheel>`\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "jikanpy-v4-alpha",
    "package_url": "https://pypi.org/project/jikanpy-v4-alpha/",
    "platform": null,
    "project_url": "https://pypi.org/project/jikanpy-v4-alpha/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/jikanpy-v4-alpha/0.0.1/",
    "requires_dist": [
      "httpx (>=0.15.4,<0.23.0)",
      "attrs (>=21.3.0)",
      "python-dateutil (>=2.8.0,<3.0.0)",
      "black (>=20.8b1); extra == \"testing\"",
      "mypy (>=0.782); extra == \"testing\"",
      "pytest (>=5.4.2); extra == \"testing\"",
      "flake8 (>=4.0.0); extra == \"testing\""
    ],
    "requires_python": ">=3.7,<4.0",
    "summary": "A client library for accessing Jikan API",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13279118,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a2ba9f43299eb9ce2406270b10982c57f6d517039ecd7d5f26062e0425fccbf8",
          "md5": "ef3b82e14fc81491900a44f6ac57dc6f",
          "sha256": "70e48a4af26cab6c7141408274293848c7d01634a53ac6afd0b8d9c46a11dabe"
        },
        "downloads": -1,
        "filename": "jikanpy_v4_alpha-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ef3b82e14fc81491900a44f6ac57dc6f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 304304,
        "upload_time": "2022-03-24T06:40:01",
        "upload_time_iso_8601": "2022-03-24T06:40:01.566083Z",
        "url": "https://files.pythonhosted.org/packages/a2/ba/9f43299eb9ce2406270b10982c57f6d517039ecd7d5f26062e0425fccbf8/jikanpy_v4_alpha-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "75f751245126dd097a42bf88ff5265c859594333d3f695107e4b9c2c23c09a27",
          "md5": "cdeeeedada29191d75b0be3316315d33",
          "sha256": "e9ec43865a31e40c08bbf005572ffad53556e2f45858d953b531785cd467bac3"
        },
        "downloads": -1,
        "filename": "jikanpy-v4-alpha-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "cdeeeedada29191d75b0be3316315d33",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 76314,
        "upload_time": "2022-03-24T06:39:59",
        "upload_time_iso_8601": "2022-03-24T06:39:59.367117Z",
        "url": "https://files.pythonhosted.org/packages/75/f7/51245126dd097a42bf88ff5265c859594333d3f695107e4b9c2c23c09a27/jikanpy-v4-alpha-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a2ba9f43299eb9ce2406270b10982c57f6d517039ecd7d5f26062e0425fccbf8",
        "md5": "ef3b82e14fc81491900a44f6ac57dc6f",
        "sha256": "70e48a4af26cab6c7141408274293848c7d01634a53ac6afd0b8d9c46a11dabe"
      },
      "downloads": -1,
      "filename": "jikanpy_v4_alpha-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ef3b82e14fc81491900a44f6ac57dc6f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<4.0",
      "size": 304304,
      "upload_time": "2022-03-24T06:40:01",
      "upload_time_iso_8601": "2022-03-24T06:40:01.566083Z",
      "url": "https://files.pythonhosted.org/packages/a2/ba/9f43299eb9ce2406270b10982c57f6d517039ecd7d5f26062e0425fccbf8/jikanpy_v4_alpha-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "75f751245126dd097a42bf88ff5265c859594333d3f695107e4b9c2c23c09a27",
        "md5": "cdeeeedada29191d75b0be3316315d33",
        "sha256": "e9ec43865a31e40c08bbf005572ffad53556e2f45858d953b531785cd467bac3"
      },
      "downloads": -1,
      "filename": "jikanpy-v4-alpha-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "cdeeeedada29191d75b0be3316315d33",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7,<4.0",
      "size": 76314,
      "upload_time": "2022-03-24T06:39:59",
      "upload_time_iso_8601": "2022-03-24T06:39:59.367117Z",
      "url": "https://files.pythonhosted.org/packages/75/f7/51245126dd097a42bf88ff5265c859594333d3f695107e4b9c2c23c09a27/jikanpy-v4-alpha-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}