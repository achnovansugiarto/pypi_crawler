{
  "info": {
    "author": "zoran ilievski",
    "author_email": "pythonic@clientuser.net",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "<h1 align=\"center\">ec2 objects (pip3 install ec2objects)</h1>\n<p align=\"left\"><b>everyone:</b> I wish, for once, to just have a simple object oriented experience with the api.</p>\n<p align=\"left\"><b>ec2objects:</b> </p>\n\n<p align=\"center\">\n<a href=\"https://github.com/zorani/aws-ec2-objects\"><img src=\"https://img.shields.io/github/forks/zorani/aws-ec2-objects.svg?style=social&label=Fork\"></a>\n<a href=\"https://github.com/zorani/aws-ec2-objects\"><img src=\"https://img.shields.io/github/stars/zorani/aws-ec2-objects.svg?style=social&label=Star\"></a>\n<a href=\"https://github.com/zorani/aws-ec2-objects\"><img src=\"https://img.shields.io/github/watchers/zorani/aws-ec2-objects.svg?style=social&label=Watch\"></a>\n</p>\n\nPlease visit <a href=\"https://github.com/zorani/aws-ec2-objects\">GitHub</a> page for documentation that has navigation that works.\n\n# Table of Contents\n\n- [How to install](#how-to-install)\n- [Configurations](#configurations)\n- [Regions](#regions)\n\t- [Region Manager](#region-manager)\n\t\t- [Retrieve All Regions](#retrieve-all-regions)\n\t\t- [Retrieve Regions Enabled For Your Account](#retrieve-regions-enabled-for-your-account)\n\t- [Region Object](#region-object)\n- [Images](#images)\n\t- [Image Manager](#image-manager)\n\t\t- [Retrieve Image By ImageId](#retrieve-image-by-imageid)\n\t\t- [Retrieve Ubuntu Images](#retrieve-ubuntu-images)\n\t- [Image Object](#image-object)\n- [SSH Key Pairs](#ssh-key-pairs)\n   - [KeyPair Manager](#keypair-manager)\n\t   - [Retrieve Keypairs](#retrieve-keypairs)\n\t   - [Retrieve Keypair By Name](#retrieve-keypair-by-name)\n\t   - [Retrieve Keypair By ID](#retrieve-keypair-by-id)\n\t   - [Retrieve Keypair By Fingerprint](#retrieve-keypair-by-fingerpring)\n\t   - [Retrieve Keypairs By Tag Keyname](#retrieve-keypairs-by-tag-keyname)\n\t   - [Retrieve Keypairs By Tag](#retrieve-keypairs-by-tag)\n\t   - [Upload Keypair](#upload-keypair)\n\t- [KeyPair Object](#keypair-object)\n\t  - [Delete Keypair](#delete-keypair)\n# How to install\n\nHere are your options.\n\n## Install from pypi repository\n\nThe most popular way is to install the latest package available on pypi.\n\nYou can install ec2objects using **pip3**\n\n    pip3 install -U ec2objects\n\nYou can uninstall if you like using,\n\n    pip3 uninstall ec2objects\n\n## Install from the cloned git hub repo\n\nThere are a few ways to install this python package from a clone of its github repo.\nCheck out a copy and try the following...\n\n### Build a .tar.gz install package\n\nFrom the root of the repo build a repo, and check the repo.\n\n    python3 setup.py sdist\n    twine check dist/*\n\nCheck the newly created dist directory for newly created .tar.gz files.\nThis is your .tar.gz package and you can install using...\n\n    pip3 install ./dist/ec2objects-0.0.17.tar.gz\n\nYou can still uninstall using the same commands,\n\n    pip3 uninstall ec2objects\n\n### Install using the setup.py file\n\n!WARNING! Install does not track which files, and where they are placed.\nSo, you need to keep a record of there python3 does this.\n\nThis is how... from the github repo root directory.\n\n    sudo python3 setup.py install --record files.txt\n\nYou can uninstall using by playing back that files.txt file,\n\n    sudo xargs rm -rf < files.txt\n\n### Local interactive install\n\nUsing this method you can modify this packages code and have changes immediately available.\nPerfect for if you want to tinker with the library, poke around and contribute to the project.\n\nFrom the cloned repository root directory.\n\n    pip3 install -e ./\n\nYou can uninstall using the usual command,\n\n    pip3 uninstall ec2objects\n\n**[⬆ back to top](#table-of-contents)**\n\n# Configurations\n## BOTO 3\nec2objects uses [boto3](https://boto3.amazonaws.com/v1/documentation/api/latest/guide/quickstart.html) to interact with the amazon api.\nDecided to go with boto3 as it gives nice json responses instead of the xml mess direct interaction with the api gives.\n\nYou can find further token requirements and details at the above link.\n\nHere is are the quick start requirements for ec2objects.\n\n## Token: Required\n\nSet the AWS_ACCESS_KEY_ID, and the AWS_SECRET_ACCESS_KEY environment variables with your amazon aws access credentials.\n\n    export AWS_ACCESS_KEY_ID='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'\n\n    export AWS_SECRET_ACCESS_KEY='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'\n\n## Default Region: Required\n\n\nPlease set the AWS_DEFAULT_REGION environment variable to a region you know you  have enabled for your credentials.\n\nFor example:\n\n    export AWS_DEFAULT_REGION='us-east-1'\n\nFor relevant commands you can specify a completely different region if you need to act on a different region.\n\n**[⬆ back to top](#table-of-contents)**\n\n\n# Regions\n\n\nAn [AWS Region](https://docs.aws.amazon.com/general/latest/gr/rande.html#region-names-codes) is a collection of AWS resources in a geographic area. \n\nEach AWS Region is isolated and independent of the other Regions. \n\nRegions provide fault tolerance, stability, and resilience, and can also reduce latency. They enable you to create redundant resources that remain available and unaffected by a Regional outage.\n\nImport the ec2object Region and RegionManger to interact with Regions.\n\n```python\nfrom ec2objects import Region, RegionManager\n```\n## Region Manager\n\nCreate a region manager.\n```python\nregion_manager = RegionManager()\n```\n### Retrieve All Regions\nRetrieve a list of region objects.\n```python\nlist_of_all_region_objects = region_manager.retrieve_all_regions()\n```\n\n### Retrieve Regions Enabled For Your Account\nRetrieve a list of region objects enabled for your account.\n```python\nlist_of_enabled_region_objects = region_manager.retrieve_regions_enabled_for_my_account()\n```\n\n## Region Object\n\nRegion objects contains an attributes data class with the standard ec2 [region attributes](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_Region.html).\n\nRegion objects also contain a list of availability zones data classes for that region.\n\n```python\nclass Region:\n    def __init__(self):\n        self.attributes = RegionAttributes()\n        self.availabilityzones = []\n        ...\n```\n```python\n@dataclass\nclass RegionAttributes:\n    RegionName: str = None\n    Endpoint: str = None\n    OptInStatus: str = None\n```\n\n```python\n@dataclass\nclass AvailabilityZones:\n    State: str = None\n    OptInStatus: str = None\n    Messages: list = field(default_factory=list)\n    RegionName: str = None\n    ZoneName: str = None\n    ZoneId: str = None\n    GroupName: str = None\n    NetworkBorderGroup: str = None\n    ZoneType: str = None\n    ParentZoneName: str = None\n    ParentZoneId: str = None\n```\n**[⬆ back to top](#table-of-contents)**\n\n# Images\nAn Amazon Machine Image ([AMI User Guide](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AMIs.html)) provides the information required to launch an instance. \n\n[AMI BOTO3 API GUIDE](https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/ec2.html#image) details at this link.\n\nAn AMI includes the following:\n\n-   One or more Amazon Elastic Block Store (Amazon EBS) snapshots, or, for instance-store-backed AMIs, a template for the root volume of the instance (for example, an operating system, an application server, and applications).\n    \n-   Launch permissions that control which AWS accounts can use the AMI to launch instances.\n    \n-   A block device mapping that specifies the volumes to attach to the instance when it's launched.\n\nImport the ec2object Image and ImageManger to interact with Regions.\n```python\nfrom ec2objects import Image, ImageManager\n```\n## Image Manager\nCreate an image manager.\n```python\nimage_manager = ImageManager()\n```\n### Retrieve Image By ImageId\nRetrieve an image object by ImageId.\n```python\nimage_object = image_manager.retrieve_image(\"ami-fd534b97\")\n```\n\n\n### Retrieve Ubuntu Images\n\nOkay, so the AWS documentation is a bit difficult.\nGoing to break it down and try to extract and common sense.. thanks aws.\n\nThe following methods retrieve Ubuntu images that have...\n\nArchitechture:'x86_64' or 'arm64'\nImageType:'machine'\n\nhvm-ssd: **Important** What does this mean?\nThe instance created from this image(an hvm-ssd) will have small root storage,\n/dev/sda1, to hold the OS.\n/dev/sda1 is ephemeral storage is the **volatile temporary storage attached to your instances** which is only present during the running lifetime of the instance. Data will be available on restart but will be destroyed on instance termination.\n\nFor longer term data storage you do need to attach an existing Elastic Block Storage (EBS) device for or create and attach new EBS and attach that.\n\n...and HVM?\n\nHVM (known as **Hardware Virtual Machine**) is the type of instance that mimics bare-metal server setup which provides better hardware isolation. With this instance type, the OS can run directly on top of the Virtual Machine without additional configuration making it to look like it is running on a real physical server.\n\n#### Retrieve All x86_64 Ubuntu hvm-ssd machine images\n\nRetrieve a list of image objects.\n\nArgument 'name' is optional and can be excluded entirely. \nYou can request individual Ubuntu releases using the first string of the release code names found at https://wiki.ubuntu.com/Releases \ne.g. name=\"focal\", name=\"bionic\", name=\"trusty\"\n        \n```python\nlist_of_image_objects =image_manager.retrieve_all_ubuntu_x86_64_machine_images_hvm_ssd(self, name=\"\")\n```\n\n#### Retrieve All arm64 Ubuntu hvm-ssd machine images\n\nRetrieve a list of image objects.\n\nArgument 'name' is optional and can be excluded entirely. \nYou can request individual Ubuntu releases using the first string of the release code names found at https://wiki.ubuntu.com/Releases \ne.g. name=\"focal\", name=\"bionic\", name=\"trusty\"\n\n```python\nlist_of_image_objects =image_manager.retrieve_all_ubuntu_arm64_machine_images_hvm_ssd(self, name=\"\")\n```\n\n**[⬆ back to top](#table-of-contents)**\n## Image Object\n\nImage objects contains an attributes data class with the standard ec2 [image attributes](https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/ec2.html#EC2.Client.describe_images), descriptions available at this link.\n\nEach object also contains a list of ebsblockdevices, and a list of virtuablockdevices - empty if none exists.\n\nebsblockdevices  holds a list of BlockDeviceMappingEBS if they exist.\n\nvirtualblockdevices holds a list of BlockDeviceMappingVirtual if they exist.\n\n```python\nclass Image:\n    def __init__(self):\n        self.attributes = ImageAttributes()\n        self.ebsblockdevices = []\n        self.virtualblockdevices = []\n```\n```python\n@dataclass\nclass ImageAttributes:\n    Architecture: str = None\n    CreationDate: str = None\n    ImageId: str = None\n    ImageLocation: str = None\n    ImageType: str = None\n    Public: bool = None\n    KernelId: str = None\n    OwnerId: str = None\n    Platform: str = None\n    PlatformDetails: str = None\n    UsageOperation: str = None\n    RamdiskId: str = None\n    State: str = None\n    Description: str = None\n    EnaSupport: bool = None\n    Hypervisor: str = None\n    ImageOwnerAlias: str = None\n    Name: str = None\n    RootDeviceName: str = None\n    RootDeviceType: str = None\n    SriovNetSupport: str = None\n    VirtualizationType: str = None\n    BootMode: str = None\n    DepricationTime: str = None\n```\n\n```python\n@dataclass\nclass BlockDeviceMappingEBS:\n    DeviceName: str = None\n    SnapshotId: str = None\n    VolumeSize: str = None\n    DeleteOnTermination: bool = None\n    VolumeType: str = None\n    Encrypted: bool = None\n```\n```python\n@dataclass\nclass BlockDeviceMappingVirtual:\n    DeviceName: str = None\n    VirtualName: str = None\n```\n**[⬆ back to top](#table-of-contents)**\n\n# SSH Key Pairs\nA [key pair](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html), consisting of a public key and a private key, is a set of security credentials that you use to prove your identity when connecting to an EC2 instance.\nImport the ec2object KeyPair and KeyPairManger to interact with SSH Key Pairs.\n```python\nfrom ec2objects import KeyPair, KeyPairManager\n```\n## KeyPair Manager\nCreate a keypair manager.\n```python\nkeypair_manager = KeyPairManager()\n```\n### Retrieve Keypairs\nRetrieve all of your keypairs.\n```python\nlist_of_keypair_objects=keypair_manager.retrieve_keypairs()\n```\n\n### Retrieve Keypair By Name\nRetrieve all of your keypairs by keypair name.\nAWS keypair names are unique.\n\n```python\nlist_of_keypair_objects=keypair_manager.retrieve_keypair_by_name(str:name)\n```\n### Retrieve Keypair By ID\nRetrieve all of your keypairs by keypair ID.\n\n```python\nlist_of_keypair_objects=keypair_manager.retrieve_keypair_by_id(str:keypairid)\n```\n### Retrieve Keypair By Fingerprint\nRetrieve all of your keypairs by key fingerprint.\n\n```python\nlist_of_keypair_objects=keypair_manager.retrieve_keypair_by_fingerprint(str:fingerprint)\n```\n### Retrieve Keypairs By Tag Keyname\nRetrieve all of your keypairs by the name of a tag key, not it's actual tag content.\n\n```python\nlist_of_keypair_objects=keypair_manager.retrieve_keypair_by_tag_keyname(str:tagkeyname)\n```\n### Retrieve Keypairs By Tag\n\nRetrieve all of your keypairs by supplying the name of a tag, and the tag value.\n\n```python\nlist_of_keypair_objects=keypair_manager.retrieve_keypair_by_tag(str:key,str:value)\n```\n### Upload Keypair\n\nAWS accepts the following ssh key types: (ssh-rsa, ssh-ed25519)\nException KeyPairTypeNotSupportedByAWS will be raised if attempt is made to upload an unsupported key type.\nThis method will return ONE keypair object with the details of the new key uploaded to AWS.\n\n```python\nuploadedkey = keypair_manager.upload_keypair(str:keyname, str:ssh_public_key, dict:tags)\nuploadedkey = keypair_manager.upload_keypair(str:keyname, str:ssh_public_key)\n```\nwhere you provide tags for your keypair in the form of a dict, e.g.\n```python\ntags = {}\ntags[\"tag1\"] = \"value1\"\ntags[\"apple\"] = \"banana\"\n```\n\n**[⬆ back to top](#table-of-contents)**\n## KeyPair Object\n\nA keypair object contains the attributes, and tags for an AWS keypair.\n\n```python\nclass KeyPair:\n    def __init__(self):\n        self.attributes = KeyPairAttributes()\n        self.tags = []\n        ...\n```\n\n```python\n@dataclass\nclass KeyPairAttributes:\n\tKeyPairId: str = None\n\tKeyFingerprint: str = None\n\tKeyName: str = None\n    KeyType: str = None\n```\n\n```python\n@dataclass\nclass Tags:\n\tkey: str = None\n\tValue: str = None\n```\n\n### Delete Keypair\n\nYou can delete a keypair from AWS by calling the delete method on your keypair_object.\n\n```python3\nkeypair_object.delete()\n```\n\n**[⬆ back to top](#table-of-contents)**",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/zorani/aws-ec2-objects/archive/refs/tags/v0.0.10.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/zorani/aws-ec2-objects",
    "keywords": "aws,api,ec2,objects,awsapi",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ec2objects",
    "package_url": "https://pypi.org/project/ec2objects/",
    "platform": "",
    "project_url": "https://pypi.org/project/ec2objects/",
    "project_urls": {
      "Download": "https://github.com/zorani/aws-ec2-objects/archive/refs/tags/v0.0.10.tar.gz",
      "Homepage": "https://github.com/zorani/aws-ec2-objects"
    },
    "release_url": "https://pypi.org/project/ec2objects/0.0.10/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "ec2objects, represents all aws ec2 services as objects, hiding all those horrible api calls.",
    "version": "0.0.10",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11750908,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a38c125b38e3602550ca92eb45140d8985378d6cd76dad7fbce5788d0dc6555a",
          "md5": "6da57cc4c2257f0e8cbc5b850eaa07d4",
          "sha256": "8178be25a731661a2093a5b0b98dba8aa906cb7b2e76d1d64e43fdc6de1fd9c5"
        },
        "downloads": -1,
        "filename": "ec2objects-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6da57cc4c2257f0e8cbc5b850eaa07d4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5077,
        "upload_time": "2021-07-07T20:52:29",
        "upload_time_iso_8601": "2021-07-07T20:52:29.734731Z",
        "url": "https://files.pythonhosted.org/packages/a3/8c/125b38e3602550ca92eb45140d8985378d6cd76dad7fbce5788d0dc6555a/ec2objects-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eb6f4dd32660745abf9c56a96480d2afd5683ab356aa7179db0aa2452bbf6515",
          "md5": "65ded9baa3cad93057ed81c9ac29a16f",
          "sha256": "254db391bedef75f0cbba0fcf8740e8a50d931705ea4be0b8231d7afb1180be9"
        },
        "downloads": -1,
        "filename": "ec2objects-0.0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "65ded9baa3cad93057ed81c9ac29a16f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15847,
        "upload_time": "2021-10-17T14:16:01",
        "upload_time_iso_8601": "2021-10-17T14:16:01.580896Z",
        "url": "https://files.pythonhosted.org/packages/eb/6f/4dd32660745abf9c56a96480d2afd5683ab356aa7179db0aa2452bbf6515/ec2objects-0.0.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "83015b570858be8ac3f72fad81c852646f7dd10f47fc1729a0390b5ec24bdc0a",
          "md5": "59e1c135401af7256618f0d331ddd01c",
          "sha256": "8252b8d1fe3d325e726ec158b142ff55c51c4e8047ff4e7230410c6ae15e3f86"
        },
        "downloads": -1,
        "filename": "ec2objects-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "59e1c135401af7256618f0d331ddd01c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8836,
        "upload_time": "2021-07-07T23:09:38",
        "upload_time_iso_8601": "2021-07-07T23:09:38.609734Z",
        "url": "https://files.pythonhosted.org/packages/83/01/5b570858be8ac3f72fad81c852646f7dd10f47fc1729a0390b5ec24bdc0a/ec2objects-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1c927ae12a82dcc415848a4493315f79af14945369b0c80cbb4cfde6175273e6",
          "md5": "adcc4bb70817fbe98f741bfe96970db0",
          "sha256": "8228abbab4d343a2f73f5315dceb5e3e63b2a9131c1d820af837fd78b98e9725"
        },
        "downloads": -1,
        "filename": "ec2objects-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "adcc4bb70817fbe98f741bfe96970db0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8841,
        "upload_time": "2021-07-07T23:14:35",
        "upload_time_iso_8601": "2021-07-07T23:14:35.847308Z",
        "url": "https://files.pythonhosted.org/packages/1c/92/7ae12a82dcc415848a4493315f79af14945369b0c80cbb4cfde6175273e6/ec2objects-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eaa8fc7e3442a3caf7a5e63a8add76452099e1cc4d2eeca6398566dd291e35ee",
          "md5": "247e7f01f31e6b8d2d3f5a233807c45a",
          "sha256": "4e099d93d9e1081b243420a8a6ff4155d7e568cdde27cce4cfb32048d9ace6bb"
        },
        "downloads": -1,
        "filename": "ec2objects-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "247e7f01f31e6b8d2d3f5a233807c45a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8255,
        "upload_time": "2021-07-16T00:00:04",
        "upload_time_iso_8601": "2021-07-16T00:00:04.427855Z",
        "url": "https://files.pythonhosted.org/packages/ea/a8/fc7e3442a3caf7a5e63a8add76452099e1cc4d2eeca6398566dd291e35ee/ec2objects-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b5073384ee072c9c4f193582f10bf50b583b5b8a9bfcdf0e2c21e3d68fdcce7",
          "md5": "6225c9944d70f10f9d22f8601cf6088f",
          "sha256": "43cb9592f961104631a189ee361c5cad9faf7b6ed11ea2d3a716877fcab9da52"
        },
        "downloads": -1,
        "filename": "ec2objects-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "6225c9944d70f10f9d22f8601cf6088f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10687,
        "upload_time": "2021-07-17T14:23:48",
        "upload_time_iso_8601": "2021-07-17T14:23:48.395860Z",
        "url": "https://files.pythonhosted.org/packages/2b/50/73384ee072c9c4f193582f10bf50b583b5b8a9bfcdf0e2c21e3d68fdcce7/ec2objects-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "24db64541650a912862390550f38a36c02f8608d9579dbc68c5d23542a21f290",
          "md5": "2a4bb9147a83a2c235671a66a9e0eb68",
          "sha256": "a08e5587894cf405f5855b4a8207c5378764ce1bcee12c46464d44e33e4c1b15"
        },
        "downloads": -1,
        "filename": "ec2objects-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "2a4bb9147a83a2c235671a66a9e0eb68",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15062,
        "upload_time": "2021-07-17T22:27:26",
        "upload_time_iso_8601": "2021-07-17T22:27:26.260977Z",
        "url": "https://files.pythonhosted.org/packages/24/db/64541650a912862390550f38a36c02f8608d9579dbc68c5d23542a21f290/ec2objects-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "47a44a4971d9982f720ffcd54e9a12eaaf102590b2fb1e0d022af6a4bb0f0fe3",
          "md5": "e5040efda0f5bc1f86752934f6caa8e4",
          "sha256": "06cf47466455f77619d7fc9a777520f132bc7e4d0c48995d93f5675476aac99b"
        },
        "downloads": -1,
        "filename": "ec2objects-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "e5040efda0f5bc1f86752934f6caa8e4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15057,
        "upload_time": "2021-07-17T22:38:01",
        "upload_time_iso_8601": "2021-07-17T22:38:01.650380Z",
        "url": "https://files.pythonhosted.org/packages/47/a4/4a4971d9982f720ffcd54e9a12eaaf102590b2fb1e0d022af6a4bb0f0fe3/ec2objects-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cc7ee1a9e7b347cd81948a86c9ea418324869ffcda23f193cf6e5101b6a780a3",
          "md5": "67fe4d189f435d5b88d038fe36dde814",
          "sha256": "d24dce142a9e3ba73d189dbb701a12bf392d50d46798202c8ae6b89a66aca818"
        },
        "downloads": -1,
        "filename": "ec2objects-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "67fe4d189f435d5b88d038fe36dde814",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15073,
        "upload_time": "2021-07-17T22:47:43",
        "upload_time_iso_8601": "2021-07-17T22:47:43.067672Z",
        "url": "https://files.pythonhosted.org/packages/cc/7e/e1a9e7b347cd81948a86c9ea418324869ffcda23f193cf6e5101b6a780a3/ec2objects-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f9db7e86583594093cf13c8099892337ed55df02aec40f8d0d4dfabe3e55e798",
          "md5": "8f3fae6ac29e507cad501c10f2e5f6e7",
          "sha256": "82286ab260ad5353e7bf87069a8d64180219f7375759623340abe05ff612a574"
        },
        "downloads": -1,
        "filename": "ec2objects-0.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "8f3fae6ac29e507cad501c10f2e5f6e7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15578,
        "upload_time": "2021-10-16T11:52:09",
        "upload_time_iso_8601": "2021-10-16T11:52:09.584539Z",
        "url": "https://files.pythonhosted.org/packages/f9/db/7e86583594093cf13c8099892337ed55df02aec40f8d0d4dfabe3e55e798/ec2objects-0.0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "eb6f4dd32660745abf9c56a96480d2afd5683ab356aa7179db0aa2452bbf6515",
        "md5": "65ded9baa3cad93057ed81c9ac29a16f",
        "sha256": "254db391bedef75f0cbba0fcf8740e8a50d931705ea4be0b8231d7afb1180be9"
      },
      "downloads": -1,
      "filename": "ec2objects-0.0.10.tar.gz",
      "has_sig": false,
      "md5_digest": "65ded9baa3cad93057ed81c9ac29a16f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 15847,
      "upload_time": "2021-10-17T14:16:01",
      "upload_time_iso_8601": "2021-10-17T14:16:01.580896Z",
      "url": "https://files.pythonhosted.org/packages/eb/6f/4dd32660745abf9c56a96480d2afd5683ab356aa7179db0aa2452bbf6515/ec2objects-0.0.10.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}