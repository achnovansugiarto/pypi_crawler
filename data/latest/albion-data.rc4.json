{
  "info": {
    "author": "dravog7",
    "author_email": "dravog78@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Games/Entertainment"
    ],
    "description": "Albion Data Python\n==================\n\nA simple wrapper for the `Albion Data Project <https://www.albion-online-data.com/>`__ API\n\nInstall\n-------\n\nInstall using pip\n\n.. code:: bash\n\n        python3 -m pip install albion-data\n\nFeatures\n--------\n\n-  check price of items\n\n.. code:: python\n\n    # price of t4 and t5 bag at lymhurst quality 1\n    from albion_data import get_price\n    get_price([\"T4_BAG\",\"T5_BAG\"],\"Lymhurst\",1)\n\n-  check history of item\n\n.. code:: python\n\n    #get daily history of t4 bag at lymhurst of quality 1\n    from albion_data import get_history\n    get_history(\"T4_BAG\",\"Lymhurst\",1,time_scale=24)\n\n-  System for making arithemetic expressions\n\nThe values are lazy loaded.\n\n.. code:: python\n\n    #check if t4 leather refining is profitable in fort sterling without focus\n    from albion_data import Var\n    t4leather = Var(\"T4_LEATHER\",\"Fort Sterling\",\"sell_price_min\")\n    t4hide = Var(\"T4_HIDE\",\"Fort Sterling\",\"sell_price_min\")\n    t3leather = Var(\"T3_LEATHER\",\"Fort Sterling\",\"sell_price_min\")\n    if (2 * t4hide + t3leather) < t4leather: #triggers a single API call\n        print(\"refine t4hide\")\n    else:\n        print(\"not worth it\")\n\nNOTES\n-----\n\n-  The item ids and market names can be found\n   `here <https://github.com/broderickhyman/ao-bin-dumps/tree/master/formatted>`__\n\n-  Use &,\\|,~ for logical and,or,not when making arithemetic expressions\n   with Var. `why not\n   and,or,not? <https://stackoverflow.com/questions/32311518/is-it-possible-to-overload-logical-and-in-python>`__\n\n-  the PYPI name of package and all API might change until v1",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dravog7/Albion-data-python",
    "keywords": "Albion,api",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "albion-data",
    "package_url": "https://pypi.org/project/albion-data/",
    "platform": "",
    "project_url": "https://pypi.org/project/albion-data/",
    "project_urls": {
      "Homepage": "https://github.com/dravog7/Albion-data-python"
    },
    "release_url": "https://pypi.org/project/albion-data/0.2.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A python wrapper for Albion data Project",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8335588,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9cc1f62d35497a4b26c5f62797ebd2f0a40f6ed2d0cc49023de107abf8d49677",
          "md5": "3ab6809ad53a159e47dd9a516e51dfbb",
          "sha256": "305e3ca46bb8e738ab4a774efcf87548cca403954c72a2d4d861c6c4923f130d"
        },
        "downloads": -1,
        "filename": "albion_data-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3ab6809ad53a159e47dd9a516e51dfbb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2295,
        "upload_time": "2020-10-03T09:15:10",
        "upload_time_iso_8601": "2020-10-03T09:15:10.372521Z",
        "url": "https://files.pythonhosted.org/packages/9c/c1/f62d35497a4b26c5f62797ebd2f0a40f6ed2d0cc49023de107abf8d49677/albion_data-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e5463b9b87a83d66357c790e31e721d47a398449569466f04f340d56e7ca2d6a",
          "md5": "e08ccab998323c41cacb7d6dbbf8c19e",
          "sha256": "57f6e451462156cbb8a060efe27b9576d741d43aa67f6ad6392eccc6f9b4be0c"
        },
        "downloads": -1,
        "filename": "albion_data-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e08ccab998323c41cacb7d6dbbf8c19e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3107,
        "upload_time": "2020-10-03T13:07:42",
        "upload_time_iso_8601": "2020-10-03T13:07:42.862495Z",
        "url": "https://files.pythonhosted.org/packages/e5/46/3b9b87a83d66357c790e31e721d47a398449569466f04f340d56e7ca2d6a/albion_data-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f3bd1dbc7ea76c3e40a7dfe97afc852847359a6834c3eb781885f25cd858d4a9",
          "md5": "f3aaef9ac8f087df3f3a5d49e313250a",
          "sha256": "9dfffa8184abda212493541add3f6550f63001c1832125ced26c22cb37951f29"
        },
        "downloads": -1,
        "filename": "albion_data-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f3aaef9ac8f087df3f3a5d49e313250a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3946,
        "upload_time": "2020-10-04T04:51:03",
        "upload_time_iso_8601": "2020-10-04T04:51:03.476987Z",
        "url": "https://files.pythonhosted.org/packages/f3/bd/1dbc7ea76c3e40a7dfe97afc852847359a6834c3eb781885f25cd858d4a9/albion_data-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2322ea4ff87254ab77cedbcc3f32896127de34fae658e9265fd85522bb12cd99",
          "md5": "1be63599ffc651b7dbc992a4c77e2aed",
          "sha256": "3a427a038251d50ba378c42fbf108e8dee1afb2aba9e0b1a117280716285b054"
        },
        "downloads": -1,
        "filename": "albion_data-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1be63599ffc651b7dbc992a4c77e2aed",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3953,
        "upload_time": "2020-10-04T06:49:15",
        "upload_time_iso_8601": "2020-10-04T06:49:15.143443Z",
        "url": "https://files.pythonhosted.org/packages/23/22/ea4ff87254ab77cedbcc3f32896127de34fae658e9265fd85522bb12cd99/albion_data-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2322ea4ff87254ab77cedbcc3f32896127de34fae658e9265fd85522bb12cd99",
        "md5": "1be63599ffc651b7dbc992a4c77e2aed",
        "sha256": "3a427a038251d50ba378c42fbf108e8dee1afb2aba9e0b1a117280716285b054"
      },
      "downloads": -1,
      "filename": "albion_data-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "1be63599ffc651b7dbc992a4c77e2aed",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3953,
      "upload_time": "2020-10-04T06:49:15",
      "upload_time_iso_8601": "2020-10-04T06:49:15.143443Z",
      "url": "https://files.pythonhosted.org/packages/23/22/ea4ff87254ab77cedbcc3f32896127de34fae658e9265fd85522bb12cd99/albion_data-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}