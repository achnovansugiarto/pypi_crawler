{
  "info": {
    "author": "Facundo Batista",
    "author_email": "facundo@taniquetil.com.ar",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: System :: Archiving :: Packaging",
      "Topic :: System :: Software Distribution"
    ],
    "description": "# PyEmpaq\n\nA simple but powerful Python packer to run any project with any virtualenv dependencies anywhwere.\n\nWith PyEmpaq you can convert any Python project (see limitations below) into a single `.pyz` file with all the project's content packed inside. \n\nPacking is super simple, see this demo:\n\n![pack-demo](https://github.com/facundobatista/pyempaq/blob/main/resources/demo_pack.gif?raw=True)\n\nThat single file is everything that needs to be distributed. When the final user executes it, the original project will be expanded, its dependencies installed in a virtualenv, and then executed. Note that no special permissions or privileges are required, as everything happens in the user environment.\n\nSee that in action:\n\n![run-demo](https://github.com/facundobatista/pyempaq/blob/main/resources/demo_run.gif?raw=True)\n\nBoth the packaging and the execution are fully multiplatorm. This means that you can pack a project in Linux, Windows, Mac or whatever, and it will run ok in Linux, Windows, Mac or whatever. The only requirement is Python to be already installed.\n\nYou can try yourself some packed with PyEmpaq examples, very easy, just download any of these files and run it with Python:\n\n- [in a terminal](https://github.com/facundobatista/pyempaq/blob/main/examples/simple-command-line.pyz?raw=True): a very small pure terminal example (this, of course, needs to be run in a terminal)\n- [a game](https://github.com/facundobatista/pyempaq/blob/main/examples/arcade-game.pyz?raw=True): a simple game using the [Python Arcade](https://api.arcade.academy/en/latest/) library (actually, it's the [example #6 from their tutorial](https://api.arcade.academy/en/latest/examples/platform_tutorial/step_06.html))\n- [desktop app](https://github.com/facundobatista/pyempaq/blob/main/examples/desktop-qt-app.pyz?raw=True): a full-fledged desktop application using PyQt5 (this [Encuentro app](https://encuentro.taniquetil.com.ar/))\n\n![logo](https://github.com/facundobatista/pyempaq/blob/main/resources/logo-256.png?raw=True)\n\n\nYou can install `pyempaq` directly from PyPI; see [instructions below](https://github.com/facundobatista/pyempaq#how-to-install).\n\nPyEmpaq is security friendly, there is nothing obscure or secretly shipped when you distribute your project with it: anybody can just open the `pyz` file (it's just a ZIP) and inspect it.\n\n\n### Limitations:\n\nThere are some limitations:\n\n- Only Python >= 3.7 is supported\n\n- Only Linux, Windows and Mac is supported\n\n- Only pip-installable dependencies are supported (from PyPI or whatever).\n\n- Only dependencies that are pure Python or provide wheels are supported.\n\nAll this means that the most majority of the projects could be packed and run by PyEmpaq. If you have any ideas on how to overcome any of these limitations, let's talk!\n\n\n### How does this work?\n\nThere are two phases: packing and execution. \n\nThe **packing phase** is executed by the project developer, only once, before distribution. It's a simple step where the developer runs PyEmpaq indicating all needed info, and PyEmpaq will produce a single `<projectname>.pyz` file. That's all, and that only file is what is needed for distribution.\n\nIn this packing phase, PyEmpaq builds the indicated packed file, putting inside:\n\n- the payload project, with all the indicated modules and binary files (currently *everything from the project*, but this will be improved in the future)\n\n- an *unpacker* script from PyEmpaq, which will be run during the execution phase\n\n- few more stuff: some needed infrastructure details for the `.pyz` to run correctly\n\nAfter packing, the developer will distribute the packed file, final users will download/receive/get it, and execute it.\n\nIn the **execution phase** all that needs to be done by the final user is to run it using Python, which can be done from the command line (e.g. `python3 supergame.pyz`) or by doing double click from the file explorer in those systems that relate the `.pyz` extension to Python (e.g. Windows).\n\nIn this execution phase, the *unpacker* script put by PyEmpaq inside the packed file will be run, running the following steps:\n\n- check if the needed setup exists from a previous run; if yes, it will just run the payload project with almost no extra work; otherwise...\n\n- create a directory in the user data dir, and expand the `.pyz` file there\n\n- create a virtualenv in that new directory, and install all the payload's project dependencies\n\n- run the payload's project inside that virtualenv\n\nThe verification that the unpacker does to see if has a reusable setup from the past is based on the `.pyz` timestamp; if it changed (a new file was distributed), a new setup will be created and used.\n\n\n## Command line options\n\nThere is one mandatory parameter:\n\n- `source`: it needs to point the configuration file or to the directory where the configuration will be located (it will be searched by its default name `pyempaq.yaml`).\n\nExamples:\n\n- `pyempaq .`\n\n- `pyempaq /data/project/`\n\n- `pyempaq ~/repo/proj/config.yaml`\n\n**Note**: [in the future](https://github.com/facundobatista/pyempaq/issues/8) we will be able to control verbosity, we're not there yet.\n\n\n## The configuration file\n\nAll the information that PyEmpaq needs to pack a project comes from a configuration file, which the developer would normally have in the project itself.\n\nThe following is the structure of the `pyempaq.yaml` configuration file:\n\n- `name` [mandatory]: the name of the project.\n\n- `basedir` [optional, defaults to where the configuration file is located]: the project's base directory.\n\n- `exec` [mandatory]: the section where is defined the information to execute the project once unpacked; it holds different subkeys (some subkeys are marked with †: ONE of those keys must be present, but only ONE):\n\n    - `script` [†]: the filepath of the python script to run; when unpacking PyEmpaq will do `python3 SCRIPT`.\n\n    - `module` [†]: the name of the module to invoke; when unpacking PyEmpaq will do `python3 -m MODULE`.\n\n    - `entrypoint` [†]: freeform, as a list of strings; when unpacking PyEmpaq will only insert the proper python3 at the beginning: `python3 STR1 STR2 ...`.\n\n    - `default-args` [optional]: the default arguments to be passed to the script/module/entrypoint (if not overriden when the distributed `.pyz` is executed); **note** that this option is [not available yet](https://github.com/facundobatista/pyempaq/issues/14).\n\n- `requirements`: a list of filepaths pointing to the requirement files with pip-installable dependencies.\n\n- `dependencies`: a list of strings to directly specify packages to be installed by `pip` without needing to have a requirement file.\n\nAll specified filepaths must exist inside the project and must be relative (to the project's base directory), with the exception of `basedir` itself which can be absolute or relative (to the configuration file location).\n\nThe following are examples of different configuration files (which were the ones used to build the packed examples mentioned before):\n\n- [the terminal script](https://github.com/facundobatista/pyempaq/blob/main/examples/pyempaq-script.yaml?raw=True)\n\n- [the simple game](https://github.com/facundobatista/pyempaq/blob/main/examples/pyempaq-game.yaml?raw=True)\n\n- [the full desktop app](https://github.com/facundobatista/pyempaq/blob/main/examples/pyempaq-desktop-app.yaml?raw=True)\n\n\n## How to install PyEmpaq\n\nDirectly from PyPI:\n\n    pip install --user --upgrade --ignore-installed pyempaq\n\nIt's handy to install it using `pipx`, if you have it:\n\n    pipx install pyempaq\n\nIf you have `fades` you don't even need to install pyempaq, just run it:\n\n    fades -d pyempaq -x pyempaq\n\nIn the future there will be more ways to install it. Please open an issue if you desire an installation method (extra points if you specify how), thanks!\n\n\n## Try packing an example project\n\nPyEmpaq sources come with a small example project if you want to play a little packing it. Just a couple of dir/files under `examples/srcproject`:\n\n- a `src` and `media`, with stuff to be imported and accessed.\n\n- a `pyempaq.yaml` with the configuration for PyEmpaq.\n\n- a `ep.py` file which is the project's entrypoint; all it does is to inform it started, import the internal module, access the media files, and use the declared dependency, reporting every step.\n\nThis explores most of the needs of any project. You can try this example, and surely after you will be ready to actually pack any other project you want.\n\nSo, let's pack the example source project. As you're working with the PyEmpaq project itself (as you're packing its example), you don't really need to have it installed yet. In that case, if you have `fades` installed is super easy:\n\n    fades -r requirements.txt -m pyempaq examples/srcproject/\n\nOtherwise, you would need to create and use a virtual environment:\n\n    python3 -m venv env\n    source env/bin/activate\n    pip install -r requirements\n    python3 -m pyempaq examples/srcproject/\n\nAfter running that command, you will see a `pyempaq-example.pyz` file. That is the **whole project encoded in a single file**.\n\nAt this point you may move that `pyempaq-example.pyz` to another directory, or to another machine, even that other machine having another operating system.\n\nThen, try it:\n\n    python3 pyempaq-example.pyz\n\nYou should see the project's reportings that we mentioned above (**note**: these lines will be surrounded by debug ones that will be hidden by default in the future):\n\n    Hello world\n    Code access ok .../pyempaq/projectname-20210722013526/orig/src/foo.py\n    Media access ok\n    Module requests imported .../pyempaq/projectname-20210722013526/venv/lib/python3.8/site-packages/requests/__init__.py\n\nThis shows that what you've run actually started, accessed the internal modules and other files, and imported correctly a custom-installed dependency.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/facundobatista/pyempaq",
    "keywords": "",
    "license": "GPL-v3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyempaq",
    "package_url": "https://pypi.org/project/pyempaq/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyempaq/",
    "project_urls": {
      "Homepage": "https://github.com/facundobatista/pyempaq"
    },
    "release_url": "https://pypi.org/project/pyempaq/0.2.2/",
    "requires_dist": null,
    "requires_python": ">=3.5",
    "summary": "A Python packer to run anywhwere any project with any virtualenv dependencies.",
    "version": "0.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12094216,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f88efc1cdf03337c84cb21c8145c5c0528ba2c0aa82a2421726965578e5da372",
          "md5": "2c6b859782a6f3f14123e1cdaa7fa86c",
          "sha256": "2225cfed11c5999f379a1119570f6ea9b60abd0bae007b2e2ba3f0d53d80024d"
        },
        "downloads": -1,
        "filename": "pyempaq-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2c6b859782a6f3f14123e1cdaa7fa86c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 7932,
        "upload_time": "2021-08-17T14:17:10",
        "upload_time_iso_8601": "2021-08-17T14:17:10.955652Z",
        "url": "https://files.pythonhosted.org/packages/f8/8e/fc1cdf03337c84cb21c8145c5c0528ba2c0aa82a2421726965578e5da372/pyempaq-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8828336b4f67ac79b2cf2c2147268ff1379a76550cff4ed1642e4b6c7ac8ce2a",
          "md5": "08909fff7000e2b2524909333a1da5eb",
          "sha256": "71385db62e508f5be2a45ebf57df2603ce48ca8b5458054fd81c6ebed5a96299"
        },
        "downloads": -1,
        "filename": "pyempaq-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "08909fff7000e2b2524909333a1da5eb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 8020,
        "upload_time": "2021-08-17T14:22:30",
        "upload_time_iso_8601": "2021-08-17T14:22:30.444922Z",
        "url": "https://files.pythonhosted.org/packages/88/28/336b4f67ac79b2cf2c2147268ff1379a76550cff4ed1642e4b6c7ac8ce2a/pyempaq-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0908de01db7e472e5178fc3fa04cff0e7df384dc2e61097d237259f651aaa2f0",
          "md5": "a257d934dd3db2918f0f4fb9746e00ae",
          "sha256": "c80463ca010050309a00ed3a22ce10a98af18b40bed372840286b949481c0396"
        },
        "downloads": -1,
        "filename": "pyempaq-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a257d934dd3db2918f0f4fb9746e00ae",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 25400,
        "upload_time": "2021-09-24T19:17:41",
        "upload_time_iso_8601": "2021-09-24T19:17:41.241884Z",
        "url": "https://files.pythonhosted.org/packages/09/08/de01db7e472e5178fc3fa04cff0e7df384dc2e61097d237259f651aaa2f0/pyempaq-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b97bd3602c060d4a3a698ae5ed53d78425f16e0ac78fbca86b29151c91da8909",
          "md5": "47351886f0c423d99f6b53257b879659",
          "sha256": "934ad325568456cf6cf85a4caa51a4899fee36fff49c350f000388a51653fa63"
        },
        "downloads": -1,
        "filename": "pyempaq-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "47351886f0c423d99f6b53257b879659",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 25601,
        "upload_time": "2021-09-26T15:52:23",
        "upload_time_iso_8601": "2021-09-26T15:52:23.481194Z",
        "url": "https://files.pythonhosted.org/packages/b9/7b/d3602c060d4a3a698ae5ed53d78425f16e0ac78fbca86b29151c91da8909/pyempaq-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2d50184e7799130e641a279ada89a6ddc8ae831a307f7ab9efb3545b998a798f",
          "md5": "302fef0cf4b41ae8e412202f8db8bbe1",
          "sha256": "67bdd96bd3d5aab12b54a306deccdd370d526f1db300ca019b5b41d860519b86"
        },
        "downloads": -1,
        "filename": "pyempaq-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "302fef0cf4b41ae8e412202f8db8bbe1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 25839,
        "upload_time": "2021-11-22T17:50:25",
        "upload_time_iso_8601": "2021-11-22T17:50:25.529618Z",
        "url": "https://files.pythonhosted.org/packages/2d/50/184e7799130e641a279ada89a6ddc8ae831a307f7ab9efb3545b998a798f/pyempaq-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2d50184e7799130e641a279ada89a6ddc8ae831a307f7ab9efb3545b998a798f",
        "md5": "302fef0cf4b41ae8e412202f8db8bbe1",
        "sha256": "67bdd96bd3d5aab12b54a306deccdd370d526f1db300ca019b5b41d860519b86"
      },
      "downloads": -1,
      "filename": "pyempaq-0.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "302fef0cf4b41ae8e412202f8db8bbe1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 25839,
      "upload_time": "2021-11-22T17:50:25",
      "upload_time_iso_8601": "2021-11-22T17:50:25.529618Z",
      "url": "https://files.pythonhosted.org/packages/2d/50/184e7799130e641a279ada89a6ddc8ae831a307f7ab9efb3545b998a798f/pyempaq-0.2.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}