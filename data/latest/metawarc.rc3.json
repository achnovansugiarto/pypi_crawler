{
  "info": {
    "author": "Ivan Begtin",
    "author_email": "ivan@begtin.tech",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Software Development",
      "Topic :: System :: Networking",
      "Topic :: Terminals",
      "Topic :: Text Processing",
      "Topic :: Utilities"
    ],
    "description": "metawarc: a command-line tool for metadata extraction from files from WARC (Web ARChive)\r\r\n########################################################################################\r\r\n\r\r\nmetawarc (pronounced *me-ta-warc*) is a command line WARC files processing tools.\r\r\nIts goal is to make CLI interaction with files inside WARC archives so easy as possible.\r\r\nIt provides a simple ``metawarc`` command that allows to extract metadata from images, documents and other files inside\r\r\nWARC archives.\r\r\n\r\r\n\r\r\n.. contents::\r\r\n\r\r\n.. section-numbering::\r\r\n\r\r\n\r\r\n\r\r\nMain features\r\r\n=============\r\r\n\r\r\n* Built-in WARC support\r\r\n* Metadata extraction for a lot of file formats\r\r\n* Low memory footprint\r\r\n* Documentation\r\r\n* Test coverage\r\r\n\r\r\n\r\r\nFile formats supported\r\r\n======================\r\r\n\r\r\n* MS Office OLE: .doc, .xls, .ppt\r\r\n* MS Office XML: .docx, .xlsx, .pptx\r\r\n* Adobe PDF: .pdf\r\r\n* Images: .png, .jpg, .tiff, .jpeg, .jp2\r\r\n\r\r\n\r\r\nInstallation\r\r\n============\r\r\n\r\r\n\r\r\nAny OS\r\r\n-------------\r\r\n\r\r\nA universal installation method (that works on Windows, Mac OS X, Linux, â€¦,\r\r\nand always provides the latest version) is to use pip:\r\r\n\r\r\n\r\r\n.. code-block:: bash\r\r\n\r\r\n    # Make sure we have an up-to-date version of pip and setuptools:\r\r\n    $ pip install --upgrade pip setuptools\r\r\n\r\r\n    $ pip install --upgrade metawarc\r\r\n\r\r\n\r\r\n(If ``pip`` installation fails for some reason, you can try\r\r\n``easy_install metawarc`` as a fallback.)\r\r\n\r\r\n\r\r\nPython version\r\r\n--------------\r\r\n\r\r\nPython version 3.6 or greater is required.\r\r\n\r\r\nUsage\r\r\n=====\r\r\n\r\r\n\r\r\nSynopsis:\r\r\n\r\r\n.. code-block:: bash\r\r\n\r\r\n    $ metawarc [command] [flags]  inputfile\r\r\n\r\r\n\r\r\nSee also ``metawarc --help`` and ``metawarc [command] --help`` for help for each command.\r\r\n\r\r\n\r\r\nExamples\r\r\n--------\r\r\n\r\r\nExtract metadata of all supported file types from 'digital.gov.ru.warc.gz' and output results to default filename 'metadata.jsonl':\r\r\n\r\r\n.. code-block:: bash\r\r\n\r\r\n    $ metawarc metadata digital.gov.ru.warc.gz\r\r\n\r\r\n\r\r\nExtract metadata for .doc and .docx file types from 'digital.gov.ru.warc.gz' and output results to default filename 'metadata.jsonl':\r\r\n\r\r\n.. code-block:: bash\r\r\n\r\r\n    $ metawarc metadata --filetypes doc,docx digital.gov.ru.warc.gz\r\r\n\r\r\nExtract metadata for .doc and .docx file types from 'digital.gov.ru.warc.gz' and output results to filename 'digital_meta.jsonl':\r\r\n\r\r\n.. code-block:: bash\r\r\n\r\r\n    $ metawarc metadata --filetypes doc,docx --output digital_meta.jsonl digital.gov.ru.warc.gz\r\r\n\r\r\n\r\r\nCommands\r\r\n========\r\r\n\r\r\nMetadata command\r\r\n----------------\r\r\nExtracts metadata from files inside .warc files. Returns JSON lines output for each file found.\r\r\n\r\r\nExtract metadata for .doc and .docx file types from 'digital.gov.ru.warc.gz' and output results to filename 'digital_meta.jsonl':\r\r\n\r\r\n.. code-block:: bash\r\r\n\r\r\n    $ metawarc metadata --filetypes doc,docx --output digital_meta.jsonl digital.gov.ru.warc.gz\r\r\n\r\r\n\r\r\n\r\r\nAnalyze command\r\r\n----------------\r\r\nReturns list of mime mimetypes with stats as number of files and total files size for each mime type.\r\r\nWill be merged or replaced by 'stats' command that uses sqlite db to speed up data processing\r\r\n\r\r\nAnalyzes 'digital.gov.ru.warc.gz' and output results of list of mime types as table to console\r\r\n\r\r\n.. code-block:: bash\r\r\n\r\r\n    $ metawarc analyze digital.gov.ru.warc.gz\r\r\n\r\r\n\r\r\n\r\r\nIndex command\r\r\n-------------\r\r\nGenerates 'metawarc.db' SQLite database with records HTTP metadata. Requred for 'stats' command to calculate stats quickly\r\r\n\r\r\nAnalyzes 'digital.gov.ru.warc.gz' and writes 'metawarc.db' with HTTP metadata.\r\r\n\r\r\n.. code-block:: bash\r\r\n\r\r\n    $ metawarc index digital.gov.ru.warc.gz\r\r\n\r\r\nIndex command\r\r\n-------------\r\r\nSame as 'analyze' command but uses 'metawarc.db' to speed up data processing. Returns total length and count of records by each mime or file extension.\r\r\n\r\r\nProcesses data in 'metawarc.db' and prints total length and count for each mime\r\r\n\r\r\n.. code-block:: bash\r\r\n\r\r\n    $ metawarc stats -m mimes\r\r\n\r\r\nProcesses data in 'metawarc.db' and prints total length and count for each file extension\r\r\n\r\r\n.. code-block:: bash\r\r\n\r\r\n    $ metawarc stats -m exts\r\r\n\r\r\n\r\r\nExport command\r\r\n--------------\r\r\nExtracts HTTP headers, WARC headers or text content from WARC file and saves as NDJSON (JSON lines) data file.\r\r\n\r\r\nExports http headers from 'digital.gov.ru.warc.gz' and writes as 'headers.jsonl'\r\r\n.. code-block:: bash\r\r\n\r\r\n    $ metawarc export -t headers -o headers.jsonl digital.gov.ru.warc.gz\r\r\n\r\r\nExports WarcIO index from 'digital.gov.ru.warc.gz' and writes as 'data.jsonl' with fields listed in '-f' option. \r\r\n.. code-block:: bash\r\r\n\r\r\n    $ metawarc export -t warcio -f offset,length,filename,http:status,http:content-type,warc-type,warc-target-uri -o data.jsonl digital.gov.ru.warc.gz\r\r\n\r\r\nExports text (HTML) content from 'digital.gov.ru.warc.gz' and writes as 'content.jsonl'\r\r\n.. code-block:: bash\r\r\n\r\r\n    $ metawarc export -t content -o content.jsonl digital.gov.ru.warc.gz\r\r\n\r\r\n\r\n\r\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "https://github.com/datacoon/metawarc/",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/datacoon/metawarc/",
    "keywords": "warc archive webarchive metadata",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "metawarc",
    "package_url": "https://pypi.org/project/metawarc/",
    "platform": null,
    "project_url": "https://pypi.org/project/metawarc/",
    "project_urls": {
      "Download": "https://github.com/datacoon/metawarc/",
      "Homepage": "https://github.com/datacoon/metawarc/"
    },
    "release_url": "https://pypi.org/project/metawarc/1.1.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "metawarc: a command-line tool for data extraction from WARC files (web archives)",
    "version": "1.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15562599,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e6be8072c5300e45659a5634eab778c3b3dbb15998035102adbd0f92864b254d",
          "md5": "b9844a616a6e01b1f37190795e1a3248",
          "sha256": "6ea18236ad699250579fcc6ef060cb5093025bb850bb22bd3e63c233ab6f010b"
        },
        "downloads": -1,
        "filename": "metawarc-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b9844a616a6e01b1f37190795e1a3248",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6885,
        "upload_time": "2020-05-10T21:25:42",
        "upload_time_iso_8601": "2020-05-10T21:25:42.372906Z",
        "url": "https://files.pythonhosted.org/packages/e6/be/8072c5300e45659a5634eab778c3b3dbb15998035102adbd0f92864b254d/metawarc-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a7f811442e78eabd794e7c5f196d0fba43569455769158ef0b69a066f93c328d",
          "md5": "707c02207d3a9d1d95645f6415e4d18d",
          "sha256": "7941013d80265aaab9898d37cea25c43af326b018be1c7a7b488e464866f62a2"
        },
        "downloads": -1,
        "filename": "metawarc-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "707c02207d3a9d1d95645f6415e4d18d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7384,
        "upload_time": "2020-05-11T13:14:55",
        "upload_time_iso_8601": "2020-05-11T13:14:55.969376Z",
        "url": "https://files.pythonhosted.org/packages/a7/f8/11442e78eabd794e7c5f196d0fba43569455769158ef0b69a066f93c328d/metawarc-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a37a29700e38e3451bcadd00c096d93ef37735a99c4aec539e86a0cd8ad3c5b2",
          "md5": "2d308e8bd206cffdaacb6c34c51c7d48",
          "sha256": "c42da6fbfe6c8b562338ffbfc93516773e87c856f9603e6d37b27ab9b5014120"
        },
        "downloads": -1,
        "filename": "metawarc-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2d308e8bd206cffdaacb6c34c51c7d48",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15396,
        "upload_time": "2022-10-28T04:03:06",
        "upload_time_iso_8601": "2022-10-28T04:03:06.792145Z",
        "url": "https://files.pythonhosted.org/packages/a3/7a/29700e38e3451bcadd00c096d93ef37735a99c4aec539e86a0cd8ad3c5b2/metawarc-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a37a29700e38e3451bcadd00c096d93ef37735a99c4aec539e86a0cd8ad3c5b2",
        "md5": "2d308e8bd206cffdaacb6c34c51c7d48",
        "sha256": "c42da6fbfe6c8b562338ffbfc93516773e87c856f9603e6d37b27ab9b5014120"
      },
      "downloads": -1,
      "filename": "metawarc-1.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "2d308e8bd206cffdaacb6c34c51c7d48",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 15396,
      "upload_time": "2022-10-28T04:03:06",
      "upload_time_iso_8601": "2022-10-28T04:03:06.792145Z",
      "url": "https://files.pythonhosted.org/packages/a3/7a/29700e38e3451bcadd00c096d93ef37735a99c4aec539e86a0cd8ad3c5b2/metawarc-1.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}