{
  "info": {
    "author": "Gilles Vandewiele",
    "author_email": "gilles.vandewiele@ugent.be",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: Other/Proprietary License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "\nWhat is RDF2Vec?\n----------------\n\nRDF2Vec is an unsupervised technique that builds further on\n`Word2Vec <https://en.wikipedia.org/wiki/Word2vec>`__, where an\nembedding is learned per word, in two ways:\n\n1. **the word based on its context**: Continuous Bag-of-Words (CBOW);\n2. **the context based on a word**: Skip-Gram (SG).\n\nTo create this embedding, RDF2Vec first creates \"sentences\" which can be\nfed to Word2Vec by extracting walks of a certain depth from a Knowledge\nGraph.\n\nThis repository contains an implementation of the algorithm in \"RDF2Vec:\nRDF Graph Embeddings and Their Applications\" by Petar Ristoski, Jessica\nRosati, Tommaso Di Noia, Renato De Leone, Heiko Paulheim\n(`[paper] <http://semantic-web-journal.net/content/rdf2vec-rdf-graph-embeddings-and-their-applications-0>`__\n`[original\ncode] <http://data.dws.informatik.uni-mannheim.de/rdf2vec/>`__).\n\n.. rdf2vec-end\n.. getting-started-begin\n\nGetting Started\n---------------\n\nFor most uses-cases, here is how ``pyRDF2Vec`` should be used to generate\nembeddings and get literals from a given Knowledge Graph (KG) and entities:\n\n.. code:: python\n\n   import pandas as pd\n\n   from pyrdf2vec import RDF2VecTransformer\n   from pyrdf2vec.embedders import Word2Vec\n   from pyrdf2vec.graphs import KG\n   from pyrdf2vec.walkers import RandomWalker\n\n   data = pd.read_csv(\"samples/countries-cities/entities.tsv\", sep=\"\\t\")\n   entities = [entity for entity in data[\"location\"]]\n   print(entities)\n   # [\n   #    \"http://dbpedia.org/resource/Belgium\",\n   #    \"http://dbpedia.org/resource/France\",\n   #    \"http://dbpedia.org/resource/Germany\",\n   # ]\n\n   transformer = RDF2VecTransformer(\n       Word2Vec(epochs=10),\n       walkers=[RandomWalker(4, 10, with_reverse=False, n_jobs=2)],\n       # verbose=1\n   )\n   embeddings, literals = transformer.fit_transform(\n       KG(\n           \"https://dbpedia.org/sparql\",\n           skip_predicates={\"www.w3.org/1999/02/22-rdf-syntax-ns#type\"},\n           literals=[\n               [\n                   \"http://dbpedia.org/ontology/wikiPageWikiLink\",\n                   \"http://www.w3.org/2004/02/skos/core#prefLabel\",\n               ],\n               [\"http://dbpedia.org/ontology/humanDevelopmentIndex\"],\n           ],\n       ),\n       entities\n   )\n   print(embeddings)\n   # [\n   #     array([ 1.5737595e-04,  1.1333118e-03, -2.9838676e-04,  ..., -5.3064007e-04,\n   #             4.3192197e-04,  1.4529384e-03], dtype=float32),\n   #     array([-5.9027621e-04,  6.1689125e-04, -1.1987977e-03,  ...,  1.1066757e-03,\n   #            -1.0603866e-05,  6.6087965e-04], dtype=float32),\n   #     array([ 7.9996325e-04,  7.2907173e-04, -1.9482171e-04,  ...,  5.6251377e-04,\n   #             4.1435464e-04,  1.4478950e-04], dtype=float32)\n   # ]\n\n   print(literals)\n   # [\n   #     [('1830 establishments in Belgium', 'States and territories established in 1830',\n   #       'Western European countries', ..., 'Member states of the Organisation\n   #       internationale de la Francophonie', 'Member states of the Union for the\n   #       Mediterranean', 'Member states of the United Nations'), 0.919],\n   #     [('Group of Eight nations', 'Southwestern European countries', '1792\n   #       establishments in Europe', ..., 'Member states of the Union for the\n   #       Mediterranean', 'Member states of the United Nations', 'Transcontinental\n   #       countries'), 0.891]\n   #     [('Germany', 'Group of Eight nations', 'Articles containing video clips', ...,\n   #       'Member states of the European Union', 'Member states of the Union for the\n   #       Mediterranean', 'Member states of the United Nations'), 0.939]\n   #  ]\n\nIf you are using a dataset other than MUTAG (where the interested entities have\nno parents in the KG), it is **highly recommended** to specify\n``with_reverse=True`` (defaults to ``False``) in the walking strategy (e.g.,\n``RandomWalker``). Such a parameter **allows Word2Vec** to have a better\nlearning window for an entity based on its parents and children and thus\n**predict test data with better accuracy**.\n\nIn a more concrete way, we provide a blog post with a tutorial on how to use\n``pyRDF2Vec`` `here\n<https://towardsdatascience.com/how-to-create-representations-of-entities-in-a-knowledge-graph-using-pyrdf2vec-82e44dad1a0>`__.\n\n**NOTE:** this blog uses an older version of ``pyRDF2Vec``, some commands need\nbe to adapted.\n\nIf you run the above snippet, you will not necessarily have the same\nembeddings, because there is no conservation of the random determinism, however\nit remains possible to do it (**SEE:** `FAQ <#faq>`__).\n\nInstallation\n~~~~~~~~~~~~\n\n``pyRDF2Vec`` can be installed in two ways:\n\n1. from `PyPI <https://pypi.org/project/pyrdf2vec>`__ using ``pip``:\n\n.. code:: bash\n\n   pip install pyRDF2vec\n\n2. from any compatible Python dependency manager (e.g., ``poetry``):\n\n.. code:: bash\n\n   poetry add pyRDF2vec\n\nIntroduction\n~~~~~~~~~~~~\n\nTo create embeddings for a list of entities, there are two steps to do\nbeforehand:\n\n1. **use a KG**;\n2. **define a walking strategy**.\n\nFor more elaborate examples, check the `examples\n<https://github.com/IBCNServices/pyRDF2Vec/blob/master/examples>`__ folder.\n\nIf no sampling strategy is defined, ``UniformSampler`` is used. Similarly for\nthe embedding techniques, ``Word2Vec`` is used by default.\n\nUse a Knowledge Graph\n~~~~~~~~~~~~~~~~~~~~~\n\nTo use a KG, you can initialize it in three ways:\n\n1. **From a endpoint server using SPARQL**:\n\n.. code:: python\n\n   from pyrdf2vec.graphs import KG\n\n   # Defined the DBpedia endpoint server, as well as a set of predicates to\n   # exclude from this KG and a list of predicate chains to fetch the literals.\n   KG(\n       \"https://dbpedia.org/sparql\",\n       skip_predicates={\"www.w3.org/1999/02/22-rdf-syntax-ns#type\"},\n       literals=[\n           [\n               \"http://dbpedia.org/ontology/wikiPageWikiLink\",\n               \"http://www.w3.org/2004/02/skos/core#prefLabel\",\n           ],\n           [\"http://dbpedia.org/ontology/humanDevelopmentIndex\"],\n        ],\n    ),\n\n2. **From a file using RDFLib**:\n\n.. code:: python\n\n   from pyrdf2vec.graphs import KG\n\n   # Defined the MUTAG KG, as well as a set of predicates to exclude from\n   # this KG and a list of predicate chains to get the literals.\n   KG(\n       \"samples/mutag/mutag.owl\",\n       skip_predicates={\"http://dl-learner.org/carcinogenesis#isMutagenic\"},\n       literals=[\n           [\n               \"http://dl-learner.org/carcinogenesis#hasBond\",\n               \"http://dl-learner.org/carcinogenesis#inBond\",\n           ],\n           [\n               \"http://dl-learner.org/carcinogenesis#hasAtom\",\n               \"http://dl-learner.org/carcinogenesis#charge\",\n           ],\n       ],\n   ),\n\n3. **From scratch**:\n\n.. code:: python\n\n   from pyrdf2vec.graphs import KG, Vertex\n\n    GRAPH = [\n        [\"Alice\", \"knows\", \"Bob\"],\n        [\"Alice\", \"knows\", \"Dean\"],\n        [\"Dean\", \"loves\", \"Alice\"],\n    ]\n    URL = \"http://pyRDF2Vec\"\n    CUSTOM_KG = KG()\n\n    for row in GRAPH:\n        subj = Vertex(f\"{URL}#{row[0]}\")\n        obj = Vertex((f\"{URL}#{row[2]}\"))\n        pred = Vertex((f\"{URL}#{row[1]}\"), predicate=True, vprev=subj, vnext=obj)\n        CUSTOM_KG.add_walk(subj, pred, obj)\n\nDefine Walking Strategies With Their Sampling Strategy\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nAll supported walking strategies can be found on the\n`Wiki\npage <https://github.com/IBCNServices/pyRDF2Vec/wiki/Walking-Strategies>`__.\n\nAs the number of walks grows exponentially in function of the depth,\nexhaustively extracting all walks quickly becomes infeasible for larger\nKnowledge Graphs. In order to avoid this issue, `sampling strategies\n<http://www.heikopaulheim.com/docs/wims2017.pdf>`__ can be applied. These will\nextract a fixed maximum number of walks per entity and sampling the walks\naccording to a certain metric.\n\nFor example, if one wants to extract a maximum of 10 walks of a maximum depth\nof 4 for each entity using the random walking strategy and Page Rank sampling\nstrategy, the following code snippet can be used:\n\n.. code:: python\n\n   from pyrdf2vec.samplers import PageRankSampler\n   from pyrdf2vec.walkers import RandomWalker\n\n   walkers = [RandomWalker(4, 10, PageRankSampler())]\n\n.. getting-started-end\n\nSpeed up the Extraction of Walks\n--------------------------------\n\nThe extraction of walks can take hours, days if not more in some cases. That's\nwhy it is important to use certain attributes and optimize ``pyRDF2Vec``\nparameters as much as possible according to your use cases.\n\nThis section aims to help you to set up these parameters with some advice.\n\nConfigure the ``n_jobs`` attribute to use multiple processors\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nBy default multiprocessing is disabled (``n_jobs=1``). If your machine allows\nit, it is recommended to use multiprocessing by incrementing the number of\nprocessors used for the extraction of walks:\n\n.. code:: python\n\n   from pyrdf2vec.walkers import RandomWalker\n\n   RDF2VecTransformer(walkers=[RandomWalker(4, 10, n_jobs=4)])\n\nIn the above snippet, the random walking strategy will use 4 processors to\nextract the walks, whether for a local or remote KG.\n\n**WARNING: using a large number of processors may violate the policy of some\nSPARQL endpoint servers**. This being that using multiprocessing means that\neach processor will send a SPARQL request to one server to fetch the hops of\nthe entity it is processing. Therefore, since these requests may take place in\na short time, this server could consider them as a Denial-Of-Service attack\n(DOS). Of course, these risks are multiplied in the absence of cache and when\nthe entities to be treated are of a consequent number.\n\nBundle SPARQL requests\n~~~~~~~~~~~~~~~~~~~~~~\n\nBy default the SPARQL requests bundling is disabled\n(``mul_req=False``). However, if you are using a remote KG and have a large\nnumber of entities, this option can greatly speed up the extraction of walks:\n\n.. code:: python\n\n   import pandas as pd\n\n   from pyrdf2vec import RDF2VecTransformer\n   from pyrdf2vec.graphs import KG\n   from pyrdf2vec.walkers import RandomWalker\n\n   data = pd.read_csv(\"samples/countries-cities/entities.tsv\", sep=\"\\t\")\n\n   RDF2VecTransformer(walkers=[RandomWalker(4, 10)]).fit_transform(\n       KG(\"https://dbpedia.org/sparql\", mul_req=True),\n       [entity for entity in data[\"location\"]],\n   )\n\nIn the above snippet, the KG specifies to the internal connector that it uses,\nto fetch the hops of the specified entities in an asynchronous way. These hops\nwill then be stored in cache and be accessed by the walking strategy to\naccelerate the extraction of walks for these entities.\n\n**WARNING: bundling SPARQL requests for a number of entities considered too\nlarge can may violate the policy of some SPARQL endpoint servers**. As for the\nuse of multiprocessing (which can be combined with ``mul_req``), sending a\nlarge number of SPARQL requests simultaneously could be seen by a server as a\nDOS. Be aware that the number of entities you have in your file corresponds to\nthe number of simultaneous requests that will be made and stored in cache.\n\nModify the Cache Settings\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nBy default, ``pyRDF2Vec`` uses a cache that provides a `Least Recently Used\n(LRU) <https://www.interviewcake.com/concept/java/lru-cache>`__ policy, with a\nsize that can hold 1024 entries, and a Time To Live (TTL) of 1200 seconds. For\nsome use cases, you would probably want to modify the `cache policy\n<https://cachetools.readthedocs.io/en/stable/>`__, increase (or decrease) the\ncache size and/or change the TTL:\n\n.. code:: python\n\n   import pandas as pd\n   from cachetools import MRUCache\n\n   from pyrdf2vec import RDF2VecTransformer\n   from pyrdf2vec.graphs import KG\n   from pyrdf2vec.walkers import RandomWalker\n\n   data = pd.read_csv(\"samples/countries-cities/entities.tsv\", sep=\"\\t\")\n\n   RDF2VecTransformer(walkers=[RandomWalker(4, 10)]).fit_transform(\n       KG(\"https://dbpedia.org/sparql\", cache=MRUCache(maxsize=2048),\n       [entity for entity in data[\"location\"]],\n   )\n\nModify the Walking Strategy Settings\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nBy default, ``pyRDF2Vec`` uses ``[RandomWalker(2, None, UniformSampler())]`` as\nwalking strategy. Using a greater maximum depth indicates a longer extraction\ntime for walks. Add to this that using ``max_walks=None``, extracts more walks\nand is faster in most cases than when giving a number (**SEE:** `FAQ <#faq>`__).\n\nIn some cases, using another sampling strategy can speed up the extraction of\nwalks by assigning a higher weight to some paths than others:\n\n.. code:: python\n\n   import pandas as pd\n\n   from pyrdf2vec import RDF2VecTransformer\n   from pyrdf2vec.graphs import KG\n   from pyrdf2vec.samplers import PageRankSampler\n   from pyrdf2vec.walkers import RandomWalker\n\n   data = pd.read_csv(\"samples/countries-cities/entities.tsv\", sep=\"\\t\")\n\n   RDF2VecTransformer(\n       walkers=[RandomWalker(2, None, PageRankSampler())]\n   ).fit_transform(\n       KG(\"https://dbpedia.org/sparql\"),\n       [entity for entity in data[\"location\"]],\n   )\n\nSet Up a Local Server\n~~~~~~~~~~~~~~~~~~~~~\n\nLoading large RDF files into memory will cause memory issues. Remote KGs serve\nas a solution for larger KGs, but **using a public endpoint will be slower**\ndue to overhead caused by HTTP requests. For that reason, it is better to set\nup your own local server and use that for your \"Remote\" KG.\n\nTo set up such a server, a tutorial has been made `on our wiki\n<https://github.com/IBCNServices/pyRDF2Vec/wiki/Fast-generation-of-RDF2Vec-embeddings-with-a-SPARQL-endpoint>`__.\n\nDocumentation\n-------------\n\nFor more information on how to use ``pyRDF2Vec``, `visit our online documentation\n<https://pyrdf2vec.readthedocs.io/en/latest/>`__ which is automatically updated\nwith the latest version of the ``master`` branch.\n\nFrom then on, you will be able to learn more about the use of the\nmodules as well as their functions available to you.\n\nContributions\n-------------\n\nYour help in the development of ``pyRDF2Vec`` is more than welcome. In order to\nbetter understand how you can help either through pull requests and/or issues,\nplease take a look at the `CONTRIBUTING\n<https://github.com/IBCNServices/pyRDF2Vec/blob/master/CONTRIBUTING.rst>`__\nfile.\n\nFAQ\n---\nHow to Ensure the Generation of Similar Embeddings?\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n``pyRDF2Vec``'s walking strategies, sampling strategies and Word2Vec work with\nrandomness. To get reproducible embeddings, you firstly need to **use a seed** to\nensure determinism:\n\n.. code:: bash\n\n   PYTHONHASHSEED=42 python foo.py\n\nAdded to this, you must **also specify a random state** to the walking strategy\nwhich will implicitly use it for the sampling strategy:\n\n.. code:: python\n\n   from pyrdf2vec.walkers import RandomWalker\n\n   RandomWalker(2, None, random_state=42)\n\n**NOTE:** the ``PYTHONHASHSEED`` (e.g., 42) is to ensure determinism.\n\nFinally, to ensure random determinism for Word2Vec, you must **specify a single\nworker**:\n\n.. code:: python\n\n   from pyrdf2vec.embedders import Word2Vec\n\n   Word2Vec(workers=1)\n\n**NOTE:** using the ``n_jobs`` and ``mul_req`` parameters does not affect the\nrandom determinism.\n\nWhy the Extraction Time of Walks is Faster if ``max_walks=None``?\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nCurrently, **the BFS function** (using the Breadth-first search algorithm) is used\nwhen ``max_walks=None`` which is significantly **faster** than the DFS function\n(using the Depth-first search algorithm) **and extract more walks**.\n\nWe hope that this algorithmic complexity issue will be solved for the next\nrelease of ``pyRDf2Vec``\n\nHow to Silence the tcmalloc Warning When Using FastText With Mediums/Large KGs?\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nSets the ``TCMALLOC_LARGE_ALLOC_REPORT_THRESHOLD`` environment variable to a\nhigh value.\n\nReferencing\n-----------\n\nIf you use ``pyRDF2Vec`` in a scholarly article, we would appreciate a\ncitation:\n\n.. code:: bibtex\n\n   @inproceedings{pyrdf2vec,\n     author       = {Gilles Vandewiele and Bram Steenwinckel and Terencio Agozzino\n                     and Michael Weyns and Pieter Bonte and Femke Ongenae\n                     and Filip De Turck},\n     title        = {{pyRDF2Vec: Python Implementation and Extension of RDF2Vec}},\n     organization = {IDLab},\n     year         = {2020},\n     url          = {https://github.com/IBCNServices/pyRDF2Vec}\n   }\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/IBCNServices/pyRDF2Vec",
    "keywords": "embeddings,knowledge-graph,rdf2vec,word2vec",
    "license": "Ghent University and IMEC vzw",
    "maintainer": "Gilles Vandewiele",
    "maintainer_email": "gilles.vandewiele@ugent.be",
    "name": "pyrdf2vec",
    "package_url": "https://pypi.org/project/pyrdf2vec/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyrdf2vec/",
    "project_urls": {
      "Bug Tracker": "https://github.com/IBCNServices/pyRDF2Vec/issues",
      "Documentation": "https://pyrdf2vec.readthedocs.io/en/latest/",
      "Homepage": "https://github.com/IBCNServices/pyRDF2Vec",
      "Repository": "https://github.com/IBCNServices/pyRDF2Vec"
    },
    "release_url": "https://pypi.org/project/pyrdf2vec/0.2.3/",
    "requires_dist": [
      "aiohttp (>=3.7.4,<4.0.0); extra == \"tests\"",
      "attrs (>=21.2.0,<22.0.0)",
      "cachetools (>=4.2.2,<5.0.0)",
      "gensim (>=4.0.1,<5.0.0); extra == \"docs\" or extra == \"tests\"",
      "matplotlib (>=3.4.2,<4.0.0)",
      "networkx (>=2.5.1,<3.0.0)",
      "nest-asyncio (>=1.5.1,<2.0.0); extra == \"tests\"",
      "numpy (>=1.20.3,<2.0.0); extra == \"tests\"",
      "pandas (>=1.2.4,<2.0.0); extra == \"tests\"",
      "python-Levenshtein (>=0.12.2,<0.13.0)",
      "python-louvain (>=0.15,<0.16)",
      "rdflib (>=5.0.0,<6.0.0); extra == \"docs\" or extra == \"tests\"",
      "scikit-learn (>=0.24.2,<0.25.0); extra == \"docs\"",
      "tomlkit (>=0.7.2,<0.8.0)",
      "torch (>=1.8.1,<2.0.0)",
      "tqdm (>=4.61.0,<5.0.0)"
    ],
    "requires_python": ">=3.7.1,<4.0.0",
    "summary": "Python implementation and extension of RDF2Vec",
    "version": "0.2.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10599769,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dba7711253103e52d3d9d19570a5c280931455e407f5d490b9f8435c16c76a62",
          "md5": "e43f3993fc8e5ec3edcc2a6efd98ea7c",
          "sha256": "a55390c19ed1c9746a446703480080616dfb7be6088dc927683f90d44297815e"
        },
        "downloads": -1,
        "filename": "pyRDF2Vec-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e43f3993fc8e5ec3edcc2a6efd98ea7c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6907,
        "upload_time": "2020-02-04T15:11:44",
        "upload_time_iso_8601": "2020-02-04T15:11:44.419673Z",
        "url": "https://files.pythonhosted.org/packages/db/a7/711253103e52d3d9d19570a5c280931455e407f5d490b9f8435c16c76a62/pyRDF2Vec-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e2c7fb4dd74cbb50f2e7ff7a016cc2b6f5f4944dbd64cfc52297b4a47e120340",
          "md5": "2da227e403108cfc61d2cb294a36e7ec",
          "sha256": "f77b11b2801f6b166c7d38e5f14b53c637471552e5ae77b117bbf34b92df0910"
        },
        "downloads": -1,
        "filename": "pyRDF2Vec-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2da227e403108cfc61d2cb294a36e7ec",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7868,
        "upload_time": "2020-02-04T15:11:46",
        "upload_time_iso_8601": "2020-02-04T15:11:46.990642Z",
        "url": "https://files.pythonhosted.org/packages/e2/c7/fb4dd74cbb50f2e7ff7a016cc2b6f5f4944dbd64cfc52297b4a47e120340/pyRDF2Vec-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e94dad4ee470d30a5cda59f920603c7f07aef9c4070a303db6304a6f6e302ae",
          "md5": "5241364d5649e80e7dfcb8217c2e912f",
          "sha256": "b5885258799836ab5175470c88bdbf2ae1f1264e67c77d000bc5eb92f3971aab"
        },
        "downloads": -1,
        "filename": "pyRDF2Vec-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "5241364d5649e80e7dfcb8217c2e912f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 420340,
        "upload_time": "2020-03-07T07:03:21",
        "upload_time_iso_8601": "2020-03-07T07:03:21.191721Z",
        "url": "https://files.pythonhosted.org/packages/7e/94/dad4ee470d30a5cda59f920603c7f07aef9c4070a303db6304a6f6e302ae/pyRDF2Vec-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ac20b3ebad322a564fe12cfc5318e29fe28242fcd28effa2e7e7933024f70bf4",
          "md5": "54e3ce1426889ce747b943e0a13ad2ce",
          "sha256": "61e0da1e51d309f78c4563e23314b713616326af1ec2898936e07ff70703a9ab"
        },
        "downloads": -1,
        "filename": "pyRDF2Vec-0.0.3-py3.6.egg",
        "has_sig": false,
        "md5_digest": "54e3ce1426889ce747b943e0a13ad2ce",
        "packagetype": "bdist_egg",
        "python_version": "3.6",
        "requires_python": null,
        "size": 36834,
        "upload_time": "2020-03-29T14:18:00",
        "upload_time_iso_8601": "2020-03-29T14:18:00.003439Z",
        "url": "https://files.pythonhosted.org/packages/ac/20/b3ebad322a564fe12cfc5318e29fe28242fcd28effa2e7e7933024f70bf4/pyRDF2Vec-0.0.3-py3.6.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5c272627f4aa327bfd152ba865473788522a8705515975b53548d3076aa77609",
          "md5": "d0f7d18a1e2387b73d5009a84251d7eb",
          "sha256": "72efd79b6086daf605368c5ab11b2a0d306ba13f23e49cd9de796419b7464f77"
        },
        "downloads": -1,
        "filename": "pyRDF2Vec-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "d0f7d18a1e2387b73d5009a84251d7eb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 425257,
        "upload_time": "2020-03-10T15:38:47",
        "upload_time_iso_8601": "2020-03-10T15:38:47.389365Z",
        "url": "https://files.pythonhosted.org/packages/5c/27/2627f4aa327bfd152ba865473788522a8705515975b53548d3076aa77609/pyRDF2Vec-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "27c562709bcaaec67300498ce9f0778b9108a69d1f5ce84badd64de6747e1f21",
          "md5": "3efbdd58ea57b489506548ab1add0ed3",
          "sha256": "73348cc23f86d77877b62045218b4bcc57d93b06a80d221989099e25f177a608"
        },
        "downloads": -1,
        "filename": "pyRDF2Vec-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "3efbdd58ea57b489506548ab1add0ed3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 382851,
        "upload_time": "2020-03-29T14:18:01",
        "upload_time_iso_8601": "2020-03-29T14:18:01.886611Z",
        "url": "https://files.pythonhosted.org/packages/27/c5/62709bcaaec67300498ce9f0778b9108a69d1f5ce84badd64de6747e1f21/pyRDF2Vec-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5d6dd5ff9165510cd4a6d2d5a40aeb2684c01dcfaf7eac4339849851c766a6ed",
          "md5": "5820af723412a8f311774b1434fb9dc5",
          "sha256": "fc7b0ba06ad9027ca873950df0b1c21f9f6a6c5c93191bd0cdd0836b1e15dc07"
        },
        "downloads": -1,
        "filename": "pyRDF2Vec-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "5820af723412a8f311774b1434fb9dc5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 382871,
        "upload_time": "2020-03-29T14:33:05",
        "upload_time_iso_8601": "2020-03-29T14:33:05.900054Z",
        "url": "https://files.pythonhosted.org/packages/5d/6d/d5ff9165510cd4a6d2d5a40aeb2684c01dcfaf7eac4339849851c766a6ed/pyRDF2Vec-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b58107890b0d25a37930a3fbc200e2f22096033bd84ee4e4b7a2a58ec1a3867c",
          "md5": "583b9955e77d5b9cc636a7c58705aa9b",
          "sha256": "75f91f0db2a43e2ccd3198c5353cf6b44aa3b9d7739519a6cc40c9cf1996c90f"
        },
        "downloads": -1,
        "filename": "pyrdf2vec-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "583b9955e77d5b9cc636a7c58705aa9b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.1,<4.0.0",
        "size": 28073,
        "upload_time": "2020-11-02T12:45:00",
        "upload_time_iso_8601": "2020-11-02T12:45:00.522990Z",
        "url": "https://files.pythonhosted.org/packages/b5/81/07890b0d25a37930a3fbc200e2f22096033bd84ee4e4b7a2a58ec1a3867c/pyrdf2vec-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6b775e64935e00298d033bd0ec0e99183ba044621556a19b245d281faa0e6d17",
          "md5": "95211aef418bc91f7f4aa96daf58ed96",
          "sha256": "843ce4f1366aff7535f676ffdfc231c2b613948f85a9b1242edc0a6b80be50e2"
        },
        "downloads": -1,
        "filename": "pyrdf2vec-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "95211aef418bc91f7f4aa96daf58ed96",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.1,<4.0.0",
        "size": 17445,
        "upload_time": "2020-11-02T12:45:02",
        "upload_time_iso_8601": "2020-11-02T12:45:02.254782Z",
        "url": "https://files.pythonhosted.org/packages/6b/77/5e64935e00298d033bd0ec0e99183ba044621556a19b245d281faa0e6d17/pyrdf2vec-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a992ba6e3a70ca0d62d011c18023aab6ab81ea13481630689e6b125c712fc5a9",
          "md5": "6607651b43eaa3c4cd11182ba01e30ed",
          "sha256": "9da8f1681f749d17b1d5c4218e3a7537d6ae300943dd7fe7e6f8d00a19ac50c6"
        },
        "downloads": -1,
        "filename": "pyrdf2vec-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6607651b43eaa3c4cd11182ba01e30ed",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.1,<4.0.0",
        "size": 29730,
        "upload_time": "2020-11-02T15:05:32",
        "upload_time_iso_8601": "2020-11-02T15:05:32.821738Z",
        "url": "https://files.pythonhosted.org/packages/a9/92/ba6e3a70ca0d62d011c18023aab6ab81ea13481630689e6b125c712fc5a9/pyrdf2vec-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a68eed23a15df9fb9f512ddb747f9c6ae8c0496ec4ab85378af52018b35039c",
          "md5": "a2abd04de83309769f360b99ea1dad72",
          "sha256": "93b3747dee0b99e03bf4b2f06531f514ba068abf1c38bde050045052613a4b84"
        },
        "downloads": -1,
        "filename": "pyrdf2vec-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a2abd04de83309769f360b99ea1dad72",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.1,<4.0.0",
        "size": 19555,
        "upload_time": "2020-11-02T15:05:35",
        "upload_time_iso_8601": "2020-11-02T15:05:35.174596Z",
        "url": "https://files.pythonhosted.org/packages/9a/68/eed23a15df9fb9f512ddb747f9c6ae8c0496ec4ab85378af52018b35039c/pyrdf2vec-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "094f2c5b29dd29f693f78aedaab0acb77fed3f9bb5c5777ac26f11948241ed9a",
          "md5": "f1860aa69cbb4dd1916eebf58076fe1a",
          "sha256": "0e04ec72bf7da94f007e71b2b5958dff6f32b68d91a646374c3673849cb88b76"
        },
        "downloads": -1,
        "filename": "pyrdf2vec-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f1860aa69cbb4dd1916eebf58076fe1a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.2,<4.0.0",
        "size": 46100,
        "upload_time": "2021-03-20T11:03:13",
        "upload_time_iso_8601": "2021-03-20T11:03:13.662792Z",
        "url": "https://files.pythonhosted.org/packages/09/4f/2c5b29dd29f693f78aedaab0acb77fed3f9bb5c5777ac26f11948241ed9a/pyrdf2vec-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "38018d428c24d770d584b8f3ddcb3a0eb374e033da5e012eb17ce4269c5a2dcc",
          "md5": "46b2df80ba44242a36fed0d37ed761a5",
          "sha256": "5908193cc0348f57cde8f7f59d717005b41aaad40674fc92d3b6bc91d67f2144"
        },
        "downloads": -1,
        "filename": "pyrdf2vec-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "46b2df80ba44242a36fed0d37ed761a5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.2,<4.0.0",
        "size": 34212,
        "upload_time": "2021-03-20T11:03:16",
        "upload_time_iso_8601": "2021-03-20T11:03:16.016883Z",
        "url": "https://files.pythonhosted.org/packages/38/01/8d428c24d770d584b8f3ddcb3a0eb374e033da5e012eb17ce4269c5a2dcc/pyrdf2vec-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4e58a43467c8c3f1c931c2d2345a4451e83cec63e07abb149cf57f6546e88447",
          "md5": "b7025ce3bfbdb5cabbeed5bd2926f508",
          "sha256": "a533bd51e2592a4700d2a238b692aacab043c7716a7793c952f3082646888cc8"
        },
        "downloads": -1,
        "filename": "pyrdf2vec-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b7025ce3bfbdb5cabbeed5bd2926f508",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 46460,
        "upload_time": "2021-03-22T11:01:53",
        "upload_time_iso_8601": "2021-03-22T11:01:53.033101Z",
        "url": "https://files.pythonhosted.org/packages/4e/58/a43467c8c3f1c931c2d2345a4451e83cec63e07abb149cf57f6546e88447/pyrdf2vec-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "05ccd06c109fe5d0742f3596db404a4c35b3080c6e9d711c000d5eacde5979a7",
          "md5": "c41d036480ed091c4cc57281ff60e8f7",
          "sha256": "944e829a0bfe426698cb63f65e6b0922bd9526c75b757260aff7c0adaa9370ca"
        },
        "downloads": -1,
        "filename": "pyrdf2vec-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c41d036480ed091c4cc57281ff60e8f7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 34623,
        "upload_time": "2021-03-22T11:01:55",
        "upload_time_iso_8601": "2021-03-22T11:01:55.282386Z",
        "url": "https://files.pythonhosted.org/packages/05/cc/d06c109fe5d0742f3596db404a4c35b3080c6e9d711c000d5eacde5979a7/pyrdf2vec-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6450490be33d1ddb71ad1b28c75d587ec6a75384d6e1d28922642bb2831a7436",
          "md5": "fb403c1ec4ee93e0c39492ab521c0526",
          "sha256": "354394ff8f16edf2649e7778b7c5e73c5abec90654b33c392e93385845c1b2f8"
        },
        "downloads": -1,
        "filename": "pyrdf2vec-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fb403c1ec4ee93e0c39492ab521c0526",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 53102,
        "upload_time": "2021-04-02T07:33:41",
        "upload_time_iso_8601": "2021-04-02T07:33:41.580517Z",
        "url": "https://files.pythonhosted.org/packages/64/50/490be33d1ddb71ad1b28c75d587ec6a75384d6e1d28922642bb2831a7436/pyrdf2vec-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5d5fd00124434aa6989bb168acbde63339627776405be4690b3786847596d50f",
          "md5": "b92d1e01685d42eff12367ce1b557dbe",
          "sha256": "2fe803593ec5df8d063452044a84e8ae7922655300322389e49b64db02751a09"
        },
        "downloads": -1,
        "filename": "pyrdf2vec-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b92d1e01685d42eff12367ce1b557dbe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 37838,
        "upload_time": "2021-04-02T07:33:43",
        "upload_time_iso_8601": "2021-04-02T07:33:43.931773Z",
        "url": "https://files.pythonhosted.org/packages/5d/5f/d00124434aa6989bb168acbde63339627776405be4690b3786847596d50f/pyrdf2vec-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "26d3a5ffa76d2eebc15fdcb97937a5a58fd0b820de081d54d1f0a8ea608f19f1",
          "md5": "8d3399898cd8f76dad7a8ea2a90a19a4",
          "sha256": "a62516069fe4083a56bc4c89ecdc2f8b43962813f3c3f6f6e05c7731df6a4786"
        },
        "downloads": -1,
        "filename": "pyrdf2vec-0.2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8d3399898cd8f76dad7a8ea2a90a19a4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.1,<4.0.0",
        "size": 57070,
        "upload_time": "2021-06-09T10:56:14",
        "upload_time_iso_8601": "2021-06-09T10:56:14.965119Z",
        "url": "https://files.pythonhosted.org/packages/26/d3/a5ffa76d2eebc15fdcb97937a5a58fd0b820de081d54d1f0a8ea608f19f1/pyrdf2vec-0.2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "32f749fc2e5eeda0f6330c584d1e8bac015203c6bd5a22499e5f6cd52896a199",
          "md5": "0ca43c7928285cf8db00e3d7194f2ac6",
          "sha256": "5d142c1c615b42bba2108966f9bc8260c47726772ef5d778c7e1470599095d65"
        },
        "downloads": -1,
        "filename": "pyrdf2vec-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "0ca43c7928285cf8db00e3d7194f2ac6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.1,<4.0.0",
        "size": 40214,
        "upload_time": "2021-06-09T10:56:17",
        "upload_time_iso_8601": "2021-06-09T10:56:17.615892Z",
        "url": "https://files.pythonhosted.org/packages/32/f7/49fc2e5eeda0f6330c584d1e8bac015203c6bd5a22499e5f6cd52896a199/pyrdf2vec-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "26d3a5ffa76d2eebc15fdcb97937a5a58fd0b820de081d54d1f0a8ea608f19f1",
        "md5": "8d3399898cd8f76dad7a8ea2a90a19a4",
        "sha256": "a62516069fe4083a56bc4c89ecdc2f8b43962813f3c3f6f6e05c7731df6a4786"
      },
      "downloads": -1,
      "filename": "pyrdf2vec-0.2.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8d3399898cd8f76dad7a8ea2a90a19a4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7.1,<4.0.0",
      "size": 57070,
      "upload_time": "2021-06-09T10:56:14",
      "upload_time_iso_8601": "2021-06-09T10:56:14.965119Z",
      "url": "https://files.pythonhosted.org/packages/26/d3/a5ffa76d2eebc15fdcb97937a5a58fd0b820de081d54d1f0a8ea608f19f1/pyrdf2vec-0.2.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "32f749fc2e5eeda0f6330c584d1e8bac015203c6bd5a22499e5f6cd52896a199",
        "md5": "0ca43c7928285cf8db00e3d7194f2ac6",
        "sha256": "5d142c1c615b42bba2108966f9bc8260c47726772ef5d778c7e1470599095d65"
      },
      "downloads": -1,
      "filename": "pyrdf2vec-0.2.3.tar.gz",
      "has_sig": false,
      "md5_digest": "0ca43c7928285cf8db00e3d7194f2ac6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7.1,<4.0.0",
      "size": 40214,
      "upload_time": "2021-06-09T10:56:17",
      "upload_time_iso_8601": "2021-06-09T10:56:17.615892Z",
      "url": "https://files.pythonhosted.org/packages/32/f7/49fc2e5eeda0f6330c584d1e8bac015203c6bd5a22499e5f6cd52896a199/pyrdf2vec-0.2.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}