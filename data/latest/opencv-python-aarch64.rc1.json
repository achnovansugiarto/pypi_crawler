{
  "info": {
    "author": "Olli-Pekka Heinisuo",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Information Technology",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: C++",
      "Programming Language :: Python",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Image Recognition",
      "Topic :: Software Development"
    ],
    "description": "OpenCV on Wheels\n================\n\n**Unofficial** OpenCV packages for Python.\n\nThis package contains only the OpenCV core modules without the optional contrib modules.\nIf you are looking for a version which includes OpenCV contrib modules, please install `opencv-contrib-python <https://pypi.python.org/pypi/opencv-contrib-python>`__ instead.\n\nThe packages contain pre-compiled OpenCV binary with Python bindings.\nThis enables super fast (usually < 10 seconds) OpenCV installation for Python.\n\nIf you need only OpenCV Python bindings, no separate OpenCV installation is required.\n\n**IMPORTANT NOTE**\n\nMacOS and Linux packages do not support video related functionality (not compiled with FFmpeg).\n\nInstallation and Usage\n----------------------\n\n1. If you have previous/other version of OpenCV installed (e.g. cv2 module in the root of Python's site-packages), remove it before installation to avoid conflicts.\n\n - To further avoid conflicts and to make development easier, Python's `virtual environments <https://docs.python.org/3/library/venv.html>`__ are highly recommended for development purposes.\n\n2. If you have an existing ``opencv-contrib-python`` installation, run ``pip uninstall opencv-contrib-python``\n\n3. Install this package:\n\n``pip install opencv-python``\n\n4. Import the package:\n\n``import cv2``\n\n5. Read `OpenCV documentation <http://docs.opencv.org/>`__\n\n6. Before opening a new issue, read the FAQ below and have a look at the other issues which are already open.\n\nFrequently Asked Questions\n--------------------------\n\n**Q: Do I need to install also OpenCV separately?**\n\nA: No, the packages are special wheel binary packages and they already contain statically built OpenCV binaries.\n\n**Q: Pip does not find package ``opencv-python``?**\n\nA: The wheel package format and manylinux builds are pretty new things. Most likely the issue is related to too old pip and can be fixed by running ``pip install --upgrade pip`` and ``pip install wheel``.\n\n**Q: I need contrib modules?**\n\nA: Please install `opencv-contrib-python <https://pypi.python.org/pypi/opencv-contrib-python>`__ instead. However, note that commercial usage might be restricted in some countries since the contrib modules contain some non-free/patented algorithms.\n\n**Q: Import fails on Windows to some DLL load error?**\n\nA: If the import fails on Windows, make sure you have `Visual C++ redistributable 2015 <https://www.microsoft.com/en-us/download/details.aspx?id=48145>`__ installed. If you are using older Windows version than Windows 10 and latest system updates are not installed, `Universal C Runtime <https://support.microsoft.com/en-us/help/2999226/update-for-universal-c-runtime-in-windows>`__ might be also required.\n\nSee also `this issue <https://github.com/skvark/opencv-python/issues/36>`__ if you are using Anaconda.\n\n**Q: I have some other import errors?**\n\nA: Make sure you have removed old manual installations of OpenCV Python bindings (cv2.so or cv2.pyd in site-packages).\n\n**Q: Why I can't open video files on GNU/Linux distribution X or on macOS?**\n\nA: OpenCV video I/O depends heavily on FFmpeg. Manylinux and macOS OpenCV binaries are not compiled against it.\nThe purpose of these packages is to provide as easy as possible installation experience for OpenCV Python bindings and they should work directly out-of-the-box.\nAdding FFmpeg as an additional dependency without a \"universal\" FFmpeg build (e.g. LGPL licensed build like in the Windows wheels) the goal is considerably harder to achieve. This might change in the future.\n\nDocumentation for opencv-python\n-------------------------------\n\n.. image:: https://img.shields.io/appveyor/ci/skvark/opencv-python.svg?maxAge=3600&label=Windows\n   :target: https://ci.appveyor.com/project/skvark/opencv-python\n   :alt: AppVeyor CI test status (Windows)\n\n.. image:: https://img.shields.io/travis/skvark/opencv-python.svg?maxAge=3600&label=\"Linux / OS X\"\n   :target: https://travis-ci.org/skvark/opencv-python\n   :alt: Travis CI test status (Linux and OS X)\n\nThe aim of this repository is to provide means to package each new\n`OpenCV release <https://github.com/opencv/opencv/releases>`__ for the\nmost used Python versions and platforms.\n\nAt the same time it allows anyone to build a custom version of OpenCV\nfor any Python version: just fork this repo and modify the build files\nand scripts to fit your needs.\n\nBuild process\n-------------\n\nThe project is structured like a normal Python package with a standard\n``setup.py`` file. The build process for a single entry in the build matrices is as follows (see for example\n``appveyor.yml`` file):\n\n1. Checkout repository and submodules\n\n   -  OpenCV is included as submodule and the version is updated\n      manually by maintainers when a new OpenCV release has been made\n   -  Contrib modules are also included as a submodule\n\n2. Find OpenCV version from the sources\n3. Install dependencies (numpy)\n4. Build OpenCV\n\n   -  tests are disabled, otherwise build time increases too much\n   -  there are 2 build matrix entries for each build combination: with and without contrib modules\n   -  Linux builds run in manylinux Docker containers (CentOS 5)\n\n5. Copy each ``.pyd/.so`` file to cv2 folder of this project and\n   generate wheel\n\n   - Linux and macOS wheels are checked with auditwheel and delocate\n\n6. Install the generated wheel\n7. Test that Python can import the library and run some sanity checks\n8. Use twine to upload the generated wheel to PyPI (only in release builds)\n\nCurrently the ``find_version.py`` file parses OpenCV version information\nfrom the OpenCV sources. OpenCV depends on numpy, so ``setup.py`` checks\nthe minimum required numpy version also with the help of pip.\n\nThe ``cv2.pyd/.so`` file is normally copied to site-packages.\nTo avoid polluting the root folder this package wraps\nthe statically built binary into cv2 package and ``__init__.py``\nfile in the package handles the import logic correctly.\n\nSince both ``opencv-python`` and ``opencv-contrib-python`` use the same namespace explained above,\nit is highly recommended to uninstall the other package before switching from example from\n``opencv-python`` to ``opencv-contrib-python`` package.\n\nLicensing\n---------\n\nOpencv-python package (scripts in this repository) is available under\nMIT license.\n\nOpenCV itself is available under `3-clause BSD\nLicense <https://github.com/opencv/opencv/blob/master/LICENSE>`__\n(`LICENSE-3RD-PARTY.txt <https://github.com/skvark/opencv-python/blob/master/LICENSE-3RD-PARTY.txt>`__).\n\nWindows wheels ship with `FFmpeg <http://ffmpeg.org>`__ licensed under the `LGPLv2.1 <http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html>`__.\n\nLinux and MacOS wheels ship with `Qt 4.8.7 <http://doc.qt.io/qt-4.8/lgpl.html>`__ licensed under the `LGPLv2.1 <http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html>`__.\n\nVersioning\n----------\n\nCurrently the ``find_version.py`` script searches for the version\ninformation from OpenCV sources and appends also a revision number\nspecific to this repository to the version string.\n\nReleases\n~~~~~~~~\n\nA release is made and uploaded to PyPI when a new tag is pushed to\nmaster branch. These tags differentiate packages (this repo might have\nmodifications but OpenCV version stays same) and should be incremented\nsequentially. In practice, release version numbers look like this:\n\n``cv_major.cv_minor.cv_revision.package_revision`` e.g. ``3.1.0.0``\n\nDevelopment builds\n~~~~~~~~~~~~~~~~~~\n\nEvery commit to the master branch of this repo will be built. Possible\nbuild artifacts use local version identifiers:\n\n``cv_major.cv_minor.cv_revision+git_hash_of_this_repo`` e.g.\n``3.1.0+14a8d39``\n\nThese artifacts can't be and will not be uploaded to PyPI.\n\nManylinux wheels\n----------------\n\nLinux wheels are built using\n`manylinux <https://github.com/pypa/python-manylinux-demo>`__. These\nwheels should work out of the box for most of the distros\n(which use GNU C standard library) out there since they are built\nagainst an old version of glibc.\n\nSupported Python versions\n-------------------------\n\nPython 2.7 is the only supported version in 2.x series.\nPython 3.x releases follow Numpy releases, for example\nPython 3.3 is no longer supported by Numpy so the support\nfor it has been dropped in ``opencv-python`` too.\n\nCurrently, builds for following Python versions are provided:\n\n- 2.7\n- 3.4\n- 3.5\n- 3.6\n\n\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/skvark/opencv-python",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "opencv-python-aarch64",
    "package_url": "https://pypi.org/project/opencv-python-aarch64/",
    "platform": "",
    "project_url": "https://pypi.org/project/opencv-python-aarch64/",
    "project_urls": {
      "Homepage": "https://github.com/skvark/opencv-python"
    },
    "release_url": "https://pypi.org/project/opencv-python-aarch64/3.3.0.1/",
    "requires_dist": [
      "numpy (>=1.13.1)"
    ],
    "requires_python": "",
    "summary": "Wrapper package for OpenCV python bindings.",
    "version": "3.3.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3189729,
  "releases": {
    "3.3.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "76ff5f18c3c2b8f913226879966dcd77979c7dc09031078b2916583aca3ae879",
          "md5": "fc3751daff7a31dede2661d57faeeefb",
          "sha256": "fe1b69ce42488211e072b2fe576c4243ab255998d52acd59107b087e3cef313d"
        },
        "downloads": -1,
        "filename": "opencv_python_aarch64-3.3.0.1-cp34-cp34m-any.whl",
        "has_sig": false,
        "md5_digest": "fc3751daff7a31dede2661d57faeeefb",
        "packagetype": "bdist_wheel",
        "python_version": "cp34",
        "requires_python": null,
        "size": 8460297,
        "upload_time": "2017-09-20T21:21:55",
        "upload_time_iso_8601": "2017-09-20T21:21:55.932851Z",
        "url": "https://files.pythonhosted.org/packages/76/ff/5f18c3c2b8f913226879966dcd77979c7dc09031078b2916583aca3ae879/opencv_python_aarch64-3.3.0.1-cp34-cp34m-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "76ff5f18c3c2b8f913226879966dcd77979c7dc09031078b2916583aca3ae879",
        "md5": "fc3751daff7a31dede2661d57faeeefb",
        "sha256": "fe1b69ce42488211e072b2fe576c4243ab255998d52acd59107b087e3cef313d"
      },
      "downloads": -1,
      "filename": "opencv_python_aarch64-3.3.0.1-cp34-cp34m-any.whl",
      "has_sig": false,
      "md5_digest": "fc3751daff7a31dede2661d57faeeefb",
      "packagetype": "bdist_wheel",
      "python_version": "cp34",
      "requires_python": null,
      "size": 8460297,
      "upload_time": "2017-09-20T21:21:55",
      "upload_time_iso_8601": "2017-09-20T21:21:55.932851Z",
      "url": "https://files.pythonhosted.org/packages/76/ff/5f18c3c2b8f913226879966dcd77979c7dc09031078b2916583aca3ae879/opencv_python_aarch64-3.3.0.1-cp34-cp34m-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}