{
  "info": {
    "author": "Criteo",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "# FromConfig MlFlow <!-- {docsify-ignore} -->\n[![pypi](https://img.shields.io/pypi/v/fromconfig-mlflow.svg)](https://pypi.python.org/pypi/fromconfig-mlflow)\n[![ci](https://github.com/criteo/fromconfig-mlflow/workflows/Continuous%20integration/badge.svg)](https://github.com/criteo/fromconfig-mlflow/actions?query=workflow%3A%22Continuous+integration%22)\n\nA [fromconfig](https://github.com/criteo/fromconfig) `Launcher` for [MlFlow](https://www.mlflow.org) support.\n\n\n<!-- MarkdownTOC -->\n\n- [Install](#install)\n- [Quickstart](#quickstart)\n- [MlFlow server](#mlflow-server)\n- [Configure MlFlow](#configure-mlflow)\n- [Artifacts and Parameters](#artifacts-and-parameters)\n- [Usage-Reference](#usage-reference)\n  - [`StartRunLauncher`](#startrunlauncher)\n  - [`LogArtifactsLauncher`](#logartifactslauncher)\n  - [`LogParamsLauncher`](#logparamslauncher)\n\n<!-- /MarkdownTOC -->\n\n\n<a id=\"install\"></a>\n## Install\n\n```bash\npip install fromconfig_mlflow\n```\n\n<a id=\"quickstart\"></a>\n## Quickstart\n\nTo activate `MlFlow` login, simply add `--launcher.log=mlflow` to your command\n\n```bash\nfromconfig config.yaml params.yaml --launcher.log=mlflow - model - train\n```\n\nWith\n\n`model.py`\n\n```python\n\"\"\"Dummy Model.\"\"\"\n\nimport mlflow\n\n\nclass Model:\n    def __init__(self, learning_rate: float):\n        self.learning_rate = learning_rate\n\n    def train(self):\n        print(f\"Training model with learning_rate {self.learning_rate}\")\n        if mlflow.active_run():\n            mlflow.log_metric(\"learning_rate\", self.learning_rate)\n```\n\n`config.yaml`\n\n```yaml\nmodel:\n  _attr_: model.Model\n  learning_rate: \"${params.learning_rate}\"\n```\n\n`params.yaml`\n\n```yaml\nparams:\n  learning_rate: 0.001\n```\n\nIt should print\n\n```\nStarted run: http://127.0.0.1:5000/experiments/0/runs/7fe650dd99574784aec1e4b18fceb73f\nTraining model with learning_rate 0.001\n```\n\nIf you navigate to `http://127.0.0.1:5000/experiments/0/runs/7fe650dd99574784aec1e4b18fceb73f` you should see your the logged `learning_rate` metric.\n\n<a id=\"mlflow-server\"></a>\n## MlFlow server\n\nTo setup a local MlFlow tracking server, run\n\n```bash\nmlflow server\n```\n\nwhich should print\n\n```\n[INFO] Starting gunicorn 20.0.4\n[INFO] Listening at: http://127.0.0.1:5000\n```\n\nWe will assume that the tracking URI is `http://127.0.0.1:5000` from now on.\n\n\n<a id=\"configure-mlflow\"></a>\n## Configure MlFlow\n\nYou can set the tracking URI either via an environment variable or via the config.\n\nTo set the `MLFLOW_TRACKING_URI` environment variable\n\n```bash\nexport MLFLOW_TRACKING_URI=http://127.0.0.1:5000\n```\n\nAlternatively, you can set the `mlflow.tracking_uri` config key either via command line with\n\n```bash\nfromconfig config.yaml params.yaml --launcher.log=mlflow --mlflow.tracking_uri=\"http://127.0.0.1:5000\" - model - train\n```\n\nor in a config file with\n\n`launcher.yaml`\n\n```yaml\n# Configure mlflow\nmlflow:\n  # tracking_uri: \"http://127.0.0.1:5000\"  # Or set env variable MLFLOW_TRACKING_URI\n  # experiment_name: \"test-experiment\"  # Which experiment to use\n  # run_id: 12345  # To restore a previous run\n  # run_name: test  # To give a name to your new run\n  # artifact_location: \"path/to/artifacts\"  # Used only when creating a new experiment\n\n# Configure launcher\nlauncher:\n  log: mlflow\n```\n\nand run\n\n```bash\nfromconfig config.yaml params.yaml launcher.yaml - model - train\n```\n\n<a id=\"artifacts-and-parameters\"></a>\n## Artifacts and Parameters\n\nIn this example, we add logging of the config and parameters.\n\nRe-using the [quickstart](#quickstart) code, modify the `launcher.yaml` file\n\n```yaml\n# Configure logging\nlogging:\n  level: 20\n\n# Configure mlflow\nmlflow:\n  # tracking_uri: \"http://127.0.0.1:5000\"  # Or set env variable MLFLOW_TRACKING_URI\n  # experiment_name: \"test-experiment\"  # Which experiment to use\n  # run_id: 12345  # To restore a previous run\n  # run_name: test  # To give a name to your new run\n  # artifact_location: \"path/to/artifacts\"  # Used only when creating a new experiment\n  # include_keys:  # Only log params that match *model*\n  #   - model\n\n# Configure launcher\nlauncher:\n  log:\n    - logging\n    - mlflow\n  parse:\n    - mlflow.log_artifacts\n    - parser\n    - mlflow.log_params\n```\n\nand run\n\n```bash\nfromconfig config.yaml params.yaml launcher.yaml - model - train\n```\n\nwhich prints\n\n```\nINFO:fromconfig_mlflow.launcher:Started run: http://127.0.0.1:5000/experiments/0/runs/<MLFLOW_RUN_ID>\nTraining model with learning_rate 0.001\n```\n\nIf you navigate to the MlFlow run URL, you should see\n- the parameters, a flattened version of the *parsed* config (`model.learning_rate` is `0.001` and not `${params.learning_rate}`)\n- the original config, saved as `config.yaml`\n- the parsed config, saved as `parsed.yaml`\n\n\n<a id=\"usage-reference\"></a>\n## Usage-Reference\n\n<a id=\"startrunlauncher\"></a>\n### `StartRunLauncher`\n\nTo configure MlFlow, add a `mlflow` entry to your config and set the following parameters\n\n- `run_id`: if you wish to restart an existing run\n- `run_name`: if you wish to give a name to your new run\n- `tracking_uri`: to configure the tracking remote\n- `experiment_name`: to use a different experiment than the custom\n  experiment\n- `artifact_location`: the location of the artifacts (config files)\n\nAdditionally, the launcher can be initialized with the following attributes\n\n- `set_env_vars`: if True (default is `True`), set `MLFLOW_RUN_ID` and `MLFLOW_TRACKING_URI`\n- `set_run_id`: if True (default is `False`), set `mlflow.run_id` in config.\n\nFor example,\n\n```yaml\n# Configure logging\nlogging:\n  level: 20\n\n# Configure mlflow\nmlflow:\n  # tracking_uri: \"http://127.0.0.1:5000\"  # Or set env variable MLFLOW_TRACKING_URI\n  # experiment_name: \"test-experiment\"  # Which experiment to use\n  # run_id: 12345  # To restore a previous run\n  # run_name: test  # To give a name to your new run\n  # artifact_location: \"path/to/artifacts\"  # Used only when creating a new experiment\n\n# Configure Launcher\nlauncher:\n  log:\n    - logging\n    - _attr_: mlflow\n      set_env_vars: true\n      set_run_id: true\n```\n\n\n<a id=\"logartifactslauncher\"></a>\n### `LogArtifactsLauncher`\n\nThe launcher can be initialized with the following attributes\n\n- `path_command`: Name for the command file. If `None`, don't log the command.\n- `path_config`: Name for the config file. If `None`, don't log the config.\n\nFor example,\n\n```yaml\n# Configure logging\nlogging:\n  level: 20\n\n# Configure mlflow\nmlflow:\n  # tracking_uri: \"http://127.0.0.1:5000\"  # Or set env variable MLFLOW_TRACKING_URI\n  # experiment_name: \"test-experiment\"  # Which experiment to use\n  # run_id: 12345  # To restore a previous run\n  # run_name: test  # To give a name to your new run\n  # artifact_location: \"path/to/artifacts\"  # Used only when creating a new experiment\n\n# Configure launcher\nlauncher:\n  log:\n    - logging\n    - mlflow\n  parse:\n    - _attr_: mlflow.log_artifacts\n      path_command: launch.sh\n      path_config: config.yaml\n    - parser\n    - _attr_: mlflow.log_artifacts\n      path_command: null\n      path_config: parsed.yaml\n```\n\n\n<a id=\"logparamslauncher\"></a>\n### `LogParamsLauncher`\n\nThe launcher will use `include_keys` and `ignore_keys`  if present in the config in the `mlflow` key.\n\n- `ignore_keys` : If given, don't log some parameters that have some substrings.\n- `include_keys` : If given, only log some parameters that have some substrings. Also shorten the flattened parameter to start at the first match. For example, if the config is `{\"foo\": {\"bar\": 1}}` and `include_keys=(\"bar\",)`, then the logged parameter will be `\"bar\"`.\n\nFor example,\n\n```yaml\n# Configure logging\nlogging:\n  level: 20\n\n# Configure mlflow\nmlflow:\n  # tracking_uri: \"http://127.0.0.1:5000\"  # Or set env variable MLFLOW_TRACKING_URI\n  # experiment_name: \"test-experiment\"  # Which experiment to use\n  # run_id: 12345  # To restore a previous run\n  # run_name: test  # To give a name to your new run\n  # artifact_location: \"path/to/artifacts\"  # Used only when creating a new experiment\n  include_keys:  # Only log params that match *model*\n    - model\n\n# Configure launcher\nlauncher:\n  log:\n    - logging\n    - mlflow\n  parse:\n    - parser\n    - mlflow.log_params\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/criteo/fromconfig-mlflow",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fromconfig-mlflow",
    "package_url": "https://pypi.org/project/fromconfig-mlflow/",
    "platform": null,
    "project_url": "https://pypi.org/project/fromconfig-mlflow/",
    "project_urls": {
      "Homepage": "https://github.com/criteo/fromconfig-mlflow"
    },
    "release_url": "https://pypi.org/project/fromconfig-mlflow/0.4.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "# FromConfig MlFlow <!-- {docsify-ignore} -->",
    "version": "0.4.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16184808,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eaf9d80e06bb6798007afc9d161d38923f428f6d3f2a4ec250b2d9b9827eb652",
          "md5": "67884fcb01b567d2db24b34dac4b3f4b",
          "sha256": "d068a2a4aa739c5e5f27e86dc151a3b8fe1fda437143bee278b018c974ed4b55"
        },
        "downloads": -1,
        "filename": "fromconfig_mlflow-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "67884fcb01b567d2db24b34dac4b3f4b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5838,
        "upload_time": "2021-04-19T21:35:09",
        "upload_time_iso_8601": "2021-04-19T21:35:09.581479Z",
        "url": "https://files.pythonhosted.org/packages/ea/f9/d80e06bb6798007afc9d161d38923f428f6d3f2a4ec250b2d9b9827eb652/fromconfig_mlflow-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5b62de7f866765c16cd6a6434ab33d9f915d333f3886072296740a1e9e0bcb98",
          "md5": "f00019b531d083009e23c2a4a688eb9a",
          "sha256": "3a53536e9da4b44dc7a785937785a1bb80cf0ca38831b995686b273311dd7e85"
        },
        "downloads": -1,
        "filename": "fromconfig_mlflow-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f00019b531d083009e23c2a4a688eb9a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6003,
        "upload_time": "2021-04-20T11:01:17",
        "upload_time_iso_8601": "2021-04-20T11:01:17.802364Z",
        "url": "https://files.pythonhosted.org/packages/5b/62/de7f866765c16cd6a6434ab33d9f915d333f3886072296740a1e9e0bcb98/fromconfig_mlflow-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3e5872d55bf48cdd88fb23704756865224f9b7c5e926532d02ce903b34044186",
          "md5": "469ef666d7e96017ba78f7b75bbbb882",
          "sha256": "6d9d612dab258722688bb1766a9440fa1e615eb309b96bb15d696d2dc8492a94"
        },
        "downloads": -1,
        "filename": "fromconfig_mlflow-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "469ef666d7e96017ba78f7b75bbbb882",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7015,
        "upload_time": "2021-04-22T13:11:19",
        "upload_time_iso_8601": "2021-04-22T13:11:19.966195Z",
        "url": "https://files.pythonhosted.org/packages/3e/58/72d55bf48cdd88fb23704756865224f9b7c5e926532d02ce903b34044186/fromconfig_mlflow-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c7d20cc5bdf952886332f8ecea9f0afb1c939c35e1cbfaed7a7cfd19baa25451",
          "md5": "aabaccad56d305b07796c2d7cae90078",
          "sha256": "a2ad158781a9824f5e0e6678e97184ca3a734c9b539b6037a7795e3a9ada00c6"
        },
        "downloads": -1,
        "filename": "fromconfig_mlflow-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "aabaccad56d305b07796c2d7cae90078",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7217,
        "upload_time": "2021-04-23T13:42:41",
        "upload_time_iso_8601": "2021-04-23T13:42:41.530717Z",
        "url": "https://files.pythonhosted.org/packages/c7/d2/0cc5bdf952886332f8ecea9f0afb1c939c35e1cbfaed7a7cfd19baa25451/fromconfig_mlflow-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "546f119dcb8aa12413b718256cb9305d06c77f3498effaaba853c277b2a4f5de",
          "md5": "9923d15b04aef7b4cb77b6a508780b1d",
          "sha256": "9368fba4b2a5076cebc918e52cac68b4960e5e163ccf4b66de94fcbe14ec1fa2"
        },
        "downloads": -1,
        "filename": "fromconfig_mlflow-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9923d15b04aef7b4cb77b6a508780b1d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7212,
        "upload_time": "2021-04-29T08:40:29",
        "upload_time_iso_8601": "2021-04-29T08:40:29.840237Z",
        "url": "https://files.pythonhosted.org/packages/54/6f/119dcb8aa12413b718256cb9305d06c77f3498effaaba853c277b2a4f5de/fromconfig_mlflow-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a61d14b53a794fcf6a844ff997752fdf5e86c77253b8e9034b2a976e7bc0046b",
          "md5": "d95b4e68c86eecdf9159468d30fb1ebf",
          "sha256": "5ad1fd968fd7972e98a3674f716eb40f1c0c0f22be45049ac0257097af26b8ca"
        },
        "downloads": -1,
        "filename": "fromconfig_mlflow-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d95b4e68c86eecdf9159468d30fb1ebf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7852,
        "upload_time": "2021-04-30T12:07:52",
        "upload_time_iso_8601": "2021-04-30T12:07:52.343881Z",
        "url": "https://files.pythonhosted.org/packages/a6/1d/14b53a794fcf6a844ff997752fdf5e86c77253b8e9034b2a976e7bc0046b/fromconfig_mlflow-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9921535889ba9ae1e22dd6b51a727ff053d2aef090014ba684720a66a6b01dfb",
          "md5": "78c9561821d7c9e203585d1316d290ac",
          "sha256": "f60dfaecf417366f3a280dd976bf9263e59792d18c8bc5e2de2f7b74fde70248"
        },
        "downloads": -1,
        "filename": "fromconfig_mlflow-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "78c9561821d7c9e203585d1316d290ac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8009,
        "upload_time": "2021-04-30T15:18:37",
        "upload_time_iso_8601": "2021-04-30T15:18:37.450178Z",
        "url": "https://files.pythonhosted.org/packages/99/21/535889ba9ae1e22dd6b51a727ff053d2aef090014ba684720a66a6b01dfb/fromconfig_mlflow-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "745493a1129ec92d05fe06cfe2903ae69fae43c741c160576e98b69c17551fc4",
          "md5": "0a65d49455c60e6ce3969dd9f643d30d",
          "sha256": "7d2b883fbec7f7c1c4ffd26ba0cb383eecf4b5d69819672476b40fbe388d6c84"
        },
        "downloads": -1,
        "filename": "fromconfig_mlflow-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0a65d49455c60e6ce3969dd9f643d30d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8855,
        "upload_time": "2022-12-22T11:34:20",
        "upload_time_iso_8601": "2022-12-22T11:34:20.796510Z",
        "url": "https://files.pythonhosted.org/packages/74/54/93a1129ec92d05fe06cfe2903ae69fae43c741c160576e98b69c17551fc4/fromconfig_mlflow-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "745493a1129ec92d05fe06cfe2903ae69fae43c741c160576e98b69c17551fc4",
        "md5": "0a65d49455c60e6ce3969dd9f643d30d",
        "sha256": "7d2b883fbec7f7c1c4ffd26ba0cb383eecf4b5d69819672476b40fbe388d6c84"
      },
      "downloads": -1,
      "filename": "fromconfig_mlflow-0.4.0.tar.gz",
      "has_sig": false,
      "md5_digest": "0a65d49455c60e6ce3969dd9f643d30d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8855,
      "upload_time": "2022-12-22T11:34:20",
      "upload_time_iso_8601": "2022-12-22T11:34:20.796510Z",
      "url": "https://files.pythonhosted.org/packages/74/54/93a1129ec92d05fe06cfe2903ae69fae43c741c160576e98b69c17551fc4/fromconfig_mlflow-0.4.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}