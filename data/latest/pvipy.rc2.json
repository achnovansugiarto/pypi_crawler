{
  "info": {
    "author": "Christoph Hilchenbach",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: Microsoft :: Windows",
      "Programming Language :: Python :: 3"
    ],
    "description": "[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n[![made-with-python](https://img.shields.io/badge/Made%20with-Python-1f425f.svg)](https://www.python.org/)\n[![Made For B&R](https://github.com/hilch/BandR-badges/blob/main/Made-For-BrAutomation.svg)](https://www.br-automation.com)\n\n# Pvi.py\nPython wrapper for [B&amp;R Pvi (process visualization interface)](https://www.br-automation.com/en/products/software/automation-software/automation-netpvi/).\n\nIn times of more modern protocols like OPC-UA, this may seem a bit old-fashioned. \nBut PVI has some hidden strengths and is also very versatile. \nHave a look into the documentation of the 'Lines' (ANSL, INA2000, NET2000, MTC, ADI, DCAN, SNMP, MODBUS, MININET) and what they are used for.\nIn most cases it is used just to communicate with B&R PLCs with 'ANSL' and 'SNMP'.\nUnfortunately its native C-language interface is very complex and also PVI Services (C#) can be a high barrier to entry.\nIt's a lot more fun with Python !\n\n# PVI installation and license\nPVI needs a previous installation of 'PVI Development Setup' from [B&R's homepage](https://www.br-automation.com).\nWithout a PVI license 1TG0500.02 (+ TG Guard e.g. 0TG1000.02) PVI will run for two hours (\"Trial license\")\n). \nAfter this period all PVI based programs will stop working (or will not even start).\nIn that case PVI-Manager must be stopped and restarted again. \nThis can be very annoying if Automation Studio is being used in the background at the same time, because it then has to be restarted as well.\nContact your local B&R office to buy a valid license if trial license is not sufficient for you.\n\n# Installation\n```\npip install pvipy\n```\n\n# Usage\nPVI uses a complex interface to define objects and their parameters but it is well documented\nin its online help system and also in Automation Studio help system.\nThere is no point in repeating this here since most of its parameters still apply in this Python interface.\nInstead, look at the examples to use parts from this for your programs.\n\n# Examples\n\n## Start here\n### [simple1.py](examples/simple1.py) (ANSL)\nthis simple example just registers a variable, reads its value and then exit after a few seconds\n\n### [simple2.py](examples/simple2.py) (ANSL)\nthis simple example just registers a variable for reading and another for writing. In fact we switch on the 'coffee machine' and watch its temperature ...\n\n## Basics\n### [basics1.py](examples/basics1.py) (ANSL)\nshows reading and writing of basic data types\n\n## Create Lists of objects\n### [list_objects1.py](examples/list_objects1.py) (ANSL)\nthis example lists objects with 'global scope' (modules, task and global variables)\nfrom 'coffe machine' cpu and returns status information about them\n\n### [list_objects2.py](examples/list_objects2.py) (ANSL)\nthis example lists global and local variables and their content\n\n### [list_objects3.py](examples/list_objects3.py) (ANSL)\nthis example lists all local variables of a specific task and their content\n\n## Handling modules\n### [modules1.py](examples/modules1.py) (ANSL)\nthis simple example creates a module on CPU by downloading a bytestream and checks if it exists\n\n### [modules2.py](examples/modules2.py) (ANSL)\nthis simple example creates a module on CPU by downloading a bytestream and afterwards uploads it again\n\n### [modules3.py](examples/modules3.py) \nin this exammple we search for BR files (*.br) in a folder and read the type of content\n\n## Handling logger data\n\n### [logger1.py](examples/logger1.py) (ANSL)\nthis example uploads some loggers from CPU\n\n### [logger2.py](examples/logger2.py) \nextract all logger from a systemdump container and save them as csv\n\n\n## GUI\n### [gui1.py](examples/gui1.py) (ANSL)\nthis example shows the usage of Pvi.py in tkinter\n\n## IO\n### [linknode1.py](examples/linknode1.py) (ANSL)\nthis simple example just toggles an forced output\n\n## Simple Network Managament Protocol (SNMP)\n(if you are looking for a 'real' program consider to use [brsnmp](https://github.com/hilch/brsnmp) )\n\n### [browse_for_targets.py](examples/browse_for_targets.py)\nthis example searches for B&R plc in local network with PVI's 'SNMP' line and lists their properties\n\n### [set_ip_address.py](examples/set_ip_address.py)\nthis example searches for a specific B&R plc in local network with PVI's 'SNMP' line and changes its IP address\n\n## Test environment\nCurrent test environment is AS4.1.17.113 / PVI 4.1.12 which can be [downloaded from B&R website](https://www.br-automation.com/en/downloads/software/automation-studio/automation-studio-41/automation-studio-v41/) and Python 3.8\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pvipy",
    "package_url": "https://pypi.org/project/pvipy/",
    "platform": null,
    "project_url": "https://pypi.org/project/pvipy/",
    "project_urls": {
      "Bug Tracker": "https://github.com/hilch/Pvi.py/issues",
      "Homepage": "https://github.com/hilch/Pvi.py"
    },
    "release_url": "https://pypi.org/project/pvipy/0.3.0/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "Python connector for B&R Pvi (process visualization interface)",
    "version": "0.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17272491,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0d2c2093bfe5038d819d7f1ed4a36b07023fff51e2881968c7758b1afb8b850d",
          "md5": "0f453ab4690fe031a35b228647c5f2b3",
          "sha256": "062ef42a4c6e2d9bde043f7d2170a35fd15f6876cd9846465bf7532cded36c15"
        },
        "downloads": -1,
        "filename": "pvipy-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0f453ab4690fe031a35b228647c5f2b3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 64380,
        "upload_time": "2022-11-24T15:14:34",
        "upload_time_iso_8601": "2022-11-24T15:14:34.914685Z",
        "url": "https://files.pythonhosted.org/packages/0d/2c/2093bfe5038d819d7f1ed4a36b07023fff51e2881968c7758b1afb8b850d/pvipy-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3f115962a5a84396a3fde68307b4c674a10556940812b2e20ee4868f0b089d67",
          "md5": "80e399bb472817658030d78256e46961",
          "sha256": "dfebd665342dbd9a0df452067e370e30e372f8c7fe2b42c680a10972c4be2ef6"
        },
        "downloads": -1,
        "filename": "pvipy-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "80e399bb472817658030d78256e46961",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 45056,
        "upload_time": "2022-11-24T15:14:36",
        "upload_time_iso_8601": "2022-11-24T15:14:36.517011Z",
        "url": "https://files.pythonhosted.org/packages/3f/11/5962a5a84396a3fde68307b4c674a10556940812b2e20ee4868f0b089d67/pvipy-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "08035f786ecb9f246998a5a71f7cb613d3d9a6c4f3c544cd1c8b2533bc9e2a99",
          "md5": "98f6a3ed2f1f914b41fc3577f52f8512",
          "sha256": "33052fd5f606f8204707c5048dbcd6d7180a397ebfb860063e61b120ff438468"
        },
        "downloads": -1,
        "filename": "pvipy-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "98f6a3ed2f1f914b41fc3577f52f8512",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 78258,
        "upload_time": "2023-03-13T14:50:23",
        "upload_time_iso_8601": "2023-03-13T14:50:23.694815Z",
        "url": "https://files.pythonhosted.org/packages/08/03/5f786ecb9f246998a5a71f7cb613d3d9a6c4f3c544cd1c8b2533bc9e2a99/pvipy-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "44d6432a9986d0dcb60c6ccc3628f196cc07b26c2a56491ee4c1070f26463eb0",
          "md5": "4097515ca63beeed92aa74e9e09fe936",
          "sha256": "681a7e01276623cf877b8ab8713cff97f4f40510f772ec43c58ae2cdb340a24c"
        },
        "downloads": -1,
        "filename": "pvipy-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4097515ca63beeed92aa74e9e09fe936",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 53212,
        "upload_time": "2023-03-13T14:50:25",
        "upload_time_iso_8601": "2023-03-13T14:50:25.360072Z",
        "url": "https://files.pythonhosted.org/packages/44/d6/432a9986d0dcb60c6ccc3628f196cc07b26c2a56491ee4c1070f26463eb0/pvipy-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "08035f786ecb9f246998a5a71f7cb613d3d9a6c4f3c544cd1c8b2533bc9e2a99",
        "md5": "98f6a3ed2f1f914b41fc3577f52f8512",
        "sha256": "33052fd5f606f8204707c5048dbcd6d7180a397ebfb860063e61b120ff438468"
      },
      "downloads": -1,
      "filename": "pvipy-0.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "98f6a3ed2f1f914b41fc3577f52f8512",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 78258,
      "upload_time": "2023-03-13T14:50:23",
      "upload_time_iso_8601": "2023-03-13T14:50:23.694815Z",
      "url": "https://files.pythonhosted.org/packages/08/03/5f786ecb9f246998a5a71f7cb613d3d9a6c4f3c544cd1c8b2533bc9e2a99/pvipy-0.3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "44d6432a9986d0dcb60c6ccc3628f196cc07b26c2a56491ee4c1070f26463eb0",
        "md5": "4097515ca63beeed92aa74e9e09fe936",
        "sha256": "681a7e01276623cf877b8ab8713cff97f4f40510f772ec43c58ae2cdb340a24c"
      },
      "downloads": -1,
      "filename": "pvipy-0.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "4097515ca63beeed92aa74e9e09fe936",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 53212,
      "upload_time": "2023-03-13T14:50:25",
      "upload_time_iso_8601": "2023-03-13T14:50:25.360072Z",
      "url": "https://files.pythonhosted.org/packages/44/d6/432a9986d0dcb60c6ccc3628f196cc07b26c2a56491ee4c1070f26463eb0/pvipy-0.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}