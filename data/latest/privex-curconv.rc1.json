{
  "info": {
    "author": "Chris (Someguy123) @ Privex",
    "author_email": "chris@privex.io",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Privex Python Currency Converter CLI\n\nA small CLI tool for quick currency conversions on the command line\n\nOfficial Repo: https://github.com/Privex/python-curconv\n\n```\n+===================================================+\n|                 © 2021 Privex Inc.                |\n|               https://www.privex.io               |\n+===================================================+\n|                                                   |\n|        Python Currency Converter CLI              |\n|        License: X11/MIT                           |\n|                                                   |\n|        Core Developer(s):                         |\n|                                                   |\n|          (+)  Chris (@someguy123) [Privex]        |\n|                                                   |\n+===================================================+\n\nPython Currency Converter CLI - A small CLI tool for quick currency conversions on the command line\nCopyright (c) 2021    Privex Inc. ( https://www.privex.io )\n```\n\n## Quickstart\n\n### Install\n\n```sh\n# We recommend using the highest version of Python available on your system,\n# check by typing 'python3.' and pushing tab (on some shells you may need to \n# press tab two or three times for tab suggestions).\npython3.8 -m pip install -U privex-curconv\n\n# If you can't use 'python3.x -m pip', then you can install using the classic 'pip3'\n# command, which will generally use your system default python3 version.\npip3 install -U privex-curconv\n\n# If you want to be able to support caching rates in both Redis and Memcached,\n# install privex-curconv with the 'cache' extra:\npython3.8 -m pip install -U 'privex-curconv[cache]'\n\n# If you only want either Redis OR Memcached support, you can install with\n# the appropriate extra, depending on which cache you want.\npython3.8 -m pip install -U 'privex-curconv[redis]'\npython3.8 -m pip install -U 'privex-curconv[memcached]'\n```\n\n### Using the tool\n\nFirst figure out whether you can use `conv` - or if you'll need to use `python3 -m privex.curconv`\n\n```sh\n# By default, this package should install the 'conv' utility into /usr/local/bin, or ~/.local/bin\n# so that you can just type the 'conv' command like so:\nconv --help\n\n# If for some reason the 'conv' command doesn't work, you can also run the CLI tool using the\n# python3 module executor argument:\npython3 -m privex.curconv --help\n```\n\nNow lets try it out - it should work out of the box:\n\nGet the exchange rate for **20 USD** to **GBP**\n\n```sh\nconv 20 usd to gbp\n```\n\nIf you'd rather it show `x.xx USD = x.xx GBP` rather than just `x.xx`, you can pass `-f` to enable \"full mode\":\n\n```sh\nconv -f 20 usd to gbp\n```\n\nIf you want a different number of decimal places on the exchange rates, you can use the flag `-d` / `-dp` / `--dp` / `--decimals`\n\ne.g. `-dp 5` means 5 decimal places, so this would output `14.48240` (at the time of writing):\n\n```sh\nconv -dp 5 20 usd to gbp\n```\n\nGet all exchange rates for GBP, but only show the **favourite currencies** which by default are: `USD, EUR, GBP, CAD, SEK, TRY`\n\n```sh\nconv 1 gbp\n```\n\nYou can also specify currency amounts with symbols, however, you may need to quote your query if you use symbols, as they may upset your shell:\n\n```sh\nconv '£20.00'\nconv '$50 to CAD'\nconv -f 'CA$30 to £'\n```\n\nIf you want to dynamically adjust the **favourite currencies** for a single query, you can use the `-c` flag:\n\n```sh\nconv -c AUD,NZD,CAD,HKD,CHF 5000 SEK\n```\n\nIf you want to see ALL available exchange rates for a given currency + amount, you can use the `-a` flag:\n\n```sh\nconv -a 20 gbp\n```\n\n### Configuring the tool\n\n#### Dynamically pass ENV vars via the system environment\n\nFor a single command, you can pass \"inline ENV variables\" to change the environment for just that\nsingle command:\n\n```sh\nCURRENCY_LIST=\"CHF,CAD,AUD,BZD\" DEFAULT_DP=4 CACHE_ADAPTER=redis conv -f '5 usd'\n```\n\nIf you want to temporarily change certain settings, and have them persist for several commands, but\nwithout having to permanently alter your configuration - you can simply EXPORT the ENV vars in your shell,\nand they'll stick until you either close your terminal/shell, or manually unset them:\n\n```sh\nexport CURRENCY_LIST=\"CHF,CAD,AUD,BZD\"\nexport DEFAULT_DP=4\nexport CACHE_ADAPTER=redis\n\nconv -f '5 usd'\nconv -f '10.2361 eur'\n\nunset CURRENCY_LIST\nconf -f '2.4829 HKD'\nunset DEFAULT_DP CACHE_ADAPTER\n```\n\n#### Generate and create the default ENV file in one command\n\nYou can quickly generate a template default ENV config file at `~/.curconv.env` by running\nthe tool with the `-Gd` (G = generate, d = default config) flag:\n\n```sh\nuser@example ~ $ conv -Gd\n >>> Generating ENV file to default location: /Users/example/.curconv.env\n +++ Successfully wrote ENV file to default location: /Users/example/.curconv.env\n```\n\nThe ENV generator commands generate an ENV config with all major supported ENV vars set to their\ndefault settings, unless it inherited some config vars from the environment, or from a config file.\n\nThe settings that it dumps, are the ones that were actually configured in memory at the time of\nrunning the command.\n\nAll of the generated ENV vars are optional, so you should remove or comment out any ENV vars which\nyou aren't changing from the default, so that it's clear which ENV vars you've changed, and which ones\nare still set to their defaults.\n\n#### Config search path\n\nBy default, the tool searches the following locations in order for a config file, and it will\nonly use the first file it finds:\n\n- `~/.curconv`\n- `~/.curconv.env` (the file which `-Gd` outputs to)\n- `/etc/curconv`\n- `/etc/curconv.env`\n\n#### Generate an ENV file to stdout\n\nIf you want to generate/dump the current configuration in ENV format, but without it being written\nto a file, you can use `-G` on it's own, which will generate the same ENV configuration as `-Gd` does,\nbut outputs it to STDOUT instead of to a file (which you can easily pipe).\n\n```sh\nuser@example ~ $ conv -G\nDEBUG=false\nLOG_LEVEL=WARNING\nAPI_BASE=https://api.ratesapi.io/api\nAPI_CACHE_TIME=3600\nCACHE_ADAPTER=sqlite\nDEFAULT_DP=3\nBASE_COIN=EUR\nCURRENCY_LIST=USD,EUR,GBP,CAD,SEK,TRY\nCUR_SYMBOLS=CA$:CAD,CAD$:CAD,AU$:AUD,AUD$:AUD,NZ$:NZD,NZD$:NZD,$:USD,€:EUR,£:GBP,kr:SEK\n```\n\nFor example, you could pipe it into `sudo tee` to write the configuration to a file which isn't\nwritable by your current user, e.g. `/etc/curconv.env`\n\n```sh\nconv -G | sudo tee /etc/curconv.env\n```\n\n#### Generate an ENV file and output it directly to a file\n\nYou can also use `-G` with `-Gf [file]` to generate an ENV file AND output it to a file of your choice.\n\nNOTE: Unlike `-Gd`, the `-Gf` argument does not work on it's own, you must specify `-G` to generate an ENV\nconfiguration, and use `-Gf` to override where it outputs from the default of stdout.\n\n```sh\nuser@example ~ $ conv -G -Gf /tmp/convtest.env\n >>> Generating ENV file to custom location: /tmp/convtest.env\n +++ Successfully wrote ENV file to custom location: /tmp/convtest.env\n```\n\n\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Privex/python-curconv",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "privex-curconv",
    "package_url": "https://pypi.org/project/privex-curconv/",
    "platform": "",
    "project_url": "https://pypi.org/project/privex-curconv/",
    "project_urls": {
      "Homepage": "https://github.com/Privex/python-curconv"
    },
    "release_url": "https://pypi.org/project/privex-curconv/0.5.0/",
    "requires_dist": [
      "privex-helpers (>=3)",
      "privex-loghelper",
      "httpx[http2]",
      "python-dotenv",
      "async-property",
      "aiosqlite (>=0.12)",
      "privex-db (>=0.9.2)",
      "privex-helpers[cache] ; extra == 'cache'",
      "pylibmc ; extra == 'memcached'",
      "aiomcache ; extra == 'memcached'",
      "aioredis (>=1.3) ; extra == 'redis'",
      "hiredis ; extra == 'redis'",
      "redis ; extra == 'redis'"
    ],
    "requires_python": "",
    "summary": "Python Currency Converter CLI - A small CLI tool for quick currency conversions on the command line",
    "version": "0.5.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10096932,
  "releases": {
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "44c4b914907746241b17519af79d8626304c17d2a5b63ee4f0b4cccb5479de20",
          "md5": "105282aaf71e759debe368c1b5f3da3d",
          "sha256": "baea243c877fc212a1f1ee9237d86c2868a7f074e2568121af9125de069296c8"
        },
        "downloads": -1,
        "filename": "privex_curconv-0.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "105282aaf71e759debe368c1b5f3da3d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 24136,
        "upload_time": "2021-04-18T09:13:11",
        "upload_time_iso_8601": "2021-04-18T09:13:11.699464Z",
        "url": "https://files.pythonhosted.org/packages/44/c4/b914907746241b17519af79d8626304c17d2a5b63ee4f0b4cccb5479de20/privex_curconv-0.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "16edf46a7772b546d81b2c60e9bb73db07da7c109854f4aa6d845afccb10853f",
          "md5": "176729e15b9db3b1958c89ead1dbf0f5",
          "sha256": "12ed36c6a00ad87170dbf9337dd293bd233b6d94ef65029716104d3d5f4234a7"
        },
        "downloads": -1,
        "filename": "privex_curconv-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "176729e15b9db3b1958c89ead1dbf0f5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 22562,
        "upload_time": "2021-04-18T09:13:13",
        "upload_time_iso_8601": "2021-04-18T09:13:13.247412Z",
        "url": "https://files.pythonhosted.org/packages/16/ed/f46a7772b546d81b2c60e9bb73db07da7c109854f4aa6d845afccb10853f/privex_curconv-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "44c4b914907746241b17519af79d8626304c17d2a5b63ee4f0b4cccb5479de20",
        "md5": "105282aaf71e759debe368c1b5f3da3d",
        "sha256": "baea243c877fc212a1f1ee9237d86c2868a7f074e2568121af9125de069296c8"
      },
      "downloads": -1,
      "filename": "privex_curconv-0.5.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "105282aaf71e759debe368c1b5f3da3d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 24136,
      "upload_time": "2021-04-18T09:13:11",
      "upload_time_iso_8601": "2021-04-18T09:13:11.699464Z",
      "url": "https://files.pythonhosted.org/packages/44/c4/b914907746241b17519af79d8626304c17d2a5b63ee4f0b4cccb5479de20/privex_curconv-0.5.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "16edf46a7772b546d81b2c60e9bb73db07da7c109854f4aa6d845afccb10853f",
        "md5": "176729e15b9db3b1958c89ead1dbf0f5",
        "sha256": "12ed36c6a00ad87170dbf9337dd293bd233b6d94ef65029716104d3d5f4234a7"
      },
      "downloads": -1,
      "filename": "privex_curconv-0.5.0.tar.gz",
      "has_sig": false,
      "md5_digest": "176729e15b9db3b1958c89ead1dbf0f5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 22562,
      "upload_time": "2021-04-18T09:13:13",
      "upload_time_iso_8601": "2021-04-18T09:13:13.247412Z",
      "url": "https://files.pythonhosted.org/packages/16/ed/f46a7772b546d81b2c60e9bb73db07da7c109854f4aa6d845afccb10853f/privex_curconv-0.5.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}