{
  "info": {
    "author": "ANJAL.P",
    "author_email": "opensource.anj.official@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# PySide2extn\n\nAn extension for the Python PySide2 Qt Framework which expands the scope of the PySide2 package with many different modern widgets. Current release is occupied with two widget which are not natively present in the PySide2 package.\n\n*Widget Available*:\n\n* Round Progress Bar\n* Spiral Progress Bar\n\n*Go to [Home Page](https://anjalp.github.io/PySide2extn/) of Documentation for further Help*\n\n## Getting Started\n\n* Install PySide2extn using `pip`\n\n``` python\npip install PySide2extn\n```\n\n* Build from source: After cloning the repo, go to the directory and open `cmd` or `terminal`\n\n``` bash\n$ python3 setup.py sdist bdist_wheel\n```\n\n* Install from `.whl` file.\n\n```python\npip install <PySide2extn------.whl>file\n```\n\nTo verify that installation is complete, print out the `pip list` and search for the PySide2extn package. \n\n*For more details go to the [Official PySide2extn Documentation Getting Started](https://anjalp.github.io/PySide2extn/pages/get_started)*\n\n## Quick Demo\n\nQuick demo help you to check weather you have successfully installed the Python Package. It comes with a UI loaded with all the widgets in this package with its different customized views. Users can easily differentiate the different styling elements used by widgets.\n\nAfter installing the PySide2extn/PyQt5extn the users can try out quick demo by:\n\n1. Open the `cmd` or `terminal`. Open `Python`\n\n```python\n>> from PySide2extn.demo import demo\n>> demo.main()   #PRESS ENTER AND YOU WILL GET A DEMO APPLICATION\n```\n\n*For further details go to the [Official PySide2extn Documentation Quick Demo](https://anjalp.github.io/PySide2extn/pages/get_started#quick-demo-application)*\n\n## Documentation\n\nOfficial Documentation for PySide2extn is detailed in: [PySide2extn Documentation](https://anjalp.github.io/PySide2extn/).\n\n* [Getting Started](https://anjalp.github.io/PySide2extn/pages/get_started)\n* [Examples](https://anjalp.github.io/PySide2extn/pages/example)\n* [Classes](https://anjalp.github.io/PySide2extn/pages/classes)\n* [Errors and Exceptions](https://anjalp.github.io/PySide2extn/pages/error&exception)\n* [Version History](https://anjalp.github.io/PySide2extn/pages/version)\n* [FAQ's](https://anjalp.github.io/PySide2extn/pages/faqs)\n* [Official PySide2extn/PyQt5extn Form](https://forms.gle/yfKVK85sLLMJMCfJA)\n\n## Examples\n\n* **Default Round Progress Bar**\n\n```python\nimport sys\nfrom PySide2 import QtCore, QtWidgets, QtGui\n\nfrom PySide2extn.RoundProgressBar import roundProgressBar #IMPORT THE EXTENSION LIBRARY\n\nx = 0\np = 1\n\nclass MyWidget(QtWidgets.QWidget):\n    def __init__(self):\n        QtWidgets.QWidget.__init__(self)\n\n        self.hello = 'Round Progress Bar'\n        self.button = QtWidgets.QPushButton(\"Click me to change Value\")\n        self.text = QtWidgets.QLabel(\"Round Progress Bar\")\n        self.text.setAlignment(QtCore.Qt.AlignCenter)\n\n        #CREATING THE ROUND PROGRESS BAR OBJECT\n        self.rpb = roundProgressBar()\n\n        self.layout = QtWidgets.QVBoxLayout()\n        self.layout.addWidget(self.text)\n        self.layout.addWidget(self.button)\n\n        # ADDING THE ROUND PROGRESS BAR OBJECT TO THE                                             # BOTTOM OF THE LAYOUT\n        self.layout.addWidget(self.rpb)\n\n        self.setLayout(self.layout)\n        self.button.clicked.connect(self.magic) #BUTTON PRESSED EVENT\n\n    def magic(self):\n        global x, p\n        x = x + 10*p\n        if x==100:\n            p = -1\n        elif x==0:\n            p = 1\n        self.rpb.rpb_setValue(x)        #CHANGING THE VALUE OF THE PROGRESS BAR\n        out_text = 'Round Progress Bar: ' + str(x) + '%'\n        self.text.setText(out_text)\n\nif __name__ == \"__main__\":\n    app = QtWidgets.QApplication(sys.argv)\n    widget = MyWidget()\n    widget.show()\n    sys.exit(app.exec_())\n```\n\nIn this demo, we first created an object of the Round Progress Bar:\n\n```python\nself.rpb = roundProgressBar() #CREATING THE ROUND PROGRESS BAR OBJECT\n```\n\nAfter that calling the Round Progress Bar object to display the value of progress using:\n\n```python\nself.rpb.rpb_setValue(x) #CHANGING THE VALUE OF THE PROGRESS BAR\n```\n\nThe `rpb_setValue(value)` takes an `int` as an argument and updates to change the value of the progress bar to the value given.\n\n*For More examples on Round Progress Bar go to: [Official PySide2extn Documentation Examples](https://anjalp.github.io/PySide2extn/pages/examples/rpbExamples)*\n\n* **Default Spiral Progress Bar**\n\n```python\nimport sys\nfrom PySide2 import QtCore, QtWidgets, QtGui\n\n#IMPORT THE EXTENSION  LIBRARY\nfrom PySide2extn.SpiralProgressBar import spiralProgressBar \n\nx = 0\np = 1\n\nclass MyWidget(QtWidgets.QWidget):\n    def __init__(self):\n        QtWidgets.QWidget.__init__(self)\n\n        self.hello = 'Spiral Progress Bar'\n        self.button = QtWidgets.QPushButton(\"Click me to change Value\")\n        self.text = QtWidgets.QLabel(\"Spiral Progress Bar\")\n        self.text.setAlignment(QtCore.Qt.AlignCenter)\n\n        #CREATING THE SPIRAL PROGRESS BAR OBJECT\n        self.spb = spiralProgressBar()    \n\n        #ADDING WIDGETS TO THE VERTICAL LAYOUT\n        self.layout = QtWidgets.QVBoxLayout()\n        self.layout.addWidget(self.text)\n        self.layout.addWidget(self.button)\n\n        # ADDING THE SPIRAL PROGRESS BAR OBJECT TO THE LAYOUT\n        self.layout.addWidget(self.spb) \n\n        self.setLayout(self.layout)\n        self.button.clicked.connect(self.magic) #BUTTON PRESSED EVENT\n\n    def magic(self):\n        global x, p\n        x = x + 10*p\n        if x==100:\n            p = -1\n        elif x==0:\n            p = 1\n\n        #CHANGING THE VALUE OF THE 3 DEFAULT PROGRESS BAR\n        self.spb.spb_setValue((x, x*2, x*3)) \n\n        out_text = 'Spiral Progress Bar: '  \n        out_text = out_text + str(x) + '%, ' + str(2*x) + '%, ' + str(3*x) + '%'\n        self.text.setText(out_text)\n\nif __name__ == \"__main__\":\n    app = QtWidgets.QApplication(sys.argv)\n    widget = MyWidget()\n    widget.show()\n    sys.exit(app.exec_())\n```\n\n- Here first create a spiralProgressBar object and then add the progress bar to a layout and control the steps of the progress bar by the clicking of the button. \n\n  ```python\n  self.spb = spiralProgressBar()\t\t\n  ```\n\n- Here we create a spiralProgressBar object instance and then use the `self.spb` as the spiral progress bar to influence its charactor like:\n\n  ```python\n  self.spb.spb_setValue((x, x*2, x*3))\n  ```\n\n- Since the default progress bar has 3 individual concentric circle, where each can be controlled individually, we pass a tuple containing the individual value for manipulating each concentric progress bar, to the function `spb_setValue()` , which only accepts a tuple of length equal to the number of concentric progress bar. Every function which can manipulate the properties of the Spiral Progress Bar uses the same idea. The order of entering the value are shown below:\n\n*For More examples on Spiral Progress Bar go to: [Official PySide2extn Documentation Examples](https://anjalp.github.io/PySide2extn/pages/examples/spbExamples)*\n\n## Help\n\n- **PySide2extn/PyQt5extn is not working in my setup**: Go to Github [PySide2extn](https://github.com/anjalp/PySide2extn) repo. and raise an issue or just fill the official [PySide2extn/PyQt5extn Form](https://forms.gle/yfKVK85sLLMJMCfJA).\n- **Unknown errors**: Raise a GitHub issue or fill the official [PySide2extn/PyQt5extn Form](https://forms.gle/yfKVK85sLLMJMCfJA)\n\n## Support\n\n- Please feel free to contribute to the project by sharing the idea you have, which is not natively present in the PySide2/PyQt5 but essential for your workflow.\n- You can fill up the official [PySide2extn/PyQt5extn Form](https://forms.gle/yfKVK85sLLMJMCfJA) where you just Brief the idea you have and also provide an active email address which is required for us to connect you.\n- If your idea worth the use, then definitely it will be available in the next update of the PySide2extn/PyQt5extn.\n- If this package made your life easy, then please share your experience with us [Here](https://forms.gle/yfKVK85sLLMJMCfJA)\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/anjalp/PySide2extn",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "PySide2extn",
    "package_url": "https://pypi.org/project/PySide2extn/",
    "platform": "",
    "project_url": "https://pypi.org/project/PySide2extn/",
    "project_urls": {
      "Homepage": "https://github.com/anjalp/PySide2extn"
    },
    "release_url": "https://pypi.org/project/PySide2extn/1.0.0/",
    "requires_dist": [
      "PySide2"
    ],
    "requires_python": ">=3.6",
    "summary": "PySide2extn is an Open Source Python Programming language extension for PySide2, which greatly enhances the capability of the PySide2 library with extra widgets and more.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8788230,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d3b6e1b97eda1be4e13aeb6fd59908bc22de9f4a2955f1c693cb2589accca3cb",
          "md5": "59cfc15cdcccc46c98ff6e96dff7995a",
          "sha256": "ef106e0afa23423e50fb2f9c97674fcfafa9a7351fe15dd79d532b96935f1b26"
        },
        "downloads": -1,
        "filename": "PySide2extn-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "59cfc15cdcccc46c98ff6e96dff7995a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 20281,
        "upload_time": "2020-12-01T09:37:43",
        "upload_time_iso_8601": "2020-12-01T09:37:43.474932Z",
        "url": "https://files.pythonhosted.org/packages/d3/b6/e1b97eda1be4e13aeb6fd59908bc22de9f4a2955f1c693cb2589accca3cb/PySide2extn-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1be43cfcaf3d69e16a3c52f027dd55beff05145ebaa91b8aaab12a6dee4f7665",
          "md5": "496a2de2dac74d3c2ae71f39d5039813",
          "sha256": "dbd83af4e6cd71d6fec597b80048049221434ecfdc671bb49fd4b07b2c79f874"
        },
        "downloads": -1,
        "filename": "PySide2extn-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "496a2de2dac74d3c2ae71f39d5039813",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 21058,
        "upload_time": "2020-12-01T09:37:45",
        "upload_time_iso_8601": "2020-12-01T09:37:45.920701Z",
        "url": "https://files.pythonhosted.org/packages/1b/e4/3cfcaf3d69e16a3c52f027dd55beff05145ebaa91b8aaab12a6dee4f7665/PySide2extn-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d3b6e1b97eda1be4e13aeb6fd59908bc22de9f4a2955f1c693cb2589accca3cb",
        "md5": "59cfc15cdcccc46c98ff6e96dff7995a",
        "sha256": "ef106e0afa23423e50fb2f9c97674fcfafa9a7351fe15dd79d532b96935f1b26"
      },
      "downloads": -1,
      "filename": "PySide2extn-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "59cfc15cdcccc46c98ff6e96dff7995a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 20281,
      "upload_time": "2020-12-01T09:37:43",
      "upload_time_iso_8601": "2020-12-01T09:37:43.474932Z",
      "url": "https://files.pythonhosted.org/packages/d3/b6/e1b97eda1be4e13aeb6fd59908bc22de9f4a2955f1c693cb2589accca3cb/PySide2extn-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1be43cfcaf3d69e16a3c52f027dd55beff05145ebaa91b8aaab12a6dee4f7665",
        "md5": "496a2de2dac74d3c2ae71f39d5039813",
        "sha256": "dbd83af4e6cd71d6fec597b80048049221434ecfdc671bb49fd4b07b2c79f874"
      },
      "downloads": -1,
      "filename": "PySide2extn-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "496a2de2dac74d3c2ae71f39d5039813",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 21058,
      "upload_time": "2020-12-01T09:37:45",
      "upload_time_iso_8601": "2020-12-01T09:37:45.920701Z",
      "url": "https://files.pythonhosted.org/packages/1b/e4/3cfcaf3d69e16a3c52f027dd55beff05145ebaa91b8aaab12a6dee4f7665/PySide2extn-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}