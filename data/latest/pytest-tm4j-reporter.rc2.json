{
  "info": {
    "author": "",
    "author_email": "contact@klika-tech.com",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Pytest",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Software Development :: Quality Assurance",
      "Topic :: Software Development :: Testing",
      "Topic :: Utilities"
    ],
    "description": "# Project summary\nPytest plugin which allows to upload test execution result to [TM4J Cloud](https://support.smartbear.com/tm4j-cloud/docs/index.html) version. Plugin works on the top of the `json-reporter` pytest plugin and `tm4j_reporter_api` library.\n\n\n# Install and setup\n## How to build\n    python setup.py sdist\n\n## How to install\n    # PyPi\n    pip install pytest-tm4j-reporter\n    # Git\n    pip install git+ssh://git@github.com:Klika-Tech/tm4j_reporter_pytest.git\n\n## Plugin configuration\n\nCreate `pytest.ini` within your project and put the variables there (see below table)\n\n| Param                      | Mandatory | Description                                                                                                                                            | Example                  |\n|----------------------------|-----------|--------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------|\n| tm4j_project_prefix        | Yes       | Jira / TM4J project prefix without trailing dash                                                                                                       | QT                       |\n| tm4j_api_key               | Yes       | API key to access TM4j. To get it see  [Instruction](https://support.smartbear.com/tm4j-cloud/docs/api-and-test-automation/generating-access-keys.html)|                          |\n| tm4j_testcycle_key         | No        | TM4J existing test cycle key. A new test cycle created if not specified                                                                                | R40                      |\n| tm4j_testcycle_prefix      | No        | Prefix for new test cycle. Default: autoreport. Full test cycle name is \"<prefix> <day-month-year hh:mm:ss UTC>\". e.g. \"14-Jul-2020 16:41:24 UTC\"      | Login autotests          |\n| tm4j_testcycle_description | No        | Description for the new test cycle. A description for the existing test cycle won't be changed                                                         | Update v14.43.136        |\n| tm4j_project_webui_host    | No        | Jira server base host. If provided will generate a link to a newly created test cycle                                                                  | klika-tech.atlassian.net |\n| tm4j_result_mapping        | No        | How to map test result - Pytest vs TM4J. tm4j-default (default) or pytest. see \"Result mapping\" section                                                | tm4j-default             |\n\nExample:\n\n```ini\n[pytest]\ntm4j_project_prefix = QT\ntm4j_api_key = eyJ0eXAiOiJKV1QiLCJhb\ntm4j_testcycle_key = R40\ntm4j_testcycle_prefix = login tests\ntm4j_testcycle_description = Update v14.43.136 \ntm4j_project_webui_host = klika-tech.atlassian.net\n```\n\n# Usage\n\n## Writing the tests\nTo be able to report your test to TM4J your test names should follow convetion: `test_T<TM4J test id>_the_rest_of_test_name.`\nSo workflow will be:\n*  Create test case in TM4J (from UI)\n*  Notice it's unique id\n*  Create test in pytest with TM4J prefix in name.\n\nLet's say in TM4J project with project key `QT` full test key is `QT-T1234`. In this case in pytest it should be created like\n\n```python\ndef test_T1234_login_as_user():\n    ...test code goes here\n```\n\n## Result mapping\nPytest has test result status names different from TM4J  \nThe mapping is configured via **tm4j_result_mapping** parameter (optional)  \n\nPossible values: tm4j-default (default), pytest  \nBy default, the statuses are mapped according to the following scheme:  \n\n Pytest   | TM4J         | Description\n ---------|--------------|-------------\n passed   | Pass         | \n failed   | Fail         |\n skipped  | Not executed |\n xfailed  | Pass         | Failed, as it should\n xpassed  | Fail         | Should fail, but was passed\n\nTM4J test result statuses are configurable  \nFor more precise mapping, pytest statuses can be added to TM4J via its UI\n\n Pytest   | TM4J\n ---------|------\n passed   | Pass \n failed   | Fail\n skipped  | Skip\n xfailed  | xFail\n xpassed  | xPass\n\ntm4j_result_mapping=pytest will activate this scheme  \n\n## Metadata\nIt is possible to add and report additional metadata using `tm4j_r` fixture. Currently supported only `comment`. Example:\n\n```python\ndef test_T1701_my_test(tm4j_r):\n    tm4j_r.comment = 'Here might be some comment for this test<br>second line here<br>third line here'\n```\n\nThe published comment field will also contain a crash info in case if the test execution fails. Example:\n```text\ncrash info:\npath: /opt/work/tm4j_reporter_pytest/tests/common/report_tests.py\nlineno: 17\nmessage: assert False\n```\nPlease note that if you use tm4j_r fixture you won't be able to run the test without enabling plugin `--tm4j`\n\n## How to run\nFinally we're ready to run our test(s) with reporting to TM4J. It is simple as just run pytest with `--tm4j` option  \n`--tm4j-no-publish` flag can be used if you don't want to publish your execution results to TM4J\n\n```bash\npytest --tm4j\n```\n\n## Result\n* .report.json file created in CWD\n* The file is overwritten each time\n* Execution result is uploaded to TM4J\n\n# Developer notes\n* Line wrapping border = 120 chars\n\n# License\nThis software is licensed under the [MIT License](http://en.wikipedia.org/wiki/MIT_License)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Klika-Tech/tm4j_reporter_pytest",
    "keywords": "python pytest tm4j jira test testmanagement report",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pytest-tm4j-reporter",
    "package_url": "https://pypi.org/project/pytest-tm4j-reporter/",
    "platform": "any",
    "project_url": "https://pypi.org/project/pytest-tm4j-reporter/",
    "project_urls": {
      "Homepage": "https://github.com/Klika-Tech/tm4j_reporter_pytest"
    },
    "release_url": "https://pypi.org/project/pytest-tm4j-reporter/0.1.2/",
    "requires_dist": [
      "pytest",
      "pytest-json-report",
      "tm4j-reporter-api (==0.1.1)"
    ],
    "requires_python": ">=3.6",
    "summary": "Cloud Jira Test Management (TM4J) PyTest reporter plugin",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8085172,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c4d96a2fc5b095c5ff325201c433c8b33a2a3b401fb405e5e26f75a617984000",
          "md5": "edb17e3c6b7b80cbd8db7f57da5771ef",
          "sha256": "50620ae001ba1ec64eab7f6132b554e104873ae44881621a610d690eaf2c3e29"
        },
        "downloads": -1,
        "filename": "pytest_tm4j_reporter-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "edb17e3c6b7b80cbd8db7f57da5771ef",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8694,
        "upload_time": "2020-08-24T08:30:26",
        "upload_time_iso_8601": "2020-08-24T08:30:26.428063Z",
        "url": "https://files.pythonhosted.org/packages/c4/d9/6a2fc5b095c5ff325201c433c8b33a2a3b401fb405e5e26f75a617984000/pytest_tm4j_reporter-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a44b44b71267c35a59fb75ed55b4edf17be4ecb7b69d5c6482525981ae1696cb",
          "md5": "842ceccddccf0a43a4cb036e1307a9cd",
          "sha256": "33916cc98875eb01d80b75fb7cf1965d8f6db20d729ac180e72a5a9dd5d8562d"
        },
        "downloads": -1,
        "filename": "pytest-tm4j-reporter-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "842ceccddccf0a43a4cb036e1307a9cd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8469,
        "upload_time": "2020-08-24T08:30:27",
        "upload_time_iso_8601": "2020-08-24T08:30:27.585048Z",
        "url": "https://files.pythonhosted.org/packages/a4/4b/44b71267c35a59fb75ed55b4edf17be4ecb7b69d5c6482525981ae1696cb/pytest-tm4j-reporter-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aeefeafa06d4c8c45aecdd0c3da2aef4de495d0fdbb11bcc466efa3dbb670c66",
          "md5": "71f33f7aa8b6e9fc0f303e4d6cd673ce",
          "sha256": "065e303a39bf0f01db19c8af7e7532a7318263cb4b2e5d04aa885e3ee4815879"
        },
        "downloads": -1,
        "filename": "pytest_tm4j_reporter-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "71f33f7aa8b6e9fc0f303e4d6cd673ce",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8837,
        "upload_time": "2020-09-01T10:47:17",
        "upload_time_iso_8601": "2020-09-01T10:47:17.528721Z",
        "url": "https://files.pythonhosted.org/packages/ae/ef/eafa06d4c8c45aecdd0c3da2aef4de495d0fdbb11bcc466efa3dbb670c66/pytest_tm4j_reporter-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "93c18bf2d62e653917950906786a993497bcc010d1784fe07ed7c33ba8a4ba55",
          "md5": "fba0bb15b5a4be05fb65bdbcd9fbbf6a",
          "sha256": "279d2828cb8a1bfaa3c1235563eedc930a2454d160ab618f59bdd7a8263122c5"
        },
        "downloads": -1,
        "filename": "pytest-tm4j-reporter-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "fba0bb15b5a4be05fb65bdbcd9fbbf6a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8728,
        "upload_time": "2020-09-01T10:47:18",
        "upload_time_iso_8601": "2020-09-01T10:47:18.326778Z",
        "url": "https://files.pythonhosted.org/packages/93/c1/8bf2d62e653917950906786a993497bcc010d1784fe07ed7c33ba8a4ba55/pytest-tm4j-reporter-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "aeefeafa06d4c8c45aecdd0c3da2aef4de495d0fdbb11bcc466efa3dbb670c66",
        "md5": "71f33f7aa8b6e9fc0f303e4d6cd673ce",
        "sha256": "065e303a39bf0f01db19c8af7e7532a7318263cb4b2e5d04aa885e3ee4815879"
      },
      "downloads": -1,
      "filename": "pytest_tm4j_reporter-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "71f33f7aa8b6e9fc0f303e4d6cd673ce",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 8837,
      "upload_time": "2020-09-01T10:47:17",
      "upload_time_iso_8601": "2020-09-01T10:47:17.528721Z",
      "url": "https://files.pythonhosted.org/packages/ae/ef/eafa06d4c8c45aecdd0c3da2aef4de495d0fdbb11bcc466efa3dbb670c66/pytest_tm4j_reporter-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "93c18bf2d62e653917950906786a993497bcc010d1784fe07ed7c33ba8a4ba55",
        "md5": "fba0bb15b5a4be05fb65bdbcd9fbbf6a",
        "sha256": "279d2828cb8a1bfaa3c1235563eedc930a2454d160ab618f59bdd7a8263122c5"
      },
      "downloads": -1,
      "filename": "pytest-tm4j-reporter-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "fba0bb15b5a4be05fb65bdbcd9fbbf6a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 8728,
      "upload_time": "2020-09-01T10:47:18",
      "upload_time_iso_8601": "2020-09-01T10:47:18.326778Z",
      "url": "https://files.pythonhosted.org/packages/93/c1/8bf2d62e653917950906786a993497bcc010d1784fe07ed7c33ba8a4ba55/pytest-tm4j-reporter-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}