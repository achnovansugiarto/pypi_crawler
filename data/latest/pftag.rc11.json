{
  "info": {
    "author": "FNNDSC",
    "author_email": "rudolph.pienaar@childrens.harvard.edu",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Bio-Informatics",
      "Topic :: Scientific/Engineering :: Medical Science Apps."
    ],
    "description": "pftag\n=====\n\n|Version| |MIT License| |ci|\n\nAbstract\n--------\n\nThis software provides a string token parser, useful in cases where a\nfixed *a priori* template string is to be resolved at run time by some\nprocess.\n\nOverview\n--------\n\n``pftag`` is a simple app that is both a stand alone client as well as a\npython module. Its main purpose is to parse *template strings*. A\ntemplate string is one where sub-parts of the string are *tokenized* by\na token marker. These tokens are resolved at execution time.\n\nFrom a taxonomy perspective, ``pftag`` implements a highly opinionated\nSGML string parser.\n\nInstallation\n------------\n\nLocal python venv\n~~~~~~~~~~~~~~~~~\n\nFor *on the metal* installations, ``pip`` it:\n\n.. code:: bash\n\n   pip install pftag\n\ndocker container\n~~~~~~~~~~~~~~~~\n\n.. code:: bash\n\n   docker pull fnndsc/pftag\n\nRunnning\n--------\n\nScript mode\n~~~~~~~~~~~\n\nTo use ``pftag`` in script mode simply call the script with appropriate\nCLI arguments\n\n.. code:: bash\n\n\n   pftag --tag \"run-%timestamp-on-%platform-%arch.log\"\n\n   run-2023-03-10T13:41:58.921660-05:00-on-Linux-64bit-ELF.log\n\nModule mode\n~~~~~~~~~~~\n\nThere are several ways to use ``pftag`` in python module mode. Perhaps\nthe simplest is just to declare an object and instantiate with an empty\ndictionary, and then call the object with the ``tag`` to process.\n\nIf additional values need to be set in the declaration, use an\nappropriate dictionary. The dictionary keys are *identical* to the\nscript CLI keys (*sans* the leading ``--``):\n\n.. code:: python\n\n   from pftag import pftag\n\n   str_tag:str = r'run-%timestamp-on-%platform-%arch.log'\n\n   tagger:pftag.Pftag      = pftag.Pftag({})\n   d_tag:dict              = tagger(str_tag)\n\n   # The result is in the\n   print(d_tag['results'])\n\nArguments\n---------\n\nThe set of CLI arguments can also be passed in a dictionary of\n\n.. code:: python\n\n   {\n           \"CLIkey1\": \"value1\",\n           \"CLIkey2\": \"value2\",\n   }\n\n.. code:: html\n\n          --tag <tagString>\n           The tag string to process.\n\n           [--tagMarker <mark>]\n           The marker string that identifies a tag (default \"%\")\n\n           [--funcMarker <mark>]\n           The marker string that pre- and post marks a function (default \"_\").\n\n           [--funcArgMarker <mark>]\n           The marker string between function arguments and also between arg list\n           and function (default \"|\").\n\n           [--funcSep <mark>]\n           The marker string separating successive function/argument constructs\n           (default \",\").\n\n           [--inputdir <inputdir>]\n           An optional input directory specifier. Reserverd for future use.\n\n           [--outputdir <outputdir>]\n           An optional output directory specifier. Reserved for future use.\n\n           [--man]\n           If specified, show this help page and quit.\n\n           [--verbosity <level>]\n           Set the verbosity level. The app is currently chatty at level 0 and level 1\n           provides even more information.\n\n           [--debug]\n           If specified, toggle internal debugging. This will break at any breakpoints\n           specified with 'Env.set_trace()'\n\n           [--debugTermsize <253,62>]\n           Debugging is via telnet session. This specifies the <cols>,<rows> size of\n           the terminal.\n\n           [--debugHost <0.0.0.0>]\n           Debugging is via telnet session. This specifies the host to which to connect.\n\n           [--debugPort <7900>]\n           Debugging is via telnet session. This specifies the port on which the telnet\n           session is listening.\n\nAvailable tags and functions\n----------------------------\n\n::\n\n           TAGS\n\n               %literal   : simply replace the tag with the word 'literal'.\n                            This tag is only useful in conjunction with the\n                            'echo' function and together they provide a means\n                            to inject arbitary text typically for md5 hashing.\n               %name      : return the os.name\n               %platform  : return the platform.system()\n               %release   : return the platform.release()\n               %machine   : return the platform.machine()\n               %arch      : return the '%s' % platform.architecture()\n               %timestamp :  return the a timestamp\n\n           FUNCTIONS\n\n           md5|<chars>         : perform an md5hash on the upstream, limit result\n                                 to <chars> characters\n\n                                   eg: \"%timestamp_md5|4_\"\n\n                                 replace the %timestamp in the input string with\n                                 an md5 hash of 4 chars of the actual timestamp.\n\n           chrplc|<t>|<n>      : replace <t> with <n> in the upstream input.\n\n                                   eg: \"%timestamp_chrplc|:|-_\"\n\n                                 replace the %timestamp in the input string with\n                                 the actual timestamp where all \":\" are replaced with\n                                 \"-\".\n\n           strmsk|<mask>       : for each '*' in mask pattern use ups tream char\n                                 otherwise replace with <mask> char .\n\n                                   eg: \"%platform_strmsk|l****_\"\n\n                                 replace the %platform in the input string with\n                                 a string that starts with an 'l' and don't change\n                                 the subsequent 4 characters. If the %platform\n                                 has more than 4 characters, only return the 5\n                                 chars as masked.\n\n           dcmname|<s>|<tail>  : replace any upstream %VAR with a DICOM formatted\n                                 name. If <s> is passed, the seed the faker module\n                                 with <s> (any string) -- this guarantees that calls\n                                 with that same <s> result in the same name. If\n                                 <tail> is passed, then append <tail> to the name.\n\n                                   eg: %NAME_dcmname_\n\n                                 may produce \"BROOKS^JOHN\". Each call will have\n                                 a different name. However,\n\n                                   %NAME_dcmname|foobar_\n\n                                 will always generate \"SCHWARTZ^THOMAS\". While\n\n                                   %NAME_dcmname|foobar|^ANON\n\n                                 will generate \"SCHWARTZ^THOMAS^ANON\"\n\n           echo|<something>    : Best used with the %literal tag for legibility, will\n                                 replace the tag with <something>. Be careful of commas\n                                 in the <something>. If they are to be preserved you\n                                 will need to set --funcSep to something other than a\n                                 comma.\n\n                                   %literal_echo|why-are-we-here?_\n\n                                 will replace the %literal with \"why-are-we-here\".\n                                 This is most useful when literal data is to obscured\n                                 in a template. For instance:\n\n                                   %literal_echo|Subject12345,md5|5_\n\n                                 where say \"Subject12345\" is privileged information but\n                                 important to add to the string. In this case, we can\n                                 add and then hash that literal string. In future,\n                                 if we know all the privileged strings, we can easily\n                                 hash and then and lookup in any `pftag` generated\n                                 strings to resolve which hashes belong to which\n                                 subjects.\n\nFunctions\n---------\n\n::\n\n       OVERVIEW\n       In addition to performing a lookup on a template string token, this\n       package can also process the lookup value in various ways. These\n       process functions follow a Reverse Polish Notation (RPN) schema of\n\n           tag func1(args1) func2(args2) func3(args3) ...\n\n       where first the <tag> is looked up, then this lookup is processed by\n       <func1>. The result is then processed by <func2>, and so on and\n       so forth, each functional optionally with a set a arguments.\n\n       This RPN approach also mirrors the standard UNIX piping schema.\n\n       A function (or function list) that is to be applied to a <tag> should\n       be connected to the tag with a <funcMarker> string, usually '_'. The\n       final function should end with the same <funcMarker>, so\n\n           %tag_func1,func2,...,funcN_\n\n       will apply the function list in order to the tag value lookup called\n       \"tag\"; each successive evaluation consuming the result of its\n       predecessor as input.\n\n       Some functions can accept arguments. Arguments are passed to a function\n       with a <funcArgMarker> string, typically '|', that also separates\n       arguments:\n\n           %tag_func|a1|a2|a3_\n\n       will pass 'a1', 'a2', and 'a3' as parameters to \"func\".\n\n       Finally, several functions can be chained within the '_'...'_' by\n       separating the <func>|<argList> constructs with commas, so pedantically\n\n           %tag_func1|a1|a2|a3,func2|b1|b2|b3_\n\n       All these special characters (tag marker, function pre- and post,\n       arg separation, function separation can be overriden. For instance,\n       with a selection of\n\n       --tagMarker \"@\" --funcMarker \"[\" --funcArgMarker \",\" --funcSep \"|\"\n\n       strings can be specified as\n\n           @tag[func,a1,a2,a3|func2,b1,b2,b3[\n\n       where preference/legibilty is left to the user\n\nDevelopment\n-----------\n\nInstructions for developers.\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nTo debug, the simplest mechanism is to trigger the internal remote\ntelnet session with the ``--debug`` CLI. Then, in the code, simply add\n``Env.set_trace()`` calls where appropriate. These can remain in the\ncodebase (i.e. you don’t need to delete/comment them out) since they are\nonly *live* when a ``--debug`` flag is passed.\n\nTesting\n~~~~~~~\n\nRun unit tests using ``pytest``.\n\n.. code:: bash\n\n   # In repo root dir:\n   pytest\n\n*-30-*\n\n.. |Version| image:: https://img.shields.io/docker/v/fnndsc/pftag?sort=semver\n   :target: https://hub.docker.com/r/fnndsc/pftag\n.. |MIT License| image:: https://img.shields.io/github/license/fnndsc/pftag\n   :target: https://github.com/FNNDSC/pftag/blob/main/LICENSE\n.. |ci| image:: https://github.com/FNNDSC/pftag/actions/workflows/build.yml/badge.svg\n   :target: https://github.com/FNNDSC/pftag/actions/workflows/build.yml\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/FNNDSC/pftag",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pftag",
    "package_url": "https://pypi.org/project/pftag/",
    "platform": null,
    "project_url": "https://pypi.org/project/pftag/",
    "project_urls": {
      "Homepage": "https://github.com/FNNDSC/pftag"
    },
    "release_url": "https://pypi.org/project/pftag/1.2.22/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A tag parser with optional functional support",
    "version": "1.2.22",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17323602,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "30d435d8626a58daba2b3b40e6ce9fe6fa4782d581f0f1d44ab1e0ce64ca387f",
          "md5": "49b22a3800ae9edb93635086ea223715",
          "sha256": "830154e4c84229c7a2ddf5aec7db58f96cbbc97a2adf60780a98355bc60424ac"
        },
        "downloads": -1,
        "filename": "pftag-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "49b22a3800ae9edb93635086ea223715",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17897,
        "upload_time": "2023-03-10T21:03:45",
        "upload_time_iso_8601": "2023-03-10T21:03:45.230449Z",
        "url": "https://files.pythonhosted.org/packages/30/d4/35d8626a58daba2b3b40e6ce9fe6fa4782d581f0f1d44ab1e0ce64ca387f/pftag-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d5390127141014b10623dd95f107456587b69f51b40567af700aa7aa6b7afb5",
          "md5": "2aac617294c46751a5d0baff20afdf6f",
          "sha256": "c9407949312e06286b5f540055193f820bb51bb1db1264f81d4ac763e824b5a8"
        },
        "downloads": -1,
        "filename": "pftag-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2aac617294c46751a5d0baff20afdf6f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18289,
        "upload_time": "2023-03-12T19:06:35",
        "upload_time_iso_8601": "2023-03-12T19:06:35.602702Z",
        "url": "https://files.pythonhosted.org/packages/1d/53/90127141014b10623dd95f107456587b69f51b40567af700aa7aa6b7afb5/pftag-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aaf4bb6847ad5ecbea1b1b4dd28b5a3fbd2b836fa3b393da1a3b39664e1bdf4b",
          "md5": "789913e97a9314e14efefcb5266ed43f",
          "sha256": "e90e0d277d2db279c02993cfede62e2dfe2a675821dc9722baf2a5c380463827"
        },
        "downloads": -1,
        "filename": "pftag-1.2.10.tar.gz",
        "has_sig": false,
        "md5_digest": "789913e97a9314e14efefcb5266ed43f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17952,
        "upload_time": "2023-03-14T01:30:18",
        "upload_time_iso_8601": "2023-03-14T01:30:18.068121Z",
        "url": "https://files.pythonhosted.org/packages/aa/f4/bb6847ad5ecbea1b1b4dd28b5a3fbd2b836fa3b393da1a3b39664e1bdf4b/pftag-1.2.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.14": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4a45fe0b2cce3743dcf2504900da9c271cb5a823576325a639a1af7050a5a17d",
          "md5": "ebcf5b3b8682c2a9d07bf49c3a2874e5",
          "sha256": "7a007ab5e7065acea6bd7555b4ab3407710ada7bbb7e49aa062c566c08087232"
        },
        "downloads": -1,
        "filename": "pftag-1.2.14.tar.gz",
        "has_sig": false,
        "md5_digest": "ebcf5b3b8682c2a9d07bf49c3a2874e5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18213,
        "upload_time": "2023-03-14T15:29:43",
        "upload_time_iso_8601": "2023-03-14T15:29:43.009949Z",
        "url": "https://files.pythonhosted.org/packages/4a/45/fe0b2cce3743dcf2504900da9c271cb5a823576325a639a1af7050a5a17d/pftag-1.2.14.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.18": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9856d97873666a10102e44628d6b5ebc22684586d63d8dc89c7b44f8b9558052",
          "md5": "21299fa1b14cb390380f270430b9aff1",
          "sha256": "d10ba8207187768b7395478f6e160f920429cf9021da5de90f77a54a497086b5"
        },
        "downloads": -1,
        "filename": "pftag-1.2.18.tar.gz",
        "has_sig": false,
        "md5_digest": "21299fa1b14cb390380f270430b9aff1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18199,
        "upload_time": "2023-03-14T20:10:29",
        "upload_time_iso_8601": "2023-03-14T20:10:29.530079Z",
        "url": "https://files.pythonhosted.org/packages/98/56/d97873666a10102e44628d6b5ebc22684586d63d8dc89c7b44f8b9558052/pftag-1.2.18.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7b4ef9edb7fc1ca399f2958fee1d6182197af1d077c2d3af5f4b8bf813a4c7cc",
          "md5": "83a2deafa6d3e137545db95de0eef159",
          "sha256": "832d701be763924e19d15c82ce571e4a955cd9f3d783e90b55a489429ffd5ad5"
        },
        "downloads": -1,
        "filename": "pftag-1.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "83a2deafa6d3e137545db95de0eef159",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17720,
        "upload_time": "2023-03-12T21:33:12",
        "upload_time_iso_8601": "2023-03-12T21:33:12.537647Z",
        "url": "https://files.pythonhosted.org/packages/7b/4e/f9edb7fc1ca399f2958fee1d6182197af1d077c2d3af5f4b8bf813a4c7cc/pftag-1.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.20": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5ff483fe09c852110cacb61d3e872bde182555f2448a354f1cb1f84d7e959850",
          "md5": "eb17468b3f14ee7975ca3d63706f6879",
          "sha256": "32b85505e01d6c0909336d3596cdaf67d4d8178d5f8b8ce314686b0bd756ad51"
        },
        "downloads": -1,
        "filename": "pftag-1.2.20.tar.gz",
        "has_sig": false,
        "md5_digest": "eb17468b3f14ee7975ca3d63706f6879",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18259,
        "upload_time": "2023-03-16T19:19:05",
        "upload_time_iso_8601": "2023-03-16T19:19:05.407059Z",
        "url": "https://files.pythonhosted.org/packages/5f/f4/83fe09c852110cacb61d3e872bde182555f2448a354f1cb1f84d7e959850/pftag-1.2.20.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.22": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0a849c533a2b95ce374542e7f5defc6b7626dbb0ac3a7117a7aeb2fb4a355419",
          "md5": "6998dad5b6f1912994728207b31573a4",
          "sha256": "8b1e24068b176066ec399f0047baf0f73710f29643656321c62fe401fbd8def5"
        },
        "downloads": -1,
        "filename": "pftag-1.2.22.tar.gz",
        "has_sig": false,
        "md5_digest": "6998dad5b6f1912994728207b31573a4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18222,
        "upload_time": "2023-03-16T19:25:33",
        "upload_time_iso_8601": "2023-03-16T19:25:33.955149Z",
        "url": "https://files.pythonhosted.org/packages/0a/84/9c533a2b95ce374542e7f5defc6b7626dbb0ac3a7117a7aeb2fb4a355419/pftag-1.2.22.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7b14eb3f140bd91e86f8a4ac7588e590529afb2bb8a60115f62d5aa1e5408105",
          "md5": "11b317ef00643a6b5f5967ae1c616e99",
          "sha256": "20ebdfef1430dcd574c19ce3a899111a12c087a2ad45bd83f40f93deed5dc8f2"
        },
        "downloads": -1,
        "filename": "pftag-1.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "11b317ef00643a6b5f5967ae1c616e99",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17824,
        "upload_time": "2023-03-13T17:57:09",
        "upload_time_iso_8601": "2023-03-13T17:57:09.221748Z",
        "url": "https://files.pythonhosted.org/packages/7b/14/eb3f140bd91e86f8a4ac7588e590529afb2bb8a60115f62d5aa1e5408105/pftag-1.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "85ed0293d142ad35979f7948de458725debd0cfdeb6fffd40f390c5a31afa2de",
          "md5": "b4c8a580eb7ee5a1343b07f1644c692a",
          "sha256": "efeffdb23e60ea7bed422eeecee81ac17e965676764073a8d41153f13ee57edf"
        },
        "downloads": -1,
        "filename": "pftag-1.2.6.tar.gz",
        "has_sig": false,
        "md5_digest": "b4c8a580eb7ee5a1343b07f1644c692a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17882,
        "upload_time": "2023-03-13T20:58:05",
        "upload_time_iso_8601": "2023-03-13T20:58:05.407270Z",
        "url": "https://files.pythonhosted.org/packages/85/ed/0293d142ad35979f7948de458725debd0cfdeb6fffd40f390c5a31afa2de/pftag-1.2.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "00897808f9b9ff42815895b8c997551707402373775dbb226b522267c9027e43",
          "md5": "899e84518fa1012822570a7d5e4df007",
          "sha256": "b2edfa3dad7ca99ef31fe914612b7ad1ffaf7f6717356fb99e5e1c7d3140b8af"
        },
        "downloads": -1,
        "filename": "pftag-1.2.8.tar.gz",
        "has_sig": false,
        "md5_digest": "899e84518fa1012822570a7d5e4df007",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17891,
        "upload_time": "2023-03-13T22:00:25",
        "upload_time_iso_8601": "2023-03-13T22:00:25.978600Z",
        "url": "https://files.pythonhosted.org/packages/00/89/7808f9b9ff42815895b8c997551707402373775dbb226b522267c9027e43/pftag-1.2.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0a849c533a2b95ce374542e7f5defc6b7626dbb0ac3a7117a7aeb2fb4a355419",
        "md5": "6998dad5b6f1912994728207b31573a4",
        "sha256": "8b1e24068b176066ec399f0047baf0f73710f29643656321c62fe401fbd8def5"
      },
      "downloads": -1,
      "filename": "pftag-1.2.22.tar.gz",
      "has_sig": false,
      "md5_digest": "6998dad5b6f1912994728207b31573a4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 18222,
      "upload_time": "2023-03-16T19:25:33",
      "upload_time_iso_8601": "2023-03-16T19:25:33.955149Z",
      "url": "https://files.pythonhosted.org/packages/0a/84/9c533a2b95ce374542e7f5defc6b7626dbb0ac3a7117a7aeb2fb4a355419/pftag-1.2.22.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}