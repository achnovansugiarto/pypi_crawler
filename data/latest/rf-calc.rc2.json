{
  "info": {
    "author": "Pruthiraj Jayasingh",
    "author_email": "pruthirajjayasingh.4u@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v2 or later (GPLv2+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "## This Project can help you calculating Receptive Field in every layer for CNN model ##\n\n# How to use ?  \n    from rf_calc import receptive_field \n    model = models.GoogLeNet().to(device)\n    image_input_size  = 224\n    RF = receptive_field(model,image_input_size)\n\n# Output \n    Kernel_size : Size of the convolving kernel.\n    Padding : Zero-padding added to both sides of the input image.\n    Stride : Stride of the convolution. Default: 1\n    Input_Img_size : Shape of image as input to the layer.\n    Output_Img_size : Shape of image as Output from the layer.\n    Receptive_field : Shape pf Receptive field in the layer.\n\n    =======================================Reciptive Field Calculator========================================\n    |    | Kernel_size   | Padding   |   Stride | Input_Img_size   | Output_Img_size   | Receptive_field   |\n    |---:|:--------------|:----------|---------:|:-----------------|:------------------|:------------------|\n    |  0 | 7*7           | 3         |        2 | 224*224          | 112*112           | 7*7               |\n    |  1 | 3*3           | NO        |        2 | 112*112          | 55*55             | 11*11             |\n    |  2 | 1*1           | NO        |        1 | 55*55            | 55*55             | 11*11             |\n    |  3 | 3*3           | 1         |        1 | 55*55            | 55*55             | 19*19             |\n    |  4 | 3*3           | NO        |        2 | 55*55            | 27*27             | 27*27             |\n    |  5 | 1*1           | NO        |        1 | 27*27            | 27*27             | 27*27             |\n    |  6 | 1*1           | NO        |        1 | 27*27            | 27*27             | 27*27             |\n    |  7 | 3*3           | 1         |        1 | 27*27            | 27*27             | 43*43             |\n    |  8 | 1*1           | NO        |        1 | 27*27            | 27*27             | 43*43             |\n    |  9 | 3*3           | 1         |        1 | 27*27            | 27*27             | 59*59             |\n    | 10 | 3*3           | 1         |        1 | 27*27            | 27*27             | 75*75             |\n    | 11 | 1*1           | NO        |        1 | 27*27            | 27*27             | 75*75             |\n    | 12 | 1*1           | NO        |        1 | 27*27            | 27*27             | 75*75             |\n    | 13 | 1*1           | NO        |        1 | 27*27            | 27*27             | 75*75             |\n    | 14 | 3*3           | 1         |        1 | 27*27            | 27*27             | 91*91             |\n    | 15 | 1*1           | NO        |        1 | 27*27            | 27*27             | 91*91             |\n    | 16 | 3*3           | 1         |        1 | 27*27            | 27*27             | 107*107           |\n    | 17 | 3*3           | 1         |        1 | 27*27            | 27*27             | 123*123           |\n    | 18 | 1*1           | NO        |        1 | 27*27            | 27*27             | 123*123           |\n    | 19 | 3*3           | NO        |        2 | 27*27            | 13*13             | 139*139           |\n    | 20 | 1*1           | NO        |        1 | 13*13            | 13*13             | 139*139           |\n    | 21 | 1*1           | NO        |        1 | 13*13            | 13*13             | 139*139           |\n    | 22 | 3*3           | 1         |        1 | 13*13            | 13*13             | 171*171           |\n    | 23 | 1*1           | NO        |        1 | 13*13            | 13*13             | 171*171           |\n    | 24 | 3*3           | 1         |        1 | 13*13            | 13*13             | 203*203           |\n    | 25 | 3*3           | 1         |        1 | 13*13            | 13*13             | 235*235           |\n    | 26 | 1*1           | NO        |        1 | 13*13            | 13*13             | 235*235           |\n    | 27 | 1*1           | NO        |        1 | 13*13            | 13*13             | 235*235           |\n    | 28 | 1*1           | NO        |        1 | 13*13            | 13*13             | 235*235           |\n    | 29 | 3*3           | 1         |        1 | 13*13            | 13*13             | 267*267           |\n    | 30 | 1*1           | NO        |        1 | 13*13            | 13*13             | 267*267           |\n    | 31 | 3*3           | 1         |        1 | 13*13            | 13*13             | 299*299           |\n    | 32 | 3*3           | 1         |        1 | 13*13            | 13*13             | 331*331           |\n    | 33 | 1*1           | NO        |        1 | 13*13            | 13*13             | 331*331           |\n    | 34 | 1*1           | NO        |        1 | 13*13            | 13*13             | 331*331           |\n    | 35 | 1*1           | NO        |        1 | 13*13            | 13*13             | 331*331           |\n    | 36 | 3*3           | 1         |        1 | 13*13            | 13*13             | 363*363           |\n    | 37 | 1*1           | NO        |        1 | 13*13            | 13*13             | 363*363           |\n    | 38 | 3*3           | 1         |        1 | 13*13            | 13*13             | 395*395           |\n    | 39 | 3*3           | 1         |        1 | 13*13            | 13*13             | 427*427           |\n    | 40 | 1*1           | NO        |        1 | 13*13            | 13*13             | 427*427           |\n    | 41 | 1*1           | NO        |        1 | 13*13            | 13*13             | 427*427           |\n    | 42 | 1*1           | NO        |        1 | 13*13            | 13*13             | 427*427           |\n    | 43 | 3*3           | 1         |        1 | 13*13            | 13*13             | 459*459           |\n    | 44 | 1*1           | NO        |        1 | 13*13            | 13*13             | 459*459           |\n    | 45 | 3*3           | 1         |        1 | 13*13            | 13*13             | 491*491           |\n    | 46 | 3*3           | 1         |        1 | 13*13            | 13*13             | 523*523           |\n    | 47 | 1*1           | NO        |        1 | 13*13            | 13*13             | 523*523           |\n    | 48 | 1*1           | NO        |        1 | 13*13            | 13*13             | 523*523           |\n    | 49 | 1*1           | NO        |        1 | 13*13            | 13*13             | 523*523           |\n    | 50 | 3*3           | 1         |        1 | 13*13            | 13*13             | 555*555           |\n    | 51 | 1*1           | NO        |        1 | 13*13            | 13*13             | 555*555           |\n    | 52 | 3*3           | 1         |        1 | 13*13            | 13*13             | 587*587           |\n    | 53 | 3*3           | 1         |        1 | 13*13            | 13*13             | 619*619           |\n    | 54 | 1*1           | NO        |        1 | 13*13            | 13*13             | 619*619           |\n    | 55 | 2*2           | NO        |        2 | 13*13            | 6*6               | 635*635           |\n    | 56 | 1*1           | NO        |        1 | 6*6              | 6*6               | 635*635           |\n    | 57 | 1*1           | NO        |        1 | 6*6              | 6*6               | 635*635           |\n    | 58 | 3*3           | 1         |        1 | 6*6              | 6*6               | 699*699           |\n    | 59 | 1*1           | NO        |        1 | 6*6              | 6*6               | 699*699           |\n    | 60 | 3*3           | 1         |        1 | 6*6              | 6*6               | 763*763           |\n    | 61 | 3*3           | 1         |        1 | 6*6              | 6*6               | 827*827           |\n    | 62 | 1*1           | NO        |        1 | 6*6              | 6*6               | 827*827           |\n    | 63 | 1*1           | NO        |        1 | 6*6              | 6*6               | 827*827           |\n    | 64 | 1*1           | NO        |        1 | 6*6              | 6*6               | 827*827           |\n    | 65 | 3*3           | 1         |        1 | 6*6              | 6*6               | 891*891           |\n    | 66 | 1*1           | NO        |        1 | 6*6              | 6*6               | 891*891           |\n    | 67 | 3*3           | 1         |        1 | 6*6              | 6*6               | 955*955           |\n    | 68 | 3*3           | 1         |        1 | 6*6              | 6*6               | 1019*1019         |\n    | 69 | 1*1           | NO        |        1 | 6*6              | 6*6               | 1019*1019         |\n    | 70 | 1*1           | NO        |        1 | 6*6              | 6*6               | 1019*1019         |\n    | 71 | 1*1           | NO        |        1 | 6*6              | 6*6               | 1019*1019         |\n    =========================================================================================================\n\n# About Receptive Field\n\nWhat is Receptive Field ?\n\n1> Local Receptive field\nLocal receptive field is present in every layer. Local receptive will be the size of kernel used in the layer .For example if we have an image of size 19x19 and we are applying a 3x3 metric then local receptive field will be 3x3 in first layer.\n\n2> Global Receptive field\nAt every layer the part of image our kernel can see is global receptive field .For a 3x3 kernel convolution global receptive field will increase by 2 units ( there is a mathematical formula that we can cover in later chapters ). It means if you see the below code in every convolution step our model will be able to see 2 pixel more in each side of image .\n\n\nInput image  =>  kernel shape => Output Image -> local Receptive field -> Global Receptive field \n19x19 => 3x3 => 17x17 -> 3x3 ->3x3\n17x17 => 3x3 => 15x15 ->3x3 ->5x5\n15x15 => 3x3 => 13x13 ->3x3 ->7x7\n13x13 => 3x3 => 11x11 ->3x3 ->9x9\n11x11 => 3x3 => 9x9 ->3x3 ->11x11\n9x9 => 3x3 => 7x7 ->3x3 ->13x13\n7x7 => 3x3 => 5x5 ->3x3 ->15x15\n5x5 => 3x3 => 3x3 ->3x3 ->17x17\n3x3 => 3x3 => 1x1 ->3x3 ->19x19\n\nRead the article for better understanding.\nhttps://medium.com/@data.pruthiraj/building-blocks-of-computer-vision-and-cnn-f5acdbf3c0b7\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "rf-calc",
    "package_url": "https://pypi.org/project/rf-calc/",
    "platform": "",
    "project_url": "https://pypi.org/project/rf-calc/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/rf-calc/0.0.7/",
    "requires_dist": [
      "numpy (>=1.19.4)",
      "pandas (>=1.1.5)",
      "tabulate (>=0.8.9)"
    ],
    "requires_python": "",
    "summary": "Often we spend lots of time calculating the Receptive field of a CNN model.This Module can calculate the receptive field, Output image size  from a model object",
    "version": "0.0.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10076348,
  "releases": {
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad3d8661c94977204f965b3a2582679aab77bc2c8b5f17084eb0c7005406a895",
          "md5": "0f133f77a1381dd779d6db796f6bdd06",
          "sha256": "4b946b059da65db6c192613e8b97b9ae7711457e171ec03341baa5959f5cb300"
        },
        "downloads": -1,
        "filename": "rf_calc-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0f133f77a1381dd779d6db796f6bdd06",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4012,
        "upload_time": "2021-04-10T21:19:34",
        "upload_time_iso_8601": "2021-04-10T21:19:34.626968Z",
        "url": "https://files.pythonhosted.org/packages/ad/3d/8661c94977204f965b3a2582679aab77bc2c8b5f17084eb0c7005406a895/rf_calc-0.0.5-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": "FC layer updates "
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "443ff02cae9f0646e46b642959694f6a86776fded6a10261acff9858c98638d4",
          "md5": "63ef8f6e1d43d4d2273b3ac4af3f67c4",
          "sha256": "1711e36062c24687ab8d5ceddde1e7554aaaa7936d580fe3c2f667e9332817bc"
        },
        "downloads": -1,
        "filename": "rf_calc-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "63ef8f6e1d43d4d2273b3ac4af3f67c4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5035,
        "upload_time": "2021-04-10T21:19:36",
        "upload_time_iso_8601": "2021-04-10T21:19:36.469889Z",
        "url": "https://files.pythonhosted.org/packages/44/3f/f02cae9f0646e46b642959694f6a86776fded6a10261acff9858c98638d4/rf_calc-0.0.5.tar.gz",
        "yanked": true,
        "yanked_reason": "FC layer updates "
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f2579323d08c4aad069d2a2cd478c1df6317831baf58987da7da373d05c061ce",
          "md5": "99edad841707a2af62738ee5dc69ff38",
          "sha256": "f2c3d86eeedf35b4a789de24db2ae37e3e7231db2bf18e6fe5e3e33d9bd8e8fe"
        },
        "downloads": -1,
        "filename": "rf_calc-0.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "99edad841707a2af62738ee5dc69ff38",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4083,
        "upload_time": "2021-04-15T17:46:01",
        "upload_time_iso_8601": "2021-04-15T17:46:01.492481Z",
        "url": "https://files.pythonhosted.org/packages/f2/57/9323d08c4aad069d2a2cd478c1df6317831baf58987da7da373d05c061ce/rf_calc-0.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8749c67391818fbc2abf9ff0f743b4b9d9683b585953d000f5c34a37c700e5d9",
          "md5": "25eb1d89cf91599c721067a2fd439547",
          "sha256": "4777ae69f038bfc63c9b307d698870a362e3d773db7a3a621fca671229e0cc51"
        },
        "downloads": -1,
        "filename": "rf_calc-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "25eb1d89cf91599c721067a2fd439547",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5113,
        "upload_time": "2021-04-15T17:46:03",
        "upload_time_iso_8601": "2021-04-15T17:46:03.129303Z",
        "url": "https://files.pythonhosted.org/packages/87/49/c67391818fbc2abf9ff0f743b4b9d9683b585953d000f5c34a37c700e5d9/rf_calc-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f2579323d08c4aad069d2a2cd478c1df6317831baf58987da7da373d05c061ce",
        "md5": "99edad841707a2af62738ee5dc69ff38",
        "sha256": "f2c3d86eeedf35b4a789de24db2ae37e3e7231db2bf18e6fe5e3e33d9bd8e8fe"
      },
      "downloads": -1,
      "filename": "rf_calc-0.0.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "99edad841707a2af62738ee5dc69ff38",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 4083,
      "upload_time": "2021-04-15T17:46:01",
      "upload_time_iso_8601": "2021-04-15T17:46:01.492481Z",
      "url": "https://files.pythonhosted.org/packages/f2/57/9323d08c4aad069d2a2cd478c1df6317831baf58987da7da373d05c061ce/rf_calc-0.0.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8749c67391818fbc2abf9ff0f743b4b9d9683b585953d000f5c34a37c700e5d9",
        "md5": "25eb1d89cf91599c721067a2fd439547",
        "sha256": "4777ae69f038bfc63c9b307d698870a362e3d773db7a3a621fca671229e0cc51"
      },
      "downloads": -1,
      "filename": "rf_calc-0.0.7.tar.gz",
      "has_sig": false,
      "md5_digest": "25eb1d89cf91599c721067a2fd439547",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5113,
      "upload_time": "2021-04-15T17:46:03",
      "upload_time_iso_8601": "2021-04-15T17:46:03.129303Z",
      "url": "https://files.pythonhosted.org/packages/87/49/c67391818fbc2abf9ff0f743b4b9d9683b585953d000f5c34a37c700e5d9/rf_calc-0.0.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}