{
  "info": {
    "author": "Carlos Hernandez-Olivan",
    "author_email": "carlosher@unizar.es",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Framework :: Matplotlib",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU Affero General Public License v3",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Multimedia :: Sound/Audio :: Analysis"
    ],
    "description": "![plot](https://github.com/carlosholivan/musicaiz/blob/main/docs/images/logo_rectangle.png?raw=true)\r\n\r\n# MUSICAIZ\r\n\r\nA Python library for symbolic music generation, analysis and visualization.\r\n\r\n<!-- SHIELDS -->\r\n<!-- markdownlint-disable -->\r\n<table>\r\n  <colgroup>\r\n    <col style=\"width: 10%;\"/>\r\n    <col style=\"width: 90%;\"/>\r\n  </colgroup>\r\n  <tbody>\r\n    <tr>\r\n      <th>CI</th>\r\n      <td>\r\n        <img alt=\"build\" src=\"https://github.com/carlosholivan/musicaiz/actions/workflows/ci.yml/badge.svg\"/>\r\n        <a href=\"https://readthedocs.org/musicaiz/\">\r\n        <img alt=\"docs\" src=\"https://readthedocs.org/projects/musicaiz/badge/?version=latest\"/>\r\n        </a>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <th>Paper</th>\r\n      <td>\r\n        <a href=\"https://arxiv.org/abs/2209.07974\">\r\n        <img alt= \"arXiv\" src=\"https://img.shields.io/badge/arXiv-1234.56789-00ff00.svg\"/>\r\n        </a>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <th>PyPI</th>\r\n      <td>\r\n        <a href=\"https://pypi.org/project/musicaiz/\">\r\n          <img alt=\"PyPI - Package Version\" src=\"https://img.shields.io/pypi/v/musicaiz\"/>\r\n        </a>\r\n        <a href=\"https://pypi.org/project/musicaiz\">\r\n          <img alt=\"PyPI - Supported Python Versions\" src=\"https://img.shields.io/pypi/pyversions/musicaiz?logo=python&amp;logoColor=white\"/>\r\n        </a>\r\n        <a href=\"https://pypi.org/project/musicaiz\">\r\n          <img alt=\"PyPI - Wheel\" src=\"https://img.shields.io/pypi/wheel/musicaiz\"/>\r\n        </a>\r\n        <a href=\"hhttps://pypistats.org/packages/musicaiz\">\r\n          <img alt=\"Downloads\" src=\"https://img.shields.io/pypi/dm/musicaiz\"/>\r\n        </a>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <th>Activity</th>\r\n      <td>\r\n        <img alt=\"Maintenance\" src=\"https://img.shields.io/maintenance/yes/2022\"/>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <th>QA</th>\r\n      <td>\r\n        <a href=\"https://codecov.io/gh/carlosholivan/musicaiz\">\r\n          <img alt=\"codecov\" src=\"https://codecov.io/gh/carlosholivan/musicaiz/branch/main/graph/badge.svg?token=RGSRMMF8PF\"/>\r\n        </a>\r\n        <a href=\"https://api.codiga.io/project/34718/status/svg\">\r\n          <img alt=\"Code Quality\" src=\"https://api.codiga.io/project/34718/status/svg\"/>\r\n        </a>\r\n        <a href=\"https://api.codiga.io/project/34718/score/svg\">\r\n          <img alt=\"Code Score\" src=\"https://api.codiga.io/project/34718/score/svg\"/>\r\n        </a>\r\n        <a href=\"https://github.com/pre-commit/pre-commit\">\r\n          <img alt=\"pre-commit\" src=\"https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&amp;logoColor=white\"/>\r\n        </a>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <th>Code</th>\r\n      <td>\r\n        <a href=\"https://github.com/carlosholivan/musicaiz/blob/master/LICENSE\">\r\n          <img alt=\"License\" src=\"https://img.shields.io/github/license/carlosholivan/musicaiz\"/>\r\n        </a>\r\n        <img alt=\"GitHub top language\" src=\"https://img.shields.io/github/languages/top/carlosholivan/musicaiz\"/>\r\n        <a href=\"https://github.com/psf/black\">\r\n          <img alt=\"Code Style: Black\" src=\"https://img.shields.io/badge/code%20style-black-black\"/>\r\n        </a>\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\n\r\n[See the docs](https://carlosholivan.github.io/musicaiz)\r\n\r\nThe modules contained in this library are:\r\n\r\n- [Loaders](musicaiz/loaders.py)<br/>\r\n&nbsp;&nbsp;&nbsp;&nbsp;contains the basic initialization to import files.\r\n\r\n````python\r\nfrom musicaiz.loaders import Musa\r\n\r\n    midi = Musa(\r\n      file=\"my_midifile.mid\"\r\n    )\r\n````\r\n\r\n- [Structure](musicaiz/structure/)<br/>\r\n&nbsp;&nbsp;&nbsp;&nbsp;contains the structure elements in music (instruments, bars and notes).\r\n\r\n````python\r\n# Define a Note object\r\nfrom musicaiz.structure import Note\r\n\r\n    note = Note(\r\n      pitch=12,\r\n      start=0.0,\r\n      end=1.0,\r\n      velocity=75,\r\n      bpm=120,\r\n      resolution=96\r\n    )\r\n````\r\n\r\n- [Harmony](musicaiz/harmony/)<br/>\r\n&nbsp;&nbsp;&nbsp;&nbsp;contains the harmonic elements in music (intervals, chords and keys).\r\n\r\n````python\r\nfrom musicaiz.structure import Chords, Tonality\r\n\r\n    # Initialize a chord by its notation\r\n    chord_name = \"Cm7b5\"\r\n    chord = Chord(chord_name)\r\n    # get the notes in the chord\r\n    chord.get_notes(inversion=0)\r\n\r\n    # Initialize Tonality\r\n    tonality = Tonality.E_MINOR\r\n    # get different scales\r\n    tonality.natural\r\n    tonality.harmonic\r\n    tonality.melodic\r\n    # get the notes in a scale\r\n    tonality.scale_notes(\"NATURAL\")\r\n    # get a chord from a scale degree\r\n    Tonality.get_chord_from_degree(\r\n      tonality=\"E_MINOR\",\r\n      degree=\"V\",\r\n      scale=\"NATURAL\",\r\n      chord_type=\"triad\",\r\n    )\r\n````\r\n\r\n- [Rhythm](musicaiz/rhythm/)<br/>\r\n&nbsp;&nbsp;&nbsp;&nbsp;contains rhythmic or timing elements in music (quantization).\r\n- [Features](musicaiz/features/)<br/>\r\n&nbsp;&nbsp;&nbsp;&nbsp;contains classic features to analyze symbolic music data (pitch class histograms...).\r\n- [Algorithms](musicaiz/algorithms/)<br/>\r\n&nbsp;&nbsp;&nbsp;&nbsp;contains algorithms for chord prediction, key prediction, harmonic transposition...\r\n- [Plotters](musicaiz/plotters/)<br/>\r\n&nbsp;&nbsp;&nbsp;&nbsp;contains different ways of plotting music (pinorolls or scores).\r\n\r\n````python\r\nfrom musicaiz.plotters import Pianoroll, PianorollHTML\r\n\r\n    # Matplotlib\r\n    musa_obj = Musa(midi_sample)\r\n    plot = Pianoroll(musa_obj)\r\n    plot.plot_instruments(\r\n        program=[48, 45],\r\n        bar_start=0,\r\n        bar_end=4,\r\n        print_measure_data=True,\r\n        show_bar_labels=False,\r\n        show_grid=False,\r\n        show=True,\r\n    )\r\n\r\n    # Pyplot HTML\r\n    musa_obj = Musa(midi_sample)\r\n    plot = PianorollHTML(musa_obj)\r\n    plot.plot_instruments(\r\n        program=[48, 45],\r\n        bar_start=0,\r\n        bar_end=4,\r\n        show_grid=False,\r\n        show=False\r\n    )\r\n````\r\n\r\n- [Tokenizers](musicaiz/tokenizers/)<br/>\r\n&nbsp;&nbsp;&nbsp;&nbsp;contains different encodings to prepare symbolic music data to train a sequence model.\r\n\r\n````python\r\nfrom musicaiz.tokenizers import MMMTokenizer, MMMTokenizerArguments\r\n\r\n    # Tokenize file\r\n    midi = \"my_midifile.mid\"\r\n    args = MMMTokenizerArguments(\r\n      windowing=True,\r\n      time_unit=\"SIXTEENTH\",\r\n      num_programs=None,\r\n      shuffle_tracks=True,\r\n      track_density=False,\r\n      window_size=4,\r\n      hop_length=1,\r\n      time_sig=False,\r\n      velocity=False,\r\n      quantize=False,\r\n      tempo=True,\r\n    )\r\n    # save configs\r\n    MMMTokenizerArguments.save(args, \"./\")\r\n    tokenizer = MMMTokenizer(midi, args)\r\n    got = tokenizer.tokenize_file()\r\n\r\n    # get tokens analysis\r\n    my_tokens = \"PIECE_START TRACK_START ...\"\r\n    MMMTokenizer.get_tokens_analytics(my_tokens)\r\n\r\n    # Convert tokens to Musa objects\r\n    MMMTokenizer.tokens_to_musa(\r\n      tokens=my_tokens,\r\n      absolute_timing=True,\r\n      time_unit=\"SIXTEENTH\",\r\n      time_sig=\"4/4\",\r\n      resolution=96\r\n    )\r\n\r\n    # get vocabulary\r\n    MMMTokenizer.get_vocabulary(\r\n      dataset_path=\"apth/to/dataset/tokens\",\r\n    )\r\n````\r\n\r\n- [Converters](musicaiz/converters/)<br/>\r\n&nbsp;&nbsp;&nbsp;&nbsp;contains converters to other formats (JSON,...).\r\n\r\n````python\r\nfrom musicaiz.loaders import Musa\r\nfrom musicaiz.loaders import musa_to_proto, proto_to_musa\r\n\r\n  # Convert a musicaiz objects in protobufs\r\n  midi = Musa(midi_sample, structure=\"bars\")\r\n  protobuf = musa_to_proto(midi)\r\n\r\n  # Convert a protobuf to musicaiz objects\r\n  musa = proto_to_musa(protobuf)\r\n    \r\n````\r\n\r\n- [Datasets](musicaiz/datasets/)<br/>\r\n&nbsp;&nbsp;&nbsp;&nbsp;contains helper methods to work with MIR open-source datasets.\r\n\r\n````python\r\nfrom musicaiz.tokenizers import MMMTokenizer, MMMTokenizerArguments\r\nfrom musicaiz.datasets import JSBChorales\r\n\r\n    # Tokenize a dataset in musicaiz\r\n    output_path = \"path/to/store/tokens\"\r\n\r\n    args = MMMTokenizerArguments(\r\n        prev_tokens=\"\",\r\n        windowing=True,\r\n        time_unit=\"HUNDRED_TWENTY_EIGHT\",\r\n        num_programs=None,\r\n        shuffle_tracks=True,\r\n        track_density=False,\r\n        window_size=32,\r\n        hop_length=16,\r\n        time_sig=True,\r\n        velocity=True,\r\n    )\r\n    dataset = JSBChorales()\r\n    dataset.tokenize(\r\n        dataset_path=\"path/to/JSB Chorales/midifiles\",\r\n        output_path=output_path,\r\n        output_file=\"token-sequences\",\r\n        args=args,\r\n        tokenize_split=\"all\"\r\n    )\r\n    vocab = MMMTokenizer.get_vocabulary(\r\n        dataset_path=output_path\r\n    )\r\n````\r\n\r\n- [Models](musicaiz/models/)<br/>\r\n&nbsp;&nbsp;&nbsp;&nbsp;contains ML models to generate symbolic music.\r\n\r\n## License\r\n\r\nThis project is licensed under the terms of the [AGPL v3 license](LICENSE).\r\n\r\n\r\n## Install\r\n\r\nTo install the latest stable version run: `pip install musicaiz`\r\n\r\nTo install the latest version, clone this repository and run:\r\n\r\n`pip install -e .`\r\n\r\nIf you want to train the models in the [models](musicaiz/models/) submodule, you must install `apex`. Follow the instructions on https://github.com/NVIDIA/apex.\r\n\r\n\r\n## Develop\r\n\r\n### Conda dev environment\r\n\r\n`conda env update -f environment.yml`\r\n\r\n`conda activate musicaiz`\r\n\r\n### Linting\r\n\r\nflake8 and black\r\n\r\n### Typing\r\n\r\nUse mypy package to check variables tpyes:\r\n\r\n`mypy musicaiz`\r\n\r\n## Examples\r\n\r\nSee docs.\r\n\r\n## Citing\r\n\r\nIf you use this software for your research, please cite:\r\n\r\n````\r\n@misc{hernandezolivan22musicaiz,\r\n  doi = {10.48550/ARXIV.2209.07974},\r\n  url = {https://arxiv.org/abs/2209.07974},\r\n  author = {Hernandez-Olivan, Carlos and Beltran, Jose R.},\r\n  title = {musicaiz: A Python Library for Symbolic Music Generation, Analysis and Visualization},\r\n  publisher = {arXiv},\r\n  year = {2022},\r\n}\r\n````\r\n\r\n## Contributing\r\n\r\nMusicaiz software can be extended in different ways, see some example in [TODOs](TODOs.md). If you want to contribute, please follow the guidelines in [Develop](##Develop)\r\n",
    "description_content_type": "text/markdown; charset=UTF-8",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://carlosholivan.github.io/musicaiz",
    "keywords": "",
    "license": "ISC",
    "maintainer": "",
    "maintainer_email": "",
    "name": "musicaiz",
    "package_url": "https://pypi.org/project/musicaiz/",
    "platform": null,
    "project_url": "https://pypi.org/project/musicaiz/",
    "project_urls": {
      "Documentation": "https://carlosholivan.github.io/musicaiz/docs",
      "Download": "https://github.com/carlosholivan/musicaiz/releases",
      "Homepage": "https://carlosholivan.github.io/musicaiz",
      "Source": "https://github.com/carlosholivan/musicaiz",
      "Tracker": "https://github.com/carlosholivan/musicaiz/issues"
    },
    "release_url": "https://pypi.org/project/musicaiz/0.1.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A python framework for symbolic music generation, evaluation and analysis",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17193945,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b9810e21602a19913c7edffbfca82c7ad5777323b5c79bb3d378436bcb3a8749",
          "md5": "a64898ec0c220f6e35c4466d0578f560",
          "sha256": "1d039e818873097caaba4dbbce4fb45abddeb431afbb5541edd0d59186ba1e93"
        },
        "downloads": -1,
        "filename": "musicaiz-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a64898ec0c220f6e35c4466d0578f560",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 114518,
        "upload_time": "2022-07-15T14:32:03",
        "upload_time_iso_8601": "2022-07-15T14:32:03.698229Z",
        "url": "https://files.pythonhosted.org/packages/b9/81/0e21602a19913c7edffbfca82c7ad5777323b5c79bb3d378436bcb3a8749/musicaiz-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5942da529b5582805c6a9e1cf00e22e02a761b31abd6f3bd250dc6706439fa7e",
          "md5": "3684fcd474ceabca2b29c1db27454182",
          "sha256": "416e71bf8f9186fde343a5e285acc918eef6cbdb26b040e39e1655de835cc1cc"
        },
        "downloads": -1,
        "filename": "musicaiz-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3684fcd474ceabca2b29c1db27454182",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 99307,
        "upload_time": "2022-07-15T14:32:05",
        "upload_time_iso_8601": "2022-07-15T14:32:05.598343Z",
        "url": "https://files.pythonhosted.org/packages/59/42/da529b5582805c6a9e1cf00e22e02a761b31abd6f3bd250dc6706439fa7e/musicaiz-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e4691a0ee8df5d24bdea542940cdbfb52a338448c5b9ed5d36dd2a5ef8123df8",
          "md5": "84463ebb9cda3a465e45702f1556577f",
          "sha256": "ba51c45819454331e86313465d78355c626f2e44c8d31c989d90739e399fdf60"
        },
        "downloads": -1,
        "filename": "musicaiz-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "84463ebb9cda3a465e45702f1556577f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 135522,
        "upload_time": "2022-07-20T14:22:25",
        "upload_time_iso_8601": "2022-07-20T14:22:25.892290Z",
        "url": "https://files.pythonhosted.org/packages/e4/69/1a0ee8df5d24bdea542940cdbfb52a338448c5b9ed5d36dd2a5ef8123df8/musicaiz-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "577bca780f065536b56c072c33479f27ae9dfdaf7f414de207397e9581d43639",
          "md5": "b43d3a3ba782c70eacaf708ebcd14884",
          "sha256": "ca94e53d94209d3fd349cf959afd6e945fe9a4f6ede04fc29e9a5b039d402cea"
        },
        "downloads": -1,
        "filename": "musicaiz-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b43d3a3ba782c70eacaf708ebcd14884",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 114226,
        "upload_time": "2022-07-20T14:22:28",
        "upload_time_iso_8601": "2022-07-20T14:22:28.053655Z",
        "url": "https://files.pythonhosted.org/packages/57/7b/ca780f065536b56c072c33479f27ae9dfdaf7f414de207397e9581d43639/musicaiz-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "05ce440fac9912a60d3005e4088262c99b26f8fc860bd2b3db02ec5853f88fe5",
          "md5": "d17110a6e120bc72d81d3b80aac3930b",
          "sha256": "52ac03a7e35fa9728c91d066051f3b89283c360b3e463242b556d3dbffd36265"
        },
        "downloads": -1,
        "filename": "musicaiz-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d17110a6e120bc72d81d3b80aac3930b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 141987,
        "upload_time": "2022-12-05T12:06:18",
        "upload_time_iso_8601": "2022-12-05T12:06:18.648218Z",
        "url": "https://files.pythonhosted.org/packages/05/ce/440fac9912a60d3005e4088262c99b26f8fc860bd2b3db02ec5853f88fe5/musicaiz-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f61ce3e166b9c00f7c28041387c5c56724deac93ee2d2015f1458d76afbaff91",
          "md5": "0ad95c69f3effbea7bc6f254ac256fb5",
          "sha256": "139cb161d49ebc51f23b377c58e6ea36aedb0b6e6d3aa24d1ec5d2cbefda2d48"
        },
        "downloads": -1,
        "filename": "musicaiz-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0ad95c69f3effbea7bc6f254ac256fb5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 143564,
        "upload_time": "2023-02-11T12:25:26",
        "upload_time_iso_8601": "2023-02-11T12:25:26.070783Z",
        "url": "https://files.pythonhosted.org/packages/f6/1c/e3e166b9c00f7c28041387c5c56724deac93ee2d2015f1458d76afbaff91/musicaiz-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b221017bbdbd8727c9b7a27863a6bdfe076ad59af4362bb5fd5bc956133d767",
          "md5": "a6ed9c2e820d92f1c275612f39abea0f",
          "sha256": "ebf2a02c329cd2fa8720dd7aedc3c03b85509d7e75b83c8e4689d60c7728e4fe"
        },
        "downloads": -1,
        "filename": "musicaiz-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a6ed9c2e820d92f1c275612f39abea0f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 144591,
        "upload_time": "2023-03-07T17:57:41",
        "upload_time_iso_8601": "2023-03-07T17:57:41.663871Z",
        "url": "https://files.pythonhosted.org/packages/2b/22/1017bbdbd8727c9b7a27863a6bdfe076ad59af4362bb5fd5bc956133d767/musicaiz-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2b221017bbdbd8727c9b7a27863a6bdfe076ad59af4362bb5fd5bc956133d767",
        "md5": "a6ed9c2e820d92f1c275612f39abea0f",
        "sha256": "ebf2a02c329cd2fa8720dd7aedc3c03b85509d7e75b83c8e4689d60c7728e4fe"
      },
      "downloads": -1,
      "filename": "musicaiz-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "a6ed9c2e820d92f1c275612f39abea0f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 144591,
      "upload_time": "2023-03-07T17:57:41",
      "upload_time_iso_8601": "2023-03-07T17:57:41.663871Z",
      "url": "https://files.pythonhosted.org/packages/2b/22/1017bbdbd8727c9b7a27863a6bdfe076ad59af4362bb5fd5bc956133d767/musicaiz-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}