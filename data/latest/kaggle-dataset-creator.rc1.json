{
  "info": {
    "author": "Rishikesh Agrawani",
    "author_email": "rishikesh0014051992@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# kaggle_dataset_creator - A  Python package to generate csv/json\n\nA Python package that allows you to create CSV/JSON files by manually entering each\nof the entries of cells row by row in Terminal (Windows CMD / Bash).\n\n\n## Installation\n\nOpen terminal and enter the below command (Python 3).\n\n> pip install kaggle_dataset_creator\n\n## Features\n\n+ It allows you to create your own CSV file if you are looking for creating a CSV with manually entered data. You can also get the JSON version of the entered data.\n\n+ You can also view your data at any point of time in your Terminal and again continue \nto enter data if you wish to add more rows/records for your final CSV/JSON file.\n\n> Note: Currently the package is in development, it will be released soon.\n\n## Example\n\n```python\nfrom kaggle_dataset_creator import KaggleDataSet\n\nkd = KaggleDataSet()\nkd.start()\n\nprint(kd.columns)\nprint(kd.container)\n\nkd.view();   # To view the final DataFrame on Terminal\nkd.to_csv(); # To save in csv, default file name is take if filename is not provided \n\nprint(\"DATA:- \")\nprint(kd.dataset) # Accessing dataset attribute to get the final DataFrame\n\nprint('Total rows: ', kd.rows)\nprint('Types: ', kd.data_types)\n```\n\nIf you want to try above in the terminal, try as below after installation.\n\n> In next version, it will be released with more features. Here our intension is to get the final CSV/JSON.\n\n```bash\n>>> from kaggle_dataset_creator import KaggleDataSet\n>>>\n>>> kd = KaggleDataSet()\n>>> kd.start()\nEnter number of columns that you want in your dataset: 3\n\nSUCCESS: You are successfully done with no. of columns\nEnter the name of 1st column: fullname\nEnter the name of 2nd column: age\nEnter the name of 3rd column: salary\n\nSUCCESS: You are successfully done with the column names\n[DATA ENTRY] <row: 1>  fullname    : Raj Shekhar\n[DATA ENTRY] <row: 1>  age         : 45\n[DATA ENTRY] <row: 1>  salary      : 600000\n\n==================================================\nDo you want to add 1 more row / view data (y/n/v): y\n==================================================\n[DATA ENTRY] <row: 2>  fullname    : Venc Bell\n[DATA ENTRY] <row: 2>  age         : 67\n[DATA ENTRY] <row: 2>  salary      : 900000\n\n==================================================\nDo you want to add 1 more row / view data (y/n/v): y\n==================================================\n[DATA ENTRY] <row: 3>  fullname    : Robert Grime\n[DATA ENTRY] <row: 3>  age         : 89\n[DATA ENTRY] <row: 3>  salary      : 9000000\n\n==================================================\nDo you want to add 1 more row / view data (y/n/v): v\n\n--------------------------------------------------\n       fullname age   salary\n0   Raj Shekhar  45   600000\n1     Venc Bell  67   900000\n2  Robert Grime  89  9000000\n--------------------------------------------------\n\n==================================================\nDo you want to add 1 more row / view data (y/n/v): y\n==================================================\n[DATA ENTRY] <row: 4>  fullname    : Elen Goom\n[DATA ENTRY] <row: 4>  age         : 55\n[DATA ENTRY] <row: 4>  salary      : 800000\n\n==================================================\nDo you want to add 1 more row / view data (y/n/v): y\n==================================================\n[DATA ENTRY] <row: 5>  fullname    : Rita Ora\n[DATA ENTRY] <row: 5>  age         : 36\n[DATA ENTRY] <row: 5>  salary      : 9900000\n\n==================================================\nDo you want to add 1 more row / view data (y/n/v): v\n\n--------------------------------------------------\n       fullname age   salary\n0   Raj Shekhar  45   600000\n1     Venc Bell  67   900000\n2  Robert Grime  89  9000000\n3     Elen Goom  55   800000\n4      Rita Ora  36  9900000\n--------------------------------------------------\n\n==================================================\nDo you want to add 1 more row / view data (y/n/v): y\n==================================================\n[DATA ENTRY] <row: 6>  fullname    : Senso Tomy\n[DATA ENTRY] <row: 6>  age         : 54\n[DATA ENTRY] <row: 6>  salary      : 7700000\n\n==================================================\nDo you want to add 1 more row / view data (y/n/v): n\nIs this mistakenly typed (y/n): n\n==================================================\n\nSUCCESS: You are successfully done with entering data for your dataset\n>>>\n>>> # View the data\n...\n>>> kd.view()\n\n--------------------------------------------------\n       fullname age   salary\n0   Raj Shekhar  45   600000\n1     Venc Bell  67   900000\n2  Robert Grime  89  9000000\n3     Elen Goom  55   800000\n4      Rita Ora  36  9900000\n5    Senso Tomy  54  7700000\n--------------------------------------------------\nTrue\n>>>\n>>> success = kd.view()\n\n--------------------------------------------------\n       fullname age   salary\n0   Raj Shekhar  45   600000\n1     Venc Bell  67   900000\n2  Robert Grime  89  9000000\n3     Elen Goom  55   800000\n4      Rita Ora  36  9900000\n5    Senso Tomy  54  7700000\n--------------------------------------------------\n>>>\n>>> success\nTrue\n>>>\n>>> # Store the dataset as DataFrame\n...\n>>> df = kd.dataset\n>>> df\n       fullname age   salary\n0   Raj Shekhar  45   600000\n1     Venc Bell  67   900000\n2  Robert Grime  89  9000000\n3     Elen Goom  55   800000\n4      Rita Ora  36  9900000\n5    Senso Tomy  54  7700000\n>>>\n>>> type(df)\n<class 'pandas.core.frame.DataFrame'>\n>>>\n>>> kd.rows\n6\n>>>\n>>> kd.data_types\n{'fullname': 'string', 'age': 'numeric', 'salary': 'numeric'}\n>>>\n```\n\n\n## Generating random strings\n\n```bash\nPython 3.6.7 (v3.6.7:6ec5cf24b7, Oct 20 2018, 03:02:14) \n[GCC 4.2.1 Compatible Apple LLVM 6.0 (clang-600.0.57)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> \n>>> from kaggle_dataset_creator.random_string import random_string\n>>> \n>>> random_string()\n'VFdwQmVFOV'\n>>> \n>>> random_string()\n'TWpBeE9TMH'\n>>> \n>>> random_string()\n'=UDN0gDN54'\n>>> \n>>> random_string()\n'TWpBeE9TMH'\n>>> \n>>> random_string()\n'=ATM1UDMz4'\n>>> \n>>> random_string(11)\n'VFdwQmVFOVR'\n>>> \n>>> random_string(15)\n'5M2RW5kTUVVRxAT'\n>>> \n>>> random_string(15)\n'VFdwQmVFOVRNSGR'\n>>> \n>>> random_string(15)\n'5M2RS9kQUFVR5sW'\n>>> \n>>> random_string(15)\n'=AzN2MDMy4iNzoz'\n>>> \n>>> random_string(15)\n'MjAxOS0wNS0yMSA'\n>>> \n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hygull/kaggle_dataset_creator.git",
    "keywords": "CSV,JSON,kaggle,dataset,Python 3,Windows,Linux,MAC,Command line",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "kaggle-dataset-creator",
    "package_url": "https://pypi.org/project/kaggle-dataset-creator/",
    "platform": "",
    "project_url": "https://pypi.org/project/kaggle-dataset-creator/",
    "project_urls": {
      "Homepage": "https://github.com/hygull/kaggle_dataset_creator.git"
    },
    "release_url": "https://pypi.org/project/kaggle-dataset-creator/0.0.1/",
    "requires_dist": [
      "pandas (>=0.23.4)",
      "colorama (>=0.4.1)",
      "numpy (>=1.15.4)"
    ],
    "requires_python": ">=3",
    "summary": "A Python package to generate csv/json from command line. It allows you to create CSV/JSON files by asking you to manually enter data for each cells row by row in Terminal (Windows CMD / Bash).",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 5406198,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f10b45053e993622b44885eaca9e4821e62d6da2234c4d5ec95c7eba449173f0",
          "md5": "26c6fee7f094bef1400104609782da36",
          "sha256": "15adb478bbe278f2ed683872ed239342107ec7f5ec08d78cc7498360b52c9208"
        },
        "downloads": -1,
        "filename": "kaggle_dataset_creator-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "26c6fee7f094bef1400104609782da36",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 10752,
        "upload_time": "2019-06-16T11:21:01",
        "upload_time_iso_8601": "2019-06-16T11:21:01.937484Z",
        "url": "https://files.pythonhosted.org/packages/f1/0b/45053e993622b44885eaca9e4821e62d6da2234c4d5ec95c7eba449173f0/kaggle_dataset_creator-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "95e3cdf474eb008cdc6bf254bcf352a6509fdb71d17be625eff725d898e9655e",
          "md5": "18ecc5decbc051aa71f98178bd411ec1",
          "sha256": "1634f2c9ac9ca984d4db9daf306b48f33ea143e683c567fe8c43c682856f0b99"
        },
        "downloads": -1,
        "filename": "kaggle_dataset_creator-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "18ecc5decbc051aa71f98178bd411ec1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 8907,
        "upload_time": "2019-06-16T11:21:04",
        "upload_time_iso_8601": "2019-06-16T11:21:04.731031Z",
        "url": "https://files.pythonhosted.org/packages/95/e3/cdf474eb008cdc6bf254bcf352a6509fdb71d17be625eff725d898e9655e/kaggle_dataset_creator-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f10b45053e993622b44885eaca9e4821e62d6da2234c4d5ec95c7eba449173f0",
        "md5": "26c6fee7f094bef1400104609782da36",
        "sha256": "15adb478bbe278f2ed683872ed239342107ec7f5ec08d78cc7498360b52c9208"
      },
      "downloads": -1,
      "filename": "kaggle_dataset_creator-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "26c6fee7f094bef1400104609782da36",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3",
      "size": 10752,
      "upload_time": "2019-06-16T11:21:01",
      "upload_time_iso_8601": "2019-06-16T11:21:01.937484Z",
      "url": "https://files.pythonhosted.org/packages/f1/0b/45053e993622b44885eaca9e4821e62d6da2234c4d5ec95c7eba449173f0/kaggle_dataset_creator-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "95e3cdf474eb008cdc6bf254bcf352a6509fdb71d17be625eff725d898e9655e",
        "md5": "18ecc5decbc051aa71f98178bd411ec1",
        "sha256": "1634f2c9ac9ca984d4db9daf306b48f33ea143e683c567fe8c43c682856f0b99"
      },
      "downloads": -1,
      "filename": "kaggle_dataset_creator-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "18ecc5decbc051aa71f98178bd411ec1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3",
      "size": 8907,
      "upload_time": "2019-06-16T11:21:04",
      "upload_time_iso_8601": "2019-06-16T11:21:04.731031Z",
      "url": "https://files.pythonhosted.org/packages/95/e3/cdf474eb008cdc6bf254bcf352a6509fdb71d17be625eff725d898e9655e/kaggle_dataset_creator-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}