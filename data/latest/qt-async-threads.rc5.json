{
  "info": {
    "author": "Bruno Oliveira",
    "author_email": "nicoddemus@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: X11 Applications :: Qt",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: User Interfaces",
      "Topic :: Utilities"
    ],
    "description": "================\nqt-async-threads\n================\n\n.. image:: https://img.shields.io/pypi/v/qt-async-threads.svg\n    :target: https://pypi.org/project/qt-async-threads/\n\n.. image:: https://img.shields.io/conda/vn/conda-forge/qt-async-threads.svg\n    :target: https://anaconda.org/conda-forge/qt-async-threads\n\n.. image:: https://img.shields.io/pypi/pyversions/qt-async-threads.svg\n    :target: https://pypi.org/project/qt-async-threads/\n\n.. image:: https://github.com/nicoddemus/qt-async-threads/workflows/test/badge.svg\n    :target: https://github.com/nicoddemus/qt-async-threads/actions?query=workflow%3Atest\n\n.. image:: https://results.pre-commit.ci/badge/github/nicoddemus/qt-async-threads/main.svg\n    :target: https://results.pre-commit.ci/latest/github/nicoddemus/qt-async-threads/main\n    :alt: pre-commit.ci status\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://github.com/psf/black\n\n.. image:: https://readthedocs.org/projects/qt-async-threads/badge/?version=latest\n    :target: https://qt-async-threads.readthedocs.io/en/latest/?badge=latest\n\n----\n\n``qt-async-threads`` allows Qt applications to use convenient ``async/await`` syntax to run\ncomputational intensive or IO operations in threads, selectively changing the code slightly\nto provide a more responsive UI.\n\nThe objective of this library is to provide a simple and convenient way to improve\nUI responsiveness in existing Qt applications by using ``async/await``, while\nat the same time not requiring large scale refactorings.\n\nSupports `PyQt5`_, `PyQt6`_, `PySide2`_, and `PySide6`_ thanks to `qtpy`_.\n\nExample\n=======\n\nThe widget below downloads pictures of cats when the user clicks on a button (some parts omitted for brevity):\n\n.. code-block:: python\n\n    class CatsWidget(QWidget):\n        def __init__(self, parent: QWidget) -> None:\n            ...\n            self.download_button.clicked.connect(self._on_download_button_clicked)\n\n        def _on_download_button_clicked(self, checked: bool = False) -> None:\n            self.progress_label.setText(\"Searching...\")\n\n            api_url = \"https://api.thecatapi.com/v1/images/search\"\n\n            for i in range(10):\n                try:\n                    # Search.\n                    search_response = requests.get(api_url)\n                    self.progress_label.setText(\"Found, downloading...\")\n\n                    # Download.\n                    url = search_response.json()[0][\"url\"]\n                    download_response = requests.get(url)\n                except ConnectionError as e:\n                    QMessageBox.critical(self, \"Error\", f\"Error: {e}\")\n                    return\n\n                self._save_image_file(download_response)\n                self.progress_label.setText(f\"Done downloading image {i}.\")\n\n            self.progress_label.setText(f\"Done, {downloaded_count} cats downloaded\")\n\n\nThis works well, but while the pictures are being downloaded the UI will freeze a bit,\nbecoming unresponsive.\n\nWith ``qt-async-threads``, we can easily change the code to:\n\n.. code-block:: python\n\n    class CatsWidget(QWidget):\n        def __init__(self, runner: QtAsyncRunner, parent: QWidget) -> None:\n            ...\n            # QtAsyncRunner allows us to submit code to threads, and\n            # provide a way to connect async functions to Qt slots.\n            self.runner = runner\n\n            # `to_sync` returns a slot that Qt's signals can call, but will\n            # allow it to asynchronously run code in threads.\n            self.download_button.clicked.connect(\n                self.runner.to_sync(self._on_download_button_clicked)\n            )\n\n        async def _on_download_button_clicked(self, checked: bool = False) -> None:\n            self.progress_label.setText(\"Searching...\")\n\n            api_url = \"https://api.thecatapi.com/v1/images/search\"\n\n            for i in range(10):\n                try:\n                    # Search.\n                    # `self.runner.run` calls requests.get() in a thread,\n                    # but without blocking the main event loop.\n                    search_response = await self.runner.run(requests.get, api_url)\n                    self.progress_label.setText(\"Found, downloading...\")\n\n                    # Download.\n                    url = search_response.json()[0][\"url\"]\n                    download_response = await self.runner.run(requests.get, url)\n                except ConnectionError as e:\n                    QMessageBox.critical(self, \"Error\", f\"Error: {e}\")\n                    return\n\n                self._save_image_file(download_response)\n                self.progress_label.setText(f\"Done downloading image {i}.\")\n\n            self.progress_label.setText(f\"Done, {downloaded_count} cats downloaded\")\n\nBy using a `QtAsyncRunner`_ instance and changing the slot to an ``async`` function, the ``runner.run`` calls\nwill run the requests in a thread, without blocking the Qt event loop, making the UI snappy and responsive.\n\nThanks to the ``async``/``await`` syntax, we can keep the entire flow in the same function as before,\nincluding handling exceptions naturally.\n\nWe could rewrite the first example using a `ThreadPoolExecutor`_ or `QThreads`_,\nbut that would require a significant rewrite of the flow of the code if we don't want to block\nthe Qt event loop.\n\n\n\nDocumentation\n=============\n\nFor full documentation, please see https://qt-async-threads.readthedocs.io/en/latest.\n\nDifferences with other libraries\n================================\n\nThere are excellent libraries that allow to use async frameworks with Qt:\n\n* `qasync`_ integrates with `asyncio`_\n* `qtrio`_ integrates with `trio`_\n\nThose libraries fully integrate with their respective frameworks, allowing the application to asynchronously communicate\nwith sockets, threads, file system, tasks, cancellation systems, use other async libraries\n(such as `httpx`_), etc.\n\nThey are very powerful in their own right, however they have one downside in that they require your ``main``\nentry point to also be ``async``, which might be hard to accommodate in an existing application.\n\n``qt-async-threads``, on the other hand, focuses only on one feature: allow the user to leverage ``async``/``await``\nsyntax to *handle threads more naturally*, without the need for major refactorings in existing applications.\n\nLicense\n=======\n\nDistributed under the terms of the `MIT`_ license.\n\n.. _MIT: https://github.com/pytest-dev/pytest-mock/blob/master/LICENSE\n.. _PyQt5: https://pypi.org/project/PyQt5/\n.. _PyQt6: https://pypi.org/project/PyQt6/\n.. _PySide2: https://pypi.org/project/PySide2/\n.. _PySide6: https://pypi.org/project/PySide6/\n.. _QThreads: https://doc.qt.io/qt-5/qthread.html\n.. _QtAsyncRunner: https://qt-async-threads.readthedocs.io/en/latest/reference.html#qt_async_threads.QtAsyncRunner\n.. _ThreadPoolExecutor: https://docs.python.org/3/library/concurrent.futures.html#threadpoolexecutor\n.. _asyncio: https://docs.python.org/3/library/asyncio.html\n.. _httpx: https://www.python-httpx.org\n.. _qasync: https://pypi.org/project/qasync\n.. _qtpy: https://pypi.org/project/qtpy/\n.. _qtrio: https://pypi.org/project/qtrio\n.. _trio: https://pypi.org/project/trio\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://qt-async-threads.readthedocs.io/",
    "keywords": "qt, async, threads,Source=https://github.com/nicoddemus/qt-async-threads,Docs=https://qt-async-threads.readthedocs.io",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "qt-async-threads",
    "package_url": "https://pypi.org/project/qt-async-threads/",
    "platform": null,
    "project_url": "https://pypi.org/project/qt-async-threads/",
    "project_urls": {
      "Homepage": "https://qt-async-threads.readthedocs.io/"
    },
    "release_url": "https://pypi.org/project/qt-async-threads/0.4.0/",
    "requires_dist": [
      "attrs",
      "boltons",
      "qtpy",
      "black ; extra == 'dev'",
      "mypy ; extra == 'dev'",
      "pre-commit ; extra == 'dev'",
      "pytest-qt ; extra == 'dev'",
      "requests ; extra == 'dev'"
    ],
    "requires_python": ">=3.10",
    "summary": "Use convenient async/await syntax to spawn threads in Qt applications",
    "version": "0.4.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16811729,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "90e93e4081f58e816d97ea9e33c1698c2c954a3e220512ca52d662dc8171d4ca",
          "md5": "0ef1a502bc70de802554fe9ec8a26d39",
          "sha256": "199b91cb0b8965ecf0073ede1e59614bd636e2d5a8f057047e278a25f89487ea"
        },
        "downloads": -1,
        "filename": "qt_async_threads-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0ef1a502bc70de802554fe9ec8a26d39",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 12653,
        "upload_time": "2022-05-07T15:13:01",
        "upload_time_iso_8601": "2022-05-07T15:13:01.205975Z",
        "url": "https://files.pythonhosted.org/packages/90/e9/3e4081f58e816d97ea9e33c1698c2c954a3e220512ca52d662dc8171d4ca/qt_async_threads-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "300599770c229d5cf0f9c5c9dc37b7e09a98339ed9eace4760d472df6ff8f74d",
          "md5": "0fc370c6415594e407ce7f54fd57302e",
          "sha256": "106a2f5faf9146a81646544650e20380bebb0160e9c8455e4ea0e9f6f7335ac1"
        },
        "downloads": -1,
        "filename": "qt-async-threads-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0fc370c6415594e407ce7f54fd57302e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 31874,
        "upload_time": "2022-05-07T15:13:04",
        "upload_time_iso_8601": "2022-05-07T15:13:04.646194Z",
        "url": "https://files.pythonhosted.org/packages/30/05/99770c229d5cf0f9c5c9dc37b7e09a98339ed9eace4760d472df6ff8f74d/qt-async-threads-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4ca2c1b70c6fd0f506e72fce7153b2775d8f6217433711faa1ccde15d88e8c17",
          "md5": "2cdc88ce4075569525022288f824869f",
          "sha256": "f9c2c58026a20442043b2e9ab1ff73de32e803ca3fe239145b5cf6e50eb1c1e4"
        },
        "downloads": -1,
        "filename": "qt_async_threads-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2cdc88ce4075569525022288f824869f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 12595,
        "upload_time": "2022-05-07T15:36:36",
        "upload_time_iso_8601": "2022-05-07T15:36:36.088166Z",
        "url": "https://files.pythonhosted.org/packages/4c/a2/c1b70c6fd0f506e72fce7153b2775d8f6217433711faa1ccde15d88e8c17/qt_async_threads-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d99bb6855ba17365135c5a3583560bdf0cd320e9d89f024a0956e006f6679e44",
          "md5": "cda0f9c12bd16aec7f7be8f08861b865",
          "sha256": "3ac714e86f1fd96c5d881115556e35b3ebc498b3ea4903bfb1cd5b74f9df6f0c"
        },
        "downloads": -1,
        "filename": "qt-async-threads-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "cda0f9c12bd16aec7f7be8f08861b865",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 31632,
        "upload_time": "2022-05-07T15:36:38",
        "upload_time_iso_8601": "2022-05-07T15:36:38.280895Z",
        "url": "https://files.pythonhosted.org/packages/d9/9b/b6855ba17365135c5a3583560bdf0cd320e9d89f024a0956e006f6679e44/qt-async-threads-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd3e5d6d79b6b8280d72e581685e754d06c86d81e13804a0c19e416a9e72dd85",
          "md5": "90bab54b22b601f96bc4ab67e7ee52b0",
          "sha256": "e6349d6f3835fc7b111e3a050bef18dc3e4c23388f40389df683d182d2bff851"
        },
        "downloads": -1,
        "filename": "qt_async_threads-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "90bab54b22b601f96bc4ab67e7ee52b0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 12750,
        "upload_time": "2022-05-15T13:49:14",
        "upload_time_iso_8601": "2022-05-15T13:49:14.820457Z",
        "url": "https://files.pythonhosted.org/packages/bd/3e/5d6d79b6b8280d72e581685e754d06c86d81e13804a0c19e416a9e72dd85/qt_async_threads-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc1a7da7ca5ebccb60280934482d95923fe71596a2092a0d7372afb8a28320ea",
          "md5": "fa969c41c12d099e780b612987a26b45",
          "sha256": "50f4126b469879aa77f21f3a6eadc098d896acbc3f1c67c1f1bdfa4671a8adc8"
        },
        "downloads": -1,
        "filename": "qt-async-threads-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fa969c41c12d099e780b612987a26b45",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 31680,
        "upload_time": "2022-05-15T13:49:16",
        "upload_time_iso_8601": "2022-05-15T13:49:16.500488Z",
        "url": "https://files.pythonhosted.org/packages/dc/1a/7da7ca5ebccb60280934482d95923fe71596a2092a0d7372afb8a28320ea/qt-async-threads-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "25ff144d701f3eb838bc82029af9954a6dc501202c858b1caa42db148e0692da",
          "md5": "9a33a70e206889dbf518b2578a23d428",
          "sha256": "5ef37366bd54b78d1d4d454f936a99172900092f58b7aa9dd52d6f9071781c48"
        },
        "downloads": -1,
        "filename": "qt_async_threads-0.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9a33a70e206889dbf518b2578a23d428",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 12750,
        "upload_time": "2022-05-17T11:40:45",
        "upload_time_iso_8601": "2022-05-17T11:40:45.346709Z",
        "url": "https://files.pythonhosted.org/packages/25/ff/144d701f3eb838bc82029af9954a6dc501202c858b1caa42db148e0692da/qt_async_threads-0.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "61286369ead01c0065e3d42ad809c7578a7e831d8e789d3a1342a9615cc1c223",
          "md5": "c7a69ae4a81fdd55e7914290c98f1499",
          "sha256": "1cec7374336e3925344055ca5cb191d95329c90edccbea2c0d4ecdfa75854e8c"
        },
        "downloads": -1,
        "filename": "qt-async-threads-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c7a69ae4a81fdd55e7914290c98f1499",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 31685,
        "upload_time": "2022-05-17T11:40:47",
        "upload_time_iso_8601": "2022-05-17T11:40:47.103954Z",
        "url": "https://files.pythonhosted.org/packages/61/28/6369ead01c0065e3d42ad809c7578a7e831d8e789d3a1342a9615cc1c223/qt-async-threads-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d33a4f88df5feb0e2e87283eee6e522023abfe19d854428e1a9c29ecff435521",
          "md5": "6220b36859509958216565bf808d7050",
          "sha256": "69da322aec41bc7aa022423858ed4af84ac25aac3c8136942ec830828d1041be"
        },
        "downloads": -1,
        "filename": "qt_async_threads-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6220b36859509958216565bf808d7050",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 12823,
        "upload_time": "2023-02-11T14:09:02",
        "upload_time_iso_8601": "2023-02-11T14:09:02.819977Z",
        "url": "https://files.pythonhosted.org/packages/d3/3a/4f88df5feb0e2e87283eee6e522023abfe19d854428e1a9c29ecff435521/qt_async_threads-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fbdb447e85ec57fc351000fc14a48c7c9fad20f7252e977a851b9e2a41022ab1",
          "md5": "b215890c62591371fb55b78875a6ef85",
          "sha256": "6ba5561c9bc604fb3a30f1c7492a4804e8beeb5d1a8d37495677f8f0394eaf0a"
        },
        "downloads": -1,
        "filename": "qt-async-threads-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b215890c62591371fb55b78875a6ef85",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 32018,
        "upload_time": "2023-02-11T14:09:04",
        "upload_time_iso_8601": "2023-02-11T14:09:04.480637Z",
        "url": "https://files.pythonhosted.org/packages/fb/db/447e85ec57fc351000fc14a48c7c9fad20f7252e977a851b9e2a41022ab1/qt-async-threads-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d33a4f88df5feb0e2e87283eee6e522023abfe19d854428e1a9c29ecff435521",
        "md5": "6220b36859509958216565bf808d7050",
        "sha256": "69da322aec41bc7aa022423858ed4af84ac25aac3c8136942ec830828d1041be"
      },
      "downloads": -1,
      "filename": "qt_async_threads-0.4.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6220b36859509958216565bf808d7050",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10",
      "size": 12823,
      "upload_time": "2023-02-11T14:09:02",
      "upload_time_iso_8601": "2023-02-11T14:09:02.819977Z",
      "url": "https://files.pythonhosted.org/packages/d3/3a/4f88df5feb0e2e87283eee6e522023abfe19d854428e1a9c29ecff435521/qt_async_threads-0.4.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fbdb447e85ec57fc351000fc14a48c7c9fad20f7252e977a851b9e2a41022ab1",
        "md5": "b215890c62591371fb55b78875a6ef85",
        "sha256": "6ba5561c9bc604fb3a30f1c7492a4804e8beeb5d1a8d37495677f8f0394eaf0a"
      },
      "downloads": -1,
      "filename": "qt-async-threads-0.4.0.tar.gz",
      "has_sig": false,
      "md5_digest": "b215890c62591371fb55b78875a6ef85",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10",
      "size": 32018,
      "upload_time": "2023-02-11T14:09:04",
      "upload_time_iso_8601": "2023-02-11T14:09:04.480637Z",
      "url": "https://files.pythonhosted.org/packages/fb/db/447e85ec57fc351000fc14a48c7c9fad20f7252e977a851b9e2a41022ab1/qt-async-threads-0.4.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}