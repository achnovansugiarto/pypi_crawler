{
  "info": {
    "author": "Railflow",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Pytest",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Quality Assurance",
      "Topic :: Software Development :: Testing",
      "Topic :: Utilities"
    ],
    "description": "# pytest-railflow-testrail-reporter\n\n[![PyPI](https://img.shields.io/pypi/v/pytest-railflow-testrail-reporter)](https://pypi.org/project/pytest-railflow-testrail-reporter/)\n[![MIT license](https://img.shields.io/badge/License-MIT-blue.svg)](https://lbesson.mit-license.org/)\n[![PyPI - Downloads](https://img.shields.io/pypi/dm/pytest-railflow-testrail-reporter)](https://pypi.org/project/pytest-railflow-testrail-reporter/)\n\n`pytest-railflow-testrail-reporter` is a custom reporter which generates JSON report file containing some TestRail-related data.  \nThe reporter helps you to integrate your pytest test with TestRail easily by producing JSON test report files which can be uploaded into [TestRail](https://www.gurock.com/testrail/test-management/) by using powerful [Railflow NPM CLI](https://www.npmjs.com/package/railflow) tool or native plugins for [Jenkins and TeamCity](https://railflow.io/resources/downloads).  \n\nRequirements\n============\n\nIn order to use pytest-railflow-testrail-reporter plugin, following\nprerequisites should be met.\n\n> -   Python 2.7, 3.4 or greater\n> -   Pytest\n\nInstallation\n============\n\nUsing Pip\n---------\n\nTo install the pytest-railflow-testrail-reporter plugin using pip,run\nthe following command in terminal:\n\n    pip install pytest-railflow-testrail-reporter\n\nThis will install the plugin to the system.\n\nUsage\n=====\n\nTo add Railflow markers to the tests '@pytest.mark.railflow' marker is used.\n\nThe plugin supports the following attributes:\n\n### Railflow configuration attributes description\n\nAttribute Name | Description |\n------------| -------------|\ntitle| Name of the test suite or test case|\ncase_type| Case type in TestRail, e.g.: Automated, Compatibility, etc...|\ncase_priority| Case type in TestRail, e.g.: Critical, High, etc...|\ncase_fields| Values for custom case fields in TestRail in the following format: ['field1=value1','field2=value2']|\nresult_fields| Values for result fields in TestRail in the following format: ['field1=value1','field2=value2']|\njira_ids| Jira IDs.These values will be populated as a case field 'refs'. Should input as an array of strings, e.g.: ['jid1','jid2']\ntestrail_ids| IDs of test cases in TestRail. Should input as an array of integers, e.g.: [1,2,3]\nsmart_failure_assignment| Array of TestRail users to automatically assign failed test cases. Should input as a string array, e.g.: ['aaa@test.com','bbb@test.com']\n\nThese attributes can be either used in class level or function level.\n\n  Function level attributes | Class level attributes\n  --------------------------|-----------------------\n  jira\\_ids | case\\_fields\n  case\\_fields | result\\_fields\n  result\\_fields | case\\_type\n  testrail\\_ids | case\\_priority\n  case\\_type | smart\\_failure\\_assignment\n  case\\_priority | title\n  title |\n\nTo run the test, execute the following command in the terminal from the test directory:\n\n    pytest --jsonfile output.json\n\n### Adding arbitrary attachments into test report\n\nThe `testrail_add_screenshot` fixture can be used to add arbitrary attachments into the test report:\n\n```shell\ndef test_add(testrail_add_screenshot):\n    a = 3\n    b = 2\n    c = a + b\n    assert c == 5\n    testrail_add_screenshot(\"screenshot path\")\n```\n\n### Adding test steps to test report\n\nThe `testrail_add_test_step` fixture can be used to add test steps into test report:\n\nThe fixture has the following parameters:\n\nOrder | Description | Is Mandatory\n  --------------------------|-----------------------|--------------------\n1 | Step Name | Yes\n2 | Status Name | Yes\n3 | Actual Value | No\n4| Expected Value | No\n\n```shell\ndef test_multiply(testrail_add_test_step):\n    res = 8 * 4\n    testrail_add_test_step(\"multiply 8 and 4\", \"PASSED\", res, \"32\")\n```\n\nExamples\n========\n\n### Example 1 : pytest tests within a class\n\n1. Install 'pytest-railflow-testrail-reporter' .\n\n```shell\n$ pip install pytest-railflow-testrail-reporter\n```\n\n2. Add pytest test with Railfllow marker on class level.\n\ntest_calculation.py\n```shell\nimport pytest\n\n@pytest.mark.railflow(\n     jira_ids=[\"301219\"],\n    case_fields=[\n        {\n            \"name\": \"Required text field\",\n            \"value\": \"Class\"\n        }\n    ],\n    result_fields=[\n        {\n            \"name\": \"Custom field\",\n            \"value\": \"Result from class\"\n        }\n    ],\n    case_type=\"Automated\",\n    case_priority=\"Critical\",\n    smart_failure_assignment=[\"user1@gmail.com, user2@gmail.com\"]\n)\nclass TestClass:\n\n    def test_add(self):\n        a = 3\n        b = 2\n        c = a + b\n        assert c == 5\n\n    def test_subtract(self):\n        a = 3\n        b = 2\n        c = a - b\n        assert c == 0\n\n    @pytest.mark.railflow(\n        title = \"method title\",\n        jira_ids=[\"11111\"],\n        case_fields=[\n            {\n                \"name\": \"Required text field\",\n                \"value\": \"method\"\n            }\n        ],\n        result_fields=[\n            {\n                \"name\": \"Custom fieLD\",\n                \"value\": \"Result from method\"\n            }\n        ],\n        case_type=\"Compatibility\",\n        case_priority=\"High\",\n        smart_failure_assignment=[\"user3@gmail.com\"]\n    )\n    @pytest.mark.parametrize(\"a,b,c\", [(22, 11, 2), (64, 8, 8), (9, 3, 3)])\n    def test_divide(self, a, b, c):\n        assert a / b == c  \n```\n3. Run tests and generate report\n\n```shell\npytest --jsonfile output.json test_calculation.py\n```\n\n4. View report file\n\nReport file generated at the same directory where the test executed.\n\noutput.json\n```shell\n[\n    {\n        \"class_name\": \"TestClass\",\n        \"markers\": \"\",\n        \"file_name\": \"test_sample2\",\n        \"attachments\": [],\n        \"tests\": [\n            {\n                \"test_name\": \"test_add\",\n                \"details\": null,\n                \"markers\": \"\",\n                \"result\": \"PASSED\",\n                \"duration\": 0.00012004900054307655,\n                \"timestamp\": \"2022-03-09T15:53:53\",\n                \"message\": null\n            },\n            {\n                \"test_name\": \"test_subtract\",\n                \"details\": null,\n                \"markers\": \"\",\n                \"result\": \"FAILED\",\n                \"duration\": 0.00017888799993670546,\n                \"timestamp\": \"2022-03-09T15:53:53\",\n                \"message\": \"self = <test_sample2.TestClass object at 0x7f659f8af310>\\n\\n    def test_subtract(self):\\n        a = 3\\n        b = 2\\n        c = a - b\\n>       assert c == 0\\nE       assert 1 == 0\\n\\ntest_sample2.py:33: AssertionError\"\n            },\n            {\n                \"test_name\": \"test_divide\",\n                \"details\": null,\n                \"markers\": \"parametrize\",\n                \"parameters\": [\n                    {\n                        \"name\": \"a\",\n                        \"value\": 22\n                    },\n                    {\n                        \"name\": \"b\",\n                        \"value\": 11\n                    },\n                    {\n                        \"name\": \"c\",\n                        \"value\": 2\n                    }\n                ],\n                \"result\": \"PASSED\",\n                \"duration\": 0.0001058529996953439,\n                \"timestamp\": \"2022-03-09T15:53:53\",\n                \"message\": null,\n                \"railflow_test_attributes\": {\n                    \"title\": \"method title\",\n                    \"jira_ids\": [\n                        \"11111\"\n                    ],\n                    \"case_fields\": [\n                        {\n                            \"name\": \"Required text field\",\n                            \"value\": \"method\"\n                        }\n                    ],\n                    \"result_fields\": [\n                        {\n                            \"name\": \"Custom field\",\n                            \"value\": \"Result from method\"\n                        }\n                    ],\n                    \"case_type\": \"Compatibility\",\n                    \"case_priority\": \"High\",\n                    \"smart_failure_assignment\": [\n                        \"user3@gmail.com\"\n                    ]\n                }\n            },\n            {\n                \"test_name\": \"test_divide\",\n                \"details\": null,\n                \"markers\": \"parametrize\",\n                \"parameters\": [\n                    {\n                        \"name\": \"a\",\n                        \"value\": 64\n                    },\n                    {\n                        \"name\": \"b\",\n                        \"value\": 8\n                    },\n                    {\n                        \"name\": \"c\",\n                        \"value\": 8\n                    }\n                ],\n                \"result\": \"PASSED\",\n                \"duration\": 0.00013493100050254725,\n                \"timestamp\": \"2022-03-09T15:53:53\",\n                \"message\": null,\n                \"railflow_test_attributes\": {\n                    \"title\": \"method title\",\n                    \"jira_ids\": [\n                        \"11111\"\n                    ],\n                    \"case_fields\": [\n                        {\n                            \"name\": \"Required text field\",\n                            \"value\": \"method\"\n                        }\n                    ],\n                    \"result_fields\": [\n                        {\n                            \"name\": \"Custom field\",\n                            \"value\": \"Result from method\"\n                        }\n                    ],\n                    \"case_type\": \"Compatibility\",\n                    \"case_priority\": \"High\",\n                    \"smart_failure_assignment\": [\n                        \"user3@gmail.com\"\n                    ]\n                }\n            },\n            {\n                \"test_name\": \"test_divide\",\n                \"details\": null,\n                \"markers\": \"parametrize\",\n                \"parameters\": [\n                    {\n                        \"name\": \"a\",\n                        \"value\": 9\n                    },\n                    {\n                        \"name\": \"b\",\n                        \"value\": 3\n                    },\n                    {\n                        \"name\": \"c\",\n                        \"value\": 3\n                    }\n                ],\n                \"result\": \"PASSED\",\n                \"duration\": 0.00020506200235104188,\n                \"timestamp\": \"2022-03-09T15:53:53\",\n                \"message\": null,\n                \"railflow_test_attributes\": {\n                    \"title\": \"method title\",\n                    \"jira_ids\": [\n                        \"11111\"\n                    ],\n                    \"case_fields\": [\n                        {\n                            \"name\": \"Required text field\",\n                            \"value\": \"method\"\n                        }\n                    ],\n                    \"result_fields\": [\n                        {\n                            \"name\": \"Custom field\",\n                            \"value\": \"Result from method\"\n                        }\n                    ],\n                    \"case_type\": \"Compatibility\",\n                    \"case_priority\": \"High\",\n                    \"smart_failure_assignment\": [\n                        \"user3@gmail.com\"\n                    ]\n                }\n            }\n        ],\n        \"railflow_test_attributes\": {\n            \"jira_ids\": [\n                \"301219\"\n            ],\n            \"case_fields\": [\n                {\n                    \"name\": \"Required text field\",\n                    \"value\": \"Class\"\n                }\n            ],\n            \"result_fields\": [\n                {\n                    \"name\": \"Custom field\",\n                    \"value\": \"Result from class\"\n                }\n            ],\n            \"case_type\": \"Automated\",\n            \"case_priority\": \"Critical\",\n            \"smart_failure_assignment\": [\n                \"user1@gmail.com, user2@gmail.com\"\n            ]\n        }\n    }\n]\n```\n5. Install Railflow CLI\n\n```shell\nnpm install railflow\n```\n\n6. Run Railflow CLI and upload test results into TestRail\n\n```shell\nnpx railflow -k ABCDE-12345-FGHIJ-67890 -url https://testrail.your-server.com/ -u testrail-username -p testrail-password -pr \"Railflow Demo\" -path section1/section2 -f pytest-railflow -r pytest_example/*.json -sm path\n```\n\nWhere:\n\n| Key                     | Description                                                                                                                                                                                                                                                                                                                                                                                                                                         | Example                                                          |\n|-------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------------------------------------------------------------|\n| -k, --key               | (online activation) License key. Can be set with RAILFLOW_LICENSE environment variable                                                                                                                                                                                                                                                                                                                                                              | -k XXXXX-XXXXX-XXXXX-XXXXX                                       |\n| -url, --url             | TestRail instance URL                                                                                                                                                                                                                                                                                                                                                                                                                               | -url https://example.testrail.io                                 |\n| -u, --username          | TestRail username. Can be set with RAILFLOW_TR_USER environment variable                                                                                                                                                                                                                                                                                                                                                                            | -u test-username                                                 |\n| -p, --password          | TestRail password or API Key. Can be set with RAILFLOW_TR_PASSWORD environment variable                                                                                                                                                                                                                                                                                                                                                             | -p XtpHXiPLEODyhF                                                |\n| -pr, --project          | TestRail project name                                                                                                                                                                                                                                                                                                                                                                                                                               | -pr \"example project\"                                            |\n| -path, --test-path      | TestRail test cases path                                                                                                                                                                                                                                                                                                                                                                                                                            | -path \"Section1/subsection2/ShoppingCart                         |\n| -f, --format            | Report format: 'pytest-railflow' (case insensitive)                                                                                                                                                                                                                                                                                                                    | -f junit                                                         |\n| -r, --report-files      | The file path(s) to the test report file(s) generated during the build. User can pass multiple values separated with spaces. Ant-style patterns such as **\\*\\*/reports/\\*.xml** can be used.<br/>E.g. use **target/reports/\\*.xml** to capture all XML files in **target/reports** directory.                                                                                                                            | -r target/surefire-reports/\\*.xml target/failsafe-reports/\\*.xml |\n| -sm, --search-mode      |  Specifies the test case lookup algorithm. <br/> `name:` search for test case matching the name within the entire test suite. If test case found, update the test case. If test case not found, create a new test case within specified `-path` <br/> `path:` search for test case matching the name within the specified `-path`. If test case found, update the test case. If test case not found, create a new test case within specified `-path`| -sm path                                                         |\n\nPlease see [Railflow NPM documentation](https://docs.railflow.io/cli/railflow-npm/) for the all the details about Railflow CLI options.\n\n7. View results in TestRail\n\n#### Test run\n\n![Alt Test run in TestRail](https://raw.githubusercontent.com/railflow/railflow_pytest_examples/main/images/TestRail_testrun.png \"Test run in TestRail\")\n\n#### Test result details\n\n![Alt Test result details in TestRail](https://raw.githubusercontent.com/railflow/railflow_pytest_examples/main/images/TestRail_testcase_data.png \"Test result details in Testrail\")\n\n#### Parameterized tests details\n\n![Alt Parameterized tests details in TestRail](https://raw.githubusercontent.com/railflow/railflow_pytest_examples/main/images/TestRail_parameterized_tests.png \"Test result parameterized tests in Testrail\")\n\n### Example 2 : pytest tests without a class (using pytest splinter)\n\n1. Install 'pytest-splinter' .\n\n```shell\n$ pip install pytest-splinter\n```\n\nAlso, make sure that chromedriver or Firefox driver is installed in your system for running splinter.\n\n    For Firefox driver: [Splinter Documentation on Firefox Driver](https://splinter.readthedocs.io/en/latest/drivers/firefox.html)\n\n    For Chrome driver : [SPlinter Documentation on Chrome Driver](https://splinter.readthedocs.io/en/latest/drivers/chrome.html)\n\n2. Add pytest test.\n\ntest_browser.py\n```shell\nimport pytest\n\n@pytest.mark.railflow(\n    jira_ids=[\"301219\"],\n    case_fields=[\n        {\n            \"name\": \"Required text field\",\n            \"value\": \"Class\"\n        }\n    ],\n    result_fields=[\n        {\n            \"name\": \"Custom field\",\n            \"value\": \"Result from class\"\n        }\n    ],\n    case_type=\"Automated\",\n    case_priority=\"Critical\",\n    smart_failure_assignment=[\"user1@gmail.com, user2@gmail.com\"]\n)\ndef test_google(browser):\n    \"\"\"Test using real browser.\"\"\"\n    url = \"https://www.google.com\"\n    browser.visit(url)\n    browser.fill('q', 'splinter - python acceptance testing for web applications')\n    # Find and click the 'search' button\n    button = browser.find_by_name('btnK')\n    # Interact with elements\n    button.click()\n    assert browser.is_text_present('splinter.cobrateam.info'), \"splinter.cobrateam.info wasn't found... We need to\"\n    ' improve our SEO techniques'\n```\n3. Run tests and generate report (using chrome driver)\nif '--splinter-webdriver' argument is not provided , it will use firefox as default web driver\n\n```shell\npytest --splinter-webdriver chrome --jsonfile output.json test_browser.py\n```\n4. View report file\n\noutput.json\n```shell\n[\n    {\n        \"class_name\": null,\n        \"test_name\": \"test_google\",\n        \"details\": \"Test using real browser.\",\n        \"markers\": \"\",\n        \"result\": \"FAILED\",\n        \"duration\": 8.737954783000077,\n        \"timestamp\": \"2022-03-06T10:51:51\",\n        \"message\": \"browser = <splinter.driver.webdriver.chrome.WebDriver object at 0x7f55c6f50670>\\n\\n    @pytest.mark.railflow(\\n         jira_ids=[\\\"301219\\\"],\\n        case_fields=[\\n            {\\n                \\\"name\\\": \\\"ReQuired text field\\\",\\n                \\\"value\\\": \\\"Class\\\"\\n            }\\n        ],\\n        result_fields=[\\n            {\\n                \\\"name\\\": \\\"Custom fIeLD\\\",\\n                \\\"value\\\": \\\"Result from class\\\"\\n            }\\n        ],\\n        case_type=\\\"Railflow\\\",\\n        case_priority=\\\"Critical\\\",\\n        smart_failure_assignment=[\\\"user1@gmail.com, user2@gmail.com\\\"]\\n    )\\n    def test_google(browser):\\n        \\\"\\\"\\\"Test using real browser.\\\"\\\"\\\"\\n        url = \\\"https://www.google.com\\\"\\n        browser.visit(url)\\n        browser.fill('q', 'splinter - python acceptance testing for web applications')\\n        # Find and click the 'search' button\\n        button = browser.find_by_name('btnK')\\n        # Interact with elements\\n        button.click()\\n>       assert browser.is_text_present('splinter.cobrateam.info'), \\\"splinter.cobrateam.info wasn't found... We need to\\\"\\nE       AssertionError: splinter.cobrateam.info wasn't found... We need to\\nE       assert False\\nE        +  where False = <bound method BaseWebDriver.is_text_present of <splinter.driver.webdriver.chrome.WebDriver object at 0x7f55c6f50670>>('splinter.cobrateam.info')\\nE        +    where <bound method BaseWebDriver.is_text_present of <splinter.driver.webdriver.chrome.WebDriver object at 0x7f55c6f50670>> = <splinter.driver.webdriver.chrome.WebDriver object at 0x7f55c6f50670>.is_text_present\\n\\ntest_browser.py:30: AssertionError\",\n        \"file_name\": \"test_browser\",\n        \"attachments\": [\n            \" /home/projects/pytest/example_tests/railflow_pytest_examples/railflow_pytest_examples.test_browser/test_google-browser.png\"\n        ],\n        \"railflow_test_attributes\": {\n            \"jira_ids\": [\n                \"301219\"\n            ],\n            \"case_fields\": [\n                {\n                    \"name\": \"Required text field\",\n                    \"value\": \"Class\"\n                }\n            ],\n            \"result_fields\": [\n                {\n                    \"name\": \"Custom field\",\n                    \"value\": \"Result from class\"\n                }\n            ],\n            \"case_type\": \"Railflow\",\n            \"case_priority\": \"Critical\",\n            \"smart_failure_assignment\": [\n                \"user1@gmail.com, user2@gmail.com\"\n            ]\n        }\n    }\n]\n```\n5. Run Railflow CLI and upload test results into TestRail\n\n```shell\nnpx railflow -k ABCDE-12345-FGHIJ-67890 -url https://testrail.your-server.com/ -u testrail-username -p testrail-password -pr \"Railflow Demo\" -path section1/section2 -f pytest-railflow -r pytest_example/*.json\n```\n\nPlease check\n[examples](https://github.com/railflow/railflow_pytest_examples)\nfor more information and sample tests.\n\nLicense\n=======\n\nThis software is licensed under the [MIT license](https://lbesson.mit-license.org/)\n\nSee [License file](https://github.com/railflow/railflow-pytest-plugin/blob/main/LICENSE) for more information.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/railflow/railflow-pytest-plugin",
    "keywords": "py.test pytest json railflow report",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pytest-railflow-testrail-reporter",
    "package_url": "https://pypi.org/project/pytest-railflow-testrail-reporter/",
    "platform": null,
    "project_url": "https://pypi.org/project/pytest-railflow-testrail-reporter/",
    "project_urls": {
      "Homepage": "https://github.com/railflow/railflow-pytest-plugin"
    },
    "release_url": "https://pypi.org/project/pytest-railflow-testrail-reporter/0.2.5/",
    "requires_dist": [
      "pytest"
    ],
    "requires_python": "",
    "summary": "Generate json reports along with specified metadata defined in test markers.",
    "version": "0.2.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14283548,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c1232c9deb69e3f0d87186b96f1c42648ec72c3505462c4093be6bd0b8b73154",
          "md5": "d08a7bf760a77b2821214b88508c1e06",
          "sha256": "d782f4826258f8aaf500e3b5285639418041536721f899632e0184dceca9875e"
        },
        "downloads": -1,
        "filename": "pytest_railflow_testrail_reporter-0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d08a7bf760a77b2821214b88508c1e06",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 6046,
        "upload_time": "2021-08-18T08:06:00",
        "upload_time_iso_8601": "2021-08-18T08:06:00.803709Z",
        "url": "https://files.pythonhosted.org/packages/c1/23/2c9deb69e3f0d87186b96f1c42648ec72c3505462c4093be6bd0b8b73154/pytest_railflow_testrail_reporter-0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5cb264560f4fd5bcc9687b8df3b3c6a8dbb906acc8949e324e417fbb6d93a239",
          "md5": "6822858de121d90bbb5e90d4a270dd29",
          "sha256": "4f51db78ab3a1f5ea6a3aca9d198b1d73ff8d0cc98eb4bd05ea1fb9b622f0614"
        },
        "downloads": -1,
        "filename": "pytest-railflow-testrail-reporter-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6822858de121d90bbb5e90d4a270dd29",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5430,
        "upload_time": "2021-08-18T08:06:02",
        "upload_time_iso_8601": "2021-08-18T08:06:02.257669Z",
        "url": "https://files.pythonhosted.org/packages/5c/b2/64560f4fd5bcc9687b8df3b3c6a8dbb906acc8949e324e417fbb6d93a239/pytest-railflow-testrail-reporter-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d8c24a371d8c2fc57209f795e48c1559ee2900ca179046e1711c0f9403b71a10",
          "md5": "c3f8fc3290ab0df76ee71e7e0b409d20",
          "sha256": "3e86f62b3be1267299b4bd600c9e294b839c66a3d3bd04de319040f714679734"
        },
        "downloads": -1,
        "filename": "pytest_railflow_testrail_reporter-0.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c3f8fc3290ab0df76ee71e7e0b409d20",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 6011,
        "upload_time": "2021-08-18T08:31:54",
        "upload_time_iso_8601": "2021-08-18T08:31:54.208208Z",
        "url": "https://files.pythonhosted.org/packages/d8/c2/4a371d8c2fc57209f795e48c1559ee2900ca179046e1711c0f9403b71a10/pytest_railflow_testrail_reporter-0.1.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "afb4913b8fbe465cc5370c56a3841f5dd2cfca3053d5c2306c79003e639a3e45",
          "md5": "982feccedd13637e67f40f474768ff38",
          "sha256": "4eb7053161e2d937583c04773dc5b8e9e1cbc632d39c2d213576f393e1dbc3d6"
        },
        "downloads": -1,
        "filename": "pytest-railflow-testrail-reporter-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "982feccedd13637e67f40f474768ff38",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5364,
        "upload_time": "2021-08-18T08:31:55",
        "upload_time_iso_8601": "2021-08-18T08:31:55.153676Z",
        "url": "https://files.pythonhosted.org/packages/af/b4/913b8fbe465cc5370c56a3841f5dd2cfca3053d5c2306c79003e639a3e45/pytest-railflow-testrail-reporter-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1c0ffb2f5cc2860c8f0c5cef8170a28e1532f68c9ef2edce791a8dfa93766593",
          "md5": "4015df5dea3ab8ba6bc278a534c3313b",
          "sha256": "d02cb497d1ebed9360770ee6decf536e0866e417a6106e52b08cb23bba786b9e"
        },
        "downloads": -1,
        "filename": "pytest_railflow_testrail_reporter-0.1.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4015df5dea3ab8ba6bc278a534c3313b",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 6298,
        "upload_time": "2021-08-26T21:21:45",
        "upload_time_iso_8601": "2021-08-26T21:21:45.644131Z",
        "url": "https://files.pythonhosted.org/packages/1c/0f/fb2f5cc2860c8f0c5cef8170a28e1532f68c9ef2edce791a8dfa93766593/pytest_railflow_testrail_reporter-0.1.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0190a75c33dfa82a3f641c2aab96a5457de20ea8ad04c721578d6ba3ac2831f7",
          "md5": "591d5b869c858658cbb5bb9dd9963184",
          "sha256": "db69f940d65b80fb90202a0254c64445403125d4b2425dc6916e833a53a1e312"
        },
        "downloads": -1,
        "filename": "pytest-railflow-testrail-reporter-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "591d5b869c858658cbb5bb9dd9963184",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5713,
        "upload_time": "2021-08-26T21:21:48",
        "upload_time_iso_8601": "2021-08-26T21:21:48.656047Z",
        "url": "https://files.pythonhosted.org/packages/01/90/a75c33dfa82a3f641c2aab96a5457de20ea8ad04c721578d6ba3ac2831f7/pytest-railflow-testrail-reporter-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5789c5b044084ad61d9c4caa8ff26da98bcc8633fd91a7a239a7cd7e2e374287",
          "md5": "861e5b40536aee819239c5e0ed45a4cf",
          "sha256": "04c0898ab0e0a24a9502ac0e9928e8118f6b5f013ba142b8c38443e3cb90b389"
        },
        "downloads": -1,
        "filename": "pytest_railflow_testrail_reporter-0.1.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "861e5b40536aee819239c5e0ed45a4cf",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 6351,
        "upload_time": "2021-08-26T21:54:26",
        "upload_time_iso_8601": "2021-08-26T21:54:26.455900Z",
        "url": "https://files.pythonhosted.org/packages/57/89/c5b044084ad61d9c4caa8ff26da98bcc8633fd91a7a239a7cd7e2e374287/pytest_railflow_testrail_reporter-0.1.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7c4eed5ba0163396219ef3ac98495368195a22b8ea54db530b1e081bf2ff8c93",
          "md5": "6f68a7cdf1c16aaff90c5cc6ccbeef35",
          "sha256": "e952e17fcdd469483631fe97dff27f4c0bf91e4dd13a3c82dffeaf9af67e3ac2"
        },
        "downloads": -1,
        "filename": "pytest-railflow-testrail-reporter-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "6f68a7cdf1c16aaff90c5cc6ccbeef35",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5779,
        "upload_time": "2021-08-26T21:54:27",
        "upload_time_iso_8601": "2021-08-26T21:54:27.710786Z",
        "url": "https://files.pythonhosted.org/packages/7c/4e/ed5ba0163396219ef3ac98495368195a22b8ea54db530b1e081bf2ff8c93/pytest-railflow-testrail-reporter-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0fd4ee1e447f22e229b6c991a125d1a63e06aa53ef5f628b4dd227efd36552b2",
          "md5": "1cd19d645f06a0c72a1ac1be5eec7ba5",
          "sha256": "d74a85c0e0a3d9a5da40910aeb955fe0f6344d6e70c691c96946ac6865d1fc60"
        },
        "downloads": -1,
        "filename": "pytest_railflow_testrail_reporter-0.1.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1cd19d645f06a0c72a1ac1be5eec7ba5",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 6337,
        "upload_time": "2021-08-26T22:09:52",
        "upload_time_iso_8601": "2021-08-26T22:09:52.916686Z",
        "url": "https://files.pythonhosted.org/packages/0f/d4/ee1e447f22e229b6c991a125d1a63e06aa53ef5f628b4dd227efd36552b2/pytest_railflow_testrail_reporter-0.1.4-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6b9188b02c0d7e38f05a0b7e79e75b9328706fd3e6000bb0dcaaa6671c6d23d5",
          "md5": "08d91701e33f263428090a9e6ee0b3ae",
          "sha256": "3c37966abab56894c65b005ced4efa36597fae276cd8819c8844694821f7c2a0"
        },
        "downloads": -1,
        "filename": "pytest-railflow-testrail-reporter-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "08d91701e33f263428090a9e6ee0b3ae",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5772,
        "upload_time": "2021-08-26T22:09:54",
        "upload_time_iso_8601": "2021-08-26T22:09:54.893624Z",
        "url": "https://files.pythonhosted.org/packages/6b/91/88b02c0d7e38f05a0b7e79e75b9328706fd3e6000bb0dcaaa6671c6d23d5/pytest-railflow-testrail-reporter-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8cecb8997775451bd9b0aaf0b7502101e85b5b21a1a6a8a85ed9c3b922fb1183",
          "md5": "197276d9514f8f7f1739340449f3cd01",
          "sha256": "26191fa7c86b4c9b78c153ced04af9ca8c65dc2b90898ea3823246771cc3578f"
        },
        "downloads": -1,
        "filename": "pytest_railflow_testrail_reporter-0.1.5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "197276d9514f8f7f1739340449f3cd01",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 6325,
        "upload_time": "2021-08-26T22:13:04",
        "upload_time_iso_8601": "2021-08-26T22:13:04.502779Z",
        "url": "https://files.pythonhosted.org/packages/8c/ec/b8997775451bd9b0aaf0b7502101e85b5b21a1a6a8a85ed9c3b922fb1183/pytest_railflow_testrail_reporter-0.1.5-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c47f1fd121f76800f245027166b9310d4e263baaa197528c069bbeaf2b2f148c",
          "md5": "beb4506dde43062ed16465f2d0a958bb",
          "sha256": "de8cacf0ca32c712f0818101d9973c08d9123aa7e504f59ebbff705c8a82493e"
        },
        "downloads": -1,
        "filename": "pytest-railflow-testrail-reporter-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "beb4506dde43062ed16465f2d0a958bb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5758,
        "upload_time": "2021-08-26T22:13:05",
        "upload_time_iso_8601": "2021-08-26T22:13:05.956486Z",
        "url": "https://files.pythonhosted.org/packages/c4/7f/1fd121f76800f245027166b9310d4e263baaa197528c069bbeaf2b2f148c/pytest-railflow-testrail-reporter-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ac8938a26f51de6b11d069650340b6ff81fc60f03b5c2cb289bc82afa2f51690",
          "md5": "41c1653f4dbb26c1e964c9044ed2f3d4",
          "sha256": "289571fbbaa67c518baa3b162fad044c626588a8c94ad14f6708c4db48047707"
        },
        "downloads": -1,
        "filename": "pytest_railflow_testrail_reporter-0.1.6-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "41c1653f4dbb26c1e964c9044ed2f3d4",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 6262,
        "upload_time": "2021-09-02T04:22:02",
        "upload_time_iso_8601": "2021-09-02T04:22:02.133201Z",
        "url": "https://files.pythonhosted.org/packages/ac/89/38a26f51de6b11d069650340b6ff81fc60f03b5c2cb289bc82afa2f51690/pytest_railflow_testrail_reporter-0.1.6-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9552ffb17a71f98b8733e7619da20856a5c72fc5e48cdec6a994ff9752ae31cf",
          "md5": "7017d22767785ad40f405b6cf267b3aa",
          "sha256": "3a9ec4c235d9e19e7e9e8d3e3d1027e915178a222ccb978fda0631d0e5f77d51"
        },
        "downloads": -1,
        "filename": "pytest-railflow-testrail-reporter-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "7017d22767785ad40f405b6cf267b3aa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5690,
        "upload_time": "2021-09-02T04:22:03",
        "upload_time_iso_8601": "2021-09-02T04:22:03.441552Z",
        "url": "https://files.pythonhosted.org/packages/95/52/ffb17a71f98b8733e7619da20856a5c72fc5e48cdec6a994ff9752ae31cf/pytest-railflow-testrail-reporter-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fe7ebb4d9e77f1689b5cc3830056127dadb9c76e3d128684f462356cd11b8dd4",
          "md5": "c8428de5b01c480ec80111a80c3d6236",
          "sha256": "a93694623e69cbc4db67b1345e7a4ec7d4b2243605ea758e52e19ff0eff4e7a4"
        },
        "downloads": -1,
        "filename": "pytest_railflow_testrail_reporter-0.1.7-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c8428de5b01c480ec80111a80c3d6236",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 6274,
        "upload_time": "2021-12-01T23:14:34",
        "upload_time_iso_8601": "2021-12-01T23:14:34.199208Z",
        "url": "https://files.pythonhosted.org/packages/fe/7e/bb4d9e77f1689b5cc3830056127dadb9c76e3d128684f462356cd11b8dd4/pytest_railflow_testrail_reporter-0.1.7-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3d4fdf4baf93739ae31a751ec6629e14b95248cd6f69e8d596db718f342fb803",
          "md5": "35ba1a7d26b1b7f61cdd5814a1a6546b",
          "sha256": "fbd9b2632b3dcdc9c467ebfd16e28312aa9252453631d58c9b69f3028292db00"
        },
        "downloads": -1,
        "filename": "pytest-railflow-testrail-reporter-0.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "35ba1a7d26b1b7f61cdd5814a1a6546b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5706,
        "upload_time": "2021-12-01T23:14:35",
        "upload_time_iso_8601": "2021-12-01T23:14:35.748131Z",
        "url": "https://files.pythonhosted.org/packages/3d/4f/df4baf93739ae31a751ec6629e14b95248cd6f69e8d596db718f342fb803/pytest-railflow-testrail-reporter-0.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "84c40f83bd532de95ac46ebfdcae873a13da7e88b80de448f7502dee689410eb",
          "md5": "50d125cd62d984e0d2fc9363c813933a",
          "sha256": "42af24dcaa5ab32a4f911f178ed8afd1afe5dbf44752fa72f4ae130ceae9bf2c"
        },
        "downloads": -1,
        "filename": "pytest_railflow_testrail_reporter-0.1.8-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "50d125cd62d984e0d2fc9363c813933a",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 6278,
        "upload_time": "2021-12-02T18:45:35",
        "upload_time_iso_8601": "2021-12-02T18:45:35.768973Z",
        "url": "https://files.pythonhosted.org/packages/84/c4/0f83bd532de95ac46ebfdcae873a13da7e88b80de448f7502dee689410eb/pytest_railflow_testrail_reporter-0.1.8-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "950cd58eba503242409314e71778a6e1a7771363577b84ddede90c4a03f8fac9",
          "md5": "b32a1bb9c3b1265ab5c9701655f82cd7",
          "sha256": "d3094a6e9fb5d181f4364ae8a6c9e476e45c1eeb5e420ea314e9d8484a9ea207"
        },
        "downloads": -1,
        "filename": "pytest-railflow-testrail-reporter-0.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "b32a1bb9c3b1265ab5c9701655f82cd7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5709,
        "upload_time": "2021-12-02T18:45:37",
        "upload_time_iso_8601": "2021-12-02T18:45:37.046156Z",
        "url": "https://files.pythonhosted.org/packages/95/0c/d58eba503242409314e71778a6e1a7771363577b84ddede90c4a03f8fac9/pytest-railflow-testrail-reporter-0.1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70ed55ac597febfd753df515074904f00d5521118e87da0f7fd58f2b21673eb5",
          "md5": "70f76034c42594bdcdd36dd4b46901e3",
          "sha256": "7697909538c3c932ff8981ef60f270771ffe8123b5b5ef19f1415fc5dbaee4ea"
        },
        "downloads": -1,
        "filename": "pytest_railflow_testrail_reporter-0.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "70f76034c42594bdcdd36dd4b46901e3",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 7859,
        "upload_time": "2022-02-25T06:39:53",
        "upload_time_iso_8601": "2022-02-25T06:39:53.197152Z",
        "url": "https://files.pythonhosted.org/packages/70/ed/55ac597febfd753df515074904f00d5521118e87da0f7fd58f2b21673eb5/pytest_railflow_testrail_reporter-0.2.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1fd0dff09427493eb9697ef1ebd23f8ea5d1ca354369b3c5e5ff3b6f2235b885",
          "md5": "617f996c32e22cf54522253d7925cdb0",
          "sha256": "468a8d22b88914eb34e11eabaea60559c13300cc80eed8c09b6337d370ab3bf3"
        },
        "downloads": -1,
        "filename": "pytest-railflow-testrail-reporter-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "617f996c32e22cf54522253d7925cdb0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7285,
        "upload_time": "2022-02-25T06:39:54",
        "upload_time_iso_8601": "2022-02-25T06:39:54.695272Z",
        "url": "https://files.pythonhosted.org/packages/1f/d0/dff09427493eb9697ef1ebd23f8ea5d1ca354369b3c5e5ff3b6f2235b885/pytest-railflow-testrail-reporter-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5d10c38de1c1610d96e8a80f25a1287eb1d5d47a625c4b225b77c15c8d4cce97",
          "md5": "2c0a652418e160ce4fd40ab60b95f994",
          "sha256": "27eaa7dd08b9aeb0a01da2645b53a2e4ecbe09e3bbc2f61563c1df30c7977b03"
        },
        "downloads": -1,
        "filename": "pytest_railflow_testrail_reporter-0.2.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2c0a652418e160ce4fd40ab60b95f994",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 11675,
        "upload_time": "2022-03-23T15:09:11",
        "upload_time_iso_8601": "2022-03-23T15:09:11.686092Z",
        "url": "https://files.pythonhosted.org/packages/5d/10/c38de1c1610d96e8a80f25a1287eb1d5d47a625c4b225b77c15c8d4cce97/pytest_railflow_testrail_reporter-0.2.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f40efbbacf203bcef2bdd35e76e5643604ee37e007f60adf9712424ba64c219b",
          "md5": "82dcdffe17ff8ee6d4caa78b09bb1352",
          "sha256": "fd7f8636543d0483047bdb16f6e464bf6e3bcaf4a121385538d54407adaaee68"
        },
        "downloads": -1,
        "filename": "pytest-railflow-testrail-reporter-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "82dcdffe17ff8ee6d4caa78b09bb1352",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16488,
        "upload_time": "2022-03-23T15:09:13",
        "upload_time_iso_8601": "2022-03-23T15:09:13.375452Z",
        "url": "https://files.pythonhosted.org/packages/f4/0e/fbbacf203bcef2bdd35e76e5643604ee37e007f60adf9712424ba64c219b/pytest-railflow-testrail-reporter-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6326cca86471fb69993751c5719b166d2fbf7b75e837281c5ea49ac0f3fdba17",
          "md5": "474f858b351829ad49ce1e5a315631a4",
          "sha256": "07612138dc5b45198d27d85adf274342535755b2925c15b1f533d629e6849d82"
        },
        "downloads": -1,
        "filename": "pytest_railflow_testrail_reporter-0.2.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "474f858b351829ad49ce1e5a315631a4",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 11698,
        "upload_time": "2022-03-24T05:47:19",
        "upload_time_iso_8601": "2022-03-24T05:47:19.731428Z",
        "url": "https://files.pythonhosted.org/packages/63/26/cca86471fb69993751c5719b166d2fbf7b75e837281c5ea49ac0f3fdba17/pytest_railflow_testrail_reporter-0.2.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "45157cce9f01c53124e83a2577ebd97c83f3adbf43b44e058a034d4e3886eef6",
          "md5": "41a7438263e8039e6f78ccf6586ac71e",
          "sha256": "525c5af3b61b53db0882d21d5dfe95bdf46055b27463e34a810333a1ba40b688"
        },
        "downloads": -1,
        "filename": "pytest-railflow-testrail-reporter-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "41a7438263e8039e6f78ccf6586ac71e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16520,
        "upload_time": "2022-03-24T05:47:21",
        "upload_time_iso_8601": "2022-03-24T05:47:21.104455Z",
        "url": "https://files.pythonhosted.org/packages/45/15/7cce9f01c53124e83a2577ebd97c83f3adbf43b44e058a034d4e3886eef6/pytest-railflow-testrail-reporter-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f2345c1f03547e6f05fce5cebcb4e166b7e44a75eb68e6a6314b3205e4eebef0",
          "md5": "27d4bc4d67e6e1d35e2186df05f8313d",
          "sha256": "91660063975cbbe2b79a2a293b9418865fc36701bec3be569894b2c864bf4464"
        },
        "downloads": -1,
        "filename": "pytest_railflow_testrail_reporter-0.2.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "27d4bc4d67e6e1d35e2186df05f8313d",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 11764,
        "upload_time": "2022-04-12T10:33:30",
        "upload_time_iso_8601": "2022-04-12T10:33:30.058434Z",
        "url": "https://files.pythonhosted.org/packages/f2/34/5c1f03547e6f05fce5cebcb4e166b7e44a75eb68e6a6314b3205e4eebef0/pytest_railflow_testrail_reporter-0.2.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0e19ef9351345983dd21cbf87a4d07f6d9302a2384ef810c7fddd498dd8f78f2",
          "md5": "ef7cf2358330c5e96afffaa3d52f261c",
          "sha256": "90d2f443c818e57f1bdf9a98ed20ef16d3acbdd37cd97f9f718f9fb4b4f7fe3f"
        },
        "downloads": -1,
        "filename": "pytest-railflow-testrail-reporter-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "ef7cf2358330c5e96afffaa3d52f261c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16595,
        "upload_time": "2022-04-12T10:33:31",
        "upload_time_iso_8601": "2022-04-12T10:33:31.749501Z",
        "url": "https://files.pythonhosted.org/packages/0e/19/ef9351345983dd21cbf87a4d07f6d9302a2384ef810c7fddd498dd8f78f2/pytest-railflow-testrail-reporter-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fca0611628cd9ac769e1104447cf308561efdcc3b9417e98d217017429494c94",
          "md5": "9b35c8c9f19d490370f46f2c12e1e6eb",
          "sha256": "74d6ec8d2fb9c1790bda977670cae8ed3e1c609311eedeccfd7f9e96cb528bd9"
        },
        "downloads": -1,
        "filename": "pytest_railflow_testrail_reporter-0.2.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9b35c8c9f19d490370f46f2c12e1e6eb",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 11908,
        "upload_time": "2022-06-20T13:59:20",
        "upload_time_iso_8601": "2022-06-20T13:59:20.263836Z",
        "url": "https://files.pythonhosted.org/packages/fc/a0/611628cd9ac769e1104447cf308561efdcc3b9417e98d217017429494c94/pytest_railflow_testrail_reporter-0.2.4-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3e80ad3421a5582484a67fe67d2100c2bcedddcee853b1204ccc3105af57b5ec",
          "md5": "a018d05cc60db0cf339fcb5a70ee7af4",
          "sha256": "2f2007b423b16db922052cb8be1e3d036a465aa6954b5675c94944bdabeb5ae1"
        },
        "downloads": -1,
        "filename": "pytest-railflow-testrail-reporter-0.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "a018d05cc60db0cf339fcb5a70ee7af4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16908,
        "upload_time": "2022-06-20T13:59:22",
        "upload_time_iso_8601": "2022-06-20T13:59:22.120884Z",
        "url": "https://files.pythonhosted.org/packages/3e/80/ad3421a5582484a67fe67d2100c2bcedddcee853b1204ccc3105af57b5ec/pytest-railflow-testrail-reporter-0.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8dcacb7e9dfcc7a1eeacf89e749e81e2d2ea94b89094d621f048c9d22759eb8e",
          "md5": "0876952321d134dc062b7f7f386abce5",
          "sha256": "d210ffbe96952f0e159714741ff274906a82331495d951dd35d67f11438f156a"
        },
        "downloads": -1,
        "filename": "pytest_railflow_testrail_reporter-0.2.5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0876952321d134dc062b7f7f386abce5",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 11921,
        "upload_time": "2022-06-29T10:52:27",
        "upload_time_iso_8601": "2022-06-29T10:52:27.650379Z",
        "url": "https://files.pythonhosted.org/packages/8d/ca/cb7e9dfcc7a1eeacf89e749e81e2d2ea94b89094d621f048c9d22759eb8e/pytest_railflow_testrail_reporter-0.2.5-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2a15fc4859c5c2ec67affa634b48b3299d2895460112c08e95930dc6ea5ba27b",
          "md5": "7152972cd1f1e5a703d0bfd82e52e44d",
          "sha256": "052a1c0fc44974cb4afd58036b820c2c7432e1ef01c29c0358e50cb5d7ab7d84"
        },
        "downloads": -1,
        "filename": "pytest-railflow-testrail-reporter-0.2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "7152972cd1f1e5a703d0bfd82e52e44d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16917,
        "upload_time": "2022-06-29T10:52:28",
        "upload_time_iso_8601": "2022-06-29T10:52:28.880029Z",
        "url": "https://files.pythonhosted.org/packages/2a/15/fc4859c5c2ec67affa634b48b3299d2895460112c08e95930dc6ea5ba27b/pytest-railflow-testrail-reporter-0.2.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8dcacb7e9dfcc7a1eeacf89e749e81e2d2ea94b89094d621f048c9d22759eb8e",
        "md5": "0876952321d134dc062b7f7f386abce5",
        "sha256": "d210ffbe96952f0e159714741ff274906a82331495d951dd35d67f11438f156a"
      },
      "downloads": -1,
      "filename": "pytest_railflow_testrail_reporter-0.2.5-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0876952321d134dc062b7f7f386abce5",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 11921,
      "upload_time": "2022-06-29T10:52:27",
      "upload_time_iso_8601": "2022-06-29T10:52:27.650379Z",
      "url": "https://files.pythonhosted.org/packages/8d/ca/cb7e9dfcc7a1eeacf89e749e81e2d2ea94b89094d621f048c9d22759eb8e/pytest_railflow_testrail_reporter-0.2.5-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2a15fc4859c5c2ec67affa634b48b3299d2895460112c08e95930dc6ea5ba27b",
        "md5": "7152972cd1f1e5a703d0bfd82e52e44d",
        "sha256": "052a1c0fc44974cb4afd58036b820c2c7432e1ef01c29c0358e50cb5d7ab7d84"
      },
      "downloads": -1,
      "filename": "pytest-railflow-testrail-reporter-0.2.5.tar.gz",
      "has_sig": false,
      "md5_digest": "7152972cd1f1e5a703d0bfd82e52e44d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 16917,
      "upload_time": "2022-06-29T10:52:28",
      "upload_time_iso_8601": "2022-06-29T10:52:28.880029Z",
      "url": "https://files.pythonhosted.org/packages/2a/15/fc4859c5c2ec67affa634b48b3299d2895460112c08e95930dc6ea5ba27b/pytest-railflow-testrail-reporter-0.2.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}