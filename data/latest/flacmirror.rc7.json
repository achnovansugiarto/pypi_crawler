{
  "info": {
    "author": null,
    "author_email": "Moritz Schulte <mschulte.g@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "# flacmirror\n\n[![PyPI - Version](https://img.shields.io/pypi/v/flacmirror)](https://pypi.org/project/flacmirror/)\n\n`flacmirror` is a cli tool that recursively synchronizes a directory containing flac files\nto another directory while encoding the flac files to a specified format instead of copying them.\n\n## Information\n\nThe supported target formats are vorbis, opus, mp3 (lame) and aac (LC profile).\nThis tool has limited customizability. You can find more powerful solutions on github like flac2all.\n\nExcept for quality parameters, flacmirror will not specify any other encoding parameters when calling\nthe encoding tools. Therefore most encoding settings will depend on the encoding tools' defaults.\n\n## OS compatibility\n\nThis tool was only tested on Linux but might work on Windows and macOS too. On Windows it is recommend\nthat you use WSL to run flacmirror.\n\n## Examples\n\nConvert and sync directory Music_FLAC/ to Music_OPUS/ while keeping the embedded artwork untouched.\nOnly overwrite output files, if input files changed. Also specify the opus target bitrate to be\n96 kbit/s.\n\n``` bash\nflacmirror Music_FLAC/ Music_OPUS/ --codec opus --opus-quality 96 --albumart keep\n```\n\nConvert/sync directory Music_FLAC/ to Music_MP3/ and optimize embedded album art in the output\nfiles (default). Overwrite all output files (re-encode everything). Also delete files in the\ntarget directory, which are not in the input directory. The target mp3 files hould have VBR V0 quality.\n\n``` bash\nflacmirror Music_FLAC/ Music_MP3/ --codec mp3 --mp3-mode vbr --mp3-quality 0 --overwrite all --delete\n```\n\nConvert/sync and resize all embedded cover art wider than 500px to 500px width in the output files.\n\n``` bash\nflacmirror Music_FLAC/ Music_OGG/ --codec vorbis --albumart resize --albumart-max-width 500\n```\n\nConvert/sync and discard embedded album art in output files. Also copy files with the name\n`folder.jpg` and `cover.jpg` to the output directory.\n\n``` bash\nflacmirror Music_FLAC/ Music_OGG/ --codec vorbis --albumart discard --copy-file folder.jpg --copy-file cover.jpg\n```\n\nConvert/sync using 4 threads (default number is the number of available threads in the system). ALso copy\nfiles with the `.jpg` extension to the output directory.\n\n``` bash\nflacmirror Music_FLAC/ Music_M4A/ --codec aac --aac-mode 5 --copy-ext jpg --num-threads 4\n```\n\n## Dependencies\n### Python\n\nPython >= 3.7\n\nNo libraries required\n\n### Installed programs\n\n- `metaflac` (required)\n\n- `convert (imagemagick)` (required for --albumart {optimize,resize})\n\n- `oggenc` (required for vorbis encoding)\n\n- `vorbiscomment` (required for vorbis encoding)\n\n- `opusenc` (required for opus encoding)\n\n- `fdkaac` (required for aac encoding)\n\n- `ffmpeg` (required for mp3 encoding and aac metadata handling)\n\n## Installation\n\nInstall using pip or pipx.\n\n```bash\npip install flacmirror\n```\n\nDownload the wheel found under Releases and install it using pip.\n\n```bash\npip install flacmirror-X.X.X-py3-none-any.whl\n```\n\nThis will install the executable `flacmirror` to one of your bin folders (global, user or venv)\nwhich then should usually be available in your path.\n\n## Misc\n### Album art optimization\n\nThe option `--albumart optimize` is set by default and will try to convert all albumart\nto stripped and optimized jpeg files.\nThis should result in smaller albumart sizes without compromising too much on quality.\nThis means that cover art will be extracted from the source flac file and embedded into the output file\nafter being piped through the following command, which can currently not be customized.\n\n```bash\nconvert - -strip -interlace Plane -sampling-factor 4:2:0 -colorspace sRGB -quality 85% jpeg:-\n```\n\nIf the option `--albumart resize` is set , the following command is used to optimize and downscale\npictures that are wider than `ALBUMART_MAX_WIDTH` pixels, which is specified by `--albumart-max-width`.\n\n```bash\nconvert - -strip -interlace Plane -sampling-factor 4:2:0 -colorspace sRGB -resize ${ALBUMART_MAX_WIDTH}\\> -quality 85% jpeg:-\n```\n\n\n## Usage\n\n```\nusage: flacmirror [-h] [--codec {vorbis,opus}] [--opus-quality OPUS_QUALITY] [--vorbis-quality VORBIS_QUALITY]\n                  [--albumart {optimize,resize,keep,discard}] [--albumart-max-width ALBUMART_MAX_WIDTH]\n                  [--overwrite {all,none,old}] [--delete] [--yes] [--copy-file COPY_FILE] [--copy-ext COPY_EXT]\n                  [--num-threads NUM_THREADS] [--dry-run] [--debug] [--version]\n                  src_dir dst_dir\n\nProgram to recursively synchronize a directory containing flac files to another directory while encoding the flac files\ninstead of copying them.\n\npositional arguments:\n  src_dir                                    The source directory. This directory will be recursively scanned for flac\n                                             files to be encoded.\n  dst_dir                                    The destination directory. Encoded files will be saved here using the same\n                                             directory structure as in src_dir.\n\noptional arguments:\n  -h, --help                                 show this help message and exit\n  --codec {vorbis,opus,aac,mp3}              Specify which target codec to use.\n  --opus-quality OPUS_QUALITY                If opus encoding is selected, the bitrate in kbit/s can be specified as a\n                                             float. The value is directly passed to the --bitrate argument of opusenc.\n  --vorbis-quality VORBIS_QUALITY            If vorbis encoding is selected, the quality can be specified as an integer\n                                             between -1 and 10. The value is directly passed to the --quality argument\n                                             of oggenc.\n  --aac-quality AAC_QUALITY                  If aac encoding is selected and aac-mode is set to 0 (CBR), the bitrate in\n                                             kbit/s can be specified as an integer. The value is directly passed to the\n                                             --bitrate argument of fdkaac. Defaults to 128 (kbit/s).\n  --aac-mode AAC_MODE                        If aac encoding is selected, the bitrate configuration mode of fdkaac can\n                                             be specified as an integer from 0 to 5, where 0 means CBR (default) and 1-5\n                                             means VBR (higher value -> higher bitrate). The value is directly passed to\n                                             the --bitrate-mode argument of fdkaac.\n  --mp3-quality MP3_QUALITY                  If mp3 encoding is selected and --mp3-mode is set to cbr or abr, this sets\n                                             the bitrate in kbit/s as an integer from 8 to 320. If --mp3-mode is set to\n                                             vbr, this sets the quality level integer from 0 to 9 (like the V of lame or\n                                             q:a settings of ffmpeg).\n  --mp3-mode {vbr,cbr,abr}                   If mp3 encoding is selected, this specified the quality mode to be used. If\n                                             specified, --mp3-quality must also be set to a valid value. If not\n                                             specified, ffmpeg will use default values for mode and quality.\n  --albumart {optimize,resize,keep,discard}  Specify what to do with album covers. Defaults to 'optimize'. 'optimize'\n                                             will try to optimize the picture for better size, while 'resize' will\n                                             additionally downsample pictures with a pixel width greater than\n                                             --albumart-max-width (default 750) while scaling the height proportionally.\n                                             'keep' will just copy the album art over to the new file, while 'discard'\n                                             will not add the album art to the encoded file.\n  --albumart-max-width ALBUMART_MAX_WIDTH    Specify the width in pixels to which album art is downscaled to (if\n                                             greater). Defaults to 750. Only used when --albumart is set to resize.\n  --overwrite {all,none,old}                 Specify if or when existing files should be overwritten. 'all' means that\n                                             files are always overwritten, 'none' means that files are never overwritten\n                                             and 'old' means that files are only overwritten if the source file has\n                                             changed since (the source file's modification date is newer). Defaults to\n                                             'old'.\n  --delete                                   Delete files that exist at the destination but not the source.\n  --yes, -y                                  Skip any prompts that require you to press [y] (--delete)\n  --copy-file COPY_FILE                      Copy additional files with filename COPY_FILE that are not being encoded.\n                                             This option can be used multiple times. For example --copy-file cover.jpg\n                                             --copy-file album.jpg\n  --copy-ext COPY_EXT                        Copy additional files with the extension COPY_EXT that are not being\n                                             encoded. This option can be used multiple times. For example --copy-ext m3u\n                                             --copy-ext log --copy-ext jpg. This will not copy flac files.\n  --num-threads NUM_THREADS                  Number of threads to use. Defaults to the number of threads in the system.\n  --dry-run                                  Do a dry run (do no copy, encode, delete any file)\n  --debug                                    Give more output about how subcommands are called\n  --version                                  show program's version number and exit\n```\n\n## Limitations\n\nCurrently there are some limitations.\n- Only one album art entry is extracted and then interpreted as TYPE 3: Cover(front)\n- Additional encoding parameters can not be specified\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": null,
    "keywords": null,
    "license": null,
    "maintainer": null,
    "maintainer_email": null,
    "name": "flacmirror",
    "package_url": "https://pypi.org/project/flacmirror/",
    "platform": null,
    "project_url": "https://pypi.org/project/flacmirror/",
    "project_urls": {
      "Documentation": "https://github.com/mschulteg/flacmirror#readme",
      "Issues": "https://github.com/mschulteg/flacmirror/issues",
      "Source": "https://github.com/mschulteg/flacmirror"
    },
    "release_url": "https://pypi.org/project/flacmirror/0.3.1/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Tool for syncing flac files while additionally converting them",
    "version": "0.3.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17441819,
  "releases": {
    "0.2.4": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "72bc504ffcefa5fd34526026e5a8376d17f5f79082606ebcdb5a6c729a5b6486",
          "md5": "93ef1eaf687e508ad6f6d39a850e181e",
          "sha256": "023d94b67a13c1f657f3f532337cc5487663834dc08aa61ae73ef517ba56c4aa"
        },
        "downloads": -1,
        "filename": "flacmirror-0.2.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "93ef1eaf687e508ad6f6d39a850e181e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 13708,
        "upload_time": "2022-09-08T19:47:14",
        "upload_time_iso_8601": "2022-09-08T19:47:14.106490Z",
        "url": "https://files.pythonhosted.org/packages/72/bc/504ffcefa5fd34526026e5a8376d17f5f79082606ebcdb5a6c729a5b6486/flacmirror-0.2.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.4a0": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "e8c60baddd741713b8274c7f521e9a57c593dfa184d2fe569a71a6d0d28b7426",
          "md5": "46eb17bf3adcf710661bc701735e664c",
          "sha256": "803a677cc18bad7b54518396e2812931086ad5e2c68a20ae38ded46ba51167d3"
        },
        "downloads": -1,
        "filename": "flacmirror-0.2.4a0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "46eb17bf3adcf710661bc701735e664c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 13679,
        "upload_time": "2022-09-08T19:32:38",
        "upload_time_iso_8601": "2022-09-08T19:32:38.009369Z",
        "url": "https://files.pythonhosted.org/packages/e8/c6/0baddd741713b8274c7f521e9a57c593dfa184d2fe569a71a6d0d28b7426/flacmirror-0.2.4a0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "4bfee759fb2fd9db39151a922dd4f89410c753aaef7508062c61d36b10c5be79",
          "md5": "ba303e7cfcb958357e70bcd940161d06",
          "sha256": "8797845fc1c04e0107ec63fc3d41f1359fce56409e2b5fcec02b10ee0cc00ec6"
        },
        "downloads": -1,
        "filename": "flacmirror-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ba303e7cfcb958357e70bcd940161d06",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 17175,
        "upload_time": "2023-03-23T19:23:14",
        "upload_time_iso_8601": "2023-03-23T19:23:14.991251Z",
        "url": "https://files.pythonhosted.org/packages/4b/fe/e759fb2fd9db39151a922dd4f89410c753aaef7508062c61d36b10c5be79/flacmirror-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0a0": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "318b8b6ac99f7cf80ddf9fc6c71518689b414eb7f80cece4dd0711261b884a16",
          "md5": "8debcab229ce4ca2e3b9ef04ffe842e8",
          "sha256": "7271d9dc7f1cc5476f4871a7ea515e4c1d0d1f614e5ff98b4ab0fadf55ad4ff6"
        },
        "downloads": -1,
        "filename": "flacmirror-0.3.0a0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8debcab229ce4ca2e3b9ef04ffe842e8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 15706,
        "upload_time": "2023-03-19T17:26:45",
        "upload_time_iso_8601": "2023-03-19T17:26:45.822491Z",
        "url": "https://files.pythonhosted.org/packages/31/8b/8b6ac99f7cf80ddf9fc6c71518689b414eb7f80cece4dd0711261b884a16/flacmirror-0.3.0a0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0a1": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "6adb124befd01ad46cfcf6c4c6b050f2b8135845d21c646533f3bc1631f0647a",
          "md5": "71287b1bbec9984573fa31edc0850e8e",
          "sha256": "3649a6ec00feda0a32bb063dbb29d6c02128f3dcd8127d5f00de851d39f5926a"
        },
        "downloads": -1,
        "filename": "flacmirror-0.3.0a1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "71287b1bbec9984573fa31edc0850e8e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 16614,
        "upload_time": "2023-03-20T17:39:36",
        "upload_time_iso_8601": "2023-03-20T17:39:36.515228Z",
        "url": "https://files.pythonhosted.org/packages/6a/db/124befd01ad46cfcf6c4c6b050f2b8135845d21c646533f3bc1631f0647a/flacmirror-0.3.0a1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0a2": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "8a3b9269c78fc9c5c01c9a9122b7b72255997dcfc0e3e30540caa0695680f880",
          "md5": "11ad46d29d2824f7dc8c92250ffac514",
          "sha256": "0488b51e4787dfd1e594fcf07ecde61b936c0e6b6473c32db255ac0d5de661f0"
        },
        "downloads": -1,
        "filename": "flacmirror-0.3.0a2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "11ad46d29d2824f7dc8c92250ffac514",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 16672,
        "upload_time": "2023-03-20T21:04:44",
        "upload_time_iso_8601": "2023-03-20T21:04:44.224100Z",
        "url": "https://files.pythonhosted.org/packages/8a/3b/9269c78fc9c5c01c9a9122b7b72255997dcfc0e3e30540caa0695680f880/flacmirror-0.3.0a2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "94987c0c32da518920bdf188f6d228316c7e1fbfd8d71b96ab00297e74e6f847",
          "md5": "11bdf5ea9edd36de34e59c8f9929f075",
          "sha256": "3bcdece80f8c75675b87c5e2e367e030042cea8d27299bd44a3a4c56e58322da"
        },
        "downloads": -1,
        "filename": "flacmirror-0.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "11bdf5ea9edd36de34e59c8f9929f075",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 17402,
        "upload_time": "2023-03-25T12:09:08",
        "upload_time_iso_8601": "2023-03-25T12:09:08.278688Z",
        "url": "https://files.pythonhosted.org/packages/94/98/7c0c32da518920bdf188f6d228316c7e1fbfd8d71b96ab00297e74e6f847/flacmirror-0.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "94987c0c32da518920bdf188f6d228316c7e1fbfd8d71b96ab00297e74e6f847",
        "md5": "11bdf5ea9edd36de34e59c8f9929f075",
        "sha256": "3bcdece80f8c75675b87c5e2e367e030042cea8d27299bd44a3a4c56e58322da"
      },
      "downloads": -1,
      "filename": "flacmirror-0.3.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "11bdf5ea9edd36de34e59c8f9929f075",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 17402,
      "upload_time": "2023-03-25T12:09:08",
      "upload_time_iso_8601": "2023-03-25T12:09:08.278688Z",
      "url": "https://files.pythonhosted.org/packages/94/98/7c0c32da518920bdf188f6d228316c7e1fbfd8d71b96ab00297e74e6f847/flacmirror-0.3.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}