{
  "info": {
    "author": "Harsh Vardhan Goswami",
    "author_email": "me@iamharsh.dev",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Communications",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "WhatsMate is a class that provides a wrapper around the WhatsApp Cloud API, allowing you to send various types of messages to a phone number using the WhatsApp messaging service.\n\nHere's a brief description of each method in the class:\n\n```python\nfrom whatsmate import WhatsMate\nms = WhatsMate(token='your_whatsapp_token', '+91xxxxxxxxx')\n\n# use methods as \nms.method() # [pass params as documented]\n\n```\n\n## **`__init__(self, token, phone_number_id)`**\n\nConstructor for the **`WhatsMate`** class. Initializes the **`token`** and **`phone_number_id`** instance variables, which represent the WhatsApp Cloud API token and the phone number ID of the recipient, respectively.\n\n## **`say(self, message, phone_number, recipient_type=\"individual\", preview_url=None)`**\n\nSends a text message to the recipient.\n\n**Parameters:**\n\n- **`message`** (str): The message to be sent.\n- **`phone_number`** (str): The phone number of the recipient.\n- **`recipient_type`** (str, optional): The recipient type. Defaults to \"individual\".\n- **`preview_url`** (str, optional): The URL of the preview image to be sent with the message. Defaults to None.\n\n**Returns:**\n\n- A JSON object containing the response from the API.\n\n## **`send_image(self, image_url, phone_number, recipient_type=\"individual\", preview_url=None)`**\n\nSends an image to the recipient.\n\n**Parameters:**\n\n- **`image_url`** (str): The URL of the image to be sent.\n- **`phone_number`** (str): The phone number of the recipient.\n- **`recipient_type`** (str, optional): The recipient type. Defaults to \"individual\".\n- **`preview_url`** (str, optional): The URL of the preview image to be sent with the message. Defaults to None.\n\n**Returns:**\n\n- A JSON object containing the response from the API.\n\n## **`send_video(self, video_url, phone_number, recipient_type=\"individual\", preview_url=None)`**\n\nSends a video to the recipient.\n\n**Parameters:**\n\n- **`video_url`** (str): The URL of the video to be sent.\n- **`phone_number`** (str): The phone number of the recipient.\n- **`recipient_type`** (str, optional): The recipient type. Defaults to \"individual\".\n- **`preview_url`** (str, optional): The URL of the preview image to be sent with the message. Defaults to None.\n\n**Returns:**\n\n- A JSON object containing the response from the API.\n\n## **`send_audio(self, audio_url, phone_number, recipient_type=\"individual\", preview_url=None)`**\n\nSends an audio file to the recipient.\n\n**Parameters:**\n\n- **`audio_url`** (str): The URL of the audio file to be sent.\n- **`phone_number`** (str): The phone number of the recipient.\n- **`recipient_type`** (str, optional): The recipient type. Defaults to \"individual\".\n- **`preview_url`** (str, optional): The URL of the preview image to be sent with the message. Defaults to None.\n\n**Returns:**\n\n- A JSON object containing the response from the API.\n\n## **`send_file(self, file_url, phone_number, recipient_type=\"individual\", preview_url=None)`**\n\nSends a file to the recipient.\n\n**Parameters:**\n\n- **`file_url`** (str): The URL of the file to be sent.\n- **`phone_number`** (str): The phone number of the recipient.\n- **`recipient_type`** (str, optional): The recipient type. Defaults to \"individual\".\n- **`preview_url`** (str, optional): The URL of the preview image to be sent with the message. Defaults to None.\n\n**Returns:**\n\n- A JSON object containing the response from the API.\n\n## **`send_location(self, latitude, longitude, phone_number, recipient_type=\"individual\", preview_url=None)`**\n\nSends a location to the recipient.\n\n### **Method: send_template**\n\n```python\ndef send_template(self, template, phone_number, recipient_type=\"individual\", preview_url=None):\n```\n\n- Sends a WhatsApp message using a custom template.\n\n### Parameters\n\n- **`template`** (dict): The template to use. The format of the template is described in the WhatsApp Business API documentation.\n- **`phone_number`** (str): The phone number of the recipient.\n- **`recipient_type`** (str, optional): The recipient type. Possible values are \"individual\" (default) and \"group\".\n- **`preview_url`** (str, optional): The URL of a link to include in the message.\n\n### Returns\n\n- A JSON object containing the response from the WhatsApp server.\n\n### Example\n\n```python\ntemplate = {\n        \"namespace\": \"your-namespace\",\n        \"name\": \"your-template-name\",\n        \"language\": {\n            \"policy\": \"deterministic\",\n            \"code\": \"en\"\n        },\n        \"components\": [\n            {\n                \"type\": \"body\",\n                \"parameters\": [\n                    {\n                        \"type\": \"text\",\n                        \"text\": \"Hello {{1}}! This is a {{2}} message from {{3}}.\"\n                    }\n                ]\n            }\n        ]\n    }\n    response = whatsMate.send_template(template, \"+14155552671\")\n\n```\n\n### **Method: send_button_template**\n\n```python\ndef send_button_template(self, text, buttons, phone_number, recipient_type=\"individual\", preview_url=None):\n```\n\n- Sends a WhatsApp message using a button template.\n\n### Parameters\n\n- **`text`** (str): The text of the message.\n- **`buttons`** (list): A list of dictionaries representing the buttons to include in the template. Each button should have a **`type`** and **`title`** field.\n- **`phone_number`** (str): The phone number of the recipient.\n- **`recipient_type`** (str, optional): The recipient type. Possible values are \"individual\" (default) and \"group\".\n- **`preview_url`** (str, optional): The URL of a link to include in the message.\n\n### Returns\n\n- A JSON object containing the response from the WhatsApp server.\n\n### Example\n\n```python\nbuttons = [\n        {\"type\": \"url\", \"title\": \"Visit Website\", \"url\": \"https://example.com\"},\n        {\"type\": \"text\", \"title\": \"More Information\", \"payload\": \"more_info\"}\n    ]\n    response = whatsMate.send_button_template(\"Welcome to our store!\", buttons, \"+14155552671\")\n\n```\n\n### **Method: send_list_template**\n\n```python\ndef send_list_template(self, elements, buttons, phone_number, recipient_type=\"individual\", preview_url=None):\n```\n\n- Sends a WhatsApp message using a list template.\n\n### Parameters\n\n- **`elements`** (list): A list of dictionaries representing the items to include in the list. Each item should have a **`title`**, **`subtitle`**, and **`image_url`** field.\n- **`buttons`** (list): A list of dictionaries representing the buttons to include in the template. Each button should have a **`type`** and **`title`** field.\n- **`phone_number`** (str): The phone number of the recipient.\n- **`recipient_type`** (str, optional): The recipient type. Possible values are \"individual\" (default) and \"group\".\n- **`preview_url`** (str, optional): The URL of a link to include in the message.\n\n### Returns\n\n- A JSON object containing the response from the WhatsApp server.\n\n**`send_list_template(self, elements, buttons, phone_number, recipient_type=\"individual\", preview_url=None)`**: Sends a list template message to a phone number.\n\nExample usage:\n\n```python\n\nelements = [\n    {\n        \"title\": \"Element 1\",\n        \"subtitle\": \"Subtitle 1\",\n        \"image_url\": \"https://example.com/image1.jpg\",\n        \"default_action\": {\n            \"type\": \"web_url\",\n            \"url\": \"https://example.com/1\",\n            \"messenger_extensions\": True,\n            \"webview_height_ratio\": \"tall\",\n            \"fallback_url\": \"https://example.com/fallback\"\n        }\n    },\n    {\n        \"title\": \"Element 2\",\n        \"subtitle\": \"Subtitle 2\",\n        \"image_url\": \"https://example.com/image2.jpg\",\n        \"default_action\": {\n            \"type\": \"web_url\",\n            \"url\": \"https://example.com/2\",\n            \"messenger_extensions\": True,\n            \"webview_height_ratio\": \"tall\",\n            \"fallback_url\": \"https://example.com/fallback\"\n        }\n    }\n]\n\nbuttons = [\n    {\n        \"type\": \"web_url\",\n        \"url\": \"https://example.com\",\n        \"title\": \"Button 1\"\n    },\n    {\n        \"type\": \"postback\",\n        \"title\": \"Button 2\",\n        \"payload\": \"Payload for button 2\"\n    }\n]\n\nresponse = whatsMate.send_list_template(elements, buttons, \"1234567890\")\n\n```\n\n**`send_media_template(self, elements, buttons, phone_number, recipient_type=\"individual\", preview_url=None)`**: Sends a media template message to a phone number.\n\nExample usage:\n\n```python\n\nelements = [\n    {\n        \"media_type\": \"image\",\n        \"url\": \"https://example.com/image.jpg\",\n        \"buttons\": [\n            {\n                \"type\": \"web_url\",\n                \"url\": \"https://example.com\",\n                \"title\": \"Button 1\"\n            },\n            {\n                \"type\": \"postback\",\n                \"title\": \"Button 2\",\n                \"payload\": \"Payload for button 2\"\n            }\n        ]\n    }\n]\n\nbuttons = [\n    {\n        \"type\": \"web_url\",\n        \"url\": \"https://example.com\",\n        \"title\": \"Button 1\"\n    },\n    {\n        \"type\": \"postback\",\n        \"title\": \"Button 2\",\n        \"payload\": \"Payload for button 2\"\n    }\n]\n\nresponse = whatsMate.send_media_template(elements, buttons, \"1234567890\")\n\n```\n\n**`send_open_graph_template(self, elements, buttons, phone_number, recipient_type=\"individual\", preview_url=None)`**: Sends an Open Graph template message to a phone number.\n\n**`reply(message_id, text, phone_number, recipient_type=\"individual\", preview_url=None)`**: This method is used to send a reply to a message. The **`message_id`** parameter specifies the ID of the message to which the reply is being sent. The **`text`** parameter is the text of the message being sent as a reply. The **`phone_number`** parameter is the phone number of the recipient of the reply. The **`recipient_type`** parameter specifies the type of recipient, which can be either \"individual\" or \"group\". The **`preview_url`** parameter specifies whether to show a preview of any included URL. Returns the response in JSON format.\n\n**`send_to_group(group_id, text, preview_url=None)`**: This method is used to send a message to a group. The **`group_id`** parameter is the ID of the group to which the message is being sent. The **`text`** parameter is the text of the message being sent. The **`preview_url`** parameter specifies whether to show a preview of any included URL. Returns the response in JSON format.\n\n**`send_to_broadcast(broadcast_id, text, preview_url=None)`**: This method is used to send a message to a broadcast. The **`broadcast_id`** parameter is the ID of the broadcast to which the message is being sent. The **`text`** parameter is the text of the message being sent. The **`preview_url`** parameter specifies whether to show a preview of any included URL. Returns the response in JSON format.\n\n**`send_to_contact(contact_id, text, preview_url=None)`**: This method is used to send a message to a contact. The **`contact_id`** parameter is the ID of the contact to which the message is being sent. The **`text`** parameter is the text of the message being sent. The **`preview_url`** parameter specifies whether to show a preview of any included URL. Returns the response in JSON format.\n\n**`mark_as_read(message_id, recipient_type=\"individual\")`**: This method is used to mark a message as read. The **`message_id`** parameter specifies the ID of the message to mark as read. The **`recipient_type`** parameter specifies the type of recipient, which can be either \"individual\" or \"group\". Returns the response in JSON format.\n\nI hope this helps! Let me know if you have any further questions.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/iamharshdev/whatsmate",
    "keywords": "whatsapp automation chatbot api",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "whatsmate",
    "package_url": "https://pypi.org/project/whatsmate/",
    "platform": null,
    "project_url": "https://pypi.org/project/whatsmate/",
    "project_urls": {
      "Homepage": "https://github.com/iamharshdev/whatsmate"
    },
    "release_url": "https://pypi.org/project/whatsmate/1.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "The ultimate WhatsApp Wrapper for Python",
    "version": "1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16931137,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d8c99e963b5f533c348c526ba28b98219dfb95c580ece8859130d844747c905a",
          "md5": "92bc435b7b84688afb74bb6d36e9d118",
          "sha256": "f228947f07af360694dfbec2da09d82fc4a31e1d9504d10ffcbd03e0f1b1f0df"
        },
        "downloads": -1,
        "filename": "WhatsMate-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "92bc435b7b84688afb74bb6d36e9d118",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 2627,
        "upload_time": "2023-02-19T13:24:46",
        "upload_time_iso_8601": "2023-02-19T13:24:46.046559Z",
        "url": "https://files.pythonhosted.org/packages/d8/c9/9e963b5f533c348c526ba28b98219dfb95c580ece8859130d844747c905a/WhatsMate-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cfa239266aa372718682f483992aa19c9fbc206eafb4b6620ea483ab5619ba28",
          "md5": "f819330e06e03f99233a1a696da9fbb4",
          "sha256": "de9221d72828157562bf6c27e5c63e209087f9707e308fad49abfbef0419e51c"
        },
        "downloads": -1,
        "filename": "WhatsMate-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f819330e06e03f99233a1a696da9fbb4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2430,
        "upload_time": "2023-02-19T13:24:47",
        "upload_time_iso_8601": "2023-02-19T13:24:47.924603Z",
        "url": "https://files.pythonhosted.org/packages/cf/a2/39266aa372718682f483992aa19c9fbc206eafb4b6620ea483ab5619ba28/WhatsMate-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "78f6a44b09e8eb32f16c044786d7443f7db2af2e38f0e6ff43804e62a055bcf9",
          "md5": "eda120cb87ecb9c7f481daa161b37a1d",
          "sha256": "30c3764f7a777f999204c08cef492e1846a3a1de8af8529a9312e80459ffa675"
        },
        "downloads": -1,
        "filename": "whatsmate-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eda120cb87ecb9c7f481daa161b37a1d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 2623,
        "upload_time": "2023-02-19T13:44:47",
        "upload_time_iso_8601": "2023-02-19T13:44:47.722776Z",
        "url": "https://files.pythonhosted.org/packages/78/f6/a44b09e8eb32f16c044786d7443f7db2af2e38f0e6ff43804e62a055bcf9/whatsmate-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "224bfe5b7d3e4bb7ac62fba7dbe33b4092dfee2c53a7a7754961505ab7e71e45",
          "md5": "75884eec3631b84c51ee90760ad678b1",
          "sha256": "47a1cbf63d5a82bd26c405df692345a564d159a7c7fe1b01eceb1b972b7e7c82"
        },
        "downloads": -1,
        "filename": "whatsmate-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "75884eec3631b84c51ee90760ad678b1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2415,
        "upload_time": "2023-02-19T13:44:49",
        "upload_time_iso_8601": "2023-02-19T13:44:49.801327Z",
        "url": "https://files.pythonhosted.org/packages/22/4b/fe5b7d3e4bb7ac62fba7dbe33b4092dfee2c53a7a7754961505ab7e71e45/whatsmate-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "45cf491d1ff312896a8d2b440d033789b42eeb89bfa69735d01d6a2a2587aee6",
          "md5": "a02422b12f5443651ee66b2b072b52cb",
          "sha256": "c2850bf3acb8f45ecf47d29661e249b86347fb0c3b4b6413a45fece371691df7"
        },
        "downloads": -1,
        "filename": "whatsmate-1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a02422b12f5443651ee66b2b072b52cb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 2621,
        "upload_time": "2023-02-19T17:19:26",
        "upload_time_iso_8601": "2023-02-19T17:19:26.650525Z",
        "url": "https://files.pythonhosted.org/packages/45/cf/491d1ff312896a8d2b440d033789b42eeb89bfa69735d01d6a2a2587aee6/whatsmate-1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "277ca821a04e0beb463445a2a49db6aaf873f6eaa43c29ea3daae22f98069340",
          "md5": "40a2b8968083e05240a19bf4b5dc8e85",
          "sha256": "ac07e9afcc82b797963aa647ec86977d2c8c8ac60c36d46f125d572c2fa0aec1"
        },
        "downloads": -1,
        "filename": "whatsmate-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "40a2b8968083e05240a19bf4b5dc8e85",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4458,
        "upload_time": "2023-02-19T17:19:28",
        "upload_time_iso_8601": "2023-02-19T17:19:28.220514Z",
        "url": "https://files.pythonhosted.org/packages/27/7c/a821a04e0beb463445a2a49db6aaf873f6eaa43c29ea3daae22f98069340/whatsmate-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a48245264ee7c7f91018bd2127c4952abfe9018184c1221193152e2a7edbcefc",
          "md5": "1fe86308b854c1663ee2a94643f1027a",
          "sha256": "812f03c50a948b4ae20f3f27fd30bcd66fd6fba5ba3dfc6cd78ab1aa76f7bc4c"
        },
        "downloads": -1,
        "filename": "whatsmate-1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1fe86308b854c1663ee2a94643f1027a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4542,
        "upload_time": "2023-02-19T17:21:49",
        "upload_time_iso_8601": "2023-02-19T17:21:49.583095Z",
        "url": "https://files.pythonhosted.org/packages/a4/82/45264ee7c7f91018bd2127c4952abfe9018184c1221193152e2a7edbcefc/whatsmate-1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "603c8862778f31f85ba04b3d4f601d8243bec5c31b2e5bedae9ad84f5f31aa7e",
          "md5": "70321314fa744d3643207338c35dfb12",
          "sha256": "17b5b4f39c31232ae2188c9a0a2866cff7fdb9c0b6d622245d3700a09693d52c"
        },
        "downloads": -1,
        "filename": "whatsmate-1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "70321314fa744d3643207338c35dfb12",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6053,
        "upload_time": "2023-02-19T17:21:52",
        "upload_time_iso_8601": "2023-02-19T17:21:52.981061Z",
        "url": "https://files.pythonhosted.org/packages/60/3c/8862778f31f85ba04b3d4f601d8243bec5c31b2e5bedae9ad84f5f31aa7e/whatsmate-1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a48245264ee7c7f91018bd2127c4952abfe9018184c1221193152e2a7edbcefc",
        "md5": "1fe86308b854c1663ee2a94643f1027a",
        "sha256": "812f03c50a948b4ae20f3f27fd30bcd66fd6fba5ba3dfc6cd78ab1aa76f7bc4c"
      },
      "downloads": -1,
      "filename": "whatsmate-1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1fe86308b854c1663ee2a94643f1027a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 4542,
      "upload_time": "2023-02-19T17:21:49",
      "upload_time_iso_8601": "2023-02-19T17:21:49.583095Z",
      "url": "https://files.pythonhosted.org/packages/a4/82/45264ee7c7f91018bd2127c4952abfe9018184c1221193152e2a7edbcefc/whatsmate-1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "603c8862778f31f85ba04b3d4f601d8243bec5c31b2e5bedae9ad84f5f31aa7e",
        "md5": "70321314fa744d3643207338c35dfb12",
        "sha256": "17b5b4f39c31232ae2188c9a0a2866cff7fdb9c0b6d622245d3700a09693d52c"
      },
      "downloads": -1,
      "filename": "whatsmate-1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "70321314fa744d3643207338c35dfb12",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6053,
      "upload_time": "2023-02-19T17:21:52",
      "upload_time_iso_8601": "2023-02-19T17:21:52.981061Z",
      "url": "https://files.pythonhosted.org/packages/60/3c/8862778f31f85ba04b3d4f601d8243bec5c31b2e5bedae9ad84f5f31aa7e/whatsmate-1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}