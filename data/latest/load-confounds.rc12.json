{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# load_confounds\nLoad a sensible subset of the fMRI confounds generated with [fMRIprep](https://fmriprep.readthedocs.io/en/stable/) in python (Esteban et al., 2018).\n*Warning*: This package is at an alpha stage of development. The API may still be subject to changes.\n\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/SIMEXP/load_confounds/HEAD?filepath=demo%2Fload_confounds_demo.ipynb) [![All Contributors](https://img.shields.io/badge/all_contributors-10-orange.svg?style=flat-square)](#contributors-) [![collaborate brainhack](https://img.shields.io/badge/collaborate-brainhack-FF69A4.svg)](https://mattermost.brainhack.org/brainhack/channels/fmriprep_denoising) [![Pipy Badge](https://img.shields.io/pypi/v/load_confounds)](https://pypi.org/project/load-confounds/) [![Codacy Badge](https://api.codacy.com/project/badge/Grade/1da186ba5c44489b8af6d96a9c50d3c7)](https://app.codacy.com/gh/SIMEXP/load_confounds?utm_source=github.com&utm_medium=referral&utm_content=SIMEXP/load_confounds&utm_campaign=Badge_Grade_Dashboard) [![Maintainability](https://api.codeclimate.com/v1/badges/ce6f2bf20aa87accaaa4/maintainability)](https://codeclimate.com/github/SIMEXP/load_confounds/maintainability) [![CircleCI](https://circleci.com/gh/SIMEXP/load_confounds.svg?style=svg)](https://circleci.com/gh/SIMEXP/load_confounds) [![codecov](https://codecov.io/gh/SIMEXP/load_confounds/branch/master/graph/badge.svg)](https://codecov.io/gh/SIMEXP/load_confounds) [![black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n\n## Installation\nInstall with `pip` (Python >=3.5):\n```bash\npip install load_confounds\n```\n\n## TL;DR\nLoad confounds for a minimal denosing strategy commonly used in resting state functional connectivity.\n(Full motion parameters, WM/CSF signals, and high pass filter)\n```python\nfrom load_confounds import Minimal\nfrom nilearn.input_data import NiftiMasker\n\n# load_confounds auto-detects the companion .tsv file (which needs to be in the same directory)\nfile = \"path/to/file/sub-01_ses-001_bold.nii.gz\"\nconfounds = Minimal().load(file)\n\n# Use the confounds to load preprocessed time series with nilearn\nmasker = NiftiMasker(smoothing_fwhm=5, standardize=True)\nimg = masker.fit_transform(file, confounds=confounds)\n```\nIt is also possible to fine-tune a subset of noise components and their parameters:\n```python\nfrom load_confounds import Confounds\nconfounds = Confounds(strategy=['high_pass', 'motion', 'global'], motion=\"full\").load(file)\n```\nYou can check our tutorial on MyBinder for more info [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/SIMEXP/load_confounds/HEAD?filepath=demo%2Fload_confounds_demo.ipynb)\n\n## Noise components\nThe following noise components are supported. Check the docstring of `Confounds` for more info on the parameters for each type of noise.\n*  `motion` the motion parameters including 6 translation/rotation (`basic`), and optionally derivatives, squares, and squared derivatives (`full`).\n*  `high_pass` basis of discrete cosines covering slow time drift frequency band.\n*  `wm_csf` the average signal of white matter and cerebrospinal fluid masks (`basic`), and optionally derivatives, squares, and squared derivatives (`full`).\n*  `global`  the global signal (`basic`), and optionally derivatives, squares, and squared derivatives (`full`).\n*  `compcor` the results of a PCA applied on a mask based on either anatomy (`anat`), temporal variance (`temp`), or both (`combined`).\n*  `ica_aroma` the results of an idependent component analysis (ICA) followed by identification of noise components. This can be implementing by incorporating ICA regressors (`basic`) or directly loading a denoised file generated by fMRIprep (`full`).\n*  `scrub` regressors coding for time frames with excessive motion, using threshold on frame displacement and standardized DVARS (`basic`) and suppressing short time windows using the (Power et al., 2014) appreach (`full`).\n\n## Predefined strategies\n\n### `Minimal`\n`Minimal` is suitable for data with minimal motion. Only includes motion parameters, wm and csf, with the option to add global.\n\n### `Scrubbing`\nLike `Minimal`, but with scrubbing. Pros: Actual impact on data is pretty limited, but still good and offers the most control on what's being discarded. Cons: high loss of degrees of freedom, and messes up with the time axis in a way that may be difficult to handle for downstream analyses.\n\n### `CompCor`\n`CompCor` includes anatomical or temporal compcor. The default is anatomical compcor with fully expanded motion parameters. Pros: large impact of denoising, efficient denoising, controlled loss of degrees of freedom. Cons: low control on what is being discarded (who knows what signal actually show up in the PCA for a given subject).\n\n### `ICAAROMA`\nICA-AROMA are only applicable to fMRIprep output generated with `--use-aroma`. Pros: pretty similar to CompCor, with better control of discarded components (those can be visually reviewed even though this is time consuming. Cons: may require retraining the noise detector and also requires to believe that ICA does efficiently separate noise from signal, which is not that clear, and the quality of separation may also vary substantially across subjects.\n\n## A note on nifti files and file collections\nNote that if a `.nii.gz` file is specified, `load_confounds` will automatically look for the companion `tsv`confound file generated by fMRIprep. It is also possible to specify a list of confound (or imaging) files, in which case `load_confounds` will return a list of numpy ndarray.\n\n## A note on low pass filtering\nLow pass filtering is a common operation in resting-state fMRI analysis, and is featured in all preprocessing strategies of the Ciric et al. (2017) paper. fMRIprep does not output the discrete cosines for low pass filtering. Instead, this operation can be implemented directly with the nilearn masker, using the argument `low_pass`. Be sure to also specify the argument `tr` in the nilearn masker if you use `low_pass`.\n\n## A note on high pass filtering and detrending\nNilearn masker features two arguments to remove slow time drifts: `high_pass` and `detrend`. Both of these operations are redundant with the `high_pass` regressors generated by fMRIprep, and included in all `load_confounds` strategies. Do not use nilearn's `high_pass` or `detrend` options with these strategies. It is however possible to use a flexible `Confounds` loader to exclude the `high_pass` noise components, and then rely on nilearn's high pass filterning or detrending options. This is not advised with `compcor` or `ica_aroma` analysis, which have been generated with the `high_pass` components of fMRIprep.\n\n## A note on demeaning confounds\nUnless you use the `detrend` or `high_pass` options of nilearn maskers, it may be important to demean the confounds. This is done by default by `load_confounds`, and is required to properly regress out confounds using nilearn with the `standardize=False`, `standardize=True` or `standardize=\"zscore\"` options. If you want to use `standardize=\"psc\"`, you will need to turn off the demeaning in `load_confounds`, which can be achieved using, e.g.:\n```python\nfrom load_confounds import Params6\nconf = Params6(demean=False)\n```\n\n## A note on the choice of strategies\nWe decided to focus our strategy catalogue on a reasonable but limited set of choices, and followed (mostly) the Ciric et al. (2017) reference. However, there are other strategies proposed in benchmarks such as (Parkes et al. 2018, Mascali et al. 2020).  Advanced users can still explore these other choices using the flexible `Confounds` API, which can be used to reproduce most denoising strategies in a single short and readable command.\n\n## A note on denoising benchmarks\nThere has been a number of benchmarks you may want to refer to in order to select a denoising strategy (e.g. Ciric et al., 2017; Parkes et al. 2018; Mascali et al., 2020; Raval et al., 2020). However, a number of caveats do apply and the conclusions of these studies may not directly apply to `load_confounds` strategies. First, the noise regressors generated by fMRIprep do not necessarily follow the same implementations as these papers did. For example, the way `load_confounds` implements scrubbing is by adding regressors, while Ciric et al. (2017) excluded outlier time points prior to regressing other confounds. There are also other aspects of the fMRI preprocessing pipelines which are not controlled by `load_confounds`. For example, Ciric et al. (2017) did apply image distortion correction in all preprocessing strategies. This step is controlled by fMRIprep, and cannot be changed through `load_confounds`.\n\n## A note about ICA-AROMA denoising\n\nICA-AROMA related strategies are only applicable to fMRIprep output generated with `--use-aroma`. The approach predefined in `load_confounds` is the non-aggressive apporach, and the recommanded way of applying ICA-AROMA. fMRIprep produces files with suffix `desc-smoothAROMAnonaggr_bold`. Other noise regressors needed are retrieved by the predefined strategy in `load_confounds`. For details of the implementation, please refer to the documentation of `load_confounds.ICAAROMA`.\n\nThe aggressive approach was described in Pruim et al. (2015) and achieve denoising in one step by `load_confound`. Noise independent components along with other source of noise are included in confound regressors. The aggressive approach **must** be applied to the regular minimally processed fMRIprep output suffixed `desc-prepro_bold`. The name \"aggressive\" reflects that this approach doesn't consider the potential good signals regressed out by the noise independent compoenents. Please refer to table [Recreating strategies from Ciric et al. 2017](#Recreating-strategies-from-Ciric-et-al.-2017) for the relevant options.\n\n## Recreating strategies from Ciric et al. 2017\n\n`load_confounds` can recreate the following strategies. The following table highlights the relevant options:\n\n| Strategy        | `high_pass` | `motion` | `wm_csf` | `global` | `compcor` | `ica_aroma` | `scrub` |\n| --------------- |:-----------:|:--------:|:--------:|:--------:|:---------:|:-----------:|:-------:|\n| `Params2`       | x           |          | `basic`  |          |           |             |         |\n| `Params6`       | x           | `basic`  |          |          |           |             |         |\n| `Params9`       | x           | `basic`  | `basic`  | `basic`  |           |             |         |\n| `Params9Scrub`  | x           | `basic`  | `basic`  |          |           |             | `full`  |\n| `Params24`      | x           | `full`   |          |          |           |             |         |\n| `Params36`      | x           | `full`   | `full`   | `full`   |           |             |         |\n| `Params36Scrub` | x           | `full`   | `full`   |          |           |             | `full`  |\n| `AnatCompCor`   | x           | `full`   |          |          | `anat`    |             |         |\n| `TempCompCor`   | x           |          |          |          | `temp`    |             |         |\n| `ICAAROMA`      | x           |          | `basic`  |          |           | `full`      |         |\n| `AROMAGSR`      | x           |          | `basic`  | `basic`  |           | `full`      |         |\n| `AggrICAAROMA`  | x           |          | `basic`  | `basic`  |           | `basic`     |         |\n\n## Funding\nDevelopment of this library was supported in part by the Canadian Consortium on Neurodegeneration in Aging ([CCNA](https://ccna-ccnv.ca/)) and in part by the Courtois Foundation.\n\n## References\n\nBehzadi Y, Restom K, Liau J, Liu TT. A component based noise correction method (CompCor) for BOLD and perfusion based fMRI. Neuroimage. 2007. doi:[10.1016/j.neuroimage.2007.04.042](https://doi.org/10.1016/j.neuroimage.2007.04.042)\n\nCiric R, Wolf DH, Power JD, Roalf DR, Baum GL, Ruparel K, Shinohara RT, Elliott MA, Eickhoff SB, Davatzikos C., Gur RC, Gur RE, Bassett DS, Satterthwaite TD. Benchmarking of participant-level confound regression strategies for the control of motion artifact in studies of functional connectivity. Neuroimage. 2017. doi:[10.1016/j.neuroimage.2017.03.020](https://doi.org/10.1016/j.neuroimage.2017.03.020)\n\nEsteban O, Markiewicz CJ, Blair RW, Moodie CA, Isik AI, Erramuzpe A, Kent JD, Goncalves M, DuPre E, Snyder M, Oya H, Ghosh SS, Wright J, Durnez J, Poldrack RA, Gorgolewski KJ. fMRIPrep: a robust preprocessing pipeline for functional MRI. Nat Meth. 2018. doi: [10.1038/s41592-018-0235-4](https://doi.org/10.1038/s41592-018-0235-4)\n\nFox MD, Snyder AZ, Vincent JL, Corbetta M, Van Essen DC, Raichle ME. The human brain is intrinsically organized into dynamic, anticorrelated functional networks. Proceedings of the National Academy of Sciences. 2005; doi: [10.1073/pnas.0504136102](https://doi.org/10.1073/pnas.0504136102).\n\nMascali, D, Moraschi, M, DiNuzzo, M, et al. Evaluation of denoising strategies for task‐based functional connectivity: Equalizing residual motion artifacts between rest and cognitively demanding tasks. Hum Brain Mapp. 2020; 1– 24. doi: [10.1002/hbm.25332](https://doi.org/10.1002/hbm.25332)\n\nParkes, L., Fulcher, B., Yucel, M., & Fornito, A. (2018). An evaluation of the efficacy, reliability, and sensitivity of motion correction strategies for resting-state functional MRI. NeuroImage, 171, 415-436. doi: [10.1016/j.neuroimage.2017.12.073](https://doi.org/10.1016/j.neuroimage.2017.12.073)\n\nPower JD, Mitra A, Laumann TO, Snyder AZ, Schlaggar BL, Petersen SE. Methods to detect, characterize, and remove motion artifact in resting state fMRI. Neuroimage 2014 84:320-41. doi: [10.1016/j.neuroimage.2013.08.048](https://doi.org/10.1016/j.neuroimage.2013.08.048)\n\nPruim, R. H., Mennes, M., van Rooij, D., Llera, A., Buitelaar, J. K., & Beckmann, C. F. (2015). ICA-AROMA: A robust ICA-based strategy for removing motion artifacts from fMRI data. Neuroimage, 112, 267-277. doi: [10.1016/j.neuroimage.2015.02.064](https://doi.org/10.1016/j.neuroimage.2015.02.064)\n\nV. Raval, K. P. Nguyen, C. Mellema and A. Montillo, \"Improved motion correction for functional MRI using an omnibus regression model,\" 2020 IEEE 17th International Symposium on Biomedical Imaging (ISBI), 2020, pp. 1044-1047, doi: [10.1109/ISBI45749.2020.9098688](https://doi.org/10.1109/ISBI45749.2020.9098688).\n\n## Contributors ✨\n\nThanks goes to these wonderful people ([emoji key](https://allcontributors.org/docs/en/emoji-key)):\n\n<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->\n<!-- prettier-ignore-start -->\n<!-- markdownlint-disable -->\n<table>\n  <tr>\n    <td align=\"center\"><a href=\"https://github.com/FrancoisPgm\"><img src=\"https://avatars.githubusercontent.com/u/35327799?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>François Paugam</b></sub></a><br /><a href=\"#infra-FrancoisPgm\" title=\"Infrastructure (Hosting, Build-Tools, etc)\">🚇</a> <a href=\"https://github.com/SIMEXP/load_confounds/commits?author=FrancoisPgm\" title=\"Code\">💻</a> <a href=\"https://github.com/SIMEXP/load_confounds/pulls?q=is%3Apr+reviewed-by%3AFrancoisPgm\" title=\"Reviewed Pull Requests\">👀</a> <a href=\"https://github.com/SIMEXP/load_confounds/commits?author=FrancoisPgm\" title=\"Tests\">⚠️</a> <a href=\"#data-FrancoisPgm\" title=\"Data\">🔣</a></td>\n    <td align=\"center\"><a href=\"https://github.com/HanadS\"><img src=\"https://avatars.githubusercontent.com/u/26352860?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>HanadS</b></sub></a><br /><a href=\"https://github.com/SIMEXP/load_confounds/commits?author=HanadS\" title=\"Code\">💻</a> <a href=\"https://github.com/SIMEXP/load_confounds/commits?author=HanadS\" title=\"Tests\">⚠️</a> <a href=\"#data-HanadS\" title=\"Data\">🔣</a> <a href=\"#infra-HanadS\" title=\"Infrastructure (Hosting, Build-Tools, etc)\">🚇</a> <a href=\"https://github.com/SIMEXP/load_confounds/commits?author=HanadS\" title=\"Documentation\">📖</a> <a href=\"#ideas-HanadS\" title=\"Ideas, Planning, & Feedback\">🤔</a></td>\n    <td align=\"center\"><a href=\"http://emdupre.me\"><img src=\"https://avatars.githubusercontent.com/u/15017191?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Elizabeth DuPre</b></sub></a><br /><a href=\"#ideas-emdupre\" title=\"Ideas, Planning, & Feedback\">🤔</a></td>\n    <td align=\"center\"><a href=\"https://wanghaoting.com/\"><img src=\"https://avatars.githubusercontent.com/u/13743617?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Hao-Ting Wang</b></sub></a><br /><a href=\"#ideas-htwangtw\" title=\"Ideas, Planning, & Feedback\">🤔</a> <a href=\"https://github.com/SIMEXP/load_confounds/commits?author=htwangtw\" title=\"Code\">💻</a> <a href=\"#data-htwangtw\" title=\"Data\">🔣</a> <a href=\"https://github.com/SIMEXP/load_confounds/commits?author=htwangtw\" title=\"Documentation\">📖</a> <a href=\"https://github.com/SIMEXP/load_confounds/commits?author=htwangtw\" title=\"Tests\">⚠️</a> <a href=\"https://github.com/SIMEXP/load_confounds/issues?q=author%3Ahtwangtw\" title=\"Bug reports\">🐛</a></td>\n    <td align=\"center\"><a href=\"http://simexp-lab.org\"><img src=\"https://avatars.githubusercontent.com/u/1670887?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Pierre Bellec</b></sub></a><br /><a href=\"https://github.com/SIMEXP/load_confounds/commits?author=pbellec\" title=\"Code\">💻</a> <a href=\"https://github.com/SIMEXP/load_confounds/issues?q=author%3Apbellec\" title=\"Bug reports\">🐛</a> <a href=\"#ideas-pbellec\" title=\"Ideas, Planning, & Feedback\">🤔</a> <a href=\"#infra-pbellec\" title=\"Infrastructure (Hosting, Build-Tools, etc)\">🚇</a> <a href=\"https://github.com/SIMEXP/load_confounds/commits?author=pbellec\" title=\"Tests\">⚠️</a> <a href=\"#data-pbellec\" title=\"Data\">🔣</a> <a href=\"#eventOrganizing-pbellec\" title=\"Event Organizing\">📋</a> <a href=\"#maintenance-pbellec\" title=\"Maintenance\">🚧</a> <a href=\"#projectManagement-pbellec\" title=\"Project Management\">📆</a></td>\n    <td align=\"center\"><a href=\"https://scholar.harvard.edu/steven-meisler\"><img src=\"https://avatars.githubusercontent.com/u/27028726?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Steven Meisler</b></sub></a><br /><a href=\"https://github.com/SIMEXP/load_confounds/issues?q=author%3Asmeisler\" title=\"Bug reports\">🐛</a> <a href=\"https://github.com/SIMEXP/load_confounds/commits?author=smeisler\" title=\"Tests\">⚠️</a> <a href=\"#data-smeisler\" title=\"Data\">🔣</a> <a href=\"https://github.com/SIMEXP/load_confounds/commits?author=smeisler\" title=\"Code\">💻</a> <a href=\"https://github.com/SIMEXP/load_confounds/commits?author=smeisler\" title=\"Documentation\">📖</a> <a href=\"#ideas-smeisler\" title=\"Ideas, Planning, & Feedback\">🤔</a></td>\n    <td align=\"center\"><a href=\"https://github.com/effigies\"><img src=\"https://avatars.githubusercontent.com/u/83442?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Chris Markiewicz</b></sub></a><br /><a href=\"#ideas-effigies\" title=\"Ideas, Planning, & Feedback\">🤔</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://github.com/srastegarnia\"><img src=\"https://avatars.githubusercontent.com/u/64853244?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Shima Rastegarnia</b></sub></a><br /><a href=\"https://github.com/SIMEXP/load_confounds/issues?q=author%3Asrastegarnia\" title=\"Bug reports\">🐛</a></td>\n    <td align=\"center\"><a href=\"https://github.com/nuKs\"><img src=\"https://avatars.githubusercontent.com/u/1691962?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Thibault PIRONT</b></sub></a><br /><a href=\"https://github.com/SIMEXP/load_confounds/commits?author=nuKs\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://github.com/m-w-w\"><img src=\"https://avatars.githubusercontent.com/u/36826334?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>m-w-w</b></sub></a><br /><a href=\"https://github.com/SIMEXP/load_confounds/commits?author=m-w-w\" title=\"Documentation\">📖</a></td>\n  </tr>\n</table>\n\n<!-- markdownlint-restore -->\n<!-- prettier-ignore-end -->\n\n<!-- ALL-CONTRIBUTORS-LIST:END -->\n\nThis project follows the [all-contributors](https://github.com/all-contributors/all-contributors) specification. Contributions of any kind welcome!\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/simexp/load_confounds",
    "keywords": "",
    "license": "MIT",
    "maintainer": "Pierre Bellec",
    "maintainer_email": "pierre.bellec@gmail.com",
    "name": "load-confounds",
    "package_url": "https://pypi.org/project/load-confounds/",
    "platform": "",
    "project_url": "https://pypi.org/project/load-confounds/",
    "project_urls": {
      "Bug Reports": "https://github.com/simexp/load_confounds/issues",
      "Funding": "https://cneuromod.ca",
      "Homepage": "https://github.com/simexp/load_confounds",
      "Source": "https://github.com/simexp/load_confounds"
    },
    "release_url": "https://pypi.org/project/load-confounds/0.12.0/",
    "requires_dist": [
      "numpy (>=1.17.4)",
      "pandas (>=0.25.3)",
      "scikit-learn (>=0.21.3)",
      "scipy (>=1.3.2)",
      "nilearn (>=0.7.1)"
    ],
    "requires_python": ">=3.5",
    "summary": "load fMRIprep confounds in python",
    "version": "0.12.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11101627,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2c11f0173a7a96beda42cffbb3609780b967795080630e53d650f479957fcf7f",
          "md5": "1e62b3c01b1712bd5953afb7a003329a",
          "sha256": "23d7d5e0699b14018b4084495d4f7fe1c5197bcea9dc727497fa0b76b21f10b6"
        },
        "downloads": -1,
        "filename": "load_confounds-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1e62b3c01b1712bd5953afb7a003329a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 3562,
        "upload_time": "2020-01-22T20:59:07",
        "upload_time_iso_8601": "2020-01-22T20:59:07.789347Z",
        "url": "https://files.pythonhosted.org/packages/2c/11/f0173a7a96beda42cffbb3609780b967795080630e53d650f479957fcf7f/load_confounds-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "be3baed891b37b191699db2fbd0534855c14dc743ef3361a2ab3bee27a842700",
          "md5": "24fa3d5dac2c535df04f9cefbabbd86c",
          "sha256": "bda3478a2625878eaf4b752128866f63b1ca4d065457ce914e6f5cab25290fcd"
        },
        "downloads": -1,
        "filename": "load_confounds-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "24fa3d5dac2c535df04f9cefbabbd86c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3442,
        "upload_time": "2020-01-22T20:59:09",
        "upload_time_iso_8601": "2020-01-22T20:59:09.630778Z",
        "url": "https://files.pythonhosted.org/packages/be/3b/aed891b37b191699db2fbd0534855c14dc743ef3361a2ab3bee27a842700/load_confounds-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.11.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1caaba0e3fadfc51a8da87cdfb053b56d45a281cb505b638f46a7d53ccf46b99",
          "md5": "97fca109a6259a9cab255fbb6eda2710",
          "sha256": "e8a6e52632da16adbc41ab985cfbd99802b562c193166b9a79ff9c11619d2f93"
        },
        "downloads": -1,
        "filename": "load_confounds-0.11.1.tar.gz",
        "has_sig": false,
        "md5_digest": "97fca109a6259a9cab255fbb6eda2710",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 60665,
        "upload_time": "2021-04-12T18:41:08",
        "upload_time_iso_8601": "2021-04-12T18:41:08.882109Z",
        "url": "https://files.pythonhosted.org/packages/1c/aa/ba0e3fadfc51a8da87cdfb053b56d45a281cb505b638f46a7d53ccf46b99/load_confounds-0.11.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.12.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a642a83ca50f0e501aecdddf21109aa3733432b94c56fa9158d543dec7cac2f0",
          "md5": "8d8479b64c70fc28ab30e9b2385869cc",
          "sha256": "017c65650e254da32917441fddd8f78fe3142063d06678cc52303600071c688c"
        },
        "downloads": -1,
        "filename": "load_confounds-0.12.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8d8479b64c70fc28ab30e9b2385869cc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 64857,
        "upload_time": "2021-08-05T15:49:18",
        "upload_time_iso_8601": "2021-08-05T15:49:18.634000Z",
        "url": "https://files.pythonhosted.org/packages/a6/42/a83ca50f0e501aecdddf21109aa3733432b94c56fa9158d543dec7cac2f0/load_confounds-0.12.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "94f90e297c87cd01a0241440de49a2d876bf2ea72fcabdfcbc416565df0e4bd3",
          "md5": "788e0b5f47597e95f7ec0e71c241f7b5",
          "sha256": "76a56d5876f5453c8b730a07969b046acb3664d13fd7116da784714f3745acb4"
        },
        "downloads": -1,
        "filename": "load_confounds-0.12.0.tar.gz",
        "has_sig": false,
        "md5_digest": "788e0b5f47597e95f7ec0e71c241f7b5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 66511,
        "upload_time": "2021-08-05T15:49:20",
        "upload_time_iso_8601": "2021-08-05T15:49:20.082631Z",
        "url": "https://files.pythonhosted.org/packages/94/f9/0e297c87cd01a0241440de49a2d876bf2ea72fcabdfcbc416565df0e4bd3/load_confounds-0.12.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b709e65bd2466b3ca3c3488af58da8a93f6f19564c883d073935bd99a28d3939",
          "md5": "8551aa28706f263e72584e6bd7f65f75",
          "sha256": "c1c3a4d7e806c0207f914ea083f5782c48832d8a8e99fe44be9795641acb2965"
        },
        "downloads": -1,
        "filename": "load_confounds-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8551aa28706f263e72584e6bd7f65f75",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 3598,
        "upload_time": "2020-02-05T21:37:23",
        "upload_time_iso_8601": "2020-02-05T21:37:23.051253Z",
        "url": "https://files.pythonhosted.org/packages/b7/09/e65bd2466b3ca3c3488af58da8a93f6f19564c883d073935bd99a28d3939/load_confounds-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "222c89402bf4ed55b19c09da408835e7120a552838af0f9cf2df79d035b25891",
          "md5": "c26ffabf421b351b0030988b6abab5f4",
          "sha256": "d4412f62608a659f0e2ce5856ae87c2a45051012b4af7f6e84c9468a9f72bba8"
        },
        "downloads": -1,
        "filename": "load_confounds-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c26ffabf421b351b0030988b6abab5f4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3568,
        "upload_time": "2020-02-05T21:37:24",
        "upload_time_iso_8601": "2020-02-05T21:37:24.394718Z",
        "url": "https://files.pythonhosted.org/packages/22/2c/89402bf4ed55b19c09da408835e7120a552838af0f9cf2df79d035b25891/load_confounds-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "03bf326a1fc5f5d5bd1151ea02f0a7b96b6c01bd0e2736b855cc182697b7763a",
          "md5": "d14cb697a3959ba94fead9b46bb1276c",
          "sha256": "54fd2c3cbe5bb36bea79b598969737d87373878a61cf26c4151ce5dba7f1a66f"
        },
        "downloads": -1,
        "filename": "load_confounds-0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d14cb697a3959ba94fead9b46bb1276c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 3725,
        "upload_time": "2020-02-17T19:53:59",
        "upload_time_iso_8601": "2020-02-17T19:53:59.755033Z",
        "url": "https://files.pythonhosted.org/packages/03/bf/326a1fc5f5d5bd1151ea02f0a7b96b6c01bd0e2736b855cc182697b7763a/load_confounds-0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2c021930bfe0768bacb094b62ca3733bd886eeae1accaf72815e7edcb12e34d8",
          "md5": "d8709bfc068333175bde05359f8b99a9",
          "sha256": "c563497a02a504716bf0c5f4a2568ea240a929781e858f09352ef1f9fc997073"
        },
        "downloads": -1,
        "filename": "load_confounds-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "d8709bfc068333175bde05359f8b99a9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3682,
        "upload_time": "2020-02-17T19:54:01",
        "upload_time_iso_8601": "2020-02-17T19:54:01.052270Z",
        "url": "https://files.pythonhosted.org/packages/2c/02/1930bfe0768bacb094b62ca3733bd886eeae1accaf72815e7edcb12e34d8/load_confounds-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e081990d3e11f4a1ff51b76bc66a2361cb08d6152260de043470c3bb2e9cd403",
          "md5": "877e6c59dec8e6240e802778618dbc6b",
          "sha256": "2a3458dbdd4dd4e822cd1d3acdf5cb3212b1bfd5d1f6311ac7d9aa3d95b34847"
        },
        "downloads": -1,
        "filename": "load_confounds-0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "877e6c59dec8e6240e802778618dbc6b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 3721,
        "upload_time": "2020-02-17T20:20:00",
        "upload_time_iso_8601": "2020-02-17T20:20:00.593276Z",
        "url": "https://files.pythonhosted.org/packages/e0/81/990d3e11f4a1ff51b76bc66a2361cb08d6152260de043470c3bb2e9cd403/load_confounds-0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "83e4023314c053251f05c73efa5a3a250e05226ad7acd19bed1b33e057062637",
          "md5": "907da0549fe75cad081261549db5d667",
          "sha256": "5584e712def6c950179b7e20f9484d14fae94a197ab92c39479409bf9844f221"
        },
        "downloads": -1,
        "filename": "load_confounds-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "907da0549fe75cad081261549db5d667",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3677,
        "upload_time": "2020-02-17T20:20:01",
        "upload_time_iso_8601": "2020-02-17T20:20:01.483016Z",
        "url": "https://files.pythonhosted.org/packages/83/e4/023314c053251f05c73efa5a3a250e05226ad7acd19bed1b33e057062637/load_confounds-0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "02d4b820fd7f9a52699f42933d43604e92d5190e6767ab5543a8112e515bb93a",
          "md5": "d2b5df3c9f07d37ac623c92f3751946c",
          "sha256": "254d82438dc7ec922e9367c0be3ab078ec8009fafcd37a060d0e24919763ccd8"
        },
        "downloads": -1,
        "filename": "load_confounds-0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d2b5df3c9f07d37ac623c92f3751946c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 3724,
        "upload_time": "2020-02-17T20:48:51",
        "upload_time_iso_8601": "2020-02-17T20:48:51.977855Z",
        "url": "https://files.pythonhosted.org/packages/02/d4/b820fd7f9a52699f42933d43604e92d5190e6767ab5543a8112e515bb93a/load_confounds-0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5d79bca9360f2b4b7730b12f258cad8a1260311c9ec8c402fefdf59e1611b9f2",
          "md5": "60950e5445c0afcbb40f6f3617afef69",
          "sha256": "4c5a30677871ca9f47ebf93c89e7a3e2bd961319db15150cffbeb4920523bfc1"
        },
        "downloads": -1,
        "filename": "load_confounds-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "60950e5445c0afcbb40f6f3617afef69",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3681,
        "upload_time": "2020-02-17T20:48:53",
        "upload_time_iso_8601": "2020-02-17T20:48:53.190266Z",
        "url": "https://files.pythonhosted.org/packages/5d/79/bca9360f2b4b7730b12f258cad8a1260311c9ec8c402fefdf59e1611b9f2/load_confounds-0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2e7060a84b417c4d6dec745064b05f5bada25b069885ad0872171db2302bc972",
          "md5": "27f76d3e7322a30eb278c315d8df798c",
          "sha256": "df4f294d61f8b4c444d3cba0d808361c457c29cf500cbd064702e6c20f0341fb"
        },
        "downloads": -1,
        "filename": "load_confounds-0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "27f76d3e7322a30eb278c315d8df798c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 6632,
        "upload_time": "2020-06-16T15:55:45",
        "upload_time_iso_8601": "2020-06-16T15:55:45.685517Z",
        "url": "https://files.pythonhosted.org/packages/2e/70/60a84b417c4d6dec745064b05f5bada25b069885ad0872171db2302bc972/load_confounds-0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cda55c13a6494e5a639040dc7c5866d8c80af95caa1a2c75e95109f92aa17a7c",
          "md5": "80c974b637da1bfb2af1a341b3c315e9",
          "sha256": "db43c9ce2a3d0e7b9651fa02dc27cab93fa90fbbb72ce4f728f600a25f20a6dc"
        },
        "downloads": -1,
        "filename": "load_confounds-0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "80c974b637da1bfb2af1a341b3c315e9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 6541,
        "upload_time": "2020-06-16T15:55:46",
        "upload_time_iso_8601": "2020-06-16T15:55:46.815201Z",
        "url": "https://files.pythonhosted.org/packages/cd/a5/5c13a6494e5a639040dc7c5866d8c80af95caa1a2c75e95109f92aa17a7c/load_confounds-0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "835a61c30d451e21bf7c70aa4bb0cff841fd1757bb2ee2ee6ee083c2b8df7c37",
          "md5": "2272a1a2b43c4c62f4ed8cb4692a2da4",
          "sha256": "bb1d00bd04fda7a01111a19a85ec8af73c4fff6a4ff2af08d2be47a37be85880"
        },
        "downloads": -1,
        "filename": "load_confounds-0.6.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2272a1a2b43c4c62f4ed8cb4692a2da4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 33715,
        "upload_time": "2020-06-17T13:06:42",
        "upload_time_iso_8601": "2020-06-17T13:06:42.752891Z",
        "url": "https://files.pythonhosted.org/packages/83/5a/61c30d451e21bf7c70aa4bb0cff841fd1757bb2ee2ee6ee083c2b8df7c37/load_confounds-0.6.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7aacea54dc21c50a22093103ce86e9092806a38a91e1313aa83f676c7ddbb5e8",
          "md5": "b9e939b7314ea0ade0e841902dbd8b2e",
          "sha256": "599f315b4a4cf40b13688eb1c84fd0a2947a44aa6d924c52137c14f32c64a9bf"
        },
        "downloads": -1,
        "filename": "load_confounds-0.6.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b9e939b7314ea0ade0e841902dbd8b2e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 29363,
        "upload_time": "2020-06-17T13:38:53",
        "upload_time_iso_8601": "2020-06-17T13:38:53.651337Z",
        "url": "https://files.pythonhosted.org/packages/7a/ac/ea54dc21c50a22093103ce86e9092806a38a91e1313aa83f676c7ddbb5e8/load_confounds-0.6.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "de1b7316252574727a833b4276f4dfb0db389f074cd464f12cdb7e16880c8412",
          "md5": "7a362328a1de88dff51f940f0a87b8c4",
          "sha256": "692250f86ab40b44aea36f916b6bc88100537fef94a556b349b25c8905bdca04"
        },
        "downloads": -1,
        "filename": "load_confounds-0.6.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7a362328a1de88dff51f940f0a87b8c4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 29693,
        "upload_time": "2020-06-18T21:18:07",
        "upload_time_iso_8601": "2020-06-18T21:18:07.499087Z",
        "url": "https://files.pythonhosted.org/packages/de/1b/7316252574727a833b4276f4dfb0db389f074cd464f12cdb7e16880c8412/load_confounds-0.6.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "03a73629324f725cabc2698872e4f66ee4399d050bec50a7e307730a3c5a78db",
          "md5": "26af54017621bb26e8bc3de64e137727",
          "sha256": "7d00195755414c88f921243d6031256fb60025134d23744106e51dc5cbb7037c"
        },
        "downloads": -1,
        "filename": "load_confounds-0.6.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "26af54017621bb26e8bc3de64e137727",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 31223,
        "upload_time": "2021-01-08T04:30:52",
        "upload_time_iso_8601": "2021-01-08T04:30:52.263127Z",
        "url": "https://files.pythonhosted.org/packages/03/a7/3629324f725cabc2698872e4f66ee4399d050bec50a7e307730a3c5a78db/load_confounds-0.6.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c09c024bb014a588d8fd8b5b1791458ead3a6823ed5bb0a94b4c45cccac5249",
          "md5": "3f646a1c641e2692444b27dbeedf1a9e",
          "sha256": "20a0c814e2286d1cbe4cc3a385e6b8041e74c0a3f4e9c51f5dce4571a3839ce6"
        },
        "downloads": -1,
        "filename": "load_confounds-0.6.5.tar.gz",
        "has_sig": false,
        "md5_digest": "3f646a1c641e2692444b27dbeedf1a9e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 31641,
        "upload_time": "2021-01-08T04:30:53",
        "upload_time_iso_8601": "2021-01-08T04:30:53.357248Z",
        "url": "https://files.pythonhosted.org/packages/8c/09/c024bb014a588d8fd8b5b1791458ead3a6823ed5bb0a94b4c45cccac5249/load_confounds-0.6.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a642a83ca50f0e501aecdddf21109aa3733432b94c56fa9158d543dec7cac2f0",
        "md5": "8d8479b64c70fc28ab30e9b2385869cc",
        "sha256": "017c65650e254da32917441fddd8f78fe3142063d06678cc52303600071c688c"
      },
      "downloads": -1,
      "filename": "load_confounds-0.12.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8d8479b64c70fc28ab30e9b2385869cc",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 64857,
      "upload_time": "2021-08-05T15:49:18",
      "upload_time_iso_8601": "2021-08-05T15:49:18.634000Z",
      "url": "https://files.pythonhosted.org/packages/a6/42/a83ca50f0e501aecdddf21109aa3733432b94c56fa9158d543dec7cac2f0/load_confounds-0.12.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "94f90e297c87cd01a0241440de49a2d876bf2ea72fcabdfcbc416565df0e4bd3",
        "md5": "788e0b5f47597e95f7ec0e71c241f7b5",
        "sha256": "76a56d5876f5453c8b730a07969b046acb3664d13fd7116da784714f3745acb4"
      },
      "downloads": -1,
      "filename": "load_confounds-0.12.0.tar.gz",
      "has_sig": false,
      "md5_digest": "788e0b5f47597e95f7ec0e71c241f7b5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 66511,
      "upload_time": "2021-08-05T15:49:20",
      "upload_time_iso_8601": "2021-08-05T15:49:20.082631Z",
      "url": "https://files.pythonhosted.org/packages/94/f9/0e297c87cd01a0241440de49a2d876bf2ea72fcabdfcbc416565df0e4bd3/load_confounds-0.12.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}