{
  "info": {
    "author": "Kieren Funk",
    "author_email": "kierenfunk@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# mercuryV1\nAPI wrapper library in python for mercury CRM\nfor more information please visit the API reference on mercury's website [here](https://support.connective.com.au/hc/en-us/articles/360009453654-Getting-Started-with-Mercury-API).\n\n## Initialisation\nGet YOUR_ACCESS_KEY and YOUR_ACCESS_TOKEN from your mercury account (Admin > Integrations). If you wish to use sandbox mode, you will need to login with the UAT url, there is a different token for sandbox.\n\n```\nfrom mercuryV1 import Mercury\n\nclient = Mercury(token='YOUR_ACCESS_TOKEN',key='YOUR_ACCESS_KEY',sandbox=True)\n```\n\n## Examples\n```\nfrom mercuryV1 import Mercury\n\n# initialise the client\nclient = Mercury(token='YOUR_ACCESS_TOKEN', key='YOUR_ACCESS_KEY', sandbox=True)\n\n# create a new contact with some person data\nperson = {\"firstName\": \"Henry\", \"lastName\":\"Ford\", \"email\":\"henryford@ford.com\"}\nclient.contacts.create(data=person)\n\n# retrieve the entire list of contacts in mercury\nclient.contacts.get()\n\n# retrieve a list of 30 contacts beginning from the 203rd contact\nclient.contacts.get(count=30, offset=203)\n\n# search for opportunities that were modified after 13th March 2019 and sort them in last modified date, ascending order\nsearchOptions = {\"lastUpdated\":\"2019-03-13\"}\nsortOptions = {\"key\":\"lastModifiedDate\", \"order\":\"ASC\"}\nclient.opportunities.get(search=searchOptions, sort=sortOptions)\n\n# create a related party and link it between an opportunity and a contact\nrelatedPartyData = {\"personID\":\"CONTACT_ID\",\"relationship\":\"Father\"}\nclient.relatedParties.create(data=relatedPartyData, parentId=\"OPPORTUNITY_ID\")\n```\n\n## Contacts\n---\n\n#### Methods\nMethod | Returns\n--- | ---\n`client.contacts.create(data={})` | dict\n`client.contacts.delete(id='')` | Response status code\n`client.contacts.fetch(id='')` | list\n`client.contacts.get(count=100, offset=0, search={}, sort={})` | list\n`client.contacts.update(id='', data={})` | Response status code\n\n#### Contact Search Options\nOption | Type | Description\n--- | --- | --- \nname | string |         Contact name to search for\nisDeleted | boolean |         Set to true if searching for deleted contacts\nexcludeDoNotMail | boolean |         Exclude contacts marked as do not email from the search results.         If not set, will default to false\nexcludeEmailBounced | boolean |         Exclude contacts with bounced emails from the search results.          If not passed, will default to false\nlastUpdated | string  |         Returns results after the given lastUpdated date. Date should be in yyyy-mm-dd format\ncompanyName | string |         Company name of the person\npersonType | string |         The relationship type of the person\ncategoryId | string |         Search by the category id\ncampaignId | string |         Search by the campaign id\ncontactNumber | string |         Search by the contact number of the person\nemail | string |         Search by the email address of the person\ndateOfBirth | string  |         Search by date of birth of the person. Date should be in yyyy-mm-dd format\nbirthday | string  |         Search by birthday anniversary. Date should be in yyyy-mm-dd format\ncreatedOn | string  |         Search by creation date. Date should be in yyyy-mm-dd format \n\n## Opportunities\n---\n\n#### Methods\nMethod | Returns\n--- | ---\n`client.opportunities.create(data={})` | dict\n`client.opportunities.delete(id='')` | Response status code\n`client.opportunities.fetch(id='')` | list\n`client.opportunities.get(count=100, offset=0, search={}, sort={})` | list\n`client.opportunities.update(id='', data={})` | Response status code\n\n#### Opportunity Search Options\nOption | Type | Description\n--- | --- | --- \nname | string |         Opportunity name to search for\nisDeleted | boolean |         Set to true if searching for deleted opportunities\nstatuses | list |         List of opportunity statuses\nlastUpdated | string  |         Search by last updated date. Date should be in yyyy-mm-dd format.\ntransactionType | string |         The type of transaction\nuser | string |         CA number of the agent\ncreatedOn | string  |         Search by created date. Date should be in yyyy-mm-dd format.\nconfirmedSettlementDate | string  |         Search by settlement date. Date should be in yyyy-mm-dd format.\ninterestOnlyExpiry | string |         Search by interest only expiry date. Date should be in yyyy-mm-dd format.\nfixedRateExpiry | string |         Search by fixed rate expiry date. Date should be in yyyy-mm-dd format. \n\n#### Contact and Opportunity Sort Options\nOption | Type | Description\n--- | --- | --- \nkey | string |         creationDate or lastModifiedDate. creationDate is default\norder | string |         ASC or DESC. DESC is default \n\n\n## Addresses\n---\n\n#### Methods\nMethod | Returns\n--- | ---\n`client.addresses.create(data={}, parentId='')` | dict\n`client.addresses.delete(parentId='', nestedId='')` | Response status code\n`client.addresses.update(data={}, parentId='', nestedId='')` | Response status code\n\n## Contact Methods\n---\n\n#### Methods\nMethod | Returns\n--- | ---\n`client.contactMethods.create(data={}, parentId='')` | dict\n`client.contactMethods.delete(parentId='', nestedId='')` | Response status code\n`client.contactMethods.update(data={}, parentId='', nestedId='')` | Response status code\n\n## Expenses\n---\n\n#### Methods\nMethod | Returns\n--- | ---\n`client.expenses.create(data={}, parentId='')` | dict\n`client.expenses.delete(parentId='', nestedId='')` | Response status code\n`client.expenses.update(data={}, parentId='', nestedId='')` | Response status code\n\n## Incomes\n---\n\n#### Methods\nMethod | Returns\n--- | ---\n`client.incomes.create(data={}, parentId='')` | dict\n`client.incomes.delete(parentId='', nestedId='')` | Response status code\n`client.incomes.update(data={}, parentId='', nestedId='')` | Response status code\n\n## Assets\n---\n\n#### Methods\nMethod | Returns\n--- | ---\n`client.assets.create(data={}, parentId='')` | dict\n`client.assets.delete(parentId='', nestedId='')` | Response status code\n`client.assets.update(data={}, parentId='', nestedId='')` | Response status code\n\n## Liabilities\n---\n\n#### Methods\nMethod | Returns\n--- | ---\n`client.liabilities.create(data={}, parentId='')` | dict\n`client.liabilities.delete(parentId='', nestedId='')` | Response status code\n`client.liabilities.update(data={}, parentId='', nestedId='')` | Response status code\n\n## Related Parties\n---\n\n#### Methods\nMethod | Returns\n--- | ---\n`client.relatedParties.create(data={}, parentId='')` | dict\n`client.relatedParties.delete(parentId='', nestedId='')` | Response status code\n`client.relatedParties.update(data={}, parentId='', nestedId='')` | Response status code\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/kierenfunk/mercuryV1/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mercuryV1",
    "package_url": "https://pypi.org/project/mercuryV1/",
    "platform": "",
    "project_url": "https://pypi.org/project/mercuryV1/",
    "project_urls": {
      "Homepage": "https://github.com/kierenfunk/mercuryV1/"
    },
    "release_url": "https://pypi.org/project/mercuryV1/0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "API wrapper library in python for mercury CRM",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6221372,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3ab828786156a6174685b0c3bcd5992ffa01fc51705a1989eafa54ad7b77d4d4",
          "md5": "51bbf4187134b5cd4dc33c4d759308f9",
          "sha256": "953a253811d7c7560d00b4b7495f9c5efaa1385e0c70ad67d4f75316e452b645"
        },
        "downloads": -1,
        "filename": "mercuryV1-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "51bbf4187134b5cd4dc33c4d759308f9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 25894,
        "upload_time": "2019-11-30T11:58:11",
        "upload_time_iso_8601": "2019-11-30T11:58:11.932574Z",
        "url": "https://files.pythonhosted.org/packages/3a/b8/28786156a6174685b0c3bcd5992ffa01fc51705a1989eafa54ad7b77d4d4/mercuryV1-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3ab828786156a6174685b0c3bcd5992ffa01fc51705a1989eafa54ad7b77d4d4",
        "md5": "51bbf4187134b5cd4dc33c4d759308f9",
        "sha256": "953a253811d7c7560d00b4b7495f9c5efaa1385e0c70ad67d4f75316e452b645"
      },
      "downloads": -1,
      "filename": "mercuryV1-0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "51bbf4187134b5cd4dc33c4d759308f9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 25894,
      "upload_time": "2019-11-30T11:58:11",
      "upload_time_iso_8601": "2019-11-30T11:58:11.932574Z",
      "url": "https://files.pythonhosted.org/packages/3a/b8/28786156a6174685b0c3bcd5992ffa01fc51705a1989eafa54ad7b77d4d4/mercuryV1-0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}