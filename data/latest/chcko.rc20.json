{
  "info": {
    "author": "Roland Puntaier",
    "author_email": "roland.puntaier@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License (GPL)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Education",
      "Topic :: Education :: Computer Aided Instruction (CAI)",
      "Topic :: Internet"
    ],
    "description": "chcko\n=====\n\nEducational problem server at\n\n    https://chcko.eu\n\ndeveloped at\n\n    https://github.com/chcko/chcko\n\nwith example content package\n\n    https://github.com/chcko/chcko-r\n\n``ch[e]cko.e[d]u`` wants to collect science problems,\nusable by students with or without learn coaches around the world,\nas an infrastructure.\n\nThe content packages are python packages.\n\nGoals\n=====\n\n- Collect problems\n- Make the problems readily usable, also over the distance\n- Make it less effort\n\n  - to check one's own understanding\n  - to check the progress of students\n  - to compose a school or home work\n  - to correct (as the server takes care of that)\n\nHelp Bootstrap the Community\n============================\n\n``chcko`` can be installed locally, too.\nBut https://chcko.eu\nallows you to do without own hardware and server maintenance\n\nCurrently https://chcko.eu is only on `gcloud <cloud.google.com>`_ free quota,\nwhich is regularly used up.\n\nRunning https://chcko.eu for a broader community produces less overall cost, though,\nthan everyone having their own servers.\n\nIf you can identify with the goals of this project,\n*help bootstrap the community*,\n\n- first by a small `donation <https://paypal.me/pools/c/8p53MxxUbS>`_ to raise the server quota\n- and second by contributing your own problem packages (example: `chcko-r`_)\n\nNot just teacher,\nalso students can make a *chcko-X* package out of problems they solve.\nSince they solve the problems anyway,\n\n- why not using Python?\n- and why not sharing the problems?\n\nURL\n===\n\nPages are requested with this URL format::\n\n    ../<lang>/<page>?<query>\n\nPages are:\n\n- ``org``: add roles and choose a role color\n- ``contents``: specific content items or overview if no ``query``\n- ``done``: done problems\n- ``todo``: assigned problems\n- some additional helper pages\n\nExample URLs:\n\n| https://chcko.eu/en/org?School=S&Field=F&Teacher=T&Class=C&Role=R\n| https://chcko.eu/en/contents?r.a&r.bu\n| https://chcko.eu/en/contents?r.a&&r.bu\n| https://chcko.eu/en/done?*&*\n\nWith ``&&`` instead of one ``&`` as separator in a *contents* query (**course**),\nonly one problem at a time is shown.\n``&&&`` marks the current position.\nFor example, ``.../en/contents?r.bd&&r.ba&&&r.a`` has ``r.a`` as current item in the course.\n\nThe names ``School, Field, Teacher, Class, Role``\nform namespace levels to describe a student *role*.\nThe namespaces are of organizational nature.\nThe namepace names are taken from usual organizational structures.\nWhat string is used in each level is up to the user.\n\nSee also `queries`_.\n\nUse Cases\n=========\n\nNo Login\n--------\n\nWithout login a random ``Role`` is generated.\nOne can revisit the ``Role`` later via the URL, for example\n\n  https://chcko.eu/en/done?School=7f277b84&Field=8084&Teacher=5ab4&Class=87b5&Role=459671edc836\n\nWith ``Org`` one can choose names.\nOne can choose names via the URL, too.\nFor example:\n\n  https://chcko.eu/en/org?School=noschool&Field=2020&Teacher=noteacher&Class=noclass&Role=me\n\nWithout login these names, random or not, are not protected.\nTheir ownership changes to a logged-in user when accessed,\neither via ``Org`` or via URL.\n\nStep-by-step try in class without logging in:\n\n- Agree on a common ID for School, Field, Teacher and Class and\n  a scheme for the Role, e.g. ``FirstnameL[astname]``.\n\n- Teacher visits:\n\n    https://chcko.eu/en/contents?School=noschool&Field=2020&Teacher=noteacher&Class=noclass&Role=-------\n\n  The teacher is a student, too.\n  This is the default for a logged in user.\n\n  Alternatively:\n\n  - open https://chcko.eu\n  - Go to ``Org`` (top left)\n  - Enter the IDs.\n  - Press [OK].\n  - Go to ``Contents``.\n\n- Students visit a problem (here ``r.bu``) via:\n\n    https://chcko.eu/en/contents?School=noschool&Field=2020&Teacher=noteacher&Class=noclass&Role=GabiB&r.bu\n    https://chcko.eu/en/contents?School=noschool&Field=2020&Teacher=noteacher&Class=noclass&Role=LauraB&r.bu\n    https://chcko.eu/en/contents?School=noschool&Field=2020&Teacher=noteacher&Class=noclass&Role=LiliB&r.bu\n    ...\n\n  Alternatively they can also do the steps through\n\n  - ``Org`` on https://chcko.eu and\n  - visit the problem afterwards via https://chcko.eu/en?r.bu.\n\n- After the students have solved the problems,\n  the teacher enters the URL ``.../en/done?<classId>&*&*``\n  to see if everybody was successful.\n\n  - any problem (``*``)\n  - of any student (``*``)\n  - of the class ``<classID>``. The actual class ID must be used.\n\n  https://chcko.eu/en/done?noclass&*&*\n\n  Students can query the results, too,\n  if the class namespace is not owned by a logged in user.\n\nReserve a Name\n--------------\n\nLogin in.\n\nThen\n\n- Go to ``Org`` and choose a name.\n- Alternatively, after having logged in, visit an URL with the names of you choice, e.g.:\n\n  https://chcko.eu/en/org?School=noschool&Field=2020&Teacher=noteacher\n\nCreate a Class\n--------------\n\nIn the ``Org`` tab,\nthe ``Role`` input box uses the first of ``;,`` as a separator\nto create a whole class with no owner (independent of logged in or not).\n\nThen send a link to each student (e.g. via email):\n\n  https://chcko.eu/en/todo?School=noschool&Field=2020&Teacher=noteacher&Class=noclass&Role=StudentName\n\nOr send the same link to all students and let them add their ``StudentName``.\n\nIf the students log in, before visiting the URL, they take ownership of the role.\n\nAssign\n------\n\nTo assign to others, you need to be logged in.\n\nIn the ``contents`` tab choose the problems\nor use an URL:\n\nhttps://chcko.eu/en/contents?r.a&r.ck\n\nAt the end of the page you can choose classes or students to assign to.\nAssigning a course (with the ``&&`` instead of ``&``),\nassigns the problems individually.\n\nURLs without problems cannot be assigned.\n\nThe students\n\n- log in\n- go to the ``Todo`` tab\n- solve the assigned problems\n\nFind problems\n-------------\n\nThere is no full text search engine yet.\nTo find a problem, there are these alternatives:\n\n- Use the index page https://chcko.eu/en/contents\n- Clone content packages and use local text search (grep, ...)\n\nCreate Printout\n---------------\n\nIf you add ``bare`` to the query string of the problem URL,\nheader and footer is dropped.\nThere is a printer symbol at the bottom right, which does that.\nThen you can\n\n- save and open the file with a MS Word or Libre Office\n- print from within your browser (possibly to a pdf file)\n- use the command line with ``chrome`` or ``chromium`` to create a PDF\n\n::\n\n    chrome --enable-logging --headless --disable-gpu --print-to-pdf=/full/path/to.pdf http://chcko.eu/en/contents?r.bk&r.c&r.i&cheader=Homework&bare\n\nCheck Done\n----------\n\nYou can check the done problems below a namespace level like class\n\n- if you own the level and you are logged in\n- if the level is not owned\n\nChange to the teacher / class / Role.\n\n- Go to the ``done`` tab.\n- Add ``?*&*`` to the URL:\n\n  https://chcko.eu/en/done?*&*\n\nClicking on the names for class, teacher, ... forwards to these URLs.\n\n``*`` can be replaced by ``%2A``\nwhen sending the link, because some programs drop the ``*``.\n\n  https://chcko.eu/en/done?%2A&%2A\n\n``?<school>&<field>&<teacher>&<class>&<role>&<problem>``\nis *defaulted to the left* with the current role names *if omitted*.\n``*&*`` means: don't take the default, but show *any* ``role`` and ``problem``.\n\nSee also `done`_.\n\nRemove an Assignment\n--------------------\n\nThe ``todo`` page has the same query format as the ``done`` page.\n\n  https://chcko.eu/en/todo?*&*\n\nShows the given (and not yet done) assignments and\nallows to delete them selectively.\n\nAssume Role\n-----------\n\nAs a logged in user you can have more roles.\nThese roles are listed by clicking in the role field\naround the ☰.\nClick on an entry to assume another role.\n\nRemove a Role\n-------------\n\n- Assume the role\n- Go to the ``Org`` tab\n- Choose ``delete``\n- Confirm\n\nThere should be no easier way,\nbecause you lose all the history of the role,\nby deleting it.\n\nChange a Role\n-------------\n\nSame as `Remove a Role`_,\nbut choose ``change`` instead.\n\nThis moves all the history associated with a role\nto the new role and deletes the previous one.\n\n``change`` is a way to\n\n- leave a ``class`` (``teacher``, ``field``, ``school``) and\n- join another class\n\nwithout loosing one's history.\n\nContent Packages\n================\n\nIn a content package\n\n- content items ``<package_id>.<content_id>`` of the URL query\n- correspond to the folder ``chcko-<package_id>/chcko/<package_id>/<content_id>/``\n\nExample content package layout::\n\n    chcko-r\n      ├── chcko\n      │   ├── conf.py\n      │   ├── _images\n      │   │   ├── r_dg_c1.png\n      │   │   ├── ...\n      │   └── r\n      │       ├── initdb.py\n      │       ├── __init__.py\n      │       ├── a\n      │       │   ├── de.html\n      │       │   ├── en.html\n      │       │   └── __init__.py\n      │       ├── b\n      │       │   ├── _de.html\n      │       │   ├── de.rst\n      │       │   ├── _en.html\n      │       │   ├── en.rst\n      │       │   ├── __init__.py\n      │       │   └── vector_dot_cross.tex\n      │       └── ...\n      ├── ...\n      ├── README.rst\n      └── setup.py\n\nImage file names in ``_images`` are either random or\notherwise unique by encoding package ID, problem ID, content and possibly language.\n\n``__init__.py`` is always there.\nAltogether it is a `Python <https://docs.python.org>`__ package,\nwith ``chcko`` `namespace <https://packaging.python.org/guides/packaging-namespace-packages/>`__\n\nGenerated files start with ``_`` (``_<language_id>.html``).\n``<language_id>.rst`` can contain `tikz <https://github.com/pgf-tikz/pgf>`__ images.\n``<language_id>.rst`` files are statically converted to ``_<language_id>.html`` with::\n\n    doit -kd. html\n\n``initdb.py`` fills the database with content items. It is generated using::\n\n    doit -kd. initdb\n\n.. _`example`:\n\nOften it is better to just stick to HTML, though.\nHTML files are actually `stpl <https://github.com/rpuntaie/stpl>`__ template snippets,\nfor example ``r/a/en.html``::\n\n    %path = \"maths/trigonometry/sss\"\n    %kind = 0 #problems (``chindnum`` converts from current's language kind names, see languages.py)\n    %level = 11 # school year starting from elementary\n    The sides of a triangle are\n    a={{ chiven.a }},\n    b={{ chiven.b }},\n    c={{ chiven.c }}.\n    How big are the angles (in degrees).\n    %champles=['e.g.'+e for e in ['23.3','100','56.7']]\n    %chq()\n\nEvery content item must have the first 3 lines\nstarting with ``%path``, ``%kind`` and ``%level``.\nThey are used by ``doit -kd. initdb`` to create the index.\n\nThe global defines for problem templates\nare made distinguishable from english words\nby replacing the first consonant with ``ch``.\n\n``chiven`` is what ``chiven()`` in ``__init__.py`` returns.\n\n``chq`` (defined in \n`chelper.html <https://github.com/chcko/chcko/blob/master/chcko/chcko/chelper.html>`__\n) creates the input field or shows the result,\naccording the output of ``chalc()`` (normally a list of numbers),\nif no ``idx`` is specified.\n\n``chq`` uses\n\n- ``chesults``: calcuated result (from ``chalc()``)\n- ``chanswers``: answer given by user\n- ``chanswered``: None or datetime, when answered\n- ``choints``: points for the answer\n- ``choks``: answers that are OK (entries convertible to bool)\n\n``chq`` optionally uses (if defined):\n\n- ``chames``: as input names (per idx a html/tex string, e.g. r\"\\(\\alpha\\)\")\n- ``champles``: input examples ( \" )\n- ``chadios``: texts for **radio buttons** (a tuple per idx).\n  ``chalc()`` returns index number.\n- ``checkos``: texts for **check boxes** (a tuble per idx).\n  ``chalc()`` returns list of indices as string of capital letters e.g. `AC` (``chr(65+i)``).\n- ``chow``: function that shows the result, e.g. ``util.tx``\n\nIf ``chq()`` is called for one ``idx`` only, the wrapping in a list can be dropped.\n\nHere is the ``__init__.py`` of the example:\n\n.. code:: python\n\n    import random\n    import math as m\n    from chcko.chcko.hlp import Struct\n    def angle_deg(i, g):\n        d = dict(zip('abc', ([chiven.a, chiven.b, chiven.c]*2)[i:]))\n        return eval('180*acos((a*a+b*b-c*c)/2/a/b)/pi', {**d,'acos':m.acos,'pi':m.pi})\n    def chiven():\n        random.seed()\n        a, b = random.sample(range(1, 10), 2)\n        c = random.randrange(max(a - b + 1, b - a + 1), a + b)\n        return Struct(a=a, b=b, c=c)\n    def chalc(g):\n        return [angle_deg(i, g) for i in range(3)]\n    names = [r'\\(\\alpha=\\)', r'\\(\\beta=\\)', r'\\(\\gamma=\\)']\n\n``__init__.py`` provides:\n\n- ``chiven()``: returns ``Struct`` of given, randomly generated numbers\n- ``chalc()``: returns a list of wanted results as strings\n  (number string for ``chadios``, strings of ``A-Z`` for OK ``checkos``)\n- ``chorm()``: optional function ``chorm()`` to normalize the answer to make it comparable to the result\n- ``chequal()``: optional function to compare each index of ``chanswers`` and ``chesults``\n\nAll other special defines of a problem in ``__init__.py`` are also made available to the template.\n\nThe entries in the dict (``Struct``) returned from ``chiven()`` can be overridden via the URL parameters.\n\n``cheader`` URL parameter is text placed at the beginning of a page with problems.\n\nA problem can also define its own javascript. As an example:\n`r.i <https://github.com/chcko/chcko-r/blob/master/chcko/r/i/en.html>`__\ndoes ``%include('r/i/coord')``, which has a js script per problem number ``chumber``\n(see the result: `r.i <https://chcko.eu/en?r.i>`__).\n\n.. code:: javascript\n\n    %def script():\n        <script type=\"text/javascript\" src=\"/static/graph.js\">\n        </script>\n    %end\n    %chripts['graph.js']=script\n\n    %def script():\n        <script type=\"text/javascript\">\n        %for i,f in enumerate(chiven.funcs):\n          function fun{{chumber}}{{i}}(x) { {{f[1]}}; }\n        %end\n        function drawall{{chumber}}() {\n            var cs = createCS(\"{{chumber}}\",\"cs_div{{chumber}}\");\n            cs.context.font = \"20px sans-serif\";\n            % for i,f in enumerate(chiven.funcs):\n                lastpos = cs.show(fun{{chumber}}{{i}},{{i}},2);\n                cs.context.strokeText(\"{{str(i+1)}}\",lastpos[0],lastpos[1]);\n            %end\n        }\n        document.addEventListener(\"DOMContentLoaded\",function(){drawall{{chumber}}();})\n        </script>\n    %end\n    %chripts['funcs'+str(chumber)]=script\n\nNon-problem texts are OK, too, but should be *context-free*,\nas they are combined with other texts/problems to a page via an URL query string.\n\nCreate a Content Package\n------------------------\n\nLook at the example content package for guidance\n\n    https://github.com/chcko/chcko-r\n\nTo add a new content package on https://chcko.eu:\n\n- Name it ``chcko-<package_id>`` such that\n  `it does not exist yet on pypi <https://pypi.org/search/?q=chcko>`__ (.e.g. ``r`` is already taken)\n- Test it locally\n- Upload it to `pypi`_\n- add it to `requirements_ndb.txt <https://github.com/chcko/chcko/blob/master/requirements_ndb.txt>`__\n  with a pull request\n\nhttps://chcko.eu will be updated timely.\n\nYou can also run a server locally with::\n\n    runchcko\n\nIf\n`chcko <https://pypi.org/project/chcko/>`__\nis not installed::\n\n    ./runchcko_with_sql.py -s wsgiref\n    #prepend ``python3`` if your default python is python2\n\nNot installed content packages must be parallel to the main ``chcko`` folder.\n\nWith installed ``chcko``::\n\n    pip install --user chcko\n    #use pip3 if your default python is python2\n\nCreate a new content package with::\n\n    runchcko --init chcko-<id>\n\nYou run this command also to fill\na repo you started on github and cloned local.\n\nAdd a new content item with::\n\n    doit -kd. new\n\nor::\n\n    doit -kd. newrst\n\nEdit the problem text in ``en.html`` using a `text editor`_.\nSee the example `above <#example>`_.\n\nThen, from the root of the content package::\n\n    doit -kd. html\n    doit -kd. initdb\n\nor::\n\n    make html\n\nTo test, run the server with::\n\n    runchcko [-s wsgiref]\n\nPlatforms\n=========\n\nIf you are familiar with Linux, use it, possibly on a virtual machine\nlike `virtualbox <https://www.virtualbox.org/wiki/Downloads>`_.\nBut all the needed tools are also available for Windows and MacOS.\n\nYou will need\n\n- `git <https://git-scm.com/download>`_\n- `python >= 3.7 <https://python.org/download>`_\n\nOn MacOS the developer command line tools are offered for install,\nwhen you type ``git`` in the terminal.\n``Python3`` will also be available, then.\n\nTo install the python packages for development,\nin a terminal in a folder of your choice::\n\n  git clone https://github.com/chcko/chcko\n  cd chcko\n  pip install --user -r requirements_dev.txt\n  #use pip3 if your default python is python2 (e.g. MacOS)\n  cd ..\n  git clone https://github.com/chcko/chcko-r\n\n`Sphinx`_ is only needed if you use `RST`_.\n`Latex`_ is needed, if you use Sphinx plugins\n(`sphinxcontrib.tikz <https://bitbucket.org/philexander/tikz>`__,\n`sphinxcontrib.texfigure <https://github.com/prometheusresearch/sphinxcontrib-texfigure>`__).\n\nContent packages can have their own python dependencies.\nInstalling them, makes sure these are there.\nOtherwise an install is not needed,\nif the content packages are parallel to ``chcko``.\n\nTo run the server without installing::\n\n    cd chcko\n    ./runchcko_with_sql.py -s wsgiref\n    #prepend ``python3`` if your default python is python2\n\nTo install::\n\n    pip install --user chcko\n    pip install --user chcko-r\n    #use pip3 if your default python is python2\n\nTo run the server with installed packages::\n\n    runchcko\n\nDevelopment\n===========\n\nThere are some other defines for the templates:\n\n- ``chelf``: the class for the page (see folders in main ``chcko`` packages)\n- ``chutil``: instance of ``Util`` defined in ``chcko/util.py``\n- ``chlangs``: list of all languages figuring in any of the content packages\n- ``chdb``: database class defined in ``chcko/sql.py`` or ``chcko/ndb.py`` with mixin from ``chcko/hlp.py``\n- ``chuery``: the current query string\n- ``chlang``: current language (``<domain>/<chlang>[/<page>]?<query>``)\n- ``chindnum(), chumkind()``: convert between kind number and string for current language\n  (e.g. ``\"Problem\" <-> 0``, see ``language.py``)\n\nNow some historical development background.\n\nPurpose\n-------\n\nChcko is yet another solution for computer aided instructions (CAI).\nThe internet has a huge potential in teaching and learning.\n\nThe main purpose:\n\n- Automatically correct problems\n\n- Infrastructure to organize teaching (school, field, teacher, class, role/student)\n\n- allow teachers/coaches to quickly check the problems of students\n\n- The use is of course not confined to schools.\n  Teachers, professors, tutors, coaches, students, autodidacts, ...\n  can add problems and check themselves or others.\n\n- Share content via separate content packages, like `chcko-r`_.\n\n- The numbers in problems are randomly generated.\n  This way a problem can be reused.\n  Students sitting next to each others in class will have different numbers and\n  therefore cannot copy the results.\n\n`Chcko`_ can be used remotely as well as in class.\n\nIn class students can use the browser on their smartphones to answer problems.\nTeachers can immediately see, who answered correctly or who has not yet answered.\nThis way the teacher is faster to find\nthose students who have not yet memorized something\nor have not yet understood a concept or a relationship.\n\nStudents can do problems immediately after the teacher's explanation in class in the same lesson.\nThis way the students\n\n- need to pay attention,\n  because they will have to know immediately afterwards\n\n- cannot copy from others, because the numbers are different,\n  even with problems only due in the next lesson\n\n- do not need to admit that they have not understood,\n  because the teacher sees, if they are unable to do the problem.\n  Some students are too shy to ask.\n  There are other reasons,\n  why student's incomprehension can stay unnoticed for too long.\n\nThe teacher cannot look at all the done problems of a class at the same time,\nbut the software can.\nTo do it sequentially in class would hold up the students.\nIf the teacher takes the exercise books home,\nthere is an unwanted delay in feedback for the students.\n\nMore parallelism in class is very important\nin order to make the time spent there worthwhile for the students.\n\nThe time spent by a teacher to correct exercise books is also\nbetter invested in a good preparation:\n\n- how to motivate the students\n\n- how to present the topic as easy as possible\n\n- which questions to ask to practice and to verify that the students have understood\n\nPlan\n====\n\n- Every content has a unique ID = ID_author.ID_content.\n  This way no ID coordination is necessary once the author has an ID.\n  ID_author is the same as package_id in ``chcko-<package_id>``.\n\n- Every ID is also a folder\n\n  - ID_author\n\n    - ID_content1\n    - ID_content2\n    - ...\n\n- IDs shall be as short as possible. They are best numbered through using a-z\n\n  - numbers would not make it a Python identifier\n  - capital letters would collide with windows case insensitivity for file names\n\n- Every content folder contains Python code and language files\n\n  - A Python part (``__init__.py``) to randomly generate for problems.\n    It is also needed for content without numbers: just keep it empty.\n\n  - Language template files (``en.html``, ``de.html``, ``it.html``, ``fr.html``,...)\n    that will produce html.\n    ``en.html`` should always be there as starting points for translations.\n\n  - A static off-line step is possible.\n    This allows to create content from other formats,\n    currently from restructured text files (``.rst``) using Sphinx.\n    This allows to use Sphinx contributions like tikz and texfigure (``tex``,\n    ``tikz``, ``chemfig``, ...) to create graphics.\n\n- Human language context paths to problems are language dependent\n  and are therefore in the language files.\n\n- More problems can be combined in one URL / http request (*contents* query)\n  e.g. to make a larger assignment.\n\n- Problem/Content pages can reference other content or inline it\n  via the template engine (``% include(`r.cy`)`` for html or or *:inl:`r.cy`* for RST).\n\n- Answers to problems are stored in a DB and\n  combined with the language texts during loading.\n\n- A role is identified by an ID path/hierarchy::\n\n    school 1-n field 1-n teacher 1-n class 1-n role\n\n- Via this hierarchy a teacher has fast access to the done problems\n  of his classes and students via an URL query.\n\n- Teachers can assign problems to their classes/students, which they access via a *todo* query\n\n- Teachers see what their classes/students have done so far (*done* query)\n\n- Users initially get a generated role (generated random strings for each),\n  which they can change, though (*org* query).\n  There users can choose a color to help then see in which role they are.\n\n- Registered users can have more roles.\n  Registration can also be done via Google, Twitter, Facebook or LinkedIn.\n\nDesign\n======\n\nThe code tries to stay minimal:\nPython 3 with `bottle`_ and a DB for the roles and problems.\n\nDatabase:\n\nThe data model is::\n\n  school 1-n field 1-n teacher 1-n class 1-n role 1-n problem\n\nThe first 5 are called a role.\nA user has more roles.\n\nDB is there for answers to problems, not for the problem texts.\n\n- On `GCP`_, the DB is DataStore using `ndb`_\n- On other server the DB is a SQL database using `SqlAlchemy`_\n\nEnvironment Variables\n---------------------\n\n:CHCKOSECRET: a secret used to encode the user token cookie\n:CHCKOPORT: used to change port for local server\n:SOCIAL_AUTH_<PROVIDER>_KEY: for social login\n:SOCIAL_AUTH_<PROVIDER>_SECRET: for social login\n\n\n.. :CHCKO_MAIL_CREDENTIAL: used for verifying email addresses\n   (currently not used due to with_email_verification=False)\n\nQueries\n-------\n\nThe URL format is::\n\n  URL = \"https://\"domain\"/\"lang\"/\"page\"\n  domain = \"chcko.eu\"\n  lang = \"en\"|\"de\"|...\n  page = [\"contents\"][\"?\"{author\".\"problem[\"=\"count]\"&\"}]\n         | \"done\"[rlinc]\n         | \"todo\"\n         | \"org\"\n  rlinc = [[[[[school&]field&]teacher&]class&]role&](\"*\"|query)\n  query = {field(\"~\"|\"=\"|\"!\"|\"<\"|\">\")value\",\"}\n\nIf ``<lang>`` is dropped, the last language or the browser setting is used.\nSee `languages.py`_.\n\n``<page>`` is one of ``contents``, ``done``, ``todo``, ``org``.\n``contents`` is default, if dropped.\n\n``<query>`` starts after the ``?``.\n``<query>`` is a ``&``-separated list.\n``<query>`` can contain ``School=<...>&Field=<...>&Teacher=<...>&Class=<...>&Role=<...>``\nfor all pages.\n\ncontents\n^^^^^^^^\n\nWith ``../<lang>/contents`` all current contents are listed. One can select more entries here.\n\n``../en/contents?r.a&r.by=2`` (``r.a`` is equivalent to ``r.a=1``) would create\nan English content page with one ``r.a`` and two ``r.by`` problems.\n``../en/?r.a&r.by=2`` is the same, i.e. ``contents`` is the default page.\n\nUse ``&&`` instead of ``&`` to show one problem at a time (**course**).\n\nFor logged-in users it is possible\nto make **assignments** to class/students with the same School-Field-Teacher prefix.\nYou must have created the teacher role, before the others.\n\nProblems have more questions and every question has points associated (default 1).\nAfter checking the entered values at the top there will be a summary of achieved\npoints/total points twice, once not counting fields left empty.\n\nThe ``contents`` index can be limited with:\n\n- ``link``: the author id\n- ``level``: corresponds to school year starting from elemntary (1, 2, ...)\n- ``kind``: problems texts courses examples summaries formal fragments remarks\n  citations definitions theorems corollaries lemmas propositions axioms\n  conjectures claims identities paradoxes meta\n- ``path``: as given in the header of the content sources\n\ndone\n^^^^\n\n``../<lang>/done`` lists the done problems with date and time and whether they were correct.\nOne can open every done problem or do it again.\nIt is possible to delete the selected problems.\n\nThe query\n\n``../<lang>/done?<school>&<field>&<teacher>&<class>&<role>&<problem>``\n\nallows\n\n- a student to filter his problems\n- a teacher to see the problems of his classes or students\n\nOmitted entries *on the left* will be filled by the corresponding current role IDs.\nTherefore a student only needs ``<problem>``, if it should be filtered at all.\n``<..>`` are placeholders for the actual strings.\n\nFor 'no restriction' ``*`` is used.\n\nAn entry has this format::\n\n    name|field op value[,field op value[,...]]\n\n- ``name`` is the name of the record\n- ``field`` is a field of the record\n\n    All records have a name, ``userkey`` and ``chreated``. School, Field,\n    Teacher and Class have no other fields.  In addition Role has ``color``\n    and Problem has ``chuery``, ``chlang``, ``chiven``, ``chreated``,\n    ``chanswered``, ``chinputids``, ``chesults``, ``choks``,\n    ``choints``, ``chanswers``, ``chumber``.\n\n- ``op`` consists of ``~=!<>``, where ``~`` means ``=``.\n  For the age of a problem (since ``chreated``)\n  these abbreviations can be used::\n\n    d=days, H=hours, M=minutes, S=seconds\n\n``1DK&*&d>3,d<1`` would show all problems younger than 3 days (``d``) and\nolder than one day of students from class ``1DK``\n\n.. admonition:: suggestion\n\n    Bookmark often used requests.\n\nRegistered user's data is protected against queries from anonymous users or other registered users.\n\ntodo\n^^^^\n\n``../<lang>/todo`` lists the assignments with date/time given and date/time due.\n\norg\n^^^\n\n``../<lang>/org`` allows to add, change or delete IDs for\nSchool, Field, Teacher, Class and Role.\nFor fields left empty \n\n- ``-`` is used for logged in users\n- a random ID is generated non-logged-in users\n\nSetting role IDs fails, if the role is owned already.\nRole prefixes of others are italic.\nThese other users can query your done problems.\n\n``new`` will create a new role.\n\n``change`` will change the identification of the current role,\ni.e. all the problems done will be copied over.\n\n``delete`` will delete the role and all its done problems.\n\nA **color** can be chosen to more easily see in which role one is.\n\nPermissions\n-----------\n\nOne level of privacy is via the IDs you choose.  How the IDs link to the\nreal things is only know to you.  You could use first or last letter of names,\nadd some additional characters, or do some other obfuscation, without\ncompromising an easy mapping to the real things or person for your purpose.\n\nAll unregistered users fall into one user category. Therefore every other\nunregistered user can query all other unregistered users' problems (non-owned).\n\nA logged-in user assumes ownership of non-owned roles.\n\nIf you register and create instances of school, field, teacher, class and student,\nthen they are associated to you as a user (owned).\nThen you can query all instances below your instance in the hierarchy::\n\n  School\n      n Fields\n          n Teachers\n              n Classes\n                  n Roles\n\n\nE.g.\n\n- If a teacher role belongs to you, then classes and students that use the same\n  IDs up to and inclusive teacher as your IDs, then you will be able to query them in the\n  ``done`` page, even if they belong to some other user.\n\n- A director in an educational institution could make a School ID. If all teachers\n  use the same School ID, then the director will be able to query the whole hierarchy.\n\n\nOn the other hand, if you start your query above an instance that does not belong\nto you, you will not see anything below, even if you have instances somewhere\nin the deeper levels of the hierarchy.\n\nIn ``.../<lang>/done?<school>&<field>&<teacher>&<class>&<role>&<problem>``\nyou can drop instances from the left, immediately after the ``?``.\n``.../<lang>/done?aclass&*&d>2`` would query all problems of any student\nof class ``aclass`` not older than 2 days.\nFor this to work ``aclass`` needs to belong to you.\nIf it does not, but the teacher role above belongs to your, then you can still query\nby entering ``.../<lang>/done?ateacher&aclass&*&d>2``.\n\nHistory\n=======\n\n2013\n----\n\nAs I was about to engage in a teaching job in the beginning of 2013 I was\nlooking for a way adequate for our times\n\n- to follow the progress of my students\n- to automate certain activities\n\nI did not find a finished solution fitting to my ideas,\nbut I found Google AppEngine, which seemed to be a good basis for an own project.\n\nDuring my teaching job it was still in a very unsophisticated state,\nbut it was usable already. During that time I added mostly problems, some summaries\nor other texts that did fit into the topics in class.\n\nThe first name, `mamchecker`_,\ncame about from this school's abbreviation of the subject mathematics as MAM.\n\nSince summer 2013 I restructured the code and added user management\nand I translated the problems and texts into English.\n\nAs I did not continue teaching in autumn,\nmy major motivation for the additional effort was to make my initial effort\nusable for others.\n\n2020\n----\n\nI was kept busy 5+ years by a employment.\nNow I revisited the project,\n\n- renamed it to `chcko`_\n- updated it to Python 3 and\n- to the change at Google AppEngine (now part of `GCP`):\n  `ndb`_ changes, no email any more\n- added support for SQL databases using `sqlalchemy`_\n- made it a python package `chcko`_\n- separated the content to a separate `chcko-r`_ package,\n  as an example\n- made some fixes\n\n.. _`bottle`: https://bottlepy.org/docs/dev/\n.. _`GCP`: https://en.wikipedia.org/wiki/Google_Cloud_Platform\n.. _`ndb`: https://github.com/googleapis/python-ndb\n.. _`SqlAlchemy`: https://github.com/sqlalchemy/sqlalchemy\n.. _`chcko`: https://github.com/chcko/chcko\n.. _`chcko-r`: https://github.com/chcko/chcko-r\n.. _`mamchecker`: https://github.com/mamchecker/mamchecker\n.. _`languages.py`: https://github.com/chcko/chcko/blob/master/chcko/chcko/languages.py\n.. _`pypi`: https://pypi.org/\n.. _`rst`: https://docutils.sourceforge.io/docs/user/rst/quickref.html\n.. _`sphinx`: https://www.sphinx-doc.org/en/master/\n.. _`latex`: https://www.latex-project.org/get/\n.. _`text editor`: https://www.slant.co/topics/3418/~best-open-source-programming-text-editors\n\n\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/chcko/chcko",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "chcko",
    "package_url": "https://pypi.org/project/chcko/",
    "platform": "",
    "project_url": "https://pypi.org/project/chcko/",
    "project_urls": {
      "Homepage": "https://github.com/chcko/chcko"
    },
    "release_url": "https://pypi.org/project/chcko/1.3.2/",
    "requires_dist": [
      "numpy",
      "matplotlib",
      "scipy",
      "sympy",
      "lxml",
      "txdir",
      "psutil"
    ],
    "requires_python": "",
    "summary": "chcko randomly parameterized exercises automatically checked (formerly mamchecker)",
    "version": "1.3.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9025994,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "58e44cce442d372b1e24c78abc10f4967456af9b7d8be9f4d954f344758e88b9",
          "md5": "d0d7e8b11a539c12625ce9a52163eeb2",
          "sha256": "bd5cbf74dfd745a76a02c114bdcd5895833bc5c1a3d96d96198391ef796316e8"
        },
        "downloads": -1,
        "filename": "chcko-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d0d7e8b11a539c12625ce9a52163eeb2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 144721,
        "upload_time": "2020-02-18T22:29:55",
        "upload_time_iso_8601": "2020-02-18T22:29:55.963213Z",
        "url": "https://files.pythonhosted.org/packages/58/e4/4cce442d372b1e24c78abc10f4967456af9b7d8be9f4d954f344758e88b9/chcko-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ac9781e4abe3507c37a1d8d94058a14ffa2f2a48028f2b5b16a01043677b0f0d",
          "md5": "682ba20f438cc9e105391a76b4108cec",
          "sha256": "a0736c6cac36e8f84ea926e24817ee316090324cedcc5f0de173df80eae3f4c5"
        },
        "downloads": -1,
        "filename": "chcko-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "682ba20f438cc9e105391a76b4108cec",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 242020,
        "upload_time": "2020-02-18T23:06:22",
        "upload_time_iso_8601": "2020-02-18T23:06:22.754417Z",
        "url": "https://files.pythonhosted.org/packages/ac/97/81e4abe3507c37a1d8d94058a14ffa2f2a48028f2b5b16a01043677b0f0d/chcko-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba4401191e70439df631ffec1c4d88b85ea83d6fd0ada5cb6253161ec9c2ee35",
          "md5": "598384005414ba9d96959840aaa5abd7",
          "sha256": "c64d4f40861ae1b891eadb7b2d86e0ba979e17ce00556eb41cbc252c748ef7b4"
        },
        "downloads": -1,
        "filename": "chcko-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "598384005414ba9d96959840aaa5abd7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 144547,
        "upload_time": "2020-02-21T22:39:55",
        "upload_time_iso_8601": "2020-02-21T22:39:55.793995Z",
        "url": "https://files.pythonhosted.org/packages/ba/44/01191e70439df631ffec1c4d88b85ea83d6fd0ada5cb6253161ec9c2ee35/chcko-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "864040b8bb72096a1981cce2c9c79ef1235f21b589e86105e2a29871e0cd4ae2",
          "md5": "03d48589a406a8191482b5ec47101c0c",
          "sha256": "9a66780d842196ee7e764ae7913dc5d479e7bdbfc7f4f8a5e71e1a08b0bceb5a"
        },
        "downloads": -1,
        "filename": "chcko-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "03d48589a406a8191482b5ec47101c0c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 146287,
        "upload_time": "2020-02-24T18:42:06",
        "upload_time_iso_8601": "2020-02-24T18:42:06.099799Z",
        "url": "https://files.pythonhosted.org/packages/86/40/40b8bb72096a1981cce2c9c79ef1235f21b589e86105e2a29871e0cd4ae2/chcko-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7efbad0a5ff29a6f345df001e33a2f24b6758ef9b316fa67b58a5215f822862a",
          "md5": "eba2655ec87709474a5c60fa869118b3",
          "sha256": "8a0f50dd7e1e742eae07c88425cc15861c79f444202ed17bd2789bf72edf30d6"
        },
        "downloads": -1,
        "filename": "chcko-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eba2655ec87709474a5c60fa869118b3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 148775,
        "upload_time": "2020-03-01T18:50:23",
        "upload_time_iso_8601": "2020-03-01T18:50:23.735285Z",
        "url": "https://files.pythonhosted.org/packages/7e/fb/ad0a5ff29a6f345df001e33a2f24b6758ef9b316fa67b58a5215f822862a/chcko-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9575dfddf608d23ad7f0ea4b7cbf9c51e8a2632f80960914eb3dc1cb96483ecd",
          "md5": "c8e21539a49296a574c5770d1cbe624b",
          "sha256": "08868ed806d15dc9c7dd844d8186104f83d88792288aa3cb06103b7419dc44be"
        },
        "downloads": -1,
        "filename": "chcko-0.1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c8e21539a49296a574c5770d1cbe624b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 148979,
        "upload_time": "2020-03-03T22:22:09",
        "upload_time_iso_8601": "2020-03-03T22:22:09.304832Z",
        "url": "https://files.pythonhosted.org/packages/95/75/dfddf608d23ad7f0ea4b7cbf9c51e8a2632f80960914eb3dc1cb96483ecd/chcko-0.1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "85fe1ed2532a81d9f4a7b5eef44125eea1f9e6e689fe942fbbc5ec6c14a44ead",
          "md5": "23ab23aea59dcd41e8bdea14ca03c36d",
          "sha256": "d7d8b35cf84ed1ee167d7da66ad28d62212e7713803a0fbdc7eb6b98c4321970"
        },
        "downloads": -1,
        "filename": "chcko-0.1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "23ab23aea59dcd41e8bdea14ca03c36d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 148959,
        "upload_time": "2020-03-18T14:16:13",
        "upload_time_iso_8601": "2020-03-18T14:16:13.873598Z",
        "url": "https://files.pythonhosted.org/packages/85/fe/1ed2532a81d9f4a7b5eef44125eea1f9e6e689fe942fbbc5ec6c14a44ead/chcko-0.1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "69c1be84080a11e02e312cb3d3febeea10070da5f9ba5445d19fc2029781843b",
          "md5": "da7f594dc796644fb268a4d02647af02",
          "sha256": "141ff0241b9ff3171d7bbeddbc47a3269212b65239acad7ca3d0e94f6ac006eb"
        },
        "downloads": -1,
        "filename": "chcko-0.1.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "da7f594dc796644fb268a4d02647af02",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 158832,
        "upload_time": "2020-03-23T11:04:43",
        "upload_time_iso_8601": "2020-03-23T11:04:43.217584Z",
        "url": "https://files.pythonhosted.org/packages/69/c1/be84080a11e02e312cb3d3febeea10070da5f9ba5445d19fc2029781843b/chcko-0.1.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b48a026da06d481c17e5a4c7db0d2e302895be4b6db2449bded22c7f170f2c4",
          "md5": "4247ce39648f7bd0757abb270cbbd1fc",
          "sha256": "828ab8b4af9232e64d136b9da23c4338288e4ded943cf6d1cb0471c875055315"
        },
        "downloads": -1,
        "filename": "chcko-0.1.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4247ce39648f7bd0757abb270cbbd1fc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 159012,
        "upload_time": "2020-03-23T19:38:30",
        "upload_time_iso_8601": "2020-03-23T19:38:30.787633Z",
        "url": "https://files.pythonhosted.org/packages/8b/48/a026da06d481c17e5a4c7db0d2e302895be4b6db2449bded22c7f170f2c4/chcko-0.1.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7b74612cb69545684af4af295d2b148fb30801594c5104395b79e8f4135ff4d8",
          "md5": "15eba60734ad9a92a0129af72ad32fa9",
          "sha256": "56e2a8c86d1b15b56836603ed7cfc2e248bca297134f10033e86fc0397c15b48"
        },
        "downloads": -1,
        "filename": "chcko-0.1.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "15eba60734ad9a92a0129af72ad32fa9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 161200,
        "upload_time": "2020-04-01T21:17:56",
        "upload_time_iso_8601": "2020-04-01T21:17:56.423665Z",
        "url": "https://files.pythonhosted.org/packages/7b/74/612cb69545684af4af295d2b148fb30801594c5104395b79e8f4135ff4d8/chcko-0.1.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d72231fbf86858741cfb01f26e3f1c5afcb8c6a6b8af2cbbf6e996dd90b6574b",
          "md5": "4f096c5e3d9b79e1d89fab6e2ec1d198",
          "sha256": "668e028cd6d60d159e7cf79189357e7494fe80ea8bfc1f6af6b52a3484b54ec5"
        },
        "downloads": -1,
        "filename": "chcko-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4f096c5e3d9b79e1d89fab6e2ec1d198",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 161914,
        "upload_time": "2020-04-04T21:58:00",
        "upload_time_iso_8601": "2020-04-04T21:58:00.559450Z",
        "url": "https://files.pythonhosted.org/packages/d7/22/31fbf86858741cfb01f26e3f1c5afcb8c6a6b8af2cbbf6e996dd90b6574b/chcko-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fef5382e9b388c5cdd72e2467a62487b68afbb87af1e900b97e4ce26c6e6d341",
          "md5": "fd14a19afa502a64d0e69f5c4a7bfd00",
          "sha256": "3e5e7effd8e801508f43ae56fbc641c795ede072d2640afa66288182ef687345"
        },
        "downloads": -1,
        "filename": "chcko-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fd14a19afa502a64d0e69f5c4a7bfd00",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 161927,
        "upload_time": "2020-04-05T09:28:31",
        "upload_time_iso_8601": "2020-04-05T09:28:31.730115Z",
        "url": "https://files.pythonhosted.org/packages/fe/f5/382e9b388c5cdd72e2467a62487b68afbb87af1e900b97e4ce26c6e6d341/chcko-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf456aa764d17a6030d3b3ac33a67a32cc847de4b39dd7372314653141f08541",
          "md5": "540f4f0c52d66aa01739092c662c8b4c",
          "sha256": "0b59aad239a09e601a22ad4b4a0301c3107fc916cfbd7d997fc5eab83f57ba66"
        },
        "downloads": -1,
        "filename": "chcko-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "540f4f0c52d66aa01739092c662c8b4c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 161039,
        "upload_time": "2020-04-06T15:10:07",
        "upload_time_iso_8601": "2020-04-06T15:10:07.846099Z",
        "url": "https://files.pythonhosted.org/packages/bf/45/6aa764d17a6030d3b3ac33a67a32cc847de4b39dd7372314653141f08541/chcko-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b957354b4f7fb0358cdc75ba5a3c14f38bf1d887bdc8274b57da993a4a954c49",
          "md5": "c5a4c5882c1fa9d29f721366313b8006",
          "sha256": "9c890196a325c93d7daf9196da298cf951678e8478529f779f899d94589adc16"
        },
        "downloads": -1,
        "filename": "chcko-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c5a4c5882c1fa9d29f721366313b8006",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 162767,
        "upload_time": "2020-04-09T15:31:43",
        "upload_time_iso_8601": "2020-04-09T15:31:43.164315Z",
        "url": "https://files.pythonhosted.org/packages/b9/57/354b4f7fb0358cdc75ba5a3c14f38bf1d887bdc8274b57da993a4a954c49/chcko-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0a84e764a969f0c231d6142aa4f5b78f5afb27aefd314b251a4ecc35d5100aae",
          "md5": "ea400feb41b69204f2fb4d09d93d44ac",
          "sha256": "886cd62d4a068743daacdc68f12f7bb33fd9dba7bce0a05cc3cd3056106bdf7e"
        },
        "downloads": -1,
        "filename": "chcko-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ea400feb41b69204f2fb4d09d93d44ac",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 163112,
        "upload_time": "2020-04-10T20:30:46",
        "upload_time_iso_8601": "2020-04-10T20:30:46.537554Z",
        "url": "https://files.pythonhosted.org/packages/0a/84/e764a969f0c231d6142aa4f5b78f5afb27aefd314b251a4ecc35d5100aae/chcko-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b53bb32f865b12cd8436612ee45eebe37918427c13eda2008ae00dcd903f70bb",
          "md5": "31321f3dff9c99e5f9373491e12e977c",
          "sha256": "d441fc3fe1623cd7f70b10332a559b054cbdad0fadeabe63736061639a4e8743"
        },
        "downloads": -1,
        "filename": "chcko-1.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "31321f3dff9c99e5f9373491e12e977c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 163290,
        "upload_time": "2020-04-14T13:43:56",
        "upload_time_iso_8601": "2020-04-14T13:43:56.305948Z",
        "url": "https://files.pythonhosted.org/packages/b5/3b/b32f865b12cd8436612ee45eebe37918427c13eda2008ae00dcd903f70bb/chcko-1.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d6731d3240dc9e9487bedd63a6ee060851fad1f4c533bd3dd4ff34b15b70dcd0",
          "md5": "d394834e208efdd7b657b46061e35520",
          "sha256": "61c65b2b3f9bc17e50ebb2013a822049febc4a14fc0917689d43f3091d3f120b"
        },
        "downloads": -1,
        "filename": "chcko-1.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d394834e208efdd7b657b46061e35520",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 163112,
        "upload_time": "2020-04-16T07:39:43",
        "upload_time_iso_8601": "2020-04-16T07:39:43.505630Z",
        "url": "https://files.pythonhosted.org/packages/d6/73/1d3240dc9e9487bedd63a6ee060851fad1f4c533bd3dd4ff34b15b70dcd0/chcko-1.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eb8096c42b1dcbb50c04ab0b09e63e34cdf80352a2cbe421c05fb597cf98fb94",
          "md5": "ca73d4cc59343d6c9f5da09a5a970f43",
          "sha256": "34a8b69e3113b75817e58ec8415acd2946c8aeee1e50eb82c96ec3ae32fe5372"
        },
        "downloads": -1,
        "filename": "chcko-1.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ca73d4cc59343d6c9f5da09a5a970f43",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 164101,
        "upload_time": "2020-04-17T09:56:12",
        "upload_time_iso_8601": "2020-04-17T09:56:12.749432Z",
        "url": "https://files.pythonhosted.org/packages/eb/80/96c42b1dcbb50c04ab0b09e63e34cdf80352a2cbe421c05fb597cf98fb94/chcko-1.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0d05095ca5174965ad69e919f20ae9c086a5fec73377b4b54cb574e673d7131f",
          "md5": "897d246dd2edf9c2ec8e8fd4ad4ef450",
          "sha256": "d8b81349cfe1dd8856551bb39b0534431ecba79c2e676246fd26d6fa34cc4b8c"
        },
        "downloads": -1,
        "filename": "chcko-1.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "897d246dd2edf9c2ec8e8fd4ad4ef450",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 164159,
        "upload_time": "2020-04-20T19:58:48",
        "upload_time_iso_8601": "2020-04-20T19:58:48.368388Z",
        "url": "https://files.pythonhosted.org/packages/0d/05/095ca5174965ad69e919f20ae9c086a5fec73377b4b54cb574e673d7131f/chcko-1.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "03cd2cc0eea357fec2ec1a30b81c00c0e6742c9db61a7ae7b5591a5005aacc81",
          "md5": "3af49172041f4d3bf54200e10e5c8b3b",
          "sha256": "6866f4467bb2c1adf61e05e46a5de37efaa5f1293893ffe9dc9ff7f7644114de"
        },
        "downloads": -1,
        "filename": "chcko-1.3.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3af49172041f4d3bf54200e10e5c8b3b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 164851,
        "upload_time": "2020-12-31T14:47:49",
        "upload_time_iso_8601": "2020-12-31T14:47:49.108036Z",
        "url": "https://files.pythonhosted.org/packages/03/cd/2cc0eea357fec2ec1a30b81c00c0e6742c9db61a7ae7b5591a5005aacc81/chcko-1.3.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "03cd2cc0eea357fec2ec1a30b81c00c0e6742c9db61a7ae7b5591a5005aacc81",
        "md5": "3af49172041f4d3bf54200e10e5c8b3b",
        "sha256": "6866f4467bb2c1adf61e05e46a5de37efaa5f1293893ffe9dc9ff7f7644114de"
      },
      "downloads": -1,
      "filename": "chcko-1.3.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3af49172041f4d3bf54200e10e5c8b3b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 164851,
      "upload_time": "2020-12-31T14:47:49",
      "upload_time_iso_8601": "2020-12-31T14:47:49.108036Z",
      "url": "https://files.pythonhosted.org/packages/03/cd/2cc0eea357fec2ec1a30b81c00c0e6742c9db61a7ae7b5591a5005aacc81/chcko-1.3.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}