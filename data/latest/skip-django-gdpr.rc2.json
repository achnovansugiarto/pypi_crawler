{
  "info": {
    "author": "Druids",
    "author_email": "matllubos@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Framework :: Django",
      "Framework :: Django :: 1.10",
      "Framework :: Django :: 1.11",
      "Framework :: Django :: 2.0",
      "Framework :: Django :: 2.1",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "# Django-GDPR [![Build Status](https://travis-ci.org/BrnoPCmaniak/django-GDPR.svg?branch=develop)](https://travis-ci.org/BrnoPCmaniak/django-GDPR)\n\nThis library enables you to store user's consent for data retention easily\nand to anonymize/deanonymize user's data accordingly.\n\nFor brief overview you can check example app in `tests` directory.\n\n# Quickstart\n\nInstall django-gdpr with pip:\n\n```bash\npip install skip-django-gdpr\n```\n\nAdd gdpr to your `INSTALLED_APPS`:\n\n```python\nINSTALLED_APPS = [\n    # Django apps...\n    'gdpr',\n]\n```\n\nImagine having a customer model:\n\n```python\n# app/models.py\n\nfrom django.db import models\n\nfrom gdpr.mixins import AnonymizationModel\n\nclass Customer(AnonymizationModel):\n    # these fields will be used as basic keys for pseudoanonymization\n    first_name = models.CharField(max_length=256)\n    last_name = models.CharField(max_length=256)\n\n    birth_date = models.DateField(blank=True, null=True)\n    personal_id = models.CharField(max_length=10, blank=True, null=True)\n    phone_number = models.CharField(max_length=9, blank=True, null=True)\n    fb_id = models.CharField(max_length=256, blank=True, null=True)\n    last_login_ip = models.GenericIPAddressField(blank=True, null=True)\n```\n\nYou may want a consent to store all user's data for two years and consent to store first and last name for 10 years.\nFor that you can simply add new consent purposes like this.\n\n```python\n# app/purposes.py\n\nfrom dateutil.relativedelta import relativedelta\n\nfrom gdpr.purposes.default import AbstractPurpose\n\nGENERAL_PURPOSE_SLUG = \"general\"\nFIRST_AND_LAST_NAME_SLUG = \"first_and_last\"\n\nclass GeneralPurpose(AbstractPurpose):\n    name = \"Retain user data for 2 years\"\n    slug = GENERAL_PURPOSE_SLUG\n    expiration_timedelta = relativedelta(years=2)\n    fields = \"__ALL__\"  # Anonymize all fields defined in anonymizer\n\nclass FirstAndLastNamePurpose(AbstractPurpose):\n    \"\"\"Store First & Last name for 10 years.\"\"\"\n    name = \"retain due to internet archive\"\n    slug = FIRST_AND_LAST_NAME_SLUG\n    expiration_timedelta = relativedelta(years=10)\n    fields = (\"first_name\", \"last_name\")\n```\n\nThe field `fields` specify to which fields this consent applies to.\n\nSome more examples:\n```python\nfields = (\"first_name\", \"last_name\") # Anonymize only two fields\n\n# You can also add nested fields to anonymize fields on related objects.\nfields = (\n    \"primary_email_address\",\n    (\"emails\", (\n        \"email\",\n    )),\n)\n\n# Some more advanced configs may look like this:\nfields = (\n    \"__ALL__\",\n    (\"addresses\", \"__ALL__\"),\n    (\"accounts\", (\n        \"__ALL__\",\n        (\"payments\", (\n            \"__ALL__\",\n        ))\n    )),\n    (\"emails\", (\n        \"email\",\n    )),\n)\n\n```\n\nNow when we have the purpose(s) created we also have to make an _anonymizer_ so the library knows which fields to\nanonymize and how. This is fairly simple and is quite similar to Django forms.\n\n```python\n# app/anonymizers.py\n\nfrom gdpr import anonymizers\nfrom tests.models import Customer\n\n\nclass CustomerAnonymizer(anonymizers.ModelAnonymizer):\n    first_name = anonymizers.MD5TextFieldAnonymizer()\n    last_name = anonymizers.MD5TextFieldAnonymizer()\n    primary_email_address = anonymizers.EmailFieldAnonymizer()\n\n    birth_date = anonymizers.DateFieldAnonymizer()\n    personal_id = anonymizers.PersonalIIDFieldAnonymizer()\n    phone_number = anonymizers.PhoneFieldAnonymizer()\n    fb_id = anonymizers.CharFieldAnonymizer()\n    last_login_ip = anonymizers.IPAddressFieldAnonymizer()\n\n    class Meta:\n        model = Customer\n```\n\nNow you can fully leverage the system:\n\nYou can create/revoke consent:\n```python\nfrom gdpr.models import LegalReason\n\nfrom tests.models import Customer\nfrom tests.purposes import FIRST_AND_LAST_NAME_SLUG\n\n\ncustomer = Customer(first_name=\"John\", last_name=\"Smith\")\ncustomer.save()\n\n# Create consent\nLegalReason.objects.create_consent(FIRST_AND_LAST_NAME_SLUG, customer)\n\n# And now you can revoke it\nLegalReason.objects.deactivate_consent(FIRST_AND_LAST_NAME_SLUG, customer)\n```\n\nIn case your model uses the `AnonymizationModelMixin` or `AnonymizationModel` you can create and revoke consents even\neasier.\n```python\nfrom tests.models import Customer\nfrom tests.purposes import FIRST_AND_LAST_NAME_SLUG\n\n\ncustomer = Customer(first_name=\"John\", last_name=\"Smith\")\ncustomer.save()\n\n# Create consent\ncustomer.create_consent(FIRST_AND_LAST_NAME_SLUG)\n\n# And now you can revoke it\ncustomer.deactivate_consent(FIRST_AND_LAST_NAME_SLUG)\n```\n\n\nExpired consents are revoked by running the following command. You should invoke it repeatedly, for example by cron.\nThe invocation interval depends on your circumstances - how fast you want to expire consents after their revocation,\nthe amount of consents to expire in the interval, server load, and last but not least, legal requirements.\n\n```python\nfrom gdpr.models import LegalReason\n\nLegalReason.objects.expire_old_consents()\n```\n\n## FieldAnonymizers\n\n* `FunctionAnonymizer` - in place lambda/function anonymization method (e.g. `secret_code = anonymizers.FunctionFieldAnonymizer(lambda x: x**2)`)\n* `DateFieldAnonymizer`\n* `CharFieldAnonymizer`\n* `DecimalFieldAnonymizer`\n* `IPAddressFieldAnonymizer`\n* `CzechAccountNumberFieldAnonymizer` - for czech bank account numbers\n* `IBANFieldAnonymizer`\n* `JSONFieldAnonymizer`\n* `EmailFieldAnonymizer`\n* `MD5TextFieldAnonymizer`\n* `SHA256TextFieldAnonymizer`\n* `HashTextFieldAnonymizer` - anonymization using given hash algorithm (e.g. `secret_code = anonymizers.HashTextFieldAnonymizer('sha512')`)\n* `StaticValueFieldAnonymizer` - anonymization by replacing with static value (e.g. `secret_code = anonymizers.StaticValueFieldAnonymizer(42)`)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/skip-pay/django-GDPR",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "skip-django-GDPR",
    "package_url": "https://pypi.org/project/skip-django-GDPR/",
    "platform": null,
    "project_url": "https://pypi.org/project/skip-django-GDPR/",
    "project_urls": {
      "Homepage": "https://github.com/skip-pay/django-GDPR"
    },
    "release_url": "https://pypi.org/project/skip-django-GDPR/0.2.23.2/",
    "requires_dist": [
      "django (<4.0,>=2.2)",
      "skip-django-chamber (>=0.6.16.3)",
      "tqdm (>=4.28.1)",
      "pyaes (>=1.6.1)",
      "unidecode",
      "skip-django-choice-enumfields (>=1.1.3.2)"
    ],
    "requires_python": "",
    "summary": "Library for GDPR implementation",
    "version": "0.2.23.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16460055,
  "releases": {
    "0.2.23.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d3868e86d3602701c4ec08c994c303a9aaffc2514997be53d60c6a6ea7fc6a94",
          "md5": "d161abf916acac43e43bfb7123c286f3",
          "sha256": "92ff5d1946ec794e1f820c4dccbbf17a349b3b64d7d7658b3d17709d99db702b"
        },
        "downloads": -1,
        "filename": "skip_django_GDPR-0.2.23.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d161abf916acac43e43bfb7123c286f3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 73181,
        "upload_time": "2023-01-16T12:22:27",
        "upload_time_iso_8601": "2023-01-16T12:22:27.002269Z",
        "url": "https://files.pythonhosted.org/packages/d3/86/8e86d3602701c4ec08c994c303a9aaffc2514997be53d60c6a6ea7fc6a94/skip_django_GDPR-0.2.23.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dfefc031d614891d326879c71c98aa9b369e16a8f0bbd31f392feb9a9469424d",
          "md5": "0ed5505bbb4d2a30b710c5ccec85e2c3",
          "sha256": "493b99fa07cf6ea02cd74ef1da553aeeda60b750ea271ba446cbae95b611b287"
        },
        "downloads": -1,
        "filename": "skip-django-GDPR-0.2.23.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0ed5505bbb4d2a30b710c5ccec85e2c3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 54881,
        "upload_time": "2023-01-16T12:22:28",
        "upload_time_iso_8601": "2023-01-16T12:22:28.472689Z",
        "url": "https://files.pythonhosted.org/packages/df/ef/c031d614891d326879c71c98aa9b369e16a8f0bbd31f392feb9a9469424d/skip-django-GDPR-0.2.23.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.23.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7cb480a951ba04dadb96b99bae7a95a8aec40e7ad7a46f4c211d990dcf26e6a0",
          "md5": "4a162ed9843eabe7690ca2246840a396",
          "sha256": "a0146bd208947c2144d1dd3201c0708ec77b0d31458eaacf08d6674b22c36c52"
        },
        "downloads": -1,
        "filename": "skip_django_GDPR-0.2.23.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4a162ed9843eabe7690ca2246840a396",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 73185,
        "upload_time": "2023-01-17T15:58:25",
        "upload_time_iso_8601": "2023-01-17T15:58:25.669037Z",
        "url": "https://files.pythonhosted.org/packages/7c/b4/80a951ba04dadb96b99bae7a95a8aec40e7ad7a46f4c211d990dcf26e6a0/skip_django_GDPR-0.2.23.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "414ad93231b171fecf68e94c6749070cd3703f1622aae41a47073b25561acc6c",
          "md5": "2d028040409672ec61e20c78da322b80",
          "sha256": "f91179b62591109311adb1e044455794f7239c566d02dd53087b63984d76fe01"
        },
        "downloads": -1,
        "filename": "skip-django-GDPR-0.2.23.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2d028040409672ec61e20c78da322b80",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 54878,
        "upload_time": "2023-01-17T15:58:27",
        "upload_time_iso_8601": "2023-01-17T15:58:27.391668Z",
        "url": "https://files.pythonhosted.org/packages/41/4a/d93231b171fecf68e94c6749070cd3703f1622aae41a47073b25561acc6c/skip-django-GDPR-0.2.23.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7cb480a951ba04dadb96b99bae7a95a8aec40e7ad7a46f4c211d990dcf26e6a0",
        "md5": "4a162ed9843eabe7690ca2246840a396",
        "sha256": "a0146bd208947c2144d1dd3201c0708ec77b0d31458eaacf08d6674b22c36c52"
      },
      "downloads": -1,
      "filename": "skip_django_GDPR-0.2.23.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4a162ed9843eabe7690ca2246840a396",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 73185,
      "upload_time": "2023-01-17T15:58:25",
      "upload_time_iso_8601": "2023-01-17T15:58:25.669037Z",
      "url": "https://files.pythonhosted.org/packages/7c/b4/80a951ba04dadb96b99bae7a95a8aec40e7ad7a46f4c211d990dcf26e6a0/skip_django_GDPR-0.2.23.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "414ad93231b171fecf68e94c6749070cd3703f1622aae41a47073b25561acc6c",
        "md5": "2d028040409672ec61e20c78da322b80",
        "sha256": "f91179b62591109311adb1e044455794f7239c566d02dd53087b63984d76fe01"
      },
      "downloads": -1,
      "filename": "skip-django-GDPR-0.2.23.2.tar.gz",
      "has_sig": false,
      "md5_digest": "2d028040409672ec61e20c78da322b80",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 54878,
      "upload_time": "2023-01-17T15:58:27",
      "upload_time_iso_8601": "2023-01-17T15:58:27.391668Z",
      "url": "https://files.pythonhosted.org/packages/41/4a/d93231b171fecf68e94c6749070cd3703f1622aae41a47073b25561acc6c/skip-django-GDPR-0.2.23.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}