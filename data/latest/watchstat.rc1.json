{
  "info": {
    "author": "Fritz Reese",
    "author_email": "fritzoreese@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: System :: Shells",
      "Topic :: Utilities"
    ],
    "description": "# watchstat\n\nExecute a command whenever a file's status changes.\n\n## Installation\n\nMay be installed via `pip install watchstat`.\n\n## Usage\n\n```\nusage: __main__.py [-h] [-v] [-m PATH] [-a PATH] [-c PATH] [-d PATH] [-i PATH]\n                   [-M PATH] [-n PATH] [-u PATH] [-g PATH] [-s PATH] [-0]\n                   [-l N] [-t N] [--timeout N] [--softtimeout N] [-f] [-r]\n                   [-I DELIM]\n                   command [args [args ...]]\n\nExecute a command whenever a file's status changes.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -v, --verbose         Echo to stderr whenever the trigger is hit.\n                        Repeatable.\n\nStatus fields:\n  -m PATH, --mtime PATH\n                        Watch PATH for modification time\n  -a PATH, --atime PATH\n                        Watch PATH for access time\n  -c PATH, --ctime PATH\n                        Watch PATH for status time\n  -d PATH, --dev PATH   Watch PATH for device ID\n  -i PATH, --ino PATH   Watch PATH for inode number\n  -M PATH, --mode PATH  Watch PATH for protection mode\n  -n PATH, --nlink PATH\n                        Watch PATH for number of hard links\n  -u PATH, --uid PATH   Watch PATH for user ID of owner\n  -g PATH, --gid PATH   Watch PATH for group ID of owner\n  -s PATH, --size PATH  Watch PATH for total size\n\nGeneral options:\n  -0, --initial-run     Run the command once after the first stat. This does\n                        not count towards the number of runs counted by -l.\n                        The command is run once for each monitored path.\n  -l N, --limit N       Limit to N runs of command. 0 means no limit. Default\n                        1.\n  -t N, --interval N    Poll the status every N milliseconds (default 1000).\n  --timeout N           Exit (code 0) after N seconds.\n  --softtimeout N       Exit (code 3) after N seconds if the command has not\n                        been run.\n  -f, --force           Keep watching even if command fails. Implies -r and\n                        -l0.\n  -r, --retry           Keep watching even if file does not exist yet.\n  -I DELIM, --interp DELIM\n                        Interpolate command args by replacing DELIM|X|DELIM\n                        with values from the file's stat results. X is a short\n                        or long option name from 'Status fields' above, or the\n                        keyword 'path' to substitute the (real) path of the\n                        triggering file.\n\nPositional arguments:\n  command               Command to run when status changes.\n  args                  Args passed to command. Interpreted specially with -I.\n```\n\n## Examples\n\nExamples are shown using `bash` syntax to perform different behaviors based on\nthe exit status of `watchstat`.\n\n* Re-compile a file whenever it is changed:\n\n  ```sh\n  watchstat --force -m test.c -- gcc -Wall -pedantic test.c -o test\n  ```\n\n  By default, `watchstat` cancels if the command fails, so to continue even\n  after a compile error we use `--force` (`-f`) which implies `--retry` and\n  `-limit=0` (retry forever). To exit `watchstat` gracefully, issue an interrupt\n  with Ctrl+C.\n\n* Compile a file if it changes in the next 5 seconds:\n\n  ```sh\n  if ! watchstat -m test.c --timeout 5 -- gcc test.c -o test 2>/dev/null; then\n    echo \"compile errors detected\"\n  fi\n  ```\n\n  - If the file does not change within 5 seconds, nothing is done.\n  - If the file does change, the gcc command is run.\n  - If the file changes and gcc runs but fails, \"compile errors detected\"\n    is echoed.\n\n* Echo whether a file changes in the next five seconds:\n\n  ```sh\n  if ! watchstat -m test.c --softtimeout 5 echo \"File updated\"; then\n    echo \"Timed out\"\n  fi\n  ```\n\n  - If the file is changed in the next 5 seconds, echoes \"File updated\".\n  - If the file is not changed in the next 5 seconds, echoes \"Timed out\".\n\n* Display the contents of a file when it is created:\n\n  ```sh\n  watchstat --retry -c pid.txt cat pid.txt\n  ```\n\n  Without `--retry` (`-r`), `watchstat` would fail if the file doesn't exist\n  after the first poll time interval.\n\n* A more descriptive echo when the file size changes using interpolation:\n\n  ```sh\n  $ watchstat -r -0 -s resizeme.txt -I% echo \"Size of %path% is %size% bytes\"\n  Size of /home/user/resizeme.txt is 0 bytes\n  Size of /home/user/resizeme.txt is 118 bytes\n  ```\n\n  With `--initial-run` (`-0`), the message is also displayed *now*\n  (as soon as `watchstat` runs).\n\n* Note a pretty mtime every time a file changes using shell constructs,\n  with a poll time of only 5 seconds:\n\n  ```sh\n  $ watchstat -l0 -t5000 -m README.md -IX \\\n    -- bash -c date -r \"XpathX\" +\"$(basename XpathX) changed at %F-%T.%N\"\n  README.md changed at 2021-03-19-13:53:15.791771219\n  README.md changed at 2021-03-19-13:53:32.801771159\n  ```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/fritzr/watchstat",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "watchstat",
    "package_url": "https://pypi.org/project/watchstat/",
    "platform": "",
    "project_url": "https://pypi.org/project/watchstat/",
    "project_urls": {
      "Homepage": "https://github.com/fritzr/watchstat",
      "Issues": "https://github.com/fritzr/watchstat/issues"
    },
    "release_url": "https://pypi.org/project/watchstat/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=2.7",
    "summary": "Execute a command whenever a file's status changes",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9823281,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "41166406f1ea407f27eb788e4196e254fa263c4c47587e9bd9287ef992569a9b",
          "md5": "4526a0a0f5e9e96f29504918f0b99f4a",
          "sha256": "9c1663cded39d6b1fc2a95229dc4de0c81d50dda56ab2c4ea5bb912c16d76fb1"
        },
        "downloads": -1,
        "filename": "watchstat-1.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4526a0a0f5e9e96f29504918f0b99f4a",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=2.7",
        "size": 9240,
        "upload_time": "2021-03-19T18:22:37",
        "upload_time_iso_8601": "2021-03-19T18:22:37.875334Z",
        "url": "https://files.pythonhosted.org/packages/41/16/6406f1ea407f27eb788e4196e254fa263c4c47587e9bd9287ef992569a9b/watchstat-1.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9ec891bb38d192c6cf05baafd4e5f656a322c3ad2a372a43747e76c382e70930",
          "md5": "72f7c8347de754695651e110cb3086e9",
          "sha256": "21ea466de2f1c377ee3a14db0957bf49218414f692ae9b0163d8af172c7595e5"
        },
        "downloads": -1,
        "filename": "watchstat-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "72f7c8347de754695651e110cb3086e9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 8434,
        "upload_time": "2021-03-19T18:22:38",
        "upload_time_iso_8601": "2021-03-19T18:22:38.804582Z",
        "url": "https://files.pythonhosted.org/packages/9e/c8/91bb38d192c6cf05baafd4e5f656a322c3ad2a372a43747e76c382e70930/watchstat-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "41166406f1ea407f27eb788e4196e254fa263c4c47587e9bd9287ef992569a9b",
        "md5": "4526a0a0f5e9e96f29504918f0b99f4a",
        "sha256": "9c1663cded39d6b1fc2a95229dc4de0c81d50dda56ab2c4ea5bb912c16d76fb1"
      },
      "downloads": -1,
      "filename": "watchstat-1.0.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4526a0a0f5e9e96f29504918f0b99f4a",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=2.7",
      "size": 9240,
      "upload_time": "2021-03-19T18:22:37",
      "upload_time_iso_8601": "2021-03-19T18:22:37.875334Z",
      "url": "https://files.pythonhosted.org/packages/41/16/6406f1ea407f27eb788e4196e254fa263c4c47587e9bd9287ef992569a9b/watchstat-1.0.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9ec891bb38d192c6cf05baafd4e5f656a322c3ad2a372a43747e76c382e70930",
        "md5": "72f7c8347de754695651e110cb3086e9",
        "sha256": "21ea466de2f1c377ee3a14db0957bf49218414f692ae9b0163d8af172c7595e5"
      },
      "downloads": -1,
      "filename": "watchstat-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "72f7c8347de754695651e110cb3086e9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=2.7",
      "size": 8434,
      "upload_time": "2021-03-19T18:22:38",
      "upload_time_iso_8601": "2021-03-19T18:22:38.804582Z",
      "url": "https://files.pythonhosted.org/packages/9e/c8/91bb38d192c6cf05baafd4e5f656a322c3ad2a372a43747e76c382e70930/watchstat-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}