{
  "info": {
    "author": "Jose Lucas",
    "author_email": "zecojls@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Google Earth Engine (GEE) is a high-performance cloud-based platform for processing geospatial data.\n\nThere is a myriad of processing toolboxes in GEE, but this repository/package aims to contribute to the GEE community for making terrain analysis seamlessly. \n\n# Installation\nTerrain Analysis in Google Earth Engine (TAGEE) is a repository that contains the GEE Javascript code and a Python API implementation with reproducible examples for both.\n\nYou can use TAGEE in the Earth Engine code editor with a `require` statement.\n```javascript\nvar TAGEE = require('users/joselucassafanelli/TAGEE:TAGEE-functions');\n```\nOr install the Python package from pip:\n```\npip install tagee\n```\n\nAdditional examples information are below.\n\n# Feature Overview\nAvailable terrain attributes:\n\n| Attribute            | Unit          | Description                                             |\n|----------------------|---------------|---------------------------------------------------------|\n| Elevation            | meter         | Height of terrain above sea level                       |\n| Slope                | degree        | Slope gradient                                          |\n| Aspect               | degree        | Compass direction                                       |\n| Hillshade            | dimensionless | Brightness of the illuminated terrain                   |\n| Northness            | dimensionless | Degree of orientation to North                          |\n| Eastness             | dimensionless | Degree of orientation to East                           |\n| Horizontal curvature | meter         | Curvature tangent to the contour line                   |\n| Vertical curvature   | meter         | Curvature tangent to the slope line                     |\n| Mean curvature       | meter         | Half-sum of the two orthogonal curvatures               |\n| Minimal curvature    | meter         | Lowest value of curvature                               |\n| Maximal curvature    | meter         | Highest value of curvature                              |\n| Gaussian curvature   | meter         | Product of maximal and minimal curvatures               |\n| Shape Index          | dimensionless | Continuous form of the Gaussian landform classification |\n\nThe users are referred to Florinsky (2016) for mathematical concepts of geomorphometry, a historical overview of the progress of digital terrain modelling, and the notion of the topographic surface and its limitations.\n\n> Florinsky, Igor. Digital terrain analysis in soil science and geology. Academic Press, 2016.\n\nPlease, cite the following paper when using TAGEE:\n\n> Safanelli, J.L.; Poppiel, R.R.; Ruiz, L.F.C.; Bonfatti, B.R.; Mello, F.A.O.; Rizzo, R.; DemattÃª, J.A.M. Terrain Analysis in Google Earth Engine: A Method Adapted for High-Performance Global-Scale Analysis. ISPRS Int. J. Geo-Inf. 2020, 9, 400. DOI: [https://doi.org/10.3390/ijgi9060400](https://doi.org/10.3390/ijgi9060400)\n\n## Important note!\n\nAs TAGEE uses spheroidal geometries and elevation nodes from a 3x3 moving window to calculate partial derivatives and hence terrain attributes, the visualization of the outputs is affected by the scale, which require the adjustment of the histogram for proper visualization. This happens because GEE produces different pyramids from your data (from the local up to the global scale) and consequently the pixel size changes dynamically, affecting the range of the estimated attribute values. Until you specify your final resolution, say 30m/pixel, the pyramids will dynamically affect the visualization of an output for different visualizaiton scales. You can determine your final resolution by exporting the results to assets and importing back further processing or map composition.\n\n\n# Minimal reproducible example\n\n[OPEN THE EXAMPLE DIRECTLY IN THE GEE CODE EDITOR](https://code.earthengine.google.com/2b1d977d8cb1c96dbf7c6a4d1064ea37).\n\nNOTE: Any Earth Engine user with the above link can use it to view and run the example code. However, you need to login.\n\n## Javascript\n```javascript\n// Importing module\n\nvar TAGEE = require('users/joselucassafanelli/TAGEE:TAGEE-functions');\n\n// World bounding box\n\nvar bbox = ee.Geometry.Rectangle({coords: [-180, -60, 180, 60], geodesic: false});\n\n// Water mask\n\nvar hansen_2016 = ee.Image('UMD/hansen/global_forest_change_2016_v1_4').select('datamask');\nvar hansen_2016_wbodies = hansen_2016.neq(1).eq(0);\nvar waterMask = hansen_2016.updateMask(hansen_2016_wbodies);\n\n// Loading SRTM 30 m\n\nvar demSRTM = ee.Image('USGS/SRTMGL1_003').clip(bbox).rename('DEM');\n\n// Smoothing filter\nvar gaussianFilter = ee.Kernel.gaussian({\n  radius: 3, sigma: 2, units: 'pixels', normalize: true\n});\n\n// Smoothing the DEM with the gaussian kernel.\nvar demSRTM = demSRTM.convolve(gaussianFilter).resample(\"bilinear\");\n\n// Terrain analysis\n\nvar DEMAttributes = TAGEE.terrainAnalysis(TAGEE, demSRTM, bbox).updateMask(waterMask);\nprint(DEMAttributes.bandNames(), 'Parameters of Terrain');\n\n// Visualization\n\nvar vizVC = TAGEE.makeVisualization(DEMAttributes, 'VerticalCurvature', 'level2', bbox, 'rainbow');\nMap.addLayer(vizVC, {}, 'VerticalCurvature');\nMap.setCenter(0,0,2);\n```\n## Example description\n\nIn the Javascript code editor [https://code.earthengine.google.com/](https://code.earthengine.google.com/), it is necessary to import the module **TAGEE-functions**.\n\n```javascript\nvar TAGEE = require('users/joselucassafanelli/TAGEE:TAGEE-functions');\n```\n\nThen, you need to define the bounding box (study region limits) and import the Digital Elevation Model for terrain analysis (e.g. SRTM 30 m).\n\n```javascript\n// World bounding box\n\nvar bbox = ee.Geometry.Rectangle({coords: [-180, -60, 180, 60], geodesic: false});\n\n// Water mask\n\nvar hansen_2016 = ee.Image('UMD/hansen/global_forest_change_2016_v1_4').select('datamask');\nvar hansen_2016_wbodies = hansen_2016.neq(1).eq(0);\nvar waterMask = hansen_2016.updateMask(hansen_2016_wbodies);\n\n// Loading SRTM 30 m\n\nvar demSRTM = ee.Image('USGS/SRTMGL1_003').clip(bbox).rename('DEM');\n\n// Smoothing filter\nvar gaussianFilter = ee.Kernel.gaussian({\n  radius: 3, sigma: 2, units: 'pixels', normalize: true\n});\n\n// Smoothing the DEM with the gaussian kernel.\nvar demSRTM = demSRTM.convolve(gaussianFilter).resample(\"bilinear\");\n```\n\nFinally, you can run the TAGEE module for calculating the terrain attributes.\n\n```javascript\n// Terrain analysis\n\nvar DEMAttributes = TAGEE.terrainAnalysis(TAGEE, demSRTM, bbox).updateMask(waterMask);\nprint(DEMAttributes.bandNames(), 'Parameters of Terrain');\n\nList (13 elements){\n0: Elevation\n1: Slope\n2: Aspect\n3: Hillshade\n4: Northness\n5: Eastness\n6: HorizontalCurvature\n7: VerticalCurvature\n8: MeanCurvature\n9: GaussianCurvature\n10: MinimalCurvature\n11: MaximalCurvature\n12: ShapeIndex}\n```\n\nTAGEE has an additional feature for making the visualization easier and adapated to a dynamic scale (legend), once the pixel distances for the derivatives calculations are influenced by the visualization level. The legend limits are estimated by the 5th and 95th percentiles existing within the bounding box.\n\n```javascript\n// Visualization\n\nvar vizVC = TAGEE.makeVisualization(DEMAttributes, 'VerticalCurvature', 'level2', bbox, 'rainbow');\nMap.addLayer(vizVC, {}, 'VerticalCurvature');\nMap.setCenter(0,0,2);\n```\n\nFor the function `makeVisualization`, you need to specify:\n- Attributes in multiband object\n- Attribute name (string, e.g. 'VerticalCurvature')\n- Visualization level (string, e.g. 'level2')\n- Bounding box object\n- Color pallete (string, e.g. 'rainbow')\n\nThe visualization levels are:\n\n| Visualization level | Pixel resolution (m) |\n|---------------------|----------------------|\n| 'level0'            | 157000               |\n| 'level1'            | 78000                |\n| 'level2'            | 39000                |\n| 'level3'            | 20000                |\n| 'level4'            | 10000                |\n| 'level5'            | 5000                 |\n| 'level6'            | 2000                 |\n| 'level7'            | 1000                 |\n| 'level8'            | 611                  |\n| 'level9'            | 306                  |\n| 'level10'           | 153                  |\n| 'level11'           | 76                   |\n| 'level12'           | 38                   |\n| 'level13'           | 19                   |\n| 'level14'           | 10                   |\n| 'level15'           | 5                    |\n\nAvailable color palettes: 'rainbow', 'inferno', 'cubehelix', 'red2green', 'green2red', 'elevation', 'aspect' and 'hillshade'.\n\n## Python API\nThe Python TAGEE package is implemented very similarly to the JS version.\n\n```python\n# import & initialize the earth engine API\nimport ee\nee.Initialize()\n\n# import relevant function\nfrom tagee import terrainAnalysis\n\n# set up a smoothed DEM\ngaussianFilter = ee.Kernel.gaussian(\n  radius=3, sigma=2, units='pixels', normalize=True\n)\nsrtmSmooth = ee.Image(\"USGS/SRTMGL1_003\").convolve(gaussianFilter).resample(\"bilinear\")\n\n# Calculate terrain metrics over a given geometry. You must provide a geometry\n# in the terrainAnalysis call.\ngeom = ee.FeatureCollection(ee.Geometry.Rectangle(-111, 40, -110.9, 40.1))\nterrainMetrics = terrainAnalysis(srtmSmooth, geom.geometry())\n\n# Summarize the metrics in the geometry\nreduction = terrainMetrics.reduceRegions(\n  geom,\n  ee.Reducer.median()\n)\n\nprint(reduction.getInfo())\n```\n\nFor any request, comment and suggestion, please send me a email (*my github nickname* at gmail.com)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/zecojls/tagee",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tagee",
    "package_url": "https://pypi.org/project/tagee/",
    "platform": "",
    "project_url": "https://pypi.org/project/tagee/",
    "project_urls": {
      "Homepage": "https://github.com/zecojls/tagee"
    },
    "release_url": "https://pypi.org/project/tagee/0.1.0/",
    "requires_dist": [
      "earthengine-api"
    ],
    "requires_python": "",
    "summary": "A suite of terrain analysis tools for Google Earth Engine.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13040376,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba4458ad9d41e2820eb35bbc7857adf9f4b5f3d129b9f595b4b11217259bed60",
          "md5": "c9831cdad0f44eb095c8c48f4aa111b4",
          "sha256": "73a5aba8891c256befe1a45ba13b317f07c88b2b021d2d2148cb31e4dcc7a45e"
        },
        "downloads": -1,
        "filename": "tagee-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c9831cdad0f44eb095c8c48f4aa111b4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 22099,
        "upload_time": "2022-03-01T02:11:55",
        "upload_time_iso_8601": "2022-03-01T02:11:55.123566Z",
        "url": "https://files.pythonhosted.org/packages/ba/44/58ad9d41e2820eb35bbc7857adf9f4b5f3d129b9f595b4b11217259bed60/tagee-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a3e1c7c6134456aa8374ec376cb60aa9c1c247c62c22f3b73eff2037902c501d",
          "md5": "e160516f5beb6d1c2cc146d881f8102e",
          "sha256": "9eb4d5ff7bd9b2b3e0bfddccfdda104a1ef5d2d62c2969e65fb47e12347fa02c"
        },
        "downloads": -1,
        "filename": "tagee-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e160516f5beb6d1c2cc146d881f8102e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 27804,
        "upload_time": "2022-03-01T02:11:57",
        "upload_time_iso_8601": "2022-03-01T02:11:57.003744Z",
        "url": "https://files.pythonhosted.org/packages/a3/e1/c7c6134456aa8374ec376cb60aa9c1c247c62c22f3b73eff2037902c501d/tagee-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ba4458ad9d41e2820eb35bbc7857adf9f4b5f3d129b9f595b4b11217259bed60",
        "md5": "c9831cdad0f44eb095c8c48f4aa111b4",
        "sha256": "73a5aba8891c256befe1a45ba13b317f07c88b2b021d2d2148cb31e4dcc7a45e"
      },
      "downloads": -1,
      "filename": "tagee-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c9831cdad0f44eb095c8c48f4aa111b4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 22099,
      "upload_time": "2022-03-01T02:11:55",
      "upload_time_iso_8601": "2022-03-01T02:11:55.123566Z",
      "url": "https://files.pythonhosted.org/packages/ba/44/58ad9d41e2820eb35bbc7857adf9f4b5f3d129b9f595b4b11217259bed60/tagee-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a3e1c7c6134456aa8374ec376cb60aa9c1c247c62c22f3b73eff2037902c501d",
        "md5": "e160516f5beb6d1c2cc146d881f8102e",
        "sha256": "9eb4d5ff7bd9b2b3e0bfddccfdda104a1ef5d2d62c2969e65fb47e12347fa02c"
      },
      "downloads": -1,
      "filename": "tagee-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e160516f5beb6d1c2cc146d881f8102e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 27804,
      "upload_time": "2022-03-01T02:11:57",
      "upload_time_iso_8601": "2022-03-01T02:11:57.003744Z",
      "url": "https://files.pythonhosted.org/packages/a3/e1/c7c6134456aa8374ec376cb60aa9c1c247c62c22f3b73eff2037902c501d/tagee-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}