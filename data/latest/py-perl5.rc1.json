{
  "info": {
    "author": "Yasunori Fujie",
    "author_email": "fuji@dmgw.net",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# PyPerl5\n\nPyPerl5 is a C-API based binding of perl5.\n\nSupported python versions are 2.7 or 3.6 or higher.\n\n## Installation\n\nThis package required python and perl development packages.\n\n```shell script\n$ pip install py-perl5\n```\n\n##  Usage\n\n### Startup Perl VM and execute script\n\n```python\n# -*- coding:utf8 -*-\nimport perl5\n\nscript = r\"\"\"\nuse 5.10.0;\nuse utf8;\n\nsub method {\n    my $arg = shift;\n    say $arg;\n    return \"perl method called with $arg\";\n}\n\"\"\"\n\n\ndef some_func():\n    vm = perl5.VM()\n    vm.eval(script)\n    ret = vm.call(\"method\", \"hello perl\")\n    print(ret)\n\n    vm.close()\n    \n\ndef open_vm_use_context_manager():\n    with perl5.VM() as vm:\n        vm.eval(script)\n        ret = vm.call(\"method\", \"hello perl\")\n        print(ret)\n```\n\n### Load perl script file or package\n```python\n# -*- coding:utf8 -*-\nimport perl5\n\ndef call_method_in_external():\n    with perl5.VM() as vm:\n        vm.require(\"sample1.pl\")\n        ret = vm.call(\"method\", \"hello perl\")\n        print(ret)\n        \n        vm.use(\"Data::Dumper\")\n        dumper = vm.eval('sub {print Data::Dumper->Dump([@_])}')  # type: CodeRefProxy\n        dumper({\"test\": 1})\n        \n        vm.call_method(\"Data::Dumper\", \"Dump\", [[{\"test\": 1}]])\n```\n\n### Object control\n\nPyPerl5 can control to Perl package through the proxy object.\n\n```python\n# -*- coding:utf8 -*-\nimport perl5\nfrom perl5.vm import Proxy, CodeRefProxy\n\nSCRIPT = \"\"\"\npackage Px::Testing;\n\nsub new {\n    my $cls = shift;\n    return bless {}, $cls;\n}\n\nsub method {\n    my $self = shift;\n    return @_;\n}\n1;\n\"\"\"\n\ndef object_control():\n    with perl5.VM() as vm:\n        vm.eval(SCRIPT)\n    \n        # Create new instance\n        o = vm.package(\"Px::Testing\").new()\n        assert isinstance(o, Proxy)\n\n        # Create other new instance\n        o2 = vm.package(\"Px::Testing\").new()\n        assert o != o2\n\n        method = o.method\n        assert isinstance(method, CodeRefProxy)\n        assert method == o.method\n\n        # Method call use code ref proxy\n        ret = method(1)\n        assert ret == 1\n        \n        ret = o.method(2)\n        assert ret == 2\n```\n\n### Python object access from Perl\n\nAlso, control to Python object from Perl code through the proxy object too.\n\n```python\nimport perl5\n\nPROXY_SCRIPT = \"\"\"\nuse 5.10.0;\nuse PyPerl5::Proxy qw/ py_get_object /;\nuse PyPerl5::Boolean qw/ true false /;\n\nsub use_python_class {\n    my $class = py_get_object(\"__main__.ProxyTestClass\");\n    say \"Proxy object\" if $class->isa(\"PyPerl5::Proxy\");\n\n    # Initialize python class and call method    \n    my $o = $class->new(\"Init python class\");\n    say $o->attr1;\n    say $o->attr1(\"Set data\");\n    say $o->attr1;\n}\n\nsub use_python_func {\n    my $f = py_get_object(\"__main__.proxy_func\");\n    my $ret = $f->(1, 2);\n    say \"Result: $ret, equal: \", $ret == true;\n    $ret = $f->(true, true);\n    say \"Result: $ret, equal: \", $ret == true;\n}\n\"\"\"\n\n\nclass ProxyTestClass(object):\n    def __init__(self, attr1):\n        self._attr1 = attr1\n\n    def attr1(self, data=None):\n        if data is None:\n            return self._attr1\n        self._attr1 = data\n\n\ndef proxy_func(arg1, arg2):\n    return arg1 == arg2\n\n\ndef python_func_call():\n    with perl5.VM() as vm:\n        vm.eval(PROXY_SCRIPT)\n\n        vm.call(\"use_python_class\")\n\n        vm.call(\"use_python_func\")\n```\n\n## TypeMapper\n\nPyPerl5 has a customizable type-mapping system.\n\nDefault mapping list:\n\n- a large int or long type map to Math::BigInt\n- complex type map to Math::Complex\n- file object map to IO::File\n- datetime map to DateTime or Time::Piece\n- Boolean type map to PyPerl5::Boolean\n\n\n## Detect PyPerl5 environ\n\nIf you hope to detect a PyPerl5 environment, so you can use the 'PyPerl5::Util::run_under_python' method.\n\n```python\nimport perl5\n\nscript = r\"\"\"\nuse 5.10.0;\nuse PyPerl5::Util qw/ run_under_python /;\n\nsub check {\n    say \"called from python\" if run_under_python;\n}\n\"\"\"\n\ndef check_python_env():\n    with perl5.VM() as vm:\n        vm.eval(script)\n        vm.call(\"check\")\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/yacchi/PyPerl5",
    "keywords": "",
    "license": "Apache License, Version 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "py-perl5",
    "package_url": "https://pypi.org/project/py-perl5/",
    "platform": "",
    "project_url": "https://pypi.org/project/py-perl5/",
    "project_urls": {
      "Homepage": "https://github.com/yacchi/PyPerl5"
    },
    "release_url": "https://pypi.org/project/py-perl5/2.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Perl 5 integration for python",
    "version": "2.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8932191,
  "releases": {
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c4097bd2fcc50cdb47c822c5fbdbe231dd1a08bb4171abd7d661ed8e2396bc02",
          "md5": "79bafd6e3974a7583e4958585ad0fa26",
          "sha256": "2b01e1c1b346e7292f0de5d3200847867c7c0dd60a2f234d4b184326672bf4bd"
        },
        "downloads": -1,
        "filename": "py-perl5-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "79bafd6e3974a7583e4958585ad0fa26",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28656,
        "upload_time": "2020-12-18T10:30:07",
        "upload_time_iso_8601": "2020-12-18T10:30:07.552700Z",
        "url": "https://files.pythonhosted.org/packages/c4/09/7bd2fcc50cdb47c822c5fbdbe231dd1a08bb4171abd7d661ed8e2396bc02/py-perl5-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c4097bd2fcc50cdb47c822c5fbdbe231dd1a08bb4171abd7d661ed8e2396bc02",
        "md5": "79bafd6e3974a7583e4958585ad0fa26",
        "sha256": "2b01e1c1b346e7292f0de5d3200847867c7c0dd60a2f234d4b184326672bf4bd"
      },
      "downloads": -1,
      "filename": "py-perl5-2.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "79bafd6e3974a7583e4958585ad0fa26",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 28656,
      "upload_time": "2020-12-18T10:30:07",
      "upload_time_iso_8601": "2020-12-18T10:30:07.552700Z",
      "url": "https://files.pythonhosted.org/packages/c4/09/7bd2fcc50cdb47c822c5fbdbe231dd1a08bb4171abd7d661ed8e2396bc02/py-perl5-2.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}