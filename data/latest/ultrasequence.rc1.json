{
  "info": {
    "author": "Cody Cuellar",
    "author_email": "cody.cuellar@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "ULTRASEQUENCE\n=============\n\n-  Author: Cody Cuellar\n-  URL: https://github.com/codycuellar/ultrasequence\n\nAn ultra-fast Python file sequencing tool with useful custom features.\nThis package is exponentially faster than many of the similar packages.\n\nIn most cases, with standard naming conventions where the frame number\nis the last set of digits in the filename, this tool will be able to\nbuild the sequences with roughly O(n) speeds. Other similar tools are\ngenerally O(nÂ²) or slower.\n\nLicense\n=======\n\nThis project is licensed under the terms of the `MIT\nlicense. <https://choosealicense.com/licenses/mit/>`__\n\nFeatures\n========\n\n-  Compatible with the latest versions of Python 2 and 3.\n-  Ultra-fast O(n) sequencing. Can handle hundreds of thousands of input\n   files in a matter of seconds.\n-  Custom include and exclude extensions so only the file extensions you\n   want will be sequenced, otherwise they will immediately move into a\n   skipped list.\n-  Get file stats on the fly, or supply them in an ordered tuple,\n   dictionary, or pass an os.stat_result object directly for each file.\n-  Force file naming with different digit padding levels to be treated\n   as different sequences, or allow inconsistent padding.\n-  Custom string formatting of the sequenced file names.\n-  Highly customizable - you can even supply your own regex pattern to\n   the sequencer to change how and where it finds the frame number.\n\nPlatforms\n=========\n\nThe following Platforms are tested: \\* OSX 10.10, 10.11, 10.12, 10.13\n\nIt should run on all recent versions of OSX, and Linux platforms, but\nfurther testing is needed.\n\nUsage\n=====\n\nTo use UltraSequence in python is very easy. Simply import the\nultrasequence module and then use the Parser object to set up the\noptions. Then you simply call one of the parser methods of the Parser\nclass depending on the type of item you are parsing (directoy, file, or\npython list).\n\n.. code-block:: python\n\n    >>> import ultrasequence as us\n    >>> parser = us.Parser()\n    >>> parser.parse_directory('~/Documents', recurse=True)\n    >>> print(parser)\n    'Parser(sequences=15, single_frames=75, non_sequences=810, excluded=0, collisions=0)'\n\n\nThese lists can be accessed as normal lists such as:\n\n.. code-block:: python\n\n    >>> for frame in parser.sequences[0]:\n    ...     print(frame)\n\n    >>> for sequence in parser.sequences:\n    ...     print('Sequence %s is missing %s frames' % (\n    ...           sequence.format('%h%P%T'), sequence.missing_frames))\n\nCommand-Line Utility\n--------------------\n\nTo use the command-line utility, run the findseq command after\ninstalling ultrasequence:\n\n.. code-block:: bash\n\n    $ findseq /path/to/directory -R --include dpx exr png\n\nAll command line options can be overridden by installing the local\nconfig file to ``~/ultrasequence.conf`` and updating it with your settings of\nchoice:\n\n.. code-block:: bash\n\n    $ findseq -M\n\nThis file will always be used as default for both python and\ncommand-line usage, which can make some command line options impossible\nto enable or disable. If using a local config file, you can temporarily\ndisable it by using the ``-I`` flag. All command line flags are then\nreset to default and can be overridden by using the flags to change the\ndefault behavior.\n\nWhen using the python code directly, you can pass args into the Parser()\ninit and the parse_* methods to override this file on the fly.\n\nConfiguration\n-------------\n\nBy default, all the options are pre-defined in the\n``ultrasequence.config.UsConfig`` class. A CONFIG variable in the\n``ultrasequence.config`` is pre-instantiated with the defaults. If\n``CONFIG.make_local_config`` is called, a local configuration file will be\ngenerated with the defaults at ``~/.ultrasequence.conf``. You can then modify\nthis file as you wish and every time the program is run either in Python or\nfrom the command-line utility, the values from this config file will be used\ninstead. All option can still be overridden with arguments on the\ncommand-line, or by passing new values into the Parser, Sequence, and File\nmethod parameters.\n\nThe configuration attributes are:\n\n[global]\n~~~~~~~~\nformat = %H%r%T\n    A string formatter to use for representing the built sequences. For\n    more information on how to use the formatter, refer to the docs on\n    ``~ultrasequence.models.Sequence.format``\nrecurse = True\n    Whether or not to recurse into child directories when scanning folders\n    on the local system.\nignore_padding = True\n    Enable or disable strict padding rules. If enabled, each file's sequence\n    key is generated with the padding, so file.0001.dpx key would be\n    file.%04d.dpx. If disabled, the key would be file.#.dpx, but this can cause\n    collisions in some rare cases.\ninclude_exts = exr dpx jpg\n    A list of inclusion file extensions. Any files with extensions not in this\n    list will be skipped and not sequenced.\nexclude_exts = mov pdf xls\n    A list of exclusion file extensions. Any files with extensions in this\n    list will be skipped and not sequenced.\nget_stats = True\n    Do a os.stat() on every file found.\n\n[regex]\n~~~~~~~\nframe_extract = ``((.*)(\\D))?(\\d+)(.*)``\n    The regex pattern to extract the frame numbers. This can be modified for\n    special cases such as when the frame number isn't the last digit before the\n    extension.\nhead_group = 0\n    The regex capture group for all characters preceding the frame digits.\nframe_group = 3\n    The regex capture group for the frame digits.\ntail_group = 4\n    The regex capture group for all characters after the digits.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/codycuellar/ultrasequence.git",
    "keywords": "sequence file parser image ultra frames",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ultrasequence",
    "package_url": "https://pypi.org/project/ultrasequence/",
    "platform": "MacOS 10.10",
    "project_url": "https://pypi.org/project/ultrasequence/",
    "project_urls": {
      "Homepage": "http://github.com/codycuellar/ultrasequence.git"
    },
    "release_url": "https://pypi.org/project/ultrasequence/1.0.4/",
    "requires_dist": null,
    "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4",
    "summary": "An extremely fast file sequencing tool.",
    "version": "1.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3782302,
  "releases": {
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0c954721d36adfe5d8e06b46a80455f90e3267363f3456cd6bf6fb6e85e39694",
          "md5": "b5e99cd836a60f09b5347ab3ce8a22b6",
          "sha256": "55fc9d045c959317cedb7ab82dcbbc213f36a3ca8c7ce1f81c3341347ca6ca42"
        },
        "downloads": -1,
        "filename": "ultrasequence-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b5e99cd836a60f09b5347ab3ce8a22b6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4",
        "size": 20562,
        "upload_time": "2018-04-19T22:29:24",
        "upload_time_iso_8601": "2018-04-19T22:29:24.350054Z",
        "url": "https://files.pythonhosted.org/packages/0c/95/4721d36adfe5d8e06b46a80455f90e3267363f3456cd6bf6fb6e85e39694/ultrasequence-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5281cf26221839c5d0ad3376765ceb94537b97a3c2cbbe835019845cdb3e6b16",
          "md5": "85f81a7d33a01d53245e384684733af7",
          "sha256": "bfb0960270a4684c305b866c164e4abcd8d95d256d500f1b9854ec4ad1f2cb70"
        },
        "downloads": -1,
        "filename": "ultrasequence-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "85f81a7d33a01d53245e384684733af7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4",
        "size": 23603,
        "upload_time": "2018-04-19T22:29:25",
        "upload_time_iso_8601": "2018-04-19T22:29:25.852253Z",
        "url": "https://files.pythonhosted.org/packages/52/81/cf26221839c5d0ad3376765ceb94537b97a3c2cbbe835019845cdb3e6b16/ultrasequence-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0c954721d36adfe5d8e06b46a80455f90e3267363f3456cd6bf6fb6e85e39694",
        "md5": "b5e99cd836a60f09b5347ab3ce8a22b6",
        "sha256": "55fc9d045c959317cedb7ab82dcbbc213f36a3ca8c7ce1f81c3341347ca6ca42"
      },
      "downloads": -1,
      "filename": "ultrasequence-1.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b5e99cd836a60f09b5347ab3ce8a22b6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4",
      "size": 20562,
      "upload_time": "2018-04-19T22:29:24",
      "upload_time_iso_8601": "2018-04-19T22:29:24.350054Z",
      "url": "https://files.pythonhosted.org/packages/0c/95/4721d36adfe5d8e06b46a80455f90e3267363f3456cd6bf6fb6e85e39694/ultrasequence-1.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5281cf26221839c5d0ad3376765ceb94537b97a3c2cbbe835019845cdb3e6b16",
        "md5": "85f81a7d33a01d53245e384684733af7",
        "sha256": "bfb0960270a4684c305b866c164e4abcd8d95d256d500f1b9854ec4ad1f2cb70"
      },
      "downloads": -1,
      "filename": "ultrasequence-1.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "85f81a7d33a01d53245e384684733af7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4",
      "size": 23603,
      "upload_time": "2018-04-19T22:29:25",
      "upload_time_iso_8601": "2018-04-19T22:29:25.852253Z",
      "url": "https://files.pythonhosted.org/packages/52/81/cf26221839c5d0ad3376765ceb94537b97a3c2cbbe835019845cdb3e6b16/ultrasequence-1.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}