{
  "info": {
    "author": "Sunnyhaze",
    "author_email": "mxch1122@126.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# SCU_Captcha\n![Powered by](https://img.shields.io/badge/Based_on-Pytorch-blue?logo=pytorch)\n[![Github](https://img.shields.io/badge/Github_repo-scu_captcha-green?logo=github)](https://github.com/SunnyHaze/SCU-Captcha)\n![GitHub repo size](https://img.shields.io/github/repo-size/SunnyHaze/SCU-Captcha?logo=hack%20the%20box)\n![GitHub top language](https://img.shields.io/github/languages/top/Sunnyhaze/scu-captcha?color=green&logo=python)\n![GitHub](https://img.shields.io/github/license/Sunnyhaze/scu-captcha?logo=license)\n## 声明\n- 本项目只适用于编程学习用途，请在下载后24小时内删除！\n- 不得随意传播本项目至任何公开场合（包括但不限于QQ群、微信群、贴吧论坛等）\n- 因用户使用或修改项目源码而产生的一切责任与本人无关，本人不负任何连带责任\n- 若不同意以上使用条例，请停止clone本项目并不得通过任何途径使用本项目\n- 本项目源码以及条例解释权归本人所有\n## 简介\n针对于Sichuan University的JWC验证码特化训练的轻量级深度学习模型，基于Pytorch，模型为CNN（卷积神经网络）。\n+ 用于快速识别此类验证码\n  ![](images/Captcha_example.png)\n+ 模型大小20M左右，有更精简的可能，不过没有时间进一步优化。\n## 准确率\n|训练集|测试集|实际使用于JWC|\n|:-:|:-:|:-:|\n|98.915001%|98.715001%|大约90%|\n\n![](images/最终结果.png)\n> 训练过程中一直在修改超参数，所以错误率有较多波动，实际使用时JWC还是会有更大的误差，毕竟数据集不完全一致，但是通过多次重复足够使用了。\n+ 训练集8万个，测试集2万个，根据JWC网站的统计，只包含如下字符：`2345678abcdefgmnpwxy`，共20个字符随机排列组合生成的4位验证码。\n+ 数据集采用谷歌的[Kaptcha](https://code.google.com/archive/p/kaptcha/)生成。\n+ 实际使用时魔改了此Github仓库的代码用于渲染生成：\n\n    [![Readme Card](https://github-readme-stats.vercel.app/api/pin/?username=oopsguy&repo=kaptcha-spring-boot)](https://github.com/oopsguy/kaptcha-spring-boot)\n\n    因为魔改实在过于丑陋，就不放本人的源代码在这里了。\n+ 此处提供1万数据量的数据集，有需要可以取用，后续有需要可以提供10万的数据集到网盘：\n\n    [![Readme Card](https://github-readme-stats.vercel.app/api/pin/?username=SunnyHaze&repo=SCU_OAA-website-Captcha-training-set)](https://github.com/SunnyHaze/SCU_OAA-website-Captcha-training-set)\n## 使用方法\n### 安装\n+ 本项目基于Pytorch，所以使用前需要安装Pytorch，所以如果没安装过Pytorch，你还需要大约`1GB`的空间安装Pytorch，具体安装请参见[Pytorch官网](https://pytorch.org/)\n+ 当拥有pytorch环境后，安装就变得极为简单，通过如下代码即可安装：\n  ```\n  pip install scu_captcha\n  ```\n### 使用\n+ 随后就可以通过使用如下代码导入本包的两个组件\n  ```python\n  from scu_captcha import imgLoader,Predict\n  ```\n  导入后，即可使用这两个函数进行验证码识别。\n\n+ 对于一张图片，`imgLoader`提供两种方式进行图片加载，分别是通过相对路径导入或二进制图片文件直接导入，然后将得到的对象输入`Predict`函数即可返回对应字符串：\n  ```Python\n  # 直接使用二进制方式预测\n      session = requests.session() # 使用网络请求库\n      # 通过网络请求获得验证码二进制图像\n      byte_Captcha = session.get(url=captcha_url, headers=header).content\n      img = imgLoader(byte_Captcha) # 导入二进制图片\n      res = Predict(img) # 进行预测，并输出预测的str到res对象\n  ```\n  ```python\n  # 使用相对路径导入图片预测\n      # 此处为输出到图片，如果图片本身就存在，则无需此步骤\n      with open(\"captcha.jpg\", \"wb\") as f: \n          f.write(byte_Captcha)\n      # 根据相对路径读入文件\n      img = imgLoader(\"captcha.jpg\")\n      res = Predict(img) # 进行预测，并输出预测的str到res对象\n  ```\n  具体用法也可参见[TEST.py](tests/TEST.py)。\n## 结语\n+ 才疏学浅，模型用得不好还请您指正\n+ 如果觉得有用（比如计网课设，爬虫，抢课脚本）等等用到了本模型，还请关照一下给个star哦~\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/SunnyHaze/SCU-Captcha",
    "keywords": "pip,scu-captcha",
    "license": "MIT Licence",
    "maintainer": "",
    "maintainer_email": "",
    "name": "scu-captcha",
    "package_url": "https://pypi.org/project/scu-captcha/",
    "platform": null,
    "project_url": "https://pypi.org/project/scu-captcha/",
    "project_urls": {
      "Authors's Github": "https://github.com/SunnyHaze",
      "Homepage": "https://github.com/SunnyHaze/SCU-Captcha",
      "Repo": "https://github.com/SunnyHaze/SCU-Captcha"
    },
    "release_url": "https://pypi.org/project/scu-captcha/0.0.5/",
    "requires_dist": [
      "requests",
      "pillow"
    ],
    "requires_python": ">=3.7",
    "summary": "SCU captcha recongnition based on Pytorch",
    "version": "0.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14738523,
  "releases": {
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0790fd1800311b698ae2d1e830490972b332277493c5994cd25d9d5cdc68664a",
          "md5": "9c4afa23e51b024a41c430de5c2ae29d",
          "sha256": "c210e54a4529684f8fb0afb259cb2cb821304d9b8f2ae9e9742ec6d9b0997b60"
        },
        "downloads": -1,
        "filename": "scu_captcha-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9c4afa23e51b024a41c430de5c2ae29d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 22111365,
        "upload_time": "2022-08-12T10:30:37",
        "upload_time_iso_8601": "2022-08-12T10:30:37.621718Z",
        "url": "https://files.pythonhosted.org/packages/07/90/fd1800311b698ae2d1e830490972b332277493c5994cd25d9d5cdc68664a/scu_captcha-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c2c819ff152a35b42da51d6abf53e4ae679a457924f0cb09e64c8136a9cee09",
          "md5": "522b47d0826a1179f222e3ad6b5eb223",
          "sha256": "a54110fe1162520f83d2d78614587ef2e72166638f3d275b06af7d5ca496b438"
        },
        "downloads": -1,
        "filename": "scu_captcha-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "522b47d0826a1179f222e3ad6b5eb223",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 11055289,
        "upload_time": "2022-08-12T10:30:51",
        "upload_time_iso_8601": "2022-08-12T10:30:51.396286Z",
        "url": "https://files.pythonhosted.org/packages/8c/2c/819ff152a35b42da51d6abf53e4ae679a457924f0cb09e64c8136a9cee09/scu_captcha-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0790fd1800311b698ae2d1e830490972b332277493c5994cd25d9d5cdc68664a",
        "md5": "9c4afa23e51b024a41c430de5c2ae29d",
        "sha256": "c210e54a4529684f8fb0afb259cb2cb821304d9b8f2ae9e9742ec6d9b0997b60"
      },
      "downloads": -1,
      "filename": "scu_captcha-0.0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9c4afa23e51b024a41c430de5c2ae29d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 22111365,
      "upload_time": "2022-08-12T10:30:37",
      "upload_time_iso_8601": "2022-08-12T10:30:37.621718Z",
      "url": "https://files.pythonhosted.org/packages/07/90/fd1800311b698ae2d1e830490972b332277493c5994cd25d9d5cdc68664a/scu_captcha-0.0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8c2c819ff152a35b42da51d6abf53e4ae679a457924f0cb09e64c8136a9cee09",
        "md5": "522b47d0826a1179f222e3ad6b5eb223",
        "sha256": "a54110fe1162520f83d2d78614587ef2e72166638f3d275b06af7d5ca496b438"
      },
      "downloads": -1,
      "filename": "scu_captcha-0.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "522b47d0826a1179f222e3ad6b5eb223",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 11055289,
      "upload_time": "2022-08-12T10:30:51",
      "upload_time_iso_8601": "2022-08-12T10:30:51.396286Z",
      "url": "https://files.pythonhosted.org/packages/8c/2c/819ff152a35b42da51d6abf53e4ae679a457924f0cb09e64c8136a9cee09/scu_captcha-0.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}