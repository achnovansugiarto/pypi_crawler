{
  "info": {
    "author": "Andrew Barna",
    "author_email": "abarna@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": ".. |CI Status| image:: https://github.com/docotak/gsw-xarray/actions/workflows/ci.yml/badge.svg\n  :target: https://github.com/DocOtak/gsw-xarray/actions/workflows/ci.yml\n  :alt: CI Status\n.. |Documentation Status| image:: https://readthedocs.org/projects/gsw-xarray/badge/?version=latest\n  :target: https://gsw-xarray.readthedocs.io/en/latest/?badge=latest\n  :alt: Documentation Status\n.. |pypi| image:: https://badge.fury.io/py/gsw-xarray.svg\n   :target: https://badge.fury.io/py/gsw-xarray\n   :alt: pypi package\n.. |conda forge| image:: https://img.shields.io/conda/vn/conda-forge/gsw-xarray\n   :target: https://anaconda.org/conda-forge/gsw-xarray\n\ngsw-xarray: Wrapper for gsw that adds CF attributes\n===================================================\n|CI Status| |Documentation Status| |pypi| |conda forge|\n\ngsw-xarray is a wrapper for `gsw python <https://github.com/TEOS-10/GSW-python>`_\nthat will add CF attributes to xarray.DataArray outputs.\nIt is meant to be a drop in wrapper for the upstream GSW-Python library and will only add these attributes if one argument to a function is an xarray.DataArray.\n\nYou can find the documentation on `gsw-xarray.readthedocs.io <https://gsw-xarray.readthedocs.io/>`_.\n\nUsage\n-----\n\n.. code:: python\n\n   import gsw_xarray as gsw\n\n   # Create a xarray.Dataset\n   import numpy as np\n   import xarray as xr\n   ds = xr.Dataset()\n   id = np.arange(3)\n   ds['id'] = xr.DataArray(id, coords={'id':id})\n   ds['CT'] = ds['id'] * 10\n   ds['CT'].attrs = {'standard_name':'sea_water_conservative_temperature'}\n   ds['SA'] = ds['id'] * 0.1 + 34\n   ds['SA'].attrs = {'standard_name':'sea_water_absolute_salinity'}\n\n   # Apply gsw functions\n   sigma0 = gsw.sigma0(SA=ds['SA'], CT=ds['CT'])\n   print(sigma0.attrs)\n\nOutputs\n\n::\n\n   {'standard_name': 'sea_water_sigma_t', 'units': 'kg/m^3'}\n\nDon't worry about usage with non xarray array objects, just use in all places you would the upstream library:\n\n.. code:: python\n\n   sigma0 = gsw.sigma0(id * 10, id * 0.1 + 34)\n   print(type(sigma0), sigma0)\n\nOutputs\n\n::\n\n   <class 'numpy.ndarray'> [-5.08964499  2.1101098   9.28348219]\n\n\nWe support (and convert the unit if necessary) the usage of pint.Quantities and the usage of xarray wrapped Quantities.\nSupport for pint requires the installation of two optional dependencies: ``pint`` and ``pint-xarray``.\nIf all the inputs to a gsw function are Quantities, the returned object will also be a Quantity belonging to the same UnitRegistry.\n\n.. warning::\n\n   Quantities must all belong to the same pint.UnitRegistry, a ValueError will be thrown if there are mixed registries.\n\n.. warning::\n\n   If one input is a Quantity, all inputs must be Quantities (and/or xarray wrapped Quantities), except for the `axis` and `interp_method` arguments.\n   For mixed usage of Quantities and non Quantities, a ValueError will be thrown.\n\n.. code:: python\n\n   import pint_xarray\n   import gsw_xarray as gsw\n\n   # Create a xarray.Dataset\n   import numpy as np\n   import xarray as xr\n   ds = xr.Dataset()\n   id = np.arange(3)\n   ds['id'] = xr.DataArray(id, coords={'id':id})\n   ds['CT'] = ds['id'] * 10\n   # make sure there are unit attrs this time\n   ds['CT'].attrs = {'standard_name':'sea_water_conservative_temperature', 'units': 'degC'}\n   ds['SA'] = ds['id'] * 0.1 + 34\n   ds['SA'].attrs = {'standard_name':'sea_water_absolute_salinity', 'units': 'g/kg'}\n\n   # use the pint accessor to quantify things\n   ds = ds.pint.quantify()\n\n   # Apply gsw functions\n   sigma0 = gsw.sigma0(SA=ds['SA'], CT=ds['CT'])\n   # outputs are now quantities!\n   print(sigma0)\n\nOutputs\n\n::\n\n   <xarray.DataArray 'sigma0' (id: 3)>\n   <Quantity([27.17191038 26.12820162 24.03930887], 'kilogram / meter ** 3')>\n   Coordinates:\n     * id       (id) int64 0 1 2\n   Attributes:\n       standard_name:  sea_water_sigma_t\n\nThe usage of xarray wrapped Quantities is not required, you can use pint directly (though the ``pint-xarray`` dep still needs to be installed).\n\n.. code:: python\n\n   import gsw_xarray as gsw\n   import pint\n   ureg = pint.UnitRegistry()\n   SA = ureg.Quantity(35, ureg(\"g/kg\"))\n   CT = ureg.Quantity(10, ureg.degC)\n   sigma0 = gsw.sigma0(SA=SA, CT=CT)\n   print(sigma0)\n\nOutputs\n\n::\n\n   26.824644457868317 kilogram / meter ** 3\n\nAs gsw-xarray converts arguments to the proper unit when Quantities are used, we can e.g. use the temperature in Kelvin:\n\n.. code:: python\n\n   CT = ureg.Quantity(10, ureg.degC).to('kelvin')\n   sigma0 = gsw.sigma0(SA=SA, CT=CT)\n   print(sigma0)\n\nOutputs\n\n::\n\n   26.824644457868317 kilogram / meter ** 3\n\n.. note::\n   If you do not wish to use the unit conversion ability, you need to pass dequantified Quantities\n   (e.g. `da.pint.dequantify()` for pint-xarray or `arg.magnitude` for pint.Quantity).\n\n.. warning::\n   On the opposite, gsw-xarray will not check the units if non Quantity arguments are used.\n   If you wish to use unit conversion, please pass quantified arguments (if your xarray.Dataset /\n   xarray.DataArray has the 'units' attribute, you can use `da.pint.quantify()`)\n\n.. note::\n   We recommend that you use the `cf-xarray <https://cf-xarray.readthedocs.io/en/latest/units.html>`_ registry for units,\n   as it implements geophysical units as `degree_north`, `degrees_north`, etc.\n   gsw-xarray internally uses `degree_north` and `degree_east` for latitude and longitude unit names.\n   If they are not found in the unit registry, they will be replaced by `degree`.\n\n   The function `gsw.SP_from_SK` uses part per thousand for SK. 'ppt' is already used for picopint,\n   so the expected unit is replaced by '1'.\n\n\nInstallation\n------------\nPip\n...\n\n.. code:: bash\n\n    pip install gsw-xarray\n\n\nConda\n.....\n\nInside a conda environment:  ``conda install -c conda-forge gsw-xarray``.\n\nPipenv\n......\n\nInside a pipenv environment: ``pipenv install gsw-xarray``.\n\n\nContributor guide\n-----------------\n\nAll contributions, bug reports, bug fixes, documentation improvements,\nenhancements, and ideas are welcome.\nIf you notice a bug or are missing a feature, fell free\nto open an issue in the `GitHub issues page <https://github.com/DocOtak/gsw-xarray/issues>`_.\n\nIn order to contribute to gsw-xarray, please fork the repository and\nsubmit a pull request. A good step by step tutorial for starting with git can be found in the\n`xarray contributor guide <https://xarray.pydata.org/en/stable/contributing.html#working-with-the-code>`_.\nA main difference is that we do not use conda as python environment, but poetry.\n\nSet up the environment\n......................\n\nYou will first need to `install poetry <https://python-poetry.org/docs/#installation>`_.\nThen go to your local clone of gsw-xarray and launch installation:\n\n.. code:: bash\n\n   cd /path/to/your/gsw-xarray\n   poetry install\n\nYou can then activate the environment by launching a shell\nwithin the virtual environment:\n\n.. code:: bash\n\n   poetry shell\n\nYou can check that the tests pass locally:\n\n.. code:: bash\n\n   pytest gsw_xarray/tests\n\nRelease (for maintainers only)\n..............................\n\nTODO...\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/DocOtak/gsw-xarray",
    "keywords": "",
    "license": "BSD-3-Clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "gsw-xarray",
    "package_url": "https://pypi.org/project/gsw-xarray/",
    "platform": null,
    "project_url": "https://pypi.org/project/gsw-xarray/",
    "project_urls": {
      "Documentation": "https://gsw-xarray.readthedocs.io/",
      "Homepage": "https://github.com/DocOtak/gsw-xarray",
      "Repository": "https://github.com/DocOtak/gsw-xarray"
    },
    "release_url": "https://pypi.org/project/gsw-xarray/0.3.0/",
    "requires_dist": [
      "xarray (>=0.20.2)",
      "gsw (>=3.4.0)",
      "Sphinx (>=4.4.0); extra == \"docs\"",
      "furo (>=2022.1.2); extra == \"docs\"",
      "pint-xarray (>=0.2.1,<0.3.0); extra == \"pint\"",
      "Pint (>=0.18); extra == \"pint\""
    ],
    "requires_python": ">=3.8",
    "summary": "Drop in wrapper for gsw which adds CF standard name and units attributes to xarray results",
    "version": "0.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15047311,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4f72551d6c425f6dc2246b0c6467460acaf08b646b2f0bde97c59ce8643e2481",
          "md5": "f6749debea6a0d0e145975cdb44b8eb0",
          "sha256": "b6c087e7b7fa57aa67d40055514ee6b56c3d4b7a8bb8ba195881842642879100"
        },
        "downloads": -1,
        "filename": "gsw_xarray-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f6749debea6a0d0e145975cdb44b8eb0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 2407,
        "upload_time": "2021-12-15T08:46:40",
        "upload_time_iso_8601": "2021-12-15T08:46:40.449515Z",
        "url": "https://files.pythonhosted.org/packages/4f/72/551d6c425f6dc2246b0c6467460acaf08b646b2f0bde97c59ce8643e2481/gsw_xarray-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "34c45847950ffedcd2b00b80153a036a3242157968a8aff0695424f2374fc098",
          "md5": "a7e2fd034edb45d0326476240d74faf7",
          "sha256": "0b8f4cc2e02a14a335077082f8f3cf4d1cbf418010a09fa42f13da995a1f49bd"
        },
        "downloads": -1,
        "filename": "gsw-xarray-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a7e2fd034edb45d0326476240d74faf7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 1936,
        "upload_time": "2021-12-15T08:46:39",
        "upload_time_iso_8601": "2021-12-15T08:46:39.076804Z",
        "url": "https://files.pythonhosted.org/packages/34/c4/5847950ffedcd2b00b80153a036a3242157968a8aff0695424f2374fc098/gsw-xarray-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "68e21ac0bf44e5ec300108af799c9199fbfac9f96a8fb3707c8b3ed9247aa992",
          "md5": "22e3d51e223d6dc302f9e587fc5e8b73",
          "sha256": "d72202fb8b3df73b6581fada5a9e31f4201d2495bef9e5fd01d44eeb6cae681d"
        },
        "downloads": -1,
        "filename": "gsw_xarray-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "22e3d51e223d6dc302f9e587fc5e8b73",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 16007,
        "upload_time": "2022-03-22T12:32:02",
        "upload_time_iso_8601": "2022-03-22T12:32:02.652272Z",
        "url": "https://files.pythonhosted.org/packages/68/e2/1ac0bf44e5ec300108af799c9199fbfac9f96a8fb3707c8b3ed9247aa992/gsw_xarray-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "60ab4111346a2c1230148e63890c27778579a00f32f4c5e0777f368aebfe5ac2",
          "md5": "6f980b3d93cfb787879313575457b356",
          "sha256": "5de24cae53868f97fd35f55823111da1fcad36bc08407c3dd94a0d0ff9daabfa"
        },
        "downloads": -1,
        "filename": "gsw-xarray-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6f980b3d93cfb787879313575457b356",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 13474,
        "upload_time": "2022-03-22T12:32:00",
        "upload_time_iso_8601": "2022-03-22T12:32:00.445064Z",
        "url": "https://files.pythonhosted.org/packages/60/ab/4111346a2c1230148e63890c27778579a00f32f4c5e0777f368aebfe5ac2/gsw-xarray-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4d83536e1131d73d805ad333e35ee0e3a4887fdecc15d53b16ec69c5635f61f7",
          "md5": "6364b9821e425346570d44ed713a77b5",
          "sha256": "283ec1960e49f4160f00305e0794bcb65d0d3b8d5428810a1f4878b4cc95e147"
        },
        "downloads": -1,
        "filename": "gsw_xarray-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6364b9821e425346570d44ed713a77b5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 16051,
        "upload_time": "2022-03-22T18:04:33",
        "upload_time_iso_8601": "2022-03-22T18:04:33.867108Z",
        "url": "https://files.pythonhosted.org/packages/4d/83/536e1131d73d805ad333e35ee0e3a4887fdecc15d53b16ec69c5635f61f7/gsw_xarray-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f9a2ae24005403fa51d6c2a0f29bf00bd3241f316afbf00e8830e7fa88417fd",
          "md5": "4e69641fe536f1bb5546677ee26c928d",
          "sha256": "867cd4b3bbcd18cfcb11caf7778ce6beb98f26e7a6ec459740bde8dea85b6f56"
        },
        "downloads": -1,
        "filename": "gsw-xarray-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4e69641fe536f1bb5546677ee26c928d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 13498,
        "upload_time": "2022-03-22T18:04:32",
        "upload_time_iso_8601": "2022-03-22T18:04:32.204106Z",
        "url": "https://files.pythonhosted.org/packages/1f/9a/2ae24005403fa51d6c2a0f29bf00bd3241f316afbf00e8830e7fa88417fd/gsw-xarray-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "072174df1dc49855c4ca46d77688600b69a039db6bb037fdfb99ad4cf09330cf",
          "md5": "39ea48fb393116f3aba44c081d166600",
          "sha256": "6394895ed57b3231224784ea1303476672ff1dc6f91aee333b9be223e27564e0"
        },
        "downloads": -1,
        "filename": "gsw_xarray-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "39ea48fb393116f3aba44c081d166600",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 21689,
        "upload_time": "2022-09-09T20:01:36",
        "upload_time_iso_8601": "2022-09-09T20:01:36.910603Z",
        "url": "https://files.pythonhosted.org/packages/07/21/74df1dc49855c4ca46d77688600b69a039db6bb037fdfb99ad4cf09330cf/gsw_xarray-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "00e465e239ca62f6f54a900e05a2abca7211729549a2eb88db525bfd0f65173c",
          "md5": "1cc11e5d6bcfc19d1dbcad14a5f9db4d",
          "sha256": "f89c27a9f37549a1a6ed88a002201b880a8ae2463e711e74030e43101a62e185"
        },
        "downloads": -1,
        "filename": "gsw-xarray-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1cc11e5d6bcfc19d1dbcad14a5f9db4d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 19180,
        "upload_time": "2022-09-09T20:01:35",
        "upload_time_iso_8601": "2022-09-09T20:01:35.403449Z",
        "url": "https://files.pythonhosted.org/packages/00/e4/65e239ca62f6f54a900e05a2abca7211729549a2eb88db525bfd0f65173c/gsw-xarray-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "072174df1dc49855c4ca46d77688600b69a039db6bb037fdfb99ad4cf09330cf",
        "md5": "39ea48fb393116f3aba44c081d166600",
        "sha256": "6394895ed57b3231224784ea1303476672ff1dc6f91aee333b9be223e27564e0"
      },
      "downloads": -1,
      "filename": "gsw_xarray-0.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "39ea48fb393116f3aba44c081d166600",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 21689,
      "upload_time": "2022-09-09T20:01:36",
      "upload_time_iso_8601": "2022-09-09T20:01:36.910603Z",
      "url": "https://files.pythonhosted.org/packages/07/21/74df1dc49855c4ca46d77688600b69a039db6bb037fdfb99ad4cf09330cf/gsw_xarray-0.3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "00e465e239ca62f6f54a900e05a2abca7211729549a2eb88db525bfd0f65173c",
        "md5": "1cc11e5d6bcfc19d1dbcad14a5f9db4d",
        "sha256": "f89c27a9f37549a1a6ed88a002201b880a8ae2463e711e74030e43101a62e185"
      },
      "downloads": -1,
      "filename": "gsw-xarray-0.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "1cc11e5d6bcfc19d1dbcad14a5f9db4d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 19180,
      "upload_time": "2022-09-09T20:01:35",
      "upload_time_iso_8601": "2022-09-09T20:01:35.403449Z",
      "url": "https://files.pythonhosted.org/packages/00/e4/65e239ca62f6f54a900e05a2abca7211729549a2eb88db525bfd0f65173c/gsw-xarray-0.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}