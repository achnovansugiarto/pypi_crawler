{
  "info": {
    "author": "Dmitriy Sintsov",
    "author_email": "questpc256@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU Lesser General Public License v2 or later (LGPLv2+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "===========\ndjango-deno\n===========\n\n.. _collectstatic: https://docs.djangoproject.com/en/dev/ref/contrib/staticfiles/#django-admin-collectstatic\n.. _Deno: https://deno.land\n.. _deno lock.json: https://deno.land/manual/linking_to_external_code/integrity_checking\n.. _deno import_map.json: https://deno.land/manual/linking_to_external_code/import_maps\n.. _DENO_OUTPUT_MODULE_TYPE: https://github.com/Dmitri-Sintsov/django-deno/search?l=Python&q=DENO_OUTPUT_MODULE_TYPE&type=code\n.. _DENO_ROLLUP_BUNDLES: https://github.com/Dmitri-Sintsov/django-deno/search?q=DENO_ROLLUP_BUNDLES&type=code\n.. _DENO_ROLLUP_ENTRY_POINTS: https://github.com/Dmitri-Sintsov/django-deno/search?q=DENO_ROLLUP_ENTRY_POINTS&type=code\n.. _DENO_ROLLUP_COLLECT_OPTIONS: https://github.com/Dmitri-Sintsov/django-deno/search?q=DENO_ROLLUP_COLLECT_OPTIONS&type=code\n.. _DENO_ROLLUP_SERVE_OPTIONS: https://github.com/Dmitri-Sintsov/django-deno/search?q=DENO_ROLLUP_SERVE_OPTIONS&type=code\n.. _deno vendor: https://deno.land/manual/tools/vendor\n.. _Django: https://www.djangoproject.com\n.. _DJANGO_DEBUG: https://github.com/Dmitri-Sintsov/djk-sample/search?q=DJANGO_DEBUG&type=code\n.. _django_deno settings: https://github.com/Dmitri-Sintsov/django-deno/blob/main/django_deno/conf/settings.py\n.. _Django management commands: https://docs.djangoproject.com/en/dev/ref/django-admin/\n.. _Django packages static files: https://docs.djangoproject.com/en/dev/howto/static-files/\n.. _djk-sample: https://github.com/Dmitri-Sintsov/djk-sample\n.. _djk-sample settings: https://github.com/Dmitri-Sintsov/djk-sample/blob/master/djk_sample/settings.py\n.. _drf-gallery: https://github.com/Dmitri-Sintsov/drf-gallery\n.. _drollup: https://deno.land/x/drollup\n.. _es6 modules: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules\n.. _getStaticFilesResolver: https://github.com/Dmitri-Sintsov/django-deno/search?l=TypeScript&q=getStaticFilesResolver&type=code\n.. _isVirtualEntry: https://github.com/Dmitri-Sintsov/django-deno/search?l=TypeScript&q=isVirtualEntry&type=code\n.. _setVirtualEntryPoint: https://github.com/Dmitri-Sintsov/django-deno/search?l=TypeScript&q=setVirtualEntryPoint&type=code\n.. _rollup.js: https://rollupjs.org/\n.. _runserver: https://docs.djangoproject.com/en/dev/ref/django-admin/#runserver\n.. _SystemJS: https://github.com/systemjs/systemjs\n.. _terser: https://terser.org\n\n`Deno`_ front-end integration for `Django`_, version 0.1.2.\n\n* Currently only `drollup`_ / `terser`_ are supported, the deno server may be extended to support any of deno api, if\n  applicable.\n\nRequirements\n------------\n\n* Deno 1.19 or newer (which supports `deno vendor`_ command).\n* Django 2.2 / Django 3.2 / Django 4.0 is tested with continuous integration demo app `djk-sample`_.\n\nInstallation\n------------\n\nIn Ubuntu Linux::\n\n    curl -fsSL https://deno.land/x/install/install.sh | sh\n    export DENO_INSTALL=$HOME/.deno\n\nIn Windows run PowerShell then invoke::\n\n    iwr https://deno.land/x/install/install.ps1 -useb | iex\n\n    set DENO_INSTALL=%userprofile%\\.deno\n\n``DENO_INSTALL`` environment variable specifies directory where `Deno`_ is installed.\n\n* In case currently installed `Deno`_ version is older than 1.19, please use ``deno upgrade`` command to install the\n  newer `Deno`_ version. Older version has no ``deno vendor`` command.\n\n* Currently `drollup`_ Deno package does not support Deno version newer than 1.21. To overcome that limitation, please use\n  Deno version 1.21::\n  \n    deno upgrade --version 1.21.3\n\nTo install the development version of ``django_deno`` in python3 ``virtualenv``::\n\n    python -m pip install -U git+https://github.com/Dmitri-Sintsov/django-deno.git\n\nTo install the stable version of ``django_deno`` in python3 ``virtualenv``::\n\n    python -m pip install -U git+https://github.com/Dmitri-Sintsov/django-deno.git@v0.1.2\n\nDescription\n-----------\n\n``django_deno`` installs deno web service which is used to communicate with `Django`_ projects.\n\nCurrently the web service supports deno version of `rollup.js`_ bundle (`drollup`_) generation to automatically provide\n`es6 modules`_ bundles for `Django`_ projects, including scripts from `Django packages static files`_.\n\nThat enables generation of minified `terser`_ bundles and / or `systemjs`_ bundles, the later ones are compatible to\nIE11.\n\nNote that currently it supports only `es6 modules`_, not the full transpiling of es5 to es6, so it assumes that\nthe developing code has es6 imports / exports but the rest of code is written with es5 syntax.\n\nAt `Django`_ side it provides the following `Django management commands`_:\n\ncollectrollup\n~~~~~~~~~~~~~\n\n* ``collectrollup`` - similar to Django `collectstatic`_ command, but uses `drollup`_ to generate Javascript bundles.\n\nIt's preferable to run the ``collectrollup`` command this way from the `Django`_ project ``virtualenv``::\n\n    python3 manage.py collectrollup --clear --noinput\n\n``--clear`` option is suggested because the target output may vary depending on the source scripts.\n\nThere is `djk-sample`_ script for running ``collectrollup`` in Linux::\n\n    #!/bin/sh\n    DJANGO_DEBUG='False' python3 $VIRTUAL_ENV/djk-sample/manage.py collectrollup --noinput --clear\n\n* https://github.com/Dmitri-Sintsov/djk-sample/blob/master/cli/collectrollup.sh\n\nin Windows::\n\n    if not defined DENO_INSTALL (\n        set DENO_INSTALL=%USERPROFILE%\\.deno\n    )\n    set \"DJANGO_DEBUG=False\" & python %VIRTUAL_ENV%/djk-sample/manage.py collectrollup --noinput --clear\n\n* https://github.com/Dmitri-Sintsov/djk-sample/blob/master/cli/collectrollup.cmd\n\nThe script also sets the environment variable `DJANGO_DEBUG`_ to ``False`` which is parsed in `djk-sample`_ settings.py::\n\n    DEBUG = os.environ.get('DJANGO_DEBUG', 'true').lower() in TRUE_STR\n\nto set the value of `DENO_OUTPUT_MODULE_TYPE`_ which determines the type of Javascript modules generated, either\n``module`` for modern browsers that support es6 natively, or `SystemJS`_ modules, which are compatible with IE11::\n\n    # Do not forget to re-run collectrollup management command after changing rollup.js bundles module type:\n    DENO_OUTPUT_MODULE_TYPE = 'module' if DEBUG else 'systemjs-module'\n\nThe additional settings for `drollup`_ running `collectrollup`_ management command are specified with\n`DENO_ROLLUP_COLLECT_OPTIONS`_ setting, which allows to enable / disable `terser`_ compression::\n\n    # Run $VIRTUAL_ENV/djk-sample/cherry_django.py to check the validity of collectrollup command output bundle.\n    DENO_ROLLUP_COLLECT_OPTIONS = {\n        'terser': True,\n    }\n\nwhile the default is::\n\n    DENO_ROLLUP_COLLECT_OPTIONS = {\n        # 'relativePaths': True,\n        # 'staticFilesResolver': True,\n        'terser': True,\n        'bundles': getattr(settings, 'DENO_ROLLUP_BUNDLES', {}),\n        'moduleFormat': DENO_OUTPUT_MODULE_FORMATS[DENO_OUTPUT_MODULE_TYPE],\n    }\n\n\n* For the full default settings: `django_deno settings`_\n\nrunrollup\n~~~~~~~~~\n\n* ``runrollup`` - starts the built-in http development server, similar to Django `runserver`_ command, using `drollup`_\n  to dynamically generate Javascript bundle in RAM, providing real-time `es6 modules`_ compatibility for IE11.\n\n`DENO_ROLLUP_SERVE_OPTIONS`_ set the options for `drollup`_ for `runrollup`_ command, the default is::\n\n    DENO_ROLLUP_SERVE_OPTIONS = {\n        'inlineFileMap': True,\n        'relativePaths': True,\n        'preserveEntrySignatures': False,\n        'staticFilesResolver': True,\n        'withCache': True,\n    }\n\n* When ``staticFilesResolver`` is ``True``, `Django packages static files`_ uses `getStaticFilesResolver`_ at `Deno`_\n  server side.\n\ndeno_vendor\n~~~~~~~~~~~\n\n* ``deno_vendor`` management command generates updated `deno vendor`_ bundle for the built-in deno server. This command\n  should be used only for package updating / redistribution.\n\nUpdating `deno_vendor`_ should be performed with the following steps:\n\n* Run the project `collectrollup`_ command with the following ``settings.py`` to reload the dependencies::\n\n    DENO_USE_VENDOR = False\n    DENO_RELOAD = True\n    DENO_CHECK_LOCK_FILE = False\n\n* Run the project `collectrollup`_ command with the following ``settings.py`` to convert `deno lock.json`_ to\n  `deno import_map.json`_::\n\n    DENO_USE_VENDOR = False\n    DENO_RELOAD = False\n    DENO_CHECK_LOCK_FILE = True\n\n* Run the project `deno_vendor`_ command to create local `deno vendor`_::\n\n    python3 manage.py deno_vendor\n\n* Run the project `collectrollup`_ command with the following ``settings.py``, to use the updated local `deno_vendor`_::\n\n    DENO_USE_VENDOR = True\n    DENO_RELOAD = False\n    DENO_CHECK_LOCK_FILE = True\n\n* Optionally override the vendor dir in the repository and make the commit when necessary.\n\nBundles\n-------\nCreation of `rollup.js`_ bundles has two steps, first one is the definition of `Entry points`_, second is the\ndefinition of `Chunks`_. Both are specified in Django project ``settings.py``.\n\nEntry points\n~~~~~~~~~~~~\nAt the first step, one has to specify Javascript entry points with `DENO_ROLLUP_ENTRY_POINTS`_ setting, for example\n`djk-sample settings`_::\n\n    DENO_ROLLUP_ENTRY_POINTS = [\n        'sample/js/app.js',\n        'sample/js/club-grid.js',\n        'sample/js/member-grid.js',\n    ]\n\nThese are the top scripts of es6 module loader hierarchy.\n\nAlternatively, the script may specify ``use rollup`` directive at the first line of Javascript code, which is used for\nDjango packages entry points and is discouraged for project entry points.\n\nChunks\n~~~~~~\n\nTo specify manual bundles / chunks, `DENO_ROLLUP_BUNDLES`_ setting is used. For example `djk-sample settings`_::\n\n    DENO_ROLLUP_BUNDLES = {\n        'djk': {\n            'writeEntryPoint': 'sample/js/app.js',\n            'matches': [\n                'djk/js/*',\n                'djk/js/lib/*',\n                'djk/js/grid/*',\n            ],\n            'excludes': [],\n            'virtualEntryPoints': 'matches',\n            'virtualEntryPointsExcludes': 'excludes',\n        },\n    }\n\n* ``djk`` key specifies the chunk name which will result in generation of ``djk.js`` bundle.\n* ``writeEntryPoint`` key specifies main entry point, which is used to generate ``djk.js`` bundle. ``djk.js`` bundle is\n  shared among the some / all of `Entry points`_, reducing code redundancy.\n* ``matches`` key specifies the list of matching dirs which scripts that will be included into ``djk.js`` bundle.\n* ``excludes`` specifies the list of scripts which are excluded from the ``djk.js`` bundle.\n* ``virtualEntryPoints`` specifies either the list of dirs or ``matches`` string value to set `es6 modules`_ virtual\n  entry points. Such modules are bundled as a virtual ones, included into ``djk.js`` bundle only, not being duplicated\n  as separate standalone module files. See `isVirtualEntry`_ / `setVirtualEntryPoint`_ code for more info.\n\n* To see the actual settings / usage, demo apps `djk-sample`_ and `drf-gallery`_ are available.\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Dmitri-Sintsov/django-deno",
    "keywords": "django,deno,rollup,runserver,collectstatic",
    "license": "LGPL-3.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-deno",
    "package_url": "https://pypi.org/project/django-deno/",
    "platform": null,
    "project_url": "https://pypi.org/project/django-deno/",
    "project_urls": {
      "Homepage": "https://github.com/Dmitri-Sintsov/django-deno"
    },
    "release_url": "https://pypi.org/project/django-deno/0.1.2/",
    "requires_dist": [
      "Django",
      "jsonschema",
      "ijson",
      "requests",
      "psutil"
    ],
    "requires_python": "",
    "summary": "Deno front-end integration for Django",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14170791,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d9c13c8fb228fe1c3e8a81037d0a6180443d7689552ac9fda789d6ea16db1e4c",
          "md5": "7a9004bc8f1c2f79097928b2f426affb",
          "sha256": "c18dc0b0b74d2daf25d586522466420669130f474e1b0a9a633dfa33d85013d7"
        },
        "downloads": -1,
        "filename": "django_deno-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7a9004bc8f1c2f79097928b2f426affb",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 821613,
        "upload_time": "2022-03-15T10:23:25",
        "upload_time_iso_8601": "2022-03-15T10:23:25.858680Z",
        "url": "https://files.pythonhosted.org/packages/d9/c1/3c8fb228fe1c3e8a81037d0a6180443d7689552ac9fda789d6ea16db1e4c/django_deno-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e00db10e087285c0d005a9840637a9f06b953a2319b684e5c6bb505a62535caf",
          "md5": "faed79fef542cf1c155c1fd313501572",
          "sha256": "80abdd00ab4ce18a6d165417e2e89d074a088c6a998b10805b2096101f16d735"
        },
        "downloads": -1,
        "filename": "django-deno-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "faed79fef542cf1c155c1fd313501572",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 702614,
        "upload_time": "2022-03-15T10:23:28",
        "upload_time_iso_8601": "2022-03-15T10:23:28.096980Z",
        "url": "https://files.pythonhosted.org/packages/e0/0d/b10e087285c0d005a9840637a9f06b953a2319b684e5c6bb505a62535caf/django-deno-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "297faa32d898dacec14b20db0a0a94dd33ae3751b2ea3fd57c05d33f331ce332",
          "md5": "35e112bd0e46cd4f58f555d46ac27f6a",
          "sha256": "798e2d06074e4bf6f3d3ea930782c5418d39056817cd7c1f016e8297015c4bba"
        },
        "downloads": -1,
        "filename": "django_deno-0.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "35e112bd0e46cd4f58f555d46ac27f6a",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 821624,
        "upload_time": "2022-03-23T10:41:22",
        "upload_time_iso_8601": "2022-03-23T10:41:22.284752Z",
        "url": "https://files.pythonhosted.org/packages/29/7f/aa32d898dacec14b20db0a0a94dd33ae3751b2ea3fd57c05d33f331ce332/django_deno-0.1.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f30ebf77de6ec448c2a8065ad535c03c39586e9a2b6fd9bcaae482378aef7f2",
          "md5": "d73685b7625657a88a8f84d3a89628b7",
          "sha256": "90708dad5fd9cd9f64c0f0a4632bbcc2104f48ebb63894a5992029bb995db79b"
        },
        "downloads": -1,
        "filename": "django-deno-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d73685b7625657a88a8f84d3a89628b7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 712046,
        "upload_time": "2022-03-23T10:36:55",
        "upload_time_iso_8601": "2022-03-23T10:36:55.697469Z",
        "url": "https://files.pythonhosted.org/packages/0f/30/ebf77de6ec448c2a8065ad535c03c39586e9a2b6fd9bcaae482378aef7f2/django-deno-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "22b30481f898083e78d17dabe5bd5743ca0e89f138494f7cbf3513cb73addbdc",
          "md5": "72a0379a75ad270f1c5763ce24a46500",
          "sha256": "c511fabec1edca3c025c1718003fd0fc208d9c8e49602f3fee31b117b52896b7"
        },
        "downloads": -1,
        "filename": "django_deno-0.1.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "72a0379a75ad270f1c5763ce24a46500",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 819491,
        "upload_time": "2022-06-18T10:36:29",
        "upload_time_iso_8601": "2022-06-18T10:36:29.123258Z",
        "url": "https://files.pythonhosted.org/packages/22/b3/0481f898083e78d17dabe5bd5743ca0e89f138494f7cbf3513cb73addbdc/django_deno-0.1.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "42e0e8d78536e7eaeedd73c01fb531f1e52f1bb6ffca8f1bce0210a44225d1c6",
          "md5": "c89eea3b4e16ab85e692d0478784b687",
          "sha256": "357107a2aef6faa0fc9b843920d06fc14131c650b37f9b176cf281ca170bfdaa"
        },
        "downloads": -1,
        "filename": "django-deno-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c89eea3b4e16ab85e692d0478784b687",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 712105,
        "upload_time": "2022-06-18T10:36:31",
        "upload_time_iso_8601": "2022-06-18T10:36:31.683202Z",
        "url": "https://files.pythonhosted.org/packages/42/e0/e8d78536e7eaeedd73c01fb531f1e52f1bb6ffca8f1bce0210a44225d1c6/django-deno-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "22b30481f898083e78d17dabe5bd5743ca0e89f138494f7cbf3513cb73addbdc",
        "md5": "72a0379a75ad270f1c5763ce24a46500",
        "sha256": "c511fabec1edca3c025c1718003fd0fc208d9c8e49602f3fee31b117b52896b7"
      },
      "downloads": -1,
      "filename": "django_deno-0.1.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "72a0379a75ad270f1c5763ce24a46500",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 819491,
      "upload_time": "2022-06-18T10:36:29",
      "upload_time_iso_8601": "2022-06-18T10:36:29.123258Z",
      "url": "https://files.pythonhosted.org/packages/22/b3/0481f898083e78d17dabe5bd5743ca0e89f138494f7cbf3513cb73addbdc/django_deno-0.1.2-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "42e0e8d78536e7eaeedd73c01fb531f1e52f1bb6ffca8f1bce0210a44225d1c6",
        "md5": "c89eea3b4e16ab85e692d0478784b687",
        "sha256": "357107a2aef6faa0fc9b843920d06fc14131c650b37f9b176cf281ca170bfdaa"
      },
      "downloads": -1,
      "filename": "django-deno-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "c89eea3b4e16ab85e692d0478784b687",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 712105,
      "upload_time": "2022-06-18T10:36:31",
      "upload_time_iso_8601": "2022-06-18T10:36:31.683202Z",
      "url": "https://files.pythonhosted.org/packages/42/e0/e8d78536e7eaeedd73c01fb531f1e52f1bb6ffca8f1bce0210a44225d1c6/django-deno-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}