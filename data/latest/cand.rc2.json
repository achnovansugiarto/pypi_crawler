{
  "info": {
    "author": "Max Shinn",
    "author_email": "m.shinn@ucl.ac.uk",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Framework :: Matplotlib",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Visualization"
    ],
    "description": "CanD - Easily create complex layouts in Matplotlib\n--------------------------------------------------\n\n<img align=\"right\" src=\"https://raw.githubusercontent.com/mwshinn/CanD/master/cand-logo.png\" width=\"30%\" padding=\"50px\">\n\n*Do you plot in Matplotlib, build your diagrams in Inkscape or\nIllustrator, and then lay out your figures in InDesign or Powerpoint?\nDo you wish you could easily generate scientific figures exclusively\nin a single Python script?  CanD gives you the best of all possible worlds.*\n\nCanD features\n============\n\nCanD (CANvas Designer) is a system for laying out axes and plot\nelements in a figure within Python and Matplotlib.  It provides:\n\n- **A framework for precisely specifying the position of subplots.** Axes may be\n  individually positioned, positioned in grids, or a combination.\n- **Improved font management.** Alternative to the matplotlib font manager.  Any\n  system font may be easily used.  Fonts are synchronized across all text\n  present in the figure, including mathematical equations.  Currently this is\n  the only reliable cross-platform method for synchronizing fonts in matplotlib\n  to our knowledge.\n- **An affine algebra system for specifying positions.** Points and\n  vectors from different coordinate systems may be used\n  interchangeably.  This allows for unprecedented control over element\n  positioning.\n- **A unified interface for plot elements**.  This allows lines,\n  arrows, polygons, and text to be drawn with a single line of code.\n  For example, it is easy to draw an arrow from a data point in a\n  scatterplot to a plot in a different subpanel.\n- **Easy positioning of raster (.png) images.** Currently, importing\n  an image directly into matplotlib is difficult and results in\n  aliasing artifacts.  CanD allows .png images to be positioned just\n  like any other plot element.\n\nCanD does **not** provide:\n\n- Methods for plotting data.  CanD gives you a reference to the axis\n  object, with which you may use any of matplotlib's standard plotting\n  functions. [Seaborn](https://seaborn.pydata.org/) is a popular\n  library which creates elegant and attractive plots with\n  little effort, and is mostly compatible with CanD.\n- Zero-thought layouts.  CanD will not find a good layout for you.\n  If you want automatically-positioned subplots, CanD is not the\n  right choice for you. CanD will, however, make it easy to\n  implement a layout you have in your mind.\n\nCanD is currently pre-alpha software.  Examples and documentation will be\navailable eventually.  [Draft documentation on\nreadthedocs](https://cand.readthedocs.io/en/latest/tutorial.html) is currently\navailable.\n\nExample\n=======\n\n```python\nfrom cand import Canvas, Vector, Point\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\n\n# Create a canvas 10 cm x 15 cm.  Use Lucida as the font.\nc = Canvas(15, 10, \"cm\")\nc.set_font(\"Lucida Std\")\n\n# Add an axis from the point (2,2) to (14,8) in centimeters.  Name it \"sinewave\", \n# and plot a sine wave on it.\nc.add_axis(\"sinewave\", Point(2, 2, \"cm\"), Point(14, 8, \"cm\"))\nax = c.ax(\"sinewave\")\nax.plot(np.linspace(0, 2*np.pi, 500), np.sin(np.linspace(0, 2*np.pi, 500)))\nsns.despine(ax=ax)\n\n# Create an inset axis which is 1 x 1 inch, positioned on the right side of the \n# plot, 75% of the way across and 60% up on the \"sinewave\" axis.  Name it \"sineinset\".\ninsetsize = Vector(1, 1, \"inches\")\ninsetloc = Point(.75, .6, \"axis_sinewave\")\nc.add_axis(\"sineinset\", insetloc, insetloc+insetsize)\nc.ax(\"sineinset\").plot(np.linspace(0, np.pi), np.sin(np.linspace(0, np.pi)))\n\n# Add a arrow pointing to the peak of one sine wave to the other, i.e. (pi/2,1) \n# in data coordinates (i.e. units of the \"sinewave\" or \"sineinset\" axis).\nc.add_arrow(Point(np.pi/2, 1, \"sinewave\"), Point(np.pi/2, 1, \"sineinset\"))\n\n# Add a watermark of the CanD logo in the lower right corner.\nc.add_image(\"cand-logo.png\", Point(1, 0, \"figure\"), width=Vector(2, 0, \"cm\"), \n            ha=\"right\", va=\"bottom\")\n\n# Save as a .pdf file, and then show the result\nc.save(\"demo_plot.pdf\")\nc.show()\n```\n\n\n\nWhy CanD?\n=========\n\nMatplotlib is a powerful plotting library, but as a result of this\npower comes complexity.  Publication-quality figures require complex\nlayouts with tight positioning and alignment of multiple display\nelements across different axes.  They also often require mixing raster\nand vector images, and tight control over font size and style.  These\nare in practice quite difficult in matplotlib, not only because of the\namount of code required for these tasks, but also due to the\ndifficulty of keeping the different parts of the figure in sync with\nrespect to alignment and style.\n\nDue to this difficulty, users will often export plots from matplotlib\nand manually position them within PowerPoint, Inkscape, InDesign, or\nother software.  Without extra care, font sizes and line thicknesses\nmay not be consistent, and figures can easily get out of sync with one\nanother.\n\n\nInstallation\n============\n\nCanD depends on:\n\n- numpy\n- matplotlib\n- seaborn\n- paranoid-scientist (version 0.2.1 or greater)\n- PyMuPDF\n- Pillow\n\nInstall with:\n\n    pip install CanD\n\nor by downloading the package from github and running:\n\n    python setup.py install\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mwshinn/cand",
    "keywords": "",
    "license": "MIT",
    "maintainer": "Max Shinn",
    "maintainer_email": "m.shinn@ucl.ac.uk",
    "name": "CanD",
    "package_url": "https://pypi.org/project/CanD/",
    "platform": "",
    "project_url": "https://pypi.org/project/CanD/",
    "project_urls": {
      "Homepage": "https://github.com/mwshinn/cand"
    },
    "release_url": "https://pypi.org/project/CanD/0.0.2/",
    "requires_dist": [
      "numpy",
      "scipy",
      "matplotlib",
      "paranoid-scientist (>=0.2.1)",
      "PyMuPDF (>=1.16.0)",
      "Pillow"
    ],
    "requires_python": ">=3.5",
    "summary": "Create complex layouts for scientific figures in matplotlib",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11490153,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5eaeda40c729076bc3c01a77208a7ee10070ad7a6da58035e77bebe40c68d923",
          "md5": "f001ac1921fdf80e6ec096b7f093331d",
          "sha256": "496abf8cca35011b14fc5ee6f73bc11328aafc972a9f92946b5e7aabb8b663b2"
        },
        "downloads": -1,
        "filename": "CanD-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f001ac1921fdf80e6ec096b7f093331d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 25901,
        "upload_time": "2020-10-26T15:30:08",
        "upload_time_iso_8601": "2020-10-26T15:30:08.489204Z",
        "url": "https://files.pythonhosted.org/packages/5e/ae/da40c729076bc3c01a77208a7ee10070ad7a6da58035e77bebe40c68d923/CanD-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "600d083d700861f005019d7077e0bab905c661f9b9a496e216dcdafb18b9c488",
          "md5": "cb499f344ac00521cd9ae4895ec4e7aa",
          "sha256": "f3dc6e2d882abce1f9ff1ffea8af158683ae1eac63957581a9508dec32526d37"
        },
        "downloads": -1,
        "filename": "CanD-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "cb499f344ac00521cd9ae4895ec4e7aa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 25331,
        "upload_time": "2020-10-26T15:30:11",
        "upload_time_iso_8601": "2020-10-26T15:30:11.982780Z",
        "url": "https://files.pythonhosted.org/packages/60/0d/083d700861f005019d7077e0bab905c661f9b9a496e216dcdafb18b9c488/CanD-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e3b3727048c73b4ebc670766550c9860bb31725e18e935304911d84a0ed991ef",
          "md5": "bdaee0ee7a6aef6574e66573039f953b",
          "sha256": "96a89905dbd743e5eb7cfce1ec292deae661063a04f742721f6122ebeba4ac7b"
        },
        "downloads": -1,
        "filename": "CanD-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bdaee0ee7a6aef6574e66573039f953b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 27910,
        "upload_time": "2021-09-19T08:49:41",
        "upload_time_iso_8601": "2021-09-19T08:49:41.329697Z",
        "url": "https://files.pythonhosted.org/packages/e3/b3/727048c73b4ebc670766550c9860bb31725e18e935304911d84a0ed991ef/CanD-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b2f2dc4a89c21a2ab27ffd58ffd5d56630961f1a9e6331605ff2a83d0dcf8290",
          "md5": "41cc1f7df55d6578f6df3ef3f187d4ba",
          "sha256": "acf4a81f5f214681d6a66abe78adfeaaa4c5aae1280f7a177adbff2176c067bb"
        },
        "downloads": -1,
        "filename": "CanD-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "41cc1f7df55d6578f6df3ef3f187d4ba",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 27332,
        "upload_time": "2021-09-19T08:49:42",
        "upload_time_iso_8601": "2021-09-19T08:49:42.633870Z",
        "url": "https://files.pythonhosted.org/packages/b2/f2/dc4a89c21a2ab27ffd58ffd5d56630961f1a9e6331605ff2a83d0dcf8290/CanD-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e3b3727048c73b4ebc670766550c9860bb31725e18e935304911d84a0ed991ef",
        "md5": "bdaee0ee7a6aef6574e66573039f953b",
        "sha256": "96a89905dbd743e5eb7cfce1ec292deae661063a04f742721f6122ebeba4ac7b"
      },
      "downloads": -1,
      "filename": "CanD-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "bdaee0ee7a6aef6574e66573039f953b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 27910,
      "upload_time": "2021-09-19T08:49:41",
      "upload_time_iso_8601": "2021-09-19T08:49:41.329697Z",
      "url": "https://files.pythonhosted.org/packages/e3/b3/727048c73b4ebc670766550c9860bb31725e18e935304911d84a0ed991ef/CanD-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b2f2dc4a89c21a2ab27ffd58ffd5d56630961f1a9e6331605ff2a83d0dcf8290",
        "md5": "41cc1f7df55d6578f6df3ef3f187d4ba",
        "sha256": "acf4a81f5f214681d6a66abe78adfeaaa4c5aae1280f7a177adbff2176c067bb"
      },
      "downloads": -1,
      "filename": "CanD-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "41cc1f7df55d6578f6df3ef3f187d4ba",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 27332,
      "upload_time": "2021-09-19T08:49:42",
      "upload_time_iso_8601": "2021-09-19T08:49:42.633870Z",
      "url": "https://files.pythonhosted.org/packages/b2/f2/dc4a89c21a2ab27ffd58ffd5d56630961f1a9e6331605ff2a83d0dcf8290/CanD-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}