{
  "info": {
    "author": "Sujeet Kumar",
    "author_email": "sujeetkv90@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content :: Page Counters",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Utilities"
    ],
    "description": "# py-paginator\nPaginator to generate page numbers for pagination\n\n[![Build Status](https://travis-ci.org/sujeetkv/py-paginator.svg?branch=master)](https://travis-ci.org/sujeetkv/py-paginator)\n\n## Usage Example with flask framework\n\n- **app.py**:\n\n```python\nfrom flask import Flask, request, render_template\nfrom py_paginator import Paginator\n\napp = Flask(__name__)\napp.jinja_env.add_extension('jinja2.ext.do')\n\n@app.route('/')\ndef home():\n    page = int(request.args.get('page', 1))\n    limit = 20\n\n    records_count = get_records_count() # get records count from storage\n\n    paginator = Paginator(total_items=records_count, item_limit=limit, curr_page=page)\n\n    records = get_records(limit=paginator.item_limit, offset=paginator.item_offset) # get records from storage\n\n    return render_template('home.html', records=records, paginator=paginator)\n```\n\n Here `paginator.item_limit` and `paginator.item_offset` can be used in database query to apply limit. `paginator` object can be used in templates to create pagination links.\n\n- **templates/macros.html**:\n\n```html\n{#\n    :paginator: Paginator object\n    :endpoint: flask request endpoint\n    :pager: If True it will show a pager instead of numbered pagination\n\n    - you can also pass further arguments that will be passed into `url_for()` of every link.\n#}\n{% macro render_pagination(paginator, endpoint=request.endpoint, pager=False) %}\n    {% if paginator.has_pages %}\n        {% do kwargs.update(request.args) %}\n        {% do kwargs.pop('page', None) %}\n        <nav aria-label=\"Page navigation\">\n            {% if pager %}\n                {% set pager = paginator.get_pager() %}\n                <ul class=\"pager\">\n                    <li class=\"previous{% if not paginator.has_prev %} disabled{% endif %}\">\n                        {% do kwargs.update({'page': pager.prev}) %}\n                        <a href=\"{% if paginator.has_prev %}{{ url_for(endpoint, **kwargs) }}{% else %}#{% endif %}\"><span aria-hidden=\"true\">&laquo;</span> Prev</a>\n                    </li>\n                    <li class=\"next{% if not paginator.has_next %} disabled{% endif %}\">\n                        {% do kwargs.update({'page': pager.next}) %}\n                        <a href=\"{% if paginator.has_next %}{{ url_for(endpoint, **kwargs) }}{% else %}#{% endif %}\">Next <span aria-hidden=\"true\">&raquo;</span></a>\n                    </li>\n                </ul>\n            {% else %}\n                <ul class=\"pagination\">\n                    {% for page_type, page_num in paginator.get_pages() %}\n                        {% do kwargs.update({'page': page_num}) %}\n                        {% if page_type == 'prev' %}\n                            {% if page_num %}\n                                <li><a href=\"{{ url_for(endpoint, **kwargs) }}\" aria-label=\"Previous\"><span aria-hidden=\"true\">&laquo;</span></a></li>\n                            {% else %}\n                                <li class=\"disabled\"><span><span aria-hidden=\"true\">&laquo;</span></span></li>\n                            {% endif %}\n                        {% elif page_type == 'next' %}\n                            {% if page_num %}\n                                <li><a href=\"{{ url_for(endpoint, **kwargs) }}\" aria-label=\"Next\"><span aria-hidden=\"true\">&raquo;</span></a></li>\n                            {% else %}\n                                <li class=\"disabled\"><span><span aria-hidden=\"true\">&raquo;</span></span></li>\n                            {% endif %}\n                        {% elif page_type == 'ellip' %}\n                            <li class=\"disabled\"><span><span aria-hidden=\"true\">&hellip;</span></span></li>\n                        {% elif page_type == 'curr' %}\n                            <li class=\"active\"><span>{{ page_num }}</span></li>\n                        {% else %}\n                            <li><a href=\"{{ url_for(endpoint, **kwargs) }}\">{{ page_num }}</a></li>\n                        {% endif %}\n                    {% endfor %}\n                </ul>\n            {% endif %}\n        </nav>\n    {% endif %}\n{% endmacro %}\n```\n\n- **templates/home.html**:\n\n```html\n{% from \"macros.html\" import render_pagination with context %}\n\n<h1>Total Records: {{ paginator.total_items }}</h1>\n<h2>Total Pages: {{ paginator.total_pages }}</h2>\n\n{% for record in records %}\n    <p>{{ loop.index + paginator.item_offset }} - {{ record.field_name }}</p>\n{% else %}\n    <p>No Records found.</p>\n{% endfor %}\n\n{{ render_pagination(paginator) }}\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sujeetkv/py-paginator",
    "keywords": "paginator py_paginator py-paginator",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "py-paginator",
    "package_url": "https://pypi.org/project/py-paginator/",
    "platform": "any",
    "project_url": "https://pypi.org/project/py-paginator/",
    "project_urls": {
      "Homepage": "https://github.com/sujeetkv/py-paginator"
    },
    "release_url": "https://pypi.org/project/py-paginator/1.0.2/",
    "requires_dist": null,
    "requires_python": ">=2.7",
    "summary": "Paginator to generate page numbers for pagination",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4565244,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bfd68388ce21173e7b4df9e2606342d4219c3a08f20c6bb7e2925e13355694bc",
          "md5": "40fe2e183f04c1bae786e5068d9397c8",
          "sha256": "0c2b1691d33d75eec29e85fb8e92e2634b6483bc9fdade3e70fd54924be38fa8"
        },
        "downloads": -1,
        "filename": "py_paginator-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "40fe2e183f04c1bae786e5068d9397c8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 4835,
        "upload_time": "2018-12-04T20:59:09",
        "upload_time_iso_8601": "2018-12-04T20:59:09.799517Z",
        "url": "https://files.pythonhosted.org/packages/bf/d6/8388ce21173e7b4df9e2606342d4219c3a08f20c6bb7e2925e13355694bc/py_paginator-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f6d7ac3e73338d4843790b590d9208da313ae84a20155c6dac78419d242de490",
          "md5": "0887a97c91ccdecb0adbdc9fbd0d2e36",
          "sha256": "3206b7e9c4c8ac877ea2b9ee16915c32784a8e0f5d2ced3e762cd3419ce714e5"
        },
        "downloads": -1,
        "filename": "py_paginator-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0887a97c91ccdecb0adbdc9fbd0d2e36",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 5276,
        "upload_time": "2018-12-05T19:59:30",
        "upload_time_iso_8601": "2018-12-05T19:59:30.691735Z",
        "url": "https://files.pythonhosted.org/packages/f6/d7/ac3e73338d4843790b590d9208da313ae84a20155c6dac78419d242de490/py_paginator-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f6d7ac3e73338d4843790b590d9208da313ae84a20155c6dac78419d242de490",
        "md5": "0887a97c91ccdecb0adbdc9fbd0d2e36",
        "sha256": "3206b7e9c4c8ac877ea2b9ee16915c32784a8e0f5d2ced3e762cd3419ce714e5"
      },
      "downloads": -1,
      "filename": "py_paginator-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "0887a97c91ccdecb0adbdc9fbd0d2e36",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=2.7",
      "size": 5276,
      "upload_time": "2018-12-05T19:59:30",
      "upload_time_iso_8601": "2018-12-05T19:59:30.691735Z",
      "url": "https://files.pythonhosted.org/packages/f6/d7/ac3e73338d4843790b590d9208da313ae84a20155c6dac78419d242de490/py_paginator-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}