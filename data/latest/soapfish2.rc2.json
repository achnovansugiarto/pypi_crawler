{
  "info": {
    "author": "Damian Powązka",
    "author_email": "dpowazka@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Flask",
      "Framework :: Pyramid",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "Soapfish\n========\n\n[![Travis](https://img.shields.io/travis/soapteam/soapfish/master.svg)](https://travis-ci.org/soapteam/soapfish)\n[![PyPI](https://img.shields.io/pypi/v/soapfish.svg)](https://pypi.org/project/soapfish/)\n[![PyPI](https://img.shields.io/pypi/l/soapfish.svg)](https://pypi.org/project/soapfish/)\n[![PyPI](https://img.shields.io/pypi/dm/soapfish.svg)](https://pypi.org/project/soapfish/)\n[![PyPI](https://img.shields.io/pypi/pyversions/soapfish.svg)](https://pypi.org/project/soapfish/)\n[![PyPI](https://img.shields.io/pypi/status/soapfish.svg)](https://pypi.org/project/soapfish/)\n[![PyPI](https://img.shields.io/pypi/wheel/soapfish.svg)](https://pypi.org/project/soapfish/)\n\n[![No Maintenance Intended](http://unmaintained.tech/badge.svg)](http://unmaintained.tech/)\n\n**This project is not actively maintained. If you only need a dynamic client using a predefined WSDL rather than\ngenerated code, it is recommended that you check out [Zeep](https://pypi.org/project/zeep/).**\n\nIntroduction\n------------\n\nSoapfish is a library to use SOAP services in Python. The server-side component can be used with Django, Flask, Pyramid\nand other frameworks (including plain WSGI). The library can also be used to implement SOAP clients.\n\nThe library can help parsing/serializing a Python class model from/to XML and a bare-bones SOAP client.\n\nCurrently the project supports the following:\n\n- SOAP 1.1 and 1.2\n- WSDL 1.1\n- WS-Addressing\n\nOther notable features include:\n\n- Support for Python 3.6+\n- Licensed under the 3-clause BSD license\n- Code generation utilities to get started quickly\n- Parsing/serializing a Python class model from/to XML so you can easily work\n  with XML even if you don't use SOAP at all.\n\nAuthors\n=======\n\nSoapfish was originally written by Damian Powązka while working at Flight Data\nServices. At that time it was called Soapbox and from February 2012 was\nmaintained by Flight Data Services. The project was forked in November 2013 by\nFelix Schwarz (based on the last BSD-licensed commit), after which a large\nnumber of new features were added by Thomas Recouvreux and Xavier Fernandez\nfrom Polyconseil between February and June 2014. Iuri de Silvio from Pricez\nadded some features and fixed numerous bugs during 2015. In early 2016, Flight\nData Services retired the unmaintained Soapbox project in favour of Soapfish.\n\n**Original Author:**\n\n- Damian Powązka (Flight Data Services)\n\n**Maintainers:**\n\n- Felix Schwarz (sponsored by Rechenzentrum für Berliner Apotheken Stein & Reichwald GmbH)\n- Nick Pope (Flight Data Services)\n- Iuri de Silvio (Pricez)\n\n**Major Contributors:**\n\n- Thomas Recouvreux (Polyconseil)\n- Xavier Fernandez (Polyconseil)\n\nChanges\n=======\n\n0.6.0 (2020-??-??)\n------------------\n\nProject has been renamed to `soapfish` to distinguish it from the legacy\n`soapbox` project and allow for publishing the project on PyPI. Note that the\nrename effectively makes it backwards incompatible with previous releases due\nto API breakage.\n\nDue to lack of time to maintain the original `soapbox` project, `soapbox` been\nretired by Flight Data Services who now contribute to and recommend the use of\nthe `soapfish` fork.\n\n- **Security:**\n  - Fixed potential security issue - pattern restrictions were not applied correctly\n- **Features:**\n  - Add support for xsd.date (date range currently limited by datetime.date)\n  - Add support relative schema paths (#49)\n  - Add support to string restrictions length, minLength, maxLength, whiteSpace (#67)\n  - Add support for choice indicator in ComplexTypes (#39)\n    - Fixes validation of matching XML documents - previously sequences were always assumed - and code generation from WSDL/XSD.\n    - _Patch contributed by Martin Mrose, tests written by Felix Schwarz_\n  - Implemented a dispatcher for Flask (#53)\n  - Implement service.route function to avoid changes to generated code (#68)\n  - Changed to use `requests` instead of `httplib2`.\n  - Added support for multiple inline schema imports and includes.\n  - Added support for import of other WSDL documents.\n  - Support for reordering of schema imports and includes and handle circular imports.\n- **Bug Fixes:**\n  - Make xsd.Decimal field accept Python Decimal (#52)\n  - Fix relative imports with remote files. (#96)\n  - Schema validation now also uses imported schemas correctly\n  - Various fixes for `wsdl2py` and `xsd2py` when using Python 3\n  - Fix exception in `SOAPDispatcher` when a handler does not return a `SOAPResponse`\n  - Fix bad WSDL generation due to unresolved type references\n  - Correctly apply pattern restrictions for simple types\n  - Pattern restriction was not correctly serialized when generating schemas\n  - Omit `minOccurs=1` and `maxOccurs=1` in `xsd2py` as these are the default.\n    (The latter produces invalid code because `xsd.Element` doesn't support it.)\n  - Restored ability to validate parsed XML using a soapfish schema in `ComplexType`\n  - Fixed WSDL classes to more closely match the WSDL specifications.\n  - Fixed WSDL classes to correctly define SOAP extensibility elements.\n  - Removed reverse references from WSDL classes.\n  - Fixed query string handling in dispatch to be more robust.\n  - Support importing documents over HTTPS.\n  - Fixed detection of XML schema namespaces.\n  - Attempts to fix handling of remote vs local imports.\n- **Miscellaneous:**\n  - Renamed `SoapboxRequest` and `SoapboxResponse` to `SOAPRequest` and `SOAPResponse` respectively.\n  - Support Python 3.6+, Django 1.11, 2.2 & 3.0, and Flask 1.0.0+\n  - Improved testing against different versions of Python, Django & Flask.\n  - Improved entry points for generation scripts - additional flags, etc.\n  - Moved to using an external dependency for `iso8601`\n\n0.5.1 (2014-06-12)\n------------------\n\n- **Miscellaneous:**\n  - Downgrade log level on soap action discovery.\n\n0.5.0 (2014-06-12)\n------------------\n\n- **Miscellaneous:**\n  - Make elements inherit from schema namespace\n  - Better logging in soap/stub\n  - soap12: Quotes around action in HTTP header\n\n0.4.0 (2014-05-06)\n------------------\n\nProject forked by Felix Schwarz as `soapbox-bsd` due to licensing incompatibilities.\n\nFlight Data Services started using the GPL-incompatible OSL for the `soapbox`\nproject. This fork is based on the last `soapbox` commit still using the\noriginal 3-clause BSD license (7d3516fe).  Later on the fork received\nsignificant contributions from Thomas Recouvreux and Xavier Fernandez\n(Polyconseil).\n\n- **Features:**\n  - Added support for SOAP 1.2 and WSDL 1.2\n  - Added support for WS-Addressing\n  - Added support for fault actors (Damian Powązka)\n  - Added support for Django >= 1.4\n  - Added compatibility with Python 3\n  - Added framework-agnostic SOAP dispatcher to support virtually any web framework.\n- **Bug Fixes:**\n  - Preserve `elementFormDefault` attribute in Schema\n  - Many bug fixes for code generation and XML rendering\n- **Miscellaneous:**\n  - Ability to use custom SOAP headers\n  - Middleware stack to hook into SOAP request processing\n  - Better handling of invalid SOAP requests, e.g. missing bodies, invalid actions.\n\n0.3.2 (2012-03-09)\n------------------\n\n- **Miscellaneous:**\n  - Initial support for variable URL scheme and host\n  - Test suite executes\n\n0.3.1 (2012-03-08)\n------------------\n\n- **Miscellaneous:**\n  - SSL certificate verification\n\n0.3.0 (2012-03-02)\n------------------\n\n- **Features:**\n  - Add option to disable schema validation on parsing:\n    - Set `xsd.VALIDATE_ON_PARSE` to `False`.\n  - Added some initial logging support:\n    - Request logging available at when level set to DEBUG.\n- **Bug Fixes:**\n  - Allow unicode as a valid type for strings.\n  - Check for Python keywords and prefix with underscore.\n- **Miscellaneous:**\n  - Python code templates now loaded from external files.\n  - Generated code is now much cleaner.\n  - Generated code is now timestamped.\n  - Code tidying as reported by pyflakes and pep8.\n  - Fixed a number of typographical errors.\n  - Various name improvements to functions.\n  - Updated .hgignore\n- **Known Issues:**\n  - Generated schema classes can be circular referencing.\n\nTo Do\n=====\n\nThis project is very, very promising:\n\n- It is focused on XML and SOAP/WSDL without any compromise. In an ideal world\n  soapfish works with each and every syntax allowed by these technologies.\n- It allows you to have a representation of arbitrary XML including support\n  for XSD. Parse any XML described by a schema into a nice class-based tree\n  (and the other way round: serialization is possible as well).\n- Because soapfish supports only SOAP and no other remoting protocol (e.g.\n  ReST-style APIs with JSON) the API is not tied to the lowest common\n  denominator. You should be able implement any given WSDL.\n\nUnfortunately we're not there yet.\n\nThis is a typical open source software and XML/SOAP is usually not perceived\nas a fun project. So various users added some smaller features which they\nneeded but typically there are many incomplete implementations above the very\nbasic layer (the object model to represent XML/XSD programmatically).\nOn the upside that means there are a lot of ways to improve the code and your\ncontribution and make a big difference.\n\nHere some bigger areas which need work:\n\n- A much more comprehensive set of unit tests\n- Implement support for additional web frameworks\n- XSD schema generation (object graph to XSD file) has most of its logic in a\n  very complex Jinja2 template which shows it limits. For example features like\n  named xs:Elements with embedded anonymous ComplexTypes can not be serialized\n  to XSD currently.\n  However the code internally assumes that the class tree and the XSD\n  representation contain the same information so this can lead to bugs.\n- The XSD mapping is currently incomplete: Some types in schemas are not\n  implemented at all (e.g. xs:date, xs:gYearMonth). Other types might not be\n  parsed/serialized correctly. Also references to xs:elements are pretty\n  incomplete right now.\n- Generated code (e.g. WSDL handling or XSD mapping) usually has some syntax\n  errors. Some of them are fixable on their own but often this is because of\n  other missing features (see above). The output should be usable as\n  scaffolding though.\n\nDon't worry if the items on the list above seem to big for you. Just start out\nwith something small, write tests and contribute them. Even a small (failing)\nunit test which demonstrates a current shortcoming is great.\n\nYou might also check out current skipped unit tests which usually represent\nmissing functionality (though these might not be ideal beginner projects - if\nthey were trivial to implement I would have done that already).\n\nAll these shortcomings and limitations exist only because of the lack of\ntime and/or awareness about certain XSD features. The goal of this library is\nto fully implement XSD schemas and potentially SOAP/WSDL so patches (with tests)\nare always welcome.\n\nSpecific Items\n--------------\n\n- Fix circular dependency of generated schema classes.\n\nSee the **TODO** markers in `soapfish/*.py` for a complete list.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "http://soapfish.org/releases/",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://soapfish.org/",
    "keywords": "soap,wsdl,xsd,xml,schema,web service",
    "license": "BSD-3-Clause",
    "maintainer": "Felix Schwarz",
    "maintainer_email": "felix.schwarz@oss.schwarz.eu",
    "name": "soapfish2",
    "package_url": "https://pypi.org/project/soapfish2/",
    "platform": "",
    "project_url": "https://pypi.org/project/soapfish2/",
    "project_urls": {
      "Download": "http://soapfish.org/releases/",
      "Homepage": "http://soapfish.org/"
    },
    "release_url": "https://pypi.org/project/soapfish2/0.7.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "No official SOAP library for Python",
    "version": "0.7.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10434080,
  "releases": {
    "0.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4082a6b2a53481e1c224a31bac9eb6173ae247466d9ccadeb4f32c0e6fba4ed0",
          "md5": "352cacd99177cc5d61bb842adf1f5307",
          "sha256": "068dcf4d8f1623f270a8247de14a33cf4565248721c6c04fa7859e43a76f6125"
        },
        "downloads": -1,
        "filename": "soapfish2-0.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "352cacd99177cc5d61bb842adf1f5307",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 89538,
        "upload_time": "2020-09-06T02:23:24",
        "upload_time_iso_8601": "2020-09-06T02:23:24.026166Z",
        "url": "https://files.pythonhosted.org/packages/40/82/a6b2a53481e1c224a31bac9eb6173ae247466d9ccadeb4f32c0e6fba4ed0/soapfish2-0.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "118045f2dc681286541468e7bc1e97d6950896ab54072f2c3fbaac175fe707d9",
          "md5": "c970374a9ab0eba873d626895b0a2725",
          "sha256": "aa6e85f73bf14e6983715f3baae648f7981664eda1163f956ca4b88e6a019a66"
        },
        "downloads": -1,
        "filename": "soapfish2-0.7.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c970374a9ab0eba873d626895b0a2725",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 89586,
        "upload_time": "2021-05-22T04:25:24",
        "upload_time_iso_8601": "2021-05-22T04:25:24.355697Z",
        "url": "https://files.pythonhosted.org/packages/11/80/45f2dc681286541468e7bc1e97d6950896ab54072f2c3fbaac175fe707d9/soapfish2-0.7.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "118045f2dc681286541468e7bc1e97d6950896ab54072f2c3fbaac175fe707d9",
        "md5": "c970374a9ab0eba873d626895b0a2725",
        "sha256": "aa6e85f73bf14e6983715f3baae648f7981664eda1163f956ca4b88e6a019a66"
      },
      "downloads": -1,
      "filename": "soapfish2-0.7.1.tar.gz",
      "has_sig": false,
      "md5_digest": "c970374a9ab0eba873d626895b0a2725",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 89586,
      "upload_time": "2021-05-22T04:25:24",
      "upload_time_iso_8601": "2021-05-22T04:25:24.355697Z",
      "url": "https://files.pythonhosted.org/packages/11/80/45f2dc681286541468e7bc1e97d6950896ab54072f2c3fbaac175fe707d9/soapfish2-0.7.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}