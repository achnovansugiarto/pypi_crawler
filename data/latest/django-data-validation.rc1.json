{
  "info": {
    "author": "Oliver Chambers",
    "author_email": "django.data.validation@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Django :: 2.0",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: CPython"
    ],
    "description": ".. role:: sh(code)\n    :language: bash\n\n.. role:: py(code)\n    :language: python\n\n\nDJANGO-DATA-VALIDATION\n++++++++++++++++++++++\n\n.. image:: https://readthedocs.org/projects/django-data-validation/badge/?version=latest\n   :target: https://django-data-validation.readthedocs.io/en/latest/?badge=latest\n   :alt: Documentation Status\n\n** :warning: this app is still in alpha. expect breaking changes :warning: **\n\nA Django app to manage the validation of your data. Inspired by `django-data-tests <https://github.com/andrewbird2/django-data-tests>`_\n\nread the documentation: `<https://django-data-validation.readthedocs.io>`_\n\nwrite tests on your Django models and view the summary in the admin\n\n.. image:: https://raw.githubusercontent.com/VersBersh/django-data-validation/master/screenshot.png\n    :width: 100%\n    :alt: screenshot of the admin page\n\nrun the validation when adding/changing an object via django admin\n\n.. image:: https://raw.githubusercontent.com/VersBersh/django-data-validation/master/screenshot2.png\n    :width: 100%\n    :alt: screenshot of a default admin change form\n\n.. quick-start-marker\n\n.. role:: sh(code)\n    :language: bash\n\n.. role:: py(code)\n    :language: python\n\n\nQuick Start\n===========\n\nRequirements\n------------\n\n- python >= 3.6\n- django >= 2.2\n- djangorestframework (tested against 3.11)\n\n\nInstallation\n------------\n\nclone the repo\n\n.. code-block:: bash\n\n    git clone https://github.com/VersBersh/django-data-validation.git\n\nchange to the django-data-validation directory and install with pip\n\n.. code-block:: bash\n\n    pip install .\n\nIn your project, add :py:`rest_framework` and :py:`datavalidation` to :py:`INSTALLED_APPS`\n\n.. code-block:: python\n\n    INSTALLED_APPS = (\n        ...\n        \"rest_framework\",\n        \"datavalidation.apps.DataValidationConfig\",\n        ...\n    )\n\nfrom your project directory run the database migrations\n\n.. code-block:: bash\n\n    ./manage.py migrate datavalidation\n\nWhen running the django-admin server the static files for the datavalidation admin will be served automatically (assuming :py:`\"django.contrib.staticfiles\"` is in :py:`INSTALLED_APPS`). Otheriwse, you should also run\n\n.. code-block:: bash\n\n    ./manage.py collectstatic\n\n\nBasic Usage\n-----------\n\nOn any django model that has data that you would like to validate, add a method decorated with :py:`@data_validator` that returns :py:`PASS`, :py:`FAIL` or :py:`NA`. For instance if you have a model with a start and end time, you can add a data_validator to check that the start time is always before the end time\n\n.. code-block:: python\n\n    from django.db import models\n    from datavalidation import data_validator, PASS, FAIL, NA\n\n    class YourModel(models.Model):\n        ...\n        start_time = models.DateTimeField()\n        end_time = models.DateTimeField(blank=True, null=True)\n        ...\n\n        @data_validator\n        def check_start_time(self):\n            \"\"\" check that the start time is before end time \"\"\"\n            if self.end_time is None:\n                return NA(\"end time not set\")\n            elif self.start_time < self.end_time:\n                return PASS\n            else:\n                return FAIL(\"end time is before start time!\")\n\n\nTo run the validation for all models\n\n.. code-block:: bash\n\n    ./manage.py validate\n\nor for a specific model\n\n.. code-block:: bash\n\n    ./manage.py validate yourapp.YouModel\n\n.. nb. the :ref: directive won't work from the readme so we have to link directly\n\nSee `Writing Data Validators <https://django-data-validation.readthedocs.io/en/latest/data_validators.html>`_ for more details and examples of data validators\n\nOptionally, you can add the ``data_validaiton.models.DataValidationMixin`` to your models to provide some additional methods for querying the validation results\n\n.. code-block:: python\n\n    from datavalidation.models import DataValidationMixin\n\n    class YouModel(DataValidationMixin, models.Model):\n        ...\n\n    # in a shell\n    print(YouModel.datavalidation_status)\n    >>> Status.PASSING  # hopefully :)\n\n\nFinally, you can also add ``data_validaiton.admin.DataValidationMixin`` to your django admin classes to review the data in the admin. See `Setting up the Admin <https://django-data-validation.readthedocs.io/en/latest/admin.html>`_ for details.\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/VersBersh/django-data-validation",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-data-validation",
    "package_url": "https://pypi.org/project/django-data-validation/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-data-validation/",
    "project_urls": {
      "Homepage": "https://github.com/VersBersh/django-data-validation"
    },
    "release_url": "https://pypi.org/project/django-data-validation/0.0.1/",
    "requires_dist": [
      "django (>=2.2)",
      "django-enumfields (>=2.0.0)",
      "djangorestframework (>=3.1)",
      "termcolor",
      "tqdm",
      "dataclasses ; python_version < \"3.7\""
    ],
    "requires_python": "~=3.6.0",
    "summary": "A Django app to manage the validation of your data.",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7784946,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8ab80acf112974c60a3ff41fd50b5687c9ebcb15f352308b3509a44e7e4b93f5",
          "md5": "d1b0a05d4608ceccf0de287b4494655c",
          "sha256": "ebd37b7725374d2ff21618b0bb08f0bdb2a9abbd78d09b8a9f3aedf60ce01358"
        },
        "downloads": -1,
        "filename": "django_data_validation-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d1b0a05d4608ceccf0de287b4494655c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.6.0",
        "size": 1163064,
        "upload_time": "2020-07-25T13:20:44",
        "upload_time_iso_8601": "2020-07-25T13:20:44.954662Z",
        "url": "https://files.pythonhosted.org/packages/8a/b8/0acf112974c60a3ff41fd50b5687c9ebcb15f352308b3509a44e7e4b93f5/django_data_validation-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9815cceaf8d7cd78145c7c31deab4c04cd92f7c6cba209e11a011ce59e04ed12",
          "md5": "09760125ba64209d291b804a5c77ed7c",
          "sha256": "fcab65483107afd8241a19e9501f8173a0a5a5e814584fa8370ecc76e19e550f"
        },
        "downloads": -1,
        "filename": "django-data-validation-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "09760125ba64209d291b804a5c77ed7c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.6.0",
        "size": 1140960,
        "upload_time": "2020-07-25T13:20:50",
        "upload_time_iso_8601": "2020-07-25T13:20:50.490785Z",
        "url": "https://files.pythonhosted.org/packages/98/15/cceaf8d7cd78145c7c31deab4c04cd92f7c6cba209e11a011ce59e04ed12/django-data-validation-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8ab80acf112974c60a3ff41fd50b5687c9ebcb15f352308b3509a44e7e4b93f5",
        "md5": "d1b0a05d4608ceccf0de287b4494655c",
        "sha256": "ebd37b7725374d2ff21618b0bb08f0bdb2a9abbd78d09b8a9f3aedf60ce01358"
      },
      "downloads": -1,
      "filename": "django_data_validation-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d1b0a05d4608ceccf0de287b4494655c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": "~=3.6.0",
      "size": 1163064,
      "upload_time": "2020-07-25T13:20:44",
      "upload_time_iso_8601": "2020-07-25T13:20:44.954662Z",
      "url": "https://files.pythonhosted.org/packages/8a/b8/0acf112974c60a3ff41fd50b5687c9ebcb15f352308b3509a44e7e4b93f5/django_data_validation-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9815cceaf8d7cd78145c7c31deab4c04cd92f7c6cba209e11a011ce59e04ed12",
        "md5": "09760125ba64209d291b804a5c77ed7c",
        "sha256": "fcab65483107afd8241a19e9501f8173a0a5a5e814584fa8370ecc76e19e550f"
      },
      "downloads": -1,
      "filename": "django-data-validation-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "09760125ba64209d291b804a5c77ed7c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "~=3.6.0",
      "size": 1140960,
      "upload_time": "2020-07-25T13:20:50",
      "upload_time_iso_8601": "2020-07-25T13:20:50.490785Z",
      "url": "https://files.pythonhosted.org/packages/98/15/cceaf8d7cd78145c7c31deab4c04cd92f7c6cba209e11a011ce59e04ed12/django-data-validation-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}