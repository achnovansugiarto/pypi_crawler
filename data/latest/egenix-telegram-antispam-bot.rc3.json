{
  "info": {
    "author": "eGenix.com Software, Skills and Services GmbH",
    "author_email": "info@egenix.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Environment :: No Input/Output (Daemon)",
      "Framework :: AsyncIO",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: C",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.9",
      "Topic :: Communications",
      "Topic :: Communications :: Chat",
      "Topic :: Internet",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Application Frameworks",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Utilities"
    ],
    "description": "eGenix Antispam Bot for Telegram\n================================\n\nThis bot package provides a simple, yet effective way to deal with spam\nsignups to [Telegram Messenger](https://telegram.org/) (TG) groups.\nUnfortunately, these have grown to a level that is not manually\nmanageable anymore (see [Motivation](#motivation) below for details).\n\nFeatures\n--------\n\n- Low impact mode of operation: the bot tries to keep noise in the group\n  to a minimum\n- Several challenge mechanisms to choose from, more can be added as\n  needed\n- Flexible and easy to use configuration\n- Only needs a few MB of RAM, so can easily be put into a container or run\n  on a Raspberry Pi\n- Can handle quite a bit of load due to the async implementation\n\nRequirements\n------------\n\n- Python 3.9+\n- [pyrogram](https://github.com/pyrogram/pyrogram) package (see\n  requirements.txt)\n- only tested on Linux\n\nPreparation\n-----------\n\nIn order to run the bot and connect it to your TG group(s), you will\nfirst have to get API tokens from TG. Please see\nhttps://core.telegram.org/api/obtaining_api_id#obtaining-api-id for\ndetails on how to obtain the two credentials API ID and hash.\n\n⚠️ The API credentials are bound to the TG account you create them with and\ncan be used to even delete the account, so keep them safe.\n\nNext, you need to register a bot with TG. This can be done by chatting\nwith the TG BotFather. See\nhttps://core.telegram.org/bots#3-how-do-i-create-a-bot for details. The\nBotFather will send you a Bot token.\n\nInstallation\n------------\n\nIt is best to install the bot inside a\n[venv](https://docs.python.org/3/library/venv.html). You can use the\nvirtual env tool of your choice to set this up.\n\nThen install the package, using pip:\n\n```bash\npip3 install telegram_antispam_bot\n```\n\n### Installation using Docker\n\nIf you want to run the bot using Docker, have a look at the `docker/`\nsubdir in the source distribution. After configuring the bot in\n`docker/config/tgbot_env` you can then run the bot by running:\n\n```bash\ncd docker/\ndocker-compose up -d\n```\n\nBe sure to check the logs using ``docker-compose tgbot logs`` for any\nerrors that may occur. You can also without \"-d\" (no detach) to see the\nlogs written to the console for testing purposes.\n\nConfiguration\n-------------\n\nThe simplest way to configure the bot is via OS environment variables\n(env vars), but you can also put the configuration into a Python module\n`local_config.py` which Python can find on the sys.path. See\n`telegram_antispam_bot/config.py` for details.\n\nWe'll go with the env var approach. All env vars use the prefix \"TG_\" to\navoid getting in the way with other env vars.\n\nThe most important variables to set are these:\n\n- `TG_API_ID`: Use the API ID you received from TG.\n\n- `TG_API_HASH`: Use the API hash you received from TG. This is secret\n  information.\n\n- `TG_BOT_TOKEN`: Use the Bot token you received from the BotFather.  This\n  is secret information.\n\n- `TG_SESSION_NAME`: Session database name to use. Defaults to\n  'antispambot'. You only need to set this in case you plan to run\n  multiple bot instances from the same directory.\n\n### Limiting the attack surface\n\nYou only need to pass in the real values of the authentication env vars\nwhen first authenticating against the TG API.\n\nThe underlying pyrogram package will store the session credentials in a\nSQLite database (named after `TG_SESSION_NAME`).\n\nOnce this is in place, the secrets can be replaced with dummy values or\nleft unset. Do take care to protect the session database, since this can\nbe used to hijack TG sessions. The bot will enforce file permissions\nupon startup.\n\n### Additional settings\n\nYou can also specify a few other env vars to further customize the\ninstallation:\n\n- `TG_MANAGEMENT_GROUP_ID`: Set this to the TG ID of the group you want to\n  use for receiving admin log messages. The bot will have to be made\n  member of this group. The bot will always log these messages to\n  stdout.\n\n- `TG_MODERATION_GROUP_IDS`: Set this to a comma separated set of group\n  IDs to moderate. If not set, the bot will moderate all groups it gets\n  added to as an admin.\n\n- `TG_DEBUG`: Set this to 1 to get debug messages, which will include\n  details about the messages sent to chats the bot is listening on.\n\n- `TG_CHALLENGES`: Set this to a comma separated list of Challenge\n  subclass names found in `telegram_antispam_bot/challenge.py`. The bot\n  will then pick one of these randomly when sending a challenge.\n\nGetting the group IDs is not easy from the TG clients, but you can use\nthe `TG_DEBUG` setting to find out the IDs. The log will show entries\nsuch as `chat=pyrogram.types.Chat(id=1234, type='supergroup',\n...` when writing messages into the group chat. In this example, the\ngroup ID to use is 1234.\n\nIt is usually best to configure the extra settings after getting the\ninitial setup up and running.\n\nFor more details regarding the configuration and more settings, please\nhave a look at the `telegram_antispam_bot/config.py` file.\n\nRunning the Bot\n---------------\n\nYou can run the bot inside a container, as a service on a root server or\nVM, or manually from the command line.\n\nIf you've setup the configuration via OS environment variables, all you\nneed to do is run the package:\n\n```bash\npython3 -m telegram_antispam_bot\n```\n\nAdding the Bot to a TG Group\n----------------------------\n\nIn order for the bot to work on a group, you will have to add it as an\nadmin to the group. It needs the permissions *Delete messages* and *Ban\nusers*. The other permissions can be disabled.\n\nBot commands\n------------\n\nUnlike other TG bots, this bot does not implement any bot commands (e.g.\nthere is no '/help').\n\nExperience has shown that implementing such commands often leads to\ngroup members trying to interact with the bot, even though they don't\nhave permission to do anything. This usually creates enough noise to\nmake the bot operation less useful.\n\nHow it works\n------------\n\nThe bot will recognize new group signups and ask the new users to enter\na challenge string within a certain time frame. Correctly entering the\nchallenge then accepts the new user. Not entering the challenge in time\nresults in a ban. The same happens, if the user enters too many wrong\nanswers.\n\nThe bot / user conversation is mostly deleted after either successful or\nfailed signup to keep the noise level low.\n\nFAQ\n---\n\n- I see connection error messages in the logs. Are those something to worry about ?\n\n  > No, the underlying pyrogram library will automatically try to\n    reconnect. You should only dig deeper in case you notice that the\n    bot is not reacting to new signups.\n\n- I changed the configuration. Will the bot automatically detect those changes ?\n\n  > No, you will have to restart the bot for the changes to take affect.\n\n- Will restarting the bot have a negative effect ?\n\n  > A short downtime is not much of a problem. If you restart the bot\n    while it is talking to a new signup, you will have to do manual\n    cleanup of the chat, since the conversations are not stored in the\n    database.\n\n- I don't want to monitor a log file. Can I point the bot to an admin TG group ?\n\n  > Yes, you can set up a TG admin group, make the bot a (regular) member\n    and then add the ID of the group as `TG_MANAGEMENT_GROUP_ID`.\n\nMotivation\n----------\n\neGenix has long been running a local user group meeting in Düsseldorf\ncalled Python Meeting Düsseldorf and we have been using a Telegram group\nfor group communication.\n\nIn the early days, the group worked well and we only had few spammers\njoining it, which we could well handle manually. More recently, this has\nchanged dramatically. We are seeing between 2-5 spam signups per day,\noften at night. Furthermore, the signups accounts are not always easy to\nspot as spammers, since they often come with profile images,\ndescriptions, etc.\n\nWith the bot, we now have a more flexible way of dealing with the\nproblem.\n\nLicense\n-------\n\nMIT\n\nCredits / Notices\n-----------------\n\n- Thanks go out to [Dan](https://github.com/delivrance) for creating the\nwonderful [pyrogram](https://github.com/pyrogram/pyrogram) async TG\npackage.\n\n- \"Telegram\" is a trademark of Telegram LLC.\n\nChangelog\n---------\n\n- 0.4.0:\n  - Added new challenge MathMultiplyChallenge\n  - Made the MathAddChallenge and MathMultiplyChallenge a little more difficult\n- 0.3.0:\n  - Added new challenge ListItemChallenge\n  - Added new config variables MAX_FAILED_CHALLENGES to limit the number of failed\n    challenge responses. Defaults to 3.\n  - Added docker-compose config example to sources\n  - Fixed display of the user name to always show the full name, where available.\n  - Added work-around for pyrogram to not create session files inside\n    the package dir when running the bot in -m mode\n  - Fixed bug to make file logging work\n  - Fixed bug in ban time handling; this now works correctly\n- 0.2.0: Initial release on PyPI\n- 0.1.0: Initial release on Github\n\n\nEnjoy, \\\n*Marc-André Lemburg* \\\n[eGenix.com](https://egenix.com/)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/egenix/egenix-telegram-antispam-bot",
    "keywords": "",
    "license": "MIT",
    "maintainer": "eGenix.com Software, Skills and Services GmbH",
    "maintainer_email": "info@egenix.com",
    "name": "egenix-telegram-antispam-bot",
    "package_url": "https://pypi.org/project/egenix-telegram-antispam-bot/",
    "platform": null,
    "project_url": "https://pypi.org/project/egenix-telegram-antispam-bot/",
    "project_urls": {
      "Homepage": "https://github.com/egenix/egenix-telegram-antispam-bot"
    },
    "release_url": "https://pypi.org/project/egenix-telegram-antispam-bot/0.4.0/",
    "requires_dist": null,
    "requires_python": ">=3.9",
    "summary": "eGenix Antispam Bot for Telegram",
    "version": "0.4.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14813929,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7b4025d5069ebd3f3b92452d716e34d707f457f394a1368f96e06d28eb2dc9bb",
          "md5": "0392f5e5ccd651150103614b74614fb7",
          "sha256": "1d4aafb8812694b162c87dd13277f620db293aec85b47d5c4ea6e986b25ec8df"
        },
        "downloads": -1,
        "filename": "egenix_telegram_antispam_bot-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0392f5e5ccd651150103614b74614fb7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 15579,
        "upload_time": "2022-03-25T15:29:41",
        "upload_time_iso_8601": "2022-03-25T15:29:41.104740Z",
        "url": "https://files.pythonhosted.org/packages/7b/40/25d5069ebd3f3b92452d716e34d707f457f394a1368f96e06d28eb2dc9bb/egenix_telegram_antispam_bot-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "62e7519e608df90547843651410c7bd2d3abec84da76ff93cfdb761cff792d54",
          "md5": "ef8cb8211be122d045fd3a06ba27e5da",
          "sha256": "567c91dc6c8c047d4f303fe1ae8787ea2e4f851926c08005c9aabc19cf91db50"
        },
        "downloads": -1,
        "filename": "egenix-telegram-antispam-bot-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ef8cb8211be122d045fd3a06ba27e5da",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 13813,
        "upload_time": "2022-03-25T15:29:42",
        "upload_time_iso_8601": "2022-03-25T15:29:42.998714Z",
        "url": "https://files.pythonhosted.org/packages/62/e7/519e608df90547843651410c7bd2d3abec84da76ff93cfdb761cff792d54/egenix-telegram-antispam-bot-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8fe03bbe765b5e56445e56b2c42dd4bd2f244daae0f812f47cdfb7f276785dea",
          "md5": "ec6ce7ae6ae6f433313154deace02942",
          "sha256": "e804ad119d38a3f5e525110b6065a4c6b78dc6039773b277bad5929ed72801c1"
        },
        "downloads": -1,
        "filename": "egenix_telegram_antispam_bot-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ec6ce7ae6ae6f433313154deace02942",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 16656,
        "upload_time": "2022-04-25T09:52:07",
        "upload_time_iso_8601": "2022-04-25T09:52:07.547810Z",
        "url": "https://files.pythonhosted.org/packages/8f/e0/3bbe765b5e56445e56b2c42dd4bd2f244daae0f812f47cdfb7f276785dea/egenix_telegram_antispam_bot-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8ad4c5255d065dc0c6f9f5e229ed05af2049223ba5e7f0ca761f3f55736097cc",
          "md5": "5378a978d07908c7ab69bdfb0aee579a",
          "sha256": "917f998569c516f853a2c8ef9f94c84f3dcb39b46967ded16c85591102885567"
        },
        "downloads": -1,
        "filename": "egenix-telegram-antispam-bot-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5378a978d07908c7ab69bdfb0aee579a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 15990,
        "upload_time": "2022-04-25T09:52:12",
        "upload_time_iso_8601": "2022-04-25T09:52:12.552668Z",
        "url": "https://files.pythonhosted.org/packages/8a/d4/c5255d065dc0c6f9f5e229ed05af2049223ba5e7f0ca761f3f55736097cc/egenix-telegram-antispam-bot-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c36cbc02a50e1207eadf6dd35e583302bf94f421dc9f8d3ee462dbd8708f8914",
          "md5": "32817cbba67f5bc2d08d3418b41f510a",
          "sha256": "581dc10680bd4c3c612578c81d14968db7f088d4d390a461a91c3a4cc93a9f60"
        },
        "downloads": -1,
        "filename": "egenix_telegram_antispam_bot-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "32817cbba67f5bc2d08d3418b41f510a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 16805,
        "upload_time": "2022-08-19T13:50:30",
        "upload_time_iso_8601": "2022-08-19T13:50:30.646478Z",
        "url": "https://files.pythonhosted.org/packages/c3/6c/bc02a50e1207eadf6dd35e583302bf94f421dc9f8d3ee462dbd8708f8914/egenix_telegram_antispam_bot-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad3e130aab1d10f6d56d9e13ce527e4610d4512b32f3d2836bf6bb2f5ecce936",
          "md5": "ee646dbf5be754ff7f6a4a2b379f92ea",
          "sha256": "6ac5e1fa8f4080fe665308e0a54132b72cd26c8c679c1c9ee233289e5e073b7b"
        },
        "downloads": -1,
        "filename": "egenix-telegram-antispam-bot-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ee646dbf5be754ff7f6a4a2b379f92ea",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 16174,
        "upload_time": "2022-08-19T13:50:28",
        "upload_time_iso_8601": "2022-08-19T13:50:28.712003Z",
        "url": "https://files.pythonhosted.org/packages/ad/3e/130aab1d10f6d56d9e13ce527e4610d4512b32f3d2836bf6bb2f5ecce936/egenix-telegram-antispam-bot-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c36cbc02a50e1207eadf6dd35e583302bf94f421dc9f8d3ee462dbd8708f8914",
        "md5": "32817cbba67f5bc2d08d3418b41f510a",
        "sha256": "581dc10680bd4c3c612578c81d14968db7f088d4d390a461a91c3a4cc93a9f60"
      },
      "downloads": -1,
      "filename": "egenix_telegram_antispam_bot-0.4.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "32817cbba67f5bc2d08d3418b41f510a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 16805,
      "upload_time": "2022-08-19T13:50:30",
      "upload_time_iso_8601": "2022-08-19T13:50:30.646478Z",
      "url": "https://files.pythonhosted.org/packages/c3/6c/bc02a50e1207eadf6dd35e583302bf94f421dc9f8d3ee462dbd8708f8914/egenix_telegram_antispam_bot-0.4.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ad3e130aab1d10f6d56d9e13ce527e4610d4512b32f3d2836bf6bb2f5ecce936",
        "md5": "ee646dbf5be754ff7f6a4a2b379f92ea",
        "sha256": "6ac5e1fa8f4080fe665308e0a54132b72cd26c8c679c1c9ee233289e5e073b7b"
      },
      "downloads": -1,
      "filename": "egenix-telegram-antispam-bot-0.4.0.tar.gz",
      "has_sig": false,
      "md5_digest": "ee646dbf5be754ff7f6a4a2b379f92ea",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 16174,
      "upload_time": "2022-08-19T13:50:28",
      "upload_time_iso_8601": "2022-08-19T13:50:28.712003Z",
      "url": "https://files.pythonhosted.org/packages/ad/3e/130aab1d10f6d56d9e13ce527e4610d4512b32f3d2836bf6bb2f5ecce936/egenix-telegram-antispam-bot-0.4.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}