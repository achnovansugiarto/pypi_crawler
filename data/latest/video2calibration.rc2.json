{
  "info": {
    "author": "Matěj Šmíd",
    "author_email": "m@matejsmid.cz",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Utilities"
    ],
    "description": "[![Build Status](https://travis-ci.com/smidm/video2calibration.svg?branch=master)](https://travis-ci.com/smidm/video2calibration)\n\n\nCamera Calibration Using OpenCV\n===============================\n\nPython scripts for camera intrinsic parameters calibration and image undistortion.\n\nIt finds following parameters:\n\n  * focal length\n  * principal point\n  * radial distortion coefficients\n\nusing video of a moving chessboard pattern or a sequence of images as an input.\n\nExample input: \n\n![input video](doc/input_video.jpg \"Screenshot of an input video.\")\n\nExample output YAML file:\n\n~~~\ncamera_matrix:\n- [1016.5691777733053, 0.0, 632.3505845656954]\n- [0.0, 1013.9401023559311, 351.0453222243043]\n- [0.0, 0.0, 1.0]\ndist_coefs:\n- [-0.3797582960152331, 0.20896823985868346, -0.0003239082442461539, -0.0019027617884934114,\n  -0.0668551319250156]\nrms: 1.1814231691868478\n~~~\n\nInstallation\n------------\n\n```\npip install video2calibration\n```\n\nYou can also install the in-development version with::\n\n```\npip install https://github.com/smidm/video2calibration/archive/master.zip\n```\n\n\nCamera Calibration\n------------------\n\n 1. print the pattern.png and glue it to a solid board\n 3. fix the camera lens zoom, the calibration values change with the lens zoom changes\n 2. record a video with the pattern moving in front of the camera\n    * the pattern should be most of the time completely visible\n    * try to move the pattern to cover all parts of the camera view, pay attention to the corners\n    * the length of the video should be 1 or 2 minutes\n 3. run the calibration.py to extract chessboard pattern corners from the video and perform camera calibration\n\nExample usage (you can actually run the example, the input data is present in the ./example_input):\n\n~~~\n$ calibrate.py --help\nusage: calibrate.py [-h] [--debug-dir DEBUG_DIR] [-c CORNERS] [-fs FRAMESTEP]\n                    input out\n\nCalibrate camera using a video of a chessboard or a sequence of images.\n\npositional arguments:\n  input                 input video file or glob mask\n  out                   output calibration yaml file\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --debug-dir DEBUG_DIR\n                        path to directory where images with detected\n                        chessboard will be written\n  -c CORNERS, --corners CORNERS\n                        output corners file\n  -fs FRAMESTEP, --framestep FRAMESTEP\n                        use every nth frame in the video\n\n\n$ mkdir out\n$ calibrate.py example_input/chessboard.avi calibration.yaml --debug-dir out\nSearching for chessboard in frame 0... not found\nSearching for chessboard in frame 20... not found\nSearching for chessboard in frame 40... not found\nSearching for chessboard in frame 60... not found\nSearching for chessboard in frame 80... not found\nSearching for chessboard in frame 100... not found\nSearching for chessboard in frame 120... not found\nSearching for chessboard in frame 140... ok\nSearching for chessboard in frame 160... ok\nSearching for chessboard in frame 180... ok\nSearching for chessboard in frame 200... ok\nSearching for chessboard in frame 220... ok\nSearching for chessboard in frame 240... ok\nSearching for chessboard in frame 260... ok\nSearching for chessboard in frame 280... ok\n...\nSearching for chessboard in frame 1980... ok\nSearching for chessboard in frame 2000... ok\nSearching for chessboard in frame 2020... ok\nSearching for chessboard in frame 2040... not found\nSearching for chessboard in frame 2060... not found\nSearching for chessboard in frame 2080... not found\nSearching for chessboard in frame 2100... ok\nSearching for chessboard in frame 2120... not found\nSearching for chessboard in frame 2140... not found\nSearching for chessboard in frame 2160... not found\nSearching for chessboard in frame 2180... not found\n\nPerforming calibration...\nRMS: 1.01973939405\ncamera matrix:\n[[ 774.55857698    0.          619.69416634]\n [   0.          772.96410156  352.49790333]\n [   0.            0.            1.        ]]\ndistortion coefficients:  [ -3.65385859e-01   1.63224385e-01  -2.67163331e-03   3.38261891e-04\n  -3.81711948e-02]\n\n~~~\n\nRemoving Radial Distortion\n--------------------------\n\nYou can test the found radial distortion coefficients by removing distortion from an image and checking if straight lines are really straight.\n\n~~~\n$ undistort.py --help\nusage: undistort.py [-h] calibration input_mask out\n\nUndistort images based on camera calibration.\n\npositional arguments:\n  calibration  input video file\n  input_mask   input mask\n  out          output directory\n\noptional arguments:\n  -h, --help   show this help message and exit\n\n$ undistort.py calibration.yaml 'example_input/*.png' out/\nprocessing example_input/distorted.png... ok\n\n~~~\n\nDevelopment\n-----------\n\nTo run all the tests run:\n\n```\ntox\n```\n\nLicense\n-------\n\nMIT License, except `pattern.png` from OpenCV (3-clause BSD License).\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/smidm/video2calibration",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "video2calibration",
    "package_url": "https://pypi.org/project/video2calibration/",
    "platform": "",
    "project_url": "https://pypi.org/project/video2calibration/",
    "project_urls": {
      "Homepage": "https://github.com/smidm/video2calibration",
      "Issue Tracker": "https://github.com/smidm/video2calibration/issues"
    },
    "release_url": "https://pypi.org/project/video2calibration/0.0.1/",
    "requires_dist": [
      "numpy",
      "PyYAML",
      "opencv-python-headless"
    ],
    "requires_python": ">=3.6",
    "summary": "OpenCV camera calibration from a video",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10978950,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e91d869748da3c70a1b0a4a22ad10d0f405ceb3c9737a1ab507bd5c77c960364",
          "md5": "6131141330c447618acb88d3eb57c6b6",
          "sha256": "a2b9bb3954f9ff902a81f2e0075eb110eb1f26f87d70e13a8fb04e00293f43ff"
        },
        "downloads": -1,
        "filename": "video2calibration-0.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6131141330c447618acb88d3eb57c6b6",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 6409,
        "upload_time": "2021-07-22T16:33:44",
        "upload_time_iso_8601": "2021-07-22T16:33:44.928262Z",
        "url": "https://files.pythonhosted.org/packages/e9/1d/869748da3c70a1b0a4a22ad10d0f405ceb3c9737a1ab507bd5c77c960364/video2calibration-0.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7de80e0400614df0e584ffcc17ce045a36512860ba46f10ada51e8ffcbdcebe7",
          "md5": "3dd110a9cb56fae1440783fcb81aacbf",
          "sha256": "1f53d01dc81585539ab53563d23e2568b215e57eaf7508040a083e3c13e6d7ed"
        },
        "downloads": -1,
        "filename": "video2calibration-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3dd110a9cb56fae1440783fcb81aacbf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6181,
        "upload_time": "2021-07-22T16:33:50",
        "upload_time_iso_8601": "2021-07-22T16:33:50.439932Z",
        "url": "https://files.pythonhosted.org/packages/7d/e8/0e0400614df0e584ffcc17ce045a36512860ba46f10ada51e8ffcbdcebe7/video2calibration-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "844602b932024b95a64d42f8d31861562e6dc61f394612e327c81bb6045fed5a",
          "md5": "063dc94102f96d8304a73ef78ebfb465",
          "sha256": "b34fb9faf0315214f7925b61ee6d885aff819a2c2bf2af0e86ad6910f8119338"
        },
        "downloads": -1,
        "filename": "video2calibration-0.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "063dc94102f96d8304a73ef78ebfb465",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 6439,
        "upload_time": "2021-07-22T16:33:48",
        "upload_time_iso_8601": "2021-07-22T16:33:48.083219Z",
        "url": "https://files.pythonhosted.org/packages/84/46/02b932024b95a64d42f8d31861562e6dc61f394612e327c81bb6045fed5a/video2calibration-0.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e8e6225bb2991a446b1657bd1f327bf8661c024d03e5d10f146c9a4794d714fa",
          "md5": "08abd9ab450a0493784c119d71cadb3b",
          "sha256": "4af449c4ad5c42ff50d4cf3e5c83a2caefe1f953f8a9451bd9ef1f9a5d8ea9fe"
        },
        "downloads": -1,
        "filename": "video2calibration-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "08abd9ab450a0493784c119d71cadb3b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6209,
        "upload_time": "2021-07-22T16:33:52",
        "upload_time_iso_8601": "2021-07-22T16:33:52.254799Z",
        "url": "https://files.pythonhosted.org/packages/e8/e6/225bb2991a446b1657bd1f327bf8661c024d03e5d10f146c9a4794d714fa/video2calibration-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "844602b932024b95a64d42f8d31861562e6dc61f394612e327c81bb6045fed5a",
        "md5": "063dc94102f96d8304a73ef78ebfb465",
        "sha256": "b34fb9faf0315214f7925b61ee6d885aff819a2c2bf2af0e86ad6910f8119338"
      },
      "downloads": -1,
      "filename": "video2calibration-0.0.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "063dc94102f96d8304a73ef78ebfb465",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.6",
      "size": 6439,
      "upload_time": "2021-07-22T16:33:48",
      "upload_time_iso_8601": "2021-07-22T16:33:48.083219Z",
      "url": "https://files.pythonhosted.org/packages/84/46/02b932024b95a64d42f8d31861562e6dc61f394612e327c81bb6045fed5a/video2calibration-0.0.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e8e6225bb2991a446b1657bd1f327bf8661c024d03e5d10f146c9a4794d714fa",
        "md5": "08abd9ab450a0493784c119d71cadb3b",
        "sha256": "4af449c4ad5c42ff50d4cf3e5c83a2caefe1f953f8a9451bd9ef1f9a5d8ea9fe"
      },
      "downloads": -1,
      "filename": "video2calibration-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "08abd9ab450a0493784c119d71cadb3b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 6209,
      "upload_time": "2021-07-22T16:33:52",
      "upload_time_iso_8601": "2021-07-22T16:33:52.254799Z",
      "url": "https://files.pythonhosted.org/packages/e8/e6/225bb2991a446b1657bd1f327bf8661c024d03e5d10f146c9a4794d714fa/video2calibration-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}