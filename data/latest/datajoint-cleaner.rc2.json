{
  "info": {
    "author": "",
    "author_email": "Christoph Blessing <chris.blessing@protonmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# DataJoint-Cleaner\n\n![Test](https://github.com/cblessing24/datajoint-cleaner/workflows/Test/badge.svg)\n![Black](https://github.com/cblessing24/datajoint-cleaner/workflows/Black/badge.svg)\n![Mypy](https://github.com/cblessing24/datajoint-cleaner/workflows/Mypy/badge.svg)\n[![codecov](https://codecov.io/gh/cblessing24/datajoint-cleaner/branch/prototype/graph/badge.svg?token=cqR5nrFkeU)](https://codecov.io/gh/cblessing24/datajoint-cleaner)\n![Build](https://github.com/cblessing24/datajoint-cleaner/workflows/Build/badge.svg)\n[![PyPI version](https://badge.fury.io/py/datajoint-cleaner.svg)](https://badge.fury.io/py/datajoint-cleaner)\n\nDataJoint-Cleaner is a tool used to clean external [DataJoint](https://datajoint.io/) [stores](https://docs.datajoint.io/python/admin/5-blob-config.html?highlight=external).\n\n## How It Works\n\nThe user provides information pointing to a particular external table and external store combination. Using this information DataJoint-Cleaner will delete all objects in the external store that have no corresponding entry in the external table, thus freeing storage space.\n\n## Important Considerations\n\nThe creation of a backup is highly recommended before using DataJoint-Cleaner to avoid a potential loss of data due to an user error or a bug.\n\nDataJoint-Cleaner should not be used to clean external stores that are used by multiple database servers or multiple storage protocols (e.g. file & s3). If done so it could potentially delete objects that are still referenced in the database.\n\n## Installation\n\n### Recommended installation method\n\nTo avoid messing up the system Python environment, the most recommended way to install DataJoint-Cleaner is via [pipx](https://pypi.org/project/pipx/):\n\n```bash\npipx install datajoint-cleaner\n```\n\n### Other installation methods\n\nInstall DataJoint-Cleaner into user site with `pip`:\n\n```bash\npip install --user datajoint-cleaner\n```\n\n## Configuration\n\nDataJoint-Cleaner will look for a TOML file called `datajoint-cleaner.toml` in the current working directory (by default) to configure itself. The configuration file must have two top-level tables called `database_servers` and `storage_servers` and an array of tables called `cleaning_runs`.\n\n### Specifying Database Servers\n\nDatabase servers are specified in the top-level `database_servers` table. Each key in the table corresponds to a distinct database server. The value of each key must be a table that contains the following keys: `host`, `user` and `password`.\n\nThe values of the `host`, `user` and `password` keys correspond to the host name of the database server, the name of a user present on said server and the password of said user, respectively.\n\nExample:\n\n```toml\n[database_servers.my_db_server]\nhost = \"192.156.3.65\"\nuser = \"me\"\npassword = \"mypassword\"\n```\n\n### Specifying Storage Servers\n\nStorage servers are specified in a sub-table of the `storage_servers` table based on their kind. Currently only MinIO servers are supported which are specified in the `minio` sub table. The keys necessary to specify a MinIO server are `endpoint`, `access_key`, `secret_key` and `secure`.\n\nThe values of these keys correspond to the endpoint of the MinIO server, your access and private key and whether a secure connection should be established or not, respectively.\n\nExample:\n\n```toml\n[storage_servers.minio.my_minio_server]\nendpoint = \"192.543.5.61\"\naccess_key = \"my_access_key\"\nsecret_key = \"my_secret_key\"\nsecure = true\n```\n\n### Specifying Cleaning Runs\n\nIndividual cleaning runs are specified in the top-level array of tables called `cleaning_runs`. Each table in the array corresponds to a distinct cleaning run and must have the following keys:\n\n* `database_server`: Name of a database server specified in the `database_servers` table\n* `schema`: Name of a schema on said database server\n* `store`: Name of a DataJoint store for which an external table exists in said schema\n* `storage_server`: A storage server specified in the `storage_servers` table in the `<kind>.<name>` format\n* `bucket`: Name of a bucket on said MinIO server\n* `location`: Location of externally stored objects in said bucket\n\nExample:\n\n```toml\n[[cleaning_runs]]\ndatabase_server = \"my_db_server\"\nschema = \"my_schema\"\nstore = \"my_store\"\nstorage_server = \"minio.my_minio_server\"\nbucket = \"my_bucket\"\nlocation = \"my_location\"\n```\n\n## Usage\n\nThe cleaning process can be started like so:\n\n```bash\ndj-cleaner\n```\n\nThe command above will execute all cleaning runs defined in the configuration file. The `--config-file` option can be used to pass a custom path to a configuration file to DataJoint-Cleaner:\n\n```bash\ndj-cleaner --config-file /path/to/config/file\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "datajoint-cleaner",
    "package_url": "https://pypi.org/project/datajoint-cleaner/",
    "platform": "",
    "project_url": "https://pypi.org/project/datajoint-cleaner/",
    "project_urls": {
      "homepage": "https://github.com/sinzlab/datajoint-cleaner"
    },
    "release_url": "https://pypi.org/project/datajoint-cleaner/0.1/",
    "requires_dist": [
      "minio~=7.0",
      "pymysql~=1.0",
      "toml~=0.10"
    ],
    "requires_python": ">=3.9",
    "summary": "A tool for cleaning up external DataJoint stores",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9489736,
  "releases": {
    "0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "88081da1a8ee6514591b94c1f22e53cfb092df11753f4bc2a8254c19e91ec892",
          "md5": "7d9c4a40bc56b3550d6579f3661356b7",
          "sha256": "f52cfc15cbc65f1c3053ecd6d74bd5c8410fa729dfdf28d9e8aba438776d0d88"
        },
        "downloads": -1,
        "filename": "datajoint_cleaner-0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7d9c4a40bc56b3550d6579f3661356b7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 25787,
        "upload_time": "2021-02-22T12:22:38",
        "upload_time_iso_8601": "2021-02-22T12:22:38.158086Z",
        "url": "https://files.pythonhosted.org/packages/88/08/1da1a8ee6514591b94c1f22e53cfb092df11753f4bc2a8254c19e91ec892/datajoint_cleaner-0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "30be485fa59b29961d271f30b17d78c3c09bcbf69396d343f0cb46dc75510bba",
          "md5": "164cabdbb1f4ce4ab6b35797b1a39e26",
          "sha256": "2ca853160b8dbada5d09601f79d3df87c1d79804dae3e3b259e980bd45af35dd"
        },
        "downloads": -1,
        "filename": "datajoint-cleaner-0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "164cabdbb1f4ce4ab6b35797b1a39e26",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 21283,
        "upload_time": "2021-02-22T12:22:39",
        "upload_time_iso_8601": "2021-02-22T12:22:39.022348Z",
        "url": "https://files.pythonhosted.org/packages/30/be/485fa59b29961d271f30b17d78c3c09bcbf69396d343f0cb46dc75510bba/datajoint-cleaner-0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4e7612f25a4c98933885507afc217979945fe502f76d7d5a4c3f35b2123cf5a5",
          "md5": "2ba3e8eda317ae91aff24fd7dbadf529",
          "sha256": "2b1839181331eabd487866df300412042e40685114cb8e72bcb83e38de759fab"
        },
        "downloads": -1,
        "filename": "datajoint_cleaner-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2ba3e8eda317ae91aff24fd7dbadf529",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 25955,
        "upload_time": "2021-02-22T15:47:07",
        "upload_time_iso_8601": "2021-02-22T15:47:07.487663Z",
        "url": "https://files.pythonhosted.org/packages/4e/76/12f25a4c98933885507afc217979945fe502f76d7d5a4c3f35b2123cf5a5/datajoint_cleaner-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4cfa6a2a1f4dbeffadee8b717375474fa2eb03a9b834b24bdb74647a823ccc13",
          "md5": "ec7d8e7aa0b059b5fa20bba81d87bbb4",
          "sha256": "c30d8611cb081a5117f77deb710fbbd9e0469508f5002a12c9ac01ec26cbbc71"
        },
        "downloads": -1,
        "filename": "datajoint-cleaner-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ec7d8e7aa0b059b5fa20bba81d87bbb4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 21536,
        "upload_time": "2021-02-22T15:47:08",
        "upload_time_iso_8601": "2021-02-22T15:47:08.505362Z",
        "url": "https://files.pythonhosted.org/packages/4c/fa/6a2a1f4dbeffadee8b717375474fa2eb03a9b834b24bdb74647a823ccc13/datajoint-cleaner-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4e7612f25a4c98933885507afc217979945fe502f76d7d5a4c3f35b2123cf5a5",
        "md5": "2ba3e8eda317ae91aff24fd7dbadf529",
        "sha256": "2b1839181331eabd487866df300412042e40685114cb8e72bcb83e38de759fab"
      },
      "downloads": -1,
      "filename": "datajoint_cleaner-0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2ba3e8eda317ae91aff24fd7dbadf529",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 25955,
      "upload_time": "2021-02-22T15:47:07",
      "upload_time_iso_8601": "2021-02-22T15:47:07.487663Z",
      "url": "https://files.pythonhosted.org/packages/4e/76/12f25a4c98933885507afc217979945fe502f76d7d5a4c3f35b2123cf5a5/datajoint_cleaner-0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4cfa6a2a1f4dbeffadee8b717375474fa2eb03a9b834b24bdb74647a823ccc13",
        "md5": "ec7d8e7aa0b059b5fa20bba81d87bbb4",
        "sha256": "c30d8611cb081a5117f77deb710fbbd9e0469508f5002a12c9ac01ec26cbbc71"
      },
      "downloads": -1,
      "filename": "datajoint-cleaner-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "ec7d8e7aa0b059b5fa20bba81d87bbb4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 21536,
      "upload_time": "2021-02-22T15:47:08",
      "upload_time_iso_8601": "2021-02-22T15:47:08.505362Z",
      "url": "https://files.pythonhosted.org/packages/4c/fa/6a2a1f4dbeffadee8b717375474fa2eb03a9b834b24bdb74647a823ccc13/datajoint-cleaner-0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}