{
  "info": {
    "author": "Adam McKay",
    "author_email": "adam@beepboop.digital",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Django Stack Inspector\n\nThe Django Stack Inspector package is useful to inspect the current call stack of a Django application and determine if it is starting up or already running.\n\nIt is likely that the 99% of applications do not have a need for this, but in specific niche scenarios it can be very useful. For example, when implementing a model manager that limits queries to items owned by a specific tenant by overriding the `get_queryset()` method filtered using data stored in a `ContextVar` or thread-local set by a request middleware. It may be desired that if queries are executed without the `ContextVar` being appropriately set (e.g. queries via asynchronous background workers or via admin commands) then the `get_queryset()` method fails-closed by throwing an exception warning the user that the required context is not set. However, this fail-closed behaviour breaks the management commands for migrations by throwing the exception. \n\n## Installation\n\n`pip install django_stack_inspector`\n\n## Usage\n\nAn example of how to use when creating a custom model manager to restrict queries to specific tenants.\n\n\n```python\nfrom django_stack_inspector import StackInspector\n\ndef get_queryset(self):\n    \"\"\"\n    Override the default queryset behaviour to enforce a filter dependent on the tenant context\n    The queryset will fail-closed if a query is ran without a context, either by returning no results in the\n    queryset or by raising an exception.\n    \"\"\"\n    try:\n        ctx = get_request_context()\n    except RequestContextNotSet as exc:\n        # Context not set so fail-closed\n        if StackInspector().is_app_startup():\n            # Silence exception and return empty queryset as app starting (i.e. is a management command)\n            return super().get_queryset().none()\n        # Raise exception to alert developer\n        raise exc\n\n    # Perform filtering\n    return super().get_queryset().filter(tenant=ctx.tenant)\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Beep-Boop-Digital/django-stack-inspector",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-stack-inspector",
    "package_url": "https://pypi.org/project/django-stack-inspector/",
    "platform": null,
    "project_url": "https://pypi.org/project/django-stack-inspector/",
    "project_urls": {
      "Homepage": "https://github.com/Beep-Boop-Digital/django-stack-inspector",
      "Repository": "https://github.com/Beep-Boop-Digital/django-stack-inspector"
    },
    "release_url": "https://pypi.org/project/django-stack-inspector/1.0.0/",
    "requires_dist": [
      "Django (>3.2)"
    ],
    "requires_python": ">=3.9,<4.0",
    "summary": "Inspect the current Python call stack to determine if the Django app is just starting up or already running.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16603490,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "67ebf2738c3767273c935d7a11fe40bb049ed73f6244efbd894d33b99e16a878",
          "md5": "66067ae9339c8ffba42694787170b120",
          "sha256": "2c02365d2078889ce3ac5ba1e4b54a1046ce2aac90b3c4ee6ad62bfcaf9f03e5"
        },
        "downloads": -1,
        "filename": "django_stack_inspector-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "66067ae9339c8ffba42694787170b120",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 3752,
        "upload_time": "2023-01-28T19:58:47",
        "upload_time_iso_8601": "2023-01-28T19:58:47.064644Z",
        "url": "https://files.pythonhosted.org/packages/67/eb/f2738c3767273c935d7a11fe40bb049ed73f6244efbd894d33b99e16a878/django_stack_inspector-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d2351ec3297f61f11e9f86719eabb4409ce0e9c1234ffc6c99d06d288123abca",
          "md5": "c35e09b4261857967fffa408a3cf629e",
          "sha256": "1f0c04752f2630ed55eab4c6500b53ae97725e3540a04777135b37e724a9f9ce"
        },
        "downloads": -1,
        "filename": "django_stack_inspector-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c35e09b4261857967fffa408a3cf629e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 3595,
        "upload_time": "2023-01-28T19:58:48",
        "upload_time_iso_8601": "2023-01-28T19:58:48.530439Z",
        "url": "https://files.pythonhosted.org/packages/d2/35/1ec3297f61f11e9f86719eabb4409ce0e9c1234ffc6c99d06d288123abca/django_stack_inspector-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "67ebf2738c3767273c935d7a11fe40bb049ed73f6244efbd894d33b99e16a878",
        "md5": "66067ae9339c8ffba42694787170b120",
        "sha256": "2c02365d2078889ce3ac5ba1e4b54a1046ce2aac90b3c4ee6ad62bfcaf9f03e5"
      },
      "downloads": -1,
      "filename": "django_stack_inspector-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "66067ae9339c8ffba42694787170b120",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9,<4.0",
      "size": 3752,
      "upload_time": "2023-01-28T19:58:47",
      "upload_time_iso_8601": "2023-01-28T19:58:47.064644Z",
      "url": "https://files.pythonhosted.org/packages/67/eb/f2738c3767273c935d7a11fe40bb049ed73f6244efbd894d33b99e16a878/django_stack_inspector-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d2351ec3297f61f11e9f86719eabb4409ce0e9c1234ffc6c99d06d288123abca",
        "md5": "c35e09b4261857967fffa408a3cf629e",
        "sha256": "1f0c04752f2630ed55eab4c6500b53ae97725e3540a04777135b37e724a9f9ce"
      },
      "downloads": -1,
      "filename": "django_stack_inspector-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "c35e09b4261857967fffa408a3cf629e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9,<4.0",
      "size": 3595,
      "upload_time": "2023-01-28T19:58:48",
      "upload_time_iso_8601": "2023-01-28T19:58:48.530439Z",
      "url": "https://files.pythonhosted.org/packages/d2/35/1ec3297f61f11e9f86719eabb4409ce0e9c1234ffc6c99d06d288123abca/django_stack_inspector-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}