{
  "info": {
    "author": "Martin Gutierrez-Amigo",
    "author_email": "Martin Gutierrez-Amigo <martin00gutierrez@outlook.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "<a name=\"readme-top\"></a>\n<!-- PROJECT LOGO -->\n<div align=\"center\">\n  <h1 align=\"center\">YAIV</h3>\n  <h3 align=\"center\">Yet another Ab Initio Visualizer...</h3>\n  <p align=\"center\">\n    A general purpose tool for condensed matter data analysis in jupyterlab.\n    <br />\n    <a href=\"https://github.com/mgamigo/YAIV/issues\">Report Bug</a>\n    ·\n    <a href=\"https://github.com/mgamigo/YAIV/issues\">Request Feature</a>\n    <br />\n\t___\n    <br />\n    <a href=\"https://github.com/mgamigo/YAIV/tree/main/Tutorial\"><strong>Explore the tutorials:</strong></a>\n    <br />\n    <a href=\"https://github.com/mgamigo/YAIV/blob/main/Tutorial/Plot_module.ipynb\">Plotting</a>\n    ·\n    <a href=\"https://github.com/mgamigo/YAIV/blob/main/Tutorial/Convergence_module.ipynb\">Convergence</a>  \n    ·\n    <a href=\"https://github.com/mgamigo/YAIV/blob/main/Tutorial/Utils_module.ipynb\">Utilities</a>\n  </p>\n</div>\n\n\n\n<!-- TABLE OF CONTENTS -->\n<details>\n  <summary>Table of Contents</summary>\n  <ol>\n    <li>\n      <a href=\"#about-the-project\">About The Project</a>\n      <ul>\n        <li><a href=\"#why\">Why?</a></li>\n      </ul>\n    </li>\n    <li>\n\t<a href=\"#current-tools\">Current tools</a>\n\t<ul>\n            <li><a href=\"#i-plot-module\">Plotting tools</a></li>\n\t    <li><a href=\"#ii-convergence-module\">Convergence analysis</a></li>\n\t    <li><a href=\"#iii-utils-module\">Other utilities</a></li>\n        </ul>\n    </li>\n    <li><a href=\"#examples\">Examples</a></li>\n    <li><a href=\"#installation\">Installation</a></li>\n    <li><a href=\"#roadmap\">Roadmap</a></li>\n  </ol>\n</details>\n\n<!-- ABOUT THE PROJECT -->\n## About The Project\nYAIV is a collection of tools for plotting results of condensed matter ab initio codes such as *Quantum Espresso, VASP, Wannier90, Wannier Tools...* Although it can be used from the command line, the main intention of YAIV is to be used within JupyterLab, thereby allowing users to centralize the data analysis of a whole project into a single file. The goal is to provide both *(1)* fast and easy plotting defaults to glance over results, while *(2)* being flexible and powerful enough to generate publication-ready figures.\n\n![gif demo](../media/demo.gif?raw=true)\n\n<p align=\"right\">(<a href=\"#readme-top\">back to top</a>)</p>\n\n### Why?\n> *A single file to rule them all...*\n\nMost of the tools contained on YAIV are nothing more than glorified python scripts I needed during my PhD. Although python libraries for ab initio data analysis already exist, I found many of them being disigned to work within the command line (often required to be run from a certain directory). YAIV is aimed at providing useful ab initio analysis functionalities to those people willing to use a single JupyterLab file to organize their projects.\n\nYAIV also intends to provide enough flexibility and modularity for most scenarios. To this end, useful [utilities](Tutorial/Utils_module.ipynb) are also provided in order to scrape data from the output of a variety of codes. Then, users can either further process the raw data or plot it in any desired way.\n\n<p align=\"right\">(<a href=\"#readme-top\">back to top</a>)</p>\n\n---\n\n## Installation\n\n#### Create an isolated python enviroment\nIn case you want to create your own python enviroment and have it available in JupyterLab.\n```sh\n    virtualenv yaiv_env                                 #Create yor new enviroment\n    source yaiv_env/bin/activate                        #Load the enviroment\n    pip install ipykernel                               #In order to create a Kernel for this enviroment\n    python -m ipykernel install --user --name=YAIV      #Install your new kernel with your desired name\n    jupyter kernelspec list                             #Check that the new installed kernel appears\n```\nNow your new installed Kernel should be available in JupyterLab. You can select Kernel clicking at the top-right corner of JupyterLab.\n\n#### Installing YAIV\nYou can either install from pip as:\n```sh\n   pip install yaiv\n```\n\n   Or cloning the git repository:\n   \n```sh\n   git clone https://github.com/mgamigo/YAIV.git\n   cd YAIV\n   pip install .\n```\n\n<p align=\"right\">(<a href=\"#readme-top\">back to top</a>)</p>\n\n---\n\n## Current tools\n\nAll the functions are properly documented (remember that in JupyterLab all the documentation can be conviniently accesed with the **shift + tab** shortcut). All the tools are demostrated in the **[tutorials](Tutorial)**, here is a brief summary of the main modules of YAIV and their current tools:\n\n### I. Plot module\nContains most of the plotting functionalities, currently being:\n- **Electronic band structures** from Quantum Espresso, Vasp, Wannier90 and WannierTools.\n    - Plotting results from different codes against each other.\n- **Phonon spectra** from Quantum Espresso.\n    - Plotting different phonon spectra. It can highlight the DFPT phonons from which the whole spectrum is interpolated.\n\n### II. Convergence module\nA variety of tools for the purpose of inspecting the convergence of different calculations by plotting the results in a digestible way. Currently supports:\n- **Self-consistent calculations:** Given a folder with the quantum-espresso outputs it gives tools for the convergence analysis of various quantities respect to the cutoff, Kgrid and smearing.\n- **DFPT Phonons:** Like the self-consisten convergence analyzer (also respect to cutoff, Kgrid and smeargin). But for the phonon frequencies.\n- **Wannierizations:** Tools for the convergence analysis of the Wannier minimizations done with wannier90.\n\n### III. Utils module\nThe utils module has a variety of utilities mostly focussed on scraping data from output files of different codes. This tools combined can be usefull for various porpuses. All the functions are demostrated in this [tutorial](/Tutorial/Utils_module.ipynb).\nSo far the code supports:\n- **Grepping** tools (either by calling the function or using the **file class**):\n\t- Grepping the **number of electrons** from Quantum Espresso and VASP outputs.\n\t- Grepping the **Fermi level**.\n\t- Grep the **lattice parameters**.\n\t- Grep the **path** from a Quantum Espresso bands.pwi or madtyn.in input.\n\t- Grep the **path and HSP labels** from a KPATH in the [TQC website](https://www.topologicalquantumchemistry.fr/#/) format. (Enter in any compound and click in the \"Download KPATH\" link).\n\t- Grep the **phonon grid** from a Quantum Espresso ph.x output.\n\t- Grep the **total energy** from a Quantum Espresso ph.x output.\n- **Transforming** tools (mainly usefull changes of coordinates):\n\t- **K_basis**: Obtaining the reciprocal lattice vectors.\n\t- **cartesian2cryst**: From cartesian to crystal coordinates.\n\t- **cryst2cartesian**: From crystal to cartesian coordinates.\n\t- **cartesian2spherical**: From cartesian to spherical coordinates.\n\t- **cryst2spherical**: From crystal to spherical coordinates.\n---\n## Examples\nHere are some simple examples:\n```py\nplot.bands(file='DATA/bands/QE/results_bands/CsV3Sb5.bands.pwo',  #raw Quantum Espresso output file with the band structure\n           KPATH='DATA/bands/KPATH',   #File with the Kpath (in order to plot the ticks at the High symmetry points)\n           aux_file='DATA/bands/QE/results_scf/CsV3Sb5.scf.pwo', #File needed to read the number of electrons and lattice parameters\n           title='Electronic bandstructures')    # A title of your liking\n```\n<img src=\"../media/bands.png\" width=\"600\">\n\n```py\nplot.phonons(file='DATA/phonons/2x2x2/results_matdyn/CsV3Sb5.freq.gp', #raw data file with the phonon spectrum\n            KPATH='DATA/bands/KPATH',                                 #File with the Kpath (in order to plot the ticks at the High symmetry points)\n            ph_out='DATA/phonons/2x2x2/results_ph/CsV3Sb5.ph.pwo',    #File with the phonon grid points and lattice vectors.\n            title='Phonon spectra with the (2x2x2) grid highlighted!',   # A title of your liking\n            grid=True,color='navy',linewidth=1)                        #Non-mandatory customization\n```\n<img src=\"../media/phonon.png\" width=\"600\">\n\n\n```py\nconv.kgrid.analysis(data='DATA/convergence/Kgrid/',         #Folder with your DFT outputs\n\t\t    title='K-grid convergence analysis')    #A title of your liking\n```\n<img src=\"../media/convergence.png\" width=\"800\">\n\n\n```py\nconv.wannier.w90(data='DATA/convergence/wannier90/NbGe2.wout',     #Wannier90 output file\n                 title='Wannier minimization (66 WF)')             #A title of your liking\n```\n<img src=\"../media/wannier.png\" width=\"800\">\n\nCombining YAIV tools with the usual **matplotlib sintax** one can generate complex plots as this one (check the [tutorial](Tutorial/Plot_module.ipynb)):\n\n<img src=\"../media/collage.png\" width=\"800\">\n\n\n_(For more examples, please refer to the [Tutorials](Tutorial))._\n\n<p align=\"right\">(<a href=\"#readme-top\">back to top</a>)</p>\n\n---\n\n## Roadmap\n\n- [x] Plot module\n    - [x] Plotting electronic band strucutres\n    - [x] Plotting phonon spectra\n    - [ ] Plotting densities of states (DOS)\n    - [ ] ...\n<!---\n    - [ ] Plotting surface DOS generated by WannierTools (ARPES simulations)\n    - [ ] Plotting contour energy DOS generated by WannierTools\n    - [ ] 3D Band structure plots\n-->\n- [x] Utils module\n    - [x] Grep tools to scrape data form OUTPUT files\n    - [x] Transformation tools for easy changing of coordinates\n    - [ ] ...\n- [x] Convergence analysis tools\n    - [x] Quantum Espresso self consistent calculations\n    - [x] Quantum Espresso phonon spectra\n    - [x] Wannierizations for Wannier90\n    - [ ] ...\n<!---\n- [ ] Crystall structure analysis tools\n    - [ ] Symmetry analysis\n    - [ ] Visualization tools\n    - [ ] ...\n- [ ] Charge density wave analysis\n    - [ ] Reading Quantum Espresso outputs\n    - [ ] Distort crystal structures according to a given phonon\n    - [ ] Linear combinations of condensing modes\n    - [ ] Computing Born–Oppenheimer energy landscapes\n    - [ ] ...\n-->\n- [ ] ...\n\n##### Built With\n\n[![NumPy][numpy.js]][numpy-url]  [![Matplotlib][matplo.js]][matplo-url]  [![ASE][ase.js]][ase-url] \n\n<p align=\"right\">(<a href=\"#readme-top\">back to top</a>)</p>\n\n<!-- MARKDOWN LINKS & IMAGES -->\n[numpy-url]: https://numpy.org/\n[numpy.js]: https://img.shields.io/badge/numpy-%23013243.svg?style=for-the-badge&logo=numpy&logoColor=white\n\n[matplo-url]: https://matplotlib.org/\n[matplo.js]: https://img.shields.io/badge/Matplotlib-%23000000.svg?style=for-the-badge&logo=Matplotlib&logoColor=white\n\n[ase-url]: https://wiki.fysik.dtu.dk/ase/\n[ase.js]: https://img.shields.io/badge/ASE-%23006f5c.svg?style=for-the-badge&logoColor=FF6719\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mgamigo/YAIV",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "yaiv",
    "package_url": "https://pypi.org/project/yaiv/",
    "platform": null,
    "project_url": "https://pypi.org/project/yaiv/",
    "project_urls": {
      "Bug Tracker": "https://github.com/mgamigo/YAIV/issues",
      "Homepage": "https://github.com/mgamigo/YAIV"
    },
    "release_url": "https://pypi.org/project/yaiv/0.2.1/",
    "requires_dist": [
      "ipympl (==0.9.1)",
      "ase"
    ],
    "requires_python": ">=3.6",
    "summary": "Yet another Ab Initio Visualizer with a variety of tools",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16457687,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "afb20d76891204867e42cf127c165e54426c02017255adfec24d1bbec15acfb5",
          "md5": "250b45874518d2b6fa81d71c42dc7177",
          "sha256": "55efd86ddb6b1fb4d8fa2c68f39f863e394742f24592facb1340551aead36d09"
        },
        "downloads": -1,
        "filename": "yaiv-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "250b45874518d2b6fa81d71c42dc7177",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 24064,
        "upload_time": "2022-12-20T18:23:30",
        "upload_time_iso_8601": "2022-12-20T18:23:30.537244Z",
        "url": "https://files.pythonhosted.org/packages/af/b2/0d76891204867e42cf127c165e54426c02017255adfec24d1bbec15acfb5/yaiv-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b942b51704bca9187e08d28c032109d5de438f087ce0080d3a8d6deff5ba9ac3",
          "md5": "771324deb6af9f682be0e8b8a58e8a4c",
          "sha256": "8208860beec31fedb2dc6c3d018bef23ff4ff1eb5b95e5f7381af6f0beeb5423"
        },
        "downloads": -1,
        "filename": "yaiv-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "771324deb6af9f682be0e8b8a58e8a4c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 26482,
        "upload_time": "2022-12-20T18:23:32",
        "upload_time_iso_8601": "2022-12-20T18:23:32.187841Z",
        "url": "https://files.pythonhosted.org/packages/b9/42/b51704bca9187e08d28c032109d5de438f087ce0080d3a8d6deff5ba9ac3/yaiv-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b637e3e3569b1804965ccf78801ef1358472e4c8fe17c4835ef045d274af4fd",
          "md5": "9ffb2255d68826ebe817e0ff059e505e",
          "sha256": "0f626eebbca4265dcb1a19f378df52868a4fa9d28085b153332795a5221ea960"
        },
        "downloads": -1,
        "filename": "yaiv-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9ffb2255d68826ebe817e0ff059e505e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 28182,
        "upload_time": "2022-12-28T09:42:58",
        "upload_time_iso_8601": "2022-12-28T09:42:58.926489Z",
        "url": "https://files.pythonhosted.org/packages/8b/63/7e3e3569b1804965ccf78801ef1358472e4c8fe17c4835ef045d274af4fd/yaiv-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3a481c78604b045ba61c0495ea62a77a820c1bdd5d419bae06a0e4d7e905c3af",
          "md5": "32c8abe167bdf34ba321fba739a9a343",
          "sha256": "7b36072fd7e4282c474410ddfb25e6d718d8587a36746b99e34a9c60a26cc3ce"
        },
        "downloads": -1,
        "filename": "yaiv-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "32c8abe167bdf34ba321fba739a9a343",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 31113,
        "upload_time": "2022-12-28T09:43:01",
        "upload_time_iso_8601": "2022-12-28T09:43:01.070853Z",
        "url": "https://files.pythonhosted.org/packages/3a/48/1c78604b045ba61c0495ea62a77a820c1bdd5d419bae06a0e4d7e905c3af/yaiv-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e708ec72063be6e5087e08ca10475b3c94dcc8ce56bcb7bbe480c4431f66d60a",
          "md5": "24c11b81b9d2fd5b476e0686010dcc28",
          "sha256": "d1ecf5d48e8f131af89a099d56d9f50bb5ddda253d3ffd356d3a3ed25cc217b8"
        },
        "downloads": -1,
        "filename": "yaiv-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "24c11b81b9d2fd5b476e0686010dcc28",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 40116,
        "upload_time": "2023-01-17T10:02:01",
        "upload_time_iso_8601": "2023-01-17T10:02:01.474213Z",
        "url": "https://files.pythonhosted.org/packages/e7/08/ec72063be6e5087e08ca10475b3c94dcc8ce56bcb7bbe480c4431f66d60a/yaiv-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dfcc42ed479533650973b9abd6324d31f8086388f57aade8a5cc2da7733af1b7",
          "md5": "814e374301bf37ea642793e1fe20144e",
          "sha256": "8dfae94355eb5da3b36c5fb6afebc73219d90accea913ca2ac3fa0c22cf0f3c9"
        },
        "downloads": -1,
        "filename": "yaiv-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "814e374301bf37ea642793e1fe20144e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 38888,
        "upload_time": "2023-01-17T10:02:03",
        "upload_time_iso_8601": "2023-01-17T10:02:03.668684Z",
        "url": "https://files.pythonhosted.org/packages/df/cc/42ed479533650973b9abd6324d31f8086388f57aade8a5cc2da7733af1b7/yaiv-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b332bfb558b31f9f595254de0cee31141fd5e107f86351ca249e7517be0fe50e",
          "md5": "24525311abf74a9167430767ff285641",
          "sha256": "879d07d394b7b9cea23893ea28a02736d6279eceef936cf6a32d4db6b02dcb52"
        },
        "downloads": -1,
        "filename": "yaiv-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "24525311abf74a9167430767ff285641",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 40110,
        "upload_time": "2023-01-17T12:54:49",
        "upload_time_iso_8601": "2023-01-17T12:54:49.867458Z",
        "url": "https://files.pythonhosted.org/packages/b3/32/bfb558b31f9f595254de0cee31141fd5e107f86351ca249e7517be0fe50e/yaiv-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6f7d16ea0eb89b1f2128515d00321e7ca03dd0b11482312292d6962254b57dd7",
          "md5": "b829971f24afb33eeb73e2da29ec2847",
          "sha256": "94b3eaaf29d8f17cca51a35ed136a279183a7438c0ee6e94b87fcc5310ac54a3"
        },
        "downloads": -1,
        "filename": "yaiv-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b829971f24afb33eeb73e2da29ec2847",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 38909,
        "upload_time": "2023-01-17T12:54:51",
        "upload_time_iso_8601": "2023-01-17T12:54:51.958848Z",
        "url": "https://files.pythonhosted.org/packages/6f/7d/16ea0eb89b1f2128515d00321e7ca03dd0b11482312292d6962254b57dd7/yaiv-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b332bfb558b31f9f595254de0cee31141fd5e107f86351ca249e7517be0fe50e",
        "md5": "24525311abf74a9167430767ff285641",
        "sha256": "879d07d394b7b9cea23893ea28a02736d6279eceef936cf6a32d4db6b02dcb52"
      },
      "downloads": -1,
      "filename": "yaiv-0.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "24525311abf74a9167430767ff285641",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 40110,
      "upload_time": "2023-01-17T12:54:49",
      "upload_time_iso_8601": "2023-01-17T12:54:49.867458Z",
      "url": "https://files.pythonhosted.org/packages/b3/32/bfb558b31f9f595254de0cee31141fd5e107f86351ca249e7517be0fe50e/yaiv-0.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6f7d16ea0eb89b1f2128515d00321e7ca03dd0b11482312292d6962254b57dd7",
        "md5": "b829971f24afb33eeb73e2da29ec2847",
        "sha256": "94b3eaaf29d8f17cca51a35ed136a279183a7438c0ee6e94b87fcc5310ac54a3"
      },
      "downloads": -1,
      "filename": "yaiv-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "b829971f24afb33eeb73e2da29ec2847",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 38909,
      "upload_time": "2023-01-17T12:54:51",
      "upload_time_iso_8601": "2023-01-17T12:54:51.958848Z",
      "url": "https://files.pythonhosted.org/packages/6f/7d/16ea0eb89b1f2128515d00321e7ca03dd0b11482312292d6962254b57dd7/yaiv-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}