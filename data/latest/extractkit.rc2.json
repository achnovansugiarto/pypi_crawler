{
  "info": {
    "author": "Karthik Raja, Vignesh R",
    "author_email": "teampcbuild01@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "<h1 align=\"center\">ExtractKit</h1>\n\n### what is this??\n\n    This is a Easy Scrapper for scrapping essential data from web\n\n## What can it Scrape?\n\n* **[Price and Key Specs of car](#scrap-car-data)** \n* **[Price and Key Specs of bike](#scrap-bike-data)**, \n* **[Price and specs of mobiles](#scrap-mobile-specifications)** \n* **[Scrap Flipkart](#scrap-flipkart)** \n* **[Scrap Price and details of PC Building components](#scrap-pc-components)**\n* **[Scrap Live News and other Archived News](#scrap-news-data)**\n\n## How to use this??\n\nSo simple!! Just go and type\n\n```\npip install extractkit\n```\nBam!! You just installed a great scraping tool\n\n## How to use in python??\n\n    import ExtractKit as ekit #or whatever\n\n## Detailed documentation\n\n### Scrap Car Data\nThis scrapes car specification from [Carwale Website](https://www.carwale.com/)\n\nTo Scrap car Specification,\n\n    from ExtractKit import carExtractor as car\n\n    data = car.extractCar('hyundai',\"creta\")\n    print(data)\n\n#### extractCar(brand, model),\n\n**Parameters,**\n**brand** - string data type, enter the brand name of the car you want to search\n**model** - string data type, enter the model name of the car you want to search\n\nResult Data Looks like this:\n```\n    {\n    'product': 'Hyundai Creta', \n    'price': '₹ 10.00 Lakh'\n    }\n```\n\n### Scrap Bike Data\nThis scrapes bike specification from [Bikewale Website](https://www.bikewale.com/)\n\nTo Scrap Bike Specification,\n\n    from ExtractKit import bikeExtractor as bike\n\n    data = bike.extractBike('yamaha',\"R15\")\n    print(data)\n\n#### extractBike(brand, model)\n\n**Parameters,**\n**brand** - string data type, enter the brand name of the bike you want to search\n**model** - string data type, enter the model name of the bike you want to search\n\nResult Data Looks like this:\n```\n    {\n    \"product\": \"Yamaha YZF R15 V3\", \n    \"price\": \"1,55,334\", \n    \"Engine Capacity\": \"155 cc\", \n    \"Mileage\": \"43 kmpl\", \n    \"Transmission\": \"6 Speed Manual \", \n    \"Kerb Weight\": \"142 kg\", \n    \"Fuel Tank Capacity\": \"11 litres\", \n    \"Seat Height\": \"815 mm\"\n    }\n```\n\n### Scrap Mobile Specifications\nThis scraps data from [91 Mobiles Website](https://www.91mobiles.com/)\n\n    from ExtractKit import gadgetsExtractor as gadgets\n    x = gadgets.extractMobile('samsung','galaxy a52')\n    print(x)\n\nIn extractMobile(brand, model),\n* Brand and model must be passed as string\n\nResult data looks like this:\n```\n{\n    \"name\": \"Samsung Galaxy A52\",\n    \"price\": \" 23,499\",\n    \"variants\": [\n        \"128GB Storage, 8GB RAM\\n\"\n    ],\n    \"specs\": [\n        [\n            \"RAM\",\"6GB\"\n        ],\n        [   \n            \"Processor\",\"QualcommSnapdragon720G\"\n        ],\n        [   \n            \"Rear Camera\",\"64MP+12MP+5MP+5MP\"\n        ],\n        [\n            \"Front Camera\",\"32MP\"\n        ],\n        [\n            \"Battery\",\"4500mAh\"\n        ],\n        [...],\n        .\n        .\n        .\n        [...]\n    ]\n}\n```\n\n### Scrap Flipkart\nThis Scraps data from [flipkart.com](https://flipkart.com)\n\nTo Scrap Flipkart products,\n\n    from ExtractKit import flipkartExtractor as flipkart\n    x = flipkart.extractFlipkart('XBOX Series S')\n    print(x)\n\nIn extractFlipkart(product),\n* It must be a valid product.\n* Product must be in string format.\n\nResult data looks like this:\n\n```\n{\n    \"product\": \"MICROSOFT Xbox Series S 512 GB\\u00a0\\u00a0(White)\",\n    \"price\": \"\\u20b934,990\",\n    \"url\": \"https://www.flipkart.com/microsoft-xbox-series-s-512-gb/p/itm13c51f9047da8?pid=GMCFVPFCNHHZQBNA&lid=LSTGMCFVPFCNHHZQBNAH2FMXL&marketplace=FLIPKART&q=XBOX+Series+S&store=4rr&srno=s_1_1&otracker=search&fm=organic&iid=a98ea799-22c1-440d-b211-9835eb1790eb.GMCFVPFCNHHZQBNA.SEARCH&ppt=None&ppn=None&ssid=l55b2xbdfk0000001625828211339&qH=fd75188725591a70\"\n}\n```\n\nYou can also use extractFlipkartUrl(url) to scrap data from the given flipkart link\n\n    from ExtractKit import flipkartExtractor as flipkart\n    x = flipkart.extractFlipkartUrl('https://www.flipkart.com/cyberpunk-2077-limited-edition/p/itm6e7fc6515a3b3?pid=GAMG2Z8UGZHTYHAF&lid=LSTGAMG2Z8UGZHTYHAFHTIMQD&marketplace=FLIPKART&q=cyberpunk+2077&store=4rr%2Ffa6%2F27p%2Fmtr&spotlightTagId=TrendingId_4rr%2Ffa6%2F27p%2Fmtr&srno=s_1_1&otracker=AS_QueryStore_OrganicAutoSuggest_2_9_na_na_na&otracker1=AS_QueryStore_OrganicAutoSuggest_2_9_na_na_na&fm=SEARCH&iid=0fa0a337-bb8d-4126-9fe6-9421bcbdb3ee.GAMG2Z8UGZHTYHAF.SEARCH&ppt=sp&ppn=sp&ssid=rg6sh1i72o0000001625828417574&qH=65fc51bd3f81e7c2')\n    print(x)\n\nThe result for this function is:\n```\n{\n    \"product\": \"Cyberpunk 2077 (Limited Edition) (for PS4)\",\n    \"price\": \"₹2,899\"\n}\n```\n\n### Scrap PC Components\n\nThis Scraps data from [PC Studio](https://www.pcstudio.in/)\n\nTo Scrap PC Components,\n\n    from ExtractKit import pcBuildExtractor as pcBuild\n    x = pcBuild.extractProcessors()\n    print(x)\n\nResult data looks like this:\n```\n{\n    \"0\": {\n        \"title\": \"AMD RYZEN 3 3200G OPEN BOX OEM PROCESSOR WITH RX VEGA 8 GRAPHICS (UP TO 4.0GHZ 6 MB CACHE) \",\n        \"price\": \"\\u20b911,300.00\",\n        \"details\": \"https://www.pcstudio.in/product/amd-ryzen-3-3200g-open-box-oem-processor-with-rx-vega-8-graphics-up-to-4-0ghz-6-mb-cache/\",\n        \"img\": \"https://www.pcstudio.in/wp-content/uploads/2021/07/AMD-RYZEN-3-3200G-OPEN-BOX-OEM-PROCESSOR-WITH-RX-VEGA-8-GRAPHICS-1.jpg\"\n    },\n    \"1\":{...},\n    \"2\":{...},\n}\n```\n\nother functions available are:\n    \n    print(pcBuild.extractProcessors())    #Extract Processors Data\n    print(extractMotherboards())          #Extract Motherboard Data \n    print(extractRams())                  #Extract RAM Data\n    print(extractStorage1())              #Extract Storages Data\n    print(extractStorage2())              #Extract Storages Data too\n    print(extractCabinets())              #Extract Cabinet Data\n    print(extractCoolers())               #Extract Coolers Data\n    print(extractGPUs())                  #Extract GPU Data\n    print(extractPowerSupplys())          #Extract PowerSupplyUnit Data\n    print(extractDisplays())              #Extract Display Data\n\n\n### Scrap News Data\nThis scraps live and archive news data from [One India News](https://oneindia.com)\n\nTo Scrap news,\n\n    from ExtractKit import newsExtractor as news\n\n    data = news.extractNewsArchives('english',2021,7,1)\n    print(data)\n\n**Parameters,**\n**language** - string data type, enter the language in which you want to search\n**Avaliable Languages are**\n* tamil\n* telugu\n* malayalam\n* bengali\n* gujarati\n* hindi\n* kannada\n\n**year** - integer data type, enter the year in which you want to search\n**month** - integer data type, enter the month in which you want to search\n**date** - integer data type, enter the date in which you want to search\n\nResult Data Looks like this:\n```\n    {\n    \"language\": \"english\",\n    \"1\": {\n        \"category\": \"bengaluru\",\n        \"news\": \"No interviews to fill up vacancies to post of assistant professors, principles in Karnataka\\u2019s higher education\"\n    },\n    \"2\":{...},\n    \"3\":{...},\n    ....\n```\n\n## Credits\n<p align=\"left\">  \n<b>Karthik Raja K</b> &emsp;\n<a href=\"https://instagram.com/mr.anonymous_official\" target=\"blank\"><img width=25 align=\"center\" src=\"https://img.icons8.com/doodle/50/000000/instagram-new.png\"/></a>  \n<a href=\"https://github.com/mr-anonymous-official/\" target=\"blank\"><img width=25 align=\"center\" src=\"https://img.icons8.com/doodle/50/000000/github.png\"/></a>  \n<a href=\"https://www.linkedin.com/in/karthikraja01/\" target=\"blank\"><img width=25 align=\"center\" src=\"https://img.icons8.com/doodle/48/000000/linkedin--v2.png\"/></a>  \n</p>\n\n<p align=\"left\">  \n<b>Vignesh R</b> &emsp;&emsp;&emsp;\n<a href=\"https://instagram.com/vignesh_r_\" target=\"blank\"><img width=25 align=\"center\" src=\"https://img.icons8.com/doodle/50/000000/instagram-new.png\"/></a>  \n<a href=\"https://github.com/codervignesh/\" target=\"blank\"><img width=25 align=\"center\" src=\"https://img.icons8.com/doodle/50/000000/github.png\"/></a>  \n<a href=\"https://www.linkedin.com/in/vignesh-r-/\" target=\"blank\"><img width=25 align=\"center\" src=\"https://img.icons8.com/doodle/48/000000/linkedin--v2.png\"/></a>  \n</p>\n\n<br/>\n\n### Source Code Available in [Github](https://github.com/coders-square/ExtractKit)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/coders-square/ExtractKit",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "extractkit",
    "package_url": "https://pypi.org/project/extractkit/",
    "platform": "",
    "project_url": "https://pypi.org/project/extractkit/",
    "project_urls": {
      "Bug Tracker": "https://github.com/coders-square/ExtractKit/issues",
      "Homepage": "https://github.com/coders-square/ExtractKit"
    },
    "release_url": "https://pypi.org/project/extractkit/1.0.1/",
    "requires_dist": [
      "beautifulsoup4",
      "requests"
    ],
    "requires_python": ">=3.5",
    "summary": "A Easy Scrapper for scrapping essential data from web (Like Price of car, bike, mobiles, and flipkart, and PC Building components)",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10865049,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8072b0e0bbd7263f713a322433487dd69bc0e8647b7391aad33aaba14f8b9217",
          "md5": "70b18e329901ef0feb0081c7d849c3c4",
          "sha256": "e77a2a87bc6c240ae0cc2b51bd3269d7d8f1758e6f2535757df3ac4693efb004"
        },
        "downloads": -1,
        "filename": "extractkit-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "70b18e329901ef0feb0081c7d849c3c4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 10106,
        "upload_time": "2021-07-09T12:53:46",
        "upload_time_iso_8601": "2021-07-09T12:53:46.187445Z",
        "url": "https://files.pythonhosted.org/packages/80/72/b0e0bbd7263f713a322433487dd69bc0e8647b7391aad33aaba14f8b9217/extractkit-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "83ba10931e9add951b71a881b69ca3cb449728a043635a669401edd91e69f51e",
          "md5": "fbf5d2b4721c347d906e92b55414fc4c",
          "sha256": "6f53eba791d942d470d287a596619428c36b4270fb6af31dcd989e3afad73270"
        },
        "downloads": -1,
        "filename": "extractkit-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fbf5d2b4721c347d906e92b55414fc4c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 7748,
        "upload_time": "2021-07-09T12:53:47",
        "upload_time_iso_8601": "2021-07-09T12:53:47.388149Z",
        "url": "https://files.pythonhosted.org/packages/83/ba/10931e9add951b71a881b69ca3cb449728a043635a669401edd91e69f51e/extractkit-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "af13f7b9cae019e6a948d0d52501b2e3c8a330a8f372348143417631a22c62db",
          "md5": "365c25f6cff86617daf9dc0c9d583993",
          "sha256": "5db34133092b27531a424c050828b494ab4c4476b66b2b374bc4f5614205ea98"
        },
        "downloads": -1,
        "filename": "extractkit-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "365c25f6cff86617daf9dc0c9d583993",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 10104,
        "upload_time": "2021-07-09T13:03:22",
        "upload_time_iso_8601": "2021-07-09T13:03:22.202791Z",
        "url": "https://files.pythonhosted.org/packages/af/13/f7b9cae019e6a948d0d52501b2e3c8a330a8f372348143417631a22c62db/extractkit-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a290645259b4f896dbf5bfb777b076785947cc198d01a78f3d3ee4b103b0f61b",
          "md5": "b8d2ab4518fa5b4a64972a9f495c3bd2",
          "sha256": "da57198f121a0d39af67f7b04ab3e5f0d0ed7b60038a8cc360ef8cccae6e780d"
        },
        "downloads": -1,
        "filename": "extractkit-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b8d2ab4518fa5b4a64972a9f495c3bd2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 7753,
        "upload_time": "2021-07-09T13:03:23",
        "upload_time_iso_8601": "2021-07-09T13:03:23.647659Z",
        "url": "https://files.pythonhosted.org/packages/a2/90/645259b4f896dbf5bfb777b076785947cc198d01a78f3d3ee4b103b0f61b/extractkit-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "af13f7b9cae019e6a948d0d52501b2e3c8a330a8f372348143417631a22c62db",
        "md5": "365c25f6cff86617daf9dc0c9d583993",
        "sha256": "5db34133092b27531a424c050828b494ab4c4476b66b2b374bc4f5614205ea98"
      },
      "downloads": -1,
      "filename": "extractkit-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "365c25f6cff86617daf9dc0c9d583993",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 10104,
      "upload_time": "2021-07-09T13:03:22",
      "upload_time_iso_8601": "2021-07-09T13:03:22.202791Z",
      "url": "https://files.pythonhosted.org/packages/af/13/f7b9cae019e6a948d0d52501b2e3c8a330a8f372348143417631a22c62db/extractkit-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a290645259b4f896dbf5bfb777b076785947cc198d01a78f3d3ee4b103b0f61b",
        "md5": "b8d2ab4518fa5b4a64972a9f495c3bd2",
        "sha256": "da57198f121a0d39af67f7b04ab3e5f0d0ed7b60038a8cc360ef8cccae6e780d"
      },
      "downloads": -1,
      "filename": "extractkit-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "b8d2ab4518fa5b4a64972a9f495c3bd2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 7753,
      "upload_time": "2021-07-09T13:03:23",
      "upload_time_iso_8601": "2021-07-09T13:03:23.647659Z",
      "url": "https://files.pythonhosted.org/packages/a2/90/645259b4f896dbf5bfb777b076785947cc198d01a78f3d3ee4b103b0f61b/extractkit-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}