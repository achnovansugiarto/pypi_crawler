{
  "info": {
    "author": "RedTurtle",
    "author_email": "sviluppoplone@redturtle.it",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Plone",
      "Framework :: Plone :: 5.0",
      "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7"
    ],
    "description": "=======================\nRedTurtle importer base\n=======================\n\nTool to migrate contents between Plone sites based on transmogrifier.\n\nThis tool works in addition with `redturtle.exporter.base`__\n\n__ https://pypi.org/project/redturtle.exporter.base\n\n\nDependencies\n============\n\nThis product is made over other useful tools:\n\n* `collective.jsonmigrator`__\n* `collective.transmogrifier`__\n* `transmigrify.dexterity`__\n\n__ https://github.com/collective/collective.jsonmigrator\n__ https://github.com/collective/collective.transmogrifier\n__ https://github.com/collective/transmogrify.dexterity\n\nThese tools are not yet actively maintained, so we moved useful parts into this\nproject to have a working Python 3 importer based on transmogrifier.\n\n\nFeatures\n========\n\n- Handle migration for basic content-types\n- Discussions migration\n- Customizable import procedure via blueprints\n- Extensible with more specific blueprints\n- Possibility to customize specific step options with custom adapters\n- Review view after migration with process results\n\nInstallation\n============\n\nInstall redturtle.importer.base by adding it to your buildout::\n\n    [buildout]\n\n    ...\n\n    eggs =\n        redturtle.importer.base\n\n\nand then running ``bin/buildout``\n\nYou don't have to install it. In this way, after the data migration, you can\nremove it from the buildout and everything is clean.\n\n\nUsage\n=====\n\nMigration view\n--------------\nTo start a migration, you only need to call `@@data-migration` view on site root.\n\nIn this view you can see the blueprint configuration (base and overrided), and start the process.\n\nPipelines customization\n-----------------------\n\nThis tool is based on transmogrifier and works with blueprints.\nA blueprint is basically a config file that lists all the steps needed for the migration.\n\nThis product has a `default blueprint`__ for basic migrations, that can be used as is.\n\nDefault blueprint can be easily customized using a `.migrationconfig.cfg` file located in buildout root folder.\n\nIn this file you can override already present parts/variables (like `pipelines` into `[transmogrifier]` section) or \nadd new ones (for example a new step).\n\nFor example, catalogsource step can be configured with some queries like this::\n\n    [catalogsource]\n    catalog-query = {'portal_type': ['Document', 'Event', 'News Item']}\n    ...\n\nIn `.migrationconfig.cfg` file, under `[catalogsource]` section, you also need to set some settings about how to retrieve data on source site::\n\n    [catalogsource]\n    ...\n    remote-url = http://localhost:8080\n    remote-root = /Plone\n    catalog-path = /Plone/portal_catalog\n    remote-username = username\n    remote-password = password\n    ...\n\n\nBefore running a migration, you can check the final configuration in `@@data-migration` view.\n\n\n__ https://github.com/RedTurtle/redturtle.importer.base/blob/python3/src/redturtle/importer/base/transmogrifier/redturtleplone5.cfg\n\n\ncatalogsource configuration\n---------------------------\n\nThis is an example of `[catalogsource]` part::\n \n    [catalogsource]\n    ...\n    remote-url = http://localhost:8080\n    remote-root = /Plone\n    catalog-path = /Plone/portal_catalog\n    remote-username = username\n    remote-password = password\n\nRequired options are:\n\n- `remote-url`: The url of source Plone site\n- `remote-root`: The path of Plone site that we want to migrate\n- `remote-username`: Credentials to access to source site\n- `remote-password`: Credentials to access to source site\n\nAdditional options are:\n\n- `default-local-path`: A path where save migrate contents in destination Site. This path will replace item's root path. Destination root path is not needed in this path.\n- `skip-private`: Boolean to migrate or not private items into destination. Default is `False`.\n- `remote_skip_paths`: A list of paths from source site that will be skipped during migration process.\n- `incremental-migration`: Boolean value. If a content already migrate hasn't been modified since last migration, don't override it. Default is `False`.\n- `ignore-cache`: Boolean value. If True, ignore local cache and always get content data from source site.\n- `cache-dir`: Local folder where migration data cache will be stored. Default is `/tmp/migration/migration_cache`.\n- `migration-dir`: Local fodler where migration support files (for final summary for example) will be saved. Default is '/tmp/migration'.\n\n\nCustom types mapping\n--------------------\n\n*contentsmapping* is the section that allows to convert one portal_type to another before object creation.\n\nThere is a plugin system based on subscribers that allows plugins to add custom mappings.\n\nYou need to register a subscriber for `IPortalTypeMapping` like this::\n\n    <subscriber\n        factory=\".types_mapping.MyCustomMapping\"\n        provides=\"redturtle.importer.base.interfaces.IPortalTypeMapping\"/>\n\nAnd then you need to create the class::\n\n    @adapter(IPloneSiteRoot, IBrowserRequest)\n    @implementer(IPortalTypeMapping)\n    class MyCustomMapping(object):\n        order = 100\n\n        def __init__(self, context, request):\n            self.context = context\n            self.request = request\n\n        def __call__(self, item, typekey):\n            \"\"\"\n            \"\"\"\n            portal_type = item[typekey]\n            if portal_type == \"Type-A\":\n                item[typekey] = \"Type-B\"\n                ...\n            return item\n\n\nCustom steps for specific portal types\n--------------------------------------\n\nIf you are migrating a content-type that needs some manual fixes after the creation, you can do it with an adapter.\n\nYou only need to register an adapter for your content-type like this::\n\n    <adapter\n      for=\"my.product.interfaces.IMyInterface\"\n      provides=\"redturtle.importer.base.interfaces.IMigrationContextSteps\"\n      factory=\".steps.MyTypeSteps\"\n    />\n\n\nAnd then you need to provide a \"doSteps\" method in the class::\n\n    from redturtle.importer.base.interfaces import IMigrationContextSteps\n    from zope.interface import implementer\n\n    @implementer(IMigrationContextSteps)\n    class MyTypeSteps(object):\n\n        def __init__(self, context):\n            self.context = context\n\n        def doSteps(self):\n            \"\"\"\n            do something here\n            \"\"\"\n\nExample specific importers\n==========================\n\nThere are some per-project importers that we used to migrate some projects and you can use them as a starting point\nto develop new ones.\n\nThey are basically packages that you need to include in your buildout and provides some custom steps for specific types:\n\n- `redturtle.importer.rer`__\n- `redturtle.importer.volto`__\n\n__ https://github.com/RedTurtle/redturtle.importer.rer\n__ https://github.com/RedTurtle/redturtle.importer.volto\n\n\nImport Users and groups\n=======================\n\nYou can also import users and groups from source site.\n\nYou only need to add a section to your migration config file like this::\n\n    [users_and_groups]\n    import-users = True\n    import-groups = True\n\nThe tool will call two views from source site and will use the settings \n(remote-url, remote-root and credentials) from *[catalogsource]* section.\n\nThis import is performed after transmogrifier steps.\n\n\nContribute\n==========\n\n- Issue Tracker: https://github.com/RedTurtle/redturtle.importer.base/issues\n- Source Code: https://github.com/RedTurtle/redturtle.importer.base\n\nCredits\n=======\n\nThis product has been developed with some help from\n\n.. image:: https://kitconcept.com/logo.svg\n   :alt: kitconcept\n   :width: 300\n   :height: 80\n   :target: https://kitconcept.com/\n\nLicense\n=======\n\nThe project is licensed under the GPLv2.\n\n\nContributors\n============\n\n- RedTurtle, sviluppoplone@redturtle.it\n\n\nChangelog\n=========\n\n2.1.0 (2022-04-10)\n------------------\n\n- Better handle datetime and date values.\n  [cekk]\n- Make transmogrifier more configurable.\n  [cekk]\n\n2.0.2 (2021-02-01)\n------------------\n\n- Add geolocation deserializer.\n  [cekk]\n\n\n2.0.1 (2020-12-18)\n------------------\n\n- Handle custom destination path.\n  [cekk]\n\n2.0.0 (2020-07-28)\n------------------\n\n- Heavy refactoring for python3 compatibility.\n  [cekk]\n- Allow to import users and groups.\n  [cekk]\n- Remove unmaintained dependencies and move needed code here.\n  [cekk]\n\n1.0.5 (2019-03-19)\n------------------\n\n- fixed fix_link_noreference function.\n  [eikichi18]\n\n\n1.0.4 (2019-02-08)\n------------------\n\n- Added fix for links without any references. Added dedicated report after migration.\n  [daniele]\n\n- Added check in schemaupdater for leave field empty when value is empty.\n  [eikichi18]\n\n- Fix broken links generation list.\n  [cekk]\n\n\n1.0.3 (2018-10-18)\n------------------\n\n- Added json item to adapters methods.\n  [daniele]\n\n\n1.0.2 (2018-10-11)\n------------------\n\n- Fixed mapping for link internal/external link.\n  [eikichi18]\n\n\n1.0.1 (2018-10-09)\n------------------\n\n- Fix uudi matcher after migration.\n  [eikichi18]\n\n\n1.0.0 (2018-10-04)\n------------------\n\n- Add check if Plone Site element was indexed.\n- Add support for specific context steps with adapters.\n  [cekk]\n\n\n1.0a4 (2018-09-03)\n------------------\n\n- Handle cases where exlude-type is not set.\n  [cekk]\n- Generate a list of broken links in tinymce after migration,\n  and expose them in final report view.\n  [cekk]\n\n1.0a3 (2018-07-19)\n------------------\n\n- Added check for element's father data.\n  [eikichi18]\n\n\n1.0a2 (2018-07-03)\n------------------\n\n- Break migration if doesn't find a content types.\n  [eikichi18]\n\n\n1.0a1 (2018-06-19)\n------------------\n\n- Initial release.\n  [eikichi18]",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://pypi.python.org/pypi/redturtle.importer.base",
    "keywords": "Python Plone",
    "license": "GPL version 2",
    "maintainer": "",
    "maintainer_email": "",
    "name": "redturtle.importer.base",
    "package_url": "https://pypi.org/project/redturtle.importer.base/",
    "platform": null,
    "project_url": "https://pypi.org/project/redturtle.importer.base/",
    "project_urls": {
      "Homepage": "https://pypi.python.org/pypi/redturtle.importer.base"
    },
    "release_url": "https://pypi.org/project/redturtle.importer.base/2.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Imports contents from a json source",
    "version": "2.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13468336,
  "releases": {
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7a4ceee30d0e30cc389e23d51fb402d11f2862de2a3a7fa216854428d0f42d0d",
          "md5": "136365df9b3d973f63a3f7fc57504bf4",
          "sha256": "46bbbb66bde89c00889109d8178c811a6bc09df1b281687be976f829a4be728c"
        },
        "downloads": -1,
        "filename": "redturtle.importer.base-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "136365df9b3d973f63a3f7fc57504bf4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 53990,
        "upload_time": "2020-07-28T08:58:35",
        "upload_time_iso_8601": "2020-07-28T08:58:35.935497Z",
        "url": "https://files.pythonhosted.org/packages/7a/4c/eee30d0e30cc389e23d51fb402d11f2862de2a3a7fa216854428d0f42d0d/redturtle.importer.base-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "51fb270c71ca068d1a464b3c7569a8495651fd98210742fdc35fb71bf204ab2e",
          "md5": "4ebdc66a5f0984005b6a0a2ec276142b",
          "sha256": "e10170af6b48af31450115691718b371f70f3eb78c09d854449a5fa2306c4023"
        },
        "downloads": -1,
        "filename": "redturtle.importer.base-2.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4ebdc66a5f0984005b6a0a2ec276142b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 55050,
        "upload_time": "2020-12-18T13:05:47",
        "upload_time_iso_8601": "2020-12-18T13:05:47.644488Z",
        "url": "https://files.pythonhosted.org/packages/51/fb/270c71ca068d1a464b3c7569a8495651fd98210742fdc35fb71bf204ab2e/redturtle.importer.base-2.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c5b39f8cbe4c4bf8f954ba5d51a034ebd09cf14de300a93527859bc90ded2cd9",
          "md5": "7c1b4bb69009b144ccf7f2fa13637bce",
          "sha256": "8a940d3825d4a3a26e12efda8244fe61add521480cb1f26d23ca64f3da099dde"
        },
        "downloads": -1,
        "filename": "redturtle.importer.base-2.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7c1b4bb69009b144ccf7f2fa13637bce",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 55346,
        "upload_time": "2021-02-01T08:28:10",
        "upload_time_iso_8601": "2021-02-01T08:28:10.962126Z",
        "url": "https://files.pythonhosted.org/packages/c5/b3/9f8cbe4c4bf8f954ba5d51a034ebd09cf14de300a93527859bc90ded2cd9/redturtle.importer.base-2.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e30e9cab06f51286a6cd11134494377d9e34034fdc982f3a8aa6afec1ae027c3",
          "md5": "627a4d7582fc3212b34bd1286f2a9d4f",
          "sha256": "92175750a157baf38ef78ad5d32b6ea2418bfc39df6ca5b24259e05de27a5406"
        },
        "downloads": -1,
        "filename": "redturtle.importer.base-2.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "627a4d7582fc3212b34bd1286f2a9d4f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 57307,
        "upload_time": "2022-04-10T11:41:33",
        "upload_time_iso_8601": "2022-04-10T11:41:33.760431Z",
        "url": "https://files.pythonhosted.org/packages/e3/0e/9cab06f51286a6cd11134494377d9e34034fdc982f3a8aa6afec1ae027c3/redturtle.importer.base-2.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e30e9cab06f51286a6cd11134494377d9e34034fdc982f3a8aa6afec1ae027c3",
        "md5": "627a4d7582fc3212b34bd1286f2a9d4f",
        "sha256": "92175750a157baf38ef78ad5d32b6ea2418bfc39df6ca5b24259e05de27a5406"
      },
      "downloads": -1,
      "filename": "redturtle.importer.base-2.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "627a4d7582fc3212b34bd1286f2a9d4f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 57307,
      "upload_time": "2022-04-10T11:41:33",
      "upload_time_iso_8601": "2022-04-10T11:41:33.760431Z",
      "url": "https://files.pythonhosted.org/packages/e3/0e/9cab06f51286a6cd11134494377d9e34034fdc982f3a8aa6afec1ae027c3/redturtle.importer.base-2.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}