{
  "info": {
    "author": "Harshavardhan M",
    "author_email": "harsha7vardhan@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# EazyPredict :sunny:\n\n\"Welcome to the 'EazyPredict' module, where we make predictions as simple as 1, 2, 3... and the jokes are always a 4.\"\n- ChatGPT when asked for a joke to begin this module documentation. :P\n\nEazyPredict serves as a quick way to try out multiple prediction algorithms on data while writing as few lines as possible. It also provides the possibility to create an ensemble of the top models (Not yet implemented)\n\nThe 'EazyPredict' module was heavily inspired by [LazyPredict](https://github.com/shankarpandala/lazypredict). This module varies in terms of its functionality and intended use, as outlined in the following ways:\n\n- The 'EazyPredict' module utilizes a limited number of prediction algorithms (around 9) in order to minimize memory usage and prevent potential issues on platforms such as Kaggle.\n\n- Users have the option to input a custom list of prediction algorithms (as demonstrated in the example provided) in order to perform personalized comparisons.\n\n- The models can be saved to an output folder at the user's discretion and are returned as a dictionary, allowing for easy addition of custom hyperparameters.\n\n- The top 5 models are selected to create an ensemble using a voting classifier (this feature is not yet implemented).\n\n# Installation\n\n```python\npip install eazypredict\n```\n\n# Usage\n\n### For classification\n\n```python\nfrom eazypredict.EazyClassifier import EazyClassifier\n\nfrom sklearn.datasets import load_breast_cancer\nfrom sklearn.model_selection import train_test_split\n\ndata = load_breast_cancer()\nX = data.data\ny = data.target\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=.5,random_state =123)\n\nclf = EazyClassifier()\n\nmodel_list, prediction_list, model_results = clf.fit(X_train, X_test, y_train, y_test)\n\nprint(model_results)\n```\n### OUTPUT\n```\n                        Accuracy  f1 score  ROC AUC score\nXGBClassifier           0.978947  0.978990       0.979302\nLGBMClassifier          0.971930  0.971930       0.969594\nRandomForestClassifier  0.968421  0.968516       0.968953\nRidgeClassifier         0.964912  0.964670       0.955671\nMLPClassifier           0.961404  0.961185       0.952923\nGaussianNB              0.957895  0.957707       0.950176\nDecisionTreeClassifier  0.936842  0.937093       0.935800\nKNeighborsClassifier    0.936842  0.936407       0.925264\nSVC                     0.919298  0.917726       0.896778\nSGDClassifier           0.831579  0.834856       0.861811\n```\n\n### For regression\n\n```python\nfrom eazypredict.EazyRegressor import EazyRegressor\n\nfrom sklearn.datasets import fetch_california_housing\nfrom sklearn.preprocessing import RobustScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.utils import shuffle\nimport numpy as np\n\ncalifornia_housing = fetch_california_housing(as_frame=True)\nX, y = california_housing.data, california_housing.target\n\nscaler = RobustScaler()\nX_norm = pd.DataFrame(scaler.fit_transform(X), columns=X.columns)\n\nX_train, X_test, y_train, y_test = train_test_split(X_norm, y, test_size= 0.2)\n\nreg = EazyRegressor()\nmodels, predictions = reg.fit(X_train, X_test, y_train, y_test)\n\nprint(models)\n```\n### OUTPUT\n```\n                           RMSE       R Squared\nLGBMRegressor              0.468025\t  0.838435\nXGBRegressor               0.470601\t  0.836651\nRandomForestRegressor      0.490834\t  0.822303\nMLPRegressor               0.590093\t  0.743167\nKNeighborsRegressor        0.646152\t  0.692051\nNuSVR                      0.656935\t  0.681687\nDecisionTreeRegressor      0.704143\t  0.634294\nLinearRegression           0.736127\t  0.600318\nRidge                      0.736145\t  0.600297\nGaussianProcessRegressor   10.893585\t-86.528957\n```\n\n### Creating an ensemble model\n\n```python\nreg = EazyRegressor()\n\nmodel_dict, prediction_list, model_results = reg.fit(X_train, y_train, X_test, y_test)\n\nensemble_reg, ensemble_results = reg.fitVotingEnsemble(model_dict, model_results)\nprint(ensemble_results)\n```\n### OUTPUT\n```\n                                                            RMSE        R Squared\nLGBMRegressor XGBRegressor RandomForestRegress...           0.48638   0.825514\n```\n\n### Custom Estimators\n\nGet more estimators from [sklearn](https://scikit-learn.org/1.0/modules/generated/sklearn.utils.all_estimators.html).\n\n```python\ncustom_list = [\n  \"LinearSVC\",\n  \"NearestCentroid\",\n  \"ExtraTreeClassifier\",\n  \"LinearDiscriminantAnalysis\",\n  \"AdaBoostClassifier\"\n]\n\nclf = EazyClassifier(classififers=custom_list)\nmodel_list, prediction_list, model_results = clf.fit(X_train, y_train, X_test, y_test)\n\nprint(model_results)\n```\n### OUTPUT\n```\n                            Accuracy  f1 score  ROC AUC score\nAdaBoostClassifier          0.961404  0.961444       0.959245\nLinearDiscriminantAnalysis  0.961404  0.961089       0.950816\nExtraTreeClassifier         0.908772  0.909134       0.905393\nNearestCentroid             0.898246  0.894875       0.865545\nLinearSVC                   0.838596  0.841756       0.867305\n```\n\n\n\n# Future Plans\n\n- Hyperparameter Tuning Feature\n- Parallel computation of training\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/codevardhan/EazyPredict",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "eazypredict",
    "package_url": "https://pypi.org/project/eazypredict/",
    "platform": null,
    "project_url": "https://pypi.org/project/eazypredict/",
    "project_urls": {
      "Bug Tracker": "https://github.com/codevardhan/EazyPredict/issues",
      "Homepage": "https://github.com/codevardhan/EazyPredict"
    },
    "release_url": "https://pypi.org/project/eazypredict/0.2.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A python module to experiment with a bunch of machine learning algorithms on a preprocessed dataset",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16673190,
  "releases": {
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4898bda0baad5b07845791ecd79d9a0d9741b1d19a8af38abb02d35012cd4e17",
          "md5": "eb60258b8ca1cf0f4e2551c43a9abdc3",
          "sha256": "3ab0f1dee888a33e3aa8c8f2a95c09dd9932de4eed65e3e6524cdabf8d47d8a6"
        },
        "downloads": -1,
        "filename": "eazypredict-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eb60258b8ca1cf0f4e2551c43a9abdc3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5618,
        "upload_time": "2023-01-24T13:05:50",
        "upload_time_iso_8601": "2023-01-24T13:05:50.071242Z",
        "url": "https://files.pythonhosted.org/packages/48/98/bda0baad5b07845791ecd79d9a0d9741b1d19a8af38abb02d35012cd4e17/eazypredict-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "45a4b0bbdcde22998176aa8653b39947058c429e21c55ee00f7c2eae32be17f6",
          "md5": "50ecf33f6b1d3ac04b7cd3f919db4525",
          "sha256": "3ccaf231fedc60051ccfc83a6c45f2313d2e2aa3e374a28ec77aa2aa9da80887"
        },
        "downloads": -1,
        "filename": "eazypredict-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "50ecf33f6b1d3ac04b7cd3f919db4525",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4211,
        "upload_time": "2023-01-24T13:05:51",
        "upload_time_iso_8601": "2023-01-24T13:05:51.508683Z",
        "url": "https://files.pythonhosted.org/packages/45/a4/b0bbdcde22998176aa8653b39947058c429e21c55ee00f7c2eae32be17f6/eazypredict-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fa5ccddb8a354d109ceb90eb8412dd36742b79057e78e77a40aee21098ca3589",
          "md5": "d8b35341a1ffbdd8d0a3fd7e6086a3a2",
          "sha256": "24fabfa8b4e021d3cf33ddeb6b3b61cbfcaa0b8643a7f241c9f62bb9007ee0a5"
        },
        "downloads": -1,
        "filename": "eazypredict-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d8b35341a1ffbdd8d0a3fd7e6086a3a2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 9530,
        "upload_time": "2023-02-02T22:18:50",
        "upload_time_iso_8601": "2023-02-02T22:18:50.620840Z",
        "url": "https://files.pythonhosted.org/packages/fa/5c/cddb8a354d109ceb90eb8412dd36742b79057e78e77a40aee21098ca3589/eazypredict-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6959fc1d23ba25a68b636a63137cd83de2be388e41f5fa03e4825579f034ba53",
          "md5": "d38e1a3b161dce5f19ab1d8d32e0d183",
          "sha256": "45c4a76f8278ecc3d9076d7b9482e5cb85b0d70000cce8c06b4d38b8e6aa2b70"
        },
        "downloads": -1,
        "filename": "eazypredict-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d38e1a3b161dce5f19ab1d8d32e0d183",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8130,
        "upload_time": "2023-02-02T22:18:53",
        "upload_time_iso_8601": "2023-02-02T22:18:53.221565Z",
        "url": "https://files.pythonhosted.org/packages/69/59/fc1d23ba25a68b636a63137cd83de2be388e41f5fa03e4825579f034ba53/eazypredict-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "af4ede343c65809ffc4a841ec94a7b8d2da4b99dddc7e527ae2b970d3b4609bd",
          "md5": "6d0a5cacf4e2beb3bd69b6baa1e1ad43",
          "sha256": "16369450534bb88084535b1e8b5b9790319b2af77f5d1b34423f55b1483cc4e1"
        },
        "downloads": -1,
        "filename": "eazypredict-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6d0a5cacf4e2beb3bd69b6baa1e1ad43",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 9644,
        "upload_time": "2023-02-02T23:35:12",
        "upload_time_iso_8601": "2023-02-02T23:35:12.977345Z",
        "url": "https://files.pythonhosted.org/packages/af/4e/de343c65809ffc4a841ec94a7b8d2da4b99dddc7e527ae2b970d3b4609bd/eazypredict-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f600ef8068150d3387e53ca999e37f1f5bf442607675c8297688d8724bc85eda",
          "md5": "eb64e0d959923ffa4364c377e752b0ab",
          "sha256": "58283114f7241ff275973b914d1731babbe09bebcc4e56663e6d56acdbc6729f"
        },
        "downloads": -1,
        "filename": "eazypredict-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "eb64e0d959923ffa4364c377e752b0ab",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8639,
        "upload_time": "2023-02-02T23:35:15",
        "upload_time_iso_8601": "2023-02-02T23:35:15.079471Z",
        "url": "https://files.pythonhosted.org/packages/f6/00/ef8068150d3387e53ca999e37f1f5bf442607675c8297688d8724bc85eda/eazypredict-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "af4ede343c65809ffc4a841ec94a7b8d2da4b99dddc7e527ae2b970d3b4609bd",
        "md5": "6d0a5cacf4e2beb3bd69b6baa1e1ad43",
        "sha256": "16369450534bb88084535b1e8b5b9790319b2af77f5d1b34423f55b1483cc4e1"
      },
      "downloads": -1,
      "filename": "eazypredict-0.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6d0a5cacf4e2beb3bd69b6baa1e1ad43",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 9644,
      "upload_time": "2023-02-02T23:35:12",
      "upload_time_iso_8601": "2023-02-02T23:35:12.977345Z",
      "url": "https://files.pythonhosted.org/packages/af/4e/de343c65809ffc4a841ec94a7b8d2da4b99dddc7e527ae2b970d3b4609bd/eazypredict-0.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f600ef8068150d3387e53ca999e37f1f5bf442607675c8297688d8724bc85eda",
        "md5": "eb64e0d959923ffa4364c377e752b0ab",
        "sha256": "58283114f7241ff275973b914d1731babbe09bebcc4e56663e6d56acdbc6729f"
      },
      "downloads": -1,
      "filename": "eazypredict-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "eb64e0d959923ffa4364c377e752b0ab",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 8639,
      "upload_time": "2023-02-02T23:35:15",
      "upload_time_iso_8601": "2023-02-02T23:35:15.079471Z",
      "url": "https://files.pythonhosted.org/packages/f6/00/ef8068150d3387e53ca999e37f1f5bf442607675c8297688d8724bc85eda/eazypredict-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}