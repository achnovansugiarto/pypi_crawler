{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# sevco-api-client\nA client library for accessing Sevco API\n\n## Usage\nFirst, create a client:\n\n```python\nfrom sevco_api_client import Client\n\nclient = Client(base_url=\"https://api.example.com\")\n```\n\nIf the endpoints you're going to hit require authentication, use `AuthenticatedClient` instead:\n\n```python\nfrom sevco_api_client import AuthenticatedClient\n\nclient = AuthenticatedClient(base_url=\"https://api.example.com\", token=\"SuperSecretToken\")\n```\n\nNow call your endpoint and use your models:\n\n```python\nfrom sevco_api_client.models import MyDataModel\nfrom sevco_api_client.api.my_tag import get_my_data_model\nfrom sevco_api_client.types import Response\n\nmy_data: MyDataModel = get_my_data_model.sync(client=client)\n# or if you need more info (e.g. status_code)\nresponse: Response[MyDataModel] = get_my_data_model.sync_detailed(client=client)\n```\n\nOr do the same thing with an async version:\n\n```python\nfrom sevco_api_client.models import MyDataModel\nfrom sevco_api_client.api.my_tag import get_my_data_model\nfrom sevco_api_client.types import Response\n\nmy_data: MyDataModel = await get_my_data_model.asyncio(client=client)\nresponse: Response[MyDataModel] = await get_my_data_model.asyncio_detailed(client=client)\n```\n\nThings to know:\n1. Every path/method combo becomes a Python module with four functions:\n    1. `sync`: Blocking request that returns parsed data (if successful) or `None`\n    1. `sync_detailed`: Blocking request that always returns a `Request`, optionally with `parsed` set if the request was successful.\n    1. `asyncio`: Like `sync` but the async instead of blocking\n    1. `asyncio_detailed`: Like `sync_detailed` by async instead of blocking\n     \n1. All path/query params, and bodies become method arguments.\n1. If your endpoint had any tags on it, the first tag will be used as a module name for the function (my_tag above)\n1. Any endpoint which did not have a tag will be in `sevco_api_client.api.default`    \n\n## Building / publishing this Client\nThis project uses [Poetry](https://python-poetry.org/) to manage dependencies  and packaging.  Here are the basics:\n1. Update the metadata in pyproject.toml (e.g. authors, version)\n1. If you're using a private repository, configure it with Poetry\n    1. `poetry config repositories.<your-repository-name> <url-to-your-repository>`\n    1. `poetry config http-basic.<your-repository-name> <username> <password>`\n1. Publish the client with `poetry publish --build -r <your-repository-name>` or, if for public PyPI, just `poetry publish --build`\n\nIf you want to install this client into another project without publishing it (e.g. for development) then:\n1. If that project **is using Poetry**, you can simply do `poetry add <path-to-this-client>` from that project\n1. If that project is not using Poetry:\n    1. Build a wheel with `poetry build -f wheel`\n    1. Install that wheel from the other project `pip install <path-to-wheel>`",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sevco-api",
    "package_url": "https://pypi.org/project/sevco-api/",
    "platform": "",
    "project_url": "https://pypi.org/project/sevco-api/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/sevco-api/0.0.1/",
    "requires_dist": [
      "httpx (>=0.15.4,<0.17.0)",
      "attrs (>=20.1.0,<21.0.0)",
      "python-dateutil (>=2.8.0,<3.0.0)"
    ],
    "requires_python": ">=3.6,<4.0",
    "summary": "A client library for accessing Sevco API",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10278369,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d7eab1349df3f7ba0dd39452e5477114a3fbf078e9444abe308923bbe99144a0",
          "md5": "c7bca6d9de27a46242dc70f90d140b23",
          "sha256": "bd01991695f3e3d162cab0ca7ccb975b1bc7725289da6a6f424d79e2ec806712"
        },
        "downloads": -1,
        "filename": "sevco_api-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c7bca6d9de27a46242dc70f90d140b23",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 22771,
        "upload_time": "2021-05-06T18:52:43",
        "upload_time_iso_8601": "2021-05-06T18:52:43.135223Z",
        "url": "https://files.pythonhosted.org/packages/d7/ea/b1349df3f7ba0dd39452e5477114a3fbf078e9444abe308923bbe99144a0/sevco_api-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba4e14847d08106565e08b3b2caf8453b099adb22136f2b184a7ec5dd416905c",
          "md5": "873530facf999a74ff701a55c03f761f",
          "sha256": "be20128df25ebf46df4c0ecb55eb0184f073440f2b69905e66a54afdb5a2d414"
        },
        "downloads": -1,
        "filename": "sevco-api-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "873530facf999a74ff701a55c03f761f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4.0",
        "size": 23442,
        "upload_time": "2021-05-06T18:52:40",
        "upload_time_iso_8601": "2021-05-06T18:52:40.386781Z",
        "url": "https://files.pythonhosted.org/packages/ba/4e/14847d08106565e08b3b2caf8453b099adb22136f2b184a7ec5dd416905c/sevco-api-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d7eab1349df3f7ba0dd39452e5477114a3fbf078e9444abe308923bbe99144a0",
        "md5": "c7bca6d9de27a46242dc70f90d140b23",
        "sha256": "bd01991695f3e3d162cab0ca7ccb975b1bc7725289da6a6f424d79e2ec806712"
      },
      "downloads": -1,
      "filename": "sevco_api-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c7bca6d9de27a46242dc70f90d140b23",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6,<4.0",
      "size": 22771,
      "upload_time": "2021-05-06T18:52:43",
      "upload_time_iso_8601": "2021-05-06T18:52:43.135223Z",
      "url": "https://files.pythonhosted.org/packages/d7/ea/b1349df3f7ba0dd39452e5477114a3fbf078e9444abe308923bbe99144a0/sevco_api-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ba4e14847d08106565e08b3b2caf8453b099adb22136f2b184a7ec5dd416905c",
        "md5": "873530facf999a74ff701a55c03f761f",
        "sha256": "be20128df25ebf46df4c0ecb55eb0184f073440f2b69905e66a54afdb5a2d414"
      },
      "downloads": -1,
      "filename": "sevco-api-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "873530facf999a74ff701a55c03f761f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6,<4.0",
      "size": 23442,
      "upload_time": "2021-05-06T18:52:40",
      "upload_time_iso_8601": "2021-05-06T18:52:40.386781Z",
      "url": "https://files.pythonhosted.org/packages/ba/4e/14847d08106565e08b3b2caf8453b099adb22136f2b184a7ec5dd416905c/sevco-api-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}