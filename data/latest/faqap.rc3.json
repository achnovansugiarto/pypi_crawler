{
  "info": {
    "author": "sogartar",
    "author_email": "sogartary@yahoo.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: The Unlicense (Unlicense)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Fast Approximate Quadratic Assignment Problem Solver\n\nThis is a Python implementation of an algorithm for approximately solving quadratic\nassignment problems described in\n\nJoshua T. Vogelstein and John M. Conroy and Vince Lyzinski and Louis J. Podrazik and\nSteven G. Kratzer and Eric T. Harley and Donniell E. Fishkind and\nR. Jacob Vogelstein and Carey E. Priebe\n(2012) Fast Approximate Quadratic Programming for Large (Brain) Graph Matching.\n[arXiv:1112.5507](https://arxiv.org/abs/1112.5507).\n\nIt solves\n\nmin<sub>𝑃∈𝒫</sub><𝐹, 𝑃𝐷𝑃<sup>𝖳</sup>>\n\nwhere 𝐷, 𝐹 ∈ ℝ<sup>𝑛×𝑛</sup>, 𝒫 is the set of 𝑛×𝑛 permutation matrices\nand <., .> denotes the Frobenius inner product.\n\nThe implementation employs the\n[Frank–Wolfe algorithm](https://en.wikipedia.org/wiki/Frank%E2%80%93Wolfe_algorithm).\n\n\n## Example\n```python\nimport numpy as np\nfrom faqap import minimize\n\n# Make runs deterministic, descent origins are chosen randomly by default.\nnp.random.seed(123456789)\n\nD = np.array(\n    [\n        [0, 0, 0, -4],\n        [0, 0, -3, 0],\n        [0, -2, 0, 0],\n        [-1, 0, 0, 0]\n    ],\n    dtype=np.float64\n)\nF = np.array(\n    [\n        [0, 0, 0, +1],\n        [0, 0, +2, 0],\n        [0, +3, 0, 0],\n        [+4, 0, 0, 0]\n    ],\n    dtype=np.float64\n)\n\nsolution_permutation = minimize(D=D, F=F, descents_count=1).x\n\n# Expected is the permutation reversing elements.\nprint(\"solution permutation =\", solution_permutation)\n\n```\n\nOutput\n```\nsolution permutation = [3 2 1 0]\n```\n\n\n## GPU Support\nGPU support is enabled through Torch. It is an optional dependency.\nIn order to use the GPU you must pass Torch tensors that are on the CUDA device.\nIf you pass CPU tensors the GPU will not be used.\n\nNote that linear sum assignment, which is a part of the algorithm, is done on\nthe CPU though SciPy.\nOn a system with GPU GeForce RTX 2080 SUPER and\nCPU AMD Ryzen Threadripper 2920X (single thread at 3.5 - 4.3 GHz)\nfor a float32, 128 sized problem linear sum assignment takes ~60% of the\nexecution time.\nIt may be possible to move that part on the GPU as well, but currently\nthere are no good off-the-shelf GPU implementations for that.\nIt is also unclear if there will be any significant speedup.\n\n\n## Installation\n```\npip install faqap\n```\n\n## Dependencies\n* Python (>=3.5)\n* NumPy (>=1.10)\n* SciPy (>=1.4)\n* Torch (optional)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sogartar/faqap",
    "keywords": "",
    "license": "Unlicense",
    "maintainer": "",
    "maintainer_email": "",
    "name": "faqap",
    "package_url": "https://pypi.org/project/faqap/",
    "platform": "",
    "project_url": "https://pypi.org/project/faqap/",
    "project_urls": {
      "Homepage": "https://github.com/sogartar/faqap"
    },
    "release_url": "https://pypi.org/project/faqap/0.3.0/",
    "requires_dist": [
      "numpy (>=1.10)",
      "scipy (>=1.4)",
      "torch ; extra == 'torch'"
    ],
    "requires_python": ">=3.5",
    "summary": "Algorithm for approximately solving quadratic assignment problems.",
    "version": "0.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9524478,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "92db7d3bc9c969ac33c3e0b83315ecef6928ffd8059facf2db0802095e35236a",
          "md5": "ca7b2ec28d7276680f2bdd31c137b016",
          "sha256": "fbb675833c583079dee4acb72858ac1751500f6e4bd3d90b949a68d3bc439ec0"
        },
        "downloads": -1,
        "filename": "faqap-0.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ca7b2ec28d7276680f2bdd31c137b016",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.5",
        "size": 6704,
        "upload_time": "2020-11-22T22:26:59",
        "upload_time_iso_8601": "2020-11-22T22:26:59.123606Z",
        "url": "https://files.pythonhosted.org/packages/92/db/7d3bc9c969ac33c3e0b83315ecef6928ffd8059facf2db0802095e35236a/faqap-0.1.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d1f340c2f91ee3142734f3346f7a0363ad8bb0f94f48880330e86f6ffbc80716",
          "md5": "7e15cd18af4532fa63dc4305a21135c8",
          "sha256": "12a8e954be2f99cefdff28b3d854b3e5dc6535d81b388a128d5f510f30ab817f"
        },
        "downloads": -1,
        "filename": "faqap-0.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7e15cd18af4532fa63dc4305a21135c8",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.5",
        "size": 6741,
        "upload_time": "2020-11-23T21:06:32",
        "upload_time_iso_8601": "2020-11-23T21:06:32.737128Z",
        "url": "https://files.pythonhosted.org/packages/d1/f3/40c2f91ee3142734f3346f7a0363ad8bb0f94f48880330e86f6ffbc80716/faqap-0.2.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18eba74baad500777395fbf13bf51f9dc987196ff96a126fd4cc4da582dd1f6a",
          "md5": "3a3cf6b85ec4e23ce9036cedb6045a4d",
          "sha256": "639c0d39f3b61e6cd630db86f79ce0400ea9e38ef32b5cf1a82f0b89c55c9406"
        },
        "downloads": -1,
        "filename": "faqap-0.3.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3a3cf6b85ec4e23ce9036cedb6045a4d",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.5",
        "size": 9630,
        "upload_time": "2021-02-25T17:58:20",
        "upload_time_iso_8601": "2021-02-25T17:58:20.485234Z",
        "url": "https://files.pythonhosted.org/packages/18/eb/a74baad500777395fbf13bf51f9dc987196ff96a126fd4cc4da582dd1f6a/faqap-0.3.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "18eba74baad500777395fbf13bf51f9dc987196ff96a126fd4cc4da582dd1f6a",
        "md5": "3a3cf6b85ec4e23ce9036cedb6045a4d",
        "sha256": "639c0d39f3b61e6cd630db86f79ce0400ea9e38ef32b5cf1a82f0b89c55c9406"
      },
      "downloads": -1,
      "filename": "faqap-0.3.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3a3cf6b85ec4e23ce9036cedb6045a4d",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.5",
      "size": 9630,
      "upload_time": "2021-02-25T17:58:20",
      "upload_time_iso_8601": "2021-02-25T17:58:20.485234Z",
      "url": "https://files.pythonhosted.org/packages/18/eb/a74baad500777395fbf13bf51f9dc987196ff96a126fd4cc4da582dd1f6a/faqap-0.3.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}