{
  "info": {
    "author": "bisam",
    "author_email": "bisam@r4.re",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11"
    ],
    "description": "Ateto : Anki templates tools\n============================\n\n`ateto` is a set of tools to write templates outside of Anki.\n\nWhy ?\n-----\n\nIt's a collection of scripts I try to reorganize. It started with the Anki\naddon called `Templates Import / Export\n<https://ankiweb.net/shared/info/712027367>`_, a python tool, `Anki Template\nTester <https://github.com/klieret/anki-template-tester>`_ and now ... look at\nthis ! Yes, the name is not much creative.\n\nIn short, it can :\n\n* **export models templates** (HTML and CSS) from Anki to\n  files (inside `$XDG_DATA_HOME/ateto`)\n* take some note as samples from Anki and **test the templates**\n  with them (producing a file like `html_output/Basic.html`)\n* **import** models templates and some shared medias (like `_base.css`)\n  to Anki\n\nFrom the command line, with something like this::\n\n  ateto sync # export from anki\n  ateto compile # write test templates files\n  ateto sync -i # import in anki\n\nThere is also a shorthand command called ``ateto`` and a \"watcher\". It's useful\nto compile test templates at each modification::\n\n  ateto watch\n\nInstallation\n------------\n\nThis should work::\n\n  python -m pip install ateto\n\nRequirements\n~~~~~~~~~~~~\n\nRight now it depends on the `AnkiConnect\n<https://ankiweb.net/shared/info/2055492159>`_ Anki addon and\nanki-templates-tester that I put inside this project to keep things simple.\n\nDefault working directory\n-------------------------\n\nThe default working directory is `$XDG_DATA_HOME/ateto` (something like\n`~/.local/share/ateto`). The templates of each Anki \"note type\" (or \"model\")\nare stored in `models_export`.\n\nSimple how to\n-------------\n\nSync templates with Anki\n~~~~~~~~~~~~~~~~~~~~~~~~\n\nFirst, while Anki is running, we need to export models templates with\nAnkiConnect::\n\n  ateto sync\n\nIf we change some files in `models_export`, we can import them in Anki with::\n\n  ateto sync -i\n\nCompile test templates\n~~~~~~~~~~~~~~~~~~~~~~\n\nWe need to get some sample data from Anki and then compile templates. But\nfirst, open Anki and tag some notes with `template_test_data`::\n\n  ateto populate\n  ateto compile\n\nImages and CSS or JS assets\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIf there is missing images run::\n\n  ateto link\n\nAll files under the `models_export/_medias` directory will be linked in\n`html_output` with `compile -m`::\n\n  ateto compile -m\n\nBut you have to create them first.\n\nSupertemplates\n~~~~~~~~~~~~~~\n\n`models_export` contains template export of Anki notes templates. It's basic\nHTML. There is \"supertemplates\" : it's Jinja2 templates that we can use to\ngenerate the models, they are in `supertemplates` folder.\n\nTo build the supertemplates use `-s` option with `compile`::\n\n  ateto compile -s\n\nHTML and CSS files in supertemplates are processed, then `models_export` are\nconverted to `html_output`.\n\nWatcher\n~~~~~~~\n\nIt's my favorite part. When I'm working on some templates, I want modifications\nto be automatically compiled in templates and output HTML some I use `watch`\ncommand::\n\n  ateto watch\n\nAnd I want it all, supertemplates, medias and images. I want them to be\nimported in Anki too. Images are only linked when starting, not watched ::\n\n  ateto watch -ai\n\nMore\n----\n\nDebug mode\n~~~~~~~~~~\n\n`watch` and `compile` commands can be run with debug mode (`-d` option).\nThis will run supertemplates with a context where `is_debug=True`. It's\nuseful to debug AnkiDroid with something like this in templates files ::\n\n  {% if is_debug %}\n    <script src=\"https://cdn.jsdelivr.net/npm/eruda\"></script>\n    <script>eruda.init();</script>\n  {% endif %}\n\nFile tree\n~~~~~~~~~\n\nSo at the end, in `$XDG_DATA_HOME`, we have 4 main folders ::\n\n* /supertemplates\n\n  * ModelName/ directories\n\n    * .jinja files\n    * .html files\n    * style.css file\n\n  * _medias/ directory (optional)\n\n    * .css files\n    * .js files\n\n* /models_export\n\n  * ModelName/ directories\n\n    * CardName.html files\n    * style.css file\n\n  * _medias/ directory (optional)\n\n    * .css files\n    * .js files\n\n* /data\n\n  * ModelName.yaml files\n  * ModelName_override.yaml optional files\n\n* /html_output\n\n  * ModelName.html files\n  * ModelName.css files\n  * .css files linked from models_export/_medias\n  * .js files linked from models_export/_medias\n  * .png, .jpg, etc. files linked from anki_collection\n\nThe content of ``supertemplates`` is only created by hand and\ncompiled into ``models_export``.\n\nAll the content of ``models_export`` is synced with Anki (Ankiconnect). _medias\nare treated with a special procedure.\n\nThe content of ``data`` is populated from Anki. _override.yaml files are\ncreated by hand if necessary.\n\n``html_output`` is the result of different actions :\n\n* ModelName.html and ModelName.css files are the result of ``models_export``\n  and ``data`` files\n* others CSS or JS are linked to ``models_export/_medias``\n* images are linked to the Anki collection\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://codeberg.org/bisam/ateto",
    "keywords": "anki,templates",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ateto",
    "package_url": "https://pypi.org/project/ateto/",
    "platform": null,
    "project_url": "https://pypi.org/project/ateto/",
    "project_urls": {
      "Homepage": "https://codeberg.org/bisam/ateto",
      "Repository": "https://codeberg.org/bisam/ateto"
    },
    "release_url": "https://pypi.org/project/ateto/0.2.1/",
    "requires_dist": [
      "xdg (>=5.1,<6.0)",
      "requests (>=2.28,<3.0)",
      "beautifulsoup4 (>=4.1,<5.0)",
      "watchdog (>=2.2,<3.0)",
      "click (>=8.1,<9.0)",
      "Jinja2 (>=3.1,<4.0)",
      "pyyaml (>=6.0,<7.0)"
    ],
    "requires_python": ">=3.10,<4.0",
    "summary": "This is a set of tools to write templates outside of Anki.",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16811741,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3d4e0d45756df985b297ff84ffebb086aa554e182b4a524755ccd1294d90bbaf",
          "md5": "f35e4994523bce4e0141091e8a30c865",
          "sha256": "0f8cfd090d6ee9bad8b4f4a315bafe77df385347a4d90d282e4557e65ad62e08"
        },
        "downloads": -1,
        "filename": "ateto-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f35e4994523bce4e0141091e8a30c865",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 15949,
        "upload_time": "2023-02-11T13:55:01",
        "upload_time_iso_8601": "2023-02-11T13:55:01.959553Z",
        "url": "https://files.pythonhosted.org/packages/3d/4e/0d45756df985b297ff84ffebb086aa554e182b4a524755ccd1294d90bbaf/ateto-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bdeb9886c55b0f67eb196293d64f61ba472dbc4c871109da6986ec214ef21466",
          "md5": "c9330d9d8562ca3396620af9f3ee66a3",
          "sha256": "973902e3a40b3ad4f9da63e272ede6bfd882773b8e982a291b6e9f244995c544"
        },
        "downloads": -1,
        "filename": "ateto-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c9330d9d8562ca3396620af9f3ee66a3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 12536,
        "upload_time": "2023-02-11T13:55:03",
        "upload_time_iso_8601": "2023-02-11T13:55:03.891889Z",
        "url": "https://files.pythonhosted.org/packages/bd/eb/9886c55b0f67eb196293d64f61ba472dbc4c871109da6986ec214ef21466/ateto-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a23a22204200b63b85f9e9af3cbe8133581f1bf815fa56b1dc9eebcff51700cf",
          "md5": "a37e493493a3ada8b3b73b7452a08b8c",
          "sha256": "8dcdf440e63c7040aacb3d64e17f27216c6697a651eaba69483209f4e2baa645"
        },
        "downloads": -1,
        "filename": "ateto-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a37e493493a3ada8b3b73b7452a08b8c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 17868,
        "upload_time": "2023-02-11T14:09:39",
        "upload_time_iso_8601": "2023-02-11T14:09:39.736132Z",
        "url": "https://files.pythonhosted.org/packages/a2/3a/22204200b63b85f9e9af3cbe8133581f1bf815fa56b1dc9eebcff51700cf/ateto-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fe43e90d828afc0dd69bc86bad0448617c1d3154c5cdf2567aa447797ecbc98b",
          "md5": "ed503a3d80d10e8f6dbb35998d688822",
          "sha256": "ddfe3ccbf0a9278e3bab2e3c0cc2e282a199dee3af79f078f721cef1a4d53117"
        },
        "downloads": -1,
        "filename": "ateto-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ed503a3d80d10e8f6dbb35998d688822",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 16789,
        "upload_time": "2023-02-11T14:09:41",
        "upload_time_iso_8601": "2023-02-11T14:09:41.790272Z",
        "url": "https://files.pythonhosted.org/packages/fe/43/e90d828afc0dd69bc86bad0448617c1d3154c5cdf2567aa447797ecbc98b/ateto-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a23a22204200b63b85f9e9af3cbe8133581f1bf815fa56b1dc9eebcff51700cf",
        "md5": "a37e493493a3ada8b3b73b7452a08b8c",
        "sha256": "8dcdf440e63c7040aacb3d64e17f27216c6697a651eaba69483209f4e2baa645"
      },
      "downloads": -1,
      "filename": "ateto-0.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a37e493493a3ada8b3b73b7452a08b8c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10,<4.0",
      "size": 17868,
      "upload_time": "2023-02-11T14:09:39",
      "upload_time_iso_8601": "2023-02-11T14:09:39.736132Z",
      "url": "https://files.pythonhosted.org/packages/a2/3a/22204200b63b85f9e9af3cbe8133581f1bf815fa56b1dc9eebcff51700cf/ateto-0.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fe43e90d828afc0dd69bc86bad0448617c1d3154c5cdf2567aa447797ecbc98b",
        "md5": "ed503a3d80d10e8f6dbb35998d688822",
        "sha256": "ddfe3ccbf0a9278e3bab2e3c0cc2e282a199dee3af79f078f721cef1a4d53117"
      },
      "downloads": -1,
      "filename": "ateto-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "ed503a3d80d10e8f6dbb35998d688822",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10,<4.0",
      "size": 16789,
      "upload_time": "2023-02-11T14:09:41",
      "upload_time_iso_8601": "2023-02-11T14:09:41.790272Z",
      "url": "https://files.pythonhosted.org/packages/fe/43/e90d828afc0dd69bc86bad0448617c1d3154c5cdf2567aa447797ecbc98b/ateto-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}