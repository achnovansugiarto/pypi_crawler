{
  "info": {
    "author": "Alfredo Lorie",
    "author_email": "a24lorie@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "***\n                                 DPyACL\n                Distributed Python Framework for Active Learning\n\n                               May 2020\n\t\t\t    Alfredo Lorie Bernardo\t\t\t\t\t\t\t\n\n                             version 0.3.3\n\n***\n\n# Introduction\n\n`DPyACL` is a flexible Distributed Active Learning library written in Python, aimed to make active learning experiments \nsimpler and faster. Its leverage Dask distributed features to execute active learning experiments computations among a \ncluster of computers, allowing to speed up computation and tackle scenarios where data doesn't fit in a single computer. \nIt also has been developed with a modular object-oriented design to provide an intuitive, ease of use interface and \nto allow reuse, modification, and extensibility. It also offers full compatibility with libraries like NumPy, SciPy, \nPandas, Scikit-learn and  Keras. This library is available in PyPI and distributed under the GNU license.4 \n\n\nUp to date, DPyACL heavily uses Dask library to implement in a distributed and parallel fashion the the most significant \nstrategies strategies that have appeared on the single_label-label. \nFor future releases, we hope to include strategies strategies related with  multi-label learning paradigms.\n\n# Download\n\nGitHub: <https://github.com/a24lorie/DPyACL>\n\n# Using DPyACL\n\nThe fastest way to use `DPyACL` is from a Jupyter Notebook. \n\n## Preparing an experiment\n\nWhen defining an Active Learning experiment `DPyACL` offers set pre-defined components that can be configured and \ncombined by the user to better fit its needs. The required components to setup and experiment are listed below    \n\n 1. **The Dataset**\n 2. **Labelled and unlabelled sets**: Optional - The experiment might be configured to randomly choose an initial labeled and unlabeled sets\n 2. **An Experiment**: HoldOut and KFold experiments are provided\n 3. **The AL scenario**: The current release provides a Pool Based Scenario \n 4. **The Machine Learning Technique**: It can be a machine learning technique from any library that provides an API compatible with the \n            **fit**, **predict** and **predict_proba** definitions. Sklearn, Dask-ML, Keras are compatible \n 5. **The Evaluation Method(s)**\n 7. **The Query Strategy**\n 5. **The Stopping Criteria**\n 8. **The Oracle**: The current release provides a Simulated Oracle\n \n \n### Configuring the experiment\n \n```python\nml_technique = LogisticRegression(solver='liblinear')\nstopping_criteria = MaxIteration(50)\nquery_strategy =  QueryMarginSampling()\nperformance_metrics = [\n                Accuracy(),\n                F1(average='macro'),\n                Precision(average='macro'),\n                Recall(average='macro')]\n\nexperiment = HoldOutExperiment(\n    client=None,\n    X=_X,\n    Y=_y,\n    scenario_type=PoolBasedSamplingScenario,\n    train_idx=train_idx,\n    test_idx=test_idx,\n    label_idx=label_idx,\n    unlabel_idx=unlabel_idx,\n    ml_technique=ml_technique,\n    performance_metrics=performance_metrics,\n    query_strategy=query_strategy,\n    oracle=SimulatedOracle(labels=_y),\n    stopping_criteria=stopping_criteria,\n    self_partition=False\n)\n```\n\n### Execute the experiment\n \n```python\n result = experiment.evaluate(verbose=True)\n```\n\n### Analyze the experiment results\n```python\n query_analyser = ExperimentAnalyserFactory.experiment_analyser(\n                            performance_metrics= [metric.metric_name for metric in performance_metrics],\n                            method_name=query_strategy.query_function_name,\n                            method_results=result,\n                            type=\"queries\"\n                        )\n\n# get a brief description of the experiment\nquery_analyser.plot_learning_curves(title='Active Learning experiment results')\n```\n\n# Contribution\n\nIf you find a bug, send a [pull request](https://github.com/a24lorie/PyACL/pulls) and we'll discuss things. If you are not familiar with \"***pull request***\" term I recommend reading the following [article](https://yangsu.github.io/pull-request-tutorial/) for better understanding",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/a24lorie/DPyACL",
    "keywords": "",
    "license": "GNU",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dpyacl",
    "package_url": "https://pypi.org/project/dpyacl/",
    "platform": "",
    "project_url": "https://pypi.org/project/dpyacl/",
    "project_urls": {
      "Homepage": "https://github.com/a24lorie/DPyACL"
    },
    "release_url": "https://pypi.org/project/dpyacl/0.3.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Distributed Python Active Learning library",
    "version": "0.3.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7824525,
  "releases": {
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4cab0695aa442cbc7d38d0f0cda425ecff4cdfc8cb35a9d94e4882f9b28b71f2",
          "md5": "098dc082850e8f65ebb528d82aa70af7",
          "sha256": "32501233ae7b6b7c28a9db813e6925cbe7cdef1c7c52b7515a53c1317bafa1f9"
        },
        "downloads": -1,
        "filename": "dpyacl-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "098dc082850e8f65ebb528d82aa70af7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 48290,
        "upload_time": "2020-07-05T13:38:46",
        "upload_time_iso_8601": "2020-07-05T13:38:46.424010Z",
        "url": "https://files.pythonhosted.org/packages/4c/ab/0695aa442cbc7d38d0f0cda425ecff4cdfc8cb35a9d94e4882f9b28b71f2/dpyacl-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e2f80fb84470360924f7002607d017ca7337b06a49d016993a2f5270121feaf9",
          "md5": "c2caf764beb606a198486edfb208c012",
          "sha256": "05fc4d98738db175cee7e3eaeab1dfad2249b695dbe7e5377ba83f685bc9e671"
        },
        "downloads": -1,
        "filename": "dpyacl-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "c2caf764beb606a198486edfb208c012",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 48300,
        "upload_time": "2020-07-05T13:38:48",
        "upload_time_iso_8601": "2020-07-05T13:38:48.803513Z",
        "url": "https://files.pythonhosted.org/packages/e2/f8/0fb84470360924f7002607d017ca7337b06a49d016993a2f5270121feaf9/dpyacl-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd52422fa5f62ce085c7bc047663db91ec75fdd95784a225ba3397754a52192b",
          "md5": "93cdb67eedf3cbf5d1a667dec222cb7e",
          "sha256": "6c06c663bfa8cd9e024f42586562330da36e4be1e60a3607a68f318da683c9e8"
        },
        "downloads": -1,
        "filename": "dpyacl-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "93cdb67eedf3cbf5d1a667dec222cb7e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 49365,
        "upload_time": "2020-07-17T11:05:19",
        "upload_time_iso_8601": "2020-07-17T11:05:19.719790Z",
        "url": "https://files.pythonhosted.org/packages/cd/52/422fa5f62ce085c7bc047663db91ec75fdd95784a225ba3397754a52192b/dpyacl-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a9adfabac2cf0e0ae36afcbaa7bb205b30523f9023f7ad173f9d266b3f44ec28",
          "md5": "32b4d7175deb6fe9241a6f66eab31d9c",
          "sha256": "911a87c7935793e43c191241cae1e5260421ae457296896e6967b573a34fc183"
        },
        "downloads": -1,
        "filename": "dpyacl-0.3.3.tar.gz",
        "has_sig": false,
        "md5_digest": "32b4d7175deb6fe9241a6f66eab31d9c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 52219,
        "upload_time": "2020-07-29T15:28:42",
        "upload_time_iso_8601": "2020-07-29T15:28:42.582982Z",
        "url": "https://files.pythonhosted.org/packages/a9/ad/fabac2cf0e0ae36afcbaa7bb205b30523f9023f7ad173f9d266b3f44ec28/dpyacl-0.3.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a9adfabac2cf0e0ae36afcbaa7bb205b30523f9023f7ad173f9d266b3f44ec28",
        "md5": "32b4d7175deb6fe9241a6f66eab31d9c",
        "sha256": "911a87c7935793e43c191241cae1e5260421ae457296896e6967b573a34fc183"
      },
      "downloads": -1,
      "filename": "dpyacl-0.3.3.tar.gz",
      "has_sig": false,
      "md5_digest": "32b4d7175deb6fe9241a6f66eab31d9c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 52219,
      "upload_time": "2020-07-29T15:28:42",
      "upload_time_iso_8601": "2020-07-29T15:28:42.582982Z",
      "url": "https://files.pythonhosted.org/packages/a9/ad/fabac2cf0e0ae36afcbaa7bb205b30523f9023f7ad173f9d266b3f44ec28/dpyacl-0.3.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}