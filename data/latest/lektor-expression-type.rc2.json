{
  "info": {
    "author": "Jeff Dairiki",
    "author_email": "dairiki@dairiki.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Plugins",
      "Environment :: Web Environment",
      "Framework :: Lektor",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Lektor Expression Type Plugin\n\n[![PyPI version](https://img.shields.io/pypi/v/lektor-expression-type.svg)](https://pypi.org/project/lektor-expression-type/)\n[![PyPI Supported Python Versions](https://img.shields.io/pypi/pyversions/lektor-expression-type.svg)](https://pypi.python.org/pypi/lektor-expression-type/)\n[![GitHub license](https://img.shields.io/github/license/dairiki/lektor-expression-type)](https://github.com/dairiki/lektor-expression-type/blob/master/LICENSE)\n[![GitHub Actions (Tests)](https://github.com/dairiki/lektor-expression-type/workflows/Tests/badge.svg)](https://github.com/dairiki/lektor-expression-type)\n\nAdd jinja-evaluated types, `expression` and `format_expression`, to\n[Lektor][].\n\nThese allow one to define data model fields whose values are Jinja2\nexpressions.\n\n## The Types\n\nBoth the `expression` and `format_expression` types are evaluated by\nthe jinja template engine.\n\n**`expression`**\n\nThe `expression` type is evaluated as a Jinja2 expression.\n\nAn example value for this type might be:\n```\nthis.children.order_by('-pub_date').limit(4)\n```\nThis would evaluate to a Lektor [Query][] instance.\n\n**`format_expression`**\n\nThe `format_expression` type is evaluated as a Jinja2 template.  It\nwill always evaluate to a string.\n\nAn example value for this type might be:\n```\nThe blog contains {{ site.get('/blog').count() }} pages.\n```\n\n## Installation\n\nAdd lektor-expression-type to your project from command line:\n\n```\nlektor plugins add lektor-expression-type\n```\n\nSee [the Lektor plugin documentation][plugins] for more information.\n\n## Motivating Example\n\nSuppose you want to create an _Index_ data model, for pages which will\nbe used display lists of other pages on your site.\nYou could create a model definition like this (called, perhaps,\n`models/index.ini`):\n\n\n```ini\n[model]\nname = Index Page\nlabel = Index: {{ this.title}}\n\n[fields.title]\nlabel = Title\ntype = string\n\n[fields.items]\nlabel = Items\ntype = expression\ndescription = Pages to list on this page\n```\n\nIn a particular index page which uses this model, you might set the\n`items` field to\n`site.get('/projects').filter(F.tag == 'interesting')`,\nthen in the page template (e.g. in `templates/index.html`) one could\nreference the `items` field (e.g. `{% for page in this.items %}`)\nto determine which pages to display on the page.\n\n## Author\n\nJeff Dairiki <dairiki@dairiki.org>\n\n\n[Lektor]: <https://www.getlektor.com/> \"Lektor Static Content Management System\"\n[plugins]: <https://www.getlektor.com/docs/plugins/>\n[Query]: <https://www.getlektor.com/docs/api/db/query/>\n\n## Changelog\n\n### 0.1 — 2021-02-05\n\nNo code changes.\n\nUpdate development status classifier to \"stable\".\n\n#### Fixes\n\n- Include the correct LICENSE file.\n\n### 0.1b1 — 2020-05-05\n\nInitial release.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dairiki/lektor-expression-type/",
    "keywords": "Lektor plugin",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lektor-expression-type",
    "package_url": "https://pypi.org/project/lektor-expression-type/",
    "platform": "",
    "project_url": "https://pypi.org/project/lektor-expression-type/",
    "project_urls": {
      "Homepage": "https://github.com/dairiki/lektor-expression-type/"
    },
    "release_url": "https://pypi.org/project/lektor-expression-type/0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Add jinja-evaluated types to Lektor",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9333803,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7999a58e71ee23a9172af4dbd3e87c7738cd4e91501a1f1627720987b64cc0cd",
          "md5": "05c098758306ddb23a47d81ec1b1c8a9",
          "sha256": "e75316feaed2927de2367521094cb3f35cff4957560e7a96be10d08a3c5950f5"
        },
        "downloads": -1,
        "filename": "lektor_expression_type-0.1-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "05c098758306ddb23a47d81ec1b1c8a9",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 4356,
        "upload_time": "2021-02-05T22:37:40",
        "upload_time_iso_8601": "2021-02-05T22:37:40.032388Z",
        "url": "https://files.pythonhosted.org/packages/79/99/a58e71ee23a9172af4dbd3e87c7738cd4e91501a1f1627720987b64cc0cd/lektor_expression_type-0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0e95b48a06f084967f220e0befa6048f18606b53edb7a69504a9c25502c86f8f",
          "md5": "cfb9ff00dd563c77aed0c77f1c7e1a06",
          "sha256": "7022ce953ca23b09d168b1694fa00bc8ef3b00e131cacad11fe5046ae033c729"
        },
        "downloads": -1,
        "filename": "lektor-expression-type-0.1.tar.gz",
        "has_sig": true,
        "md5_digest": "cfb9ff00dd563c77aed0c77f1c7e1a06",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8213,
        "upload_time": "2021-02-05T22:37:41",
        "upload_time_iso_8601": "2021-02-05T22:37:41.352223Z",
        "url": "https://files.pythonhosted.org/packages/0e/95/b48a06f084967f220e0befa6048f18606b53edb7a69504a9c25502c86f8f/lektor-expression-type-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1b1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bedbb0d70b1e54ed3f4eb839e1018dcbf0d5fe469b0fd01325b5f10b8f866863",
          "md5": "4b6da75f218a9cfa9dac75c31c50679e",
          "sha256": "672950b36b59bd43be31dddbed9b4308cff9ad74b1c03bfa7471b996d657e086"
        },
        "downloads": -1,
        "filename": "lektor_expression_type-0.1b1-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "4b6da75f218a9cfa9dac75c31c50679e",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 4215,
        "upload_time": "2020-05-05T15:10:21",
        "upload_time_iso_8601": "2020-05-05T15:10:21.730347Z",
        "url": "https://files.pythonhosted.org/packages/be/db/b0d70b1e54ed3f4eb839e1018dcbf0d5fe469b0fd01325b5f10b8f866863/lektor_expression_type-0.1b1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bea61d8b164107e5dd4863af70c6df8960c63d755dad431a2f53c438d806f725",
          "md5": "ffe389e2ab545255b91182f5b6e12d38",
          "sha256": "c794a4a989596c63e16558b954bf5b533b91b4ed31ee32cdc615936560bf8a52"
        },
        "downloads": -1,
        "filename": "lektor-expression-type-0.1b1.tar.gz",
        "has_sig": true,
        "md5_digest": "ffe389e2ab545255b91182f5b6e12d38",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7601,
        "upload_time": "2020-05-05T15:10:24",
        "upload_time_iso_8601": "2020-05-05T15:10:24.253461Z",
        "url": "https://files.pythonhosted.org/packages/be/a6/1d8b164107e5dd4863af70c6df8960c63d755dad431a2f53c438d806f725/lektor-expression-type-0.1b1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7999a58e71ee23a9172af4dbd3e87c7738cd4e91501a1f1627720987b64cc0cd",
        "md5": "05c098758306ddb23a47d81ec1b1c8a9",
        "sha256": "e75316feaed2927de2367521094cb3f35cff4957560e7a96be10d08a3c5950f5"
      },
      "downloads": -1,
      "filename": "lektor_expression_type-0.1-py2.py3-none-any.whl",
      "has_sig": true,
      "md5_digest": "05c098758306ddb23a47d81ec1b1c8a9",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 4356,
      "upload_time": "2021-02-05T22:37:40",
      "upload_time_iso_8601": "2021-02-05T22:37:40.032388Z",
      "url": "https://files.pythonhosted.org/packages/79/99/a58e71ee23a9172af4dbd3e87c7738cd4e91501a1f1627720987b64cc0cd/lektor_expression_type-0.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0e95b48a06f084967f220e0befa6048f18606b53edb7a69504a9c25502c86f8f",
        "md5": "cfb9ff00dd563c77aed0c77f1c7e1a06",
        "sha256": "7022ce953ca23b09d168b1694fa00bc8ef3b00e131cacad11fe5046ae033c729"
      },
      "downloads": -1,
      "filename": "lektor-expression-type-0.1.tar.gz",
      "has_sig": true,
      "md5_digest": "cfb9ff00dd563c77aed0c77f1c7e1a06",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8213,
      "upload_time": "2021-02-05T22:37:41",
      "upload_time_iso_8601": "2021-02-05T22:37:41.352223Z",
      "url": "https://files.pythonhosted.org/packages/0e/95/b48a06f084967f220e0befa6048f18606b53edb7a69504a9c25502c86f8f/lektor-expression-type-0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}