{
  "info": {
    "author": "CrowdStrike",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: The Unlicense (Unlicense)",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: OS Independent",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# FalconPy\nFalconPy provides a Python native harness for interacting with the CrowdStrike Falcon oAuth2 API.\n\n## Why FalconPy\nThis project contains a collection of Python classes that abstract CrowdStrike Falcon API interaction, removing duplicative code and allowing developers to focus on just the logic of their solution requirements.\n\n## Contents\nCurrently the solution defines a class for each service (_ex: cloud_connect_aws_), with endpoint methods defined as class methods. There is also a single _uber_-class that provides an interface to the entire API with a single handler.\n\n### Available classes\n+ [cloud_connect_aws.py](services/cloud_connect_aws.py) - AWS Cloud\n+ [detects.py](services/detects.py) - Detections\n+ [device_control_policies.py](services/device_control_policies.py) - Device Control\n+ [event_streams.py](services/event_streams.py) - Event Streams\n+ [falconx_sandbox.py](services/falconx_sandbox.py) - The Falcon Sandbox\n+ [firewall_management.py](services/firewall_management.py) - Firewall administration\n+ [firewall_policies.py](services/firewall_policies.py) - Firewall policy management\n+ [host_group.py](services/host_group.py) - Host groups\n+ [hosts.py](services/hosts.py) - Hosts\n+ [incidents.py](services/incidents.py) - Incidents\n+ [intel.py](services/intel.py) - Threat Intel\n+ [iocs.py](services/iocs.py) - Indicators of Compromise\n+ [oauth2.py](services/oauth2.py) - oAuth2 authentication\n+ [prevention_policy.py](services/prevention_policy.py) - Prevention policies\n+ [real_time_response_admin.py](services/real_time_response_admin.py) - Real time response administration\n+ [real_time_response.py](services/real_time_response.py) - Real time response\n+ [sensor_update_policy.py](services/sensor_update_policy.py) - Sensor policy management\n+ [spotlight_vulnerabilities.py](services/spotlight_vulnerabilities.py) - Vulnerabilities\n+ [user_management.py](services/user_management.py) - User administration\n\n### Uber-class\n+ [api_complete.py](api_complete.py) - CrowdStrike Falcon API full interface harness\n\n## Installation\nFalconPy is available on PyPI:\n```bash\n$ python -m pip install falconpy\n```\n\n## Documentation\nDocumentation can be found in the [GitHub Wiki](https://github.com/CrowdStrike/falconpy/wiki).\n\n## License\nCopyright CrowdStrike 2020\n\nBy accessing or using this script, sample code, application programming interface, tools, \nand/or associated documentation (if any) (collectively, “Tools”), You (i) represent and \nwarrant that You are entering into this Agreement on behalf of a company, organization \nor another legal entity (“Entity”) that is currently a customer or partner of \nCrowdStrike, Inc. (“CrowdStrike”), and (ii) have the authority to bind such Entity and \nsuch Entity agrees to be bound by this Agreement.\n\nCrowdStrike grants Entity a non-exclusive, non-transferable, non-sublicensable, royalty \nfree and limited license to access and use the Tools solely for Entity’s internal business \npurposes and in accordance with its obligations under any agreement(s) it may have with \nCrowdStrike. Entity acknowledges and agrees that CrowdStrike and its licensors retain all \nright, title and interest in and to the Tools, and all intellectual property rights \nembodied therein, and that Entity has no right, title or interest therein except for the \nexpress licenses granted hereunder and that Entity will treat such Tools as CrowdStrike’s \nconfidential information.\n\nTHE TOOLS ARE PROVIDED “AS-IS” WITHOUT WARRANTY OF ANY KIND, WHETHER EXPRESS, IMPLIED OR \nSTATUTORY OR OTHERWISE. CROWDSTRIKE SPECIFICALLY DISCLAIMS ALL SUPPORT OBLIGATIONS AND \nALL WARRANTIES, INCLUDING WITHOUT LIMITATION, ALL IMPLIED WARRANTIES OF MERCHANTABILITY, \nFITNESS FOR PARTICULAR PURPOSE, TITLE, AND NON-INFRINGEMENT. IN NO EVENT SHALL CROWDSTRIKE \nBE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL \nDAMAGES (INCLUDING, BUT NOT LIMITED TO, LOSS OF USE, DATA, OR PROFITS; OR BUSINESS \nINTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT \nLIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE \nOF THE TOOLS, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/CrowdStrike/csfalcon",
    "keywords": "",
    "license": "",
    "maintainer": "Joshua Hiller",
    "maintainer_email": "",
    "name": "csfalcon",
    "package_url": "https://pypi.org/project/csfalcon/",
    "platform": "",
    "project_url": "https://pypi.org/project/csfalcon/",
    "project_urls": {
      "Homepage": "https://github.com/CrowdStrike/csfalcon"
    },
    "release_url": "https://pypi.org/project/csfalcon/0.1.1/",
    "requires_dist": [
      "requests",
      "urllib3"
    ],
    "requires_python": ">=3.6",
    "summary": "The CrowdStrike Falcon API SDK for Python 3",
    "version": "0.1.1",
    "yanked": true,
    "yanked_reason": null
  },
  "last_serial": 8836471,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8f8245aa4d868c9acc8030f7fedd421dac6d6de4711926e1f2d56509c30d6286",
          "md5": "b0d711024fdcebfaef4d5cf4c25393cd",
          "sha256": "070098a6590b810ea11a8dd3c829e7356c5297ce7327045126f41d98f97bcc58"
        },
        "downloads": -1,
        "filename": "csfalcon-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b0d711024fdcebfaef4d5cf4c25393cd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 60130,
        "upload_time": "2020-12-04T23:37:20",
        "upload_time_iso_8601": "2020-12-04T23:37:20.413752Z",
        "url": "https://files.pythonhosted.org/packages/8f/82/45aa4d868c9acc8030f7fedd421dac6d6de4711926e1f2d56509c30d6286/csfalcon-0.1.1-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "25812ec4bf3731806c7e0c3368a87124eca34e2d5e38307f09694749a6951eff",
          "md5": "029f5f2f3075e1d698b2f9054f6b9b30",
          "sha256": "986dc9bda997782c2cfbca4c48239974748b571bd119c39b6c21cb9e89106a74"
        },
        "downloads": -1,
        "filename": "csfalcon-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "029f5f2f3075e1d698b2f9054f6b9b30",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 23725,
        "upload_time": "2020-12-04T23:37:21",
        "upload_time_iso_8601": "2020-12-04T23:37:21.465036Z",
        "url": "https://files.pythonhosted.org/packages/25/81/2ec4bf3731806c7e0c3368a87124eca34e2d5e38307f09694749a6951eff/csfalcon-0.1.1.tar.gz",
        "yanked": true,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8f8245aa4d868c9acc8030f7fedd421dac6d6de4711926e1f2d56509c30d6286",
        "md5": "b0d711024fdcebfaef4d5cf4c25393cd",
        "sha256": "070098a6590b810ea11a8dd3c829e7356c5297ce7327045126f41d98f97bcc58"
      },
      "downloads": -1,
      "filename": "csfalcon-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b0d711024fdcebfaef4d5cf4c25393cd",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 60130,
      "upload_time": "2020-12-04T23:37:20",
      "upload_time_iso_8601": "2020-12-04T23:37:20.413752Z",
      "url": "https://files.pythonhosted.org/packages/8f/82/45aa4d868c9acc8030f7fedd421dac6d6de4711926e1f2d56509c30d6286/csfalcon-0.1.1-py3-none-any.whl",
      "yanked": true,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "25812ec4bf3731806c7e0c3368a87124eca34e2d5e38307f09694749a6951eff",
        "md5": "029f5f2f3075e1d698b2f9054f6b9b30",
        "sha256": "986dc9bda997782c2cfbca4c48239974748b571bd119c39b6c21cb9e89106a74"
      },
      "downloads": -1,
      "filename": "csfalcon-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "029f5f2f3075e1d698b2f9054f6b9b30",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 23725,
      "upload_time": "2020-12-04T23:37:21",
      "upload_time_iso_8601": "2020-12-04T23:37:21.465036Z",
      "url": "https://files.pythonhosted.org/packages/25/81/2ec4bf3731806c7e0c3368a87124eca34e2d5e38307f09694749a6951eff/csfalcon-0.1.1.tar.gz",
      "yanked": true,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}