{
  "info": {
    "author": "laojunjun",
    "author_email": "3219030654@stu.cpu.edu.cn",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# GetTransTool Package\n\nThere are four types of methods to extract **longest transcript** or **longest CDS regeion with longest transcript** from **transcripts fasta** file or **GTF** file.\n\n---\n\n- 1.Extract longest transcript from gencode transcripts fasta file.\n\n- 2.Extract longest transcript from gtf format annotation file based on gencode/ensembl/ucsc database.\n\n- 3.Extract longest CDS regeion with longest transcript from gencode database transcripts fasta file.\n\n- 4.Extract longest CDS regeion with longest transcript from gtf format annotation file based on ensembl/ucsc database.\n\n## Install\n\n```shell\n$ pip install GetTransTool\n```\n\n## Usage\n\n## 1. get longest transcript from gencode transcripts fasta file:\n\n### help infomation:\n\n```shell\n$ GetLongestTransFromGencode -h\nusage: GetLongestTransFromGencode --file gencode.vM28.transcripts.fa.gz --outfile longest_trans.fa\n\nGet longest transcripts from gencode transcripts fasta file.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -v, --version         show program's version number and exit\n  -f transfile, --file transfile\n                        input your transcripts file with \".gz\" format. (gencode.vM28.transcripts.fa.gz)\n  -o longestfile, --outfile longestfile\n                        output your longest transcript file. (longest_trans.fa)\n\nThank your for your support, if you have any questions or suggestions please contact me: 3219030654@stu.cpu.edu.cn.\n```\n\n### usage:\n\n```shell\n$ GetLongestTransFromGencode --file gencode.vM28.transcripts.fa.gz --outfile longest_trans_gencode.fa\nYour job is running, please wait...\nYour job is done!\nRunning with 32.33 seconds!\n```\n\nthere will be three files produced including **name_changed.fa**, **longest_transcripts_info.csv**, **longest_trans_gencode.fa**.\n\n> name_changed.fa:\n\n```\n>4933401J01Rik|ENSMUSG00000102693.2|ENSMUST00000193812.2|1070\nAAGGAAAGAGGATAACACTTGAAATGTAAATAAAGAAAATACCTAATAAAAATAAATAAA\nAACATGCTTTCAAAGGAAATAAAAAGTTGGATTCAAAAATTTAACTTTTGCTCATTTGGT\nATAATCAAGGAAAAGACCTTTGCATATAAAATATATTTTGAATAAAATTCAGTGGAAGAA\n...\n```\n\n> longest_transcripts_info.csv:\n\nthis is the longest transcripts exon length information.\n\n```\nfullname,gene_name,translength\nsnoZ196_ENSMUSG00002074855.1|ENSMUST00020182568.1|35,snoZ196,35\nsnoZ159_ENSMUSG00002075734.1|ENSMUST00020182611.1|87,snoZ159,87\nn-R5s93_ENSMUSG00000119639.1|ENSMUST00000240071.1|119,n-R5s93,119\n...\n```\n\n> longest_trans_gencode.fa:\n\nthis is the filtered longest transcript fasta file.\n\n```\n>4933401J01Rik|ENSMUSG00000102693.2|ENSMUST00000193812.2|1070\nAAGGAAAGAGGATAACACTTGAAATGTAAATAAAGAAAATACCTAATAAAAATAAATAAA\nAACATGCTTTCAAAGGAAATAAAAAGTTGGATTCAAAAATTTAACTTTTGCTCATTTGGT\nATAATCAAGGAAAAGACCTTTGCATATAAAATATATTTTGAATAAAATTCAGTGGAAGAA\n...\n```\n\n---\n\n## 2. Extract longest transcript from gtf format annotation file based on gencode/ensembl/ucsc database:\n\n### help infomation:\n\n```shell\n$ GetLongestTransFromGTF -h\nusage: GetLongestTransFromGTF --database ensembl --gtffile Homo_sapiens.GRCh38.101.gtf.gz --genome Homo_sapiens.GRCh38.dna.primary_assembly.fa --outfile longest_trans.fa\n\nExtract longest transcript from gtf format annotation file based on gencode/ensembl/ucsc database.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -v, --version         show program's version number and exit\n  -d databse, --database databse\n                        which annotation database you choose. (default=\"ensembl\", ucsc/ensembl/gencode)\n  -g gtffile, --gtffile gtffile\n                        input your GTF file with \".gz\" format.\n  -fa genome, --genome genome\n                        your genome fasta file matched with your GTF file with \".gz\" format. (Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz)\n  -o longestfile, --outfile longestfile\n                        output your longest transcript file. (longest_trans.fa)\n\nThank your for your support, if you have any questions or suggestions please contact me: 3219030654@stu.cpu.edu.cn.\n```\n\n### usage:\n\n```shell\n$ GetLongestTransFromGTF --database ensembl --gtffile Homo_sapiens.GRCh38.103.gtf.gz --genome Homo_sapiens.GRCh38.dna.primary_assembly.fa --outfile longest_trans_ensembl.fa\nYour job is running, please wait...\nYour job is done! \nRunning with 159.51 seconds!\n```\n\nfor ucsc:\n\n```\n$ GetLongestTransFromGTF --database ucsc --gtffile hg19.ncbiRefSeq.gtf.gz --genome hg19.fa --outfile longest_trans_ucsc.fa\n```\n\n---\n\n## 3. Extract longest CDS regeion with longest transcript from gencode database transcripts fasta file.\n\n### help infomation:\n\n```shell\n$ GetCDSLongestFromGencode -h\nusage: GetCDSLongestFromGencode --file gencode.vM28.pc_transcripts.fa.gz --outfile longest_cds_trans.fa\n\nExtract longest CDS regeion with longest transcript from gencode database transcripts fasta file.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -v, --version         show program's version number and exit\n  -f transfile, --file transfile\n                        input your protein-coding transcripts file with \".gz\" format. (gencode.vM28.pc_transcripts.fa.gz)\n  -o longestfile, --outfile longestfile\n                        output your longest transcript file. (longest_cds_trans.fa)\n\nThank your for your support, if you have any questions or suggestions please contact me: 3219030654@stu.cpu.edu.cn.\n```\n\n### usage:\n\n```shell\n$ GetCDSLongestFromGencode --file gencode.vM28.pc_transcripts.fa.gz --outfile longest_cds_trans_gencode.fa\nYour job is running, please wait...\nYour job is done! \nRunning with 17.67 seconds!\n```\n\nthere will be four files produced including **name_changed.fa**, **All_transcripts_cds_info.csv**, **longest_cds_transcripts_info.csv**, **longest_cds_trans_gencode.fa**.\n\n> name_changed.fa:\n\n```\n>Xkr4_ENSMUSG00000051951.6_ENSMUST00000070533.5_151_2094_3634\nGCGGCGGCGGGCGAGCGGGCGCTGGAGTAGGAGCTGGGGAGCGGCGCGGCCGGGGAAGGA\nAGCCAGGGCGAGGCGAGGAGGTGGCGGGAGGAGGAGACAGCAGGGACAGGTGTCAGATAA\nAGGAGTGCTCTCCTCCGCTGCCGAGGCATCATGGCCGCTAAGTCAGACGGGAGGCTGAAG\n...\n```\n\n> All_transcripts_cds_info.csv:\n\nthis is the all transcripts cds and exon length information.\n\n```\nfullname,gene_name,translength,cdslength\n>mt-Nd6_ENSMUSG00000064368.1_ENSMUST00000082419.1_1_519_519,>mt-Nd6,519,519\n>mt-Nd5_ENSMUSG00000064367.1_ENSMUST00000082418.1_1_1824_1824,>mt-Nd5,1824,1824\n>mt-Nd4l_ENSMUSG00000065947.1_ENSMUST00000084013.1_1_297_297,>mt-Nd4l,297,297\n...\n```\n\n> longest_cds_transcripts_info.csv:\n\n```\nfullname,gene_name,translength,cdslength\n>mt-Nd6_ENSMUSG00000064368.1_ENSMUST00000082419.1_1_519_519,>mt-Nd6,519,519\n>mt-Nd5_ENSMUSG00000064367.1_ENSMUST00000082418.1_1_1824_1824,>mt-Nd5,1824,1824\n>mt-Nd4l_ENSMUSG00000065947.1_ENSMUST00000084013.1_1_297_297,>mt-Nd4l,297,297\n...\n```\n\n> longest_cds_trans_gencode.fa:\n\n```\n>Xkr4_ENSMUSG00000051951.6_ENSMUST00000070533.5_151_2094_3634\nGCGGCGGCGGGCGAGCGGGCGCTGGAGTAGGAGCTGGGGAGCGGCGCGGCCGGGGAAGGA\nAGCCAGGGCGAGGCGAGGAGGTGGCGGGAGGAGGAGACAGCAGGGACAGGTGTCAGATAA\nAGGAGTGCTCTCCTCCGCTGCCGAGGCATCATGGCCGCTAAGTCAGACGGGAGGCTGAAG\n...\n```\n\n---\n\n## 4. Extract longest CDS regeion with longest transcript from gtf format annotation file based on ensembl/ucsc database.\n\n### help infomation:\n\n```shell\n$ GetCDSLongestFromGTF -h\nusage: GetCDSLongestFromGTF --database ensembl --gtffile Homo_sapiens.GRCh38.101.gtf.gz --genome Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz --outfile longest_cds_trans.fa\n\nExtract longest CDS regeion with longest transcript from gtf format annotation file based on ensembl/ucsc database.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -v, --version         show program's version number and exit\n  -d databse, --database databse\n                        which annotation database you choose. (default=\"ensembl\", ucsc/ensembl)\n  -g gtffile, --gtffile gtffile\n                        input your GTF file with \".gz\" format.\n  -fa genome, --genome genome\n                        your genome fasta file matched with your GTF file with \".gz\" format. (Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz)\n  -o cdslongestfile, --outfile cdslongestfile\n                        output your longest transcript file. (longest_cds_trans.fa)\n\nThank your for your support, if you have any questions or suggestions please contact me: 3219030654@stu.cpu.edu.cn.\n```\n\n### usage:\n\n```shell\n$ GetCDSLongestFromGTF  --database ensembl --gtffile Homo_sapiens.GRCh38.103.gtf.gz --genome Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz --outfile longest_cds_trans_ensembl.fa\nYour job is running, please wait...\nYour job is done! \nRunning with 152.38 seconds!\n```\n\nfor ucsc:\n\n```shell\n$ GetCDSLongestFromGTF  --database ucsc --gtffile hg19.ncbiRefSeq.gtf.gz --genome hg19.fa.gz --outfile longest_cds_trans_ensembl.fa\n```\n\n---\n\n## END\n\n> Thank your for your support, if you have any questions or suggestions please contact me: 3219030654@stu.cpu.edu.cn.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/junjunlab/GetTransTool",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "GetTransTool",
    "package_url": "https://pypi.org/project/GetTransTool/",
    "platform": null,
    "project_url": "https://pypi.org/project/GetTransTool/",
    "project_urls": {
      "Bug Tracker": "https://github.com/junjunlab/GetTransTool/issues",
      "Homepage": "https://github.com/junjunlab/GetTransTool"
    },
    "release_url": "https://pypi.org/project/GetTransTool/0.0.7/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Extract longest transcript or longest CDS transcript from GTF annotation file or gencode transcripts fasta file.",
    "version": "0.0.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13292343,
  "releases": {
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fccf4212ba8b0502025cb5f810ffec6b0a10001c20064e8342847be0fba977fb",
          "md5": "6b71787b9b7b09528c2a44442d97784c",
          "sha256": "6cc1b4a3f5e0d2c2eb3f7e6ae316ad4fb8ab72d03d2eb695f25baf2076eb2e92"
        },
        "downloads": -1,
        "filename": "GetTransTool-0.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6b71787b9b7b09528c2a44442d97784c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 14495,
        "upload_time": "2022-03-25T11:49:45",
        "upload_time_iso_8601": "2022-03-25T11:49:45.719184Z",
        "url": "https://files.pythonhosted.org/packages/fc/cf/4212ba8b0502025cb5f810ffec6b0a10001c20064e8342847be0fba977fb/GetTransTool-0.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "373ddd8d2c10c4218d4f703700828f47160d8a4cff4924480318f82b718b9a2c",
          "md5": "2d4aa52702f6259f52ffe843c57f5551",
          "sha256": "ec8af305ab575bbab0a215d6d47c90c30a36a6d25507ae7d3cf544179155b09b"
        },
        "downloads": -1,
        "filename": "GetTransTool-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "2d4aa52702f6259f52ffe843c57f5551",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10895,
        "upload_time": "2022-03-25T11:49:47",
        "upload_time_iso_8601": "2022-03-25T11:49:47.364332Z",
        "url": "https://files.pythonhosted.org/packages/37/3d/dd8d2c10c4218d4f703700828f47160d8a4cff4924480318f82b718b9a2c/GetTransTool-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fccf4212ba8b0502025cb5f810ffec6b0a10001c20064e8342847be0fba977fb",
        "md5": "6b71787b9b7b09528c2a44442d97784c",
        "sha256": "6cc1b4a3f5e0d2c2eb3f7e6ae316ad4fb8ab72d03d2eb695f25baf2076eb2e92"
      },
      "downloads": -1,
      "filename": "GetTransTool-0.0.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6b71787b9b7b09528c2a44442d97784c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 14495,
      "upload_time": "2022-03-25T11:49:45",
      "upload_time_iso_8601": "2022-03-25T11:49:45.719184Z",
      "url": "https://files.pythonhosted.org/packages/fc/cf/4212ba8b0502025cb5f810ffec6b0a10001c20064e8342847be0fba977fb/GetTransTool-0.0.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "373ddd8d2c10c4218d4f703700828f47160d8a4cff4924480318f82b718b9a2c",
        "md5": "2d4aa52702f6259f52ffe843c57f5551",
        "sha256": "ec8af305ab575bbab0a215d6d47c90c30a36a6d25507ae7d3cf544179155b09b"
      },
      "downloads": -1,
      "filename": "GetTransTool-0.0.7.tar.gz",
      "has_sig": false,
      "md5_digest": "2d4aa52702f6259f52ffe843c57f5551",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 10895,
      "upload_time": "2022-03-25T11:49:47",
      "upload_time_iso_8601": "2022-03-25T11:49:47.364332Z",
      "url": "https://files.pythonhosted.org/packages/37/3d/dd8d2c10c4218d4f703700828f47160d8a4cff4924480318f82b718b9a2c/GetTransTool-0.0.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}