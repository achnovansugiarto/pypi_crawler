{
  "info": {
    "author": "Elior Erez (originally written by Grokzen@gmail.com)",
    "author_email": "elior123@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Build Tools",
      "Topic :: Software Development :: Testing"
    ],
    "description": "docker-jinja - dj\n=================\n\n - Forked from https://github.com/Grokzen/docker-jinja\n\nExtend your dockerfiles with Jinja2 syntax and logic.\n\nCreate new filter and functions for Jinja with simple datasource files.\n\n\nInstallation\n------------\n\nInstall from pypi with `pip install docker-jinja`\n\nTo install in development mode, first navigate to root of project and then run `pip install -r dev-requirements.txt; pip install -e .`. It is recommended to install inside a virtualenv to avoid conflicts with dependencies.\n\n\n\nQuickstart guide\n----------------\n\nCreate a Dockerfile.jinja that contains all regular Dockerfile build steps and the jinja syntax. For exapmle:\n\n```\n$ cat Dockerfile.jinja \nFROM {{ OS }}\nMAINTAINER {{ MAINTAINER }} \n\nARG {{ ARG1 }}\n```\n\nRun `dj` command. For example:\n\n```\ndj --dockerfile Dockerfile.jinja --outfile Dockerfile --env OS=ubuntu:12.04 --env MAINTAINER=Grokzen --env ARG1=foobar --config test-config.json\n```\n\nAnd you will get the output:\n\n```\nFROM ubuntu:12.04\nMAINTAINER Grokzen\n\nARG foobar\n```\n\n\nConfiguration files\n-------------------\n\nIt is possible to create predefined configuration files with settings, enviroment variables and datasources.\n\n`dj` tries to load the following configuration files in the following order:\n\n- /etc/dj.yaml\n- /etc/dj.json\n- ~/.dj.yaml\n- ~/.dj.json\n- $CWD + '.dj.yaml'\n- $CWD + '.dj.json'\n\nYAML is the file format to prefer but json is also supported.\n\nCurrently it is not possible to automatically load a config file next to the source Dockerfile.\n\n\n\nDatasources\n-----------\n\nIf you want to extend the Jinja syntax with additional filters and global functions you have the datasource pattern to help you.\n\nA datasource file is a python script that can contain any code you want so you can extend `dj` to be capable to perform any task you want.\n\nYou can tell `dj` to load a datasource file in multiple ways.\n\n- In any config file create a key `datasources` with a list of strings paths pointing to all files that `dj` should import. (Must be absolute path)\n- Point to a file with cli key -s/--datasource and `dj` will load that file. (Relative paths is supported)\n- Add a python file to contrib folder and it will auto load during execution.\n\n\n\nGlobal functions\n################\n\nA global function is a regular python function that you can call from jinja. These functions can be used to perform any usefull task you require.\n\nTo create a global function you define a method within a datasource and its name should starts with `_global_` and then follow by the name you want to use in your Dockerfile.\n\nFor example if you have the following code:\n\n```python\ndef _global_foo():\n    return \"bar\" \n```\n\nYou can call it from jinja with:\n\n```Shell\nRUN echo '{{ foo() }}'\n```\n\nand it will render into\n\n```Shell\nRUN echo 'bar'\n```\n\n\n\nFilter functions\n################\n\nTo create a new filter function you define a method within a datasource and its name should starts with `_filter_` and then follow by the name you want to use in your Dockerfile.\n\nFor example if you have the following code\n\n```python\ndef _filter_bar(arg):\n    return arg.upper()\n```\n\nYou can call it from jinja with:\n\n```Shell\nRUN echo '{{ \"opa\"|bar }}'\n```\n\nand it will render into\n\n```Shell\nRUN echo 'OPA'\n```\n\n\n\nOther rendering engines\n-----------------------\n\nCurrently only Jinja2 is supported as rendering engine\n\n\n\nSupported python version\n------------------------\n\n- 3.10\n\n\nContribute\n----------\n\nOpen an Issue on github describing the problem you have.\n\nIf you have a fix for the problem or want to add something to contrib library, open a PR with your fix. The PR must contain some test to verify that it work if it is a bugfix or new feature.  All tests in all supported python environments must pass on TravisCI before a PR will be accepted.\n\nAll PR:s should have their commits squashed to a single commit.\n\n\n\nLicense\n=======\n\nSee LICENSE file. (MIT)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/eliorerz/docker-jinja3",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "docker-jinja3",
    "package_url": "https://pypi.org/project/docker-jinja3/",
    "platform": null,
    "project_url": "https://pypi.org/project/docker-jinja3/",
    "project_urls": {
      "Homepage": "https://github.com/eliorerz/docker-jinja3"
    },
    "release_url": "https://pypi.org/project/docker-jinja3/0.0.0.post3/",
    "requires_dist": [
      "pyyaml (==6.0)",
      "Jinja2 (==3.1.2)",
      "docopt (==0.6.2)"
    ],
    "requires_python": ">=3.7.0",
    "summary": "Extend your dockerfiles with Jinja2 syntax to to more awesome dockerfiles",
    "version": "0.0.0.post3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15020446,
  "releases": {
    "0.0.0.post2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "83cd72dedc1f9f8d3c95e3daa3a0479e26a95e48dfa866fe4c500635592b54bd",
          "md5": "9b33eb0a6e322b94f51704bfba652cc3",
          "sha256": "c72502cfbe03356252385b82df0e111d3e683ecc570222dcce7146e11695f33d"
        },
        "downloads": -1,
        "filename": "docker_jinja3-0.0.0.post2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9b33eb0a6e322b94f51704bfba652cc3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.0",
        "size": 10180,
        "upload_time": "2022-09-07T15:07:15",
        "upload_time_iso_8601": "2022-09-07T15:07:15.693740Z",
        "url": "https://files.pythonhosted.org/packages/83/cd/72dedc1f9f8d3c95e3daa3a0479e26a95e48dfa866fe4c500635592b54bd/docker_jinja3-0.0.0.post2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7073b9fc1c092ba39b85b1c1dc9d50474b92f64d351110f83ed88618ccd4ce4d",
          "md5": "08aa469b105b81aaa6d27f47e90e8915",
          "sha256": "ddefc50d6e161e5a240872fffe3cfce8912b9e7014228970219a23ad802f25a2"
        },
        "downloads": -1,
        "filename": "docker-jinja3-0.0.0.post2.tar.gz",
        "has_sig": false,
        "md5_digest": "08aa469b105b81aaa6d27f47e90e8915",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.0",
        "size": 10592,
        "upload_time": "2022-09-07T15:07:18",
        "upload_time_iso_8601": "2022-09-07T15:07:18.168385Z",
        "url": "https://files.pythonhosted.org/packages/70/73/b9fc1c092ba39b85b1c1dc9d50474b92f64d351110f83ed88618ccd4ce4d/docker-jinja3-0.0.0.post2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.0.post3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf28d57d5490d78ae165a7d682e2ddf2adcf1276673e79c08a96e61f78e0d190",
          "md5": "d2028f1f7b809e540388a0bf73dc587f",
          "sha256": "c7635e206bbd85189388f54930883f0d7d58e5f7df4163b4a737db26a9f59ea1"
        },
        "downloads": -1,
        "filename": "docker_jinja3-0.0.0.post3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d2028f1f7b809e540388a0bf73dc587f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.0",
        "size": 10174,
        "upload_time": "2022-09-07T15:09:45",
        "upload_time_iso_8601": "2022-09-07T15:09:45.605256Z",
        "url": "https://files.pythonhosted.org/packages/bf/28/d57d5490d78ae165a7d682e2ddf2adcf1276673e79c08a96e61f78e0d190/docker_jinja3-0.0.0.post3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e9981dd2bb79b8525d99c6d5d08b5931239c2f81b57fa78cc4df00e3f485a936",
          "md5": "b42ee4dfa65fe43802ee4e7f0a4af68a",
          "sha256": "3ae933a5037d48db86fc1b400d0e646c755d3e8e6dfa57e4924e378d02781e08"
        },
        "downloads": -1,
        "filename": "docker-jinja3-0.0.0.post3.tar.gz",
        "has_sig": false,
        "md5_digest": "b42ee4dfa65fe43802ee4e7f0a4af68a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.0",
        "size": 10579,
        "upload_time": "2022-09-07T15:09:48",
        "upload_time_iso_8601": "2022-09-07T15:09:48.263057Z",
        "url": "https://files.pythonhosted.org/packages/e9/98/1dd2bb79b8525d99c6d5d08b5931239c2f81b57fa78cc4df00e3f485a936/docker-jinja3-0.0.0.post3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bf28d57d5490d78ae165a7d682e2ddf2adcf1276673e79c08a96e61f78e0d190",
        "md5": "d2028f1f7b809e540388a0bf73dc587f",
        "sha256": "c7635e206bbd85189388f54930883f0d7d58e5f7df4163b4a737db26a9f59ea1"
      },
      "downloads": -1,
      "filename": "docker_jinja3-0.0.0.post3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d2028f1f7b809e540388a0bf73dc587f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7.0",
      "size": 10174,
      "upload_time": "2022-09-07T15:09:45",
      "upload_time_iso_8601": "2022-09-07T15:09:45.605256Z",
      "url": "https://files.pythonhosted.org/packages/bf/28/d57d5490d78ae165a7d682e2ddf2adcf1276673e79c08a96e61f78e0d190/docker_jinja3-0.0.0.post3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e9981dd2bb79b8525d99c6d5d08b5931239c2f81b57fa78cc4df00e3f485a936",
        "md5": "b42ee4dfa65fe43802ee4e7f0a4af68a",
        "sha256": "3ae933a5037d48db86fc1b400d0e646c755d3e8e6dfa57e4924e378d02781e08"
      },
      "downloads": -1,
      "filename": "docker-jinja3-0.0.0.post3.tar.gz",
      "has_sig": false,
      "md5_digest": "b42ee4dfa65fe43802ee4e7f0a4af68a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7.0",
      "size": 10579,
      "upload_time": "2022-09-07T15:09:48",
      "upload_time_iso_8601": "2022-09-07T15:09:48.263057Z",
      "url": "https://files.pythonhosted.org/packages/e9/98/1dd2bb79b8525d99c6d5d08b5931239c2f81b57fa78cc4df00e3f485a936/docker-jinja3-0.0.0.post3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}