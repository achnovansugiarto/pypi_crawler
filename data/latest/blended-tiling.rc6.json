{
  "info": {
    "author": "Ben Egan",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Artistic Software",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Scientific/Engineering :: Image Processing",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# blended-tiling\n\n[![GitHub - License](https://img.shields.io/github/license/progamergov/blended-tiling?logo=github&style=flat&color=green)][#github-license]\n[![PyPI](https://img.shields.io/pypi/v/blended-tiling.svg)][#pypi-package]\n[![DOI](https://zenodo.org/badge/503953108.svg)](https://zenodo.org/badge/latestdoi/503953108)\n\n[#github-license]: https://github.com/progamergov/blended-tiling/blob/main/LICENSE\n[#pypi-package]: https://pypi.org/project/blended-tiling/\n\n\nThis module adds support for splitting NCHW tensor inputs like images & activations into overlapping tiles of equal size, and then blending those overlapping tiles together after they have been altered. This module is also fully Autograd & JIT / TorchScript compatible.\n\nThis tiling solution is intended for situations where one wishes to render / generate outputs that are larger than what their computing device can support. Tiles can be separately rendered and periodically blended together to maintain tile feature coherence.\n\n## Setup:\n\n**Installation Requirements**\n- Python >= 3.6\n- PyTorch >= 1.6\n\n**Installation via `pip`:**\n\n```\npip install blended-tiling\n```\n\n**Dev / Manual install**:\n\n```\ngit clone https://github.com/progamergov/blended-tiling.git\ncd blended-tiling\npip install -e .\n\n# Notebook installs also require appending to environment variables\n# import sys\n# sys.path.append('/content/blended-tiling')\n```\n\n\n## Documentation\n\n### `TilingModule`\n\nThe base blended tiling module.\n\n```\nblended_tiling.TilingModule(tile_size=(224, 224), tile_overlap=(0.25, 0.25), base_size=(512, 512))\n```\n\n**Initialization Variables**\n\n* `tile_size` (int or tuple of int): The size of tiles to use. A single integer to use for both the height and width dimensions, or a list / tuple of dimensions with a shape of: `[height, width]`. The chosen tile sizes should be less than or equal to the sizes of the full NCHW tensor (`base_size`).\n* `tile_overlap` (int or tuple of int): The amount of overlap to use when creating tiles. A single integer to use for both the height and width dimensions, or a list / tuple of dimensions with a shape of: `[height, width]`. The chosen overlap percentages should be in the range [0.0, 0.50] (0% - 50%).\n* `base_size` (int or tuple of int): The size of the NCHW tensor being split into tiles. A single integer to use for both the height and width dimensions, or a list / tuple of dimensions with a shape of: `[height, width]`.\n\n\n#### Methods\n\n\n**`num_tiles()`**\n\n  * Returns\n    * `num_tiles` (int): The number of tiles that the full image shape is divided into based on specified parameters.\n\n**`tiling_pattern()`**\n\n  * Returns:\n    * `pattern` (list of int): The number of tiles per column and number of tiles per row, in the format of: `[n_tiles_per_column, n_tiles_per_row]`.\n\n**`split_into_tiles(x)`**: Splits an NCHW image input into overlapping tiles, and then returns the tiles. The `base_size` parameter is automatically readjusted to match the input.\n  * Returns:\n    * `tiles` (torch.Tensor): A set of tiles created from the input image.\n\n**`get_tile_masks(channels=3, device=torch.device(\"cpu\"), dtype=torch.float)`**: Return a stack of NCHW masks corresponding to the tiles outputted by `.split_into_tiles(x)`.\n\n  * Variables:\n    * `channels` (int, optional): The number of channels to use for the masks. Default: 3\n    * `device` (torch.device, optional): The desired device to create the masks on. Default: torch.device(\"cpu\")\n    * `dtype` (torch.dtype, optional): The desired dtype to create the masks with. Default: torch.float\n  * Returns:\n    * `masks` (torch.Tensor): A set of tile masks stacked across the batch dimension.\n\n\n**`rebuild(tiles, border=None, colors=None)`**: Creates and returns the full image from a stack of NCHW tiles stacked across the batch dimension.\n  * Variables:\n    * `tiles` (torch.Tensor): A set of tiles that may or not be masked, stacked across the batch dimension.\n    * `border` (int, optional): Optionally add a border of a specified size to the edges of tiles in the full image for debugging and explainability. Set to None for no border.\n    * `colors` (list of float, optional): A set of floats to use for the border color, if using borders. Default is set to red unless specified.\n  * Returns:\n    * `full_image` (torch.Tensor): The full image made up of tiles merged together without any blending.\n\n**`rebuild_with_masks(tiles, border=None, colors=None)`:** Creates and returns the full image from a stack of NCHW tiles stacked across the batch dimension, using tile blend masks.\n  * Variables:\n    * `tiles` (torch.Tensor): A set of tiles that may or not be masked, stacked across the batch dimension.\n    * `border` (int, optional): Optionally add a border of a specified size to the edges of tiles in the full image for debugging and explainability. Set to None for no border.\n    * `colors` (list of float, optional): A set of floats to use for the border color, if using borders. Default is set to red unless specified.\n  * Returns:\n    * `full_image` (torch.Tensor): The full image made up of tiles blended together using masks.\n\n**`forward(x)`:** Takes a stack of tiles, combines them into the full image with blending masks, then splits the image back into tiles.\n  * Variables:\n    * `x` (torch.Tensor): A set of tiles to blend the overlapping regions together of.\n  * Returns:\n    * `x` (torch.Tensor): A set of tiles with overlapping regions blended together.\n\n\n### Supported Tensor Types\n\nThe `TilingModule` class has been tested with and is confirmed to work with the following PyTorch [Tensor Data types / dtypes](https://pytorch.org/docs/stable/tensors.html): `torch.float32` / `torch.float`, `torch.float64` / `torch.double`, `torch.float16` / `torch.half`, & `torch.bfloat16`.\n\n\n## Usage\n\nThe `TilingModule` class is pretty easy to use.\n\n```\nfrom blended_tiling import TilingModule\n\n\nfull_size = [512, 512]\ntile_size = [224, 224]\ntile_overlap = [0.25, 0.25]  # 25% overlap on both H & W\n\ntiling_module = TilingModule(\n    tile_size=tile_size,\n    tile_overlap=tile_overlap,\n    base_size=full_size,\n)\n\n# Shape of tiles expected in forward pass\ninput_shape = [tiling_module.num_tiles(), 3] + tile_size\n\n# Tiles are blended together and then split apart by default\nblended_tiles = tiling_module(torch.ones(input_shape))\n```\n\n\nTiles can be created and then merged back into the original tensor like this:\n\n```\nfull_tensor = torch.ones(1, 3, 512, 512)\n\ntiles = tiling_module.split_into_tiles(full_tensor)\n\nfull_tensor = tiling_module.rebuild_with_masks(tiles)\n```\n\nThe tile boundaries can be viewed on the full tensor like this:\n\n```\ntiles = torch.ones(9, 3, 224, 224)\nfull_tensor = tiling_module.rebuild_with_masks(tiles, border=2)\n```\n\nAnd the number of tiles and tiling pattern can be obtained like this:\n\n```\nnum_tiles = tiling_module.num_tiles()\n\ntiling_pattern = tiling_module.tiling_pattern()\nprint(\"{}x{}\".format(tiling_pattern[0], tiling_pattern[1]))\n```\n\n\n### Custom Classes\n\nIt's also easy to modify the forward function of the tiling module:\n\n```\nfrom typing import Union, List, Tuple\nfrom blended_tiling import TilingModule\n\nclass CustomTilingModule(TilingModule):\n    def __init__(\n        self,\n        tile_size: Union[int, List[int], Tuple[int, int]] = [224, 224],\n        tile_overlap: Union[float, List[float], Tuple[float, float]] = [0.25, 0.25],\n        base_size: Union[int, List[int], Tuple[int, int]] = [512, 512],\n    ) -> None:\n        TilingModule.__init__(self, tile_size, tile_overlap, base_size)\n        self.custom_module = torch.nn.Identity()\n\n    def forward(self, x: torch.Tensor) -> torch.Tensor:\n        x = self.rebuild_with_masks(x)\n        x = self.custom_module(x) + 4.0\n        return self._get_tiles_and_coords(x)[0]\n```\n\n\n## Examples\n\n\nTo demonstrate the tile blending abilities of the `TilingModule` class, an example has been created below.\n\n\n\nFirst we'll create a set of tiles & give them all unique colors for this example:\n\n```\n# Setup TilingModule instance\nfull_size = [768, 1014]\ntile_size = [256, 448]\ntile_overlap = [0.25, 0.25]\ntiling_module = TilingModule(\n    tile_size=tile_size,\n    tile_overlap=tile_overlap,\n    base_size=full_size,\n)\n\n# Create unique colors for tiles\ntile_colors = [\n    [0.5334, 0.0, 0.8459],\n    [0.0, 1.0, 0.0],\n    [0.0, 0.7071, 0.7071],\n    [0.7071, 0.7071, 0.0],\n    [1.0, 0.0, 0.0],\n    [0.8459, 0.0, 0.5334],\n    [0.7071, 0.0, 0.7071],\n    [0.0, 0.8459, 0.5334],\n    [0.5334, 0.8459, 0.0],\n    [0.0, 0.5334, 0.8459],\n    [0.0, 0.0, 1.0],\n    [0.8459, 0.5334, 0.0],\n]\ntile_colors = torch.as_tensor(tile_colors).view(12, 3, 1, 1)\n\n# Create tiles\ntiles = torch.ones([tiling_module.num_tiles(), 3] + tile_size)\n\n# Color tiles\ntiles = tiles * tile_colors\n```\n\n<img src=\"https://github.com/ProGamerGov/blended-tiling/raw/main/examples/without_masks_separate_tiles.jpg\" width=\"500\">\n\nNext we apply the blend masks to the tiles:\n\n```\ntiles = tiles * tiling_module.get_tile_masks()\n```\n\n<img src=\"https://github.com/ProGamerGov/blended-tiling/raw/main/examples/with_masks_separate_tiles.jpg\" width=\"500\">\n\n\nWe can now combine the masked tiles into the full image:\n\n```\n# Build full tiled image\noutput = tiling_module.rebuild(tiles)\n```\n\n<img src=\"https://github.com/ProGamerGov/blended-tiling/raw/main/examples/with_masks.jpg\" width=\"500\">\n\nWe can also view the tile boundaries like so:\n\n```\n# Build full tiled image\noutput = tiling_module.rebuild(tiles, border=2, colors=[0,0,0])\n```\n\n<img src=\"https://github.com/ProGamerGov/blended-tiling/raw/main/examples/with_masks_and_borders.jpg\" width=\"500\">\n\nWe can view an animation of the tiles being added like this:\n\n```\nfrom torchvision.transforms import ToPILImage\n\ntile_steps = [\n    tiling_module.rebuild(tiles[: i + 1]) for i in range(tiles.shape[0])\n]\ntile_frames = [\n    ToPILImage()(x[0])\n    for x in [torch.zeros_like(tile_steps[0])] + tile_steps + [tile_steps[-1]]\n]\ntile_frames[0].save(\n    \"tiles.gif\",\n    format=\"GIF\",\n    append_images=tile_frames[1:],\n    save_all=True,\n    duration=700,\n    loop=0,\n)\n```\n\n<img src=\"https://github.com/ProGamerGov/blended-tiling/raw/main/examples/with_masks.gif\" width=\"500\">\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/progamergov/blended-tiling",
    "keywords": "blended-tiling,tiler,tiling,masking",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "blended-tiling",
    "package_url": "https://pypi.org/project/blended-tiling/",
    "platform": null,
    "project_url": "https://pypi.org/project/blended-tiling/",
    "project_urls": {
      "Homepage": "https://github.com/progamergov/blended-tiling"
    },
    "release_url": "https://pypi.org/project/blended-tiling/0.0.1.dev6/",
    "requires_dist": [
      "torch (>=1.6)",
      "black (==22.3.0) ; extra == 'dev'",
      "flake8 ; extra == 'dev'",
      "mypy (>=0.760) ; extra == 'dev'",
      "pytest ; extra == 'dev'",
      "pytest-cov ; extra == 'dev'",
      "usort (==1.0.2) ; extra == 'dev'",
      "ufmt ; extra == 'dev'"
    ],
    "requires_python": ">=3.6",
    "summary": "Blended tiling with PyTorch",
    "version": "0.0.1.dev6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14245484,
  "releases": {
    "0.0.1.dev1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0fbb854c28d16edf114342c3b65858083b8f67e69f9392a4aaf21f5907ea03d8",
          "md5": "f526ed117a0a7fee1bfdf43b3568b31f",
          "sha256": "69d8c3a3b10551e126bc85a5447e33aab1104c4f3097264726f5d82cedc37840"
        },
        "downloads": -1,
        "filename": "blended_tiling-0.0.1.dev1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f526ed117a0a7fee1bfdf43b3568b31f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 9562,
        "upload_time": "2022-06-15T23:54:41",
        "upload_time_iso_8601": "2022-06-15T23:54:41.363885Z",
        "url": "https://files.pythonhosted.org/packages/0f/bb/854c28d16edf114342c3b65858083b8f67e69f9392a4aaf21f5907ea03d8/blended_tiling-0.0.1.dev1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "043b9c0808db36d1ccdf3bbab6a48140be7a28837b024c09b40dc81efee1d943",
          "md5": "bc94631900afd6857ab085e6fd948924",
          "sha256": "3720c8821a6af767683af994dd695a90e7e9659e7beca9cf5f8417a634752904"
        },
        "downloads": -1,
        "filename": "blended-tiling-0.0.1.dev1.tar.gz",
        "has_sig": false,
        "md5_digest": "bc94631900afd6857ab085e6fd948924",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11987,
        "upload_time": "2022-06-15T23:54:43",
        "upload_time_iso_8601": "2022-06-15T23:54:43.545803Z",
        "url": "https://files.pythonhosted.org/packages/04/3b/9c0808db36d1ccdf3bbab6a48140be7a28837b024c09b40dc81efee1d943/blended-tiling-0.0.1.dev1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1.dev2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "42319dc47b5d371702bbfc3ddbf84c40e68eb51ee87584a0529ef67ebd165721",
          "md5": "43d52b89fde7528bdad207462b10c917",
          "sha256": "02c3f6ae31e1e914bdc3b1db31b2534174288ab50ea5ef2388f543714b7fa205"
        },
        "downloads": -1,
        "filename": "blended_tiling-0.0.1.dev2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "43d52b89fde7528bdad207462b10c917",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 9563,
        "upload_time": "2022-06-15T23:58:07",
        "upload_time_iso_8601": "2022-06-15T23:58:07.525706Z",
        "url": "https://files.pythonhosted.org/packages/42/31/9dc47b5d371702bbfc3ddbf84c40e68eb51ee87584a0529ef67ebd165721/blended_tiling-0.0.1.dev2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f038728ab1d52f081146141237e12df73d3823b0a9f3385d5b2d732b6e23e8f8",
          "md5": "02c2feae9cd4b7e5b6eaa50ef6f160ea",
          "sha256": "3d254ea1b741e6eca0fbfb1bf005d43aa1426c7157f60fd28a30f85f1c8c2c8c"
        },
        "downloads": -1,
        "filename": "blended-tiling-0.0.1.dev2.tar.gz",
        "has_sig": false,
        "md5_digest": "02c2feae9cd4b7e5b6eaa50ef6f160ea",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12014,
        "upload_time": "2022-06-15T23:58:09",
        "upload_time_iso_8601": "2022-06-15T23:58:09.426827Z",
        "url": "https://files.pythonhosted.org/packages/f0/38/728ab1d52f081146141237e12df73d3823b0a9f3385d5b2d732b6e23e8f8/blended-tiling-0.0.1.dev2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1.dev3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "02c202909936514d5a46196cc96c345c36ad63a262fc348f609488c6e4a6990b",
          "md5": "250e998214aa8961eb86367ac32c6c5c",
          "sha256": "22b1afd5b57a873180b213b7206459599e19b2424dbab910f490470d58df0ec4"
        },
        "downloads": -1,
        "filename": "blended_tiling-0.0.1.dev3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "250e998214aa8961eb86367ac32c6c5c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 9437,
        "upload_time": "2022-06-16T00:34:51",
        "upload_time_iso_8601": "2022-06-16T00:34:51.982655Z",
        "url": "https://files.pythonhosted.org/packages/02/c2/02909936514d5a46196cc96c345c36ad63a262fc348f609488c6e4a6990b/blended_tiling-0.0.1.dev3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c4cf2b1799cb4f9e7fba64676dce91d432ac1acee457b97c3c7647a08c10516e",
          "md5": "0e677407b4dc2d59901253f19fe3e3c9",
          "sha256": "a290c46685d7f32ea45932f7b655c6acad63de9e5b535d99a8dee3565c760ce7"
        },
        "downloads": -1,
        "filename": "blended-tiling-0.0.1.dev3.tar.gz",
        "has_sig": false,
        "md5_digest": "0e677407b4dc2d59901253f19fe3e3c9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11703,
        "upload_time": "2022-06-16T00:34:53",
        "upload_time_iso_8601": "2022-06-16T00:34:53.769943Z",
        "url": "https://files.pythonhosted.org/packages/c4/cf/2b1799cb4f9e7fba64676dce91d432ac1acee457b97c3c7647a08c10516e/blended-tiling-0.0.1.dev3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1.dev4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "76506795ccdb7020ca860ccdbe2ba4a2e0492222c5c184eabc2e5ff41b03855b",
          "md5": "a6b8ad0d2f4d154fda4db8c48dc1cf26",
          "sha256": "bffcf20fb6593b3bf47256cc51894534f47ac6955a534864865f06f9aa23deba"
        },
        "downloads": -1,
        "filename": "blended_tiling-0.0.1.dev4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a6b8ad0d2f4d154fda4db8c48dc1cf26",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 9570,
        "upload_time": "2022-06-17T19:49:59",
        "upload_time_iso_8601": "2022-06-17T19:49:59.311065Z",
        "url": "https://files.pythonhosted.org/packages/76/50/6795ccdb7020ca860ccdbe2ba4a2e0492222c5c184eabc2e5ff41b03855b/blended_tiling-0.0.1.dev4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7c4c1290ec9b70d1fe9e4cec9112293ff8adad96310416e3c6287a3df3ed24fb",
          "md5": "632ca2bed151047e3a04bb6fd4f3ae93",
          "sha256": "163c290f43aeec90728ac2427b05db9d900dab3e7026521e8c0ad96970fc28d5"
        },
        "downloads": -1,
        "filename": "blended-tiling-0.0.1.dev4.tar.gz",
        "has_sig": false,
        "md5_digest": "632ca2bed151047e3a04bb6fd4f3ae93",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11815,
        "upload_time": "2022-06-17T19:50:01",
        "upload_time_iso_8601": "2022-06-17T19:50:01.353427Z",
        "url": "https://files.pythonhosted.org/packages/7c/4c/1290ec9b70d1fe9e4cec9112293ff8adad96310416e3c6287a3df3ed24fb/blended-tiling-0.0.1.dev4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1.dev5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "192b2ccf2cdefa298e77f3aea156ad144fe295ce108d2188b38a2d5cd5603ab2",
          "md5": "1d1852da74963aa17e309588179cc07b",
          "sha256": "a0d889af66541f157c64fa876fc00b1604f1bb238db7da84d90aec1c0d17ff0a"
        },
        "downloads": -1,
        "filename": "blended_tiling-0.0.1.dev5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1d1852da74963aa17e309588179cc07b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10036,
        "upload_time": "2022-06-19T00:20:04",
        "upload_time_iso_8601": "2022-06-19T00:20:04.042582Z",
        "url": "https://files.pythonhosted.org/packages/19/2b/2ccf2cdefa298e77f3aea156ad144fe295ce108d2188b38a2d5cd5603ab2/blended_tiling-0.0.1.dev5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "67644354200f111cfe737cea3a93096b735543aa3d6908122069237dc096ac19",
          "md5": "621230a77b8e05cb84b3cf278cdda5ef",
          "sha256": "d8242928cb94df92c0b54475f5b2159ae904412d5622a06019f80a3116414c4e"
        },
        "downloads": -1,
        "filename": "blended-tiling-0.0.1.dev5.tar.gz",
        "has_sig": false,
        "md5_digest": "621230a77b8e05cb84b3cf278cdda5ef",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12582,
        "upload_time": "2022-06-19T00:20:06",
        "upload_time_iso_8601": "2022-06-19T00:20:06.097793Z",
        "url": "https://files.pythonhosted.org/packages/67/64/4354200f111cfe737cea3a93096b735543aa3d6908122069237dc096ac19/blended-tiling-0.0.1.dev5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1.dev6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "580d207e9e9233b43beb2e184e67cd7943e3bbe6c416c7210bb7f4d05d1f24e9",
          "md5": "af697e57ae866143eb4f2e4ef7310c5f",
          "sha256": "357f9d9ece124b16081f8d898d7ecc3d749dca315b799027ba7e62b48c5e989a"
        },
        "downloads": -1,
        "filename": "blended_tiling-0.0.1.dev6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "af697e57ae866143eb4f2e4ef7310c5f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10411,
        "upload_time": "2022-06-25T15:27:14",
        "upload_time_iso_8601": "2022-06-25T15:27:14.628395Z",
        "url": "https://files.pythonhosted.org/packages/58/0d/207e9e9233b43beb2e184e67cd7943e3bbe6c416c7210bb7f4d05d1f24e9/blended_tiling-0.0.1.dev6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7787b1970a310c8bcef34efd01201d9144939885d87cf61242ee6fed484f2221",
          "md5": "96bd1307079b622b87ee575e2e79981a",
          "sha256": "30c70722a8d6e21d79d48deb78ed809f056ee29708264278d446db4bbc921e66"
        },
        "downloads": -1,
        "filename": "blended-tiling-0.0.1.dev6.tar.gz",
        "has_sig": false,
        "md5_digest": "96bd1307079b622b87ee575e2e79981a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13189,
        "upload_time": "2022-06-25T15:27:16",
        "upload_time_iso_8601": "2022-06-25T15:27:16.756445Z",
        "url": "https://files.pythonhosted.org/packages/77/87/b1970a310c8bcef34efd01201d9144939885d87cf61242ee6fed484f2221/blended-tiling-0.0.1.dev6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "580d207e9e9233b43beb2e184e67cd7943e3bbe6c416c7210bb7f4d05d1f24e9",
        "md5": "af697e57ae866143eb4f2e4ef7310c5f",
        "sha256": "357f9d9ece124b16081f8d898d7ecc3d749dca315b799027ba7e62b48c5e989a"
      },
      "downloads": -1,
      "filename": "blended_tiling-0.0.1.dev6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "af697e57ae866143eb4f2e4ef7310c5f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 10411,
      "upload_time": "2022-06-25T15:27:14",
      "upload_time_iso_8601": "2022-06-25T15:27:14.628395Z",
      "url": "https://files.pythonhosted.org/packages/58/0d/207e9e9233b43beb2e184e67cd7943e3bbe6c416c7210bb7f4d05d1f24e9/blended_tiling-0.0.1.dev6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7787b1970a310c8bcef34efd01201d9144939885d87cf61242ee6fed484f2221",
        "md5": "96bd1307079b622b87ee575e2e79981a",
        "sha256": "30c70722a8d6e21d79d48deb78ed809f056ee29708264278d446db4bbc921e66"
      },
      "downloads": -1,
      "filename": "blended-tiling-0.0.1.dev6.tar.gz",
      "has_sig": false,
      "md5_digest": "96bd1307079b622b87ee575e2e79981a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 13189,
      "upload_time": "2022-06-25T15:27:16",
      "upload_time_iso_8601": "2022-06-25T15:27:16.756445Z",
      "url": "https://files.pythonhosted.org/packages/77/87/b1970a310c8bcef34efd01201d9144939885d87cf61242ee6fed484f2221/blended-tiling-0.0.1.dev6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}