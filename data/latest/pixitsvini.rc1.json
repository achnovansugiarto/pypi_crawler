{
  "info": {
    "author": "Joao Carlos",
    "author_email": "joao-mostela@hotmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Pix QRCode - Python\n\n#### Versao: __1.0__\n\nBiblioteca para a geração de codigos QR (BRCode como chamados na documentação do BACEN) a fins de facilitar a exibição para pagamentos ao consumidor.\n\n## O que é pix\n\n_Pix é o meio de pagamento eletrônico instantâneo, gratuito e com segurança, do Brasil. A iniciação de um Pix para uma pessoa física é gratuita._ [Wikipedia](https://pt.wikipedia.org/wiki/Pix)\n\n\n## Isenção de responsabilidade\n\nOs QR codes não foram testados aos bancos, sempre antes de transferir verifique se as informações estão corretas. O autor e contribuidores se isenta de qualquer responsabilidade pela exatidão e integridade das informações divulgada.\n\n\n## Documentação de implementação BACEN - Banco Central do Brasil\n\n[Manual BRCode](https://www.bcb.gov.br/content/estabilidadefinanceira/spb_docs/ManualBRCode.pdf)\n\n[Especificações técnicas e de negócio do ecossistema de pagamentos instantâneos brasileiro](https://www.bcb.gov.br/content/estabilidadefinanceira/forumpireunioes/Documento%20de%20especifica%C3%A7%C3%B5es%20-%20vers%C3%A3o%205-0.pdf)\n\n[Github Bacen](https://github.com/bacen)\n\n**NÃO EXISTE NENHUMA INTEGRAÇÃO COM BANCOS**\n\n---\n\n## Exemplo basico\n\nImporte a biblioteca do pip `pip install pixqrcode`\n\nImporte a classe `from pixqrcode import PixQrCode` e defina os parametros como abaixo\n\nObrigatorio\n\n* name = Nome do destinatario\n* mobile (Chave PIX) = Telefone do destinatario _Em Breve mais chaves_\n* city = Cidade de remetente\n\n\nOpcional\n\n* amount = Valor a ser enviado\n    \n    Valores serão sempre contados com 3 casas decimais e tem todos os digitos não numericos removidos, exemplos abaixo\n    \n    * R$ 1,00 = 100\n    * R$ 10,00 = 1000\n    \n* reference_label = Código da transferência. Codigo não obrigatorio mais pode auxiliar em casos como ecommerce e vendas diretas por Pix\n\n\n\n    `pix = PixQrCode(\"Fulano De Tal\", \"(70) 97070-7070\", \"Brasilia\", \"100\")`\n\n\n### Retorno do QRCode e codigo BRCode\n\nseguimos com o objeto de cima definido iremos chamar os metodos e suas funções\n\n\n#### Metodos\n\n\n### `is_valid()`\n\nVerifica se todos os campos inseridos são validos e pode seguir com a geração do QRCode. Retorna um valor boolean\n\n\n### `export_base64()`\n\nRetorna direto em formato base64 tipo imagem PNG (Portable Network Grapich) para ser renderizado dentro de uma tag img HTML ou ser transportado por uma API e demais usos.\n\n\n    pix.export_base64()\n    \n    <img src='{pix_image}' alt='qrcode pagamento'/>\n\n\n\n### `save_qrcode(folder, filename, **kwargs)`\n\n    pix.save_qrcode(\"/pixs\",\"pix-fulano\")\n\nCaso queira você pode salvar o codigo gerado em uma pasta com um nome especifico para ter o codigo. **Não precisa especificar o formato do arquivo sempre será PNG**\n\nPode retornar o valor dentro BufferIO para ser novamente processado.\n\nA geração do QRCode é feita com a biblioteca [Pillow](https://pillow.readthedocs.io/en/stable/) então você pode utilizar para deixar seu QRCode ainda mais personalizado passando os parametros por **kwargs\n\n\n\n### `generate_code()`\n\nIrá retornar a string com a qual foi gerado o QRCode contendo os valores todos em suas posições como descrito na documentação do BACEN\n\n\n\n## [Exemplos](./examples)\n\nContem mais exemplos para facilitar a sua implementação\n\n1. [API](./examples/API/api.py) [Dockerfile - port 8000](./examples/API/Dockerfile)\n1. [Console](./examples/console/console_example.py)\n\nEm breve mais...\n\n#### Toda contribuição é bem vinda!\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/itzvini/pix-qrcode",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pixitsvini",
    "package_url": "https://pypi.org/project/pixitsvini/",
    "platform": null,
    "project_url": "https://pypi.org/project/pixitsvini/",
    "project_urls": {
      "Homepage": "https://github.com/itzvini/pix-qrcode"
    },
    "release_url": "https://pypi.org/project/pixitsvini/1.0.0/",
    "requires_dist": [
      "qrcode"
    ],
    "requires_python": "",
    "summary": "QRCode Pix for python",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15103739,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "004184915167e129226508c49a8c030a9bfeead91050f128f8b7614195f12822",
          "md5": "afe6b7888f8a077604c1e1649c9cfa14",
          "sha256": "cc0bd18ba530af912ff9bab22545f4044ca4241b112c738aa53fa6f66902fb56"
        },
        "downloads": -1,
        "filename": "pixitsvini-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "afe6b7888f8a077604c1e1649c9cfa14",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9059,
        "upload_time": "2022-09-15T11:37:00",
        "upload_time_iso_8601": "2022-09-15T11:37:00.059705Z",
        "url": "https://files.pythonhosted.org/packages/00/41/84915167e129226508c49a8c030a9bfeead91050f128f8b7614195f12822/pixitsvini-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "54c4e6ea1bb6d6ae1f7447eb8c42447d14848bfc0f4b321aa73d6629469e30bc",
          "md5": "988ac05e2d944863e919859acebb763a",
          "sha256": "52eec940c08d5132f651020eadb9b6ede699a07c77614981761d43b6fe90417f"
        },
        "downloads": -1,
        "filename": "pixitsvini-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "988ac05e2d944863e919859acebb763a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7688,
        "upload_time": "2022-09-15T11:37:01",
        "upload_time_iso_8601": "2022-09-15T11:37:01.626456Z",
        "url": "https://files.pythonhosted.org/packages/54/c4/e6ea1bb6d6ae1f7447eb8c42447d14848bfc0f4b321aa73d6629469e30bc/pixitsvini-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "004184915167e129226508c49a8c030a9bfeead91050f128f8b7614195f12822",
        "md5": "afe6b7888f8a077604c1e1649c9cfa14",
        "sha256": "cc0bd18ba530af912ff9bab22545f4044ca4241b112c738aa53fa6f66902fb56"
      },
      "downloads": -1,
      "filename": "pixitsvini-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "afe6b7888f8a077604c1e1649c9cfa14",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 9059,
      "upload_time": "2022-09-15T11:37:00",
      "upload_time_iso_8601": "2022-09-15T11:37:00.059705Z",
      "url": "https://files.pythonhosted.org/packages/00/41/84915167e129226508c49a8c030a9bfeead91050f128f8b7614195f12822/pixitsvini-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "54c4e6ea1bb6d6ae1f7447eb8c42447d14848bfc0f4b321aa73d6629469e30bc",
        "md5": "988ac05e2d944863e919859acebb763a",
        "sha256": "52eec940c08d5132f651020eadb9b6ede699a07c77614981761d43b6fe90417f"
      },
      "downloads": -1,
      "filename": "pixitsvini-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "988ac05e2d944863e919859acebb763a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7688,
      "upload_time": "2022-09-15T11:37:01",
      "upload_time_iso_8601": "2022-09-15T11:37:01.626456Z",
      "url": "https://files.pythonhosted.org/packages/54/c4/e6ea1bb6d6ae1f7447eb8c42447d14848bfc0f4b321aa73d6629469e30bc/pixitsvini-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}