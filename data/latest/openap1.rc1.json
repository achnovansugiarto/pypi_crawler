{
  "info": {
    "author": "Ashrith Appani",
    "author_email": "ashrith.appani@rockwellcollins.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "Open Aircraft Performance Model (OpenAP) Toolkit\n========================================================================\n\nThis repository contains all OpenAP databases and a Python implementation which facilitates the data access and aircraft performance computation.\n\n[Download the related research paper](https://www.researchgate.net/publication/332013573_OpenAP_The_open-source_aircraft_performance_model_and_associated_toolkit)\n\nDatabases:\n---------\n\n  - Aircraft\n  - Engines\n  - Drag polar\n  - Kinematic ([WRAP](https://github.com/junzis/wrap))\n  - Navigation\n\n\nInstall\n-------\n\nTo install latest version from the GitHub:\n\n```sh\npip install git+https://github.com/junzis/openap\n```\n\n\nLibraries\n---------\n\n  - `prop`: aircraft and engine properties\n  - `thrust`: model to compute aircraft thrust\n  - `drag`: model to compute aircraft drag\n  - `fuel`: model to compute fuel consumption\n  - `kinematic`: a utility library to access WRAP data\n  - `aero`: common aeronautical conversions\n  - `nav`: model to access navigation information\n  - `segment`: a utility library to determine climb, cruise, descent, level flight\n  - `phase`: a wrapper around `segment`, providing identification of all flight phases\n  - `traj`: package contains a set of tools related with trajectory generation\n\nExamples\n--------\n\nGet the aircraft and engine data:\n\n```python\nfrom openap import prop\n\naircraft = prop.aircraft('A320')\nengine = prop.engine('CFM56-5B4')\n```\n\nCompute maximum aircraft engine thrust:\n\n```python\nfrom openap import Thrust\n\nthrust = Thrust(ac='A320', eng='CFM56-5B4')\n\nT = thrust.takeoff(tas=100, alt=0)\nT = thrust.climb(tas=200, alt=20000, roc=1000)\nT = thrust.cruise(tas=230, alt=32000)\n```\n\nCompute the aircraft drag:\n\n```python\nfrom openap import Drag\n\ndrag = Drag(ac='A320')\n\nD = drag.clean(mass=60000, tas=200, alt=20000, path_angle=5)\nD = drag.nonclean(mass=60000, tas=150, alt=100, flap_angle=20,\n                  path_angle=10, landing_gear=True)\n```\n\nCompute the fuel flow:\n\n```python\nfrom openap import FuelFlow\n\nff = FuelFlow(ac='A320', eng='CFM56-5B4')\n\nFF = ff.at_thrust(thr=50000, alt=30000)\nFF = ff.takeoff(tas=100, alt=0, throttle=1)\nFF = ff.enroute(mass=60000, tas=200, alt=20000, path_angle=3)\nFF = ff.enroute(mass=60000, tas=230, alt=32000, path_angle=0)\n```\n\nAccessing the WRAP parameters:\n\n```python\nfrom openap import WRAP\n\nwrap = WRAP(ac='A320')\n\nparam = wrap.takeoff_speed()\nparam = wrap.takeoff_distance()\nparam = wrap.takeoff_acceleration()\nparam = wrap.initclimb_vcas()\nparam = wrap.initclimb_vs()\nparam = wrap.climb_range()\nparam = wrap.climb_const_vcas()\nparam = wrap.climb_const_mach()\nparam = wrap.climb_cross_alt_concas()\nparam = wrap.climb_cross_alt_conmach()\nparam = wrap.climb_vs_pre_concas()\nparam = wrap.climb_vs_concas()\nparam = wrap.climb_vs_conmach()\nparam = wrap.cruise_range()\nparam = wrap.cruise_alt()\nparam = wrap.cruise_init_alt()\nparam = wrap.cruise_mach()\nparam = wrap.descent_range()\nparam = wrap.descent_const_mach()\nparam = wrap.descent_const_vcas()\nparam = wrap.descent_cross_alt_conmach()\nparam = wrap.descent_cross_alt_concas()\nparam = wrap.descent_vs_conmach()\nparam = wrap.descent_vs_concas()\nparam = wrap.descent_vs_post_concas()\nparam = wrap.finalapp_vcas()\nparam = wrap.finalapp_vs()\nparam = wrap.landing_speed()\nparam = wrap.landing_distance()\nparam = wrap.landing_acceleration()\n```\n\nGenerating trajectories\n\n\n```python\nfrom openap.traj import Generator\n\ntrajgen = Generator(ac='a320')\n\ntrajgen.enable_noise()   # enable Gaussian noise in trajectory data\n\ndata_cl = trajgen.climb(dt=10, random=True)  # using radom paramerters\ndata_cl = trajgen.climb(dt=10, cas_const_cl=280, mach_const_cl=0.78, alt_cr=35000)\n\ndata_de = trajgen.descent(dt=10, random=True)\ndata_de = trajgen.descent(dt=10, cas_const_de=280, mach_const_de=0.78, alt_cr=35000)\n\ndata_cr = trajgen.cruise(dt=60, random=True)\ndata_cr = trajgen.cruise(dt=60, range_cr=2000, alt_cr=35000, m_cr=0.78)\n\ndata_all = trajgen.complete(dt=10, random=True)\ndata_all = trajgen.complete(dt=10, alt_cr=35000, m_cr=0.78,\n                            cas_const_cl=280, mach_const_cl=0.78,\n                            cas_const_de=280, mach_const_de=0.78)\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "OpenAP,Open Aircraft Performance,Open Data",
    "license": "GNU GPL v3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "openap1",
    "package_url": "https://pypi.org/project/openap1/",
    "platform": "",
    "project_url": "https://pypi.org/project/openap1/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/openap1/1.0.dev1/",
    "requires_dist": [
      "numpy",
      "scipy",
      "scikit-fuzzy",
      "pandas",
      "pyyaml"
    ],
    "requires_python": "",
    "summary": "Open Aircraft Performance Model (OpenAP) in Python",
    "version": "1.0.dev1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6821551,
  "releases": {
    "1.0.dev1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "911d8bce4ed97cd9bb88bf28fd538a1dc5d8a1f5c3d6630949bd30fd4146fcad",
          "md5": "db1e070c8af62d5f682e41a824de1533",
          "sha256": "acd819673f4329d33ed148d412929f19a8f4c334504eaeb3b91162e74c067f29"
        },
        "downloads": -1,
        "filename": "openap1-1.0.dev1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "db1e070c8af62d5f682e41a824de1533",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 2658303,
        "upload_time": "2020-03-16T14:06:55",
        "upload_time_iso_8601": "2020-03-16T14:06:55.679039Z",
        "url": "https://files.pythonhosted.org/packages/91/1d/8bce4ed97cd9bb88bf28fd538a1dc5d8a1f5c3d6630949bd30fd4146fcad/openap1-1.0.dev1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f3475a91669e726d477722dbd1305adc91ce897dec90f8b09820c21b15354bf2",
          "md5": "9d13cfbffc7e5dcd7407bbd26a3bcfbd",
          "sha256": "3779967da1e9ec13b2241d1bfb5792f0fb424e76d6be88fd447b5b393217c806"
        },
        "downloads": -1,
        "filename": "openap1-1.0.dev1.tar.gz",
        "has_sig": false,
        "md5_digest": "9d13cfbffc7e5dcd7407bbd26a3bcfbd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2602628,
        "upload_time": "2020-03-16T14:06:59",
        "upload_time_iso_8601": "2020-03-16T14:06:59.766152Z",
        "url": "https://files.pythonhosted.org/packages/f3/47/5a91669e726d477722dbd1305adc91ce897dec90f8b09820c21b15354bf2/openap1-1.0.dev1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "911d8bce4ed97cd9bb88bf28fd538a1dc5d8a1f5c3d6630949bd30fd4146fcad",
        "md5": "db1e070c8af62d5f682e41a824de1533",
        "sha256": "acd819673f4329d33ed148d412929f19a8f4c334504eaeb3b91162e74c067f29"
      },
      "downloads": -1,
      "filename": "openap1-1.0.dev1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "db1e070c8af62d5f682e41a824de1533",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 2658303,
      "upload_time": "2020-03-16T14:06:55",
      "upload_time_iso_8601": "2020-03-16T14:06:55.679039Z",
      "url": "https://files.pythonhosted.org/packages/91/1d/8bce4ed97cd9bb88bf28fd538a1dc5d8a1f5c3d6630949bd30fd4146fcad/openap1-1.0.dev1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f3475a91669e726d477722dbd1305adc91ce897dec90f8b09820c21b15354bf2",
        "md5": "9d13cfbffc7e5dcd7407bbd26a3bcfbd",
        "sha256": "3779967da1e9ec13b2241d1bfb5792f0fb424e76d6be88fd447b5b393217c806"
      },
      "downloads": -1,
      "filename": "openap1-1.0.dev1.tar.gz",
      "has_sig": false,
      "md5_digest": "9d13cfbffc7e5dcd7407bbd26a3bcfbd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 2602628,
      "upload_time": "2020-03-16T14:06:59",
      "upload_time_iso_8601": "2020-03-16T14:06:59.766152Z",
      "url": "https://files.pythonhosted.org/packages/f3/47/5a91669e726d477722dbd1305adc91ce897dec90f8b09820c21b15354bf2/openap1-1.0.dev1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}