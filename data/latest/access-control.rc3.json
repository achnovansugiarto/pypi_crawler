{
  "info": {
    "author": "Marc Rijken",
    "author_email": "marc@rijken.org",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Access Control\n\nWith `access-control` you can manage access control list to check\nwether a principal has access to a context with a certain permission.\n\n## Concepts\n\n### ACL (Access Control List)\n\nAn *ACL* is an ordered list of *ACE* (Access Control Entry). Every *Context* \nhas an *ACL*.\n\n### ACE (Access Control Entry)\n\nAn *ACE* consists of:\n- a *Permit*\n- a *Principal*\n- a *Permission*\n\n### Principal\n\nA *Principal* represents an entity, typically a user or group.\nThis means that a typical user can have multiple principals, like `everyone`,\n`userid:1234` and `group:admin`.\n\n### Permit\n\nThe *Permit* is either ALLOW or DENY. This means that you can specify in the\n*ACE* that a *Principal* has either to be denied of allowed access to the\n*Context*.\n\n### Context\n\nThe *Context* is a resource, like a page on a website, including the context of\nthat resource, like the folders in which the page is located.\nEvery context has an *ACL*.\n\n### Permission\n\nThe *Permission* is the action like `view`, `change name`, `create user` on the *Context*.\n\n### Matching\n\nTo get the *Permit* for a combination of *Context*, *Principal* and *Permission*,\nthe *ACL* of the context will be looked up (in the specified order). When there is\na match (based on *Principal* and *Permission*), the specified *Permit* (DENY\nor ALLOW) is returned. When there is no match, the first match with *ACL* of the \nparent (like folders) will be returned.\nWhen there is still no match, a DENY will be returned.\n\n## Example\n\n    >>> import access_control as ac\n    >>> from typing import Optional\n\n    Create some principals, next to the predefined ac.principal.everyone\n    and ac.principal.authenticated.\n\n    >>> user_1 = ac.principal.Principal('user:1')\n    >>> group_admin = ac.principal.Principal('group:admin')\n\n    Create some context. You can use predefined ObjectContext which can make a context \n    from any object.\n\n    >>> class Page():\n    ...     def __init__(self, name: str, parent: Optional[\"Page\"]):\n    ...         self.name = name\n    ...         self.parent = parent\n\n    >>> root_page = Page('root', None)\n    >>> contact_page = Page('contact', root_page)\n\n    >>> context_contact_page = ac.context.ObjectContext(contact_page)\n    >>> context_root = ac.context.ObjectContext(root_page)\n\n    Create permissions. For the contact page you can define a view and an edit permission\n\n    >>> view_permission = ac.permission.Permission('view')\n    >>> edit_permission = ac.permission.Permission('edit')\n\n    Next we need to glue them together in acls.\n    The context has a `acl` attribute which has the acl of the context *and* the parents of \n    the context. A subscription_list of the `subscribe` package will be used to\n    get the acl of a certain context. You can subscribe one or more functions to \n    a subscription_list of the context. All acls will be combined in the order\n    of the subscription_list.\n\n    Only the admins can edit the page.\n\n    >>> @context_contact_page.acl_subscription_list.subscribe()\n    ... def get_acl(context):\n    ...     return [ac.acl.ACE(ac.permit.Permit.ALLOW, group_admin, edit_permission)]\n\n    And everyone can view everything.\n\n    >>> @context_root.acl_subscription_list.subscribe()\n    ... def get_acl(context):\n    ...     return [ac.acl.ACE(ac.permit.Permit.ALLOW, ac.principal.everyone, view_permission)]\n    \n    When a user want to access the page for edit, we can ask whether the user is allowed.\n    Therefor we need to know the principals of that user.\n\n    >>> unauthenticated_user_principals = [ac.principal.everyone]\n    >>> admin_user_princpals = {ac.principal.everyone, ac.principal.authenticated, user_1, group_admin}\n\n    Both users can access the root and contact page with view permission\n\n    >>> ac.context.get_permit(context_contact_page, admin_user_princpals, view_permission) == ac.permit.Permit.ALLOW\n    True\n    >>> ac.context.get_permit(context_root, admin_user_princpals, view_permission) == ac.permit.Permit.ALLOW\n    True\n    >>> ac.context.get_permit(context_contact_page, unauthenticated_user_principals, view_permission) == ac.permit.Permit.ALLOW\n    True\n    >>> ac.context.get_permit(context_root, unauthenticated_user_principals, view_permission) == ac.permit.Permit.ALLOW\n    True\n\n\n    The unauthenticated user has no edit permission to the contact page\n\n    >>> ac.context.get_permit(context_contact_page, unauthenticated_user_principals, edit_permission) == ac.permit.Permit.DENY\n    True\n\n    The admin user does have access\n\n    >>> ac.context.get_permit(context_contact_page, admin_user_princpals, edit_permission) == ac.permit.Permit.ALLOW\n    True\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mrijken/access_control",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "access-control",
    "package_url": "https://pypi.org/project/access-control/",
    "platform": "",
    "project_url": "https://pypi.org/project/access-control/",
    "project_urls": {
      "Homepage": "https://github.com/mrijken/access_control",
      "Repository": "https://github.com/mrijken/access_control"
    },
    "release_url": "https://pypi.org/project/access-control/0.3.0/",
    "requires_dist": [
      "subscribe (>=0.5.0)"
    ],
    "requires_python": ">=3.6,<4.0",
    "summary": "Library for access control lists",
    "version": "0.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10567280,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "717a905aff683e909ea2f39f13e3d415ded4201280d58b0e5b3dd9c327440957",
          "md5": "07ae9a28606800d4cf1d5568efaaa5f9",
          "sha256": "8e6452becdbb0c30876711286bff0e7ed1af4bbeb7163779aa29af84c01ec245"
        },
        "downloads": -1,
        "filename": "access_control-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "07ae9a28606800d4cf1d5568efaaa5f9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 5361,
        "upload_time": "2021-05-28T21:42:57",
        "upload_time_iso_8601": "2021-05-28T21:42:57.053393Z",
        "url": "https://files.pythonhosted.org/packages/71/7a/905aff683e909ea2f39f13e3d415ded4201280d58b0e5b3dd9c327440957/access_control-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e74cfc08ac4c5d8199fc641d271b44050235b207ceec44e6267554546209c514",
          "md5": "474522bb95bf400d0aa924c20e27a107",
          "sha256": "f6e769cd4889b60e0e16c452ababb6e67df8e046a68da13d6a38688cf1f810ab"
        },
        "downloads": -1,
        "filename": "access_control-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "474522bb95bf400d0aa924c20e27a107",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4.0",
        "size": 4886,
        "upload_time": "2021-05-28T21:42:58",
        "upload_time_iso_8601": "2021-05-28T21:42:58.077119Z",
        "url": "https://files.pythonhosted.org/packages/e7/4c/fc08ac4c5d8199fc641d271b44050235b207ceec44e6267554546209c514/access_control-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "69bca35d5074a68d24877dce5fce491658ec8b397fc8a73a761e115b3bd95275",
          "md5": "97ddce07fbe78e9af85b87f8a603f6ae",
          "sha256": "b7bb5a280c139953479c14d5fecaca3b7c8a6a2ae2a48e6bc342084e45c22293"
        },
        "downloads": -1,
        "filename": "access_control-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "97ddce07fbe78e9af85b87f8a603f6ae",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 5304,
        "upload_time": "2021-06-03T00:08:04",
        "upload_time_iso_8601": "2021-06-03T00:08:04.578657Z",
        "url": "https://files.pythonhosted.org/packages/69/bc/a35d5074a68d24877dce5fce491658ec8b397fc8a73a761e115b3bd95275/access_control-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c6e81a75b39a1a11b273a78b86312b1d44520c0f0906a005f91c20581d674caf",
          "md5": "d359e9219d4779497be979b7356fab3c",
          "sha256": "9106e4cf94055d169f82db14aa7f826ee6a2255437751a6d88b7f8c6da1fa967"
        },
        "downloads": -1,
        "filename": "access_control-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d359e9219d4779497be979b7356fab3c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4.0",
        "size": 4823,
        "upload_time": "2021-06-03T00:08:05",
        "upload_time_iso_8601": "2021-06-03T00:08:05.748888Z",
        "url": "https://files.pythonhosted.org/packages/c6/e8/1a75b39a1a11b273a78b86312b1d44520c0f0906a005f91c20581d674caf/access_control-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e462990fcef5906e6c87f1a8451c5b7c4a7e895709499b53bff4a253e95c795b",
          "md5": "e90e2e0a00be1c3767b55bd7c9b6d5eb",
          "sha256": "6383babb7c6a2b74e1fb4e3a60857d8643472be3ee9ed72246c91b3a95a72581"
        },
        "downloads": -1,
        "filename": "access_control-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e90e2e0a00be1c3767b55bd7c9b6d5eb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 5448,
        "upload_time": "2021-06-05T23:01:29",
        "upload_time_iso_8601": "2021-06-05T23:01:29.726621Z",
        "url": "https://files.pythonhosted.org/packages/e4/62/990fcef5906e6c87f1a8451c5b7c4a7e895709499b53bff4a253e95c795b/access_control-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "200b3f0716825929e50692cd147a5527daf98859c4855a49e09f15679f595fcc",
          "md5": "7ddc853b82b1e6e5c6d079fa9ab1557c",
          "sha256": "d357f3cdaa13b6c858c9a61da009804b41db235c5b5f632976f8e3fefa05cb29"
        },
        "downloads": -1,
        "filename": "access_control-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7ddc853b82b1e6e5c6d079fa9ab1557c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4.0",
        "size": 5225,
        "upload_time": "2021-06-05T23:01:30",
        "upload_time_iso_8601": "2021-06-05T23:01:30.701264Z",
        "url": "https://files.pythonhosted.org/packages/20/0b/3f0716825929e50692cd147a5527daf98859c4855a49e09f15679f595fcc/access_control-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e462990fcef5906e6c87f1a8451c5b7c4a7e895709499b53bff4a253e95c795b",
        "md5": "e90e2e0a00be1c3767b55bd7c9b6d5eb",
        "sha256": "6383babb7c6a2b74e1fb4e3a60857d8643472be3ee9ed72246c91b3a95a72581"
      },
      "downloads": -1,
      "filename": "access_control-0.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e90e2e0a00be1c3767b55bd7c9b6d5eb",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6,<4.0",
      "size": 5448,
      "upload_time": "2021-06-05T23:01:29",
      "upload_time_iso_8601": "2021-06-05T23:01:29.726621Z",
      "url": "https://files.pythonhosted.org/packages/e4/62/990fcef5906e6c87f1a8451c5b7c4a7e895709499b53bff4a253e95c795b/access_control-0.3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "200b3f0716825929e50692cd147a5527daf98859c4855a49e09f15679f595fcc",
        "md5": "7ddc853b82b1e6e5c6d079fa9ab1557c",
        "sha256": "d357f3cdaa13b6c858c9a61da009804b41db235c5b5f632976f8e3fefa05cb29"
      },
      "downloads": -1,
      "filename": "access_control-0.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "7ddc853b82b1e6e5c6d079fa9ab1557c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6,<4.0",
      "size": 5225,
      "upload_time": "2021-06-05T23:01:30",
      "upload_time_iso_8601": "2021-06-05T23:01:30.701264Z",
      "url": "https://files.pythonhosted.org/packages/20/0b/3f0716825929e50692cd147a5527daf98859c4855a49e09f15679f595fcc/access_control-0.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}