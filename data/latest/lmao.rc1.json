{
  "info": {
    "author": "",
    "author_email": "Yash Bonde <bonde.yash97@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Dainik\n\n`Dainik` is a client library for NimbleBox.ai LMAO (Logging, Monitoring, Alerts and Observability) service.\n\n## Usage\n\n```python\nfrom dainik import Dainik\n\n# initialise the client object\ndk = Dainik()\n\n# initialise the run\ndk.init(\n  \"california\",\n  config = {\n    \"model_name\": \"qual\",\n    \"config\": {\n      \"batch_size\": 32,\n      \"n_steps\": n_steps,\n      \"optimizer\": \"adam\",\n    }\n  },\n)\n\nfor epoch in range(10):\n  log = {\n    \"loss\": 1 / epoch,\n    \"accuracy\": epoch,\n  }\n  dk.log(log, step = epoch)\n\n  # optionally log metrics directly\n  dk.metrics.f1_score(\n    x = [[1, 2, 3]],\n    y = [[1, 2, 1]],\n    step = epoch\n  )\n\n  # log files for tracking as well, wildcards work as well!\n  dk.save_files([f\"./checkpoint-{epoch}/*\"])\n\ndk.end() # send signal to sleep\n```\n\n## Dev\n\nDue to the current structure the source code for this is only available for NimbleBox.ai engineers. This is spun out of a much larger monorepo which contains the logic for server and client together which helps us work on this faster. \n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lmao",
    "package_url": "https://pypi.org/project/lmao/",
    "platform": null,
    "project_url": "https://pypi.org/project/lmao/",
    "project_urls": {
      "Homepage": "https://github.com/NimbleBoxAI/nbox"
    },
    "release_url": "https://pypi.org/project/lmao/1.18/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Client library for working with NimbleBox LMAO",
    "version": "1.18",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14744637,
  "releases": {
    "1.18": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5df831dd090edcdbb04e6a7d30e341c25cb1c05edc72b4f69b555f7fa28b2661",
          "md5": "6dcf5989e728fd20d187aa40c927ab59",
          "sha256": "4ce42ac163b33477539d87fa3f7569f5492cb6152528503a0e60853ef0315264"
        },
        "downloads": -1,
        "filename": "lmao-1.18.tar.gz",
        "has_sig": false,
        "md5_digest": "6dcf5989e728fd20d187aa40c927ab59",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 16490,
        "upload_time": "2022-08-12T21:55:20",
        "upload_time_iso_8601": "2022-08-12T21:55:20.636656Z",
        "url": "https://files.pythonhosted.org/packages/5d/f8/31dd090edcdbb04e6a7d30e341c25cb1c05edc72b4f69b555f7fa28b2661/lmao-1.18.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5df831dd090edcdbb04e6a7d30e341c25cb1c05edc72b4f69b555f7fa28b2661",
        "md5": "6dcf5989e728fd20d187aa40c927ab59",
        "sha256": "4ce42ac163b33477539d87fa3f7569f5492cb6152528503a0e60853ef0315264"
      },
      "downloads": -1,
      "filename": "lmao-1.18.tar.gz",
      "has_sig": false,
      "md5_digest": "6dcf5989e728fd20d187aa40c927ab59",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 16490,
      "upload_time": "2022-08-12T21:55:20",
      "upload_time_iso_8601": "2022-08-12T21:55:20.636656Z",
      "url": "https://files.pythonhosted.org/packages/5d/f8/31dd090edcdbb04e6a7d30e341c25cb1c05edc72b4f69b555f7fa28b2661/lmao-1.18.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}