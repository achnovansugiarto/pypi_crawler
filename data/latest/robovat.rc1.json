{
  "info": {
    "author": "Kuan Fang",
    "author_email": "kuanfang@ai.stanford.edu",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "\n# RoboVat\n\n[About](#about)  \n[Installation](#installation)  \n[Examples](#examples)  \n[Citation](#citation)  \n\n## About\n\nRoboVat is a tookit for fast development of robotic task environments in simulation and the real world. It provides unified APIs for robot control and perception to bridge the reality gap. Its name is derived from [<em>brain in a vat</em>](https://en.wikipedia.org/wiki/Brain_in_a_vat).\n\nCurrently, RoboVat supports [Sawyer](https://www.rethinkrobotics.com/sawyer) robot via [Intera SDK](https://github.com/RethinkRobotics/intera_sdk). The simulatied environments run with [PyBullet](https://github.com/bulletphysics/bullet3/). The codebase is under active development and more environments will be included in the future.\n\n<p align=\"center\"><img width=\"80%\" src=\"docs/push_env.png\" /></p>\n\n## Installation\n\n1. **Create a virtual environment (recommended)** \n\n\tCreate a new virtual environment in the root directory or anywhere else:\n\t```bash\n\tvirtualenv --system-site-packages -p python .venv\n\t```\n\n\tActivate the virtual environment every time before you use the package:\n\t```bash\n\tsource .venv/bin/activate\n\t```\n\n\tAnd exit the virtual environment when you are done:\n\t```bash\n\tdeactivate\n\t```\n\n2. **Install the package** \n\n  Using pip to install the package:\n\t```bash\n\tpip install robovat\n\t```\n\n\tThe package can also be installed by running:\n\t```bash\n\tpython setup.py install\n\t```\n\n3. **Download assets** \n\n\tDownload and unzip the assets folder from [Box](https://app.box.com/s/decsiq52cg6w6898ukl60ylmi7gqv2qr) or the FTP link below to the root directory:\n\t```bash\n\twget ftp://cs.stanford.edu/cs/cvgl/robovat/assets.zip\n\twget ftp://cs.stanford.edu/cs/cvgl/robovat/configs.zip\n\tunzip assets.zip\n\tunzip configs.zip\n\t```\n\n\tIf the assets folder is not in the root directory, remember to specify the \n\targument `--assets PATH_TO_ASSETS` when executing the example scripts.\n\n## Examples\n\n### Command Line Interface\n\nA command line interface (CLI) is provided for debugging purposes. We recommend running the CLI to test the simulation environment after installation and data downloading: \n```bash\npython tools/sawyer_cli.py --mode sim\n```\n\nDetailed usage of the CLI are explained in the source code of `tools/sawyer_cli.py`. The simulated and real-world Sawyer robot can be test using these instructions below in the terminal:\n* Visualize the camera images: `v`\n* Mouse click and reach: `c`\n* Reset the robot: `r`\n* Close and open the gripper: `g` and `o`\n\n### Planar Pushing\n\nExecute a planar pushing tasks with a heuristic policy:\n```bash\npython tools/run_env.py --env PushEnv --policy HeuristicPushPolicy --debug 1\n```\n\nTo execute semantic pushing tasks, we can add bindings to the configurations:\n```bash\npython tools/run_env.py --env PushEnv --policy HeuristicPushPolicy --env_config configs/envs/push_env.yaml --policy_config configs/policies/heuristic_push_policy.yaml --config_bindings \"{'TASK_NAME':'crossing','LAYOUT_ID':0}\" --debug 1\n```\n\nTo execute the tasks with pretrained [CAVIN](http://pair.stanford.edu/cavin/) planner, please see [this codebase](https://github.com/stanfordvl/cavin).\n\n### Process Objects for Simulation\n\nMany simulators load bodies in the [URDF](http://wiki.ros.org/urdf/XML) format. Given an [OBJ](https://en.wikipedia.org/wiki/Wavefront_.obj_file) file, the corresponding URDF file can be generated by running:\n```bash\npython tools/convert_obj_to_urdf.py --input PATH_TO_OBJ --output OUTPUT_DIR\n```\n\nTo simulate concave bodies, the OBJ file needs to be processed by convex decomposition. The URDF file of a concave body can be generated using [V-HACD](https://github.com/kmammou/v-hacd/) for convex decomposition by running:\n```bash\npython tools/convert_obj_to_urdf.py --input PATH_TO_OBJ --output OUTPUT_DIR --decompose 1\n```\n\n## Citation\n\nIf you find this code useful for your research, please cite:\n```\n@article{fang2019cavin, \n    title={Dynamics Learning with Cascaded Variational Inference for Multi-Step Manipulation},\n    author={Kuan Fang and Yuke Zhu and Animesh Garg and Silvio Savarese and Li Fei-Fei}, \n    journal={Conference on Robot Learning (CoRL)}, \n    year={2019} \n}\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/StanfordVL/robovat",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "robovat",
    "package_url": "https://pypi.org/project/robovat/",
    "platform": "",
    "project_url": "https://pypi.org/project/robovat/",
    "project_urls": {
      "Homepage": "https://github.com/StanfordVL/robovat"
    },
    "release_url": "https://pypi.org/project/robovat/0.1.0/",
    "requires_dist": [
      "easydict (==1.9)",
      "future (==0.17.1)",
      "gym (==0.14.0)",
      "h5py (==2.9.0)",
      "matplotlib (==2.2.4)",
      "numpy (==1.16.5)",
      "opencv-python (==4.1.0.25)",
      "Pillow (==6.1.0)",
      "python-pcl",
      "PyYAML (==5.1.2)",
      "scikit-learn (==0.20.4)",
      "scipy (==1.2.2)",
      "six (==1.11.0)",
      "sklearn (==0.0)",
      "pybullet (==2.6.5)"
    ],
    "requires_python": "",
    "summary": "RoboVat: A unified toolkit for simulated and real-world robotic task environments.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6967398,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca7b357f3fd50529d6bfcbcf2ec44e9cff1fbe62c3e4dbb3dc640c323bbfc6b4",
          "md5": "4484cd2a412d711287f1c61fb41b8af9",
          "sha256": "070f1959e8411f44e6983aedc88f7010e6f67d3ecfef754254258ecd05699984"
        },
        "downloads": -1,
        "filename": "robovat-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4484cd2a412d711287f1c61fb41b8af9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 115191,
        "upload_time": "2020-04-07T07:59:13",
        "upload_time_iso_8601": "2020-04-07T07:59:13.163472Z",
        "url": "https://files.pythonhosted.org/packages/ca/7b/357f3fd50529d6bfcbcf2ec44e9cff1fbe62c3e4dbb3dc640c323bbfc6b4/robovat-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0479572c3a7e0aafd76f96fda83b36b2b4a7a2b50e4460b64300805980de8ea1",
          "md5": "3ed00fc5b1b63321f1aa06a34601e3df",
          "sha256": "743133d85ed448f8a59bc8042ec962e71191036a9f66702b5ea3890b184a54b6"
        },
        "downloads": -1,
        "filename": "robovat-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3ed00fc5b1b63321f1aa06a34601e3df",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 88078,
        "upload_time": "2020-04-07T07:59:15",
        "upload_time_iso_8601": "2020-04-07T07:59:15.140205Z",
        "url": "https://files.pythonhosted.org/packages/04/79/572c3a7e0aafd76f96fda83b36b2b4a7a2b50e4460b64300805980de8ea1/robovat-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ca7b357f3fd50529d6bfcbcf2ec44e9cff1fbe62c3e4dbb3dc640c323bbfc6b4",
        "md5": "4484cd2a412d711287f1c61fb41b8af9",
        "sha256": "070f1959e8411f44e6983aedc88f7010e6f67d3ecfef754254258ecd05699984"
      },
      "downloads": -1,
      "filename": "robovat-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4484cd2a412d711287f1c61fb41b8af9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 115191,
      "upload_time": "2020-04-07T07:59:13",
      "upload_time_iso_8601": "2020-04-07T07:59:13.163472Z",
      "url": "https://files.pythonhosted.org/packages/ca/7b/357f3fd50529d6bfcbcf2ec44e9cff1fbe62c3e4dbb3dc640c323bbfc6b4/robovat-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0479572c3a7e0aafd76f96fda83b36b2b4a7a2b50e4460b64300805980de8ea1",
        "md5": "3ed00fc5b1b63321f1aa06a34601e3df",
        "sha256": "743133d85ed448f8a59bc8042ec962e71191036a9f66702b5ea3890b184a54b6"
      },
      "downloads": -1,
      "filename": "robovat-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "3ed00fc5b1b63321f1aa06a34601e3df",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 88078,
      "upload_time": "2020-04-07T07:59:15",
      "upload_time_iso_8601": "2020-04-07T07:59:15.140205Z",
      "url": "https://files.pythonhosted.org/packages/04/79/572c3a7e0aafd76f96fda83b36b2b4a7a2b50e4460b64300805980de8ea1/robovat-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}