{
  "info": {
    "author": "Dan Eschman",
    "author_email": "deschman007@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Natural Language :: English",
      "Operating System :: Microsoft :: Windows",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# [reportio](https://github.com/deschman/reportio)\n\n## Short Description\nA package containing templates for reporting with Python.\n\n## Long Description\n**reportio** is a Python package providing template classes in an effort to\nspeed up report building for BI Developers. It aims to provide users with an\nAPI for interacting with various data sources and end-user file types as well\nas a simple object for quickly building straight-forward reports.\n\n## Examples\n### SimpleReport\n    from reportio import SimpleReport\n\n\n    # Initialize report object\n    objReport = SimpleReport(\"Yearly Sales\")\n\n    # Add queries to report object\n    objReport.addQuery(\"Category\", \"SELECT * FROM CATEGORY\", 'sqlite')\n    objReport.addQuery(\"Subcategory\", \"SELECT * FROM SUB_CATEGORY\", 'sqlite')\n    objReport.addQuery(\"Segment\", \"SELECT * FROM SEGMENT\", 'sqlite')\n\n    # Process and export\n    objReport.run()\n\n### ReportTemplate\n    import os\n    from typing import Dict, Any\n\n    from reportio import ReportTemplate\n\n\n    \\# Create report object at runtime\n    class Report(ReportTemplate):\n        \"\"\"Test report.\"\"\"\n\n        def __init__(self,\n                     report_name: str = 'test',\n                     log_location: str = os.path.join(\n                         os.path.dirname(__file__), 'simple_log.txt'),\n                     config_location: str = os.path.join(\n                         os.path.dirname(__file__), 'simple_config.txt'),\n                     connection_dictionary: Dict[str, object] = {},\n                     client: Any = None,\n                     optional_function: callable = None) -> None:\n            super().__init__(report_name,\n                             log_location,\n                             config_location,\n                             connection_dictionary,\n                             client,\n                             optional_function)\n\n        \\# 'run' method must be instantiated\n        def run(self):\n            \"\"\"Run test report.\"\"\"\n            self.file = self.get_data('test_data',\n                                      \"SELECT * FROM CATEGORY\",\n                                      'sqlite')[0]\n            self.export_data(self.file, self.config['REPORT']['export_to'])\n\n\n    \\# Script report object to run\n    if __name__ == '__main__':\n        report = Report()\n        try:\n            report.run()\n        except Exception:\n            report.log(\"See log for debug details\", 'CRITICAL')\n            report.backup_data()\n            report.log(\"Backup successful\")\n            input(\"PRESS ENTER KEY TO QUIT\")\n            report.log(\"QUITTING\")\n\n### Windows Authentication of SSMS Database\nBefore utilizing **reportio** the user should first examine the **config**\nfile. Below *[DB]* the user should add their database details if they plan to\nuse a saved connection. Additional parameters may be added after the initial\nsemicolon. For example:\n\n    myservername = DSN=servername;TrustedConnection=yes;\n\nAdditionally, be sure to verify the filepaths below the *[REPORT]* header.\n\nAlternatively to using saved connections, the user may create their own\nconnection at runtime. In this case, the header of your script should import\n**reportio** and your preferred connection module, and define your connection.\n\n    import reportio as r\n    import pyodbc\n\n    conn = pyodbc.connect(driver='{SQL Server Native Client 11.0}',\n                          server='myserver',\n                          database='mydatabase',\n                          trusted_connection = 'yes')\n\nYou can create an instance of *SimpleReport* to get started. You need to\nprovide a string name for your report. You can add, remove, and rename queries.\nWhen adding queries, you must provide a string name for the query, the SQL\nas a string, and the name of your saved connection or your created connection.\nWhen you run the report, the queries will be run with multithreading. To use\nsingle threading pass *False* into the run method.\n\n    rep=r.SimpleReport(\"test\")\n    rep.addQuery(\"testQuery\",\n                 \"SELECT * FROM mydatabase.dbo.mytable\",\n                 connection=conn)\n    rep.addQuery(\"testQuery2\",\n                 \"SELECT * FROM mydatabase.dbo.myothertable\",\n                 connection=conn)\n    rep.run(False)\n\n## Logging\n**reportio** has robust logging functionality. Refer to your config to find the\nfilepaths for the output and logs. The console will also display this\ninformation, as well as the filepath to your report in an Excel file. If you\nrun multiple queries in one report, your workbook will have a tab for each\nquery.\n\n## Limitations\nUser should have solid grasp Python and object oriented programming.\nUser should be familiar with available data sources and structures.\nUser must be prepared to interact with data sources using SQL.\nUser must deliver reports outside the scope of this module.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/deschman/reportio",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "reportio",
    "package_url": "https://pypi.org/project/reportio/",
    "platform": "",
    "project_url": "https://pypi.org/project/reportio/",
    "project_urls": {
      "Homepage": "https://github.com/deschman/reportio"
    },
    "release_url": "https://pypi.org/project/reportio/0.3.5/",
    "requires_dist": [
      "pysqlite3",
      "numba",
      "pytest-dbfixtures",
      "pytest",
      "pandas",
      "pyarrow",
      "openpyxl",
      "fastparquet ; extra == 'gzip_alt_processing'",
      "jaydebeapi ; extra == 'jdbc'",
      "dask ; extra == 'multithread_support'",
      "mysql-connector-python ; extra == 'mysql_support'",
      "pyodbc ; extra == 'odbc'",
      "tqdm ; extra == 'progress_bar'"
    ],
    "requires_python": ">=3.3",
    "summary": "A package containing templates for reporting with Python.",
    "version": "0.3.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9722784,
  "releases": {
    "0.3.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5b0146e677be3d3fcd8d068b6b6f0c72a73af0857a2040e7e8ca36ed467bbb06",
          "md5": "16e41905c102a222790cf0566f2ee745",
          "sha256": "916f7d6db5502a75f7e43984c85e678522060a3cee8f7626b8a728cf8e6c13b7"
        },
        "downloads": -1,
        "filename": "reportio-0.3.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "16e41905c102a222790cf0566f2ee745",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 91790,
        "upload_time": "2021-02-25T23:04:04",
        "upload_time_iso_8601": "2021-02-25T23:04:04.684367Z",
        "url": "https://files.pythonhosted.org/packages/5b/01/46e677be3d3fcd8d068b6b6f0c72a73af0857a2040e7e8ca36ed467bbb06/reportio-0.3.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c91eef1ca4c596546275f432e8e56b845b36c1648634ee3c5e237648e313a345",
          "md5": "a38b015f784963b48e63f95645266136",
          "sha256": "978c9433fe92631709b97db1acd69b0c262bf3b8d780b97ba5d7f2788f5c0a7b"
        },
        "downloads": -1,
        "filename": "reportio-0.3.4.tar.gz",
        "has_sig": false,
        "md5_digest": "a38b015f784963b48e63f95645266136",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 77106,
        "upload_time": "2021-02-25T23:04:06",
        "upload_time_iso_8601": "2021-02-25T23:04:06.104304Z",
        "url": "https://files.pythonhosted.org/packages/c9/1e/ef1ca4c596546275f432e8e56b845b36c1648634ee3c5e237648e313a345/reportio-0.3.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6c3e38ccde7ac87a58d061f1159818ff4192c1cfa852adc4c2364294dfec29f1",
          "md5": "2cb81f82b76500886ea4e085bd80bdaa",
          "sha256": "188bbb2e201ab8923fc42135f8728dd31a30ea7e24866d1c3546907d703a5f19"
        },
        "downloads": -1,
        "filename": "reportio-0.3.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2cb81f82b76500886ea4e085bd80bdaa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.3",
        "size": 86305,
        "upload_time": "2021-03-09T22:38:09",
        "upload_time_iso_8601": "2021-03-09T22:38:09.826677Z",
        "url": "https://files.pythonhosted.org/packages/6c/3e/38ccde7ac87a58d061f1159818ff4192c1cfa852adc4c2364294dfec29f1/reportio-0.3.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9ebca3ca1cbc5e4d5f50b008f09c07a935588070280ef888ba7d7e47f163b801",
          "md5": "6e634f7e3a96475a97ca8ba3aa2fea4d",
          "sha256": "875e6c21348d4223acb16c726a8b24c7077f5e289e62a19be05c4d933d912196"
        },
        "downloads": -1,
        "filename": "reportio-0.3.5.tar.gz",
        "has_sig": false,
        "md5_digest": "6e634f7e3a96475a97ca8ba3aa2fea4d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.3",
        "size": 72251,
        "upload_time": "2021-03-09T22:38:10",
        "upload_time_iso_8601": "2021-03-09T22:38:10.862284Z",
        "url": "https://files.pythonhosted.org/packages/9e/bc/a3ca1cbc5e4d5f50b008f09c07a935588070280ef888ba7d7e47f163b801/reportio-0.3.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6c3e38ccde7ac87a58d061f1159818ff4192c1cfa852adc4c2364294dfec29f1",
        "md5": "2cb81f82b76500886ea4e085bd80bdaa",
        "sha256": "188bbb2e201ab8923fc42135f8728dd31a30ea7e24866d1c3546907d703a5f19"
      },
      "downloads": -1,
      "filename": "reportio-0.3.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2cb81f82b76500886ea4e085bd80bdaa",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.3",
      "size": 86305,
      "upload_time": "2021-03-09T22:38:09",
      "upload_time_iso_8601": "2021-03-09T22:38:09.826677Z",
      "url": "https://files.pythonhosted.org/packages/6c/3e/38ccde7ac87a58d061f1159818ff4192c1cfa852adc4c2364294dfec29f1/reportio-0.3.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9ebca3ca1cbc5e4d5f50b008f09c07a935588070280ef888ba7d7e47f163b801",
        "md5": "6e634f7e3a96475a97ca8ba3aa2fea4d",
        "sha256": "875e6c21348d4223acb16c726a8b24c7077f5e289e62a19be05c4d933d912196"
      },
      "downloads": -1,
      "filename": "reportio-0.3.5.tar.gz",
      "has_sig": false,
      "md5_digest": "6e634f7e3a96475a97ca8ba3aa2fea4d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.3",
      "size": 72251,
      "upload_time": "2021-03-09T22:38:10",
      "upload_time_iso_8601": "2021-03-09T22:38:10.862284Z",
      "url": "https://files.pythonhosted.org/packages/9e/bc/a3ca1cbc5e4d5f50b008f09c07a935588070280ef888ba7d7e47f163b801/reportio-0.3.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}