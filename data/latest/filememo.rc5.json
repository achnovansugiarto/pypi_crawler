{
  "info": {
    "author": "ArtÑ‘m IG",
    "author_email": "ortemeo@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: MIT License",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# [filememo](https://github.com/rtmigo/filememo_py#readme)\n\nFile-based **memoization** decorator. Caches the results of expensive function\ncalls. Retains the cached results between program restarts.\n\nCI tests are done in Python 3.8, 3.9 and 3.10 on macOS, Ubuntu and\nWindows.\n\n---\n\nThe function can be *expensive* because it is slow, or uses a lot of system\nresources, or literally makes a request to a paid API.\n\nThe `memoize` decorator returns the cached result when the same function called\nwith the same arguments. Thus, the function is expensive only once and\ninexpensive thereafter.\n\nFor example, the simplest cache for downloaded data can be set like this:\n\n``` python3\n@memoize\ndef downloaded(url):\n    return requests.get(url)\n    \ndownloaded(\"http://example.net/aaa\")  # downloads data\ndownloaded(\"http://example.net/bbb\")  # downloads data\ndownloaded(\"http://example.net/aaa\")  # gets data from cache   \n```\n\nData is saved to the file system using\n[pickledir](https://pypi.org/project/pickledir/). Even after the program\nrestart, the cached results will be in place.\n\n``` python3\n# gets data from cache after restart\ndownloaded(\"http://example.net/aaa\")     \n```\n\n# Install\n\n``` bash\n$ pip3 install filememo\n```\n\n# Use\n\n``` python3\nfrom filememo import memoize\n\n@memoize\ndef long_running_function(a, b, c):\n    return compute()\n\n# the following line actually computes the value only\n# when the program runs for the first time. On subsequent \n# runs, the value is read from the file\nx = long_running_function(1, 2, 3)\n```\n\n## Function arguments\n\nThe results depend on both the function and its arguments. All results are\ncached separately.\n\n``` python3\n@memoize\ndef that_function(a, b, c):\n    return compute(a, b, c)\n\n@memoize\ndef other_function(a, b):\n    return compute(a, b)\n\n# the following calls will cache three different values \ny1 = that_function(1, 2, 3)  \ny2 = that_function(30, 20, 40)\ny3 = other_function(1, 2)\n\n# the way the arguments are set is also important, as is their order. \n# Therefore, the following calls are cached as three different ones\ny4 = other_function(1, b=2)\ny5 = other_function(a=1, b=2)\ny6 = other_function(b=2, a=1)\n```\n\n## Cache directory\n\nIf `dir_path` is not specified, the cached data is stored in the directory\nreturned by\nthe [`gettempdir`](https://docs.python.org/3/library/tempfile.html#tempfile.gettempdir)\n. However, there is a high probability that the cache stored there will not\nsurvive a reboot. And even a certain probability that the system does not have a\ntemporary directory, so the current directory will be considered temporary.\n\nTo better control the situation, you can set a specific directory for storing\ncaches.\n\n``` python3\n@memoize(dir_path='/var/tmp/myfuncs')\ndef function(a, b):\n    return a+b\n    \n# it's ok if different functions share the same directory    \n@memoize(dir_path='/var/tmp/myfuncs')\ndef other_func():\n    return compute()\n```\n\n## Expiration date\n\nThe `max_age` argument sets two conditions at once:\n\n- if the result is not yet in the cache (and we will add it now), then it will\n  live in the cache no longer than `max_age`. After that it will be\n  automatically deleted\n- if the result is already in the cache, then we only use it if its age is less\n  than `max_age`. Otherwise, the function will be run again, and the result will\n  be replaced with a new one\n\n``` python3\n@memoize(max_age = datetime.timedelta(minutes=5))\ndef function(a, b):\n    return compute()\n```\n\n## Data version\n\nWhen you specify `version`, all results with different versions are considered\noutdated.\n\nSay you have the following function:\n\n``` python3\n@memoize(version=1)\ndef function(a, b):\n    return a + b\n```\n\nYou changed your mind, and now the function should return the product of numbers\ninstead of the sum. But the cache already contains the previous results with the\nsums. In this case, you can just change\n`version`. Previous results will not be returned.\n\n``` python3\n@memoize(version=2)\ndef function(a, b):\n    return a * b\n```\n\nNote that all **other** than the current version are deprecated, regardless of\nwhether their value is greater or less. If you used `version=10`, and then\nstarted using `version=9`, then 9 is considered current, and 10 is obsolete.\n\n## Exceptions\n\nIf the decorated function throws an exception, the error is considered\npermanent. The exception is stored in the cache and will be raised every time.\n\n``` python3\nfrom filememo import memoize, FunctionException\n\n@memoize\ndef divide(a, b):\n    return a / b\n\ntry:\n    # tryng to run the function for the first time\n    divide(1, 0)\nexcept FunctionException as e:\n    print(f\"Error: {e.inner}\")      \n\ntry:\n    # not actually running again, getting error from cache\n    divide(1, 0)\nexcept FunctionException as e:\n    print(f\"Cached error: {e.inner}\")      \n```\n\nThe `exceptions_max_age = None` argument will prevent exceptions from being\ncached. Each error will be considered a one-time error.\n\n``` python3\n@memoize(exceptions_max_age = None)\ndef download(url):\n    return http_get(url)\n    \nwhile True:\n    try:\n        download('http://sample.net/path')\n        break\n    except FunctionException:\n        time.sleep(1)\n        # will retry        \n```\n\nYou can also set the expiration time for cached exceptions. It may differ from\nthe caching time of the data itself.\n\n``` python3\n# keep downloaded data for a day, remember connection errors for 5 minutes\n\n@memoize(max_age = datetime.timedelta(days: 1)\n         exceptions_max_age = datetime.timedelta(minutes: 5))\ndef download(url):\n    return http_get(url)\n```\n\n## In-memory caching\n\nEach call to a function decorated with `@memoize` results in I/O operations. If\nyour absolute priority is performance, then even reading from the disk cache can\nbe considered expensive. Although `filememo` does not attempt to cache the read\ndata in memory, this functionality is easy to achieve by combining decorators.\n\n``` python3\nfrom functools import lru_cache\nfrom filememo import memoize\n\n@lru_cache\n@memoize\ndef too_expensive():\n    return compute()\n```\n\nIn this example, the `filememo` disk cache will be used to store the results\nbetween program runs, while the `functools` RAM cache will store the results\nbetween function calls.\n\nIf the data is already in disk cache, and the program is just started, then\ncalling `too_expensive()` for the first time will read the result from disk.\nFurther calls to `too_expensive()` will return the result from memory.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/rtmigo/filememo_py#readme",
    "keywords": "python,package,memoize,memoization,cache,function,file,persistent,method,memoize-decorator,memoization-library,permanent,pickle",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "filememo",
    "package_url": "https://pypi.org/project/filememo/",
    "platform": "",
    "project_url": "https://pypi.org/project/filememo/",
    "project_urls": {
      "Homepage": "https://github.com/rtmigo/filememo_py#readme"
    },
    "release_url": "https://pypi.org/project/filememo/0.3.4/",
    "requires_dist": [
      "pickledir (>=0.3.5)"
    ],
    "requires_python": ">=3.8",
    "summary": "File-based memoization decorator. Stores the results of expensive function calls and returns the cached result when the same inputs occur again.",
    "version": "0.3.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12838502,
  "releases": {
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "05b40140c73e7045e0723914f23e21fe865301acb2f5d2db9904ed2a011e279d",
          "md5": "a8c50334eeb0ac92d16639c66ba480dc",
          "sha256": "739a1cc282e2499813fba31630e42b477ce5b62cd726ffa51ea81c1ca24cb19a"
        },
        "downloads": -1,
        "filename": "filememo-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a8c50334eeb0ac92d16639c66ba480dc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8180,
        "upload_time": "2021-05-16T04:00:02",
        "upload_time_iso_8601": "2021-05-16T04:00:02.461954Z",
        "url": "https://files.pythonhosted.org/packages/05/b4/0140c73e7045e0723914f23e21fe865301acb2f5d2db9904ed2a011e279d/filememo-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "08f78bbf746a3d198bb1dbba7889e6dc058fc2ac0b05e85837ac2e3ba882441c",
          "md5": "0ee3f5319754a22c43095f0c6987d3e8",
          "sha256": "2fbb62d1f7c07a94b606dc82e5cda11b955717f5dddd7b61017becaf5ee42d66"
        },
        "downloads": -1,
        "filename": "filememo-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0ee3f5319754a22c43095f0c6987d3e8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8565,
        "upload_time": "2021-05-16T04:00:03",
        "upload_time_iso_8601": "2021-05-16T04:00:03.551585Z",
        "url": "https://files.pythonhosted.org/packages/08/f7/8bbf746a3d198bb1dbba7889e6dc058fc2ac0b05e85837ac2e3ba882441c/filememo-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "751b03777dcaa1c3670a2866bbf12cc07aaea77ac28f09701136d814bbe54182",
          "md5": "b2b8ae0a0d7b2530f76e801e2d0d44b4",
          "sha256": "f2dcd4ffea5911df27f1f128cdbe2f5bcf2a8a44966a4b602f58fc45be585b80"
        },
        "downloads": -1,
        "filename": "filememo-0.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b2b8ae0a0d7b2530f76e801e2d0d44b4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8513,
        "upload_time": "2021-05-16T04:47:50",
        "upload_time_iso_8601": "2021-05-16T04:47:50.093280Z",
        "url": "https://files.pythonhosted.org/packages/75/1b/03777dcaa1c3670a2866bbf12cc07aaea77ac28f09701136d814bbe54182/filememo-0.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c94d2e082c602588ecceae264b22c6b0d787072d46d6ba92a3a2672ee3cd86fe",
          "md5": "d606923537b2576929f899c795f65678",
          "sha256": "b3fc49600fd7dc593ef002c6747de31733255bb33eca57e5cddbfaf2306746f4"
        },
        "downloads": -1,
        "filename": "filememo-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d606923537b2576929f899c795f65678",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9029,
        "upload_time": "2021-05-16T04:47:51",
        "upload_time_iso_8601": "2021-05-16T04:47:51.387995Z",
        "url": "https://files.pythonhosted.org/packages/c9/4d/2e082c602588ecceae264b22c6b0d787072d46d6ba92a3a2672ee3cd86fe/filememo-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6aefb822004e7f449bb07661a24d25d2da59febd1c1ed93f0bc1db9769267dff",
          "md5": "83fc7072d12f1e9eff84aacf5ecc189f",
          "sha256": "3dca57e0458db69496d11896ae80de3b4c53b5c310ac265ef02087425b931118"
        },
        "downloads": -1,
        "filename": "filememo-0.3.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "83fc7072d12f1e9eff84aacf5ecc189f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 8528,
        "upload_time": "2021-05-16T21:31:04",
        "upload_time_iso_8601": "2021-05-16T21:31:04.274669Z",
        "url": "https://files.pythonhosted.org/packages/6a/ef/b822004e7f449bb07661a24d25d2da59febd1c1ed93f0bc1db9769267dff/filememo-0.3.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5e225d1197a73e5bd15cd7629239443a73ff8dcec6ae2ec9d17bafdb974d4fec",
          "md5": "39643473fbfa8240375af56bd9d6ac43",
          "sha256": "b94a07816c98a60834addadc2fd07342b9136e080fcd04bf7786231c0b260e25"
        },
        "downloads": -1,
        "filename": "filememo-0.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "39643473fbfa8240375af56bd9d6ac43",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 9040,
        "upload_time": "2021-05-16T21:31:05",
        "upload_time_iso_8601": "2021-05-16T21:31:05.856108Z",
        "url": "https://files.pythonhosted.org/packages/5e/22/5d1197a73e5bd15cd7629239443a73ff8dcec6ae2ec9d17bafdb974d4fec/filememo-0.3.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "92ea8bb3bbe5f028b2c1a38bb5b5749d5e29e8a2a1e42cb903170e143d718bdc",
          "md5": "8e7be70c62a09d13d5d142c609f55576",
          "sha256": "c86ad517f32241702684ec7c5790fa7d25d7e273eb3d6546263272f63aeb2388"
        },
        "downloads": -1,
        "filename": "filememo-0.3.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8e7be70c62a09d13d5d142c609f55576",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 8561,
        "upload_time": "2022-02-08T12:46:58",
        "upload_time_iso_8601": "2022-02-08T12:46:58.807873Z",
        "url": "https://files.pythonhosted.org/packages/92/ea/8bb3bbe5f028b2c1a38bb5b5749d5e29e8a2a1e42cb903170e143d718bdc/filememo-0.3.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "403940731ffbbd5c1d51211e1a57204f976eb9ac632b1a91dbb24d2e28c95277",
          "md5": "bbcae32c1d816ccc40b7de2d1226c640",
          "sha256": "b0b36b24edecfb51a9659551a2bd568a11befb6dad063fcf2ab99475b39682cd"
        },
        "downloads": -1,
        "filename": "filememo-0.3.3.tar.gz",
        "has_sig": false,
        "md5_digest": "bbcae32c1d816ccc40b7de2d1226c640",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 7858,
        "upload_time": "2022-02-08T12:46:59",
        "upload_time_iso_8601": "2022-02-08T12:46:59.985629Z",
        "url": "https://files.pythonhosted.org/packages/40/39/40731ffbbd5c1d51211e1a57204f976eb9ac632b1a91dbb24d2e28c95277/filememo-0.3.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d5f3d60875ca3cb7e01d78b8a5b090df8a5a498d519e651e95a950395d22d1c2",
          "md5": "36ca241eb7491644108666ddeef24079",
          "sha256": "49ecdbe7f54a1ffe1f6b18ea9ff882b81a10fd5dde1eef83549e30e9bd18582a"
        },
        "downloads": -1,
        "filename": "filememo-0.3.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "36ca241eb7491644108666ddeef24079",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 8592,
        "upload_time": "2022-02-09T13:12:58",
        "upload_time_iso_8601": "2022-02-09T13:12:58.015821Z",
        "url": "https://files.pythonhosted.org/packages/d5/f3/d60875ca3cb7e01d78b8a5b090df8a5a498d519e651e95a950395d22d1c2/filememo-0.3.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "50577bea0a2eadbfad7a34ce88aab83cd9983b1c4290b46a8d4ef36f7e305612",
          "md5": "bfd186eb8ce6d2dabdaddc4e0540d345",
          "sha256": "5982530cb8c2cbc7c741e2a218364ed7bf3ebd0254559a0440672d6333ce6628"
        },
        "downloads": -1,
        "filename": "filememo-0.3.4.tar.gz",
        "has_sig": false,
        "md5_digest": "bfd186eb8ce6d2dabdaddc4e0540d345",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 7881,
        "upload_time": "2022-02-09T13:12:59",
        "upload_time_iso_8601": "2022-02-09T13:12:59.263297Z",
        "url": "https://files.pythonhosted.org/packages/50/57/7bea0a2eadbfad7a34ce88aab83cd9983b1c4290b46a8d4ef36f7e305612/filememo-0.3.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d5f3d60875ca3cb7e01d78b8a5b090df8a5a498d519e651e95a950395d22d1c2",
        "md5": "36ca241eb7491644108666ddeef24079",
        "sha256": "49ecdbe7f54a1ffe1f6b18ea9ff882b81a10fd5dde1eef83549e30e9bd18582a"
      },
      "downloads": -1,
      "filename": "filememo-0.3.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "36ca241eb7491644108666ddeef24079",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 8592,
      "upload_time": "2022-02-09T13:12:58",
      "upload_time_iso_8601": "2022-02-09T13:12:58.015821Z",
      "url": "https://files.pythonhosted.org/packages/d5/f3/d60875ca3cb7e01d78b8a5b090df8a5a498d519e651e95a950395d22d1c2/filememo-0.3.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "50577bea0a2eadbfad7a34ce88aab83cd9983b1c4290b46a8d4ef36f7e305612",
        "md5": "bfd186eb8ce6d2dabdaddc4e0540d345",
        "sha256": "5982530cb8c2cbc7c741e2a218364ed7bf3ebd0254559a0440672d6333ce6628"
      },
      "downloads": -1,
      "filename": "filememo-0.3.4.tar.gz",
      "has_sig": false,
      "md5_digest": "bfd186eb8ce6d2dabdaddc4e0540d345",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 7881,
      "upload_time": "2022-02-09T13:12:59",
      "upload_time_iso_8601": "2022-02-09T13:12:59.263297Z",
      "url": "https://files.pythonhosted.org/packages/50/57/7bea0a2eadbfad7a34ce88aab83cd9983b1c4290b46a8d4ef36f7e305612/filememo-0.3.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}