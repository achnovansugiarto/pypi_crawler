{
  "info": {
    "author": "E. Madison Bray",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Typing :: Typed"
    ],
    "description": "jsonschema-pyref\n================\n\nThis package adds support to\n[jsonschema](https://pypi.org/project/jsonschema/)'s `RefResolver` for\nresolving schema `$ref`s with two new custom URL schemes:\n\n* `py-obj`: URLs with this scheme allow loading a schema from a dict in a\n  Python module/class/etc.  This uses dotted attribute notation for the path\n  to the schema.  For example `py-obj:package.submodule.Class.schema`\n  resolves to a `schema` class attribute in the class `Class` in the module\n  `package.submodule`.\n\n* `py-pkgdata`: URLs with this scheme allow loading a schema from a file\n  (currently only JSON and YAML are supported) in the package data installed\n  with a Python package.  For example\n  `py-pkgdata:package.subpackage/schema.json` loads the schema from the file\n  `schema.json` under `package/subpackage` from wherever the package is\n  installed.\n\nMany JSON Schemas have an\n[$id](https://json-schema.org/understanding-json-schema/basics.html#declaring-a-unique-identifier)\nproperty declaring the unique identity of the schema.  Typically this is an\nhttp(s) URL, but there is nothing *requiring* it to be.  Often this is just\nused for namespacing, and the supplied URL does technically require to\nexist.\n\nIn practice, if your Python package ships with a number of schemas used by\nthe package, and you would like to reference those schemas either from\nanother package, or relative to other schemas in the same package, the use\nof the http scheme for schema `$id`s doesn't help with this.  It is\nnecessary to provide some kind of mapping between the URLs in the schema\n`$id`s, and their actual location in the Python package.\n\nThe use of these custom URL schemes makes it implicit that this schema's\nhome is in a Python package or module (in the case of schemas declared\ndirectly in Python code) and that it is not located on a network resource.\n\nThis gives an alternative way to declare the `$id`s of and `$ref` schemas\ninstalled alongside Python code.\n\n\nExamples\n--------\n\n```python\n>>> import jsonschema\n>>> from jsonschema_pyref import RefResolver\n>>> schema = {\n...     'properties': {\n...         'a': {'$ref': 'py-obj:jsonschema_pyref.examples.schema1'},\n...         'b': {'$ref': 'py-pkgdata:jsonschema_pyref.examples/schema1.json'},\n...         'c': {'$ref': 'py-pkgdata:jsonschema_pyref.examples/schema2.yml'}\n...      }\n... }\n>>> resolver = RefResolver.from_schema(schema)\n>>> doc = {'a': 'hello', 'b': 'world', 'c': 123}\n>>> jsonschema.validate(doc, schema, resolver=resolver) is None\nTrue\n\n```\n\nAs a convenience, `jsonschema_pyref.validate` is also provided as a drop-in\nreplacement for `jsonschema.validate` which uses the custom `RefResolver` by\ndefault:\n\n```python\n>>> from jsonschema_pyref import validate\n>>> validate(doc, schema) is None\nTrue\n\n```\n\nLet's have a look at what's in the referenced schemas to see exactly\nwhat we're validating the document against:\n\n```python\n>>> from pkgutil import get_data\n>>> import jsonschema_pyref.examples\n>>> jsonschema_pyref.examples.schema1\n{'type': 'string'}\n>>> def show_file(filename):\n...     data = get_data('jsonschema_pyref.examples', filename)\n...     print(data.decode('ascii').strip())\n...\n>>> show_file('schema1.json')\n{\"type\": \"string\"}\n>>> show_file('schema2.yml')\ntype: integer\n\n```\n\nThese example schemas may be trivial, but you can easily confirm that this\nwould work all the same with a more complex schema.\n\nJust to prove that the correct schemas are actually being loaded (and the\ndocument is not just being trivially validated) we can also try some\ncounter-examples:\n\n```python\n>>> doc1 = dict(doc, a=123)\n>>> jsonschema.validate(doc1, schema, resolver=resolver)\nTraceback (most recent call last):\n...\njsonschema.exceptions.ValidationError: 123 is not of type 'string'\n...\nFailed validating 'type' in schema['properties']['a']:\n    {'type': 'string'}\n...\nOn instance['a']:\n    123\n\n```\n\n```python\n>>> doc2 = dict(doc, b=123)\n>>> jsonschema.validate(doc2, schema, resolver=resolver)\nTraceback (most recent call last):\n...\njsonschema.exceptions.ValidationError: 123 is not of type 'string'\n...\nFailed validating 'type' in schema['properties']['b']:\n    {'type': 'string'}\n...\nOn instance['b']:\n    123\n\n```\n\n```python\n>>> doc3 = dict(doc, c='hello')\n>>> jsonschema.validate(doc3, schema, resolver=resolver)\nTraceback (most recent call last):\n...\njsonschema.exceptions.ValidationError: 'hello' is not of type 'integer'\n...\nFailed validating 'type' in schema['properties']['c']:\n    {'type': 'integer'}\n...\nOn instance['c']:\n    'hello'\n\n```\n\nHere is a slightly more complex example demonstrating how relative refs\nwork with `py-pkgdata` URLs, as well as that fragments are correctly\nresolved relative to each schema.\n\nFirst we have `schema4.yml` which also contains an `$id` property, allowing\n`jsonschema.RefResolver` to correctly determine the base URL against which\nto resolve relative refs (in the case of `{\"$ref\": \"schema3.json\"}`):\n\n```python\n>>> show_file('schema4.yml')\n$id: \"py-pkgdata:jsonschema_pyref.examples/schema4.yml\"\ntype: \"object\"\nproperties:\n    foo: {\"$ref\": \"schema3.json\"}\n    bar: {\"$ref\": \"#/$defs/bar\"}\nadditionalProperties: false\n$defs:\n    bar: {\"type\": \"integer\"}\n\n```\n\nAnd `schema3.json`:\n\n```python\n>>> show_file('schema3.json')\n{\n    \"$id\": \"py-pkgdata:jsonschema_pyref.examples/schema3.json\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"foo\": {\"$ref\": \"#/$defs/foo\"}\n    },\n    \"additionalProperties\": false,\n    \"$defs\": {\n        \"foo\": {\"type\": \"string\"}\n    }\n}\n\n```\n\nHere is a document that should validate against `schema4` which we'll\nload also by `$ref`:\n\n```python\n>>> doc = {\n...     'foo': {'foo': 'hello'},\n...     'bar': 123\n... }\n...\n>>> schema = {'$ref': 'py-pkgdata:jsonschema_pyref.examples/schema4.yml'}\n>>> resolver = RefResolver.from_schema(schema)\n>>> jsonschema.validate(doc, schema, resolver=resolver) is None\nTrue\n\n```\n\nAnd again a couple counter-examples:\n\n```python\n>>> doc1 = dict(doc, foo={'foo': 123})\n>>> jsonschema.validate(doc1, schema, resolver=resolver)\nTraceback (most recent call last):\n...\njsonschema.exceptions.ValidationError: 123 is not of type 'string'\n...\nFailed validating 'type' in schema['properties']['foo']['properties']['foo']:\n    {'type': 'string'}\n...\nOn instance['foo']['foo']:\n    123\n```\n\n```python\n>>> doc2 = dict(doc, bar='bar')\n>>> jsonschema.validate(doc2, schema, resolver=resolver)\nTraceback (most recent call last):\n...\njsonschema.exceptions.ValidationError: 'bar' is not of type 'integer'\n...\nFailed validating 'type' in schema['properties']['bar']:\n    {'type': 'integer'}\n...\nOn instance['bar']:\n    'bar'\n\n```\n\nAPI Documentation\n-----------------\n\nhttps://jsonschema-pyref.readthedocs.io/en/latest/api.html\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/mlgenetics/jsonschema-pyref",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "embray@lri.fr",
    "name": "jsonschema-pyref",
    "package_url": "https://pypi.org/project/jsonschema-pyref/",
    "platform": "",
    "project_url": "https://pypi.org/project/jsonschema-pyref/",
    "project_urls": {
      "Homepage": "https://gitlab.com/mlgenetics/jsonschema-pyref"
    },
    "release_url": "https://pypi.org/project/jsonschema-pyref/0.1.0/",
    "requires_dist": [
      "jsonschema",
      "m2r2 ; extra == 'docs'",
      "sphinx ; extra == 'docs'",
      "sphinx-rtd-theme ; extra == 'docs'",
      "sphinxcontrib-napoleon ; extra == 'docs'",
      "sphinxcontrib-spelling ; extra == 'docs'",
      "flake8 (<4) ; extra == 'tests'",
      "pytest ; extra == 'tests'",
      "pytest-flake8 ; extra == 'tests'",
      "pytest-mypy ; extra == 'tests'",
      "pyyaml ; extra == 'tests'",
      "pyyaml ; extra == 'yaml'"
    ],
    "requires_python": ">=3.7",
    "summary": "Supports referencing schemas from Python packages",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12037026,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "01eff2a7dd0504df81a621374ce4a0bd2610d3a96b9b64034b15978c6fb4b046",
          "md5": "1c20169b38ff0bdd53e41881202be76d",
          "sha256": "1793e3f2ffc0d3acead078cc03715771f2f5b67142f2a2af726898ee349a2109"
        },
        "downloads": -1,
        "filename": "jsonschema_pyref-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1c20169b38ff0bdd53e41881202be76d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 10678,
        "upload_time": "2021-11-16T12:32:00",
        "upload_time_iso_8601": "2021-11-16T12:32:00.896702Z",
        "url": "https://files.pythonhosted.org/packages/01/ef/f2a7dd0504df81a621374ce4a0bd2610d3a96b9b64034b15978c6fb4b046/jsonschema_pyref-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc39a6b1f81ede7a2496479c3fb09c3063ea825631e64deb67da472995635657",
          "md5": "b779deebcc8385f3c4055ed13e782897",
          "sha256": "5b0364623ff602adae3734596e4ea2364ed741ae82ad54123898acca9386a956"
        },
        "downloads": -1,
        "filename": "jsonschema-pyref-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b779deebcc8385f3c4055ed13e782897",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 15430,
        "upload_time": "2021-11-16T12:32:02",
        "upload_time_iso_8601": "2021-11-16T12:32:02.191692Z",
        "url": "https://files.pythonhosted.org/packages/dc/39/a6b1f81ede7a2496479c3fb09c3063ea825631e64deb67da472995635657/jsonschema-pyref-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0b0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1212be0fc26ad404721ddb5362587d7f1bcface7bd96f5f2786deecc8ce26e8a",
          "md5": "458ff8a30597d722f828d9049a0cf4e2",
          "sha256": "69d557750f90bd60dda439e1d791c5dfd4a1d571199645d9b2c3687e4087ecfd"
        },
        "downloads": -1,
        "filename": "jsonschema_pyref-0.1.0b0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "458ff8a30597d722f828d9049a0cf4e2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 9478,
        "upload_time": "2021-11-05T18:19:47",
        "upload_time_iso_8601": "2021-11-05T18:19:47.881149Z",
        "url": "https://files.pythonhosted.org/packages/12/12/be0fc26ad404721ddb5362587d7f1bcface7bd96f5f2786deecc8ce26e8a/jsonschema_pyref-0.1.0b0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5801cc2611eec58e10f28538d014d4a2994f27b656149915774cb4610d649074",
          "md5": "396ac95b6ef2d8f1cbff928b0a5330f2",
          "sha256": "83187379a2b1dcd886a013fa80bde868937e164bb9d7082bdc419a51f877ce23"
        },
        "downloads": -1,
        "filename": "jsonschema-pyref-0.1.0b0.tar.gz",
        "has_sig": false,
        "md5_digest": "396ac95b6ef2d8f1cbff928b0a5330f2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 8308,
        "upload_time": "2021-11-05T18:19:50",
        "upload_time_iso_8601": "2021-11-05T18:19:50.149249Z",
        "url": "https://files.pythonhosted.org/packages/58/01/cc2611eec58e10f28538d014d4a2994f27b656149915774cb4610d649074/jsonschema-pyref-0.1.0b0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0b1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "36c0da7e9973f689455446498edfa4078a795c55734355abab4d8e6fcc4187dc",
          "md5": "393dd15669a43f78165f0a80a50858f6",
          "sha256": "b80114f0e97b4062c5aa519edf6ee26966bf8d435f5604feff8eb0f25163925e"
        },
        "downloads": -1,
        "filename": "jsonschema_pyref-0.1.0b1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "393dd15669a43f78165f0a80a50858f6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 10639,
        "upload_time": "2021-11-08T15:10:59",
        "upload_time_iso_8601": "2021-11-08T15:10:59.834685Z",
        "url": "https://files.pythonhosted.org/packages/36/c0/da7e9973f689455446498edfa4078a795c55734355abab4d8e6fcc4187dc/jsonschema_pyref-0.1.0b1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d5737035479826e4c80f2bf8c8d4a45b562f2efb4437254f523eec53738decd",
          "md5": "43db613d680ab6f3ddcb3c9de1754c8f",
          "sha256": "acdacd8be7d4b5498660ba91127c6c1d36b948c1e5b1642beb12c926fbb9f7b8"
        },
        "downloads": -1,
        "filename": "jsonschema-pyref-0.1.0b1.tar.gz",
        "has_sig": false,
        "md5_digest": "43db613d680ab6f3ddcb3c9de1754c8f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9280,
        "upload_time": "2021-11-08T15:11:01",
        "upload_time_iso_8601": "2021-11-08T15:11:01.933285Z",
        "url": "https://files.pythonhosted.org/packages/1d/57/37035479826e4c80f2bf8c8d4a45b562f2efb4437254f523eec53738decd/jsonschema-pyref-0.1.0b1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "01eff2a7dd0504df81a621374ce4a0bd2610d3a96b9b64034b15978c6fb4b046",
        "md5": "1c20169b38ff0bdd53e41881202be76d",
        "sha256": "1793e3f2ffc0d3acead078cc03715771f2f5b67142f2a2af726898ee349a2109"
      },
      "downloads": -1,
      "filename": "jsonschema_pyref-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1c20169b38ff0bdd53e41881202be76d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 10678,
      "upload_time": "2021-11-16T12:32:00",
      "upload_time_iso_8601": "2021-11-16T12:32:00.896702Z",
      "url": "https://files.pythonhosted.org/packages/01/ef/f2a7dd0504df81a621374ce4a0bd2610d3a96b9b64034b15978c6fb4b046/jsonschema_pyref-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dc39a6b1f81ede7a2496479c3fb09c3063ea825631e64deb67da472995635657",
        "md5": "b779deebcc8385f3c4055ed13e782897",
        "sha256": "5b0364623ff602adae3734596e4ea2364ed741ae82ad54123898acca9386a956"
      },
      "downloads": -1,
      "filename": "jsonschema-pyref-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "b779deebcc8385f3c4055ed13e782897",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 15430,
      "upload_time": "2021-11-16T12:32:02",
      "upload_time_iso_8601": "2021-11-16T12:32:02.191692Z",
      "url": "https://files.pythonhosted.org/packages/dc/39/a6b1f81ede7a2496479c3fb09c3063ea825631e64deb67da472995635657/jsonschema-pyref-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}