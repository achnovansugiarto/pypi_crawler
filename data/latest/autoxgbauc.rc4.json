{
  "info": {
    "author": "Ahmad Waly",
    "author_email": "ahmadwaly60@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# AutoXGB\n\n\nXGBoost + Optuna:  no brainer\n\n- auto train xgboost directly from CSV files\n- auto tune xgboost using optuna\n- auto serve best xgboot model using fastapi\n\nNOTE: PRs are currently not accepted. If there are issues/problems, please create an issue.\n\n# Installation\n\nInstall using pip\n\n    pip install autoxgbAUC\n\n\n# Usage\nTraining a model using AutoXGB is a piece of cake. All you need is some tabular data.\n\n## Parameters\n\n```python\n\n###############################################################################\n### required parameters\n###############################################################################\n\n# path to training data\ntrain_filename = \"data_samples/binary_classification.csv\"\n\n# path to output folder to store artifacts\noutput = \"output\"\n\n###############################################################################\n### optional parameters\n###############################################################################\n\n# path to test data. if specified, the model will be evaluated on the test data\n# and test_predictions.csv will be saved to the output folder\n# if not specified, only OOF predictions will be saved\n# test_filename = \"test.csv\"\ntest_filename = None\n\n# task: classification or regression\n# if not specified, the task will be inferred automatically\n# task = \"classification\"\n# task = \"regression\"\ntask = None\n\n# an id column\n# if not specified, the id column will be generated automatically with the name `id`\n# idx = \"id\"\nidx = None\n\n# target columns are list of strings\n# if not specified, the target column be assumed to be named `target`\n# and the problem will be treated as one of: binary classification, multiclass classification,\n# or single column regression\n# targets = [\"target\"]\n# targets = [\"target1\", \"target2\"]\ntargets = [\"income\"]\n\n# features columns are list of strings\n# if not specified, all columns except `id`, `targets` & `kfold` columns will be used\n# features = [\"col1\", \"col2\"]\nfeatures = None\n\n# categorical_features are list of strings\n# if not specified, categorical columns will be inferred automatically\n# categorical_features = [\"col1\", \"col2\"]\ncategorical_features = None\n\n# use_gpu is boolean\n# if not specified, GPU is not used\n# use_gpu = True\n# use_gpu = False\nuse_gpu = True\n\n# number of folds to use for cross-validation\n# default is 5\nnum_folds = 5\n\n# random seed for reproducibility\n# default is 42\nseed = 42\n\n# number of optuna trials to run\n# default is 1000\n# num_trials = 1000\nnum_trials = 100\n\n# time_limit for optuna trials in seconds\n# if not specified, timeout is not set and all trials are run\n# time_limit = None\ntime_limit = 360\n\n# if fast is set to True, the hyperparameter tuning will use only one fold\n# however, the model will be trained on all folds in the end\n# to generate OOF predictions and test predictions\n# default is False\n# fast = False\nfast = False\n```\n\n# Python API\n\nTo train a new model, you can run:\n\n```python\nfrom xgbauto import AutoXGB\n\n\n# required parameters:\ntrain_filename = \"data_samples/binary_classification.csv\"\noutput = \"output\"\n\n# optional parameters\ntest_filename = None\ntask = None\nidx = None\ntargets = [\"income\"]\nfeatures = None\ncategorical_features = None\nuse_gpu = True\nnum_folds = 5\nseed = 42\nnum_trials = 100\ntime_limit = 360\nfast = False\n\n# Now its time to train the model!\naxgb = AutoXGB(\n    train_filename=train_filename,\n    output=output,\n    test_filename=test_filename,\n    task=task,\n    idx=idx,\n    targets=targets,\n    features=features,\n    categorical_features=categorical_features,\n    use_gpu=use_gpu,\n    num_folds=num_folds,\n    seed=seed,\n    num_trials=num_trials,\n    time_limit=time_limit,\n    fast=fast,\n)\naxgb.train()\n```\n\n# CLI\n\nTrain the model using the `autoxgb train` command. The parameters are same as above.\n\n```\nxgbauto train \\\n --train_filename datasets/30train.csv \\\n --output outputs/30days \\\n --test_filename datasets/30test.csv \\\n --use_gpu\n```\n\nYou can also serve the trained model using the `autoxgb serve` command.\n\n```bash\nxgbauto serve --model_path outputs/mll --host 0.0.0.0 --debug\n```\n\nTo know more about a command, run:\n\n    `xgbauto <command> --help` \n\n```\nxgbauto train --help\n\n\nusage: xgbauto <command> [<args>] train [-h] --train_filename TRAIN_FILENAME [--test_filename TEST_FILENAME] --output\n                                        OUTPUT [--task {classification,regression}] [--idx IDX] [--targets TARGETS]\n                                        [--num_folds NUM_FOLDS] [--features FEATURES] [--use_gpu] [--fast]\n                                        [--seed SEED] [--time_limit TIME_LIMIT]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --train_filename TRAIN_FILENAME\n                        Path to training file\n  --test_filename TEST_FILENAME\n                        Path to test file\n  --output OUTPUT       Path to output directory\n  --task {classification,regression}\n                        User defined task type\n  --idx IDX             ID column\n  --targets TARGETS     Target column(s). If there are multiple targets, separate by ';'\n  --num_folds NUM_FOLDS\n                        Number of folds to use\n  --features FEATURES   Features to use, separated by ';'\n  --use_gpu             Whether to use GPU for training\n  --fast                Whether to use fast mode for tuning params. Only one fold will be used if fast mode is set\n  --seed SEED           Random seed\n  --time_limit TIME_LIMIT\n                        Time limit for optimization\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.vodafone.com/Ahmad-waly/xgbauto",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "autoxgbAUC",
    "package_url": "https://pypi.org/project/autoxgbAUC/",
    "platform": "linux",
    "project_url": "https://pypi.org/project/autoxgbAUC/",
    "project_urls": {
      "Homepage": "https://github.vodafone.com/Ahmad-waly/xgbauto"
    },
    "release_url": "https://pypi.org/project/autoxgbAUC/2.1.0/",
    "requires_dist": [
      "fastapi (==0.70.0)",
      "numpy (==1.21.3)",
      "optuna (==2.10.0)",
      "pyarrow (==6.0.0)",
      "pydantic (==1.8.2)",
      "joblib (==1.2.0)",
      "pandas (==1.3.4)",
      "scikit-learn (==1.0.1)",
      "uvicorn (==0.15.0)",
      "xgboost (==1.5.0)"
    ],
    "requires_python": ">=3.6",
    "summary": "xgbauto: tuning xgboost with optuna, autoxgb with aucpr for binary classification",
    "version": "2.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16502223,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "479b2e79c15d5ed380749d97b7380e70537ea4e303b449310c93adbda0a5b800",
          "md5": "c2874bb2f14f9198777e8d50bb04a121",
          "sha256": "ced9857c5e6970f3ff6cdede5b7b64c27cf3e6cd723b3efaca7f97dc4bd7ae2c"
        },
        "downloads": -1,
        "filename": "autoxgbAUC-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c2874bb2f14f9198777e8d50bb04a121",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 21307,
        "upload_time": "2023-01-18T14:21:31",
        "upload_time_iso_8601": "2023-01-18T14:21:31.270602Z",
        "url": "https://files.pythonhosted.org/packages/47/9b/2e79c15d5ed380749d97b7380e70537ea4e303b449310c93adbda0a5b800/autoxgbAUC-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "13d8f504f5044c3997a4222da5899d8f3098c5124bf8ba0a269d3f97033930fa",
          "md5": "f9f4346c72a0ddc1bfb6c10fee66cb80",
          "sha256": "354754b899e5765a5053de695b97974cca9ec3de5653aca794aef50821ea8dae"
        },
        "downloads": -1,
        "filename": "autoxgbAUC-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f9f4346c72a0ddc1bfb6c10fee66cb80",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 18143,
        "upload_time": "2023-01-18T14:21:38",
        "upload_time_iso_8601": "2023-01-18T14:21:38.324772Z",
        "url": "https://files.pythonhosted.org/packages/13/d8/f504f5044c3997a4222da5899d8f3098c5124bf8ba0a269d3f97033930fa/autoxgbAUC-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "32db1dd5db5206680a6a3d77283f54337aed88949b8c160827885b82b59aa691",
          "md5": "27e736cb18e3d6eb6afe03666bec0de7",
          "sha256": "7c13d0506569cc590cd2c4ec8be0fcad2b56a868fa765a254f6afab8941a944b"
        },
        "downloads": -1,
        "filename": "autoxgbAUC-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "27e736cb18e3d6eb6afe03666bec0de7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 21308,
        "upload_time": "2023-01-18T15:18:50",
        "upload_time_iso_8601": "2023-01-18T15:18:50.685847Z",
        "url": "https://files.pythonhosted.org/packages/32/db/1dd5db5206680a6a3d77283f54337aed88949b8c160827885b82b59aa691/autoxgbAUC-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c75dac9ca51d2b53689b552a4eb35df830fff866a4776afe31226374c3317317",
          "md5": "22426581e65d5fa68bdba081e9f7fa8e",
          "sha256": "4482d1beb88a4ecff743a2c1497884818de2ea1a2f61dcd759255a5d7bbf6a63"
        },
        "downloads": -1,
        "filename": "autoxgbAUC-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "22426581e65d5fa68bdba081e9f7fa8e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 18131,
        "upload_time": "2023-01-18T15:18:56",
        "upload_time_iso_8601": "2023-01-18T15:18:56.511901Z",
        "url": "https://files.pythonhosted.org/packages/c7/5d/ac9ca51d2b53689b552a4eb35df830fff866a4776afe31226374c3317317/autoxgbAUC-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cc20cbec5b66f36f058fe27ae3def1606c186d6405307da854296e56a186023a",
          "md5": "c5657bc4d9450d5499c91223a5d367ba",
          "sha256": "cb67356e1ac7a1119927456be61475355193f4d48a70b79057e4d109409879f6"
        },
        "downloads": -1,
        "filename": "autoxgbAUC-2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c5657bc4d9450d5499c91223a5d367ba",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 21277,
        "upload_time": "2023-01-18T19:55:12",
        "upload_time_iso_8601": "2023-01-18T19:55:12.795620Z",
        "url": "https://files.pythonhosted.org/packages/cc/20/cbec5b66f36f058fe27ae3def1606c186d6405307da854296e56a186023a/autoxgbAUC-2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "64a44db04009347f47ead40f00721884c2bb6b85b3836c601874d22b721e17cc",
          "md5": "69ed437851d625c6218d40d68fdbae54",
          "sha256": "296c544a2e7c3ac9f8ae9ee0617d5640d5817d32dd9707b02b0951a3155bee7c"
        },
        "downloads": -1,
        "filename": "autoxgbAUC-2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "69ed437851d625c6218d40d68fdbae54",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 18161,
        "upload_time": "2023-01-18T19:55:15",
        "upload_time_iso_8601": "2023-01-18T19:55:15.339156Z",
        "url": "https://files.pythonhosted.org/packages/64/a4/4db04009347f47ead40f00721884c2bb6b85b3836c601874d22b721e17cc/autoxgbAUC-2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "41dbbb6330c1079f162bf5a62b1c23847ec5f0544b8eeab0197a4cfe24a6a38c",
          "md5": "c24b67d15ce9b566e22e271110ac0195",
          "sha256": "8df65cd96289a559852e0a9c30a015c1077c3d421db26d9a4a2aa5e8ba66dad5"
        },
        "downloads": -1,
        "filename": "autoxgbAUC-2.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c24b67d15ce9b566e22e271110ac0195",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 21315,
        "upload_time": "2023-01-20T15:08:27",
        "upload_time_iso_8601": "2023-01-20T15:08:27.509559Z",
        "url": "https://files.pythonhosted.org/packages/41/db/bb6330c1079f162bf5a62b1c23847ec5f0544b8eeab0197a4cfe24a6a38c/autoxgbAUC-2.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "abe1eefa62de23d8d8459601d2fc8bc9d7ee8955d9b37f51dea4bb0d48cafabc",
          "md5": "5d02769adeeb1ba88e8d4b80d3515c0a",
          "sha256": "980a61aa6ddeb80e354cc5feca27eaa5e06511e9bddc324f3104a06b65d79fc1"
        },
        "downloads": -1,
        "filename": "autoxgbAUC-2.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5d02769adeeb1ba88e8d4b80d3515c0a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 18149,
        "upload_time": "2023-01-20T15:08:30",
        "upload_time_iso_8601": "2023-01-20T15:08:30.066690Z",
        "url": "https://files.pythonhosted.org/packages/ab/e1/eefa62de23d8d8459601d2fc8bc9d7ee8955d9b37f51dea4bb0d48cafabc/autoxgbAUC-2.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "41dbbb6330c1079f162bf5a62b1c23847ec5f0544b8eeab0197a4cfe24a6a38c",
        "md5": "c24b67d15ce9b566e22e271110ac0195",
        "sha256": "8df65cd96289a559852e0a9c30a015c1077c3d421db26d9a4a2aa5e8ba66dad5"
      },
      "downloads": -1,
      "filename": "autoxgbAUC-2.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c24b67d15ce9b566e22e271110ac0195",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 21315,
      "upload_time": "2023-01-20T15:08:27",
      "upload_time_iso_8601": "2023-01-20T15:08:27.509559Z",
      "url": "https://files.pythonhosted.org/packages/41/db/bb6330c1079f162bf5a62b1c23847ec5f0544b8eeab0197a4cfe24a6a38c/autoxgbAUC-2.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "abe1eefa62de23d8d8459601d2fc8bc9d7ee8955d9b37f51dea4bb0d48cafabc",
        "md5": "5d02769adeeb1ba88e8d4b80d3515c0a",
        "sha256": "980a61aa6ddeb80e354cc5feca27eaa5e06511e9bddc324f3104a06b65d79fc1"
      },
      "downloads": -1,
      "filename": "autoxgbAUC-2.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "5d02769adeeb1ba88e8d4b80d3515c0a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 18149,
      "upload_time": "2023-01-20T15:08:30",
      "upload_time_iso_8601": "2023-01-20T15:08:30.066690Z",
      "url": "https://files.pythonhosted.org/packages/ab/e1/eefa62de23d8d8459601d2fc8bc9d7ee8955d9b37f51dea4bb0d48cafabc/autoxgbAUC-2.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}