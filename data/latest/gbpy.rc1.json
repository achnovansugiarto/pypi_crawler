{
  "info": {
    "author": "Arash Dehghan Banadaki, Srikanth Patala",
    "author_email": "adehgha@ncsu.edu, spatala@ncsu.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "License :: OSI Approved :: GNU General Public License (GPL)",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.0",
      "Topic :: Scientific/Engineering :: Mathematics",
      "Topic :: Scientific/Engineering :: Physics",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Utilities"
    ],
    "description": "**GBpy** is a python package for finding the geometrical properties of a Bicrystal. It includes all the necessary tools for constructing a simulation box for grain boundary simulation.\r\n                \r\n.. image:: https://cdn.rawgit.com/adehgha/Animations/master/anim_csl_dsc.gif\r\n\r\n.. https://raw.githubusercontent.com/adehgha/GBpy/master/GBpy/docs/images/pic.png\r\n        \r\n* GBpy on `GitHub <https://github.com/adehgha/GBpy>`__\r\n* GBpy `Documentation <https://cdn.rawgit.com/adehgha/GBpy/master/GBpy/docs/_build/html/index.html>`__\r\n* GBpy `Tutorials <https://cdn.rawgit.com/adehgha/GBpy/master/GBpy/docs/tutorials/index.html>`__\r\n\r\n.. image:: https://img.shields.io/pypi/v/GBpy.svg\r\n    :target: https://pypi.python.org/pypi/GBpy\r\n    :alt: Latest PyPI version\r\n\r\n     \r\nFunctions:\r\n==========\r\n        \r\n* ``GBpy.find_csl_dsc``, collection of functions for computing the CSL and the DSC lattices of a general bicrystal (general lattices), if the transformation **T** is given.\r\n* ``GBpy.generate_symm_ops``, a function for generating various point group symmetry operations.\r\n* ``GBpy.bp_basis``, collection of functions for calculating the basis vectors of a two-dimensional lattice of an interface.\r\n* ``GBpy.quaternion``, collection of functions for quaternion operations.\r\n* ``GBpy.misorient_fz``, function for finding the unique disorientations in fundamental zone of various crystal point groups.\r\n* ``GBpy.integer_manipulations``, collection of many useful ineteger manipulation functions.\r\n                \r\nand many other useful tools. Please refer to the `documentation <https://cdn.rawgit.com/adehgha/GBpy/master/GBpy/docs/_build/html/index.html>`__ and `tutorials <https://cdn.rawgit.com/adehgha/GBpy/master/GBpy/docs/tutorials/index.html>`__ for detailed description and utility of functions.\r\n                \r\nClasses:\r\n========\r\n                \r\n- ``lattice``: Includes all the crystallographic data required for an element used by the code.\r\n- ``quaternion``: Quaternion construction and operations.\r\n        \r\n        \r\nHow to Use This Package:\r\n========================\r\n1.  **To install the stable version of GBpy:**      \r\n    \r\n    .. code-block:: console\r\n                \r\n        $ pip install GBpy\r\n                                       \r\n                \r\n    *To install the development version of GBpy* Clone the repository:   \r\n        \r\n    .. code-block:: console\r\n                \r\n        $ git clone https://github.com/adehgha/GBpy.git   \r\n             \r\n    and run the setup script.                \t\r\n\r\n    .. code-block:: console     \r\n           \r\n        $ python setup.py install\r\n                   \r\n2.  **Import the package:** \r\n                \r\n    .. code-block:: pycon\r\n                \r\n        >>> import GBpy\r\n                          \r\n3.  **Call the function by using:**\r\n                \r\n    .. code-block:: pycon\r\n                \r\n        >>> GBpy.<name_of_the_function>\r\n                \t\r\n    * for example to find the 2D basis vectors of a plane with Miller indices of (h,k,l):\r\n                \r\n    .. code-block:: pycon\r\n                \r\n        >>> GBpy.bp_basis.bp_basis([h,k,l])\r\n                \r\n4.  **You can also use the tools provided in this package individually by importing the functions separately.** For example use :``from GBpy import <name_of_the_function> as <a_name>``.\r\n\r\n\r\n                \r\nConsult the `documentation <https://cdn.rawgit.com/adehgha/GBpy/master/GBpy/docs/_build/html/index.html>`__ for further details.\r\n        \r\n        \r\nPrerequisites:\r\n==============\r\n                \r\n1. install ``numpy`` from `here. <http://www.numpy.org/>`__\r\n                \r\n2. install ``scipy`` from `here. <http://www.scipy.org/>`__\r\n                \r\n3. install ``setuptools`` from `here. <https://pypi.python.org/pypi/setuptools>`__\r\n                \r\nCite GBpy:\r\n========================\r\n\r\n\"An Efficient Algorithm for Computing the Primitive Bases of a General Lattice Plane\", A. Banadaki, S. Patala, *Journal of Applied Crystallography*, v. 48, 2015, `doi:10.1107/S1600576715004446. <http://scripts.iucr.org/cgi-bin/paper?S1600576715004446>`__\"\r\n\r\n                \r\nCredits:\r\n========\r\nGBpy is written by:\r\n                \r\n* `Srikanth Patala <spatala@ncsu.edu>`__\r\n* `Arash Dehghan Banadaki <adehgha@ncsu.edu>`__\r\n* `Patala Research Group <http://research.mse.ncsu.edu/patala/>`__.\r\n        \r\nCopyright (c) 2015,  Arash Dehghan Banadaki and Srikanth Patala.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "https://github.com/adehgha/GBpy/tarball/0.1.1",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/adehgha/GBpy",
    "keywords": "bicrystallography,interfaces,grain boundaries",
    "license": "License :: GNU-GPL",
    "maintainer": "",
    "maintainer_email": "",
    "name": "GBpy",
    "package_url": "https://pypi.org/project/GBpy/",
    "platform": "any",
    "project_url": "https://pypi.org/project/GBpy/",
    "project_urls": {
      "Download": "https://github.com/adehgha/GBpy/tarball/0.1.1",
      "Homepage": "https://github.com/adehgha/GBpy"
    },
    "release_url": "https://pypi.org/project/GBpy/0.1.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "GBpy is an opensource python package for calculating the geometric properties of interfaces in crystals.",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2149106,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9aafaf7d520ae9b838daacbc851dd87c7e5bd375f9f3e7ed5448a1d1d1a24484",
          "md5": "dd8f58390f68362de1711dd19bd14be5",
          "sha256": "4da66b46e55c23017831da8b8ba5b0e3c02c8d6035bde452b0ac136f7032d4dd"
        },
        "downloads": -1,
        "filename": "GBpy-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "dd8f58390f68362de1711dd19bd14be5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1090446,
        "upload_time": "2014-11-13T23:10:34",
        "upload_time_iso_8601": "2014-11-13T23:10:34.275581Z",
        "url": "https://files.pythonhosted.org/packages/9a/af/af7d520ae9b838daacbc851dd87c7e5bd375f9f3e7ed5448a1d1d1a24484/GBpy-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9aafaf7d520ae9b838daacbc851dd87c7e5bd375f9f3e7ed5448a1d1d1a24484",
        "md5": "dd8f58390f68362de1711dd19bd14be5",
        "sha256": "4da66b46e55c23017831da8b8ba5b0e3c02c8d6035bde452b0ac136f7032d4dd"
      },
      "downloads": -1,
      "filename": "GBpy-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "dd8f58390f68362de1711dd19bd14be5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 1090446,
      "upload_time": "2014-11-13T23:10:34",
      "upload_time_iso_8601": "2014-11-13T23:10:34.275581Z",
      "url": "https://files.pythonhosted.org/packages/9a/af/af7d520ae9b838daacbc851dd87c7e5bd375f9f3e7ed5448a1d1d1a24484/GBpy-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}