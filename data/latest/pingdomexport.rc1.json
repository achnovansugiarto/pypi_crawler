{
  "info": {
    "author": "Eduardo Oliveira",
    "author_email": "me@eduardooliveira.net",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Utilities"
    ],
    "description": "Pingdom Export: Export your pingdom data\n========================================\n\n|Build| |Coverage|\n\n.. |Build| image:: https://travis-ci.org/entering/pingdomexport.svg?branch=master\n    :target: https://travis-ci.org/entering/pingdomexport.svg?branch=master\n\n.. |Coverage| image:: https://coveralls.io/repos/github/entering/pingdomexport/badge.svg?branch=master\n    :target: https://coveralls.io/github/entering/pingdomexport?branch=master\n\nInstallation\n------------\n\nTo install simply\n\n.. code-block:: bash\n\n    $ pip install pingdomexport\n\nConfiguration\n-------------\n\nCheck the `configuration file <https://github.com/entering/pingdomexport/blob/master/config.yml.dist>`_.\n\nPlace the configuration file in any place that seems fit to you. Make sure the user you will use to run pingdom export\nhas read access to the configuration file.\n\nConfiguration access\n--------------------\n\n.. code-block:: yaml\n\n    pingdom_access:\n        username: dummy\n        password: dummy\n        account_email: dummy\n        app_key: dummy\n\nThe username, password and account email should be easy to fill in (is your credentials to log in in pindgom).\n\nTo get your app key, log in on pingdom then go to Integrations > The Pingdom API > Register Application\n\nConfiguration checks\n--------------------\n\n.. code-block:: yaml\n\n    # the checks that you want to export data\n    checks:\n        # 3 strategies supported\n        # all: all checks\n        # include: will only include the ids specified\n        # exclude: all checks except the ids specified\n        strategy: all\n        ids: []\n\nPindgom export allows to export all checks:\n\n.. code-block:: yaml\n\n  checks:\n      strategy: all\n      ids: []\n\nSpecify the checks to export:\n\n.. code-block:: yaml\n\n    checks:\n        strategy: include\n        ids: [12454, 32932]\n\nSpecify the checks to exclude (will export every check except the ones specified):\n\n.. code-block:: yaml\n\n    checks:\n        strategy: exclude\n        ids: [12454]\n\nConfiguration export\n--------------------\n\nPingdom export allows to export the checks and results to mysql, postgres or the stdout.\n\n.. code-block:: yaml\n\n  load:\n      # type: output|mysql|postgres\n      type: output\n      parameters: []\n      # if mysql\n      #parameters:\n      #  db_url: mysql+pymysql://user:password@host/database\n      # if postgres\n      #parameters:\n      #  db_url: postgres://user:password@host/database\n\nIf output:\n\n.. code-block:: yaml\n\n  load:\n      type: output\n      parameters: []\n\nIf mysql:\n\n.. code-block:: yaml\n\n  load:\n      type: mysql\n      parameters:\n          db_url: mysql+pymysql://user:password@host/database\n\nIf posgres:\n\n.. code-block:: yaml\n\n  load:\n      type: postgres\n      parameters:\n          db_url: mysql+pymysql://user:password@host/database\n\nDatabase schema\n---------------\n\nIf you are going to export for database then you need to create the schema upfront:\n\n-  `MySQL <https://github.com/entering/pingdomexport/blob/master/provisioning/roles/mysql/files/schema.sql>`_\n-  `Postgres <https://github.com/entering/pingdomexport/blob/master/provisioning/roles/postgresql/files/schema.sql>`_\n\nDatabase privileges\n-------------------\n\nBoth MySQL and Postgres requires a user with SELECT,INSERT,UPDATE,DELETE permissions to the DB. In case of Postgres the user also requires access to sequences.\n\nRun\n------------\n\nTo list the options available:\n\n.. code-block:: bash\n\n    $ pingdom-run-export --help\n\nExport only checks information:\n\n.. code-block:: bash\n\n    $ pingdom-run-export --config /full/path/to/config.yml --type checks\n\nExport only checks results:\n\n.. code-block:: bash\n\n    $ pingdom-run-export --config /full/path/to/config.yml --type results\n\nExport checks information & results:\n\n.. code-block:: bash\n\n    $ pingdom-run-export --config /full/path/to/config.yml --type all\n\nRun - partial export\n--------------------\n\nBy default the pingdom export will always export the full results. There is optional arguments to allow to specify a time range, eg:\n\n.. code-block:: bash\n\n    $ pingdom-run-export --config /full/path/to/config.yml --type results --checks-from 1465071758 --checks-to 1465158158\n\nBig data\n--------------------\n\nIn case you have multiple checks with months of history, running everything in a single thread will probably take too much time.\n\nYou can use multiple configuration files and run one pingdom export per check. Then just have a crontab running daily and\nuse the checks-from and checks-to.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/entering/pingdomexport",
    "keywords": "pingdom export mysql postgres",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "pingdomexport",
    "package_url": "https://pypi.org/project/pingdomexport/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/pingdomexport/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/entering/pingdomexport"
    },
    "release_url": "https://pypi.org/project/pingdomexport/0.1.2/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Export your pingom data to CSV or database",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2151964,
  "releases": {
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "345027cce63974bc94b3d5dc2a309fcb3c0cb7acc7f00c1b6b9f67b855970326",
          "md5": "4b9f53bc20fed92ee915101642cf27a7",
          "sha256": "7a4734bb68f4b8800ebf52e2201b7d8cda2af69ff6834afb26294c87c758cf51"
        },
        "downloads": -1,
        "filename": "pingdomexport-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4b9f53bc20fed92ee915101642cf27a7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12053,
        "upload_time": "2016-06-05T20:41:37",
        "upload_time_iso_8601": "2016-06-05T20:41:37.331270Z",
        "url": "https://files.pythonhosted.org/packages/34/50/27cce63974bc94b3d5dc2a309fcb3c0cb7acc7f00c1b6b9f67b855970326/pingdomexport-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "345027cce63974bc94b3d5dc2a309fcb3c0cb7acc7f00c1b6b9f67b855970326",
        "md5": "4b9f53bc20fed92ee915101642cf27a7",
        "sha256": "7a4734bb68f4b8800ebf52e2201b7d8cda2af69ff6834afb26294c87c758cf51"
      },
      "downloads": -1,
      "filename": "pingdomexport-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "4b9f53bc20fed92ee915101642cf27a7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12053,
      "upload_time": "2016-06-05T20:41:37",
      "upload_time_iso_8601": "2016-06-05T20:41:37.331270Z",
      "url": "https://files.pythonhosted.org/packages/34/50/27cce63974bc94b3d5dc2a309fcb3c0cb7acc7f00c1b6b9f67b855970326/pingdomexport-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}