{
  "info": {
    "author": "HuangYiwei",
    "author_email": "huanghyw@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# concurrent_log\n支持多进程多线程环境使用的日志处理器\n\n## ConcurrentTimedRotatingFileHandler\n\n### 支持的功能\n1. 按照时间进行切割日志  \n1. 支持多进程多线程环境使用\n\n### 怎么用  \n与标准库`TimedRotatingFileHandler`完全兼容。  \n如果项目已经使用了`TimedRotatingFileHandler`，来进行日志处理，因为引入了多进程机制需要一个支持多进程环境的日志处理器，只需要在\n日志配置界面引入`concurrent_log`模块，然后将`TimedRotatingFileHandler`替换为`ConcurrentTimedRotatingFileHandler`即\n可，其他代码不需要任何改动。\n\n### 压测示例代码\n```python\nimport time\nfrom concurrent.futures import ProcessPoolExecutor, ThreadPoolExecutor\n\nclass ConcurrentTimedRotatingFileHandlerTest:\n    \"\"\"\n    ConcurrentTimedRotatingFileHandler 测试\n    \"\"\"\n\n    def __init__(self):\n        import logging\n        import logging.config\n\n        import concurrent_log\n\n        log_conf = {\n            'version': 1,\n            'formatters': {\n                'default': {\n                    'format': '%(asctime)s - %(process)d-%(threadName)s - '\n                              '%(pathname)s[line:%(lineno)d] - %(levelname)s: %(message)s',\n                    'datefmt': \"%Y-%m-%d %H:%M:%S\"\n                },\n            },\n            'handlers': {\n                'file': {\n                    'level': 'DEBUG',\n                    'class': 'logging.handlers.ConcurrentTimedRotatingFileHandler',\n                    'backupCount': 100,\n                    'when': 's',\n                    'delay': True,\n                    'filename': 'log/test.log',\n                    'encoding': 'utf-8',\n                    'formatter': 'default',\n                }\n            },\n            'root': {\n                'handlers': ['file'],\n                'level': 'DEBUG',\n            },\n        }\n\n        logging.config.dictConfig(log_conf)\n        self.logger = logging.getLogger(__name__)\n\n    def write_log(self, index):\n        self.logger.debug('debug-%s' % index)\n        self.logger.info('info-%s' % index)\n        self.logger.warning('警告-%s' % index)\n        self.logger.error('报错-%s' % index)\n        self.logger.critical('严重-%s' % index)\n\n    def mutil_thread_write_log(self):\n        with ThreadPoolExecutor(100) as thread_pool:\n            for i in range(1000):\n                thread_pool.submit(self.write_log, i).add_done_callback(self._executor_callback)\n\n    def mutil_process_write_log(self):\n        with ProcessPoolExecutor() as process_pool:\n            for i in range(100):\n                process_pool.submit(self.mutil_thread_write_log).add_done_callback(self._executor_callback)\n\n    def _executor_callback(self, worker):\n        worker_exception = worker.exception()\n        if worker_exception:\n            print(\"Worker return exception: \", self.worker_exception)\n\n\nclass TimedRotatingFileHandlerTest:\n    \"\"\"\n    TimedRotatingFileHandler 测试\n    \"\"\"\n\n    def __init__(self):\n        import logging\n        import logging.config\n\n        log_conf = {\n            'version': 1,\n            'disable_existing_loggers': False,\n            'formatters': {\n                'default': {\n                    'format': '%(asctime)s - %(process)d-%(threadName)s - '\n                              '%(pathname)s[line:%(lineno)d] - %(levelname)s: %(message)s',\n                    'datefmt': \"%Y-%m-%d %H:%M:%S\"\n                },\n            },\n            'handlers': {\n                'file': {\n                    'level': 'DEBUG',\n                    'class': 'logging.handlers.TimedRotatingFileHandler',\n                    'backupCount': 100,\n                    'when': 's',\n                    'delay': True,\n                    'filename': 'log2/test.log',\n                    'encoding': 'utf-8',\n                    'formatter': 'default',\n                }\n            },\n            'root': {\n                'handlers': ['file'],\n                'level': 'DEBUG',\n            },\n        }\n\n        import os\n        file_path = os.path.split(log_conf.get(\"handlers\").get(\"file\").get(\"filename\"))[0]\n        if not os.path.exists(file_path):\n            os.makedirs(file_path)\n        logging.config.dictConfig(log_conf)\n        self.logger = logging.getLogger(__name__)\n\n    def write_log(self, index):\n        self.logger.debug('debug-%s' % index)\n        self.logger.info('info-%s' % index)\n        self.logger.warning('警告-%s' % index)\n        self.logger.error('报错-%s' % index)\n        self.logger.critical('严重-%s' % index)\n\n    def mutil_thread_write_log(self):\n        with ThreadPoolExecutor(100) as thread_pool:\n            for i in range(100000):\n                thread_pool.submit(self.write_log, i).add_done_callback(self._executor_callback)\n\n    def _executor_callback(self, worker):\n        worker_exception = worker.exception()\n        if worker_exception:\n            print(\"Worker return exception: \", self.worker_exception)\n\n\nif __name__ == \"__main__\":\n    print(\"50W日志写入测试\")\n    begin_time = time.time()\n    # 多进程写入日志，进程数与CPU核心数一致，使用文件锁实现进程并发控制，防止脏数据以及日志丢失\n    # 每个进程100个线程共需写入五千行日志，由于GIL原因，并发只存在一个线程，但是会存在线程上下文切换，使用线程锁防止脏数据和日志丢失\n    ConcurrentTimedRotatingFileHandlerTest().mutil_process_write_log()\n    use_time = time.time() - begin_time\n    print(\"ConcurrentTimedRotatingFileHandler 耗时:%s秒\" % use_time)\n    begin_time = time.time()\n    # 每个进程100个线程共需写入所有日志，由于GIL原因，并发只存在一个线程，但是会存在线程上下文切换，同样需要锁机制防止脏数据和日志丢失\n    TimedRotatingFileHandlerTest().mutil_thread_write_log()\n    use_time = time.time() - begin_time\n    print(\"TimedRotatingFileHandler 耗时:%s秒\" % use_time)\n```\n\n### 压测结果\n经验证，日志内容完整，按照时间切割正确  \n\n**环境**  \nCPU：Intel® Core™ i9-7940X  \n内存：64G  \n磁盘：三星 970Pro 1T  \n\n**输出**  \n50W日志写入测试  \nConcurrentTimedRotatingFileHandler 耗时:84.82415437698364秒  \nTimedRotatingFileHandler 耗时:100.73775053024292秒",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/huanghyw/concurrent_log",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "concurrent-log",
    "package_url": "https://pypi.org/project/concurrent-log/",
    "platform": "",
    "project_url": "https://pypi.org/project/concurrent-log/",
    "project_urls": {
      "Homepage": "https://github.com/huanghyw/concurrent_log"
    },
    "release_url": "https://pypi.org/project/concurrent-log/1.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "多进程并发日志处理器",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6374556,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "77c07ccf4f6eb642e2d5ea5de92a512908c2e651bcb14af012d941ad20a58282",
          "md5": "960aad1def355bc72adafa7c83c5ee70",
          "sha256": "d49081399b998d787355f08001d87ca507fdaafe6199721cf0d389ea3446e478"
        },
        "downloads": -1,
        "filename": "concurrent_log-1.0.0-py3.7.egg",
        "has_sig": false,
        "md5_digest": "960aad1def355bc72adafa7c83c5ee70",
        "packagetype": "bdist_egg",
        "python_version": "3.7",
        "requires_python": ">=3.6",
        "size": 8180,
        "upload_time": "2019-12-29T07:57:30",
        "upload_time_iso_8601": "2019-12-29T07:57:30.329226Z",
        "url": "https://files.pythonhosted.org/packages/77/c0/7ccf4f6eb642e2d5ea5de92a512908c2e651bcb14af012d941ad20a58282/concurrent_log-1.0.0-py3.7.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "933de293ca13aca4e211c7e867e7478adb4ac54b4a6f9943d768efc52003fd7a",
          "md5": "a5c67714864abd276301fb6abe70511b",
          "sha256": "0ff31c055a1808ad0c922e71ffdc915348db92e02f30df1b67e0e149434862f8"
        },
        "downloads": -1,
        "filename": "concurrent_log-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a5c67714864abd276301fb6abe70511b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5654,
        "upload_time": "2019-12-29T07:57:31",
        "upload_time_iso_8601": "2019-12-29T07:57:31.818954Z",
        "url": "https://files.pythonhosted.org/packages/93/3d/e293ca13aca4e211c7e867e7478adb4ac54b4a6f9943d768efc52003fd7a/concurrent_log-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "740777798c6caa7426fa569b996a24ce5dfe6c3c133c90530b5a600ca437e5b1",
          "md5": "7574be51e984475716856c451080bacb",
          "sha256": "94e006d53bb1c235a66b7edf47ccd520a1d392c7f1bedb68ceec16469a4f61ce"
        },
        "downloads": -1,
        "filename": "concurrent_log-1.0.1-py3.7.egg",
        "has_sig": false,
        "md5_digest": "7574be51e984475716856c451080bacb",
        "packagetype": "bdist_egg",
        "python_version": "3.7",
        "requires_python": ">=3.6",
        "size": 8379,
        "upload_time": "2019-12-30T09:07:53",
        "upload_time_iso_8601": "2019-12-30T09:07:53.814260Z",
        "url": "https://files.pythonhosted.org/packages/74/07/77798c6caa7426fa569b996a24ce5dfe6c3c133c90530b5a600ca437e5b1/concurrent_log-1.0.1-py3.7.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "55ba464ffcb0c1042050cd6dd68981c2534b498fe28a908738f2a97268e7eba9",
          "md5": "812535a244e91ae9e65024bcda0b8911",
          "sha256": "cc4dff5b68c6510483908b19e3dd75372c5509851a77002e184e0448f8b3e37b"
        },
        "downloads": -1,
        "filename": "concurrent_log-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "812535a244e91ae9e65024bcda0b8911",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5889,
        "upload_time": "2019-12-30T09:07:55",
        "upload_time_iso_8601": "2019-12-30T09:07:55.411279Z",
        "url": "https://files.pythonhosted.org/packages/55/ba/464ffcb0c1042050cd6dd68981c2534b498fe28a908738f2a97268e7eba9/concurrent_log-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "740777798c6caa7426fa569b996a24ce5dfe6c3c133c90530b5a600ca437e5b1",
        "md5": "7574be51e984475716856c451080bacb",
        "sha256": "94e006d53bb1c235a66b7edf47ccd520a1d392c7f1bedb68ceec16469a4f61ce"
      },
      "downloads": -1,
      "filename": "concurrent_log-1.0.1-py3.7.egg",
      "has_sig": false,
      "md5_digest": "7574be51e984475716856c451080bacb",
      "packagetype": "bdist_egg",
      "python_version": "3.7",
      "requires_python": ">=3.6",
      "size": 8379,
      "upload_time": "2019-12-30T09:07:53",
      "upload_time_iso_8601": "2019-12-30T09:07:53.814260Z",
      "url": "https://files.pythonhosted.org/packages/74/07/77798c6caa7426fa569b996a24ce5dfe6c3c133c90530b5a600ca437e5b1/concurrent_log-1.0.1-py3.7.egg",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "55ba464ffcb0c1042050cd6dd68981c2534b498fe28a908738f2a97268e7eba9",
        "md5": "812535a244e91ae9e65024bcda0b8911",
        "sha256": "cc4dff5b68c6510483908b19e3dd75372c5509851a77002e184e0448f8b3e37b"
      },
      "downloads": -1,
      "filename": "concurrent_log-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "812535a244e91ae9e65024bcda0b8911",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 5889,
      "upload_time": "2019-12-30T09:07:55",
      "upload_time_iso_8601": "2019-12-30T09:07:55.411279Z",
      "url": "https://files.pythonhosted.org/packages/55/ba/464ffcb0c1042050cd6dd68981c2534b498fe28a908738f2a97268e7eba9/concurrent_log-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}