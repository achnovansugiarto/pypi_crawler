{
  "info": {
    "author": "Richard Davis",
    "author_email": "crashvb@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# pytest-docker-apache-fixtures\n\n## Overview\n\nPytest fixtures to instantiate and utilize local apache (httpd) docker containers, using [lovely-pytest-docker](https://pypi.org/project/lovely-pytest-docker) and [docker-py](https://pypi.org/project/docker-py), for testing.\n\n## Getting Started\n\nUpdate <tt>setup.py</tt> to include:\n\n```python\nfrom distutils.core import setup\n\nsetup(\n\ttests_require=[\"pytest-docker-apache-fixtures\"]\n)\n```\n\nAll fixtures should be automatically included via the <tt>pytest11</tt> entry point.\n```python\nimport requests\nimport pytest\nfrom pytest_docker_apache_fixtures import ApacheInsecure, ApacheSecure  # Optional, for typing\n\ndef test_apache_secure(apache_secure: ApacheSecure):\n    response = requests.head(f\"https://{apache_secure.endpoint}/\",\n        headers=apache_secure.auth_header,\n        verify=str(apache_secure.cacerts),\n    )\n    assert response.status_code == 200\n\ndef test_apache_insecure(apache_insecure: ApacheInsecure):\n    response = requests.head(f\"http://{apache_insecure.endpoint}/\")\n    assert response.status_code == 200\n```\n\nThe `push_image` mark can optionally be added to stage images in the apache prior to testing. See [Markers](#markers) for details.\n## Compatibility\n\n* Tested with python 3.8\n\n## Installation\n### From [pypi.org](https://pypi.org/project/pytest-docker-apache-fixtures/)\n\n```\n$ pip install pytest_docker_apache_fixtures\n```\n\n### From source code\n\n```bash\n$ git clone https://github.com/crashvb/pytest-docker-apache-fixtures\n$ cd pytest-docker-apache-fixtures\n$ virtualenv env\n$ source env/bin/activate\n$ python -m pip install --editable .[dev]\n```\n\n## <a name=\"fixtures\"></a>Fixtures\n\n### <a name=\"apache_auth_header\"></a> apache_auth_header\n\nRetrieves an HTTP basic authentication header that is populated with credentials that can access the secure apache service. The credentials are retrieved from the [apache_password](#apache_password) and [apache_username](#apache_username) fixtures. This fixture is used to replicate docker images into the secure apache service.\n\n### <a name=\"apache_cacerts\"></a> apache_cacerts\n\nLocates a user-defined CA trust store (<tt>tests/cacerts</tt>) to use to verify connections to the secure apache service. If one cannot be located, a temporary trust store is created containing certificates from <tt>certifi</tt> and the [apache_certs](#apache_certs) fixture. This fixture is used to instantiate the secure apache service.\n\n### <a name=\"apache_certs\"></a> apache_certs\n\nReturns the paths of the self-signed certificate authority certificate, certificate, and private key that are used by the secure apache service. This fixture is used to instantiate the secure apache service.\n\n#### NamedTuple Fields\n\nThe following fields are defined in the tuple provided by this fixture:\n\n* **ca_certificate** - Path to the self-signed certificate authority certificate.\n* **ca_private_key** - Path to the self-signed certificate authority private key.\n* **certificate** - Path to the certificate.\n* **private_key** - Path to the private key.\n\nTyping is provided by `pytest_docker_apache_fixtures.ApacheCerts`.\n\n### <a name=\"apache_hwpasswd\"></a> apache_htpasswd\n\nProvides the path to a htpasswd file that is used by the secure apache service. If a user-defined htpasswd file (<tt>tests/htpasswd</tt>) can be located, it is used. Otherwise, a temporary htpasswd file is created using credentials from the [apache_password](#apache_password) and [apache_username](#apache_username) fixtures. This fixture is used to instantiate the secure apache ervice.\n\n### <a name=\"apache_apachecfg_insecure\"></a> apache_apachecfg_insecure\n\nProvides the path to an insecure apache.cfg file that is used by the insecure apache service. If a user-defined apache.cfg file (<tt>tests/apache.insecure.cfg</tt>) can be located, it is used. Otherwise, an embedded configuration is copied to a temporary location and returned. This fixture is used to instantiate the insecure apache service.\n\n### <a name=\"apache_apachecfg_secure\"></a> apache_apachecfg_secure\n\nProvides the path to a secure apache.cfg file that is used by the secure apache service. If a user-defined apache.cfg file (<tt>tests/apache.secure.cfg</tt>) can be located, it is used. Otherwise, an embedded configuration is copied to a temporary location and returned. This fixture is used to instantiate the secure apache service.\n\n### <a name=\"apache_insecure\"></a> apache_insecure\n\nConfigures and instantiates a apache service without TLS or authentication.\n\n```python\nimport requests\nfrom pytest_docker_apache_fixtures import ApacheInsecure  # Optional, for typing\n\ndef test_apache_insecure(apache_insecure: ApacheInsecure):\n    response = requests.head(f\"http://{apache_insecure.endpoint}/\")\n    assert response.status_code == 200\n```\n\n#### NamedTuple Fields\n\nThe following fields are defined in the tuple provided by this fixture:\n\n* **docker_compose** - Path to the fully instantiated docker-compose configuration.\n* **endpoint** - Endpoint of the insecure apache service.\n* **endpoint_name** - Endpoint of the insecure apache service, by service name.\n* **service_name** - Name of the service within the docker-compose configuration.\n\nTyping is provided by `pytest_docker_apache_fixtures.ApacheInsecure`.\n\n### <a name=\"apache_password\"></a> apache_password\n\nProvides a generated password to use for authentication to the secure apache service. This fixture is used to replicate docker images into the secure apache service.\n\n### <a name=\"apache_secure\"></a> apache_secure\n\nConfigures and instantiates a TLS enabled apache service with HTTP basic authorization.\n\n```python\nimport requests\nfrom pytest_docker_apache_fixtures import ApacheSecure  # Optional, for typing\n\ndef test_apache_secure(apache_secure: ApacheSecure):\n    response = requests.head(\n        f\"https://{apache_secure.endpoint}/\",\n        headers=apache_secure.auth_header,\n        verify=str(apache_secure.cacerts),\n    )\n    assert response.status_code == 200\n```\n\n#### NamedTuple Fields\n\nThe following fields are defined in the tuple provided by this fixture:\n\n* **auth_header** - from [apache_auth_header](#apache_auth_header).\n* **cacerts** - from [apache_cacerts](#apache_cacerts).\n* **certs** - from [apache_certs](#apache_certs).\n* **docker_compose** - Path to the fully instantiated docker-compose configuration.\n* **endpoint** - Endpoint of the secure apache service.\n* **endpoint_name** - Endpoint of the secure apache service, by service name.\n* **htpasswd** - from [apache_htpasswd](#apache_htpasswd)\n* **password** - from [apache_password](#apache_password).\n* **service_name** - Name of the service within the docker-compose configuration.\n* **ssl_context** - from [apache_ssl_context](#apache_ssl_context).\n* **username** - from [apache_username](#apache_username).\n\nTyping is provided by `pytest_docker_apache_fixtures.ApacheSecure`.\n\n### <a name=\"apache_ssl_context\"></a> apache_ssl_context\n\nProvides an SSL context containing the CA trust store from the  [apache_cacerts](#apache_cacerts) fixture. This fixture is used to instantiate the secure apache service.\n\n### <a name=\"apache_username\"></a> apache_username\n\nProvides a generated username to use for authentication to the secure apache service. This fixture is used to replicate docker images into the secure apache service.\n\n### <a name=\"pdhf_docker_compose_insecure\"></a> pdhf_docker_compose_insecure\n\nThis fixture uses the `docker_compose_files` fixture to locate a user-defined docker-compose configuration file (typically <tt>tests/docker-compose.yml</tt>) that contains the <tt>pytest-docker-apache-insecure</tt> service. If one cannot be located, an embedded configuration is copied to a temporary location and returned. This fixture is used to instantiate the insecure apache service. The configuration will be treated as a template; the <tt>$PATH_APACHECFG</tt> token will be populated with the absolute path provided by the [apache_apachecfg](#apache_apachecfg) fixture.\n\n### <a name=\"pdhf_docker_compose_secure\"></a> pdhf_docker_compose_secure\n\nThis fixture uses the `docker_compose_files` fixture to locate a user-defined docker-compose configuration file (typically <tt>tests/docker-compose.yml</tt>) that contains the <tt>pytest-docker-apache-secure</tt> service. If one cannot be located, an embedded configuration is copied to a temporary location and returned. This fixture is used to instantiate the secure apache service. The configuration will be treated as a template; the <tt>$PATH_CERTIFICATE</tt>, <tt>$PATH_HTPASSWD</tt>, <tt>$PATH_KEY</tt>, and <tt>$PATH_APACHECFG</tt> tokens will be populated with the absolute paths provided by the [apache_certs](#apache_certs), [apache_htpasswd](#apache_htpasswd), and [apache_apachecfg](#apache_apachecfg) fixtures, as appropriate.\n\n## <a name=\"enumerated_fixtures\"></a>Enumerated Fixtures\n\nIt is possible to instantiate multiple apache instances using the corresponding enumerated fixtures. All [fixtures](#fixtures) listed above have _*_list_ (e.g. `apache_secure` -> `apache_secure_list`) versions that will return enumerated lists of corresponding data type.\n\nFor example:\n\n```python\nimport requests\nfrom typing import List  # Optional, for typing\nfrom pytest_docker_apache_fixtures import ApacheSecure  # Optional, for typing\n\ndef test_apache_secure_list(apache_secure_list: List[ApacheSecure]):\n    for apache_secure in apache_secure_list:\n        response = requests.head(\n            f\"https://{apache_secure.endpoint}/\",\n            headers=apache_secure.auth_header,\n            verify=str(apache_secure.cacerts),\n        )\n        assert response.status_code == 200\n```\n\nIt is possible to use both singular and enumerated fixtures within the same test context; however, the same values will be returned for the singular fixture as the first enumerated list value (i.e. apache_secure == apache_secure_list[0]). To avoid complications with lower layers, mainly docker-compose, and to allow for this interchangeability, caching is used internally.\n\nBy default, the scale factor of the enumerated instances is set to one (n=1). This value can be changed by overriding the `pdhf_scale_factor` fixture, as follows:\n\n```python\nimport pytest\n\n@pytest.fixture(scope=\"session\")\ndef pdhf_scale_factor() -> int:\n    return 4\n```\n\nThis fixture will be used to scale both the insecure and secure docker registries.\n\n## <a name=\"limitations\"></a>Limitations\n\n1. All the fixtures provided by this package are <tt>session</tt> scoped; and will only be executed once per test execution.\n2. At most 10 insecure and 10 secure apache instances are supported using the embedded docker compose.\n\n## Development\n\n[Source Control](https://github.com/crashvb/pytest-docker-apache-fixtures)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/crashvb/pytest-docker-apache-fixtures",
    "keywords": "apache apache2 docker fixtures httpd pytest",
    "license": "GNU General Public License v3.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pytest-docker-apache-fixtures",
    "package_url": "https://pypi.org/project/pytest-docker-apache-fixtures/",
    "platform": "",
    "project_url": "https://pypi.org/project/pytest-docker-apache-fixtures/",
    "project_urls": {
      "Bug Reports": "https://github.com/crashvb/pytest-docker-apache-fixtures/issues",
      "Homepage": "https://github.com/crashvb/pytest-docker-apache-fixtures",
      "Source": "https://github.com/crashvb/pytest-docker-apache-fixtures"
    },
    "release_url": "https://pypi.org/project/pytest-docker-apache-fixtures/0.1.0/",
    "requires_dist": [
      "bcrypt",
      "certifi",
      "docker-compose",
      "lovely-pytest-docker",
      "pyopenssl",
      "pytest",
      "black ; extra == 'dev'",
      "pylint ; extra == 'dev'",
      "twine ; extra == 'dev'",
      "wheel ; extra == 'dev'"
    ],
    "requires_python": "",
    "summary": "Pytest fixtures for testing with apache2 (httpd).",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12912684,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9658b40fc79fe0037e77d7919166b39628f4e76eeaf50a8006861a867e1078db",
          "md5": "ece014acc76809350c0f6e8c40e00ccd",
          "sha256": "4246ad202b2d6b4dee8078d674dea35efaf9d963c4c3cff58e1805b55ac90bd1"
        },
        "downloads": -1,
        "filename": "pytest_docker_apache_fixtures-0.1.0-py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "ece014acc76809350c0f6e8c40e00ccd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 23284,
        "upload_time": "2022-02-16T19:34:08",
        "upload_time_iso_8601": "2022-02-16T19:34:08.274096Z",
        "url": "https://files.pythonhosted.org/packages/96/58/b40fc79fe0037e77d7919166b39628f4e76eeaf50a8006861a867e1078db/pytest_docker_apache_fixtures-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5ce496924782c8a95ab517a952b08310eea101d478eebda5eb33c722f5e07bfd",
          "md5": "8289be6793694d2c3b98a9e713006cdf",
          "sha256": "baf7de7acf1a482887a1ac4cb6af5a2da9e4c3803de080558bde82d1d6c9f549"
        },
        "downloads": -1,
        "filename": "pytest_docker_apache_fixtures-0.1.0.tar.gz",
        "has_sig": true,
        "md5_digest": "8289be6793694d2c3b98a9e713006cdf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17190,
        "upload_time": "2022-02-16T19:34:09",
        "upload_time_iso_8601": "2022-02-16T19:34:09.919329Z",
        "url": "https://files.pythonhosted.org/packages/5c/e4/96924782c8a95ab517a952b08310eea101d478eebda5eb33c722f5e07bfd/pytest_docker_apache_fixtures-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9658b40fc79fe0037e77d7919166b39628f4e76eeaf50a8006861a867e1078db",
        "md5": "ece014acc76809350c0f6e8c40e00ccd",
        "sha256": "4246ad202b2d6b4dee8078d674dea35efaf9d963c4c3cff58e1805b55ac90bd1"
      },
      "downloads": -1,
      "filename": "pytest_docker_apache_fixtures-0.1.0-py3-none-any.whl",
      "has_sig": true,
      "md5_digest": "ece014acc76809350c0f6e8c40e00ccd",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 23284,
      "upload_time": "2022-02-16T19:34:08",
      "upload_time_iso_8601": "2022-02-16T19:34:08.274096Z",
      "url": "https://files.pythonhosted.org/packages/96/58/b40fc79fe0037e77d7919166b39628f4e76eeaf50a8006861a867e1078db/pytest_docker_apache_fixtures-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5ce496924782c8a95ab517a952b08310eea101d478eebda5eb33c722f5e07bfd",
        "md5": "8289be6793694d2c3b98a9e713006cdf",
        "sha256": "baf7de7acf1a482887a1ac4cb6af5a2da9e4c3803de080558bde82d1d6c9f549"
      },
      "downloads": -1,
      "filename": "pytest_docker_apache_fixtures-0.1.0.tar.gz",
      "has_sig": true,
      "md5_digest": "8289be6793694d2c3b98a9e713006cdf",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 17190,
      "upload_time": "2022-02-16T19:34:09",
      "upload_time_iso_8601": "2022-02-16T19:34:09.919329Z",
      "url": "https://files.pythonhosted.org/packages/5c/e4/96924782c8a95ab517a952b08310eea101d478eebda5eb33c722f5e07bfd/pytest_docker_apache_fixtures-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}