{
  "info": {
    "author": "Semih Gunel",
    "author_email": "gunelsemih@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# DeepFly3D\n<a href=\"https://github.com/psf/black\"><img alt=\"Code style: black\" src=\"https://img.shields.io/badge/code%20style-black-000000.svg\"></a>\n[![License: GPL v3](https://img.shields.io/badge/License-GPLv3-blue.svg)](https://www.gnu.org/licenses/gpl-3.0)\n[![PyPI version](https://badge.fury.io/py/df3d.svg)](https://badge.fury.io/py/df3d)\n\n![Alt text](../images/pose3D.gif?raw=true \"Df3d Teaser\")\n\nDeepFly3D is a PyTorch and PyQT5 implementation of 2D-3D tethered Drosophila pose estimation. It aims to provide an interface for pose estimation and to permit further correction of 2D pose estimates, which are automatically converted to 3D pose.\n\nDeepFly3D does not require a calibration pattern, it enforces geometric constraints using pictorial structures, which corrects most of the errors, and the remaining errors are automatically detected can be dealt manually with GUI.\n\n# Table of Contents\n- [Installing](#installing)\n  * [Installing with pip](#installing-with-pip)\n  * [Old CUDA Drivers](#old-cuda-drivers)\n  * [Installing from the source](#installing-from-the-source)\n- [Data Structure](#data-structure)\n- [Basic Usage](#basic-usage)\n- [Advanced Usage](#advanced-usage)\n- [Python Interface](#python-interface)\n- [Videos](#videos)\n- [Output](#output)\n  * [Points2d](#points2d)\n  * [Camera Ordering](#camera-ordering)\n  * [Heatmap Confidence](#heatmap-confidence)\n- [Running GUI](#running-gui)\n- [Version History](#version-history)\n\nExtras:\n* If you are interested in the online annotation tool instead: [DeepFly3DAnnotation](https://github.com/NeLy-EPFL/DeepFly3DAnnotation)\n* To see the dataset used in the paper: [Dataverse](https://dataverse.harvard.edu/dataverse/DeepFly3D)\n\n\n# Installing\n\n## Installing with pip\nCreate a new anaconda environment, and pip install df3d package.\n```bash\nconda create -n df3d python=3.6\nconda activate df3d\npip install df3d\n```\n\n## Old CUDA Drivers\n**Only in case your cuda driver is not up-to-date**, additionally you might need to explicitly install cudatoolkit before pip installing df3d:\n\n```bash\nconda install pytorch torchvision torchaudio cudatoolkit=\"YOUR_CUDA_VERSION\" -c pytorch\n```\n\n## Installing from the source\nDeepFly3D requires Python3, Anaconda environment and CUDA drivers for installation. It is __only tested on Ubuntu and MacOS__. First, clone the repository:\n\n```\ngit clone https://github.com/NeLy-EPFL/DeepFly3D\ncd DeepFly3D\n```\nThen, run create a conda environment with\n```\nconda create -n df3d python=3.6\n```\nwhich will create a new python environment. Then, activate the environment.\n```\nconda activate df3d\n```\nOnce this is done  you can install the **df3d** package with the following command,\n\n```\npip install -e .\n```\n\nwhich uses the setup.py function to create the package.\n\nMake sure you also have installed the CUDA drivers compatible with your GPU, otherwise it is not possible to make 2D predictions. You can check how to install CUDA drivers here: https://developer.nvidia.com/cuda-downloads\n\n\n# Data Structure\n\nThe inteded usage of DeepFly3D is through command-line-intarface (CLI).\ndf3d-cli assumes there are videos or images in this format under the folder. \nif your path /your/image/path has images or videos, df3d-cli will run 2D pose estimation, calibration and triangulation and will save 2d pose, 3d pose and calibration parameters under the folder /your/image/path/df3d.\n\nIdealy you would have images or videos under ```images/``` folder, with the specific naming convention:\n```\n.\n+-- images/\n|   +-- camera_0_img_0.jpg\n|   +-- camera_1_img_0.jpg\n|   +-- camera_2_img_0.jpg\n|   +-- camera_3_img_0.jpg\n|   +-- camera_4_img_0.jpg\n|   +-- camera_5_img_0.jpg\n|   +-- camera_6_img_0.jpg\n...\n```\nor \n\n```\n.\n+-- images\n|   +-- camera_0.mp4\n|   +-- camera_1.mp4\n|   +-- camera_2.mp4\n|   +-- camera_3.mp4\n|   +-- camera_4.mp4\n|   +-- camera_5.mp4\n|   +-- camera_6.mp4\n```\n\nIn case of mp4 files, df3d will first expand them into images using ffmpeg. Please check the sample data for a real exampe: https://github.com/NeLy-EPFL/DeepFly3D/tree/master/sample/test\n\n# Basic Usage\n\nThe basic usage is like this.\n```bash\ndf3d-cli /your/image/path \\\n         --order 0 1 2 3 4 5 6 \n```\n\ncamera order stands for the selection of cameras. The default camera ordering (0 1 2 3 4 5 6) stands for this. In case you have some other order, then you need to  tell which order.\n\n\nOriginally. \n\n![](https://github.com/NeLy-EPFL/DeepFly3D/blob/dev/images/camera_order.png)\n\n\nThen if you have the following order, your\n![image](https://user-images.githubusercontent.com/20509861/150675023-099f3d24-3c99-47bf-a2de-e2aa3665fdc9.png)\n\n\n\nSo for example, if your data looks like this, then your order should be 6 5 4 3 2 1 0.\n![image](https://user-images.githubusercontent.com/20509861/150674985-c0035ab5-2b55-4dd0-8ffe-fc364857dae7.png)\n\n\n# Advanced Usage\n\n```bash\nusage: df3d-cli [-h] [-v] [-vv] [-d] [--output-folder OUTPUT_FOLDER] [-r] [-f]\n                [-o] [-n NUM_IMAGES_MAX]\n                [-order [CAMERA_IDS [CAMERA_IDS ...]]] [--video-2d]\n                [--video-3d] [--skip-pose-estimation]\n                INPUT\n\nDeepFly3D pose estimation\n\npositional arguments:\n  INPUT                 Without additional arguments, a folder containing\n                        unlabeled images.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -v, --verbose         Enable info output (such as progress bars)\n  -vv, --verbose2       Enable debug output\n  -d, --debug           Displays the argument list for debugging purposes\n  --output-folder OUTPUT_FOLDER\n                        The name of subfolder where to write results\n  -r, --recursive       INPUT is a folder. Successively use its subfolders\n                        named 'images/'\n  -f, --from-file       INPUT is a text-file, where each line names a folder.\n                        Successively use the listed folders.\n  -o, --overwrite       Rerun pose estimation and overwrite existing pose\n                        results\n  -n NUM_IMAGES_MAX, --num-images-max NUM_IMAGES_MAX\n                        Maximal number of images to process.\n  -order [CAMERA_IDS [CAMERA_IDS ...]], --camera-ids [CAMERA_IDS [CAMERA_IDS ...]]\n                        Ordering of the cameras provided as an ordered list of\n                        ids. Example: 0 1 4 3 2 5 6.\n  --video-2d            Generate pose2d videos\n  --video-3d            Generate pose3d videos\n  --skip-pose-estimation\n                        Skip 2D and 3D pose estimation\n```\n\nTherefore, you can create advanced queries in df3d-cli, for example:\n\n```bash\ndf3d-cli -f /path/to/text.txt    \\  # process each line from the text file \n         -r                      \\  # recursively search for images folder under each line of the text line\n         --order 0 1 2 3 4 5 6   \\  # set the camera order\n         -n 100                  \\  # process only the first 100 images \n         --output-folder results \\  # write results under  /your/image/path/results instead of  /your/image/path/df3d\n         --vv                    \\  # will print agressivelly, for debugging purposes\n         --skip-pose-estimation  \\  # will not run 2d pose estimation, instead will do calibration, triangulation and will save results\n         --video-2d              \\  # will make 2d video for each folder \n         --video-3d              \\  # will make 3d video for each folder\n```\n\nTo test df3d-cli, you run it on a folder for only 100 images, make videos, and print agressivelly for debugging:\n\n```bash \ndf3d-cli /path/to/images/ -n 100 -vv -order 0 1 2 3 4 5 6\n```\n\n# Python Interface\nOptionally, you can also use df3d on directly python. \n\n```python\nfrom df3d.core import Core\nfrom df3d import video\n\ncore = Core(input_folder='../sample/test/', num_images_max=100, output_subfolder='df3d_py', camera_ordering=[0,1,2,3,4,5,6])\ncore.pose2d_estimation()\ncore.calibrate_calc(min_img_id=0, max_img_id=100)\n\n# save df3d_resultt  file under '../sample/test/df3d_py' \ncore.save()\n\n# make videos\nvideo.make_pose2d_video(\n    core.plot_2d, core.num_images, core.input_folder, core.output_folder\n)\nvideo.make_pose3d_video(\n    core.get_points3d(),\n    core.plot_2d,\n    core.num_images,\n    core.input_folder,\n    core.output_folder,\n)\n```\nIn general following functions are available for Core module:\n```python\nclass Core:\n    def __init__(self, input_folder, num_images_max):  # 9 lines\n\tdef setup_cameras(self):  # 38 lines\n    \n    # attribute access\n    @property def input_folder(self):  # 2 lines\n    @property def output_folder(self):  # 2 lines\n    @property def image_shape(self):  # 2 lines\n    @property def number_of_joints(self):  # 3 lines\n    def has_pose(self):  # 1 lines\n    def has_heatmap(self):  # 1 lines\n    def has_calibration(self):  # 4 lines\n    \n    # interactions with pose-estimation\n    def update_camera_ordering(self, cidread2cid):  # 12 lines\n    def pose2d_estimation(self):  # 14 lines\n    def next_error(self, img_id):  # 1 lines\n    def prev_error(self, img_id):  # 1 lines\n    def calibrate_calc(self, min_img_id, max_img_id):  # 35 lines\n    def nearest_joint(self, cam_id, img_id, x, y):  # 10 lines\n    def move_joint(self, cam_id, img_id, joint_id, x, y):  # 10 lines\n\n    def save_calibration(self):  # 3 lines\n    def save_pose(self):  # 63 lines\n    def save_corrections(self):  # 1 line\n    \n    # visualizations\n    def plot_2d(self, cam_id, img_id, with_corrections=False, joints=[]):  # 33 lines\n    def plot_heatmap(self, cam_id, img_id, joints=[]):  # 5 lines\n    def get_image(self, cam_id, img_id):  # 4 lines\n    \n    # private helper methods\n    def next_error_in_range(self, range_of_ids):  # 6 lines\n    def get_joint_reprojection_error(self, img_id, joint_id, camNet):  # 11 lines\n    def joint_has_error(self, img_id, joint_id):  # 4 lines\n    def solve_bp_for_camnet(self, img_id, camNet):  # 29 lines\n ```\n    \n# Videos \nUsing the flag --video-2d with df3d-cli will create the following video:\n![Alt text](../images/out.gif?raw=true \"Title\")\n\nUsing the flag --video-3d with df3d-cli will create the following video:\n![Alt text](../images/out3d.gif?raw=true \"Title\")\n\n# Output\n\ndf3d-cli saves results under df3d_result.pk file. You can read it using,\n```python\nresult_path = '../sample/test/df3d/df3d_result*.pkl'\nd = pickle.load(open(glob.glob(pr_path)[0], 'rb'))\n```\nThis will read a dictionary with the following keys:\n```python\nd.keys()\n>>> dict_keys([0, 1, 2, 3, 4, 5, 6, 'points3d', 'points2d', 'points3d_wo_procrustes', 'camera_ordering', 'heatmap_confidence'])\n```\n## Points2D\nYou can also visualize which keypoints in results belongs to which keypoints on the animal:\n```python\nimport matplotlib.pyplot as plt\n\nimage_path = '../sample/test/camera_{cam_id}_img_{img_id}.jpg'\npr_path = '../sample/test/df3d/df3d_result*.pkl'\n\nplt.imshow(plt.imread(image_path.format(cam_id=0,img_id=0)))\nplt.axis('off')\nfor i in range(19):\n    x, y = d['points2d'][0, 0][i, 1] * 960, d['points2d'][0, 0][i, 0] * 480\n    plt.scatter(x, y, c='blue', s=5)\n    plt.text(x, y, f'{i}', c='red')\n```\n\n\n<p align=\"center\">\n  <img width=\"480\" height=\"240\" src=\"../images/named_keypoints_left.png\">\n  <img width=\"480\" height=\"240\" src=\"../images/named_keypoints_right.png\">\n</p>\n\n\n## Camera Ordering\n\nThe same camera ordering as given input using --order flag in cli. \n```python\nd[\"camera_ordering\"]\n>>> array([0, 1, 2, 3, 4, 5, 6])\n```\n\n## Heatmap Confidence\nStacked Hourglass confidence values for each joint predicted. Given an unnormalized posterior distribution heatmap H over the pixels, we take the argmax_{h, w} H for the final prediction and H[h, w] for the confidence level.\n\n\n## Calibration\n\ndf3d_result files also have the calculated calibration parameters for each camera. Each calibration section includes \n1. rotation matrix R\n2. translation vector tvec,\n3. intrinsic matrix intr,\n4. distortion parameters distort.\n\n```python\ncalib = {0: {'R': array([[ 0.90885957,  0.006461  , -0.41705219],\n         [ 0.01010426,  0.99924554,  0.03750006],\n         [ 0.41697983, -0.0382963 ,  0.90810859]]),\n  'tvec': array([1.65191596e+00, 2.22582670e-02, 1.18353733e+02]),\n  'intr': array([[1.60410e+04, 0.00000e+00, 2.40000e+02],\n         [0.00000e+00, 1.59717e+04, 4.80000e+02],\n         [0.00000e+00, 0.00000e+00, 1.00000e+00]]),\n  'distort': array([0., 0., 0., 0., 0.])},\n 1: {'R': array([[ 0.59137248,  0.02689833, -0.80594979],\n         [-0.00894927,  0.9996009 ,  0.02679478],\n         [ 0.80634887, -0.00863303,  0.59137718]]),\n  'tvec': array([ 1.02706542e+00, -9.25820468e-02,  1.18251732e+02]),\n  'intr': array([[1.60410e+04, 0.00000e+00, 2.40000e+02],\n         [0.00000e+00, 1.59717e+04, 4.80000e+02],\n         [0.00000e+00, 0.00000e+00, 1.00000e+00]]),\n  'distort': array([0., 0., 0., 0., 0.])},\n}\n```\n\n# Running GUI\n\nGUI is primarily used for correcting the false 2D pose estimation results in the 'Correction' mode. Your changes will be saved under df3d folder and will be used for the final df3d_result file. \n\n**Currently, you can only use GUI after running the df3d on the cli on the same folder.**\n\nAfter installing the dependencies we can initialize the GUI using the command line entry point:\n\n![Alt text](../images/gui.gif?raw=true \"Title\")\n\n```\ndf3d ./data/test/ 15\n```\nThe second argument sets the image folder, while the third argument sets the upper bound for the images, in case you only want to process the subset of images.\n\nThis should start the GUI:\n\n![Alt text](../images/gui.png?raw=true \"Title\")\n\n\nyou can optionally remove `/FULL/PATH_FOLDER` and `NUM_IMAGES`, in which case pop-up apperas the select the folder. \n\n<img src=\"../images/pop-up.png\" width=\"480\">\n\n\nAfter completing pose estimation in the cli, you can open the pose mode:\n\n![Alt text](../images/pose.png?raw=true \"Title\")\n\n\n# Development\n\nDeepFly3D consists of 3 pip packages:\n- DeepFly3D: https://pypi.org/project/df3d/0.56/\n- PyBundleAdjustment: https://pypi.org/project/pyba/\n- Drosophila2D Pose: https://pypi.org/project/df2d/\n\nThe master branch of the DeepFly3D package is kept up-to-date with the last version of the pip package. Development is done under dev branch. Before pushing changes to the master branch, make sure all test cases are passing. You can run the tests using python test.py. Unittests make sure several scenarios can be processed using cli without failing.\n\n\n# References\n\n```\n@inproceedings{Gunel19DeepFly3D,\n  author    = {Semih G{\\\"u}nel and\n               Helge Rhodin and\n               Daniel Morales and\n               João Compagnolo and\n               Pavan Ramdya and\n               Pascal Fua},\n  title     = {DeepFly3D, a deep learning-based approach for 3D limb and appendage tracking in tethered, adult Drosophila},\n  bookTitle = {eLife},\n  doi       = {10.7554/eLife.48571},\n  year      = {2019}\n}\n```\n\n# Version History\n### Changes in 0.5\n- Major internal rewrite.\n\n### Changes in 0.4\n\n- Using the CLI, the output folder can be changed using the `--output-folder` flag\n- CLI and GUI now use the same pose estimation code, so changes will automatically propagate to both\n- Minor tweaks in the GUI layout, functionality kept unchanged\n\n### Changes in 0.3\n- Results are saved in df3d folder instead of the image folder.\n- Much faster startup time. \n- Cameras are automatically ordered using Regular Expressions.\n- CLI improvements. Now it includes 3D pose.\n\n### Changes in 0.2\n- Changing name from deepfly3d to df3d\n- Adding cli interface with df3d-cli\n- Removing specific dependencies for numpy and scipy\n- Removing L/R buttons, so you can see all the data at once\n- Removing the front camera\n- Faster startup time, less time spent on searching for the image folder\n- Better notebooks for plotting\n- Adding procrustes support. Now all the output is registere to template skeleton.\n- Bug fixes in CameraNetwork. Now calibration with arbitrary camera sequence is possible.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/NeLy-EPFL/DeepFly3D",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "df3d",
    "package_url": "https://pypi.org/project/df3d/",
    "platform": "",
    "project_url": "https://pypi.org/project/df3d/",
    "project_urls": {
      "Homepage": "https://github.com/NeLy-EPFL/DeepFly3D"
    },
    "release_url": "https://pypi.org/project/df3d/0.57/",
    "requires_dist": [
      "PyQt5",
      "sklearn",
      "scipy (<=1.2.1)",
      "scikit-video",
      "scikit-image",
      "matplotlib",
      "opencv-python (==4.2.0.32)",
      "tqdm",
      "colorama",
      "progress",
      "pytorch-lightning",
      "torchvision",
      "pyba (==0.13)",
      "df2d (==0.15)"
    ],
    "requires_python": "",
    "summary": "GUI and 3D pose estimation pipeline for tethered Drosophila.",
    "version": "0.57",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12690338,
  "releases": {
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3f88e07b7babec3e3c4708cc5592c8ae5dd2ea7ad73738325c22bad84bc061c5",
          "md5": "dd65e14bc89dc9cf75cc7c0945056c50",
          "sha256": "e018ce92143e6bc2977d57511edc3a6bb52a7bb19b55723f5f86813efe9e3eb4"
        },
        "downloads": -1,
        "filename": "df3d-0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dd65e14bc89dc9cf75cc7c0945056c50",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 32995,
        "upload_time": "2021-12-20T15:50:14",
        "upload_time_iso_8601": "2021-12-20T15:50:14.004326Z",
        "url": "https://files.pythonhosted.org/packages/3f/88/e07b7babec3e3c4708cc5592c8ae5dd2ea7ad73738325c22bad84bc061c5/df3d-0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c6b253db91c772b3849e7d76387b56ef9c3287011aba0bb1d8e826937856d0c2",
          "md5": "84e3c4c6464829eb146ea4e6b9082fab",
          "sha256": "32436227ce1af1f9a2f57c0eac1b7b2e8606292c613b3f248fc515e4b110a880"
        },
        "downloads": -1,
        "filename": "df3d-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "84e3c4c6464829eb146ea4e6b9082fab",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28894,
        "upload_time": "2021-12-20T15:50:15",
        "upload_time_iso_8601": "2021-12-20T15:50:15.945110Z",
        "url": "https://files.pythonhosted.org/packages/c6/b2/53db91c772b3849e7d76387b56ef9c3287011aba0bb1d8e826937856d0c2/df3d-0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.51": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ff7d0f931a34821cdd6c90ea217d5f94afba6db3179b6cde56aa2ba0b8b4ada7",
          "md5": "bfdec90a1575ac92d70026fefdfb42a2",
          "sha256": "f63cea24696ffbe3cf83e76971969ee76b312385c6d9b0bc6a1a57ef8c2365e2"
        },
        "downloads": -1,
        "filename": "df3d-0.51-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bfdec90a1575ac92d70026fefdfb42a2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 33007,
        "upload_time": "2021-12-20T16:18:09",
        "upload_time_iso_8601": "2021-12-20T16:18:09.018464Z",
        "url": "https://files.pythonhosted.org/packages/ff/7d/0f931a34821cdd6c90ea217d5f94afba6db3179b6cde56aa2ba0b8b4ada7/df3d-0.51-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "931c142afe13b89cec19a39d51ef68550857d5f68c13ff39b77f2fb8301f846e",
          "md5": "ab0c5d968fb0ef938e50cace3e7c2adb",
          "sha256": "55b3dbeef75a40b72006ca97bf9aadc648f7ea25e8d9c5a5e58f0222ef95d326"
        },
        "downloads": -1,
        "filename": "df3d-0.51.tar.gz",
        "has_sig": false,
        "md5_digest": "ab0c5d968fb0ef938e50cace3e7c2adb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 31121,
        "upload_time": "2021-12-20T16:18:10",
        "upload_time_iso_8601": "2021-12-20T16:18:10.420511Z",
        "url": "https://files.pythonhosted.org/packages/93/1c/142afe13b89cec19a39d51ef68550857d5f68c13ff39b77f2fb8301f846e/df3d-0.51.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.52": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4d1ef460e2d0ff5f1165e9e9af7dea36a8406dfebaf00d1adc4922445b36c1b2",
          "md5": "f9bd432d5bacf816dad46c611cabdeb7",
          "sha256": "93489f5a5bce028111c069d0d47bdc5a8585064f7dbd67428544c6eb072824bc"
        },
        "downloads": -1,
        "filename": "df3d-0.52-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f9bd432d5bacf816dad46c611cabdeb7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 33019,
        "upload_time": "2021-12-20T16:47:47",
        "upload_time_iso_8601": "2021-12-20T16:47:47.684910Z",
        "url": "https://files.pythonhosted.org/packages/4d/1e/f460e2d0ff5f1165e9e9af7dea36a8406dfebaf00d1adc4922445b36c1b2/df3d-0.52-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f248086e9b13bfe9efbff84a668de6ccb4481a2722b910a918a939461dc5e31",
          "md5": "f5fa7b890d82a75642b1bca8531dc094",
          "sha256": "e2d74d1ffeddb200f2b5d694e1a855708ea95c90f9ec1f481329154e0a719af3"
        },
        "downloads": -1,
        "filename": "df3d-0.52.tar.gz",
        "has_sig": false,
        "md5_digest": "f5fa7b890d82a75642b1bca8531dc094",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 31125,
        "upload_time": "2021-12-20T16:47:48",
        "upload_time_iso_8601": "2021-12-20T16:47:48.999728Z",
        "url": "https://files.pythonhosted.org/packages/2f/24/8086e9b13bfe9efbff84a668de6ccb4481a2722b910a918a939461dc5e31/df3d-0.52.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.53": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d5e9a76bf489a4f9c58ae0700c65bf6f6402eeb9143cfd93ab79699bda9c1566",
          "md5": "309f4eda1a7d55cd87277611ce47c535",
          "sha256": "391cd2ff5a328ba0443c4d7e033d9647924043a2921b6c37270ea41f6d3e41ab"
        },
        "downloads": -1,
        "filename": "df3d-0.53-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "309f4eda1a7d55cd87277611ce47c535",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 33016,
        "upload_time": "2021-12-20T17:34:00",
        "upload_time_iso_8601": "2021-12-20T17:34:00.207317Z",
        "url": "https://files.pythonhosted.org/packages/d5/e9/a76bf489a4f9c58ae0700c65bf6f6402eeb9143cfd93ab79699bda9c1566/df3d-0.53-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "581c9b9894b8775f1f3a39d7f1acfb888aebd0384c13d00fc7cbc4e84a32179c",
          "md5": "939726ff1ded990436cb6a4b02680922",
          "sha256": "ebd4e1d3da90c3d71b690c50f9aef49bddb758b2d3b3f323709872d587e0c790"
        },
        "downloads": -1,
        "filename": "df3d-0.53.tar.gz",
        "has_sig": false,
        "md5_digest": "939726ff1ded990436cb6a4b02680922",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 50206,
        "upload_time": "2021-12-20T17:34:02",
        "upload_time_iso_8601": "2021-12-20T17:34:02.093293Z",
        "url": "https://files.pythonhosted.org/packages/58/1c/9b9894b8775f1f3a39d7f1acfb888aebd0384c13d00fc7cbc4e84a32179c/df3d-0.53.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.54": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dd3a5bdfd35a7056ff070a2351234ae3ee82e852d50c8e4c029e174abb2ee544",
          "md5": "c6aa2ff4c84638a623db21dcf34d162e",
          "sha256": "26ab66cd33627f2ed3a0194fb28bbd1ba598db2b33b33712e087165e7f16fccf"
        },
        "downloads": -1,
        "filename": "df3d-0.54-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c6aa2ff4c84638a623db21dcf34d162e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 53920,
        "upload_time": "2021-12-20T17:56:45",
        "upload_time_iso_8601": "2021-12-20T17:56:45.921980Z",
        "url": "https://files.pythonhosted.org/packages/dd/3a/5bdfd35a7056ff070a2351234ae3ee82e852d50c8e4c029e174abb2ee544/df3d-0.54-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "32baefac9fb6714c0a80966e3aa12d2fbcc91cad387eeb75f1a4cdfdb9ece5f5",
          "md5": "c5d2bb3435f56108617abd6ee8f688b6",
          "sha256": "85b80df76fbbbbe1607bbf2c45aeca4137aacb67ab879287437692b05f8cdcb9"
        },
        "downloads": -1,
        "filename": "df3d-0.54.tar.gz",
        "has_sig": false,
        "md5_digest": "c5d2bb3435f56108617abd6ee8f688b6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 50226,
        "upload_time": "2021-12-20T17:56:47",
        "upload_time_iso_8601": "2021-12-20T17:56:47.846295Z",
        "url": "https://files.pythonhosted.org/packages/32/ba/efac9fb6714c0a80966e3aa12d2fbcc91cad387eeb75f1a4cdfdb9ece5f5/df3d-0.54.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.55": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5e57c232c9b66188345855651831f91d3cdb97399fc08ab67ccfb2d51a0df838",
          "md5": "5bae5382e75d6c595fd402d01757608f",
          "sha256": "d59b69894d64242475476fcbd96863c08cf1cec7287a22a60db25110791cea86"
        },
        "downloads": -1,
        "filename": "df3d-0.55-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5bae5382e75d6c595fd402d01757608f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 50817,
        "upload_time": "2022-01-20T10:24:42",
        "upload_time_iso_8601": "2022-01-20T10:24:42.121868Z",
        "url": "https://files.pythonhosted.org/packages/5e/57/c232c9b66188345855651831f91d3cdb97399fc08ab67ccfb2d51a0df838/df3d-0.55-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e8fb8dcda9248cd5d670ebc123007f6b8ed6cd53128238e59a71adc745758515",
          "md5": "bb8e877f919a20fef0504a4d69f810b2",
          "sha256": "fe467974f76d6fe014f70c8d811013f430438cff9e4871375b1839ebfaae4e88"
        },
        "downloads": -1,
        "filename": "df3d-0.55.tar.gz",
        "has_sig": false,
        "md5_digest": "bb8e877f919a20fef0504a4d69f810b2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 47676,
        "upload_time": "2022-01-20T10:24:44",
        "upload_time_iso_8601": "2022-01-20T10:24:44.097459Z",
        "url": "https://files.pythonhosted.org/packages/e8/fb/8dcda9248cd5d670ebc123007f6b8ed6cd53128238e59a71adc745758515/df3d-0.55.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.56": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "deb0c7b2a8ec3b3e8ff7d53877e89677eb5caf39a121a0748eeadd9883a18da9",
          "md5": "547957c307597237fd178f4ef617430f",
          "sha256": "d216dff497a78684aecd48764584a8834bf17465a347d68930d6d59673a843da"
        },
        "downloads": -1,
        "filename": "df3d-0.56-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "547957c307597237fd178f4ef617430f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 51114,
        "upload_time": "2022-01-22T18:35:08",
        "upload_time_iso_8601": "2022-01-22T18:35:08.074008Z",
        "url": "https://files.pythonhosted.org/packages/de/b0/c7b2a8ec3b3e8ff7d53877e89677eb5caf39a121a0748eeadd9883a18da9/df3d-0.56-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "58ce58793400fb41626948a407785ceefd04ddd2d0726f5150ce048533be25b2",
          "md5": "b0a7cf2f4e25dbaab844eeb489d094e7",
          "sha256": "aaeaf31ff1177faad54facb9ab0c9af128ef3694458092d198ed3dd2cb98a1ce"
        },
        "downloads": -1,
        "filename": "df3d-0.56.tar.gz",
        "has_sig": false,
        "md5_digest": "b0a7cf2f4e25dbaab844eeb489d094e7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 47913,
        "upload_time": "2022-01-22T18:35:09",
        "upload_time_iso_8601": "2022-01-22T18:35:09.694548Z",
        "url": "https://files.pythonhosted.org/packages/58/ce/58793400fb41626948a407785ceefd04ddd2d0726f5150ce048533be25b2/df3d-0.56.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.57": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5a2916a91050ed63e0963e6b5bf56fd2dbf99082586b36b2721a5e8f50e305c0",
          "md5": "cb21c454d02af40fc02cefbe0ddc8c9d",
          "sha256": "5297713a16a63dab4da5c69d189a0bd8b80274d8dc408947df25ba3fe4c7fa90"
        },
        "downloads": -1,
        "filename": "df3d-0.57-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cb21c454d02af40fc02cefbe0ddc8c9d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 54567,
        "upload_time": "2022-01-25T18:22:01",
        "upload_time_iso_8601": "2022-01-25T18:22:01.039402Z",
        "url": "https://files.pythonhosted.org/packages/5a/29/16a91050ed63e0963e6b5bf56fd2dbf99082586b36b2721a5e8f50e305c0/df3d-0.57-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3f1a7dfa3d2a10edf161b1bcf05100b6d0d52a8e846aa15d0287e7d3148e071a",
          "md5": "b1c88750fc18b39aac45fa780bd1e704",
          "sha256": "d8f3d399b573507636cabfb34267e77ee24428c973e189baf4b20b2dcb4af1ca"
        },
        "downloads": -1,
        "filename": "df3d-0.57.tar.gz",
        "has_sig": false,
        "md5_digest": "b1c88750fc18b39aac45fa780bd1e704",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 51645,
        "upload_time": "2022-01-25T18:22:03",
        "upload_time_iso_8601": "2022-01-25T18:22:03.492792Z",
        "url": "https://files.pythonhosted.org/packages/3f/1a/7dfa3d2a10edf161b1bcf05100b6d0d52a8e846aa15d0287e7d3148e071a/df3d-0.57.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5a2916a91050ed63e0963e6b5bf56fd2dbf99082586b36b2721a5e8f50e305c0",
        "md5": "cb21c454d02af40fc02cefbe0ddc8c9d",
        "sha256": "5297713a16a63dab4da5c69d189a0bd8b80274d8dc408947df25ba3fe4c7fa90"
      },
      "downloads": -1,
      "filename": "df3d-0.57-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "cb21c454d02af40fc02cefbe0ddc8c9d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 54567,
      "upload_time": "2022-01-25T18:22:01",
      "upload_time_iso_8601": "2022-01-25T18:22:01.039402Z",
      "url": "https://files.pythonhosted.org/packages/5a/29/16a91050ed63e0963e6b5bf56fd2dbf99082586b36b2721a5e8f50e305c0/df3d-0.57-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3f1a7dfa3d2a10edf161b1bcf05100b6d0d52a8e846aa15d0287e7d3148e071a",
        "md5": "b1c88750fc18b39aac45fa780bd1e704",
        "sha256": "d8f3d399b573507636cabfb34267e77ee24428c973e189baf4b20b2dcb4af1ca"
      },
      "downloads": -1,
      "filename": "df3d-0.57.tar.gz",
      "has_sig": false,
      "md5_digest": "b1c88750fc18b39aac45fa780bd1e704",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 51645,
      "upload_time": "2022-01-25T18:22:03",
      "upload_time_iso_8601": "2022-01-25T18:22:03.492792Z",
      "url": "https://files.pythonhosted.org/packages/3f/1a/7dfa3d2a10edf161b1bcf05100b6d0d52a8e846aa15d0287e7d3148e071a/df3d-0.57.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}