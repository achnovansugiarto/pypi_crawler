{
  "info": {
    "author": "Ish West",
    "author_email": "optimistcli@yandex.kz",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Ish West Python 3 Toolbox\n\nA collection of random handy tools.\n\n## Table of Contents\n\n- [Module iwp3tb.ancestors](#module-iwp3tbancestors)\n  - [Example](#example)\n  - [Class Ancestors](#class-ancestors)\n    - [Parameters](#parameters)\n- [Module iwp3tb.multiton](#module-iwp3tbmultiton)\n  - [Concept](#concept)\n  - [Examples](#examples)\n    - [Basic Multiton](#basic-multiton)\n    - [Custom Multiton](#custom-multiton)\n    - [Singleton](#singleton)\n  - [Function implementation](#function-implementation)\n  - [Function implementation_named](#function-implementation_named)\n  - [Function multiton](#function-multiton)\n  - [Function singleton](#function-singleton)\n  - [Class MultitonError](#class-multitonerror)\n    - [Ancestors](#ancestors)\n    - [Descendants](#descendants)\n  - [Class NoRegistrarParent](#class-noregistrarparent)\n    - [Ancestors](#ancestors-1)\n  - [Class AlreadyHasRegistrarParent](#class-alreadyhasregistrarparent)\n    - [Ancestors](#ancestors-2)\n  - [Class RegistrarAlreadyHasAttribute](#class-registraralreadyhasattribute)\n    - [Ancestors](#ancestors-3)\n- [Tools](#tools)\n  - [Docs generator](#docs-generator)\n    - [Pdoc Virtual Environment](#pdoc-virtual-environment)\n    - [Pdoc Templates](#pdoc-templates)\n  - [Unit Tests](#unit-tests)\n\n\n## Module iwp3tb.ancestors\n\nA handy iterator through a class' custom ancestors.\n### Example\n```python\nfrom iwp3tb import Ancestors\n\nfrom andere.plek import Oma\n\nclass Gran():\n    pass\n\nclass Dad(Gran):\n    pass\n\nclass Mom(Oma):\n    pass\n\nclass Son(Dad, Mom):\n    pass\n\nfor cls in Ancestors(Son):\n    print(cls.__name__)\n\n# prints out:\n# Son\n# Dad\n# Gran\n# Mom\n# Oma\n```\n\n### Class Ancestors\n\n`Ancestors(a_class: type, a_include_self: bool = True)`\n\nAn iterator for non-builtin ancestors of a class\n\nGoes recursively through all custom (i.e. not builtin) classes that\nthe base class inherits from. The base class itself comes first in the \niteration otherwise the order is unpredictable. Pass False as a second \nargument to the constructor to avoid including the base class in the \niteration.\n#### Parameters\n```a_class``` type\n\nThe base class, who's ancestors we want to iterate through\n\n```a_include_self``` bool, optional\n\nIf True the base class itself is included in the iteration,\notherwise immedeatly proceeds to base class' ancestors. Defaults\nto True\n\n## Module iwp3tb.multiton\n\nA set of handy decorators for my beloved Singleton and Multiton design patterns.\n### Concept\nA multiton here is an abstract class, that has a finite number of \nimplementations. Each implementation is instantiated just once and this\ninstance is made available as an attribute of the parent multiton \nclass.\n\nA singleton is basically a multiton that has only one implementation. \nThus no need to separate the abstract class from private \nimplementation.\n\nThis approach allows for very private implementations while \nonly the common interface becomes public.\n### Examples\n#### Basic Multiton\n\n```python\nfrom iwp3tb import multiton, implementation\n\n@multiton\nclass PowerRaiser():\n    def raise_to_power(self, x: float) -> float:\n        # This is an abstract method.\n        # Implementations should realise it.\n        raise Exception('You should have implemented this!')\n\n@implementation\nclass Second(PowerRaiser):\n    def raise_to_power(self, x):\n        return x * x\n\n@implementation\nclass Third(PowerRaiser):\n    def raise_to_power(self, x):\n        return x * x * x\n\nprint(PowerRaiser.Second.raise_to_power(3))\n# prints out:\n# 9\n\nprint(PowerRaiser.Third.raise_to_power(3))\n# prints out:\n# 27\n```\n\n#### Custom Multiton\n\nArbitrary instance names can be used.\n\n```python\nfrom iwp3tb import multiton, implementation_named\n\n@multiton\nclass PowerRaiser():\n    def raise_to_power(self, x: float) -> float:\n        # This is an abstract method.\n        # Implementations should realise it.\n        raise Exception('You should have implemented this!')\n\n@implementation_named('power2')\nclass Second(PowerRaiser):\n    def raise_to_power(self, x):\n        return x * x\n\n@implementation_named('power3')\nclass Third(PowerRaiser):\n    def raise_to_power(self, x):\n        return x * x * x\n\nprint(PowerRaiser.power2.raise_to_power(3))\n# prints out:\n# 9\n\nprint(PowerRaiser.power3.raise_to_power(3))\n# prints out:\n# 27\n```\n\n#### Singleton\n\n```python\nfrom iwp3tb import singleton\n\n@singleton\nclass Squarer():\n    def to_square(self, x: float) -> float:\n        return x * x\n\nprint(Squarer.instance.to_square(3))\n# prints out:\n# 9\n```\n\n\n### Function implementation\n\n`implementation(cls)`\n\nClass decorator that registers an implementation with a multiton \nancestor class. Class name is used for the implementation instance name. \nThe class name must not conflict with any of the multition attributes.\n\n\n### Function implementation_named\n\n`implementation_named(a_name)`\n\nClass decorator that registers an implementation with a multiton \nancestor class using a custom instance name. The class name must not \nconflict with any of the multition attributes.\n\n\n### Function multiton\n\n`multiton(cls)`\n\nClass decorator for multiton. A multiton class should have no multition \nor singleton ancestors.\n\n\n### Function singleton\n\n`singleton(cls)`\n\nClass decorator for singleton. A singleton class should have no \nmultition or singleton ancestors.\n\n### Class MultitonError\n\n`MultitonError(a_string)`\n\nCommon base class for multiton fatal errors.\n\n#### Ancestors\n\n* builtins.Exception\n* builtins.BaseException\n\n#### Descendants\n\n* iwp3tb.multiton.AlreadyHasRegistrarParent\n* iwp3tb.multiton.NoRegistrarParent\n* iwp3tb.multiton.RegistrarAlreadyHasAttribute\n\n### Class NoRegistrarParent\n\n`NoRegistrarParent(a_class)`\n\nAn error raised if a class is decorated as an implementation but it has no \nmultiton parent.\n\n```python\nfrom iwp3tb import implementation\n\n@implementation\nclass BadImplementation():\n    pass\n# Raises NoRegistrarParent\n```\n\n#### Ancestors\n\n* iwp3tb.multiton.MultitonError\n* builtins.Exception\n* builtins.BaseException\n\n### Class AlreadyHasRegistrarParent\n\n`AlreadyHasRegistrarParent(a_class, a_registrar)`\n\nAn error raised if a class is decorated as an multiton but it already has a \nmultiton parent.\n\n```python\nfrom iwp3tb import multiton\n\n@multiton\nclass GoodMultiton():\n    pass\n\n@multiton\nclass BadMultiton(GoodMultiton):\n    pass\n# Raises AlreadyHasRegistrarParent\n```\n\n#### Ancestors\n\n* iwp3tb.multiton.MultitonError\n* builtins.Exception\n* builtins.BaseException\n\n### Class RegistrarAlreadyHasAttribute\n\n`RegistrarAlreadyHasAttribute(a_class, a_registrar, a_name)`\n\nAn error raised if a naming conflict happens while registering an implementation \nwith a multiton.\n\n```python\nfrom iwp3tb import multiton, implementation, implementation_named\n\n@multiton\nclass GoodMultiton():\n    pass\n\n@implementation\nclass GoodImplementation(GoodMultiton):\n    pass\n\n@implementation_named('GoodImplementation')\nclass BadImplementation(GoodMultiton):\n    pass\n# Raises RegistrarAlreadyHasAttribute\n```\n\n#### Ancestors\n\n* iwp3tb.multiton.MultitonError\n* builtins.Exception\n* builtins.BaseException\n\n\n## Tools\n\n### Docs generator\n\n`gendocs.sh`\n\nGenerates html documentation from source files using \n[pdoc](https://pdoc3.github.io/pdoc/) and saves it to `docs/` dir. Also \ncalls `cook_combined_md.py` to generate MarkDown version of the documentation \nand then inserts it into `README.md` (this file).\n\n#### Pdoc Virtual Environment\n\nIf you point the `PDOC_PYENV` environment variable to a Python venv with pdoc \ninstalled in it then all documentation generation will take place in this \nvirtual environment.\n\n#### Pdoc Templates\n\nTemplates from `pdoc_templates/` are used to generate documentation. \nAlternatively you can set `PDOC_TEMPLATES` environment variable to point to an\nalternative templates dir.\n\n### Unit Tests\n\n`runtests.sh`\n\nRuns unit tests.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/optimistiCli/ishwest_py3_toolbox",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "iwp3tb",
    "package_url": "https://pypi.org/project/iwp3tb/",
    "platform": "",
    "project_url": "https://pypi.org/project/iwp3tb/",
    "project_urls": {
      "Homepage": "https://github.com/optimistiCli/ishwest_py3_toolbox"
    },
    "release_url": "https://pypi.org/project/iwp3tb/0.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Ish West Python 3 Toolbox",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8114075,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0a7c15c95ecfd28f070adc6b1ef2a53ccc8b991628fd1869d6182cc9f9b99a63",
          "md5": "5d90633029b5567225904169f58fe19d",
          "sha256": "d7887751ada9ff23045b181430e9e48cba1fbd0f335f0ea9b517179fc8a53dbe"
        },
        "downloads": -1,
        "filename": "iwp3tb-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5d90633029b5567225904169f58fe19d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 9689,
        "upload_time": "2020-09-04T15:05:08",
        "upload_time_iso_8601": "2020-09-04T15:05:08.655494Z",
        "url": "https://files.pythonhosted.org/packages/0a/7c/15c95ecfd28f070adc6b1ef2a53ccc8b991628fd1869d6182cc9f9b99a63/iwp3tb-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a93c3db5ee881a3ddabb9ddf59557a3936ca2fc41d401d34cdf5cadd714965d",
          "md5": "406b62995b35ce97e7c4fcefcc1ff41c",
          "sha256": "d7003f9cc9e546341a7a857a29c8a47f709d06930c63b789b184d86da651c394"
        },
        "downloads": -1,
        "filename": "iwp3tb-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "406b62995b35ce97e7c4fcefcc1ff41c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 7331,
        "upload_time": "2020-09-04T15:05:11",
        "upload_time_iso_8601": "2020-09-04T15:05:11.057461Z",
        "url": "https://files.pythonhosted.org/packages/9a/93/c3db5ee881a3ddabb9ddf59557a3936ca2fc41d401d34cdf5cadd714965d/iwp3tb-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0a7c15c95ecfd28f070adc6b1ef2a53ccc8b991628fd1869d6182cc9f9b99a63",
        "md5": "5d90633029b5567225904169f58fe19d",
        "sha256": "d7887751ada9ff23045b181430e9e48cba1fbd0f335f0ea9b517179fc8a53dbe"
      },
      "downloads": -1,
      "filename": "iwp3tb-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5d90633029b5567225904169f58fe19d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 9689,
      "upload_time": "2020-09-04T15:05:08",
      "upload_time_iso_8601": "2020-09-04T15:05:08.655494Z",
      "url": "https://files.pythonhosted.org/packages/0a/7c/15c95ecfd28f070adc6b1ef2a53ccc8b991628fd1869d6182cc9f9b99a63/iwp3tb-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9a93c3db5ee881a3ddabb9ddf59557a3936ca2fc41d401d34cdf5cadd714965d",
        "md5": "406b62995b35ce97e7c4fcefcc1ff41c",
        "sha256": "d7003f9cc9e546341a7a857a29c8a47f709d06930c63b789b184d86da651c394"
      },
      "downloads": -1,
      "filename": "iwp3tb-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "406b62995b35ce97e7c4fcefcc1ff41c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 7331,
      "upload_time": "2020-09-04T15:05:11",
      "upload_time_iso_8601": "2020-09-04T15:05:11.057461Z",
      "url": "https://files.pythonhosted.org/packages/9a/93/c3db5ee881a3ddabb9ddf59557a3936ca2fc41d401d34cdf5cadd714965d/iwp3tb-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}