{
  "info": {
    "author": "hfpython",
    "author_email": "hfpython@headfirstlabs.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "This is Python version 3.5.2\r\n============================\r\n\r\nCopyright (c) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011,\r\n2012, 2013, 2014, 2015, 2016 Python Software Foundation.  All rights reserved.\r\n\r\nPython 3.x is a new version of the language, which is incompatible with the\r\n2.x line of releases.  The language is mostly the same, but many details,\r\nespecially how built-in objects like dictionaries and strings work,\r\nhave changed considerably, and a lot of deprecated features have finally\r\nbeen removed.\r\n\r\n\r\nBuild Instructions\r\n------------------\r\n\r\nOn Unix, Linux, BSD, OSX, and Cygwin:\r\n\r\n    ./configure\r\n    make\r\n    make test\r\n    sudo make install\r\n\r\nThis will install Python as python3.\r\n\r\nYou can pass many options to the configure script; run \"./configure --help\" to\r\nfind out more.  On OSX and Cygwin, the executable is called python.exe;\r\nelsewhere it's just python.\r\n\r\nOn Mac OS X, if you have configured Python with --enable-framework, you should\r\nuse \"make frameworkinstall\" to do the installation.  Note that this installs\r\nthe Python executable in a place that is not normally on your PATH, you may\r\nwant to set up a symlink in /usr/local/bin.\r\n\r\nOn Windows, see PCbuild/readme.txt.\r\n\r\nIf you wish, you can create a subdirectory and invoke configure from there.\r\nFor example:\r\n\r\n    mkdir debug\r\n    cd debug\r\n    ../configure --with-pydebug\r\n    make\r\n    make test\r\n\r\n(This will fail if you *also* built at the top-level directory.\r\nYou should do a \"make clean\" at the toplevel first.)\r\n\r\nIf you need an optimized version of Python, you type \"make profile-opt\" in the\r\ntop level directory. This will rebuild the interpreter executable using Profile\r\nGuided Optimization (PGO). For more details, see the section bellow.\r\n\r\n\r\nProfile Guided Optimization\r\n---------------------------\r\n\r\nPGO takes advantage of recent versions of the GCC or Clang compilers.\r\nIf ran, the \"profile-opt\" rule will do several steps.\r\n\r\nFirst, the entire Python directory is cleaned of temporary files that\r\nmay have resulted in a previous compilation.\r\n\r\nThen, an instrumented version of the interpreter is built, using suitable\r\ncompiler flags for each flavour. Note that this is just an intermediary\r\nstep and the binary resulted after this step is not good for real life\r\nworkloads, as it has profiling instructions embedded inside.\r\n\r\nAfter this instrumented version of the interpreter is built, the Makefile\r\nwill automatically run a training workload. This is necessary in order to\r\nprofile the interpreter execution. Note also that any output, both stdout\r\nand stderr, that may appear at this step is supressed.\r\n\r\nFinally, the last step is to rebuild the interpreter, using the information\r\ncollected in the previous one. The end result will be a Python binary\r\nthat is optimized and suitable for distribution or production installation.\r\n\r\n\r\nWhat's New\r\n----------\r\n\r\nWe have a comprehensive overview of the changes in the \"What's New in\r\nPython 3.5\" document, found at\r\n\r\n    http://docs.python.org/3.5/whatsnew/3.5.html\r\n\r\nFor a more detailed change log, read Misc/NEWS (though this file, too,\r\nis incomplete, and also doesn't list anything merged in from the 2.7\r\nrelease under development).\r\n\r\nIf you want to install multiple versions of Python see the section below\r\nentitled \"Installing multiple versions\".\r\n\r\n\r\nDocumentation\r\n-------------\r\n\r\nDocumentation for Python 3.5 is online, updated daily:\r\n\r\n    http://docs.python.org/3.5/\r\n\r\nIt can also be downloaded in many formats for faster access.  The documentation\r\nis downloadable in HTML, PDF, and reStructuredText formats; the latter version\r\nis primarily for documentation authors, translators, and people with special\r\nformatting requirements.\r\n\r\nIf you would like to contribute to the development of Python, relevant\r\ndocumentation is available at:\r\n\r\n    http://docs.python.org/devguide/\r\n\r\nFor information about building Python's documentation, refer to Doc/README.txt.\r\n\r\n\r\nConverting From Python 2.x to 3.x\r\n---------------------------------\r\n\r\nPython starting with 2.6 contains features to help locating code that needs to\r\nbe changed, such as optional warnings when deprecated features are used, and\r\nbackported versions of certain key Python 3.x features.\r\n\r\nA source-to-source translation tool, \"2to3\", can take care of the mundane task\r\nof converting large amounts of source code.  It is not a complete solution but\r\nis complemented by the deprecation warnings in 2.6.  See\r\nhttp://docs.python.org/3.5/library/2to3.html for more information.\r\n\r\n\r\nTesting\r\n-------\r\n\r\nTo test the interpreter, type \"make test\" in the top-level directory.\r\nThe test set produces some output.  You can generally ignore the messages\r\nabout skipped tests due to optional features which can't be imported.\r\nIf a message is printed about a failed test or a traceback or core dump\r\nis produced, something is wrong.\r\n\r\nBy default, tests are prevented from overusing resources like disk space and\r\nmemory.  To enable these tests, run \"make testall\".\r\n\r\nIMPORTANT: If the tests fail and you decide to mail a bug report, *don't*\r\ninclude the output of \"make test\".  It is useless.  Run the failing test\r\nmanually, as follows:\r\n\r\n        ./python -m test -v test_whatever\r\n\r\n(substituting the top of the source tree for '.' if you built in a different\r\ndirectory).  This runs the test in verbose mode.\r\n\r\n\r\nInstalling multiple versions\r\n----------------------------\r\n\r\nOn Unix and Mac systems if you intend to install multiple versions of Python\r\nusing the same installation prefix (--prefix argument to the configure script)\r\nyou must take care that your primary python executable is not overwritten by\r\nthe installation of a different version.  All files and directories installed\r\nusing \"make altinstall\" contain the major and minor version and can thus live\r\nside-by-side.  \"make install\" also creates ${prefix}/bin/python3 which refers\r\nto ${prefix}/bin/pythonX.Y.  If you intend to install multiple versions using\r\nthe same prefix you must decide which version (if any) is your \"primary\"\r\nversion.  Install that version using \"make install\".  Install all other\r\nversions using \"make altinstall\".\r\n\r\nFor example, if you want to install Python 2.6, 2.7 and 3.5 with 2.7 being the\r\nprimary version, you would execute \"make install\" in your 2.7 build directory\r\nand \"make altinstall\" in the others.\r\n\r\n\r\nIssue Tracker and Mailing List\r\n------------------------------\r\n\r\nWe're soliciting bug reports about all aspects of the language.  Fixes are also\r\nwelcome, preferably in unified diff format.  Please use the issue tracker:\r\n\r\n    http://bugs.python.org/\r\n\r\nIf you're not sure whether you're dealing with a bug or a feature, use the\r\nmailing list:\r\n\r\n    python-dev@python.org\r\n\r\nTo subscribe to the list, use the mailman form:\r\n\r\n    http://mail.python.org/mailman/listinfo/python-dev/\r\n\r\n\r\nProposals for enhancement\r\n-------------------------\r\n\r\nIf you have a proposal to change Python, you may want to send an email to the\r\ncomp.lang.python or python-ideas mailing lists for inital feedback.  A Python\r\nEnhancement Proposal (PEP) may be submitted if your idea gains ground.  All\r\ncurrent PEPs, as well as guidelines for submitting a new PEP, are listed at\r\nhttp://www.python.org/dev/peps/.\r\n\r\n\r\nRelease Schedule\r\n----------------\r\n\r\nSee PEP 478 for release details: http://www.python.org/dev/peps/pep-0478/\r\n\r\n\r\nCopyright and License Information\r\n---------------------------------\r\n\r\nCopyright (c) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011,\r\n2012, 2013, 2014, 2015, 2016 Python Software Foundation.  All rights reserved.\r\n\r\nCopyright (c) 2000 BeOpen.com.  All rights reserved.\r\n\r\nCopyright (c) 1995-2001 Corporation for National Research Initiatives.  All\r\nrights reserved.\r\n\r\nCopyright (c) 1991-1995 Stichting Mathematisch Centrum.  All rights reserved.\r\n\r\nSee the file \"LICENSE\" for information on the history of this software,\r\nterms & conditions for usage, and a DISCLAIMER OF ALL WARRANTIES.\r\n\r\nThis Python distribution contains *no* GNU General Public License (GPL) code,\r\nso it may be used in proprietary projects.  There are interfaces to some GNU\r\ncode but these are entirely optional.\r\n\r\nAll trademarks referenced herein are property of their respective holders.\r\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://www.headfirstlabs.com",
    "keywords": null,
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "sfnester",
    "package_url": "https://pypi.org/project/sfnester/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/sfnester/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://www.headfirstlabs.com"
    },
    "release_url": "https://pypi.org/project/sfnester/1.1.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "A simple printer of nested lists",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2453451,
  "releases": {
    "1.0.0": [],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7755421c9a54034947f6cbbdd3657626aa9ce62e75759d5a5900b71871ba7099",
          "md5": "3b6dbb3c52d74068f883a8a9e56ec3d2",
          "sha256": "b6c3cafc9ffd634e9d752d846ea56a4c82817525ca94a8f2f846894e71441322"
        },
        "downloads": -1,
        "filename": "sfnester-1.1.0.zip",
        "has_sig": false,
        "md5_digest": "3b6dbb3c52d74068f883a8a9e56ec3d2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4436,
        "upload_time": "2016-11-10T17:10:42",
        "upload_time_iso_8601": "2016-11-10T17:10:42.091038Z",
        "url": "https://files.pythonhosted.org/packages/77/55/421c9a54034947f6cbbdd3657626aa9ce62e75759d5a5900b71871ba7099/sfnester-1.1.0.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7755421c9a54034947f6cbbdd3657626aa9ce62e75759d5a5900b71871ba7099",
        "md5": "3b6dbb3c52d74068f883a8a9e56ec3d2",
        "sha256": "b6c3cafc9ffd634e9d752d846ea56a4c82817525ca94a8f2f846894e71441322"
      },
      "downloads": -1,
      "filename": "sfnester-1.1.0.zip",
      "has_sig": false,
      "md5_digest": "3b6dbb3c52d74068f883a8a9e56ec3d2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4436,
      "upload_time": "2016-11-10T17:10:42",
      "upload_time_iso_8601": "2016-11-10T17:10:42.091038Z",
      "url": "https://files.pythonhosted.org/packages/77/55/421c9a54034947f6cbbdd3657626aa9ce62e75759d5a5900b71871ba7099/sfnester-1.1.0.zip",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}