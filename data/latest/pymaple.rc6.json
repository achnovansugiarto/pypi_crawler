{
  "info": {
    "author": "Akash Dhruv",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.8"
    ],
    "description": ".. |icon| image:: ./media/icon.svg\n  :width: 30\n  \n============  \n|icon| Maple\n============\n\n|Code style: black|\n\n|BubbleBox| |FlashX| |FlowX| |Minimal|\n\nMaple is a productivity tool that acts a wrapper around docker, podman, and singularity containerization services to provide a seamless interface to deploy High Performance Computing (HPC) applications on cloud and supercomputing platforms. It comprises a python based library and command line interface to manage developer and production environment for running complex multiphysics simulations.\n\nOpen-source tools for numerical simulation of partical engineering problems provide state-of-art methods and techniques, and undergo continous development for accuracy and performance on modern computing architectures. Accessibility of these tools for core industry users has been a challenge due to the presence of complexities associated with setting up desired problems with external dependencies. Consider the problem illustrated below where a backend developer for an open-source simulation tool manages/creates images for application users, who in turn can customize it for their specific use case. Maple can be used to manage/deploy this workflow.\n\n|fig1|\n\nAnother important aspect that Maple aims to address is the reproducibility in research and development. As illustrated below, a scientist can publish software images using Maple to allow their peers to: (1) Reproduce their research datasets (2) Work with existing datasets to gain more insight. Maple aims to make the process of publishing/use of images organized and systematic.\n\n|fig2|\n    \nTutorial\n========\n\nThe link below provides an overiew of Maple within the context of Flash-X (https://flash-x.org), a multiphysics simulation software instrument. Some of the details maybe be outdated, but we are working on updating the tutorial.\n\n|Tutorial|\n\nInstallation\n============\n\nStable releases of Maple are hosted on Python Package Index website (`<https://pypi.org/project/PyMaple/>`_) and can be installed by executing,\n\n::\n\n   pip install PyMaple\n   \nNote that ``pip`` should point to ``python3+`` installation package ``pip3``. \n\nUpgrading and uninstallation is easily managed through this interface using,\n\n::\n\n   pip install --upgrade PyMaple\n   pip uninstall PyMaple\n\nThere maybe situations where users may want to install Maple in development mode $\\\\textemdash$ to design new features, debug, or customize options/commands to their needs. This can be easily accomplished using the ``setup`` script located in the project root directory and executing,\n\n::\n\n   ./setup develop\n\nDevelopment mode enables testing of features/updates directly from the source code and is an effective method for debugging. Note that the ``setup`` script relies on ``click``, which can be installed using,\n\n::\n\n  pip install click\n\nThe ``maple`` script is installed in ``$HOME/.local/bin`` directory and therfore the environment variable, ``PATH``, should be updated to include this location for command line use.\n\nDependencies\n============\n\n``click`` ``toml`` ``docker`` ``singularity`` ``podman``\n\nWriting a Maplefile\n===================\n\nMaplefile is a TOML configuration file that is placed in a project root directory. Location of the Maplefile marks the directory which will be mounted inside container,\n\n::\n\n  $ tree Flash-X\n  \n  ├── bin \n  ├── docs  \n  ├── LICENSE\n  ├── NOTICE\n  ├── RELEASE\n  ├── sites\n  ├── tools\n  ├── container\n  ├── lib\n  ├── Maplefile\n  ├── README.md\n  ├── setup\n  ├── source\n\nThe example above shows the directory tree for Flash-X, which contains a Maplefile along with files/folders that comprise the project. The corresponding Maplefile looks like,\n\n.. code-block:: python\n  \n  # Maplefile for Flash-X\n\n  # Base Image\n  base = \"akashdhruv/amrex:ppc64le\"\n\n  # Platform\n  platform = \"linux/ppc64le\"\n\n  # Name of the container/image\n  container = \"flashx\"\n\n  # MPI path from host\n  mpi = \"/path/to/host/mpi\"\n\n  # Commands for building local image\n  # from base image, and installing dependencies\n  build = [\n    \"dnf install <packages>\", \n    \"pip install <python-packages>\", \n  ]\n\n  # Commands to execute inside the container\n  # using the current mount directory and\n  # update the local image\n  publish = [\n    \"./setup <simulation> <options>\", \n    \"make && cp <app> </path/inside/image>\", \n  ]\n\n  # Backend for service\n  # docker/singularity/podman\n  backend = \"podman\"\n  \nImage versus Container\n======================\n\nFollowing is how Maple differentiates between an Image and a Container:\n\n- Image\n\n    Blueprint for running containers, provides environment to work with code/data in working directory\n\n- Container\n\n    Instance of an image\n\n    Interacts with an image by mounting data/code from working directory\n\n    Writes data to working directory when running applications from an image\n\n    Updates an image using data/code from working directory\n\n\nUsage\n=====\n\n- Build a local image from base image\n\n    ``maple image build --base=<image-name>``\n- Activate local container from an image\n\n    ``maple container pour --image=<image-name>``\n- Step inside container shell\n\n    ``maple container shell``\n    \n- Save changes from a local container to an image\n\n    ``maple container commit --image=<image-name>`` \n\n- Stop and delete local container\n\n    ``maple container rinse``\n\n- Prune redundant layers from a local image (reduce size)\n\n    ``maple image squash --image=<image-name>``\n\n- Launch an ipython notebook inside the container\n\n    ``maple container notebook --image=<image-name> --port=<port-id>``\n\n- Run commands inside the container\n\n    ``maple container run --image=<image-name> \"echo Hello World!\"``\n\n- Delete containers\n\n    ``maple container rinse <container1> <container2> <container3>``\n\n- Delete images\n\n    ``maple image delete <image1> <image2> <image3>``\n\n-  Remote interface \n\n    ``maple pull <image-name>``\n    \n    ``maple push <image-name>``\n\nCitation\n========\n\n::\n\n  @software{akash_dhruv_2022_7255622,\n    author       = {Akash Dhruv},\n    title        = {akashdhruv/Maple: October 2022},\n    month        = oct,\n    year         = 2022,\n    publisher    = {Zenodo},\n    version      = {22.10},\n    doi          = {10.5281/zenodo.7255622},\n    url          = {https://doi.org/10.5281/zenodo.7255622}\n  }\n\n.. |Code style: black| image:: https://img.shields.io/badge/code%20style-black-000000.svg\n   :target: https://github.com/psf/black\n   \n.. |BubbleBox| image:: https://github.com/akashdhruv/Maple/workflows/BubbleBox/badge.svg\n.. |FlashX| image:: https://github.com/akashdhruv/Maple/workflows/FlashX/badge.svg\n.. |FlowX| image:: https://github.com/akashdhruv/Maple/workflows/FlowX/badge.svg\n.. |Minimal| image:: https://github.com/akashdhruv/Maple/workflows/Minimal/badge.svg\n\n.. |Tutorial| image:: http://img.youtube.com/vi/gNmVtj7-RBY/0.jpg\n   :target: http://www.youtube.com/watch?v=gNmVtj7-RBY\n   \n.. |fig1| image:: ./media/maple-use-1.png\n    :width: 450px\n    \n.. |fig2| image:: ./media/maple-use-2.png\n    :width: 450px\n\n.. |nbsp|   unicode:: U+00A0 .. NO-BREAK SPACE",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "PyMaple",
    "package_url": "https://pypi.org/project/PyMaple/",
    "platform": null,
    "project_url": "https://pypi.org/project/PyMaple/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/PyMaple/3.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Maple Container Utility",
    "version": "3.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15558598,
  "releases": {
    "2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee2e3dee66d3ddb9229b1451ed09a36ba9d38889c5c1943f027b0b63a3bc573b",
          "md5": "b9fde9a0fce49250fe516158c4f3dc1f",
          "sha256": "f3fc2a2241a040c6b37b509895e72fb226c4eca60474cf3f00681e97c4589684"
        },
        "downloads": -1,
        "filename": "PyMaple-2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b9fde9a0fce49250fe516158c4f3dc1f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11728,
        "upload_time": "2022-09-08T16:20:35",
        "upload_time_iso_8601": "2022-09-08T16:20:35.869728Z",
        "url": "https://files.pythonhosted.org/packages/ee/2e/3dee66d3ddb9229b1451ed09a36ba9d38889c5c1943f027b0b63a3bc573b/PyMaple-2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea8db6968a5b8c5d2cfc46b3acda76d05cbbb9b3499f59b9311a71be21d03dd2",
          "md5": "aafebc084e21efee6abc144a34850a59",
          "sha256": "5858c9efe65ab47fa997c804543f57c82c0ab656aa831d97078e58983299e5e0"
        },
        "downloads": -1,
        "filename": "PyMaple-2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "aafebc084e21efee6abc144a34850a59",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11815,
        "upload_time": "2022-09-09T06:17:21",
        "upload_time_iso_8601": "2022-09-09T06:17:21.407492Z",
        "url": "https://files.pythonhosted.org/packages/ea/8d/b6968a5b8c5d2cfc46b3acda76d05cbbb9b3499f59b9311a71be21d03dd2/PyMaple-2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8eeb55e04510fadfc3b78b35d00d6ea2eeca13d338f03c60ec4bee41c559325c",
          "md5": "c3eb22925495e43b4505bcfb41eb3694",
          "sha256": "18a97daf9df89ef2bb92cde1e71633e84f7f95c817e330ef8f1f580144ebd24c"
        },
        "downloads": -1,
        "filename": "PyMaple-2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c3eb22925495e43b4505bcfb41eb3694",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 127906,
        "upload_time": "2022-10-19T21:49:10",
        "upload_time_iso_8601": "2022-10-19T21:49:10.580972Z",
        "url": "https://files.pythonhosted.org/packages/8e/eb/55e04510fadfc3b78b35d00d6ea2eeca13d338f03c60ec4bee41c559325c/PyMaple-2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "134c5e7c195d1da15a306a69e3228a4fcc9c30e51f9f5770151552ba80ff14a4",
          "md5": "b71fe3b8db00a31747465ae83e9366fb",
          "sha256": "ebb743bc14ea60abe5f84fe36f750a843f6ad9441c5bb54ed3651b3a0f62efb4"
        },
        "downloads": -1,
        "filename": "PyMaple-2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "b71fe3b8db00a31747465ae83e9366fb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 127931,
        "upload_time": "2022-10-27T20:31:54",
        "upload_time_iso_8601": "2022-10-27T20:31:54.283389Z",
        "url": "https://files.pythonhosted.org/packages/13/4c/5e7c195d1da15a306a69e3228a4fcc9c30e51f9f5770151552ba80ff14a4/PyMaple-2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f7a32ec2a1351e29f588f5c5b6ddabbfbd56d461c078e83ad09184f22d4eae2f",
          "md5": "a42df7c27c885009a60699de70bebf38",
          "sha256": "9c69cfdb059ce227599b7800a099643eeb7e209a7c2f6b457959df9e4409c482"
        },
        "downloads": -1,
        "filename": "PyMaple-3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a42df7c27c885009a60699de70bebf38",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 127906,
        "upload_time": "2022-10-27T20:32:57",
        "upload_time_iso_8601": "2022-10-27T20:32:57.568694Z",
        "url": "https://files.pythonhosted.org/packages/f7/a3/2ec2a1351e29f588f5c5b6ddabbfbd56d461c078e83ad09184f22d4eae2f/PyMaple-3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6f006bf85d22553cca64dc01edb6257e864b5bafea4d6a51f7ec29461119e2d8",
          "md5": "1711b779a5bb9e79f13f347b38c963ac",
          "sha256": "f7e458317a4aa0fde69d3ad6881cbde2ba09aab153fcf117ce677f048edd4b06"
        },
        "downloads": -1,
        "filename": "PyMaple-3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1711b779a5bb9e79f13f347b38c963ac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 128100,
        "upload_time": "2022-10-27T20:57:45",
        "upload_time_iso_8601": "2022-10-27T20:57:45.818331Z",
        "url": "https://files.pythonhosted.org/packages/6f/00/6bf85d22553cca64dc01edb6257e864b5bafea4d6a51f7ec29461119e2d8/PyMaple-3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6f006bf85d22553cca64dc01edb6257e864b5bafea4d6a51f7ec29461119e2d8",
        "md5": "1711b779a5bb9e79f13f347b38c963ac",
        "sha256": "f7e458317a4aa0fde69d3ad6881cbde2ba09aab153fcf117ce677f048edd4b06"
      },
      "downloads": -1,
      "filename": "PyMaple-3.1.tar.gz",
      "has_sig": false,
      "md5_digest": "1711b779a5bb9e79f13f347b38c963ac",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 128100,
      "upload_time": "2022-10-27T20:57:45",
      "upload_time_iso_8601": "2022-10-27T20:57:45.818331Z",
      "url": "https://files.pythonhosted.org/packages/6f/00/6bf85d22553cca64dc01edb6257e864b5bafea4d6a51f7ec29461119e2d8/PyMaple-3.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}