{
  "info": {
    "author": "Vishrant Gupta",
    "author_email": "vishrant.gupta@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Chaos Mesh Client\n\n## Introduction\n\nChaos Mesh is an open source cloud-native Chaos Engineering platform that allows you to simulate various faults and orchestrate fault scenarios in your kubernetes cluster. This client is written in Python and provides a single point of entry to\ncreate and manage experiments in Chaos Mesh.\n\n## Getting Started\n\nTo start using Chaos Mesh, please follow the installation steps in the [documentation](https://chaos-mesh.org/docs/).\n\nTo create a Chaos Mesh client, you can use the following code:\n\n```python\nfrom chaosmesh.client import Client, Experiment\nfrom chaosmesh.k8s.selector import Selector\n\n# creating the ChaosMesh client\nclient = Client(version=\"v1alpha1\")\n\n# target pods selector; by labelSector or by pods in specified namespaces\nselector = Selector(labelSelectors={\"app\": \"filebeat\"}, pods=None, namespaces=None)\n```\n\n## Experiment Types\n\nChaos Mesh supports various types of experiments, including Pod faults, stress tests, JVM faults, and Host faults.\n\n### Pod Faults\n\n- Pod failure\n- Pod kill\n- Container kill\n\n### Stress Tests\n\n- CPU\n- Memory\n\n### JVM Faults\n\n- GC\n- Exception\n\n### Host Faults\n\n- CPU\n- Memory\n\n### Host Disk Fault\n\n- Read payload\n- Write payload\n- Fill\n\n### Network Attack\n\n- Partition\n- Bandwidth\n\n## Experiment Examples\n\nHere are some examples of how you can create experiments in Chaos Mesh:\n\n### Pod Failure Experiment\n\n```python\n# name of the experiment\nexp_name = str(uuid.uuid4())\n\n# starting up the pod failure experiment\nclient.start_experiment(Experiment.POD_FAILURE, namespace=\"default\", name=exp_name, selector=selector)\n```\n\n### Pod Kill Experiment\n\n```python\nexp_name = str(uuid.uuid4())\n\n# starting up the pod kill experiment\nclient.start_experiment(Experiment.POD_KILL, namespace=\"default\", name=exp_name, selector=selector)\n```\n\n### Container Kill Experiment\n\n```\nexp_name = str(uuid.uuid4())\n\n# starting up the pod kill experiment\nclient.start_experiment(Experiment.CONTAINER_KILL, namespace=\"default\", name=exp_name, selector=selector, container_names=['main'])\n```\n\n### CPU Stress Test Experiment\n\n```python\nexp_name = str(uuid.uuid4())\n\n# starting up the pod kill experiment\nclient.start_experiment(Experiment.POD_STRESS_CPU, namespace=\"default\", name=exp_name, selector=selector, container_names=['main'])\n```\n\n### Memory Stress Test Experiment\n\n```python\nexp_name = str(uuid.uuid4())\n\n# starting up the pod kill experiment\nclient.start_experiment(Experiment.POD_STRESS_MEMORY, namespace=\"default\", name=exp_name, selector=selector, container_names=['main'])\n```\n\n### GC Experiment\n\n```python\n# name of the experiment\nexp_name = str(uuid.uuid4())\n\nclient.start_experiment(Experiment.GC, namespace=\"default\", name=exp_name, selector=selector, port=8080)\n```\n\n### Exception Experiment\n\n```python\nexp_name = str(uuid.uuid4())\n\nclient.start_experiment(Experiment.RAISE_EXCEPTION, namespace=\"default\",\n                        name=exp_name, selector=select\n```\n\n### Host CPU stress\n\n```python\nexp_name = str(uuid.uuid4())\n\n# starting up the host cpu stress experiment\nclient.start_experiment(Experiment.HOST_STRESS_CPU, namespace=\"default\", name=exp_name,\n                        address=[\"10.225.66.224\", \"10.225.67.213\", \"10.225.66.231\", \"10.225.66.138\", \"10.225.66.192\", \"10.225.67.52\", \"10.225.67.103\"],\n                        load=1000)\n```\n\n### Host Memory stress\n\n```python\nexp_name = str(uuid.uuid4())\n\n# starting up the host memory stress experiment\nclient.start_experiment(Experiment.HOST_STRESS_MEMORY, namespace=\"default\", name=exp_name,\n                        address=[\"10.225.66.224\", \"10.225.67.213\", \"10.225.66.231\", \"10.225.66.138\", \"10.225.66.192\", \"10.225.67.52\", \"10.225.67.103\"],\n                        size=\"30GB\")\n```\n\n### Host Disk Fault Read payload\n\n```python\nexp_name = \"disk-fault-read-payload-\" + random.randint(0, 1000000).__str__()\n\n# starting up the read payload experiment\nclient.start_experiment(Experiment.HOST_READ_PAYLOAD, namespace=\"default\", name=exp_name, selector=selector, address=[\"address\"], size=\"1024K\", path=\"/\", payload_process_num=1)\n```\n\n### Host Disk Fault Write payload\n\n```python\nexp_name = \"disk-fault-write-payload-\" + random.randint(0, 1000000).__str__()\n\n# starting up the write payload experiment\nclient.start_experiment(Experiment.HOST_WRITE_PAYLOAD, namespace=\"default\", name=exp_name, selector=selector, address=[\"address\"], size=\"1024K\", path=\"/\",\n                        payload_process_num=1)\n```\n\n### Host Disk Fill\n\n```python\nexp_name = \"disk-fault-fill-\" + random.randint(0, 1000000).__str__()\n\n# starting up the disk fill experiment\nclient.start_experiment(Experiment.HOST_DISK_FILL, namespace=\"default\", name=exp_name, selector=selector, address=[\"address\"], size=\"1024K\", path=\"/\", fill_by_fallocate=True)\n```\n\n### Network Partition\n\n```python\nexp_name = \"network-partition-\" + random.randint(0, 1000000).__str__()\n\n# starting up the network partition experiment\nclient.start_experiment(Experiment.NETWORK_PARTITION, namespace=\"default\", name=exp_name, selector=selector, external_targets=[\"target\"], direction=\"both\")\n```\n\n### Network Bandwidth\n\n```python\nexp_name = \"network-bandwidth-\" + random.randint(0, 1000000).__str__()\n\n# starting up the network bandwidth experiment\nclient.start_experiment(Experiment.NETWORK_BANDWIDTH, namespace=\"default\", name=exp_name, selector=selector, rate=\"1bps\", buffer=1, limit=1, direction=\"to\",\n                        external_targets=[\"target\"])\n```\n\n## Pause an experiment\n\nIn order to pause an experiment you can use the following command\n\n```python\n# pausing the experiment\nclient.pause_experiment(Experiment.POD_STRESS_MEMORY, namespace=\"default\", name=exp_name)\n```\n\n## Delete the experiment\n\nThe experiment can be removed from the k8s cluster using the following command\n\n```python\nclient.delete_experiment(Experiment.POD_STRESS_MEMORY, namespace=\"default\", name=exp_name)\n```\n\n## Logging\n\nInitializing the ChaosMesh logger\n\n```python\nimport logging, sys\n\nlogging.getLogger(\"chaosmesh\")\nlogging.basicConfig(stream=sys.stdout, level=logging.DEBUG)\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/vishrantgupta/chaos-mesh",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "chaos-mesh",
    "package_url": "https://pypi.org/project/chaos-mesh/",
    "platform": null,
    "project_url": "https://pypi.org/project/chaos-mesh/",
    "project_urls": {
      "Homepage": "https://github.com/vishrantgupta/chaos-mesh"
    },
    "release_url": "https://pypi.org/project/chaos-mesh/1.2.10/",
    "requires_dist": [
      "auto-mix-prep (==0.2.0)",
      "kubernetes (==21.7.0)",
      "polling (==0.3.2)",
      "setuptools (==67.2.0)"
    ],
    "requires_python": "",
    "summary": "A client to create experiments in ChaosMesh",
    "version": "1.2.10",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17298373,
  "releases": {
    "1.2.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2889ff720adf7af9f90b5dfff53590a57dd4d23423c515fc21c9763865e63a3f",
          "md5": "6578c1c759680654ff7c5e62bc27b189",
          "sha256": "0da6b8f4c7a4c9db8a2ae62ce92ff132c59599795d0e48bb94b1f691d9cc6503"
        },
        "downloads": -1,
        "filename": "chaos_mesh-1.2.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6578c1c759680654ff7c5e62bc27b189",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 38143,
        "upload_time": "2023-03-15T02:35:29",
        "upload_time_iso_8601": "2023-03-15T02:35:29.929128Z",
        "url": "https://files.pythonhosted.org/packages/28/89/ff720adf7af9f90b5dfff53590a57dd4d23423c515fc21c9763865e63a3f/chaos_mesh-1.2.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1c394d1e1810da8e9ba9c266760b91067be0886bd5fc2139e4d8f43c03c77ccf",
          "md5": "345a48ebeef253ac6c8ae81979845b8d",
          "sha256": "99bff88fb337b87299c574d85cc563ed0d051a6583340021fee584166bdff2fd"
        },
        "downloads": -1,
        "filename": "chaos_mesh-1.2.10.tar.gz",
        "has_sig": false,
        "md5_digest": "345a48ebeef253ac6c8ae81979845b8d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18041,
        "upload_time": "2023-03-15T02:35:31",
        "upload_time_iso_8601": "2023-03-15T02:35:31.970452Z",
        "url": "https://files.pythonhosted.org/packages/1c/39/4d1e1810da8e9ba9c266760b91067be0886bd5fc2139e4d8f43c03c77ccf/chaos_mesh-1.2.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "187e7956fe51fd42bace21db5f6ead4aea03f637c71445eb633fb95e5ea6f9aa",
          "md5": "bfad937d0fecfe7beaa6084bae71660e",
          "sha256": "b9ac49925460e4513b91ebddd7686b85ed62201be582a47a56302bcd94548b57"
        },
        "downloads": -1,
        "filename": "chaos_mesh-1.2.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bfad937d0fecfe7beaa6084bae71660e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 27697,
        "upload_time": "2023-02-21T23:02:15",
        "upload_time_iso_8601": "2023-02-21T23:02:15.525788Z",
        "url": "https://files.pythonhosted.org/packages/18/7e/7956fe51fd42bace21db5f6ead4aea03f637c71445eb633fb95e5ea6f9aa/chaos_mesh-1.2.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "685532d8d40e2bfe2d1489138bd760edf1d5349d70e3d30c6ab6a4fcc76a2295",
          "md5": "49adfd5353d91f3d816da0c193f04780",
          "sha256": "ec6886482ed1d74db3677a4378c7df92dfd8828ddb700d06bf45314c01b29cc4"
        },
        "downloads": -1,
        "filename": "chaos_mesh-1.2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "49adfd5353d91f3d816da0c193f04780",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13961,
        "upload_time": "2023-02-21T23:02:17",
        "upload_time_iso_8601": "2023-02-21T23:02:17.467326Z",
        "url": "https://files.pythonhosted.org/packages/68/55/32d8d40e2bfe2d1489138bd760edf1d5349d70e3d30c6ab6a4fcc76a2295/chaos_mesh-1.2.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bbc2dd6710e95515f68a2a7109e51dfc2c02b45673b27836431fcc0cecca6448",
          "md5": "20edf895204a1af07534d932d742f473",
          "sha256": "e03aa2fcd65864a9b6a35b5664e7589e481fe1e0952bffe7b0a61a6cc516c667"
        },
        "downloads": -1,
        "filename": "chaos_mesh-1.2.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "20edf895204a1af07534d932d742f473",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 30072,
        "upload_time": "2023-02-22T23:20:01",
        "upload_time_iso_8601": "2023-02-22T23:20:01.619218Z",
        "url": "https://files.pythonhosted.org/packages/bb/c2/dd6710e95515f68a2a7109e51dfc2c02b45673b27836431fcc0cecca6448/chaos_mesh-1.2.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "266fe442451a0c1b1ea011bd778cb0cc7fef9c5c1a3a0b164b971aef118abf75",
          "md5": "6d8b790cc21ba8ff63fa73ef42520b6d",
          "sha256": "da085cb33a2c83dc5a5f2fd4ba70f177bb44faba6be40e344a635edf82509c3e"
        },
        "downloads": -1,
        "filename": "chaos_mesh-1.2.6.tar.gz",
        "has_sig": false,
        "md5_digest": "6d8b790cc21ba8ff63fa73ef42520b6d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14882,
        "upload_time": "2023-02-22T23:20:03",
        "upload_time_iso_8601": "2023-02-22T23:20:03.338625Z",
        "url": "https://files.pythonhosted.org/packages/26/6f/e442451a0c1b1ea011bd778cb0cc7fef9c5c1a3a0b164b971aef118abf75/chaos_mesh-1.2.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ecc5ca3acc6a69befd0e88b6b3f91ad29afb610a7b00700b04f147f9bf695362",
          "md5": "a4306c4da58a8d894dbcf5d128b43d9c",
          "sha256": "f7112a2235197c04920f76405e60654740adf52566aaedd85d9fd42bbf00ea60"
        },
        "downloads": -1,
        "filename": "chaos_mesh-1.2.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a4306c4da58a8d894dbcf5d128b43d9c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 32179,
        "upload_time": "2023-02-23T00:37:11",
        "upload_time_iso_8601": "2023-02-23T00:37:11.171701Z",
        "url": "https://files.pythonhosted.org/packages/ec/c5/ca3acc6a69befd0e88b6b3f91ad29afb610a7b00700b04f147f9bf695362/chaos_mesh-1.2.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8940651b4d95fe3fcf168fa5c92effdb3177d7f57cf6c9ceac20e4e9042a5128",
          "md5": "0a57f4485161c1297032b97715ee2515",
          "sha256": "038fb8c51c617594e0ea6f2ca232d47b65f3ccd5d79f53e13a92365c24b16788"
        },
        "downloads": -1,
        "filename": "chaos_mesh-1.2.7.tar.gz",
        "has_sig": false,
        "md5_digest": "0a57f4485161c1297032b97715ee2515",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15862,
        "upload_time": "2023-02-23T00:37:13",
        "upload_time_iso_8601": "2023-02-23T00:37:13.118058Z",
        "url": "https://files.pythonhosted.org/packages/89/40/651b4d95fe3fcf168fa5c92effdb3177d7f57cf6c9ceac20e4e9042a5128/chaos_mesh-1.2.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a77bed0988f5550f3981a93291878293bea8eb1580a825c31a75881da95926e",
          "md5": "14cd2d33c84d15667058e1b8bc1a5fdf",
          "sha256": "23ed46eec8fbb83ae4f883674d2e4ba66b4efefbc8f91c03a3ac5138df8072f2"
        },
        "downloads": -1,
        "filename": "chaos_mesh-1.2.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "14cd2d33c84d15667058e1b8bc1a5fdf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 37945,
        "upload_time": "2023-02-23T03:13:52",
        "upload_time_iso_8601": "2023-02-23T03:13:52.751463Z",
        "url": "https://files.pythonhosted.org/packages/8a/77/bed0988f5550f3981a93291878293bea8eb1580a825c31a75881da95926e/chaos_mesh-1.2.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "126125a1fc04269c44e5c4d0018d9d53d7d755d0399711999762c741b21c317c",
          "md5": "930a275115f92dcea23ff6fb0b3b66db",
          "sha256": "b194b14a06a5ba0cb1a211269b66548ba512c85207d2e35e5178318108ff2ee2"
        },
        "downloads": -1,
        "filename": "chaos_mesh-1.2.8.tar.gz",
        "has_sig": false,
        "md5_digest": "930a275115f92dcea23ff6fb0b3b66db",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17859,
        "upload_time": "2023-02-23T03:13:54",
        "upload_time_iso_8601": "2023-02-23T03:13:54.896992Z",
        "url": "https://files.pythonhosted.org/packages/12/61/25a1fc04269c44e5c4d0018d9d53d7d755d0399711999762c741b21c317c/chaos_mesh-1.2.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "191dd16f85e0a23799e0634757f8d9100e29dec61ee7275b1fe2682e8e5cbe8b",
          "md5": "df76c77fee0f5df04ef2d5933b718996",
          "sha256": "cea72fd07d2b2487656089e9c5406a98ccfdeef3ce82705b87d32bf9b71117ab"
        },
        "downloads": -1,
        "filename": "chaos_mesh-1.2.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "df76c77fee0f5df04ef2d5933b718996",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 38128,
        "upload_time": "2023-02-24T05:30:04",
        "upload_time_iso_8601": "2023-02-24T05:30:04.790043Z",
        "url": "https://files.pythonhosted.org/packages/19/1d/d16f85e0a23799e0634757f8d9100e29dec61ee7275b1fe2682e8e5cbe8b/chaos_mesh-1.2.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e518300f5ad6edbb92e315c46351f6d652d02ce3025d9e298363d642333f2624",
          "md5": "396330f180be307b903717b546d314ba",
          "sha256": "ef8060524b5da8917da702b888a4f534f0dad7aafa01a6a0573a992e7ddff01f"
        },
        "downloads": -1,
        "filename": "chaos_mesh-1.2.9.tar.gz",
        "has_sig": false,
        "md5_digest": "396330f180be307b903717b546d314ba",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18059,
        "upload_time": "2023-02-24T05:30:06",
        "upload_time_iso_8601": "2023-02-24T05:30:06.693328Z",
        "url": "https://files.pythonhosted.org/packages/e5/18/300f5ad6edbb92e315c46351f6d652d02ce3025d9e298363d642333f2624/chaos_mesh-1.2.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2889ff720adf7af9f90b5dfff53590a57dd4d23423c515fc21c9763865e63a3f",
        "md5": "6578c1c759680654ff7c5e62bc27b189",
        "sha256": "0da6b8f4c7a4c9db8a2ae62ce92ff132c59599795d0e48bb94b1f691d9cc6503"
      },
      "downloads": -1,
      "filename": "chaos_mesh-1.2.10-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6578c1c759680654ff7c5e62bc27b189",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 38143,
      "upload_time": "2023-03-15T02:35:29",
      "upload_time_iso_8601": "2023-03-15T02:35:29.929128Z",
      "url": "https://files.pythonhosted.org/packages/28/89/ff720adf7af9f90b5dfff53590a57dd4d23423c515fc21c9763865e63a3f/chaos_mesh-1.2.10-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1c394d1e1810da8e9ba9c266760b91067be0886bd5fc2139e4d8f43c03c77ccf",
        "md5": "345a48ebeef253ac6c8ae81979845b8d",
        "sha256": "99bff88fb337b87299c574d85cc563ed0d051a6583340021fee584166bdff2fd"
      },
      "downloads": -1,
      "filename": "chaos_mesh-1.2.10.tar.gz",
      "has_sig": false,
      "md5_digest": "345a48ebeef253ac6c8ae81979845b8d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 18041,
      "upload_time": "2023-03-15T02:35:31",
      "upload_time_iso_8601": "2023-03-15T02:35:31.970452Z",
      "url": "https://files.pythonhosted.org/packages/1c/39/4d1e1810da8e9ba9c266760b91067be0886bd5fc2139e4d8f43c03c77ccf/chaos_mesh-1.2.10.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}