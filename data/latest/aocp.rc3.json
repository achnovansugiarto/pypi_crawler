{
  "info": {
    "author": "Miguel Blanco Marcos",
    "author_email": "miguel.blanco.marcos@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Advent of Code Parsers\n\n[![pyversions](https://img.shields.io/pypi/pyversions/aocp)](https://www.python.org/)\n\n\nA collection of convenient Python parsers for Advent of Code problems.\n\n\n## Installation\n\n```bash\npip install aocp\n```\n\n## Quickstart\n\nYou can import parsers from the base module. There are two main types of parsers:\n * Iterable parsers, which return a sequence of elements from parsing a `str`, such as `list`, `tuple` or `dict`\n * Transform parsers, which return a single object from parsing a `str`, such as an `int`, `bool` or another `str`\n\nIterable parsers can be composed with other parsers nested within, including Transform parsers and other Iterable parsers. They can also be nested with some base types such as `int`.\n\nTransform parsers cannot have nested parsers, but they can be composed with other parsers in a sequence using `ChainParser`.\n\nThis way, the structure of the output data mirrors that of the expression used to instantiate the parser transform.\n\nHere is a basic usage example:\n\n```python\nraw_data = \"46,79,77,45,57,34,44,13,32,88,86,82,91,97\"\nparser = ListParser(IntParser)\nparser.parse(raw_data)\n```\n\nWhich results in:\n```\n[46, 79, 77, 45, 57, 34, 44, 13, 32, 88, 86, 82, 91, 97]\n```\n\nAnd here is a more advanced example, from [AoC 2021 day 4](https://adventofcode.com/2021/day/4):\n```python\nraw_data = \"\"\"7,4,9,5,11,17,23,2,0,14,21,24,10,16,13,6,15,25,12,22,18,20,8,19,3,26,1\n\n22 13 17 11  0\n 8  2 23  4 24\n21  9 14 16  7\n 6 10  3 18  5\n 1 12 20 15 19\n\n 3 15  0  2 22\n 9 18 13 17  5\n19  8  7 25 23\n20 11 10 24  4\n14 21 16 12  6\n\n14 21 17 24  4\n10 16 15  9 19\n18  8 23 26 20\n22 11 13  6  5\n 2  0 12  3  7\"\"\"\nparser = TupleParser(\n    (\n        IntListParser(),\n        ListParser(ListParser(IntListParser())),\n    )\n)\nparser.parse(raw_data)\n```\n\nWhich results in:\n```\n(\n    [7, 4, 9, 5, 11, 17, 23, 2, 0, 14, 21, 24, 10, 16, 13, 6, 15, 25, 12, 22, 18, 20, 8, 19, 3, 26, 1], \n    [[[22, 13, 17, 11, 0],\n     [8, 2, 23, 4, 24],\n     [21, 9, 14, 16, 7],\n     [6, 10, 3, 18, 5],\n     [1, 12, 20, 15, 19]],\n    [[3, 15, 0, 2, 22],\n     [9, 18, 13, 17, 5],\n     [19, 8, 7, 25, 23],\n     [20, 11, 10, 24, 4],\n     [14, 21, 16, 12, 6]],\n    [[14, 21, 17, 24, 4],\n     [10, 16, 15, 9, 19],\n     [18, 8, 23, 26, 20],\n     [22, 11, 13, 6, 5],\n     [2, 0, 12, 3, 7]]]\n)\n```\n\nBy default, the splitting elements in an iterable are guessed from the string provided. However, you can provide them through the `splitter` argument. This can be a strings or a sequence of strings, which will all act as splitters.\n\nA notebook with more examples from Aoc 2021 is available [here](./examples/aoc-2021.ipynb).\n\n## To be done\n * Full testing coverage\n * Documentation page (full docstrings are available, though)\n * More examples from other previous years\n * Regex Parser\n * Defaults in tuple parser in case of missing components in origin string\n## Source code\n\n[https://github.com/miguel-bm/advent-of-code-parsers](https://github.com/miguel-bm/advent-of-code-parsers)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/miguel-bm/advent-of-code-parsers",
    "keywords": "advent of code,adventofcode,aoc,aocp,parser,parsers",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aocp",
    "package_url": "https://pypi.org/project/aocp/",
    "platform": "",
    "project_url": "https://pypi.org/project/aocp/",
    "project_urls": {
      "Homepage": "https://github.com/miguel-bm/advent-of-code-parsers",
      "Repository": "https://github.com/miguel-bm/advent-of-code-parsers"
    },
    "release_url": "https://pypi.org/project/aocp/1.0.0/",
    "requires_dist": [
      "parse (>=1.19.0,<2.0.0)"
    ],
    "requires_python": ">=3.8,<4.0",
    "summary": "A collection of convenient parsers for Advent of Code problems.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12248748,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18ca43aacbe7cb1ebdee1817514d02e4bce9f04fd134ee204bbb97d26b966b0f",
          "md5": "959dec3f8fad65850235f41fdb36c368",
          "sha256": "66d8df9d34a107026b9ed7a5756677aec7dcbeef3da53b05c6c977a411375e8b"
        },
        "downloads": -1,
        "filename": "aocp-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "959dec3f8fad65850235f41fdb36c368",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 3609,
        "upload_time": "2021-12-08T16:04:23",
        "upload_time_iso_8601": "2021-12-08T16:04:23.377486Z",
        "url": "https://files.pythonhosted.org/packages/18/ca/43aacbe7cb1ebdee1817514d02e4bce9f04fd134ee204bbb97d26b966b0f/aocp-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "16a2db55d2b999c67353dddc5eabe8985ce5d055296ddd05d4f3e0a56de29e30",
          "md5": "7d5a08db5a8b27baac9dcbaa93957e5b",
          "sha256": "5f57cc690270e0fd1bfab0d24c8b280c345350230507e94d6968ab36e7bb10eb"
        },
        "downloads": -1,
        "filename": "aocp-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7d5a08db5a8b27baac9dcbaa93957e5b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 3245,
        "upload_time": "2021-12-08T16:04:25",
        "upload_time_iso_8601": "2021-12-08T16:04:25.048901Z",
        "url": "https://files.pythonhosted.org/packages/16/a2/db55d2b999c67353dddc5eabe8985ce5d055296ddd05d4f3e0a56de29e30/aocp-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e0040c93e00d7cd80383b8c4474eb33d96e5392c51df0e09ae9c023811fc71be",
          "md5": "ed47a298c7080d35db351ddfcba1e64c",
          "sha256": "4926448d196fadc149b8c5b6cf7f0430a717bc62007b649f40333fec02eb8915"
        },
        "downloads": -1,
        "filename": "aocp-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ed47a298c7080d35db351ddfcba1e64c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 3758,
        "upload_time": "2021-12-08T16:10:15",
        "upload_time_iso_8601": "2021-12-08T16:10:15.469699Z",
        "url": "https://files.pythonhosted.org/packages/e0/04/0c93e00d7cd80383b8c4474eb33d96e5392c51df0e09ae9c023811fc71be/aocp-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "606f7f2e936d0fb4fcff534ee56393edc21555de871cd592d4a18bbfc8f25c27",
          "md5": "ca3b89f27050e43959e80775067973cb",
          "sha256": "06ad98403651690063f0a182b8da61c5fc0f6f9bf4088abd5b59dcc31a357b0f"
        },
        "downloads": -1,
        "filename": "aocp-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ca3b89f27050e43959e80775067973cb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 3522,
        "upload_time": "2021-12-08T16:10:17",
        "upload_time_iso_8601": "2021-12-08T16:10:17.009377Z",
        "url": "https://files.pythonhosted.org/packages/60/6f/7f2e936d0fb4fcff534ee56393edc21555de871cd592d4a18bbfc8f25c27/aocp-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e51c3118c4af83210ff65c0b1eaa3b066baab1457265822a5750208898db7255",
          "md5": "4b98a4db0284e90ee2d46838d145f265",
          "sha256": "f164d4f35d7397005fdd086e175ead88885cd9602aae568f1c22df192e35f60d"
        },
        "downloads": -1,
        "filename": "aocp-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4b98a4db0284e90ee2d46838d145f265",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 6296,
        "upload_time": "2021-12-08T20:33:59",
        "upload_time_iso_8601": "2021-12-08T20:33:59.391811Z",
        "url": "https://files.pythonhosted.org/packages/e5/1c/3118c4af83210ff65c0b1eaa3b066baab1457265822a5750208898db7255/aocp-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "698289e095f77f4e8b319b566a3d45e799407010766eaffe2fbe0a94f8de3909",
          "md5": "7a3b910d9d5459e946d54321ed8658ef",
          "sha256": "28ca6503577f97e9af99fdde7e67e20e8fb065f8a96fad58af4b082b1da205b9"
        },
        "downloads": -1,
        "filename": "aocp-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7a3b910d9d5459e946d54321ed8658ef",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 6455,
        "upload_time": "2021-12-08T20:34:01",
        "upload_time_iso_8601": "2021-12-08T20:34:01.065379Z",
        "url": "https://files.pythonhosted.org/packages/69/82/89e095f77f4e8b319b566a3d45e799407010766eaffe2fbe0a94f8de3909/aocp-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e51c3118c4af83210ff65c0b1eaa3b066baab1457265822a5750208898db7255",
        "md5": "4b98a4db0284e90ee2d46838d145f265",
        "sha256": "f164d4f35d7397005fdd086e175ead88885cd9602aae568f1c22df192e35f60d"
      },
      "downloads": -1,
      "filename": "aocp-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4b98a4db0284e90ee2d46838d145f265",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<4.0",
      "size": 6296,
      "upload_time": "2021-12-08T20:33:59",
      "upload_time_iso_8601": "2021-12-08T20:33:59.391811Z",
      "url": "https://files.pythonhosted.org/packages/e5/1c/3118c4af83210ff65c0b1eaa3b066baab1457265822a5750208898db7255/aocp-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "698289e095f77f4e8b319b566a3d45e799407010766eaffe2fbe0a94f8de3909",
        "md5": "7a3b910d9d5459e946d54321ed8658ef",
        "sha256": "28ca6503577f97e9af99fdde7e67e20e8fb065f8a96fad58af4b082b1da205b9"
      },
      "downloads": -1,
      "filename": "aocp-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "7a3b910d9d5459e946d54321ed8658ef",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<4.0",
      "size": 6455,
      "upload_time": "2021-12-08T20:34:01",
      "upload_time_iso_8601": "2021-12-08T20:34:01.065379Z",
      "url": "https://files.pythonhosted.org/packages/69/82/89e095f77f4e8b319b566a3d45e799407010766eaffe2fbe0a94f8de3909/aocp-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}