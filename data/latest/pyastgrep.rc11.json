{
  "info": {
    "author": "Luke Plant",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "pyastgrep\n=========\n\n\n.. image:: https://badge.fury.io/py/pyastgrep.svg\n     :target: https://badge.fury.io/py/pyastgrep\n\n.. image:: https://github.com/spookylukey/pyastgrep/actions/workflows/tests.yml/badge.svg\n     :target: https://github.com/spookylukey/pyastgrep/actions/workflows/tests.yml\n\nA command-line utility for grepping Python files using XPath syntax (or CSS\nselectors) against the Python AST (Abstract Syntax Tree).\n\nIn other words, this allows you to search Python code against specific syntax\nelements (function definitions, arguments, assignments, variables etc), instead\nof grepping for string matches.\n\nThe interface and behaviour is designed to match grep and ripgrep as far as it\nmakes sense to do so.\n\n.. contents:: Contents\n\n\nInstallation\n------------\n\nPython 3.7+ required.\n\nWe recommend `pipx <https://pipxproject.github.io/pipx/>`_ to install it\nconveniently in an isolated environment:\n\n::\n\n   pipx install pyastgrep\n\n\nYou can also use pip:\n\n::\n\n   pip install pyastgrep\n\nUnderstanding the XML structure\n-------------------------------\n\nTo get started, you’ll need some understanding of how Python AST is structured,\nand how that is mapped to XML. Some methods for doing that are below:\n\n1. Use `Python AST Explorer <https://python-ast-explorer.com/>`_ to play around\n   with what AST looks like.\n\n2. Dump out the AST and/or XML structure of the top-level statements in a Python\n   file. The easiest way to do this is to use the provided ``pyastdump``\n   command, passing in either a Python filename, ``pyastdump yourfile.py``, or\n   piping in Python fragments as below:\n\n   .. code:: bash\n\n      $ echo 'x = 1' | pyastdump -\n      <Module>\n        <body>\n          <Assign lineno=\"1\" col_offset=\"0\">\n            <targets>\n              <Name lineno=\"1\" col_offset=\"0\" type=\"str\" id=\"x\">\n                <ctx>\n                  <Store/>\n                </ctx>\n              </Name>\n            </targets>\n            <value>\n              <Constant lineno=\"1\" col_offset=\"4\" type=\"int\" value=\"1\"/>\n            </value>\n          </Assign>\n        </body>\n        <type_ignores/>\n      </Module>\n\n   (When piping input in this way, code will be automatically dedented, making\n   this easier to do from partial Python snippets.)\n\n   You can also use the ``pyastgrep`` command, but since the top-level XML\n   elements are ``<Module><body>``, and don’t correspond to actual source lines,\n   you’ll need to use an XPath expression ``./*/*`` to get a match for each\n   statement within the body, and pass ``--xml`` and/or ``--ast`` to dump the\n   XML/AST structure:\n\n   .. code:: bash\n\n      $ pyastgrep --xml --ast './*/*' myfile.py\n      myfile.py:1:1:import os\n      Import(\n          lineno=1,\n          col_offset=0,\n          end_lineno=1,\n          end_col_offset=9,\n          names=[alias(lineno=1, col_offset=7, end_lineno=1, end_col_offset=9, name='os', asname=None)],\n      )\n      <Import lineno=\"1\" col_offset=\"0\">\n        <names>\n          <alias lineno=\"1\" col_offset=\"7\" type=\"str\" name=\"os\"/>\n        </names>\n      </Import>\n      ...\n\n\nNote that the XML format is a very direct translation of the Python AST as\nproduced by the `ast module <https://docs.python.org/3/library/ast.html>`_ (with\nsome small additions made to improve usability for a few cases). This AST is not\nstable across Python versions, so the XML is not stable either. Normally changes\nin the AST correspond to new syntax that is added to Python, but in some cases a\nnew Python version will make significant changes made to the AST generated for\nthe same code.\n\nYou’ll also need some understanding of how to write XPath expressions (see links\nat the bottom), but the examples below should get you started.\n\nExamples\n--------\n\nUsages of a function called ``open``:\n\n.. code:: bash\n\n   $ pyastgrep './/Call/func/Name[@id=\"open\"]'\n   src/pyastgrep/search.py:88:18:            with open(path) as f:\n\nLiteral numbers (Python 3.8+):\n\n.. code:: bash\n\n   $ pyastgrep './/Constant[@type=\"int\" or @type=\"float\"]'\n   tests/examples/test_xml/everything.py:5:20:    assigned_int = 123\n   tests/examples/test_xml/everything.py:6:22:    assigned_float = 3.14\n\nFunction calls where:\n\n* the function is named ``open``:\n* the second positional argument is a string literal containing the character ``b``:\n\n.. code:: bash\n\n   pyastgrep './/Call[./func/Name[@id=\"open\"]][./args/Constant[position()=1][contains(@value, \"b\")]]'\n\nUsages of ``open`` that are **not** in a ``with`` item expression:\n\n.. code:: bash\n\n   pyastgrep './/Call[not(ancestor::withitem)]/func/Name[@id=\"open\"]'\n\nNames longer than 42 characters:\n\n.. code:: bash\n\n   $ pyastgrep './/Name[string-length(@id) > 42]'\n\n``except`` clauses that raise a different exception class than they catch:\n\n.. code:: bash\n\n   $ pyastgrep \"//ExceptHandler[body//Raise/exc//Name and not(contains(body//Raise/exc//Name/@id, type/Name/@id))]\"\n\nFunctions whose name contain a certain substring:\n\n.. code:: bash\n\n   $ pyastgrep './/FunctionDef[contains(@name, \"something\")]'\n\nClasses whose name matches a regular expression:\n\n.. code:: bash\n\n   $ pyastgrep \".//ClassDef[re:match('M.*', @name)]\"\n\n\nThe above uses the Python `re.match\n<https://docs.python.org/3/library/re.html#re.match>`_ method. You can also use\n``re:search`` to use the Python `re.search\n<https://docs.python.org/3/library/re.html#re.search>`_ method.\n\nCase-insensitive match of names on the left hand side of an assignment\ncontaining a certain string. This can be achieved using the ``lower-case``\nfunction from XPath2:\n\n.. code:: bash\n\n   $ pyastgrep './/Assign/targets//Name[contains(lower-case(@id), \"something\")]' --xpath2\n\n\nYou can also use regexes, passing the ``i`` (case-insensitive flag) as below, as\ndescribed in the Python `Regular Expression Syntax docs\n<https://docs.python.org/3/library/re.html#regular-expression-syntax>`_\n\n.. code:: bash\n\n   $ pyastgrep './/Assign/targets//Name[re:search(\"(?i)something\", @id)]'\n\n\nAssignments to the name ``foo``, including type annotated assignments, which\nuse ``AnnAssign``, and tuple unpacking assignments (while avoiding things like\n``foo.bar = ...``). Note the use of the ``|`` operator to do a union.\n\n.. code:: bash\n\n   $ pyastgrep '(.//AnnAssign/target|.//Assign/targets|.//Assign/targets/Tuple/elts)/Name[@id=\"foo\"]'\n\nDocstrings of functions/methods whose value contains “hello”:\n\n.. code:: bash\n\n   $ pyastgrep './/FunctionDef/body/Expr[1]/value/Constant[@type=\"str\"][contains(@value, \"hello\")]'\n\nFor-loop variables called ``i`` or ``j`` (including those created by tuple unpacking):\n\n.. code:: bash\n\n   $ pyastgrep './/For/target//Name[@id=\"i\" or @id=\"j\"]'\n\n\nMethod calls: These are actually “calls” on objects that are attributes of other\nobjects. This will match the top-level object:\n\n.. code:: bash\n\n   $ pyastgrep './/Call/func/Attribute'\n\n\nIndividual positional arguments to a method call named ``encode``, where the\narguments are literal strings or numbers. Note the use of ``Call[…]`` to match\n“Call nodes that have descendants that match …”, rather than matching those\ndescendant nodes themselves.\n\n.. code:: bash\n\n   $ pyastgrep './/Call[./func/Attribute[@attr=\"encode\"]]/args/Constant'\n\n\nFor a Django code base, find all ``.filter`` and ``.exclude`` method calls, and\nall ``Q`` object calls, which have a keyword argument where the name contains\nthe string ``\"user\"``, for finding ORM calls like\n``.filter(user__id__in=...)`` or ``Q(thing__user=...)``:\n\n.. code:: bash\n\n   pyastgrep '(.//Call[./func/Attribute[@attr=\"filter\" or @attr=\"exclude\"]] | .//Call[./func/Name[@id=\"Q\"]]) [./keywords/keyword[contains(@arg, \"user\")]]'\n\n\nIgnoring files\n--------------\n\nFiles/directories matching ``.gitignore`` entries (global and local) are\nautomatically ignored, unless specified as paths on the command line.\n\nCurrently there are no other methods to add or remove this ignoring logic.\nPlease open a ticket if you want this feature. Most likely we should try to make\nit work like `ripgrep filtering\n<https://github.com/BurntSushi/ripgrep/blob/master/GUIDE.md#manual-filtering-globs>`_\nif that makes sense.\n\nCSS selectors\n-------------\n\nIn general, XPath expressions are more powerful than CSS selectors, and CSS\nselectors have some things that are specific to HTML (such as specific selectors\nfor ``id`` and ``class``). However, it may be easier to get started using CSS\nselectors, and for some things CSS selectors are easier. In that case, just pass\n``--css`` and the expression will be interpreted as a CSS selector instead.\n\nFor example, to get the first statement in each ``for`` statement body:\n\n.. code:: bash\n\n   $ pyastgrep --css 'For > body > *:first-child'\n\nThe CSS selector will converted to an XPath expression with a prefix of ``.//``\n— that is, it will be interpreted as a query over all the document.\n\nNote that unlike CSS selectors in HTML, the expression will be interpreted\ncase-sensitively.\n\nYou can also use the online tool `css2xpath <https://css2xpath.github.io/>`_ to\ndo translations before passing to ``pyastgrep``. This tool also supports some\nthings that our `cssselect (our dependency) does not yet support\n<https://github.com/scrapy/cssselect/issues>`_.\n\nTips\n----\n\nAbsolute paths\n~~~~~~~~~~~~~~\nTo get pyastgrep to print absolute paths in results, pass the current absolute\npath as the directory to search::\n\n  pyastgrep \"...\" $(pwd)\n\n\nDebugging XPath expressions\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nUse the ``--xml`` option to see the XML for matches. If you need to see more\ncontext, you can use things like the ``parent`` or ``ancestor`` selector. For\nexample, you might do the following but get back more results than you want:\n\n.. code:: bash\n\n   $ pyastgrep './/Assign/targets//Name[@id=\"foo\"]\n   example.py:1:1:foo = 1\n   example.py:2:2:(foo, bar) = (3, 4)\n   example.py:3:1:foo.bar = 2\n\nHere you might be interested in the first two results, which both assign to\nthe name ``foo``, but not the last one since it does not. You can get the XML for the\nwhole matching assignment expressions like this:\n\n.. code:: bash\n\n   $ pyastgrep './/Assign/targets//Name[@id=\"foo\"]/ancestor::Assign' --xml\n   example.py:1:1:foo = 1\n   <Assign lineno=\"1\" col_offset=\"0\">\n     <targets>\n       <Name lineno=\"1\" col_offset=\"0\" type=\"str\" id=\"foo\">\n         <ctx>\n           <Store/>\n         </ctx>\n       </Name>\n     </targets>\n     <value>\n       <Constant lineno=\"1\" col_offset=\"6\" type=\"int\" value=\"1\"/>\n     </value>\n   </Assign>\n   ...\n\n\nYou could also go the other way and change the XPath expression to match on the\nparent ``Assign`` node — this matches “all ``Assign`` nodes that are parents of\na ``target`` node that is a parent of a ``Name`` node with attribute ``id``\nequal to ``\"foo\"``:\n\n.. code:: bash\n\n   $ pyastgrep './/Assign[./targets//Name[@id=\"foo\"]]' --xml\n\nLimitations\n-----------\n\npyastgrep is useful for grepping Python code at a fairly low level. It can be\nused for various refactoring or linting tasks. Some linting tasks require higher\nlevel understanding of a code base. For example, to detect use of a certain\nfunction, you need to cope with various ways that the function may be imported\nand used, and avoid detecting a function with the same name but from a different\nmodule. For these kinds of tasks, you might be interested in:\n\n* `Semgrep <https://semgrep.dev/>`_\n* `Fixit <https://github.com/Instagram/Fixit>`_\n\nIf you are using this as a library, you should note that while AST works well\nfor linting, it’s not as good for rewriting code, because AST does not contain\nor preserve things like formatting and comments. For a better approach, have a\nlook at `libCST <https://github.com/Instagram/LibCST>`_.\n\n\nUse as a library\n----------------\n\npyastgrep is structured internally to make it easy to use a library as well as\na CLI. However, while we will try not to break things without good reason, at this\npoint we are not documenting or guaranteeing API stability for these functions.\n\nEditor integration\n------------------\n\nEmacs\n~~~~~\n\npyastgrep works very well with ``compilation-mode`` and wrappers like\n``projectile-compile-project`` from `Projectile\n<https://docs.projectile.mx/projectile/usage.html#basic-usage>`_. We recommend\nsetting up a keyboard shortcut for ``next-error`` to enable you to step through\nresults easily.\n\nVisual Studio Code\n~~~~~~~~~~~~~~~~~~\n\nRun pyastgrep from a terminal and results will be hyperlinked automatically.\n\nPyCharm\n~~~~~~~\n\nRun pyastgrep from a terminal and results will be hyperlinked automatically.\n\nOthers\n~~~~~~\n\nContributions to this section gladly accepted!\n\n\n\nContributing\n------------\n\nGet test suite running::\n\n  pip install -r requirements-test.txt\n  pytest\n\nRun tests against all versions::\n\n  pip install tox\n  tox\n\nPlease install `pre-commit <https://pre-commit.com/>`_ in the repo::\n\n  pre-commit install\n\nThis will add Git hooks to run linters when committing, which ensures our style\n(black) and other things.\n\nYou can manually run these linters using::\n\n  pre-commit run --all --all-files\n\nRun mypy (we only expect it to pass on Python 3.10)::\n\n  mypy .\n\nBug fixes and other changes can be submitted using pull requests on GitHub. For\nlarge changes, it’s worth opening an issue first to discuss the approach.\n\nLinks\n-----\n\n- `Green tree snakes <https://greentreesnakes.readthedocs.io/en/latest/>`__ - a very readable overview of Python ASTs.\n- `ast module documentation <https://docs.python.org/3/library/ast.html>`__.\n- `Python AST Explorer <https://python-ast-explorer.com/>`__ for worked  examples of ASTs.\n- A `brief guide to XPath <http://www.w3schools.com/xml/xpath_syntax.asp>`__.\n  See also the `XPath Axes <https://www.w3schools.com/xml/xpath_axes.asp>`_ guide\n  which can be very helpful for matching related AST nodes.\n- `Online XPath Tester <https://extendsclass.com/xpath-tester.html>`_\n\nHistory\n-------\n\nThis project was forked from https://github.com/hchasestevens/astpath by `H.\nChase Stevens <http://www.chasestevens.com>`__. Main changes:\n\n* Added a test suite\n* Many bugs fixed\n* Significant rewrite of parts of code\n* Changes to match grep/ripgrep, including formatting and automatic filtering.\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/spookylukey/pyastgrep",
    "keywords": "xpath xml ast asts syntax query css grep",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyastgrep",
    "package_url": "https://pypi.org/project/pyastgrep/",
    "platform": null,
    "project_url": "https://pypi.org/project/pyastgrep/",
    "project_urls": {
      "Homepage": "https://github.com/spookylukey/pyastgrep"
    },
    "release_url": "https://pypi.org/project/pyastgrep/0.11/",
    "requires_dist": [
      "lxml (>=3.3.5)",
      "elementpath",
      "astpretty",
      "pathspec",
      "cssselect (>=1.2)"
    ],
    "requires_python": "",
    "summary": "A query tool for Python abstract syntax trees",
    "version": "0.11",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16945175,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "afbd087d9379a214887772bf44d6356f60781c2af2799138285edc4d53b405f7",
          "md5": "e789018d3d6829024c3142e2250409ce",
          "sha256": "ff25c97db13dee881a9ba9a6c745743e6aa37ff9702f9af6b9416cd7613b32da"
        },
        "downloads": -1,
        "filename": "pyastgrep-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e789018d3d6829024c3142e2250409ce",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7481,
        "upload_time": "2022-10-26T12:20:35",
        "upload_time_iso_8601": "2022-10-26T12:20:35.174076Z",
        "url": "https://files.pythonhosted.org/packages/af/bd/087d9379a214887772bf44d6356f60781c2af2799138285edc4d53b405f7/pyastgrep-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2107559d53eee313fe9f90e1fd8e8b115c47d9d695cc63cc8c7571c13b874c40",
          "md5": "64af805c81e10e2d16766c3b77d3e80c",
          "sha256": "1ed0ee25aa3f12cb92700bf51538dbf9557e3316c9341023ec2eb06ac463b5a6"
        },
        "downloads": -1,
        "filename": "pyastgrep-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "64af805c81e10e2d16766c3b77d3e80c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10326,
        "upload_time": "2022-10-26T12:20:36",
        "upload_time_iso_8601": "2022-10-26T12:20:36.525495Z",
        "url": "https://files.pythonhosted.org/packages/21/07/559d53eee313fe9f90e1fd8e8b115c47d9d695cc63cc8c7571c13b874c40/pyastgrep-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7779041c36b99162dbe42050c3e82328003a6f109a7fbb530ed7593d9e527db7",
          "md5": "a6d7a212d1508de3f047ca3002e1a24d",
          "sha256": "21ea7f5d104e11fc3ae0f5b5491acf3cd053737edb275d353a636693d79ddcd7"
        },
        "downloads": -1,
        "filename": "pyastgrep-0.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a6d7a212d1508de3f047ca3002e1a24d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17906,
        "upload_time": "2022-11-25T08:21:02",
        "upload_time_iso_8601": "2022-11-25T08:21:02.611551Z",
        "url": "https://files.pythonhosted.org/packages/77/79/041c36b99162dbe42050c3e82328003a6f109a7fbb530ed7593d9e527db7/pyastgrep-0.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "054b00042749282ed7cfc7ecc00460a766b8fe25981d109f611acff0fd642221",
          "md5": "376dfaa1df0d035705c5714ea9705465",
          "sha256": "db9b0b609a5ae893e0dd28e95e26aac2b70ef60c2169961a9b53ede1135edd45"
        },
        "downloads": -1,
        "filename": "pyastgrep-0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "376dfaa1df0d035705c5714ea9705465",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 22033,
        "upload_time": "2022-11-25T08:21:05",
        "upload_time_iso_8601": "2022-11-25T08:21:05.761747Z",
        "url": "https://files.pythonhosted.org/packages/05/4b/00042749282ed7cfc7ecc00460a766b8fe25981d109f611acff0fd642221/pyastgrep-0.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "850deab6ba26a3cc68a8e3ea3d23f5b32c879907752edfc4e388be617b32fc38",
          "md5": "d1857fd0e9669b9fafdaa0ec77c5aa39",
          "sha256": "42a0ee51d3f7c05090360d463fe5dde61221d6caab95382c59699fe245ca43fa"
        },
        "downloads": -1,
        "filename": "pyastgrep-0.11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d1857fd0e9669b9fafdaa0ec77c5aa39",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18385,
        "upload_time": "2023-02-20T15:49:19",
        "upload_time_iso_8601": "2023-02-20T15:49:19.516356Z",
        "url": "https://files.pythonhosted.org/packages/85/0d/eab6ba26a3cc68a8e3ea3d23f5b32c879907752edfc4e388be617b32fc38/pyastgrep-0.11-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5b67f56d894f034632e4bb7ba5ef2d98c97bf8d2c900cb36681eb6be5deaae6d",
          "md5": "7318500662879d9aa12cbd5258d3e330",
          "sha256": "7314a6cceac35e46b84dee9e88dea1986e5e45952dd8cb588018edd8721e9662"
        },
        "downloads": -1,
        "filename": "pyastgrep-0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "7318500662879d9aa12cbd5258d3e330",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 27149,
        "upload_time": "2023-02-20T15:49:21",
        "upload_time_iso_8601": "2023-02-20T15:49:21.336768Z",
        "url": "https://files.pythonhosted.org/packages/5b/67/f56d894f034632e4bb7ba5ef2d98c97bf8d2c900cb36681eb6be5deaae6d/pyastgrep-0.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "83888ea82d2c40737ab18d55e41d3eff60b657c151e5e53fc2267c87d87ad5b3",
          "md5": "cf785b3906c332ca24096fab76d226b5",
          "sha256": "f36dfa3736c8ebf5187a01f17f2da4758ee004a7941fff2cb62cdf338926cb31"
        },
        "downloads": -1,
        "filename": "pyastgrep-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cf785b3906c332ca24096fab76d226b5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10130,
        "upload_time": "2022-10-26T13:14:38",
        "upload_time_iso_8601": "2022-10-26T13:14:38.287489Z",
        "url": "https://files.pythonhosted.org/packages/83/88/8ea82d2c40737ab18d55e41d3eff60b657c151e5e53fc2267c87d87ad5b3/pyastgrep-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "00c444ee4e20c3d3381f9779c05db277c5ca249839098d6ff7df833261c9b189",
          "md5": "7fa190c5d5e4c09ae21f9d09c54f607a",
          "sha256": "079ab6a86486552087700c1ef48e17945d642b36e7b91bbc47d698b03f49481c"
        },
        "downloads": -1,
        "filename": "pyastgrep-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7fa190c5d5e4c09ae21f9d09c54f607a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12171,
        "upload_time": "2022-10-26T13:14:39",
        "upload_time_iso_8601": "2022-10-26T13:14:39.598771Z",
        "url": "https://files.pythonhosted.org/packages/00/c4/44ee4e20c3d3381f9779c05db277c5ca249839098d6ff7df833261c9b189/pyastgrep-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8e7595c8172a27db8bad66579ab24553184b4e63260215c8a7fae85b128c7565",
          "md5": "74fd660f13e167361916e341cf3e8f09",
          "sha256": "73fbc22783dd25d96cd22eb5dd326f1694fbbf3f52f6ba66e29a24b3135aac8a"
        },
        "downloads": -1,
        "filename": "pyastgrep-0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "74fd660f13e167361916e341cf3e8f09",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10712,
        "upload_time": "2022-10-27T10:23:04",
        "upload_time_iso_8601": "2022-10-27T10:23:04.330161Z",
        "url": "https://files.pythonhosted.org/packages/8e/75/95c8172a27db8bad66579ab24553184b4e63260215c8a7fae85b128c7565/pyastgrep-0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4d56cf04090581d6d0f6a8eb8a32d278f4402509821aa834f46b269956c4820b",
          "md5": "4d6ce177a3e9c5d598e3df527a358fca",
          "sha256": "c34826503d6d21149ee2296bd599ff1ae215b5f76dc67193acababb5c4ffebfc"
        },
        "downloads": -1,
        "filename": "pyastgrep-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "4d6ce177a3e9c5d598e3df527a358fca",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13815,
        "upload_time": "2022-10-27T10:23:06",
        "upload_time_iso_8601": "2022-10-27T10:23:06.225201Z",
        "url": "https://files.pythonhosted.org/packages/4d/56/cf04090581d6d0f6a8eb8a32d278f4402509821aa834f46b269956c4820b/pyastgrep-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "39528adb477dd51816f8fd6904e4927b559ae8d53f63b9befd292ea69021de57",
          "md5": "582fe4e44ebb5757f7575f2e47a82e73",
          "sha256": "d24cccd312984697a70878d601521c69b153f8b46b16663abadf5ffea3204cf1"
        },
        "downloads": -1,
        "filename": "pyastgrep-0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "582fe4e44ebb5757f7575f2e47a82e73",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 14152,
        "upload_time": "2022-11-07T12:25:07",
        "upload_time_iso_8601": "2022-11-07T12:25:07.601969Z",
        "url": "https://files.pythonhosted.org/packages/39/52/8adb477dd51816f8fd6904e4927b559ae8d53f63b9befd292ea69021de57/pyastgrep-0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "097df1749f438f14e0d975be3f6acf3b38509bc609467a390468fad014207b25",
          "md5": "749b35bf52b0a90ea33f3b3acbc2bf94",
          "sha256": "ea71918782acfe98106d88578b3d51823c74823b3a6e54e15a5796bcff4aba1e"
        },
        "downloads": -1,
        "filename": "pyastgrep-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "749b35bf52b0a90ea33f3b3acbc2bf94",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16879,
        "upload_time": "2022-11-07T12:25:09",
        "upload_time_iso_8601": "2022-11-07T12:25:09.810484Z",
        "url": "https://files.pythonhosted.org/packages/09/7d/f1749f438f14e0d975be3f6acf3b38509bc609467a390468fad014207b25/pyastgrep-0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b5223d7ef7de2f59812039565f4c03513be3489a59105c5724e3535d7a2fd298",
          "md5": "4a4e71a1423d012f2c5184469e3d66a5",
          "sha256": "7436754f5b4adc26d0cb470400e12fcf9720d99fd2147152c8239d197eb6bfee"
        },
        "downloads": -1,
        "filename": "pyastgrep-0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4a4e71a1423d012f2c5184469e3d66a5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 14185,
        "upload_time": "2022-11-07T12:57:27",
        "upload_time_iso_8601": "2022-11-07T12:57:27.805403Z",
        "url": "https://files.pythonhosted.org/packages/b5/22/3d7ef7de2f59812039565f4c03513be3489a59105c5724e3535d7a2fd298/pyastgrep-0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "885752970676648e42655160d94fe484015f5e7bf9012174b869abaada3a1cd2",
          "md5": "87d52baff2a7cadda5300db3ceed5401",
          "sha256": "6da031bcbe71e9b5ebd327d0f0d59d7787407aab7449e0b38288c4e7c3a5927c"
        },
        "downloads": -1,
        "filename": "pyastgrep-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "87d52baff2a7cadda5300db3ceed5401",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16932,
        "upload_time": "2022-11-07T12:57:30",
        "upload_time_iso_8601": "2022-11-07T12:57:30.924392Z",
        "url": "https://files.pythonhosted.org/packages/88/57/52970676648e42655160d94fe484015f5e7bf9012174b869abaada3a1cd2/pyastgrep-0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "27625df20d3677d565c0317e5c42c5347ab78aebc9d470cef72daecd11198345",
          "md5": "136a497813e8c4e0dd985cb0a7cdc88b",
          "sha256": "99fa11919efaf311c308be2987caac8964ce0593d5c89cdc5026b97be26e72e0"
        },
        "downloads": -1,
        "filename": "pyastgrep-0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "136a497813e8c4e0dd985cb0a7cdc88b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 14953,
        "upload_time": "2022-11-07T19:12:44",
        "upload_time_iso_8601": "2022-11-07T19:12:44.699209Z",
        "url": "https://files.pythonhosted.org/packages/27/62/5df20d3677d565c0317e5c42c5347ab78aebc9d470cef72daecd11198345/pyastgrep-0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "71e6efe08aaf5f500ac636e23a824f34c4653405519c1e054dbede8767d0914d",
          "md5": "c14ffb5d0d1dd41212fc328aab895871",
          "sha256": "a8e18a820bd3a0de47fa4702a69ba551183ce8eb28c9107530417bea55f16f44"
        },
        "downloads": -1,
        "filename": "pyastgrep-0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "c14ffb5d0d1dd41212fc328aab895871",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17678,
        "upload_time": "2022-11-07T19:12:47",
        "upload_time_iso_8601": "2022-11-07T19:12:47.021907Z",
        "url": "https://files.pythonhosted.org/packages/71/e6/efe08aaf5f500ac636e23a824f34c4653405519c1e054dbede8767d0914d/pyastgrep-0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8bdf2b04050a615649d8a0a9007bdbb9e8dc7925e7e75f188c3c8f276f7dbbca",
          "md5": "4c8618affd945669c9d791924229c78f",
          "sha256": "52f9f5f31677525422ae2db87e69eaff0d3fae5f19eddf5b6380ad7b28e03234"
        },
        "downloads": -1,
        "filename": "pyastgrep-0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4c8618affd945669c9d791924229c78f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 14967,
        "upload_time": "2022-11-07T21:08:13",
        "upload_time_iso_8601": "2022-11-07T21:08:13.466965Z",
        "url": "https://files.pythonhosted.org/packages/8b/df/2b04050a615649d8a0a9007bdbb9e8dc7925e7e75f188c3c8f276f7dbbca/pyastgrep-0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e07a665d9aba997eac9d173e17acd7d359adfba70bab869f63f6017e9b20cb3",
          "md5": "5b125cf94a6f51be9bd2e7055d4740cb",
          "sha256": "8922dea57102a2fe6c5d97cfd488ee44b5ecfb82602615a6265add7b9b805690"
        },
        "downloads": -1,
        "filename": "pyastgrep-0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "5b125cf94a6f51be9bd2e7055d4740cb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17711,
        "upload_time": "2022-11-07T21:08:15",
        "upload_time_iso_8601": "2022-11-07T21:08:15.285280Z",
        "url": "https://files.pythonhosted.org/packages/7e/07/a665d9aba997eac9d173e17acd7d359adfba70bab869f63f6017e9b20cb3/pyastgrep-0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ae98318f0ed6e20c875ee8f6670e2aaf48c7d46dbbb9503b9edffd671fbd80b0",
          "md5": "5c143b9af581745bbc3fdceff1fbd3ac",
          "sha256": "f2c96abf381f3fdfd93ea06c0b81083260fa712794895299cfae2d8323f9fe4e"
        },
        "downloads": -1,
        "filename": "pyastgrep-0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5c143b9af581745bbc3fdceff1fbd3ac",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16490,
        "upload_time": "2022-11-14T15:57:35",
        "upload_time_iso_8601": "2022-11-14T15:57:35.599552Z",
        "url": "https://files.pythonhosted.org/packages/ae/98/318f0ed6e20c875ee8f6670e2aaf48c7d46dbbb9503b9edffd671fbd80b0/pyastgrep-0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "df6e8514cfb2fbdfcab326cc75b06b0b78b037b0690071be2e10ad299b9da1e6",
          "md5": "0343900bb79a196920e8ffd7a12383ce",
          "sha256": "4b36835191375ae1a8af149ed4505da9848b620f3de573e1b442bac8c11cd41f"
        },
        "downloads": -1,
        "filename": "pyastgrep-0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "0343900bb79a196920e8ffd7a12383ce",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20633,
        "upload_time": "2022-11-14T15:57:37",
        "upload_time_iso_8601": "2022-11-14T15:57:37.655572Z",
        "url": "https://files.pythonhosted.org/packages/df/6e/8514cfb2fbdfcab326cc75b06b0b78b037b0690071be2e10ad299b9da1e6/pyastgrep-0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3ed7999dbf1760d781acb67461bc40ba8e601bdc5d1ca9367e023b8b69a020e9",
          "md5": "771293c22133e2e45f7e2f2f7025ac93",
          "sha256": "ce784562bf65d20797e0840570222c0e484d5864af7d0eb663dbc0fae903cf4d"
        },
        "downloads": -1,
        "filename": "pyastgrep-0.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "771293c22133e2e45f7e2f2f7025ac93",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17320,
        "upload_time": "2022-11-16T20:47:54",
        "upload_time_iso_8601": "2022-11-16T20:47:54.988264Z",
        "url": "https://files.pythonhosted.org/packages/3e/d7/999dbf1760d781acb67461bc40ba8e601bdc5d1ca9367e023b8b69a020e9/pyastgrep-0.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6600414e399f532fa8eebaa99bb80011847f23481bae2ffc24793c53fa4e0489",
          "md5": "f996d7000e5e395247e7459113757870",
          "sha256": "cf142acf90c5aa81b797fcf0dd31e45a229b40f3d4362e7d9f6b867fa038e8a9"
        },
        "downloads": -1,
        "filename": "pyastgrep-0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "f996d7000e5e395247e7459113757870",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21299,
        "upload_time": "2022-11-16T20:47:57",
        "upload_time_iso_8601": "2022-11-16T20:47:57.641314Z",
        "url": "https://files.pythonhosted.org/packages/66/00/414e399f532fa8eebaa99bb80011847f23481bae2ffc24793c53fa4e0489/pyastgrep-0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "850deab6ba26a3cc68a8e3ea3d23f5b32c879907752edfc4e388be617b32fc38",
        "md5": "d1857fd0e9669b9fafdaa0ec77c5aa39",
        "sha256": "42a0ee51d3f7c05090360d463fe5dde61221d6caab95382c59699fe245ca43fa"
      },
      "downloads": -1,
      "filename": "pyastgrep-0.11-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d1857fd0e9669b9fafdaa0ec77c5aa39",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 18385,
      "upload_time": "2023-02-20T15:49:19",
      "upload_time_iso_8601": "2023-02-20T15:49:19.516356Z",
      "url": "https://files.pythonhosted.org/packages/85/0d/eab6ba26a3cc68a8e3ea3d23f5b32c879907752edfc4e388be617b32fc38/pyastgrep-0.11-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5b67f56d894f034632e4bb7ba5ef2d98c97bf8d2c900cb36681eb6be5deaae6d",
        "md5": "7318500662879d9aa12cbd5258d3e330",
        "sha256": "7314a6cceac35e46b84dee9e88dea1986e5e45952dd8cb588018edd8721e9662"
      },
      "downloads": -1,
      "filename": "pyastgrep-0.11.tar.gz",
      "has_sig": false,
      "md5_digest": "7318500662879d9aa12cbd5258d3e330",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 27149,
      "upload_time": "2023-02-20T15:49:21",
      "upload_time_iso_8601": "2023-02-20T15:49:21.336768Z",
      "url": "https://files.pythonhosted.org/packages/5b/67/f56d894f034632e4bb7ba5ef2d98c97bf8d2c900cb36681eb6be5deaae6d/pyastgrep-0.11.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}