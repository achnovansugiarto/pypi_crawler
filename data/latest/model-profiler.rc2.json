{
  "info": {
    "author": "Talha Ilyas",
    "author_email": "mr.talhailyas@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Education",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n<img alt=\"Keras\" src=\"https://img.shields.io/badge/Keras%20-%23D00000.svg?&style=for-the-badge&logo=Keras&logoColor=white\"/> <img alt=\"TensorFlow\" src=\"https://img.shields.io/badge/TensorFlow%20-%23FF6F00.svg?&style=for-the-badge&logo=TensorFlow&logoColor=white\" /> [![Generic badge](https://img.shields.io/badge/Version-1.1.8-<COLOR>.svg)](https://shields.io/) [![Downloads](https://pepy.tech/badge/model-profiler)](https://pepy.tech/project/model-profiler)\n\n# Tensorflow/ Keras Model Profiler\n\nGives you some basic but important information about your `tf` or `keras` model like,\n\n* Model Parameters\n* Model memory requirement on GPU\n* Memory required to store parameters `model weights`.\n* GPU availability and GPU IDs if available\n\n#### Version 1.1.8 fixes problems with custom sequential models and includes other minor improvements.\n\n## Dependencies\n\n```\npython >= 3.6\nnumpy \ntabulate\ntensorflow >= 2.0.0\nkeras >= 2.2.4\n```\nBuilt and tested on `tensorflow >= 2.3.1`\n\n## Installation \n\nusing pip.\n```\npip install model_profiler\n```\n\n## Usage\n\nFirs load any model built using keras or tensorflow. Here for simplicity we will load model from kera applications.\n\n```python\nfrom tensorflow.keras.applications import EfficientNetB3\n\nmodel = EfficientNetB3(include_top=True)\n\n```\n\nNow after installing `model_profiler` run\n\n```python\nfrom model_profiler import model_profiler\n\nBatch_size = 128\nprofile = model_profiler(model, Batch_size)\n\nprint(profile)\n```\n`Batch_size` have effect on `model` memory usage so GPU memory usage need `batch_size`, it's default value if `1`.\n\n### Output\n\n```\n| Model Profile                    | Value         | Unit    |\n|----------------------------------|---------------|---------|\n| Selected GPUs                    | ['0', '1']    | GPU IDs |\n| No. of FLOPs                     | 1.5651        | BFLOPs  |\n| GPU Memory Requirement           | 41.7385       | GB      |\n| Model Parameters                 | 12.3205       | Million |\n| Memory Required by Model Weights | 46.9991       | MB      |\n```\n## Using Custom Models\nyou can also built your own models on top of `keras.application` a simple example is given below. The usage is almost same the only difference is that for better calculation of `FLOPs`, it's better to \nsepcify the `input_shape` argument. Simple example below.\n\n```python\nfrom tensorflow.keras.applications import EfficientNetB3\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense, Dropout\nfrom profiler import model_profiler\n\n\ncustom_model = Sequential()\ncustom_model.add(EfficientNetB3(weights='imagenet', include_top=False,\n                                input_shape=(296,256,3), pooling='avg'))\n\n# build you custom layers on top\ncustom_model.add(Dropout(0.50))\ncustom_model.add(Dense(1000, activation='softmax'))\n\n\nprofile = model_profiler(custom_model, Batch_size)\n\n```\n### Output\n\n```\n| Model Profile                    | Value         | Unit    |\n|----------------------------------|---------------|---------|\n| Selected GPUs                    | None Detected | GPU IDs |\n| No. of FLOPs                     | 1.2868        | BFLOPs  |\n| GPU Memory Requirement           | 34.8656       | GB      |\n| Model Parameters                 | 10.7989       | Million |\n| Memory Required by Model Weights | 41.1945       | MB      |\n```\n\n\n## Units \n\nDefault units for the prfiler are\n\n```\n# in order \nuse_units = ['GPU IDs', 'BFLOPs', 'GB', 'Million', 'MB']\n\n```\nYou can change units by changing the list entry in appropriate location. For example if you want to get `model` FLOPs in million just change the list as follows.\n\n```\n# keep order \nuse_units = ['GPU IDs', 'MFLOPs', 'GB', 'Million', 'MB']\n```\n### Availabel units are\n```\n    'GB':memory unit gega-byte\n    'MB': memory unit mega-byte\n    'MFLOPs':  FLOPs unit million-flops\n    'BFLOPs':  FLOPs unit billion-flops\n    'Million': paprmeter count unit millions\n    'Billion': paprmeter count unit billions\n\n```\n## More Examples\n\nFor further details and more examples visit my [github](https://github.com/Mr-TalhaIlyas/Tensorflow-Keras-Model-Profiler)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Mr-TalhaIlyas/Tensorflow-Keras-Model-Profiler",
    "keywords": "python,model_profile,gpu memory usage,model flops,model parameters,gpu availabilitymdoel memory requirement,weights memory requirement",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "model-profiler",
    "package_url": "https://pypi.org/project/model-profiler/",
    "platform": "",
    "project_url": "https://pypi.org/project/model-profiler/",
    "project_urls": {
      "Homepage": "https://github.com/Mr-TalhaIlyas/Tensorflow-Keras-Model-Profiler"
    },
    "release_url": "https://pypi.org/project/model-profiler/1.1.8/",
    "requires_dist": [
      "numpy",
      "tabulate"
    ],
    "requires_python": "",
    "summary": "Tensorflow/Keras Model Profiler: Tells you model's memory requirement, no. of parameters, flops etc.",
    "version": "1.1.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10964998,
  "releases": {
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c5362afe2e49b0002c6c569a9e7f1fa25363efbbb30f48bcb2f25e1a0dd54c2d",
          "md5": "a15ce7dbba6a0b3d3d166ae113228cde",
          "sha256": "e3bcbb0f99c3065a2ac435493731906e03f8fe230bf017b94c49dd7e26da5552"
        },
        "downloads": -1,
        "filename": "model_profiler-0.1.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a15ce7dbba6a0b3d3d166ae113228cde",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6292,
        "upload_time": "2021-04-07T12:06:26",
        "upload_time_iso_8601": "2021-04-07T12:06:26.717173Z",
        "url": "https://files.pythonhosted.org/packages/c5/36/2afe2e49b0002c6c569a9e7f1fa25363efbbb30f48bcb2f25e1a0dd54c2d/model_profiler-0.1.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2bb5b6e2739c410d321afd12bbe89b6e32ecce274b1f74ccdf1c3ff6784c1fae",
          "md5": "f4b9fb41e2f83569cb4a9b01e3788cbb",
          "sha256": "59f20767c030ea6b3799467b6678e009cb12eb1657cc0fdf90e2b53695211f1d"
        },
        "downloads": -1,
        "filename": "model_profiler-0.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "f4b9fb41e2f83569cb4a9b01e3788cbb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4966,
        "upload_time": "2021-04-07T12:06:27",
        "upload_time_iso_8601": "2021-04-07T12:06:27.724903Z",
        "url": "https://files.pythonhosted.org/packages/2b/b5/b6e2739c410d321afd12bbe89b6e32ecce274b1f74ccdf1c3ff6784c1fae/model_profiler-0.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "77dd26702f220aca6457fb14c36f0e6d4965d97b9102fd1e291f1ad2dac61a4f",
          "md5": "ebeef2d9496bfe666cc217e01291bc5e",
          "sha256": "06a64693b3951b52737c91839cd9399344450895afeb86cae3683c0e18ae4926"
        },
        "downloads": -1,
        "filename": "model_profiler-1.1.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ebeef2d9496bfe666cc217e01291bc5e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6363,
        "upload_time": "2021-07-21T09:12:10",
        "upload_time_iso_8601": "2021-07-21T09:12:10.622065Z",
        "url": "https://files.pythonhosted.org/packages/77/dd/26702f220aca6457fb14c36f0e6d4965d97b9102fd1e291f1ad2dac61a4f/model_profiler-1.1.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "71c9947592f8ab32095ca6baa28837727c13572dce32f68a23127495607c5835",
          "md5": "9759a01f64c7e83c49dea219a89a0578",
          "sha256": "2bb682849150bb9306353f15fb6b9bc3598fa382deaecfe6a1f7b16a585b806d"
        },
        "downloads": -1,
        "filename": "model_profiler-1.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "9759a01f64c7e83c49dea219a89a0578",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6860,
        "upload_time": "2021-07-21T09:12:12",
        "upload_time_iso_8601": "2021-07-21T09:12:12.275066Z",
        "url": "https://files.pythonhosted.org/packages/71/c9/947592f8ab32095ca6baa28837727c13572dce32f68a23127495607c5835/model_profiler-1.1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "77dd26702f220aca6457fb14c36f0e6d4965d97b9102fd1e291f1ad2dac61a4f",
        "md5": "ebeef2d9496bfe666cc217e01291bc5e",
        "sha256": "06a64693b3951b52737c91839cd9399344450895afeb86cae3683c0e18ae4926"
      },
      "downloads": -1,
      "filename": "model_profiler-1.1.8-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ebeef2d9496bfe666cc217e01291bc5e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 6363,
      "upload_time": "2021-07-21T09:12:10",
      "upload_time_iso_8601": "2021-07-21T09:12:10.622065Z",
      "url": "https://files.pythonhosted.org/packages/77/dd/26702f220aca6457fb14c36f0e6d4965d97b9102fd1e291f1ad2dac61a4f/model_profiler-1.1.8-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "71c9947592f8ab32095ca6baa28837727c13572dce32f68a23127495607c5835",
        "md5": "9759a01f64c7e83c49dea219a89a0578",
        "sha256": "2bb682849150bb9306353f15fb6b9bc3598fa382deaecfe6a1f7b16a585b806d"
      },
      "downloads": -1,
      "filename": "model_profiler-1.1.8.tar.gz",
      "has_sig": false,
      "md5_digest": "9759a01f64c7e83c49dea219a89a0578",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6860,
      "upload_time": "2021-07-21T09:12:12",
      "upload_time_iso_8601": "2021-07-21T09:12:12.275066Z",
      "url": "https://files.pythonhosted.org/packages/71/c9/947592f8ab32095ca6baa28837727c13572dce32f68a23127495607c5835/model_profiler-1.1.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}