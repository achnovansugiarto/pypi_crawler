{
  "info": {
    "author": "Google LLC",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# google-datacatalog-saphana-connector\n\nLibrary for ingesting SAP Hana Database metadata into Google Cloud Data Catalog.\n\n[![Python package][2]][2] [![PyPi][3]][4] [![License][5]][5] [![Issues][6]][7]\n\n**Disclaimer: This is not an officially supported Google product.**\n\n<!--\n  ⚠️ DO NOT UPDATE THE TABLE OF CONTENTS MANUALLY ️️⚠️\n  run `npx markdown-toc -i README.md`.\n\n  Please stick to 80-character line wraps as much as you can.\n-->\n\n## Table of Contents\n\n<!-- toc -->\n\n- [1. Installation](#1-installation)\n  * [1.1. Mac/Linux](#11-maclinux)\n  * [1.2. Windows](#12-windows)\n  * [1.3. Install from source](#13-install-from-source)\n    + [1.3.1. Get the code](#131-get-the-code)\n    + [1.3.2. Create and activate a *virtualenv*](#132-create-and-activate-a-virtualenv)\n    + [1.3.3. Install the library](#133-install-the-library)\n- [2. Environment setup](#2-environment-setup)\n  * [2.1. Auth credentials](#21-auth-credentials)\n    + [2.1.1. Create a service account and grant it below roles](#211-create-a-service-account-and-grant-it-below-roles)\n    + [2.1.2. Download a JSON key and save it as](#212-download-a-json-key-and-save-it-as)\n  * [2.2. Set environment variables](#22-set-environment-variables)\n- [3. Adapt user configurations](#3-adapt-user-configurations)\n- [4. Run entry point](#4-run-entry-point)\n  * [4.1. Run Python entry point](#41-run-python-entry-point)\n  * [4.2. Run Docker entry point](#42-run-docker-entry-point)\n- [5 Scripts inside tools](#5-scripts-inside-tools)\n  * [5.1. Run clean up](#51-run-clean-up)\n- [6. Developer environment](#6-developer-environment)\n  * [6.1. Install and run Yapf formatter](#61-install-and-run-yapf-formatter)\n  * [6.2. Install and run Flake8 linter](#62-install-and-run-flake8-linter)\n  * [6.3. Run Tests](#63-run-tests)\n- [7. Metrics](#7-metrics)\n- [8. Troubleshooting](#8-troubleshooting)\n\n<!-- tocstop -->\n\n-----\n\n## 1. Installation\n\nInstall this library in a [virtualenv][1] using pip. [virtualenv][1] is a tool to\ncreate isolated Python environments. The basic problem it addresses is one of\ndependencies and versions, and indirectly permissions.\n\nWith [virtualenv][1], it's possible to install this library without needing system\ninstall permissions, and without clashing with the installed system\ndependencies. Make sure you use Python 3.6+. This connector is tested in versions\n3.6, 3.7, 3.8.\n\n\n### 1.1. Mac/Linux\n\n```shell script\npip3 install virtualenv\nvirtualenv --python python3.7 <your-env>\nsource <your-env>/bin/activate\n<your-env>/bin/pip install google-datacatalog-saphana-connector\n```\n\n### 1.2. Windows\n\n```bash\npip3 install virtualenv\nvirtualenv --python python3.7 <your-env>\n<your-env>\\Scripts\\activate\n<your-env>\\Scripts\\pip.exe install google-datacatalog-saphana-connector\n```\n\n### 1.3. Install from source\n\n#### 1.3.1. Get the code\n\n````bash\ngit clone https://github.com/GoogleCloudPlatform/datacatalog-connectors-rdbms/\ncd datacatalog-connectors-rdbms/google-datacatalog-saphana-connector\n````\n\n#### 1.3.2. Create and activate a *virtualenv*\n\n```bash\npip3 install virtualenv\nvirtualenv --python python3.7 <your-env>\nsource <your-env>/bin/activate\n```\n\n#### 1.3.3. Install the library\n\n```bash\npip install .\n```\n\n## 2. Environment setup\n\n### 2.1. Auth credentials\n\n#### 2.1.1. Create a service account and grant it below roles\n\n- Data Catalog Admin\n\n#### 2.1.2. Download a JSON key and save it as\n- `<YOUR-CREDENTIALS_FILES_FOLDER>/saphana2dc-credentials.json`\n\n> Please notice this folder and file will be required in next steps.\n\n### 2.2. Set environment variables\n\nReplace below values according to your environment:\n\n```bash\nexport GOOGLE_APPLICATION_CREDENTIALS=data_catalog_credentials_file\n\nexport SAPHANA2DC_DATACATALOG_PROJECT_ID=google_cloud_project_id\nexport SAPHANA2DC_DATACATALOG_LOCATION_ID=google_cloud_location_id\nexport SAPHANA2DC_SAPHANA_SERVER=saphana_server\nexport SAPHANA2DC_SAPHANA_USERNAME=saphana_username\nexport SAPHANA2DC_SAPHANA_PASSWORD=saphana_password\nexport SAPHANA2DC_SAPHANA_DATABASE=saphana_database\nexport SAPHANA2DC_RAW_METADATA_CSV=saphana_raw_csv (If supplied ignores the SAPHANA server credentials)\n\n```\n\n## 3. Adapt user configurations\n\nAlong with default metadata, the connector can enrich metadata with user provided values as well,\n such as adding a prefix to each schema and tables name. \n\n The table below shows what metadata is scraped by default, and what is configurable.\n\n| Metadata                     | Description                                        | Scraped by default | Config option                                |                    \n| ---                          | ---                                                | ---                | ---                                          |                       \n| schema_name                  | Name of the Schema                                 | Y                  | ---                                          | \n| schema_owner                 | Owner of the Schema                                | Y                  | ---                                          | \n| schema_create_time           | Schema creation time                               | Y                  | ---                                          | \n| table_name                   | Name of a table                                    | Y                  | ---                                          | \n| table_type                   | Type of the table (ROW or COLUMN oriented)         | Y                  | ---                                          | \n| has_primary_key              | Whether a Table has a primary key                  | Y                  | ---                                          | \n| table_description            | Table description                                  | Y                  | ---                                          | \n| table_create_time            | Table creation time                                | Y                  | ---                                          | \n| column_name                  | Name of a column                                   | Y                  | ---                                          | \n| column_type                  | Column data type                                   | Y                  | ---                                          | \n| column_nullable              | Whether a column is nullable                       | Y                  | ---                                          | \n| column_mask                  | Whether a column has data mask                     | Y                  | ---                                          | \n| column_mask_expression       | Column mask expression                             | Y                  | ---                                          |\n| prefix                       | Prefix to be added to schema and tables name       | N/A                | enrich_metadata.entry_prefix                 | \n| entry_id_pattern_for_prefix  | Entry ID pattern which the prefix will be applied  | N/A                | enrich_metadata.entry_id_pattern_for_prefix  | \n| table_size_mb                | Size of a table, in MB                             | N                  | sync_row_counts                              | \n| table_rows                   | Number of rows in a table                          | N                  | sync_row_counts                              |\n\n\n `prefix` should comply with Data Catalog `entryId`: \n ```text\nThe ID must begin with a letter or underscore, contain only English letters, numbers and underscores, and have at most 64 characters (combined the prefix + the entryId).\n```   \n\nif the `entry_id_pattern_for_prefix` is supplied, the prefix will only be applied to this pattern.\n\nSample configuration file [ingest_cfg.yaml](https://github.com/GoogleCloudPlatform/datacatalog-connectors-rdbms/blob/master/google-datacatalog-saphana-connector/ingest_cfg.yaml) in the repository root shows what kind of configuration is expected. \n\n**If you want to enable the user defined config, please add ingest_cfg.yaml to the directory from which you execute the connector and adapt it to your needs.** \n\n## 4. Run entry point\n\n### 4.1. Run Python entry point\n\n- Virtualenv\n\n```bash\ngoogle-datacatalog-saphana-connector \\\n--datacatalog-project-id=$SAPHANA2DC_DATACATALOG_PROJECT_ID \\\n--datacatalog-location-id=$SAPHANA2DC_DATACATALOG_LOCATION_ID \\\n--saphana-host=$SAPHANA2DC_SAPHANA_SERVER \\\n--saphana-user=$SAPHANA2DC_SAPHANA_USERNAME \\\n--saphana-pass=$SAPHANA2DC_SAPHANA_PASSWORD \\\n--saphana-database=$SAPHANA2DC_SAPHANA_DATABASE  \\\n--raw-metadata-csv=$SAPHANA2DC_RAW_METADATA_CSV      \n```\n\n### 4.2. Run Docker entry point\n\n```bash\ndocker build -t saphana2datacatalog .\ndocker run --rm --tty -v YOUR-CREDENTIALS_FILES_FOLDER:/data saphana2datacatalog \\\n--datacatalog-project-id=$SAPHANA2DC_DATACATALOG_PROJECT_ID \\\n--datacatalog-location-id=$SAPHANA2DC_DATACATALOG_LOCATION_ID \\\n--saphana-host=$SAPHANA2DC_SAPHANA_SERVER \\\n--saphana-user=$SAPHANA2DC_SAPHANA_USERNAME \\\n--saphana-pass=$SAPHANA2DC_SAPHANA_PASSWORD \\\n--saphana-database=$SAPHANA2DC_SAPHANA_DATABASE  \\\n--raw-metadata-csv=$SAPHANA2DC_RAW_METADATA_CSV       \n```\n\n## 5 Scripts inside tools\n\n### 5.1. Data Catalog clean up\n\n```bash\n# List of projects split by comma. Can be a single value without comma\nexport SAPHANA2DC_DATACATALOG_PROJECT_IDS=my-project-1,my-project-2\n```\n\n```bash\n# Run the clean up\npython tools/cleanup_datacatalog.py --datacatalog-project-ids=$SAPHANA2DC_DATACATALOG_PROJECT_IDS \n\n```\n\n## 6. Developer environment\n\n### 6.1. Install and run Yapf formatter\n\n```bash\npip install --upgrade yapf\n\n# Auto update files\nyapf --in-place --recursive src tests\n\n# Show diff\nyapf --diff --recursive src tests\n\n# Set up pre-commit hook\n# From the root of your git project.\ncurl -o pre-commit.sh https://raw.githubusercontent.com/google/yapf/master/plugins/pre-commit.sh\nchmod a+x pre-commit.sh\nmv pre-commit.sh .git/hooks/pre-commit\n```\n\n### 6.2. Install and run Flake8 linter\n\n```bash\npip install --upgrade flake8\nflake8 src tests\n```\n\n\n### 6.3. Run Tests\n\n```bash\npython setup.py test\n```\n\n## 7. Metrics\n\n[Metrics README.md](docs/README.md)\n\n## 8. Troubleshooting\n\nIn the case a connector execution hits Data Catalog quota limit, an error will be raised and logged with the following detailement, depending on the performed operation READ/WRITE/SEARCH: \n```\nstatus = StatusCode.RESOURCE_EXHAUSTED\ndetails = \"Quota exceeded for quota metric 'Read requests' and limit 'Read requests per minute' of service 'datacatalog.googleapis.com' for consumer 'project_number:1111111111111'.\"\ndebug_error_string = \n\"{\"created\":\"@1587396969.506556000\", \"description\":\"Error received from peer ipv4:172.217.29.42:443\",\"file\":\"src/core/lib/surface/call.cc\",\"file_line\":1056,\"grpc_message\":\"Quota exceeded for quota metric 'Read requests' and limit 'Read requests per minute' of service 'datacatalog.googleapis.com' for consumer 'project_number:1111111111111'.\",\"grpc_status\":8}\"\n```\nFor more info about Data Catalog quota, go to: [Data Catalog quota docs](https://cloud.google.com/data-catalog/docs/resources/quotas).\n\n[1]: https://virtualenv.pypa.io/en/latest/\n[2]: https://github.com/GoogleCloudPlatform/datacatalog-connectors-rdbms/workflows/Python%20package/badge.svg?branch=master\n[3]: https://img.shields.io/pypi/v/google-datacatalog-saphana-connector.svg\n[4]: https://pypi.org/project/google-datacatalog-saphana-connector/\n[5]: https://img.shields.io/github/license/GoogleCloudPlatform/datacatalog-connectors-rdbms.svg\n[6]: https://img.shields.io/github/issues/GoogleCloudPlatform/datacatalog-connectors-rdbms.svg\n[7]: https://github.com/GoogleCloudPlatform/datacatalog-connectors-rdbms/issues\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "google-datacatalog-saphana-connector",
    "package_url": "https://pypi.org/project/google-datacatalog-saphana-connector/",
    "platform": "Posix; MacOS X; Windows",
    "project_url": "https://pypi.org/project/google-datacatalog-saphana-connector/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/google-datacatalog-saphana-connector/0.3.0/",
    "requires_dist": [
      "hdbcli",
      "google-datacatalog-rdbms-connector (>=0.12.0<0.13.0)"
    ],
    "requires_python": "",
    "summary": "Library for ingesting Sap Hana Database metadata into Google Cloud Data Catalog",
    "version": "0.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9893288,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fbe60973bbc74f4029cba758111b9bf60b769f3cb62d7d4b42823fb45dc2df32",
          "md5": "62666571f59692bb4a8409da4d7fecb1",
          "sha256": "3925e763bff4fe651f715951015419f2df99f5a01c7dbc433f92583a445390e3"
        },
        "downloads": -1,
        "filename": "google_datacatalog_saphana_connector-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "62666571f59692bb4a8409da4d7fecb1",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 14151,
        "upload_time": "2020-11-13T13:17:25",
        "upload_time_iso_8601": "2020-11-13T13:17:25.715054Z",
        "url": "https://files.pythonhosted.org/packages/fb/e6/0973bbc74f4029cba758111b9bf60b769f3cb62d7d4b42823fb45dc2df32/google_datacatalog_saphana_connector-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "45497950800545fa79576184ee7fa91dc47e08e82f25b63938ece6001029a8e8",
          "md5": "0285abecf4f90fece0dc585a124c7f17",
          "sha256": "7cb78adced6960c221d056467111f000c9815f8b42015cfd2ac90faca9555f93"
        },
        "downloads": -1,
        "filename": "google-datacatalog-saphana-connector-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0285abecf4f90fece0dc585a124c7f17",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13613,
        "upload_time": "2020-11-13T13:17:27",
        "upload_time_iso_8601": "2020-11-13T13:17:27.198078Z",
        "url": "https://files.pythonhosted.org/packages/45/49/7950800545fa79576184ee7fa91dc47e08e82f25b63938ece6001029a8e8/google-datacatalog-saphana-connector-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d0f19fde38544b94a4c256673d8d5fdb44916afc6ce511bd85d044e14e3d9097",
          "md5": "164b9a6db274ad5b00721f9d8f85930d",
          "sha256": "ee08ea94ae2eb98d52b90060779e019a6d04bc1b6dcd6a891d974f50c813e62c"
        },
        "downloads": -1,
        "filename": "google_datacatalog_saphana_connector-0.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "164b9a6db274ad5b00721f9d8f85930d",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 14158,
        "upload_time": "2020-11-20T16:45:40",
        "upload_time_iso_8601": "2020-11-20T16:45:40.340059Z",
        "url": "https://files.pythonhosted.org/packages/d0/f1/9fde38544b94a4c256673d8d5fdb44916afc6ce511bd85d044e14e3d9097/google_datacatalog_saphana_connector-0.1.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "660314ee6ec7be95f8e3e9d90111a9efc9e4562bdedfd2092e2d40e3bc0e4047",
          "md5": "adcb5a8928d723950bd36cd478ea489f",
          "sha256": "42e863168c762c21b19ac8ecbd02e0c4dbad47ab27b8fcccf58abea0abdedc05"
        },
        "downloads": -1,
        "filename": "google-datacatalog-saphana-connector-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "adcb5a8928d723950bd36cd478ea489f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13148,
        "upload_time": "2020-11-20T16:45:41",
        "upload_time_iso_8601": "2020-11-20T16:45:41.561936Z",
        "url": "https://files.pythonhosted.org/packages/66/03/14ee6ec7be95f8e3e9d90111a9efc9e4562bdedfd2092e2d40e3bc0e4047/google-datacatalog-saphana-connector-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ff3c14cf267acc3b63532241d5bf276e2512415e325e1364cc75c7fa02d2dd8",
          "md5": "6e30d9957fc6addca3905eddf5928551",
          "sha256": "e30764dc81ff9668619c247c05c222063accab5854660eea072db472880350ec"
        },
        "downloads": -1,
        "filename": "google_datacatalog_saphana_connector-0.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6e30d9957fc6addca3905eddf5928551",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 14694,
        "upload_time": "2020-11-24T21:29:55",
        "upload_time_iso_8601": "2020-11-24T21:29:55.396322Z",
        "url": "https://files.pythonhosted.org/packages/0f/f3/c14cf267acc3b63532241d5bf276e2512415e325e1364cc75c7fa02d2dd8/google_datacatalog_saphana_connector-0.2.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e11a555b72576844697db28ca2855e1651910b41dda340e58ae4b74dc305b276",
          "md5": "eb96c7d15e9ca7a74fb6a4aa65e6f5d1",
          "sha256": "47b3d81adab9163b1297e972fd6798b423e41297adcc76f16d868373c8e69846"
        },
        "downloads": -1,
        "filename": "google-datacatalog-saphana-connector-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "eb96c7d15e9ca7a74fb6a4aa65e6f5d1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13198,
        "upload_time": "2020-11-24T21:29:56",
        "upload_time_iso_8601": "2020-11-24T21:29:56.632610Z",
        "url": "https://files.pythonhosted.org/packages/e1/1a/555b72576844697db28ca2855e1651910b41dda340e58ae4b74dc305b276/google-datacatalog-saphana-connector-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba389ee7617d5d4d86ad32cf9b770ceafc519d19ac801a254ef31b93758ade87",
          "md5": "d785344bb61c8f2de19ebe5fd876fb94",
          "sha256": "907fe8187ea7d64e923521be62a1f1616088cb041ad91dfeceed140473d9e454"
        },
        "downloads": -1,
        "filename": "google_datacatalog_saphana_connector-0.3.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d785344bb61c8f2de19ebe5fd876fb94",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 13599,
        "upload_time": "2021-03-26T19:49:57",
        "upload_time_iso_8601": "2021-03-26T19:49:57.049739Z",
        "url": "https://files.pythonhosted.org/packages/ba/38/9ee7617d5d4d86ad32cf9b770ceafc519d19ac801a254ef31b93758ade87/google_datacatalog_saphana_connector-0.3.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1c0cec4052f81304b802623bd74c82b0f247897b98a3ed33bc94ed86a59c0dd8",
          "md5": "d3fc8c91783ffd81241e88532c9e6961",
          "sha256": "13ab71453c75368227473d6c8805456394b76a369da02fd5821cd8a12be505b1"
        },
        "downloads": -1,
        "filename": "google-datacatalog-saphana-connector-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d3fc8c91783ffd81241e88532c9e6961",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13601,
        "upload_time": "2021-03-26T19:49:58",
        "upload_time_iso_8601": "2021-03-26T19:49:58.284835Z",
        "url": "https://files.pythonhosted.org/packages/1c/0c/ec4052f81304b802623bd74c82b0f247897b98a3ed33bc94ed86a59c0dd8/google-datacatalog-saphana-connector-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ba389ee7617d5d4d86ad32cf9b770ceafc519d19ac801a254ef31b93758ade87",
        "md5": "d785344bb61c8f2de19ebe5fd876fb94",
        "sha256": "907fe8187ea7d64e923521be62a1f1616088cb041ad91dfeceed140473d9e454"
      },
      "downloads": -1,
      "filename": "google_datacatalog_saphana_connector-0.3.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d785344bb61c8f2de19ebe5fd876fb94",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 13599,
      "upload_time": "2021-03-26T19:49:57",
      "upload_time_iso_8601": "2021-03-26T19:49:57.049739Z",
      "url": "https://files.pythonhosted.org/packages/ba/38/9ee7617d5d4d86ad32cf9b770ceafc519d19ac801a254ef31b93758ade87/google_datacatalog_saphana_connector-0.3.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1c0cec4052f81304b802623bd74c82b0f247897b98a3ed33bc94ed86a59c0dd8",
        "md5": "d3fc8c91783ffd81241e88532c9e6961",
        "sha256": "13ab71453c75368227473d6c8805456394b76a369da02fd5821cd8a12be505b1"
      },
      "downloads": -1,
      "filename": "google-datacatalog-saphana-connector-0.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "d3fc8c91783ffd81241e88532c9e6961",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13601,
      "upload_time": "2021-03-26T19:49:58",
      "upload_time_iso_8601": "2021-03-26T19:49:58.284835Z",
      "url": "https://files.pythonhosted.org/packages/1c/0c/ec4052f81304b802623bd74c82b0f247897b98a3ed33bc94ed86a59c0dd8/google-datacatalog-saphana-connector-0.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}