{
  "info": {
    "author": "Gary Schaetz",
    "author_email": "gary@schaetzkc.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# gitlab-ci-generator\nThis project builds a dynamic gitlab ci file that is intended to be used for monorepos.  The concept is to simplify the amount of work that is needed to manage the monorepo.\n\n## Installation\nYou can download and run directly with python or install using:\n```\npip install gitlab-ci-generator\n```\nThis installs like an executable and you can simply run: \n```\ngitlab-ci-generator\n```\n\n## Usage\nThe project takes the following parameters:\n|Name|Parameter|Description|Required|\n|-----|--------|-----------|--------|\n|Input File|--inputfile/-f|The yaml file that will be used to render the gitlab ci file.|Yes|\n|Output File|--outputfile/-o|The yaml file that is rendered using the jinja2 template with data from the input yaml file.|No|\n|Template File|--templatefile/-t|A jinja2 file that can be used to override default templating|No|\n|Help|-h|Displays help info|No|\n\nThis program will load the input yaml file into two distinct dictionaries that are available to the template:\n* pipeline_info\n* jobs\n\nTo run without specifying an output file you can write stdout to a redirect file like so: \n```\ngitlab-ci-generator --inputfile ./job-dependency.yml 1> /tmp/test.out\n```\n\n### pipeline_info\nThis section is gets loaded as is into a dictionary so you can easily extend it for your needs.  The built-in template uses the following:\n```\npipeline_info:\n  shared_includes: <<-- Used by the template to build the include: section of the gitlab ci file.\n    - name: rules <<-- List of includes and can be of type local or project.  The rules example here is used in the template in concert with the share_reference_rules: section to define dynamic rules for jobs.\n      local: \"example/example-config/rules.yml\" \n  shared_reference_rules: <<-- Used by the template to build the rules: section of the gitlab ci under each job.\n    - rule_name: standard-rule-if <- The rule_source and rule_name will create a !reference[rule_source, rule_name] value under the rules section of each job.\n      rule_source: .job_changes_rules\n      only_changes: true\n  final_job: <<-- Optional section that can be used to specify a final trigger job to run at the end of your pipeline.\n    name: <<-- The name of the final job.\n    stage: <<-- The stage that you want the final job to run in.\n    trigger_job_info: <<-- Info around the final job.\n      project: <<-- gitlab project location for final job.\n      ref: <<-- Final job branch reference\n      file: <<-- Path to the yml file to be triggered.\n    rules: <<-- Custom rules for the final job.\n      - rule_name: <<-- The rule_source and rule_name will create a !reference[rule_source, rule_name] value under the rules section of each job.\n      - rule_source: <<-- Points the rule_name in the !reference\n      only_changes: true <<-- True will run this job only if changes occur.\n```\n\n### jobs\nThis section is used to define the hierarchy for the gitlab jobs.  This section is not extensible and should be structured as follows:\n```\njobs: <<-- List of jobs and dependencies that will build the appropriate changes/needs logic in the generated gitlab ci file.\n  - name: example-1 <<-- name: will be the job name in the generated gitlab file and is required. \n    folder: example/example-folder-1 <<-- folder: The subfolder in the gitlab repo that will be monitored for changes and contains the sub-repo in the monorepo.\n    gitlab_yml_file: .gitlab-example.yml <<--  gitlab_yml_file: is the pipeline file that will be triggered in the folder: that is specified\n    dependent_jobs: <<-- dependent_jobs: is a list of dependent jobs and can have dependent_jobs on its jobs.  In other words, this can go multiple levels deep with dependencies.  \n      - name: example-2\n        folder: example/example-folder-2\n        gitlab_yml_file: .gitlab-example.yml\n```\n\n## Sample Input yaml File\nThis sample can also be found in the gitlab repo for this project at the location [example/example-config/job-dependency.yml](https://gitlab.com/gary.schaetz/public/gitlab-ci-generator/-/blob/main/example/example-config/job-dependency.yml)\n```\n---\npipeline_info:\n  shared_includes:\n    - name: rules\n      local: \"example/example-config/rules.yml\"\n  shared_reference_rules:\n    - rule_name: standard-rule-if\n      rule_source: .job_changes_rules\n      only_changes: true\n    - rule_name:  manual-rule-if\n      rule_source: .job_changes_rules\n      when: manual\n      only_changes: true\n    - rule_name: schedule-rule-if\n      rule_source: .job_changes_rules\n      only_changes: false\n  final_job:\n    name: cut-tag\n    stage: post-deploy\n    trigger_job_info:\n      project: gary.schaetz/private/pipelines\n      ref: main\n      file: /path/to/child-pipeline.yml\n    rules:\n      - rule_name: standard-rule-if\n        rule_source: .job_changes_rules\n        only_changes: true\njobs:\n  - name: example-1\n    folder: example/example-folder-1\n    gitlab_yml_file: .gitlab-example.yml\n    dependent_jobs:\n      - name: example-2\n        folder: example/example-folder-2\n        gitlab_yml_file: .gitlab-example.yml\n```\n\n### Sample Output\nUsing the jinja template [here](https://gitlab.com/gary.schaetz/public/gitlab-ci-generator/-/blob/main/src/gitlab_ci_generator_package/templates/gitlab-template.jinja) and the data from [example/example-config/job-dependency.yml](https://gitlab.com/gary.schaetz/public/gitlab-ci-generator/-/blob/main/example/example-config/job-dependency.yml)\n```\ninclude:\n    - local: 'example/example-config/rules.yml'\n\nstages:\n  - build\n  - post-deploy\n\nexample-1:\n  stage: build\n  variables:\n    PROJECT_SUBDIR: example/example-folder-1\n  rules:\n    - if: !reference [.job_changes_rules,standard-rule-if]\n      changes:\n        - example/example-folder-1/**/*\n    - if: !reference [.job_changes_rules,manual-rule-if]\n      when: manual\n      changes:\n        - example/example-folder-1/**/*\n    - if: !reference [.job_changes_rules,schedule-rule-if]\n  trigger:\n    include: example/example-folder-1/.gitlab-example.yml    \n    strategy: depend\n \nexample-2:\n  stage: build\n  variables:\n    PROJECT_SUBDIR: example/example-folder-2\n  rules:\n    - if: !reference [.job_changes_rules,standard-rule-if]\n      changes:\n        - example/example-folder-2/**/*\n        - example/example-folder-1/**/*\n    - if: !reference [.job_changes_rules,manual-rule-if]\n      when: manual\n      changes:\n        - example/example-folder-2/**/*\n        - example/example-folder-1/**/*\n    - if: !reference [.job_changes_rules,schedule-rule-if]\n  needs: \n    - job: example-1\n      optional: true \n  trigger:\n    include: example/example-folder-2/.gitlab-example.yml    \n    strategy: depend\n \ncut-tag:\n  stage: post-deploy\n  rules:\n    - if: !reference [.job_changes_rules,standard-rule-if]\n      changes:\n        - example/example-folder-1/**/*\n        - example/example-folder-2/**/*\n  trigger:\n    include: \n      - project: 'gary.schaetz/private/pipelines'\n        ref: 'main'\n        file: '/path/to/child-pipeline.yml' \n    strategy: depend\n```\n\n## How to use in your pipeline\nA variable is passed into your pipeline that you can see in the previous section called PROJECT_SUBDIR.  Use this in before scripts to cd into the active project.  \n\nHere is an example of a pipeline that will use this program in one job to generate the ci file and then trigger it in the next job.  Notice how we set PARENT_PIPELINE_SOURCE variable so that you can use this in your downstream rules as a trigger overrides the original CI_PIPELINE_SOURCE.\n```\ninclude: \n  - project: \"gary.schaetz/private/pipelines\"\n    ref: main\n    file: 'templates/rules/rules.yml'\n\nstages:\n  - build_config\n  - run\n\ngenerate-pipeline:\n  image: gschaetz/base-alpine:latest\n  stage: build_config\n  tags: \n    - docker \n    - self-managed \n    - ubuntu-worker\n  rules:\n    - !reference [.job_rules, standard-rule]  \n  before_script:\n    - pip install gitlab-ci-generator\n  script:\n    - gitlab-ci-generator -f job-dependency.yml -o generated-ci.yml\n  artifacts:\n    paths:\n      - generated-ci.yml\n\ntrigger-child-pipeline:\n  stage: run\n  rules:\n    - if: !reference [.job_changes_rules,standard-rule-if]\n      changes:\n        - \"*/**/*\"\n  trigger:\n    include:\n      - artifact: generated-ci.yml\n        job: generate-pipeline\n    strategy: depend\n  variables:\n    PARENT_PIPELINE_ID: $CI_PIPELINE_ID\n    PARENT_PIPELINE_SOURCE: $CI_PIPELINE_SOURCE\n```\n\n## License\nMIT License\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/gary.schaetz/public/gitlab-ci-generator",
    "keywords": "gitlab,template,generator,gitlab-ci.yml,dynamic,pipeline",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "gitlab-ci-generator",
    "package_url": "https://pypi.org/project/gitlab-ci-generator/",
    "platform": null,
    "project_url": "https://pypi.org/project/gitlab-ci-generator/",
    "project_urls": {
      "Homepage": "https://gitlab.com/gary.schaetz/public/gitlab-ci-generator"
    },
    "release_url": "https://pypi.org/project/gitlab-ci-generator/1.0.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Generates a mono-repo ci file.",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15021504,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1e165f3d61d6c394ed26c28c9c8670398a111bf2e51a5f5d32fa79d1cfb0a634",
          "md5": "238cddbdf2e5b905d9810c541bc7a214",
          "sha256": "96136c1bafec10c2cfaf896198f6e4d91b2856cc5546e196f8c420a17100138d"
        },
        "downloads": -1,
        "filename": "gitlab-ci-generator-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "238cddbdf2e5b905d9810c541bc7a214",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5196,
        "upload_time": "2022-09-02T17:25:17",
        "upload_time_iso_8601": "2022-09-02T17:25:17.134460Z",
        "url": "https://files.pythonhosted.org/packages/1e/16/5f3d61d6c394ed26c28c9c8670398a111bf2e51a5f5d32fa79d1cfb0a634/gitlab-ci-generator-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c98bccfe1d4e43b16c642f83f961046bdeea68d97dad68004a50c382c16af8f7",
          "md5": "ebe6e3e31768cd415ec322a3e9d9d4f2",
          "sha256": "1b570ee5f8e4d2a08acdb837c83ee4d413bc2b09cc246b0783fd080b309a607d"
        },
        "downloads": -1,
        "filename": "gitlab-ci-generator-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ebe6e3e31768cd415ec322a3e9d9d4f2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6172,
        "upload_time": "2022-09-03T23:08:56",
        "upload_time_iso_8601": "2022-09-03T23:08:56.990364Z",
        "url": "https://files.pythonhosted.org/packages/c9/8b/ccfe1d4e43b16c642f83f961046bdeea68d97dad68004a50c382c16af8f7/gitlab-ci-generator-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f30219342d8c3dd6b18bb8279839b8b84aa955d66693bb4415b5e9a180b3a04",
          "md5": "7b8c23cc7de69cca2a931dccb3b191bc",
          "sha256": "ee75f4db488223be258fc5ff1592409548e21239263538fa3e414323ebd9d08f"
        },
        "downloads": -1,
        "filename": "gitlab-ci-generator-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7b8c23cc7de69cca2a931dccb3b191bc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6220,
        "upload_time": "2022-09-06T14:09:54",
        "upload_time_iso_8601": "2022-09-06T14:09:54.361126Z",
        "url": "https://files.pythonhosted.org/packages/1f/30/219342d8c3dd6b18bb8279839b8b84aa955d66693bb4415b5e9a180b3a04/gitlab-ci-generator-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "04bfd36f51ba95455e304e8a097f8a1fa590ad609f337a37418268e45be80623",
          "md5": "c1800b6e30c69b6f81884c04e60931cd",
          "sha256": "8bf1622baaa4a7d4595282434f4017f5aa5c9300d3ed3c0f167e7a1758ff399d"
        },
        "downloads": -1,
        "filename": "gitlab-ci-generator-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "c1800b6e30c69b6f81884c04e60931cd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6323,
        "upload_time": "2022-09-07T16:44:33",
        "upload_time_iso_8601": "2022-09-07T16:44:33.566216Z",
        "url": "https://files.pythonhosted.org/packages/04/bf/d36f51ba95455e304e8a097f8a1fa590ad609f337a37418268e45be80623/gitlab-ci-generator-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "04bfd36f51ba95455e304e8a097f8a1fa590ad609f337a37418268e45be80623",
        "md5": "c1800b6e30c69b6f81884c04e60931cd",
        "sha256": "8bf1622baaa4a7d4595282434f4017f5aa5c9300d3ed3c0f167e7a1758ff399d"
      },
      "downloads": -1,
      "filename": "gitlab-ci-generator-1.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "c1800b6e30c69b6f81884c04e60931cd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6323,
      "upload_time": "2022-09-07T16:44:33",
      "upload_time_iso_8601": "2022-09-07T16:44:33.566216Z",
      "url": "https://files.pythonhosted.org/packages/04/bf/d36f51ba95455e304e8a097f8a1fa590ad609f337a37418268e45be80623/gitlab-ci-generator-1.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}