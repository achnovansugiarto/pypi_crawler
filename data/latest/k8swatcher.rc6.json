{
  "info": {
    "author": "bitsofinfo",
    "author_email": "bitsofinfo.g@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# k8swatcher <!-- omit in toc -->\n\n![GitHub Actions status](https://github.com/bitsofinfo/k8swatcher/actions/workflows/pypi.yml/badge.svg) [![PyPI version](https://badge.fury.io/py/k8swatcher.svg)](https://badge.fury.io/py/k8swatcher) \n\nPython module that simplifies watching anything on a kubernetes cluster. You can utilize this module in your own python application to fulfill the typical *\"list then watch\"* functionality as described in the \"[Efficient detection of changes](https://kubernetes.io/docs/reference/using-api/api-concepts/#efficient-detection-of-changes)\" section of the kubernetes API documentation. (without having to write that code yourself!). This module utilizes the [Python Kubernetes Client](https://github.com/kubernetes-client) under the covers. \n\n- [Install](#install)\n- [Using in your python code](#using-in-your-python-code)\n  - [kubernetes configuration](#kubernetes-configuration)\n  - [Direct](#direct)\n  - [Queuing via K8sWatcherService](#queuing-via-k8swatcherservice)\n  - [Asyncio via K8sWatcherService and a K8sEventHandler](#asyncio-via-k8swatcherservice-and-a-k8seventhandler)\n- [run locally w/ the built in CLI](#run-locally-w-the-built-in-cli)\n- [example CLI output](#example-cli-output)\n- [local dev](#local-dev)\n- [related projects](#related-projects)\n- [todo](#todo)\n\n## Install\n\n```\npip install k8swatcher\n```\n## Using in your python code\n\nThere are a few different ways you can utilize this module in your code. Note that the underlying [Python Kubernetes Client](https://github.com/kubernetes-client) does not support asyncio, so in real-world applications, you generally will be dealing w/ python `Threads` to handle events that come from the underlying library. The `K8sWatcherService` provides some convienence methods for this.\n\n### kubernetes configuration\n\nCurrently the module determines the kubernetes connection configuration via the `kubernetes.config.load_kube_config()` method which relies on the excuting processes's `~/.kube/config` current context (by default), unless you specify a specific file/context to use via the `K8sWatcher` and `K8sWatcherService` constructors.\n### Direct\n\nThe direct mode gives you more control on how process each `K8sWatchEvent` that is `yielded` from the `K8sWatcher`. \n\nFor each type of kubernetes object you want to watch... wire up a separate `K8sWatcher` then call its `watcher()` method which returns a long-lived `Generator` that returns `K8sWatchEvent` objects as things happen.\n\nA typical usage pattern would be to wire up separate `Threads`, one per thing you wish to watch, bind to `Queues` etc and then go from there...\n\n```python\nimport json\nfrom k8swatcher import K8sWatchConfig, K8sWatcher, K8sWatchEvent\n\nwatch_config = K8sWatchConfig(**{ \\\n                    \"namespace\": \"my-namespace\", \\\n                    \"kind\": \"Pod\", \\\n                    \"sdk_client_class_name\": \"CoreV1Api\", \\\n                    \"sdk_list_function_name\": \"list_namespaced_pod\", \\\n                    \"field_selector\": None, \\\n                    \"label_selector\": \"mylabel=x,myotherlabel=y\",\n                    \"include_k8s_objects\": True\n                })\n\nk8s_watcher = K8sWatcher(watch_config).watcher()\n\nfor event in k8s_watcher:\n    print(json.dumps(event.dict(),default=str,indent=2))\n    \n```\n\n### Queuing via K8sWatcherService\n\nIf you are not interested in writing your own consumer `Thread` code and would like each `K8sWatchEvent` to be delivered via python `Queues` you can use the `K8sWatcherService.queuing_watch(K8sWatchConfig, unified_queue=True|False)` method. Each time you call `queuing_watch`, `K8sWatcherService` creates a new `Thread` bound to a unique `K8sWatcher` instance to automatically capture all events emitted from it. Each event will be placed on a `Queue` that is returned to you. If you pass `unified_queue=True`, the same `Queue` instance will be returned for every call to `queuing_watch()` so you only have to monitor a single `Queue` that will contains different `K8sWatchEvents` across all the different `K8sWatchConfigs` you define.\n\n```python\nimport json\nfrom k8swatcher import K8sWatchConfig, K8sWatchService, K8sWatchEvent\nfrom threading import Thread\n\nclass MyConsumerThread(Thread):\n\n    def __init__(self, event_queue_to_monitor, *args, **kwargs):\n        kwargs.setdefault('daemon', True)\n        super().__init__(*args, **kwargs)\n\n    def run(self):\n        while True:\n            watch_event:K8sWatchEvent = self.watch_event_queue.get()\n            print(json.dumps(watch_event.dict(),default=str,indent=2))\n\npod_watch_config = K8sWatchConfig(**{ \\\n                    \"id\": k8s_kind,\n                    \"namespace\": k8s_namespace, \\\n                    \"kind\": \"Pod\", \\\n                  ...})\n\ningress_watch_config = K8sWatchConfig(**{ \\\n                    \"id\": k8s_kind,\n                    \"namespace\": k8s_namespace, \\\n                    \"kind\": \"Ingress\", \\\n                  ...})\n\nwatch_service = K8sWatcherService()\n\n\"\"\"\nWith `unified_queue=False` (the default):\n\n... each distinct call to queuing_watch() returns\na dedicated Queue per K8sWatchConfig\n\"\"\"\npod_event_queue:Queue = watch_service.queuing_watch(pod_watch_config)\ningress_event_queue:Queue = watch_service.queuing_watch(ingress_watch_config)\n\npod_consumer = MyConsumerThread(pod_event_queue)\npod_consumer.start()\n\ningress_consumer = MyConsumerThread(ingress_event_queue)\ningress_consumer.start()\n\npod_consumer.join()\ningress_consuner.join()\nwatch_service.join()\n\n\n\"\"\"\nHowever with `unified_queue=True`:\n\n... each distinct call to queuing_watch() returns\na the same Queue that will get events for all K8sWatchConfigs \n\"\"\"\nglobal_event_queue:Queue = watch_service.queuing_watch(pod_watch_config,unified_queue=True)\nwatch_service.queuing_watch(ingress_watch_config,unified_queue=True)\n\nall_events_consumer = MyConsumerThread(global_event_queue)\nall_events_consumer.start()\nall_events_consumer.join()\n\nwatch_service.join()\n...\n\n```\n\n### Asyncio via K8sWatcherService and a K8sEventHandler\n\nIf you don't want to manage any `Threads` at all, you can utilize the `K8sEventHandler` method. In this usage pattern you simply provide a class instance that implements the `K8sEventHandler` method `async def handle_k8s_watch_event(self, k8s_watch_event:K8sWatchEvent)` and your handler class will be called every time a new `K8sWatchEvent` is created. Internally `K8sWatcherService` manages a consumer thread automatically for you that captures all events and calls your `async` handler and then `awaits` it's finish.\n\n```python\nimport json\nfrom k8swatcher import K8sWatchConfig, K8sWatchService, K8sWatchEvent\n\nclass MyCustomHandler(K8sEventHandler):\n    async def handle_k8s_watch_event(self, k8s_watch_event:K8sWatchEvent):\n        watch_event:K8sWatchEvent = self.watch_event_queue.get()\n        print(json.dumps(watch_event.dict(),default=str,indent=2))\n        await doMyCustomStuff(k8s_watch_event)\n\n\npod_watch_config = K8sWatchConfig(**{ \\\n                    \"id\": k8s_kind,\n                    \"namespace\": k8s_namespace, \\\n                    \"kind\": \"Pod\", \\\n                  ...})\n\ningress_watch_config = K8sWatchConfig(**{ \\\n                    \"id\": k8s_kind,\n                    \"namespace\": k8s_namespace, \\\n                    \"kind\": \"Ingress\", \\\n                  ...})\n\nwatch_service = K8sWatcherService()\n\nwatch_service.asyncio_watch([pod_watch_config,ingress_watch_config],MyCustomHandler())\n\nwatch_service.join()\n```\n\n## run locally w/ the built in CLI\n\nIn addition to being able to utilize this module inline in your code, this module also includes a simple CLI you can use for testing out the functionality. The CLI is not intended for any production use.\n\n```\n$ k8swatcher --help\nUsage: k8swatcher [OPTIONS]\n\nOptions:\n  --k8s-kind TEXT                 k8s object kind to watch (i.e. Ingress, Pod\n                                  etc)  [required]\n  --k8s-namespace TEXT            k8s namespace to scope to (only applicable\n                                  w/ a list_namespaced_* function name)\n  --k8s-sdk-class-name TEXT       Python kubernetes-client class name to\n                                  utilize  [required]\n  --k8s-sdk-list-function-name TEXT\n                                  Python kubernetes-client class list function\n                                  name to utilize  [required]\n  --field-selector TEXT           --field-selector field.path=1,field2.path=3\n  --label-selector TEXT           --label-selector label1=z,label2=v\n  --suppress-bookmarks / --no-suppress-bookmarks\n                                  Suppress BOOKMARK events from the watcher\n                                  [default: suppress-bookmarks]\n  --include-k8s-objects / --no-include-k8s-objects\n                                  Include the full k8s object (as a dict) in\n                                  each event  [default: no-\n                                  include-k8s-objects]\n  --exec-mode [asyncio_watch|queuing_watch]\n                                  The preferred execution mode  [default:\n                                  ExecMode.queuing_watch]\n  --install-completion [bash|zsh|fish|powershell|pwsh]\n                                  Install completion for the specified shell.\n  --show-completion [bash|zsh|fish|powershell|pwsh]\n                                  Show completion for the specified shell, to\n                                  copy it or customize the installation.\n  --help                          Show this message and exit.\n```\n\nThe arguments `--k8s-sdk-class-name` and `--k8s-sdk-list-function-name` are specifically referring to the [Python kubernetes-client](https://github.com/kubernetes-client/python/tree/master/kubernetes/docs) api's.\n\nWatch `Ingress` objects across all namespaces...\n```\nk8swatcher \\\n    --k8s-kind Ingress \\\n    --k8s-sdk-class-name NetworkingV1Api \\\n    --k8s-sdk-list-function-name list_ingress_for_all_namespaces \\\n    --label-selector some-label=myvalue,other-label=true \n```\n\nWatch `Pod` objects in a specific namespace...\n```\nk8swatcher \\\n    --k8s-kind Pod \\\n    --k8s-namespace my-apps \\\n    --k8s-sdk-class-name CoreV1Api \\\n    --k8s-sdk-list-function-name list_namespaced_pod \\\n    --include-k8s-objects\n```\n\n## example CLI output\n\nAgain the CLI is just for testing/demo purposes. The object emitted to STDOUT is the object you can utilize in your code when leveraging this module.\n\n```\n2022-05-05 06:56:19,587 - K8sWatcher - DEBUG - __iter__() processing K8sWatchConfig[kind=Pod]\n2022-05-05 06:56:19,587 - K8sWatcher - DEBUG - handle_k8s_object_list() processing K8sWatchConfig[kind=Pod]\n{\n  \"event_type\": \"LOADED\",\n  \"resource_version\": \"24891356\",\n  \"k8s_tracked_object\": {\n    \"uid\": \"dc1321ba-4b4c-47a9-9d85-7b8a8d0ef2af\",\n    \"kind\": \"Pod\",\n    \"api_version\": \"v1\",\n    \"name\": \"my-service-dev-0-0-3-886bf55d5-p7kpd\",\n    \"resource_version\": \"24692787\",\n    \"namespace\": \"my-apps\",\n    \"k8s_object\": {\n      \"metadata\": {\n        \"creationTimestamp\": \"2022-05-04T14:22:21+00:00\",\n        \"generateName\": \"csi-azurefile-node-\",\n        \"labels\": {\n          \"app\": \"csi-azurefile-node\",\n          \"controller-revision-hash\": \"56dd69698c\",\n          \"pod-template-generation\": \"8\"\n        },\n        \"managedFields\": [\n            ...\n        ]\n        ...\n      }\n    }\n  }\n}\n2022-05-05 06:56:21,319 - K8sWatcher - DEBUG - __iter__() processing K8sWatchConfig[kind=Pod]\n2022-05-05 06:56:21,319 - K8sWatcher - DEBUG - handle_k8s_object_watch() processing K8sWatchConfig[kind=Pod]\n{\n  \"event_type\": \"MODIFIED\",\n  \"resource_version\": \"24891472\",\n  \"k8s_tracked_object\": {\n    \"uid\": \"dc1321ba-4b4c-47a9-9d85-7b8a8d0ef2af\",\n    \"kind\": \"Pod\",\n    \"api_version\": \"v1\",\n    \"name\": \"my-service-dev-0-0-3-886bf55d5-p7kpd\",\n    \"resource_version\": \"24891472\",\n    \"namespace\": \"my-apps\",\n    \"k8s_object\": {\n      \"metadata\": {\n        \"creationTimestamp\": \"2022-05-04T14:22:21+00:00\",\n        \"generateName\": \"csi-azurefile-node-\",\n        \"labels\": {\n          \"app\": \"csi-azurefile-node\",\n          \"controller-revision-hash\": \"56dd69698c\",\n          \"pod-template-generation\": \"8\"\n        },\n        \"managedFields\": [\n            ...\n        ]\n        ...\n      }\n    }\n  }\n}\n{\n  \"event_type\": \"MODIFIED\",\n  \"resource_version\": \"24891481\",\n  \"k8s_tracked_object\": {\n    \"uid\": \"dc1321ba-4b4c-47a9-9d85-7b8a8d0ef2af\",\n    \"kind\": \"Pod\",\n    \"api_version\": \"v1\",\n    \"name\": \"my-service-dev-0-0-3-886bf55d5-p7kpd\",\n    \"resource_version\": \"24891481\",\n    \"namespace\": \"my-apps\",\n    \"k8s_object\": {\n      \"metadata\": {\n        \"creationTimestamp\": \"2022-05-04T14:22:21+00:00\",\n        \"generateName\": \"csi-azurefile-node-\",\n        \"labels\": {\n          \"app\": \"csi-azurefile-node\",\n          \"controller-revision-hash\": \"56dd69698c\",\n          \"pod-template-generation\": \"8\"\n        },\n        \"managedFields\": [\n            ...\n        ]\n        ...\n      }\n    }\n  }\n}\n{\n  \"event_type\": \"MODIFIED\",\n  \"resource_version\": \"24891521\",\n  \"k8s_tracked_object\": {\n    \"uid\": \"dc1321ba-4b4c-47a9-9d85-7b8a8d0ef2af\",\n    \"kind\": \"Pod\",\n    \"api_version\": \"v1\",\n    \"name\": \"my-service-dev-0-0-3-886bf55d5-p7kpd\",\n    \"resource_version\": \"24891521\",\n    \"namespace\": \"my-apps\",\n    \"k8s_object\": {\n      \"metadata\": {\n        \"creationTimestamp\": \"2022-05-04T14:22:21+00:00\",\n        \"generateName\": \"csi-azurefile-node-\",\n        \"labels\": {\n          \"app\": \"csi-azurefile-node\",\n          \"controller-revision-hash\": \"56dd69698c\",\n          \"pod-template-generation\": \"8\"\n        },\n        \"managedFields\": [\n            ...\n        ]\n        ...\n      }\n    }\n  }\n}\n{\n  \"event_type\": \"DELETED\",\n  \"resource_version\": \"24891522\",\n  \"k8s_tracked_object\": {\n    \"uid\": \"dc1321ba-4b4c-47a9-9d85-7b8a8d0ef2af\",\n    \"kind\": \"Pod\",\n    \"api_version\": \"v1\",\n    \"name\": \"my-service-dev-0-0-3-886bf55d5-p7kpd\",\n    \"resource_version\": \"24891522\",\n    \"namespace\": \"my-apps\",\n    \"k8s_object\": {\n      \"metadata\": {\n        \"creationTimestamp\": \"2022-05-04T14:22:21+00:00\",\n        \"generateName\": \"csi-azurefile-node-\",\n        \"labels\": {\n          \"app\": \"csi-azurefile-node\",\n          \"controller-revision-hash\": \"56dd69698c\",\n          \"pod-template-generation\": \"8\"\n        },\n        \"managedFields\": [\n            ...\n        ]\n        ...\n      }\n    }\n  }\n}\n```\n\n## local dev\n\n```\npython3 -m venv k8swatcher.ve\nsource k8swatcher.ve/bin/activate\npip install -r requirements-dev.txt\n```\n\n## related projects\n\nhttps://github.com/bitsofinfo/kubernetes-acme-dns-registrar\n\n## todo\n\na few tests, using `kind` etc\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bitsofinfo/k8swatcher",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "k8swatcher",
    "package_url": "https://pypi.org/project/k8swatcher/",
    "platform": null,
    "project_url": "https://pypi.org/project/k8swatcher/",
    "project_urls": {
      "Homepage": "https://github.com/bitsofinfo/k8swatcher"
    },
    "release_url": "https://pypi.org/project/k8swatcher/0.0.5/",
    "requires_dist": [
      "kubernetes (>=23.3.0)",
      "typer (>=0.4.1)",
      "pydantic (>=1.9.0)"
    ],
    "requires_python": ">=3.9",
    "summary": "Library for watching kubernetes events",
    "version": "0.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14097467,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "02a118e85ab2f49330c42c62e89a36f8639a89c653f8a79b94cdbd1dd0a2804e",
          "md5": "92f14f805981ea895fc0b39fdb03db30",
          "sha256": "ca5050d39a036e2f2cb294da2aa84716be29e24fcf5c40969efc6245a00c5b47"
        },
        "downloads": -1,
        "filename": "k8swatcher-0.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "92f14f805981ea895fc0b39fdb03db30",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 11321,
        "upload_time": "2022-05-05T14:01:39",
        "upload_time_iso_8601": "2022-05-05T14:01:39.815897Z",
        "url": "https://files.pythonhosted.org/packages/02/a1/18e85ab2f49330c42c62e89a36f8639a89c653f8a79b94cdbd1dd0a2804e/k8swatcher-0.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc948c274e5155bf0ae2cdea3d687b8ce296142f66fa86c8544107082f6c422a",
          "md5": "58d8e3eb007b457cd9be61813317b93e",
          "sha256": "cf5e072848e1ef8355b98f0f962e75aa69d3930144f96d69db7b1f254e94e6d9"
        },
        "downloads": -1,
        "filename": "k8swatcher-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "58d8e3eb007b457cd9be61813317b93e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 12096,
        "upload_time": "2022-05-05T14:01:41",
        "upload_time_iso_8601": "2022-05-05T14:01:41.019401Z",
        "url": "https://files.pythonhosted.org/packages/dc/94/8c274e5155bf0ae2cdea3d687b8ce296142f66fa86c8544107082f6c422a/k8swatcher-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca7a0f4c335f9228f23577b0ac825cd03b3b2c589b39f4d139f0c0b3b0995c1d",
          "md5": "9c57e42d334377cf8848086e18829b81",
          "sha256": "c5ea5d51ff117db67eaad0e201e1decb6f0bdebbbf539650e81c98862f807447"
        },
        "downloads": -1,
        "filename": "k8swatcher-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9c57e42d334377cf8848086e18829b81",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 11321,
        "upload_time": "2022-05-05T14:09:06",
        "upload_time_iso_8601": "2022-05-05T14:09:06.490474Z",
        "url": "https://files.pythonhosted.org/packages/ca/7a/0f4c335f9228f23577b0ac825cd03b3b2c589b39f4d139f0c0b3b0995c1d/k8swatcher-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9322a8b9e948f106337a3e9208de448d927fe9530275b9484566c8cb2afdd4a5",
          "md5": "27eae308329b2aee3449988858f0bc25",
          "sha256": "96d214fe401436b46503eac7b1c2d75c57a4abb3852d48b570107a1f2a160c1b"
        },
        "downloads": -1,
        "filename": "k8swatcher-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "27eae308329b2aee3449988858f0bc25",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 12126,
        "upload_time": "2022-05-05T14:09:07",
        "upload_time_iso_8601": "2022-05-05T14:09:07.880775Z",
        "url": "https://files.pythonhosted.org/packages/93/22/a8b9e948f106337a3e9208de448d927fe9530275b9484566c8cb2afdd4a5/k8swatcher-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bdd5962a3a1d488f42e115de2003420f7a15e6a961ffc11b792c37991608229c",
          "md5": "d16adaa376b7ffc9c1024f80e8904794",
          "sha256": "b5cfb6026f7205dea01b23093ed24617721e0e8587e5475c48cfeb9ab68eb0aa"
        },
        "downloads": -1,
        "filename": "k8swatcher-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d16adaa376b7ffc9c1024f80e8904794",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 14174,
        "upload_time": "2022-05-12T15:16:41",
        "upload_time_iso_8601": "2022-05-12T15:16:41.798360Z",
        "url": "https://files.pythonhosted.org/packages/bd/d5/962a3a1d488f42e115de2003420f7a15e6a961ffc11b792c37991608229c/k8swatcher-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a5e607163e0655bde41f1f9f649f00f37aafeeb597633a50c9cd17e4c6f0d393",
          "md5": "974799d88b091f9fe47f7f085ac47f84",
          "sha256": "cfe7b8dbc4bb6385db309ecc49d4d256012d9c3a42525b043b0d8c7d55501916"
        },
        "downloads": -1,
        "filename": "k8swatcher-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "974799d88b091f9fe47f7f085ac47f84",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 17834,
        "upload_time": "2022-05-12T15:16:43",
        "upload_time_iso_8601": "2022-05-12T15:16:43.113713Z",
        "url": "https://files.pythonhosted.org/packages/a5/e6/07163e0655bde41f1f9f649f00f37aafeeb597633a50c9cd17e4c6f0d393/k8swatcher-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a51430645fe409aa4c8785afd7013f7c7487ca5877c60d1cafde974478896b22",
          "md5": "69cbf2d12ea4f8de46605433b30274cd",
          "sha256": "0c6bce70998463c10e974928cb4f8921ad7a7d2627839752cbd7ee891ec7d751"
        },
        "downloads": -1,
        "filename": "k8swatcher-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "69cbf2d12ea4f8de46605433b30274cd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 14232,
        "upload_time": "2022-05-17T20:15:27",
        "upload_time_iso_8601": "2022-05-17T20:15:27.925777Z",
        "url": "https://files.pythonhosted.org/packages/a5/14/30645fe409aa4c8785afd7013f7c7487ca5877c60d1cafde974478896b22/k8swatcher-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5098c4905b5a504d8a0e612f5afee858fccabd4f212ff5e35f1b9da5d11c6391",
          "md5": "90c8c757c9217f67292adc30fd217d22",
          "sha256": "25cfae869acaabfc3b4ea12fa935038b213f1d10fa14fb807a4617a6e78c7633"
        },
        "downloads": -1,
        "filename": "k8swatcher-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "90c8c757c9217f67292adc30fd217d22",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 17852,
        "upload_time": "2022-05-17T20:15:29",
        "upload_time_iso_8601": "2022-05-17T20:15:29.440922Z",
        "url": "https://files.pythonhosted.org/packages/50/98/c4905b5a504d8a0e612f5afee858fccabd4f212ff5e35f1b9da5d11c6391/k8swatcher-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef05be04d00e040b01f08bd32081bf93d8fd0d07ce568bc099947eecfbeae658",
          "md5": "020b36283be2d6d6f34c94ee3b1307ae",
          "sha256": "d0d482ca99f4a4fb1dd891aaaaf94a5e536dd7b767eeba7b1b2c416f871e1a70"
        },
        "downloads": -1,
        "filename": "k8swatcher-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "020b36283be2d6d6f34c94ee3b1307ae",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 14452,
        "upload_time": "2022-06-09T14:22:03",
        "upload_time_iso_8601": "2022-06-09T14:22:03.217168Z",
        "url": "https://files.pythonhosted.org/packages/ef/05/be04d00e040b01f08bd32081bf93d8fd0d07ce568bc099947eecfbeae658/k8swatcher-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cdce1defc52c0fa28431db8777b47b341373a0c0fcf7e874718f2c5f245a1ab0",
          "md5": "87bbac93c542512795dde6dd2badc8a2",
          "sha256": "541e634cab033aaf39798fae6e5d9b695fa8e2f9d89466233c71204a9b1dd967"
        },
        "downloads": -1,
        "filename": "k8swatcher-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "87bbac93c542512795dde6dd2badc8a2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 18119,
        "upload_time": "2022-06-09T14:22:04",
        "upload_time_iso_8601": "2022-06-09T14:22:04.737270Z",
        "url": "https://files.pythonhosted.org/packages/cd/ce/1defc52c0fa28431db8777b47b341373a0c0fcf7e874718f2c5f245a1ab0/k8swatcher-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9cfe8fd95874d0fce2f361d763f7a6ee9e99e3e98583013be4e5307c625e993a",
          "md5": "aad0ead8919996822d766a924b490258",
          "sha256": "324fa17fb43b8ab407449ae6daa07ade4ca10f000f8a417d87b56fc3b73879c8"
        },
        "downloads": -1,
        "filename": "k8swatcher-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "aad0ead8919996822d766a924b490258",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 14460,
        "upload_time": "2022-06-10T20:28:23",
        "upload_time_iso_8601": "2022-06-10T20:28:23.898258Z",
        "url": "https://files.pythonhosted.org/packages/9c/fe/8fd95874d0fce2f361d763f7a6ee9e99e3e98583013be4e5307c625e993a/k8swatcher-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "61ac23c28f8994a60df215c216d2ddc7c96338135bf6dffc1b641ea7763585ef",
          "md5": "739c54185150afa6cb50e5d20e79ca1c",
          "sha256": "184697527202acb6ae13a5347bfbf85a896f36a545f22d12645ae1c3b784811a"
        },
        "downloads": -1,
        "filename": "k8swatcher-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "739c54185150afa6cb50e5d20e79ca1c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 18134,
        "upload_time": "2022-06-10T20:28:25",
        "upload_time_iso_8601": "2022-06-10T20:28:25.768892Z",
        "url": "https://files.pythonhosted.org/packages/61/ac/23c28f8994a60df215c216d2ddc7c96338135bf6dffc1b641ea7763585ef/k8swatcher-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9cfe8fd95874d0fce2f361d763f7a6ee9e99e3e98583013be4e5307c625e993a",
        "md5": "aad0ead8919996822d766a924b490258",
        "sha256": "324fa17fb43b8ab407449ae6daa07ade4ca10f000f8a417d87b56fc3b73879c8"
      },
      "downloads": -1,
      "filename": "k8swatcher-0.0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "aad0ead8919996822d766a924b490258",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 14460,
      "upload_time": "2022-06-10T20:28:23",
      "upload_time_iso_8601": "2022-06-10T20:28:23.898258Z",
      "url": "https://files.pythonhosted.org/packages/9c/fe/8fd95874d0fce2f361d763f7a6ee9e99e3e98583013be4e5307c625e993a/k8swatcher-0.0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "61ac23c28f8994a60df215c216d2ddc7c96338135bf6dffc1b641ea7763585ef",
        "md5": "739c54185150afa6cb50e5d20e79ca1c",
        "sha256": "184697527202acb6ae13a5347bfbf85a896f36a545f22d12645ae1c3b784811a"
      },
      "downloads": -1,
      "filename": "k8swatcher-0.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "739c54185150afa6cb50e5d20e79ca1c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 18134,
      "upload_time": "2022-06-10T20:28:25",
      "upload_time_iso_8601": "2022-06-10T20:28:25.768892Z",
      "url": "https://files.pythonhosted.org/packages/61/ac/23c28f8994a60df215c216d2ddc7c96338135bf6dffc1b641ea7763585ef/k8swatcher-0.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}