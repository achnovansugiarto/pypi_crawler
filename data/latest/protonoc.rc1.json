{
  "info": {
    "author": "LABSS(Francesco Mattioli, Mario Paolucci)",
    "author_email": "francesco@nientepanico.org, mario.paolucci@istc.cnr.it",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Artificial Life",
      "Topic :: Sociology"
    ],
    "description": "# PROTON-OC\n\nPROTON-OC is an agent-based model that explores the dynamics and processes that lead to recruitment into organized crime. The simulator investigates a wide variety of factors in the individual sphere and focuses on the social relationships between agents. Detailed information on the theoretical background, model development process, and model functioning available [here](./D5.1-PROTON-Simulator-Report.pdf). This is the python version of the simulator; the original model was developed in Netlogo and can be found [here](https://github.com/LABSS/PROTON-OC).\n\nThe simulation is developed by LABSS-CNR as a follow-up of the PROTON project, https://www.projectproton.eu/\n\nResults from the original simulator have been published on the [Journal of Quantitative Criminology](https://link.springer.com/article/10.1007/s10940-020-09489-z).\n\n## Get started\n\nproton-oc requires python  >= 3.8, we recommend to use a virtual environment\n\n```\npip install protonoc\n```\n\n### Command Line Interface\n\nproton-oc integrates a **command line interface** that offers two usage modes:\n\n1. base mode\n\n   ```\n   >> protonoc base --help\n   Usage: protonoc base [OPTIONS]\n\n     Run a simple baseline simulation\n\n   Options:\n     -name, -n TEXT            The name of the file being generated. By default\n                               it is hour_minutes\n\n     -collect, -c PATH         Specify the path where the results are saved.\n                               (e.g. -c /this_folder/another_folder). default is\n                               cwd\n\n     -snapshot, -s INTEGER     If this option is passed with an integer value,\n                               collects results only at certain ticks (e.g. -s 56\n                               -s 89) save results at tick 56 and tick 89.\n                               Accepts multiple calls, default is None.\n\n     -alldata, -a              By default only model ouputs are collected. If\n                               this option is passed the attributes of every\n                               single agent are also collected. Warning: The\n                               output may be large.\n\n     -randomstate, -r INTEGER  If this option is called with an integer value,\n                               the simulation uses that seed for the random\n                               generator.\n\n     --help                    Show this message and exit.\n   ```\n\n   Example:\n\n   ```\n   protonoc base -c result/ -n sample -r 42\n   ```\n\n   This command launches a simulation with baseline parameters, saves results in `result/` with the name `\"sample\"` and uses the seed `42`. Results are saved in pickle format.\n\n2. override mode\n\n   ```\n   >> protonoc override --help\n   Usage: protonoc override [OPTIONS] [SOURCE_PATH]\n\n     This command takes as argument an .xml file a .json file or a folder\n     containing several .json or .xml files. It overwrites the model parameters\n     with the files and performs several simulations.\n\n     SOURCE_PATH: file location, default is cwd\n\n   Options:\n     -collect, -c PATH         Specify the path where the results are saved.\n                               (e.g. -c /this_folder/another_folder). default is\n                               cwd\n\n     -snapshot, -s INTEGER     If this option is passed with an integer value,\n                               collects results only at certain ticks (e.g. -s 56\n                               -s 89) save results at tick 56 and tick 89.\n                               Accepts multiple calls, default is None.\n\n     -alldata, -a              By default only model ouputs are collected. If\n                               this option is passed the attributes of every\n                               single agent are also collected. Warning: The\n                               output may be large.\n\n     -randomstate, -r INTEGER  If this option is called with an integer value,\n                               the simulation uses that seed for the random\n                               generator.\n\n     -parallel, -p INTEGER     Adding this option with an int argument launches\n                               multiple simulations in parallel using\n                               concurrent.futures. The int value indicates how\n                               many cores to use. If the value is too high adjust\n                               the parameter based on the available machine's\n                               cores. Be careful, it does not control memory\n                               increase which may cause an out-of-memory.\n\n     -merge, -m                Each simulation generates a single pickle file. If\n                               this option is passed generates a single file\n                               instead. Raise MemoryError if not enough memory\n                               space.\n\n     --help                    Show this message and exit.\n   ```\n\nExample:\n\n```\nprotonoc override sample_json.json -c results/ -p 4 -m -a\n```\n\nThis command takes the file `sample_json.json` (located in the samples folder) runs several simulations divided into 4 processes and saves the results in the `results/` folder. At the end of the simulation it merges all the results into one pickle file.\n\n### Read data\n\nSimulations results are saved in pickle and can be extracted as a pandas DataFrame through the `protonoc.utils` module.\n\n```python\nfrom protonoc import utils\npath = \"FILEPATH\"\ndata = utils.read_data(path)\n```\n\n### Integrate the model in your scripts\n\nImport `ProtonOC` as a simple module, create a new instance of the model and call the `run` function:\n\n```python\nfrom protonoc import ProtonOC\nmodel = ProtonOC()\nmodel.run(n_agents=100, num_ticks=480, verbose=True)\n```\n\n#### How do I change input parameters?\n\nImport `ProtonOC` as a simple module, create a new instance of the model, use `ProtonOC.overview()` to show a pretty table with current parameters and the respective value. Use `ProtonOC.set_param()` to change the parameters of the active `ProtonOC` instance. Call the run function to launch the model.\n\n```python\nfrom protonoc import ProtonOC\nmodel = ProtonOC()\nmodel.overview()\nmodel.set_param(\"initial_agents\", 10000)\nmodel.run(verbose=True)\n```\n\nsample `ProtonOC.overview()` output:\n\n```\n+-----------------------------------+----------+\n|        free parameter name        |  value   |\n+-----------------------------------+----------+\n|            migration_on           |   True   |\n|           initial_agents          |   10000  |\n|             num_ticks             |   480    |\n|            intervention           | baseline |\n|       ......................      |    .     |\n|       ......................      |    .     |\n|       ......................      |    .     |\n|       ......................      |    .     |\n+-----------------------------------+----------+\n```\n\n\n\n## Contribute\n\nPyproton-oc accepts contributions. Reports and suggestions are welcome. Feedbacks are mandatory.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/LABSS/PyPROTON-OC",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "protonoc",
    "package_url": "https://pypi.org/project/protonoc/",
    "platform": "",
    "project_url": "https://pypi.org/project/protonoc/",
    "project_urls": {
      "Homepage": "https://github.com/LABSS/PyPROTON-OC"
    },
    "release_url": "https://pypi.org/project/protonoc/1.0/",
    "requires_dist": [
      "click (>=7.1.2)",
      "networkx (>=2.5)",
      "numpy (>=1.20)",
      "pandas (>=1.1.4)",
      "tornado (>=6.1)",
      "tqdm (>=4.53)",
      "numba (>=0.51.2)",
      "psutil (>=5.8.0)",
      "mesa (>=0.8.8)",
      "prettytable (>=2.1)"
    ],
    "requires_python": ">=3.8",
    "summary": "Simulation of recruitment to terrorism. Developed by LABSS-CNR for the PROTON project, https://www.projectproton.eu",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9889452,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3f24aae79faaec652ee8d5c97b13643a01189ac49a5b6f0fb7d7d47ce1733503",
          "md5": "8d7ff2a2ce6416b8bb3a6b893e547a81",
          "sha256": "685ad1fe401023f296f10af2f40063a336777b0f9fb802ed6376bfe7bd910789"
        },
        "downloads": -1,
        "filename": "protonoc-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8d7ff2a2ce6416b8bb3a6b893e547a81",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 183488,
        "upload_time": "2021-03-26T11:27:25",
        "upload_time_iso_8601": "2021-03-26T11:27:25.867199Z",
        "url": "https://files.pythonhosted.org/packages/3f/24/aae79faaec652ee8d5c97b13643a01189ac49a5b6f0fb7d7d47ce1733503/protonoc-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0b4100e7a9d05c5b9f24897f03a88f07604fdb4790f6acc22cdfe7c005c532af",
          "md5": "c60c3440be4a7cafc9aa5175d42a809c",
          "sha256": "566913aa11fd94bcebbf1653aff8d1a1d4d0fe56cf492beb220dd052a27e42bb"
        },
        "downloads": -1,
        "filename": "protonoc-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c60c3440be4a7cafc9aa5175d42a809c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 46173,
        "upload_time": "2021-03-26T11:27:27",
        "upload_time_iso_8601": "2021-03-26T11:27:27.247152Z",
        "url": "https://files.pythonhosted.org/packages/0b/41/00e7a9d05c5b9f24897f03a88f07604fdb4790f6acc22cdfe7c005c532af/protonoc-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3f24aae79faaec652ee8d5c97b13643a01189ac49a5b6f0fb7d7d47ce1733503",
        "md5": "8d7ff2a2ce6416b8bb3a6b893e547a81",
        "sha256": "685ad1fe401023f296f10af2f40063a336777b0f9fb802ed6376bfe7bd910789"
      },
      "downloads": -1,
      "filename": "protonoc-1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8d7ff2a2ce6416b8bb3a6b893e547a81",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 183488,
      "upload_time": "2021-03-26T11:27:25",
      "upload_time_iso_8601": "2021-03-26T11:27:25.867199Z",
      "url": "https://files.pythonhosted.org/packages/3f/24/aae79faaec652ee8d5c97b13643a01189ac49a5b6f0fb7d7d47ce1733503/protonoc-1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0b4100e7a9d05c5b9f24897f03a88f07604fdb4790f6acc22cdfe7c005c532af",
        "md5": "c60c3440be4a7cafc9aa5175d42a809c",
        "sha256": "566913aa11fd94bcebbf1653aff8d1a1d4d0fe56cf492beb220dd052a27e42bb"
      },
      "downloads": -1,
      "filename": "protonoc-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "c60c3440be4a7cafc9aa5175d42a809c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 46173,
      "upload_time": "2021-03-26T11:27:27",
      "upload_time_iso_8601": "2021-03-26T11:27:27.247152Z",
      "url": "https://files.pythonhosted.org/packages/0b/41/00e7a9d05c5b9f24897f03a88f07604fdb4790f6acc22cdfe7c005c532af/protonoc-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}