{
  "info": {
    "author": "Donald",
    "author_email": "donald.nguyen.it@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "\n# Information\nThis package extend from https://github.com/timkpaine/tdameritrade\nI crawled data options from TD Ameritrade API with thousand requests by hour \nand my application has generated over 11k tokens in the last few hours when I use tdameritrade package\nmaybe when I send a get request to TDA then a token generated so TD Ameritrade API team notice me. Then I used redis to keep token and using it in 30minute before re-generated.\nI only modified session.py file and keep others.\nBonus, I created 2 methods to get history stock price and options straddle as Yahoo Options.\n## Installation\n```bash\npip install pip install tdameritrade_ext --upgrade\n\n```\n## Get Options\n* Get options\n```bash\nfrom tdameritrade_ext.client import TDClient\nimport time\nc = TDClient()\ndata = c.options('AAPL', fromDate=time.strftime(\"%Y-%m-%d\"))\n```\n## Get Options Chain as Straddle (similar Yahoo Options)\n```bash\ndef get_option_chain(ticker):\n    df = None\n    try:\n        c = TDClient()\n        df = c.options(ticker, fromDate=time.strftime(\"%Y-%m-%d\"))\n    except AssertionError as e:\n        print(\"error 1\", e)\n        log.exception(e)\n    except Exception as e:\n        print(\"error 2\", e)\n        log.exception(e)\n\n    if df == None:\n        return None\n\n    putExp = df['putExpDateMap']\n    puts = {}\n    for date, put in putExp.items():\n        dates = date.split(\":\")\n        date_expiration = dates[0]\n        itemputs = {}\n        for strike, itemstrikes in put.items():\n            if strike[-2:] == '.0':\n                strike = round(float(strike))\n            itemstrike = itemstrikes[0]\n            itemput = {\n                'strike': strike,\n                'put': {\n                    'contractSymbol': itemstrike['symbol'],\n                    'strike': strike,\n                    'lastPrice': itemstrike['last'],\n                    'change': itemstrike['netChange'],\n                    'percentChange': itemstrike['percentChange'],\n                    'volume': itemstrike['totalVolume'],\n                    'openInterest': itemstrike['openInterest'],\n                    'impliedVolatility': itemstrike['volatility'],\n                    'open': itemstrike['openPrice'],\n                    'high': itemstrike['highPrice'],\n                    'low': itemstrike['lowPrice'],\n                    'close': itemstrike['closePrice'],\n                    'date': itemstrike['tradeTimeInLong'],\n                    'bid': itemstrike['bid'],\n                    'ask': itemstrike['ask']\n                }\n            }\n            itemputs[strike] = itemput\n        puts[date_expiration] = itemputs\n\n    callExp = df['callExpDateMap']\n    calls = {}\n    for date, call in callExp.items():\n        dates = date.split(\":\")\n        date_expiration = dates[0]\n\n        put = puts[date_expiration] if date_expiration in puts else {}\n        itemcalls = []\n        for strike, itemstrikes in call.items():\n            if strike[-2:] == '.0':\n                strike = round(float(strike))\n            itemstrike = itemstrikes[0]\n            itemcall = {\n                'strike': strike,\n                'call': {\n                    'contractSymbol': itemstrike['symbol'],\n                    'strike': strike,\n                    'lastPrice': itemstrike['last'],\n                    'change': itemstrike['netChange'],\n                    'percentChange': itemstrike['percentChange'],\n                    'volume': itemstrike['totalVolume'],\n                    'openInterest': itemstrike['openInterest'],\n                    'impliedVolatility': itemstrike['volatility'],\n                    'open': itemstrike['openPrice'],\n                    'high': itemstrike['highPrice'],\n                    'low': itemstrike['lowPrice'],\n                    'close': itemstrike['closePrice'],\n                    'date': itemstrike['tradeTimeInLong'],\n                    'bid': itemstrike['bid'],\n                    'ask': itemstrike['ask']\n                },\n                'put': put[strike]['put'] if strike in put else {}\n            }\n            itemcalls.append(itemcall)\n        calls[date_expiration] = itemcalls\n\n    return calls\n```\n\n* Get history by ticker and interval: 1m, 5m, 10m, 15m, 30m, 1h, 1d\n\n```bash\ndef get_data_ticker(ticker, interval):\n    c = TDClient()\n    period_type = 'day'\n    period = 1\n    frequency_type = 'minute'\n    frequency = 1\n\n    if (interval == '5m'):\n        frequency = 5\n        period = 2\n    elif (interval == '10m'):\n        frequency = 10\n        period = 3\n    elif (interval == '15m'):\n        frequency = 15\n        period = 5\n    elif (interval == '30m'):\n        frequency = 30\n        period = 10\n    elif (interval == '1h'):\n        frequency = 30\n        period = 2\n    elif (interval == '1d'):\n        period_type = 'month'\n        period = 6\n        frequency_type = 'daily'\n        frequency = 1\n\n    resp = c.history(symbol=ticker,\n                               periodType=period_type,\n                               period=period,\n                               frequencyType=frequency_type,\n                               frequency=frequency)\n\n    if 'candles' not in resp:\n        return None\n    candles = resp['candles']\n\n    if (interval == '1h'):\n        datas = []\n        for item in candles:\n            date_time = datetime.fromtimestamp(item['datetime'] / 1000)\n            m = date_time.minute\n            if m == 0:\n                datas.append(item)\n    else:\n        datas = candles\n    \n    return datas\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dearvn/tdameritrade_ext",
    "keywords": "finance data,options data,crawl stock,tdameritrade",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tdameritrade-ext",
    "package_url": "https://pypi.org/project/tdameritrade-ext/",
    "platform": "",
    "project_url": "https://pypi.org/project/tdameritrade-ext/",
    "project_urls": {
      "Bug Tracker": "https://github.com/dearvn/tdameritrade_ext/issues",
      "Homepage": "https://github.com/dearvn/tdameritrade_ext"
    },
    "release_url": "https://pypi.org/project/tdameritrade-ext/0.0.2/",
    "requires_dist": [
      "ipython (>=7.0.1)",
      "pandas (>=0.22.0)",
      "pillow (>=5.3.0)",
      "requests (>=2.23.0)",
      "selenium (>=3.141.0)",
      "ujson (>=1.35)",
      "black (>=20.)",
      "bump2version (>=1.0.0)",
      "flake8 (>=3.7.8)",
      "flake8-black (>=0.2.1)",
      "mock",
      "pytest (>=4.3.0)",
      "pytest-cov (>=2.6.1)",
      "Sphinx (>=1.8.4)",
      "sphinx-markdown-builder (>=0.5.2)"
    ],
    "requires_python": ">=3.7.0",
    "summary": "This package extend from https://github.com/timkpaine/tdameritrade.",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12657469,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee58614122bc9b52b20b3f4d4455e305aca8366798c73834f1e8fc97173afe6c",
          "md5": "29a991de92162f869b8c91e17680192c",
          "sha256": "a57e69e91869a32a3ff1be92f7638f192cf661209a6fcaf0c05f059d64ef4dde"
        },
        "downloads": -1,
        "filename": "tdameritrade_ext-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "29a991de92162f869b8c91e17680192c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.0",
        "size": 26396,
        "upload_time": "2022-01-23T04:52:18",
        "upload_time_iso_8601": "2022-01-23T04:52:18.418716Z",
        "url": "https://files.pythonhosted.org/packages/ee/58/614122bc9b52b20b3f4d4455e305aca8366798c73834f1e8fc97173afe6c/tdameritrade_ext-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4fe04ad47ab87b64a9935b720e1cc918f733315195d455caf23414b72ef40351",
          "md5": "d985c98d39f350ab4b24b499b7991a99",
          "sha256": "6c15db968581aa3dd939bae9e75851562d01aef682f9fb30818dc9d49992391e"
        },
        "downloads": -1,
        "filename": "tdameritrade_ext-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d985c98d39f350ab4b24b499b7991a99",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.0",
        "size": 24488,
        "upload_time": "2022-01-23T04:52:21",
        "upload_time_iso_8601": "2022-01-23T04:52:21.353000Z",
        "url": "https://files.pythonhosted.org/packages/4f/e0/4ad47ab87b64a9935b720e1cc918f733315195d455caf23414b72ef40351/tdameritrade_ext-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a626c03421635008755c4333e4bb4684159dd68310464ada83f8e5d512b3611f",
          "md5": "afba24cf139e27574f32c522bea453bc",
          "sha256": "aa0fe821307f8e5e262530ce7e51262aa919609999ceb4406259ae1d9e54ad74"
        },
        "downloads": -1,
        "filename": "tdameritrade_ext-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "afba24cf139e27574f32c522bea453bc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.0",
        "size": 26397,
        "upload_time": "2022-01-23T05:01:21",
        "upload_time_iso_8601": "2022-01-23T05:01:21.562114Z",
        "url": "https://files.pythonhosted.org/packages/a6/26/c03421635008755c4333e4bb4684159dd68310464ada83f8e5d512b3611f/tdameritrade_ext-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "36218e49f5eaac8b63b379d9eab0c54a912c91948e9f3842e448e4fdcaee7d4e",
          "md5": "c92121afb59c1fd954ff24e07378e16b",
          "sha256": "3350dbba0dfa386c0a0921142fc0ab0601e8695fbad99c4d63952d95c1dfd522"
        },
        "downloads": -1,
        "filename": "tdameritrade_ext-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c92121afb59c1fd954ff24e07378e16b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.0",
        "size": 24495,
        "upload_time": "2022-01-23T05:01:23",
        "upload_time_iso_8601": "2022-01-23T05:01:23.923778Z",
        "url": "https://files.pythonhosted.org/packages/36/21/8e49f5eaac8b63b379d9eab0c54a912c91948e9f3842e448e4fdcaee7d4e/tdameritrade_ext-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a626c03421635008755c4333e4bb4684159dd68310464ada83f8e5d512b3611f",
        "md5": "afba24cf139e27574f32c522bea453bc",
        "sha256": "aa0fe821307f8e5e262530ce7e51262aa919609999ceb4406259ae1d9e54ad74"
      },
      "downloads": -1,
      "filename": "tdameritrade_ext-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "afba24cf139e27574f32c522bea453bc",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7.0",
      "size": 26397,
      "upload_time": "2022-01-23T05:01:21",
      "upload_time_iso_8601": "2022-01-23T05:01:21.562114Z",
      "url": "https://files.pythonhosted.org/packages/a6/26/c03421635008755c4333e4bb4684159dd68310464ada83f8e5d512b3611f/tdameritrade_ext-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "36218e49f5eaac8b63b379d9eab0c54a912c91948e9f3842e448e4fdcaee7d4e",
        "md5": "c92121afb59c1fd954ff24e07378e16b",
        "sha256": "3350dbba0dfa386c0a0921142fc0ab0601e8695fbad99c4d63952d95c1dfd522"
      },
      "downloads": -1,
      "filename": "tdameritrade_ext-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "c92121afb59c1fd954ff24e07378e16b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7.0",
      "size": 24495,
      "upload_time": "2022-01-23T05:01:23",
      "upload_time_iso_8601": "2022-01-23T05:01:23.923778Z",
      "url": "https://files.pythonhosted.org/packages/36/21/8e49f5eaac8b63b379d9eab0c54a912c91948e9f3842e448e4fdcaee7d4e/tdameritrade_ext-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}