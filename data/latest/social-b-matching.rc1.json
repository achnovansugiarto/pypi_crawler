{
  "info": {
    "author": "",
    "author_email": "Dan Goldman <danbgoldman@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Office/Business :: Scheduling"
    ],
    "description": "This module implements an algorithm designed for optimal matchings encouraging\ninformal social connections between team members in a workgroup.\n\nWhile our company's WFH policy was in place during the COVID-19 pandemic, my\nteam sought ideas to strengthen social ties and help new hires feel welcomed.\nOne very successful program involved randomly assigning weekly 15-minute\nmeetings between team members for a quick chat. However, many participants felt\nthese random assignments weren't ideal: Newcomers wanted more meetings early on,\nto meet more people. Other team members found themselves meeting with their own\nclose teammates, or with the same person multiple times in just a few weeks!\n\nTo address this, we explored an optimal matching algorithm.  The ideal approach\nwould assign scores to each potential pairing, assigning\nhigher scores to pairs of participants in different cities, or different\nsubteams, and lower scores to pairs that had already been assigned\nrecently. New hires would be assigned multiple pairings\nfor new hires in their first few months.\n\nAfter a literature review, I learned this problem is known in the literature as\nthe **maximum weighted b-matching** problem. Unlike [stable marriage](https://en.wikipedia.org/wiki/Stable_marriage_problem) or [maximum-weighted\nmatching](https://networkx.org/documentation/stable/reference/algorithms/generated/networkx.algorithms.matching.max_weight_matching.html#networkx.algorithms.matching.max_weight_matching), b-matching allows some nodes to be matched more than once. There is some recent research demonstrating\n[polynomial time solutions](https://arxiv.org/abs/1706.07418) for general\nb-matching, but I found no easy-to-use open source implementations. We observed\nthat for the case of small `n`, a solution based on integer programming runs in\nonly a few seconds on desktop PCs, which makes it well-suited to this\napplication's requirements.\n\nIn addition to the integer programming solver for standard maximum-weighted\nb-matching -- `b_matching.maximize_weighted_b_matching` -- this package also\nincludes a small wrapper `b_matching.inclusive_matching` enforcing the\nadditional constraint that all nodes must be used in at least one matched pair.\nA short proof for the inclusive matching algorithm can be found in\n`inclusive_b_matching.md`. The `toy_example` provides a small example\nillustrating the use of inclusive matching to assign social meetings across\na tiny but distributed team.\n\nAcknowledgements: MirkÃ³ Visontai provided helpful math research, suggestions,\nand code reviews. Bo Zulonas provided the score-based matching idea, original\nscoring functions, and useful feedback.\n\nThis is not an officially supported Google product.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "social-b-matching",
    "package_url": "https://pypi.org/project/social-b-matching/",
    "platform": null,
    "project_url": "https://pypi.org/project/social-b-matching/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/social-b-matching/0.0.1/",
    "requires_dist": [
      "absl-py",
      "ortools"
    ],
    "requires_python": ">=3.8",
    "summary": "Optimal b-matching for scored meeting assignments.",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17309035,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bb663667012f9891ce6af70895de9991a4439965241edf842e7edd99149f6677",
          "md5": "b897b8ddff4c51e6abe3cf87fccaa62a",
          "sha256": "d639354b6bbfb56c8c8abbc32d1195adc47d4b94f88a505ffe548729a6b89052"
        },
        "downloads": -1,
        "filename": "social_b_matching-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b897b8ddff4c51e6abe3cf87fccaa62a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 10059,
        "upload_time": "2023-03-15T20:01:42",
        "upload_time_iso_8601": "2023-03-15T20:01:42.695322Z",
        "url": "https://files.pythonhosted.org/packages/bb/66/3667012f9891ce6af70895de9991a4439965241edf842e7edd99149f6677/social_b_matching-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e166b6c63cd83c7ce1928ffdc07a331227cfe758f8dbee95b1fc127726ac1ee1",
          "md5": "286d5d54f267a532fd6854ab23acd0b9",
          "sha256": "8c668ec1e39ed2af061986187fdadb4ef31baf0f94e7035c8795978f5fb24f19"
        },
        "downloads": -1,
        "filename": "social_b_matching-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "286d5d54f267a532fd6854ab23acd0b9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 9101,
        "upload_time": "2023-03-15T20:01:44",
        "upload_time_iso_8601": "2023-03-15T20:01:44.520652Z",
        "url": "https://files.pythonhosted.org/packages/e1/66/b6c63cd83c7ce1928ffdc07a331227cfe758f8dbee95b1fc127726ac1ee1/social_b_matching-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bb663667012f9891ce6af70895de9991a4439965241edf842e7edd99149f6677",
        "md5": "b897b8ddff4c51e6abe3cf87fccaa62a",
        "sha256": "d639354b6bbfb56c8c8abbc32d1195adc47d4b94f88a505ffe548729a6b89052"
      },
      "downloads": -1,
      "filename": "social_b_matching-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b897b8ddff4c51e6abe3cf87fccaa62a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 10059,
      "upload_time": "2023-03-15T20:01:42",
      "upload_time_iso_8601": "2023-03-15T20:01:42.695322Z",
      "url": "https://files.pythonhosted.org/packages/bb/66/3667012f9891ce6af70895de9991a4439965241edf842e7edd99149f6677/social_b_matching-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e166b6c63cd83c7ce1928ffdc07a331227cfe758f8dbee95b1fc127726ac1ee1",
        "md5": "286d5d54f267a532fd6854ab23acd0b9",
        "sha256": "8c668ec1e39ed2af061986187fdadb4ef31baf0f94e7035c8795978f5fb24f19"
      },
      "downloads": -1,
      "filename": "social_b_matching-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "286d5d54f267a532fd6854ab23acd0b9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 9101,
      "upload_time": "2023-03-15T20:01:44",
      "upload_time_iso_8601": "2023-03-15T20:01:44.520652Z",
      "url": "https://files.pythonhosted.org/packages/e1/66/b6c63cd83c7ce1928ffdc07a331227cfe758f8dbee95b1fc127726ac1ee1/social_b_matching-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}