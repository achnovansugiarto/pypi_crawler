{
  "info": {
    "author": "mittelholcz",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3"
    ],
    "description": "[![license](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/mittelholcz/hellopypa/blob/master/LICENSE)\n[![pypi](https://img.shields.io/badge/pypi-0.0.11-blue.svg)](https://pypi.org/project/hellopypa/)\n\n# Hogyan készítsünk python csomagot\n\n- [1. Bevezetés](#1-bevezetés)\n- [2. Könyvtárszerkezet](#2-könyvtárszerkezet)\n- [3. Környezet](#3-környezet)\n- [4. Az `__init__.py` fájl](#4-az-__init__py-fájl)\n- [5. Tesztelés](#5-tesztelés)\n- [6. A `setup.py` fájl](#6-a-setuppy-fájl)\n- [7. További lehetőségek](#7-további-lehetőségek)\n  - [7.1. Verzió](#71-verzió)\n  - [7.2. Fájlok hozzáadása](#72-fájlok-hozzáadása)\n  - [7.3. Parancssori futtatás](#73-parancssori-futtatás)\n- [TODO](#todo)\n- [Irodalom](#irodalom)\n\n## 1. Bevezetés\n\nA *modul* (*module*) egy python fájl, ami importálható, névteret alkot és tetszőleges további python objektumokat tartalmazhat.\n\nA *csomag* (*package*) egy olyan könyvtár, ami tartalmaz egy `__init__.py`\nfájlt, továbbá tartalmazhat további alcsomagokat (alkönyvtárakat) és\nmodulokat (python fájlokat). A *csomag* is importálható, névteret alkot és\ntovábbi python objektumokat tartalmazhat.\n\n*Megjegyzés*: A *modul~fájl* és a *csomag~könyvtár* csak analógia, nem minden\nesetben igaz. Részletek [itt](https://docs.python.org/3/reference/import.html).\n\nA csomagokat a Python csomagkezelőjével, a\n[`pip`](https://pip.pypa.io/en/stable/)-pel lehet telepíteni, frissíteni,\neltávolítani. A `pip` képes verziókezelő repozitóriumokból is telepíteni, így\npl. a Github-ról is, de a python csomagok publikálásának szokott módja a\ncsomag feltöltése a [pypi.org](https://pypi.org/)-ra (*PyPI*: Python Package\nIndex). Ennek mikéntjéről lesz szó az alábbiakban.\n\nA [pypi.org](https://pypi.org/)-ot és a csomagoláshoz szükséges eszközöket a\n*PyPA* (*Python Packaging Authority*) fejleszti és tartja karban. Honlapjukon\n([pypa.io](https://www.pypa.io/en/latest/)) sok hasznos anyag elérhető\ncsomagolás és terjesztés témakörben.\n\n## 2. Könyvtárszerkezet\n\n```txt\nhellopypa/\n    hellopypa/\n        __init__.py\n        __main__.py\n        example.cfg\n        hellopypa.py\n        version.py\n    test/\n        __init__.py\n        test_hello.py\n    LICENSE\n    MANIFEST.in\n    README.md\n    requirements.txt\n    requirements-dev.txt\n    setup.py\n```\n\nFontosabb könyvtárak és fájlok:\n\n- `hellopypa/`: A csomagunk fő könyvtára. Általában jó, ha ez megegyezik\n  magának a repónak a nevével (külső `hellopypa/` könyvtár), de nem szükséges.\n- `test/`: A csomaghoz való tesztek könyvtára. A tesztek nem részei a\n  csomagnak, csak a repónak.\n- `LICENSE`: Licenc, a lehetőségeket l. [itt](https://choosealicense.com/) és\n  [itt](https://opensource.org/licenses), további tanácsok\n  [itt](https://arstechnica.com/gadgets/2020/02/how-to-choose-an-open-source-license/).\n- `MANIFEST.in`: Itt soroljuk fel a csomaghoz tartozó nem python fájlokat (binárisok, konfig fájlok, stb).\n- `README.md`: Readme fájl, röviden leírja, hogy mire jó a csomag, hogyan kell telepíteni és hogyan lehet futtatni. A *markdown* formátumról bővebben [itt](https://guides.github.com/features/mastering-markdown/), a tartalmáról [itt](https://dbader.org/blog/write-a-great-readme-for-your-github-project) lehet olvasni.\n- `requirements*.txt`: Ezekben vannak felsorolva azok a python csomagok, amelyeket használunk (függőségek). A `requirements.txt` tartalmazza magának a csomagnak a függőségeit, a `requirements-dev.txt` pedig a fejlesztéshez szükséges függőségeket (tesztelés, linter, stb).\n- `setup.py`: Ez a fájl tartalmazza csomagoláshoz kellő metaadatokat.\n\n## 3. Környezet\n\nHozzunk létre a csomagnak külön virtuális környezetet és aktiváljuk\n(részletek [itt](https://docs.python.org/3/library/venv.html) és\n[itt](https://docs.python.org/3/tutorial/venv.html)):\n\n```txt\npython3 -m venv .venv\nsource .venv/bin/activate\n```\n\nTelepítsük a csomaghoz (`requirements.txt`) valamint a csomagoláshoz és\nfejlesztéshez szükséges függőségeket (`requirements-dev.txt`):\n\n```sh\npip install -r requirements-dev.txt\n```\n\n*Megjegyzés*: A `requirements-dev.txt` importálja sima `requirements.txt`-t is.\nA `requirements.txt` fájlok leírását l.\n[itt](https://pip.pypa.io/en/stable/reference/pip_install/#requirements-file-format)\nés [itt](https://pip.pypa.io/en/stable/user_guide/#requirements-files).\n\nA csomagoláshoz az alábbi csomagok szükségesek:\n\n- `setuptools`: Ez a `setup.py` függősége.\n- `twine`: Ezzel lehet a [pypi.org](https://pypi.org/)-ra feltölteni az\n  elkészült csomagot.\n- `wheel`: Ez kell a 2012-ben bevezetett *wheel* csomagformátumhoz (l. [PEP\n  427](https://www.python.org/dev/peps/pep-0427/)).\n\n## 4. Az `__init__.py` fájl\n\nAz `__init__.py` lehet üres is, de ekkor is léteznie kell. Ha nem üres, akkor\na csomag importálásánál a tartalma végrehajtódik. Szokás a metaadatok és az\nAPI meghatározására használni.\n\n*Metaadatok*: Kisebb projekteknél itt lehet felsorolni a csomag szerzőit,\nverzióját, licencét, megadni email-címet, karbantartót, hálát kifejezni a\nhozzájárulóknak, stb. Részletek [itt](https://stackoverflow.com/a/1523456). A\nverziót érdemes külön fájlban tartani, l. alább a *Verzió* fejezetet.\n\n*API*: Alapesetben ha használni szeretnénk egy importált csomag egy függvényét,\nakkor azt így tudjuk hívni:\n\n```txt\ncsomag[.alcsomag].fájl.függvény()\n```\n\nEbből a `csomag`-ot és a `függvény`-t nem lehet elhagyni, de az `alcsomag` és\na `fájl` általában felesleges. A felhasználónak csak azt kellene\nmegjegyeznie, hogy melyik függvény melyik csomagban van, azt nem, hogy melyik\ncsomag melyik fájljában van. Ráadásul a csomag írói is szeretik a kódot\nrugalmasan átszervezni a háttérben, pl. egy nagyra nőtt fájl egy részét\núj fájlba írni anélkül, hogy eltörnék az *API*-t.\n\nMivel az `__init__.py`-ban található kód importáláskor végrehajtódik,\nezért érdemes itt importálni a publikusnak szánt függvényeket, osztályokat, ezzel a csomag importálásakor ezek az objektumok is közvetlenül használhatók lesznek. Példa:\n\n```py\n# mypackage/__init__.py\nfrom file1 import function1, function2\nfrom file2 import function3\n```\n\nEzután a használat egyszerű:\n\n```py\nimport mypackage\nmypackage.function1()\n```\n\n*Megjegyzés*: Ha az `__init__.py`-ban csillaggal importálunk (`from file\nimport *`), akkor az alulvonással kezdődő objektumok nem kerülnek\nimportálásra (a teljes elérési útjukon keresztül továbbra is elérhetőek\nlesznek, részletek\n[itt](https://dbader.org/blog/meaning-of-underscores-in-python)).\n\n## 5. Tesztelés\n\nMielőtt csomagolnánk, teszteljük le az alkalmazásunkat. A teszteléshez\nhasználhatjuk a hagyományos\n[*unittest*](https://docs.python.org/3/library/unittest.html)-et, vagy az\nújabban elterjedt [*pytest*](https://docs.pytest.org/en/latest/)-et. A\n`test/` könyvtárban vannak a tesztfájlok, ezeket *pytest* estén a következő\nparanccsal futtathatjuk:\n\n```sh\npytest --verbose test/\n```\n\n*Megjegyzés*: a `test/` könyvtár maga is csomag, kell benne lennie\n`__init__.py` fájlnak.\n\n## 6. A `setup.py` fájl\n\nMagát a csomagolást (a terjeszthető és telepíthető formátum létrehozását) a\n[*setuptools*](https://setuptools.readthedocs.io/en/latest/) nevű python\ncsomag végzi. A `setup.py` fájl tartalmazza a *setuptools* számára szükséges\nadatokat. Az adatokat lehet közvetlenül a `setup.py`-ba is beírni, de néha\nhasznosabb máshol tárolni az adatot és a `setup.py`-ban csak importálni, vagy\nmás módon beolvasni.\n\nEgy viszonylag minimalista példa:\n\n```py\nimport setuptools\n\nwith open('README.md', 'r') as fh:\n    long_description = fh.read()\n\nsetuptools.setup(\n    name='csomagnév',\n    version='0.0.1',\n    author='szerző',\n    description='Minimalista példa csomag',\n    long_description=long_description,\n    long_description_content_type='text/markdown',\n    url='https://github.com/szerző/csomagnév',\n    packages=setuptools.find_packages(exclude=['test']),\n    classifiers=[\n        'Programming Language :: Python :: 3',\n        'License :: OSI Approved :: MIT License',\n        'Operating System :: POSIX :: Linux',\n    ],\n    python_requires='>=3.6',\n)\n```\n\nA *setuptools.setup* fontosabb mezői:\n\n- `name`: A csomag neve (kötelező).\n- `version`: A csomag verziója (kötelező). A pypi.org-ra nem lehet kétszer\n  ugyanazt a verziószámú csomagot feltölteni, akkor sem, ha amúgy különböznek.\n- `author`: A csomag szerzője.\n- `description`: Rövid leírás.\n- `long_description`: Hosszú leírás, jellemzően magát a README.md-t szokták\n  megadni. A PyPI ezt fogja a csomag oldalán megjeleníteni. Ha *markdown* fájlt\n  adunk meg, akkor meg kell adnunk a formátumot is\n  ([*.rst*](https://www.sphinx-doc.org/en/master/usage/restructuredtext/basics.html)\n  az alapértelmezett).\n- `url`: A projekt honlapja.\n- `packages`: Itt adható meg, hol keresse a python fájlokat. Érdemes a\n  *setuptools* `find_packages()` függvényére bízni a dolgot. Az `exclude=[dir1,\n  dir2, ...]` paraméternek megadott könyvtárakban nem fog keresni.\n- `classifiers`: A PyPI számára megadható címkék listája [itt](https://pypi.org/classifiers/).\n- `python_requires`: Megadható a minimum python verzió.\n\nFuttassuk a `setup.py` fájlt:\n\n```sh\npython3 setup.py sdist bdist_wheel\n```\n\nA repónkban három új könyvtár fog létrejönni: egy `build/`, egy `dist/` és\negy `csomagnév.egg-info/` (érdemes ezeket a `.gitignore` fájlba felvenni,\nvagy a GitHub python-hoz írt `.gitignore`\n[fájlját](https://github.com/github/gitignore/blob/master/Python.gitignore)\nhasználni). Ezek közül a `dist/` ami fontos, ebben található ugyanis a\ncsomagunk terjeszthető és telepíthető változata.\n\nA csomag közvetlenül telepíthető a `pip install .` paranccal, vagy\nregisztrációt követően feltölthető a pypi.org oldalra a következő paranccsal:\n\n```sh\npython3 -m twine upload dist/*\n```\n\nEzután bármelyik gépen telepíthető a csomag a `pip install csomagnév`\nparanccsal.\n\nA pypi.org oldalnak van egy teszt változata is, ha csak kísérletezni\nszeretnénk, javasolt ezt használni. A fenti parancsok ekkor így módosulnak:\n\n```sh\ntwine upload --repository-url https://test.pypi.org/legacy/ dist/*\npip install --index-url https://test.pypi.org/simple/ hellopypa\n```\n\n## 7. További lehetőségek\n\nTovábbi tanácsok és lehetőségek a terjeszthető csomag testreszabására.\n\n### 7.1. Verzió\n\nA csomag verzióját érdemes egy helyen tárolni csak és máshol csak innen beolvasni. A lehetőségeket l. [itt](https://packaging.python.org/guides/single-sourcing-package-version/). Az alábbi megoldás lényege, hogy a csomagon belül egy külön fájlt használunk erre (`hellopypa/version.py`). Ezt a fájlt importáljuk a `setup.py`-ban és a `hellopypa/__init__.py`-ban is. Ezzel elkerülhetők a `hellopypa/__init__.py` közvetlen importálásának problémái (l. az előbbi cikk 6. pontjához írt figyelmeztetést), de telepítés nélkül is hozzáférhető lesz a verzió, mintha az `__init__.py`-ban lenne közvetlenül.\n\n```py\n# hellopypa/version.py\n__version__ = '0.0.3'\n```\n\n```py\n# hellopypa/__init__.py\n# ...\nfrom hellopypa.version import __version__\n# ...\n```\n\n```py\n# setup.py\n# ...\nfrom hellopypa.version import __version__\n# ...\nsetuptools.setup(\n    # ...\n    version=__version__,\n    # ...\n)\n```\n\n### 7.2. Fájlok hozzáadása\n\nA *setuptools* csak a python fájlokat veszi figyelembe. Ha más fájlokat is a\ncsomaghoz szeretnénk adni (konfigurációs fájlokat, binárisokat, adatot),\nakkor két dolgot kell csinálnunk.\n\n1. Létre kell hoznunk egy *MANIFEST.in* fájlt, amiben felsoroljuk, hogy miket\nszeretnénk még a csomaghoz adni. Részletek\n[itt](https://packaging.python.org/guides/using-manifest-in/). Példa: adjuk a\nprojekthez a *.cfg* kiterjesztésű fájlokat.\n\n    ```txt\n    # MANIFEST.in\n    include hellopypa/*.cfg\n    ```\n\n2. A *setup.py*-ba is bele kell írni, hogy további fájlok is lesznek.\n\n    ```py\n    # setup.py\n    # ...\n    setuptools.setup(\n        # ...\n        include_package_data=True,\n        # ...\n    )\n    ```\n\n### 7.3. Parancssori futtatás\n\nHa csomagunkat a `pip install hellopypa` után nem csak importálva, de\nparancssori alkalmazásként is szeretnénk használni, akkor két dolgot\ntehetünk.\n\n1. Egy python csomag futtatható az `-m` kapcsolóval (pl. `# python -m\nhellopypa`). Ehhez az kell, hogy a csomagban legyen egy `__main__.py` fájl, a\npython ezt fogja keresni és ha létezik, akkor futtatni. Részletek (nem mintha\nnagyon lennének) [itt](https://docs.python.org/3/library/__main__.html).\n2. Egy python csomag futtatható rendes, telepített parancsként is (pl.\n`# hellopypa`). Ekkor a *setup.py*-ban meg kell adni egy úgynevezett belépési\npontot, konkrétan egy függvényt, amit meg fog hívni a python. Részletek\n[itt](https://setuptools.readthedocs.io/en/latest/pkg_resources.html#entry-points).\nPélda:\n\n    ```py\n    # setup.py\n    # ...\n    setuptools.setup(\n        # ...\n        entry_points={\n            \"console_scripts\": [\n                \"hellopypa=hellopypa.__main__:main\",\n            ]\n        },\n        # ...\n    )\n    ```\n\n## 8. Make\n\n*Átmeneti megoldás, amíg nincs rendes automatizálás.*\n\n`make clean`: A build-elés során keletkezett könyvtárak törlése (`buld/`,\n`dist/`, `*.egg-info/`).\n\n`make test`: Tesztek futtatása.\n\n`make build`: Build-elés.\n\n`make release_major`: *Major* verziószám váltás, új release a GitHub-on és a\nPyPI-n.\n\n`make release_minor`: *Minor* verziószám váltás, új release a GitHub-on és a\nPyPI-n.\n\n`make release_patch`: *Patch* verziószám váltás, új release a GitHub-on és a\nPyPI-n.\n\n\n## TODO\n\n- [x] Tartalom\n- [x] Bevezetés: modul, csomag, pypi\n- [x] Könyvtárszerkezet\n- [x] Környezet\n- [x] Tesztelés\n- [ ] Dokumentáció\n- [x] A `setup.py` fájl\n- [x] A `MANIFEST.in` fájl\n- [x] `__main__.py`, CLI\n- [x] `__init__.py`, API\n- [x] Verziózás\n- [x] Csomagolás\n- [x] Közzététel\n- [ ] Automatizálás\n- [x] Telepítés\n  - [x] lokálisan\n  - [x] pypi\n- [x] make\n- [ ] függőség buildelése a setup.py használatával???\n- [ ] függőség letöltése telepítéskor???\n\n## Irodalom\n\n- PyPA gyorstalpalója: <https://packaging.python.org/tutorials/packaging-projects/>\n- PyPA útmutatói egyes témákhoz: <https://packaging.python.org/guides/>\n- *Real Python* tutorial: <https://realpython.com/pypi-publish-python-package/>\n- *setuptools* dokumentáció: <https://setuptools.readthedocs.io/en/latest/>\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mittelholcz/hellopypa",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "hellopypa",
    "package_url": "https://pypi.org/project/hellopypa/",
    "platform": "",
    "project_url": "https://pypi.org/project/hellopypa/",
    "project_urls": {
      "Homepage": "https://github.com/mittelholcz/hellopypa"
    },
    "release_url": "https://pypi.org/project/hellopypa/0.0.11/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A sample Python package",
    "version": "0.0.11",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6733174,
  "releases": {
    "0.0.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "23704699cba09928076c53a30f7e8a309c04f7f9cb60fc3142c32ecff115cb05",
          "md5": "63621b18487c3a290d3c10d87f0a12ff",
          "sha256": "7ce96e170bc71ff2d3da394a49f1e8ed88a156e6851465941b3c362c7becee28"
        },
        "downloads": -1,
        "filename": "hellopypa-0.0.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "63621b18487c3a290d3c10d87f0a12ff",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 9084,
        "upload_time": "2020-02-26T14:54:48",
        "upload_time_iso_8601": "2020-02-26T14:54:48.878434Z",
        "url": "https://files.pythonhosted.org/packages/23/70/4699cba09928076c53a30f7e8a309c04f7f9cb60fc3142c32ecff115cb05/hellopypa-0.0.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0b86db3f87f07177adb04ef3b89c003f833008f9bb784b4207411062deaacc34",
          "md5": "02735c22b725a9c7a764940ac4b26728",
          "sha256": "4028c295acf104890e7e3acd0dabade45394cc1ccb422de0ff492755281ba6c2"
        },
        "downloads": -1,
        "filename": "hellopypa-0.0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "02735c22b725a9c7a764940ac4b26728",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9774,
        "upload_time": "2020-02-26T14:54:51",
        "upload_time_iso_8601": "2020-02-26T14:54:51.577050Z",
        "url": "https://files.pythonhosted.org/packages/0b/86/db3f87f07177adb04ef3b89c003f833008f9bb784b4207411062deaacc34/hellopypa-0.0.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a3a39b15ff6eac829ccbcdf563ed5d0fcf0f881573d9ff3d9056397a16026731",
          "md5": "ddd64afd584e28816ae88500e9367398",
          "sha256": "93ea1120cc0ab40eb1c0dc11d76eb80e2f5389f2ed601a27340ff26bccd6caca"
        },
        "downloads": -1,
        "filename": "hellopypa-0.0.11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ddd64afd584e28816ae88500e9367398",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 9249,
        "upload_time": "2020-03-02T13:12:29",
        "upload_time_iso_8601": "2020-03-02T13:12:29.335934Z",
        "url": "https://files.pythonhosted.org/packages/a3/a3/9b15ff6eac829ccbcdf563ed5d0fcf0f881573d9ff3d9056397a16026731/hellopypa-0.0.11-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "232f1328fde7d57c2db21c12ce6f215c5c338933352719e522464735eff7e197",
          "md5": "389d94f616d39d60590be94f3e0a9344",
          "sha256": "a9e3b9af4af51c84b47438acc71cc9efed634782a6992dd61d22b4a89e6ae9ad"
        },
        "downloads": -1,
        "filename": "hellopypa-0.0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "389d94f616d39d60590be94f3e0a9344",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10052,
        "upload_time": "2020-03-02T13:12:31",
        "upload_time_iso_8601": "2020-03-02T13:12:31.297523Z",
        "url": "https://files.pythonhosted.org/packages/23/2f/1328fde7d57c2db21c12ce6f215c5c338933352719e522464735eff7e197/hellopypa-0.0.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a3a39b15ff6eac829ccbcdf563ed5d0fcf0f881573d9ff3d9056397a16026731",
        "md5": "ddd64afd584e28816ae88500e9367398",
        "sha256": "93ea1120cc0ab40eb1c0dc11d76eb80e2f5389f2ed601a27340ff26bccd6caca"
      },
      "downloads": -1,
      "filename": "hellopypa-0.0.11-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ddd64afd584e28816ae88500e9367398",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 9249,
      "upload_time": "2020-03-02T13:12:29",
      "upload_time_iso_8601": "2020-03-02T13:12:29.335934Z",
      "url": "https://files.pythonhosted.org/packages/a3/a3/9b15ff6eac829ccbcdf563ed5d0fcf0f881573d9ff3d9056397a16026731/hellopypa-0.0.11-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "232f1328fde7d57c2db21c12ce6f215c5c338933352719e522464735eff7e197",
        "md5": "389d94f616d39d60590be94f3e0a9344",
        "sha256": "a9e3b9af4af51c84b47438acc71cc9efed634782a6992dd61d22b4a89e6ae9ad"
      },
      "downloads": -1,
      "filename": "hellopypa-0.0.11.tar.gz",
      "has_sig": false,
      "md5_digest": "389d94f616d39d60590be94f3e0a9344",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 10052,
      "upload_time": "2020-03-02T13:12:31",
      "upload_time_iso_8601": "2020-03-02T13:12:31.297523Z",
      "url": "https://files.pythonhosted.org/packages/23/2f/1328fde7d57c2db21c12ce6f215c5c338933352719e522464735eff7e197/hellopypa-0.0.11.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}