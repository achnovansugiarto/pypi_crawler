{
  "info": {
    "author": "王文皓(wangwenhao)",
    "author_email": "DATA-OG@139.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# freqCut\n一个等频分割数列的包，通过最小化每组的实际频数与每组期望频数的残差平方和来寻找一组最优的离散组合分割方法\n# 安装\npip install freqCut\n\n# 功能\n1.支持左闭右开  \n2.最后一组为右闭  \n3.通过最小化每组的频数与期望频数的残差平方和来寻找一组最优的分割点。这组分割点是一个全局最优的解析解  \n4.因为是全局最优的解析解，所以对集中的数据也给出了一组最优的分割点  \n5.用已有的分割点切割另一组数列时，当数列的最大或最小值超出了分割点的最大或最小边界时，可以自动扩展分割点最大和最小值。这使得数列的最大或最小值能够包含在分割的最大组或最小组内    \n6.支持带有权重的数列  \nNews in 0.2.3  \n7.支持将指定的特殊值进行单独分组。如果空值没有被指定在特殊值里，则空值单独为一组  \nNews in 1.1\n8.提供了一个对label按数值排序的函数，可供传入apply中进行排序  \n\n# 示例\n```\nfrom freqCut.cutter import freq_cut,cut_by_bins,freq_cut_array,sort_label\nimport numpy as np\nimport pandas as pd\n\nif __name__=='__main__':\n    weight = None\n    threshold_distr=0.2\n    min_distr = 0.1\n    \n    #计算分段\n    data1 = [4,2,6,np.nan,2,2,None,3,4,10,3,7,1,1,10,5,4,7,7,8,10,8,8,9,10,10]\n    bins = freq_cut(data1,threshold_distr,min_distr,weight)\n    print('bins:\\n',bins,'\\n\\n')\n    \n    #按照分段对数量列进行转换\n    label_bin1 = cut_by_bins(data1,bins)\n    print('label_bin1:\\n',label_bin1,'\\n\\n')\n    \n    #使用上面的bins，最小值由1变为-1，最大值由10变为11\n    data2 = pd.Series([4,2,11,np.nan,-1,2,None,3,4,10,3,7,1,1,11,5,4,7,7,8,-1,2,8,9,10,10])\n    #返回的分组label自动扩展了最大和最小值，第一组变为[-1.0,3)，最后一组变为[10,11.0]\n    label_bin2 = cut_by_bins(data2,bins)\n    #cut_by_bins依据传入数据的类型，可以返回pd.Series,list,tuple（与传入数据类型保持一致）\n    print('label_bin2:\\n',label_bin2,'\\n\\n')\n    #bins已经被更新，扩展了第一组和最后一组的边界值\n    print('updated bins:\\n',bins,'\\n\\n')\n       \n    \n    #将多个数列进行分组。分段按照cutby来计算\n    label_bins,bins = freq_cut_array([data1,data2],threshold_distr,min_distr,cutby=0,weight=weight)\n    #对比上面的label，可以看到在freq_cut_array中，\n    #即使有的数列的最大或最小值没有超出cutby数列所产生的分段，\n    #但是由于其他数列的最大值或最小值超出分段所对应的最大或最小值，所以该数列也会被自动扩展。\n    #这样是为了组内分段统一（对齐）\n    print('label_bins1:\\n',label_bins[0],'\\n\\n')\n    print('label_bins2:\\n',label_bins[1],'\\n\\n')\n    \n    #cutby也可以是一个bins\n    bins = freq_cut(data1,threshold_distr,min_distr,weight)\n    label_bins,bins = freq_cut_array([data1,data2],threshold_distr,min_distr,cutby=bins,weight=weight)\n    print('label_bins1:\\n',label_bins[0],'\\n\\n')\n    print('label_bins2:\\n',label_bins[1],'\\n\\n')\n\n    #加入特殊值功能\n    data3 = [4,2,6,np.nan,2,2,None,3,4,10,3,7,1,1,10,5,4,7,-999,8,10,-888,8,9,-1000,10]\n    spec1 = [{-999,-888},{-1000}]\n    spec_bins1 = freq_cut(data3,threshold_distr,min_distr,weight,spec1)\n    label_spec1 = cut_by_bins(data3,spec_bins1)\n    print('spec_bins1:\\n',spec_bins1,'\\n\\n')\n    print('label_spec1:\\n',label_spec1,'\\n\\n')\n    \n    spec2 = [{-999,-888},{-1000,None}]\n    label_spec2,spec_bins2 = freq_cut_array([data2,data3],threshold_distr,min_distr,cutby=1,weight=weight,spec_value=spec2)    \n    print('spec_bins2:\\n',spec_bins2,'\\n\\n')\n    print('label_spec2:\\n',label_spec2[0],'\\n\\n')\n    print('label_spec3:\\n',label_spec2[1],'\\n\\n')\n    \n    #加入一个对label的排序函数，方便使用\n    data = pd.Series([4,2,6,np.nan,2,2,None,3,4,10,3,7,1,1,10,5,4,7,-999,8,10,-888,8,11,-1000,10])\n    spec = [{-999,-888},{-1000}]\n    spec_bins = freq_cut(data,threshold_distr,min_distr,weight,spec)\n    label_spec = cut_by_bins(data,spec_bins)\n    #sort是按照字符排序的\n    print('label_spec_dis:\\n',label_spec.value_counts().sort_index(),'\\n\\n')\n    #提供了一个对label按照数值排序的函数\n    dis= label_spec.value_counts()\n    dis = dis[sorted(dis.index,key=sort_label)]\n    print('label_spec_dis:\\n',dis,'\\n\\n')\n\n\n```\n\n# API\n## value_counts_weight(data,weight=None)  \n类似pandas中的value_counts，但可以支持权重  \ndata:需要被等频分组的数列.array_like  \nweight:data中每个数据的权重，如果权重相等则为None，默认为None。array_like  \nreturn  \ndata每个取值的数量。pd.Series  \ndata每个取值的占比。pd.Series  \n\n## freq_cut(data,threshold_distr,min_distr,weight=None,spec_value=None)  \n等频分割，给出一组全局最优的分割点\ndata:需要被等频分组的数列.array_like  \nthreshold_distr:当小于1时，每个组期望的占比。当大于1时，分成多少组  \nmin_distr:由于数据可能偏斜或集中，所以无法严格遵守threshold_distr，此时你所能接受的最小的分组占比  \nweight:与data对应的权重。array_like  \nspec_value:指定的特殊值的分组。例如：({-9999,-9998},{-8888,None},{-1000})。如果None没有出现在任何一个特殊值组中，则空值单成一组  \nreturn  \nbins:分组信息。例如 ['[1,3)', '[3,5)', '[5,8)', '[8,10)', '[10,10]']。有特殊值的示例：['[-1.0,3.0)', '[3.0,6.0)', '[6.0,9.0)', '[9.0,11.0]', '{-888, -999}', '{-1000, None}'。 list  \n\n## cut_by_bins(data,bins)  \n按照指定的bins来对data进行分割，如果data中去除特殊值后的最大或最小值超出bins的最大或最小的边界值，则自动扩展bins的边界值，使得超出的数值能够被划分进最大或最小的一组  \ndata:需要被分组的数列.array_like  \nbins:分组信息。例如 ['[1,3)', '[3,5)', '[5,8)', '[8,10)', '[10,10]']。list  \nreturn  \ndata对应的label。返回类型与data保持一致  \n\n## freq_cut_array(datas,threshold_distr,min_distr,cutby=0,weight=None,spec_value=None)\n将一组数列进行统一的分割，负责计算分割点的数列由cutby来指定。如果通过cutby数列得到bins后，让datas中的每个数列单独调用cut_by_bins，由于bins会被自动扩展边界值，所以不能保持datas中数列的分组label的一致性（不一致来自最大组和最小组）。freq_cut_array能够让datas中的所有分组保持一致  \ndatas:需要被等频分组的多个数列。  \nthreshold_distr:当小于1时，每个组期望的占比。当大于1时，分成多少组  \nmin_distr:由于数据可能偏斜或集中，所以无法严格遵守threshold_distr，此时你所能接受的最小的分组占比  \ncutby:datas中被用来计算分段的数列的序号。也可以是一个直接是bins。  \nweight:与data对应的权重。array_like   \nspec_value：指定的特殊值的分组。例如：({-9999,-9998},{-8888,None},{-1000})。如果None没有出现在任何一个特殊值组中，则空值单成一组  \nreturn  \ndatas中的每个数列对应的label，label的类型同datas[i]  \nbins  \n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/wangwenhao-DATA-OG/freqCut",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "freqCut",
    "package_url": "https://pypi.org/project/freqCut/",
    "platform": null,
    "project_url": "https://pypi.org/project/freqCut/",
    "project_urls": {
      "Homepage": "https://github.com/wangwenhao-DATA-OG/freqCut"
    },
    "release_url": "https://pypi.org/project/freqCut/1.2/",
    "requires_dist": [
      "DagLpDp (>=0.1.1)"
    ],
    "requires_python": ">=3.0",
    "summary": "全局最优的等频分组包，通过最小化每组占比与指定占比的残差最小平方和来实现",
    "version": "1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16413585,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b7853947dbfc2c557223528c75d3a276b2b09551e3c53c0641194bd2d5890866",
          "md5": "60b2e9e0ba4e0d077c1386f1691f3810",
          "sha256": "9ca621e128df0b556434678b2e954cdcd2c9e3d8540f3de927b8df5274c494ef"
        },
        "downloads": -1,
        "filename": "freqCut-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "60b2e9e0ba4e0d077c1386f1691f3810",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.0",
        "size": 8302,
        "upload_time": "2022-06-23T08:01:25",
        "upload_time_iso_8601": "2022-06-23T08:01:25.298781Z",
        "url": "https://files.pythonhosted.org/packages/b7/85/3947dbfc2c557223528c75d3a276b2b09551e3c53c0641194bd2d5890866/freqCut-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a5d2dd39b077718fc948bdff136dc9f97c9052d2eb88d1aaef00f3ec90ebb331",
          "md5": "3db05719dcee1c7d13106358a70fdcfd",
          "sha256": "259f8671a4dc69b104d37c5f2af8682312033248d56977008615991fff4b1b0c"
        },
        "downloads": -1,
        "filename": "freqCut-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3db05719dcee1c7d13106358a70fdcfd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.0",
        "size": 4150,
        "upload_time": "2022-06-24T06:28:44",
        "upload_time_iso_8601": "2022-06-24T06:28:44.680219Z",
        "url": "https://files.pythonhosted.org/packages/a5/d2/dd39b077718fc948bdff136dc9f97c9052d2eb88d1aaef00f3ec90ebb331/freqCut-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dbf2eb1244c4c6a0affd84ff8e0b6ef787cf8c49ad1c40d4f7b702e56646dd05",
          "md5": "00967c6c6862fce2bf427f374b571f0d",
          "sha256": "f153078791cd2a93dfee2cee0f709a6dcf8b6342f33b69e315f689eb16aae40c"
        },
        "downloads": -1,
        "filename": "freqCut-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "00967c6c6862fce2bf427f374b571f0d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.0",
        "size": 4804,
        "upload_time": "2022-08-15T08:56:18",
        "upload_time_iso_8601": "2022-08-15T08:56:18.936080Z",
        "url": "https://files.pythonhosted.org/packages/db/f2/eb1244c4c6a0affd84ff8e0b6ef787cf8c49ad1c40d4f7b702e56646dd05/freqCut-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9c62923e5ad515a0d6dd6d8a8ba6276c03f3aaf92540d82d21acb3f355fa271b",
          "md5": "806552903916453f0e845f47e29257aa",
          "sha256": "19f313caeb655fb5a53c0139ee2257d090c6caf8d8adbaf271b42ae8d016a1d7"
        },
        "downloads": -1,
        "filename": "freqCut-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "806552903916453f0e845f47e29257aa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.0",
        "size": 4831,
        "upload_time": "2022-09-19T09:16:44",
        "upload_time_iso_8601": "2022-09-19T09:16:44.264102Z",
        "url": "https://files.pythonhosted.org/packages/9c/62/923e5ad515a0d6dd6d8a8ba6276c03f3aaf92540d82d21acb3f355fa271b/freqCut-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "60104bb2fc6d4c76ce6d6e43b7e15d157afa246b31028c0fcc23186cf8246bd8",
          "md5": "d47ff474b2612cc6ca973cb65f928101",
          "sha256": "b311789493cce53ddb5f5a5049837d525535d7b52703794257c0354d1fa29b8e"
        },
        "downloads": -1,
        "filename": "freqCut-0.2.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d47ff474b2612cc6ca973cb65f928101",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.0",
        "size": 5949,
        "upload_time": "2022-12-10T01:15:47",
        "upload_time_iso_8601": "2022-12-10T01:15:47.990436Z",
        "url": "https://files.pythonhosted.org/packages/60/10/4bb2fc6d4c76ce6d6e43b7e15d157afa246b31028c0fcc23186cf8246bd8/freqCut-0.2.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eced0b2cd36ef9895572ff6578ddfa2496a4b71b67f559e0c65a3a1a6d1bc510",
          "md5": "b978b3c7617d62b00b55c970b5aaafaa",
          "sha256": "5e7f482170487eefd312f415db2cde8dc39c6653358b2cadfe7aa7491f555b73"
        },
        "downloads": -1,
        "filename": "freqCut-0.2.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b978b3c7617d62b00b55c970b5aaafaa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.0",
        "size": 5963,
        "upload_time": "2022-12-16T09:12:19",
        "upload_time_iso_8601": "2022-12-16T09:12:19.112556Z",
        "url": "https://files.pythonhosted.org/packages/ec/ed/0b2cd36ef9895572ff6578ddfa2496a4b71b67f559e0c65a3a1a6d1bc510/freqCut-0.2.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "16968cdf75a2811afb9ad4696ad64bef0ba76d32fe932cd5a8ff876fcd6b1627",
          "md5": "296d67ae8452f6eedec9c0b40b02f4c8",
          "sha256": "2948c8701c718371b790c956b8917cd11de0789dd5b8f9ff89abefdaa1045987"
        },
        "downloads": -1,
        "filename": "freqCut-1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "296d67ae8452f6eedec9c0b40b02f4c8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.0",
        "size": 6277,
        "upload_time": "2023-01-11T06:18:57",
        "upload_time_iso_8601": "2023-01-11T06:18:57.791984Z",
        "url": "https://files.pythonhosted.org/packages/16/96/8cdf75a2811afb9ad4696ad64bef0ba76d32fe932cd5a8ff876fcd6b1627/freqCut-1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "10deaf45a492daa122e5d475ab0a817d9f6e667d4824d9f67749c6ca18299890",
          "md5": "76c70e2f6f060465d6896258068febb8",
          "sha256": "37536cd4bdfeb164d147e2b4b92bb876880f7a19b00d7b81885d2d33628ed7cb"
        },
        "downloads": -1,
        "filename": "freqCut-1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "76c70e2f6f060465d6896258068febb8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.0",
        "size": 6277,
        "upload_time": "2023-01-13T03:34:56",
        "upload_time_iso_8601": "2023-01-13T03:34:56.733548Z",
        "url": "https://files.pythonhosted.org/packages/10/de/af45a492daa122e5d475ab0a817d9f6e667d4824d9f67749c6ca18299890/freqCut-1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "10deaf45a492daa122e5d475ab0a817d9f6e667d4824d9f67749c6ca18299890",
        "md5": "76c70e2f6f060465d6896258068febb8",
        "sha256": "37536cd4bdfeb164d147e2b4b92bb876880f7a19b00d7b81885d2d33628ed7cb"
      },
      "downloads": -1,
      "filename": "freqCut-1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "76c70e2f6f060465d6896258068febb8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.0",
      "size": 6277,
      "upload_time": "2023-01-13T03:34:56",
      "upload_time_iso_8601": "2023-01-13T03:34:56.733548Z",
      "url": "https://files.pythonhosted.org/packages/10/de/af45a492daa122e5d475ab0a817d9f6e667d4824d9f67749c6ca18299890/freqCut-1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}