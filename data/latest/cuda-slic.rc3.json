{
  "info": {
    "author": "Omar Elamin",
    "author_email": "omar.elamin@diamond.ac.uk",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# cuda-slic: A CUDA implementation of the SLIC Superpixel algorithm\n\n## SLIC\nSLIC stands for __simple linear iterative clustering__. SLIC uses\ntiled k-means clustering to segment an input image into a set\nof superpixels/supervoxels.\n\nThis library was designed to segment large 2D/3D images coming from different\ndetectors at the [Diamond Light Source](https://diamond.ac.uk). These images\ncan be very large so using a serial CPU code is out of the question.\n\nTo speed up processing we use GPU acceleration to achieve great speed\nimprovements over alternative implementations. `cuda-slic` borrows its API\nfrom `skimage.segmentation.slic`.\n###### Benchmark\n__Machine__: 8 Core Intel Xeon(R) W-2123 CPU @ 3.60GHz with NVIDIA Quadro P2000\n```python\nfrom skimage import data\nfrom cuda_slic.slic import slic as cuda_slic\nfrom skimage.segmentation import slic as skimage_slic\n\nblob = data.binary_blobs(length=500, n_dim=3, seed=2)\nn_segments = 500**3/5**3 # super pixel shape = (5,5,5)\n\n%timeit -r1 -n1 skimage_slic(blob, n_segments=n_segments, multichannel=False, max_iter=5)\n# 2min 28s ± 0 ns per loop (mean ± std. dev. of 1 run, 1 loop each)\n\n%timeit -r1 -n1 cuda_slic(blob, n_segments=n_segments, multichannel=False, max_iter=5)\n# 13.1 s ± 0 ns per loop (mean ± std. dev. of 1 run, 1 loop each)\n```\n## CUDA JIT Compilation\n`cuda-slic` uses JIT compilation to covert CUDA kernels into GPU machine-code (PTX).\nTwo options are available for JIT compiliing CUDA code with python: Cupy or PyCUDA.\nIf PyCUDA is installed in the virtutalenv it is used by default. Otherwise Cupy is\nused.\n\nTo ease distribution `cuda-slic` is packaged into two independent packages that share\nthe same source-code but depend on a different libraries for JIT compilation:\n1. `cuda-slic` uses pycuda for JIT compilation.\n2. `gpu-slic` uses cupy for JIT compilation.\n\n## Installing cuda-slic (with PyCUDA)\n```bash\npip install cuda-slic\n```\n`cuda-slic` uses pycuda which has the following non-python\nbuild dependencies:\n1. gcc and g++/gcc-c++ on Linux. MSVC++ compiler and C++ build-tools on Windows.\n2. the cudatoolkit for linking with `cuda.h`.\n\nand the following runtime dependencies:\n1. gcc and g++/gcc-c++ on Linux. MSVC++ compiler and C++ build-tools on Windows.\n2. the cudatoolkit for linking with cuda libraries.\n3. the nvcc compiler. Ships with newer cudatoolkit versions.\n\nSee the [pycuda docs](https://wiki.tiker.net/PyCuda/Installation/) for \ninstallation instructions.\n\n## Installing gpu-slic (with Cupy)\n```bash\npip install gpu-slic\n```\n`gpu-slic` uses Cupy which has the following non-python\nbuild dependencies:\n1. gcc and g++/gcc-c++ on Linux.\n2. the cudatoolkit for linking with cuda libraries.\n3. the nvcc compiler. Ships with newer cudatoolkit versions.\n\nNote that when pip installing gpu-slic, cupy is installed as an `sdist`\nmeaning that your host must meet the compiling and linking requirements\nof cupy.\n\nCheck if gpu-slic is available on conda-forge to get\nprecompiled binaries of Cupy.\n\nSee also [cupy docs](https://docs.cupy.dev/en/stable/install.html) for \ninstallation instructions.\n\n## Usage\n```python\nfrom cuda_slic import slic\nfrom skimage import data\n\n# 2D RGB image\nimg = data.astronaut() \nlabels = slic(img, n_segments=100, compactness=10)\n\n# 3D gray scale\nvol = data.binary_blobs(length=50, n_dim=3, seed=2)\nlabels = slic(vol, n_segments=100, multichannel=False, compactness=0.1)\n\n# 3D multi-channel\n# volume with dimentions (z, y, x, c)\n# or video with dimentions (t, y, x, c)\nvol = data.binary_blobs(length=33, n_dim=4, seed=2)\nlabels = slic(vol, n_segments=100, multichannel=True, compactness=1)\n```\n\n# Development\n##### Prerequisites:\n1. gcc and g++/gcc-c++ installed and available on PATH.\n2. cudatoolkit installed and CUDA_HOME pointing to its location.\n3. `nvcc` compiler. Ships with recent versions of cudatoolkit.\n\n## Dependency Management\n\nWe use `conda` as a dependency installer and virtual env manager.\nA development environment can be created with\n```bash\nconda env create -f environment.yml\n```\nnow you can activate the virtual env with `conda activate cuda-slic`,\nand deactivate with `conda deactivate`.\nTo add a dependency, add it to the [environment.yml](environment.yml) file, then you can run\n```bash\nconda env update -f environment.yml\n```\nto keep `environment.yml` file as lean as possible, development dependencies\nare kept in `requirements_dev.txt` and can be installed with\n```bash\nconda install --file requirements_dev.txt -c conda-forge\n```\nor\n```bash\npip install -r requirements_dev.txt\n```\n\n## Tests\nIn the [notebooks](notebooks) folder there are Jupyter notebooks\nwhere the segmentation algorithm can be visually inspected.\n\nOur unit-testing framework of choice is [Py.test](https://docs.pytest.org/en/latest/).\nThe unit-tests can be run with\n```bash\nconda activate cuda-slic\npip install pytest\npytest\n```\nor\n```bash\nconda activate cuda-slic\npip install tox\ntox\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.stfc.ac.uk/RosalindFranklinInstitute/cuda-slic",
    "keywords": "segmentation fast cuda slic clustering kmeans",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cuda-slic",
    "package_url": "https://pypi.org/project/cuda-slic/",
    "platform": "",
    "project_url": "https://pypi.org/project/cuda-slic/",
    "project_urls": {
      "Homepage": "https://gitlab.stfc.ac.uk/RosalindFranklinInstitute/cuda-slic"
    },
    "release_url": "https://pypi.org/project/cuda-slic/0.0.1a3/",
    "requires_dist": [
      "numpy",
      "jinja2",
      "scikit-image",
      "pycuda (>=2019.1.2)"
    ],
    "requires_python": ">=3.6",
    "summary": "CUDA implementation of the SLIC segmentaion algorithm.",
    "version": "0.0.1a3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8163127,
  "releases": {
    "0.0.1a1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e5cdb7eb21098f508b8d66e72b7e45c95c6cb0a5df464383d5ea08e7eec9230",
          "md5": "f92406dde6d9bea799025ed24ab3ae03",
          "sha256": "a810fbb6ebaab457ce4481257128b59fdbcac33f6226405a02c97475f66e0061"
        },
        "downloads": -1,
        "filename": "cuda_slic-0.0.1a1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f92406dde6d9bea799025ed24ab3ae03",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.5",
        "size": 23545,
        "upload_time": "2020-08-24T18:22:54",
        "upload_time_iso_8601": "2020-08-24T18:22:54.510778Z",
        "url": "https://files.pythonhosted.org/packages/7e/5c/db7eb21098f508b8d66e72b7e45c95c6cb0a5df464383d5ea08e7eec9230/cuda_slic-0.0.1a1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6fcb56de9bb9c66db4307923d92defe65c063028961de299c7a2af87d0f2dba8",
          "md5": "333b03ac6704a7d34fde039e91e932da",
          "sha256": "8d66897baa5e2a81ff7d8bf9b3f93f3c77d1ee6ea1258c92683e9037df5bbca8"
        },
        "downloads": -1,
        "filename": "cuda_slic-0.0.1a1.tar.gz",
        "has_sig": false,
        "md5_digest": "333b03ac6704a7d34fde039e91e932da",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 21199,
        "upload_time": "2020-08-24T18:22:57",
        "upload_time_iso_8601": "2020-08-24T18:22:57.004359Z",
        "url": "https://files.pythonhosted.org/packages/6f/cb/56de9bb9c66db4307923d92defe65c063028961de299c7a2af87d0f2dba8/cuda_slic-0.0.1a1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1a2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "62cda51b06c08d5c02f385bc4fcdbf57f7a737883f41f90dba37e276f9716b55",
          "md5": "168d29fc4db86774da214f49b456562b",
          "sha256": "89be864a8f60d0ec22baab975e92d01bf55accdefb76fc5683a6945aa89a1526"
        },
        "downloads": -1,
        "filename": "cuda_slic-0.0.1a2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "168d29fc4db86774da214f49b456562b",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.5",
        "size": 23544,
        "upload_time": "2020-08-25T11:53:54",
        "upload_time_iso_8601": "2020-08-25T11:53:54.405427Z",
        "url": "https://files.pythonhosted.org/packages/62/cd/a51b06c08d5c02f385bc4fcdbf57f7a737883f41f90dba37e276f9716b55/cuda_slic-0.0.1a2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c1378473a3741a6fd4c93fce23c8518a77accd17102c727314feddb9a459b2e5",
          "md5": "798a95d4f82e74e7de24fa4d72484d8d",
          "sha256": "2299593bc29a24cb3c33630d659f602cb2a65cad303aace892a779728a6c0c7f"
        },
        "downloads": -1,
        "filename": "cuda_slic-0.0.1a2.tar.gz",
        "has_sig": false,
        "md5_digest": "798a95d4f82e74e7de24fa4d72484d8d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 21199,
        "upload_time": "2020-08-25T11:53:55",
        "upload_time_iso_8601": "2020-08-25T11:53:55.646273Z",
        "url": "https://files.pythonhosted.org/packages/c1/37/8473a3741a6fd4c93fce23c8518a77accd17102c727314feddb9a459b2e5/cuda_slic-0.0.1a2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1a3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "75d6bee5b75ec4c7ebb15b21de0dfd0367f41ac845d5935aea58a265df1e1a14",
          "md5": "59e83c0e5e9da35b4779bc104705d0e0",
          "sha256": "07406fa565619b4bad89b637bd85f7aebba183ff0087b4542c532b2d536effe8"
        },
        "downloads": -1,
        "filename": "cuda_slic-0.0.1a3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "59e83c0e5e9da35b4779bc104705d0e0",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 10333,
        "upload_time": "2020-09-11T09:07:07",
        "upload_time_iso_8601": "2020-09-11T09:07:07.282780Z",
        "url": "https://files.pythonhosted.org/packages/75/d6/bee5b75ec4c7ebb15b21de0dfd0367f41ac845d5935aea58a265df1e1a14/cuda_slic-0.0.1a3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "448613060b4efc75720d6e5f63ce234f6e5ccc279e8d53c37034d0674e01105d",
          "md5": "bc0b71510913fe761069c11b2540d656",
          "sha256": "937134e1bdb62ad724efa1f7df97ac33e39ab752dcc844e6e587278f5083f640"
        },
        "downloads": -1,
        "filename": "cuda_slic-0.0.1a3.tar.gz",
        "has_sig": false,
        "md5_digest": "bc0b71510913fe761069c11b2540d656",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11600,
        "upload_time": "2020-09-11T09:07:08",
        "upload_time_iso_8601": "2020-09-11T09:07:08.846784Z",
        "url": "https://files.pythonhosted.org/packages/44/86/13060b4efc75720d6e5f63ce234f6e5ccc279e8d53c37034d0674e01105d/cuda_slic-0.0.1a3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "75d6bee5b75ec4c7ebb15b21de0dfd0367f41ac845d5935aea58a265df1e1a14",
        "md5": "59e83c0e5e9da35b4779bc104705d0e0",
        "sha256": "07406fa565619b4bad89b637bd85f7aebba183ff0087b4542c532b2d536effe8"
      },
      "downloads": -1,
      "filename": "cuda_slic-0.0.1a3-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "59e83c0e5e9da35b4779bc104705d0e0",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.6",
      "size": 10333,
      "upload_time": "2020-09-11T09:07:07",
      "upload_time_iso_8601": "2020-09-11T09:07:07.282780Z",
      "url": "https://files.pythonhosted.org/packages/75/d6/bee5b75ec4c7ebb15b21de0dfd0367f41ac845d5935aea58a265df1e1a14/cuda_slic-0.0.1a3-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "448613060b4efc75720d6e5f63ce234f6e5ccc279e8d53c37034d0674e01105d",
        "md5": "bc0b71510913fe761069c11b2540d656",
        "sha256": "937134e1bdb62ad724efa1f7df97ac33e39ab752dcc844e6e587278f5083f640"
      },
      "downloads": -1,
      "filename": "cuda_slic-0.0.1a3.tar.gz",
      "has_sig": false,
      "md5_digest": "bc0b71510913fe761069c11b2540d656",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 11600,
      "upload_time": "2020-09-11T09:07:08",
      "upload_time_iso_8601": "2020-09-11T09:07:08.846784Z",
      "url": "https://files.pythonhosted.org/packages/44/86/13060b4efc75720d6e5f63ce234f6e5ccc279e8d53c37034d0674e01105d/cuda_slic-0.0.1a3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}