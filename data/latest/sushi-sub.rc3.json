{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Multimedia :: Sound/Audio",
      "Topic :: Text Processing"
    ],
    "description": "## Sushi\nAutomatic shifter for SRT and ASS subtitle based on audio streams.\n\n*Python 3 fork of https://github.com/tp7/Sushi.*\n\n### Purpose\nImagine you've got a subtitle file synced to one video file, but you want to use these subtitles with some other video you've got via totally legal means. The common example is TV vs. BD releases, PAL vs. NTSC video and releases in different countries. In a lot of cases, subtitles won't match right away and you need to sync them.\n\nThe purpose of this script is to avoid all the hassle of manual syncing. It attempts to synchronize subtitles by finding similarities in audio streams. The script is very fast and can be used right when you want to watch something.\n\n<!-- ### Downloads\nThe latest Windows binary release can always be found in the [releases][1] section. You need the 7z archive in the top entry. -->\n\n### How it works\nYou need to provide two audio files and a subtitle file that matches one of those files. For every line of the subtitles, the script will extract corresponding audio from the source audio stream and will try to find the closest similar pattern in the destination audio stream, obtaining a shift value which is later applied to the subtitles.\n\nDetailed explanation of Sushi workflow and description of command-line arguments can be found in the [wiki][2].\n\n### Usage\nThe minimal command line looks like this:\n```\npython sushi.py --src hdtv.wav --dst bluray.wav --script subs.ass\n```\nOutput file name is optional - `\"{destination_path}.sushi.{subtitles_format}\"` is used by default. See the [usage][3] page of the wiki for further examples.\n\nDo note that WAV is not the only format Sushi can work with. It can process audio/video files directly and decode various audio formats, provided that ffmpeg is available. For additional info refer to the [Demuxing][4] part of the wiki.\n\n### Requirements\nSushi should work on Windows, Linux and OS X. Please open an issue if it doesn't. To run it, you have to have the following installed:\n\n1. [Python 3.5 or higher][5]\n2. [NumPy][6] (1.8 or newer)\n3. [OpenCV 2.4.x or newer][7]\n\nOptionally, you might want:\n\n1. [FFmpeg][9] for any kind of demuxing\n2. [MkvExtract][10] for faster timecodes extraction when demuxing\n3. [SCXvid-standalone][11] if you want Sushi to make keyframes\n4. [Colorama](https://github.com/tartley/colorama) to add colors to console output on Windows\n\n#### Installation on Windows\n<!-- The provided Windows binaries include all required components and Colorama so you don't have to install them if you use the binary distribution. You still have to download other applications yourself if you want to use Sushi's demuxing capabilities. -->\nBecause the \"maintainer\" of this fork does not run Windows and is not interested in providing binaries, you are kind of on your own.\nThe following steps are untested (see requirements earlier):\n\n1. Install Python (64 bit).\n2. Install OpenCV.\n3. Run `pip install sushi-sub colorama` on a terminal.\n4. Use it as `sushi args…` on a terminal.\n\nIf anyone wants to provide proper installation steps or a binary for Windows, please open a PR or get in contact.\n\n#### Installation on Mac OS X\n\nNo binary packages are provided for OS X right now so you'll have to use the script form. Assuming you have Python 3, pip and [homebrew](http://brew.sh/) installed, run the following:\n```bash\nbrew tap homebrew/science\nbrew install git opencv\npip3 install numpy\n# install some optional dependencies\nbrew install ffmpeg mkvtoolnix\n# install sushi\npip3 install sushi-sub\n# use sushi\nsushi args…\n```\n\nIf you don't have pip, you can install numpy with homebrew, but that will probably add a few more dependencies.\nYou will also need to install sushi manually.\n```bash\nbrew tap homebrew/python\nbrew install numpy\n# fetch sushi\ngit clone https://github.com/FichteFoll/sushi\n# run from source\npython3 -m sushi args…\n# OR install globally (for your user)\npython3 setup.py install --user\nsushi args…\n```\n\n#### Installation on Linux\n\nIf you have apt-get available, the installation process is trivial.\n```bash\nsudo apt-get update\nsudo apt-get install git python3 python3-numpy python3-opencv\n\npip3 install --user sushi-sub\n# if ~/.local/bin is in your PATH\nsushi args…\n# otherwise\npython3 -m sushi args…\n```\n\nFor other distros, pick corresponding package names for the python, numpy, and opencv dependencies.\n\n### Limitations\nThis script will never be able to property handle frame-by-frame typesetting. If underlying video stream changes (e.g. has different telecine pattern), you might get incorrect output.\n\nThis script cannot improve bad timing. If original lines are mistimed, they will be mistimed in the output file too.\n\nIn short, while this might be safe for immediate viewing, you probably shouldn't use it to blindly shift subtitles for permanent storing.\n\n\n  <!-- [1]: https://github.com/tp7/Sushi/releases -->\n  [2]: https://github.com/tp7/Sushi/wiki\n  [3]: https://github.com/tp7/Sushi/wiki/Examples\n  [4]: https://github.com/tp7/Sushi/wiki/Demuxing\n  [5]: https://www.python.org/downloads/\n  [6]: http://www.scipy.org/scipylib/download.html\n  [7]: http://opencv.org/\n  [9]: http://www.ffmpeg.org/download.html\n  [10]: http://www.bunkus.org/videotools/mkvtoolnix/downloads.html\n  [11]: https://github.com/soyokaze/SCXvid-standalone/releases\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/FichteFoll/Sushi",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sushi-sub",
    "package_url": "https://pypi.org/project/sushi-sub/",
    "platform": null,
    "project_url": "https://pypi.org/project/sushi-sub/",
    "project_urls": {
      "Documentation": "https://github.com/tp7/Sushi/wiki",
      "Fork Origin": "https://github.com/tp7/Sushi",
      "Homepage": "https://github.com/FichteFoll/Sushi"
    },
    "release_url": "https://pypi.org/project/sushi-sub/0.6.2/",
    "requires_dist": [
      "numpy (>=1.8)"
    ],
    "requires_python": ">=3.5",
    "summary": "Automatic subtitle shifter based on audio",
    "version": "0.6.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14462035,
  "releases": {
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2cc54c7127ad56aa8b8a014026e409a27eeb99d03728d7ff7b9a66cf40532a3f",
          "md5": "68ade565787e58f517bd5903df1cc0e1",
          "sha256": "c5177fcf73ac2c678aa537b58b3dfdc9a65f0665a73bf51354d1cecfc0ef8f63"
        },
        "downloads": -1,
        "filename": "sushi_sub-0.6.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "68ade565787e58f517bd5903df1cc0e1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 26972,
        "upload_time": "2020-07-19T12:35:34",
        "upload_time_iso_8601": "2020-07-19T12:35:34.923705Z",
        "url": "https://files.pythonhosted.org/packages/2c/c5/4c7127ad56aa8b8a014026e409a27eeb99d03728d7ff7b9a66cf40532a3f/sushi_sub-0.6.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4459a63312b38bc494f651d6eb66f51cf39b2a3b5d3f459ff5b961b2d7006bf7",
          "md5": "60bcee27f4a6a5930472eec284a27469",
          "sha256": "8298d4a2f10c3f1a7e73bcc8104389ede74ecb692453ebc352b8f980a4eacc24"
        },
        "downloads": -1,
        "filename": "sushi-sub-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "60bcee27f4a6a5930472eec284a27469",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 26412,
        "upload_time": "2020-07-19T12:35:37",
        "upload_time_iso_8601": "2020-07-19T12:35:37.274306Z",
        "url": "https://files.pythonhosted.org/packages/44/59/a63312b38bc494f651d6eb66f51cf39b2a3b5d3f459ff5b961b2d7006bf7/sushi-sub-0.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "54a4db55aa4b77cb7dc90f0ec4368f724fff35d8c059a2a61983ceb8f7491164",
          "md5": "8e47e85a6a97e176fae02c3703df9952",
          "sha256": "704048c90f1d9a88cfd9bd7d01c9a34e0db3e9bcf62cd4976ce896146a259355"
        },
        "downloads": -1,
        "filename": "sushi_sub-0.6.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8e47e85a6a97e176fae02c3703df9952",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 26972,
        "upload_time": "2021-01-13T14:42:22",
        "upload_time_iso_8601": "2021-01-13T14:42:22.591123Z",
        "url": "https://files.pythonhosted.org/packages/54/a4/db55aa4b77cb7dc90f0ec4368f724fff35d8c059a2a61983ceb8f7491164/sushi_sub-0.6.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd241a715d375f51a3f63e318b59fbdcee45c37f9d513072f9efcb2bba1d228f",
          "md5": "a4bed216d3f949c01ebc75a157b287c6",
          "sha256": "50c94924a653553bfa002227cfe9b051ee8fd46cb5731d2d63b615907b1319e1"
        },
        "downloads": -1,
        "filename": "sushi-sub-0.6.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a4bed216d3f949c01ebc75a157b287c6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 26389,
        "upload_time": "2021-01-13T14:42:25",
        "upload_time_iso_8601": "2021-01-13T14:42:25.173856Z",
        "url": "https://files.pythonhosted.org/packages/cd/24/1a715d375f51a3f63e318b59fbdcee45c37f9d513072f9efcb2bba1d228f/sushi-sub-0.6.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "35a13e733b426e6a97ac77e6b56d037079a77ff44ff58990d5fef69248903281",
          "md5": "b07e175cc11c4a349520cb765cfc3409",
          "sha256": "61961040eb6e7116d749302098b77567ddcf371ab88a4756b22a23e8b487692c"
        },
        "downloads": -1,
        "filename": "sushi_sub-0.6.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b07e175cc11c4a349520cb765cfc3409",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 27002,
        "upload_time": "2022-07-17T18:21:46",
        "upload_time_iso_8601": "2022-07-17T18:21:46.013539Z",
        "url": "https://files.pythonhosted.org/packages/35/a1/3e733b426e6a97ac77e6b56d037079a77ff44ff58990d5fef69248903281/sushi_sub-0.6.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9fdc785a74fbed9fa7931ff1c0a62601b06c1c0521fa0ff63d8caaa70aeff4b8",
          "md5": "bb033f5e4cb8f6171d1e2a5c38711cd6",
          "sha256": "32e6106bfd71808e890f6ec7d2a5a2565294af904bccab6d65b257ba522eae66"
        },
        "downloads": -1,
        "filename": "sushi-sub-0.6.2.tar.gz",
        "has_sig": false,
        "md5_digest": "bb033f5e4cb8f6171d1e2a5c38711cd6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 26845,
        "upload_time": "2022-07-17T18:21:50",
        "upload_time_iso_8601": "2022-07-17T18:21:50.110845Z",
        "url": "https://files.pythonhosted.org/packages/9f/dc/785a74fbed9fa7931ff1c0a62601b06c1c0521fa0ff63d8caaa70aeff4b8/sushi-sub-0.6.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "35a13e733b426e6a97ac77e6b56d037079a77ff44ff58990d5fef69248903281",
        "md5": "b07e175cc11c4a349520cb765cfc3409",
        "sha256": "61961040eb6e7116d749302098b77567ddcf371ab88a4756b22a23e8b487692c"
      },
      "downloads": -1,
      "filename": "sushi_sub-0.6.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b07e175cc11c4a349520cb765cfc3409",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 27002,
      "upload_time": "2022-07-17T18:21:46",
      "upload_time_iso_8601": "2022-07-17T18:21:46.013539Z",
      "url": "https://files.pythonhosted.org/packages/35/a1/3e733b426e6a97ac77e6b56d037079a77ff44ff58990d5fef69248903281/sushi_sub-0.6.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9fdc785a74fbed9fa7931ff1c0a62601b06c1c0521fa0ff63d8caaa70aeff4b8",
        "md5": "bb033f5e4cb8f6171d1e2a5c38711cd6",
        "sha256": "32e6106bfd71808e890f6ec7d2a5a2565294af904bccab6d65b257ba522eae66"
      },
      "downloads": -1,
      "filename": "sushi-sub-0.6.2.tar.gz",
      "has_sig": false,
      "md5_digest": "bb033f5e4cb8f6171d1e2a5c38711cd6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 26845,
      "upload_time": "2022-07-17T18:21:50",
      "upload_time_iso_8601": "2022-07-17T18:21:50.110845Z",
      "url": "https://files.pythonhosted.org/packages/9f/dc/785a74fbed9fa7931ff1c0a62601b06c1c0521fa0ff63d8caaa70aeff4b8/sushi-sub-0.6.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}