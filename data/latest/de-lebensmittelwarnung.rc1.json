{
  "info": {
    "author": "BundesAPI",
    "author_email": "kontakt@bund.dev",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# lebensmittelwarnung\nListe aller Lebensmittel und Produktwarnungen\n\nThis Python package is automatically generated by the [OpenAPI Generator](https://openapi-generator.tech) project:\n\n- API version: 1.0.0\n- Package version: 0.1.0\n- Build package: org.openapitools.codegen.languages.PythonClientCodegen\n\n## Requirements.\n\nPython >= 3.6\n\n## Installation & Usage\n### pip install\n\n```sh\npip install deutschland[lebensmittelwarnung]\n```\n\n### poetry install\n\n```sh\npoetry add deutschland -E lebensmittelwarnung\n```\n\n### Setuptools\n\nInstall via [Setuptools](http://pypi.python.org/pypi/setuptools).\n\n```sh\npython setup.py install --user\n```\n(or `sudo python setup.py install` to install the package for all users)\n\n## Usage\n\nImport the package:\n```python\nfrom deutschland import lebensmittelwarnung\n```\n\n## Getting Started\n\nPlease follow the [installation procedure](#installation--usage) and then run the following:\n\n```python\n\nimport time\nfrom deutschland import lebensmittelwarnung\nfrom pprint import pprint\nfrom deutschland.lebensmittelwarnung.api import default_api\nfrom deutschland.lebensmittelwarnung.model.inline_object import InlineObject\nfrom deutschland.lebensmittelwarnung.model.response import Response\n# Defining the host is optional and defaults to https://megov.bayern.de/verbraucherschutz/baystmuv-verbraucherinfo/rest/api\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = lebensmittelwarnung.Configuration(\n    host = \"https://megov.bayern.de/verbraucherschutz/baystmuv-verbraucherinfo/rest/api\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = 'YOUR_API_KEY'\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n\n# Enter a context with an instance of the API client\nwith lebensmittelwarnung.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = default_api.DefaultApi(api_client)\n    inline_object = InlineObject(\n        food=RequestOptions(\n            rows=500,\n            sort=\"publishedDate desc, title asc\",\n            start=11,\n            fq=[\"publishedDate > 1630067654000\"],\n        ),\n        products=RequestOptions(\n            rows=500,\n            sort=\"publishedDate desc, title asc\",\n            start=11,\n            fq=[\"publishedDate > 1630067654000\"],\n        ),\n    ) # InlineObject |  (optional)\n\n    try:\n        # Liste aller Lebensmittel und Produktwarnungen\n        api_response = api_instance.list_warnungen(inline_object=inline_object)\n        pprint(api_response)\n    except lebensmittelwarnung.ApiException as e:\n        print(\"Exception when calling DefaultApi->list_warnungen: %s\\n\" % e)\n```\n\n## Documentation for API Endpoints\n\nAll URIs are relative to *https://megov.bayern.de/verbraucherschutz/baystmuv-verbraucherinfo/rest/api*\n\nClass | Method | HTTP request | Description\n------------ | ------------- | ------------- | -------------\n*DefaultApi* | [**list_warnungen**](docs/DefaultApi.md#list_warnungen) | **POST** /warnings/merged | Liste aller Lebensmittel und Produktwarnungen\n\n\n## Documentation For Models\n\n - [InlineObject](docs/InlineObject.md)\n - [RequestOptions](docs/RequestOptions.md)\n - [Response](docs/Response.md)\n - [ResponseDocs](docs/ResponseDocs.md)\n - [ResponseProduct](docs/ResponseProduct.md)\n - [ResponseRapexInformation](docs/ResponseRapexInformation.md)\n - [ResponseSafetyInformation](docs/ResponseSafetyInformation.md)\n\n\n## Documentation For Authorization\n\n\n## ApiKeyAuth\n\n- **Type**: API key\n- **API key parameter name**: Authorization\n- **Location**: HTTP header\n\n\n## Author\n\nkontakt@bund.dev\n\n\n## Notes for Large OpenAPI documents\nIf the OpenAPI document is large, imports in lebensmittelwarnung.apis and lebensmittelwarnung.models may fail with a\nRecursionError indicating the maximum recursion limit has been exceeded. In that case, there are a couple of solutions:\n\nSolution 1:\nUse specific imports for apis and models like:\n- `from deutschland.lebensmittelwarnung.api.default_api import DefaultApi`\n- `from deutschland.lebensmittelwarnung.model.pet import Pet`\n\nSolution 2:\nBefore importing the package, adjust the maximum recursion limit as shown below:\n```\nimport sys\nsys.setrecursionlimit(1500)\nfrom deutschland import lebensmittelwarnung\nfrom deutschland.lebensmittelwarnung.apis import *\nfrom deutschland.lebensmittelwarnung.models import *\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bundesAPI/lebensmittelwarnung-api",
    "keywords": "OpenAPI,OpenAPI-Generator,lebensmittelwarnung,App,API",
    "license": "Apache-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "de-lebensmittelwarnung",
    "package_url": "https://pypi.org/project/de-lebensmittelwarnung/",
    "platform": "",
    "project_url": "https://pypi.org/project/de-lebensmittelwarnung/",
    "project_urls": {
      "Bug Tracker": "https://github.com/bundesAPI/lebensmittelwarnung-api/issues",
      "Homepage": "https://github.com/bundesAPI/lebensmittelwarnung-api"
    },
    "release_url": "https://pypi.org/project/de-lebensmittelwarnung/0.1.0/",
    "requires_dist": [
      "python-dateutil",
      "urllib3 (>=1.25.3)"
    ],
    "requires_python": ">=3.6",
    "summary": "Lebensmittelwarnungen API",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13005961,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "85573101e4e6c3e58109ddcae0efdac764a134eb28e38f10fddc93b86a76a44a",
          "md5": "1e6363bbea30e06619d9b22e88b67e58",
          "sha256": "566c5c444c16dd68b9310c07e55a9d1af9eaf531b383b7390f390f0e6d19edf1"
        },
        "downloads": -1,
        "filename": "de_lebensmittelwarnung-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1e6363bbea30e06619d9b22e88b67e58",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 59267,
        "upload_time": "2022-02-25T03:51:04",
        "upload_time_iso_8601": "2022-02-25T03:51:04.509818Z",
        "url": "https://files.pythonhosted.org/packages/85/57/3101e4e6c3e58109ddcae0efdac764a134eb28e38f10fddc93b86a76a44a/de_lebensmittelwarnung-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "404892f18208136c447191b936a86c724e06b4b841de35c36a36a71c6a79fc3e",
          "md5": "d527c7dcf48bcbde2577b8d753dfc1c1",
          "sha256": "790f1abc86187ed51ae969c713fd4a07d430a4146af116d8ac36543a70143ac5"
        },
        "downloads": -1,
        "filename": "de-lebensmittelwarnung-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d527c7dcf48bcbde2577b8d753dfc1c1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 41962,
        "upload_time": "2022-02-25T03:51:06",
        "upload_time_iso_8601": "2022-02-25T03:51:06.156097Z",
        "url": "https://files.pythonhosted.org/packages/40/48/92f18208136c447191b936a86c724e06b4b841de35c36a36a71c6a79fc3e/de-lebensmittelwarnung-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "85573101e4e6c3e58109ddcae0efdac764a134eb28e38f10fddc93b86a76a44a",
        "md5": "1e6363bbea30e06619d9b22e88b67e58",
        "sha256": "566c5c444c16dd68b9310c07e55a9d1af9eaf531b383b7390f390f0e6d19edf1"
      },
      "downloads": -1,
      "filename": "de_lebensmittelwarnung-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1e6363bbea30e06619d9b22e88b67e58",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 59267,
      "upload_time": "2022-02-25T03:51:04",
      "upload_time_iso_8601": "2022-02-25T03:51:04.509818Z",
      "url": "https://files.pythonhosted.org/packages/85/57/3101e4e6c3e58109ddcae0efdac764a134eb28e38f10fddc93b86a76a44a/de_lebensmittelwarnung-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "404892f18208136c447191b936a86c724e06b4b841de35c36a36a71c6a79fc3e",
        "md5": "d527c7dcf48bcbde2577b8d753dfc1c1",
        "sha256": "790f1abc86187ed51ae969c713fd4a07d430a4146af116d8ac36543a70143ac5"
      },
      "downloads": -1,
      "filename": "de-lebensmittelwarnung-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "d527c7dcf48bcbde2577b8d753dfc1c1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 41962,
      "upload_time": "2022-02-25T03:51:06",
      "upload_time_iso_8601": "2022-02-25T03:51:06.156097Z",
      "url": "https://files.pythonhosted.org/packages/40/48/92f18208136c447191b936a86c724e06b4b841de35c36a36a71c6a79fc3e/de-lebensmittelwarnung-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}