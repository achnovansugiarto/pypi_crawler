{
  "info": {
    "author": "Sergey Tsimfer",
    "author_email": "sergeytsimfer@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: System :: Monitoring"
    ],
    "description": "# NBTools\nCollection of tools for monitoring running Jupyter Notebooks and interacting with them.\n\nThe installation should be as easy as:\n```\npip install py-nbtools\n```\n\n\n## **NBstat**\n\nThe main tool of this package is **nbstat** / **nbwatch** command line utility. It is added at installation and shows the detailed resource utilization for each process of each running Jupyter Notebook. A gif is worth a thousand words:\n\n<img src=\"images/nbwatch.gif\" width=\"90%\"/>\n\nWhile in the `watch` mode, you can hit buttons to modify the displayed view:\n\n* `tab` — swaps views, from `nbwatch` to `devicewatch` and back.\n* `b` — toggles bar representation for some of the resources: in addition to its value, show colored bar.\n* `m` — toggles moving average column for some of the resources: values are averaged across the latest iterations.\n* `s` — toggles table separators.\n\nWe also add the **devicestat** and **devicewatch** commands that show transposed view with the same information and parameters.\n\nFor more information, check out the full [user documentation:](nbtools/nbstat/README.md) explanation of different table views, command line options and ready-to-use snippets.\n\n\n### Troubleshooting: PID namespaces, user permissions and zombie processes\nA [known problem](https://github.com/NVIDIA/nvidia-docker/issues/179) of NVIDIA drivers is that **nvidia-smi** reports PIDs of processes on devices in the global namespace, not in the container namespace, which does not allow to match PIDs of container processes to their device PIDs. There are a few workarounds:\n* pass `--pid=host` flag to `docker run`.\n* patch NVIDIA driver to handle PID namespaces correctly.\n* [Linux only] fallback on manually inspecting */proc/PID/* files to identify the host PID for each process inside of the container.\n\nWhile `nbstat` provides several fallbacks for `Linux` containers (and intend to provide support for more environments over time), the bullet-proof way is to use `--pid=host` option for `docker run`. Adding it resolves most of the issues immediately.\n\nOne more thing that sometimes happens to NVIDIA devices is zombie processes: by incorrectly terminating a GPU-using process you can end up in a situation where device memory is held by not-existing process. As far as I know, there are no ways of killing them without rebooting, and `nbstat` just marks such processes with red color.\n\nIn order to inspect certain properties of processes, we rely on having all necessary permissions already provided at command run. `nbstat` has some fallbacks for some attributes, and I currently work on improving error handling in cases of denied access to files.\n\n\n\n### Contribute\nIf you are interested to contribute, check out the [developer/contributor page.](nbtools/nbstat/DEV.md) It contains detailed description about inner workings of the library, my design choices and motivation behind them, as well as discussion of complexities along the way.\n\n\n## **pylint_notebook**\nShamelessly taken from [pylint page:](https://pylint.pycqa.org/en/latest/)\n\nFunction that checks for errors in Jupyter Notebooks with Python code, tries to enforce a coding standard and looks for code smells. It can also look for certain type errors, it can recommend suggestions about how particular blocks can be refactored and can offer you details about the code's complexity.\n\nUsing it as easy as:\n```python\nfrom nbtools import pylint_notebook\npylint_notebook(path_to_ipynb,             # If not provided, use path to the current notebook\n                disable='invalid-name',    # Disable specified Pylint checks. Can be a list.\n                enable='import-error')     # Enable  specified Pylint checks. Can be a list.\n```\n\nUnder the hood, it converts `.ipynb` notebook to `.py` script, creates a custom `.pylintrc` configuration, runs the `pylint` and removes all temporary files. Learn more about its usage in the [tutorial.](tutorials/NBstat.ipynb)\n\n## **run_notebook**\nProvides a `eval`-like interface for running Jupyter Notebooks programmatically. We use it for running interactive tests, that are easy to work with: in case of any failures, one can jump right into fixing it with an already set-up environment.\n\n```python\nfrom nbtools import run_notebook\nrun_notebook(path_to_ipynb,                       # Which notebook to run\n             out_path_ipynb,                      # Where to save result\n             inputs={'learning_rate': 0.05,},     # Pass variables to notebook\n             outputs=['accuracy'])                # Extract variables from notebook\n```\n\n\n## **set_gpus**\nSelect free device(s) and set `CUDA_VISIBLE_DEVICES` environment variable so that the current process sees only them.\n\nEliminates an enormous amount of bugs and unexpected behaviors related to GPU usage.\n\n```python\nfrom nbtools import set_gpus\nset_gpus(n=2,                              # Number of devices to set.\n         min_free_memory=0.7,              # Minimum amount of free memory on device to consider it free.\n         max_processes=3)                  # Maximum amount of  processes  on device to consider it free.\n```\n\n## Other functions\n```python\nfrom nbtools import (in_notebook,          # Return True if executed inside of Jupyter Notebook\n                     get_notebook_path,    # If executed in Jupyter Notebook, return its absolute path\n                     get_notebook_name,    # If executed in Jupyter Notebook, return its name\n                     notebook_to_script)   # Convert Jupyter Notebook to an executable Python script.\n                                           # Works well with magics and command line executions.\n```\n\n\n## Goals\nThis library started as a container of tools, that I came across / developed in my years as an ML researcher. As some of the functions survived multiple refactoring iterations, I decided to share the library so it is easier to perfect them and test in different environments.\n\nAnother goal of the project is to show how to communicate with Jupyter API on real world examples: instead of reading through a number of stackoverflow threads, you can find the same information collected in one place and get a rough understanding of what is possible with it and what is not.\n\n## Acknowledgements\nThe **nbstat** module builds on [**gpustat**](https://github.com/wookayin/gpustat) package. Using the **gpustat** for years gave me an idea about possible improvements, which are implemented in this library. While the implementation is different, reading through the code of **gpustat** was essential for development.\n\nAnimated GIFs are created by using [Terminalizer](https://github.com/faressoft/terminalizer): aside from the usual problems with installation, the tool itself is amazing.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/analysiscenter/nbtools",
    "keywords": "",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "py-nbtools",
    "package_url": "https://pypi.org/project/py-nbtools/",
    "platform": "any",
    "project_url": "https://pypi.org/project/py-nbtools/",
    "project_urls": {
      "Homepage": "https://github.com/analysiscenter/nbtools"
    },
    "release_url": "https://pypi.org/project/py-nbtools/0.9.8/",
    "requires_dist": [
      "nvidia-ml-py3 (>=7.352)",
      "blessed (>=1.17)",
      "psutil (>=5.6)",
      "ipython (>=7.10.0) ; extra == 'nbrun'",
      "nbconvert (>=5.6.1) ; extra == 'nbrun'"
    ],
    "requires_python": "",
    "summary": "A collection of tools for using inside Jupyter Notebooks",
    "version": "0.9.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17096191,
  "releases": {
    "0.9.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "abce6174b399378e2a243a5a254ee2f389a196d67dc4b9d70dc09064754425f5",
          "md5": "9fdac11004bf1def0a044eeaf74d9356",
          "sha256": "6b360bf9108e56c5c57db068fda38cd0607d834e9623a01ac35424d0346c011b"
        },
        "downloads": -1,
        "filename": "py-nbtools-0.9.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9fdac11004bf1def0a044eeaf74d9356",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 37342,
        "upload_time": "2022-02-11T15:02:51",
        "upload_time_iso_8601": "2022-02-11T15:02:51.555605Z",
        "url": "https://files.pythonhosted.org/packages/ab/ce/6174b399378e2a243a5a254ee2f389a196d67dc4b9d70dc09064754425f5/py-nbtools-0.9.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "13f5666958181b9d0dd7b497af9f9a3feea95b417b100bb50f756867315a5c87",
          "md5": "ad0e9539d05a8a18e7c80cb7ee096032",
          "sha256": "24b5466c04aff75215cf45ac8c8eff2a87a30a7da7a16eb76a610c6b36e768fa"
        },
        "downloads": -1,
        "filename": "py-nbtools-0.9.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ad0e9539d05a8a18e7c80cb7ee096032",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 37789,
        "upload_time": "2022-02-14T21:56:02",
        "upload_time_iso_8601": "2022-02-14T21:56:02.148844Z",
        "url": "https://files.pythonhosted.org/packages/13/f5/666958181b9d0dd7b497af9f9a3feea95b417b100bb50f756867315a5c87/py-nbtools-0.9.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "537125ed9f959ecad74137378bd60542637501feb2385564b187d163492d42d1",
          "md5": "9bb8b5092c443319e2c0d21061b58ccc",
          "sha256": "6f8d429356f7ea63a36c96231f0e2d5950ef87a3bbfd3dd3b4e07db0d2b4cd45"
        },
        "downloads": -1,
        "filename": "py-nbtools-0.9.2.tar.gz",
        "has_sig": false,
        "md5_digest": "9bb8b5092c443319e2c0d21061b58ccc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 38045,
        "upload_time": "2022-02-17T08:52:29",
        "upload_time_iso_8601": "2022-02-17T08:52:29.851227Z",
        "url": "https://files.pythonhosted.org/packages/53/71/25ed9f959ecad74137378bd60542637501feb2385564b187d163492d42d1/py-nbtools-0.9.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0abc14532c8317f9e060b3f2fcaa59df8fa129b0d250404ee3e58adb428cbec8",
          "md5": "d9cf01b14b3c81aaa61a3f0d35bef6c0",
          "sha256": "8e12d054cb1b8d5c2785bcba57fea56e82069a8ff9586083f215449aeda930ef"
        },
        "downloads": -1,
        "filename": "py-nbtools-0.9.3.tar.gz",
        "has_sig": false,
        "md5_digest": "d9cf01b14b3c81aaa61a3f0d35bef6c0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 38050,
        "upload_time": "2022-02-17T11:14:29",
        "upload_time_iso_8601": "2022-02-17T11:14:29.176077Z",
        "url": "https://files.pythonhosted.org/packages/0a/bc/14532c8317f9e060b3f2fcaa59df8fa129b0d250404ee3e58adb428cbec8/py-nbtools-0.9.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fda6537aff9b8ec38757ee809644f8eb29b55264c7e712c823965bf79aa9b8d6",
          "md5": "2bd90811f9c3c765ba1fcd7611d43ca5",
          "sha256": "85ee33e6511ae1e1354e073acb1b890edd206474ddd22827a95066c85dbc827e"
        },
        "downloads": -1,
        "filename": "py-nbtools-0.9.4.tar.gz",
        "has_sig": false,
        "md5_digest": "2bd90811f9c3c765ba1fcd7611d43ca5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 42097,
        "upload_time": "2022-03-22T12:00:10",
        "upload_time_iso_8601": "2022-03-22T12:00:10.751881Z",
        "url": "https://files.pythonhosted.org/packages/fd/a6/537aff9b8ec38757ee809644f8eb29b55264c7e712c823965bf79aa9b8d6/py-nbtools-0.9.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8fbede583f38d5f3e1f896a6cbea14b1fd83a9014fe0f8c5474f0046c5feb6cc",
          "md5": "3826be2e07abd910944740b7b5a6080f",
          "sha256": "b37bdf8833df164c31dc2a54d5cf41c02ec9ef2ef0785c68287a1fe6712eba1b"
        },
        "downloads": -1,
        "filename": "py-nbtools-0.9.5.tar.gz",
        "has_sig": false,
        "md5_digest": "3826be2e07abd910944740b7b5a6080f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 42141,
        "upload_time": "2022-03-24T06:43:07",
        "upload_time_iso_8601": "2022-03-24T06:43:07.733560Z",
        "url": "https://files.pythonhosted.org/packages/8f/be/de583f38d5f3e1f896a6cbea14b1fd83a9014fe0f8c5474f0046c5feb6cc/py-nbtools-0.9.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "83490aebf4d853154f5741fcc9e0d0efd1684723b9ab8461f0f922f0650ff15d",
          "md5": "5077ddc8d160efe3b3422c2bec848c12",
          "sha256": "8525799c852721ce6104f30b74e96732c614e801c0bccefe5943dee958163bb3"
        },
        "downloads": -1,
        "filename": "py_nbtools-0.9.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5077ddc8d160efe3b3422c2bec848c12",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 47016,
        "upload_time": "2023-02-20T09:48:32",
        "upload_time_iso_8601": "2023-02-20T09:48:32.650142Z",
        "url": "https://files.pythonhosted.org/packages/83/49/0aebf4d853154f5741fcc9e0d0efd1684723b9ab8461f0f922f0650ff15d/py_nbtools-0.9.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b2f50296f6696fb1f79767499cac1fe5ddd0f8e76034efce386fbec8ec5038a6",
          "md5": "616d3f4d7fe08326327a39856d56f91e",
          "sha256": "c91bd1acfc8eeedc6a8edc20686e8bb1c5709c564a57a731d1bb5bc76573da60"
        },
        "downloads": -1,
        "filename": "py-nbtools-0.9.7.tar.gz",
        "has_sig": false,
        "md5_digest": "616d3f4d7fe08326327a39856d56f91e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 44185,
        "upload_time": "2023-02-20T09:48:33",
        "upload_time_iso_8601": "2023-02-20T09:48:33.782998Z",
        "url": "https://files.pythonhosted.org/packages/b2/f5/0296f6696fb1f79767499cac1fe5ddd0f8e76034efce386fbec8ec5038a6/py-nbtools-0.9.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "01ad815d12b44908114779cbdf12ab341939cd585f5db737be0f14eb365e394b",
          "md5": "e12af19c093aee1bf1b524baed31a259",
          "sha256": "ba273d911d53808037f6d83f20bc9495a3f973e779367cbb0c405fb4cc598fbc"
        },
        "downloads": -1,
        "filename": "py_nbtools-0.9.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e12af19c093aee1bf1b524baed31a259",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 47064,
        "upload_time": "2023-02-28T14:05:53",
        "upload_time_iso_8601": "2023-02-28T14:05:53.273075Z",
        "url": "https://files.pythonhosted.org/packages/01/ad/815d12b44908114779cbdf12ab341939cd585f5db737be0f14eb365e394b/py_nbtools-0.9.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7353a239e7179c0361e30444fecd8555f4e8c15134aaea105a3b6c8f00326f45",
          "md5": "2b69f8e6340767360053ec30935efc1c",
          "sha256": "27cd34c34f1ef3689e38eefdfec2b49f26e5d64642184749a4aa9f065a85c54f"
        },
        "downloads": -1,
        "filename": "py-nbtools-0.9.8.tar.gz",
        "has_sig": false,
        "md5_digest": "2b69f8e6340767360053ec30935efc1c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 44259,
        "upload_time": "2023-02-28T14:05:54",
        "upload_time_iso_8601": "2023-02-28T14:05:54.415827Z",
        "url": "https://files.pythonhosted.org/packages/73/53/a239e7179c0361e30444fecd8555f4e8c15134aaea105a3b6c8f00326f45/py-nbtools-0.9.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "01ad815d12b44908114779cbdf12ab341939cd585f5db737be0f14eb365e394b",
        "md5": "e12af19c093aee1bf1b524baed31a259",
        "sha256": "ba273d911d53808037f6d83f20bc9495a3f973e779367cbb0c405fb4cc598fbc"
      },
      "downloads": -1,
      "filename": "py_nbtools-0.9.8-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e12af19c093aee1bf1b524baed31a259",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 47064,
      "upload_time": "2023-02-28T14:05:53",
      "upload_time_iso_8601": "2023-02-28T14:05:53.273075Z",
      "url": "https://files.pythonhosted.org/packages/01/ad/815d12b44908114779cbdf12ab341939cd585f5db737be0f14eb365e394b/py_nbtools-0.9.8-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7353a239e7179c0361e30444fecd8555f4e8c15134aaea105a3b6c8f00326f45",
        "md5": "2b69f8e6340767360053ec30935efc1c",
        "sha256": "27cd34c34f1ef3689e38eefdfec2b49f26e5d64642184749a4aa9f065a85c54f"
      },
      "downloads": -1,
      "filename": "py-nbtools-0.9.8.tar.gz",
      "has_sig": false,
      "md5_digest": "2b69f8e6340767360053ec30935efc1c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 44259,
      "upload_time": "2023-02-28T14:05:54",
      "upload_time_iso_8601": "2023-02-28T14:05:54.415827Z",
      "url": "https://files.pythonhosted.org/packages/73/53/a239e7179c0361e30444fecd8555f4e8c15134aaea105a3b6c8f00326f45/py-nbtools-0.9.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}