{
  "info": {
    "author": "Behrouz Safari",
    "author_email": "behrouz.safari@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "**Author:** [Behrouz Safari](https://behrouzz.github.io/)<br/>\n**Website:** [AstroDataScience.Net](http://astrodatascience.net/)<br/>\n\n# gaiadr3\n*Retrieve data and analysis package for Gaia Data Release 3*\n\n\n## Installation\n\nInstall the latest version of *gaiadr3* from [PyPI](https://pypi.org/project/gaiadr3/):\n\n    pip install gaiadr3\n\nThe only requirement is *pandas*.\n\n\n## Background\n\nGaia Data Release 3 presents two main types of data: *tabular* and *ancillary*.\nThe tabular data can be retrieved using ADQL Tap queries and are described in the [Data Model](https://gea.esac.esa.int/archive/documentation/GDR3/Gaia_archive/chap_datamodel/)\nThe ancillary data are those that can not be accessed via ADQL Tap queries. Epoch photomerty and spectroscopic data are of this type.\nYou need to use DataLink to retrieve this type of data. \n\n\n## Tap queries\n\nThe standard way to retrieve tabular data is by using tap queries. Pass your script to the *sql2df* function. It will return two pandas dataframes: data and meta.\n\n```python\n>>> from gaiadr3 import sql2df\n>>> data, meta = sql2df('SELECT TOP 5 source_id, ra, dec FROM gaiadr3.gaia_source')\n>>> print(meta)\n                                                 description  unit\nname                                                              \nsource_id  Unique source identifier (unique within a part...  None\nra                                           Right ascension   deg\ndec                                              Declination   deg\n>>> print(data)\n             source_id          ra        dec\n0  4116903625596296576  266.323047 -22.651077\n1  4116903625596299136  266.321568 -22.651833\n2  4116903625596302976  266.320308 -22.652672\n3  4116903625596305408  266.321332 -22.651379\n4  4116903625596305536  266.321399 -22.651430\n```\n\nFor ease of use, I have created some shortcut keywords which begin with '@'. Currently, they are:\n\n* @MT : Main Table (gaiadr3.gaia_source)\n* @LT : Lite Table (gaiadr3.gaia_source_lite)\n* @COLS : A selection of the most important columns\n\n```python\n>>> data, meta = sql2df('SELECT TOP 3 @COLS FROM @MT')\n>>> data\n             source_id          ra  ...  has_mcmc_gspphot  has_mcmc_msc\n0  4116903625596296576  266.323047  ...             False         False\n1  4116903625596299136  266.321568  ...             False         False\n2  4116903625596302976  266.320308  ...             False         False\n\n[3 rows x 24 columns]\n```\n\n\n## Get single source\n\nThe simplest way to get data for a single source, is using *GaiaObject* class. You can create an instance of this class by passing a *source_id*:\n\n```python\n>>> from gaiadr3 import GaiaObject\n>>> source_id = 30343944744320\n>>> obj = GaiaObject(source_id=source_id)\n```\n\nNow you can use the *download* method to retrieve both tabular and ancillary. This method accepts two boolean arguments: *key_param* and *ancillary*.\nBoth are True by default. After using this method, some important key parameter will be downloaded as a python dictionary in the *key_param* attribute.\n\n```python\n>>> obj.download()\n>>> print(obj.key_param['data'])\n{'solution_id': 1636148068921376768,\n 'ra': 45.09499151004629,\n 'dec': 0.4768361311353548,\n 'parallax': 1.120139133994462,\n 'distance_gspphot': 913.4706,\n 'pm': 19.76517,\n 'pmra': 19.35330019571839,\n 'pmdec': 4.013937591116442,\n 'radial_velocity': 40.224552,\n 'teff_gspphot': 12291.837,\n 'logg_gspphot': 4.0962,\n 'phot_g_mean_mag': 9.899,\n 'phot_bp_mean_mag': 9.873377,\n 'phot_rp_mean_mag': 9.918395,\n 'phot_g_mean_flux': 2067028.6966188122,\n 'phot_bp_mean_flux': 1534850.5584509764,\n 'phot_rp_mean_flux': 854673.6713712276,\n 'has_epoch_photometry': True,\n 'has_epoch_rv': False,\n 'has_rvs': True,\n 'has_xp_continuous': True,\n 'has_xp_sampled': True,\n 'has_mcmc_gspphot': True,\n 'has_mcmc_msc': True}\n```\n\nIf you don't know what are these parameters, look at *obj.key_param['meta']*. <br/>\n\nThe ancillary data will be downloaded as csv files in the 'data' folder in the working directory. These data, if exist, can be accessed as attributes:<br/>\n\n```python\n>>> print(obj.xp_samp)\n     wavelength          flux    flux_error\n0         336.0  7.519030e-15  8.592673e-16\n1         338.0  6.699424e-15  7.309379e-16\n2         340.0  5.937778e-15  6.685453e-16\n3         342.0  5.614390e-15  6.325656e-16\n4         344.0  5.726218e-15  6.402061e-16\n..          ...           ...           ...\n338      1012.0  5.449369e-16  6.181877e-17\n339      1014.0  5.333555e-16  6.771072e-17\n340      1016.0  5.501445e-16  7.086527e-17\n341      1018.0  5.647527e-16  6.731273e-17\n342      1020.0  6.096352e-16  6.407823e-17\n\n[343 rows x 3 columns]\n```\n\nAttributes corresponding to the ancillary data are: *ep_phot*, *rvs*, *xp_samp*, *xp_cont*. Use the *has* attribute to see which of these are available.\n\n```python\n>>> print(obj.has)\n{'EPOCH_PHOTOMETRY': True,\n 'RVS': True,\n 'XP_CONTINUOUS': True,\n 'XP_SAMPLED': True,\n 'MCMC_GSPPHOT': True,\n 'MCMC_MSC': True}\n```\n\n## Get multiple sources\n\nIf you want to get ancillary data for multiple sources you should use DataLink class. \n\n```python\n>>> from gaiadr3 import DataLink\n>>> sources = [30343944744320, 6196457933368101888]\n>>> dl = DataLink(source_id=sources, retrieval_type='ALL')\n>>> dl.download()\n```\n\nBy default, the data will be downloaded in 'data' folder in the working directory. For each object a folder will be created.\nUsing the *get_objects* method, you can access each source as a GaiaObject as explained above.\nLet's get the epoch photometry for green, blue and red bands for the first source:\n\n```python\n>>> objects = dl.get_objects()\n>>> g, b, r = objects[0].ep_phot\n>>> print(g)\n                                 mag          flux   flux_error\nTCB                                                            \n2014-09-06 08:55:04.077123  9.910611  2.045042e+06  3983.560844\n2014-09-06 10:41:40.701409  9.909272  2.047565e+06  3652.792295\n2014-12-27 00:49:44.365184  9.890911  2.082487e+06  3175.264209\n2014-12-27 02:36:15.656166  9.874771  2.113675e+06  4644.732420\n2015-01-16 06:49:25.778803  9.883712  2.096341e+06  1828.438678\n2015-01-16 08:35:59.407773  9.888541  2.087037e+06  2039.618901\n2015-02-15 00:23:35.148389  9.864696  2.133381e+06  2924.895816\n2015-07-07 19:46:09.417232  9.886747  2.090489e+06  2817.581457\n2015-08-01 03:31:05.147557  9.922456  2.022854e+06  3171.964369\n2015-08-30 03:21:11.667936  9.880055  2.103414e+06   977.945250\n2016-01-05 13:57:07.739350  9.880296  2.102947e+06  1754.446362\n2016-01-05 15:43:39.101625  9.878165  2.107079e+06  1487.112158\n2016-01-31 01:44:44.422883  9.919168  2.028988e+06  1516.905039\n2016-02-25 03:16:43.072088  9.923205  2.021458e+06  2363.931131\n2016-07-17 08:55:16.873392  9.905461  2.054766e+06  3400.421158\n2016-07-17 10:41:51.854195  9.909443  2.047244e+06  1766.953020\n2016-08-15 14:44:12.432337  9.904904  2.055821e+06  1543.565592\n2016-09-08 14:45:34.479689  9.897831  2.069257e+06  2292.732039\n2016-09-08 16:32:08.406143  9.886640  2.090695e+06  4654.839112\n2017-01-14 21:05:28.352674  9.926262  2.015774e+06  1613.007848\n2017-01-14 22:52:01.924915  9.909325  2.047467e+06  3051.287780\n2017-02-13 10:01:27.449079  9.920222  2.027019e+06  1790.127633\n2017-02-13 11:48:01.024177  9.926633  2.015085e+06  3115.379630\n2017-03-05 21:57:47.804485  9.886628  2.090718e+06  1692.944591\n2017-03-05 23:44:23.399045  9.877953  2.107490e+06  4360.998681\n```\n\nSee more at [astrodatascience.net](https://astrodatascience.net/)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/behrouzz/gaiadr3",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "gaiadr3",
    "package_url": "https://pypi.org/project/gaiadr3/",
    "platform": null,
    "project_url": "https://pypi.org/project/gaiadr3/",
    "project_urls": {
      "Homepage": "https://github.com/behrouzz/gaiadr3"
    },
    "release_url": "https://pypi.org/project/gaiadr3/0.0.2/",
    "requires_dist": [
      "numpy",
      "pandas"
    ],
    "requires_python": ">=3.6",
    "summary": "Retrieve data and analysis package for Gaia Data Release 3",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14425058,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a15c5df9e06e4c27834a2524b73f8f2a1b3900321401a390c6b791f6389ecec",
          "md5": "e53f8b234be1a8974bf106e2cd664e06",
          "sha256": "c4728ba790dbc0ccbe9919fcbdec8f340551a872dd93796bfc26345e2cf70b28"
        },
        "downloads": -1,
        "filename": "gaiadr3-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e53f8b234be1a8974bf106e2cd664e06",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10243,
        "upload_time": "2022-07-13T02:42:14",
        "upload_time_iso_8601": "2022-07-13T02:42:14.219476Z",
        "url": "https://files.pythonhosted.org/packages/9a/15/c5df9e06e4c27834a2524b73f8f2a1b3900321401a390c6b791f6389ecec/gaiadr3-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "86af6545a1db9e8ee52ecd101f70c41bbd6fbdfcca9f3d064d17b176a9cedbc4",
          "md5": "b1dc16fa10e2c04a2bc213447b95a856",
          "sha256": "c41e546392f5bf348ee03af472be2c208d3a9b5099f4760c917a581a34cb3c1e"
        },
        "downloads": -1,
        "filename": "gaiadr3-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b1dc16fa10e2c04a2bc213447b95a856",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11966,
        "upload_time": "2022-07-13T02:42:16",
        "upload_time_iso_8601": "2022-07-13T02:42:16.592789Z",
        "url": "https://files.pythonhosted.org/packages/86/af/6545a1db9e8ee52ecd101f70c41bbd6fbdfcca9f3d064d17b176a9cedbc4/gaiadr3-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "88a2e5ba4c9f03302a30fb4579f220b29cdda505dd91aa8266eb070fc9b1608f",
          "md5": "977e9b3bed12fbee4030a7dbb337d370",
          "sha256": "81e3f631fd0d8331f2b3f773a9db0e77bd87bb1dcc831dae2a553ac8e693c1d8"
        },
        "downloads": -1,
        "filename": "gaiadr3-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "977e9b3bed12fbee4030a7dbb337d370",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10861,
        "upload_time": "2022-07-13T18:42:36",
        "upload_time_iso_8601": "2022-07-13T18:42:36.296353Z",
        "url": "https://files.pythonhosted.org/packages/88/a2/e5ba4c9f03302a30fb4579f220b29cdda505dd91aa8266eb070fc9b1608f/gaiadr3-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5ac912069dab15fc72416649fe046bf88155c72af171c67a3129e47cd85baef4",
          "md5": "1c2625877eae8bcff918c05f00999af5",
          "sha256": "4307c242a1cc17a5ecd322f87c7c333e4e3e1e27ef80bf762a6a3f29b66d86d4"
        },
        "downloads": -1,
        "filename": "gaiadr3-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "1c2625877eae8bcff918c05f00999af5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13127,
        "upload_time": "2022-07-13T18:42:38",
        "upload_time_iso_8601": "2022-07-13T18:42:38.265277Z",
        "url": "https://files.pythonhosted.org/packages/5a/c9/12069dab15fc72416649fe046bf88155c72af171c67a3129e47cd85baef4/gaiadr3-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "88a2e5ba4c9f03302a30fb4579f220b29cdda505dd91aa8266eb070fc9b1608f",
        "md5": "977e9b3bed12fbee4030a7dbb337d370",
        "sha256": "81e3f631fd0d8331f2b3f773a9db0e77bd87bb1dcc831dae2a553ac8e693c1d8"
      },
      "downloads": -1,
      "filename": "gaiadr3-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "977e9b3bed12fbee4030a7dbb337d370",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 10861,
      "upload_time": "2022-07-13T18:42:36",
      "upload_time_iso_8601": "2022-07-13T18:42:36.296353Z",
      "url": "https://files.pythonhosted.org/packages/88/a2/e5ba4c9f03302a30fb4579f220b29cdda505dd91aa8266eb070fc9b1608f/gaiadr3-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5ac912069dab15fc72416649fe046bf88155c72af171c67a3129e47cd85baef4",
        "md5": "1c2625877eae8bcff918c05f00999af5",
        "sha256": "4307c242a1cc17a5ecd322f87c7c333e4e3e1e27ef80bf762a6a3f29b66d86d4"
      },
      "downloads": -1,
      "filename": "gaiadr3-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "1c2625877eae8bcff918c05f00999af5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 13127,
      "upload_time": "2022-07-13T18:42:38",
      "upload_time_iso_8601": "2022-07-13T18:42:38.265277Z",
      "url": "https://files.pythonhosted.org/packages/5a/c9/12069dab15fc72416649fe046bf88155c72af171c67a3129e47cd85baef4/gaiadr3-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}