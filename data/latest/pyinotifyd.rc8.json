{
  "info": {
    "author": "Thomas Oettli",
    "author_email": "spacefreak@noop.ch",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Utilities"
    ],
    "description": "# pyinotifyd\nA daemon for monitoring filesystem events with inotify on Linux and run tasks like filesystem operations (copy, move or delete), a shell command or custom async python methods.  \n\nIt is possible to schedule tasks with a delay, which can then be canceled again in case a canceling event occurs. A useful example for this is to run tasks only if a file has not changed within a certain amount of time.  \n\npyinotifyd offers great flexibility through its dev-op configuration approach, which enables you to do almost anything you want.\n\n# Requirements\n* [pyinotify](https://github.com/seb-m/pyinotify)\n\n# Installation\n```sh\n# install pyinotifyd with pip\npip install pyinotifyd\n\n# install service files and config\npyinotifyd --install\n\n# uninstall service files and unmodified config\npyinotifyd --uninstall\n```\n\n## Autostart\nThe following init systems are supported.\n\n### systemd\n```sh\n# start the daemon at boot time\nsystemctl enable pyinotifyd.service\n\n# start the daemon immediately\nsystemctl start pyinotifyd.service\n```\n\n### OpenRC (Gentoo)\n```sh\n# start the daemon at boot time\nrc-update add pyinotifyd default\n\n# start the daemon immediately\nrc-service pyinotifyd start \n```\n\n# Configuration\nThe config file **/etc/pyinotifyd/config.py** is written in python syntax. pyinotifyd reads and executes its content, that means you can write your custom async python methods directly into the config file.  \nThe basic idea is to instantiate one or multiple schedulers and map specific inotify events to schedulers with the help of event maps. Then, watch the given paths for events and run tasks as defined in the event maps.\n\n## Schedulers\npyinotifyd has different schedulers to schedule tasks with an optional delay. The advantages of using a scheduler are consistent logging and the possibility to cancel delayed tasks. Furthermore, schedulers have the ability to differentiate between files and directories.\n\n### TaskScheduler\nSchedule a custom python method *job* with an optional *delay* in seconds. Skip scheduling of tasks for files and/or directories according to *files* and *dirs* arguments. If there already is a scheduled task, re-schedule it with *delay*. Use *logname* in log messages. All additional modules, functions and variables that are defined in the config file and are needed within the *job*, need to be passed as dictionary to the TaskManager through *global_vars*. If you want to limit the scheduler to run only one job at a time, set *singlejob* to True.  \nAll arguments except for *job* are optional.\n```python\n# Please note that pyinotifyd uses pythons asyncio for asynchronous task execution.\n# Do not run anything inside the custom python method that blocks the daemon.\n#\n# Bad:  time.sleep(10)\n# Good: await asyncio.sleep(10)\n\nimport asyncio\nimport logging\n\nasync def custom_job(event, task_id):\n    await asyncio.sleep(10)\n    logging.info(f\"{task_id}: execute example task: {event}\")\n\ntask_sched = TaskScheduler(\n    job=custom_job,\n    files=True,\n    dirs=False,\n    delay=0,\n    logname=\"sched\",\n    global_vars=globals(),\n    singlejob=False)\n```\n\n### ShellScheduler\nSchedule a shell command *cmd*. Replace  **{maskname}**, **{pathname}** and **{src_pathname}** in *cmd* with the actual values of occuring events. This scheduler is based on TaskScheduler and has the same optional arguments.\n```python\n# Please note that **{src_pathname}** is only present for IN_MOVED_TO events and only\n# in the case where the IN_MOVED_FROM events are watched too.\n# If it is not present, the command line argument will be an empty string.\nshell_sched = ShellScheduler(\n    cmd=\"/usr/local/bin/task.sh {maskname} {pathname} {src_pathname}\")\n```\n\n### FileManagerScheduler\nMove, copy or delete files and/or directories following the list of *rules*, the first matching rule is executed.  \nThis scheduler is based on TaskScheduler and has the same optional arguments.  \n\nA rule holds an *action* (move, copy or delete) and a regular expression *src_re*. The *action* will be executed if *src_re* matches the path of an event. In case where *action* is copy or move, use *dst_re* as destination path. Subgroups and/or named-subgroups may be used in *src_re* and *dst_re*.  \nAutomatically create possibly missing sub-directories if *auto_create* is set to True. Set the mode and ownership of moved or copied files/directories and newly created sub-directories to *filemode* and *dirmode*. Override destination files if *override* is set to True.  \nIf *action* is delete, delete non-empty directories if *rec* is set to True.  \n```python\nmove_rule = FileManagerRule(\n    action=\"move\",\n    src_re=\"^/src_path/(?P<path>.*).to_move$\",\n    dst_re=\"/dst_path/\\g<path>\",\n    auto_create=False,\n    rec=False,\n    filemode=None,\n    dirmode=None,\n    user=None,\n    group=None,\n    override=False)\n\ndelete_rule = FileManagerRule(\n    action=\"delete\",\n    src_re=\"^/src_path/(?P<path>.*).to_delete$\",\n    rec=False)\n\nfile_sched = FileManagerScheduler(\n    rules=[move_rule, delete_rule])\n```\n\n## Event maps\nMap specific events to one or multiple schedulers. Ignore the event if the scheduler is set to None. Use **Cancel** to cancel a scheduled task within a scheduler.  \nThis is an example which schedules tasks for newly created files if they are not modified, moved or deleted within the delay time of the scheduler.\n```python\nevent_map = {\n    \"IN_ACCESS\": None,\n    \"IN_ATTRIB\": None,\n    \"IN_CLOSE_NOWRITE\": None,\n    \"IN_CLOSE_WRITE\": task_sched,\n    \"IN_CREATE\": task_sched,\n    \"IN_DELETE\": Cancel(task_sched),\n    \"IN_DELETE_SELF\": Cancel(task_sched),\n    \"IN_IGNORED\": None,\n    \"IN_MODIFY\": Cancel(task_sched),\n    \"IN_MOVE_SELF\": None,\n    \"IN_MOVED_FROM\": Cancel(task_sched),\n    \"IN_MOVED_TO\": task_sched,\n    \"IN_OPEN\": None,\n    \"IN_Q_OVERFLOW\": None,\n    \"IN_UNMOUNT\": Cancel(task_sched)}\n\n# It is possible to instantiate an event map with a default scheduler set for every event\nevent_map = EventMap(default_sched=task_sched)\n```\nThe following events are available:\n* **IN_ACCESS**: a file was accessed\n* **IN_ATTRIB**: a metadata changed\n* **IN_CLOSE_NOWRITE**: an unwritable file was closed\n* **IN_CLOSE_WRITE**: a writable file was closed\n* **IN_CREATE**: a file/directory was created\n* **IN_DELETE**: a file/directory was deleted\n* **IN_DELETE_SELF**: a watched item itself was deleted\n* **IN_IGNORED**: raised when a watch is removed, probably useless for you\n* **IN_MODIFY**: a file was modified\n* **IN_MOVE_SELF**: a watched item was moved, currently its full pathname destination can only be known if its source and destination directories were both watched. Otherwise, the file is still being watched but you cannot rely anymore on the given path attribute *event.path*\n* **IN_MOVED_FROM**: a file/directory in a watched directory was moved from another specified watched directory. Can trace the full move of an item when IN_MOVED_TO is available too, in this case if the moved item is itself watched, its path will be updated (see IN_MOVE_SELF)\n* **IN_MOVED_TO**: a file/directory was moved to another specified watched directory (see IN_MOVE_FROM)\n* **IN_OPEN**: a file was opened\n* **IN_Q_OVERFLOW**: the event queue overflown. This event is not associated with any watch descriptor\n* **IN_UNMOUNT**: when backing filesystem was unmounted. Notified to each watch of this filesystem\n\n## Pyinotifyd\npyinotifyd requires you to define a variable called **pyinotifyd** within the config file, which contains an instance of the Pyinotifyd class. Set the optional list of *watches* and the *shutdown_timeout*. Pyinotifyd will wait *shutdown_timeout* seconds for pending tasks to complete before shutdown. Use *logname* in log messages.  \n```python\npyinotifyd = Pyinotifyd(\n    watches=[],\n    shutdown_timeout=30,\n    logname=\"daemon\")\n```\n\n### Watches\nA watch connects the *path* to an *event_map*. Automatically add a watch on each sub-directories in *path* if *rec* is set to True. If *auto_add* is True, a watch will be added automatically on newly created sub-directories in *path*. All events for paths matching one of the regular expressions in *exclude_filter* are ignored. If the value of *exclude_filter* is a string, it is assumed to be a path to a file from which the list of regular expressions will be read.\n```python\n# Add a watch directly to Pyinotifyd.\npyinotifyd.add_watch(\n    path=\"/src_path\",\n    event_map=event_map,\n    rec=False,\n    auto_add=False,\n    exclude_filter=[\"^/src_path/subpath$\"])\n\n# Or instantiate and add it\nw = Watch(\n    path=\"/src_path\",\n    event_map=event_map,\n    rec=False,\n    auto_add=False,\n    exclude_filter=[\"^/src_path/subpath$\"])\n\npyinotifyd.add_watch(watch=w)\n```\n\n## Logging\nPythons [logging](https://docs.python.org/3/howto/logging.html) framework is used to log messages (see https://docs.python.org/3/howto/logging.html).  \nThe following loglevels are available:\n* DEBUG\n* INFO\n* WARNING\n* ERROR\n* CRITICAL\n```python\n# Configure global loglevel\nsetLoglevel(INFO)\n\n# Configure loglevel per logname.\nsetLoglevel(INFO, logname=\"daemon\")\n```\n\n### Syslog\nSend log messages to the local syslog server.\n```python\n# Enable logging to local syslog server (/dev/log).\n# Use *address* to specify a different target.\nenableSyslog(loglevel=INFO, address=\"/dev/log\")\n\n# Enable syslog per logname\nenableSyslog(lglevel=INFO, name=\"daemon\")\n```\n\n# Examples\n\n## Schedule python method for all events on files and directories\n```python\nimport logging\n\nasync def custom_job(event, task_id):\n    logging.info(f\"{task_id}: execute example task: {event}\")\n\ntask_sched = TaskScheduler(\n    job=custom_job,\n    files=True,\n    dirs=True)\n\nevent_map = EventMap(\n    default_sched=task_sched)\n\npyinotifyd = Pyinotifyd()\npyinotifyd.add_watch(\n\tpath=\"/src_path\",\n\tevent_map=event_map,\n\trec=True,\n\tauto_add=True)\n```\n\n## Schedule shell commands for specific events on files\n```python\nshell_sched = ShellScheduler(\n    cmd=\"/usr/local/sbin/task.sh {pathname}\",\n    files=True,\n    dirs=False)\n\nevent_map = {\n    \"IN_WRITE_CLOSE\": shell_sched}\n\npyinotifyd = Pyinotifyd()\npyinotifyd.add_watch(\n\tpath=\"/src_path\",\n\tevent_map=event_map,\n\trec=True,\n\tauto_add=True)\n```\n\n## Move, copy or delete newly created files after a delay\n```python\nmove_rule = FileManagerRule(\n    action=\"move\",\n    src_re=\"^/src_path/(?P<path>.*)\\.to_move$\",\n    dst_re=\"/dst_path/\\g<path>\",\n    auto_create=True,\n    filemode=0o644,\n    dirmode=0o755)\n\ncopy_rule = FileManagerRule(\n    action=\"copy\",\n    src_re=\"^/src_path/(?P<path>.*)\\.to_copy$\",\n    dst_re=\"/dst_path/\\g<path>\",\n    auto_create=True,\n    filemode=0o644,\n    dirmode=0o755)\n\ndelete_rule = FileManagerRule(\n    action=\"delete\",\n    src_re=\"^/src_path/(?P<path>.*)\\.to_delete$\",\n    rec=False)\n\nfile_sched = FileManagerScheduler(\n    rules=[move_rule, copy_rule, delete_rule],\n    delay=60,\n    files=True,\n    dirs=False)\n\nevent_map = {\n    \"IN_CLOSE_WRITE\": file_sched,\n    \"IN_CREATE\": file_sched,\n    \"IN_DELETE\": Cancel(file_sched),\n    \"IN_DELETE_SELF\": Cancel(file_sched),\n    \"IN_MODIFY\": Cancel(file_sched),\n    \"IN_MOVED_FROM\": Cancel(file_sched),\n    \"IN_MOVED_TO\": file_sched,\n    \"IN_UNMOUNT\": Cancel(file_sched)}\n\n# Please note that the shutdown timeout should be greater than the greatest scheduler delay,\n# otherwise pending tasks may get cancelled during shutdown.\npyinotifyd = Pyinotifyd(shutdown_timeout=35)\npyinotifyd.add_watch(\n\tpath=\"/src_path\",\n\tevent_map=event_map,\n\trec=True,\n\tauto_add=True)\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/spacefreak86/pyinotifyd",
    "keywords": "inotify daemon",
    "license": "GPL 3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyinotifyd",
    "package_url": "https://pypi.org/project/pyinotifyd/",
    "platform": null,
    "project_url": "https://pypi.org/project/pyinotifyd/",
    "project_urls": {
      "Homepage": "https://github.com/spacefreak86/pyinotifyd"
    },
    "release_url": "https://pypi.org/project/pyinotifyd/0.0.8/",
    "requires_dist": [
      "pyinotify"
    ],
    "requires_python": ">=3.7",
    "summary": "Monitoring filesystems events with inotify on Linux and execute tasks.",
    "version": "0.0.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15475491,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad58c5d70c81f848e985950387f7e044f96a1333bc223d2e682373688a219b54",
          "md5": "fc54a56c20e48f3147e834b82669fdc2",
          "sha256": "9391e65fc94c5026c79a07b8b0945e9272fd1251148d1ff95829b5b99e8c842c"
        },
        "downloads": -1,
        "filename": "pyinotifyd-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fc54a56c20e48f3147e834b82669fdc2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 27971,
        "upload_time": "2020-11-05T12:12:11",
        "upload_time_iso_8601": "2020-11-05T12:12:11.442790Z",
        "url": "https://files.pythonhosted.org/packages/ad/58/c5d70c81f848e985950387f7e044f96a1333bc223d2e682373688a219b54/pyinotifyd-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aac898ae7bcad0a7763fe2e622781c01bee8bd45144a66254cb16c07a21b6d2c",
          "md5": "8a7e31d9cceee60798f92f97dd80728b",
          "sha256": "f755b2ccae0714d9af08358c1ce0cb9e6f524d56189672de0d9ef38cc1090400"
        },
        "downloads": -1,
        "filename": "pyinotifyd-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8a7e31d9cceee60798f92f97dd80728b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 27998,
        "upload_time": "2020-11-05T12:12:16",
        "upload_time_iso_8601": "2020-11-05T12:12:16.278792Z",
        "url": "https://files.pythonhosted.org/packages/aa/c8/98ae7bcad0a7763fe2e622781c01bee8bd45144a66254cb16c07a21b6d2c/pyinotifyd-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd91135e5a33667f8e70f07bcdd9ce3f8965268435e2a375428865e0034930cc",
          "md5": "0144abe0236082a315da516f26f15527",
          "sha256": "d01e0e714bfce5c6ec92976fd4d5b3bdc87098f01cca324eb162c516cd5d1472"
        },
        "downloads": -1,
        "filename": "pyinotifyd-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0144abe0236082a315da516f26f15527",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 28290,
        "upload_time": "2020-11-09T19:11:31",
        "upload_time_iso_8601": "2020-11-09T19:11:31.698797Z",
        "url": "https://files.pythonhosted.org/packages/bd/91/135e5a33667f8e70f07bcdd9ce3f8965268435e2a375428865e0034930cc/pyinotifyd-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d459241534f156247c1b0fb21ac21953566ba3ede66e70e76d1d648cc82277ba",
          "md5": "7d669a17415635cf3e94328aa51c7cb9",
          "sha256": "4516dccb8aff8d68a6e621608492f44d0b1bfbacbedb2cec9ec77e130b4eedc2"
        },
        "downloads": -1,
        "filename": "pyinotifyd-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7d669a17415635cf3e94328aa51c7cb9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 31112,
        "upload_time": "2020-11-09T19:11:33",
        "upload_time_iso_8601": "2020-11-09T19:11:33.618913Z",
        "url": "https://files.pythonhosted.org/packages/d4/59/241534f156247c1b0fb21ac21953566ba3ede66e70e76d1d648cc82277ba/pyinotifyd-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eda2c26c10a6b38378fc3294bd79e68fb77cfb265e61fa7faa7203d555706486",
          "md5": "4d6b9bcc9c1223fedb3b8604d80522ef",
          "sha256": "1f3d966ddc774fadbe1ae8b90f9320beee8fa39d7159af515f25c7164f8c019e"
        },
        "downloads": -1,
        "filename": "pyinotifyd-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4d6b9bcc9c1223fedb3b8604d80522ef",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 28451,
        "upload_time": "2020-11-09T21:19:42",
        "upload_time_iso_8601": "2020-11-09T21:19:42.396657Z",
        "url": "https://files.pythonhosted.org/packages/ed/a2/c26c10a6b38378fc3294bd79e68fb77cfb265e61fa7faa7203d555706486/pyinotifyd-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8aed465d5fc9f61c020b6d385121b07134cb232b607ffdb51a28aa6f5814586f",
          "md5": "dab679fb5ef9ba0b38e2fd76967a22c8",
          "sha256": "b6bfdd4847080786a23eb42f31f4e5fb4179045d5c04caa48cc5ceeac16ade2b"
        },
        "downloads": -1,
        "filename": "pyinotifyd-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "dab679fb5ef9ba0b38e2fd76967a22c8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 31087,
        "upload_time": "2020-11-09T21:19:44",
        "upload_time_iso_8601": "2020-11-09T21:19:44.336214Z",
        "url": "https://files.pythonhosted.org/packages/8a/ed/465d5fc9f61c020b6d385121b07134cb232b607ffdb51a28aa6f5814586f/pyinotifyd-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "241ef1d5c3bfcc4422a9cf6b5035fe9c22081c75f28813432ad43bd6cea6e7d3",
          "md5": "9a59d815a146fb879e725103bb17446e",
          "sha256": "5483b2251200f5dd4387715db6fefbf0ea51dcf24046e9e55ff7afd7993cc9a0"
        },
        "downloads": -1,
        "filename": "pyinotifyd-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9a59d815a146fb879e725103bb17446e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 28661,
        "upload_time": "2020-11-09T23:55:14",
        "upload_time_iso_8601": "2020-11-09T23:55:14.443106Z",
        "url": "https://files.pythonhosted.org/packages/24/1e/f1d5c3bfcc4422a9cf6b5035fe9c22081c75f28813432ad43bd6cea6e7d3/pyinotifyd-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ec5ff2470e2e56c1283791e1275af595cdef3c1ddda6cf4f52ea57424d9d5a1b",
          "md5": "11de3227bf081c39ffdba024e91afc14",
          "sha256": "34257f0652adc36adcf361af080d95d431157003f3092394dd9bacfcd04621f5"
        },
        "downloads": -1,
        "filename": "pyinotifyd-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "11de3227bf081c39ffdba024e91afc14",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 31358,
        "upload_time": "2020-11-09T23:55:15",
        "upload_time_iso_8601": "2020-11-09T23:55:15.849762Z",
        "url": "https://files.pythonhosted.org/packages/ec/5f/f2470e2e56c1283791e1275af595cdef3c1ddda6cf4f52ea57424d9d5a1b/pyinotifyd-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "848a35a15e2c818050a82bfef239fb62c0daa09fb8a40213d7b860015421ebc4",
          "md5": "0769011bc22405d66bf8aaa52633a613",
          "sha256": "51982325d9549fb4d89651c013c8d0ca9393a3e07aabf901beec01cd3aeb152c"
        },
        "downloads": -1,
        "filename": "pyinotifyd-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0769011bc22405d66bf8aaa52633a613",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 28630,
        "upload_time": "2020-11-24T13:12:42",
        "upload_time_iso_8601": "2020-11-24T13:12:42.498295Z",
        "url": "https://files.pythonhosted.org/packages/84/8a/35a15e2c818050a82bfef239fb62c0daa09fb8a40213d7b860015421ebc4/pyinotifyd-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4d1e1dae6880736bbcb70e157e2cf65adb977bcc3c1d941f8408346fce5d6e82",
          "md5": "a9a7cda1ecfedbb136252ac8d7a29e8d",
          "sha256": "0a0d417936c83ac1b44e6f9781c74ac4136053613042bea0c2d4d260d0c66147"
        },
        "downloads": -1,
        "filename": "pyinotifyd-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "a9a7cda1ecfedbb136252ac8d7a29e8d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 31342,
        "upload_time": "2020-11-24T13:12:44",
        "upload_time_iso_8601": "2020-11-24T13:12:44.138036Z",
        "url": "https://files.pythonhosted.org/packages/4d/1e/1dae6880736bbcb70e157e2cf65adb977bcc3c1d941f8408346fce5d6e82/pyinotifyd-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fc914f597472a872f812fe50cc87475d6ebf254879dab260e27f26f3f2f7d8ab",
          "md5": "88e3e02ddd35814b50a0052c4ae08307",
          "sha256": "fda2050389878844508cbf24725e52275990161576efe732c0d002a298837e13"
        },
        "downloads": -1,
        "filename": "pyinotifyd-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "88e3e02ddd35814b50a0052c4ae08307",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 28869,
        "upload_time": "2022-08-12T07:58:47",
        "upload_time_iso_8601": "2022-08-12T07:58:47.275433Z",
        "url": "https://files.pythonhosted.org/packages/fc/91/4f597472a872f812fe50cc87475d6ebf254879dab260e27f26f3f2f7d8ab/pyinotifyd-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fb7aa06c517624d47d45aa693a0de8a87b095de883bb78c393fdfca3c5558b1d",
          "md5": "191716f8a785559647d3717237cb13a6",
          "sha256": "7b752ac45bb09dabf7895e8978594625b1d7ca1930d6ad4c7cfb7bad53e6077d"
        },
        "downloads": -1,
        "filename": "pyinotifyd-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "191716f8a785559647d3717237cb13a6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 32258,
        "upload_time": "2022-08-12T07:58:50",
        "upload_time_iso_8601": "2022-08-12T07:58:50.044531Z",
        "url": "https://files.pythonhosted.org/packages/fb/7a/a06c517624d47d45aa693a0de8a87b095de883bb78c393fdfca3c5558b1d/pyinotifyd-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1112c1e02790fe53af8138c3c32ba80a2662c7e970090ace4fd77f97559d9279",
          "md5": "af3b6458c26d239ff770e4f2c52c791e",
          "sha256": "154488602fb2a46fda86e67e0b35dd94322166633c8ae473650d24f4faabb7b7"
        },
        "downloads": -1,
        "filename": "pyinotifyd-0.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "af3b6458c26d239ff770e4f2c52c791e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 28997,
        "upload_time": "2022-09-08T11:48:59",
        "upload_time_iso_8601": "2022-09-08T11:48:59.447762Z",
        "url": "https://files.pythonhosted.org/packages/11/12/c1e02790fe53af8138c3c32ba80a2662c7e970090ace4fd77f97559d9279/pyinotifyd-0.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0a5d434cb0f63154db403f57af9ac9dfb3af56fd1eedf103cabe5a738c2ff341",
          "md5": "2316d10ed814c254775691ab54796758",
          "sha256": "89ca7eb2b06115601f5501e6941dfb178fca8559fd78d6ebd564fc647daf8f96"
        },
        "downloads": -1,
        "filename": "pyinotifyd-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "2316d10ed814c254775691ab54796758",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 32319,
        "upload_time": "2022-09-08T11:49:01",
        "upload_time_iso_8601": "2022-09-08T11:49:01.593486Z",
        "url": "https://files.pythonhosted.org/packages/0a/5d/434cb0f63154db403f57af9ac9dfb3af56fd1eedf103cabe5a738c2ff341/pyinotifyd-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0c2964797663542132c3149afe10d38fbd444c4da36ecb35cb0130b6166c767d",
          "md5": "bdf04e2f1fb476461f9072c65490f4ec",
          "sha256": "6ea40a6266e8f3213ad038a9838976473f024a4dbc56f5ab0ec5d1685f74c51c"
        },
        "downloads": -1,
        "filename": "pyinotifyd-0.0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bdf04e2f1fb476461f9072c65490f4ec",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 29316,
        "upload_time": "2022-10-20T15:52:49",
        "upload_time_iso_8601": "2022-10-20T15:52:49.148947Z",
        "url": "https://files.pythonhosted.org/packages/0c/29/64797663542132c3149afe10d38fbd444c4da36ecb35cb0130b6166c767d/pyinotifyd-0.0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a9a4f494bc30a09346769acc9769bcabd38782911ba56fb210babcef0e3904a2",
          "md5": "f23700a69a675d9082c4950b543b4d04",
          "sha256": "6b5d10e98376a086bb833ddb4417abafbedf87748c4ec0a52805d67e8a1a37ca"
        },
        "downloads": -1,
        "filename": "pyinotifyd-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "f23700a69a675d9082c4950b543b4d04",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 32789,
        "upload_time": "2022-10-20T15:52:51",
        "upload_time_iso_8601": "2022-10-20T15:52:51.474120Z",
        "url": "https://files.pythonhosted.org/packages/a9/a4/f494bc30a09346769acc9769bcabd38782911ba56fb210babcef0e3904a2/pyinotifyd-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0c2964797663542132c3149afe10d38fbd444c4da36ecb35cb0130b6166c767d",
        "md5": "bdf04e2f1fb476461f9072c65490f4ec",
        "sha256": "6ea40a6266e8f3213ad038a9838976473f024a4dbc56f5ab0ec5d1685f74c51c"
      },
      "downloads": -1,
      "filename": "pyinotifyd-0.0.8-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "bdf04e2f1fb476461f9072c65490f4ec",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 29316,
      "upload_time": "2022-10-20T15:52:49",
      "upload_time_iso_8601": "2022-10-20T15:52:49.148947Z",
      "url": "https://files.pythonhosted.org/packages/0c/29/64797663542132c3149afe10d38fbd444c4da36ecb35cb0130b6166c767d/pyinotifyd-0.0.8-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a9a4f494bc30a09346769acc9769bcabd38782911ba56fb210babcef0e3904a2",
        "md5": "f23700a69a675d9082c4950b543b4d04",
        "sha256": "6b5d10e98376a086bb833ddb4417abafbedf87748c4ec0a52805d67e8a1a37ca"
      },
      "downloads": -1,
      "filename": "pyinotifyd-0.0.8.tar.gz",
      "has_sig": false,
      "md5_digest": "f23700a69a675d9082c4950b543b4d04",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 32789,
      "upload_time": "2022-10-20T15:52:51",
      "upload_time_iso_8601": "2022-10-20T15:52:51.474120Z",
      "url": "https://files.pythonhosted.org/packages/a9/a4/f494bc30a09346769acc9769bcabd38782911ba56fb210babcef0e3904a2/pyinotifyd-0.0.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}