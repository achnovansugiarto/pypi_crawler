{
  "info": {
    "author": "Igor Rodrigues da Costa",
    "author_email": "igor.bioinfo@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Bio-Informatics"
    ],
    "description": "phylomito\n===========\n\nA python script for mitochondrial supermatrix phylogenomics.\n\n```\nusage: phylomito.py [-h] -i [INPATH] [-o [OUTPATH]]\n                    [-e [EXTENSION [EXTENSION ...]]] [-b [BOOTSTRAP]]\n                    [-p [PROTEIN]] [-g [GENE_TREE]] [-d [DLOOP]]\n\n```\n\nThis program is licensed under GPLv3.\n\n## Quick start:\n\n* Save your genebank files in a folder (for example, ./genebank/) and create a folder for the output (./output/). \n* Make sure your genebank files have the extension '.gbk' or '.gb'.\n* Run the command:\n```\npython phylomito.py -i ./genebank/ -o ./outpath/\n```\n* Your results will be in the ./outpath/ folder. The final tree file will be named `all_nuc.phy_phyml_tree.txt` by default.\n\n## Requisites:\n\nYou need to install [PhyML](http://www.atgc-montpellier.fr/phyml/binaries.php), [Clustal Omega](http://www.clustal.org/omega/), [python 3](https://www.python.org/downloads/) and the [Biopython library](http://biopython.org/wiki/Download) to run this program.\n\nThis program was tested on a Linux machine.\n\n## How does it work:\n\nThis program finds all genebank files (mitogenomes) in a folder and saves, in a multifasta file, each gene that is present in all mitogenomes. \nThese files are aligned with CLUSTALW and the alignment is concatenated in a single file (`all_nuc.aln`, by default) that contains all aligned genes from all mitogenomes. \nPhyml uses this file to generate a Maximum Likelihood tree.\n \n## Advanced features:\n\n* You can generate an amino acid alignment and phylogeny using the -p (or --protein) flag. The default is nucleotidic alignment and phylogeny.\n* Running the program with the -g (or --gene_tree) flag will generate a tree for every gene. \n* Using -g along with -d (or --dloop) will generate a tree of the DLOOP region. \nThe supermatrix tree will also include this region. Do not use the -d flag with the -p flag, as it will translate the DLOOP region, generating gibberish.\n* Default number of bootstrap resamples is 100. You can change this with the -b (or --bootstrap) flag. \nChanging this will affect how long it takes to run the phylogeny.\n\n## Common errors:\n\nThe most common problem is bad formatted genebank files. The error will look like this:\n\n```\nmitochondria1.gb\nmitochondria2.gb\nmitochondria3.gb\nCOX_1 is not a known gene. Replace the CDS gene id with one of the following:\nND1  ND2  COX1  COX2  ATP8  ATP6  ND3  ND4L  ND4  ND5  CYTB  ND6  COX3\nTraceback (most recent call last):\n  File \"/path/phylomito/phylomito.py\", line 315, in <module>\n    main(args)\n  File \"/path/phylomito/phylomito.py\", line 70, in main\n    split_seqs(inpath, outpath, protein, extension, dloop)\n  File \"/path/phylomito/phylomito.py\", line 140, in split_seqs\n    gene_key = gene_dict[header]\nKeyError: 'COX_1'\n```\n\nWhere `mitochondria3.gb` is the file where the error was found.\nIn this case the solution is to edit your file and replace all occurrences of `COX_1` with `COX1`.\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/igorrcosta/phylomito",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "phylomito",
    "package_url": "https://pypi.org/project/phylomito/",
    "platform": "",
    "project_url": "https://pypi.org/project/phylomito/",
    "project_urls": {
      "Homepage": "https://github.com/igorrcosta/phylomito"
    },
    "release_url": "https://pypi.org/project/phylomito/0.1.0/",
    "requires_dist": [
      "biopython",
      "anytree"
    ],
    "requires_python": "",
    "summary": "Supermatrix phylogenetics using complete mitochondrial genomes",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10930236,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "93ba829a3e2c5d75ae6f2883f1daa940cc96273813f9690239e97f0308cacbec",
          "md5": "6c2acbd034ce472216eddecf529d7871",
          "sha256": "dbd6917b8acc7aafed2cffc8b5c6e457cbe8d358c1e1384868c28a3e8c2a581c"
        },
        "downloads": -1,
        "filename": "phylomito-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6c2acbd034ce472216eddecf529d7871",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 991060,
        "upload_time": "2021-07-16T19:12:13",
        "upload_time_iso_8601": "2021-07-16T19:12:13.219016Z",
        "url": "https://files.pythonhosted.org/packages/93/ba/829a3e2c5d75ae6f2883f1daa940cc96273813f9690239e97f0308cacbec/phylomito-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "716a12fc7436d5339fe06795fadc88aa9d0b5c2992920147c6cb82b308789409",
          "md5": "fc9cf312d9c9e8a48afda671f102043b",
          "sha256": "a2014a58a2be38f86dc274ef9ed61a25961dadf1b65175e9815c58fc59e91f81"
        },
        "downloads": -1,
        "filename": "phylomito-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fc9cf312d9c9e8a48afda671f102043b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 992001,
        "upload_time": "2021-07-16T19:12:16",
        "upload_time_iso_8601": "2021-07-16T19:12:16.170394Z",
        "url": "https://files.pythonhosted.org/packages/71/6a/12fc7436d5339fe06795fadc88aa9d0b5c2992920147c6cb82b308789409/phylomito-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "93ba829a3e2c5d75ae6f2883f1daa940cc96273813f9690239e97f0308cacbec",
        "md5": "6c2acbd034ce472216eddecf529d7871",
        "sha256": "dbd6917b8acc7aafed2cffc8b5c6e457cbe8d358c1e1384868c28a3e8c2a581c"
      },
      "downloads": -1,
      "filename": "phylomito-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6c2acbd034ce472216eddecf529d7871",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 991060,
      "upload_time": "2021-07-16T19:12:13",
      "upload_time_iso_8601": "2021-07-16T19:12:13.219016Z",
      "url": "https://files.pythonhosted.org/packages/93/ba/829a3e2c5d75ae6f2883f1daa940cc96273813f9690239e97f0308cacbec/phylomito-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "716a12fc7436d5339fe06795fadc88aa9d0b5c2992920147c6cb82b308789409",
        "md5": "fc9cf312d9c9e8a48afda671f102043b",
        "sha256": "a2014a58a2be38f86dc274ef9ed61a25961dadf1b65175e9815c58fc59e91f81"
      },
      "downloads": -1,
      "filename": "phylomito-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "fc9cf312d9c9e8a48afda671f102043b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 992001,
      "upload_time": "2021-07-16T19:12:16",
      "upload_time_iso_8601": "2021-07-16T19:12:16.170394Z",
      "url": "https://files.pythonhosted.org/packages/71/6a/12fc7436d5339fe06795fadc88aa9d0b5c2992920147c6cb82b308789409/phylomito-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}