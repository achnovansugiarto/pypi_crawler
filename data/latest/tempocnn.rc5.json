{
  "info": {
    "author": "Hendrik Schreiber tagtraum industries incorporated, Raleigh, NC, USA",
    "author_email": "hs@tagtraum.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "License :: OSI Approved :: GNU Affero General Public License v3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Multimedia :: Sound/Audio :: Analysis",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": ".. image:: https://img.shields.io/badge/License-AGPL%20v3-blue.svg\n   :target: https://www.gnu.org/licenses/agpl-3.0\n\n.. image:: https://zenodo.org/badge/DOI/10.5281/zenodo.1492353.svg\n   :target: https://doi.org/10.5281/zenodo.1492353\n\n.. image:: https://zenodo.org/badge/DOI/10.5281/zenodo.3553592.svg\n   :target: https://doi.org/10.5281/zenodo.3553592\n\n.. image:: https://zenodo.org/badge/DOI/10.5281/zenodo.4245546.svg\n   :target: https://doi.org/10.5281/zenodo.4245546\n\n.. image:: https://github.com/hendriks73/tempo-cnn/workflows/Build%20and%20Test/badge.svg\n   :target: https://github.com/hendriks73/tempo-cnn/actions\n\n.. image:: https://badge.fury.io/py/tempocnn.svg\n    :target: https://badge.fury.io/py/tempocnn\n\n=========\nTempo-CNN\n=========\n\nTempo-CNN is a simple CNN-based framework for estimating temporal properties\nof music tracks featuring trained models from several publications\n[1]_ [2]_ [3]_ [4]_.\n\nFirst and foremost, Tempo-CNN is a tempo estimator. To determine the *global* tempo of\nan audio file, simply run the script\n\n.. code-block:: console\n\n    tempo -i my_audio.wav\n\nTo create a *local* tempo `\"tempogram\" <#tempogram>`_, run\n\n.. code-block:: console\n\n    tempogram my_audio.wav\n\nFor a complete list of options, run either script with the parameter ``--help``.\n\nFor programmatic use via the Python API, please see `here <#programmatic-usage>`_.\n\nInstallation\n============\n\nIn a clean Python 3.6 or 3.7 environment, simply run:\n\n.. code-block:: console\n\n    pip install tempocnn\n\n\nIf you rather want to install from source, clone this repo and run\n``setup.py install`` using Python 3.6 or 3.7:\n\n.. code-block:: console\n\n    git clone https://github.com/hendriks73/tempo-cnn.git\n    cd tempo-cnn\n    python setup.py install\n\n\nModels and Formats\n==================\n\nYou may specify other models and output formats (`MIREX <http://www.music-ir.org/mirex/wiki/2018:Audio_Tempo_Estimation>`_,\n`JAMS <https://github.com/marl/jams>`_) via command line parameters.\n\nE.g. to create JAMS as output format and the model originally used in the ISMIR 2018\npaper [1]_, please run\n\n.. code-block:: console\n\n    tempo -m ismir2018 --jams -i my_audio.wav\n\nFor MIREX-style output, add the ``--mirex`` parameter.\n\n\nDeepTemp Models\n===============\n\nTo use one of the ``DeepTemp`` models from [3]_ (see also repo\n`directional_cnns <https://github.com/hendriks73/directional_cnns>`_), run\n\n.. code-block:: console\n\n    tempo -m deeptemp --jams -i my_audio.wav\n\nor,\n\n.. code-block:: console\n\n    tempo -m deeptemp_k24 --jams -i my_audio.wav\n\nif you want to use a higher capacity model (some ``k``-values are supported).\n``deepsquare`` and ``shallowtemp`` models may also be used.\n\nNote that some models may be downloaded (and cached) at execution time.\n\nMazurka Models\n==============\n\nTo use DT-Maz models from [4]_, run\n\n.. code-block:: console\n\n    tempo -m mazurka -i my_audio.wav\n\nThis defaults to the model named ``dt_maz_v_fold0``.\nYou may choose another fold ``[0-4]`` or another split ``[v|m]``.\nSo to use fold 3 from the *M*-split, use\n\n.. code-block:: console\n\n    tempo -m dt_maz_m_fold3 -i my_audio.wav\n\nNote that Mazurka models may be used to estimate a global tempo, but were\nactually trained to create `tempograms <#tempogram>`_ for Chopin\nMazurkas [4]_.\n\nWhile it's cumbersome to list the split definitions for the Version folds,\nthe Mazurka folds are easily defined:\n\n- ``fold0`` was tested on ``Chopin_Op068No3`` and validated on ``Chopin_Op017No4``\n- ``fold1`` was tested on ``Chopin_Op017No4`` and validated on ``Chopin_Op024No2``\n- ``fold2`` was tested on ``Chopin_Op024No2`` and validated on ``Chopin_Op030No2``\n- ``fold3`` was tested on ``Chopin_Op030No2`` and validated on ``Chopin_Op063No3``\n- ``fold4`` was tested on ``Chopin_Op063No3`` and validated on ``Chopin_Op068No3``\n\nThe networks were trained on recordings of the three remaining Mazurkas.\nIn essence this means, **do not** estimate the local tempo for ``Chopin_Op024No2`` using\n``dt_maz_m_fold0``, because ``Chopin_Op024No2`` was used in training.\n\nBatch Processing\n================\n\nFor batch processing, you may want to run ``tempo`` like this:\n\n.. code-block:: console\n\n    find /your_audio_dir/ -name '*.wav' -print0 | xargs -0 tempo -d /output_dir/ -i\n\nThis will recursively search for all ``.wav`` files in ``/your_audio_dir/``, analyze then\nand write the results to individual files in ``/output_dir/``. Because the model is only\nloaded once, this method of processing is much faster than individual program starts.\n\nInterpolation\n=============\n\nTo increase accuracy for greater than integer-precision, you may want to enable quadratic interpolation.\nYou can do so by setting the ``--interpolate`` flag. Obviously, this only makes sense for tracks\nwith a very stable tempo:\n\n.. code-block:: console\n\n    tempo -m ismir2018 --interpolate -i my_audio.wav\n\nTempogram\n=========\n\nInstead of estimating a global tempo, Tempo-CNN can also estimate local tempi in the\nform of a tempogram. This can be useful for identifying tempo drift.\n\nTo create such a tempogram, run\n\n.. code-block:: console\n\n    tempogram -p my_audio.wav\n\nAs output, ``tempogram`` will create a ``.png`` file. Additional options to select different models\nand output formats are available.\n\nYou may use the ``--csv`` option to export local tempo estimates in a parseable format and the\n``--hop-length`` option to change temporal resolution.\nThe parameters ``--sharpen`` and ``--norm-frame`` let you post-process the image.\n\n\nGreek Folk\n==========\n\nTempo-CNN provides experimental support for temporal property estimation of Greek\nfolk music [2]_. The corresponding models are named ``fma2018`` (for tempo) and ``fma2018-meter``\n(for meter). To estimate the meter's numerator, run\n\n.. code-block:: console\n\n    meter -m fma2018-meter -i my_audio.wav\n\nProgrammatic Usage\n==================\n\nAfter `installation <#installation>`_, you may use\nthe package programmatically.\n\nExample for *global* tempo estimation:\n\n.. code-block:: python\n\n    from tempocnn.classifier import TempoClassifier\n    from tempocnn.feature import read_features\n\n    model_name = 'cnn'\n    input_file = 'some_audio_file.mp3'\n\n    # initialize the model (may be re-used for multiple files)\n    classifier = TempoClassifier(model_name)\n\n    # read the file's features\n    features = read_features(input_file)\n\n    # estimate the global tempo\n    tempo = classifier.estimate_tempo(features, interpolate=False)\n    print(f\"Estimated global tempo: {tempo}\")\n\n\nExample for *local* tempo estimation:\n\n\n.. code-block:: python\n\n    from tempocnn.classifier import TempoClassifier\n    from tempocnn.feature import read_features\n\n    model_name = 'cnn'\n    input_file = 'some_audio_file.mp3'\n\n    # initialize the model (may be re-used for multiple files)\n    classifier = TempoClassifier(model_name)\n\n    # read the file's features, specify hop_length for temporal resolution\n    features = read_features(input_file, frames=256, hop_length=32)\n\n    # estimate local tempi, this returns tempo classes, i.e., a distribution\n    local_tempo_classes = classifier.estimate(features)\n\n    # find argmax per frame and convert class index to BPM value\n    max_predictions = np.argmax(local_tempo_classes, axis=1)\n    local_tempi = classifier.to_bpm(max_predictions)\n    print(f\"Estimated local tempo classes: {local_tempi}\")\n\n\nLicense\n=======\n\nSource code and models can be licensed under the GNU AFFERO GENERAL PUBLIC LICENSE v3.\nFor details, please see the `LICENSE <LICENSE>`_ file.\n\n\nCitation\n========\n\nIf you use Tempo-CNN in your work, please consider citing it.\n\nOriginal publication:\n\n.. code-block:: latex\n\n   @inproceedings{SchreiberM18_TempoCNN_ISMIR,\n      Title = {A Single-Step Approach to Musical Tempo Estimation Using a Convolutional Neural Network},\n      Author = {Schreiber, Hendrik and M{\\\"u}ller Meinard},\n      Booktitle = {Proceedings of the 19th International Society for Music Information Retrieval Conference ({ISMIR})},\n      Pages = {98--105},\n      Month = {9},\n      Year = {2018},\n      Address = {Paris, France},\n      doi = {10.5281/zenodo.1492353},\n      url = {https://doi.org/10.5281/zenodo.1492353}\n   }\n\nShallowTemp, DeepTemp, and DeepSquare models:\n\n.. code-block:: latex\n\n   @inproceedings{SchreiberM19_CNNKeyTempo_SMC,\n      Title = {Musical Tempo and Key Estimation using Convolutional Neural Networks with Directional Filters},\n      Author = {Hendrik Schreiber and Meinard M{\\\"u}ller},\n      Booktitle = {Proceedings of the Sound and Music Computing Conference ({SMC})},\n      Pages = {47--54},\n      Year = {2019},\n      Address = {M{\\'a}laga, Spain}\n   }\n\nMazurka models:\n\n.. code-block:: latex\n\n   @inproceedings{SchreiberZM20_LocalTempo_ISMIR,\n      Title = {Modeling and Estimating Local Tempo: A Case Study on Chopinâ€™s Mazurkas},\n      Author = {Hendrik Schreiber and Frank Zalkow and Meinard M{\\\"u}ller},\n      Booktitle = {Proceedings of the 21th International Society for Music Information Retrieval Conference ({ISMIR})},\n      Pages = {773--779},\n      Year = {2020},\n      Address = {Montreal, QC, Canada}\n   }\n\nReferences\n==========\n\n.. [1] Hendrik Schreiber, Meinard MÃ¼ller, `A Single-Step Approach to Musical Tempo Estimation\n    Using a Convolutional Neural Network <https://zenodo.org/record/1492353/files/141_Paper.pdf>`_,\n    Proceedings of the 19th International Society for Music Information\n    Retrieval Conference (ISMIR), Paris, France, Sept. 2018.\n.. [2] Hendrik Schreiber, `Technical Report: Tempo and Meter Estimation for\n    Greek Folk Music Using Convolutional Neural Networks and Transfer Learning\n    <http://www.tagtraum.com/download/2018_SchreiberGreekFolkTempoMeter.pdf>`_,\n    8th International Workshop on Folk Music Analysis (FMA),\n    Thessaloniki, Greece, June 2018.\n.. [3] Hendrik Schreiber, Meinard MÃ¼ller, `Musical Tempo and Key Estimation using Convolutional\n    Neural Networks with Directional Filters\n    <http://smc2019.uma.es/articles/P1/P1_07_SMC2019_paper.pdf>`_,\n    Proceedings of the Sound and Music Computing Conference (SMC),\n    MÃ¡laga, Spain, 2019.\n.. [4] Hendrik Schreiber, Frank Zalkow, Meinard MÃ¼ller,\n    `Modeling and Estimating Local Tempo: A Case Study on Chopinâ€™s\n    Mazurkas <https://program.ismir2020.net/static/final_papers/14.pdf>`_,\n    Proceedings of the 21st International Society for Music Information\n    Retrieval Conference (ISMIR), MontrÃ©al, QC, Canada, Oct. 2020.\n\n=======\nChanges\n=======\n\n0.0.6:\n - Require h5py<3.0.0, to avoid model loading issues.\n\n0.0.5:\n - Moved to TensorFlow 1.15.4.\n - Consolidated version info.\n - Consolidated requirements.\n - Switched to pytest.\n - Officially support Python 3.7.\n - Enabled GitHub actions for packaging and testing.\n - Added Pypi workflow.\n - Cache models locally.\n - Load models from GitHub.\n - Turned off TensorFlow debug logging.\n - Migrated scripts to entry points.\n - Removed charset encoding comments.\n\n0.0.4:\n - Added support for DeepTemp, DeepSquare, and ShallowTemp models.\n - Added support for Mazurka models.\n - Added support for exporting data from tempograms.\n - Added support for framewise normalization in tempograms.\n - Moved to TensorFlow 1.15.2.\n - Print number of model parameters.\n\n0.0.3:\n - Added flag ``--interpolate`` for ``tempo`` to increase accuracy.\n - Migrated models to TensorFlow 1.10.1.\n\n0.0.2:\n - Added ``-d`` option for improved batch processing (tempo)\n - Improved jams output\n - Moved to librosa 0.6.2\n - Continue processing batch, even when encountering an error\n\n0.0.1:\n - Initial version\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hendriks73/tempo-cnn",
    "keywords": "",
    "license": "AGPL",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tempocnn",
    "package_url": "https://pypi.org/project/tempocnn/",
    "platform": "",
    "project_url": "https://pypi.org/project/tempocnn/",
    "project_urls": {
      "Homepage": "https://github.com/hendriks73/tempo-cnn"
    },
    "release_url": "https://pypi.org/project/tempocnn/0.0.6/",
    "requires_dist": [
      "tensorflow (==1.15.4)",
      "scipy (>=1.0.1)",
      "librosa (>=0.6.2)",
      "jams (>=0.3.1)",
      "matplotlib (>=3.0.0)",
      "h5py (<3.0.0,>=2.7.0)",
      "setuptools (>=41.0.0)",
      "pytest ; extra == 'testing'",
      "coverage ; extra == 'testing'",
      "pytest-console-scripts ; extra == 'testing'"
    ],
    "requires_python": ">=3.6",
    "summary": "Python audio signal processing library for musical tempo detection",
    "version": "0.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8623882,
  "releases": {
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6e43b93734b6ffdf9a9dccb921e29fb8d3650486bccd4d12db3d5bc8a75fc0c4",
          "md5": "4ed57dd45b4cc08e39e134474f62d865",
          "sha256": "f02f364b6482f6c00bb9527bf88964aade1a7bb56dd816869bdb84c769c3ef62"
        },
        "downloads": -1,
        "filename": "tempocnn-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4ed57dd45b4cc08e39e134474f62d865",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 70041386,
        "upload_time": "2020-10-14T12:33:31",
        "upload_time_iso_8601": "2020-10-14T12:33:31.493651Z",
        "url": "https://files.pythonhosted.org/packages/6e/43/b93734b6ffdf9a9dccb921e29fb8d3650486bccd4d12db3d5bc8a75fc0c4/tempocnn-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "430fa8152f4a6ab026e2a81d3af33017aa67567498ca061d3e2c677f43b4ee70",
          "md5": "0a053b7d9b93cd73b70d043b6617d501",
          "sha256": "0a916729e711b33754d20f704708ee4cc914f3f60adb5ee2ef1ea4059c6107c3"
        },
        "downloads": -1,
        "filename": "tempocnn-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "0a053b7d9b93cd73b70d043b6617d501",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 69992098,
        "upload_time": "2020-10-14T12:34:51",
        "upload_time_iso_8601": "2020-10-14T12:34:51.689872Z",
        "url": "https://files.pythonhosted.org/packages/43/0f/a8152f4a6ab026e2a81d3af33017aa67567498ca061d3e2c677f43b4ee70/tempocnn-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5.dev0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1a804a217907fed913befbe92a9f84aef6e827dba27b6bdcea4a5997fe08b826",
          "md5": "0cfe409a65a729ab2dc3eb3e262adca6",
          "sha256": "e3bc5fab75e14bfe633a963bffc8bd57943b67ad9559c45523b3833ab2a3d471"
        },
        "downloads": -1,
        "filename": "tempocnn-0.0.5.dev0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0cfe409a65a729ab2dc3eb3e262adca6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 70042277,
        "upload_time": "2020-10-12T12:45:31",
        "upload_time_iso_8601": "2020-10-12T12:45:31.535308Z",
        "url": "https://files.pythonhosted.org/packages/1a/80/4a217907fed913befbe92a9f84aef6e827dba27b6bdcea4a5997fe08b826/tempocnn-0.0.5.dev0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d908d24fb14f6563988ee5f5db6869183a10823513ce700ec7f30148399c1ffe",
          "md5": "3103fa0b846dc180027d340d66c413ad",
          "sha256": "0812e51ce5c5f620df77dd2f9cdcf0820d2f2db2d9996adfe0c46954fc6b6779"
        },
        "downloads": -1,
        "filename": "tempocnn-0.0.5.dev0.tar.gz",
        "has_sig": false,
        "md5_digest": "3103fa0b846dc180027d340d66c413ad",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 69988406,
        "upload_time": "2020-10-12T12:47:33",
        "upload_time_iso_8601": "2020-10-12T12:47:33.737859Z",
        "url": "https://files.pythonhosted.org/packages/d9/08/d24fb14f6563988ee5f5db6869183a10823513ce700ec7f30148399c1ffe/tempocnn-0.0.5.dev0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5.dev1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "636549e27c99e84518b84e06f6bf28b2b462e625d7b8dd976124ec1e232aacd8",
          "md5": "d24f634b15d56c5678609b13db3b5514",
          "sha256": "f2b8d9bab0d15af37e64a10f608f27501f804cd9d6a06dcbd1784c5b7d17de71"
        },
        "downloads": -1,
        "filename": "tempocnn-0.0.5.dev1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d24f634b15d56c5678609b13db3b5514",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 70041219,
        "upload_time": "2020-10-14T11:45:54",
        "upload_time_iso_8601": "2020-10-14T11:45:54.613351Z",
        "url": "https://files.pythonhosted.org/packages/63/65/49e27c99e84518b84e06f6bf28b2b462e625d7b8dd976124ec1e232aacd8/tempocnn-0.0.5.dev1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fd856993eb25208a6a52945fba7f92c8e024ff4b1744f988536b504980d8565e",
          "md5": "18ca5027cc431a2c8c7137f7543f9fbd",
          "sha256": "5ebedd56f07837a8655d383aae1a1057dca030d6b556b7c3b242b9c68961a671"
        },
        "downloads": -1,
        "filename": "tempocnn-0.0.5.dev1.tar.gz",
        "has_sig": false,
        "md5_digest": "18ca5027cc431a2c8c7137f7543f9fbd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 69991695,
        "upload_time": "2020-10-14T11:47:59",
        "upload_time_iso_8601": "2020-10-14T11:47:59.502520Z",
        "url": "https://files.pythonhosted.org/packages/fd/85/6993eb25208a6a52945fba7f92c8e024ff4b1744f988536b504980d8565e/tempocnn-0.0.5.dev1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5.dev2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f25dde8fda9a7358293eb47c96fa21640495e4989ca90cad245763eed2a30eef",
          "md5": "7f885d5196b20c198d4aaea2d08a6566",
          "sha256": "edaa06fd1820cd2ff70473b96630c74e17099df59af672a382d6d504eb0d3260"
        },
        "downloads": -1,
        "filename": "tempocnn-0.0.5.dev2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7f885d5196b20c198d4aaea2d08a6566",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 70041455,
        "upload_time": "2020-10-14T12:12:10",
        "upload_time_iso_8601": "2020-10-14T12:12:10.822342Z",
        "url": "https://files.pythonhosted.org/packages/f2/5d/de8fda9a7358293eb47c96fa21640495e4989ca90cad245763eed2a30eef/tempocnn-0.0.5.dev2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "360a4f3264b42dc2bb12e1fbd335e3d73837f73211aefe274d9e2f9d4c08d824",
          "md5": "23912978e1a517fc7abda229fd7883f3",
          "sha256": "9e09b558a4bdea4122c1b96aaed5a3edd6d4a7dc3aa48355ebb3eb051e3ef7ae"
        },
        "downloads": -1,
        "filename": "tempocnn-0.0.5.dev2.tar.gz",
        "has_sig": false,
        "md5_digest": "23912978e1a517fc7abda229fd7883f3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 69992208,
        "upload_time": "2020-10-14T12:14:01",
        "upload_time_iso_8601": "2020-10-14T12:14:01.886720Z",
        "url": "https://files.pythonhosted.org/packages/36/0a/4f3264b42dc2bb12e1fbd335e3d73837f73211aefe274d9e2f9d4c08d824/tempocnn-0.0.5.dev2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6ae37ba505d3e4d814919dd87242436aeb73e17d857da2c8c34366e22d119f91",
          "md5": "36dfd8aaf66e9fbf42fb89cee0583506",
          "sha256": "f566d51df2610b6e246afa436cfc682e93f024148826095347a4b80e3b2fe75e"
        },
        "downloads": -1,
        "filename": "tempocnn-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "36dfd8aaf66e9fbf42fb89cee0583506",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 70041434,
        "upload_time": "2020-11-10T13:26:19",
        "upload_time_iso_8601": "2020-11-10T13:26:19.071851Z",
        "url": "https://files.pythonhosted.org/packages/6a/e3/7ba505d3e4d814919dd87242436aeb73e17d857da2c8c34366e22d119f91/tempocnn-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a634d5c56011297f02ae33028d52f92c95e779896b7ecdd88c961fb788ddbad6",
          "md5": "9d0bb29924b6e643e45a77c68390017f",
          "sha256": "34db7f0d7fa9df93a293c71573b6fe290eb143736c511f2a7c93f25a53416642"
        },
        "downloads": -1,
        "filename": "tempocnn-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "9d0bb29924b6e643e45a77c68390017f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 69992162,
        "upload_time": "2020-11-10T13:27:37",
        "upload_time_iso_8601": "2020-11-10T13:27:37.283182Z",
        "url": "https://files.pythonhosted.org/packages/a6/34/d5c56011297f02ae33028d52f92c95e779896b7ecdd88c961fb788ddbad6/tempocnn-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6ae37ba505d3e4d814919dd87242436aeb73e17d857da2c8c34366e22d119f91",
        "md5": "36dfd8aaf66e9fbf42fb89cee0583506",
        "sha256": "f566d51df2610b6e246afa436cfc682e93f024148826095347a4b80e3b2fe75e"
      },
      "downloads": -1,
      "filename": "tempocnn-0.0.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "36dfd8aaf66e9fbf42fb89cee0583506",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 70041434,
      "upload_time": "2020-11-10T13:26:19",
      "upload_time_iso_8601": "2020-11-10T13:26:19.071851Z",
      "url": "https://files.pythonhosted.org/packages/6a/e3/7ba505d3e4d814919dd87242436aeb73e17d857da2c8c34366e22d119f91/tempocnn-0.0.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a634d5c56011297f02ae33028d52f92c95e779896b7ecdd88c961fb788ddbad6",
        "md5": "9d0bb29924b6e643e45a77c68390017f",
        "sha256": "34db7f0d7fa9df93a293c71573b6fe290eb143736c511f2a7c93f25a53416642"
      },
      "downloads": -1,
      "filename": "tempocnn-0.0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "9d0bb29924b6e643e45a77c68390017f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 69992162,
      "upload_time": "2020-11-10T13:27:37",
      "upload_time_iso_8601": "2020-11-10T13:27:37.283182Z",
      "url": "https://files.pythonhosted.org/packages/a6/34/d5c56011297f02ae33028d52f92c95e779896b7ecdd88c961fb788ddbad6/tempocnn-0.0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}