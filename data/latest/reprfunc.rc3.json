{
  "info": {
    "author": "",
    "author_email": "Kale Kundert <kale@thekunderts.net>",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3.7"
    ],
    "description": "********\nreprfunc\n********\n\n.. image:: https://img.shields.io/pypi/v/reprfunc.svg\n   :alt: Last release\n   :target: https://pypi.python.org/pypi/reprfunc\n\n.. image:: https://img.shields.io/pypi/pyversions/reprfunc.svg\n   :alt: Python version\n   :target: https://pypi.python.org/pypi/reprfunc\n\n.. image:: \n   https://img.shields.io/github/workflow/status/kalekundert/reprfunc/Test%20and%20release/master\n   :alt: Test status\n   :target: https://github.com/kalekundert/reprfunc/actions\n\n.. image:: https://img.shields.io/coveralls/kalekundert/reprfunc.svg\n   :alt: Test coverage\n   :target: https://coveralls.io/github/kalekundert/reprfunc?branch=master\n\n.. image:: https://img.shields.io/github/last-commit/kalekundert/reprfunc?logo=github\n   :alt: Last commit\n   :target: https://github.com/kalekundert/reprfunc\n\n``reprfunc`` is a library that makes it easier to implement ``__repr__()`` for \nyour classes.  It implements a few common repr strategies (e.g. mimicking the \ncontructor, getting values from a custom dunder method, displaying a hard-coded \nlist of object attributes) and allows you use them simply by assigning to \n``__repr__``.\n\nInstallation\n============\n\nInstall ``reprfunc`` from PyPI::\n\n  $ pip install reprfunc\n\nVersion numbers obey semantic versioning.\n\nExamples\n========\nMake a repr-string that matches the arguments to the constructor::\n\n  >>> from reprfunc import *\n  >>> class MyObj:\n  ...\n  ...     def __init__(self, a, b):\n  ...         self.a = a\n  ...         self.b = b\n  ...\n  ...     __repr__ = repr_from_init\n  ...\n  >>> MyObj(1, 2)\n  MyObj(a=1, b=2)\n\nThe same as above, but with variable positional and keyword arguments.  These \nare handled as expected::\n\n  >>> class MyObj:\n  ...\n  ...     def __init__(self, *args, **kwargs):\n  ...         self.args = args\n  ...         self.kwargs = kwargs\n  ...\n  ...     __repr__ = repr_from_init\n  ...\n  >>> MyObj(1, 2, a=3, b=4)\n  MyObj(1, 2, a=3, b=4)\n\nThe same as above, but demonstrating a variety of ways to control the output::\n\n  >>> class _MyObj:\n  ...\n  ...     def __init__(self, a, b, c, d=None, _state={}):\n  ...         self.a = a\n  ...         self._b = b\n  ...         self.c = c\n  ...         self.d = d\n  ...         self._state = _state\n  ...\n  ...     __repr__ = repr_from_init(\n  ...         # This option lets you change the class name at the beginning of \n  ...         # the repr-string.\n  ...         cls='MyObj',\n  ...\n  ...         # This option lets you explicitly map argument names to either\n  ...         # attribute names, or callables that accept the object in\n  ...         # question as their only argument.\n  ...         attrs={'b': '_b'},\n  ...\n  ...         # These options allows you to exclude certain arguments from the\n  ...         # repr-string.  The first is unconditional, and the second\n  ...         # depends on the value of the given function.  By default,\n  ...         # attributes with the same value as the default (like `d` in this\n  ...         # example) will be skipped automatically.  Note that the\n  ...         # predicate can be `True` to unconditionally include an argument,\n  ...         # even if it still has its default value.\n  ...         skip=['_state'],\n  ...         predicates={'c': lambda self, x: x},\n  ...\n  ...         # This option allows you to specify that certain arguments should \n  ...         # be rendered using the \"positional\" syntax.  Positional-only\n  ...         # arguments are rendered this way by default.\n  ...         positional=['a'],\n  ...     )\n  >>> _MyObj(1, 2, 0, _state={3: 4})\n  MyObj(1, b=2)\n\nMake a repr-string that gets its values from a ``__reprargs__()`` method \ndefined by the object in question::\n\n  >>> class MyObj:\n  ...\n  ...     def __init__(self, a, b):\n  ...         self.a = a\n  ...         self.b = b\n  ...\n  ...     def __reprargs__(self):\n  ...         # This function should return a list and a dictionary.  Any\n  ...         # values in the list will be rendered as positional arugments,\n  ...         # and any items in the dictionary will be rendered as keyword\n  ...         # arguments.\n  ...         return [self.a], {'b': self.b}\n  ...\n  ...     __repr__ = repr_from_dunder\n  ...\n  >>> MyObj(1, 2)\n  MyObj(1, b=2)\n\nMake a repr-string from a hard-coded list of attributes::\n\n  >>> class MyObj:\n  ...\n  ...     def __init__(self, a, b):\n  ...         self.a = a\n  ...         self.b = b\n  ...\n  ...     # Note that 'b' is specified twice here.  You can avoid this by\n  ...     # specifying ``b=Key()``.\n  ...     __repr__ = repr_from_attrs('a', b='b')\n  ...\n  >>> MyObj(1, 2)\n  MyObj(1, b=2)\n\nUse ``ReprBuilder`` to help formatting bespoke repr-strings.  You can think of \nthis class as a collection of positional and keyword arguments that knows how \nto format itself.  It provides many more methods for registering \npositional/keyword arguments beyond what's demonstrated here, so consult the \nsource code if this seems useful::\n\n  >>> class MyObj:\n  ...\n  ...    def __init__(self, a, b):\n  ...        self.a = a\n  ...        self.b = b\n  ...\n  ...    def __repr__(self):\n  ...        builder = ReprBuilder(self)\n  ...        builder.add_positional_attr('a')\n  ...        builder.add_keyword_attr('b')\n  ...        return str(builder)\n  ...\n  >>> MyObj(1, 2)\n  MyObj(1, b=2)\n\nAlternatives\n============\nThere are several other libraries out there that help with formatting \nrepr-strings.  Overall, the reason I wrote ``reprfunc`` was to make something \nmore flexible and more succinct than the alternatives.\n\n- ``represent``: This is a pretty similar library overall.  The main difference \n  is that it uses class decorators and/or inheritance to add its repr functions \n  to your objects.  One big advantage of this approach is that it allows \n  \"pretty-print\" reprs for IPython to be added at the same time, but it also \n  has a heavier feel.\n\n- ``reprutils``: This is also a pretty similar library, but it only supports \n  the equivalent of ``repr_from_attrs()``.\n\n- ``reprtools``: This library doesn't have much documentation, but seems to be \n  mostly superseded by f-strings.\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "reprfunc",
    "package_url": "https://pypi.org/project/reprfunc/",
    "platform": null,
    "project_url": "https://pypi.org/project/reprfunc/",
    "project_urls": {
      "Bug Tracker": "https://github.com/kalekundert/reprfunc/issues",
      "Continuous Integration": "https://github.com/kalekundert/reprfunc/actions",
      "Documentation": "https://reprfunc.readthedocs.io/en/latest/",
      "Test Coverage": "https://coveralls.io/github/kalekundert/reprfunc",
      "Version Control": "https://github.com/kalekundert/reprfunc"
    },
    "release_url": "https://pypi.org/project/reprfunc/0.2.0/",
    "requires_dist": [
      "sphinx ; extra == \"doc\"",
      "sphinx_rtd_theme ; extra == \"doc\"",
      "autoclasstoc ; extra == \"doc\"",
      "pytest ; extra == \"test\"",
      "pytest-cov ; extra == \"test\"",
      "parametrize_from_file ; extra == \"test\"",
      "voluptuous ; extra == \"test\"",
      "coveralls ; extra == \"test\""
    ],
    "requires_python": "~=3.7",
    "summary": "Utilities for making useful string representations of objects.",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13959838,
  "releases": {
    "0.0.0": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "0b0d6b1e05d9219a664817f2a64c883cd95dd0e3549d73d40abd7794bfd3d798",
          "md5": "ced8be0ee98830e8f5fa084105bf03c9",
          "sha256": "6530c4fa2a003d6de6a30341aac40ba32e6bede5b0d843b0d91474e4971b5412"
        },
        "downloads": -1,
        "filename": "reprfunc-0.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ced8be0ee98830e8f5fa084105bf03c9",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": "~=3.7",
        "size": 4865,
        "upload_time": "2022-05-27T18:29:02",
        "upload_time_iso_8601": "2022-05-27T18:29:02.739449Z",
        "url": "https://files.pythonhosted.org/packages/0b/0d/6b1e05d9219a664817f2a64c883cd95dd0e3549d73d40abd7794bfd3d798/reprfunc-0.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "88d6b76ab4b43ed3f5013c15d054312181da99d80d61797aab1ef17854ce875c",
          "md5": "744e066bd8ba84bde0888e99673d3c59",
          "sha256": "a6ef11bffb7498a411678c475f534dec37ddc7c5d7213ad916b91c552cf807fa"
        },
        "downloads": -1,
        "filename": "reprfunc-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "744e066bd8ba84bde0888e99673d3c59",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.7",
        "size": 11514,
        "upload_time": "2022-05-27T18:29:04",
        "upload_time_iso_8601": "2022-05-27T18:29:04.953112Z",
        "url": "https://files.pythonhosted.org/packages/88/d6/b76ab4b43ed3f5013c15d054312181da99d80d61797aab1ef17854ce875c/reprfunc-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f3101318ea549bd2c0255ee1be416c8972e100ef89650ac12bf970780c0f5a57",
          "md5": "d4081b2bbba13524b143259656617e00",
          "sha256": "0380b2133ad0c6377a2588dc1a7463d9798ea7347ac838b5b31134a098b32a2c"
        },
        "downloads": -1,
        "filename": "reprfunc-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d4081b2bbba13524b143259656617e00",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": "~=3.7",
        "size": 5032,
        "upload_time": "2022-05-27T20:14:48",
        "upload_time_iso_8601": "2022-05-27T20:14:48.989246Z",
        "url": "https://files.pythonhosted.org/packages/f3/10/1318ea549bd2c0255ee1be416c8972e100ef89650ac12bf970780c0f5a57/reprfunc-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6d7082c6895aa66f0caff7efd3744c26fa3d6465c30f397ebbb1b9e1bbfbcae8",
          "md5": "414fa167b558c7990aa0df9156904c1b",
          "sha256": "4a4d6bacae49c46fed0858a84002deec10dfb9291561defba3b80bc7b1ccf68c"
        },
        "downloads": -1,
        "filename": "reprfunc-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "414fa167b558c7990aa0df9156904c1b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.7",
        "size": 12171,
        "upload_time": "2022-05-27T20:14:50",
        "upload_time_iso_8601": "2022-05-27T20:14:50.625860Z",
        "url": "https://files.pythonhosted.org/packages/6d/70/82c6895aa66f0caff7efd3744c26fa3d6465c30f397ebbb1b9e1bbfbcae8/reprfunc-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b348863ac53a1f34008b2d2de334b78ca5611908a69a29397b5e5c2f6b28782a",
          "md5": "8939133c633245219bd940be72c65d89",
          "sha256": "f39d33150df758afb34ae9b7c284835cb1023fa9d7e65a94fcc55854d9149138"
        },
        "downloads": -1,
        "filename": "reprfunc-0.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8939133c633245219bd940be72c65d89",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": "~=3.7",
        "size": 5477,
        "upload_time": "2022-05-27T22:29:14",
        "upload_time_iso_8601": "2022-05-27T22:29:14.856336Z",
        "url": "https://files.pythonhosted.org/packages/b3/48/863ac53a1f34008b2d2de334b78ca5611908a69a29397b5e5c2f6b28782a/reprfunc-0.2.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a974c13f83d67167769333ab770bf10a8e389915a77e4196a225f3374d4edf79",
          "md5": "de97da62dd77e3ce1cd6b65ada82f76c",
          "sha256": "7ef2df08375b0945a7b367fcc4416c93d5caaffa772cd151b8e7fa9dddc93516"
        },
        "downloads": -1,
        "filename": "reprfunc-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "de97da62dd77e3ce1cd6b65ada82f76c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.7",
        "size": 13214,
        "upload_time": "2022-05-27T22:29:16",
        "upload_time_iso_8601": "2022-05-27T22:29:16.106656Z",
        "url": "https://files.pythonhosted.org/packages/a9/74/c13f83d67167769333ab770bf10a8e389915a77e4196a225f3374d4edf79/reprfunc-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b348863ac53a1f34008b2d2de334b78ca5611908a69a29397b5e5c2f6b28782a",
        "md5": "8939133c633245219bd940be72c65d89",
        "sha256": "f39d33150df758afb34ae9b7c284835cb1023fa9d7e65a94fcc55854d9149138"
      },
      "downloads": -1,
      "filename": "reprfunc-0.2.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8939133c633245219bd940be72c65d89",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": "~=3.7",
      "size": 5477,
      "upload_time": "2022-05-27T22:29:14",
      "upload_time_iso_8601": "2022-05-27T22:29:14.856336Z",
      "url": "https://files.pythonhosted.org/packages/b3/48/863ac53a1f34008b2d2de334b78ca5611908a69a29397b5e5c2f6b28782a/reprfunc-0.2.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a974c13f83d67167769333ab770bf10a8e389915a77e4196a225f3374d4edf79",
        "md5": "de97da62dd77e3ce1cd6b65ada82f76c",
        "sha256": "7ef2df08375b0945a7b367fcc4416c93d5caaffa772cd151b8e7fa9dddc93516"
      },
      "downloads": -1,
      "filename": "reprfunc-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "de97da62dd77e3ce1cd6b65ada82f76c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "~=3.7",
      "size": 13214,
      "upload_time": "2022-05-27T22:29:16",
      "upload_time_iso_8601": "2022-05-27T22:29:16.106656Z",
      "url": "https://files.pythonhosted.org/packages/a9/74/c13f83d67167769333ab770bf10a8e389915a77e4196a225f3374d4edf79/reprfunc-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}