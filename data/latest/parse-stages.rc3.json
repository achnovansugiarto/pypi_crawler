{
  "info": {
    "author": "",
    "author_email": "Peter Pentchev <roam@ringlet.net>",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "<!--\nSPDX-FileCopyrightText: Peter Pentchev <roam@ringlet.net>\nSPDX-License-Identifier: BSD-2-Clause\n-->\n\n# Parse a mini-language for selecting objects by tag or name\n\nThis library is mostly useful for command-line parsing by other tools like\n`tox-stages` and `nox-stages`. It may be used to parse e.g. a command-line\nspecification like `@check and not pylint` or `@tests or ruff` and then\nmatch it against a list of objects that have names and lists of tags.\n\n## Parse stage specifications\n\nThe `parse_spec()` function parses a string specification into\na `BoolExpr` object that may later be used to select matching objects\n(e.g. test environments).\n\nThe specification mini-language may roughly be described as:\n\n    expr ::= and_expr [\"or\" and_expr...]\n    and_expr ::= not_expr [\"and\" not_expr...]\n    not_expr ::= [\"not\"] atom\n    atom ::= tag | keyword\n    tag ::= \"@\" characters\n    keyword ::= characters\n    characters ::= [A-Za-z0-9_-]+\n\nThus, all of the following:\n\n- `@check`\n- `@check and @quick`\n- `@tests and not examples`\n- `not @tests`\n- `pep8 or not @quick and @check`\n\n...are valid expressions,\nwith the \"not\", \"and\", and \"or\" keywords having their usual precedence\n(`pep8 or not @quick and @check` is parsed as\n`pep8 or ((@not quick) and @check)`, but the mini-language does not\nsupport parentheses yet).\n\n## Check whether an object matches a parsed specification\n\nThe `parse-stages` library provides two base dataclasses for objects that\nmay be matched against parsed expressions: `TaggedFrozen` and `Tagged`.\nBoth classes have the same members:\n\n- `name`: a string\n- `tags`: a list of strings\n- `get_keyword_haystacks()`: a method that returns a list of strings,\n  `[self.name]` unless overridden\n\nWhen a `BoolExpr` object's `evaluate()` method is called for a specific\n`TaggedFrozen` or `Tagged` object, it checks whether the specification\nmatches the tags and keywords defined for this object. Tags are matched\nexactly, while a keyword is considered to match if it is contained in\nthe checked string; e.g. `pep` would match both `pep8` and `exp_pep563`,\nwhile `@black` would not match a `black-reformat` tag.\n\nThe `get_keyword_haystacks()` method returns the strings to look in for\nmatching keywords. By default, it only returns the `name` field;\nhowever, it may be extended, e.g. for Nox sessions it may also return\nthe name of the Python function that implements the session, for test\nclasses with methods it may return the class name and the method name, etc.\n\n## Examples\n\nParse a list of stage specifications into expressions that may later be\nmatched against test environment definitions:\n\n    e_check = parse_stages.parse_spec(\"@check\")\n    e_check_quick = parse_stages.parse_spec(\"@check and @quick\")\n    e_check_no_ruff = parse_stages.parse_spec(\"@check and not ruff\")\n    \n    specs = [(spec, parse_stages.parse_spec(spec)) for spec in args.stage_specs]\n\nSelect the test environments that match the specification:\n\n    # Obtain a list (okay, a dictionary) of test environments in some way\n    tox_envs = get_tox_environments()  # {\"ruff\": {\"tags\": [\"check\", \"quick\"]}, ...}\n\n    # Convert them to objects that the parsed expressions can match\n    all_envs = [\n        parse_stages.TaggedFrozen(name, env[\"tags\"])\n        for name, env in tox_envs.items()\n    ]\n\n    # Or define our own class that may hold additional information\n    @dataclasses.dataclass(frozen=True)\n    class TestEnv(parse_stages.TaggedFrozen):\n        \"\"\"A single test environment: name, tags, etc.\"\"\"\n        ...\n\n    all_envs = [TestEnv(name, env[\"tags\"], ...) for name, env in tox_envs.items()]\n\n    # Select the ones that match the \"@check\" expression\n    matched = [env for env in all_envs if e_check.evaluate(env)]\n\n    # Or if we only care about the names...\n    quick_names = [env.name for env in all_envs if e_check_quick.evaluate(env)]\n\n\n## Contact\n\nThe `parse-stages` library was written by [Peter Pentchev][roam].\nIt is developed in [a GitLab repository][gitlab]. This documentation is\nhosted at [Ringlet][ringlet-parse-stages].\n\n[roam]: mailto:roam@ringlet.net \"Peter Pentchev\"\n[gitlab]: https://gitlab.com/ppentchev/parse-stages \"The parse-stages GitLab repository\"\n[ringlet-parse-stages]: https://devel.ringlet.net/devel/parse-stages/ \"The Ringlet parse-stages homepage\"\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "parse-stages",
    "package_url": "https://pypi.org/project/parse-stages/",
    "platform": null,
    "project_url": "https://pypi.org/project/parse-stages/",
    "project_urls": {
      "Changes": "https://devel.ringlet.net/devel/parse-stages/changes/",
      "Homepage": "https://devel.ringlet.net/devel/parse-stages/",
      "Issue Tracker": "https://gitlab.com/ppentchev/parse-stages/-/issues",
      "Source Code": "https://gitlab.com/ppentchev/parse-stages"
    },
    "release_url": "https://pypi.org/project/parse-stages/0.1.2/",
    "requires_dist": [
      "pyparsing (<4,>=3)"
    ],
    "requires_python": ">=3.8",
    "summary": "Parse an expression for selecting stages and tags",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17255360,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ae4e393b8d1de6576b531979fab84b8cfb3544d0bbaac5f7b00323681f5fcac0",
          "md5": "923170ce4b63b954ef766f51a1e1fc8b",
          "sha256": "1a1874305e234b982a27081d0808e3b0e362633bb5a33794a84e06ddaf29c862"
        },
        "downloads": -1,
        "filename": "parse_stages-0.1.0-py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "923170ce4b63b954ef766f51a1e1fc8b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 8885,
        "upload_time": "2023-01-25T12:48:42",
        "upload_time_iso_8601": "2023-01-25T12:48:42.022905Z",
        "url": "https://files.pythonhosted.org/packages/ae/4e/393b8d1de6576b531979fab84b8cfb3544d0bbaac5f7b00323681f5fcac0/parse_stages-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc4713785862052fbc9e1f9bc9be31e516a32f994faa4c4f94abcf1765854de6",
          "md5": "bf907f2e097ccc19cedee61e4e3fddb3",
          "sha256": "08e8bf2e9793fed880009633aef348912b0289abe52ce3aa61d3cc4dff8bf842"
        },
        "downloads": -1,
        "filename": "parse_stages-0.1.0.tar.gz",
        "has_sig": true,
        "md5_digest": "bf907f2e097ccc19cedee61e4e3fddb3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 11137,
        "upload_time": "2023-01-25T12:48:44",
        "upload_time_iso_8601": "2023-01-25T12:48:44.511455Z",
        "url": "https://files.pythonhosted.org/packages/dc/47/13785862052fbc9e1f9bc9be31e516a32f994faa4c4f94abcf1765854de6/parse_stages-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c8f353db8088f519193762783b1e9616a753fc7556f7bb56472abf7ae02aa693",
          "md5": "ceb76b7110175d7d24f060fb28e2a6b9",
          "sha256": "d6e26747d823e75128f901affbb3b7aa0cea38f3a344e4ff8b3b13b0e210896d"
        },
        "downloads": -1,
        "filename": "parse_stages-0.1.1-py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "ceb76b7110175d7d24f060fb28e2a6b9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 10504,
        "upload_time": "2023-02-04T23:36:01",
        "upload_time_iso_8601": "2023-02-04T23:36:01.488138Z",
        "url": "https://files.pythonhosted.org/packages/c8/f3/53db8088f519193762783b1e9616a753fc7556f7bb56472abf7ae02aa693/parse_stages-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f8ee65e0b0a4199c8a2c5ca48badad0ac4b743b133581c94630927eff11f1501",
          "md5": "aff570520049d62b3bf9f37009dd26c7",
          "sha256": "3c8eba6c98f2a281cc00a91e9fb37c8591c9c5f80c550f0f2f9d387db0f69526"
        },
        "downloads": -1,
        "filename": "parse_stages-0.1.1.tar.gz",
        "has_sig": true,
        "md5_digest": "aff570520049d62b3bf9f37009dd26c7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 12081,
        "upload_time": "2023-02-04T23:36:04",
        "upload_time_iso_8601": "2023-02-04T23:36:04.085485Z",
        "url": "https://files.pythonhosted.org/packages/f8/ee/65e0b0a4199c8a2c5ca48badad0ac4b743b133581c94630927eff11f1501/parse_stages-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "920c878cad1bbc816725a6d80dc4e5efeb1dd254cd2878933b1c7e359ea2c48e",
          "md5": "07e6cac1c0e157aae2d418fc84cb1f40",
          "sha256": "bcf054ed312fc413077d5dba0eac441afad21023b511aece226d3484a611ab1e"
        },
        "downloads": -1,
        "filename": "parse_stages-0.1.2-py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "07e6cac1c0e157aae2d418fc84cb1f40",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 8230,
        "upload_time": "2023-03-11T19:51:02",
        "upload_time_iso_8601": "2023-03-11T19:51:02.227052Z",
        "url": "https://files.pythonhosted.org/packages/92/0c/878cad1bbc816725a6d80dc4e5efeb1dd254cd2878933b1c7e359ea2c48e/parse_stages-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5129aa81957f67612cf87d6d2cc76272a0dfb1f440f99c3e813c268dd3f9c4b9",
          "md5": "b79ce02f815718bea7fdc59866b69b6a",
          "sha256": "1a5fb9ce5e14b7f860a67984c61753a2550eb1af604bbc5ef9ef449679efccc8"
        },
        "downloads": -1,
        "filename": "parse_stages-0.1.2.tar.gz",
        "has_sig": true,
        "md5_digest": "b79ce02f815718bea7fdc59866b69b6a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 15220,
        "upload_time": "2023-03-11T19:51:04",
        "upload_time_iso_8601": "2023-03-11T19:51:04.783462Z",
        "url": "https://files.pythonhosted.org/packages/51/29/aa81957f67612cf87d6d2cc76272a0dfb1f440f99c3e813c268dd3f9c4b9/parse_stages-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "920c878cad1bbc816725a6d80dc4e5efeb1dd254cd2878933b1c7e359ea2c48e",
        "md5": "07e6cac1c0e157aae2d418fc84cb1f40",
        "sha256": "bcf054ed312fc413077d5dba0eac441afad21023b511aece226d3484a611ab1e"
      },
      "downloads": -1,
      "filename": "parse_stages-0.1.2-py3-none-any.whl",
      "has_sig": true,
      "md5_digest": "07e6cac1c0e157aae2d418fc84cb1f40",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 8230,
      "upload_time": "2023-03-11T19:51:02",
      "upload_time_iso_8601": "2023-03-11T19:51:02.227052Z",
      "url": "https://files.pythonhosted.org/packages/92/0c/878cad1bbc816725a6d80dc4e5efeb1dd254cd2878933b1c7e359ea2c48e/parse_stages-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5129aa81957f67612cf87d6d2cc76272a0dfb1f440f99c3e813c268dd3f9c4b9",
        "md5": "b79ce02f815718bea7fdc59866b69b6a",
        "sha256": "1a5fb9ce5e14b7f860a67984c61753a2550eb1af604bbc5ef9ef449679efccc8"
      },
      "downloads": -1,
      "filename": "parse_stages-0.1.2.tar.gz",
      "has_sig": true,
      "md5_digest": "b79ce02f815718bea7fdc59866b69b6a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 15220,
      "upload_time": "2023-03-11T19:51:04",
      "upload_time_iso_8601": "2023-03-11T19:51:04.783462Z",
      "url": "https://files.pythonhosted.org/packages/51/29/aa81957f67612cf87d6d2cc76272a0dfb1f440f99c3e813c268dd3f9c4b9/parse_stages-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}