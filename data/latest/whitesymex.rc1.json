{
  "info": {
    "author": "Umut Barış Öztunç",
    "author_email": "umutoztunc@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Whitesymex\n[![Build Status](https://github.com/umutoztunc/whitesymex/workflows/build/badge.svg)](https://github.com/umutoztunc/whitesymex/actions)\n[![MIT License](https://img.shields.io/badge/license-MIT-blue.svg)](LICENSE)\n![PyPI](https://img.shields.io/pypi/v/whitesymex)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n\n\nWhitesymex is a symbolic execution engine for [Whitespace](https://en.wikipedia.org/wiki/Whitespace_(programming_language)). It uses dynamic symbolic analysis to find execution paths of a Whitespace program. It is inspired by [angr](//angr.io).\n\n## Installation\nIt is available on pypi. It requires python 3.7.0+ to run.\n\n```sh\n$ pip install whitesymex\n```\n\n## Usage\n### Command-line Interface\n```sh\n$ whitesymex -h\n# usage: whitesymex [-h] [--version] [--find FIND] [--avoid AVOID] [--strategy {bfs,dfs,random}]\n#                   [--loop-limit LIMIT]\n#                   file\n#\n# Symbolic execution engine for Whitespace.\n#\n# positional arguments:\n#   file                  program to execute\n#\n# optional arguments:\n#   -h, --help            show this help message and exit\n#   --version             show program's version number and exit\n#   --find FIND           string to find\n#   --avoid AVOID         string to avoid\n#   --strategy {bfs,dfs,random}\n#                         path exploration strategy (default: bfs)\n#   --loop-limit LIMIT    maximum number of iterations for symbolic loops\n```\n\nSimple example:\n```sh\n$ whitesymex password_checker.ws --find 'Correct!' --avoid 'Nope.'\n# p4ssw0rd\n```\n\n### Python API\nSimple example:\n```python\nfrom whitesymex import parser\nfrom whitesymex.state import State\nfrom whitesymex.path_group import PathGroup\n\ninstructions = parser.parse_file(\"password_checker.ws\")\nstate = State.create_entry_state(instructions)\npath_group = PathGroup(state)\npath_group.explore(find=b\"Correct!\", avoid=b\"Nope.\")\npassword = path_group.found[0].concretize()\nprint(password.encode())\n# p4ssw0rd\n```\n\nMore complex example from XCTF Finals 2020:\n```python\nimport z3\n\nfrom whitesymex import parser, strategies\nfrom whitesymex.path_group import PathGroup\nfrom whitesymex.state import State\n\ninstructions = parser.parse_file(\"xctf-finals-2020-spaceship.ws\")\nflag_length = 18\nflag = [z3.BitVec(f\"flag_{i}\", 24) for i in range(flag_length)] + list(b\"\\n\")\nstate = State.create_entry_state(instructions, stdin=flag)\n\n# The flag is printable.\nfor i in range(flag_length):\n    state.solver.add(z3.And(0x20 <= flag[i], flag[i] <= 0x7f))\n\npath_group = PathGroup(state)\npath_group.explore(avoid=b\"Imposter!\", strategy=strategies.DFS)\nflag = path_group.deadended[0].concretize()\nprint(flag.decode())\n# xctf{Wh1t3sym3x!?}\n```\n\nYou can also concretize your symbolic variables instead of stdin:\n```python\nimport z3\n\nfrom whitesymex import parser\nfrom whitesymex.path_group import PathGroup\nfrom whitesymex.state import State\n\ninstructions = parser.parse_file(\"tests/data/xctf-finals-2020-spaceship.ws\")\nsymflag = [z3.BitVec(f\"flag_{i}\", 24) for i in range(12)]\nstdin = list(b\"xctf{\") + symflag + list(b\"}\\n\")\nstate = State.create_entry_state(instructions, stdin=stdin)\nfor c in symflag:\n    state.solver.add(z3.And(0x20 <= c, c <= 0x7f))\npath_group = PathGroup(state)\npath_group.explore(find=b\"crewmember\", avoid=b\"Imposter!\")\nflag = path_group.found[0].concretize(symflag)\nprint(\"xctf{%s}\" % flag)\n# xctf{Wh1t3sym3x!?}\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/umutoztunc/whitesymex",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "whitesymex",
    "package_url": "https://pypi.org/project/whitesymex/",
    "platform": "",
    "project_url": "https://pypi.org/project/whitesymex/",
    "project_urls": {
      "Homepage": "https://github.com/umutoztunc/whitesymex"
    },
    "release_url": "https://pypi.org/project/whitesymex/0.1.0/",
    "requires_dist": [
      "z3-solver"
    ],
    "requires_python": ">=3.7",
    "summary": "Symbolic execution engine for Whitespace language.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10511567,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e59284db7c7a49581ee9b022b8da03dfe3457bb4dedfe6daee6915feb057658a",
          "md5": "a66a65d27b27077d58e533a174dfe5ff",
          "sha256": "a5c58bfa36ffd438a358b8bc8c20e1a0e4dca47adda03f4c75c6a2aaee0277ea"
        },
        "downloads": -1,
        "filename": "whitesymex-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a66a65d27b27077d58e533a174dfe5ff",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 16835,
        "upload_time": "2021-05-30T13:45:18",
        "upload_time_iso_8601": "2021-05-30T13:45:18.015012Z",
        "url": "https://files.pythonhosted.org/packages/e5/92/84db7c7a49581ee9b022b8da03dfe3457bb4dedfe6daee6915feb057658a/whitesymex-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8aef47c8ea7ff5554bb323559bfa3891f084f476488c98270f046cec2141acdb",
          "md5": "9217ebdb088e61ec67a5392f2d800bd8",
          "sha256": "c6b7a977807e4446fc96c6698e072365e03f9be4574a4e0210d624599908d505"
        },
        "downloads": -1,
        "filename": "whitesymex-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9217ebdb088e61ec67a5392f2d800bd8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 13824,
        "upload_time": "2021-05-30T13:45:19",
        "upload_time_iso_8601": "2021-05-30T13:45:19.422129Z",
        "url": "https://files.pythonhosted.org/packages/8a/ef/47c8ea7ff5554bb323559bfa3891f084f476488c98270f046cec2141acdb/whitesymex-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e59284db7c7a49581ee9b022b8da03dfe3457bb4dedfe6daee6915feb057658a",
        "md5": "a66a65d27b27077d58e533a174dfe5ff",
        "sha256": "a5c58bfa36ffd438a358b8bc8c20e1a0e4dca47adda03f4c75c6a2aaee0277ea"
      },
      "downloads": -1,
      "filename": "whitesymex-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a66a65d27b27077d58e533a174dfe5ff",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 16835,
      "upload_time": "2021-05-30T13:45:18",
      "upload_time_iso_8601": "2021-05-30T13:45:18.015012Z",
      "url": "https://files.pythonhosted.org/packages/e5/92/84db7c7a49581ee9b022b8da03dfe3457bb4dedfe6daee6915feb057658a/whitesymex-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8aef47c8ea7ff5554bb323559bfa3891f084f476488c98270f046cec2141acdb",
        "md5": "9217ebdb088e61ec67a5392f2d800bd8",
        "sha256": "c6b7a977807e4446fc96c6698e072365e03f9be4574a4e0210d624599908d505"
      },
      "downloads": -1,
      "filename": "whitesymex-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "9217ebdb088e61ec67a5392f2d800bd8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 13824,
      "upload_time": "2021-05-30T13:45:19",
      "upload_time_iso_8601": "2021-05-30T13:45:19.422129Z",
      "url": "https://files.pythonhosted.org/packages/8a/ef/47c8ea7ff5554bb323559bfa3891f084f476488c98270f046cec2141acdb/whitesymex-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}