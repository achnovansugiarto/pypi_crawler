{
  "info": {
    "author": "Praveen Gorre,Viswanath Tadi",
    "author_email": "cs18b047@smail.iitm.ac.in",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# NeuralNet\n## Table of Contents\n1. [Introduction](https://github.com/dl-thops/NeuralNet#introduction)\n2. [Download](https://github.com/dl-thops/NeuralNet#download)\n3. [Quick Start](https://github.com/dl-thops/NeuralNet#quick-start)\n4. [Features](https://github.com/dl-thops/NeuralNet#features)\n5. [Project Report](https://github.com/dl-thops/NeuralNet#project-report)\n\n## Introduction\nThis repository contains an implementation of a Feed Forward Neural Network from scratch using numpy libraries. We have achieved a testing accuracy of 97.45% on MNIST Dataset and a 88.80.% testing accuracy on Fashion-MNIST Dataset.\n\nYou can also find a GPU version of the class NeuralNet in [ctrain<span>.py</span>](https://github.com/dl-thops/NeuralNet/blob/master/ctrain.py) (Uses cupy instead of numpy(CuDa compatible)). We have found about 50~100 x speed boost in training time. We will release the cupy version module soon.\n\n## Download\nYou can view the source code for the NeuralNet class implementation from this [page](https://github.com/dl-thops/NeuralNet/blob/master/neuralnet.py).\n\n`pip install NNeuralNet`\n\n\n## Quick Start\n#### Training\n```\nfrom NNeuralNet.NeuralNet import NeuralNet\nfrom keras.datasets import mnist\n\n# Import and Preprocess Data\n( X_train, Y_train), ( X_test, Y_test) = mnist.load_data()\nX_train = X_train.reshape(X_train.shape[0],-1).T\nX_test = X_test.reshape(X_test.shape[0],-1).T\n\nnn = NeuralNet( input_size = 784, output_size = 10)\nnn.addlayer(128)\nnn.addlayer(64)\nnn.train( X_train, Y_train, numepochs = 10, learning_rate = 0.001)\n```\n#### Prediction\n```\nnn.predict( X_test, returnclass = 1)\n# Set returnclass = 0 for class probabilities\n```\n#### Saving a Model\n```\nnn.save_model( \"my_model.bin\")\n```\n#### Loading a Saved Model\n```\nnn = NeuralNet.load_model( \"my_model.bin\")\n```\n\n## Features\nThe NeuralNet class has support for the following features/parameters support:\n- Activation Type\n\t- [Tanh](https://mathworld.wolfram.com/HyperbolicTangent.html)\n\t- [Relu](https://en.wikipedia.org/wiki/Rectifier_(neural_networks))\n\t- [Sigmoid](https://en.wikipedia.org/wiki/Sigmoid_function)\n- Optimisers\n\t- [Nadam](https://openreview.net/pdf?id=OM0jvwB8jIp57ZJjtNEZ)\n\t- [Rmsprop]()\n\t- [Adam](https://arxiv.org/abs/1412.6980)\n\t- [Nesterov](https://paperswithcode.com/method/nesterov-accelerated-gradient)\n\t- [Momentum](https://en.wikipedia.org/wiki/Stochastic_gradient_descent#Momentum)\n\t- [SGD](https://en.wikipedia.org/wiki/Gradient_descent)\n- Variable batch sizes ( Batch Gradient Descent )\n- Train - Cross Validation split\n- L2 Regularisation / Weight Decay\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dl-thops/NeuralNet",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "NNeuralNet",
    "package_url": "https://pypi.org/project/NNeuralNet/",
    "platform": "Windows",
    "project_url": "https://pypi.org/project/NNeuralNet/",
    "project_urls": {
      "Homepage": "https://github.com/dl-thops/NeuralNet"
    },
    "release_url": "https://pypi.org/project/NNeuralNet/1.0/",
    "requires_dist": [
      "numpy (>=1.18)",
      "tqdm (>=4.1.0)"
    ],
    "requires_python": ">=3.6",
    "summary": "Implementation of a Feed Forward Neural Network",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10405748,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3dc5c06a87b581b796fe8fb2dd6cc368faa1597c9e25fec8d295dee15a3fd760",
          "md5": "6d8ab34bddf46ac19fa90f3a46c3e938",
          "sha256": "5b17f82dd067672524e0d57bc9b02d6b7f8b811018b851c5b4bea170a7c66b29"
        },
        "downloads": -1,
        "filename": "NNeuralNet-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6d8ab34bddf46ac19fa90f3a46c3e938",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8328,
        "upload_time": "2021-05-19T13:48:28",
        "upload_time_iso_8601": "2021-05-19T13:48:28.610882Z",
        "url": "https://files.pythonhosted.org/packages/3d/c5/c06a87b581b796fe8fb2dd6cc368faa1597c9e25fec8d295dee15a3fd760/NNeuralNet-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1296763e783994b2cf722c28c63ba9c0e43cc2951bd846b2852cf8b006caecee",
          "md5": "9b0232b5a72db03ba6da7c1fa211aae6",
          "sha256": "02657fd8d393888c5fe81b7a3146a50237636d4916e446e7dce65a4cf4002f87"
        },
        "downloads": -1,
        "filename": "NNeuralNet-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9b0232b5a72db03ba6da7c1fa211aae6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9915,
        "upload_time": "2021-05-19T13:48:30",
        "upload_time_iso_8601": "2021-05-19T13:48:30.322047Z",
        "url": "https://files.pythonhosted.org/packages/12/96/763e783994b2cf722c28c63ba9c0e43cc2951bd846b2852cf8b006caecee/NNeuralNet-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3dc5c06a87b581b796fe8fb2dd6cc368faa1597c9e25fec8d295dee15a3fd760",
        "md5": "6d8ab34bddf46ac19fa90f3a46c3e938",
        "sha256": "5b17f82dd067672524e0d57bc9b02d6b7f8b811018b851c5b4bea170a7c66b29"
      },
      "downloads": -1,
      "filename": "NNeuralNet-1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6d8ab34bddf46ac19fa90f3a46c3e938",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 8328,
      "upload_time": "2021-05-19T13:48:28",
      "upload_time_iso_8601": "2021-05-19T13:48:28.610882Z",
      "url": "https://files.pythonhosted.org/packages/3d/c5/c06a87b581b796fe8fb2dd6cc368faa1597c9e25fec8d295dee15a3fd760/NNeuralNet-1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1296763e783994b2cf722c28c63ba9c0e43cc2951bd846b2852cf8b006caecee",
        "md5": "9b0232b5a72db03ba6da7c1fa211aae6",
        "sha256": "02657fd8d393888c5fe81b7a3146a50237636d4916e446e7dce65a4cf4002f87"
      },
      "downloads": -1,
      "filename": "NNeuralNet-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "9b0232b5a72db03ba6da7c1fa211aae6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 9915,
      "upload_time": "2021-05-19T13:48:30",
      "upload_time_iso_8601": "2021-05-19T13:48:30.322047Z",
      "url": "https://files.pythonhosted.org/packages/12/96/763e783994b2cf722c28c63ba9c0e43cc2951bd846b2852cf8b006caecee/NNeuralNet-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}