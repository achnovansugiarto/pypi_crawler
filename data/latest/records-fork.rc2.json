{
  "info": {
    "author": "Kenneth Reitz(copyright)",
    "author_email": "me@kennethreitz.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: ISC License (ISCL)",
      "Natural Language :: English",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython"
    ],
    "description": "Records: SQL for Humans‚Ñ¢\n\n========================\n\n\n\n‚ò§ The Basics\n\n------------\n\nWe know how to write SQL, so let's send some to our database:\n\n\n\n.. code:: python\n\n\n\n    import records\n\n\n\n    db = records.Database('postgres://...')\n\n    rows = db.query('select * from active_users')    # or db.query_file('sqls/active-users.sql')\n\n\n\n\n\nGrab one row at a time:\n\n\n\n.. code:: python\n\n\n\n    >>> rows[0]\n\n    <Record {\"username\": \"model-t\", \"active\": true, \"name\": \"Henry Ford\", \"user_email\": \"model-t@gmail.com\", \"timezone\": \"2016-02-06 22:28:23.894202\"}>\n\n\n\nOr iterate over them:\n\n\n\n.. code:: python\n\n\n\n    for r in rows:\n\n        print(r.name, r.user_email)\n\n\n\nValues can be accessed many ways: ``row.user_email``, ``row['user_email']``, or ``row[3]``.\n\n\n\nFields with non-alphanumeric characters (like spaces) are also fully supported.\n\n\n\nOr store a copy of your record collection for later reference:\n\n\n\n.. code:: python\n\n\n\n    >>> rows.all()\n\n    [<Record {\"username\": ...}>, <Record {\"username\": ...}>, <Record {\"username\": ...}>, ...]\n\n\n\nIf you're only expecting one result:\n\n\n\n.. code:: python\n\n\n\n    >>> rows.first()\n\n    <Record {\"username\": ...}>\n\n\n\nOther options include ``rows.as_dict()`` and ``rows.as_dict(ordered=True)``.\n\n\n\n‚ò§ Features\n\n----------\n\n\n\n- Iterated rows are cached for future reference.\n\n- ``$DATABASE_URL`` environment variable support.\n\n- Convenience ``Database.get_table_names`` method.\n\n- Command-line `records` tool for exporting queries.\n\n- Safe parameterization: ``Database.query('life=:everything', everything=42)``.\n\n- Queries can be passed as strings or filenames, parameters supported.\n\n- Transactions: ``t = Database.transaction(); t.commit()``.\n\n- Bulk actions: ``Database.bulk_query()`` & ``Database.bulk_query_file()``.\n\n\n\nRecords is proudly powered by `SQLAlchemy <http://www.sqlalchemy.org>`_\n\nand `Tablib <https://tablib.readthedocs.io/en/latest/>`_.\n\n\n\n‚ò§ Data Export Functionality\n\n---------------------------\n\n\n\nRecords also features full Tablib integration, and allows you to export\n\nyour results to CSV, XLS, JSON, HTML Tables, YAML, or Pandas DataFrames with a single line of code.\n\nExcellent for sharing data with friends, or generating reports.\n\n\n\n.. code:: pycon\n\n\n\n    >>> print(rows.dataset)\n\n    username|active|name      |user_email       |timezone\n\n    --------|------|----------|-----------------|--------------------------\n\n    model-t |True  |Henry Ford|model-t@gmail.com|2016-02-06 22:28:23.894202\n\n    ...\n\n\n\n**Comma Separated Values (CSV)**\n\n\n\n.. code:: pycon\n\n\n\n    >>> print(rows.export('csv'))\n\n    username,active,name,user_email,timezone\n\n    model-t,True,Henry Ford,model-t@gmail.com,2016-02-06 22:28:23.894202\n\n    ...\n\n\n\n**YAML Ain't Markup Language (YAML)**\n\n\n\n.. code:: python\n\n\n\n    >>> print(rows.export('yaml'))\n\n    - {active: true, name: Henry Ford, timezone: '2016-02-06 22:28:23.894202', user_email: model-t@gmail.com, username: model-t}\n\n    ...\n\n\n\n**JavaScript Object Notation (JSON)**\n\n\n\n.. code:: python\n\n\n\n    >>> print(rows.export('json'))\n\n    [{\"username\": \"model-t\", \"active\": true, \"name\": \"Henry Ford\", \"user_email\": \"model-t@gmail.com\", \"timezone\": \"2016-02-06 22:28:23.894202\"}, ...]\n\n\n\n**Microsoft Excel (xls, xlsx)**\n\n\n\n.. code:: python\n\n\n\n    with open('report.xls', 'wb') as f:\n\n        f.write(rows.export('xls'))\n\n        \n\n        \n\n**Pandas DataFrame**\n\n\n\n.. code:: python\n\n\n\n    >>> rows.export('df')\n\n        username  active       name        user_email                   timezone\n\n    0    model-t    True Henry Ford model-t@gmail.com 2016-02-06 22:28:23.894202\n\n\n\nYou get the point. All other features of Tablib are also available,\n\nso you can sort results, add/remove columns/rows, remove duplicates,\n\ntranspose the table, add separators, slice data by column, and more.\n\n\n\nSee the `Tablib Documentation <https://tablib.readthedocs.io/en/latest/>`_\n\nfor more details.\n\n\n\n‚ò§ Installation\n\n--------------\n\n\n\nOf course, the recommended installation method is `pipenv <http://pipenv.org>`_::\n\n\n\n    $ pipenv install records[pandas]\n\n    ‚ú®üç∞‚ú®\n\n\n\n‚ò§ Command-Line Tool\n\n-------------------\n\n\n\nAs an added bonus, a ``records`` command-line tool is automatically\n\nincluded. Here's a screenshot of the usage information:\n\n\n\n‚ò§ Thank You\n\n-----------\n\n\n\nThanks for checking this library out! I hope you find it useful.\n\n\n\nOf course, there's always room for improvement. Feel free to `open an issue <https://github.com/kennethreitz/records/issues>`_ so we can make Records better, stronger, faster.\n\n\n\n\n\n\n\nv0.5.1 (09-01-2017)\n\n===================\n\n\n\n- Depend on ``tablib[pandas]``.\n\n- Support for Bulk quies: ``Database.bulk_query()`` & ``Database.bulk_query_file()``.\n\n\n\nv0.5.0 (11-15-2016)\n\n===================\n\n\n\n- Support for transactions: ``t = Database.transaction(); t.commit()``\n\n\n\n\n\nv0.4.3 (02-16-2016)\n\n===================\n\n\n\n- The cake is a lie.\n\n\n\nv0.4.2 (02-15-2016)\n\n===================\n\n\n\n- Packaging fix.\n\n\n\nv0.4.1 (02-15-2016)\n\n===================\n\n\n\n- Bugfix for Python 3.\n\n\n\nv0.4.0 (02-13-2016)\n\n===================\n\n\n\n- Refactored to be fully powered by SQLAlchemy!\n\n- Support for all major databases (thanks, SQLAlchemy!).\n\n- Support for non-alphanumeric column names.\n\n- New ``Record`` class, for representing/accessing result rows.\n\n- ``ResultSet`` renamed ``RecordCollection``.\n\n- Removed Interactive Mode from the CLI.\n\n\n\n\n\nv0.3.0 (02-11-2016)\n\n===================\n\n\n\n- New ``record`` command-line tool available!\n\n- Various improvements.\n\n\n\nv0.2.0 (02-10-2016)\n\n===================\n\n\n\n- Results are now represented as `Record`, a namedtuples class with dict-like qualities.\n\n- New `ResultSet.export` method, for exporting to various formats.\n\n- Slicing a `ResultSet` now works, and results in a new `ResultSet`.\n\n- Lots of bugfixes and improvements!\n\n\n\nv0.1.0 (02-07-2016)\n\n===================\n\n\n\n- Initial release.\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/vicrack/records",
    "keywords": "",
    "license": "ISC",
    "maintainer": "",
    "maintainer_email": "",
    "name": "records-fork",
    "package_url": "https://pypi.org/project/records-fork/",
    "platform": null,
    "project_url": "https://pypi.org/project/records-fork/",
    "project_urls": {
      "Homepage": "https://github.com/vicrack/records"
    },
    "release_url": "https://pypi.org/project/records-fork/0.5.5/",
    "requires_dist": [
      "SQLAlchemy",
      "openpyxl (>2.6.0)",
      "tablib (>=0.11.4)",
      "docopt",
      "tablib[pandas] ; extra == 'pandas'",
      "psycopg2 ; extra == 'pg'",
      "sqlalchemy-redshift ; extra == 'redshift'",
      "psycopg2 ; extra == 'redshift'"
    ],
    "requires_python": "",
    "summary": "SQL for Humans",
    "version": "0.5.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15132097,
  "releases": {
    "0.5.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "68d56acf7aa035cc1a481516ee473ac891bbb64890ea08a7a6b79b4d7ec3ab79",
          "md5": "75f702694953357f8546a4b60c6edce7",
          "sha256": "f8f49d45db50c22f2b16b2f790f292f164e36cbe4b6ae6b588e0f2fff63e0278"
        },
        "downloads": -1,
        "filename": "records_fork-0.5.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "75f702694953357f8546a4b60c6edce7",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 9691,
        "upload_time": "2022-07-20T06:20:05",
        "upload_time_iso_8601": "2022-07-20T06:20:05.013011Z",
        "url": "https://files.pythonhosted.org/packages/68/d5/6acf7aa035cc1a481516ee473ac891bbb64890ea08a7a6b79b4d7ec3ab79/records_fork-0.5.4-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f05b47eaf48d7bfa8a9ced7b1be795a84c180100e8097f587e16e8cbaf575c1",
          "md5": "12f86a0727d24b2e2d5bf7e4cbcefec0",
          "sha256": "e8bdf5cf75075eafa681f840cc1a1b8a8e60f3aacdbc3edc389898733fc6e3f7"
        },
        "downloads": -1,
        "filename": "records-fork-0.5.4.tar.gz",
        "has_sig": false,
        "md5_digest": "12f86a0727d24b2e2d5bf7e4cbcefec0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11581,
        "upload_time": "2022-07-14T15:48:22",
        "upload_time_iso_8601": "2022-07-14T15:48:22.716240Z",
        "url": "https://files.pythonhosted.org/packages/0f/05/b47eaf48d7bfa8a9ced7b1be795a84c180100e8097f587e16e8cbaf575c1/records-fork-0.5.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "263c5efac62b0c0d37d2fc73747be6c5c0a32d2a5062bfadcffeacc15f28b034",
          "md5": "e99ecedb33fd54edd41ab1cfb7642e63",
          "sha256": "ee0915919251405731ee396834ae8a88614d37f2a868f82f96738976f6c77d6d"
        },
        "downloads": -1,
        "filename": "records_fork-0.5.5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e99ecedb33fd54edd41ab1cfb7642e63",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 9745,
        "upload_time": "2022-09-18T08:12:34",
        "upload_time_iso_8601": "2022-09-18T08:12:34.834322Z",
        "url": "https://files.pythonhosted.org/packages/26/3c/5efac62b0c0d37d2fc73747be6c5c0a32d2a5062bfadcffeacc15f28b034/records_fork-0.5.5-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "179fc46f5f826cd19d69957f404cd739a95eb8d3d9b9c2d25587ff37c3aac0a0",
          "md5": "4c3ca4e2d4c1ea34ead0c157d78ba1e8",
          "sha256": "cf30496d6c1c17af615160fa89b1358a5e48f0f26b116a7f285b9489c573a15a"
        },
        "downloads": -1,
        "filename": "records-fork-0.5.5.tar.gz",
        "has_sig": false,
        "md5_digest": "4c3ca4e2d4c1ea34ead0c157d78ba1e8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11618,
        "upload_time": "2022-09-18T08:12:36",
        "upload_time_iso_8601": "2022-09-18T08:12:36.863450Z",
        "url": "https://files.pythonhosted.org/packages/17/9f/c46f5f826cd19d69957f404cd739a95eb8d3d9b9c2d25587ff37c3aac0a0/records-fork-0.5.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "263c5efac62b0c0d37d2fc73747be6c5c0a32d2a5062bfadcffeacc15f28b034",
        "md5": "e99ecedb33fd54edd41ab1cfb7642e63",
        "sha256": "ee0915919251405731ee396834ae8a88614d37f2a868f82f96738976f6c77d6d"
      },
      "downloads": -1,
      "filename": "records_fork-0.5.5-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e99ecedb33fd54edd41ab1cfb7642e63",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 9745,
      "upload_time": "2022-09-18T08:12:34",
      "upload_time_iso_8601": "2022-09-18T08:12:34.834322Z",
      "url": "https://files.pythonhosted.org/packages/26/3c/5efac62b0c0d37d2fc73747be6c5c0a32d2a5062bfadcffeacc15f28b034/records_fork-0.5.5-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "179fc46f5f826cd19d69957f404cd739a95eb8d3d9b9c2d25587ff37c3aac0a0",
        "md5": "4c3ca4e2d4c1ea34ead0c157d78ba1e8",
        "sha256": "cf30496d6c1c17af615160fa89b1358a5e48f0f26b116a7f285b9489c573a15a"
      },
      "downloads": -1,
      "filename": "records-fork-0.5.5.tar.gz",
      "has_sig": false,
      "md5_digest": "4c3ca4e2d4c1ea34ead0c157d78ba1e8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11618,
      "upload_time": "2022-09-18T08:12:36",
      "upload_time_iso_8601": "2022-09-18T08:12:36.863450Z",
      "url": "https://files.pythonhosted.org/packages/17/9f/c46f5f826cd19d69957f404cd739a95eb8d3d9b9c2d25587ff37c3aac0a0/records-fork-0.5.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}