{
  "info": {
    "author": "Aniket Sarkar",
    "author_email": "aniketsarkar@yahoo.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Flask",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# flask-express\n<img src=\"https://raw.githubusercontent.com/marktennyson/flask-express/main/logos/flask-express-logo.png\">\n\n# Downloads\n[![Downloads](https://pepy.tech/badge/flask-express)](https://pepy.tech/project/flask-express) [![Downloads](https://pepy.tech/badge/flask-express/month)](https://pepy.tech/project/flask-express/month) [![Downloads](https://pepy.tech/badge/flask-express/week)](https://pepy.tech/project/flask-express/week)\n<br>\n\n#### contributor needed.  \n\nprovide the interactive service like expressJs for the flask app.\n\n\n#### Important Links\n[PYPI link](https://pypi.org/project/flask-express)    \n[Github link](https://github.com/marktennyson/flask-express)    \n[Documentation link](https://marktennyson.github.io/flask-express) \n\n### Basic installation\nUse the package manager [pip](https://pypi.org/project/flask-express/) to install flask-express.\n\n```bash\npython3 -m pip install flask-express\n```\nInstall from source code\n\n```bash\ngit clone https://github.com/marktennyson/flask-express.git && cd flask-express/\npython3 setup.py install\n```\n\n### Introduction to Flask-Express\nFlask-Express is here to give you people the feel like ExpressJs while using the Flask app.\nBasically you can use the default Request and Response as two parameters of the view functions.\n\nFlask-Express comes with all the features of Flask with some extra features.\n\nWe are using the `munch` module to provide the attribute-style access very similar to the Javascript.\nI think this is enough for the introdunction, let's play with the examples mentioned below.\n\n### Examples and Usages\n\n##### Basic example: \n\ninbuilt flask_express.FlaskExpress class\n```python\nfrom flask_express import FlaskExpress\n\napp = FlaskExpress(__name__)\n\n@app.get(\"/\")\ndef index(req, res):\n    return res.json(req.header)\n```\n\n##### Now the flask 2.0 support the asynchronus view function. You can implement this with flask-express too.\n\n```python\nfrom flask_express import FlaskExpress\n\napp = FlaskExpress(__name__)\n\n@app.get(\"/\")\nasync def index(req, res):\n    return res.json(req.header)\n```\n\n##### You can use the python typing for a better view of the codes and auto completion.\n\n```python\nfrom flask_express import FlaskExpress\nfrom flask_express.typing import Request, Response\n\napp = FlaskExpress(__name__)\n\n@app.get(\"/\")\ndef index(req:Request, res:Response):\n    return res.json(req.header)\n```\n\n### Basic Documentation\n\nThe official and full documentation for this project is available at: https://marktennyson.github.io/flask-express.\nHere I have tried to provide some of the basic features of this project here.\n\n#### Request class:\nN.B: all of the properties of the Request class will return an instance of Munch.\nThis will provide you the feel of the Javascript object.\n\n##### property - json \nSo if your app is receiving data as json format, you can use `json` property of the request class to access the data.\nIt's internally using the `get_json` method to provide the data.    \n\nFor example:\n\n```python\n@app.post(\"/send-json\")\ndef send_json(req, res):\n    name = req.json.name\n    email = req.json.email\n    return res.json(name=name, email=email)\n```\n\n##### property - query\nThis object provides you the url based parameter. \nIt's internally using the `args` property to provide the data. \n\nFor example:\n\n```python\n@app.get(\"/get-query\")\ndef get_query(req, res):\n    name=req.query.name\n    email = req.query.email\n    return res.send(dict(name=name, email=email))\n```\n\n##### property - body\nThis object provides you the all the parameters from the Form. \nIt's internally using the `form` property to provide the data. \n\nFor example:\n\n```python\n@app.get(\"/get-form-data\")\ndef get_form_data(req, res):\n    name=req.body.name\n    email = req.body.email\n    return res.send(dict(name=name, email=email))\n```\n\n##### property - header\nThis object provides you the all the parameters of the request header. \nIt's internally using the `header` property to provide the data. \n\nFor example:\n\n```python\n@app.get(\"/get-form-data\")\ndef get_form_data(req, res):\n    return res.send(req.header)\n```\n\n#### Response class\n\n##### function - send_status\nThis is used to set the response header status.\n\nfor example:\n```python\n@app.route(\"/set-status\")\ndef set_statuser(req, res):\n    return res.send_status(404).send(\"your requested page is not found.\")\n```\n\n##### function - flash\nTo flash a message at the UI.\n\nfor example:\n```python\n@app.route('/flash')\ndef flasher(req, res):\n    return res.flash(\"this is the flash message\").end()\n```\n\n##### function - send\n It sends the HTTP response.\n\nfor example:\n```python\n@app.route(\"/send\")\ndef sender(req, res):\n    return res.send(\"hello world\")\n    #or\n    return res.send(\"<h1>hello world</h1>\")\n    #or\n    return res.send_status(404).send(\"not found\")\n```\n\n##### function - json\n To return the json seriliazed response.\n\nfor example:\n```python\n@app.route(\"/json\")\ndef jsoner(req, res):\n    return res.json(name=\"aniket sarkar\")\n    #or\n    return res.json({'name': 'aniket sarkar'})\n    #or\n    return res.json([1,2,3,4])\n```\n\n##### function - end\n To end the current resonse process.\n\nfor example:\n```python\n@app.route(\"/end\")\ndef ender(req, res):\n    return res.end()\n    #or\n    return res.end(404) # to raise a 404 error.\n```\n\n##### function - render\n Renders a html and sends the rendered HTML string to the client.\n\nfor example:\n```python\n@app.route('/render')\ndef renderer(req, res):\n    context=dict(name=\"Aniket Sarkar\", planet=\"Pluto\")\n    return res.render(\"index.html\", context)\n    #or\n    return res.render(\"index.html\", name=\"Aniket Sarkar\", planet=\"Pluto\")\n```\n\n##### function - redirect\n redirect to specified route.\n\nfor example:\n```python\n@app.post(\"/login\")\ndef login(req, res):\n#if login success\nreturn res.redirect(\"/dashboard\")\n```\n\n##### function - get\nGet the header information by the given key.\n\nfor example:\n```python\n@app.route(\"/get\")\ndef getter(req, res):\n    print (res.get(\"Content-Type\"))\n    return res.end()\n```\n\n##### function - set\nSet the header information.\n\nfor example:\n```python\n@app.route(\"/header-seter\")\ndef header_setter(req, res):\n    res.set('Content-Type', 'application/json')\n    #or\n    res.set({'Content-Type':'application/json'})\n    return res.end()\n```\n\n##### function - type\nSets the Content-Type HTTP header to the MIME type as determined by the specified type.\n\nfor example:\n```python\n@app.route(\"/set-mime\")\ndef mimer(req, res):\n    res.type('application/json')\n    #or\n    res.type(\".html\")\n    #or\n    res.type(\"json\")\n```\n\n##### function - attachment\nsend the attachments by using this method.\nThe default attachment folder name is `attachments`.\nYou can always change it by changing the config parameter.\nthe config parameter is `ATTACHMENTS_FOLDER`.\n\nfor example:\n```python\n@app.route('/attachments')\ndef attach(req, res):\n    filename = req.query.filename\n    return res.attachment(file_name)\n```\n\n##### function - send_file\nSend the contents of a file to the client.Its internally using the send_file method from werkzeug.\n\n##### function - clear_cookie\nClear a cookie.  Fails silently if key doesn't exist.\n\n##### function - set_cookie\nSets a cookie.\n\n##### function - make_response\nmake a http response. It's same as `Flask.wrappers.Request`\n\n### Development\n\n#### Beautiful Contributors\n<a href=\"https://github.com/flaskAio/navycut/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=marktennyson/flask-express\" />\n</a>\n\n#### Contribution procedure.\n1. Create a new issue on github.\n2. Fork and clone this repository.\n3. Make some changes as required.\n4. Write unit test to showcase its functionality.\n5. Submit a pull request under `main` branch.\n\n#### Run this project on your local machine.\n1. create a virtual environment on the project root directory.\n2. install all the required dependencies from requirements.txt file.\n3. make any changes on you local code.\n4. then install the module on your virtual environment using `python setup.py install` command.\n5. The above command will install the `flask-express` module on your virtual environment.\n6. Now create a separate project inside the example folder and start testing for your code changes.\n7. If you face any difficulties to perform the above steps, then plese contact me at: `aniketsarkar@yahoo.com`.\n\n### Future Roadmap\n1. Middleware support.\n2. Implementation of all the apis of ExpressJs.\n3. Auto Swagger documentation using `flask-restplus` and `flask-pydantic` module.\n\n### License\n\nMIT License\n\nCopyright (c) 2021 Aniket Sarkar(aniketsarkar@yahoo.com)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/marktennyson/flask-express",
    "keywords": "flask,flask-express,Navycut",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Flask-Express",
    "package_url": "https://pypi.org/project/Flask-Express/",
    "platform": "any",
    "project_url": "https://pypi.org/project/Flask-Express/",
    "project_urls": {
      "Homepage": "https://github.com/marktennyson/flask-express"
    },
    "release_url": "https://pypi.org/project/Flask-Express/0.1.4/",
    "requires_dist": [
      "asgiref (>=3.4.1)",
      "Flask (>=2.0.0)",
      "munch (>=2.5.0)"
    ],
    "requires_python": ">=3.6,<4",
    "summary": "interactive app like expressJs for flask.",
    "version": "0.1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12185940,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eed8eef5822f2779fce323dd62775f60e2ae10934d787cc934110397b672d584",
          "md5": "1b8f48ac3ada857378cd361937ffbb9e",
          "sha256": "a844a285a0ac762bc43b5c92ef0471214d66b691a518c4b5d06c9ba476f2aa8f"
        },
        "downloads": -1,
        "filename": "Flask_Express-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1b8f48ac3ada857378cd361937ffbb9e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4",
        "size": 26036,
        "upload_time": "2021-08-17T08:17:16",
        "upload_time_iso_8601": "2021-08-17T08:17:16.925449Z",
        "url": "https://files.pythonhosted.org/packages/ee/d8/eef5822f2779fce323dd62775f60e2ae10934d787cc934110397b672d584/Flask_Express-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7becda02c9ee556390396000b7cc849b4ab6b36bbe652b91c8268dc1a4f9ac13",
          "md5": "c54db1ace7804288a4e5e9f70985f603",
          "sha256": "633b32e7659f717e516544a4fecc1d67053a3e33ed7370447bd1eab82202e7bc"
        },
        "downloads": -1,
        "filename": "Flask-Express-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c54db1ace7804288a4e5e9f70985f603",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4",
        "size": 13337,
        "upload_time": "2021-08-17T08:21:32",
        "upload_time_iso_8601": "2021-08-17T08:21:32.899960Z",
        "url": "https://files.pythonhosted.org/packages/7b/ec/da02c9ee556390396000b7cc849b4ab6b36bbe652b91c8268dc1a4f9ac13/Flask-Express-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "32f4d6a790cd2624abde171953cc7fb61af5b113ac828195a2c1aa7b3622f90c",
          "md5": "a9bfb2baf5242b159cc8a2a027edd94b",
          "sha256": "a38c0f86c923a03e2ca84867c26f91a48d159fdefe6022571c32efc0db34a8ad"
        },
        "downloads": -1,
        "filename": "Flask_Express-0.1.1-py3.8.egg",
        "has_sig": false,
        "md5_digest": "a9bfb2baf5242b159cc8a2a027edd94b",
        "packagetype": "bdist_egg",
        "python_version": "3.8",
        "requires_python": ">=3.6,<4",
        "size": 27077,
        "upload_time": "2021-09-02T09:11:56",
        "upload_time_iso_8601": "2021-09-02T09:11:56.121116Z",
        "url": "https://files.pythonhosted.org/packages/32/f4/d6a790cd2624abde171953cc7fb61af5b113ac828195a2c1aa7b3622f90c/Flask_Express-0.1.1-py3.8.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e7675c84f634ef9e774913e8f99f86c0fe4edf9e0e43ee1124d25e5fc1344062",
          "md5": "45a8a1db24ac8a3be05c636f1da6d01d",
          "sha256": "3d08fa37ef59ee54357ba85d0537865097a6d617adf0d34d563f73f7b13621c8"
        },
        "downloads": -1,
        "filename": "Flask_Express-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "45a8a1db24ac8a3be05c636f1da6d01d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4",
        "size": 26087,
        "upload_time": "2021-09-02T09:11:54",
        "upload_time_iso_8601": "2021-09-02T09:11:54.207013Z",
        "url": "https://files.pythonhosted.org/packages/e7/67/5c84f634ef9e774913e8f99f86c0fe4edf9e0e43ee1124d25e5fc1344062/Flask_Express-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4af77f2f47f1c75dc8dd3860ccc76ec165134a4af03332330fb4228899fde9d",
          "md5": "ae3508af321f181f6043e1cce6455bae",
          "sha256": "9511bc4eab4ec2e025b61919b19a2182676b6f286eab8e1ac6eec1d9d25867ea"
        },
        "downloads": -1,
        "filename": "Flask-Express-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ae3508af321f181f6043e1cce6455bae",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4",
        "size": 27648,
        "upload_time": "2021-09-02T09:11:57",
        "upload_time_iso_8601": "2021-09-02T09:11:57.854178Z",
        "url": "https://files.pythonhosted.org/packages/a4/af/77f2f47f1c75dc8dd3860ccc76ec165134a4af03332330fb4228899fde9d/Flask-Express-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3f10774957f5125a0932ae8048a9badbbe2d2533d883fd4f0210acc6e7e5181d",
          "md5": "35685ace07c0e707622024e192053baa",
          "sha256": "2559b92abf20f5421cdce16ba630c4c8aa350f15df47e3575665232d964c8f51"
        },
        "downloads": -1,
        "filename": "Flask_Express-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "35685ace07c0e707622024e192053baa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4",
        "size": 27010,
        "upload_time": "2021-09-23T09:49:11",
        "upload_time_iso_8601": "2021-09-23T09:49:11.665310Z",
        "url": "https://files.pythonhosted.org/packages/3f/10/774957f5125a0932ae8048a9badbbe2d2533d883fd4f0210acc6e7e5181d/Flask_Express-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "777f7350b19da755c3c0520d76365636af167261736f7d659d1d6d894b74f139",
          "md5": "45457d66b46ca3658cf655752677b532",
          "sha256": "8fa895c21e12b428417fdb34237f748b7b0931220a903ea0dcda2243d938865d"
        },
        "downloads": -1,
        "filename": "Flask-Express-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "45457d66b46ca3658cf655752677b532",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4",
        "size": 28583,
        "upload_time": "2021-09-23T09:49:14",
        "upload_time_iso_8601": "2021-09-23T09:49:14.338783Z",
        "url": "https://files.pythonhosted.org/packages/77/7f/7350b19da755c3c0520d76365636af167261736f7d659d1d6d894b74f139/Flask-Express-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dbe209ad10ab4896577eed4dcff9563edbd5f342eb6ca3a7155a14eef99e8bfd",
          "md5": "4e84242470faf01599c0e020fff70429",
          "sha256": "e6cdfeeb4b75403bd77db8172b2423023e01118eb0576a6616879ea9086f8de4"
        },
        "downloads": -1,
        "filename": "Flask_Express-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4e84242470faf01599c0e020fff70429",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4",
        "size": 16500,
        "upload_time": "2021-11-02T07:29:12",
        "upload_time_iso_8601": "2021-11-02T07:29:12.876192Z",
        "url": "https://files.pythonhosted.org/packages/db/e2/09ad10ab4896577eed4dcff9563edbd5f342eb6ca3a7155a14eef99e8bfd/Flask_Express-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0cb39621030f243e9ca745b64be2d3357f49de8915d3c731fe5ad0327d8c10ae",
          "md5": "0bab311839566589057107addeb1d7ed",
          "sha256": "8c83c9e555f5a9aa6a84537471e87dc2b0f5be03c0dbef4244002e06042a28b1"
        },
        "downloads": -1,
        "filename": "Flask-Express-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "0bab311839566589057107addeb1d7ed",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4",
        "size": 15202,
        "upload_time": "2021-11-02T07:29:14",
        "upload_time_iso_8601": "2021-11-02T07:29:14.823262Z",
        "url": "https://files.pythonhosted.org/packages/0c/b3/9621030f243e9ca745b64be2d3357f49de8915d3c731fe5ad0327d8c10ae/Flask-Express-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70ec681a90793942d2d3f1e458371708b04228397fce3a057bafb432b949b2e1",
          "md5": "2545b9c3551dd940710ecb2a6b1130ea",
          "sha256": "8daeb29e005e6744795de5776db1d2accda5a0f6507131ecb3de9120383df4d6"
        },
        "downloads": -1,
        "filename": "Flask_Express-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2545b9c3551dd940710ecb2a6b1130ea",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4",
        "size": 16985,
        "upload_time": "2021-12-02T07:18:45",
        "upload_time_iso_8601": "2021-12-02T07:18:45.529154Z",
        "url": "https://files.pythonhosted.org/packages/70/ec/681a90793942d2d3f1e458371708b04228397fce3a057bafb432b949b2e1/Flask_Express-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c8e6538d068976982dc64332bb3d4061299269a3693801fa0499e2f9609c7e72",
          "md5": "4acfa75365b1d59b1e70eb4a2b989eba",
          "sha256": "f080f731d7bb1e75577eae31b99e3d907f6e82085c7a9ed32fb6be125e28a95d"
        },
        "downloads": -1,
        "filename": "Flask-Express-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "4acfa75365b1d59b1e70eb4a2b989eba",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4",
        "size": 15759,
        "upload_time": "2021-12-02T07:18:48",
        "upload_time_iso_8601": "2021-12-02T07:18:48.170001Z",
        "url": "https://files.pythonhosted.org/packages/c8/e6/538d068976982dc64332bb3d4061299269a3693801fa0499e2f9609c7e72/Flask-Express-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "70ec681a90793942d2d3f1e458371708b04228397fce3a057bafb432b949b2e1",
        "md5": "2545b9c3551dd940710ecb2a6b1130ea",
        "sha256": "8daeb29e005e6744795de5776db1d2accda5a0f6507131ecb3de9120383df4d6"
      },
      "downloads": -1,
      "filename": "Flask_Express-0.1.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2545b9c3551dd940710ecb2a6b1130ea",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6,<4",
      "size": 16985,
      "upload_time": "2021-12-02T07:18:45",
      "upload_time_iso_8601": "2021-12-02T07:18:45.529154Z",
      "url": "https://files.pythonhosted.org/packages/70/ec/681a90793942d2d3f1e458371708b04228397fce3a057bafb432b949b2e1/Flask_Express-0.1.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c8e6538d068976982dc64332bb3d4061299269a3693801fa0499e2f9609c7e72",
        "md5": "4acfa75365b1d59b1e70eb4a2b989eba",
        "sha256": "f080f731d7bb1e75577eae31b99e3d907f6e82085c7a9ed32fb6be125e28a95d"
      },
      "downloads": -1,
      "filename": "Flask-Express-0.1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "4acfa75365b1d59b1e70eb4a2b989eba",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6,<4",
      "size": 15759,
      "upload_time": "2021-12-02T07:18:48",
      "upload_time_iso_8601": "2021-12-02T07:18:48.170001Z",
      "url": "https://files.pythonhosted.org/packages/c8/e6/538d068976982dc64332bb3d4061299269a3693801fa0499e2f9609c7e72/Flask-Express-0.1.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}