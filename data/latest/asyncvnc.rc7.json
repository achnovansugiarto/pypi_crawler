{
  "info": {
    "author": "Barney Gale",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "AsyncVNC: Asynchronous VNC for Python\n=====================================\n\n.. image:: https://img.shields.io/badge/source-github-orange\n    :target: https://github.com/barneygale/asyncvnc\n\n.. image:: https://readthedocs.org/projects/asyncvnc/badge/?version=latest&style=flat-square\n    :target: https://asyncvnc.readthedocs.io/en/latest/?badge=latest\n\n.. image:: https://img.shields.io/pypi/v/asyncvnc?style=flat-square\n    :target: https://pypi.org/project/asyncvnc\n\n.. image:: https://github.com/barneygale/asyncvnc/actions/workflows/ci.yml/badge.svg\n    :target: https://github.com/barneygale/asyncvnc/actions\n\n\n\nAsyncVNC is a Python package which provides an asynchronous client implementation of the VNC (RFB) protocol on top of\nthe asyncio framework.\n\n.. code-block::\n\n    import asyncio, asyncvnc\n\n    async def run_client():\n        with asyncvnc.connect('localhost', 5900, 'username', 'password') as client:\n            client.keyboard.write('hello world!')\n\n    asyncio.run(run_client())\n\n\nFeatures\n--------\n\n- Full support for keyboard, mouse, video and clipboard updates.\n\n  * The frame buffer can be exported as an RGBA numpy array.\n  * Keyboard keys are specified by name or character.\n\n- Compatibility with traditional VNC servers (RealVNC, TightVNC, TigerVNC, etc).\n\n  * Including unauthenticated connections.\n  * Including password authentication with Triple DES.\n\n- Compatibility with the built-in macOS Remote Desktop server.\n\n  * Including username/password authentication with 2048-bit RSA keys and 128-bit AES.\n  * Connects to the desktop, not the login screen.\n\n- Detection of multi-head frame buffer data using a novel algorithm.\n- Support for tunneling VNC over SSH with AsyncSSH.\n- Support for image data compression with zlib.\n\n\nInstallation\n------------\n\nThis package requires Python 3.7+.\n\nInstall AsyncVNC by running::\n\n    pip install asyncvnc\n\n\nConnecting to a server\n----------------------\n\nThis snippet connects to a local unauthenticated VNC server, prints information, and disconnects::\n\n    import asyncio, asyncvnc\n\n    async def run_client():\n        async with asyncvnc.connect('localhost') as client:\n            print(client)\n\n    asyncio.run(run_client())\n\nTo log in to a macOS server, supply *username* and *password* arguments::\n\n    async with asyncvnc.connect('localhost', username='user123', password='h4x0r'):\n        ...\n\nFor traditional authenticated VNC servers, the *password* argument is required but not *username*.\n\n.. warning::\n\n    Traditional VNC authentication is woefully insecure. For best results, configure your VNC server to listen only on\n    ``127.0.0.1``. If you need external access, use an SSH tunnel.\n\n\nTo tunnel VNC over SSH, use the AsyncSSH package (after which this package is modelled)::\n\n    import asyncio, asyncssh, asyncvnc\n\n    async def run_client():\n        async with asyncssh.connect('myserver') as conn:\n            async with asyncvnc.connect('localhost', opener=conn.open_connection) as client:\n                print(client)\n\n    asyncio.run(run_client())\n\n\nSending events\n--------------\n\nKeyboard and mouse objects provide context managers for holding down keys and buttons::\n\n    with client.keyboard.hold('Ctrl'):\n        ...\n\n    with client.mouse.hold():\n        ...\n\nThe keyboard has methods for pressing keys and writing text::\n\n    client.keyboard.press('Ctrl', 'c')  # keys are stacked\n    client.keyboard.write('hi there!')  # keys are queued\n\nThe mouse has methods for moving the cursor and clicking::\n\n    client.mouse.move(100, 200)\n    client.mouse.click()\n    client.mouse.right_click()\n    client.mouse.scroll_up()\n\n\nTaking a screenshot\n-------------------\n\nTo retrieve an image from the VNC server and save it as a PNG file::\n\n    import asyncio, asyncvnc\n    from PIL import Image\n\n    async def run_client():\n        async with asyncvnc.connect('localhost') as client:\n            # Retrieve pixels as a 3D numpy array\n            pixels = await client.screenshot()\n\n            # Save as PNG using PIL/pillow\n            image = Image.fromarray(pixels)\n            image.save('screenshot.png')\n\n    asyncio.run(run_client())\n\n\nThe macOS VNC server composites attached monitors/screens into a single frame buffer. It does not send updates for\nunoccupied regions; we can use this information to detect screens::\n\n    pixels = client.video.as_rgba()\n    for screen in client.video.detect_screens():\n        screen_pixels = pixels[screen.slices]\n\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/barneygale/asyncvnc",
    "keywords": "",
    "license": "GPL",
    "maintainer": "",
    "maintainer_email": "",
    "name": "asyncvnc",
    "package_url": "https://pypi.org/project/asyncvnc/",
    "platform": null,
    "project_url": "https://pypi.org/project/asyncvnc/",
    "project_urls": {
      "Homepage": "https://github.com/barneygale/asyncvnc"
    },
    "release_url": "https://pypi.org/project/asyncvnc/1.3.0/",
    "requires_dist": [
      "cryptography",
      "keysymdef",
      "numpy"
    ],
    "requires_python": ">=3.7",
    "summary": "Asynchronous VNC for Python",
    "version": "1.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17052401,
  "releases": {
    "1.0.0": [],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "26d79a5b615fed157e7d053a9f9bdfc3ec8a8451209457b5b97b17cdc2999bb6",
          "md5": "586c5a5a97f7c606e2f03cc3f8ef616a",
          "sha256": "319e60af34162ab1019cb1c45ce888b60beded6ebbaf75d6ae2ea8dab5a573bb"
        },
        "downloads": -1,
        "filename": "asyncvnc-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "586c5a5a97f7c606e2f03cc3f8ef616a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19276,
        "upload_time": "2021-11-14T00:48:00",
        "upload_time_iso_8601": "2021-11-14T00:48:00.537275Z",
        "url": "https://files.pythonhosted.org/packages/26/d7/9a5b615fed157e7d053a9f9bdfc3ec8a8451209457b5b97b17cdc2999bb6/asyncvnc-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "032818c997811c760927dc14ea02d3f36e71dd179489314bf20232ef5727e478",
          "md5": "2ed5f886961680285d6c8e19abba247c",
          "sha256": "7b5543314a6231dd06ae3298447ce0b25f159b951cf56be2069196fce8e832e9"
        },
        "downloads": -1,
        "filename": "asyncvnc-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2ed5f886961680285d6c8e19abba247c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 19410,
        "upload_time": "2021-11-14T01:35:04",
        "upload_time_iso_8601": "2021-11-14T01:35:04.853381Z",
        "url": "https://files.pythonhosted.org/packages/03/28/18c997811c760927dc14ea02d3f36e71dd179489314bf20232ef5727e478/asyncvnc-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3b893b49d39e6a7ce873b714dece58142bb00f35435e2c44a3b776a6752925ba",
          "md5": "2e4807293368c3e09cc4dd628a682c4c",
          "sha256": "bc33a074c3d6c1ad449e2738bd84029489fcc3e58f2e3b6bc977f940fa96bcf1"
        },
        "downloads": -1,
        "filename": "asyncvnc-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2e4807293368c3e09cc4dd628a682c4c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 19427,
        "upload_time": "2021-12-05T01:50:22",
        "upload_time_iso_8601": "2021-12-05T01:50:22.572310Z",
        "url": "https://files.pythonhosted.org/packages/3b/89/3b49d39e6a7ce873b714dece58142bb00f35435e2c44a3b776a6752925ba/asyncvnc-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4119e0883db53e4d9d60b16d50668ca4c7dbea1ce964ba2fa065b74058113c9b",
          "md5": "e39c508688987b92dbae82a0585d90d7",
          "sha256": "c9734d005142938b445ed153c3e3bc39a2a5c98f9924c9cb37879e2b2233fa60"
        },
        "downloads": -1,
        "filename": "asyncvnc-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e39c508688987b92dbae82a0585d90d7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 19829,
        "upload_time": "2022-05-23T18:26:20",
        "upload_time_iso_8601": "2022-05-23T18:26:20.858595Z",
        "url": "https://files.pythonhosted.org/packages/41/19/e0883db53e4d9d60b16d50668ca4c7dbea1ce964ba2fa065b74058113c9b/asyncvnc-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9d2eb7a282a3c2bbd5a278899dfaf7b904eb6e3afdea51737c8b7a4eb1eb1668",
          "md5": "0d4399138ffb8049cbc3f9f755d72c19",
          "sha256": "81a6759e549521b0b1171b91aa0e5bb1cb47715454acbf4c561c9be21f224e0b"
        },
        "downloads": -1,
        "filename": "asyncvnc-1.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0d4399138ffb8049cbc3f9f755d72c19",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 19980,
        "upload_time": "2023-02-24T23:57:29",
        "upload_time_iso_8601": "2023-02-24T23:57:29.170621Z",
        "url": "https://files.pythonhosted.org/packages/9d/2e/b7a282a3c2bbd5a278899dfaf7b904eb6e3afdea51737c8b7a4eb1eb1668/asyncvnc-1.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5b55e7c4483b8952bbe048a107d85a29f06a6336e302b79a2e0508d61d926e43",
          "md5": "3866604ad1856e5ed3be448e978f661a",
          "sha256": "f4de4e858449325aefcf82a46b34befb34afdd811e20e7af9b0440192e496e74"
        },
        "downloads": -1,
        "filename": "asyncvnc-1.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3866604ad1856e5ed3be448e978f661a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 19992,
        "upload_time": "2023-02-26T19:12:11",
        "upload_time_iso_8601": "2023-02-26T19:12:11.007180Z",
        "url": "https://files.pythonhosted.org/packages/5b/55/e7c4483b8952bbe048a107d85a29f06a6336e302b79a2e0508d61d926e43/asyncvnc-1.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5b55e7c4483b8952bbe048a107d85a29f06a6336e302b79a2e0508d61d926e43",
        "md5": "3866604ad1856e5ed3be448e978f661a",
        "sha256": "f4de4e858449325aefcf82a46b34befb34afdd811e20e7af9b0440192e496e74"
      },
      "downloads": -1,
      "filename": "asyncvnc-1.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3866604ad1856e5ed3be448e978f661a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 19992,
      "upload_time": "2023-02-26T19:12:11",
      "upload_time_iso_8601": "2023-02-26T19:12:11.007180Z",
      "url": "https://files.pythonhosted.org/packages/5b/55/e7c4483b8952bbe048a107d85a29f06a6336e302b79a2e0508d61d926e43/asyncvnc-1.3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}