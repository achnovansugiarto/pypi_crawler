{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# pyvsnr\n\n![](src/pyvsnr/data/fib_sem_result.png)\n\n## Description\n\nThis repository contains the sources of the 2D-CPU/GPU based denoising code of\n the VSNR algorithm.\n \n## Installation\n\n    $ pip install pyvsnr\n\n## Requirements\n\nFor **CPU** execution, the vsnr algorithm requires only the\n[numpy](https://numpy.org/) package, with **matplotlib** and **tifffile**\npackages for examples and tests running.\n\nFor **GPU** execution, the [cupy](https://cupy.dev) library is required.\nFollow the [installaton instructions](https://docs.cupy.dev/en/stable/install.html)\nfor more details.\n\n- numpy\n- cupy (for GPU execution, optional)\n- matplotlib\n- tifffile\n\n## Usage\n\nFor a single image processing :\n\n```python\nfrom pyvsnr import VSNR\nfrom skimage import io\n\n# read the image to correct\nimg = io.imread('my_image.tif')\n\n# vsnr object creation\nvsnr = VSNR(img.shape)\n\n# add filter (at least one !)\nvsnr.add_filter(alpha=1e-2, name='gabor', sigma=(1, 30), theta=20)\nvsnr.add_filter(alpha=5e-2, name='gabor', sigma=(3, 40), theta=20)\n\n# vsnr initialization\nvsnr.initialize()\n\n# image processing\nimg_corr = vsnr.eval(img, maxit=100, cvg_threshold=1e-4)\n...\n```\nSome applicative examples are given in \n[examples.py](https://github.com/patquem/pyvsnr/tree/main/src/pyvsnr/examples.py). \n \n**stripes removal example** :\n\n    $ python\n    >>> from pyvsnr.examples import ex_camera \n    >>> ex_camera('stripes') \n\n![](src/pyvsnr/data/camera_stripes_result.png)\n\n**curtains removal example** :\n\n    $ python\n    >>> from pyvsnr.examples import ex_camera \n    >>> ex_camera('curtains') \n\n![](src/pyvsnr/data/camera_curtains_result.png)\n\n**curtains removal example on real image (FIB-SEM)** :\n\n    $ python\n    >>> from pyvsnr.examples import ex_fib_sem \n    >>> ex_fib_sem() \n\n![](src/pyvsnr/data/fib_sem_result.png)\n\n\n**Note 1 :** in case of images batchs, in particularly in the case of\nstacks where successive images are quite similar (FIB-SEM slices for instance),\ncomputation time can be significantly decreased by this way :\n\n```python\nimport glob\nfrom pyvsnr import VSNR\nfrom skimage import io\n\nfnames = sorted(glob.glob('my_directory/*.tif'))\nimg0 = io.imread(fnames[0])\nvsnr = VSNR(img0.shape) # assuming all the images have the same size !!!\nvsnr.add_filter(alpha=1e-2, name='gabor', sigma=(1, 30), theta=20)\nvsnr.add_filter(alpha=5e-2, name='gabor', sigma=(3, 40), theta=20)\nvsnr.initialize()\n\n# images processing\nfor fname in fnames:\n    img = io.imread(fname)\n    img_corr = vsnr.eval(img, maxit=100, cvg_threshold=1e-4)\n    ...\n```\n**Note 2 :** in case of GPU executions, the first run is always more longer\n than the other ones. Keep it in mind when evaluating your processing time.\n \n **Running times evolution :** \n \n     $ python\n    >>> from pyvsnr.examples import ex_perf_evaluation \n    >>> ex_perf_evaluation() \n    \n![](src/pyvsnr/data/perf_evaluation_result.png)\n\n## Developers information\n\nBefore pushing your developments, check the unitests run correctly.\n\n    $ python -m unittest pyvsnr.tests\n    VSN will run on CPU ...                                                \n    CPU/GPU running time : 4.296875                                        \n    .VSN will run on CPU ...                                               \n    CPU/GPU running time : 4.203125                                        \n    .                                                                      \n    ---------------------------------------------------------------------- \n    Ran 2 tests in 8.512s                                                  \n                                                                           \n    OK                                                                     \n    \n## Authors information\n\nThis is a port to python of the original Matlab code developed by Jerome\nFEHRENBACH and Pierre WEISS.\n\nAll credit goes to the original author.\n\nIn case you use the results of this code with your article, please don't forget\nto cite:\n\n- Fehrenbach, Jérôme, Pierre Weiss, and Corinne Lorenzo. \"*Variational algorithms to remove stationary noise: applications to microscopy imaging.*\" IEEE Transactions on Image Processing 21.10 (2012): 4420-4430.\n- Fehrenbach, Jérôme, and Pierre Weiss. \"*Processing stationary noise: model and parameter selection in variational methods.*\" SIAM Journal on Imaging Sciences 7.2 (2014): 613-640.\n- *Escande, Paul, Pierre Weiss, and Wenxing Zhang. \"*A variational model for multiplicative structured noise removal.*\" Journal of Mathematical Imaging and Vision 57.1 (2017): 43-55.\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/patquem/pyvsnr",
    "keywords": "",
    "license": "",
    "maintainer": "Patrick QUEMERE",
    "maintainer_email": "patrick.quemere@cea.fr",
    "name": "pyvsnr",
    "package_url": "https://pypi.org/project/pyvsnr/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyvsnr/",
    "project_urls": {
      "Homepage": "https://github.com/patquem/pyvsnr"
    },
    "release_url": "https://pypi.org/project/pyvsnr/1.0.0/",
    "requires_dist": [
      "numpy",
      "matplotlib",
      "tifffile"
    ],
    "requires_python": ">=3.6",
    "summary": "VSNR algorithm for image destripping",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11571592,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7ef6b950a9fcccb207eb6d220489c4258dc2c4ed2340c04d76f505691aa20378",
          "md5": "cabdb982e22fefe23272a2911b600dc1",
          "sha256": "20890c6f60c09818235bc8fc3b27da96119af95353a0a6bb7c07227ec9f57f30"
        },
        "downloads": -1,
        "filename": "pyvsnr-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cabdb982e22fefe23272a2911b600dc1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 14763242,
        "upload_time": "2021-09-28T13:55:23",
        "upload_time_iso_8601": "2021-09-28T13:55:23.933855Z",
        "url": "https://files.pythonhosted.org/packages/7e/f6/b950a9fcccb207eb6d220489c4258dc2c4ed2340c04d76f505691aa20378/pyvsnr-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c990e4ecf54913f633ccbb0a14a37b3c4d8ac7b827bfd13e833d61749aa7cfdd",
          "md5": "72cddf67afd4db3ac8630ca8b79fb505",
          "sha256": "70a2390db122a924cfbaea58fb3f7a61dd6268dbe3495dbd79244d55d656a252"
        },
        "downloads": -1,
        "filename": "pyvsnr-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "72cddf67afd4db3ac8630ca8b79fb505",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7374693,
        "upload_time": "2021-09-28T13:55:26",
        "upload_time_iso_8601": "2021-09-28T13:55:26.404324Z",
        "url": "https://files.pythonhosted.org/packages/c9/90/e4ecf54913f633ccbb0a14a37b3c4d8ac7b827bfd13e833d61749aa7cfdd/pyvsnr-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7ef6b950a9fcccb207eb6d220489c4258dc2c4ed2340c04d76f505691aa20378",
        "md5": "cabdb982e22fefe23272a2911b600dc1",
        "sha256": "20890c6f60c09818235bc8fc3b27da96119af95353a0a6bb7c07227ec9f57f30"
      },
      "downloads": -1,
      "filename": "pyvsnr-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "cabdb982e22fefe23272a2911b600dc1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 14763242,
      "upload_time": "2021-09-28T13:55:23",
      "upload_time_iso_8601": "2021-09-28T13:55:23.933855Z",
      "url": "https://files.pythonhosted.org/packages/7e/f6/b950a9fcccb207eb6d220489c4258dc2c4ed2340c04d76f505691aa20378/pyvsnr-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c990e4ecf54913f633ccbb0a14a37b3c4d8ac7b827bfd13e833d61749aa7cfdd",
        "md5": "72cddf67afd4db3ac8630ca8b79fb505",
        "sha256": "70a2390db122a924cfbaea58fb3f7a61dd6268dbe3495dbd79244d55d656a252"
      },
      "downloads": -1,
      "filename": "pyvsnr-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "72cddf67afd4db3ac8630ca8b79fb505",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 7374693,
      "upload_time": "2021-09-28T13:55:26",
      "upload_time_iso_8601": "2021-09-28T13:55:26.404324Z",
      "url": "https://files.pythonhosted.org/packages/c9/90/e4ecf54913f633ccbb0a14a37b3c4d8ac7b827bfd13e833d61749aa7cfdd/pyvsnr-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}