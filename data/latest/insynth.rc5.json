{
  "info": {
    "author": "Marian Lambert",
    "author_email": "marlambe@mail.uni-mannheim.de",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "<div id=\"top\"></div>\n<!--\n*** Thanks for checking out the Best-README-Template. If you have a suggestion\n*** that would make this better, please fork the repo and create a pull request\n*** or simply open an issue with the tag \"enhancement\".\n*** Don't forget to give the project a star!\n*** Thanks again! Now go create something AMAZING! :D\n-->\n\n\n\n<!-- PROJECT SHIELDS -->\n<!--\n*** I'm using markdown \"reference style\" links for readability.\n*** Reference links are enclosed in brackets [ ] instead of parentheses ( ).\n*** See the bottom of this document for the declaration of the reference variables\n*** for contributors-url, forks-url, etc. This is an optional, concise syntax you may use.\n*** https://www.markdownguide.org/basic-syntax/#reference-style-links\n-->\n![CI/CD](https://github.com/mlxyz/insynth/actions/workflows/ci.yaml/badge.svg)\n[![Codacy Badge](https://app.codacy.com/project/badge/Grade/069d3759b9e24a468bd4f47c0c3fd02f)](https://www.codacy.com/gh/mlxyz/insynth/dashboard?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=mlxyz/insynth&amp;utm_campaign=Badge_Grade)\n[![Bugs](https://sonarcloud.io/api/project_badges/measure?project=mlxyz_insynth&metric=bugs)](https://sonarcloud.io/summary/new_code?id=mlxyz_insynth)\n[![Lines of Code](https://sonarcloud.io/api/project_badges/measure?project=mlxyz_insynth&metric=ncloc)](https://sonarcloud.io/summary/new_code?id=mlxyz_insynth)\n[![Maintainability Rating](https://sonarcloud.io/api/project_badges/measure?project=mlxyz_insynth&metric=sqale_rating)](https://sonarcloud.io/summary/new_code?id=mlxyz_insynth)\n[![Security Rating](https://sonarcloud.io/api/project_badges/measure?project=mlxyz_insynth&metric=security_rating)](https://sonarcloud.io/summary/new_code?id=mlxyz_insynth)\n[![codecov](https://codecov.io/gh/mlxyz/insynth/branch/master/graph/badge.svg?token=UCHS79CXM7)](https://codecov.io/gh/mlxyz/insynth)\n[![FOSSA Status](https://app.fossa.com/api/projects/git%2Bgithub.com%2Fmlxyz%2Finsynth.svg?type=shield)](https://app.fossa.com/projects/git%2Bgithub.com%2Fmlxyz%2Finsynth?ref=badge_shield)\n[![Documentation Status](https://readthedocs.org/projects/insynth/badge/?version=latest)](https://insynth.readthedocs.io/en/latest/?badge=latest)\n\n\n\n\n<!-- PROJECT LOGO -->\n<br />\n<div align=\"center\">\n  <a href=\"https://github.com/mlxyz/insynth\">\n    <img src=\"images/logo.png\" alt=\"Logo\" width=\"80\" height=\"80\">\n  </a>\n\n<h3 align=\"center\">InSynth</h3>\n\n  <p align=\"center\">\n    Robustness testing of Keras models using domain-specific input generation in Python\n    <br />\n    <a href=\"https://insynth.readthedocs.io/en/latest/\"><strong>Explore the docs »</strong></a>\n    <br />\n    <br />\n    <a href=\"https://github.com/mlxyz/insynth\">View Demo</a>\n    ·\n    <a href=\"https://github.com/mlxyz/insynth/issues\">Report Bug</a>\n    ·\n    <a href=\"https://github.com/mlxyz/insynth/issues\">Request Feature</a>\n  </p>\n</div>\n\n\n\n<!-- TABLE OF CONTENTS -->\n<details>\n  <summary>Table of Contents</summary>\n  <ol>\n    <li>\n      <a href=\"#about-the-project\">About The Project</a>\n      <ul>\n        <li><a href=\"#built-with\">Built With</a></li>\n      </ul>\n    </li>\n    <li>\n      <a href=\"#getting-started\">Getting Started</a>\n      <ul>\n        <li><a href=\"#prerequisites\">Prerequisites</a></li>\n        <li><a href=\"#installation\">Installation</a></li>\n      </ul>\n    </li>\n    <li><a href=\"#usage\">Usage</a></li>\n    <li><a href=\"#experiments\">Reproduce Experimental Results</a></li>\n    <li><a href=\"#contributing\">Contributing</a></li>\n    <li><a href=\"#license\">License</a></li>\n    <li><a href=\"#contact\">Contact</a></li>\n  </ol>\n</details>\n\n\n\n<!-- ABOUT THE PROJECT -->\n\n## About The Project\n\nThe robustness of machine learning models is crucial to their safe and reliable operation in real-world applications.\nHowever, conducting robustness tests is hard as it requires evaluating the model under test repeatedly on different\ndatasets.\n\n_InSynth_ provides an easy-to-use, efficient and reliable framework for conducting robustness tests.\n\nIt works by applying a set of domain-specific input generation techniques (image, audio or text) to the seed dataset,\nand then evaluating the model under test on the generated inputs. Then, a set of coverage criteria are evaluated to\ndetermine how well each dataset covers the model. Finally, a report is generated comparing the models' performance and\ncoverage on different generated datasets.\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n### Built With\n\n  * [Python](https://www.python.org/)\n  * [Numpy](https://numpy.org/)\n  * [Keras](https://keras.io/)\n  * [Pillow](https://python-pillow.org/)\n  * [librosa](https://github.com/librosa/librosa)\n  * [audiomentations](https://github.com/iver56/audiomentations)\n  * [albumentations](https://albumentations.ai/)\n  * [scipy](https://scipy.org/)\n  * [pandas](https://pandas.pydata.org/)\n  * [pydub](https://github.com/jiaaro/pydub)\n  * [tqdm](https://github.com/tqdm/tqdm)\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n\n\n<!-- GETTING STARTED -->\n\n## Getting Started\n\nThis section describes the steps to follow when you want to get started with the _InSynth_ project.\n\n### Prerequisites\n\nBefore installing _InSynth_, make sure you have the following software applications installed and updated to the latest\nversion.\n\n  * [Python](https://www.python.org/)\n  * [pip](https://pip.pypa.io/en/stable/)\n  * [ffmpeg](https://www.ffmpeg.org/)\n\n### Installation\n\nTo install _InSynth_, only one step is required.\n\nRun the following command to install the python package from the PyPI repository:\n\n   ```sh\n   pip install insynth\n   ```\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n\n\n<!-- USAGE EXAMPLES -->\n\n## Usage\n\n_InSynth_ can be used in a variety of ways depending on the goal you are trying to achieve.\n\n### Data Generation\nTo mutate an existing dataset using any of the perturbators provided in the framework, follow the steps below.\n\n1. Import the perturbator (e.g. the `ImageNoisePerturbator`) from the respective module.\n      ````python\n    from insynth.perturbators.image import ImageNoisePerturbator\n      ````\n2. Create an instance of the perturbator.\n      ````python\n    perturbator = ImageNoisePerturbator()\n      ````\n3. Create a `PIL` image object from a file stored on disk and apply the perturbator to it.\n      ````python\n      seed_image = Image.open('path/to/image.jpg')\n      mutated_image = perturbator.apply(seed_image)\n      ````\n    For audio perturbators, the same procedure applies but using the `librosa.load` method.\n    Similarly, text perturbators expect the seed text to be provided as a string.\n4. Save the mutated image to disk or display it.\n      ````python\n      mutated_image.save('path/to/mutated_image.jpg')\n      mutated_image.show()\n      ````\n   \n### Coverage Criteria Calculation\nTo calculate the coverage criteria for a model, follow the steps below.\n\n1. Import the coverage criteria (e.g. the `CoverageCriteria`) from the respective module.\n      ````python\n    from insynth.calculators.neuron import StrongNeuronActivationCoverageCalculator\n      ````\n2. Create an instance of the coverage criteria and pass the model to be tested to the constructor.\n      ````python\n    coverage_calculator = StrongNeuronActivationCoverageCalculator(model)\n      ````\n   If applicable, run the `update_neuron_bounds` method to determine the neuron bounds of the model.\n      ````python\n    coverage_calculator.update_neuron_bounds(training_dataset)\n      ````\n3. Run the `update_coverage` method to update model coverage for the given input.\n      ````python\n    coverage_calculator.update_coverage(input_data)\n      ````\n4. Run the `get_coverage` method to retrieve the current model coverage.\n      ````python\n    coverage = coverage_calculator.get_coverage()\n      ````\n5. Print the coverage to the console.\n      ````python\n    print(coverage)\n      ````\n\n### Robustness Testing\nThe previous two sections describe how to generate a mutated dataset and calculate the coverage criteria for a model.\nThese are prerequisites for testing the robustness of a model.\nIn order to conduct a full end-to-end robustness test, the runner class is provided in _InSynth_.\n\n1. Import the runner class from the respective module.\n      ````python\n    from insynth.runners import BasicImageRunner\n      ````\n2. Create an instance of the runner class and pass the list of perturbators, the list of coverage calculators and the model to the constructor in addition to the dataset inputs and target variables.\n      ````python\n    runner = BasicImageRunner(list_of_perturbators, list_of_coverage_calculators, dataset_x, dataset_y, model)\n      ````\n    Note that the `dataset_x` parameter should be a method returning a python generator iterating over all samples to enable the processing of large datasets which do not fit into memory.\n    ````python\n   dataset_x = lambda: (x for x in dataset)\n   ````\n3. Run the `run` method to conduct the end-to-end robustness test.\n      ````python\n    report, robustness_score = runner.run()\n      ````\n4. Use the `report` variable to analyse the test results or use the `robustness_score` variable to retrieve a single robustness measure of the model.\n      ````python\n    print(report)\n    print(robustness_score)\n      ````\nIf you want to apply all available perturbators and coverage calculators for a given domain, utilize the respective `ComprehensiveRunner` classes.\n\nFor more examples, please refer to the [Documentation](https://insynth.readthedocs.io/en/latest/)\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n<!-- EXPERIMENTS -->\n\n## Reproduce Experimental Results\n\nThe experimental results from the thesis can be reproduced by running the corresponding scripts in the `experiments` directory.\n\nThe performance comparison experiment is conducted in the `reproduce_coverage_speed_comparison.py` script.\n\nThe performance and coverage experiment is conducted in the `reproduce_imagenet_results.py`, `reproduce_speaker_recognition_results.py` and `reproduce_sentiment_analysis_results.py` scripts. \nTo generate the speaker recognition and sentiment analysis models, first the `generate_model_speaker_recognition.py` and `generate_model_sentiment_analysis.py` scripts have to be run.\n\nThe perturbation strength experiment is conducted in the `reproduce_imagenet_sensitivity_results.py`, `reproduce_speaker_recognition_sensitivity_results.py` and `reproduce_sentiment_analysis_sensitivity_results.py` scripts.\n\nLastly, the diagrams used in the thesis can be generated by running the `result_analysis.ipynb` notebook.\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n\n\n<!-- CONTRIBUTING -->\n\n## Contributing\n\nContributions are what make the open source community such an amazing place to learn, inspire, and create. Any\ncontributions you make are **greatly appreciated**.\n\nIf you have a suggestion that would make this better, please fork the repo and create a pull request. You can also\nsimply open an issue with the tag \"enhancement\". Don't forget to give the project a star! Thanks again!\n\n  1. Fork the Project\n  2. Create your Feature Branch (`git checkout -b feature/AmazingFeature`)\n  3. Commit your Changes (`git commit -m 'Add some AmazingFeature'`)\n  4. Push to the Branch (`git push origin feature/AmazingFeature`)\n  5. Open a Pull Request\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n\n\n<!-- LICENSE -->\n\n## License\n\nDistributed under the MIT License. See `LICENSE` for more information.\n\n[![FOSSA Status](https://app.fossa.com/api/projects/git%2Bgithub.com%2Fmlxyz%2Finsynth.svg?type=large)](https://app.fossa.com/projects/git%2Bgithub.com%2Fmlxyz%2Finsynth?ref=badge_large)\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n\n\n<!-- CONTACT -->\n\n## Contact\n\nMarian Lambert\n\nProject Link: [https://github.com/mlxyz/insynth](https://github.com/mlxyz/insynth)\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n\n\n<!-- MARKDOWN LINKS & IMAGES -->\n<!-- https://www.markdownguide.org/basic-syntax/#reference-style-links -->\n\n[contributors-shield]: https://img.shields.io/github/contributors/mlxyz/insynth.svg?style=for-the-badge\n\n[contributors-url]: https://github.com/mlxyz/insynth/graphs/contributors\n\n[forks-shield]: https://img.shields.io/github/forks/mlxyz/insynth.svg?style=for-the-badge\n\n[forks-url]: https://github.com/mlxyz/insynth/network/members\n\n[stars-shield]: https://img.shields.io/github/stars/mlxyz/insynth.svg?style=for-the-badge\n\n[stars-url]: https://github.com/mlxyz/insynth/stargazers\n\n[issues-shield]: https://img.shields.io/github/issues/mlxyz/insynth.svg?style=for-the-badge\n\n[issues-url]: https://github.com/mlxyz/insynth/issues\n\n[license-shield]: https://img.shields.io/github/license/mlxyz/insynth.svg?style=for-the-badge\n\n[license-url]: https://github.com/mlxyz/insynth/blob/master/LICENSE.txt\n\n[linkedin-shield]: https://img.shields.io/badge/-LinkedIn-black.svg?style=for-the-badge&logo=linkedin&colorB=555\n\n[linkedin-url]: https://linkedin.com/in/linkedin_username\n\n[product-screenshot]: images/screenshot.png\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mlxyz/insynth",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "insynth",
    "package_url": "https://pypi.org/project/insynth/",
    "platform": "",
    "project_url": "https://pypi.org/project/insynth/",
    "project_urls": {
      "Bug Tracker": "https://github.com/mlxyz/insynth/issues",
      "Homepage": "https://github.com/mlxyz/insynth"
    },
    "release_url": "https://pypi.org/project/insynth/1.0.2/",
    "requires_dist": [
      "audiomentations",
      "coverage",
      "librosa",
      "numpy",
      "requests",
      "scipy",
      "tensorflow",
      "tqdm",
      "Pillow",
      "pandas",
      "pydub",
      "scikit-learn",
      "tensorflow-datasets"
    ],
    "requires_python": ">=3.6",
    "summary": "Domain-specific generation of test inputs for robustness testing of ML models",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13047832,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f8445ad04e71393814a379d63f0ec5c49f1ccb833a309dacbebc5f2206cbdda4",
          "md5": "ed7704414cbc9355db4bee1af4daa080",
          "sha256": "5bf233711bd5484bdf2847c8afaa4e3a34828ca607d29b685ed1f931dd0cec07"
        },
        "downloads": -1,
        "filename": "insynth-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ed7704414cbc9355db4bee1af4daa080",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4080,
        "upload_time": "2022-02-01T21:19:28",
        "upload_time_iso_8601": "2022-02-01T21:19:28.251446Z",
        "url": "https://files.pythonhosted.org/packages/f8/44/5ad04e71393814a379d63f0ec5c49f1ccb833a309dacbebc5f2206cbdda4/insynth-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "02e8f8c4c6e2cf9c6718509bb4e5a0629d39e8c43f28f25e40e0e677024fad68",
          "md5": "85ba4827856fd9972a3836df2bccf9f3",
          "sha256": "aec16fef7be1dd78f83de132f31dfac819a45c1784c1e10cd2bf095ab075916f"
        },
        "downloads": -1,
        "filename": "insynth-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "85ba4827856fd9972a3836df2bccf9f3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3553,
        "upload_time": "2022-02-01T21:19:29",
        "upload_time_iso_8601": "2022-02-01T21:19:29.300123Z",
        "url": "https://files.pythonhosted.org/packages/02/e8/f8c4c6e2cf9c6718509bb4e5a0629d39e8c43f28f25e40e0e677024fad68/insynth-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a1e736006c2f4d4f141f68072e6791f0adc19499f9bdafea4dc43e49f776dc1d",
          "md5": "3636087a607d6a0172a369f17150c9e9",
          "sha256": "1b93d7a62e1c66fdbb885bf942b00902bdef24cee9ddb2eec5b6fba314e7fd60"
        },
        "downloads": -1,
        "filename": "insynth-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3636087a607d6a0172a369f17150c9e9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 19836,
        "upload_time": "2022-02-16T19:58:03",
        "upload_time_iso_8601": "2022-02-16T19:58:03.512741Z",
        "url": "https://files.pythonhosted.org/packages/a1/e7/36006c2f4d4f141f68072e6791f0adc19499f9bdafea4dc43e49f776dc1d/insynth-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba6e9a5decec05c0aed9149b314f948797b8187ffe4485b2eaef9789e18baa79",
          "md5": "fe2dc43087303b1907c050e378b9e3da",
          "sha256": "e0bf04a63ef2311e0bc4ac4354a5ef60382c0e80427154d23aba2feea6a16534"
        },
        "downloads": -1,
        "filename": "insynth-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "fe2dc43087303b1907c050e378b9e3da",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 20775,
        "upload_time": "2022-02-16T19:58:04",
        "upload_time_iso_8601": "2022-02-16T19:58:04.961550Z",
        "url": "https://files.pythonhosted.org/packages/ba/6e/9a5decec05c0aed9149b314f948797b8187ffe4485b2eaef9789e18baa79/insynth-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cbcb0fac823b686e16dcfe7a6b14c9e0f3993229e07b478170b8859c5c799b3d",
          "md5": "0c59c26cf233656c05344dd3695f3fdb",
          "sha256": "443f38204d085839a2e7bdfcfc42c5ba86c64b1f2a8404f9450c199015fde0b8"
        },
        "downloads": -1,
        "filename": "insynth-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0c59c26cf233656c05344dd3695f3fdb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 34794,
        "upload_time": "2022-03-01T16:13:24",
        "upload_time_iso_8601": "2022-03-01T16:13:24.254853Z",
        "url": "https://files.pythonhosted.org/packages/cb/cb/0fac823b686e16dcfe7a6b14c9e0f3993229e07b478170b8859c5c799b3d/insynth-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c3c08fb0af2a37a98a731292cb96b0235e2c4d54916a0ac8372527c53bc40b71",
          "md5": "e3f5e19e54b7ed12b22935273d5d03e1",
          "sha256": "b5b153e19e60e94637dde249df1134f54b1698dcd30e8d245ea52405571d49de"
        },
        "downloads": -1,
        "filename": "insynth-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e3f5e19e54b7ed12b22935273d5d03e1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 23688,
        "upload_time": "2022-03-01T16:13:26",
        "upload_time_iso_8601": "2022-03-01T16:13:26.751676Z",
        "url": "https://files.pythonhosted.org/packages/c3/c0/8fb0af2a37a98a731292cb96b0235e2c4d54916a0ac8372527c53bc40b71/insynth-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bdb2124b12905a51a30dc6fe5a386cf43a408f7931fc737398297154038e56d6",
          "md5": "361852d70b8b7b789fe6296434d16834",
          "sha256": "d7b36d80faeed26b56e37215436e50cb97e9d9cde1523b1a3439d3465cea180b"
        },
        "downloads": -1,
        "filename": "insynth-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "361852d70b8b7b789fe6296434d16834",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 34744,
        "upload_time": "2022-03-01T16:51:41",
        "upload_time_iso_8601": "2022-03-01T16:51:41.439051Z",
        "url": "https://files.pythonhosted.org/packages/bd/b2/124b12905a51a30dc6fe5a386cf43a408f7931fc737398297154038e56d6/insynth-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4a8c6f8f15814ca15394c78510c1aaa74e28074e8dee9f060f1484ca8a2faaf7",
          "md5": "f4ced0ac003786bfd65335d1125a11b3",
          "sha256": "c764c91e346c85fc5aada45dbce4c20654d446f0cbe5e8a280d26d28b96fb82a"
        },
        "downloads": -1,
        "filename": "insynth-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f4ced0ac003786bfd65335d1125a11b3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 23631,
        "upload_time": "2022-03-01T16:51:43",
        "upload_time_iso_8601": "2022-03-01T16:51:43.114509Z",
        "url": "https://files.pythonhosted.org/packages/4a/8c/6f8f15814ca15394c78510c1aaa74e28074e8dee9f060f1484ca8a2faaf7/insynth-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "752351183c9613963600b6cb783cab88dc84f70f731b53274ef5314c9ebcb250",
          "md5": "a778f63f45531b6a332c64b96d60fddc",
          "sha256": "8ba3a433709990e4272fa97f6bb6cd41cbf75b5b6c8ffd04777f40244fdd65e1"
        },
        "downloads": -1,
        "filename": "insynth-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a778f63f45531b6a332c64b96d60fddc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 35909,
        "upload_time": "2022-03-01T17:14:11",
        "upload_time_iso_8601": "2022-03-01T17:14:11.332650Z",
        "url": "https://files.pythonhosted.org/packages/75/23/51183c9613963600b6cb783cab88dc84f70f731b53274ef5314c9ebcb250/insynth-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "913b139225916ccbd8942f33da2c6f2a60bbaa2bf89abfeec43ad001abda8138",
          "md5": "f69bf58ebf897648f6743dcaf9f64326",
          "sha256": "1b83fa76dd944cee62ff83e56ca8257c661c4e5f9a9279a2a153f4cc57734629"
        },
        "downloads": -1,
        "filename": "insynth-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f69bf58ebf897648f6743dcaf9f64326",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 23704,
        "upload_time": "2022-03-01T17:14:13",
        "upload_time_iso_8601": "2022-03-01T17:14:13.348408Z",
        "url": "https://files.pythonhosted.org/packages/91/3b/139225916ccbd8942f33da2c6f2a60bbaa2bf89abfeec43ad001abda8138/insynth-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "752351183c9613963600b6cb783cab88dc84f70f731b53274ef5314c9ebcb250",
        "md5": "a778f63f45531b6a332c64b96d60fddc",
        "sha256": "8ba3a433709990e4272fa97f6bb6cd41cbf75b5b6c8ffd04777f40244fdd65e1"
      },
      "downloads": -1,
      "filename": "insynth-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a778f63f45531b6a332c64b96d60fddc",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 35909,
      "upload_time": "2022-03-01T17:14:11",
      "upload_time_iso_8601": "2022-03-01T17:14:11.332650Z",
      "url": "https://files.pythonhosted.org/packages/75/23/51183c9613963600b6cb783cab88dc84f70f731b53274ef5314c9ebcb250/insynth-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "913b139225916ccbd8942f33da2c6f2a60bbaa2bf89abfeec43ad001abda8138",
        "md5": "f69bf58ebf897648f6743dcaf9f64326",
        "sha256": "1b83fa76dd944cee62ff83e56ca8257c661c4e5f9a9279a2a153f4cc57734629"
      },
      "downloads": -1,
      "filename": "insynth-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "f69bf58ebf897648f6743dcaf9f64326",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 23704,
      "upload_time": "2022-03-01T17:14:13",
      "upload_time_iso_8601": "2022-03-01T17:14:13.348408Z",
      "url": "https://files.pythonhosted.org/packages/91/3b/139225916ccbd8942f33da2c6f2a60bbaa2bf89abfeec43ad001abda8138/insynth-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}