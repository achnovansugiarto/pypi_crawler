{
  "info": {
    "author": "Dan Hasting",
    "author_email": "dan@hasting.info",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: End Users/Desktop",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Operating System :: POSIX",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4"
    ],
    "description": "pywu\n====\n\npywu is a simple python script for fetching data from Weather\nUnderground's API. You need an API key to use the script (get it\n`here <http://www.wunderground.com/weather/api/>`__).\n\n\nInstallation\n------------\n\npywu is available on `PyPI <https://pypi.python.org/pypi/pywu/>`__. You can\ninstall it with pip:\n\n::\n\n    pip3 install pywu\n\nIf installing from source run:\n\n::\n\n    python3 setup.py build install\n\n\nUsage\n-----\n\n::\n\n    pywu [-h] [-v] [-f <min>] {fetch,current,forecast,info} ...\n\nYou must first fetch the data using the fetch command. This stores a\nfile in /tmp that contains the data. All other commands (current,\nforecast, and info) read from this file.\n\nfetch\n~~~~~\n\nPull weather data from server. Use the format '<API key> <city>,<state>'\nor simply your API key and zip code.\n\n::\n\n    pywu fetch <apikey> 'New York,NY'\n    pywu fetch <apikey> 10001\n\nYou can also specify a language (the default is English). For example:\n\n::\n\n    pywu fetch <apikey> <location> FR\n\nA list of possible language codes can be found\n`here <http://www.wunderground.com/weather/api/d/docs?d=language-support>`__.\n\nInstead of the above, you may also use a ~/.pywu.conf file and simply\ncall ``pywu fetch``. See below for more information.\n\ncurrent\n~~~~~~~\n\nDisplay current statistics. Possible commands:\n\n::\n\n    pywu current condition\n    pywu current temp_f\n    pywu current temp_c\n    pywu current humidity\n    pywu current icon\n    pywu current wind\n    pywu current pressure_mb\n    pywu current pressure_in\n    pywu current dewpoint_c\n    pywu current dewpoint_f\n    pywu current heat_index_c\n    pywu current heat_index_f\n    pywu current windchill_c\n    pywu current windchill_f\n    pywu current feelslike_c\n    pywu current feelslike_f\n    pywu current visibility_mi\n    pywu current visibility_km\n    pywu current prec_hour_in\n    pywu current prec_hour_cm\n    pywu current prec_day_in\n    pywu current prec_day_cm\n\nforecast\n~~~~~~~~\n\nDisplay forecast statistics. Possible commands:\n\n::\n\n    pywu forecast day\n    pywu forecast shortdate\n    pywu forecast longdate\n    pywu forecast low_f\n    pywu forecast low_c\n    pywu forecast high_f\n    pywu forecast high_c\n    pywu forecast icon\n    pywu forecast condition\n    pywu forecast rain_in\n    pywu forecast rain_mm\n    pywu forecast snow_in\n    pywu forecast snow_cm\n\nYou can also specify a day:\n\n::\n\n    -d {0,1,2,3,4,5,6,7,8,9}, --day {0,1,2,3,4,5,6,7,8,9}\n\nDefault is 0 (today).\n\nExample:\n\n::\n\n    pywu forecast condition --day 1\n\ninfo\n~~~~\n\nDisplay forecast information. Possible commands:\n\n::\n\n    pywu info city\n    pywu info postal\n    pywu info datetime\n    pywu info location\n    pywu info country\n    pywu info latitude\n    pywu info longitude\n    pywu info elevation\n    pywu info observation\n\nVerbose Output\n~~~~~~~~~~~~~~\n\npywu is designed to stay quiet instead of print information or errors.\nThis is so these messages will not appear when used with Conky. To\noverride this, specify the -v parameter:\n\n::\n\n    pywu -v fetch\n\nFetching Inline\n~~~~~~~~~~~~~~~\n\nThis requires a config file at ~/.pywu.conf. You can also fetch new\ninformation at the same time as you print current/forecast information:\n\n::\n\n    pywu --fetch <min> current condition\n    pywu -f <min> forecast condition -d 3\n\npywu will fetch new information if the current information is older than <min>.\n\n\nConfig file\n-----------\n\npywu supports reading from a config file as well as passing your API\nkey/location via command line. A sample configuration:\n\n~/.pywu.conf:\n\n::\n\n    [PYWU]\n    apikey=<yourapikey>\n    location=New York City, NY\n\nYou can also specify a language within the config file:\n\n::\n\n    [PYWU]\n    ...\n    language=FR\n\n\nConky\n-----\n\npywu can be used with Conky. An example conkyrc is provided in the\nexamples directory. It's recommended to have a script call\n``pywu fetch`` before conky starts and then periodcally from within the\nconkyrc (the example shows every 15 minutes or 900 seconds).",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dh4/pywu",
    "keywords": null,
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "pywu",
    "package_url": "https://pypi.org/project/pywu/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/pywu/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/dh4/pywu"
    },
    "release_url": "https://pypi.org/project/pywu/1.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "A simple python script for fetching data from Weather Underground's API.",
    "version": "1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1725621,
  "releases": {
    "1.0": [],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7307027e317453736610a7b144787b4c47db73c692de9172781f1f505abcfce4",
          "md5": "552d4482b25448fe256d7bf3cf8a5922",
          "sha256": "77ac377bf9b0367c580d08f6eeb631af1e8ceba2b7e9ef64cccf80bd9262394a"
        },
        "downloads": -1,
        "filename": "pywu-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "552d4482b25448fe256d7bf3cf8a5922",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8598,
        "upload_time": "2015-09-16T19:24:14",
        "upload_time_iso_8601": "2015-09-16T19:24:14.395496Z",
        "url": "https://files.pythonhosted.org/packages/73/07/027e317453736610a7b144787b4c47db73c692de9172781f1f505abcfce4/pywu-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7307027e317453736610a7b144787b4c47db73c692de9172781f1f505abcfce4",
        "md5": "552d4482b25448fe256d7bf3cf8a5922",
        "sha256": "77ac377bf9b0367c580d08f6eeb631af1e8ceba2b7e9ef64cccf80bd9262394a"
      },
      "downloads": -1,
      "filename": "pywu-1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "552d4482b25448fe256d7bf3cf8a5922",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8598,
      "upload_time": "2015-09-16T19:24:14",
      "upload_time_iso_8601": "2015-09-16T19:24:14.395496Z",
      "url": "https://files.pythonhosted.org/packages/73/07/027e317453736610a7b144787b4c47db73c692de9172781f1f505abcfce4/pywu-1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}