{
  "info": {
    "author": "Augusto Destrero",
    "author_email": "a.destrero@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "pyworkingdays\r\n=============\r\n\r\nThis package let you perform simple date arithmetics on standard\r\n*datetime.date* objects taking into account working days (weekend,\r\nholidays).\r\n\r\nPython compatibility\r\n--------------------\r\n\r\nThe package is continuosly tested on Python 2.7, 3.2, 3.3 and 3.4.\r\n\r\n.. image:: https://travis-ci.org/baxeico/pyworkingdays.svg?branch=master  \r\n    :target: https://travis-ci.org/baxeico/pyworkingdays\r\n\r\n\r\nRequirements\r\n------------\r\n\r\n`python-dateutil <https://pypi.python.org/pypi/python-dateutil>`_\r\n\r\nPros\r\n----\r\n\r\nThe API is simple and clear and the implementation is straightforward.\r\n\r\nLocalization - that is handling holidays for different countries - is\r\nbuilt-in and easy to extend.\r\n\r\nCons\r\n----\r\n\r\nThe implementation is not very optimized and it is expected to be used\r\nfor small date deltas.\r\n\r\nCurrently only italian holidays are implemented, but feel free to send\r\npull requests for your country of interest.\r\n\r\nExamples:\r\n---------\r\n\r\nCheck if a date is a working day\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n::\r\n\r\n    import date\r\n    import workingdays\r\n\r\n    is_today_working = workingdays.is_workingday(date.today())\r\n\r\nAdd a number of working days to a certain date\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n::\r\n\r\n    import date\r\n    import workingdays\r\n\r\n    two_workingdays_from_today = workingdays.add(date.today(), 2)\r\n\r\nCount the number of working days between two dates\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n::\r\n\r\n    import date\r\n    import workingdays\r\n\r\n    workingdays_between_dates = workingdays.diff(date(2015, 3, 27), date(2015, 3, 25))\r\n\r\nCompute the next working day starting from a certain date\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n::\r\n\r\n    import date\r\n    import workingdays\r\n\r\n    workingday_after_today = workingdays.next(date.today())\r\n\r\nUse a different localization, that is taking into account holidays for a particular country\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n::\r\n\r\n    import date\r\n    import workingdays\r\n    import workingdays.l10n.it\r\n\r\n    workingdays.is_workingday = workingdays.l10n.it.is_workingday\r\n\r\n    workingday_after_today_in_italy = workingdays.next(date.today())\r\n\r\n**See file test.py in the source directory to have a better idea of the\r\nAPI and the expected results.**",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "https://github.com/baxeico/pyworkingdays/archive/0.1.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/baxeico/pyworkingdays",
    "keywords": "date,business,working",
    "license": "UNKNOWN",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyworkingdays",
    "package_url": "https://pypi.org/project/pyworkingdays/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/pyworkingdays/",
    "project_urls": {
      "Download": "https://github.com/baxeico/pyworkingdays/archive/0.1.tar.gz",
      "Homepage": "https://github.com/baxeico/pyworkingdays"
    },
    "release_url": "https://pypi.org/project/pyworkingdays/0.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Utility functions to deal with working days in date operations. With builtin localization support.",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1480269,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "10b609e7bcd27690326cc0b7dc9bd081b7bd6f78b32797d6a81e57bcd7f8b0bb",
          "md5": "e51942499692e61578e56deaa29dab55",
          "sha256": "20c53d9519d477e816c617317a673ae79cf7c6367732bb82ce300801f3bc55af"
        },
        "downloads": -1,
        "filename": "pyworkingdays-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e51942499692e61578e56deaa29dab55",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1845,
        "upload_time": "2015-03-26T11:01:10",
        "upload_time_iso_8601": "2015-03-26T11:01:10.140582Z",
        "url": "https://files.pythonhosted.org/packages/10/b6/09e7bcd27690326cc0b7dc9bd081b7bd6f78b32797d6a81e57bcd7f8b0bb/pyworkingdays-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "10b609e7bcd27690326cc0b7dc9bd081b7bd6f78b32797d6a81e57bcd7f8b0bb",
        "md5": "e51942499692e61578e56deaa29dab55",
        "sha256": "20c53d9519d477e816c617317a673ae79cf7c6367732bb82ce300801f3bc55af"
      },
      "downloads": -1,
      "filename": "pyworkingdays-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "e51942499692e61578e56deaa29dab55",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 1845,
      "upload_time": "2015-03-26T11:01:10",
      "upload_time_iso_8601": "2015-03-26T11:01:10.140582Z",
      "url": "https://files.pythonhosted.org/packages/10/b6/09e7bcd27690326cc0b7dc9bd081b7bd6f78b32797d6a81e57bcd7f8b0bb/pyworkingdays-0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}