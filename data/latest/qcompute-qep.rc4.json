{
  "info": {
    "author": "Baidu Quantum",
    "author_email": "quantum@baidu.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "*Copyright (c) 2022 Institute for Quantum Computing, Baidu Inc. All Rights Reserved.*\n\n![](https://img.shields.io/badge/release-v1.1.0-blue)\n[![](https://img.shields.io/badge/docs-API-blue)](https://quantum-hub.baidu.com/docs/qep/)\n[![](https://img.shields.io/badge/Python-3.8+-green)](https://www.python.org/)\n![](https://img.shields.io/badge/OS-MacOS%20|%20Windows%20|%20Linux-green)\n[![](https://img.shields.io/badge/license-Apache%202.0-orange)](https://github.com/baidu/QCompute/blob/master/LICENSE)\n\n## About QEP\n\n**QEP** is a **Q**uantum **E**rror **P**rocessing toolkit developed by the [Institute for \nQuantum Computing](https://quantum.baidu.com) at [Baidu Research](http://research.baidu.com). It \naims to deal with quantum errors inherent in quantum devices using software solutions. Currently,\nit offers four powerful quantum error processing functions: performance evaluation, \nquantum error characterization, quantum error mitigation, and quantum error correction:\n\n+ **Performance Evaluation** is used for assessing the capabilities and extendibilities of \n  quantum computing hardware platforms, through estimating the error rates of quantum states, \n  quantum gates, and quantum measurement apparatus. It provides \n  standard randomized benchmarking, interleaved randomized benchmarking, cross-entropy \n  benchmarking, unitarity randomized benchmarking, direct fidelity estimation, and \n  cross-platform fidelity estimation methods.\n\n+ **Quantum Error Characterization** is used for reconstructing the comprehensive information in \n  quantum computing hardware platforms, through many partial and limited experimental results. \n  It provides quantum state tomography, quantum process tomography, quantum detector tomography, \n  quantum gateset tomography, and spectral quantum tomography.\n\n+ **Quantum Error Mitigation** is used for improving the accuracy of quantum computational \n  results, through post-processing the experiment data obtained by varying noisy experiments,  \n  extending the computational reach of a noisy superconducting quantum processor. It provides \n  zero-noise extrapolation technique to mitigate quantum gate noise, and a collection of methods \n  such as inverse, least-square, iterative Bayesian unfolding, Neumann series to mitigate quantum measurement noise.\n\n+ **Quantum Error Correction (QEC)** is used to protect quantum information from errors due to \n  environmental noise and imperfections in hardware. Quantum computers rely on the delicate \n  properties of quantum systems, which are susceptible to errors, and thus, QEC has become an \n  essential tool for realizing fault-tolerant quantum computing. It provides a simulator that \n  can simulate error correction codes based on the stabilizer formalism, allowing users to study \n  the effects of various types of noise, assess the performance of different error correction \n  codes, and evaluate the robustness of quantum algorithms to errors.\n\nQEP is based on [QCompute](https://quantum-hub.baidu.com/opensource), \nwhich a Python-based open-source quantum computing platform SDK also developed \nby [Institute for Quantum Computing](https://quantum.baidu.com). \nIt provides a full-stack programming experience for senior users via hybrid quantum programming language \nfeatures and high-performance simulators. \nYou can install QCompute via [pypi](https://pypi.org/project/qcompute/). \nWhen you install QEP, QCompute will be automatically installed. \nPlease refer to QCompute's official [Open Source](https://quantum-hub.baidu.com/opensource) page for more details.\n\n## Installation\n\n### Install QEP\n\nThe package QEP is compatible with 64-bit Python 3.8 and 3.9, on Linux, MacOS (10.14 or later) and Windows. We highly recommend the users to install QEP via `pip`. Open the Terminal and run\n\n```bash\npip install qcompute-qep\n```\n\nThis will install the QEP binaries as well as the QEP package. For those using an older version of QEP, keep up to date by installing with the `--upgrade` flag for additional features and bug fixes.\n\n### Run Examples\n\nAfter installation, you can try the following simple program to check whether QEP has been successfully installed.\n\n```python\nfrom QCompute import *\nimport qcompute_qep.tomography as tomography\n\n\n# Step 1. Initialize a quantum program for preparing the Bell state\nqp = QEnv()  # qp is short for \"quantum program\", instance of QProgram\nqp.Q.createList(2)\nH(qp.Q[0])\nCX(qp.Q[0], qp.Q[1])\n\n# Step 2. Set the quantum computer (instance of QComputer).\n# For debugging on ideal simulator, change qc to BackendName.LocalBaiduSim2\nqc = BackendName.LocalBaiduSim2\n\n# For test on real quantum hardware, change qc to BackendName.CloudBaiduQPUQian\n# You must set your VIP token in order to access the hardware\n# Define.hubToken = \"Token\"\n# qc = BackendName.CloudBaiduQPUQian\n\n# Step 3. Perform Quantum State Tomography, check how well the Bell state is prepared.\nst = tomography.StateTomography()\n\n# Alternatively, you may initialize the StateTomography instance as follows:\n# st = StateTomography(qp, qc, method='inverse', shots=4096)\n\n# Call the tomography procedure and obtain the noisy quantum state\nst.fit(qp, qc, method='inverse', shots=4096)\n\nprint(\"***********************************************************************\")\nprint(\"Testing whether 'qcompute-qep' is successfully installed or not now ...\\n\")\n\nprint('Fidelity of the Bell state is: F = {:.5f}'.format(st.fidelity))\nprint(\"Please change 'qc' to other quantum computers for more tests.\\n\")\n\nprint(\"Package 'qcompute-qep' is successfully installed! Please enjoy!\")\nprint(\"***********************************************************************\")\n```\n\nNote that more examples are provided in the [API documentation](https://quantum-hub.baidu.com/docs/qep/), \nthe [QEP Tutorials](https://quantum-hub.baidu.com/qep/), and the source \nfile of QEP hosted in [GitHub](https://github.com/baidu/QCompute/tree/master/Extensions/QuantumErrorProcessing/).\nYou can get started from there.\n\n## Tutorials\n\nQEP provides detailed and comprehensive tutorials for performance evaluation, quantum error \ncharacterization, quantum error mitigation, and quantum error correction, \nranging from theoretical analysis to practical application. \nWe recommend the interested researchers or developers to download the Jupyter Notebooks and try it. \nThe tutorials are listed as follows:\n\n+ **Performance Evaluation**\n\n  + [Standard Randomized Benchmarking](https://quantum-hub.baidu.com/qep/tutorial-standardrb)\n  + [Interleaved Randomized Benchmarking](https://quantum-hub.baidu.com/qep/tutorial-interleavedrb)\n  + [Cross-Entropy Benchmarking](https://quantum-hub.baidu.com/qep/tutorial-xeb)\n  + [Unitarity Randomized Benchmarking](https://quantum-hub.baidu.com/qep/tutorial-unitarityrb)\n  + [Direct Fidelity Estimation of Quantum States](https://quantum-hub.baidu.com/qep/tutorial-dfe-state)\n  + [Direct Fidelity Estimation of Quantum Processes](https://quantum-hub.baidu.com/qep/tutorial-dfe-process)\n  + [Cross-Platform Estimation of Quantum States](https://quantum-hub.baidu.com/qep/tutorial-cpe-state)\n\n+ **Quantum Error Characterization**\n\n  + [Quantum State Tomography](https://quantum-hub.baidu.com/qep/tutorial-qst)\n  + [Quantum Process Tomography](https://quantum-hub.baidu.com/qep/tutorial-qpt)\n  + [Quantum Detector Tomography](https://quantum-hub.baidu.com/qep/tutorial-qdt)\n  + [Quantum Gateset Tomography](https://quantum-hub.baidu.com/qep/tutorial-gst)\n  + [Spectral Quantum Tomography](https://quantum-hub.baidu.com/qep/tutorial-sqt)\n\n+ **Quantum Error Mitigation**\n\n  + [Zero-Noise Extrapolation](https://quantum-hub.baidu.com/qep/tutorial-zne)\n  + [Measurement Error Mitigation](https://quantum-hub.baidu.com/qep/tutorial-mem)\n  + [Applications of Measurement Error Mitigation](https://quantum-hub.baidu.com/qep/tutorial-mem-applications)\n\n+ **Quantum Error Correction**\n  \n  + [Stabilizer Code Simulator](https://quantum-hub.baidu.com/qep/tutorial-qec-simulator)\n\nMore tutorials and demonstrations will be included in the future release.\n\n## API Documentation\n\nFor those who are looking for explanation on the python classes and functions in QEP, \nplease refer to our [API documentation](https://quantum-hub.baidu.com/docs/qep/).\n\n## Feedbacks\n\nUsers are encouraged to contact us via email quantum@baidu.com with general questions, \nunfixed bugs, and potential improvements. We hope to make QEP better together with the community!\n\n## Research based on QEP\n\nWe encourage researchers and developers to use QEP to explore quantum error processing. \nIf your work uses QEP, please feel free to send us a notice via quantum@baidu.com and \ncite us with the following BibTeX:\n\n```BibTex\n@misc{QEP, \n    author={{Baidu Quantum}},\n    title={{Quantum Error Processing Toolkit (QEP)}}, \n    year={2022}, \n    url={https://quantum-hub.baidu.com/qep/}, \n    version={1.1.0}\n}\n```\n\n## Copyright and License\n\nQEP uses [Apache-2.0 license](https://github.com/baidu/QCompute/blob/master/LICENSE).\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://quantum-hub.baidu.com/qep/",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "qcompute-qep",
    "package_url": "https://pypi.org/project/qcompute-qep/",
    "platform": null,
    "project_url": "https://pypi.org/project/qcompute-qep/",
    "project_urls": {
      "Homepage": "https://quantum-hub.baidu.com/qep/"
    },
    "release_url": "https://pypi.org/project/qcompute-qep/1.1.0/",
    "requires_dist": [
      "matplotlib (>=3.5.2)",
      "networkx (>=2.8.3)",
      "numpy (>=1.21.3)",
      "pandas (>=1.4.2)",
      "qcompute (>=3.3.0)",
      "qiskit (>=0.37.0)",
      "qiskit-ibmq-provider (>=0.19.2)",
      "scipy (>=1.7.1)",
      "seaborn (>=0.11.2)",
      "tqdm (>=4.64.0)",
      "qutip (>=4.7.0)"
    ],
    "requires_python": ">=3.8",
    "summary": "A Quantum Error Processing toolkit developed by the Institute for Quantum Computing at Baidu Research.",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17427335,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d370e019b49731ca26fa2df6cfc7dbb14704acf99a5d45d3a3d9dcded7e207a4",
          "md5": "777f35c85024c74308cca3260b7cafc7",
          "sha256": "ecd8c2582bfcb9157e357c9806f7671a5db79e3e2e3ea796f39314dcae78f357"
        },
        "downloads": -1,
        "filename": "qcompute_qep-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "777f35c85024c74308cca3260b7cafc7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 121243,
        "upload_time": "2022-05-11T05:05:33",
        "upload_time_iso_8601": "2022-05-11T05:05:33.802356Z",
        "url": "https://files.pythonhosted.org/packages/d3/70/e019b49731ca26fa2df6cfc7dbb14704acf99a5d45d3a3d9dcded7e207a4/qcompute_qep-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "815aa062e94493f8f2dbfa78c76d412e5cb2dd3bdb018a5ad2cdfd40618531d2",
          "md5": "b4398b8ba7322a52cb3d61be687aae22",
          "sha256": "c667555f12a5d7fb0c2ab45709a3d77a5990d665fb2863019ed1f9df99f09f1c"
        },
        "downloads": -1,
        "filename": "qcompute-qep-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b4398b8ba7322a52cb3d61be687aae22",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 83860,
        "upload_time": "2022-05-11T05:05:37",
        "upload_time_iso_8601": "2022-05-11T05:05:37.343494Z",
        "url": "https://files.pythonhosted.org/packages/81/5a/a062e94493f8f2dbfa78c76d412e5cb2dd3bdb018a5ad2cdfd40618531d2/qcompute-qep-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9d6a0f3237e4cda78c60d3eae266f8558fb4c8494a9e5e7bc5dcfb4b5984a2a6",
          "md5": "dcd0a8cc081b9f8c050e61551d102fbb",
          "sha256": "65a00925972009a2c94b326122916f91d5311a724202bc74fd6fa7d0259b4a4d"
        },
        "downloads": -1,
        "filename": "qcompute_qep-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dcd0a8cc081b9f8c050e61551d102fbb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 146366,
        "upload_time": "2022-08-22T07:00:21",
        "upload_time_iso_8601": "2022-08-22T07:00:21.932885Z",
        "url": "https://files.pythonhosted.org/packages/9d/6a/0f3237e4cda78c60d3eae266f8558fb4c8494a9e5e7bc5dcfb4b5984a2a6/qcompute_qep-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d9e749f5be266f7e4c9ffacecfc24a196411f936f632889d4512bf0fab982f2b",
          "md5": "55b7360ff9ef556ba7dd73cbda162ae8",
          "sha256": "ec055421770536c97239689b5f43bdf2aead67e4edc5f9b3c8f774e7834b63e7"
        },
        "downloads": -1,
        "filename": "qcompute-qep-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "55b7360ff9ef556ba7dd73cbda162ae8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 101865,
        "upload_time": "2022-08-22T07:00:24",
        "upload_time_iso_8601": "2022-08-22T07:00:24.305325Z",
        "url": "https://files.pythonhosted.org/packages/d9/e7/49f5be266f7e4c9ffacecfc24a196411f936f632889d4512bf0fab982f2b/qcompute-qep-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d5fe432dbe173934f8c5f0245a0cf327cbeeb1acc43ed6d214cf1195b78f249",
          "md5": "227f2e2490dbb95f9babb67cc4c65147",
          "sha256": "49ca426e9dbf6992f06eb8808ba712e3f3b42fa28d5c879506b69e1af0e8eebf"
        },
        "downloads": -1,
        "filename": "qcompute_qep-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "227f2e2490dbb95f9babb67cc4c65147",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 144376,
        "upload_time": "2022-09-02T06:39:34",
        "upload_time_iso_8601": "2022-09-02T06:39:34.002572Z",
        "url": "https://files.pythonhosted.org/packages/1d/5f/e432dbe173934f8c5f0245a0cf327cbeeb1acc43ed6d214cf1195b78f249/qcompute_qep-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c8f8a1d26fbd686d09d485a8690a54cdab403c29cf340678a3e9e7506301a39e",
          "md5": "2ed6114b00bb2414cd63d7b6318c2ee8",
          "sha256": "bed77c457a49214d3c8c8ee26455c326004e037a155af15f8c6cea8814fb88fa"
        },
        "downloads": -1,
        "filename": "qcompute-qep-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2ed6114b00bb2414cd63d7b6318c2ee8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 100789,
        "upload_time": "2022-09-02T06:39:36",
        "upload_time_iso_8601": "2022-09-02T06:39:36.594960Z",
        "url": "https://files.pythonhosted.org/packages/c8/f8/a1d26fbd686d09d485a8690a54cdab403c29cf340678a3e9e7506301a39e/qcompute-qep-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "829554331dd2867edc3cb4ae135cc60fb2eaba34ce4c14af469dd02ad6d06083",
          "md5": "7e6ef85bc2eb05ae5286750990908491",
          "sha256": "8e634d086d384bdfd4cbf31fcf7da885c8e76ee7474d6dfcbbf5913b330da854"
        },
        "downloads": -1,
        "filename": "qcompute_qep-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7e6ef85bc2eb05ae5286750990908491",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 208823,
        "upload_time": "2023-03-24T06:31:06",
        "upload_time_iso_8601": "2023-03-24T06:31:06.651349Z",
        "url": "https://files.pythonhosted.org/packages/82/95/54331dd2867edc3cb4ae135cc60fb2eaba34ce4c14af469dd02ad6d06083/qcompute_qep-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "347155335a597777082e1c319b32751e37de596a022d7c5ba6e40aa3a7c743af",
          "md5": "18f98d536c72a3cc02b54cd250280b13",
          "sha256": "753aebd501b540f7ba1ec3b907efc882e33cfc2b5154ec2b86229d539348047c"
        },
        "downloads": -1,
        "filename": "qcompute-qep-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "18f98d536c72a3cc02b54cd250280b13",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 155600,
        "upload_time": "2023-03-24T06:31:10",
        "upload_time_iso_8601": "2023-03-24T06:31:10.122462Z",
        "url": "https://files.pythonhosted.org/packages/34/71/55335a597777082e1c319b32751e37de596a022d7c5ba6e40aa3a7c743af/qcompute-qep-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "829554331dd2867edc3cb4ae135cc60fb2eaba34ce4c14af469dd02ad6d06083",
        "md5": "7e6ef85bc2eb05ae5286750990908491",
        "sha256": "8e634d086d384bdfd4cbf31fcf7da885c8e76ee7474d6dfcbbf5913b330da854"
      },
      "downloads": -1,
      "filename": "qcompute_qep-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7e6ef85bc2eb05ae5286750990908491",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 208823,
      "upload_time": "2023-03-24T06:31:06",
      "upload_time_iso_8601": "2023-03-24T06:31:06.651349Z",
      "url": "https://files.pythonhosted.org/packages/82/95/54331dd2867edc3cb4ae135cc60fb2eaba34ce4c14af469dd02ad6d06083/qcompute_qep-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "347155335a597777082e1c319b32751e37de596a022d7c5ba6e40aa3a7c743af",
        "md5": "18f98d536c72a3cc02b54cd250280b13",
        "sha256": "753aebd501b540f7ba1ec3b907efc882e33cfc2b5154ec2b86229d539348047c"
      },
      "downloads": -1,
      "filename": "qcompute-qep-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "18f98d536c72a3cc02b54cd250280b13",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 155600,
      "upload_time": "2023-03-24T06:31:10",
      "upload_time_iso_8601": "2023-03-24T06:31:10.122462Z",
      "url": "https://files.pythonhosted.org/packages/34/71/55335a597777082e1c319b32751e37de596a022d7c5ba6e40aa3a7c743af/qcompute-qep-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}