{
  "info": {
    "author": "",
    "author_email": "Konrad Ja≈Çowiecki <dexter2206@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Physics"
    ],
    "description": "# d-wave tikz: tools for generating TikZ pictures of various D-Wave topologies\n\n## What is this??\n\nA collection of Python-based command line utilities that can generate \nstandalone LateX documents with TikZ pictures of all currently available\nD-Wave annealers' topologies. The pictures contain minimum styling and \nshould serve only for defining the \"skeleton\" of the graph.\n\nThe generated pictures heavily utilize TikZ styles, so you can adjust the looks\nof the pictures by tweaking style definitions at the very beginning of your \nTikZ picture.\n\n## What is this not?\n\nThe `dwave-tikz` is not designed for producing pretty pictures. Yes, it \ncontains basic styling, but the assumption is that you tweak the style \ndefinition in the produced .tex file. Writing a comprehensive CLI allowing \none to control every single aspect of TikZ picture would be time consuming \nbeyond the point of being useful.\n\n## Installation\n\nPython >= 3.8 is required. Other Python dependencies will be downloaded \nduring installation. The `--compile` flag assumes that `latexmk` is \navailable in your `PATH` variable.\n\nTo install the latest version just run:\n\n```shell\npip install dwave-tikz\n```\n\nThis should install the `dwavetikz` script in your path. To verify, run\n\n```shell\ndwavetikz -h\n```\n\n## Usage\n\nThe CLI invocation looks as follows:\n\n```text\ndwavetikz <topology> <size> [options] \n```\nSome options are common to all topologies, others are specific to only given \ntopology. Anyway, you can always run\n\n```text\ndwavetikz <topology> -h\n```\n\nto learn about all arguments available for given topology (both common and \nspecific). For instance, `dwavetikz pegasus -h` will give you all available \noptions for pegasus topoloy.\n\nBy default, the output is printed to stdout. You can either redirect it as \nusually, or use `--output` parameter to provide a file name.\n\nAdditionally, if `--compile` flag is provided, an attempt will be made to \ncompile the output .tex file. Obviously, this only works in conjunction with \n`--output` flag.\n\n\n### Examples\n\n> **Warning**\n> If you are using dark Github theme, the SVG pictures presented in this section may look \n> slightly unreadable, because they have transparent backgrounds.\n\n**Example 1**: simple C2 Chimera, output to chimera.tex\n\n```shell\ndwavetikz chimera 2 --output chimera.tex\n```\n\n![chimera](https://github.com/dexter2206/dwave-tikz/raw/master/pictures/chimera.svg)\n\n**Example 2**: the same Chimera, but with labels.\n\n```shell\ndwavetikz chimera 2 --output chimera2.tex --with-labels\n```\n\n![chimera](https://github.com/dexter2206/dwave-tikz/raw/master/pictures/chimera2.svg)\n\n\n**Example 3**: the same Chimera, with labels, and after changing styles.\n\n```shell\ndwavetikz chimera 2 --output chimera3.tex --with-labels\n```\n\nThe styles were modified as follows (relevant part of `chimera3.tex`):\n\n```latex\n\\begin{tikzpicture}[\n        scale=1,\n        coupler/.style={draw},\n        qubit/.style={\n            circle, line width=2pt, font={\\large \\bfseries}, fill=White,draw=darkgray,minimum size=7mm, inner sep=0.5mm\n        },\n        hidden/.style={opacity=0.0},\n        internal/.style={color=RoyalBlue, ultra thick, dashed},\n        external/.style={color=Tan, ultra thick},\n    ]\n```\n\n![chimera](https://github.com/dexter2206/dwave-tikz/raw/master/pictures/chimera3.svg)\n\n**Example 4**: Chimera with 2 rows, 3 columns and nonstandard shore size of 8 (unit cells of \nsuch Chimera are ports of the Zephyr topology). It also uses larger scaling of coordinates to \nspread out nodes further away from each other (otherwise the nodes would overlap).\n\n```shell\ndwavetikz chimera 2 -n 3 -t 8 --output chimera4.tex --scale 40 --compile\n```\n\n![chimera](https://github.com/dexter2206/dwave-tikz/raw/master/pictures/chimera4.svg)\n\n**Example 5**: The P3 Pegasus using the default L-layout for Chimera unit cells.\n\n```shell\ndwavetikz pegasus 3 --output pegasus.tex\n```\n\n![pegasus](https://github.com/dexter2206/dwave-tikz/raw/master/pictures/pegasus.svg)\n\n**Example 6**: The P3 Pegasus using the cross layout for Chimera unit cells.\n\n```shell\ndwavetikz pegasus 3 --cross --output pegasus2.tex\n```\n\n![pegasus](https://github.com/dexter2206/dwave-tikz/raw/master/pictures/pegasus2.svg)\n\n**Example 7**: The Z3 Zephyr graph.\n\n```shell\ndwavetikz zephyr 3 --cross --output zephyr.tex\n```\n\n![zephyr](https://github.com/dexter2206/dwave-tikz/raw/master/pictures/zephyr.svg)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dwave-tikz",
    "package_url": "https://pypi.org/project/dwave-tikz/",
    "platform": null,
    "project_url": "https://pypi.org/project/dwave-tikz/",
    "project_urls": {
      "Source Code": "https://github.com/dexter2206/dwave-tikz"
    },
    "release_url": "https://pypi.org/project/dwave-tikz/0.0.2/",
    "requires_dist": [
      "dwave-networkx (~=0.8.13)",
      "jinja2 (~=3.1.2)",
      "flake8 (>=4.0.1) ; extra == 'dev'",
      "black (>=21.12b0) ; extra == 'dev'",
      "isort (>=5.10.1) ; extra == 'dev'",
      "mypy (>=0.961) ; extra == 'dev'",
      "pytest (>=6.1.2) ; extra == 'test'",
      "pytest-mock (>=3.3.1) ; extra == 'test'",
      "pytest-cov (>=2.12.1) ; extra == 'test'"
    ],
    "requires_python": ">=3.8",
    "summary": "Tools for generating pictures for various D-Wave topologies",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16706198,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "178ec31e807fcd60f44c15e6d276f99eaf528d628d7c38462bd32e95f79541a3",
          "md5": "6ccaa22c45f7bdd4812feffbf2488733",
          "sha256": "b208848125e6c07afe56a2af370db563299b5edab9f6aa7894c162ede7a9565a"
        },
        "downloads": -1,
        "filename": "dwave_tikz-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6ccaa22c45f7bdd4812feffbf2488733",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 152242,
        "upload_time": "2023-02-06T01:06:54",
        "upload_time_iso_8601": "2023-02-06T01:06:54.606105Z",
        "url": "https://files.pythonhosted.org/packages/17/8e/c31e807fcd60f44c15e6d276f99eaf528d628d7c38462bd32e95f79541a3/dwave_tikz-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f15d3f71f96c79c2c871d52905d26da503cc0a025729f0965def5b02b02b2986",
          "md5": "2b8ae642a5d5528edc1b55325da12d90",
          "sha256": "38bc6b7976ed0e820e607ad8947b543bc4d75fa0aa02ba3bfba9ba0ecc9c1e85"
        },
        "downloads": -1,
        "filename": "dwave-tikz-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2b8ae642a5d5528edc1b55325da12d90",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 147145,
        "upload_time": "2023-02-06T01:06:57",
        "upload_time_iso_8601": "2023-02-06T01:06:57.739744Z",
        "url": "https://files.pythonhosted.org/packages/f1/5d/3f71f96c79c2c871d52905d26da503cc0a025729f0965def5b02b02b2986/dwave-tikz-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "178ec31e807fcd60f44c15e6d276f99eaf528d628d7c38462bd32e95f79541a3",
        "md5": "6ccaa22c45f7bdd4812feffbf2488733",
        "sha256": "b208848125e6c07afe56a2af370db563299b5edab9f6aa7894c162ede7a9565a"
      },
      "downloads": -1,
      "filename": "dwave_tikz-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6ccaa22c45f7bdd4812feffbf2488733",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 152242,
      "upload_time": "2023-02-06T01:06:54",
      "upload_time_iso_8601": "2023-02-06T01:06:54.606105Z",
      "url": "https://files.pythonhosted.org/packages/17/8e/c31e807fcd60f44c15e6d276f99eaf528d628d7c38462bd32e95f79541a3/dwave_tikz-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f15d3f71f96c79c2c871d52905d26da503cc0a025729f0965def5b02b02b2986",
        "md5": "2b8ae642a5d5528edc1b55325da12d90",
        "sha256": "38bc6b7976ed0e820e607ad8947b543bc4d75fa0aa02ba3bfba9ba0ecc9c1e85"
      },
      "downloads": -1,
      "filename": "dwave-tikz-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "2b8ae642a5d5528edc1b55325da12d90",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 147145,
      "upload_time": "2023-02-06T01:06:57",
      "upload_time_iso_8601": "2023-02-06T01:06:57.739744Z",
      "url": "https://files.pythonhosted.org/packages/f1/5d/3f71f96c79c2c871d52905d26da503cc0a025729f0965def5b02b02b2986/dwave-tikz-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}