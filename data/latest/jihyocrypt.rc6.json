{
  "info": {
    "author": "Anna Aniruddh Radhakrishnan",
    "author_email": "dev@aniruddh.ml",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Security :: Cryptography"
    ],
    "description": "1. [Introduction](#intro)\n1. [Installation](#install) \n2. [Options](#options) \n3. [All functions](#funcs) \n4. [Optional Arguments](#optargs)\n5. [Passphrase](#passphrase) \n6. [Injecting Key Generation Parameters](#keyparams) \n7. [Structure of the Output](#output) \n8. [Speed Tests](#stests)\n9. [Credits](#credits) \n10. [License](#license)\n11. [Bugs](#bugs) \n\n## <a name='intro'>Jihyocrypt</a> \n\nA simple, standalone library-based implementation of [Salsa20 stream cipher](https://en.wikipedia.org/wiki/Salsa20) developed by [Daniel J Bernstein](https://en.wikipedia.org/wiki/Daniel_J._Bernstein)  to encrypt and decrypt data along with a password determined key function. \n\nIncludes a multi-round nonce+password based key and hash function. The program is determined to be fairly cryptographically secure and is sufficiently fast for its implementation needs. \n\nIt implements a memory buffer for file encryptions and decryptions to make sure the memory usage does not blow up. \n\nFrom the speed tests it can be asserted that it requires ~6s to encrypt 1GB of data. Which is fairly fast for most encryption/decryption operations required in Microservices and standalone applications(the main target for this). \n\n**A rust based library with equivalent API is soon underway.**\n\n\n## <a name=\"install\"> Installation</a> \n\nInstalling from [PyPI](https://pypi.org) \n\n```python3 -m pip install jihyocrypt``` \n\nOr install from source \n```\ngit clone https://gitlab.com/loggerheads-with-binary/jihyocrypt\ncd jihyocrypt \npython3 -m pip install -r requirements.txt \npython3 -m setup.py install \n```\n\n## <a name=\"options\"> Options</a> \n\n\nThe following functions exposed for different purposes. The following mnemonic has been used for the encryption and decryption. \n\nSyntax for functions:: \n- syntax: enc/dec_x2x         \n- where x: s -> Pickleable object; f-> File ; b -> bytestring\n- enc/dec : _enc_ -> Encryption , dec -> Decryption\n- example: enc_s2f means encrypt from a standard object to a file\n\nEx: \n\n```python \nimport jihyocrypt as jihyo \njihyo.enc_f2f( 'plaintext.txt' , output_file = 'ciphertext.bin' , password = passphrase)  \n#Returns None, ciphertext.bin consists of encrypted data  \n```\n\n\n### <a name='optargs'>Optional Arguments</a> \n\nThe exposed encryption and decryption functions consist of two flags:\n\n| **Flag**       | **Default** | **If True**                                                                                                                                                | **If False**                                                                                                                                          |\n|----------------|-------------|------------------------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------|\n| `progress_bar` | False       | Prints a progress bar to stderr which can be used to monitor the  progress of encryption/decryption                                                        | No such bar  is produced                                                                                                                              |\n| `redundant`    | True        | Encodes the hash of the nonce and  passphrase inside the output <br><br>  **Advisable to use since incorrect  decryption will be flagged by  the program** | The hash is not outputted. <br><br>  During decryption with incorrect passphrase, **the program will  generate incorrect output flagging  no error.** |\n\nIt also consists of an optional `buffer_size` argument in functions involving a file intermediary. The buffer size can be changed and is by default 3MB. A sweet spot for larger files with [respect to time](#b2bbufferstest) is ~100MB. The choice of time vs memory footprint is left to the developer\n\n\n### <a name=\"passphrase\">Passphrase</a> \n\nPassphrase can be a string/bytestring of any length. The phrase is put through a key generation function along with a nonce which generates a 256 bit key for the Salsa20 cipher and a 512 bit hash for the password verification. \n\nIf the redundant flag is set to False, the hash is not generated at all while if it is True, the hash is encoded in the output. \n\n**Note: The `redundant` flag should be the same in both encryption and decryption. Otherwise it can lead to erroneous output/DecryptionError** \n\n## <a name='keyparams'>Injecting Key Generation Parameters </a>\n\nThe program uses two different integers, `DEFAULT_OBFUSCATION_ROUNDS` and `DEFAULT_JPIC_ROUNDS` (JPIC is the 512 bit hash and is short for Jihyocrypt Password Integrity Check)\n\n\n| Flag                         | Default | Recommended | Purpose                                                                                   |\n|------------------------------|---------|-------------|-------------------------------------------------------------------------------------------|\n| `DEFAULT_OBFUSCATION_ROUNDS` | 6       | >4          | To create a suitable 256 bit key for Salsa20 cipher from provided  password and nonce     |\n| `DEFAULT_JPIC_ROUNDS`        | 6       | >2          | To create a suitable 512 bit hash to verify validity of input password  during decryption |\n\nThe following parameters can be modified for modifying the key generation process. A higher value of the `DEFAULT_OBFUSCATION_ROUNDS` will increase security of the key generated from a simple passphrase, but [also increase the time needed](#roundsvstime). Similarly, a higher value of `DEFAULT_JPIC_ROUNDS` will reduce the chances of backtracking an encryption password but [require more time](#roundsvstimejpic). \n\nInjection can be done as follows:\n\n```python\nimport jihyocrypt as jihyo \njihyo.DEFAULT_OBFUSCATION_ROUNDS = N\t#N>0, N : int \njihyo.DEFAULT_JPIC_ROUNDS = M\t\t\t#M>0, M : int\n\n##Encryption/Decryption values must be same\n```\n\n\n**Note that if injection is used, injection values should be same for both encryption and decryption** \n \n\n\n\n## <a name='output'>Structure of The output</a> \n\nLet's assume the plaintext input is a bytestring of N bytes, the following is the output structure \n\n- If `redundant == True` <br><br>\n\nCiphertext Size = N + 72 <br><br>\n<pre>\n<span style=\"color:red\">-------------------</span>|<span style=\"color:blue\">---------------------------------</span>|<span style=\"color:green\">---------------------------------</span><br>   \n      <span style=\"color:red\">8 (nonce)</span>                <span style=\"color:blue\">64 (JPIC)</span>                 <span style=\"color:green\">N (encrypted ciphertext)</span>  \n</pre>\n    \n- If `redundant == False` <br><br>\n\nCiphertext Size = N + 8 <br><br>\n<pre>\n<span style=\"color:red\">-------------------</span>|<span style=\"color:green\">---------------------------------------------------</span><br>\n\n<span style=\"color:red\">8 (nonce)</span>                       <span style=\"color:green\">N (encrypted ciphertext)</span>  \n</pre>\n\n\n## <a name='stests'>Speed Tests</a>: \n\nThe following speed tests were performed using a [Google Colab Script](https://colab.research.google.com/drive/1VZvQOOouSZVCaLg3rpfb8zPeVb_BQm_d?usp=sharing) and Google Colab Resources. Your results may vary significantly. \n\n#### The following tests were performed \n- [Key Generation vs No of Rounds](#roundsvstime) \n- [JPIC Generation vs No of Rounds](#roundsvstimejpic) \n- [Plaintext Encryption and Decryption (b2b) vs size](#b2bstest) \n- [File to File Encryption and Decryption (f2f( vs size](#f2fstest) \n- [Plaintext Encryption (f2f) based on buffer size](#b2bbufferstest) \n\n\n\n#### <a name='roundsvstime'>Key Generation vs No of Rounds</a>:\n<p align=\"center\">\n  <img src=\"https://gitlab.com/loggerheads-with-binary/jihyocrypt/-/raw/main/speedtests/keygen.png\" alt=\"Keygen.png\"  />\n</p>\n\nAs expected, the behavior is fairly linear with O(N) complexity. \n\n\n\n\n#### <a name='roundsvstimejpic'>JPIC Generation vs No of Rounds</a>: \n\n<p align=\"center\">\n  <img src=\"https://gitlab.com/loggerheads-with-binary/jihyocrypt/-/raw/main/speedtests/jpic.png\" alt=\"BufferTest.png\"  />\n</p>\n\nThis behavior is fairly linear as well, and is ~(O(N)<sub>```redundant=True```</sub> - O(N)<sub>```redundant=False```</sub>)\n\n#### <a name='b2bstest'>Plaintext Encryption (b2b) vs size</a>\n\n<p align=\"center\">\n  <img src=\"https://gitlab.com/loggerheads-with-binary/jihyocrypt/-/raw/main/speedtests/b2b.png\" alt=\"BufferTest.png\"  />\n</p>\n\nStandard linear behavior as expected. \n\n#### <a name='f2fstest'>File to File Encryption vs size</a>\n\n<p align=\"center\">\n  <img src=\"https://gitlab.com/loggerheads-with-binary/jihyocrypt/-/raw/main/speedtests/f2f.png\" alt=\"BufferTest.png\"  />\n</p>\n\nSimilar behavior with added overhead of File I/O. Takes about 12.8 secs to encrypt a 1 GB, this can vary with disk I/O speeds. \n\n#### <a name='b2bbufferstest'>Plaintext Encryption (f2f) based on buffer size </a>\n\n<p align=\"center\">\n  <img src=\"https://gitlab.com/loggerheads-with-binary/jihyocrypt/-/raw/main/speedtests/buffers.png\" alt=\"BufferTest.png\"  />\n</p>\n\nA weird trend I noticed is the drop and then rise in time needed for encryption alongwith increase in buffer size. In my experience, a buffer of about 100MB can significantly reduce time. While above, it starts becoming slower. I don't have a possible explanation for this. \n\nThen why is the JihyoCrypt buffer defaulting to 3MB one could ask. It's because when I first developed it, memory was a larger concern than Speed. The program is regularly used to encrypt and decrypt large files(20 GB and above), and the time difference is not significant. However, having only ~6 MB of the memory being occupied vs ~100 MB of the memory being occupied for an hour or more is a choice left to the programmer. As mentioned before, one can easily change the buffer size since it is just a parameter of the encryption/decryption. \n\n\n## <a name='credits'> Credits: </a>\n\nCredits for the following libraries used: [pycryptodome](https://github.com/Legrandin/pycryptodome/) \n\nAnd credits to  [Daniel J Bernstein](https://en.wikipedia.org/wiki/Daniel_J._Bernstein) for the [Salsa20 stream cipher](https://en.wikipedia.org/wiki/Salsa20) \n## <a name='license'>License</a> \n\nThe library is provided with [MIT License](./LICENSE) \n\n## <a name='bugs'>Bugs</a> \n\nAny bugs or cryptographic improvements can be suggested to dev@aniruddh.ml \n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "http://pypi.python.org/pypi/jihyocrypt",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/loggerheads-with-binary/jihyocrypt/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "jihyocrypt",
    "package_url": "https://pypi.org/project/jihyocrypt/",
    "platform": null,
    "project_url": "https://pypi.org/project/jihyocrypt/",
    "project_urls": {
      "Documentation": "https://gitlab.com/loggerheads-with-binary/jihyocrypt/README.md",
      "Download": "http://pypi.python.org/pypi/jihyocrypt",
      "Homepage": "https://gitlab.com/loggerheads-with-binary/jihyocrypt/",
      "Source": "https://gitlab.com/loggerheads-with-binary/jihyocrypt/",
      "Tracker": "https://gitlab.com/loggerheads-with-binary/jihyocrypt/issues"
    },
    "release_url": "https://pypi.org/project/jihyocrypt/2.5.0.5/",
    "requires_dist": [
      "pycryptodome"
    ],
    "requires_python": "",
    "summary": "A simple implementation of Salsa20 along with a nonce+password based key and hash determination function.     Multiple exposed functions to ease encryption and decryption to a single key based program.",
    "version": "2.5.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14316677,
  "releases": {
    "2.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "42f73e19da72fd9b88da3c3d6c98e062d9aec0cc8088abfe936d59fcd07baf99",
          "md5": "938d19b8cab3aa1a7bf99ace8c3768ff",
          "sha256": "ef8aca788c527c8c36f48c93990270249d3b5e0b2314d2e34613eb34d2a567f5"
        },
        "downloads": -1,
        "filename": "jihyocrypt-2.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "938d19b8cab3aa1a7bf99ace8c3768ff",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 15862,
        "upload_time": "2022-07-02T13:20:48",
        "upload_time_iso_8601": "2022-07-02T13:20:48.234170Z",
        "url": "https://files.pythonhosted.org/packages/42/f7/3e19da72fd9b88da3c3d6c98e062d9aec0cc8088abfe936d59fcd07baf99/jihyocrypt-2.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "25e58d24b95fdd037ca1cfb05fb46dfda7cd37cab4bf46c55390d47ee1e5f969",
          "md5": "b04e293bdb15c953c8d8fbcf856a29fe",
          "sha256": "5da1be0d5647d50abf1d5d8a17a21ff8076660d5d8e8f3a7efd024cd8cdde81b"
        },
        "downloads": -1,
        "filename": "jihyocrypt-2.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b04e293bdb15c953c8d8fbcf856a29fe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14674,
        "upload_time": "2022-07-02T13:20:50",
        "upload_time_iso_8601": "2022-07-02T13:20:50.256703Z",
        "url": "https://files.pythonhosted.org/packages/25/e5/8d24b95fdd037ca1cfb05fb46dfda7cd37cab4bf46c55390d47ee1e5f969/jihyocrypt-2.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.5.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "94453a6e7546d21fff04f49feef1934dc28e48542b6462b5633ec1fbfa8c8521",
          "md5": "fb0d2fe1fde52b21e1f7adbeabf1d80e",
          "sha256": "5c09b1195bea7bc98a75f3f2e0f64856da1a00fe4e10c4cd633004fd6c385d7f"
        },
        "downloads": -1,
        "filename": "jihyocrypt-2.5.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fb0d2fe1fde52b21e1f7adbeabf1d80e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 15860,
        "upload_time": "2022-07-02T13:25:04",
        "upload_time_iso_8601": "2022-07-02T13:25:04.810751Z",
        "url": "https://files.pythonhosted.org/packages/94/45/3a6e7546d21fff04f49feef1934dc28e48542b6462b5633ec1fbfa8c8521/jihyocrypt-2.5.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f4a487ab2b5e7ef432ad3f1b64332ec7aee889a15191f7a8c6de44afda81122",
          "md5": "d0add3f697cc490dda06109ac9a16119",
          "sha256": "662c1efb9593f0649e1af314d5bea38c842d573a6af49ab80552741a67c3e320"
        },
        "downloads": -1,
        "filename": "jihyocrypt-2.5.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d0add3f697cc490dda06109ac9a16119",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14653,
        "upload_time": "2022-07-02T13:25:11",
        "upload_time_iso_8601": "2022-07-02T13:25:11.653245Z",
        "url": "https://files.pythonhosted.org/packages/0f/4a/487ab2b5e7ef432ad3f1b64332ec7aee889a15191f7a8c6de44afda81122/jihyocrypt-2.5.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.5.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "749010bb4e5212446aedbed3a7afebbf284812059109cf621f8b8e26effdd733",
          "md5": "a12b50f74046d1d1de9db1c1cb9de678",
          "sha256": "c0627df2e3e4f17709ec967d09e8bf310de6e273ed408d9bbe189ecc76a4ae62"
        },
        "downloads": -1,
        "filename": "jihyocrypt-2.5.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a12b50f74046d1d1de9db1c1cb9de678",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 15863,
        "upload_time": "2022-07-02T13:28:09",
        "upload_time_iso_8601": "2022-07-02T13:28:09.416791Z",
        "url": "https://files.pythonhosted.org/packages/74/90/10bb4e5212446aedbed3a7afebbf284812059109cf621f8b8e26effdd733/jihyocrypt-2.5.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "373ff1f6deefc252e79098531819ad34ef9cbcc8771e600772369770f49224ef",
          "md5": "84ba063847959e30bba8fc3fa2b416ba",
          "sha256": "47864947e841ed19cd11f7a4f9b06b996c3b6705f6207ce7f2f56ef7a1111af6"
        },
        "downloads": -1,
        "filename": "jihyocrypt-2.5.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "84ba063847959e30bba8fc3fa2b416ba",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14671,
        "upload_time": "2022-07-02T13:28:16",
        "upload_time_iso_8601": "2022-07-02T13:28:16.467265Z",
        "url": "https://files.pythonhosted.org/packages/37/3f/f1f6deefc252e79098531819ad34ef9cbcc8771e600772369770f49224ef/jihyocrypt-2.5.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.5.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4e63c31bb50c1641dd4db911dce26f9de35634c2b3c7b71a7bd007134279807c",
          "md5": "8fe8dcf7ffb9f132b72560b5e35a62c7",
          "sha256": "6cc774863517ebbdb64b77a03892157f75d40b30bb64e0b2930302b187c902a1"
        },
        "downloads": -1,
        "filename": "jihyocrypt-2.5.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8fe8dcf7ffb9f132b72560b5e35a62c7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16813,
        "upload_time": "2022-07-02T13:31:01",
        "upload_time_iso_8601": "2022-07-02T13:31:01.583446Z",
        "url": "https://files.pythonhosted.org/packages/4e/63/c31bb50c1641dd4db911dce26f9de35634c2b3c7b71a7bd007134279807c/jihyocrypt-2.5.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "01d083a983aa75b9c0ba05b674a21809474e2dc9581bf7424f3f9a8ec553b1d1",
          "md5": "82b28ee092ba655349f30dcc1c0a4f21",
          "sha256": "e264f555378101c118ebaa28950ef0871dea818a2a81c7f7e686d3e9f3b1967f"
        },
        "downloads": -1,
        "filename": "jihyocrypt-2.5.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "82b28ee092ba655349f30dcc1c0a4f21",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14858,
        "upload_time": "2022-07-02T13:31:07",
        "upload_time_iso_8601": "2022-07-02T13:31:07.096436Z",
        "url": "https://files.pythonhosted.org/packages/01/d0/83a983aa75b9c0ba05b674a21809474e2dc9581bf7424f3f9a8ec553b1d1/jihyocrypt-2.5.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.5.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6ac240a985e676a2914c16ecfa0b79096dae794c05c90fc8257d0987c235dddc",
          "md5": "a78ac96f17bcf3cf4b704eb1f18edbec",
          "sha256": "a971eb61a4a5db79f780da51c0fea1f89fc7631a3ae6bc025bb6077f3f266b27"
        },
        "downloads": -1,
        "filename": "jihyocrypt-2.5.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a78ac96f17bcf3cf4b704eb1f18edbec",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16856,
        "upload_time": "2022-07-02T13:53:20",
        "upload_time_iso_8601": "2022-07-02T13:53:20.146130Z",
        "url": "https://files.pythonhosted.org/packages/6a/c2/40a985e676a2914c16ecfa0b79096dae794c05c90fc8257d0987c235dddc/jihyocrypt-2.5.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "501ae504886a256f59ddceab36335a1f9e656d5a3546e5b7db97a4a7bd5129c2",
          "md5": "8f91d45d91788b2cec2117ad7738b7b7",
          "sha256": "8dfa953edd0d995facd2210f1e71dda33c9b46ae9802ae37ab9206f316db3b72"
        },
        "downloads": -1,
        "filename": "jihyocrypt-2.5.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "8f91d45d91788b2cec2117ad7738b7b7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14881,
        "upload_time": "2022-07-02T13:53:23",
        "upload_time_iso_8601": "2022-07-02T13:53:23.994875Z",
        "url": "https://files.pythonhosted.org/packages/50/1a/e504886a256f59ddceab36335a1f9e656d5a3546e5b7db97a4a7bd5129c2/jihyocrypt-2.5.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.5.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "878fb1bc5c88a643054a40c145bc22ee2b5d7bb87f2cf8e52b35d3a7d08ecfb2",
          "md5": "8d5634c6351c2aa5201ae9de811d5af2",
          "sha256": "3a89a52e40356da78e4e75eb21b4ff4e6e828ce5301154e52a9866a7326aa3a2"
        },
        "downloads": -1,
        "filename": "jihyocrypt-2.5.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8d5634c6351c2aa5201ae9de811d5af2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16815,
        "upload_time": "2022-07-02T13:54:29",
        "upload_time_iso_8601": "2022-07-02T13:54:29.406111Z",
        "url": "https://files.pythonhosted.org/packages/87/8f/b1bc5c88a643054a40c145bc22ee2b5d7bb87f2cf8e52b35d3a7d08ecfb2/jihyocrypt-2.5.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c3be7807cff10955e4a80e92079747c44de5ace593fc5765b2ce85beea51b721",
          "md5": "7240d511ba9ce985952ef4a0603a3307",
          "sha256": "2d96841509082341d0f407e09da6010e82b34dee04d334667501af4e07aeb87f"
        },
        "downloads": -1,
        "filename": "jihyocrypt-2.5.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "7240d511ba9ce985952ef4a0603a3307",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14866,
        "upload_time": "2022-07-02T13:54:31",
        "upload_time_iso_8601": "2022-07-02T13:54:31.861898Z",
        "url": "https://files.pythonhosted.org/packages/c3/be/7807cff10955e4a80e92079747c44de5ace593fc5765b2ce85beea51b721/jihyocrypt-2.5.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "878fb1bc5c88a643054a40c145bc22ee2b5d7bb87f2cf8e52b35d3a7d08ecfb2",
        "md5": "8d5634c6351c2aa5201ae9de811d5af2",
        "sha256": "3a89a52e40356da78e4e75eb21b4ff4e6e828ce5301154e52a9866a7326aa3a2"
      },
      "downloads": -1,
      "filename": "jihyocrypt-2.5.0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8d5634c6351c2aa5201ae9de811d5af2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 16815,
      "upload_time": "2022-07-02T13:54:29",
      "upload_time_iso_8601": "2022-07-02T13:54:29.406111Z",
      "url": "https://files.pythonhosted.org/packages/87/8f/b1bc5c88a643054a40c145bc22ee2b5d7bb87f2cf8e52b35d3a7d08ecfb2/jihyocrypt-2.5.0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c3be7807cff10955e4a80e92079747c44de5ace593fc5765b2ce85beea51b721",
        "md5": "7240d511ba9ce985952ef4a0603a3307",
        "sha256": "2d96841509082341d0f407e09da6010e82b34dee04d334667501af4e07aeb87f"
      },
      "downloads": -1,
      "filename": "jihyocrypt-2.5.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "7240d511ba9ce985952ef4a0603a3307",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 14866,
      "upload_time": "2022-07-02T13:54:31",
      "upload_time_iso_8601": "2022-07-02T13:54:31.861898Z",
      "url": "https://files.pythonhosted.org/packages/c3/be/7807cff10955e4a80e92079747c44de5ace593fc5765b2ce85beea51b721/jihyocrypt-2.5.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}