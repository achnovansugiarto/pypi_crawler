{
  "info": {
    "author": "Lucas Bonvin",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "![licence](https://img.shields.io/pypi/l/flipdigitclock?color=brightgreen)![latest version](https://img.shields.io/pypi/v/flipdigitclock?color=brightgreen)\n# FlipDigitClockPython\n![wiring](https://raw.githubusercontent.com/lucblender/FlipDigitClockPython/main/ressources/clock.png)\n## Description\n\nThis library has for goal to control the FlipDigit clock composed of 6 [Small 7-segment displays](https://flipdots.com/en/products-services/small-7-segment-displays/) by alfazeta with a Raspberry Pi.\n\nThe clock was designed to be used with Particle Electron. This library although is designed to control the clock with a Raspberry Pi which is more common and more accessible than the Particle.\n\n## Install\n\nThe module is available on pip:\n```\npip install flipdigitclock\n```\n\n## Requirement\n\nIf you install the library with pip, the required package are installed automatically. If you use the library from sources, the only library needed for this to work is RPi.GPIO. Basic installation can be made like so:\n\n```pip3 install RPi.GPIO```\n\nor by using the provided requirments.txt file:\n\n```pip3 install -r requirments.txt```\n\n\n## Wiring\n\nYou will need to connect GPIOs of the Raspberry Pi to the Particle Electron Slot. The default wiring is the following:\n\n![wiring](https://raw.githubusercontent.com/lucblender/FlipDigitClockPython/main/ressources/wiring.png)\n\nThis wiring can be change in the constructor of the FlipDigitClock object which is the following:\n\n``` clock =  FlipDigitClock(A_DIG = 25, B_DIG = 5, C_DIG = 6, SET_DIG_EN = 12, RES_DIG_EN = 13, A_SEG = 19, B_SEG = 16, C_SEG = 26, SET_SEG_EN = 20, RES_SEG_EN = 21)```\n\n## How to use\n\nAt first you need to create a clock object like so:\n\n```python\nfrom flipdigitclock import *\n\nclock =  FlipDigitClock()\n``` \n\nIf you want to change the wiring, check the upper part about it.\n\n### Warning notice\n\n__The sequence and timing of GPIO toggling is really specific! If the code is stopped, it might stop the sequence in unwanted state that may destroy your clock!__\n\nThere is a function that reset all the GPIOs of your clock in a safe state: \n```\nclock.reset_all()\n```\n\nThis function is called every time needed in the code but also if it receive a SIGINT (ctrl+c) or SIGTSTP (ctrl+z). Be really carefull to not stop the code during digit manipulation and how the code is excited! \n\n### Drive segments\n\nTo drive digits and segment, there is two enum and two arrays already in the lib to help you: \n```python\nclass DigitNumber(Enum):\n    SEMI_COLLON_2 = 7\n    SEMI_COLLON_1 = 3\n    DIGIT_1 = 5\n    DIGIT_2 = 1\n    DIGIT_3 = 6\n    DIGIT_4 = 2\n    DIGIT_5 = 4\n    DIGIT_6 = 0\n\nDIGITS = [DigitNumber.DIGIT_1.value, DigitNumber.DIGIT_2.value, DigitNumber.DIGIT_3.value, DigitNumber.DIGIT_4.value, DigitNumber.DIGIT_5.value, DigitNumber.DIGIT_6.value, DigitNumber.SEMI_COLLON_2.value, DigitNumber.SEMI_COLLON_4.value]\n\nclass SegmentName(Enum):\n    A = 3\n    B = 5\n    C = 1\n    D = 6\n    E = 2\n    F = 4\n    G = 0\n    COLLON = 7\n\nSEGMENTS = [SegmentName.A.value, SegmentName.B.value, SegmentName.C.value, SegmentName.D.value, SegmentName.E.value, SegmentName.F.value, SegmentName.G.value, SegmentName.COLLON.value]\n```\nThe naming of the segment follow this pattern:\n\n<img src=\"https://raw.githubusercontent.com/lucblender/FlipDigitClockPython/main/ressources/7-segments.png\" height=\"100\">\n\nAnd the numbering of the digit start with DIGIT_1 on the left to DIGIT_6 on the right with SEMI_COLLON_1 for the left dots and SEMI_COLLON_2 for the right ones.\n\n#### Drive single segment\n\nYou can now drive single segment on specific digit like so:\n\n```\nclock =  FlipDigitClock()\n\nclock.set_segment(DigitNumber.DIGIT_3.value, SegmentName.G.value)\t\t\t\t# set G segment of digit 3\nclock.reset_segment(DigitNumber.DIGIT_2.value, SegmentName.A.value)\t\t\t\t# reset A segment of digit 2\n\nclock.reset_segment(DigitNumber.SEMI_COLLON_2.value, SegmentName.COLLON.value) # same function for semi-collon\n```\n\n### Drive digit\n\n#### Drive all segment of digit\n\nYou can directly drive all the segment of a digit with an hex code.\nThe code is going from _a_ for the lsb to _g_ for the msb\n\nAs example, a 0 is 0b111111 or 0x3F:\n\n```\nclock =  FlipDigitClock()\n\nclock.set_segments(DigitNumber.DIGIT_3.value, 0x3F)\t\t\t\t# set the digit 3 to 0x3f (0)\n```\n\nYou can also use function do directly set a number to a digit, clear a digit, set numbers to all digit, and set the semi-collon dots:\n\n```\nclock =  FlipDigitClock()\n\nclock.clear_digit(DigitNumber.DIGIT_1.value)\t# clear digit 1\t\t\nclock.clear_digits(DigitNumber.DIGIT_1.value)\t# clear all digit\t\t\t\n\nclock.set_number(DigitNumber.DIGIT_1.value, 7)\t# set the digit 1 to 7\n\nclock.set_multiple_digit_number(123456)\t\t\t\t# set all the digit to 12 34 56\nclock.set_multiple_digit_number(123456, True, True)\t# set all the digit to 12:34:56\n\nclock.set_dots(False,False)\t\t# reset both semi-collon\n```\n\n### More examples\n\nThree examples are available in the examples folder:\n- [segments_example.py](https://github.com/lucblender/FlipDigitClockPython/blob/main/examples/segments_example.py) : This example shows how to use the DIGITS and SEGMENTS array to create a simple animation on the clock\n- [clock_example.py](https://github.com/lucblender/FlipDigitClockPython/blob/main/examples/clock_example.py)chronometer_example : A simple clock displaying current time with seconds precision\n- [chronometer_example.py](https://github.com/lucblender/FlipDigitClockPython/blob/main/examples/chronometer_example.py) : A simple chronometer with hundredth of a second precision\n\n\n## License\n\nUnder MIT license. Please see [License File](https://github.com/lucblender/FlipDigitClockPython/blob/main/LICENSE) for more information.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/lucblender/FlipDigitClockPython",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "flipdigitclock",
    "package_url": "https://pypi.org/project/flipdigitclock/",
    "platform": "",
    "project_url": "https://pypi.org/project/flipdigitclock/",
    "project_urls": {
      "Homepage": "https://github.com/lucblender/FlipDigitClockPython"
    },
    "release_url": "https://pypi.org/project/flipdigitclock/0.1.0/",
    "requires_dist": [
      "RPi.GPIO"
    ],
    "requires_python": ">=3.6",
    "summary": "Flip digit clock library",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10427699,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "88b082b9f60ad10ec90dce0fe09ecb0b78e70c5d37aaca1ab9af4ac6a4ab2931",
          "md5": "9b09769dd509c091de300437f595dced",
          "sha256": "fbdf7c788a8ddd8b3f2a51f0a206cc413f8cb2584f524bf364a4be0a709cca55"
        },
        "downloads": -1,
        "filename": "flipdigitclock-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9b09769dd509c091de300437f595dced",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5817,
        "upload_time": "2021-05-21T12:15:53",
        "upload_time_iso_8601": "2021-05-21T12:15:53.812066Z",
        "url": "https://files.pythonhosted.org/packages/88/b0/82b9f60ad10ec90dce0fe09ecb0b78e70c5d37aaca1ab9af4ac6a4ab2931/flipdigitclock-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "88b082b9f60ad10ec90dce0fe09ecb0b78e70c5d37aaca1ab9af4ac6a4ab2931",
        "md5": "9b09769dd509c091de300437f595dced",
        "sha256": "fbdf7c788a8ddd8b3f2a51f0a206cc413f8cb2584f524bf364a4be0a709cca55"
      },
      "downloads": -1,
      "filename": "flipdigitclock-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9b09769dd509c091de300437f595dced",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 5817,
      "upload_time": "2021-05-21T12:15:53",
      "upload_time_iso_8601": "2021-05-21T12:15:53.812066Z",
      "url": "https://files.pythonhosted.org/packages/88/b0/82b9f60ad10ec90dce0fe09ecb0b78e70c5d37aaca1ab9af4ac6a4ab2931/flipdigitclock-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}