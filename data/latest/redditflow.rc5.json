{
  "info": {
    "author": "Abhijith Neil Abraham",
    "author_email": "abhijithneilabrahampk@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Redditflow. \n\n<div align=\"center\">\n\n<img src=\"./misc/redditflow.jpeg\" width=\"25%\" height=\"25%\" width=\"400px\">\n\n**Do everything from data collection from reddit to training a machine learning model in just two lines of python code!  **\n\n______________________________________________________________________\n\n<p align=\"center\">\n  <a href=\"https://www.nfflow.com/\">Website</a> •\n  <a href=\"#installation\">Installation</a> •\n  <a href=\"#docs\">Docs</a> •\n  <a href=\"https://huggingface.co/NFflow\">Huggingface Hub</a> •\n  <a href=\"https://huggingface.co/NFflow](https://dev.to/abhijithneilabraham/redditflow-find-data-from-any-timeline-from-past-to-future-and-feed-your-ml-pipelines-jnh)\">Blog</a> •\n     \n</p>\n\n\n[![PyPI Status](https://badge.fury.io/py/redditflow.svg)](https://badge.fury.io/py/redditflow)\n[![Downloads](https://pepy.tech/badge/redditflow)](https://pepy.tech/project/redditflow)\n\n[![Discord](https://img.shields.io/discord/982008844261658726)](https://discord.gg/8JSx2THB45)\n[![license](https://img.shields.io/pypi/l/redditflow)](https://github.com/nfflow/redditflow/blob/master/LICENSE)\n\n</div>\n   \nSupports:\n\n- Text Data\n- Image Data\n\nExecution is as simple as this: \n\n* Make a config file with your required details of input.\n* Run the API in a single line with the config passed as input.\n\n## Installation.  \n`pip install redditflow`\n### Latest installation from source.  \n`pip install git+https://github.com/nfflow/redditflow`\n\n## Docs.  \n### 1) Text API.  \n\nArgument | Input | Description\n--------- | ------- | -----------  \nsort_by | str | Sort the results by available options like 'best', 'new' ,'top', 'controversial' , etc as available from Reddit.\nsubreddit_text_limit | int | Number of rows to be scraped per subreddit\ntotal_limit | int | Total number of rows to be scraped\nstart_time | DateTime | Start date and time in dd.mm.yy hh.mm.ss format\nstop_time | DateTime | Stop date and time in dd.mm.yy hh.mm.ss format\nsubreddit_search_term | str | Input search term to create filtered outputs\nsubreddit_object_type | str | Available options for scraping are `submission` and `comment`. \nresume_task_timestamp | str, Optional | If task gets interrupted, the timestamp information available from the created folder names can be used to resume.\nml_pipeline | Dict, Optional | If an ML pipeline needs to be connected at the end, to have a trained model, specify this parameter. [How to specify ML pipeline arguments](#ML-Pipeline-Arguments)\n\n\n\n\n#### ML pipeline arguments\nThe ML pipeline dict can have the following arguments.\n\nArgument | Input | Description\n--------- | ------- | -----------  \nmodel_name | str | path to pre-trained model name(Currently from Sentence Transformers (https://www.sbert.net/) hub.   \nmodel_output_path | str | path to the model_output\n\n### 2) Image API\n\nArgument | Input | Description\n--------- | ------- | -----------  \nsort_by | str | Sort the results by available options like 'best', 'new' ,'top', 'controversial' , etc as available from Reddit.\nsubreddit_image_limit | int | Number of images to be scraped per subreddit\ntotal_limit | int | Total number of images to be scraped\nstart_time | DateTime | Start date and time in dd.mm.yy hh.mm.ss format\nstop_time | DateTime | Stop date and time in dd.mm.yy hh.mm.ss format\nsubreddit_search_term | str | Input search term to create filtered outputs\nsubreddit_object_type | str | Available options for scraping are `submission` and `comment`\nclient_id | str | Since Image API requires praw, the config requires a praw client ID.\nclient_secret | str | Praw client secret. \n\n## Examples\n\n### Text data collection and training a model in the end.\n```\nfrom redditflow import TextApi\n\n\nconfig = {\n        \"sort_by\": \"best\",\n        \"subreddit_text_limit\": 50,\n        \"total_limit\": 200,\n        \"start_time\": \"27.03.2021 11:38:42\",\n        \"end_time\": \"27.03.2022 11:38:42\",\n        \"subreddit_search_term\": \"healthcare\",\n        \"subreddit_object_type\": \"comment\",\n        \"ml_pipeline\": {\n            'model_name': 'distilbert-base-uncased',\n            'model_output_path': 'healthcare_27.03.2021-27.03.2022_redditflow',\n            'model_architecture': 'CT'\n            }\n    }\n\n\nTextApi(config)\n\n\n```\n### Image data collection\n\n```\nfrom redditflow import ImageApi\n\n\nconfig = {\n        \"sort_by\": \"best\",\n        \"subreddit_image_limit\": 3,\n        \"total_limit\": 10,\n        \"start_time\": \"13.11.2021 09:38:42\",\n        \"end_time\": \"15.11.2021 11:38:42\",\n        \"subreddit_search_term\": \"cats\",\n        \"subreddit_object_type\": \"comment\",\n        \"client_id\": \"$CLIENT_ID\",  # get client id for praw\n        \"client_secret\": '$CLIENT_SECRET',  # get client secret for praw\n         }\n\nImageApi(config)\n\n\n```\n\nSince the image api requires praw api from python, a praw `client_id` and `client_secret` are required. [Read here](https://www.geeksforgeeks.org/how-to-get-client_id-and-client_secret-for-python-reddit-api-registration/) about how to get client id and client secret for praw.\n\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/nfflow/redditflow",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "redditflow",
    "package_url": "https://pypi.org/project/redditflow/",
    "platform": null,
    "project_url": "https://pypi.org/project/redditflow/",
    "project_urls": {
      "Homepage": "https://github.com/nfflow/redditflow"
    },
    "release_url": "https://pypi.org/project/redditflow/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Data Curation over Time",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14251929,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2ed6e76edfd4f2a3a2ea200788b257c383e750a0e08ded8e3ee8fd5383092ed9",
          "md5": "b009f4cfa1ce8b8cd5beebcd82306ff7",
          "sha256": "14a5c411132c7b791fd792db1ac45162fcf5282c36cb75faa681674d0d45e76e"
        },
        "downloads": -1,
        "filename": "redditflow-0.0.1-py3.8.egg",
        "has_sig": false,
        "md5_digest": "b009f4cfa1ce8b8cd5beebcd82306ff7",
        "packagetype": "bdist_egg",
        "python_version": "0.0.1",
        "requires_python": ">=3.6",
        "size": 28813,
        "upload_time": "2022-05-06T17:33:44",
        "upload_time_iso_8601": "2022-05-06T17:33:44.624407Z",
        "url": "https://files.pythonhosted.org/packages/2e/d6/e76edfd4f2a3a2ea200788b257c383e750a0e08ded8e3ee8fd5383092ed9/redditflow-0.0.1-py3.8.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "20ec41ba4e055aea200ee3594b974debd9ad3576458339f2d0404b003f4ecb6c",
          "md5": "c4043097410393bd0f030970a09d386a",
          "sha256": "e2ef212bb6e6ae14462b771270a5a34bfa9e9b408019302bcbf7511ab9433bce"
        },
        "downloads": -1,
        "filename": "redditflow-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c4043097410393bd0f030970a09d386a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9671,
        "upload_time": "2022-05-04T04:38:41",
        "upload_time_iso_8601": "2022-05-04T04:38:41.085115Z",
        "url": "https://files.pythonhosted.org/packages/20/ec/41ba4e055aea200ee3594b974debd9ad3576458339f2d0404b003f4ecb6c/redditflow-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9afcd19e6f4d06359abfda5ab4dd97e9b0f93695d0a8983dc57041a37f9806db",
          "md5": "96ed3e761c471b3d419b85c50ce590e8",
          "sha256": "6e8b83d74ee80a3efc17848a7b811bea8e11f4193bf588538e70edde7b9f3a80"
        },
        "downloads": -1,
        "filename": "redditflow-0.1.0-py3.8.egg",
        "has_sig": false,
        "md5_digest": "96ed3e761c471b3d419b85c50ce590e8",
        "packagetype": "bdist_egg",
        "python_version": "0.1.0",
        "requires_python": ">=3.6",
        "size": 28937,
        "upload_time": "2022-05-06T17:33:47",
        "upload_time_iso_8601": "2022-05-06T17:33:47.745764Z",
        "url": "https://files.pythonhosted.org/packages/9a/fc/d19e6f4d06359abfda5ab4dd97e9b0f93695d0a8983dc57041a37f9806db/redditflow-0.1.0-py3.8.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70b2784f99ac1d96954de9934d61c28f054d9411b25c499ff9233d6e5f9aa66c",
          "md5": "e3c84bd57a6a45b83e5f1fe8273b2884",
          "sha256": "7178fa8f0c714486e07dd219d03d70459399a98062116fdc20061b57d5ffdebe"
        },
        "downloads": -1,
        "filename": "redditflow-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e3c84bd57a6a45b83e5f1fe8273b2884",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10751,
        "upload_time": "2022-05-06T17:33:49",
        "upload_time_iso_8601": "2022-05-06T17:33:49.894041Z",
        "url": "https://files.pythonhosted.org/packages/70/b2/784f99ac1d96954de9934d61c28f054d9411b25c499ff9233d6e5f9aa66c/redditflow-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "03ad9b176de6620e18a357c2ffa35177d3e877f476435b9743ed181468195494",
          "md5": "47e7abaaca0f07be749a32512faee3b6",
          "sha256": "7bd7bafb5cef579451add6239a209c8cf8908328f3d47a670db41f517fa04048"
        },
        "downloads": -1,
        "filename": "redditflow-0.1.1-py3.8.egg",
        "has_sig": false,
        "md5_digest": "47e7abaaca0f07be749a32512faee3b6",
        "packagetype": "bdist_egg",
        "python_version": "0.1.1",
        "requires_python": ">=3.6",
        "size": 38869,
        "upload_time": "2022-06-21T05:10:10",
        "upload_time_iso_8601": "2022-06-21T05:10:10.544929Z",
        "url": "https://files.pythonhosted.org/packages/03/ad/9b176de6620e18a357c2ffa35177d3e877f476435b9743ed181468195494/redditflow-0.1.1-py3.8.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d00ce4e3ee435690b4716c6e67bdd60dddecbeeacc0c31c2419d65d914920907",
          "md5": "8a8e68ffbabf003843928f02f523f33d",
          "sha256": "9b5472fbec10d07e495726c1d6a502636b9f8195296f93d959f2ffa064729f84"
        },
        "downloads": -1,
        "filename": "redditflow-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8a8e68ffbabf003843928f02f523f33d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10770,
        "upload_time": "2022-05-21T06:19:54",
        "upload_time_iso_8601": "2022-05-21T06:19:54.977681Z",
        "url": "https://files.pythonhosted.org/packages/d0/0c/e4e3ee435690b4716c6e67bdd60dddecbeeacc0c31c2419d65d914920907/redditflow-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ddd886b9d60be9814182f1ba87323be69c4c332d7191028b6ffaf98f6ef77bc1",
          "md5": "9b9977c8f557d48546d1bcdf8a10feeb",
          "sha256": "3f774823ed65745659b1542b57211ba5dd6b7d1588f2126cad02670d635b8da7"
        },
        "downloads": -1,
        "filename": "redditflow-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "9b9977c8f557d48546d1bcdf8a10feeb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13381,
        "upload_time": "2022-06-21T05:10:58",
        "upload_time_iso_8601": "2022-06-21T05:10:58.271427Z",
        "url": "https://files.pythonhosted.org/packages/dd/d8/86b9d60be9814182f1ba87323be69c4c332d7191028b6ffaf98f6ef77bc1/redditflow-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4bd7cb0b85f0cefdb978b63288e47972ee091b3129d86663e9fb65de3a3056b7",
          "md5": "8d8417e59bcf1713e716b10a878cbfc1",
          "sha256": "11e1715898b5ff8fc53b342612bf314920392e11bb06c5c17445f35042b48f5f"
        },
        "downloads": -1,
        "filename": "redditflow-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8d8417e59bcf1713e716b10a878cbfc1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11634,
        "upload_time": "2022-06-26T18:11:31",
        "upload_time_iso_8601": "2022-06-26T18:11:31.908597Z",
        "url": "https://files.pythonhosted.org/packages/4b/d7/cb0b85f0cefdb978b63288e47972ee091b3129d86663e9fb65de3a3056b7/redditflow-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4bd7cb0b85f0cefdb978b63288e47972ee091b3129d86663e9fb65de3a3056b7",
        "md5": "8d8417e59bcf1713e716b10a878cbfc1",
        "sha256": "11e1715898b5ff8fc53b342612bf314920392e11bb06c5c17445f35042b48f5f"
      },
      "downloads": -1,
      "filename": "redditflow-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "8d8417e59bcf1713e716b10a878cbfc1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 11634,
      "upload_time": "2022-06-26T18:11:31",
      "upload_time_iso_8601": "2022-06-26T18:11:31.908597Z",
      "url": "https://files.pythonhosted.org/packages/4b/d7/cb0b85f0cefdb978b63288e47972ee091b3129d86663e9fb65de3a3056b7/redditflow-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}