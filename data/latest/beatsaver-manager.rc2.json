{
  "info": {
    "author": "Valentin Weber",
    "author_email": "dev@vweber.eu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Intended Audience :: End Users/Desktop",
      "License :: OSI Approved :: European Union Public Licence 1.2 (EUPL 1.2)",
      "Natural Language :: English",
      "Operating System :: Microsoft :: Windows",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Topic :: Desktop Environment :: File Managers",
      "Topic :: Games/Entertainment",
      "Topic :: Utilities"
    ],
    "description": "# Beat Saber Custom Level and Playlist Manager ![Tests-badge][pl-tests]\nCommand Line Interface to install, remove and update custom Beat Saber levels\nusing the [BeatSaver][beatsaver] API.\n\n## Installation\nInstall via pip like any other Python package:\n```\npip install beatsaver-manager\n```\nAlternatively use pipx\n```\npipx install beatsaver-manager\n```\n\n## Command Line Interface (CLI)\n```\nbsdl [-h] [--beatsaber <dir>] [--log-level <level>] <command> ...\n```\nThe command line interface provides the main entry point `bsdl`. It has two\narguments that can be specified. They are also available for all other commands\nthe application provides.\n\nThe `--beatsaber` argument specifies the installation directory of the Beat\nSaber game, e.g.: \"C:\\Program Files (x86)\\Steam\\steamapps\\common\\Beat Saber\"\n\nIf the argument isn't set the application tries to read the value from the\nenvironment variable `BEATSABER`. If neither the environment variable nor the\ncommand line argument are set running the application will result in an error.\n\n## Configuration\nTo avoid having to always specify the Beat Saber installation directory when\ncalling the application it is advisable to set the environment variable\n`$BEATSABER` to contain the path to the Beat Saber installation.\n\nHowever, the `--beatsaber` argument takes precedence over the value in the\nenvironment variable. If the argument is set, the value from the environment\nvariable is not used. This makes it easy to manage multiple Beat Saber\ninstallations (e.g. Steam and Oculus).\n\nThe following commands can be used to set that environment variable to the\ngiven example location value. To use the command for a different path replace\nthe filepath part with the one you want. Make sure the path is surrounded by\nquotation marks \" \". On Windows a correctly formatted path to a folder can be\ncopied by holding Shift while right-clicking a folder and selecting the option\n\"Copy as Path\".\n\n### Set Steam Directory\n- Example Location: `C:\\Program Files (x86)\\Steam\\steamapps\\common\\Beat Saber\\Beat Saber_Data\\CustomLevels`\n```\n[System.Environment]::SetEnvironmentVariable(\"BEATSABER_TEST\", \"C:\\Program Files (x86)\\Steam\\steamapps\\common\\Beat Saber\\Beat Saber_Data\\CustomLevels\", [System.EnvironmentVariableTarget]::User)\n```\n\n### Set Oculus Directory\n- Example Location: `C:\\Program Files\\Oculus\\Software\\Software\\hyperbolic-magnetism-beat-saber\\Beat Saber_Data\\CustomLevels`\n```\n[System.Environment]::SetEnvironmentVariable(\"BEATSABER\", \"C:\\Program Files\\Oculus\\Software\\Software\\hyperbolic-magnetism-beat-saber\\Beat Saber_Data\\CustomLevels\", [System.EnvironmentVariableTarget]::User)\n```\n\n\n\n## Managing Playlists\n```\nusage: bsdl bpl [-h] <command> ...\n\npositional arguments:\n  <command>\n    install   install playlist and download missing songs\n              (use '-h' option for details)\n    list      list all locally installed playlists\n              (use '-h' option for details)\n    rm        remove a playlist and all its unique songs\n              (use '-h' option for details)\n    upgrade   install newer version of all outdated local playlists\n              (use '-h' option for details)\n    sync      list all installed custom levels not in a playlist\n              (behaves like 'lvl sync') (use '-h' option for details)\n```\n\n## Installing Playlists\n```\nbsdl bpl install [-h] [--keys] [--files] [-f] playlist [playlist ...]\n```\nThis command installs one or more playlists which can be referenced by either\ntheir BeatSaver key, the full BeatSaver URL or a path to an already downloaded\nbplist file from Beat Saver.\n\nDuring installation all songs in that playlist that are not already installed\nare downloaded and installed from Beat Saver.\n\nIf a referenced playlist is already installed this specific playlist is skipped\nunless the `-f, --force` argument is set. Be aware that this argument applies\nto ALL playlists that are referenced.\n\n\n### Install a playlist via URL\n```\nbsdl bpl install https://beatsaver.com/playlists/1710\n```\nThe above command will install the playlist [Rammstein][bpl_rammstein] and\ndownload all its songs that aren't already installed. The Beat Saber\ninstallation directory is read from the environment variable. If it isn't set\nthe application will not run. If the playlist is already installed it won't be\ndownloaded again.\n\n### Install a playlist via BeatSaver Key\n```\nbsdl --beatsaber \"C:\\Beat Saber\" bpl install --keys 2218\n```\nThe above command will install the playlist [Cyberpunk 2077][bpl_cyberpunk]\nand download all its songs that aren't already installed. The Beat Saber\ninstallation directory is given as \"C:\\Beat Saber\". If that directory doesn't\nexist or is write-protected the application will not run. If the playlist is\nalready installed it won't be downloaded again.\n\n### Install a playlist via local file\n```\nbsdl bpl install --files \"~/Downloads/BeatSaver - Sabaton.bplist\"\n```\nAssume you have downloaded the playlist [Sabaton][bpl_sabaton] to the default\nWindows Downloads directory without changing the filename. The above command\nwill install the playlist  and download all its songs that aren't already\ninstalled. The Beat Saber installation directory is read from the environment\nvariable. If it isn't set the application will not run. If one of the files\ndoes not contain valid BeatSaver Playlist data the playlist is skipped. If\nthe playlist is already installed it won't be downloaded again.\n\n### Forcefully install a playlist that is already installed\n```\nbsdl bpl install -f https://beatsaver.com/playlists/1710\n```\n```\nbsdl bpl install --force https://beatsaver.com/playlists/1710\n```\nBoth above commands are equivalent and behave exactly the same as the one\ndescribed in Example 1. The only difference being that the playlist and all\nsongs not already installed are always downloaded overwriting any potential\nexisting playlist file.\n\n## Listing Installed Playlists\n```\nbsdl bpl list [-h] [--outdated]\n```\n\n\n### Display all installed playlists\n```\nbsdl bpl list\n```\nThe above command will display a table containing the title and Beat Saver key\nof all installed playlists. The Beat Saber installation directory is read from\nthe environment variable. If it isn't set the application will not run. If no\nlevels are installed nothing is displayed unless the log is set to debug level.\n\n### Display all installed playlists and check if they're outdated\n```\nbsdl bpl list --outdated\n```\nThe above command behaves like the one in Example 1 but every playlist is\ncompared to its corresponding version on BeatSaver. A third column is added to\nthe table which will contain an \"x\" if the versions are different. This means\nthe application considers it to be outdated and [upgradable][_toc_bpl_sync].\n\n## Removing Installed Playlists\n```\nbsdl bpl rm [-h] [--keep-songs] [--files] playlist [playlist ...]\n```\nThis command removes one or more installed playlists which can be referenced by\neither their BeatSaver key or the path to the bplist file. By default this also\nremoves all songs of a playlist unless that song is part of another playlist.\nIf the option `--keep-songs` is set no songs will be removed. Be aware that\nthis option applies to ALL referenced playlists. \n\n\n### Remove a playlist via key\n```\nbsdl bpl rm 1710\n```\nThe above command will remove the playlist [Rammstein][bpl_rammstein] and all\nsongs that are unique to it. The Beat Saber installation directory is read from\nthe environment variable. If it isn't set the application will not run.\n\n### Remove a playlist via filepath\n```\nbsdl bpl rm --files \"C:\\Program Files (x86)\\Steam\\steamapps\\common\\Beat Saber\\Playlists\\beatsaver-2218.bplist\"\n```\nThe above command will remove the playlist [Cyberpunk 2077][bpl_cyberpunk] and\nall songs that are unique to it. The Beat Saber installation directory is read\nfrom the environment variable. If it isn't set the application will not run.\n\n### Remove a playlist keeping all the songs\n```\nbsdl bpl rm --keep-songs 1710\n```\nThe above command will remove the playlist [Rammstein][bpl_rammstein] but will\nnot remove its songs. The Beat Saber installation directory is read from the\nenvironment variable. If it isn't set the application will not run.\n\n## Synchronizing Playlists and Levels\n```\nbsdl bpl sync [-h] [--remove]\n```\nThis command will display all installed levels that are not part in a playlist.\nIf the option `--remove` is set, all of those levels will be removed.\n\nThis command behaves exactly like [bsdl lvl sync][_toc_lvl_sync]\n\n\n### List all songs that aren't in a playlist\n```\nbsdl bpl sync\n```\nThe above command will log all installed levels that aren't referenced as a\nsong in any installed playlist. The Beat Saber installation directory is read\nfrom the environment variable. If it isn't set the application will not run.\n\n### List all songs that aren't in a playlist and delete them\n```\nbsdl bpl sync --remove\n```\nThe above command will log and remove all installed levels that aren't\nreferenced as a song in any installed playlist. The Beat Saber installation\ndirectory is read from the environment variable. If it isn't set the\napplication will not run.\n\n## Upgrading Installed Playlists\n```\nbsdl bpl upgrade [-h] [--remove-songs] [--bpl <key> [<key> ...]]\n```\nThis command determines all installed playlists and checks whether there is a\ndifference between the installed version and the one found on BeatSaver. If the\n`--remove-songs` option is set . Using the `--bpl` option\nmakes it possible to reference installed playlists by their BeatSaver key. If\nthat option is checked only the referenced playlists are upgraded.\n\n\n### Upgrade a specific playlist\n```\nbsdl bpl upgrade --bpl 1072\n```\nThe above command will check if there is a difference between the installed\nversion of the playlist [Sabaton][bpl_sabaton] and the one found on BeatSaver.\nIf the playlist is not installed nothing is done. The Beat Saber installation\ndirectory is read from the environment variable. If it isn't set the\napplication will not run.\n\n### Upgrade all outdated playlists\n```\nbsdl bpl upgrade\n```\nThe above command will determine all installed playlists and check whether\nthere is a difference between the installed version and the one found on\nBeatSaver. The Beat Saber installation directory is read from the environment\nvariable. If it isn't set the application will not run.\n\n### Upgrade all outdated playlists and remove their songs\n```\nbsdl bpl upgrade --remove-songs\n```\nThe above command will determine all installed playlists and check whether\nthere is a difference between the installed version and the one found on\nBeatSaver. All songs that are no longer in the playlist are removed unless they\nare part of a another playlist. The Beat Saber installation directory is read\nfrom the environment variable. If it isn't set the application will not run.\n\n## Managing Custom Levels\n```\nusage: bsdl lvl [-h] <command> ...\n\npositional arguments:\n  <command>\n    install   install a custom level locally\n              (use '-h' option for details)\n    list      list all installed custom levels\n              (use '-h' option for details)\n    rm        remove a custom level not in a playlist\n              (use '-h' option for details)\n    sync      list all installed custom levels not in a playlist\n              (behaves like 'bpl sync') (use '-h' option for details)\n\noptions:\n  -h, --help  show this help message and exit\n\n--log-level argument defaults to 'info' and can also be set with\nthe environment variable $BSDL_LOG_LEVEL\n\n--beatsaber argument defaults to environment variable $BEATSABER\nIf the variable is not set, the argument MUST be provided\n```\n\n## Installing Custom Levels\n```\nbsdl lvl install [-h] [--keys] [-f] level [level ...]\n```\nThis command installs one or more levels which can be referenced by either\ntheir BeatSaver key or the full BeatSaver URL.\n\nIf a referenced level is already installed this specific playlist is skipped\nunless the `-f, --force` argument is set. Be aware that this argument applies\nto ALL levels that are referenced.\n\n\n### Install a Level via URL\n```\nbsdl lvl install https://beatsaver.com/maps/7707\n```\nThe above command will install the level\n[Ludwig Göransson - The Mandalorian Theme][lvl_mando]. If the level is already\ninstalled it won't be downloaded again. The Beat Saber installation directory\nis read from the environment variable. If it isn't set the application will not\nrun.\n\n### Install a Level via BeatSaver Key\n```\nbsdl lvl install --keys 5257\n```\nThe above command will install the level [Bonfire - Knife Party][lvl_bonfire].\nIf the level is already installed it won't be downloaded again. The Beat Saber\ninstallation directory is read from the environment variable. If it isn't set\nthe application will not run.\n\n### Forcefully install a level that is already installed\n```\nbsdl lvl install -f https://beatsaver.com/maps/7707\n```\n```\nbsdl lvl install --force https://beatsaver.com/maps/7707\n```\nThe above commands are equivalent and behave like the one in Example 1. The\nonly difference being that the level is always downloaded overwriting any\npotential existing version.\n\n## Listing Installed Levels\n```\nbsdl lvl list [-h] [--check-playlists]\n```\n\n\n### Display all installed levels\n```\nbsdl lvl list\n```\nThe above command will display a table containing the title and Beat Saver key\nof all installed levels. The Beat Saber installation directory is read from the\nenvironment variable. If it isn't set the application will not run. If no\nlevels are installed nothing is displayed unless the log is set to debug level.\n\n### Display all installed levels and their playlist(s)\n```\nbsdl lvl list --check-playlists\n```\nThe above command behaves like the one in Example 1 but a third column\ncontaining the names of playlists that contain the song is added to the table.\n\n## Removing Installed Levels\n```\nbsdl lvl rm [-h] [-f] [--files] level [level ...]\n```\nThis command removes one or more installed levels which can be referenced by\neither their BeatSaver key or the path to the directory that contains the level\ndata. If a level is referenced as a song in any installed playlist the removal\nis skipped unless the `-f, --force` option is set. Be aware that this option\napplies to ALL referenced levels. A referenced level that is not installed is\nalso skipped.\n\n\n### Remove a level via its BeatSaver key\n```\nbsdl lvl rm 7707\n```\nThe above command will remove the level\n[Ludwig Göransson - The Mandalorian Theme][lvl_mando] if it is installed and\nnot part of any playlist. The Beat Saber installation directory is read from\nthe environment variable. If it isn't set the application will not run.\n\n### Remove a level via its directory path\n```\nbsdl lvl rm \"C:\\Program Files (x86)\\Steam\\steamapps\\common\\Beat Saber\\Beat Saber_Data\\CustomLevels\\5257 (Bonfire - Funrankable)\"\n```\nThe above command will remove the level [Bonfire - Knife Party][lvl_bonfire] if\nit is installed and not part of any playlist. The Beat Saber installation\ndirectory is read from the environment variable. If it isn't set the\napplication will not run.\n\n### Forcefully remove a level ignoring whether it's in a playlist\n```\nbsdl lvl rm -f 7707\n```\n```\nbsdl lvl rm --force 7707\n```\nThe above commands are equivalent and behave like the one in Example 1. The\nonly difference being that the level is removed even if it is in a playlist.\n\n## Synchronizing Levels and Playlists\n```\nbsdl lvl sync [-h] [--remove]\n```\nThis command will display all installed levels that are not part in a playlist.\nIf the option `--remove` is set, all of those levels will be removed.\n\nThis command behaves exactly like [bsdl bpl sync][_toc_bpl_sync]\n\n\n### List all songs that aren't in a playlist\n```\nbsdl lvl sync\n```\nThe above command will log all installed levels that aren't referenced as a\nsong in any installed playlist. The Beat Saber installation directory is read\nfrom the environment variable. If it isn't set the application will not run.\n\n### List all songs that aren't in a playlist and delete them\n```\nbsdl lvl sync --remove\n```\nThe above command will log and remove all installed levels that aren't\nreferenced as a song in any installed playlist. The Beat Saber installation\ndirectory is read from the environment variable. If it isn't set the\napplication will not run.\n\n## Future Improvements\n- Support for BeatSaver One-Click installation.\n\n## Encountered a Bug?\nFeel free to [open an issue][new-issue] if you encountered bugs or have other\nideas that aren't yet listed in the [backlog][issues].\n\n\n <!--- References --->\n[pl-tests]: https://github.com/vlntnwbr/beatsaver-manager/workflows/Tests/badge.svg\n[beatsaver]: https://beatsaver.com\n\n[bpl_rammstein]: https://beatsaver.com/playlists/1710\n[bpl_cyberpunk]: https://beatsaver.com/playlists/2218\n[bpl_sabaton]: https://beatsaver.com/playlists/1052\n[lvl_mando]: https://beatsaver.com/maps/7707\n[lvl_bonfire]: https://beatsaver.com/maps/5257\n\n\n[new-issue]: https://github.com/vlntnwbr/beatsaver-manager/issues/new/choose\n[issues]: https://github.com/vlntnwbr/beatsaver-manager/issues\n\n[_toc_bpl_install]: #installing-playlists\n[_toc_bpl_list]: #listing-installed-playlists\n[_toc_bpl_rm]: #removing-installed-playlists\n[_toc_bpl_sync]: #synchronizing-playlists-and-levels\n[_toc_bpl_upgrade]: #upgrading-installed-playlists\n[_toc_lvl_install]: #installing-custom-levels\n[_toc_lvl_list]: #listing-installed-levels\n[_toc_lvl_rm]: #removing-installed-levels\n[_toc_lvl_sync]: #synchronizing-levels-and-playlists\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/vlntnwbr/beatsaver-manager",
    "keywords": "",
    "license": "EUPL",
    "maintainer": "",
    "maintainer_email": "",
    "name": "beatsaver-manager",
    "package_url": "https://pypi.org/project/beatsaver-manager/",
    "platform": "",
    "project_url": "https://pypi.org/project/beatsaver-manager/",
    "project_urls": {
      "Bug Tracker": "https://github.com/vlntnwbr/beatsaver-manager/labels/bug",
      "Homepage": "https://github.com/vlntnwbr/beatsaver-manager",
      "Issue Tracker": "https://github.com/vlntnwbr/beatsaver-manager/issues"
    },
    "release_url": "https://pypi.org/project/beatsaver-manager/0.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Manager for Custom Beat Saber Playlists and Levels from BeatSaver",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13092206,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8ad8e74affabd3a6eec16c6af81000beff19c4812f4a30fc614ed571cd489a60",
          "md5": "f322b00d61b94c8b964f7b4da9bf1ddd",
          "sha256": "165da52ae9fc1c502fd5cc470cf62709e978924dacab839a2b4aafbf71d3d737"
        },
        "downloads": -1,
        "filename": "beatsaver-manager-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f322b00d61b94c8b964f7b4da9bf1ddd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 22850,
        "upload_time": "2022-03-05T23:01:37",
        "upload_time_iso_8601": "2022-03-05T23:01:37.503677Z",
        "url": "https://files.pythonhosted.org/packages/8a/d8/e74affabd3a6eec16c6af81000beff19c4812f4a30fc614ed571cd489a60/beatsaver-manager-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee62a5734305e5f7778524b77152bd9209f3f8c559079c19136d87f80550a3a6",
          "md5": "eab04aed19918887e82f2acb4e5cafd1",
          "sha256": "5e4b1cd5a6d6cf26c49edab67150036db54a790aa854f49f676f8f3cfa5748d2"
        },
        "downloads": -1,
        "filename": "beatsaver-manager-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "eab04aed19918887e82f2acb4e5cafd1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 35192,
        "upload_time": "2022-03-06T10:37:20",
        "upload_time_iso_8601": "2022-03-06T10:37:20.758138Z",
        "url": "https://files.pythonhosted.org/packages/ee/62/a5734305e5f7778524b77152bd9209f3f8c559079c19136d87f80550a3a6/beatsaver-manager-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ee62a5734305e5f7778524b77152bd9209f3f8c559079c19136d87f80550a3a6",
        "md5": "eab04aed19918887e82f2acb4e5cafd1",
        "sha256": "5e4b1cd5a6d6cf26c49edab67150036db54a790aa854f49f676f8f3cfa5748d2"
      },
      "downloads": -1,
      "filename": "beatsaver-manager-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "eab04aed19918887e82f2acb4e5cafd1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 35192,
      "upload_time": "2022-03-06T10:37:20",
      "upload_time_iso_8601": "2022-03-06T10:37:20.758138Z",
      "url": "https://files.pythonhosted.org/packages/ee/62/a5734305e5f7778524b77152bd9209f3f8c559079c19136d87f80550a3a6/beatsaver-manager-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}