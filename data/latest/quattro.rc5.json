{
  "info": {
    "author": "",
    "author_email": "Tin Tvrtkovic <tinchester@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License"
    ],
    "description": "quattro: task control for asyncio\n=================================\n\n.. image:: https://img.shields.io/pypi/v/quattro.svg\n        :target: https://pypi.python.org/pypi/quattro\n\n.. image:: https://github.com/Tinche/quattro/workflows/CI/badge.svg\n        :target: https://github.com/Tinche/quattro/actions?workflow=CI\n\n.. image:: https://codecov.io/gh/Tinche/quattro/branch/main/graph/badge.svg?token=9IE6FHZV2K\n       :target: https://codecov.io/gh/Tinche/quattro\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://github.com/psf/black\n\n----\n\n**quattro** is an Apache 2 licensed library, written in Python, for task control\nin asyncio applications. `quattro` is influenced by structured concurrency\nconcepts from the `Trio framework`_.\n\n`quattro` supports Python versions 3.9 - 3.11, including PyPy.\n\n.. _`Trio framework`: https://trio.readthedocs.io/en/stable/\n\nInstallation\n------------\n\nTo install `quattro`, simply:\n\n.. code-block:: bash\n\n    $ pip install quattro\n\nTask Groups\n-----------\n\n.. note:: On Python 3.11 and later, the `standard library TaskGroup`_ implementation is used instead.\n    The TaskGroup implementation here can be considered a backport for older Python versions.\n\n.. _`standard library TaskGroup`: https://docs.python.org/3/library/asyncio-task.html#task-groups\n\n`quattro` contains a TaskGroup implementation. TaskGroups are inspired by `Trio nurseries`_.\n\n.. code-block:: python\n\n    from quattro import TaskGroup\n\n    async def my_handler():\n        # We want to spawn some tasks, and ensure they are all handled before we return.\n        async def task_1():\n            ...\n\n        async def task_2():\n            ...\n\n        async with TaskGroup() as tg:\n            t1 = tg.create_task(task_1)\n            t2 = tg.create_task(task_2)\n\n        # The end of the `async with` block awaits the tasks, ensuring they are handled.\n\nTaskGroups are essential building blocks for achieving the concept of `structured concurrency`_.\nIn simple terms, structured concurrency means your code does not leak tasks - when a coroutine\nfinishes, all tasks spawned by that coroutine and all its children are also finished.\n(In fancy terms, the execution flow becomes a directed acyclic graph.)\n\nStructured concurrency can be achieved by using TaskGroups instead of ``asyncio.create_task``\nto start background tasks. TaskGroups essentially do two things:\n\n* when exiting from a TaskGroup ``async with`` block, the TaskGroup awaits all of its children, ensuring they are finished when it exits\n* when a TaskGroup child task raises an exception, all other children and the task inside the context manager are cancelled\n\nThe implementation has been borrowed from the EdgeDB project.\n\n.. _`Trio nurseries`: https://trio.readthedocs.io/en/stable/reference-core.html#nurseries-and-spawning\n.. _`structured concurrency`: https://vorpus.org/blog/notes-on-structured-concurrency-or-go-statement-considered-harmful/\n\nCancel Scopes\n-------------\n\n`quattro` contains an independent, asyncio implementation of `Trio CancelScopes`_.\nDue to fundamental differences between asyncio and Trio the actual runtime behavior isn't\nexactly the same, but close.\n\n.. code-block:: python\n\n    from quattro import move_on_after\n\n    async def my_handler():\n        with move_on_after(1.0) as cancel_scope:\n            await long_query()\n\n        # 1 second later, the function continues running\n\n`quattro` contains the following helpers:\n\n* ``move_on_after``\n* ``move_on_at``\n* ``fail_after``\n* ``fail_at``\n\nAll helpers produce instances of ``quattro.CancelScope``, which is largely similar to the Trio variant.\n\n``CancelScopes`` have the following attributes:\n\n* ``cancel()`` - a method through which the scope can be cancelled manually.\n  ``cancel()`` can be called before the scope is entered; entering the scope will cancel it at the first opportunity\n* ``deadline`` - read/write, an optional deadline for the scope, at which the scope will be cancelled\n* ``cancelled_caught`` - a readonly bool property, whether the scope finished via cancellation\n\n`quattro` also supports retrieving the current effective deadline in a task using ``quattro.current_effective_deadline``.\nThe current effective deadline is a float value, with ``float('inf')`` standing in for no deadline.\n\nPython versions 3.11 and higher contain `similar helpers`_, ``asyncio.timeout`` and ``asyncio.timeout_at``.\nThe `quattro` ``fail_after`` and ``fail_at`` helpers are effectively equivalent to the asyncio timeouts, and pass the test suite for them.\n\nThe differences are:\n\n* The `quattro` versions are normal context managers (used with just ``with``), asyncio versions are async context managers (using ``async with``).\n  Neither version needs to be async since nothing is awaited; `quattro` chooses to be non-async to signal there are no suspension points being hit, match Trio and be a little more readable.\n* `quattro` additionally contains the ``move_on_at`` and ``move_on_after`` helpers.\n* The `quattro` versions support getting the current effective deadline.\n* The `quattro` versions can be cancelled manually using ``scope.cancel()``, and precancelled before they are entered\n* The `quattro` versions are available on all supported Python versions, not just 3.11+.\n\n.. _`similar helpers`: https://docs.python.org/3/library/asyncio-task.html#timeouts\n\nasyncio and Trio differences\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n``fail_after`` and ``fail_at`` raise ``asyncio.Timeout`` instead of ``trio.Cancelled`` exceptions when they fail.\n\nasyncio has edge-triggered cancellation semantics, while Trio has level-triggered cancellation semantics.\nThe following example will behave differently in `quattro` and Trio:\n\n.. code-block:: python\n\n    with trio.move_on_after(TIMEOUT):\n        conn = make_connection()\n        try:\n            await conn.send_hello_msg()\n        finally:\n            await conn.send_goodbye_msg()\n\nIn Trio, if the ``TIMEOUT`` expires while awaiting ``send_hello_msg()``, ``send_goodbye_msg()`` will\nalso be cancelled. In `quattro`, ``send_goodbye_msg()`` will run (and potentially block) anyway.\nThis is a limitation of the underlying framework.\n\nIn `quattro`, cancellation scopes cannot be shielded.\n\n.. _`Trio CancelScopes`: https://trio.readthedocs.io/en/stable/reference-core.html#cancellation-and-timeouts\n\nChangelog\n---------\n\n22.2.0 (2022-12-27)\n~~~~~~~~~~~~~~~~~~~\n* More robust nested cancellation on 3.11.\n* Better typing support for ``fail_after`` and ``fail_at``.\n* Improve effective deadline handling for pre-cancelled scopes.\n* TaskGroups now support custom ContextVar contexts when creating tasks, just like the standard library implementation.\n\n22.1.0 (2022-12-19)\n~~~~~~~~~~~~~~~~~~~\n* Restore TaskGroup copyright notice.\n* TaskGroups now raise ExceptionGroups (using the PyPI backport when necessary) on child errors.\n* Add support for Python 3.11, drop 3.8.\n* TaskGroups no longer have a `name` and the `repr` is slightly different, to harmonize with the Python 3.11 standard library implementation.\n* TaskGroups no longer swallow child exceptions when aborting, to harmonize with the Python 3.11 standard library implementation.\n* Switch to CalVer.\n\n0.3.0 (2022-01-08)\n~~~~~~~~~~~~~~~~~~\n* Add `py.typed` to enable typing information.\n* Flesh out type annotations for TaskGroups.\n\n0.2.0 (2021-12-27)\n~~~~~~~~~~~~~~~~~~\n* Add ``quattro.current_effective_deadline``.\n\n0.1.0 (2021-12-08)\n~~~~~~~~~~~~~~~~~~\n* Initial release, containing task groups and cancellation scopes.\n\nCredits\n-------\n\nThe initial TaskGroup implementation has been taken from the `EdgeDB`_ project.\nThe CancelScope implementation was heavily influenced by `Trio`_, and inspired by the `async_timeout`_ package.\n\n.. _`EdgeDB`: https://github.com/edgedb/edgedb\n.. _`Trio`: https://trio.readthedocs.io/en/stable/index.html\n.. _`async_timeout`: https://github.com/aio-libs/async-timeout\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "quattro",
    "package_url": "https://pypi.org/project/quattro/",
    "platform": null,
    "project_url": "https://pypi.org/project/quattro/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/quattro/22.2.0/",
    "requires_dist": [
      "exceptiongroup; python_version < '3.11'",
      "pytest-asyncio==0.20.3 ; extra == \"dev\"",
      "coverage ; extra == \"dev\"",
      "black ; extra == \"dev\"",
      "flake8 ; extra == \"dev\"",
      "mypy==0.991 ; extra == \"dev\"",
      "isort ; extra == \"dev\""
    ],
    "requires_python": ">=3.9",
    "summary": "Task control for asyncio.",
    "version": "22.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16219171,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8d17a09b32af9b9a9c83fba7e4864c5b319a18d30b5a754b80bac5e0d1035304",
          "md5": "ead147757d8bb6ded96fb4bd6ff2ba5c",
          "sha256": "984df10b9a3ca3eeb84088e022cbe149dd5cb9f4cf2969bf79a6aa54268c321d"
        },
        "downloads": -1,
        "filename": "quattro-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ead147757d8bb6ded96fb4bd6ff2ba5c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 10777,
        "upload_time": "2021-12-08T12:17:28",
        "upload_time_iso_8601": "2021-12-08T12:17:28.636706Z",
        "url": "https://files.pythonhosted.org/packages/8d/17/a09b32af9b9a9c83fba7e4864c5b319a18d30b5a754b80bac5e0d1035304/quattro-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "84354603a28250cc5ae3bf6a6d81528487c44a25d6912087c1928462cec75f75",
          "md5": "b2a435fc2f9ae0c865c7cd15c745a1fb",
          "sha256": "f184578a7b6768275b29bbdfa361226a7f8033134f1b641a6402026ea989057e"
        },
        "downloads": -1,
        "filename": "quattro-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b2a435fc2f9ae0c865c7cd15c745a1fb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 16619,
        "upload_time": "2021-12-08T12:17:45",
        "upload_time_iso_8601": "2021-12-08T12:17:45.991094Z",
        "url": "https://files.pythonhosted.org/packages/84/35/4603a28250cc5ae3bf6a6d81528487c44a25d6912087c1928462cec75f75/quattro-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "13d1774b285e75d2a3b926f1dca06309155fde3e9b4661851ab322eb4da60386",
          "md5": "84a1c610831988908801e2730305c0c8",
          "sha256": "c3cc301273f3eb22ae8559ec95ea97b62b29ff0cf47bd3bb02bd523670d77440"
        },
        "downloads": -1,
        "filename": "quattro-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "84a1c610831988908801e2730305c0c8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 11276,
        "upload_time": "2021-12-27T12:49:44",
        "upload_time_iso_8601": "2021-12-27T12:49:44.421112Z",
        "url": "https://files.pythonhosted.org/packages/13/d1/774b285e75d2a3b926f1dca06309155fde3e9b4661851ab322eb4da60386/quattro-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1e0d6b0aa15f25e75b553e9fa259f4ce16d31f1ea223506f73a59d3a43015b41",
          "md5": "5a8ceaf4485e3306225eb92e3d32cfe8",
          "sha256": "3e1b963af681e4cb604717d7073a580b0188f3ff33ee9f8f6dcd0adfbc8b1aa6"
        },
        "downloads": -1,
        "filename": "quattro-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "5a8ceaf4485e3306225eb92e3d32cfe8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 17071,
        "upload_time": "2021-12-27T12:49:54",
        "upload_time_iso_8601": "2021-12-27T12:49:54.828993Z",
        "url": "https://files.pythonhosted.org/packages/1e/0d/6b0aa15f25e75b553e9fa259f4ce16d31f1ea223506f73a59d3a43015b41/quattro-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f22538d34438fed8c7369af0e7e3a20bb3e6fd975cd66ecaff3543c4671bc92",
          "md5": "54041bb0c82d9347f346f830e2dd7ce2",
          "sha256": "254fe620916f0886e2bf84bbb3ff84ce9712f89572dae44f740f92cf017b36bd"
        },
        "downloads": -1,
        "filename": "quattro-0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "54041bb0c82d9347f346f830e2dd7ce2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 11599,
        "upload_time": "2022-01-08T13:34:27",
        "upload_time_iso_8601": "2022-01-08T13:34:27.876119Z",
        "url": "https://files.pythonhosted.org/packages/9f/22/538d34438fed8c7369af0e7e3a20bb3e6fd975cd66ecaff3543c4671bc92/quattro-0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "90b769dab0cf55f3118069892f513f364436e2838779838d774cdb4a42cc61bf",
          "md5": "474fee83f11c4d99a2614eede6dc684d",
          "sha256": "cfc5bcadfe21baa4ff26ffcb04638f2574f15ad8f03787aae7162b6defcee648"
        },
        "downloads": -1,
        "filename": "quattro-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "474fee83f11c4d99a2614eede6dc684d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 17656,
        "upload_time": "2022-01-08T13:35:13",
        "upload_time_iso_8601": "2022-01-08T13:35:13.411403Z",
        "url": "https://files.pythonhosted.org/packages/90/b7/69dab0cf55f3118069892f513f364436e2838779838d774cdb4a42cc61bf/quattro-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "22.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "85dc47d7c883c17a78a78a2ecbb318f9583f40e5c2410c04510f48bb339d6294",
          "md5": "4f69836a6dfbd29ad2fab9b94b51ea1d",
          "sha256": "5a2718be7df63a0127f6f82106b08e17e57e212f356d4ba9f0958b391dc1cbb9"
        },
        "downloads": -1,
        "filename": "quattro-22.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4f69836a6dfbd29ad2fab9b94b51ea1d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 12408,
        "upload_time": "2022-12-19T11:29:59",
        "upload_time_iso_8601": "2022-12-19T11:29:59.115530Z",
        "url": "https://files.pythonhosted.org/packages/85/dc/47d7c883c17a78a78a2ecbb318f9583f40e5c2410c04510f48bb339d6294/quattro-22.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9d777ba3ba19fa6eaaec420cf6a503f2f68dc04866c39e5b3372f65e823d2ebb",
          "md5": "e24cf5926517a1310c593a8223eb38ed",
          "sha256": "c74e7eff4a61e650852bb2a72991630cb5e4aad029c96501e8f62b42c2f3019d"
        },
        "downloads": -1,
        "filename": "quattro-22.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e24cf5926517a1310c593a8223eb38ed",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 19249,
        "upload_time": "2022-12-19T11:30:00",
        "upload_time_iso_8601": "2022-12-19T11:30:00.891250Z",
        "url": "https://files.pythonhosted.org/packages/9d/77/7ba3ba19fa6eaaec420cf6a503f2f68dc04866c39e5b3372f65e823d2ebb/quattro-22.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "22.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4ea2e24208e3e6897a0739205f1782c22d538be4e4813b5fc8b1740252e4601e",
          "md5": "a3758196c4191a8825e40af3827cd2f9",
          "sha256": "bdf3ba09d14b928aec3c523b7801073e191e59200dde6ea78dc880a2ca66e82f"
        },
        "downloads": -1,
        "filename": "quattro-22.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a3758196c4191a8825e40af3827cd2f9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 9299,
        "upload_time": "2022-12-27T00:29:58",
        "upload_time_iso_8601": "2022-12-27T00:29:58.371470Z",
        "url": "https://files.pythonhosted.org/packages/4e/a2/e24208e3e6897a0739205f1782c22d538be4e4813b5fc8b1740252e4601e/quattro-22.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ccd2dd69f4cb945560432f35a2917cec747f2830c819d514c9204f55c5d5a3e4",
          "md5": "1aaeed8b49fab1ba05c3835729b3125b",
          "sha256": "8e0b37b3d3f663d6f7473b7ab51c510784a67432876ffdbe93a07098d4da52ec"
        },
        "downloads": -1,
        "filename": "quattro-22.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1aaeed8b49fab1ba05c3835729b3125b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 10855,
        "upload_time": "2022-12-27T00:30:00",
        "upload_time_iso_8601": "2022-12-27T00:30:00.445255Z",
        "url": "https://files.pythonhosted.org/packages/cc/d2/dd69f4cb945560432f35a2917cec747f2830c819d514c9204f55c5d5a3e4/quattro-22.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4ea2e24208e3e6897a0739205f1782c22d538be4e4813b5fc8b1740252e4601e",
        "md5": "a3758196c4191a8825e40af3827cd2f9",
        "sha256": "bdf3ba09d14b928aec3c523b7801073e191e59200dde6ea78dc880a2ca66e82f"
      },
      "downloads": -1,
      "filename": "quattro-22.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a3758196c4191a8825e40af3827cd2f9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 9299,
      "upload_time": "2022-12-27T00:29:58",
      "upload_time_iso_8601": "2022-12-27T00:29:58.371470Z",
      "url": "https://files.pythonhosted.org/packages/4e/a2/e24208e3e6897a0739205f1782c22d538be4e4813b5fc8b1740252e4601e/quattro-22.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ccd2dd69f4cb945560432f35a2917cec747f2830c819d514c9204f55c5d5a3e4",
        "md5": "1aaeed8b49fab1ba05c3835729b3125b",
        "sha256": "8e0b37b3d3f663d6f7473b7ab51c510784a67432876ffdbe93a07098d4da52ec"
      },
      "downloads": -1,
      "filename": "quattro-22.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "1aaeed8b49fab1ba05c3835729b3125b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 10855,
      "upload_time": "2022-12-27T00:30:00",
      "upload_time_iso_8601": "2022-12-27T00:30:00.445255Z",
      "url": "https://files.pythonhosted.org/packages/cc/d2/dd69f4cb945560432f35a2917cec747f2830c819d514c9204f55c5d5a3e4/quattro-22.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}