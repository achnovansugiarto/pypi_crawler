{
  "info": {
    "author": "cpyberry",
    "author_email": "cpyberry222@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Natural Language :: Japanese",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# pybitfield\n\nA library that makes it easy to handle bitfield with python\n\n## Requirements\n\n* python 3.6, 3.7, 3.8, 3.9\n\n## Installation\n\n```shell\npip install pybitfield\n```\n\n## Usage\n\nWhen you construct a bitfield with 5 elements, do as follows.\n\nIn this case, information up to 5 bits can be stored.\n\nUnless otherwise specified, all bits are 0.\n\n```python\nfrom pybitfield import Bitfield, BitOrder\n\n\nnumber_of_element = 5\nbitfield = Bitfield(number_of_element)\n```\n\nIf you want to set the bit, do as follows.\n\nSince the index is zero based, the bitfield stored when running this code is `01111`.\n\nThis is the case for big endian.\n\n```python\nbitfield.set_bit(0)\nbitfield.set_bit(1)\nbitfield.set_bit(2)\nbitfield.set_bit(3)\n\n# Since the number of elements is 5 and the index is zero-based, a total of 5 index from 0 to 4 can be specified.\n# bitfield.set_bit(5)\n```\n\nThis code remove the 1st and 3rd bits.\n\nThis result is `00101`\n\n```python\nbitfield.remove_bit(1)\nbitfield.remove_bit(3)\n```\n\nYou can use `is_bit()` to make sure the bit is set.\n\n```python\nbitfield.is_bit(1)  # return False\nbitfield.is_bit(2)  # return True\n```\n\nIf you want to convert bitfield to list type, you can use `get_bit_list()`.\n\nThe index of bitfield and the index of list correspond.\n\n0 is converted to False, 1 is converted to True.\n\n```python\nbitfield.get_bit_list()\n\n# [True, False, True, False, False]\n```\n\nIf you want to reverse bitfield, you can use `swap_bitfield()`.\n\nThe argument represents the bit length.\n\nIf you call the method with no arguments, the number of elements in the bitfield is applied to the bit length of the return value.\n\n```python\nbitfield.swap_bitfield()\n# 20\n# 0b10100\n\nbitfield.swap_bitfield(8)\n# 160\n# 0b10100000\n\nbitfield.swap_bitfield(10)\n# 640\n# 0b1010000000\n```\n\nIf you want to convert bitfield to bytes type, you can use `get_bitfield_bytes()`.\n\nYou can use `BitOrder` enumerator class to specify the bit order.\n\nIf the number of elements in the bitfield is not a multiple of 8, the smallest byte length that can represent it will be applied.\n\nIn this case, the number of elements in the bitfield is 5, so the byte length of 1 is applied.\n\n```python\nbitfield.get_bitfield_bytes(BitOrder.big)\n# b'\\x05'\n# 0b00000101\n\nbitfield.get_bitfield_bytes(BitOrder.little)\n# b'\\xa0'\n# 0b10100000\n```\n\n## Founder\n\n* [cpyberry](https://github.com/cpyberry)\n\n\temail: cpyberry222@gmail.com\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/cpyberry/pybitfield",
    "keywords": "bitfield",
    "license": "Apache-2.0 License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pybitfield",
    "package_url": "https://pypi.org/project/pybitfield/",
    "platform": "",
    "project_url": "https://pypi.org/project/pybitfield/",
    "project_urls": {
      "Homepage": "https://github.com/cpyberry/pybitfield"
    },
    "release_url": "https://pypi.org/project/pybitfield/1.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A library that makes it easy to handle bitfields with python",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11624585,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7d370de31366b6211a78cdacb2ddd259b951749c9e2cf15c98819700c436a40a",
          "md5": "d1fdb9ce99d877e2ec2b02df167bc384",
          "sha256": "ed60099cb103ae366cd27ebd272beaa366399c4920b828f49033f501f30fe17c"
        },
        "downloads": -1,
        "filename": "pybitfield-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d1fdb9ce99d877e2ec2b02df167bc384",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8383,
        "upload_time": "2021-10-04T15:16:56",
        "upload_time_iso_8601": "2021-10-04T15:16:56.052957Z",
        "url": "https://files.pythonhosted.org/packages/7d/37/0de31366b6211a78cdacb2ddd259b951749c9e2cf15c98819700c436a40a/pybitfield-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1893456417360687bbd56c5c4f56639ae4aff9163ee7663fb9fbc674654d78f1",
          "md5": "8f85325506a1124cc22aa14d39268e84",
          "sha256": "4d38d08f5d3af55892705637c8fcea965e8cca95e6cc1b9f6fb7a2ef798b17ec"
        },
        "downloads": -1,
        "filename": "pybitfield-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8f85325506a1124cc22aa14d39268e84",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8875,
        "upload_time": "2021-10-04T15:16:57",
        "upload_time_iso_8601": "2021-10-04T15:16:57.637188Z",
        "url": "https://files.pythonhosted.org/packages/18/93/456417360687bbd56c5c4f56639ae4aff9163ee7663fb9fbc674654d78f1/pybitfield-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3f329f2d5360f6129fe2ddf3becb0d71adf4e469003e428f928b6a3ed8c573a3",
          "md5": "fa184ab7638e02a5dee32b6084cc2adc",
          "sha256": "9f0ea631bac0c89c18e0b8df57345fb4fa467b04f3109d6180bd9bb0818fe6b9"
        },
        "downloads": -1,
        "filename": "pybitfield-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fa184ab7638e02a5dee32b6084cc2adc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8423,
        "upload_time": "2021-10-04T15:50:52",
        "upload_time_iso_8601": "2021-10-04T15:50:52.040084Z",
        "url": "https://files.pythonhosted.org/packages/3f/32/9f2d5360f6129fe2ddf3becb0d71adf4e469003e428f928b6a3ed8c573a3/pybitfield-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3558ba3d9ced2f73c3e8f95d5ee79b9c3e70de73567dd06b3e94654344872c31",
          "md5": "c71b27164e0c9279a476072cff00d38a",
          "sha256": "0899c8cd8dc3d03c0288e337845d47f0eacf046de3af99c7f775a1fbe6f706cf"
        },
        "downloads": -1,
        "filename": "pybitfield-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c71b27164e0c9279a476072cff00d38a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9066,
        "upload_time": "2021-10-04T15:50:53",
        "upload_time_iso_8601": "2021-10-04T15:50:53.372884Z",
        "url": "https://files.pythonhosted.org/packages/35/58/ba3d9ced2f73c3e8f95d5ee79b9c3e70de73567dd06b3e94654344872c31/pybitfield-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3f329f2d5360f6129fe2ddf3becb0d71adf4e469003e428f928b6a3ed8c573a3",
        "md5": "fa184ab7638e02a5dee32b6084cc2adc",
        "sha256": "9f0ea631bac0c89c18e0b8df57345fb4fa467b04f3109d6180bd9bb0818fe6b9"
      },
      "downloads": -1,
      "filename": "pybitfield-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "fa184ab7638e02a5dee32b6084cc2adc",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 8423,
      "upload_time": "2021-10-04T15:50:52",
      "upload_time_iso_8601": "2021-10-04T15:50:52.040084Z",
      "url": "https://files.pythonhosted.org/packages/3f/32/9f2d5360f6129fe2ddf3becb0d71adf4e469003e428f928b6a3ed8c573a3/pybitfield-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3558ba3d9ced2f73c3e8f95d5ee79b9c3e70de73567dd06b3e94654344872c31",
        "md5": "c71b27164e0c9279a476072cff00d38a",
        "sha256": "0899c8cd8dc3d03c0288e337845d47f0eacf046de3af99c7f775a1fbe6f706cf"
      },
      "downloads": -1,
      "filename": "pybitfield-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "c71b27164e0c9279a476072cff00d38a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 9066,
      "upload_time": "2021-10-04T15:50:53",
      "upload_time_iso_8601": "2021-10-04T15:50:53.372884Z",
      "url": "https://files.pythonhosted.org/packages/35/58/ba3d9ced2f73c3e8f95d5ee79b9c3e70de73567dd06b3e94654344872c31/pybitfield-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}