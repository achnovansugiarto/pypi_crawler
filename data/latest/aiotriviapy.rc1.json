{
  "info": {
    "author": "Keegan Curran",
    "author_email": "mcurranseijo@mail.bradley.edu",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# triviapy\ntriviapy is an async API wrapper for [open trivia database](https://opentdb.com/) this is still a WIP but currently can return questions from specific or all categories and select the number you want to return.\n\n\n## Setup\n1. Make sure you have python installed\n2. Download the repository\n3. Make sure you have aiohttp installed\n4. Place the triviapy folder in your project folder and have fun.\n\n\n## Quick Start\n\n1. A:First import Game from triviapy and construct a Game object:\n```python\nfrom triviapy import Game\n\n\ngame = Game()\n```\n\n(optional) Set a game token, this will prevent repeat questions from occuring:\n```python\nawait game.gen_token()\n```\n\n2. To see the categories avaliable you can do ``game.categories()``, this returns the below array of category names and ID's,\nto use a category supply the number for the category you'd like questions from:\n```python\n[('General Knowledge', 9), ('Entertainment: Books', 10), ('Entertainment: Film', 11), ('Entertainment: Music', 12), ('Entertainment: Musicals & Theatres', 13), ('Entertainment: Television', 14), ('Entertainment: Video Games', 15), ('Entertainment: Board Games', 16), ('Science & Nature', 17), ('Science: Computers', 18), ('Science: Mathematics', 19), ('Mythology', 20), ('Sports', 21), ('Geography', 22), ('History', 23), ('Politics', 24), ('Art', 25), ('Celebrities', 26), ('Animals', 27), ('Vehicles', 28), ('Entertainment: Comics', 29), ('Science: Gadgets', 30), ('Entertainment: Japanese Anime & Manga', 31), ('Entertainment: Cartoon & Animations', 32)]\n```\n\n3. Create a round with question info, you can supply ``qty`` and ``category`` as ints to specify the number of questions and what category you want. It defaults to one question of any category and returns a ``Question`` object if only one if given or an array of them if multiple questions are requested.\n\n```python\n    # This will give 10 questions from the music category.\nround_example = game.round(quantity=10, category=12)\n\n# This will give one question from a random category\nround_2 = game.round()\n\n```\n\n4. Question objects hold all the info needed about a question including: question, category, answers, correct answer, and difficulty:\n```python\n    question = round_example[0]\n\n    question_str = question.question # Returns the question as a str\n    answers = question.answers # Returns a preshuffled array with the 4 multiple choice answer posibilities\n    answer = question.answer # Returns the str of the answer, this is included in the answers array as well in the same str format.\n    category = question.category # Returns the category of the question as a str\n    difficulty = question.difficulty # Returns the question difficulty (Easy, Medium or Hard)\n\n```\n\n5. Error Handling\n### Importing errors:\n```python\n    from triviapy.errors import TokenError, QuestionError, InvalidTokenError, CategoryError\n```\n\n### TokenError\nThis error will occur is ``game.token()`` is unable to set a token, this error may be caused by opentdb outages or other errors.\n\n### QuestionError\nThis error will occur if the number of questions exceeds that avaliable, when this occurs do ``await game.reset()`` to reuse questions.\n\n\n### InvalidTokenError\nThis error is raised due to an invalid or expired token, an api token will expire after 6 hours of no use. Do ``await game.gen_token``` to reset this.\n\n### CategoryError:\nThis error will occur if an invalid int is defined for a round category. To fix this double check what you are putting in.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mcurranseijo/triviapy",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aiotriviapy",
    "package_url": "https://pypi.org/project/aiotriviapy/",
    "platform": "",
    "project_url": "https://pypi.org/project/aiotriviapy/",
    "project_urls": {
      "Homepage": "https://github.com/mcurranseijo/triviapy"
    },
    "release_url": "https://pypi.org/project/aiotriviapy/1.0/",
    "requires_dist": [
      "aiohttp"
    ],
    "requires_python": "",
    "summary": "An aiohttp wrapper for OpenTDB",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12394143,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e3676c0e909e04f7fa3d39b1738fb444a7c546e85bc132cda111e0494e2c5e52",
          "md5": "18c7f7a999f608f9a89b1f20ef84f49c",
          "sha256": "716e0fbcd2e134a85af2af3727c1926bdc8d7e44f2efd39ba5ea6f7d6d10b4c4"
        },
        "downloads": -1,
        "filename": "aiotriviapy-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "18c7f7a999f608f9a89b1f20ef84f49c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5037,
        "upload_time": "2021-12-24T00:10:32",
        "upload_time_iso_8601": "2021-12-24T00:10:32.024426Z",
        "url": "https://files.pythonhosted.org/packages/e3/67/6c0e909e04f7fa3d39b1738fb444a7c546e85bc132cda111e0494e2c5e52/aiotriviapy-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70fe2feefb9a79da54df413ebcc7f1f1dd5fac6fa843b69bed715d4fded8fbfd",
          "md5": "ddb9d4dd19b529d3cb10d5c9deb98567",
          "sha256": "3c56aa3db115311f1d7d2823e1427a3fdf9ec9956d4b62717b2aab2212251877"
        },
        "downloads": -1,
        "filename": "aiotriviapy-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ddb9d4dd19b529d3cb10d5c9deb98567",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4035,
        "upload_time": "2021-12-24T00:10:33",
        "upload_time_iso_8601": "2021-12-24T00:10:33.782262Z",
        "url": "https://files.pythonhosted.org/packages/70/fe/2feefb9a79da54df413ebcc7f1f1dd5fac6fa843b69bed715d4fded8fbfd/aiotriviapy-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e3676c0e909e04f7fa3d39b1738fb444a7c546e85bc132cda111e0494e2c5e52",
        "md5": "18c7f7a999f608f9a89b1f20ef84f49c",
        "sha256": "716e0fbcd2e134a85af2af3727c1926bdc8d7e44f2efd39ba5ea6f7d6d10b4c4"
      },
      "downloads": -1,
      "filename": "aiotriviapy-1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "18c7f7a999f608f9a89b1f20ef84f49c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 5037,
      "upload_time": "2021-12-24T00:10:32",
      "upload_time_iso_8601": "2021-12-24T00:10:32.024426Z",
      "url": "https://files.pythonhosted.org/packages/e3/67/6c0e909e04f7fa3d39b1738fb444a7c546e85bc132cda111e0494e2c5e52/aiotriviapy-1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "70fe2feefb9a79da54df413ebcc7f1f1dd5fac6fa843b69bed715d4fded8fbfd",
        "md5": "ddb9d4dd19b529d3cb10d5c9deb98567",
        "sha256": "3c56aa3db115311f1d7d2823e1427a3fdf9ec9956d4b62717b2aab2212251877"
      },
      "downloads": -1,
      "filename": "aiotriviapy-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "ddb9d4dd19b529d3cb10d5c9deb98567",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4035,
      "upload_time": "2021-12-24T00:10:33",
      "upload_time_iso_8601": "2021-12-24T00:10:33.782262Z",
      "url": "https://files.pythonhosted.org/packages/70/fe/2feefb9a79da54df413ebcc7f1f1dd5fac6fa843b69bed715d4fded8fbfd/aiotriviapy-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}