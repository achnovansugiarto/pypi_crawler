{
  "info": {
    "author": "Jürgen Knauth",
    "author_email": "pubsrc@binary-overflow.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3"
    ],
    "description": "jk_console\n==========\n\nIntroduction\n------------\n\nThis python module provides a variety of essential functionality for implementing versatile programs using the console. This includes:\n\n* reading single key stokes from STDIN\n* modifying cursor color\n* retrieving the dimensions of the console\n* placeing the cursor at (almost) any position within the console\n\nInformation about this module can be found here:\n\n* [github.org](https://github.com/jkpubsrc/python-module-jk-console)\n* [pypi.python.org](https://pypi.python.org/pypi/jk_console)\n\nWhy this module?\n----------------\n\nIf you want to write some more sophisticated command line programs it will get complicated. Python does not provide any support for\nreading single key strokes, colorizing output as well as more detailed control of the cursor is nothing Python takes care of. This\nmodule fills the gap.\n\nLimitations of this module\n--------------------------\n\nSpecial keys like function keys, cursor keys and similar are communicated by console windows using escape codes. Whenever you press these\nkeys a sequence of characters is sent by the console.\n\nReading these kind of key strokes from console is therefore based on reading multiple keys. Unfortunately you cannot know how many keys are\nsent. Therefor you need to know how to interpret these sequences as they greatly differ in length.\n\nThe `Console` class contains a register of these sequences for common key strokes. Whenever such a key is read the class tries to parse it.\nIf a known keystroke is encountered it is returned as a complete string. This way `readKey()` will try to always return a single key - even\nif this key is represented by multiple characters.\n\nThat implies: The `Console` class needs to know about all these character sequences. That means: **All special keys this module should\nrecognize must be hard coded into this module.** Whenever a known sequence is encountered it can be read completely and be recognized\nas a single key stroke event. (And if the sequence is not known this mechanism will not work properly.)\n\nThis module has been adapted to recognize all common special keys a user could press in a standard Linux console window. This has been tested\non Ubuntu Linux. Please have in mind that this might differ from other platforms or even from other console implementations. At the moment\nof writing these lines I as the author of `Console` have no information about how well other platforms and terminal implementations follow\nthese standards. I have no possibility to test this on other platforms at this point in time. So if you encounter any difficulties or have\nmore information please contact me. I'll gladly extend this module.\n\nHow to use this module\n----------------------\n\n### Import this module\n\nPlease include this module into your application using the following code:\n\n```python\nfrom jk_console import Console\n```\n\n### Reading single key strokes\n\nIn order to read a single key stroke invoke the following command:\n\n```python\nkey = Console.Input.readKey()\n```\n\nThe variable `key` will then contain either a single character if a regular key or a set of characters if some specicial key has been pressed.\n\nPlease note that Ctrl+C is not catched by the application if you invoke `readKey()` but returned as a regular key stroke.\n\nPlease see *Limitations of this module* for information about when decoding key strokes might fail.\n\n### Converting key strokes to text\n\nIn order to get a human readable representation of a key stroke use the following code:\n\n```python\nkeyStr = Console.Input.ALL_KEYS_TO_KEY_NAME.get(key)\n```\n\n### Clearing the console screen\n\nYou can clear the current console screen by invoking the following method:\n\n```python\nConsole.clear()\n```\n\n### Move cursor to a specific position on the console screen\n\nYou can move the cursor to a specific line and column number in a console using the following code:\n\n```python\nConsole.moveCursorTo(lineNo, colNo)\n```\n\nPlease note that row and column numbers are **always** counted starting at zero. So `(0, 0)` specifies the upper left corner of the console.\n\n### Print text at a specific position on the console screen\n\nYou can print some text at a specific line and column number using the following code:\n\n```python\nConsole.printAt(lineNo, colNo, someText)\n```\n\nPlease note that row and column numbers are **always** counted starting at zero. So `(0, 0)` specifies the upper left corner of the console.\n\nPlease also note that this command will move the cursor as well. This implies that printing at the very end of a line will cause a wrap around\nand the cursor will be moved to the beginning of the next line. If that happens at the very last character of your console window this will\ncause the console to add a new line and thus scrolling all existing text one line upwards.\n\n### Get current cursor position\n\nIn order to retrieve the current cursor position invoke `getCursorPosition()`:\n\n```python\nlineNo, colNo = Console.getCursorPosition()\n```\n\nPlease note that row and column numbers are **always** counted starting at zero. So `(0, 0)` specifies the upper left corner of the console.\n\n### Get the size of the console\n\nIn order to retrieve the dimensions of your console view port invoke `getSize()` and/or `width()` and `height()`:\n\n```python\nheight, width = Console.getSize()\n```\n\n### Use color methods\n\nYou can perfom colorized output using the predefined constants for foreground and background.\n\nExample:\n\n```python\nprint(Console.ForeGround.CYAN + \"Hello World!\" + Console.RESET)\n```\n\nAlternatively you can invoke one of these color methods:\n\n* `rgb256(r, g, b)` - which will create a text string representing your color using `int` values in the range of [0..255]\n* `rgb1(r, g, b)` - which will create a text string representing your color using `float` values in the range of [0..1]\n* `hsl1(h, s, l)` - which will create a text string representing your color using `float` values in the range of [0..1]\n\nExample:\n\n```python\nprint(Console.BackGround.rgb256(128, 0, 0) + \"Hello World!\" + Console.RESET)\n```\nPlease note that the current color settings are valid for all future printing to the console.\n\n### Resetting color\n\nIn order to reset color settings use the folloiwing code:\n\n```python\nprint(Console.RESET)\n```\n\nContact Information\n-------------------\n\nThis is Open Source code. That not only gives you the possibility of freely using this code it also\nallows you to contribute. Feel free to contact the author(s) of this software listed below, either\nfor comments, collaboration requests, suggestions for improvement or reporting bugs:\n\n* Jürgen Knauth: jknauth@uni-goettingen.de, pubsrc@binary-overflow.de\n\nLicense\n-------\n\nThis software is provided under the following license:\n\n* Apache Software License 2.0",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "console,terminal,colors,stdin",
    "license": "Apache2",
    "maintainer": "",
    "maintainer_email": "",
    "name": "jk-console",
    "package_url": "https://pypi.org/project/jk-console/",
    "platform": null,
    "project_url": "https://pypi.org/project/jk-console/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/jk-console/0.2023.2.8/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "This python module provides a variety of essential functions for implementing versatile programs using the console. (Please have a look at the documentation for details.)",
    "version": "0.2023.2.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16757566,
  "releases": {
    "0.2019.1.22": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "716b8939801dc19d6a4d0d46b84c511f6f170fdc20c17a0476367dafa53013b4",
          "md5": "387bfab0ec127bf7c6e035d06f9126a4",
          "sha256": "b6f1267aedae3bcd5f15047867186e3bcd94058c8db3cacff26f69a926d256f8"
        },
        "downloads": -1,
        "filename": "jk_console-0.2019.1.22.tar.gz",
        "has_sig": false,
        "md5_digest": "387bfab0ec127bf7c6e035d06f9126a4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17472,
        "upload_time": "2019-01-23T06:39:39",
        "upload_time_iso_8601": "2019-01-23T06:39:39.600167Z",
        "url": "https://files.pythonhosted.org/packages/71/6b/8939801dc19d6a4d0d46b84c511f6f170fdc20c17a0476367dafa53013b4/jk_console-0.2019.1.22.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2019.10.11.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d0824f3cdacad1c7d574aecc4bb1d8b4e187f4a38cb844cf53fe9685df41dbe9",
          "md5": "1d6bb46d7a9aa806e1673bfff779882d",
          "sha256": "7abc84789ad2fc730b72ed7123e5345899dba84c5102aab0793c50037e851de2"
        },
        "downloads": -1,
        "filename": "jk_console-0.2019.10.11.6.tar.gz",
        "has_sig": false,
        "md5_digest": "1d6bb46d7a9aa806e1673bfff779882d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 31171,
        "upload_time": "2019-11-06T12:19:22",
        "upload_time_iso_8601": "2019-11-06T12:19:22.154543Z",
        "url": "https://files.pythonhosted.org/packages/d0/82/4f3cdacad1c7d574aecc4bb1d8b4e187f4a38cb844cf53fe9685df41dbe9/jk_console-0.2019.10.11.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2019.10.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "79c892004e7be0c0b44a94dbf7120335cbb0c538f40b486c95d63f00921a33da",
          "md5": "25abdccd46bb0a15e753e6d0f67bd1ea",
          "sha256": "718f00615f1c832b48232b547263b982b0a6b9593cb3de2f28e65a7614a3991a"
        },
        "downloads": -1,
        "filename": "jk_console-0.2019.10.7.tar.gz",
        "has_sig": false,
        "md5_digest": "25abdccd46bb0a15e753e6d0f67bd1ea",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 31184,
        "upload_time": "2019-10-07T12:56:58",
        "upload_time_iso_8601": "2019-10-07T12:56:58.054555Z",
        "url": "https://files.pythonhosted.org/packages/79/c8/92004e7be0c0b44a94dbf7120335cbb0c538f40b486c95d63f00921a33da/jk_console-0.2019.10.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2019.10.7.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3809a5c52be9fe923bdd06b9a095fe4e039c1b286c2a1ae696bb2e83085a1795",
          "md5": "99d8b8f1319056fab773a52d8b66d9a7",
          "sha256": "99f52879618ebb816763f543b3682b8ff7b269a6bced75f6b02305192fa5f8db"
        },
        "downloads": -1,
        "filename": "jk_console-0.2019.10.7.1.tar.gz",
        "has_sig": false,
        "md5_digest": "99d8b8f1319056fab773a52d8b66d9a7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 31137,
        "upload_time": "2019-10-07T13:28:34",
        "upload_time_iso_8601": "2019-10-07T13:28:34.211505Z",
        "url": "https://files.pythonhosted.org/packages/38/09/a5c52be9fe923bdd06b9a095fe4e039c1b286c2a1ae696bb2e83085a1795/jk_console-0.2019.10.7.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2019.11.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "794664b72dde09f6e8f9fd9c731acf066a00a7c8daf18dc58f29daa8ed82008f",
          "md5": "47ec2c713a643aa7f8f54241b910bead",
          "sha256": "f66b3b11ff0feb8f373c41aa5806cbb9fe638ace505965d117bf856497565a15"
        },
        "downloads": -1,
        "filename": "jk_console-0.2019.11.6.tar.gz",
        "has_sig": false,
        "md5_digest": "47ec2c713a643aa7f8f54241b910bead",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 31165,
        "upload_time": "2019-11-06T12:26:05",
        "upload_time_iso_8601": "2019-11-06T12:26:05.104038Z",
        "url": "https://files.pythonhosted.org/packages/79/46/64b72dde09f6e8f9fd9c731acf066a00a7c8daf18dc58f29daa8ed82008f/jk_console-0.2019.11.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2019.9.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ae47f4621eae495543dbf20ea2ccf5de996dd9fffc28bf4fa19e11d6fd1369b",
          "md5": "5e808dbfd75ad1781029fda424cda181",
          "sha256": "02a5372a9f29e1979ea7b9de52551f2f21734aef79ed637b56e25cdc688b3d8c"
        },
        "downloads": -1,
        "filename": "jk_console-0.2019.9.10.tar.gz",
        "has_sig": false,
        "md5_digest": "5e808dbfd75ad1781029fda424cda181",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29919,
        "upload_time": "2019-09-11T09:50:35",
        "upload_time_iso_8601": "2019-09-11T09:50:35.105446Z",
        "url": "https://files.pythonhosted.org/packages/0a/e4/7f4621eae495543dbf20ea2ccf5de996dd9fffc28bf4fa19e11d6fd1369b/jk_console-0.2019.9.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2020.3.19": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "caadfaa0e40e156abeded4af15489e11dcfdc3823a232e6f4723201135a21ad4",
          "md5": "c400b58f6c65eebf0d05a08e4439d3da",
          "sha256": "b407b6ae235e520ea59074c50ad07d8aa47ce96f6703a15a6153f5c5663d242b"
        },
        "downloads": -1,
        "filename": "jk_console-0.2020.3.19.tar.gz",
        "has_sig": false,
        "md5_digest": "c400b58f6c65eebf0d05a08e4439d3da",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 35710,
        "upload_time": "2020-03-19T04:17:19",
        "upload_time_iso_8601": "2020-03-19T04:17:19.659639Z",
        "url": "https://files.pythonhosted.org/packages/ca/ad/faa0e40e156abeded4af15489e11dcfdc3823a232e6f4723201135a21ad4/jk_console-0.2020.3.19.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2020.3.20": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "56f377479d16b30a398ec20d11c257cd69fa610e1a02c59b6aa96a5fc332394e",
          "md5": "684350186bf7087728abb2decafc3a94",
          "sha256": "241855f69b12af2ff571a1265e2851e839e55e23edd025b92226b2b43835201d"
        },
        "downloads": -1,
        "filename": "jk_console-0.2020.3.20.tar.gz",
        "has_sig": false,
        "md5_digest": "684350186bf7087728abb2decafc3a94",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 35743,
        "upload_time": "2020-03-20T12:38:23",
        "upload_time_iso_8601": "2020-03-20T12:38:23.824497Z",
        "url": "https://files.pythonhosted.org/packages/56/f3/77479d16b30a398ec20d11c257cd69fa610e1a02c59b6aa96a5fc332394e/jk_console-0.2020.3.20.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2023.2.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "86c2a26d65f9368df52afc82919c1631e39e3f54fe1061fd82c421f9cbc060c9",
          "md5": "c5e77a0e39edd342930397d6a7ee9aa8",
          "sha256": "0a17e2565c9bf6aaf1bf2fd30dbda9cf110d2f81163b620e4782fb39287ec034"
        },
        "downloads": -1,
        "filename": "jk_console-0.2023.2.8.tar.gz",
        "has_sig": false,
        "md5_digest": "c5e77a0e39edd342930397d6a7ee9aa8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 39064,
        "upload_time": "2023-02-08T22:03:13",
        "upload_time_iso_8601": "2023-02-08T22:03:13.944233Z",
        "url": "https://files.pythonhosted.org/packages/86/c2/a26d65f9368df52afc82919c1631e39e3f54fe1061fd82c421f9cbc060c9/jk_console-0.2023.2.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "86c2a26d65f9368df52afc82919c1631e39e3f54fe1061fd82c421f9cbc060c9",
        "md5": "c5e77a0e39edd342930397d6a7ee9aa8",
        "sha256": "0a17e2565c9bf6aaf1bf2fd30dbda9cf110d2f81163b620e4782fb39287ec034"
      },
      "downloads": -1,
      "filename": "jk_console-0.2023.2.8.tar.gz",
      "has_sig": false,
      "md5_digest": "c5e77a0e39edd342930397d6a7ee9aa8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 39064,
      "upload_time": "2023-02-08T22:03:13",
      "upload_time_iso_8601": "2023-02-08T22:03:13.944233Z",
      "url": "https://files.pythonhosted.org/packages/86/c2/a26d65f9368df52afc82919c1631e39e3f54fe1061fd82c421f9cbc060c9/jk_console-0.2023.2.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}