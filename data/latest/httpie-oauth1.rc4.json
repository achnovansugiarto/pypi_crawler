{
  "info": {
    "author": "Hoylen Sue",
    "author_email": "hoylen@hoylen.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Plugins",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Utilities"
    ],
    "description": "httpie-oauth1\n#############\n\nAuthentication plugin for `HTTPie <https://httpie.org/>`_ to support\n**OAuth 1.0a**.  HTTPie is a Python command line program that makes\nHyperText Transfer Protocol (HTTP) requests. Plugins allow it to use\ndifferent authentication protocols.\n\n**Note:** OAuth 1.0a is very different to OAuth 2.0. This plugin\ndoes **not** support OAuth 2.0.\n\nThis plugin supports all the standard *signature methods* in OAuth\n1.0a (as defined by `RFC 5849 <https://tools.ietf.org/html/rfc5849>`_):\n\n* HMAC-SHA1\n* RSA-SHA1\n* PLAINTEXT\n\nIt also supports non-standard *signature methods*, that replaces SHA-1\nwith more secure hashing algorithms:\n\n* HMAC-SHA256\n* HMAC-SHA512\n* RSA-SHA256\n* RSA-SHA512\n\nThis plugin supports **two-legged OAuth 1.0a** with all the available\n*signature methods*.\n\nThis plugin can be used to support **three-legged OAuth 1.0a** with\nthe PLAINTEXT and HMAC-based *signature methods*, if some values are\nmanually copied between the different requests.\n\n************\nInstallation\n************\n\nStandard install without RSA\n============================\n\nA standard install has all the HMAC-based and PLAINTEXT *signature\nmethods*, but does **not** have any of the RSA-based *signature methods*.\n\n.. code-block:: bash\n\n    $ pip install httpie-oauth1\n\nSince *httpie-oauth1* depends on *httpie*, this also installs *httpie*\nif it has not already been installed.\n\nRun ``http --help`` and (under the \"Authentication\" section) the OAuth\n1.0a authentication mechanisms (e.g. \"oauth1-hmac-sha1\") will be\navailable for the ``--auth-type``.\n\n\nInstall with extras for RSA\n===========================\n\nTo include support for the RSA-based *signature methods*, install it\nwith the \"rsa\" extras:\n\n.. code-block:: bash\n\n    $ pip install 'httpie-oauth1[rsa]'\n\nThat installs the standard install, plus the Python packages needed to\nsupport the RSA cryptographic algorithms: PyCA's *cryptography*\npackage and the *PyJWT* package. If the RSA-based *signature methods*\nare not needed it may be easier to use the standard install, since\nthere can be problems installing the cryptography package on some\nsystems.\n\nNote: the quotes are necessary in some shells, because square brackets\nare special characters.\n\nRun ``http --help`` and (under the \"Authentication\" section) the\nRSA-based OAuth 1.0a authentication mechanisms (e.g \"oauth1-rsa-sha1\")\nwill be available for the ``--auth-type``.\n\n\n*****\nUsage\n*****\n\nNote: The \"client identifier\" is what OAuth 1.0a calls the\n\"client key\" or \"consumer key\". But this document calls it the \"client ID\" to\navoid confusing it with the RSA public or private keys. The client identifier\nis a string value that identifies the client: like a username does.\n\nHMAC-SHA1\n=========\n\nTo use the HMAC-SHA1 *signature method*, for the ``--auth-type``\nargument use ``oauth1-hmac-sha1``.\n\nThe argument to ``--auth`` can be just the *client identifier*, and it\nwill prompt for the *client secret*.\n\nThe argument to ``--auth`` can also be the *client identifier*, a\ncolon, a less-than sign, and the name of a file to read the *client\nsecret* from.\n\n.. code-block:: bash\n\n    $ http --auth-type oauth1-hmac-sha1 --auth clientId ...\n\n    $ http --auth-type oauth1-hmac-sha1 --auth 'clientId:<secretsFilename' ...\n\nNote: the quotes are necessary, because the shell treats the less-than\nsign as a special character.\n\nThe value can also just have the *client secret* after the colon (when\nthere is no less-than sign). But this is not recommended, because\nputting passwords on the command line is insecure.\n\n.. code-block:: bash\n\n    $ http --auth-type oauth1-hmac-sha1 --auth clientId:clientSecret ...\n\nSee the `Advanced auth options`_ section for more ways to use the auth\nargument.\n\nRSA-SHA1\n========\n\nTo use the RSA-SHA1 signature method, for the ``--auth-type`` argument use\n``oauth1-rsa-sha1``, and for the ``--auth`` argument provide the client\nidentifier, followed by a colon, and followed by the name of a file containing\nthe RSA private key. The file must contain a PEM formatted RSA private key.\n\n.. code-block:: bash\n\n    $ http --auth-type oauth1-rsa-sha1 --auth clientId:filename ...\n\nThe filename can be a relative or absolute path to the file.\n\nPassphrase protected private keys are not supported.\n\nIncluding the client key in the private key file\n------------------------------------------------\n\nThe preamble of the private key file can contain the *client\nidentifier*. This makes HTTPie easier to use, since the command line\nonly needs the filename.\n\nTo use this approach, the ``--auth`` argument is just the private key\nfile name.\n\nThe ``oauth_consumer_key`` parameter from the preamble, before the PEM\nencoded private key, will be the client ID.\n\nFor example, if the private key file contains something like this:\n\n::\n\n    oauth_consumer_key: myconsumerkey\n    -----BEGIN RSA PRIVATE KEY-----\n    ...\n    -----END RSA PRIVATE KEY-----\n\nUse it with this command:\n\n.. code-block:: bash\n\n    $ http --auth-type oauth1-rsa-sha1 --auth filename ...\n\nPLAINTEXT\n=========\n\nTo use the PLAINTEXT signature method, for the ``--auth-type``\nargument use ``oauth1-plaintext``\n\nThe ``--auth`` argument is the same as the HMAC--based signature\nmethods, and also supports the same `advanced auth options`_.\n\n.. code-block:: bash\n\n    $ http --auth-type oauth1-plaintext --auth clientId ...\n\n    $ http --auth-type oauth1-plaintext --auth 'clientId:<secretsFilename' ...\n\nOther signature methods\n=======================\n\nThe other signature methods work in the same way as HMAC-SHA1 and\nRSA-SHA1, but using these arguments for the ``--auth-type`` option:\n\n- ``oauth-hmac-sha256`` for HMAC-SHA256\n- ``oauth-hmac-sha512`` for HMAC-SHA512\n- ``oauth-rsa-sha256`` for RSA-SHA256\n- ``oauth-rsa-sha512`` for RSA-SHA512\n\nAdvanced auth options\n=====================\n\nThe HMAC-based and PLAINTEXT signature methods supports many\nproperties with the ``--auth`` argument. It can specify\nthese values to the request:\n\n* client identifier\n* client secret\n* resource owner identifier\n* resource owner secret\n* callback URI\n* parameter transmission mechanism\n\nThe argument processed as components separated by colons. It can have\nbetween 1 to 4 components: identity, secrets, callback and type.  Components\npopulate the left-most value first.\n\nThe identity component contains either just the *client identifier*,\nor a *client identifier* and *resource owner identifier* separated by\na semicolon. In the protocol, they appear as the\n``oauth_consumer_key`` and ``oauth_token`` parameters.\n\nThe secrets component contains either just the *client secret*,\na *client secret* and *resource owner secret* separated by a semicolon,\nor a less-than sign followed by the name of a file to read the secret(s)\nfrom.\n\nThe callback URI, if it is not the empty string, appears in the\nprotocol in the ``oauth_callback`` parameter. The callback URI\ncomponent ends at the last colon (or the end of the value), rather\nthan at the third colon. This allow the callback URI to contain\ncolons, which all URIs do.\n\nThe parameter transmission mechanism indicates where the OAuth 1.0a\nparameters appear in the request:\n\n* \"query\" means in the URI query parameters;\n* \"body\" means in the HTTP body; or\n* \"header\" means in hthe HTTP \"Authorization\" header.\n\nThe header is the default, if the parameter transmission mechanism is\nnot provided.\n\nThe header is also the default, if the value does not match any of the\nknown values. In this situation, the value (and the preceding colon)\nwill be a part of the callback URI.\n\nExamples\n--------\n\nExamples ``--auth`` arguments:\n\n.. code-block:: bash\n\n    --auth clientId\n    --auth 'clientId:<secretsFilename'\n    --auth clientId:clientSecret\n    --auth 'clientId;resourceOwnerId'\n    --auth 'clientId;resourceOwnerId:clientSecret;resourceOwnerSecret'\n    --auth 'clientId:<secretsFilename:https://example.com/callback'\n    --auth clientId:clientSecret:https://example.com/callback\n    --auth clientId:clientSecret:https://example.com/callback:header\n    --auth clientId:clientSecret:https://example.com/callback:query\n    --auth clientId:clientSecret:https://example.com/callback:body\n    --auth clientId:clientSecret:https://example.com/callback:body:body\n    --auth clientId:clientSecret:https://example.com/callback:thisIsPartOfTheCallback\n    --auth clientId::https://example.com/callback\n    --auth clientId::https://example.com/callback:body\n    --auth clientId:clientSecret::body\n    --auth clientId:::body\n    --auth 'clientId;rsrcID:cSec;rsrcSec:https://example.com/callback:body'\n    --auth 'clientId;rsrcID:<secretsFilename:https://example.com/callback:body'\n\nSecrets file\n------------\n\nThe first suitable line in the secrets file will be either the *client\nsecret*, or the *client secret* and the *resource owner secret*\nseparated by a semicolon.\n\nWhen searching for the first suitable line, it ignores empty lines and\nlines with only whitespace.  Lines starting with a hash (\"#\"), with\noptional whitespace before it, are also ignored.\n\nExample secrets file:\n\n.. code-block::\n\n    # My secrets file\n    # Using a secrets file is secure and convenient\n        # the secrets don't appear on the command line; and\n        # it doesn't have to be interactively entered.\n\n    clientSecret;resourceOwnerSecret\n\nKnown limitations\n-----------------\n\n- *client identities*, *resource owner identities*, *client secrets*\n  and *resource owner secrets* cannot contain colons or semicolons,\n  and cannot start with or end with whitespace.\n\n- *client secrets* on the command line cannot start with a less-than sign.\n\n- UTF-8 is the encoding for the secrets file.\n\n*******\nHistory\n*******\n\nThis plugin is a fork of the\n`httpie-oauth <https://pypi.org/project/httpie-oauth/>`_ plugin,\nwhich is no longer being maintained.\n\n***************\nTroubleshooting\n***************\n\nModuleNotFoundError: No module named 'jwt'\n==========================================\n\nThe `PyJWT <https://github.com/jpadilla/pyjwt>`_ module is not installed.\n\nThis *httpie-oauth1* package depends on the *oauthlib* package, which\nhas *pyjwt* (and *cryptography*) as optional extra dependencies. They\nare optional, since they are not needed for HMAC-based signatures. But\nRSA-based signatures needs them.  Manually install the ``pyjwt``\nPython package.\n\nNote: the name of the package to install is \"pyjwt\", not \"jwt\". They\nboth contain a module called \"jwt\", but they are very different\nimplementations.\n\n.. code-block:: bash\n\n    $ pip install pyjwt\n\nModuleNotFoundError: No module named 'jwt.algorithms'\n=====================================================\n\nIt is trying to use the \"jwt\" package, which is the wrong package.\n\nUninstall it and install the \"pyjwt\" package:\n\n.. code-block:: bash\n\n    $ pip uninstall jwt  # uninstall the wrong implementation of JWT\n    $ pip install pyjwt  # install the correct implementation of JWT\n\nAttributeError: module 'jwt.algorithms' has no attribute 'RSAAlgorithm'\n=======================================================================\n\nPyCA's `cryptography <https://cryptography.io/>`_ module is not installed.\n\nSee comment in the error about a missing \"jwt\" module.\n\n.. code-block:: bash\n\n    $ pip install cryptography\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "https://github.com/qcif/httpie-oauth1",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/qcif/httpie-oauth1",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "httpie-oauth1",
    "package_url": "https://pypi.org/project/httpie-oauth1/",
    "platform": null,
    "project_url": "https://pypi.org/project/httpie-oauth1/",
    "project_urls": {
      "Bug Tracker": "https://github.com/qcif/httpie-oauth1/issues",
      "Download": "https://github.com/qcif/httpie-oauth1",
      "Homepage": "https://github.com/qcif/httpie-oauth1"
    },
    "release_url": "https://pypi.org/project/httpie-oauth1/1.2.3/",
    "requires_dist": null,
    "requires_python": ">=3.6.0",
    "summary": "OAuth 1.0a authentication plugin for HTTPie.",
    "version": "1.2.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13447270,
  "releases": {
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9c48375e05a9e19244ce32be38f4fdeb6a8c0528bf51763d34de599395764dda",
          "md5": "34f94cb836d0cb9abae2aeb337b4ac3f",
          "sha256": "5d01c952bb15b94cafc7b96177633107f2ac9984b0eb9ae1008f1e51bce71ea6"
        },
        "downloads": -1,
        "filename": "httpie-oauth1-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "34f94cb836d0cb9abae2aeb337b4ac3f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.6.0",
        "size": 13280,
        "upload_time": "2022-02-24T12:31:08",
        "upload_time_iso_8601": "2022-02-24T12:31:08.004900Z",
        "url": "https://files.pythonhosted.org/packages/9c/48/375e05a9e19244ce32be38f4fdeb6a8c0528bf51763d34de599395764dda/httpie-oauth1-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "63de324216971f5aa37fa26fc4d52125458ba537252d7c887d733ed68acb37c9",
          "md5": "d84da2e53a4f4eebd08fb9019fee5455",
          "sha256": "cc3484edc2a61f567317494f52ec43779aa34cc370a94142b7b7b060935f7e6b"
        },
        "downloads": -1,
        "filename": "httpie-oauth1-1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d84da2e53a4f4eebd08fb9019fee5455",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.6.0",
        "size": 13788,
        "upload_time": "2022-02-24T12:44:51",
        "upload_time_iso_8601": "2022-02-24T12:44:51.511380Z",
        "url": "https://files.pythonhosted.org/packages/63/de/324216971f5aa37fa26fc4d52125458ba537252d7c887d733ed68acb37c9/httpie-oauth1-1.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c25dcb3f05f8cb257f711196c40079dfdb25714d2aa110b5c74aa295986badd1",
          "md5": "b75b73fc1ea7bd7b523cedc66e253922",
          "sha256": "76e2139e1130d76a2b7e7d6a8ad8ffd3daa673039f819f063a796885ab25e797"
        },
        "downloads": -1,
        "filename": "httpie-oauth1-1.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b75b73fc1ea7bd7b523cedc66e253922",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.6.0",
        "size": 13778,
        "upload_time": "2022-02-25T02:12:38",
        "upload_time_iso_8601": "2022-02-25T02:12:38.262182Z",
        "url": "https://files.pythonhosted.org/packages/c2/5d/cb3f05f8cb257f711196c40079dfdb25714d2aa110b5c74aa295986badd1/httpie-oauth1-1.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f3f51ea73209e5507320f4971765a2ff5e818be29806ae354e4e327ebcf15594",
          "md5": "c9a0bcdb6dcd515dcbfff4eff37bc8c0",
          "sha256": "03627e65b9e939a90697e8df29b8d0591da7b6d2a756a7e2c40eccdec5133d98"
        },
        "downloads": -1,
        "filename": "httpie-oauth1-1.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "c9a0bcdb6dcd515dcbfff4eff37bc8c0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 13811,
        "upload_time": "2022-03-08T11:01:46",
        "upload_time_iso_8601": "2022-03-08T11:01:46.160820Z",
        "url": "https://files.pythonhosted.org/packages/f3/f5/1ea73209e5507320f4971765a2ff5e818be29806ae354e4e327ebcf15594/httpie-oauth1-1.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f3f51ea73209e5507320f4971765a2ff5e818be29806ae354e4e327ebcf15594",
        "md5": "c9a0bcdb6dcd515dcbfff4eff37bc8c0",
        "sha256": "03627e65b9e939a90697e8df29b8d0591da7b6d2a756a7e2c40eccdec5133d98"
      },
      "downloads": -1,
      "filename": "httpie-oauth1-1.2.3.tar.gz",
      "has_sig": false,
      "md5_digest": "c9a0bcdb6dcd515dcbfff4eff37bc8c0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.0",
      "size": 13811,
      "upload_time": "2022-03-08T11:01:46",
      "upload_time_iso_8601": "2022-03-08T11:01:46.160820Z",
      "url": "https://files.pythonhosted.org/packages/f3/f5/1ea73209e5507320f4971765a2ff5e818be29806ae354e4e327ebcf15594/httpie-oauth1-1.2.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}