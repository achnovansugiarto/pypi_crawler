{
  "info": {
    "author": "Ritvik Nag",
    "author_email": "rv.kvetch@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "==========================\nWystia - Wistia API Helper\n==========================\n\n\n.. image:: https://img.shields.io/pypi/v/wystia.svg\n        :target: https://pypi.org/project/wystia/\n\n.. image:: https://img.shields.io/pypi/l/wystia.svg\n        :target: https://pypi.org/project/wystia/\n\n.. image:: https://img.shields.io/pypi/pyversions/wystia.svg\n        :target: https://pypi.org/project/wystia\n\n.. image:: https://github.com/rnag/wystia/actions/workflows/dev.yml/badge.svg\n        :target: https://github.com/rnag/wystia/actions/workflows/dev.yml\n\n.. image:: https://readthedocs.org/projects/wystia/badge/?version=latest\n        :target: https://wystia.readthedocs.io/en/latest/?version=latest\n        :alt: Documentation Status\n\n\n.. image:: https://pyup.io/repos/github/rnag/wystia/shield.svg\n     :target: https://pyup.io/repos/github/rnag/wystia/\n     :alt: Updates\n\n\n\nA Python wrapper library for the Wistia API\n\n\n* Free software: MIT license\n* Documentation: https://wystia.readthedocs.io.\n* Wistia Developer Docs: https://wistia.com/support/developers.\n\nInstallation\n------------\n\nThe Wystia library is available `on PyPI`_, and can be installed with ``pip``:\n\n.. code-block:: shell\n\n    $ pip install wystia\n\nYou'll also need to create an access token as outlined `in the docs`_.\n\nUsage\n-----\n\nSample usage with the `Data API <https://wistia.com/support/developers/data-api>`_:\n\n    Note: The following example makes use of ``WistiaApi``, which is an alias to\n    the class ``WistiaDataApi``.\n\n.. code-block:: python3\n\n    from wystia import WistiaApi\n    from wystia.models import SortBy, LanguageCode, Customizations, Private\n\n    # Setup the Wistia API token to use for requests. You can alternatively\n    # set this via the env variable 'WISTIA_API_TOKEN'.\n    WistiaApi.configure('MY-TOKEN')\n\n    # Retrieve a list of all projects in the Wistia account,\n    # sorted A-Z and in ascending order.\n    projects = WistiaApi.list_all_projects(SortBy.NAME)\n    project_ids = [p.hashed_id for p in projects]\n    # Print the project data as a prettified JSON string\n    print(projects.prettify())\n\n    # Retrieve a list of videos for a Wistia project.\n    # Note: If you don't require asset info (such as ADs) on each\n    #   video, I suggest calling `list_project` instead.\n    videos = WistiaApi.list_videos('project-id')\n\n    # Retrieve info on a particular video\n    vd = WistiaApi.get_video('video-id')\n    # If the video has captions, that won't be included in the `Medias#show`\n    # response by default, so we'll need a separate API call as below.\n    # vd.process_captions(\n    #     WistiaApi.list_captions(real_video_id))\n    print(vd)\n\n    # Update attributes on a media (video), or set a custom thumbnail on the video.\n    WistiaApi.update_video(\n        'video-id',\n        thumbnail_media_id='uploaded-thumbnail-id'\n    )\n\n    # Get aggregated stats for a video, such as view count\n    stats = WistiaApi.get_stats_for_video('video-id')\n\n    # Retrieve the customization data for a video\n    customizations = WistiaApi.get_customizations('video-id')\n\n    # Update only specific customizations for a video\n    # Note the embed options are documented here:\n    #   https://wistia.com/support/developers/embed-options\n    sample_embed_options = Customizations(\n        player_color='#e7fad1',\n        # Hide comments on the media page\n        private=Private(show_comments=False)\n    )\n    WistiaApi.update_customizations('video-id', sample_embed_options)\n\n    # Get the Spanish captions on a video\n    captions = WistiaApi.get_captions('video-id', LanguageCode.SPANISH)\n\n    # Add (or replace) the English captions on a video\n    WistiaApi.update_captions(\n        'video-id',\n        LanguageCode.ENGLISH,\n        srt_file='path/to/file.srt'\n    )\n\n\n... or to upload media via the `Upload API <https://wistia.com/support/developers/upload-api>`_:\n\n.. code-block:: python3\n\n    from wystia import WistiaUploadApi\n\n    # Upload a file to a (default) project on Wistia\n    r = WistiaUploadApi.upload_file('path/to/my-file.mp4')\n    # Check if the video was successfully uploaded\n    # assert r.created\n    # assert r.name == 'my-file.mp4'\n\n    # Uploads with a public link to a video, such as\n    # an S3 pre-signed url.\n    r = WistiaUploadApi.upload_link('my-s3-link',\n                                    title='My Video Name',\n                                    description='My Description')\n\n... you can alternatively retrieve asset info via the public Media Embed link:\n\n.. code-block:: python3\n\n    from wystia import WistiaEmbedApi\n\n    # Get the media embed data\n    embed_data = WistiaEmbedApi.get_data('video-id')\n\n    # Retrieve the source URL of the original media\n    source_url = WistiaEmbedApi.asset_url(media_data=embed_data)\n\n... when using the *Data API*, the ``WistiaHelper`` can help to further simplify some calls:\n\n.. code-block:: python3\n\n    from wystia import WistiaHelper\n\n    # Check if the video exists in your Wistia account\n    assert WistiaHelper.video_exists('abc1234567')\n\n    # Check if a video's name indicates the video is an archived copy of an\n    # existing video, as discussed in the below article on replacing a media:\n    #   https://wistia.com/learn/product-updates/improved-library-management-tools\n    assert WistiaHelper.is_archived_video(\n        'My Title [Archived on August 13, 2015]')\n\n    # Update the player color on a video\n    WistiaHelper.customize_video_on_wistia('video-id', 'ffffcc')\n\n    # Individually enable captions / AD in the player for a video\n    WistiaHelper.enable_ad('video-id')\n    WistiaHelper.enable_captions('video-id', on_by_default=False)\n\n    # Disable captions / AD in the player for a video\n    if WistiaHelper.has_captions_enabled('video-id'):\n        print('Disabling captions and AD for the video')\n        WistiaHelper.disable_captions_and_ad('video-id')\n\nGetting Started\n---------------\n\nUsing the methods on the API classes assume your Wistia API token\nhas previously been configured, for example via the environment. The API token will\nthen be used globally by all the API classes when making requests to the Wistia API.\n\nYou can set the following environment variable with your API token:\n\n* ``WISTIA_API_TOKEN``\n\nAnother option is to use the global ``configure`` method as shown below:\n\n.. code-block:: python3\n\n    WistiaDataApi.configure('MY-API-TOKEN')\n\nThere is additionally a `Quickstart`_ section in the docs which walks\nthrough - in more detail - how to get up and running with the\nWystia library.\n\nData API\n--------\n\nThe wrapper class ``WistiaDataApi`` (aliased to ``WistiaApi``) interacts\nwith the Wistia Data API (docs below):\n\n- https://wistia.com/support/developers/data-api\n\n\nIt fully implements the following sections in the API documentation:\n\n    - Paging and Sorting Responses\n    - Projects\n    - Medias\n    - Customizations\n    - Captions\n\nThe following sections in the API have *not* been implemented (mainly as I haven't used them before):\n\n    - Project Sharings\n    - Account\n\n\nTips\n~~~~\n\nContainers\n==========\n\nIn general, the API methods that begin with *list* - such as ``list_project`` -\nwill return a `Container`_ object, which essentially acts as a thin wrapper\naround a collection of model classes. For all intents and purposes, this behaves\nexactly the same as a ``list`` object.\n\nOne of the main benefits is that it implements a ``__str__`` method, which leverages\nthe builtin ``pprint`` module in Python to pretty-print the Python object representation\nof each model or *dataclass* instance; this will format the output more nicely, for example\nwhenever ``print(obj)`` is called on the `Container` result.\n\nThe ``Container`` objects also implement the following convenience methods, which can\nbe used to easily display the JSON string representation of the list of dataclass instances:\n\n    * ``to_json`` - Convert the list of instances to a JSON string.\n\n    * ``prettify`` - Convert the list of instances to a *prettified* JSON string.\n\nList Medias in a Project\n========================\n\nIf you need to retrieve info on videos in a project and you\ndon't need complete info such as a list of assets for the video,\nI recommend using ``list_project`` instead of ``list_videos``. This is because\nthe `Projects#show <https://wistia.com/support/developers/data-api#projects_show>`_\nAPI returns up to 500 results per request, whereas the ``Medias#list``\nonly returns the default 100 results per page.\n\nAssuming a project in your Wistia account has a total of about 250 media, here is the number of API\ncalls you might expect from each individual approach:\n\n.. code-block:: python3\n\n    from wystia import WistiaDataApi\n\n    videos = WistiaDataApi.list_videos('project-id')\n    assert WistiaDataApi.request_count() == 3\n\n    # Resets request count for the next call\n    WistiaDataApi.reset_request_count()\n\n    videos = WistiaDataApi.list_project('project-id')\n    assert WistiaDataApi.request_count() == 1\n\n\nThread Safety\n-------------\n\nThe Wistia API classes are completely thread safe, since ``requests.Session``\nobjects are not re-used between API calls.\n\nThis means that if you have two (un-related) API operations to perform,\nsuch as updating a video's title and adding captions on the video,\nthen you can certainly run those calls in parallel so that\nthey complete a bit faster.\n\n\nCredits\n-------\n\nThis package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.\n\n.. _on PyPI: https://pypi.org/project/wystia/\n.. _in the docs: https://wistia.com/support/developers/data-api#creating-and-managing-access-tokens\n.. _Container: https://dataclass-wizard.readthedocs.io/en/latest/dataclass_wizard.html?highlight=container#dataclass_wizard.Container\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage\n.. _Quickstart: https://wystia.readthedocs.io/en/latest/quickstart.html\n\n\n=======\nHistory\n=======\n\n1.1.0 (2022-01-27)\n------------------\n\n* Refactor any model classes that would be returned in *list* API\n  calls to subclass from ``JSONListWizard`` instead of ``JSONWizard``,\n  simply so that ``Container`` objects will be returned by default.\n\n* Refactor to import ``Container`` from the ``dataclass-wizard`` library\n  instead. For backwards compatibility reasons, the ``models`` module\n  still exports the *Container* namespace.\n\n1.0.0 (2022-01-14)\n------------------\n\n**Breaking Changes**\n\n* Wystia has officially dropped support for Python versions 3.5 and 3.6.\n  The support for 3.6 needed to be dropped primarily because of the\n  ``from __future__ import annotations`` usage in the code.\n* Refactored all API helper classes to return model class objects as a result,\n  rather than Python ``dict`` objects. In the case of any `list`- related API responses,\n  we now return a ``Container`` object so that it can be easier to print or display\n  the result for debugging purposes.\n* All inputs to the API helper methods that previously accepted a ``dict`` object,\n  have in general been refactored to accept a model dataclass instance as an input instead.\n* Renamed some error classes; for example, ``NoSuchMedia`` instead of ``NoSuchVideo``.\n* Renamed some model classes; for example, ``MediaStatus`` instead of ``VideoStatus``.\n\n**Features and Improvements**\n\n* Added ``WistiaApi`` to the list of public exports, which is aliased to the\n  ``WistiaDataApi`` helper class.\n* Added new methods to the ``WistiaDataApi`` class for more explicitly\n  interacting with *medias* instead of *videos*. For example, a ``list_medias``\n  method is added as an alternative to calling ``list_videos``.\n* Refactored the CI process to use GitHub Workflows instead of Travis CI.\n* Added *3.10* to the list of supported Python versions.\n* Updated the project status from *Beta* to *Production/Stable*.\n* Added an ``examples/`` folder in the project repo on GitHub, which\n  contains Python scripts to demonstrate sample usage.\n* Updated docs and added a new *Quickstart* section.\n\n0.3.0 (2021-07-21)\n------------------\n\n**Features and Improvements**\n\n* Add compatibility changes to extend support to Python 3.5 and 3.6\n* WistiaHelper: Add method ``project_details`` to retrieve info on a particular Wistia project\n* WistiaEmbedApi: Update to parse the ``.json`` response rather than the ``.jsonp`` version\n* Makefile: Add new command ``init``, which can be used to install Dev dependencies for the project\n\n  * Ensure the new command is compatible with Python 3.5, which has dependencies on separate\n    package versions; here we should use ``requirements-py35-dev.txt`` instead.\n* Makefile: Update ``coverage`` command to run unit tests by default\n\n**Bugfixes**\n\n* models.VideoData: The parameter to the ``process_captions`` method is now\n  correctly type-annotated to accept a ``List`` of ``Dict``\n\n0.2.1 (2021-06-17)\n------------------\n\n* WistiaHelper: Add method ``enable_captions_and_ad``\n* Remove ``.format`` usage in log statements\n* Remove an unnecessary method ``ad_needed`` from ``VideoData``\n* Update readme and Sphinx ``docs/``\n\n0.2.0 (2021-06-16)\n------------------\n\n* Fully implement all sections in the Wistia Data API\n* Add more methods to the ``WistiaHelper`` class\n* Request Count and API Token should now be globally shared by all API sub-classes\n* Lot of code refactoring\n* Exclude ``.mp4`` files from dist, to reduce total package size\n* Add more test cases\n* Update docs with better examples\n\n0.1.0 (2021-06-12)\n------------------\n\n* First release on PyPI.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/rnag/wystia",
    "keywords": "wistia,wistia api,wystia,wistia data api,wistia upload api",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "wystia",
    "package_url": "https://pypi.org/project/wystia/",
    "platform": "",
    "project_url": "https://pypi.org/project/wystia/",
    "project_urls": {
      "Homepage": "https://github.com/rnag/wystia"
    },
    "release_url": "https://pypi.org/project/wystia/1.1.0/",
    "requires_dist": [
      "requests",
      "requests-toolbelt",
      "urllib3",
      "dataclass-wizard (<1.0,>=0.21.0)",
      "cached-property (~=1.5.2) ; python_version == \"3.7\""
    ],
    "requires_python": ">=3.7",
    "summary": "A Python wrapper library for the Wistia API",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12716060,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6500e4adaaa17e7b5680b1f79cf4a9dbe84012c5a10dfd0a6282a8fa8fb07485",
          "md5": "dd435b7b0e5af319ca3ba264cfb979d5",
          "sha256": "68b2fc980a8295f4758b2e57a74cd2987d0337c86b95818b4fa7269ce7ff3c1c"
        },
        "downloads": -1,
        "filename": "wystia-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dd435b7b0e5af319ca3ba264cfb979d5",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.7",
        "size": 22022,
        "upload_time": "2021-06-14T23:34:03",
        "upload_time_iso_8601": "2021-06-14T23:34:03.030289Z",
        "url": "https://files.pythonhosted.org/packages/65/00/e4adaaa17e7b5680b1f79cf4a9dbe84012c5a10dfd0a6282a8fa8fb07485/wystia-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "21c00a76ecc3a83a0e6b08096e70e00ba470e4e51d07580775aa0fa436c40bbc",
          "md5": "835fed287930f2d1e013d4f388a05dd7",
          "sha256": "e1c26752d7de2d4fb74b6ca4569a630719b622108c14cfb737ac5f73fc1b038c"
        },
        "downloads": -1,
        "filename": "wystia-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "835fed287930f2d1e013d4f388a05dd7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 10531260,
        "upload_time": "2021-06-14T23:34:06",
        "upload_time_iso_8601": "2021-06-14T23:34:06.387200Z",
        "url": "https://files.pythonhosted.org/packages/21/c0/0a76ecc3a83a0e6b08096e70e00ba470e4e51d07580775aa0fa436c40bbc/wystia-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "53d714d9f565a997c8f92669fd9690c7335541f1c836adbe71d361527bf47a7a",
          "md5": "2e6e3a7620c0fae22f4c5a5e488025a2",
          "sha256": "ba9a766adf06567d71a3a2996658ec203eef7c68597e9e9a60a0786998fde54d"
        },
        "downloads": -1,
        "filename": "wystia-0.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2e6e3a7620c0fae22f4c5a5e488025a2",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.7",
        "size": 26321,
        "upload_time": "2021-06-16T22:12:56",
        "upload_time_iso_8601": "2021-06-16T22:12:56.937560Z",
        "url": "https://files.pythonhosted.org/packages/53/d7/14d9f565a997c8f92669fd9690c7335541f1c836adbe71d361527bf47a7a/wystia-0.2.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "95aa34bba63d0c5fb6a9be451ca64c41da10b984dbe41f3c15f2c6d2908aadc6",
          "md5": "d7a49656d890d18d3df7f8d24a59d1b5",
          "sha256": "82ecc89d4df7ff41cb7759357aad506efbfd67d678e9ea98f0d2551385307a6d"
        },
        "downloads": -1,
        "filename": "wystia-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d7a49656d890d18d3df7f8d24a59d1b5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 31055,
        "upload_time": "2021-06-16T22:12:58",
        "upload_time_iso_8601": "2021-06-16T22:12:58.412868Z",
        "url": "https://files.pythonhosted.org/packages/95/aa/34bba63d0c5fb6a9be451ca64c41da10b984dbe41f3c15f2c6d2908aadc6/wystia-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a92215a11389e97223c321a6ed4e43a5fb3c8ae07ff171eeb6a18593dfb49fe6",
          "md5": "f3c5746e6fc3c2fbb1814fcceaf30454",
          "sha256": "2efb176b08a8ddc59ba0463cd594c3124c0df9c0185fd6f116761bfe5eba299f"
        },
        "downloads": -1,
        "filename": "wystia-0.2.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f3c5746e6fc3c2fbb1814fcceaf30454",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.7",
        "size": 26805,
        "upload_time": "2021-06-17T15:09:19",
        "upload_time_iso_8601": "2021-06-17T15:09:19.785960Z",
        "url": "https://files.pythonhosted.org/packages/a9/22/15a11389e97223c321a6ed4e43a5fb3c8ae07ff171eeb6a18593dfb49fe6/wystia-0.2.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8e8a9f285fe00601e88b5d9487bb1a5dcbb8771f93dc17ddee8b158a7b5af31a",
          "md5": "d938c9c56e4c083dad4952e00c18eb40",
          "sha256": "918861e6287701a44839afeb223a193dce89b03843bb40372d23aee8f43be235"
        },
        "downloads": -1,
        "filename": "wystia-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d938c9c56e4c083dad4952e00c18eb40",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 33648,
        "upload_time": "2021-06-17T15:09:20",
        "upload_time_iso_8601": "2021-06-17T15:09:20.905635Z",
        "url": "https://files.pythonhosted.org/packages/8e/8a/9f285fe00601e88b5d9487bb1a5dcbb8771f93dc17ddee8b158a7b5af31a/wystia-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4d741bd97d5c98b1a6ea20ec5700dd8f5497f36f1dc4bd75a8a5971e3922b399",
          "md5": "214fd2d1aa8be38a55308d72f74686ba",
          "sha256": "b6efaee15f373c698b1e758b277a56fcf2f49900dbf7143632af47a0d6b8485a"
        },
        "downloads": -1,
        "filename": "wystia-0.3.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "214fd2d1aa8be38a55308d72f74686ba",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.5",
        "size": 32878,
        "upload_time": "2021-07-21T18:13:45",
        "upload_time_iso_8601": "2021-07-21T18:13:45.416665Z",
        "url": "https://files.pythonhosted.org/packages/4d/74/1bd97d5c98b1a6ea20ec5700dd8f5497f36f1dc4bd75a8a5971e3922b399/wystia-0.3.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ef3e0caaef978d2429ab9ba423a5abcf4f761b4f5ba665c76cdfcb212eae3b0",
          "md5": "b9564268d79c815f669a0047dd4b234d",
          "sha256": "846d763fc771feebbaff7707b78f6e093a52e6d99ef140c6348ad91537f30360"
        },
        "downloads": -1,
        "filename": "wystia-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b9564268d79c815f669a0047dd4b234d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 39611,
        "upload_time": "2021-07-21T18:13:46",
        "upload_time_iso_8601": "2021-07-21T18:13:46.472713Z",
        "url": "https://files.pythonhosted.org/packages/0e/f3/e0caaef978d2429ab9ba423a5abcf4f761b4f5ba665c76cdfcb212eae3b0/wystia-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7f15d4207716501ef7e2a817b2ac516918866b866e33f2a707f189b24f42f8c9",
          "md5": "e10b160a99e7206424e8cc1b27fc29a3",
          "sha256": "8c9dab0aeb2b553497a68c49b481c7c414d1151c780648fa378ebe1f121a1a85"
        },
        "downloads": -1,
        "filename": "wystia-1.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e10b160a99e7206424e8cc1b27fc29a3",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.7",
        "size": 33387,
        "upload_time": "2022-01-14T23:19:35",
        "upload_time_iso_8601": "2022-01-14T23:19:35.460045Z",
        "url": "https://files.pythonhosted.org/packages/7f/15/d4207716501ef7e2a817b2ac516918866b866e33f2a707f189b24f42f8c9/wystia-1.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cada12be636e63e507f97511f945224394385c2adf6ad8bac755307ca6618bbf",
          "md5": "53018332e72431361fceefb2be54a12a",
          "sha256": "a9bf9f2dbbdc9686b92d50e688fcd708de012b98d971aab403f2aaf440189d02"
        },
        "downloads": -1,
        "filename": "wystia-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "53018332e72431361fceefb2be54a12a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 43343,
        "upload_time": "2022-01-14T23:19:37",
        "upload_time_iso_8601": "2022-01-14T23:19:37.445991Z",
        "url": "https://files.pythonhosted.org/packages/ca/da/12be636e63e507f97511f945224394385c2adf6ad8bac755307ca6618bbf/wystia-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e4963274219dda963108145c1ab82767845c58a6d1e562cc656301b59c35fd80",
          "md5": "bcf4eff9161b4ac6a03eb75665a0c64f",
          "sha256": "b317c38281561dac9bfe7a80c007001ea55cd2f972a8881ac2c65ff986bcef22"
        },
        "downloads": -1,
        "filename": "wystia-1.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bcf4eff9161b4ac6a03eb75665a0c64f",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.7",
        "size": 33117,
        "upload_time": "2022-01-28T00:35:43",
        "upload_time_iso_8601": "2022-01-28T00:35:43.367228Z",
        "url": "https://files.pythonhosted.org/packages/e4/96/3274219dda963108145c1ab82767845c58a6d1e562cc656301b59c35fd80/wystia-1.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5c714ae0ca8a33cb2fdd1f7e3d8a88c8dfde665d73c2974821cddafc3972e9fb",
          "md5": "e7f2b826572fa725ee5f5cbd6b7524bd",
          "sha256": "6df9bb648d4555aab497ae581c3cae83460f84075146fec56e25ec2676f60bea"
        },
        "downloads": -1,
        "filename": "wystia-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e7f2b826572fa725ee5f5cbd6b7524bd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 46895,
        "upload_time": "2022-01-28T00:35:45",
        "upload_time_iso_8601": "2022-01-28T00:35:45.497284Z",
        "url": "https://files.pythonhosted.org/packages/5c/71/4ae0ca8a33cb2fdd1f7e3d8a88c8dfde665d73c2974821cddafc3972e9fb/wystia-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e4963274219dda963108145c1ab82767845c58a6d1e562cc656301b59c35fd80",
        "md5": "bcf4eff9161b4ac6a03eb75665a0c64f",
        "sha256": "b317c38281561dac9bfe7a80c007001ea55cd2f972a8881ac2c65ff986bcef22"
      },
      "downloads": -1,
      "filename": "wystia-1.1.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "bcf4eff9161b4ac6a03eb75665a0c64f",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.7",
      "size": 33117,
      "upload_time": "2022-01-28T00:35:43",
      "upload_time_iso_8601": "2022-01-28T00:35:43.367228Z",
      "url": "https://files.pythonhosted.org/packages/e4/96/3274219dda963108145c1ab82767845c58a6d1e562cc656301b59c35fd80/wystia-1.1.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5c714ae0ca8a33cb2fdd1f7e3d8a88c8dfde665d73c2974821cddafc3972e9fb",
        "md5": "e7f2b826572fa725ee5f5cbd6b7524bd",
        "sha256": "6df9bb648d4555aab497ae581c3cae83460f84075146fec56e25ec2676f60bea"
      },
      "downloads": -1,
      "filename": "wystia-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e7f2b826572fa725ee5f5cbd6b7524bd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 46895,
      "upload_time": "2022-01-28T00:35:45",
      "upload_time_iso_8601": "2022-01-28T00:35:45.497284Z",
      "url": "https://files.pythonhosted.org/packages/5c/71/4ae0ca8a33cb2fdd1f7e3d8a88c8dfde665d73c2974821cddafc3972e9fb/wystia-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}