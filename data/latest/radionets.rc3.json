{
  "info": {
    "author": "Kevin Schmidt, Felix Geyer",
    "author_email": "Kevin Schmidt <kevin3.schmidt@tu-dortmund.de>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Scientific/Engineering :: Astronomy",
      "Topic :: Scientific/Engineering :: Information Analysis",
      "Topic :: Scientific/Engineering :: Physics"
    ],
    "description": "# radionets [![Actions Status](https://github.com/radionets-project/radionets/workflows/CI/badge.svg)](https://github.com/radionets-project/radionets/actions) [![codecov](https://codecov.io/gh/radionets-project/radionets/branch/main/graph/badge.svg)](https://codecov.io/gh/radionets-project/radionets)\n\n\n\n## Imaging Radio Interferometric Data with Neural Networks\n\nDeep-learning framework for the simulation and analysis of radio interferometric data in Python. The goal is to reconstruct calibrated observations with\nconvolutional Neural Networks to create high-resolution images. For further information, please have a look at our [paper](https://www.aanda.org/component/article?access=doi&doi=10.1051/0004-6361/202142113).\n\nAnalysis strategies leading to reproducible processing and evaluation of data recorded by radio interferometers:\n* Simulation of datasets (see also the `radiosim` [repository](https://github.com/radionets-project/radiosim))\n* Simulation of radio interferometer observations (see also the `pyvisgen` [repository](https://github.com/radionets-project/pyvisgen))\n* Training of deep learning models\n* Reconstruction of radio interferometric data\n\n## Installation\n\nThis repository is built as a python package. We recommend creating a mamba environment to handle the dependencies of all packages.\nYou can create one by running the following command in this repository:\n```\n$ mamba env create -f environment.yml\n```\nDepending on your `cuda` version you have to specify the `cudatoolkit` version used by `pytorch`. If you are working on machines\nwith `cuda` versions < 10.2, please change the version number in the environment.yml file. Since the package `pre-commit` is used, you need to execute \n```\n$ pre-commit install\n```\nafter the installation.\n\n## Usage\n\nFor each task, executables are installed to your `PATH`. Each takes `toml` configuration files as input to manage data paths and options.\nSimulated data is saved in `hdf5`; trained models are saved as `pickle` files.\n\n* `radionets_simulations <...>`\n  This script is used to simulate radio interferometric data sets for the training of deep learning models.\n* `radionets_training <...>`\n  This script is used to train a model on events with known truth\n  values for the target variable, usually Monte Carlo simulations.\n* `radionets_evaluation <...>`\n  This script is used to evaluate the performance of the trained deep-learning models.\n\nDefault configuration files can be found in the examples directory. The examples directory contains `jupyter notebooks`, which show an example\nanalysis pipeline and the corresponding commands. (need a rework)\n\n## Structure of the Repository\n\n### dl_framework\n\nThe used deep learning framework is based on [pytorch](https://pytorch.org/) and [fastai](https://www.fast.ai/).\nAn introduction to Neural Networks and an overview of the use of fastai to train deep learning models can be found in [Practical Deep Learning for Coders, v3](https://course.fast.ai/index.html) and [fastbook](https://github.com/fastai/fastbook).\n\n### dl_training\n\nFunctions for handling the different training options. Currently, there are the training, the learning rate finder, and the loss plotting mode available.\n\n### simulations (further developed in [pyvisgen](https://github.com/radionets-project/pyvisgen) repository)\n\nFunctions to simulate and illustrate radio interferometric observations. At the moment simulations based on the MNIST dataset and \nsimulations of Gaussian sources are possible. We are currently working on simulating visibilities directly in Fourier space.\nFor more information, visit our corresponding repository [pyvisgen](https://github.com/radionets-project/pyvisgen). In the future, the simulations will be created\nusing the `pyvisgen` repository, while the `radionets` repository contains the training and evaluation methods.\n\n### evaluation\n\nFunctions for the evaluation of the training sessions. The available options reach from single, exemplary plots in (u, v) space and image space to\nmethods computing characteristic values on large test datasets. In detail:\n\n* Amplitude and phase for the prediction and the truth. Example image below includes the difference between prediction and truth.\n![](resources/amp_phase.png)\n* Reconstructed source images with additional features, such as MS-SSIM values or the viewing angle. Example image below.\n![](resources/source_plot.png)\n* Histogram of differences between predicted and true viewing angles. The image includes a comparison with [wsclean](https://gitlab.com/aroffringa/wsclean).\n![](resources/hist_jet_offsets.png)\n* Histogram of the ratio between predicted and true source areas. The image includes a comparison with [wsclean](https://gitlab.com/aroffringa/wsclean).\n![](resources/hist_area_ratios.png)\n* Histogram of flux difference in the core component. The image includes a comparison with [wsclean](https://gitlab.com/aroffringa/wsclean).\n![](resources/hist_mean_diffs.png)\n* Included, but not yet fully operational\n  * Histogram of differences between predicted and true MS-SSIM values on a dedicated test dataset\n  * Histogram of differences between predicted and true dynamic range values on a dedicated test dataset\n\nAll histograms are created on a dedicated test dataset.\n\n## Contributors\n\n* Kevin Schmidt [@Kevin2](https://github.com/Kevin2)\n* Felix Geyer [@FeGeyer](https://github.com/FeGeyer)\n* Arne Poggenpohl [@ArnePoggenpohl](https://github.com/ArnePoggenpohl)\n* Stefan Fröse [@StFroese](https://github.com/StFroese)\n* Paul-Simon Blomenkamp [@PBlomenkamp](https://github.com/PBlomenkamp)\n* Olivia Locke [@olivialocke](https://github.com/olivialocke)\n* Kevin Laudamus [@K-Lauda](https://github.com/K-Lauda)\n* Emiliano Miranda [@emilianozm24](https://github.com/emilianozm24)\n* Maximilian Büchel [@MaxBue](https://github.com/MaxBue)\n* Rune Dominik [@RuneDominik](https://github.com/RuneDominik)\n\n## Versions used and tested\n\n* Python >= 3.8\n* pyTorch >= 1.11.0\n* torchvision >= 0.12.0\n* cudatoolkit >= 11.3\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/radionets-project/radionets",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "radionets",
    "package_url": "https://pypi.org/project/radionets/",
    "platform": null,
    "project_url": "https://pypi.org/project/radionets/",
    "project_urls": {
      "Bug Tracker": "https://github.com/pypa/sampleproject/issues",
      "Homepage": "https://github.com/pypa/sampleproject"
    },
    "release_url": "https://pypi.org/project/radionets/0.2.0/",
    "requires_dist": [
      "fastai",
      "kornia",
      "pytorch-msssim",
      "numpy",
      "astropy",
      "tqdm",
      "click",
      "jupyter",
      "h5py",
      "scikit-image",
      "pandas",
      "toml",
      "pytest",
      "pytest-cov",
      "pytest-order",
      "comet-ml",
      "pre-commit"
    ],
    "requires_python": ">=3.7",
    "summary": "Imaging radio interferometric data with Neural Networks.",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16650857,
  "releases": {
    "0.1.16": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aeb6da397b704641f4cee29332b2536c690a918808d4d97b032ccb4d7da14153",
          "md5": "4a89223674ff7dbb2f4b8b3f57b37307",
          "sha256": "07c3970f9f0573a21783d9891b7b6c3cd3a86873ac3eacfc223e57a21b8ac29b"
        },
        "downloads": -1,
        "filename": "radionets-0.1.16-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4a89223674ff7dbb2f4b8b3f57b37307",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 66304,
        "upload_time": "2023-01-25T15:28:09",
        "upload_time_iso_8601": "2023-01-25T15:28:09.980968Z",
        "url": "https://files.pythonhosted.org/packages/ae/b6/da397b704641f4cee29332b2536c690a918808d4d97b032ccb4d7da14153/radionets-0.1.16-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e546b3c022cabc1c101e100789dd9568b4b84346bb65335be4496c4c329d7d3a",
          "md5": "784dd80b64413b6bdbbf16e9ca10b14e",
          "sha256": "0be9c46d8cf926ea35e94ff7af049aa01205520ce34df809dc27c755d3f118d3"
        },
        "downloads": -1,
        "filename": "radionets-0.1.16.tar.gz",
        "has_sig": false,
        "md5_digest": "784dd80b64413b6bdbbf16e9ca10b14e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 1580909,
        "upload_time": "2023-01-25T15:28:11",
        "upload_time_iso_8601": "2023-01-25T15:28:11.943220Z",
        "url": "https://files.pythonhosted.org/packages/e5/46/b3c022cabc1c101e100789dd9568b4b84346bb65335be4496c4c329d7d3a/radionets-0.1.16.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.18": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4ed6641d3395f70a3c2fd88301106d8cf5f74d19a8a75bb4f6dc6388183379bb",
          "md5": "7d2b266b7c71acdc2902fb011f4af0de",
          "sha256": "49d9cf15150ebf13945c9b3e8393ac99439b59ad6838c7d9da133cbbef0ffbfd"
        },
        "downloads": -1,
        "filename": "radionets-0.1.18-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7d2b266b7c71acdc2902fb011f4af0de",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 68582,
        "upload_time": "2023-01-31T08:13:59",
        "upload_time_iso_8601": "2023-01-31T08:13:59.138225Z",
        "url": "https://files.pythonhosted.org/packages/4e/d6/641d3395f70a3c2fd88301106d8cf5f74d19a8a75bb4f6dc6388183379bb/radionets-0.1.18-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "204808f94e8fd4d343bdbff6710d884a1fc8804aba4fcae3b5587e9d1a293f18",
          "md5": "4a2fbe4e3beab93cb0d5678f8e8e48de",
          "sha256": "0e877f980b0497ab1ae6391e5ceae1ba56326bf8557f1f54773b62e8a28b378f"
        },
        "downloads": -1,
        "filename": "radionets-0.1.18.tar.gz",
        "has_sig": false,
        "md5_digest": "4a2fbe4e3beab93cb0d5678f8e8e48de",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 1508183,
        "upload_time": "2023-01-31T08:14:02",
        "upload_time_iso_8601": "2023-01-31T08:14:02.998498Z",
        "url": "https://files.pythonhosted.org/packages/20/48/08f94e8fd4d343bdbff6710d884a1fc8804aba4fcae3b5587e9d1a293f18/radionets-0.1.18.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fbb95fd4914fd00941b0e59b7c3f0584c52c89d55b8ae97ac4428fcb912199ab",
          "md5": "2feeea5053a11030b22236607f474be9",
          "sha256": "564f0144d2c3c0f4d57e17f323cb69274fb4b4ddbb001facd06e0102aa648933"
        },
        "downloads": -1,
        "filename": "radionets-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2feeea5053a11030b22236607f474be9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 67043,
        "upload_time": "2023-02-01T13:27:55",
        "upload_time_iso_8601": "2023-02-01T13:27:55.718144Z",
        "url": "https://files.pythonhosted.org/packages/fb/b9/5fd4914fd00941b0e59b7c3f0584c52c89d55b8ae97ac4428fcb912199ab/radionets-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "011296f71e1333b428742bc823e7924f9f6d708608cf4f410b077d6c9e295c78",
          "md5": "cc7e3464100837f5d90e0803a8902a27",
          "sha256": "b2e429f93d17a3cee41993e57fec3ac81a3d17a9af3f1e6d1c93e129530c4712"
        },
        "downloads": -1,
        "filename": "radionets-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "cc7e3464100837f5d90e0803a8902a27",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 56818,
        "upload_time": "2023-02-01T13:27:58",
        "upload_time_iso_8601": "2023-02-01T13:27:58.033552Z",
        "url": "https://files.pythonhosted.org/packages/01/12/96f71e1333b428742bc823e7924f9f6d708608cf4f410b077d6c9e295c78/radionets-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fbb95fd4914fd00941b0e59b7c3f0584c52c89d55b8ae97ac4428fcb912199ab",
        "md5": "2feeea5053a11030b22236607f474be9",
        "sha256": "564f0144d2c3c0f4d57e17f323cb69274fb4b4ddbb001facd06e0102aa648933"
      },
      "downloads": -1,
      "filename": "radionets-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2feeea5053a11030b22236607f474be9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 67043,
      "upload_time": "2023-02-01T13:27:55",
      "upload_time_iso_8601": "2023-02-01T13:27:55.718144Z",
      "url": "https://files.pythonhosted.org/packages/fb/b9/5fd4914fd00941b0e59b7c3f0584c52c89d55b8ae97ac4428fcb912199ab/radionets-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "011296f71e1333b428742bc823e7924f9f6d708608cf4f410b077d6c9e295c78",
        "md5": "cc7e3464100837f5d90e0803a8902a27",
        "sha256": "b2e429f93d17a3cee41993e57fec3ac81a3d17a9af3f1e6d1c93e129530c4712"
      },
      "downloads": -1,
      "filename": "radionets-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "cc7e3464100837f5d90e0803a8902a27",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 56818,
      "upload_time": "2023-02-01T13:27:58",
      "upload_time_iso_8601": "2023-02-01T13:27:58.033552Z",
      "url": "https://files.pythonhosted.org/packages/01/12/96f71e1333b428742bc823e7924f9f6d708608cf4f410b077d6c9e295c78/radionets-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}