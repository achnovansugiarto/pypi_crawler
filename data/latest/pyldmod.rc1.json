{
  "info": {
    "author": "Digital Bazaar",
    "author_email": "support@digitalbazaar.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Internet",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "PyLD\n====\n\n.. image:: https://travis-ci.org/digitalbazaar/pyld.png?branch=master\n   :target: https://travis-ci.org/digitalbazaar/pyld\n   :alt: Build Status\n\nIntroduction\n------------\n\nThis library is an implementation of the JSON-LD_ specification in Python_.\n\nJSON, as specified in RFC7159_, is a simple language for representing\nobjects on the Web. Linked Data is a way of describing content across\ndifferent documents or Web sites. Web resources are described using\nIRIs, and typically are dereferencable entities that may be used to find\nmore information, creating a \"Web of Knowledge\". JSON-LD_ is intended\nto be a simple publishing method for expressing not only Linked Data in\nJSON, but for adding semantics to existing JSON.\n\nJSON-LD is designed as a light-weight syntax that can be used to express\nLinked Data. It is primarily intended to be a way to express Linked Data\nin JavaScript and other Web-based programming environments. It is also\nuseful when building interoperable Web Services and when storing Linked\nData in JSON-based document storage engines. It is practical and\ndesigned to be as simple as possible, utilizing the large number of JSON\nparsers and existing code that is in use today. It is designed to be\nable to express key-value pairs, RDF data, RDFa_ data,\nMicroformats_ data, and Microdata_. That is, it supports every\nmajor Web-based structured data model in use today.\n\nThe syntax does not require many applications to change their JSON, but\neasily add meaning by adding context in a way that is either in-band or\nout-of-band. The syntax is designed to not disturb already deployed\nsystems running on JSON, but provide a smooth migration path from JSON\nto JSON with added semantics. Finally, the format is intended to be fast\nto parse, fast to generate, stream-based and document-based processing\ncompatible, and require a very small memory footprint in order to operate.\n\nConformance\n-----------\n\nThis library aims to conform with the following:\n\n- `JSON-LD 1.1 <JSON-LD WG 1.1_>`_,\n  W3C Candidate Recommendation,\n  2019-12-12 or `newer <JSON-LD WG latest_>`_\n- `JSON-LD 1.1 Processing Algorithms and API <JSON-LD WG 1.1 API_>`_,\n  W3C Candidate Recommendation,\n  2019-12-12 or `newer <JSON-LD WG API latest_>`_\n- `JSON-LD 1.1 Framing <JSON-LD WG 1.1 Framing_>`_,\n  W3C Candidate Recommendation,\n  2019-12-12 or `newer <JSON-LD WG Framing latest_>`_\n- Working Group `test suite <WG test suite_>`_\n\nThe `test runner`_ is often updated to note or skip newer tests that are not\nyet supported.\n\nRequirements\n------------\n\n- Python_ (3.6 or later)\n- Requests_ (optional)\n- aiohttp_ (optional, Python 3.5 or later)\n\nInstallation\n------------\n\nPyLD can be installed with a pip_ `package <https://pypi.org/project/PyLD/>`_\n\n.. code-block:: bash\n\n    pip install PyLD\n\nDefining a dependency on pyld will not pull in Requests_ or aiohttp_.  If you\nneed one of these for a `Document Loader`_ then either depend on the desired\nexternal library directly or define the requirement as ``PyLD[requests]`` or\n``PyLD[aiohttp]``.\n\nQuick Examples\n--------------\n\n.. code-block:: Python\n\n    from pyld import jsonld\n    import json\n\n    doc = {\n        \"http://schema.org/name\": \"Manu Sporny\",\n        \"http://schema.org/url\": {\"@id\": \"http://manu.sporny.org/\"},\n        \"http://schema.org/image\": {\"@id\": \"http://manu.sporny.org/images/manu.png\"}\n    }\n\n    context = {\n        \"name\": \"http://schema.org/name\",\n        \"homepage\": {\"@id\": \"http://schema.org/url\", \"@type\": \"@id\"},\n        \"image\": {\"@id\": \"http://schema.org/image\", \"@type\": \"@id\"}\n    }\n\n    # compact a document according to a particular context\n    # see: https://json-ld.org/spec/latest/json-ld/#compacted-document-form\n    compacted = jsonld.compact(doc, context)\n\n    print(json.dumps(compacted, indent=2))\n    # Output:\n    # {\n    #   \"@context\": {...},\n    #   \"image\": \"http://manu.sporny.org/images/manu.png\",\n    #   \"homepage\": \"http://manu.sporny.org/\",\n    #   \"name\": \"Manu Sporny\"\n    # }\n\n    # compact using URLs\n    jsonld.compact('http://example.org/doc', 'http://example.org/context')\n\n    # expand a document, removing its context\n    # see: https://json-ld.org/spec/latest/json-ld/#expanded-document-form\n    expanded = jsonld.expand(compacted)\n\n    print(json.dumps(expanded, indent=2))\n    # Output:\n    # [{\n    #   \"http://schema.org/image\": [{\"@id\": \"http://manu.sporny.org/images/manu.png\"}],\n    #   \"http://schema.org/name\": [{\"@value\": \"Manu Sporny\"}],\n    #   \"http://schema.org/url\": [{\"@id\": \"http://manu.sporny.org/\"}]\n    # }]\n\n    # expand using URLs\n    jsonld.expand('http://example.org/doc')\n\n    # flatten a document\n    # see: https://json-ld.org/spec/latest/json-ld/#flattened-document-form\n    flattened = jsonld.flatten(doc)\n    # all deep-level trees flattened to the top-level\n\n    # frame a document\n    # see: https://json-ld.org/spec/latest/json-ld-framing/#introduction\n    framed = jsonld.frame(doc, frame)\n    # document transformed into a particular tree structure per the given frame\n\n    # normalize a document using the RDF Dataset Normalization Algorithm\n    # (URDNA2015), see: https://json-ld.github.io/normalization/spec/\n    normalized = jsonld.normalize(\n        doc, {'algorithm': 'URDNA2015', 'format': 'application/n-quads'})\n    # normalized is a string that is a canonical representation of the document\n    # that can be used for hashing, comparison, etc.\n\nDocument Loader\n---------------\n\nThe default document loader for PyLD uses Requests_. In a production\nenvironment you may want to setup a custom loader that, at a minimum, sets a\ntimeout value. You can also force requests to use https, set client certs,\ndisable verification, or set other Requests_ parameters.\n\n.. code-block:: Python\n\n    jsonld.set_document_loader(jsonld.requests_document_loader(timeout=...))\n\nAn asynchronous document loader using aiohttp_ is also available. Please note\nthat this document loader limits asynchronicity to fetching documents only.\nThe processing loops remain synchronous.\n\n.. code-block:: Python\n\n    jsonld.set_document_loader(jsonld.aiohttp_document_loader(timeout=...))\n\nWhen no document loader is specified, the default loader is set to Requests_.\nIf Requests_ is not available, the loader is set to aiohttp_. The fallback\ndocument loader is a dummy document loader that raises an exception on every\ninvocation.\n\nCommercial Support\n------------------\n\nCommercial support for this library is available upon request from\n`Digital Bazaar`_: support@digitalbazaar.com.\n\nSource\n------\n\nThe source code for the Python implementation of the JSON-LD API\nis available at:\n\nhttps://github.com/digitalbazaar/pyld\n\nTests\n-----\n\nThis library includes a sample testing utility which may be used to verify\nthat changes to the processor maintain the correct output.\n\nTo run the sample tests you will need to get the test suite files by cloning\nthe ``json-ld-api``, ``json-ld-framing``, and ``normalization`` repositories\nhosted on GitHub:\n\n- https://github.com/w3c/json-ld-api\n- https://github.com/w3c/json-ld-framing\n- https://github.com/json-ld/normalization\n\nIf the suites repositories are available as sibling directories of the PyLD\nsource directory, then all the tests can be run with the following:\n\n.. code-block:: bash\n\n    python tests/runtests.py\n\nIf you want to test individual manifest ``.jsonld`` files or directories\ncontaining a ``manifest.jsonld``, then you can supply these files or\ndirectories as arguments:\n\n.. code-block:: bash\n\n    python tests/runtests.py TEST_PATH [TEST_PATH...]\n\nThe test runner supports different document loaders by setting ``-l requests``\nor ``-l aiohttp``. The default document loader is set to Requests_.\n\nAn EARL report can be generated using the ``-e`` or ``--earl`` option.\n\n\n.. _Digital Bazaar: https://digitalbazaar.com/\n\n.. _JSON-LD WG 1.1 API: https://www.w3.org/TR/json-ld11-api/\n.. _JSON-LD WG 1.1 Framing: https://www.w3.org/TR/json-ld11-framing/\n.. _JSON-LD WG 1.1: https://www.w3.org/TR/json-ld11/\n\n.. _JSON-LD WG API latest: https://w3c.github.io/json-ld-api/\n.. _JSON-LD WG Framing latest: https://w3c.github.io/json-ld-framing/\n.. _JSON-LD WG latest: https://w3c.github.io/json-ld-syntax/\n\n.. _JSON-LD Benchmarks: https://json-ld.org/benchmarks/\n.. _JSON-LD WG: https://www.w3.org/2018/json-ld-wg/\n.. _JSON-LD: https://json-ld.org/\n.. _Microdata: http://www.w3.org/TR/microdata/\n.. _Microformats: http://microformats.org/\n.. _Python: https://www.python.org/\n.. _Requests: http://docs.python-requests.org/\n.. _aiohttp: https://aiohttp.readthedocs.io/\n.. _RDFa: http://www.w3.org/TR/rdfa-core/\n.. _RFC7159: http://tools.ietf.org/html/rfc7159\n.. _WG test suite: https://github.com/w3c/json-ld-api/tree/master/tests\n.. _errata: http://www.w3.org/2014/json-ld-errata\n.. _pip: http://www.pip-installer.org/\n.. _test runner: https://github.com/digitalbazaar/pyld/blob/master/tests/runtests.py\n.. _test suite: https://github.com/json-ld/json-ld.org/tree/master/test-suite",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/digitalbazaar/pyld",
    "keywords": "",
    "license": "BSD 3-Clause license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "PyLDmod",
    "package_url": "https://pypi.org/project/PyLDmod/",
    "platform": "",
    "project_url": "https://pypi.org/project/PyLDmod/",
    "project_urls": {
      "Homepage": "https://github.com/digitalbazaar/pyld"
    },
    "release_url": "https://pypi.org/project/PyLDmod/2.0.5/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "modified Python implementation of the JSON-LD API",
    "version": "2.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10288379,
  "releases": {
    "2.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8861ef8644ffccaaee289eee6dd97e952923b18d26cb7a75c29cef982e0bee07",
          "md5": "9f560a04d69f10125f05b8fa50d1c037",
          "sha256": "afe7515a4c2b53bbff436c93af128599b4f52791cc71e34baecb7662c694feed"
        },
        "downloads": -1,
        "filename": "PyLDmod-2.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "9f560a04d69f10125f05b8fa50d1c037",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 70693,
        "upload_time": "2021-05-07T16:37:06",
        "upload_time_iso_8601": "2021-05-07T16:37:06.891835Z",
        "url": "https://files.pythonhosted.org/packages/88/61/ef8644ffccaaee289eee6dd97e952923b18d26cb7a75c29cef982e0bee07/PyLDmod-2.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8861ef8644ffccaaee289eee6dd97e952923b18d26cb7a75c29cef982e0bee07",
        "md5": "9f560a04d69f10125f05b8fa50d1c037",
        "sha256": "afe7515a4c2b53bbff436c93af128599b4f52791cc71e34baecb7662c694feed"
      },
      "downloads": -1,
      "filename": "PyLDmod-2.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "9f560a04d69f10125f05b8fa50d1c037",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 70693,
      "upload_time": "2021-05-07T16:37:06",
      "upload_time_iso_8601": "2021-05-07T16:37:06.891835Z",
      "url": "https://files.pythonhosted.org/packages/88/61/ef8644ffccaaee289eee6dd97e952923b18d26cb7a75c29cef982e0bee07/PyLDmod-2.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}