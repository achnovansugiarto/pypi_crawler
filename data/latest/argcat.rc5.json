{
  "info": {
    "author": "Chunxi Xin",
    "author_email": "chx1n.d@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# ArgCat - A cute helper for argparse in Python 3\n\n**ArgCat** is a tiny tool designed to make it more joyful to use `argparse` module in Python 3.\n\nAs a bridge between developer and `argparse` module, it wraps `argparse`  and tries to take on all the \"dirty works\" for you, improving both the ''building\" and \"handling\" parts of an `argparse` process, allowing you to focus more on business logic without worring about creating and configuring parsers and arguments of `argparse` in command-line interfaces.\n\n## Installation\n\n```bash\npip install argcat\n```\n\nOnce installation done, you should get a **v0.4.x** version in your python package library , as the latest stable version is **v0.4.x**.\n\n## Features\n\n### Build parsers and arguments of `argparse` in a more straightforward and clearer way\n\nA typical code snippet to create a program supports sub-commands using `argparse`:\n\n(Snippet from \"Sub-commands\" section in https://docs.python.org/3/library/argparse.html)\n\n```python\n# Create the top-level parser\nparser = argparse.ArgumentParser(prog='PROG')\nparser.add_argument('--foo', action='store_true', help='foo help')\nsubparsers = parser.add_subparsers(help='sub-command help')\n\n# Create the parser for the \"a\" command\nparser_a = subparsers.add_parser('a', help='a help')\nparser_a.add_argument('bar', type=int, help='bar help')\n\n# Create the parser for the \"b\" command\nparser_b = subparsers.add_parser('b', help='b help')\nparser_b.add_argument('--baz', choices='XYZ', help='baz help')\n\n# Parse some argument lists\nparser.parse_args(['a', '12'])\nparser.parse_args(['--foo', 'b', '--baz', 'Z'])\n```\n\n#### But, using ArgCat:\n\n```python\nargcat = ArgCat()\n\n# Build parsers and arguments\nwith argcat.build() as builder:\n    # Set descriptive information of the program\n    builder.set_prog_info(prog='PROG')\n    builder.set_subparsers_info(help='sub-command help')\n            \n    # Add an argument to the main parser\n    builder.main_parser().add_argument('--foo', action='store_true', help='foo help')\n            \n    # Create the parser for the \"a\" command\n    builder.add_subparser('a', help='a help')\n    builder.subparser('a').add_argument('bar', type=int, help='bar help')\n            \n    # Create the parser for the \"b\" command\n    builder.add_subparser('b', help='b help')\n    builder.subparser('b').add_argument('--baz', choices='XYZ', help='baz help')\n\n# Parse some argument lists\nargcat.parse_args(['a', '12'])\nargcat.parse_args(['--foo', 'b', '--baz', 'Z'])\n```\n\n### Handle parsed result from `argparse`  directly and easily\n\nA typical code snippet to create a program supports sub-commands and handles the parsed result using `argparse`:\n\n(Snippet from \"Sub-commands\" section in https://docs.python.org/3/library/argparse.html)\n\n```python\n# Sub-command functions\ndef foo(args):\n    print(args.x * args.y)\n\ndef bar(args):\n    print('((%s))' % args.z)\n\n# Create the top-level parser\nparser = argparse.ArgumentParser()\nsubparsers = parser.add_subparsers()\n\n# Create the parser for the \"foo\" command\nparser_foo = subparsers.add_parser('foo')\nparser_foo.add_argument('-x', type=int, default=1)\nparser_foo.add_argument('y', type=float)\nparser_foo.set_defaults(func=foo)\n\n# Create the parser for the \"bar\" command\nparser_bar = subparsers.add_parser('bar')\nparser_bar.add_argument('z')\nparser_bar.set_defaults(func=bar)\n\n# Parse the args and call whatever function was selected\nargs = parser.parse_args('foo 1 -x 2'.split())\nargs.func(args)\n\n# Parse the args and call whatever function was selected\nargs = parser.parse_args('bar XYZYX'.split())\nargs.func(args)\n```\n\n#### Instead, using ArgCat:\n\n```python\n# Sub-command handler functions.\n# Note that the parameters of the functions should be the dests of the arguments for \n# the parsers. ArgCat helps you to route the argument's inputs from the parsed args into\n# the parsers' handler functions respectively.\ndef foo(x, y):\n    print(x * y)\n\ndef bar(z):\n    print('((%s))' % z)\n\nargcat = ArgCat()\nwith argcat.build() as builder:\n    # Create the parser for the \"foo\" command.\n    builder.add_subparser('foo')\n    builder.subparser('foo').add_argument('-x', type=int, default=1)\n    builder.subparser('foo').add_argument('y', type=float)\n\n    # Create the parser for the \"bar\" command.\n    builder.add_subparser('bar')\n    builder.subparser('bar').add_argument('z')\n\n# Set handler functions for receiving and processing parsed result.\nargcat.set_parser_handler('foo', foo)\nargcat.set_parser_handler('bar', bar)\n\n# Parse the args and the handler function `foo()` will be called with required \n# parameters automatically.\nargcat.parse_args('foo 1 -x 2'.split())\n# Parse the args and the handler function `bar()` will be called with required \n# parameters automatically.\nargcat.parse_args('bar XYZYX'.split())\n```\n\n#### And, if you would like to set all handler functions at once, using ArgCat:\n\n```python\n# Sub-command handler functions, which are decorated for the respective parsers.\n@ArgCat.handler(parser_name='foo')\ndef decorated_foo(x, y):\n    print(x * y)\n        \n@ArgCat.handler(parser_name='bar')\ndef decorated_bar(z):\n    print('((%s))' % z)    \n\nargcat = ArgCat()\nwith argcat.build() as builder:\n    # Create the parser for the \"foo\" command.\n    builder.add_subparser('foo')\n    builder.subparser('foo').add_argument('-x', type=int, default=1)\n    builder.subparser('foo').add_argument('y', type=float)\n\n    # Create the parser for the \"bar\" command.\n    builder.add_subparser('bar')\n    builder.subparser('bar').add_argument('z')\n\n# Set handler functions all at once from a handler provider\n# Supposed this code snippet is in a __main__ module, taking the module as the provider.\n# ArgCat will try to find all functions decorated by @ArgCat.handler() and set them as \n# the the handlers for the parsers according to the `parser_name` set in the decorator\n# respectively.\nargcat.add_main_module_as_handler_provider()\n# The above function call is a convenient way for below:\n# argcat.add_handler_provider(sys.modules['__main__'])\n\n# Parse the args and the handler function `foo()` will be called with required \n# parameters automatically.\nargcat.parse_args('foo 1 -x 2'.split())\n# Parse the args and the handler function `bar()` will be called with required \n# parameters automatically.\nargcat.parse_args('bar XYZYX'.split())\n```\n\n#### A Few Further Explanations: (You may be curious about)\n\n1. Handler Provider\n\n   - A handler provider can be any object owns any functions decorated by `@ArgCat.handler()` with a parameter as a parser name. \n\n   - When setting a handler provider, ArgCat tries to find all handler functions of the provider at first. Then it collects all the parsers of the specified names from the decorated functions. In the end, it tries to link the functions to each parser picked respectively. \n\n2. Handler Functions\n\n   - ArgCat supports all kinds of functions to be handler functions, such as instance methods, @staticmethod, @classmethod and the other callables. \n\n   - When decorating a callable to be a handler function, please make sure to place `@ArgCat.handler()` in the nearest place to the function definition, like below:\n\n   ```python\n   @classmethod\n   @ArgCat.handler(parser_name='foo')\n   def foo(cls):\n       ...\n   ```\n\n   - A handler function's signature must match arguments' dests of its parsers. For example, if a parser has two arguments ['--x'] and ['-y'], its handler function should have a signature contains the exact two parameters: `(x, y)` . By contrast, the name of the function is arbitary. So, either `foo(x, y)` or `go(x, y)` can be the parser's handler function. \n\n     **Note:** There is a scenario which you may need to be aware of. Supposed you have one argument ['verbose'] for the main parser and also have a ['--file'] argument for the subparser 'load'. Then the handler function for the subparser should be in a form as `foo(verbose, file)` instead of `foo(file)` . Becase the subparser's handler function will also take the arguments from the main parser by default, unless the argument added to the main handler is through `add_exlusive_argument()` . Nevertheless, don't panic. Both `set_parser_handler()` and `add_handler_provider()` will check the signature for you and let you know what is the correct one.\n\n## License\n\n```\nMIT License\n\nCopyright (c) 2022 Chunxi Xin\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dex1n/ArgCat",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "argcat",
    "package_url": "https://pypi.org/project/argcat/",
    "platform": null,
    "project_url": "https://pypi.org/project/argcat/",
    "project_urls": {
      "Bug Tracker": "https://github.com/dex1n/ArgCat/issues",
      "Homepage": "https://github.com/dex1n/ArgCat"
    },
    "release_url": "https://pypi.org/project/argcat/0.4.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A cute helper for argparse in Python 3",
    "version": "0.4.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16913942,
  "releases": {
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b98986b0ba66432372bfa401ca54b8cec42cf9749c17de790b012b715d3bf034",
          "md5": "8c4a3630d673147fb284b688f2f7117a",
          "sha256": "33017a514b863dfadf741f80fadbb2a789ce4c8f6d28330fc3980c03ece8ba0f"
        },
        "downloads": -1,
        "filename": "argcat-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8c4a3630d673147fb284b688f2f7117a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11660,
        "upload_time": "2021-03-21T12:55:53",
        "upload_time_iso_8601": "2021-03-21T12:55:53.174955Z",
        "url": "https://files.pythonhosted.org/packages/b9/89/86b0ba66432372bfa401ca54b8cec42cf9749c17de790b012b715d3bf034/argcat-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e1bf45cc7ea8a3818108e4835f197e7837e11afe0cf618d1edd3b3365b1ab492",
          "md5": "030812ab976c1f006f376e57504abd71",
          "sha256": "dad2f61ddd14172318d406a34f22607e40aead343dd5f1be88bd91347b226791"
        },
        "downloads": -1,
        "filename": "argcat-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "030812ab976c1f006f376e57504abd71",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 15377,
        "upload_time": "2021-03-21T12:55:56",
        "upload_time_iso_8601": "2021-03-21T12:55:56.428821Z",
        "url": "https://files.pythonhosted.org/packages/e1/bf/45cc7ea8a3818108e4835f197e7837e11afe0cf618d1edd3b3365b1ab492/argcat-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd8e09678eb1c792d4debe4b7144b143d70104a4f5a9a0f08e0db60995a7d591",
          "md5": "4599fd764c469c090257d2ebbbb7ac3f",
          "sha256": "3afdf9272e638ec60e5c23d7ecb38668887cccbc9d96ae236a0d2e4202ccae86"
        },
        "downloads": -1,
        "filename": "argcat-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4599fd764c469c090257d2ebbbb7ac3f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 12003,
        "upload_time": "2021-08-27T06:56:04",
        "upload_time_iso_8601": "2021-08-27T06:56:04.031103Z",
        "url": "https://files.pythonhosted.org/packages/bd/8e/09678eb1c792d4debe4b7144b143d70104a4f5a9a0f08e0db60995a7d591/argcat-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8e7029f408ffecf99423d13259ba2e8eeb42dd26611bb1c95d5890c207bce289",
          "md5": "79ad74e11a784445ddb111dcfdc9c331",
          "sha256": "8243be470229c0784011cb71458ab53552cc16eb2d9235e32cfce1dbce2d9ccf"
        },
        "downloads": -1,
        "filename": "argcat-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "79ad74e11a784445ddb111dcfdc9c331",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 15262,
        "upload_time": "2021-08-27T06:56:05",
        "upload_time_iso_8601": "2021-08-27T06:56:05.953550Z",
        "url": "https://files.pythonhosted.org/packages/8e/70/29f408ffecf99423d13259ba2e8eeb42dd26611bb1c95d5890c207bce289/argcat-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "25de5308cd30d3248b25baa19b02c955f1b810a682e3d4800b4f3e0cd42848fa",
          "md5": "4d18e9464450980a9a89009495eb658e",
          "sha256": "c80b46f9079c8db93e79d414582374a2398a3066f33e93ca406549b64fb13065"
        },
        "downloads": -1,
        "filename": "argcat-0.2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4d18e9464450980a9a89009495eb658e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 12001,
        "upload_time": "2021-08-27T07:05:16",
        "upload_time_iso_8601": "2021-08-27T07:05:16.062465Z",
        "url": "https://files.pythonhosted.org/packages/25/de/5308cd30d3248b25baa19b02c955f1b810a682e3d4800b4f3e0cd42848fa/argcat-0.2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e6a045e344596aaee412a901867f80ac12f6781f781853b08d9555f425e9d594",
          "md5": "5e2dbc68500eb0b018847f8e51bc404f",
          "sha256": "2765a8a544f7662b1475c8d454acc872dafd246144992c3cdacfa6f81b3ba4e3"
        },
        "downloads": -1,
        "filename": "argcat-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "5e2dbc68500eb0b018847f8e51bc404f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 15274,
        "upload_time": "2021-08-27T07:05:18",
        "upload_time_iso_8601": "2021-08-27T07:05:18.028201Z",
        "url": "https://files.pythonhosted.org/packages/e6/a0/45e344596aaee412a901867f80ac12f6781f781853b08d9555f425e9d594/argcat-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bbba13e4f10eb1100581c36d947f9877724b9805db24e6b507e676fc30ed13d6",
          "md5": "91d0f2ea7bdf1d6a9e3eb9718aef958e",
          "sha256": "1cb47af0d7f45951ab0fc528ea74ecbca2f2dbe26b4dabf22e0b39d0a7676583"
        },
        "downloads": -1,
        "filename": "argcat-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "91d0f2ea7bdf1d6a9e3eb9718aef958e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 14731,
        "upload_time": "2022-12-04T14:16:41",
        "upload_time_iso_8601": "2022-12-04T14:16:41.246039Z",
        "url": "https://files.pythonhosted.org/packages/bb/ba/13e4f10eb1100581c36d947f9877724b9805db24e6b507e676fc30ed13d6/argcat-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7795a31093a16d592eb91413863775a26424906a63dad97c3082664723d9d6ed",
          "md5": "5a792457d1c5c3e15c0f538f50615d94",
          "sha256": "02588ed9214d469b561abc34e57db5ba3bf744d079a8c5213c65575969fda20b"
        },
        "downloads": -1,
        "filename": "argcat-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5a792457d1c5c3e15c0f538f50615d94",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 16941,
        "upload_time": "2022-12-04T14:16:44",
        "upload_time_iso_8601": "2022-12-04T14:16:44.358578Z",
        "url": "https://files.pythonhosted.org/packages/77/95/a31093a16d592eb91413863775a26424906a63dad97c3082664723d9d6ed/argcat-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9741fb9e9f0af629b3b91ab7a7a72bf57adcf3cb5684c5708133abe50541e58a",
          "md5": "6059e606646df9d3a4f673b12e3f7527",
          "sha256": "13d650e8f4efab61d47be997636bb73f6a54b9806f69c4aad0e76e772cb49dd3"
        },
        "downloads": -1,
        "filename": "argcat-0.4.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6059e606646df9d3a4f673b12e3f7527",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 14736,
        "upload_time": "2023-02-18T11:11:35",
        "upload_time_iso_8601": "2023-02-18T11:11:35.132814Z",
        "url": "https://files.pythonhosted.org/packages/97/41/fb9e9f0af629b3b91ab7a7a72bf57adcf3cb5684c5708133abe50541e58a/argcat-0.4.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a911c7591ef58b010da40b2b1b7bd1a19743fc8558ae03f9c2c748c9b7646a1",
          "md5": "e3db002b1bd8d3584b8e4c917538e1ce",
          "sha256": "c531fc2079ce322e671b2c3128a392232621d7df0a5c327e9367008bea14fb2c"
        },
        "downloads": -1,
        "filename": "argcat-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e3db002b1bd8d3584b8e4c917538e1ce",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 21462,
        "upload_time": "2023-02-18T11:11:38",
        "upload_time_iso_8601": "2023-02-18T11:11:38.574718Z",
        "url": "https://files.pythonhosted.org/packages/9a/91/1c7591ef58b010da40b2b1b7bd1a19743fc8558ae03f9c2c748c9b7646a1/argcat-0.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9741fb9e9f0af629b3b91ab7a7a72bf57adcf3cb5684c5708133abe50541e58a",
        "md5": "6059e606646df9d3a4f673b12e3f7527",
        "sha256": "13d650e8f4efab61d47be997636bb73f6a54b9806f69c4aad0e76e772cb49dd3"
      },
      "downloads": -1,
      "filename": "argcat-0.4.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6059e606646df9d3a4f673b12e3f7527",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 14736,
      "upload_time": "2023-02-18T11:11:35",
      "upload_time_iso_8601": "2023-02-18T11:11:35.132814Z",
      "url": "https://files.pythonhosted.org/packages/97/41/fb9e9f0af629b3b91ab7a7a72bf57adcf3cb5684c5708133abe50541e58a/argcat-0.4.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9a911c7591ef58b010da40b2b1b7bd1a19743fc8558ae03f9c2c748c9b7646a1",
        "md5": "e3db002b1bd8d3584b8e4c917538e1ce",
        "sha256": "c531fc2079ce322e671b2c3128a392232621d7df0a5c327e9367008bea14fb2c"
      },
      "downloads": -1,
      "filename": "argcat-0.4.1.tar.gz",
      "has_sig": false,
      "md5_digest": "e3db002b1bd8d3584b8e4c917538e1ce",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 21462,
      "upload_time": "2023-02-18T11:11:38",
      "upload_time_iso_8601": "2023-02-18T11:11:38.574718Z",
      "url": "https://files.pythonhosted.org/packages/9a/91/1c7591ef58b010da40b2b1b7bd1a19743fc8558ae03f9c2c748c9b7646a1/argcat-0.4.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}