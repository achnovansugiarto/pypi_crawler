{
  "info": {
    "author": "Ray Burr",
    "author_email": "ryb@nightmare.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: End Users/Desktop",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Security :: Cryptography",
      "Topic :: Text Processing",
      "Topic :: Utilities"
    ],
    "description": "\n[![PyPI](https://img.shields.io/pypi/v/stramp.svg?logo=python&logoColor=white)](https://pypi.org/project/stramp/)\n![Python package build status](https://img.shields.io/github/workflow/status/wonkyweirdy/stramp/Python%20package?logo=python&logoColor=white)\n\n# stramp\n\nTimestamp a structured text document such that the content of any section or subsection can later be proved\nto have existed at (approximately) the time the document was stamped.\n\n**STR**uctured text st**AMP** &rarr; STRAMP\n\nThis tool uses\n[decentralized trusted timestamping](https://en.wikipedia.org/wiki/Trusted_timestamping#Decentralized_timestamping_on_the_blockchain)\ntechnology that is backed by the Bitcoin [blockchain](https://en.wikipedia.org/wiki/Blockchain_(database)).\nThe protocol used is [OpenTimestamps](https://opentimestamps.org/). Servers supporting this protocol are public\nand free to use.\n\nThe advantage of Stramp over using another [OpenTimestamps client](https://pypi.org/project/opentimestamps-client/)\ndirectly is that you can prove one or more chosen sections of your document selectively without revealing\nthe content of the entire document. This is useful if you collect notes for a project in a large file where\nsome sections may have information you don't want to reveal and other sections have text for which you might\nwant timestamp proof at some later time.\n\nIt is intended for this command to be run periodically in the background with a service such as\n[cron](https://en.wikipedia.org/wiki/Cron). I'd recommend setting it up to run once or twice a day.\n\n## Applications\n\nThis tool has the same applications as digital trusted timestamping in general, but the convenience and zero cost\nmake it much more practical. Set it up to run in the background on your note files, and with practically\nno further effort you'll get the benefit in case you ever need it: \n\n- Patent documentation - This can't be directly used to win a patent since everyone has switched to first-to-file.\nHowever, it may still be useful for [defensive publication](https://en.wikipedia.org/wiki/Defensive_publication)\nto prevent someone else from patenting an idea you came up with.\n\n- Trade secrets - Prove that you had the idea of doing something a certain way.\n\n- Simple bragging rights - Write your idea or prediction in your notes so you can later prove you had it\nat a specific date. \n\n## Installation\n\nStramp requires Python 3.6 or newer. In addition to the Python library dependencies (automatically installed,\nassuming you use `pip`), you will also need the `ots` command from\n[opentimestamps-client](https://pypi.org/project/opentimestamps-client/):\n\n```\npip install opentimestamps-client\n```\n\nIf Stramp is available from [PyPI](https://pypi.org/project/stramp/), you can install it with:\n\n```\npip install stramp\n```\n\nOther options are to install it from the GitHub repository directly:\n\n```\npip install -U \"git+https://github.com/wonkyweirdy/stramp#egg=stramp\"\n```\n\nor to install from a cloned git repository:\n\n```\ngit clone https://github.com/wonkyweirdy/stramp.git\npip install ./stramp\n```\n\n## How it works\n\n1. Each document files is copied to create an archive copy. The archive copy is stored in the directory\n`~/.stramp/data` named based on the hash of the file.\n\n2. The text of each document, individual sections, and recursive subsections, is hashed using a\n[secure hash algorithm](https://en.wikipedia.org/wiki/Secure_Hash_Algorithms) to produce\nhexadecimal hash strings. These hash strings are collected into a JSON file along with the associated file paths\nand some other metadata. The JSON file goes in the `~/.stramp/new` directory.\n\n4. The generated JSON hash file is then timestamped using the `ots stamp` command. Once stamped, the JSON hash file\nand its associated `*.ots` file are moved into the `~/.stramp/stamped` directory. At this point, the stamp data will\nhave been submitted to the public calendar servers. It will take time for the timestamp to be processed on the\nservers.\n\n5. The stamp file (`*.ots`) is upgraded using `ots upgrade`. Once upgraded, the JSON hash file\nand its associated `*.ots` file are moved into the `~/.stramp/complete` directory. The upgraded stamp will\ncontain all the information needed to trace the timestamp back to the specific transaction and block in the\nBitcoin blockchain. Note that for a hash file stamped on the current run, the upgrade will happen on a subsequent\nrun. It can take a few hours before the path is confirmed into a Bitcoin block. There is a built-in age limit\nthat will prevent new (less than eight hours old) stamps from being upgraded; this is to help ensure that all the\nservers had enough time to process the stamp completely.\n\nThe `new` and `stamped` directories are used as queues. If the `ots stamp` or `ots upgade` command fails for a\nhash file on one run, it will be retried on a later run.\n\n## Configuration\n\nThe configuration file is expected to be at `~/.stramp/config.json`.\n\nExample content:\n\n```json\n{\n    \"ots_command_path\": \"/usr/local/bin/ots\",\n    \"documents\": [\n        {\n          \"path\": \"/home/joe/Documents/personal-notes.org\",\n          \"format\": \"org\"\n        },\n        {\n          \"path\": \"/home/joe/Documents/project1/project1.md\",\n          \"format\": \"commonmark\"\n        }\n    ]\n}\n```\n\nThe `ots_command_path` specification is optional. It defaults to just `\"ots\"`, expecting that command to be found\nin the command search path.\n\n## Usage\n\nStramp will normally be called as:\n\n```\nstramp -x\n```\n\nThe `-x` option implies `-p`, so the result of the above command would be to hash all the documents in the\nconfigured list and then do any processing (see the *How it works* section above).\n\nCommand help is available with `stramp --help`:\n\n```\nUsage: stramp [OPTIONS] [FILES]...\n\nOptions:\n  -x, --hash       Hash the files listed in the configuration\n  -p, --process    Stamp or upgrade any hash files that need processing\n  -c, --hash-only  Just write generated hash file JSON to standard output\n  -v, --verbose    Print more information\n  -V, --version    Print the application version\n  --help           Show this message and exit.\n```\n\n## Stamp verification\n\nStramp does not implement anything to help with verification. The easiest way to check a stamp is to drop it\nonto the [opentimestamps.org](https://opentimestamps.org/) web page. If you want to check it locally, it is more\ninvolved since you need to run (or have access to) a server running Bitcoin Core.\n\n## Document formats\n\n### Org-mode\n\n[Org-mode](https://orgmode.org/) format as UTF-8 is supported since this is what I use for my notes.\nThe Org-mode support may not even be complete since have only implemented it to support the Org features\nI use.\n\n### Markdown\n\n[Markdown](https://en.wikipedia.org/wiki/Markdown) is supported. The specific variant of Markdown supported\nis CommonMark. Other variants may work as long as the headings can still be correctly interpreted using\nthe rules of CommonMark.\n\nMarkdown support depends on [Marko](https://github.com/frostming/marko). Either install Marko separately\nor specify `commonmark` extra when installing with `pip`:\n\n```\npip install \"stramp[commonmark]\"\n```\n\n### Future formats\n\nI would consider adding support for other\n[lightweight markup languages](https://en.wikipedia.org/wiki/Lightweight_markup_language):\n\n- [reStructuredText](https://docutils.sourceforge.io/rst.html)\n- [MediaWiki Wikitext](https://www.mediawiki.org/wiki/Wikitext)\n- [Tiki Wiki](https://doc.tiki.org/Wiki-Syntax-Text)\n- [DokuWiki](https://www.dokuwiki.org/wiki:syntax)\n- others?\n\nMaybe other structured document formats:\n\n- HTML\n- ENEX (Evernote)\n\n## Security\n\nI am aware that the content of a section could be deduced from only a hash in a hash file if that text\nis short or predictable. For example, this would be a problematic in an Org-mode text file:\n\n```\n* Passwords:\n** letmein\n** YouCantGuessThis\n``` \n\nI'm ignoring this for now in the interest of keeping things simple.\n\n## Legal\n\nMy *opinion* is that this tool should *in principal* allow creating indisputable proof that the text of a\nsection of a document existed at a specific point of time. The proof will continue to be indisputable for\nas long as the cryptography involved can be trusted. However, we don't know for sure there isn't someone in a\nsecret lab somewhere able to trivially forge an SHA-2 hash.\n\nI can't promise this tool is appropriate for any certain use case. Users need to evaluate this for themselves.\nQuoth the LICENSE file:\n\n> The software is provided \"as is\", without warranty of any kind, express or implied, including but not limited to the\n> warranties of merchantability, fitness for a particular purpose and non-infringement. In no event shall the authors or\n> copyright holders be liable for any claim, damages or other liability, whether in an action of contract, tort or\n> otherwise, arising from, out of or in connection with the software or the use or other dealings in the software.\n\n## Similar and related projects\n\n- https://opentimestamps.org/\n- https://github.com/opentimestamps/opentimestamps-client\n- https://github.com/reale/timestampy\n- https://github.com/bitpay/i-made-this\n\n\n",
    "description_content_type": "text/markdown; charset=UTF-8; variant=GFM",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/wonkyweirdy/stramp",
    "keywords": "blockchain timestamp opentimestamps",
    "license": "mit",
    "maintainer": "",
    "maintainer_email": "",
    "name": "stramp",
    "package_url": "https://pypi.org/project/stramp/",
    "platform": "any",
    "project_url": "https://pypi.org/project/stramp/",
    "project_urls": {
      "Homepage": "https://github.com/wonkyweirdy/stramp"
    },
    "release_url": "https://pypi.org/project/stramp/0.3.2/",
    "requires_dist": [
      "click (>=6.7)",
      "anytree (>=2.7.2)",
      "dataclasses (>=0.6) ; python_version < \"3.7\"",
      "importlib-metadata (>=1.0) ; python_version < \"3.8\"",
      "marko ; extra == 'commonmark'",
      "pytest ; extra == 'testing'",
      "pytest-cov ; extra == 'testing'",
      "click ; extra == 'testing'"
    ],
    "requires_python": ">=3.6",
    "summary": "Blockchain-backed timestamp proof for structured document sections",
    "version": "0.3.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7401132,
  "releases": {
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a3d955bb32518b76c79822f4a57a0f3fbe2b12c6b4a82f649857d461165a819a",
          "md5": "08ae79526ed1dd038a45001157f541e3",
          "sha256": "6b51627b4fd225565587b4c42fcc7be1a8f51120db7f438bc18daf8f383777b6"
        },
        "downloads": -1,
        "filename": "stramp-0.2.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "08ae79526ed1dd038a45001157f541e3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11631,
        "upload_time": "2020-05-31T21:34:12",
        "upload_time_iso_8601": "2020-05-31T21:34:12.956528Z",
        "url": "https://files.pythonhosted.org/packages/a3/d9/55bb32518b76c79822f4a57a0f3fbe2b12c6b4a82f649857d461165a819a/stramp-0.2.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8e053fab7946e3a2eb2cb060127bb55428a2181f793f34b9e7b7d322543644df",
          "md5": "f0bbd79366c6c3256e1a77e73730520f",
          "sha256": "1cf3931c226a997822a70ade9d31e2ae835cac7a630c1d37d7e10a4cef8c3b44"
        },
        "downloads": -1,
        "filename": "stramp-0.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "f0bbd79366c6c3256e1a77e73730520f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19522,
        "upload_time": "2020-05-31T21:34:14",
        "upload_time_iso_8601": "2020-05-31T21:34:14.805083Z",
        "url": "https://files.pythonhosted.org/packages/8e/05/3fab7946e3a2eb2cb060127bb55428a2181f793f34b9e7b7d322543644df/stramp-0.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "31b59cb7cdb927c84f2a14b979e3b7482443ac0f7a5943e426ad2de164858d7a",
          "md5": "20a20a695e658f79fa978180d68291e8",
          "sha256": "85280008d2d37e2d3a763bd950889663e95f28e85aeddcd69ba4f5a4b3c69481"
        },
        "downloads": -1,
        "filename": "stramp-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "20a20a695e658f79fa978180d68291e8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 13796,
        "upload_time": "2020-06-04T21:49:52",
        "upload_time_iso_8601": "2020-06-04T21:49:52.295339Z",
        "url": "https://files.pythonhosted.org/packages/31/b5/9cb7cdb927c84f2a14b979e3b7482443ac0f7a5943e426ad2de164858d7a/stramp-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bcfb87dfc0a32933469afb47e3cd4dbddf3ffae55c37a6b00316e818ee765f52",
          "md5": "447a488f62f1d59fd3db0ac839d90202",
          "sha256": "c0de2917ee98e9ce40bc7fa7c8b83b43a132721a26fc5acb62e2984cbac8b98a"
        },
        "downloads": -1,
        "filename": "stramp-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "447a488f62f1d59fd3db0ac839d90202",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 21230,
        "upload_time": "2020-06-04T21:49:53",
        "upload_time_iso_8601": "2020-06-04T21:49:53.189666Z",
        "url": "https://files.pythonhosted.org/packages/bc/fb/87dfc0a32933469afb47e3cd4dbddf3ffae55c37a6b00316e818ee765f52/stramp-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5dd4bde4fd2354b651859cadad7f835924b03a2c2b1b3270a90bd9767f62ab3e",
          "md5": "2c7ccc1a5941284cb39b0b6765bf1077",
          "sha256": "94384d30069b59ecca36170ca28c3f2bdfe298b02d1404c86af3228fc8dbbb49"
        },
        "downloads": -1,
        "filename": "stramp-0.3.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2c7ccc1a5941284cb39b0b6765bf1077",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 13932,
        "upload_time": "2020-06-05T00:49:53",
        "upload_time_iso_8601": "2020-06-05T00:49:53.908973Z",
        "url": "https://files.pythonhosted.org/packages/5d/d4/bde4fd2354b651859cadad7f835924b03a2c2b1b3270a90bd9767f62ab3e/stramp-0.3.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f2b9e5203ad8a2a8c55d8bf2e3f1b655b8a50a59686eb6ccb5a49c8029df579b",
          "md5": "b92dc334518a5e27483aea3dad7ea1d6",
          "sha256": "a6c541045610a982e92de425c64593cf43170396743dbf192a166f38bc3684e3"
        },
        "downloads": -1,
        "filename": "stramp-0.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b92dc334518a5e27483aea3dad7ea1d6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 21554,
        "upload_time": "2020-06-05T00:49:54",
        "upload_time_iso_8601": "2020-06-05T00:49:54.687736Z",
        "url": "https://files.pythonhosted.org/packages/f2/b9/e5203ad8a2a8c55d8bf2e3f1b655b8a50a59686eb6ccb5a49c8029df579b/stramp-0.3.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5dd4bde4fd2354b651859cadad7f835924b03a2c2b1b3270a90bd9767f62ab3e",
        "md5": "2c7ccc1a5941284cb39b0b6765bf1077",
        "sha256": "94384d30069b59ecca36170ca28c3f2bdfe298b02d1404c86af3228fc8dbbb49"
      },
      "downloads": -1,
      "filename": "stramp-0.3.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2c7ccc1a5941284cb39b0b6765bf1077",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 13932,
      "upload_time": "2020-06-05T00:49:53",
      "upload_time_iso_8601": "2020-06-05T00:49:53.908973Z",
      "url": "https://files.pythonhosted.org/packages/5d/d4/bde4fd2354b651859cadad7f835924b03a2c2b1b3270a90bd9767f62ab3e/stramp-0.3.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f2b9e5203ad8a2a8c55d8bf2e3f1b655b8a50a59686eb6ccb5a49c8029df579b",
        "md5": "b92dc334518a5e27483aea3dad7ea1d6",
        "sha256": "a6c541045610a982e92de425c64593cf43170396743dbf192a166f38bc3684e3"
      },
      "downloads": -1,
      "filename": "stramp-0.3.2.tar.gz",
      "has_sig": false,
      "md5_digest": "b92dc334518a5e27483aea3dad7ea1d6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 21554,
      "upload_time": "2020-06-05T00:49:54",
      "upload_time_iso_8601": "2020-06-05T00:49:54.687736Z",
      "url": "https://files.pythonhosted.org/packages/f2/b9/e5203ad8a2a8c55d8bf2e3f1b655b8a50a59686eb6ccb5a49c8029df579b/stramp-0.3.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}