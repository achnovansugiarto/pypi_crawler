{
  "info": {
    "author": "Derek Yarnell <derek@umiacs.umd.edu>, Mikle Green",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# aiorgwadmin\n\n[![Documentation Status](https://readthedocs.org/projects/rgwadmin/badge/?version=latest)](https://rgwadmin.readthedocs.io/en/latest/?badge=latest)\n\naiorgwadmin is fork of rgwadmin library.\n\naiorgwadmin is an async Python library to access the Ceph Object Storage Admin API.\n\nhttp://docs.ceph.com/docs/master/radosgw/adminops/\n\n\n## API Example Usage\n\n```python\nimport asyncio\nfrom aiorgwadmin import RGWAdmin\n\nasync def main():\n    rgw = RGWAdmin(access_key='XXX', secret_key='XXX', server='obj.example.com')\n    await rgw.create_user(\n        uid='liam',\n        display_name='Liam Monahan',\n        email='liam@umiacs.umd.edu',\n        user_caps='usage=read, write; users=read',\n        max_buckets=1000)\n    await rgw.set_user_quota(\n        uid='liam',\n        quota_type='user',\n        max_size_kb=1024 * 1024,\n        enabled=True)\n    await rgw.remove_user(uid='liam', purge_data=True)\n\nloop = asyncio.get_event_loop()\nloop.run_until_complete(main())\n```\n\n## User Example Usage\n\n```python\nimport asyncio\nfrom aiorgwadmin import RGWAdmin, RGWUser\n\nasync def main():\n    RGWAdmin.connect(access_key='XXX', secret_key='XXX', server='obj.example.com')\n    u = await RGWUser.create(user_id='test', display_name='Test User')\n    u.user_quota.size = 1024 * 1024  # in bytes\n    u.user_quota.enabled = True\n    await u.save()\n    await u.delete()\n\nloop = asyncio.get_event_loop()\nloop.run_until_complete(main())\n```\n\n## Requirements\n\naiorgwadmin requires the following Python packages:\n\n * [aiohttp](https://docs.aiohttp.org)\n * [requests](http://python-requests.org/)\n * [requests-aws](https://github.com/tax/python-requests-aws)\n\nAdditionally, you need to have a [Ceph](http://www.ceph.org) Object Storage\ninstance with a user that has appropriate caps (capabilities) on the parts of\nthe API that you want to access.  See the\n[Ceph Object Storage](http://docs.ceph.com/docs/master/radosgw/) page for more\ninformation.\n\n### Compatibility\naiorgwadmin implements all documented Admin API operations or recent versions of\nCeph.  We also implement some of the undocumented ones, too...\n\n## Installation\n\n```pip install aiorgwadmin```\n\n\n## License\n\n    rgwadmin - a Python interface to the Rados Gateway Admin API\n    Copyright (C) 2015  UMIACS\n\n    This library is free software; you can redistribute it and/or\n    modify it under the terms of the GNU Lesser General Public\n    License as published by the Free Software Foundation; either\n    version 2.1 of the License, or (at your option) any later version.\n\n    This library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n    Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public\n    License along with this library; if not, write to the Free Software\n    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\n    Email:\n        github@umiacs.umd.edu\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mikle-green/aiorgwadmin",
    "keywords": "ceph,radosgw,admin api,async",
    "license": "LGPL v2.1",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aiorgwadmin",
    "package_url": "https://pypi.org/project/aiorgwadmin/",
    "platform": "",
    "project_url": "https://pypi.org/project/aiorgwadmin/",
    "project_urls": {
      "Homepage": "https://github.com/mikle-green/aiorgwadmin"
    },
    "release_url": "https://pypi.org/project/aiorgwadmin/1.0.0/",
    "requires_dist": [
      "aiohttp",
      "requests",
      "requests-aws"
    ],
    "requires_python": ">=3.6",
    "summary": "Python Rados Gateway Admin API",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12766776,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a8ef8a56cd908fd75aee2221a2cd2cf320a916e4509f815fabfd33e18ef102b6",
          "md5": "ef4ae6ad6f0e5c2a5faa96ae5ca82ee1",
          "sha256": "cd3b59e30a1ddd0c607129d183a98c109dc78bb4e5ba93eba384174d001d6f45"
        },
        "downloads": -1,
        "filename": "aiorgwadmin-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ef4ae6ad6f0e5c2a5faa96ae5ca82ee1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 21123,
        "upload_time": "2022-02-02T15:41:46",
        "upload_time_iso_8601": "2022-02-02T15:41:46.885795Z",
        "url": "https://files.pythonhosted.org/packages/a8/ef/8a56cd908fd75aee2221a2cd2cf320a916e4509f815fabfd33e18ef102b6/aiorgwadmin-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0b08bacedfd9b88ccbe760700dd78445550f1f516bfaa63909d96c7bfdbf86b5",
          "md5": "e59787a01901c2d0c1b76c9fc00f2eec",
          "sha256": "642ce3f08b089c019e4b7af0b38d7091a85cba28fab8a280556b3b60c4a82ed2"
        },
        "downloads": -1,
        "filename": "aiorgwadmin-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e59787a01901c2d0c1b76c9fc00f2eec",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 31305,
        "upload_time": "2022-02-02T15:41:48",
        "upload_time_iso_8601": "2022-02-02T15:41:48.453911Z",
        "url": "https://files.pythonhosted.org/packages/0b/08/bacedfd9b88ccbe760700dd78445550f1f516bfaa63909d96c7bfdbf86b5/aiorgwadmin-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a8ef8a56cd908fd75aee2221a2cd2cf320a916e4509f815fabfd33e18ef102b6",
        "md5": "ef4ae6ad6f0e5c2a5faa96ae5ca82ee1",
        "sha256": "cd3b59e30a1ddd0c607129d183a98c109dc78bb4e5ba93eba384174d001d6f45"
      },
      "downloads": -1,
      "filename": "aiorgwadmin-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ef4ae6ad6f0e5c2a5faa96ae5ca82ee1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 21123,
      "upload_time": "2022-02-02T15:41:46",
      "upload_time_iso_8601": "2022-02-02T15:41:46.885795Z",
      "url": "https://files.pythonhosted.org/packages/a8/ef/8a56cd908fd75aee2221a2cd2cf320a916e4509f815fabfd33e18ef102b6/aiorgwadmin-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0b08bacedfd9b88ccbe760700dd78445550f1f516bfaa63909d96c7bfdbf86b5",
        "md5": "e59787a01901c2d0c1b76c9fc00f2eec",
        "sha256": "642ce3f08b089c019e4b7af0b38d7091a85cba28fab8a280556b3b60c4a82ed2"
      },
      "downloads": -1,
      "filename": "aiorgwadmin-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e59787a01901c2d0c1b76c9fc00f2eec",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 31305,
      "upload_time": "2022-02-02T15:41:48",
      "upload_time_iso_8601": "2022-02-02T15:41:48.453911Z",
      "url": "https://files.pythonhosted.org/packages/0b/08/bacedfd9b88ccbe760700dd78445550f1f516bfaa63909d96c7bfdbf86b5/aiorgwadmin-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}