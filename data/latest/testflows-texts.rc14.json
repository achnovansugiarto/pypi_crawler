{
  "info": {
    "author": "Vitaliy Zakaznikov",
    "author_email": "vzakaznikov@testflows.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3"
    ],
    "description": "![TestFlows.com Open-Source Software Testing Framework](https://raw.githubusercontent.com/testflows/TestFlows-ArtWork/master/images/logo.png)\n\n# TestFlows-Texts\n\nUse `testflows.texts` Python module to help you write auto verified software documentation\nby combining your text with the verification procedure of the described functionality\nin the same source file while leveraging the power and flexibility of [TestFlows.com Open-Source Test Framework](https://testflows.com).\n\nSource files for auto verified documentation by convention have `.tfd` extension\nand are written using Markdown. Therefore, all `.tfd` files are valid\nMarkdown files. However, `.tfd` files are only the source files for your documentation\nthat must be executed using `tfs document run` command to produce final \nMarkdown documentation files.\n\n```bash\n$ tfs document run --input my_document.tfd --output my_document.md\n```\n\n* [Requirements](#requirements)\n* [Installation](#installation)\n* [Writing Auto Verified Docs](#writing-auto-verified-docs)\n* [Tutorial](#tutorial)\n* [Passing Arguments](#passing-arguments)\n* [Controlling Output Format](#controlling-output-format)\n* [Debugging Errors](#debugging-errors)\n* [Using `tfs document run`](#using-tfs-document-run)\n\n## Requirements\n\n* Python3 >= 3.8\n\n## Installation\n\nYou can install `testflows.texts` using `pip3` command:\n\n```bash\npip3 install --upgrade testflows.texts\n```\n\nAfter installing `testflows.texts` you will also have `tfs` command available in your environment.\n\n## Writing Auto Verified Docs\n\nFollow the example Markdown document to get to know how you can write auto verified docs yourself.\n\n```markdown\n    ## This is a heading\n\n    This file is written using Markdown where you can have any number\n    of `python:testflows` code blocks that contain executable Python code.\n    \n    ```python:testflows\n    # This is Python code that will be executed when .tfd document is run.\n    \n    msg = \"Hello TestFlows Texts\"\n    ```\n \n    The scope is shared between all the code blocks in the same document.\n    \n    ```python:testflows\n    # so `msg` variable defined above can also be accessed in this\n    # `python:testflows` code block\n\n    new_msg = msg + \" Thanks for making verifying docs so easy!\"\n    ```\n    \n    The output of executing `.tfd` document using `tfs document run`\n    is the final `.md` file with all the `python:testflows` code blocks\n    removed and replaced with the text added to the document using\n    the `text()` function.\n\n    ```python:testflows\n    # Let's use `text()` function to add some text to our document\n    # dynamically in our Python code\n \n    text(\"add this line to the final Markdown document\")\n    ```\n    \n    Any text outside the `python:testflows` code blocks are treated as Python\n    f-strings. This allows you to specify expressions for substitutions.\n    See [Python formatted string literals](https://docs.python.org/3/tutorial/inputoutput.html#formatted-string-literals)\n    for more details.\n    \n    Here is an example where we will substitute the value of `msg` variable next {msg}.\n    But with Python f-strings you can specify even complex expressions. For example, we can \n    convert our string in `msg` to title case as follows {msg.title()}.\n    \n    You can double your curly brackets to escape them when substitution expression is not needed\n    using `{{` or `}}`.\n    \n    By the way, your document can't contain any triple quotes. If you need them then you have to\n    add them using `{triple_quotes}` expression. For example,\n    \n    ```markdown\n    This text has {triple_quotes} triple quotes.\n    ```\n    \n    Well, this is pretty much it. With `testflows.texts` you have full power of full featured\n    test framework and Python language at your disposal to make sure your documentation always\n    stays upto date.\n```\n\nNow if you want to give it a try then save the above Markdown into `test.tfd` file but make sure to remove the indentation.\nThen you can run it as\n\n```bash\n$ tfs document run -i test.tfd -o -\n```\n\nand you should get the output of the final Markdown document printed to the stdout.\n\n```bash\n$ tfs document run -i test.tfd -o -\n## This is a heading\n\nThis file is written using Markdown where you can have any number\nof `python:testflows` code blocks that contain executable Python code.\n...\n```\n\n## Tutorial\n\nHere a simple tutorial to introduce you to using `testflows.texts`.\n\n```markdown\n    # TestFlows Texts Tutorial\n\n    Let's see `testflows.texts` in action by writing auto verified\n    documentation for the `-a` option of the `ls` command.\n\n    The man page for the `ls` utility says the following:\n\n    ```\n    NAME\n           ls - list directory contents\n\n    SYNOPSIS\n           ls [OPTION]... [FILE]...\n\n    DESCRIPTION\n           List  information  about  the FILEs (the current directory by default).\n           Sort entries alphabetically if none of -cftuvSUX nor --sort  is  speci‐\n           fied.\n\n           Mandatory  arguments  to  long  options are mandatory for short options\n           too.\n\n           -a, --all\n                  do not ignore entries starting with .\n    ```\n\n    Let's see how `-a` option works.\n\n    First, create a file that starts with `.` using the `touch` command\n    ```python:testflows\n    from subprocess import run\n\n    command = \"touch .hidden_file\"\n    ```\n\n    ```bash\n    {command}\n    ```\n    ```python:testflows\n    run(command, shell=True, check=True)\n    # add clean up at the end of our document generation\n    cleanup(run, \"rm -rf .hidden_file\", shell=True, check=True)\n    ```\n\n    Let's now run\n    ```python:testflows\n\n    ls_a_command = \"ls -a | grep .hidden_file\"\n\n    cmd = run(ls_a_command, shell=True, capture_output=True, text=True)\n\n    assert cmd.returncode == 0, \"returncode {cmd.returncode} is not 0\"\n    assert \".hidden_file\" in cmd.stdout, \"hidden file '.hidden_file' in not in the outout\"\n    ```\n\n    ```bash\n    {ls_a_command}\n    ```\n\n    and you should see our `.hidden_file` listed\n\n    ```bash\n    {cmd.stdout.strip()}\n    ```\n\n    Voilà, `ls -a` does indeed show hidden files!\n```\n\nNow save this source file as `tutorial.tfd` and execute it to produce the final Markdown\nfile `tutorial.md` that we can use on our documentation site.\n\n```\ntfs document run -i tutorial.tfd -o tutorial.md\n```\n\nWe know that the instructions in this article are correct as `testflows.texts` has executed them during\nwriting of `tutorial.md` just like a technical writer would execute the commands\nas part of the process of writing a technical article.\n\nMoreover, we can rerun our documentation any time a new version of `ls` utility is ready\nto be shipped to make sure our documentation is still valid and the software still behaves as described. \n\nBy the way, here is the final Markdown we get\n\n```markdown\n    # TestFlows Texts Tutorial\n\n    Let's see `testflows.texts` in action by writing auto verified\n    documentation for the `-a` option of the `ls` command.\n\n    The man page for the `ls` utility says the following:\n\n    ```\n    NAME\n           ls - list directory contents\n\n    SYNOPSIS\n           ls [OPTION]... [FILE]...\n\n    DESCRIPTION\n           List  information  about  the FILEs (the current directory by default).\n           Sort entries alphabetically if none of -cftuvSUX nor --sort  is  speci‐\n           fied.\n\n           Mandatory  arguments  to  long  options are mandatory for short options\n           too.\n\n           -a, --all\n                  do not ignore entries starting with .\n    ```\n\n    Let's see how `-a` option works.\n\n    First, create a file that starts with `.` using the `touch` command\n\n    ```bash\n    touch .hidden_file\n    ```\n\n    Let's now run\n\n    ```bash\n    ls -a | grep .hidden_file\n    ```\n\n    and you should see our `.hidden_file` listed\n\n    ```bash\n    .hidden_file\n    ```\n\n    Voilà, `ls -a` does indeed show hidden files!\n```\n\n## Passing Arguments\n\nExecution of any `.tfd` file using `tfs document run` command results in execution of a document writer program.\nThis is similar to the test programs you write with [TestFlows.com Open-Source Testing Framework](https://testflows.com).\n\nYou can control different aspects of writer program execution by passing arguments as follows.\n\n```bash\ntfs document run -t test.tfd -o test.md -- <writer program arguments>\n```\n\nFor example, to see all the arguments your document writer program can take pass `-h/--help` argument\n\n```bash\ntfs document run -- --help\n```\n\n## Controlling Output Format\n\nYou can control output format by passing `-o/--output` argument to your writer program.\n\nFor example,\n\n```bash\ntfs document run -i test.tfd -o test.md -- --output classic\n```\n\nSee `-h/--help` for other formats.\n\n## Debugging Errors\n\nHere are some common errors that you might run into while writing your `.tfd` source files.\n\nAll exceptions will point to the line number where the error has occured.\n\n### Unescaped Curly Brackets\n\nIf you forget to double your curly brackets when you are not using f-string expression\nthen you will see an error.\n\nFor example,\n\n```markdown\nHello there\n\nOops I forgot to double {quote} my curly brackets.\n```\n\nwhen executed will result in the `NameError`.\n\n```bash\n                10ms   ⟥⟤ Error test.tfd, /test.tfd, NameError\n                         Traceback (most recent call last):\n                           File \"/tmp/tmp_ckk4f3m.py\", line 1, in <module>\n                             text(fr\"\"\"Oops I forgot to double {quote} my curly brackets.\n                         NameError: name 'quote' is not defined\n\n                         Error occured in the following text:\n\n                           3|> Oops I forgot to double {quote} my curly brackets.\n```\n\n### Syntax Errors\n\nIf you have a syntax error in the `python:testflows` block you will get an error.\n\nFor example,\n\n```markdown\n    Hello there\n\n    ```python:testflows\n    x = 1\n    y = 2 boo \n    ```\n```\n\nwhen executed will result in the SyntaxError.\n\n```bash\n                11ms   ⟥⟤ Error test.tfd, /test.tfd, SyntaxError\n                         Traceback (most recent call last):\n                           File \"/home/user/.local/lib/python3.8/site-packages/testflows/texts/executable.py\", line 87, in execute\n                             exec(compile(source_code, source_name, 'exec'),\n                         SyntaxError: invalid syntax (tmp7e6op1y_.py, line 2)\n\n                         Syntax Error occured in the following text:\n\n                           3|  ```python:testflows\n                           4|  x = 1\n                           5|> y = 2 boo \n                           6|  ```\n```\n\n### Triple Quotes\n\nIf your text have triple quotes like `\"\"\"` it will result in an error.\n\nFor example,\n\n```markdown\nHello There\n\nThis text has \"\"\" triple quotes.\n```\n\nwhen executed will result in `SyntaxError`.\n\n```bash\n                 9ms   ⟥⟤ Error test.tfd, /test.tfd, SyntaxError\n                         Traceback (most recent call last):\n                           File \"/home/user/.local/lib/python3.8/site-packages/testflows/texts/executable.py\", line 87, in execute\n                             exec(compile(source_code, source_name, 'exec'),\n                         SyntaxError: invalid syntax (tmph44nbvgo.py, line 1)\n\n                         Syntax Error occured in the following text:\n\n                           3|> This test has \"\"\" triple quotes.\n```\n\nThe workaround is to use `{triple_quotes}` expression to output `\"\"\"`.\n\nFor example,\n\n```markdown\n    Hello There\n\n    This text has {triple_quotes} triple quotes.\n```\n\nwhere `triple_quotes` is provided by default by `testflows.texts` module. This is equivalent to the following.\n\n```markdown\n    ```python:testflows\n    triple_quotes = '\"\"\"'\n    ```\n    Hello There\n\n    This text has {triple_quotes} triple quotes.\n```\n\n## Using `tfs document run`\n\n```bash\n$ tfs document run -h\nusage: tfs document run [-h] [-i path [path ...]] [-o [path]] [-f]\n\n  ---- o o o ----\n |   o       o   |\n | 1 o 10010 o 0 |\n |   o       o   |    TestFlows.com Open-Source Software Testing Framework v1.7.211208.1222904\n  ---  o o oxx --\n /           xx   \\\n/  ^^^        xx   \\\n ------------------\n\nRun executable document.\n\nExecutable documents are Markdown documents that\ncontain `python:testflows` code blocks which may contain\nany Python code that will be run during document execution.  \n\nAll text within executable document except for the\n`python:testflows` code blocks are treated as Python f-strings.\nTherefore, you must escape any `{`, `}` characters by doubling\nthem, for example: `{{` or `}}`, otherwise they will be treated\nas f-string expressions.\n\nText must not contain triple quotes `\"\"\"`. If you need them\nthen you must use either `text()` function within `python:testflows` code block\nto explicitly add them to the the text or use `{triple_quotes}` expression. \n\nFor example:\n    ```python:testflows\n    text('adding triple quotes \"\"\" to text')\n    ``` \n    or\n\n    {triple_quotes}\n    \n\nSpecify '--' at the end of the command line options to pass\noptions to the executable document writer program itself.\n\nFor example:\n   tfs document run -i <path>--o <path> -- --help\n\nYou must set PYTHONPATH when modules needed by the executable\ndocument are not in the default path.\n\nFor example:\n   PYTHONPATH=<path/to/module> tfs document run -i <path> -o <path>\n\nThe `--input` can take multiple files and in such case if `--output`\nis specified it is treated as directory name.\n\nFor example,\n   tfs document run -i `find $(pwd) -name \"*.tfd\"` -o . -f \nor\n   tfs document run -i `find $(pwd) -name \"*.tfd\"` -o /path/to/output/dir -f \n\nIf input is '-' (stdin) and output is '.' then output file is 'document.md'\nwhich is created in the current working directory.\n\noptional arguments:\n  -h, --help                                   show this help message and exit\n  -i path [path ...], --input path [path ...]  input file, use '-' for stdin, default: stdin\n  -o [path], --output [path]                   output file or directory if multiple input files are\n                                               passed, default: '.' or if input is stdin then '-'.\n                                               The '.' means to create output file in the same\n                                               directory as the input file having .md extension and\n                                               the '-' means output to stdout.\n  -f, --force                                  force to override existing output file if it already\n                                               exists\n\nTestFlows.com Open-Source Software Testing Framework. Copyright 2021 Katteli Inc.\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/testflows/testflows-texts",
    "keywords": "",
    "license": "Apache-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "testflows.texts",
    "package_url": "https://pypi.org/project/testflows.texts/",
    "platform": "",
    "project_url": "https://pypi.org/project/testflows.texts/",
    "project_urls": {
      "Homepage": "https://github.com/testflows/testflows-texts"
    },
    "release_url": "https://pypi.org/project/testflows.texts/2.0.211217.1011222/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "TestFlows - Texts",
    "version": "2.0.211217.1011222",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12335571,
  "releases": {
    "1.7.211130.1023317": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a3ada9fb88f8830bce98a83835a89f140225fd1dc777b4d63f78ad4332e7e124",
          "md5": "38b52b40e64594468c3fd97afa15b2c7",
          "sha256": "443d867982964c3b3e881a9dc758dacc9089ee2487ef507d59db37ed334f89e5"
        },
        "downloads": -1,
        "filename": "testflows.texts-1.7.211130.1023317.tar.gz",
        "has_sig": false,
        "md5_digest": "38b52b40e64594468c3fd97afa15b2c7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 3276,
        "upload_time": "2021-11-30T02:33:33",
        "upload_time_iso_8601": "2021-11-30T02:33:33.289460Z",
        "url": "https://files.pythonhosted.org/packages/a3/ad/a9fb88f8830bce98a83835a89f140225fd1dc777b4d63f78ad4332e7e124/testflows.texts-1.7.211130.1023317.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.7.211130.1024001": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf426d880e33c618cbb862e01f30e962729147bac7df6232ce72367913164b5b",
          "md5": "e2b041b2021d5423153a90a02d39e7df",
          "sha256": "e03a9f54a0614d6448c350d0c413a52f1b69b6dae0711ae104e3d028c8568124"
        },
        "downloads": -1,
        "filename": "testflows.texts-1.7.211130.1024001.tar.gz",
        "has_sig": false,
        "md5_digest": "e2b041b2021d5423153a90a02d39e7df",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 3292,
        "upload_time": "2021-11-30T02:40:14",
        "upload_time_iso_8601": "2021-11-30T02:40:14.994601Z",
        "url": "https://files.pythonhosted.org/packages/bf/42/6d880e33c618cbb862e01f30e962729147bac7df6232ce72367913164b5b/testflows.texts-1.7.211130.1024001.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.8.211204.1053701": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "264bb72b352bda634a991708ab45c5fb84843b448607a3058eb4ba1ff992691e",
          "md5": "5297068f88125f39e5212cda77585ca3",
          "sha256": "53ca69f0ff173a2f661eec1b85393e0b2325b20e441a341b9394380269d2dd55"
        },
        "downloads": -1,
        "filename": "testflows.texts-1.8.211204.1053701.tar.gz",
        "has_sig": false,
        "md5_digest": "5297068f88125f39e5212cda77585ca3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 5403,
        "upload_time": "2021-12-04T05:37:26",
        "upload_time_iso_8601": "2021-12-04T05:37:26.545657Z",
        "url": "https://files.pythonhosted.org/packages/26/4b/b72b352bda634a991708ab45c5fb84843b448607a3058eb4ba1ff992691e/testflows.texts-1.8.211204.1053701.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.8.211206.1163837": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4fd91970888e6f091b65ca5505cd99bdee356446e0904e5d1415ef50280aa2a5",
          "md5": "c533e895e2949c69c181efa03be7c5d6",
          "sha256": "f09bff9f19912a66fde9c6a3acbc14b25f388b5b0675fef759995fc79d5d2ad4"
        },
        "downloads": -1,
        "filename": "testflows.texts-1.8.211206.1163837.tar.gz",
        "has_sig": false,
        "md5_digest": "c533e895e2949c69c181efa03be7c5d6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 5994,
        "upload_time": "2021-12-06T16:38:59",
        "upload_time_iso_8601": "2021-12-06T16:38:59.866460Z",
        "url": "https://files.pythonhosted.org/packages/4f/d9/1970888e6f091b65ca5505cd99bdee356446e0904e5d1415ef50280aa2a5/testflows.texts-1.8.211206.1163837.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.8.211206.1164238": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d675f39429de16bdc2e57a81466b3995400225d2a546d72d1831d6ca6536a631",
          "md5": "e3101bd43ab9460f483af7723903ac19",
          "sha256": "b00c2ea3d615ce556bc85b6f3bc860c46fef88d2136ad8d968f2302b74d86cf4"
        },
        "downloads": -1,
        "filename": "testflows.texts-1.8.211206.1164238.tar.gz",
        "has_sig": false,
        "md5_digest": "e3101bd43ab9460f483af7723903ac19",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 5998,
        "upload_time": "2021-12-06T16:42:53",
        "upload_time_iso_8601": "2021-12-06T16:42:53.396626Z",
        "url": "https://files.pythonhosted.org/packages/d6/75/f39429de16bdc2e57a81466b3995400225d2a546d72d1831d6ca6536a631/testflows.texts-1.8.211206.1164238.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.8.211208.1015336": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d8524f47243fc9f00176edde3a137060526298680e6f1d1396cbcbfbd2bb4110",
          "md5": "4980ed1a6e37ce57e44ba9af4eb92c49",
          "sha256": "e5590e9e16cc0fdcf5e2bd44fe68f52aa5cfa8a6ed760705441dbfe3aa207eeb"
        },
        "downloads": -1,
        "filename": "testflows.texts-1.8.211208.1015336.tar.gz",
        "has_sig": false,
        "md5_digest": "4980ed1a6e37ce57e44ba9af4eb92c49",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 6322,
        "upload_time": "2021-12-08T01:53:52",
        "upload_time_iso_8601": "2021-12-08T01:53:52.719225Z",
        "url": "https://files.pythonhosted.org/packages/d8/52/4f47243fc9f00176edde3a137060526298680e6f1d1396cbcbfbd2bb4110/testflows.texts-1.8.211208.1015336.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.211209.1020850": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c3d18634bc72290e04bb59a55f6c9fb17263d547d1cb3622bb935b518dbb1112",
          "md5": "8dffd2b35360560c8b8496a87c92337e",
          "sha256": "c8b044a0edace8e96c68b2f8541861e7a78ed056a72c66e942643f553606377d"
        },
        "downloads": -1,
        "filename": "testflows.texts-2.0.211209.1020850.tar.gz",
        "has_sig": false,
        "md5_digest": "8dffd2b35360560c8b8496a87c92337e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 7329,
        "upload_time": "2021-12-09T02:09:12",
        "upload_time_iso_8601": "2021-12-09T02:09:12.946325Z",
        "url": "https://files.pythonhosted.org/packages/c3/d1/8634bc72290e04bb59a55f6c9fb17263d547d1cb3622bb935b518dbb1112/testflows.texts-2.0.211209.1020850.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.211209.1173148": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "13c9a071691e40a4a506396a3dd85990d1284bc654d7ad0b5d51181a971c7efc",
          "md5": "20485224adc5416e3ac15c65a43997fc",
          "sha256": "454951f7c4cf2df97dec2a568eb756072104b78de03736005372d78d3496302f"
        },
        "downloads": -1,
        "filename": "testflows.texts-2.0.211209.1173148.tar.gz",
        "has_sig": false,
        "md5_digest": "20485224adc5416e3ac15c65a43997fc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 11544,
        "upload_time": "2021-12-09T17:35:25",
        "upload_time_iso_8601": "2021-12-09T17:35:25.197025Z",
        "url": "https://files.pythonhosted.org/packages/13/c9/a071691e40a4a506396a3dd85990d1284bc654d7ad0b5d51181a971c7efc/testflows.texts-2.0.211209.1173148.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.211209.1220744": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "103e806df5d9de4ab82c61311eda9c9bcb2b6d433b594184d0f99d1354cf6e4b",
          "md5": "73c563381027a3bb2075f4574b102012",
          "sha256": "6719696fb752232795849c5956e1d89d38fc7acd1e169611a00b4c82d6075453"
        },
        "downloads": -1,
        "filename": "testflows.texts-2.0.211209.1220744.tar.gz",
        "has_sig": false,
        "md5_digest": "73c563381027a3bb2075f4574b102012",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 13803,
        "upload_time": "2021-12-09T22:07:59",
        "upload_time_iso_8601": "2021-12-09T22:07:59.129201Z",
        "url": "https://files.pythonhosted.org/packages/10/3e/806df5d9de4ab82c61311eda9c9bcb2b6d433b594184d0f99d1354cf6e4b/testflows.texts-2.0.211209.1220744.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.211209.1221033": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "727db74eb4da4aa7e73bbed76aed4fa5c61da97bbbcf4abea03ddfd3c2379a87",
          "md5": "239df369fcab2506fff3c27ce8c4f7d1",
          "sha256": "85f8aa6b048b18ad86c620dfac61093b15ef2166ccb68bc4f34265a868398df2"
        },
        "downloads": -1,
        "filename": "testflows.texts-2.0.211209.1221033.tar.gz",
        "has_sig": false,
        "md5_digest": "239df369fcab2506fff3c27ce8c4f7d1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 13799,
        "upload_time": "2021-12-09T22:10:47",
        "upload_time_iso_8601": "2021-12-09T22:10:47.479097Z",
        "url": "https://files.pythonhosted.org/packages/72/7d/b74eb4da4aa7e73bbed76aed4fa5c61da97bbbcf4abea03ddfd3c2379a87/testflows.texts-2.0.211209.1221033.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.211210.1121913": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1b8de30b7f78e106f94b6b125cc83b04ddb1be6c7bd6a8ff54a8a92e4e1aff4f",
          "md5": "862095fea208c636be1c5b37dbd82fec",
          "sha256": "0c951160733b768da8353c86b5ba78df34b085d113caad5f1f09d1cff3211deb"
        },
        "downloads": -1,
        "filename": "testflows.texts-2.0.211210.1121913.tar.gz",
        "has_sig": false,
        "md5_digest": "862095fea208c636be1c5b37dbd82fec",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 16933,
        "upload_time": "2021-12-10T12:20:21",
        "upload_time_iso_8601": "2021-12-10T12:20:21.803238Z",
        "url": "https://files.pythonhosted.org/packages/1b/8d/e30b7f78e106f94b6b125cc83b04ddb1be6c7bd6a8ff54a8a92e4e1aff4f/testflows.texts-2.0.211210.1121913.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.211210.1123004": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "78e1be8bf0817e3c1a61c63b46621793a82f6aaf1c75f76a3258c4ef166667ec",
          "md5": "b9cf10e8baa554a0aa9c42d94276b11e",
          "sha256": "5cca33a796430c6313ecf54119e048842f0b9c3a69f75af5d7920cbad9b93178"
        },
        "downloads": -1,
        "filename": "testflows.texts-2.0.211210.1123004.tar.gz",
        "has_sig": false,
        "md5_digest": "b9cf10e8baa554a0aa9c42d94276b11e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 16944,
        "upload_time": "2021-12-10T12:30:31",
        "upload_time_iso_8601": "2021-12-10T12:30:31.941256Z",
        "url": "https://files.pythonhosted.org/packages/78/e1/be8bf0817e3c1a61c63b46621793a82f6aaf1c75f76a3258c4ef166667ec/testflows.texts-2.0.211210.1123004.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.211217.1010914": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa7f7597cffa9b407b726358a7dd243c7ca5299b1adf63b72e1f5d22bc6ca119",
          "md5": "f584f3fe5070e0d59393a5e2f908a9cd",
          "sha256": "c0b5be35e3653eb159250de86e5db608f1ef2e195f92decaea4838462508a0e8"
        },
        "downloads": -1,
        "filename": "testflows.texts-2.0.211217.1010914.tar.gz",
        "has_sig": false,
        "md5_digest": "f584f3fe5070e0d59393a5e2f908a9cd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 16958,
        "upload_time": "2021-12-17T01:09:29",
        "upload_time_iso_8601": "2021-12-17T01:09:29.829170Z",
        "url": "https://files.pythonhosted.org/packages/aa/7f/7597cffa9b407b726358a7dd243c7ca5299b1adf63b72e1f5d22bc6ca119/testflows.texts-2.0.211217.1010914.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.211217.1011222": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "819cf64115f090482163e3cd154a1843da115e94e46e560bca52e2845815c33b",
          "md5": "7170c1003928a2ad7365d3fe857ac9c0",
          "sha256": "8251142dce41ec36ad5ec7651929dadbea986725a17fd19b52088eb5e5625f0d"
        },
        "downloads": -1,
        "filename": "testflows.texts-2.0.211217.1011222.tar.gz",
        "has_sig": false,
        "md5_digest": "7170c1003928a2ad7365d3fe857ac9c0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 16919,
        "upload_time": "2021-12-17T01:12:35",
        "upload_time_iso_8601": "2021-12-17T01:12:35.116936Z",
        "url": "https://files.pythonhosted.org/packages/81/9c/f64115f090482163e3cd154a1843da115e94e46e560bca52e2845815c33b/testflows.texts-2.0.211217.1011222.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "819cf64115f090482163e3cd154a1843da115e94e46e560bca52e2845815c33b",
        "md5": "7170c1003928a2ad7365d3fe857ac9c0",
        "sha256": "8251142dce41ec36ad5ec7651929dadbea986725a17fd19b52088eb5e5625f0d"
      },
      "downloads": -1,
      "filename": "testflows.texts-2.0.211217.1011222.tar.gz",
      "has_sig": false,
      "md5_digest": "7170c1003928a2ad7365d3fe857ac9c0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 16919,
      "upload_time": "2021-12-17T01:12:35",
      "upload_time_iso_8601": "2021-12-17T01:12:35.116936Z",
      "url": "https://files.pythonhosted.org/packages/81/9c/f64115f090482163e3cd154a1843da115e94e46e560bca52e2845815c33b/testflows.texts-2.0.211217.1011222.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}