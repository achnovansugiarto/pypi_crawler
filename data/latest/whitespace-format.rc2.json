{
  "info": {
    "author": "David Pal",
    "author_email": "davidko.pal@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# whitespace-format\n\n[![CircleCI](https://dl.circleci.com/status-badge/img/gh/DavidPal/whitespace-format/tree/main.svg?style=svg)](https://dl.circleci.com/status-badge/redirect/gh/DavidPal/whitespace-format/tree/main)\n\nLinter and formatter for source code files and text files.\n\nThe purpose of this tool is to normalize source code files (e.g. Python, Java,\nC/C++, Ruby, Go, JavaScript, etc.) and text files (HTML, JSON, YAML, CSV,\nMarkDown, LaTeX) before checking them into a version control system.\n\nThe features include:\n\n* Auto-detection of new line markers (Linux `\\n`, Windows `\\r\\r`, Mac `\\r`).\n* Add a new line marker at the end of the file if it is missing.\n* Make new line markers consistent.\n* Remove empty lines at the end of the file.\n* Remove whitespace at the end of each line.\n* Replace tabs with spaces.\n* Remove/replace non-standard whitespace characters.\n\nThe formatting changes are\n[idempotent](https://en.wikipedia.org/wiki/Idempotence), i.e., running the tool\nsecond time (with the same parameters) has no effect.\n\n## Installation\n\n```shell\npip install whitespace-format\n```\n\nInstallation requires Python 3.7.5 or higher.\n\n## Usage\n\nA sample command that formats source code files:\n```shell\nwhitespace-format \\\n    --exclude \".git/|.idea/|.pyc$\" \\\n    --new-line-marker linux \\\n    --normalize-new-line-markers \\\n    foo.txt  my_project/\n```\nThe command above formats `foo.txt` and all files contained `my_project/` and\nits subdirectories. Files that contain `.git/` or `.idea/` in their (relative)\npath are excluded. For example, files in `my_project/.git/` and files in\n`my_project/.idea/` are excluded. Likewise, files ending with `*.pyc` are\nexcluded.\n\nIf you want only know if any changes **would be** made, add `--check-only` option:\n```shell\nwhitespace-format \\\n    --exclude \".git/|.idea/|.pyc$\" \\\n    --check-only \\\n    --new-line-marker linux \\\n    --normalize-new-line-markers \\\n    foo.txt  my_project/\n```\nThis command can be used as a validation step before checking the source files\ninto a version control system. The command outputs non-zero exit code if any\nof the files would be formatted.\n\n### Options\n\n* `--check-only` -- Do not format files. Only report which files would be formatted.\n* `--follow-symlinks` -- Follow symbolic links when searching for files.\n* `--exclude=REGEX` -- Regular expression that specifies which files to exclude.\nThe regular expression is evaluated on the path of each file.\n* `--verbose` -- Print more messages than normally.\n* `--quiet` -- Do not print any messages, except for errors when reading or writing files.\n\n### Formatting options\n\n* `--add-new-line-marker-at-end-of-file` -- Add missing new line marker at end of each file.\n* `--remove-new-line-marker-from-end-of-file` -- Remove all new line marker(s) from the end of each file.\nThis option is ignored when `--add-new-line-marker-at-end-of-file` is used.\nEmpty lines at the end of the file are removed.\n* `--normalize-new-line-markers` -- Make new line markers consistent in each file\nby replacing `\\\\r\\\\n`, `\\\\n`, and `\\r` with a consistent new line marker.\n* `--remove-trailing-whitespace` -- Remove whitespace at the end of each line.\n* `--remove-trailing-empty-lines` -- Remove empty lines at the end of each file.\n* `--new-line-marker=MARKER` -- This option specifies what new line marker to use.\n`MARKER` must be one of the following:\n  * `auto` -- Use new line marker that is the most common in each individual file.\n  If no new line marker is present in the file, Linux `\\n` is used.\n  This is the default option.\n  * `linux` -- Use Linux new line marker `\\\\n`.\n  * `mac` -- Use Mac new line marker `\\\\r`.\n  * `windows` -- Use Windows new line marker `\\\\r\\\\n`.\n* `--encoding` -- Text encoding for both reading and writing files. Default encoding is `utf-8`.\nList of supported encodings can be found at\nhttps://docs.python.org/3/library/codecs.html#standard-encodings\n\nNote that input files can contain an arbitrary mix of new line markers `\\n`,\n`\\r`, `\\r\\n` even within the same file. The option `--new-line-marker`\nspecifies the character that should be in the formatted file.\n\nAn opinionated combination of options is:\n```shell\nwhitespace-format \\\n    --new-line-marker=linux \\\n    --add-new-line-marker-at-end-of-file \\\n    --normalize-new-line-markers \\\n    --remove-trailing-whitespace \\\n    --remove-trailing-empty-lines \\\n    foo.txt  my_project/\n```\nThis should work well for common programming languages (e.g. Python, Java,\nC/C++, JavaScript) and common text file formats (e.g. CSV, LaTeX, JSON, YAML,\nHTML, MarkDown).\n\n### Empty files\n\nThere are separate options for handling empty files and files consisting of\nwhitespace characters only:\n\n* `--normalize-empty-files=MODE`\n* `--normalize-whitespace-only-files=MODE`\n\nwhere `MODE` is one of the following:\n\n* `ignore` -- Leave the file as is. This is the default option.\n* `empty` -- Replace the file with an empty file.\n* `one-line` -- Replace each file with a file consisting of a single new line marker.\n\nDepending on the mode, an empty file or a whitespace-only file will be either\nignored, replaced by a zero-byte file, or replaced by a file consisting of\nsingle end of line marker.\n\nIf `--normalize-whitespace-only-files` is set to `empty`,\n`--normalize-empty-files setting` set to `empty` as well. In other words,\ncombination `--normalize-whitespace-only-files=empty` and\n`--normalize-empty-files=one-line` is not allowed, since it would lead to\nbehavior that is not idempotent.\n\n### Special characters\n\n* `--replace-tabs-with-spaces=N` -- Replace tabs with spaces.\nWhere is `N` is the number of spaces. If `N` is negative, tabs are not replaced.\nDefault value is `-1`.\n\n* `--normalize-non-standard-whitespace=MODE` -- Replace or remove\nnon-standard whitespace characters (`\\v` and `\\f`). `MODE` must be one of the following:\n  * `ignore` -- Leave `\\v` and `f` as is. This is the default option.\n  * `replace` -- Replace any occurrence of `\\v` or `\\f` with a single space.\n  * `remove` -- Remove all occurrences of `\\v` and `\\f`\n\n## License\n\nMIT\n\n## MacOS development setup\n\n1) Make sure you have [brew](https://brew.sh/) package manager installed.\n\n2) Install [pyenv](https://github.com/pyenv/pyenv), [pyenv-virtualenv](https://github.com/pyenv/pyenv-virtualenv)\n   and [poetry](https://python-poetry.org/):\n    ```shell\n    brew install pyenv\n    brew install pyenv-virtualenv\n    brew install poetry\n    ```\n\n3) Create Python virtual environment with the correct Python version:\n   ```shell\n   make install-python\n   make create-environment\n   ```\n\n4) Add the following lines to `.zshrc` or `.bash_profile` and restart the terminal:\n   ```shell\n   # Pyenv settings\n   export PYENV_ROOT=\"$HOME/.pyenv\"\n   export PATH=\"$PYENV_ROOT/bin:$PATH\"\n   eval \"$(pyenv init --path)\"\n   eval \"$(pyenv virtualenv-init -)\"\n   ```\n\n5) Install all dependencies\n    ```shell\n    make install-dependecies\n    ```\n\nIf you need to delete the Python virtual environment, you can do so with the\ncommand `make delete-environment`.\n\n## Running unit tests and code checks\n\nIf you make code change, run unit tests and code checks with the command:\n```shell\nmake clean whitespace-format-check isort-check black-check flake8 pydocstyle pylint mypy test coverage\n```\n\nEach make target runs different checks:\n- `clean` deletes temporary files\n- `whitespace-format-check` runs [whitespace-format](https://github.com/DavidPal/whitespace-format) checker on all files\n- `isort-check` runs [isort](https://pycqa.github.io/isort/) checker of imports in `*.py` files\n- `black-check` runs [black](https://github.com/psf/black/) code format checker on `*.py` files\n- `flake8` runs [flake8](https://flake8.pycqa.org/) code style checker on `*.py` files\n- `pydocstyle` runs [pydocstyle](http://www.pydocstyle.org/) docstring checker on `*.py` files\n- `pylint` runs [pylint](https://pylint.org/) code checker on `*.py` files\n- `mypy` runs [mypy](http://mypy-lang.org/) type checker on `*.py` files\n- `test` runs unit tests\n- `coverage` generates code coverage report\n\nYou can automatically format code with the command:\n```shell\nmake isort-format black-format whitespace-format\n```\n\n## Modifying dependencies\n\nThe list of Python packages that this project depends on is specified in\n`pyproject.toml` and in `poetry.lock` files. The file `pyproject.toml` can be\nedited by humans. The file `poetry.lock` is automatically generated by\n`poetry`.\n\nInstall a development dependency with the command:\n```shell\npoetry add --dev <some_new_python_tool>\n```\n\nInstall a new production dependency with the command:\n```shell\npoetry add <some_python_library>\n```\n\n### Manual modification of `pyproject.toml`\n\nInstead of using `poetry add` command, you can edit `pyproject.toml` file. Then,\nregenerate `poetry.lock` file with the command:\n```shell\npoetry lock\n```\nor the command:\n```shell\npoetry lock --no-update\n```\nThe latter command does not update already locked packages.\n\n### Fixing broken Python environment\n\nIf your Python virtual environment becomes broken or polluted with unnecessary\npackages, delete it, recreate it from scratch and install dependencies a fresh\nwith the following commands:\n```shell\nmake delete-environment\nmake create-environment\nmake install-dependencies\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/DavidPal/whitespace-format",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "whitespace-format",
    "package_url": "https://pypi.org/project/whitespace-format/",
    "platform": null,
    "project_url": "https://pypi.org/project/whitespace-format/",
    "project_urls": {
      "Homepage": "https://github.com/DavidPal/whitespace-format",
      "Repository": "https://github.com/DavidPal/whitespace-format"
    },
    "release_url": "https://pypi.org/project/whitespace-format/0.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.7.5,<4.0.0",
    "summary": "Linter and formatter for source code files and text files",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17159450,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c0a443357c00754a2a48268b704b429682e30b3449aec9bad7dfb993b123903d",
          "md5": "4e8501d2f44826747b19a6b6cf58cbf5",
          "sha256": "819dd957df04c8897d5efed650199bb6cb4680245d1ecf7403d2b1f880ce7c50"
        },
        "downloads": -1,
        "filename": "whitespace_format-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4e8501d2f44826747b19a6b6cf58cbf5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.5,<4.0.0",
        "size": 10318,
        "upload_time": "2023-02-26T23:59:08",
        "upload_time_iso_8601": "2023-02-26T23:59:08.809057Z",
        "url": "https://files.pythonhosted.org/packages/c0/a4/43357c00754a2a48268b704b429682e30b3449aec9bad7dfb993b123903d/whitespace_format-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b49fbad75120082517e20a4707a00090a475b86b0801cb44668f100056ca30d",
          "md5": "872610199c95f5c79ff853944cd57c7b",
          "sha256": "2c1230ca7b399c088514d683c6737c5fd12963f712477a0285904bcf462427ba"
        },
        "downloads": -1,
        "filename": "whitespace_format-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "872610199c95f5c79ff853944cd57c7b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.5,<4.0.0",
        "size": 12872,
        "upload_time": "2023-02-26T23:59:10",
        "upload_time_iso_8601": "2023-02-26T23:59:10.458435Z",
        "url": "https://files.pythonhosted.org/packages/8b/49/fbad75120082517e20a4707a00090a475b86b0801cb44668f100056ca30d/whitespace_format-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "94174fe33d34c3abb9354d62fcbc6a177f617634b415cfd2b0876f846eadb85e",
          "md5": "72bdc86e84fc16f89c1d135c29cb9c3e",
          "sha256": "d50309a9453ef773a40f66a597a347a8409a64e5229f454fe9b20742e464537a"
        },
        "downloads": -1,
        "filename": "whitespace_format-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "72bdc86e84fc16f89c1d135c29cb9c3e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.5,<4.0.0",
        "size": 10340,
        "upload_time": "2023-03-04T21:35:56",
        "upload_time_iso_8601": "2023-03-04T21:35:56.800285Z",
        "url": "https://files.pythonhosted.org/packages/94/17/4fe33d34c3abb9354d62fcbc6a177f617634b415cfd2b0876f846eadb85e/whitespace_format-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "97f1dae77459d2354459a5c0af174eb5529cdbb93ca04b0e4873ab2676f9db43",
          "md5": "df196daba3d8ff463b9f93153250582a",
          "sha256": "efd9f89a3c07123717e225d886bafb045b1f5dcb43e3c14780f7509dbcdf92ab"
        },
        "downloads": -1,
        "filename": "whitespace_format-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "df196daba3d8ff463b9f93153250582a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.5,<4.0.0",
        "size": 13138,
        "upload_time": "2023-03-04T21:35:58",
        "upload_time_iso_8601": "2023-03-04T21:35:58.289653Z",
        "url": "https://files.pythonhosted.org/packages/97/f1/dae77459d2354459a5c0af174eb5529cdbb93ca04b0e4873ab2676f9db43/whitespace_format-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "94174fe33d34c3abb9354d62fcbc6a177f617634b415cfd2b0876f846eadb85e",
        "md5": "72bdc86e84fc16f89c1d135c29cb9c3e",
        "sha256": "d50309a9453ef773a40f66a597a347a8409a64e5229f454fe9b20742e464537a"
      },
      "downloads": -1,
      "filename": "whitespace_format-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "72bdc86e84fc16f89c1d135c29cb9c3e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7.5,<4.0.0",
      "size": 10340,
      "upload_time": "2023-03-04T21:35:56",
      "upload_time_iso_8601": "2023-03-04T21:35:56.800285Z",
      "url": "https://files.pythonhosted.org/packages/94/17/4fe33d34c3abb9354d62fcbc6a177f617634b415cfd2b0876f846eadb85e/whitespace_format-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "97f1dae77459d2354459a5c0af174eb5529cdbb93ca04b0e4873ab2676f9db43",
        "md5": "df196daba3d8ff463b9f93153250582a",
        "sha256": "efd9f89a3c07123717e225d886bafb045b1f5dcb43e3c14780f7509dbcdf92ab"
      },
      "downloads": -1,
      "filename": "whitespace_format-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "df196daba3d8ff463b9f93153250582a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7.5,<4.0.0",
      "size": 13138,
      "upload_time": "2023-03-04T21:35:58",
      "upload_time_iso_8601": "2023-03-04T21:35:58.289653Z",
      "url": "https://files.pythonhosted.org/packages/97/f1/dae77459d2354459a5c0af174eb5529cdbb93ca04b0e4873ab2676f9db43/whitespace_format-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}