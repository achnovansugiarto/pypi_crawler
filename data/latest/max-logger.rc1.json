{
  "info": {
    "author": "Max Ludden",
    "author_email": "dev@maxludden.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11"
    ],
    "description": "---\ntitle: max_logger README\nauthor: Max Ludden\nemail: dev@maxludden.com\nedited: 10-20-2022\nCSS: style.css\n---\n\n# `max_logger`\nThe main purpose of the module is to automate my custom logging. It's based on the most excellent [loguru](https://github.com/Delgan/loguru) module and automatically sets up the loguru sinks that I find most useful. In addition it also provides a number of helper functions for working with Rich Python by [Textualize](https://www.textualize.io/), including the ability to print gradient text and panels.\n\n## Instillation\n\n<br />\n<br />\n\n### Install using `pipx`\n```bash\npipx install max_logger\n```\n\n<br />\n<br />\n\n### Install using `pip`\n```bash\npip install max_logger\n```\n<br />\n<br />\n\n### Install using `poetry`\n```bash\npoetry add max_logger\n```\n<br />\n\nIt's as simple as that. This module is available on PyPi and can be installed using your favorite python package manager (`pipx`, `pip`, `poetry`).\n\n<br />\n<br />\n<br />\n\n# Usage\n```Python\nfrom max_logger import log\n\n>>> log.info(\"Hello, World!)\n```\nIt's as simple as that. It is useful to note that you may import a custom formatted Rich Console & Progress from the modules as well. This is useful if you want to use the same console for your own logging.\n\n\n\n```Python\nfrom time import sleep\nfrom max_logger import console, progress\n\nwith progress:\n    task1 = progress.add_task(\"task1\", total=10)\n    for i in range(1,11):\n        progress.update(task1, advance=1)\n        sleep(0.1)\n        smiles = \":smile:\" * i\n        console.print(f\"[bright_red]â™¥ï¸Ž[/] [bold purple1]I really like Max's Logger![/][#00ff00] â˜˜ï¸Ž[/]\")\n```\n\n\n\n<figure>\n    <img src=https://i.imgur.com/IdKDdzE.png alt=\"Example of Rich Console\" />\n    <figcaption>Example of Rich Console</figcaption>\n</figure>\n\n\n\n<br />\n<br />\n<br />\n\n# Gradient Text\nThere are also a number of helper function to allow the printing of gradient text.\n\n## `rainbow`\n```Python\ndef rainbow(message: str, num_of_gradients: int = 4) -> Text:\n    \"\"\"Prints a rainbow gradient of the message.\n\n    Args:\n        message (str): The message to print.\n        num_of_gradients (int, optional): The number of gradients to use. Defaults to 4. Must be between 1 and 6.\n\n    Returns:\n        Text: The message as a Gradient Rich Text object.\n    \"\"\"\n```\n\n```Python\nfrom max_logger import rainbow\n\nconsole.print(rainbow(\"I think this is a lot more fun. ðŸŒˆ\"))\n```\n<br />\n<figure>\n    <img src=\"https://i.imgur.com/4PDNxIA.png\" alt=\"Example of rainbow text\" />\n    <figcaption>Example of rainbow text</figcaption>\n</figure>\n\n<br />\n<br />\n\n## Gradient Panel\nThis automates the creation of a panel with gradient text and an optional title.\n\n\n```Python\ndef gradient_panel(text: str, title: str | None = None, num_of_gradients: int = 4) -> Panel:\n    \"\"\"\n        Args:\n            text (str): The content of the panel.\n            title (Optional[str]): The title of the panel.\n            num_of_gradients (Optional[int]): The number of gradients to use. Valid arguments are between 1 - 6.\n\n        Returns:\n            panel (Panel): A gradient panel.\n    \"\"\"\n\nconsole.print(gradient_panel(\"This is even better!!!, title=\"Gradient Panel\"))\n```\n\n<figure>\n    <img src=\"https://i.imgur.com/5H2qksr.png\" alt=\"Gradient Panel\" />\n    <figcaption>Gradient Panel Example</figcaption>\n</figure>\n\n<br />\n<br />\n\n## `gradient`\n\n\n```Python\ndef gradient(message: str, start_color: str, end_color: str) -> Text:\n    \"\"\"Prints a gradient of the message.\n\n    Args:\n        message (str): The message to print.\n        start_color (str): The HEX start color of the gradient.\n        end_color (str): The HEX end color of the gradient.\n\n    Returns:\n        Text: The message as a Gradient Rich Text object.\n    \"\"\"\n```\n\n##### Example `gradient` usage:\n```Python\nfrom max_logger import gradient\n\nconsole.print(\"gradient[^gradient]Simple is always nice...[/]\", \"#FF0000\", \"#FF8800\"), justify=\"center\")\n```\n\n\n<figure>\n    <img src=\"https://i.imgur.com/CBZ79sC.png\" alt=\"Two Color Gradient\" />\n    <figcaption>Gradient Panel Example</figcaption>\n</figure>\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "max-logger",
    "package_url": "https://pypi.org/project/max-logger/",
    "platform": null,
    "project_url": "https://pypi.org/project/max-logger/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/max-logger/1.0.0/",
    "requires_dist": [
      "ujson (>=5.5.0,<6.0.0)",
      "loguru (>=0.6.0,<0.7.0)",
      "rich[all] (>=12.6.0,<13.0.0)"
    ],
    "requires_python": ">=3.10,<4.0",
    "summary": "Max's custom loguru sinks, logger helper functions, rich tracebacks and other helper functions for rich.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15460528,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "df94c97f7841390ba62d107d3668b20c7ff21eda0000fa885d11ee4d59739c55",
          "md5": "250125a56f3a0ecc6ccb9455187adde3",
          "sha256": "1759ca1e8ab2358eda05e6bb0963c4b0aba197ce4ad59e4c59b4b7e8476b9898"
        },
        "downloads": -1,
        "filename": "max_logger-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "250125a56f3a0ecc6ccb9455187adde3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 8052,
        "upload_time": "2022-10-19T11:53:52",
        "upload_time_iso_8601": "2022-10-19T11:53:52.813414Z",
        "url": "https://files.pythonhosted.org/packages/df/94/c97f7841390ba62d107d3668b20c7ff21eda0000fa885d11ee4d59739c55/max_logger-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d4e49d8fc037fd5fab7d2d14d6cda44b711cf8bbc1ffbf1137021187d69d69b8",
          "md5": "f985e06e5f8322f48e9a5e8aece8e088",
          "sha256": "498d134f79f968fabaf6801fd65aa673e45a96da6c08c0fc1f1495be89b8cf33"
        },
        "downloads": -1,
        "filename": "max_logger-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f985e06e5f8322f48e9a5e8aece8e088",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 7801,
        "upload_time": "2022-10-19T11:53:54",
        "upload_time_iso_8601": "2022-10-19T11:53:54.436227Z",
        "url": "https://files.pythonhosted.org/packages/d4/e4/9d8fc037fd5fab7d2d14d6cda44b711cf8bbc1ffbf1137021187d69d69b8/max_logger-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "df94c97f7841390ba62d107d3668b20c7ff21eda0000fa885d11ee4d59739c55",
        "md5": "250125a56f3a0ecc6ccb9455187adde3",
        "sha256": "1759ca1e8ab2358eda05e6bb0963c4b0aba197ce4ad59e4c59b4b7e8476b9898"
      },
      "downloads": -1,
      "filename": "max_logger-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "250125a56f3a0ecc6ccb9455187adde3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10,<4.0",
      "size": 8052,
      "upload_time": "2022-10-19T11:53:52",
      "upload_time_iso_8601": "2022-10-19T11:53:52.813414Z",
      "url": "https://files.pythonhosted.org/packages/df/94/c97f7841390ba62d107d3668b20c7ff21eda0000fa885d11ee4d59739c55/max_logger-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d4e49d8fc037fd5fab7d2d14d6cda44b711cf8bbc1ffbf1137021187d69d69b8",
        "md5": "f985e06e5f8322f48e9a5e8aece8e088",
        "sha256": "498d134f79f968fabaf6801fd65aa673e45a96da6c08c0fc1f1495be89b8cf33"
      },
      "downloads": -1,
      "filename": "max_logger-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f985e06e5f8322f48e9a5e8aece8e088",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10,<4.0",
      "size": 7801,
      "upload_time": "2022-10-19T11:53:54",
      "upload_time_iso_8601": "2022-10-19T11:53:54.436227Z",
      "url": "https://files.pythonhosted.org/packages/d4/e4/9d8fc037fd5fab7d2d14d6cda44b711cf8bbc1ffbf1137021187d69d69b8/max_logger-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}