{
  "info": {
    "author": "Josiah Tan",
    "author_email": "josiah123t@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# ez\\_life\nThe objective of ez\\_life is to make coding with Python easier by removing repetitive code while still maintaining the same level of functionality\n\n# Installation\n```\npip install -U ez_life\n```\n# param2attr\n- Here is a little sneak peak of what you can do with this package!\n\t- First consider this code block:\n\n\n```python\nfrom ez_life import Param2attr\n\nclass Foo: \n\tdef __init__(self, param1 = None, param2 = None, param3 = None): \n\t\t# This sux \n\t\tself.param1 = param1 \n\t\tself.param2 = param2 \n\t\tself.param3 = param3\n```\n\n- We can instead create a class that looks like this, using a property decorator to perform the param to attribute assignments \n\n```python\nclass Foo: \n\t@Param2attr(exclude=None) \n\tdef __init__(self, param1 = None, param2 = None, param3 = None): \n\t\t# this good, allows u to write other code here during initialization \n\t\tpass\n```\n\n- If you are interested to learn about the implementation or other features that param2attr supports, feel free to read the [Param2attr documentation](https://colab.research.google.com/drive/1PStbTEDiuXgjIKrMOcJAbY9NOg23w9TK?usp=sharing)!\n\n# JTProperty\n\n- Ez\\_life can also be used to create \"variable dependencies\" using the @JTProperty decorator\n\t- It essentially builds upon the functionality that the @property decorator gives!\n\n## Understanding The Classic @property:\n\n- The concept of python's classic decorator @property is not difficult to learn, read this section if you want to learn it or get a refresher\n\n### Classic Setter and Getter Methods\n\n- First consider a classic class Square\n\t- A square has a 3 properties: \n\t\t- A length, an perimeter and an area\n\t- First we will code the length:\n\n```python\nclass Square: \n\tdef getLength(self): \n\t\treturn self._length # the underscore \"_\" in \"_length\" means that it is a \"protected variable\"\n\n\tdef setLength(self, r): \n\t\tif r <= 0: \n\t\t\traise ValueError(\"length should be greater than 0\") \n\t\tself._length = r\n```\n- We can use this class as follows:\n\n```python\nsquare = Square() # create a class instance\nsquare.setLength(4) # sets self._length to 4\nprint(square.getLength()) # 4\nsquare.setLength(-1) # raises a ValueError \"length should be greater than 0\"\n```\n### Property Setter and Getter Methods Part 1\n\n- Python's inbuilt @property decorator allows setters and getters to be used in a much easier way:\n\n```python\nclass Square:\n\t@property \n\tdef length(self): # the setter method\n\t\treturn self._length \n\n\t@length.setter \n\tdef length(self, r): # the getter method \n\t\tif r <= 0: \n\t\t\traise ValueError(\"length should be greater than 0\") \n\t\tself._length = r\n```\n- The code below shows how to use the setter and getter methods for this class:\n\n```python\nsquare = Square() # create a square instance\nsquare.length = 4 # sets self._length to 4\nprint(square.length) # 4\nsquare.length = -1 # raises a ValueError \"length should be greater than 0\"\n```\n- Syntactically, the code above is much more pythonic, but the problem is that the setter must be called before the getter\n\t- The code below demonstrates this vulnerability:\n\n```python\nsquare = Square() \nprint(square.length) # raises an error\n```\n### Property Setter and Getter Methods Part 2 \n\n- The reason why an error is raised is because the length has not been set yet via the setter method\n\t- A solution to this could be achieved as follows:\n\n```python \nclass Square: \n\t@property \n\tdef length(self): \n\t\tif \"_length\" not in dir(self): # checks if self._length is an attribute yet \n\t\t\tself.length = 1 # if not, call the setter method to set self._length to 1 \n\t\treturn self._length \n\n\t@length.setter \n\tdef length(self, r): \n\t\tif r <= 0: \n\t\t\traise ValueError(\"length should be greater than 0\") \n\t\tself._length = r\n```\n\n- Now we will not get an error when calling the getter before the setter, we instead get some default value\n\t- In this case the default value is 1\n\n\n```python\nsquare = Square() \nprint(square.length) # 1\n```\n\n## Understanding The @JTProperty:\n\n### JTProperty Setter and Getter Methods\n\n- Obviously, the code with the @property decorator is Pythonic, however it is far from perfect\n\t- We can see that there are many lines of code already written for just the length setter and getter methods \n- Now we will demonstrate how the ez\\_life @JTProperty decorator can make the Square class above more concise \n\t- @JTProperty does this by abstracting away the self.\\_length variable\n\n```python\n# importing the JTProperty decorator from the ez_life module\nfrom ez_life import JTProperty \n\nclass Square: \n\t@JTProperty() \n\tdef length(self): \n\t\treturn 1 \n\n\t@length.setter \n\tdef length(self, r): \n\t\tif r <= 0: \n\t\t\traise ValueError(\"length should be greater than 0\") \n\t\treturn r\n```\n- For JTProperty we can call the setter before the getter method\n\n```python \nsquare = Square() # create a class instance\nsquare.length = 4 # sets self._length to 4\nprint(square.length) # 4\nsquare.length = -1 # raises a ValueError \"length should be greater than 0\"\n```\n\n- Or we can call the getter before the setter method\n\n```python\nsquare = Square() \nprint(square.length) # 1\n```\n\n- As we can see, JTProperty offers the same functionality as @property but with less code!\n\n### Full Implementation of Square with JTProperty\n\n- Now that we have an understanding of JTProperty, we can fully implement the square class perimeter and area setter methods!\n\n```python\nclass Square: \n\t@JTProperty() \n\tdef length(self): \n\t\treturn 1 \n\n\t@length.setter \n\tdef length(self, r): \n\t\tif r <= 0: \n\t\t\traise ValueError(\"length should be greater than 0\") \n\t\treturn r \n\n\t@JTProperty() \n\tdef area(self): \n\t\treturn self.length ** 2 \n\n\t@JTProperty() \n\tdef perimeter(self): \n\t\treturn self.length * 4\n```\n\n- We can call these methods as follows:\n\n```python\nsquare = Square()\nprint(square.area) # (1 ** 2) => 1\nprint(square.perimeter) # (1 * 4) => 4\n\nsquare.length = 2 # set length to 2\n\nprint(square.area) # 1 <= note that square.area stays the same even though square.length changed\nprint(square.perimeter) # 4 <= note that square.perimeter stays the same\n\n# square.area = 10 # (note that this gives an error because no setter method is defined for area)\n```\n\n### Full Implementation of Square with JTProperty part 2 (with dependencies)\n\n- Notice that square.area and square.perimeter do not update when square.length is changed to 2\n\t- To update square.area and square.perimeter when square.length is changed, a \"dependency\" list must be given to JTProperty for both square.area and square.perimeter methods:\n\n```python\nclass Square: \n\t@JTProperty() \n\tdef length(self): \n\t\treturn 1 \n\n\t@length.setter \n\tdef length(self, r): \n\t\tif r <= 0: \n\t\t\traise ValueError(\"length should be greater than 0\") \n\t\treturn r \n\n\t@JTProperty(deps = 'length') \n\tdef area(self): \n\t\treturn self.length ** 2 \n\n\t@JTProperty(deps = 'length') \n\tdef perimeter(self): \n\t\treturn self.length * 4\n```\n\n- Now when changing square.length to some other value, both square.area and square.perimeter return their corresponding updated values when called\n\n```python\nsquare = Square()\nprint(square.area) # (1 ** 2) => 1\nprint(square.perimeter) # (1 * 4) => 4\n\nsquare.length = 2 # set length to 2\n\nprint(square.area) # (2 ** 2) => 4\nprint(square.perimeter) # (2 * 4) => 8\n```\n\n- This concludes the introduction to some of the features that JTProperty supports!\n- Other features not covered here include:\n\t- Support for hierarchal classes\n\t- default and default type setters\n\t- Circular dependency graphs\n- If you are interested to learn about these other features and more, feel free to read the [JTProperty documentation](https://colab.research.google.com/drive/1yt7lT1H9xhXY7OVo7DGaW-APm-qHWOpR?usp=sharing)!\n\n# ez-life directory layout:\n\n- develop: the package containing all .ipynb dev files and converted .py files\n\t- param2attr.ipynb: dev notebook for automation of parameter creation to class object attributes\n\t- param2attr.py: param2attr.ipynb -> param2attr.py via Makefile\n\t- jt\\_property.ipynb: dev notebook for more writing dependency related code\n\t- jt\\_property.py: jt\\_property.ipynb -> jt\\_property.py via Makefile\n- ez\\_life: the package containing all converted .py files\n- .gitignore: for ignoring files when pushing and pulling\n- LICENSE: what u can and can't do with this repo\n- MAKEFILE: automated test cases and .ipynb to .py conversion\n- README: this file essentially\n- MANIFEST.in: Files to include in pip upload\n- build: automatically generated file for pip \n- dist: automatically generated file for pip \n- setup.py: contains setups for when uploading to pip\n- test*.py: test files for modules within ez_life\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Josiah-tan/ez_life",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ez-life",
    "package_url": "https://pypi.org/project/ez-life/",
    "platform": "",
    "project_url": "https://pypi.org/project/ez-life/",
    "project_urls": {
      "Homepage": "https://github.com/Josiah-tan/ez_life"
    },
    "release_url": "https://pypi.org/project/ez-life/1.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A Python Package to make life ez for pythonistas",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9272846,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e0a5c8db3efe8f6563709360ddde8bf22e458a97275d6680402e1deacc54877c",
          "md5": "df2c6a901bfbdeae8dd4c78a706299c9",
          "sha256": "0da26ae61b16dbf258728ba2ee80a47679ecd7425d143c981ec6e34826cafa29"
        },
        "downloads": -1,
        "filename": "ez_life-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "df2c6a901bfbdeae8dd4c78a706299c9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10106,
        "upload_time": "2020-12-17T08:49:51",
        "upload_time_iso_8601": "2020-12-17T08:49:51.711820Z",
        "url": "https://files.pythonhosted.org/packages/e0/a5/c8db3efe8f6563709360ddde8bf22e458a97275d6680402e1deacc54877c/ez_life-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "80c5a678dc7b1e8d550a1bf5c565e7b4af0000dc2fcd8f16c62ae73698d4e92a",
          "md5": "34ef76b2c4c774ebf542cca7c3c5f8f4",
          "sha256": "64c27a8b69462256ec58553bf0f960ca25cfab96588e396c681811263e1f5ecd"
        },
        "downloads": -1,
        "filename": "ez-life-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "34ef76b2c4c774ebf542cca7c3c5f8f4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9817,
        "upload_time": "2020-12-17T08:49:54",
        "upload_time_iso_8601": "2020-12-17T08:49:54.945920Z",
        "url": "https://files.pythonhosted.org/packages/80/c5/a678dc7b1e8d550a1bf5c565e7b4af0000dc2fcd8f16c62ae73698d4e92a/ez-life-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "515686ba7cc0e5508db7ae708e2174ab8d78cf7e7bf0e9a3988b308670ebd9b5",
          "md5": "951cf9b4c8b2331740da98d0580203bb",
          "sha256": "c5e26e08e50de678fb90c0d5668a38d400dccf336aa861ea08f04dbd2fd37caf"
        },
        "downloads": -1,
        "filename": "ez_life-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "951cf9b4c8b2331740da98d0580203bb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16831,
        "upload_time": "2020-12-17T08:49:53",
        "upload_time_iso_8601": "2020-12-17T08:49:53.608047Z",
        "url": "https://files.pythonhosted.org/packages/51/56/86ba7cc0e5508db7ae708e2174ab8d78cf7e7bf0e9a3988b308670ebd9b5/ez_life-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d0d70d95fd3fcc7e9c55cfc00deafe14a7bbe161a5257666452caa337fe81ba4",
          "md5": "5b597990ad4caf6539abecf667a01172",
          "sha256": "395f48e306dd7cef47db1c056d7ad94da548e1bfa64095a4555aa1b6ef460120"
        },
        "downloads": -1,
        "filename": "ez-life-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5b597990ad4caf6539abecf667a01172",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10876,
        "upload_time": "2020-12-17T08:49:56",
        "upload_time_iso_8601": "2020-12-17T08:49:56.327265Z",
        "url": "https://files.pythonhosted.org/packages/d0/d7/0d95fd3fcc7e9c55cfc00deafe14a7bbe161a5257666452caa337fe81ba4/ez-life-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2c2b5a9202baec4604483962482038eb8e7534a38bf811a7aaf89ed577306c9f",
          "md5": "6e160b1229c6819e29f298a35e70c03a",
          "sha256": "3ea4c6b5c4ccc2d9f4e3bdf85909d97c8fb41c3564c32e7746a125620f16a40f"
        },
        "downloads": -1,
        "filename": "ez_life-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6e160b1229c6819e29f298a35e70c03a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17355,
        "upload_time": "2020-12-17T23:49:03",
        "upload_time_iso_8601": "2020-12-17T23:49:03.345503Z",
        "url": "https://files.pythonhosted.org/packages/2c/2b/5a9202baec4604483962482038eb8e7534a38bf811a7aaf89ed577306c9f/ez_life-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e372e579de45cb0c3b43dbe2763ae42e1902689e38a6030c1a0ab61f256abd84",
          "md5": "0366579764c636b1839979809bd117f3",
          "sha256": "3152937edc2f20efd04ec9a643a1a34e1aabafe62788baaadae0dbdd01e8279b"
        },
        "downloads": -1,
        "filename": "ez-life-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0366579764c636b1839979809bd117f3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11388,
        "upload_time": "2020-12-17T23:49:04",
        "upload_time_iso_8601": "2020-12-17T23:49:04.914306Z",
        "url": "https://files.pythonhosted.org/packages/e3/72/e579de45cb0c3b43dbe2763ae42e1902689e38a6030c1a0ab61f256abd84/ez-life-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b24ca9bb0da62c181e9df4bb24175af620e2c25d98c195ca10d9fc8d2734b0de",
          "md5": "839d41f49300e0eb6bbe65de33833503",
          "sha256": "a153a75ab6a865b19464b1be25f01aeb8ddd5d6dc3cedf8ccef7370e2293dc91"
        },
        "downloads": -1,
        "filename": "ez_life-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "839d41f49300e0eb6bbe65de33833503",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19564,
        "upload_time": "2020-12-27T00:57:10",
        "upload_time_iso_8601": "2020-12-27T00:57:10.835103Z",
        "url": "https://files.pythonhosted.org/packages/b2/4c/a9bb0da62c181e9df4bb24175af620e2c25d98c195ca10d9fc8d2734b0de/ez_life-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7ed7db58424e924836dffc116610321793ed50260990c4d559527ffe922efb32",
          "md5": "0d5f28dc2e133da53d85352fb98cc03a",
          "sha256": "789b0dc2ae3fc6717ecc7a16cf0516085ef5a31407219654699095a3bb6877d8"
        },
        "downloads": -1,
        "filename": "ez-life-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "0d5f28dc2e133da53d85352fb98cc03a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15413,
        "upload_time": "2020-12-27T00:57:12",
        "upload_time_iso_8601": "2020-12-27T00:57:12.368206Z",
        "url": "https://files.pythonhosted.org/packages/7e/d7/db58424e924836dffc116610321793ed50260990c4d559527ffe922efb32/ez-life-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "08b0a2140ad521e409ad1a8b7da277b927cddeaef6474ec9ecfc1e96d0e08703",
          "md5": "534240862d67c1e7b52387d6a787f3c7",
          "sha256": "893f3c11807b87663157660ea72ac057a50f7d743d1ef105e8e2ee2876115676"
        },
        "downloads": -1,
        "filename": "ez_life-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "534240862d67c1e7b52387d6a787f3c7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19951,
        "upload_time": "2021-01-30T11:18:08",
        "upload_time_iso_8601": "2021-01-30T11:18:08.876075Z",
        "url": "https://files.pythonhosted.org/packages/08/b0/a2140ad521e409ad1a8b7da277b927cddeaef6474ec9ecfc1e96d0e08703/ez_life-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "67aac8f63e37ce59d7f032c5e6a901e4ce1139b16eaf835de183e38aa68afc9a",
          "md5": "b408afe1ced251efa1218ed0aab041f1",
          "sha256": "f7977b91a835cb71e37d43576ec77c64102ce80602f8eaef15a84addd53895fe"
        },
        "downloads": -1,
        "filename": "ez-life-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "b408afe1ced251efa1218ed0aab041f1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15992,
        "upload_time": "2021-01-30T11:18:10",
        "upload_time_iso_8601": "2021-01-30T11:18:10.477917Z",
        "url": "https://files.pythonhosted.org/packages/67/aa/c8f63e37ce59d7f032c5e6a901e4ce1139b16eaf835de183e38aa68afc9a/ez-life-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "795c5d559d8c03f185740b44658af4e317568d66cc0c14cf32cdb5ae7f8eed65",
          "md5": "866d6c856bab9e8fe12af946c047bc81",
          "sha256": "8ed91f1f2ef11a7e243f30f15b698e20cffc1c0b45eb71e6dc77e5f39e9e3858"
        },
        "downloads": -1,
        "filename": "ez_life-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "866d6c856bab9e8fe12af946c047bc81",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 20193,
        "upload_time": "2021-01-30T13:20:23",
        "upload_time_iso_8601": "2021-01-30T13:20:23.708607Z",
        "url": "https://files.pythonhosted.org/packages/79/5c/5d559d8c03f185740b44658af4e317568d66cc0c14cf32cdb5ae7f8eed65/ez_life-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "720c09a6cba5062d9d7d78cac7c781e74f027c53e3394f8d88f44a08a2a303ff",
          "md5": "0136af7b52f7a59d2951f7c6348fb2fe",
          "sha256": "9c50861f9855e7e633d7a32d1c63831740df4f271c0cd5b72d0f71115725bd30"
        },
        "downloads": -1,
        "filename": "ez-life-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0136af7b52f7a59d2951f7c6348fb2fe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16304,
        "upload_time": "2021-01-30T13:20:25",
        "upload_time_iso_8601": "2021-01-30T13:20:25.655847Z",
        "url": "https://files.pythonhosted.org/packages/72/0c/09a6cba5062d9d7d78cac7c781e74f027c53e3394f8d88f44a08a2a303ff/ez-life-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "795c5d559d8c03f185740b44658af4e317568d66cc0c14cf32cdb5ae7f8eed65",
        "md5": "866d6c856bab9e8fe12af946c047bc81",
        "sha256": "8ed91f1f2ef11a7e243f30f15b698e20cffc1c0b45eb71e6dc77e5f39e9e3858"
      },
      "downloads": -1,
      "filename": "ez_life-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "866d6c856bab9e8fe12af946c047bc81",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 20193,
      "upload_time": "2021-01-30T13:20:23",
      "upload_time_iso_8601": "2021-01-30T13:20:23.708607Z",
      "url": "https://files.pythonhosted.org/packages/79/5c/5d559d8c03f185740b44658af4e317568d66cc0c14cf32cdb5ae7f8eed65/ez_life-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "720c09a6cba5062d9d7d78cac7c781e74f027c53e3394f8d88f44a08a2a303ff",
        "md5": "0136af7b52f7a59d2951f7c6348fb2fe",
        "sha256": "9c50861f9855e7e633d7a32d1c63831740df4f271c0cd5b72d0f71115725bd30"
      },
      "downloads": -1,
      "filename": "ez-life-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "0136af7b52f7a59d2951f7c6348fb2fe",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 16304,
      "upload_time": "2021-01-30T13:20:25",
      "upload_time_iso_8601": "2021-01-30T13:20:25.655847Z",
      "url": "https://files.pythonhosted.org/packages/72/0c/09a6cba5062d9d7d78cac7c781e74f027c53e3394f8d88f44a08a2a303ff/ez-life-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}