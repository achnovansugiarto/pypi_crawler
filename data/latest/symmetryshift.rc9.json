{
  "info": {
    "author": "flat35hd99",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering"
    ],
    "description": "# 生物学的構造単位生成器\n\nこのREADMEやコード内ではsymmetry shiftと呼んでいます。\n\n## PAY ATTENTION PLEASE\n\n既存パッケージである`biopython`の中身を、そのパッケージのよさを失わないまま少しずつ機能を追加し、`biopython`の責務ではない部分を`symmetryshift`が吸収するという形で実装しました。ぜひ、symmetryshiftだけでなくbiopython([fork先](https://github.com/flat35hd99/biopython))もご確認ください。\n\nまた、行っていることは単純ですが、その意義、方法はわかりにくいと感じたため、このREADMEにできるだけ補足を記しました。\n\n- [分子生物学的な前提知識](https://github.com/jphacks/D_2110#%E5%88%86%E5%AD%90%E7%94%9F%E7%89%A9%E5%AD%A6%E7%9A%84%E3%81%AA%E5%89%8D%E6%8F%90%E7%9F%A5%E8%AD%98)\n- [製品説明](https://github.com/jphacks/D_2110#%E8%A3%BD%E5%93%81%E8%AA%AC%E6%98%8E%E5%85%B7%E4%BD%93%E7%9A%84%E3%81%AA%E8%A3%BD%E5%93%81%E3%81%AE%E8%AA%AC%E6%98%8E)\n\nこの二か所で特に詳しい説明を行っています。\n\n[![IMAGE ALT TEXT HERE](src/biological_assembly.jpg)](https://youtu.be/-h38XeSu9sA)\n\n## Quick install and use guide\n\nInstallation needs distributed biopython we modified.\n\n```sh\npip install git+https://github.com/flat35hd99/biopython\npip install symmetryshift\n```\n\nand then, simply\n\n```sh\nsymmetry 1KZU # Argument is pdb id.\n```\n\nPlease check the `out.pdb` on your structure viewer and compare between `out.pdb` and `kz/pdb1kzu.ent`.(The latter is pdb file downloaded by biopython.)\n\nIf you have not installed protein viewer\n\n- PyMOL\n  - We used it in demo and demo movie.\n  - Download installer from [official page](https://pymol.org/2/), run installer, and run `pymol`. `pymol` command launch GUI. Drug and drop pdb file and you can see a pdb file structure.\n- VMD\n  - need smaller disk space than PyMOL\n  - [VMDの使い方の基本 (Mac)](https://oosakik.hatenablog.com/entry/2019/11/10/VMD%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9_%E3%82%92%E5%88%9D%E5%BF%83%E8%80%85%E3%81%AB%E3%82%82%E3%82%8F%E3%81%8B%E3%82%8A%E3%82%84%E3%81%99%E3%81%8F_%28Mac%29) (windowsも同様) is helpful to instal and view pdb file.\n\n## 製品概要\n### 背景(製品開発のきっかけ、課題等）\n\nPDBファイルという生物学・生化学分野における、タンパク質の結晶構造を記すデファクトスタンダードなファイル形式が存在する。\n\nこのファイルは、\n\n1. X線結晶構造解析やクライオ電顕などでタンパク質の結晶構造が解明され論文化されるとき、ほぼ確実に作成・公開される。\n2. 分子動力学シミュレーションはこのデータをもとにシミュレーションを行う。\n3. その他立体構造の解析では必ず利用されるといっても過言ではない。\n\nPDBファイルは解析におけるほぼすべての情報を保持できるという強力な特性があるが、それゆえファイルサイズは肥大化しがちである。\n\nそのため、回転対称性・並進対称性が構造内に存在する場合には、その対称性を利用してファイルサイズを節約する戦略が取られる。すなわち、回転対称性のある原子群（正確には主鎖ごと）について、単位（ユニット）になる原子の座標のみを記録しておき、残りの原子はどのように回転・並進させれば座標を再現できるか記すのである。\n\nこのようにして、生物学的構造単位（生物学的に意味のある分子集団）を再現する。\n\n### 分子生物学的な前提知識\n背景でも述べたように、PDB (Protein Data Bank) ファイルには、以下のように単位構造にある全原子の座標が記載されてある。枠で囲ってある部分は、左から原子のx座標、y座標、z座標である。\n\n![pdb_coord](https://user-images.githubusercontent.com/84301337/139531746-ee44b003-c757-45d6-8399-9bde1ea79c4c.jpg)\n\npdbファイルは、主にatom, structure, chain で構成されていて、biopythonパッケージがこれらの情報を活用している。\n\nPDBファイルには単位構造のデータのみしか記載されていないため、すべての構造データを一度に得ることができない。\n\n![pdb_compere](https://user-images.githubusercontent.com/84301337/139533463-2a4bb956-8778-46f4-9988-18bfc68a21ab.jpg)\n\n\nそこで、我々はPDBファイルの中にコメントとして本来の構造に関する記述があることを用いて、原子の座標を対称操作することにした。\n\n![matrix_shift](https://user-images.githubusercontent.com/84301337/139531506-93b5b24b-f1b0-4071-8fee-1d0d63909919.jpg)\n\nこれは BIOMT1 から BIOMT3 までが一つのセットになっており、青枠で囲った部分が回転行列で、黄色の枠で囲った部分が並進ベクトルである。\n緑色の枠は、回転行列の部分は単位行列、並進ベクトル部は零ベクトルとなっている。すなわち、このPDBファイルに記載されている単位構造そのものを表している。\n\nこの回転行列と並進ベクトルを元の座標に作用させることにより、対称操作した後の座標が得られる。\n\nつまり、ある原子の元の座標を <img src=\"https://latex.codecogs.com/png.latex?\\inline&space;\\bg_white&space;\\vec{r}\">\n、回転行列を<img src=\"https://latex.codecogs.com/png.latex?\\inline&space;\\bg_white&space;A\"> 、並進ベクトルを <img src=\"https://latex.codecogs.com/png.latex?\\inline&space;\\bg_white&space;\\vec{b}\"> とすると、対称操作した後の原子の座標 <img src=\"https://latex.codecogs.com/png.latex?\\inline&space;\\bg_white&space;\\vec{r'}\">\nは、次のように表すことができる。\n\n<img src=\"https://latex.codecogs.com/png.latex?\\bg_white&space;\\vec{r'}&space;=&space;A\\vec{r}&space;&plus;&space;\\vec{b}\">\n\nこの演算を原子1つ1つに、必要な対称操作の数だけ行う。\n\n### 製品説明（具体的な製品の説明）\n\n本プロダクトは、この回転・並進の作業をほぼ全てのPDBファイルに対して自動化する。\n\n具体的な説明を行う。以下は開発した生物学的構造単位生成器、もとい **symmetry shift** のワークフロー図である。赤色が今回私たちが開発、または、機能追加した箇所である。黄緑（緑系）で示した箇所は`Bio.PDP`パッケージがあらかじめ備えていた機能である。\n\n![symmetryshiftのワークフロー図](src/workflow.drawio.svg)\n\nユーザーは生物学的構造単位（生物学的に意味のある構造）を取得したいPDB IDをCLI、またはPythonのパッケージの引数として指定する。これ以上のユーザーからのインプットはない。すべてsymmetry shift内で完結する。\n\n```sh\nsymmetry 5V8K # PDB ID is 5V8K\n```\n\nパッケージとして利用する場合:\n\n```python\nfrom symmetryshift.create_biological_structure_unit import create, save\n\npdb_id = \"5V8K\"\nnew_structure = create(pdb_id)\nsave(new_structure)\n```\n\nsymmetry shiftは`sys.argv`で受け取ったPDB IDを`Bio.PDB`を用いて無償公開データサーバーからPDB fileを取得する。(**Recieve PDB ID**)\n\n次にheaderの解析(**Get matrix**)と全原子の座標を取得(**Get coordinates of Atoms**)する。全原子の座標取得については特に手を加えていないので、ここではheaderの解析について説明する。\n\nPDB fileにはヘッダー行と呼ばれる領域が存在しており、そこに決まった形式で回転行列と並進ベクトルが記述されている。(詳しくは[分子生物学的な前提知識](https://github.com/jphacks/D_2110#%E5%88%86%E5%AD%90%E7%94%9F%E7%89%A9%E5%AD%A6%E7%9A%84%E3%81%AA%E5%89%8D%E6%8F%90%E7%9F%A5%E8%AD%98) )\n\n\n\nbiopythonはヘッダーの一部を解析する`Bio.PDB.parse_pdb_header`モジュールが存在したため、これに独立して機能を追加する方法を採った。これは一つのcommitにまとめたので、[c4aae6f71c9929f1f500e8c368482bc6c1d33d34](https://github.com/flat35hd99/biopython/commit/c4aae6f71c9929f1f500e8c368482bc6c1d33d34#diff-489f4c709ac8e95f3002171793e65a4f5339a5ab137480d278b6b50f6a4dfb76)を参照いただきたい。簡潔に述べると\n\n- 既存データストア(`pdbh_dict`)に新しく`chain_ids_to_work_symmetry_operator`と`symmetry_operator`を追加し、これに保存するようにした。\n- 一番初めの単位行列はいつも[[1,0,0],[0,1,0],[0,0,1]]なので、取得しないことにした。\n- 取得したいデータは行頭が`REMARK 350`であるため、ヒットしたときにデータをいい感じに取得してデータストアに保存するようにした。\n  - 複雑なデータ型になってしまったので、コメントで補足した。\n\n以上のように実装した。この箇所はbiopythonに単純に機能追加しても、biopythonの良さであるシンプル・独立な実装は失われないと判断したので、biopython内で実装した。\n\n次に取得した回転行列と並進ベクトルを作用させる箇所(**Operate rotate matrix and translation vector to coordinates**)の説明に移る。\n\nここまでで必要なデータは全て取得できたので、演算のパートになる。\n\nここに一つ工夫ポイントがある。[分子生物学的な前提知識](https://github.com/jphacks/D_2110#%E5%88%86%E5%AD%90%E7%94%9F%E7%89%A9%E5%AD%A6%E7%9A%84%E3%81%AA%E5%89%8D%E6%8F%90%E7%9F%A5%E8%AD%98)に記したように、演算は全原子に対して\n\n<img src=\"https://latex.codecogs.com/png.latex?\\bg_white&space;\\vec{r'}&space;=&space;A\\vec{r}&space;&plus;&space;\\vec{b}\">\n\nこのように演算を行う。しかし私たちは`chain`という`atom`の集団に対してこの演算を行った。\n\n- 一つの原子に対してのみ演算を行うことは少ない。\n- PDBデータには座標以外にも、電荷、熱揺らぎなどが記録されている。しかし座標以外に和算・乗算を行って有意な情報を得られる量はない。\n\n以上の理由から、`Bio.PDB.Chain`の`__mul__()`と`__add__()`をオーバーライドする戦略を採った。そういうわけで実際の演算は以下に示すように非常にエレガントに行われる。(`/symmetryshift/symmetryshift/create_biological_structure_unit.py`の76行あたり参照)\n\n```python\nnew_chain = chain * operator[\"matrix\"] + operator[\"shift\"]\n```\n\nこれで演算が完了した。\n\n最後に保存する(**Save operated structure as a PDB file**)が、これは`Bio.PDB.PDBIO`の機能をそのまま利用した。\n\n### 特長\n\n- biopython.PDBという既存OSSを全面的に利用、また、内部の演算子をオーバーライドするなどの簡単な処理を行った。biopythonは情報の提供を責務として開発されているため、今回の対称性から原子座標を計算することは責務の範囲外にあたる。この切り分けを行った。\n- 確認できるすべてのファイルに対して正常に動作する。zero configuration.\n\n### 解決出来ること\n\n- PDB idを入れればやってくれるので、今後回転対称性・並進対称性を使って新しくPDBファイルを作る作業はやらなくてよくなる。すなわち、全ての生化学分野のアカデミアンの時間を節約する。\n- Pythonのパッケージとして`Bio.PDB.Structure`を返すことも可能なので、その後ユーザーが好きなように編集可能。\n\n### 今後の展望\n\n- PDBファイルは厳格なフォーマットに基づくため、chain name/idが52個しか指定できない。それ以上生成することになるときは途中まで生成して、52個よりも先は生成せず終了しているが、これはあんまりいい実装じゃない。改善したい。\n- JPHACKSがひと段落したらOSSとして整備する予定なので、ドキュメントをいい感じに英語で書きたい。\n- **コミットを整理してbiopythonにPRを送る。**\n\n### 注力したこと（こだわり等）\n\n* biopythonが解決すべきことかしないことかを考えた。\n  * 実装すべきかどうかも考えた。\n  * 実装すべきものは今後の本家へのPRも考慮して、（忙しくないときは）コミットメッセージをわかりやすく書いた。\n* biopythonが解決すべきだと判断したときは、biopythonのユーザーが純粋に使いやすくなるように考慮して実装した。\n* 自分たちのやりたかったことはその延長線上にあるようにした。\n\n## 開発技術\n\nPDBファイルから生物学的構造単位を生成、保存すること。\n\n#### API・データ\n* Protein Data Bank\n\n#### フレームワーク・ライブラリ・モジュール\n* [biopython(本家)](https://github.com/biopython/biopython) (forkは[こちら](https://github.com/flat35hd99/biopython))\n* 発表、動画、説明の画像には[PyMOL](https://pymol.org/2/)を利用した。\n\n### 独自技術\n#### ハッカソンで開発した独自機能・技術\n\n[製品説明](https://github.com/jphacks/D_2110#%E8%A3%BD%E5%93%81%E8%AA%AC%E6%98%8E%E5%85%B7%E4%BD%93%E7%9A%84%E3%81%AA%E8%A3%BD%E5%93%81%E3%81%AE%E8%AA%AC%E6%98%8E)で行ってしまったため、簡潔に述べる。\n\n* 回転・並進対称性のある結晶構造が記されたPDBファイルについて、これをPDBファイル内のヘッダーを解析・作用させ、生物学的構造単位を生成・保存する技術\n* 既存パッケージ`biopython`の拡張\n\n開発における注力ポイントを述べる。\n\n- biopythonのシンプルさを殺さずにそれぞれの機能を小さく実装した。\n- symmetryshiftは`biopython`が担うべきではない、演算を行う箇所を担当した。\n- biopythonにやりたいことを詰め込むのではなく、symmetryshiftとして実装した。\n\n#### 製品に取り入れた研究内容（データ・ソフトウェアなど）（※アカデミック部門の場合のみ提出必須）\n* Protein Data Bank\n* biopython\n\n### 謝辞\n* We appriciate for A. Kimura to give an assignment and teach how to read PDB files. \n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://jphacks.github.io/D_2110/docs/home/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "symmetryshift",
    "package_url": "https://pypi.org/project/symmetryshift/",
    "platform": "any",
    "project_url": "https://pypi.org/project/symmetryshift/",
    "project_urls": {
      "Bug Tracker": "https://github.com/jphacks/D_2110/issues",
      "Documentation": "https://jphacks.github.io/D_2110/docs/home/",
      "Homepage": "https://jphacks.github.io/D_2110/docs/home/",
      "Source Code": "https://github.com/jphacks/D_2110/"
    },
    "release_url": "https://pypi.org/project/symmetryshift/0.4.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Create biological strucre unit from single PDB file",
    "version": "0.4.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12047884,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f8f781bb48f453ecee4929dcc10780bda1f3c767ecc252f03c0cde527307979d",
          "md5": "c6e5b85c46fc91c39e71f9af5719a5c8",
          "sha256": "8afc8995dfa07e4c3679cdf71027d97ea56f4132dc7b39fa4220e9c4da187e49"
        },
        "downloads": -1,
        "filename": "symmetryshift-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c6e5b85c46fc91c39e71f9af5719a5c8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1538,
        "upload_time": "2021-10-30T05:27:37",
        "upload_time_iso_8601": "2021-10-30T05:27:37.924060Z",
        "url": "https://files.pythonhosted.org/packages/f8/f7/81bb48f453ecee4929dcc10780bda1f3c767ecc252f03c0cde527307979d/symmetryshift-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f7fc1be3d1f8a5ac6b544322bc63f219381885195135e920ca0f4256fdd4a9d0",
          "md5": "c0e75c601d139bce75f1321343283154",
          "sha256": "9b710bdbde346a74003275767afaa194ea7de2b30cc6a8b820f5e84fbaecf8bc"
        },
        "downloads": -1,
        "filename": "symmetryshift-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "c0e75c601d139bce75f1321343283154",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1478,
        "upload_time": "2021-10-30T05:30:35",
        "upload_time_iso_8601": "2021-10-30T05:30:35.381954Z",
        "url": "https://files.pythonhosted.org/packages/f7/fc/1be3d1f8a5ac6b544322bc63f219381885195135e920ca0f4256fdd4a9d0/symmetryshift-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4e4360edb7ddfa3dab089d9cc4c979e7c8f88c6767ed7110c50063b3fd204fec",
          "md5": "fae48c96dcb7ff30adc99a743125c8dd",
          "sha256": "562d59732f7915a57e93ff87625579853de10ffdc2ad27c0802270425e94af4d"
        },
        "downloads": -1,
        "filename": "symmetryshift-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fae48c96dcb7ff30adc99a743125c8dd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2248,
        "upload_time": "2021-10-30T19:58:34",
        "upload_time_iso_8601": "2021-10-30T19:58:34.052554Z",
        "url": "https://files.pythonhosted.org/packages/4e/43/60edb7ddfa3dab089d9cc4c979e7c8f88c6767ed7110c50063b3fd204fec/symmetryshift-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fe79e33818321e9744d892c0a43767bef36bf1b25f64109345cc546f70321af7",
          "md5": "1e4944c67a1242f08887a27b8654b9a1",
          "sha256": "4d5100ffeaf2c33a7d8b60b5551e77216a3c317c1a91100589f9bcd8f5c9f291"
        },
        "downloads": -1,
        "filename": "symmetryshift-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1e4944c67a1242f08887a27b8654b9a1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20348,
        "upload_time": "2021-11-05T12:08:47",
        "upload_time_iso_8601": "2021-11-05T12:08:47.060446Z",
        "url": "https://files.pythonhosted.org/packages/fe/79/e33818321e9744d892c0a43767bef36bf1b25f64109345cc546f70321af7/symmetryshift-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "194a9d70cc018ca20ab70a8662489f8107194acdfe53ce9229c64c8209f56c1c",
          "md5": "2c286c0bb22fdc441e65172a6c16f872",
          "sha256": "ea23e97ded082ad7943ca00781773c1311300b4852e4d3b5c329437f9c00f428"
        },
        "downloads": -1,
        "filename": "symmetryshift-0.2.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2c286c0bb22fdc441e65172a6c16f872",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 4478,
        "upload_time": "2021-11-05T12:43:03",
        "upload_time_iso_8601": "2021-11-05T12:43:03.646240Z",
        "url": "https://files.pythonhosted.org/packages/19/4a/9d70cc018ca20ab70a8662489f8107194acdfe53ce9229c64c8209f56c1c/symmetryshift-0.2.4-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7f5dd779bab4ad3788d771127cc9b2a5e5932accc44632c9ebb299392e6e51a4",
          "md5": "2acd2fa18bdf79f5000670962f6ac37b",
          "sha256": "724a393f65160133ec79f832ee09c611907e3828ba1e18ecf9e0d2df517576b8"
        },
        "downloads": -1,
        "filename": "symmetryshift-0.2.5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2acd2fa18bdf79f5000670962f6ac37b",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 10354,
        "upload_time": "2021-11-05T12:47:43",
        "upload_time_iso_8601": "2021-11-05T12:47:43.589478Z",
        "url": "https://files.pythonhosted.org/packages/7f/5d/d779bab4ad3788d771127cc9b2a5e5932accc44632c9ebb299392e6e51a4/symmetryshift-0.2.5-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4d094db02645367cf418d26e2cdd82235373d93e334e7ddc267e6e9e264178dc",
          "md5": "785e8cc2b2c7b2bb51b0386526b5cf7c",
          "sha256": "51914b829e347bb80c732c15aec7527e357cb723e73381417072cffa0681abec"
        },
        "downloads": -1,
        "filename": "symmetryshift-0.2.6-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "785e8cc2b2c7b2bb51b0386526b5cf7c",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 10523,
        "upload_time": "2021-11-13T05:21:47",
        "upload_time_iso_8601": "2021-11-13T05:21:47.509936Z",
        "url": "https://files.pythonhosted.org/packages/4d/09/4db02645367cf418d26e2cdd82235373d93e334e7ddc267e6e9e264178dc/symmetryshift-0.2.6-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e858ba91efbe8853386aafaad4edae96669f9248c5b32b89ae87488fa80b4dbf",
          "md5": "319503ccf7935f03a70f7f9840b06bd6",
          "sha256": "268c4acdefaad06f47721d656a6ef77ee3a9bb2f0082bd0990ce571edf684b66"
        },
        "downloads": -1,
        "filename": "symmetryshift-0.3.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "319503ccf7935f03a70f7f9840b06bd6",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 10431,
        "upload_time": "2021-11-17T10:56:18",
        "upload_time_iso_8601": "2021-11-17T10:56:18.660786Z",
        "url": "https://files.pythonhosted.org/packages/e8/58/ba91efbe8853386aafaad4edae96669f9248c5b32b89ae87488fa80b4dbf/symmetryshift-0.3.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "241c9da708c17c5292f94325805d89ec235a4c3142409b0684d1b61c95cb633e",
          "md5": "1b30b7c98979a93b859cc28dc2455c64",
          "sha256": "b337035d975330c05114419d6831a38511c3d29a0bc8c711c8fbcfe5c6907b30"
        },
        "downloads": -1,
        "filename": "symmetryshift-0.4.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1b30b7c98979a93b859cc28dc2455c64",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 10468,
        "upload_time": "2021-11-17T12:25:07",
        "upload_time_iso_8601": "2021-11-17T12:25:07.716122Z",
        "url": "https://files.pythonhosted.org/packages/24/1c/9da708c17c5292f94325805d89ec235a4c3142409b0684d1b61c95cb633e/symmetryshift-0.4.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "241c9da708c17c5292f94325805d89ec235a4c3142409b0684d1b61c95cb633e",
        "md5": "1b30b7c98979a93b859cc28dc2455c64",
        "sha256": "b337035d975330c05114419d6831a38511c3d29a0bc8c711c8fbcfe5c6907b30"
      },
      "downloads": -1,
      "filename": "symmetryshift-0.4.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1b30b7c98979a93b859cc28dc2455c64",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 10468,
      "upload_time": "2021-11-17T12:25:07",
      "upload_time_iso_8601": "2021-11-17T12:25:07.716122Z",
      "url": "https://files.pythonhosted.org/packages/24/1c/9da708c17c5292f94325805d89ec235a4c3142409b0684d1b61c95cb633e/symmetryshift-0.4.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}