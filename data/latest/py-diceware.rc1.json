{
  "info": {
    "author": "TomJGooding",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# py-diceware\n\nDiceware passphrase generator built with Python.\n\n## Table of Contents\n\n- [About](#about)\n- [Installation](#installation)\n- [Usage](#usage)\n  - [Number of Words](#number-of-words)\n  - [Delimiter](#delimiter)\n  - [Capitalisation](#capitalisation)\n  - [Quiet Mode](#quiet-mode)\n- [Security](#security)\n  - [Passphrase Length](#passphrase-length)\n  - [Randomness](#randomness)\n- [Licence](#licence)\n\n## About\n\nDiceware is a method for generating random, strong and memorable passphrases\n[created by Arnold G. Reinhold](https://std.com/~reinhold/diceware.html).\n\nThe original method uses ordinary physical dice to generate random five digit numbers.\nYou look up each number in a special list called the\n[Diceware Word List](https://std.com/%7Ereinhold/diceware.wordlist.asc)\nto find the corresponding word. These random words are your new passphrase.\n\npy-diceware is a command line interface tool for generating passphrases\nbased on the Diceware method.\n\n## Installation\n\nInstall py-diceware using pip:\n\n```\npip install py-diceware\n```\n\nTo learn more about installing Python packages, refer to the\n[Installation Tutorial](https://packaging.python.org/en/latest/tutorials/installing-packages/)\nfrom PyPI.\n\n## Usage\n\nOnce installed, use `--help` to list all the available options:\n\n```\n$ py-diceware --help\nUsage: py-diceware [OPTIONS]\n\n  Diceware passphrase generator.\n\nOptions:\n  -w, --words INTEGER RANGE  Number of words for passphrase.  [default: 6;\n                             x>=1]\n  -d, --delimiter TEXT       Delimiter to separate words in passphrase.\n  --caps / --no-caps         Capitalise words in passphrase.  [default: caps]\n  -q, --quiet                Only output the passphrase. Silence prompts and\n                             other output.\n  --help                     Show this message and exit.\n```\n\n### Number of Words\n\nYou can specify the number of words for the passphrase with the `-w` option:\n\n```\n$ py-diceware -w 8\n\n#...\n\nYour passphrase is:\nUsdaChiveAlaskaWareTwSethShuckDeform\n```\n\nYou will be prompted for the number of words if not provided from the command line:\n\n```\n$ py-diceware\nNumber of words [6]:\n\n#...\n```\n\nThe default number of words for the passphrase is 6, which is what is recommended for most users.\n\nFor more information about recommended passphrase lengths, refer to the ['How long should my passphrase be?'\nsection on the original Diceware FAQ](https://std.com/%7Ereinhold/dicewarefaq.html#howlong).\n\n### Delimiter\n\nBy default the words in the passphrase will not be separated by any delimiter\n(or more accurately, the default delimiter is just an empty string).\n\nYou can specify a delimiter for the passphrase with the `-d` option:\n\n```\n$ py-diceware -w 6 -d \"_\"\n\n#...\n\nYour passphrase is:\nSpasm_Windy_Teet_Straw_Punish_Dj\n```\n\nThe original Diceware method\n[recommends separating each word with a space](https://std.com/~reinhold/dicewarefaq.html#spaces),\nhowever this is not the default for py-diceware just based on the author's personal preference.\nThis also allows for quick copying of the passphrase with a double-click on Linux systems.\n\nIt could be argued that without any delimiter, the passphrase entropy is slightly reduced due to redundancy;\nfor example, the words \"in put clammy\" and \"input clam my\" would generate the same passphrase.\nHowever, py-diceware mitigates this problem by capitalising each word by default\n(see the [Capitalisation](#capitalisation) section below).\n\nIf you would prefer to generate a passphrase as recommended by the original Diceware method,\nsimply specify a space as the delimiter and no capitalisation of words:\n\n```\n$ py-diceware -w 6 -d \" \" --no-caps\n\n#...\n\nYour passphrase is:\nflick aura junky meter alien throb\n```\n\n### Capitalisation\n\nBy default each word in the passphrase will be capitalised.\n\nYou can specify whether to capitalise words with the `-caps` or `--no-caps` option:\n\n```\n$ py-diceware -w 6 -d \" \" --no-caps\n\n#...\n\nYour passphrase is:\nflick aura junky meter alien throb\n```\n\nAll words in the Diceware list are lower case, and the original method\n[does not recommend capitalising words](https://std.com/%7Ereinhold/dicewarefaq.html#capitalize)\nas arguably this does make the passphrase slightly more difficult to type\n(and harder to remember if characters are capitalised randomly, though this is not applicable for py-diceware).\n\nHowever, the Diceware FAQ does note exceptions where some system password policies\n\"insist that you use a mix of uppercase and lower case letters\"\nor \"where the length of the password is limited to 15 characters\".\n\nIf you would prefer to generate a passphrase as recommended by the original Diceware method,\nsimply specify a space as the delimiter and no capitalisation of words like the example above.\n\nIt is recommended to use a delimiter if you choose not to capitalise the passphrase words,\notherwise this could slightly reduce the passphrase entropy as discussed above\nin the [Delimiter](#delimiter) section.\n\n### Quiet Mode\n\nYou can use the `--quiet` option to only output the passphrase and silence any prompts and other output:\n\n```\n$ py-diceware -w 8 -q\nUsdaChiveAlaskaWareTwSethShuckDeform\n```\n\nIf the number of words is not provided from the command line in quiet mode, the generated passphrase\nwill use the default of 6 words which is recommended for most users\n(see the above [Number of Words](#number-of-words) section for more info).\n\n## Security\n\n> **Warning**\n> Use py-diceware to generate passphrases at your own risk.\n\nAccording to the [Diceware FAQ](https://theworld.com/%7Ereinhold/dicewarefaq.html#someoneknows),\nthe Diceware method is secure even if an attacker knows:\n\n- that you used Diceware to pick your passphrase\n- the number of words in your passphrase\n- the word list used.\n\nThe security of the Diceware method is based on\n\"the huge number of combinations that an attacker must search through, even with that knowledge\".\n\n### Passphrase Length\n\nA six word passphrase is recommended for most users, which is the default for py-diceware\nif the number of words is not provided.\n\nFor more information about recommended passphrase lengths, refer to the ['How long should my passphrase be?'\nsection on the original Diceware FAQ](https://std.com/%7Ereinhold/dicewarefaq.html#howlong).\n\nThe original Diceware method recommends starting over if the generated passphrase is shorter than 19 characters.\nBecause some words on the diceware list are two characters or less, it is possible to generate a very short passphrase.\n\nAlthough extremely rare, you should also start over if your passphrase is a recognisable sentence or phrase.\n\n### Randomness\n\npy-diceware utilises Python's [secrets](https://docs.python.org/3/library/secrets.html) module,\nwhich is used for \"generating cryptographically strong random numbers suitable for managing data\nsuch as passwords, account authentication, security tokens, and related secrets\".\n\nThis is opposed to the [random](https://docs.python.org/3/library/random.html#module-random) module,\nwhich is sometimes dangerously suggested for generating sensitive information such as passwords.\nThe random module generates only pseudo-random numbers\nand is designed for modelling and simulation, not security or cryptography.\n\nSee [PEP 506](https://peps.python.org/pep-0506/) for more info.\n\nThe original Diceware method recommends:\n\"Do not use a computer program or electronic dice generator.\nThere is no easy way to be sure they are random enough.\"\n\nThe [secrets](https://docs.python.org/3/library/secrets.html) module documentation advises that it\n\"provides access to the most secure source of randomness that your operating system provides\".\n\nIf you are concerned about maximum security, do not use py-diceware.\nInstead follow the [Diceware method](https://theworld.com/~reinhold/diceware.html)\nusing real dice.\n\n## Licence\n\nLicensed under the [GNU General Public License v3.0](LICENSE).\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/TomJGooding/py-diceware",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "py-diceware",
    "package_url": "https://pypi.org/project/py-diceware/",
    "platform": null,
    "project_url": "https://pypi.org/project/py-diceware/",
    "project_urls": {
      "Homepage": "https://github.com/TomJGooding/py-diceware"
    },
    "release_url": "https://pypi.org/project/py-diceware/0.1.0/",
    "requires_dist": [
      "importlib-resources",
      "click",
      "black ; extra == 'dev'",
      "flake8 ; extra == 'dev'",
      "isort ; extra == 'dev'",
      "mypy ; extra == 'dev'",
      "pytest ; extra == 'dev'",
      "pytest-cov ; extra == 'dev'"
    ],
    "requires_python": ">=3.7",
    "summary": "Diceware passphrase generator built with Python",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15578148,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9d268aa18a1aa5c6705713342c8e81f59938a39c6373a3d6c59d0935efcd636c",
          "md5": "9a2a77edeed805780328d5d4fef773c4",
          "sha256": "1fc6a51b0ae59d49b0d7a71ce3ef8795b9451e9f8045b497da526e937c9c1ead"
        },
        "downloads": -1,
        "filename": "py_diceware-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9a2a77edeed805780328d5d4fef773c4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 56695,
        "upload_time": "2022-10-29T14:20:53",
        "upload_time_iso_8601": "2022-10-29T14:20:53.625260Z",
        "url": "https://files.pythonhosted.org/packages/9d/26/8aa18a1aa5c6705713342c8e81f59938a39c6373a3d6c59d0935efcd636c/py_diceware-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f41a3baf074049c198e787cbb87e8c6d89f1cf3b0c5a4e567d0bf3578e73a954",
          "md5": "e5b0456864dfadd20ca27548415acbce",
          "sha256": "3329d5716bd4ee50ad890a63405707c2655909cc40549f09cf9219d9eb963834"
        },
        "downloads": -1,
        "filename": "py-diceware-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e5b0456864dfadd20ca27548415acbce",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 59226,
        "upload_time": "2022-10-29T14:20:56",
        "upload_time_iso_8601": "2022-10-29T14:20:56.694988Z",
        "url": "https://files.pythonhosted.org/packages/f4/1a/3baf074049c198e787cbb87e8c6d89f1cf3b0c5a4e567d0bf3578e73a954/py-diceware-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9d268aa18a1aa5c6705713342c8e81f59938a39c6373a3d6c59d0935efcd636c",
        "md5": "9a2a77edeed805780328d5d4fef773c4",
        "sha256": "1fc6a51b0ae59d49b0d7a71ce3ef8795b9451e9f8045b497da526e937c9c1ead"
      },
      "downloads": -1,
      "filename": "py_diceware-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9a2a77edeed805780328d5d4fef773c4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 56695,
      "upload_time": "2022-10-29T14:20:53",
      "upload_time_iso_8601": "2022-10-29T14:20:53.625260Z",
      "url": "https://files.pythonhosted.org/packages/9d/26/8aa18a1aa5c6705713342c8e81f59938a39c6373a3d6c59d0935efcd636c/py_diceware-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f41a3baf074049c198e787cbb87e8c6d89f1cf3b0c5a4e567d0bf3578e73a954",
        "md5": "e5b0456864dfadd20ca27548415acbce",
        "sha256": "3329d5716bd4ee50ad890a63405707c2655909cc40549f09cf9219d9eb963834"
      },
      "downloads": -1,
      "filename": "py-diceware-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e5b0456864dfadd20ca27548415acbce",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 59226,
      "upload_time": "2022-10-29T14:20:56",
      "upload_time_iso_8601": "2022-10-29T14:20:56.694988Z",
      "url": "https://files.pythonhosted.org/packages/f4/1a/3baf074049c198e787cbb87e8c6d89f1cf3b0c5a4e567d0bf3578e73a954/py-diceware-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}