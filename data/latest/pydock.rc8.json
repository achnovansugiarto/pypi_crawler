{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# PyDock\n\n```text\nNOTE: this project is based on the python-on-whales project, you can find it at https://github.com/gabrieldemarmiesse/python-on-whales.\n```\n\nA decent Python wrapper for Docker CLI.\n\nWorks on Linux, macOS and Windows, for Python 3.7 and above. \n\nThe docs can be found at this address: <https://duckietown.github.io/pydock/>\n\nThe GitHub repo can be found at this address: <https://github.com/duckietown/pydock>\n\n\n## How to install?\n\n```bash\npip install pydock\n```\n\n## Some cool examples\n\nStart by doing\n```python\nfrom pydock import docker\n```\nand then:\n\n* `docker run hello-world` -> [`docker.run(\"hello-world\")`](https://duckietown.github.io/pydock/sub-commands/container/#run)\n* `docker pull ubuntu` -> [`docker.pull(\"ubuntu\")`](https://duckietown.github.io/pydock/sub-commands/image/#pull)\n* `docker build ./` -> [`docker.build(\"./\")`](https://duckietown.github.io/pydock/sub-commands/buildx/#build)\n* `docker compose up my_service` -> [`docker.compose.up([\"my_service\"])`](https://duckietown.github.io/pydock/sub-commands/compose/#up)\n* `docker image ls` -> [`docker.image.list()`](https://duckietown.github.io/pydock/sub-commands/image/#list)\n* `docker ps` -> [`docker.ps()`](https://duckietown.github.io/pydock/sub-commands/container/#list)\n* `docker cp` -> [`docker.copy()`](https://duckietown.github.io/pydock/sub-commands/container/#copy)\n\nYou get the idea ðŸ™‚ it's the same as the CLI we all know and love.\n\n```python\n>>> from pydock import docker\n\n>>> output = docker.run(\"hello-world\")\n>>> print(output)\n\nHello from Docker!\nThis message shows that your installation appears to be working correctly.\n\n...\n```\n\n\n```python\n>>> from pydock import docker\n>>> print(docker.run(\"nvidia/cuda:11.0-base\", [\"nvidia-smi\"], gpus=\"all\"))\n+-----------------------------------------------------------------------------+\n| NVIDIA-SMI 450.51.06    Driver Version: 450.51.06    CUDA Version: 11.0     |\n|-------------------------------+----------------------+----------------------+\n| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n|                               |                      |               MIG M. |\n|===============================+======================+======================|\n|   0  Tesla T4            On   | 00000000:00:1E.0 Off |                    0 |\n| N/A   34C    P8     9W /  70W |      0MiB / 15109MiB |      0%      Default |\n|                               |                      |                  N/A |\n+-------------------------------+----------------------+----------------------+\n\n+-----------------------------------------------------------------------------+\n| Processes:                                                                  |\n|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |\n|        ID   ID                                                   Usage      |\n|=============================================================================|\n|  No running processes found                                                 |\n+-----------------------------------------------------------------------------+\n```\n\n```python\n>>> from pydock import docker\n>>> my_docker_image = docker.pull(\"ubuntu:20.04\")\n20.04: Pulling from library/ubuntu\ne6ca3592b144: Downloading [=============>                                     ]  7.965MB/28.56MB\n534a5505201d: Download complete\n990916bd23bb: Download complete\n\n>>> print(my_docker_image.repo_tags)\n['ubuntu:20.04']\n\n>>> docker.image.list()\n[pydock.Image(id='sha256:1a437e363abfa', tags=['ubuntu:20.04'])]\n\n>>> my_docker_image.remove()\n```\n\n```python\n>>> from pydock import docker\n>>> my_image = docker.build(\".\", tags=\"some_name\")  # uses Buildx/buildkit by default\n[+] Building 1.6s (17/17) FINISHED\n => [internal] load build definition from Dockerfile                                                            0.0s\n => => transferring dockerfile: 32B                                                                             0.0s\n => [internal] load .dockerignore                                                                               0.0s\n => => transferring context: 2B                                                                                 0.0s\n => [internal] load metadata for docker.io/library/python:3.6                                                   1.4s\n => [python_dependencies 1/5] FROM docker.io/library/python:3.6@sha256:29328c59adb9ee6acc7bea8eb86d0cb14033c85  0.0s\n => [internal] load build context                                                                               0.1s\n => => transferring context: 72.86kB                                                                            0.0s\n => CACHED [python_dependencies 2/5] RUN pip install typeguard pydantic requests tqdm                           0.0s\n => CACHED [python_dependencies 3/5] COPY tests/test-requirements.txt /tmp/                                     0.0s\n => CACHED [python_dependencies 4/5] COPY requirements.txt /tmp/                                                0.0s\n => CACHED [python_dependencies 5/5] RUN pip install -r /tmp/test-requirements.txt -r /tmp/requirements.txt     0.0s\n => CACHED [tests_ubuntu_install_without_buildx 1/7] RUN apt-get update &&     apt-get install -y       apt-tr  0.0s\n => CACHED [tests_ubuntu_install_without_buildx 2/7] RUN curl -fsSL https://download.docker.com/linux/ubuntu/g  0.0s\n => CACHED [tests_ubuntu_install_without_buildx 3/7] RUN add-apt-repository    \"deb [arch=amd64] https://downl  0.0s\n => CACHED [tests_ubuntu_install_without_buildx 4/7] RUN  apt-get update &&      apt-get install -y docker-ce-  0.0s\n => CACHED [tests_ubuntu_install_without_buildx 5/7] WORKDIR /pydock                                  0.0s\n => CACHED [tests_ubuntu_install_without_buildx 6/7] COPY . .                                                   0.0s\n => CACHED [tests_ubuntu_install_without_buildx 7/7] RUN pip install -e .                                       0.0s\n => exporting to image                                                                                          0.1s\n => => exporting layers                                                                                         0.0s\n => => writing image sha256:e1c2382d515b097ebdac4ed189012ca3b34ab6be65ba0c650421ebcac8b70a4d                    0.0s\n => => naming to docker.io/library/some_image_name\n```\n\n## Some more `docker.run()` advanced examples with postgres\n\n```bash\ndocker run --name some-postgres -e POSTGRES_PASSWORD=mysecretpassword -d postgres\n```\nbecomes\n```python\nfrom pydock import docker\n\ndocker.run(\n    \"postgres:9.6\",\n    name=\"some-postgres\",\n    envs={\"POSTGRES_PASSWORD\": \"mysecretpassword\"},\n    detach=True,\n)\nprint(docker.ps())\n# [pydock.Container(id='f5fb939c409d', name='some-postgres')]\n```\n\n-----\n\n```bash\ndocker run -it --rm --network some-network postgres psql -h some-postgres -U postgres\n```\nbecomes\n```python\nfrom pydock import docker\n\n# since it's interactive, you'll be dropped into the psql shell. The python code\n# will continue only after you exit the shell.\ndocker.run(\n    \"postgres:9.6\",\n    [\"psql\", \"-h\", \"some-postgres\", \"-U\", \"postgres\"],\n    networks=[\"some-network\"],\n    interactive=True,\n    tty=True,\n    remove=True,\n)\n```\n----------\n\n\n```bash\ndocker run -d --name some-postgres -e POSTGRES_PASSWORD=mysecretpassword -e PGDATA=/var/lib/postgresql/data/pgdata -v /custom/mount:/var/lib/postgresql/data -v myvolume:/tmp/myvolume postgres -c shared_buffers=256MB -c max_connections=200\n```\nbecomes\n```python\nfrom pydock import docker\n\ndocker.run(\n    \"postgres:9.6\",\n    [\"-c\", \"shared_buffers=256MB\", \"-c\", \"max_connections=200\"],\n    name=\"some-postgres\",\n    envs={\"POSTGRES_PASSWORD\": \"mysecretpassword\", \"PGDATA\": \"/var/lib/postgresql/data/pgdata\"},\n    volumes=[(\"/custom/mount\", \"/var/lib/postgresql/data\"), (\"myvolume\", \"/tmp/myvolume\")],\n    detach=True,\n)\n```\n\n\n## Main features\n\n* 1 to 1 mapping between the CLI interface and the Python API. No need to look in the docs\nwhat is the name of the function/argument you need.\n* Support for the latest Docker features: \n[Docker buildx/buildkit](https://github.com/docker/buildx), \n`docker run --gpu=all ...`\n* Support for Docker stack, services and Swarm (same API as the command line).\n* Progress bars and progressive outputs when pulling, pushing, loading, building...\n* Support for some other CLI commands that are not in [Docker-py](https://docker-py.readthedocs.io/en/stable/): \n`docker cp`, `docker run --cpus ...` and more.\n* Nice SSH support for remote daemons.\n* Docker object as Python objects: Container, Images, Volumes, Services... and their\nattributes are updated in real-time!\n* Each Docker object can be used as a context manager. When getting out of the \ncontext, the Docker object is removed automatically, even if an exception occurs.\n* A fully typed API (Mypy and IDE-friendly) compatible with `pathlib` and `os.path`\n* All Docker objects and the Docker client are safe to use with multithreading and multiprocessing.\n* Display the commands called and the environment variables used by setting the environment variable `PYDOCK_DEBUG=1`.\n\n## Why another project? Why not build on Docker-py?\n\nIn a sense this project is built on top of [Docker-py](https://docker-py.readthedocs.io/en/stable/) \nbecause the implementation, the organisation and the API is inspired from the project, but the codebases \ncould not be the same.\n\nTwo major differences do not permit that:\n\n1) The API is quite different. The aim of Pydock is to provide a 1-to-1 \nmapping between the Docker command line and Python, so that users don't even have \nto open the docs to do write code.\n\n2) While [Docker-py](https://docker-py.readthedocs.io/en/stable/) is a complete re-implementation of the Docker client binary \n(written in Go), Pydock sits on top of the Docker client binary, which makes \nimplementing new features much easier and safer. For example, it's \n[unlikely that docker-py supports Buildx/buildkit](https://github.com/docker/docker-py/issues/2230#issuecomment-454344497)\nanytime soon because rewriting a large Go codebase in Python is hard work.\n\n\n![](./img/docker_clients.png)\n\n\n## Should I use Docker-py or Pydock?\n\nWell, it's written in each project's description!\n\n* Docker-py: A Python library for the Docker Engine API\n* Pydock: An awesome Python wrapper for an awesome Docker CLI\n\n\nIf you need to talk to the Docker engine directly, you need to do low level operations,\nuse docker-py. Some good example would be writing the code to control docker from an IDE, \nor if the speed of Docker calls is very important. \nIf you don't want to depend on the Docker CLI binary (~50MB), use docker-py.\n\n\nIf you wanted to call the docker command line from Python, \ndo high level operations, use Pydock.\nFor example if you want to write your CI logic in Python rather than in bash (a very good choice ðŸ˜‰).\nSome commands are only available in Pydock \ntoo: `docker.buildx.build(...)`, `docker.stack.deploy(...)`...\n\nUse the right tool for the right job ðŸ™‚\n\n## Where is the project now? Where is it going?\n\n| sub-command  | Functions implemented  | Progress |\n|---|---|---|\n| buildx  | 10/11 | ![92%](https://progress-bar.dev/92) |\n| compose  | 18/23 | ![73%](https://progress-bar.dev/78) |\n| config  | 4/4 | ![50%](https://progress-bar.dev/100) |\n| container | 22/24 | ![50%](https://progress-bar.dev/91) |\n| context  | 4/6 | ![50%](https://progress-bar.dev/67) |\n| image  | 12/13 | ![50%](https://progress-bar.dev/92) |\n| manifest  | 0/4 | ![50%](https://progress-bar.dev/0) |\n| network  | 7/7 | ![100%](https://progress-bar.dev/100) |\n| node  | 7/7 | ![100%](https://progress-bar.dev/100) |\n| plugins  | 10/10 | ![50%](https://progress-bar.dev/100) |\n| secret  | 4/4 | ![100%](https://progress-bar.dev/100) |\n| service  | 7/9 | ![50%](https://progress-bar.dev/78) |\n| stack  | 5/5 | ![100%](https://progress-bar.dev/100) |\n| swarm  | 8/8 | ![100%](https://progress-bar.dev/100) |\n| system  | 3/4 | ![50%](https://progress-bar.dev/75) |\n| trust  | 0/3 | ![50%](https://progress-bar.dev/0) |\n| volume  | 7/7 | ![50%](https://progress-bar.dev/100) |\n\nTake those numbers with a grain of salt. The functions don't all need the same amount of work to be implemented.\n\n## Alternatives to Docker: Podman, nerdctl...\n\nSupport for Docker-compatible clients like [Podman](https://podman.io/) and [Nerdctl](https://github.com/containerd/nerdctl) was introduced in Pydock version 0.44.0.\n\nYou can use an arbitrary binary to execute Docker commands by using the argument `client_call` of `pydock.DockerCLient`.\nHere is an example:\n```python\n>>> from pydock import DockerClient\n\n>>> nerdctl = DockerClient(client_call=[\"nerdctl\"])\n\n>>> nerdctl.pull(\"python:3.9\")\ndocker.io/library/python:3.9:                                                     resolved       |++++++++++++++++++++++++++++++++++++++|\nindex-sha256:a83c0aa6471527636d7331c30704d0f88e0ab3331bbc460d4ae2e53bbae64dca:    done           |++++++++++++++++++++++++++++++++++++++|\nmanifest-sha256:8ccef93ff3c9e1bb9562d394526cdc6834033a0498073d41baa8b309f4fac20e: done           |++++++++++++++++++++++++++++++++++++++|\nconfig-sha256:f033692e2c5abe1e0ee34bcca759a3e4432b10b0031174b08d48bcc90d14d68b:   done           |++++++++++++++++++++++++++++++++++++++|\nlayer-sha256:9952b1051adaff513c99f86765361450af108b12b0073d0ba40255c4e419b481:    done           |++++++++++++++++++++++++++++++++++++++|\nlayer-sha256:c766e27afb21eddf9ab3e4349700ebe697c32a4c6ada6af4f08282277a291a28:    done           |++++++++++++++++++++++++++++++++++++++|\nlayer-sha256:1535e3c1181a81ea66d5bacb16564e4da2ba96304506598be39afe9c82b21c5c:    done           |++++++++++++++++++++++++++++++++++++++|\nlayer-sha256:6de7cb7bdc8f9b4c4d6539233fe87304aa1a6427c3238183265c9f02d831eddb:    done           |++++++++++++++++++++++++++++++++++++++|\nlayer-sha256:967757d5652770cfa81b6cc7577d65e06d336173da116d1fb5b2d349d5d44127:    done           |++++++++++++++++++++++++++++++++++++++|\nlayer-sha256:c357e2c68cb3bf1e98dcb3eb6ceb16837253db71535921d6993c594588bffe04:    done           |++++++++++++++++++++++++++++++++++++++|\nlayer-sha256:26787c68cf0c92a778db814d327e283fe1da4434a7fea1f0232dae8002e38f33:    done           |++++++++++++++++++++++++++++++++++++++|\nlayer-sha256:6aefca2dc61dcbcd268b8a9861e552f9cdb69e57242faec64ac120d2355a9c1a:    done           |++++++++++++++++++++++++++++++++++++++|\nlayer-sha256:32a180f5cf85702e7680719c40c39c07972b1176355df5a621de9eb87ad07ce2:    done           |++++++++++++++++++++++++++++++++++++++|\nelapsed: 35.9s                                                                    total:  333.5  (9.3 MiB/s)\n\npydock.Image(id='sha256:f033692e2c5ab', tags=['python:3.9'])\n```\n\nYou can do something similar with podman:\n\n```python\nfrom pydock import DockerClient\n\npodman = DockerClient(client_call=[\"podman\"])\n\npodman.pull(\"hello-world\")\npodman.run(\"hello-world\")\nprint(podman.ps())\n...\n```\n\n\n## Contributing\n\nAny and all PRs are welcome. Please see [this documentation](./CONTRIBUTING.md).\n\n## What about the license?\n\nIt's a MIT license, so quite permissive.\n\nThe license can be found [in the git repository](https://github.com/duckietown/pydock/blob/master/LICENSE).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pydock",
    "package_url": "https://pypi.org/project/pydock/",
    "platform": null,
    "project_url": "https://pypi.org/project/pydock/",
    "project_urls": {
      "Bug Tracker": "https://github.com/duckietown/pydock/issues",
      "Documentation": "https://duckietown.github.io/pydock/",
      "Source Code": "https://github.com/duckietown/pydock"
    },
    "release_url": "https://pypi.org/project/pydock/0.0.8/",
    "requires_dist": null,
    "requires_python": ">=3.7, <4",
    "summary": "A decent Python wrapper for Docker CLI",
    "version": "0.0.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15657630,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4a6753eaab0e6c4fbfcf9522c665504d1666e97ffa84ee0f98624dedfd994b3d",
          "md5": "d060a31375715029982537ddd2a9f619",
          "sha256": "d6f0af41cc7a72556ad13de3a623d7b99b9e46d1d89eb906351e189bc276abd0"
        },
        "downloads": -1,
        "filename": "pydock-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d060a31375715029982537ddd2a9f619",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 87821,
        "upload_time": "2022-10-13T20:49:56",
        "upload_time_iso_8601": "2022-10-13T20:49:56.356541Z",
        "url": "https://files.pythonhosted.org/packages/4a/67/53eaab0e6c4fbfcf9522c665504d1666e97ffa84ee0f98624dedfd994b3d/pydock-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "41eccc102081ae3e91de7940a800b7674bf239ddfbf7768a7c6e3a4699d4b156",
          "md5": "e2277a215d9da25e303abfeae86ccd5e",
          "sha256": "6110e0cf6ab69d0119ae9ef6a1ebd9fc9c2fc9f29b0fdbb3f2f93446171c9f2f"
        },
        "downloads": -1,
        "filename": "pydock-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e2277a215d9da25e303abfeae86ccd5e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 87779,
        "upload_time": "2022-10-13T20:54:52",
        "upload_time_iso_8601": "2022-10-13T20:54:52.124058Z",
        "url": "https://files.pythonhosted.org/packages/41/ec/cc102081ae3e91de7940a800b7674bf239ddfbf7768a7c6e3a4699d4b156/pydock-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b1497b873908fd542e59fd36103d06734d91c30b21883fff8abd0ff9b7f659b",
          "md5": "8737a0612995f31e2e6317bcd2179aa0",
          "sha256": "b155abbbfaa9a879f6b475788dd261dca5e93ca324e1c5bcd9bb8705b6d6c942"
        },
        "downloads": -1,
        "filename": "pydock-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "8737a0612995f31e2e6317bcd2179aa0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 88969,
        "upload_time": "2022-10-14T05:53:24",
        "upload_time_iso_8601": "2022-10-14T05:53:24.397188Z",
        "url": "https://files.pythonhosted.org/packages/2b/14/97b873908fd542e59fd36103d06734d91c30b21883fff8abd0ff9b7f659b/pydock-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "88ffa2fd029a91f4ee975c0b97e06f504b93b776ab017f76f215f4db3a9a2d05",
          "md5": "3b7880a9d021c0791caac5994f8f8d99",
          "sha256": "2e0fd00195e4159fb71cac44d076b0a477fb71322ea88f7ef8873a63cab6df69"
        },
        "downloads": -1,
        "filename": "pydock-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "3b7880a9d021c0791caac5994f8f8d99",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 88994,
        "upload_time": "2022-10-14T15:16:19",
        "upload_time_iso_8601": "2022-10-14T15:16:19.479506Z",
        "url": "https://files.pythonhosted.org/packages/88/ff/a2fd029a91f4ee975c0b97e06f504b93b776ab017f76f215f4db3a9a2d05/pydock-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8304aeb07a023193c00a558e082c84a0e86fad4af0a82eee31fc8ff952cbe665",
          "md5": "c1e7b6218262c90e83e859e091522299",
          "sha256": "812e8a4aabd50c84ad181f46a5f1bf9d353d8396898e38be48b24926b73297ba"
        },
        "downloads": -1,
        "filename": "pydock-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "c1e7b6218262c90e83e859e091522299",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 92203,
        "upload_time": "2022-10-25T14:41:24",
        "upload_time_iso_8601": "2022-10-25T14:41:24.257214Z",
        "url": "https://files.pythonhosted.org/packages/83/04/aeb07a023193c00a558e082c84a0e86fad4af0a82eee31fc8ff952cbe665/pydock-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6f61fbbec7c0b28d351a8e819fad395e09a9867892d585357ccf30f659dd8b47",
          "md5": "88c7f6390a017a151f164dcd237ad0df",
          "sha256": "ffff7fd23a5c21fcae855d70de0fe762647a3727db98a4151aacaafd6ae647c5"
        },
        "downloads": -1,
        "filename": "pydock-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "88c7f6390a017a151f164dcd237ad0df",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 92214,
        "upload_time": "2022-10-31T14:05:24",
        "upload_time_iso_8601": "2022-10-31T14:05:24.208747Z",
        "url": "https://files.pythonhosted.org/packages/6f/61/fbbec7c0b28d351a8e819fad395e09a9867892d585357ccf30f659dd8b47/pydock-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e095e70f1204d135be0d5e66cfd381cd2d1ca522c4c700293d37f2b1fbb748f4",
          "md5": "f92d25b76e297a6005a51a44ebf2d672",
          "sha256": "a54011d1e1d787cb037314d609a4924b09289460e1e4ff6084e6245d917c2c2f"
        },
        "downloads": -1,
        "filename": "pydock-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "f92d25b76e297a6005a51a44ebf2d672",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 92222,
        "upload_time": "2022-11-01T02:48:59",
        "upload_time_iso_8601": "2022-11-01T02:48:59.747884Z",
        "url": "https://files.pythonhosted.org/packages/e0/95/e70f1204d135be0d5e66cfd381cd2d1ca522c4c700293d37f2b1fbb748f4/pydock-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4d9ca6da9eba2861224f28ad2cd6d2219d307608242711399e796f9eadfe165d",
          "md5": "12c7a83d24f3a9d3d495ae1aa83ce236",
          "sha256": "3e978ceebcf75906af7eaeb1da5da9105f1e2a6a9a7b9a9c0deab09dc7900b90"
        },
        "downloads": -1,
        "filename": "pydock-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "12c7a83d24f3a9d3d495ae1aa83ce236",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 92175,
        "upload_time": "2022-11-04T16:41:04",
        "upload_time_iso_8601": "2022-11-04T16:41:04.983092Z",
        "url": "https://files.pythonhosted.org/packages/4d/9c/a6da9eba2861224f28ad2cd6d2219d307608242711399e796f9eadfe165d/pydock-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4d9ca6da9eba2861224f28ad2cd6d2219d307608242711399e796f9eadfe165d",
        "md5": "12c7a83d24f3a9d3d495ae1aa83ce236",
        "sha256": "3e978ceebcf75906af7eaeb1da5da9105f1e2a6a9a7b9a9c0deab09dc7900b90"
      },
      "downloads": -1,
      "filename": "pydock-0.0.8.tar.gz",
      "has_sig": false,
      "md5_digest": "12c7a83d24f3a9d3d495ae1aa83ce236",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7, <4",
      "size": 92175,
      "upload_time": "2022-11-04T16:41:04",
      "upload_time_iso_8601": "2022-11-04T16:41:04.983092Z",
      "url": "https://files.pythonhosted.org/packages/4d/9c/a6da9eba2861224f28ad2cd6d2219d307608242711399e796f9eadfe165d/pydock-0.0.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}