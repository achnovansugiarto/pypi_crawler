{
  "info": {
    "author": "Ilya Bumarskov",
    "author_email": "bumarskov@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Quality Assurance"
    ],
    "description": "# TestRail reporter\n[![CircleCI](https://circleci.com/gh/ibumarskov/testrail-reporter/tree/master.svg?style=svg)](https://circleci.com/gh/ibumarskov/testrail-reporter/?branch=master)\n\nThe testrail-reporter repository contains scripts that allow to report test results to TestRail and analyze them.\n\n**Features**\n- Templates-based (yaml) mapping for pushing xml attributes to desired TestRail fields. Allows you to publish custom xml files.\n- Bulk test publishing.\n- Supports configurations for test plan entry (Test Run)\n- Comparison and publishing failed SetUp classes (Currently tempest only)\n- Publishing of Test Suites with template-based mappings for case attributes. PyTest and Tempest test lists are supported from the box.\n- Analyzer of reported results.\n\n## Know issues and limitations:\n- Nested sections aren't supported\n\n## Installation\n\n    python3 setup.py install\n\n## Usage\nSet the TestRail parameters before using the script:\n\n    export TESTRAIL_URL=<url>\n    export TESTRAIL_USER=<user>\n    export TESTRAIL_PASSWORD=<password>\n\n### Publish results\n\n    usage: testrail-reporter publish [-h] [-p TR_PROJECT] [-t TR_PLAN] [-r TR_RUN] [-s TR_SUITE] [-m TR_MILESTONE] [-c TR_CONF] [--plan-description TR_PLAN_DESCR] [--run-description TR_RUN_DESCR] [--limit LIMIT]\n                                 [--tr-limit TR_LIMIT] [--remove-untested] [--remove-skipped] [--result-attrs TR_RESULT_ATTRS] [--map MAP] [--result-map TR_RESULT_MAP]\n                                 Tempest report\n\n    positional arguments:\n      Tempest report        Path to tempest report (.xml)\n    \n    optional arguments:\n      -h, --help            show this help message and exit\n      -p TR_PROJECT         TestRail Project name.\n      -t TR_PLAN            TestRail Plan name\n      -r TR_RUN             TestRail Run name.\n      -s TR_SUITE           TestRail Suite name.\n      -m TR_MILESTONE       TestRail milestone.\n      -c TR_CONF            Set configuration for test entry (Test Run). Example: -c \"{'Operating Systems':'Ubuntu 18.04'}\"\n      --plan-description TR_PLAN_DESCR\n                            Test Plan description.\n      --run-description TR_RUN_DESCR\n                            Test Run description.\n      --limit LIMIT         Limit the length of the comments (characters, 0 is unlimited.)\n      --tr-limit TR_LIMIT   Limit for results data sended within one POST request (bytes, 0 is unlimited.).\n      --remove-untested     Remove untested cases from Test Run\n      --remove-skipped      Remove skipped cases from Test Run\n      --result-attrs TR_RESULT_ATTRS\n                            Set path to config file with custom result attributes (.yaml format).\n      --map MAP             Use predefined map for parsing attributes. Supported values:tempest, pytest\n      --result-map TR_RESULT_MAP\n                            Set path to config file with custom result map. Note: this parameter overrides predefined map parameter.\n\n### Update test suite\n\n    usage: testrail-reporter update [-h] [-p TR_PROJECT] [-s TR_SUITE] [--case-attrs TR_CASE_ATTRS] [--map MAP] [--tc-map TR_CASE_MAP] List of test cases\n\n    positional arguments:\n      List of test cases    Path to file with list of tests.\n    \n    optional arguments:\n      -h, --help            show this help message and exit\n      -p TR_PROJECT         TestRail Project name.\n      -s TR_SUITE           TestRail Suite name.\n      --case-attrs TR_CASE_ATTRS\n                            Set path to config file with custom case attributes (.yaml format).\n      --map MAP             Use predefined map for parsing case attributes. Supported values: tempest, pytest\n      --tc-map TR_CASE_MAP  Set path to config file with custom case map. Note: this parameter overrides predefined map parameter.\n\n### Analyze results\n\n    usage: testrail-reporter analyze [-h] [-p TR_PROJECT] [-t TR_PLAN] [-r TR_RUN] [-c TR_CONF] Check list\n\n    positional arguments:\n      Check list     Path to check list (.yml)\n    \n    optional arguments:\n      -h, --help     show this help message and exit\n      -p TR_PROJECT  TestRail Project name.\n      -t TR_PLAN     TestRail Plan name\n      -r TR_RUN      TestRail Run name.\n      -c TR_CONF     Set configuration for test entry (Test Run). Example: -c \"{'Operating Systems':'Ubuntu 18.04'}\"\n\n## Templates and actions\n\n### Template for results\n\n**Attributes description:**\n\n- *tc_tag* - name of xml element's tag that contains test case result. XML elements with another tags (exclude child elements) will be ignored.\n- *test_id* - section describes action for generation of test title .\n- *status_id* - section describes action for generation of test status.\n- *comments* - section describes action for generation of comments (logs).\n\nEach section can contains following attributes:\n- *default* - default value for attribute if action returns empty string (not applicable for test_id section)\n- *xml_actions* - actions that will be applied for xml element. Description of supported XML actions can be found [below](#xml-actions). \n\n**Results for setUp/tearDown classes:**\n\nOptionally template can contains filter and actions for setUp and tearDown classes:\n- *filter_setup* (optionally) - contains filters and actions for setUp results.\n- *filter_teardown* (optionally) - contains filters and actions for tearDown results.\n\nif sections are determined, they must contains following attributes:\n- *match* - regular expression pattern. Only if test name matches the pattern, another actions will be executed.\n- *status_id* (optionally) - set custom status\n- *actions* - list of action for string generation. Description of supported actions can be found [below](#actions).\n\nExample of template: *testrail_reporter/etc/maps/pytest/result_template.yaml*\n\n### Template for test cases \n\n**Attributes description:**\n\nMany frameworks provide the ability to print list of test cases. Examples:\n \n    pytest --collect-only -q .\n    tempest run -l\n \n Using test case template you can generate list with test cases to update TestRail's Test Suite.\n - *title* - contains list of actions for generation test name. \n - *section* - contains list of actions for generation test name. Description of supported actions can be found [below](#actions).\n\n### Template for custom case fields\n\nThis template is used for convert name of custom attribute to id.\n\n- *attributes2id* - contains list with name of custom case attributes required to be converted to id.\n\nExample of template: *testrail_reporter/etc/attrs2id.yaml*\n\n### Actions for string generation {#actions}\n\n- *custom-map* - contains list of dictionaries. Checks if test case match dict.value (re.search() is used) and return dict.key as name.\n- *find* - get first element found by re.findall() function.\n- *replace* - replaces all occurrences of found substrings.\n\n### Actions for string generation from xml file {#xml-actions}\n\nXML actions are used to generate string from XML file. All actions are performed in the order specified in template.\n\n- *get_attribute* - add (concatenate) xml attribute value with the specified name.\n- *add_string* - add (concatenate) custom string.\n- *get_element_text* - add\n- *check* - checks specified condition and execute xml_actions if True. This action allow to take nested xml elements.\n    - *parent* - checks for specified attribute for current xml element:\n        - *attribute* - сheck for the specified xml attribute.\n        - *xml_actions* - execute xml_action for current element.\n    - *child* - checks of availability of child xml element with specified tag and/or attribute:\n        - *tag* - сheck for the specified tag in child element.\n        - *attribute* - сheck for the specified xml attribute.\n        - *xml_actions* - execute xml_action for child element.\n\n## Docker image\n\n### Run script from docker image\nTo run testrail_reporter against TestRail using docker image:\n1. Pull docker image from [dockerhub](https://hub.docker.com/r/bumarskov/testrail_reporter)\n`docker push bumarskov/testrail_reporter:<tagname>`\n2. Run qa_report.py script to upload test results:\n`docker run -v '<path_to_results>:/tmp/report.xml' -e TESTRAIL_URL=\"<url>\" -e TESTRAIL_USER=\"<user>\" -e TESTRAIL_PASSWORD=\"<password>\" testrail-reporter:<tagname> python reporter.py publish /tmp/report.xml -p \"<TestRail project>\" -t \"<TestRail test plan>\" -r \"<TestRail test run>\" -s \"<TestRail suite>\" -c \"<Configuration>\" --remove-untested`\n\n### How to build docker image\nBefore build docker image from local copy of repository remove all `.*pyc` files and `__pycache__` folder.\n\nBuild image:\n`docker build --tag=testrail-reporter:alpha .`",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ibumarskov/testrail-reporter",
    "keywords": "testrail reporter pytest tempest",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "testrail-reporter-tool",
    "package_url": "https://pypi.org/project/testrail-reporter-tool/",
    "platform": null,
    "project_url": "https://pypi.org/project/testrail-reporter-tool/",
    "project_urls": {
      "Homepage": "https://github.com/ibumarskov/testrail-reporter"
    },
    "release_url": "https://pypi.org/project/testrail-reporter-tool/1.2.2/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "TestRail reporter tool",
    "version": "1.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14398703,
  "releases": {
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "083d4e8989d6845056dbcc7e370f8cdae7a83541fac386b861bb494e4b5ecfa5",
          "md5": "a213e4590b717ab849a01e9222ee460f",
          "sha256": "f69cb5c97a718b2b9250dc76df72109cc8e3d43f61e5c139ff78779fba6c9d0f"
        },
        "downloads": -1,
        "filename": "testrail_reporter_tool-1.1.2-py3.8.egg",
        "has_sig": false,
        "md5_digest": "a213e4590b717ab849a01e9222ee460f",
        "packagetype": "bdist_egg",
        "python_version": "1.1.2",
        "requires_python": ">=3.6",
        "size": 47349,
        "upload_time": "2022-02-22T06:32:43",
        "upload_time_iso_8601": "2022-02-22T06:32:43.657549Z",
        "url": "https://files.pythonhosted.org/packages/08/3d/4e8989d6845056dbcc7e370f8cdae7a83541fac386b861bb494e4b5ecfa5/testrail_reporter_tool-1.1.2-py3.8.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d86aa207beb2c0225ba5a874fa92a95e75de7f83cb63a470632d09ea9db35605",
          "md5": "b68041754f7f4c7fb4afb03e15ec1e6a",
          "sha256": "ce82c44e27c1cbe0b990911b700865e1c5b1920765dbd7bb7a928ad3bab05c7a"
        },
        "downloads": -1,
        "filename": "testrail_reporter_tool-1.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b68041754f7f4c7fb4afb03e15ec1e6a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 23839,
        "upload_time": "2022-02-22T06:32:41",
        "upload_time_iso_8601": "2022-02-22T06:32:41.700250Z",
        "url": "https://files.pythonhosted.org/packages/d8/6a/a207beb2c0225ba5a874fa92a95e75de7f83cb63a470632d09ea9db35605/testrail_reporter_tool-1.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2cbe2a331d07903a2f193875a072aec3f0e2a00d644ef5f20b8a0b9114e25189",
          "md5": "13c8b4bc640cf525ca0475f3312ba864",
          "sha256": "225f7f15831a32136225ddeac8e34773d203e9786995452716b547aad0390b95"
        },
        "downloads": -1,
        "filename": "testrail-reporter-tool-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "13c8b4bc640cf525ca0475f3312ba864",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 20660,
        "upload_time": "2022-02-22T06:32:45",
        "upload_time_iso_8601": "2022-02-22T06:32:45.067012Z",
        "url": "https://files.pythonhosted.org/packages/2c/be/2a331d07903a2f193875a072aec3f0e2a00d644ef5f20b8a0b9114e25189/testrail-reporter-tool-1.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e9981fed6dfd11e4468d7c65ef5e47b731a14bb44a67032104ad3eb390d278e6",
          "md5": "8b54b55933695f07408d6b436709d0f9",
          "sha256": "d61663317ce07bfb8206942aa4dda06a557c87b30a8a9f4fa467ce84ccc17677"
        },
        "downloads": -1,
        "filename": "testrail_reporter_tool-1.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8b54b55933695f07408d6b436709d0f9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 24337,
        "upload_time": "2022-04-05T17:51:51",
        "upload_time_iso_8601": "2022-04-05T17:51:51.252821Z",
        "url": "https://files.pythonhosted.org/packages/e9/98/1fed6dfd11e4468d7c65ef5e47b731a14bb44a67032104ad3eb390d278e6/testrail_reporter_tool-1.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c7285ab7141176e849e57514077535583be26d1b5263f9ce43b67fb732910b35",
          "md5": "c2b831bc39aba8c80e0990df8bba3b58",
          "sha256": "c825edff889060cd93043f00199ec8a755689316fcd41e4afb0505122f487c3f"
        },
        "downloads": -1,
        "filename": "testrail-reporter-tool-1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c2b831bc39aba8c80e0990df8bba3b58",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 21177,
        "upload_time": "2022-04-05T17:51:52",
        "upload_time_iso_8601": "2022-04-05T17:51:52.965296Z",
        "url": "https://files.pythonhosted.org/packages/c7/28/5ab7141176e849e57514077535583be26d1b5263f9ce43b67fb732910b35/testrail-reporter-tool-1.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "57edd498e7b8f61e50522e077c3d33dfd64f9c0377cbef23156205099757bbc9",
          "md5": "ad6ce03d23e53bc8f022aa47eb234157",
          "sha256": "ed7298635158618ab7d031d665b9142adb295e326cedfab0a80b027e053ba50c"
        },
        "downloads": -1,
        "filename": "testrail_reporter_tool-1.2.2-py3.8.egg",
        "has_sig": false,
        "md5_digest": "ad6ce03d23e53bc8f022aa47eb234157",
        "packagetype": "bdist_egg",
        "python_version": "1.2.2",
        "requires_python": ">=3.6",
        "size": 49040,
        "upload_time": "2022-07-11T12:40:35",
        "upload_time_iso_8601": "2022-07-11T12:40:35.779645Z",
        "url": "https://files.pythonhosted.org/packages/57/ed/d498e7b8f61e50522e077c3d33dfd64f9c0377cbef23156205099757bbc9/testrail_reporter_tool-1.2.2-py3.8.egg",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "57edd498e7b8f61e50522e077c3d33dfd64f9c0377cbef23156205099757bbc9",
        "md5": "ad6ce03d23e53bc8f022aa47eb234157",
        "sha256": "ed7298635158618ab7d031d665b9142adb295e326cedfab0a80b027e053ba50c"
      },
      "downloads": -1,
      "filename": "testrail_reporter_tool-1.2.2-py3.8.egg",
      "has_sig": false,
      "md5_digest": "ad6ce03d23e53bc8f022aa47eb234157",
      "packagetype": "bdist_egg",
      "python_version": "1.2.2",
      "requires_python": ">=3.6",
      "size": 49040,
      "upload_time": "2022-07-11T12:40:35",
      "upload_time_iso_8601": "2022-07-11T12:40:35.779645Z",
      "url": "https://files.pythonhosted.org/packages/57/ed/d498e7b8f61e50522e077c3d33dfd64f9c0377cbef23156205099757bbc9/testrail_reporter_tool-1.2.2-py3.8.egg",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}