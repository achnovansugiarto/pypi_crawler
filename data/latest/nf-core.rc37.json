{
  "info": {
    "author": "Phil Ewels",
    "author_email": "phil.ewels@scilifelab.se",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# ![nf-core/tools](docs/images/nfcore-tools_logo_light.png#gh-light-mode-only) ![nf-core/tools](docs/images/nfcore-tools_logo_dark.png#gh-dark-mode-only) <!-- omit in toc -->\n\n[![Python tests](https://github.com/nf-core/tools/workflows/Python%20tests/badge.svg?branch=master&event=push)](https://github.com/nf-core/tools/actions?query=workflow%3A%22Python+tests%22+branch%3Amaster)\n[![codecov](https://codecov.io/gh/nf-core/tools/branch/master/graph/badge.svg)](https://codecov.io/gh/nf-core/tools)\n[![code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n[![code style: prettier](https://img.shields.io/badge/code%20style-prettier-ff69b4.svg)](https://github.com/prettier/prettier)\n[![Imports: isort](https://img.shields.io/badge/%20imports-isort-%231674b1?style=flat&labelColor=ef8336)](https://pycqa.github.io/isort/)\n\n[![install with Bioconda](https://img.shields.io/badge/install%20with-bioconda-brightgreen.svg)](https://bioconda.github.io/recipes/nf-core/README.html)\n[![install with PyPI](https://img.shields.io/badge/install%20with-PyPI-blue.svg)](https://pypi.org/project/nf-core/)\n[![Get help on Slack](http://img.shields.io/badge/slack-nf--core%20%23tools-4A154B?logo=slack)](https://nfcore.slack.com/channels/tools)\n\nA python package with helper tools for the nf-core community.\n\n> **Read this documentation on the nf-core website: [https://nf-co.re/tools](https://nf-co.re/tools)**\n\n## Table of contents <!-- omit in toc -->\n\n- [`nf-core` tools installation](#installation)\n- [`nf-core` tools update](#update-tools)\n- [`nf-core list` - List available pipelines](#listing-pipelines)\n- [`nf-core launch` - Run a pipeline with interactive parameter prompts](#launch-a-pipeline)\n- [`nf-core download` - Download pipeline for offline use](#downloading-pipelines-for-offline-use)\n- [`nf-core licences` - List software licences in a pipeline](#pipeline-software-licences)\n- [`nf-core create` - Create a new pipeline with the nf-core template](#creating-a-new-pipeline)\n- [`nf-core lint` - Check pipeline code against nf-core guidelines](#linting-a-workflow)\n- [`nf-core schema` - Work with pipeline schema files](#pipeline-schema)\n- [`nf-core bump-version` - Update nf-core pipeline version number](#bumping-a-pipeline-version-number)\n- [`nf-core sync` - Synchronise pipeline TEMPLATE branches](#sync-a-pipeline-with-the-template)\n- [`nf-core modules` - commands for dealing with DSL2 modules](#modules)\n\n  - [`modules list` - List available modules](#list-modules)\n    - [`modules list remote` - List remote modules](#list-remote-modules)\n    - [`modules list local` - List installed modules](#list-installed-modules)\n  - [`modules info` - Show information about a module](#show-information-about-a-module)\n  - [`modules install` - Install modules in a pipeline](#install-modules-in-a-pipeline)\n  - [`modules update` - Update modules in a pipeline](#update-modules-in-a-pipeline)\n  - [`modules remove` - Remove a module from a pipeline](#remove-a-module-from-a-pipeline)\n  - [`modules patch` - Create a patch file for a module](#create-a-patch-file-for-a-module)\n  - [`modules create` - Create a module from the template](#create-a-new-module)\n  - [`modules create-test-yml` - Create the `test.yml` file for a module](#create-a-module-test-config-file)\n  - [`modules lint` - Check a module against nf-core guidelines](#check-a-module-against-nf-core-guidelines)\n  - [`modules test` - Run the tests for a module](#run-the-tests-for-a-module-using-pytest)\n  - [`modules bump-versions` - Bump software versions of modules](#bump-bioconda-and-container-versions-of-modules-in)\n  - [`modules mulled` - Generate the name for a multi-tool container image](#generate-the-name-for-a-multi-tool-container-image)\n\n- [`nf-core subworkflows` - commands for dealing with subworkflows](#subworkflows)\n  - [`subworkflows list` - List available subworkflows](#list-subworkflows)\n    - [`subworkflows list remote` - List remote subworkflows](#list-remote-subworkflows)\n    - [`subworkflows list local` - List installed subworkflows](#list-installed-subworkflows)\n  - [`subworkflows info` - Show information about a subworkflow](#show-information-about-a-subworkflow)\n  - [`subworkflows install` - Install subworkflows in a pipeline](#install-subworkflows-in-a-pipeline)\n  - [`subworkflows update` - Update subworkflows in a pipeline](#update-subworkflows-in-a-pipeline)\n  - [`subworkflows remove` - Remove a subworkflow from a pipeline](#remove-a-subworkflow-from-a-pipeline)\n  - [`subworkflows create` - Create a subworkflow from the template](#create-a-new-subworkflow)\n  - [`subworkflows create-test-yml` - Create the `test.yml` file for a subworkflow](#create-a-subworkflow-test-config-file)\n  - [`subworkflows test` - Run the tests for a subworkflow](#run-the-tests-for-a-subworkflow-using-pytest)\n- [Citation](#citation)\n\nThe nf-core tools package is written in Python and can be imported and used within other packages.\nFor documentation of the internal Python functions, please refer to the [Tools Python API docs](https://nf-co.re/tools-docs/).\n\n## Installation\n\n### Bioconda\n\nYou can install `nf-core/tools` from [bioconda](https://bioconda.github.io/recipes/nf-core/README.html).\n\nFirst, install conda and configure the channels to use bioconda\n(see the [bioconda documentation](https://bioconda.github.io/index.html#usage)).\nThen, just run the conda installation command:\n\n```bash\nconda install nf-core\n```\n\nAlternatively, you can create a new environment with both nf-core/tools and nextflow:\n\n```bash\nconda create --name nf-core python=3.8 nf-core nextflow\nconda activate nf-core\n```\n\n### Python Package Index\n\n`nf-core/tools` can also be installed from [PyPI](https://pypi.python.org/pypi/nf-core/) using pip as follows:\n\n```bash\npip install nf-core\n```\n\n### Docker image\n\nThere is a docker image that you can use to run `nf-core/tools` that has all of the requirements packaged (including Nextflow) and so should work out of the box. It is called [`nfcore/tools`](https://hub.docker.com/r/nfcore/tools) _**(NB: no hyphen!)**_\n\nYou can use this container on the command line as follows:\n\n```bash\ndocker run -itv `pwd`:`pwd` -w `pwd` -u $(id -u):$(id -g) nfcore/tools\n```\n\n- `-i` and `-t` are needed for the interactive cli prompts to work (this tells Docker to use a pseudo-tty with stdin attached)\n- The `-v` argument tells Docker to bind your current working directory (`pwd`) to the same path inside the container, so that files created there will be saved to your local file system outside of the container.\n- `-w` sets the working directory in the container to this path, so that it's the same as your working directory outside of the container.\n- `-u` sets your local user account as the user inside the container, so that any files created have the correct ownership permissions\n\nAfter the above base command, you can use the regular command line flags that you would use with other types of installation.\nFor example, to launch the `viralrecon` pipeline:\n\n```bash\ndocker run -itv `pwd`:`pwd` -w `pwd` -u $(id -u):$(id -g) nfcore/tools launch viralrecon -r 1.1.0\n```\n\nIf you use `$NXF_SINGULARITY_CACHEDIR` for downloads, you'll also need to make this folder and environment variable available to the continer:\n\n```bash\ndocker run -itv `pwd`:`pwd` -w `pwd` -u $(id -u):$(id -g) -v $NXF_SINGULARITY_CACHEDIR:$NXF_SINGULARITY_CACHEDIR -e NXF_SINGULARITY_CACHEDIR nfcore/tools launch viralrecon -r 1.1.0\n```\n\n#### Docker bash alias\n\nThe above base command is a bit of a mouthful to type, to say the least.\nTo make it easier to use, we highly recommend adding the following bash alias to your `~/.bashrc` file:\n\n```bash\nalias nf-core=\"docker run -itv `pwd`:`pwd` -w `pwd` -u $(id -u):$(id -g) nfcore/tools\"\n```\n\nOnce applied (you may need to reload your shell) you can just use the `nf-core` command instead:\n\n```bash\nnf-core list\n```\n\n#### Docker versions\n\nYou can use docker image tags to specify the version you would like to use. For example, `nfcore/tools:dev` for the latest development version of the code, or `nfcore/tools:1.14` for version `1.14` of tools.\nIf you omit this, it will default to `:latest`, which should be the latest stable release.\n\nIf you need a specific version of Nextflow inside the container, you can build an image yourself.\nClone the repo locally and check out whatever version of nf-core/tools that you need.\nThen build using the `--build-arg NXF_VER` flag as follows:\n\n```bash\ndocker build -t nfcore/tools:dev . --build-arg NXF_VER=20.04.0\n```\n\n### Development version\n\nIf you would like the latest development version of tools, the command is:\n\n```bash\npip install --upgrade --force-reinstall git+https://github.com/nf-core/tools.git@dev\n```\n\nIf you intend to make edits to the code, first make a fork of the repository and then clone it locally.\nGo to the cloned directory and install with pip (also installs development requirements):\n\n```bash\npip install --upgrade -r requirements-dev.txt -e .\n```\n\n### Using a specific Python interpreter\n\nIf you prefer, you can also run tools with a specific Python interpreter.\nThe command line usage and flags are then exactly the same as if you ran with the `nf-core` command.\nNote that the module is `nf_core` with an underscore, not a hyphen like the console command.\n\nFor example:\n\n```bash\npython -m nf_core --help\npython3 -m nf_core list\n~/my_env/bin/python -m nf_core create --name mypipeline --description \"This is a new skeleton pipeline\"\n```\n\n### Using with your own Python scripts\n\nThe tools functionality is written in such a way that you can import it into your own scripts.\nFor example, if you would like to get a list of all available nf-core pipelines:\n\n```python\nimport nf_core.list\nwfs = nf_core.list.Workflows()\nwfs.get_remote_workflows()\nfor wf in wfs.remote_workflows:\n    print(wf.full_name)\n```\n\nPlease see [https://nf-co.re/tools-docs/](https://nf-co.re/tools-docs/) for the function documentation.\n\n### Automatic version check\n\nnf-core/tools automatically checks the web to see if there is a new version of nf-core/tools available.\nIf you would prefer to skip this check, set the environment variable `NFCORE_NO_VERSION_CHECK`. For example:\n\n```bash\nexport NFCORE_NO_VERSION_CHECK=1\n```\n\n### Update tools\n\nIt is advisable to keep nf-core/tools updated to the most recent version. The command to update depends on the system used to install it, for example if you have installed it with conda you can use:\n\n```bash\nconda update nf-core\n```\n\nif you used pip:\n\n```bash\npip install --upgrade nf-core\n```\n\nPlease refer to the respective documentation for further details to manage packages, as for example [conda](https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-pkgs.html#updating-packages) or [pip](https://packaging.python.org/en/latest/tutorials/installing-packages/#upgrading-packages).\n\n### Activate shell completions for nf-core/tools\n\nAuto-completion for the `nf-core` command is available for bash, zsh and fish. To activate it, add the following lines to the respective shell config files.\n\n| shell | shell config file                         | command                                            |\n| ----- | ----------------------------------------- | -------------------------------------------------- |\n| bash  | `~/.bashrc`                               | `eval \"$(_NF_CORE_COMPLETE=bash_source nf-core)\"`  |\n| zsh   | `~/.zshrc`                                | `eval \"$(_NF_CORE_COMPLETE=zsh_source nf-core)\"`   |\n| fish  | `~/.config/fish/completions/nf-core.fish` | `eval (env _NF_CORE_COMPLETE=fish_source nf-core)` |\n\nAfter a restart of the shell session you should have auto-completion for the `nf-core` command and all its sub-commands and options.\n\n> **NB:** The added line will run the command `nf-core` (which will also slow down startup time of your shell). You should therefore either have the nf-core/tools installed globally.\n> You can also wrap it inside `if type nf-core > /dev/null; then ` \\<YOUR EVAL CODE LINE\\> `fi` for bash and zsh or `if command -v nf-core &> /dev/null eval (env _NF_CORE_COMPLETE=fish_source nf-core) end` for fish. You need to then source the config in your environment for the completions to be activated.\n\n> **NB:** If you see the error `command not found compdef` , be sure that your config file contains the line `autoload -Uz compinit && compinit` before the eval line.\n\n## Listing pipelines\n\nThe command `nf-core list` shows all available nf-core pipelines along with their latest version, when that was published and how recently the pipeline code was pulled to your local system (if at all).\n\nAn example of the output from the command is as follows:\n\n<!-- RICH-CODEX head: 19 -->\n\n![`nf-core list`](docs/images/nf-core-list.svg)\n\nTo narrow down the list, supply one or more additional keywords to filter the pipelines based on matches in titles, descriptions and topics:\n\n![`nf-core list rna rna-seq`](docs/images/nf-core-list-rna.svg)\n\nYou can sort the results by latest release (`-s release`, default),\nwhen you last pulled a local copy (`-s pulled`),\nalphabetically (`-s name`),\nor number of GitHub stars (`-s stars`).\n\n<!-- RICH-CODEX head: 18 -->\n\n![`nf-core list -s stars`](docs/images/nf-core-list-stars.svg)\n\nTo return results as JSON output for downstream use, use the `--json` flag.\n\nArchived pipelines are not returned by default. To include them, use the `--show_archived` flag.\n\n## Launch a pipeline\n\nSome nextflow pipelines have a considerable number of command line flags that can be used.\nTo help with this, you can use the `nf-core launch` command.\nYou can choose between a web-based graphical interface or an interactive command-line wizard tool to enter the pipeline parameters for your run.\nBoth interfaces show documentation alongside each parameter and validate your inputs.\n\nThe tool uses the `nextflow_schema.json` file from a pipeline to give parameter descriptions, defaults and grouping.\nIf no file for the pipeline is found, one will be automatically generated at runtime.\n\nNextflow `params` variables are saved in to a JSON file called `nf-params.json` and used by nextflow with the `-params-file` flag.\nThis makes it easier to reuse these in the future.\n\nThe command takes one argument - either the name of an nf-core pipeline which will be pulled automatically,\nor the path to a directory containing a Nextflow pipeline _(can be any pipeline, doesn't have to be nf-core)_.\n\n<!-- RICH-CODEX trim_after: \"Command line\" -->\n\n![`nf-core launch rnaseq -r 3.8.1`](docs/images/nf-core-launch-rnaseq.svg)\n\nOnce complete, the wizard will ask you if you want to launch the Nextflow run.\nIf not, you can copy and paste the Nextflow command with the `nf-params.json` file of your inputs.\n\n```console\nINFO     [✓] Input parameters look valid\nINFO     Nextflow command:\n         nextflow run nf-core/rnaseq -params-file \"nf-params.json\"\n\n\nDo you want to run this command now?  [y/n]:\n```\n\n### Launch tool options\n\n- `-r`, `--revision`\n  - Specify a pipeline release (or branch / git commit sha) of the project to run\n- `-i`, `--id`\n  - You can use the web GUI for nf-core pipelines by clicking _\"Launch\"_ on the website. Once filled in you will be given an ID to use with this command which is used to retrieve your inputs.\n- `-c`, `--command-only`\n  - If you prefer not to save your inputs in a JSON file and use `-params-file`, this option will specify all entered params directly in the nextflow command.\n- `-p`, `--params-in PATH`\n  - To use values entered in a previous pipeline run, you can supply the `nf-params.json` file previously generated.\n  - This will overwrite the pipeline schema defaults before the wizard is launched.\n- `-o`, `--params-out PATH`\n  - Path to save parameters JSON file to. (Default: `nf-params.json`)\n- `-a`, `--save-all`\n  - Without this option the pipeline will ignore any values that match the pipeline schema defaults.\n  - This option saves _all_ parameters found to the JSON file.\n- `-h`, `--show-hidden`\n  - A pipeline JSON schema can define some parameters as 'hidden' if they are rarely used or for internal pipeline use only.\n  - This option forces the wizard to show all parameters, including those labelled as 'hidden'.\n- `--url`\n  - Change the URL used for the graphical interface, useful for development work on the website.\n\n## Downloading pipelines for offline use\n\nSometimes you may need to run an nf-core pipeline on a server or HPC system that has no internet connection.\nIn this case you will need to fetch the pipeline files first, then manually transfer them to your system.\n\nTo make this process easier and ensure accurate retrieval of correctly versioned code and software containers, we have written a download helper tool.\n\nThe `nf-core download` command will download both the pipeline code and the [institutional nf-core/configs](https://github.com/nf-core/configs) files. It can also optionally download any singularity image files that are required.\n\nIf run without any arguments, the download tool will interactively prompt you for the required information.\nEach option has a flag, if all are supplied then it will run without any user input needed.\n\n<!-- RICH-CODEX\nworking_dir: tmp\n-->\n\n![`nf-core download rnaseq -r 3.8 --outdir nf-core-rnaseq -x none -c none`](docs/images/nf-core-download.svg)\n\nOnce downloaded, you will see something like the following file structure for the downloaded pipeline:\n\n<!-- RICH-CODEX\nworking_dir: tmp\n-->\n\n![`tree -L 2 nf-core-rnaseq/`](docs/images/nf-core-download-tree.svg)\n\nYou can run the pipeline by simply providing the directory path for the `workflow` folder to your `nextflow run` command:\n\n```bash\nnextflow run /path/to/download/nf-core-rnaseq-dev/workflow/ --input mydata.csv --outdir results  # usual parameters here\n```\n\n### Downloaded nf-core configs\n\nThe pipeline files are automatically updated (`params.custom_config_base` is set to `../configs`), so that the local copy of institutional configs are available when running the pipeline.\nSo using `-profile <NAME>` should work if available within [nf-core/configs](https://github.com/nf-core/configs).\n\n### Downloading singularity containers\n\nIf you're using Singularity, the `nf-core download` command can also fetch the required Singularity container images for you.\nTo do this, select `singularity` in the prompt or specify `--container singularity` in the command.\nYour archive / target output directory will then include three folders: `workflow`, `configs` and also `singularity-containers`.\n\nThe downloaded workflow files are again edited to add the following line to the end of the pipeline's `nextflow.config` file:\n\n```nextflow\nsingularity.cacheDir = \"${projectDir}/../singularity-images/\"\n```\n\nThis tells Nextflow to use the `singularity-containers` directory relative to the workflow for the singularity image cache directory.\nAll images should be downloaded there, so Nextflow will use them instead of trying to pull from the internet.\n\n#### Singularity cache directory\n\nWe highly recommend setting the `$NXF_SINGULARITY_CACHEDIR` environment variable on your system, even if that is a different system to where you will be running Nextflow.\n\nIf found, the tool will fetch the Singularity images to this directory first before copying to the target output archive / directory.\nAny images previously fetched will be found there and copied directly - this includes images that may be shared with other pipelines or previous pipeline version downloads or download attempts.\n\nIf you are running the download on the same system where you will be running the pipeline (eg. a shared filesystem where Nextflow won't have an internet connection at a later date), you can choose to _only_ use the cache via a prompt or cli options `--singularity-cache-only` / `--singularity-cache-copy`.\n\nThis instructs `nf-core download` to fetch all Singularity images to the `$NXF_SINGULARITY_CACHEDIR` directory but does _not_ copy them to the workflow archive / directory.\nThe workflow config file is _not_ edited. This means that when you later run the workflow, Nextflow will just use the cache folder directly.\n\n#### How the Singularity image downloads work\n\nThe Singularity image download finds containers using two methods:\n\n1. It runs `nextflow config` on the downloaded workflow to look for a `process.container` statement for the whole pipeline.\n   This is the typical method used for DSL1 pipelines.\n2. It scrapes any files it finds with a `.nf` file extension in the workflow `modules` directory for lines\n   that look like `container = \"xxx\"`. This is the typical method for DSL2 pipelines, which have one container per process.\n\nSome DSL2 modules have container addresses for docker (eg. `quay.io/biocontainers/fastqc:0.11.9--0`) and also URLs for direct downloads of a Singularity continaer (eg. `https://depot.galaxyproject.org/singularity/fastqc:0.11.9--0`).\nWhere both are found, the download URL is preferred.\n\nOnce a full list of containers is found, they are processed in the following order:\n\n1. If the target image already exists, nothing is done (eg. with `$NXF_SINGULARITY_CACHEDIR` and `--singularity-cache-only` specified)\n2. If found in `$NXF_SINGULARITY_CACHEDIR` and `--singularity-cache-only` is _not_ specified, they are copied to the output directory\n3. If they start with `http` they are downloaded directly within Python (default 4 at a time, you can customise this with `--parallel-downloads`)\n4. If they look like a Docker image name, they are fetched using a `singularity pull` command\n   - This requires Singularity to be installed on the system and is substantially slower\n\nNote that compressing many GBs of binary files can be slow, so specifying `--compress none` is recommended when downloading Singularity images.\n\nIf the download speeds are much slower than your internet connection is capable of, you can set `--parallel-downloads` to a large number to download loads of images at once.\n\n## Pipeline software licences\n\nSometimes it's useful to see the software licences of the tools used in a pipeline.\nYou can use the `licences` subcommand to fetch and print the software licence from each conda / PyPI package used in an nf-core pipeline.\n\n> ⚠️ This command does not currently work for newer DSL2 pipelines. This will hopefully be addressed [soon](https://github.com/nf-core/tools/issues/1155).\n\n<!-- RICH-CODEX\ntimeout: 10\n-->\n\n![`nf-core licences deepvariant`](docs/images/nf-core-licences.svg)\n\n## Creating a new pipeline\n\nThe `create` subcommand makes a new pipeline using the nf-core base template.\nWith a given pipeline name, description and author, it makes a starter pipeline which follows nf-core best practices.\n\nAfter creating the files, the command initialises the folder as a git repository and makes an initial commit.\nThis first \"vanilla\" commit which is identical to the output from the templating tool is important, as it allows us to keep your pipeline in sync with the base template in the future.\nSee the [nf-core syncing docs](https://nf-co.re/developers/sync) for more information.\n\n<!-- RICH-CODEX\nworking_dir: tmp\n-->\n\n![` nf-core create -n nextbigthing -d \"This pipeline analyses data from the next big omics technique\" -a \"Big Steve\" --plain`](docs/images/nf-core-create.svg)\n\nOnce you have run the command, create a new empty repository on GitHub under your username (not the `nf-core` organisation, yet) and push the commits from your computer using the example commands in the above log.\nYou can then continue to edit, commit and push normally as you build your pipeline.\n\nPlease see the [nf-core documentation](https://nf-co.re/developers/adding_pipelines) for a full walkthrough of how to create a new nf-core workflow.\n\n> As the log output says, remember to come and discuss your idea for a pipeline as early as possible!\n> See the [documentation](https://nf-co.re/developers/adding_pipelines#join-the-community) for instructions.\n\nNote that if the required arguments for `nf-core create` are not given, it will interactively prompt for them. If you prefer, you can supply them as command line arguments. See `nf-core create --help` for more information.\n\n### Customizing the creation of a pipeline\n\nThe `nf-core create` command comes with a number of options that allow you to customize the creation of a pipeline if you intend to not publish it as an\nnf-core pipeline. This can be done in two ways: by using interactive prompts, or by supplying a `template.yml` file using the `--template-yaml <file>` option.\nBoth options allow you to specify a custom pipeline prefix to use instead of the common `nf-core`, as well as selecting parts of the template to be excluded during pipeline creation.\nThe interactive prompts will guide you through the pipeline creation process. An example of a `template.yml` file is shown below.\n\n```yaml\nname: coolpipe\ndescription: A cool pipeline\nauthor: me\nprefix: myorg\nskip:\n  - github\n  - ci\n  - github_badges\n  - igenomes\n  - nf_core_configs\n```\n\nThis will create a pipeline called `coolpipe` in the directory `myorg-coolpipe` (`<prefix>-<name>`) with `me` as the author. It will exclude all possible parts of the template:\n\n- `github`: removed all files required for GitHub hosting of the pipeline. Specifically, the `.github` folder and `.gitignore` file.\n- `ci`: removes the GitHub continuous integration tests from the pipeline. Specifically, the `.github/workflows/` folder.\n- `github_badges`: removes GitHub badges from the `README.md` file.\n- `igenomes`: removes pipeline options related to iGenomes. Including the `conf/igenomes.config` file and all references to it.\n- `nf_core_configs`: excludes `nf_core/configs` repository options, which make multiple config profiles for various institutional clusters available.\n\nTo run the pipeline creation silently (i.e. without any prompts) with the nf-core template, you can use the `--plain` option.\n\n## Linting a workflow\n\nThe `lint` subcommand checks a given pipeline for all nf-core community guidelines.\nThis is the same test that is used on the automated continuous integration tests.\n\nFor example, the current version looks something like this:\n\n<!-- RICH-CODEX\ntimeout: 60\nworking_dir: tmp/nf-core-nextbigthing\nbefore_command: >\n  echo \"lint: { pipeline_todos: false }\" >> .nf-core.yml\nfake_command: nf-core lint\n-->\n\n![`nf-core lint`](docs/images/nf-core-lint.svg)\n\nYou can use the `-k` / `--key` flag to run only named tests for faster debugging, eg: `nf-core lint -k files_exist -k files_unchanged`. The `nf-core lint` command lints the current working directory by default, to specify another directory you can use `--dir <directory>`.\n\n### Linting documentation\n\nEach test result name on the left is a terminal hyperlink.\nIn most terminals you can <kbd>ctrl</kbd> + <kbd>click</kbd> ( <kbd>cmd</kbd> + <kbd>click</kbd>) these\nlinks to open documentation specific to this test in your browser.\n\nAlternatively visit <https://nf-co.re/tools-docs/lint_tests/index.html> and find your test to read more.\n\n### Linting config\n\nIt's sometimes desirable to disable certain lint tests, especially if you're using nf-core/tools with your\nown pipeline that is outside of nf-core.\n\nTo help with this, you can add a tools config file to your pipeline called `.nf-core.yml` in the pipeline root directory (previously: `.nf-core-lint.yml`).\nHere you can list the names of any tests that you would like to disable and set them to `False`, for example:\n\n```yaml\nlint:\n  actions_awsfulltest: False\n  pipeline_todos: False\n```\n\nSome lint tests allow greater granularity, for example skipping a test only for a specific file.\nThis is documented in the test-specific docs but generally involves passing a list, for example:\n\n```yaml\nlint:\n  files_exist:\n    - CODE_OF_CONDUCT.md\n  files_unchanged:\n    - assets/email_template.html\n    - CODE_OF_CONDUCT.md\n```\n\nNote that you have to list all configurations for the `nf-core lint` command under the `lint:` field in the `.nf-core.yml` file, as this file is also used for configuration of other commands.\n\n### Automatically fix errors\n\nSome lint tests can try to automatically fix any issues they find. To enable this functionality, use the `--fix` flag.\nThe pipeline must be a `git` repository with no uncommitted changes for this to work.\nThis is so that any automated changes can then be reviewed and undone (`git checkout .`) if you disagree.\n\n### Lint results output\n\nThe output from `nf-core lint` is designed to be viewed on the command line and is deliberately succinct.\nYou can view all passed tests with `--show-passed` or generate JSON / markdown results with the `--json` and `--markdown` flags.\n\n## Pipeline schema\n\nnf-core pipelines have a `nextflow_schema.json` file in their root which describes the different parameters used by the workflow.\nThese files allow automated validation of inputs when running the pipeline, are used to generate command line help and can be used to build interfaces to launch pipelines.\nPipeline schema files are built according to the [JSONSchema specification](https://json-schema.org/) (Draft 7).\n\nTo help developers working with pipeline schema, nf-core tools has three `schema` sub-commands:\n\n- `nf-core schema validate`\n- `nf-core schema build`\n- `nf-core schema docs`\n- `nf-core schema lint`\n\n### Validate pipeline parameters\n\nNextflow can take input parameters in a JSON or YAML file when running a pipeline using the `-params-file` option.\nThis command validates such a file against the pipeline schema.\n\nUsage is `nf-core schema validate <pipeline> <parameter file>`. eg with the pipeline downloaded [above](#download-pipeline), you can run:\n\n<!-- RICH-CODEX\nworking_dir: tmp\nbefore_command: 'echo \"{input: myfiles.csv, outdir: results}\" > nf-params.json'\ntimeout: 10\nafter_command: rm nf-params.json\n-->\n\n![`nf-core schema validate nf-core-rnaseq/workflow nf-params.json`](docs/images/nf-core-schema-validate.svg)\n\nThe `pipeline` option can be a directory containing a pipeline, a path to a schema file or the name of an nf-core pipeline (which will be downloaded using `nextflow pull`).\n\n### Build a pipeline schema\n\nManually building JSONSchema documents is not trivial and can be very error prone.\nInstead, the `nf-core schema build` command collects your pipeline parameters and gives interactive prompts about any missing or unexpected params.\nIf no existing schema is found it will create one for you.\n\nOnce built, the tool can send the schema to the nf-core website so that you can use a graphical interface to organise and fill in the schema.\nThe tool checks the status of your schema on the website and once complete, saves your changes locally.\n\nUsage is `nf-core schema build -d <pipeline_directory>`, eg:\n\n<!-- RICH-CODEX\nworking_dir: tmp/nf-core-nextbigthing\ntimeout: 10\nbefore_command: sed '25,30d' nextflow_schema.json > nextflow_schema.json.tmp && mv nextflow_schema.json.tmp nextflow_schema.json\n-->\n\n![`nf-core schema build --no-prompts`](docs/images/nf-core-schema-build.svg)\n\nThere are four flags that you can use with this command:\n\n- `--dir <pipeline_dir>`: Specify a pipeline directory other than the current working directory\n- `--no-prompts`: Make changes without prompting for confirmation each time. Does not launch web tool.\n- `--web-only`: Skips comparison of the schema against the pipeline parameters and only launches the web tool.\n- `--url <web_address>`: Supply a custom URL for the online tool. Useful when testing locally.\n\n### Display the documentation for a pipeline schema\n\nTo get an impression about the current pipeline schema you can display the content of the `nextflow_schema.json` with `nf-core schema docs <pipeline-schema>`. This will print the content of your schema in Markdown format to the standard output.\n\nThere are four flags that you can use with this command:\n\n- `--output <filename>`: Output filename. Defaults to standard out.\n- `--format [markdown|html]`: Format to output docs in.\n- `--force`: Overwrite existing files\n- `--columns <columns_list>`: CSV list of columns to include in the parameter tables\n\n### Add new parameters to the pipeline schema\n\nIf you want to add a parameter to the schema, you first have to add the parameter and its default value to the `nextflow.config` file with the `params` scope. Afterwards, you run the command `nf-core schema build` to add the parameters to your schema and open the graphical interface to easily modify the schema.\n\nThe graphical interface is oganzised in groups and within the groups the single parameters are stored. For a better overview you can collapse all groups with the `Collapse groups` button, then your new parameters will be the only remaining one at the bottom of the page. Now you can either create a new group with the `Add group` button or drag and drop the paramters in an existing group. Therefor the group has to be expanded. The group title will be displayed, if you run your pipeline with the `--help` flag and its description apears on the parameter page of your pipeline.\n\nNow you can start to change the parameter itself. The description is a short explanation about the parameter, that apears if you run your pipeline with the `--help` flag. By clicking on the dictionary icon you can add a longer explanation for the parameter page of your pipeline. If you want to specify some conditions for your parameter, like the file extension, you can use the nut icon to open the settings. This menu depends on the `type` you assigned to your parameter. For intergers you can define a min and max value, and for strings the file extension can be specified.\n\nAfter you filled your schema, click on the `Finished` button in the top rigth corner, this will automatically update your `nextflow_schema.json`. If this is not working you can copy the schema from the graphical interface and paste it in your `nextflow_schema.json` file.\n\n### Update existing pipeline schema\n\nImportant for the update of a pipeline schema is, that if you want to change the default value of a parameter, you should change it in the `nextflow.config` file, since the value in the config file overwrites the value in the pipeline schema. To change any other parameter use `nf-core schema build --web-only` to open the graphical interface without rebuilding the pipeline schema. Now, you can change your parameters as mentioned above but keep in mind that changing the parameter datatype is depending on the default value you specified in the `nextflow.config` file.\n\n### Linting a pipeline schema\n\nThe pipeline schema is linted as part of the main pipeline `nf-core lint` command,\nhowever sometimes it can be useful to quickly check the syntax of the JSONSchema without running a full lint run.\n\nUsage is `nf-core schema lint <schema>`, eg:\n\n<!-- RICH-CODEX\nworking_dir: tmp/nf-core-nextbigthing\n-->\n\n![`nf-core schema lint nextflow_schema.json`](docs/images/nf-core-schema-lint.svg)\n\n## Bumping a pipeline version number\n\nWhen releasing a new version of a nf-core pipeline, version numbers have to be updated in several different places. The helper command `nf-core bump-version` automates this for you to avoid manual errors (and frustration!).\n\nThe command uses results from the linting process, so will only work with workflows that pass these tests.\n\nUsage is `nf-core bump-version <new_version>`, eg:\n\n<!-- RICH-CODEX\nworking_dir: tmp/nf-core-nextbigthing\n-->\n\n![`nf-core bump-version 1.1`](docs/images/nf-core-bump-version.svg)\n\nYou can change the directory from the current working directory by specifying `--dir <pipeline_dir>`. To change the required version of Nextflow instead of the pipeline version number, use the flag `--nextflow`.\n\n## Sync a pipeline with the template\n\nOver time, the main nf-core pipeline template is updated. To keep all nf-core pipelines up to date,\nwe synchronise these updates automatically when new versions of nf-core/tools are released.\nThis is done by maintaining a special `TEMPLATE` branch, containing a vanilla copy of the nf-core template\nwith only the variables used when it first ran (name, description etc.). This branch is updated and a\npull-request can be made with just the updates from the main template code.\n\nNote that pipeline synchronisation happens automatically each time nf-core/tools is released, creating an automated pull-request on each pipeline.\n**As such, you do not normally need to run this command yourself!**\n\nThis command takes a pipeline directory and attempts to run this synchronisation.\nUsage is `nf-core sync`, eg:\n\n<!-- RICH-CODEX\nworking_dir: tmp/nf-core-nextbigthing\nbefore_command: git config --global user.email \"nf-core_bot@example.com\" && git config --global user.name \"nf-core_bot\" &&  git commit -am \"Bump version\"\n-->\n\n![`nf-core sync`](docs/images/nf-core-sync.svg)\n\nThe sync command tries to check out the `TEMPLATE` branch from the `origin` remote or an existing local branch called `TEMPLATE`.\nIt will fail if it cannot do either of these things.\nThe `nf-core create` command should make this template automatically when you first start your pipeline.\nPlease see the [nf-core website sync documentation](https://nf-co.re/developers/sync) if you have difficulties.\n\nTo specify a directory to sync other than the current working directory, use the `--dir <pipline_dir>`.\n\nBy default, the tool will collect workflow variables from the current branch in your pipeline directory.\nYou can supply the `--from-branch` flag to specific a different branch.\n\nFinally, if you give the `--pull-request` flag, the command will push any changes to the remote and attempt to create a pull request using the GitHub API.\nThe GitHub username and repository name will be fetched from the remote url (see `git remote -v | grep origin`), or can be supplied with `--username` and `--github-repository`.\n\nTo create the pull request, a personal access token is required for API authentication.\nThese can be created at [https://github.com/settings/tokens](https://github.com/settings/tokens).\nSupply this using the `--auth-token` flag.\n\n## Modules\n\nWith the advent of [Nextflow DSL2](https://www.nextflow.io/docs/latest/dsl2.html), we are creating a centralised repository of modules.\nThese are software tool process definitions that can be imported into any pipeline.\nThis allows multiple pipelines to use the same code for share tools and gives a greater degree of granulairy and unit testing.\n\nThe nf-core DSL2 modules repository is at <https://github.com/nf-core/modules>\n\n### Custom remote modules\n\nThe modules supercommand comes with two flags for specifying a custom remote:\n\n- `--git-remote <git remote url>`: Specify the repository from which the modules should be fetched as a git URL. Defaults to the github repository of `nf-core/modules`.\n- `--branch <branch name>`: Specify the branch from which the modules should be fetched. Defaults to the default branch of your repository.\n\nFor example, if you want to install the `fastqc` module from the repository `nf-core/modules-test` hosted at `gitlab.com`, you can use the following command:\n\n```terminal\nnf-core modules --git-remote git@gitlab.com:nf-core/modules-test.git install fastqc\n```\n\nNote that a custom remote must follow a similar directory structure to that of `nf-core/moduleś` for the `nf-core modules` commands to work properly.\n\nThe directory where modules are installed will be prompted or obtained from `org_path` in the `.nf-core.yml` file if available. If your modules are located at `modules/my-folder/TOOL/SUBTOOL` your `.nf-core.yml` should have:\n\n```yaml\norg_path: my-folder\n```\n\nPlease avoid installing the same tools from two different remotes, as this can lead to further errors.\n\nThe modules commands will during initalisation try to pull changes from the remote repositories. If you want to disable this, for example\ndue to performance reason or if you want to run the commands offline, you can use the flag `--no-pull`. Note however that the commands will\nstill need to clone repositories that have previously not been used.\n\n### Private remote repositories\n\nYou can use the modules command with private remote repositories. Make sure that your local `git` is correctly configured with your private remote\nand then specify the remote the same way you would do with a public remote repository.\n\n### List modules\n\nThe `nf-core modules list` command provides the subcommands `remote` and `local` for listing modules installed in a remote repository and in the local pipeline respectively. Both subcommands allow to use a pattern for filtering the modules by keywords eg: `nf-core modules list <subcommand> <keyword>`.\n\n#### List remote modules\n\nTo list all modules available on [nf-core/modules](https://github.com/nf-core/modules), you can use\n`nf-core modules list remote`, which will print all available modules to the terminal.\n\n<!-- RICH-CODEX\nworking_dir: tmp/nf-core-nextbigthing\nhead: 25\n-->\n\n![`nf-core modules list remote`](docs/images/nf-core-modules-list-remote.svg)\n\n#### List installed modules\n\nTo list modules installed in a local pipeline directory you can use `nf-core modules list local`. This will list the modules install in the current working directory by default. If you want to specify another directory, use the `--dir <pipeline_dir>` flag.\n\n<!-- RICH-CODEX\nworking_dir: tmp/nf-core-nextbigthing\nhead: 25\n-->\n\n![`nf-core modules list local`](docs/images/nf-core-modules-list-local.svg)\n\n## Show information about a module\n\nFor quick help about how a module works, use `nf-core modules info <tool>`.\nThis shows documentation about the module on the command line, similar to what's available on the\n[nf-core website](https://nf-co.re/modules).\n\n<!-- RICH-CODEX\nworking_dir: tmp/nf-core-nextbigthing\n-->\n\n![`nf-core modules info abacas`](docs/images/nf-core-modules-info.svg)\n\n### Install modules in a pipeline\n\nYou can install modules from [nf-core/modules](https://github.com/nf-core/modules) in your pipeline using `nf-core modules install`.\nA module installed this way will be installed to the `./modules/nf-core/modules` directory.\n\n<!-- RICH-CODEX\nworking_dir: tmp/nf-core-nextbigthing\n-->\n\n![`nf-core modules install abacas`](docs/images/nf-core-modules-install.svg)\n\nYou can pass the module name as an optional argument to `nf-core modules install` instead of using the cli prompt, eg: `nf-core modules install fastqc`. You can specify a pipeline directory other than the current working directory by using the `--dir <pipeline dir>`.\n\nThere are three additional flags that you can use when installing a module:\n\n- `--force`: Overwrite a previously installed version of the module.\n- `--prompt`: Select the module version using a cli prompt.\n- `--sha <commit_sha>`: Install the module at a specific commit.\n\n### Update modules in a pipeline\n\nYou can update modules installed from a remote repository in your pipeline using `nf-core modules update`.\n\n<!-- RICH-CODEX\nworking_dir: tmp/nf-core-nextbigthing\n-->\n\n![`nf-core modules update --all --no-preview`](docs/images/nf-core-modules-update.svg)\n\nYou can pass the module name as an optional argument to `nf-core modules update` instead of using the cli prompt, eg: `nf-core modules update fastqc`. You can specify a pipeline directory other than the current working directory by using the `--dir <pipeline dir>`.\n\nThere are five additional flags that you can use with this command:\n\n- `--force`: Reinstall module even if it appears to be up to date\n- `--prompt`: Select the module version using a cli prompt.\n- `--sha <commit_sha>`: Install the module at a specific commit from the `nf-core/modules` repository.\n- `--preview/--no-preview`: Show the diff between the installed files and the new version before installing.\n- `--save-diff <filename>`: Save diffs to a file instead of updating in place. The diffs can then be applied with `git apply <filename>`.\n- `--all`: Use this flag to run the command on all modules in the pipeline.\n\nIf you don't want to update certain modules or want to update them to specific versions, you can make use of the `.nf-core.yml` configuration file. For example, you can prevent the `star/align` module installed from `nf-core/modules` from being updated by adding the following to the `.nf-core.yml` file:\n\n```yaml\nupdate:\n  https://github.com/nf-core/modules.git:\n    nf-core:\n      star/align: False\n```\n\nIf you want this module to be updated only to a specific version (or downgraded), you could instead specifiy the version:\n\n```yaml\nupdate:\n  https://github.com/nf-core/modules.git:\n    nf-core:\n      star/align: \"e937c7950af70930d1f34bb961403d9d2aa81c7\"\n```\n\nThis also works at the repository level. For example, if you want to exclude all modules installed from `nf-core/modules` from being updated you could add:\n\n```yaml\nupdate:\n  https://github.com/nf-core/modules.git:\n    nf-core: False\n```\n\nor if you want all modules in `nf-core/modules` at a specific version:\n\n```yaml\nupdate:\n  https://github.com/nf-core/modules.git:\n    nf-core: \"e937c7950af70930d1f34bb961403d9d2aa81c7\"\n```\n\nNote that the module versions specified in the `.nf-core.yml` file has higher precedence than versions specified with the command line flags, thus aiding you in writing reproducible pipelines.\n\n### Remove a module from a pipeline\n\nTo delete a module from your pipeline, run `nf-core modules remove`.\n\n<!-- RICH-CODEX\nworking_dir: tmp/nf-core-nextbigthing\n-->\n\n![`nf-core modules remove abacas`](docs/images/nf-core-modules-remove.svg)\n\nYou can pass the module name as an optional argument to `nf-core modules remove` instead of using the cli prompt, eg: `nf-core modules remove fastqc`. To specify the pipeline directory, use `--dir <pipeline_dir>`.\n\n### Create a patch file for a module\n\nIf you want to make a minor change to a locally installed module but still keep it up date with the remote version, you can create a patch file using `nf-core modules patch`.\n\n<!-- RICH-CODEX\nworking_dir: tmp/nf-core-nextbigthing\nbefore_command:  sed \"s/process_medium/process_low/g\" modules/nf-core/modules/fastqc/main.nf > modules/nf-core/modules/fastqc/main.nf.patch && mv modules/nf-core/modules/fastqc/main.nf.patch modules/nf-core/modules/fastqc/main.nf\n-->\n\n![`nf-core modules patch fastqc`](docs/images/nf-core-modules-patch.svg)\n\nThe generated patches work with `nf-core modules update`: when you install a new version of the module, the command tries to apply\nthe patch automatically. The patch application fails if the new version of the module modifies the same lines as the patch. In this case,\nthe patch new version is installed but the old patch file is preserved.\n\nWhen linting a patched module, the linting command will check the validity of the patch. When running other lint tests the patch is applied in reverse, and the original files are linted.\n\n### Create a new module\n\nThis command creates a new nf-core module from the nf-core module template.\nThis ensures that your module follows the nf-core guidelines.\nThe template contains extensive `TODO` messages to walk you through the changes you need to make to the template.\n\nYou can create a new module using `nf-core modules create`.\n\nThis command can be used both when writing a module for the shared [nf-core/modules](https://github.com/nf-core/modules) repository,\nand also when creating local modules for a pipeline.\n\nWhich type of repository you are working in is detected by the `repository_type` flag in a `.nf-core.yml` file in the root directory,\nset to either `pipeline` or `modules`.\nThe command will automatically look through parent directories for this file to set the root path, so that you can run the command in a subdirectory.\nIt will start in the current working directory, or whatever is specified with `--dir <directory>`.\n\nThe `nf-core modules create` command will prompt you with the relevant questions in order to create all of the necessary module files.\n\n<!-- RICH-CODEX\nworking_dir: tmp\nbefore_command: git clone https://github.com/nf-core/modules.git && cd modules\nfake_command: nf-core modules create fastqc --author @nf-core-bot  --label process_low --meta --force\n-->\n\n![`cd modules && nf-core modules create fastqc --author @nf-core-bot  --label process_low --meta --force`](docs/images/nf-core-modules-create.svg)\n\n### Create a module test config file\n\nAll modules on [nf-core/modules](https://github.com/nf-core/modules) have a strict requirement of being unit tested using minimal test data.\nTo help developers build new modules, the `nf-core modules create-test-yml` command automates the creation of the yaml file required to document the output file `md5sum` and other information generated by the testing.\nAfter you have written a minimal Nextflow script to test your module `tests/modules/<tool>/<subtool>/main.nf`, this command will run the tests for you and create the `tests/modules/<tool>/<subtool>/test.yml` file.\n\n<!-- RICH-CODEX\nworking_dir: tmp/modules\nextra_env:\n  PROFILE: 'conda'\n-->\n\n![`nf-core modules create-test-yml fastqc --no-prompts --force`](docs/images/nf-core-modules-create-test.svg)\n\n### Check a module against nf-core guidelines\n\nRun the `nf-core modules lint` command to check modules in the current working directory (pipeline or nf-core/modules clone) against nf-core guidelines.\n\nUse the `--all` flag to run linting on all modules found. Use `--dir <pipeline_dir>` to specify another directory than the current working directory.\n\n<!-- RICH-CODEX\nworking_dir: tmp/modules\nbefore_command: sed 's/1.13a/1.10/g' modules/multiqc/main.nf > modules/multiqc/main.nf.tmp && mv modules/multiqc/main.nf.tmp modules/multiqc/main.nf\n-->\n\n![`nf-core modules lint multiqc`](docs/images/nf-core-modules-lint.svg)\n\n### Run the tests for a module using pytest\n\nTo run unit tests of a module that you have installed or the test created by the command [`nf-core modules create-test-yml`](#create-a-module-test-config-file), you can use `nf-core modules test` command. This command runs the tests specified in `modules/tests/software/<tool>/<subtool>/test.yml` file using [pytest](https://pytest-workflow.readthedocs.io/en/stable/).\n\nYou can specify the module name in the form TOOL/SUBTOOL in command line or provide it later by prompts.\n\n<!-- RICH-CODEX\nworking_dir: tmp/modules\ntimeout: 30\nextra_env:\n  PROFILE: 'conda'\n-->\n\n![`nf-core modules test samtools/view --no-prompts`](docs/images/nf-core-modules-test.svg)\n\n### Bump bioconda and container versions of modules in\n\nIf you are contributing to the `nf-core/modules` repository and want to bump bioconda and container versions of certain modules, you can use the `nf-core modules bump-versions` helper tool. This will bump the bioconda version of a single or all modules to the latest version and also fetch the correct Docker and Singularity container tags.\n\n<!-- RICH-CODEX\nworking_dir: tmp/modules\n-->\n\n![`nf-core modules bump-versions fastqc`](docs/images/nf-core-modules-bump-version.svg)\n\nIf you don't want to update certain modules or want to update them to specific versions, you can make use of the `.nf-core.yml` configuration file. For example, you can prevent the `star/align` module from being updated by adding the following to the `.nf-core.yml` file:\n\n```yaml\nbump-versions:\n  star/align: False\n```\n\nIf you want this module to be updated only to a specific version (or downgraded), you could instead specifiy the version:\n\n```yaml\nbump-versions:\n  star/align: \"2.6.1d\"\n```\n\n### Generate the name for a multi-tool container image\n\nWhen you want to use an image of a multi-tool container and you know the specific dependencies and their versions of that container, for example, by looking them up in the [BioContainers hash.tsv](https://github.com/BioContainers/multi-package-containers/blob/master/combinations/hash.tsv), you can use the `nf-core modules mulled` helper tool. This tool generates the name of a BioContainers mulled image.\n\n<!-- RICH-CODEX\nworking_dir: tmp/modules\nafter_command: cd ../../ && rm -rf tmp\n-->\n\n![`nf-core modules mulled pysam==0.16.0.1 biopython==1.78`](docs/images/nf-core-modules-mulled.svg)\n\n## Subworkflows\n\nAfter the launch of nf-core modules, we can provide now also nf-core subworkflows to fully utilize the power of DSL2 modularization.\nSubworkflows are chains of multiple module definitions that can be imported into any pipeline.\nThis allows multiple pipelines to use the same code for a the same tasks, and gives a greater degree of reusability and unit testing.\n\nTo allow us to test modules and subworkflows together we put the nf-core DSL2 subworkflows into the `subworkflows` directory of the modules repository is at <https://github.com/nf-core/modules>.\n\n### Custom remote subworkflows\n\nThe subworkflows supercommand released in nf-core/tools version 2.7 comes with two flags for specifying a custom remote repository:\n\n- `--git-remote <git remote url>`: Specify the repository from which the subworkflows should be fetched as a git URL. Defaults to the github repository of `nf-core/modules`.\n- `--branch <branch name>`: Specify the branch from which the subworkflows should be fetched. Defaults to the default branch of your repository.\n\nFor example, if you want to install the `bam_stats_samtools` subworkflow from the repository `nf-core/modules-test` hosted at `gitlab.com` in the branch `subworkflows`, you can use the following command:\n\n```bash\nnf-core subworkflows --git-remote git@gitlab.com:nf-core/modules-test.git --branch subworkflows install bam_stats_samtools\n```\n\nNote that a custom remote must follow a similar directory structure to that of `nf-core/modules` for the `nf-core subworkflows` commands to work properly.\n\nThe directory where subworkflows are installed will be prompted or obtained from `org_path` in the `.nf-core.yml` file if available. If your subworkflows are located at `subworkflows/my-folder/SUBWORKFLOW_NAME` your `.nf-core.yml` file should have:\n\n```yaml\norg_path: my-folder\n```\n\nPlease avoid installing the same tools from two different remotes, as this can lead to further errors.\n\nThe subworkflows commands will during initalisation try to pull changes from the remote repositories. If you want to disable this, for example due to performance reason or if you want to run the commands offline, you can use the flag `--no-pull`. Note however that the commands will still need to clone repositories that have previously not been used.\n\n### Private remote repositories\n\nYou can use the subworkflows command with private remote repositories. Make sure that your local `git` is correctly configured with your private remote\nand then specify the remote the same way you would do with a public remote repository.\n\n### List subworkflows\n\nThe `nf-core subworkflows list` command provides the subcommands `remote` and `local` for listing subworkflows installed in a remote repository and in the local pipeline respectively. Both subcommands allow to use a pattern for filtering the subworkflows by keywords eg: `nf-core subworkflows list <subworkflow_name> <keyword>`.\n\n#### List remote subworkflows\n\nTo list all subworkflows available on [nf-core/modules](https://github.com/nf-core/modules), you can use\n`nf-core subworkflows list remote`, which will print all available subworkflows to the terminal.\n\n<!-- RICH-CODEX\nworking_dir: tmp/nf-core-nextbigthing\nhead: 25\n-->\n\n![`nf-core subworkflows list remote`](docs/images/nf-core-subworkflows-list-remote.svg)\n\n#### List installed subworkflows\n\nTo list subworkflows installed in a local pipeline directory you can use `nf-core subworkflows list local`. This will list the subworkflows install in the current working directory by default. If you want to specify another directory, use the `--dir <pipeline_dir>` flag.\n\n<!-- RICH-CODEX\nworking_dir: tmp/nf-core-nextbigthing\nhead: 25\n-->\n\n![`nf-core subworkflows list local`](docs/images/nf-core-subworkflows-list-local.svg)\n\n## Show information about a subworkflow\n\nFor quick help about how a subworkflow works, use `nf-core subworkflows info <subworkflow_name>`.\nThis shows documentation about the subworkflow on the command line, similar to what's available on the\n[nf-core website](https://nf-co.re/subworkflows).\n\n<!-- RICH-CODEX\nworking_dir: tmp/nf-core-nextbigthing\n-->\n\n![`nf-core subworkflows info bam_rseqc`](docs/images/nf-core-subworkflows-info.svg)\n\n### Install subworkflows in a pipeline\n\nYou can install subworkflows from [nf-core/modules](https://github.com/nf-core/modules) in your pipeline using `nf-core subworkflows install`.\nA subworkflow installed this way will be installed to the `./subworkflows/nf-core` directory.\n\n<!-- RICH-CODEX\nworking_dir: tmp/nf-core-nextbigthing\n-->\n\n![`nf-core subworkflows install bam_rseqc`](docs/images/nf-core-subworkflows-install.svg)\n\nYou can pass the subworkflow name as an optional argument to `nf-core subworkflows install` like above or select it from a list of available subworkflows by only running `nf-core subworkflows install`.\n\nThere are four additional flags that you can use when installing a subworkflow:\n\n- `--dir`: Pipeline directory, the default is the current working directory.\n- `--force`: Overwrite a previously installed version of the subworkflow.\n- `--prompt`: Select the subworkflow version using a cli prompt.\n- `--sha <commit_sha>`: Install the subworkflow at a specific commit.\n\n### Update subworkflows in a pipeline\n\nYou can update subworkflows installed from a remote repository in your pipeline using `nf-core subworkflows update`.\n\n<!-- RICH-CODEX\nworking_dir: tmp/nf-core-nextbigthing\n-->\n\n![`nf-core subworkflows update --all --no-preview`](docs/images/nf-core-subworkflows-update.svg)\n\nYou can pass the subworkflow name as an optional argument to `nf-core subworkflows update` like above or select it from the list of available subworkflows by only running `nf-core subworkflows update`.\n\nThere are six additional flags that you can use with this command:\n\n- `--dir`: Pipeline directory, the default is the current working directory.\n- `--force`: Reinstall subworkflow even if it appears to be up to date\n- `--prompt`: Select the subworkflow version using a cli prompt.\n- `--sha <commit_sha>`: Install the subworkflow at a specific commit from the `nf-core/modules` repository.\n- `--preview/--no-preview`: Show the diff between the installed files and the new version before installing.\n- `--save-diff <filename>`: Save diffs to a file instead of updating in place. The diffs can then be applied with `git apply <filename>`.\n- `--all`: Use this flag to run the command on all subworkflows in the pipeline.\n- `--update-deps`: Use this flag to automatically update all dependencies of a subworkflow.\n\nIf you don't want to update certain subworkflows or want to update them to specific versions, you can make use of the `.nf-core.yml` configuration file. For example, you can prevent the `bam_rseqc` subworkflow installed from `nf-core/modules` from being updated by adding the following to the `.nf-core.yml` file:\n\n```yaml\nupdate:\n  https://github.com/nf-core/modules.git:\n    nf-core:\n      bam_rseqc: False\n```\n\nIf you want this subworkflow to be updated only to a specific version (or downgraded), you could instead specifiy the version:\n\n```yaml\nupdate:\n  https://github.com/nf-core/modules.git:\n    nf-core:\n      bam_rseqc: \"36a77f7c6decf2d1fb9f639ae982bc148d6828aa\"\n```\n\nThis also works at the repository level. For example, if you want to exclude all modules and subworkflows installed from `nf-core/modules` from being updated you could add:\n\n```yaml\nupdate:\n  https://github.com/nf-core/modules.git:\n    nf-core: False\n```\n\nor if you want all subworkflows in `nf-core/modules` at a specific version:\n\n```yaml\nupdate:\n  https://github.com/nf-core/modules.git:\n    nf-core: \"e937c7950af70930d1f34bb961403d9d2aa81c7\"\n```\n\nNote that the subworkflow versions specified in the `.nf-core.yml` file has higher precedence than versions specified with the command line flags, thus aiding you in writing reproducible pipelines.\n\n### Remove a subworkflow from a pipeline\n\nTo delete a subworkflow from your pipeline, run `nf-core subworkflows remove`.\n\n<!-- RICH-CODEX\nworking_dir: tmp/nf-core-nextbigthing\n-->\n\n![`nf-core subworkflows remove bam_rseqc`](docs/images/nf-core-subworkflows-remove.svg)\n\nYou can pass the subworkflow name as an optional argument to `nf-core subworkflows remove` like above or select it from the list of available subworkflows by only running `nf-core subworkflows remove`. To specify the pipeline directory, use `--dir <pipeline_dir>`.\n\n### Create a new subworkflow\n\nThis command creates a new nf-core subworkflow from the nf-core subworkflow template.\nThis ensures that your subworkflow follows the nf-core guidelines.\nThe template contains extensive `TODO` messages to walk you through the changes you need to make to the template.\nSee the [subworkflow documentation](https://nf-co.re/docs/contributing/subworkflows) for more details around creating a new subworkflow, including rules about nomenclature and a step-by-step guide.\n\nYou can create a new subworkflow using `nf-core subworkflows create`.\n\nThis command can be used both when writing a subworkflow for the shared [nf-core/modules](https://github.com/nf-core/modules) repository,\nand also when creating local subworkflows for a pipeline.\n\nWhich type of repository you are working in is detected by the `repository_type` flag in a `.nf-core.yml` file in the root directory,\nset to either `pipeline` or `modules`.\nThe command will automatically look through parent directories for this file to set the root path, so that you can run the command in a subdirectory.\nIt will start in the current working directory, or whatever is specified with `--dir <directory>`.\n\nThe `nf-core subworkflows create` command will prompt you with the relevant questions in order to create all of the necessary subworkflow files.\n\n<!-- RICH-CODEX\nworking_dir: tmp\nbefore_command: git clone https://github.com/nf-core/modules.git && cd modules\nfake_command: nf-core subworkflows create bam_stats_samtools --author @nf-core-bot  --label process_low --meta --force\n-->\n\n![`cd modules && nf-core subworkflows create bam_stats_samtools --author @nf-core-bot  --label process_low --meta --force`](docs/images/nf-core-subworkflows-create.svg)\n\n### Create a subworkflow test config file\n\nAll subworkflows on [nf-core/modules](https://github.com/nf-core/modules) have a strict requirement of being unit tested using minimal test data.\nTo help developers build new subworkflows, the `nf-core subworkflows create-test-yml` command automates the creation of the yaml file required to document the output file `md5sum` and other information generated by the testing.\nAfter you have written a minimal Nextflow script to test your subworkflow in `/tests/subworkflow/<subworkflow_name>/main.nf`, this command will run the tests for you and create the `/tests/subworkflow/<tool>/<subtool>/test.yml` file.\n\n<!-- RICH-CODEX\nworking_dir: tmp/subworkflows\nextra_env:\n  PROFILE: 'conda'\n-->\n\n![`nf-core subworkflows create-test-yml bam_stats_samtools --no-prompts --force`](docs/images/nf-core-subworkflows-create-test.svg)\n\n### Run the tests for a subworkflow using pytest\n\nTo run unit tests of a subworkflow that you have installed or the test created by the command [`nf-core subworkflow create-test-yml`](#create-a-subworkflow-test-config-file), you can use `nf-core subworkflows test` command. This command runs the tests specified in `tests/subworkflows/<subworkflow_name>/test.yml` file using [pytest](https://pytest-workflow.readthedocs.io/en/stable/).\n\nYou can specify the subworkflow name in the form TOOL/SUBTOOL in command line or provide it later by prompts.\n\n<!-- RICH-CODEX\nworking_dir: tmp/subworkflows\ntimeout: 30\nextra_env:\n  PROFILE: 'conda'\n-->\n\n![`nf-core subworkflows test bam_rseqc --no-prompts`](docs/images/nf-core-subworkflows-test.svg)\n\n## Citation\n\nIf you use `nf-core tools` in your work, please cite the `nf-core` publication as follows:\n\n> **The nf-core framework for community-curated bioinformatics pipelines.**\n>\n> Philip Ewels, Alexander Peltzer, Sven Fillinger, Harshil Patel, Johannes Alneberg, Andreas Wilm, Maxime Ulysse Garcia, Paolo Di Tommaso & Sven Nahnsen.\n>\n> _Nat Biotechnol._ 2020 Feb 13. doi: [10.1038/s41587-020-0439-x](https://dx.doi.org/10.1038/s41587-020-0439-x).\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/nf-core/tools",
    "keywords": "nf-core,nextflow,bioinformatics,workflow,pipeline,biology,sequencing,NGS,next generation sequencing",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "nf-core",
    "package_url": "https://pypi.org/project/nf-core/",
    "platform": null,
    "project_url": "https://pypi.org/project/nf-core/",
    "project_urls": {
      "Homepage": "https://github.com/nf-core/tools"
    },
    "release_url": "https://pypi.org/project/nf-core/2.7.2/",
    "requires_dist": [
      "click",
      "filetype",
      "galaxy-tool-util",
      "GitPython",
      "jinja2",
      "jsonschema (>=3.0)",
      "markdown (>=3.3)",
      "packaging",
      "pre-commit",
      "prompt-toolkit (>=3.0.3)",
      "pytest (>=7.0.0)",
      "pytest-workflow (>=1.6.0)",
      "pyyaml",
      "questionary (>=1.8.0)",
      "refgenie",
      "requests",
      "requests-cache",
      "rich-click (>=1.0.0)",
      "rich (>=10.7.0)",
      "tabulate"
    ],
    "requires_python": ">=3.7, <4",
    "summary": "Helper tools for use with nf-core Nextflow pipelines.",
    "version": "2.7.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16149594,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3c39cd5d93b17970ef4f4854385c3d7efad129864a399115c9cac0d0fdc6bf57",
          "md5": "934fb60ebe5320dbc216d8b1f21867be",
          "sha256": "4f97ebd485e86198dd92d888b0b610e66ef4d68f647fa57643841a3068a9a26f"
        },
        "downloads": -1,
        "filename": "nf-core-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "934fb60ebe5320dbc216d8b1f21867be",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20866,
        "upload_time": "2018-06-12T15:15:58",
        "upload_time_iso_8601": "2018-06-12T15:15:58.107103Z",
        "url": "https://files.pythonhosted.org/packages/3c/39/cd5d93b17970ef4f4854385c3d7efad129864a399115c9cac0d0fdc6bf57/nf-core-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1c17374a1c0a40e1cd263a27eabb871c71e0500da8c4721feef9fd3111c63c59",
          "md5": "65796de4f91ce0d374d0f8c73fae7c07",
          "sha256": "9f045333f85cd81e9eab32f88867e458da3309d19191ed5d90cfb1488888664f"
        },
        "downloads": -1,
        "filename": "nf-core-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "65796de4f91ce0d374d0f8c73fae7c07",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20856,
        "upload_time": "2018-07-18T09:26:18",
        "upload_time_iso_8601": "2018-07-18T09:26:18.777645Z",
        "url": "https://files.pythonhosted.org/packages/1c/17/374a1c0a40e1cd263a27eabb871c71e0500da8c4721feef9fd3111c63c59/nf-core-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d119ef667d089848741957ce3afd7cbf051f94a5567defe9412dea1b036bc4a6",
          "md5": "fff2b88e697cb5af416b0896ff462887",
          "sha256": "2258f0f02db2b17c942a5609083bd342054fcc39a9727359606c3ad1b9a28820"
        },
        "downloads": -1,
        "filename": "nf-core-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "fff2b88e697cb5af416b0896ff462887",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 47758,
        "upload_time": "2018-08-14T19:05:07",
        "upload_time_iso_8601": "2018-08-14T19:05:07.677874Z",
        "url": "https://files.pythonhosted.org/packages/d1/19/ef667d089848741957ce3afd7cbf051f94a5567defe9412dea1b036bc4a6/nf-core-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "db4eaacbe0a170039ebe27df85090a54bc3a8c2d536fe8d8f90fed6568274db7",
          "md5": "e1f1a80bd36fdd5638cc78d5f5ff5c96",
          "sha256": "dfb482502084486f796e3da1384163eed44c9f187211e21da84720812b7f9cd2"
        },
        "downloads": -1,
        "filename": "nf_core-1.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e1f1a80bd36fdd5638cc78d5f5ff5c96",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 120009,
        "upload_time": "2020-07-30T13:44:57",
        "upload_time_iso_8601": "2020-07-30T13:44:57.414783Z",
        "url": "https://files.pythonhosted.org/packages/db/4e/aacbe0a170039ebe27df85090a54bc3a8c2d536fe8d8f90fed6568274db7/nf_core-1.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "64bdf1415a1775fc53d086ba3a2c19c19b806f8b57f3ac0e5e4f739aeab060da",
          "md5": "bf3e8af0fadefc966edb7221ef87dbc5",
          "sha256": "417a24af7c01306afb9bf737941e6ae534f2f01d637923f656f0d7bc3793daa9"
        },
        "downloads": -1,
        "filename": "nf-core-1.10.tar.gz",
        "has_sig": false,
        "md5_digest": "bf3e8af0fadefc966edb7221ef87dbc5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 116475,
        "upload_time": "2020-07-30T13:44:59",
        "upload_time_iso_8601": "2020-07-30T13:44:59.808100Z",
        "url": "https://files.pythonhosted.org/packages/64/bd/f1415a1775fc53d086ba3a2c19c19b806f8b57f3ac0e5e4f739aeab060da/nf-core-1.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.10.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "48e1985e4644e059327402de2fd20a95a3709f514261be1bcab3b329ac31ec92",
          "md5": "651ffcdc05c2f2a3dbec32c78d5d890c",
          "sha256": "2ef470b574c3c31b00ac31f24b51efe47c746cf359cfc1533d95ea90fcaa7a32"
        },
        "downloads": -1,
        "filename": "nf_core-1.10.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "651ffcdc05c2f2a3dbec32c78d5d890c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 120253,
        "upload_time": "2020-07-30T20:04:17",
        "upload_time_iso_8601": "2020-07-30T20:04:17.553870Z",
        "url": "https://files.pythonhosted.org/packages/48/e1/985e4644e059327402de2fd20a95a3709f514261be1bcab3b329ac31ec92/nf_core-1.10.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dcbb83bd9f0690fa665ad1b31f08f6ca35a68997f1382c5cff2318bb08dbb6cb",
          "md5": "2a9d4adf91d38da45ddb2f0933f6ae4a",
          "sha256": "27b23f21b8bf3bdaa8e360fd3025a3031fa5052692182f0a2d61a3d89fd16f70"
        },
        "downloads": -1,
        "filename": "nf-core-1.10.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2a9d4adf91d38da45ddb2f0933f6ae4a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 116760,
        "upload_time": "2020-07-30T20:04:19",
        "upload_time_iso_8601": "2020-07-30T20:04:19.154786Z",
        "url": "https://files.pythonhosted.org/packages/dc/bb/83bd9f0690fa665ad1b31f08f6ca35a68997f1382c5cff2318bb08dbb6cb/nf-core-1.10.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.10.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7032397814983910adddd7917e3cf1073c2d9ee572e0aa5e398f87b8e25904f2",
          "md5": "2aeff136a4d474e5a72fc4709c29b90a",
          "sha256": "ad6ae0e5183d5e4a00ace71ff6185756a5449824ab4f39b253ccb4c90d1a7dee"
        },
        "downloads": -1,
        "filename": "nf_core-1.10.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2aeff136a4d474e5a72fc4709c29b90a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 120038,
        "upload_time": "2020-07-31T10:52:17",
        "upload_time_iso_8601": "2020-07-31T10:52:17.445797Z",
        "url": "https://files.pythonhosted.org/packages/70/32/397814983910adddd7917e3cf1073c2d9ee572e0aa5e398f87b8e25904f2/nf_core-1.10.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c2d90c8353ef7a145e8c69460dc5f9481468c8d1e45d2d6329c3997ffc257cbb",
          "md5": "4fc1dfc6c9fff2fdb008ff7f7b4c08bb",
          "sha256": "3f733e3881f856e53b4a072f410732fc30b767f91a5a992d16f9f523f464527d"
        },
        "downloads": -1,
        "filename": "nf-core-1.10.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4fc1dfc6c9fff2fdb008ff7f7b4c08bb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 116569,
        "upload_time": "2020-07-31T10:52:20",
        "upload_time_iso_8601": "2020-07-31T10:52:20.206782Z",
        "url": "https://files.pythonhosted.org/packages/c2/d9/0c8353ef7a145e8c69460dc5f9481468c8d1e45d2d6329c3997ffc257cbb/nf-core-1.10.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1e0e58bde7e0395beb4bfa47001766e0e425c24b2605cc1a1b68947e8ab1be42",
          "md5": "47224e2505b4f337fce1d5abf7571f64",
          "sha256": "8404a410f928de4bd1addb46746e19a8d51c61244e0b0858ed76245a6dcf7a8b"
        },
        "downloads": -1,
        "filename": "nf_core-1.11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "47224e2505b4f337fce1d5abf7571f64",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 120378,
        "upload_time": "2020-10-27T09:25:19",
        "upload_time_iso_8601": "2020-10-27T09:25:19.372360Z",
        "url": "https://files.pythonhosted.org/packages/1e/0e/58bde7e0395beb4bfa47001766e0e425c24b2605cc1a1b68947e8ab1be42/nf_core-1.11-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5ace779474326fb872a1067857d3f401e172dce5a77cb8bf6c0ea2695f2a34fb",
          "md5": "c6b32f4e4746b9f7a0d4ee9fe3176cbe",
          "sha256": "99c1e1ce83cdd4efe8a0a715d9141f25d7619edb824972f2b51c75253f2f18e3"
        },
        "downloads": -1,
        "filename": "nf-core-1.11.tar.gz",
        "has_sig": false,
        "md5_digest": "c6b32f4e4746b9f7a0d4ee9fe3176cbe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 116858,
        "upload_time": "2020-10-27T09:25:20",
        "upload_time_iso_8601": "2020-10-27T09:25:20.703864Z",
        "url": "https://files.pythonhosted.org/packages/5a/ce/779474326fb872a1067857d3f401e172dce5a77cb8bf6c0ea2695f2a34fb/nf-core-1.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "551f1301b176910b1900f11c7227d7ad3272aa1007c593f1718da0a35b238ec0",
          "md5": "94e0e8e153326cd0fb421dafa6288374",
          "sha256": "66b393074f36171a22a6edac22ece04e36419914fa515beba70414a8fcdf04ab"
        },
        "downloads": -1,
        "filename": "nf_core-1.12-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "94e0e8e153326cd0fb421dafa6288374",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 122257,
        "upload_time": "2020-11-19T13:47:10",
        "upload_time_iso_8601": "2020-11-19T13:47:10.689489Z",
        "url": "https://files.pythonhosted.org/packages/55/1f/1301b176910b1900f11c7227d7ad3272aa1007c593f1718da0a35b238ec0/nf_core-1.12-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8705999902561f445b1ced0fe7eb47bc15705146dfee5188941a856a07c9e845",
          "md5": "0b41a3e8da07e4766592908c2081b7af",
          "sha256": "58fb3032eab5368095a3f8c415139a5b2c9ed4086f2a5d8c6fdada85cc639780"
        },
        "downloads": -1,
        "filename": "nf-core-1.12.tar.gz",
        "has_sig": false,
        "md5_digest": "0b41a3e8da07e4766592908c2081b7af",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 117269,
        "upload_time": "2020-11-19T13:47:11",
        "upload_time_iso_8601": "2020-11-19T13:47:11.766870Z",
        "url": "https://files.pythonhosted.org/packages/87/05/999902561f445b1ced0fe7eb47bc15705146dfee5188941a856a07c9e845/nf-core-1.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.12.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ff4091a8359d9c5ffce2521604df82528993af2cea441e5d0d41ac0ee6d6032d",
          "md5": "41b0936c63ab0d5bcc4ed5fa000730f5",
          "sha256": "e6c1a82064443bda8ea37ad7b070c8c145f429926299f570466d359853b38810"
        },
        "downloads": -1,
        "filename": "nf_core-1.12.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "41b0936c63ab0d5bcc4ed5fa000730f5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 124722,
        "upload_time": "2020-12-03T19:17:29",
        "upload_time_iso_8601": "2020-12-03T19:17:29.194626Z",
        "url": "https://files.pythonhosted.org/packages/ff/40/91a8359d9c5ffce2521604df82528993af2cea441e5d0d41ac0ee6d6032d/nf_core-1.12.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0b021bcc033bf3ead9645387b93f57edb9fe824f0372a277f8ca192207bad52c",
          "md5": "6368063b7627a481920e4b7fca0c809f",
          "sha256": "79357e78d481717f101f8c8ff0842a80c985ef42b07ee5f5b78186e7a7226215"
        },
        "downloads": -1,
        "filename": "nf-core-1.12.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6368063b7627a481920e4b7fca0c809f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 119498,
        "upload_time": "2020-12-03T19:17:30",
        "upload_time_iso_8601": "2020-12-03T19:17:30.603284Z",
        "url": "https://files.pythonhosted.org/packages/0b/02/1bcc033bf3ead9645387b93f57edb9fe824f0372a277f8ca192207bad52c/nf-core-1.12.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2c2dc5d8e1635b48b6c27ac78854aec94cc8a30c3ae7cceb847f5fea964e906b",
          "md5": "8708147ac8d38579bcb139621a15c910",
          "sha256": "6c4fbeafa36bdcb2bd34eb89a12609681e5a3dd8b8ee39e7bfe0b8b2f014c657"
        },
        "downloads": -1,
        "filename": "nf_core-1.13-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8708147ac8d38579bcb139621a15c910",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 2184829,
        "upload_time": "2021-03-18T12:05:05",
        "upload_time_iso_8601": "2021-03-18T12:05:05.214226Z",
        "url": "https://files.pythonhosted.org/packages/2c/2d/c5d8e1635b48b6c27ac78854aec94cc8a30c3ae7cceb847f5fea964e906b/nf_core-1.13-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a95e3ddd85c6c47b0a6945091a4c09b0f318ea078fbb06eb2c894641bd325557",
          "md5": "48ee2a3e1dcae5dbed9a164fe4980365",
          "sha256": "b5ebcfed1f1e94e22a811bd7ef2fa9ded8337ce026e34ea7efc15aaf2c1f3265"
        },
        "downloads": -1,
        "filename": "nf-core-1.13.tar.gz",
        "has_sig": false,
        "md5_digest": "48ee2a3e1dcae5dbed9a164fe4980365",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2176463,
        "upload_time": "2021-03-18T12:05:06",
        "upload_time_iso_8601": "2021-03-18T12:05:06.833322Z",
        "url": "https://files.pythonhosted.org/packages/a9/5e/3ddd85c6c47b0a6945091a4c09b0f318ea078fbb06eb2c894641bd325557/nf-core-1.13.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.13.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6bea83a34e90d5581d734afbf6c5ed11749618bd5ca48440d42b8ea5f01dd8d3",
          "md5": "a13a334d531c52cb6aded24014bc9b21",
          "sha256": "0c9674b286388e92f3ac186d413bac5a6fa8395f935d33828328934d9886796e"
        },
        "downloads": -1,
        "filename": "nf_core-1.13.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a13a334d531c52cb6aded24014bc9b21",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 2185146,
        "upload_time": "2021-03-19T13:07:23",
        "upload_time_iso_8601": "2021-03-19T13:07:23.906713Z",
        "url": "https://files.pythonhosted.org/packages/6b/ea/83a34e90d5581d734afbf6c5ed11749618bd5ca48440d42b8ea5f01dd8d3/nf_core-1.13.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7c079792cb083b74b133842b780bb4c2aa7322d9641905eb3115e06587a29a68",
          "md5": "7ff2ee629a5fb281cb11b0382e449e56",
          "sha256": "cb59fa7c044dc7d0ffbbb48c92fb33cc25fe94b3506a2320b76c018bc523bc94"
        },
        "downloads": -1,
        "filename": "nf-core-1.13.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7ff2ee629a5fb281cb11b0382e449e56",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2176759,
        "upload_time": "2021-03-19T13:07:25",
        "upload_time_iso_8601": "2021-03-19T13:07:25.449561Z",
        "url": "https://files.pythonhosted.org/packages/7c/07/9792cb083b74b133842b780bb4c2aa7322d9641905eb3115e06587a29a68/nf-core-1.13.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.13.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f49e92a35069f22882de470c6c0a05d6e61620b3c79221d8a91ad6beea8cbbc",
          "md5": "5311718c5229a5b85972dec3fe770b37",
          "sha256": "56a3e6c56b8dc4bfc85774d84bafd368671b45a5921f809b5986be310278e9cd"
        },
        "downloads": -1,
        "filename": "nf_core-1.13.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5311718c5229a5b85972dec3fe770b37",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 2186421,
        "upload_time": "2021-03-23T15:18:12",
        "upload_time_iso_8601": "2021-03-23T15:18:12.024001Z",
        "url": "https://files.pythonhosted.org/packages/0f/49/e92a35069f22882de470c6c0a05d6e61620b3c79221d8a91ad6beea8cbbc/nf_core-1.13.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fd95c5c462a095157520948580f1f18e19065fec442e242daf3d1a3f91597e3f",
          "md5": "1126a00f9ffa71e878dcad68d9eb7524",
          "sha256": "604778c4774703b1e49c26327c839ca53f317c3d239e9bac89eb3071e2dde5f4"
        },
        "downloads": -1,
        "filename": "nf-core-1.13.2.tar.gz",
        "has_sig": false,
        "md5_digest": "1126a00f9ffa71e878dcad68d9eb7524",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2177800,
        "upload_time": "2021-03-23T15:18:13",
        "upload_time_iso_8601": "2021-03-23T15:18:13.557600Z",
        "url": "https://files.pythonhosted.org/packages/fd/95/c5c462a095157520948580f1f18e19065fec442e242daf3d1a3f91597e3f/nf-core-1.13.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.13.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "62b2414917447d113655baf5a38cdc1176f145617faaff0e737108e9a8783a2b",
          "md5": "90818290a6a4fb424d6451a691375890",
          "sha256": "1d8da3c9531a73b498ef3b7b0ee0f43634f452553d7331d271c763ba641d3d49"
        },
        "downloads": -1,
        "filename": "nf_core-1.13.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "90818290a6a4fb424d6451a691375890",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 2186844,
        "upload_time": "2021-03-25T18:17:28",
        "upload_time_iso_8601": "2021-03-25T18:17:28.694842Z",
        "url": "https://files.pythonhosted.org/packages/62/b2/414917447d113655baf5a38cdc1176f145617faaff0e737108e9a8783a2b/nf_core-1.13.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "38a567e562430be3bbdf69f2a31df5e895f6262364a797d92a6df197d5dd7110",
          "md5": "d2f4aa95408b2b29ccc77b64ffcbf861",
          "sha256": "d95d474953fe7a52d788a49dac892552801bf935e26443de56dbf488cbc47803"
        },
        "downloads": -1,
        "filename": "nf-core-1.13.3.tar.gz",
        "has_sig": false,
        "md5_digest": "d2f4aa95408b2b29ccc77b64ffcbf861",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2178103,
        "upload_time": "2021-03-25T18:17:30",
        "upload_time_iso_8601": "2021-03-25T18:17:30.272921Z",
        "url": "https://files.pythonhosted.org/packages/38/a5/67e562430be3bbdf69f2a31df5e895f6262364a797d92a6df197d5dd7110/nf-core-1.13.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.14": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "abc991ec099302380f1c03f055658c9fcde9bdd39371ed5570d08d6b738cf6ec",
          "md5": "12ae20afeb87a864e08d6fbc034a9b83",
          "sha256": "0bb457f4703a46be36a1aa934c552f8ceedf35f970b1f3f7fa1085458591352c"
        },
        "downloads": -1,
        "filename": "nf_core-1.14-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "12ae20afeb87a864e08d6fbc034a9b83",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 2195382,
        "upload_time": "2021-05-11T11:09:44",
        "upload_time_iso_8601": "2021-05-11T11:09:44.578534Z",
        "url": "https://files.pythonhosted.org/packages/ab/c9/91ec099302380f1c03f055658c9fcde9bdd39371ed5570d08d6b738cf6ec/nf_core-1.14-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "48a8c29174a91de8e02d5e68d95cda89439ebffbb822c2641076084b0958b548",
          "md5": "6663858d6168a7ffb591f3f44fb03f4e",
          "sha256": "7cda708836522f2452c21b2cdb4eab99232921a688739a091d3899ea3b4b9f66"
        },
        "downloads": -1,
        "filename": "nf-core-1.14.tar.gz",
        "has_sig": false,
        "md5_digest": "6663858d6168a7ffb591f3f44fb03f4e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2186848,
        "upload_time": "2021-05-11T11:09:46",
        "upload_time_iso_8601": "2021-05-11T11:09:46.270496Z",
        "url": "https://files.pythonhosted.org/packages/48/a8/c29174a91de8e02d5e68d95cda89439ebffbb822c2641076084b0958b548/nf-core-1.14.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a10d4419093c0cc66d856df1a45c3b5c4548600d403596afbf77224dff4b571",
          "md5": "4ab81ecce2932743fb91a0d546b6c711",
          "sha256": "74589eacd8829ad2566ca360bb66a49f35645d9899f90cb0e5834eed2cf567f2"
        },
        "downloads": -1,
        "filename": "nf-core-1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4ab81ecce2932743fb91a0d546b6c711",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 53146,
        "upload_time": "2018-10-01T19:24:09",
        "upload_time_iso_8601": "2018-10-01T19:24:09.349239Z",
        "url": "https://files.pythonhosted.org/packages/9a/10/d4419093c0cc66d856df1a45c3b5c4548600d403596afbf77224dff4b571/nf-core-1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3fa26b2e901dd31d0fc1766300728ee32df1a8981c13aba8d16fedb70d363ecd",
          "md5": "cae4a205da58b04d459737b59b965692",
          "sha256": "2a993d57e3ccb3af79559e1faf6ba17f4df6965b1b47c5bd797fa6e0430df802"
        },
        "downloads": -1,
        "filename": "nf-core-1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "cae4a205da58b04d459737b59b965692",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 54990,
        "upload_time": "2018-11-21T13:45:39",
        "upload_time_iso_8601": "2018-11-21T13:45:39.254979Z",
        "url": "https://files.pythonhosted.org/packages/3f/a2/6b2e901dd31d0fc1766300728ee32df1a8981c13aba8d16fedb70d363ecd/nf-core-1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6d87101aa95a7976a3171e02bbdece884989f507359dfa1d5f1bb9c04eb0127",
          "md5": "ad76e0b2ae6c709819e3a0c7eb18ea18",
          "sha256": "bb27e74a16de903d7e067808885b3fc0464f15340db963bdd55a2ef3de6cd9e4"
        },
        "downloads": -1,
        "filename": "nf-core-1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "ad76e0b2ae6c709819e3a0c7eb18ea18",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 55665,
        "upload_time": "2018-12-12T15:49:01",
        "upload_time_iso_8601": "2018-12-12T15:49:01.110439Z",
        "url": "https://files.pythonhosted.org/packages/a6/d8/7101aa95a7976a3171e02bbdece884989f507359dfa1d5f1bb9c04eb0127/nf-core-1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f7569977d64de49d0d03a37bb8264bfc91a8814d04436e4752a28d1a61516188",
          "md5": "a3c007901e768d3e508201091f21b386",
          "sha256": "85a51027555d46a6275db91489c9e16a22536a6033c10080cfa25d52e523f580"
        },
        "downloads": -1,
        "filename": "nf-core-1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "a3c007901e768d3e508201091f21b386",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 67172,
        "upload_time": "2019-03-13T22:22:09",
        "upload_time_iso_8601": "2019-03-13T22:22:09.817163Z",
        "url": "https://files.pythonhosted.org/packages/f7/56/9977d64de49d0d03a37bb8264bfc91a8814d04436e4752a28d1a61516188/nf-core-1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3d27a2184c5c6f6002901180b4cfa94b3113f32aa0ed80cf2de46d0a311d7f21",
          "md5": "03d092b26929b1b21f1f6c6d8c977c6c",
          "sha256": "3d94796419ba4c5b1df1c59e897a5d2c1d6c55e5ca16fc60dbf0306b0fd8d314"
        },
        "downloads": -1,
        "filename": "nf-core-1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "03d092b26929b1b21f1f6c6d8c977c6c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 65929,
        "upload_time": "2019-04-09T11:43:36",
        "upload_time_iso_8601": "2019-04-09T11:43:36.749707Z",
        "url": "https://files.pythonhosted.org/packages/3d/27/a2184c5c6f6002901180b4cfa94b3113f32aa0ed80cf2de46d0a311d7f21/nf-core-1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b401d4e9db3b14d61f6ea0e548abf5c6b7560b9c02529684736eb7081e9fd3b4",
          "md5": "a83b40707befc2627fc035a7bbb50650",
          "sha256": "17f58bac741c50a9a601efbe91f229422c3088e509169712d83ed9d97b0762cc"
        },
        "downloads": -1,
        "filename": "nf-core-1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "a83b40707befc2627fc035a7bbb50650",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 68683,
        "upload_time": "2019-10-07T14:03:10",
        "upload_time_iso_8601": "2019-10-07T14:03:10.529657Z",
        "url": "https://files.pythonhosted.org/packages/b4/01/d4e9db3b14d61f6ea0e548abf5c6b7560b9c02529684736eb7081e9fd3b4/nf-core-1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2d7d0e38c4faf9067cc9689ced05337ba13aa39e61aa6ce7b9d132cbf0601eb3",
          "md5": "e1487302f85db79fd77463e1429a5b08",
          "sha256": "c1ca2ea3a5163403310a2bf0026a8404f33b61eb40dad7007b10b956ceb3e702"
        },
        "downloads": -1,
        "filename": "nf-core-1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "e1487302f85db79fd77463e1429a5b08",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 81317,
        "upload_time": "2020-01-27T13:24:16",
        "upload_time_iso_8601": "2020-01-27T13:24:16.562995Z",
        "url": "https://files.pythonhosted.org/packages/2d/7d/0e38c4faf9067cc9689ced05337ba13aa39e61aa6ce7b9d132cbf0601eb3/nf-core-1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dd91d8da0ad0fbd0326234b9e28b8e4b313861a62291a1e60c8f78ad254897fe",
          "md5": "d7315a53e472173471f4fcac7637358c",
          "sha256": "54054b07ad773a2cca1c471ad3f4ca817a59c8829ff0a7a33f01efbd5cb49376"
        },
        "downloads": -1,
        "filename": "nf_core-1.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d7315a53e472173471f4fcac7637358c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 92224,
        "upload_time": "2020-02-20T15:21:26",
        "upload_time_iso_8601": "2020-02-20T15:21:26.071492Z",
        "url": "https://files.pythonhosted.org/packages/dd/91/d8da0ad0fbd0326234b9e28b8e4b313861a62291a1e60c8f78ad254897fe/nf_core-1.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad3619e674feed9c643a06a09b9b22a6dd2b05a4fa5879c482ad16b9f013589a",
          "md5": "28a9f87d52ca584aea47159d8d616618",
          "sha256": "ba237a05efd360a3cb7606fc546e35ae8cd326003c08238ace0088646bcc00b5"
        },
        "downloads": -1,
        "filename": "nf-core-1.9.tar.gz",
        "has_sig": false,
        "md5_digest": "28a9f87d52ca584aea47159d8d616618",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 82534,
        "upload_time": "2020-02-20T15:21:27",
        "upload_time_iso_8601": "2020-02-20T15:21:27.514430Z",
        "url": "https://files.pythonhosted.org/packages/ad/36/19e674feed9c643a06a09b9b22a6dd2b05a4fa5879c482ad16b9f013589a/nf-core-1.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "34884fcf1981ddf0bb8b2de7846eb5b7025dd0a5a069b3bd4cfb8f2e59d59bc1",
          "md5": "eb9d326b43d7f51a3b28678da40b4d50",
          "sha256": "8dc8e15fd6687c2d0c6fdf0187b51bdb70da52115b243e18e05a9de9e21d4c86"
        },
        "downloads": -1,
        "filename": "nf_core-2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eb9d326b43d7f51a3b28678da40b4d50",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 2331649,
        "upload_time": "2021-07-13T08:03:39",
        "upload_time_iso_8601": "2021-07-13T08:03:39.892566Z",
        "url": "https://files.pythonhosted.org/packages/34/88/4fcf1981ddf0bb8b2de7846eb5b7025dd0a5a069b3bd4cfb8f2e59d59bc1/nf_core-2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a2e2868db88b1d176b00739fc586395ba00cbd93d9baf6cfa06d4b13efc0d959",
          "md5": "cb9c7f152234c5b1faf9977bd376bd0f",
          "sha256": "cb9238dc05c4083397017965259e07ff2bdd9c65f57eaeba949200cca162a76c"
        },
        "downloads": -1,
        "filename": "nf-core-2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "cb9c7f152234c5b1faf9977bd376bd0f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2313981,
        "upload_time": "2021-07-13T08:03:41",
        "upload_time_iso_8601": "2021-07-13T08:03:41.770030Z",
        "url": "https://files.pythonhosted.org/packages/a2/e2/868db88b1d176b00739fc586395ba00cbd93d9baf6cfa06d4b13efc0d959/nf-core-2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c161db5429e91964298ea23fd492dcae7f35b9047d649aed18d3cb7d5dfc56ce",
          "md5": "3e7e545601e6fec073f8ae954ae25226",
          "sha256": "17037a7c27f0b0d3b340ad9136ad2452dda9fe933d17f0ec5793b531915da881"
        },
        "downloads": -1,
        "filename": "nf_core-2.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3e7e545601e6fec073f8ae954ae25226",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 2331676,
        "upload_time": "2021-07-13T15:24:43",
        "upload_time_iso_8601": "2021-07-13T15:24:43.538894Z",
        "url": "https://files.pythonhosted.org/packages/c1/61/db5429e91964298ea23fd492dcae7f35b9047d649aed18d3cb7d5dfc56ce/nf_core-2.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ae2922cb09628cdef2bf689a39631fb644ee65fc772718182a20cdd35dca0c91",
          "md5": "352b264ffa74c02c506c7d7905fc86a2",
          "sha256": "5540a07b35b337c7d66876c21d5cd2ed27efb0fb57f277c6462221b03844c987"
        },
        "downloads": -1,
        "filename": "nf-core-2.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "352b264ffa74c02c506c7d7905fc86a2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2313977,
        "upload_time": "2021-07-13T15:24:45",
        "upload_time_iso_8601": "2021-07-13T15:24:45.741057Z",
        "url": "https://files.pythonhosted.org/packages/ae/29/22cb09628cdef2bf689a39631fb644ee65fc772718182a20cdd35dca0c91/nf-core-2.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d73d68afc50ff6fae6ab62f0f242af1eb1802ee87a6132a91524ef562f60d613",
          "md5": "0a390ef8e336fc21e23b5493cef4ea82",
          "sha256": "a3604cd53c7f53ff73a09dd7711c7a45326f2cf4a743c94698262038ac9970c8"
        },
        "downloads": -1,
        "filename": "nf_core-2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0a390ef8e336fc21e23b5493cef4ea82",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 2336312,
        "upload_time": "2021-07-27T14:59:05",
        "upload_time_iso_8601": "2021-07-27T14:59:05.857745Z",
        "url": "https://files.pythonhosted.org/packages/d7/3d/68afc50ff6fae6ab62f0f242af1eb1802ee87a6132a91524ef562f60d613/nf_core-2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "86f3c09ff0e66a7e8baec15ba622d2e6886aa79ddfd58fcd55c6c769016e92b8",
          "md5": "416c4328afd9b421a3d04c3d2cacb8fb",
          "sha256": "dcac85f67dfc2f0412b016cb0d2c53188c3e86bd663cf38d6c9439a3532de97d"
        },
        "downloads": -1,
        "filename": "nf-core-2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "416c4328afd9b421a3d04c3d2cacb8fb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2318398,
        "upload_time": "2021-07-27T14:59:08",
        "upload_time_iso_8601": "2021-07-27T14:59:08.072804Z",
        "url": "https://files.pythonhosted.org/packages/86/f3/c09ff0e66a7e8baec15ba622d2e6886aa79ddfd58fcd55c6c769016e92b8/nf-core-2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "da82fe509a16b7e4f1b870204d5588ba299e73ca9ddf91e9850fba736470985f",
          "md5": "8abd7a87f52d7cdfdc483a96e501dd38",
          "sha256": "cdf5c3bcfbf8715b0f16757128e8476b9a450fada9001b8dcd18373a33a862c4"
        },
        "downloads": -1,
        "filename": "nf_core-2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8abd7a87f52d7cdfdc483a96e501dd38",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 2368734,
        "upload_time": "2021-12-14T16:42:24",
        "upload_time_iso_8601": "2021-12-14T16:42:24.185865Z",
        "url": "https://files.pythonhosted.org/packages/da/82/fe509a16b7e4f1b870204d5588ba299e73ca9ddf91e9850fba736470985f/nf_core-2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cb1f2476b088ce62c3f9431de94d698b2874417a8d52fb18a547db4d32de6b2b",
          "md5": "048a30cc917604cfdb3fb2dda972669e",
          "sha256": "62930f22a9c8ea30ecaf6986ad6ac3df9d70ab6db63682f27619c2884abbbeb4"
        },
        "downloads": -1,
        "filename": "nf-core-2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "048a30cc917604cfdb3fb2dda972669e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2342011,
        "upload_time": "2021-12-14T16:42:26",
        "upload_time_iso_8601": "2021-12-14T16:42:26.065421Z",
        "url": "https://files.pythonhosted.org/packages/cb/1f/2476b088ce62c3f9431de94d698b2874417a8d52fb18a547db4d32de6b2b/nf-core-2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d62195fcb3d53a161f1f71962802d9c8f499c1f51d178ca10c0e217b7c66f328",
          "md5": "149f813ab0c69be08cff5b5192b2a1e1",
          "sha256": "f246ec7193ac2ddddbb7080728f539de4e6cad154cbf7cfe42d33f3bf6966e3a"
        },
        "downloads": -1,
        "filename": "nf_core-2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "149f813ab0c69be08cff5b5192b2a1e1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 2379956,
        "upload_time": "2022-03-15T20:58:27",
        "upload_time_iso_8601": "2022-03-15T20:58:27.740961Z",
        "url": "https://files.pythonhosted.org/packages/d6/21/95fcb3d53a161f1f71962802d9c8f499c1f51d178ca10c0e217b7c66f328/nf_core-2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "621fccae8d0342ce699e8f8470d993f0896248a570b188a92ed9281d2802970f",
          "md5": "1835986006285a5ffaf34c9023a8b5f6",
          "sha256": "2ffed03d1ab799f153a9f6c0558372e0891fbca26d98cb1977c7bfd7b220339c"
        },
        "downloads": -1,
        "filename": "nf-core-2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "1835986006285a5ffaf34c9023a8b5f6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2353819,
        "upload_time": "2022-03-15T20:58:30",
        "upload_time_iso_8601": "2022-03-15T20:58:30.537305Z",
        "url": "https://files.pythonhosted.org/packages/62/1f/ccae8d0342ce699e8f8470d993f0896248a570b188a92ed9281d2802970f/nf-core-2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "74580d184f867880301c1ed6b9700710ff0f123634ca314ba5ce53b5e001b45c",
          "md5": "c63ac05904a4b5fb7510bdde47e19fc1",
          "sha256": "c6be4040ae0c1f33a7d771c3e881ce5b1d9566097beefb8a9aff9f5ed3cd8052"
        },
        "downloads": -1,
        "filename": "nf_core-2.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c63ac05904a4b5fb7510bdde47e19fc1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 2381542,
        "upload_time": "2022-03-23T13:47:26",
        "upload_time_iso_8601": "2022-03-23T13:47:26.208741Z",
        "url": "https://files.pythonhosted.org/packages/74/58/0d184f867880301c1ed6b9700710ff0f123634ca314ba5ce53b5e001b45c/nf_core-2.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9b9f757253b24a0c518bb689034322a4fa615859342d27e5f2c2d350d25d44c8",
          "md5": "26c6d4118283218ebc5ff6dbf8f3d2d7",
          "sha256": "996efe4534867f1865fc983eb6008d0fe422ced691e5172d08d0a1fe971807e6"
        },
        "downloads": -1,
        "filename": "nf-core-2.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "26c6d4118283218ebc5ff6dbf8f3d2d7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2355148,
        "upload_time": "2022-03-23T13:47:27",
        "upload_time_iso_8601": "2022-03-23T13:47:27.840759Z",
        "url": "https://files.pythonhosted.org/packages/9b/9f/757253b24a0c518bb689034322a4fa615859342d27e5f2c2d350d25d44c8/nf-core-2.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "695d81cb55dfe8de34a019fdc3602317df1a66697db8fa0b24e0edd00f70c907",
          "md5": "1d1834d0f1e1d41561dd8d5f7a2e34f3",
          "sha256": "d44134a60a36618e0d48bbb6a1dde2bae7df81d1fb950683b4ec3f9095ae7fb8"
        },
        "downloads": -1,
        "filename": "nf_core-2.3.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1d1834d0f1e1d41561dd8d5f7a2e34f3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 2381415,
        "upload_time": "2022-03-24T11:25:55",
        "upload_time_iso_8601": "2022-03-24T11:25:55.224535Z",
        "url": "https://files.pythonhosted.org/packages/69/5d/81cb55dfe8de34a019fdc3602317df1a66697db8fa0b24e0edd00f70c907/nf_core-2.3.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e2e92b0ff91b8f7829715934eb884be24467f9983417b3411c2be35c68a949fc",
          "md5": "26c1d64a9fc4059d05641db101d2bd7a",
          "sha256": "7083d8a33a2c1a7b1fe9c13915e78a7a1577c9144fac6876638c24854d384d73"
        },
        "downloads": -1,
        "filename": "nf-core-2.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "26c1d64a9fc4059d05641db101d2bd7a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2355066,
        "upload_time": "2022-03-24T11:25:57",
        "upload_time_iso_8601": "2022-03-24T11:25:57.407104Z",
        "url": "https://files.pythonhosted.org/packages/e2/e9/2b0ff91b8f7829715934eb884be24467f9983417b3411c2be35c68a949fc/nf-core-2.3.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f70e09b5b8a073e32d9385f9ef9586e5806ecfdbddb549655f3ca0e17b4d24e8",
          "md5": "9b4cebcd2e8edcefc9583906aa2c7c9f",
          "sha256": "cc1f41485e640d079db6937dfbaceb90716c78a82d281a0b7557e02076ee89d5"
        },
        "downloads": -1,
        "filename": "nf_core-2.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9b4cebcd2e8edcefc9583906aa2c7c9f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 2391184,
        "upload_time": "2022-05-16T10:16:02",
        "upload_time_iso_8601": "2022-05-16T10:16:02.334907Z",
        "url": "https://files.pythonhosted.org/packages/f7/0e/09b5b8a073e32d9385f9ef9586e5806ecfdbddb549655f3ca0e17b4d24e8/nf_core-2.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "46f94f6ec175fc58873cedc53d9d79904f99bdc8a01b2dbe80f84809635e869a",
          "md5": "59dd7ac81d443f7f5e69b5d1b3e57ede",
          "sha256": "c028977aac26942966a0cece568c71f4b69fead86306f79dfdd1e0ea74db6c27"
        },
        "downloads": -1,
        "filename": "nf-core-2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "59dd7ac81d443f7f5e69b5d1b3e57ede",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2366219,
        "upload_time": "2022-05-16T10:16:05",
        "upload_time_iso_8601": "2022-05-16T10:16:05.124271Z",
        "url": "https://files.pythonhosted.org/packages/46/f9/4f6ec175fc58873cedc53d9d79904f99bdc8a01b2dbe80f84809635e869a/nf-core-2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d4207ffbd0ac24d3b075f69df16b0839f535c0e2e688a92b5e6aecfec25aa42a",
          "md5": "19bfd969d5667136b1882655d15aeb8b",
          "sha256": "8c89822c4fc41605967278d6cbc1b12ecd483b0be559a9ab35d42fe83c997d96"
        },
        "downloads": -1,
        "filename": "nf_core-2.4.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "19bfd969d5667136b1882655d15aeb8b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 2391368,
        "upload_time": "2022-05-16T17:49:23",
        "upload_time_iso_8601": "2022-05-16T17:49:23.724066Z",
        "url": "https://files.pythonhosted.org/packages/d4/20/7ffbd0ac24d3b075f69df16b0839f535c0e2e688a92b5e6aecfec25aa42a/nf_core-2.4.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "74b59f205225c9cc16e5a27b68c8167a97c9624a5616eba68a5d45d37483ae3b",
          "md5": "b4c37c6bd1c49f7c058e773595062b9d",
          "sha256": "ededeb6fbace6fc6e2910c382fd079eb464bb03515d81536dc8dd75cee7ea5e0"
        },
        "downloads": -1,
        "filename": "nf-core-2.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b4c37c6bd1c49f7c058e773595062b9d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2366424,
        "upload_time": "2022-05-16T17:49:25",
        "upload_time_iso_8601": "2022-05-16T17:49:25.908421Z",
        "url": "https://files.pythonhosted.org/packages/74/b5/9f205225c9cc16e5a27b68c8167a97c9624a5616eba68a5d45d37483ae3b/nf-core-2.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "23b24050b180f90be92443f247bf1f77a15e0831fd945973126d95c97786911e",
          "md5": "a670a1374c164d9c2802bdb6a71a6776",
          "sha256": "538e152f18a8b9a5ee3acdfcc0b3a400c613d8a5d3a5a7aeac76879a6dfa384d"
        },
        "downloads": -1,
        "filename": "nf_core-2.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a670a1374c164d9c2802bdb6a71a6776",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 2420342,
        "upload_time": "2022-08-30T13:30:39",
        "upload_time_iso_8601": "2022-08-30T13:30:39.276842Z",
        "url": "https://files.pythonhosted.org/packages/23/b2/4050b180f90be92443f247bf1f77a15e0831fd945973126d95c97786911e/nf_core-2.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "391b4ef8a374b7bc30bea0eb82c1c854c68e52aabd1f0be3bf5669135d55374b",
          "md5": "73bd7c1ae921fbb40fb3ecaf4586f576",
          "sha256": "cdcf5c95e50dfcba5cec531c83109bc6ba38c9f0ff82a0f561146f468b65c147"
        },
        "downloads": -1,
        "filename": "nf-core-2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "73bd7c1ae921fbb40fb3ecaf4586f576",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2378156,
        "upload_time": "2022-08-30T13:30:41",
        "upload_time_iso_8601": "2022-08-30T13:30:41.615240Z",
        "url": "https://files.pythonhosted.org/packages/39/1b/4ef8a374b7bc30bea0eb82c1c854c68e52aabd1f0be3bf5669135d55374b/nf-core-2.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6b1bd2a00234c66b01c84d4ea597a96aaaaff42484dc3c6bf0de3e8c178eb811",
          "md5": "d04aaea828955eacf6a36cb9099dd143",
          "sha256": "a6195e9a6df4ab28dbc7e2c5c26581543072c546f5895602f50e5c775aaa854f"
        },
        "downloads": -1,
        "filename": "nf_core-2.5.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d04aaea828955eacf6a36cb9099dd143",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 2420894,
        "upload_time": "2022-09-01T13:21:47",
        "upload_time_iso_8601": "2022-09-01T13:21:47.930544Z",
        "url": "https://files.pythonhosted.org/packages/6b/1b/d2a00234c66b01c84d4ea597a96aaaaff42484dc3c6bf0de3e8c178eb811/nf_core-2.5.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "927ea8ef4dc07da30c0ade8f1e41ce1b12a507388deafa85338b47cf295f147a",
          "md5": "578a13cc0af17e27a3f92b0898e103c8",
          "sha256": "0303f6e3810ba1bc6ac843566ee9dea6b5edbf3527437dec5854b8c437456a4f"
        },
        "downloads": -1,
        "filename": "nf-core-2.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "578a13cc0af17e27a3f92b0898e103c8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2378459,
        "upload_time": "2022-09-01T13:21:50",
        "upload_time_iso_8601": "2022-09-01T13:21:50.316169Z",
        "url": "https://files.pythonhosted.org/packages/92/7e/a8ef4dc07da30c0ade8f1e41ce1b12a507388deafa85338b47cf295f147a/nf-core-2.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "41b5d5d2e2091738ae5ecefab280cc91404db3344d520e1931e553feb33824f0",
          "md5": "e7efb7a8c1ade14c3d17c29cc198c4e3",
          "sha256": "8d2ea545a960459dfaf08bfee0a2f3c109fbb8e391c3abca4ad644b4bd38a866"
        },
        "downloads": -1,
        "filename": "nf_core-2.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e7efb7a8c1ade14c3d17c29cc198c4e3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 2429644,
        "upload_time": "2022-10-04T21:52:28",
        "upload_time_iso_8601": "2022-10-04T21:52:28.239072Z",
        "url": "https://files.pythonhosted.org/packages/41/b5/d5d2e2091738ae5ecefab280cc91404db3344d520e1931e553feb33824f0/nf_core-2.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2a0dd2f556a8dc1d88220b76728ee72f1699a28c37542de539925faff3cc86a9",
          "md5": "3b546c07d9646ac9a7bbf2200fa3b3b7",
          "sha256": "47d4df906a60006249284bbf0bb84cdec48303a699c7c0d0a26f404a50e0811a"
        },
        "downloads": -1,
        "filename": "nf-core-2.6.tar.gz",
        "has_sig": false,
        "md5_digest": "3b546c07d9646ac9a7bbf2200fa3b3b7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2384440,
        "upload_time": "2022-10-04T21:52:30",
        "upload_time_iso_8601": "2022-10-04T21:52:30.551518Z",
        "url": "https://files.pythonhosted.org/packages/2a/0d/d2f556a8dc1d88220b76728ee72f1699a28c37542de539925faff3cc86a9/nf-core-2.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f38084018a55967e1ab1fc8dd9788a90c3f29490d7f0a27ecae42eb4b07d3e6d",
          "md5": "19acf2d7ca87d3b22d520d1d158f8ed5",
          "sha256": "7a0a16f00727aad114cf6f4c502b42ccfc248cb5db322d0bf3b2df10f0d4fe11"
        },
        "downloads": -1,
        "filename": "nf_core-2.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "19acf2d7ca87d3b22d520d1d158f8ed5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <4",
        "size": 2476023,
        "upload_time": "2022-12-08T12:00:21",
        "upload_time_iso_8601": "2022-12-08T12:00:21.358396Z",
        "url": "https://files.pythonhosted.org/packages/f3/80/84018a55967e1ab1fc8dd9788a90c3f29490d7f0a27ecae42eb4b07d3e6d/nf_core-2.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "438ab93769ac64df947370175b26c8ee644f631d4331ff9502018a2c2c3af874",
          "md5": "7aaf2d06d97f76607a817e7f8370be8e",
          "sha256": "ed06c51d9296af4c9c8489615eb7ed685ae98ec65ee73ad27dbd9ddd1cfd0ab3"
        },
        "downloads": -1,
        "filename": "nf-core-2.7.tar.gz",
        "has_sig": false,
        "md5_digest": "7aaf2d06d97f76607a817e7f8370be8e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 2426747,
        "upload_time": "2022-12-08T12:00:24",
        "upload_time_iso_8601": "2022-12-08T12:00:24.238012Z",
        "url": "https://files.pythonhosted.org/packages/43/8a/b93769ac64df947370175b26c8ee644f631d4331ff9502018a2c2c3af874/nf-core-2.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.7.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18ad817610e6e9ae926e7d0497f2842321a2433aa1edb2a736b6f5936ed50147",
          "md5": "5c4310c946797400dbefc01abf3374c7",
          "sha256": "73f3d970ea6e30d34983833be6ae1a01f9bda0c4ca2484d97c98bea207be5615"
        },
        "downloads": -1,
        "filename": "nf_core-2.7.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5c4310c946797400dbefc01abf3374c7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <4",
        "size": 2476050,
        "upload_time": "2022-12-08T13:09:25",
        "upload_time_iso_8601": "2022-12-08T13:09:25.173924Z",
        "url": "https://files.pythonhosted.org/packages/18/ad/817610e6e9ae926e7d0497f2842321a2433aa1edb2a736b6f5936ed50147/nf_core-2.7.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d5dbbba3427a55bf4a6b85f9ca4e6cf2334eb8769520266ee829469b03718311",
          "md5": "eeee652ad221bcdf6ef8350c8cea8784",
          "sha256": "90de62390314ef3141cee700667f017aa65c0346e40704a0f70d0662abcfb0db"
        },
        "downloads": -1,
        "filename": "nf-core-2.7.1.tar.gz",
        "has_sig": false,
        "md5_digest": "eeee652ad221bcdf6ef8350c8cea8784",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 2426726,
        "upload_time": "2022-12-08T13:09:28",
        "upload_time_iso_8601": "2022-12-08T13:09:28.120798Z",
        "url": "https://files.pythonhosted.org/packages/d5/db/bba3427a55bf4a6b85f9ca4e6cf2334eb8769520266ee829469b03718311/nf-core-2.7.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.7.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "06cc1a99baff452cabb5fa800f8d2bebbfa07644583e9f23aafa7d0a49cdb0ad",
          "md5": "1d11c9cce9d904aa4f01fe3c66ee7e9c",
          "sha256": "ad3b7734717db59fe28ac8c275e494666cad0d9beb7d260654960ba1dd3341a9"
        },
        "downloads": -1,
        "filename": "nf_core-2.7.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1d11c9cce9d904aa4f01fe3c66ee7e9c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <4",
        "size": 2476849,
        "upload_time": "2022-12-19T12:04:21",
        "upload_time_iso_8601": "2022-12-19T12:04:21.056184Z",
        "url": "https://files.pythonhosted.org/packages/06/cc/1a99baff452cabb5fa800f8d2bebbfa07644583e9f23aafa7d0a49cdb0ad/nf_core-2.7.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "21af69f17ae64836ededc4e43cc9e352df2c854a4c1b7579d31dda725e1cb70c",
          "md5": "3e917b2bb3c0c7a6ff2e77707b6119f0",
          "sha256": "585be3908b9b93ee9263b99dd779818d48d51f6e7f44a42aa79e626617e7af48"
        },
        "downloads": -1,
        "filename": "nf-core-2.7.2.tar.gz",
        "has_sig": false,
        "md5_digest": "3e917b2bb3c0c7a6ff2e77707b6119f0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 2427666,
        "upload_time": "2022-12-19T12:04:23",
        "upload_time_iso_8601": "2022-12-19T12:04:23.269188Z",
        "url": "https://files.pythonhosted.org/packages/21/af/69f17ae64836ededc4e43cc9e352df2c854a4c1b7579d31dda725e1cb70c/nf-core-2.7.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "06cc1a99baff452cabb5fa800f8d2bebbfa07644583e9f23aafa7d0a49cdb0ad",
        "md5": "1d11c9cce9d904aa4f01fe3c66ee7e9c",
        "sha256": "ad3b7734717db59fe28ac8c275e494666cad0d9beb7d260654960ba1dd3341a9"
      },
      "downloads": -1,
      "filename": "nf_core-2.7.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1d11c9cce9d904aa4f01fe3c66ee7e9c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7, <4",
      "size": 2476849,
      "upload_time": "2022-12-19T12:04:21",
      "upload_time_iso_8601": "2022-12-19T12:04:21.056184Z",
      "url": "https://files.pythonhosted.org/packages/06/cc/1a99baff452cabb5fa800f8d2bebbfa07644583e9f23aafa7d0a49cdb0ad/nf_core-2.7.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "21af69f17ae64836ededc4e43cc9e352df2c854a4c1b7579d31dda725e1cb70c",
        "md5": "3e917b2bb3c0c7a6ff2e77707b6119f0",
        "sha256": "585be3908b9b93ee9263b99dd779818d48d51f6e7f44a42aa79e626617e7af48"
      },
      "downloads": -1,
      "filename": "nf-core-2.7.2.tar.gz",
      "has_sig": false,
      "md5_digest": "3e917b2bb3c0c7a6ff2e77707b6119f0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7, <4",
      "size": 2427666,
      "upload_time": "2022-12-19T12:04:23",
      "upload_time_iso_8601": "2022-12-19T12:04:23.269188Z",
      "url": "https://files.pythonhosted.org/packages/21/af/69f17ae64836ededc4e43cc9e352df2c854a4c1b7579d31dda725e1cb70c/nf-core-2.7.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}