{
  "info": {
    "author": "Prefect Technologies",
    "author_email": "help@prefect.io",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# prefect-monte-carlo\n\n<p align=\"center\">\n    <a href=\"https://pypi.python.org/pypi/prefect-monte-carlo/\" alt=\"PyPI version\">\n        <img alt=\"PyPI\" src=\"https://img.shields.io/pypi/v/prefect-monte-carlo?color=0052FF&labelColor=090422\"></a>\n    <a href=\"https://github.com/PrefectHQ/prefect-monte-carlo/\" alt=\"Stars\">\n        <img src=\"https://img.shields.io/github/stars/PrefectHQ/prefect-monte-carlo?color=0052FF&labelColor=090422\" /></a>\n    <a href=\"https://pepy.tech/badge/prefect-monte-carlo/\" alt=\"Downloads\">\n        <img src=\"https://img.shields.io/pypi/dm/prefect-monte-carlo?color=0052FF&labelColor=090422\" /></a>\n    <a href=\"https://github.com/PrefectHQ/prefect-monte-carlo/pulse\" alt=\"Activity\">\n        <img src=\"https://img.shields.io/github/commit-activity/m/PrefectHQ/prefect-monte-carlo?color=0052FF&labelColor=090422\" /></a>\n    <br>\n    <a href=\"https://prefect-community.slack.com\" alt=\"Slack\">\n        <img src=\"https://img.shields.io/badge/slack-join_community-red.svg?color=0052FF&labelColor=090422&logo=slack\" /></a>\n    <a href=\"https://discourse.prefect.io/\" alt=\"Discourse\">\n        <img src=\"https://img.shields.io/badge/discourse-browse_forum-red.svg?color=0052FF&labelColor=090422&logo=discourse\" /></a>\n</p>\n\n## Welcome!\n\nA collection of Prefect tasks and flows to interact with Monte Carlo from workflows.\n\n## Getting Started\n\n### Python setup\n\nRequires an installation of Python 3.7+.\n\nWe recommend using a Python virtual environment manager such as pipenv, conda or virtualenv.\n\nThese tasks are designed to work with Prefect 2.0. For more information about how to use Prefect, please refer to the [Prefect documentation](https://orion-docs.prefect.io/).\n\n### Installation\n\nInstall `prefect-monte-carlo` with `pip`:\n\n```bash\npip install prefect-monte-carlo\n```\n\nThen, register this collection's blocks to [view them on Prefect Cloud](https://orion-docs.prefect.io/ui/blocks/):\n\n```bash\nprefect block register -m prefect_monte_carlo\n```\n\nNote, to use the `load` method on Blocks, you must already have a block document [saved through code](https://orion-docs.prefect.io/concepts/blocks/#saving-blocks) or [saved through the UI](https://orion-docs.prefect.io/ui/blocks/).\n\n### Write and run a flow\n#### Execute a query against the Monte Carlo GraphQL API\n```python\nfrom prefect import flow\nfrom prefect_monte_carlo import execute_graphql_operation\nfrom prefect_monte_carlo.credentials import MonteCarloCredentials\n\n@flow\ndef example_execute_query():\n    monte_carlo_credentials = MonteCarloCredentials.load(\"my-mc-creds\")\n    result = execute_graphql_operation(\n        monte_carlo_credentials=monte_carlo_credentials,\n        operation=\"query getUser { getUser { email firstName lastName }}\",\n    )\n\nexample_execute_query()\n```\n#### Create or update Monte Carlo lineage\n```python\nfrom prefect import flow\nfrom prefect.context import get_run_context\nfrom prefect_monte_carlo.credentials import MonteCarloCredentials\nfrom prefect_monte_carlo.lineage import create_or_update_lineage, MonteCarloLineageNode\n\n@flow\ndef monte_carlo_orchestrator():\n    current_flow_run_name = get_run_context().flow_run.name\n\n    source = MonteCarloLineageNode(\n        node_name=\"source_dataset\",\n        object_id=\"source_dataset\",\n        object_type=\"table\",\n        resource_name=\"some_resource_name\",\n        tags=[{\"propertyName\": \"dataset_owner\", \"propertyValue\": \"owner_name\"}],\n    )\n\n    destination = MonteCarloLineageNode(\n        node_name=\"destination_dataset\",\n        object_id=\"destination_dataset\",\n        object_type=\"table\",\n        resource_name=\"some_resource_name\",\n        tags=[{\"propertyName\": \"dataset_owner\", \"propertyValue\": \"owner_name\"}],\n    )\n\n    # `create_or_update_lineage` is a flow, so this will be a subflow run\n    # `extra_tags` are added to both the `source` and `destination` nodes\n    create_or_update_lineage(\n        monte_carlo_credentials=MonteCarloCredentials.load(\"my-mc-creds)\n        source=source,\n        destination=destination,\n        expire_at=datetime.now() + timedelta(days=10),\n        extra_tags=[{\"propertyName\": \"flow_run_name\", \"propertyValue\": current_flow_run_name}]\n    )\n```\n\n\n#### Conditionally execute a flow based on a Monte Carlo circuit breaker rule\n```python\nfrom prefect import flow\nfrom prefect_monte_carlo.circuit_breakers import skip_if_circuit_breaker_flipped\nfrom prefect_monte_carlo.credentials import MonteCarloCredentials\n\n@flow\n@skip_if_circuit_breaker_flipped(\n    monte_carlo_credentials=MonteCarloCredentials.load(\"my-mc-creds\")\n    rule_uuid=\"7810b1ce-4dee-4f40-b14f-ced65c80aea9\",\n)\ndef conditional_flow():\n    logger = get_run_logger()\n    logger.info(\"If you see this, your circuit breaker rule was not breached!\")\n\nconditional_flow()\n```\n\n## Resources\n\nIf you encounter any bugs while using `prefect-monte-carlo`, feel free to open an issue in the [prefect-monte-carlo](https://github.com/PrefectHQ/prefect-monte-carlo) repository.\n\nIf you have any questions or issues while using `prefect-monte-carlo`, you can find help in either the [Prefect Discourse forum](https://discourse.prefect.io/) or the [Prefect Slack community](https://prefect.io/slack).\n\nFeel free to ⭐️ or watch [`prefect-monte-carlo`](https://github.com/PrefectHQ/prefect-monte-carlo) for updates too!\n\n## Development\n\nIf you'd like to install a version of `prefect-monte-carlo` for development, clone the repository and perform an editable install with `pip`:\n\n```bash\ngit clone https://github.com/PrefectHQ/prefect-monte-carlo.git\n\ncd prefect-monte-carlo/\n\npip install -e \".[dev]\"\n\n# Install linting pre-commit hooks\npre-commit install\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/PrefectHQ/prefect-monte-carlo",
    "keywords": "prefect",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "prefect-monte-carlo",
    "package_url": "https://pypi.org/project/prefect-monte-carlo/",
    "platform": null,
    "project_url": "https://pypi.org/project/prefect-monte-carlo/",
    "project_urls": {
      "Homepage": "https://github.com/PrefectHQ/prefect-monte-carlo"
    },
    "release_url": "https://pypi.org/project/prefect-monte-carlo/0.1.0/",
    "requires_dist": [
      "prefect (>=2.0.0)",
      "pycarlo",
      "pytest ; extra == 'dev'",
      "black ; extra == 'dev'",
      "flake8 ; extra == 'dev'",
      "mypy ; extra == 'dev'",
      "mkdocs ; extra == 'dev'",
      "mkdocs-material ; extra == 'dev'",
      "mkdocstrings[python] ; extra == 'dev'",
      "isort ; extra == 'dev'",
      "pre-commit ; extra == 'dev'",
      "pytest-asyncio ; extra == 'dev'",
      "mkdocs-gen-files ; extra == 'dev'",
      "interrogate ; extra == 'dev'",
      "coverage ; extra == 'dev'",
      "pillow ; extra == 'dev'",
      "mock ; (python_version < \"3.8\") and extra == 'dev'"
    ],
    "requires_python": ">=3.7",
    "summary": "Prefect integrations for interacting with Monte Carlo.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15417043,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e1b4694f2b902acf12935f7b4333d5692e868b2385170f0dec4648f3077ef659",
          "md5": "e2ba4fc80bcce4b8b612ea871f95eeba",
          "sha256": "39ea1342c19fb5787cc8db1ab16738d33432fb8760c0a42edbbc6851016ea289"
        },
        "downloads": -1,
        "filename": "prefect_monte_carlo-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e2ba4fc80bcce4b8b612ea871f95eeba",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 17244,
        "upload_time": "2022-10-14T22:05:52",
        "upload_time_iso_8601": "2022-10-14T22:05:52.329975Z",
        "url": "https://files.pythonhosted.org/packages/e1/b4/694f2b902acf12935f7b4333d5692e868b2385170f0dec4648f3077ef659/prefect_monte_carlo-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6ae0eda4f44cb35b3579f57d2897c893d96c20f4ecaeb345a9b3fc984517a448",
          "md5": "9c0d42a3273d3e2e173082215f8da0c9",
          "sha256": "31d78d049cb1e5d4368f1e419a8542d6ecf3d453be123c79d44fdc7eb0b9a4d6"
        },
        "downloads": -1,
        "filename": "prefect-monte-carlo-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9c0d42a3273d3e2e173082215f8da0c9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 32644,
        "upload_time": "2022-10-14T22:05:53",
        "upload_time_iso_8601": "2022-10-14T22:05:53.593791Z",
        "url": "https://files.pythonhosted.org/packages/6a/e0/eda4f44cb35b3579f57d2897c893d96c20f4ecaeb345a9b3fc984517a448/prefect-monte-carlo-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e1b4694f2b902acf12935f7b4333d5692e868b2385170f0dec4648f3077ef659",
        "md5": "e2ba4fc80bcce4b8b612ea871f95eeba",
        "sha256": "39ea1342c19fb5787cc8db1ab16738d33432fb8760c0a42edbbc6851016ea289"
      },
      "downloads": -1,
      "filename": "prefect_monte_carlo-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e2ba4fc80bcce4b8b612ea871f95eeba",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 17244,
      "upload_time": "2022-10-14T22:05:52",
      "upload_time_iso_8601": "2022-10-14T22:05:52.329975Z",
      "url": "https://files.pythonhosted.org/packages/e1/b4/694f2b902acf12935f7b4333d5692e868b2385170f0dec4648f3077ef659/prefect_monte_carlo-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6ae0eda4f44cb35b3579f57d2897c893d96c20f4ecaeb345a9b3fc984517a448",
        "md5": "9c0d42a3273d3e2e173082215f8da0c9",
        "sha256": "31d78d049cb1e5d4368f1e419a8542d6ecf3d453be123c79d44fdc7eb0b9a4d6"
      },
      "downloads": -1,
      "filename": "prefect-monte-carlo-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "9c0d42a3273d3e2e173082215f8da0c9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 32644,
      "upload_time": "2022-10-14T22:05:53",
      "upload_time_iso_8601": "2022-10-14T22:05:53.593791Z",
      "url": "https://files.pythonhosted.org/packages/6a/e0/eda4f44cb35b3579f57d2897c893d96c20f4ecaeb345a9b3fc984517a448/prefect-monte-carlo-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}