{
  "info": {
    "author": "Pavel Maksimov",
    "author_email": "vur21@ya.ru",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Python client for [API Yandex Direct](https://yandex.ru/dev/metrika/doc/api2/concept/about-docpage/)\n\n![Supported Python Versions](https://img.shields.io/static/v1?label=python&message=>=3.6&color=green)\n[![GitHub license](https://img.shields.io/badge/license-MIT-blue.svg)](https://raw.githubusercontent.com/vintasoftware/tapioca-wrapper/master/LICENSE)\n[![Downloads](https://pepy.tech/badge/tapi-yandex-direct)](https://pepy.tech/project/tapi-yandex-direct)\n<a href=\"https://github.com/psf/black\"><img alt=\"Code style: black\" src=\"https://img.shields.io/badge/code%20style-black-000000.svg\"></a>\n\n## Installation\n\nPrev version\n\n    pip install --upgrade tapi-yandex-direct==2020.12.15\n\nLast version. Has backward incompatible changes.\n\n    pip install --upgrade tapi-yandex-direct==2021.5.29\n\n## Examples\n\n[Ipython Notebook](https://github.com/pavelmaksimov/tapi-yandex-direct/blob/master/examples.ipynb)\n\n\n## Documentation\n[Справка](https://yandex.ru/dev/direct/) Api Яндекс Директ\n\n\n### Client params\n```python\nfrom tapi_yandex_direct import YandexDirect\n\nACCESS_TOKEN = \"{your_access_token}\"\n\nclient = YandexDirect(\n    # Required parameters:\n\n    access_token=ACCESS_TOKEN,\n    # If you are making inquiries from an agent account, you must be sure to specify the account login.\n    login=\"{login}\",\n\n    # Optional parameters:\n\n    # Enable sandbox.\n    is_sandbox=False,\n    # Repeat request when units run out\n    retry_if_not_enough_units=False,\n    # The language in which the data for directories and errors will be returned.\n    language=\"ru\",\n    # Repeat the request if the limits on the number of reports or requests are exceeded.\n    retry_if_exceeded_limit=True,\n    # Number of retries when server errors occur.\n    retries_if_server_error=5\n)\n```\n\n### Resource methods\n```python\nprint(dir(client))\n[\n    \"adextensions\",\n    \"adgroups\",\n    \"adimages\",\n    \"ads\",\n    \"agencyclients\",\n    \"audiencetargets\",\n    \"bidmodifiers\",\n    \"bids\",\n    \"businesses\",\n    \"campaigns\",\n    \"changes\",\n    \"clients\",\n    \"creatives\",\n    \"debugtoken\",\n    \"dictionaries\",\n    \"dynamicads\",\n    \"feeds\",\n    \"keywordbids\",\n    \"keywords\",\n    \"keywordsresearch\",\n    \"leads\",\n    \"negativekeywordsharedsets\",\n    \"reports\",\n    \"retargeting\",\n    \"sitelinks\",\n    \"smartadtargets\",\n    \"turbopages\",\n    \"vcards\",\n]\n```\nor look into [resource mapping](tapi_yandex_direct/resource_mapping.py)\n\n### Request\n\nAPI requests are made over HTTPS using the POST method.\nInput data structures are passed in the body of the request.\n\n```python\nimport datetime as dt\n\n# Get campaigns.\nbody = {\n    \"method\": \"get\",\n    \"params\": {\n        \"SelectionCriteria\": {},\n        \"FieldNames\": [\"Id\",\"Name\"],\n    },\n}\ncampaigns = client.campaigns().post(data=body)\nprint(campaigns)\n# <TapiClient object\n# {   'result': {   'Campaigns': [   {   'Id': 338157,\n#                                        'Name': 'Test API Sandbox campaign 1'},\n#                                    {   'Id': 338158,\n#                                        'Name': 'Test API Sandbox campaign 2'}],\n#                   'LimitedBy': 2}}>\n\n\n# Extract raw data.\ndata = campaigns.data\nassert isinstance(data, dict)\n\n\n# Create a campaign.\nbody = {\n    \"method\": \"add\",\n    \"params\": {\n        \"Campaigns\": [\n            {\n                \"Name\": \"MyCampaignTest\",\n                \"StartDate\": str(dt.datetime.now().date()),\n                \"TextCampaign\": {\n                    \"BiddingStrategy\": {\n                        \"Search\": {\n                            \"BiddingStrategyType\": \"HIGHEST_POSITION\"\n                        },\n                        \"Network\": {\n                            \"BiddingStrategyType\": \"SERVING_OFF\"\n                        }\n                    },\n                    \"Settings\": []\n                }\n            }\n        ]\n    }\n}\nresult = client.campaigns().post(data=body)\nprint(result)\n# <TapiClient object\n# {'result': {'AddResults': [{'Id': 417065}]}}>\n\n# Extract raw data.\ndata = campaigns.data\nassert isinstance(data, dict)\nprint(result)\n# {'result': {'AddResults': [{'Id': 417066}]}}\n```\n\n\n### Client methods\n\nResult extraction method.\n\n```python\nbody = {\n    \"method\": \"get\",\n    \"params\": {\n        \"SelectionCriteria\": {},\n        \"FieldNames\": [\"Id\",\"Name\"],\n    },\n}\ncampaigns = client.campaigns().post(data=body)\n\n# Request response.\nprint(campaigns.response)\nprint(campaigns.request_kwargs)\nprint(campaigns.status_code)\nprint(campaigns.data)\n```\n\n### .extract()\n\nResult extraction method.\n\n```python\nbody = {\n    \"method\": \"get\",\n    \"params\": {\n        \"SelectionCriteria\": {},\n        \"FieldNames\": [\"Id\",\"Name\"],\n    },\n}\ncampaigns = client.campaigns().post(data=body)\ncampaigns_list = campaigns().extract()\nassert isinstance(campaigns_list, list)\nprint(campaigns_list)\n# [{'Id': 338157, 'Name': 'Test API Sandbox campaign 1'},\n#  {'Id': 338158, 'Name': 'Test API Sandbox campaign 2'}]\n```\n\n\n### .items()\n\nIterating result items.\n\n```python\nbody = {\n    \"method\": \"get\",\n    \"params\": {\n        \"SelectionCriteria\": {},\n        \"FieldNames\": [\"Id\",\"Name\"],\n    },\n}\ncampaigns = client.campaigns().post(data=body)\n\nfor item in campaigns().items():\n    print(item)\n    # {'Id': 338157, 'Name': 'Test API Sandbox campaign 1'}\n    assert isinstance(item, dict)\n```\n\n\n### .pages()\n\nIterating to get all the data.\n\n```python\nbody = {\n    \"method\": \"get\",\n    \"params\": {\n        \"SelectionCriteria\": {},\n        \"FieldNames\": [\"Id\",\"Name\"],\n        \"Page\": {\"Limit\": 2}\n    },\n}\ncampaigns = client.campaigns().post(data=body)\n\n# Iterating requests data.\nfor page in campaigns().pages():\n    assert isinstance(page.data, list)\n    print(page.data)\n    # [{'Id': 338157, 'Name': 'Test API Sandbox campaign 1'},\n    #  {'Name': 'Test API Sandbox campaign 2', 'Id': 338158}]\n\n    # Iterating items of page data.\n    for item in page().items():\n        print(item)\n        # {'Id': 338157, 'Name': 'Test API Sandbox campaign 1'}\n        assert isinstance(item, dict)\n```\n\n\n### .iter_items()\n\nAfter each request, iterates over the items of the request data.\n\n```python\nbody = {\n    \"method\": \"get\",\n    \"params\": {\n        \"SelectionCriteria\": {},\n        \"FieldNames\": [\"Id\",\"Name\"],\n        \"Page\": {\"Limit\": 2}\n    },\n}\ncampaigns = client.campaigns().post(data=body)\n\n# Iterates through the elements of all data.\nfor item in campaigns().iter_items():\n    assert isinstance(item, dict)\n    print(item)\n\n# {'Name': 'MyCampaignTest', 'Id': 417065}\n# {'Name': 'MyCampaignTest', 'Id': 417066}\n# {'Id': 338157, 'Name': 'Test API Sandbox campaign 1'}\n# {'Name': 'Test API Sandbox campaign 2', 'Id': 338158}\n# {'Id': 338159, 'Name': 'Test API Sandbox campaign 3'}\n# {'Name': 'MyCampaignTest', 'Id': 415805}\n# {'Id': 416524, 'Name': 'MyCampaignTest'}\n# {'Id': 417056, 'Name': 'MyCampaignTest'}\n# {'Id': 417057, 'Name': 'MyCampaignTest'}\n# {'Id': 417058, 'Name': 'MyCampaignTest'}\n# {'Id': 417065, 'Name': 'MyCampaignTest'}\n# {'Name': 'MyCampaignTest', 'Id': 417066}\n```\n\n\n## Reports\n\n```python\nfrom tapi_yandex_direct import YandexDirect\n\nACCESS_TOKEN = \"{ваш токен доступа}\"\n\nclient = YandexDirect(\n    # Required parameters:\n\n    access_token=ACCESS_TOKEN,\n    # If you are making inquiries from an agent account, you must be sure to specify the account login.\n    login=\"{login}\",\n\n    # Optional parameters:\n\n    # Enable sandbox.\n    is_sandbox=False,\n    # Repeat request when units run out\n    retry_if_not_enough_units=False,\n    # The language in which the data for directories and errors will be returned.\n    language=\"ru\",\n    # Repeat the request if the limits on the number of reports or requests are exceeded.\n    retry_if_exceeded_limit=True,\n    # Number of retries when server errors occur.\n    retries_if_server_error=5,\n\n    # Report resource parameters:\n\n    # Report generation mode: online, offline or auto.\n    processing_mode=\"offline\",\n    # When requesting a report, it will wait until the report is prepared and download it.\n    wait_report=True,\n    # Monetary values in the report are returned in currency with an accuracy of two decimal places.\n    return_money_in_micros=False,\n    # Do not display a line with the report name and date range in the report.\n    skip_report_header=True,\n    # Do not display a line with field names in the report.\n    skip_column_header=False,\n    # Do not display a line with the number of statistics lines in the report.\n    skip_report_summary=True,\n)\n\nbody = {\n    \"params\": {\n        \"SelectionCriteria\": {},\n        \"FieldNames\": [\"Date\", \"CampaignId\", \"Clicks\", \"Cost\"],\n        \"OrderBy\": [{\n            \"Field\": \"Date\"\n        }],\n        \"ReportName\": \"Actual Data\",\n        \"ReportType\": \"CAMPAIGN_PERFORMANCE_REPORT\",\n        \"DateRangeType\": \"LAST_WEEK\",\n        \"Format\": \"TSV\",\n        \"IncludeVAT\": \"YES\",\n        \"IncludeDiscount\": \"YES\"\n    }\n}\nreport = client.reports().post(data=body)\nprint(report.data)\n# 'Date\\tCampaignId\\tClicks\\tCost\\n'\n# '2019-09-02\\t338151\\t12578\\t9210750000\\n'\n```\n\n\n### .columns\n\nExtract column names.\n```python\nreport = client.reports().post(data=body)\nprint(report.columns)\n# ['Date', 'CampaignId', 'Clicks', 'Cost']\n```\n\n\n### .to_lines()\n\n```python\nreport = client.reports().post(data=body)\nprint(report().to_lines())\n# list[str]\n# [..., '2019-09-02\\t338151\\t12578\\t9210750000']\n```\n\n\n### .to_values()\n\n```python\nreport = client.reports().post(data=body)\nprint(report().to_values())\n# list[list[str]]\n# [..., ['2019-09-02', '338151', '12578', '9210750000']]\n```\n\n\n### .to_dict()\n\n```python\nreport = client.reports().post(data=body)\nprint(report().to_dict())\n# list[dict]\n# [..., {'Date': '2019-09-02', 'CampaignId': '338151', 'Clicks': '12578', 'Cost': 9210750000'}]\n```\n\n\n### .to_columns()\n\n```python\nreport = client.reports().post(data=body)\nprint(report().to_columns())\n# list[list[str], list[str], list[str], list[str]]\n# [[..., '2019-09-02'], [..., '338151'], [..., '12578'], [..., '9210750000']]\n```\n\n\n## Features\n\nInformation about the resource.\n```python\nclient.campaigns().help()\n```\n\nOpen resource documentation\n```python\nclient.campaigns().open_docs()\n```\n\nSend a request in the browser.\n```python\nclient.campaigns().open_in_browser()\n```\n\n\n## Dependences\n- requests\n- [tapi_wrapper](https://github.com/pavelmaksimov/tapi-wrapper)\n\n\n## CHANGELOG\nv2021.5.29\n- Fix stub file (syntax highlighting)\n\n\nv2021.5.25\n- Add stub file (syntax highlighting)\n- Add methods 'iter_dicts', 'to_dicts'\n\n\n## Автор\nПавел Максимов\n\nСвязаться со мной можно в\n[Телеграм](https://t.me/pavel_maksimow)\nи в\n[Facebook](https://www.facebook.com/pavel.maksimow)\n\nУдачи тебе, друг! Поставь звездочку ;)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pavelmaksimov/tapi-yandex-direct",
    "keywords": "tapi,wrapper,yandex,metrika,api,direct,яндекс,директ,апи",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tapi-yandex-direct",
    "package_url": "https://pypi.org/project/tapi-yandex-direct/",
    "platform": "",
    "project_url": "https://pypi.org/project/tapi-yandex-direct/",
    "project_urls": {
      "Homepage": "https://github.com/pavelmaksimov/tapi-yandex-direct"
    },
    "release_url": "https://pypi.org/project/tapi-yandex-direct/2021.5.29/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Python client for API Yandex Direct",
    "version": "2021.5.29",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10501013,
  "releases": {
    "2019.12.16": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a22bf5699772282e57e2d04abbdb3f1d0b69c898e593702c5bf1e46bfd64501c",
          "md5": "0f2e78fc72046761c5f54abe8a181df8",
          "sha256": "8a4910a5230d376d06b566ffc374570ed1172b29aa38a97c1f54fdc271cad8dd"
        },
        "downloads": -1,
        "filename": "tapi-yandex-direct-2019.12.16.tar.gz",
        "has_sig": false,
        "md5_digest": "0f2e78fc72046761c5f54abe8a181df8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12608,
        "upload_time": "2019-12-16T13:53:36",
        "upload_time_iso_8601": "2019-12-16T13:53:36.193978Z",
        "url": "https://files.pythonhosted.org/packages/a2/2b/f5699772282e57e2d04abbdb3f1d0b69c898e593702c5bf1e46bfd64501c/tapi-yandex-direct-2019.12.16.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2020.12.14": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70198edbbde0feaea08c739f607546e54c2407dcb4001776b48fa1509ed9ffd0",
          "md5": "0dc6f96dd7c16188d4620f4dbe2338e9",
          "sha256": "93a62c143b7ac2ab24c55aa16f2a8f3a9f793259cf70a21c5c9ea15c0305be58"
        },
        "downloads": -1,
        "filename": "tapi-yandex-direct-2020.12.14.tar.gz",
        "has_sig": false,
        "md5_digest": "0dc6f96dd7c16188d4620f4dbe2338e9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12569,
        "upload_time": "2020-12-14T06:46:20",
        "upload_time_iso_8601": "2020-12-14T06:46:20.682877Z",
        "url": "https://files.pythonhosted.org/packages/70/19/8edbbde0feaea08c739f607546e54c2407dcb4001776b48fa1509ed9ffd0/tapi-yandex-direct-2020.12.14.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2020.12.15": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8f378a6b3bdbe4936ec15a8219c1b16886f28d67685d4c0493393c0e43437431",
          "md5": "0a2df4fb88b01c2cb150a4674f4fa236",
          "sha256": "69fc2eda013660a2c97c3b88d39eee9dc85ab78e3932a9eb80fa6dd4fcf5f2e5"
        },
        "downloads": -1,
        "filename": "tapi-yandex-direct-2020.12.15.tar.gz",
        "has_sig": false,
        "md5_digest": "0a2df4fb88b01c2cb150a4674f4fa236",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12573,
        "upload_time": "2020-12-15T09:59:52",
        "upload_time_iso_8601": "2020-12-15T09:59:52.776082Z",
        "url": "https://files.pythonhosted.org/packages/8f/37/8a6b3bdbe4936ec15a8219c1b16886f28d67685d4c0493393c0e43437431/tapi-yandex-direct-2020.12.15.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2021.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ab0262f1257e0f08063dcc6c48027621e7b87203710b3481075d899a6fbc1b51",
          "md5": "dd7d6090ee658b295d0ac0bc2fb1ede5",
          "sha256": "a80072574fa44880b00ce82d0870b4d0dd11079359f40cd1cc2c69b859c22fb4"
        },
        "downloads": -1,
        "filename": "tapi-yandex-direct-2021.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "dd7d6090ee658b295d0ac0bc2fb1ede5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13930,
        "upload_time": "2021-05-07T14:06:54",
        "upload_time_iso_8601": "2021-05-07T14:06:54.190940Z",
        "url": "https://files.pythonhosted.org/packages/ab/02/62f1257e0f08063dcc6c48027621e7b87203710b3481075d899a6fbc1b51/tapi-yandex-direct-2021.5.1.tar.gz",
        "yanked": true,
        "yanked_reason": null
      }
    ],
    "2021.5.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f0c4cd316addb834b8d0acacf58dd676e7bef3c24d0c7025efe898383e7ee911",
          "md5": "b8693c0f98897d6dae98a1ae943f628a",
          "sha256": "4d958359fd21975e281457ba5aad299c451ececacf97795933b1a10da434a018"
        },
        "downloads": -1,
        "filename": "tapi-yandex-direct-2021.5.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b8693c0f98897d6dae98a1ae943f628a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14056,
        "upload_time": "2021-05-09T10:48:48",
        "upload_time_iso_8601": "2021-05-09T10:48:48.105290Z",
        "url": "https://files.pythonhosted.org/packages/f0/c4/cd316addb834b8d0acacf58dd676e7bef3c24d0c7025efe898383e7ee911/tapi-yandex-direct-2021.5.2.tar.gz",
        "yanked": true,
        "yanked_reason": null
      }
    ],
    "2021.5.25": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "96c4eee592f1009e69704378b6e6acf5cf5f368cca8d23500e5f48cfafe9fd0b",
          "md5": "1d1cf3b637c18523b1acaa9649111bd5",
          "sha256": "e6fe109093270c181fa7c069402d2ba6bfa48b158b7b81b39e625a6df9192369"
        },
        "downloads": -1,
        "filename": "tapi-yandex-direct-2021.5.25.tar.gz",
        "has_sig": false,
        "md5_digest": "1d1cf3b637c18523b1acaa9649111bd5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12798,
        "upload_time": "2021-05-26T17:15:56",
        "upload_time_iso_8601": "2021-05-26T17:15:56.029489Z",
        "url": "https://files.pythonhosted.org/packages/96/c4/eee592f1009e69704378b6e6acf5cf5f368cca8d23500e5f48cfafe9fd0b/tapi-yandex-direct-2021.5.25.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2021.5.28": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "42ef4df9cbe3751ee220e0791b8b6466e17106cfd835a147be166711433f9b1d",
          "md5": "0ceb9ffc7eaf50a5cbd5f5551a27f376",
          "sha256": "ec78e01a4ca6f80383bccab22e0d5ba439871f5e4f8222061fab4b6ae4df051f"
        },
        "downloads": -1,
        "filename": "tapi-yandex-direct-2021.5.28.tar.gz",
        "has_sig": false,
        "md5_digest": "0ceb9ffc7eaf50a5cbd5f5551a27f376",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12943,
        "upload_time": "2021-05-28T06:39:47",
        "upload_time_iso_8601": "2021-05-28T06:39:47.612742Z",
        "url": "https://files.pythonhosted.org/packages/42/ef/4df9cbe3751ee220e0791b8b6466e17106cfd835a147be166711433f9b1d/tapi-yandex-direct-2021.5.28.tar.gz",
        "yanked": true,
        "yanked_reason": null
      }
    ],
    "2021.5.29": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8181cea95b253b86c244c06f9ae91d522f2a65e20937a92ce3f527f77c888e3f",
          "md5": "11af4248c32a5d813dfa94e6ded4be62",
          "sha256": "abb45b148afe1c0cf66c4b9516bb67765b7969f41a440d39d710f21266657d80"
        },
        "downloads": -1,
        "filename": "tapi-yandex-direct-2021.5.29.tar.gz",
        "has_sig": false,
        "md5_digest": "11af4248c32a5d813dfa94e6ded4be62",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13989,
        "upload_time": "2021-05-28T16:28:45",
        "upload_time_iso_8601": "2021-05-28T16:28:45.740516Z",
        "url": "https://files.pythonhosted.org/packages/81/81/cea95b253b86c244c06f9ae91d522f2a65e20937a92ce3f527f77c888e3f/tapi-yandex-direct-2021.5.29.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2021.5.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7287ca9b7be2e75883ffa27ec5f6384bd08d976d5b18f330d5ff3046350b767b",
          "md5": "86a3e1eac76a5e3a1917ce26406a9753",
          "sha256": "a85b40e80765602662c897c54825000d8da2f782f6307dba78ecf2237a6b9bb6"
        },
        "downloads": -1,
        "filename": "tapi-yandex-direct-2021.5.3.tar.gz",
        "has_sig": false,
        "md5_digest": "86a3e1eac76a5e3a1917ce26406a9753",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14049,
        "upload_time": "2021-05-11T14:50:24",
        "upload_time_iso_8601": "2021-05-11T14:50:24.782593Z",
        "url": "https://files.pythonhosted.org/packages/72/87/ca9b7be2e75883ffa27ec5f6384bd08d976d5b18f330d5ff3046350b767b/tapi-yandex-direct-2021.5.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8181cea95b253b86c244c06f9ae91d522f2a65e20937a92ce3f527f77c888e3f",
        "md5": "11af4248c32a5d813dfa94e6ded4be62",
        "sha256": "abb45b148afe1c0cf66c4b9516bb67765b7969f41a440d39d710f21266657d80"
      },
      "downloads": -1,
      "filename": "tapi-yandex-direct-2021.5.29.tar.gz",
      "has_sig": false,
      "md5_digest": "11af4248c32a5d813dfa94e6ded4be62",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13989,
      "upload_time": "2021-05-28T16:28:45",
      "upload_time_iso_8601": "2021-05-28T16:28:45.740516Z",
      "url": "https://files.pythonhosted.org/packages/81/81/cea95b253b86c244c06f9ae91d522f2a65e20937a92ce3f527f77c888e3f/tapi-yandex-direct-2021.5.29.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}