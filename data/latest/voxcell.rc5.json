{
  "info": {
    "author": "Blue Brain Project, EPFL",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "Overview\n========\n\nThis is a library to build circuits and atlases. It contains tools to handle\n\n* \"traits fields\" and collections and the logic to assign them.\n* volumetric data within NRRD files\n* Cell collection access / writer.\n* to build, transform and handle fields of vectors and orientations.\n* querying `Region hierarchy tree`, such as the one available from the `Allen Institute for Brain Science (AIBS)`_: `Mouse Brain Atlas Ontology's StructureGraph`_ (aka 1.json).\n\nInstallation\n============\n\nInstall from PyPI:\n\n.. code-block:: bash\n\n    pip install voxcell\n\nOr an editable install:\n\n.. code-block:: bash\n\n    git clone https://github.com/BlueBrain/voxcell\n    cd voxcell\n    pip install -e .\n\nExamples\n========\n\nTo use the following examples, one must download an NRRD file and the Ontology Structure:\n\n.. code-block:: bash\n\n    curl -o brain_regions.nrrd http://download.alleninstitute.org/informatics-archive/current-release/mouse_ccf/annotation/ccf_2017/annotation_100.nrrd\n    curl -o hierarchy.json http://api.brain-map.org/api/v2/structure_graph_download/1.json\n\nOne can open NRRD files, and perform operations on them:\n\n.. code-block:: python\n\n    import voxcell\n    voxels = voxcell.VoxelData.load_nrrd('brain_regions.nrrd')\n    print(voxels.voxel_dimensions)  # prints array([100., 100., 100.], dtype=float32)\n\nOne can also use the `Atlas` object to load at both the atlas and the hierarchy:\n\n.. code-block:: python\n\n    import numpy as np\n    from voxcell.nexus.voxelbrain import Atlas\n    atlas = Atlas.open('.')\n    brain_regions = atlas.load_data('brain_regions')\n    rm = atlas.load_region_map()\n    # count the number of voxels in the VIS region, and all its descendents\n    ids = rm.find('VIS', 'acronym', with_descendants=True)\n    np.count_nonzero(np.isin(brain_regions.raw, list(ids)))\n\nCitation\n========\n\nWhen you use this software, we kindly ask you to cite the following DOI:\n\n.. image:: https://zenodo.org/badge/451807050.svg\n   :target: https://zenodo.org/badge/latestdoi/451807050\n   \n\nAcknowledgements\n================\n\nThe development of this software was supported by funding to the Blue Brain Project, a research center of the École polytechnique fédérale de Lausanne (EPFL), from the Swiss government’s ETH Board of the Swiss Federal Institutes of Technology.\n\nFor license and authors, see LICENSE.txt and AUTHORS.txt respectively.\n\nCopyright © 2022 Blue Brain Project/EPFL\n\n.. _`Allen Institute for Brain Science (AIBS)`: https://alleninstitute.org/what-we-do/brain-science/\n.. _`Mouse Brain Atlas Ontology's StructureGraph`: http://api.brain-map.org/api/v2/structure_graph_download/1.json",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "https://github.com/BlueBrain/voxcell",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/BlueBrain/voxcell",
    "keywords": "",
    "license": "Apache-2",
    "maintainer": "",
    "maintainer_email": "",
    "name": "voxcell",
    "package_url": "https://pypi.org/project/voxcell/",
    "platform": null,
    "project_url": "https://pypi.org/project/voxcell/",
    "project_urls": {
      "Download": "https://github.com/BlueBrain/voxcell",
      "Homepage": "https://github.com/BlueBrain/voxcell"
    },
    "release_url": "https://pypi.org/project/voxcell/3.1.4/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Voxcell is a small library to handle probability distributions that have a spatial component and to use them to build collection of cells in space.",
    "version": "3.1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17378894,
  "releases": {
    "3.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "28ffe9a3bf7a5819d36d8f9abe3a61d41b799f61eebcf8d1ee2f2ee6614b9636",
          "md5": "70e77bec1bc3e663d13fc95dd8bcd741",
          "sha256": "7fa79dcd3f122529bdf029a2af879d810d084e0c04449e765fa1399dffab495f"
        },
        "downloads": -1,
        "filename": "voxcell-3.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "70e77bec1bc3e663d13fc95dd8bcd741",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 217836,
        "upload_time": "2022-03-08T12:43:48",
        "upload_time_iso_8601": "2022-03-08T12:43:48.321311Z",
        "url": "https://files.pythonhosted.org/packages/28/ff/e9a3bf7a5819d36d8f9abe3a61d41b799f61eebcf8d1ee2f2ee6614b9636/voxcell-3.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.1.1.dev1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9c8becbf1ac6838f443080213bf677d64d5f29f99e2a22c4578c413996f630c1",
          "md5": "a37979c63aad3699674210918036e262",
          "sha256": "1e1dd0f808c52397a4db6c5b697ddab94e6f3790f2ce0365ced0be651cb3c6c7"
        },
        "downloads": -1,
        "filename": "voxcell-3.1.1.dev1.tar.gz",
        "has_sig": false,
        "md5_digest": "a37979c63aad3699674210918036e262",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 215622,
        "upload_time": "2022-03-01T08:41:02",
        "upload_time_iso_8601": "2022-03-01T08:41:02.753671Z",
        "url": "https://files.pythonhosted.org/packages/9c/8b/ecbf1ac6838f443080213bf677d64d5f29f99e2a22c4578c413996f630c1/voxcell-3.1.1.dev1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "726e55df188475bc8012dce7460b4fcb50752ffbc3e68cbc7fec0c7df1f5c5a4",
          "md5": "3e68cf0aabeeafc320e275cee1a29c53",
          "sha256": "d3d4dc3ebc95662502db2fa7fab33bbc84eca323f5ce1104b9668f7ae0d29eaa"
        },
        "downloads": -1,
        "filename": "voxcell-3.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "3e68cf0aabeeafc320e275cee1a29c53",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 218097,
        "upload_time": "2022-05-11T06:50:12",
        "upload_time_iso_8601": "2022-05-11T06:50:12.107494Z",
        "url": "https://files.pythonhosted.org/packages/72/6e/55df188475bc8012dce7460b4fcb50752ffbc3e68cbc7fec0c7df1f5c5a4/voxcell-3.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f8cd5cb52bf8e4860f9cd9f04637806fe9ab1f0e372aa23974fdee0a603a40e8",
          "md5": "ab7b8a67ef79f47313b881d0cb70f1db",
          "sha256": "1e5453777dd9df5e424f05ba71ed470e66489bf0902ecb997e9a5d825cd21a46"
        },
        "downloads": -1,
        "filename": "voxcell-3.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "ab7b8a67ef79f47313b881d0cb70f1db",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 222685,
        "upload_time": "2022-08-18T12:20:34",
        "upload_time_iso_8601": "2022-08-18T12:20:34.298659Z",
        "url": "https://files.pythonhosted.org/packages/f8/cd/5cb52bf8e4860f9cd9f04637806fe9ab1f0e372aa23974fdee0a603a40e8/voxcell-3.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ff7972eddca07f20dac8dbf648ff515a6c0d885f99997b402ef23801b8c9501c",
          "md5": "c05d37db1bd96c04339da3ae285caf96",
          "sha256": "f9a2fa79a4652b9c652b5f7dd7394f257236a2d62a89f2039a17d695c84187b2"
        },
        "downloads": -1,
        "filename": "voxcell-3.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "c05d37db1bd96c04339da3ae285caf96",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 223091,
        "upload_time": "2023-03-21T12:44:25",
        "upload_time_iso_8601": "2023-03-21T12:44:25.970702Z",
        "url": "https://files.pythonhosted.org/packages/ff/79/72eddca07f20dac8dbf648ff515a6c0d885f99997b402ef23801b8c9501c/voxcell-3.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ff7972eddca07f20dac8dbf648ff515a6c0d885f99997b402ef23801b8c9501c",
        "md5": "c05d37db1bd96c04339da3ae285caf96",
        "sha256": "f9a2fa79a4652b9c652b5f7dd7394f257236a2d62a89f2039a17d695c84187b2"
      },
      "downloads": -1,
      "filename": "voxcell-3.1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "c05d37db1bd96c04339da3ae285caf96",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 223091,
      "upload_time": "2023-03-21T12:44:25",
      "upload_time_iso_8601": "2023-03-21T12:44:25.970702Z",
      "url": "https://files.pythonhosted.org/packages/ff/79/72eddca07f20dac8dbf648ff515a6c0d885f99997b402ef23801b8c9501c/voxcell-3.1.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}