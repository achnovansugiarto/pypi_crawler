{
  "info": {
    "author": "Andii Magalich",
    "author_email": "andrew.magalich@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Samplicity v0.5\n===============\n\nSamplicity is a command line sample convertion tool created to transform\n.SFZ sample packs to .XI (Fasttracker 2 eXtended Instrument) format,\nsupported by a number of music creation software. Designed to deal with\nSunVox music tracker.\n\nThanks to `Alex Zolotov <http://www.warmplace.ru/>`__ for help and\nmaterials.\n\n**If you encounter any problems — contact me here, on\n`SoundCloud <http://soundcloud.com/convergent>`__ or just email me\n``andrew.magalich@gmail.com``**\n\nChangelog\n---------\n\nv0.5 April 12th, 2014\n~~~~~~~~~~~~~~~~~~~~~\n\n-  Various WAV types support thanks to scikits.audiolab.SndFile\n   (including 24bit!)\n-  Runtime option \"--play\": play all samples converted\n-  Runtime option \"--verbose %\": set output verbosity to % (0/1/2)\n-  Excess samples are no longer added to resulting .XI file\n-  New notice about omitted excess samples\n-  Conversion speed increased dramatically\n-  Case insensitive path matching to deal with SFZ-files created on\n   different platforms\n\nv0.4 September 27th, 2012\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\n-  Added sample count constraint (no more than 128 per file) – -1\n   observed error\n-  Moved temp files to system temp dir – job done clear now\n-  Fixed envelope length and seconds-to-ticks conversion parameter — no\n   more SunVox crashes\n\nDisclaimer\n----------\n\nSamplicity is in early beta status and does not support all features in\nintersection of .SFZ and .XI. Now it is tested **only** in `SunVox\ntracker <http://www.warmplace.ru/soft/sunvox/>`__ v1.6 and v1.7.2 with\n59 sample packs (in 16bit format) I've got.\n\n    Crashes of SunVox are known to me for wrongly encoded\n    .XI-instruments, so **you should save your files every time before\n    loading an instrument**\n\nBut what the hell! It helped me to write some `songs <http://soundcloud.com/convergent>`__!\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nFormats\n-------\n\neXtended Instrument\n~~~~~~~~~~~~~~~~~~~\n\nThis format was created in 1990's for DOS music tracker called\nFasttracker 2. It's binary, old and rusty, but still useful. ### SFZ\nOpen format by Cakewalk company. Designed for creation in notepad.\nSample pack contains .sfz textfile and a number of samples nearby. So,\nyou can create your sample pack without any specific software. See more\n`here <http://www.cakewalk.com/DevXchange/article.aspx?aid=108>`__\n\nUsage\n-----\n\nSamplicity is written in `python v2.7.3 <http://www.python.org/>`__. To\nuse this tool Python v2.7+ should be installed on your computer.\n\nInstallation\n~~~~~~~~~~~~\n\nIf you use ``pip``, you can just\n\n.. code:: bash\n\n    pip install samplicity\n\nTo manually install this package, simply download and run in its\ndirectory:\n\n.. code:: bash\n\n    python setup.py install\n\nNow you're ready to use Samplicity! Try:\n\n.. code:: bash\n\n    samplicity\n\nSample convertion\n~~~~~~~~~~~~~~~~~\n\nTo convert single sample pack, navigate in\n**terminal/bash/command**\\ line to sample pack folder and run the\nfollowing command:\n\n.. code:: bash\n\n    python samplicity \"<SAMPLE PACK NAME>.sfz\"\n\nIf python is installed, path to samplicity is right and sample pack is a\nvalid .SFZ file, you'll see something like this:\n\n.. code:: bash\n\n    --------------------------------------------------------------------------------\n    Converting \" Keys - Grand Piano.sfz \"\n    --------------------------------------------------------------------------------\n    ////////// Notice: some regions are overlapping and would be overwritten\n    c1, c#1, d1, d#1, e1, f1, f#1, g1, g#1, a1, a#1, b1, c2, c#2, d2, d#2, e2, f2,\n    f#2, g2, g#2, a2, a#2, b2, c3, c#3, d3, d#3, e3, f3, f#3, g3, g#3, a3, a#3, b3,\n    c4, c#4, d4, d#4, e4, f4, f#4, g4, g#4, a4, a#4, b4, c5, c#5, d5, d#5, e5, f5,\n    f#5, g5, g#5, a5, a#5, b5, c6, c#6, d6, d#6, e6, f6, f#6, g6, g#6, a6, a#6, b6,\n    c7, c#7, d7, d#7, e7, f7, f#7, g7, g#7, a7, a#7, b7\n    ////////// Notice: some notes are out of range and ignored\n    c8\n    ////////// Notice: some regions are not used, skipping:\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\n    23, 24, 25, 26, 27, 28, 29\n\n    29 samples, 54225 kB written during 0.347247 seconds\n\n    1 files converted in 0.352371 seconds\n\nYou can control verbosity of output using ``--verbose`` command:\n\n.. code:: bash\n\n    $ samplicity Keys\\ -\\ Grand\\ Piano.sfz --force --verbose 0\n    --------------------------------------------------------------------------------\n    Converting \" Keys - Grand Piano.sfz \"\n    --------------------------------------------------------------------------------\n\n    29 samples, 54225 kB written during 0.35783 seconds\n\n    1 files converted in 0.362867 seconds\n\n.. code:: bash\n\n    $ samplicity Keys\\ -\\ Grand\\ Piano.sfz --force --verbose 2\n    --------------------------------------------------------------------------------\n    Converting \" Keys - Grand Piano.sfz \"\n    --------------------------------------------------------------------------------\n    ////////// Notice: some regions are overlapping and would be overwritten\n    c1, c#1, d1, d#1, e1, f1, f#1, g1, g#1, a1, a#1, b1, c2, c#2, d2, d#2, e2, f2,\n    f#2, g2, g#2, a2, a#2, b2, c3, c#3, d3, d#3, e3, f3, f#3, g3, g#3, a3, a#3, b3,\n    c4, c#4, d4, d#4, e4, f4, f#4, g4, g#4, a4, a#4, b4, c5, c#5, d5, d#5, e5, f5,\n    f#5, g5, g#5, a5, a#5, b5, c6, c#6, d6, d#6, e6, f6, f#6, g6, g#6, a6, a#6, b6,\n    c7, c#7, d7, d#7, e7, f7, f#7, g7, g#7, a7, a#7, b7\n    ////////// Notice: some notes are out of range and ignored\n    c8\n    * pcm16 stereo sample \" samples/grand piano/piano-p-c1.wav \" 1493336 kB\n    * pcm16 stereo sample \" samples/grand piano/piano-p-d#1.wav \" 1516008 kB\n    * pcm16 stereo sample \" samples/grand piano/piano-p-f#1.wav \" 1509820 kB\n    * pcm16 stereo sample \" samples/grand piano/piano-p-a1.wav \" 1498120 kB\n    * pcm16 stereo sample \" samples/grand piano/piano-p-c2.wav \" 1481792 kB\n    * pcm16 stereo sample \" samples/grand piano/piano-p-d#2.wav \" 1449812 kB\n    * pcm16 stereo sample \" samples/grand piano/piano-p-f#2.wav \" 1439776 kB\n    * pcm16 stereo sample \" samples/grand piano/piano-p-a2.wav \" 1417312 kB\n    * pcm16 stereo sample \" samples/grand piano/piano-p-c3.wav \" 1261156 kB\n    * pcm16 stereo sample \" samples/grand piano/piano-p-d#3.wav \" 1303952 kB\n    * pcm16 stereo sample \" samples/grand piano/piano-p-f#3.wav \" 1243268 kB\n    * pcm16 stereo sample \" samples/grand piano/piano-p-a3.wav \" 1182584 kB\n    * pcm16 stereo sample \" samples/grand piano/piano-p-c4.wav \" 1153464 kB\n    * pcm16 stereo sample \" samples/grand piano/piano-p-d#4.wav \" 1079780 kB\n    * pcm16 stereo sample \" samples/grand piano/piano-p-f#4.wav \" 1025388 kB\n    * pcm16 stereo sample \" samples/grand piano/piano-p-a4.wav \" 953004 kB\n    * pcm16 stereo sample \" samples/grand piano/piano-p-c5.wav \" 918164 kB\n    * pcm16 stereo sample \" samples/grand piano/piano-p-d#5.wav \" 840008 kB\n    * pcm16 stereo sample \" samples/grand piano/piano-p-f#5.wav \" 753584 kB\n    * pcm16 stereo sample \" samples/grand piano/piano-p-a5.wav \" 698204 kB\n    * pcm16 stereo sample \" samples/grand piano/piano-p-c6.wav \" 676156 kB\n    * pcm16 stereo sample \" samples/grand piano/piano-p-d#6.wav \" 573092 kB\n    * pcm16 stereo sample \" samples/grand piano/piano-p-f#6.wav \" 512252 kB\n    * pcm16 stereo sample \" samples/grand piano/piano-p-a6.wav \" 425984 kB\n    * pcm16 stereo sample \" samples/grand piano/piano-p-c7.wav \" 404128 kB\n    * pcm16 stereo sample \" samples/grand piano/piano-p-d#7.wav \" 270348 kB\n    * pcm16 stereo sample \" samples/grand piano/piano-p-f#7.wav \" 246012 kB\n    * pcm16 stereo sample \" samples/grand piano/piano-p-a7.wav \" 224744 kB\n    * pcm16 stereo sample \" samples/grand piano/piano-p-c8.wav \" 211276 kB\n    ////////// Notice: some regions are not used, skipping:\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\n    23, 24, 25, 26, 27, 28, 29\n\n    29 samples, 54225 kB written during 0.346783 seconds\n\n    1 files converted in 0.351817 seconds\n\nBatch conversion\n~~~~~~~~~~~~~~~~\n\nTo convert more than one .SFZ file you can specify as many arguments to\nSamplicity as you want. Or even use a wildcard\n\n.. code:: bash\n\n    samplicity \"<SAMPLE 1>.sfz\" \"<SAMPLE 2>.sfz\" \"<SAMPLE 3>.sfz\"\n    samplicity *.sfz\n\nReconversion\n~~~~~~~~~~~~\n\nIf there is corresponding to your sample pack .XI file, Samplicity won't\nconvert it again. To force reconversion, add ``--force`` attribute:\n\n.. code:: bash\n\n    samplicity \"<SAMPLE NAME>.sfz\" --force\n\nPackage\n-------\n\nRepository contains:\n\n-  ``samplicity.py``\n-  ``xi_reader.py`` — tool to verify your .XI if something went wrong.\n   Usage:\n   ``python \"<PATH TO SAMPLICITY FOLDER>/xi_reader.py\" \"<SAMPLE NAME>.xi\"``.\n   It will show you full info, contained in .XI file (but not samples\n   binary data). It is useful for bugtrack.\n-  ``xi_specs.txt`` — specifications of eXtended Instrument edited and\n   improved a bit. Thanks `Alex Zolotov <http://www.warmplace.ru/>`__\n-  ``Cakewalk DevXchange - Specifications - sfz File Format.pdf`` —\n   specifications of .SFZ saved from Cakewalk\n   `website <http://www.cakewalk.com/DevXchange/article.aspx?aid=108>`__.\n\nNotices and errors\n------------------\n\n-  **Notice: some notes are out of range and ignored** — .XI supports\n   only 96 notes from C0 to B7, so some notes in your sample pack cannot\n   fit in this range. Consider editing .SFZ file.\n-  **Notice: some regions are overlapping and would be overwritten** —\n   .SFZ format supports velocity maps. But .XI doesn't. Consider\n   splitting your .SFZ file into separate files. For example, I've got\n   ``Grand Piano (Piano).sfz`` and ``Grand Piano (Forte).sfz``\n-  **Notice: some samples are not used, skipping** – Some SFZ-regions\n   did not make it to the final key mapping, so they will be skipped to\n   reduce the file size\n-  **Too long envelope, shrinked to 512** — .XI does not support\n   envelopes longer than 512 ticks (~10.24 seconds), so you instrument\n   envelope was modified to fit this range\n-  **Too many samples in file** — .XI does not support more than 128\n   samples in instrument. Consider splitting your file or removing some.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ckald/Samplicity",
    "keywords": null,
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "samplicity",
    "package_url": "https://pypi.org/project/samplicity/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/samplicity/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/ckald/Samplicity"
    },
    "release_url": "https://pypi.org/project/samplicity/0.5.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": ".SFZ to .XI musical samples format converter",
    "version": "0.5.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1058821,
  "releases": {
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1cd7ec94ca4cf7719b8b86bc8474a24909cddf981d0a904a71ded2c56eb9c188",
          "md5": "4179e3cea7c6d3e8f3912df00be50dd8",
          "sha256": "cdf6626ab48f4707b353813a57be34cbb072ff3f465e4f1abd2f3ca5efb27e36"
        },
        "downloads": -1,
        "filename": "samplicity-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "4179e3cea7c6d3e8f3912df00be50dd8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 405333,
        "upload_time": "2014-04-12T14:03:24",
        "upload_time_iso_8601": "2014-04-12T14:03:24.691016Z",
        "url": "https://files.pythonhosted.org/packages/1c/d7/ec94ca4cf7719b8b86bc8474a24909cddf981d0a904a71ded2c56eb9c188/samplicity-0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "86c5593626692d70385fbeaeeebd19683daf2f2a57d45facff23a8034f3dc2fb",
          "md5": "d4f8a0ebd9f17bb8cfc3380e2a0b5428",
          "sha256": "8744bc165e80370f2813d8a70061a75d2426d35796b3a055f9ea9adb330e2b22"
        },
        "downloads": -1,
        "filename": "samplicity-0.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d4f8a0ebd9f17bb8cfc3380e2a0b5428",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 409885,
        "upload_time": "2014-04-12T21:21:35",
        "upload_time_iso_8601": "2014-04-12T21:21:35.147777Z",
        "url": "https://files.pythonhosted.org/packages/86/c5/593626692d70385fbeaeeebd19683daf2f2a57d45facff23a8034f3dc2fb/samplicity-0.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "86c5593626692d70385fbeaeeebd19683daf2f2a57d45facff23a8034f3dc2fb",
        "md5": "d4f8a0ebd9f17bb8cfc3380e2a0b5428",
        "sha256": "8744bc165e80370f2813d8a70061a75d2426d35796b3a055f9ea9adb330e2b22"
      },
      "downloads": -1,
      "filename": "samplicity-0.5.1.tar.gz",
      "has_sig": false,
      "md5_digest": "d4f8a0ebd9f17bb8cfc3380e2a0b5428",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 409885,
      "upload_time": "2014-04-12T21:21:35",
      "upload_time_iso_8601": "2014-04-12T21:21:35.147777Z",
      "url": "https://files.pythonhosted.org/packages/86/c5/593626692d70385fbeaeeebd19683daf2f2a57d45facff23a8034f3dc2fb/samplicity-0.5.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}