{
  "info": {
    "author": "Peter Mawhorter",
    "author_email": "pmawhort@wellesley.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3 :: Only",
      "Topic :: Education",
      "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",
      "Topic :: Office/Business",
      "Topic :: Other/Nonlisted Topic"
    ],
    "description": "# Refraction\n\n## Overview\n\nThis program is a [flask](https://palletsprojects.com/p/flask/) WSGI app\nfor serving views of spreadsheets to individuals whose usernames\n(authenticated via a Central Authentication Service a.k.a. CAS) appear in\na particular column of the spreadsheet. For example, you could allow each\nuser to view their row in a gradesheet. It supports integration with\nGoogle Sheets as well as storing manually uploaded CSV or TSV files.\n\n\n## Dependencies:\n\n- Python version 2.7 or 3.6+\n- `flask`, `flask_cas`, `jinja2`, and `markupsafe` for server support\n- `redis` which is used for data storage. You will need to separately\n  install the `redis` executable and make sure it's launchable by your\n  web server (or you can launch `redis` manually).\n- `google` and `googleapiclient` are used for Google Sheets integration,\n  but can be ignored if you're not using that.\n- `flask_talisman` is highly recommended; without it the server won't\n  force HTTPS and will be much less secure; and `flask_seasurf` is also\n  recommended to help prevent Cross-Site Request Forgery (CSRF).\n- `OpenSSL` is necessary if you want to run in debug mode using HTTPs.\n- `pytest` for testing, install with `[test]` option to get it automatically.\n\n\n## Installing\n\nRun `pip install refraction` which will install the `refraction` module.\n\nYou can then run `python -m exploration.tests` to run tests.\n\nNOTE: Right now, tests are broken and will not pass in one phase, and\nwill leave a running redis server...\n\n\n## Getting Started:\n\nTo set up the server, you'll need to create a directory for running it\nfrom that has certain files (this can be anywhere on your system). The\n`rundir` directory in the installed module has an example of what you'll\nneed, complete with configuration files you can edit.\n\nThe main files you will need to change are `rf_config.py` and\n`refraction-admin.json`: the former has things like the CAS setup in it,\nwhile the latter needs to list app-wide administrators who will be able\nto access *everyone*'s data (or you can leave the admins list empty).\n\nOnce these files have been edited, if you want to use Google Sheets,\nyou'll also have to set up a service account via a Google Cloud project\n(you won't need to pay for anything). You'll need a credentials file to\nauthenticate as the service account (TODO: Detailed steps for that!) and\nthat must be in your run directory.\n\nWhen your run directory is set up and you've edited your configuration\nfiles, run:\n\n```py\npython -m refraction.app\n```\n\nThis will start the server locally, and you can test things out. Note\nthat in some cases a redis instance may remain after you're done testing;\nyou can kill that process manually.\n\nTODO: Redis cleanup on local server shutdown?\n\n\nTo run the server for real, make sure that you have CAS set up in the\nconfiguration file (you'll need access to a CAS server, which you might\nhave via a company or academic institution). You should also make sure to\ninstall `flask_talisman` and `flask_seasurf`.\n\nWhatever web server you're running should supply a WSGI layer (e.g.,\nApache has `mod_wsgi`). Use this to actually get the server running; the\n`refraction.wsgi` file in the run directory can be the target. For\nexample, using Apache `mod_wsgi` your configuration file might look like\nthis:\n\n```cfg\n# =================================================\n# Refraction App for spreadsheet sharing row-by-row\n\n# the following is now necessary in Apache 2.4; the default seems to be to deny.\n# TODO: Does this make these files served up?\n<Directory \"/home/refraction/rundir\">\n    Require all granted\n</Directory>\n\nWSGIDaemonProcess refraction user=refraction processes=5 display-name=httpd-refraction home=/home/refraction/rundir python-home=/home/refraction/refraction-python python-path=/home/refraction/rundir\nWSGIScriptAlias /refraction /home/refraction/rundir/refraction.wsgi process-group=refraction\n```\n\nThis example configuration assumes that you've created a user named\n`refraction`, and put your run directory `rundir` in the home directory\nof that user.\n\n\n## Plans\n\n- All-user views to support things like Q&A.\n\n\n## Changelog\n\n- v0.1 Initial pre-alpha upload.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://cs.wellesley.edu/~pmwh/refraction/docs/refraction",
    "keywords": "",
    "license": "BSD 3-Clause License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "refraction",
    "package_url": "https://pypi.org/project/refraction/",
    "platform": null,
    "project_url": "https://pypi.org/project/refraction/",
    "project_urls": {
      "Homepage": "https://cs.wellesley.edu/~pmwh/refraction/docs/refraction"
    },
    "release_url": "https://pypi.org/project/refraction/0.1/",
    "requires_dist": [
      "google ; extra == 'google'",
      "googleapiclient ; extra == 'google'",
      "openssl ; extra == 'https_debug'",
      "flask-talisman ; extra == 'security'",
      "flask-seasurf ; extra == 'security'",
      "pytest ; extra == 'test'"
    ],
    "requires_python": ">=2.7",
    "summary": "Flask WSGI server for sharing individual rows of spreadsheets with CAS-authenticated users named in those rows.",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14351043,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a0cf873fcbabce6a91ef0d692b2f24b229ad2dbbf471209f8f6155adaf782775",
          "md5": "553a999f24ea6709b9a7fe5162e8516a",
          "sha256": "0cdf01b1103336ab486fdf50adf8aa73e615b6add6abc6d30689f2944c3593a0"
        },
        "downloads": -1,
        "filename": "refraction-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "553a999f24ea6709b9a7fe5162e8516a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7",
        "size": 46361,
        "upload_time": "2022-07-06T12:11:04",
        "upload_time_iso_8601": "2022-07-06T12:11:04.211856Z",
        "url": "https://files.pythonhosted.org/packages/a0/cf/873fcbabce6a91ef0d692b2f24b229ad2dbbf471209f8f6155adaf782775/refraction-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5cde27a055ec02df100f5f0717381408d80cbd8eb507f7cd7e521fdfb1005d97",
          "md5": "1e6b764a9c417c851f595d9d3c50a4ce",
          "sha256": "fee5891f25807f533dd5f5a1408a1648bdf6c56a5cd20c100208872c99966d1c"
        },
        "downloads": -1,
        "filename": "refraction-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1e6b764a9c417c851f595d9d3c50a4ce",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 58007,
        "upload_time": "2022-07-06T12:11:06",
        "upload_time_iso_8601": "2022-07-06T12:11:06.949651Z",
        "url": "https://files.pythonhosted.org/packages/5c/de/27a055ec02df100f5f0717381408d80cbd8eb507f7cd7e521fdfb1005d97/refraction-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a0cf873fcbabce6a91ef0d692b2f24b229ad2dbbf471209f8f6155adaf782775",
        "md5": "553a999f24ea6709b9a7fe5162e8516a",
        "sha256": "0cdf01b1103336ab486fdf50adf8aa73e615b6add6abc6d30689f2944c3593a0"
      },
      "downloads": -1,
      "filename": "refraction-0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "553a999f24ea6709b9a7fe5162e8516a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=2.7",
      "size": 46361,
      "upload_time": "2022-07-06T12:11:04",
      "upload_time_iso_8601": "2022-07-06T12:11:04.211856Z",
      "url": "https://files.pythonhosted.org/packages/a0/cf/873fcbabce6a91ef0d692b2f24b229ad2dbbf471209f8f6155adaf782775/refraction-0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5cde27a055ec02df100f5f0717381408d80cbd8eb507f7cd7e521fdfb1005d97",
        "md5": "1e6b764a9c417c851f595d9d3c50a4ce",
        "sha256": "fee5891f25807f533dd5f5a1408a1648bdf6c56a5cd20c100208872c99966d1c"
      },
      "downloads": -1,
      "filename": "refraction-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "1e6b764a9c417c851f595d9d3c50a4ce",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=2.7",
      "size": 58007,
      "upload_time": "2022-07-06T12:11:06",
      "upload_time_iso_8601": "2022-07-06T12:11:06.949651Z",
      "url": "https://files.pythonhosted.org/packages/5c/de/27a055ec02df100f5f0717381408d80cbd8eb507f7cd7e521fdfb1005d97/refraction-0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}