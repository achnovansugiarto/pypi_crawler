{
  "info": {
    "author": "Andrea Allen",
    "author_email": "andrea2allen@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "Intended Audience :: Science/Research",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3"
    ],
    "description": "# EpIntervene\nEpIntervene is a custom simulation framework in Python for Event-Driven simulation of epidemics on networks. \nWhat makes this framework unique is its functionality for introducing interventions in the middle of epidemic simulations, its customizable event classes, and its book-keeping of generations of infection.\n\nEpIntervene is still a work in progress. The current version of the software is available for installation\non the PyPi index, available [here](https://pypi.org/project/epintervene/), available via a recommended `pip` install in an `anacondas` virtual environment. \n\n## Usage\nFor quick examples on how to use EpIntervene, we recommend walking through the examples in the `examples/sandbox.py` file [here](https://github.com/andrea-allen/epintervene/blob/main/examples/sandbox.py)\nfor standard demonstrations on SIR and SEIR epidemics. For the intervention features, you can walk through the examples\nin `examples/interventions_sandbox.py` found [here.](https://github.com/andrea-allen/epintervene/blob/main/examples/interventions_sandbox.py)\nFor an interactive tool to let you explore what the results of using EpIntervene would look like,\ncheck out my [Streamlit app](https://share.streamlit.io/andrea-allen/epintervene-interactive/main/app.py)\nwith source code found [here.](https://github.com/andrea-allen/epintervene-interactive)\n\nThis package and its current capabilities support SIR or SEIR model simulations, and purely SIR for the intervention-based simulations.\nThe two primary Simulation objects can be found in the classes `epintervene.simobjects.simulation.Simulation`\nand `epintervene.simobjects.simulation.SimulationSEIR`. For the intervention feature, use any of the available Simulation classes in\n`epintervene.simobjects.extended_simulation.py` once you have familiarized yourself with how to run a standard simulation.\n\nCurrently, calls to simulators `run_sim()` methods with the appropriate configurations and run time arguments\nresult in a single simulation. It is up to the user to aggregate results from an ensemble of runs on their own.\n\nFor sample usage, see the `examples` module. \n\n### Setting up a Simulation Object \nA single simulation object is accessed and created via `simobjects.simulation.Simulation`\nand consists of an object encapsulating all information about the configuration, state, and results\nfor a single simulation. The base class, `Simulation`, will run an SIR disease model. \n\n#### Basic Configurations\nTo configure a `Simulation` object, you'll first need to define a network via a symmetric adjacency list.\nThe `network` module has a built-in function to assist with this and is recommended in order\nto obtain an adjacency list in the right form. If supplying one's own adjacency list, make sure it is in the form\n``` \n[line of node_label_index], node_label, neighbor, neighbor, ...\n [line 0]                   0           1         7\n [line 1]                   1           0         3\n [lines ...                 ...         ...       ...\n [line 3]                   3           1         22         26   ...\n```\n\nTo use the built-in functions, supply a networkX object of a graph `G` and call \n``` adjlist = network.NetworkBuilder.create_adjacency_list(G)```\nThis will remove multi-edges, and make a symmetric adjacency list of the form displayed above. `G` must be\na NetWorkX Graph object. \n\nThen to create a simulation object, define\n```your_simulation_object = simulation.Simulation(adj_list=adjlist, N=len(adjlist))```\nwhere `N` is the number of nodes in your network and should be the length of the list.\n\nThen add your `beta` and `gamma` rates for infection rate and recovery rate to your simulation via\n```\n        your_simulation_object.set_uniform_beta(beta=0.004)\n        your_simulation_object.set_uniform_gamma(gamma=0.001)\n```\n\n#### Additional Configurations\nIt may be the case that your network model is partitioned into sub-populations, e.g. a stochastic block model network. Or, your network\nis based on real data for which the labels indicate specific data on a node's sub-group within the network. \n\nFor this reason, you can specify `membership_groups` and `node_memberships` when initializing a new `Simulation` object. \nSimply provide a list of ids or labels for each unique membership group, which can be any simple data type (string, its, floats, etc)\nand then supply a vector (1-d numpy array) of the membership id for each node. The position in the vector will be read\nas the node id, and the entry will indicate the membership group. For example, for a network with 10 nodes representing a zoo, with adjacency list `adjlist`, we would set up \n\n```zoo_sim = Simulation(adj_list=adjlist, N=10, membership_groups=['elephant', 'tiger', 'bird'], node_memberships=['tiger', 'tiger', 'bird', 'bird', 'bird', ..., 'elephant', 'tiger']```\n\n\n#### Intervention Models and Configurations\nThis package offers a few types of simulations with customizable intervention regimes. To access\nthe intervention simulation objects, access via `simobjects.extended_simulation`.\n\n`UniversalInterventionSim(Simulation)` will reduce `beta` for the entire network to the specified `beta_redux` at the specified \nintervention generation. How to configure:\n```\nadjlist = nb.create_adjacency_list(G)\nsim = extended_simulation.UniversalInterventionSim(N=len(adjlist), adjlist=adjlist)\nsim.set_uniform_beta(0.9)\nsim.set_uniform_gamma(0.1)\nsim.configure_intervention(intervention_gen=4, beta_redux=0.6)\n```\nThis means that when the epidemic reaches generation `4`, `beta` the transmission rate will be reduced to `beta_redux`.\n\n`RandomInterventionSim(Simulation)`\nThis simulation class lets the user configure an intervention at a given epidemic generation to model vaccinating a specified proportion\nof the population to a transmissibility of zero, by selecting a random subset of the population. See the\n`examples/interventions_sandbox` module for examples. \n\nOther interventions: \n\n`TargetedInterventionSim`, which works just as `RandomInterventionSim` but where the vaccination strategy targets the specified\nproportion of the population in decreasing order of degree; highest degree nodes are vaccinated first. *Note: Under this\nsimulation framework, a desired percentage of nodes to vaccinate is specified, however the simulation will\nfill that quota regardless of current vaccination or infection status of the node.*\n\n`RandomRolloutSimulation` and `TargetedRolloutSimulation` allow the user to configure a phased rollout of either\nrandom or targeted vaccinations. Specify the list of generations to intervene at, and the proportion of the population\nthat should be vaccinated at each generation.\n\n`AbsoluteTimeNetworkSwitchSim` allows the user to switch the network on the same nodes at a specified time of intervention.\nIt is best to familiarize with oneself of the simulation on both networks first, to get a sense of the appropriate\ntime to intervene based on infection rates.\n\nFor all of the above, examples are provided in `examples/interventions_sandbox.py`.\n\n\n\n#### SEIR Model\nAn SEIR model simulation object can be set up and configured much in the same way as the SIR one.\nCurrently, interventions are not yet supported on the SEIR framework, but this feature is coming soon.\nThe SEIR simulation framework does support membership groups.\n\nThe additional configurations needed from the user are additional rate matrices to describe\nthe node-pair rate for Exposed-Susceptible transmission, and a rate specifying the transition rate\nfor individual nodes from Exposed to Infected. \nExample:\n```\nseir_sim = SimulationSEIR(N=N, adjlist=adj_list)\nseir_sim.set_uniform_gamma(gamma=0.00001)\nseir_sim.set_uniform_beta(beta=0.5)\nseir_sim.set_uniform_beta_es(beta_es=0.5)\nseir_sim.set_uniform_gamma_ei(gamma_ei=1.0)\n```\n\nSimilarly, one can specify `node_memberships=node_membership_vector, membership_groups=['tiger', 'bird', 'elephant']` with the SEIR model.\n\n### Running a Simulation object\nOnce your Simulation object is set up, you are ready to run it. \n\nAn important feature of EpIntervene is that even after running your simulation, the object will\nbe preserved with all of its state and attributes, and can be accessed repeatedly for different \ntypes of results. \n#### If you run a simulation again, you SHOULD create a NEW Simulation object in order to guarantee a clean state.\n\nTo run any of the simulations you've configured, call\n```\nyour_sim_object.run_sim()\n```\nCalling `run_sim()` without changing any of its default arguments is the simplest way to run a single simulation\nof your object. If you want to specify certain aspects of the simulation, there are a range of options you can choose from.\n\nAs of now, `run_sim(uniform_rate=True)` is the default. Non-uniform rates are no longer supported so there\nis no need to specify a value for it.\n\nIf you want to track membership groups and you have configured them properly, you can run\n```\nyour_sim_object.run_sim(with_memberships=True)\n```\n\nTo stop the simulation when there are no more possible infection events, you can specify\n```\nyour_sim_object.run_sim(wait_for_recovery=False)\n```\n\nOther optional arguments:\n`kill_by=13` will stop the simulation after Generation 13 when there are no more active members of any generation from 0-13.\n\n`p_zero=i` specifies the node label/index for patient zero. If not specified, a random node index will be chosen. To specify multiple\npatient zeros, for user-defined node labels set\n`p_zero=[i, j, k]` and to generate a specific amount (greater than 1) random patient zeros, specify\n`p_zero=[None, None, None, None]` which will generate 4 random patient zero nodes. To specify a mix of random and non-random patient zeros,\nspecify `p_zero=[i, j, None, k, None]` in any order. If two copies of the same label are added, one copy will be replaced with another random patient zero.\n\n`record_active_gen_sizes=True/False` a boolean, defaults to False. Will record the number and size of active generations over time.\nAn active node is defined as being infectious and still having susceptible neighbors. An active generation is defined as containing\none or more active nodes belonging to that epidemic generation.\n\n### Obtaining results from a Simulation\n#### Basic Results\nThe Epintervene framework is driven by an Event-Driven algorithm, in which\ncontinuous time is tracked by drawing an exponential random variable for the waiting time until next event at each discrete time step\nwith rate parameter the sum of the rates of all potential individual events. As a result, the resulting\nraw time series will not be normalized, making it hard to compare to an ensemble of results should the user\nintend to average the results of an ensemble. Therefore, when calling the Simulation object for\ncontinuous time results, results are binned into a time-resolution that is evenly split into bins.\n\nTo obtain a continuous-time time series of your infected and recovered nodes for an SIR simulation,\nafter you have run your simulation call\n```\nts, infect_ts, recover_ts = sim.tabulate_continuous_time(time_buckets=1000)\n```\nwhich will return a time series time values (binned evenly between the start time and end time of the simulation at the resolution of the `time_buckets` optional parameter)\nand the time series of infected and recovered nodes.\nFor the SEIR model, the same call returns four time series including the time values themselves, for example\n```\nts, infect_ts, recover_ts, exposed_ts = seir_sim.tabulate_continuous_time(time_buckets=1000)\n```\n\n#### Tracking Generations of Infection \nEpIntervene also provides the user the option to obtain a generational time series from a\nSimulation object. The form of this return value will be a single vector, where the index of the vector indicates the epidemic generation, in ascending order. \nEach entry corresponds to the number of cumulatively infected nodes\nbelonging to a generation that is less than or equal to the entry's index. For example, \n```\nts_by_gen = sim.tabulate_generation_results(max_gens=20)\n```\nmight look like `[1, 2, 4, 8, 13, 18, 37]`, which indicates that 1 node was infected in generation 0,\n2 nodes were infected in generation 0 and 1 combined, and 13 nodes were infected including generations 0,1, 2, 3, and 4. \nIt is worth noting for the user that, to obtain the number of nodes in each unique generation,\none can call a `diff()` method on the result, where `ts_by_gen[i+1] - ts_by_gen[i]` will return the\nnumber of nodes infected in generation `i+1`.\n\nThis is not a traditional time series in this form, it is a chronological list of cumulative infections\nby the birth of each epidemic generation. It does not formally correspond to continuous time results.\n\n\n#### Tracking results for population groups\nTo obtain distinct time series results for each membership group, if specified in the simulation,\nthe user may call\n```\nts, membership_ts_infc = sim.tabulate_continuous_time_with_groups(time_buckets=1000)\n```\nwhich will return the time series values, and a dictionary of time series of infections per group.\nAn example of how to iterate through the results and plot each group is here:\n```\nfor group in membership_ts_infc.keys():\n    plt.plot(ts, membership_ts_infc[group], label=group)\n```\n\nFor the SEIR model, there are 3 return values to include the exposed time series. Example:\n```\nts, membership_ts_infc, membership_ts_exp = seir_sim.tabulate_continuous_time_with_groups(time_buckets=1000)\n``` \n\n\n## Classes\nSee the docs directory for more detailed documentation on each class. Documentation will be updated\nand is a living document. \n\n### Network Objects\n#### NetworkBuilder\nA static class to assist users in creating `NetworkX` graphs. The NetworkBuilder can return a network\nbuilt from a degree distribution, by calling `from_degree_distribution()` or from an adjacency matrix,\nby calling `from_adjacency_matrix()`\n#### Node\nInternal object that represents a single node in the network, created and disposed during simulations.\n#### Edge\nInternal object that represents a pair of nodes, where the left node and right node are distinct.\n\n## Examples\nSee module `examples.sandbox.py` for examples of basic SIR, SEIR, and group membership simulations.\n\nSee module `examples.interventions_sandbox.py` for examples of intervention-based simulations.\n\nResults of an SIR simulation (single run) with membership groups:\n\n![SEIR example](https://github.com/andrea-allen/epintervene/blob/main/docs/SEIR_group_example.png?raw=true)\n\n![SEIR example](https://github.com/andrea-allen/epintervene/blob/main/docs/SEIR_total.png?raw=true)\n\n![network](https://github.com/andrea-allen/epintervene/blob/main/docs/SEIR_network.png?raw=true)\n\n![netswitch example](https://github.com/andrea-allen/epintervene/blob/main/docs/netswitch_samplefig.png?raw=true)\n\n## Citing and using this code\n\nIf using all or any part of this code base in a published or non-published work, please cite as:\n\nCite this work as:\n\nAndrea Allen. (2021). andrea-allen/epintervene: v1.0.3 EpIntervene Release (v1.0.3). Zenodo. https://doi.org/10.5281/zenodo.5514401\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/andrea-allen/epintervene",
    "keywords": "python,epintervene",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "epintervene",
    "package_url": "https://pypi.org/project/epintervene/",
    "platform": null,
    "project_url": "https://pypi.org/project/epintervene/",
    "project_urls": {
      "Bug Tracker": "https://github.com/andrea-allen/epintervene/issues",
      "Documentation": "https://github.com/andrea-allen/epintervene",
      "Homepage": "https://github.com/andrea-allen/epintervene"
    },
    "release_url": "https://pypi.org/project/epintervene/1.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "EpIntervene Simulation Package",
    "version": "1.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15119461,
  "releases": {
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1bc6256c01e62545496aaa801dee0dc0ca1e11ddbf27715ae5e236335bed4135",
          "md5": "ab8169dac36eded01a7081ad4f016f76",
          "sha256": "b51033b5059134653e82e6869d2509074b45fa2d617fd4f4893ca418d0d4b73f"
        },
        "downloads": -1,
        "filename": "epintervene-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ab8169dac36eded01a7081ad4f016f76",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 26883,
        "upload_time": "2021-09-01T16:41:30",
        "upload_time_iso_8601": "2021-09-01T16:41:30.034787Z",
        "url": "https://files.pythonhosted.org/packages/1b/c6/256c01e62545496aaa801dee0dc0ca1e11ddbf27715ae5e236335bed4135/epintervene-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a999ab6ef71a9b9cfbe0f5f017e0760544f34867e82baa79cab94b758df2d3e4",
          "md5": "db9cec156f9bbde753c6c7565ceea815",
          "sha256": "9855493eda99adcec0c1c872c64b7a102d88f7369a5766df506bb64456f7761c"
        },
        "downloads": -1,
        "filename": "epintervene-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "db9cec156f9bbde753c6c7565ceea815",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 359981,
        "upload_time": "2021-09-01T16:41:32",
        "upload_time_iso_8601": "2021-09-01T16:41:32.817314Z",
        "url": "https://files.pythonhosted.org/packages/a9/99/ab6ef71a9b9cfbe0f5f017e0760544f34867e82baa79cab94b758df2d3e4/epintervene-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "67269e7d16299ec3ef214989333f65256048fd363cc1a61a7948c9f4be6eb987",
          "md5": "46cd54f2e54641e0243c1181edae9176",
          "sha256": "a4fab9c1345beeab9bbaf4bdaaff37ca12b55ec67c6a02ea8ca905d683569d76"
        },
        "downloads": -1,
        "filename": "epintervene-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "46cd54f2e54641e0243c1181edae9176",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 27988,
        "upload_time": "2021-09-01T16:41:31",
        "upload_time_iso_8601": "2021-09-01T16:41:31.005640Z",
        "url": "https://files.pythonhosted.org/packages/67/26/9e7d16299ec3ef214989333f65256048fd363cc1a61a7948c9f4be6eb987/epintervene-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cf670291749cfc5d56db0d8e8e33048ae2e75425af0b676856c20576a7fe726d",
          "md5": "87502b58412e7e9ff69777c12e42a4b1",
          "sha256": "2b1890e58d4b087e748bfcc193102838cfb9df84839bc7479eb015ed79c467ce"
        },
        "downloads": -1,
        "filename": "epintervene-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "87502b58412e7e9ff69777c12e42a4b1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 361401,
        "upload_time": "2021-09-01T16:41:33",
        "upload_time_iso_8601": "2021-09-01T16:41:33.896866Z",
        "url": "https://files.pythonhosted.org/packages/cf/67/0291749cfc5d56db0d8e8e33048ae2e75425af0b676856c20576a7fe726d/epintervene-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "72df055a5db80662b99b13b0c68e890548a7c70a985d9a1fdfedeef2b122121a",
          "md5": "a3d3ec5825c50c6e3ec41377925394cb",
          "sha256": "85935c12721b922444b28b33bae4c863519bc87585cd35e0a0ee3fddfd05af6d"
        },
        "downloads": -1,
        "filename": "epintervene-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a3d3ec5825c50c6e3ec41377925394cb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 34619,
        "upload_time": "2021-09-01T16:41:31",
        "upload_time_iso_8601": "2021-09-01T16:41:31.834571Z",
        "url": "https://files.pythonhosted.org/packages/72/df/055a5db80662b99b13b0c68e890548a7c70a985d9a1fdfedeef2b122121a/epintervene-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "73a08b96b3bec30f69d1b7a55a8974827a0636dad4fedc05825d1410a9f48708",
          "md5": "59416b3e70f964dcaef2c3335b69db88",
          "sha256": "d9f8aedeb01ece2e4a49d0b10fda971a0a04cc0de064bbfdbfdde6b0c7a6ab3f"
        },
        "downloads": -1,
        "filename": "epintervene-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "59416b3e70f964dcaef2c3335b69db88",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 378782,
        "upload_time": "2021-09-01T16:41:35",
        "upload_time_iso_8601": "2021-09-01T16:41:35.301628Z",
        "url": "https://files.pythonhosted.org/packages/73/a0/8b96b3bec30f69d1b7a55a8974827a0636dad4fedc05825d1410a9f48708/epintervene-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c8a5a02e814b0b0745483493658800bdfcdd69438d87b86a452e97aa79ca9888",
          "md5": "9650243bb79d7d006c0a1a7cd80444a0",
          "sha256": "d0bfeab190de59ddb5c160aff6b2813124d21c089085ea789d1afe887ff5fd6e"
        },
        "downloads": -1,
        "filename": "epintervene-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9650243bb79d7d006c0a1a7cd80444a0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 33789,
        "upload_time": "2021-09-01T18:28:20",
        "upload_time_iso_8601": "2021-09-01T18:28:20.140296Z",
        "url": "https://files.pythonhosted.org/packages/c8/a5/a02e814b0b0745483493658800bdfcdd69438d87b86a452e97aa79ca9888/epintervene-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d94c280e1ecb060e7dff3b71c086b739f13b58cd37dd5f2a5f007f29ceca2031",
          "md5": "0617af02bc3fed10dfdabe3d6cfd5a66",
          "sha256": "dc97d0be9741a6c0bedb63259cc33f0c8c6ceab13373dec7c9f8fdbc10e5b158"
        },
        "downloads": -1,
        "filename": "epintervene-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0617af02bc3fed10dfdabe3d6cfd5a66",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 35192,
        "upload_time": "2021-09-01T18:28:21",
        "upload_time_iso_8601": "2021-09-01T18:28:21.329143Z",
        "url": "https://files.pythonhosted.org/packages/d9/4c/280e1ecb060e7dff3b71c086b739f13b58cd37dd5f2a5f007f29ceca2031/epintervene-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2d459ad33f0f4107b6f388863022056736213733f946994b9195b14a84e85179",
          "md5": "af39ce7f6d04ce58580df0a45ba0afe5",
          "sha256": "e78f440564b423c81fe2023d867f796c751abb70f56d7aedc7d1e46e335a0a71"
        },
        "downloads": -1,
        "filename": "epintervene-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "af39ce7f6d04ce58580df0a45ba0afe5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 33791,
        "upload_time": "2021-09-01T20:14:46",
        "upload_time_iso_8601": "2021-09-01T20:14:46.021096Z",
        "url": "https://files.pythonhosted.org/packages/2d/45/9ad33f0f4107b6f388863022056736213733f946994b9195b14a84e85179/epintervene-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e6ce3d89bb1206472601353950c80649ba67d5d0d8facc1f367579e1b074cfc8",
          "md5": "5dbd63025d70cdcd5f7efcc457e26241",
          "sha256": "4ce5fc45879303c57b00c853cbaca1fc084f25d485323cc7a19ccad8177e5792"
        },
        "downloads": -1,
        "filename": "epintervene-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5dbd63025d70cdcd5f7efcc457e26241",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 35165,
        "upload_time": "2021-09-01T20:14:47",
        "upload_time_iso_8601": "2021-09-01T20:14:47.141054Z",
        "url": "https://files.pythonhosted.org/packages/e6/ce/3d89bb1206472601353950c80649ba67d5d0d8facc1f367579e1b074cfc8/epintervene-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9991ba40f6337e0576d39aa04ad1973898364c25ecfc47a7cb9931d8d1155a21",
          "md5": "3523b9ebd9640ad0f0601a0d6de69de9",
          "sha256": "856a724ff9fecebea09cc346badec23f2bf1fa6756e80e21567dcadfbf1455c4"
        },
        "downloads": -1,
        "filename": "epintervene-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3523b9ebd9640ad0f0601a0d6de69de9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 37698,
        "upload_time": "2021-09-17T23:05:59",
        "upload_time_iso_8601": "2021-09-17T23:05:59.461562Z",
        "url": "https://files.pythonhosted.org/packages/99/91/ba40f6337e0576d39aa04ad1973898364c25ecfc47a7cb9931d8d1155a21/epintervene-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f04b462e12e2f2dcfd67762ae89c2b4cc5262086770361fecd45bad542c491e3",
          "md5": "1342af28e08b21af0aea5360bb5eced1",
          "sha256": "f2183c92ff402fc2184f59ab2c6507bbaf57537437da8c89a62ffa6e381575f8"
        },
        "downloads": -1,
        "filename": "epintervene-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "1342af28e08b21af0aea5360bb5eced1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 38369,
        "upload_time": "2021-09-17T23:06:01",
        "upload_time_iso_8601": "2021-09-17T23:06:01.163256Z",
        "url": "https://files.pythonhosted.org/packages/f0/4b/462e12e2f2dcfd67762ae89c2b4cc5262086770361fecd45bad542c491e3/epintervene-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "594d447f10c94a3b7edb5c81a019a83df8f1927531ae130c72dbf53d8d83d350",
          "md5": "403e8293973021b6732c366bbc417dba",
          "sha256": "7018c66aa6ef2801d73ce0ca59db1d394d263cae32ed3f10fdb9d065c0888dee"
        },
        "downloads": -1,
        "filename": "epintervene-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "403e8293973021b6732c366bbc417dba",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 38150,
        "upload_time": "2021-10-27T17:39:50",
        "upload_time_iso_8601": "2021-10-27T17:39:50.378919Z",
        "url": "https://files.pythonhosted.org/packages/59/4d/447f10c94a3b7edb5c81a019a83df8f1927531ae130c72dbf53d8d83d350/epintervene-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "040d24565bbdbfeb56726df663aa02064aa7b218dc8951b375a0f603b700ca2e",
          "md5": "ec4442d7882c8ebd7c3c460b91b793b1",
          "sha256": "2e593fd7ecf12bb41780ad363be10f8fe11288162b2c5d182d6636d7d3f2a7a1"
        },
        "downloads": -1,
        "filename": "epintervene-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "ec4442d7882c8ebd7c3c460b91b793b1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 38845,
        "upload_time": "2021-10-27T17:39:51",
        "upload_time_iso_8601": "2021-10-27T17:39:51.667385Z",
        "url": "https://files.pythonhosted.org/packages/04/0d/24565bbdbfeb56726df663aa02064aa7b218dc8951b375a0f603b700ca2e/epintervene-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "25a9e9d8a0d9828f3b2bb7eb5c27a781c172f1b313e2a14237c9d355f32e684c",
          "md5": "00795d8e41fe406c74b24e053bd61152",
          "sha256": "d920c8b9d6044e31e178dc49b4404d2dab0d212b4eb6e2bae2d1256bba7e1fc9"
        },
        "downloads": -1,
        "filename": "epintervene-1.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "00795d8e41fe406c74b24e053bd61152",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 38485,
        "upload_time": "2021-10-27T21:41:58",
        "upload_time_iso_8601": "2021-10-27T21:41:58.872933Z",
        "url": "https://files.pythonhosted.org/packages/25/a9/e9d8a0d9828f3b2bb7eb5c27a781c172f1b313e2a14237c9d355f32e684c/epintervene-1.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6dbe4a60c9c8a703316f47f2f081d0792fa49703cd69ace6ee439e3e90b60536",
          "md5": "ba0b946c839b56c74c4ced00cff4af63",
          "sha256": "351b7daf42db90ed5c3d1d441eba84a7b7742fe585615ef1b107afe510548828"
        },
        "downloads": -1,
        "filename": "epintervene-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "ba0b946c839b56c74c4ced00cff4af63",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 39256,
        "upload_time": "2021-10-27T21:42:00",
        "upload_time_iso_8601": "2021-10-27T21:42:00.032014Z",
        "url": "https://files.pythonhosted.org/packages/6d/be/4a60c9c8a703316f47f2f081d0792fa49703cd69ace6ee439e3e90b60536/epintervene-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9b9f0e09ccaae89f12840e90ee71fe50801a9ce8874d9f23e0f2637178874b5a",
          "md5": "6b1372d840557b723a7d4045f790a8d7",
          "sha256": "c14488a1befa03917b804b939352f2d7a7ced37027d86acd8e3e932b03bb4445"
        },
        "downloads": -1,
        "filename": "epintervene-1.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6b1372d840557b723a7d4045f790a8d7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 38551,
        "upload_time": "2022-03-16T11:44:39",
        "upload_time_iso_8601": "2022-03-16T11:44:39.011640Z",
        "url": "https://files.pythonhosted.org/packages/9b/9f/0e09ccaae89f12840e90ee71fe50801a9ce8874d9f23e0f2637178874b5a/epintervene-1.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "97b644d8132ac40df8bac8ec8b084d511657295ab4f3c7afe0513c29ad1eea62",
          "md5": "427e9024d77b9cab77ae69c6f631beaf",
          "sha256": "9781541fc514328428533210c7444dd792531c89b1e2c13a5c947a3ee7ece2c1"
        },
        "downloads": -1,
        "filename": "epintervene-1.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "427e9024d77b9cab77ae69c6f631beaf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 39396,
        "upload_time": "2022-03-16T11:44:40",
        "upload_time_iso_8601": "2022-03-16T11:44:40.498026Z",
        "url": "https://files.pythonhosted.org/packages/97/b6/44d8132ac40df8bac8ec8b084d511657295ab4f3c7afe0513c29ad1eea62/epintervene-1.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3f8d9d770bfcd4859e862abcfd125268f7e9998dd18d6b556c1ac8061ea596d3",
          "md5": "4a965f2c0eb05eae6b48e4b79da22b2a",
          "sha256": "810b749a3a2406a6ac798fce20d77e258575ce10712d0b97ae91b702384946f3"
        },
        "downloads": -1,
        "filename": "epintervene-1.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4a965f2c0eb05eae6b48e4b79da22b2a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 38624,
        "upload_time": "2022-03-22T16:21:30",
        "upload_time_iso_8601": "2022-03-22T16:21:30.559796Z",
        "url": "https://files.pythonhosted.org/packages/3f/8d/9d770bfcd4859e862abcfd125268f7e9998dd18d6b556c1ac8061ea596d3/epintervene-1.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "523d0d53567a839865f60a25440dc4f59e5ddf03932738a41a6f9917c627d7b7",
          "md5": "7411234260a17389980270cff700f6ab",
          "sha256": "018eccabc00dd3a5e9da669167d1aef619f30c3115d0032d5c589d09b8d1e710"
        },
        "downloads": -1,
        "filename": "epintervene-1.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "7411234260a17389980270cff700f6ab",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 39627,
        "upload_time": "2022-03-22T16:21:31",
        "upload_time_iso_8601": "2022-03-22T16:21:31.951789Z",
        "url": "https://files.pythonhosted.org/packages/52/3d/0d53567a839865f60a25440dc4f59e5ddf03932738a41a6f9917c627d7b7/epintervene-1.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c5407b6784190cdf890357cbb5b3db14b37288d05eb41436c54a256b6200107a",
          "md5": "408df46c37ec4df0cb31875917ada89f",
          "sha256": "9d445741b7e744e0b5c09da65b966d1dd39f210b1d9e10c971eb523840349ba7"
        },
        "downloads": -1,
        "filename": "epintervene-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "408df46c37ec4df0cb31875917ada89f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 44201,
        "upload_time": "2022-06-16T20:20:56",
        "upload_time_iso_8601": "2022-06-16T20:20:56.265413Z",
        "url": "https://files.pythonhosted.org/packages/c5/40/7b6784190cdf890357cbb5b3db14b37288d05eb41436c54a256b6200107a/epintervene-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aec720745445a92dec9effd6ce82bb54ae97205f2b3e482ec984d7c05184775e",
          "md5": "3825b257742b368bfb85b020ba75b808",
          "sha256": "deec2c49c68cfda92dc240198bb4edaf8ac1281c49c535acd2a6b8d7582551b0"
        },
        "downloads": -1,
        "filename": "epintervene-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3825b257742b368bfb85b020ba75b808",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 44956,
        "upload_time": "2022-06-16T20:20:57",
        "upload_time_iso_8601": "2022-06-16T20:20:57.379426Z",
        "url": "https://files.pythonhosted.org/packages/ae/c7/20745445a92dec9effd6ce82bb54ae97205f2b3e482ec984d7c05184775e/epintervene-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "be22fb08e80768d75f8f5b0baf88c3dbdb877c4e813456170608024ba4ed44cf",
          "md5": "9a2335051d2322ddbf2f27beb90813d9",
          "sha256": "58f6727dd3b97f98f4b77bf230aaf08f8f15815b19df6b337d073ca181aad03a"
        },
        "downloads": -1,
        "filename": "epintervene-1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9a2335051d2322ddbf2f27beb90813d9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 44265,
        "upload_time": "2022-09-16T15:40:28",
        "upload_time_iso_8601": "2022-09-16T15:40:28.081994Z",
        "url": "https://files.pythonhosted.org/packages/be/22/fb08e80768d75f8f5b0baf88c3dbdb877c4e813456170608024ba4ed44cf/epintervene-1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e77c8afac3c8e755320a22549ce789d0f96d9e2b6e381ba83eb27877c15dac0b",
          "md5": "1fa009b2619ce422a8dae55b1206d6ba",
          "sha256": "ec9e2c4d4b63fe650c006642a62e70003b68dd96d684a8388a267639a1e79cac"
        },
        "downloads": -1,
        "filename": "epintervene-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1fa009b2619ce422a8dae55b1206d6ba",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 44986,
        "upload_time": "2022-09-16T15:40:29",
        "upload_time_iso_8601": "2022-09-16T15:40:29.637382Z",
        "url": "https://files.pythonhosted.org/packages/e7/7c/8afac3c8e755320a22549ce789d0f96d9e2b6e381ba83eb27877c15dac0b/epintervene-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "be22fb08e80768d75f8f5b0baf88c3dbdb877c4e813456170608024ba4ed44cf",
        "md5": "9a2335051d2322ddbf2f27beb90813d9",
        "sha256": "58f6727dd3b97f98f4b77bf230aaf08f8f15815b19df6b337d073ca181aad03a"
      },
      "downloads": -1,
      "filename": "epintervene-1.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9a2335051d2322ddbf2f27beb90813d9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 44265,
      "upload_time": "2022-09-16T15:40:28",
      "upload_time_iso_8601": "2022-09-16T15:40:28.081994Z",
      "url": "https://files.pythonhosted.org/packages/be/22/fb08e80768d75f8f5b0baf88c3dbdb877c4e813456170608024ba4ed44cf/epintervene-1.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e77c8afac3c8e755320a22549ce789d0f96d9e2b6e381ba83eb27877c15dac0b",
        "md5": "1fa009b2619ce422a8dae55b1206d6ba",
        "sha256": "ec9e2c4d4b63fe650c006642a62e70003b68dd96d684a8388a267639a1e79cac"
      },
      "downloads": -1,
      "filename": "epintervene-1.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "1fa009b2619ce422a8dae55b1206d6ba",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 44986,
      "upload_time": "2022-09-16T15:40:29",
      "upload_time_iso_8601": "2022-09-16T15:40:29.637382Z",
      "url": "https://files.pythonhosted.org/packages/e7/7c/8afac3c8e755320a22549ce789d0f96d9e2b6e381ba83eb27877c15dac0b/epintervene-1.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}