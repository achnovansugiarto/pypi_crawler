{
  "info": {
    "author": "T Trummler, M Glatzle",
    "author_email": "theresa.trummler@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering"
    ],
    "description": "# What is `realtpl`?\n`realtpl` (real gas thermodynamic python library) computes the density (rho),\nheat capacity (cp), speed of sound (sound), viscosity (visc) and heat\nconductivity (lambda) using a thermodynamic model based on cubic equations of\nstate (EoS) and compares it with reference data from the open source library\n`CoolProp`. The cubic EoS are the well-known Soave-Redlich-Kwong (SRK) and\nPeng-Robinson (PR) EoS and the more sophisticated three-parameter\nRedlich-Kwong-Peng-Robinson (RKPR) EoS. The latter employs the critical compressibility\nfactor for the EoS parameters, for details see reference _Trummler et al._. The\ncurrent implementation is primarily designed to evaluate results over a temperature range\n(with defined number of temperature steps) for a given pressure level. The data\nis displayed graphically and can also be exported to `csv` files for further\nprocessing. The only mandatory input is the fluid name, the temperature range\nand the pressure. Moreover, there is the additional feature to evaluate the data \nover a desired temperature and pressure range aiming to support table generations.\n\nFluid properties, such as mass, critical pressure etc., are directly extracted\nfrom `CoolProp`. This data is also saved to the output directory (specified in\nthe configuration file) as `<fluidname>.out`. For the calculation of the heat\ncapacity a reference value has to be evaluated, which is done using the NASA 7\nor 9 coefficient polynomials. Therefore, the corresponding coefficients have to be provided.\nFor selected fluids, we have already generated a database in the\ncorresponding file - `nasa_7.yaml` or `nasa_9.yaml`. More data can be found in\nthe references provided in the header of these files.\n\nA special feature of `realtpl` is that all calculations with the suggested\nthermodynamic model are vectorized, making them very fast.\n\n# Motivation and targeted audience\n`realtpl` is open-source software (under GNU GPL License) for physicists,\nengineers, scientists, technicians and anyone interested in real gas\nthermodynamics. It runs on all operating systems which support Python, is quick\nto install, free of charge and designed to be easy to use. The indented use is\nto run the executable and modify the configuration files only.\n\n`realtpl` has been specifically designed to be used for CFD\nsimulations. Checking the accuracy of a thermodynamic model in advance is a\ncentral step before conducting CFD simulations. For different fluids as well as\ndifferent pressure and temperature ranges, such an evaluation can be complicated \nand especially time-consuming. To this end, we have written `realtpl` to easily \ncompare the results obtained with a thermodynamic model based on cubic EoS. For more details \nsee reference _Trummler et al._.\n\n# Installation\n\n`realtpl` is available as a Python package. Using `pip` you can simply install\nit with:\n\n````bash\n pip install realtpl\n````\n\nAdditionally, `realtpl` is also available on github\nhttps://github.com/ttrummler/realtpl. Clone the latest version with:\n\n````bash\ngit clone https://github.com/ttrummler/realtpl\n````\n\nAnd proceed to install (use the `-e` option for an editable installation):\n\n````bash\ncd realtpl\npip install .\n````\n\nAfter installation, you will have an executable named `realtpl`, which you can\nrun anywhere.\n\n# Testing\nTesting is configured using `tox`. If not already installed, install `tox`\nusing pip\n\n````bash\npip install tox\n````\n\nThen, you can simply enter the `tox` and the tests will automatically be executed\n\n````bash\ntox\n````\n\n**Note** that it might not run for all tested python versions (py38, py39,\npy310) on your OS.\n\n# Running `realtpl`\nTo run the test example use\n\n````bash\nrealtpl --config /path/to/tests/example/config.yaml\n````\n\nIn the configuration file everything for the computation is specified.\n\n# Configuration file\n\nSee `tests/example/` for example configuration files.\nA minimum working example for the configuration file reads:\n\n````yaml\nfluid_name: nHexane\npressure_Pa: 6.0e+06\ntemperature_start_K: 300\ntemperature_end_K: 600\n````\n\nNote that pressure and temperature input has to be in the SI units Kelvin and\nPascal, as also indicated in the parameter names.\n\nAdditional optional configuration parameters are:\n\n````yaml\nfluid_name: nHexane\neos_list: [SRK, PR, RKPR] # optional; default: SRK, PR, RKPR;\ninclude_ref_data: true # optional; default: true\npressure_Pa: 6.0e+06\ntemperature_start_K: 300\ntemperature_end_K: 600\ntemperature_step_K: 1 # optional; default: 1\nn_nasa_coeff: 7 # optional; default: 7\noutput_dir: results # optional; default: results\nsave_data_to_csv: true # optional;\nshow_plots: false # optional; default: true\nsave_plots: true # optional; default: false\nshow_deviation: true # optional; default: false\nsave_deviation: true # optional; default: false\nperformance_tracking: true # optional; default: false\n````\n\nApart from that, also evaluations for a pressure and temperature range are\npossible. However, then no graphical output can be activated.\n\n````yaml\nfluid_name: nHexane\neos_list: [SRK, PR, RKPR]\ninclude_ref_data: true\npressure_start_Pa: 4.0e+06\npressure_end_Pa: 8.0e+06\npressure_step_Pa: 1.0e+06\ntemperature_start_K: 300\ntemperature_end_K: 600\ntemperature_step_K: 100\nn_nasa_coeff: 7\noutput_dir: results\nsave_data_to_csv: true\nshow_plots: false\nsave_plots: false\n````\n\nThe configuration data used for the calculation is written out to the output \ndirectory to `config_data.out`.\n\nThe selection of fluids (`fluid_name`) is limited by the availability of \ncorresponding NASA coefficients in the data files `nasa_X.yaml`. Currently \navailable fluids are listed at the end of this description.\n\n# Latest source code\n\nThe latest development version of `realtpl` can be obtained at\n\n    https://github.com/ttrummler/realtpl\n\n# Bug reports\n\nTo report bugs, please use `realtpl`â€™s Bug Tracker at:\n\n    https://github.com/ttrummler/realtpl\n\n# License information\n\nSee LICENSE for information on the terms & conditions for usage of this\nsoftware, and a DISCLAIMER OF ALL WARRANTIES.\n\nCite `realtpl` if used in your work or to generate data required for your\nwork. Cite as: _Trummler, T., Glatzle, M., Doehring, A., Urban, N., Klein, M.,\nThermodynamic modeling for numerical simulations based on the generalized cubic\nequation of state._\n\n**NOTE** the license for the included database of the 7 coefficient NASA \npolynomials used for the calculation of the caloric properties. Using this \ndata requires proper citation to be included in the pertinent publications. \nCite:\n_Goos, E., Burcat, A., Ruscic, B.. New NASA Thermodynamic Polynomials Database \nWith Active Thermochemical Tables updates. Report ANL 05/20 TAE 960._\n\n# Citation\n\nTo cite `realtpl` in publications use:\n\n_Trummler, T., Glatzle, M., Doehring, A., Urban, N., Klein, M., Thermodynamic \nmodeling for numerical simulations based on the generalized cubic equation of state._\n\n# Available fluids \n\nThe selection of fluids (`fluid_name`) is limited by the availability of \ncorresponding NASA coefficients in the data files `nasa_X.yaml`. Extensions \nare possible at any time and can be achieved by simply adding the correct data \nin the file `nasa_7.yaml` or `nasa_9.yaml`. The currently available fluids are \nlisted below. Please pay attention to the identical spelling of the fluid \nnames in the configuration file.    \n\nNASA 7 coefficient polynomials (`n_nasa_coeff: 7`):\n- Nitrogen\n- nDodecane\n- nHexane\n- Cyclohexane\n- Cyclopentane\n- Methane\n- Methanol\n- Ethanol\n- Propane\n- Butane\n- nPentane\n- CarbonDioxide\n\nNASA 9 coefficient polynomials (`n_nasa_coeff: 9`):\n- Nitrogen\n- Hydrogen\n- nDodecane\n- nHexane\n- Cyclopentane\n- Cyclohexane\n- Propane\n- Methane\n- CarbonDioxide\n- Methanol\n- Ethanol\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ttrummler/realtpl",
    "keywords": "thermodynamics,cubic equation of state",
    "license": "GNU General Public License v3 or later (GPLv3+)",
    "maintainer": "",
    "maintainer_email": "",
    "name": "realtpl",
    "package_url": "https://pypi.org/project/realtpl/",
    "platform": null,
    "project_url": "https://pypi.org/project/realtpl/",
    "project_urls": {
      "Homepage": "https://github.com/ttrummler/realtpl"
    },
    "release_url": "https://pypi.org/project/realtpl/0.0.9/",
    "requires_dist": [
      "numpy",
      "pandas",
      "matplotlib",
      "pyyaml",
      "CoolProp"
    ],
    "requires_python": "",
    "summary": "Computation of real gas thermodynamics for fluids at different pressures and temperatures.",
    "version": "0.0.9",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14854864,
  "releases": {
    "0.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "244397db73893ef03e9440eb0fb8b02d526515c83de5a7c9b47eeda071ddf05c",
          "md5": "ee52f73b259ee2ede82664aa0627f6b6",
          "sha256": "77613295cf7380415b4f0a7312fa3ee7d753124d904b26e5e52f6b1df94deef2"
        },
        "downloads": -1,
        "filename": "realtpl-0.0.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ee52f73b259ee2ede82664aa0627f6b6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 39409,
        "upload_time": "2022-08-23T19:53:49",
        "upload_time_iso_8601": "2022-08-23T19:53:49.508864Z",
        "url": "https://files.pythonhosted.org/packages/24/43/97db73893ef03e9440eb0fb8b02d526515c83de5a7c9b47eeda071ddf05c/realtpl-0.0.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b2d448eddc00e6407d07a7812df4e4e70dbc68c9bb78ca2b50d3c3889d29b0a8",
          "md5": "35c1600a3e1d81725f1a26d259535b1d",
          "sha256": "555229cdead130579f0c5f2a3b9f953fbc642c5402773ff26ab20beb9515d0fc"
        },
        "downloads": -1,
        "filename": "realtpl-0.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "35c1600a3e1d81725f1a26d259535b1d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 35833,
        "upload_time": "2022-08-23T19:53:51",
        "upload_time_iso_8601": "2022-08-23T19:53:51.331842Z",
        "url": "https://files.pythonhosted.org/packages/b2/d4/48eddc00e6407d07a7812df4e4e70dbc68c9bb78ca2b50d3c3889d29b0a8/realtpl-0.0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "244397db73893ef03e9440eb0fb8b02d526515c83de5a7c9b47eeda071ddf05c",
        "md5": "ee52f73b259ee2ede82664aa0627f6b6",
        "sha256": "77613295cf7380415b4f0a7312fa3ee7d753124d904b26e5e52f6b1df94deef2"
      },
      "downloads": -1,
      "filename": "realtpl-0.0.9-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ee52f73b259ee2ede82664aa0627f6b6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 39409,
      "upload_time": "2022-08-23T19:53:49",
      "upload_time_iso_8601": "2022-08-23T19:53:49.508864Z",
      "url": "https://files.pythonhosted.org/packages/24/43/97db73893ef03e9440eb0fb8b02d526515c83de5a7c9b47eeda071ddf05c/realtpl-0.0.9-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b2d448eddc00e6407d07a7812df4e4e70dbc68c9bb78ca2b50d3c3889d29b0a8",
        "md5": "35c1600a3e1d81725f1a26d259535b1d",
        "sha256": "555229cdead130579f0c5f2a3b9f953fbc642c5402773ff26ab20beb9515d0fc"
      },
      "downloads": -1,
      "filename": "realtpl-0.0.9.tar.gz",
      "has_sig": false,
      "md5_digest": "35c1600a3e1d81725f1a26d259535b1d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 35833,
      "upload_time": "2022-08-23T19:53:51",
      "upload_time_iso_8601": "2022-08-23T19:53:51.331842Z",
      "url": "https://files.pythonhosted.org/packages/b2/d4/48eddc00e6407d07a7812df4e4e70dbc68c9bb78ca2b50d3c3889d29b0a8/realtpl-0.0.9.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}