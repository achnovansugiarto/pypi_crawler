{
  "info": {
    "author": "ETH Zurich, Laboratory of Physical Chemistry, Reiher Group",
    "author_email": "scine@phys.chem.ethz.ch",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Programming Language :: C++",
      "Programming Language :: Python",
      "Topic :: Scientific/Engineering :: Chemistry"
    ],
    "description": ".. image:: docs/source/res/chemoton_header.png\n   :alt: SCINE Chemoton\n\n.. inclusion-marker-do-not-remove\n\nIntroduction\n------------\n\nWith Chemoton you can explore complex chemical reaction networks in an automated\nfashion. Based on a Python framework, workflows can be built that probe reactivity\nof chemical systems with quantum chemical methods. Various quantum chemical software\nprograms and job schedulers are supported via the back-end software SCINE Puffin.\n\nLicense and Copyright Information\n---------------------------------\n\nChemoton is distributed under the BSD 3-clause \"New\" or \"Revised\" License.\nFor more license and copyright information, see the file ``LICENSE.txt`` in the\nrepository.\n\nInstallation\n------------\n\nPrerequisites\n.............\n\nThe key requirements for Chemoton are the Python packages ``scine_utilities``,\n``scine_database``, and ``scine_molassember``. These packages are available from\nPyPI and can be installed using ``pip``.\nHowever, these packages can also be compiled by hand. For the latter case please\nvisit the repositories of each of the packages and follow their guidelines.\n\nInstallation\n............\n\nChemoton can be installed using ``pip`` (``pip3``) once the repository has been cloned:\n\n.. code-block:: bash\n\n   git clone <chemoton-repo> chemoton\n   cd chemoton\n   pip install -r requirements.txt\n   pip install .\n\nA non-root user can install the package using a virtual environment, or\nthe ``--user`` flag.\n\nThe documentation can be found online, or it can be built using:\n\n.. code-block:: bash\n\n   make -C docs html\n\nIt is then available at:\n\n.. code-block:: bash\n\n   <browser-name> docs/build/html/index.html\n\nIn order to build the documentation, you need a few extra Python packages, which\nare not installed automatically together with Chemoton. In order to install them,\nrun\n\n.. code-block:: bash\n\n   pip install -r requirements-dev.txt\n\nTutorial\n--------\n\nMinimal Example\n...............\n\nAssuming that Chemoton has successfully been installed, a small example\nexploration can be started by running Chemoton's main function.\nIt requires a database running on ``localhost`` listening to the default\n``mongodb`` port ``27017``; additionally a ``puffin`` instance has to be\nrunning and checking the database named ``default``.\n\nSetting up these things may look somewhat like this:\n\n1. Start a ``mongodb`` server. Limit its memory usage and maybe customize where\nto log and store the data.\n\n.. code-block:: bash\n\n   mongod --fork --port=27017 -dbpath=<path to db storage dir> -wiredTigerCacheSizeGB=1 --logpath=mongo.log\n\n2. Configure and bootstrap a ``puffin``:\n\n.. code-block:: bash\n\n   python3 -m puffin configure\n   # Edit the generated puffin.yaml here\n   python3 -m puffin -c puffin.yaml bootstrap\n\n3. Source the ``puffin`` settings and tell it to listen to the correct DB.\n(Hostname and port should be the default ones.) Then start it.\n\n.. code-block:: bash\n\n   source puffin.sh\n   export PUFFIN_DATABASE_NAME=default\n   python3 -m puffin -c puffin.yaml start\n\n4. Run the Chemoton exploration defined in the ``__main__`` function:\n\n.. code-block:: bash\n\n   python3 -m scine_chemoton wipe\n\nThe optional ``wipe`` argument will start the example exploration with a clean\n``puffin_tests`` DB; giving the ``continue`` argument will reuse old data.\n\nExpanding on the Minimal Example\n................................\n\nThe functionalities used in Chemoton's ``__main__.py`` are a good starting point\nfor most simple explorations. The file contains a lot of settings that are\nexplicitly set to their defaults in order to show their existence.\n\nWhile we recommend to read the documentation of Chemoton, tinkering with\nexplorations can be as simple as:\n\n.. code-block:: bash\n\n   cp <chemoton-git>/scine_chemoton/__main__.py my_awesome_exploration.py\n\nand editing the file to your liking: disabling gears, adding filters or\njust changing methods.\n\nHow to Cite\n-----------\n\nWhen publishing results obtained with Chemoton, please cite the corresponding\nrelease as archived on `Zenodo <https://doi.org/10.5281/zenodo.6695583>`_ (DOI\n10.5281/zenodo.6695583; please use the DOI of the respective release).\n\nIn addition, we kindly request you to cite the following article when using Chemoton:\n\nJ. P. Unsleber, S. A. Grimmel, M. Reiher,\n\"Chemoton 2.0: Autonomous Exploration of Chemical Reaction Networks\",\n*arXiv:2202.13011 [physics.chem-ph].*\n\nSupport and Contact\n-------------------\n\nIn case you should encounter problems or bugs, please write a short message\nto scine@phys.chem.ethz.ch.",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://www.scine.ethz.ch",
    "keywords": "",
    "license": "BSD (3-clause)",
    "maintainer": "",
    "maintainer_email": "",
    "name": "scine-chemoton",
    "package_url": "https://pypi.org/project/scine-chemoton/",
    "platform": null,
    "project_url": "https://pypi.org/project/scine-chemoton/",
    "project_urls": {
      "Homepage": "https://www.scine.ethz.ch"
    },
    "release_url": "https://pypi.org/project/scine-chemoton/2.2.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Software driving the automated exploration of chemical reaction networks",
    "version": "2.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15189281,
  "releases": {
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd5d80449140e51bbb4133a2b4bfef310fefbdf3b4cac6e67efedd4a821ea4be",
          "md5": "ea882b323dc943b6418132c2d2b013f3",
          "sha256": "823f5730fc6f1329efd3687f476435f14907240201977955caefb0e483c86806"
        },
        "downloads": -1,
        "filename": "scine_chemoton-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ea882b323dc943b6418132c2d2b013f3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 201151,
        "upload_time": "2022-06-23T07:27:23",
        "upload_time_iso_8601": "2022-06-23T07:27:23.200887Z",
        "url": "https://files.pythonhosted.org/packages/bd/5d/80449140e51bbb4133a2b4bfef310fefbdf3b4cac6e67efedd4a821ea4be/scine_chemoton-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "51e3d39e2dd58050b7a3a8c1c081a2754efc1d4158ea646c9443609608661ef6",
          "md5": "ca126b939fef6035fb23f505f61c28a9",
          "sha256": "a1217d83fe2f302cde51cdd0cf69382e9ada16c0436859888707a816a67d9003"
        },
        "downloads": -1,
        "filename": "scine_chemoton-2.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ca126b939fef6035fb23f505f61c28a9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 239164,
        "upload_time": "2022-08-12T05:14:56",
        "upload_time_iso_8601": "2022-08-12T05:14:56.485951Z",
        "url": "https://files.pythonhosted.org/packages/51/e3/d39e2dd58050b7a3a8c1c081a2754efc1d4158ea646c9443609608661ef6/scine_chemoton-2.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9e2c3a11352d6a61564e8b4f804f1eb6963ce5d43e3c8db64051b9e452bb2f43",
          "md5": "39811590dbb479f5841140f3c5f20c99",
          "sha256": "cda4f9de1e1c00ecc5e0b2d9c17a5edb56b468d454022e3f4045ec116ba2ec45"
        },
        "downloads": -1,
        "filename": "scine_chemoton-2.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "39811590dbb479f5841140f3c5f20c99",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 255117,
        "upload_time": "2022-09-23T11:18:01",
        "upload_time_iso_8601": "2022-09-23T11:18:01.252491Z",
        "url": "https://files.pythonhosted.org/packages/9e/2c/3a11352d6a61564e8b4f804f1eb6963ce5d43e3c8db64051b9e452bb2f43/scine_chemoton-2.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9e2c3a11352d6a61564e8b4f804f1eb6963ce5d43e3c8db64051b9e452bb2f43",
        "md5": "39811590dbb479f5841140f3c5f20c99",
        "sha256": "cda4f9de1e1c00ecc5e0b2d9c17a5edb56b468d454022e3f4045ec116ba2ec45"
      },
      "downloads": -1,
      "filename": "scine_chemoton-2.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "39811590dbb479f5841140f3c5f20c99",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 255117,
      "upload_time": "2022-09-23T11:18:01",
      "upload_time_iso_8601": "2022-09-23T11:18:01.252491Z",
      "url": "https://files.pythonhosted.org/packages/9e/2c/3a11352d6a61564e8b4f804f1eb6963ce5d43e3c8db64051b9e452bb2f43/scine_chemoton-2.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}