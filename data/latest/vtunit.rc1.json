{
  "info": {
    "author": "Tony Martinet",
    "author_email": "tonymartinet@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2.7"
    ],
    "description": "[![Quality Gate Status](https://sonarcloud.io/api/project_badges/measure?project=vtunr_VTunit&metric=alert_status)](https://sonarcloud.io/dashboard?id=vtunr_VTunit)\n\n# VTunit\n\nThis is a unit test/mock framework based on Unity and fff, aimed for embedded developers.\n\n# Installation \n\nInstall the package with pip\n\n* `pip install -e git+https://github.com/vtunr/VTunit.git#egg=VTunit`\n* `pip install -e .` if you clone the repository (for development purpose)\n\n## Package to install (if you choose local build)\n\nOn ubuntu/WSL :\n\n* `sudo apt-get install cmake ninja-build ruby`\n* You'll also need `universal_ctag` :\n```\ngit clone https://github.com/universal-ctags/ctags.git\ncd ctags\n./autogen.sh \n./configure\nmake\nsudo make install\n``` \n\n# Setup unit test for a project\n\n* `python -m  vtunit {path_unit_test} init`\n\n# Creating a new unit test\n\n* `python -m vtunit {path_unit_test} new --file_name {my_file_name.c}`\n\nIt will generate into the test folder:\n* `test_{file_to_test}.c`\n* `test_{file_to_test}.cmake`\n\nYou then need to add the c file you want to compile for your test in the `test_{file_to_test}.cmake`.\n\nYou can also add include in `include.cmake`\n\n# Automatic mocking\n\nYou can automatically mock header.\n\nYou just need to add `mock_` prefix to the header you want to include :\n\n`#include \"mock_my_header.h\"`\n\n`#include \"mock_my_folder/my_header.h\"`\n\n# Prebuild / Postbuild\n\nThere is a way to run command before and after build (not after run)\n\nYou need to add :\n\n* `list(APPEND PREBUILD_CMD && cmd_you_want)` in `prebuild.cmake`\n* `list(APPEND POSTBUILD_CMD && cmd_you_want)` in `postbuild.cmake`\n\n# Running test\n\nRunning in WSL or linux : \n\n* If you want to force calling cmake (need to be done once before calling `run`): `python -m vtunit {path_unit_test} build --clean_all --cmake`\n* Then to build and run : `python -m vtunit {path_unit_test} build --run`\n* To clean : `python -m vtunit {path_unit_test} build --clean`\n\nYou can also filter the test you want to run :\n\n* To list : `python -m vtunit {path_unit_test} build --list --filter {my_regex}` (optional `--filter`)\n* To filter : `python -m vtunit {path_unit_test} build --run --filter {my_regex}`\n\nYou can also ignore prebuild/postbuild command by adding `--ignore_prebuild` and `--ignore_postbuild`\n\n# TODO :\n\n* Improve argparse\n* Add possibility to run it in a docker container\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/vtunr/VTunit",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "VTunit",
    "package_url": "https://pypi.org/project/VTunit/",
    "platform": "",
    "project_url": "https://pypi.org/project/VTunit/",
    "project_urls": {
      "Homepage": "https://github.com/vtunr/VTunit"
    },
    "release_url": "https://pypi.org/project/VTunit/0.0.1a0/",
    "requires_dist": [
      "argparse",
      "regex"
    ],
    "requires_python": ">=2.7",
    "summary": "Unit test helper",
    "version": "0.0.1a0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7000442,
  "releases": {
    "0.0.1a0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "10c1d389e15e0575c24968e33d0d0cafb95c0a97d955e0fe7ad2f43cfbcb6b06",
          "md5": "6fd56130ba8b828bd49799fd01be2075",
          "sha256": "06aae6913495fb6a8e5b906a01c8c98dce8ed68b898defc9a6e1530c53aca8b5"
        },
        "downloads": -1,
        "filename": "VTunit-0.0.1a0-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "6fd56130ba8b828bd49799fd01be2075",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": ">=2.7",
        "size": 9159,
        "upload_time": "2020-04-11T16:38:32",
        "upload_time_iso_8601": "2020-04-11T16:38:32.474242Z",
        "url": "https://files.pythonhosted.org/packages/10/c1/d389e15e0575c24968e33d0d0cafb95c0a97d955e0fe7ad2f43cfbcb6b06/VTunit-0.0.1a0-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ead7295eb07ae8d375e85a6f6e0fd20b617047a17f262d3b9327bf3bc19a94ad",
          "md5": "a8565a49bffa615a248d687af74c2603",
          "sha256": "61544d8e56381be7c1163c7a35a9e691f8d037e622dbac79d1c5412a32b09379"
        },
        "downloads": -1,
        "filename": "VTunit-0.0.1a0.tar.gz",
        "has_sig": false,
        "md5_digest": "a8565a49bffa615a248d687af74c2603",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 7192,
        "upload_time": "2020-04-11T16:38:34",
        "upload_time_iso_8601": "2020-04-11T16:38:34.820090Z",
        "url": "https://files.pythonhosted.org/packages/ea/d7/295eb07ae8d375e85a6f6e0fd20b617047a17f262d3b9327bf3bc19a94ad/VTunit-0.0.1a0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "10c1d389e15e0575c24968e33d0d0cafb95c0a97d955e0fe7ad2f43cfbcb6b06",
        "md5": "6fd56130ba8b828bd49799fd01be2075",
        "sha256": "06aae6913495fb6a8e5b906a01c8c98dce8ed68b898defc9a6e1530c53aca8b5"
      },
      "downloads": -1,
      "filename": "VTunit-0.0.1a0-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "6fd56130ba8b828bd49799fd01be2075",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "requires_python": ">=2.7",
      "size": 9159,
      "upload_time": "2020-04-11T16:38:32",
      "upload_time_iso_8601": "2020-04-11T16:38:32.474242Z",
      "url": "https://files.pythonhosted.org/packages/10/c1/d389e15e0575c24968e33d0d0cafb95c0a97d955e0fe7ad2f43cfbcb6b06/VTunit-0.0.1a0-py2-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ead7295eb07ae8d375e85a6f6e0fd20b617047a17f262d3b9327bf3bc19a94ad",
        "md5": "a8565a49bffa615a248d687af74c2603",
        "sha256": "61544d8e56381be7c1163c7a35a9e691f8d037e622dbac79d1c5412a32b09379"
      },
      "downloads": -1,
      "filename": "VTunit-0.0.1a0.tar.gz",
      "has_sig": false,
      "md5_digest": "a8565a49bffa615a248d687af74c2603",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=2.7",
      "size": 7192,
      "upload_time": "2020-04-11T16:38:34",
      "upload_time_iso_8601": "2020-04-11T16:38:34.820090Z",
      "url": "https://files.pythonhosted.org/packages/ea/d7/295eb07ae8d375e85a6f6e0fd20b617047a17f262d3b9327bf3bc19a94ad/VTunit-0.0.1a0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}