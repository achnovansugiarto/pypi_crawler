{
  "info": {
    "author": "Amr ElHusseiny",
    "author_email": "amroashram@hotmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Topic :: System :: Networking"
    ],
    "description": "# drawio_network_plot\n## Overview\n- Package is mainly created for Network Automation , can be used in conjunction with other libraries to generate DrawIO plot for your Network (Service Provider ot Data Centter Network).\n- Available devices : Router , L3_Switch , L2_switch , Firewall , Server ( More to be added )\n- Output generated can be directly opened by DrawIO application (Desktop or Web version)\n## Understanding the logic \nThe \"NetPlot\" class is itself the plot , you initiate it and then you can do the following : \n- Add a Node or a Nodes list .\n- Add an Edge or a list of Edges .\n>Note : the edges has Source and Destination nodes , better to always put the Parent device in the Source node and the Child node in the Destination node , this will affect the way DrawIO does automatic Layouts .\n- After you open the file in DrawIO , you will see everything stacked on top of each other , simply go to \"Arrange/Layout/Vertical Tree\" and it will arrange the nodes and like the hirarichy of the Data center , you can also try out other layout options .\n## Examples\n### Example 1 : Datacenter Plot \nthis example demonstrates how to use both the addition of object or list of objects at once : \n#### Code\n```python\n\nfrom drawio_network_plot import NetPlot\n\ndevice_list = [\n                # Routers\n                {'nodeName' : 'Router_1','nodeType' : 'router','nodeDescription' : 'External Peering Provider 1'},\n                {'nodeName' : 'Router_2','nodeType' : 'router','nodeDescription' : 'External Peering Provider 2'},\n                # Core\n                {'nodeName' : 'Core_switch_1','nodeType' : 'l3_switch','nodeDescription' : 'Spine Switch 01'},\n                {'nodeName' : 'Core_switch_2','nodeType' : 'l3_switch','nodeDescription' : 'Spine Switch 02'},\n                # Firewalls\n                {'nodeName' : 'FW_1','nodeType' : 'firewall','nodeDescription' : 'Firewall 01'},\n                {'nodeName' : 'FW_2','nodeType' : 'firewall','nodeDescription' : 'Firewall 02'},\n                # Leafs\n                {'nodeName' : 'TOR_1','nodeType' : 'l2_switch','nodeDescription' : 'Leaf Switch 01'},\n                {'nodeName' : 'TOR_2','nodeType' : 'l2_switch','nodeDescription' : 'Leaf Switch 02'},\n                {'nodeName' : 'TOR_3','nodeType' : 'l2_switch','nodeDescription' : 'Leaf Switch 03'},\n                {'nodeName' : 'TOR_4','nodeType' : 'l2_switch','nodeDescription' : 'Leaf Switch 04'},\n                # Servers \n                {'nodeName' : 'Server_1','nodeType' : 'server','nodeDescription' : 'Server 1'},\n                {'nodeName' : 'Server_2','nodeType' : 'server','nodeDescription' : 'Server 2'},\n                {'nodeName' : 'Server_3','nodeType' : 'server','nodeDescription' : 'Server 3'},\n                {'nodeName' : 'Server_4','nodeType' : 'server','nodeDescription' : 'Server 4'},\n                {'nodeName' : 'Server_5','nodeType' : 'server','nodeDescription' : 'Server 5'},\n                {'nodeName' : 'Server_6','nodeType' : 'server','nodeDescription' : 'Server 6'},\n                {'nodeName' : 'Server_7','nodeType' : 'server','nodeDescription' : 'Server 7'},\n                {'nodeName' : 'Server_8','nodeType' : 'server','nodeDescription' : 'Server 8'},\n                {'nodeName' : 'Server_9','nodeType' : 'server','nodeDescription' : 'Server 9'},\n                {'nodeName' : 'Server_10','nodeType' : 'server','nodeDescription' : 'Server 10'},\n                {'nodeName' : 'Server_11','nodeType' : 'server','nodeDescription' : 'Server 11'},\n                {'nodeName' : 'Server_12','nodeType' : 'server','nodeDescription' : 'Server 12'},\n                {'nodeName' : 'Server_13','nodeType' : 'server','nodeDescription' : 'Server 13'},\n                {'nodeName' : 'Server_14','nodeType' : 'server','nodeDescription' : 'Server 14'},\n                {'nodeName' : 'Server_15','nodeType' : 'server','nodeDescription' : 'Server 15'},\n                {'nodeName' : 'Server_16','nodeType' : 'server','nodeDescription' : 'Server 16'},\n              ]\n\n\nconnection_list = [\n                    # Router to Core\n                    {'sourceNodeID' : 'Router_1','destinationNodeID' : 'Core_switch_1'},\n                    {'sourceNodeID' : 'Router_1','destinationNodeID' : 'Core_switch_2'},\n                    {'sourceNodeID' : 'Router_2','destinationNodeID' : 'Core_switch_1'},\n                    {'sourceNodeID' : 'Router_2','destinationNodeID' : 'Core_switch_2'},\n                    # Core to FW \n                    {'sourceNodeID' : 'Core_switch_1','destinationNodeID' : 'FW_1'},\n                    {'sourceNodeID' : 'Core_switch_2','destinationNodeID' : 'FW_2'},\n                    # Core to TOR \n                    {'sourceNodeID' : 'Core_switch_1','destinationNodeID' : 'TOR_1'},\n                    {'sourceNodeID' : 'Core_switch_1','destinationNodeID' : 'TOR_2'},\n                    {'sourceNodeID' : 'Core_switch_1','destinationNodeID' : 'TOR_3'},\n                    {'sourceNodeID' : 'Core_switch_1','destinationNodeID' : 'TOR_4'},\n                    {'sourceNodeID' : 'Core_switch_2','destinationNodeID' : 'TOR_1'},\n                    {'sourceNodeID' : 'Core_switch_2','destinationNodeID' : 'TOR_2'},\n                    {'sourceNodeID' : 'Core_switch_2','destinationNodeID' : 'TOR_3'},\n                    {'sourceNodeID' : 'Core_switch_2','destinationNodeID' : 'TOR_4'},\n                    # TOR to Server \n                    {'sourceNodeID' : 'TOR_1','destinationNodeID' : 'Server_1'},\n                    {'sourceNodeID' : 'TOR_2','destinationNodeID' : 'Server_2'},\n                    {'sourceNodeID' : 'TOR_3','destinationNodeID' : 'Server_3'},\n                    {'sourceNodeID' : 'TOR_4','destinationNodeID' : 'Server_4'},\n                    {'sourceNodeID' : 'TOR_1','destinationNodeID' : 'Server_5'},\n                    {'sourceNodeID' : 'TOR_2','destinationNodeID' : 'Server_6'},\n                    {'sourceNodeID' : 'TOR_3','destinationNodeID' : 'Server_7'},\n                    {'sourceNodeID' : 'TOR_4','destinationNodeID' : 'Server_8'},\n                    {'sourceNodeID' : 'TOR_1','destinationNodeID' : 'Server_9'},\n                    {'sourceNodeID' : 'TOR_2','destinationNodeID' : 'Server_10'},\n                    {'sourceNodeID' : 'TOR_3','destinationNodeID' : 'Server_11'},\n                    {'sourceNodeID' : 'TOR_4','destinationNodeID' : 'Server_12'},\n                    {'sourceNodeID' : 'TOR_1','destinationNodeID' : 'Server_13'},\n                    {'sourceNodeID' : 'TOR_2','destinationNodeID' : 'Server_14'},\n                    {'sourceNodeID' : 'TOR_3','destinationNodeID' : 'Server_15'},\n                    {'sourceNodeID' : 'TOR_4','destinationNodeID' : 'Server_16'},               \n                ]\n# Initiating an Plot instance \nx = NetPlot()\n# Adding node by node and edge by edge\nx.addNode(nodeName='Router_17',nodeType='router')\nx.addNode(nodeName='Router_18',nodeType='router')\n# Adding lists of nodes and edges \nx.addLink('Router_17','Router_18')\nx.addLink('Router_17','Router_1')\nx.addNodeList(device_list)\nx.addLinkList(connection_list)\n\n# Output \n# 1- using method \"display_xml\"\nprint(x.display_xml())\n# 2- printing the class will automatically call the \"display_xml\" method\nprint(x)\n# 3- Exporting to XML file directly\nx.exportXML('examples/output.xml')\n\n```\n#### Output\n![Data Center Example output](examples/example_1_output_snapshot.png)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "python,first package",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "drawio-network-plot",
    "package_url": "https://pypi.org/project/drawio-network-plot/",
    "platform": null,
    "project_url": "https://pypi.org/project/drawio-network-plot/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/drawio-network-plot/0.0.2b0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Plot Network using python , and output to DrawIO file",
    "version": "0.0.2b0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14756636,
  "releases": {
    "0.0.2b0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "176432b89b5e1e816dfec083f55d07d0a99783caa6032c938cab5e0af7d80352",
          "md5": "25f43681e36dc626b32f363e7664fc2b",
          "sha256": "10e7fc23858a3ce1bde637b228c6d28d44b1c66828e8d0149cd5f85ca75867ad"
        },
        "downloads": -1,
        "filename": "drawio_network_plot-0.0.02.Beta.tar.gz",
        "has_sig": false,
        "md5_digest": "25f43681e36dc626b32f363e7664fc2b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5779,
        "upload_time": "2022-08-14T15:32:43",
        "upload_time_iso_8601": "2022-08-14T15:32:43.406452Z",
        "url": "https://files.pythonhosted.org/packages/17/64/32b89b5e1e816dfec083f55d07d0a99783caa6032c938cab5e0af7d80352/drawio_network_plot-0.0.02.Beta.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "176432b89b5e1e816dfec083f55d07d0a99783caa6032c938cab5e0af7d80352",
        "md5": "25f43681e36dc626b32f363e7664fc2b",
        "sha256": "10e7fc23858a3ce1bde637b228c6d28d44b1c66828e8d0149cd5f85ca75867ad"
      },
      "downloads": -1,
      "filename": "drawio_network_plot-0.0.02.Beta.tar.gz",
      "has_sig": false,
      "md5_digest": "25f43681e36dc626b32f363e7664fc2b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 5779,
      "upload_time": "2022-08-14T15:32:43",
      "upload_time_iso_8601": "2022-08-14T15:32:43.406452Z",
      "url": "https://files.pythonhosted.org/packages/17/64/32b89b5e1e816dfec083f55d07d0a99783caa6032c938cab5e0af7d80352/drawio_network_plot-0.0.02.Beta.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}