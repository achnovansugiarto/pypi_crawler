{
  "info": {
    "author": "lingtengqiu",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Open-PIFuhd\n\nThis is a **unofficial** implementation of [PIFuhd](https://github.com/facebookresearch/pifuhd)\n\n[PIFuHD: Multi-Level Pixel-Aligned Implicit Function forHigh-Resolution 3D Human Digitization](https://openaccess.thecvf.com/content_CVPR_2020/papers/Saito_PIFuHD_Multi-Level_Pixel-Aligned_Implicit_Function_for_High-Resolution_3D_Human_Digitization_CVPR_2020_paper.pdf)(CVPR2020) \n![](py_pifuhd/show_image/pipeline.png)\n\n## Implementation\n\n- [x] Training Coarse PIFuhd\n- [x] Training Fine PIFuhd\n- [x] Inference\n- [x] metrics(P2S, Normal, Chamfer)\n- [x] Gan generates front normal and back normal ([Link](https://github.com/lingtengqiu/Open-PIFuhd/tree/pix2pixhd-pifuhd))\n- [ ] Unsigned distance field and signed distance filed\n\nNote that the pipeline I design do not consider normal map generated by pix2pixHD because it is **Not** main difficulty we reimplement PIFuHD. \n\n## Prerequisites\n\n- PyTorch>=1.6\n- json\n- PIL\n- skimage\n- tqdm\n- cv2\n- [trimesh](https://trimsh.org/) with [pyembree](https://github.com/scopatz/pyembree)\n- [pyexr](https://github.com/tvogels/pyexr)\n- PyOpenGL\n- freeglut (use `sudo apt-get install freeglut3-dev` for ubuntu users)\n- (optional) egl related packages for rendering with headless machines. (use `apt install libgl1-mesa-dri libegl1-mesa libgbm1` for ubuntu users)\n- [face3d](https://github.com/YadiraF/face3d)\n\n## Data processed\n\nWe use [Render People](https://renderpeople.com/free-3d-people/) as our datasets but the data size is 296 (270 for training while 26 for testing) which is less than paper said 500.\n\nNote that we are unable to release the full training data due to the  restriction of commertial scans.\n\n### Initial data\n\nI modified part codes in PIFu (branch: [PIFu-modify](https://github.com/lingtengqiu/Open-PIFuhd/tree/PIFu-modify), and download it into your project) in order to could process dirs where your model save\n\n```bash\nbash ./scripts/process_obj.sh [--dir_models_path]\n#e.g.  bash ./scripts/process_obj.sh ../Garment/render_people_train/\n```\n\n ### Rendering data\n\nI modified part codes in PIFu in order to could process dirs where your model save\n\n```Bash\npython -m apps.render_data -i [--dir_models_path] -o [--save_processed_models_path] -s 1024 [Optional: -e]\n#-e means use GPU rendering\n#e.g.python -m apps.render_data -i ../Garment/render_people_train/ -o ../Garment/render_gen_1024_train/ -s 1024 -e\n```\n\n### Render Normal Map\n\nRendering front and back normal map In **Current Project**\n\n```bash\nAll config params is set in ./configs/PIFuhd_Render_People_HG_coarse.py, bash ./scripts/generate.sh\n\n# the params you could modify from ./configs/PIFuhd_Render_People_HG_normal_map.py\n# the import params here is \n#  e.g. input_dir = '../Garment/render_gen_1024_train/' and cache= \"../Garment/cache/render_gen_1024/rp_train/\"\n# inpud_dir means output render_gen_1024_train\n# cache means where save intermediate results like sample points from mesh\n```\n\nAfter processing all datasets, **Tree-Structured Directory** looks like following:\n\n```\nrender_gen_1024_train/\n├── rp_aaron_posed_004_BLD\n│   ├── GEO\n│   ├── MASK\n│   ├── PARAM\n│   ├── RENDER\n│   ├── RENDER_NORMAL\n│   ├── UV_MASK\n│   ├── UV_NORMAL\n│   ├── UV_POS\n│   ├── UV_RENDER\n│   └── val.txt\n├── rp_aaron_posed_005_BLD\n\t....\n```\n\n\n\n## Training \n\n### Training coarse-pifuhd\n\nAll config params is set in ./configs/PIFuhd_Render_People_HG_coarse.py, Where you could modify all you want.\n\nNote that this project I designed is friend, which means you could easily replace origin backbone, head by yours :)\n\n```bash \nbash ./scripts/train_pfhd_coarse.sh\n```\n\n### Training Fine-PIFuhd\n\nthe same as coarse PIFuhd, all config params is set in ./configs/PIFuhd_Render_People_HG_fine.py, \n\n```bash \nbash ./scripts/train_pfhd_fine.sh\n```\n\n**If you meet memory problems about GPUs, pls reduce batch_size in ./config/*.py **\n\n## Inference\n\n```bash\nbash ./scripts/test_pfhd_coarse.sh\n#or \nbash ./scripts/test_pfhd_fine.sh\n```\n\nthe results will be saved into checkpoints/PIFuhd_Render_People_HG_[coarse/fine]/gallery/test/model_name/*.obj, then you could use meshlab to view the generate models.\n\n## Metrics\n\n```bash\nexport MESA_GL_VERSION_OVERRIDE=3.3 \n# eval coarse-pifuhd\npython ./tools/eval_pifu.py  --config ./configs/PIFuhd_Render_People_HG_coarse.py\n# eval fine-pifuhd\npython ./tools/eval_pifu.py  --config ./configs/PIFuhd_Render_People_HG_fine.py\n```\n\n\n## Pretrained weights\n\nWe provide the pretrained models of PIFuhd([fine-pifuhd](https://drive.google.com/file/d/1u7RGEQaeStGUxl_m7xPRORZa9pkpvwDA/view?usp=sharing), [coarse-pifuhd](https://drive.google.com/file/d/1m-KAq1phC-AGAjfaN1N9PDRYoiJWDSJZ/view?usp=sharing))\n\nNote that the training models use front or back normal map rendered from mesh instead of being obtained by GANs. Therefore you need render the normal map of test obj \n\n\n## Demo\n\nwe provide rendering code using free models in [RenderPeople](https://renderpeople.com/free-3d-people/). This tutorial uses `rp_dennis_posed_004` model. Please download the model from [this link](https://renderpeople.com/sample/free/rp_dennis_posed_004_OBJ.zip) and unzip the content. Use following command to reconstruct the model:\n\n```bash\n\n```\n\n## Debug\n\nI provide bool params(debug in all of config files) to you to check whether your points sampled from mesh is right. There are examples:\n\n![](py_pifuhd/show_image/pifuhd_crop_debug/pifuhd_fine_debug.png)\n\n## Visualization\n\n**As following show, left is input image, mid is the results of coarse-pifuhd, right is fine-pifuhd**\n\n![](py_pifuhd/show_image/compare_imgs/a.png)\n\n![](py_pifuhd/show_image/compare_imgs/b.png)\n\n![](py_pifuhd/show_image/compare_imgs/c.png)\n\n\n\n## Reconstruction on Render People Datasets\n\n**Note that our training datasets are less than official one(270 for our while 450 for paper) resulting in the performance changes in some degree**\n\n|                                       | IoU        | ACC        | recall     |  P2S  | Normal | Chamfer |\n| :------------------------------------ | ---------- | ---------- | ---------- | :---: | :----: | :-----: |\n| PIFu                                  | 0.748      | 0.880      | 0.856      | 1.801 | 0.1446 |  2.00   |\n| Coarse-PIFuhd(+Front and back normal) | 0.865(5cm) | 0.931(5cm) | 0.923(5cm) | 1.242 | 0.1205 | 1.4015  |\n| Fine-PIFuhd(+Front and back normal)   | 0.813(3cm) | 0.896(3cm) | 0.904(3cm) |   -   | 0.1138 |    -    |\n\n**There is an issue why p2s of fine-pifuhd is bit large than coarse-pifuhd. This is because I do not add some post-processing to clean some chaos in reconstruction. However, the details of human mesh produced by fine-pifuhd are obviously better than coarse-pifuhd.**\n\n## About Me\n\nI hope that this project could provide some contributions to our communities, especially for implicit-field.\n\nBy the way, If you think the project is helpful to you, pls don’t forget to star this project : ) \n\n## Related Research\n\n**[Monocular Real-Time Volumetric Performance Capture (ECCV 2020)](https://project-splinter.github.io/)**\n *Ruilong Li\\*, Yuliang Xiu\\*, Shunsuke Saito, Zeng Huang, Kyle Olszewski, Hao Li*\n\n**[PIFuHD: Multi-Level Pixel-Aligned Implicit Function for High-Resolution 3D Human Digitization (CVPR 2020)](https://shunsukesaito.github.io/PIFuHD/)**\n *Shunsuke Saito, Tomas Simon, Jason Saragih, Hanbyul Joo*\n\n**[ARCH: Animatable Reconstruction of Clothed Humans (CVPR 2020)](https://arxiv.org/pdf/2004.04572.pdf)**\n *Zeng Huang, Yuanlu Xu, Christoph Lassner, Hao Li, Tony Tung*\n\n**[Robust 3D Self-portraits in Seconds (CVPR 2020)](http://www.liuyebin.com/portrait/portrait.html)**\n *Zhe Li, Tao Yu, Chuanyu Pan, Zerong Zheng, Yebin Liu*\n\n**[Learning to Infer Implicit Surfaces without 3d Supervision (NeurIPS 2019)](http://papers.nips.cc/paper/9039-learning-to-infer-implicit-surfaces-without-3d-supervision.pdf)**\n *Shichen Liu, Shunsuke Saito, Weikai Chen, Hao Li*\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/lingtengqiu/Open-PIFuhd",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pypifuhd",
    "package_url": "https://pypi.org/project/pypifuhd/",
    "platform": "",
    "project_url": "https://pypi.org/project/pypifuhd/",
    "project_urls": {
      "Homepage": "https://github.com/lingtengqiu/Open-PIFuhd"
    },
    "release_url": "https://pypi.org/project/pypifuhd/2.0.0/",
    "requires_dist": [
      "torch (==1.9.0)",
      "torchvision (==0.10.0)",
      "mmcv (==1.3.10)",
      "trimesh (==3.9.25)",
      "scipy (==1.7.0)",
      "einops (==0.3.0)",
      "Pillow (==8.3.1)",
      "scikit-image (==0.18.2)",
      "tqdm (==4.61.2)",
      "opencv-python (==4.5.3.56)",
      "PyOpenGL (==3.1.5)",
      "cython (==0.29.24)",
      "rtree (==0.9.7)"
    ],
    "requires_python": "",
    "summary": "pypifuhd: Python tools for processing 3D face",
    "version": "2.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11062325,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b55cca64ebd6462f8411817db6c8afb52f3bc53bc02d666c8d78c84a90a0d19e",
          "md5": "e255178057a9864beae29ba3f73a4a44",
          "sha256": "2526a9322b786865f737b32b02c90cf7883c4cb6b9f062fda0cba3382a8a183e"
        },
        "downloads": -1,
        "filename": "pypifuhd-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e255178057a9864beae29ba3f73a4a44",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 216563,
        "upload_time": "2021-08-01T12:35:11",
        "upload_time_iso_8601": "2021-08-01T12:35:11.196615Z",
        "url": "https://files.pythonhosted.org/packages/b5/5c/ca64ebd6462f8411817db6c8afb52f3bc53bc02d666c8d78c84a90a0d19e/pypifuhd-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "afa6cecf844f89e6e68a4f4a766ddf2b74ca81f8345892d4ccdf564af9c334c2",
          "md5": "5efd71aa2ced54a311339fc3e9bd52a5",
          "sha256": "276d65437fcc42073a9e26074355722dd0060417c46a74f41f40d5bf688786a6"
        },
        "downloads": -1,
        "filename": "pypifuhd-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5efd71aa2ced54a311339fc3e9bd52a5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 65182,
        "upload_time": "2021-07-31T13:02:59",
        "upload_time_iso_8601": "2021-07-31T13:02:59.858337Z",
        "url": "https://files.pythonhosted.org/packages/af/a6/cecf844f89e6e68a4f4a766ddf2b74ca81f8345892d4ccdf564af9c334c2/pypifuhd-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d2f0d64da7e5a20369171bffcf069bd695fce11b6af768d45607aa5974416ca9",
          "md5": "4558e785da438a95b9eccdb60a7b1d1c",
          "sha256": "3223d1d96c063f28d2e9c2b072fec110601af2abf18c17924aa6056886cf06e6"
        },
        "downloads": -1,
        "filename": "pypifuhd-2.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4558e785da438a95b9eccdb60a7b1d1c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 216562,
        "upload_time": "2021-08-01T12:37:11",
        "upload_time_iso_8601": "2021-08-01T12:37:11.583773Z",
        "url": "https://files.pythonhosted.org/packages/d2/f0/d64da7e5a20369171bffcf069bd695fce11b6af768d45607aa5974416ca9/pypifuhd-2.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eb7c732286b230bf157b2f9b5e4f3f6fccec3684c4833522862991a24fb38ae3",
          "md5": "ea29d90c2970b18b6e00c38eab4b3baa",
          "sha256": "425af67ce487bab96e3e9bf1aa2f90e7cc18847494a31dee022dc2426f2e826f"
        },
        "downloads": -1,
        "filename": "pypifuhd-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ea29d90c2970b18b6e00c38eab4b3baa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 155490,
        "upload_time": "2021-08-01T12:37:13",
        "upload_time_iso_8601": "2021-08-01T12:37:13.514469Z",
        "url": "https://files.pythonhosted.org/packages/eb/7c/732286b230bf157b2f9b5e4f3f6fccec3684c4833522862991a24fb38ae3/pypifuhd-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d2f0d64da7e5a20369171bffcf069bd695fce11b6af768d45607aa5974416ca9",
        "md5": "4558e785da438a95b9eccdb60a7b1d1c",
        "sha256": "3223d1d96c063f28d2e9c2b072fec110601af2abf18c17924aa6056886cf06e6"
      },
      "downloads": -1,
      "filename": "pypifuhd-2.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4558e785da438a95b9eccdb60a7b1d1c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 216562,
      "upload_time": "2021-08-01T12:37:11",
      "upload_time_iso_8601": "2021-08-01T12:37:11.583773Z",
      "url": "https://files.pythonhosted.org/packages/d2/f0/d64da7e5a20369171bffcf069bd695fce11b6af768d45607aa5974416ca9/pypifuhd-2.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "eb7c732286b230bf157b2f9b5e4f3f6fccec3684c4833522862991a24fb38ae3",
        "md5": "ea29d90c2970b18b6e00c38eab4b3baa",
        "sha256": "425af67ce487bab96e3e9bf1aa2f90e7cc18847494a31dee022dc2426f2e826f"
      },
      "downloads": -1,
      "filename": "pypifuhd-2.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "ea29d90c2970b18b6e00c38eab4b3baa",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 155490,
      "upload_time": "2021-08-01T12:37:13",
      "upload_time_iso_8601": "2021-08-01T12:37:13.514469Z",
      "url": "https://files.pythonhosted.org/packages/eb/7c/732286b230bf157b2f9b5e4f3f6fccec3684c4833522862991a24fb38ae3/pypifuhd-2.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}