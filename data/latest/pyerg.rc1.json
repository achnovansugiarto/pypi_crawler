{
  "info": {
    "author": "Alessandro Bacchini",
    "author_email": "alessandro.bacchini@henesis.eu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering"
    ],
    "description": "# Pyerg\n\nPyerg is a C++ library with a Python wrapper for reading the ERG files produced by IPG CarMaker program.\nThe library implements the specifications of the ERG file format described in the IPG CarMaker reference manual.\n\nHenesis s.r.l. is not affiliated with IPG, the developer of CarMaker program.\n\n## Requisites\n\n### Python library\n\n- Linux, Windows (tested within Anaconda)\n- Python >=3.7\n- Numpy >= 1.14\n- GCC >= 4.7\n\n### C++ library\n\n- CMake\n- Google test library (optional, for building the C++ library)\n\n## Install Python extension\n\nRun `python setup.py install` to install the `pyerg` module.\n\n## Build C++ library\n\nCreate a `build` directory in the current folder and from that directory run:\n\n```\ncmake ..\n```\n\nAnd then\n\n```\nmake\n```\n\nThe default behavior is to build a static (`erg_s`) and a shared (`erg`) version of the Erg parser library.\n\n### CMake options:\n\n- `BUILD_PYTHON_MODULE` enable the building of the `pyerg` Python module.\n  When building the Python module using CMake, please check that the `NUMPY_INCLUDE_DIR`\n  in the `pyerg/CMakeLists.txt` contains the right path to the Numpy headers.\n- `BUILD_TESTS` enable the building test program for the C++ library. Data for testing is not included.\n\nUse:\n\n```\ncmake .. -DBUILD_PYTHON_MODULE=ON -DBUILD_TESTS=ON\n```\n\nTo build the C++ library, the Python `pyerg` module and the C++ tests.\n\n\n## Examples of use\n\n### C++\n\n```\n#include <erg.h>\n\n...\n\nerg::Reader parser;\n\n// Read all erg format\nparser.open(\"my_file.erg\");\n\n// Allocate the destination memory using vector<byte> as container\nstd::vector<std::vector<uint8_t>> data(parser.numQuanities());\nfor(int i=0; i<data.size(); ++i)\n    data[i].assign(parser.quantitySize(i), 0);\n\n// Create a vector of pointer to the allocated memory to\n// store the data\nstd::vector<uint8_t*> dataPtrList;\nstd::vector<size_t> dataPtrListSize;\nfor(std::vector<uint8_t>& v: data)\n{\n    dataPtrList.push_back(v.data());\n    dataPtrListSize.push_back(v.size());\n}\n\nsize_t numRows = parser.readAll(dataPtrList, dataWrapperSize);\n\n// data is a vector of vector<byte> with all the quantities from\n// the erg file.\n```\n\n### Python\n\n```\nimport pyerg\n\nparser = pyerg.Reader()\nparser.open(\"my_file.erg\")\ndata = parser.readAll()\n\n# data is a dict of numpy.ndarray with all the quantities from\n# the erg file.\n\n```\n\nSee the test applications for more usage examples.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://www.henesis.eu",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyerg",
    "package_url": "https://pypi.org/project/pyerg/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyerg/",
    "project_urls": {
      "Homepage": "http://www.henesis.eu"
    },
    "release_url": "https://pypi.org/project/pyerg/0.6.1/",
    "requires_dist": [
      "numpy (>=1.14)"
    ],
    "requires_python": "",
    "summary": "Python C extension to read IPG CarMaker ERG files",
    "version": "0.6.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9768738,
  "releases": {
    "0.6.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "98389bc41ea0d02b047a3eb76ecdc05ba468c33e160018bc29c62351d6569c81",
          "md5": "b9330eb8eccbb6363abaf41d5e073437",
          "sha256": "cdb612bf53c51dc79b912a4c546d64926c2a0e2b6731d19f792513ad81e35b8d"
        },
        "downloads": -1,
        "filename": "pyerg-0.6.1-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "b9330eb8eccbb6363abaf41d5e073437",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": null,
        "size": 38706,
        "upload_time": "2021-03-14T23:47:44",
        "upload_time_iso_8601": "2021-03-14T23:47:44.487658Z",
        "url": "https://files.pythonhosted.org/packages/98/38/9bc41ea0d02b047a3eb76ecdc05ba468c33e160018bc29c62351d6569c81/pyerg-0.6.1-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0e09a66b1cb24a86162d2858402e2b76bd1afd18ba078c8788da2fd7b457a5fd",
          "md5": "54911398802c2bbebe753b33d94e0763",
          "sha256": "7c0d4d5ae0589d1356a0c6631af9f1401e8a5255efe83276964df6f56d682b36"
        },
        "downloads": -1,
        "filename": "pyerg-0.6.1.tar.gz",
        "has_sig": false,
        "md5_digest": "54911398802c2bbebe753b33d94e0763",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24246345,
        "upload_time": "2021-03-14T23:48:11",
        "upload_time_iso_8601": "2021-03-14T23:48:11.258512Z",
        "url": "https://files.pythonhosted.org/packages/0e/09/a66b1cb24a86162d2858402e2b76bd1afd18ba078c8788da2fd7b457a5fd/pyerg-0.6.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "98389bc41ea0d02b047a3eb76ecdc05ba468c33e160018bc29c62351d6569c81",
        "md5": "b9330eb8eccbb6363abaf41d5e073437",
        "sha256": "cdb612bf53c51dc79b912a4c546d64926c2a0e2b6731d19f792513ad81e35b8d"
      },
      "downloads": -1,
      "filename": "pyerg-0.6.1-cp37-cp37m-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "b9330eb8eccbb6363abaf41d5e073437",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": null,
      "size": 38706,
      "upload_time": "2021-03-14T23:47:44",
      "upload_time_iso_8601": "2021-03-14T23:47:44.487658Z",
      "url": "https://files.pythonhosted.org/packages/98/38/9bc41ea0d02b047a3eb76ecdc05ba468c33e160018bc29c62351d6569c81/pyerg-0.6.1-cp37-cp37m-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0e09a66b1cb24a86162d2858402e2b76bd1afd18ba078c8788da2fd7b457a5fd",
        "md5": "54911398802c2bbebe753b33d94e0763",
        "sha256": "7c0d4d5ae0589d1356a0c6631af9f1401e8a5255efe83276964df6f56d682b36"
      },
      "downloads": -1,
      "filename": "pyerg-0.6.1.tar.gz",
      "has_sig": false,
      "md5_digest": "54911398802c2bbebe753b33d94e0763",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 24246345,
      "upload_time": "2021-03-14T23:48:11",
      "upload_time_iso_8601": "2021-03-14T23:48:11.258512Z",
      "url": "https://files.pythonhosted.org/packages/0e/09/a66b1cb24a86162d2858402e2b76bd1afd18ba078c8788da2fd7b457a5fd/pyerg-0.6.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}