{
  "info": {
    "author": "",
    "author_email": "plugins@cleantalk.org",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "cleantalk_python_antispam\r\n===============\r\n\r\nA Python API for antispam service cleantalk.org. Invisible protection from spam, no captches, no puzzles, no animals and no math.\r\n\r\n## How API stops spam?\r\nAPI uses several simple tests to stop spammers.\r\n- Spam bots signatures.\r\n- Blacklists checks by Email, IP, web-sites domain names.\r\n- JavaScript availability.\r\n- Comment submit time.\r\n- Relevance test for the comment.\r\n\r\n## How API works?\r\nAPI sends a comment's text and several previous approved comments to the servers. Servers evaluates the relevance of the comment's text on the topic, tests on spam and finaly provides a solution - to publish or put on manual moderation of comments. If a comment is placed on manual moderation, the plugin adds to the text of a comment explaining the reason for the ban server publishing.\r\n\r\n## Requirements\r\n\r\n- Python 2.6 and above\r\n- Python 3 and above \r\n\r\n## SPAM test for text comment sample \r\n\r\n```python\r\nfrom cleantalk import CleanTalk\r\n\r\n\r\nct = CleanTalk(auth_key='yourkey')\r\nct_result = ct.request(\r\n\tmessage = 'abc', # Visitor comment\r\n\tsender_ip = '196.19.250.114', # Visitor IP address\r\n\tsender_email = 'stop_email@example.com', # Visitor email\r\n\tsender_nickname = 'spam_bot', # Visitor nickname\r\n\tjs_on = 1, # Is visitor has JavaScript\r\n\tsubmit_time = 12 # Seconds from start form filling till the form POST\r\n)\r\n#Check\r\nif ct_result['allow']:\r\n\tprint('Comment allowed. Reason ' + ct_result['comment'])\r\n\t\r\n\tprint('Comment blocked. Reason ' + ct_result['comment'])\r\n```\r\n\r\n## API Response description\r\nAPI returns Python dictionary object, where keys:\r\n- allow (0|1) - allow to publish or not, in other words spam or ham\r\n- comment (string) - server comment for requests.\r\n- id (string MD5 HEX hash) - unique request idenifier.\r\n  \r\n## Installing via PyPi\r\nRun the next command in the terminal:\r\n```python\r\npip install cleantalk-python-antispam\r\n```\r\nThen you can use Cleantalk class import:\r\n```python\r\nfrom cleantalk_python_antispam.cleantalk import CleanTalk\r\n```\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cleantalk-python-antispam",
    "package_url": "https://pypi.org/project/cleantalk-python-antispam/",
    "platform": null,
    "project_url": "https://pypi.org/project/cleantalk-python-antispam/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/cleantalk-python-antispam/1.2.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "CleanTalk module for Python",
    "version": "1.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17374143,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "99d5759372ef97b46f41c793d720e80ad20b21f0ffe4467085a9d6b8ef989edc",
          "md5": "6a59bbf9fd753dc47a7847f448545e20",
          "sha256": "b712ed0e53fef0b8ec86ee6893c8b99e0df08d287e93189440b513b44ce18178"
        },
        "downloads": -1,
        "filename": "cleantalk_python_antispam-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6a59bbf9fd753dc47a7847f448545e20",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3474,
        "upload_time": "2022-05-10T10:11:39",
        "upload_time_iso_8601": "2022-05-10T10:11:39.331178Z",
        "url": "https://files.pythonhosted.org/packages/99/d5/759372ef97b46f41c793d720e80ad20b21f0ffe4467085a9d6b8ef989edc/cleantalk_python_antispam-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea3aff7269ad6bbf8a5746161c193ad5465c0f648049963d107a0f6a8095f5ce",
          "md5": "d7b839c4c470cdb9596ec99adf517c99",
          "sha256": "aa206c269d4847136124f92725ec24e0a3892613fc7d68e6fb5d18eee816a2f8"
        },
        "downloads": -1,
        "filename": "cleantalk_python_antispam-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d7b839c4c470cdb9596ec99adf517c99",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4201,
        "upload_time": "2023-03-21T05:24:00",
        "upload_time_iso_8601": "2023-03-21T05:24:00.104750Z",
        "url": "https://files.pythonhosted.org/packages/ea/3a/ff7269ad6bbf8a5746161c193ad5465c0f648049963d107a0f6a8095f5ce/cleantalk_python_antispam-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ea3aff7269ad6bbf8a5746161c193ad5465c0f648049963d107a0f6a8095f5ce",
        "md5": "d7b839c4c470cdb9596ec99adf517c99",
        "sha256": "aa206c269d4847136124f92725ec24e0a3892613fc7d68e6fb5d18eee816a2f8"
      },
      "downloads": -1,
      "filename": "cleantalk_python_antispam-1.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "d7b839c4c470cdb9596ec99adf517c99",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4201,
      "upload_time": "2023-03-21T05:24:00",
      "upload_time_iso_8601": "2023-03-21T05:24:00.104750Z",
      "url": "https://files.pythonhosted.org/packages/ea/3a/ff7269ad6bbf8a5746161c193ad5465c0f648049963d107a0f6a8095f5ce/cleantalk_python_antispam-1.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}