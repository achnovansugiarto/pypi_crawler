{
  "info": {
    "author": "BirkhoffG",
    "author_email": "26811230+BirkhoffG@users.noreply.github.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "Jax-Dataloader\n================\n\n<!-- WARNING: THIS FILE WAS AUTOGENERATED! DO NOT EDIT! -->\n\n![Python](https://img.shields.io/pypi/pyversions/jax-dataloader.svg)\n![CI\nstatus](https://github.com/BirkhoffG/jax-dataloader/actions/workflows/test.yaml/badge.svg)\n![Docs](https://github.com/BirkhoffG/jax-dataloader/actions/workflows/deploy.yaml/badge.svg)\n![pypi](https://img.shields.io/pypi/v/jax-dataloader.svg) ![GitHub\nLicense](https://img.shields.io/github/license/BirkhoffG/jax-dataloader.svg)\n\n## Overview\n\n`jax_dataloader` provides a high-level *pytorch-like* dataloader API for\n`jax`. It supports\n\n- **downloading and pre-processing datasets** via [huggingface\n  datasets](https://github.com/huggingface/datasets), [pytorch\n  Dataset](https://pytorch.org/docs/stable/data.html#torch.utils.data.Dataset),\n  and tensorflow dataset (forthcoming)\n\n- **iteratively loading batches** via (vanillla) [jax\n  dataloader](https://birkhoffg.github.io/jax-dataloader/core.html#jax-dataloader),\n  [pytorch\n  dataloader](https://pytorch.org/docs/stable/data.html#torch.utils.data.DataLoader),\n  tensorflow (forthcoming), and merlin (forthcoming).\n\nA minimum `jax_dataloader` example:\n\n``` python\nimport jax_dataloader as jdl\n\ndataloader = jdl.DataLoader(\n    dataset, # Can be a jdl.Dataset or pytorch or huggingface dataset\n    backend='jax', # Use 'jax' for loading data (also supports `pytorch`)\n)\n\nbatch = next(iter(dataloader)) # iterate next batch\n```\n\n## Installation\n\nThe latest `jax_dataloader` release can directly be installed from PyPI:\n\n``` sh\npip install jax_dataloader\n```\n\nor install directly from the repository:\n\n``` sh\npip install git+https://github.com/BirkhoffG/jax-dataloader.git\n```\n\n<div>\n\n> **Note**\n>\n> We will only install `jax`-related dependencies. If you wish to use\n> integration of `pytorch` or huggingface `datasets`, you should try to\n> manually install them, or run `pip install jax_dataloader[dev]` for\n> installing all the dependencies.\n\n</div>\n\n## Usage\n\n[`jax_dataloader.core.DataLoader`](https://birkhoffg.github.io/jax-dataloader/core.html#dataloader)\nfollows similar API as the pytorch dataloader.\n\n- The `dataset` argument takes\n  [`jax_dataloader.core.Dataset`](https://birkhoffg.github.io/jax-dataloader/core.html#dataset)\n  or `torch.utils.data.Dataset` or (the huggingface) `datasets.Dataset`\n  as an input from which to load the data.\n- The `backend` argument takes `\"jax\"` or`\"pytorch\"` as an input, which\n  specifies which backend dataloader to use batches.\n\n``` python\nimport jax_dataloader as jdl\nimport jax.numpy as jnp\n```\n\n### Using [`ArrayDataset`](https://birkhoffg.github.io/jax-dataloader/core.html#arraydataset)\n\nThe\n[`jax_dataloader.core.ArrayDataset`](https://birkhoffg.github.io/jax-dataloader/core.html#arraydataset)\nis an easy way to wrap multiple `jax.numpy.array` into one Dataset. For\nexample, we can create an\n[`ArrayDataset`](https://birkhoffg.github.io/jax-dataloader/core.html#arraydataset)\nas follows:\n\n``` python\n# Create features `X` and labels `y`\nX = jnp.arange(100).reshape(10, 10)\ny = jnp.arange(10)\n# Create an `ArrayDataset`\narr_ds = jdl.ArrayDataset(X, y)\n```\n\nThis `arr_ds` can be loaded by both `\"jax\"` and `\"pytorch\"` dataloaders.\n\n``` python\n# Create a `DataLoader` from the `ArrayDataset` via jax backend\ndataloader = jdl.DataLoader(arr_ds, 'jax', batch_size=5, shuffle=True)\n# Or we can use the pytorch backend\ndataloader = jdl.DataLoader(arr_ds, 'pytorch', batch_size=5, shuffle=True)\n```\n\n### Using Huggingface Datasets\n\nThe huggingface [datasets](https://github.com/huggingface/datasets) is a\nmorden library for downloading, pre-processing, and sharing datasets.\n`jax_dataloader` supports directly passing the huggingface datasets.\n\n``` python\nfrom datasets import load_dataset\n```\n\nFor example, We load the `\"squad\"` dataset from `datasets`:\n\n``` python\nhf_ds = load_dataset(\"squad\")\n```\n\nThis `hf_ds` can be loaded via `\"jax\"` and `\"pytorch\"` dataloaders.\n\n``` python\n# Create a `DataLoader` from the `datasets.Dataset` via jax backend\n# TODO: This is currently not working\ndataloader = jdl.DataLoader(hf_ds['train'], 'jax', batch_size=5, shuffle=True)\n# Or we can use the pytorch backend\ndataloader = jdl.DataLoader(hf_ds['train'], 'pytorch', batch_size=5, shuffle=True)\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/birkhoffg/jax-dataloader",
    "keywords": "python jax dataloader pytorch datasets huggingface",
    "license": "Apache Software License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "jax-dataloader",
    "package_url": "https://pypi.org/project/jax-dataloader/",
    "platform": null,
    "project_url": "https://pypi.org/project/jax-dataloader/",
    "project_urls": {
      "Homepage": "https://github.com/birkhoffg/jax-dataloader"
    },
    "release_url": "https://pypi.org/project/jax-dataloader/0.0.2/",
    "requires_dist": [
      "jax[cpu]",
      "scikit-learn ; extra == 'dev'",
      "pandas ; extra == 'dev'",
      "nbdev ; extra == 'dev'",
      "jupyter ; extra == 'dev'",
      "dm-haiku ; extra == 'dev'",
      "optax ; extra == 'dev'",
      "torch ; extra == 'dev'",
      "torchvision ; extra == 'dev'",
      "datasets ; extra == 'dev'"
    ],
    "requires_python": ">=3.7",
    "summary": "Dataloader for jax",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17168895,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4e2c6ce35d268fad6c175133d9402d130f09fecd38e2500f81fb5ab0d5656ea5",
          "md5": "3b6dba425199b07022f072706d3f340c",
          "sha256": "23b7563c676a127df7e9f827539c5caf6764cb9e3ce99291bc02b942e9aa3549"
        },
        "downloads": -1,
        "filename": "jax_dataloader-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3b6dba425199b07022f072706d3f340c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 9728,
        "upload_time": "2023-01-12T03:15:11",
        "upload_time_iso_8601": "2023-01-12T03:15:11.124973Z",
        "url": "https://files.pythonhosted.org/packages/4e/2c/6ce35d268fad6c175133d9402d130f09fecd38e2500f81fb5ab0d5656ea5/jax_dataloader-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2fb3120754e83d04dcbe036047d3d22a046fd86069b8c255996eb98d77f74d9f",
          "md5": "5d7bbfb6e49b8fb31ab3099c7781987e",
          "sha256": "b8d8c38995779cc8058a712f26f78e8ddeb8940780965a6acce66e5e0311c03b"
        },
        "downloads": -1,
        "filename": "jax_dataloader-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5d7bbfb6e49b8fb31ab3099c7781987e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9789,
        "upload_time": "2023-01-12T03:15:12",
        "upload_time_iso_8601": "2023-01-12T03:15:12.897133Z",
        "url": "https://files.pythonhosted.org/packages/2f/b3/120754e83d04dcbe036047d3d22a046fd86069b8c255996eb98d77f74d9f/jax_dataloader-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4d952a1d6921e522c24f1d96645e7ecfce769cf854c9714ff3dfa24720de69d",
          "md5": "f016015eaa2a1b0ad2acd06a34fdaf6c",
          "sha256": "42db7b7926f00fd4c818675f7e38edf7fe56c9beb712e1f78021173258b1672a"
        },
        "downloads": -1,
        "filename": "jax_dataloader-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f016015eaa2a1b0ad2acd06a34fdaf6c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 11909,
        "upload_time": "2023-03-06T01:04:59",
        "upload_time_iso_8601": "2023-03-06T01:04:59.773735Z",
        "url": "https://files.pythonhosted.org/packages/a4/d9/52a1d6921e522c24f1d96645e7ecfce769cf854c9714ff3dfa24720de69d/jax_dataloader-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "07f2b47edc730686090b2175c79be1d28f9c91b2fe527a7c9d610d200a8f888b",
          "md5": "127fc1f905b229cb1c672d5bdca92959",
          "sha256": "91e88fa1f0a8ee9cc40c785d91e514f035d04a469ebbcb5a5e0b4db60227691d"
        },
        "downloads": -1,
        "filename": "jax-dataloader-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "127fc1f905b229cb1c672d5bdca92959",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 13334,
        "upload_time": "2023-03-06T01:05:01",
        "upload_time_iso_8601": "2023-03-06T01:05:01.561224Z",
        "url": "https://files.pythonhosted.org/packages/07/f2/b47edc730686090b2175c79be1d28f9c91b2fe527a7c9d610d200a8f888b/jax-dataloader-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a4d952a1d6921e522c24f1d96645e7ecfce769cf854c9714ff3dfa24720de69d",
        "md5": "f016015eaa2a1b0ad2acd06a34fdaf6c",
        "sha256": "42db7b7926f00fd4c818675f7e38edf7fe56c9beb712e1f78021173258b1672a"
      },
      "downloads": -1,
      "filename": "jax_dataloader-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f016015eaa2a1b0ad2acd06a34fdaf6c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 11909,
      "upload_time": "2023-03-06T01:04:59",
      "upload_time_iso_8601": "2023-03-06T01:04:59.773735Z",
      "url": "https://files.pythonhosted.org/packages/a4/d9/52a1d6921e522c24f1d96645e7ecfce769cf854c9714ff3dfa24720de69d/jax_dataloader-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "07f2b47edc730686090b2175c79be1d28f9c91b2fe527a7c9d610d200a8f888b",
        "md5": "127fc1f905b229cb1c672d5bdca92959",
        "sha256": "91e88fa1f0a8ee9cc40c785d91e514f035d04a469ebbcb5a5e0b4db60227691d"
      },
      "downloads": -1,
      "filename": "jax-dataloader-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "127fc1f905b229cb1c672d5bdca92959",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 13334,
      "upload_time": "2023-03-06T01:05:01",
      "upload_time_iso_8601": "2023-03-06T01:05:01.561224Z",
      "url": "https://files.pythonhosted.org/packages/07/f2/b47edc730686090b2175c79be1d28f9c91b2fe527a7c9d610d200a8f888b/jax-dataloader-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}