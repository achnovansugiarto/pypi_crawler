{
  "info": {
    "author": "Valdecy Pereira",
    "author_email": "valdecy.pereira@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# pyMultiobjective\n\n## Introduction\n\nA python library for the following Multiobjective Optimization Algorithms or Many Objectives Optimization Algorithms: **C-NSGA II** (Clustered Non-Dominated Sorting Genetic Algorithm II); **CTAEA** (Constrained Two Archive Evolutionary Algorithm); **GrEA** (Grid-based Evolutionary Algorithm); **HypE** (Hypervolume Estimation Multiobjective Optimization Algorithm); **IBEA-FC** (Indicator-Based Evolutionary Algorithm with Fast Comparison Indicator); **IBEA-HV** (Indicator-Based Evolutionary Algorithm with Hypervolume Indicator); **MOEA/D** (Multiobjective Evolutionary Algorithm Based on Decomposition); **NAEMO** (Neighborhood-sensitive Archived Evolutionary Many-objective Optimization); **NSGA II** (Non-Dominated Sorting Genetic Algorithm II);  **NSGA III** (Non-Dominated Sorting Genetic Algorithm III); **OMOPSO** (Optimized Multiobjective Particle Swarm Optimization); **PAES** (Pareto Archived Evolution Strategy) with Fast Non-Dominance Sorting); **RVEA** (Reference Vector Guided Evolutionary Algorithm); **SMPSO** (Speed-Constrained Multiobjective Particle Swarm Optimization); **SMS-EMOA** (S-Metric Selection Evolutionary Multiobjective Optimization Algorithm); **SPEA2** (Strength Pareto Evolutionary Algorithm 2);  **U-NSGA III** (Unified Non-Dominated Sorting Genetic Algorithm III).\n\n## USAGE\n\n1. Install\n```bash\npip install pyMultiobjective\n```\n\n2. Import\n```py3\n\n# Import NSGA III\nfrom pyMultiobjective.algorithm import non_dominated_sorting_genetic_algorithm_III\n\n# Import Test Functions. Available Test Functions: Dent, DTLZ1, DTLZ2, DTLZ3, DTLZ4, DTLZ5, DTLZ6, DTLZ7, Fonseca-Fleming, Kursawe, Poloni, Schaffer1, Schaffer2, ZDT1, ZDT2, ZDT3, ZDT4, ZDT6, Viennet1, Viennet2, Viennet3 \nfrom pyMultiobjective.test_functions import dent_f1, dent_f2\n\n# OR Define your Own Custom Function. The function input should be a list of values, \n# each value represents a dimenstion (x1, x2, ...xn) of the problem.\n\n# Run NSGA III\nparameters = {\n\t'references': 5,\n\t'min_values': (-5, -5),\n\t'max_values': (5, 5),\n\t'mutation_rate': 0.1,\n\t'generations': 1500,\n\t'mu': 1,\n\t'eta': 1,\n\t'k': 2, \n\t'verbose': True\n}\nsol = non_dominated_sorting_genetic_algorithm_III(list_of_functions = [dent_f1, dent_f2], **parameters)\n\n# Import Graphs\nfrom pyMultiobjective.util import graphs\n\n# Plot Solution - Scatter Plot\nparameters = {\n\t'min_values': (-5, -5),\n\t'max_values': (5, 5),\n\t'step': (0.1, 0.1),\n\t'solution': sol, \n\t'show_pf': True,\n\t'show_pts': True,\n\t'show_sol': True,\n\t'pf_min': True,  # True = Minimum Pareto Front; False = Maximum Pareto Front\n\t'custom_pf': [], # Input a custom Pareto Front(numpy array where each column is an Objective Function)\n\t'view': 'browser'\n}\ngraphs.plot_mooa_function(list_of_functions = [dent_f1, dent_f2], **parameters)\n\n# Plot Solution - Parallel Plot\nparameters = {\n\t'min_values': (-5, -5), \n\t'max_values': (5, 5), \n\t'step': (0.1, 0.1), \n\t'solution': sol, \n\t'show_pf': True,\n\t'pf_min': True,  # True = Minimum Pareto Front; False = Maximum Pareto Front\n\t'custom_pf': [], # Input a custom Pareto Front(numpy array where each column is an Objective Function)\n\t'view': 'browser'\n}\ngraphs.parallel_plot(list_of_functions = [dent_f1, dent_f2], **parameters)\n\n# Plot Solution - Andrews Plot\nparameters = {\n\t'min_values': (-5, -5), \n\t'max_values': (5, 5), \n\t'step': (0.1, 0.1), \n\t'solution': sol, \n\t'normalize': True,\n\t'size_x': 15,\n\t'size_y': 15,\n\t'show_pf': True, \n\t'pf_min': True, # True = Minimum Pareto Front; False = Maximum Pareto Front\n\t'custom_pf': [] # Input a custom Pareto Front(numpy array where each column is an Objective Function)\n}\ngraphs.andrews_plot(list_of_functions = [dent_f1, dent_f2], **parameters)\n\n# Import Performance Indicators. Available Performance Indicators: GD, GD+, IGD, IGD+, Maximum Spread, Spacing and Hypervolume\nfrom pyMultiobjective.utils import indicators\n\nparameters = {\n\t'min_values': (-5, -5), \n\t'max_values': (5, 5), \n\t'step': (0.1, 0.1), \n\t'solution': sol, \n\t'pf_min': True, # True = Minimum Pareto Front; False = Maximum Pareto Front\n\t'custom_pf': [] # Input a custom Pareto Front(numpy array where each column is an Objective Function)\n}\ngd   = indicators.gd_indicator(list_of_functions = [dent_f1, dent_f2], **parameters)\ngdp  = indicators.gd_plus_indicator(list_of_functions = [dent_f1, dent_f2], **parameters)\nigd  = indicators.igd_indicator(list_of_functions = [dent_f1, dent_f2], **parameters)\nigdp = indicators.igd_plus_indicator(list_of_functions = [dent_f1, dent_f2], **parameters)\nms   = indicators.ms_indicator(list_of_functions = [dent_f1, dent_f2], **parameters)\nsp   = indicators.sp_indicator(list_of_functions = [dent_f1, dent_f2], **parameters)\n\nprint('GD   = ', gd)\nprint('GDP  = ', gdp)\nprint('IGD  = ', igd)\nprint('IGDP = ', igdp)\nprint('MS   = ', ms)\nprint('SP   = ', sp)\n\n\nparameters = {\n\t'solution': sol, \n\t'n_objs': 2,\n\t'ref_point': [], # A Reference Point. If empty, an arbitrary Reference Point will be Used\n}\nhypervolume = indicators.hv_indicator(**parameters)\nprint('Hypervolume = ', hypervolume)\n\n```\n\n3. Try it in **Colab**\n- C-NSGA II ([ Colab Demo ](https://colab.research.google.com/drive/1sXxCWV6dDmNXmes7RDka4OqKOtM0t9YX?usp=sharing)) ( [ Original Paper ](https://open.metu.edu.tr/bitstream/handle/11511/69040/12625931.pdf))\n- CTAEA ([ Colab Demo ](https://colab.research.google.com/drive/1IC5m7JfmhT0ihWBhziQdfyq1PAHrmW1p?usp=sharing)) ( [ Original Paper ](https://doi.org/10.48550/arXiv.2103.06382))\n- GrEA ([ Colab Demo ](https://colab.research.google.com/drive/1H2w77kCGUj33qI7uIE-e68999zy1L8tf?usp=sharing)) ( [ Original Paper ](https://doi.org/10.1109/TEVC.2012.2227145))\n- HypE ([ Colab Demo ](https://colab.research.google.com/drive/1cpIWZTECKfyf9jp_iiSuOJaWcWjy_NCr?usp=sharing)) ( [ Original Paper ](https://doi.org/10.1162/EVCO_a_00009))\n- IBEA-FC ([ Colab Demo ](https://colab.research.google.com/drive/1BBD0nWaE5SqL5n2Jpa_fDYgkWGSpy8xu?usp=sharing)) ( [ Original Paper ](https://www.simonkuenzli.ch/docs/ZK04.pdf))\n- IBEA-HV ([ Colab Demo ](https://colab.research.google.com/drive/1XoiEAR3xpx0DbivrSp_QEFA32xm_R1lk?usp=sharing)) ( [ Original Paper ](https://www.simonkuenzli.ch/docs/ZK04.pdf))\n- MOEA/D ([ Colab Demo ](https://colab.research.google.com/drive/1BP2qM9coiOTq28ZYeQEqxHSCHBeh3-Io?usp=sharing)) ( [ Original Paper ](https://doi.org/10.1109/TEVC.2007.892759))\n- NAEMO ([ Colab Demo ](https://colab.research.google.com/drive/1ctVjjOKhLQ1DqQJ0ozcvp2pClmbwBg8O?usp=sharing)) ( [ Original Paper ](https://doi.org/10.1016/j.swevo.2018.12.002))\n- NSGA II ([ Colab Demo ](https://colab.research.google.com/drive/1aD1uiJOCezCG6lotMAQENGas4abEO3_6?usp=sharing)) ( [ Original Paper ](http://dx.doi.org/10.1109/4235.996017))\n- NSGA III ([ Colab Demo ](https://colab.research.google.com/drive/18zcEdU3NNplFiXAqH8g-oSrEhWB-uqQN?usp=sharing)) ( [ Original Paper ](http://dx.doi.org/10.1109/TEVC.2013.2281535))\n- OMOPSO ([ Colab Demo ](https://colab.research.google.com/drive/1cvSZllLYhU6UvuFM7KgDvb1YaNLZVU32?usp=sharing)) ( [ Original Paper ](http://dx.doi.org/10.1007/978-3-540-31880-4_35))\n- PAES ([ Colab Demo ](https://colab.research.google.com/drive/1iz5Q9CYiLpyYEKJzd0KwQrGrZykr49TX?usp=sharing))  ( [ Original Paper ](https://doi.org/10.1109/CEC.1999.781913))\n- RVEA ([ Colab Demo ](https://colab.research.google.com/drive/1KYYAsMM52P6lxHRk5a9P8yrnRhwCgT5i?usp=sharing)) ( [ Original Paper ](https://doi.org/10.1109/TEVC.2016.2519378))\n- SMPSO ([ Colab Demo ](https://colab.research.google.com/drive/17m9AT9ORHvVqeqaRjBga1XCEuyG1EPzz?usp=sharing)) ( [ Original Paper ](https://doi.org/10.1109/MCDM.2009.4938830))\n- SMS-EMOA ([ Colab Demo ](https://colab.research.google.com/drive/1hCAW70vVRC-NXmkHPUdX_gK2aADyliQS?usp=sharing)) ( [ Original Paper ](https://doi.org/10.1016/j.ejor.2006.08.008))\n- SPEA2 ([ Colab Demo ](https://colab.research.google.com/drive/1OrxJxxAMSpKu_xSWc9UQlPOeM_mmVHmW?usp=sharing)) ( [ Original Paper ](https://kdd.cs.ksu.edu/Courses/CIS830/Handouts/P8.pdf))\n- U-NSGA III ([ Colab Demo ](https://colab.research.google.com/drive/1-AO_S6OlqzbA54DlMFBDGEL-wHh9hayH?usp=sharing)) ( [ Original Paper ](https://www.egr.msu.edu/~kdeb/papers/c2014022.pdf))\n\n4. Test Functions\n- Dent ( [ Paper ](https://doi.org/10.1007/978-3-319-44003-3_12)) ( [Pareto Front](https://github.com/Valdecy/Datasets/raw/master/Pareto%20Front/Dent.txt) )\n- DTLZ1 ( [ Paper ](https://doi.org/10.1109/CEC.2002.1007032)) ( [Pareto Front](https://github.com/Valdecy/Datasets/raw/master/Pareto%20Front/DTLZ1.txt) )\n- DTLZ2 ( [ Paper ](https://doi.org/10.1109/CEC.2002.1007032)) ( [Pareto Front](https://github.com/Valdecy/Datasets/raw/master/Pareto%20Front/DTLZ2.txt) )\n- DTLZ3 ( [ Paper ](https://doi.org/10.1109/CEC.2002.1007032)) ( [Pareto Front](https://github.com/Valdecy/Datasets/raw/master/Pareto%20Front/DTLZ3.txt) )\n- DTLZ4 ( [ Paper ](https://doi.org/10.1109/CEC.2002.1007032)) ( [Pareto Front](https://github.com/Valdecy/Datasets/raw/master/Pareto%20Front/DTLZ4.txt) )\n- DTLZ5 ( [ Paper ](https://doi.org/10.1109/CEC.2002.1007032)) ( [Pareto Front](https://github.com/Valdecy/Datasets/raw/master/Pareto%20Front/DTLZ5.txt) )\n- DTLZ6 ( [ Paper ](https://doi.org/10.1109/CEC.2002.1007032)) ( [Pareto Front](https://github.com/Valdecy/Datasets/raw/master/Pareto%20Front/DTLZ6.txt) )\n- DTLZ7 ( [ Paper ](https://doi.org/10.1109/CEC.2002.1007032)) ( [Pareto Front](https://github.com/Valdecy/Datasets/raw/master/Pareto%20Front/DTLZ7.txt) )\n- Fonseca-Fleming ( [ Paper ](https://doi.org/10.1162/evco.1995.3.1.1)) ( [Pareto Front](https://github.com/Valdecy/Datasets/raw/master/Pareto%20Front/Fonseca_Fleming.txt) )\n- Kursawe ( [ Paper ](https://doi.org/10.1007/BFb0029752)) ( [Pareto Front](https://github.com/Valdecy/Datasets/raw/master/Pareto%20Front/Kursawe.txt) )\n- Poloni ( [ Paper ](https://www.researchgate.net/publication/243686783_Hybrid_GA_for_multi_objective_aerodynamic_shape_optimization)) ( [Pareto Front](https://github.com/Valdecy/Datasets/raw/master/Pareto%20Front/Poloni.txt) )\n- Schaffer1 ( [ Paper ](https://www.researchgate.net/publication/236443691_Some_Experiments_in_Machine_Learning_Using_Vector_Evaluated_Genetic_Algorithms)) ( [Pareto Front](https://github.com/Valdecy/Datasets/raw/master/Pareto%20Front/Schaffer1.txt) )\n- Schaffer2 ( [ Paper ](https://www.researchgate.net/publication/236443691_Some_Experiments_in_Machine_Learning_Using_Vector_Evaluated_Genetic_Algorithms)) ( [Pareto Front](https://github.com/Valdecy/Datasets/raw/master/Pareto%20Front/Schaffer2.txt) )\n- ZDT1 ( [ Paper ](https://doi.org/10.1162/106365600568202)) ( [Pareto Front](https://github.com/Valdecy/Datasets/raw/master/Pareto%20Front/ZDT1.txt) )\n- ZDT2 ( [ Paper ](https://doi.org/10.1162/106365600568202)) ( [Pareto Front](https://github.com/Valdecy/Datasets/raw/master/Pareto%20Front/ZDT2.txt) )\n- ZDT3 ( [ Paper ](https://doi.org/10.1162/106365600568202)) ( [Pareto Front](https://github.com/Valdecy/Datasets/raw/master/Pareto%20Front/ZDT3.txt) )\n- ZDT4 ( [ Paper ](https://doi.org/10.1162/106365600568202)) ( [Pareto Front](https://github.com/Valdecy/Datasets/raw/master/Pareto%20Front/ZDT4.txt) ) \n- ZDT6 ( [ Paper ](https://doi.org/10.1162/106365600568202)) ( [Pareto Front](https://github.com/Valdecy/Datasets/raw/master/Pareto%20Front/ZDT6.txt) )\n- Viennet1 ( [ Paper ](https://doi.org/10.1080/00207729608929211)) ( [Pareto Front](https://github.com/Valdecy/Datasets/raw/master/Pareto%20Front/Viennet1.txt) )\n- Viennet2 ( [ Paper ](https://doi.org/10.1080/00207729608929211)) ( [Pareto Front](https://github.com/Valdecy/Datasets/raw/master/Pareto%20Front/Viennet2.txt) )\n- Viennet3 ( [ Paper ](https://doi.org/10.1080/00207729608929211)) ( [Pareto Front](https://github.com/Valdecy/Datasets/raw/master/Pareto%20Front/Viennet3.txt) )\n- Test Functions with various types of visualizations: Scatter (2D, 3D or ND), Parallel (2D, 3D or ND), Andrews (2D, 3D or ND), Radar (3D or ND) and Complex Radar Plots (3D or ND) ([ Colab Demo ](https://colab.research.google.com/drive/1ALVZp333yO6rPEcR0fhVQn-PJeH5PmGP?usp=sharing)) \n\n5. Peformance Indicators\n- GD ( [ Paper ](https://apps.dtic.mil/sti/pdfs/ADA364478.pdf))\n- GD+ ( [ Paper ](https://doi.org/10.1007/978-3-319-15892-1_8))\n- IGD ( [ Paper ](https://doi.org/10.1007/978-3-540-24694-7_71))\n- IGD+ ( [ Paper ](https://doi.org/10.1007/978-3-319-15892-1_8))\n- Maximum Spread ( [ Paper ](https://doi.org/10.1162/106365600568202))\n- Spacing ( [ Paper ](https://doi.org/10.1109/TEVC.2006.882428))\n- Hypervolume ( [ Paper ](https://scholar.afit.edu/cgi/viewcontent.cgi?article=6130&context=etd))\n\n# Single Objective Optimization\nFor Single Objective Optimization try [pyMetaheuristic](https://github.com/Valdecy/pyMetaheuristic)\n\n# TSP (Travelling Salesman Problem)\nFor Travelling Salesman Problems try [pyCombinatorial](https://github.com/Valdecy/pyCombinatorial)\n\n# Acknowledgement \nThis section is dedicated to all the people that helped to improve or correct the code. Thank you very much!\n\n* Wei Chen (07.AUGUST.2019) - AFRL Summer Intern/Rising Senior at Stony Brook University.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Valdecy/pyMultiobjective",
    "keywords": "",
    "license": "GNU",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyMultiobjective",
    "package_url": "https://pypi.org/project/pyMultiobjective/",
    "platform": null,
    "project_url": "https://pypi.org/project/pyMultiobjective/",
    "project_urls": {
      "Homepage": "https://github.com/Valdecy/pyMultiobjective"
    },
    "release_url": "https://pypi.org/project/pyMultiobjective/1.5.1/",
    "requires_dist": [
      "matplotlib",
      "numpy",
      "pandas",
      "plotly",
      "pygmo",
      "scipy"
    ],
    "requires_python": "",
    "summary": "A python library for Multiobjective Objectives Optimization Algorithms or Many Objectives Optimization Algorithms",
    "version": "1.5.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16421195,
  "releases": {
    "1.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f4ae3a374d834480eb3d924b3c0a44f78bf55c9ad97d350fcfd22d22c2e316c3",
          "md5": "9eb7bb8cbdfc1aa5cd36c63afcbedefe",
          "sha256": "a37a84d44f2fc078ba9a390e524d7b6c2c2882c8b237fda982c272e1c637428f"
        },
        "downloads": -1,
        "filename": "pyMultiobjective-1.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9eb7bb8cbdfc1aa5cd36c63afcbedefe",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 60776,
        "upload_time": "2022-10-13T22:16:15",
        "upload_time_iso_8601": "2022-10-13T22:16:15.213459Z",
        "url": "https://files.pythonhosted.org/packages/f4/ae/3a374d834480eb3d924b3c0a44f78bf55c9ad97d350fcfd22d22c2e316c3/pyMultiobjective-1.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8e1204e97d43f62a166a634ae0f536248c2ba20b0ed3fdb544d1c476b87688cc",
          "md5": "36b101ffdd8ac2fd7138a760d4f7bd72",
          "sha256": "a03d7f06ce8ac97479704a2780d9cec81cb3463cef1eadb700665d20987d0caf"
        },
        "downloads": -1,
        "filename": "pyMultiobjective-1.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "36b101ffdd8ac2fd7138a760d4f7bd72",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 35027,
        "upload_time": "2022-10-13T22:16:17",
        "upload_time_iso_8601": "2022-10-13T22:16:17.387915Z",
        "url": "https://files.pythonhosted.org/packages/8e/12/04e97d43f62a166a634ae0f536248c2ba20b0ed3fdb544d1c476b87688cc/pyMultiobjective-1.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e854df956aeba425414b6f1479b17f4693b942a9a890520016812c999308f442",
          "md5": "4febd2d9fbb234f61bc4848414fa3f26",
          "sha256": "cddc92d25bc75566f6609de3997920ba184132e6ba1f622ed165c4de1ee256d4"
        },
        "downloads": -1,
        "filename": "pyMultiobjective-1.5.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4febd2d9fbb234f61bc4848414fa3f26",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 63669,
        "upload_time": "2023-01-13T20:04:15",
        "upload_time_iso_8601": "2023-01-13T20:04:15.849280Z",
        "url": "https://files.pythonhosted.org/packages/e8/54/df956aeba425414b6f1479b17f4693b942a9a890520016812c999308f442/pyMultiobjective-1.5.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "26a4929a403041cc4e25569c49ae07f1e19e39856bcb74dd917abad23f3969d8",
          "md5": "4f4c9d2d6785d2f340d91a3301a84bb7",
          "sha256": "e194bcd43b9c557fbf49600e5b85ae13026ac8846db6f9bfa9dace78fa6df7df"
        },
        "downloads": -1,
        "filename": "pyMultiobjective-1.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4f4c9d2d6785d2f340d91a3301a84bb7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 35460,
        "upload_time": "2023-01-13T20:04:17",
        "upload_time_iso_8601": "2023-01-13T20:04:17.510866Z",
        "url": "https://files.pythonhosted.org/packages/26/a4/929a403041cc4e25569c49ae07f1e19e39856bcb74dd917abad23f3969d8/pyMultiobjective-1.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e854df956aeba425414b6f1479b17f4693b942a9a890520016812c999308f442",
        "md5": "4febd2d9fbb234f61bc4848414fa3f26",
        "sha256": "cddc92d25bc75566f6609de3997920ba184132e6ba1f622ed165c4de1ee256d4"
      },
      "downloads": -1,
      "filename": "pyMultiobjective-1.5.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4febd2d9fbb234f61bc4848414fa3f26",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 63669,
      "upload_time": "2023-01-13T20:04:15",
      "upload_time_iso_8601": "2023-01-13T20:04:15.849280Z",
      "url": "https://files.pythonhosted.org/packages/e8/54/df956aeba425414b6f1479b17f4693b942a9a890520016812c999308f442/pyMultiobjective-1.5.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "26a4929a403041cc4e25569c49ae07f1e19e39856bcb74dd917abad23f3969d8",
        "md5": "4f4c9d2d6785d2f340d91a3301a84bb7",
        "sha256": "e194bcd43b9c557fbf49600e5b85ae13026ac8846db6f9bfa9dace78fa6df7df"
      },
      "downloads": -1,
      "filename": "pyMultiobjective-1.5.1.tar.gz",
      "has_sig": false,
      "md5_digest": "4f4c9d2d6785d2f340d91a3301a84bb7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 35460,
      "upload_time": "2023-01-13T20:04:17",
      "upload_time_iso_8601": "2023-01-13T20:04:17.510866Z",
      "url": "https://files.pythonhosted.org/packages/26/a4/929a403041cc4e25569c49ae07f1e19e39856bcb74dd917abad23f3969d8/pyMultiobjective-1.5.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}