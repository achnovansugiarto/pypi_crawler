{
  "info": {
    "author": "polyma3000",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Matrix Social Media Poster Base Poster\r\nAuthor: polyma3000\r\n\r\n## How to set up\r\n\r\n### Install this package\r\n\r\n```bash\r\npip install matrix-sm-poster-basis-poster\r\n```\r\n\r\n### Setup connections\r\n\r\nTo access the Platform connections, we need to create a config file.\r\n\r\nLet's create `connections.yaml`:\r\n\r\n```yaml\r\nmastodon_connections:\r\n  connection_name:\r\n    domain: \"https://your.domain\"\r\n    token: \"your_token\"\r\n```\r\n\r\nTo get the credentials just go to your settings and under the `developer` menu there is a place to create a new app and get your credentials all in one go.\r\n\r\nVisit https://tinysubversions.com/notes/mastodon-bot/ if the version of your server has an old version which doesn't allow you to get credentials.\r\n\r\nFor other platforms use the name of the platform and add `_connections` in the top hierarchy of your `connections.yaml`\r\n\r\n### Derive Message Class\r\nAt first, you have to create an own Message class derived from basis_poster.Message and overload the async method send_to_platform.\r\nThis example is based on `mastodon.py`.\r\n\r\nLet's create `MyMessage.py`:\r\n```python\r\nfrom basis_poster import Message\r\nfrom mastodon import Mastodon\r\nfrom mastodon.Mastodon import MastodonNetworkError\r\nfrom urllib3.exceptions import ConnectTimeoutError, MaxRetryError\r\n\r\n\r\nclass MyMessage(Message):\r\n    async def send_to_platform(self, platform_connection: Mastodon):\r\n        pictures = []\r\n        if self.pictures_names:\r\n            for picture_name in self.pictures_names:\r\n                pictures.append(\r\n                    platform_connection.media_post(media_file=picture_name))\r\n\r\n        if pictures:\r\n            posted_posts = [platform_connection.status_post(\r\n                status=self.posts.pop(0), media_ids=pictures)]\r\n        else:\r\n            posted_posts = [platform_connection.status_post(\r\n                status=self.posts.pop(0))]\r\n\r\n        while self.posts:\r\n            posted_posts.append(platform_connection.status_post(status=self.posts.pop(0),\r\n                                                                in_reply_to_id=posted_posts[len(posted_posts) - 1]))\r\n    \r\n    @classmethod\r\n    def get_errors(cls):\r\n        return TimeoutError, ConnectTimeoutError, MaxRetryError, MastodonNetworkError\r\n```\r\n\r\nIn `self.pictures_names` the filenames of the pictures are listed.\r\nIn `self.posts` the posts to send are available.\r\n\r\n### Derive PlatformHandler Class\r\nAt first, you have to create an own `PlatformHandler` class derived from `basis_poster.PlatformHandler` and overload the static method `add_platform_connection`.\r\nThis example is based on `mastodon.py`.\r\n\r\nLet's create `MyPlatformHandler.py`:\r\n```python\r\nfrom basis_poster import PlatformHandler\r\nfrom mastodon import Mastodon\r\n\r\n\r\nclass MyPlatformHandler(PlatformHandler):\r\n    @staticmethod\r\n    def add_platform_connection(platform_connection_name: str, platform_connection: dict):\r\n        return Mastodon(\r\n                access_token=platform_connection['token'],\r\n                api_base_url=platform_connection['domain'],\r\n            )\r\n```\r\n\r\n`platform_connection` hands over the data stored for this connection in `connections.yaml`.\r\n\r\n\r\n### Use Platform Handler\r\nTo start your Platform we need to set up the PlatformHandler and start it.\r\n\r\nLet's create `main.py`:\r\n\r\n```python\r\nfrom MyMessage import MyMessage\r\nfrom MyPlatformHandler import MyPlatformHandler\r\n\r\n\r\nimport logging\r\n\r\ndef main():\r\n    logging.getLogger().debug('Started..')\r\n    \r\n    handler = MyPlatformHandler(\r\n        MyMessage,\r\n        'mastodon',\r\n        500,\r\n        db_filename=\"shared_messages.db\",\r\n        connections_filename=\"connections.yaml\",\r\n        pictures_directory_name=\"pictures\"\r\n    )\r\n    \r\n    handler.run()\r\n    \r\n    logging.getLogger().debug('Finished..')\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n```\r\n\r\n`db_filename` ist the path to the sqlite database, where the `PlatformHandler` gets the messages to send from.\r\n`connections_filename` ist the path to the connections config we set up above.\r\n`pictures_directory_name` ist the path to the pictures to send with messages.\r\n\r\n### How to set up the database\r\n\r\n```sql\r\nCREATE TABLE IF NOT EXISTS messages (\r\nid INTEGER NOT NULL PRIMARY KEY,\r\nmatrix_connection_name VARCHAR(100), \r\nmatrix_room_id VARCHAR(100), \r\nbody Text,\r\npictures_ids TEXT,\r\ncreated_datetime DATETIME,\r\nsent BOOLEAN DEFAULT 0\r\n);\r\n\r\nCREATE TABLE IF NOT EXISTS messages_to_platforms (\r\nid INTEGER NOT NULL PRIMARY KEY,\r\nmessages_id INTEGER NOT NULL,\r\nplatform_name VARCHAR(100), \r\njson_data TEXT, \r\nsent BOOLEAN DEFAULT 0\r\n);\r\n\r\nPRAGMA journal_mode = WAL;\r\n```\r\n\r\n### \r\n\r\n\r\n## Possible simple connections\r\n- https://github.com/halcy/Mastodon.py\r\n- https://github.com/python-telegram-bot/python-telegram-bot\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "matrix-sm-poster-basis-poster",
    "package_url": "https://pypi.org/project/matrix-sm-poster-basis-poster/",
    "platform": null,
    "project_url": "https://pypi.org/project/matrix-sm-poster-basis-poster/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/matrix-sm-poster-basis-poster/0.2/",
    "requires_dist": [
      "PyYAML",
      "apscheduler"
    ],
    "requires_python": "",
    "summary": "The Basis Poster for the matrix-sm-poster.",
    "version": "0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15906845,
  "releases": {
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "734e91a6c59b4407df016c94f55afcd235061acec3a804971c493f5ed95325bd",
          "md5": "9d5c8b36f6cf738c355398e728c51fe6",
          "sha256": "143cae3eb8c8ed029c39a474b7679bdd409c98a28e5da8c9693d9042468a5bdf"
        },
        "downloads": -1,
        "filename": "matrix_sm_poster_basis_poster-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9d5c8b36f6cf738c355398e728c51fe6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12549,
        "upload_time": "2022-11-27T20:20:40",
        "upload_time_iso_8601": "2022-11-27T20:20:40.235512Z",
        "url": "https://files.pythonhosted.org/packages/73/4e/91a6c59b4407df016c94f55afcd235061acec3a804971c493f5ed95325bd/matrix_sm_poster_basis_poster-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "698d020aed8bca4175ac7493cc29a5dcb91779ea6b78a8a6226b39f4c2e390fa",
          "md5": "1b8ddf6fec8480fa97c7f54494a2baee",
          "sha256": "e94f5bd3d59d5582a15c61830d2d5cd24765e15076392b7bd4663b7873b31d42"
        },
        "downloads": -1,
        "filename": "matrix-sm-poster-basis-poster-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "1b8ddf6fec8480fa97c7f54494a2baee",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8812,
        "upload_time": "2022-11-27T20:20:42",
        "upload_time_iso_8601": "2022-11-27T20:20:42.670566Z",
        "url": "https://files.pythonhosted.org/packages/69/8d/020aed8bca4175ac7493cc29a5dcb91779ea6b78a8a6226b39f4c2e390fa/matrix-sm-poster-basis-poster-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "734e91a6c59b4407df016c94f55afcd235061acec3a804971c493f5ed95325bd",
        "md5": "9d5c8b36f6cf738c355398e728c51fe6",
        "sha256": "143cae3eb8c8ed029c39a474b7679bdd409c98a28e5da8c9693d9042468a5bdf"
      },
      "downloads": -1,
      "filename": "matrix_sm_poster_basis_poster-0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9d5c8b36f6cf738c355398e728c51fe6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 12549,
      "upload_time": "2022-11-27T20:20:40",
      "upload_time_iso_8601": "2022-11-27T20:20:40.235512Z",
      "url": "https://files.pythonhosted.org/packages/73/4e/91a6c59b4407df016c94f55afcd235061acec3a804971c493f5ed95325bd/matrix_sm_poster_basis_poster-0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "698d020aed8bca4175ac7493cc29a5dcb91779ea6b78a8a6226b39f4c2e390fa",
        "md5": "1b8ddf6fec8480fa97c7f54494a2baee",
        "sha256": "e94f5bd3d59d5582a15c61830d2d5cd24765e15076392b7bd4663b7873b31d42"
      },
      "downloads": -1,
      "filename": "matrix-sm-poster-basis-poster-0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "1b8ddf6fec8480fa97c7f54494a2baee",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8812,
      "upload_time": "2022-11-27T20:20:42",
      "upload_time_iso_8601": "2022-11-27T20:20:42.670566Z",
      "url": "https://files.pythonhosted.org/packages/69/8d/020aed8bca4175ac7493cc29a5dcb91779ea6b78a8a6226b39f4c2e390fa/matrix-sm-poster-basis-poster-0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}