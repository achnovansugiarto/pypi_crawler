{
  "info": {
    "author": "Alejandro Velasquez",
    "author_email": "velasale@oreognstate.edu",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# PickApp\nPackage to perform apple picking experiments with a UR5 robotic manipulator and a 3-finger underactuated gripper. \n\n## Contact\nAlejandro Velasquez  \nvelasale@oregonstate.edu  \nRobotics PhD Student\n\n## Description\nThis package takes datasets of apple picks performed with a robotic manipulator UR5e and a robotic gripper as end effector.\nThe picks are performed in a real tree and in an apple proxy that emulates the physics of the apple tree.\nHence, this package is useful for the user to:\n- [x] Compare time-series plots from real and proxy picks.\n- [x] Obtain statistics about the experiments, such as the distribution of cartesian and angular noise.\n- [x] Do basic machine learning to check if - with the given data - it is possible to train a classifier and predict the outcome of the pick (e.g. successful, failed).\n\nFor brief usage instructions, type:\n\n```html\n$ python compare_pics.py --help\n$ python machine_learning.py --help\n$ python metadata_stats.py --help \n```\n\n\n## Examples\n### module: compare_picks.py\nThe following example analyzes *variable* 'Force_x', among the 'failed' picks *case*, and does the Dynamic Time Warping (DTW) analysis during the 'pick' *phase*.\n```\n$ python compare_picks.py --variable force_z --case failed --phase pick\n```\nIt outputs a time-series plot with the closest real and proxy picks.\nIt also outputs a .csv file with a list of the real and proxy picks that are comparable. Comparable picks are the ones where the pose of the robot with respect to the apple is the same.\nThese files are stored in the sub-folder **results**.\n\n![Image](https://github.com/velasale/PickApp/blob/main/results/%20force_z__during__pick.png)\n\n\n### module: machine_learning.py\nThe following example runs a Random Forest Classifier (RFC), with 10 *experiments* to account for the classifier's stochasticity, with a *depth* of 5 branches, and utilizes 5 *features*.\n```\n$ python machine_learning.py --experiments 10 --depth 5 --feature 5 --classifier rfc \n```\nIt outputs a boxplot with the classifier's accuracies during the experiments.\nThe boxplot gets stored in a .pdf file, along with a .txt file with the confusion matrix of the best accuracy.\nThese files are stored in the sub-folder **results**.\n\n![Image](https://github.com/velasale/PickApp/blob/main/results/ML_RFC%20accuracy.png)\n\n### module: metadata_stats.py\nIn the following example, the statistic analysis is run for the dataset *3_proxy_winter22_x1*.\n```html\n$ python metadata_stats.py --dataset 3_proxy_winter22_x1\n```\nIt outputs .pdfs with box-plots of the angular and cartesian noise.\nIt also outputs a .txt file with Mean, SD and percentiles of each noise.\nThese files are stored in the sub-folder **results**.\n\n```html\nx_noises\nMean: -0.012SD: 0.014Percentiles: [-0.02  -0.01   0.003]\ny_noises\nMean: -0.005SD: 0.01Percentiles: [-0.015 -0.007  0.   ]\nz_noises\nMean: -0.012SD: 0.006Percentiles: [-0.015 -0.01  -0.005]\nroll_noises\nMean: -4.846SD: 12.74Percentiles: [-10.  -5.   5.]\npitch_noises\nMean: -4.382SD: 12.627Percentiles: [-10.   0.   5.]\nyaw_noises\nMean: 0.0SD: 0.0Percentiles: [0. 0. 0.]\n```\n\n\n## Installation\n\n\n\n## Tips\nTips to write better functions  \nhttps://pybit.es/articles/writing-better-functions/\n\nGit cheat-sheet  \nhttps://education.github.com/git-cheat-sheet-education.pdf\n\nMarkDown cheat-sheet  \nhttps://www.markdownguide.org/cheat-sheet/\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/velasale/PickApp",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pickApp",
    "package_url": "https://pypi.org/project/pickApp/",
    "platform": null,
    "project_url": "https://pypi.org/project/pickApp/",
    "project_urls": {
      "Homepage": "https://github.com/velasale/PickApp"
    },
    "release_url": "https://pypi.org/project/pickApp/0.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Real and Proxy apple picks experiments",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13202176,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1b0cd1d46608c1ed8ee9bb5e9e735692806641ea502a10985680656e3ebf7713",
          "md5": "1e2e47be97fb566beb3751891239608d",
          "sha256": "dde267ca361df7d0199b2f2890e771582d077c87bcc927746d133217b9e4897c"
        },
        "downloads": -1,
        "filename": "pickApp-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1e2e47be97fb566beb3751891239608d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 3363,
        "upload_time": "2022-03-17T07:12:50",
        "upload_time_iso_8601": "2022-03-17T07:12:50.793888Z",
        "url": "https://files.pythonhosted.org/packages/1b/0c/d1d46608c1ed8ee9bb5e9e735692806641ea502a10985680656e3ebf7713/pickApp-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4325204be2ade57a9acb2025ff6cb36bc0c88a5f3a02ebcfca66cc4ff2ee54cc",
          "md5": "ced015d84b0139beea4a12223ecd85af",
          "sha256": "621d9957bb72266432ae72455219db84e4411ff0dd4bf2eb8201c3b21664999a"
        },
        "downloads": -1,
        "filename": "pickApp-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ced015d84b0139beea4a12223ecd85af",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3371,
        "upload_time": "2022-03-17T07:12:52",
        "upload_time_iso_8601": "2022-03-17T07:12:52.942573Z",
        "url": "https://files.pythonhosted.org/packages/43/25/204be2ade57a9acb2025ff6cb36bc0c88a5f3a02ebcfca66cc4ff2ee54cc/pickApp-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1b0cd1d46608c1ed8ee9bb5e9e735692806641ea502a10985680656e3ebf7713",
        "md5": "1e2e47be97fb566beb3751891239608d",
        "sha256": "dde267ca361df7d0199b2f2890e771582d077c87bcc927746d133217b9e4897c"
      },
      "downloads": -1,
      "filename": "pickApp-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1e2e47be97fb566beb3751891239608d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 3363,
      "upload_time": "2022-03-17T07:12:50",
      "upload_time_iso_8601": "2022-03-17T07:12:50.793888Z",
      "url": "https://files.pythonhosted.org/packages/1b/0c/d1d46608c1ed8ee9bb5e9e735692806641ea502a10985680656e3ebf7713/pickApp-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4325204be2ade57a9acb2025ff6cb36bc0c88a5f3a02ebcfca66cc4ff2ee54cc",
        "md5": "ced015d84b0139beea4a12223ecd85af",
        "sha256": "621d9957bb72266432ae72455219db84e4411ff0dd4bf2eb8201c3b21664999a"
      },
      "downloads": -1,
      "filename": "pickApp-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "ced015d84b0139beea4a12223ecd85af",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 3371,
      "upload_time": "2022-03-17T07:12:52",
      "upload_time_iso_8601": "2022-03-17T07:12:52.942573Z",
      "url": "https://files.pythonhosted.org/packages/43/25/204be2ade57a9acb2025ff6cb36bc0c88a5f3a02ebcfca66cc4ff2ee54cc/pickApp-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}