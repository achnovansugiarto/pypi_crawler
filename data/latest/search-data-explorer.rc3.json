{
  "info": {
    "author": "Simon Blanke",
    "author_email": "simon.blanke@yahoo.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Information Technology",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Scientific/Engineering :: Information Analysis",
      "Topic :: Scientific/Engineering :: Mathematics",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "<H1 align=\"center\">\n    Search Data Explorer\n</H1>\n\n<br>\n\n<H2 align=\"center\">\n    Visualize optimization search-data via plotly in a streamlit dashboard\n</H2>\n\nThe Search-Data-Explorer is a simple application specialized to visualize search-data generated from [Gradient-Free-Optimizers](https://github.com/SimonBlanke/Gradient-Free-Optimizers) or [Hyperactive](https://github.com/SimonBlanke/Hyperactive). It is designed as an easy-to-use tool to gain insights into multi-dimensional data, as commonly found in optimization.\n\n\n<br>\n\n## Disclaimer\n\nThis project is in an early development stage and is only tested manually. If you encounter bugs or have suggestions for improvements, then please open an issue.\n\n\n<br>\n\n## Installation\n\n```console\npip install search-data-explorer\n```\n\n<br>\n\n## How to use\n\nThe Search Data Explorer has a very simple API, that can be explained by the examples below or just execute the command \"`search-data-explorer` [file]\" to open the Search Data Explorer without executing a python script.\n\n\n<br>\n\n### search-data requirements\n\nThe Search Data Explorer is used by loading the search-data with a few lines of code. The search data that is loaded from file must follow the pattern below. The columns can have any name but must contain the `score`, which is always included in search-data from [Gradient-Free-Optimizers](https://github.com/SimonBlanke/Gradient-Free-Optimizers) or [Hyperactive](https://github.com/SimonBlanke/Hyperactive).\n\n<table class=\"table\">\n<thead class=\"table-head\">\n    <tr class=\"row\">\n    <td class=\"cell\">first column name</td>\n    <td class=\"cell\">another column name</td>\n    <td class=\"cell\">...</td>\n    <td class=\"cell\">score</td>\n\n    </tr>\n</thead>\n<tbody class=\"table-body\">\n    <tr class=\"row\">\n    <td class=\"cell\">0.756</td>\n    <td class=\"cell\">0.1</td>\n    <td class=\"cell\">0.2</td>\n    <td class=\"cell\">-3</td>\n    </tr>\n    <tr class=\"row\">\n    <td class=\"cell\">0.823</td>\n    <td class=\"cell\">0.3</td>\n    <td class=\"cell\">0.1</td>\n    <td class=\"cell\">-10</td>\n    </tr>\n    <tr class=\"row\">\n    <td class=\"cell\">...</td>\n    <td class=\"cell\">...</td>\n    <td class=\"cell\">...</td>\n    <td class=\"cell\">...</td>\n    </tr>\n    <tr class=\"row\">\n    <td class=\"cell\">...</td>\n    <td class=\"cell\">...</td>\n    <td class=\"cell\">...</td>\n    <td class=\"cell\">...</td>\n    </tr>\n</tbody>\n</table>\n\n<br>\n\n\n\n## Examples\n\n<br>\n\n### Load search-data by passing dataframe\n\nYou can pass the search-data directly, if you do not want to save your search-data to disk and just explore it one time after the optimization has finished.\n\n```python\nimport numpy as np\nfrom gradient_free_optimizers import RandomSearchOptimizer\n\nfrom search_data_explorer import SearchDataExplorer\n\n\ndef parabola_function(para):\n    loss = para[\"x\"] * para[\"x\"] + para[\"y\"] * para[\"y\"] + para[\"y\"] * para[\"y\"]\n    return -loss\n\n\nsearch_space = {\n    \"x\": np.arange(-10, 10, 0.1),\n    \"y\": np.arange(-10, 10, 0.1),\n    \"z\": np.arange(-10, 10, 0.1),\n}\n\n# generate search-data for this example with gradient-free-optimizers\n\nopt = RandomSearchOptimizer(search_space)\nopt.search(parabola_function, n_iter=1000)\n\nsearch_data = opt.search_data\n\n\n# Open Search-Data-Explorer\n\nsde = SearchDataExplorer()\nsde.open(search_data)  # pass search-data\n```\n\n\n### Load search-data by passing path to file\n\nIf you already have a search-data file on disk you can pass the path to the file to the search-data-explorer.\n\n```python\nimport numpy as np\nfrom gradient_free_optimizers import RandomSearchOptimizer\n\nfrom search_data_explorer import SearchDataExplorer\n\n\ndef parabola_function(para):\n    loss = para[\"x\"] * para[\"x\"] + para[\"y\"] * para[\"y\"] + para[\"y\"] * para[\"y\"]\n    return -loss\n\n\nsearch_space = {\n    \"x\": np.arange(-10, 10, 0.1),\n    \"y\": np.arange(-10, 10, 0.1),\n    \"z\": np.arange(-10, 10, 0.1),\n}\n\n# generate search-data for this example with gradient-free-optimizers\n\nopt = RandomSearchOptimizer(search_space)\nopt.search(parabola_function, n_iter=1000)\n\nsearch_data = opt.search_data\nsearch_data.to_csv(\"search_data.csv\", index=False)\n\n\n# Open Search-Data-Explorer\n\nsde = SearchDataExplorer()\nsde.open(\"model1.csv\")  # pass path to file on disk\n```\n\n\n### Load search-data by browsing for file\n\nYou can just open the search-data-explorer without passing a file or path. In this case you can browse for the file via a menu inside the search-data-explorer.\n\n```python\nimport numpy as np\nfrom gradient_free_optimizers import RandomSearchOptimizer\n\nfrom search_data_explorer import SearchDataExplorer\n\n\ndef parabola_function(para):\n    loss = para[\"x\"] * para[\"x\"] + para[\"y\"] * para[\"y\"] + para[\"y\"] * para[\"y\"]\n    return -loss\n\n\nsearch_space = {\n    \"x\": np.arange(-10, 10, 0.1),\n    \"y\": np.arange(-10, 10, 0.1),\n    \"z\": np.arange(-10, 10, 0.1),\n}\n\n# generate search-data for this example with gradient-free-optimizers\n\nopt = RandomSearchOptimizer(search_space)\nopt.search(parabola_function, n_iter=1000)\n\nsearch_data = opt.search_data\nsearch_data.to_csv(\"search_data.csv\", index=False)\n\n\n# Open Search-Data-Explorer\n\nsde = SearchDataExplorer()\nsde.open()  # start without passing anything and use the file explorer within the search-data-explorer\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/SimonBlanke/search-data-explorer",
    "keywords": "visualization,data-science",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "search-data-explorer",
    "package_url": "https://pypi.org/project/search-data-explorer/",
    "platform": null,
    "project_url": "https://pypi.org/project/search-data-explorer/",
    "project_urls": {
      "Homepage": "https://github.com/SimonBlanke/search-data-explorer"
    },
    "release_url": "https://pypi.org/project/search-data-explorer/0.4.0/",
    "requires_dist": [
      "numpy",
      "pandas",
      "matplotlib",
      "streamlit",
      "plotly"
    ],
    "requires_python": ">=3.5",
    "summary": "",
    "version": "0.4.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17046079,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7d264f5471c659fd254f94532f809d5121a040fa9e02d5c2cad4f2d79f35adde",
          "md5": "fe78d95a8e745f0633b65b85231eff1b",
          "sha256": "6abb9f2259053ab594f8c010045c4badbb9d8c52f50c19d7077f298be79cd9bf"
        },
        "downloads": -1,
        "filename": "search_data_explorer-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fe78d95a8e745f0633b65b85231eff1b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 11511,
        "upload_time": "2023-02-19T06:47:57",
        "upload_time_iso_8601": "2023-02-19T06:47:57.699634Z",
        "url": "https://files.pythonhosted.org/packages/7d/26/4f5471c659fd254f94532f809d5121a040fa9e02d5c2cad4f2d79f35adde/search_data_explorer-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9b61ce4d77f34a6503c6aac0a6411ec2ac81658460b4f8c6eaa562c690f1bf48",
          "md5": "487dc08c8498b52a2d74f9564eb342e7",
          "sha256": "d00d1016f38944121d26a170e561382070e6a7efb73875e42f91794cfcfb7335"
        },
        "downloads": -1,
        "filename": "search_data_explorer-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "487dc08c8498b52a2d74f9564eb342e7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 11517,
        "upload_time": "2023-02-19T08:06:16",
        "upload_time_iso_8601": "2023-02-19T08:06:16.511394Z",
        "url": "https://files.pythonhosted.org/packages/9b/61/ce4d77f34a6503c6aac0a6411ec2ac81658460b4f8c6eaa562c690f1bf48/search_data_explorer-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "95c45513c85bc8c0db5a77175dd25ac2871d7010e7a05e47b94993d76c698106",
          "md5": "2ea4de642ee6c993b381f62158f442e1",
          "sha256": "dd4065643c2ef09702286c476123868bab547a38476b05fef67aaf020c0ca3ef"
        },
        "downloads": -1,
        "filename": "search_data_explorer-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2ea4de642ee6c993b381f62158f442e1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 11534,
        "upload_time": "2023-02-26T05:53:57",
        "upload_time_iso_8601": "2023-02-26T05:53:57.031980Z",
        "url": "https://files.pythonhosted.org/packages/95/c4/5513c85bc8c0db5a77175dd25ac2871d7010e7a05e47b94993d76c698106/search_data_explorer-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "95c45513c85bc8c0db5a77175dd25ac2871d7010e7a05e47b94993d76c698106",
        "md5": "2ea4de642ee6c993b381f62158f442e1",
        "sha256": "dd4065643c2ef09702286c476123868bab547a38476b05fef67aaf020c0ca3ef"
      },
      "downloads": -1,
      "filename": "search_data_explorer-0.4.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2ea4de642ee6c993b381f62158f442e1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 11534,
      "upload_time": "2023-02-26T05:53:57",
      "upload_time_iso_8601": "2023-02-26T05:53:57.031980Z",
      "url": "https://files.pythonhosted.org/packages/95/c4/5513c85bc8c0db5a77175dd25ac2871d7010e7a05e47b94993d76c698106/search_data_explorer-0.4.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}