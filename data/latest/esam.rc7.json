{
  "info": {
    "author": "eons",
    "author_email": "support@eons.dev",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# eons Sample Analysis and Manager\n\n![build](https://github.com/eons-dev/esam/actions/workflows/python-package.yml/badge.svg)\n\nGeneralized framework for scientific data analysis.\n\nDesign in short: Self-registering functors with reflection to and from json for use with arbitrary data structures.\n\nConsider if you would like to design an analysis pipeline to share with your colleagues. All you have to do is create the functors and have your colleagues place them in their respective folders (no code change necessary on their part, since the new files will be automatically picked up). You can then pass your data as json between each other, potentially creating your own analysis steps, report outputs, etc., all of which could be shared later or kept as personalized as you'd like.\n\nBuilt with [eons](https://github.com/eons-dev/lib_eons) using the [eons build system](https://github.com/eons-dev/bin_ebbs)\n\n## Installation\n`pip install esam`\n\n## Usage\n\n**Quickstart: just go copy the example folder somewhere and run esam from that directory; then start hacking!**\n\nTo use esam (or your own custom variant), you must first invent the universe.\nOnce that's done and you've installed the program on your computer, you'll need to create a workspace.\nA workspace is any folder you'd like to store your data in, which also contains a `sam` folder.\nIn the `sam` folder should be the following sub-folders:\n* analysis\n* data\n* format/input\n* format/output\n\nThese folders will then be populated by your own data structures (`Datum`), parsers (`InputFormatFunctor`), report templates (`OutputFormatFunctor`), and analysis steps (`AnalysisFunctor`).\n\nNOTE: it is not necessary to do anything besides place your files in these directories to use them. See below for more info on design (and technically, it doesn't matter which folder what file is in but the organization will help keep things consistent when publishing or sharing your work)\n\n## Example\n\nLet's break down this command: `esam -v -i *.txt -if in_ms -f mass --ignore 86 -s saved_ms-data.json -o out_ms-data_1.xlsx -of out_excel`\n\nThe start is straightforward. `esam -v` runs this program in verbose mode, which will print debug messages.  \nThe next part might be a bit arcane. This is intended to be run on a unix system where `*` will be expanded to all matches. So, in this case, `-i *.txt` will take all files in the current directory that end in \".txt\". That trick will be invaluable when working with datasets containing lots of raw files.  \nContinuing with the inputs, we have `-if in_ms`. This is the esam magic. What we are doing is telling esam that all of our .txt files are in a format which can be parsed by the \"in_ms\" object, which is located in the `format/inputs` folder and self-registers with our program when you run the command. Thus, this translates to \"the input format for my input files is the in_ms format class\". When working with your own data, you might want to take a look at in_ms and write your own version.  \nNext we use `-f mass --ignore 86` to filter our data, by removing all entries with a mass of 86. Similar to how `-if` is used to find the right class to parse our inputs, `-f` must be used to find the right field in our data to filter by. Specifying `-f` is necessary if you want to use `--only` or `--ignore`. Filtered data will not be saved or output. If you wish to consolidate inputs into a single dataset then filter, run esam twice: once to generate a saved file with all data and again to load that saved file, filter, and generate another saved file with the data you want. You can also do this with analysis steps so that you don't lose progress along the way.  \nYou might have guessed what we do next. We save the file! Using `-s saved_ms-data.json` generates a reusable json output. If you wanted to add data to this saved file, you could run this same command on different \\*.txt files and add `-l saved_ms-data.json`, to load the previously saved data and then add to it.  \nLastly, we generate our desired output with `-o out_ms-data_1.xlsx -of out_excel`. This is exactly analogous to input parsing, except instead of reading in a file and populating data structures from the contents, we take data structures and write their fields in a way that shows us usable information.\n\nHopefully, that's enough to get you started. If you need more help, start with `esam --help` and if you're still having trouble, reach out to us at support@eons.dev. We'll try our best to get back to you quickly :)\n\nNOTE: out_excel requires that you `pip install pandas openpyxl` and name your output file \" SOMETHING **.xlsx** \" (no spaces)\n\nIf you're curious, all the files names here follow the [eons naming scheme](https://eons.dev/convention/naming/)\n\n## Design\n\n### Saving and Loading\n\nIn addition to having self-registering functors, provided by eons, esam provides reflection between python and json. Saving files thus allows you to retain everything from your original data, no matter how complex the initial analysis was.\nAs long as your `Data` and `Functors` (the classes you derive from `esam.Datum` and `eons.UserFunctor` or their children), have been placed in the proper folders, you'll be able to save, load, and thus, work with your data through json.\n\nSaving and loading is handled by esam, rather than the downstream application. \nSaved files will always be .json (unless you fork this repository and change the ESAM base class).\n\nCurrently, [jsonpickle](https://github.com/jsonpickle/jsonpickle) is used for json reflection.\n\n### Functors\n\nFunctors are classes (objects) that have an invokable `()` operator, which allows you to treat them like functions.\nesam uses functors to provide input, analysis, and output functionalities, which are made simple by classical inheritance.\n\nThe primary ways functors are used are:\n1. To digest input and store the contents of a file as workable data structures.\n2. To mutate stored data and do analytical work.\n3. To output stored data into a user-friendly report format.\n\nFunctors are also used to provide save and load functionality.\n\nFor extensibility, all functors take a `**kwargs` argument. This allows you to provide arbitrary key word arguments (e.g. key=\"value\") to your objects.\n\n### Self Registration\n\nNormally, one has to `import` the files they create into their \"main\" file in order to use them. That does not apply when using esam. Instead, you simply have to derive from an appropriate base class and then call `eons.SelfRegistering.RegisterAllClassesInDirectory(...)` (which is done for you on the folder paths detailed above). Providing the directory of the file as the only argument, this will essentially `import` all files in that directory and make them instantiable via `eons.SelfRegistering(\"ClassName\")`.\n\n#### Example\n\nFor example, in some `MyDatum.py` in a `MyData` directory, you might have:\n```\nimport logging\nfrom esam import Datum\nclass MyDatum(Datum): #Datum is a useful child of SelfRegistering\n    def __init__(self, name=\"only relevant during direct instantiation\"):\n        logging.info(f\"init MyDatum\")\n        super().__init__()\n```\nFrom our main.py, we can then use `eons` to call:\n```\nimport sys, os\nfrom eons import SelfRegistering\nSelfRegistering.RegisterAllClassesInDirectory(os.path.join(os.path.dirname(os.path.abspath(__file__)), \"MyData\"))\n```\nHere, we use `os.path` to make the file path relevant to the project folder and not the current working directory.  \nThen, from main, etc. we can call:\n```\nmyDatum = eons.SelfRegistering(\"MyDatum\")\n```\nand we will get a `MyDatum` object, derived from `esam.Datum`, fully instantiated.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/eons-dev/esam",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "esam",
    "package_url": "https://pypi.org/project/esam/",
    "platform": "",
    "project_url": "https://pypi.org/project/esam/",
    "project_urls": {
      "Bug Tracker": "https://github.com/eons-dev/esam/issues",
      "Homepage": "https://github.com/eons-dev/esam"
    },
    "release_url": "https://pypi.org/project/esam/1.1.2/",
    "requires_dist": [
      "jsonpickle",
      "eons"
    ],
    "requires_python": ">=3.6",
    "summary": "eons sample analyzer and manager",
    "version": "1.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11434183,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "38160d04c452e6aa2ac3b8f7df838440ed5951ae0f0d8037e2765048d649a890",
          "md5": "ba1d32ecec40ee7a114e1a4ced17cc21",
          "sha256": "68658e70fb99b734bf9d2653d6a8c0536c4ae34f4be09ea2ee07323de72efb00"
        },
        "downloads": -1,
        "filename": "esam-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ba1d32ecec40ee7a114e1a4ced17cc21",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 20275,
        "upload_time": "2021-06-27T15:57:56",
        "upload_time_iso_8601": "2021-06-27T15:57:56.161750Z",
        "url": "https://files.pythonhosted.org/packages/38/16/0d04c452e6aa2ac3b8f7df838440ed5951ae0f0d8037e2765048d649a890/esam-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "009b31d03199dd0756e44b22d839b0e47181db1b1d760a245361e0ce30dd330e",
          "md5": "f46127ff39e9d261f934948d4c289c9c",
          "sha256": "29422825785444f3b3b3516b5554737cd3cbf1c4cc264b52cfb4dc0e0128e63f"
        },
        "downloads": -1,
        "filename": "esam-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f46127ff39e9d261f934948d4c289c9c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17458,
        "upload_time": "2021-06-27T15:57:57",
        "upload_time_iso_8601": "2021-06-27T15:57:57.154360Z",
        "url": "https://files.pythonhosted.org/packages/00/9b/31d03199dd0756e44b22d839b0e47181db1b1d760a245361e0ce30dd330e/esam-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "03eb511dab61df6e0a1a34cf31f79407f37d77da37f4fb3a2cdd11dcafd07b11",
          "md5": "4f3a450096d61f68edf19536926b4945",
          "sha256": "0e5430f35c8c135033c0564f1637d939fa61d581bc45111d18396c274c04de80"
        },
        "downloads": -1,
        "filename": "esam-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4f3a450096d61f68edf19536926b4945",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 20275,
        "upload_time": "2021-06-27T16:03:38",
        "upload_time_iso_8601": "2021-06-27T16:03:38.496231Z",
        "url": "https://files.pythonhosted.org/packages/03/eb/511dab61df6e0a1a34cf31f79407f37d77da37f4fb3a2cdd11dcafd07b11/esam-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f2472cde1ff2c9585f25f0fe8196917e1f43f539c817adaabf167b1bec63f0b",
          "md5": "258f69d3f3cf12dac05781a7c3140c48",
          "sha256": "51c0a57b93cedc154749a1efb25a23c07de7a65c794b14293b17bb3bbebec475"
        },
        "downloads": -1,
        "filename": "esam-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "258f69d3f3cf12dac05781a7c3140c48",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17461,
        "upload_time": "2021-06-27T16:03:39",
        "upload_time_iso_8601": "2021-06-27T16:03:39.438781Z",
        "url": "https://files.pythonhosted.org/packages/0f/24/72cde1ff2c9585f25f0fe8196917e1f43f539c817adaabf167b1bec63f0b/esam-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e15c658b703f643b898df7706c1914a403f1f8cc20d75bbf25576e401b667c76",
          "md5": "82630a0967327a1bc0393bce84ee0edd",
          "sha256": "c796dc99744c0dc0c2443419b5a71e582a3dafd59f3957f8642e3fccf8cb777d"
        },
        "downloads": -1,
        "filename": "esam-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "82630a0967327a1bc0393bce84ee0edd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 20344,
        "upload_time": "2021-07-07T06:30:19",
        "upload_time_iso_8601": "2021-07-07T06:30:19.682180Z",
        "url": "https://files.pythonhosted.org/packages/e1/5c/658b703f643b898df7706c1914a403f1f8cc20d75bbf25576e401b667c76/esam-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9ab1479819a94ba00ca68b0d587a50a626e5bf6c9ef709c4b853dc46cfff5cc6",
          "md5": "5ff2a0214025a9b10fa8ca646b9f42e3",
          "sha256": "7ea613cdf9ddd15d27af6168aeab435d9ded1e11976797b181d7225c61ace4c4"
        },
        "downloads": -1,
        "filename": "esam-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "5ff2a0214025a9b10fa8ca646b9f42e3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17559,
        "upload_time": "2021-07-07T06:30:20",
        "upload_time_iso_8601": "2021-07-07T06:30:20.482340Z",
        "url": "https://files.pythonhosted.org/packages/9a/b1/479819a94ba00ca68b0d587a50a626e5bf6c9ef709c4b853dc46cfff5cc6/esam-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d839ae2b1ec4e2d931bebcaba1658b70939294ba5755ca66401bf9c3849cd57",
          "md5": "5bb083d1268ce988d271155fa9b1deaa",
          "sha256": "87fb8ec8606df892cea0006af9a6a15ab161fa9703eb1b88abc92f1012ecc978"
        },
        "downloads": -1,
        "filename": "esam-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5bb083d1268ce988d271155fa9b1deaa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 20379,
        "upload_time": "2021-07-08T03:08:09",
        "upload_time_iso_8601": "2021-07-08T03:08:09.570398Z",
        "url": "https://files.pythonhosted.org/packages/1d/83/9ae2b1ec4e2d931bebcaba1658b70939294ba5755ca66401bf9c3849cd57/esam-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4ab8da1a02524c55eef3fca6bb4b14ff148bfc59f3e56daa17eebdb536d196d4",
          "md5": "832c895aa7db4f0b07f1379bb5b6fe12",
          "sha256": "6da419b04511fe6939fcecab51a006438a0b954c2dba39dfb9d504d24f440578"
        },
        "downloads": -1,
        "filename": "esam-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "832c895aa7db4f0b07f1379bb5b6fe12",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17617,
        "upload_time": "2021-07-08T03:08:10",
        "upload_time_iso_8601": "2021-07-08T03:08:10.428299Z",
        "url": "https://files.pythonhosted.org/packages/4a/b8/da1a02524c55eef3fca6bb4b14ff148bfc59f3e56daa17eebdb536d196d4/esam-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "615bcd5f5e3f6583cc33599e488281051b35c9b17163991746f270c9d1441cbc",
          "md5": "71dbadd7a340585dd0db935d1a47b0c0",
          "sha256": "64013bc509fa56a33c17fe22c3f3adbc58b5498f2a38d553e338f86c1cf461dd"
        },
        "downloads": -1,
        "filename": "esam-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "71dbadd7a340585dd0db935d1a47b0c0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 13454,
        "upload_time": "2021-07-15T06:39:14",
        "upload_time_iso_8601": "2021-07-15T06:39:14.869501Z",
        "url": "https://files.pythonhosted.org/packages/61/5b/cd5f5e3f6583cc33599e488281051b35c9b17163991746f270c9d1441cbc/esam-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "415256e039b41f78cb99e01968564530643ad0b96f7ed4a41eba0b40425a2e2d",
          "md5": "4a482508533c1416de03ac53f839d43b",
          "sha256": "1d43fbb83a5729c5dec7988dc49de30b2d3b6c5fd787c26cd1b876d7b0e3485e"
        },
        "downloads": -1,
        "filename": "esam-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4a482508533c1416de03ac53f839d43b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 16489,
        "upload_time": "2021-07-15T06:39:15",
        "upload_time_iso_8601": "2021-07-15T06:39:15.762795Z",
        "url": "https://files.pythonhosted.org/packages/41/52/56e039b41f78cb99e01968564530643ad0b96f7ed4a41eba0b40425a2e2d/esam-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "196a965158f7189435201ca2669a7be0e2e0b96202b6eab770a1f69be23e3af6",
          "md5": "ad1c7c73cb5bf4eb6732606a846250ba",
          "sha256": "a4a487d57ebf4e61c0ead72d9d4b6fd94a9a3a3232f050e3dceb7ae12adf5a06"
        },
        "downloads": -1,
        "filename": "esam-1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ad1c7c73cb5bf4eb6732606a846250ba",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 13452,
        "upload_time": "2021-08-22T19:48:08",
        "upload_time_iso_8601": "2021-08-22T19:48:08.070498Z",
        "url": "https://files.pythonhosted.org/packages/19/6a/965158f7189435201ca2669a7be0e2e0b96202b6eab770a1f69be23e3af6/esam-1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "30df245889ff415cb33f9616234e6e0490d9048a19851b8917fe7ee945cd62ff",
          "md5": "1d6308a26c67573924c15d504a20be12",
          "sha256": "d458e567276aac87dd3275881761d2e0964bcd8bea3f88687cee71b69736eb19"
        },
        "downloads": -1,
        "filename": "esam-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1d6308a26c67573924c15d504a20be12",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 16475,
        "upload_time": "2021-08-22T19:48:09",
        "upload_time_iso_8601": "2021-08-22T19:48:09.269024Z",
        "url": "https://files.pythonhosted.org/packages/30/df/245889ff415cb33f9616234e6e0490d9048a19851b8917fe7ee945cd62ff/esam-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4a00f69b1217e8b15fdb3efade439e4dd568a49b44d345c695ef0e2a03029691",
          "md5": "6c1c967b9cab71076a474d3b4fa92308",
          "sha256": "0a747247aa1a780851b16ab3fdc78bb8b92cbb6b11047730cc149caaec83a693"
        },
        "downloads": -1,
        "filename": "esam-1.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6c1c967b9cab71076a474d3b4fa92308",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 13472,
        "upload_time": "2021-09-13T05:42:10",
        "upload_time_iso_8601": "2021-09-13T05:42:10.832736Z",
        "url": "https://files.pythonhosted.org/packages/4a/00/f69b1217e8b15fdb3efade439e4dd568a49b44d345c695ef0e2a03029691/esam-1.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e29ec4704e415645c2149d8e5709f8c680eb3faa6d7b633365dda55c2d7a497d",
          "md5": "eab6a43362666bec7b6592de2957d895",
          "sha256": "8c3d21c09fbd9964cd10f0e01203031a4fd94ec5de3ef48ab128f49248f2d176"
        },
        "downloads": -1,
        "filename": "esam-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "eab6a43362666bec7b6592de2957d895",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 16486,
        "upload_time": "2021-09-13T05:42:12",
        "upload_time_iso_8601": "2021-09-13T05:42:12.160549Z",
        "url": "https://files.pythonhosted.org/packages/e2/9e/c4704e415645c2149d8e5709f8c680eb3faa6d7b633365dda55c2d7a497d/esam-1.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4a00f69b1217e8b15fdb3efade439e4dd568a49b44d345c695ef0e2a03029691",
        "md5": "6c1c967b9cab71076a474d3b4fa92308",
        "sha256": "0a747247aa1a780851b16ab3fdc78bb8b92cbb6b11047730cc149caaec83a693"
      },
      "downloads": -1,
      "filename": "esam-1.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6c1c967b9cab71076a474d3b4fa92308",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 13472,
      "upload_time": "2021-09-13T05:42:10",
      "upload_time_iso_8601": "2021-09-13T05:42:10.832736Z",
      "url": "https://files.pythonhosted.org/packages/4a/00/f69b1217e8b15fdb3efade439e4dd568a49b44d345c695ef0e2a03029691/esam-1.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e29ec4704e415645c2149d8e5709f8c680eb3faa6d7b633365dda55c2d7a497d",
        "md5": "eab6a43362666bec7b6592de2957d895",
        "sha256": "8c3d21c09fbd9964cd10f0e01203031a4fd94ec5de3ef48ab128f49248f2d176"
      },
      "downloads": -1,
      "filename": "esam-1.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "eab6a43362666bec7b6592de2957d895",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 16486,
      "upload_time": "2021-09-13T05:42:12",
      "upload_time_iso_8601": "2021-09-13T05:42:12.160549Z",
      "url": "https://files.pythonhosted.org/packages/e2/9e/c4704e415645c2149d8e5709f8c680eb3faa6d7b633365dda55c2d7a497d/esam-1.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}