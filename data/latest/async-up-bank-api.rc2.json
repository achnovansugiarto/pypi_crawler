{
  "info": {
    "author": "Joshua Cowie-Willox & Jason Dau",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# Async Up Bank API\n\nThis project is a async fork of jcwillox/up-bank-api. I've attempted to keep most things the same but I have changed a fair bit.\n\nIf there's any issues please let me know.\n\n[![Project version](https://img.shields.io/pypi/v/async-up-bank-api?style=flat-square)](https://pypi.python.org/pypi/async-up-bank-api)\n[![Supported python versions](https://img.shields.io/pypi/pyversions/up-bank-api?style=flat-square)](https://pypi.python.org/pypi/async-up-bank-api)\n[![License](https://img.shields.io/github/license/jcwillox/up-bank-api?style=flat-square)](https://github.com/unchartedshark/async-up-bank-api/blob/master/LICENSE)\n![CodeFactor Grade](https://img.shields.io/codefactor/grade/github/unchartedshark/async-up-bank-api?style=flat-square)\n\nThis is an unofficial python wrapper (client) for the australian bank Up's API.\n\n- 🕶️ [The Up Website](https://up.com.au)\n- 📖 [Up API Documentation](https://developer.up.com.au)\n- [Up API on Github](https://github.com/up-banking/api)\n\n## Installation\n\n```shell\n$ pip install async-up-bank-api\n```\n\n## Usage\n\nThe code is fully typed and documented so I'd recommend just having a look at the code, or letting syntax completion take the wheel.\n\nTo use this library you will need a personal access token which can be retrieved from https://developer.up.com.au. When using this library you can either provide the token directly or use the environment variable `UP_TOKEN`.\n\n```python\nfrom upbankapi import Client, NotAuthorizedException\nimport asyncio\n\n# use the environment variable UP_TOKEN\nclient = Client()\n\n# or directly provide token\nclient = Client(token=\"MY_TOKEN\")  \n\n# optionally check the token is valid\nasync def main():\n    try:\n        user_id = await client.ping()\n        print(\"Authorized: \" + user_id)\n    except NotAuthorizedException:\n        print(\"The token is invalid\")\n\nif __name__ == '__main__':\n    asyncio.get_event_loop().run_until_complete(main())\n```\n## Examples\n\n* [Accounts](#accounts)\n* [Transactions](#transactions)\n* [Pagination](#pagination)\n* [Webhooks](#webhooks)\n\n### Accounts\n\n```python\nasync def main():\n    account: Account\n    transaction: Transaction\n\n    # list accounts\n    async for account in await client.accounts():\n        print(account)\n\n        # list transactions for account\n        async for transaction in await account.transactions():\n            print(transaction)\n\nif __name__ == '__main__':\n    asyncio.get_event_loop().run_until_complete(main())\n\n>>> <Account 'Up Account' (TRANSACTIONAL): 1234.56 AUD>\n>>> <Transaction SETTLED: -1.0 AUD [7-Eleven]>\n>>> <Account '💰 Savings' (SAVER): 12345.67 AUD>\n>>> <Transaction SETTLED: 10.0 AUD [Interest]>\n```\n\n```python\n# get the unique id of an account\naccounts[1].id\n>>> \"d7cd1152-e78a-4ad7-8202-d27cddb02a28\"\n\n# get a specific account by its unique id\nsavings = client.account(\"d7cd1152-e78a-4ad7-8202-d27cddb02a28\")\nsavings\n>>> <Account '💰 Savings' (SAVER): 12345.67 AUD>\nsavings.balance\n>>> 12345.67\n```\n\n### Transactions\n\nGet transactions across all accounts.\n```python\n>>> list( await client.transactions() )\n[<Transaction SETTLED: -1.0 AUD [7-Eleven]>, <Transaction SETTLED: 10.0 AUD [Interest]>]\n```\nGet last 5 transactions for a given account id.\n```python\nSAVINGS_ID = \"d7cd1152-e78a-4ad7-8202-d27cddb02a28\"\n\nlist( await client.account(SAVINGS_ID).transactions(limit=5) )\n>>> [<Transaction SETTLED: 10.0 AUD [Interest]>]\n\nlist( await client.transactions(account_id=SAVINGS_ID, limit=5) )\n>>> [<Transaction SETTLED: 10.0 AUD [Interest]>]\n```\nGet a specific transaction.\n```python\nawait client.transaction(\"17c577f2-ae8e-4622-90a7-87d95094c2a9\")\n>>> <Transaction SETTLED: -1.0 AUD [7-Eleven]>\n```\n\n### Pagination\n\nUp's API uses pagination, this means methods in this library that return more than one record with pagination sported will return a instance inheriting from `Pagination`. This is effectively just an async iterator. \n\nEvery `page_size` records the instance of `Pagination` will make a request for the next `page_size` records asynchronous.\n\nA `limit` can be used to limit the maximum number of records returned, when a limit is specified the iterator will never return more than `limit` but can return less.\nUsing `limit=None` will return all records.\n```python\ntransactions = await client.transactions(limit=5)\n\nasync for transaction in transactions:\n    print(transactions)\n\nprint(list( transactions ))\n>>> [<Transaction SETTLED: -1.0 AUD [7-Eleven]>, <Transaction SETTLED: 10.0 AUD [Interest]>]\n```\n`Pagination` supports **slicing**, it still returns an iterator and will fetch the records as required.\n\n```python\ntransactions = await client.transactions(limit=20)\nlist( transactions[10:20] )\n>>> [<Transaction ...>, ...]\n```\n> Note that while it may appear the slice `[:limit]` has the same effect as specifying a `limit`, it does not, when you specify a limit the code optimises the page size. \n> For example, using the slice `[:5]` will fetch the first 20 records and return only 5, using `limit=5` it will fetch and return the first 5 records. However, if you manually specify `page_size=5` then both options have the same effect.\n\n### Webhooks\n\nList users webhooks\n```python\nlist( await client.webhooks() )\n>>> [<Webhook '1c3a4fd4-6c57-4aa8-8481-cf31a46bc001': https://mywebhook.tld/c2f89ed40e26c936 (Hello World!)>]\n```\n\nGet a specific webhook\n```python\nawait client.webhook(\"1c3a4fd4-6c57-4aa8-8481-cf31a46bc001\")\n# or equivalently\nawait client.webhook.get(\"1c3a4fd4-6c57-4aa8-8481-cf31a46bc001\")\n>>> <Webhook '1c3a4fd4-6c57-4aa8-8481-cf31a46bc001': https://mywebhook.tld/c2f89ed40e26c936 (Hello World!)>\n```\n\nCreate a webhook\n```python\nawait client.webhook.create(\"https://mywebhook.tld/c2f89ed40e26c936\", description=\"Hello World!\")\n>>> <Webhook '1c3a4fd4-6c57-4aa8-8481-cf31a46bc001': https://mywebhook.tld/c2f89ed40e26c936 (Hello World!)>\n```\n\nInteracting with a webhook\n```python\nwebhook = await client.webhook(\"1c3a4fd4-6c57-4aa8-8481-cf31a46bc001\")\n\n# ping the webhook\nawait webhook.ping()\n>>> <WebhookEvent PING: webhook_id='1c3a4fd4-6c57-4aa8-8481-cf31a46bc001'>\n\n# get the webhooks logs\nlist( await webhook.logs() )\n>>> [<WebhookLog BAD_RESPONSE_CODE: response_code=404>]\n\n# get the event associated with a log entry\nawait webhook.logs()[0].event\n>>> <WebhookEvent PING: webhook_id='1c3a4fd4-6c57-4aa8-8481-cf31a46bc001'>\n\n# delete the webhook\nawait webhook.delete()\n```\n\nWhen interacting with with a specific webhook there are two options.\n\nFor example the two code blocks below have the same result (deleting the webhook), however, the first option uses 2 requests and the second option uses only 1 request.\nThis is because option 1 will request the webhook details, and then send the delete request. Option 2 directly sends the delete request.\n```python\n# Option 1\nawait client.webhook(\"1c3a4fd4-6c57-4aa8-8481-cf31a46bc001\").delete()\n```\n```python\n# Option 2\nawait client.webhook.delete(\"1c3a4fd4-6c57-4aa8-8481-cf31a46bc001\")\n```\nEach option can be useful depending on the use case. Option 2 is primarily useful when do not already have the Webhook object but have the id and only want to perform a single action.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/unchartedshark/async-up-bank-api/archive/v0.1.2.zip",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/unchartedshark/async-up-bank-api",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "async-up-bank-api",
    "package_url": "https://pypi.org/project/async-up-bank-api/",
    "platform": "any",
    "project_url": "https://pypi.org/project/async-up-bank-api/",
    "project_urls": {
      "Download": "https://github.com/unchartedshark/async-up-bank-api/archive/v0.1.2.zip",
      "Homepage": "https://github.com/unchartedshark/async-up-bank-api"
    },
    "release_url": "https://pypi.org/project/async-up-bank-api/0.1.2/",
    "requires_dist": [
      "aiohttp (>=3.7.2)",
      "pydantic (>=1.7.2)"
    ],
    "requires_python": ">=3.7",
    "summary": "💎 Typed python client for Up's banking API",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8568354,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "15fa1f170669c9befc1b36ad7934c73ab3a4cd12d765776d9c68c7a42d886b2e",
          "md5": "b9bf638d5abf942850d5e05d8c7a06c7",
          "sha256": "609d29ed8e4ae5576c05012a25a7b171558f1e57d44d07f5a2d0777137bbe463"
        },
        "downloads": -1,
        "filename": "async_up_bank_api-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b9bf638d5abf942850d5e05d8c7a06c7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 13867,
        "upload_time": "2020-11-03T07:15:02",
        "upload_time_iso_8601": "2020-11-03T07:15:02.469467Z",
        "url": "https://files.pythonhosted.org/packages/15/fa/1f170669c9befc1b36ad7934c73ab3a4cd12d765776d9c68c7a42d886b2e/async_up_bank_api-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b5288007f8cf84c4c717c435fcd917d98025dd631c22098751fb3b7538776ba5",
          "md5": "b4097c9e3c2ff4baf24d971850d1ee33",
          "sha256": "923559f92306603bbf102c7b998013db75c81401844a34b963e99a975e23fb7a"
        },
        "downloads": -1,
        "filename": "async-up-bank-api-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b4097c9e3c2ff4baf24d971850d1ee33",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 8910,
        "upload_time": "2020-11-03T07:15:03",
        "upload_time_iso_8601": "2020-11-03T07:15:03.937316Z",
        "url": "https://files.pythonhosted.org/packages/b5/28/8007f8cf84c4c717c435fcd917d98025dd631c22098751fb3b7538776ba5/async-up-bank-api-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2e35d0b339d32d85663c3e691bd7d90fa2c70130d7b8f837a82ebc1ff86359fd",
          "md5": "a8b83131108e5c5b99e50a974f040a56",
          "sha256": "626b78a563e8a14b39acd66d05adf1d4a888f6c48910d818f3696f697fc4e5ff"
        },
        "downloads": -1,
        "filename": "async_up_bank_api-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a8b83131108e5c5b99e50a974f040a56",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 20434,
        "upload_time": "2020-11-03T07:23:31",
        "upload_time_iso_8601": "2020-11-03T07:23:31.906280Z",
        "url": "https://files.pythonhosted.org/packages/2e/35/d0b339d32d85663c3e691bd7d90fa2c70130d7b8f837a82ebc1ff86359fd/async_up_bank_api-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "37649c6ed28adc85dabdccefd5981736b890625f9ba1bdbfbdec6e4b06dc0dee",
          "md5": "78305998364ce71f4e5a9d0dd872ae8d",
          "sha256": "080edfcfbbb02e7899f19d551d1b5099e3c9432f579f8c62fff447986cf2464e"
        },
        "downloads": -1,
        "filename": "async-up-bank-api-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "78305998364ce71f4e5a9d0dd872ae8d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 12341,
        "upload_time": "2020-11-03T07:23:33",
        "upload_time_iso_8601": "2020-11-03T07:23:33.237021Z",
        "url": "https://files.pythonhosted.org/packages/37/64/9c6ed28adc85dabdccefd5981736b890625f9ba1bdbfbdec6e4b06dc0dee/async-up-bank-api-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2e35d0b339d32d85663c3e691bd7d90fa2c70130d7b8f837a82ebc1ff86359fd",
        "md5": "a8b83131108e5c5b99e50a974f040a56",
        "sha256": "626b78a563e8a14b39acd66d05adf1d4a888f6c48910d818f3696f697fc4e5ff"
      },
      "downloads": -1,
      "filename": "async_up_bank_api-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a8b83131108e5c5b99e50a974f040a56",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 20434,
      "upload_time": "2020-11-03T07:23:31",
      "upload_time_iso_8601": "2020-11-03T07:23:31.906280Z",
      "url": "https://files.pythonhosted.org/packages/2e/35/d0b339d32d85663c3e691bd7d90fa2c70130d7b8f837a82ebc1ff86359fd/async_up_bank_api-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "37649c6ed28adc85dabdccefd5981736b890625f9ba1bdbfbdec6e4b06dc0dee",
        "md5": "78305998364ce71f4e5a9d0dd872ae8d",
        "sha256": "080edfcfbbb02e7899f19d551d1b5099e3c9432f579f8c62fff447986cf2464e"
      },
      "downloads": -1,
      "filename": "async-up-bank-api-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "78305998364ce71f4e5a9d0dd872ae8d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 12341,
      "upload_time": "2020-11-03T07:23:33",
      "upload_time_iso_8601": "2020-11-03T07:23:33.237021Z",
      "url": "https://files.pythonhosted.org/packages/37/64/9c6ed28adc85dabdccefd5981736b890625f9ba1bdbfbdec6e4b06dc0dee/async-up-bank-api-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}