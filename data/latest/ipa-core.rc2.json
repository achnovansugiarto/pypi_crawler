{
  "info": {
    "author": "Riccardo Orlando",
    "author_email": "orlandoricc@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "<div align=\"center\">\n\n# üç∫IPA: import, preprocess, accelerate\n\n[//]: # ([![Open in Visual Studio Code]&#40;https://open.vscode.dev/badges/open-in-vscode.svg&#41;]&#40;https://github.dev/Riccorl/ipa&#41;)\n[![PyTorch](https://img.shields.io/badge/PyTorch-orange?logo=pytorch)](https://pytorch.org/)\n[![Stanza](https://img.shields.io/badge/1.4-Stanza-5f0a09?logo=stanza)](https://stanfordnlp.github.io/stanza/)\n[![SpaCy](https://img.shields.io/badge/3.4.3-SpaCy-1a6f93?logo=spacy)](https://spacy.io/)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000)](https://github.com/psf/black)\n\n[![Upload to PyPi](https://github.com/Riccorl/ipa/actions/workflows/python-publish-pypi.yml/badge.svg)](https://github.com/Riccorl/ipa/actions/workflows/python-publish-pypi.yml)\n[![PyPi Version](https://img.shields.io/github/v/release/Riccorl/ipa)](https://github.com/Riccorl/ipa/releases)\n[![DeepSource](https://deepsource.io/gh/Riccorl/ipa.svg/?label=active+issues&token=QC6Jty-YdgXjKh9mKZyeqa4I)](https://deepsource.io/gh/Riccorl/ipa/?ref=repository-badge)\n\n</div>\n\nüç∫IPA: import, preprocess, accelerate\n\n## How to use\n\n### Install\n\nInstall the library from [PyPI](https://pypi.org/project/ipa-core):\n\n```bash\npip install ipa-core\n```\n\n### Usage\n\nIPA is a Python library that provides a set of preprocessing wrappers for Stanza and\nspaCy, providing a unified API for both libraries, making them interchangeable.\n\nLet's start with a simple example. Here we are using the `SpacyTokenizer` wrapper to preprocess a text: \n\n```python\nfrom ipa import SpacyTokenizer\n\nspacy_tokenizer = SpacyTokenizer(language=\"en\", return_pos_tags=True, return_lemmas=True)\ntokenized = spacy_tokenizer(\"Mary sold the car to John.\")\nfor word in tokenized:\n    print(\"{:<5} {:<10} {:<10} {:<10}\".format(word.index, word.text, word.pos, word.lemma))\n\n\"\"\"\n0    Mary       PROPN      Mary\n1    sold       VERB       sell\n2    the        DET        the\n3    car        NOUN       car\n4    to         ADP        to\n5    John       PROPN      John\n6    .          PUNCT      .\n\"\"\"\n```\n\nYou can load any model from spaCy, with its canonical name, `en_core_web_sm`, or with a simple alias, as \nwe did here, like `en`. By default, the simpler alias loads the smaller version of each model. For a complete \nlist of available models, see [spaCy documentation](https://spacy.io/usage/models).\n\nIn the very same way, you can load any model from Stanza using the `StanzaTokenizer` wrapper:\n\n```python\nfrom ipa import StanzaTokenizer\n\nstanza_tokenizer = StanzaTokenizer(language=\"en\", return_pos_tags=True, return_lemmas=True)\ntokenized = stanza_tokenizer(\"Mary sold the car to John.\")\nfor word in tokenized:\n    print(\"{:<5} {:<10} {:<10} {:<10}\".format(word.index, word.text, word.pos, word.lemma))\n\n\"\"\"\n0    Mary       PROPN      Mary\n1    sold       VERB       sell\n2    the        DET        the\n3    car        NOUN       car\n4    to         ADP        to\n5    John       PROPN      John\n6    .          PUNCT      .\n\"\"\"\n```\n\nFor more simple scenarios, you can use the `WhiteSpaceTokenizer` wrapper, which will just split the text \nby whitespace:\n\n```python\nfrom ipa import WhitespaceTokenizer\n\nwhitespace_tokenizer = WhitespaceTokenizer()\ntokenized = whitespace_tokenizer(\"Mary sold the car to John .\")\nfor word in tokenized:\n    print(\"{:<5} {:<10}\".format(word.index, word.text))\n\n\"\"\"\n0    Mary\n1    sold\n2    the\n3    car\n4    to\n5    John\n6    .\n\"\"\"\n```\n\n### Features\n\n#### Complete preprocessing pipeline\n\n`SpacyTokenizer` and `StanzaTokenizer` provide a unified API for both libraries, exposing most of their\nfeatures, like tokenization, Part-of-Speech tagging, lemmatization and dependency parsing. You can activate \nand deactivate any of these using `return_pos_tags`, `return_lemmas` and `return_deps`. So, for example,\n\n```python\nStanzaTokenizer(language=\"en\", return_pos_tags=True, return_lemmas=True)\n```\n\nwill return a list of `Token` objects, with the `pos` and `lemma` fields filled.\n\nwhile\n\n```python\nStanzaTokenizer(language=\"en\")\n```\n\nwill return a list of `Token` objects, with only the `text` field filled.\n\n### GPU support\n\nWith `use_gpu=True`, the library will use the GPU if it is available. To set up the environment for the GPU, \nrefer to the [Stanza documentation](https://stanfordnlp.github.io/stanza/) and the \n[spaCy documentation](https://spacy.io/usage/gpu).\n\n## API\n\n### Tokenizers\n\n`SpacyTokenizer`\n\n```python\nclass SpacyTokenizer(BaseTokenizer):\n    def __init__(\n        self,\n        language: str = \"en\",\n        return_pos_tags: bool = False,\n        return_lemmas: bool = False,\n        return_deps: bool = False,\n        split_on_spaces: bool = False,\n        use_gpu: bool = False,\n    ):\n```\n\n`StanzaTokenizer`\n\n```python\nclass StanzaTokenizer(BaseTokenizer):\n    def __init__(\n        self,\n        language: str = \"en\",\n        return_pos_tags: bool = False,\n        return_lemmas: bool = False,\n        return_deps: bool = False,\n        split_on_spaces: bool = False,\n        use_gpu: bool = False,\n    ):\n```\n\n`WhitespaceTokenizer`\n\n```python\nclass WhitespaceTokenizer(BaseTokenizer):\n    def __init__(self):\n```\n\n### Sentence Splitter\n\n`SpacySentenceSplitter`\n\n```python\nclass SpacySentenceSplitter(BaseSentenceSplitter):\n    def __init__(self, language: str = \"en\", model_type: str = \"statistical\"):\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Riccorl/ipa",
    "keywords": "NLP deep learning transformer pytorch stanza spacy trankit preprocessing tokenization pos tagging lemmatization",
    "license": "Apache",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ipa-core",
    "package_url": "https://pypi.org/project/ipa-core/",
    "platform": null,
    "project_url": "https://pypi.org/project/ipa-core/",
    "project_urls": {
      "Homepage": "https://github.com/Riccorl/ipa"
    },
    "release_url": "https://pypi.org/project/ipa-core/0.1.1/",
    "requires_dist": [
      "torch (<1.14,>=1.7)",
      "stanza (<1.5,>=1.2)",
      "spacy (<3.5,>=3.2)",
      "overrides (<7.4,>=6.0)",
      "pre-commit ; extra == 'dev'",
      "black ; extra == 'dev'"
    ],
    "requires_python": ">=3.9",
    "summary": "NLP Preprocessing Pipeline Wrappers",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16172124,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "76133d4dd7be98b3a277245a33a5422c6643f1272f91d7133eec6f27d04680ba",
          "md5": "1802d4ed8b0cf16c9eb00244781df301",
          "sha256": "671c7f52bc86472456510b5d3dec0bfeef1ef5dd9be7d804c08ada66ae478a91"
        },
        "downloads": -1,
        "filename": "ipa_core-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1802d4ed8b0cf16c9eb00244781df301",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 16503,
        "upload_time": "2022-12-12T23:23:15",
        "upload_time_iso_8601": "2022-12-12T23:23:15.545241Z",
        "url": "https://files.pythonhosted.org/packages/76/13/3d4dd7be98b3a277245a33a5422c6643f1272f91d7133eec6f27d04680ba/ipa_core-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7ed2952fdcb51c7e976afa9edafd6e0f98c9a3a2c4ed19589248cab1b5d8a52b",
          "md5": "8847219e8fdce48e2ea323dadca02e41",
          "sha256": "c3595daf15ba6c5f1f8e0d9e74efe63df5b480f0ecf923c2cc51d83b2ebb720a"
        },
        "downloads": -1,
        "filename": "ipa-core-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8847219e8fdce48e2ea323dadca02e41",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 14697,
        "upload_time": "2022-12-12T23:23:17",
        "upload_time_iso_8601": "2022-12-12T23:23:17.656302Z",
        "url": "https://files.pythonhosted.org/packages/7e/d2/952fdcb51c7e976afa9edafd6e0f98c9a3a2c4ed19589248cab1b5d8a52b/ipa-core-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "78faab76688c016b3d2b02ca92792b8dc648d6162ef1c3a6475d99e2aa859846",
          "md5": "3b404ddc0d85d5173b0ccdd3991690fd",
          "sha256": "ec97c0f23be04cde50d6f644d529333a2bdec709b1ea9d7220a11e1cc4a804e3"
        },
        "downloads": -1,
        "filename": "ipa_core-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3b404ddc0d85d5173b0ccdd3991690fd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 16164,
        "upload_time": "2022-12-21T10:24:28",
        "upload_time_iso_8601": "2022-12-21T10:24:28.175518Z",
        "url": "https://files.pythonhosted.org/packages/78/fa/ab76688c016b3d2b02ca92792b8dc648d6162ef1c3a6475d99e2aa859846/ipa_core-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7be523a676655b44cd9cfe6b1507baf7d6b9a0c17abd9477f25bc804acaa2e96",
          "md5": "da769c32664ee895f88f5fa85675419c",
          "sha256": "9551809327eced2efeeba9c3fb1be9da9fc4e3a301dff99634cd1276964af507"
        },
        "downloads": -1,
        "filename": "ipa-core-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "da769c32664ee895f88f5fa85675419c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 14617,
        "upload_time": "2022-12-21T10:24:29",
        "upload_time_iso_8601": "2022-12-21T10:24:29.834174Z",
        "url": "https://files.pythonhosted.org/packages/7b/e5/23a676655b44cd9cfe6b1507baf7d6b9a0c17abd9477f25bc804acaa2e96/ipa-core-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "78faab76688c016b3d2b02ca92792b8dc648d6162ef1c3a6475d99e2aa859846",
        "md5": "3b404ddc0d85d5173b0ccdd3991690fd",
        "sha256": "ec97c0f23be04cde50d6f644d529333a2bdec709b1ea9d7220a11e1cc4a804e3"
      },
      "downloads": -1,
      "filename": "ipa_core-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3b404ddc0d85d5173b0ccdd3991690fd",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 16164,
      "upload_time": "2022-12-21T10:24:28",
      "upload_time_iso_8601": "2022-12-21T10:24:28.175518Z",
      "url": "https://files.pythonhosted.org/packages/78/fa/ab76688c016b3d2b02ca92792b8dc648d6162ef1c3a6475d99e2aa859846/ipa_core-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7be523a676655b44cd9cfe6b1507baf7d6b9a0c17abd9477f25bc804acaa2e96",
        "md5": "da769c32664ee895f88f5fa85675419c",
        "sha256": "9551809327eced2efeeba9c3fb1be9da9fc4e3a301dff99634cd1276964af507"
      },
      "downloads": -1,
      "filename": "ipa-core-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "da769c32664ee895f88f5fa85675419c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 14617,
      "upload_time": "2022-12-21T10:24:29",
      "upload_time_iso_8601": "2022-12-21T10:24:29.834174Z",
      "url": "https://files.pythonhosted.org/packages/7b/e5/23a676655b44cd9cfe6b1507baf7d6b9a0c17abd9477f25bc804acaa2e96/ipa-core-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}