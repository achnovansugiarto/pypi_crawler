{
  "info": {
    "author": "Arun Joseph",
    "author_email": "arunjoseph.eng@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# SimFlow\nUltra portable Deep Learning framework in Numpy\n\n\nLink to official Documentation : https://00arun00.github.io/SimFlow/\n### Currently supported features\n\n#### Layers:\n\n###### Actication Functions:\n  - ReLU\n  - Sigmoid\n  - Tanh\n  - LeakyReLU\n  - Softplus\n  - exp\n\n###### Convolutional Layers:\n  - Convolutional Neural nets\n  - Dilated Convolutional Layer\n\n###### Other Layers:\n  - Dense\n  - BN_mean (mean only batch norm)\n  - Batch Normalization\n\n\n#### Losses:\n\n  - SoftmaxCrossEntropyLoss\n\n#### Optimizers:\n\n  - SGD\n  - Momentum\n  - Nestrov Momentum\n  - RMSProp\n  - Adagrad\n  - Adadelta\n  - Adam\n\n#### Iterators:\n\n  - Full batch\n  - Mini batch\n  - Stochastic\n\n#### Data Loaders:\n\n  - MNIST\n\n\n\n### Installation steps\n\n```\npip install -r requirements.txt\n```\n\n\n### Sample network/ How to use\n\n```python\nimport simflow as sf\nData,Labels = sf.data_loader_mnist.load_normalized_mnist_data_flat()\n\ninp_dim = 784\nnum_classes = 10\n\n#create network\nnet = sf.Model()\nnet.add_layer(sf.layers.Dense(inp_dim,200))\nnet.add_layer(sf.layers.ReLU())\nnet.add_layer(sf.layers.BN_mean(200))\nnet.add_layer(sf.layers.Dense(200,num_classes))\n\n#add loss function\nnet.set_loss_fn(sf.losses.SoftmaxCrossEntropyLoss())\n\n# add optimizer\nnet.set_optimizer(sf.optimizers.SGD(lr=0.01,momentum=0.9,nestrov=True))\n\n# add iterator\nnet.set_iterator(sf.iterators.minibatch_iterator())\n\n# fit the training data for 5 epochs\nnet.fit(Data['train'],Labels['train'],epochs=5)\n\n# pring scores after training\nprint(\"Final Accuracies after training :\")\nprint(\"Train Accuracy: \",net.score(Data['train'],Labels['train'])[1],end=\" \")\nprint(\"validation Accuracy: \",net.score(Data['val'],Labels['val'])[1],end =' ')\nprint(\"Test Accuracy: \",net.score(Data['test'],Labels['test'])[1])\n\n```\n\n### Features currently worked on\n\n#### Layers:\n\n- dropout\n- maxpool / average pool\n- PReLU\n\n#### Regularizers:\n\n- L1 \n- L2\n- elastic net\n\n#### Optimizers\n\n- Nadam\n- Adamax\n\n### Testing Features\n\nrun the following command to check if all your layers are functional\n\n```\npython -m pytest -v\n```\n\ncurrently supports \n\n- Dense Layer\n- BN_mean Layer\n- BN layer\n- Conv Layer\n- dilatedConv Layer\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/00arun00/SimFlow",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "simflow",
    "package_url": "https://pypi.org/project/simflow/",
    "platform": "",
    "project_url": "https://pypi.org/project/simflow/",
    "project_urls": {
      "Homepage": "https://github.com/00arun00/SimFlow"
    },
    "release_url": "https://pypi.org/project/simflow/0.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "simflow",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7490360,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c5feef2a2fe2b7e8aa222c8c2192652d6b9b7d3ead4ed2ab45d9654f931aa990",
          "md5": "461ce3e43ca9476ee0ad3e216df821cc",
          "sha256": "6ad0b1c3a94ec4bc2567bb3a0a2daa16e3e73456e4fcb133eaeb2be2ee9019ca"
        },
        "downloads": -1,
        "filename": "simflow-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "461ce3e43ca9476ee0ad3e216df821cc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 21350,
        "upload_time": "2020-06-16T18:15:32",
        "upload_time_iso_8601": "2020-06-16T18:15:32.423342Z",
        "url": "https://files.pythonhosted.org/packages/c5/fe/ef2a2fe2b7e8aa222c8c2192652d6b9b7d3ead4ed2ab45d9654f931aa990/simflow-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "295353547e0a262deaeb3660b215d9015149788e6f35397153f6e18381d8537b",
          "md5": "b9f51bc888e99800726bc02f0bef0231",
          "sha256": "21ff686127dffb8fc98595c51a50f51ffb52771b75aba7d73e97efa76c0ec288"
        },
        "downloads": -1,
        "filename": "simflow-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b9f51bc888e99800726bc02f0bef0231",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20406,
        "upload_time": "2020-06-16T18:15:34",
        "upload_time_iso_8601": "2020-06-16T18:15:34.607970Z",
        "url": "https://files.pythonhosted.org/packages/29/53/53547e0a262deaeb3660b215d9015149788e6f35397153f6e18381d8537b/simflow-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c5feef2a2fe2b7e8aa222c8c2192652d6b9b7d3ead4ed2ab45d9654f931aa990",
        "md5": "461ce3e43ca9476ee0ad3e216df821cc",
        "sha256": "6ad0b1c3a94ec4bc2567bb3a0a2daa16e3e73456e4fcb133eaeb2be2ee9019ca"
      },
      "downloads": -1,
      "filename": "simflow-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "461ce3e43ca9476ee0ad3e216df821cc",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 21350,
      "upload_time": "2020-06-16T18:15:32",
      "upload_time_iso_8601": "2020-06-16T18:15:32.423342Z",
      "url": "https://files.pythonhosted.org/packages/c5/fe/ef2a2fe2b7e8aa222c8c2192652d6b9b7d3ead4ed2ab45d9654f931aa990/simflow-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "295353547e0a262deaeb3660b215d9015149788e6f35397153f6e18381d8537b",
        "md5": "b9f51bc888e99800726bc02f0bef0231",
        "sha256": "21ff686127dffb8fc98595c51a50f51ffb52771b75aba7d73e97efa76c0ec288"
      },
      "downloads": -1,
      "filename": "simflow-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "b9f51bc888e99800726bc02f0bef0231",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 20406,
      "upload_time": "2020-06-16T18:15:34",
      "upload_time_iso_8601": "2020-06-16T18:15:34.607970Z",
      "url": "https://files.pythonhosted.org/packages/29/53/53547e0a262deaeb3660b215d9015149788e6f35397153f6e18381d8537b/simflow-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}