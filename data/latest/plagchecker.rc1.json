{
  "info": {
    "author": "Shrey Patel",
    "author_email": "dailycodingpro@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "The python package is focused on checking Plagiarism from covered content it is the extension of service offered by prepostseo (https://www.prepostseo.com/plagiarism-checker)\n\n## Install\n\nFor installation one can proceed to https://pypi.org/project/plagchecker/ or can use \n```python\npip install plagchecker\n```\n\n## Usage\n\nThe package focus on usage for checking plagiarised content and amount of plagiarised content present in the data spread over upto 5000 words or less with non-premium version of https://www.prepostseo.com/plagiarism-checker\n\n## Modules\n\n### There is 1 module named __init__.py\n\n#### Class currently present in module: Checker\n\n##### initialization of class: Checker()\n\nThe constructor takes in 1 manadatry argument i.e the APIKEY provided by www.prepostseo.com by signning up for free version.\n\n##### Methods: Total of 7 Methods are present in Class: Checker\n\n###### Method 1: __init__(self,apiKey):\n\nMethod is default constructor of the class Checker and takes in 1 manadatry argument i.e the APIKEY from www.prepostseo.com \n\n###### Method 2: getDataLen(self,data):\n\nMethod returns boolean value based on the count of words present in data if count is less than or equal to 5000 words return True else False.\n\n###### Method 3: response(self,data):\n\nMethod returns 2 (two) values in string format:\n1. status code of the querry: i.e 200 for successful execution in string format.\n2. json response received upon successful execution or empty string\n\n###### Method 4: getPlagPercent(self):\n\nThe function is used to get the percentage of plagiarised content. It returns the %(percentage) value in string format\n\n###### Method 5: getUniquePrecent(self):\n\nThe function is used to get the precentage of unique content present in the data. It returns the %(percentage) value in string format\n\n###### Method 6: getSources(self):\n\nThe function is used to get the sources from where the content was taken if found plagiarised in the data. It returns sources in the form of a list.\n\n###### Method 7: getDetails(self):\n\nThe function is used to get the additional details of individual querries in data. It returns the additional details in the form of list.\n\n## Created & Maintained By\n\n### [Shrey Patel](https://github.com/shrey82)\n\n## Sponsor Me for my education\n\n### [Sponsor Shrey via buymecoffee](https://www.buymeacoffee.com/shrey82)\n### [Sponsor Shrey directly](https://rzp.io/l/shrey82)\n<a href=\"https://www.linkedin.com/in/shrey-patel-7b7003161/\" target=\"_blank\"><img src=\"https://github.com/aritraroy/social-icons/blob/master/linkedin-icon.png?raw=true\" width=\"60\"></a><a href=\"https://instagram.com/s.h.r.e.y.82\" target=\"_blank\"><img src=\"https://github.com/aritraroy/social-icons/blob/master/instagram-icon.png?raw=true\" width=\"60\"></a><a href=\"https://github.com/shrey82\" target=\"_blank\"><img src=\"https://img.icons8.com/material-outlined/52/000000/github.png\"></a>\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "plagairism,checker,plagairismchecker,prepostseo,seo",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "plagchecker",
    "package_url": "https://pypi.org/project/plagchecker/",
    "platform": "",
    "project_url": "https://pypi.org/project/plagchecker/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/plagchecker/1.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "plagchecker focuses on using wwww.prepostseo.com plagairism checker facility.",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10818705,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6b154b1d3814ac3eaee3272667cbd7644258e00004af9063d455eb6e28bb043f",
          "md5": "3d14dc1f8f1a24706f3748a521e330f6",
          "sha256": "a79a6b3da8b19015a81c6aaa1aae48caea6154bd992a27d6b77bf8b985cc38cf"
        },
        "downloads": -1,
        "filename": "plagchecker-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3d14dc1f8f1a24706f3748a521e330f6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 3351,
        "upload_time": "2021-07-04T10:11:46",
        "upload_time_iso_8601": "2021-07-04T10:11:46.754884Z",
        "url": "https://files.pythonhosted.org/packages/6b/15/4b1d3814ac3eaee3272667cbd7644258e00004af9063d455eb6e28bb043f/plagchecker-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a84f91c57a7655f5944b981e0c0187fb07dab16a58019294056ff5e1058ad8cd",
          "md5": "a6c7b01cf53bc00bc54acfad13f52809",
          "sha256": "1eb7d9fe7c76fbe58e92325ad2bbf2c3d0f1ee5b7e6e6b3fa177a72cce318e4f"
        },
        "downloads": -1,
        "filename": "plagchecker-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a6c7b01cf53bc00bc54acfad13f52809",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3211,
        "upload_time": "2021-07-04T10:11:47",
        "upload_time_iso_8601": "2021-07-04T10:11:47.902153Z",
        "url": "https://files.pythonhosted.org/packages/a8/4f/91c57a7655f5944b981e0c0187fb07dab16a58019294056ff5e1058ad8cd/plagchecker-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6b154b1d3814ac3eaee3272667cbd7644258e00004af9063d455eb6e28bb043f",
        "md5": "3d14dc1f8f1a24706f3748a521e330f6",
        "sha256": "a79a6b3da8b19015a81c6aaa1aae48caea6154bd992a27d6b77bf8b985cc38cf"
      },
      "downloads": -1,
      "filename": "plagchecker-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3d14dc1f8f1a24706f3748a521e330f6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 3351,
      "upload_time": "2021-07-04T10:11:46",
      "upload_time_iso_8601": "2021-07-04T10:11:46.754884Z",
      "url": "https://files.pythonhosted.org/packages/6b/15/4b1d3814ac3eaee3272667cbd7644258e00004af9063d455eb6e28bb043f/plagchecker-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a84f91c57a7655f5944b981e0c0187fb07dab16a58019294056ff5e1058ad8cd",
        "md5": "a6c7b01cf53bc00bc54acfad13f52809",
        "sha256": "1eb7d9fe7c76fbe58e92325ad2bbf2c3d0f1ee5b7e6e6b3fa177a72cce318e4f"
      },
      "downloads": -1,
      "filename": "plagchecker-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "a6c7b01cf53bc00bc54acfad13f52809",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3211,
      "upload_time": "2021-07-04T10:11:47",
      "upload_time_iso_8601": "2021-07-04T10:11:47.902153Z",
      "url": "https://files.pythonhosted.org/packages/a8/4f/91c57a7655f5944b981e0c0187fb07dab16a58019294056ff5e1058ad8cd/plagchecker-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}