{
  "info": {
    "author": "",
    "author_email": "Eduardo <emdemor415@gmail.com.br>",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: Portuguese (Brazilian)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.9",
      "Topic :: Utilities"
    ],
    "description": "## Modificações\n\n1. Altere o nome da pasta `emdemor_app_template` para o nome do seu App e desenvolva seu código ali. Vou citar como exemplo um app fictício `emmapp`.\n\n2. No arquivo `environment.yml` altere o nome do ambiente conda para o que seja de maior conveniência. Por exemplo, pode-se usar `emmapp`.\n\n3. Configure o arquivo `LICENSE` de acordo com a licensa que escolher.\n\n4. No arquivo Makefile, substitua `emdemor_app_template` nas linhas 19 e 24 (dentro das regras clear e uninstall) para o nome de seu app (no nosso caso, `emmapp`)\n\n5. No arquivo `pyproject.toml`, Substitua `emdemor_app_template` pelo nome de seu app nas linhas 6 (campo \"name\" dentro de [project]), 28 (campo \"version\" dentro de [tool.setuptools.dynamic]) e 32 (campo onde você define o comando para rodar o app. Escolha o comando que deseja usar.)\n\n6. No arquivo `docs/source/conf.py`, substitua o app name nas linhas 9 (dentro do `sys.path.insert`) e 14 (nome do projeto). Aproveite para configurar as informações de autor e data.\n\n7. Escreva a introdução da sua documentação no arquivo `docs/source/intro.rst`\n\n8. Para cada modulo na pasta `emmapp` (no seu caso, será o nome de seu app), crie uma arquivo tipo RST dentro de `_files/_modules` com o nome do modulo. Por exemplo, para o módulo `emmapp.utils`, deve-se criar o arquivo `_files/_modules/utils.rst`. Dentro, deverá ter o seguinte código\n```\n{{nome do modulo}}\n===================\n\n.. automodule:: {{nome do modulo}}\n   :members:\n```\n\n9. Para cada submodulo na pasta `emmapp` (no seu caso, será o nome de seu app), crie uma pasta dentro de `_files/_modules` com o nome do modulo e um arquivo tipo RST dentro dessa pasta para cada submodulo. Por exemplo, para do módulo `emmapp/mymodule/hello`, deve-se criar a pasta `_files/_modules/mymodule`, e dentro, o arquivo `_files/_modules/mymodule/hello.rst`. Nesse arquivo, deverá ter o seguinte código\n```\n{{nome do submodulo}}\n===================\n\n.. automodule:: {{nome do modulo}}.{{nome do submodulo}}\n   :members:\n```\n\n10. Dentro de `_files/_usage`, edite o arquivo `getting_started.rst` e quaisquer outros arquivos que adicionar. Lembre-se que para cada arquivo novo em `docs/source/_files/_usage`, deve-se também referenciá-lo em  `docs/source/usage.rst`\n\n## Detalhes sobre a documentação\n\n1. Instale sphinx\n\n```bash\npip install sphinx\n```\n\n2. Crie e entre na pasta docs e rode sphinx-quickstart\n\n```bash\nmkdir docs\ncd docs\nsphinx-quickstart\n```\n\n3. Preencha as informações\n\n```bash\n> Separar os diretórios de origem e compilação (y/n) [n]: y\n> Nome do projeto: Template de Python\n> Nome(s) de autor(es): A. U. Thor\n> Lançamento do projeto []: 2022-12-31\n> Idioma do projeto [en]: en\n```\n\nApós isso, teremos duas pastas dentro de docs. A pasta source vai ser onde vamos trabalhar para gerar documentação. A pasta build será onde a documentação estará.\n\n4. Editar o endereço do seus modulos (no template, é a pasta src) em relação ao arquivo `docs/source/conf.py`. No nosso caso, será:\n\n```python\nimport os\nimport sys\n\nsys.path.insert(0, os.path.abspath(\"../../src\"))\n```\n\n5. Adicione extensões. No arquivo `docs/source/conf.py`, onde está\n\n```python\n# Add any Sphinx extension module names here, as strings. They can be\n# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom\n# ones.\nextensions = []\n```\n\nSubstitua por:\n\n```python\n# Add any Sphinx extension module names here, as strings. They can be\n# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom\n# ones.\nextensions = [\n    \"sphinx.ext.autodoc\",\n    \"sphinx.ext.intersphinx\",\n    \"sphinx.ext.autodoc\",\n    \"sphinx.ext.mathjax\",\n    \"sphinx.ext.viewcode\",\n    \"sphinx.ext.napoleon\",\n]\n```\n\n6. Altere o thema html do arquivo\n\n```python\n# The theme to use for HTML and HTML Help pages.  See the documentation for\n# a list of builtin themes.\n#\nhtml_theme = \"sphinx_rtd_theme\"\n```\n\n7. Adicione logo, favicon e estilos css à sua página. Para isso, adicione todos os arquivos dentro de `docs/source/_static`. Dentro do arquivo `docs/source/conf.py`, adicione as seguintes linhas:\n\n```python\n# Add any paths that contain custom static files (such as style sheets) here,\n# relative to this directory. They are copied after the builtin static files,\n# so a file named \"default.css\" will overwrite the builtin \"default.css\".\nhtml_static_path = [\"_static\"]\n\nhtml_logo = \"_static/logo.png\"\n\nhtml_css_files = [\"custom-theme.css\"]\n\nhtml_favicon = \"_static/favicon.ico\"\n\nhtml_theme_options = {\n    \"logo_only\": True,\n    \"display_version\": False,\n}\n\n```\n\n8. Dentro da pasta docs, rode:\n\n```bash\nmake html\n```\n\nA documentação estará em `docs/build/html`\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "template,app",
    "license": "Copyright (c) 2023, Eduardo Morais  All rights reserved.  Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:  Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. ",
    "maintainer": "",
    "maintainer_email": "",
    "name": "emdemor-app-template",
    "package_url": "https://pypi.org/project/emdemor-app-template/",
    "platform": null,
    "project_url": "https://pypi.org/project/emdemor-app-template/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/emdemor-app-template/0.0.3/",
    "requires_dist": null,
    "requires_python": ">=3.9",
    "summary": "Um template para começar o desenvolvimento de apps",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16335485,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "814dcba68df8575bbf8d1554e530618ec11aa1ffe2c1ab2e3620a53867a7f77e",
          "md5": "5259a0e48e292d585fcd26d173747403",
          "sha256": "bab3aa7adae1bedb65cff26365cd87112b5b232fb36cef8b8d0538d264afb9d9"
        },
        "downloads": -1,
        "filename": "emdemor_app_template-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5259a0e48e292d585fcd26d173747403",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 5874,
        "upload_time": "2023-01-06T20:43:22",
        "upload_time_iso_8601": "2023-01-06T20:43:22.162074Z",
        "url": "https://files.pythonhosted.org/packages/81/4d/cba68df8575bbf8d1554e530618ec11aa1ffe2c1ab2e3620a53867a7f77e/emdemor_app_template-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd055f0eff931024c06e3a9d8ce68075b9511b5ccf77781d9aead90175a32f9f",
          "md5": "6622eba62146c30ded701d05d75dcc37",
          "sha256": "5ac8fdb9acabfa5daf549a4fd168da196c65c577d633670ca8cf879817a8f0b7"
        },
        "downloads": -1,
        "filename": "emdemor_app_template-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6622eba62146c30ded701d05d75dcc37",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 4129,
        "upload_time": "2023-01-06T20:43:24",
        "upload_time_iso_8601": "2023-01-06T20:43:24.140911Z",
        "url": "https://files.pythonhosted.org/packages/cd/05/5f0eff931024c06e3a9d8ce68075b9511b5ccf77781d9aead90175a32f9f/emdemor_app_template-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ccb8188d61770660f8a7b30a16e7c5b49c804e29a109e9b1019985c3a77c4e6d",
          "md5": "2ff5c85d1b6a31a556dd6b1b7f100418",
          "sha256": "18c761047c35fec1b9429257026d3495a3a76d40c087a3c1c088ced725d88160"
        },
        "downloads": -1,
        "filename": "emdemor_app_template-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2ff5c85d1b6a31a556dd6b1b7f100418",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 6651,
        "upload_time": "2023-01-06T21:31:26",
        "upload_time_iso_8601": "2023-01-06T21:31:26.130016Z",
        "url": "https://files.pythonhosted.org/packages/cc/b8/188d61770660f8a7b30a16e7c5b49c804e29a109e9b1019985c3a77c4e6d/emdemor_app_template-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cc0e43d9db7384f4922e7b9239b0973c0f7f38ccfd6df1c0fbf92fa1b487f6e9",
          "md5": "1292af741252b0c528ac866701fd7e2f",
          "sha256": "256fe4dbad8d66c6fb057417cdf1fa55f5ef85b82bf7a1054ce33297ca1c5d8e"
        },
        "downloads": -1,
        "filename": "emdemor_app_template-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "1292af741252b0c528ac866701fd7e2f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 4961,
        "upload_time": "2023-01-06T21:31:28",
        "upload_time_iso_8601": "2023-01-06T21:31:28.135465Z",
        "url": "https://files.pythonhosted.org/packages/cc/0e/43d9db7384f4922e7b9239b0973c0f7f38ccfd6df1c0fbf92fa1b487f6e9/emdemor_app_template-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ccb8188d61770660f8a7b30a16e7c5b49c804e29a109e9b1019985c3a77c4e6d",
        "md5": "2ff5c85d1b6a31a556dd6b1b7f100418",
        "sha256": "18c761047c35fec1b9429257026d3495a3a76d40c087a3c1c088ced725d88160"
      },
      "downloads": -1,
      "filename": "emdemor_app_template-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2ff5c85d1b6a31a556dd6b1b7f100418",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 6651,
      "upload_time": "2023-01-06T21:31:26",
      "upload_time_iso_8601": "2023-01-06T21:31:26.130016Z",
      "url": "https://files.pythonhosted.org/packages/cc/b8/188d61770660f8a7b30a16e7c5b49c804e29a109e9b1019985c3a77c4e6d/emdemor_app_template-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cc0e43d9db7384f4922e7b9239b0973c0f7f38ccfd6df1c0fbf92fa1b487f6e9",
        "md5": "1292af741252b0c528ac866701fd7e2f",
        "sha256": "256fe4dbad8d66c6fb057417cdf1fa55f5ef85b82bf7a1054ce33297ca1c5d8e"
      },
      "downloads": -1,
      "filename": "emdemor_app_template-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "1292af741252b0c528ac866701fd7e2f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 4961,
      "upload_time": "2023-01-06T21:31:28",
      "upload_time_iso_8601": "2023-01-06T21:31:28.135465Z",
      "url": "https://files.pythonhosted.org/packages/cc/0e/43d9db7384f4922e7b9239b0973c0f7f38ccfd6df1c0fbf92fa1b487f6e9/emdemor_app_template-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}