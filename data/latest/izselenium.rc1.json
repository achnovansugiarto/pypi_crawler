{
  "info": {
    "author": "Itay Zohar",
    "author_email": "itaynzohar@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# Autotet.Web\nselenium based infrastructure for web automation tests\n\n## basic usage\n```python\n\nfrom izSelenium import get_driver, Selector, By\n\n# get izWebdriver\ndriver = get_driver('google') # now izSelenium saved a driver instance with an alias 'google'\ngmail_driver = get_driver('gmail-driver') # this is another driver session: another window. \n\n\n# to seperate logic from html, we use an object called 'selector' to select elements on a web page. \ns_search_input = Selector(By.CSS_SELECTOR, f\"form input[title='{SEARCH_TITLE}']\")\n\n# it's recomended to actually search for elements in a dedicated function\ndef search_input():\n    return driver.find(s_search_input)\n\n# izWebDriver has all webdriver functions and some more\nkeep_driver.get(KEEP_URL)\n\ndriver.get(r\"http://www.google.com\")\n# izSelenium actions, like following 'send_keys', use restries and fix-actions - such as trying to set value with JS in case of failure\nsearch_input().send_keys(\"i know how to automate\") \n\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/MrPupik/izSelenium",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "izSelenium",
    "package_url": "https://pypi.org/project/izSelenium/",
    "platform": "",
    "project_url": "https://pypi.org/project/izSelenium/",
    "project_urls": {
      "Homepage": "https://github.com/MrPupik/izSelenium"
    },
    "release_url": "https://pypi.org/project/izSelenium/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "a decent selenium wrapper",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7225770,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "877671307473bb9af054b4e78ef3923faca7f7b5e95c935680c4c8617d3ad381",
          "md5": "d53fcb9376366cf58c08f137b48a6a75",
          "sha256": "b63f7dfe793865648e84ca173da474827d5da7214067e195102c47b02223afb0"
        },
        "downloads": -1,
        "filename": "izSelenium-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d53fcb9376366cf58c08f137b48a6a75",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9991,
        "upload_time": "2020-05-12T18:02:10",
        "upload_time_iso_8601": "2020-05-12T18:02:10.993010Z",
        "url": "https://files.pythonhosted.org/packages/87/76/71307473bb9af054b4e78ef3923faca7f7b5e95c935680c4c8617d3ad381/izSelenium-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "877671307473bb9af054b4e78ef3923faca7f7b5e95c935680c4c8617d3ad381",
        "md5": "d53fcb9376366cf58c08f137b48a6a75",
        "sha256": "b63f7dfe793865648e84ca173da474827d5da7214067e195102c47b02223afb0"
      },
      "downloads": -1,
      "filename": "izSelenium-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "d53fcb9376366cf58c08f137b48a6a75",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9991,
      "upload_time": "2020-05-12T18:02:10",
      "upload_time_iso_8601": "2020-05-12T18:02:10.993010Z",
      "url": "https://files.pythonhosted.org/packages/87/76/71307473bb9af054b4e78ef3923faca7f7b5e95c935680c4c8617d3ad381/izSelenium-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}