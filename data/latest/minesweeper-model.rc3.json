{
  "info": {
    "author": "Ilkut Kutlar",
    "author_email": "ilkutkutlar@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "# Minesweeper Model\n\n[![PyPI Version](https://img.shields.io/pypi/v/minesweeper-model)](https://pypi.org/project/minesweeper-model/)\n\nThis package is a <a href=\"https://en.wikipedia.org/wiki/Minesweeper_(video_game)\">Minesweeper game</a> without a frontend. In other words, it only offers a Minesweeper model and an interface to access and modify the minefield or \"play\" the game programmatically. As a result, this package is not meant to be a Minesweeper game playable by an end user.\n\nThis package is mostly meant for people who develop Minesweeper solvers. Anyone developing such a solver can use this package to skip the step of developing a Minesweeper model to test their solver on and start working on the solver itself straightaway.\n\n## Installation\n\nThe package is hosted on <a href=\"https://pypi.org/project/minesweeper-model/\">PyPI</a>. You can install it with `pip`:\n\n```sh\npip install minesweeper-model\n```\n\n## Usage\n\nThis package offers a `Field` class which models a minefield in a Minefield game. It stores all the necessary state of a field: the open tiles, flagged tiles, tiles with a mine under it, etc. By the rules of the game, the player isn't allowed to know where the mines are hidden.\n\nThe `Field` class has methods to allow interacting with it as a player (i.e. you are only given hints, the number of mines surrounding a tile, but not the mine locations). However, of course, direct access to mine locations are possible if desired as well.\n\n### Initialization\n\n```py\nfrom minesweeper_model import field\n\n# Mine locations are expressed as two-tuples (x, y)\n# The top-left tile in the minefield has coordinates (0, 0).\n# Mine locations argument is optional, so a field without mines\n# is theoretically possible.\nmine_coords = [(0, 0), (1, 0)]\nfield = field.Field(5, 5, mine_coords)\n```\n\n### Data stored in the `Field` class\n\n```py\n# List of tuples (x, y) of mine coordinates.\nfield.mine_coords\n\n# List of tuples (x, y) of coordinates which have been opened by the player.\nfield.open_coords\n\n# List of tuples (x, y) of coordinates which have been flagged as having a mine.\nfield.flag_coords\n\n# Dictionary populated with the \"hint\" for all tiles in the Field given\n# during initialization of the `PlayerField` class. This is the number \n# of mines in the surrounding 8 tiles for each tile. Dictionary is in the \n# format `{(x, y): int}` where int is the hint with possible values \n# being 0 to 8 or -1 (for tiles which have mines underneath)\nfield.hints\n```\n\n### Interact with the `Field` class\n\nUse the `tile` and `nine_tiles` methods to get information about a single field and a group of nine fields respectively. You will only receive the information a player would get (i.e. anything but the location of mines)\n\n```py\n# Return a dictionary {\"hint\": int, \"flag\": bool} where\n# \"hint\" is the hint revealed by openning the tile, or\n# the value None if the tile is closed. \"flag\" is whether\n# the tile is flagged.\nfield.tile(x, y)\n\n# Returns the same data as `tile` method for the given\n# tile as well as the 8 tiles surrounding it.\n# Data is returned in format: {(x, y): {\"hint\": int, \"flag\": bool}, ...}\nfield.nine_tiles(middle_x, middle_y)\n```\n\nOpen tiles and place flags in the field:\n\n```py\n# This will open the tile in given coordinates. Will return\n# True if tile does not hide a mine, False otherwise.\n# If tile has no mine, given coordinates will be added to open_coords.\nfield.open_tile(x, y)\n\n# Pass True to the third coordinate so that in addition to the given tile\n# being opened, all the adjacent tiles with a hint of 0 will also be opened,\n# similar to the way it does in some versions of the Minesweeper game. \nfield.open_tile(x, y, True)\n\n# Add or remove flag on tile.\nfield.toggle_flag(x, y)\n```\n\n### Visual representation of fields\n\nDraw the field showing mine locations:\n\n```py\nprint(field.render_mines())\n\n# x...\n# ...x\n# ....\n# .x..\n\n# You can use custom strings when drawing\nprint(field.render_mines(tile_str=\"o\", mine_str=\"@\"))\n\n# @ooo\n# ooo@\n# oooo\n# o@oo\n```\n\nDraw the field a player would see, only showing hints and flags but not mines:\n\n```py\nprint(field.render_player_field())\n\n# !...\n# 22..\n# xx..\n# ....\n\n# You can use custom strings when drawing\nprint(player_field.render_player_field(flag_str=\"?\", closed_str=\"o\"))\n\n# ?ooo\n# 22oo\n# xxoo\n# oooo\n```\n\n### Generator utilities\n\nThe package also contains utilities to help you generate minefields.\n\nGenerate N many mine locations randomly for a given field size:\n\n```py\nfrom minesweeper_model import generator\n\n# generate 4 mine coordinates \n# for a field of size (5, 10)\ngenerator.random_mine_coords(5, 10, 4)\n\n# => [(1, 5), (3, 2), (0, 0), (1, 6)]\n```\n\nGenerate hint for a single tile given a list of mine coordinates:\n\n```py\nmines = [(4, 1), (6, 4)]\n\n# Generate hint for a tile at (1, 1)\ngenerator.hint_for_tile(1, 1, mines):\n\n# => 0\n```\n\nGenerate hints for an entire field:\n\n```py\nmines = [(4, 1), (6, 4)]\n\n# Generate hints for a field of size (10, 10)\ngenerator.hints_for_field(10, 10, mines)\n\n# => {(0, 0): 0, (0, 1): 0, ... , (9, 9): 0}\n```\n\n### General utilities\n\nGet coordinates of surrounding tiles:\n\n```py\nfrom minesweeper_model import utility\n\nutility.surrounding_tiles(1, 1)\n\n# => [(0, 0), (0, 1), (0, 2), (1, 0), \n#     (1, 2), (2, 0), (2, 1), (2, 2)]\n\n# If the tile is on the edge, method will\n# return -ve coordinates as well.\nutility.surrounding_tiles(0, 0)\n\n# => [(-1, -1), (-1, 0), (-1, 1), (0, -1), \n#     (0, 1), (1, -1), (1, 0), (1, 1)]\n\n# You can choose to remove -ve coordinates:\nutility.surrounding_tiles(0, 0, True)\n\n# => [(0, 1), (1, 0), (1, 1)]\n```\n\nConvert a textual representation of a field to parameters you can pass to a `Field` object as an easier way of creating fields (Thanks to <a href=\"https://github.com/27Anurag\">@27Anurag</a> for the contribution):\n\n```py\nstr_field = \"\"\"..x...x\n.......\n....x..\n......x\nx......\"\"\"\n\nwidth, height, mine_coords = utility.str_input_to_mine_coords(str_field)\n\n# => width: 7, height: 5, mine_coords: [(2, 0), (6, 0), (4, 2), (6, 3), (0, 4)]\nf = field.Field(width, height, mine_coords)\n```\n\n## Development\n\n- The package currently only officially supports `python3`.\n- Tests are written with `unittest` and are under the \"tests\" directory. You can run all tests on the command line with `python3 -m unittest`.\n- <a href=\"https://flake8.pycqa.org/en/latest/\">`flake8`</a> is used for checking the code follows some Python best practices and styling standards. You can run the checks on the command line with `flake8` (need to install flake8 first).\n- <a href=\"https://tox.readthedocs.io/en/latest/\">tox</a> is used to automate testing. You can run all tests and checks (e.g. flake8) on the command line with `tox` (need to install tox first).",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/ilkutkutlar/minesweeper_model/archive/v0.0.2.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ilkutkutlar/minesweeper_model",
    "keywords": "minesweeper,model",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "minesweeper-model",
    "package_url": "https://pypi.org/project/minesweeper-model/",
    "platform": "",
    "project_url": "https://pypi.org/project/minesweeper-model/",
    "project_urls": {
      "Download": "https://github.com/ilkutkutlar/minesweeper_model/archive/v0.0.2.tar.gz",
      "Homepage": "https://github.com/ilkutkutlar/minesweeper_model"
    },
    "release_url": "https://pypi.org/project/minesweeper-model/0.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Tools to model a Minesweeper game and interact with it programmatically.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8204432,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4667e791ffc0f8f2364ac05a40899de4a2cb5301d97d6453fad9336058fbc2e9",
          "md5": "1515217e81bc2ce5350ab7bb0f3a9a9f",
          "sha256": "f77b83971119871888079343385e0331fd302f0f623c13b9dadd2501277202bd"
        },
        "downloads": -1,
        "filename": "minesweeper_model-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1515217e81bc2ce5350ab7bb0f3a9a9f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6458,
        "upload_time": "2020-09-05T00:25:26",
        "upload_time_iso_8601": "2020-09-05T00:25:26.764738Z",
        "url": "https://files.pythonhosted.org/packages/46/67/e791ffc0f8f2364ac05a40899de4a2cb5301d97d6453fad9336058fbc2e9/minesweeper_model-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "abdb3e39754f4e98d76e319ba52c8d2a808c6f6e456a8ac87fd8f5da01ac5b0c",
          "md5": "67ec5e72c980d1b67eab53f479fae8d7",
          "sha256": "31241cf6c90fcae67c590d30f2eae334b861b464442a7ce8336836c5d9a76055"
        },
        "downloads": -1,
        "filename": "minesweeper_model-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "67ec5e72c980d1b67eab53f479fae8d7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2264,
        "upload_time": "2020-09-04T23:28:44",
        "upload_time_iso_8601": "2020-09-04T23:28:44.749844Z",
        "url": "https://files.pythonhosted.org/packages/ab/db/3e39754f4e98d76e319ba52c8d2a808c6f6e456a8ac87fd8f5da01ac5b0c/minesweeper_model-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "89c1f32eb37d9425b0a01ba58fd722801bc7554d63ef1c076ff9864e56684ebd",
          "md5": "fa58c638de09ec9cb4d6076e6615c87a",
          "sha256": "792b6e28b292d1c70cd668477830f0932bda3445e2f22496b70666f4c106cede"
        },
        "downloads": -1,
        "filename": "minesweeper_model-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fa58c638de09ec9cb4d6076e6615c87a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6460,
        "upload_time": "2020-09-05T00:29:12",
        "upload_time_iso_8601": "2020-09-05T00:29:12.861464Z",
        "url": "https://files.pythonhosted.org/packages/89/c1/f32eb37d9425b0a01ba58fd722801bc7554d63ef1c076ff9864e56684ebd/minesweeper_model-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0b2f97d19a46bf3484bd3829ac65fb3aadde84416eaf6bb098892bedc1ed3d3d",
          "md5": "6fc36def37c169b8af0f788e5a54265b",
          "sha256": "bd6e246e0448a184687cfc93749561d736181a3b7ebfcbc8721c2bb0b284d172"
        },
        "downloads": -1,
        "filename": "minesweeper_model-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6fc36def37c169b8af0f788e5a54265b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5342,
        "upload_time": "2020-09-05T00:29:14",
        "upload_time_iso_8601": "2020-09-05T00:29:14.170292Z",
        "url": "https://files.pythonhosted.org/packages/0b/2f/97d19a46bf3484bd3829ac65fb3aadde84416eaf6bb098892bedc1ed3d3d/minesweeper_model-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e46f95956d80d80aac51f6d45a54a3eef20942640632efddcf9be6ee9e6e7fbb",
          "md5": "275027ace532028fbeb33d2f6b2fc925",
          "sha256": "1bc3b6d57813af0fad65794cbf6c6998cb59084c89bb8c589e604c2401ad1c9f"
        },
        "downloads": -1,
        "filename": "minesweeper_model-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "275027ace532028fbeb33d2f6b2fc925",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7623,
        "upload_time": "2020-09-17T00:31:56",
        "upload_time_iso_8601": "2020-09-17T00:31:56.034740Z",
        "url": "https://files.pythonhosted.org/packages/e4/6f/95956d80d80aac51f6d45a54a3eef20942640632efddcf9be6ee9e6e7fbb/minesweeper_model-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e46f95956d80d80aac51f6d45a54a3eef20942640632efddcf9be6ee9e6e7fbb",
        "md5": "275027ace532028fbeb33d2f6b2fc925",
        "sha256": "1bc3b6d57813af0fad65794cbf6c6998cb59084c89bb8c589e604c2401ad1c9f"
      },
      "downloads": -1,
      "filename": "minesweeper_model-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "275027ace532028fbeb33d2f6b2fc925",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7623,
      "upload_time": "2020-09-17T00:31:56",
      "upload_time_iso_8601": "2020-09-17T00:31:56.034740Z",
      "url": "https://files.pythonhosted.org/packages/e4/6f/95956d80d80aac51f6d45a54a3eef20942640632efddcf9be6ee9e6e7fbb/minesweeper_model-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}