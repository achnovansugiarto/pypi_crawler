{
  "info": {
    "author": "ericlebail",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU Affero General Public License v3",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3 :: Only"
    ],
    "description": "# tap-test-data-generator\n\nThis is a [Singer](https://singer.io) tap that produces JSON-formatted test data\nfollowing the [Singer spec](https://github.com/singer-io/getting-started/blob/master/SPEC.md).\n\nThis tap generates test data complying with the JSON Schema passed as input.\nUseful for Data Driven Testing (DDT)\n\nThis tap:\n\n- Read the provided JSON schema\n- Create one stream per provided schema\n- Outputs the schema for each stream\n- Incrementally generate data based on the schema and send the generated Singer records to the data streams.\n\nThis tap uses [JSON Schema Draft 7](https://json-schema.org/)\n\n![Build status](https://travis-ci.com/ericlebail/tap-test-data-generator.svg?branch=master)\n[![codecov](https://codecov.io/gh/ericlebail/tap-test-data-generator/branch/master/graph/badge.svg?token=C37SIU1IUG)](https://codecov.io/gh/ericlebail/tap-test-data-generator)\n[![Python 3.8](https://img.shields.io/badge/python-3.8-blue.svg)](https://www.python.org/downloads/release/python-380/)\n[![Python 3.9](https://img.shields.io/badge/python-3.9-blue.svg)](https://www.python.org/downloads/release/python-390/)\n[![Python 3.10.2](https://img.shields.io/badge/python-3.10.2-blue.svg)](https://www.python.org/downloads/release/python-3102/)\n\n[Sources on Github](https://github.com/ericlebail/tap-test-data-generator)\n\n[![Package on PyPI](https://img.shields.io/pypi/v/tap-test-data-generator.svg)](https://pypi.org/project/tap-test-data-generator/)\n\n## Standard JSON schema has been extended to add required parameters for data generation\n\n- for \"string\" properties:\n    \n    - generate constant string\n        \n            \"type\": \"string\",\n            \"const\": \"constant Value\"\n        \n    - generate empty string\n    \n            \"$generator\": \"#/string-type/empty\"\n    \n    - generate UUID4 using [Faker UUID4](https://faker.readthedocs.io/en/master/providers/faker.providers.misc.html#faker.providers.misc.Provider.uuid4) \n          \n            \"$generator\": \"#/string-type/uuid\" \n    \n    - generate a text with specified length  ( \"maxLength\" is optional default value is 100) using [Faker text](https://faker.readthedocs.io/en/master/locales/en_US.html#faker.providers.lorem.en_US.Provider.text)\n          \n            \"$generator\": \"#/string-type/text\", \"maxLength\": 30\n            \n    - generate a title \"Mr.\",\"Miss\", ... using [Faker prefix](https://faker.readthedocs.io/en/master/providers/faker.providers.person.html#faker.providers.person.Provider.prefix)\n          \n            \"$generator\": \"#/string-type/title\"\n            \n    - generate a person first name using [Faker first_name](https://faker.readthedocs.io/en/master/providers/faker.providers.person.html#faker.providers.person.Provider.first_name)\n          \n            \"$generator\": \"#/string-type/firstName\"\n            \n    - generate a person last name using [Faker last_name](https://faker.readthedocs.io/en/master/providers/faker.providers.person.html#faker.providers.person.Provider.last_name)\n        \n            \"$generator\": \"#/string-type/lastName\"\n            \n    - generate a phone number using [Faker phone_number](https://faker.readthedocs.io/en/master/providers/faker.providers.phone_number.html#faker.providers.phone_number.Provider.phone_number)\n            \n            \"$generator\": \"#/string-type/phone\"\n            \n    - generate an Email address using [Faker email](https://faker.readthedocs.io/en/master/providers/faker.providers.internet.html#faker.providers.internet.Provider.email)\n        \n            \"$generator\": \"#/string-type/email\"\n            \n    - generate a city name using [Faker city](https://faker.readthedocs.io/en/master/providers/faker.providers.address.html#faker.providers.address.Provider.city)\n        \n            \"$generator\": \"#/string-type/city\"\n            \n    - generate a country name using [Faker country](https://faker.readthedocs.io/en/master/providers/faker.providers.address.html#faker.providers.address.Provider.country)\n        \n            \"$generator\": \"#/string-type/country\"\n            \n    - generate an ISO country code using [Faker country_code](https://faker.readthedocs.io/en/master/providers/faker.providers.address.html#faker.providers.address.Provider.country_code)\n        \n            \"$generator\": \"#/string-type/countryCode\"\n            \n    - generate an I18n language code using [Faker language_code](https://faker.readthedocs.io/en/master/providers/baseprovider.html#faker.providers.BaseProvider.language_code)\n        \n            \"$generator\": \"#/string-type/languageCode\"\n            \n    - generate a date using [Faker date_between_dates](https://faker.readthedocs.io/en/master/providers/faker.providers.date_time.html#faker.providers.date_time.Provider.date_between_dates) date format is YYYY-mm-dd\n    \n    minimum : the number of days from today for minimum date (default value is -30 years in days) MUST BE INTEGER (positive or negative)\n    \n    maximum : the number of days from today for maximum date (default is 0) MUST BE INTEGER (positive or negative)\n              \n            \"type\": \"string\",\n            \"format\": \"date\",\n            \"minimum\": -5,\n            \"maximum\": 10\n      \n- for \"object\" properties:\n    - get one JSON object from the file \"object-name.json\" in the configured object_repository_dir directory\n\n            \"$generator\": \"#/object-repository/object-name\"\n            \n    - generate empty object\n    \n            \"$generator\": \"#/object-type/empty\"\n            \n- for \"number\" properties:\n    - generate constant number\n              \n            \"type\": \"number\",\n            \"const\": 25.00\n      \n    - generate null/None number\n    \n            \"type\": [\"number\", \"null\"],\n            \"const\": null\n          \n    - generate number between\n        \n            \"type\": \"number\",\n            \"maximum\": 1000.00,\n            \"minimum\": 0.00\n\n    - generate a random number or null/None (By default 5% of null are generated, this frequency can be configured)\n\n            \"type\": [\"number\", \"null\"]\n        \n- for \"integer\" properties:\n    - generate constant integer\n              \n            \"type\": \"integer\",\n            \"const\": 25\n      \n    - generate null/None integer\n    \n            \"type\": [\"integer\", \"null\"],\n            \"const\": null\n          \n    - generate integer between\n        \n            \"type\": \"integer\",\n            \"maximum\": 1000,\n            \"minimum\": 0\n      \n    - generate a random integer or null/None (By default 5% of null are generated, this frequency can be configured)\n\n            \"type\": [\"integer\", \"null\"]\n          \n\n- Pair combination generation is available:\n    to activate it you need to add on the property. \n    \n        \"$pairwise\": true\n        \n    this mode is available for:\n    \n    - boolean propeties\n    - String properties with \"Enum\" or \"pattern\" (Warning pairwise generation on pattern can be very slow depending on your pattern complexity)\n    - Object with \"$generator\": \"#/object-repository/object-name\"\n\n## Config file description:\n    \nHere is a sample config file:\n    \n        {\n          \"schema_dir\": \"schemas\",\n          \"metadata_dir\": \"metadatas\",\n          \"static_input_dir\": \"\",\n          \"object_repository_dir\": \"object-repositories\",\n          \"record_number\": 1,\n          \"apply_record_number_on_pairwise\": true,\n          \"generate_pairwise_hash\": false,\n          \"data_locale_list\": [\"en_US\",\"fr_FR\"],\n          \"null_percent\": 5,\n          \"stream_configs\": {\n            \"sample\": {\n              \"record_number\": 100,\n              \"apply_record_number_on_pairwise\": true,\n              \"generate_pairwise_hash\": true,\n              \"data_locale_list\": [\"en_US\",\"fr_FR\"],\n              \"pair_generation_mode\": \"pairwise\"\n            }\n          }\n        }\n    \n### First part is \"global configuration\":\n\n- \"schema_dir\" path to directory that contains JSON schema file(s).    \n- \"metadata_dir\" path to directory that contains Singer Metadata file(s).\n- \"static_input_dir\" Ã¢th to directory that contains JSON static inputs file.\n\nIn those 3 directories we expect 1 file per stream, filename = <stream-id>.json\n\n- \"object_repository_dir\" path to the directory that contains repositories JSON files.\n\n### Second part is default configuration for all streams:\n\n- \"record_number\" : the default number of generated records (if not override)\n- \"apply_record_number_on_pairwise\" : boolean, if true the previous record number is generated ignoring the number of \npossible permutation number computed by pairwise algorithm\n- \"generate_pairwise_hash\" : boolean, if true a \"pairwise_hash\" property is added to the generated data to identify the \nPair used by each record.\n- \"data_locale_list\" : list of locale for generated data [Faker Documentation](https://faker.readthedocs.io/en/stable/locales.html)\n- \"pair_generation_mode\": Optional Possible values are \"pairwise\" (Default mode) \"all_combinations\" and \"every_value_at_least_once\"\n\nThis parameter defines the type of combination generated with the possible values of all properties marked with \"$pairwise\": true\n    \n    - every_value_at_least_once : is the smallest combination, every value will be used at least once.\n    - pairwise : generates more combination compliant with [Pairwise Testing](http://pairwise.org/)\n    - all_combinations : is the biggest, is will generate all possible combinations of the provided values (cartesian product)\n\n- \"null_percent\": Optional frequency in percent of Null values generated.\n\n### Third part is stream specific configuration:\n\nexpected structure is:\n\n        \"stream_configs\": {\n            <stream-id1> : {},\n            <stream-id2> : {}\n        }\n\nAll values from second part (Default values) can be overridden for each stream.\n    \n## Dependencies:\n\n- [jsonschema](https://pypi.org/project/jsonschema/)\n- [Faker](https://pypi.org/project/Faker/)\n- [exrex](https://pypi.org/project/exrex/)\n- [ijson](https://pypi.org/project/ijson/)\n- [allpairspy](https://pypi.org/project/allpairspy/)\n\n## Example:\n\nIn order to generate the following JSON:\n\n    {\n        \"checked\": false,\n        \"dimensions\": {\n            \"width\": 5,\n            \"height\": 10\n        },\n        \"id\": 1,\n        \"name\": \"A green door\",\n        \"color\": \"green\",\n        \"price\": 12.5,\n        \"tags\": [\n            \"home\",\n            \"green\"\n        ],\n        \"hour\": \"09:31:40 AM\"\n    }\n    \nWe first generate the JSON schema:\n\n    {\n      \"$schema\": \"http://json-schema.org/draft-07/schema\",\n      \"$id\": \"http://example.com/example.json\",\n      \"type\": \"object\",\n      \"required\": [\n        \"checked\",\n        \"dimensions\",\n        \"id\",\n        \"name\",\n        \"color\",\n        \"price\",\n        \"tags\",\n        \"hour\"\n      ],\n      \"properties\": {\n        \"checked\": {\n          \"$id\": \"#/properties/checked\",\n          \"type\": \"boolean\"\n        },\n        \"dimensions\": {\n          \"$id\": \"#/properties/dimensions\",\n          \"type\": \"object\",\n          \"required\": [\n            \"width\",\n            \"height\"\n          ],\n          \"properties\": {\n            \"width\": {\n              \"$id\": \"#/properties/dimensions/properties/width\",\n              \"type\": \"integer\"\n            },\n            \"height\": {\n              \"$id\": \"#/properties/dimensions/properties/height\",\n              \"type\": \"integer\"\n            }\n          },\n          \"additionalProperties\": true\n        },\n        \"id\": {\n          \"$id\": \"#/properties/id\",\n          \"type\": \"integer\"\n        },\n        \"name\": {\n          \"$id\": \"#/properties/name\",\n          \"type\": \"string\"\n        },\n        \"color\": {\n          \"$id\": \"#/properties/color\",\n          \"type\": \"string\",\n          \"enum\": [\"green\", \"yellow\", \"red\"]\n        },\n        \"price\": {\n          \"$id\": \"#/properties/price\",\n          \"type\": \"number\"\n        },\n        \"tags\": {\n          \"$id\": \"#/properties/tags\",\n          \"type\": \"array\",\n          \"additionalItems\": true,\n          \"items\": {\n            \"$id\": \"#/properties/tags/items\",\n            \"type\": \"string\"\n          }\n        },\n        \"hour\": {\n          \"$id\": \"#/properties/hour\",\n          \"type\": \"string\",\n          \"pattern\": \"(1[0-2]|0[1-9])(:[0-5]\\\\d){2} (A|P)M\"\n        }\n      },\n      \"additionalProperties\": true\n    }\n    \nThen we add the data generation details\n\n    {\n      \"$schema\": \"http://json-schema.org/draft-07/schema\",\n      \"$id\": \"http://example.com/example.json\",\n      \"type\": \"object\",\n      \"required\": [\n        \"checked\",\n        \"dimensions\",\n        \"id\",\n        \"name\",\n        \"color\",\n        \"price\",\n        \"tags\",\n        \"hour\"\n      ],\n      \"properties\": {\n        \"checked\": {\n          \"$id\": \"#/properties/checked\",\n          \"type\": \"boolean\",\n          \"$pairwise\": true\n        },\n        \"dimensions\": {\n          \"$id\": \"#/properties/dimensions\",\n          \"type\": \"object\",\n          \"required\": [\n            \"width\",\n            \"height\"\n          ],\n          \"properties\": {\n            \"width\": {\n              \"$id\": \"#/properties/dimensions/properties/width\",\n              \"type\": \"integer\"\n            },\n            \"height\": {\n              \"$id\": \"#/properties/dimensions/properties/height\",\n              \"type\": \"integer\"\n            }\n          },\n          \"additionalProperties\": true,\n          \"$generator\": \"#/object-repository/dim-sample\",\n          \"$pairwise\": true\n        },\n        \"id\": {\n          \"$id\": \"#/properties/id\",\n          \"type\": \"integer\"\n        },\n        \"name\": {\n          \"$id\": \"#/properties/name\",\n          \"type\": \"string\",\n          \"$generator\": \"#/string-type/lastName\"\n        },\n        \"color\": {\n          \"$id\": \"#/properties/color\",\n          \"type\": \"string\",\n          \"enum\": [\"green\", \"yellow\", \"red\"],\n          \"$pairwise\": true\n        },\n        \"price\": {\n          \"$id\": \"#/properties/price\",\n          \"type\": \"number\"\n        },\n        \"tags\": {\n          \"$id\": \"#/properties/tags\",\n          \"type\": \"array\",\n          \"additionalItems\": true,\n          \"items\": {\n            \"$id\": \"#/properties/tags/items\",\n            \"type\": \"string\"\n          }\n        },\n        \"hour\": {\n          \"$id\": \"#/properties/hour\",\n          \"type\": \"string\",\n          \"pattern\": \"(1[0-2]|0[1-9])(:[0-5]\\\\d){2} (A|P)M\"\n        }\n      },\n      \"additionalProperties\": true\n    }\n\nThen we setup the config file (we have 1 stream, no stream specific configuration):\n\n    {\n      \"schema_dir\": \"Path to schemas directory\",\n      \"metadata_dir\": \"Path to metadatas directory\",\n      \"object_repository_dir\": \"Path to object-repositories directory\",\n      \"static_input_dir\": \"Path to static-input directory\",\n      \"record_number\": 100,\n      \"apply_record_number_on_pairwise\": true,\n      \"generate_pairwise_hash\": false,\n      \"data_locale_list\": [\"en_US\",\"fr_FR\"]\n    }\n\nFor local list see [Faker Documentation](https://faker.readthedocs.io/en/stable/locales.html)\n\n---\n\nCopyright &copy; 2020 Elebail\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ericlebail/tap-test-data-generator",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tap-test-data-generator",
    "package_url": "https://pypi.org/project/tap-test-data-generator/",
    "platform": null,
    "project_url": "https://pypi.org/project/tap-test-data-generator/",
    "project_urls": {
      "Homepage": "https://github.com/ericlebail/tap-test-data-generator"
    },
    "release_url": "https://pypi.org/project/tap-test-data-generator/1.4.0/",
    "requires_dist": [
      "singer-python (==5.13.0)",
      "setuptools (==65.6.3)",
      "importlib-metadata (==5.2.0)",
      "requests",
      "jsonschema (==2.6.0)",
      "Faker (==15.3.4)",
      "exrex (==0.10.5)",
      "ijson (==3.1.4)",
      "allpairspy (==2.5.0)",
      "pytest (==7.2.0) ; extra == 'test'",
      "pytest-cov (==4.0.0) ; extra == 'test'",
      "pytest-mock (==3.10.0) ; extra == 'test'",
      "testfixtures (==7.0.4) ; extra == 'test'",
      "coverage (==7.0.1) ; extra == 'test'"
    ],
    "requires_python": ">=3.8",
    "summary": "Singer.io tap for generating test data",
    "version": "1.4.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16248923,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "122ec1e11a169ee94934f9f7b2c5ac50f4715f904a4caee6cc10d1ed4395fc68",
          "md5": "e8fef3579f6810b0fd784b394c3f0de0",
          "sha256": "a1e36a3ed68ff35fc69e24c24f15c572decba73f15b4221cbde2c4c56c327a1b"
        },
        "downloads": -1,
        "filename": "tap_test_data_generator-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e8fef3579f6810b0fd784b394c3f0de0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 31286,
        "upload_time": "2021-03-25T18:46:10",
        "upload_time_iso_8601": "2021-03-25T18:46:10.642670Z",
        "url": "https://files.pythonhosted.org/packages/12/2e/c1e11a169ee94934f9f7b2c5ac50f4715f904a4caee6cc10d1ed4395fc68/tap_test_data_generator-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "368f9d64766967b21cba2182d09c598c2f4b56298b432304af7505952cad4dab",
          "md5": "6e955146b1b54b247556a866e9d1c475",
          "sha256": "ac9857f2a779e3f7269478f1b6c80132b184b3b0c61b0986416c2c19d9e3fa73"
        },
        "downloads": -1,
        "filename": "tap-test-data-generator-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6e955146b1b54b247556a866e9d1c475",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 31388,
        "upload_time": "2021-03-25T18:46:11",
        "upload_time_iso_8601": "2021-03-25T18:46:11.985401Z",
        "url": "https://files.pythonhosted.org/packages/36/8f/9d64766967b21cba2182d09c598c2f4b56298b432304af7505952cad4dab/tap-test-data-generator-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "00760fba6e55eaee28c734a349ab16deb72dfa7c70c6a2a7b2ce62548031c48b",
          "md5": "281afc51ba328cfc2e8901dcdb1cb709",
          "sha256": "b8e2fedf8ed4db74c722e2bcc277c857b3de901a60d842347bcc7fe15eaba260"
        },
        "downloads": -1,
        "filename": "tap_test_data_generator-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "281afc51ba328cfc2e8901dcdb1cb709",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 32084,
        "upload_time": "2021-03-27T18:32:43",
        "upload_time_iso_8601": "2021-03-27T18:32:43.989219Z",
        "url": "https://files.pythonhosted.org/packages/00/76/0fba6e55eaee28c734a349ab16deb72dfa7c70c6a2a7b2ce62548031c48b/tap_test_data_generator-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c44dea80fed93fe953a011e9e83852947abfd0168af4e965e07a589d1801b2d2",
          "md5": "13af6292bef53d8e9a524de3f826ab97",
          "sha256": "ea5c1fcfecd6d47d71e1cccde839bbe73b387143254020e521606c6832a98c48"
        },
        "downloads": -1,
        "filename": "tap-test-data-generator-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "13af6292bef53d8e9a524de3f826ab97",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 32570,
        "upload_time": "2021-03-27T18:32:45",
        "upload_time_iso_8601": "2021-03-27T18:32:45.051690Z",
        "url": "https://files.pythonhosted.org/packages/c4/4d/ea80fed93fe953a011e9e83852947abfd0168af4e965e07a589d1801b2d2/tap-test-data-generator-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7bf090edc34c8e6e4190dde8b8122e79b37a2d8cc58c832d61e6250cd088ef55",
          "md5": "63c25f0d18b420fd310382ae18348b93",
          "sha256": "3cd32201f5affc8ac1fb35d20a9f100543b5ecbba81d08d6c871835d827d64c9"
        },
        "downloads": -1,
        "filename": "tap_test_data_generator-1.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "63c25f0d18b420fd310382ae18348b93",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 32248,
        "upload_time": "2021-04-01T16:48:23",
        "upload_time_iso_8601": "2021-04-01T16:48:23.427081Z",
        "url": "https://files.pythonhosted.org/packages/7b/f0/90edc34c8e6e4190dde8b8122e79b37a2d8cc58c832d61e6250cd088ef55/tap_test_data_generator-1.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d8d0069c1d9d04b96b7cfeddbb30b1e43c6654f7d673df66f401713bec2aaea7",
          "md5": "a1c0943f4f85f69098ba80acb30c1b59",
          "sha256": "359493f8b2e8a5c7d3fef629b7a84e75915ef841d6a0ca4ccbe37763253cb6e1"
        },
        "downloads": -1,
        "filename": "tap-test-data-generator-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a1c0943f4f85f69098ba80acb30c1b59",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 32083,
        "upload_time": "2021-04-01T16:48:24",
        "upload_time_iso_8601": "2021-04-01T16:48:24.498787Z",
        "url": "https://files.pythonhosted.org/packages/d8/d0/069c1d9d04b96b7cfeddbb30b1e43c6654f7d673df66f401713bec2aaea7/tap-test-data-generator-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8926a5959c4d5befc21af6090cb92f237a5d330a2d90e88810a7c7965a43cff6",
          "md5": "708ac99ce58e3e787ec1e2267bfa0e4e",
          "sha256": "37ddad7f5ce340ce5aac75725cf6e824961d0a645738227a9d3e989ee631e029"
        },
        "downloads": -1,
        "filename": "tap_test_data_generator-1.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "708ac99ce58e3e787ec1e2267bfa0e4e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 32337,
        "upload_time": "2022-12-29T08:44:46",
        "upload_time_iso_8601": "2022-12-29T08:44:46.623129Z",
        "url": "https://files.pythonhosted.org/packages/89/26/a5959c4d5befc21af6090cb92f237a5d330a2d90e88810a7c7965a43cff6/tap_test_data_generator-1.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "180c737a128461e3a937f53d5d0d029e7fbcd3c80cbc0012a93638b45ef447e3",
          "md5": "0b13fe2847d9f274696490c018a99a74",
          "sha256": "370cf6bb44974a5bd3909a5766e5f328bc18ec3ca2c8d57f4d91830998b79921"
        },
        "downloads": -1,
        "filename": "tap-test-data-generator-1.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0b13fe2847d9f274696490c018a99a74",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 32697,
        "upload_time": "2022-12-29T08:44:47",
        "upload_time_iso_8601": "2022-12-29T08:44:47.909310Z",
        "url": "https://files.pythonhosted.org/packages/18/0c/737a128461e3a937f53d5d0d029e7fbcd3c80cbc0012a93638b45ef447e3/tap-test-data-generator-1.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "14a89114d475523a7d78d30ec250fa1251aa2be58e959fe6ea3f662786cfe928",
          "md5": "1ec1421679a03f8d3b49acd4c38f9288",
          "sha256": "58a28d2f19fc5496642789560ef91b91c246960e19bacd62f4c6e1b059c04d40"
        },
        "downloads": -1,
        "filename": "tap_test_data_generator-1.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1ec1421679a03f8d3b49acd4c38f9288",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 32352,
        "upload_time": "2022-12-29T13:10:15",
        "upload_time_iso_8601": "2022-12-29T13:10:15.547473Z",
        "url": "https://files.pythonhosted.org/packages/14/a8/9114d475523a7d78d30ec250fa1251aa2be58e959fe6ea3f662786cfe928/tap_test_data_generator-1.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4ba84d213944a34fd668e230e5ed3c87c9e333bc6330714be27bbf083dc41310",
          "md5": "a738833586a304a3c742c1a0f87a823d",
          "sha256": "19a834a94d5848c322f91ffc604365ddf5664b634e093e950985bb02f8fe79b0"
        },
        "downloads": -1,
        "filename": "tap-test-data-generator-1.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a738833586a304a3c742c1a0f87a823d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 32723,
        "upload_time": "2022-12-29T13:10:16",
        "upload_time_iso_8601": "2022-12-29T13:10:16.775463Z",
        "url": "https://files.pythonhosted.org/packages/4b/a8/4d213944a34fd668e230e5ed3c87c9e333bc6330714be27bbf083dc41310/tap-test-data-generator-1.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "14a89114d475523a7d78d30ec250fa1251aa2be58e959fe6ea3f662786cfe928",
        "md5": "1ec1421679a03f8d3b49acd4c38f9288",
        "sha256": "58a28d2f19fc5496642789560ef91b91c246960e19bacd62f4c6e1b059c04d40"
      },
      "downloads": -1,
      "filename": "tap_test_data_generator-1.4.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1ec1421679a03f8d3b49acd4c38f9288",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 32352,
      "upload_time": "2022-12-29T13:10:15",
      "upload_time_iso_8601": "2022-12-29T13:10:15.547473Z",
      "url": "https://files.pythonhosted.org/packages/14/a8/9114d475523a7d78d30ec250fa1251aa2be58e959fe6ea3f662786cfe928/tap_test_data_generator-1.4.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4ba84d213944a34fd668e230e5ed3c87c9e333bc6330714be27bbf083dc41310",
        "md5": "a738833586a304a3c742c1a0f87a823d",
        "sha256": "19a834a94d5848c322f91ffc604365ddf5664b634e093e950985bb02f8fe79b0"
      },
      "downloads": -1,
      "filename": "tap-test-data-generator-1.4.0.tar.gz",
      "has_sig": false,
      "md5_digest": "a738833586a304a3c742c1a0f87a823d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 32723,
      "upload_time": "2022-12-29T13:10:16",
      "upload_time_iso_8601": "2022-12-29T13:10:16.775463Z",
      "url": "https://files.pythonhosted.org/packages/4b/a8/4d213944a34fd668e230e5ed3c87c9e333bc6330714be27bbf083dc41310/tap-test-data-generator-1.4.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}