{
  "info": {
    "author": "Lin Yang",
    "author_email": "github@linyang.me",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# pynamodb-encoder\n![Build](https://github.com/lyang/pynamodb-encoder/actions/workflows/build.yml/badge.svg) ![CodeQL](https://github.com/lyang/pynamodb-encoder/actions/workflows/codeql-analysis.yml/badge.svg) [![codecov](https://codecov.io/gh/lyang/pynamodb-encoder/branch/main/graph/badge.svg?token=P51YVL86N8)](https://codecov.io/gh/lyang/pynamodb-encoder) [![Maintainability](https://api.codeclimate.com/v1/badges/1e5c3b615dedb2bffb0c/maintainability)](https://codeclimate.com/github/lyang/pynamodb-encoder/maintainability) [![PyPI version](https://badge.fury.io/py/pynamodb-encoder.svg)](https://badge.fury.io/py/pynamodb-encoder)\n[![PyPI Supported Python Versions](https://img.shields.io/pypi/pyversions/pynamodb-encoder.svg)](https://pypi.python.org/pypi/pynamodb-encoder/)\n\n## Introduction\n`pynamodb-encoder` provides helper classes that can convert [PynamoDB](https://github.com/pynamodb/PynamoDB) `Model` objects into `JSON` serializable `dict`. It can also decode such `dict` back into those `Model` objects. [Polymorphic](https://pynamodb.readthedocs.io/en/latest/polymorphism.html) models and attributes are also supported.\n\n## Examples\n```python\ndef test_encode_complex_model(encoder: Encoder):\n    class Pet(DynamicMapAttribute):\n        cls = DiscriminatorAttribute()\n        name = UnicodeAttribute()\n\n    class Cat(Pet, discriminator=\"Cat\"):\n        pass\n\n    class Dog(Pet, discriminator=\"Dog\"):\n        pass\n\n    class Human(Model):\n        name = UnicodeAttribute()\n        pets = ListAttribute(of=Pet)\n\n    jon = Human(name=\"Jon\", pets=[Cat(name=\"Garfield\", age=43), Dog(name=\"Odie\")])\n    assert encoder.encode(jon) == {\n        \"name\": \"Jon\",\n        \"pets\": [{\"cls\": \"Cat\", \"name\": \"Garfield\", \"age\": 43}, {\"cls\": \"Dog\", \"name\": \"Odie\"}],\n    }\n\ndef test_decode_complex_model(decoder: Decoder):\n    class Pet(DynamicMapAttribute):\n        cls = DiscriminatorAttribute()\n\n    class Cat(Pet, discriminator=\"Cat\"):\n        name = UnicodeAttribute()\n\n    class Dog(Pet, discriminator=\"Dog\"):\n        breed = UnicodeAttribute()\n\n    class Human(Model):\n        name = UnicodeAttribute()\n        age = NumberAttribute()\n        pets = ListAttribute(of=Pet)\n\n    jon = decoder.decode(\n        Human,\n        {\n            \"name\": \"Jon\",\n            \"age\": 70,\n            \"pets\": [{\"cls\": \"Cat\", \"name\": \"Garfield\"}, {\"cls\": \"Dog\", \"breed\": \"Terrier\"}],\n        },\n    )\n\n    assert jon.name == \"Jon\"\n    assert jon.age == 70\n    assert isinstance(jon.pets, list)\n    assert len(jon.pets) == 2\n    assert isinstance(jon.pets[0], Cat)\n    assert jon.pets[0].name == \"Garfield\"\n    assert isinstance(jon.pets[1], Dog)\n    assert jon.pets[1].breed == \"Terrier\"\n```\n\nMore examples can be found in [encoder_test.py](tests/encoder_test.py) and [decoder_test.py](tests/decoder_test.py)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/lyang/pynamodb-encoder",
    "keywords": "dynamodb,pynamodb,json,encode,decode",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pynamodb-encoder",
    "package_url": "https://pypi.org/project/pynamodb-encoder/",
    "platform": null,
    "project_url": "https://pypi.org/project/pynamodb-encoder/",
    "project_urls": {
      "Homepage": "https://github.com/lyang/pynamodb-encoder",
      "Repository": "https://github.com/lyang/pynamodb-encoder"
    },
    "release_url": "https://pypi.org/project/pynamodb-encoder/0.1.2/",
    "requires_dist": [
      "pynamodb (>=5.1.0,<6.0.0)"
    ],
    "requires_python": ">=3.7,<4.0",
    "summary": "Helper classes that encode/decode pynamodb models to/from JSON serializable dict",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17419671,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1b4e17e643e90707f550c111d591dac4dc3ce1c2b00f7b66a06d5adbedc25f3b",
          "md5": "c35484aaa492dc9c173564d04f9e7cd5",
          "sha256": "901e0decae20049c5c0b7ecfc57334ef53823ddc36f8e0178e06b812364ac145"
        },
        "downloads": -1,
        "filename": "pynamodb_encoder-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c35484aaa492dc9c173564d04f9e7cd5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 6148,
        "upload_time": "2021-12-13T06:30:03",
        "upload_time_iso_8601": "2021-12-13T06:30:03.793013Z",
        "url": "https://files.pythonhosted.org/packages/1b/4e/17e643e90707f550c111d591dac4dc3ce1c2b00f7b66a06d5adbedc25f3b/pynamodb_encoder-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a9dc6515367ac1157d9c8f29c74c84382da57733591ff15cb535ef1bfd939a67",
          "md5": "e30b6d1e2f0f76fe653d814d9e77e0fd",
          "sha256": "37c321e704b9d76d355baabeed6c6e792acb76f9ffc11e107bffa8d776b0c2c5"
        },
        "downloads": -1,
        "filename": "pynamodb-encoder-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e30b6d1e2f0f76fe653d814d9e77e0fd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 4526,
        "upload_time": "2021-12-13T06:30:02",
        "upload_time_iso_8601": "2021-12-13T06:30:02.066873Z",
        "url": "https://files.pythonhosted.org/packages/a9/dc/6515367ac1157d9c8f29c74c84382da57733591ff15cb535ef1bfd939a67/pynamodb-encoder-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1db400ea3fd0de8b953ede7399ec5308244cefa5b8d5d66a661aebb418bd1d35",
          "md5": "2f34994c5b8c839fa03280d65bb8a30e",
          "sha256": "5039c2a85ade4004eaa363fb85d703d343cccd9d02b34019655cc80989312047"
        },
        "downloads": -1,
        "filename": "pynamodb_encoder-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2f34994c5b8c839fa03280d65bb8a30e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 6220,
        "upload_time": "2021-12-15T07:27:22",
        "upload_time_iso_8601": "2021-12-15T07:27:22.291946Z",
        "url": "https://files.pythonhosted.org/packages/1d/b4/00ea3fd0de8b953ede7399ec5308244cefa5b8d5d66a661aebb418bd1d35/pynamodb_encoder-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "08bc86f2d5f964e6f9d7fcf3a2c91b08fa5df32e649e2116f8c34f44d8e2f483",
          "md5": "dab42d336f33d60d0a5904cd045d48bc",
          "sha256": "f491233396418eedf2cc7694859d245d645d6562cffea7cc15bd2230e2ed707c"
        },
        "downloads": -1,
        "filename": "pynamodb-encoder-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "dab42d336f33d60d0a5904cd045d48bc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 4637,
        "upload_time": "2021-12-15T07:27:20",
        "upload_time_iso_8601": "2021-12-15T07:27:20.269200Z",
        "url": "https://files.pythonhosted.org/packages/08/bc/86f2d5f964e6f9d7fcf3a2c91b08fa5df32e649e2116f8c34f44d8e2f483/pynamodb-encoder-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6b8a08483c879a5b9b340ce91407977fe58e76e6f027f7f3f6cf45667492af1e",
          "md5": "ef7ed3cd4055fad782e02bb3b7477946",
          "sha256": "f8c81a2271cd9b6fadbc95496301458b0560f892a0bd622160f6ad0d654fb511"
        },
        "downloads": -1,
        "filename": "pynamodb_encoder-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ef7ed3cd4055fad782e02bb3b7477946",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 6233,
        "upload_time": "2023-03-23T18:10:21",
        "upload_time_iso_8601": "2023-03-23T18:10:21.753587Z",
        "url": "https://files.pythonhosted.org/packages/6b/8a/08483c879a5b9b340ce91407977fe58e76e6f027f7f3f6cf45667492af1e/pynamodb_encoder-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "562486bf19b12cc5d5ed804d424c664e734faef1be11177a5fc17eb74bb6859a",
          "md5": "266a0b3cc9f5390fe56d74d3b95f573c",
          "sha256": "f564bc21dda1bd8a82948057c5842316da5e55b146c6193c33f73122068300e6"
        },
        "downloads": -1,
        "filename": "pynamodb_encoder-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "266a0b3cc9f5390fe56d74d3b95f573c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 4123,
        "upload_time": "2023-03-23T18:10:22",
        "upload_time_iso_8601": "2023-03-23T18:10:22.844025Z",
        "url": "https://files.pythonhosted.org/packages/56/24/86bf19b12cc5d5ed804d424c664e734faef1be11177a5fc17eb74bb6859a/pynamodb_encoder-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6b8a08483c879a5b9b340ce91407977fe58e76e6f027f7f3f6cf45667492af1e",
        "md5": "ef7ed3cd4055fad782e02bb3b7477946",
        "sha256": "f8c81a2271cd9b6fadbc95496301458b0560f892a0bd622160f6ad0d654fb511"
      },
      "downloads": -1,
      "filename": "pynamodb_encoder-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ef7ed3cd4055fad782e02bb3b7477946",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<4.0",
      "size": 6233,
      "upload_time": "2023-03-23T18:10:21",
      "upload_time_iso_8601": "2023-03-23T18:10:21.753587Z",
      "url": "https://files.pythonhosted.org/packages/6b/8a/08483c879a5b9b340ce91407977fe58e76e6f027f7f3f6cf45667492af1e/pynamodb_encoder-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "562486bf19b12cc5d5ed804d424c664e734faef1be11177a5fc17eb74bb6859a",
        "md5": "266a0b3cc9f5390fe56d74d3b95f573c",
        "sha256": "f564bc21dda1bd8a82948057c5842316da5e55b146c6193c33f73122068300e6"
      },
      "downloads": -1,
      "filename": "pynamodb_encoder-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "266a0b3cc9f5390fe56d74d3b95f573c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7,<4.0",
      "size": 4123,
      "upload_time": "2023-03-23T18:10:22",
      "upload_time_iso_8601": "2023-03-23T18:10:22.844025Z",
      "url": "https://files.pythonhosted.org/packages/56/24/86bf19b12cc5d5ed804d424c664e734faef1be11177a5fc17eb74bb6859a/pynamodb_encoder-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}