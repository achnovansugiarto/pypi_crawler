{
  "info": {
    "author": "Douglas Myers-Turnbull",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# Suretime\n\n[![Version status](https://img.shields.io/pypi/status/suretime)](https://pypi.org/project/suretime)\n[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)\n[![Python version compatibility](https://img.shields.io/pypi/pyversions/suretime)](https://pypi.org/project/suretime)\n[![Version on GitHub](https://img.shields.io/github/v/release/dmyersturnbull/suretime?include_prereleases&label=GitHub)](https://github.com/dmyersturnbull/suretime/releases)\n[![Version on PyPi](https://img.shields.io/pypi/v/suretime)](https://pypi.org/project/suretime)\n[![Build (GitHub Actions)](https://img.shields.io/github/workflow/status/dmyersturnbull/suretime/Build%20&%20test?label=Build%20&%20test)](https://github.com/dmyersturnbull/suretime/actions)\n[![Test coverage (coveralls)](https://coveralls.io/repos/github/dmyersturnbull/suretime/badge.svg?branch=main&service=github)](https://coveralls.io/github/dmyersturnbull/suretime?branch=main)\n[![Maintainability (Code Climate)](https://api.codeclimate.com/v1/badges/14b23b28b0d9c37a0ebf/maintainability)](https://codeclimate.com/github/dmyersturnbull/suretime/maintainability)\n[![Code Quality (Scrutinizer)](https://scrutinizer-ci.com/g/dmyersturnbull/suretime/badges/quality-score.png?b=main)](https://scrutinizer-ci.com/g/dmyersturnbull/suretime/?branch=main)\n[![Created with Tyrannosaurus](https://img.shields.io/badge/Created_with-Tyrannosaurus-0000ff.svg)](https://github.com/dmyersturnbull/tyrannosaurus)\n\nMap nonstandard timezones to IANA zones on all platforms.\nRecord timestamps and intervals that behave correctly,\neven if the timezone changes in the middle of a calculation.\n`pip install suretime tzdata`.\n\n### Timezone mapping\n\nTo get the local zone in IANA:\n\n```python\nfrom suretime import Suretime, datetime\n\ndatetime.now().tzname()  # \"Pacific Standard Time\"\nSuretime.zones.first_local()  # ZoneInfo[America/Los_Angeles])\n```\n\nTo map a nonstandard zone from elsewhere:\n\n```python\nfrom suretime import Suretime\n\nSuretime.zones.only(\"Europe/Tiraspol\")  # ZoneInfo[Europe/Tiraspol]\nSuretime.zones.first(\"Central Pacific Standard Time\")  # ZoneInfo[Pacific/Guadalcanal]\nSuretime.zones.first(\"Central Pacific Standard Time\", territory=\"AQ\")  # ZoneInfo[Antarctica/Casey]\n```\n\nNote that there is no 1-1 mapping between Windows and IANA timezones,\nso suretime can fail despite its name.\n\n### \"Tagged\" datetimes and intervals\n\nSuretime also has models to represent timestamps and intervals as accurately as the system permits.\nFor example, a `TaggedInterval` contains the wall time, IANA zone, original (unmapped) timezone info\nfrom the system, monotonic (typically boottime) clock time, and the clock used.\n\nTimezone-resolved datetimes and intervals know both real and calendar times, correctly representing\nthe ground truth even if a timezone shift occurs between events – such as from a daylight savings change\nor the user boarding a flight.\n\n```python\nfrom suretime import Suretime\n\ntagged = Suretime.tagged.now()\ntagged.to_utc  # TaggedDateTime[...]\ntagged.clock.name  # \"boottime\" on most systems\ntagged == tagged  # same point in time\ntagged.iso_with_zone  # \"2021-01-20T22:24:13.219253-07:00 [America/Los_Angeles]\"\n```\n\n\n### Comparison to [tzlocal](https://github.com/regebro/tzlocal)\n\ntzlocal is a bit different. It:\n- ... only handles your current system’s timezone\n- ... is highly OS-specific\n- ... requires many system calls, making it typically *much* slower\n- ... is compatible with Windows 2000, XP, and 7 and below\n- ... is compatible with Python 3.6, 3.7, and 3.8\n- ... very rarely, can access timezones on incorrectly configured POSIX systems\n\nYou can combine both packages, falling back to tzlocal if suretime fails.\n(See the example below).\n\n### Full example\n\n```python\nfrom suretime import Suretime, datetime\n\n# Get your local system, non-IANA timezone\nsystem_time = datetime.now().astimezone()\nsystem_timezone = system_time.tzname()  # e.g. Pacific Standard Time\n\n# Get an IANA timezone instead:\nSuretime.zones.only_local()  # ZoneInfo[America/Los_Angeles]\n# Or for an arbitrary system timezone name:\nSuretime.zones.first(system_timezone)  # ZoneInfo[America/Los_Angeles]\n# Of course, it maps IANA zones to themselves:\nSuretime.zones.only(\"America/Los_Angeles\")  # ZoneInfo[America/Los_Angeles]\n\n# Get all IANA timezones that could match a zone\n# The first uses the primary/null territory\n# The second uses the territory \"AQ\"\nSuretime.zones.all(\"Central Pacific Standard Time\")  # {ZoneInfo[Pacific/Guadalcanal]}\nSuretime.zones.all(\"Central Pacific Standard Time\", \"AQ\")  # {ZoneInfo[Antarctica/Casey]}\n\n# Get 1 matching IANA zone; \"get\" means optional\nSuretime.zones.first(\"Central Pacific Standard Time\", \"AQ\")  # ZoneInfo[Pacific/Casey]\nSuretime.zones.first(\"nonexistent zone\")  # None\nSuretime.zones.only(\"nonexistent zone\")  # errors\nSuretime.zones.only(\"Central Pacific Standard Time\", \"any\")  # fails (multiple possible IANA zones)\n\n# Get a fully resolved \"tagged datetime\"\n# It contains:\n# - The zoned datetime\n# - The primary IANA ZoneInfo\n# - The original system timezone\n# - A system wall time (`time.monotonic_ns`)\ntagged = Suretime.tagged.now_local_sys()  # TaggedDatetime[ ... ]\nprint(tagged.clock.name)  # e.g. \"boottime\"\n# or NTP:\ntagged = Suretime.tagged.now_local_ntp(server=\"north-america\", kind=\"server-received\")  # TaggedDatetime[ ... ]\n# or fully reliable but not keeping the local zone:\ntagged = Suretime.tagged.now_utc_ntp()  # TaggedDatetime[ ... ]\n# or NTP:\ntagged = Suretime.tagged.now_local_sys()  # TaggedDatetime[ ... ]\nprint(tagged.clock.name)  # \"ntp:...\"\nprint(tagged.clock.info.resolution)  # e.g. -7\n\n# 2021-01-20T22:24:13.219253-07:00 [America/Los_Angeles]\nprint(tagged.iso_with_zone)  # <datetime> [zone]\nprint(tagged.source.territory)  # \"primary\"\n\n# if you only need the real time:\nSuretime.clocks.sys()\n# or:\nSuretime.clocks.ntp()\n# or for all of the NTP clock times:\nntp_data = Suretime.clocks.ntp_raw()\nprint(ntp_data.root_dispersion)\nprint(ntp_data.server_sent, ntp_data.client_received)\nprint(ntp_data.round_trip.total_seconds())\n\n# Adjust a tagged time to a new real time\ntagged = Suretime.tagged.now_utc_sys()  # TaggedDatetime[ ... ]\nsys_now = Suretime.clocks.sys()\ntagged.at(sys_now)\n# now the datetime is adjusted to where it should be at the new real time\n\n# Compare tagged datetimes\nprint(tagged < tagged)  # False\nprint(tagged == tagged)  # True: They're the same point in time\nprint(tagged == system_time)  # True: They're the same point in time\nprint(tagged.is_identical_to(tagged))  # True: They're exactly the same\n\n# Get a \"tagged duration\" with the start and end, and monotonic real time in nanoseconds\nthen = Suretime.tagged.now()  # TaggedDatetime [ ... ]\nfor i in list(range(10000)): i += 1  # Just waiting a little\nnow = Suretime.tagged.now()  # TaggedInterval [ ... ]\ninterval = Suretime.tagged.interval(then, now)  # TaggedInterval [ ... ]\nprint(interval.real_delta)  # Actual time passed\nprint(interval.wall_delta)  # Simple end - start\nprint(interval.iso)  # start--end in ISO 8601 format\nprint(interval.real_str)  # days:HH:mm:ss.millis.micros.nanos\nprint(interval.duration.iso)  # e.g. P0Y3M5DT14H22M35.223051S\n\n# use suretime, fall back to tzlocal\nimport tzlocal\n\n\ndef get_local() -> Suretime.Types.TaggedDatetime:\n  try:\n    return Suretime.tagged.now()\n  except Suretime.Errors.CannotMapTzError:\n    zone = tzlocal.get_localzone()\n    return Suretime.tagged.exact(datetime.now(zone))\n\n```\n\n### 🍁 Contributing\n\nLicensed under the terms of the [Apache License 2.0](https://spdx.org/licenses/Apache-2.0.html).\n[New issues](https://github.com/dmyersturnbull/suretime/issues) and pull requests are welcome.\nPlease refer to the [contributing guide](https://github.com/dmyersturnbull/suretime/blob/main/CONTRIBUTING.md)\nand [security policy](https://github.com/dmyersturnbull/suretime/blob/main/SECURITY.md).\n\nGenerated with [Tyrannosaurus](https://github.com/dmyersturnbull/tyrannosaurus).\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dmyersturnbull/suretime",
    "keywords": "timezone,zoneinfo,datetime,timestamp",
    "license": "Apache-2.0",
    "maintainer": "Douglas Myers-Turnbull",
    "maintainer_email": "",
    "name": "suretime",
    "package_url": "https://pypi.org/project/suretime/",
    "platform": "",
    "project_url": "https://pypi.org/project/suretime/",
    "project_urls": {
      "CI": "https://github.com/dmyersturnbull/suretime/actions",
      "Documentation": "https://suretime.readthedocs.io",
      "Download": "https://pypi.org/project/suretime/",
      "Homepage": "https://github.com/dmyersturnbull/suretime",
      "Issues": "https://github.com/dmyersturnbull/suretime/issues",
      "Repository": "https://github.com/dmyersturnbull/suretime"
    },
    "release_url": "https://pypi.org/project/suretime/0.2.0/",
    "requires_dist": [
      "defusedxml (>=0.7,<1.0)",
      "ntplib (>=0.4,<1.0)"
    ],
    "requires_python": ">=3.9,<4.0",
    "summary": "Handle IANA timezones and fully resolved timestamps and intervals on all platforms",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11980250,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "47b10df74aaeb1c5cb83ce21368d5952e93301a802c92ed2ad1a84100a95c801",
          "md5": "96ed60c922630ea69523bce6478a4e7a",
          "sha256": "4b7770c8abab04800f063f3116d926af640c0b4402951264f5c809164209f99c"
        },
        "downloads": -1,
        "filename": "suretime-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "96ed60c922630ea69523bce6478a4e7a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 15355,
        "upload_time": "2021-06-10T19:02:55",
        "upload_time_iso_8601": "2021-06-10T19:02:55.980439Z",
        "url": "https://files.pythonhosted.org/packages/47/b1/0df74aaeb1c5cb83ce21368d5952e93301a802c92ed2ad1a84100a95c801/suretime-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a226b1fa4f0506bd957389f7cef73d2a264bfb3215c824a0c2726729b64932f2",
          "md5": "e2bebf3a47cdf870932732a9d3384f22",
          "sha256": "1f32459d150f032d1a3b13b22ce6142837cd3ca6e841f81f2fae45b143097ef5"
        },
        "downloads": -1,
        "filename": "suretime-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e2bebf3a47cdf870932732a9d3384f22",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 15561,
        "upload_time": "2021-06-10T19:02:57",
        "upload_time_iso_8601": "2021-06-10T19:02:57.459964Z",
        "url": "https://files.pythonhosted.org/packages/a2/26/b1fa4f0506bd957389f7cef73d2a264bfb3215c824a0c2726729b64932f2/suretime-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e8b083e87bdb5d32680f4eed5fccb0998d42903460e16b3f92392fa5e84062e1",
          "md5": "95afc0949141e973244e176ef34df5be",
          "sha256": "695d705c8bff47823e098c52c7aee81278e5d0e9f8ad2d7677198594307de147"
        },
        "downloads": -1,
        "filename": "suretime-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "95afc0949141e973244e176ef34df5be",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 21316,
        "upload_time": "2021-06-30T04:24:49",
        "upload_time_iso_8601": "2021-06-30T04:24:49.535041Z",
        "url": "https://files.pythonhosted.org/packages/e8/b0/83e87bdb5d32680f4eed5fccb0998d42903460e16b3f92392fa5e84062e1/suretime-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e6cf1d51cca1171945e1949f8248f042ecf4cdbc1afedaf01c7fce85f41df4c",
          "md5": "01ca7da8ce223347a5d42616702fafad",
          "sha256": "30e672b3b6cdfb9580003c3c4ff8e79a6d0da5a0d2db1fd04ef7372f82148fcd"
        },
        "downloads": -1,
        "filename": "suretime-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "01ca7da8ce223347a5d42616702fafad",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 21267,
        "upload_time": "2021-06-30T04:24:50",
        "upload_time_iso_8601": "2021-06-30T04:24:50.825238Z",
        "url": "https://files.pythonhosted.org/packages/7e/6c/f1d51cca1171945e1949f8248f042ecf4cdbc1afedaf01c7fce85f41df4c/suretime-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "878fd04b4e394ad2f47e1b3274d84a8bf84d4c186caadeca8c56c353beddd51f",
          "md5": "70e20846691a4777fe396948349a8eb3",
          "sha256": "7295e48f4204a1ed271c549ab48050f137f2b1f2639d8fa697995f336a0a29f2"
        },
        "downloads": -1,
        "filename": "suretime-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "70e20846691a4777fe396948349a8eb3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 28351,
        "upload_time": "2021-11-10T03:23:32",
        "upload_time_iso_8601": "2021-11-10T03:23:32.330061Z",
        "url": "https://files.pythonhosted.org/packages/87/8f/d04b4e394ad2f47e1b3274d84a8bf84d4c186caadeca8c56c353beddd51f/suretime-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "64c876d5bbab5ec7407b96ca16928ef9303a4d38b9e8c4c07f5a537f7573aab0",
          "md5": "ef312204b08151e6aab5043b14751869",
          "sha256": "08d6ae3a5b1cb613d0fd9abf54b3160786227ef7f64e007f96ab9ea391650dfb"
        },
        "downloads": -1,
        "filename": "suretime-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ef312204b08151e6aab5043b14751869",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 24769,
        "upload_time": "2021-11-10T03:23:33",
        "upload_time_iso_8601": "2021-11-10T03:23:33.805693Z",
        "url": "https://files.pythonhosted.org/packages/64/c8/76d5bbab5ec7407b96ca16928ef9303a4d38b9e8c4c07f5a537f7573aab0/suretime-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "878fd04b4e394ad2f47e1b3274d84a8bf84d4c186caadeca8c56c353beddd51f",
        "md5": "70e20846691a4777fe396948349a8eb3",
        "sha256": "7295e48f4204a1ed271c549ab48050f137f2b1f2639d8fa697995f336a0a29f2"
      },
      "downloads": -1,
      "filename": "suretime-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "70e20846691a4777fe396948349a8eb3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9,<4.0",
      "size": 28351,
      "upload_time": "2021-11-10T03:23:32",
      "upload_time_iso_8601": "2021-11-10T03:23:32.330061Z",
      "url": "https://files.pythonhosted.org/packages/87/8f/d04b4e394ad2f47e1b3274d84a8bf84d4c186caadeca8c56c353beddd51f/suretime-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "64c876d5bbab5ec7407b96ca16928ef9303a4d38b9e8c4c07f5a537f7573aab0",
        "md5": "ef312204b08151e6aab5043b14751869",
        "sha256": "08d6ae3a5b1cb613d0fd9abf54b3160786227ef7f64e007f96ab9ea391650dfb"
      },
      "downloads": -1,
      "filename": "suretime-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "ef312204b08151e6aab5043b14751869",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9,<4.0",
      "size": 24769,
      "upload_time": "2021-11-10T03:23:33",
      "upload_time_iso_8601": "2021-11-10T03:23:33.805693Z",
      "url": "https://files.pythonhosted.org/packages/64/c8/76d5bbab5ec7407b96ca16928ef9303a4d38b9e8c4c07f5a537f7573aab0/suretime-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}