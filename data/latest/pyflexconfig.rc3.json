{
  "info": {
    "author": "Gilles Lenfant",
    "author_email": "gilles.lenfant@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# pyflexconfig\n\n------------\n\n- You prefer using direct Python files to provide configuration data to your Python application,\n  just because you can provide any object type you'd prefer in your configuration file.\n\n- You want to place your custom configuration file anywhere you'd prefer, in traditional places like\n  `/etc` or wherever you prefer.\n\n- You want your app to provide some default values to some or all configuration data.\n\n- But you may prefer something else than Python files (YAML, JSON, XML, etc.), just provide your own\n  parser.\n\n`pyflexconfig` is just another kid in the block in the settings / options / configuration data\nmanagement game that fulfills these requirements.\n\n## Features\n\n- Provide the default configuration programmatically, with a default file in your package or through\n  environment variables.\n\n- Override the default configuration options with a custom configuration file. You can override one,\n  two or all default configuration options.\n\n- You don't like Python configuration files for onr reason or another, even when executed in a\n  sandbox. Okay, provide your own parser.\n  \n- The configuration container is just a global object on which you can add attributes. I recommend\n  using a `types.SimpleNamespace` object but anything may do the job.\n\n- You may provide the custom configuration file either through conventional places\n  (ie. `/etc/my_custom_config.py`), explicitly through a dedicated command line option, or through an\n  environment variable.\n\n- The default filter keeps only UPPERCASED options not starting with an underscore. This allows to\n  use temporary variables with lowercase names in your configuration files, that are not exposed in\n  the resulting configuration object. You may provide your own filter if you want other rules or add\n  other rules to the default one.\n\n- You may finally provide a validator if you need to check the type / value of some or all\n  configuration options.\n\n## Installation\n\n### Using pyflexconfig\n\n`pyflexconfig` requires Python 3.6 or later. Install it with the usual pip dance :\n\n```console\npip install pyflexconfig\n```\n\nNote that `pyflexconfig` runs on any operating system and does not require packages outside the\nstdlib.\n\n### Develop on a fork of pyflexconfig\n\nOf course, provide and activate a dedicated virtual environment with python 3.6 or later, fork\n`pyflexconfig`, then:\n\n```console\ngit clone <your fork URL>\ncd pyflexconfig\npip install -e .[dev]\n```\n\nPlease work from the `develop` branch that supposed to include the latest validated developments.\n\nPlease rebase your fork on the `develop` branch and fix the unit tests (run `pytest`) before issuing\na pull / merge request on the `develop` branch of the original Git repository.\n\nAh ! And of course file an issue that explains your changes.\n\n## Using pyflexconfig\n\nA basic usage :\n\nYour default config file `defaultsettings.py`:\n\n```python\n# Warning: do not import here somethong that's not in the stdlib\nONE = 1\nTWO = 2\n# ...\n```\n\nThe `settings.py` module in the same directory:\n\n```python\nimport pathlib\nfrom types import SimpleNamespace\nfrom pyflexconfig import bootstrap\n\nconfig = SimpleNamespace(\n    # \"hardcoded\" default options\n    THREE = 3,\n    # ...\n)\n\n# Load the default config that ships in the package\n_default_config_path = pathlib.Path(__file__).resolve().parent / \"defaultsettings.py\"\nbootstrap(config, default_path=_default_config_path)\n```\n\nAnd your main application:\n\n```python\nfrom .settings import config\n\ndef main():\n    print(config.ONE)\n    print(config.TWO)\n    print(config.THREE)\n\nif __name__ == \"__main__\":\n    main()\n```\n\nFor more examples, please browse the\n[demo/](https://github.com/glenfant/pyflexconfig/tree/master/demos) directory of the repository\nas well as the [tests.py](https://github.com/glenfant/pyflexconfig/blob/master/tests.py) module.\n\nView the full API issuing in the console:\n\n```console\npython -c \"import pyflexconfig; help(pyflexconfig)\"\n```\n\n## License\n\nThis software is provided under the terms of the MIT license. See the `LICENSE` file in the Git\nrepository or [here](https://en.wikipedia.org/wiki/MIT_License).\n\n## Author\n\nThis software comes from [Gilles Lenfant](mailto:gilles.lenfant@gmail.com)'s damaged brain.\n\nThe development of `pyflexconfig` is sponsored by the [Caisse des\nDepots](https://www.caissedesdepots.fr/).  \n\n## Links\n\n- [Github](https://github.com/glenfant/pyflexconfig/)\n- [Issues tracker](https://github.com/glenfant/pyflexconfig/issues)\n\n# History\n\n## 1.0.2 - 2020/7/5\n\n- Bugfix: Accepting pathlib.Path objects as well as str paths.\n\n## 1.0.1 - 2020/6/19\n\n- Removed `python-dotenv` from requirements (not used)\n- Some typos in README.md\n- History file\n\n## 1.0.0 - 2020/6/18\n\n- initial release",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/glenfant/pyflexconfig",
    "keywords": "Configuration,Settings",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyflexconfig",
    "package_url": "https://pypi.org/project/pyflexconfig/",
    "platform": "any",
    "project_url": "https://pypi.org/project/pyflexconfig/",
    "project_urls": {
      "Homepage": "https://github.com/glenfant/pyflexconfig"
    },
    "release_url": "https://pypi.org/project/pyflexconfig/1.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A simple Python app configuration file helper",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7632216,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "216a397d403ee721d90c38657650845446e4b27c5de31b7901011936ef5d3a7f",
          "md5": "a2d39f88743b7bb2d757ade9edd7e3cc",
          "sha256": "431abf7871599bcceeb9a472474274ca79e65767c9f2bc9b8a885b8a756353bf"
        },
        "downloads": -1,
        "filename": "pyflexconfig-1.0.0-1-none-any.whl",
        "has_sig": false,
        "md5_digest": "a2d39f88743b7bb2d757ade9edd7e3cc",
        "packagetype": "bdist_wheel",
        "python_version": "1",
        "requires_python": ">=3.6",
        "size": 6186,
        "upload_time": "2020-06-18T19:44:01",
        "upload_time_iso_8601": "2020-06-18T19:44:01.146826Z",
        "url": "https://files.pythonhosted.org/packages/21/6a/397d403ee721d90c38657650845446e4b27c5de31b7901011936ef5d3a7f/pyflexconfig-1.0.0-1-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4d2c8db28bb9e0387c360001e2c40b50fe39094ea1da2df7f9b05e8d3f13a2bc",
          "md5": "34ce8d0a2b61d266bf86397d0cee2aa3",
          "sha256": "47371493c911bf0388815ad799e36d422b39c0ca57dfff9c632a8a8d8f0aa8fb"
        },
        "downloads": -1,
        "filename": "pyflexconfig-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "34ce8d0a2b61d266bf86397d0cee2aa3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6005,
        "upload_time": "2020-06-18T19:44:03",
        "upload_time_iso_8601": "2020-06-18T19:44:03.505425Z",
        "url": "https://files.pythonhosted.org/packages/4d/2c/8db28bb9e0387c360001e2c40b50fe39094ea1da2df7f9b05e8d3f13a2bc/pyflexconfig-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2a892e3f9074ac4d3e87b7522f63ce179e9f830693d45db3da183efff717ad00",
          "md5": "392034cd796efc86b57b6439e9d6a3c2",
          "sha256": "12f253889d88fc3422b62f04a70dd81a1f7bce56d9edb67ef0e4b282cdc05f0b"
        },
        "downloads": -1,
        "filename": "pyflexconfig-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "392034cd796efc86b57b6439e9d6a3c2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6125,
        "upload_time": "2020-06-19T14:48:43",
        "upload_time_iso_8601": "2020-06-19T14:48:43.852081Z",
        "url": "https://files.pythonhosted.org/packages/2a/89/2e3f9074ac4d3e87b7522f63ce179e9f830693d45db3da183efff717ad00/pyflexconfig-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b211c6885330d17dd4bed898d71742aa52c20b2b0d184ac39dfa0d0a431f1030",
          "md5": "a118a2fd060f6ef012c8e37929c25fe8",
          "sha256": "703952674a3e579d77253a2310615094b81dc4979c7f8a30f5ff92b701112b28"
        },
        "downloads": -1,
        "filename": "pyflexconfig-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a118a2fd060f6ef012c8e37929c25fe8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6165,
        "upload_time": "2020-07-05T08:28:04",
        "upload_time_iso_8601": "2020-07-05T08:28:04.141101Z",
        "url": "https://files.pythonhosted.org/packages/b2/11/c6885330d17dd4bed898d71742aa52c20b2b0d184ac39dfa0d0a431f1030/pyflexconfig-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b211c6885330d17dd4bed898d71742aa52c20b2b0d184ac39dfa0d0a431f1030",
        "md5": "a118a2fd060f6ef012c8e37929c25fe8",
        "sha256": "703952674a3e579d77253a2310615094b81dc4979c7f8a30f5ff92b701112b28"
      },
      "downloads": -1,
      "filename": "pyflexconfig-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "a118a2fd060f6ef012c8e37929c25fe8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 6165,
      "upload_time": "2020-07-05T08:28:04",
      "upload_time_iso_8601": "2020-07-05T08:28:04.141101Z",
      "url": "https://files.pythonhosted.org/packages/b2/11/c6885330d17dd4bed898d71742aa52c20b2b0d184ac39dfa0d0a431f1030/pyflexconfig-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}