{
  "info": {
    "author": "Le Quang Nhat",
    "author_email": "nhat.le@f4.intek.edu.vn",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "<h1 style=\"text-align: center;\">Sprite Detection</h1>\n\n<img src=\"optimized_sprite_sheet.png\" width=50%, height=50%><img src=\"optimized_sprite_sheet_bounding_box_white_background.png\" width=50%, height=50%>\n\n\n### Features\n\n- [x] Find the Most Common Color in an Image.\n- [x] Find Sprites in an Image.\n- [x] Draw Sprite Label Bounding Boxes.\n\n### Why this project is useful?\n\n- Used reasonable library for process Image.\n- Can be used on a big image.\n- Easy to understand.\n\n### Usage\n\n- Find the Most Common Color in an Image\n\n```python\n>>> from PIL import Image\n# JPEG image\n>>> image = Image.open('first_image.jpg')\n>>> image.mode\n'RGB'\n>>> find_most_common_color(image)\n(0, 221, 204)\n# PNG image\n>>> image = Image.open('second_image.png')\n>>> image.mode\n'RGBA'\n>>> find_most_common_color(image)\n(0, 0, 0, 0)\n# Grayscale image\n>>> image = image.convert('L')\n>>> image.mode\n'L'\n>>> find_most_common_color(image)\n0\n```\n\n- Find Sprites in an Image.\n\n<img src=\"metal_slug_single_sprite_large.png\" width=50%, height=50%>\n\n```python\n>>> from PIL import Image\n>>> image = Image.open('metal_slug_single_sprite.png')\n>>> sprites, label_map = find_sprites(image, background_color=(255, 255, 255))\n>>> len(sprites)\n1\n>>> for label, sprite in sprites.items():\n...     print(f\"Sprite ({label}): [{sprite.top_left}, {sprite.bottom_right}] {sprite.width}x{sprite.height}\")\nSprite (1): [(0, 0), (29, 37)] 30x38\n>>> import pprint\n>>> pprint.pprint(label_map, width=120)\n[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0],\n [0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0],\n [0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0],\n [0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0],\n [0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0],\n [0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0],\n [0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0],\n [0,0,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0],\n [0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0],\n [0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0],\n [0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0],\n [0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0],\n [0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0],\n [0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0],\n [0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0],\n [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0],\n [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0],\n [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0],\n [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0],\n [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0],\n [0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0],\n [0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0],\n [0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0],\n [0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0],\n [0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],\n [0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1],\n [0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,0],\n [0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,0,0],\n [0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0],\n [0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0],\n [0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0],\n [0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0],\n [0,0,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0],\n [0,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0],\n [0,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0],\n [1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0],\n [1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0],\n [1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0]]\n```\nOther example with the following image:\n\n<img src=\"optimized_sprite_sheet.png\" width=50%, height=50%>\n\n```python\n>>> from PIL import Image\n>>> image = Image.open('optimized_sprite_sheet.png')\n>>> sprites, label_map = find_sprites(image)\n>>> len(sprites)\n22\n>>> for label, sprite in sprites.items():\n...     print(f\"Sprite ({label}): [{sprite.top_left}, {sprite.bottom_right}] {sprite.width}x{sprite.height}\")\nSprite (25): [(383, 1), (455, 102)] 73x102\nSprite (43): [(9, 2), (97, 122)] 89x121\nSprite (26): [(110, 4), (195, 123)] 86x120\nSprite (46): [(207, 4), (291, 123)] 85x120\nSprite (16): [(305, 8), (379, 123)] 75x116\nSprite (53): [(349, 125), (431, 229)] 83x105\nSprite (61): [(285, 126), (330, 181)] 46x56\nSprite (100): [(1, 129), (101, 237)] 101x109\nSprite (106): [(106, 129), (193, 249)] 88x121\nSprite (93): [(183, 137), (278, 241)] 96x105\nSprite (95): [(268, 173), (355, 261)] 88x89\nSprite (178): [(6, 244), (101, 348)] 96x105\nSprite (185): [(145, 247), (245, 355)] 101x109\nSprite (141): [(343, 257), (417, 372)] 75x116\nSprite (169): [(102, 262), (142, 303)] 41x42\nSprite (188): [(249, 267), (344, 373)] 96x107\nSprite (192): [(412, 337), (448, 372)] 37x36\nSprite (256): [(89, 353), (184, 459)] 96x107\nSprite (234): [(11, 356), (104, 461)] 94x106\nSprite (207): [(188, 358), (281, 463)] 94x106\nSprite (229): [(384, 374), (456, 475)] 73x102\nSprite (248): [(286, 378), (368, 482)] 83x105\n```\n\n- Draw Sprite Label Bounding Boxes.\n\n```python\n>>> from PIL import Image\n>>> image = Image.open('optimized_sprite_sheet.png')\n>>> sprites, label_map = find_sprites(image)\n>>> # Draw sprite masks and bounding boxes with the default white background color.\n>>> sprite_label_image = create_sprite_labels_image(sprites, label_map)\n>>> sprite_label_image.save('optimized_sprite_sheet_bounding_box_white_background.png')\n>>> # Draw sprite masks and bounding boxes with a transparent background color.\n>>> sprite_label_image = create_sprite_labels_image(sprites, label_map, background_color=(0, 0, 0, 0))\n>>> sprite_label_image.save('optimized_sprite_sheet_bounding_box_transparent_background.png')\n```\n\n| Sprite Masks with White Background    | Sprite Masks with Transparent Background  |\n| ------------------------------------------------------------- | ------------------------------------------------------------------- |\n| <img src=\"optimized_sprite_sheet_bounding_box_white_background.png\" width=100%, height=100%>|<img src=\"optimized_sprite_sheet_bounding_box_transparent_background.png\" width=100%, height=100%>|\n\n\n### Built with\n- [Pillow](https://pillow.readthedocs.io/en/stable/)\n- [Numpy](https://numpy.org/devdocs/user/quickstart.html)\n\n\n### Authors\n- Le Quang Nhat (masternhat) - Intek student - Developer\n\n\n### Pull requests welcome!\nSpotted an error? Something doesn't make sense? Send me a [pull\nrequest](https://github.com/intek-training-jsc/sprite-detection-masternhat/pulls)!\n\n\n### Support\nAsk your question here: <https://www.google.com/>\n\n### Everyone can Maintains && Contributing\n\nJust follow steps:\n\n1. Fork it (<https://github.com/intek-training-jsc/sprite-detection-masternhat.git>)\n2. Create your feature branch (`git checkout -b feature/fooBar`)\n3. Commit your changes (`git commit -am 'Add some fooBar'`)\n4. Push to the branch (`git push origin feature/fooBar`)\n5. Create a new Pull Request\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/intek-training-jsc/sprite-detection-masternhat",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sprite-detection-masternhat",
    "package_url": "https://pypi.org/project/sprite-detection-masternhat/",
    "platform": "",
    "project_url": "https://pypi.org/project/sprite-detection-masternhat/",
    "project_urls": {
      "Homepage": "https://github.com/intek-training-jsc/sprite-detection-masternhat"
    },
    "release_url": "https://pypi.org/project/sprite-detection-masternhat/1.0.1/",
    "requires_dist": [
      "numpy",
      "pillow"
    ],
    "requires_python": ">=3.6",
    "summary": "Sprite detection package",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6132269,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "567b785fe78274054b66d853eaf39a25a0b0da2487a992dfebd3be65cf858499",
          "md5": "ec9a5f12edc5fd34a60ea567a1e5b807",
          "sha256": "e3ecb173a5603bc6d07823e395ac91a4b09f5a37216f90df6642721af85974ca"
        },
        "downloads": -1,
        "filename": "sprite_detection_masternhat-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ec9a5f12edc5fd34a60ea567a1e5b807",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8816,
        "upload_time": "2019-11-13T18:48:25",
        "upload_time_iso_8601": "2019-11-13T18:48:25.451782Z",
        "url": "https://files.pythonhosted.org/packages/56/7b/785fe78274054b66d853eaf39a25a0b0da2487a992dfebd3be65cf858499/sprite_detection_masternhat-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c906b6d59fc451b1cb557c2178dec5a2ec5e380201b696969b5549dba4111d9",
          "md5": "dcd38858d4417f521f9ecfb4b38378a4",
          "sha256": "62b1202367565074592402e8370300c2024378ecd0ba2d8addeca943c3d30a74"
        },
        "downloads": -1,
        "filename": "sprite_detection_masternhat-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "dcd38858d4417f521f9ecfb4b38378a4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9414,
        "upload_time": "2019-11-13T18:48:28",
        "upload_time_iso_8601": "2019-11-13T18:48:28.434213Z",
        "url": "https://files.pythonhosted.org/packages/8c/90/6b6d59fc451b1cb557c2178dec5a2ec5e380201b696969b5549dba4111d9/sprite_detection_masternhat-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "567b785fe78274054b66d853eaf39a25a0b0da2487a992dfebd3be65cf858499",
        "md5": "ec9a5f12edc5fd34a60ea567a1e5b807",
        "sha256": "e3ecb173a5603bc6d07823e395ac91a4b09f5a37216f90df6642721af85974ca"
      },
      "downloads": -1,
      "filename": "sprite_detection_masternhat-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ec9a5f12edc5fd34a60ea567a1e5b807",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 8816,
      "upload_time": "2019-11-13T18:48:25",
      "upload_time_iso_8601": "2019-11-13T18:48:25.451782Z",
      "url": "https://files.pythonhosted.org/packages/56/7b/785fe78274054b66d853eaf39a25a0b0da2487a992dfebd3be65cf858499/sprite_detection_masternhat-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8c906b6d59fc451b1cb557c2178dec5a2ec5e380201b696969b5549dba4111d9",
        "md5": "dcd38858d4417f521f9ecfb4b38378a4",
        "sha256": "62b1202367565074592402e8370300c2024378ecd0ba2d8addeca943c3d30a74"
      },
      "downloads": -1,
      "filename": "sprite_detection_masternhat-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "dcd38858d4417f521f9ecfb4b38378a4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 9414,
      "upload_time": "2019-11-13T18:48:28",
      "upload_time_iso_8601": "2019-11-13T18:48:28.434213Z",
      "url": "https://files.pythonhosted.org/packages/8c/90/6b6d59fc451b1cb557c2178dec5a2ec5e380201b696969b5549dba4111d9/sprite_detection_masternhat-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}