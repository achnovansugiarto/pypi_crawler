{
  "info": {
    "author": "Adam Milsom",
    "author_email": "a.milsom.2@bham.ac.uk",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# MutilayerPy\n\n[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.6411189.svg)](https://doi.org/10.5281/zenodo.6411189)\n\n A package used to build a kinetic multi-layer model for aerosol particles and films. Released under the GNU GPL v3.0 license.\n\n### Contents\n- [Overview](#overview)\n- [Installation](#installation)\n- [Contributing](#contributing)\n- [Reference documentation](#reference-documentation)\n- [Tutorials](#tutorials) \n- [Acknowledgement and citation](#acknowledgement-and-citation)\n\n## Overview\nMultilayerPy is a Python-based framework for constructing, running and optimising kinetic multi-layer models of aerosol particles and films.\nIn this repository you will find the core MultilayerPy package along with reference documentation (html files) and a directory of tutorial Jupyter notebooks to get you started. \n\nThe framework is summarised in the figure below:\n\n![image](summary_fig.png)\n\nMultilayerPy takes advantage of the object-oriented programming (OOP) paradigm and represents the common building blocks (reaction scheme, diffusion regime, model components) as separate classes.\n\nThese classes can be used to build the model, the code for which is automatically generated by MultilayerPy. \n\nThe model can be paired with experimental data in order to carry out inverse modelling: where model parameters are adjusted such that the best fit to the data is obtained. This can be done using a local or global optimisation algorithm.\n\nAdditionally, Markov Chain Monte Carlo (MCMC) sampling of the model-data system can be carried out using MultilayerPy, incorporating the well-established emcee Python package. \n\nA more detailed description of how MultilayerPy works is outlined in the reference manual and in the upcoming manuscript (close to submission). \n\n## Installation\nThere are currently three ways of installing MultilayerPy:\n\n#### 1) A `pip` install\nRunning `pip install multilayerpy` in your terminal window will download and build MultilayerPy in your python environment, enabling you to import the package without being in the source code directory. This is the most straightforward method. It does not include any of the tutorial notebooks and data, which need to be downloaded separately from the GitHub repository or Zeondo archive. \n\n#### 2) Download the .zip file\nYou can download this repository as a .zip file from the releases tab in this repository or by clicking on the upper-left \"code\" button and selecting \"download ZIP\" for the latest version (the latest version may still be under development). \n\n#### 3) Clone the Git Hub repository\nTo keep an up-to-date version on your system, clone the repository using git and the command line:\n\n`$ git clone https://github.com/tintin554/kinetic-multilayer-model-builder.git`\n\nThen a simple `$ git pull` would update your local copy with the latest \"nightly\" version of the package. \nBe warned that these may not be the final stable versions of the next release of MultilayerPy. Check this by typing `print(multilayerpy.__version__)` into your python terminal.\nDownload the package from the releases tab for the latest stable version. \n\nIf you want to make changes to the source code and/or submit pull requests, fork this repository and include your own features. This is highly encouraged! (see [Contributing](#contributing))\n\nUnit tests should be run after installing or updating the package using methods 2 & 3. Run the testing.py script from the terminal: \n\n`$ python -m unittest testing.py -v`\n\nThere should be no test failures. Alternatively, the `testing.py` code could be run from an interactive Spyder session. \n\n### Anaconda Python distribution (Spyder and Jupyter Notebook)\n\nThe tutorials for this package are written in Jupyter notebooks and the code was developed using Spyder. Both of these programs are available in the [Anaconda Python distribution](https://www.anaconda.com/products/distribution). It is recommended that the user uses this Python distribution to run MultilayerPy.\n\n### Dependencies\nThis package requires the standard Anaconda python distribution (developed on Python version `3.8.8`) and the following packages (and versions) are used for development:\n- SciPy (1.7.3) \n- NumPy (1.21.5)\n- Matplotlib (3.3.4)\n- emcee (3.1.1)\n\nScipy, Numpy and Matplotlib come with the standard Anaconda python distribution. The most straightforward way to install emcee on your system is to type `pip install emcee` into your python terminal. Note that SciPy version >1.7.1 is required for the full functionality of the `optimize` module.\nMultilayerPy works on emcee version 3.1.1 onwards (this is monitored). \n\n## Reference documentation\nOpen the reference documentation html file in your internet browser. There is a search function which enables the user to search the package for documenation on a specific aspect of the source code. \n\n## Tutorials\nYou will find the tutorial Jupyter notebooks in the GitHub repository and the linked Zenodo archive. \n\nIf you have downloaded the package from the Zenodo archive or as a .zip from the GihHub repository, the notebooks should be run in the parent directory containing `multilayerpy`. \n\nIf you have installed the package using `pip` the notebook can be run from anywhere. Note that some notebooks require data available in the GihHub repository and Zenodo archive. \n\n## Contributing\nIn order for this project to progress, input from the community is vital. Please use the issues section of this repository to flag any issues. Forking this repository and submitting pull requests for discussion is highly encouraged as this is the best way to develop and improve this package. \n\nPlease send general feedback and suggestions to the package creator using these details:\n\nAdam Milsom (University of Birmingham): a.milsom.2@bham.ac.uk\n\nSuggestions are very welcome!\n\n## Acknowledgement and citation\nWe would greatly appreciate citation of the description paper (in submission) and source code (see beginning of this README) if MultilayerPy was used in your study. \n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/tintin554/multilayerpy",
    "keywords": "",
    "license": "GPL3.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "multilayerpy",
    "package_url": "https://pypi.org/project/multilayerpy/",
    "platform": null,
    "project_url": "https://pypi.org/project/multilayerpy/",
    "project_urls": {
      "Homepage": "https://github.com/tintin554/multilayerpy"
    },
    "release_url": "https://pypi.org/project/multilayerpy/1.0.1/",
    "requires_dist": [
      "scipy (>=1.7.1)",
      "numpy",
      "matplotlib",
      "emcee"
    ],
    "requires_python": "",
    "summary": "Build, run and optimise kinetic multi-layer models of aerosols and films",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13629679,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b389ec4806f9f1d8d570f44ce48429843616d25cd45da7337032b6bd82d5d29d",
          "md5": "43180d6ad5742c86252fd0b6e8c4b2d2",
          "sha256": "0c4ac9a52e9f13dda4b1ee4217a0b89a8284cbd79974f110f5bfa62922c37634"
        },
        "downloads": -1,
        "filename": "multilayerpy-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "43180d6ad5742c86252fd0b6e8c4b2d2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 53224,
        "upload_time": "2022-04-26T16:18:53",
        "upload_time_iso_8601": "2022-04-26T16:18:53.777324Z",
        "url": "https://files.pythonhosted.org/packages/b3/89/ec4806f9f1d8d570f44ce48429843616d25cd45da7337032b6bd82d5d29d/multilayerpy-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70c1c5490e91e8d3bef6d0b5575793d07b267a2f232fef860724561e57035830",
          "md5": "5e479857b4855ede17b67b67173c04dc",
          "sha256": "bc01d7569a06e50fd9182cc0f4737bfea52be1a15c3b197ed9090b70ad3570df"
        },
        "downloads": -1,
        "filename": "multilayerpy-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5e479857b4855ede17b67b67173c04dc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 41329,
        "upload_time": "2022-04-26T16:18:55",
        "upload_time_iso_8601": "2022-04-26T16:18:55.933559Z",
        "url": "https://files.pythonhosted.org/packages/70/c1/c5490e91e8d3bef6d0b5575793d07b267a2f232fef860724561e57035830/multilayerpy-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b389ec4806f9f1d8d570f44ce48429843616d25cd45da7337032b6bd82d5d29d",
        "md5": "43180d6ad5742c86252fd0b6e8c4b2d2",
        "sha256": "0c4ac9a52e9f13dda4b1ee4217a0b89a8284cbd79974f110f5bfa62922c37634"
      },
      "downloads": -1,
      "filename": "multilayerpy-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "43180d6ad5742c86252fd0b6e8c4b2d2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 53224,
      "upload_time": "2022-04-26T16:18:53",
      "upload_time_iso_8601": "2022-04-26T16:18:53.777324Z",
      "url": "https://files.pythonhosted.org/packages/b3/89/ec4806f9f1d8d570f44ce48429843616d25cd45da7337032b6bd82d5d29d/multilayerpy-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "70c1c5490e91e8d3bef6d0b5575793d07b267a2f232fef860724561e57035830",
        "md5": "5e479857b4855ede17b67b67173c04dc",
        "sha256": "bc01d7569a06e50fd9182cc0f4737bfea52be1a15c3b197ed9090b70ad3570df"
      },
      "downloads": -1,
      "filename": "multilayerpy-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "5e479857b4855ede17b67b67173c04dc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 41329,
      "upload_time": "2022-04-26T16:18:55",
      "upload_time_iso_8601": "2022-04-26T16:18:55.933559Z",
      "url": "https://files.pythonhosted.org/packages/70/c1/c5490e91e8d3bef6d0b5575793d07b267a2f232fef860724561e57035830/multilayerpy-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}