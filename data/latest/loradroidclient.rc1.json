{
  "info": {
    "author": "LORA Tech",
    "author_email": "asklora@loratechai.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# LORA Technologies Bot Client\nClient for LORA Tech's bot services.\n\n**Example**  \nA working example script that you can try can be found at https://github.com/asklora/Droid-Client/blob/production/example_usage.py\n\n\n## Usage:  \n### Bot Creation\n```\nClient.create_bot(args, **kwargs)\n\nArgs:\n    ticker (str): cRIC code for which stock to create a bot for\n    spot_date (str): Date for bot creations.\n    investment_amount (float): Amount of cash the bot can use.\n    bot_id (str): The type of bot to use (e.g. CLASSIC_classic_025)\n\nKwargs:\n    margin (int): Amount of margin the bot is allowed to use. Defaults to 1.\n    price (float): Price of the stock (any currency). Defaults to None (current price).\n    fractionals (bool): Whether the bot should use fractional shares. Defaults to False.\n\nReturns:\n    dict: Parsed bot service response.\n        {\n            ticker (str),                 # RIC code\n            share_num (float),            # Number of shares bought\n            expiry (str),                 # Date of expiry\n            spot_date (str),              # [For internal use]\n            created (str),                # Date of bot creation\n            total_bot_share_num (int),    # Number of shares held by this bot\n            max_loss_pct (float),         # \n            max_loss_price (float),       # \n            max_loss_amount (float),      # \n            target_profit_pct (float),    # \n            target_profit_price (float),  # \n            target_profit_amount (float), # \n            entry_price (float),          # Price of stock when this bot was created\n            margin (int),                 # Amount of margin this bot is allowed to use\n            bot_id (str),                 # This bot's bot type\n            fractionals (bool),           # Whether this bot is allowed to use fractional shares\n            side (str),                   # \n            status (str),                 # Status of this bot (i.e. active)\n            vol (float),                  # \n            classic_vol (float),          # \n            strike_2 (int),               # \n            barrier (int),                # \n            delta (int),                  # \n            option_price (int),           # \n            q (int),                      # \n            r (int),                      # \n            strike (int),                 # \n            t (int),                      # \n            v1 (int),                     # \n            v2 (int),                     # \n        }\n```\n\n### Hedging using an existing bot\n```\nClient.hedge(*args, **kwargs)\n\nArgs:\n    bot_id (str): Type of bot.\n    ticker (str): RIC code.\n    current_price (float): Current price (any currency).\n    entry_price (float): Price when the bot was created.\n    last_share_num (float): Number of shares currently held by the bot.\n    last_hedge_delta (float): Number of shares last sold/bought by the bot.\n    investment_amount (float): Total cash value the bot is allowed to manage.\n    bot_cash_balance (float): Remaining cash the bot has.\n    stop_loss_price (float): Stop loss level of the bot.\n    take_profit_price (float): Take profit level of the bot.\n    expiry (str): Date when the bot expires.\n\nKwargs:\n    strike (Optional[float]): _description_. Defaults to None.\n    strike_2 (Optional[float]): _description_. Defaults to None.\n    margin (Optional[int]): Amount of margin the bot can use. Defaults to 1.\n    fractionals (Optional[bool]): Whether this bot is allowed to use fractional shares. Defaults to False.\n    option_price (Optional[float]): _description_. Defaults to None.\n    barrier (Optional[float]): _description_. Defaults to None.\n    current_low_price (Optional[float]): _description_. Defaults to None.\n    current_high_price (Optional[float]): _description_. Defaults to None.\n    ask_price (Optional[float]): _description_. Defaults to None.\n    bid_price (Optional[float]): _description_. Defaults to None.\n    trading_day (Optional[str]): _description_. Defaults to datetime.strftime(datetime.now().date(), \"%Y-%m-%d  \").\n\nReturns:\n    dict: Parsed bot service response\n        {\n            entry_price (float),       # \n            current_price (float),     # Current price of stock\n            share_num (float),         # \n            total_bot_share_num (int), # \n            last_hedge_delta (int),    # \n            share_change (int),        # \n            side (str),                # \n            status (str),              # \n            strike_2 (int),            # \n            barrier (int),             # \n            delta (int),               # \n            option_price (int),        # \n            q (int),                   # \n            r (int),                   # \n            strike (int),              # \n            t (int),                   # \n            v1 (int),                  # \n            v2 (int),                  # \n        }\n```\n\n### Stopping a bot\n```\nClient.stop(*args, **kwargs)\n\nArgs:\n    bot_id (str): Type of bot.\n    ticker (str): RIC code.\n    current_price (float): Current price (any currency).\n    entry_price (float): Price when the bot was created.\n    last_share_num (float): Number of shares currently held by the bot.\n    last_hedge_delta (float): Number of shares last sold/bought by the bot.\n    investment_amount (float): Total cash value the bot is allowed to manage.\n    bot_cash_balance (float): Remaining cash the bot has.\n    stop_loss_price (float): Stop loss level of the bot.\n    take_profit_price (float): Take profit level of the bot.\n    expiry (str): Date when the bot expires.\n\nKwargs:\n    strike (Optional[float]): _description_. Defaults to None.\n    strike_2 (Optional[float]): _description_. Defaults to None.\n    margin (Optional[int]): Amount of margin the bot can use. Defaults to 1.\n    fractionals (Optional[bool]): Whether this bot is allowed to use fractional shares. Defaults to False.\n    option_price (Optional[float]): _description_. Defaults to None.\n    barrier (Optional[float]): _description_. Defaults to None.\n    current_low_price (Optional[float]): _description_. Defaults to None.\n    current_high_price (Optional[float]): _description_. Defaults to None.\n    ask_price (Optional[float]): _description_. Defaults to None.\n    bid_price (Optional[float]): _description_. Defaults to None.\n    trading_day (Optional[str]): _description_. Defaults to datetime.strftime(datetime.now().date(), \"%Y-%m-%d  \").\n\nReturns:\n    dict: Parsed bot service response\n        {\n            entry_price (float),       # \n            current_price (float),     # Current price of stock\n            share_num (float),         # \n            total_bot_share_num (int), # \n            last_hedge_delta (int),    # \n            share_change (int),        # \n            side (str),                # \n            status (str),              # \n            strike_2 (int),            # \n            barrier (int),             # \n            delta (int),               # \n            option_price (int),        # \n            q (int),                   # \n            r (int),                   # \n            strike (int),              # \n            t (int),                   # \n            v1 (int),                  # \n            v2 (int),                  # \n        }\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://asklora.ai",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "LoraDroidClient",
    "package_url": "https://pypi.org/project/LoraDroidClient/",
    "platform": "",
    "project_url": "https://pypi.org/project/LoraDroidClient/",
    "project_urls": {
      "Homepage": "https://asklora.ai"
    },
    "release_url": "https://pypi.org/project/LoraDroidClient/0.1.0/",
    "requires_dist": [
      "grpcio (==1.43.0)",
      "grpcio-tools (==1.43.0)",
      "protobuf (==3.19.4)",
      "setuptools (==58.0.4)",
      "six (==1.16.0)"
    ],
    "requires_python": "",
    "summary": "Python client for connecting to LORA Technologies' bot services.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12969592,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "533261abe306534c06f712c125b30a966365cb213ea0f722ded84895c7b6c04e",
          "md5": "95872614a34333485696139e2f8f427e",
          "sha256": "51c34ea72e5e6bb638ceaba068464856b1cb985d5637e2854b6bbb6706827d02"
        },
        "downloads": -1,
        "filename": "LoraDroidClient-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "95872614a34333485696139e2f8f427e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12081,
        "upload_time": "2022-02-22T08:49:16",
        "upload_time_iso_8601": "2022-02-22T08:49:16.997429Z",
        "url": "https://files.pythonhosted.org/packages/53/32/61abe306534c06f712c125b30a966365cb213ea0f722ded84895c7b6c04e/LoraDroidClient-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f93c117b70d715154d8399025dfbff08d07151dd14018f9c4220be6770b599d",
          "md5": "f9de63a44541a540acaf682476acd1a1",
          "sha256": "f593325ec8903ba1e0004a9b3eaa3a3f5148c7bac7857ab0c57d152459c55cfd"
        },
        "downloads": -1,
        "filename": "LoraDroidClient-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f9de63a44541a540acaf682476acd1a1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12541,
        "upload_time": "2022-02-22T08:49:18",
        "upload_time_iso_8601": "2022-02-22T08:49:18.888817Z",
        "url": "https://files.pythonhosted.org/packages/1f/93/c117b70d715154d8399025dfbff08d07151dd14018f9c4220be6770b599d/LoraDroidClient-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "533261abe306534c06f712c125b30a966365cb213ea0f722ded84895c7b6c04e",
        "md5": "95872614a34333485696139e2f8f427e",
        "sha256": "51c34ea72e5e6bb638ceaba068464856b1cb985d5637e2854b6bbb6706827d02"
      },
      "downloads": -1,
      "filename": "LoraDroidClient-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "95872614a34333485696139e2f8f427e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 12081,
      "upload_time": "2022-02-22T08:49:16",
      "upload_time_iso_8601": "2022-02-22T08:49:16.997429Z",
      "url": "https://files.pythonhosted.org/packages/53/32/61abe306534c06f712c125b30a966365cb213ea0f722ded84895c7b6c04e/LoraDroidClient-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1f93c117b70d715154d8399025dfbff08d07151dd14018f9c4220be6770b599d",
        "md5": "f9de63a44541a540acaf682476acd1a1",
        "sha256": "f593325ec8903ba1e0004a9b3eaa3a3f5148c7bac7857ab0c57d152459c55cfd"
      },
      "downloads": -1,
      "filename": "LoraDroidClient-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f9de63a44541a540acaf682476acd1a1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12541,
      "upload_time": "2022-02-22T08:49:18",
      "upload_time_iso_8601": "2022-02-22T08:49:18.888817Z",
      "url": "https://files.pythonhosted.org/packages/1f/93/c117b70d715154d8399025dfbff08d07151dd14018f9c4220be6770b599d/LoraDroidClient-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}