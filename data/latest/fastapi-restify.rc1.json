{
  "info": {
    "author": "Steve Ryan",
    "author_email": "syntithenai@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# FastAPI Restify\n\n[![Python application](https://github.com/syntithenai/fastapi_restify/actions/workflows/python-app.yml/badge.svg)](https://github.com/syntithenai/fastapi_restify/actions/workflows/python-app.yml)\n\nThis project helps create a restful api using FastAPI and pydantic with storage engines including file and mongodb.\n\nThe project uses pydantic to map incoming request body data into a storage format.\n\nThe project provides\n- File database implementing list, get, insert, update, replace,  delete\n- Mongo database implementing list, get, insert, update, replace, delete\n- FastAPI router with routes for each HTTP verb get, post, put, patch, delete\n- Authentication helpers including a FastAPI router for login and create user plus a token_listener dependancy for ensuring login on a route\n\nThis project is based on the example provided by https://github.com/Youngestdev/fastapi-mongo.\n\n\n## Usage\n\n1. First up install the package\n```pip install fastapi_mongo_restify```\n\n\n2. Then create a model object that extends MongoDatabase (or FileDatabase)\n- provides pydantic model classes as class variables, updateModelClass and insertModelClass.\nThe insert model is applied to parsing POST requests and the update model is used for PUT/PATCH requests.\n- calls super().__init('collectionName') in it's constructor\n\n\n```\nfrom fastapi_restify.mongo_database import MongoDatabase\n\nfrom pydantic import BaseModel, EmailStr, Field\n\n# used to map request parameters on insert/post\nclass InsertOrderModel(BaseModel):\n    name : str\n    status: str\n    time_started: int\n    time_completed: int\n        \n# used to map request parameters on update/put\nclass UpdateOrderModel(BaseModel):\n    id: int = Field(..., alias='_id')  # update model needs an id field aliased to _id\n    name : str\n    status: str\n    time_started: int\n    time_completed: int\n   \nclass OrdersModel(MongoDatabase):\n    # used by router for parameter mapping\n    updateModelClass = UpdateOrderModel\n    insertModelClass = InsertOrderModel\n    \n    def __init__(self, name = 'orders'): \n        super().__init__(name)\n```\n\n3. Use the restify router in your app, passing an instance of your model to the router and specifying the url prefix.\n\n```\nfrom fastapi import FastAPI, Depends\nfrom fastapi_restify.restful_router import get_router\nfrom orders_model_mongo import OrdersModel\norders_model = OrdersModel()\n\napp = FastAPI(title='Test FastAPI Mongo Restify')\napp.include_router(get_router(orders_model), tags=[\"Orders\"], prefix=\"/orders\") \n\n```\n4. start your app with uvicorn\n```\nimport uvicorn\n\nif __name__ == '__main__':\n    uvicorn.run('app:app', host=\"0.0.0.0\", port=8080, reload=True)\n```\n\n5. Open [http://localhost:8080/docs](http://localhost:8080/docs) to see the FASTAPI generated documentation for your API.\n\n## Authentication\n\nTo use authentication, include the admin router and token_listener.\n!! Note that authentication is incomplete and create_user is exposed as a public endpoint. \n```\nfrom fastapi_restify.auth.jwt_bearer import JWTBearer\nfrom fastapi_restify.auth.admin_router import router as AdminRouter\n\napp.include_router(AdminRouter, tags=[\"Administrator\"], prefix=\"/admin\")\ntoken_listener = JWTBearer()\n# protect the products endpoint\napp.include_router(get_router(products_model), tags=[\"Products\"], prefix=\"/products\" , dependencies=[Depends(token_listener)])\n```\n\n## Change Callbacks\n\nThe database classes can be called with a dict of callbacks with keys insert, update, replace, delete . When a data modification is applied the callback is triggered with dict parameter including modification type and modified record.\nThis behavior is intended to facilitate websocket streaming of changes posted through the restful API.\n\n\n## TODO\n\nhttps://pynamodb.readthedocs.io/en/latest/local.html\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/syntithenai/fastapi_restify",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fastapi-restify",
    "package_url": "https://pypi.org/project/fastapi-restify/",
    "platform": "",
    "project_url": "https://pypi.org/project/fastapi-restify/",
    "project_urls": {
      "Homepage": "https://github.com/syntithenai/fastapi_restify"
    },
    "release_url": "https://pypi.org/project/fastapi-restify/0.0.4/",
    "requires_dist": [
      "motor",
      "PyJWT",
      "bcrypt",
      "uvicorn",
      "pymongo",
      "python-decouple",
      "fastapi",
      "pydantic[email]",
      "passlib",
      "pytest",
      "jinja2",
      "aiofiles",
      "requests",
      "pymongo-inmemory"
    ],
    "requires_python": "",
    "summary": "Rest API configured with pydantic, backed by file database or mongo",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11238920,
  "releases": {
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c1234efdf66c1038cac37ebaa9dfbcf4d9b1c5a1360682eefda7643f4298cc1d",
          "md5": "e374bd200f5b69138fd07586baba515b",
          "sha256": "fee3c616b7ea1c6de709c8809dc460cd9b581a08b10d451754fdc337a15b725d"
        },
        "downloads": -1,
        "filename": "fastapi_restify-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e374bd200f5b69138fd07586baba515b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10114,
        "upload_time": "2021-08-21T12:05:28",
        "upload_time_iso_8601": "2021-08-21T12:05:28.895608Z",
        "url": "https://files.pythonhosted.org/packages/c1/23/4efdf66c1038cac37ebaa9dfbcf4d9b1c5a1360682eefda7643f4298cc1d/fastapi_restify-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "69c36b2bb92fb360cfd7d3f34d3e2f9ad49fbfbdeb7760bc96a2eb0df5aa16a7",
          "md5": "ab2d6c94312106f8e04d4b85129e848f",
          "sha256": "36267b9b73d08bdb9bb993a1891f32d856e4e728375244a9d26a0fe02c39fa1e"
        },
        "downloads": -1,
        "filename": "fastapi_restify-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "ab2d6c94312106f8e04d4b85129e848f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9650,
        "upload_time": "2021-08-21T12:05:30",
        "upload_time_iso_8601": "2021-08-21T12:05:30.414807Z",
        "url": "https://files.pythonhosted.org/packages/69/c3/6b2bb92fb360cfd7d3f34d3e2f9ad49fbfbdeb7760bc96a2eb0df5aa16a7/fastapi_restify-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c1234efdf66c1038cac37ebaa9dfbcf4d9b1c5a1360682eefda7643f4298cc1d",
        "md5": "e374bd200f5b69138fd07586baba515b",
        "sha256": "fee3c616b7ea1c6de709c8809dc460cd9b581a08b10d451754fdc337a15b725d"
      },
      "downloads": -1,
      "filename": "fastapi_restify-0.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e374bd200f5b69138fd07586baba515b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 10114,
      "upload_time": "2021-08-21T12:05:28",
      "upload_time_iso_8601": "2021-08-21T12:05:28.895608Z",
      "url": "https://files.pythonhosted.org/packages/c1/23/4efdf66c1038cac37ebaa9dfbcf4d9b1c5a1360682eefda7643f4298cc1d/fastapi_restify-0.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "69c36b2bb92fb360cfd7d3f34d3e2f9ad49fbfbdeb7760bc96a2eb0df5aa16a7",
        "md5": "ab2d6c94312106f8e04d4b85129e848f",
        "sha256": "36267b9b73d08bdb9bb993a1891f32d856e4e728375244a9d26a0fe02c39fa1e"
      },
      "downloads": -1,
      "filename": "fastapi_restify-0.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "ab2d6c94312106f8e04d4b85129e848f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9650,
      "upload_time": "2021-08-21T12:05:30",
      "upload_time_iso_8601": "2021-08-21T12:05:30.414807Z",
      "url": "https://files.pythonhosted.org/packages/69/c3/6b2bb92fb360cfd7d3f34d3e2f9ad49fbfbdeb7760bc96a2eb0df5aa16a7/fastapi_restify-0.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}