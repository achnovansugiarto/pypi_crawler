{
  "info": {
    "author": "Alex Schimpf",
    "author_email": "aschimpf1@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Python REST API Tester\n\n## Installation\n`pip install rest-api-tester`\n- This is available for Python3.6+\n\n## About\n`rest-api-tester` makes it easy to create REST API tests for your APIs.\nThough this tool is written in Python, your APIs need not be!\n\n## Tutorial\n\n1. Create a test cases file named `__data__/test_something.json`\n```json\n{\n    \"create_something\": {\n        \"url\": \"/something\",\n        \"method\": \"POST\",\n        \"status\": 200,\n        \"request\": {\n            \"name\": \"something\"\n        },\n        \"response\": {\n            \"id\": 1,\n            \"name\": \"something\"\n        }\n    }\n}\n```\n\n2. Create a unit test class\n```python\nfrom rest_api_tester.test import TestCase\n\nclass TestSomething(TestCase):\n    ...\n```\n\n3. Set up your test case runner\n```python\nimport os\nfrom rest_api_tester.client import TestClient\nfrom rest_api_tester.test import TestCase\nfrom rest_api_tester.runner import TestCaseRunner\n\nclass TestSomething(TestCase):\n    def setUp(self) -> None:\n        test_client = TestClient(base_url='https://myapp.com:5000')\n        path_to_data = os.path.join(os.path.dirname(__file__), '__data__')\n        self.runner = TestCaseRunner(\n            client=test_client,\n            path_to_data=path_to_data,\n            default_content_type='application/json'\n        )\n```\n\n4. Create your first API test\n```python\nclass TestSomething(TestCase):\n\n    ...\n\n    def test_create_something(self) -> None:\n        result = self.runner.run(\n            path_to_test_cases='test_something.json',\n            test_name='create_something'\n        )\n        self.verify_test_result(result=result)\n```\n\n## Other Details\n- There is a JSON file parser provided out of the box that can be used to parse JSON test case files\n  - If needed, you can write your own parser for another format... this is quite trivial\n  - Your custom parser function should be provided as an argument to `TestCaseRunner.run`\n- Requests and responses can be referenced as an external file as shown [here](https://github.com/alexschimpf/python-rest-api-tester/blob/main/tests/api/json/__data__/test_json.json#L88)\n  - The file path is relative to `TestCaseRunner.path_to_data`\n- Test case data can be augmented dynamically before tests are run and also before test results are verified\n  - `TestCaseRunner.run` returns a `TestResult` object. You can then use `TestCase.verify_test_result` to verify the result is as expected\n  - Before `TestCase.verify_test_result` is called, you can modify the `TestResult` object, if needed\n  - If you need to modify the test case data before the test is run, you can use the `test_data_modifier` argument of `TestCaseRunner.run`\n    - This is a convenient place to programmatically add authentication data to your test case requests\n- `TestCaseRunner` needs a `client` provided so that it can make requests to your API\n  - There is a `TestClient` class provided out of the box, which makes simple HTTP requests to your API using the `requests` library\n  - If you need something more custom, you can create your own class that extends from `BaseTestClient`\n- `TestCase.verify_test_result` uses a [simple verifier](https://github.com/alexschimpf/python-rest-api-tester/blob/main/rest_api_tester/test.py#L77) by default\n  - If you need something more custom, the verifier can be overridden by using the `verifier` argument\n\n## Not Supported\n- File uploads\n- SOAP\n- Websockets\n\n## Examples\n- You can find more advanced API test examples [here](https://github.com/alexschimpf/python-rest-api-tester/tree/main/tests/api).\n- Note: The examples provided are run against a FastAPI server, and thus need Python3.7+ to run\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/alexschimpf/python-rest-api-tester",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "rest-api-tester",
    "package_url": "https://pypi.org/project/rest-api-tester/",
    "platform": null,
    "project_url": "https://pypi.org/project/rest-api-tester/",
    "project_urls": {
      "Homepage": "https://github.com/alexschimpf/python-rest-api-tester"
    },
    "release_url": "https://pypi.org/project/rest-api-tester/0.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Rest API tester",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16368031,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6608429ee28dc102e6f01963a5cf3e5a1abb7078947b1584fb3f69c44b5a564d",
          "md5": "7bc0f8c63e948a3e34b58db130e72652",
          "sha256": "1eca4e3a097900a5bb1f0bd6ecbd6caf0e98655668d13ffc60778fbadad5a56a"
        },
        "downloads": -1,
        "filename": "rest_api_tester-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7bc0f8c63e948a3e34b58db130e72652",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5436,
        "upload_time": "2023-01-03T03:25:22",
        "upload_time_iso_8601": "2023-01-03T03:25:22.522652Z",
        "url": "https://files.pythonhosted.org/packages/66/08/429ee28dc102e6f01963a5cf3e5a1abb7078947b1584fb3f69c44b5a564d/rest_api_tester-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "30c21cf33fa484e90761e46e00112e79701d6efb67b26c46caf465c9e2a0c606",
          "md5": "94de56cdc8b6a73b2f51284d8c19a94e",
          "sha256": "2d4ae50bd442ee5ad29cc41a23dcd9e6d57ed1abada12019a994efbff47c7b13"
        },
        "downloads": -1,
        "filename": "rest_api_tester-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "94de56cdc8b6a73b2f51284d8c19a94e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5980,
        "upload_time": "2023-01-10T01:23:45",
        "upload_time_iso_8601": "2023-01-10T01:23:45.852070Z",
        "url": "https://files.pythonhosted.org/packages/30/c2/1cf33fa484e90761e46e00112e79701d6efb67b26c46caf465c9e2a0c606/rest_api_tester-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "30c21cf33fa484e90761e46e00112e79701d6efb67b26c46caf465c9e2a0c606",
        "md5": "94de56cdc8b6a73b2f51284d8c19a94e",
        "sha256": "2d4ae50bd442ee5ad29cc41a23dcd9e6d57ed1abada12019a994efbff47c7b13"
      },
      "downloads": -1,
      "filename": "rest_api_tester-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "94de56cdc8b6a73b2f51284d8c19a94e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 5980,
      "upload_time": "2023-01-10T01:23:45",
      "upload_time_iso_8601": "2023-01-10T01:23:45.852070Z",
      "url": "https://files.pythonhosted.org/packages/30/c2/1cf33fa484e90761e46e00112e79701d6efb67b26c46caf465c9e2a0c606/rest_api_tester-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}