{
  "info": {
    "author": "nickolasrm",
    "author_email": "nickolasrochamachado@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# pytest-tmpfs\n![GitHub Workflow Status](https://img.shields.io/github/workflow/status/nickolasrm/pytest-tmpfs/Build)\n[![codecov](https://codecov.io/gh/nickolasrm/pytest-tmpfs/branch/main/graph/badge.svg?token=TErLn7eH5l)](https://codecov.io/gh/nickolasrm/pytest-tmpfs)\n\nA pytest plugin that helps you on using a temporary filesystem for testing\n\n```python\nimport json\n\ndef readjson(path: str) -> dict:\n  \"\"\"\n  Example:\n    >>> path = fs.write('a/b/c.json', '{\"a\": 2}')\n    >>> readjson(path)\n    {'a': 2}\n  \"\"\"\n  with open(path, 'r') as f:\n    return json.load(f)\n```\n\nThis plugin is a fake filesystem manager implementation that relies on the `pytest`'s `tmp_path` fixture to enable safe testing of projects that require disk operations and are difficult to mock.\n\n## Alternatives\n\n- [pyfakefs](https://pypi.org/project/pyfakefs/): good alternative if you wish to mock filesystem operations.\n- [tempfile](https://docs.python.org/3/library/tempfile.html): creates files and directories temporarily.\n\n## Install\n\nFor installing this package, just type the command below in your terminal:\n\n```\npip install pytest-tmpfs\n```\n\n## Usage\n\n### As a fixture\n\nYou can use the `TmpFs` as a fixture by passing `tmpfs` as an argument of your test function.\n\n```python\nimport pytest_tmpfs\n\ndef test_readjson(tmpfs: pytest_tmpfs.TmpFs):\n    path = tmpfs.write('a/b/d.json', '{\"a\": 2}')\n    assert readjson(path) == {'a': 2}\n```\n\n### In doctests\n\nBy installing this plugin, all doctests are automatically enabled to use `fs`, a variable that stores an instance of `TmpFs`.\n\n```python\ndef fscheck(path: str) -> dict:\n  \"\"\"\n  Example:\n    >>> fs.touch('a/b/c.txt')\n    >>> fs.ls('a/b')\n    ['c.txt']\n  \"\"\"\n  pass\n```\n\n### Your own instance\n\nIf you seek to use this plugin without pointing to `tmp_path` it is possible to create your own instance and to manipulate it the way you want.\n\n```python\nimport pytest_tmpfs\n\ndef test_random():\n  mypath = pathlib.Path('a/b/c')\n  fs = TmpFs(mypath)\n```\n\n## Features\n\nThe following table contains all methods that `TmpFs` implements and its descriptions:\n\n| Method | Description | Example | Parameters | Return |\n|---|---|---|---|---|\n| write | writes a file in the disk and adds line by line content to it | fs.write('a/b.txt', 'Hello', 'World!') | path, *lines | abs path to the file |\n| read | reads the contents of a file and returns it as a string | fs.read('a/b.txt') | path | abs path to the file |\n| ls | lists all files inside a folder | fs.ls('a') | path | sorted list of folders and files |\n| rm | removes a file or a folder | fs.rm('a') | path | True if succeded, False if not |\n| mkdir | creates one or more folders | fs.mkdir('b/c') | path | abs path to the folder |\n| mv | moves a file or a folder to another path | fs.mv('a/b.txt', 'b/c') | path, path | abs path to destination |\n| clean | removes all files inside the root of the tmp fs | fs.clean() |  |  |\n| path | converts a relative path into an abs path | fs.path('a') | path | abs path to the file or folder |\n| tree | prints a tree-like structure of a folder | fs.tree('a') | path |  |\n| tree_format | same as tree, but outputs a string | fs.tree_format('a') | path | tree representation |\n| cat | prints the content of a file | fs.cat('b/c/b.txt') | path |  |\n| touch | creates an empty file | fs.touch('a/c.txt') | path | abs path to the file |\n| tmp_cwd | changes CWD to the temporary filesystem folder | fs.tmp_cwd() |  | abs path to the fs root |\n| cwd | returns to the original CWD | fs.cwd() |  | abs path to the old cwd |\n\n> Note: `tmp_cwd` and `cwd` can be used with `with statements`.\n\n## Contributing\n\nFeel free to contribute to this project, just remember to use pre-commit and to write unit tests for new features/bugs.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/nickolasrm/pytest-tmpfs",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pytest-tmpfs",
    "package_url": "https://pypi.org/project/pytest-tmpfs/",
    "platform": "any",
    "project_url": "https://pypi.org/project/pytest-tmpfs/",
    "project_urls": {
      "Homepage": "https://github.com/nickolasrm/pytest-tmpfs"
    },
    "release_url": "https://pypi.org/project/pytest-tmpfs/0.1.4/",
    "requires_dist": [
      "pytest",
      "pytest-cov ; extra == 'dev'",
      "pytest-cov ; extra == 'test'"
    ],
    "requires_python": "",
    "summary": "A pytest plugin that helps you on using a temporary filesystem for testing.",
    "version": "0.1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14929199,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c7d2ad74f4031e51069ec25dbd1fcfa527b66a1a7f257c54270afef9c6cff779",
          "md5": "99880977ebaa3a227569ce1072f08b5b",
          "sha256": "e99eb02fcae0b30cc9671231e3fbde72b62b4a572a9a5509011d4a8cc4345195"
        },
        "downloads": -1,
        "filename": "pytest_tmpfs-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "99880977ebaa3a227569ce1072f08b5b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6253,
        "upload_time": "2022-08-26T08:54:22",
        "upload_time_iso_8601": "2022-08-26T08:54:22.815656Z",
        "url": "https://files.pythonhosted.org/packages/c7/d2/ad74f4031e51069ec25dbd1fcfa527b66a1a7f257c54270afef9c6cff779/pytest_tmpfs-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5fefaad1aff7812b865190474b8bffbeef1ceee6fb6687dbe8680f5728a6495a",
          "md5": "9f9dd5227955c26e33f3f24cb4db0986",
          "sha256": "e30eb40fe2a0a70f5abecb066018c59c532975748401e7845003331570382ace"
        },
        "downloads": -1,
        "filename": "pytest_tmpfs-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9f9dd5227955c26e33f3f24cb4db0986",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7644,
        "upload_time": "2022-08-26T09:34:42",
        "upload_time_iso_8601": "2022-08-26T09:34:42.464659Z",
        "url": "https://files.pythonhosted.org/packages/5f/ef/aad1aff7812b865190474b8bffbeef1ceee6fb6687dbe8680f5728a6495a/pytest_tmpfs-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "29fb9d53867e1c968d169a09f2b5e6f37bd6f0a403e970193dffb95d753bf059",
          "md5": "8ad42450ece1078977054525daf6c259",
          "sha256": "916c2a79d2f2d62706491b66b0ed220d17205abfe168fdbec571cf69c30946ca"
        },
        "downloads": -1,
        "filename": "pytest_tmpfs-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8ad42450ece1078977054525daf6c259",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7726,
        "upload_time": "2022-08-29T22:34:57",
        "upload_time_iso_8601": "2022-08-29T22:34:57.486093Z",
        "url": "https://files.pythonhosted.org/packages/29/fb/9d53867e1c968d169a09f2b5e6f37bd6f0a403e970193dffb95d753bf059/pytest_tmpfs-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "29fb9d53867e1c968d169a09f2b5e6f37bd6f0a403e970193dffb95d753bf059",
        "md5": "8ad42450ece1078977054525daf6c259",
        "sha256": "916c2a79d2f2d62706491b66b0ed220d17205abfe168fdbec571cf69c30946ca"
      },
      "downloads": -1,
      "filename": "pytest_tmpfs-0.1.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8ad42450ece1078977054525daf6c259",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 7726,
      "upload_time": "2022-08-29T22:34:57",
      "upload_time_iso_8601": "2022-08-29T22:34:57.486093Z",
      "url": "https://files.pythonhosted.org/packages/29/fb/9d53867e1c968d169a09f2b5e6f37bd6f0a403e970193dffb95d753bf059/pytest_tmpfs-0.1.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}