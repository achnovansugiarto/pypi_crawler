{
  "info": {
    "author": "Jakub LipiÅ„ski",
    "author_email": "jakub@cellular-genomics.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Bio-Informatics"
    ],
    "description": "# Detect Frequently Interacting REgions (FIREs) in Python\n\n[![PyPI](https://img.shields.io/pypi/v/FIREcaller.svg)](https://pypi.python.org/pypi/FIREcaller)\n\nThe project is a port of [the R package for detecting frequently interacting regions (FIREs) from Hi-C data](https://github.com/yycunc/FIREcaller) to Python. FIRE is described in [A Compendium of Chromatin Contact Maps Reveal Spatially Active Regions in the Human Genome](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5478386/) paper.\n\n## Command line usage\n\nInstall the package:\n```\npython3 -m pip install FIREcaller\n```\n\nDownload [some HiC experiment results](https://data.4dnucleome.org/browse/?experiments_in_set.biosample.biosource.individual.organism.name=human&experiments_in_set.experiment_type.display_title=in+situ+Hi-C&experimentset_type=replicate&type=ExperimentSetReplicate) from the 4D Nucleome database. Choose Contact Matrix (.mcool) as a file type.\n\nDownload the mappability file from [Yunjiang's website](http://enhancer.sdsc.edu/yunjiang/resources/genomic_features/). Ensure the genomic assembly and the bin size matches your HiC files. Add header line `chr start end F GC M` if missing.\n\nPerform FIRE calling:\n```\nFIREcaller \\\n  --cooler_filenames 4DNFIT5YVTLO.mcool \\\n  --cooler_filenames 4DNFIJTOIGOI.mcool \\\n  --mappability_filename F_GC_M_Hind3_10Kb_el.GRCh38.txt \\\n  --bin_size 10000 \\\n  --output_filename fires.csv\n```\n\nThe output file will consist of the genomic regions and their corresponding FIRE scores and log p-values for each HiC file:\n```\nchr start end F GC M 0_count_neig 1_count_neig 0_fire 1_fire 0_logpvalue 1_logpvalue\nchr1 1970000 1980000 2000 0.5175 1.0000 5365 2376 0.9515 0.8702 0.5861 0.4317\nchr1 2020000 2030000 3000 0.6287 0.9907 4305 2005 0.5806 0.5831 0.1128 0.1144\nchr1 2060000 2070000 4000 0.4770 0.9210 4029 2171 0.6880 0.8678 0.1954 0.4277\n(...)\n```\n\n`{n}_fire` column stores the FIIRE score for the n-th cooler file provided as `--cooler_filenames` argument\n\n`{n}_logpvalue` column stores the log p-value for the n-th cooler file provided as `--cooler_filenames` argument\n\n## Python usage\n\nUse the `FIREcaller.calc_fires()` function to perform FIRE calling from your Python program:\n\n`calc_fires(mappability_filename, cooler_filenames, bin_size, neighborhood_region, perc_threshold=.25, avg_mappability_threshold=0.9)`\n\n`mappability_filename : str` - Path to mappability file\n\n`cooler_filenames : str` -  List of paths to HiC experiment results in cooler format\n\n`bin_size : int` - Bin size\n\n`neighborhood_region : int` - Size of neighbor region\n\n`perc_threshold : float` - Maximum ratio of \"bad\" neighbors allowed\n\n`avg_mappability_threshold : float` - Minimum mappability allowed        \n\nThe function returns the Pandas DataFrame matrix.\n\n## Verification\n\nIn order to compare the results derived from this project with the ones obtained from the [FIREcaller R package](https://github.com/yycunc/FIREcaller/) please follow the steps described in the [`README.md`](https://github.com/yycunc/FIREcaller/blob/master/README.md) file to produce the `FIRE_ANALYSIS_40KB.txt` file.\n\nNow download and uncompress the [Hippo_Hi-C_inputs_chr1_22.tar.gz](https://yunliweb.its.unc.edu/FIREcaller/example/HiC_input_for_FIREcaller/Hippo_Hi-C_inputs_chr1_22.tar.gz) and [F_GC_M_HindIII_40KB_hg19.txt.gz](https://yunliweb.its.unc.edu/FIREcaller/example/HiC_input_for_FIREcaller/F_GC_M_HindIII_40KB_hg19.txt.gz) files.\n\nConvert the HiC files to get the `hippo.mcool` cooler file using the `scripts/build_hippo_cool.py` python script:\n\n```\npython scripts/build_hippo_cool.py\n```\n\nRun the FIRE calling:\n```\nFIREcaller \\\n  --cooler_filename hippo.mcool \\\n  --mappability_filename F_GC_M_HindIII_40KB_hg19.txt \\\n  --bin_size 40000 \\\n  --output_filename hippo_fires.csv\n```\n\nCompare the `FIRE_ANALYSIS_40KB.txt` and `fires.csv` files.\n\n## TODO:\n\n- [ ] Add option to remove the MHC regions\n- [ ] Calculate the Super FIREs\n- [x] Convert the script into the Python package\n\nLet me know if you need any of the above and I'll be happy to implement it. I also accept PRs and comments. Enjoy.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/cellular-genomics/python-FIREcaller",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "FIREcaller",
    "package_url": "https://pypi.org/project/FIREcaller/",
    "platform": "",
    "project_url": "https://pypi.org/project/FIREcaller/",
    "project_urls": {
      "Homepage": "https://github.com/cellular-genomics/python-FIREcaller"
    },
    "release_url": "https://pypi.org/project/FIREcaller/1.0.0/",
    "requires_dist": [
      "cooler (>=0.8.7)",
      "pandas (>=1.0.1)",
      "statsmodels (>=0.11.0)",
      "dask (>=2.10.1)",
      "fsspec (>=0.6.2)",
      "tables (>=3.6.1)"
    ],
    "requires_python": ">=3.6",
    "summary": "Python library for detecting Frequently Interacting REgions (FIREs) from Hi-C data",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6729123,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dacf0169d3c879bc5d189373fec6791417c9c64bb9d1a15a71a0469ed5f19bf2",
          "md5": "f8de41f7a6e90ce5a806f3f648b564f0",
          "sha256": "716c5113f7d16a762df5d9582577fe1bbb770f83278e885a37de980f25ce67dc"
        },
        "downloads": -1,
        "filename": "FIREcaller-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f8de41f7a6e90ce5a806f3f648b564f0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10878,
        "upload_time": "2020-03-01T17:06:28",
        "upload_time_iso_8601": "2020-03-01T17:06:28.647083Z",
        "url": "https://files.pythonhosted.org/packages/da/cf/0169d3c879bc5d189373fec6791417c9c64bb9d1a15a71a0469ed5f19bf2/FIREcaller-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "32f442292deadc0fb36e21232f932ca97871dcaf5fe88423165c85dc72582116",
          "md5": "88810494c5f742ab0575dfbc0720bab8",
          "sha256": "070b1a93318ec4cd633d6ffcd4e2a3402b453aef8138f1a477d9d6d2e15f138e"
        },
        "downloads": -1,
        "filename": "FIREcaller-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "88810494c5f742ab0575dfbc0720bab8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6171,
        "upload_time": "2020-03-01T17:06:30",
        "upload_time_iso_8601": "2020-03-01T17:06:30.910010Z",
        "url": "https://files.pythonhosted.org/packages/32/f4/42292deadc0fb36e21232f932ca97871dcaf5fe88423165c85dc72582116/FIREcaller-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dacf0169d3c879bc5d189373fec6791417c9c64bb9d1a15a71a0469ed5f19bf2",
        "md5": "f8de41f7a6e90ce5a806f3f648b564f0",
        "sha256": "716c5113f7d16a762df5d9582577fe1bbb770f83278e885a37de980f25ce67dc"
      },
      "downloads": -1,
      "filename": "FIREcaller-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f8de41f7a6e90ce5a806f3f648b564f0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 10878,
      "upload_time": "2020-03-01T17:06:28",
      "upload_time_iso_8601": "2020-03-01T17:06:28.647083Z",
      "url": "https://files.pythonhosted.org/packages/da/cf/0169d3c879bc5d189373fec6791417c9c64bb9d1a15a71a0469ed5f19bf2/FIREcaller-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "32f442292deadc0fb36e21232f932ca97871dcaf5fe88423165c85dc72582116",
        "md5": "88810494c5f742ab0575dfbc0720bab8",
        "sha256": "070b1a93318ec4cd633d6ffcd4e2a3402b453aef8138f1a477d9d6d2e15f138e"
      },
      "downloads": -1,
      "filename": "FIREcaller-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "88810494c5f742ab0575dfbc0720bab8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 6171,
      "upload_time": "2020-03-01T17:06:30",
      "upload_time_iso_8601": "2020-03-01T17:06:30.910010Z",
      "url": "https://files.pythonhosted.org/packages/32/f4/42292deadc0fb36e21232f932ca97871dcaf5fe88423165c85dc72582116/FIREcaller-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}