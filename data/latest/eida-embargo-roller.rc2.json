{
  "info": {
    "author": "Jonathan Schaeffer",
    "author_email": "dc@resif.fr",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "#+TITLE: EIDA embargo roller\n\n* Description\nThis program takes a stationXML file in input and updates channels epochs to reflect the embargo start date specified.\n\n1. If the channel epoch ends before embargo, it does not do anything\n2. If the channel epoch ends after embargo:\n   - if the channel epoch starts before embargo and the restiction policy is closed then the epoch is split at the embargo date.\n     1. The epoch's restriction policy before the embargo is forced to be open\n     2. The other epoch's restiction policy is left closed\n\n* Usage\n\n#+begin_example\neida_embargo_roller [-i] [-d YYYY-MM-DD] station.xml\n-i      transform stationXML file provided in place\n-d      embargo start date. All channels before this date will get unrestricted policy\n#+end_example\n\n* Examples\nWriting a new XML file  for an embargo starting 2 years from now, on the 1 of january:\n: eida_embargo_roller Z3.A190A.xml > result.xml\n\nChanging an existing XML file:\n: eida_embargo_roller -i Z3.A190A.xml\n\nUsing standard input :\n: wget -qO- \"ws.resif.fr/fdsnws/station/1/query?net=Z3&level=channel&sta=A190A\" | eida_embargo_roller - > result.xml\n\n* Installation\nAs a python package:\n\n: python -m pip install --user eida_embargo_roller\n\nFrom sources:\n\n#+begin_example\ngit clone\ncd eida_embargo_roller\npyhton3 -m venv venv\nsource venv/bin/activate\npip install -r requirements.txt\npip install .\n#+end_example\n\n\n",
    "description_content_type": "text/plain",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/EIDA/embargo-roller/",
    "keywords": "",
    "license": "GPLv3",
    "maintainer": "RÃ©sif-DC",
    "maintainer_email": "dc@resif.fr",
    "name": "eida-embargo-roller",
    "package_url": "https://pypi.org/project/eida-embargo-roller/",
    "platform": "",
    "project_url": "https://pypi.org/project/eida-embargo-roller/",
    "project_urls": {
      "Homepage": "https://github.com/EIDA/embargo-roller/"
    },
    "release_url": "https://pypi.org/project/eida-embargo-roller/0.1.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Transform stationXML files to update embargo policy",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12788659,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6beb322b004e13f90bb9d51225eff7da09f8af31419f9846de37bde66615bda3",
          "md5": "0ac99ec7e4e8a677d5756b64c41f848d",
          "sha256": "c46f9f38ea38a81105e7abfd9933cde1b2407d87a550765f80b65e23bab9c1c0"
        },
        "downloads": -1,
        "filename": "eida_embargo_roller-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0ac99ec7e4e8a677d5756b64c41f848d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14355,
        "upload_time": "2022-02-04T13:05:12",
        "upload_time_iso_8601": "2022-02-04T13:05:12.286983Z",
        "url": "https://files.pythonhosted.org/packages/6b/eb/322b004e13f90bb9d51225eff7da09f8af31419f9846de37bde66615bda3/eida_embargo_roller-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "945d783ac0ea76979957919be384e15fbe0a7f46c56453981698821db8c1d9d9",
          "md5": "5c875e4d6cba2c4c7bdda5b43b9db459",
          "sha256": "765e8ed8a9880c906c19c3f36ce9bea23f380bf7af67209e369be16faba43aad"
        },
        "downloads": -1,
        "filename": "eida_embargo_roller-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5c875e4d6cba2c4c7bdda5b43b9db459",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14515,
        "upload_time": "2022-02-04T15:31:08",
        "upload_time_iso_8601": "2022-02-04T15:31:08.911892Z",
        "url": "https://files.pythonhosted.org/packages/94/5d/783ac0ea76979957919be384e15fbe0a7f46c56453981698821db8c1d9d9/eida_embargo_roller-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "945d783ac0ea76979957919be384e15fbe0a7f46c56453981698821db8c1d9d9",
        "md5": "5c875e4d6cba2c4c7bdda5b43b9db459",
        "sha256": "765e8ed8a9880c906c19c3f36ce9bea23f380bf7af67209e369be16faba43aad"
      },
      "downloads": -1,
      "filename": "eida_embargo_roller-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "5c875e4d6cba2c4c7bdda5b43b9db459",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 14515,
      "upload_time": "2022-02-04T15:31:08",
      "upload_time_iso_8601": "2022-02-04T15:31:08.911892Z",
      "url": "https://files.pythonhosted.org/packages/94/5d/783ac0ea76979957919be384e15fbe0a7f46c56453981698821db8c1d9d9/eida_embargo_roller-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}