{
  "info": {
    "author": "Cameron Simpson",
    "author_email": "Cameron Simpson <cs@cskk.id.au>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "Simple SQL based tagging\nand the associated `sqltags` command line script,\nsupporting both tagged named objects and tagged timestamped log entries.\n\n*Latest release 20230217*:\nSQLTagsORM.search: previous changes seem to have dropped SQTCriterion support.\n\nCompared to `cs.fstags` and its associated `fstags` command,\nthis is oriented towards large numbers of items\nnot naturally associated with filesystem objects.\n\nMy initial use case is an activity log\n(unnamed timestamped tag sets)\nbut I'm also using it for ontologies\n(named tag sets containing metadata).\n\nMany basic tasks can be performed with the `sqltags` command line utility,\ndocumented under the `SQLTagsCommand` class below.\n\nSee the `SQLTagsORM` documentation for details about how data\nare stored in the database.\nSee the `SQLTagSet` documentation for details of how various\ntag value types are supported.\n\n## Class `BaseSQLTagsCommand(cs.cmdutils.BaseCommand, cs.tagset.TagsCommandMixin)`\n\nCommon features for commands oriented around an `SQLTags` database.\n\nCommand line usage:\n\n    Usage: basesqltags [-f db_url] subcommand [...]\n      -f db_url SQLAlchemy database URL or filename.\n                Default from $SQLTAGS_DBURL (default '~/var/sqltags.sqlite').\n      Subcommands:\n        dbshell\n          Start an interactive database shell.\n        edit criteria...\n          Edit the entities specified by criteria.\n        export [-F format] [{tag[=value]|-tag}...]\n          Export entities matching all the constraints.\n          -F format Specify the export format, either CSV or FSTAGS.\n        find [-o output_format] {tag[=value]|-tag}...\n          List entities matching all the constraints.\n          -o output_format\n                      Use output_format as a Python format string to lay out\n                      the listing.\n                      Default: {localtime} {headline}\n        help [-l] [subcommand-names...]\n          Print the full help for the named subcommands,\n          or for all subcommands if no names are specified.\n          -l  Long help even if no subcommand-names provided.\n        import [{-u|--update}] {-|srcpath}...\n          Import CSV data in the format emitted by \"export\".\n          Each argument is a file path or \"-\", indicating standard input.\n          -u, --update  If a named entity already exists then update its tags.\n                        Otherwise this will be seen as a conflict\n                        and the import aborted.\n        init\n          Initialise the database.\n          This includes defining the schema and making the root metanode.\n        log [-c category,...] [-d when] [-D strptime] {-|headline} [tags...]\n          Record entries into the database.\n          If headline is '-', read headlines from standard input.\n          -c categories\n            Specify the categories for this log entry.\n            The default is to recognise a leading CAT,CAT,...: prefix.\n          -d when\n            Use when, an ISO8601 date, as the log entry timestamp.\n          -D strptime\n            Read the time from the start of the headline\n            according to the provided strptime specification.\n        orm define_schema\n          Runs the ORM's `define_schema()` method, which creates missing tables\n          and entity 0 if missing.\n        shell\n          Run an interactive Python prompt with some predefined local names.\n        tag {-|entity-name} {tag[=value]|-tag}...\n          Tag an entity with multiple tags.\n          With the form \"-tag\", remove that tag from the direct tags.\n          A entity-name named \"-\" indicates that entity-names should\n          be read from the standard input.\n\n## Function `glob2like(glob: str) -> str`\n\nConvert a filename glob to an SQL LIKE pattern.\n\n## Function `main(argv=None)`\n\nCommand line mode.\n\n## Class `PolyValue(PolyValue, builtins.tuple)`\n\nA `namedtuple` for the polyvalues used in an `SQLTagsORM`.\n\nWe express various types in SQL as one of 3 columns:\n* `float_value`: for `float`s and `int`s which round trip with `float`\n* `string_value`: for `str`\n* `structured_value`: a JSON transcription of any other type\n\nThis allows SQL indexing of basic types.\n\nNote that because `str` gets stored in `string_value`\nthis leaves us free to use \"bare string\" JSON to serialise\nvarious nonJSONable types.\n\nThe `SQLTagSets` class has a `to_polyvalue` factory\nwhich produces a `PolyValue` suitable for the SQL rows.\nNonJSONable types such as `datetime`\nare converted to a `str` but stored in the `structured_value` column.\nThis should be overridden by subclasses as necessary.\n\nOn retrieval from the database\nthe tag rows are converted to Python values\nby the `SQLTagSets.from_polyvalue` method,\nreversing the process above.\n\n## Class `PolyValueColumnMixin`\n\nA mixin for classes with `(float_value,string_value,structured_value)` columns.\nThis is used by the `Tags` and `TagMultiValues` relations inside `SQLTagsORM`.\n\n## Function `prefix2like(prefix: str, esc='\\\\') -> str`\n\nConvert a prefix string to an SQL LIKE pattern.\n\n## Class `SQLParameters(SQLParameters, builtins.tuple)`\n\nThe parameters required for constructing queries\nor extending queries with JOINs.\n\nAttributes:\n* `criterion`: the source criterion, usually an `SQTCriterion` subinstance\n* `alias`: an alias of the source table for use in queries\n* `entity_id_column`: the `entities` id column,\n  `alias.id` if the alias is of `entities`,\n  `alias.entity_id` if the alias is of `tags`\n* `constraint`: a filter query based on `alias`\n\n## Class `SQLTagBasedTest(cs.tagset.TagBasedTest, cs.tagset.TagBasedTest, builtins.tuple, SQTCriterion, cs.tagset.TagSetCriterion, cs.deco.Promotable)`\n\nA `cs.tagset.TagBasedTest` extended with a `.sql_parameters` method.\n\n## Class `SQLTagProxies`\n\nA proxy for the tags supporting Python comparison => `SQLParameters`.\n\nExample:\n\n    sqltags.tags.dotted.name.here == 'foo'\n\n## Class `SQLTagProxy`\n\nAn object based on a `Tag` name\nwhich produces an `SQLParameters` when compared with some value.\n\nExample:\n\n    >>> sqltags = SQLTags('sqlite://')\n    >>> sqltags.init()\n    >>> # make a SQLParameters for testing the tag 'name.thing'==5\n    >>> sqlp = sqltags.tags.name.thing == 5\n    >>> str(sqlp.constraint)\n    'tags_1.name = :name_1 AND tags_1.float_value = :float_value_1'\n    >>> sqlp = sqltags.tags.name.thing == 'foo'\n    >>> str(sqlp.constraint)\n    'tags_1.name = :name_1 AND tags_1.string_value = :string_value_1'\n\n## Class `SQLTags(cs.tagset.BaseTagSets, cs.resources.MultiOpenMixin, cs.context.ContextManagerMixin, collections.abc.MutableMapping, collections.abc.Mapping, collections.abc.Collection, collections.abc.Sized, collections.abc.Iterable, collections.abc.Container, cs.deco.Promotable)`\n\nA class using an SQL database to store its `TagSet`s.\n\n## Class `SQLTagsCommand(BaseSQLTagsCommand, cs.cmdutils.BaseCommand, cs.tagset.TagsCommandMixin)`\n\n`sqltags` main command line utility.\n\nCommand line usage:\n\n    Usage: sqltags [-f db_url] subcommand [...]\n      -f db_url SQLAlchemy database URL or filename.\n                Default from $SQLTAGS_DBURL (default '~/var/sqltags.sqlite').\n      Subcommands:\n        dbshell\n          Start an interactive database shell.\n        edit criteria...\n          Edit the entities specified by criteria.\n        export [-F format] [{tag[=value]|-tag}...]\n          Export entities matching all the constraints.\n          -F format Specify the export format, either CSV or FSTAGS.\n        find [-o output_format] {tag[=value]|-tag}...\n          List entities matching all the constraints.\n          -o output_format\n                      Use output_format as a Python format string to lay out\n                      the listing.\n                      Default: {localtime} {headline}\n        help [-l] [subcommand-names...]\n          Print the full help for the named subcommands,\n          or for all subcommands if no names are specified.\n          -l  Long help even if no subcommand-names provided.\n        import [{-u|--update}] {-|srcpath}...\n          Import CSV data in the format emitted by \"export\".\n          Each argument is a file path or \"-\", indicating standard input.\n          -u, --update  If a named entity already exists then update its tags.\n                        Otherwise this will be seen as a conflict\n                        and the import aborted.\n        init\n          Initialise the database.\n          This includes defining the schema and making the root metanode.\n        list [entity-names...]\n          List entities and their tags.\n        log [-c category,...] [-d when] [-D strptime] {-|headline} [tags...]\n          Record entries into the database.\n          If headline is '-', read headlines from standard input.\n          -c categories\n            Specify the categories for this log entry.\n            The default is to recognise a leading CAT,CAT,...: prefix.\n          -d when\n            Use when, an ISO8601 date, as the log entry timestamp.\n          -D strptime\n            Read the time from the start of the headline\n            according to the provided strptime specification.\n        ls [entity-names...]\n          List entities and their tags.\n        orm define_schema\n          Runs the ORM's `define_schema()` method, which creates missing tables\n          and entity 0 if missing.\n        shell\n          Run an interactive Python prompt with some predefined local names.\n        tag {-|entity-name} {tag[=value]|-tag}...\n          Tag an entity with multiple tags.\n          With the form \"-tag\", remove that tag from the direct tags.\n          A entity-name named \"-\" indicates that entity-names should\n          be read from the standard input.\n\n## Class `SQLTagSet(cs.obj.SingletonMixin, cs.tagset.TagSet, builtins.dict, cs.dateutils.UNIXTimeMixin, cs.lex.FormatableMixin, cs.lex.FormatableFormatter, string.Formatter, cs.mappings.AttrableMappingMixin)`\n\nA singleton `TagSet` attached to an `SQLTags` instance.\n\nAs with the `TagSet` superclass,\ntag values can be any Python type.\nHowever, because we are storing these values in an SQL database\nit is necessary to provide a conversion facility\nto prepare those values for storage.\n\nThe database schema is described in the `SQLTagsORM` class;\nin short we directly support `None`, `float` and `str`,\n`int`s which round trip with `float`,\nand `list`, `tuple` and `dict` whose contents transcribe to JSON.\n\n`int`s which are too large to round trip with `float`\nare treated as an extended `\"bigint\"` type\nusing the scheme described below.\n\nBecause the ORM has distinct `float` and `str` columns to support indexing,\nthere will be no plain strings in the remaining JSON blob column.\nTherefore we support other types by providing functions\nto convert each type to a `str` and back,\nand an associated \"type label\" which will be prefixed to the string;\nthe resulting string is stored in the JSON blob.\n\nThe default mechanism is based on the following class attributes and methods:\n* `TYPE_JS_MAPPING`: a mapping of a type label string\n  to a 3 tuple of `(type,to_str,from_str)`\n  being the extended type,\n  a function to convert an instance to `str`\n  and a function to convert a `str` to an instance of this type\n* `to_js_str`: a method accepting `(tag_name,tag_value)`\n  and returning `tag_value` as a `str`;\n  the default implementation looks up the type of `tag_value`\n  in `TYPE_JS_MAPPING` to locate the corresponding `to_str` function\n* `from_js_str`: a method accepting `(tag_name,js)`\n  which uses the leading type label prefix from the `js`\n  to look up the corresponding `from_str` function\n  from `TYPE_JS_MAPPING` and use it on the tail of `js`\n\nThe default `TYPE_JS_MAPPING` has mappings for:\n* `\"bigint\"`: conversions for `int`\n* `\"date\"`: conversions for `datetime.date`\n* `\"datetime\"`: conversions for `datetime.datetime`\n\nSubclasses wanting to augument the `TYPE_JS_MAPPING`\nshould prepare their own with code such as:\n\n    class SubSQLTagSet(SQLTagSet,....):\n        ....\n        TYPE_JS_MAPPING=dict(SQLTagSet.TYPE_JS_MAPPING)\n        TYPE_JS_MAPPING.update(\n          typelabel=(type, to_str, from_str),\n          ....\n        )\n\n## Class `SQLTagsORM(cs.sqlalchemy_utils.ORM, cs.resources.MultiOpenMixin, cs.context.ContextManagerMixin, cs.dateutils.UNIXTimeMixin)`\n\nThe ORM for an `SQLTags`.\n\nThe current implementation uses 3 tables:\n* `entities`: this has a NULLable `name`\n  and `unixtime` UNIX timestamp;\n  this is unique per `name` if the name is not NULL\n* `tags`: this has an `entity_id`, `name` and a value stored\n  in one of three columns: `float_value`, `string_value` and\n  `structured_value` which is a JSON blob;\n  this is unique per `(entity_id,name)`\n* `tag_subvalues`: this is a broken out version of `tags`\n  when `structured_value` is a sequence or mapping,\n  breaking out the values one per row;\n  this exists to support \"tag contains value\" lookups\n\nTag values are stored as follows:\n* `None`: all 3 columns are set to `NULL`\n* `float`: stored in `float_value`\n* `int`: if the `int` round trips to `float`\n  then it is stored in `float_value`,\n  otherwise it is stored in `structured_value`\n  with the type label `\"bigint\"`\n* `str`: stored in `string_value`\n* `list`, `tuple`, `dict`: stored in `structured_value`;\n  if these containers contain unJSONable content there will be trouble\n* other types, such as `datetime`:\n  these are converted to strings with identifying type label prefixes\n  and stored in `structured_value`\n\nThe `float_value` and `string_value` columns\nallow us to provide indices for these kinds of tag values.\n\nThe type label scheme takes advantage of the fact that actual `str`s\nare stored in the `string_value` column.\nBecause of this, there will be no actual strings in `structured_value`.\nTherefore, we can convert nonJSONable types to `str` and store them here.\n\nThe scheme used is to provide conversion functions to convert types\nto `str` and back, and an associated \"type label\" prefix.\nFor example, we store a `datetime` as the ISO format of the `datetime`\nwith `\"datetime:\"` prefixed to it.\n\nThe actual conversions are kept with the `SQLTagSet` class\n(or any subclass).\nThis ORM receives the 3-tuples of SQL ready values\nfrom that class as the `PolyValue` `namedtuple`\nand does not perform any conversion itself.\nThe conversion process is described in `SQLTagSet`.\n\n## Class `SQTCriterion(cs.tagset.TagSetCriterion, cs.deco.Promotable)`\n\nSubclass of `TagSetCriterion` requiring an `.sql_parameters` method\nwhich returns an `SQLParameters` providing the information required\nto construct an sqlalchemy query.\nIt also resets `.CRITERION_PARSE_CLASSES`, which will pick up\nthe SQL capable criterion classes below.\n\n## Class `SQTEntityIdTest(SQTCriterion, cs.tagset.TagSetCriterion, cs.deco.Promotable)`\n\nA test on `entity.id`.\n\n## Function `verbose(msg, *a)`\n\nEmit message if in verbose mode.\n\n# Release Log\n\n\n\n*Release 20230217*:\nSQLTagsORM.search: previous changes seem to have dropped SQTCriterion support.\n\n*Release 20230212.1*:\nMark SQLTags as promotable.\n\n*Release 20230212*:\n* @promote support for SQLTags, promoting a filesystem path to a .sqlite db.\n* Simpler SQLTagsORM.search comparison implementation.\n* SQLTagSet: inherit format attributes from superclasses (TagSet).\n* New BaseSQLTagsCommand.cmd_shell method.\n* New BaseSQLTagsCommand.cmd_orm method with \"define_schema\" subcommand to update the db schema.\n* SQLTagsORM.__init__: drop case_sensitive, no longer supported?\n* SQLTagsORM.__init__: always call define_schema, it seems there are scenarios where this does some necessary sqlalchemy prep.\n\n*Release 20221228*:\nSQLTagsCommand: update implementation of BaseCommand.run_context to use super().run_context().\n\n*Release 20220806*:\n* Bugfix for SQLTagsORM.search(mode='entity').\n* SQLTags.find: new _without_tags=False parameter to allow fast searches omitting the entity tags.\n\n*Release 20220606*:\n* New SQLTagsORM.Entities.add_new_tags method, use it in SQLTags.default_factory for bulk insert.\n* SQTCriterion: new .from_equality(tag_name,tag_value) factory to make an equality criterion.\n* SQLTags.find: accept criteria as positional parameters instead of a single iterable, accept new keyword parameters as equality criteria.\n* SQLTags.__getitem__: accept a slice to index the .unixtime tag.\n* SQLTagsORM: also turn on echo mode if \"ECHO\" in $SQLTAGS_MODES.\n\n*Release 20220311*:\nAssorted updates.\n\n*Release 20211212*:\n* Rename edit_many to edit_tagsets for clarity.\n* Small bugfixes.\n\n*Release 20210913*:\n* SQLTagsCommand: rename cmd_ns to cmd_list,cmd_ls.\n* SQLTagsCommand.cmd_export: accept \"-F export_format\" for csv or fstags export, accept no criteria to mean all tagsets.\n* Encoding schema for nonJSONable types.\n* Rename the TagSets abstract base class to BaseTagSets.\n* BaseSQLTagsCommand.cmd_edit: implement rename.\n* Many other internal small changes.\n\n*Release 20210420*:\n* New PolyValueMixin pulled out of Tags for common support of the (float_value,string_value,structured_value).\n* SQLTagsORM: new TagSubValues relation containing broken out values for values which are sequences, to support efficient lookup if sequence values such as log entry categories.\n* New BaseSQLTagsCommand.parse_categories static method to parse FOO,BAH into ['foo','bah'].\n* sqltags find: change default format to \"{datetime} {headline}\".\n* Assorted small changes.\n\n*Release 20210404*:\n* SQLTags.__getitem__: when autocreating an entity, do it in a new session so that the entity is commited to the database before any further use.\n* SQLTagsCommand: new cmd_dbshell to drop you into the database.\n\n*Release 20210321*:\nDrop logic now merged with cs.sqlalchemy_utils, use the new default session stuff.\n\n*Release 20210306.1*:\nDocstring updates.\n\n*Release 20210306*:\nInitial release.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://bitbucket.org/cameron_simpson/css/commits/all",
    "keywords": "python3",
    "license": "GNU General Public License v3 or later (GPLv3+)",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cs.sqltags",
    "package_url": "https://pypi.org/project/cs.sqltags/",
    "platform": null,
    "project_url": "https://pypi.org/project/cs.sqltags/",
    "project_urls": {
      "Homepage": "https://bitbucket.org/cameron_simpson/css/commits/all",
      "URL": "https://bitbucket.org/cameron_simpson/css/commits/all"
    },
    "release_url": "https://pypi.org/project/cs.sqltags/20230217/",
    "requires_dist": [
      "cs.cmdutils (>=20210404)",
      "cs.context (>=20230212)",
      "cs.dateutils (>=20230210)",
      "cs.deco (>=20230212)",
      "cs.fileutils (>=20221118)",
      "cs.lex (>=20230217)",
      "cs.logutils (>=20230212)",
      "cs.obj (>=20220918)",
      "cs.pfx (>=20221118)",
      "cs.sqlalchemy-utils (>=20210420)",
      "cs.tagset (>=20211212)",
      "cs.threads (>=20201025)",
      "cs.upd (>=20230217)",
      "icontract",
      "sqlalchemy",
      "typeguard"
    ],
    "requires_python": "",
    "summary": "Simple SQL based tagging and the associated `sqltags` command line script, supporting both tagged named objects and tagged timestamped log entries.",
    "version": "20230217",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16895445,
  "releases": {
    "20210306": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "182aaa63e206fe095515b8f8b0ce969a9b09c3775814613ccc35c14ed78e6162",
          "md5": "70571fad7e4bed0c4a86da5b9d2dada9",
          "sha256": "e96a3c1794cfdcc8b33d82880da14dd98d43bed1caf7710ce801bc6f1d3928df"
        },
        "downloads": -1,
        "filename": "cs.sqltags-20210306.tar.gz",
        "has_sig": false,
        "md5_digest": "70571fad7e4bed0c4a86da5b9d2dada9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 31244,
        "upload_time": "2021-03-06T00:31:52",
        "upload_time_iso_8601": "2021-03-06T00:31:52.408230Z",
        "url": "https://files.pythonhosted.org/packages/18/2a/aa63e206fe095515b8f8b0ce969a9b09c3775814613ccc35c14ed78e6162/cs.sqltags-20210306.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "20210306.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fa60598fe55139e5da53f7769188bbe45bc75eb146d463fae7b6be943fe5a2f6",
          "md5": "e9b7b73d53970d6e5a403e3ec6dbc8fd",
          "sha256": "287396789a97456c094ca8ffe203d1a4b8b3c2684f502a5f218743096145cf24"
        },
        "downloads": -1,
        "filename": "cs.sqltags-20210306.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e9b7b73d53970d6e5a403e3ec6dbc8fd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 31186,
        "upload_time": "2021-03-06T00:37:51",
        "upload_time_iso_8601": "2021-03-06T00:37:51.932047Z",
        "url": "https://files.pythonhosted.org/packages/fa/60/598fe55139e5da53f7769188bbe45bc75eb146d463fae7b6be943fe5a2f6/cs.sqltags-20210306.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "20210321": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "07f107d3001921302432f56597d7040e6a1da194eda99080cad6b056f2c77fd2",
          "md5": "ea6f4e7512a169a33333cf3c28ac0247",
          "sha256": "0abf6dfb00ae33e4061c43cb52a83fcff4fa0e97abf589da686e7428eb4c675b"
        },
        "downloads": -1,
        "filename": "cs.sqltags-20210321.tar.gz",
        "has_sig": false,
        "md5_digest": "ea6f4e7512a169a33333cf3c28ac0247",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 31110,
        "upload_time": "2021-03-21T05:09:41",
        "upload_time_iso_8601": "2021-03-21T05:09:41.434860Z",
        "url": "https://files.pythonhosted.org/packages/07/f1/07d3001921302432f56597d7040e6a1da194eda99080cad6b056f2c77fd2/cs.sqltags-20210321.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "20210404": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dfa1d1ce47291d7c69fb116f2ba8dfd921121dd400b6527548ff3343c84ce82d",
          "md5": "c8495c14b4fbec452697b76f1bc41aef",
          "sha256": "b56942350c9d903aa3f709f37b1a0c10aea9ae26503817b343cf66de646c63d0"
        },
        "downloads": -1,
        "filename": "cs.sqltags-20210404.tar.gz",
        "has_sig": false,
        "md5_digest": "c8495c14b4fbec452697b76f1bc41aef",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 31868,
        "upload_time": "2021-04-03T23:31:58",
        "upload_time_iso_8601": "2021-04-03T23:31:58.243186Z",
        "url": "https://files.pythonhosted.org/packages/df/a1/d1ce47291d7c69fb116f2ba8dfd921121dd400b6527548ff3343c84ce82d/cs.sqltags-20210404.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "20210420": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b6562520d7bed8c64796c6aaad7afb2ff2f7c303ec3d5a2af00c58a92e81ba5a",
          "md5": "7a804d911815b70fbe15395fb4ba671c",
          "sha256": "51bda7a399f1bb9c17d75ddb84061be615c501b77a47446257cddfd1b2b5dc51"
        },
        "downloads": -1,
        "filename": "cs.sqltags-20210420.tar.gz",
        "has_sig": false,
        "md5_digest": "7a804d911815b70fbe15395fb4ba671c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 34039,
        "upload_time": "2021-04-20T02:12:33",
        "upload_time_iso_8601": "2021-04-20T02:12:33.851344Z",
        "url": "https://files.pythonhosted.org/packages/b6/56/2520d7bed8c64796c6aaad7afb2ff2f7c303ec3d5a2af00c58a92e81ba5a/cs.sqltags-20210420.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "20210913": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8bd5ad2c84c05425c7678208bce0367ee6106b2afaf23cf91844023b175c20af",
          "md5": "72dfc6b72e8bf7fd50bbc7d978a2b067",
          "sha256": "6b1184ea9733e8ec0e1ad4209f52f9e3d7e987092c892ae47f65feb823a885c5"
        },
        "downloads": -1,
        "filename": "cs.sqltags-20210913.tar.gz",
        "has_sig": false,
        "md5_digest": "72dfc6b72e8bf7fd50bbc7d978a2b067",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 50727,
        "upload_time": "2021-09-13T10:31:11",
        "upload_time_iso_8601": "2021-09-13T10:31:11.075614Z",
        "url": "https://files.pythonhosted.org/packages/8b/d5/ad2c84c05425c7678208bce0367ee6106b2afaf23cf91844023b175c20af/cs.sqltags-20210913.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "20211212": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "308ab7c8a539e62569ede98dc4f9ae8e80383fd2b61ed35c0a12e62da9e577de",
          "md5": "589ca2606f64808d80d2ac16d8ee2288",
          "sha256": "27515a5d12a8b0afae23cd2f0defc2a3f3049cf728ba71e3e286c107e8cda2bb"
        },
        "downloads": -1,
        "filename": "cs.sqltags-20211212.tar.gz",
        "has_sig": false,
        "md5_digest": "589ca2606f64808d80d2ac16d8ee2288",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 44285,
        "upload_time": "2021-12-11T23:29:35",
        "upload_time_iso_8601": "2021-12-11T23:29:35.728784Z",
        "url": "https://files.pythonhosted.org/packages/30/8a/b7c8a539e62569ede98dc4f9ae8e80383fd2b61ed35c0a12e62da9e577de/cs.sqltags-20211212.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "20220311": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f2f69d8df92e3ff3d1b64d1f3bf4e964cee944af48d1c717dd00448651058d7",
          "md5": "0b1b613c6e011ca30112ac270dbf91ae",
          "sha256": "b3e8a04cdc2a48b08f2095feefcd11e940884a7c5e943e2e9152770947f46139"
        },
        "downloads": -1,
        "filename": "cs.sqltags-20220311.tar.gz",
        "has_sig": false,
        "md5_digest": "0b1b613c6e011ca30112ac270dbf91ae",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 44384,
        "upload_time": "2022-03-11T00:58:00",
        "upload_time_iso_8601": "2022-03-11T00:58:00.582878Z",
        "url": "https://files.pythonhosted.org/packages/1f/2f/69d8df92e3ff3d1b64d1f3bf4e964cee944af48d1c717dd00448651058d7/cs.sqltags-20220311.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "20220606": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f45c5fd6e06de8cd4626a6b3415924ffcab55e3db5aeb40a9eb18808ad1da506",
          "md5": "71e7e9992155d25340d2b952816afc26",
          "sha256": "a258fa18be480d4a50c8e9cf8369b5a43ae111ffd113e1cf0e9fd184b1b65fde"
        },
        "downloads": -1,
        "filename": "cs.sqltags-20220606-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "71e7e9992155d25340d2b952816afc26",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 27068,
        "upload_time": "2022-06-06T08:56:18",
        "upload_time_iso_8601": "2022-06-06T08:56:18.913941Z",
        "url": "https://files.pythonhosted.org/packages/f4/5c/5fd6e06de8cd4626a6b3415924ffcab55e3db5aeb40a9eb18808ad1da506/cs.sqltags-20220606-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3dc7f6caf5e1a87852cc0bb9637ff4628c4098af4e3a4f5ad16a86f82e5d1f87",
          "md5": "b1a564ec1f10a134ac0da6044904b348",
          "sha256": "84c021b922592d071d929b2d957e1fd1f451bf921680459b0b182c5c43908bcb"
        },
        "downloads": -1,
        "filename": "cs.sqltags-20220606.tar.gz",
        "has_sig": false,
        "md5_digest": "b1a564ec1f10a134ac0da6044904b348",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 35407,
        "upload_time": "2022-06-06T08:56:22",
        "upload_time_iso_8601": "2022-06-06T08:56:22.104998Z",
        "url": "https://files.pythonhosted.org/packages/3d/c7/f6caf5e1a87852cc0bb9637ff4628c4098af4e3a4f5ad16a86f82e5d1f87/cs.sqltags-20220606.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "20220806": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "13d11d05e8b7e2f07c27984b36a442b258067683eeef02ba68535b4f4ef9d7ea",
          "md5": "9df5da1d9c83e85b91a9399b1a7fa48f",
          "sha256": "aa4af30710eafaa3a8135dc5afd06eb3b691a02752e64b663e66d79978752dfe"
        },
        "downloads": -1,
        "filename": "cs.sqltags-20220806-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9df5da1d9c83e85b91a9399b1a7fa48f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 27264,
        "upload_time": "2022-08-05T22:24:04",
        "upload_time_iso_8601": "2022-08-05T22:24:04.163121Z",
        "url": "https://files.pythonhosted.org/packages/13/d1/1d05e8b7e2f07c27984b36a442b258067683eeef02ba68535b4f4ef9d7ea/cs.sqltags-20220806-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6cfc16f4c33a205beb4e3b26087213aa753edf8b01394799047b56fc5bd253ae",
          "md5": "73cdc78443f1c8e162df66926d20e045",
          "sha256": "880aeefc798267bfffd0ae573ed1a4d2d1bd81d0d57ca9587caba44cb0d3ce12"
        },
        "downloads": -1,
        "filename": "cs.sqltags-20220806.tar.gz",
        "has_sig": false,
        "md5_digest": "73cdc78443f1c8e162df66926d20e045",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 35954,
        "upload_time": "2022-08-05T22:24:06",
        "upload_time_iso_8601": "2022-08-05T22:24:06.208884Z",
        "url": "https://files.pythonhosted.org/packages/6c/fc/16f4c33a205beb4e3b26087213aa753edf8b01394799047b56fc5bd253ae/cs.sqltags-20220806.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "20221228": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "684f87684e1ece4af0196a89df6ea3e01c9c17ef2ec3fce013ad0f069b06e4ba",
          "md5": "f93b5ca9f3759d06abf85541e48a27e1",
          "sha256": "c397ab323679f73ef09afa7a9245ae496a80883ade3cc0ca1b6f8791cb14d287"
        },
        "downloads": -1,
        "filename": "cs.sqltags-20221228-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f93b5ca9f3759d06abf85541e48a27e1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 27304,
        "upload_time": "2022-12-28T00:49:22",
        "upload_time_iso_8601": "2022-12-28T00:49:22.203175Z",
        "url": "https://files.pythonhosted.org/packages/68/4f/87684e1ece4af0196a89df6ea3e01c9c17ef2ec3fce013ad0f069b06e4ba/cs.sqltags-20221228-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a01ebb5489bed2ab3ae3f03a3d87bcaff032cf0ea4beef5e6e12eb6e21266f03",
          "md5": "e07ab9e7fb94cb63de5e591d636d4458",
          "sha256": "5ee5b0c05f0bad39666a4e47bf82df112f527e070c01fbc3a3a0772171d4d4ba"
        },
        "downloads": -1,
        "filename": "cs.sqltags-20221228.tar.gz",
        "has_sig": false,
        "md5_digest": "e07ab9e7fb94cb63de5e591d636d4458",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 36106,
        "upload_time": "2022-12-28T00:49:24",
        "upload_time_iso_8601": "2022-12-28T00:49:24.042493Z",
        "url": "https://files.pythonhosted.org/packages/a0/1e/bb5489bed2ab3ae3f03a3d87bcaff032cf0ea4beef5e6e12eb6e21266f03/cs.sqltags-20221228.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "20230212": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d8060142d8ce0d4d93a93331a83d0989a7c3b3bc834e5357daa41c2dacebca55",
          "md5": "47bc9463633a1609864a013f0ccfeb42",
          "sha256": "2055cafd8901ed6032280a6f3a06510cf002182b8eea45037e8b7a0492918e53"
        },
        "downloads": -1,
        "filename": "cs.sqltags-20230212-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "47bc9463633a1609864a013f0ccfeb42",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 28233,
        "upload_time": "2023-02-11T21:24:14",
        "upload_time_iso_8601": "2023-02-11T21:24:14.290385Z",
        "url": "https://files.pythonhosted.org/packages/d8/06/0142d8ce0d4d93a93331a83d0989a7c3b3bc834e5357daa41c2dacebca55/cs.sqltags-20230212-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "51a8c3b59b8ea99d7f0595a7ff84113318ca25a07bf71df9a31629a2fbd367e4",
          "md5": "80f57129541599acbc98c3905f1ee057",
          "sha256": "f4c1d6478cccc1abec5d5e25d30d245f203c0fba969e8d860066b8684585663b"
        },
        "downloads": -1,
        "filename": "cs.sqltags-20230212.tar.gz",
        "has_sig": false,
        "md5_digest": "80f57129541599acbc98c3905f1ee057",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 38115,
        "upload_time": "2023-02-11T21:24:16",
        "upload_time_iso_8601": "2023-02-11T21:24:16.039462Z",
        "url": "https://files.pythonhosted.org/packages/51/a8/c3b59b8ea99d7f0595a7ff84113318ca25a07bf71df9a31629a2fbd367e4/cs.sqltags-20230212.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "20230212.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f350ea3936aca309337db45af95067e9c420bba2b833be1d23c7f0c69ab99b8e",
          "md5": "b96a9dddecb974983c5d4b8f3cb7094f",
          "sha256": "101593d6c9470a79ab9245452caf24b704aad8ce37d097aaef8b6c64a26cbd78"
        },
        "downloads": -1,
        "filename": "cs.sqltags-20230212.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b96a9dddecb974983c5d4b8f3cb7094f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 28279,
        "upload_time": "2023-02-12T04:09:29",
        "upload_time_iso_8601": "2023-02-12T04:09:29.873067Z",
        "url": "https://files.pythonhosted.org/packages/f3/50/ea3936aca309337db45af95067e9c420bba2b833be1d23c7f0c69ab99b8e/cs.sqltags-20230212.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6061313390b917c545a05e41d316d5bd2609a0a343354e42f7050d17e77d52da",
          "md5": "ed7655e4bc12355d1bea83d078a99324",
          "sha256": "72e23fbbcdc1e818006c70e0fe2cca46b6b28d640e8aa6c5b1d820e843b0db8b"
        },
        "downloads": -1,
        "filename": "cs.sqltags-20230212.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ed7655e4bc12355d1bea83d078a99324",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 38435,
        "upload_time": "2023-02-12T04:09:31",
        "upload_time_iso_8601": "2023-02-12T04:09:31.655292Z",
        "url": "https://files.pythonhosted.org/packages/60/61/313390b917c545a05e41d316d5bd2609a0a343354e42f7050d17e77d52da/cs.sqltags-20230212.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "20230217": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "69585259a3d98826ad26286548457d79679a8034fc4e18aae06755de6a749923",
          "md5": "61971cbd38366dc8a129c23de6c06f19",
          "sha256": "b11fa23e99ebf90db574855ec7a245fdeae52b1bf9357acf92c027ebcec030f9"
        },
        "downloads": -1,
        "filename": "cs.sqltags-20230217-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "61971cbd38366dc8a129c23de6c06f19",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 28313,
        "upload_time": "2023-02-17T00:43:15",
        "upload_time_iso_8601": "2023-02-17T00:43:15.204739Z",
        "url": "https://files.pythonhosted.org/packages/69/58/5259a3d98826ad26286548457d79679a8034fc4e18aae06755de6a749923/cs.sqltags-20230217-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a1ddd540a7ac9eab1c437dd3554446e000bae228e1d9d16d789f6998bd3fad29",
          "md5": "76179d84d6a48c6b6f79d2ef99aca0b7",
          "sha256": "8b864167cd1ba41989f3072ce671cdda379803eff15ea95ffe453aa8002cae47"
        },
        "downloads": -1,
        "filename": "cs.sqltags-20230217.tar.gz",
        "has_sig": false,
        "md5_digest": "76179d84d6a48c6b6f79d2ef99aca0b7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 38432,
        "upload_time": "2023-02-17T00:43:18",
        "upload_time_iso_8601": "2023-02-17T00:43:18.003474Z",
        "url": "https://files.pythonhosted.org/packages/a1/dd/d540a7ac9eab1c437dd3554446e000bae228e1d9d16d789f6998bd3fad29/cs.sqltags-20230217.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "69585259a3d98826ad26286548457d79679a8034fc4e18aae06755de6a749923",
        "md5": "61971cbd38366dc8a129c23de6c06f19",
        "sha256": "b11fa23e99ebf90db574855ec7a245fdeae52b1bf9357acf92c027ebcec030f9"
      },
      "downloads": -1,
      "filename": "cs.sqltags-20230217-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "61971cbd38366dc8a129c23de6c06f19",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 28313,
      "upload_time": "2023-02-17T00:43:15",
      "upload_time_iso_8601": "2023-02-17T00:43:15.204739Z",
      "url": "https://files.pythonhosted.org/packages/69/58/5259a3d98826ad26286548457d79679a8034fc4e18aae06755de6a749923/cs.sqltags-20230217-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a1ddd540a7ac9eab1c437dd3554446e000bae228e1d9d16d789f6998bd3fad29",
        "md5": "76179d84d6a48c6b6f79d2ef99aca0b7",
        "sha256": "8b864167cd1ba41989f3072ce671cdda379803eff15ea95ffe453aa8002cae47"
      },
      "downloads": -1,
      "filename": "cs.sqltags-20230217.tar.gz",
      "has_sig": false,
      "md5_digest": "76179d84d6a48c6b6f79d2ef99aca0b7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 38432,
      "upload_time": "2023-02-17T00:43:18",
      "upload_time_iso_8601": "2023-02-17T00:43:18.003474Z",
      "url": "https://files.pythonhosted.org/packages/a1/dd/d540a7ac9eab1c437dd3554446e000bae228e1d9d16d789f6998bd3fad29/cs.sqltags-20230217.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}