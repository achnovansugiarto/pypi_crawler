{
  "info": {
    "author": "Benjamin Schmidt",
    "author_email": "bmschmidt@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Education",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Text Processing :: Indexing",
      "Topic :: Text Processing :: Linguistic"
    ],
    "description": "# pySRP\n\nPython module implementing Stable Random Projections.\n\nThese create interchangeable, data-agnostic vectorized representations of text suitable for a variety of contexts.\n\nYou may want to use them in concert with the pre-distributed Hathi SRP features.\n\n## Installation\n\n\nPython 3\n```bash\npip3 install git+git://github.com/bmschmidt/pySRP.git\n```\n\nPython 2\n```bash\npip install git+git://github.com/bmschmidt/pySRP.git\n```\n\n\n\n## Usage\n\n### Examples\n\nSee the [docs folder](https://github.com/bmschmidt/pySRP/tree/master/docs)\nfor some IPython notebooks demonstrating:\n\n* [Taking a subset of the full Hathi collection (100,000 works of fiction) based on\nidentifiers, and exploring the major clusters within fiction.](https://github.com/bmschmidt/pySRP/blob/master/docs/Build%20Fiction%20Set.ipynb)\n* [Creating a new SRP representation of text files and plotting dimensionality reductions of them by language and time](https://github.com/bmschmidt/pySRP/blob/master/docs/Hash%20a%20corpus%20of%20text%20files%20into%20SRP%20space.ipynb)\n* [Searching for copies of one set of books in the full HathiTrust collection, and using Hathi metadata to identify duplicates and find errors in local item descriptions.](https://github.com/bmschmidt/pySRP/blob/master/docs/Find%20Text%20Lab%20Books%20in%20Hathi.ipynb)\n* [Training a classifier based on library metadata using TensorFlow, and then applyinig that classification to other sorts of text.](https://github.com/bmschmidt/pySRP/blob/master/docs/Classification%20Using%20Tensorflow%20Estimators.ipynb)\n\n### Basic Usage\n\nUse the SRP class to build an object to perform transformations.\n\nThis is a class method, rather than a function, which builds a cache of previously seen words.\n\n```python\nimport SRP\n# initialize with desired number of dimensions\nhasher = SRP.SRP(640)\n```\n\nThe most important method is 'stable_transform'.\n\nThis can tokenize and then compute the SRP.\n\n```python\nhasher.stable_transform(words = \"foo bar bar\"))\n```\n\nIf counts are already computed, word and count vectors can be passed separately.\n\n```python\nhasher.stable_transform(words = [\"foo\",\"bar\"],counts = [1,2])\n```\n\n\n## Read/write tools\n\nSRP files are stored in a binary file format to save space. \nThis format is the same used by the binary word2vec format.\n\n```python\nfile = SRP.Vector_file(\"hathivectors.bin\")\n\nfor (key,vector) in file:\n  pass\n  # 'key' is a unique identifier for a document in a corpus\n  # 'vector' is a `numpy.array` of type `<f4`.\n```\n\nThere are two other methods. One lets you read an entire matrix in at once.\nThis may require lots of memory. It returns a dictionary with two keys: 'matrix' (a numpy array)\nand 'names' (the row names).\n\n```python\nall = SRP.Vector_file(\"hathivectors.bin\").to_matrix()\nall['matrix'][:5]\nall['names'][:5]\n```\n\nThe other lets you treat the file as a dictionary of keys. The first lookup\nmay take a very long time; subsequent lookups will be fast *without* requiring\nyou to load the vectors into memory. To get a 1-dimensional representation of a book:\n\n```python\nall = SRP.Vector_file(\"hathivectors.bin\")\nall['gri.ark:/13960/t3032jj3n']\n```\n\nYou can also, thanks to Peter Organisciak, access multiple vectors at once this way by passing a list of identifiers. This returns a matrix with shape (2, 160) for a 160-dimensional representation.\n\n```python\nall[['gri.ark:/13960/t3032jj3n', 'hvd.1234532123']]\n```\n\n### Writing to SRP files\n\nYou can build your own files row by row.\n\n```python\n\n# Note--the dimensions of the file and the hasher should be equal.\noutput = SRP.Vector_file(\"new_vectors.bin\",dims=640,mode=\"w\")\nhasher = SRP.SRP(640)\n\n\nfor filename in [a,b,c,d]:\n  hash = hasher.stable_transform(\" \".join(open(filename).readlines()))\n  output.add_row(filename,hash)\n\n# files must be closed.\noutput.close()\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/bmschmidt/SRP",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pysrp",
    "package_url": "https://pypi.org/project/pysrp/",
    "platform": "",
    "project_url": "https://pypi.org/project/pysrp/",
    "project_urls": {
      "Homepage": "http://github.com/bmschmidt/SRP"
    },
    "release_url": "https://pypi.org/project/pysrp/1.1.0/",
    "requires_dist": [
      "numpy",
      "regex",
      "sqlitedict"
    ],
    "requires_python": "",
    "summary": "Run stable random projections.",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10573434,
  "releases": {
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c69fbb58e7b05257175964d8fabf022aa54d139d60cba0d98968d5d3a9362218",
          "md5": "e2b4ac47593e921d9d2d6bc0f33de08b",
          "sha256": "317a56a8ad2e58faf6cafddc0ba11e6a0f9bc0f368a50cfbe05a3b7aad699afd"
        },
        "downloads": -1,
        "filename": "pysrp-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e2b4ac47593e921d9d2d6bc0f33de08b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17406,
        "upload_time": "2021-06-07T02:34:20",
        "upload_time_iso_8601": "2021-06-07T02:34:20.354674Z",
        "url": "https://files.pythonhosted.org/packages/c6/9f/bb58e7b05257175964d8fabf022aa54d139d60cba0d98968d5d3a9362218/pysrp-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5cfcaebfe2f403fa511b42d2441a8a8ca23685bea97750dac36be6602184efb6",
          "md5": "35ba5f34ea2977335c61de1685cfbac3",
          "sha256": "113ca04c1ad6ddd6e5bcaeaabc4f0499a6ec458431f667a02973b4870073376b"
        },
        "downloads": -1,
        "filename": "pysrp-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "35ba5f34ea2977335c61de1685cfbac3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17922,
        "upload_time": "2021-06-07T02:34:21",
        "upload_time_iso_8601": "2021-06-07T02:34:21.449002Z",
        "url": "https://files.pythonhosted.org/packages/5c/fc/aebfe2f403fa511b42d2441a8a8ca23685bea97750dac36be6602184efb6/pysrp-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c69fbb58e7b05257175964d8fabf022aa54d139d60cba0d98968d5d3a9362218",
        "md5": "e2b4ac47593e921d9d2d6bc0f33de08b",
        "sha256": "317a56a8ad2e58faf6cafddc0ba11e6a0f9bc0f368a50cfbe05a3b7aad699afd"
      },
      "downloads": -1,
      "filename": "pysrp-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e2b4ac47593e921d9d2d6bc0f33de08b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 17406,
      "upload_time": "2021-06-07T02:34:20",
      "upload_time_iso_8601": "2021-06-07T02:34:20.354674Z",
      "url": "https://files.pythonhosted.org/packages/c6/9f/bb58e7b05257175964d8fabf022aa54d139d60cba0d98968d5d3a9362218/pysrp-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5cfcaebfe2f403fa511b42d2441a8a8ca23685bea97750dac36be6602184efb6",
        "md5": "35ba5f34ea2977335c61de1685cfbac3",
        "sha256": "113ca04c1ad6ddd6e5bcaeaabc4f0499a6ec458431f667a02973b4870073376b"
      },
      "downloads": -1,
      "filename": "pysrp-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "35ba5f34ea2977335c61de1685cfbac3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 17922,
      "upload_time": "2021-06-07T02:34:21",
      "upload_time_iso_8601": "2021-06-07T02:34:21.449002Z",
      "url": "https://files.pythonhosted.org/packages/5c/fc/aebfe2f403fa511b42d2441a8a8ca23685bea97750dac36be6602184efb6/pysrp-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}