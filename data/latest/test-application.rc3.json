{
  "info": {
    "author": "Jonas Pammer",
    "author_email": "opensource@jonaspammer.at",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Environment :: Console",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Typing :: Typed"
    ],
    "description": "[![CI\nStatus](https://github.com/JonasPammer/cookiecutter-pypackage-test/actions/workflows/ci.yml/badge.svg)](https://github.com/JonasPammer/cookiecutter-pypackage-test/actions/workflows/ci.yml)\n![Python\nVersions](https://img.shields.io/pypi/pyversions/test_application.svg)\n\nA Python Package to do random stuff.\n\n# Features\n\n‚Ä¶‚Äã\n\n# System Requirements\n\n- Python 3.7 / PyPy 3.7 or above\n\n# Installing\n\nThis package is available at\n[PyPi](https://pypi.org/project/test_application).\n\nI recommend you to install using [pipx](https://github.com/pypa/pipx) -\na tool that helps installing and running end-user applications written\nin Python without worrying about any virtualenv magic:\n\n    $ pipx install test_application\n\nBut you can of course also install it using normal pip or in your\nvirtual environment:\n\n    $ python3 -m pip install test_application\n\n# Usage\n\n    $ test_application [--help]\n\n# Extra: Run using Docker\n\n[![Docker Workflow\nStatus](https://github.com/JonasPammer/cookiecutter-pypackage-test/actions/workflows/docker.yml/badge.svg)](https://github.com/JonasPammer/cookiecutter-pypackage-test/actions/workflows/docker.yml)\n\nThis Project also offers a best-practiced Dockerfile to run this package\nin an ensured-to-be-working environment:\n\nDetails in [README_DOCKER](README_DOCKER.adoc).\n\n# üìù Development\n\n![pre-commit](https://img.shields.io/badge/pre‚Äî‚Äãcommit-enabled-brightgreen?logo=pre-commit&logoColor=white)\n[![pre-commit.ci\nstatus](https://results.pre-commit.ci/badge/github/JonasPammer/cookiecutter-pypackage-test/master.svg)](https://results.pre-commit.ci/latest/github/JonasPammer/cookiecutter-pypackage-test/master)\n[![code style:\nblack](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n[![Conventional\nCommits](https://img.shields.io/badge/Conventional%20Commits-1.0.0-yellow.svg)](https://conventionalcommits.org)\n\n## üìå Development Machine Dependencies\n\n- Python 3.7 or greater\n\nor (optional)\n\n- Docker\n\n## üìå Development Dependencies\n\nDevelopment Dependencies are defined in a [pip requirements\nfile](https://pip.pypa.io/en/stable/user_guide/#requirements-files)\nnamed `requirements-dev.txt`. Example Installation Instructions for\nLinux are shown below:\n\n    # \"optional\": create a python virtualenv and activate it for the current shell session\n    $ python3 -m venv venv\n    $ source venv/bin/activate\n\n    $ python3 -m pip install -r requirements-dev.txt\n\n## üß™ Testing\n\n[![codecov code coverage on\nmaster](https://codecov.io/gh/JonasPammer/cookiecutter-pypackage-test/branch/master/graph/badge.svg)](https://codecov.io/gh/JonasPammer/cookiecutter-pypackage-test)\n\nAutomatic Tests are run on each Contribution using GitHub Workflows.\n\nTo run the tests yourself, simply run `tox` on the command line.\n\n## üî¢ Versioning\n\nVersions are defined using\n[Tags](https://git-scm.com/book/en/v2/Git-Basics-Tagging).\n\nVersions must start with `v`.\nWhen a new tag is pushed, [https://github.com/{{](https://github.com/{{)\ncookiecutter.github_username }}/{{ cookiecutter.project\\_slug\n}}/actions/workflows/release-to-pypi.yml\\[ a GitHub CI workflow\\]\n(![Release\nCI](https://github.com/{{%20cookiecutter.github_username%20}}/{{%20cookiecutter.project_slug%20}}/actions/workflows/release-to-pypi.yml/badge.svg))\ntakes care of building the wheels using\n[build](https://pypi.org/project/build/) and uploading them to PyPI\nusing [twine](https://pypi.org/project/twine/).\n\nVersion Bumps shall be made through the use of\n[`bump2version`](https://github.com/c4urself/bump2version), e.g.:\n\n    $ bump2version patch\n    or\n    $ bump2version minor\n    or\n    $ bump2version major\n\nThis tool automatically updates the version string in the required files\nand creates a generic commit messsage with an appropiate tag (as\nconfigured in `.bumpversion.cf`).\n\nAfter a new commit and tag has been created using `bump2version` and\npushed, it‚Äôs important not to forget to make an appropiate GitHub\nRelease for Changelog purposes.\n\n## üç™ CookieCutter\n\nThis Project shall be kept in sync with [the CookieCutter it was\noriginally templated\nfrom](https://github.com/JonasPammer/cookiecutter-pypackage) using\n[cruft](https://github.com/cruft/cruft) (if possible) or manual\nalteration (if needed) to the best extend possible.\n\n> ![Official Example Usage of `cruft\nupdate`](https://raw.githubusercontent.com/cruft/cruft/master/art/example_update.gif)\n\n## üïó Changelog\n\nWhen a new tag is pushed, an appropriate GitHub Release will be created\nby the Repository Maintainer to provide a proper human change log with a\ntitle and description.\n\n## ‚ÑπÔ∏è General Linting and Styling Conventions\n\nGeneral Linting and Styling Conventions are [**automatically** held up\nto\nStandards](https://stackoverflow.blog/2020/07/20/linters-arent-in-your-way-theyre-on-your-side/)\nby various [`pre-commit`](https://pre-commit.com/) hooks, at least to\nsome extend.\n\nAutomatic Execution of pre-commit is done on each Contribution using\n[`pre-commit.ci`](https://pre-commit.ci/)[\\*](#note_pre-commit-ci). Pull\nRequests even automatically get fixed by the same tool, at least by\nhooks that automatically alter files.\n\nNot to confuse: Although some pre-commit hooks may be able to warn you\nabout script-analyzed flaws in syntax or even code to some extend (for\nwhich reason pre-commit‚Äôs hooks are **part of** the test suite),\npre-commit itself does not run any real Test Suites. For Information on\nTesting, see [üß™ Testing](#testing).\n\nNevertheless, I recommend you to integrate pre-commit into your local\ndevelopment workflow yourself.\n\nThis can be done by cd‚Äôing into the directory of your cloned project and\nrunning `pre-commit install`. Doing so will make git run pre-commit\nchecks on every commit you make, aborting the commit themselves if a\nhook alarm‚Äôed.\n\nYou can also, for example, execute pre-commit‚Äôs hooks at any time by\nrunning `pre-commit run --all-files`.\n\n# üí™ Contributing ![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square)\n\n[![Open in Visual Studio\nCode](https://img.shields.io/static/v1?logo=visualstudiocode&label=&message=Open%20in%20Visual%20Studio%20Code&labelColor=2c2c32&color=007acc&logoColor=007acc)](https://open.vscode.dev/JonasPammer/cookiecutter-pypackage-test)\n\nThe following sections are generic in nature and are used to help new\ncontributors. The actual \"Development Documentation\" of this project is\nfound under [üìù Development](#development).\n\n## ü§ù Preamble\n\nFirst off, thank you for considering contributing to this Project.\n\nFollowing these guidelines helps to communicate that you respect the\ntime of the developers managing and developing this open source project.\nIn return, they should reciprocate that respect in addressing your\nissue, assessing changes, and helping you finalize your pull requests.\n\n## üç™ CookieCutter\n\nThis Project owns many of its files to [the CookieCutter it was\noriginally templated\nfrom](https://github.com/JonasPammer/cookiecutter-pypackage).\n\nPlease check if the edit you have in mind is actually applicable to the\ntemplate and if so make an appropriate change there instead. Your change\nmay also be applicable partly to the template as well as partly to\nsomething specific to this project, in which case you would be creating\nmultiple PRs.\n\n## üí¨ Conventional Commits\n\nA casual contributor does not have to worry about following [_the\nspec_](https://github.com/JonasPammer/JonasPammer/blob/master/demystifying/conventional_commits.adoc)\n[_by definition_](https://www.conventionalcommits.org/en/v1.0.0/), as\npull requests are being squash merged into one commit in the project.\nOnly core contributors, i.e. those with rights to push to this project‚Äôs\nbranches, must follow it (e.g. to allow for automatic version\ndetermination and changelog generation to work).\n\n## üöÄ Getting Started\n\nContributions are made to this repo via Issues and Pull Requests (PRs).\nA few general guidelines that cover both:\n\n- Search for existing Issues and PRs before creating your own.\n\n- If you‚Äôve never contributed before, see [ the first timer‚Äôs guide on\n  Auth0‚Äôs\n  blog](https://auth0.com/blog/a-first-timers-guide-to-an-open-source-project/)\n  for resources and tips on how to get started.\n\n### Issues\n\nIssues should be used to report problems, request a new feature, or to\ndiscuss potential changes **before** a PR is created. When you [ create\na new\nIssue](https://github.com/JonasPammer/cookiecutter-pypackage-test/issues/new),\na template will be loaded that will guide you through collecting and\nproviding the information we need to investigate.\n\nIf you find an Issue that addresses the problem you‚Äôre having, please\nadd your own reproduction information to the existing issue **rather\nthan creating a new one**. Adding a\n[reaction](https://github.blog/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/)\ncan also help be indicating to our maintainers that a particular problem\nis affecting more than just the reporter.\n\n### Pull Requests\n\nPRs to this Project are always welcome and can be a quick way to get\nyour fix or improvement slated for the next release. [In\ngeneral](https://blog.ploeh.dk/2015/01/15/10-tips-for-better-pull-requests/),\nPRs should:\n\n- Only fix/add the functionality in question **OR** address\n  wide-spread whitespace/style issues, not both.\n\n- Add unit or integration tests for fixed or changed functionality (if\n  a test suite already exists).\n\n- **Address a single concern**\n\n- **Include documentation** in the repo\n\n- Be accompanied by a complete Pull Request template (loaded\n  automatically when a PR is created).\n\nFor changes that address core functionality or would require breaking\nchanges (e.g. a major release), it‚Äôs best to open an Issue to discuss\nyour proposal first.\n\nIn general, we follow the \"fork-and-pull\" Git workflow\n\n1.  Fork the repository to your own Github account\n\n2.  Clone the project to your machine\n\n3.  Create a branch locally with a succinct but descriptive name\n\n4.  Commit changes to the branch\n\n5.  Following any formatting and testing guidelines specific to this\n    repo\n\n6.  Push changes to your fork\n\n7.  Open a PR in our repository and follow the PR template so that we\n    can efficiently review the changes.\n\n# üóí Changelog\n\nPlease refer to the [Release Page of this\nRepository](https://github.com/JonasPammer/cookiecutter-pypackage-test/releases)\nfor a human changelog of the corresponding [Tags (Versions) of this\nProject](https://github.com/JonasPammer/cookiecutter-pypackage-test/tags).\n\nNote that this Project adheres to Semantic Versioning. Please report any\naccidental breaking changes of a minor version update.\n\n# ‚öñÔ∏è License\n\n**[LICENSE](LICENSE)**\n\n    MIT License\n\n    Copyright (c) 2022 Jonas Pammer\n\n    Permission is hereby granted, free of charge, to any person obtaining a copy\n    of this software and associated documentation files (the \"Software\"), to deal\n    in the Software without restriction, including without limitation the rights\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the Software is\n    furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in all\n    copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n    SOFTWARE.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/JonasPammer/cookiecutter-pypackage-test",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "test-application",
    "package_url": "https://pypi.org/project/test-application/",
    "platform": null,
    "project_url": "https://pypi.org/project/test-application/",
    "project_urls": {
      "Homepage": "https://github.com/JonasPammer/cookiecutter-pypackage-test"
    },
    "release_url": "https://pypi.org/project/test-application/0.2.2/",
    "requires_dist": [
      "Click (>=8.0)",
      "attrs (>=21.0)",
      "pyyaml",
      "types-PyYAML"
    ],
    "requires_python": ">=3.7",
    "summary": "do random stuff",
    "version": "0.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14537742,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "92cd055a4ebe7ae41f5cd3d9b3c941681c262c0b5b83f9776b521ac4e16a1b09",
          "md5": "84547756fab696de47c566ace0607b0f",
          "sha256": "d33baf3130347bf34daa9d15d0f28fde6e22581c243e5c269e76e4ffc15bd8d2"
        },
        "downloads": -1,
        "filename": "test_application-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "84547756fab696de47c566ace0607b0f",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.7",
        "size": 3040,
        "upload_time": "2022-07-21T08:17:53",
        "upload_time_iso_8601": "2022-07-21T08:17:53.517723Z",
        "url": "https://files.pythonhosted.org/packages/92/cd/055a4ebe7ae41f5cd3d9b3c941681c262c0b5b83f9776b521ac4e16a1b09/test_application-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ff0bf01d80925f181f65a1c74d364d019afa21db1315c57333d6b9da69c0daaa",
          "md5": "9b55d95dadfc3f2298f1f4585a1ac4ec",
          "sha256": "90b6a100ac466e7a4bffad81b9a11700dbfe19cbb2477f856c46feb30e547f2d"
        },
        "downloads": -1,
        "filename": "test_application-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9b55d95dadfc3f2298f1f4585a1ac4ec",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 6819,
        "upload_time": "2022-07-21T08:17:55",
        "upload_time_iso_8601": "2022-07-21T08:17:55.186172Z",
        "url": "https://files.pythonhosted.org/packages/ff/0b/f01d80925f181f65a1c74d364d019afa21db1315c57333d6b9da69c0daaa/test_application-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e15797b15d62c82dd9fe1c7fe8e58649f7f8e9331f2dfa6c76fd12243b1afbd6",
          "md5": "bb6348cb5b3b726d77542538010f7170",
          "sha256": "5a6f2d111893c3980c93275d9f7b073bbff8f780371a118511bcf7c13d420605"
        },
        "downloads": -1,
        "filename": "test_application-0.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bb6348cb5b3b726d77542538010f7170",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.7",
        "size": 3041,
        "upload_time": "2022-07-21T08:21:00",
        "upload_time_iso_8601": "2022-07-21T08:21:00.898912Z",
        "url": "https://files.pythonhosted.org/packages/e1/57/97b15d62c82dd9fe1c7fe8e58649f7f8e9331f2dfa6c76fd12243b1afbd6/test_application-0.2.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "71f5ca53a16a8398c40232da42add7f16040857e0bf91a069f0352e9dc1d2396",
          "md5": "3cff598536f58f3a24415479f242a0ef",
          "sha256": "4041cb4ca3da83a3cfe4a53e6bd9f682057ae6e3157a48c78fec2bcf9dc7c7e4"
        },
        "downloads": -1,
        "filename": "test_application-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3cff598536f58f3a24415479f242a0ef",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 2713,
        "upload_time": "2022-07-21T08:21:03",
        "upload_time_iso_8601": "2022-07-21T08:21:03.201613Z",
        "url": "https://files.pythonhosted.org/packages/71/f5/ca53a16a8398c40232da42add7f16040857e0bf91a069f0352e9dc1d2396/test_application-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "68c17eb2b71ef2a91be55d47da71e934f101c5b170959080e758eca8742c05f2",
          "md5": "e1ed1092b7bb733cfbcd2466a4537003",
          "sha256": "62c965894743f7e577ed1dbfebf048e5d2621a681d903b3c8ef03d958a17dffb"
        },
        "downloads": -1,
        "filename": "test_application-0.2.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e1ed1092b7bb733cfbcd2466a4537003",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.7",
        "size": 7927,
        "upload_time": "2022-07-25T07:37:27",
        "upload_time_iso_8601": "2022-07-25T07:37:27.481338Z",
        "url": "https://files.pythonhosted.org/packages/68/c1/7eb2b71ef2a91be55d47da71e934f101c5b170959080e758eca8742c05f2/test_application-0.2.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2ae143a86c4e4a367584dc30d0837dbb818b6ec8021160c7159500ddb30f3d2b",
          "md5": "c5dae26dc9abf264765d9befa3049e77",
          "sha256": "e09d5b7e780beb1791b642d07ce52a6be7b321dc2d0afe30a19e7e7abe5c1dd2"
        },
        "downloads": -1,
        "filename": "test_application-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c5dae26dc9abf264765d9befa3049e77",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 7734,
        "upload_time": "2022-07-25T07:37:28",
        "upload_time_iso_8601": "2022-07-25T07:37:28.880170Z",
        "url": "https://files.pythonhosted.org/packages/2a/e1/43a86c4e4a367584dc30d0837dbb818b6ec8021160c7159500ddb30f3d2b/test_application-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "68c17eb2b71ef2a91be55d47da71e934f101c5b170959080e758eca8742c05f2",
        "md5": "e1ed1092b7bb733cfbcd2466a4537003",
        "sha256": "62c965894743f7e577ed1dbfebf048e5d2621a681d903b3c8ef03d958a17dffb"
      },
      "downloads": -1,
      "filename": "test_application-0.2.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e1ed1092b7bb733cfbcd2466a4537003",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.7",
      "size": 7927,
      "upload_time": "2022-07-25T07:37:27",
      "upload_time_iso_8601": "2022-07-25T07:37:27.481338Z",
      "url": "https://files.pythonhosted.org/packages/68/c1/7eb2b71ef2a91be55d47da71e934f101c5b170959080e758eca8742c05f2/test_application-0.2.2-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2ae143a86c4e4a367584dc30d0837dbb818b6ec8021160c7159500ddb30f3d2b",
        "md5": "c5dae26dc9abf264765d9befa3049e77",
        "sha256": "e09d5b7e780beb1791b642d07ce52a6be7b321dc2d0afe30a19e7e7abe5c1dd2"
      },
      "downloads": -1,
      "filename": "test_application-0.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "c5dae26dc9abf264765d9befa3049e77",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 7734,
      "upload_time": "2022-07-25T07:37:28",
      "upload_time_iso_8601": "2022-07-25T07:37:28.880170Z",
      "url": "https://files.pythonhosted.org/packages/2a/e1/43a86c4e4a367584dc30d0837dbb818b6ec8021160c7159500ddb30f3d2b/test_application-0.2.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}