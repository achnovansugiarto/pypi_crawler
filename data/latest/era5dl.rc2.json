{
  "info": {
    "author": "Guangzhi XU",
    "author_email": "xugzhi1987@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Intended Audience :: End Users/Desktop",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Natural Language :: English",
      "Operating System :: MacOS",
      "Operating System :: Microsoft",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3",
      "Topic :: Education"
    ],
    "description": "# ERA5-dl: a simple helper for downloading ECMWF's ERA5 reanalysis data\n\n\n## Dependencies and requirements:\n\n* `cdsapi`: Python package. Can be installed via `pip install cdsapi`.\n* ECMWF account and a `.cdsapirc` token file in the *HOME* directory. See\n  https://confluence.ecmwf.int/display/CKB/How+to+download+ERA5 for more\n  details.\n\n## Install\n\nInstall via `pip`:\n\n```\npip install era5dl\n```\n\n## Features and usages\n\n### 1. Batch download\n\nSend batch download jobs to retrieve large amount of data while saving\nthe downloaded data into separate files, e.g. each for a year.\n\nE.g. to download u-wind and geo-potential during 2000-2001, on pressure levels\n1000 and 800 hPa, while\nskipping some combinations of variables, years and levels:\n\n```\nfrom era5dl import batchDownload, TEMPLATE_DICT\n\nOUTPUTDIR='.'\n\nJOB_DICT = {\n    'variable': ['u_component_of_wind', 'geopotential'],\n    'year': range(2000, 2002),\n    'pressure_level': [1000, 800]\n}\n\nSKIP_LIST = [\n    {'variable': 'u_component_of_wind', 'year': [2000, ], 'pressure_level': [1000, 800]},\n    {'variable': 'geopotential', 'year': [2001, ], 'pressure_level': [800, ]}, ]\n\nbatchDownload(TEMPLATE_DICT, JOB_DICT, SKIP_LIST, OUTPUTDIR, dry=True, pause=3)\n```\n\n### 2. Keep a log\n\nA log file is created in the same folder where the downloaded data are saved.\n\nExample log:\n\n```\n<util_downloader.py-processJob()>: 2021-04-17 20:20:38,289,INFO: <batch_download>: Output folder at: ./\n<util_downloader.py-processJob()>: 2021-04-17 20:20:38,290,INFO: Launch job 1\n<util_downloader.py-processJob()>: 2021-04-17 20:20:38,290,INFO: Job info: {'product_type': 'reanalysis', 'format': 'netcdf', 'variable': 'u_component_of_wind', 'pressure_level': 800, 'year': 2001, 'month': ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'], 'day': ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31'], 'time': ['00:00', '06:00', '12:00', '18:00'], 'area': [10, 80, -10, 100]}\n<util_downloader.py-processJob()>: 2021-04-17 20:20:38,290,INFO: Output file location: ./[ID0]800-u_component_of_wind-2001.nc\n<util_downloader.py-processJob()>: 2021-04-17 20:20:41,293,INFO: <batch_download>: Output folder at: ./\n<util_downloader.py-processJob()>: 2021-04-17 20:20:41,294,INFO: Launch job 2\n<util_downloader.py-processJob()>: 2021-04-17 20:20:41,294,INFO: Job info: {'product_type': 'reanalysis', 'format': 'netcdf', 'variable': 'u_component_of_wind', 'pressure_level': 1000, 'year': 2001, 'month': ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'], 'day': ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31'], 'time': ['00:00', '06:00', '12:00', '18:00'], 'area': [10, 80, -10, 100]}\n<util_downloader.py-processJob()>: 2021-04-17 20:20:41,294,INFO: Output file location: ./[ID1]1000-u_component_of_wind-2001.nc\n<util_downloader.py-processJob()>: 2021-04-17 20:20:44,296,INFO: <batch_download>: Output folder at: ./\n<util_downloader.py-processJob()>: 2021-04-17 20:20:44,296,INFO: Launch job 3\n...\n```\n\n### 3. Skip already downloaded files\n\nWhen running a batch downloading job, each finished job is recorded in a text file\nnamed `downloaded_list.txt` in the same folder as the saved data.\nIf the downloading is interrupted, for instance by network issues, a second run\nof the script will first look at the `downloaded_list.txt` file\nand exclude those already finished retrievals.\n\n\n### 4. Create a batch download job by splitting the api request from ECMWF web\n\nE.g.\n\nOne selects the desired data from the CDS web interface as shown in the following\n3 screen captures:\n\n![](docs/web_api_1.png)\n\n![](docs/web_api_2.png)\n\n![](docs/web_api_3.png)\n\nNotice that it is warned that the requested field is too large. Even if\nnot, one may want to split the entire data into smaller, more manageable chunks,\nfor instance, by saving each variable in each year, on each vertical level\ninto a separate file.\n\nTo split the retrieval, first click the **Show API request** button at the bottom\nof the page, and copy and save the Python code into a text file, e.g. `api.txt`,\nthen run a Python script with the following content:\n\n```\nfrom era5dl import batchDownloadFromWebRequest\n\nOUTPUTDIR='./'\nDRY=False\n\nbatchDownloadFromWebRequest('./api.txt', OUTPUTDIR,\n    ['variable', 'pressure_level', 'year'], DRY, pause=3)\n```\n\nThe `['variable', 'pressure_level', 'year']` list tells that the batch job\nis split by these 3 dimensions/fields, such that each sub-job consists of\neach variable in each year, on each vertical level, and the data of the sub-job\nis saved into a separate file.\n\nAgain, already downloaded data are recorded in the `downloaded_list.txt` file\nand re-executing the script will not re-download them.\n\n### 5. Automatically generate meaningful file names\n\nThe `batchDownload()` and `batchDownloadFromWebRequest()` functions accept\na `naming_func` keyword argument, which can be `None`, or a callable.\n\nIf a callable, it should be a function that accepts\na single input argument which is a dict defining\nthe data retrieval task, and returns a string as the filename\n(without folder path) to name the downloaded data.\n\nIf `None`, it will construct a default filename, using the following format:\n\n`[ID<n>]<attributes>.nc` or `[ID<n>]<attributes>.grb`.\n\nwhere `<n>` is the numerical id of the job, `<attributes>` is a\ndash concatenated string joining the attributes that define the job.\nE.g.\n\n```\n[ID02]700-geopotential-2000.nc\n```\n\n### 6. Dry run\n\nThe `batchDownload()` and `batchDownloadFromWebRequest()` functions accept\na `dry` positional argument. When set to `True`, will simulate the retrieval\nrather than actually sending the `cdsapi` retrieval request. This can be used\nto test the request definition.\n\n\n## Contribution\n\nThis tool is still in early development stage.  Contributions and bug reports\nare welcome. Please create a fork of the project on GitHub and use a pull\nrequest to propose your changes.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Xunius/era5-dl",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "era5dl",
    "package_url": "https://pypi.org/project/era5dl/",
    "platform": "",
    "project_url": "https://pypi.org/project/era5dl/",
    "project_urls": {
      "Homepage": "https://github.com/Xunius/era5-dl"
    },
    "release_url": "https://pypi.org/project/era5dl/0.1a3/",
    "requires_dist": [
      "cdsapi"
    ],
    "requires_python": ">=3",
    "summary": "a simple helper for downloading ECMWF's ERA5 reanalysis data",
    "version": "0.1a3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10106180,
  "releases": {
    "0.1a2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc03cfa9a12e48e8adf25f8af873dffb0997933e35fc96abb1a659b0813da075",
          "md5": "962fbb8661da1174ba1c162b9a1ff8d8",
          "sha256": "025dc570b485f06fdf11652efb3d2b7acdd08e0fd555431497996e9b9fc6534d"
        },
        "downloads": -1,
        "filename": "era5dl-0.1a2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "962fbb8661da1174ba1c162b9a1ff8d8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 42315,
        "upload_time": "2021-04-19T12:41:40",
        "upload_time_iso_8601": "2021-04-19T12:41:40.492344Z",
        "url": "https://files.pythonhosted.org/packages/dc/03/cfa9a12e48e8adf25f8af873dffb0997933e35fc96abb1a659b0813da075/era5dl-0.1a2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e332e15bcbc68ac69abf536df74df55b27f722544ab96cb3773d9b7e46a0eab9",
          "md5": "e404733037f0aaa5c9b35fe497477359",
          "sha256": "8b2471c111f7334e3c7438a6b4bc804add8329bac1f4190e274a112b0937d9ee"
        },
        "downloads": -1,
        "filename": "era5dl-0.1a2.tar.gz",
        "has_sig": false,
        "md5_digest": "e404733037f0aaa5c9b35fe497477359",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 37047,
        "upload_time": "2021-04-19T12:41:43",
        "upload_time_iso_8601": "2021-04-19T12:41:43.214778Z",
        "url": "https://files.pythonhosted.org/packages/e3/32/e15bcbc68ac69abf536df74df55b27f722544ab96cb3773d9b7e46a0eab9/era5dl-0.1a2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1a3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "55eea6d8f26de69ed8d657f1568e0c7e066c43b7a08b821e14e5480197f05b38",
          "md5": "52b56bd9ed0436ed410de82a83cb5d07",
          "sha256": "1e41c0506e52a46df540f9721df5efab4d0452abb5ac7a7d17eff5613e03240b"
        },
        "downloads": -1,
        "filename": "era5dl-0.1a3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "52b56bd9ed0436ed410de82a83cb5d07",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 42235,
        "upload_time": "2021-04-19T13:27:14",
        "upload_time_iso_8601": "2021-04-19T13:27:14.386794Z",
        "url": "https://files.pythonhosted.org/packages/55/ee/a6d8f26de69ed8d657f1568e0c7e066c43b7a08b821e14e5480197f05b38/era5dl-0.1a3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cc7968f71a3a2b1bf0a93c23827f445780d87d8591bb200b81afcb428d31e429",
          "md5": "715c20600af89b1d4a8e5fb6e295b3ef",
          "sha256": "17030a34d13ba182c15fba404411bdf15fef4c9c6617a1df042ad47a518108ec"
        },
        "downloads": -1,
        "filename": "era5dl-0.1a3.tar.gz",
        "has_sig": false,
        "md5_digest": "715c20600af89b1d4a8e5fb6e295b3ef",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 37122,
        "upload_time": "2021-04-19T13:27:33",
        "upload_time_iso_8601": "2021-04-19T13:27:33.350782Z",
        "url": "https://files.pythonhosted.org/packages/cc/79/68f71a3a2b1bf0a93c23827f445780d87d8591bb200b81afcb428d31e429/era5dl-0.1a3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "55eea6d8f26de69ed8d657f1568e0c7e066c43b7a08b821e14e5480197f05b38",
        "md5": "52b56bd9ed0436ed410de82a83cb5d07",
        "sha256": "1e41c0506e52a46df540f9721df5efab4d0452abb5ac7a7d17eff5613e03240b"
      },
      "downloads": -1,
      "filename": "era5dl-0.1a3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "52b56bd9ed0436ed410de82a83cb5d07",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3",
      "size": 42235,
      "upload_time": "2021-04-19T13:27:14",
      "upload_time_iso_8601": "2021-04-19T13:27:14.386794Z",
      "url": "https://files.pythonhosted.org/packages/55/ee/a6d8f26de69ed8d657f1568e0c7e066c43b7a08b821e14e5480197f05b38/era5dl-0.1a3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cc7968f71a3a2b1bf0a93c23827f445780d87d8591bb200b81afcb428d31e429",
        "md5": "715c20600af89b1d4a8e5fb6e295b3ef",
        "sha256": "17030a34d13ba182c15fba404411bdf15fef4c9c6617a1df042ad47a518108ec"
      },
      "downloads": -1,
      "filename": "era5dl-0.1a3.tar.gz",
      "has_sig": false,
      "md5_digest": "715c20600af89b1d4a8e5fb6e295b3ef",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3",
      "size": 37122,
      "upload_time": "2021-04-19T13:27:33",
      "upload_time_iso_8601": "2021-04-19T13:27:33.350782Z",
      "url": "https://files.pythonhosted.org/packages/cc/79/68f71a3a2b1bf0a93c23827f445780d87d8591bb200b81afcb428d31e429/era5dl-0.1a3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}