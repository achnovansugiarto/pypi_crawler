{
  "info": {
    "author": "Marius GÃ¶cke",
    "author_email": "marius.goecke@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: Microsoft :: Windows :: Windows 10",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3.10",
      "Topic :: Terminals"
    ],
    "description": "# PietInterpreter\n\n[![Supported Python versions](https://img.shields.io/pypi/pyversions/PietInterpreter.svg)](https://pypi.org/project/PietInterpreter/)\n![PyPI](https://img.shields.io/pypi/v/PietInterpreter)\n![Dependencies](https://img.shields.io/librariesio/github/anionDev/PietInterpreter)\n\n[![CodeFactor](https://www.codefactor.io/repository/github/aniondev/PietInterpreter/badge/main)](https://www.codefactor.io/repository/github/aniondev/PietInterpreter/overview/main)\n[![Downloads](https://pepy.tech/badge/PietInterpreter)](https://pepy.tech/project/pietinterpreter)\n![Coverage](./PietInterpreter/Other/Resources/TestCoverageBadges/badge_shieldsio_linecoverage_blue.svg)\n\n![License](https://img.shields.io/badge/license-MIT-blue)\n![GitHub last commit](https://img.shields.io/github/last-commit/anionDev/PietInterpreter)\n![GitHub issues](https://img.shields.io/github/issues-raw/anionDev/PietInterpreter)\n\nPietInterpreter is an interpreter for Piet-programs. It was originally written by [Jens Bouman](https://github.com/JensBouman/Piet_interpreter).\nPiet is an esoteric programming language, which is based on the geometric artist Piet Mondriaan. The language specifies actions based on the transitions of colors. For a detailed explanation, please visit [the official website](https://www.dangermouse.net/esoteric/piet.html)\n\n## Get PietInterpreter\n\nYou can install PietInterpreter as cli-program using the command `pip3 install PietInterpreter`.\n\n## Hints\n\nThe term `codel` was used as a synonym for color block.\n\n## Features\n\nThis interpreter can do the following:\n\n- Custom errors for unknown colors, unknown tokens, unknown commands and when starting in a black pixel\n- Run .png images\n- Run .gif images\n- Output number of steps taken\n- Use a Graphical User Interface:\n  - Step-by-step execution of the program\n    - Information about the selected codel\n    - Information about the stack\n    - Information about the direction\n  - Visual representation of the program\n  - Can open files without restarting the GUI\n  - Can scale images, to better visualize the program\n\n## Limitations\n\nToo large images will cause the stack to overflow. The maximum size of the image is dependent on the contents.\nThe interpreter also can't distinguish between images with different pixel-sizes. Due to the nature of Piet, enlarging an image will cause the interpreter to produce different results\n\n## Parameters\n\nThe main.py file in the root directory should be used to interface with the interpreter. Each parameter that can be used will be explained here.\n\n### Help\n\nThe help parameter shows all parameters from the commandline, and can be set as follows\n\n```sh\npython main.py -h\npython main.py --help\n```\n\n### File\n\nThis is a required parameter, and is a path to the image that should be interpreted. The test-images provided in the repository can be interpreted as follows:\n\n```sh\npython main.py -f Countdown.png\npython main.py --file Countdown.png\n```\n\nOutput:\n\n```sh\n10\n9\n8\n7\n6\n5\n4\n3\n2\n1\n\n```\n\n### Verbose\n\nCurrently the verbose flag outputs the total amount of steps taken for the execution of the image.\n\n```sh\npython main.py --file Countdown.py -v\npython main.py --file Countdown.py --verbose\n```\n\nOutput:\n\n```sh\n10\n9\n8\n7\n6\n5\n4\n3\n2\n1\n\nTotal steps: 276\n```\n\n### Graphical\n\nThe graphical flag opens a GUI, with the given file loaded.\n\n```sh\npython main.py --file Countdown.py -g\npython main.py --file Countdown.py --graphical\n```\n\nThis command should open the interface:\n![countdown GUI](./Reference/GUI/countdown_GUI.PNG)\n\n## Interpreter infographic\n\n![infographic](/Reference/poster.png)\n\n## Test programs\n\n### Add.png\n\nThis program calculates 2+2 and output it to StdOut\n\n### ColorError.png\n\nThis program encounters an error during lexing, and returns the full list of errors.\n\n### Countdown.png\n\nThis program counts down from 10 to 1, outputting each number to StdOut. This program shows how turing-complete the language is by demonstrating arithmetic functionality, boolean algebra and looping/branching.\n\n### DivideByZero.png\n\nThis program encounters a division by zero error and prints the error to StdOut\n\n### Endless.png\n\nThis program loops endlessly, or until the stack overflows\n\n### HelloWorld.png\n\nOutputs Hello World! to StdOut\n\n### StackRoll.png\n\nThis program shows the functionality behind the stackroll function. It is recommended to run this in graphical mode, to show the stack changing\n\n## Development\n\n### Requirements\n\nThe program requires the following libraries to be installed:\n\n- [Python pillow](https://pillow.readthedocs.io/en/stable/), used for loading images\n- [Numpy](https://numpy.org/), used for managing images\n- [Pygubu](https://pypi.org/project/pygubu/), used by the GUI\n\nInstall the dependencies using:\n\n```sh\npip3 install Pillow>=9.1.0\npip3 install numpy>=1.22.3\npip3 install pygubu>=0.20.1\n```\n\n### Development-Dependencies\n\nInstall the development-dependencies using:\n\n```sh\npip3 install wheel\n```\n\n### Build\n\nTo Create an installable whl-package simply execute `python Setup.py bdist_wheel --dist-dir .`.\n\nWhen doing this multiple times you should also clean temporary files created by python before creating the whl-package.\nSo to do this and install the local created package the steps are:\n\n```sh\npip3 uninstall -y PietInterpreter\ngit clean -dfx\npython Setup.py bdist_wheel --dist-dir .\npip3 install PietInterpreter-x.x.x-py3-none-any.whl\n```\n\n## License\n\nSee `License.txt` for license-information.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/anionDev/PietInterpreter",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "PietInterpreter",
    "package_url": "https://pypi.org/project/PietInterpreter/",
    "platform": "windows10",
    "project_url": "https://pypi.org/project/PietInterpreter/",
    "project_urls": {
      "Homepage": "https://github.com/anionDev/PietInterpreter"
    },
    "release_url": "https://pypi.org/project/PietInterpreter/1.0.3/",
    "requires_dist": [
      "Pillow (>=9.1.0)",
      "numpy (>=1.22.3)",
      "pygubu (>=0.20.1)"
    ],
    "requires_python": "",
    "summary": "PietInterpreter is an interpreter for Piet-programs.",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15440346,
  "releases": {
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5eebd1449c4dacc1cb5f30a90bafa9247ec2955db2e49f58782800617eba2564",
          "md5": "f772cace931bcd4feca32ac65412aba2",
          "sha256": "f1946c883b2c46a8faa2d39758243f101265319de93f0cc8d910dab3263acb70"
        },
        "downloads": -1,
        "filename": "PietInterpreter-1.0.2-py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "f772cace931bcd4feca32ac65412aba2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 22152,
        "upload_time": "2022-04-20T15:12:06",
        "upload_time_iso_8601": "2022-04-20T15:12:06.955010Z",
        "url": "https://files.pythonhosted.org/packages/5e/eb/d1449c4dacc1cb5f30a90bafa9247ec2955db2e49f58782800617eba2564/PietInterpreter-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "383f92aea4aa35ba86d6030016639f966b5518658bf5e9f9658650b16b7d91a6",
          "md5": "82929c42df8e90aed2f81de4ba406821",
          "sha256": "f4e85671936b3d510b55693a0cff666500cf57213035bd84689100daedcbb88e"
        },
        "downloads": -1,
        "filename": "PietInterpreter-1.0.3-py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "82929c42df8e90aed2f81de4ba406821",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 22026,
        "upload_time": "2022-10-17T18:57:55",
        "upload_time_iso_8601": "2022-10-17T18:57:55.250386Z",
        "url": "https://files.pythonhosted.org/packages/38/3f/92aea4aa35ba86d6030016639f966b5518658bf5e9f9658650b16b7d91a6/PietInterpreter-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "383f92aea4aa35ba86d6030016639f966b5518658bf5e9f9658650b16b7d91a6",
        "md5": "82929c42df8e90aed2f81de4ba406821",
        "sha256": "f4e85671936b3d510b55693a0cff666500cf57213035bd84689100daedcbb88e"
      },
      "downloads": -1,
      "filename": "PietInterpreter-1.0.3-py3-none-any.whl",
      "has_sig": true,
      "md5_digest": "82929c42df8e90aed2f81de4ba406821",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 22026,
      "upload_time": "2022-10-17T18:57:55",
      "upload_time_iso_8601": "2022-10-17T18:57:55.250386Z",
      "url": "https://files.pythonhosted.org/packages/38/3f/92aea4aa35ba86d6030016639f966b5518658bf5e9f9658650b16b7d91a6/PietInterpreter-1.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}