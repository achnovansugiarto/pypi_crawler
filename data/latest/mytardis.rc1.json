{
  "info": {
    "author": "Steve Androulakis",
    "author_email": "steve.androulakis@monash.edu",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "===================\nREADME for MyTARDIS\n===================\n\nMyTARDIS is a multi-institutional collaborative venture that\nfacilitates the archiving and sharing of data and metadata collected\nat major facilities such as the Australian Synchrotron and ANSTO and\nwithin Institutions.\n\nAn example of the benefit of a system such as MyTARDIS in the protein\ncrystallography community is that while the model coordinates and\n(less often) the structure factors (processed experimental data) are\nstored in the community Protein Data Bank (PDB) the raw diffraction\ndata is often not available. There are several reasons why this is\nimportant, which can be summarised as:\n\n * The availability of raw data is extremely useful for the\n   development of improved methods of image analysis and data\n   processing.\n\n * Fostering the archival of raw data at an institutional level is one\n   the best ways of ensuring that this data is not lost (laboratory\n   archives are typically volatile).\n\n\nContributing\n============\n\nSend wishes, comments, patches, etc. to tardis-devel@googlegroups.com.\n\n\nChangelog\n=========\n\n2.0 - Unreleased\n----------------\n* Auth/Auth redesign [Gerson, Uli, Russel]\n\n  * Authorisation. Support for several pluggable authorisation plugins\n    (Django internal, LDAP, VBL). The added AuthService middleware\n    provides a mechanism to query all available auth modules to\n    determine what group memberships a users has.\n\n  * Alternative authorisation. Rule based experiment access control\n    engine was implemented with the following access attributes for\n    indivdual users and groups: canRead, canWrite, canDelete,\n    isOwner. Additionally, a time stamp can be specified for each\n    access rule.\n\n    Further information can be found at the wiki: `Authorisation\n    Engine design\n    <http://code.google.com/p/mytardis/wiki/AuthorisationEngineAlt>`_\n\n* New METS parser [Gerson]\n* Dist/Buildout infrastructure [Russell]\n* Through the web creation and editing of experiments [Steve, Russell]\n* Through the web upload of files [Steve]\n\n\n1.07 - 01/06/2010\n-----------------\n\n* Publish to tardis.edu.au interface created, though not implemented,\n  pending legal text\n\n\n1.06 - 15/03/2010\n-----------------\n* Parameter import interface for creation of new parameter/schema\n  definitions\n* iPhone Interface\n\n\n1.05 - 01/03/2010\n-----------------\n\n* Images as parameters supported\n* Data / metadata transfer from synchrotron is now 'threaded' using\n  asynchronous web service transfers.\n\n\n1.0 - 01/02/2010\n----------------\n\n* MyTARDIS created from existin MyTARDIS python / django codebase\n* Allows private data to be stored\n* Open key/value parameter model, replacing current crystallography\n  one\n* Internal data store for data\n* LDAP Login\n* Pagination of files\n* Creation of synchrotron-tardis from MyTARDIS codebase including\n  specific code for the VBL login service and data transfer to\n  MyTARDIS deployments.\n* Web server changed to apache and mod_wsgi\n\n\n0.5 - 2009\n----------\n\n* Re-wrote federated index (python / django)\n* Federated stores are now simple web server based with optional FTP\n  access\n* Runs on Jython / Tomcat\n\n\n0.1 - 2007\n----------\n\n* Federated index (php) running on Apache HTTP Server\n* Crystallography data deposition and packaging tools for Fedora\n  Commons (java swing desktop)\n* Search Interface via web",
    "description_content_type": null,
    "docs_url": "https://pythonhosted.org/MyTARDIS/",
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://code.google.com/p/mytardis/",
    "keywords": null,
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "MyTARDIS",
    "package_url": "https://pypi.org/project/MyTARDIS/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/MyTARDIS/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://code.google.com/p/mytardis/"
    },
    "release_url": "https://pypi.org/project/MyTARDIS/1.99/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Next iteration of the TARDIS framework. No digital repository required. Federated web stores + ftp access instead.",
    "version": "1.99",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 351952,
  "releases": {
    "1.99": []
  },
  "urls": [],
  "vulnerabilities": []
}