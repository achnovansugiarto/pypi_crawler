{
  "info": {
    "author": "Sergey Lobarev",
    "author_email": "serhg94@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Information Technology",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# asyncio-context\r\n\r\nTool for store data within asyncio task (for example, in all coroutines across handling aiohttp request) and enrich logging record with this data.  \r\nSmall, nice-looking and with annotations. \r\n\r\nInstall\r\n==========================\r\npip install asyncio-context\r\n\r\nExample\r\n==========================\r\nIt can be used for logging trace id and other info about request:\r\n```python\r\n...\r\n    'formatters': {\r\n        'standard': {\r\n            'format': '[trace_id:%(trace_id)s] [user_id:%(user_id)s]:%(message)s'\r\n        },\r\n    },\r\n    'filters': {\r\n        'context2record': {\r\n            '()': 'asyncio_context.logging.Context2Record',\r\n            'ctx_name': 'ViewsCtx'\r\n        },\r\n    },\r\n...\r\n```\r\n```python\r\nfrom asyncio_context import Context\r\n\r\nclass ViewsCtx(Context):\r\n    user_id: str = 'UNKNOWN'\r\n    trace_id: str = 'NO_TRACE'\r\n    \r\nctx = ViewsCtx()\r\nlog = logging.getLogger()\r\n\r\nclass MyView(web.View):\r\n    async def get(self):\r\n        \r\n        ctx.trace_id = self.request.headers.get('X-Trace-Id', str(uuid.uuid4()))\r\n        # or\r\n        ViewsCtx().user_id = self.request.match_info.get('user_id')\r\n        \r\n        log.info('Test request')\r\n        # GET http://localhost:8080/user/123\r\n        # [trace_id:ea38e89d-fba1-40a3-899e-297c6cd76732] [user_id:123]:Test request\r\n```\r\n\r\nContext can be copied to another asyncio task:\r\n```python\r\ntask = asyncio.get_running_loop().create_task(another_task())\r\nViewsCtx.copy_to_task(task)\r\n```\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Serhg94/asyncio-context",
    "keywords": "asyncio,aiohttp,context,trace,annotations",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "asyncio-context",
    "package_url": "https://pypi.org/project/asyncio-context/",
    "platform": "",
    "project_url": "https://pypi.org/project/asyncio-context/",
    "project_urls": {
      "Homepage": "https://github.com/Serhg94/asyncio-context"
    },
    "release_url": "https://pypi.org/project/asyncio-context/0.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "Asyncio task context with logging support",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11460344,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9b1393d878a590bb6536923b9afb5ad8bdd3dfeb7db10bfb438a8c288791af52",
          "md5": "75d648ee230d6da3eae8eadd4f8d9512",
          "sha256": "0e3895535ee71dc6873ba74037cdbf9d1dbd998a0dc74a2a5cb65d128d63c829"
        },
        "downloads": -1,
        "filename": "asyncio-context-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "75d648ee230d6da3eae8eadd4f8d9512",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 4177,
        "upload_time": "2021-09-15T16:41:02",
        "upload_time_iso_8601": "2021-09-15T16:41:02.395105Z",
        "url": "https://files.pythonhosted.org/packages/9b/13/93d878a590bb6536923b9afb5ad8bdd3dfeb7db10bfb438a8c288791af52/asyncio-context-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9b1393d878a590bb6536923b9afb5ad8bdd3dfeb7db10bfb438a8c288791af52",
        "md5": "75d648ee230d6da3eae8eadd4f8d9512",
        "sha256": "0e3895535ee71dc6873ba74037cdbf9d1dbd998a0dc74a2a5cb65d128d63c829"
      },
      "downloads": -1,
      "filename": "asyncio-context-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "75d648ee230d6da3eae8eadd4f8d9512",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 4177,
      "upload_time": "2021-09-15T16:41:02",
      "upload_time_iso_8601": "2021-09-15T16:41:02.395105Z",
      "url": "https://files.pythonhosted.org/packages/9b/13/93d878a590bb6536923b9afb5ad8bdd3dfeb7db10bfb438a8c288791af52/asyncio-context-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}