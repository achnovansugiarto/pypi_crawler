{
  "info": {
    "author": "TF",
    "author_email": "github-admin@tensorflow.org",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# TensorFlow Object Detection API\n[![TensorFlow 2.2](https://img.shields.io/badge/TensorFlow-2.2-FF6F00?logo=tensorflow)](https://github.com/tensorflow/tensorflow/releases/tag/v2.2.0)\n[![TensorFlow 1.15](https://img.shields.io/badge/TensorFlow-1.15-FF6F00?logo=tensorflow)](https://github.com/tensorflow/tensorflow/releases/tag/v1.15.0)\n[![Python 3.6](https://img.shields.io/badge/Python-3.6-3776AB)](https://www.python.org/downloads/release/python-360/)\n\nCreating accurate machine learning models capable of localizing and identifying\nmultiple objects in a single image remains a core challenge in computer vision.\nThe TensorFlow Object Detection API is an open source framework built on top of\nTensorFlow that makes it easy to construct, train and deploy object detection\nmodels. At Google we’ve certainly found this codebase to be useful for our\ncomputer vision needs, and we hope that you will as well. <p align=\"center\">\n<img src=\"g3doc/img/kites_detections_output.jpg\" width=676 height=450> </p>\nContributions to the codebase are welcome and we would love to hear back from\nyou if you find this API useful. Finally if you use the TensorFlow Object\nDetection API for a research publication, please consider citing:\n\n```\n\"Speed/accuracy trade-offs for modern convolutional object detectors.\"\nHuang J, Rathod V, Sun C, Zhu M, Korattikara A, Fathi A, Fischer I, Wojna Z,\nSong Y, Guadarrama S, Murphy K, CVPR 2017\n```\n\n\\[[link](https://arxiv.org/abs/1611.10012)\\]\\[[bibtex](https://scholar.googleusercontent.com/scholar.bib?q=info:l291WsrB-hQJ:scholar.google.com/&output=citation&scisig=AAGBfm0AAAAAWUIIlnPZ_L9jxvPwcC49kDlELtaeIyU-&scisf=4&ct=citation&cd=-1&hl=en&scfhb=1)\\]\n\n<p align=\"center\">\n  <img src=\"g3doc/img/tf-od-api-logo.png\" width=140 height=195>\n</p>\n\n## Support for TensorFlow 2 and 1\nThe TensorFlow Object Detection API supports both TensorFlow 2 (TF2) and\nTensorFlow 1 (TF1). A majority of the modules in the library are both TF1 and\nTF2 compatible. In cases where they are not, we provide two versions.\n\nAlthough we will continue to maintain the TF1 models and provide support, we\nencourage users to try the Object Detection API with TF2 for the following\nreasons:\n\n* We provide new architectures supported in TF2 only and we will continue to\n  develop in TF2 going forward.\n\n* The popular models we ported from TF1 to TF2 achieve the same performance.\n\n* A single training and evaluation binary now supports both GPU and TPU\n  distribution strategies making it possible to train models with synchronous\n  SGD by default.\n\n* Eager execution with new binaries makes debugging easy!\n\nFinally, if are an existing user of the Object Detection API we have retained\nthe same config language you are familiar with and ensured that the\nTF2 training/eval binary takes the same arguments as our TF1 binaries.\n\nNote: The models we provide in [TF2 Zoo](g3doc/tf2_detection_zoo.md) and\n[TF1 Zoo](g3doc/tf1_detection_zoo.md) are specific to the TensorFlow major\nversion and are not interoperable.\n\nPlease select one of the links below for TensorFlow version-specific\ndocumentation of the Object Detection API:\n\n<!-- mdlint off(WHITESPACE_LINE_LENGTH) -->\n### Tensorflow 2.x\n  *   <a href='g3doc/tf2.md'>\n        Object Detection API TensorFlow 2</a><br>\n  *   <a href='g3doc/tf2_detection_zoo.md'>\n        TensorFlow 2 Model Zoo</a><br>\n\n### Tensorflow 1.x\n  *   <a href='g3doc/tf1.md'>\n        Object Detection API TensorFlow 1</a><br>\n  *   <a href='g3doc/tf1_detection_zoo.md'>\n        TensorFlow 1 Model Zoo</a><br>\n<!-- mdlint on -->\n\n## Whats New\n\n### SpaghettiNet for Edge TPU\n\nWe have released SpaghettiNet models optimized for the Edge TPU in the [Google Tensor SoC](https://blog.google/products/pixel/google-tensor-debuts-new-pixel-6-fall/).\n\nSpaghettiNet models are derived from a TuNAS search space that incorporates\ngroup convolution based [Inverted Bottleneck](https://arxiv.org/abs/1801.04381) blocks.\nThe backbone and detection head are connected through [MnasFPN](https://arxiv.org/abs/1912.01106)-style feature map\nmerging and searched jointly.\n\nWhen compared to MobileDet-EdgeTPU, SpaghettiNet models achieve +2.2% mAP\n(absolute) on COCO17 at the same latency. They also consume <70% of the energy\nused by MobileDet-EdgeTPU to achieve the same accuracy.\n\nSample config available [here](configs/tf1/ssd_spaghettinet_edgetpu_320x320_coco17_sync_4x4.config).\n\n<b>Thanks to contributors</b>: Marie White, Hao Xu, Hanxiao Liu and Suyog Gupta.\n\n### DeepMAC architecture\n\nWe have released our new architecture, **DeepMAC**, designed for partially\nsupervised instance segmentation. DeepMAC stands for Deep Mask-heads\nAbove CenterNet, and is based on our CenterNet implementation. In our\n[paper](https://arxiv.org/abs/2104.00613) we show that DeepMAC achieves\nstate-of-the-art results for the partially supervised instance segmentation\ntask without using any specialty modules or losses; just better mask-head\narchitectures. The findings from our paper are not specific to CenterNet and\ncan also be applied to Mask R-CNN or without any detector at all.\nPlease see links below for more details\n\n*   [DeepMAC documentation](g3doc/deepmac.md).\n*   [Mask RCNN code](https://github.com/tensorflow/models/tree/master/official/vision/beta/projects/deepmac_maskrcnn)\n    in TF Model garden code base.\n*   [DeepMAC Colab](./colab_tutorials/deepmac_colab.ipynb) that lets you run a\n    pre-trained DeepMAC model on user-specified boxes. Note that you are not\n    restricted to COCO classes!\n*   Project website - [git.io/deepmac](https://git.io/deepmac)\n\n<b>Thanks to contributors</b>: Vighnesh Birodkar, Zhichao Lu, Siyang Li,\n Vivek Rathod, Jonathan Huang\n\n\n### Mobile Inference for TF2 models\n\nTF2 OD API models can now be converted to TensorFlow Lite! Only SSD models\ncurrently supported. See <a href='g3doc/running_on_mobile_tf2.md'>documentation</a>.\n\n**Thanks to contributors**: Sachin Joglekar\n\n### TensorFlow 2 Support\n\nWe are happy to announce that the TF OD API officially supports TF2! Our release\nincludes:\n\n* New binaries for train/eval/export that are designed to run in eager mode.\n* A suite of TF2 compatible (Keras-based) models; this includes migrations of\n  our most popular TF1.x models (e.g., SSD with MobileNet, RetinaNet,\n  Faster R-CNN, Mask R-CNN), as well as a few new architectures for which we\n  will only maintain TF2 implementations:\n\n    1. CenterNet - a simple and effective anchor-free architecture based on\n       the recent [Objects as Points](https://arxiv.org/abs/1904.07850) paper by\n       Zhou et al.\n    2. [EfficientDet](https://arxiv.org/abs/1911.09070) - a recent family of\n       SOTA models discovered with the help of Neural Architecture Search.\n\n* COCO pre-trained weights for all of the models provided as TF2 style\n  object-based checkpoints.\n* Access to [Distribution Strategies](https://www.tensorflow.org/guide/distributed_training)\n  for distributed training --- our model are designed to be trainable using sync\n  multi-GPU and TPU platforms.\n* Colabs demo’ing eager mode training and inference.\n\nSee our release blogpost [here](https://blog.tensorflow.org/2020/07/tensorflow-2-meets-object-detection-api.html).\nIf you are an existing user of the TF OD API using TF 1.x, don’t worry, we’ve\ngot you covered.\n\n**Thanks to contributors**: Akhil Chinnakotla, Allen Lavoie, Anirudh Vegesana,\nAnjali Sridhar, Austin Myers, Dan Kondratyuk, David Ross, Derek Chow, Jaeyoun\nKim, Jing Li, Jonathan Huang, Jordi Pont-Tuset, Karmel Allison, Kathy Ruan,\nKaushik Shivakumar, Lu He, Mingxing Tan, Pengchong Jin, Ronny Votel, Sara Beery,\nSergi Caelles Prat, Shan Yang, Sudheendra Vijayanarasimhan, Tina Tian, Tomer\nKaftan, Vighnesh Birodkar, Vishnu Banna, Vivek Rathod, Yanhui Liang, Yiming Shi,\nYixin Shi, Yu-hui Chen, Zhichao Lu.\n\n### MobileDet GPU\n\nWe have released SSDLite with MobileDet GPU backbone, which achieves 17% mAP\nhigher than the MobileNetV2 SSDLite (27.5 mAP vs 23.5 mAP) on a NVIDIA Jetson\nXavier at comparable latency (3.2ms vs 3.3ms).\n\nAlong with the model definition, we are also releasing model checkpoints trained\non the COCO dataset.\n\n<b>Thanks to contributors</b>: Yongzhe Wang, Bo Chen, Hanxiao Liu, Le An\n(NVIDIA), Yu-Te Cheng (NVIDIA), Oliver Knieps (NVIDIA), and Josh Park (NVIDIA).\n\n### Context R-CNN\n\nWe have released [Context R-CNN](https://arxiv.org/abs/1912.03538), a model that\nuses attention to incorporate contextual information images (e.g. from\ntemporally nearby frames taken by a static camera) in order to improve accuracy.\nImportantly, these contextual images need not be labeled.\n\n*   When applied to a challenging wildlife detection dataset\n    ([Snapshot Serengeti](http://lila.science/datasets/snapshot-serengeti)),\n    Context R-CNN with context from up to a month of images outperforms a\n    single-frame baseline by 17.9% mAP, and outperforms S3D (a 3d convolution\n    based baseline) by 11.2% mAP.\n*   Context R-CNN leverages temporal context from the unlabeled frames of a\n    novel camera deployment to improve performance at that camera, boosting\n    model generalizeability.\n\nRead about Context R-CNN on the Google AI blog\n[here](https://ai.googleblog.com/2020/06/leveraging-temporal-context-for-object.html).\n\nWe have provided code for generating data with associated context\n[here](g3doc/context_rcnn.md), and a sample config for a Context R-CNN model\n[here](samples/configs/context_rcnn_resnet101_snapshot_serengeti_sync.config).\n\nSnapshot Serengeti-trained Faster R-CNN and Context R-CNN models can be found in\nthe\n[model zoo](https://github.com/tensorflow/models/blob/master/research/object_detection/g3doc/tf1_detection_zoo.md#snapshot-serengeti-camera-trap-trained-models).\n\nA colab demonstrating Context R-CNN is provided\n[here](colab_tutorials/context_rcnn_tutorial.ipynb).\n\n<b>Thanks to contributors</b>: Sara Beery, Jonathan Huang, Guanhang Wu, Vivek\nRathod, Ronny Votel, Zhichao Lu, David Ross, Pietro Perona, Tanya Birch, and the\nWildlife Insights AI Team.\n\n## Release Notes\nSee [notes](g3doc/release_notes.md) for all past releases.\n\n## Getting Help\n\nTo get help with issues you may encounter using the TensorFlow Object Detection\nAPI, create a new question on [StackOverflow](https://stackoverflow.com/) with\nthe tags \"tensorflow\" and \"object-detection\".\n\nPlease report bugs (actually broken code, not usage questions) to the\ntensorflow/models GitHub\n[issue tracker](https://github.com/tensorflow/models/issues), prefixing the\nissue name with \"object_detection\".\n\nPlease check the [FAQ](g3doc/faq.md) for frequently asked questions before\nreporting an issue.\n\n## Maintainers\n\n* Jonathan Huang ([@GitHub jch1](https://github.com/jch1))\n* Vivek Rathod ([@GitHub tombstone](https://github.com/tombstone))\n* Vighnesh Birodkar ([@GitHub vighneshbirodkar](https://github.com/vighneshbirodkar))\n* Austin Myers ([@GitHub austin-myers](https://github.com/austin-myers))\n* Zhichao Lu ([@GitHub pkulzc](https://github.com/pkulzc))\n* Ronny Votel ([@GitHub ronnyvotel](https://github.com/ronnyvotel))\n* Yu-hui Chen ([@GitHub yuhuichen1015](https://github.com/yuhuichen1015))\n* Derek Chow  ([@GitHub derekjchow](https://github.com/derekjchow))\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/tensorflow",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ctg-object-detection-tools",
    "package_url": "https://pypi.org/project/ctg-object-detection-tools/",
    "platform": null,
    "project_url": "https://pypi.org/project/ctg-object-detection-tools/",
    "project_urls": {
      "Bug Tracker": "https://github.com/tensorflow/issues",
      "Homepage": "https://github.com/tensorflow"
    },
    "release_url": "https://pypi.org/project/ctg-object-detection-tools/0.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Tensorflow CTG Object Detection Library",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14544321,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1ff6ac885013eacadb8e6655cbfc4fc1d92187938f095266090119c074e4f45d",
          "md5": "b404c46c32f3bd9ad6a87815df7bae3a",
          "sha256": "eaa3c0c161f2b474480aefef8ec26937a7575ef2f1e128ac7cdc17f899aac799"
        },
        "downloads": -1,
        "filename": "ctg_object_detection_tools-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b404c46c32f3bd9ad6a87815df7bae3a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 1467705,
        "upload_time": "2022-07-25T18:27:30",
        "upload_time_iso_8601": "2022-07-25T18:27:30.007400Z",
        "url": "https://files.pythonhosted.org/packages/1f/f6/ac885013eacadb8e6655cbfc4fc1d92187938f095266090119c074e4f45d/ctg_object_detection_tools-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "39d1ac54b6f6527c95333a9da1b677d3d9401269e2cafdb23c8bd7c708b57c7e",
          "md5": "b7c6fd56544cec9d7283fc511aa8b058",
          "sha256": "cf47c90d96ad415b97f867f0a2611dfab8e464b41d6aa1455b07df099101e3ad"
        },
        "downloads": -1,
        "filename": "ctg_object_detection_tools-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b7c6fd56544cec9d7283fc511aa8b058",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 1052518,
        "upload_time": "2022-07-25T18:27:34",
        "upload_time_iso_8601": "2022-07-25T18:27:34.328236Z",
        "url": "https://files.pythonhosted.org/packages/39/d1/ac54b6f6527c95333a9da1b677d3d9401269e2cafdb23c8bd7c708b57c7e/ctg_object_detection_tools-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1ff6ac885013eacadb8e6655cbfc4fc1d92187938f095266090119c074e4f45d",
        "md5": "b404c46c32f3bd9ad6a87815df7bae3a",
        "sha256": "eaa3c0c161f2b474480aefef8ec26937a7575ef2f1e128ac7cdc17f899aac799"
      },
      "downloads": -1,
      "filename": "ctg_object_detection_tools-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b404c46c32f3bd9ad6a87815df7bae3a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 1467705,
      "upload_time": "2022-07-25T18:27:30",
      "upload_time_iso_8601": "2022-07-25T18:27:30.007400Z",
      "url": "https://files.pythonhosted.org/packages/1f/f6/ac885013eacadb8e6655cbfc4fc1d92187938f095266090119c074e4f45d/ctg_object_detection_tools-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "39d1ac54b6f6527c95333a9da1b677d3d9401269e2cafdb23c8bd7c708b57c7e",
        "md5": "b7c6fd56544cec9d7283fc511aa8b058",
        "sha256": "cf47c90d96ad415b97f867f0a2611dfab8e464b41d6aa1455b07df099101e3ad"
      },
      "downloads": -1,
      "filename": "ctg_object_detection_tools-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "b7c6fd56544cec9d7283fc511aa8b058",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 1052518,
      "upload_time": "2022-07-25T18:27:34",
      "upload_time_iso_8601": "2022-07-25T18:27:34.328236Z",
      "url": "https://files.pythonhosted.org/packages/39/d1/ac54b6f6527c95333a9da1b677d3d9401269e2cafdb23c8bd7c708b57c7e/ctg_object_detection_tools-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}