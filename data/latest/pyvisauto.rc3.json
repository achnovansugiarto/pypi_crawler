{
  "info": {
    "author": "Minyoung Choi",
    "author_email": "minyoung.choi@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# pyvisauto\n\n**pyvisauto** is a Python visual automation tool. Inspired by Sikuli, pyvisauto provides Python-native easy-to-use abstractions for complex interactions with on-screen visual elements by wrapping [OpenCV](https://opencv.org/) (specifically [opencv-contrib-python-headless](https://pypi.org/project/opencv-contrib-python-headless/)), [pyautogui](https://github.com/asweigart/pyautogui), [pytesseract](https://pypi.org/project/pytesseract/), and [numpy](https://numpy.org/).\n\nFeatures include:\n\n* OpenCV and numpy-driven image matching of on-screen elements\n* TesseractOCR support\n* Methods to find an image match (`find`), find all matches (`find_all`), check if a match exists (`exists`), wait until an image match occurs (`wait`), and wait for an image match to disappear (`wait_vanish`)\n* Methods to click and hover over regions and matches (`click` and `hover`, respectively) with random x and y coordinates within the region\n* Sub-region and cached matching for faster performance\n* Method to save screenshots of matches and regions to a file (`screenshot`)\n\n## Requirements\n\npyvisauto has been tested on Python 3.7. The `opencv-contrib-python-headless` package limits availability to Python 2.7 and 3.4 ~ 3.7. While pyvisauto should be compatible with Python 3, **Python 3.8 is currently not supported.**\n\n## Installation and Usage\n\n1. Install OS-specific dependencies:\n    * Windows: No extra dependencies needed\n    * Linux: `python3-xlib`\n    * OSX: `pyobjc-core` and `pyobjc`, in that order\n2. Install pyvisauto using pip: `pip install pyvisauto`\n3. Import pyvisauto: `import pyvisauto`\n4. Read the Quick Start and API docs\n\n## Quick Start\n\n* Define a full-screen region and assign it to `r`:\n\n    ```\n    r = pyvisauto.Region()\n    ```\n\n* Define a region with the upper-left corner at x: 50px and y: 100px, with a width of 500px and height of 300px and assign it to `r`:\n\n    ```\n    r = pyvisauto.Region(50, 100, 500, 300)\n    ```\n\n* Find the image `asset1.png` in the defined region, with a similarity score of 0.9:\n\n    ```\n    match1 = r.find('asset1.png', 0.8)\n    ```\n\n* If there has been no visual changes in the defined region, subsequent `find` actions can be expedited by passing in `cached=True`:\n\n    ```\n    match2 = r.find('asset2.png', 0.9, cached=True)\n    ```\n\n* `find_all` and `exists` can be used in a similar fashion as `find`.\n\n* Hover over a random point in the first returned match:\n\n    ```\n    match1.hover()\n    ```\n\n* Click a random point in the second returned match:\n\n    ```\n    match2.click()\n    ```\n\n* One can use `wait` and `vanish` to wait for on-screen changes, detected by the presence or disappearance of an image on-screen, respectively:\n\n    ```\n    r.wait('wait_asset1.png', 30, 0.8)\n    ```\n\n    The above code will wait for `wait_asset1.png` in the previously defined region `r`, with a minimum similarity score of 0.8, waiting a maximum of 30 seconds before throwing a `FindFailed` exception. `vanish`, on the other hand, throws a `VanishFailed` exception. Both exceptions are defined in the `pyvisauto` module.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mrmin123/pyvisauto",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyvisauto",
    "package_url": "https://pypi.org/project/pyvisauto/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyvisauto/",
    "project_urls": {
      "Homepage": "https://github.com/mrmin123/pyvisauto"
    },
    "release_url": "https://pypi.org/project/pyvisauto/1.0.3/",
    "requires_dist": [
      "opencv-contrib-python-headless (~=4.1.2.30)",
      "pillow (~=7.2.0)",
      "pyautogui (~=0.9.48)",
      "pytesseract (~=0.3.0)",
      "numpy (~=1.17.4)"
    ],
    "requires_python": ">=3.4.*, <3.8",
    "summary": "pyvisauto - a vision-based automation tool",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8312362,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c3331d3ef249f743a1a0055755441eb31b79056f8f6045d98d2c4cc32b6e8cf7",
          "md5": "6e2d60ccfb2703bd0fa92e8460f6fcbd",
          "sha256": "bef1af9a7b9802961465b551439ce6b6559f4b731d95458671688b0cdb59a124"
        },
        "downloads": -1,
        "filename": "pyvisauto-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6e2d60ccfb2703bd0fa92e8460f6fcbd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.4.*, <3.8",
        "size": 22079,
        "upload_time": "2019-11-10T10:04:48",
        "upload_time_iso_8601": "2019-11-10T10:04:48.286628Z",
        "url": "https://files.pythonhosted.org/packages/c3/33/1d3ef249f743a1a0055755441eb31b79056f8f6045d98d2c4cc32b6e8cf7/pyvisauto-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9cb450731c1d812a5296cbda5fde90b544437ee55d691b241211bb624e73a7a1",
          "md5": "455f404c68b6d3d8f036f72fd3b4d80c",
          "sha256": "2f0739d9309a9158203a5c8803449f886ed4a3e8c640c43cf2e677cd993c9754"
        },
        "downloads": -1,
        "filename": "pyvisauto-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "455f404c68b6d3d8f036f72fd3b4d80c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4.*, <3.8",
        "size": 6030,
        "upload_time": "2019-11-10T10:04:49",
        "upload_time_iso_8601": "2019-11-10T10:04:49.608818Z",
        "url": "https://files.pythonhosted.org/packages/9c/b4/50731c1d812a5296cbda5fde90b544437ee55d691b241211bb624e73a7a1/pyvisauto-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "482f1da0aec704cc6ac91e44ef7fc3f78726fb19da171f2a0e8156aff25cce96",
          "md5": "79cc5475c41372c8e2f7c1876a096dfc",
          "sha256": "fd2a1a7fc1b091a23f4ee2f8f61ccf3403bb910ad72fceb27a8423e1cc152af9"
        },
        "downloads": -1,
        "filename": "pyvisauto-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "79cc5475c41372c8e2f7c1876a096dfc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.4.*, <3.8",
        "size": 22085,
        "upload_time": "2019-11-28T23:51:54",
        "upload_time_iso_8601": "2019-11-28T23:51:54.741938Z",
        "url": "https://files.pythonhosted.org/packages/48/2f/1da0aec704cc6ac91e44ef7fc3f78726fb19da171f2a0e8156aff25cce96/pyvisauto-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ae38862c916e7581a607630591a72a6d3cfde321f4005ee20d51b197be60d8a0",
          "md5": "a54b087d4d6f3cd83b73f79b96205bed",
          "sha256": "590f4763cffbb4ea4d15bff8788605ad7d708386b4d6a685cc676e774124d5d7"
        },
        "downloads": -1,
        "filename": "pyvisauto-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a54b087d4d6f3cd83b73f79b96205bed",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4.*, <3.8",
        "size": 6032,
        "upload_time": "2019-11-28T23:51:56",
        "upload_time_iso_8601": "2019-11-28T23:51:56.820611Z",
        "url": "https://files.pythonhosted.org/packages/ae/38/862c916e7581a607630591a72a6d3cfde321f4005ee20d51b197be60d8a0/pyvisauto-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "16e80b52443bc9e16166429b149f8d28f492e66838aa4bed4a1f4efbe4d69713",
          "md5": "ea27d3c03e903c12525a56d4a60af034",
          "sha256": "768bc48e6ae389e43535d1e7a7f503ab3e099b1b78f5d08cbab451bd7a66142c"
        },
        "downloads": -1,
        "filename": "pyvisauto-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ea27d3c03e903c12525a56d4a60af034",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.4.*, <3.8",
        "size": 22077,
        "upload_time": "2020-10-01T02:27:54",
        "upload_time_iso_8601": "2020-10-01T02:27:54.991325Z",
        "url": "https://files.pythonhosted.org/packages/16/e8/0b52443bc9e16166429b149f8d28f492e66838aa4bed4a1f4efbe4d69713/pyvisauto-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2ab40fc1639477847acf42408d22aa832bc9e573a5ce8fff35a15c1250c6a1bc",
          "md5": "0b81042c64f83add09dac6a14f3684cf",
          "sha256": "758cad748263fcea48ab1fd6ae930c87c42ee3413a1a8a3361dac45b2c8280a0"
        },
        "downloads": -1,
        "filename": "pyvisauto-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "0b81042c64f83add09dac6a14f3684cf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4.*, <3.8",
        "size": 6294,
        "upload_time": "2020-10-01T02:27:56",
        "upload_time_iso_8601": "2020-10-01T02:27:56.059777Z",
        "url": "https://files.pythonhosted.org/packages/2a/b4/0fc1639477847acf42408d22aa832bc9e573a5ce8fff35a15c1250c6a1bc/pyvisauto-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "16e80b52443bc9e16166429b149f8d28f492e66838aa4bed4a1f4efbe4d69713",
        "md5": "ea27d3c03e903c12525a56d4a60af034",
        "sha256": "768bc48e6ae389e43535d1e7a7f503ab3e099b1b78f5d08cbab451bd7a66142c"
      },
      "downloads": -1,
      "filename": "pyvisauto-1.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ea27d3c03e903c12525a56d4a60af034",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.4.*, <3.8",
      "size": 22077,
      "upload_time": "2020-10-01T02:27:54",
      "upload_time_iso_8601": "2020-10-01T02:27:54.991325Z",
      "url": "https://files.pythonhosted.org/packages/16/e8/0b52443bc9e16166429b149f8d28f492e66838aa4bed4a1f4efbe4d69713/pyvisauto-1.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2ab40fc1639477847acf42408d22aa832bc9e573a5ce8fff35a15c1250c6a1bc",
        "md5": "0b81042c64f83add09dac6a14f3684cf",
        "sha256": "758cad748263fcea48ab1fd6ae930c87c42ee3413a1a8a3361dac45b2c8280a0"
      },
      "downloads": -1,
      "filename": "pyvisauto-1.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "0b81042c64f83add09dac6a14f3684cf",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.4.*, <3.8",
      "size": 6294,
      "upload_time": "2020-10-01T02:27:56",
      "upload_time_iso_8601": "2020-10-01T02:27:56.059777Z",
      "url": "https://files.pythonhosted.org/packages/2a/b4/0fc1639477847acf42408d22aa832bc9e573a5ce8fff35a15c1250c6a1bc/pyvisauto-1.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}