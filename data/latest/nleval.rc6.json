{
  "info": {
    "author": "",
    "author_email": "Remy Liu <liurenmi@msu.edu>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Scientific/Engineering :: Bio-Informatics"
    ],
    "description": "[![PyPI version](https://badge.fury.io/py/nleval.svg)](https://badge.fury.io/py/nleval)\n[![Documentation Status](https://readthedocs.org/projects/networklearningeval/badge/?version=latest)](https://networklearningeval.readthedocs.io/en/latest/?badge=latest)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n[![Imports: isort](https://img.shields.io/badge/%20imports-isort-%231674b1?style=flat&labelColor=ef8336)](https://pycqa.github.io/isort/)\n\n[![Tests](https://github.com/krishnanlab/NetworkLearningEval/actions/workflows/tests.yml/badge.svg)](https://github.com/krishnanlab/NetworkLearningEval/actions/workflows/tests.yml)\n[![Test Examples](https://github.com/krishnanlab/NetworkLearningEval/actions/workflows/examples.yml/badge.svg)](https://github.com/krishnanlab/NetworkLearningEval/actions/workflows/examples.yml)\n[![Test Data](https://github.com/krishnanlab/NetworkLearningEval/actions/workflows/test_data.yml/badge.svg)](https://github.com/krishnanlab/NetworkLearningEval/actions/workflows/test_data.yml)\n\n# NetworkLearningEval\n\n## Installation\n\nClone the repository first and then install via `pip`\n\n```bash\ngit clone https://github.com/krishnanlab/NetworkLearningEval && cd NetworkLearningEval\npip install -e .\n```\n\nThe `-e` option means 'editable', i.e. no need to reinstall the library if you make changes to the source code.\nFeel free to not use the `-e` option and simply do `pip install .` if you do not plan on modifying the source code.\n\n### Optional Pytorch Geometric installation\n\nUser need to install [Pytorch Geomtric](https://github.com/pyg-team/pytorch_geometric) to enable some GNN related features.\nTo install PyG, first need to install [PyTorch](https://pytorch.org).\nFor full details about installation instructions, visit the links above.\nAssuming the system has Python3.8 or above installed, with CUDA10.2, use the following to install both PyTorch and PyG.\n\n```bash\nconda install pytorch=1.12.1 torchvision cudatoolkit=10.2 -c pytorch\npip install torch-geometric==2.0.4 torch-scatter torch-sparse torch-cluster -f https://data.pyg.org/whl/torch-1.12.1+cu102.html\n```\n\n### Quick install using the installation script\n\n```bash\nsource install.sh cu102  # other options are [cpu,cu113]\n```\n\n## Quick Demonstration\n\n### Construct default datasets\n\nWe provide a high-level dataset constructor to help user effortlessly set up a ML-ready dataset\nfor a combination of network and label. In particular, the dataset will be set up with study-bias\nholdout split (6/2/2), where 60% of the most well studied genes according to the number of\nassociated PubMed publications are used for training, 20% of the least studied genes are used for\ntesting, and rest of the 20% genes are used for validation. For more customizable data loading\nand processing options, see the [customized dataset construction](#customized-dataset-construction)\nsection below.\n\n```python\nfrom nleval.util.dataset_constructors import default_constructor\n\nroot = \"datasets\"  # save dataset and cache under the datasets/ directory\nversion = \"nledata-v0.1.0-dev3\"  # archive data version, use 'latest' to pull latest data from source instead\n\n# Download and process network/label data. Use the adjacency matrix as the ML feature\ndataset = default_constructor(root=root, version=version, graph_name=\"BioGRID\", label_name=\"DisGeNET\",\n                              graph_as_feature=True, use_dense_graph=True)\n```\n\n### Evaluating standard models\n\nEvaluation of simple machine learning methods such as logistic regression and label propagation\ncan be done easily using the trainer objects. The trainer objects take a dictionary of metrics\nas input for evaluating the models' performances, and can be set up as follows.\n\n```python\nfrom nleval.metric import auroc\nfrom nleval.model_trainer import SupervisedLearningTrainer, LabelPropagationTrainer\n\nmetrics = {\"auroc\": auroc}  # use AUROC as our default evaluation metric\nsl_trainer = SupervisedLearningTrainer(metrics)\nlp_trainer = LabelPropagationTrainer(metrics)\n```\n\nThen, use the `eval_multi_ovr` method of the trainer to evaluate a given ML model over all tasks\nin a one-vs-rest setting.\n\n```python\nfrom sklearn.linear_model import LogisticRegression\nfrom nleval.model.label_propagation import OneHopPropagation\n\n# Initialize models\nsl_mdl = LogisticRegression(penalty=\"l2\", solver=\"lbfgs\")\nlp_mdl = OneHopPropagation()\n\n# Evaluate the models over all tasks\nsl_results = sl_trainer.eval_multi_ovr(sl_mdl, dataset)\nlp_results = lp_trainer.eval_multi_ovr(lp_mdl, dataset)\n```\n\n### Evaluating GNN models\n\nTraining and evaluation of Graph Neural Network (GNN) models can be done in a very similar fashion.\n\n```python\nfrom torch_geometric.nn import GCN\nfrom nleval.model_trainer.gnn import SimpleGNNTrainer\n\n# Use 1-dimensional trivial node feature\ndataset = default_constructor(root=root, version=version, graph_name=\"BioGRID\", label_name=\"DisGeNET\")\n\n# Train and evaluate a GCN\ngcn_mdl = GCN(in_channels=1, hidden_channels=64, num_layers=5, out_channels=n_tasks)\ngcn_trainer = SimpleGNNTrainer(metrics, device=\"cuda\", metric_best=\"auroc\")\ngcn_results = gcn_trainer.train(gcn_mdl, dataset)\n```\n\n### Customized dataset construction\n\n#### Load network and labels\n\n```python\nfrom nleval import data\n\nroot = \"datasets\"  # save dataset and cache under the datasets/ directory\n\n# Load processed BioGRID data from archive.\n# Alternatively, set version=\"latest\" to get and process the newest data from scratch.\ng = data.BioGRID(root, version=\"nledata-v0.1.0-dev3\")\n\n# Load DisGeNET gene set collections.\nlsc = data.DisGeNET(root, version=\"latest\")\n```\n\n#### Setting up data and splits\n\n```python\nfrom nleval.util.converter import GenePropertyConverter\nfrom nleval.label.split import RatioHoldout\n\n# Load PubMed count gene property converter and use it to set up study-bias holdout split\npubmedcnt_converter = GenePropertyConverter(root, name=\"PubMedCount\")\nsplitter = RatioHoldout(0.6, 0.4, ascending=False, property_converter=pubmedcnt_converter)\n```\n\n#### Filter labeled data based on network genes and splits\n\n```python\n# Apply in-place filters to the labelset collection\nlsc.iapply(\n    filters.Compose(\n        # Only use genes that are present in the network\n        filters.EntityExistenceFilter(list(g.node_ids)),\n        # Remove any labelsets with less than 50 network genes\n        filters.LabelsetRangeFilterSize(min_val=50),\n        # Make sure each split has at least 10 positive examples\n        filters.LabelsetRangeFilterSplit(min_val=10, splitter=splitter),\n    ),\n)\n```\n\n#### Combine into dataset\n\n```python\nfrom nleval import Dataset\ndataset = Dataset(graph=g, feature=g.to_dense_graph().to_feature(), label=lsc, splitter=splitter)\n```\n\n## Data preparation and releasing notes\n\nFirst, bump data version in `__init__.py` to the next data release version, e.g., `nledata-v0.1.0 -> nledata-v0.1.1-dev`.\nThen, download and process all latest data by running\n\n```bash\npython script/release_data.py\n```\n\nBy default, the data ready to be uploaded (e.g., to [Zenodo](zenodo.org)) is saved under `data_release/archived`.\nAfter some necessary inspection and checking, if everything looks good, upload and publish the new archived data.\n\n**Note:** `dev` data should be uploaded to the [sandbox](https://sandbox.zenodo.org/record/1097545#.YxYrqezMJzV) instead.\n\nCheck items:\n\n- [ ] Update `__data_version__`\n- [ ] Run [`release_data.py`](script/release_data.py)\n- [ ] Upload archived data to Zenodo (be sure to edit the data version there also)\n- [ ] Update url dict in config (will improve in the future to get info from Zenodo directly)\n- [ ] Update network stats in data [test](test/test_data.py)\n\nFinally, commit and push the bumped version.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "Data Processing,Gene Classification,Machine Learning,Network Biology,Network Repositories",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "nleval",
    "package_url": "https://pypi.org/project/nleval/",
    "platform": null,
    "project_url": "https://pypi.org/project/nleval/",
    "project_urls": {
      "bug-tracker": "https://github.com/krishnanlab/NetworkLearningEval/issues",
      "home": "https://github.com/krishnanlab/NetworkLearningEval"
    },
    "release_url": "https://pypi.org/project/nleval/0.1.0.dev7/",
    "requires_dist": [
      "matplotlib (<3.7)",
      "mygene",
      "ndex2",
      "numpy (>=1.20.0)",
      "pyyaml",
      "scikit-learn (>=1.0.0)",
      "scipy",
      "tqdm",
      "bump2version ; extra == 'dev'",
      "click ; extra == 'dev'",
      "jinja2 ; extra == 'dev'",
      "parameterized ; extra == 'dev'",
      "pre-commit ; extra == 'dev'",
      "pytest ; extra == 'dev'",
      "pytest-cov ; extra == 'dev'",
      "pytest-mock ; extra == 'dev'",
      "pytest-subtests ; extra == 'dev'",
      "pytest-xdist ; extra == 'dev'",
      "requests-mock ; extra == 'dev'",
      "tabulate ; extra == 'dev'",
      "tox ; extra == 'dev'",
      "sphinx ; extra == 'doc'",
      "sphinx-autodoc-typehints ; extra == 'doc'",
      "sphinx-rtd-theme ; extra == 'doc'",
      "sphinxcontrib-napoleon ; extra == 'doc'",
      "yacs ; extra == 'doc'",
      "grape ; extra == 'ext'",
      "pecanpy ; extra == 'ext'",
      "nleval[ext,pyroe] ; extra == 'full'",
      "pyroe ; extra == 'pyroe'",
      "scanpy ; extra == 'pyroe'"
    ],
    "requires_python": ">=3.8",
    "summary": "A Python toolkit for biological network learning evaluation",
    "version": "0.1.0.dev7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17264228,
  "releases": {
    "0.1.0.dev2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b56655fe284b3daa0e0ffa2c5baecb3794f970138106c7690b474218a9dbae97",
          "md5": "17d84a76c651d8c2dd91c5be2ed0e966",
          "sha256": "d72eafc38654452729f3cfae02138ce19bf2e420f6bc0521a885c31d324100e4"
        },
        "downloads": -1,
        "filename": "nleval-0.1.0.dev2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "17d84a76c651d8c2dd91c5be2ed0e966",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 99650,
        "upload_time": "2022-09-06T03:32:53",
        "upload_time_iso_8601": "2022-09-06T03:32:53.242143Z",
        "url": "https://files.pythonhosted.org/packages/b5/66/55fe284b3daa0e0ffa2c5baecb3794f970138106c7690b474218a9dbae97/nleval-0.1.0.dev2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c85e769a283a57820be423781b86a1a7c8bf080d1933c1786dbe85848026e309",
          "md5": "15ace688c2070fa1510af2506cef865d",
          "sha256": "d293828b038755f465e975cb90801161128adc0b3a47696cb670dc2daea9a70f"
        },
        "downloads": -1,
        "filename": "nleval-0.1.0.dev2.tar.gz",
        "has_sig": false,
        "md5_digest": "15ace688c2070fa1510af2506cef865d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 85074,
        "upload_time": "2022-09-06T03:32:55",
        "upload_time_iso_8601": "2022-09-06T03:32:55.766535Z",
        "url": "https://files.pythonhosted.org/packages/c8/5e/769a283a57820be423781b86a1a7c8bf080d1933c1786dbe85848026e309/nleval-0.1.0.dev2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0.dev3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "196e3442375fad1b9c9520463856e563d7db15e01ee017ba2b9a189e2bb5942f",
          "md5": "5501ffa3b8d5babcad73062a401f8300",
          "sha256": "32ad8fee8bca1038d4ec7577dae759729d1f078fee4a499ad5dc979c4fef7003"
        },
        "downloads": -1,
        "filename": "nleval-0.1.0.dev3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5501ffa3b8d5babcad73062a401f8300",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 99651,
        "upload_time": "2022-09-06T04:11:05",
        "upload_time_iso_8601": "2022-09-06T04:11:05.095450Z",
        "url": "https://files.pythonhosted.org/packages/19/6e/3442375fad1b9c9520463856e563d7db15e01ee017ba2b9a189e2bb5942f/nleval-0.1.0.dev3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5d3c711c56ab2aeabab108c802c8a12690f32d4d503c0b2e4d2cfb1865caf6cc",
          "md5": "44c9d2bd31370d4b999806b27c972fbf",
          "sha256": "184f64ecdea490c339d86d7e908a934d0b441f7a230f0f1da597acba6bdc8920"
        },
        "downloads": -1,
        "filename": "nleval-0.1.0.dev3.tar.gz",
        "has_sig": false,
        "md5_digest": "44c9d2bd31370d4b999806b27c972fbf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 84780,
        "upload_time": "2022-09-06T04:11:06",
        "upload_time_iso_8601": "2022-09-06T04:11:06.748937Z",
        "url": "https://files.pythonhosted.org/packages/5d/3c/711c56ab2aeabab108c802c8a12690f32d4d503c0b2e4d2cfb1865caf6cc/nleval-0.1.0.dev3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0.dev4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c254c5b7cb2d56c559e24daa60ed04c47cbe9c49b2646299d675d8663c5795bb",
          "md5": "a85dea2ce7cf362c4f4639699b2336a5",
          "sha256": "fa0785a283b88f82a797b49eb4d3017e8e29e9ca3a0b4986ef258499d861faf2"
        },
        "downloads": -1,
        "filename": "nleval-0.1.0.dev4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a85dea2ce7cf362c4f4639699b2336a5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 103135,
        "upload_time": "2022-09-12T19:47:31",
        "upload_time_iso_8601": "2022-09-12T19:47:31.152167Z",
        "url": "https://files.pythonhosted.org/packages/c2/54/c5b7cb2d56c559e24daa60ed04c47cbe9c49b2646299d675d8663c5795bb/nleval-0.1.0.dev4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bae34fdccc8a0486845c5ee0ef907b6f733831c61413f2d4d02a88d307c6763d",
          "md5": "3584a064facaaaf9077126acf182fbc7",
          "sha256": "b903ed9f148434529a29dd93e97d57df227f9b083ed3cb5a11551bcfdc8af344"
        },
        "downloads": -1,
        "filename": "nleval-0.1.0.dev4.tar.gz",
        "has_sig": false,
        "md5_digest": "3584a064facaaaf9077126acf182fbc7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 89680,
        "upload_time": "2022-09-12T19:47:32",
        "upload_time_iso_8601": "2022-09-12T19:47:32.820779Z",
        "url": "https://files.pythonhosted.org/packages/ba/e3/4fdccc8a0486845c5ee0ef907b6f733831c61413f2d4d02a88d307c6763d/nleval-0.1.0.dev4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0.dev5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "27c05f88eb37b4efa6f2ffa521c26e2109922966198de084005ad5969773694c",
          "md5": "07e6ba3c5c5fde6f04ba199358873dda",
          "sha256": "49193fd579277aafb66076ef89a0d8c604803c5eb9e905f8295ca1e9cf509430"
        },
        "downloads": -1,
        "filename": "nleval-0.1.0.dev5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "07e6ba3c5c5fde6f04ba199358873dda",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 115514,
        "upload_time": "2023-02-10T15:29:18",
        "upload_time_iso_8601": "2023-02-10T15:29:18.982307Z",
        "url": "https://files.pythonhosted.org/packages/27/c0/5f88eb37b4efa6f2ffa521c26e2109922966198de084005ad5969773694c/nleval-0.1.0.dev5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "855ea023f3d84eca267bb13fa31bce4816d49582f07529f94a762105b309bfd1",
          "md5": "b77d925404625f82eb9f976a95e9caa5",
          "sha256": "06c0a51454906af231847f5dfcb4575d1a7f037654917399b7c9ae546378852e"
        },
        "downloads": -1,
        "filename": "nleval-0.1.0.dev5.tar.gz",
        "has_sig": false,
        "md5_digest": "b77d925404625f82eb9f976a95e9caa5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 97640,
        "upload_time": "2023-02-10T15:29:20",
        "upload_time_iso_8601": "2023-02-10T15:29:20.827089Z",
        "url": "https://files.pythonhosted.org/packages/85/5e/a023f3d84eca267bb13fa31bce4816d49582f07529f94a762105b309bfd1/nleval-0.1.0.dev5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0.dev6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d0b193d30123349c5f4f5654568be82c424248b34f0af3c629083bdc2d0ea167",
          "md5": "0583616263557a51e6413e9367441fe2",
          "sha256": "995c9259092c54e8e894839552a4c5de6ee71dfef20d8932ee382f7f751bf568"
        },
        "downloads": -1,
        "filename": "nleval-0.1.0.dev6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0583616263557a51e6413e9367441fe2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 129942,
        "upload_time": "2023-02-13T16:19:40",
        "upload_time_iso_8601": "2023-02-13T16:19:40.289589Z",
        "url": "https://files.pythonhosted.org/packages/d0/b1/93d30123349c5f4f5654568be82c424248b34f0af3c629083bdc2d0ea167/nleval-0.1.0.dev6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3090098182704e1f4e96b376b8279ba5152e5579d334d956f18a6b1344583fc4",
          "md5": "097e6b7208e9c23de961ee66525b54d2",
          "sha256": "13ff7c91e8ba679fda35d2b89e373b812e948ec7c682b279c213ef0f6d8fd080"
        },
        "downloads": -1,
        "filename": "nleval-0.1.0.dev6.tar.gz",
        "has_sig": false,
        "md5_digest": "097e6b7208e9c23de961ee66525b54d2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 105608,
        "upload_time": "2023-02-13T16:19:42",
        "upload_time_iso_8601": "2023-02-13T16:19:42.024833Z",
        "url": "https://files.pythonhosted.org/packages/30/90/098182704e1f4e96b376b8279ba5152e5579d334d956f18a6b1344583fc4/nleval-0.1.0.dev6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0.dev7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4986c14ba0e361c1d1a5b78f759bcbfc3df77eb477b6a91501417d06d87cf786",
          "md5": "4745cacf02d6d586dc7cf9988d332bf1",
          "sha256": "5b0adbf56e603d1f2cafd222acbc39cbe97e056d88a2dc04de12043dc8ae6de4"
        },
        "downloads": -1,
        "filename": "nleval-0.1.0.dev7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4745cacf02d6d586dc7cf9988d332bf1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 135698,
        "upload_time": "2023-03-12T23:21:39",
        "upload_time_iso_8601": "2023-03-12T23:21:39.276633Z",
        "url": "https://files.pythonhosted.org/packages/49/86/c14ba0e361c1d1a5b78f759bcbfc3df77eb477b6a91501417d06d87cf786/nleval-0.1.0.dev7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4b768c04fa000c3a3c35ae1e00ee14009fe8beaeb254c8dabf216af53f53166b",
          "md5": "6b8b3f257442d446808c52e9f749a1d0",
          "sha256": "7236ac06de2cb9d3dc3122519afce49df6b2baf93fe91cfba8f6b34ad0e0dc97"
        },
        "downloads": -1,
        "filename": "nleval-0.1.0.dev7.tar.gz",
        "has_sig": false,
        "md5_digest": "6b8b3f257442d446808c52e9f749a1d0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 110583,
        "upload_time": "2023-03-12T23:21:41",
        "upload_time_iso_8601": "2023-03-12T23:21:41.076270Z",
        "url": "https://files.pythonhosted.org/packages/4b/76/8c04fa000c3a3c35ae1e00ee14009fe8beaeb254c8dabf216af53f53166b/nleval-0.1.0.dev7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4986c14ba0e361c1d1a5b78f759bcbfc3df77eb477b6a91501417d06d87cf786",
        "md5": "4745cacf02d6d586dc7cf9988d332bf1",
        "sha256": "5b0adbf56e603d1f2cafd222acbc39cbe97e056d88a2dc04de12043dc8ae6de4"
      },
      "downloads": -1,
      "filename": "nleval-0.1.0.dev7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4745cacf02d6d586dc7cf9988d332bf1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 135698,
      "upload_time": "2023-03-12T23:21:39",
      "upload_time_iso_8601": "2023-03-12T23:21:39.276633Z",
      "url": "https://files.pythonhosted.org/packages/49/86/c14ba0e361c1d1a5b78f759bcbfc3df77eb477b6a91501417d06d87cf786/nleval-0.1.0.dev7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4b768c04fa000c3a3c35ae1e00ee14009fe8beaeb254c8dabf216af53f53166b",
        "md5": "6b8b3f257442d446808c52e9f749a1d0",
        "sha256": "7236ac06de2cb9d3dc3122519afce49df6b2baf93fe91cfba8f6b34ad0e0dc97"
      },
      "downloads": -1,
      "filename": "nleval-0.1.0.dev7.tar.gz",
      "has_sig": false,
      "md5_digest": "6b8b3f257442d446808c52e9f749a1d0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 110583,
      "upload_time": "2023-03-12T23:21:41",
      "upload_time_iso_8601": "2023-03-12T23:21:41.076270Z",
      "url": "https://files.pythonhosted.org/packages/4b/76/8c04fa000c3a3c35ae1e00ee14009fe8beaeb254c8dabf216af53f53166b/nleval-0.1.0.dev7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}