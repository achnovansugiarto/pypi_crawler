{
  "info": {
    "author": "Yusuf Destan",
    "author_email": "yusuf.destan@vub.be",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "## OWI data 2 pandas\n\nOWI data 2 pandas is a package developed to ease the interaction with the OWI measurement data API.\n\n## Basic use\n\nThe most common use of the package is to query a fixed period of data:\n\n### Connection\n\nConnecting to the API happens through the API class:\n\n```\nfrom owi_data_2_pandas.io import API\n\nuser = 'user_name' # replace with you user name\npassword = 'your_password'  # Replace with your password\n\nroot = r\"http://10.0.0.138/api/v1/\"\n\nowi = API(api_root=root, username=user, password=password)\n```\n\n### Querying for measurement data\n\nOnce an instance of the API class is made, you can get a Pandas DataFrame with your data in it. To do so you'll need to specify both the period of interest, the location and the metrics you would need.\n\nIn the example below we will query the period from 15/11/2018 till 16/11/2018 for BBC01 wind speed data:\n\n```\nimport datetime\nfrom pytz import utc\n\ndt_start =  datetime.datetime(2018,11,15,tzinfo=utc)\ndt_stop  = datetime.datetime(2018,11,16,tzinfo=utc)\ndf = owi.query((dt_start, dt_stop), location='bbc01', metrics=['mean_BB_C01_windspeed'])\n```\n\nThis returns a Pandas DataFrame object.\n\n### Other useful queries\n\n#### Check user groups\n\nThe permissions of a user a organized in so-called user groups. You can see the user groups allocated to the user through:\n\n```\nowi.groups\n```\n\n#### Check available parameters/metrics for a location\n\nA list of available parameters/metrics for a given location can be obtained through:\n\n```\nowi.metrics(location='BBC01')\n```\n\n## Advanced use\n\n### Interaction with dw_database and DynaWindFrame\n\nThe current package was designed without the use of the OWI-lab internal package dw_database. However should a user want to import the results of the API into a dw_database.utils.DynaWindFrame then this is easily achieved:\n\n```\nfrom dw_database.utils import DynawindFrame, Turbine\n\ndwf = DynawindFrame(df=df, location=Turbine('BBC01'))\n```\n\n## Basic troubleshooting\n\nSome basic tips for initial troubleshooting:\n\n- Check that you can reach the server by sending a ping to the server\n- Check that you have the permissions (e.g. through the use of the groups query)\n- Check for typo's in your locations or metrics (e.g. use the metrics query)\n\n### Authors\n\nowi_data_2_pandas was written in the context of the efforts of the OWI-lab, a Belgian research effort to bring down the cost of offshore wind.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "owi-data-api-2-pandas",
    "package_url": "https://pypi.org/project/owi-data-api-2-pandas/",
    "platform": null,
    "project_url": "https://pypi.org/project/owi-data-api-2-pandas/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/owi-data-api-2-pandas/0.1.0/",
    "requires_dist": [
      "pandas (>=1.3.4,<2.0.0)",
      "python-dotenv (>=0.20.0,<0.21.0)",
      "requests (>=2.27.1,<3.0.0)"
    ],
    "requires_python": ">=3.8,<4.0",
    "summary": "OWI data 2 pandas is a package developed to ease the interaction with the OWI measurement data API",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13663249,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b2d935f7896c0ef88d038cc904b49e989a9d1ff7d640dc5d0fdeed5c33d0a01a",
          "md5": "5f4744ae377f813dcb31b11fab9c317d",
          "sha256": "3bafd4dec9c75d40efd367e450536d57ddac0b020f8635f4b85788551161afc3"
        },
        "downloads": -1,
        "filename": "owi_data_api_2_pandas-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5f4744ae377f813dcb31b11fab9c317d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 6223,
        "upload_time": "2022-04-29T09:48:52",
        "upload_time_iso_8601": "2022-04-29T09:48:52.734022Z",
        "url": "https://files.pythonhosted.org/packages/b2/d9/35f7896c0ef88d038cc904b49e989a9d1ff7d640dc5d0fdeed5c33d0a01a/owi_data_api_2_pandas-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b2d935f7896c0ef88d038cc904b49e989a9d1ff7d640dc5d0fdeed5c33d0a01a",
        "md5": "5f4744ae377f813dcb31b11fab9c317d",
        "sha256": "3bafd4dec9c75d40efd367e450536d57ddac0b020f8635f4b85788551161afc3"
      },
      "downloads": -1,
      "filename": "owi_data_api_2_pandas-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5f4744ae377f813dcb31b11fab9c317d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<4.0",
      "size": 6223,
      "upload_time": "2022-04-29T09:48:52",
      "upload_time_iso_8601": "2022-04-29T09:48:52.734022Z",
      "url": "https://files.pythonhosted.org/packages/b2/d9/35f7896c0ef88d038cc904b49e989a9d1ff7d640dc5d0fdeed5c33d0a01a/owi_data_api_2_pandas-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}