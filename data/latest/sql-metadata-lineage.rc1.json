{
  "info": {
    "author": "Praveen Kumar B",
    "author_email": "bpraveenkumar21@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# SQL Metadata Lineage\n### This package helps you to find first level lineage / column level dependency in a given query\n### Get SQL metadata (first level lineage) for most type of sql queries with inner sub-queries and other complex joins\n### Get column level base logic after analyzing query\n\n###### Sample input.sql\n```\n    SELECT investments.month_nm AS month_nm,\n           acquisitions.companies_acquired,\n           investments.companies_rec_investment\n      FROM (\n            SELECT acq.acquired_month_nm AS month_nm,\n                   COUNT(DISTINCT acq.company_permalink) AS companies_acquired\n              FROM tutorial.crunchbase_acquisitions acq\n             GROUP BY 1\n           ) acquisitions\n\n      FULL JOIN (\n            SELECT invst.funded_month_nm AS month_nm,\n                   COUNT(DISTINCT invst.company_permalink) AS companies_rec_investment\n              FROM tutorial.crunchbase_investments invst\n             GROUP BY 1\n           ) investments\n\n        ON acquisitions.month_nm = investments.month_nm\n\n```\n### table_map, column_map = sql_metadata_lineage.get_metadata(\"input.sql\")\n### Output text\n\n**** Database.Table alias mapping ****\n\nSubquery mapping alias: acquisitions\n\tacq -> tutorial.crunchbase_acquisitions\nSubquery mapping alias: investments\n\t\tinvst -> tutorial.crunchbase_investments\n\n\n**** Column, Database and Table mapping ****\n\nmonth_nm -> tutorial.crunchbase_investments.funded_month_nm\ncompanies_acquired -> count(DISTINCT tutorial.crunchbase_acquisitions.company_permalink)\ncompanies_rec_investment -> count(DISTINCT tutorial.crunchbase_investments.company_permalink)\n\n### table_map dictionary output\n{'acquisitions': {'acq': 'tutorial.crunchbase_acquisitions'},\n  'investments': {'invst': 'tutorial.crunchbase_investments'}}\n\n### column_map dictionary output\n{'month_nm': 'tutorial.crunchbase_investments.funded_month_nm',\n  'companies_acquired': 'count(DISTINCT tutorial.crunchbase_acquisitions.company_permalink)',\n  'companies_rec_investment': 'count(DISTINCT tutorial.crunchbase_investments.company_permalink)'}\n\n### Can directly provide sql query as input\n### table_map, column_map = sql_metadata.get_metadata('''\n```\n SELECT investments.month_nm AS month_nm,\n           acquisitions.companies_acquired,\n           investments.companies_rec_investment\n      FROM (\n            SELECT acq.acquired_month_nm AS month_nm,\n                   COUNT(DISTINCT acq.company_permalink) AS companies_acquired\n              FROM tutorial.crunchbase_acquisitions acq\n             GROUP BY 1\n           ) acquisitions\n\n      FULL JOIN (\n            SELECT invst.funded_month_nm AS month_nm,\n                   COUNT(DISTINCT invst.company_permalink) AS companies_rec_investment\n              FROM tutorial.crunchbase_investments invst\n             GROUP BY 1\n           ) investments\n\n        ON acquisitions.month_nm = investments.month_nm\n```\n### ''')\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/PraveenKumar-21/sql_metadata_lineage",
    "keywords": "SQL metadata,SQL parse metadata,Metadata lineage for SQL,SQL Lineage",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sql-metadata-lineage",
    "package_url": "https://pypi.org/project/sql-metadata-lineage/",
    "platform": "",
    "project_url": "https://pypi.org/project/sql-metadata-lineage/",
    "project_urls": {
      "Homepage": "https://github.com/PraveenKumar-21/sql_metadata_lineage"
    },
    "release_url": "https://pypi.org/project/sql-metadata-lineage/0.0.1/",
    "requires_dist": [
      "sqlparse"
    ],
    "requires_python": ">=3.6",
    "summary": "Package to get SQL query metadata(first level lineage), column -> database.table.actual_column mapping along with table alias mapping(alias -> database.table)",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10785823,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "39d94a1d7067035817309349374976a3d9da5eec72dd1c6944541c6534f4bcb8",
          "md5": "fc92a1ee467a6ecf373d6375a61e617f",
          "sha256": "1812ae773c0e41f7d14d24fa8ba2f82ff3c9b48ec6693ea51a90fe50b2bf4247"
        },
        "downloads": -1,
        "filename": "sql_metadata_lineage-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fc92a1ee467a6ecf373d6375a61e617f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5904,
        "upload_time": "2021-06-30T14:22:36",
        "upload_time_iso_8601": "2021-06-30T14:22:36.877454Z",
        "url": "https://files.pythonhosted.org/packages/39/d9/4a1d7067035817309349374976a3d9da5eec72dd1c6944541c6534f4bcb8/sql_metadata_lineage-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dec422f7972a7439b8955218ad4a076fa95ee0ddda7b3865553078935f08c290",
          "md5": "33fa0c07021fb67422440ea840a5d23c",
          "sha256": "d2dd6b39cad716bc74f9266c2c15db5cc3acdee2380c6493a06401c781f6c2f4"
        },
        "downloads": -1,
        "filename": "sql_metadata_lineage-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "33fa0c07021fb67422440ea840a5d23c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4802,
        "upload_time": "2021-06-30T14:22:38",
        "upload_time_iso_8601": "2021-06-30T14:22:38.830622Z",
        "url": "https://files.pythonhosted.org/packages/de/c4/22f7972a7439b8955218ad4a076fa95ee0ddda7b3865553078935f08c290/sql_metadata_lineage-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "39d94a1d7067035817309349374976a3d9da5eec72dd1c6944541c6534f4bcb8",
        "md5": "fc92a1ee467a6ecf373d6375a61e617f",
        "sha256": "1812ae773c0e41f7d14d24fa8ba2f82ff3c9b48ec6693ea51a90fe50b2bf4247"
      },
      "downloads": -1,
      "filename": "sql_metadata_lineage-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "fc92a1ee467a6ecf373d6375a61e617f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 5904,
      "upload_time": "2021-06-30T14:22:36",
      "upload_time_iso_8601": "2021-06-30T14:22:36.877454Z",
      "url": "https://files.pythonhosted.org/packages/39/d9/4a1d7067035817309349374976a3d9da5eec72dd1c6944541c6534f4bcb8/sql_metadata_lineage-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dec422f7972a7439b8955218ad4a076fa95ee0ddda7b3865553078935f08c290",
        "md5": "33fa0c07021fb67422440ea840a5d23c",
        "sha256": "d2dd6b39cad716bc74f9266c2c15db5cc3acdee2380c6493a06401c781f6c2f4"
      },
      "downloads": -1,
      "filename": "sql_metadata_lineage-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "33fa0c07021fb67422440ea840a5d23c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 4802,
      "upload_time": "2021-06-30T14:22:38",
      "upload_time_iso_8601": "2021-06-30T14:22:38.830622Z",
      "url": "https://files.pythonhosted.org/packages/de/c4/22f7972a7439b8955218ad4a076fa95ee0ddda7b3865553078935f08c290/sql_metadata_lineage-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}