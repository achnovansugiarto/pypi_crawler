{
  "info": {
    "author": "Tobias KÃ¶lling",
    "author_email": "tobias.koelling@physik.uni-muenchen.de",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# lltiler\nThe Lat-Lon Tiler is a small tool to create map tiles in spherical Mercator projection for the use with online map libraries like Leaflet, OpenLayers, Mapbox etc...\n\n## usage\nIn order to create tiles with lltiler, the user must provide a function which can compute colors for given pairs of latitude and longitude.\nA typical example would be a function which interpolates an image onto the given latitudes and longitudes.\nThis method is used to generate the most detailed level of tiles in a first step.\nIn an optional second step, multiple tile sets generated using `LLTiler` can be combined using the `overlay_tiles` utility.\nIn the last step, coarsened tiles are generated in successive steps from the most detailed level up to global scale using the `pyramid_step` utility.\nThe second and third step can be executed automatically using the `generate_tile_makefile` utility and GNU make.\n\n### 1 generate detailed tiles\nA user supplied function and a lat/lon bounding box must then be handed to the render method of the `LLTiler` object, which will then compute the necessary tiles and calls the given function repeatedly until all tiles have been generated.\nAn example is shown below:\n\n```python\nfrom lltiler import LLTiler\nimport matplotlib.pylab as plt\nimport matplotlib.colorbar\n\nlat_min = 16.\nlon_min = 45.\nlat_max = 19.\nlon_max = 48.\n\ncmap = plt.get_cmap(\"gray\")\n\ndef f(lat, lon):\n    rel_lat = (lat - lat_min) / (lat_max - lat_min)\n    rel_lon = (lon - lon_min) / (lon_max - lon_min)\n    valid = (rel_lat >= 0) & (rel_lat < 1) & (rel_lon >= 0) & (rel_lon < 1)\n    colors = cmap(rel_lat, bytes=True)\n    colors[..., -1] = 255 * valid\n    return colors\n\nt = LLTiler(\"temp_maps/gray\", size_hint=1000.)\nt.render(((lat_min, lon_min), (lat_max, lon_max)), f, show_progress=True)\n```\n\nNote that `show_progress=True` additionally requires the `tqdm` package.\n\n### 2 (optional) combine multiple overlapping tiles\nIf multiple tilesets have been generated using the first step and these tilesets should be combined to one tileset, the `overlay_tiles` utility can be used to paint multiple images on top of each other.\nThis is of course only useful if the image which is painted on top contains transparent regions where parts of the lower image can be seen through.\n\n```bash\noverlay_tiles <output_image> <input_image_1> <input_image_2> ... <input_image_n>\n```\n\n### 3 generate image pyramid\nTo generate coarser resolution images from detailed images, the `pyramid_step` utility can be used.\nIt takes up to four adjacent images (missing images are assumed to be entirely transparent) stacks these images together and generates a new image with half of the original resolution.\n\n```bash\npyramid_step <output_image> <top_left> <bottom_left> <top_right> <bottom_right>\n```\n\nMissing images must be denoted by a `-`.\n\n\n### automate steps 2 and 3\nThe `generate_tile_makefile` utility can be used to automate steps 2 and 3:\n\n```bash\ngenerate_tile_makefile <base_level> <input_folder> <output_folder> | make -f- -j\n```\n\n`base_level` must be the tile-level for which the tiles have been generated in step 1.\n`input_folder` must be a folder which includes one folder per input tileset.\n`output_folder` is the folder into which the resulting tiles should be written.\n\nNote that in the above command generates a makefile which is directly passed to make and then executed in parallel.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/d70-t/lltiler",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lltiler",
    "package_url": "https://pypi.org/project/lltiler/",
    "platform": "",
    "project_url": "https://pypi.org/project/lltiler/",
    "project_urls": {
      "Homepage": "https://github.com/d70-t/lltiler"
    },
    "release_url": "https://pypi.org/project/lltiler/0.0.2/",
    "requires_dist": [
      "numpy",
      "pillow"
    ],
    "requires_python": ">=3",
    "summary": "The Lat-Lon Tiler is a small tool to create map tiles in sphericalmercator projection for the use with online map libraries likeLeaflet, OpenLayers, Mapbox etc...",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8420052,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "706f5acc3a0b6dc68684ec282dcacd81c8a961e5b6248885bd77fbf8ce3a7b35",
          "md5": "bbf19882fb828edb4f4a7f9199dfafdb",
          "sha256": "defdeba10fe58429087589dcc76f64bce18dd43ddbae19fe9de5ec4c4e95d4b4"
        },
        "downloads": -1,
        "filename": "lltiler-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bbf19882fb828edb4f4a7f9199dfafdb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 7471,
        "upload_time": "2020-06-29T12:22:47",
        "upload_time_iso_8601": "2020-06-29T12:22:47.990808Z",
        "url": "https://files.pythonhosted.org/packages/70/6f/5acc3a0b6dc68684ec282dcacd81c8a961e5b6248885bd77fbf8ce3a7b35/lltiler-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8da65fd36e75fbf2c2f629d60f7d3d0f569d44cb9caf93d73bf07714ff5a6f36",
          "md5": "d2ec600bb9e6d3bc3a4a563323fbe144",
          "sha256": "52f9069b7b68907be159caff21ecd895e9e978f3d152bda002283b3bd04f5a15"
        },
        "downloads": -1,
        "filename": "lltiler-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d2ec600bb9e6d3bc3a4a563323fbe144",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 6706,
        "upload_time": "2020-06-29T12:22:49",
        "upload_time_iso_8601": "2020-06-29T12:22:49.946021Z",
        "url": "https://files.pythonhosted.org/packages/8d/a6/5fd36e75fbf2c2f629d60f7d3d0f569d44cb9caf93d73bf07714ff5a6f36/lltiler-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5dea7b427646befb2c768540b92017d731c61742f0b6b970eb25ba1d37c524a0",
          "md5": "f45544e38c8a96d7492bd0ce30ec23e9",
          "sha256": "a75c57dac084cd5d852e57d28518d0d3ce88abaf9be891a7e6bb2388a6ec650e"
        },
        "downloads": -1,
        "filename": "lltiler-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f45544e38c8a96d7492bd0ce30ec23e9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 8367,
        "upload_time": "2020-10-15T16:01:00",
        "upload_time_iso_8601": "2020-10-15T16:01:00.702415Z",
        "url": "https://files.pythonhosted.org/packages/5d/ea/7b427646befb2c768540b92017d731c61742f0b6b970eb25ba1d37c524a0/lltiler-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "94abce03ecab06314cef2600b680261fd7caa3aa14aa8a3488b105ea1add9b72",
          "md5": "51d52938162009a1dbcac6fab2ae84e4",
          "sha256": "2e0148cf29a41ee5c2cd72339a07b68c0712d5087dd29138c30f1a3b4a4ad518"
        },
        "downloads": -1,
        "filename": "lltiler-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "51d52938162009a1dbcac6fab2ae84e4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 24390,
        "upload_time": "2020-10-15T16:01:01",
        "upload_time_iso_8601": "2020-10-15T16:01:01.768813Z",
        "url": "https://files.pythonhosted.org/packages/94/ab/ce03ecab06314cef2600b680261fd7caa3aa14aa8a3488b105ea1add9b72/lltiler-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5dea7b427646befb2c768540b92017d731c61742f0b6b970eb25ba1d37c524a0",
        "md5": "f45544e38c8a96d7492bd0ce30ec23e9",
        "sha256": "a75c57dac084cd5d852e57d28518d0d3ce88abaf9be891a7e6bb2388a6ec650e"
      },
      "downloads": -1,
      "filename": "lltiler-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f45544e38c8a96d7492bd0ce30ec23e9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3",
      "size": 8367,
      "upload_time": "2020-10-15T16:01:00",
      "upload_time_iso_8601": "2020-10-15T16:01:00.702415Z",
      "url": "https://files.pythonhosted.org/packages/5d/ea/7b427646befb2c768540b92017d731c61742f0b6b970eb25ba1d37c524a0/lltiler-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "94abce03ecab06314cef2600b680261fd7caa3aa14aa8a3488b105ea1add9b72",
        "md5": "51d52938162009a1dbcac6fab2ae84e4",
        "sha256": "2e0148cf29a41ee5c2cd72339a07b68c0712d5087dd29138c30f1a3b4a4ad518"
      },
      "downloads": -1,
      "filename": "lltiler-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "51d52938162009a1dbcac6fab2ae84e4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3",
      "size": 24390,
      "upload_time": "2020-10-15T16:01:01",
      "upload_time_iso_8601": "2020-10-15T16:01:01.768813Z",
      "url": "https://files.pythonhosted.org/packages/94/ab/ce03ecab06314cef2600b680261fd7caa3aa14aa8a3488b105ea1add9b72/lltiler-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}