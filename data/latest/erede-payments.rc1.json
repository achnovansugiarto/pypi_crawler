{
  "info": {
    "author": "Lucas Rodrigues",
    "author_email": "lucasvemerick@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# SDK Python\n\nSDK de integração eRede\n\n# Utilizando\n\n## Autorizando uma transação\n\n```python\nfrom erede import *\n\nstore = Store(\"PV\", \"TOKEN\", Environment.sandbox())\n\ntransaction = Transaction(12345, \"Reference\")\ntransaction.credit_card(\"5448280000000007\", \"123\", \"12\", \"2020\", \"Fulano de Tal\")\ntransaction.set_additional(3456, 12)\n\ntry:\n    transaction = eRede(store).create(transaction)\n\n    if transaction.returnCode == \"00\":\n        print(\"Transação aprovada com sucesso. O tid é: {}\".format(transaction.tid))\nexcept RedeError as e:\n    print(\"Opz[{}]: {}\".format(e.code, e))\n```\n\nPor padrão, a transação é capturada automaticamente; caso seja necessário apenas autorizar a transação, o método `Transaction.capture_transaction(False)` deverá ser chamado com o parâmetro `False`:\n\n```python\nfrom erede import *\n\nstore = Store(\"PV\", \"TOKEN\", Environment.sandbox())\n\ntransaction = Transaction(12345, \"Reference\")\ntransaction.credit_card(\"5448280000000007\", \"123\", \"12\", \"2020\", \"Fulano de Tal\").capture_transaction(False)\n\ntry:\n    transaction = eRede(store).create(transaction)\n\n    if transaction.returnCode == \"00\":\n        print(\"Transação aprovada com sucesso. O tid é: {}\".format(transaction.tid))\nexcept RedeError as e:\n    print(\"Opz[{}]: {}\".format(e.code, e))\n```\n\n## Autorizando uma transação com MCC dinâmico\n\n```python\nfrom erede import *\n\nstore = Store(\"PV\", \"TOKEN\", Environment.sandbox())\n\ntransaction = Transaction(12345, \"Reference\")\ntransaction.credit_card(\"5448280000000007\", \"123\", \"12\", \"2020\", \"Fulano de Tal\")\ntransaction.mcc(\"LOJADOZE\", \"22349202212\", SubMerchant(\"1234\", \"Sao Paulo\", \"Brasil\"))\n\ntry:\n    transaction = eRede(store).create(transaction)\n\n    if transaction.returnCode == \"00\":\n        print(\"Transação aprovada com sucesso. O tid é: {}\".format(transaction.tid))\nexcept RedeError as e:\n    print(\"Opz[{}]: {}\".format(e.code, e))\n```\n\n## Autorizando uma transação com identificação de plataforma\n\n```python\nfrom erede import *\n\nstore = Store(\"PV\", \"TOKEN\", Environment.sandbox())\n\ntransaction = Transaction(12345, \"Reference\")\ntransaction.credit_card(\"5448280000000007\", \"123\", \"12\", \"2020\", \"Fulano de Tal\")\ntransaction.set_additional(1234, 12)\n\ntry:\n    transaction = eRede(store).create(transaction)\n\n    if transaction.returnCode == \"00\":\n        print(\"Transação aprovada com sucesso. O tid é: {}\".format(transaction.tid))\nexcept RedeError as e:\n    print(\"Opz[{}]: {}\".format(e.code, e))\n```\n\n## Autorizando uma transação IATA\n\n```python\nfrom erede import *\n\nstore = Store(\"PV\", \"TOKEN\", Environment.sandbox())\n\ntransaction = Transaction(12345, \"Reference\")\ntransaction.credit_card(\"5448280000000007\", \"123\", \"12\", \"2020\", \"Fulano de Tal\")\ntransaction.set_iata(\"code123\", \"250\")\n\ntry:\n    transaction = eRede(store).create(transaction)\n\n    if transaction.returnCode == \"00\":\n        print(\"Transação aprovada com sucesso. O tid é: {}\".format(transaction.tid))\nexcept RedeError as e:\n    print(\"Opz[{}]: {}\".format(e.code, e))\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/nugluke/erede-python",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "erede-payments",
    "package_url": "https://pypi.org/project/erede-payments/",
    "platform": "",
    "project_url": "https://pypi.org/project/erede-payments/",
    "project_urls": {
      "Homepage": "https://github.com/nugluke/erede-python"
    },
    "release_url": "https://pypi.org/project/erede-payments/1.0.1/",
    "requires_dist": [
      "requests"
    ],
    "requires_python": "",
    "summary": "A package to handle rede payments api",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10969399,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fd8bb89e05df841548f6026cb0abbd7510491ffd43c3d73a5d28be4cfe2031b5",
          "md5": "2a1a306ac08600da8abb5f39e39397ef",
          "sha256": "b94dc855c3783eb5d07f6e90d7fee680d18d26674669dbbbe31243a4dfd727c0"
        },
        "downloads": -1,
        "filename": "erede_payments-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2a1a306ac08600da8abb5f39e39397ef",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 15800,
        "upload_time": "2021-07-21T18:31:24",
        "upload_time_iso_8601": "2021-07-21T18:31:24.200778Z",
        "url": "https://files.pythonhosted.org/packages/fd/8b/b89e05df841548f6026cb0abbd7510491ffd43c3d73a5d28be4cfe2031b5/erede_payments-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef3d799ffef5a9e12560a1cf30efa2cd8ff5f784d8cd9845e4af1e9a1b2d6571",
          "md5": "c6011f3095c8c6fe701b39c569890d4a",
          "sha256": "11e996612a20cd277b52b52861bd368f9b7a1f9a768ed1ebe96b783233f7665a"
        },
        "downloads": -1,
        "filename": "erede payments-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c6011f3095c8c6fe701b39c569890d4a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8156,
        "upload_time": "2021-07-21T18:31:26",
        "upload_time_iso_8601": "2021-07-21T18:31:26.527548Z",
        "url": "https://files.pythonhosted.org/packages/ef/3d/799ffef5a9e12560a1cf30efa2cd8ff5f784d8cd9845e4af1e9a1b2d6571/erede%20payments-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fd8bb89e05df841548f6026cb0abbd7510491ffd43c3d73a5d28be4cfe2031b5",
        "md5": "2a1a306ac08600da8abb5f39e39397ef",
        "sha256": "b94dc855c3783eb5d07f6e90d7fee680d18d26674669dbbbe31243a4dfd727c0"
      },
      "downloads": -1,
      "filename": "erede_payments-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2a1a306ac08600da8abb5f39e39397ef",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 15800,
      "upload_time": "2021-07-21T18:31:24",
      "upload_time_iso_8601": "2021-07-21T18:31:24.200778Z",
      "url": "https://files.pythonhosted.org/packages/fd/8b/b89e05df841548f6026cb0abbd7510491ffd43c3d73a5d28be4cfe2031b5/erede_payments-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ef3d799ffef5a9e12560a1cf30efa2cd8ff5f784d8cd9845e4af1e9a1b2d6571",
        "md5": "c6011f3095c8c6fe701b39c569890d4a",
        "sha256": "11e996612a20cd277b52b52861bd368f9b7a1f9a768ed1ebe96b783233f7665a"
      },
      "downloads": -1,
      "filename": "erede payments-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "c6011f3095c8c6fe701b39c569890d4a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8156,
      "upload_time": "2021-07-21T18:31:26",
      "upload_time_iso_8601": "2021-07-21T18:31:26.527548Z",
      "url": "https://files.pythonhosted.org/packages/ef/3d/799ffef5a9e12560a1cf30efa2cd8ff5f784d8cd9845e4af1e9a1b2d6571/erede%20payments-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}