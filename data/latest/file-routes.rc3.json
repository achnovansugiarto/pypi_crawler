{
  "info": {
    "author": "",
    "author_email": "Johan Dahlin <jdahlin@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Flask",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Application Frameworks",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Typing :: Typed"
    ],
    "description": "## File Routes\nFile system based routing for Python Web Frameworks, currently supporting Django\n\nThis project has been inspired by the next.js routing.\n\n### Background\n\nThe purpose of this project is to investigate if there's a way to make it\neasier to add and write new views.\n\nThe path part of the URL was originally modelled after a unix path (/foo/bar/baz),\nwhere each component is separated by a '/' (slash). In a web framework you typically\nhave one or several files that contains views. Why not combine the both?\n\nTo be able to efficiently map a url path to a filename in Python, the following\nrules must be followed:\n\n1. All routes should go in one directory, by default called `routes/`.\n2. __init__.py files should be ignored in the path lookup as it\n3. If you want to map the root, create a file called `index.py`, a side-effect is\n   that it's not possible to create a route containing `index`\n\nFor instance:\n\n| URL path          | Filename                  |\n|-------------------|---------------------------|\n| `/`               | `routes/index.py`         |\n| `/home`           | `routes/home.py`          |\n| `/users/`         | `routes/user/index.py`    |\n| `/users/settings` | `routes/user/settings.py` |\n\nFor wildcards there are some differences between frameworks, but the general idea is:\n\n| URL path                   | Filename                            |\n|----------------------------|-------------------------------------|\n| `/<str:name>`              | `routes/[str_name].py`              |\n| `/<uuid:user_id>/settings` | `routes/[uuid_user_id]/settings.py` |\n| `/users/`                  | `routes/user/index.py`              |\n| `/users/settings`          | `routes/user/settings.py`           |\n\n\nFor large projects it's a good practice to write one view per file, to\navoid making it hard to find a specific view. If you follow that\nyou will have to duplicate the name of the view many times:\n\nFor example, in Django you would do something like this:\n\nIn `views/authenticate.py`:\n\n```python\nfrom django.http.request import HttpRequest\nfrom django.http.response import HttpResponse\n\n\ndef authenticate(request: HttpRequest) -> HttpResponse:\n    ...\n    return HttpResponse(...)\n```\n\nIn `urls.py`:\n\n```python\nfrom django.urls import path\n\nfrom views.authenticate import authenticate  # noqa\n\nurlpatterns = [\n    path(\"authenticate\", authenticate, name=\"authenticate\")\n]\n```\n\nIn the example above you end up duplicating the view name 7 times:\n\n| #   | Description                  | Code                                  |\n|-----|------------------------------|---------------------------------------|\n| 1   | The filename of the view     | `authenticate.py`                     |\n| 2   | The name of the view         | `def authenticate(...):`              |\n| 3   | The module name in urls.py   | `from views.authenticate import ...`  |\n| 4   | The function name in urls.py | `from views.... import authenticate`  |\n | 5   | The route url                | `path('authenticate', ...)`           |\n| 6   | The imported view            | `path(..., authenticate, ...)`        |\n| 7   | The route name               | `path(..., ..., name='authenticate')` |\n---------------------------------------------------------------------------------\n\nNote: While not recommended, you *can* avoid duplicating some of them if you don't follow best practices,\nfor instance using multiple views per file, using `*` imports or avoding `reverse(...)`.\n\n### Getting started\n\nTo use file-routes, you would currently need to use Django or Flask, support for more frameworks (e.g FastAPI) is planned.\n\nFor Django:\n```\npip install file-routes[django]\n```\n\nFor Flask:\n```\npip install file-routes[flask]\n```\n\nThat's it!\n\n### Django Tutorial\n\nIn urls.py:\n\n```python\n\nfrom django.urls import path\n\nfrom file_routes.frameworks.django import autodiscover\n\nurlpatterns = [\n path(\"\", autodiscover())\n]\n\n\n```\n\nBy default, autodiscover will scan for routes in the `routes` directory.\n\nCreate a new directory views in your django project and call it routes/authenticate.py:\n\n```python\nfrom django.http.request import HttpRequest\nfrom django.http.response import HttpResponse\n\ndef view(request: HttpRequest) -> HttpResponse:\n    ...\n    return HttpResponse(\"Hello World!\")\n```\n\nAnd that's it, you can now access this at via the URL: `/authenticate` and also via `reverse(\"authenticate\")`\n\nIf you rename the filename to `login.py`, the url and route name will automatically update.\n\n### Quick Video\n\nVideo script\n\n1. Create a new project in PyCharm\n2. Install via pip install\n3. Add to INSTALLED_APPS\n4. Create a new file\n5. Access the file via a web browser\n\n### Tests\n\n### Tutorial\n\n### Supported Python and Web framework versions\n\nCurrently only Django 4.1 and Python 3.11 has been tested, but it is\nlikely to work in older versions as well, with perhaps minimal tweaks.\n\n### System Checks Reference\n\nTo aid users and make it easier to debug common issues, file-routes extends the [System check framework](https://docs.djangoproject.com/en/4.1/ref/checks/) in Django\nand adds the following checks\n\n* `fileroutes.W001` view must be a function\n* `fileroutes.W002` view must be a class\n* `fileroutes.W003` view must be a subclass of django.views.View\n* `fileroutes.W004` cannot find view in module\n* `fileroutes.W005` invalid view name\n* `fileroutes.W006` route_kwargs must be a dict\n* `fileroutes.W007` route_name must be a str\n\nTo silence one or several system checks use the [SILENCED_SYSTEM_CHECKS](https://docs.djangoproject.com/en/4.1/ref/settings/#std-setting-SILENCED_SYSTEM_CHECKS) setting.\n\n### Settings\n\nThe default directory for the routes is called `routes`, this can be changed by adding this to your Django settings.py:\n\nIn settings.py:\n```python\nFILE_ROUTES_DIRECTORY = \"routes\"\n```\n\n## Roadmap\n\n### MVP\n\nThis is a list of tasks that should be finished before doing the first\nversion and announcing\n\n- [ ] unit tests: test errors\n- [ ] document\n- [ ] Error multiple views with the same name: foo.py/foo\n- [ ] common decorators (csrf_enforce etc) for all views\n\n### Future\n\n- [ ] lazy loading?\n- [ ] django: reload routes without manual restart\n- [ ] Serve pretty root page with HTML docs?\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "file-routes",
    "package_url": "https://pypi.org/project/file-routes/",
    "platform": null,
    "project_url": "https://pypi.org/project/file-routes/",
    "project_urls": {
      "repository": "https://github.com/jdahlin/file-routes"
    },
    "release_url": "https://pypi.org/project/file-routes/0.1.6/",
    "requires_dist": [
      "black==22.12.0; extra == 'dev'",
      "coverage[toml]<8.0,>=6.5.0; extra == 'dev'",
      "django-stubs>=1.13.1; extra == 'dev'",
      "isort<6.0.0,>=5.0.6; extra == 'dev'",
      "mypy==0.991; extra == 'dev'",
      "pytest-django==4.5.2; extra == 'dev'",
      "pytest<8.0.0,>=7.1.3; extra == 'dev'",
      "ruff==0.0.219; extra == 'dev'",
      "django>=4.0; extra == 'django'",
      "flask>=2.2; extra == 'flask'"
    ],
    "requires_python": ">=3.8",
    "summary": "File system based routing for Django & Flask",
    "version": "0.1.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16404866,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a652fb6a921e2db3a785a25cead519916ae5005aa36fe7ef75367eeb385e04bf",
          "md5": "8f60f2a946b3de2aba381158df16d68f",
          "sha256": "39ee68aa9fbb2484804bdabf978248bd5521409233253dbea7a9081a4468ab69"
        },
        "downloads": -1,
        "filename": "file_routes-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8f60f2a946b3de2aba381158df16d68f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 14179,
        "upload_time": "2023-01-12T14:05:46",
        "upload_time_iso_8601": "2023-01-12T14:05:46.109232Z",
        "url": "https://files.pythonhosted.org/packages/a6/52/fb6a921e2db3a785a25cead519916ae5005aa36fe7ef75367eeb385e04bf/file_routes-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ada9de8bd66cd30a5131c016c09f1bd33c3dc5ad31a823f1af25980f0a7686d4",
          "md5": "3777dd9ad7c6425a79f83b437a260c1a",
          "sha256": "d7e1982ababe990054741c29bfb65018b0cc1874fa5bca708166a74158ad3fa0"
        },
        "downloads": -1,
        "filename": "file_routes-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3777dd9ad7c6425a79f83b437a260c1a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 14185,
        "upload_time": "2023-01-12T14:14:45",
        "upload_time_iso_8601": "2023-01-12T14:14:45.958228Z",
        "url": "https://files.pythonhosted.org/packages/ad/a9/de8bd66cd30a5131c016c09f1bd33c3dc5ad31a823f1af25980f0a7686d4/file_routes-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "23209e39cac2a65cd877b22a85cfa5e1185fe140e12e822099ff2dbd3830ecbb",
          "md5": "aeee9dade553d13e269fc60fcac73223",
          "sha256": "4d7a248b58b0edf8df7e50f96be1d7c34768252f3a09a7039e44b8bff9e36a36"
        },
        "downloads": -1,
        "filename": "file_routes-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "aeee9dade553d13e269fc60fcac73223",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 15543,
        "upload_time": "2023-01-12T14:14:47",
        "upload_time_iso_8601": "2023-01-12T14:14:47.487531Z",
        "url": "https://files.pythonhosted.org/packages/23/20/9e39cac2a65cd877b22a85cfa5e1185fe140e12e822099ff2dbd3830ecbb/file_routes-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8cd3b9ce061caeef48590554e5cd64737ad972bc8eb000d3fd372ff8d361ec58",
          "md5": "66301c2178b1f38b13095a3eb5a5dd31",
          "sha256": "a7653f10408c9306eab9c7212894166a0ef6fac01cb423ec4efcf70813d033d3"
        },
        "downloads": -1,
        "filename": "file_routes-0.1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "66301c2178b1f38b13095a3eb5a5dd31",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 14216,
        "upload_time": "2023-01-12T14:21:47",
        "upload_time_iso_8601": "2023-01-12T14:21:47.025397Z",
        "url": "https://files.pythonhosted.org/packages/8c/d3/b9ce061caeef48590554e5cd64737ad972bc8eb000d3fd372ff8d361ec58/file_routes-0.1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8cd3b9ce061caeef48590554e5cd64737ad972bc8eb000d3fd372ff8d361ec58",
        "md5": "66301c2178b1f38b13095a3eb5a5dd31",
        "sha256": "a7653f10408c9306eab9c7212894166a0ef6fac01cb423ec4efcf70813d033d3"
      },
      "downloads": -1,
      "filename": "file_routes-0.1.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "66301c2178b1f38b13095a3eb5a5dd31",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 14216,
      "upload_time": "2023-01-12T14:21:47",
      "upload_time_iso_8601": "2023-01-12T14:21:47.025397Z",
      "url": "https://files.pythonhosted.org/packages/8c/d3/b9ce061caeef48590554e5cd64737ad972bc8eb000d3fd372ff8d361ec58/file_routes-0.1.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}