{
  "info": {
    "author": "Michael Marty",
    "author_email": "Michael Marty <mtmarty@arizona.edu>",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python",
      "Programming Language :: Python :: 3"
    ],
    "description": "UniDec: Universal Deconvolution of Mass and Ion Mobility Spectra \r\n=================================================================\r\n\r\nUniDec's Mission: Making it easier to do more with your data.\r\n\r\nUniDec is a Bayesian deconvolution program for deconvolution of mass spectra and ion mobility-mass spectra.\r\n\r\nIt was originally published in: [M. T. Marty, A. J. Baldwin, E. G. Marklund, G. K. A. Hochberg, J. L. P. Benesch, C. V. Robinson, Anal. Chem. 2015, 87, 4370-4376.](http://pubs.acs.org/doi/abs/10.1021/acs.analchem.5b00140)\r\n\r\nDetailed descriptions of the algorithm are provided in the paper and subsequent papers. Please cite us if you use UniDec in your research.\r\n\r\nPlease contact mtmarty@email.arizona.edu for questions, suggestions, or with any bugs.\r\n\r\n## Installation\r\n\r\nUniDec may be downloaded from [https://github.com/michaelmarty/UniDec/releases](https://github.com/michaelmarty/UniDec/releases).\r\n\r\nThis compiled version is compatible with 64-bit Windows. It a portable binary, so it does not need a conventional installation.\r\nJust unzip the folder, put it somewhere convenient, and click the GUI_UniDec.exe file in the folder to launch.\r\n\r\nTo use the PDF report generator, install [MikTex](https://miktex.org) and select install packages automatically from the installation options. You may need to add this to your system path so that PDFLatex is found from the command line. \r\n\r\n## Tutorial\r\n\r\nYou can watch a video tutorial on how to use UniDec here: [https://www.youtube.com/watch?v=e33JxgY6CJY](https://www.youtube.com/watch?v=e33JxgY6CJY).\r\n\r\n## Licensing\r\n\r\nUniDec is distributed under a completely open source license. Our hope is that this allows UniDec to be\r\nmore widely used. If you are interested in including UniDec in another academic or commercial software distribution, \r\nyou are welcome to email mtmarty@email.arizona.edu for more information. \r\n\r\nUniDec source code and compiled binaries are released under a modified BSD License as described below. Note, we ask\r\nthat you cite us in any publications. Quantitative citation metrics will help grant applications to support future development.\r\n\r\nBy downloading UniDec, you are agreeing to the UniDec and any third party licensing agreements and all terms therein. \r\n\r\n### UniDec License:\r\n\r\nCopyright (c) 2016, University of Oxford\r\n              2017-2023, University of Arizona\r\nAll rights reserved.\r\n\r\nRedistribution and use in source and binary forms, with or without\r\nmodification, are permitted provided that the following conditions are met:\r\n1. Redistributions of source code must retain the above copyright\r\n   notice, this list of conditions, and the following disclaimer.\r\n2. Redistributions in binary form must reproduce the above copyright\r\n   notice, this list of conditions, and the following disclaimer in the\r\n   documentation and/or other materials provided with the distribution.\r\n3. Neither the name of the copyright holders nor the\r\n   names of its contributors may be used to endorse or promote products\r\n   derived from this software without specific prior written permission.\r\n4. Any publications that result from use of the software should cite Marty et al. Anal. Chem. 2015. DOI: 10.1021/acs.analchem.5b00140. If UniDec is redistributed or incorporated into other software, it must be clearly indicated to the end user that UniDec is being used, and the request to cite Marty et al. Anal. Chem. 2015. DOI: 10.1021/acs.analchem.5b00140 must be passed on to the end user.\r\n\r\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ''AS IS'' AND ANY\r\nEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR CONTRIBUTORS BE LIABLE FOR ANY\r\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\r\n### Third Party Licenses\r\n\r\nWaters DLLs are distributed under the Waters MassLynxSDK EULA license. The Thermo RawFileReader DLLs are distributed under the RawFileReader.doc license. By downloading and using these DLLs, you are accepting those licenses and these terms. Thermo and Waters are indemnified, defended, and held harmless from any claims, including attorneys’ fees, related to the distribution or use of this software. Redistribution of Waters and Thermo libraries is restricted as described in those licenses. Info on other licenses are provided below.\r\n\r\n## UniDec Compatible File Types\r\n\r\nUniDec is built to open .txt files using [numpy.loadtxt](http://docs.scipy.org/doc/numpy-1.10.0/reference/generated/numpy.loadtxt.html). \r\n\r\nFor MS data, it opens a two-column either a tab or space delimited list of m/z and intensity values.\r\n\r\nFor IM-MS, it will open a three-column tab or space delimited list of m/z, arrival time (or bin), and intensity values. Sparse matrices are fine for IM-MS. \r\n\r\nIt is compatible with a text header at the beginning of the file. It will skip lines until it reaches the start of the data.\r\n\r\nFor Water's .raw files, UniDec is bundled with converters (CDCReader.exe) to \r\nconvert the data to .txt. It will compress the retention time dimension into a single spectrum. \r\nA single file can be opened directly, or multiple files can be converted using \r\nTools > Simple Batch Process Raw to Txt. For a fancier conversion such as extracting specific functions or scans, \r\ntry Tools > Raw to Txt Conversion Wizard. Note: rawreader.exe has been replaced with the MassLynxSDK 4.5 Python library. Water's converters will need MassLynxRaw.dll and/or cdt.dll in the same directory as the converter executables (the unidec/bin folder or the top directory). You can find these at: [https://interface.waters.com/masslynx/developers-area/sdks/](https://interface.waters.com/masslynx/developers-area/sdks/) if they aren't already there. \r\n\r\nAgilent .d files can be read as you would a text file on Windows thanks to [multiplierz](https://github.com/BlaisProteomics/multiplierz). Please cite them (http://onlinelibrary.wiley.com/doi/10.1002/pmic.201700091/abstract). It will compress all scans together unless parsed with MetaUniDec. \r\n\r\nThermo .raw files should be able to be opened natively on Windows. Thermo DLLs are included bundled with UniDec.\r\n\r\nFinally, many vendor formats can be converted mzML using [Proteowizard](http://proteowizard.sourceforge.net/). UniDec will open mzML file as if they are a text file, and this format should be cross platform.\r\nWe use [pymzML](http://pymzml.github.io/intro.html#general-information) for this. Please [cite them](https://www.ncbi.nlm.nih.gov/pubmed/22302572).\r\n\r\nIf you are a fan of mzXML, we recently added mzXML support courtesy of pyteomics (please cite: Goloborodko, A.A.; Levitsky, L.I.; Ivanov, M.V.; and Gorshkov, M.V. (2013) “Pyteomics - a Python Framework for Exploratory Data Analysis and Rapid Software Prototyping in Proteomics”, Journal of The American Society for Mass Spectrometry, 24(2), 301–304. DOI: 10.1007/s13361-012-0516-6 and Levitsky, L.I.; Klein, J.; Ivanov, M.V.; and Gorshkov, M.V. (2018) “Pyteomics 4.0: five years of development of a Python proteomics framework”, Journal of Proteome Research. DOI: 10.1021/acs.jproteome.8b00717).\r\n\r\n## MetaUniDec and UniChrom File Types and Importing\r\n\r\nWith MetaUniDec and UniChrom, everything is stored in a single HDF5 files. \r\nThe HDF5 Import Wizard allows you to import a range of different file types directly into a single HDF5 file for MetaUniDec.\r\nThermo RAW and mzML files are supported fully, which means that either the scan or time range can be specified.\r\nText and Waters RAW files are supported for file import. Text files must be a single m/z spectrum.\r\nWaters RAW files will have all scans summed into a single m/z spectrum upon import in MetaUniDec. \r\nThe File>Waters Conversion Wizard tool allows specific scans to be converted into text files for importing.\r\n\r\nIn addition to the Import Wizard, there are several Manual File options, which will allow you to create blank HDF5 \r\n(New File) and load data into it (Add File). Note, Add Data will sum all scans together, and Waters data is not supported.\r\nYou can select multiple files at once here. \r\nYou can also just copy the data from XCalibur or MassLynx and then use Add Data From Clipboard. \r\n\r\nThere are a few automated tools to parse single chromatograms directly into HDF5 files if you have all the data chromatograms \r\nwith predictable scans or times. You can batch process multiple files at once. \r\n\r\nHowever, if you want to look at chromatography data directly, we now recommend UniChrom, which will plot the TIC and allow you to select specific scan ranges either manually or automatically.\r\n\r\n\r\n## Installing the Source Code\r\n\r\nMost users will likely just want to run the compiled version. For those advanced users who have experience with Python,\r\nwe have provided the source code for the GUI and API. For more information, check out this [walkthrough](https://github.com/michaelmarty/UniDec/wiki/Installing-the-UniDec-Source-Code). Specific package requirements are outlined in the setup.py file.\r\n\r\nHowever, an experimental distribution is provide on PyPI. Using:\r\n\r\n    pip install unidec\r\n\r\nshould install UniDec on your computer and install any required dependencies. Try this out first and see if it works.\r\n\r\n### The UniDec Binaries\r\n\r\nAs described below, the Python code presented here relies on one critical binary, UniDec.exe. The binary should be in the /unidec_bin directory. \r\n\r\nIf you are interested in building the binary or modifying the source code, the code and Visual Studio project files\r\nare in unidec_src/UniDec. It is currently configured for Visual Studio Community 2022 with HDF5 1.12.2 and the Intel oneAPI compiler.\r\nIt can be easily compiled with other compilers but will show a significant performance loss without the Intel Compilers.\r\n \r\nIf you are interested in binaries for Mac and Linux, I would recommend building them yourself using the scripts in the unidec/src directory. UniDec compiles easily and works fine with these operating systems. I have provided some linux and mac version for you to test, but no promises they will work. Alternatively, you can use the [Docker container](https://hub.docker.com/r/michaeltmarty/unidec). \r\n\r\n## UniDec Documentation\r\n\r\nDocumentation is for the Python engine and GUI and can be found at http://michaelmarty.github.io/UniDecDocumentation/. Sorry, it's no great documentation, and I'm way behind on completing it. I'm still working on documenting some of the windows and extensions (including MetaUniDec and C code), but the core features should be here.\r\n\r\nMy goal is that this documentation will allow you to use the power of the UniDec python engine for scripting data analysis routines and performing custom analysis. Also, it will allow you to add new modules to the UniDec GUI.\r\n\r\n## UniDec Architecture\r\n\r\n\r\nUniDec is bilingual. The core of the algorithm is written in C and compiled as a binary.\r\nIt can be run independently as a command line program fed by a configuration file.\r\n\r\nThe Python engine and GUI serve as a very extensive wrapper for the C core. \r\n\r\nThe engine (engine.py) can be operated by independently of the GUI. This allows scripting of UniDec analysis for more complex and high-throughput analysis than is possible with the GUI.\r\nThe engine contains three major subclasses, a config, data, and peaks object.\r\n\r\nThe GUI is organized with a Model-Presenter-View architecture.\r\nThe main App is the presenter (GUniDec.py).\r\nThe presenter contains a model (the UniDec engine at engine.py) and a view (mainwindow.py). \r\nThe presenter coordinates transfer between the GUI and the engine.\r\n\r\nMetaUniDec has a similar structure with a presenter (MetaUniDec.py), engine (mudeng.py), and view\r\n (mudview.py). However, unlike conventional UniDec, MetaUniDec includes a number of additional features to process \r\n and analyze data. It relies less heavily on the Python API.\r\n\r\n## Getting Started with UniDec in Python\r\n\r\nHere is some sample code for how to use the engine. \r\n\r\n    import unidec\r\n    \r\n    file_name=\"test.txt\"\r\n    folder=\"C:\\\\data\"\r\n    \r\n    eng=unidec.UniDec()\r\n    \r\n    eng.open_file(file_name, folder)\r\n    \r\n    eng.process_data()\r\n    eng.run_unidec(silent=True)\r\n    eng.pick_peaks()\r\n\r\nIn reading the documentation, it is perhaps best to start with the unidec.UniDec class.\r\n\r\nYou can also run files for simple deconvolution directly from the command line with:\r\n\r\n    python -m unidec -f \"C:\\data\\test.txt\"\r\n\r\nThe main GUI class is Launcher. You can launch the Launcher from the command line with:\r\n\r\n    python -m unidec.Launcher\r\n\r\nOf course, using the pre-compiled version means you don't need to know Python at all and can just click the GUI_UniDec.exe icon to launch the program and get started. However you choose to do it, happy deconvolving!\r\n\r\n## Change Log\r\n\r\nv.6.0.1\r\n\r\n*Added Noise Removal Tool* to UniDec and UniDecCD. This allows you to select specific noise regions (common in UHMR data) and set them to 0. Try Tools > Select Noise Peaks and the checking \"Remove Noise Peaks\" in the Advanced Data Processing Parameters.\r\n\r\nUPP Changes: \r\n* Added \"Config m/z Peak FWHM\", \"Config m/z Peak Shape\", and \"Config Sample Mass Every\" parameters. If \"Config m/z Peak FWHM\" is specified as a float or integer, it will use that and skip the automatic peak width determination.\r\n* Enabled relative paths. \r\n* Added \"All\" or \"None\" keywords on \"Apply Fixed Mods\" and \"Disulfides Oxidized.\" \r\n* Added \"Config File\" keyword to load a specific config file.\r\n* More tolerant of nans and different file extensions\r\n* Added ability to select files to load to UPP.\r\n* Added \"Global Fixed Mod\" to apply the same float value to each pair.\r\n* Special Bispecific Antibody Pairing Calculations (see Help File)\r\n* Fixex issues bugs with use_converted, clear all, and resetting the config.\r\n\r\nFixed major bugs with 2D zooming and plotting. \r\n\r\nv.6.0.0\r\n\r\nMajor changes to code structure to enable PyPI distribution. Changed to more conventional Python package structure with unidec top directory. Renamed unidec_modules to modules, unidec_src to src, and unidec_bin to bin. Renamed some top level windows and moved all to main folder. For example, unidectools.py has been moved from modules to the top level and renamed as tools.py, and unidec.py has been renamed as engine.py. The good news is that you can now do `pip install unidec` and `python -m unidec.Launcher` to run UniDec from the command line.\r\n\r\n\r\nImproved command line tools. Added -o option for file output in unidec. Included new entry points and smoothed out command line interface. Now you can use unidec to lanuch python -m unidec in the scripts folder. Similarly, gunidec will launch python -m unidec.Launcher. If you have Python and the scripts folder configured in your system path, command line tools will be much easier to use. \r\n\r\nAdded a new mode to the Oligomer and Mass Tools, Site Mode. Here, you can specify specific binding sites and which potential species could be bound in that site. Any number of rows (species) or columns (sites) can be added as long as your memory can handle the possible combinations. Use 0s and 1s to incidate whether each species can be bound at each site. You can copy/paste from excel or open a CSV or XLSX file. \r\n\r\nAdded the first build of the **UniDec Processing Pipeline** tool to help with batch processing and analysis for large sample sets. More details to come.\r\n\r\nAdded new experimental HTML report generator. Found in File > Save Figure Presets. Test this out and let me know what you'd like to see in it.\r\n\r\nAdded a color plot option to the right click of the peak panel. Check it out!\r\n\r\nAdded FWHM and error to the Copy All Full right click option in the peak panel.\r\n\r\n**Changed default behavior for zooming such that it does not zoom out when plots are replotted.** This is a major change that I think will be more intuitive. If you want to zoom out, you can still click once on the plot as usual. \r\n\r\nRemoved the ability to manually integrate peaks. Now, only auto integration is allowed. If you want to have this added back in, let me know, but it seemed to be causing more trouble than it was worth.\r\n\r\nVarious bug fixes including fixing EPS export and bugs on Export2D. Fixed import of tab delimited files. Resized manual file menu. Improved window stretching in oligomer and mass tools. Broken plot peaks on UniDecCD. Bug on selecting alternative matches not propagating. Updated background color to blue on alternative matches to avoid confusion with RYG scheme. Fixed labeling bug with isolated match names. \r\n\r\nv.5.2.1\r\n\r\nUniDec and UniChrom now try to read the polarity from the data and set the adduct appropriately. Check that this is working!\r\n\r\nAdded right click for zoom on UniChrom TIC.\r\n\r\nAdded ability to label names from peak panel.\r\n\r\nAdded drag and drop for batch processing in UniChrom. \r\n\r\nSignificantly faster reading of some mzML files. \r\n\r\nFixes to reading in Agilent Files. May no longer need adminstrator access but not sure. Also, may work with Bruker TIMS data, but also not sure about this.\r\n\r\nFixes with reading some config files. Fixes with npz file reading.\r\n\r\nv.5.2.0\r\n\r\nMajor speed up to Plot Peaks command that simulates the isolated charge state distributions! This function is now built into the same C code used by UniDec, and is called by the UniDec.exe <file>_conf.dat -conv. It produces a binary file output that is read in and plotted. \r\n\r\nImprovements to matching speed and API. Added right click option to send item from oligomer list to common matches list. Added a bunch of glycans and stuff to the common masses table.\r\n\r\nImprovements to MetaUniDec. Create a merged template rather than just using the first spectrum. Improvements to speed by keeping file open for the whole session. Reduction in print outputs.\r\n\r\nImprovements to Imaging viewer, including bug fixes.\r\n\r\nAdded ability to calculate consecutive differences in peak masses.\r\n\r\nAdded continuous plot button for UCD m/z vs. mass. Also, fixed bug to improve plotting.\r\n\r\nImproved copy/paste from peak list.\r\n\r\nAdded ability to read text file exported from Chromeleon that have a bunch of commas in the numbers.\r\n\r\nAdded mzXML support courtesy of pyteomics (please cite: Goloborodko, A.A.; Levitsky, L.I.; Ivanov, M.V.; and Gorshkov, M.V. (2013) “Pyteomics - a Python Framework for Exploratory Data Analysis and Rapid Software Prototyping in Proteomics”, Journal of The American Society for Mass Spectrometry, 24(2), 301–304. DOI: 10.1007/s13361-012-0516-6 and Levitsky, L.I.; Klein, J.; Ivanov, M.V.; and Gorshkov, M.V. (2018) “Pyteomics 4.0: five years of development of a Python proteomics framework”, Journal of Proteome Research. DOI: 10.1021/acs.jproteome.8b00717)\r\n\r\nAdded Docker container and updated for command line usage of unidec.py.\r\n\r\nFixed bug with the Peak Width Tools in UCD. Fixed labeling issue on UniChrom. Added UCD as command launch item.\r\n\r\nv.5.1.1\r\n\r\nAdded Smashing (Ctrl+Double Right Click) to UCD.\r\n\r\nFixed deep bugs with HDF5 in C code by going back to 1.12.0. Reverted C code back to without _s functions for Mac and Linux compatibility. Fixed bugs with report generator.\r\n\r\nv.5.1.0\r\n\r\nAdded Intensity Threshold to MetaUniDec. Updated code throughout to allow more tolerance for empty data sets below threshold. Streamlined some print commands.\r\n\r\nPorted UniDecCD from Python to C, which speeds things up. The point smoothing is slightly different, but it should otherwise behave very similarly.\r\n\r\nAdded ability to label the peak areas on the deconvolved mass plot. Check out the right click menu in the peak list.\r\n\r\nFixed a bunch of warnings when compiling on VS2022. Updated to _s libaries for a lot of stdlib stuff. If this breaks compiling on Mac and Linux, let me know.\r\n\r\nAdded experimental MS Imaging tools.\r\n\r\nAdded tool for identifying alternative matches on the Oligomer and Mass Tools and for selecting alternate matches from the list. Explore right clicks on the match panel to test this out.\r\n\r\nSpeeding up a few things in Meta.\r\n\r\nFixed bug with multiple file dialog. Fixed bug with biopolymer calculator. Fixed bug with peak list. Fixed bug where it was crashing for people in certain regions (update to wxpython).\r\n\r\nv.5.0.5\r\n\r\n**Upgraded build** using the Intel oneAPI and Visual Studio 2022. Giving about a 2x speed boost!\r\n\r\nAdded new Gaussian fitting experimental features to DataCollector.\r\n\r\nFixed bug in build with PDF export.\r\n\r\nFixed bug with manual assignments.\r\n\r\nFixed CDMS example data showing up in other windows.\r\n\r\nv.5.0.4\r\n\r\nAdded Mass Limits to Mass Defect Tools.\r\n\r\nAdded Normalize Data option in UniDecCD.\r\n\r\nAllowed Waterfall plots to show text data on the y-axis.\r\n\r\nFixed bug in Thermo Importer. Fixed bugs with a few parameters in UCD.\r\n\r\nAdded ability to open .dmt and .i2ms files from STORI analysis.\r\n\r\nAdded experimental MassQL feature to select peaks that match certain queries. \r\n\r\nAdding experimental High Throughput Screen features in MetaUniDec.\r\n\r\nAdded ability to open npz files, which are much faster than txt and should help in custom scripts.\r\n\r\nv.5.0.3\r\n\r\nAdded m/z vs. mass plot for UniDecCD using a button in the Additional Plotting Parameters. Thanks to Sean Cleary for inspiration here.\r\n\r\nA few new experimental features in my attempt at real time deconvolution:\r\n\r\n* Added refresh on UCD.\r\n\r\n* Added autorefresh tool on UniDec and UniChrom. If you open a file that is currently collecting data, you can do real time deconvolution as the data is collected.\r\n\r\n* A command line argument will automatically launch to UniChrom and open the file argument that is provided. This means you can now set UniDec as the default app in Windows to open Raw files and other data format. If you do this, when you click the icon on the Thermo Exactive Tune Software, it will open UniDec as the default app. Still a work in progress, but kind of fun to play with. \r\n\r\nAdded new features to Extract 2D window. \r\n\r\nFinally figured out how to fix the bug for wxPython 4.1, but it involves modifying the source code. Contact me if you are interested in running it yourself. 4.1 will be reflected in the build.\r\n\r\nv.5.0.2\r\n\r\nAdded Batch Processing (via Tools menu or drag and drop) to UniDecCD.\r\n\r\nFixed bugs with STORI calibration in UCD.\r\n\r\nAdded export of text file for composite spectrum.\r\n\r\nv.5.0.1\r\n\r\n**Added Beta Support for STORI Folders** in UCD. Select the directory of CSV files under Tools. It will concatenate these and convert them into an npz file that you can open directly.\r\n\r\n**Added Beta Support for Agilent Drift Tube IM-MS**. To use this, convert your data to mzML using MSConvert and select the \"Combine Ion Mobility Scans\" option. We recommend using the package as gzip as well and setting the extension to \".mzML.gz\". Next, open UniDec and switch to Ion Mobility Mode under the Advanced Tab. Open the mzML file (drag and drop will work). Adjust the parameters in data processing to get it to look nice. The pusher should be set to 0. Set the voltage, temperature, and pressure to 0 in the Ion Mobility Parameters (with Linear Cell selected). Enger the tfix as the Dead Time and the Beta parameter below in the Drift Cell Length/Beta box. Adjust your parameters and hit deconvolve.\r\n\r\n**Added Support for SLIM TWIMS IM-MS**. Select SLIM poly3 or poly2 under the T-Wave Calibration Type. Calibration parameter 1 is the constant term with parameter 2 as the linear term and so on. \r\n\r\nAdded ability to export m/z values for peaks as _mzpeakdata.dat. Added headers to peakparams export text file.\r\n\r\nFixed bugs with UltraMeta.\r\n\r\nv.5.0.0\r\n\r\n**Added UCD: UniDec for Charge Detection-MS**. This major new window extends UniDec to CD-MS data. It builds on the existing UniDec GUI but uses a new deconvolution engine. The engine is written in Python and has GPU-acceleration available for anyone with CUDA 11.2 installed. \r\n\r\n**Added mzML ion mobility support**. Using MSConvert, select \"Combine ion mobility scans\". Then, launch UniDec and switch to IM mode by clicking Advanced > Switch to Ion Mobility Mode. UniDecIM should then be able to open ion mobility mzML files by drag and drop or File > Open File. It will create a text file next to the mzML file that you can open in the future. We recommend using the \"Compress when converting to .txt\" option to help speed up data processing by binning the data at this stage using the \"Bin Every\" parameter. \r\n\r\n**Improved DoubleDec** code that is integrated into the C code and more tolerant of different types of input.\r\n\r\nBegan adding experimental SLIM IM-MS calibration functions. Not fully implemented.\r\n\r\nAdded ability to open CSV files exported from Thermo Freestyle.\r\n\r\nCleaned up and refactored some code to fit UCD. Bug fixes.\r\n\r\nv.4.4.1\r\n\r\nAdded ability to open UniDec GUI from UniChrom selection and ability to right click a spectrum and add it to selection on UniChrom. \r\n\r\nAdded time limit option to UniChrom.\r\n\r\nAdded Subtract and Divide window to help visualize average monomer masses.\r\n\r\nAdded commandline options to the Python code to allow -f \"file.txt\" to automatically launch the file with the program. Using -u/--unidec, -m/--meta, or -c/--chrom will launch UniDec, MetaUniDec, and UniChrom respectively with the launcher.\r\n\r\nImplemented DoubleDec in C code (Jack Liu) rather than Python.\r\n\r\nEdited Waters Raw to Text Conversion Wizard to allow specification of extraction times rather than just scans.\r\n\r\nFixed bug with FPOP. Fixed bug with charge extraction in C code. Fixed bug with single scan Thermo files. Fixed bug with remove duplicates. \r\n\r\nAdded a command line warning when data might be approaching the memory limit.\r\n\r\nv.4.4.0\r\n\r\n**Added Scroll Bar to Controls!** People have been asking for this for a while, and I could never figure out how to get it to work. Finally, I managed to find the answer and added it with some buttons on the bottom to help expand and collapse key parts.\r\n\r\nIn a significant technical change, I switched all doubles in the C code to floats. For those who are interested, this sacrifices a little precision in calculations for improvements in speed and file size.\r\n\r\n**Added Fast Profile and Fast Centroid** options for UniChrom2 and MetaUniDec. These will help speed up deconvolutions and limit file sizes by not adding the massgrid and mzgrid to each spectrum. The animate features will not work, and other things might not be available, but the basic settings should be consistent.\r\n\r\n**Major speed improvements to large mzML data files** by using gzip to compress the data prior to opening it. Thanks to the pymzML team for this.\r\n\r\n**Added DScore to MetaUniDec and UniChrom**. This will now show the DScore for each peak. It calculates the DScore for each spectrum but then takes the average across all spectra weighted by the intensity of that peak in each spectrum. \r\nAlso, added Filter by Score to Experimental Menu.\r\n\r\n**Added Sliding Window to UniChrom**. You can now specify the width of the window (in minutes) and the offset between the start of the windows (in # of scans). The offset needs to be an integer greater than or equal to 1. Setting the window to 1 will start a window on each scan. Setting a window of 0 and an offset of 1 will give every scan separately, without averaging any of them together.\r\n\r\n**Hidden feature: Write data from plot to text file.** Clicking Ctrl+u on most plots will now give you a dialog to save the underlying data as a text file. Usually, this data was written somewhere behind the scenes, but this will give an easy way to export it.\r\n\r\nAdded DNA to Biopolymer Calculator.\r\n\r\nAdded a Mass Defect Comparison Tool to the Mass Defect Window.\r\n\r\nAdded normalization option to FFT window, which really improves the results.\r\n\r\nAdded \"Subtract Constant\" option to the UniDec baseline subtraction. The number in the box will specify the constant relative to the max intensity. For example, a value of 0.01 will subtract each intensity by 1% of the maximum.\r\n\r\nUniChrom2 manual selection now puts data out as text files in the UniDec Files and Figures folder rather than TestSpectra.\r\n\r\nBug fixes to data import functions.\r\n\r\nFixed bugs with figure saving and isolating peaks in UniChrom.\r\n\r\nv.4.3.0\r\n\r\n**Added UniChrom2: UniDec for LC/MS data**. UniChrom is built on top of the MetaUniDec engine and uses HDF5 files and many of the same core tools. The primary additions are the ability to parse chromatography data into HDF5, visualize and interact with LC/MS data, and manually select and quickly deconvolve parts of the chromatogram.\r\n\r\n**Added Data Reduction in MetaUniDec and UniChrom**. This now mirrors the behavior of UniDec for processing data to remove a fixed percentage of the lowest intensity data.\r\n\r\n**Added Native Combining of Waters Data**, which should dramatically speed up averaging Waters chromatograms by using the native MassLynx libraries.\r\n\r\n**Added Thermo RawFileReader libraries** to avoid having to install MSFileReader and to make opening native Thermo data faster and more robust.\r\n\r\nThe mass defect windows can now make horizontal lines from input mass values, not just input mass defect value. It will automatically calculate the mass defect from the input mass.\r\n\r\nMajor refactoring of the code to support UniChrom. For example, switched from local to absolute paths for most files in the engine.\r\n\r\nAdded Estimated Area extraction to DataCollector and MetaUniDec. Here, it uses the peak height and FWHM to estimate the area based on the peak shape.\r\n\r\nAdded experimental DoubleDec (Double Deconvolution) feature to the main UniDec window.\r\n\r\nFixed bug with spaces in oligomer names when importing ofiles.\r\n\r\nSwitched default native charge range to +/- 1000 from +/- 100 to work better with denatured data.\r\n\r\nOther bug fixes and minor changes.\r\n\r\nv.4.2.2\r\n\r\n**Added Open Recent Files** menu item.\r\n\r\n**Added Copy All Full** to copy paste a wide range of parameters from the peaks in the peak list. Let me know if there are additional parameters you would like added.\r\n\r\n**Major upgrades to file mzML and Thermo file imports**. The Thermo files should now open and average faster. Both types should now allow large files to open without crashing the memory.\r\n\r\nAdded ability to use a semicolon with the X values in the Data Collector to grab the sum of multiple states. Also, added a feature to Plot X Ranges to help to visualize the integration range.\r\n\r\nAdded time midpoint to the mzML parsing.\r\n\r\nAdded the version number to the config file for future use or reference.\r\n\r\nAdded experimental DoubleDec feature to Data Collector. \r\n\r\nAdded experimental report generator for the Native MS Guided Structural Biology Center.\r\n\r\nFixed bug with fits being plotted when process data is clicked. Fixed a number of additional bugs. Hopefully didn't create too many more...\r\n\r\nv.4.2.1\r\n\r\n**Added a Full button** to reset the m/z range to the full value.\r\n\r\n**Added menu item to \"Load Prior State for Current File\"**. This will load the past deconvolution results, so you don't have to click deconvolve again if you've already run the data. This now has taken the Ctrl + L keyboard shortcut, which was previously Load State. Load and Save State have been renames to Load and Save Zip State File for clarity.\r\n\r\nImproved reliability of auto peak width function for sparse data. \r\n\r\nFixed issues with plotting and deconvolution with interpolation between sparse data points.\r\n\r\nFixed issue with deleting spectra in MetaUniDec.\r\n\r\nFixed issue where markers were clipped on the edges of plots. This introduces some issues with single data points not being clipped when spectra are zoomed in. I'm working to fix this for future versions.\r\n\r\nUpdates to add fitting to the Mass Defect Extractor.\r\n\r\nv.4.2.0\r\n\r\n**Added Smart Transform**. From the beginning, UniDec has asked users to decide how it should perform the nonlinear transform from m/z to mass (Integration or Interpolation). Now, the Smart Transform decides for the user based on the density of the data. Where the data is sparse relative to the mass sampling, it will use interpolation to fill in the gaps. Where data is dense relative to the mass sampling, it will use integration to ensure that all the data in-between is accounted for. Smart Transform is located under the Additional Deconvolution Parameters tab and has now been made the default. In some preliminary testing, the Smart Transform showed more robust peak areas that were less sensitive to the mass sampling. The peak heights may change some, but the peak areas should be a lot more reliable (remember Ctrl+I to integrate). Note: you may not notice much difference, but using the Smart Transform should avoid some glitches that are hard to spot. Let me know how it goes!\r\n\r\n**Major improvements in 2D plotting speed** due to behind-the-scenes changes and optimzation of the plotting code.\r\n\r\n**Sparse data support**. Improvements to the algorithm to support sparse data, including just peak centroids. This fundamentally changes the underlying algorithm in minor ways. You may notice minor differences but likely will not. Let me know if it causes any problems.\r\n\r\nBetter handling of click and zoom at the edges of the plot. Now, it will default to the edge if you go off the plot. \r\n\r\nAdded drag and drop for loading the state from a zip file.\r\n\r\nUpgraded pymzml version for improved mzML compatibility and made mzML import more error tolerant.\r\n\r\nFixed issue with discrete plot and data that was non-uniformly sampled.\r\n\r\nFix to bug in calculating the error from the weighted standard deviation of charge state masses. \r\n\r\nFixed bug in Load and Save State with non-text files.\r\n\r\nFixed IM-MS plotting bugs.\r\n\r\nv.4.1.2\r\n\r\n**Added button in UniDec to turn off data normalization.** Note: the beta values will be automatically scaled to match this. \r\n\r\nRenamed the parameter ZScore in the UniScore calculation to CSScore. Added R squared to the UniScore calculation.\r\n\r\nAdded several experimental subtract and divide features. Tweaks to linear regression experimental feature. \r\n\r\nBug fixes and compatibility updates.\r\n\r\nv.4.1.1\r\n\r\nAdded right click feature to color peaks by their scores.\r\n\r\nImprovements to Data Collector module to fit protein oligomerization KDs and improve customization. \r\n\r\nAdded experimental Linear Regression features for analysis of repeating mass units.\r\n\r\nAdded experimental FPOP feature to print and copy average degree of oxidation.\r\n\r\nVarious syntax optimizations to address deprecation warnings and library updates.\r\n\r\nv.4.1.0\r\n\r\nIntroduced **UniScore**. This will automatically score the quality of your peaks and the overall deconvolution. Various experimental features were also added with this to visualize and filter the scores. Some updates to the scoring algorithm from Version 4.0.2 to improve it.\r\n\r\nA good heuristic for UniScore and DScore values is:\r\n\r\n80-100: A (Excellent)\r\n\r\n60-80: B (Good)\r\n\r\n40-60: C (Fair)\r\n\r\n20-40: D (Poor)\r\n\r\n0-20: F (Almost certainly noise)\r\n\r\nAdded **Calculator for getting masses from Protein/Peptide or RNA sequences**. This can be launched stand alone from the Experimental Menu or by right clicking on the Oligomer and Mass Tools Oligomer Builder box.  \r\n\r\nFixed bug to now allow protein-protein oligomerization KD values to be measured with the Data Collector. Find out more on the [UniDec Wiki Page](https://github.com/michaelmarty/UniDec/wiki/Fitting-KDs-with-Data-Collector).\r\n\r\nv.4.0.2\r\n\r\nSwitched UniDec to load processed data if it already exists.\r\n\r\n**Added Copy All Basic** to the peak panel, which copies the peak mass, height, and area to a format you can paste into excel. I can add additional copy modes easily now, so let me know what you would like to be able to copy out. \r\n\r\nAdded control of spectra color map on MetaUniDec.\r\n\r\nAdded Waterfall Plots on Experimental Menu in MetaUniDec.\r\n\r\nMany Bug Fixes: Sped up quick control responses by only doing auto peak width when needed. Fixed memory leak with HDF5 files. Fixed bugs slowing down file imports. Fixed bug with PDF Report Generator. Fix bug with isolate/ignore/repopulate/reorder in MetaUniDec.\r\n\r\nExperimental features for peak scoring. More to come in future releases. \r\n\r\nv.4.0.1\r\n\r\nAdded experimental support for **Agilent .D** files. Please test it and let me know how it works. You may need to run UniDec as an administrator first to get it to register all the DLLs correctly.\r\n\r\nImproved the peak panel by switching to white text when the background gets dark, adding commas to the masses (hopefully it will be easier to read), and **adding new right click features to label masses**. Also fixed text colors on MetaUniDec spectrum panel.\r\n\r\nMoved the Bin Every and Background Subtraction parameters from the main Data Processing tab to the Advanced Data Processing Parameters tab. **Added a Backround Subtraction check box** to turn on background subtraction with a curved background set to 100. \r\n\r\nAdded peak centroids, FWHM, and error between charge states to the _peakparams.dat output.\r\n\r\nAdded a check box to ignore zero values in UltraMeta and fixed the bar charts on UltraMeta to have the same colors as the main window. \r\n\r\nAdded the ability in UltraMeta to right click on a file and open it in MetaUniDec.\r\n\r\nAdded the ability to reorder spectra in MetaUniDec by editing the indexes. \r\n\r\nAdded new extraction choices for area of peaks above a threshold in UltraMeta and MetaUniDec.\r\n\r\nUltraMeta will now be tolerant of different files having different x values when creating error bars. It will only plot and average consensus data points. \r\n\r\nMass Defect plots will now switch to kDa from Da if appropriate.\r\n\r\nWhen adding data to HDF5 files, having CID_n or SID_n in the file name will import n as the collision voltage. \r\n\r\nFixed several bugs/issues to make everything run more smoothly.\r\n\r\nv.4.0\r\n\r\nAdded **Quick Controls** to the main panel. This should allow you to turn on and off features quickly without\r\nthose pesky numbers. The advanced controls are still available as before. \r\n\r\nA new experimental feature has been added based to use a SoftMax function (controlled by the parameter beta)\r\nto **suppress deconvolution artifacts**. The higher beta is, the more the algorithm with seek a single charge state assignment for each data point. Setting beta to zero will turn this off. This seems to work best when combined with other assumptions, such as peak width, point smoothing, and charge and mass smoothing. It also seems to work best when combined with background subtraction. Play around with it and let me know what you think. A minus flag applies the SoftMax to the entire data set rather than just a single column of the m/z vs charge matrix at once. \r\n\r\nChanged the Waters MS import from rawreader.exe to the MassLynxSDK 4.5. You may need to download new MassLynxRaw.dll files from Waters. I am working with Waters to get approval to distribute the DLL files bundled with UniDec, but it isn't final yet. Because I used the Waters API, I am not releasing the source code for the Waters Importer until I have that agreement in place. I will do this as soon as I can. In the mean time, Waters import features will work on the compiled binary version but not from the Python source code. You can keep using v.3.2 in the mean time. Stay tuned...\r\n\r\nAdded **Ctrl+C to copy out images from plots**. You should be able to paste these into other applications.\r\n\r\nAdded **Example Data**, which can be quickly loaded from the File menu. You can also add data to this by dropping your own files in the Example Data folder. It works in the same was as the custom presets.\r\n\r\nAdded **Data Reduction** data processing feature in UniDec for removing noise from large data sets. Basically, you set a percentage of the data you want to remove. UniDec then finds what intensity threshold is required to remove that much and takes out all data below that threshold. \r\n\r\nAdded **UniChrom** for quick viewing of chromatogram TICs. You can open mzML or Thermo .Raw files directly. Waters .Raw files can be opened by dragging and dropping it in the main window.\r\n\r\nAdded more functionality for UltraMeta.\r\n\r\nAdded drag and drop for _conf.dat files to UniDec to more easily import settings.\r\n\r\nAdjustments to the algorithm to improve speed and reliability. Switched build to Visual Studio 2019 and Intel Parallel Studio 19. \r\n\r\nChanges to the Gaussian blur functions for charge and mass, which are activated by negative flags for mass and charge smooth width.\r\n\r\nRemoved cross validation feature because I'm pretty sure no one was using it.\r\n\r\nv.3.2\r\n\r\nAdded a logo to the start screen.\r\n\r\nUpdate to the latest mzML specification.\r\n\r\nBuild update to Python 3.7 and latest libraries.\r\n\r\nBug fixes.\r\n\r\nv.3.1.1\r\n\r\nExpanded isotope mode to either output monoisotopic masses or average masses. \r\n\r\nAdded an experimental feature to plot average charge state for peaks in UniDec. \r\n\r\nBug fixes.\r\n\r\nv.3.1.0\r\n\r\nAdded new parameter for Point Width Smooth. \r\n\r\nChanged the right control panels to streamline the key parameters. \r\n\r\nUpdated the default parameters to make them more universal.\r\n\r\nAdded custom presets. You can drop any _conf.dat file in the Presets folder and it will add a custom preset for it. This folder can be organized into subfolders to collect your presets. A few custom presets from the Marty Lab are included. Feel free to send me yours if you would like them uploaded to the public distribution.\r\n\r\nNote: Several background changes to the algorithm (MS-only) have allowed the use of more general settings, such as a peak width of 0 (v.2.7.3) and a point smooth width of 1, which adds an additional smooth of +/- 1 data point. We hope that these defaults and changes to the layout will allow new users to more easily access the software. Power users will still have access to these parameters in the advanced settings windows. \r\n\r\nv.3.0.2\r\n\r\nModified the FFT window tool on MetaUniDec to be the dual FFT of each spectum rather than the sum. Indiviual spectra FFT windows are still available by right clicking the spectra in the list on the left. \r\n\r\nAdded button for Negative Ion Mode in Additional Deconvolution Parameters. This simply switches the adduct mass (typically a proton) to negative when clicked. \r\n\r\nBug fixes to MetaUniDec and UltraMeta.\r\n\r\nv.3.0.1\r\n\r\nAdded averagine isotope distribution calculator for peaks in Experimental. Thanks to Jim Prell for developing the Fourier isotope distribution calculation function.\r\n\r\nFixed bug with FWHM calculation.\r\n\r\nAdded in peak centroid for intensity within FWHM when FWHM is calculated.\r\n\r\nv.3.0.0\r\n\r\n**Updated everything to Python 3.6.**\r\n\r\nImprovements to Mass Defect window, including new extractor.\r\n\r\nv.2.7.3\r\n\r\nAdded experimental features for charge state smoothing when Charge or Mass Smooth Width is greater than 1. \r\nAdded experimental feature to allow for zero peak width.\r\nAdded Kendrick Mass Defect shortcut with Ctrl+K. Switched previous Ctrl+K shortcut (plot peaks) to Ctrl+J.\r\n\r\nv.2.7.2\r\n\r\nAdding registerInterfaces command in when multiplierz fails for Thermo file direct reads.\r\nFor this to work, UniDec may need to be run as an administrator. \r\n\r\nv.2.7.1\r\n\r\nFixed Bug in Waters Import Wizard and UltraMeta Mass Defect plots.\r\n\r\nv.2.7.0\r\n\r\nAdded 2D plots in Mass Defect tools for MetaUniDec.\r\n\r\nv.2.6.8\r\n\r\nFixed bug with matching spectra in Oligomer and Mass Tools.\r\n\r\nv.2.6.7\r\n\r\n*Space+Middle Click* on any line plot will now automatically add peak annotation. Simply Space+Middle Click again to turn it off.\r\nFor those on a laptop, Alt+Left Click will also toggle between labelling and not. \r\n\r\nv.2.6.6\r\n\r\n*Shift+Middle Click* on any plot will now spawn a window to specify the y range manually.\r\n*Alt+Middle Click* on any plot will now spawn a window to specify the x range manually.\r\nFixed legend in UltraMeta. \r\n\r\nv.2.6.5\r\n\r\nAdded *Ctrl+ Middle Click* on any plot window to bring up a dialog to change the rcParams from matplotlib (https://matplotlib.org/users/customizing.html).\r\nAdded -peaks flag in UniDec.exe to get peaks for each individual spectrum in an HDF5 file.\r\n\r\nv. 2.6.4\r\n\r\nA few bug fixes.\r\nAdded file name as metadata from Import Wizard.\r\nAdded automatic monomer dimer assign for the Wysocki Group.\r\nAdded annotated m/z and mass animations for MetaUniDec.\r\nAdded ability to save figures automatically from animation.\r\n\r\nv. 2.6.3\r\n\r\nAdded new Marker Selector to Peak List right click menu.\r\nFixed color selection bug.\r\n\r\nv. 2.6.2\r\n\r\nCool new plots on the Mass Defect Tools.\r\n\r\nv. 2.6.1\r\n\r\nAdded limits to the number of plots MetaUniDec will plot before it will plot only a representative number.\r\nThis significantly speeds up plots for very large data sets.\r\n\r\nSped up raw and mzML file imports.\r\n\r\nv. 2.6.0\r\n\r\nHDF5 Import Wizard Built for MetaUniDec. Waters can be easily imported directly through the HDF5 Import Wizard.\r\n\r\nUpdated Help Docs in MetaUniDec\r\n\r\nMoved UltraMeta to Analysis Menu from Experimental.\r\n\r\nAdded UltraMeta and HDF5 Import Wizard to Launcher.\r\n\r\nAdded threading and fixed bugs in UltraMeta.\r\n\r\nv. 2.5.0\r\n\r\nFits for FFT Window. Also, Moved FFT Window in UniDec to Analysis Menu from Experimental. \r\n\r\nv. 2.4.0\r\n\r\nUpdate to Ultrameta Data Collector to specify the location of the peaks explicitly.\r\n\r\nv. 2.3.0\r\n\r\nCompatibility upgrades to support the most recent version of many of the major packages. Upgrade to wxpython 4.0, matplotlib 2.1, and scipy 1.0.\r\n\r\nv. 2.2.0\r\n\r\nAdded **help documentation to MetaUniDec**. These should be useful for learning how MetaUniDec and its tools work.\r\n\r\nAdded importing multiple chromatograms by range of times or scans. \r\nThis allows you to compile certain timepoints/scans from multiple files into one HDF5 file easily.\r\n\r\nAdded errors for peaks. Three types of error have been added: FWHM (both), duplicates (MetaUniDec), and mean (UniDec).\r\n\r\nAdded bar graphs to visualize the different parameters for exponential decay, line, or sigmoid fitting in UltraMeta.\r\n\r\nAdded a compare tool to the FFT Window. Once clicked, you drag boxes around the regions you want to compare, and then hit the compare button again to plot the regions.\r\n\r\nAdjusted how baselines are calculated. UniDec has parameters added under Experimental->Additional Parameters which allow you to adjust the baseline calculation.\r\n\r\nAdded a **repack tool** to fix a known problem with HDF5 files. If you were to use Data Processing or UniDec Parameters that made the HDF5 very large, changing the parameters to values that would usually make the HDF5 small would not result in a shrinking of the HDF5 file. The Repack Directory tool will recursively repack all HDF5 files in a directory to their current size.\r\n\r\n\r\nv. 2.1.1\r\n\r\nAdded fitting to exponential decay, line, or sigmoid in MetaUniDec and UltraMeta.\r\n\r\nv. 2.1.0\r\n\r\n**Added support for native opening of Thermo Raw files** using multiplierz (https://github.com/BlaisProteomics/multiplierz).\r\nYou should now be able to open RAW files directly as you would a text file and to parse the chromatograms with MetaUniDec. \r\nOther file types from other vendors should be possible if you send me an example file to test.\r\n\r\nv. 2.0.0\r\n\r\n**MetaUniDec** added with a number of tools for batch processing. This is a whole new program dedicated to expand the UniDec core to high-throughput dataset processing and visualization. It is twice as fast as conventional batch processing with UniDec and combines the dataset into a single HDF5 file.\r\n\r\n**Launcher** added to manage the various tools. \r\n\r\n**UltraMeta** data collector added to analyze sets of datasets produced by MetaUniDec.\r\n\r\nNumerous behinds the scenes changes to simplify code and make compatible with MetaUniDec. Other bug fixes and improvements.\r\n\r\nv. 1.4.0\r\n\r\nAdded common masses table and features to Oligomer and Mass Tools.\r\n\r\nv. 1.3.1 \r\n\r\nExperimental peak fitting in mass defect window.\r\n\r\nv. 1.3.0\r\n\r\nAdded automatic baseline feature in crude form. \r\n\r\nUpdated preset configs and added a Nanodisc preset.\r\n\r\nRemoved zip save file creation from batch processing. Let me know if you would like this brought back, but it seems to be just creating unnecessary files.\r\n\r\nv. 1.2.5\r\n\r\nFixed glitch with speedy flag. Removed it entirely from Python code. Linflag will now import and overwrite the speedy option in UniDec.exe if present in config file.\r\n\r\nv. 1.2.4\r\n\r\nUpdated builds for MacOS and Linux. Updated commandline printout.\r\n\r\nv. 1.2.3\r\n\r\nImprovements to automatic peak width detection for nonlinear data.\r\n\r\nv. 1.2.2\r\n\r\nTweaks to the resolution settings to adjust for different monitor size. Slightly increased default figure size.\r\n\r\nMinor fixes and improvements.\r\n\r\nv. 1.2.1\r\n\r\n**Added Undo/Redo buttons and keyboard shortcuts to Experimental Menu.**\r\n\r\nNew extraction modes on DataCollector (50% and 10% Thresholded Center of Mass).\r\n\r\nFixed major bug in Load State, potential bug in PDF report, and other random bugs.\r\n\r\nv. 1.2.0\r\n\r\nLargely behind the scenes changes. Added HDF5 integration for C and Python but haven't committed to this as a save file yet.\r\n\r\nMerged C code for UniDecIM.exe into UniDec.exe, so there is a single executable for both 1D and 2D.\r\n\r\nA number of other bug fixes, updates, and subtle improvements.\r\n\r\nv. 1.1.0\r\n\r\n**Added Linear and Power Law calibrations for T-Wave IM-MS.** These are highly untested so proceed with caution. Please let me know how they work.\r\n\r\nLinear: Reduced CCS = Calibration Parameter 1 * Reduced Drift Time + Calibration Parameter 2\r\n\r\nPower Law: Reduced CCS = Calibration Parameter 1 * (Reduced Drift Time ^ Calibration Parameter 2)\r\n\r\n(For reference, the previous log calibration was and is)\r\nLog: Reduced CCS = Exp(Calibration Parameter 1 * log(Reduced Drift Time) + Calibration Parameter 2)\r\n\r\nDr. Tim Allison updated CDCReader.exe, which converts Waters Raw IMMS files into txt to perform more accurately with small bin sizes and with ending m/z cutoffs.\r\n\r\n**This version requires an updated binary of UniDecIM.exe to utilize the new calibrations. I am still working on the IP for this, so contact me if you need this binary.**\r\n\r\nv. 1.0.13\r\n\r\nAdded **log and square root intensity scales** under the advanced menu. Note, these don't save with the file but carry over from the session.\r\nAdded DPI control for figure outputs in save figure dialog.\r\nImproved GUI to better save user input.\r\nAdded an advanced menu item to **open the current save directory** in the file explore of the OS.\r\n\r\nv. 1.0.12\r\n\r\nAdded drag and drop in the data collector utility. Can drop either text files to add them to the list or a JSON save file to load it.\r\n\r\nv. 1.0.11\r\n\r\nThanks to Tim for bug fixes on CDCReader.exe (the binary that converts Water's IMMS files to text files).\r\n\r\nUpdates to UniDecIM.exe to change how the twaveflag is determined and handled. Will now accept multiple possible twaveflags to allow for alternative calibration strategies in the future. Contact me with your function of interest.\r\n\r\nUpdated contact email for MTM.\r\n\r\nv. 1.0.10\r\n\r\nAdded preset defaults for the **Exactive EMR** under \"High-resolution Native\". The previous high-resolution preset is now \"Isotopic Resolution\". \r\n\r\nv. 1.0.9\r\n\r\nSmall change in C code so that the peaks are now multiples of the mass bin size. Will need the updated [binary](http://unidec.chem.ox.ac.uk/).\r\n\r\nCleaned up single click mass calculations on the raw data plot so that a zoom out is not registered as a click. Control + click will register a click without zooming out.\r\n\r\nv. 1.0.8\r\n\r\n**Fixed Waters IM-MS conversion errors!** \r\nThanks to Tim Allison for teaming up to track down the source of these problems.\r\nIt should now work for any IM-MS file, but it will require 64-bit in everything.\r\n\r\nv. 1.0.7\r\n\r\nAdded a **mass tolerance on matching**. Now, matches that fail to come within a certain tolerance will be ignored. \r\n\r\nv. 1.0.6\r\n\r\nAdded an experimental window for grid deconvolution.\r\nThis is close to the original implementation of UniDec back when it was a Nanodisc-only script in Mathematica (see Marty, et. al. JASMS 2014).\r\nIt has come a long way, but it is still pretty crude.\r\n\r\nv. 1.0.5\r\n\r\nAdded directory name to file names window.\r\nAdded smarter labeling of plots in data collector.\r\nAdded ability to specify Variable 1 units in data collector and add this as an axis label.\r\nAdded support for viridis and other new color maps in matplotlib 1.5.0.\r\n\r\nv. 1.0.4\r\n\r\nFixed bugs in parallel processing for Data Collector Utility and Import Wizard.\r\n\r\nv. 1.0.3\r\n\r\nAdded Waters .raw file open and .raw to .txt batch conversion to drag and drop.\r\n\r\nv. 1.0.2\r\n\r\nBug fix on KD fit parallel processing.\r\n\r\nv. 1.0.1\r\n\r\nAdded **drag and drop** on the main window. Drag a single file into the plotting area to open it. Drag multiple files to run them in batch mode.\r\n\r\nv. 1.0\r\n\r\nTotal rewrite of the program to separate the GUI and engine. \r\nThe engine allows scripting of UniDec in Python without the GUI.\r\nAdded documentation and cleaned up code with major refactoring and simplification.\r\nMost changes are in the back end and will hopefully be invisible to people using the GUI.\r\n\r\n* New Features:\r\n    * Added **automatic peak width** determination with Ctrl + W or Tools > Automatic \r\n    * Added **\"Display Mass Differences\"** to right click menu in the peak panel. This will display the mass differences between each peak and the selected peak. Very useful (in my humble opinion).\r\n    * Left clicking on two peaks in the m/z spectrum will **solve for the mass from the two m/z values**.\r\n    * To allow left clicking on zoomed region, holding ctrl while clicking will prevent rescaling the axes.\r\n    * Right click on the m/z spectrum will determine the **max and min m/z value from the current zoom on the plot**.\r\n    * Zeroing the zoomed region is now a double right click on the m/z spectrum (useful for eliminating noise spikes).\r\n    * **Middle click** on any plot now opens a **save figure dialog** to allow you to save that specific figure.\r\n    * Sped up autocorrelation, added it directly to the Analysis menu, and added it to the Data Collector.\r\n    * Added \"Save Figures as .pdf\" as a save figure shortcut.\r\n    * Moved \"Get Spctrum from Clipboard\" to File menu and added shortcut at Ctrl + G.\r\n    * Moved Integrate/Interpolate option for converting from m/z to mass from the Advanced menu to the Additional Filter/Restraints control window.  \r\n    \r\n* From the last update:\r\n    * Report Center of Mass: Shows the center of mass for the zoomed region in the mass distribution (Plot 2)\r\n    * Plot by Charge: Peak are now charge states rather than mass species. Plot charge state distribution. Plots each charge state as a separate distribution in Plot 4.\r\n    * Plot Charge Offsets: Replot the Mass vs. Charge plot as a Mass vs. Charge Offset. Note: may be slow for large arrays.\r\n    * Auto Match Tools: Basically the same as clicking Oligomer and Mass Tools > Match to Mixed Oligomers > OK. Requires the oligomers to already be defined in the Oligomer and Mass Tools window.\r\n    * Kendrick Mass Analysis: Tools for high-mass mass defect analysis. The paper on this is in press.\r\n    * 2D Grid Extraction: Extract intensity values for predefined mass values in a 1D or 2D grid. \r\n\r\n* Experimental Features (Unpublished, untested, and unfinished):\r\n    * Calibration Window: Allows a polynomial calibration to be applied to the m/z data. It will not modify the data file or save the result.\r\n    * FFT Window: Views double FFT for windowed regions of the spectrum. I know this is weird, but this is a sneak peak into something we are working on.\r\n    * Color Plots: Plot specific regions of the spectrum in the color of the peak. This is common for native MS papers, but it can be a mess when there are a lot of overlapping peaks.\r\n    * Get Errors: Working on a automated error determination...\r\n\r\n\r\n## Additional License Info\r\n\r\nh5py: http://docs.h5py.org/en/stable/licenses.html\r\n\r\nwxpython: https://wxpython.org/pages/license/index.html\r\n\r\nnumpy: https://www.numpy.org/license.html\r\n\r\nscipy: https://www.scipy.org/scipylib/license.html\r\n\r\nmatplotlib: https://matplotlib.org/users/license.html\r\n\r\nnatsort: https://github.com/SethMMorton/natsort/blob/master/LICENSE\r\n\r\npymzml: https://github.com/pymzml/pymzML/blob/master/LICENSE.txt\r\n\r\nnetworkx: https://networkx.github.io/documentation/networkx-1.10/reference/legal.html\r\n\r\nmultiplierz: https://github.com/BlaisProteomics/multiplierz/blob/master/LICENSE\r\n\r\npypubsub: https://pypubsub.readthedocs.io/en/v4.0.3/about.html#license\r\n\r\nLicense-Zoombox and Zoomspan:\r\n\r\nCopyright (c) 2010, Duke University and the United States Department of\r\nVeterans Affairs. All rights reserved.\r\n\r\nRedistribution and use in source and binary forms, with or without\r\nmodification, are permitted provided that the following conditions are met:\r\n   * Redistributions of source code must retain the above copyright notice,\r\n     this list of conditions and the following disclaimer.\r\n   * Redistributions in binary form must reproduce the above copyright\r\n     notice, this list of conditions and the following disclaimer in the\r\n     documentation and/or other materials provided with the distribution.\r\n   * Neither the name of Duke University nor the United States Department\r\n     of Veterans Affairs may be used to endorse or promote products derived\r\n     from this software without specific prior written permission.\r\n\r\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ''AS\r\nIS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\r\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\r\nPURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS BE LIABLE\r\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\r\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\r\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\r\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\r\nLIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\r\nOUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\r\nDAMAGE.\r\n\r\nFor portions of this code, copyright and license information differs from\r\nthe above. In these cases, copyright and/or license information is inline.\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/michaelmarty/UniDec/archive/refs/tags/v.5.2.1.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/michaelmarty/UniDec",
    "keywords": "Mass Spectrometry,Ion Mobility,Deconvolution",
    "license": "UniDec License:  Copyright (c) 2016, University of Oxford 2017-2023, University of Arizona All rights reserved.  Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: 1. Redistributions of source code must retain the above copyright notice, this list of conditions, and the following disclaimer. 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions, and the following disclaimer in the documentation and/or other materials provided with the distribution. 3. Neither the name of the copyright holders nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission. 4. Any publications that result from use of the software should cite Marty et al. Anal. Chem. 2015. DOI: 10.1021/acs.analchem.5b00140. If UniDec is redistributed or incorporated into other software, it must be clearly indicated to the end user that UniDec is being used, and the request to cite Marty et al. Anal. Chem. 2015. DOI: 10.1021/acs.analchem.5b00140 must be passed on to the end user.  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ''AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  Note: The Waters MassLynx SDK and DLLs are distributed under a separate license. See Waters_MassLynxSDK_EULA.txt. Note: The Thermo RawFileReader code is distributed under a separate license. See RawFileReader.doc. ",
    "maintainer": "",
    "maintainer_email": "",
    "name": "UniDec",
    "package_url": "https://pypi.org/project/UniDec/",
    "platform": null,
    "project_url": "https://pypi.org/project/UniDec/",
    "project_urls": {
      "Download": "https://github.com/michaelmarty/UniDec/archive/refs/tags/v.5.2.1.tar.gz",
      "Homepage": "https://github.com/michaelmarty/UniDec"
    },
    "release_url": "https://pypi.org/project/UniDec/6.0.1.1/",
    "requires_dist": [
      "numpy (>=1.16)",
      "scipy (>=1.2)",
      "matplotlib (>=3.1)",
      "wxpython (>=4.0)",
      "pandas",
      "pymzml",
      "natsort",
      "networkx",
      "h5py",
      "pypubsub",
      "multiplierz",
      "massql",
      "pymsfilereader",
      "pyimzml",
      "pythonnet",
      "pyteomics",
      "lxml",
      "molmass",
      "rdkit",
      "mpld3"
    ],
    "requires_python": ">=3.7",
    "summary": "Universal Deconvolution of Mass and Ion Mobility Spectra",
    "version": "6.0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17277163,
  "releases": {
    "6.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8970cd98b68d16665ca5ce916f4810775afb4b19b6227177e699f537e04e0732",
          "md5": "9a9dc6952b6d9c519f24a5c506e05425",
          "sha256": "7733c19cea49784c5ea63dc4d9d6091cc065eb52d84b466c9fdaad334d9ee2a6"
        },
        "downloads": -1,
        "filename": "UniDec-6.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9a9dc6952b6d9c519f24a5c506e05425",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 94503807,
        "upload_time": "2023-03-07T00:06:36",
        "upload_time_iso_8601": "2023-03-07T00:06:36.928075Z",
        "url": "https://files.pythonhosted.org/packages/89/70/cd98b68d16665ca5ce916f4810775afb4b19b6227177e699f537e04e0732/UniDec-6.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0507df5b9ac516a1c9e9b3fe7ab9de8e20600f69476cd6125b60367b5f06a02b",
          "md5": "cfe336d02c0d1e2c3a75a1cb508182f8",
          "sha256": "0519b6b4f135fbbdbdb16c47ca1d3259513078f335e50fe883e2ef90f19f735e"
        },
        "downloads": -1,
        "filename": "UniDec-6.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "cfe336d02c0d1e2c3a75a1cb508182f8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 93599874,
        "upload_time": "2023-03-07T00:06:49",
        "upload_time_iso_8601": "2023-03-07T00:06:49.349616Z",
        "url": "https://files.pythonhosted.org/packages/05/07/df5b9ac516a1c9e9b3fe7ab9de8e20600f69476cd6125b60367b5f06a02b/UniDec-6.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.0.0a2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2d8c1ef9c0d1c3a7098cc8da04dc452df8da30ae06c6c7fe5c60d2bc223d3c39",
          "md5": "758b3a35e32585a99355099bf6c1809d",
          "sha256": "8d12f4b4d9891f94b6815d3a2bd80c87f5d7e2aac6ba669e3f0baf3ef32362b2"
        },
        "downloads": -1,
        "filename": "UniDec-6.0.0a2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "758b3a35e32585a99355099bf6c1809d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 94475091,
        "upload_time": "2022-12-29T20:05:17",
        "upload_time_iso_8601": "2022-12-29T20:05:17.314311Z",
        "url": "https://files.pythonhosted.org/packages/2d/8c/1ef9c0d1c3a7098cc8da04dc452df8da30ae06c6c7fe5c60d2bc223d3c39/UniDec-6.0.0a2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "875d69921bb0517c3c4f6d1ad19a2b27106d60c006717e3c99ef6d1f47302b1d",
          "md5": "e920222cdc252dd2172e7f6b49c01182",
          "sha256": "488bd29250540c8c57277485372cd596f2285f525afcaa55b50824b391080139"
        },
        "downloads": -1,
        "filename": "UniDec-6.0.0a2.tar.gz",
        "has_sig": false,
        "md5_digest": "e920222cdc252dd2172e7f6b49c01182",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 93570654,
        "upload_time": "2022-12-29T20:05:24",
        "upload_time_iso_8601": "2022-12-29T20:05:24.156110Z",
        "url": "https://files.pythonhosted.org/packages/87/5d/69921bb0517c3c4f6d1ad19a2b27106d60c006717e3c99ef6d1f47302b1d/UniDec-6.0.0a2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.0.0b2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1818ae87fa600a19a625aecd2517cf89003dca61ab2c9ea7c118c337c669bc5a",
          "md5": "58a2daffa0fab234019a534305bd36c1",
          "sha256": "a3bb4b01a1b59b4b5368955b8f9affeda0e4f9d0d7ac765de174bd1cce97d6c9"
        },
        "downloads": -1,
        "filename": "UniDec-6.0.0b2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "58a2daffa0fab234019a534305bd36c1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 94493722,
        "upload_time": "2023-02-15T21:01:49",
        "upload_time_iso_8601": "2023-02-15T21:01:49.961682Z",
        "url": "https://files.pythonhosted.org/packages/18/18/ae87fa600a19a625aecd2517cf89003dca61ab2c9ea7c118c337c669bc5a/UniDec-6.0.0b2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fe73711bccec1bd567502953b5537b27d1608390094e1ec2a3048aec93ea567a",
          "md5": "f9fb138c3c69c7a934a2067412946aaa",
          "sha256": "5c997136e90bcdf61f3b11404839369c235ccd443bcbd47bd5eeacbd6264c737"
        },
        "downloads": -1,
        "filename": "UniDec-6.0.0b2.tar.gz",
        "has_sig": false,
        "md5_digest": "f9fb138c3c69c7a934a2067412946aaa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 93594204,
        "upload_time": "2023-02-15T21:02:11",
        "upload_time_iso_8601": "2023-02-15T21:02:11.189557Z",
        "url": "https://files.pythonhosted.org/packages/fe/73/711bccec1bd567502953b5537b27d1608390094e1ec2a3048aec93ea567a/UniDec-6.0.0b2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.0.0b3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "444c4078712299014239a1c9f51403e8610ffe1acbde2ff8e220bafc5e5d48cd",
          "md5": "6d956a58a16b9d0d08d9a196f2724347",
          "sha256": "f5ca58cd801977e11b537e1fbd63b1e2ef823e49f8a88066cd99c07a373969f5"
        },
        "downloads": -1,
        "filename": "UniDec-6.0.0b3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6d956a58a16b9d0d08d9a196f2724347",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 94502395,
        "upload_time": "2023-03-02T23:59:37",
        "upload_time_iso_8601": "2023-03-02T23:59:37.917887Z",
        "url": "https://files.pythonhosted.org/packages/44/4c/4078712299014239a1c9f51403e8610ffe1acbde2ff8e220bafc5e5d48cd/UniDec-6.0.0b3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "afda7ef98dcba446cbb10142024d81b6cd3a2ceee4556864b1d0ff5794f31af5",
          "md5": "34e2351c056e7b03a7c9e0e4bd98dbd1",
          "sha256": "034dc390071ae7641a623cc32983dd0ef6d8f210fed63dddf8951314b7133e55"
        },
        "downloads": -1,
        "filename": "UniDec-6.0.0b3.tar.gz",
        "has_sig": false,
        "md5_digest": "34e2351c056e7b03a7c9e0e4bd98dbd1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 93599245,
        "upload_time": "2023-03-02T23:59:45",
        "upload_time_iso_8601": "2023-03-02T23:59:45.382201Z",
        "url": "https://files.pythonhosted.org/packages/af/da/7ef98dcba446cbb10142024d81b6cd3a2ceee4556864b1d0ff5794f31af5/UniDec-6.0.0b3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a20d016756ad465b1eacf0860975ff9a25c7b917a3a804b3717aaf13188c2e49",
          "md5": "e71decf17d502749ac0466dd6ceaf61e",
          "sha256": "e5e8400ccec45daa88462049ef3329646d4b24a3465024488b344439a60a4b9c"
        },
        "downloads": -1,
        "filename": "UniDec-6.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e71decf17d502749ac0466dd6ceaf61e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 94508534,
        "upload_time": "2023-03-13T17:19:50",
        "upload_time_iso_8601": "2023-03-13T17:19:50.305847Z",
        "url": "https://files.pythonhosted.org/packages/a2/0d/016756ad465b1eacf0860975ff9a25c7b917a3a804b3717aaf13188c2e49/UniDec-6.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7b872fd3cf69a308b8a4a4e9b835e2e89598c998a29d8c97f9f49daeefee9ce7",
          "md5": "de0f2d55e4d224cff6d1909143f2e002",
          "sha256": "c67dddd1fcdcf6c27d5b26d275ac5a535362a001c360006ecf07c2b747ea671a"
        },
        "downloads": -1,
        "filename": "UniDec-6.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "de0f2d55e4d224cff6d1909143f2e002",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 93601817,
        "upload_time": "2023-03-13T17:19:59",
        "upload_time_iso_8601": "2023-03-13T17:19:59.403463Z",
        "url": "https://files.pythonhosted.org/packages/7b/87/2fd3cf69a308b8a4a4e9b835e2e89598c998a29d8c97f9f49daeefee9ce7/UniDec-6.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3ac65cf9baf6ea734fe27b485d00c533b739d203e4315d469c638d296172bba8",
          "md5": "b0abe5dafbc95b729b95f203e30694f4",
          "sha256": "b23015d2644449973fe4714db2b01a9c6c3db44b76df3e1abd7210f74b8be430"
        },
        "downloads": -1,
        "filename": "UniDec-6.0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b0abe5dafbc95b729b95f203e30694f4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 94508557,
        "upload_time": "2023-03-13T21:35:20",
        "upload_time_iso_8601": "2023-03-13T21:35:20.135542Z",
        "url": "https://files.pythonhosted.org/packages/3a/c6/5cf9baf6ea734fe27b485d00c533b739d203e4315d469c638d296172bba8/UniDec-6.0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "faa5b83dbec4aada194d08e2a7d9fd9fe5243dc54b762567dda4888e84b242bc",
          "md5": "adf35b0c183b1fefc2c14965c58613c6",
          "sha256": "89c7467d5c91565a7598724dcd1c849026ec20bc25cbc842710c679e7ff091ca"
        },
        "downloads": -1,
        "filename": "UniDec-6.0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "adf35b0c183b1fefc2c14965c58613c6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 93601873,
        "upload_time": "2023-03-13T21:35:27",
        "upload_time_iso_8601": "2023-03-13T21:35:27.239148Z",
        "url": "https://files.pythonhosted.org/packages/fa/a5/b83dbec4aada194d08e2a7d9fd9fe5243dc54b762567dda4888e84b242bc/UniDec-6.0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3ac65cf9baf6ea734fe27b485d00c533b739d203e4315d469c638d296172bba8",
        "md5": "b0abe5dafbc95b729b95f203e30694f4",
        "sha256": "b23015d2644449973fe4714db2b01a9c6c3db44b76df3e1abd7210f74b8be430"
      },
      "downloads": -1,
      "filename": "UniDec-6.0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b0abe5dafbc95b729b95f203e30694f4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 94508557,
      "upload_time": "2023-03-13T21:35:20",
      "upload_time_iso_8601": "2023-03-13T21:35:20.135542Z",
      "url": "https://files.pythonhosted.org/packages/3a/c6/5cf9baf6ea734fe27b485d00c533b739d203e4315d469c638d296172bba8/UniDec-6.0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "faa5b83dbec4aada194d08e2a7d9fd9fe5243dc54b762567dda4888e84b242bc",
        "md5": "adf35b0c183b1fefc2c14965c58613c6",
        "sha256": "89c7467d5c91565a7598724dcd1c849026ec20bc25cbc842710c679e7ff091ca"
      },
      "downloads": -1,
      "filename": "UniDec-6.0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "adf35b0c183b1fefc2c14965c58613c6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 93601873,
      "upload_time": "2023-03-13T21:35:27",
      "upload_time_iso_8601": "2023-03-13T21:35:27.239148Z",
      "url": "https://files.pythonhosted.org/packages/fa/a5/b83dbec4aada194d08e2a7d9fd9fe5243dc54b762567dda4888e84b242bc/UniDec-6.0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}