{
  "info": {
    "author": "Fuzail Palnak",
    "author_email": "fuzailpalnak@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# TTAugment\n![GitHub](https://img.shields.io/github/license/cypherics/TTAugment)\n![Python](https://img.shields.io/badge/python-v3.6+-blue.svg)\n![Contributions welcome](https://img.shields.io/badge/contributions-welcome-orange.svg)\n![Downloads](https://pepy.tech/badge/ttaugment)\n\nPerform Augmentation during Inference and aggregate the results of all the applied augmentation to create a\nfinal output\n\n## Installation\n\n    pip install ttAugment\n\n\n## Supported Augmentation\nLibrary supports all [color](https://imgaug.readthedocs.io/en/latest/source/api_augmenters_color.html), \n[blur](https://imgaug.readthedocs.io/en/latest/source/api_augmenters_blur.html) and [contrast](https://imgaug.readthedocs.io/en/latest/source/api_augmenters_contrast.html)\ntransformation provided by [imgaug](https://imgaug.readthedocs.io/en/latest/) along with custom Geometric Transformation.\n\n1. Mirror : Crop an image to `crop_to_dimension` and mirror pixels to match the size of `window_dimension`\n2. CropScale : Crop an image to `crop_to_dimension` and rescale the image to match the size of `window_dimension`\n3. NoAugment : Keep the input unchanged\n4. Crop : Crop an image to `crop_to_dimension`\n5. Rot : Rotate an Image\n6. FlipHorizontal\n7. FlipVertical \n\n## Usage\n\nHow to use when test image is much **larger** than what the model requires, Don't worry the library has it covered,\nit will generate fragments according to the specified dimension, so the inference can be performed while applying augmentation.\n\n- window_size: Break the image into smaller images of said size \n- output_dimension: It must be greater the input image in order for the fragments to be restored back on the \nimage.\n\n```python\nimport numpy as np\nfrom tt_augment.augment import generate_seg_augmenters\n\ntransformation_to_apply = [\n  {\"name\": \"Mirror\", \"crop_to_dimension\": (256, 256)},\n  {\"name\": \"CropScale\", \"crop_to_dimension\": (256, 256)},\n]\n\nfor i in range(0, 10):\n  image = np.random.rand(512, 512, 3) * 255\n  image = np.expand_dims(image, 0)\n\n  # Load augmentation object for the image, this includes to break the image in smaller fragments.\n  tta = generate_seg_augmenters(\n    image=image,\n    window_size=(384, 384),\n    output_dimension=(1, 512, 512, 3),\n    transformation_to_apply=transformation_to_apply,\n  )\n\n  # Iterate over transformation_to_apply\n  for iterator, transformation in enumerate(tta):\n    # Iterate over individual fragments\n    for augmented_fragment in transformation.transform_fragment():\n      #     ---> transformed_fragment.shape = (1, 384, 384, 3) \n      # Inference steps for augmented fragment\n      # 1. perform image normalization\n      #     ---> normalised_image = image_normalization(augmented_fragment)\n      # 2. perform model prediction\n      #     ---> prediction = model.predict(normalised_image)\n      # 3. convert prediction to numpy with shape [batch, h, w, channel]\n      # 4. place the prediction fragment on its position in the original image\n      #     ---> transformation.restore_fragment(prediction)\n\n      transformation.restore_fragment(augmented_fragment)\n\n  # Aggregate the result for the input image over all applied augmentations\n  tta.merge()\n\n  output = tta.tta_output()\n```\n\n\n    \n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "Deep Learning Inference,PyTorch,Augmentations,TensorFlow",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ttAugment",
    "package_url": "https://pypi.org/project/ttAugment/",
    "platform": null,
    "project_url": "https://pypi.org/project/ttAugment/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/ttAugment/0.4.1/",
    "requires_dist": [
      "imgaug (==0.4.0)",
      "numpy (==1.19.1)",
      "image-fragment (==0.2.2)",
      "py-oneliner (==0.0.1)"
    ],
    "requires_python": "~=3.6",
    "summary": "Test Time Augmentations",
    "version": "0.4.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15265658,
  "releases": {
    "0.3.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1a214d8c696352d3d2c99691048af5ec2ad680e0019eb838282256cb96d95f79",
          "md5": "585b9e398e50007577bea83ee619d061",
          "sha256": "1afc244a353539e5ff66f1ded841a4929a253c3e0a308d364834e1ebb6a04ad4"
        },
        "downloads": -1,
        "filename": "ttAugment-0.3.3.tar.gz",
        "has_sig": false,
        "md5_digest": "585b9e398e50007577bea83ee619d061",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.6",
        "size": 7594,
        "upload_time": "2020-10-09T07:29:31",
        "upload_time_iso_8601": "2020-10-09T07:29:31.339769Z",
        "url": "https://files.pythonhosted.org/packages/1a/21/4d8c696352d3d2c99691048af5ec2ad680e0019eb838282256cb96d95f79/ttAugment-0.3.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "96159796b22077d2b2a3d7cc807735cb622036befca8df6146452417282d3856",
          "md5": "3ac3e6bd6b61ca2b10a5961ba02af482",
          "sha256": "7bf41086d5ad488d278579cb03b27b8178b3ad0cc907e23766205f710fd0ed2c"
        },
        "downloads": -1,
        "filename": "ttAugment-0.3.4.tar.gz",
        "has_sig": false,
        "md5_digest": "3ac3e6bd6b61ca2b10a5961ba02af482",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.6",
        "size": 7377,
        "upload_time": "2020-11-01T06:31:16",
        "upload_time_iso_8601": "2020-11-01T06:31:16.706503Z",
        "url": "https://files.pythonhosted.org/packages/96/15/9796b22077d2b2a3d7cc807735cb622036befca8df6146452417282d3856/ttAugment-0.3.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6f9986e715d7853da56ce6ef58c9eae082974720bb2760999030af0aaaab45bd",
          "md5": "0e1e0d3a2aaf72d9fd0b4f5ed9854b5e",
          "sha256": "7cb8d6e5d7d8864aee844f7fb942a32c9d77dcad1022a6eee3f6e80b0cee92c4"
        },
        "downloads": -1,
        "filename": "ttAugment-0.4.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0e1e0d3a2aaf72d9fd0b4f5ed9854b5e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.6",
        "size": 8552,
        "upload_time": "2022-09-30T09:24:48",
        "upload_time_iso_8601": "2022-09-30T09:24:48.333936Z",
        "url": "https://files.pythonhosted.org/packages/6f/99/86e715d7853da56ce6ef58c9eae082974720bb2760999030af0aaaab45bd/ttAugment-0.4.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a92c08eb87a01f63e0cc73ac2ff4b7b069a06270edd4c9dc4f15ad4cac30c68b",
          "md5": "040536cfd68328e5b76c97dde1210331",
          "sha256": "e60436f57e33f044f1fa47234e225e76543662439c5393311a4cd33bde832205"
        },
        "downloads": -1,
        "filename": "ttAugment-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "040536cfd68328e5b76c97dde1210331",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.6",
        "size": 7379,
        "upload_time": "2022-09-30T09:24:49",
        "upload_time_iso_8601": "2022-09-30T09:24:49.589906Z",
        "url": "https://files.pythonhosted.org/packages/a9/2c/08eb87a01f63e0cc73ac2ff4b7b069a06270edd4c9dc4f15ad4cac30c68b/ttAugment-0.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6f9986e715d7853da56ce6ef58c9eae082974720bb2760999030af0aaaab45bd",
        "md5": "0e1e0d3a2aaf72d9fd0b4f5ed9854b5e",
        "sha256": "7cb8d6e5d7d8864aee844f7fb942a32c9d77dcad1022a6eee3f6e80b0cee92c4"
      },
      "downloads": -1,
      "filename": "ttAugment-0.4.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0e1e0d3a2aaf72d9fd0b4f5ed9854b5e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": "~=3.6",
      "size": 8552,
      "upload_time": "2022-09-30T09:24:48",
      "upload_time_iso_8601": "2022-09-30T09:24:48.333936Z",
      "url": "https://files.pythonhosted.org/packages/6f/99/86e715d7853da56ce6ef58c9eae082974720bb2760999030af0aaaab45bd/ttAugment-0.4.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a92c08eb87a01f63e0cc73ac2ff4b7b069a06270edd4c9dc4f15ad4cac30c68b",
        "md5": "040536cfd68328e5b76c97dde1210331",
        "sha256": "e60436f57e33f044f1fa47234e225e76543662439c5393311a4cd33bde832205"
      },
      "downloads": -1,
      "filename": "ttAugment-0.4.1.tar.gz",
      "has_sig": false,
      "md5_digest": "040536cfd68328e5b76c97dde1210331",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "~=3.6",
      "size": 7379,
      "upload_time": "2022-09-30T09:24:49",
      "upload_time_iso_8601": "2022-09-30T09:24:49.589906Z",
      "url": "https://files.pythonhosted.org/packages/a9/2c/08eb87a01f63e0cc73ac2ff4b7b069a06270edd4c9dc4f15ad4cac30c68b/ttAugment-0.4.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}