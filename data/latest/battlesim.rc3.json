{
  "info": {
    "author": "Gregory Parkes",
    "author_email": "gregorymparkes@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Framework :: IPython",
      "Framework :: Jupyter",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.8",
      "Topic :: Scientific/Engineering"
    ],
    "description": ".. -* mode: rst -*-\n\nbattlesim: Modelling and animating simulated battles between units in Python.\n=============================================================================\n\n|pypi|_ |last_commit|_ |repo_size|_ |replit|_\n\n.. |pypi| image:: https://img.shields.io/pypi/v/battlesim\n.. _pypi: https://img.shields.io/pypi/v/battlesim\n\n.. |last_commit| image:: https://img.shields.io/github/last-commit/gregparkes/BattleSimulator\n.. _last_commit: https://img.shields.io/github/last-commit/gregparkes/BattleSimulator\n\n.. |repo_size| image:: https://img.shields.io/github/repo-size/gregparkes/BattleSimulator\n.. _repo_size: https://img.shields.io/github/repo-size/gregparkes/BattleSimulator\n\n.. |replit| image:: https://repl.it/badge/github/gregparkes/BattleSimulator\n.. _replit: https://repl.it/github/gregparkes/BattleSimulator\n\nWant to watch arrows move and attack each other? Then look no further than this \n**BattleSimulator** we provide! Users familiar with \n`Totally Accurate Battle Simulator <https://steamcommunity.com/app/508440>`__\nwill hopefully love this package as a lot of the basic ideas are derived from this.\n\n.. image:: simulations/main.gif\n    :alt: Image not found\n    :align: center\n\nMain Features\n-------------\n\nHere are just a few things that ``battlesim`` aims to do well:\n\n    - Formulate your simulation in a few lines of code from scratch.\n    - Scales up to thousands (and 10s of thousands) of units\n    - Flexibility: unit values are taken from a data file with flexible AI options\n    - Performance: Just-in-time compiling (JIT) can manage thousands of units\n    - Visualisation: Animations can be customized to change look-and-feel\n\nInstallation\n------------\n\n``battlesim`` requires the following `dependencies <environment.yml>`__:\n\n- python (>= 3.8)\n- numpy (>= 1.11.0)\n- pandas (>= 0.25.1)\n- matplotlib (>= 3.1.1)\n- numba (>= 0.45)\n\nWith the following for exporting the animation as a gif:\n\n- ffmpeg (>=4.2)\n\nThe following packages are not required but significantly improve the usage of this package.\nIf you are unfamiliar with the Jupyter project see `here <https://jupyter.org/>`__:\n\n- jupyter (1.0.0)\n\nFrom PyPI\n~~~~~~~~~\n\nIf you have working versions of the dependencies, similarly install\nusing `pip <https://pypi.org/project/battlesim/>`__ (version 0.3.7)::\n\n    pip install battlesim\n\nWe recommend updating the dependencies yourself using conda \nrather than through pip because conda manages the dependencies\nbetter, but pip will do it for you. See the ``environment.yml`` \nfile for dependencies.\n\nFrom Cloning the GitHub Repository\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nAlternatively if you are cloning this \n`GitHub repository <https://github.com/gregparkes/BattleSimulator>`__, use::\n\n    git clone https://github.com/gregparkes/BattleSimulator\n    conda env create -f environment.yml\n    conda activate bsm\n\nNow within the ``bsm`` environment run your Jupyter notebook::\n\n    jupyter notebook\n\nRunning Tests\n~~~~~~~~~~~~~\n\nYou will need the following for testing (soft requirement):\n\n- PyTest (5.1.2)\n\nThen perform the following within a console::\n\n    cd tests/\n    pytest -v\n\nHow to use: The Basics\n----------------------\n\nFirstly, check the requirements for using this simulator, of which most come\nwith the `Anaconda distribution <https://www.anaconda.com/>`__.\nIn addition you will need the **ffmpeg** video conversion package to generate\nthe simulations as animations.\n\nSecondly, you will need to import the package as:\n\n.. code-block:: python\n\n    import battlesim as bsm\n\nWe recommend using ``bsm`` as a shorthand to reduce the amount of writing out you\nhave to do. If you're using Jupyter notebook we also recommend:\n\n.. code-block:: python\n\n    import matplotlib.pyplot as plt\n    plt.rcParams[\"animation.html\"] = \"html5\"\n\nThe second line is important when you come to plotting the animations, as there\nare a number of issues with using it. All of the heavy lifting comes in the\n``bsm.Battle`` object that provides a neat interface for all of the operations\nyou would like to conduct:\n\n.. code-block:: python\n\n    bat = bsm.Battle(\"datasets/starwars-clonewars.csv\")\n\nYou can see that we have specified a 'dataset' from which all of\nthe unit roster can be drawn from; for specifics of how this file should\nbe oriented, see the documentation. We then need to specify \nunits to create to form an army. For example, in this Star Wars \nexample, we could specify a play-off between Clone troopers \nand B1 battledroids.\n\nThis is achieved using a meta-information object called a ``Composite``, which holds\na group of units of a given type:\n\n.. code-block:: python\n\n    armies = [\n        bsm.Composite(\"B1 battledroid\", 70),\n        bsm.Composite(\"Clone Trooper\", 50)\n    ]\n    bat.create_army(armies)\n\nwhich internally creates an efficient numpy matrix, \nready to perform the simulation. This is stored in the ``battle.M_``\nobject, a heterogenous ``ndarray`` element. By default, each Composite spawns\non top of each other using a gaussian distribution at (0, 0). When initialising\nthe Composite we can specify a new sampling using the ``Sampling`` class or\noverride directly:\n\n.. code-block:: python\n\n    bat.composition_[1].pos = bsm.Sampling(\"normal\", 10., 2.)\n\nAnd now to simulate (note that the first time this executes will be painfully slow\nas JIT compiles a lot of code):\n\n.. code-block:: python\n\n    F = bat.simulate()\n\nBy default, the simulation function will make a record of\nimportant parameters at each step and then return these \nparameters as a heterogenous ``ndarray`` at the end \nin *long form* (with a cached element called ``sim_``). \nIn addition, because you want to see what's going on - we can \nanimate the frames using this convenience method within\nthe Battle object:\n\n.. code-block:: python\n\n    bat.sim_jupyter()\n\nThe result is as follows.\n\n.. image:: simulations/sim2.gif\n    :alt: Image not Found\n    :align: center\n\nHere ``sim_jupyter`` treats each unit object as a quiver \narrow in 2-d space (position and direction facing it's enemy).\nThe targets should move towards each other and attempt to kill\neach other. Dead units are represented as crosses **'x'** on the map. \n\n.. image:: images/quiver1.svg\n    :alt: Image not found\n    :align: center\n\nThe rest is for you to explore, tweak and enjoy watching arrows\nmove towards each other and kill each other. We have \nextensive `examples <https://github.com/gregparkes/BattleSimulator/tree/master/examples>`__\nto look at within this repository.\n\nOne step further: Repeated runs\n-------------------------------\n\nIf you're interested in seeing how each team fare over\nmultiple runs (to eliminate random biases), then ``bsm.Battle``\nobjects once defined, contain a ``simulate_k()`` method, \nwhere ``k`` specifies the number of runs you wish to complete.\nUnlike ``simulate()`` by itself, it does not \nreturn a ``ndarray`` of frames, but rather the \nnumber of units from each team left standing at each iteration:\n\n.. code-block:: python\n\n    runs = battle.simulate_k(k=40)\n\nThis is the beginning of creating an interface similar \nto Machine Learning, whereby the outcome can be a \nclassification (team) or regression \n(number of units surviving) target, and the unit \ncompositions, aspects of the engine etc., can be inputs.\n\nNew in v0.3.6\n-------------\n\nThere are a number of exciting changes in this `current update <CHANGELOG.md>`__, including:\n\n- Introduction of **Terrains**. This is a major expansion giving 3D pseudodepth to animated battles. Depth now influences movement speed of units, with terrain penalties applied (up to 50%) on higher hills. They also increase range for units on hills and increase damage when firing downhill on an enemy unit.\n- Introduction of *armor*. Armor acts as another health buffer to protect units from harm.\n\nTeaching series\n---------------\n\nAs well as a fully-fledged package simulator, you can find\n`teaching material <https://github.com/gregparkes/BattleSimulator/tree/master/teaching>`__ in Jupyter \nnotebook form within the ``teaching/`` subfolder, that takes \nusers through the development process of this package, compares\nand contrasts Object-Oriented (OO) implementations to numpy-esque \nimplementations, their performance, plotting, animations and more. \nWe hope you find this material interesting and will aid as you use \nthe package and possibly develop packages of your own in the future.\n\nMaterial covered so far:\n\n1. Basics, including importing the dataset, the ``Unit`` class, basic simulation\n2. Improving the ``Unit`` class and simulation early-stopping for performance.\n3. Plotting simulations and performance-driven development\n\nThis is still in active development retracing the steps of the project.\nAll legacy functions associated with this can be found in the *battlesim/legacy.py* document.\n\nFuture plans\n------------\n\n* Include AI-based behavior that makes use of height (to occupy hills)\n* Develop 'defensive' AI.\n\nEnsure that any use of this material is appropriately referenced \nand in compliance with the `license <LICENSE.txt>`__.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/gregparkes/battlesim",
    "keywords": "",
    "license": "GPL-3.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "battlesim",
    "package_url": "https://pypi.org/project/battlesim/",
    "platform": null,
    "project_url": "https://pypi.org/project/battlesim/",
    "project_urls": {
      "Homepage": "https://github.com/gregparkes/battlesim"
    },
    "release_url": "https://pypi.org/project/battlesim/0.3.7/",
    "requires_dist": [
      "numpy (>=1.11.0)",
      "pandas (>=0.25.1)",
      "matplotlib (>=3.1.1)",
      "numba (>=0.45)"
    ],
    "requires_python": ">=3.8",
    "summary": "A python package for simulating battles and visualizing them in animation",
    "version": "0.3.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14316380,
  "releases": {
    "0.3.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ceeaa799f00c77b9d50f16e7a6deb490102e8d1edb989f2432183b0c840cdf5d",
          "md5": "01087198f8f0a9f518454acf31bb1f92",
          "sha256": "c49ea51c5c06e87e58887e33cd1df6ef59caf7b1e06ba937f381942bcf45dc73"
        },
        "downloads": -1,
        "filename": "battlesim-0.3.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "01087198f8f0a9f518454acf31bb1f92",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 49175,
        "upload_time": "2019-10-15T16:03:08",
        "upload_time_iso_8601": "2019-10-15T16:03:08.543172Z",
        "url": "https://files.pythonhosted.org/packages/ce/ea/a799f00c77b9d50f16e7a6deb490102e8d1edb989f2432183b0c840cdf5d/battlesim-0.3.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4c535c6ccd2e81c1aa10bd14611773c9c3ca7eb687b87740e3188c339c5e592d",
          "md5": "29d752b6a8188d73c42c8985e6006c8a",
          "sha256": "41152744a8173acbf1bca8dcb73ef162bd35e629aeac4c5168809c6ceae6c167"
        },
        "downloads": -1,
        "filename": "battlesim-0.3.5.tar.gz",
        "has_sig": false,
        "md5_digest": "29d752b6a8188d73c42c8985e6006c8a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 33364,
        "upload_time": "2019-10-15T16:03:11",
        "upload_time_iso_8601": "2019-10-15T16:03:11.365136Z",
        "url": "https://files.pythonhosted.org/packages/4c/53/5c6ccd2e81c1aa10bd14611773c9c3ca7eb687b87740e3188c339c5e592d/battlesim-0.3.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c99f59591becb3aff8146c340f61faf290ce802cf728d8eb0cd074a75b54e750",
          "md5": "074d0c2dea619d3c60fb801f6f1186bf",
          "sha256": "2b60469441a70710c62002bb90a1a19a293ae298eafb59b046a2f52885050424"
        },
        "downloads": -1,
        "filename": "battlesim-0.3.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "074d0c2dea619d3c60fb801f6f1186bf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 51650,
        "upload_time": "2020-03-25T14:33:27",
        "upload_time_iso_8601": "2020-03-25T14:33:27.545432Z",
        "url": "https://files.pythonhosted.org/packages/c9/9f/59591becb3aff8146c340f61faf290ce802cf728d8eb0cd074a75b54e750/battlesim-0.3.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82465261b2f9a0038bf2774d4b2e7afb646f014031693664a4ad0e2e481a8192",
          "md5": "d222cceaf698b3b7ab93f53e689b796d",
          "sha256": "d6cbbcbf0a179f5cb8888e877b5d98243b6a757c7ec6133ea352c33e9a4c6b73"
        },
        "downloads": -1,
        "filename": "battlesim-0.3.6.tar.gz",
        "has_sig": false,
        "md5_digest": "d222cceaf698b3b7ab93f53e689b796d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 36072,
        "upload_time": "2020-03-25T14:33:28",
        "upload_time_iso_8601": "2020-03-25T14:33:28.688319Z",
        "url": "https://files.pythonhosted.org/packages/82/46/5261b2f9a0038bf2774d4b2e7afb646f014031693664a4ad0e2e481a8192/battlesim-0.3.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f48d60aae5f6b2d23e066232f2cca9e3e848eb5a16dc92b57af2841f6bd53d91",
          "md5": "5aa7c363e5e55dad284d633b1a6a55b8",
          "sha256": "aef71c843a1bb0088fe5324106b7782719a62dc902ee0dc7eab1345101e2abee"
        },
        "downloads": -1,
        "filename": "battlesim-0.3.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5aa7c363e5e55dad284d633b1a6a55b8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 66088,
        "upload_time": "2022-07-02T13:02:50",
        "upload_time_iso_8601": "2022-07-02T13:02:50.642939Z",
        "url": "https://files.pythonhosted.org/packages/f4/8d/60aae5f6b2d23e066232f2cca9e3e848eb5a16dc92b57af2841f6bd53d91/battlesim-0.3.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "88162839fc4f23fcc890bece0fabb3d355503b1ccf474c7c7dee824eac5df613",
          "md5": "8868ac6ec56afcd27062a010e374fae9",
          "sha256": "2a877650c3c31cc7d62bbc12ef7a3c65a7569e3ef828a4c87bec68b792195f2a"
        },
        "downloads": -1,
        "filename": "battlesim-0.3.7.tar.gz",
        "has_sig": false,
        "md5_digest": "8868ac6ec56afcd27062a010e374fae9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 45583,
        "upload_time": "2022-07-02T13:02:52",
        "upload_time_iso_8601": "2022-07-02T13:02:52.830564Z",
        "url": "https://files.pythonhosted.org/packages/88/16/2839fc4f23fcc890bece0fabb3d355503b1ccf474c7c7dee824eac5df613/battlesim-0.3.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f48d60aae5f6b2d23e066232f2cca9e3e848eb5a16dc92b57af2841f6bd53d91",
        "md5": "5aa7c363e5e55dad284d633b1a6a55b8",
        "sha256": "aef71c843a1bb0088fe5324106b7782719a62dc902ee0dc7eab1345101e2abee"
      },
      "downloads": -1,
      "filename": "battlesim-0.3.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5aa7c363e5e55dad284d633b1a6a55b8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 66088,
      "upload_time": "2022-07-02T13:02:50",
      "upload_time_iso_8601": "2022-07-02T13:02:50.642939Z",
      "url": "https://files.pythonhosted.org/packages/f4/8d/60aae5f6b2d23e066232f2cca9e3e848eb5a16dc92b57af2841f6bd53d91/battlesim-0.3.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "88162839fc4f23fcc890bece0fabb3d355503b1ccf474c7c7dee824eac5df613",
        "md5": "8868ac6ec56afcd27062a010e374fae9",
        "sha256": "2a877650c3c31cc7d62bbc12ef7a3c65a7569e3ef828a4c87bec68b792195f2a"
      },
      "downloads": -1,
      "filename": "battlesim-0.3.7.tar.gz",
      "has_sig": false,
      "md5_digest": "8868ac6ec56afcd27062a010e374fae9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 45583,
      "upload_time": "2022-07-02T13:02:52",
      "upload_time_iso_8601": "2022-07-02T13:02:52.830564Z",
      "url": "https://files.pythonhosted.org/packages/88/16/2839fc4f23fcc890bece0fabb3d355503b1ccf474c7c7dee824eac5df613/battlesim-0.3.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}