{
  "info": {
    "author": "Aashis Khana1",
    "author_email": "sraashis@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# COINSTAC computations development made easy.\n\n![PyPi version](https://img.shields.io/pypi/v/coinstac-computation)\n[![YourActionName Actions Status](https://github.com/trendscenter/coinstac-computation/workflows/build/badge.svg)](https://github.com/trendscenter/coinstac-computation/actions)\n![versions](https://img.shields.io/pypi/pyversions/pybadges.svg)\n\n### A very intuitive wrapper for writing coinstac based computations:\n\n* Break down your computations into simple phases with automatic transition between phases.\n* Add as many phases as you want.\n* Phases **alternate between local and remote automatically** by default starting from the first phase of the local. See advanced use case example below for extras like:\n  * Run phases that needs to be run multiple _local-remote_ trips; Specify `multi_iterations=True` while adding a phase.\n  * Run phases that needs to be run either in local or remote without making a trip(like preprocessing, gathering final results ...); Specify `local_only=True` while adding a phase.\n* Automatic logging that saves what comes and leaves on each phase. Just set `debug=True`.\n\n#### Installation:\n* Run `pip install coinstac-computation`\n* Add entry `coinstac-computation` to the requirements.txt.\n\n<hr />\n\n<!---\n### Only for this framework's express development:\nCommands:\n```\nmkdir -p examples/basic/dist        --- Needed only once -------\nchmod u+x deploy.sh                 --- Needed only once -------\n\n./deploy.sh examples/basic/dist     --- Needed everytime you make some changes -------\n```\n--->\n\n#### **ComputationPhase** signature:\n```python\nfrom coinstac_computation import  ComputationPhase\n\nclass PhaseLoadData(ComputationPhase):\n    def _initialize(self):\n      \"\"\"Put anything that needs to be initialized only once here\"\"\"\n      pass\n    \n    def compute(self):\n        out = {}\n        ...\n        \n        \"\"\"To end multi-iterative phase, and go to the next phase, in local or remote set:\"\"\"\n        out['jump_to_next'] = True\n        \n        \"\"\"To stop the computation, In remote set:\"\"\"\n        out['success'] = True\n        return out\n```\n\n### Example: Gather max even numbers from each site\n#### A full working use case is in the [examples/basic](./examples/basic) directory where:\n* Local sites filters out even numbers and sends to the remote.\n* Remote finds the max across sites and returns the final result to each of the sites.\n* Sites save final result.\n\n#### inputspec.json data:\n```json\n[\n  {\n    \"data\": {\n      \"value\": [10, 3, 5, 6, 7, 8, 12, 38, 32, 789, 776, 441]\n    }\n  },\n  {\n    \"data\": {\n      \"value\": [12, 33, 88, 61, 37, 58, 103, 3386, 312, 9, 77, 41]\n    }\n  }\n]\n```\n\n### Local node pipeline:\n\n```python\nimport os\nfrom coinstac_computation import COINSTACPyNode, ComputationPhase\n\n\nclass PhaseLoadData(ComputationPhase):\n    def compute(self):\n        data = []\n        for d in self.input['data']:\n            if d % 2 == 0:\n                data.append(d)\n        return {'filtered_data': data}\n\n\nclass PhaseSaveResult(ComputationPhase):\n    def compute(self):\n        with open(f\"{self.out_dir + os.sep + 'results.txt'}\", 'w') as out:\n            out.write(f\"{self.input['aggregated_data']}\")\n\n\nlocal = COINSTACPyNode(mode='local', debug=True)\nlocal.add_phase(PhaseLoadData)\nlocal.add_phase(PhaseSaveResult)\n\n```\n\n### Remote node pipeline:\n\n```python\nfrom coinstac_computation import COINSTACPyNode, ComputationPhase, PhaseEndWithSuccess\n\n\nclass PhaseCollectMaxEvenData(ComputationPhase):\n    def compute(self):\n        data = []\n        for site, site_vars in self.input.items():\n            site_max = max(site_vars['filtered_data'])\n            data.append(site_max)\n        return {'aggregated_data': data}\n\n\nremote = COINSTACPyNode(mode='remote', debug=True)\nremote.add_phase(PhaseCollectMaxEvenData)\nremote.add_phase(PhaseEndWithSuccess)\n```\n\n### Entry point:\n\n```python\nimport coinstac\n\nfrom local_pipeline import local\nfrom remote_pipeline import remote\n\ncoinstac.start(local, remote)\n```\n\n### Run:\n```\ncd examples/basic/\n~/coinstac-computation/examples/basic/$ docker build -t base . && coinstac-simulator\n```\n\n<hr />\n\n### Advanced use cases:\n#### 1. Multiple local <---> remote iterations [example](./examples/multi_iterations):\n\n* Each sites cast a vote(positive vote if number is even) for multiple(default=51) times.\n* Remote gathers the votes and returns the final voting result to all sites at the end.\n* Sites save the final result.\n\n#### Overview:\n\n1. Specify when to end the iterative phase with a phase jump signal as `jump_to_next=True`:\n\n```python\nclass PhaseSubmitVote(ComputationPhase):\n\n    def _initialize(self):\n        \"\"\"This method runs only once\"\"\"\n        self.cache['data_index'] = 0\n        self.cache['data'] = []\n        for line in open(self.base_dir + os.sep + self.input_args['data_source']).readlines():\n            self.cache['data'].append(float(line.strip()))\n\n    def compute(self):\n        out = {\n            'vote': self.cache['data'][self.cache['data_index']] % 2 == 0,\n        }\n        self.cache['data_index'] += 1\n        \n        \"\"\"Send a jump to next phase signal\"\"\"\n        out['jump_to_next'] = self.cache['data_index'] > len(self.cache['data']) - 1\n        return out\n```\n\n2. Add the phase as multi-iterations:\n```python\nlocal.add_phase(PhaseSubmitVote, multi_iterations=True)\n```\n\n#### 2. Send data across local <---> remote [example](./examples/data_transfer):\nTo make it simple, we send a matrix of size 1000 by 1000 to remote, aggregate it by averaging, and return to each site.\n\nLocal: \n```python\nimport os\nfrom coinstac_computation import COINSTACPyNode, ComputationPhase\nimport numpy as np\n\nclass PhaseLoadData(ComputationPhase):\n    def compute(self):\n        out = {}\n        data = np.random.randn(*self.input['matrix_shape'])\n        out.update(**self.send(\"site_matrix\", data))\n        return out\n\n\nclass PhaseSaveResult(ComputationPhase):\n    def compute(self):\n        data = self.recv('averaged_matrix')\n        np.save(self.out_dir + os.sep + \"averaged_matrix.npy\", data)\n\n\nlocal = COINSTACPyNode(mode='local', debug=True)\nlocal.add_phase(PhaseLoadData)\nlocal.add_phase(PhaseSaveResult)\n```\n\nRemote:\n```python\nfrom coinstac_computation import COINSTACPyNode, ComputationPhase, PhaseEndWithSuccess\nimport numpy as np\n\n\nclass PhaseAggregateMatrix(ComputationPhase):\n    def compute(self):\n        out = {}\n        data = self.recv(\"site_matrix\")\n        mean_data = np.array(data).mean(0)\n        out.update(**self.send(\"averaged_matrix\", mean_data))\n        return out\n\n\nremote = COINSTACPyNode(mode='remote', debug=True)\nremote.add_phase(PhaseAggregateMatrix)\nremote.add_phase(PhaseEndWithSuccess)\n\n```\n\n<hr />\n\n### Sample logs from local0\n```\n[INPUT] 14:27:36 02/04/2022 \n  ->{'data_source': 'data_file.txt'}\n[CACHE] 14:27:36 02/04/2022 \n  ->{'PIPELINE:LOCAL': {'index': 0, 'iterations': {'PhaseSubmitVote': 0, 'PhaseSaveResult': 0}}}\n  <-{'PIPELINE:LOCAL': {'index': 0, 'iterations': {'PhaseSubmitVote': 1, 'PhaseSaveResult': 0}}, 'input_args': {'data_source': 'data_file.txt'}, 'next_phase': 'PhaseSubmitVote', 'data_index': 1, 'data': [712.0, 309.0, 574.0, 838.0, 296.0, 349.0, 781.0, 749.0, 360.0, 702.0, 253.0, 831.0, 911.0, 14.0, 259.0, 805.0, 494.0, 501.0, 549.0, 624.0, 919.0, 836.0, 362.0, 373.0, 563.0, 134.0, 610.0, 875.0, 328.0, 299.0, 874.0, 387.0, 743.0, 233.0, 834.0, 870.0, 685.0, 342.0, 79.0, 270.0, 314.0, 42.0, 364.0, 902.0, 755.0, 248.0, 815.0, 4.0, 21.0, 423.0, 302.0], 'PHASE:PhaseSubmitVote': True}\n[OUTPUT] 14:27:36 02/04/2022 \n  <-{'output': {'vote': True, 'jump_to_next': False}}\n\n[INPUT] 14:27:37 02/04/2022 \n  ->{}\n[CACHE] 14:27:37 02/04/2022 \n  ->{'PIPELINE:LOCAL': {'index': 0, 'iterations': {'PhaseSubmitVote': 1, 'PhaseSaveResult': 0}}, 'input_args': {'data_source': 'data_file.txt'}, 'next_phase': 'PhaseSubmitVote', 'data_index': 1, 'data': [712.0, 309.0, 574.0, 838.0, 296.0, 349.0, 781.0, 749.0, 360.0, 702.0, 253.0, 831.0, 911.0, 14.0, 259.0, 805.0, 494.0, 501.0, 549.0, 624.0, 919.0, 836.0, 362.0, 373.0, 563.0, 134.0, 610.0, 875.0, 328.0, 299.0, 874.0, 387.0, 743.0, 233.0, 834.0, 870.0, 685.0, 342.0, 79.0, 270.0, 314.0, 42.0, 364.0, 902.0, 755.0, 248.0, 815.0, 4.0, 21.0, 423.0, 302.0], 'PHASE:PhaseSubmitVote': True}\n  <-{'PIPELINE:LOCAL': {'index': 0, 'iterations': {'PhaseSubmitVote': 2, 'PhaseSaveResult': 0}}, 'input_args': {'data_source': 'data_file.txt'}, 'next_phase': 'PhaseSubmitVote', 'data_index': 2, 'data': [712.0, 309.0, 574.0, 838.0, 296.0, 349.0, 781.0, 749.0, 360.0, 702.0, 253.0, 831.0, 911.0, 14.0, 259.0, 805.0, 494.0, 501.0, 549.0, 624.0, 919.0, 836.0, 362.0, 373.0, 563.0, 134.0, 610.0, 875.0, 328.0, 299.0, 874.0, 387.0, 743.0, 233.0, 834.0, 870.0, 685.0, 342.0, 79.0, 270.0, 314.0, 42.0, 364.0, 902.0, 755.0, 248.0, 815.0, 4.0, 21.0, 423.0, 302.0], 'PHASE:PhaseSubmitVote': True}\n[OUTPUT] 14:27:37 02/04/2022 \n  <-{'output': {'vote': False, 'jump_to_next': False}}\n\n[INPUT] 14:27:37 02/04/2022 \n  ->{}\n[CACHE] 14:27:37 02/04/2022 \n  ->{'PIPELINE:LOCAL': {'index': 0, 'iterations': {'PhaseSubmitVote': 2, 'PhaseSaveResult': 0}}, 'input_args': {'data_source': 'data_file.txt'}, 'next_phase': 'PhaseSubmitVote', 'data_index': 2, 'data': [712.0, 309.0, 574.0, 838.0, 296.0, 349.0, 781.0, 749.0, 360.0, 702.0, 253.0, 831.0, 911.0, 14.0, 259.0, 805.0, 494.0, 501.0, 549.0, 624.0, 919.0, 836.0, 362.0, 373.0, 563.0, 134.0, 610.0, 875.0, 328.0, 299.0, 874.0, 387.0, 743.0, 233.0, 834.0, 870.0, 685.0, 342.0, 79.0, 270.0, 314.0, 42.0, 364.0, 902.0, 755.0, 248.0, 815.0, 4.0, 21.0, 423.0, 302.0], 'PHASE:PhaseSubmitVote': True}\n  <-{'PIPELINE:LOCAL': {'index': 0, 'iterations': {'PhaseSubmitVote': 3, 'PhaseSaveResult': 0}}, 'input_args': {'data_source': 'data_file.txt'}, 'next_phase': 'PhaseSubmitVote', 'data_index': 3, 'data': [712.0, 309.0, 574.0, 838.0, 296.0, 349.0, 781.0, 749.0, 360.0, 702.0, 253.0, 831.0, 911.0, 14.0, 259.0, 805.0, 494.0, 501.0, 549.0, 624.0, 919.0, 836.0, 362.0, 373.0, 563.0, 134.0, 610.0, 875.0, 328.0, 299.0, 874.0, 387.0, 743.0, 233.0, 834.0, 870.0, 685.0, 342.0, 79.0, 270.0, 314.0, 42.0, 364.0, 902.0, 755.0, 248.0, 815.0, 4.0, 21.0, 423.0, 302.0], 'PHASE:PhaseSubmitVote': True}\n[OUTPUT] 14:27:37 02/04/2022 \n  <-{'output': {'vote': True, 'jump_to_next': False}}\n...\n```\n\n### Sample logs from remote\n```\n[INPUT] 14:27:37 02/04/2022 \n  ->{'local0': {'vote': True, 'jump_to_next': False}, 'local1': {'vote': False, 'jump_to_next': False}, 'local2': {'vote': False, 'jump_to_next': False}, 'local3': {'vote': False, 'jump_to_next': False}}\n[CACHE] 14:27:37 02/04/2022 \n  ->{'PIPELINE:REMOTE': {'index': 0, 'iterations': {'PhaseCollectVote': 0, 'PhaseSendGlobalResults': 0, 'PhaseEndWithSuccess': 0}}}\n  <-{'PIPELINE:REMOTE': {'index': 0, 'iterations': {'PhaseCollectVote': 1, 'PhaseSendGlobalResults': 0, 'PhaseEndWithSuccess': 0}}, 'input_args': {'local0': {'vote': True, 'jump_to_next': False}, 'local1': {'vote': False, 'jump_to_next': False}, 'local2': {'vote': False, 'jump_to_next': False}, 'local3': {'vote': False, 'jump_to_next': False}}, 'next_phase': 'PhaseCollectVote', 'vote_ballot': [[1, 3]], 'PHASE:PhaseCollectVote': True}\n[OUTPUT] 14:27:37 02/04/2022 \n  <-{'output': {}, 'success': False}\n\n[INPUT] 14:27:37 02/04/2022 \n  ->{'local0': {'vote': False, 'jump_to_next': False}, 'local2': {'vote': True, 'jump_to_next': False}, 'local1': {'vote': True, 'jump_to_next': False}, 'local3': {'vote': True, 'jump_to_next': False}}\n[CACHE] 14:27:37 02/04/2022 \n  ->{'PIPELINE:REMOTE': {'index': 0, 'iterations': {'PhaseCollectVote': 1, 'PhaseSendGlobalResults': 0, 'PhaseEndWithSuccess': 0}}, 'input_args': {'local0': {'vote': True, 'jump_to_next': False}, 'local1': {'vote': False, 'jump_to_next': False}, 'local2': {'vote': False, 'jump_to_next': False}, 'local3': {'vote': False, 'jump_to_next': False}}, 'next_phase': 'PhaseCollectVote', 'vote_ballot': [[1, 3]], 'PHASE:PhaseCollectVote': True}\n  <-{'PIPELINE:REMOTE': {'index': 0, 'iterations': {'PhaseCollectVote': 2, 'PhaseSendGlobalResults': 0, 'PhaseEndWithSuccess': 0}}, 'input_args': {'local0': {'vote': True, 'jump_to_next': False}, 'local1': {'vote': False, 'jump_to_next': False}, 'local2': {'vote': False, 'jump_to_next': False}, 'local3': {'vote': False, 'jump_to_next': False}}, 'next_phase': 'PhaseCollectVote', 'vote_ballot': [[1, 3], [3, 1]], 'PHASE:PhaseCollectVote': True}\n[OUTPUT] 14:27:37 02/04/2022 \n  <-{'output': {}, 'success': False}\n\n[INPUT] 14:27:37 02/04/2022 \n  ->{'local0': {'vote': True, 'jump_to_next': False}, 'local3': {'vote': True, 'jump_to_next': False}, 'local2': {'vote': True, 'jump_to_next': False}, 'local1': {'vote': True, 'jump_to_next': False}}\n[CACHE] 14:27:37 02/04/2022 \n  ->{'PIPELINE:REMOTE': {'index': 0, 'iterations': {'PhaseCollectVote': 2, 'PhaseSendGlobalResults': 0, 'PhaseEndWithSuccess': 0}}, 'input_args': {'local0': {'vote': True, 'jump_to_next': False}, 'local1': {'vote': False, 'jump_to_next': False}, 'local2': {'vote': False, 'jump_to_next': False}, 'local3': {'vote': False, 'jump_to_next': False}}, 'next_phase': 'PhaseCollectVote', 'vote_ballot': [[1, 3], [3, 1]], 'PHASE:PhaseCollectVote': True}\n  <-{'PIPELINE:REMOTE': {'index': 0, 'iterations': {'PhaseCollectVote': 3, 'PhaseSendGlobalResults': 0, 'PhaseEndWithSuccess': 0}}, 'input_args': {'local0': {'vote': True, 'jump_to_next': False}, 'local1': {'vote': False, 'jump_to_next': False}, 'local2': {'vote': False, 'jump_to_next': False}, 'local3': {'vote': False, 'jump_to_next': False}}, 'next_phase': 'PhaseCollectVote', 'vote_ballot': [[1, 3], [3, 1], [4, 0]], 'PHASE:PhaseCollectVote': True}\n[OUTPUT] 14:27:37 02/04/2022 \n  <-{'output': {}, 'success': False}\n...\n```\n\n<hr />\n \n### Development notes:\n* Make sure you have:\n  * **docker** installed and running.\n  * **nodejs** installed.\n  * **coinstac-simulator** package installed. `npm install --global coinstac-simulator`\n* Must set `debug=False` while deploying.\n* Backward compatible to the older library(compspecVersion=1):\n  * Add the following snippet at the end of local and remote pipeline scripts.\n  ```python\n  if __name__ == \"__main__\":\n      local.to_stdout()\n  ```\n  * Use [version 1.0](./examples/basic/compspecv1.json) compspec format.\n  * Comment out line `CMD [\"python\", \"entry.py\"]` in the `Dockerfile`.\n  * You can also use a **remote debugger** in pycharm as [here](https://www.jetbrains.com/help/pycharm/remote-debugging-with-product.html#remote-debug-config).\n\n\n### Thanks!\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/trendscenter/coinstac-computation",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "coinstac-computation",
    "package_url": "https://pypi.org/project/coinstac-computation/",
    "platform": null,
    "project_url": "https://pypi.org/project/coinstac-computation/",
    "project_urls": {
      "Homepage": "https://github.com/trendscenter/coinstac-computation"
    },
    "release_url": "https://pypi.org/project/coinstac-computation/1.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Generic computation implementation on COINSTAC.",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13349042,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "86feb7f0a0a61ef786b71c6bf6923433fc26a104f36a26649bbb025a2455eb46",
          "md5": "9561f58edb41b122c032c88baa1b80ba",
          "sha256": "0533bee18130ef3c3ab3d225743a3bb7d38f396593039dc01a146b2b776a894e"
        },
        "downloads": -1,
        "filename": "coinstac-computation-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9561f58edb41b122c032c88baa1b80ba",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5353,
        "upload_time": "2021-11-18T19:45:54",
        "upload_time_iso_8601": "2021-11-18T19:45:54.184213Z",
        "url": "https://files.pythonhosted.org/packages/86/fe/b7f0a0a61ef786b71c6bf6923433fc26a104f36a26649bbb025a2455eb46/coinstac-computation-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "768f110b8c4c7dda4a59b08ba3cefbf569b1495aed1e1b319c2d9ccd720e22bd",
          "md5": "d8a84f0b96fe5e3be0efb0316062f0a8",
          "sha256": "53bbe85a91dc0d65ea69580eada8de7119a4b5be70b62fd73c13dcb924e10a3d"
        },
        "downloads": -1,
        "filename": "coinstac-computation-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d8a84f0b96fe5e3be0efb0316062f0a8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5672,
        "upload_time": "2021-11-18T19:56:25",
        "upload_time_iso_8601": "2021-11-18T19:56:25.310076Z",
        "url": "https://files.pythonhosted.org/packages/76/8f/110b8c4c7dda4a59b08ba3cefbf569b1495aed1e1b319c2d9ccd720e22bd/coinstac-computation-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "db71d866ef334463c293968b706f02eaecd5b08725e0d2a6b96bbddc30765d04",
          "md5": "2e035ed6879ea278846c19944c96531b",
          "sha256": "ad4044799438b9ef4189cf4a883c70fe3aff55d58e674dbfda2652a1d8464add"
        },
        "downloads": -1,
        "filename": "coinstac-computation-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "2e035ed6879ea278846c19944c96531b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5807,
        "upload_time": "2021-11-18T20:00:58",
        "upload_time_iso_8601": "2021-11-18T20:00:58.769312Z",
        "url": "https://files.pythonhosted.org/packages/db/71/d866ef334463c293968b706f02eaecd5b08725e0d2a6b96bbddc30765d04/coinstac-computation-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e25e0f1a25d60bcb92e135a8d9e822c090fb55f0bda355fc4ee189f8bcb89b02",
          "md5": "3d8ccc1955fedf01fddbd2952e4b439c",
          "sha256": "e3a6c49ea702c1f29d09a97b722fcc1e40b3415a8f113c838a01b8979e4a31e8"
        },
        "downloads": -1,
        "filename": "coinstac-computation-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "3d8ccc1955fedf01fddbd2952e4b439c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6020,
        "upload_time": "2021-11-19T18:26:54",
        "upload_time_iso_8601": "2021-11-19T18:26:54.635413Z",
        "url": "https://files.pythonhosted.org/packages/e2/5e/0f1a25d60bcb92e135a8d9e822c090fb55f0bda355fc4ee189f8bcb89b02/coinstac-computation-0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "14b49c6254f1c4f588178e8e33a37029ddf980b8fe4941ada87607c01510bbf0",
          "md5": "6b2d9e7d837d5cca78f35485ef47bb4e",
          "sha256": "5609f092bc644efbee0e0a56bc980cb5a2cb0aa2ed766becca8c8b558fbdcde1"
        },
        "downloads": -1,
        "filename": "coinstac-computation-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "6b2d9e7d837d5cca78f35485ef47bb4e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6016,
        "upload_time": "2021-11-19T18:29:30",
        "upload_time_iso_8601": "2021-11-19T18:29:30.905552Z",
        "url": "https://files.pythonhosted.org/packages/14/b4/9c6254f1c4f588178e8e33a37029ddf980b8fe4941ada87607c01510bbf0/coinstac-computation-0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.51": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b940839f4ed87acb4a87f4c0e93f4635e27129e7c0f39290364735a590a402b",
          "md5": "8d20b899bfea91c21d090f677de1c987",
          "sha256": "18be9c56c6b4573142abe200acfa2318d1449f9c4d8d17e00dff4c122ff5b7bd"
        },
        "downloads": -1,
        "filename": "coinstac-computation-0.51.tar.gz",
        "has_sig": false,
        "md5_digest": "8d20b899bfea91c21d090f677de1c987",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6032,
        "upload_time": "2021-11-19T18:32:23",
        "upload_time_iso_8601": "2021-11-19T18:32:23.079992Z",
        "url": "https://files.pythonhosted.org/packages/2b/94/0839f4ed87acb4a87f4c0e93f4635e27129e7c0f39290364735a590a402b/coinstac-computation-0.51.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.52": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c89e2b76610a8a6edd4828911f783bc09f1c486ce6ddf290ea43d665257f9d11",
          "md5": "45908c538b9529629ab039a1ad003e09",
          "sha256": "5fc27b676c131686b53a1ac2e263ad0b75551b77b4f8d9fa71afd0ca3c82b7f3"
        },
        "downloads": -1,
        "filename": "coinstac-computation-0.52.tar.gz",
        "has_sig": false,
        "md5_digest": "45908c538b9529629ab039a1ad003e09",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6313,
        "upload_time": "2021-11-19T19:08:38",
        "upload_time_iso_8601": "2021-11-19T19:08:38.109261Z",
        "url": "https://files.pythonhosted.org/packages/c8/9e/2b76610a8a6edd4828911f783bc09f1c486ce6ddf290ea43d665257f9d11/coinstac-computation-0.52.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.53": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bbb37c44a7277680059b5087ede1781175bbaaba32c370db79dc3875c3fdb3d5",
          "md5": "15cc74228a8f78778703054e0e4169da",
          "sha256": "30e7b7f721ff105b11c8f6420edfc470c26208a7ea621ff3774faf2873eb170f"
        },
        "downloads": -1,
        "filename": "coinstac-computation-0.53.tar.gz",
        "has_sig": false,
        "md5_digest": "15cc74228a8f78778703054e0e4169da",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6367,
        "upload_time": "2021-11-19T19:16:26",
        "upload_time_iso_8601": "2021-11-19T19:16:26.326229Z",
        "url": "https://files.pythonhosted.org/packages/bb/b3/7c44a7277680059b5087ede1781175bbaaba32c370db79dc3875c3fdb3d5/coinstac-computation-0.53.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.54": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9c123c260f56c1844527512dca2717aac6f26a361539bef036fd59ef0ff06ac3",
          "md5": "90c4630f7012e17bb3d84a71224114e6",
          "sha256": "520e434c3e01cea0f01ee0c8b9a3ef2536342911122c2783f478c466fd7018bd"
        },
        "downloads": -1,
        "filename": "coinstac-computation-0.54.tar.gz",
        "has_sig": false,
        "md5_digest": "90c4630f7012e17bb3d84a71224114e6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6344,
        "upload_time": "2021-11-19T19:32:27",
        "upload_time_iso_8601": "2021-11-19T19:32:27.856717Z",
        "url": "https://files.pythonhosted.org/packages/9c/12/3c260f56c1844527512dca2717aac6f26a361539bef036fd59ef0ff06ac3/coinstac-computation-0.54.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.55": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd5c7d0508e0dccd086071fb5486d2250e3ca9b52553e3c1f320f0689d1bc224",
          "md5": "3c239d6e5bbaf1cd8fdd721e4cccaa21",
          "sha256": "09929ec25d4ab4a940af0de29426b16a1379c66ac9c24e0450767e21027ba795"
        },
        "downloads": -1,
        "filename": "coinstac-computation-0.55.tar.gz",
        "has_sig": false,
        "md5_digest": "3c239d6e5bbaf1cd8fdd721e4cccaa21",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6337,
        "upload_time": "2021-11-19T19:52:07",
        "upload_time_iso_8601": "2021-11-19T19:52:07.452642Z",
        "url": "https://files.pythonhosted.org/packages/cd/5c/7d0508e0dccd086071fb5486d2250e3ca9b52553e3c1f320f0689d1bc224/coinstac-computation-0.55.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.56": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "182b9566a7b342fc2f8a91853f4a9d9ef124ed672543f10454457d2b143c7a54",
          "md5": "9721dd14dca5665fa1ebe4d74004135a",
          "sha256": "a9a851b2f1912337245b105d57d0f51e21a13efc614e3f59e71891e4d63cd808"
        },
        "downloads": -1,
        "filename": "coinstac-computation-0.56.tar.gz",
        "has_sig": false,
        "md5_digest": "9721dd14dca5665fa1ebe4d74004135a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6436,
        "upload_time": "2021-11-20T23:11:09",
        "upload_time_iso_8601": "2021-11-20T23:11:09.512001Z",
        "url": "https://files.pythonhosted.org/packages/18/2b/9566a7b342fc2f8a91853f4a9d9ef124ed672543f10454457d2b143c7a54/coinstac-computation-0.56.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.57": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "814364a18427246000ee067c7a78e7cebc34782ce7c2cd233bba236c36f0d32d",
          "md5": "c3496d6ab7161252ee73de40bd6b037a",
          "sha256": "2a9cc7ee53485285e6a4e55a47b185b7138a69949ed2cca4376fb848cd616c15"
        },
        "downloads": -1,
        "filename": "coinstac-computation-0.57.tar.gz",
        "has_sig": false,
        "md5_digest": "c3496d6ab7161252ee73de40bd6b037a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6451,
        "upload_time": "2021-11-20T23:23:57",
        "upload_time_iso_8601": "2021-11-20T23:23:57.318467Z",
        "url": "https://files.pythonhosted.org/packages/81/43/64a18427246000ee067c7a78e7cebc34782ce7c2cd233bba236c36f0d32d/coinstac-computation-0.57.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.58": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "de7239fd530226844632978d735e42c9b6575749f23578dc57e47034579da0fd",
          "md5": "91126b95c17398f04eb3249a754e5287",
          "sha256": "cb5e756035530ab90fbed47253f1df1fee6912bf2215095a370a0999c80ee64a"
        },
        "downloads": -1,
        "filename": "coinstac-computation-0.58.tar.gz",
        "has_sig": false,
        "md5_digest": "91126b95c17398f04eb3249a754e5287",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6476,
        "upload_time": "2021-11-20T23:28:23",
        "upload_time_iso_8601": "2021-11-20T23:28:23.307309Z",
        "url": "https://files.pythonhosted.org/packages/de/72/39fd530226844632978d735e42c9b6575749f23578dc57e47034579da0fd/coinstac-computation-0.58.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.59": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d8d2ac7bd930cbfabdc7446fe5a68e42eea1c182abe35764fdf8337ea1874e32",
          "md5": "275c03e9b14b8b81d00bb1548fe737cf",
          "sha256": "1ad0131a18feab2b3bd31d342805a4abf2a89002e779770d72453935b3938acc"
        },
        "downloads": -1,
        "filename": "coinstac-computation-0.59.tar.gz",
        "has_sig": false,
        "md5_digest": "275c03e9b14b8b81d00bb1548fe737cf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6476,
        "upload_time": "2021-11-20T23:35:36",
        "upload_time_iso_8601": "2021-11-20T23:35:36.833168Z",
        "url": "https://files.pythonhosted.org/packages/d8/d2/ac7bd930cbfabdc7446fe5a68e42eea1c182abe35764fdf8337ea1874e32/coinstac-computation-0.59.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "50e0661f120687c0a75403bb7b6338ecf75e7f830fa4d9a8702adf4bda0e0bab",
          "md5": "ac23d0df855451493e63abae41f1f15c",
          "sha256": "7627862e6caab67221bf1d184cbe6bd02c6d5f1d67d80ee06ee1f097fe613206"
        },
        "downloads": -1,
        "filename": "coinstac-computation-0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "ac23d0df855451493e63abae41f1f15c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6482,
        "upload_time": "2021-11-21T15:50:06",
        "upload_time_iso_8601": "2021-11-21T15:50:06.024215Z",
        "url": "https://files.pythonhosted.org/packages/50/e0/661f120687c0a75403bb7b6338ecf75e7f830fa4d9a8702adf4bda0e0bab/coinstac-computation-0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.61": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8f66a820d79acaa28b2b4ddfd57a7eacbf5b3f96f63b30bd0fb6499d7d557b84",
          "md5": "46d732de578caf7efdb4e278f90f683a",
          "sha256": "86615b72ce86487957ec5af83cf7eec168cdb7454d82e4bc31b8ecb56e3ec68b"
        },
        "downloads": -1,
        "filename": "coinstac-computation-0.61.tar.gz",
        "has_sig": false,
        "md5_digest": "46d732de578caf7efdb4e278f90f683a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6522,
        "upload_time": "2021-11-25T00:37:03",
        "upload_time_iso_8601": "2021-11-25T00:37:03.879787Z",
        "url": "https://files.pythonhosted.org/packages/8f/66/a820d79acaa28b2b4ddfd57a7eacbf5b3f96f63b30bd0fb6499d7d557b84/coinstac-computation-0.61.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.62": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b9930509b2671e1b97758e13f17f0fd890b136ad85e6b2853f43096b4f3d39a6",
          "md5": "ad448479ad0d9c0bef1f2a3a57ce0d83",
          "sha256": "6a7ed815d8b0c93495ccba0989072ab10263a5cae58f9b636192ba56f37e5def"
        },
        "downloads": -1,
        "filename": "coinstac-computation-0.62.tar.gz",
        "has_sig": false,
        "md5_digest": "ad448479ad0d9c0bef1f2a3a57ce0d83",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5994,
        "upload_time": "2022-01-18T17:33:57",
        "upload_time_iso_8601": "2022-01-18T17:33:57.342514Z",
        "url": "https://files.pythonhosted.org/packages/b9/93/0509b2671e1b97758e13f17f0fd890b136ad85e6b2853f43096b4f3d39a6/coinstac-computation-0.62.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.63": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7a401310e245f9aa68b4f825e11c6e04a72b65dcc5bb73389743f9abee1b5087",
          "md5": "b238781dd3e611ca9e8aadeb3f0f7640",
          "sha256": "cdf966ff9b244f20ffc1d8d49aa4a5cc247887ac5a526b5b0c0b764a6fc2b0c3"
        },
        "downloads": -1,
        "filename": "coinstac-computation-0.63.tar.gz",
        "has_sig": false,
        "md5_digest": "b238781dd3e611ca9e8aadeb3f0f7640",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5980,
        "upload_time": "2022-01-24T20:26:21",
        "upload_time_iso_8601": "2022-01-24T20:26:21.222272Z",
        "url": "https://files.pythonhosted.org/packages/7a/40/1310e245f9aa68b4f825e11c6e04a72b65dcc5bb73389743f9abee1b5087/coinstac-computation-0.63.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.64": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1c54dd273aaaa905fe786c33b27f44f865b48dd5cc872551db1e619fa54c14d4",
          "md5": "1a851ac3a413d86afee9f2a8e8a8bb54",
          "sha256": "8814b6cd7aa6dae8a08c9d9206ac67d6922d415ecc6bca2d7970c0f358c58cc8"
        },
        "downloads": -1,
        "filename": "coinstac-computation-0.64.tar.gz",
        "has_sig": false,
        "md5_digest": "1a851ac3a413d86afee9f2a8e8a8bb54",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5981,
        "upload_time": "2022-01-24T20:32:20",
        "upload_time_iso_8601": "2022-01-24T20:32:20.083774Z",
        "url": "https://files.pythonhosted.org/packages/1c/54/dd273aaaa905fe786c33b27f44f865b48dd5cc872551db1e619fa54c14d4/coinstac-computation-0.64.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.65": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba84de3fce370d22fd699651882d1ec5a0c5bba7771a71415d719d70c3fcb902",
          "md5": "19a7355856fe86e71488a8a97b884e8c",
          "sha256": "3593b87a92a3a2e6867bf4b3746d7f81e64a20d9dad2c0135f8f2025c62886ba"
        },
        "downloads": -1,
        "filename": "coinstac-computation-0.65.tar.gz",
        "has_sig": false,
        "md5_digest": "19a7355856fe86e71488a8a97b884e8c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6228,
        "upload_time": "2022-01-27T19:43:59",
        "upload_time_iso_8601": "2022-01-27T19:43:59.858482Z",
        "url": "https://files.pythonhosted.org/packages/ba/84/de3fce370d22fd699651882d1ec5a0c5bba7771a71415d719d70c3fcb902/coinstac-computation-0.65.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.66": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6417c03f7c3208283598eaebd93ee9c10a9e2aa7d793b18d374ff07ceb3e6d2a",
          "md5": "f9a1c7ec965f51cd923ae03982eef48e",
          "sha256": "abb782e08b785aa86e99025d8fecd18c5d2af97fba88ecfc427269e7c04acaca"
        },
        "downloads": -1,
        "filename": "coinstac-computation-0.66.tar.gz",
        "has_sig": false,
        "md5_digest": "f9a1c7ec965f51cd923ae03982eef48e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6438,
        "upload_time": "2022-01-27T23:34:40",
        "upload_time_iso_8601": "2022-01-27T23:34:40.272977Z",
        "url": "https://files.pythonhosted.org/packages/64/17/c03f7c3208283598eaebd93ee9c10a9e2aa7d793b18d374ff07ceb3e6d2a/coinstac-computation-0.66.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.67": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b1df95cfcb0e2119b59f8c080c5b3d4ef9494e1c8b37e09a34b78b6773d1257d",
          "md5": "c72310b3fbfe49a78ae4d80006fc558d",
          "sha256": "4028475b0cd0b275096b1daa96d0d18978dc4fe6fb0171bf4109b4e9cc6f4bb2"
        },
        "downloads": -1,
        "filename": "coinstac-computation-0.67.tar.gz",
        "has_sig": false,
        "md5_digest": "c72310b3fbfe49a78ae4d80006fc558d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7300,
        "upload_time": "2022-02-03T17:10:34",
        "upload_time_iso_8601": "2022-02-03T17:10:34.293475Z",
        "url": "https://files.pythonhosted.org/packages/b1/df/95cfcb0e2119b59f8c080c5b3d4ef9494e1c8b37e09a34b78b6773d1257d/coinstac-computation-0.67.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.68": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c85e7baccdb3ac4b5aa8722ca0e8dcc3b7c8fc4139df9179cf338fc3fa640f0a",
          "md5": "2355f40ba11c31f0d362fa2d67c33c62",
          "sha256": "1bb57cf4ad195e6e762fb7840936f8ee82e57fcef066a485188961dd070669ad"
        },
        "downloads": -1,
        "filename": "coinstac-computation-0.68.tar.gz",
        "has_sig": false,
        "md5_digest": "2355f40ba11c31f0d362fa2d67c33c62",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7491,
        "upload_time": "2022-02-04T15:21:14",
        "upload_time_iso_8601": "2022-02-04T15:21:14.856574Z",
        "url": "https://files.pythonhosted.org/packages/c8/5e/7baccdb3ac4b5aa8722ca0e8dcc3b7c8fc4139df9179cf338fc3fa640f0a/coinstac-computation-0.68.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.70": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bb08b51d452061477a6ce4ddd3a0bddad0807bd474b39ab512dff2040250a98d",
          "md5": "49a6400aba71ed4dd03c4baa62c18edb",
          "sha256": "44fa0a69724e68e46a4a5e5b012a840d6eee4f38569f09a68a08dc7a036ef793"
        },
        "downloads": -1,
        "filename": "coinstac-computation-0.70.tar.gz",
        "has_sig": false,
        "md5_digest": "49a6400aba71ed4dd03c4baa62c18edb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10178,
        "upload_time": "2022-03-08T14:23:49",
        "upload_time_iso_8601": "2022-03-08T14:23:49.907339Z",
        "url": "https://files.pythonhosted.org/packages/bb/08/b51d452061477a6ce4ddd3a0bddad0807bd474b39ab512dff2040250a98d/coinstac-computation-0.70.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eeca1c83c367e31a1366be27e9e28dc0dc84c6d34c639c6d8217943660491938",
          "md5": "b8dc9bef11a6b25e27a865e8d473cd4b",
          "sha256": "83a35ebf4f7af03e78cc9b0b61c868c9ebd85f0ad526eed12945ac67a2d3eaa8"
        },
        "downloads": -1,
        "filename": "coinstac-computation-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b8dc9bef11a6b25e27a865e8d473cd4b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10422,
        "upload_time": "2022-03-14T15:26:31",
        "upload_time_iso_8601": "2022-03-14T15:26:31.584015Z",
        "url": "https://files.pythonhosted.org/packages/ee/ca/1c83c367e31a1366be27e9e28dc0dc84c6d34c639c6d8217943660491938/coinstac-computation-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3496907df7312ce04eb1c9ea36b77ab862d84ca0c033fce0828eda66d1a1c846",
          "md5": "90b1c1479254f73187ef474103b0d488",
          "sha256": "9d114034df5d7ec9017904365aa8f4a6d3315840a40d4f0e567722fda43066b4"
        },
        "downloads": -1,
        "filename": "coinstac-computation-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "90b1c1479254f73187ef474103b0d488",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10447,
        "upload_time": "2022-03-27T13:35:41",
        "upload_time_iso_8601": "2022-03-27T13:35:41.225994Z",
        "url": "https://files.pythonhosted.org/packages/34/96/907df7312ce04eb1c9ea36b77ab862d84ca0c033fce0828eda66d1a1c846/coinstac-computation-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea997e70962defea4d05e5d9ab73b9f941890481f0846d3fbe7bc777e58936ec",
          "md5": "bfd2df4f5a6e5cd6d0ace70539efc5f1",
          "sha256": "4dc87590ba42005aafd42360419c2e0cccb2c0febb0aa5fad7db50cccc8b9f3d"
        },
        "downloads": -1,
        "filename": "coinstac-computation-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "bfd2df4f5a6e5cd6d0ace70539efc5f1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10658,
        "upload_time": "2022-03-30T17:25:07",
        "upload_time_iso_8601": "2022-03-30T17:25:07.130893Z",
        "url": "https://files.pythonhosted.org/packages/ea/99/7e70962defea4d05e5d9ab73b9f941890481f0846d3fbe7bc777e58936ec/coinstac-computation-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ea997e70962defea4d05e5d9ab73b9f941890481f0846d3fbe7bc777e58936ec",
        "md5": "bfd2df4f5a6e5cd6d0ace70539efc5f1",
        "sha256": "4dc87590ba42005aafd42360419c2e0cccb2c0febb0aa5fad7db50cccc8b9f3d"
      },
      "downloads": -1,
      "filename": "coinstac-computation-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "bfd2df4f5a6e5cd6d0ace70539efc5f1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10658,
      "upload_time": "2022-03-30T17:25:07",
      "upload_time_iso_8601": "2022-03-30T17:25:07.130893Z",
      "url": "https://files.pythonhosted.org/packages/ea/99/7e70962defea4d05e5d9ab73b9f941890481f0846d3fbe7bc777e58936ec/coinstac-computation-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}