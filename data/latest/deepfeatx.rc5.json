{
  "info": {
    "author": "Fernando M Wittmann",
    "author_email": "fernando.wittmann@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# `deepfeatx`: Deep Learning Feature Extractor of Images using Transfer Learning Models\n> Helper for automatic extraction of features from images (and soon text as well) from transfer learning models like ResNet, VGG16 and EfficientNet.\n\n\n## Install\n\n```\n#hide_output\n!pip install deepfeatx\n```\n\n## Why this project has been created\n- Fill the gap between ML and DL thus allowing estimators beyond only neural networks for computer vision and NLP problems\n- Neural network models are too painful to setup and train - data generators, optimizers, learning rates, loss functions, training loops, batch size, etc. \n- State of the art results are possible thanks to pretrained models that allows feature extraction\n- With this library we can handle those problems as they were traditional machine learning problems\n- Possibility of using low-code APIs like `scikit-learn` for computer vision and NLP problems\n\n## Usage\n### Extracting features from an image\n\n`deepfeatx` allows extracting features from the models 'efficientnetb0', 'efficientnetb4', 'efficientnetb7' and 'resnet50'. As default we are using Resnet50 but you can also specify different models as the class input:\n\n```\n#hide_output\nfrom deepfeatx.image import ImageFeatureExtractor\nfe = ImageFeatureExtractor('efficientnetb4')\n```\n\nNext, let's transform the following URL into a vector:\n\n```\nim_url='https://raw.githubusercontent.com/WittmannF/deepfeatx/master/sample_data/cats_vs_dogs/valid/dog/dog.124.jpg'\nfe.read_img_url(im_url)\n```\n\n\n\n\n![png](docs/images/output_6_0.png)\n\n\n\n```\nfe.url_to_vector(im_url)\n```\n\n\n\n\n    array([[-0.19569655,  0.01385073, -0.18466987, ..., -0.18626775,\n             0.24537565,  0.03650745]], dtype=float32)\n\n\n\n### Extracting Features from a Folder with Images\n\n```\n#hide_output\n!git clone https://github.com/WittmannF/image-scraper.git\n```\n\n```\ndf=fe.extract_features_from_directory('image-scraper/images/pug',\n                                   classes_as_folders=False,\n                                   export_vectors_as_df=True)\n\ndf.head()\n```\n\n    Found 4 validated image filenames.\n    1/1 [==============================] - 0s 89ms/step\n\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>filepaths</th>\n      <th>0</th>\n      <th>1</th>\n      <th>2</th>\n      <th>3</th>\n      <th>4</th>\n      <th>5</th>\n      <th>6</th>\n      <th>7</th>\n      <th>8</th>\n      <th>...</th>\n      <th>1782</th>\n      <th>1783</th>\n      <th>1784</th>\n      <th>1785</th>\n      <th>1786</th>\n      <th>1787</th>\n      <th>1788</th>\n      <th>1789</th>\n      <th>1790</th>\n      <th>1791</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>image-scraper/images/pug/efd08a2dc5.jpg</td>\n      <td>-0.053781</td>\n      <td>-0.201073</td>\n      <td>-0.109230</td>\n      <td>0.032315</td>\n      <td>-0.154896</td>\n      <td>-0.163725</td>\n      <td>-0.233414</td>\n      <td>-0.199399</td>\n      <td>-0.207240</td>\n      <td>...</td>\n      <td>-0.184487</td>\n      <td>-0.191406</td>\n      <td>-0.158955</td>\n      <td>0.106836</td>\n      <td>0.073545</td>\n      <td>0.519778</td>\n      <td>-0.221428</td>\n      <td>-0.187045</td>\n      <td>-0.086689</td>\n      <td>-0.228142</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>image-scraper/images/pug/24d0f1eee3.jpg</td>\n      <td>-0.179735</td>\n      <td>-0.149042</td>\n      <td>-0.099841</td>\n      <td>-0.043361</td>\n      <td>-0.176758</td>\n      <td>-0.191918</td>\n      <td>-0.232161</td>\n      <td>-0.136291</td>\n      <td>-0.212060</td>\n      <td>...</td>\n      <td>-0.075074</td>\n      <td>-0.171430</td>\n      <td>-0.185827</td>\n      <td>0.104012</td>\n      <td>-0.179634</td>\n      <td>0.252138</td>\n      <td>-0.235885</td>\n      <td>-0.064212</td>\n      <td>-0.009336</td>\n      <td>-0.150108</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>image-scraper/images/pug/6fb189ce56.jpg</td>\n      <td>-0.188432</td>\n      <td>-0.128387</td>\n      <td>-0.153920</td>\n      <td>0.126379</td>\n      <td>-0.090949</td>\n      <td>-0.178837</td>\n      <td>-0.169744</td>\n      <td>-0.131994</td>\n      <td>-0.176617</td>\n      <td>...</td>\n      <td>0.470620</td>\n      <td>-0.133934</td>\n      <td>0.057369</td>\n      <td>0.198847</td>\n      <td>1.394713</td>\n      <td>-0.043932</td>\n      <td>-0.185945</td>\n      <td>-0.094914</td>\n      <td>-0.144376</td>\n      <td>0.320053</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>image-scraper/images/pug/ee815ebc87.jpg</td>\n      <td>-0.108604</td>\n      <td>-0.076769</td>\n      <td>-0.191977</td>\n      <td>-0.003384</td>\n      <td>-0.160474</td>\n      <td>-0.008317</td>\n      <td>-0.222178</td>\n      <td>-0.157181</td>\n      <td>-0.205097</td>\n      <td>...</td>\n      <td>0.162647</td>\n      <td>-0.003036</td>\n      <td>-0.095424</td>\n      <td>0.039418</td>\n      <td>-0.083985</td>\n      <td>0.276322</td>\n      <td>-0.185036</td>\n      <td>-0.169026</td>\n      <td>0.432216</td>\n      <td>0.229381</td>\n    </tr>\n  </tbody>\n</table>\n<p>4 rows Ã— 1793 columns</p>\n</div>\n\n\n\n### Extracting Features from a directory having one sub-folder per class\n\nIf the directory structure is the following:\n```\nmain_directory/\n...class_a/\n......a_image_1.jpg\n......a_image_2.jpg\n...class_b/\n......b_image_1.jpg\n......b_image_2.jpg\n```\nWe can enter `main_directory` as input by changing `classes_as_folders` as True:\n\n```\ndf=fe.extract_features_from_directory('image-scraper/images/',\n                                      classes_as_folders=True,\n                                      export_vectors_as_df=True,\n                                      export_class_names=True)\n\ndf.head()\n```\n\n    Found 504 images belonging to 6 classes.\n    16/16 [==============================] - 9s 565ms/step\n\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>filepaths</th>\n      <th>classes</th>\n      <th>0</th>\n      <th>1</th>\n      <th>2</th>\n      <th>3</th>\n      <th>4</th>\n      <th>5</th>\n      <th>6</th>\n      <th>7</th>\n      <th>...</th>\n      <th>1782</th>\n      <th>1783</th>\n      <th>1784</th>\n      <th>1785</th>\n      <th>1786</th>\n      <th>1787</th>\n      <th>1788</th>\n      <th>1789</th>\n      <th>1790</th>\n      <th>1791</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>image-scraper/images/chihuahua/00dcf98689.jpg</td>\n      <td>chihuahua</td>\n      <td>-0.159810</td>\n      <td>-0.143636</td>\n      <td>-0.163834</td>\n      <td>-0.189329</td>\n      <td>-0.221989</td>\n      <td>-0.205568</td>\n      <td>-0.032348</td>\n      <td>-0.196095</td>\n      <td>...</td>\n      <td>0.187660</td>\n      <td>0.382510</td>\n      <td>-0.098162</td>\n      <td>-0.184861</td>\n      <td>0.262455</td>\n      <td>0.031863</td>\n      <td>-0.142880</td>\n      <td>-0.176995</td>\n      <td>-0.137101</td>\n      <td>-0.197719</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>image-scraper/images/chihuahua/01ee02c2fb.jpg</td>\n      <td>chihuahua</td>\n      <td>-0.115785</td>\n      <td>-0.178243</td>\n      <td>-0.154352</td>\n      <td>-0.074939</td>\n      <td>-0.182898</td>\n      <td>-0.234842</td>\n      <td>0.201118</td>\n      <td>-0.172307</td>\n      <td>...</td>\n      <td>0.096958</td>\n      <td>-0.147701</td>\n      <td>-0.117756</td>\n      <td>-0.172870</td>\n      <td>0.753768</td>\n      <td>-0.196702</td>\n      <td>-0.142921</td>\n      <td>-0.159372</td>\n      <td>-0.219529</td>\n      <td>-0.172731</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>image-scraper/images/chihuahua/040df01fb4.jpg</td>\n      <td>chihuahua</td>\n      <td>-0.224309</td>\n      <td>-0.140264</td>\n      <td>-0.221784</td>\n      <td>0.082428</td>\n      <td>0.034317</td>\n      <td>-0.244586</td>\n      <td>-0.143733</td>\n      <td>-0.217184</td>\n      <td>...</td>\n      <td>0.113856</td>\n      <td>-0.015320</td>\n      <td>0.485527</td>\n      <td>0.115924</td>\n      <td>0.359226</td>\n      <td>0.059734</td>\n      <td>0.705865</td>\n      <td>-0.108514</td>\n      <td>-0.211965</td>\n      <td>-0.201553</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>image-scraper/images/chihuahua/04d8487a97.jpg</td>\n      <td>chihuahua</td>\n      <td>0.357453</td>\n      <td>0.228814</td>\n      <td>-0.130092</td>\n      <td>0.076011</td>\n      <td>-0.097715</td>\n      <td>0.076276</td>\n      <td>0.280204</td>\n      <td>-0.187367</td>\n      <td>...</td>\n      <td>0.510490</td>\n      <td>-0.069560</td>\n      <td>0.060880</td>\n      <td>-0.190473</td>\n      <td>-0.038110</td>\n      <td>-0.168990</td>\n      <td>-0.210013</td>\n      <td>-0.141430</td>\n      <td>-0.176050</td>\n      <td>0.030997</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>image-scraper/images/chihuahua/0d9fa44dea.jpg</td>\n      <td>chihuahua</td>\n      <td>-0.053391</td>\n      <td>-0.073038</td>\n      <td>-0.131840</td>\n      <td>-0.125724</td>\n      <td>-0.090771</td>\n      <td>-0.176459</td>\n      <td>0.088454</td>\n      <td>-0.138470</td>\n      <td>...</td>\n      <td>0.297104</td>\n      <td>0.212539</td>\n      <td>-0.039888</td>\n      <td>-0.214346</td>\n      <td>-0.026465</td>\n      <td>0.059569</td>\n      <td>-0.172730</td>\n      <td>-0.144529</td>\n      <td>0.012751</td>\n      <td>-0.211402</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 1794 columns</p>\n</div>\n\n\n\nThe usage of `export_class_names=True` will add a new column to the dataframe with the classes names.\n\n## Examples\n### Cats vs Dogs using Keras vs `deepfeatx`\nFirst let's compare the code of one of the simplest deep learning libraries (Keras) with `deepfeatx`. As example, let's use a subset of Cats vs Dogs:\n\n```\n#hide_output\nfrom deepfeatx.image import download_dataset\ndownload_dataset('https://github.com/dl7days/datasets/raw/master/cats-dogs-data.zip', 'cats-dogs-data.zip')\n```\n\nHere's the keras implementation for a great performance result:\n\n```\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Flatten, Dense, GlobalAveragePooling2D\nfrom tensorflow.keras.applications.resnet50 import ResNet50, preprocess_input\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\n\nTARGET_SHAPE = (224, 224, 3)\nTRAIN_PATH = 'cats-dogs-data/train'\nVALID_PATH = 'cats-dogs-data/valid'\n\ndatagen = ImageDataGenerator(preprocessing_function=preprocess_input)\ntrain_gen = datagen.flow_from_directory(TRAIN_PATH, \n                                        target_size=TARGET_SHAPE[:2], \n                                        class_mode='sparse')\nvalid_gen = datagen.flow_from_directory(VALID_PATH, \n                                        target_size=TARGET_SHAPE[:2], \n                                        class_mode='sparse',\n                                        shuffle=False)\n\nbase_model = ResNet50(include_top=False, input_shape=TARGET_SHAPE)\n\nfor layer in base_model.layers:\n    layer.trainable=False\n    \nmodel = Sequential([base_model,\n                    GlobalAveragePooling2D(),\n                    Dense(1024, activation='relu'),\n                    Dense(2, activation='softmax')])\n```\n\n    Found 2000 images belonging to 2 classes.\n    Found 400 images belonging to 2 classes.\n\n\n```\nmodel.compile(loss='sparse_categorical_crossentropy', \n              metrics=['accuracy'])\n```\n\n```\nmodel.fit(train_gen, epochs=3, validation_data=valid_gen)\n```\n\n    Epoch 1/3\n\n\n    2021-10-09 13:35:09.882000: I tensorflow/core/grappler/optimizers/custom_graph_optimizer_registry.cc:112] Plugin optimizer for device_type GPU is enabled.\n\n\n    63/63 [==============================] - ETA: 0s - loss: 0.5989 - accuracy: 0.9355\n\n    2021-10-09 13:35:33.430145: I tensorflow/core/grappler/optimizers/custom_graph_optimizer_registry.cc:112] Plugin optimizer for device_type GPU is enabled.\n\n\n    63/63 [==============================] - 29s 435ms/step - loss: 0.5989 - accuracy: 0.9355 - val_loss: 0.1222 - val_accuracy: 0.9750\n    Epoch 2/3\n    63/63 [==============================] - 28s 438ms/step - loss: 0.1239 - accuracy: 0.9695 - val_loss: 0.0506 - val_accuracy: 0.9900\n    Epoch 3/3\n    63/63 [==============================] - 27s 425ms/step - loss: 0.0941 - accuracy: 0.9795 - val_loss: 0.2257 - val_accuracy: 0.9725\n\n\n\n\n\n    <keras.callbacks.History at 0x16ffce0a0>\n\n\n\nBy looking at `val_accuracy` we can confirm the results seems great. Let's also plot some other metrics:\n\n```\nfrom sklearn.metrics import roc_auc_score, classification_report, confusion_matrix\nimport seaborn as sns\ny_pred = model.predict(valid_gen)\ny_test = valid_gen.classes\nroc = roc_auc_score(y_test, y_pred[:, 1])\nprint(\"ROC AUC Score\", roc)\n```\n\n    2021-10-09 13:36:39.564183: I tensorflow/core/grappler/optimizers/custom_graph_optimizer_registry.cc:112] Plugin optimizer for device_type GPU is enabled.\n\n\n    ROC AUC Score 0.99475\n\n\n```\ncm=confusion_matrix(y_test, y_pred.argmax(axis=1))\nsns.heatmap(cm, annot=True, fmt='g')\n```\n\n\n\n\n    <AxesSubplot:>\n\n\n\n\n![png](docs/images/output_22_1.png)\n\n\nAlthough we got an almost perfect clssifier, there are multiple details that someone who is coming from sklearn has to be careful when using Keras, for example:\n- Correctly setup the Data Generator\n- Select the optimizer and a learning rate\n- Adjust the batch size\n\nNow let's replicate the same results using `deepfeatx`:\n\n```\nfrom deepfeatx.image import ImageFeatureExtractor\nfrom sklearn.linear_model import LogisticRegression\n\nTRAIN_PATH = 'cats-dogs-data/train'\nVALID_PATH = 'cats-dogs-data/valid'\n\nfe = ImageFeatureExtractor()\n\ntrain=fe.extract_features_from_directory(TRAIN_PATH, \n                                         classes_as_folders=True,\n                                         export_class_names=True)\ntest=fe.extract_features_from_directory(VALID_PATH, \n                                         classes_as_folders=True,\n                                         export_class_names=True)\n\nX_train, y_train = train.drop(['filepaths', 'classes'], axis=1), train['classes']\nX_test, y_test = test.drop(['filepaths', 'classes'], axis=1), test['classes']\nlr = LogisticRegression().fit(X_train, y_train)\n```\n\n    Found 2000 images belonging to 2 classes.\n\n\n    2021-10-09 13:37:10.903967: I tensorflow/core/grappler/optimizers/custom_graph_optimizer_registry.cc:112] Plugin optimizer for device_type GPU is enabled.\n\n\n    63/63 [==============================] - 22s 353ms/step\n    Found 400 images belonging to 2 classes.\n    13/13 [==============================] - 4s 354ms/step\n\n\n    /Users/wittmann/miniforge3/envs/mlp/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):\n    STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n    \n    Increase the number of iterations (max_iter) or scale the data as shown in:\n        https://scikit-learn.org/stable/modules/preprocessing.html\n    Please also refer to the documentation for alternative solver options:\n        https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n      n_iter_i = _check_optimize_result(\n\n\n```\nroc_auc_score(y_test, lr.predict_proba(X_test)[:, 1])\n```\n\n\n\n\n    0.9996\n\n\n\n```\nimport seaborn as sns\ncm=confusion_matrix(y_test, lr.predict(X_test))\nsns.heatmap(cm, annot=True, fmt='g')\n```\n\n\n\n\n    <AxesSubplot:>\n\n\n\n\n![png](docs/images/output_26_1.png)\n\n\nEven though the code is smaller, is still as powerful as the keras code and also very flexible. The most important part is the feature extraction, which `deepfeatx` take care for us, and the rest can be performed as any other ML problem.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/wittmannf/deepfeatx/tree/{branch}/",
    "keywords": "deep learning,transfer learning,feature extraction,bottleneck features",
    "license": "Apache Software License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "deepfeatx",
    "package_url": "https://pypi.org/project/deepfeatx/",
    "platform": "",
    "project_url": "https://pypi.org/project/deepfeatx/",
    "project_urls": {
      "Homepage": "https://github.com/wittmannf/deepfeatx/tree/{branch}/"
    },
    "release_url": "https://pypi.org/project/deepfeatx/0.1.3/",
    "requires_dist": [
      "numpy",
      "tensorflow (>=1.14.0)",
      "torchvision (>=0.2.2)",
      "requests",
      "pandas",
      "matplotlib",
      "Pillow",
      "scipy",
      "scikit-learn",
      "seaborn"
    ],
    "requires_python": ">=3.6",
    "summary": "\"Automatic Feature Extraction in Images and Texts using Transfer Learning\"",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11676109,
  "releases": {
    "0.0.2b0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "23d6daf2ac79cac1c2944828fa3a7e4c5d9a4b1a2e917f51c4db5261f8d9159a",
          "md5": "e1a44049c1519bf8d2ab6ae9df868647",
          "sha256": "a81cbe00643a5fe66f1fcf7229061a1b9500e5f2b976b56f1e73b82a35568eb2"
        },
        "downloads": -1,
        "filename": "deepfeatx-0.0.2b0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e1a44049c1519bf8d2ab6ae9df868647",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 17345,
        "upload_time": "2021-04-04T03:13:36",
        "upload_time_iso_8601": "2021-04-04T03:13:36.297637Z",
        "url": "https://files.pythonhosted.org/packages/23/d6/daf2ac79cac1c2944828fa3a7e4c5d9a4b1a2e917f51c4db5261f8d9159a/deepfeatx-0.0.2b0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "31f2b1d1250d43891f79c6a630a1165124bd4bd131951fd8e84a2a779824b61c",
          "md5": "bed3ce0c888fba57c48f58fb41a82aa4",
          "sha256": "9d12fced1e5e1d967671339161503bea146cf3daa1a94a71f8f2c3f481c3ee3a"
        },
        "downloads": -1,
        "filename": "deepfeatx-0.0.2b0.tar.gz",
        "has_sig": false,
        "md5_digest": "bed3ce0c888fba57c48f58fb41a82aa4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11781,
        "upload_time": "2021-04-04T03:13:37",
        "upload_time_iso_8601": "2021-04-04T03:13:37.878725Z",
        "url": "https://files.pythonhosted.org/packages/31/f2/b1d1250d43891f79c6a630a1165124bd4bd131951fd8e84a2a779824b61c/deepfeatx-0.0.2b0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2b1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "11642f83deecf5fbaea43ecad6fb695cab9c50dd6e1d07c524b0f2fb6600bd55",
          "md5": "37f44c9722ebd64c07b79202129027f6",
          "sha256": "71ff9b5406e057c9c9069e45aa53b7ffc50531d766e4ea59c3545bbfbfc968e4"
        },
        "downloads": -1,
        "filename": "deepfeatx-0.0.2b1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "37f44c9722ebd64c07b79202129027f6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 17311,
        "upload_time": "2021-04-04T03:31:19",
        "upload_time_iso_8601": "2021-04-04T03:31:19.847192Z",
        "url": "https://files.pythonhosted.org/packages/11/64/2f83deecf5fbaea43ecad6fb695cab9c50dd6e1d07c524b0f2fb6600bd55/deepfeatx-0.0.2b1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "26b66ebc71f9500d6daa7ab059c773bc3849e7ccdf2dd1a751c5b929a9343b77",
          "md5": "af37d7c05bae39a7163815ea0352addf",
          "sha256": "092f7fe3a7cd6c7fdb7228833db1dc0ea91bb6afa34979d6ed8d8ce107902ba5"
        },
        "downloads": -1,
        "filename": "deepfeatx-0.0.2b1.tar.gz",
        "has_sig": false,
        "md5_digest": "af37d7c05bae39a7163815ea0352addf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11744,
        "upload_time": "2021-04-04T03:31:21",
        "upload_time_iso_8601": "2021-04-04T03:31:21.347323Z",
        "url": "https://files.pythonhosted.org/packages/26/b6/6ebc71f9500d6daa7ab059c773bc3849e7ccdf2dd1a751c5b929a9343b77/deepfeatx-0.0.2b1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0b0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "39985253b2407771da6db3b5a552d17afb6094ee40630e7f22f45bb203b98286",
          "md5": "4a872330e08587890d4ff95c082c1a1f",
          "sha256": "92a5861771a4e9b81675237c1472cfbe8740a5452b3838d39c451512366db5c1"
        },
        "downloads": -1,
        "filename": "deepfeatx-0.1.0b0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4a872330e08587890d4ff95c082c1a1f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 17421,
        "upload_time": "2021-04-10T22:28:27",
        "upload_time_iso_8601": "2021-04-10T22:28:27.406716Z",
        "url": "https://files.pythonhosted.org/packages/39/98/5253b2407771da6db3b5a552d17afb6094ee40630e7f22f45bb203b98286/deepfeatx-0.1.0b0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "96863d0286fedd5a62bd104e59a2964599f24f943259f515f5e0f71ef25b31f3",
          "md5": "6878914701955af4cedbf01903c1f75c",
          "sha256": "2dbea828d3d91d2ec4d35d5a35e9cb10af944a4c217e28f9b72a3ad83fd0bd0a"
        },
        "downloads": -1,
        "filename": "deepfeatx-0.1.0b0.tar.gz",
        "has_sig": false,
        "md5_digest": "6878914701955af4cedbf01903c1f75c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10630,
        "upload_time": "2021-04-10T22:28:28",
        "upload_time_iso_8601": "2021-04-10T22:28:28.611009Z",
        "url": "https://files.pythonhosted.org/packages/96/86/3d0286fedd5a62bd104e59a2964599f24f943259f515f5e0f71ef25b31f3/deepfeatx-0.1.0b0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c3de48e4de0de8f4f216422fe6db69bb8edbc482aa43dd002957c27a4e701112",
          "md5": "2fc0e3bfd39d586d29be6e20ee0ad400",
          "sha256": "067a2e5ee9f6db2638eb5fb7d75b577155d946e185a5b827f45a349ee4509840"
        },
        "downloads": -1,
        "filename": "deepfeatx-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2fc0e3bfd39d586d29be6e20ee0ad400",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 22550,
        "upload_time": "2021-10-06T14:34:03",
        "upload_time_iso_8601": "2021-10-06T14:34:03.552883Z",
        "url": "https://files.pythonhosted.org/packages/c3/de/48e4de0de8f4f216422fe6db69bb8edbc482aa43dd002957c27a4e701112/deepfeatx-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fdedc363732e156715b2f001fb6a00d3f59e3f7a615865316cf20a75748d1b8a",
          "md5": "9593d2e3e65df35ac1d359c2bfdd164a",
          "sha256": "e570a7b22e6d4f5daac35414365c69c30ba0eee08ca6f8b185080e62410ddee3"
        },
        "downloads": -1,
        "filename": "deepfeatx-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "9593d2e3e65df35ac1d359c2bfdd164a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 50881,
        "upload_time": "2021-10-06T14:34:05",
        "upload_time_iso_8601": "2021-10-06T14:34:05.476985Z",
        "url": "https://files.pythonhosted.org/packages/fd/ed/c363732e156715b2f001fb6a00d3f59e3f7a615865316cf20a75748d1b8a/deepfeatx-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a3c35d384d0656a1306867903aeafb0db84e7d6995c0afe08d52a3bee5b84140",
          "md5": "74b2af76e48976300cf93ecc5d010c0c",
          "sha256": "d86d0ae0794ee7257eecd2f1266dd1d6f12baf99b26bbde39c8f97d6a9bef27f"
        },
        "downloads": -1,
        "filename": "deepfeatx-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "74b2af76e48976300cf93ecc5d010c0c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 13416,
        "upload_time": "2021-10-09T16:52:55",
        "upload_time_iso_8601": "2021-10-09T16:52:55.420254Z",
        "url": "https://files.pythonhosted.org/packages/a3/c3/5d384d0656a1306867903aeafb0db84e7d6995c0afe08d52a3bee5b84140/deepfeatx-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "451e56af0c7621af253f1d3843cd7560fc18525585c954caa8ebd3893d089b64",
          "md5": "f3ab406f8847e43c9c947543e8586cec",
          "sha256": "63e03d3ac0fc7e8447d63e0d531b297e97a20ce93e6b42b54becbf150812c997"
        },
        "downloads": -1,
        "filename": "deepfeatx-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "f3ab406f8847e43c9c947543e8586cec",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19714,
        "upload_time": "2021-10-09T16:52:57",
        "upload_time_iso_8601": "2021-10-09T16:52:57.320230Z",
        "url": "https://files.pythonhosted.org/packages/45/1e/56af0c7621af253f1d3843cd7560fc18525585c954caa8ebd3893d089b64/deepfeatx-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a3c35d384d0656a1306867903aeafb0db84e7d6995c0afe08d52a3bee5b84140",
        "md5": "74b2af76e48976300cf93ecc5d010c0c",
        "sha256": "d86d0ae0794ee7257eecd2f1266dd1d6f12baf99b26bbde39c8f97d6a9bef27f"
      },
      "downloads": -1,
      "filename": "deepfeatx-0.1.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "74b2af76e48976300cf93ecc5d010c0c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 13416,
      "upload_time": "2021-10-09T16:52:55",
      "upload_time_iso_8601": "2021-10-09T16:52:55.420254Z",
      "url": "https://files.pythonhosted.org/packages/a3/c3/5d384d0656a1306867903aeafb0db84e7d6995c0afe08d52a3bee5b84140/deepfeatx-0.1.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "451e56af0c7621af253f1d3843cd7560fc18525585c954caa8ebd3893d089b64",
        "md5": "f3ab406f8847e43c9c947543e8586cec",
        "sha256": "63e03d3ac0fc7e8447d63e0d531b297e97a20ce93e6b42b54becbf150812c997"
      },
      "downloads": -1,
      "filename": "deepfeatx-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "f3ab406f8847e43c9c947543e8586cec",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 19714,
      "upload_time": "2021-10-09T16:52:57",
      "upload_time_iso_8601": "2021-10-09T16:52:57.320230Z",
      "url": "https://files.pythonhosted.org/packages/45/1e/56af0c7621af253f1d3843cd7560fc18525585c954caa8ebd3893d089b64/deepfeatx-0.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}