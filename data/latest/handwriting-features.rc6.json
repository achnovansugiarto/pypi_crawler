{
  "info": {
    "author": "Brain Diseases Analysis Laboratory",
    "author_email": "galaz@vut.cz",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "# Handwriting features\n\n![GitHub last commit](https://img.shields.io/github/last-commit/BDALab/handwriting-features)\n![GitHub issues](https://img.shields.io/github/issues/BDALab/handwriting-features)\n![GitHub code size in bytes](https://img.shields.io/github/languages/code-size/BDALab/handwriting-features)\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/handwriting-features)\n![GitHub top language](https://img.shields.io/github/languages/top/BDALab/handwriting-features)\n![GitHub](https://img.shields.io/github/license/BDALab/handwriting-features)\n\nThis package provides a [PyPi-installable](https://pypi.org/project/handwriting-features/) easy-to-use modern library for the extraction of a variety of common handwriting features focused on the domain of kinematic, dynamic, spatial, and temporal analysis of online handwriting/drawing. It is built on top of the [Handwriting sample](https://github.com/BDALab/handwriting-sample/) package for easy class-based manipulation with online handwriting data.\n\nIt also provides an interface for the Featurizer API: \n1. [Server side](https://github.com/BDALab/featurizer-api/) (RESTful API for feature extraction via injected features extraction library)\n2. [Client side](https://github.com/BDALab/featurizer-api-client/) (lightweight client application)\n\n_The full programming sphinx-generated docs can be seen in the [official documentation](https://handwriting-features.readthedocs.io/en/latest/)_.\n\n**Contents**:\n1. [Installation](#Installation)\n2. [Features](#Features)\n3. [Usage](#Usage)\n4. [Interface](#Interface)\n5. [Examples](#Examples)\n6. [License](#License)\n7. [Contributors](#Contributors)\n\n---\n\n## Installation\n\n```\npip install handwriting-features\n```\n\n## Features\n\nThe following list of handwriting features is supported:\n1. kinematic features\n   1. velocity\n   2. acceleration\n   3. jerk\n2. dynamic features\n   1. azimuth\n   2. tilt\n   3. pressure\n3. spatial features\n   1. stroke length\n   2. stroke height\n   3. stroke width\n   4. writing length\n   5. writing height\n   6. writing width\n   7. number of intra-stroke intersections\n   8. relative number of intra-stroke intersections\n   9. total number of intra-stroke intersections\n   10. relative total number of intra-stroke intersections\n   11. number of inter-stroke intersections\n   12. relative number of inter-stroke intersections\n   13. vertical peaks indices\n   14. vertical valleys indices\n   15. vertical peaks values\n   16. vertical valleys values\n   17. vertical peaks velocity\n   18. vertical valleys velocity\n   19. vertical peaks distance\n   20. vertical valleys distance\n   21. vertical peaks duration\n   22. vertical valleys duration\n4. temporal features\n   1. stroke duration\n   2. ratio of stroke durations (on-surface / in-air strokes)\n   3. writing duration\n   4. writing duration overall\n   5. ratio of writing durations (on-surface / in-air writing)\n   6. number of interruptions\n   7. number of interruptions relative\n5. composite features\n   1. writing tempo\n   2. writing stops\n   3. number of changes in x profile\n   4. number of changes in y profile\n   5. number of changes in azimuth\n   6. number of changes in tilt\n   7. number of changes in pressure\n   8. number of changes in velocity profile\n   9. relative number of changes in x profile\n   10. relative number of changes in y profile\n   11. relative number of changes in azimuth\n   12. relative number of changes in tilt\n   13. relative number of changes in pressure\n   14. relative number of changes in velocity profile\n\n## Usage\n\nThe main entry point and the class to be used for the computation of the handwriting features is named `HandwritingFeatures`. To compute the features, an instance of `HandwritingFeatures` must be created using valid handwriting data in the form of an instance of the wrapper on top of the `HadwritingSample` named `HandwritingSampleWrapper`. The `HandwritingSample` is a class for the manipulation with online handwriting data installed from [this repository](https://github.com/BDALab/handwriting-sample/). The `HandwritingSampleWrapper` is used to enrich the `HandwritingSample` with the capabilities specific to the feature extraction.\n\nTo support alternative ways of instantiating the `HandwritingFeatures` from handwriting data stored in various data/file formats, the `HandwritingFeatures` provides the following alternative constructor methods:\n1. for various data formats\n   1. `from_list`\n   2. `from_numpy_array`\n   3. `from_pandas_dataframe`\n2. for various file formats\n   1. `from_json`\n   2. `from_svc`\n\nAfter the `HandwritingFeatures` object is instantiated, the supported handwriting features can be computed using the following methods:\n1. kinematic features\n   1. `velocity`\n   2. `acceleration`\n   3. `jerk`\n2. dynamic features\n   1. `azimuth`\n   2. `tilt`\n   3. `pressure`\n3. spatial features\n   1. `stroke_length`\n   2. `stroke_height`\n   3. `stroke_width`\n   4. `writing_length`\n   5. `writing_height`\n   6. `writing_width`\n   7. `number_of_intra_stroke_intersections`\n   8. `relative_number_of_intra_stroke_intersections`\n   9. `total_number_of_intra_stroke_intersections`\n   10. `relative_total_number_of_intra_stroke_intersections`\n   11. `number_of_inter_stroke_intersections`\n   12. `relative_number_of_inter_stroke_intersections`\n   13. `vertical_peaks_indices`\n   14. `vertical_valleys_indices`\n   15. `vertical_peaks_values`\n   16. `vertical_valleys_values`\n   17. `vertical_peaks_velocity`\n   18. `vertical_valleys_velocity`\n   19. `vertical_peaks_distance`\n   20. `vertical_valleys_distance`\n   21. `vertical_peaks_duration`\n   22. `vertical_valleys_duration`\n4. temporal features\n   1. `stroke_duration`\n   2. `ratio_of_stroke_durations`\n   3. `writing_duration`\n   4. `writing_duration_overall`\n   5. `ratio_of_writing_durations`\n   6. `number_of_interruptions`\n   7. `number_of_interruptions_relative`\n5. composite features\n   1. `writing_tempo`\n   2. `writing_stops`\n   3. `number_of_changes_in_x_profile`\n   4. `number_of_changes_in_y_profile`\n   5. `number_of_changes_in_azimuth`\n   6. `number_of_changes_in_tilt`\n   7. `number_of_changes_in_pressure`\n   8. `number_of_changes_in_velocity_profile`\n   9. `relative_number_of_changes_in_x_profile`\n   10. `relative_number_of_changes_in_y_profile`\n   11. `relative_number_of_changes_in_azimuth`\n   12. `relative_number_of_changes_in_tilt`\n   13. `relative_number_of_changes_in_pressure`\n   14. `relative_number_of_changes_in_velocity_profile`\n\nFor more information, see the [Examples](#Examples) section.\n\n## Interface\n\nBesides, the convenient use of the `HandwritingFeatures` interface class, the library also provides an interface for the [Featurizer API](https://github.com/BDALab/featurizer-api/) at `src/handwriting_features/interface/featurizer/`. The Featurizer API supports the feature extraction from handwriting data of 1-M subjects given the pipeline of features. This offers an additional option to extract a variety of handwriting features via a micro-service type of architecture via injecting the handwriting features library into the API as the feature extractor to be used. For more information, see the [official documentation](https://featurizer-api.readthedocs.io/en/latest/) of the Featurizer API.\n\n## Examples\n\nThe package comes with examples showing how to compute/plot the handwriting features. For this purpose, it also provides example data from a subset of 4 writers coming from the Parkinson's Disease Handwriting Database (PaHaW): 2 healthy controls (HC; 1 male, 1 female) and 2 patients with Parkinson's disease (PD; 1 male, 1 female).\n\nFor more information about the example data, see the info file at `examples/data/info.json` or visit the official website of [Brain Diseases Analysis Laboratory](http://bdalab.utko.feec.vutbr.cz/).\n\n### 1. compute handwriting features\n\n```python\nimport os\nfrom handwriting_features.features import HandwritingFeatures\n\n\n# Prepare the path to example data\ndata_path = os.path.join(os.path.dirname(os.path.realpath(__file__)), \"..\", \"data\")\n\n\n# Prepare the subject group\nsubject_group = \"HC-female\"\n# subject_group = \"HC-male\"\n# subject_group = \"PD-female\"\n# subject_group = \"PD-male\"\n\n# Prepare the filename of the signal to be used\nsignal_name = \"00026_w.cz.fnusa.1_1.svc\"\n\n# Prepare the handwriting variables\nvariables = [\"y\", \"x\", \"time\", \"pen_status\", \"azimuth\", \"tilt\", \"pressure\"]\n\n# Instantiate the handwriting features object from an example signal\nfeature_path = str(os.path.join(data_path, subject_group, signal_name))\nfeature_data = HandwritingFeatures.from_svc(feature_path, variables)\n\n# Prepare the sampling frequency\nfs = 133\n\n# Handwriting features:\n#\n# 1. Kinematic features\n#    a) velocity\n#    b) acceleration\n#    c) jerk\n# 2. Dynamic features\n#    a) azimuth\n#    b) tilt\n#    c) pressure\n# 3. Spatial features\n#    a) stroke length\n#    b) stroke height\n#    c) stroke width\n#    d) writing length\n#    e) writing height\n#    f) writing width\n#    g) number of intra-stroke intersections\n#    h) relative number of intra-stroke intersections\n#    i) total number of intra-stroke intersections\n#    j) relative total number of intra-stroke intersections\n#    k) number of inter-stroke intersections\n#    l) relative number of inter-stroke intersections\n#    m) vertical peaks indices\n#    n) vertical valleys indices\n#    o) vertical peaks values\n#    p) vertical valleys values\n#    q) vertical peaks velocity\n#    r) vertical valleys velocity\n#    s) vertical peaks distance\n#    t) vertical valleys distance\n#    u) vertical peaks duration\n#    v) vertical valleys duration\n# 4. Temporal features\n#    a) stroke duration\n#    b) ratio of stroke durations (on-surface / in-air strokes)\n#    c) writing duration\n#    d) writing duration overall\n#    e) ratio of writing durations (on-surface / in-air writing)\n#    f) number of interruptions\n#    g) number of interruptions_relative\n# 5. Composite features\n#    a) writing tempo\n#    b) writing stops\n#    c) number of changes in x profile\n#    d) number of changes in y profile\n#    e) number of changes in azimuth\n#    f) number of changes in tilt\n#    g) number of changes in pressure\n#    h) number of changes in velocity profile\n#    i) relative number of changes in x profile\n#    j) relative number of changes in y profile\n#    k) relative number of changes in azimuth\n#    l) relative number of changes in tilt\n#    m) relative number of changes in pressure\n#    n) relative number of changes in velocity profile\n\n# 1. Kinematic features\nfeature_data.velocity(axis=\"x\", in_air=False, statistics=[\"mean\", \"std\"])\nfeature_data.acceleration(axis=\"y\", in_air=True, statistics=[\"median\", \"iqr\"])\nfeature_data.jerk(axis=\"xy\", in_air=False)\n\n# 2. Dynamic features\nfeature_data.azimuth(in_air=False, statistics=[\"cv_parametric\"])\nfeature_data.tilt(in_air=True, statistics=[\"cv_nonparametric\"])\nfeature_data.pressure(statistics=())\n\n# 3. Spatial features\nfeature_data.stroke_length(in_air=False, statistics=[\"quartile_1\", \"quartile_3\"])\nfeature_data.stroke_height(in_air=True, statistics=[\"slope_of_linear_regression\"])\nfeature_data.stroke_width(in_air=False, statistics=())\n# ...\n\n# 4. Temporal features\nfeature_data.stroke_duration(in_air=False, statistics=[\"percentile_5\", \"percentile_95\"])\nfeature_data.ratio_of_stroke_durations(statistics=())\nfeature_data.writing_duration(in_air=True)\nfeature_data.ratio_of_writing_durations()\n# ...\n\n# 5. Composite features\nfeature_data.writing_tempo(in_air=False)\nfeature_data.writing_stops(statistics=[\"mean\", \"std\"])\n# ...\n```\n\n### 2. plot handwriting features\n\n```python\nimport os\nimport matplotlib.pyplot as plt\nfrom pprint import pprint\nfrom handwriting_features.features import HandwritingFeatures\n\n\n# Prepare the path to example data\ndata_path = os.path.join(os.path.dirname(os.path.realpath(__file__)), \"..\", \"data\")\n\n\n# Prepare the subject group\nsubject_group = \"HC-female\"\n# subject_group = \"HC-male\"\n# subject_group = \"PD-female\"\n# subject_group = \"PD-male\"\n\n# Prepare the filename of the signal to be used\nsignal_name = \"00026_w.cz.fnusa.1_1.svc\"\n\n# Prepare the handwriting variables\nvariables = [\"y\", \"x\", \"time\", \"pen_status\", \"azimuth\", \"tilt\", \"pressure\"]\n\n# Instantiate the handwriting features object from an example signal\nfeature_path = str(os.path.join(data_path, subject_group, signal_name))\nfeature_data = HandwritingFeatures.from_svc(feature_path, variables)\n\n# Extract the loaded data (wrapped handwriting sample)\nloaded_data = feature_data.wrapper\n\n# Prepare the sampling frequency\nfs = 133\n\n# Handwriting features:\n#\n# 1. Kinematic features\n#    a) velocity\n#    b) acceleration\n#    c) jerk\n# 2. Dynamic features\n#    a) azimuth\n#    b) tilt\n#    c) pressure\n# 3. Spatial features\n#    a) stroke length\n#    b) stroke height\n#    c) stroke width\n#    d) writing length\n#    e) writing height\n#    f) writing width\n#    g) number of intra-stroke intersections\n#    h) relative number of intra-stroke intersections\n#    i) total number of intra-stroke intersections\n#    j) relative total number of intra-stroke intersections\n#    k) number of inter-stroke intersections\n#    l) relative number of inter-stroke intersections\n#    m) vertical peaks indices\n#    n) vertical valleys indices\n#    o) vertical peaks values\n#    p) vertical valleys values\n#    q) vertical peaks velocity\n#    r) vertical valleys velocity\n#    s) vertical peaks distance\n#    t) vertical valleys distance\n#    u) vertical peaks duration\n#    v) vertical valleys duration\n# 4. Temporal features\n#    a) stroke duration\n#    b) ratio of stroke durations (on-surface / in-air strokes)\n#    c) writing duration\n#    d) writing duration overall\n#    e) ratio of writing durations (on-surface / in-air writing)\n#    f) number of interruptions\n#    g) number of interruptions_relative\n# 5. Composite features\n#    a) writing tempo\n#    b) writing stops\n#    c) number of changes in x profile\n#    d) number of changes in y profile\n#    e) number of changes in azimuth\n#    f) number of changes in tilt\n#    g) number of changes in pressure\n#    h) number of changes in velocity profile\n#    i) relative number of changes in x profile\n#    j) relative number of changes in y profile\n#    k) relative number of changes in azimuth\n#    l) relative number of changes in tilt\n#    m) relative number of changes in pressure\n#    n) relative number of changes in velocity profile\n\n# Prepare the features computation\naxis = \"x\"\nin_air = False\nstatistics = ()\n\n# 1. Compute the kinematic features\nfeature = feature_data.velocity(axis=axis, in_air=in_air, statistics=statistics)\n# feature = feature_data.acceleration(axis=axis, in_air=in_air, statistics=statistics)\n# feature = feature_data.jerk(axis=axis, in_air=in_air, statistics=statistics)\n\n# 2. Compute the dynamic features\n# feature = feature_data.azimuth(in_air=in_air, statistics=statistics)\n# feature = feature_data.tilt(in_air=in_air, statistics=statistics)\n# feature = feature_data.pressure(statistics=statistics)\n\n# 3. Compute the spatial features\n# feature = feature_data.stroke_length(in_air=in_air, statistics=statistics)\n# feature = feature_data.stroke_height(in_air=in_air, statistics=statistics)\n# feature = feature_data.stroke_width(in_air=in_air, statistics=statistics)\n# ...\n\n# 4. Compute the temporal features\n# feature = feature_data.stroke_duration(in_air=in_air, statistics=statistics)\n# feature = feature_data.ratio_of_stroke_durations(statistics=statistics)\n# feature = feature_data.writing_duration(in_air=in_air)\n# feature = feature_data.ratio_of_writing_durations()\n# ...\n\n# 5. Compute the composite features\n# feature_data.writing_tempo(in_air=False)\n# feature_data.writing_stops(statistics=[\"mean\", \"std\"])\n# ...\n\npprint(feature)\n\n# Plot the original data and the computed feature\nif not statistics:\n\n    fig = plt.figure(figsize=(16, 10))\n\n    # Plot the original data\n    ax = fig.add_subplot(1, 2, 1)\n    ax.plot(loaded_data.sample_x, loaded_data.sample_y, \"-\", color=\"blue\", linewidth=2, alpha=0.7)\n    ax.yaxis.grid(True)\n    ax.xaxis.grid(True)\n\n    # Plot the original data\n    ax = fig.add_subplot(1, 2, 2)\n    ax.plot(feature, \"-\", color=\"red\", linewidth=2, alpha=0.7)\n    ax.yaxis.grid(True)\n    ax.xaxis.grid(True)\n\n    # Adjust the figure\n    fig.tight_layout()\n\n    # Store the graphs\n    # plt.savefig(f\"{signal_name}.pdf\", bbox_inches=\"tight\")\n\n    # Show the graphs\n    plt.get_current_fig_manager().window.state(\"zoomed\")\n    plt.show()\n```\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.\n\n## Contributors\n\nThis package is developed by the members of [Brain Diseases Analysis Laboratory](http://bdalab.utko.feec.vutbr.cz/). For more information, please contact the head of the laboratory Jiri Mekyska <mekyska@vut.cz> or the main developer: Zoltan Galaz <galaz@vut.cz>.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/BDALab/handwriting-features",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "handwriting-features",
    "package_url": "https://pypi.org/project/handwriting-features/",
    "platform": null,
    "project_url": "https://pypi.org/project/handwriting-features/",
    "project_urls": {
      "Homepage": "https://github.com/BDALab/handwriting-features"
    },
    "release_url": "https://pypi.org/project/handwriting-features/1.0.5/",
    "requires_dist": [
      "numpy",
      "pandas",
      "scipy",
      "handwriting-sample"
    ],
    "requires_python": ">=3.7",
    "summary": "Handwriting features",
    "version": "1.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16576411,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "87d7712e1a013c1360efdb7070de704dc1dce25d4ae18d8efd6b6ecd3152110e",
          "md5": "5ae1e02ed035be0ff9837c6ec39435a6",
          "sha256": "b1d944565f1baf588ed15c5125cd759a090df8c06a1e65d1b5dd1c2c63192fea"
        },
        "downloads": -1,
        "filename": "handwriting_features-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5ae1e02ed035be0ff9837c6ec39435a6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 28474,
        "upload_time": "2021-12-04T13:31:53",
        "upload_time_iso_8601": "2021-12-04T13:31:53.581864Z",
        "url": "https://files.pythonhosted.org/packages/87/d7/712e1a013c1360efdb7070de704dc1dce25d4ae18d8efd6b6ecd3152110e/handwriting_features-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fe8dd230c1d8f39fd0119c0a5454fafbc7820370be0503a17362f99e2efadaf0",
          "md5": "ee32beff244385718ef9ae75625a58d6",
          "sha256": "2495ab8c1a4d8d2825501cfa76654981307d0dbfddc7bd491ee2286fa8d063c0"
        },
        "downloads": -1,
        "filename": "handwriting-features-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ee32beff244385718ef9ae75625a58d6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 972584,
        "upload_time": "2021-12-04T13:31:59",
        "upload_time_iso_8601": "2021-12-04T13:31:59.158093Z",
        "url": "https://files.pythonhosted.org/packages/fe/8d/d230c1d8f39fd0119c0a5454fafbc7820370be0503a17362f99e2efadaf0/handwriting-features-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b8a322e61a537bf2f2577fdc6992c0affee4b907d9939685480ada0ab55f3ff1",
          "md5": "49e68c42381a694ae6a2757526f618d1",
          "sha256": "afb8c36d8ea8722c70f195fdbbb2ef56cb3e3d147a55e4b709cfea9f06600b12"
        },
        "downloads": -1,
        "filename": "handwriting_features-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "49e68c42381a694ae6a2757526f618d1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 28578,
        "upload_time": "2022-03-30T14:04:52",
        "upload_time_iso_8601": "2022-03-30T14:04:52.459312Z",
        "url": "https://files.pythonhosted.org/packages/b8/a3/22e61a537bf2f2577fdc6992c0affee4b907d9939685480ada0ab55f3ff1/handwriting_features-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a04947375705477d1934f8a5cce8ca0f07930660c7d7ddcea8ca10ebfd828b31",
          "md5": "5647a7c7c2aa201842c5506134871071",
          "sha256": "6288eee7981ee009cc55acfda06e44e7ce6321e38e47cf39f1d6685978ae308f"
        },
        "downloads": -1,
        "filename": "handwriting-features-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5647a7c7c2aa201842c5506134871071",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 972638,
        "upload_time": "2022-03-30T14:04:57",
        "upload_time_iso_8601": "2022-03-30T14:04:57.005936Z",
        "url": "https://files.pythonhosted.org/packages/a0/49/47375705477d1934f8a5cce8ca0f07930660c7d7ddcea8ca10ebfd828b31/handwriting-features-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8d7bbf3a530f70f2a916442da487632c0be967b3bfa9579c7e28e17bfb15970c",
          "md5": "a334cdfd291038fd418b83584187b106",
          "sha256": "de86a9a6125003eebfd5e2d1198eb3b94ead560ddd6077b7900a281a0c053e7b"
        },
        "downloads": -1,
        "filename": "handwriting_features-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a334cdfd291038fd418b83584187b106",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 34534,
        "upload_time": "2022-05-09T09:39:06",
        "upload_time_iso_8601": "2022-05-09T09:39:06.125335Z",
        "url": "https://files.pythonhosted.org/packages/8d/7b/bf3a530f70f2a916442da487632c0be967b3bfa9579c7e28e17bfb15970c/handwriting_features-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9df98c573849fff213319dac5df04469d936b6cba6abe3a930a7c92e0cc0d113",
          "md5": "a380021961fe4d629e15bf5ba2bdedd2",
          "sha256": "2b76c3218cb7f0ae241c9f1bf849e209c60aac3ddc69a00051d3065b3cfc84c0"
        },
        "downloads": -1,
        "filename": "handwriting-features-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a380021961fe4d629e15bf5ba2bdedd2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 27627,
        "upload_time": "2022-05-09T09:39:08",
        "upload_time_iso_8601": "2022-05-09T09:39:08.339700Z",
        "url": "https://files.pythonhosted.org/packages/9d/f9/8c573849fff213319dac5df04469d936b6cba6abe3a930a7c92e0cc0d113/handwriting-features-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0d54c53cd2461c3244b5fd00b15ebb09d62cc7edc04ae1eaa38652521802ef94",
          "md5": "1ffee576c4eeea3008e72330a50f53a9",
          "sha256": "47248b8a7004c66e232ce6703d2f51d6957efe66973fb83570433e61ae8e1622"
        },
        "downloads": -1,
        "filename": "handwriting_features-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1ffee576c4eeea3008e72330a50f53a9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 41354,
        "upload_time": "2022-12-15T10:23:19",
        "upload_time_iso_8601": "2022-12-15T10:23:19.466692Z",
        "url": "https://files.pythonhosted.org/packages/0d/54/c53cd2461c3244b5fd00b15ebb09d62cc7edc04ae1eaa38652521802ef94/handwriting_features-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eda2fa67f247394fc5191d42923c299d2fb874d201e3e91211bc51eeef7e86fe",
          "md5": "e261fed6ab8207bf7164a5e4f02e79df",
          "sha256": "98fe9d303fae7bdf66254522c9728f348477d15a25ef2da4186a0eba04fd408d"
        },
        "downloads": -1,
        "filename": "handwriting-features-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "e261fed6ab8207bf7164a5e4f02e79df",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 33664,
        "upload_time": "2022-12-15T10:23:22",
        "upload_time_iso_8601": "2022-12-15T10:23:22.674908Z",
        "url": "https://files.pythonhosted.org/packages/ed/a2/fa67f247394fc5191d42923c299d2fb874d201e3e91211bc51eeef7e86fe/handwriting-features-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e36bfeac6521cce13fe5644ff13270ce7e64e6c53b3e1f564a678e8dc2cabeb5",
          "md5": "ff143df1a2733fc4383ec657f67f1844",
          "sha256": "502de59cd455ac224ffcc66ee2bc6a657aa5e35626cdb5a4c32c0cb1b0e81d5e"
        },
        "downloads": -1,
        "filename": "handwriting_features-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ff143df1a2733fc4383ec657f67f1844",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 42349,
        "upload_time": "2022-12-16T13:25:37",
        "upload_time_iso_8601": "2022-12-16T13:25:37.609847Z",
        "url": "https://files.pythonhosted.org/packages/e3/6b/feac6521cce13fe5644ff13270ce7e64e6c53b3e1f564a678e8dc2cabeb5/handwriting_features-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4963065935eb3421968ce7cc808e77f2520e797f3450556e15421a4644baa8cc",
          "md5": "32a76ea53092db807423d15d94ff6588",
          "sha256": "635daccf10376e01918ab7e5cd859bce2efbf897bd90e8438e6c958a6e16a91e"
        },
        "downloads": -1,
        "filename": "handwriting-features-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "32a76ea53092db807423d15d94ff6588",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 34949,
        "upload_time": "2022-12-16T13:25:41",
        "upload_time_iso_8601": "2022-12-16T13:25:41.445909Z",
        "url": "https://files.pythonhosted.org/packages/49/63/065935eb3421968ce7cc808e77f2520e797f3450556e15421a4644baa8cc/handwriting-features-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8f8fca8d44b8273520c872e80096e716589ac8b960554f6c660e6b3f16833ed9",
          "md5": "1e6a07cdfd7421548fedcfbe02a7d6cd",
          "sha256": "62d5808eb505eb8dae791bab31fa452839aafd9455d695a564800387c12d7d5a"
        },
        "downloads": -1,
        "filename": "handwriting_features-1.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1e6a07cdfd7421548fedcfbe02a7d6cd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 42344,
        "upload_time": "2023-01-26T14:50:17",
        "upload_time_iso_8601": "2023-01-26T14:50:17.439198Z",
        "url": "https://files.pythonhosted.org/packages/8f/8f/ca8d44b8273520c872e80096e716589ac8b960554f6c660e6b3f16833ed9/handwriting_features-1.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "43b3ad33b35f892ac1ecaa553d287e65144541fd162d9d7f378e701357489df1",
          "md5": "c92e528d969686704004a7623c1fb842",
          "sha256": "9d24a283ded491fffb0af5cd422812e8c5404056a0c90b86ee3f314dee5ba784"
        },
        "downloads": -1,
        "filename": "handwriting-features-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "c92e528d969686704004a7623c1fb842",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 34954,
        "upload_time": "2023-01-26T14:50:23",
        "upload_time_iso_8601": "2023-01-26T14:50:23.406035Z",
        "url": "https://files.pythonhosted.org/packages/43/b3/ad33b35f892ac1ecaa553d287e65144541fd162d9d7f378e701357489df1/handwriting-features-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8f8fca8d44b8273520c872e80096e716589ac8b960554f6c660e6b3f16833ed9",
        "md5": "1e6a07cdfd7421548fedcfbe02a7d6cd",
        "sha256": "62d5808eb505eb8dae791bab31fa452839aafd9455d695a564800387c12d7d5a"
      },
      "downloads": -1,
      "filename": "handwriting_features-1.0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1e6a07cdfd7421548fedcfbe02a7d6cd",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 42344,
      "upload_time": "2023-01-26T14:50:17",
      "upload_time_iso_8601": "2023-01-26T14:50:17.439198Z",
      "url": "https://files.pythonhosted.org/packages/8f/8f/ca8d44b8273520c872e80096e716589ac8b960554f6c660e6b3f16833ed9/handwriting_features-1.0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "43b3ad33b35f892ac1ecaa553d287e65144541fd162d9d7f378e701357489df1",
        "md5": "c92e528d969686704004a7623c1fb842",
        "sha256": "9d24a283ded491fffb0af5cd422812e8c5404056a0c90b86ee3f314dee5ba784"
      },
      "downloads": -1,
      "filename": "handwriting-features-1.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "c92e528d969686704004a7623c1fb842",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 34954,
      "upload_time": "2023-01-26T14:50:23",
      "upload_time_iso_8601": "2023-01-26T14:50:23.406035Z",
      "url": "https://files.pythonhosted.org/packages/43/b3/ad33b35f892ac1ecaa553d287e65144541fd162d9d7f378e701357489df1/handwriting-features-1.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}