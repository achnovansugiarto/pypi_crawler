{
  "info": {
    "author": "Rafal Stozek",
    "author_email": "rafal.stozek@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Typing :: Typed"
    ],
    "description": "# `head-context`\n\nEasily manage your assets in meta tags (scripts, css, preload etc.) from anywhere\nin the template code (and outside).\n\n## Why\n\nImagine a form widget, which requires a heavy image processing library that we want to include ONLY IF the widget itself was rendered. Thanks to `head-context` you can specify what resources you need locally (in template fragments, widgets and so on) yet load them in the `head` section of your page with ease.\n\n## What does it do?\n\n```html+jinja\n<!doctype html>\n<html>\n<head>\n    <title>My Title!</title>\n    <!-- this is where we want all our js/css rendered to be rendered -->\n    {{ head_placeholder() }}\n</head>\n<body>\n    {% include \"my-cool-component.html\" %}\n</body>\n</html>\n```\n\nAnd `my-cool-component.html`:\n\n```html+jinja\n<!-- we can call these from anywhere and they will be automatically rendered in the right place! -->\n{% do push_js('/static/cool-component.js', mode=\"async\") %}\n{% do push_css('/static/cool-component.css') %}\n{% do push_preload('/static/some-image-we-need.png', 'image') %}\n<div class=\"my-cool-component\">\n    <!-- ... --->\n</div>\n```\n\nAnd that's pretty much it. You can `push_js`/`push_css`/`push_preload` from anywhere in the template (and even outside of templates) and it will be automatically attached to the page being rendered.\n\n## Features\n\n* Supports scripts, styles and preload directives\n* Works with Jinja2\n* Can be used from Python code too\n  * simply use `head_context.push_js/push_css/push_preload` from Python code\n  * it needs to run during template rendering though (otherwise it wouldn't make sense)\n  * useful if you have form widget rendering written in Python for example\n  * or basically any kind of rendering written in Python\n\n\n## Installation and setup\n\nSimply install `head-context` package:\n\n```bash\npip install head-context\n# or with poetry\npoetry add head-context\n```\n\nAdd extension to the Jinja2 environment:\n\n```python\n\nfrom jinja2 import Environment\n\nenv = Environment()\nenv.add_extension(\"head_context.jinja_ext.HeadContextExtension\")\n```\n\nand that's it! From now on you can use `push_css()`/`push_js()`/`push_preload()` and `head_placeholder()`.\n\n## Usage with Flask\n\nTo use this extension with `Flask` simply add it when configuring the app:\n\n```python\n\ndef create_app():\n    app = Flask(\"app\", __name__)\n    app.jinja_env.add_extension(\"head_context.jinja_ext.HeadContextExtension\")\n    app.jinja_env.add_extension(\"jinja2.ext.do\")\n    \n    return app\n\n```\n\n## FAQ\n\n### Does this work with `asyncio`?\n\n`head-context` uses `contextvars` under the hood, which are compatible with `asyncio` but it integrates with `Jinja` in a way that won't work with templates which use `asyncio` rendering. If you have any good ideas how to make it work a PR would be welcome.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/rafales/head-context",
    "keywords": "templating,jinja2",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "head-context",
    "package_url": "https://pypi.org/project/head-context/",
    "platform": null,
    "project_url": "https://pypi.org/project/head-context/",
    "project_urls": {
      "Homepage": "https://github.com/rafales/head-context",
      "Repository": "https://github.com/rafales/head-context"
    },
    "release_url": "https://pypi.org/project/head-context/0.1.1/",
    "requires_dist": [
      "typing-extensions (>=4.4.0,<5.0.0)"
    ],
    "requires_python": ">=3.8,<4.0",
    "summary": "",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16266186,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4546755f3297a883f0a0c40718ef559b72b91ac39e3e9f33d2217342687f9421",
          "md5": "406b76d57637519122589f473a5ce01a",
          "sha256": "8c9ad568fb4319074342d8c5a7889add00e9e3f83dceae1e495e343e88a7a903"
        },
        "downloads": -1,
        "filename": "head_context-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "406b76d57637519122589f473a5ce01a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 5477,
        "upload_time": "2022-11-17T17:07:07",
        "upload_time_iso_8601": "2022-11-17T17:07:07.161556Z",
        "url": "https://files.pythonhosted.org/packages/45/46/755f3297a883f0a0c40718ef559b72b91ac39e3e9f33d2217342687f9421/head_context-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "04cc1dff24320beeac97d96aabc303a9348375f150b2b8f3de58cbdac873965e",
          "md5": "5918c92db18dce5b708a4ffdac92c9a0",
          "sha256": "d9fa6bba60955db0581ebc190b83896ec061f7ac6752040432ea65478768df1c"
        },
        "downloads": -1,
        "filename": "head-context-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5918c92db18dce5b708a4ffdac92c9a0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 5007,
        "upload_time": "2022-11-17T17:07:04",
        "upload_time_iso_8601": "2022-11-17T17:07:04.975559Z",
        "url": "https://files.pythonhosted.org/packages/04/cc/1dff24320beeac97d96aabc303a9348375f150b2b8f3de58cbdac873965e/head-context-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "542ab0bc8259aa92e8cba0c82e7bfae20605f78328b470910ec35c8f91ee03aa",
          "md5": "d78b4fdfed62a1b991ff83ac2ef9a47c",
          "sha256": "a71b4b745f596e52eeb89a2f578854c99c3ffc266f5c2bf7d1ea3a0d079aca35"
        },
        "downloads": -1,
        "filename": "head_context-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d78b4fdfed62a1b991ff83ac2ef9a47c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 6021,
        "upload_time": "2022-12-31T11:02:44",
        "upload_time_iso_8601": "2022-12-31T11:02:44.572961Z",
        "url": "https://files.pythonhosted.org/packages/54/2a/b0bc8259aa92e8cba0c82e7bfae20605f78328b470910ec35c8f91ee03aa/head_context-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4ec8cf7a0bf798bbff63c6d257df756ff03d80b6f38e6590f6489efb51ab610a",
          "md5": "f3b006363308c086b4485c20ca10ab34",
          "sha256": "e0b608313761e917c0b05a0a0a600a9aed59bdef0086d1f97b3fdbac1991f7fc"
        },
        "downloads": -1,
        "filename": "head_context-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f3b006363308c086b4485c20ca10ab34",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 5644,
        "upload_time": "2022-12-31T11:02:45",
        "upload_time_iso_8601": "2022-12-31T11:02:45.931307Z",
        "url": "https://files.pythonhosted.org/packages/4e/c8/cf7a0bf798bbff63c6d257df756ff03d80b6f38e6590f6489efb51ab610a/head_context-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "542ab0bc8259aa92e8cba0c82e7bfae20605f78328b470910ec35c8f91ee03aa",
        "md5": "d78b4fdfed62a1b991ff83ac2ef9a47c",
        "sha256": "a71b4b745f596e52eeb89a2f578854c99c3ffc266f5c2bf7d1ea3a0d079aca35"
      },
      "downloads": -1,
      "filename": "head_context-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d78b4fdfed62a1b991ff83ac2ef9a47c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<4.0",
      "size": 6021,
      "upload_time": "2022-12-31T11:02:44",
      "upload_time_iso_8601": "2022-12-31T11:02:44.572961Z",
      "url": "https://files.pythonhosted.org/packages/54/2a/b0bc8259aa92e8cba0c82e7bfae20605f78328b470910ec35c8f91ee03aa/head_context-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4ec8cf7a0bf798bbff63c6d257df756ff03d80b6f38e6590f6489efb51ab610a",
        "md5": "f3b006363308c086b4485c20ca10ab34",
        "sha256": "e0b608313761e917c0b05a0a0a600a9aed59bdef0086d1f97b3fdbac1991f7fc"
      },
      "downloads": -1,
      "filename": "head_context-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "f3b006363308c086b4485c20ca10ab34",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<4.0",
      "size": 5644,
      "upload_time": "2022-12-31T11:02:45",
      "upload_time_iso_8601": "2022-12-31T11:02:45.931307Z",
      "url": "https://files.pythonhosted.org/packages/4e/c8/cf7a0bf798bbff63c6d257df756ff03d80b6f38e6590f6489efb51ab610a/head_context-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}