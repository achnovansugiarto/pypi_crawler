{
  "info": {
    "author": "",
    "author_email": "MatrixEditor <not@supported.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Hiktools\r\n\r\n![Module](https://img.shields.io:/static/v1?label=Module&message=hiktools&color=9cf)\r\n![Build](https://img.shields.io:/static/v1?label=Python&message=>=3.5&color=green)\r\n![Platform](https://img.shields.io:/static/v1?label=Platforms&message=Linux|Windows&color=yellowgreen)\r\n![PyPi](https://img.shields.io:/static/v1?label=PyPi&message=1.2.1&color=green)\r\n\r\nThis is now a small project with four main functionalities: \r\n\r\n* A Wireshark dissector for the Search Active Devices Protocol,\r\n* Decrypt and extract hikvision firmware, \r\n* Send raw SADP packets (only Linux) and \r\n* Send commands via UDP Broadcast. \r\n\r\nTo get familiar with the API provided in this repository, take a quick look at the python documentation available **[here »](https://hiktools.readthedocs.io/)** or the \r\nC++ documentation available at Github-Pages **[here »](https://matrixeditor.github.io/hiktools/docs/html/d3/dcc/md__r_e_a_d_m_e.html)**.\r\n\r\n### Overview\r\n---\r\n**Update:** Since feature version `1.1.0` the native packet creation and communication works! It is still only usable on UNIX systems that support sending raw ethernet frames. The checksum algorithm was disassebled and decompiled correctly, just the input parameters were interpreted wrong. The algorithm is implemented in [C/C++](/cpp/checksum.h) and [python3](/hiktools/csadp/checksum.py).\r\n\r\nCommunication on UDP works fine at the moment - this API is just a small wrapper which can be used for a more general API. \r\n\r\nFirmware decryption and extraction will only work on newer `digicap.dav` files with at least one file entry (otherwise there will be no files to inspect) in the header. All firmware files and updates can be downloaded from the following endpoint (EU):\r\n\r\n### Basic Usage\r\n---\r\n\r\n- Firmware inspection and extraction\r\n\r\n```python\r\nfrom hiktools import fmod\r\n\r\n# Open the resource at the specified path (loading is done automatically)\r\n# or manually decrypt the firmware file (see documentation for actual code).\r\nwith fmod.DigiCap('filename.dav') as dcap:\r\n  # Iterate over all files stored in the DigiCap object\r\n  for file_info in dcap:\r\n      print('> File name=\"%s\", size=%d, pos=%d, checksum=%d' % file_info)\r\n\r\n  # get file amount and current language\r\n  print(\"Files: %d, Language: %d\" % (dcap.head.files, dcap.head.language))\r\n\r\n  # save all files stored in <filename.dav>\r\n  fmod.export(dcap, \"outdir/\")\r\n```\r\n\r\nOr you can use the module main script to extract the files via the CLI:\r\n```console\r\npython3 -m hiktools.fmod input.dav outputDir\r\n```\r\n\r\n- Native interface on sending raw packets (only LINUX)\r\n```python\r\nfrom hiktools import csadp\r\n\r\n# Because the following module requires root priviledges it \r\n# has to be imported directly.\r\nfrom hiktools.csadp import CService\r\n\r\nsock = CService.l2socket('wlan0')\r\ncounter = 0x115e\r\n\r\n# To build an Inquiry packet, we need the following information:\r\n# - our mac, ipv4 and ipv6 address (and the counter of course)\r\npacket = csadp.inquiry('<MAC>', '<IPv4>', '<IPv6>', counter)\r\n\r\n# before we can send the message, a checksum has to be calculated\r\npacket.insert_checksum()\r\n\r\nsock.send(bytes(packet))\r\nresponse = csadp.SADPPacket(sock.recv(1024))\r\n\r\n# to view the contents just print the str() version\r\nprint(str(response))\r\n```\r\n\r\n- Interact with the device through UDP broadcast\r\n```python\r\nfrom hiktools import sadp\r\nfrom uuid import uuid4\r\n\r\n# create a packet from a simple dict object\r\ninquiry = sadp.fromdict({\r\n  'Uuid': str(uuid4()).upper(),\r\n  'MAC': 'ff-ff-ff-ff-ff-ff',\r\n  'Types': 'inquiry'\r\n})\r\n\r\n# Open up a client to communicate over broadcast\r\nwith sadp.SADPClient() as client:\r\n  # send the inquiry packet\r\n  client.write(inquiry)\r\n\r\n  # iterate over all received packets (None is returned on error)\r\n  for response in client:\r\n    if response is None: break\r\n    # initiate the response\r\n    message = sadp.unmarshal(response.toxml())\r\n\r\n    # message objects contain a dict-like implementation\r\n    for property_name in message:\r\n      print(message[property_name]) \r\n    \r\n    # e.g.\r\n    print('Device at', message['IPv4Address'])\r\n```\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "hiktools",
    "package_url": "https://pypi.org/project/hiktools/",
    "platform": null,
    "project_url": "https://pypi.org/project/hiktools/",
    "project_urls": {
      "API-Docs": "https://hiktools.readthedocs.io",
      "Homepage": "https://github.com/MatrixEditor/hiktools",
      "Native-API-Docs": "https://matrixeditor.github.io/hiktools/docs/html/d3/dcc/md__r_e_a_d_m_e.html"
    },
    "release_url": "https://pypi.org/project/hiktools/1.2.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Hikvision utility tools",
    "version": "1.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17166683,
  "releases": {
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "441de43048345a9a6d5dbef335a77aaceb0657f565b2b4e40121a6e13ab5b3a3",
          "md5": "eeaa896d2ea61f57ce91ef361e437b90",
          "sha256": "c2181016408d4a5e2ace5a0e2e14591817b242552ff9490413e70862433e888a"
        },
        "downloads": -1,
        "filename": "hiktools-1.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eeaa896d2ea61f57ce91ef361e437b90",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 28481,
        "upload_time": "2023-03-05T20:33:59",
        "upload_time_iso_8601": "2023-03-05T20:33:59.498637Z",
        "url": "https://files.pythonhosted.org/packages/44/1d/e43048345a9a6d5dbef335a77aaceb0657f565b2b4e40121a6e13ab5b3a3/hiktools-1.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "24bfcaf821db04c1a56c3ede00e63341445b72fc5b41fc8c2ba6c23262f87e90",
          "md5": "60453f07a5866ca6b29bbe16cb417075",
          "sha256": "5dac5f5561c07687773cc0cc8e8ba58d1338d804bb6a267db5a0ccc3d69bc6e0"
        },
        "downloads": -1,
        "filename": "hiktools-1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "60453f07a5866ca6b29bbe16cb417075",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18070,
        "upload_time": "2023-03-05T20:34:01",
        "upload_time_iso_8601": "2023-03-05T20:34:01.502263Z",
        "url": "https://files.pythonhosted.org/packages/24/bf/caf821db04c1a56c3ede00e63341445b72fc5b41fc8c2ba6c23262f87e90/hiktools-1.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "441de43048345a9a6d5dbef335a77aaceb0657f565b2b4e40121a6e13ab5b3a3",
        "md5": "eeaa896d2ea61f57ce91ef361e437b90",
        "sha256": "c2181016408d4a5e2ace5a0e2e14591817b242552ff9490413e70862433e888a"
      },
      "downloads": -1,
      "filename": "hiktools-1.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "eeaa896d2ea61f57ce91ef361e437b90",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 28481,
      "upload_time": "2023-03-05T20:33:59",
      "upload_time_iso_8601": "2023-03-05T20:33:59.498637Z",
      "url": "https://files.pythonhosted.org/packages/44/1d/e43048345a9a6d5dbef335a77aaceb0657f565b2b4e40121a6e13ab5b3a3/hiktools-1.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "24bfcaf821db04c1a56c3ede00e63341445b72fc5b41fc8c2ba6c23262f87e90",
        "md5": "60453f07a5866ca6b29bbe16cb417075",
        "sha256": "5dac5f5561c07687773cc0cc8e8ba58d1338d804bb6a267db5a0ccc3d69bc6e0"
      },
      "downloads": -1,
      "filename": "hiktools-1.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "60453f07a5866ca6b29bbe16cb417075",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 18070,
      "upload_time": "2023-03-05T20:34:01",
      "upload_time_iso_8601": "2023-03-05T20:34:01.502263Z",
      "url": "https://files.pythonhosted.org/packages/24/bf/caf821db04c1a56c3ede00e63341445b72fc5b41fc8c2ba6c23262f87e90/hiktools-1.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}