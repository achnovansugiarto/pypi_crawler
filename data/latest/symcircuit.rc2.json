{
  "info": {
    "author": "Martok",
    "author_email": "martok@martoks-place.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Topic :: Scientific/Engineering :: Electronic Design Automation (EDA)",
      "Topic :: Scientific/Engineering :: Mathematics"
    ],
    "description": "# SymCircuit\n\nProvides classes to do electronic circuit analysys using symbolic equations. For example,\nit is possible to automatically find equations using Kirchhoff's laws and solve them for specific\nproperties.\n\nAs a bonus, the equation solving part can be used independently of the rest.\n\n## Installation\n\nMinimal install using pip (just the equation solver):\n\n```pip install SymCircuit```\n\nFull install using pip:\n\n```pip install SymCircuit[EE]```\n\n\n## Usage\n\nFor more detailed examples, see the files in directory `examples/`.\n\nExample of using a netlist for a random arrangement of elements:\n\n```python\nfrom io import StringIO\n\nimport plotkit.plotkit as pk\n\nfrom symcircuit.bode import plot_system\nfrom symcircuit.spice import Circuit\nfrom symcircuit.system import SymbolicSystem\n\ncirc = Circuit()\ncirc.parse_spice_netlist(StringIO(r\"\"\"\n* examples\\network1.asc\nR1 N001 0 1k\nR2 N002 0 3k\nC1 N002 0 50Âµ\nL1 N001 N002 120Âµ\nV1 N001 0 AC 1\n.ac dec 30 10 10000\n.backanno\n.end\n\"\"\"))\n\n# translate to equation system\ns = SymbolicSystem(circ.to_system_description())\n\n# Add \"measurement\" characteristics\ns.extend(SymbolicSystem(\"\"\"\nZsys == V1 / i_V1\n\"\"\"))\nprint(s.info())\n\n# find transfer function\nimpedance = s.focus(\"Zsys\")[\"Zsys\"]\nprint(\"System Impedance = \", impedance)\n# System Impedance =  -R1*(C1*L1*R2*s**2 + L1*s + R2)/(C1*L1*R2*s**2 + L1*s + R1*(C1*R2*s + 1) + R2)\n\n# plot parameterised transfer function\nv = dict(\n    R1=1e3,\n    R2=3e3,\n    C1=50e-6,\n    L1=120e-6,\n)\nfig = plot_system(impedance, 10, 50000, values=v, amplitude_linear=True, return_fig=True)\npk.finalize(fig)\n```\nResult:\n![Example Output](https://raw.githubusercontent.com/martok/py-symcircuit/main/doc/impedance_plot.png)\n\n## Credits:\n\n* [NetworkX](https://networkx.org/) is used for graph analysis\n* The `focus` and `seek` methods are based on the implementation proposed by Christopher Smith @smichr in [a sympy issue](https://github.com/sympy/sympy/issues/2720#issuecomment-312437508).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/martok/py-symcircuit",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "SymCircuit",
    "package_url": "https://pypi.org/project/SymCircuit/",
    "platform": "",
    "project_url": "https://pypi.org/project/SymCircuit/",
    "project_urls": {
      "Bug Tracker": "https://github.com/martok/py-symcircuit/issues",
      "Homepage": "https://github.com/martok/py-symcircuit"
    },
    "release_url": "https://pypi.org/project/SymCircuit/0.2.0/",
    "requires_dist": [
      "sympy",
      "networkx ; extra == 'ee'",
      "numpy ; extra == 'ee'",
      "mplotkit ; extra == 'ee'"
    ],
    "requires_python": ">=3.6",
    "summary": "Symbolic electronic circuit analysis",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12381328,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "38be9cb7e5a0d68f7483d2d4f095164ab9f1d0cfb16dde583d57b0258518adcb",
          "md5": "05407d30f9492af2461b5c2a55df5234",
          "sha256": "3b63ddb275fbdfbad9f352379120abd9a0d12eb2292d2ab43ae2cbe4b26f9b5e"
        },
        "downloads": -1,
        "filename": "SymCircuit-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "05407d30f9492af2461b5c2a55df5234",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10927,
        "upload_time": "2021-11-22T15:26:20",
        "upload_time_iso_8601": "2021-11-22T15:26:20.091145Z",
        "url": "https://files.pythonhosted.org/packages/38/be/9cb7e5a0d68f7483d2d4f095164ab9f1d0cfb16dde583d57b0258518adcb/SymCircuit-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ae6d28e9f5a7b4bd9365e01bada562b83520096e9dd634e6656648eb79e9d02e",
          "md5": "e2c1edba6ba71152dcec02eae4c0bc80",
          "sha256": "244d210b710d7cdd9063b97c65080d56d0076ff2cf9cbb4852f00e9b5137d917"
        },
        "downloads": -1,
        "filename": "SymCircuit-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e2c1edba6ba71152dcec02eae4c0bc80",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10341,
        "upload_time": "2021-11-22T15:26:21",
        "upload_time_iso_8601": "2021-11-22T15:26:21.605993Z",
        "url": "https://files.pythonhosted.org/packages/ae/6d/28e9f5a7b4bd9365e01bada562b83520096e9dd634e6656648eb79e9d02e/SymCircuit-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b52c6b9fa47b936ac324d21b058d38f1964d684ddb37dd67d681aeacafef9e39",
          "md5": "b3bb7bf61ae702cba4c596429f3f3cc2",
          "sha256": "013361b7d0a6c9aec505d84288bf3620ed8c6918126ecca71ab170af46a998b0"
        },
        "downloads": -1,
        "filename": "SymCircuit-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b3bb7bf61ae702cba4c596429f3f3cc2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 12721,
        "upload_time": "2021-12-22T12:58:18",
        "upload_time_iso_8601": "2021-12-22T12:58:18.569590Z",
        "url": "https://files.pythonhosted.org/packages/b5/2c/6b9fa47b936ac324d21b058d38f1964d684ddb37dd67d681aeacafef9e39/SymCircuit-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b52c6b9fa47b936ac324d21b058d38f1964d684ddb37dd67d681aeacafef9e39",
        "md5": "b3bb7bf61ae702cba4c596429f3f3cc2",
        "sha256": "013361b7d0a6c9aec505d84288bf3620ed8c6918126ecca71ab170af46a998b0"
      },
      "downloads": -1,
      "filename": "SymCircuit-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b3bb7bf61ae702cba4c596429f3f3cc2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 12721,
      "upload_time": "2021-12-22T12:58:18",
      "upload_time_iso_8601": "2021-12-22T12:58:18.569590Z",
      "url": "https://files.pythonhosted.org/packages/b5/2c/6b9fa47b936ac324d21b058d38f1964d684ddb37dd67d681aeacafef9e39/SymCircuit-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}