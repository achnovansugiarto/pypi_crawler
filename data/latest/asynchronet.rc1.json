{
  "info": {
    "author": "Sergey Yakovlev",
    "author_email": "selfuryon@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Framework :: AsyncIO",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "Intended Audience :: Telecommunications Industry",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Topic :: System :: Networking",
      "Topic :: System :: Systems Administration"
    ],
    "description": "# Asynchronet (Under Construction)\nInspired by [Netmiko](https://github.com/ktbyers/netmiko), Asynchronet is a multi-vendor library for asynchronously interacting with network devices through the CLI.\n\nAsynchronet is a fork of [Netdev](https://github.com/selfuryon/netdev), which is no longer maintained. This project was forked to continue to expand and enhance the existing capabilities while enabling community contribution.\n\nThe key features are:\n\n- **Asynchronous CLI Interactions**: Thanks to [asyncssh](https://github.com/ronf/asyncssh), which powers asynchronet provides support for multiple SSH connections within a single event loop.\n- **Multi-Vendor Support**: Currently twelve of the most popular networking hardware vendors are supported, with more to be added in the future.\n- **Autodetect Device Type**: By porting [Netmiko's](https://github.com/ktbyers/netmiko) battle-tested [SSHDetect](https://ktbyers.github.io/netmiko/docs/netmiko/ssh_autodetect.html) class to work asynchronously with _asyncssh_, asynchronet makes automatic device type detection a breeze.\n- **Simple**: Intuitive classes make it easy to interact with your favorite flavor of device.\n\n## Requirements\nPython 3.10+\n\n## Installation\n\n```console\npip install asynchronet\n```\n\n## Example\n\n```python\nimport asyncio\n\nimport asynchronet\n\nasync def task(param):\n    async with asynchronet.create(**param) as ios:\n        # Send a simple command\n        out = await ios.send_command(\"show ver\")\n        print(out)\n        # Send a full configuration set\n        commands = [\"line console 0\", \"exit\"]\n        out = await ios.send_config_set(commands)\n        print(out)\n        # Send a command with a long output\n        out = await ios.send_command(\"show run\")\n        print(out)\n        # Interactive dialog\n        out = await ios.send_command(\n            \"conf\", pattern=r\"\\[terminal\\]\\?\", strip_command=False\n        )\n        out += await ios.send_command(\"term\", strip_command=False)\n        out += await ios.send_command(\"exit\", strip_command=False, strip_prompt=False)\n        print(out)\n\n\nasync def run():\n    device_1 = {\n        \"username\": \"user\",\n        \"password\": \"pass\",\n        \"device_type\": \"cisco_ios\",\n        \"host\": \"ip address\",\n    }\n    device_2 = {\n        \"username\": \"user\",\n        \"password\": \"pass\",\n        \"device_type\": \"cisco_ios\",\n        \"host\": \"ip address\",\n    }\n    devices = [device_1, device_2]\n    tasks = [task(device) for device in devices]\n    await asyncio.wait(tasks)\n\n\nloop = asyncio.get_event_loop()\nloop.run_until_complete(run())\n\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://netdev.readthedocs.io",
    "keywords": "netdev,network,netmiko,asyncio",
    "license": "Apache-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "asynchronet",
    "package_url": "https://pypi.org/project/asynchronet/",
    "platform": null,
    "project_url": "https://pypi.org/project/asynchronet/",
    "project_urls": {
      "Documentation": "https://netdev.readthedocs.io",
      "Homepage": "https://netdev.readthedocs.io",
      "Repository": "https://github.com/selfuryon/netdev"
    },
    "release_url": "https://pypi.org/project/asynchronet/0.1.0/",
    "requires_dist": [
      "asyncssh (>=2.11.0,<3.0.0)",
      "sphinx-rtd-theme (>=1.0.0,<2.0.0); extra == \"docs\"",
      "Sphinx (>=5.1.1,<6.0.0); extra == \"docs\""
    ],
    "requires_python": ">=3.10,<4.0",
    "summary": "Fork of netdev: Asynchronous multi-vendor library for interacting with network devices",
    "version": "0.1.0",
    "yanked": true,
    "yanked_reason": null
  },
  "last_serial": 14583365,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3ad8d3de991d36ade969fd87f513aeffe16d7ba832d14316e2fc815e99964a1f",
          "md5": "93e83fd71c225d535baf2339e326081c",
          "sha256": "2b46f705058c557b027cbecb68a21e2cfa06dcd1a2e9dedb23d0dd7b02c28c69"
        },
        "downloads": -1,
        "filename": "asynchronet-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "93e83fd71c225d535baf2339e326081c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 49206,
        "upload_time": "2022-07-29T01:13:55",
        "upload_time_iso_8601": "2022-07-29T01:13:55.304286Z",
        "url": "https://files.pythonhosted.org/packages/3a/d8/d3de991d36ade969fd87f513aeffe16d7ba832d14316e2fc815e99964a1f/asynchronet-0.1.0-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aeb31f44df0af4c77b93d680e82ed17df376068e614d486125908780dec7d516",
          "md5": "095c3e8567877dd289e77a9c20e515ca",
          "sha256": "cb3d3410c6d8b0f988ea90dc95f864eb9477a70753c18413554eabafa8ea6696"
        },
        "downloads": -1,
        "filename": "asynchronet-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "095c3e8567877dd289e77a9c20e515ca",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 29259,
        "upload_time": "2022-07-29T01:13:56",
        "upload_time_iso_8601": "2022-07-29T01:13:56.954270Z",
        "url": "https://files.pythonhosted.org/packages/ae/b3/1f44df0af4c77b93d680e82ed17df376068e614d486125908780dec7d516/asynchronet-0.1.0.tar.gz",
        "yanked": true,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3ad8d3de991d36ade969fd87f513aeffe16d7ba832d14316e2fc815e99964a1f",
        "md5": "93e83fd71c225d535baf2339e326081c",
        "sha256": "2b46f705058c557b027cbecb68a21e2cfa06dcd1a2e9dedb23d0dd7b02c28c69"
      },
      "downloads": -1,
      "filename": "asynchronet-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "93e83fd71c225d535baf2339e326081c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10,<4.0",
      "size": 49206,
      "upload_time": "2022-07-29T01:13:55",
      "upload_time_iso_8601": "2022-07-29T01:13:55.304286Z",
      "url": "https://files.pythonhosted.org/packages/3a/d8/d3de991d36ade969fd87f513aeffe16d7ba832d14316e2fc815e99964a1f/asynchronet-0.1.0-py3-none-any.whl",
      "yanked": true,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "aeb31f44df0af4c77b93d680e82ed17df376068e614d486125908780dec7d516",
        "md5": "095c3e8567877dd289e77a9c20e515ca",
        "sha256": "cb3d3410c6d8b0f988ea90dc95f864eb9477a70753c18413554eabafa8ea6696"
      },
      "downloads": -1,
      "filename": "asynchronet-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "095c3e8567877dd289e77a9c20e515ca",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10,<4.0",
      "size": 29259,
      "upload_time": "2022-07-29T01:13:56",
      "upload_time_iso_8601": "2022-07-29T01:13:56.954270Z",
      "url": "https://files.pythonhosted.org/packages/ae/b3/1f44df0af4c77b93d680e82ed17df376068e614d486125908780dec7d516/asynchronet-0.1.0.tar.gz",
      "yanked": true,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}