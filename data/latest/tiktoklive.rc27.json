{
  "info": {
    "author": "Isaac Kogan",
    "author_email": "info@isaackogan.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "TikTokLive\r\n==================\r\nA python library to connect to and read events from TikTok's LIVE service.\r\n\r\n[![LinkedIn](https://img.shields.io/badge/LinkedIn-0077B5?style=for-the-badge&logo=linkedin&logoColor=white&style=flat-square)](https://www.linkedin.com/in/isaac-kogan-5a45b9193/ )\r\n[![HitCount](https://hits.dwyl.com/isaackogan/TikTokLive.svg?style=flat)](http://hits.dwyl.com/isaackogan/TikTokLive)\r\n![Downloads](https://pepy.tech/badge/TikTokLive)\r\n![Issues](https://img.shields.io/github/issues/isaackogan/TikTokLive)\r\n![Forks](https://img.shields.io/github/forks/isaackogan/TikTokLive)\r\n![Stars](https://img.shields.io/github/stars/isaackogan/TikTokLive)\r\n[![Support Server](https://img.shields.io/discord/977648006063091742.svg?color=7289da&logo=discord&style=flat-square)](https://discord.gg/e2XwPNTBBr)\r\n\r\n<!-- [![Downloads](https://pepy.tech/badge/tiktoklive)](https://pepy.tech/project/tiktoklive) -->\r\n\r\nA python library to receive and decode livestream events such as comments and gifts in real-time from TikTok's LIVE service by connecting to TikTok's internal Webcast service. This library includes a wrapper that\r\nconnects to the Webcast service using only a user's `unique_id` and allows you to join your livestream as well as that of other streamers. No credentials are required to use TikTokLive.\r\n\r\nThis library was originally based off of the\r\n[TikTok-Live-Connector](https://github.com/zerodytrash/TikTok-Live-Connector)\r\nby [@zerodytrash](https://github.com/zerodytrash/), but has since taken on its own identity as it has added more features & changed much of its core functionality.\r\n\r\n\r\nJoin the [support discord](https://discord.gg/e2XwPNTBBr) and visit the `#support` channel for questions, contributions and ideas. Feel free to make pull requests with missing/new features, fixes, etc.\r\n\r\n> **UPDATE:**<br>Due to a change on the part of TikTok, versions prior to **v4.3.8** are no longer functional. If you are using an unsupported version, upgrade to the latest version using the `pip install TikTokLive --upgrade` command.\r\n\r\n## Table of Contents\r\n\r\n**Primary Information**\r\n\r\n- [Documentation](https://isaackogan.github.io/TikTokLive/)\r\n- [Contributors](#contributors)\r\n- [License](#license)\r\n- [Quickstart Examples](https://github.com/isaackogan/TikTokLive/tree/master/examples)\r\n\r\n**Resources & Guides**\r\n\r\n1. [David's Intro Tutorial](#tiktoklive-intro-tutorial)\r\n2. [Getting Started](#getting-started)\r\n3. [Params & Options](#Params-&-Options)\r\n4. [Client Methods](#Methods)\r\n5. [Client Attributes](#Attributes)\r\n6. [TikTok Events](#Events)\r\n\r\n## TikTokLive Intro Tutorial\r\n\r\nI cannot recommend this tutorial enough for people trying to get started. It is succinct, informative and easy to understand, created by [David Teather](https://github.com/davidteather), the creator of the\r\nPython [TikTok-Api](https://github.com/davidteather/TikTok-Api) package. Click the thumbnail to warp.\r\n\r\n[![David's Tutorial](https://i.imgur.com/IOTkpvn.png)](https://www.youtube.com/watch?v=307ijmA3_lc)\r\n\r\n## Getting Started\r\n\r\n1. Install the module via pip\r\n\r\n```\r\npip install TikTokLive\r\n```\r\n\r\n2. Create your first chat connection\r\n\r\n```python\r\nfrom TikTokLive import TikTokLiveClient\r\nfrom TikTokLive.types.events import CommentEvent, ConnectEvent\r\n\r\n# Instantiate the client with the user's username\r\nclient: TikTokLiveClient = TikTokLiveClient(unique_id=\"@isaackogz\")\r\n\r\n\r\n# Define how you want to handle specific events via decorator\r\n@client.on(\"connect\")\r\nasync def on_connect(_: ConnectEvent):\r\n    print(\"Connected to Room ID:\", client.room_id)\r\n\r\n\r\n# Notice no decorator?\r\nasync def on_comment(event: CommentEvent):\r\n    print(f\"{event.user.nickname} -> {event.comment}\")\r\n\r\n\r\n# Define handling an event via a \"callback\"\r\nclient.add_listener(\"comment\", on_comment)\r\n\r\nif __name__ == '__main__':\r\n    # Run the client and block the main thread\r\n    # await client.start() to run non-blocking\r\n    client.run()\r\n```\r\n\r\nFor more examples, [see the examples folder](https://github.com/isaackogan/TikTok-Live-Connector/tree/master/examples) provided in the tree.\r\n\r\n## Params & Options\r\n\r\nTo create a new `TikTokLiveClient` object the following parameter is required. You can optionally add configuration options to this via kwargs.\r\n\r\n`TikTokLiveClient(unique_id, **options)`\r\n\r\n| Param Name | Required | Description|\r\n|------------|----------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\r\n| unique_id  | Yes      | The unique username of the broadcaster. You can find this name in the URL.<br>Example: `https://www.tiktok.com/@isaackogz` => `isaackogz`                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        |\r\n| **options  | No       | Here you can set the following optional connection properties. If you do not specify a value, the default value will be used.<br><br>`process_initial_data` (default: `True`) <br> Define if you want to process initial data upon connecting (e.g. first 1-10 messages from BEFORE you connected).<br><br>`fetch_room_info_on_connect` (default: `True`) <br> Define if you want to fetch all room information on start. If this option is enabled, connection to offline rooms will be prevented. If enabled, the connect result contains the room info via the `room_info` attribute. You can also manually retrieve the room info (even in an unconnected state) using the `retrieve_room_info()` method.<br><br>`enable_detailed_gifts` (default: `False`) <br> Define if you want to receive extended information about gifts like gift name, cost and images which you can retrieve via the `available_gifts` attribute. When enabled, the `details` attribute in a `Gift` object will be populated.<br><br>`ws_ping_interval` (default: `10.0`) <br> The interval between keepalive pings on the websocket connection (in seconds).<br><br>`ws_timeout` (default: `10.0`)<br>How long to wait before the websocket connection is considered timed out (in seconds).<br><br>`http_timeout` (default: `10.0`) <br> How long to wait before considering an HTTP request in the http client timed out (in seconds).<br><br>`http_headers` (default: `{}`) <br> Additional HTTP client headers to include when making requests to the Webcast API AND connecting to the websocket server.<br><br>`http_params` (default: `{}`) <br>Additional HTTP client parameters to include when making requests to the Webcast API AND connecting to the websocket.<br><br>`loop` (default: `None`)<br>Optionally supply your own asyncio event loop for usage by the client. When set to None, the client pulls the current active loop or creates a new one. This option is mostly useful for people trying to nest asyncio.<br/><br/>`trust_env` (default: `False`)<br/>Whether to trust environment variables that provide proxies in httpx requests<br/><br/>`proxies` (default: `None`)<br/>Enable proxied requests by turning on forwarding for the HTTP \"proxies\" argument. Websocket connections will NOT be proxied<br/><br/>`lang` (default: `en-US`)<br/>Change the language. Payloads *will* be in English, but front-end content will be in the desired language!<br/><br/>`sign_api_key` (default: `None`)<br/>Parameter to increase the amount of connections allowed to be made per minute via a Sign Server API key. If you need this, contact the project maintainer. |\r\n\r\n\r\n## Methods\r\n\r\nA `TikTokLiveClient` object contains the following methods.\r\n\r\n| Method Name              | Description                                                                                                                                                                       |\r\n|--------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\r\n| run                      | Starts a connection to the live chat while blocking the main thread                                                                                                               |\r\n| start                    | (async) Connects to the live chat without blocking the main thread                                                                                                                |\r\n| stop                     | Turns off the connection to the live chat.                                                                                                                                        |\r\n| retrieve_room_info       | (async) Gets the current room info from TikTok API                                                                                                                                |\r\n| retrieve_available_gifts | (async) Retrieves a list of the available gifts for the room and adds it to the `extended_gift` attribute of the `Gift` object on the `gift` event, when enabled.                 |\r\n| add_listener             | Adds an *asynchronous* listener function (or, you can decorate a function with `@client.on(\"<event>\")`) and takes two parameters, an event name and the payload, an AbstractEvent ||\r\n| download                 | Start downloading the livestream video for a given duration or until stopped via the `stop_download` method                                                                       |\r\n| stop_download            | Stop downloading the livestream video if currently downloading, otherwise throws an error                                                                                         |\r\n\r\n## Attributes\r\n\r\nA `TikTokLiveClient` object contains the following attributes.\r\n\r\n| Attribute Name  | Description                                                                                                                                  |\r\n|-----------------|----------------------------------------------------------------------------------------------------------------------------------------------|\r\n| room_id         | The Room ID of the livestream room the client is currently connected to                                                                      |\r\n| room_info       | Information about the given livestream room                                                                                                  |\r\n| unique_id       | The TikTok username of the person whose livestream the client is currently connected to (e.g. @charlidamelio)                                |\r\n| connected       | Whether the client is currently connected to a livestream                                                                                    |\r\n| connecting      | Whether the client is currently connecting to a livestream                                                                                   |\r\n| available_gifts | A dictionary containing K:V pairs of `Dict[int, GiftDetailed]`, where the int is the internal TikTok gift id                                 |                              |\r\n| proxies         | Get the current proxies being used for HTTP requests.<br/><br/>**Note:** To set the active proxies, set the value of this attribute          |\r\n| loop            | The asyncio event loop the client is running off of                                                                                          |\r\n| http            | The HTTP client TikTokLive uses to make all HTTP-based requests                                                                              |\r\n| websocket       | The `WebcastWebsocketConnection` websocket client TikTokLive uses to manage its websocket connection                                         |\r\n| ffmpeg          | The ffmpeg wrapper TikTokLive uses to manage ffmpeg-based stream downloads                                                                   |\r\n| viewer_count    | The number of people currently watching the livestream broadcast. Updated automatically on a `viewer_update` event                           |\r\n| top_viewers     | The top N (usually ~1-20) users, ranked by coins gifted to the streamer, for the broadcast. Updated automatically on a `viewer_update` event |\r\n\r\n\r\n## Events\r\n\r\nA `TikTokLiveClient` object has the following events. You can add events either by doing `client.add_listener(\"event_name\", callable)` or by decorating a function with `@client.on(\"event_name\")` that includes an event\r\npayload parameter.\r\n\r\n### `connect`\r\n\r\nTriggered when the websocket connection is successfully established.\r\n\r\n```python\r\n@client.on(\"connect\")\r\nasync def on_connect(event: ConnectEvent):\r\n    print(\"Connected\")\r\n```\r\n\r\n### `disconnect`\r\n\r\nTriggered when the connection is terminated. You can call `start()`  to reconnect . Note that you should wait a little bit before attempting a reconnect to to avoid being rate-limited.\r\n\r\n```python\r\n@client.on(\"disconnect\")\r\nasync def on_disconnect(event: DisconnectEvent):\r\n    print(\"Disconnected\")\r\n```\r\n\r\n### `like`\r\n\r\nTriggered every time someone likes the stream.\r\n\r\n```python\r\n@client.on(\"like\")\r\nasync def on_like(event: LikeEvent):\r\n    print(f\"@{event.user.unique_id} liked the stream!\")\r\n```\r\n\r\n### `join`\r\n\r\nTriggered every time a new person joins the stream.\r\n\r\n```python\r\n@client.on(\"join\")\r\nasync def on_join(event: JoinEvent):\r\n    print(f\"@{event.user.unique_id} joined the stream!\")\r\n```\r\n\r\n### `gift`\r\n\r\nTriggered every time a gift arrives. Extra information can be gleamed off the `available_gifts` client attribute.\r\n> **NOTE:** Users have the capability to send gifts in a streak. This increases the `event.gift.count` value until the user terminates the streak. During this time new gift events are triggered again and again with an increased `event.gift.count` value. It should be noted that after the end of the streak, another gift event is triggered, which signals the end of the streak via `event.gift.is_repeating`:`1`. This applies only to gifts with `event.gift.info.type`:`1`. This means that even if the user sends an `event.gift.info.type`:`1` gift only once, you may receive the event twice. Once with `event.gift.is_repeating`:`0` and once with `event.gift.is_repeating`:`1`. Therefore, the event should be handled as follows in one of TWO ways. These are the same, except the second is a 'higher level' implementation using TikTokLive API features:\r\n\r\n```python\r\n@client.on(\"gift\")\r\nasync def on_gift(event: GiftEvent):\r\n    # If it's type 1 and the streak is over\r\n    if event.gift.info.type == 1:\r\n        if event.gift.is_repeating == 1:\r\n            print(f\"{event.user.unique_id} sent {event.gift.count}x \\\"{event.gift.info.name}\\\"\")\r\n\r\n    # It's not type 1, which means it can't have a streak & is automatically over\r\n    elif event.gift.info.type != 1:\r\n        print(f\"{event.user.unique_id} sent \\\"{event.gift.info.name}\\\"\")\r\n```\r\n\r\n```python\r\n@client.on(\"gift\")\r\nasync def on_gift(event: GiftEvent):\r\n    # Streakable gift & streak is over\r\n    if event.gift.streakable and not event.gift.streaking:\r\n        print(f\"{event.user.unique_id} sent {event.gift.count}x \\\"{event.gift.info.name}\\\"\")\r\n\r\n    # Non-streakable gift\r\n    elif not event.gift.streakable:\r\n        print(f\"{event.user.unique_id} sent \\\"{event.gift.info.name}\\\"\")\r\n\r\n```\r\n\r\n### `follow`\r\n\r\nTriggered every time someone follows the streamer.\r\n\r\n```python\r\n@client.on(\"follow\")\r\nasync def on_follow(event: FollowEvent):\r\n    print(f\"@{event.user.unique_id} followed the streamer!\")\r\n```\r\n\r\n### `share`\r\n\r\nTriggered every time someone shares the stream.\r\n\r\n```python\r\n@client.on(\"share\")\r\nasync def on_share(event: ShareEvent):\r\n    print(f\"@{event.user.unique_id} shared the stream!\")\r\n\r\n```\r\n\r\n### `more_share`\r\n\r\nTriggered when 5 or 10 users join from a viewer's share link.\r\n\r\n```python\r\n@client.on(\"more_share\")\r\nasync def on_connect(event: MoreShareEvent):\r\n    print(f\"More than {event.amount} users have joined from {user.unique_id}'s share link!\")\r\n```\r\n\r\n\r\n### `viewer_update`\r\n\r\nTriggered every time the viewer count is updated. This event also updates the cached viewer count by default.\r\n\r\n```python\r\n@client.on(\"viewer_update\")\r\nasync def on_connect(event: ViewerUpdateEvent):\r\n\r\n    # Viewer Count\r\n    print(\"Received a new viewer count:\", event.viewer_count)\r\n    print(\"The client automatically sets the count as an attribute too:\", client.viewer_count)\r\n    \r\n    # Top VIewers\r\n    print(\"You can even get the top viewers (by coins gifted)!:\", event.top_viewers)\r\n    print(\"The client automatically sets the top viewers as an attribute too:\", client.top_viewers)\r\n\r\n```\r\n\r\n### `comment`\r\n\r\nTriggered every time someone comments on the live.\r\n\r\n```python\r\n@client.on(\"comment\")\r\nasync def on_connect(event: CommentEvent):\r\n    print(f\"{event.user.nickname} -> {event.comment}\")\r\n```\r\n\r\n### `emote`\r\n\r\nTriggered when someone sends a subscription emote comment to the live chat.\r\n\r\n```python\r\n@client.on(\"emote\")\r\nasync def on_connect(event: EmoteEvent):\r\n    print(f\"{event.user.nickname} -> {event.emote.image.url}\")\r\n```\r\n\r\n### `envelope`\r\n\r\nTriggered when someone sends an envelope (treasure box) to the TikTok streamer.\r\n\r\n```python\r\n@client.on(\"envelope\")\r\nasync def on_connect(event: EnvelopeEvent):\r\n    print(f\"{event.treasure_box_user.unique_id} -> {event.treasure_box_data}\")\r\n```\r\n\r\n### `weekly_ranking`\r\n\r\nTriggered when a weekly ranking update is sent out.\r\n\r\n```python\r\n@client.on(\"weekly_ranking\")\r\nasync def on_connect(event: WeeklyRankingEvent):\r\n    print(f\"{client.unique_id} has the rank #{event.data.rank} of all streamers!\")\r\n```\r\n\r\n### `mic_battle_start`\r\n\r\nTriggered when a Mic Battle starts!\r\n\r\n```python\r\n@client.on(\"mic_battle_start\")\r\nasync def on_connect(event: MicBattleStartEvent):\r\n    print(f\"A Mic battle has started!\")\r\n```\r\n\r\n### `mic_battle_update`\r\n\r\nTriggered when information is received about a mic battle's progress.\r\n\r\n```python\r\n@client.on(\"mic_battle_update\")\r\nasync def on_connect(event: MicBattleUpdateEvent):\r\n    print(f\"An army in the mic battle has received points, or the status of the battle has changed!\")\r\n```\r\n\r\n\r\n### `live_end`\r\n\r\nTriggered when the live stream gets terminated by the host.\r\n\r\n```python\r\n@client.on(\"live_end\")\r\nasync def on_connect(event: LiveEndEvent):\r\n    print(f\"Livestream ended :(\")\r\n```\r\n\r\n\r\n### `intro_message`\r\n\r\nTriggered when an intro message is sent to the live room.\r\nAn intro message is basically a pinned message at the top of chat when you join a room.\r\n\r\nThis event only fires if \"process_initial_data\" is enabled and the streamer has an intro message configured.\r\n\r\n```python\r\n@client.on(\"intro_message\")\r\nasync def on_connect(event: IntroMessageEvent):\r\n    print(f\"Message: {event.message}\")\r\n```\r\n\r\n\r\n### `unknown`\r\n\r\nTriggered when ANY unknown event is received that is not yet handled by this client.\r\n\r\nThis includes both events where the protobuf has NOT been decoded, as well as events where it _has_ been decoded, but no event object has been created (e.g. it's useless data).\r\n\r\nUse this event to debug and find new events to add to TikTokLive. Mention them [here](https://github.com/isaackogan/TikTokLive/issues/104) when you do.\r\n\r\nThis event is very advanced and handles both types of cases, an API to help you decode including offering the binary as base64. \r\nYou can plug base64 into https://protobuf-decoder.netlify.app/ to reverse-engineer the protobuf schema.\r\n\r\n```python\r\n@client.on(\"unknown\")\r\nasync def on_connect(event: UnknownEvent):\r\n    print(f\"Event Type: {event.type}\")\r\n    print(f\"Event Base64: {event.base64}\")\r\n```\r\n\r\n### `error`\r\n\r\nTriggered when there is an error in the client or error handlers.\r\n\r\nIf this handler is not present in the code, an internal default handler will log errors in the console. If a handler is added, all error handling (including logging) is up to the individual.\r\n\r\n**Warning:** If you listen for the error event and do not log errors, you will not see when an error occurs. This expected behaviour, listening to the error event overrides & disables the built-in one.\r\n\r\n```python\r\n\r\n@client.on(\"error\")\r\nasync def on_connect(error: Exception):\r\n    # Handle the error\r\n    if isinstance(error, SomeRandomError):\r\n        print(\"Handle some error!\")\r\n        return\r\n\r\n    # Otherwise, log the error\r\n    # You can use the internal method, but ideally your own\r\n    client._log_error(error)\r\n\r\n```\r\n\r\n## Contributors\r\n\r\n* **Isaac Kogan** - *Creator, Primary Maintainer, and Reverse-Engineering* - [isaackogan](https://github.com/isaackogan)\r\n* **Zerody** - *Initial Reverse-Engineering Protobuf & Support* - [Zerody](https://github.com/zerodytrash/)\r\n* **Davincible** - *Reverse-Engineering Stream Downloads*  - [davincible](https://github.com/davincible)\r\n* **David Teather** - *TikTokLive Introduction Tutorial* - [davidteather](https://github.com/davidteather)\r\n\r\nSee also the full list of [contributors](https://github.com/isaackogan/TikTokLive/contributors) who have participated in this project.\r\n\r\n## License\r\n\r\nThis project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.\r\n\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/isaackogan/TikTokLive/releases/tag/v5.0.7",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/isaackogan/TikTokLive",
    "keywords": "tiktok,tiktok live,python3,api,unofficial",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "TikTokLive",
    "package_url": "https://pypi.org/project/TikTokLive/",
    "platform": null,
    "project_url": "https://pypi.org/project/TikTokLive/",
    "project_urls": {
      "Download": "https://github.com/isaackogan/TikTokLive/releases/tag/v5.0.7",
      "Homepage": "https://github.com/isaackogan/TikTokLive"
    },
    "release_url": "https://pypi.org/project/TikTokLive/5.0.7/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "TikTok Live Connection Client",
    "version": "5.0.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17023601,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8cfb1689615979b967c8eb6d70439e8d87328635a0163e0780e3da7740860103",
          "md5": "b76474127b05121b56e0325aa697b209",
          "sha256": "c3d9a3b4a41a12b0fa37a1a9a670a85ddec978f2683149b9db385ed406af4d11"
        },
        "downloads": -1,
        "filename": "TikTokLive-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b76474127b05121b56e0325aa697b209",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18157,
        "upload_time": "2022-02-24T03:37:35",
        "upload_time_iso_8601": "2022-02-24T03:37:35.373889Z",
        "url": "https://files.pythonhosted.org/packages/8c/fb/1689615979b967c8eb6d70439e8d87328635a0163e0780e3da7740860103/TikTokLive-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8165ae3cdea7bee26751e930a7e8c20c0c50fd62f9793150fe7a535416c555b9",
          "md5": "6c999ec2cce9b4328af25fe9f7c76898",
          "sha256": "de5e77a8902e9eeca9473d7d51ea918ccd44124ad112a2232457f529eddd0c0e"
        },
        "downloads": -1,
        "filename": "TikTokLive-0.6.9.tar.gz",
        "has_sig": false,
        "md5_digest": "6c999ec2cce9b4328af25fe9f7c76898",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18155,
        "upload_time": "2022-02-24T03:50:23",
        "upload_time_iso_8601": "2022-02-24T03:50:23.227745Z",
        "url": "https://files.pythonhosted.org/packages/81/65/ae3cdea7bee26751e930a7e8c20c0c50fd62f9793150fe7a535416c555b9/TikTokLive-0.6.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6fa6dcf39fa8af44daca5007b2b237adfed7308bda1302253982f8abf8e9dc01",
          "md5": "d7449a2f96810e526ed2a463280dfd70",
          "sha256": "e35d7a40d6c919269768bb5e67f00d867e956112c2d72c143b27d702e125c553"
        },
        "downloads": -1,
        "filename": "TikTokLive-0.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d7449a2f96810e526ed2a463280dfd70",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19125,
        "upload_time": "2022-03-01T01:22:35",
        "upload_time_iso_8601": "2022-03-01T01:22:35.868732Z",
        "url": "https://files.pythonhosted.org/packages/6f/a6/dcf39fa8af44daca5007b2b237adfed7308bda1302253982f8abf8e9dc01/TikTokLive-0.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82ac310453c634f7328f3ce4ba71235ccaa135397747adba8231f795eac5a980",
          "md5": "6a090938a2417a8488979e7c34adf854",
          "sha256": "7e64d989914fa2356421af498b766b05314688931925c0233b6eab13a57e03c2"
        },
        "downloads": -1,
        "filename": "TikTokLive-0.7.5.tar.gz",
        "has_sig": false,
        "md5_digest": "6a090938a2417a8488979e7c34adf854",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 22432,
        "upload_time": "2022-03-08T00:30:48",
        "upload_time_iso_8601": "2022-03-08T00:30:48.447636Z",
        "url": "https://files.pythonhosted.org/packages/82/ac/310453c634f7328f3ce4ba71235ccaa135397747adba8231f795eac5a980/TikTokLive-0.7.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3639c83035a844fbaf3b95071073e9bd2609f033986a78b53b0ef66ba6e491f3",
          "md5": "49c23821331ba8adef8c1a5f8d5e9ebd",
          "sha256": "385e1435f867051112bc270fcc8a9310111478ce47fa449d736378c7a080abcc"
        },
        "downloads": -1,
        "filename": "TikTokLive-0.8.0.tar.gz",
        "has_sig": false,
        "md5_digest": "49c23821331ba8adef8c1a5f8d5e9ebd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 27316,
        "upload_time": "2022-03-23T22:07:57",
        "upload_time_iso_8601": "2022-03-23T22:07:57.965289Z",
        "url": "https://files.pythonhosted.org/packages/36/39/c83035a844fbaf3b95071073e9bd2609f033986a78b53b0ef66ba6e491f3/TikTokLive-0.8.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "12999a0e347efe1b697c69b46047fa3de4ac03c40e4cd37b9d384665c184d961",
          "md5": "5c8dc0ea5305417c4c66c65e852256bf",
          "sha256": "b4f311d8d6dc3481094638bd28e7fd8ba6504cdfd403f6fcb17f44923af6b048"
        },
        "downloads": -1,
        "filename": "TikTokLive-0.8.2.tar.gz",
        "has_sig": false,
        "md5_digest": "5c8dc0ea5305417c4c66c65e852256bf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28704,
        "upload_time": "2022-04-12T22:54:04",
        "upload_time_iso_8601": "2022-04-12T22:54:04.873247Z",
        "url": "https://files.pythonhosted.org/packages/12/99/9a0e347efe1b697c69b46047fa3de4ac03c40e4cd37b9d384665c184d961/TikTokLive-0.8.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4fbbc8d6630f921a24dadd750b516c29767622cdd26e2059bf9a1fef0fc1ba71",
          "md5": "7a10e3988e401fe8772f001574921514",
          "sha256": "33799bc0d59c71befc089d6b5fcba98887bc9f003d87499563f010e81cdaf56c"
        },
        "downloads": -1,
        "filename": "TikTokLive-0.8.5.tar.gz",
        "has_sig": false,
        "md5_digest": "7a10e3988e401fe8772f001574921514",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 27685,
        "upload_time": "2022-04-16T02:18:42",
        "upload_time_iso_8601": "2022-04-16T02:18:42.294830Z",
        "url": "https://files.pythonhosted.org/packages/4f/bb/c8d6630f921a24dadd750b516c29767622cdd26e2059bf9a1fef0fc1ba71/TikTokLive-0.8.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6a6ded70330e61276567bd71474169ae19aae4020d9b93d7fefe4c5123afcb4d",
          "md5": "5d2a0946feda0fe72891799845060fd9",
          "sha256": "c41015d16ea35a2e15d16f33bac1dc90eab1c108926c808a06c1eefd545b510c"
        },
        "downloads": -1,
        "filename": "TikTokLive-0.8.6.tar.gz",
        "has_sig": false,
        "md5_digest": "5d2a0946feda0fe72891799845060fd9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28225,
        "upload_time": "2022-04-22T17:22:17",
        "upload_time_iso_8601": "2022-04-22T17:22:17.373886Z",
        "url": "https://files.pythonhosted.org/packages/6a/6d/ed70330e61276567bd71474169ae19aae4020d9b93d7fefe4c5123afcb4d/TikTokLive-0.8.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "00f17446e38e06046d16c291df377c732c1b4ae9847eda3dbfef6e259876f53a",
          "md5": "fb9961f4b236fb067e20e15a2829f340",
          "sha256": "745a289172db9de54929a2a1c2ea209e0090fb3b249020e7f2c003a0e7113813"
        },
        "downloads": -1,
        "filename": "TikTokLive-0.8.9.tar.gz",
        "has_sig": false,
        "md5_digest": "fb9961f4b236fb067e20e15a2829f340",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29145,
        "upload_time": "2022-05-01T02:14:19",
        "upload_time_iso_8601": "2022-05-01T02:14:19.375788Z",
        "url": "https://files.pythonhosted.org/packages/00/f1/7446e38e06046d16c291df377c732c1b4ae9847eda3dbfef6e259876f53a/TikTokLive-0.8.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "909cc98a18dd63fcf1415e4cb8f6b7a63f3fbd2e141422a916705c20b2043fd7",
          "md5": "4963ca681a68972699f9abc68675d436",
          "sha256": "c2a608a378534e70da09ac946c70cc9a3bce3a97928ff732ed0330613da0eb43"
        },
        "downloads": -1,
        "filename": "TikTokLive-4.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4963ca681a68972699f9abc68675d436",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 34543,
        "upload_time": "2022-07-12T03:04:21",
        "upload_time_iso_8601": "2022-07-12T03:04:21.314192Z",
        "url": "https://files.pythonhosted.org/packages/90/9c/c98a18dd63fcf1415e4cb8f6b7a63f3fbd2e141422a916705c20b2043fd7/TikTokLive-4.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8543ff1ce7da4946618fd078d9be6ab36770a3e5039559bd687d9dd94d7ca386",
          "md5": "2c0253606f097ec1814dfb0c8e75f2b2",
          "sha256": "7be2163555bf8c9ad9fadf0baa2018db4ad7f21f13a698331ef898aa2d5c9d43"
        },
        "downloads": -1,
        "filename": "TikTokLive-4.2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "2c0253606f097ec1814dfb0c8e75f2b2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 36964,
        "upload_time": "2022-07-22T19:31:05",
        "upload_time_iso_8601": "2022-07-22T19:31:05.456744Z",
        "url": "https://files.pythonhosted.org/packages/85/43/ff1ce7da4946618fd078d9be6ab36770a3e5039559bd687d9dd94d7ca386/TikTokLive-4.2.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.2.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9333ef0dba5dfe9a3d2e72ed9dea0f4df9c3af195b047086001ef8c7dca35d2d",
          "md5": "beafd1ae642a66f4f25a651d764625d6",
          "sha256": "8de001e969fb9dee4b300bd7cf966a4b183fa0fbcd6ebdbd225cff43ae76368e"
        },
        "downloads": -1,
        "filename": "TikTokLive-4.2.6.tar.gz",
        "has_sig": false,
        "md5_digest": "beafd1ae642a66f4f25a651d764625d6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 37428,
        "upload_time": "2022-07-23T23:35:50",
        "upload_time_iso_8601": "2022-07-23T23:35:50.029697Z",
        "url": "https://files.pythonhosted.org/packages/93/33/ef0dba5dfe9a3d2e72ed9dea0f4df9c3af195b047086001ef8c7dca35d2d/TikTokLive-4.2.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "924de28cce81ec8917636e6448e081c93f6a3def193a8d3716178a538e3120de",
          "md5": "05f842bbf49dbca8be0a3089c9bf1964",
          "sha256": "01d4c670f15577cb245360162a2518d65372b935a94919621175b3a6f9e27efb"
        },
        "downloads": -1,
        "filename": "TikTokLive-4.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "05f842bbf49dbca8be0a3089c9bf1964",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 36706,
        "upload_time": "2022-07-29T02:25:34",
        "upload_time_iso_8601": "2022-07-29T02:25:34.177490Z",
        "url": "https://files.pythonhosted.org/packages/92/4d/e28cce81ec8917636e6448e081c93f6a3def193a8d3716178a538e3120de/TikTokLive-4.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "de4889c3e121563b85f72fd9fc2930102ca02e6598bc9f46823cd3ba4dabb62a",
          "md5": "23d00ec165450a947864b2266c2cc874",
          "sha256": "53f0ca873e1e44dce2d89bf96df64d8c5d4874712f80166b53068b8cb12983da"
        },
        "downloads": -1,
        "filename": "TikTokLive-4.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "23d00ec165450a947864b2266c2cc874",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 37004,
        "upload_time": "2022-08-02T20:48:52",
        "upload_time_iso_8601": "2022-08-02T20:48:52.073385Z",
        "url": "https://files.pythonhosted.org/packages/de/48/89c3e121563b85f72fd9fc2930102ca02e6598bc9f46823cd3ba4dabb62a/TikTokLive-4.3.2.tar.gz",
        "yanked": true,
        "yanked_reason": "Broken Version"
      }
    ],
    "4.3.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "55b2552a2675d71678cf528e45e17cf019767d952e6cde0b534dcba3d16168a9",
          "md5": "e6cfd169890eb61ef4439e0c57fda652",
          "sha256": "1d6f928db6ba7b93e3155bc6d094eb7bb70aa8300c8a436185102c89d5ee0c44"
        },
        "downloads": -1,
        "filename": "TikTokLive-4.3.3.tar.gz",
        "has_sig": false,
        "md5_digest": "e6cfd169890eb61ef4439e0c57fda652",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 37063,
        "upload_time": "2022-08-03T04:43:11",
        "upload_time_iso_8601": "2022-08-03T04:43:11.762663Z",
        "url": "https://files.pythonhosted.org/packages/55/b2/552a2675d71678cf528e45e17cf019767d952e6cde0b534dcba3d16168a9/TikTokLive-4.3.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.3.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "256d46a562103e3f15946eb98cc4b3b1e4f285d34ec31814b3bb8499e29a47f3",
          "md5": "c6b0d2322b2285c77232e32a3f0d0c47",
          "sha256": "2b47d3ce1c10b82638a83e0e6017dd32ddbcdfa7b9fc04efb5c2f050ef4205be"
        },
        "downloads": -1,
        "filename": "TikTokLive-4.3.5.tar.gz",
        "has_sig": false,
        "md5_digest": "c6b0d2322b2285c77232e32a3f0d0c47",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 37090,
        "upload_time": "2022-08-26T21:12:42",
        "upload_time_iso_8601": "2022-08-26T21:12:42.144685Z",
        "url": "https://files.pythonhosted.org/packages/25/6d/46a562103e3f15946eb98cc4b3b1e4f285d34ec31814b3bb8499e29a47f3/TikTokLive-4.3.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.3.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b20f92addf9e7be926ced28fda0774971ff4110af4d4bbefc3bb11d0486dee68",
          "md5": "0fd9644642812414483056d6af3044a6",
          "sha256": "dd85b13f4639c161a59eaefd99ef1c51daad590d79ff85da4117e25482fb46ea"
        },
        "downloads": -1,
        "filename": "TikTokLive-4.3.6.tar.gz",
        "has_sig": false,
        "md5_digest": "0fd9644642812414483056d6af3044a6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 37410,
        "upload_time": "2022-09-04T19:57:20",
        "upload_time_iso_8601": "2022-09-04T19:57:20.369488Z",
        "url": "https://files.pythonhosted.org/packages/b2/0f/92addf9e7be926ced28fda0774971ff4110af4d4bbefc3bb11d0486dee68/TikTokLive-4.3.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.3.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f9287b923d8b072d8e561d67a4a0775ea33b8c66f92293b06fd4d002d3e54618",
          "md5": "3211e46a0315392487d7a37e0e63166a",
          "sha256": "ba2789e5ff47dc444f2fdba106cdfc0633a7f8dd217f80aff50516020dfd378f"
        },
        "downloads": -1,
        "filename": "TikTokLive-4.3.7.tar.gz",
        "has_sig": false,
        "md5_digest": "3211e46a0315392487d7a37e0e63166a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 37753,
        "upload_time": "2022-09-19T20:00:24",
        "upload_time_iso_8601": "2022-09-19T20:00:24.651043Z",
        "url": "https://files.pythonhosted.org/packages/f9/28/7b923d8b072d8e561d67a4a0775ea33b8c66f92293b06fd4d002d3e54618/TikTokLive-4.3.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.3.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "50c8519acd3928762990fc81e076c8c691e205b05d01b21bd621c0600cc1215e",
          "md5": "7147ccab3fed5bb7c331dfa7702221f8",
          "sha256": "42e180bdf9eebe6eea7aaff045e5ff6e1ce0853e402a8c28cdb232281d660f2d"
        },
        "downloads": -1,
        "filename": "TikTokLive-4.3.8.tar.gz",
        "has_sig": false,
        "md5_digest": "7147ccab3fed5bb7c331dfa7702221f8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 37780,
        "upload_time": "2022-10-06T00:38:25",
        "upload_time_iso_8601": "2022-10-06T00:38:25.185285Z",
        "url": "https://files.pythonhosted.org/packages/50/c8/519acd3928762990fc81e076c8c691e205b05d01b21bd621c0600cc1215e/TikTokLive-4.3.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3e62b796b58b323735a40a201899c4340c58d9bfced0fe1885ac1f8668ac3532",
          "md5": "d04c959d641444ac375fda8cf57ec7e5",
          "sha256": "dc345992acaa1e92c7875dfbec948de0f32af5dbdabd179e76507429e1ae2e4f"
        },
        "downloads": -1,
        "filename": "TikTokLive-4.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d04c959d641444ac375fda8cf57ec7e5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 38487,
        "upload_time": "2022-10-14T19:05:53",
        "upload_time_iso_8601": "2022-10-14T19:05:53.582467Z",
        "url": "https://files.pythonhosted.org/packages/3e/62/b796b58b323735a40a201899c4340c58d9bfced0fe1885ac1f8668ac3532/TikTokLive-4.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bed9b8736ac9edb005c6904cb725b8e9d4c837e774e679c3c72235c2aa020d39",
          "md5": "8779511e2333b9d61af84bbbaf368346",
          "sha256": "bd16abd9e4079ac01bedb52de1fd1a76b8520862d0a371a807115b041368fc25"
        },
        "downloads": -1,
        "filename": "TikTokLive-4.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8779511e2333b9d61af84bbbaf368346",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 38482,
        "upload_time": "2022-10-14T19:13:23",
        "upload_time_iso_8601": "2022-10-14T19:13:23.144975Z",
        "url": "https://files.pythonhosted.org/packages/be/d9/b8736ac9edb005c6904cb725b8e9d4c837e774e679c3c72235c2aa020d39/TikTokLive-4.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.5.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c331457e8c335b00413bc990cea4b70aa25f515191fc388553c1481b688dcf2c",
          "md5": "cd9171e0f71d64629bdef4f15df6809d",
          "sha256": "1656f0c346410cbd843a73813becadfbbb0ce9c183ac1c58b3ddc4acec8ad5c5"
        },
        "downloads": -1,
        "filename": "TikTokLive-4.5.2.tar.gz",
        "has_sig": false,
        "md5_digest": "cd9171e0f71d64629bdef4f15df6809d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 38610,
        "upload_time": "2023-01-20T00:23:22",
        "upload_time_iso_8601": "2023-01-20T00:23:22.673444Z",
        "url": "https://files.pythonhosted.org/packages/c3/31/457e8c335b00413bc990cea4b70aa25f515191fc388553c1481b688dcf2c/TikTokLive-4.5.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "edda175d17b2fdc818ee9af41207d88e76cc6af255d39fed64089632452d895e",
          "md5": "749fe5644e43a86e56502610a48829a8",
          "sha256": "b59991166f033105ef2042e0a87ffebb428fe9ad66acf95f440f9bbd64d377b0"
        },
        "downloads": -1,
        "filename": "TikTokLive-5.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "749fe5644e43a86e56502610a48829a8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 40301,
        "upload_time": "2023-02-21T09:10:47",
        "upload_time_iso_8601": "2023-02-21T09:10:47.779143Z",
        "url": "https://files.pythonhosted.org/packages/ed/da/175d17b2fdc818ee9af41207d88e76cc6af255d39fed64089632452d895e/TikTokLive-5.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "db6c75fdb008f49ea4e929416637088038c223f52e9c54d725e0feb27a1b3fff",
          "md5": "1e31b346ed13cea6c59f9972258a0cca",
          "sha256": "01eb1bb0ca1fa78a95f4cf5db4c65af55a4631dfaf20b414824c65ea5d52de90"
        },
        "downloads": -1,
        "filename": "TikTokLive-5.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1e31b346ed13cea6c59f9972258a0cca",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 40558,
        "upload_time": "2023-02-21T20:39:10",
        "upload_time_iso_8601": "2023-02-21T20:39:10.926326Z",
        "url": "https://files.pythonhosted.org/packages/db/6c/75fdb008f49ea4e929416637088038c223f52e9c54d725e0feb27a1b3fff/TikTokLive-5.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e4d44341192997bf86b06b9195327b70c2d004f3882669a510a7b26d60c75b46",
          "md5": "bf92c3bbd01f727f7c5b9893ad3d6359",
          "sha256": "56689d9b26fd5bd0780d777fe7dbdc3f2a85ae860064c8fdd37d2a5411cfdcf8"
        },
        "downloads": -1,
        "filename": "TikTokLive-5.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "bf92c3bbd01f727f7c5b9893ad3d6359",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 42071,
        "upload_time": "2023-02-23T05:50:54",
        "upload_time_iso_8601": "2023-02-23T05:50:54.215205Z",
        "url": "https://files.pythonhosted.org/packages/e4/d4/4341192997bf86b06b9195327b70c2d004f3882669a510a7b26d60c75b46/TikTokLive-5.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a2812f1b9232fb39df58921aa65421a9a2c93d71b3824ef6877c0d805ccf300d",
          "md5": "ff6485a2929e910186af0c5ee35bae36",
          "sha256": "1288998c308dc5accb81059f3c8e72146db91ad5f5914c79bcd2ec774bab9287"
        },
        "downloads": -1,
        "filename": "TikTokLive-5.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "ff6485a2929e910186af0c5ee35bae36",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 42077,
        "upload_time": "2023-02-23T07:52:19",
        "upload_time_iso_8601": "2023-02-23T07:52:19.173980Z",
        "url": "https://files.pythonhosted.org/packages/a2/81/2f1b9232fb39df58921aa65421a9a2c93d71b3824ef6877c0d805ccf300d/TikTokLive-5.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "88d59db2ae0ada984702ed0a738ba2775919c0b63eb4c41da8b3fa2a0462710a",
          "md5": "7e76308d19c7ae5d289e62190a81b188",
          "sha256": "86151ba15a27c66211ed34250c596a0707a1c39a593d49af1207388da31d6db6"
        },
        "downloads": -1,
        "filename": "TikTokLive-5.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "7e76308d19c7ae5d289e62190a81b188",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 42068,
        "upload_time": "2023-02-25T05:36:25",
        "upload_time_iso_8601": "2023-02-25T05:36:25.006791Z",
        "url": "https://files.pythonhosted.org/packages/88/d5/9db2ae0ada984702ed0a738ba2775919c0b63eb4c41da8b3fa2a0462710a/TikTokLive-5.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "88d59db2ae0ada984702ed0a738ba2775919c0b63eb4c41da8b3fa2a0462710a",
        "md5": "7e76308d19c7ae5d289e62190a81b188",
        "sha256": "86151ba15a27c66211ed34250c596a0707a1c39a593d49af1207388da31d6db6"
      },
      "downloads": -1,
      "filename": "TikTokLive-5.0.7.tar.gz",
      "has_sig": false,
      "md5_digest": "7e76308d19c7ae5d289e62190a81b188",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 42068,
      "upload_time": "2023-02-25T05:36:25",
      "upload_time_iso_8601": "2023-02-25T05:36:25.006791Z",
      "url": "https://files.pythonhosted.org/packages/88/d5/9db2ae0ada984702ed0a738ba2775919c0b63eb4c41da8b3fa2a0462710a/TikTokLive-5.0.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}