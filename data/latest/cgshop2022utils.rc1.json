{
  "info": {
    "author": "TU Braunschweig, IBR, Algorithms Group (Phillip Keldenich, Rouven Kniep, and Dominik Krupke)",
    "author_email": "keldenich@ibr.cs.tu-bs.de, krupke@ibr.cs.tu-bs.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Official Utilities for the CG:SHOP 2022 Challenge\n\nThis package provides some utilities for handling instances and solutions for the\n*CG:SHOP 2022 Challenge on Minimum Partition into Plane Subgraphs*.\nThese are the tools that are used by us, the (technical) organizers, to handle our\ninstances and your solutions.\n* Reading and writing instances.\n* Reading and writing solutions.\n* Verifying solutions for correctness.\n\nThe source code can be found [here](https://gitlab.ibr.cs.tu-bs.de/alg/cgshop2022-pyutils).\n\n## Installation\n\nThe installation is simple:\n```shell\npip install cgshop2022utils\n```\n\nIf `pip` does not install the dependencies for you you may also need\n```shell\npip install networkx\n```\n\nThe verification component (currently under development) will be implemented in C++\nand require a more complicated installation. We will probably provide a precompiled\nversion for Linux, but other systems may need to compile the package by hand.\nWe will provide instructions for this in due time.\n\n## Reading instances\n\n```python\nfrom cgshop2022utils.io import read_instance\n\ninstance = read_instance(\"path or file object to instance\")\n```\nThe instance is a dict of the following format:\n```python\n{\n        \"type\": \"Instance_CGSHOP2022\",\n        \"id\": \"unique name of instance\",\n        \"meta\": dict, # with information on the instance (e.g., the polygon for visibility instances)\n        \"graph\": networkx.Graph, # The instance graph with typing.Tuple[int, int] as vertices.\n}\n```\n\nCheck out the documentation of [networkx](https://networkx.org/documentation/stable/) on how to deal with the graphs.\nIt is fairly straight forward.\nFor example:\n```python\nprint(\"Points:\")\nfor v in graph.nodes:\n    print(v)\nprint(\"Edges:\")\nfor v,w in graph.edges:\n    print(v, \"<->\", w)\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://cgshop.ibr.cs.tu-bs.de/competition/cg-shop-2022/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cgshop2022utils",
    "package_url": "https://pypi.org/project/cgshop2022utils/",
    "platform": "",
    "project_url": "https://pypi.org/project/cgshop2022utils/",
    "project_urls": {
      "Homepage": "https://cgshop.ibr.cs.tu-bs.de/competition/cg-shop-2022/"
    },
    "release_url": "https://pypi.org/project/cgshop2022utils/0.1.0/",
    "requires_dist": [
      "networkx"
    ],
    "requires_python": ">=3.6",
    "summary": "Utilities for the CG:SHOP 2022 Optimization Competition on Minimum Partition into Plane Subgraphs.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11219793,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa7d55493021de8d9cceb60abfa263fcefe7daa57c8fea75fdc45d41d346ea3c",
          "md5": "6fe14bf59ebe1d61ca46155af9554709",
          "sha256": "56cae1123dd9fd2d83395553412a05b0958bbcf82e15407830735775fd042297"
        },
        "downloads": -1,
        "filename": "cgshop2022utils-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6fe14bf59ebe1d61ca46155af9554709",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5179,
        "upload_time": "2021-08-19T08:22:59",
        "upload_time_iso_8601": "2021-08-19T08:22:59.584556Z",
        "url": "https://files.pythonhosted.org/packages/aa/7d/55493021de8d9cceb60abfa263fcefe7daa57c8fea75fdc45d41d346ea3c/cgshop2022utils-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "aa7d55493021de8d9cceb60abfa263fcefe7daa57c8fea75fdc45d41d346ea3c",
        "md5": "6fe14bf59ebe1d61ca46155af9554709",
        "sha256": "56cae1123dd9fd2d83395553412a05b0958bbcf82e15407830735775fd042297"
      },
      "downloads": -1,
      "filename": "cgshop2022utils-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6fe14bf59ebe1d61ca46155af9554709",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 5179,
      "upload_time": "2021-08-19T08:22:59",
      "upload_time_iso_8601": "2021-08-19T08:22:59.584556Z",
      "url": "https://files.pythonhosted.org/packages/aa/7d/55493021de8d9cceb60abfa263fcefe7daa57c8fea75fdc45d41d346ea3c/cgshop2022utils-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}