{
  "info": {
    "author": "Mark Melnic",
    "author_email": "me@markmelnic.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: POSIX",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# Intro\r\nThis is an experimental auth library. It has not been tested in production yet. The scope of this experiment is to provide an auth method where the user can remember a target pin (much like a cipher) and calculate a one time code (otc) relative to the current time.\r\n\r\n## Foreword\r\nFrom a security standpoint, this is not very secure, but does prevent brute forcing to some extent.\r\n\r\n### Problem 1:\r\nIf a third party knows the code and the timestamp of the code, they can easily compute the target and validate whenever they want.\r\n\r\n### Problem 2:\r\nOnce the code has been computed, it is incremental, meaning that depending on the method, the code increments or decrements by 1 every minute.\r\n\r\n### Problem 3:\r\nEvery day at the same time of the day the code will be the same if the target does not change.\r\n\r\n## How it works\r\nGiven a pin only the user knows which will be referenced as the \"target\", validation is done by manually computing a code based on the difference between the current time and a code they manually compute.\r\n\r\nDepending on the method, subtracting or adding, the code is calculated differently.\r\n\r\n### Given the method is adding\r\nIf the target is 1111 and the current time is 12:34, the code would be 0987.\r\n\r\n### If the method is subtracting\r\nUsing the same approach, the code would be 0123.\r\n\r\nThe code is then hashed and compared to the hash of the target.\r\n\r\n## How to use\r\n\r\n### Install\r\n    pip install timedotc\r\n\r\n### Import\r\n    from timedotc import timedotc\r\n\r\n### Create the auth object\r\n    method = \"sub\"\r\n    auth = timedotc(\r\n        method=method,\r\n        secret_key=secret_key,\r\n    )\r\n\r\n    target = auth.hash(\"0000\")\r\n\r\n### Validate\r\n    code = \"1111\"\r\n    auth.verify(code, target)\r\n\r\n## Usage scenarios\r\nThis might be useful for loggin into an admin panel where there is only one user intended.\r\n\r\n## Improvements\r\n\r\n### Problem 3:\r\nThe target could have a parent target which depends on the current date (month and day) which once computed would modify the initial target (calulated based on H:M). This is still susceptible to problem 1 however.\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/markmelnic/timedotc",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "timedotc",
    "package_url": "https://pypi.org/project/timedotc/",
    "platform": "MacOS X",
    "project_url": "https://pypi.org/project/timedotc/",
    "project_urls": {
      "Homepage": "https://github.com/markmelnic/timedotc"
    },
    "release_url": "https://pypi.org/project/timedotc/0.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Time relative one time computed code",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15844376,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "22186207e076715be00bb9e7b85ebd521ecb564a5bd77d1e6e0a7545177e4aad",
          "md5": "d750ed5ff09f7e0aa8f2ae346aa18ee1",
          "sha256": "2e7fb23f4926130b4633721a79f2a39ad0689e6c63b432304018f000300fb771"
        },
        "downloads": -1,
        "filename": "timedotc-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d750ed5ff09f7e0aa8f2ae346aa18ee1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 3851,
        "upload_time": "2022-11-21T19:04:04",
        "upload_time_iso_8601": "2022-11-21T19:04:04.351752Z",
        "url": "https://files.pythonhosted.org/packages/22/18/6207e076715be00bb9e7b85ebd521ecb564a5bd77d1e6e0a7545177e4aad/timedotc-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7a9bcfe1f4f4761dedfe737f00f42dc879f4dc6fcfed878ee1fa69ddfb925f3a",
          "md5": "7125038699924fc8c6b3a752a0213423",
          "sha256": "af5115aee73e20ca6c8a7dc2ac6e2a2cbfdfbf51aa0bbe49165de1288caf2a78"
        },
        "downloads": -1,
        "filename": "timedotc-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7125038699924fc8c6b3a752a0213423",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3576,
        "upload_time": "2022-11-21T19:04:06",
        "upload_time_iso_8601": "2022-11-21T19:04:06.695759Z",
        "url": "https://files.pythonhosted.org/packages/7a/9b/cfe1f4f4761dedfe737f00f42dc879f4dc6fcfed878ee1fa69ddfb925f3a/timedotc-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "22186207e076715be00bb9e7b85ebd521ecb564a5bd77d1e6e0a7545177e4aad",
        "md5": "d750ed5ff09f7e0aa8f2ae346aa18ee1",
        "sha256": "2e7fb23f4926130b4633721a79f2a39ad0689e6c63b432304018f000300fb771"
      },
      "downloads": -1,
      "filename": "timedotc-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d750ed5ff09f7e0aa8f2ae346aa18ee1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 3851,
      "upload_time": "2022-11-21T19:04:04",
      "upload_time_iso_8601": "2022-11-21T19:04:04.351752Z",
      "url": "https://files.pythonhosted.org/packages/22/18/6207e076715be00bb9e7b85ebd521ecb564a5bd77d1e6e0a7545177e4aad/timedotc-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7a9bcfe1f4f4761dedfe737f00f42dc879f4dc6fcfed878ee1fa69ddfb925f3a",
        "md5": "7125038699924fc8c6b3a752a0213423",
        "sha256": "af5115aee73e20ca6c8a7dc2ac6e2a2cbfdfbf51aa0bbe49165de1288caf2a78"
      },
      "downloads": -1,
      "filename": "timedotc-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "7125038699924fc8c6b3a752a0213423",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 3576,
      "upload_time": "2022-11-21T19:04:06",
      "upload_time_iso_8601": "2022-11-21T19:04:06.695759Z",
      "url": "https://files.pythonhosted.org/packages/7a/9b/cfe1f4f4761dedfe737f00f42dc879f4dc6fcfed878ee1fa69ddfb925f3a/timedotc-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}