{
  "info": {
    "author": "Qkrisi",
    "author_email": "qruczkristof@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "Reflection Helper - Python\n==========================\n\nA module that makes reflection easier in Python, based on the C#\nSystem.Reflection library\n\nInstallation\n------------\n\nUse ``pip3 install ReflectionHelper`` to install the module.\n(Python3.7+)\n\nUsage\n-----\n\nImport the module using\n\n.. code-block:: python\n\n    from ReflectionHelper import *\n\n| The module adds 4 new functions to the ``type`` class.\n| -``GetField``\n| -``GetFields``\n| -``GetMethod``\n| -``GetMethods``\n\nClasses\n-------\n\nMemberInfo\n~~~~~~~~~~\n\nA parent class storing the datas of the reflected values\n\nFieldInfo\n~~~~~~~~~\n\nIherits ``MemberInfo``\n\nA class storing the reflected field\n\nMethods\n~~~~~~~\n\n| **GetValue**\n| Gets the value of the field\n\nReturns: ``object``\n\n+-------------+------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------+-----------------+\n| Parameter   | Type                                                             | Description                                                                                                            | Default value   |\n+=============+==================================================================+========================================================================================================================+=================+\n| cl          | The type of the class the field was reflected from or ``None``   | An instance of the class if the field is private; ``None``, instance or the type of the class if the field is static   | -               |\n+-------------+------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------+-----------------+\n\n| **SetValue**\n| Sets the value of the field\n\n+-------------+------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------+-----------------+\n| Parameter   | Type                                                             | Description                                                                                                            | Default value   |\n+=============+==================================================================+========================================================================================================================+=================+\n| cl          | The type of the class the field was reflected from or ``None``   | An instance of the class if the field is private; ``None``, instance or the type of the class if the field is static   | -               |\n+-------------+------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------+-----------------+\n| value       | ``object``                                                       | Sets the value of the field in the type to ``value``                                                                   | -               |\n+-------------+------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------+-----------------+\n\nVariables\n~~~~~~~~~\n\n+------------+-----------+-------------------------+\n| Variable   | Type      | Description             |\n+============+===========+=========================+\n| Name       | ``str``   | The name of the field   |\n+------------+-----------+-------------------------+\n\nMethodInfo\n~~~~~~~~~~\n\nInherits ``MemberInfo``\n\nA class storing the reflected method\n\nMethods\n~~~~~~~\n\n**Invoke**\n\nRuns the method and returns its result (or ``None`` if it doesn't have\na result)\n\nReturns: ``object``\n\n+-------------+-------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------+-----------------+\n| Parameter   | Type                                                              | Description                                                                                                             | Default value   |\n+=============+===================================================================+=========================================================================================================================+=================+\n| cl          | The type of the class the method was reflected from or ``None``   | An instance of the class if the method is private; ``None``, instance or the type of the class if the field is static   | -               |\n+-------------+-------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------+-----------------+\n| arr         | List of ``object``                                                | The parameters to call the method with (see example below)                                                              | -               |\n+-------------+-------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------+-----------------+\n\n**InvokeAsync**\n\nAsyncronous\n\nAwaits the method and returns its result (or ``None`` if it doesn't\nhave a result)\n\nReturns ``object``\n\n+-------------+-------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------+-----------------+\n| Parameter   | Type                                                              | Description                                                                                                             | Default value   |\n+=============+===================================================================+=========================================================================================================================+=================+\n| cl          | The type of the class the method was reflected from or ``None``   | An instance of the class if the method is private; ``None``, instance or the type of the class if the field is static   | -               |\n+-------------+-------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------+-----------------+\n| arr         | List of ``object``                                                | The parameters to call the method with (see example below)                                                              | -               |\n+-------------+-------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------+-----------------+\n\n**GetParameters**\n\nGets the parameters of the reflected method.\n\nReturns: List of ``ParameterInfo``\n\n+--------------+------------+--------------------------------------------------------------------------+-----------------+\n| Parameter    | Type       | Description                                                              | Default value   |\n+==============+============+==========================================================================+=================+\n| enableSelf   | ``bool``   | If it's true, the ``self`` parameter will be returned too (if present)   | False           |\n+--------------+------------+--------------------------------------------------------------------------+-----------------+\n\nVariables\n~~~~~~~~~\n\n+--------------+------------+------------------------------------------------------+\n| Variable     | Type       | Description                                          |\n+==============+============+======================================================+\n| Name         | ``str``    | The name of the method                               |\n+--------------+------------+------------------------------------------------------+\n| ReturnType   | ``type``   | The type of the returned value                       |\n+--------------+------------+------------------------------------------------------+\n| IsStatic     | ``bool``   | True if the method is static, otherwise false        |\n+--------------+------------+------------------------------------------------------+\n| IsAsync      | ``bool``   | True if the method is asyncronous, otherwise false   |\n+--------------+------------+------------------------------------------------------+\n\nParameterInfo\n~~~~~~~~~~~~~\n\nA class storing the informations of a parameter\n\nPrinting it will write the type of the parameter.\n\nVariables\n~~~~~~~~~\n\n+-------------------------+--------------+----------------------------------------------------------------------------+\n| Variable                | Type         | Description                                                                |\n+=========================+==============+============================================================================+\n| Name                    | ``str``      | The name of the parameter                                                  |\n+-------------------------+--------------+----------------------------------------------------------------------------+\n| ParameterType           | ``type``     | The type of the parameter                                                  |\n+-------------------------+--------------+----------------------------------------------------------------------------+\n| Position                | ``int``      | The position of the parameter when calling the method (going from ``0``)   |\n+-------------------------+--------------+----------------------------------------------------------------------------+\n| Default                 | ``object``   | The default value of the parameter (``None`` if it doesn't have)           |\n+-------------------------+--------------+----------------------------------------------------------------------------+\n| HasDefault / Optional   | ``bool``     | True if the parameter has a default value, false if it doesn't             |\n+-------------------------+--------------+----------------------------------------------------------------------------+\n\nFunctions\n---------\n\nGetField\n~~~~~~~~\n\nGets a specified field of the type\n\nReturns: ``FieldInfo`` if the field is present or ``forceEmpty`` is\ntrue, otherwise ``None``\n\n+--------------+------------+--------------------------------+-----------------+\n| Parameter    | Type       | Description                    | Default value   |\n+==============+============+================================+=================+\n| name         | ``str``    | The name of the field to get   | -               |\n+--------------+------------+--------------------------------+-----------------+\n| forceEmpty   | ``bool``   | See description below          | False           |\n+--------------+------------+--------------------------------+-----------------+\n\n**forceEmpty**\n\nPython doesn't store the private fields (``self.var``) before the\nclass gets initialized.\n\nIf ``forceEmpty`` is false, using ``type.GetField(str)`` on a private\nfiled will return ``None``.\nBut if it's true, it will still return a ``FieldInfo`` based on the\nname, but when you try to get the value of it and the field doesn't\nexist in the given class, it will raise an ``ArgumentError``.\n\nYou can alternatively use ``GetField(class, str)`` to with a\npre-initialized class to get the private field.\n\nGetFields\n~~~~~~~~~\n\nGets all the fields of the type.\n\nReturns: List of ``FieldInfo``\n\nThis function has no parameters.\n\nAgain, this only returns static variables of the specified type. If you\nwant to get all the private ones too, use ``GetFields(class)`` with a\npre-initialized class\n\nGetMethod\n~~~~~~~~~\n\nGets the specified method of the type\n\nReturns: ``MethodInfo`` if the method is present, otherwise ``None``\n\n+-------------+--------+---------------------------------+-----------------+\n| Parameter   | Type   | Description                     | Default value   |\n+=============+========+=================================+=================+\n| name        | str    | The name of the method to get   | -               |\n+-------------+--------+---------------------------------+-----------------+\n\nGetMethods\n~~~~~~~~~~\n\nGets all the methods of the type-\n\nReturns: List of ``MethodInfo``\n\nThis function has no parameters.\n\nExamples\n--------\n\n**Getting a static field's value**\n\nExample 1.\n\n.. code-block:: python\n\n    from ReflectionHelper import *\n\n    class Ex:\n        f = 0\n\n    Field = Ex.GetField(\"f\")\n    print(Field.GetValue(None))\n    #Output: 0\n\nExample 2.\n\n.. code-block:: python\n\n    from ReflectionHelper import *\n\n    class Ex:\n        f = 0\n\n    Inst = Ex()\n    Field = type(Inst).GetField(\"f\")\n    print(Field.GetValue(None))\n    #Output: 0\n\n**Getting a private field's value**\n\nExample 1.\n\n.. code-block:: python\n\n    from ReflectionHelper import *\n\n    class Ex:\n        def __init__(self, val):\n            self.f = val\n\n    Field = Ex.GetField(\"f\", True)\n    Inst = Ex(\"Yay\")\n    print(Field.GetValue(Inst))\n    #Output: Yay\n\nExample 2.\n\n.. code-block:: python\n\n    from ReflectionHelper import *\n\n    class Ex:\n        def __init__(self, val):\n            self.f = val\n\n    Inst = Ex(\"Yay\")\n    Field = GetField(Inst, \"f\")\n    print(Field.GetValue(Inst))\n    #Output: Yay\n\n**Multiple instances**\n\n.. code-block:: python\n\n    from ReflectionHelper import *\n\n    class Ex:\n        def __init__(self, val):\n            self.f = val\n        \n    Inst1 = Ex(\"First\")\n    Inst2 = Ex(\"Second\")\n    Field = Ex.GetField(\"f\", True)\n    print(Field.GetValue(Inst1), Field.GetValue(Inst2))\n    #Output: First Second\n\n**Setting a field's value**\n\n.. code-block:: python\n\n    from ReflectionHelper import *\n\n    class Ex:\n        def __init__(self, val):\n            self.f = val\n            \n    Inst = Ex(\"Before\")\n    Field = Ex.GetField(\"f\", True)\n    print(Field.GetValue(Inst))\n    Field.SetValue(Inst, \"After\")\n    print(Field.GetValue(Inst))\n    #Output:\n    #Before\n    #After\n\n**Invoking method**\n\n.. code-block:: python\n\n    from ReflectionHelper import *\n\n    class Ex:\n        def M(p1, p2):\n            print(f\"First parameter: {p1}; Second parameter: {p2}\")\n            \n    Method = Ex.GetMethod(\"M\")\n    Method.Invoke(None, [\"H\", \"I\"])\n    #Output: First parameter: H; Second parameter: I\n\n**Invoking async method**\n\n.. code-block:: python\n\n    from ReflectionHelper import *\n    import asyncio\n\n    class Ex:\n        def __init__(self, seconds):\n            self.s = seconds\n        \n        async def M(self, returnVal):\n            await asyncio.sleep(self.s)\n            return returnVal\n            \n    Method = Ex.GetMethod(\"M\")\n    Inst = Ex(5)\n    print(asyncio.run(Method.InvokeAsync(Inst, [\"Returned\"])))\n    #Output after waiting 5 seconds: Returned\n\n**Get parameters of method**\n\n.. code-block:: python\n\n    from ReflectionHelper import *\n\n    class Ex:\n        def M(p1: int, p2: bool, p3, p4 = \"Def\") -> list:\n            return [p1, p2, p3, p4]\n            \n    Parameters = Ex.GetMethod(\"M\").GetParameters()\n    for parameter in Parameters:\n        print(f'Parameter data: name is {parameter.Name}, type is {parameter.ParameterType}, position in method is {parameter.Position}, default value is {parameter.Default}')\n        \n    #Output\n    #Parameter data: name is p1, type is <class 'int'>, position in method is 0, default value is None\n    #Parameter data: name is p2, type is <class 'bool'>, position in method is 1, default value is None\n    #Parameter data: name is p3, type is None, position in method is 2, default value is None\n    #Parameter data: name is p4, type is None, position in method is 3, default value is Def",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "https://github.com/Qkrisi/ReflectionHelper/archive/v_1_0_4.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Qkrisi/ReflectionHelper",
    "keywords": "Reflection,Helper",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ReflectionHelper",
    "package_url": "https://pypi.org/project/ReflectionHelper/",
    "platform": "",
    "project_url": "https://pypi.org/project/ReflectionHelper/",
    "project_urls": {
      "Download": "https://github.com/Qkrisi/ReflectionHelper/archive/v_1_0_4.tar.gz",
      "Homepage": "https://github.com/Qkrisi/ReflectionHelper"
    },
    "release_url": "https://pypi.org/project/ReflectionHelper/1.0.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A reflection module based on the C# System.Reflection library",
    "version": "1.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7031092,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "90d7c8ba1da760c9a3d75306d858a13f75a95cf5cc2568ac48820be7fcb679fa",
          "md5": "e94e3c29142a7190ec869f42d6ea078f",
          "sha256": "6007a08302329c0ac2e0796b50afc66b77617d46b2e93433105accdc89a1b263"
        },
        "downloads": -1,
        "filename": "ReflectionHelper-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e94e3c29142a7190ec869f42d6ea078f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2207,
        "upload_time": "2020-04-16T09:48:00",
        "upload_time_iso_8601": "2020-04-16T09:48:00.595545Z",
        "url": "https://files.pythonhosted.org/packages/90/d7/c8ba1da760c9a3d75306d858a13f75a95cf5cc2568ac48820be7fcb679fa/ReflectionHelper-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "422ea6b6d3f546639be391501c524bb706b1b5a6ebd3bbd94b495d902ee55e48",
          "md5": "90b4f50c2377f0818b5b474fb5bd104a",
          "sha256": "a744a05f5511f20579046684a7fcd4e4ca2cb3f17dede13bbdfd99b57e807f00"
        },
        "downloads": -1,
        "filename": "ReflectionHelper-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "90b4f50c2377f0818b5b474fb5bd104a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4542,
        "upload_time": "2020-04-16T10:20:59",
        "upload_time_iso_8601": "2020-04-16T10:20:59.940649Z",
        "url": "https://files.pythonhosted.org/packages/42/2e/a6b6d3f546639be391501c524bb706b1b5a6ebd3bbd94b495d902ee55e48/ReflectionHelper-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "94ab8bc0f5bf79252ccf84dd8641fdc60442109bbbc066fa450baa2ac3178591",
          "md5": "2aac829b51f474dfacb8446e1ac63cf6",
          "sha256": "869f5e11f2659a75faf05a2c32a80bcbdd56bfcb0c8db8aecddd63618b9eb3d9"
        },
        "downloads": -1,
        "filename": "ReflectionHelper-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "2aac829b51f474dfacb8446e1ac63cf6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4543,
        "upload_time": "2020-04-16T10:24:35",
        "upload_time_iso_8601": "2020-04-16T10:24:35.423687Z",
        "url": "https://files.pythonhosted.org/packages/94/ab/8bc0f5bf79252ccf84dd8641fdc60442109bbbc066fa450baa2ac3178591/ReflectionHelper-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "94ab8bc0f5bf79252ccf84dd8641fdc60442109bbbc066fa450baa2ac3178591",
        "md5": "2aac829b51f474dfacb8446e1ac63cf6",
        "sha256": "869f5e11f2659a75faf05a2c32a80bcbdd56bfcb0c8db8aecddd63618b9eb3d9"
      },
      "downloads": -1,
      "filename": "ReflectionHelper-1.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "2aac829b51f474dfacb8446e1ac63cf6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4543,
      "upload_time": "2020-04-16T10:24:35",
      "upload_time_iso_8601": "2020-04-16T10:24:35.423687Z",
      "url": "https://files.pythonhosted.org/packages/94/ab/8bc0f5bf79252ccf84dd8641fdc60442109bbbc066fa450baa2ac3178591/ReflectionHelper-1.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}