{
  "info": {
    "author": "Seongbin Choi",
    "author_email": "dcas@naver.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: Microsoft :: Windows",
      "Programming Language :: Python :: 3"
    ],
    "description": "# AuxeticMOP-with-ABAQUS `1.0.2`\r\n\r\n## Purpose\r\n- Finding metamaterial structure with negative poisson's ratio using ABAQUS and MOP evolutionary algorithm approaches.\r\n- In addition to structure with negative poisson's ratio, other types of material structure can be created by varying version fitness values definitions.\r\n- The definition of fitness value for negative Poisson's ratio is well defined in `auxeticmop.ParameterDefinitions.fitness_definitions['ver3']`.\r\n\r\n\r\n## Features\r\n- The script `full_scripts.py` or `auxeticmop.sample_scripts.full_steps.run()` generates 1/8 structure of unit cell using ABAQUS CAE software by genetic algorithm.\r\nThis script is especially for finding mechanical meta-material structure consisting of 3D voxels.\r\n- GUI is provided for getting initial parameters for ABAQUS, and plotting results when a generation work is done.\r\n  + Related contents: `auxeticmop.GraphicUserInterface`\r\n\r\n- Python script running on ABAQUS is located in `auxeticmop.AbaqusScripts`. This will run only on ABAQUS-embedded python\r\ninterpreter, and maybe the version is `2.7.15`. Other scripts are running on newer Python.\r\n\r\n- Non-dominated Sorting Genetic Algorithm(NSGA) is used to validate and assess fitness values of generated topologies.\r\n  + Related contents: `auxeticmop.GeneticAlgorithm`, `auxeticmop.MutateAndValidate`\r\n\r\n## Example\r\n\r\n\r\n- ### Auxetic cell\r\n<p align=\"center\">\r\n  <img src=\"https://user-images.githubusercontent.com/121936784/215425185-a7d62330-8bec-4650-9079-637cc1dd8575.png\"/>\r\n</p>\r\n\r\n>- 10 by 10 by 10 voxels per 1/8 cell.\r\n>- Negative negative poisson's ratio structure\r\n\r\n- ### GUI example\r\n\r\n<p align=\"center\">\r\n  <img src=\"https://user-images.githubusercontent.com/121936784/215425207-44187735-cea7-4486-a2b9-bf4683797a53.png\"/>\r\n</p>\r\n\r\n>- Building a GUI using `tkinter` and `matplotlib`\r\n>- Receiving parameter values required for ABAQUS analysis and GA setting from the user\r\n>- The Pareto optimization solution and hyper volume value calculated from the Main Process\r\nare input in real time and output as a graph.\r\n\r\n## Install\r\nBefore installing this package, you must [ABAQUS CAE](https://edu.3ds.com/en/software/abaqus-learning-edition) must be installed.\r\n\r\n To install the current release via `PyPI` with Python version `>=3.6` and `<3.11`:\r\n```shell\r\n$ pip install auxeticmop\r\n```\r\n... or to install the current release via `anaconda` with Python version `>=3.6` and `<3.11`:\r\n\r\n```shell\r\n$ conda install -c cosogi auxeticmop\r\n```\r\n\r\n#### *Try out whole GA steps*\r\n\r\n```shell\r\n$ python\r\n```\r\n\r\n```python\r\n>>> from auxeticmop.sample_scripts import full_steps\r\n>>> if __name__ == '__main__':\r\n  ...   full_steps.run()\r\n```\r\n#### *Modify your parameter definitions*\r\n```python\r\n>>> from auxeticmop import ParameterDefinitions\r\n>>> dir(ParameterDefinitions)\r\nOutput: ['FitnessDefinitions', 'GuiParameters', 'JsonFormat', 'Parameters', 'Union', '__builtins__',\r\n         '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__',\r\n         'dataclass', 'exported_field_outputs_format', 'fitness_definitions', 'material_property_definitions',\r\n         'np', 'radiobutton_name_dict', 'translate_dictionary']\r\n```\r\n- Go to `auxeticmop.ParameterDefinitions` and use editor to directly customize parameters.\r\n- If using VS code, press `F12`, if using Pycharm, press `Ctrl+B` to go to file.\r\n\r\n## Overall Steps of GA\r\n> All Steps are included in `auxeticmop.GeneticAlgorithm.NSGAModel.evolve_a_generation()`.\r\n>1. Generate offspring topologies from parent topologies.\r\n>   - Related contents: `auxeticmop.GeneticAlgorithm.NSGAModel.generate_offspring_topologies()`\r\n>2. Analyze displacements, reaction forces, or other mechanical properties of offspring topologies using ABAQUS CAE.\r\n>   - Related contents: `auxeticmop.Network.start_abaqus_cae()`, `auxeticmop.Network.request_abaqus()`, `auxeticmop.AbaqusScripts`\r\n>3. Evaluate fitness values of parents and offsprings.\r\n>   - Related contents: `auxeticmop.PostProcessing.evaluate_all_fitness_values()`\r\n>4. Select desired topologies which fits pareto-front(non-dominated) points and export these as next parent.\r\n>   - Related contents: `auxeticmop.PostProcessing.selection()`\r\n>5. Redo steps 1~4 for next generations. Iterations of all generations are done in `auxeticmop.GeneticAlgorithm.NSGAModel.evolve()`.\r\n\r\n## Conditions to Meet in Validation Steps\r\n- 3D print-ability without supports, maximum overhang distance is also considered.\r\n  + Related contents: `auxeticmop.MutateAndValidate.make_3d_print_without_support`\r\n- Allowing only Face-to-Face contact between voxels.\r\n  + Related contents: `auxeticmop.MutateAndValidate.make_voxels_surface_contact`\r\n- All six faces of structure are connected as one tree, thereby not allowing force-free structure inside an unit cell.\r\n  + Related contents: `auxeticmop.MutateAndValidate.one_connected_tree`\r\n## Fitness Value Definitions\r\n- Those two fitness values(objective functions) should go lower.\r\n- The fitness value definitions are well organized in `auxeticmop.ParameterDefinitions.fitness_definitions`.\r\n- You can choose the version of fitness value evaluation in GUI.\r\n\r\n| Evaluation<br/>version | Fitness<br/> value 1                                 | Fitness<br/> value 2                  |\r\n|------------------------|------------------------------------------------------|---------------------------------------|\r\n| ver1                   | RF<sub>22</sub>/RF<sub>22,max</sub> + `k`*`vol_frac` | ν <sub>21</sub> + `k` * `vol_frac`    |\r\n| ver2                   | `vol_frac`                                           | RF<sub>22</sub>/RF<sub>22,max</sub>   |\r\n| ver3                   | ν <sub>21</sub> + `k` * `vol_frac`                   | ν <sub>23</sub> +`k` * `vol_frac`     |\r\n| ver4                   | (σ<sub>mises</sub>)<sub>max</sub>                    | `vol_frac`                            |\r\n| ver5                   | (σ<sub>mises</sub>)<sub>max</sub>                    | max(ν <sub>21</sub>, ν <sub>23</sub>) |\r\n>- `vol_frac`: Volume fraction in cell (0~1)\r\n>- `k`: penalty coefficient\r\n>- `k`: penalty coefficient\r\n\r\n---\r\n## Required\r\n- [x] **[Language]** Python, with version `>=3.6 and <3.11`.\r\n- Version dependency\r\n  - `numba` for Python `3.11` is not supported yet.\r\n  - `dataclass` is not supported under Python `3.6`\r\n- [x] **[External libraries]** `numpy`, `numba`, `scipy`, `matplotlib`, `aiofiles`, `dataclasses`\r\n- [x] **[Other software]** `ABAQUS CAE`\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/c0sogi/AuxeticMOP-with-ABAQUS",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "auxeticmop",
    "package_url": "https://pypi.org/project/auxeticmop/",
    "platform": null,
    "project_url": "https://pypi.org/project/auxeticmop/",
    "project_urls": {
      "Homepage": "https://github.com/c0sogi/AuxeticMOP-with-ABAQUS"
    },
    "release_url": "https://pypi.org/project/auxeticmop/1.0.2/",
    "requires_dist": [
      "numpy",
      "numba",
      "aiofiles",
      "matplotlib",
      "scipy",
      "dataclasses"
    ],
    "requires_python": ">=3.6,<3.11",
    "summary": "A package for finding meta-material structure using ABAQUS and MOP evolutionary algorithm approaches.",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16617498,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6e3d3236726466d01aa0b87175652a1520253c90292af58a621cf45448f1e48c",
          "md5": "53f34af40492a86bccbef428943ea1f0",
          "sha256": "a08b903af6e7c8f8cda24f4aeea8a472dcbddff5497d54ccbd570298fb5c328b"
        },
        "downloads": -1,
        "filename": "auxeticmop-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "53f34af40492a86bccbef428943ea1f0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<3.11",
        "size": 44153,
        "upload_time": "2023-01-28T08:25:33",
        "upload_time_iso_8601": "2023-01-28T08:25:33.990486Z",
        "url": "https://files.pythonhosted.org/packages/6e/3d/3236726466d01aa0b87175652a1520253c90292af58a621cf45448f1e48c/auxeticmop-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c4a7420a9c7e1db120d3615087ce955fd04a57339da119c64b4778082efc4a8",
          "md5": "a79be822115ad0bde69563c8cb458393",
          "sha256": "b83f1ab6ab311131f7c31699de59f3bff484c49b9dc9186ced0d03a2a97e08b4"
        },
        "downloads": -1,
        "filename": "auxeticmop-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a79be822115ad0bde69563c8cb458393",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<3.11",
        "size": 40861,
        "upload_time": "2023-01-28T08:25:36",
        "upload_time_iso_8601": "2023-01-28T08:25:36.190843Z",
        "url": "https://files.pythonhosted.org/packages/8c/4a/7420a9c7e1db120d3615087ce955fd04a57339da119c64b4778082efc4a8/auxeticmop-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f77355d98cafea4c6d2404f8da21fb7a085ade75df9744d7e74ab47747cd3bcf",
          "md5": "756be43bea116724f3f20f3ce93239a4",
          "sha256": "a8579fbe4be89e58358812292181b376f19cda17a0052c0594dd1ec3e68b6156"
        },
        "downloads": -1,
        "filename": "auxeticmop-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "756be43bea116724f3f20f3ce93239a4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<3.11",
        "size": 45146,
        "upload_time": "2023-01-30T10:31:36",
        "upload_time_iso_8601": "2023-01-30T10:31:36.459464Z",
        "url": "https://files.pythonhosted.org/packages/f7/73/55d98cafea4c6d2404f8da21fb7a085ade75df9744d7e74ab47747cd3bcf/auxeticmop-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eab3ca7d1c8d924da2c63489680d4f1af77d9a1a95fc4122c8e779ff18067799",
          "md5": "2a766662673a0fe8e61dfccf0a0f1924",
          "sha256": "f4822547d868848682d443b882841732d5d69093835dcc9fe2dd9b03923f617d"
        },
        "downloads": -1,
        "filename": "auxeticmop-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2a766662673a0fe8e61dfccf0a0f1924",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<3.11",
        "size": 42706,
        "upload_time": "2023-01-30T10:31:38",
        "upload_time_iso_8601": "2023-01-30T10:31:38.123205Z",
        "url": "https://files.pythonhosted.org/packages/ea/b3/ca7d1c8d924da2c63489680d4f1af77d9a1a95fc4122c8e779ff18067799/auxeticmop-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f77355d98cafea4c6d2404f8da21fb7a085ade75df9744d7e74ab47747cd3bcf",
        "md5": "756be43bea116724f3f20f3ce93239a4",
        "sha256": "a8579fbe4be89e58358812292181b376f19cda17a0052c0594dd1ec3e68b6156"
      },
      "downloads": -1,
      "filename": "auxeticmop-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "756be43bea116724f3f20f3ce93239a4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6,<3.11",
      "size": 45146,
      "upload_time": "2023-01-30T10:31:36",
      "upload_time_iso_8601": "2023-01-30T10:31:36.459464Z",
      "url": "https://files.pythonhosted.org/packages/f7/73/55d98cafea4c6d2404f8da21fb7a085ade75df9744d7e74ab47747cd3bcf/auxeticmop-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "eab3ca7d1c8d924da2c63489680d4f1af77d9a1a95fc4122c8e779ff18067799",
        "md5": "2a766662673a0fe8e61dfccf0a0f1924",
        "sha256": "f4822547d868848682d443b882841732d5d69093835dcc9fe2dd9b03923f617d"
      },
      "downloads": -1,
      "filename": "auxeticmop-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "2a766662673a0fe8e61dfccf0a0f1924",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6,<3.11",
      "size": 42706,
      "upload_time": "2023-01-30T10:31:38",
      "upload_time_iso_8601": "2023-01-30T10:31:38.123205Z",
      "url": "https://files.pythonhosted.org/packages/ea/b3/ca7d1c8d924da2c63489680d4f1af77d9a1a95fc4122c8e779ff18067799/auxeticmop-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}