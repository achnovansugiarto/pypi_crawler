{
  "info": {
    "author": "epi2melabs",
    "author_email": "epi2melabs@nanoporetech.com",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Jupyter",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "\n# igv-jupyterlab\n\n[![Build Status](https://travis-ci.org/epi2me-labs/igv-jupyterlab.svg?branch=master)](https://travis-ci.org/epi2me-labs/igv_jupyterlab)\n[![codecov](https://codecov.io/gh/epi2me-labs/igv-jupyterlab/branch/master/graph/badge.svg)](https://codecov.io/gh/epi2me-labs/igv-jupyterlab)\n\n\nigv-jupyterlab is an extension for Jupyter Lab and traditional Jupyter Notebooks which wraps igv.js.\n\n## Installation\n\nYou can install using `pip`:\n\n```bash\npip install igv_jupyterlab\n```\n\nIf you are using Jupyter Notebook 5.2 or earlier, you may also need to enable\nthe nbextension:\n```bash\njupyter nbextension enable --py [--sys-prefix|--user|--system] igv_jupyterlab\n```\n\n## Usage\n\nThis extension provides a python wrapper which allows you render igv.js \nin a cell and call its API from the notebook.\n\n### Initialization\n\nTo insert an IGV instance into a cell: \n\n```python\nfrom igv_jupyterlab import IGV\n\n# At minimum, IGV requires a single argument, genome.\n\n# For supported genomes, a simple name may be supplied.\nIGV(genome=\"hg19\")\n\n# For all other genomes, we must construct a configuration object.\n# A helper method supplied to make this easier.\ngenome = IGV.create_genome(\n    name=\"Human (GRCh38/hg38)\",\n    fasta_url=\"https://s3.amazonaws.com/igv.broadinstitute.org/genomes/seq/hg38/hg38.fa\",\n    index_url=\"https://s3.amazonaws.com/igv.broadinstitute.org/genomes/seq/hg38/hg38.fa.fai\",\n    cytoband_url=\"https://s3.amazonaws.com/igv.broadinstitute.org/annotations/hg38/cytoBandIdeo.txt\",\n)\n\nigv = IGV(genome=genome)\n\ndisplay(igv)\n```\n\nSupported genomes are [listed here](https://s3.amazonaws.com/igv.org.genomes/genomes.json).\nReference configuration is described in the [igv.js documentation](https://github.com/igvteam/igv.js/wiki/Reference-Genome).\n\n```python\n# It is also easy to change the genome to something else\nsome_other_genome = igv.create_genome(...)\n\nigv.load_genome(some_other_genome)\n```\n\n### Tracks\n\nTo load a track pass a track configuration object to load_track().  Track configuration\nobjects are described in the [igv.js documentation](https://github.com/igvteam/igv.js/wiki/Tracks-2.0).\n\n#### Remote URL\n\n```python\ntrack = IGV.create_track(\n    name=\"Segmented CN\",\n    url=\"https://data.broadinstitute.org/igvdata/test/igv-web/segmented_data_080520.seg.gz\",\n    format=\"seg\",\n    indexed=False\n)\n\nigv.load_track(track)\n```\n\n#### Local File\n\nTracks can be loaded from local files using the Jupyter web server by prepending \"tree\" to the path.\n\n```python\ntrack = IGV.create_track(\n    name=\"Local VCF\",\n    url=\"/tree/absolute/path/to/example.vcf\",\n    format=\"vcf\",\n    type=\"variant\",\n    indexed=False\n)\n\nigv.load_track(track)\n```\n\n#### Remove a track\n\n```python\n\n# It is easy to remove a track by name\nigv.remove_track(\"HG00103\")\n```\n\n### Navigation\n\nZoom in by a factor of 2\n\n```python\nigv.zoom_in()\n```\n\nZoom out by a factor of 2\n\n```python\nigv.zoom_out()\n```\n\nJump to a specific locus\n\n```python\nigv.locus = 'chr1:3000-4000'\n\n# A helper method is available to avoid having to perform string formatting\nigv.search_locus('chr1', 3000, 4000)\n```\n\nJump to a specific gene. This uses the IGV search web service, which currently supports a limited number of genomes:  hg38, hg19, and mm10.\nTo configure a custom search service see the [igv.js documentation](https://github.com/igvteam/igv.js/wiki/Browser-Configuration-2.0#search-object-details)\n\n```python\nigv.locus = 'myc'\n```\n\n### SVG output\n\nDisplaying the current IGV view as an SVG is simple - and only requires one call now!  \n\n```python\nigv.get_svg()\n```\n\n\n## Development Installation\n\nCreate a dev environment:\n```bash\nconda create -n igv_jupyterlab-dev -c conda-forge nodejs yarn python jupyterlab\nconda activate igv_jupyterlab-dev\n```\n\nInstall the python. This will also build the TS package.\n```bash\npip install -e \".[test, examples]\"\n```\n\nWhen developing your extensions, you need to manually enable your extensions with the\nnotebook / lab frontend. For lab, this is done by the command:\n\n```\njupyter labextension develop --overwrite .\nyarn run build\n```\n\nFor classic notebook, you need to run:\n\n```\njupyter nbextension install --sys-prefix --symlink --overwrite --py igv_jupyterlab\njupyter nbextension enable --sys-prefix --py igv_jupyterlab\n```\n\nNote that the `--symlink` flag doesn't work on Windows, so you will here have to run\nthe `install` command every time that you rebuild your extension. For certain installations\nyou might also need another flag instead of `--sys-prefix`, but we won't cover the meaning\nof those flags here.\n\n### How to see your changes\n#### Typescript:\nIf you use JupyterLab to develop then you can watch the source directory and run JupyterLab at the same time in different\nterminals to watch for changes in the extension's source and automatically rebuild the widget.\n\n```bash\n# Watch the source directory in one terminal, automatically rebuilding when needed\nyarn run watch\n# Run JupyterLab in another terminal\njupyter lab\n```\n\nAfter a change wait for the build to finish and then refresh your browser and the changes should take effect.\n\n#### Python:\nIf you make a change to the python code then you will need to restart the notebook kernel to have it take effect.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/epi2me-labs/igv-jupyterlab",
    "keywords": "Jupyter,Widgets,IPython",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "igv-jupyterlab",
    "package_url": "https://pypi.org/project/igv-jupyterlab/",
    "platform": "Linux",
    "project_url": "https://pypi.org/project/igv-jupyterlab/",
    "project_urls": {
      "Homepage": "https://github.com/epi2me-labs/igv-jupyterlab"
    },
    "release_url": "https://pypi.org/project/igv-jupyterlab/1.0.1/",
    "requires_dist": [
      "ipywidgets (>=7.0.0)",
      "typing-extensions",
      "jupyter-sphinx ; extra == 'docs'",
      "nbsphinx ; extra == 'docs'",
      "nbsphinx-link ; extra == 'docs'",
      "pytest-check-links ; extra == 'docs'",
      "pypandoc ; extra == 'docs'",
      "recommonmark ; extra == 'docs'",
      "sphinx (>=1.5) ; extra == 'docs'",
      "sphinx-rtd-theme ; extra == 'docs'",
      "pytest (>=4.6) ; extra == 'test'",
      "pytest-cov ; extra == 'test'",
      "nbval ; extra == 'test'"
    ],
    "requires_python": ">=3.8",
    "summary": "igv-jupyterlab is an extension for Jupyter Lab and traditional Jupyter Notebooks which wraps igv.js.",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10344782,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d6bcbd1e9570dca0e669c984d8c2de0afe8c89f84cfdeb114a005c997d1236b2",
          "md5": "9a4692f3ad48b484a832b8635f75b98a",
          "sha256": "34356d877077101539f4a957dd3b88b62edaa450d833c335b68e9cbd6f9d8468"
        },
        "downloads": -1,
        "filename": "igv_jupyterlab-1.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9a4692f3ad48b484a832b8635f75b98a",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.8",
        "size": 2969742,
        "upload_time": "2021-05-13T13:06:26",
        "upload_time_iso_8601": "2021-05-13T13:06:26.186009Z",
        "url": "https://files.pythonhosted.org/packages/d6/bc/bd1e9570dca0e669c984d8c2de0afe8c89f84cfdeb114a005c997d1236b2/igv_jupyterlab-1.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "34e0011e1ff5babc132042df3a9c59e52f49373be584fd4398adfec7652f6240",
          "md5": "6110e8c7dfc872aa1163672a349db2a3",
          "sha256": "71d31f812239494b90d25e7f5f203affd021370ff1b57310fbd39a950d7fc064"
        },
        "downloads": -1,
        "filename": "igv_jupyterlab-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6110e8c7dfc872aa1163672a349db2a3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 2643000,
        "upload_time": "2021-05-13T13:06:29",
        "upload_time_iso_8601": "2021-05-13T13:06:29.033347Z",
        "url": "https://files.pythonhosted.org/packages/34/e0/011e1ff5babc132042df3a9c59e52f49373be584fd4398adfec7652f6240/igv_jupyterlab-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d6bcbd1e9570dca0e669c984d8c2de0afe8c89f84cfdeb114a005c997d1236b2",
        "md5": "9a4692f3ad48b484a832b8635f75b98a",
        "sha256": "34356d877077101539f4a957dd3b88b62edaa450d833c335b68e9cbd6f9d8468"
      },
      "downloads": -1,
      "filename": "igv_jupyterlab-1.0.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9a4692f3ad48b484a832b8635f75b98a",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.8",
      "size": 2969742,
      "upload_time": "2021-05-13T13:06:26",
      "upload_time_iso_8601": "2021-05-13T13:06:26.186009Z",
      "url": "https://files.pythonhosted.org/packages/d6/bc/bd1e9570dca0e669c984d8c2de0afe8c89f84cfdeb114a005c997d1236b2/igv_jupyterlab-1.0.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "34e0011e1ff5babc132042df3a9c59e52f49373be584fd4398adfec7652f6240",
        "md5": "6110e8c7dfc872aa1163672a349db2a3",
        "sha256": "71d31f812239494b90d25e7f5f203affd021370ff1b57310fbd39a950d7fc064"
      },
      "downloads": -1,
      "filename": "igv_jupyterlab-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "6110e8c7dfc872aa1163672a349db2a3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 2643000,
      "upload_time": "2021-05-13T13:06:29",
      "upload_time_iso_8601": "2021-05-13T13:06:29.033347Z",
      "url": "https://files.pythonhosted.org/packages/34/e0/011e1ff5babc132042df3a9c59e52f49373be584fd4398adfec7652f6240/igv_jupyterlab-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}