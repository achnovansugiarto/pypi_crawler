{
  "info": {
    "author": "He xi",
    "author_email": "xmhexi@qq.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Code Generators"
    ],
    "description": "# BERT预训练模型字向量提取工具\n\n\nBERT预训练模型字向量提取工具\n\n版本： v 0.3.7\n\n更新:  2020/4/20 16:39\n\n## 升级日志 \nv0.3.7\n+ 把测试程序加入到包中，可直接在命令行中使用 `BERTVector_test` 运行测试程序；\n\nv0.3.6\n+ 发布到pypi中，可直接在命令行使用；\n\nv0.3.3\n+ 增加了测试的样本及使用示例：短句相似度，词向量分布图等；\n\nv0.3.2\n+ 同时兼容txt,pkl两种格式输出；\n\nv0.3 \n+ 使用pkl格式保存输出文件；\n- 去掉了txt的格式输出；\n+ 参数`--in_file`可指定文件或者目录，自动识别处理；\n\nv0.2\n+ 可对单个数据文件进行处理；\n\n\n\n## 工具说明\n本工具直接读取BERT预训练模型，从中提取样本文件中所有使用到字向量，保存成向量文件，为后续模型提供字向量。\n\n本工具直接读取预训练模型，不需要其它的依赖，同时把样本中所有出现的字符对应的字向量全部提取，\n后续的模型可以非常快速进行索引，生成自己的句向量，不再需要庞大的预训练模型或者bert-as-service服务了。\n\n安装：\n\n```\npip install BERTVector\n```\n\n使用：\n\n```\nBERTVector -h\n```\n\n测试：\n\n```\nBERTVector_test\n```\n\n\n## 输出文件格式 \n\n支持txt和pkl两种文件格式，可自由选择，默认为pkl格式。 (>v0.3.2版本)\n\ntxt格式为：\n\n一行一个字符向量,中间使用空格分隔； \n\n格式为：字符 768大小向量 \n\n例如： \n\n```\n! 0.06241071 -0.012108288 0.035899848....\n```\n\n文件格式为pkl，数据格式为dic字典格式，更方便使用。(v0.3版本)\n\nkey: 字符\n\nvalue: 对应的向量,768大小\n\n\n## 参数说明\n\n参数说明：\n\n```\n--model_path    BERT预训练模型存放的目录，必填；\n\n--in_file       待提取的样本文件名或者目录名，必填；\n\n--out_file      提取后保存的向量文件,可选项，默认为'./bert_embedding.pkl'\n\n--ext           当指定为目录时，可选项，要处理的文件后缀，默认为['csv','txt']\n\n--fmt           指定输出文件的格式，可设置为'txt'或者'pkl', 默认为pkl\n```\n\n\n## 调用示例\n\n命令行示例：\n\n示例一：\n\n处理单个文件`./data/train_interger.csv`，保存到`./data/need_bertembedding.pkl`\n\n```bash\nBERTVector \\\n    --model_path=/mnt/sda1/models/chinese_L-12_H-768_A-12/ \\\n    --in_file=./data/train_interger.csv \\\n    --out_file=./data/need_bertembedding.pkl\n\n```\n\n示例二：\n\n处理目录下的所有tsv,txt文件,默认保存为:./need_bertembedding.pkl\n\n```bash\nBERTVector \\\n    --model_path=/mnt/sda1/models/chinese_L-12_H-768_A-12/ \\\n    --in_file=./data/ \\\n    --ext tsv txt\n```\n\n示例三：\n处理文件:`dat.csv`,保存为txt格式，输出文件名为:./need_bertembedding\n```bash\nBERTVector \\\n    --model_path=/mnt/sda1/models/chinese_L-12_H-768_A-12/ \\\n    --in_file=./dat.csv \\\n    --out_file=./need_bertembedding \\\n    --fmt=txt\n```\n\n## 测试数据及示例\n\n直接运行以下命令即可运行测试程序：\n\n```\nBERTVector_test\n```\n\n示例文件跟随项目安装在python的目录下： `\\Lib\\site-packages\\BERTVector\\test` \n\n可使用以下命令生成测试的向量字典：\n```\nBERTVector --model_path=d:\\\\model\\chinese_L-12_H-768_A-12 --in_file=test/test.txt --out_file=test/test.pkl\n```\n其中`d:\\\\model\\chinese_L-12_H-768_A-12`是BERT预训练模型的目录\n\n\n生成的字向量字典可以方便地为文本进行编码。\n示例文件及数据在test目录下,可运行以下命令查看\n\n```\ncd test\npython BERTVector_test.py\n```\n\n运行结果：\n\n![运行截图](https://github.com/xmxoxo/BERT-Vector/blob/master/images/test.png)\n\n代码输出如下：\n\n```\n17:35:27.08|X:>load_vector.py\n-----------------字向量加载------------------\n字典大小：221\n向量维度:768\n\n字典首个元素：\n字符:(\n向量(仅输出前20维):\n[-0.0701572  -0.02538603  0.01186333  0.03037252 -0.01405589  0.04111631\n -0.00601521  0.08385976 -0.06300574  0.06307469 -0.08003023  0.01581223\n -0.0285087  -0.04477277  0.0110429   0.05696263  0.00558841  0.05059543\n  0.01589187  0.01623219]\n-----------------句向量示例------------------\n待编码句子：\n今日数据趣谈：阿杜比肩魔术师 热火中锋另类纪录新浪体育讯北京时间4月28日\n\n本示例中简单把各字的向量相加作为句向量...\n句向量(仅输出前20维):\n[-0.31147036 -0.04251522  0.16138141 -0.39930761 -1.07815197  0.06680285\n -0.1597157  -0.37606054 -0.42281876  0.34424412 -0.05901627  0.34751215\n -1.04583078 -0.50036957 -0.17383758  0.54849081  0.13344521 -0.02983405\n  0.10145024  0.55525893]\n```\n\n\n## 补充使用示例 v0.3.3\n\n生成了句向量，计算句子之间的相似度；\n```\n----------------余弦相似度计算-----------------\n[基金投资的热度近期有所回升] 与 [新浪体育纪录另类热火中锋] 的相似度: 0.4444\n[基金投资的热度近期有所回升] 与 [基金投资的热度近期有所回升] 的相似度: 1.0000\n[基金投资的热度近期有所回升] 与 [封闭式基金折价率近期有所上涨] 的相似度: 0.7164\n[基金投资的热度近期有所回升] 与 [今日数据趣谈：阿杜比肩魔术师 热火中锋另类纪录新浪体育讯北京时间4月28日] 的相似度: 0.510\n4\n[基金投资的热度近期有所回升] 与 [以下是今日比赛中诞生的一些有趣数据] 的相似度: 0.5744\n[基金投资的热度近期有所回升] 与 [最年轻纪录属于“魔术师”约翰逊，他1980年总决赛对阵76人得到42分，] 的相似度: 0.4471\n[基金投资的热度近期有所回升] 与 [首次有三人组合在季后赛做到这一点] 的相似度: 0.5647\n[基金投资的热度近期有所回升] 与 [安东尼此役打了38分59秒没有任何运动战出手] 的相似度: 0.4799\n[基金投资的热度近期有所回升] 与 [本周受权重股业绩超市场预期] 的相似度: 0.5688\n[基金投资的热度近期有所回升] 与 [券商研究机构在本周密集发布二季度的基金投资策略报告] 的相似度: 0.6885\n```\n\n生成词向量，将词向量显示到二维和三维分布图中展示；\n\n![运行截图](https://github.com/xmxoxo/BERT-Vector/blob/master/images/run_figure.png)\n\n\n![词语二维图](https://github.com/xmxoxo/BERT-Vector/blob/master/images/figure2d.png)\n![词语二维图-放大](https://github.com/xmxoxo/BERT-Vector/blob/master/images/Figure_1.png)\n\n![词语三维图](https://github.com/xmxoxo/BERT-Vector/blob/master/images/figure3d.png)\n\n\n请运行例子自行生成：\n\n注意：每次生成的图有可能不一样。\n\n\n## 应用案例\n\n使用BERT预训练模型的向量进行编码，可再搭建LSTM，textCNN等模型进行文本分类。\n\n[实际案例: BERT字向量+LSTM文本分类模型 ](https://github.com/mathCrazyy/text_classify)\nhttps://github.com/mathCrazyy/text_classify\n\n注:该案例使用参数`--fmt=txt`生成输出文件。\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/xmxoxo/BERT-Vector",
    "keywords": "BERT vector extraction tool",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "BERTVector",
    "package_url": "https://pypi.org/project/BERTVector/",
    "platform": "",
    "project_url": "https://pypi.org/project/BERTVector/",
    "project_urls": {
      "Blog": "https://blog.csdn.net/xmxoxo",
      "Homepage": "https://github.com/xmxoxo/BERT-Vector"
    },
    "release_url": "https://pypi.org/project/BERTVector/0.3.7/",
    "requires_dist": [
      "tensorflow (>=1.12.0)",
      "numpy (>=1.15.4)"
    ],
    "requires_python": "",
    "summary": "extract vector from BERT pre-train model",
    "version": "0.3.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7058527,
  "releases": {
    "0.3.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "528cae78add561372218a570bd31ffe95d6d674f2aeb4053b0ec462091fe6ad8",
          "md5": "0e74a1c87f5018fe548c3b62b1a321ee",
          "sha256": "09b633f6b095c6b4e221026b480be50aae376d8a8b92764105251b4fe87b33aa"
        },
        "downloads": -1,
        "filename": "BERTVector-0.3.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0e74a1c87f5018fe548c3b62b1a321ee",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 22976,
        "upload_time": "2020-04-20T06:57:18",
        "upload_time_iso_8601": "2020-04-20T06:57:18.350629Z",
        "url": "https://files.pythonhosted.org/packages/52/8c/ae78add561372218a570bd31ffe95d6d674f2aeb4053b0ec462091fe6ad8/BERTVector-0.3.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef56ae58f765cb32f2b0d328ecb8d9a97a36028fa49b206b23fe02acd0b558ce",
          "md5": "e4345fd3c71cefe023a2e760946cbc26",
          "sha256": "37bd352ec5d9f9e85d377ed8bd4d9adb505377f616667d8f6680b05ba7a68410"
        },
        "downloads": -1,
        "filename": "BERTVector-0.3.6.tar.gz",
        "has_sig": false,
        "md5_digest": "e4345fd3c71cefe023a2e760946cbc26",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9518,
        "upload_time": "2020-04-20T06:57:20",
        "upload_time_iso_8601": "2020-04-20T06:57:20.094526Z",
        "url": "https://files.pythonhosted.org/packages/ef/56/ae58f765cb32f2b0d328ecb8d9a97a36028fa49b206b23fe02acd0b558ce/BERTVector-0.3.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6dd9a073ad86bdb7faf05097526027741de9181f4b15c159b21827e8f92d2b8d",
          "md5": "db9a70a301ee97807f81bb46b11206f4",
          "sha256": "a73f06fb77a12041c6eb3429ba921fb67f45fc5135820403737f88e93887d743"
        },
        "downloads": -1,
        "filename": "BERTVector-0.3.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "db9a70a301ee97807f81bb46b11206f4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 1819237,
        "upload_time": "2020-04-20T08:48:00",
        "upload_time_iso_8601": "2020-04-20T08:48:00.109221Z",
        "url": "https://files.pythonhosted.org/packages/6d/d9/a073ad86bdb7faf05097526027741de9181f4b15c159b21827e8f92d2b8d/BERTVector-0.3.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "54f07dc77db3b382e1a60e47f9eb3f7ae7688b23de46896cfa22c9774adcf2a8",
          "md5": "2a4459de6d6f39ef77636b6fb93748a2",
          "sha256": "26e72fb9e5fd40aa6cb0381137d9dcf8bba05d55635aa84554c14a33038c37a6"
        },
        "downloads": -1,
        "filename": "BERTVector-0.3.7.tar.gz",
        "has_sig": false,
        "md5_digest": "2a4459de6d6f39ef77636b6fb93748a2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1805741,
        "upload_time": "2020-04-20T08:48:32",
        "upload_time_iso_8601": "2020-04-20T08:48:32.020517Z",
        "url": "https://files.pythonhosted.org/packages/54/f0/7dc77db3b382e1a60e47f9eb3f7ae7688b23de46896cfa22c9774adcf2a8/BERTVector-0.3.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6dd9a073ad86bdb7faf05097526027741de9181f4b15c159b21827e8f92d2b8d",
        "md5": "db9a70a301ee97807f81bb46b11206f4",
        "sha256": "a73f06fb77a12041c6eb3429ba921fb67f45fc5135820403737f88e93887d743"
      },
      "downloads": -1,
      "filename": "BERTVector-0.3.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "db9a70a301ee97807f81bb46b11206f4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 1819237,
      "upload_time": "2020-04-20T08:48:00",
      "upload_time_iso_8601": "2020-04-20T08:48:00.109221Z",
      "url": "https://files.pythonhosted.org/packages/6d/d9/a073ad86bdb7faf05097526027741de9181f4b15c159b21827e8f92d2b8d/BERTVector-0.3.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "54f07dc77db3b382e1a60e47f9eb3f7ae7688b23de46896cfa22c9774adcf2a8",
        "md5": "2a4459de6d6f39ef77636b6fb93748a2",
        "sha256": "26e72fb9e5fd40aa6cb0381137d9dcf8bba05d55635aa84554c14a33038c37a6"
      },
      "downloads": -1,
      "filename": "BERTVector-0.3.7.tar.gz",
      "has_sig": false,
      "md5_digest": "2a4459de6d6f39ef77636b6fb93748a2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 1805741,
      "upload_time": "2020-04-20T08:48:32",
      "upload_time_iso_8601": "2020-04-20T08:48:32.020517Z",
      "url": "https://files.pythonhosted.org/packages/54/f0/7dc77db3b382e1a60e47f9eb3f7ae7688b23de46896cfa22c9774adcf2a8/BERTVector-0.3.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}