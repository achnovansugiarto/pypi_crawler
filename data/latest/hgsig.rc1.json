{
  "info": {
    "author": null,
    "author_email": "Noam Teyssier <noam.teyssier@ucsf.edu>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License"
    ],
    "description": "# HGSig\n\nThis tool is used to measure the differential clustered representation of grouped objects.\nThe original motivation was in CRISPRi single-cell sequencing data and measuring the differential representation of individual knockdowns in each of the leiden clusters.\nThis was used to guide whether a knockdown had a significant representation from the non-targeting controls and so provide a hint at the potential function of that knockdown.\nThis tool is a means of generalizing the code to any sort of clusters and groups with references and provide an API for testing different differential representation strategies in a reproducible way.\n\n## Installation\n\n### pip\n\n```bash\npip install hgsig\n```\n\n### github\n\n```bash\ngit clone https://github.com/noamteyssier/hgsig\ncd hgsig\npip install .\npytest -v\n```\n\n## Usage: Differential Representation Testing\n\nThis tool is intended to be used as a python module.\n\n### Multiple References\n\n```python\nimport numpy as np\nfrom hgsig import HGSig\n\n# Number of observations\nsize = 10000\n\n# Number of Groups\nn_groups = 50\n\n# Number of Clusters\nn_clusters = 8\n\n# randomly assign clusters\nclusters = np.array([\n    f\"c{i}\" for i in np.random.choice(n_clusters, size=size)\n])\n\n# randomly assign groups\ngroups = np.array([\n    f\"g{i}\" for i in np.random.choice(n_groups, size=size)\n])\n\n# initialize object\nhgs = HGSig(\n    clusters,\n    groups,\n    reference=[\"g0\", \"g3\"]\n)\n\n# run testing\nhgs.fit()\npval = hgs.get_pval()\npcc = hgs.get_pcc()\n```\n\n### Fisher's Exact Test\n\n```python\nimport numpy as np\nfrom hgsig import HGSig\n\n# Number of observations\nsize = 10000\n\n# Number of Groups\nn_groups = 50\n\n# Number of Clusters\nn_clusters = 8\n\n# randomly assign clusters\nclusters = np.array([\n    f\"c{i}\" for i in np.random.choice(n_clusters, size=size)\n])\n\n# randomly assign groups\ngroups = np.array([\n    f\"g{i}\" for i in np.random.choice(n_groups, size=size)\n])\n\n# initialize object\nhgs = HGSig(\n    clusters,\n    groups,\n    reference=[\"g0\", \"g3\"],\n    method=\"fishers\"\n)\n\n# run testing\nhgs.fit()\npval = hgs.get_pval()\npcc = hgs.get_pcc()\n```\n\n### Single Reference Group\n\nIt is highly recommended here to use a fisher's exact test because the hypergeometric testing conditions will generally not be satisfied using only a single group.\nThis is because if the groups are of equal sizes it is likely you will have more than the original number of observations in the reference group and thus fail the prerequirements for the hypergeometric test.\nThis condition is not required for a fisher's exact test and so it should be used in this case.\n\n```python\nimport numpy as np\nfrom hgsig import HGSig\n\n# Number of observations\nsize = 10000\n\n# Number of Groups\nn_groups = 50\n\n# Number of Clusters\nn_clusters = 8\n\n# randomly assign clusters\nclusters = np.array([\n    f\"c{i}\" for i in np.random.choice(n_clusters, size=size)\n])\n\n# randomly assign groups\ngroups = np.array([\n    f\"g{i}\" for i in np.random.choice(n_groups, size=size)\n])\n\n# initialize object\nhgs = HGSig(\n    clusters,\n    groups,\n    reference=\"g0\",\n    method=\"fishers\"\n)\n\n# run testing\nhgs.fit()\npval = hgs.get_pval()\npcc = hgs.get_pcc()\n```\n\n### Multiple Groups with an Alternative Aggregation Function\n\nThe default aggregation function for the references is to sum the values across each of the conditions, but it is also possible to use alternative aggregation strategies if it is of interest.\n\n```python\nimport numpy as np\nfrom hgsig import HGSig\n\n# Number of observations\nsize = 10000\n\n# Number of Groups\nn_groups = 50\n\n# Number of Clusters\nn_clusters = 8\n\n# randomly assign clusters\nclusters = np.array([\n    f\"c{i}\" for i in np.random.choice(n_clusters, size=size)\n])\n\n# randomly assign groups\ngroups = np.array([\n    f\"g{i}\" for i in np.random.choice(n_groups, size=size)\n])\n\n# initialize object\nhgs = HGSig(\n    clusters,\n    groups,\n    reference=[\"g0\", \"g1\", \"g2\"],\n    method=\"fishers\",\n    agg=\"mean\"\n)\n\n# run testing\nhgs.fit()\npval = hgs.get_pval()\npcc = hgs.get_pcc()\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": null,
    "keywords": null,
    "license": null,
    "maintainer": null,
    "maintainer_email": null,
    "name": "hgsig",
    "package_url": "https://pypi.org/project/hgsig/",
    "platform": null,
    "project_url": "https://pypi.org/project/hgsig/",
    "project_urls": {
      "Home": "https://github.com/noamteyssier/hgsig"
    },
    "release_url": "https://pypi.org/project/hgsig/0.1.6/",
    "requires_dist": [
      "numpy",
      "pandas",
      "scipy",
      "matplotlib",
      "seaborn",
      "fastcluster",
      "tqdm",
      "pytest",
      "sphinx",
      "numpydoc",
      "pydata-sphinx-theme",
      "sphinx-autodoc-typehints"
    ],
    "requires_python": null,
    "summary": "Differential Representation with Hypergeometric Tests",
    "version": "0.1.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15022962,
  "releases": {
    "0.1.6": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "63538bdee64aff5be3131bf5c82a1ab80def96761a35bdefdf0491a76f83b641",
          "md5": "8cfd59e1c15f5bfb26e0b89492eec8fc",
          "sha256": "a0bdeeaedf6ccf3ee4e9d3b722356fd22db485ed77ac544429cc6cc8796ecf50"
        },
        "downloads": -1,
        "filename": "hgsig-0.1.6-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8cfd59e1c15f5bfb26e0b89492eec8fc",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 7819,
        "upload_time": "2022-09-07T19:35:17",
        "upload_time_iso_8601": "2022-09-07T19:35:17.282428Z",
        "url": "https://files.pythonhosted.org/packages/63/53/8bdee64aff5be3131bf5c82a1ab80def96761a35bdefdf0491a76f83b641/hgsig-0.1.6-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "78ef684d49e2cd176feb32a1516ee6123e8b73469244748b6381f4f470b574c1",
          "md5": "4b5da996cf037fc43795cf199b980b7c",
          "sha256": "8053c6552584f9bad76e61feb35cb785dbb51c5c31889f7808c54b26b933569d"
        },
        "downloads": -1,
        "filename": "hgsig-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "4b5da996cf037fc43795cf199b980b7c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12190,
        "upload_time": "2022-09-07T19:35:23",
        "upload_time_iso_8601": "2022-09-07T19:35:23.021676Z",
        "url": "https://files.pythonhosted.org/packages/78/ef/684d49e2cd176feb32a1516ee6123e8b73469244748b6381f4f470b574c1/hgsig-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "63538bdee64aff5be3131bf5c82a1ab80def96761a35bdefdf0491a76f83b641",
        "md5": "8cfd59e1c15f5bfb26e0b89492eec8fc",
        "sha256": "a0bdeeaedf6ccf3ee4e9d3b722356fd22db485ed77ac544429cc6cc8796ecf50"
      },
      "downloads": -1,
      "filename": "hgsig-0.1.6-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8cfd59e1c15f5bfb26e0b89492eec8fc",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 7819,
      "upload_time": "2022-09-07T19:35:17",
      "upload_time_iso_8601": "2022-09-07T19:35:17.282428Z",
      "url": "https://files.pythonhosted.org/packages/63/53/8bdee64aff5be3131bf5c82a1ab80def96761a35bdefdf0491a76f83b641/hgsig-0.1.6-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "78ef684d49e2cd176feb32a1516ee6123e8b73469244748b6381f4f470b574c1",
        "md5": "4b5da996cf037fc43795cf199b980b7c",
        "sha256": "8053c6552584f9bad76e61feb35cb785dbb51c5c31889f7808c54b26b933569d"
      },
      "downloads": -1,
      "filename": "hgsig-0.1.6.tar.gz",
      "has_sig": false,
      "md5_digest": "4b5da996cf037fc43795cf199b980b7c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12190,
      "upload_time": "2022-09-07T19:35:23",
      "upload_time_iso_8601": "2022-09-07T19:35:23.021676Z",
      "url": "https://files.pythonhosted.org/packages/78/ef/684d49e2cd176feb32a1516ee6123e8b73469244748b6381f4f470b574c1/hgsig-0.1.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}