{
  "info": {
    "author": "Yury Moskaltsov,Miguel Pereira",
    "author_email": "yury.moskaltsov@plaindata.ai",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# censoredROC\n\nCensoredROC allows the computation of the time-dependent ROC curve for right censored survival data using the cumulative sensitivity and dynamic specificity definitions. The ROC curves can be either empirical (non-smoothed) or smoothed with/wtihout boundary correction. It also calculates the time-dependent area under the ROC curve (AUC), the Youden index and can define an optimal cutoff for an independent continuous variables based on the Youden idex.\n\nThis package is based on the cenROC package that exists for R. The main idea was to allow Python users to apply the same tools.\n\n## Getting Started\n\nThese instructions will get you a copy of the project up and running on your local machine for development and testing purposes.\n\n### Prerequisites\n\n___cenroc___ requires following packages to be installed \n\n```\n['numpy', 'pandas', 'matplotlib', 'scipy','statsmodels']\n```\nif you don't have them installed ___cenroc___ will install the latest versions of these packages on your machine\n\n### Installing\n\nUse the following command to install the ___cenroc___ package from PyPi\n\n```\npip install cenroc\n```\n\n## Main class\n\nThe main class of this package is __cenROC__\n\nIn order to use the methods you have to intialise this class\n\n__cenROC(Y, M, censor, t, U = NULL, h = NULL, bw = \"NR\", method = \"tra\",\n    ktype = \"normal\", ktype1 = \"normal\", B = 0, alpha = 0.05, plot = \"TRUE\")__\n\n\n## Arguments \n\n__Y__\n\nThe numeric vector of event-times or observed times.\n\n__M__\n\nThe numeric vector of marker values for which the time-dependent ROC curves is computed.\n\n__censor__\n\nThe censoring indicator, 1 if event, 0 otherwise.\n\n__t__\n\nA scaler time point at which the time-dependent ROC curve is computed.\n\n__U__\n\nThe vector of grid points where the ROC curve is estimated. The default is a sequence of 151 numbers between 0 and 1.\n\n__h__\n\nA scaler for the bandwidth of Beran's weight calculaions. The defualt is the value obtained by using the method of Sheather and Jones (1991).\n\n__bw__\n\nA character string specifying the bandwidth estimation method for the ROC itself. The default is the \"NR\" normal reference method. The user can also introduce a numerical value.\n\n__method__\n\nThe method of ROC curve estimation. The possible options are \"emp\" emperical metod; \"untra\" smooth without boundary correction and \"tra\" is smooth ROC curve estimation with boundary correction. The default is the \"tra\" smooth ROC curve estimate with boundary correction.\n\n__ktype__\n\nA character string giving the type kernel distribution to be used for smoothing the ROC curve: \"normal\", \"epanechnikov\", \"biweight\", or \"triweight\". By default, the \"normal\" kernel is used.\n\n__ktype1__\n\nA character string specifying the desired kernel needed for Beran weight calculation. The possible options are \"normal\", \"epanechnikov\", \"tricube\", \"boxcar\", \"triangular\", or \"quartic\". The defaults is \"normal\" kernel density. ___this one is not used currently___\n\n__B__\n\nThe number of bootstrap samples to be used for variance estimation. The default is 0, no variance estimation.\n\n__alpha__\n\nThe significance level. The default is 0.05.\n\n\n## Methods\n\n__ROC()__\n\nProduces a numpy array with ROC estimations\n\n__AUC()__\n\nProduces a float showing AUC estimate\n\n__plot()__\n\nPlots the bootstrapped plot of ROC \n\n\n## Example\n\nInstall the lifelines package to import the dataset\n\n```\npip install lifelines\n```\nImport the datasets from the lifelines package along with ___cenroc___ package\n\n```\nimport lifelines.datasets as data\nfrom cenroc import cenROC\n\ndf_test = data.load_panel_test()\n\ncenROC_test1 = cenROC(Y=df_test['t'], M=df_test['var2'], censor=df_test['E'],\n                     t=3, U=None, h=None, bw='NR', method=\"tra\",\n                     ktype=\"normal\", ktype1=\"normal\", B=3, alpha=0.05)\n\nprint(cenROC_test1.ROC())\n```\nOutput\n\n```\n0.110795\n0.180722\n0.212862\n0.235690\n0.253942\n0.269407\n0.282974\n0.295154\n0.306269\n0.316538\n0.326117\n...\n```\n\n```\ncenROC_test2 = cenROC(Y=df_test['t'], M=df_test['var1'], censor=df_test['E'],\n                                    t=2, U=None, h=None, bw=0.1, method=\"untra\",\n                                    ktype=\"epanechnikov\", ktype1=\"normal\", B=2, alpha=0.05)\n\nprint(cenROC_test2.AUC())\n```\n\nOutput\n\n```\n0.6742424242424243\n```\n\nDue to the stochastic nature of bootstraping the graphs will be different each time.\nWe can set seed to produce the same result for demonstartion purposes.\n\n```\nimport numpy as np\nnp.random.seed(3)\ncenROC_test1.plot()\n\n```\n\nOutput\n\n!![output_example](https://user-images.githubusercontent.com/48184866/183537148-d11d7333-47ca-4d1e-a1af-a55ef1e85a97.png)\n\n\n## Contributing\n\nPlease read [CONTRIBUTING.md](https://gist.github.com/PurpleBooth/b24679402957c63ec426) for details on our code of conduct, and the process for submitting pull requests to us.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the [tags on this repository](https://github.com/your/project/tags). \n\n## Authors\n\nThis package was developed by **plaindata.ai** \n\n* **Yury Moskaltsov** - *Initial programming and package building* - [YuryMoskaltsov](https://github.com/YuryMoskaltsov)\n* **Miguel Pereira** - *Mathematical analysis and implementation, project oversight* - [miguelmspereira](https://github.com/miguelmspereira)\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details\n\n## Acknowledgments\n\n* Kassu Mehari Beyene, Catholic University of Louvain. <kasu.beyene@uclouvain.be> - author of the cenROC R Package\n* Anouar El Ghouch, Catholic University of Louvain. <anouar.elghouch@uclouvain.be> - author of the cenROC R Package\n\n## References\n\n* Beyene KM, El Ghouch A. Time-dependent ROC curve estimation for interval-censored data. Biom J. 2022 May 6. doi: 10.1002/bimj.202000382. PMID: 35523738.\n* cenROC R package: . FYI the package is no longer on CRAN (according to the repo: *Archived on 2022-04-25 as email to the maintainer was undeliverable.*). The archived versions can be downloaded here: https://cran.r-project.org/src/contrib/Archive/cenROC/\n\n## Improvements to be made/Planned additional features\n\n* There is a slight discrepancy in the optimal cutpoint metric based on the Youden index obtained here and the one obtained using the cenROC package in R. This is due to a discrepancy in the interpolation functions scipy.interpolate.interp1d() in Python and approx() in R. This should be tested more thoroughly to achieve identical results. The other metrics were compared with the R output and there are no differences.\n* Add a function that calculates the optimal cutpoint for a continuous variables based on the log-rank test (akin to the survminer::survcutpoint function that exists in R).\n* Let us know of other functions that would be useful additions.\n\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "python,cenROC,survival",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cenroc",
    "package_url": "https://pypi.org/project/cenroc/",
    "platform": null,
    "project_url": "https://pypi.org/project/cenroc/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/cenroc/0.0.7/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Calculation of censored ROC curve",
    "version": "0.0.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14704638,
  "releases": {
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b4138ebb853fb70a9c281e4955601d99125ccb63b71b86438a2a1c704ac0e947",
          "md5": "835183c356408559ed032a1620553465",
          "sha256": "1c4c7a58696bb513d090c030f44217e238033d4253a3609dc7827a207117d0e3"
        },
        "downloads": -1,
        "filename": "cenroc-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "835183c356408559ed032a1620553465",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7113,
        "upload_time": "2022-08-09T00:37:59",
        "upload_time_iso_8601": "2022-08-09T00:37:59.196787Z",
        "url": "https://files.pythonhosted.org/packages/b4/13/8ebb853fb70a9c281e4955601d99125ccb63b71b86438a2a1c704ac0e947/cenroc-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "708845138cc4bdd08578cf2e43b65e7c9d1f13c9b99c76c5863c013b165a7f07",
          "md5": "6b5b9c9f0f3deeb13518e32e4ac21637",
          "sha256": "a6e518e834a268a68aed139e02ed10d32fa06045bcd23f52e1fa33d02837463e"
        },
        "downloads": -1,
        "filename": "cenroc-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "6b5b9c9f0f3deeb13518e32e4ac21637",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6930,
        "upload_time": "2022-08-09T00:38:00",
        "upload_time_iso_8601": "2022-08-09T00:38:00.793740Z",
        "url": "https://files.pythonhosted.org/packages/70/88/45138cc4bdd08578cf2e43b65e7c9d1f13c9b99c76c5863c013b165a7f07/cenroc-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef6f9387306508ca6cdd912a59f769da39a8f9bdc84d9edac741de7c1e4be971",
          "md5": "19860c9d7f45e06591bcc86e652b58cd",
          "sha256": "c441eabf5cf8bdfd2b60426f4b0894ee5a355dccebac5344c2f4bdb085662c5b"
        },
        "downloads": -1,
        "filename": "cenroc-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "19860c9d7f45e06591bcc86e652b58cd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10266,
        "upload_time": "2022-08-09T16:39:24",
        "upload_time_iso_8601": "2022-08-09T16:39:24.528973Z",
        "url": "https://files.pythonhosted.org/packages/ef/6f/9387306508ca6cdd912a59f769da39a8f9bdc84d9edac741de7c1e4be971/cenroc-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ef6f9387306508ca6cdd912a59f769da39a8f9bdc84d9edac741de7c1e4be971",
        "md5": "19860c9d7f45e06591bcc86e652b58cd",
        "sha256": "c441eabf5cf8bdfd2b60426f4b0894ee5a355dccebac5344c2f4bdb085662c5b"
      },
      "downloads": -1,
      "filename": "cenroc-0.0.7.tar.gz",
      "has_sig": false,
      "md5_digest": "19860c9d7f45e06591bcc86e652b58cd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 10266,
      "upload_time": "2022-08-09T16:39:24",
      "upload_time_iso_8601": "2022-08-09T16:39:24.528973Z",
      "url": "https://files.pythonhosted.org/packages/ef/6f/9387306508ca6cdd912a59f769da39a8f9bdc84d9edac741de7c1e4be971/cenroc-0.0.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}