{
  "info": {
    "author": "Steven Loria",
    "author_email": "sloria1@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Internet :: WWW/HTTP"
    ],
    "description": "*****************\nwebargs-starlette\n*****************\n\n.. image:: https://badgen.net/pypi/v/webargs-starlette\n    :target: https://badge.fury.io/py/webargs-starlette\n    :alt: PyPI version\n\n.. image:: https://dev.azure.com/sloria/sloria/_apis/build/status/sloria.webargs-starlette?branchName=master\n    :target: https://dev.azure.com/sloria/sloria/_build/latest?definitionId=11&branchName=master\n    :alt: Build status\n\n.. image:: https://badgen.net/badge/marshmallow/3\n    :target: https://marshmallow.readthedocs.io/en/stable/\n    :alt: marshmallow 3 compatible\n\n.. image:: https://badgen.net/badge/code%20style/black/000\n    :target: https://github.com/ambv/black\n    :alt: code style: black\n\n\nwebargs-starlette is a library for declarative request parsing and\nvalidation with `Starlette <https://github.com/encode/starlette>`_,\nbuilt on top of `webargs <https://github.com/marshmallow-code/webargs>`_.\n\nIt has all the goodness of `webargs <https://github.com/marshmallow-code/webargs>`_, \nwith some extra sugar for type annotations.\n\n.. code-block:: python\n\n    import uvicorn\n    from starlette.applications import Starlette\n    from starlette.responses import JSONResponse\n    from webargs_starlette import use_annotations\n\n    app = Starlette()\n\n\n    @app.route(\"/\")\n    @use_annotations(location=\"query\")\n    async def index(request, name: str = \"World\"):\n        return JSONResponse({\"Hello\": name})\n\n\n    if __name__ == \"__main__\":\n        uvicorn.run(app, port=5000)\n\n    # curl 'http://localhost:5000/'\n    # {\"Hello\": \"World\"}\n    # curl 'http://localhost:5000/?name=Ada'\n    # {\"Hello\": \"Ada\"}\n\nInstall\n=======\n\n::\n\n    pip install -U webargs-starlette\n\n\nUsage\n=====\n\nParser Usage\n------------\n\nUse ``parser.parse`` to parse a Starlette ``Request`` with a\ndictionary of fields.\n\n.. code-block:: python\n\n    from starlette.applications import Starlette\n    from starlette.responses import JSONResponse\n    from webargs import fields\n    from webargs_starlette import parser\n\n    app = Starlette()\n\n\n    @app.route(\"/\")\n    async def homepage(request):\n        args = {\n            \"name\": fields.Str(required=True),\n            \"greeting\": fields.Str(load_default=\"hello\"),\n        }\n        parsed = await parser.parse(args, request)\n        greeting = parsed[\"greeting\"]\n        name = parsed[\"name\"]\n        return JSONResponse({\"message\": f\"{greeting} {name}\"})\n\n\nDecorators\n----------\n\nUse the ``use_args`` decorator to inject the parsed arguments\ndictionary into the handler function. The following snippet is equivalent to the\nfirst example.\n\n**Important**: Decorated functions MUST be coroutine functions.\n\n.. code-block:: python\n\n    from starlette.applications import Starlette\n    from starlette.responses import JSONResponse\n    from webargs import fields\n    from webargs_starlette import use_args\n\n    app = Starlette()\n\n\n    @app.route(\"/\")\n    @use_args(\n        {\"name\": fields.Str(required=True), \"greeting\": fields.Str(load_default=\"hello\")}\n    )\n    async def homepage(request, args):\n        greeting = args[\"greeting\"]\n        name = args[\"name\"]\n        return JSONResponse({\"message\": f\"{greeting} {name}\"})\n\n\nThe ``use_kwargs`` decorator injects the parsed arguments as keyword arguments.\n\n.. code-block:: python\n\n    from starlette.applications import Starlette\n    from starlette.responses import JSONResponse\n    from webargs import fields\n    from webargs_starlette import use_args\n\n    app = Starlette()\n\n\n    @app.route(\"/\")\n    @use_kwargs(\n        {\"name\": fields.Str(required=True), \"greeting\": fields.Str(load_default=\"hello\")}\n    )\n    async def homepage(request, name, greeting):\n        return JSONResponse({\"message\": f\"{greeting} {name}\"})\n\n\nSee `decorator_example.py <https://github.com/sloria/webargs-starlette/blob/master/examples/decorator_example.py>`_\nfor a more complete example of ``use_args`` and ``use_kwargs`` usage.\n\nError Handling\n--------------\n\nWhen validation fails, the parser will raise a ``WebargsHTTPException``,\nwhich is the same as Starlette's ``HTTPException`` with the addition of\nof the ``messages`` (validation messages), ``headers`` , ``exception`` (underlying exception), and ``schema`` (marshmallow ``Schema``) attributes.\n\nYou can use a custom exception handler to return the error messages as\nJSON.\n\n\n.. code-block:: python\n\n    from starlette.responses import JSONResponse\n    from webargs_starlette import WebargsHTTPException\n\n\n    @app.exception_handler(WebargsHTTPException)\n    async def http_exception(request, exc):\n        return JSONResponse(exc.messages, status_code=exc.status_code, headers=exc.headers)\n\n\nAnnotations\n-----------\n\nThe ``use_annotations`` decorator allows you to parse request objects\nusing type annotations.\n\n\n.. code-block:: python\n\n    from starlette.applications import Starlette\n    from starlette.responses import JSONResponse\n    from webargs_starlette import use_annotations\n\n    app = Starlette()\n\n\n    @app.route(\"/\")\n    @use_annotations(location=\"query\")\n    async def welcome(request, name: str = \"Friend\"):\n        return JSONResponse({\"message\": f\"Welcome, {name}!\"})\n\n\n    # curl 'http://localhost:5000/'.\n    # {\"message\":\"Welcome, Friend!\"}\n    # curl 'http://localhost:5000/?name=Ada'.\n    # {\"message\":\"Welcome, Ada!\"}\n\nAny annotated argument that doesn't have a default value will be required.\nFor example, if we remove the default for ``name`` in the above example,\nan 422 error response is returned if ``?name`` isn't passed.\n\n\n.. code-block:: python\n\n    from starlette.applications import Starlette\n    from starlette.responses import JSONResponse\n    from webargs_starlette import use_annotations, WebargsHTTPException\n\n    app = Starlette()\n\n\n    @app.route(\"/\")\n    @use_annotations(location=\"query\")\n    async def welcome(request, name: str):\n        return JSONResponse({\"message\": f\"Welcome, {name}!\"})\n\n\n    @app.exception_handler(WebargsHTTPException)\n    async def http_exception(request, exc):\n        return JSONResponse(exc.messages, status_code=exc.status_code, headers=exc.headers)\n\n\n    # curl \"http://localhost:5000/\"\n    # {\"name\":[\"Missing data for required field.\"]}\n\nArguments may also be annotated with ``Field`` instances when you need\nmore control. For example, you may want to add a validator.\n\n.. code-block:: python\n\n    from starlette.applications import Starlette\n    from starlette.responses import JSONResponse\n    from webargs import fields\n    from marshmallow import validate\n    from webargs_starlette import use_annotations, WebargsHTTPException\n\n    app = Starlette()\n\n\n    @app.route(\"/\")\n    @use_annotations(location=\"query\")\n    async def welcome(request, name: fields.Str(validate=validate.Length(min=2))):\n        return JSONResponse({\"message\": f\"Welcome, {name}!\"})\n\n\n    @app.exception_handler(WebargsHTTPException)\n    async def http_exception(request, exc):\n        return JSONResponse(exc.messages, status_code=exc.status_code, headers=exc.headers)\n\n\n    # curl \"http://localhost:5000/?name=A\"\n    # {\"name\":[\"Shorter than minimum length 2.\"]}\n\n``HTTPEndpoint`` methods may also be decorated with ``use_annotations``.\n\n.. code-block:: python\n\n    from starlette.applications import Starlette\n    from starlette.responses import JSONResponse\n    from starlette.endpoints import HTTPEndpoint\n    from webargs_starlette import use_annotations\n\n    app = Starlette()\n\n\n    @app.route(\"/\")\n    class WelcomeEndpoint(HTTPEndpoint):\n        @use_annotations(location=\"query\")\n        async def get(self, request, name: str = \"World\"):\n            return JSONResponse({\"message\": f\"Welcome, {name}!\"})\n\nSee `annotation_example.py <https://github.com/sloria/webargs-starlette/blob/master/examples/annotation_example.py>`_\nfor a more complete example of ``use_annotations`` usage.\n\nMore\n----\n\nFor more information on how to use webargs, see the `webargs documentation <https://webargs.readthedocs.io/>`_.\n\nLicense\n=======\n\nMIT licensed. See the `LICENSE <https://github.com/sloria/webargs-starlette/blob/master/LICENSE>`_ file for more details.\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sloria/webargs-starlette",
    "keywords": "webargs,starlette,asgi,request,parsing",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "webargs-starlette",
    "package_url": "https://pypi.org/project/webargs-starlette/",
    "platform": null,
    "project_url": "https://pypi.org/project/webargs-starlette/",
    "project_urls": {
      "Homepage": "https://github.com/sloria/webargs-starlette"
    },
    "release_url": "https://pypi.org/project/webargs-starlette/2.1.0/",
    "requires_dist": [
      "webargs (~=8.0)",
      "starlette (>=0.21.0)",
      "marshmallow (~=3.0)",
      "pytest ; extra == 'dev'",
      "mock ; extra == 'dev'",
      "webtest (~=2.0.32) ; extra == 'dev'",
      "webtest-asgi (~=1.1.0) ; extra == 'dev'",
      "mypy (==0.971) ; extra == 'dev'",
      "flake8 (==5.0.4) ; extra == 'dev'",
      "flake8-bugbear (==22.8.23) ; extra == 'dev'",
      "pre-commit (~=2.20) ; extra == 'dev'",
      "httpie ; extra == 'dev'",
      "uvicorn ; extra == 'dev'",
      "tox ; extra == 'dev'",
      "httpie ; extra == 'examples'",
      "uvicorn ; extra == 'examples'",
      "mypy (==0.971) ; extra == 'lint'",
      "flake8 (==5.0.4) ; extra == 'lint'",
      "flake8-bugbear (==22.8.23) ; extra == 'lint'",
      "pre-commit (~=2.20) ; extra == 'lint'",
      "pytest ; extra == 'tests'",
      "mock ; extra == 'tests'",
      "webtest (~=2.0.32) ; extra == 'tests'",
      "webtest-asgi (~=1.1.0) ; extra == 'tests'"
    ],
    "requires_python": "",
    "summary": "Declarative request parsing and validation for Starlette with webargs",
    "version": "2.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15987810,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6de30b206a6d67303408f7e2e73a5edf985276df5c6cf05bd47538f1cfe1dfda",
          "md5": "a6718d14d19022796f5ccb4cccb5394e",
          "sha256": "7239f55cb78ba159d021ffc4f3b17bbdad97ae1d12fb265dc5de88fc6e5ba203"
        },
        "downloads": -1,
        "filename": "webargs_starlette-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a6718d14d19022796f5ccb4cccb5394e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6954,
        "upload_time": "2019-01-04T21:49:16",
        "upload_time_iso_8601": "2019-01-04T21:49:16.853756Z",
        "url": "https://files.pythonhosted.org/packages/6d/e3/0b206a6d67303408f7e2e73a5edf985276df5c6cf05bd47538f1cfe1dfda/webargs_starlette-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b104256d142369970b818835cd1bdaba18fc35705636fb513e5eab664a7279af",
          "md5": "69f0f3a5e01f45502c51409e16a31a08",
          "sha256": "944e02701aa6a2c353f52863bafced9eecba25209bfb01064ae2e561efbbda6e"
        },
        "downloads": -1,
        "filename": "webargs-starlette-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "69f0f3a5e01f45502c51409e16a31a08",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7087,
        "upload_time": "2019-01-04T21:49:18",
        "upload_time_iso_8601": "2019-01-04T21:49:18.920537Z",
        "url": "https://files.pythonhosted.org/packages/b1/04/256d142369970b818835cd1bdaba18fc35705636fb513e5eab664a7279af/webargs-starlette-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "52eaf9808210e73f45267f8c3e208058864052505e7ee9106f5c44d7c8cf7c14",
          "md5": "352aca8490c73ab396f7f781c05003ff",
          "sha256": "7a58cf7c4de2818e2b8182304c29716f1a27f7779a83be439f3a7023c15c39e6"
        },
        "downloads": -1,
        "filename": "webargs_starlette-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "352aca8490c73ab396f7f781c05003ff",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8162,
        "upload_time": "2019-01-13T23:39:23",
        "upload_time_iso_8601": "2019-01-13T23:39:23.558099Z",
        "url": "https://files.pythonhosted.org/packages/52/ea/f9808210e73f45267f8c3e208058864052505e7ee9106f5c44d7c8cf7c14/webargs_starlette-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2afaf6da2df8039e312e4746ae52eeba0551eb7d5da88600d88cf804248dd26e",
          "md5": "e840255a0be6d9bfdfa3c53489371525",
          "sha256": "58a94ace958d1ec754d3df3e91191a361ec4c2e260589d64a257b030af008b1e"
        },
        "downloads": -1,
        "filename": "webargs-starlette-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e840255a0be6d9bfdfa3c53489371525",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7945,
        "upload_time": "2019-01-13T23:39:24",
        "upload_time_iso_8601": "2019-01-13T23:39:24.892193Z",
        "url": "https://files.pythonhosted.org/packages/2a/fa/f6da2df8039e312e4746ae52eeba0551eb7d5da88600d88cf804248dd26e/webargs-starlette-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f4647ffd80f9cff941bfaafba473bfc916d213f6d90b8efcc8c1e2d197558dba",
          "md5": "677f3360e22898add88e05a04abfa102",
          "sha256": "543a4938621975371a480f395ed0c1902e86ef9f46d906416863e676b4d7fff3"
        },
        "downloads": -1,
        "filename": "webargs_starlette-1.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "677f3360e22898add88e05a04abfa102",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8397,
        "upload_time": "2019-07-05T15:29:35",
        "upload_time_iso_8601": "2019-07-05T15:29:35.418555Z",
        "url": "https://files.pythonhosted.org/packages/f4/64/7ffd80f9cff941bfaafba473bfc916d213f6d90b8efcc8c1e2d197558dba/webargs_starlette-1.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1c2ebb75af8f8adf89f0a3e9f769e544cd9e2a81e65f9011ee8ccc2c6acec5b4",
          "md5": "086e78e63c4a37a915141e5eca8c6b98",
          "sha256": "92a167fbeff828588c507be673ccb2f60149eae0188e934809204c8b91f27557"
        },
        "downloads": -1,
        "filename": "webargs-starlette-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "086e78e63c4a37a915141e5eca8c6b98",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9432,
        "upload_time": "2019-07-05T15:29:36",
        "upload_time_iso_8601": "2019-07-05T15:29:36.714146Z",
        "url": "https://files.pythonhosted.org/packages/1c/2e/bb75af8f8adf89f0a3e9f769e544cd9e2a81e65f9011ee8ccc2c6acec5b4/webargs-starlette-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "09fdc78b155799681fe0b2e097144a83e9481de75d2264adb59e40a0a51a40bf",
          "md5": "08d45500f3b96f475c85be04fa83b5af",
          "sha256": "e05382752afc52606672cb69613ef2930fb3336482697ab5cb2dcbe0d115e361"
        },
        "downloads": -1,
        "filename": "webargs_starlette-1.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "08d45500f3b96f475c85be04fa83b5af",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8410,
        "upload_time": "2020-05-05T03:13:14",
        "upload_time_iso_8601": "2020-05-05T03:13:14.369464Z",
        "url": "https://files.pythonhosted.org/packages/09/fd/c78b155799681fe0b2e097144a83e9481de75d2264adb59e40a0a51a40bf/webargs_starlette-1.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0e233a508e3c28d867fb9a50a1081b4bb829bcce1cdf388c14a4f9f9d2b08a4d",
          "md5": "4059cb6304bf141eb5d50dfb452cbc27",
          "sha256": "419e83a56fdd50522b114b3d7a765986d5e757f0956b820db04b0b293d0ba687"
        },
        "downloads": -1,
        "filename": "webargs-starlette-1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4059cb6304bf141eb5d50dfb452cbc27",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9469,
        "upload_time": "2020-05-05T03:13:15",
        "upload_time_iso_8601": "2020-05-05T03:13:15.867228Z",
        "url": "https://files.pythonhosted.org/packages/0e/23/3a508e3c28d867fb9a50a1081b4bb829bcce1cdf388c14a4f9f9d2b08a4d/webargs-starlette-1.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d4404fb999e93d86efef0927da9ed45ae319b04cf69abd9f8e67c9625d033c1a",
          "md5": "8006a2eb1613af71c80b37058f405b4c",
          "sha256": "932f3f96f5d1dd6f75f2e7bdf7d6e6aa671b8a0ccc30d40007170b22ef286d6f"
        },
        "downloads": -1,
        "filename": "webargs_starlette-2.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8006a2eb1613af71c80b37058f405b4c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8457,
        "upload_time": "2020-05-05T04:18:32",
        "upload_time_iso_8601": "2020-05-05T04:18:32.570740Z",
        "url": "https://files.pythonhosted.org/packages/d4/40/4fb999e93d86efef0927da9ed45ae319b04cf69abd9f8e67c9625d033c1a/webargs_starlette-2.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f2b8d3d1d33aa72cd712fb2e3d93f6777da096ce3f9971517118b0e34360e7ac",
          "md5": "d0345c40232043cc3969e5dccba49b82",
          "sha256": "6873af91989a186af8aeeee15e38fc976abd17847f6e3ce2bfbd635c7db49414"
        },
        "downloads": -1,
        "filename": "webargs-starlette-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d0345c40232043cc3969e5dccba49b82",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11195,
        "upload_time": "2020-05-05T04:18:33",
        "upload_time_iso_8601": "2020-05-05T04:18:33.909992Z",
        "url": "https://files.pythonhosted.org/packages/f2/b8/d3d1d33aa72cd712fb2e3d93f6777da096ce3f9971517118b0e34360e7ac/webargs-starlette-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3a9d87a642e299d5257cb7bc8054d97c63be5ed8edd5865ecda44ba0c0534218",
          "md5": "e2d5d414687dae00a7a604b2e28d01d0",
          "sha256": "78d513227141a3fc54e6a384ced83b9d623dcf1a3083f878f14dd02ae6bf2cc3"
        },
        "downloads": -1,
        "filename": "webargs_starlette-2.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e2d5d414687dae00a7a604b2e28d01d0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8446,
        "upload_time": "2022-12-04T19:54:23",
        "upload_time_iso_8601": "2022-12-04T19:54:23.912696Z",
        "url": "https://files.pythonhosted.org/packages/3a/9d/87a642e299d5257cb7bc8054d97c63be5ed8edd5865ecda44ba0c0534218/webargs_starlette-2.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "309265dc51e47adbd5b3562e5942cc0e1ceb4c6c2c214f8eb102d35749993eef",
          "md5": "a46482e0934ebcb1371a286e399dbd75",
          "sha256": "2dedf23d27a73c42c9b792735eaff0f05106f2568a6e8e73b32cf7a7a2c168c2"
        },
        "downloads": -1,
        "filename": "webargs-starlette-2.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a46482e0934ebcb1371a286e399dbd75",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10840,
        "upload_time": "2022-12-04T19:54:26",
        "upload_time_iso_8601": "2022-12-04T19:54:26.133124Z",
        "url": "https://files.pythonhosted.org/packages/30/92/65dc51e47adbd5b3562e5942cc0e1ceb4c6c2c214f8eb102d35749993eef/webargs-starlette-2.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3a9d87a642e299d5257cb7bc8054d97c63be5ed8edd5865ecda44ba0c0534218",
        "md5": "e2d5d414687dae00a7a604b2e28d01d0",
        "sha256": "78d513227141a3fc54e6a384ced83b9d623dcf1a3083f878f14dd02ae6bf2cc3"
      },
      "downloads": -1,
      "filename": "webargs_starlette-2.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e2d5d414687dae00a7a604b2e28d01d0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 8446,
      "upload_time": "2022-12-04T19:54:23",
      "upload_time_iso_8601": "2022-12-04T19:54:23.912696Z",
      "url": "https://files.pythonhosted.org/packages/3a/9d/87a642e299d5257cb7bc8054d97c63be5ed8edd5865ecda44ba0c0534218/webargs_starlette-2.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "309265dc51e47adbd5b3562e5942cc0e1ceb4c6c2c214f8eb102d35749993eef",
        "md5": "a46482e0934ebcb1371a286e399dbd75",
        "sha256": "2dedf23d27a73c42c9b792735eaff0f05106f2568a6e8e73b32cf7a7a2c168c2"
      },
      "downloads": -1,
      "filename": "webargs-starlette-2.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "a46482e0934ebcb1371a286e399dbd75",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10840,
      "upload_time": "2022-12-04T19:54:26",
      "upload_time_iso_8601": "2022-12-04T19:54:26.133124Z",
      "url": "https://files.pythonhosted.org/packages/30/92/65dc51e47adbd5b3562e5942cc0e1ceb4c6c2c214f8eb102d35749993eef/webargs-starlette-2.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}