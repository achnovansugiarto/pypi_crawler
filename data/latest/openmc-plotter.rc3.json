{
  "info": {
    "author": "OpenMC Development Team",
    "author_email": "openmc@anl.gov",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: End Users/Desktop",
      "Intended Audience :: Science/Research",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering"
    ],
    "description": "[![PyPI](https://img.shields.io/pypi/v/openmc-plotter?color=brightgreen&label=pypi&logo=grebrightgreenen&logoColor=green)](https://pypi.org/project/openmc-plotter/)\n\n# OpenMC Plot Explorer\n\n## Description\n\nA graphical interface for visualizing and navigating OpenMC models.\n\nOriginally created by @landonjmitchell at the University of Chicago ([original\nrepository](https://github.com/landonjmitchell/openmc-plotgui)).\n\n![beavrs](./screenshots/beavrs.png)\n\n![beavrs_zoom](./screenshots/beavrs_zoomed.png)\n\n## Dependencies\n\nOpenMC, Matplotlib, NumPy, PySide2\n\n## Installation\n\nThis package is most easily installed by running\n\n```console\npip install openmc-plotter\n```\n\n## Usage\n\nFrom a directory containing an OpenMC model run:\n\n```console\n$ openmc-plotter -d <path_to_openmc_model_dir>\n```\n\nor simply run\n\n```console\n$ openmc-plotter\n```\n\nfrom the directory containing the model.\n\nOnce the viewer has opened, press `?` to view a variety of keyboard shortcuts.\n\n![shortcuts](./screenshots/shortcuts.png)\n\n## Features\n\n### Tally Visualization\n\nThe plotter also provides the ability to view tallies with spatial filters (mesh\nfilter, cell filter, etc.). After loading a statepoint file from the \"Edit\"\nmenu, tallies can be displayed on top of the geometry.\n\n![tally](./screenshots/pincell_tally.png)\n\nFilters, scores, and nuclides on the tally can be enabled/disabled to isolate data.\n\n### Color Manipulation\n\nCell and material colors can be customized in the color dialog menu. Overlap\ncoloring can be enabled as well to debug problems in the geometry definition.\n\n![colors](./screenshots/color_dialog.png)\n\n### DAGMC Geometry Visualization\n\nThe plotter can also present the CAD-based tesellation geometry enabled by the\n[Direct Accelerated Geometry Monte Carlo](https://svalinn.github.io/DAGMC/)\n(DAGMC) toolkit. Below is the cross section of a tokamake model generated using [paramak](https://paramak.readthedocs.io/en/main/):\n\n![dagmc](./screenshots/dagmc.png)\n\nAs well as a DAGMC model of the Advanced Test Reactor (ATR):\n\n![atr](./screenshots/atr.png)\n\n### Saving and Exporting\n\n  - Any image displayed in the plotter can be saved in any format supported by the\nuser's Matplotlib installation.\n\n  - Tally and geometry data (material/cell IDs) can be exported to a VTK file under \"File->Export\"\n\n# Options/Functionality\n\n## Menu Bar:\n\n  - File&rightarrow;Save Image As... : Save an image file of the current plot.\n  - File&rightarrow;Save View Settings... : Save a .pltvw pickle file containing the current plot settings.\n  - File&rightarrow;Open View Settings... : Open and load a .pltvw pickle file containing a previously saved view.\n  - File&rightarrow;Quit : Quit the application.\n\n  - Edit&rightarrow;Apply Changes : Apply any un-applied plot setting changes, and reload plot image.\n  - Edit&rightarrow;Undo : Undo last applied plot settings changes, and reload plot image.\n  - Edit&rightarrow;Redo : Redo last applied plot settings changes, and reload plot image.\n  - Edit&rightarrow;Restore Default Settings : Restore to default plot settings and reload plot image.\n\n  - Edit&rightarrow;Basis&rightarrow;xy : Change plot basis to xy, apply changes, and reload plot.\n  - Edit&rightarrow;Basis&rightarrow;xz : Change plot basis to xz, apply changes, and reload plot.\n  - Edit&rightarrow;Basis&rightarrow;yz : Change plot basis to yz, apply changes, and reload plot.\n  - Edit&rightarrow;Color By&rightarrow;Cell : Change plot settings to be colored by cell, apply changes, and reload plot.\n  - Edit&rightarrow;Color By&rightarrow;Material : Change plot settings to be colored by material, apply changes, and reload plot.\n  - Edit&rightarrow;Enable Masking : Enable/Disable masking, apply changes, and reload plot.\n  - Edit&rightarrow;Enable Highlighting : Enable/Disable highlighting, apply changes, and reload plot.\n  - Edit&rightarrow;Enable Overlap Coloring : Enable/Disable display of geometry overlaps, apply changes, and reload plot.\n\n  - View&rightarrow;Hide[Show] Dock : Hide/Show Dock.\n  - View&rightarrow;Zoom... : Open dialog to input new zoom value.\n\n  - Window&rightarrow;Main Window : Activate, bring main window to front.\n  - Window&rightarrow;Color Options : [Open], activate, bring color options dialog to front.\n\n## Dock:\n\n### Origin:\n  - X, Y, Z : Set the active plot origin to the values entered for each dimension.\n\n### Options:\n\n  - Width : Set the width of the active plot in plot units.\n  - Height : Set the height of the active plot in plot units.\n  - Basis : Set the basis of the active plot.\n  - Color By : Select how the active plot is colored.\n  - Color Options... : Open the color options dialog.\n\n### Resolution:\n\n  - Fixed Aspect Ratio : Check to prevent plot image stretching/warping.\n  - Pixel Width: Set width in pixels of active plot.\n  - Pixel Height : Set height in pixels of active plot.\n\n### Other:\n\n  - Apply Changes : Apply changes made to active plot, reload plot image.\n  - Zoom : Set zoom level of plot image.\n\n## Plot Image\n\n### Actions:\n\n  - Mouse Hover : Display plot coordinates in bottom-right of status bar.  Display cell/material ID and name (if any) in bottom-left of status bar.\n\n  - Left Mouse Button Drag : Crop active plot to selection, apply changes, and reload plot image.\n  - <kbd>Shift</kbd> + Left Mouse Button Drag : De-crop active plot so that the current plot dimensions fit within selected area, apply changes, and reload plot image.\n  - Note: To cancel selection, reduce selection size to less than 10 pixels in\n    either dimension and release. Active plot Origin, width, and height values\n    will be returned to current plot settings.\n\n  - Double-Click Left Mouse Button : Set origin to point clicked, apply changes, and reload plot image.\n  - <kbd>Shift</kbd> + Scroll : Increase/Decrease zoom level of plot image.\n\n  - Right-Click on plot background &rightarrow; activate context menu:\n      - Edit Background Color... : Select a new color for plot background, apply changes, and reload plot image.\n\n    See menu bar for other context menu options.\n  - Right-Click on plot overlap region &rightarrow; activate context menu:\n      - Edit Overlap Color... :  Select a new color for overlap regions, apply changes, and reload plot image.\n\n  - Right-click on plot cell/material : Activate context menu:\n    - Displays cell/material ID and name (if defined).\n    - Edit Cell/Material Color... : Select a new color for the selected cell/material, apply changes, and reload plot image.\n    - Mask Cell/Material : Mask/Unmask selected cell/material, apply changes, and reload plot image.\n    - Highlight Cell/Material : Highlight/Unhighlight selected cell/material, apply changes, and reload plot image.\n\n\n    See menu bar for other context menu options.\n\n## Color Options Dialog\n\n### General Tab:\n\n  - Masking : Enable/Disable masking on active plot.\n  - Mask Color : Select color of masked components on active plot.\n  - Highlighting : Enable/Disable highlighting on active plot. Enabling\n    highlighting will disable custom cell/material color selection.\n  - Highlight Color : Select overlay color of non-highlighted cells/materials.\n  - Highlight Alpha : Set alpha transparency level of non-highlighted color overlay.\n  - Highlight Seed : Select seed for randomized colorization of cells/materials when highlighting is enabled.\n  - Background Color : Select color of plot background for active plot.\n  - Show Overlaps : Display overlap regions on the plot.\n  - Overlap Color : Customize the displayed color of overlap regions.\n  - Color Plot By : Select how the active plot is to be colored.\n\n### Cells/Materials Tabs:\n\n  - Double-click Name field to edit cell/material name. Edited names will not be reflected in .xml files.\n  - Double-click Color field to select a color for the cell/material in the active plot.\n  - Double-click SVG/RBG field to enter a new color for the cell/material. May\n    be entered as SVG color, or RGB value (with or without parentheses).\n  - Right-click Color or SVG/RGB field to clear. This will reset the color to the default value.\n  - Click Mask field to mask/unmask cell/material in active plot.\n  - Click Highlight field to highlight/unhighlight cell/material in active plot.\n  - Apply Changes : Apply changes made to active plot, reload plot image.\n  - Close : Close the color options dialog.\n\n  **Note: Fields appear dynamically based on whether Masking/Highlighting are enabled or disabled.**\n\n### On Open:\n\n  Application windows are restored to their previous locations and sizes.  If\n  the .xml files match those of the previous sessions, the plot model will be\n  restored to its previous state.\n\n### On Close:\n  Application status, including window size and location, will be saved.  The\n  current state of the plot model, including current plot and up to 10\n  previous/subsequent plots (i.e. for undo/redo) will be saved.  Active plot\n  changes that have not been applied will be lost.\n\n## Developer Notes\n\n### Structure\n\n  - openmc-plotter: primary executable. contains the major program logic used to interact with the application.\n  - plotmodel.py: contains the underlying data structure of the plot model and application state.\n  - plotgui.py: contains the bulk of the graphical elements of the application.\n  - overlays.py: contains screen overlays seen in the GUI. Just keyboard shortcuts for now.\n  - plot_colors.py: module with convenience functions for generating and modifying RGB/RGBA colors\n  - assets: directory containing icons and images for the application\n\n### Terminology\n\n#### Plot Image\n  The plot slice image in the central area of the application.\n\n#### Active Plot\n  Plot settings that are changed as dock and color dialog fields are changed.  Not necessarily reflected in the plot image.\n\n#### Current Plot\n  Plot settings currently displayed in the plot image.\n\nApplying changes causes the active plot to become the current plot, and a new plot image to be generated.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/openmc-dev/plotter",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/openmc-dev/plotter",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "openmc-plotter",
    "package_url": "https://pypi.org/project/openmc-plotter/",
    "platform": null,
    "project_url": "https://pypi.org/project/openmc-plotter/",
    "project_urls": {
      "Download": "https://github.com/openmc-dev/plotter",
      "Homepage": "https://github.com/openmc-dev/plotter",
      "Issue Tracker": "https://github.com/openmc-dev/plotter/issues",
      "Source Code": "https://github.com/openmc-dev/plotter"
    },
    "release_url": "https://pypi.org/project/openmc-plotter/0.3.1/",
    "requires_dist": [
      "openmc (>0.12.2)",
      "numpy",
      "matplotlib",
      "PySide2",
      "pytest ; extra == 'test'",
      "pytest-qt ; extra == 'test'",
      "vtk ; extra == 'vtk'"
    ],
    "requires_python": ">=3.6",
    "summary": "Plotting tool for OpenMC models and tally data",
    "version": "0.3.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17531669,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "adcfe587d062b82e5b4dae17c0d5694bf1ef9c77d4fc919e6755bb47628dd519",
          "md5": "2c316c0a9e58fcad9bb859abcc2ff7d5",
          "sha256": "638c44f9c74ecaa7df6c4ac5815affd8fdba712d345df6451708a1e83fe3d482"
        },
        "downloads": -1,
        "filename": "openmc_plotter-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2c316c0a9e58fcad9bb859abcc2ff7d5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 85842,
        "upload_time": "2021-06-25T13:11:52",
        "upload_time_iso_8601": "2021-06-25T13:11:52.842020Z",
        "url": "https://files.pythonhosted.org/packages/ad/cf/e587d062b82e5b4dae17c0d5694bf1ef9c77d4fc919e6755bb47628dd519/openmc_plotter-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a6d5eef952b7f08ab9eb9fdab53072458f6296af39355137ff8599da4259ced",
          "md5": "19e9f1a630281aa715e43f2534d822f8",
          "sha256": "2966ca9781e1bd1b44528a571da30fa5cf302fdecac1a10a6a881cc7e2959aa2"
        },
        "downloads": -1,
        "filename": "openmc-plotter-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "19e9f1a630281aa715e43f2534d822f8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 86889,
        "upload_time": "2021-06-25T13:11:53",
        "upload_time_iso_8601": "2021-06-25T13:11:53.920033Z",
        "url": "https://files.pythonhosted.org/packages/9a/6d/5eef952b7f08ab9eb9fdab53072458f6296af39355137ff8599da4259ced/openmc-plotter-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c42f28ec959e384e80aeb09951916ce1e4093480883b74d9b01a80a8d6af9737",
          "md5": "2576a78682b26ec901ac02212fe851b8",
          "sha256": "f4fc486d89aa0e6e4b46495f01cc93bc84f144f88359effa16a0043160bb9336"
        },
        "downloads": -1,
        "filename": "openmc_plotter-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2576a78682b26ec901ac02212fe851b8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 86237,
        "upload_time": "2022-03-03T19:00:10",
        "upload_time_iso_8601": "2022-03-03T19:00:10.499068Z",
        "url": "https://files.pythonhosted.org/packages/c4/2f/28ec959e384e80aeb09951916ce1e4093480883b74d9b01a80a8d6af9737/openmc_plotter-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3b094937e345b04dfff7d415c7ba2e6e77725e037c239b9d6228fdeb6c762ac1",
          "md5": "ad968946bf4abf8bea0cd591095dc1db",
          "sha256": "06e9e17f12f119e81b9fbf80cee9276cf3ec144a6be9f783b304646d357c32b4"
        },
        "downloads": -1,
        "filename": "openmc-plotter-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ad968946bf4abf8bea0cd591095dc1db",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 87949,
        "upload_time": "2022-03-03T19:00:12",
        "upload_time_iso_8601": "2022-03-03T19:00:12.085234Z",
        "url": "https://files.pythonhosted.org/packages/3b/09/4937e345b04dfff7d415c7ba2e6e77725e037c239b9d6228fdeb6c762ac1/openmc-plotter-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d7f7fb7331586db9e7bbe189507304bb9a4779fc5e2c7430977b02e08d0d262f",
          "md5": "b12bb60d3c8495a55365982059bc3e86",
          "sha256": "c328b584230b7e465a3cc63072226d7933342eca7b019e6253a97c0af6423797"
        },
        "downloads": -1,
        "filename": "openmc_plotter-0.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b12bb60d3c8495a55365982059bc3e86",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 92407,
        "upload_time": "2023-03-31T18:46:16",
        "upload_time_iso_8601": "2023-03-31T18:46:16.151781Z",
        "url": "https://files.pythonhosted.org/packages/d7/f7/fb7331586db9e7bbe189507304bb9a4779fc5e2c7430977b02e08d0d262f/openmc_plotter-0.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee4264f62504d1e1f4fb996493510fb905064167fdc83beda91b03d6ed79f3aa",
          "md5": "9e0c67656f682a1bd2a038b3ffb061a9",
          "sha256": "22a1d954bd91a84ed282282cbec7e1d88f70876bfe0afde90a765a1668a5b3a8"
        },
        "downloads": -1,
        "filename": "openmc-plotter-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9e0c67656f682a1bd2a038b3ffb061a9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 94424,
        "upload_time": "2023-03-31T18:46:17",
        "upload_time_iso_8601": "2023-03-31T18:46:17.691462Z",
        "url": "https://files.pythonhosted.org/packages/ee/42/64f62504d1e1f4fb996493510fb905064167fdc83beda91b03d6ed79f3aa/openmc-plotter-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d7f7fb7331586db9e7bbe189507304bb9a4779fc5e2c7430977b02e08d0d262f",
        "md5": "b12bb60d3c8495a55365982059bc3e86",
        "sha256": "c328b584230b7e465a3cc63072226d7933342eca7b019e6253a97c0af6423797"
      },
      "downloads": -1,
      "filename": "openmc_plotter-0.3.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b12bb60d3c8495a55365982059bc3e86",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 92407,
      "upload_time": "2023-03-31T18:46:16",
      "upload_time_iso_8601": "2023-03-31T18:46:16.151781Z",
      "url": "https://files.pythonhosted.org/packages/d7/f7/fb7331586db9e7bbe189507304bb9a4779fc5e2c7430977b02e08d0d262f/openmc_plotter-0.3.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ee4264f62504d1e1f4fb996493510fb905064167fdc83beda91b03d6ed79f3aa",
        "md5": "9e0c67656f682a1bd2a038b3ffb061a9",
        "sha256": "22a1d954bd91a84ed282282cbec7e1d88f70876bfe0afde90a765a1668a5b3a8"
      },
      "downloads": -1,
      "filename": "openmc-plotter-0.3.1.tar.gz",
      "has_sig": false,
      "md5_digest": "9e0c67656f682a1bd2a038b3ffb061a9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 94424,
      "upload_time": "2023-03-31T18:46:17",
      "upload_time_iso_8601": "2023-03-31T18:46:17.691462Z",
      "url": "https://files.pythonhosted.org/packages/ee/42/64f62504d1e1f4fb996493510fb905064167fdc83beda91b03d6ed79f3aa/openmc-plotter-0.3.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}