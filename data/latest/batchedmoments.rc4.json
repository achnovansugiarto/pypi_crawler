{
  "info": {
    "author": "Sebastian Brodehl",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: End Users/Desktop",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: OS Independent",
      "Operating System :: POSIX :: Linux",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering"
    ],
    "description": "# pyBatchedMoments\n\n[![pypi-version](https://img.shields.io/pypi/v/batchedmoments)][pypi]\n[![python-version](https://img.shields.io/pypi/pyversions/batchedmoments)][pypi]\n[![Build, Test & Deploy](https://github.com/sbrodehl/pyBatchedMoments/workflows/Build,%20Test%20&%20Deploy%20to%20PyPI/badge.svg)](https://github.com/sbrodehl/PyBatchedMoments/actions?query=workflow%3A%22Build%2C+Test+%26+Deploy+to+PyPI%22)\n\n[pyBatchedMoments][pyBM-gh] is a Python library for computing (batch-wise) sample statistics,\nsuch as mean, variance, standard deviation, skewness and kurtosis.\n\nIn certain applications it is needed to compute simple statistics of a population, but with _textbook_ formulae\nthe calculation can suffer from loss of precision and can be numerically unstable.\nAdditionally, for large populations only a single pass over the values is feasible, therefore,\nan incremental (_batch-wise_) approach is needed.\n\n## Installation\n\nTo install the current release, run\n```shell\npip install batchedmoments\n```\n\n### From Source\n\nTo install the latest development version (e.g. in [_editable mode_](https://pip.pypa.io/en/stable/reference/pip_install/#cmdoption-e)), run\n```shell\ngit clone https://github.com/sbrodehl/pyBatchedMoments.git\npip install -e pyBatchedMoments\n```\n\n## Examples\n\nWe start with the simple use case of sample statistics of some (random) numbers.\n\n```python\nfrom batchedmoments import BatchedMoments\n\ndata = [2, 8, 0, 4, 1, 9, 9, 0]\nbm = BatchedMoments()\nbm(data)\n\n# use computed values\n# bm.mean, bm.std, ...\n```\nThe result is equivalent to [numpy](https://numpy.org/doc/stable/reference/routines.statistics.html) (`mean`, `std` and `var`)\nand [scipy.stats](https://docs.scipy.org/doc/scipy/reference/stats.html) (`skew` and `kurtosis`).\n\n### Batched Computation\n\nWhere [pyBatchedMoments][pyBM-gh] really shines is when the data is not available at once.\nIn this case, the data can be batched (split in _usable_ parts), and the statistics can be computed batch-wise.\n\n```python\nfrom batchedmoments import BatchedMoments\n\n# a generator function which returns batches of data\ndata_iter = iter(list(range(n, n + 10)) for n in range(0, 1000, 10))\n\nbm = BatchedMoments()\nfor batch in data_iter:\n    bm(batch)\n\n# use computed values\n# bm.mean, bm.std, ...\n```\n\n### Distributed / Parallel Computation\n\nThe sample statistics of single batches can be computed independently and later be combined with the `add` operator.\nThe following example shows a multiprocessing use case, but the batches can be computed distributed among different\ncomputers (nodes) as well.\n\n```python\nimport multiprocessing\nfrom multiprocessing import Pool\nfrom batchedmoments import BatchedMoments\n\n# a generator function which returns batches of data\ndata = iter(list(range(n, n + 10)) for n in range(0, 1000, 10))\n# create object and initialize with first batch of data\nbm = BatchedMoments()(next(data))\nwith Pool(processes=multiprocessing.cpu_count()) as pool:\n    for dbm in pool.imap_unordered(BatchedMoments(), data):\n        bm += dbm\n\n# use computed values\n# bm.mean, bm.std, ...\n```\n\n### Reduction of Axes\n\nThe `axis=...` keyword allows specifying axis or axes along which the sample statistics are computed.\nThe default (`None`) is to compute the sample statistics of the flattened array.\n\nWorking with data of shape `(1000, 3, 28, 28)` and specifying `axis=0` the computed statistics will have shape `(3, 28, 28)`.\nIf `axis=(0, 2, 3)` the computed statistics will have shape `(3,)`.\n\nUsing the `reduce` method the shape of the computed statistics can be further reduced at a later stage.\nE.g. with data of shape `(1000, 3, 28, 28)` and `axis=(2, 3)` the computed statistics will have shape `(1000, 3)`.\nBy using `reduce(0)` the computed statistics will be reduced to shape `(3,)`.\n\n### Machine Learning Use Case\n\nA prime example, where [pyBatchedMoments][pyBM-gh] can be used, is to compute sample statistics of machine learning data sets.\nHere we use [torchvision.datasets](https://pytorch.org/docs/stable/torchvision/datasets.html) to compute sample mean and sample standard deviation needed for normalization of the data set.\n\n```python\nfrom torch.utils.data import DataLoader\nfrom torchvision import transforms, datasets\nfrom batchedmoments import BatchedMoments\n\nimage_data = datasets.FashionMNIST(\n    \"/tmp/FashionMNIST\",\n    download=True,\n    train=True,\n    transform=transforms.Compose([\n        transforms.ToTensor()\n    ])\n)\ndata_loader = DataLoader(\n    image_data,\n    batch_size=1024,\n)\n\nbm = BatchedMoments(axis=(0, 2, 3))\nfor imgs, _ in data_loader:\n    bm(imgs.numpy())\n\n# use computed values\n# bm.mean, bm.std, ...\n# mean=0.28604060219395394 std=0.35302424954262396\n```\n\n## License\n\npyBatchedMoments uses a MIT-style license, as found in [LICENSE](LICENSE) file.\n\n\n[pypi]: https://pypi.org/project/batchedmoments\n[pyBM-gh]: https://github.com/sbrodehl/pyBatchedMoments",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sbrodehl/pyBatchedMoments",
    "keywords": "batchedmoments",
    "license": "MIT License",
    "maintainer": "Sebastian Brodehl",
    "maintainer_email": "",
    "name": "batchedmoments",
    "package_url": "https://pypi.org/project/batchedmoments/",
    "platform": "",
    "project_url": "https://pypi.org/project/batchedmoments/",
    "project_urls": {
      "Homepage": "https://github.com/sbrodehl/pyBatchedMoments"
    },
    "release_url": "https://pypi.org/project/batchedmoments/1.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Computing (batch-wise) sample statistics.",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9295396,
  "releases": {
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "12bb482d9eb23ab97ce454f68a93ea9d79a4c367ca1a828d2950a3a90ea44250",
          "md5": "86cf9df53a05eb792ff2cd5f755df22b",
          "sha256": "f4dcbde6401ea1957e355f5f94e1694287ee58c23f3face7c13844e5408015ef"
        },
        "downloads": -1,
        "filename": "batchedmoments-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "86cf9df53a05eb792ff2cd5f755df22b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6318,
        "upload_time": "2021-02-01T11:56:19",
        "upload_time_iso_8601": "2021-02-01T11:56:19.236147Z",
        "url": "https://files.pythonhosted.org/packages/12/bb/482d9eb23ab97ce454f68a93ea9d79a4c367ca1a828d2950a3a90ea44250/batchedmoments-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "755b2b45c028f2290725bf97c60a251b2fc20b386aeb66d0ce071ff98410a677",
          "md5": "3766ffdb72f91d6d1294fd32eb2b1de2",
          "sha256": "f6f1d64f947fb7be10c4cf8c67f3b2b90cbb8e8ce5b959fd0d4b285d025d5949"
        },
        "downloads": -1,
        "filename": "batchedmoments-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3766ffdb72f91d6d1294fd32eb2b1de2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9317,
        "upload_time": "2021-02-01T19:55:41",
        "upload_time_iso_8601": "2021-02-01T19:55:41.508780Z",
        "url": "https://files.pythonhosted.org/packages/75/5b/2b45c028f2290725bf97c60a251b2fc20b386aeb66d0ce071ff98410a677/batchedmoments-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f38fdda0831443790578a7905844c9d9c176b6d7265f0aa888a406ea93a02e77",
          "md5": "389a6d36a2e61e7f2c4aee1e10a7fe13",
          "sha256": "e79fe91d38fd4210e9e752c3cbd7ca4467288d17c824b454a96604d9f5a02e56"
        },
        "downloads": -1,
        "filename": "batchedmoments-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "389a6d36a2e61e7f2c4aee1e10a7fe13",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9305,
        "upload_time": "2021-02-01T20:16:48",
        "upload_time_iso_8601": "2021-02-01T20:16:48.137746Z",
        "url": "https://files.pythonhosted.org/packages/f3/8f/dda0831443790578a7905844c9d9c176b6d7265f0aa888a406ea93a02e77/batchedmoments-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b76201a74667cae4939a15be5157d61b8785454a45a14d664af0acf6812e291c",
          "md5": "9662765b0006ead9a0c8e8ddcf81da72",
          "sha256": "1092876777ec1a04b7165a3d7cea25993bdb23721688ea1dcc5357e49d27b83d"
        },
        "downloads": -1,
        "filename": "batchedmoments-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "9662765b0006ead9a0c8e8ddcf81da72",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9538,
        "upload_time": "2021-02-02T12:25:32",
        "upload_time_iso_8601": "2021-02-02T12:25:32.553949Z",
        "url": "https://files.pythonhosted.org/packages/b7/62/01a74667cae4939a15be5157d61b8785454a45a14d664af0acf6812e291c/batchedmoments-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b76201a74667cae4939a15be5157d61b8785454a45a14d664af0acf6812e291c",
        "md5": "9662765b0006ead9a0c8e8ddcf81da72",
        "sha256": "1092876777ec1a04b7165a3d7cea25993bdb23721688ea1dcc5357e49d27b83d"
      },
      "downloads": -1,
      "filename": "batchedmoments-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "9662765b0006ead9a0c8e8ddcf81da72",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 9538,
      "upload_time": "2021-02-02T12:25:32",
      "upload_time_iso_8601": "2021-02-02T12:25:32.553949Z",
      "url": "https://files.pythonhosted.org/packages/b7/62/01a74667cae4939a15be5157d61b8785454a45a14d664af0acf6812e291c/batchedmoments-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}