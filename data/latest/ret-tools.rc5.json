{
  "info": {
    "author": "\"Dylan Riley\"",
    "author_email": "rileydylan581@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# ret-tools\n\nret-tools is a small library used for formating function responses, handling function exceptions, executing and handling asynchronous tasks. View examples below:\n\n## Handling Functions\n\nret-tools is built off two main functions: `run()` and `run_async()`\n\nboth return a RetResp with four properties: \n\nsuccess (bool True or False),\nmsg (\"Success\" or Exception),\ntb (None or Exception Traceback),\nresp (None or response of original function)\n\nRetResp can be treated as \n\na list `[success, msg, tb, resp]`,\na dict `{\"success\": True, \"msg\": \"Success\", \"tb\": None, \"resp\": \"some random data\"}`,\nor a str: `Succeeded: some random data`,\n\nExample of `run()`:\n```python3\nimport ret_tools as rt\n\ndef func(name):\n    return \"Hi {}\".format(name)\n\n\ndef main():\n    ret = rt.run(func, (\"John Smith\"))\n    \n    print(ret.success)\n    # True\n    \n    print(ret.msg)\n    # Success\n    \n    print(ret.resp)\n    # \"Hi John Smith\"\n\n    print(tuple(ret))\n    # (True, \"Success\", None, \"Hi John Smith\")\n\nif __name__ == \"__main__\":\n    main()\n```\n\nExample of `run_async()`\n```python3\nimport ret_tools as rt\nimport asyncio\n\nasync def afunc(name):\n    await asyncio.sleep(1)\n    return \"HI {}\".format(name)\n\ndef main():\n    ret = asyncio.run(rt.run_async(afunc(\"John Smith\")))\n    \n    print(ret.success)\n    # True\n    \n    print(ret.msg)\n    # Success\n    \n    print(ret.resp)\n    # \"Hi John Smith\"\n\n    print(tuple(ret))\n    # (True, \"Success\", None, \"Hi John Smith\")\n\nif __name__ == \"__main__\":\n    main()\n\n```\n\nIf a function throws an Exception the response is as follows:\n```python3\nimport ret_tools as rt\n\ndef func():\n    raise Exception(\"Something went wrong\")\n\n\ndef main():\n    ret = rt.run(func)\n    \n    print(ret.success)\n    # False\n    \n    print(ret.msg)\n    # Exception(\"Something went wrong\")\n    \n    print(ret.resp)\n    # None\n\n    print(tuple(ret))\n    # (False, Exception(\"Something went wrong\"), \"Traceback: ...\", None)\n\nif __name__ == \"__main__\":\n    main()\n```\n\nret-tools can be configured with a RetConfig object, you can specify a failed callback, error callback, and a task callback\n\nfailed callback `ret_config.ff` gets called when a function throws an error, this can change on a function to function basis, you can also specify custom arguments, an example would be a websocket client that closes the connection when a send or recv fails\n\nerror callback `ret_config.ec` gets called every time a function throws an error, it is global and can't change on a function-to-function basis, this can be used for logging purposes, the argument will be a RetResp\n\ntask callback `ret_config.tc` gets called when a async task finishes, this can be changed on a task to task basis, the argument will be a RetResp\n\nExample:\n```python3\nimport ret_tools as rt\n\ndef error_callback(err_resp):\n    print(err_resp) # Failed: Exception Text\n\nret_config = rt.RetConfig(ec=error_callback)\nrt.init(ret_config)\n\ndef failed(function_name, other_arg):\n    print(\"{} Failed, {}\".format(function_name, other_arg))\n    # Do something if function fails\n    \ndef func(*args):\n    raise Exception(\"Function Failed\")\n    \ndef main():\n    #            function, fargs, failed_func, *failed_args\n    ret = rt.run(func,     (),    failed,      \"Name of function\", \"some other argument\")\n    \n    print(ret.success) # False\n    \nif __name__ == \"__main__\":\n    main()\n```\n\n## Function Decorators\n\nret-tools offer two different function decorators: `@def_ret()` and `@async_ret()`\neach decorator will pass the function through `rt.run()` or `rt.run_async()`\n\nExample:\n```python3\nimport ret_tools as rt\n\n@rt.def_ret()\ndef func():\n    return \"some random data\"\n    \ndef main():\n    ret = func()\n    print(ret.success) # True\n    print(ret.resp) # \"some random data\"\n    print(tuple(ret)) # (True, \"Success\", None, \"some random data\")\n    \nif __name__ == \"__main__\":\n    main()\n```\n\nYou can also specify custom failed callbacks through the decorators\n\nExample:\n```python3\nimport ret_tools as rt\n\ndef function_failed(arg1, arg2):\n    print(\"Failed: {} {}\".format(arg1, arg2)) # Failed: func failed\n    \n@rt.def_ret(function_failed, \"func\", \"failed\")\ndef func():\n    raise Exception(\"Failed\")\n    \ndef main():\n    ret = func()\n    print(ret.success) # True\n    print(ret.msg) # Failed\n    \nif __name__ == \"__main__\":\n    main()\n```\n\n## Handling Tasks\n\nret-tools can also be used to handle asynchronous tasks, there are two main methods: `create_task()`, `wait_task()`\n\nExample of `create_task()`:\n```python3\nimport ret_tools as rt\nimport asyncio\n\ndef task_callback(resp): # response is a RetResp object\n    print(resp) # Succeeded: Hi John Smith\n\nasync def task(name):\n    await asyncio.sleep(1)\n    return \"Hi {}\".format(name)\n    \ndef main():\n    t = rt.create_task(task(\"John Smith\"), task_callback) # returns asyncio.Task\n    \nif __name__ == \"__main__\":\n    main()\n```\n\n`create_task()` works even when no asyncio event loop is present, ret-tools will detect if a loop is running, if not it will create a new loop and run it in a seperate thread then it will execute the task from there\n\nExample of `wait_task()`:\n```python3\nimport ret_tools as rt\nimport asyncio\n    \nasync def task(name):\n    await asyncio.sleep(1)\n    return \"Hi {}\".format(name)\n    \ndef main():\n    resp = rt.wait_task(task(\"John Smith\"))\n    \n    print(resp) # Succeeded: Hi John Smith\n    \nasync def async_main():\n    resp = await rt.run_async(task(\"John Smith\"))\n    print(resp) # Succeeded: Hi John Smith\n    \n    resp = await rt.create_task(task(\"John Smith\"))\n    print(resp) # Succeeded: Hi John Smith\n    \nif __name__ == \"__main__\":\n    main()\n    asyncio.run(async_main())\n```\n`rt.wait_task()` is equivilent to `await rt.create_task()` which is equivilent to `await rt.run_async()`\n\nIf there is no event loop use `rt.wait_task()`, If you have an event loop and you want the response imediately use `await rt.run_async()`, if you want the response in a callback use `rt.create_task(task(), callback)`\n\n## Good and Bad\n\nRetResp's are built off two functions `good()` and `bad()`\n\n`good()` returns `(True, \"Success\", None)` always\n\n`bad()` returns `(False, Exception, Traceback)` using `sys.exc_info()` and `traceback.print_exc()`\n\nExample:\n```python3\nimport ret_tools as rt\n\ndef main():\n    ret = None\n    try:\n        print(\"Do Something Here\")\n        ret = rt.good()\n    except:\n        ret = rt.bad()\n    print(tuple(ret)) # (True, \"Success\", None)\n    \n    ret = None\n    try:\n        raise Exception(\"Something went wrong\")\n        ret = rt.good() # Won't happen because exception is raised\n    except:\n        ret = rt.bad()\n    print(tuple(ret)) # (False, Exception(\"Something went wrong\"), \"Traceback: ...\")\n    \nif __name__ == \"__main__\":\n    main()\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/rileydylan581/ret-tools",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ret-tools",
    "package_url": "https://pypi.org/project/ret-tools/",
    "platform": null,
    "project_url": "https://pypi.org/project/ret-tools/",
    "project_urls": {
      "Homepage": "https://github.com/rileydylan581/ret-tools"
    },
    "release_url": "https://pypi.org/project/ret-tools/1.0.4/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Easy-to-use tools for handling function responses, handling exceptions, and creating asynchronous tasks.",
    "version": "1.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13444562,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c26f2675b13498cd0c957eb7454c397cd196e4c90bb9042dc976eb16869da5e0",
          "md5": "6027c2ec4614dabdf1c4df006d621aa7",
          "sha256": "01ed28399b14341231469c08e8ba5c2f41c1a5b91b6037d319bcf71ee7546a84"
        },
        "downloads": -1,
        "filename": "ret_tools-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6027c2ec4614dabdf1c4df006d621aa7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 3045,
        "upload_time": "2022-04-06T22:58:39",
        "upload_time_iso_8601": "2022-04-06T22:58:39.262641Z",
        "url": "https://files.pythonhosted.org/packages/c2/6f/2675b13498cd0c957eb7454c397cd196e4c90bb9042dc976eb16869da5e0/ret_tools-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82acadb0ae721ee3c210acf1888bf1b3b3eda4015a2e089e7f80e981278f9262",
          "md5": "5a64e3ec8db41dd1964605384870270f",
          "sha256": "ecf1adb52583361b5a90dbb4a4684ff2bd49783b3b8ed160488d0a04957ec118"
        },
        "downloads": -1,
        "filename": "ret-tools-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5a64e3ec8db41dd1964605384870270f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3213,
        "upload_time": "2022-04-06T22:58:41",
        "upload_time_iso_8601": "2022-04-06T22:58:41.225159Z",
        "url": "https://files.pythonhosted.org/packages/82/ac/adb0ae721ee3c210acf1888bf1b3b3eda4015a2e089e7f80e981278f9262/ret-tools-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "53d151614bfc3c3a4482dd173ce5d8f0c4374936f8b46bbbf8558aeee46c4845",
          "md5": "8031aefb36a967839e13766719f47e9b",
          "sha256": "5140109fed7d5cefe2e334bc1c4f8d86ef0d4af7b105ff6c73435cd4f721a02c"
        },
        "downloads": -1,
        "filename": "ret_tools-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8031aefb36a967839e13766719f47e9b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4703,
        "upload_time": "2022-04-06T23:15:25",
        "upload_time_iso_8601": "2022-04-06T23:15:25.053878Z",
        "url": "https://files.pythonhosted.org/packages/53/d1/51614bfc3c3a4482dd173ce5d8f0c4374936f8b46bbbf8558aeee46c4845/ret_tools-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3dd82900de13be0248ff5ee6e1b8f69d8f5d44b6fa000df4b79ea4e95f75bb18",
          "md5": "60489d489330ff733373f8d8f81a784c",
          "sha256": "3294243d8271338883572eb3af0ddaf6e29e92b5458b442af67fb29224996d46"
        },
        "downloads": -1,
        "filename": "ret-tools-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "60489d489330ff733373f8d8f81a784c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4731,
        "upload_time": "2022-04-06T23:15:26",
        "upload_time_iso_8601": "2022-04-06T23:15:26.599806Z",
        "url": "https://files.pythonhosted.org/packages/3d/d8/2900de13be0248ff5ee6e1b8f69d8f5d44b6fa000df4b79ea4e95f75bb18/ret-tools-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3deaa1e02ea20d5c51840ca8b77e14859b8095c855bd058dd5469fba701827ed",
          "md5": "16607c7e221a83a96ceaeebe8079613f",
          "sha256": "3ea946804f04510aefd67e57a695da86c55941956e18fe1c347fd9bab68f36b5"
        },
        "downloads": -1,
        "filename": "ret_tools-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "16607c7e221a83a96ceaeebe8079613f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4732,
        "upload_time": "2022-04-06T23:18:40",
        "upload_time_iso_8601": "2022-04-06T23:18:40.258561Z",
        "url": "https://files.pythonhosted.org/packages/3d/ea/a1e02ea20d5c51840ca8b77e14859b8095c855bd058dd5469fba701827ed/ret_tools-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c3a027301e74acf068ebea40e4e1f372846098023cbf08237eb39423ca9cee3f",
          "md5": "c536ec76013bde70c19b75c91f244011",
          "sha256": "ad9574624388944d0bea47b6a82cbeb386c33903e2373587bb43fb81e44e63ff"
        },
        "downloads": -1,
        "filename": "ret-tools-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c536ec76013bde70c19b75c91f244011",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4724,
        "upload_time": "2022-04-06T23:18:42",
        "upload_time_iso_8601": "2022-04-06T23:18:42.178159Z",
        "url": "https://files.pythonhosted.org/packages/c3/a0/27301e74acf068ebea40e4e1f372846098023cbf08237eb39423ca9cee3f/ret-tools-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bc3e403070e03a40b4ae3e896684464b24cde315c964a6ec1cc1c5f8e26e059d",
          "md5": "23b9fa8c36255a19bfb3d9a85a3effb2",
          "sha256": "f97590c7d960421353639d7433c3fa8a4a2b597d968bde3384565fb255abe78d"
        },
        "downloads": -1,
        "filename": "ret_tools-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "23b9fa8c36255a19bfb3d9a85a3effb2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4811,
        "upload_time": "2022-04-06T23:25:52",
        "upload_time_iso_8601": "2022-04-06T23:25:52.628085Z",
        "url": "https://files.pythonhosted.org/packages/bc/3e/403070e03a40b4ae3e896684464b24cde315c964a6ec1cc1c5f8e26e059d/ret_tools-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b11eeb5ad8dc354cdd4729540ec9112d20835bae15ee9a3127601c7524a900c",
          "md5": "e1e08438d3e1c76595d1ec6cc7ae67d0",
          "sha256": "010490348355a57a07aeadd6b3696f9985fd23df04dce1327dcd0cdf7c12947c"
        },
        "downloads": -1,
        "filename": "ret-tools-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "e1e08438d3e1c76595d1ec6cc7ae67d0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4792,
        "upload_time": "2022-04-06T23:25:54",
        "upload_time_iso_8601": "2022-04-06T23:25:54.205212Z",
        "url": "https://files.pythonhosted.org/packages/8b/11/eeb5ad8dc354cdd4729540ec9112d20835bae15ee9a3127601c7524a900c/ret-tools-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4e0a9ed54ba1391b280f212d37c0c0b22bd03e12696a23b5c9fa3a0c4adfb392",
          "md5": "235985f84b4465865ff6ec5f7b0b2d95",
          "sha256": "cc692188ed02c3867738dd3476c2dcc7923d65aaa3fde0da1878f80e197837df"
        },
        "downloads": -1,
        "filename": "ret_tools-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "235985f84b4465865ff6ec5f7b0b2d95",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5023,
        "upload_time": "2022-04-07T17:56:12",
        "upload_time_iso_8601": "2022-04-07T17:56:12.205250Z",
        "url": "https://files.pythonhosted.org/packages/4e/0a/9ed54ba1391b280f212d37c0c0b22bd03e12696a23b5c9fa3a0c4adfb392/ret_tools-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f3c5453c0a53df59315652f7dfd6a7f45a621eef1f98a6f56d9650fc2af9654",
          "md5": "9685680e91f94c94cbcd543191a340e7",
          "sha256": "2adeb847b65f2841c113a656afdf74290921a9b18c15979453e630ca4082a7e4"
        },
        "downloads": -1,
        "filename": "ret-tools-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "9685680e91f94c94cbcd543191a340e7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5000,
        "upload_time": "2022-04-07T17:56:13",
        "upload_time_iso_8601": "2022-04-07T17:56:13.833482Z",
        "url": "https://files.pythonhosted.org/packages/0f/3c/5453c0a53df59315652f7dfd6a7f45a621eef1f98a6f56d9650fc2af9654/ret-tools-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4e0a9ed54ba1391b280f212d37c0c0b22bd03e12696a23b5c9fa3a0c4adfb392",
        "md5": "235985f84b4465865ff6ec5f7b0b2d95",
        "sha256": "cc692188ed02c3867738dd3476c2dcc7923d65aaa3fde0da1878f80e197837df"
      },
      "downloads": -1,
      "filename": "ret_tools-1.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "235985f84b4465865ff6ec5f7b0b2d95",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 5023,
      "upload_time": "2022-04-07T17:56:12",
      "upload_time_iso_8601": "2022-04-07T17:56:12.205250Z",
      "url": "https://files.pythonhosted.org/packages/4e/0a/9ed54ba1391b280f212d37c0c0b22bd03e12696a23b5c9fa3a0c4adfb392/ret_tools-1.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0f3c5453c0a53df59315652f7dfd6a7f45a621eef1f98a6f56d9650fc2af9654",
        "md5": "9685680e91f94c94cbcd543191a340e7",
        "sha256": "2adeb847b65f2841c113a656afdf74290921a9b18c15979453e630ca4082a7e4"
      },
      "downloads": -1,
      "filename": "ret-tools-1.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "9685680e91f94c94cbcd543191a340e7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 5000,
      "upload_time": "2022-04-07T17:56:13",
      "upload_time_iso_8601": "2022-04-07T17:56:13.833482Z",
      "url": "https://files.pythonhosted.org/packages/0f/3c/5453c0a53df59315652f7dfd6a7f45a621eef1f98a6f56d9650fc2af9654/ret-tools-1.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}