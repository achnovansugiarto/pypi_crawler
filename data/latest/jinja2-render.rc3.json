{
  "info": {
    "author": "Philipp Klaus",
    "author_email": "philipp.l.klaus@web.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: System :: Archiving :: Packaging"
    ],
    "description": "# jinja2-render\n*A Python Tool to Render Jinja2 Templates on the Command Line with Different Contexts*\n\n**jinja2-render** hugely simplifies creating different versions of a text file.\nIt takes a jinja2 Template file as input and renders it to a final document\nusing a context loaded from a Python script.\nIt was invented for use with Dockerfiles but its use case goes far beyond.\n\nThis is useful for example in the following cases:\n\n* The desired document (eg. Dockerfile) contains a lot of repeated statements.\n  In a Jinja2 Template they can be replaced by a [For Loop][].\n* The configuration space for the desired document is large and the differences\n  would be small, so maintaining a single template file is much easier.\n\n### Workflow\n\n```\n                     jinja2-render\n                    (& contexts.py)\n                          â†“\n\nJinja2 Template File            Rendered File\n(eg. Dockerfile.jinja2)   ðŸ¡†    (eg. Dockerfile)\n```\n\n### Synopsis\n\n```\n$ jinja2-render -h\n\nusage: jinja2-render [-h] [-c CONTEXTS] [-f TEMPLATE]\n                     [-o OUTPUT]\n                     [which]\n\nRender a Jinja2 template from the command line.\n\npositional arguments:\n  which        Context to choose. Omit for a list of contexts\n               available in the contexts file (-c).\n               (default: None)\n\noptional arguments:\n  -h, --help   show this help message and exit\n  -c CONTEXTS  The Python file defining the contexts to\n               render the template. (default: ./contexts.py)\n  -f TEMPLATE  The Jinja2 template to use. (default:\n               Dockerfile.jinja2)\n  -o OUTPUT    The output file to write to. (default:\n               Dockerfile)\n```\n\n### Minimal Example\n\nContent of `Dockerfile.jinja2`:\n\n```Dockerfile\nFROM {{ base_img }}\n\nRUN apt-get update \\\n && apt-get install -yq {{ packages | join(' ') }}\n\nRUN echo \"Done!\"\n\n```\n\nContent of `contexts.py`:\n\n```python\nCONTEXTS = {\n    \"v1.0\": {\n        \"base_img\": \"debian:10-slim\",\n        \"packages\": [\"glibc-devel\", \"turboshutdown\"],\n    }\n}\n\n```\n\nCall to `jinja2-render`:\n\n```sh\njinja2-render v1.0\n```\n\nResulting in the following rendered Dockerfile:\n\n```Dockerfile\nFROM debian:10-slim\n\nRUN apt-get update \\\n && apt-get install -yq glibc-devel turboshutdown\n\nRUN echo \"Done!\"\n```\n\n### The Contexts File\n\nThe contexts file (defaults to `./contexts.py`) contains\none ore multiple context definitions to render the template.\nThis includes variables to be substituted, lists to render for loops, etc.\n\n* The contexts file **must** contain a global `CONTEXTS = {}`\n  with keys corresponding to different contexts that can be selected.\n  (*Pro Tipâ„¢*: Instead of a dictionary, this CONTEXTS object could also\n  be a class that derives from dict.)\n* The items in `CONTEXTS` are the actual context handed over to\n  [jinja2.Template.render()](https://jinja.palletsprojects.com/en/2.11.x/api/#jinja2.Template.render).\n  Usually this would also be a dictionary.\n\n### Original Use Case\n\nThe script was originally developed to automate building different configurations\nof the control system software EPICS and it's various modules.\nTraditionally, those modules were installed by a single shell script with\nfixed versions (i.e. synApps), which is bad in the Docker world\nas a build failure at the end if it would require rebuilding everything before.\n\n### How it compares to other templating tools\n\nBy using a Python file to provide the context for the template, much more\nflexibility is possible than with a simple solution such as jinja2-cli or j2cli.\nThey allow to use files such as YAML, INI or JSON as input for variables.\n\nA Python script can - however - in addition to defining static information\nease additional tasks tasks such as dependency management.\nAs an elaborate example of such a use case, have a look at\n[this](https://github.com/pklaus/docker-epics/tree/master/epics_contapps),\nwhere I use a custom class in the `contexts.py` along with additional code\nto validate the resulting context.\n\n### Authors\n\n* Philipp Klaus, University Frankfurt  \n  *initial author*\n* Florian Feldbauer, University Bochum  \n  *further improvements*\n\n[Jinja2 For Loop]: https://jinja.palletsprojects.com/en/2.11.x/templates/#for\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pklaus/jinja2-render",
    "keywords": "Context-dependent Jinja2 Template Rendering CLI Docker Dockerfile",
    "license": "GPL",
    "maintainer": "",
    "maintainer_email": "",
    "name": "jinja2-render",
    "package_url": "https://pypi.org/project/jinja2-render/",
    "platform": "any",
    "project_url": "https://pypi.org/project/jinja2-render/",
    "project_urls": {
      "Homepage": "https://github.com/pklaus/jinja2-render"
    },
    "release_url": "https://pypi.org/project/jinja2-render/1.3/",
    "requires_dist": [
      "jinja2"
    ],
    "requires_python": "",
    "summary": "jinja2-render â€“ A CLI tool to render Jinja2 templates",
    "version": "1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10417780,
  "releases": {
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd7eaf48b569f9b61a02fc48cfcee64b6dfa87c82d6fb757b00aebd74a1441d8",
          "md5": "448b21f92bdc3ad3b555de71146a1e00",
          "sha256": "cef2a4402f81a565e99ef1ac3f791b35903a68ce6b73475495791320230c3f9b"
        },
        "downloads": -1,
        "filename": "jinja2_render-1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "448b21f92bdc3ad3b555de71146a1e00",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 5490,
        "upload_time": "2020-07-03T12:26:58",
        "upload_time_iso_8601": "2020-07-03T12:26:58.999642Z",
        "url": "https://files.pythonhosted.org/packages/bd/7e/af48b569f9b61a02fc48cfcee64b6dfa87c82d6fb757b00aebd74a1441d8/jinja2_render-1.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ec8f8223ac3408304192a78fc32de0b758bda1c676676d10b59e8b13c8ff1279",
          "md5": "8ab8440ec3362aaded7f3993c5480148",
          "sha256": "71d5fadf77dbebdbdf4457aab6bdfceabdab672b2c62f933068ba6f223295ab0"
        },
        "downloads": -1,
        "filename": "jinja2-render-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8ab8440ec3362aaded7f3993c5480148",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4831,
        "upload_time": "2020-07-03T12:27:00",
        "upload_time_iso_8601": "2020-07-03T12:27:00.422723Z",
        "url": "https://files.pythonhosted.org/packages/ec/8f/8223ac3408304192a78fc32de0b758bda1c676676d10b59e8b13c8ff1279/jinja2-render-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6703f35e8e6043f8bd3d82f4c34578022254a02336e00ebc1250b89ba57263a6",
          "md5": "710df80abc945c17666180c95f27f517",
          "sha256": "38b7e1da4fadaa6ad449a65436e3bd12b5dad437f42e48a3a8dd0c9c923b8e18"
        },
        "downloads": -1,
        "filename": "jinja2_render-1.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "710df80abc945c17666180c95f27f517",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 5478,
        "upload_time": "2020-08-24T12:28:52",
        "upload_time_iso_8601": "2020-08-24T12:28:52.648125Z",
        "url": "https://files.pythonhosted.org/packages/67/03/f35e8e6043f8bd3d82f4c34578022254a02336e00ebc1250b89ba57263a6/jinja2_render-1.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6daedb2b8f158b1c1f618fd516694d303a76fb681e9204ecb3d4bd7738496bfe",
          "md5": "847af16052cb4c4fd08be356946de956",
          "sha256": "1d770099a124bd50cf7e440d3964cfe3fa9d0841f0a78efb79088d381e9cec91"
        },
        "downloads": -1,
        "filename": "jinja2-render-1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "847af16052cb4c4fd08be356946de956",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4841,
        "upload_time": "2020-08-24T12:28:54",
        "upload_time_iso_8601": "2020-08-24T12:28:54.211208Z",
        "url": "https://files.pythonhosted.org/packages/6d/ae/db2b8f158b1c1f618fd516694d303a76fb681e9204ecb3d4bd7738496bfe/jinja2-render-1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ddf088012dd34d8878d7318b2b2eca0a7bcddd8e500edbb16211621cf612a5fb",
          "md5": "23c461081bce3c14ad7fbbf52ffbd16f",
          "sha256": "e3ce033fc7ea73be3f86ec185aec6a921c236454be2739d313342aadadac1bcd"
        },
        "downloads": -1,
        "filename": "jinja2_render-1.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "23c461081bce3c14ad7fbbf52ffbd16f",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 5562,
        "upload_time": "2021-05-20T16:27:23",
        "upload_time_iso_8601": "2021-05-20T16:27:23.412569Z",
        "url": "https://files.pythonhosted.org/packages/dd/f0/88012dd34d8878d7318b2b2eca0a7bcddd8e500edbb16211621cf612a5fb/jinja2_render-1.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0279a35e65816ee566bd4197cdaa21bba2cc596afa5627d08d5b0c7e26ec7e3b",
          "md5": "01bf528f27c6039e1ac9655dadc6540e",
          "sha256": "1ca191587d024aefb70129e5d93f073f3db198809662059d30ce90601caea357"
        },
        "downloads": -1,
        "filename": "jinja2-render-1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "01bf528f27c6039e1ac9655dadc6540e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4646,
        "upload_time": "2021-05-20T16:27:25",
        "upload_time_iso_8601": "2021-05-20T16:27:25.211166Z",
        "url": "https://files.pythonhosted.org/packages/02/79/a35e65816ee566bd4197cdaa21bba2cc596afa5627d08d5b0c7e26ec7e3b/jinja2-render-1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ddf088012dd34d8878d7318b2b2eca0a7bcddd8e500edbb16211621cf612a5fb",
        "md5": "23c461081bce3c14ad7fbbf52ffbd16f",
        "sha256": "e3ce033fc7ea73be3f86ec185aec6a921c236454be2739d313342aadadac1bcd"
      },
      "downloads": -1,
      "filename": "jinja2_render-1.3-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "23c461081bce3c14ad7fbbf52ffbd16f",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 5562,
      "upload_time": "2021-05-20T16:27:23",
      "upload_time_iso_8601": "2021-05-20T16:27:23.412569Z",
      "url": "https://files.pythonhosted.org/packages/dd/f0/88012dd34d8878d7318b2b2eca0a7bcddd8e500edbb16211621cf612a5fb/jinja2_render-1.3-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0279a35e65816ee566bd4197cdaa21bba2cc596afa5627d08d5b0c7e26ec7e3b",
        "md5": "01bf528f27c6039e1ac9655dadc6540e",
        "sha256": "1ca191587d024aefb70129e5d93f073f3db198809662059d30ce90601caea357"
      },
      "downloads": -1,
      "filename": "jinja2-render-1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "01bf528f27c6039e1ac9655dadc6540e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4646,
      "upload_time": "2021-05-20T16:27:25",
      "upload_time_iso_8601": "2021-05-20T16:27:25.211166Z",
      "url": "https://files.pythonhosted.org/packages/02/79/a35e65816ee566bd4197cdaa21bba2cc596afa5627d08d5b0c7e26ec7e3b/jinja2-render-1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}