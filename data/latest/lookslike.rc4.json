{
  "info": {
    "author": "kitsunebi",
    "author_email": "me@pyfox.net",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Quality Assurance",
      "Topic :: Software Development :: Testing"
    ],
    "description": "# Lookslike - Simple datatype comparison\n\nLookslike is a library to simplify comparison of two objects (like numbers) within complex structures (like\ndictionaries) in a simple and readable way.\n\nFor example, it can be used to compare JSON data of server responses.\n\nYou can use `Like` objects when comparing dictionaries (or lists) for values that don't match exactly.\n\n```python\nfrom lookslike import Like\nfrom urllib.request import urlopen\nimport json\n\n\ndef test_get_user():\n    server_response = json.load(urlopen(\"http://localhost:8000/api/user?user_id=1\"))\n    assert server_response == {'user-name': 'John Doe',\n                               'uuid': Like(str),\n                               'timestamp': Like(int, lambda value: value > 0)}\n```\n\nLookslike has no external dependencies and less than 100 lines of code with a bit of magic to provide you some sparkle.\n\n## Usage examples\n\n```python\nimport re\nfrom lookslike import Like, utils\n\n# Check for type\n42 == Like(int)  # True\n42 == Like(float)  # False\n\n# Check using regular expressions\n'abc' == Like(re.compile('a.*'))  # True\n'abc' == Like(re.compile('a'))  # False\n123.456 == Like(re.compile(r'\\d+\\.\\d+'))  # True\n\n# Check using custom function\n42 == Like(lambda value: 40 < value < 44)  # True\n\n# Combine multiple checks\n42 == Like(int, lambda value: 40 < value < 44)  # True\n42 == Like(float, lambda value: 40 < value < 44)  # False\n\n# Convert values\n['c', 'b', 'a'] == Like(['a', 'b', 'c'], convert=sorted)  # True\n{'a': 1, 'b': 'not important'} == Like({'a': 1},\n                                       convert=utils.filter_keys(['a']))  # True\n[1, 2, 3, 4, 5] == Like([1, 2, 3], convert=lambda l: [num for num in l if num <= 3])  # True\n\n# Usage in list and dict comparisons\n[1, 2, 3] == [1, Like(int), 3]  # True\n{'a': 1, 'b': 0.5} == {'a': 1, 'b': Like(float, lambda num: 0 <= num <= 1)}  # True\n\n# Complex server response example\ndef test_server_response():\n    server_response = {  # This is your test object of course\n        'response_id': 42,\n        'timestamp': 2134567.2355,\n        'pets': ['cat', 'dog', 'chicken'],\n        'number_of_pets': 3,\n        'info_url': 'https://petsdb.info/',\n        'vet name': 'Dr. Murphey',\n        'home': {\n            'home_id': 1242,\n            'address': {\n                'street': 'Rabbit street 42',\n                'city': 'New Bark',\n            }\n        }\n    }\n\n    assert server_response == {\n        'response_id': Like(int),\n        'timestamp': Like(float),\n        'pets': Like(['cat', 'chicken', 'dog'], convert=sorted),\n        'number_of_pets': 3,\n        'info_url': Like(lambda value: value.startswith('https://')),\n        'vet name': Like(re.compile(r'Dr\\. .*')),\n        'home': {\n            'home_id': Like(int),\n            'address': Like({'city': 'New Bark'}, convert=utils.filter_keys(['city']))\n        }\n    }  # True\n```\n\n## To consider\n\n**Regular expressions**\n\nWhen you provide a regex pattern, there are some things to consider:\n\n*Pattern has to match the whole string*\n\nWhen you provide a regex Pattern, it has to match the whole string. This is to prevent False-positives. For example:\n\nThis regex `re.match('a', 'abc')` in Python will find a match. But `'abc' == Like(re.compile('a'))` will be False.\nInstead you have to use\n`'abc' == Like(re.compile('a.*')`\n\n*Comparing strings with bytes does not raise an Exception*\n\nNormally, you will get a TypeError when doing something like this `re.match(b'abc', 'a')`\nHowever, this `b'abc' == Like(re.compile('a')` will return False instead without raising an exception.\n\n**String representation**\n\nThe string representation of `Like` objects changes depending on the last comparison result: If the last result was\nFalse, the string representation will be '!Like(...)'. This is to make it easier to find non-matching items in logs.\nNames will change in the debugger and e.g. in the AssertionError raised by pytest.\n\n## Other utilities\n\nIf you want to compare JSON only and want a tool that is more standardized you can have a look\nat [jsonschema](https://pypi.org/project/jsonschema/).\n\nIf you want not only to check, but to convert dictionaries to real Python objects, have a look\nat [pydantic](https://pypi.org/project/pydantic/).\n\nIf you want to find the difference of two dictionaries have a look at [deepdiff](https://pypi.org/project/deepdiff/).\n\n\n## Changes\n\n1.0.0\n\n* Don't panic, just move project status to \"stable\". No breaking changes.\n\n0.9.2\n\n* Add new utility \"is_truthy\".\n\n0.9.1\n\n* Restructure project\n* Add support for old Python versions (up to 3.3)\n* Change representation of \"Like\" to \"!Like\" when last comparison failed. \n\n0.9\n\n* Add lookslike to PyPI\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/pyfox/lookslike/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lookslike",
    "package_url": "https://pypi.org/project/lookslike/",
    "platform": null,
    "project_url": "https://pypi.org/project/lookslike/",
    "project_urls": {
      "Bug Tracker": "https://gitlab.com/pyfox/lookslike/-/issues",
      "Homepage": "https://gitlab.com/pyfox/lookslike/"
    },
    "release_url": "https://pypi.org/project/lookslike/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Compare dictionaries, lists and other objects convenient and readable",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13712612,
  "releases": {
    "0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f9577ee20af7966d7c46b70392a63bc1b51342ac9e5fac016f47f903bc05fcfc",
          "md5": "d9f74a3ac659feb07626b5d23bcf2e5e",
          "sha256": "6a5e240282f238392db8f2f48dfaf42188ed2013847c56f0585400d6344c3ac4"
        },
        "downloads": -1,
        "filename": "lookslike-0.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d9f74a3ac659feb07626b5d23bcf2e5e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5104,
        "upload_time": "2022-03-06T12:32:34",
        "upload_time_iso_8601": "2022-03-06T12:32:34.759491Z",
        "url": "https://files.pythonhosted.org/packages/f9/57/7ee20af7966d7c46b70392a63bc1b51342ac9e5fac016f47f903bc05fcfc/lookslike-0.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a9132a6532f020bcd3e05829a672457fc944277fe6c5dd52087a980eb3486e85",
          "md5": "3e4052f3e3099a6a5adb1f82465c74b1",
          "sha256": "bcd1eb3cef3292259f79f5e0708cf758d7dab1aefed143b72a6272e333efc248"
        },
        "downloads": -1,
        "filename": "lookslike-0.9.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3e4052f3e3099a6a5adb1f82465c74b1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6172,
        "upload_time": "2022-03-07T16:10:21",
        "upload_time_iso_8601": "2022-03-07T16:10:21.907422Z",
        "url": "https://files.pythonhosted.org/packages/a9/13/2a6532f020bcd3e05829a672457fc944277fe6c5dd52087a980eb3486e85/lookslike-0.9.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "87a05dc54fbfb388ced414d7d4f6dc9966a7119e17d69df0574a9a5bc78f8d8b",
          "md5": "5a1c43d3da72190e5e2e275b6683e635",
          "sha256": "1d3b4a86f1bae34fbd50f22fe3d31e6db4b299aec9186e8bbbf045a653104544"
        },
        "downloads": -1,
        "filename": "lookslike-0.9.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5a1c43d3da72190e5e2e275b6683e635",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6294,
        "upload_time": "2022-03-16T18:15:40",
        "upload_time_iso_8601": "2022-03-16T18:15:40.141325Z",
        "url": "https://files.pythonhosted.org/packages/87/a0/5dc54fbfb388ced414d7d4f6dc9966a7119e17d69df0574a9a5bc78f8d8b/lookslike-0.9.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4367c45f3c049f5a049e7b56295e775199c77fa34018f49ca48eed9f01b75367",
          "md5": "dc9bb023a490257799f517925891245c",
          "sha256": "a6f6f92fe5e085d6c701ec3202a8ada92cb8371703c0e2f20b2f38fbcdffa661"
        },
        "downloads": -1,
        "filename": "lookslike-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dc9bb023a490257799f517925891245c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6450,
        "upload_time": "2022-05-04T17:46:33",
        "upload_time_iso_8601": "2022-05-04T17:46:33.613840Z",
        "url": "https://files.pythonhosted.org/packages/43/67/c45f3c049f5a049e7b56295e775199c77fa34018f49ca48eed9f01b75367/lookslike-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4367c45f3c049f5a049e7b56295e775199c77fa34018f49ca48eed9f01b75367",
        "md5": "dc9bb023a490257799f517925891245c",
        "sha256": "a6f6f92fe5e085d6c701ec3202a8ada92cb8371703c0e2f20b2f38fbcdffa661"
      },
      "downloads": -1,
      "filename": "lookslike-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "dc9bb023a490257799f517925891245c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 6450,
      "upload_time": "2022-05-04T17:46:33",
      "upload_time_iso_8601": "2022-05-04T17:46:33.613840Z",
      "url": "https://files.pythonhosted.org/packages/43/67/c45f3c049f5a049e7b56295e775199c77fa34018f49ca48eed9f01b75367/lookslike-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}