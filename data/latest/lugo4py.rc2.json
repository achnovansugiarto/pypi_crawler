{
  "info": {
    "author": "\"Rubens Silva, Lucas Coelho\"",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Lugo4Py - A Lugo Bots Client\n\nLugo4Py is a Python implementation of a client player for [Lugo](https://lugobots.dev/) game. \n\nIt **is not a bot** that plays the game, it is only the client to connect to the game server. \n\nThis package implements many methods that does not affect the player intelligence/behaviour/decisions. It is meant to\nreduce the developer concerns on communication, protocols, attributes, etc.\n\nUsing this client, you just need to implement the Artificial Intelligence of your player and some other few methods to support\nyour strategy (see the project [exampe](./example/simple) folder).\n \n\n### Installation\n\n    pip install lugo4py\n\n### Usage\n\n**Lugo4Py** implements a very basic logic to reduce the code boilerplate. This client will wrap most repetitive\ncode that handles the raw data got by the bot and will identify the player state.\n\nImplement the [Bot interface](./src/lugo4py/stub.py) to handle each player state based on the ball possession.\n\n```python\n\nclass Bot(ABC):\n    @abstractmethod\n    def onDisputing (self, orderSet: lugo4py.OrderSet, snapshot: GameSnapshot) -> OrderSet:\n        # onDisputing is called when no one has the ball possession\n        pass\n\n    @abstractmethod\n    def onDefending (self, orderSet: OrderSet, snapshot: GameSnapshot) -> OrderSet:\n        # OnDefending is called when an opponent player has the ball possession\n        pass\n\n    @abstractmethod\n    def onHolding (self, orderSet: OrderSet, snapshot: GameSnapshot) -> OrderSet:\n        # OnHolding is called when this bot has the ball possession\n        pass\n\n    @abstractmethod\n    def onSupporting (self, orderSet: OrderSet, snapshot: GameSnapshot) -> OrderSet:\n        # OnSupporting is called when a teammate player has the ball possession\n        pass\n\n    @abstractmethod\n    def asGoalkeeper (self, orderSet: OrderSet, snapshot: GameSnapshot, state: PLAYER_STATE) -> OrderSet:\n        # AsGoalkeeper is only called when this bot is the goalkeeper (number 1). This method is called on every turn,\n        # and the player state is passed at the last parameter.\n        pass\n\n    @abstractmethod\n    def gettingReady (self, snapshot: GameSnapshot):\n        # gettingReady will be called before the game starts and after a goal event. You will only need to implement\n        # this method in very rare cases.\n        pass\n```\n\n## Kick-start\n\nYou may copy the code from [the example directory](./examples) to start you bot, but we encourage you to clone \n[The Dummies Py](https://github.com/lugobots/the-dummies-py) project and start from there. The read me file will have all\ndetails you need.\n\n### Deploying you bots\n\nAfter developing your bot, you may share it with other developers.\n\nPlease find the instructions for uploading your bot on [lugobots.dev](https://lugobots.dev).\n\nThere is a Dockerfile template in [the example directory](./examples) to guide you how to create a container.\n\n## Helpers\n\nThere are a many things that you will repeatedly need to do on your bot code, e.g. getting your bot position,\ncreating a move/kick/catch order, finding your teammates positions, etc.\n\nThis package brings a collection of functions that will help you get that data from the game snapshot:\n\n\n```python\n\nconfig = EnvVarLoader()\n\nreader = GameSnapshotReader(snapshot, self.side)\n```\n\n### Mapper and Region\n\nThis package also provides a quite useful pair: the Mapper and Region classes.\n\n#### The Mapper\n\n`Mapper` slices the field in columns and rows, so your bot does not have to care about precise coordinates or the team\nside. The mapper will automatically translate the map position to the bot side.\n\nAnd you may define how many columns/rows your field will be divided into.\n\n```python\n\n# let's create a map 10x5 \nmap = Mapper(10, 5, config.getBotTeamSide())\n\n\ntargetRegion = map.getRegion(5, 2)\n```\n\n#### The Region\n\nThe `Mapper` will slice the field into `Region`s. The Region struct helps your bot to move over the field without caring\nabout coordinates or team side.\n\n```python\n\nregionInFrontOfMe = targetRegion.front()\n\nmoveOrder, err_ := reader.makeOrderMoveMaxSpeed(position, regionInFrontOfMe.center)\n\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://lugobots.dev/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lugo4py",
    "package_url": "https://pypi.org/project/lugo4py/",
    "platform": null,
    "project_url": "https://pypi.org/project/lugo4py/",
    "project_urls": {
      "Homepage": "https://lugobots.dev/",
      "Repository": "https://github.com/lugobots/lugo4py"
    },
    "release_url": "https://pypi.org/project/lugo4py/0.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.9",
    "summary": "Lugo4Py is a Python3 implementation of a client player for Lugo game.",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16988335,
  "releases": {
    "0.0.1a1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cc552fc8a41bb906622c32d0c7c01df28fe81a45c2cdabc9ca65cafd91f7889d",
          "md5": "7ff4a010ce3ea4514edd839f61e747b2",
          "sha256": "805c031a9cdade0edd586989c986bacbf1d8de1f82dafbfe03155bfae590d002"
        },
        "downloads": -1,
        "filename": "lugo4py-0.0.1a1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7ff4a010ce3ea4514edd839f61e747b2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 30258,
        "upload_time": "2023-02-23T03:27:42",
        "upload_time_iso_8601": "2023-02-23T03:27:42.043765Z",
        "url": "https://files.pythonhosted.org/packages/cc/55/2fc8a41bb906622c32d0c7c01df28fe81a45c2cdabc9ca65cafd91f7889d/lugo4py-0.0.1a1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5faadbefdb311a43942b998060a30c46d13ebf0b390c220bbf7f27b4e262223e",
          "md5": "c34d9011dcf11e0abc2828ab3efc5384",
          "sha256": "a04a50d12c23f0bcb15d4f5b736ecbdc03d098a092c0128f582cfb1df4947bc3"
        },
        "downloads": -1,
        "filename": "lugo4py-0.0.1a1.tar.gz",
        "has_sig": false,
        "md5_digest": "c34d9011dcf11e0abc2828ab3efc5384",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 28424,
        "upload_time": "2023-02-23T03:27:44",
        "upload_time_iso_8601": "2023-02-23T03:27:44.240741Z",
        "url": "https://files.pythonhosted.org/packages/5f/aa/dbefdb311a43942b998060a30c46d13ebf0b390c220bbf7f27b4e262223e/lugo4py-0.0.1a1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "78c928b9e1567dd7c9fb26af4d30dfeaafeaccd308c5ce8ab54a9e5ebdaf7b8d",
          "md5": "d82097fc98756ba6670330bb3189b6ea",
          "sha256": "3ae68c2c33515405382ed531ca8cb4e1fd3b762fa14f171a791805fea673a729"
        },
        "downloads": -1,
        "filename": "lugo4py-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d82097fc98756ba6670330bb3189b6ea",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 42309,
        "upload_time": "2023-02-23T04:07:06",
        "upload_time_iso_8601": "2023-02-23T04:07:06.306347Z",
        "url": "https://files.pythonhosted.org/packages/78/c9/28b9e1567dd7c9fb26af4d30dfeaafeaccd308c5ce8ab54a9e5ebdaf7b8d/lugo4py-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c50a00e0513dd6ace457fe508e7eea6dea8b5c3afbe8573c7a6ba319b9243536",
          "md5": "0c79445f2d4a68c42f23f298f883457b",
          "sha256": "7c82c3c1271da58d813c5c1fec74482c3024b6e28cbc35f0ec44c347231c6a80"
        },
        "downloads": -1,
        "filename": "lugo4py-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0c79445f2d4a68c42f23f298f883457b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 34733,
        "upload_time": "2023-02-23T04:07:07",
        "upload_time_iso_8601": "2023-02-23T04:07:07.811630Z",
        "url": "https://files.pythonhosted.org/packages/c5/0a/00e0513dd6ace457fe508e7eea6dea8b5c3afbe8573c7a6ba319b9243536/lugo4py-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "78c928b9e1567dd7c9fb26af4d30dfeaafeaccd308c5ce8ab54a9e5ebdaf7b8d",
        "md5": "d82097fc98756ba6670330bb3189b6ea",
        "sha256": "3ae68c2c33515405382ed531ca8cb4e1fd3b762fa14f171a791805fea673a729"
      },
      "downloads": -1,
      "filename": "lugo4py-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d82097fc98756ba6670330bb3189b6ea",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 42309,
      "upload_time": "2023-02-23T04:07:06",
      "upload_time_iso_8601": "2023-02-23T04:07:06.306347Z",
      "url": "https://files.pythonhosted.org/packages/78/c9/28b9e1567dd7c9fb26af4d30dfeaafeaccd308c5ce8ab54a9e5ebdaf7b8d/lugo4py-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c50a00e0513dd6ace457fe508e7eea6dea8b5c3afbe8573c7a6ba319b9243536",
        "md5": "0c79445f2d4a68c42f23f298f883457b",
        "sha256": "7c82c3c1271da58d813c5c1fec74482c3024b6e28cbc35f0ec44c347231c6a80"
      },
      "downloads": -1,
      "filename": "lugo4py-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "0c79445f2d4a68c42f23f298f883457b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 34733,
      "upload_time": "2023-02-23T04:07:07",
      "upload_time_iso_8601": "2023-02-23T04:07:07.811630Z",
      "url": "https://files.pythonhosted.org/packages/c5/0a/00e0513dd6ace457fe508e7eea6dea8b5c3afbe8573c7a6ba319b9243536/lugo4py-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}