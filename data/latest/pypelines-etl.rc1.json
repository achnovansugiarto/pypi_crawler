{
  "info": {
    "author": "Gabriel Couture",
    "author_email": "gacou54@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# Pypelines-ETL\n\nSimple library to make pipelines or ETL\n\n## Installation\n```bash\n$ pip install pypelines-etl\n```\n\n## Usage\n`pypelines` allows you to build ETL pipeline. For that, you simply need\nthe combination of an `Extractor`, some `Transformer` or `Filter`, and a `Loader`.\n\n### Extractor\nMaking an extractor is fairly easy. Simply decorate a function that return\nthe data with `Extractor`:\n```python\nimport pandas\nfrom pypelines import Extractor\n\n@Extractor\ndef read_iris_dataset(filepath: str) -> pandas.Dataframe:\n    return pandas.read_csv(filepath)\n```\n\n### Transformer or Filter\nThe `Transformer` and `Filter` decorators are equivalent.\n\nMaking a `Transformer` or a `Filter` is even more easy:\n```python\nimport pandas\nfrom pypelines import Filter, Transformer\n\n@Filter\ndef keep_setosa(df: pandas.DataFrame) -> pandas.DataFrame:\n    return df[df['class'] == 'Iris-setosa']\n\n\n@Filter\ndef keep_petal_length(df: pandas.DataFrame) -> pandas.Series:\n    return df['petallength']\n\n\n@Transformer\ndef mean(series: pandas.Series) -> float:\n    return series.mean()\n```\n\nNote that it is possible to combine the `Transformer` and the `Filter`\nto shorten the pipeline syntax. For example:\n```python\nnew_transformer = keep_setosa | keep_petal_length | mean\npipeline = read_iris_dataset('filepath.csv') | new_transformer\nprint(pipeline.value)\n# 1.464\n```\n\n### Loader\nIn order to build a `Loader`, it suffices to decorate a function that takes at\nleast one `data` parameter. \n```python\nimport json\nfrom pypelines import Loader\n\n@Loader\ndef write_to_json(output_filepath: str, data: float) -> None:\n    with open(output_filepath, 'w') as file:\n        json.dump({'mean-petal-lenght': {'value': data, 'units': 'cm'}}, file)\n```\nA `Loader` can be called without the `data` parameter,\nwhich loads arguments (like an URL or a path). For example, calling `write_to_json(output.json)`\nwill not execute the function, but store the `output_filepath` argument until the `Loader` execution in a pipeline.\nThe standard execution of the function (with the `data` argument) is however still usable `write_to_json(output.json, data=1.464)`.\n\n\n### ETL pipeline\n\nTo make and run the pipeline, simply combine the `Extractor` with the `Transformer`, the `Filter` and the `Loader`\n```python\nread_iris_dataset('filepath.csv') | keep_setosa | keep_petal_length | mean | write_to_json('output.json')\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/gacou54/pypelines",
    "keywords": "pipeline,etl",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pypelines-etl",
    "package_url": "https://pypi.org/project/pypelines-etl/",
    "platform": "",
    "project_url": "https://pypi.org/project/pypelines-etl/",
    "project_urls": {
      "Homepage": "https://github.com/gacou54/pypelines",
      "Repository": "https://github.com/gacou54/pypelines"
    },
    "release_url": "https://pypi.org/project/pypelines-etl/0.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.6,<4.0",
    "summary": "Simple library to make pipelines or ETL",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8565907,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b660056dbc12c0f40550166091a46b7b19b920684660c4a00c92a4acffef302",
          "md5": "d2ae6be4ab7ea7995ca53bdf997512a8",
          "sha256": "ba111ae86b316103a019c06058739d6e06b42369829db873560e1dd87879d7c1"
        },
        "downloads": -1,
        "filename": "pypelines_etl-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d2ae6be4ab7ea7995ca53bdf997512a8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 4393,
        "upload_time": "2020-11-02T23:25:18",
        "upload_time_iso_8601": "2020-11-02T23:25:18.769706Z",
        "url": "https://files.pythonhosted.org/packages/2b/66/0056dbc12c0f40550166091a46b7b19b920684660c4a00c92a4acffef302/pypelines_etl-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "be158edab0f202804119b5724b98357a9e51b2f3c2766a33c1088fe6e149be4e",
          "md5": "52f20f3ba7ad4d1fbc719dfc9e68311f",
          "sha256": "1087bf86f7916a2906af0d150fa1be1b98578db31d45f82594542b46fdc5d7e3"
        },
        "downloads": -1,
        "filename": "pypelines-etl-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "52f20f3ba7ad4d1fbc719dfc9e68311f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4.0",
        "size": 3509,
        "upload_time": "2020-11-02T23:25:16",
        "upload_time_iso_8601": "2020-11-02T23:25:16.526793Z",
        "url": "https://files.pythonhosted.org/packages/be/15/8edab0f202804119b5724b98357a9e51b2f3c2766a33c1088fe6e149be4e/pypelines-etl-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2b660056dbc12c0f40550166091a46b7b19b920684660c4a00c92a4acffef302",
        "md5": "d2ae6be4ab7ea7995ca53bdf997512a8",
        "sha256": "ba111ae86b316103a019c06058739d6e06b42369829db873560e1dd87879d7c1"
      },
      "downloads": -1,
      "filename": "pypelines_etl-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d2ae6be4ab7ea7995ca53bdf997512a8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6,<4.0",
      "size": 4393,
      "upload_time": "2020-11-02T23:25:18",
      "upload_time_iso_8601": "2020-11-02T23:25:18.769706Z",
      "url": "https://files.pythonhosted.org/packages/2b/66/0056dbc12c0f40550166091a46b7b19b920684660c4a00c92a4acffef302/pypelines_etl-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "be158edab0f202804119b5724b98357a9e51b2f3c2766a33c1088fe6e149be4e",
        "md5": "52f20f3ba7ad4d1fbc719dfc9e68311f",
        "sha256": "1087bf86f7916a2906af0d150fa1be1b98578db31d45f82594542b46fdc5d7e3"
      },
      "downloads": -1,
      "filename": "pypelines-etl-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "52f20f3ba7ad4d1fbc719dfc9e68311f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6,<4.0",
      "size": 3509,
      "upload_time": "2020-11-02T23:25:16",
      "upload_time_iso_8601": "2020-11-02T23:25:16.526793Z",
      "url": "https://files.pythonhosted.org/packages/be/15/8edab0f202804119b5724b98357a9e51b2f3c2766a33c1088fe6e149be4e/pypelines-etl-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}