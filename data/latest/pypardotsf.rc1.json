{
  "info": {
    "author": "Daigo Tanaka, Anelen Co., LLC",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# PyPardotSF\n\nPyPardotSF is yet another fork of PyPardot/PyPardot4. The main driver for the\nfork is to address\n[Pardot's authentication change](https://help.salesforce.com/articleView?id=000353746) in Sprint 2021 to use\nSalesforce OAuth.\n(As seen on [PyPardot4 Issue #46](https://github.com/mneedham91/PyPardot4/issues/46))\n\nAnother new features of PyPardotSF includes:\n\n- Support both Versions 3 & 4 of Pardot API\n- Support Version 3 [Import API (for Prospects)](https://developer.pardot.com/kb/api-version-3/import/)\n\nThis is a working prototype and the code is currently being cleaned up and\nmore detailed documentation is underway.\n\nI'm keeping the original MIT License by the previous contributors.\nAny contributions, including code, documentations, issue reporting are welcome.\n\n## Install\n\n```\npip install PyPardotSF\n```\n\n## Salesforce OAuth\n\n### Get keys and tokens\n\n```\nfrom pypardot.client import PardotAPI\np = PardotAPI()\np.setup_salesforce_auth_keys()\n```\n\nThen follow the instruction in the command line to get the keys and\nrefresh token.\n\n### Using the API client\n\n```\nfrom pypardot.client import PardotAPI\n\nversion = 3  # 3 or 4\nsf_consumer_key = \"xxxx\"\nsf_consumer_secret = \"yyyy\"\nsf_refresh_token = \"zzzz\"\nbusiness_unit_id = \"0Uv*****\"\n\nCLIENT = PardotAPI(\n    sf_consumer_key=sf_consumer_key,\n    sf_consumer_secret=sf_consumer_secret,\n    sf_refresh_token=sf_refresh_token,\n    business_unit_id=business_unit_id,\n    version=version)\np.prospects.read_by_email(email=\"daigo@anelen.co\")\n```\n\n## Bulk Prospect Import (Ver 3 API only)\n\n```\nfile_name = \"data.csv\"\ncolumns = [\n    {\n        \"field\": \"email\"\n    },\n    {\n        \"field\": \"pardot_field_a\",\n        \"overwrite\": False,\n        \"nullOverwrite\": False\n    },\n    {\n        \"field\": \"pardot_field_b\",\n        \"overwrite\": False,\n        \"nullOverwrite\": False\n    },\n}\nresults = client.importapi.create(\n    file_name=file_name,\n    operation=\"Upsert\",\n    object=\"Prospect\",\n    columns=columns,\n    restoreDeleted=config.get(\"restore_deleted\", False),\n    )\nbatch_id = results[\"id\"]\nresults = client.importapi.update(id=batch_id, state=\"Ready\")\n```\n\nCheck the import status at:\n\nAPI Imports section at \n[Admin->Import->Prospects](https://pi.pardot.com/import/wizardStep1)\n\n## Other endpoints\n\nPlease see the original\n[PyPardot](https://github.com/joshgeller/PyPardot) /\n[PyPardot4](https://github.com/mneedham91/PyPardot4)\ndocs.\n\n## Contributors wanted\n\nMy (Daigo Tanaka) access to Pardot may not be permanent and I curently have\naccess to Ver 3 API. So I would like this repository to be collaborative as\npossible with the active Python programmers who uses Pardot API. This includes\nthe release process. I don't want to be a gate-keeper or a blocker.\n\nAny bug fixes and enhancements are welcome and I trust your good intentions.\nTogether with the fellow contributors, I will help review the code from\ngood design and coding stand point, but I may not be able to run tests myself\nfor the reason I stated above. So please DO include the following sections\nin your pull requests:\n\n1. Reason for code modification. Include GitHub Issue # (create if not exists)\n2. Supporting API version (3, 4 or both)\n3. Manual test description: Method and result.\n4. Risks of change.\n\n## Code of Conduct\n\nPlease read and acknowledge our\n[Code of Conduct](https://github.com/anelendata/PyPardotSF/blob/master/CODE_OF_CONDUCT.md).\nbefore using or contributing to this project.\n\n## Related projects\n\n- target-pardot: A singer.io specification that bulk-updates prospect records\n  to Pardot. The program uses PyPardotSF.\n\nBelow is the README from the original PyPardot4 by Matt Needham, as of this [commit](5b26b871b7d4f6385755b2f3737a299509659ce1).\n\nPyPardot4\n=========\n\nPyPardot was originally created by Josh Geller as a wrapper for Version 3 of the Pardot API.\nI, Matt Needham, have edited PyPardot for compatibility with Version 4 of the Pardot API.\nVersion 4 accommodates multiple prospects with the same email address. If your Pardot org does not have this featured enabled, you must use version 3.\nTo determine if your Pardot org has this feature enabled, [check out this guide](http://developer.pardot.com/kb/api-version-4/).\n\nPyPardot is an API wrapper for [Pardot](http://www.pardot.com/), written in Python.\n\nUsing it is simple:\n\n```python\nfrom pypardot.client import PardotAPI\n\np = PardotAPI(\n  email='email@email.com',\n  password='password',\n  user_key='userkey'\n)\n\np.authenticate()\n\n# Create a new prospect\np.prospects.create(email='joe@company.com', first_name='Joe', last_name='Schmoe')\n\n# Read data about our prospect\nprint(p.prospects.read_by_email(email='joe@company.com'))\n\n```\n\nFeatures\n---\n\n+ Includes all documented Pardot API operations\n+ Handles API key expiration\n+ Detailed API error handling\n\nObject Types & Operations\n---\n\nSupport for the following object types:\n\n+ Accounts\n+ Campaigns\n+ Custom Fields\n+ Custom Redirects\n+ Dynamic Content\n+ Emails\n+ Email Clicks\n+ Email Templates\n+ Forms\n+ Lifecycle Histories\n+ Lifecycle Stages\n+ Lists\n+ List Memberships\n+ Opportunities\n+ Prospects\n+ Prospect Accounts\n+ Tags\n+ TagObjects\n+ Users\n+ Visitor Activities\n+ Visitors\n+ Visits\n\nRequired\n---\n\n+ [requests](http://docs.python-requests.org/en/latest/)\n\nInstallation\n---\n\nInstall PyPardot by running:\n```shell\npip install pypardot4\n```\n\nUsage\n---\n\n### Authentication\n\nTo connect to the Pardot API, you'll need the e-mail address, password, and user key associated with your Pardot account. Your user key is available in the Pardot application under My Settings.\n\nThe client will authenticate before performing other API calls, but you can manually authenticate as well:\n\n\n```python\np = PardotAPI(\n  email='your_pardot_email',\n  password='your_pardot_password',\n  user_key='your_pardot_user_key'\n)\n\np.authenticate()\n```\n\n### Querying Objects\n\nSupported search criteria varies for each object. Check the [official Pardot API documentation](http://developer.pardot.com/) for supported parameters. Most objects support `limit`, `offset`, `sort_by`, and `sort_order` parameters. PyPardot returns JSON for all API queries.\n\n**Note**: Pardot only returns 200 records with each request. Use `offset` to retrieve matching records beyond this limit.\n\n```python\n# Query and iterate through today's prospects\nprospects = p.prospects.query(created_after='yesterday')\ntotal = prospects['total_results'] # total number of matching records\nfor prospect in prospects['prospect']\n  print(prospect.get('first_name'))\n```\n\n### Editing/Updating/Reading Objects\n\nSupported fields varies for each object. Check the [official Pardot API documentation](http://developer.pardot.com/kb/object-field-references/) to see the fields associated with each object. \n\n```python\n# Create a new prospect\np.prospects.create_by_email(email='joe@company.com', first_name='Joe', last_name='Schmoe')\n\n# Update a prospect field (works with default or custom field)\np.prospects.update_field_by_id(id=23839663, field_name='company', field_value='Joes Plumbing')\n\n# Send a one-off email\np.emails.send_to_email(prospect_email='joe@company.com', email_template_id=123)\n```\n\n### Error Handling\n\n#### Handling expired API keys\n\nPardot API keys expire after 60 minutes. If PyPardot detects an 'Invalid API key' error during any API call, it will automatically attempt to re-authenticate and obtain a new valid API key. If re-authentication is successful, the API call will be re-issued. If re-authentication fails, a `PardotAPIError` is thrown.\n\n#### Invalid API parameters\n\nIf an API call is made with missing or invalid parameters, a `PardotAPIError` is thrown. Error instances contain the error code and message corresponding to error response returned by the API. See [Pardot Error Codes & Messages](http://developer.pardot.com/kb/error-codes-messages/) in the official documentation.\n\nPerforming API calls is inherently unsafe, so be sure to catch exceptions:\n\n```python\ntry:\n  p.prospects.create_by_email(email='existing.email.address@company.com')\nexcept PardotAPIError, e:\n  print(e)\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/anelendata/PyPardotSF",
    "keywords": "pardot",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "PyPardotSF",
    "package_url": "https://pypi.org/project/PyPardotSF/",
    "platform": "",
    "project_url": "https://pypi.org/project/PyPardotSF/",
    "project_urls": {
      "Homepage": "https://github.com/anelendata/PyPardotSF"
    },
    "release_url": "https://pypi.org/project/PyPardotSF/0.1.0/",
    "requires_dist": [
      "requests"
    ],
    "requires_python": "",
    "summary": "API wrapper for API v3 & v4 of Pardot marketing automation software.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9135441,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8807f1997075cf11034663de79155cc9da9c9e68a3dfc39181f4c3781483fc79",
          "md5": "d63f5a3d970705e6edc88ce56ee8b8f5",
          "sha256": "50f4b8849f1704d8f26a57f0d6380a28c7b73449987e0f902cb2faf6d117098d"
        },
        "downloads": -1,
        "filename": "PyPardotSF-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d63f5a3d970705e6edc88ce56ee8b8f5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 41477,
        "upload_time": "2021-01-14T19:56:57",
        "upload_time_iso_8601": "2021-01-14T19:56:57.714395Z",
        "url": "https://files.pythonhosted.org/packages/88/07/f1997075cf11034663de79155cc9da9c9e68a3dfc39181f4c3781483fc79/PyPardotSF-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2655b39d4b4df6cdf3c7ca9b8ccbcaa33f2221aa3fd321b35ae877f15b6d78bd",
          "md5": "a6b4513e1c7b8c5f7fe4468ab2be3ef9",
          "sha256": "3ed8ba118cdc2148d1a827fcae85a9fe797dee19a75b546d4a11b505ee760725"
        },
        "downloads": -1,
        "filename": "PyPardotSF-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a6b4513e1c7b8c5f7fe4468ab2be3ef9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19486,
        "upload_time": "2021-01-14T19:56:58",
        "upload_time_iso_8601": "2021-01-14T19:56:58.949836Z",
        "url": "https://files.pythonhosted.org/packages/26/55/b39d4b4df6cdf3c7ca9b8ccbcaa33f2221aa3fd321b35ae877f15b6d78bd/PyPardotSF-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8807f1997075cf11034663de79155cc9da9c9e68a3dfc39181f4c3781483fc79",
        "md5": "d63f5a3d970705e6edc88ce56ee8b8f5",
        "sha256": "50f4b8849f1704d8f26a57f0d6380a28c7b73449987e0f902cb2faf6d117098d"
      },
      "downloads": -1,
      "filename": "PyPardotSF-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d63f5a3d970705e6edc88ce56ee8b8f5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 41477,
      "upload_time": "2021-01-14T19:56:57",
      "upload_time_iso_8601": "2021-01-14T19:56:57.714395Z",
      "url": "https://files.pythonhosted.org/packages/88/07/f1997075cf11034663de79155cc9da9c9e68a3dfc39181f4c3781483fc79/PyPardotSF-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2655b39d4b4df6cdf3c7ca9b8ccbcaa33f2221aa3fd321b35ae877f15b6d78bd",
        "md5": "a6b4513e1c7b8c5f7fe4468ab2be3ef9",
        "sha256": "3ed8ba118cdc2148d1a827fcae85a9fe797dee19a75b546d4a11b505ee760725"
      },
      "downloads": -1,
      "filename": "PyPardotSF-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "a6b4513e1c7b8c5f7fe4468ab2be3ef9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 19486,
      "upload_time": "2021-01-14T19:56:58",
      "upload_time_iso_8601": "2021-01-14T19:56:58.949836Z",
      "url": "https://files.pythonhosted.org/packages/26/55/b39d4b4df6cdf3c7ca9b8ccbcaa33f2221aa3fd321b35ae877f15b6d78bd/PyPardotSF-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}