{
  "info": {
    "author": "Nicolai Bjerre Pedersen",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Environment :: MacOS X",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Information Technology",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: POSIX :: Linux",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Scientific/Engineering :: Information Analysis",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# Second Opinion Ruler\n\n`second_opinion_ruler` is a [spaCy](https://spacy.io/) component that extends [`SpanRuler`](https://spacy.io/usage/rule-based-matching#spanruler) with a second opinion. For _each_ pattern you can provide a callback (available in [`registry.misc`](https://spacy.io/api/top-level/#registry)) on the matched [`Span`](https://spacy.io/api/span/#_title) - with this you can decide to discard the match, add additional spans to the match and/or mutate the matched span, e.g. add a parsed `datetime` to a custom attribute.\n\n## Installation\n\n```\npip install second_opinion_ruler\n```\n\n## Usage\n\n```python\nimport spacy\nfrom spacy.tokens import Span\nfrom spacy.util import registry\n\n# create date as custom attribute extension\nSpan.set_extension(\"date\", default=None)\n\n# add datetime parser to registry.misc\n# IMPORTANT: first argument has to be Span and the return type has to be list[Span]\n@registry.misc(\"to_datetime.v1\")\ndef to_datetime(span: Span, format: str, attr: str = \"date\") -> list[Span]:\n\n    # parse the date\n    date = datetime.datetime.strptime(span.text, format)\n\n    # add the parsed date to the custom attribute\n    span._.set(attr, date)\n\n    # just return matched span\n    return [span]\n\n# load a model\nnlp = spacy.blank(\"en\")\n\n# add the second opinion ruler\nruler = nlp.add_pipe(\"second_opinion_ruler\", config={\n    \"validate\": True,\n    \"annotate_ents\": True,\n})\n\n# add a pattern with a second opinion handler (on_match)\nruler.add_patterns([\n    {\n        \"label\": \"DATE\",\n        \"pattern\": \"21.04.1986\",\n        \"on_match\": {\n            \"id\": \"to_datetime.v1\",\n            \"kwargs\": {\"format\": \"%d.%m.%Y\", \"attr\": \"my_date\"},\n        },\n    }\n])\n\ndoc = nlp(\"This date 21.04.1986 will be a DATE entity while the structured information will be extracted to `Span._.extructure`\")\n\n# verify\nassert doc.ents[0]._.date == datetime.datetime(1986, 4, 21)\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mr-bjerre/second-opinion-ruler",
    "keywords": "python,spaCy,custom component",
    "license": "MIT",
    "maintainer": "Nicolai Bjerre Pedersen",
    "maintainer_email": "",
    "name": "second-opinion-ruler",
    "package_url": "https://pypi.org/project/second-opinion-ruler/",
    "platform": null,
    "project_url": "https://pypi.org/project/second-opinion-ruler/",
    "project_urls": {
      "Documentation": "https://github.com/mr-bjerre/second-opinion-ruler#readme",
      "Homepage": "https://github.com/mr-bjerre/second-opinion-ruler",
      "Repository": "https://github.com/mr-bjerre/second-opinion-ruler"
    },
    "release_url": "https://pypi.org/project/second-opinion-ruler/0.1.0/",
    "requires_dist": [
      "spacy[apple] (>=3.4.1,<4.0.0); sys_platform == \"darwin\"",
      "spacy (>=3.4.1,<4.0.0); sys_platform != \"darwin\""
    ],
    "requires_python": ">=3.10,<4.0",
    "summary": "A spaCy custom component that extends the SpanRuler with a second opinion",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15292259,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "66ddd3e4f8612f7a8224570e0cc6f3f31951ea8d742529d535aaf305fdeecb44",
          "md5": "d05ef4acc9fc971c072bc06e85c8fc1a",
          "sha256": "16a2d6eddeedcf2c97445232c692ddc97a09098cb0de3487e7e88c06a33aca68"
        },
        "downloads": -1,
        "filename": "second_opinion_ruler-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d05ef4acc9fc971c072bc06e85c8fc1a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 5787,
        "upload_time": "2022-10-03T16:56:43",
        "upload_time_iso_8601": "2022-10-03T16:56:43.677362Z",
        "url": "https://files.pythonhosted.org/packages/66/dd/d3e4f8612f7a8224570e0cc6f3f31951ea8d742529d535aaf305fdeecb44/second_opinion_ruler-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5406c830953470399dc8daa8601d0d7d54e548e6ad47f02e53728b6a31bc0a95",
          "md5": "12368d3008b1512ee9972bd94dc0ee92",
          "sha256": "4f113fdf822161f007a3731f489b894ad455c3df34aed1a372c0b51036a87f94"
        },
        "downloads": -1,
        "filename": "second-opinion-ruler-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "12368d3008b1512ee9972bd94dc0ee92",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 5591,
        "upload_time": "2022-10-03T16:56:42",
        "upload_time_iso_8601": "2022-10-03T16:56:42.505509Z",
        "url": "https://files.pythonhosted.org/packages/54/06/c830953470399dc8daa8601d0d7d54e548e6ad47f02e53728b6a31bc0a95/second-opinion-ruler-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "66ddd3e4f8612f7a8224570e0cc6f3f31951ea8d742529d535aaf305fdeecb44",
        "md5": "d05ef4acc9fc971c072bc06e85c8fc1a",
        "sha256": "16a2d6eddeedcf2c97445232c692ddc97a09098cb0de3487e7e88c06a33aca68"
      },
      "downloads": -1,
      "filename": "second_opinion_ruler-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d05ef4acc9fc971c072bc06e85c8fc1a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10,<4.0",
      "size": 5787,
      "upload_time": "2022-10-03T16:56:43",
      "upload_time_iso_8601": "2022-10-03T16:56:43.677362Z",
      "url": "https://files.pythonhosted.org/packages/66/dd/d3e4f8612f7a8224570e0cc6f3f31951ea8d742529d535aaf305fdeecb44/second_opinion_ruler-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5406c830953470399dc8daa8601d0d7d54e548e6ad47f02e53728b6a31bc0a95",
        "md5": "12368d3008b1512ee9972bd94dc0ee92",
        "sha256": "4f113fdf822161f007a3731f489b894ad455c3df34aed1a372c0b51036a87f94"
      },
      "downloads": -1,
      "filename": "second-opinion-ruler-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "12368d3008b1512ee9972bd94dc0ee92",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10,<4.0",
      "size": 5591,
      "upload_time": "2022-10-03T16:56:42",
      "upload_time_iso_8601": "2022-10-03T16:56:42.505509Z",
      "url": "https://files.pythonhosted.org/packages/54/06/c830953470399dc8daa8601d0d7d54e548e6ad47f02e53728b6a31bc0a95/second-opinion-ruler-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}