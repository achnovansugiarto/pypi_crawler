{
  "info": {
    "author": "Daltix NV",
    "author_email": "snowconn@daltix.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# SnowConn\n\nThis repository is a wrapper around the [snowflake SQLAlchemy](https://docs.snowflake.net/manuals/user-guide/sqlalchemy.html)\nlibrary. It manages the creation of connections and provides a few convenience functions that should be good enough\nto cover most use cases yet be flexible enough to allow additional wrappers to be written around to serve more specific\nuse cases for different teams.\n\n---\n\n## Installation\n\nTo install latest version released to pypi with pip:\n\n```bash\npip install snowconn\n```\n\nTo install the latest version directly from the repo:\n\n```bash\npip install 'git+ssh://git@github.com/Daltix/SnowConn.git@master#egg=snowconn'\n```\n\nIf you want to use pandas functionality (read/write from/to pandas dataframes) you can install\nas follows:\n\n```bash\npip install snowconn[pandas]\n```\n\nIf you want to enable SSO authentication you can install as follows:\n\n```bash\npip install snowconn[storage]\n```\n\nIf you want to install all functionality (AWS secrets manager connection, SSO, pandas) you can install as follows:\n\n```bash\npip install snowconn[all]\n```\n\n---\n\n## Connection\n\nEverything is implemented in a single `SnowConn` class. To import it is always the same:\n\n```py\nfrom snowconn import SnowConn\n```\n\n### (1) Connection using your own personal creds\n\nInstall [snowsql](https://docs.snowflake.net/manuals/user-guide/snowsql-install-config.html)\nand configure `~/.snowsql/config` as per the instructions\n\nYou can test that it is correctly installed by then executing `snowsql`\nfrom the command line.\n\n*WARNING* Be sure to configure your account name like the following:\n\n```\naccountname = ACCOUNT_ID.REGION\n```\n\n*(example `accountname = eq90000.eu-west-1`)*\n\nIf you don't include the region part (`eu-west-1` in the example above), it will hang for about a minute and then give you a permission denied.\n\nNow that you are able to execute `snowsql` to successfully connect, you are ready to use the `SnowConn.connect` function:\n\n```py\nwith SnowConn.connect() as conn:\n    # your conn. code here\n```\nThat's it you are connected! You can connect to a specific schema / database with the following:\n\n```py\nwith SnowConn.connect('daltix_database', 'public') as conn:\n    # your conn. code here\n```\n\n** NOTE: Connect using SSO **\nIf you are using SSO (Okta or others), you need to update your .snowsqlk/config with the following modifications:\n- Include an \"authenticator\" line, [see here](https://docs.snowflake.com/en/user-guide/admin-security-fed-auth-use.html#using-sso-with-client-applications-that-connect-to-snowflake) for possible values\nand their meaning).\n- replace username for your username (instead of your snowflake username)\n\n\n### (2) Connection using AWS Secrets Manager\n\nYou need to have boto3 installed which you can do so with the following:\n\n```\npip install boto3\n```\n\nNow you must satisfy the folloing requirements:\n\n1. Have a secret stored in an accessable aws account\n1. The secret must have the following keys:\n    - `USERNAME`\n    - `PASSWORD`\n    - `ACCOUNT`\n    - `ROLE`\n\nFor this example, we will assume the `price_plotter` is the secret manager that we will be using.\n\nNow that you know the name of the secret, you MUST be sure that the context in which it is running has access to read\nthat secret. Once this is done, you can now execute the following code:\n\n```py\nwith SnowConn.connect(methods=['secretsmanager'], credsman_name='price_plotter') as conn:\n    # your conn. code here\n```\n\nAlternatively you can use the specific `connect_secretsmanager` method:\n\n```py\nwith SnowConn.connect_secretsmanager('price_plotter') as conn:\n    # your conn. code here\n```\n\nAnd you are connected! You can also pass the database and schema along\n\n```py\nwith SnowConn.connect_secretsmanager('price_plotter', 'daltix', 'public') as conn:\n    # your conn. code here\n```\n\nAn example of a policy that gives access to the `price_plotter` looks like this:\n\n```\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"VisualEditor0\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"secretsmanager:GetResourcePolicy\",\n                \"secretsmanager:GetSecretValue\",\n                \"secretsmanager:DescribeSecret\",\n                \"secretsmanager:ListSecretVersionIds\"\n            ],\n            \"Resource\": \"arn:aws:secretsmanager:eu-west-1:<your-account-number>:secret:price_plotter-AdcNpp\"\n        }\n    ]\n}\n```\n\nAnd an example of this in a serverless.yml looks like this:\n\n```\niamRoleStatements:\n    - Effect: Allow\n      Action:\n        - secretsmanager:DescribeSecret\n        - secretsmanager:List*\n      Resource:\n        - \"*\"\n    - Effect: Allow\n      Action:\n        - secretsmanager:*\n      Resource:\n        - { Fn::Sub: \"arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:price_plotter-??????\" }\n```\n\n---\n\n## API\n\nNow that you're connected, there are a few low-level functions that you can use to programatically interact with\nthe snowflake tables that you have access to.\n\nThe rest of these examples assume that you have used one of the above methods to connect and have access to the\n`daltix.public.price` table.\n\n### Creating a connection\n\nCreating a connection is very easy (see examples above for connection options):\n\n```py\nwith SnowConn.connect() as conn:\n    # your conn. code here\n```\n\nYou can also create connections manually without using a context (this is not recommended, see *Known Issues* section below), make sure to close the connection after you are done:\n\n```py\nconn = SnowConn.connect()\n# your conn. code here\nconn.close() # close the connection when done\n```\n\n### execute_simple\n\nThe exc_simple function is used for when you have a single statement to execute and the result set can fit into memory. It\ntakes a single argument which a string of the SQL statement that you with to execute. Take the following for example:\n\n```py\n>>> conn.execute_simple('select * from price limit 1;')\n[{'DALTIX_ID': '0d3c30353035a6ab5747237a1f2600bbf5ddd27401372c5effe0f2790a88ad56', 'SHOP': 'ahed', 'COUNTRY': 'de', 'PRODUCT_ID': '616846.0', 'LOCATION': 'base', 'PRICE': 37.99, 'PROMO_PRICE': None, 'PRICE_STD': None, 'PROMO_PRICE_STD': None, 'UNIT': None, 'UNIT_STD': None, 'IS_MAIN': True, 'VENDOR': None, 'VENDOR_STD': None, 'DOWNLOADED_ON': datetime.datetime(2018, 11, 18, 0, 0, 1), 'DOWNLOADED_ON_LOCAL': datetime.datetime(2018, 11, 18, 1, 0, 1), 'DOWNLOADED_ON_DATE': datetime.date(2018, 11, 18), 'IS_LATEST_PRICE': False}]\n```\n\n### execute_string\n\nIf you have multiple sql statements in a single string that you want to execute or the resultset is larger than\nwill fit into memory, this is the function that you want to use. It returns a list of cursors that are a result\nof each of the statements that are contained in the string. See [here](https://docs.snowflake.net/manuals/user-guide/python-connector-api.html#execute_string) for the full documentation.\n\n```py\n>>> conn.execute_string('create temporary table price_small as (select * from price limit 1); select * from price_small;')\n[<snowflake.connector.cursor.SnowflakeCursor object at 0x10f537898>, <snowflake.connector.cursor.SnowflakeCursor object at 0x10f52c588>]\n```\n\n### execute_file\n\nIf you have the contents of an sql file that you want to execute, you can use this function. For example:\n\n```bash\necho \"select * from price limit 1;\" > query.sql\n```\n\n```py\n>>> conn.execute_file('query.sql')\n>>> [<snowflake.connector.cursor.SnowflakeCursor object at 0x1188d6390>]\n```\nThis also returns a list of cursors the same as `execute_string` does. In fact, this function is nothing more than a very\nsimple wrapper around `execute_string`.\n\n### read_df\n\nUse this function to read the results of a query into a dataframe. Note that pandas is NOT a dependency of this repo so\nif you want to use it you must satisfy this dependency yourself.\n\nIt takes one sql string as an argument and returns a dataframe.\n\n```bash\n>>> conn.read_df('select daltix_id, downloaded_on, price from price limit 5;')\n                                        daltix_id       downloaded_on  price\n0  0d3c30353035a6ab5747237a1f2600bbf5ddd27401372c 2018-11-18 00:00:01  37.99\n1  f5be8a5da3bde2da6a63fcad4e5c30823027324092234c 2018-11-18 00:00:02   9.99\n2  f5be8a5da3bde2da6a63fcad4e5c30823027324092234c 2018-11-18 00:00:02   0.40\n3  807e2a7706b8c515264fa55bed3891d5685ac5ee0148f0 2018-11-18 00:00:04   3.70\n4  1e56339f99dc866cd4b87679aa686556a5ad2398d00c95 2018-11-18 00:00:06   3.76\n>>>\n```\n\n### write_df\n\nUse this to write a dataframe to Snowflake. This is a very thin wrapper around the pandas [DataFrame.to_sql()](https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.to_sql.html) function.\n\nUnfortunately, it doesn't play nice with dictionaries and arrays so the use cases are quite limited. Hopefully\nwe will improve upon this in the future.\n\n### get_current_role\n\nReturns the current role.\n\n### close\n\nUse this to cleanly close all connections that have ever been associated with this instance of SnowConn. If you don't\nuse this your process will hang for a while without saying anything before it actually exits.\n\n## Accessing the connection objects directly\n\nThese functions are mostly wrappers around 2 connection libraries:\n\n- [The snowflake python connector](https://docs.snowflake.net/manuals/user-guide/python-connector-api.html)\n- [The snowflake SQLAlchemy library](https://docs.snowflake.net/manuals/user-guide/sqlalchemy.html)\n\nShould you need to use either of these yourself, you can ask for the connections yourself with the following\nfunctions:\n\n### get_raw_connection\n\nThis will return the instance of a snowflake connector which is documented [here](https://docs.snowflake.net/manuals/user-guide/python-connector-api.html#connect). It is a good choice if you have very simple needs and for some reason none\nof the functions in the rest of this repo are serving your needs.\n\n### get_alchemy_engine\n\nThis is the result of [create_engine()](https://docs.snowflake.net/manuals/user-guide/sqlalchemy.html#connection-parameters)\nwhich was called during `connect()` . It does not represent an active connection to the database\nbut rather acts as a factory for connections.\n\nThis is useful for using the most commonly abstracted things in other libraries such as dashboards, pandas, etc. \nHowever, like SQLAlchemy in general, despite being very widely supported and feature-complete, it is not the simplest \nAPI so it should probably not be your first choice unless you know exactly that you need it.\n\n### get_connection\n\nThis returns the result of the creating the sqlalchemy engine and then calling `connect()` on it. Unlike the result\nof `get_alchemy_engine` this represents an active connection to Snowflake and this has a session associated with it.\n\nYou can see the object documentation [here](https://docs.snowflake.net/manuals/user-guide/sqlalchemy.html#parameters-and-behavior)\n\n## Known issues\n\nThere is a bug with `snowflake-connector` which causes some connections to Snowflake to not close properly in certain circumstances. This can cause timeout errors.\n\nYou can handle this in two ways: the first is to wrap usage of the connection in a `try/finally` block to ensure the connection is explicitly closed, like this:\n```\nfrom snowconn import SnowConn\nconn = SnowConn.connect(...)\ntry:\n    result = execute_string(query) # or result = read_df(query), etc\nfinally:\n    conn.close()\n```\n\nThe second way is to use SnowConn with the `with` syntax, as follows:\n```\nwith SnowConn.connect() as conn:\n    conn.read_df(...)\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Daltix/snowconn",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "snowconn",
    "package_url": "https://pypi.org/project/snowconn/",
    "platform": null,
    "project_url": "https://pypi.org/project/snowconn/",
    "project_urls": {
      "Homepage": "https://github.com/Daltix/snowconn"
    },
    "release_url": "https://pypi.org/project/snowconn/3.10.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Python utilities for connection to the Snowflake data warehouse",
    "version": "3.10.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15854820,
  "releases": {
    "3.10.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1e41ed3b93df684d01e77a7717e25fb4a454b058c5b359625054cdf3fb985318",
          "md5": "e632162085ab4fbca33ca5bb72dcaac4",
          "sha256": "fdf63298e949d7c24b45c592dd6fd67aca93711e1a4ff3c35141f6fc59f280fd"
        },
        "downloads": -1,
        "filename": "snowconn-3.10.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e632162085ab4fbca33ca5bb72dcaac4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13596,
        "upload_time": "2022-11-22T14:25:37",
        "upload_time_iso_8601": "2022-11-22T14:25:37.320756Z",
        "url": "https://files.pythonhosted.org/packages/1e/41/ed3b93df684d01e77a7717e25fb4a454b058c5b359625054cdf3fb985318/snowconn-3.10.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.5.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "01b55d1e350321e32f31d2a0153116a0eb347c560557812b683e1a5e0a948567",
          "md5": "86421d0c9fe18af31c44c8a2e0197b37",
          "sha256": "c456344c4d6d22c7de6b0219d6856968b69076a067e2717881a4157d3c819325"
        },
        "downloads": -1,
        "filename": "snowconn-3.5.10.tar.gz",
        "has_sig": false,
        "md5_digest": "86421d0c9fe18af31c44c8a2e0197b37",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8475,
        "upload_time": "2019-10-04T13:05:51",
        "upload_time_iso_8601": "2019-10-04T13:05:51.193514Z",
        "url": "https://files.pythonhosted.org/packages/01/b5/5d1e350321e32f31d2a0153116a0eb347c560557812b683e1a5e0a948567/snowconn-3.5.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.5.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b5112a10d659b327f57fc0909e7a3184448128f501f57e951f32546cbe5f330e",
          "md5": "1ad65ec9d1ac41cd233df1fa999b8ffc",
          "sha256": "4dca2ab74fe3f016aa9b19388c8bec9fdc3a1276d40acfc91ac41406f827fd61"
        },
        "downloads": -1,
        "filename": "snowconn-3.5.11.tar.gz",
        "has_sig": false,
        "md5_digest": "1ad65ec9d1ac41cd233df1fa999b8ffc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8393,
        "upload_time": "2019-11-04T00:36:49",
        "upload_time_iso_8601": "2019-11-04T00:36:49.623658Z",
        "url": "https://files.pythonhosted.org/packages/b5/11/2a10d659b327f57fc0909e7a3184448128f501f57e951f32546cbe5f330e/snowconn-3.5.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.5.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7d288a80e1ca4f75a4dac73908e59acbbc1a2c09b428d3f8e312e4f99061d09a",
          "md5": "11de9c8871fc443a752d82f421c9b979",
          "sha256": "0b36db7137f538b658f7490b8c89b1c4d6a51ba4fb9924575477cd17b2ab81d4"
        },
        "downloads": -1,
        "filename": "snowconn-3.5.12.tar.gz",
        "has_sig": false,
        "md5_digest": "11de9c8871fc443a752d82f421c9b979",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8339,
        "upload_time": "2019-11-18T09:36:05",
        "upload_time_iso_8601": "2019-11-18T09:36:05.390322Z",
        "url": "https://files.pythonhosted.org/packages/7d/28/8a80e1ca4f75a4dac73908e59acbbc1a2c09b428d3f8e312e4f99061d09a/snowconn-3.5.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.5.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "01cb113377c2ee6359c3b1c1836f5ce2b5205d4ff107fb7232b68285726ef576",
          "md5": "1a12c1323d5455a5b9924feee136338f",
          "sha256": "9dfadf2556d932c211b0f654c413ef5a56cab78ccbdc76db15138002e3377931"
        },
        "downloads": -1,
        "filename": "snowconn-3.5.13.tar.gz",
        "has_sig": false,
        "md5_digest": "1a12c1323d5455a5b9924feee136338f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8427,
        "upload_time": "2019-12-13T17:36:50",
        "upload_time_iso_8601": "2019-12-13T17:36:50.295821Z",
        "url": "https://files.pythonhosted.org/packages/01/cb/113377c2ee6359c3b1c1836f5ce2b5205d4ff107fb7232b68285726ef576/snowconn-3.5.13.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.5.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c0c52252699d9c667acd43a09d83dae4a4de8e0fb792347611306a7cc486f797",
          "md5": "8d154b86b71deb3749d910dfc9c0fd9f",
          "sha256": "d4cf795bd65998f52b33122ac164924c13881acf7034c20b76e6728f7b6b656e"
        },
        "downloads": -1,
        "filename": "snowconn-3.5.8.tar.gz",
        "has_sig": false,
        "md5_digest": "8d154b86b71deb3749d910dfc9c0fd9f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8444,
        "upload_time": "2019-06-13T06:24:25",
        "upload_time_iso_8601": "2019-06-13T06:24:25.740097Z",
        "url": "https://files.pythonhosted.org/packages/c0/c5/2252699d9c667acd43a09d83dae4a4de8e0fb792347611306a7cc486f797/snowconn-3.5.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.5.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6d73c9c36199ab4aadd84d879ee8c3e4a02684414cec2733fa308b7c6fbc26f0",
          "md5": "ae6d791c1d9fa0387724fa043199d3c1",
          "sha256": "dfd40d63c8f70b95fb9dbb1f03ff40adbb5ec1206ac941394621ed254fec774d"
        },
        "downloads": -1,
        "filename": "snowconn-3.5.9.tar.gz",
        "has_sig": false,
        "md5_digest": "ae6d791c1d9fa0387724fa043199d3c1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8453,
        "upload_time": "2019-09-05T12:19:06",
        "upload_time_iso_8601": "2019-09-05T12:19:06.377257Z",
        "url": "https://files.pythonhosted.org/packages/6d/73/c9c36199ab4aadd84d879ee8c3e4a02684414cec2733fa308b7c6fbc26f0/snowconn-3.5.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "37e39550e112849b13daac7331d6e5303b1584e10850c33a30fb4c9f6d9930e3",
          "md5": "c9b20a6eb225826e7ab4261ecbf5ed6e",
          "sha256": "a647776f19c91cc9b530facf7106e90815c5e2e9138e1f401f344ae681ed2043"
        },
        "downloads": -1,
        "filename": "snowconn-3.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c9b20a6eb225826e7ab4261ecbf5ed6e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8539,
        "upload_time": "2020-01-10T13:12:00",
        "upload_time_iso_8601": "2020-01-10T13:12:00.687145Z",
        "url": "https://files.pythonhosted.org/packages/37/e3/9550e112849b13daac7331d6e5303b1584e10850c33a30fb4c9f6d9930e3/snowconn-3.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.6.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e2d546574aab882a3d8ca4c381c534e06fb72fcde90dda0913bb3b9f14cc76e6",
          "md5": "424fda98f8fa3c263bc380c7a026a845",
          "sha256": "37480e989563e7dabbce3269a46bcce6a5bfda5ddd084be6ae9aba476485c81d"
        },
        "downloads": -1,
        "filename": "snowconn-3.6.1.tar.gz",
        "has_sig": false,
        "md5_digest": "424fda98f8fa3c263bc380c7a026a845",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8586,
        "upload_time": "2020-05-04T18:05:50",
        "upload_time_iso_8601": "2020-05-04T18:05:50.392122Z",
        "url": "https://files.pythonhosted.org/packages/e2/d5/46574aab882a3d8ca4c381c534e06fb72fcde90dda0913bb3b9f14cc76e6/snowconn-3.6.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "75743371c4040158cb197d5868b6f0c56e37ac4aa5ded892341449ab2c5b3f95",
          "md5": "a8317adf8d2eade3cdc787023b805e54",
          "sha256": "3623100eca899da402c4ffa85581b71abf67070091cf443ae3dea6ae839b34a3"
        },
        "downloads": -1,
        "filename": "snowconn-3.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a8317adf8d2eade3cdc787023b805e54",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10194,
        "upload_time": "2020-06-02T09:16:25",
        "upload_time_iso_8601": "2020-06-02T09:16:25.554001Z",
        "url": "https://files.pythonhosted.org/packages/75/74/3371c4040158cb197d5868b6f0c56e37ac4aa5ded892341449ab2c5b3f95/snowconn-3.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.7.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4c5cd3493cf316673e10ad81266c56eab7ae4a1841928205a48a8e50b245fded",
          "md5": "30dcc0db4e264dea62d1b791caa26bc2",
          "sha256": "59905c014de954eb14b86e08b1bffd9f41115608b4992ee8078a2a10f2df998f"
        },
        "downloads": -1,
        "filename": "snowconn-3.7.1.tar.gz",
        "has_sig": false,
        "md5_digest": "30dcc0db4e264dea62d1b791caa26bc2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9542,
        "upload_time": "2021-01-06T09:48:08",
        "upload_time_iso_8601": "2021-01-06T09:48:08.535624Z",
        "url": "https://files.pythonhosted.org/packages/4c/5c/d3493cf316673e10ad81266c56eab7ae4a1841928205a48a8e50b245fded/snowconn-3.7.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.7.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c82cde1af9fb515aa52e39b750521a567e9ba8e2a59531df379210236c237f86",
          "md5": "187329d71e06c755fd2e8837211a57ba",
          "sha256": "ec8c21bba056a3f893a0fba169ba12a8913194d8327c07a7832983cef6686293"
        },
        "downloads": -1,
        "filename": "snowconn-3.7.2.tar.gz",
        "has_sig": false,
        "md5_digest": "187329d71e06c755fd2e8837211a57ba",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9456,
        "upload_time": "2021-04-19T11:02:20",
        "upload_time_iso_8601": "2021-04-19T11:02:20.402343Z",
        "url": "https://files.pythonhosted.org/packages/c8/2c/de1af9fb515aa52e39b750521a567e9ba8e2a59531df379210236c237f86/snowconn-3.7.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.7.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d6eea860aeed32f9ada95c055b865e22bf005907b5996feace5331c133265161",
          "md5": "00fa1c8e5b504ec51d11278657d18061",
          "sha256": "5232c62227ab15570c9aecd5cca5cc9e2ca9f1132c5a27881eb8112bb6c0991d"
        },
        "downloads": -1,
        "filename": "snowconn-3.7.3.tar.gz",
        "has_sig": false,
        "md5_digest": "00fa1c8e5b504ec51d11278657d18061",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9479,
        "upload_time": "2021-04-21T16:24:23",
        "upload_time_iso_8601": "2021-04-21T16:24:23.909825Z",
        "url": "https://files.pythonhosted.org/packages/d6/ee/a860aeed32f9ada95c055b865e22bf005907b5996feace5331c133265161/snowconn-3.7.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2ee0279cb08cad1512b3c149cd4e940ec2e42f51ab109b2ad5cdfdd2e6ebb221",
          "md5": "bd4b05739dcc4d2a7d1242d3fff8e867",
          "sha256": "f14237c25ceac0dc550c0aa83e12515d8151dd89c6bbbede69dc8ffd586b2d26"
        },
        "downloads": -1,
        "filename": "snowconn-3.8.tar.gz",
        "has_sig": false,
        "md5_digest": "bd4b05739dcc4d2a7d1242d3fff8e867",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11175,
        "upload_time": "2021-04-22T18:59:24",
        "upload_time_iso_8601": "2021-04-22T18:59:24.325849Z",
        "url": "https://files.pythonhosted.org/packages/2e/e0/279cb08cad1512b3c149cd4e940ec2e42f51ab109b2ad5cdfdd2e6ebb221/snowconn-3.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.8.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4f59a17b901470ede520cd6007b024873c836158bb917ce24d53191feb5fadca",
          "md5": "bcf4068cf1011c688568111db4bce631",
          "sha256": "fedf251b2076884bae4411fafd68e8a3f69bc568cbc56a7c90213b69da4f8bb7"
        },
        "downloads": -1,
        "filename": "snowconn-3.8.1.tar.gz",
        "has_sig": false,
        "md5_digest": "bcf4068cf1011c688568111db4bce631",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13927,
        "upload_time": "2021-04-26T14:17:59",
        "upload_time_iso_8601": "2021-04-26T14:17:59.237986Z",
        "url": "https://files.pythonhosted.org/packages/4f/59/a17b901470ede520cd6007b024873c836158bb917ce24d53191feb5fadca/snowconn-3.8.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.8.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b4a492459714d2a2bbb31749d9477c5017c1ed943a9ab1acd1f78d4825465bab",
          "md5": "0e9fdd8fa3cab7a94868254a169fb34c",
          "sha256": "e6f7f0438a87680d479e82a4f62c4eeda36b11f3bebbefbb614bb676378205b4"
        },
        "downloads": -1,
        "filename": "snowconn-3.8.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0e9fdd8fa3cab7a94868254a169fb34c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13923,
        "upload_time": "2021-04-26T14:48:31",
        "upload_time_iso_8601": "2021-04-26T14:48:31.438010Z",
        "url": "https://files.pythonhosted.org/packages/b4/a4/92459714d2a2bbb31749d9477c5017c1ed943a9ab1acd1f78d4825465bab/snowconn-3.8.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.8.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "916637e03d3d312dd7e1abdefde8e1439a2d2a19b4bdb6d7ac510eccb7936033",
          "md5": "1f7a63c4db7c21f0c9e45b7e98649e5c",
          "sha256": "6e7e42ffeb39b6f2a72c7fd0ec55549a7da7adb8a12a7eb348c5f6f02c1c114c"
        },
        "downloads": -1,
        "filename": "snowconn-3.8.3.tar.gz",
        "has_sig": false,
        "md5_digest": "1f7a63c4db7c21f0c9e45b7e98649e5c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13924,
        "upload_time": "2021-04-28T12:45:46",
        "upload_time_iso_8601": "2021-04-28T12:45:46.699354Z",
        "url": "https://files.pythonhosted.org/packages/91/66/37e03d3d312dd7e1abdefde8e1439a2d2a19b4bdb6d7ac510eccb7936033/snowconn-3.8.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.9.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ced41f9c91ae69a18d94223395f41f17f4dd76556234fdef550247d711a8e81a",
          "md5": "93ea529021df312a580142368dfefae0",
          "sha256": "f2743ce722b6ac04f5b6a0c5895d88b8641416268b3a7ab9cd7a95ce64d0ba7d"
        },
        "downloads": -1,
        "filename": "snowconn-3.9.0.tar.gz",
        "has_sig": false,
        "md5_digest": "93ea529021df312a580142368dfefae0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9966,
        "upload_time": "2022-07-06T07:55:05",
        "upload_time_iso_8601": "2022-07-06T07:55:05.267278Z",
        "url": "https://files.pythonhosted.org/packages/ce/d4/1f9c91ae69a18d94223395f41f17f4dd76556234fdef550247d711a8e81a/snowconn-3.9.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.9.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d27d7a1fc104aeec732a1d796c4177bf87aedd62582eaf1cdb516fa937b94a4f",
          "md5": "55089dd3ebb6d0901936b7638b023287",
          "sha256": "c2847093bd8097e4abfb0cb1d73bcb7175f821ee894343fc19b2d7aad3bd7c3d"
        },
        "downloads": -1,
        "filename": "snowconn-3.9.1.tar.gz",
        "has_sig": false,
        "md5_digest": "55089dd3ebb6d0901936b7638b023287",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9985,
        "upload_time": "2022-10-27T16:20:25",
        "upload_time_iso_8601": "2022-10-27T16:20:25.227271Z",
        "url": "https://files.pythonhosted.org/packages/d2/7d/7a1fc104aeec732a1d796c4177bf87aedd62582eaf1cdb516fa937b94a4f/snowconn-3.9.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1e41ed3b93df684d01e77a7717e25fb4a454b058c5b359625054cdf3fb985318",
        "md5": "e632162085ab4fbca33ca5bb72dcaac4",
        "sha256": "fdf63298e949d7c24b45c592dd6fd67aca93711e1a4ff3c35141f6fc59f280fd"
      },
      "downloads": -1,
      "filename": "snowconn-3.10.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e632162085ab4fbca33ca5bb72dcaac4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13596,
      "upload_time": "2022-11-22T14:25:37",
      "upload_time_iso_8601": "2022-11-22T14:25:37.320756Z",
      "url": "https://files.pythonhosted.org/packages/1e/41/ed3b93df684d01e77a7717e25fb4a454b058c5b359625054cdf3fb985318/snowconn-3.10.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}