{
  "info": {
    "author": "Network to Code, LLC",
    "author_email": "info@networktocode.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Nautobot Cisco ACI Chatops Plugin\n\nThe [Nautobot](https://github.com/nautobot/nautobot) Cisco ACI Chatops Plugin extends the [Nautobot Chatops](https://github.com/nautobot/nautobot-plugin-chatops/) framework to interact with a Cisco APIC (Application Policy Infrastructure Controller) using commands in Slack, Webex, Microsoft Teams, and Mattermost.  \n \n## Screenshots\n  \n### Slack\n![image](https://user-images.githubusercontent.com/6945229/141345410-18d8fa67-6edd-4e63-8b50-0a708b9d390d.png)\n  \n![image](https://user-images.githubusercontent.com/6945229/141345642-f87c7e32-78d7-4421-bd33-f261bded60dd.png)\n  \n![image](https://user-images.githubusercontent.com/6945229/141345906-4565b911-3739-4d88-b78e-c62228fb94b2.png)\n\n### Webex\n\n![image](https://user-images.githubusercontent.com/6945229/141346129-9d3cb1c4-53d0-45ec-9b8e-0cb8cb6831c8.png)\n  \n![image](https://user-images.githubusercontent.com/6945229/141346250-ad03510b-d4f5-454f-a1fc-1fe8e15737bf.png)\n\n![image](https://user-images.githubusercontent.com/6945229/141346413-bcf01740-91dc-422d-967a-9fe8cfd06092.png)\n\n\n## Installation\n\nThe plugin is available as a Python package in pypi and can be installed with pip:\n\n```shell\npip install nautobot-plugin-chatops-aci\n```\n\nOnce installed, the plugin needs to be enabled in your `nautobot_config.py`:\n\n```python\n# In your nautobot_config.py\nPLUGINS = [\"nautobot_chatops\", \"nautobot_plugin_chatops_aci\"]\n```\n\nIn addition,  add the below `PLUGINS_CONFIG` section to `nautobot_config.py`.   \n\n> It is only necessary to add the sections from the below snippet for the chat platform you will be using (Slack, Webex, etc.). \n\n```python\n# Also in nautobot_config.py\nPLUGINS_CONFIG = {\n    \"nautobot_chatops\": {\n        # Slack\n        \"enable_slack\": os.environ.get(\"ENABLE_SLACK\", False),\n        \"slack_api_token\": os.environ.get(\"SLACK_API_TOKEN\"),\n        \"slack_signing_secret\": os.environ.get(\"SLACK_SIGNING_SECRET\"),\n        \"slack_slash_command_prefix\": os.environ.get(\"SLACK_SLASH_COMMAND_PREFIX\", \"/\"),\n        # Webex\n        \"enable_webex\": os.environ.get(\"ENABLE_WEBEX\", False),\n        \"webex_token\": os.environ.get(\"WEBEX_TOKEN\"),\n        \"webex_signing_secret\": os.environ.get(\"WEBEX_SIGNING_SECRET\"),\n        # Mattermost\n        \"enable_mattermost\": os.environ.get(\"ENABLE_MATTERMOST\", False),\n        \"mattermost_api_token\": os.environ.get(\"MATTERMOST_API_TOKEN\"),\n        \"mattermost_url\": os.environ.get(\"MATTERMOST_URL\"),\n        # MS Teams\n        \"enable_ms_teams\": os.environ.get(\"ENABLE_MS_TEAMS\", False),\n        \"microsoft_app_id\": os.environ.get(\"MICROSOFT_APP_ID\"),\n        \"microsoft_app_password\": os.environ.get(\"MICROSOFT_APP_PASSWORD\"),\n    },\n    \"nautobot_chatops_aci\": {\"aci_creds\": {x: os.environ[x] for x in os.environ if \"APIC\" in x}},\n}\n```\nThe `aci_creds` setting above creates a Python dictionary which imports any environment variables prefixed with `APIC`. The following environment variables are needed to define each APIC hostname and credentials:\n\n```bash\nexport APIC_USERNAME_NTCAPIC=\"{{ APIC username }}\"\nexport APIC_PASSWORD_NTCAPIC=\"{{ APIC password }}\"\nexport APIC_URI_NTCAPIC=\"{{ https://apic_hostname }}\"\nexport APIC_VERIFY_NTCAPIC=\"{{ Check SSL certificate (True or False) }}\"\n```\nThe text `NTCAPIC` in the above variable names can be replaced with an identifier of your choosing.  It will show up in the APIC selection dialogue when executing commands as shown below.  \n  \n![image](https://user-images.githubusercontent.com/6945229/139917084-c30a2b8b-940a-4e23-bca4-2ab7bf7f6ed0.png)\n  \nWith this syntax, it is possible to support multiple APICs. For example, to add another APIC to the selection list we could specify a second set of credentials:\n\n```bash\nexport APIC_USERNAME_DEVNET=\"{{ APIC username }}\"\nexport APIC_PASSWORD_DEVNET=\"{{ APIC password }}\"\nexport APIC_URI_DEVNET=\"{{ https://apic_hostname }}\"\nexport APIC_VERIFY_DEVNET=\"{{ Check SSL certificate (True or False) }}\"\n```\nWhen executing chat commands, we would then be presented with a selection dialog containing both `ntcapic` and `devnet`.  \n\nIn addition, the following environment variables are required for the chat platform in use. The [Platform-specific Setup](https://github.com/nautobot/nautobot-plugin-chatops/blob/develop/docs/chat_setup/chat_setup.md#platform-specific-setup) document describes how to retrieve the tokens and secrets for each chat platform that will need to be used in the environment variables.  \n\n> It is only necessary to create the environment variables shown below for the chat platform you will be using. To make the environment variables persistent, add them to the ~/.bash_profile for the user running Nautobot. \n\n```bash\n# Slack\nexport ENABLE_SLACK=\"true\"\nexport SLACK_API_TOKEN=\"foobar\"\nexport SLACK_SIGNING_SECRET=\"foobar\"\n\n# Webex\nexport ENABLE_WEBEX=\"true\"\nexport WEBEX_TOKEN=\"foobar\"\nexport WEBEX_SIGNING_SECRET=\"foobar\"\n\n# Mattermost\nexport ENABLE_MATTERMOST=\"false\"\nexport MATTERMOST_API_TOKEN=\"foobar\"\nexport MATTERMOST_URL=\"foobar\"\n\n# Microsoft Teams\nexport ENABLE_MS_TEAMS=\"false\"\nexport MICROSOFT_APP_ID=\"foobar\"\nexport MICROSOFT_APP_PASSWORD=\"foobar\"\n```\n\n> When deploying as Docker containers, all of the above environment variables should be defined in the file `development/creds.env`. An example credentials file `creds.env.example` is available in the `development` folder.  \n\n\n## Usage\n### Command Setup\nAdd a top level command named `aci` to the platform you are using. See the [Platform-specific Setup](https://github.com/nautobot/nautobot-plugin-chatops/blob/develop/docs/chat_setup/chat_setup.md#platform-specific-setup) section of the [Nautobot Chatops Installation Guide](https://github.com/nautobot/nautobot-plugin-chatops/blob/develop/docs/chat_setup/chat_setup.md) for instructions specific to Slack, Microsoft Teams, WebEx, and Mattermost.  \n\nThe following commands are available:\n\n| Command | Description |\n| ------- | ----------- |\n| get-tenants [apic] | Display tenants configured in Cisco ACI.|\n| get-aps [apic] [tenant] | Display Application Profiles configured in Cisco ACI.|\n| get-epgs [apic] [tenant] [ap] | Display Endpoint Groups (EPGs) configured in Cisco ACI.|\n| get-epg-details [apic] [tenant] [ap] [epg] | Display details for an Endpoint Group in Cisco ACI.|\n| get-vrfs [apic] [tenant] | Display vrfs configured in Cisco ACI.|\n| get-bds [apic] [tenant] | Display Bridge Domains configured in Cisco ACI.|\n| get-pending-nodes [apic] |  Display unregistered nodes in Cisco ACI.|\n| get-nodes [apic] | Display fabric nodes in Cisco ACI.|\n| get-controllers [apic] | Display APIC controllers in Cisco ACI.|\n| get-interfaces [apic] [pod-id] [node-id] [state] | Display interfaces on a specified node in Cisco ACI.|\n| register-node [apic] [serial-nbr] [node-id] [name] | Register a new fabric node in Cisco ACI.|\n|  \n\n## Contributing\n\nPull requests are welcomed and automatically built and tested against multiple version of Python and multiple version of Nautobot through TravisCI.\n\nThe project is packaged with a light development environment based on `docker-compose` to help with the local development of the project and to run the tests within TravisCI.\n\nThe project is following Network to Code software development guideline and is leveraging:\n\n- Black, Pylint, Bandit and pydocstyle for Python linting and formatting.\n- Django unit test to ensure the plugin is working properly.\n\n### Development Environment\n\nThe development environment can be used in 2 ways. First, with a local poetry environment if you wish to develop outside of Docker. Second, inside of a docker container.\n\n#### Invoke tasks\n\nThe [PyInvoke](http://www.pyinvoke.org/) library is used to provide some helper commands based on the environment.  There are a few configuration parameters which can be passed to PyInvoke to override the default configuration:\n\n* `nautobot_ver`: the version of Nautobot to use as a base for any built docker containers (default: latest)\n* `project_name`: the default docker compose project name (default: nautobot-plugin-chatops-aci)\n* `python_ver`: the version of Python to use as a base for any built docker containers (default: 3.6)\n* `local`: a boolean flag indicating if invoke tasks should be run on the host or inside the docker containers (default: False, commands will be run in docker containers)\n* `compose_dir`: the full path to a directory containing the project compose files\n* `compose_files`: a list of compose files applied in order (see [Multiple Compose files](https://docs.docker.com/compose/extends/#multiple-compose-files) for more information)\n\nUsing PyInvoke these configuration options can be overridden using [several methods](http://docs.pyinvoke.org/en/stable/concepts/configuration.html).  Perhaps the simplest is simply setting an environment variable `INVOKE_NAUTOBOT-PLUGIN-CHATOPS-ACI_VARIABLE_NAME` where `VARIABLE_NAME` is the variable you are trying to override.  The only exception is `compose_files`, because it is a list it must be overridden in a yaml file.  There is an example `invoke.yml` in this directory which can be used as a starting point.\n\n#### Local Poetry Development Environment\n\n1.  Copy `development/creds.env.example` to `development/creds.env` (This file will be ignored by git and docker)\n2.  Uncomment the `POSTGRES_HOST`, `REDIS_HOST`, and `NAUTOBOT_ROOT` variables in `development/creds.env`\n3.  Create an invoke.yml with the following contents at the root of the repo:\n\n```shell\n---\nnautobot_plugin_chatops_aci:\n  local: true\n  compose_files:\n    - \"docker-compose.requirements.yml\"\n```\n\n3.  Run the following commands:\n\n```shell\npoetry shell\npoetry install\nexport $(cat development/dev.env | xargs)\nexport $(cat development/creds.env | xargs) \n```\n\n4.  You can now run nautobot-server commands as you would from the [Nautobot documentation](https://nautobot.readthedocs.io/en/latest/) for example to start the development server:\n\n```shell\nnautobot-server runserver 0.0.0.0:8080 --insecure\n```\n\nNautobot server can now be accessed at [http://localhost:8080](http://localhost:8080).\n\n#### Docker Development Environment\n\nThis project is managed by [Python Poetry](https://python-poetry.org/) and has a few requirements to setup your development environment:\n\n1.  Install Poetry, see the [Poetry Documentation](https://python-poetry.org/docs/#installation) for your operating system.\n2.  Install Docker, see the [Docker documentation](https://docs.docker.com/get-docker/) for your operating system.\n\nOnce you have Poetry and Docker installed you can run the following commands to install all other development dependencies in an isolated python virtual environment:\n\n```shell\npoetry shell\npoetry install\ninvoke start\n```\n\nNautobot server can now be accessed at [http://localhost:8080](http://localhost:8080).\n\n### CLI Helper Commands\n\nThe project is coming with a CLI helper based on [invoke](http://www.pyinvoke.org/) to help setup the development environment. The commands are listed below in 3 categories `dev environment`, `utility` and `testing`. \n\nEach command can be executed with `invoke <command>`. Environment variables `INVOKE_NAUTOBOT-PLUGIN-CHATOPS-ACI_PYTHON_VER` and `INVOKE_NAUTOBOT-PLUGIN-CHATOPS-ACI_NAUTOBOT_VER` may be specified to override the default versions. Each command also has its own help `invoke <command> --help`\n\n#### Docker dev environment\n\n```no-highlight\n  build            Build all docker images.\n  debug            Start Nautobot and its dependencies in debug mode.\n  destroy          Destroy all containers and volumes.\n  restart          Restart Nautobot and its dependencies.\n  start            Start Nautobot and its dependencies in detached mode.\n  stop             Stop Nautobot and its dependencies.\n```\n\n#### Utility\n\n```no-highlight\n  cli              Launch a bash shell inside the running Nautobot container.\n  create-user      Create a new user in django (default: admin), will prompt for password.\n  makemigrations   Run Make Migration in Django.\n  nbshell          Launch a nbshell session.\n```\n\n#### Testing\n\n```no-highlight\n  bandit           Run bandit to validate basic static code security analysis.\n  black            Run black to check that Python files adhere to its style standards.\n  flake8           This will run flake8 for the specified name and Python version.\n  pydocstyle       Run pydocstyle to validate docstring formatting adheres to NTC defined standards.\n  pylint           Run pylint code analysis.\n  tests            Run all tests for this plugin.\n  unittest         Run Django unit tests for the plugin.\n```\n\n## Questions\n\nFor any questions or comments, please check the [FAQ](FAQ.md) first and feel free to swing by the [Network to Code slack channel](https://networktocode.slack.com/) (channel #networktocode).\nSign up [here](http://slack.networktocode.com/)\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/nautobot/nautobot-plugin-chatops-aci",
    "keywords": "nautobot,nautobot-plugin,nautobot-chatops-plugin",
    "license": "Apache-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "nautobot-plugin-chatops-aci",
    "package_url": "https://pypi.org/project/nautobot-plugin-chatops-aci/",
    "platform": "",
    "project_url": "https://pypi.org/project/nautobot-plugin-chatops-aci/",
    "project_urls": {
      "Homepage": "https://github.com/nautobot/nautobot-plugin-chatops-aci",
      "Repository": "https://github.com/nautobot/nautobot-plugin-chatops-aci"
    },
    "release_url": "https://pypi.org/project/nautobot-plugin-chatops-aci/1.0.0/",
    "requires_dist": [
      "importlib-metadata (>=3.5)",
      "nautobot",
      "nautobot-chatops (>=1.5,<2.0)",
      "prettytable (>=2.1.0,<3.0.0)"
    ],
    "requires_python": ">=3.6.2,<4.0.0",
    "summary": "Nautobot Plugin Chatops Cisco ACI",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12181794,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "739fbe480678c1430f7110579a17bad2d3da3872c10de8ec8ffcad7c0ef8d981",
          "md5": "ce376625f3958949748d892319e3a534",
          "sha256": "4cdb6715c27287a77e28a0b64a3d8801b0a6b0b4cffd6ceb61d82504257c7cbf"
        },
        "downloads": -1,
        "filename": "nautobot_plugin_chatops_aci-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ce376625f3958949748d892319e3a534",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.2,<4.0.0",
        "size": 91956,
        "upload_time": "2021-12-01T21:38:02",
        "upload_time_iso_8601": "2021-12-01T21:38:02.750204Z",
        "url": "https://files.pythonhosted.org/packages/73/9f/be480678c1430f7110579a17bad2d3da3872c10de8ec8ffcad7c0ef8d981/nautobot_plugin_chatops_aci-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5a6146e105db1b3915b00abccf9ac37590907bcdb36db612bdf9d02cee9bd8a9",
          "md5": "746dbecea0c1fced52b1352cca0652b9",
          "sha256": "ed9eb72024070afe7ce2c9a5a42eac4e68cebf4b7721d293f02e7eadf6d14596"
        },
        "downloads": -1,
        "filename": "nautobot-plugin-chatops-aci-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "746dbecea0c1fced52b1352cca0652b9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.2,<4.0.0",
        "size": 91491,
        "upload_time": "2021-12-01T21:38:04",
        "upload_time_iso_8601": "2021-12-01T21:38:04.072057Z",
        "url": "https://files.pythonhosted.org/packages/5a/61/46e105db1b3915b00abccf9ac37590907bcdb36db612bdf9d02cee9bd8a9/nautobot-plugin-chatops-aci-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "739fbe480678c1430f7110579a17bad2d3da3872c10de8ec8ffcad7c0ef8d981",
        "md5": "ce376625f3958949748d892319e3a534",
        "sha256": "4cdb6715c27287a77e28a0b64a3d8801b0a6b0b4cffd6ceb61d82504257c7cbf"
      },
      "downloads": -1,
      "filename": "nautobot_plugin_chatops_aci-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ce376625f3958949748d892319e3a534",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6.2,<4.0.0",
      "size": 91956,
      "upload_time": "2021-12-01T21:38:02",
      "upload_time_iso_8601": "2021-12-01T21:38:02.750204Z",
      "url": "https://files.pythonhosted.org/packages/73/9f/be480678c1430f7110579a17bad2d3da3872c10de8ec8ffcad7c0ef8d981/nautobot_plugin_chatops_aci-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5a6146e105db1b3915b00abccf9ac37590907bcdb36db612bdf9d02cee9bd8a9",
        "md5": "746dbecea0c1fced52b1352cca0652b9",
        "sha256": "ed9eb72024070afe7ce2c9a5a42eac4e68cebf4b7721d293f02e7eadf6d14596"
      },
      "downloads": -1,
      "filename": "nautobot-plugin-chatops-aci-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "746dbecea0c1fced52b1352cca0652b9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.2,<4.0.0",
      "size": 91491,
      "upload_time": "2021-12-01T21:38:04",
      "upload_time_iso_8601": "2021-12-01T21:38:04.072057Z",
      "url": "https://files.pythonhosted.org/packages/5a/61/46e105db1b3915b00abccf9ac37590907bcdb36db612bdf9d02cee9bd8a9/nautobot-plugin-chatops-aci-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}