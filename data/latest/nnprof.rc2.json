{
  "info": {
    "author": "Feng Wang",
    "author_email": "wffatescript@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# nnprof \n\n## Introduction\n\nnnprof is a profile tool for pytorch neural networks. \n\n### Features\n\n* **multi profile mode**: nnprof support 4 profile mode: Layer level, Operation level, Mixed level, Layer Tree level. Please check below for detail usage. \n* **time and memory profile**: nnprof support both time and memory profile now. But since memory profile is first supported in pytorch 1.6, please use torch version >= 1.6 for memory profile.\n* **support sorted by given key and show profile percent**: user could print table with percentage and sorted profile info using a given key,  which is really helpful for optimiziing neural network.\n\n## Requirements\n\n* Python >= 3.6\n* PyTorch\n* Numpy\n\n## Get Started\n\n### install nnprof\n* pip install: \n```shell\npip install nnprof\n```\n* from source: \n```shell\npython -m pip install 'git+https://github.com/FateScript/nnprof.git'\n\n# or install after clone this repo\ngit clone https://github.com/FateScript/nnprof.git\npip install -e nnprof\n```\n\n### use nnprf\n\n```python3\nfrom nnprof import profile, ProfileMode\nimport torch\nimport torchvision\n\nmodel = torchvision.models.alexnet(pretrained=False)\nx = torch.rand([1, 3, 224, 224])\n\n# mode could be anyone in LAYER, OP, MIXED, LAYER_TREE\nmode = ProfileMode.LAYER\n\nwith profile(model, mode=mode) as prof:\n    y = model(x)\n\nprint(prof.table(average=False, sorted_by=\"cpu_time\"))\n# table could be sorted by presented header.\n```\n\nPart of presented table looks like table below, Note that they are sorted by cpu_time.\n```\n╒══════════════════════╤═══════════════════╤═══════════════════╤════════╕\n│ name                 │ self_cpu_time     │ cpu_time          │   hits │\n╞══════════════════════╪═══════════════════╪═══════════════════╪════════╡\n│ AlexNet.features.0   │ 19.114ms (34.77%) │ 76.383ms (45.65%) │      1 │\n├──────────────────────┼───────────────────┼───────────────────┼────────┤\n│ AlexNet.features.3   │ 5.148ms (9.37%)   │ 20.576ms (12.30%) │      1 │\n├──────────────────────┼───────────────────┼───────────────────┼────────┤\n│ AlexNet.features.8   │ 4.839ms (8.80%)   │ 19.336ms (11.56%) │      1 │\n├──────────────────────┼───────────────────┼───────────────────┼────────┤\n│ AlexNet.features.6   │ 4.162ms (7.57%)   │ 16.632ms (9.94%)  │      1 │\n├──────────────────────┼───────────────────┼───────────────────┼────────┤\n│ AlexNet.features.10  │ 2.705ms (4.92%)   │ 10.713ms (6.40%)  │      1 │\n├──────────────────────┼───────────────────┼───────────────────┼────────┤\n```\n\nYou are welcomed to try diffierent profile mode and more table format.\n\n## Contribution\n\nAny issues and pull requests are welcomed.\n\n## Acknowledgement\n\nSome thoughts of nnprof are inspired by  [torchprof](https://github.com/awwong1/torchprof) and [torch.autograd.profile](https://github.com/pytorch/pytorch/blob/749f8b78508c43f9e6331f2395a4202785068442/torch/autograd/profiler.py) .\nMany thanks to the authors.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/FateScript/nnprof",
    "keywords": "",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "nnprof",
    "package_url": "https://pypi.org/project/nnprof/",
    "platform": "",
    "project_url": "https://pypi.org/project/nnprof/",
    "project_urls": {
      "Homepage": "https://github.com/FateScript/nnprof"
    },
    "release_url": "https://pypi.org/project/nnprof/0.1.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Profile tool for neural network(time, memory, etc.)",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9104441,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e6e36f49e26d6de2c486bd9335f6e36c3f57acb28d2578a1b43198ef73ba7eaa",
          "md5": "54ad92986ad240e749074fc8b56063ad",
          "sha256": "65c79625322c02df189710bab2d1bc2abe1dbfdab2721979030bcb3e3ea10ca0"
        },
        "downloads": -1,
        "filename": "nnprof-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "54ad92986ad240e749074fc8b56063ad",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6845,
        "upload_time": "2021-01-11T07:20:43",
        "upload_time_iso_8601": "2021-01-11T07:20:43.821309Z",
        "url": "https://files.pythonhosted.org/packages/e6/e3/6f49e26d6de2c486bd9335f6e36c3f57acb28d2578a1b43198ef73ba7eaa/nnprof-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9db3a978d2b1185c6d26decb62d13d04903f23e6c25adecfd5b20ff78e96fd17",
          "md5": "1522e579d27238cb928828175c6453e0",
          "sha256": "dca701810c075ca01cd553d4ccff6a9cea62a1c7d9371933ec4ccaf1ed3eb85b"
        },
        "downloads": -1,
        "filename": "nnprof-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1522e579d27238cb928828175c6453e0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7215,
        "upload_time": "2021-01-11T11:15:06",
        "upload_time_iso_8601": "2021-01-11T11:15:06.611096Z",
        "url": "https://files.pythonhosted.org/packages/9d/b3/a978d2b1185c6d26decb62d13d04903f23e6c25adecfd5b20ff78e96fd17/nnprof-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9db3a978d2b1185c6d26decb62d13d04903f23e6c25adecfd5b20ff78e96fd17",
        "md5": "1522e579d27238cb928828175c6453e0",
        "sha256": "dca701810c075ca01cd553d4ccff6a9cea62a1c7d9371933ec4ccaf1ed3eb85b"
      },
      "downloads": -1,
      "filename": "nnprof-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "1522e579d27238cb928828175c6453e0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7215,
      "upload_time": "2021-01-11T11:15:06",
      "upload_time_iso_8601": "2021-01-11T11:15:06.611096Z",
      "url": "https://files.pythonhosted.org/packages/9d/b3/a978d2b1185c6d26decb62d13d04903f23e6c25adecfd5b20ff78e96fd17/nnprof-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}