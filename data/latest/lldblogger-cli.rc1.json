{
  "info": {
    "author": "ocean",
    "author_email": "tomcat1991@126.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# 使用指引\n安装lldblogger\n```\npip install lldblogger\n```\n指定要测试的app目录地址和断点日志配置文件\n```\nfrom lldblogger.runner import Runner\n\nrunner = Runner(log_output_path='log file path')\nrunner.run(\"path to app\", \"path to config json\")\n\n...\n\nrunner.terminate() # 停止调试\n```\napp文件可以从debug配置的ipa包中解压出来，同时需要将配套的dSYM文件置于同一个目录，可以通过Runner的构造函数指定断点日志输出到哪个文件。\n\n断点日志配置文件格式如下:\n\n```\n[\n  {\n    \"file\": \"文件名\",\n    \"line\": 48,\n    \"log\": \"[测试串行队列] counter： @counter@\"\n  },\n  {\n    \"symbol\": \"-[ViewController viewDidLoad]\",\n    \"log\": \"<From LLDB> [LLDBTest] 使用符号断点 ViewController viewDidLoad\"\n  }\n]\n```\n目前支持两种形式的断点日志\n1. 指定文件名和代码行数，`file`表示文件名，比如`AppDelegate.m`，`line`表示代码行数，`log`表示要打印的日志\n2. 指定方法的符号名称`symbol`，同样`log`表示要打印的日志\n\n日志`log`可以包含动态参数，使用`@@`包裹动态参数，比如要打印局部变量`localVar`，可以这么写\n```\n\"log\": \"局部变量：@localVar@\"\n```\n\n目前已测试的动态参数支持情况：\n1. 方法的参数\n1. 局部变量\n1. 静态变量\n1. 类的实例变量\n1. 简单的表达式\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lldblogger-cli",
    "package_url": "https://pypi.org/project/lldblogger-cli/",
    "platform": "",
    "project_url": "https://pypi.org/project/lldblogger-cli/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/lldblogger-cli/1.0/",
    "requires_dist": [
      "coloredlogs",
      "fire"
    ],
    "requires_python": "",
    "summary": "__pip_description__",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9714185,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "22dacbba0ccd8e5a034575cb6b59d19074edde07a34394f34be9d29096b73029",
          "md5": "ee3ad60ecbc92f3dc2a16e14df4abcf1",
          "sha256": "b9b6f888cd77ec4ddb20bb7c12598feed6c9b76370f6161226f70c22192500bc"
        },
        "downloads": -1,
        "filename": "lldblogger_cli-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ee3ad60ecbc92f3dc2a16e14df4abcf1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6309,
        "upload_time": "2021-03-09T09:52:03",
        "upload_time_iso_8601": "2021-03-09T09:52:03.945206Z",
        "url": "https://files.pythonhosted.org/packages/22/da/cbba0ccd8e5a034575cb6b59d19074edde07a34394f34be9d29096b73029/lldblogger_cli-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "22dacbba0ccd8e5a034575cb6b59d19074edde07a34394f34be9d29096b73029",
        "md5": "ee3ad60ecbc92f3dc2a16e14df4abcf1",
        "sha256": "b9b6f888cd77ec4ddb20bb7c12598feed6c9b76370f6161226f70c22192500bc"
      },
      "downloads": -1,
      "filename": "lldblogger_cli-1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ee3ad60ecbc92f3dc2a16e14df4abcf1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 6309,
      "upload_time": "2021-03-09T09:52:03",
      "upload_time_iso_8601": "2021-03-09T09:52:03.945206Z",
      "url": "https://files.pythonhosted.org/packages/22/da/cbba0ccd8e5a034575cb6b59d19074edde07a34394f34be9d29096b73029/lldblogger_cli-1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}