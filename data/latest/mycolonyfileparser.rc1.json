{
  "info": {
    "author": "Euxcbsks",
    "author_email": "hawhaw02030746@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# mcfp - My Colony File Parser\n\n  [![DeepSource](https://deepsource.io/gh/MCW-My-Colony-Wiki/MyColonyFileParser.svg/?label=active+issues&show_trend=true&token=zjOyAP4RLEuWcm5YOU1NQJW_)](https://deepsource.io/gh/MCW-My-Colony-Wiki/MyColonyFileParser/?ref=repository-badge)\n  \n  [中文版readme](README_zh.md)\n  \n  current not suppot My Colony 2\n\n## Index of content\n\n- [Config](#config)\n- [Classes](#classes)\n  - [Base](#base)\n    - [CommonBase](#commonbase)\n    - [DictBase](#dictbase)\n    - [ListBase](#listbase)\n  - [FileBase](#filebase)\n    - [Game](#game)\n    - [Strings](#strings)\n  - [CategoryBase](#categorybase)\n    - [DictCategory](#dictcategory)\n    - [ListCategory](#listcategory)\n  - [UnitBase](#unitbase)\n    - [DictUnit](#dictunit)\n    - [ListUnit](#listunit)\n- [Exceptions](#exceptions)\n  - [MCFPError](#mcfperror)\n    - [FileError](#fileerror)\n      - [InvalidFileChannel](#invalidfilechannel)\n      - [InvalidFileVersion](#invalidfileversion)\n      - [InvalidFileName](#invalidfilename)\n    - [CategoryError](#categoryerror)\n      - [InvalidCategoryName](#invalidcategoryname)\n    - [UnitError](#uniterror)\n      - [InvalidUnitName](#invalidunitname)\n\n## Config\n\n- Description: this module use `configparser` that in stdlib to provide config function\n- Path: `mcfp.config.config`\n- Sections\n  - `network`\n    - Options\n      - `timeout`(int, default=3): timeout of all the network related function\n\n## Classes\n\n### Base\n\n#### CommonBase\n\n- Description: provide generic method\n- Path: `mcfp.base.CommonBase`\n- Method\n  - `__delattr__`: disable `del object.attr`\n  - `__str__`: return `self.name`\n\n#### DictBase\n\n- Description: provide method of `dict` object\n- Path: `mcfp.base.DictBase`\n- Inherit: [CommonBase](#commonbase)\n\n#### ListBase\n\n- Description: provide method of `list` object\n- Path: `mcfp.base.ListBase`\n- Inherit: [CommonBase](#commonbase)\n\n### FileBase\n\n- Description: basically same as `dict` object\n- Path: `mcfp.filebase.FileBase`\n- Inherit: [DictBase](#dictbase)\n- Attributes\n  - `name`: file name\n  - `dict`: file data\n- Method\n  - `categories`: alias of `file.keys()`\n\n#### Game\n\n- Description: represents files like [game.js](https://www.apewebapps.com/apps/my-colony/1.14.0/game.js)\n- Path: `mcfp.file.Game`\n- Inherit: [FileBase](#filebase)\n\n#### Strings\n\n- Description: represents files like [strings.js](https://www.apewebapps.com/apps/my-colony/1.14.0/strings.js)\n- Path: `mcfp.file.Strings`\n- Inherit: [FileBase](#filebase)\n\n### CategoryBase\n\n- Path: `mcfp.categorybase.CategoryBase`\n- Common attributes\n  - `file`: instance of subclass of FileBase which this category belong\n  - `name`: category name\n  - `data`: category data\n- Common method\n  - `units`: Implemented by subclass\n\n#### DictCategory\n\n- Description: basically same as `dict` object\n- Path: `mcfp.category.DictCategory`\n- Inherit: [DictBase](#dictbase), [CategoryBase](#categorybase)\n- Attributes\n  - `dict`: alias of `self.data`\n- Method\n  - `units`: alias of `self.keys`\n\n#### ListCategory\n\n- Description: basically same as `list` object\n- Path: `mcfp.category.ListCategory`\n- Inherit: [ListBase](#listbase), [CategoryBase](#categorybase)\n- Attributes\n  - `list`: alias of `self.data`\n- Method\n  - `units`: similar with `self.__iter__` but return str object\n\n### UnitBase\n\n- Path: `mcfp.unitbase.UnitBase`\n- Common attributes\n  - `file`: instance of subclass of FileBase which this unit belong, same as `category.file`\n  - `category`: instance of subclass of CategoryBase which this unit belong\n  - `data`: unit data\n\n#### DictUnit\n\n- Description: basically same as `dict` object\n- Path: `mcfp.unit.DictUnit`\n- Inherit: [DictBase](#dictbase), [UnitBase](#unitbase)\n\n#### ListUnit\n\n- Description: basically same as `list` object\n- Path: `mcfp.unit.ListUnit`\n- Inherit: [ListBase](#listbase), [UnitBase](#unitbase)\n\n## Excpetions\n\n### MCFPError\n\nBase exception of MCFP\n\n- Inherit: [Exception](https://docs.python.org/3/library/exceptions.html#Exception)\n\n### FileError\n\nFile related error\n\n- Inherit: [MCFPerror](#mcfperror)\n\n### InvalidFileChannel\n\nInvalid file channel\n\n- Inherit: [FileError](#fileerror)\n\n### InvalidFileVersion\n\nInvalid file version\n\n- Inherit: [FileError](#fileerror)\n\n### InvalidFileName\n\nInvalid file name\n\n- Inherit: [FileError](#fileerror)\n\n### CategoryError\n\nCategory related error\n\n- Inherit: [MCFPError](#mcfperror)\n\n### InvalidCategoryName\n\nInvalid category name\n\n- Inherit: [CategoryError](#categoryerror)\n\n### UnitError\n\nUnit related error\n\n- Inherit: [MCFPError](#mcfperror)\n\n### InvalidUnitName\n\nInvalid unit name\n\n- Inherit: [UnitError](#uniterror)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Euxcbsks/MyColonyFileParser",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "MyColonyFileParser",
    "package_url": "https://pypi.org/project/MyColonyFileParser/",
    "platform": "",
    "project_url": "https://pypi.org/project/MyColonyFileParser/",
    "project_urls": {
      "Homepage": "https://github.com/Euxcbsks/MyColonyFileParser"
    },
    "release_url": "https://pypi.org/project/MyColonyFileParser/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "MCFP - My Colony File Parser",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11320383,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ac943bd69cffec8c11adf40922e4d32cdf35c031539c8c4019515d991d030a85",
          "md5": "678a575a958160f04a2f11867b47e757",
          "sha256": "f7e2c801cc544f39168d80221c0beac25e6e9a6712868ca38e3e2fb36de91507"
        },
        "downloads": -1,
        "filename": "MyColonyFileParser-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "678a575a958160f04a2f11867b47e757",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11492,
        "upload_time": "2021-08-31T02:11:30",
        "upload_time_iso_8601": "2021-08-31T02:11:30.893949Z",
        "url": "https://files.pythonhosted.org/packages/ac/94/3bd69cffec8c11adf40922e4d32cdf35c031539c8c4019515d991d030a85/MyColonyFileParser-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ac943bd69cffec8c11adf40922e4d32cdf35c031539c8c4019515d991d030a85",
        "md5": "678a575a958160f04a2f11867b47e757",
        "sha256": "f7e2c801cc544f39168d80221c0beac25e6e9a6712868ca38e3e2fb36de91507"
      },
      "downloads": -1,
      "filename": "MyColonyFileParser-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "678a575a958160f04a2f11867b47e757",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 11492,
      "upload_time": "2021-08-31T02:11:30",
      "upload_time_iso_8601": "2021-08-31T02:11:30.893949Z",
      "url": "https://files.pythonhosted.org/packages/ac/94/3bd69cffec8c11adf40922e4d32cdf35c031539c8c4019515d991d030a85/MyColonyFileParser-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}