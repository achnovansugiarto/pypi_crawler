{
  "info": {
    "author": "Jiale Zhi",
    "author_email": "jiale@uber.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3",
      "Topic :: System :: Distributed Computing"
    ],
    "description": "<p align=\"right\">\n  <a href=\"https://travis-ci.com/uber/fiber\">\n      <img src=\"https://travis-ci.com/uber/fiber.svg?token=BxMzxQEDDtTBPG9151kk&branch=master\" alt=\"build\" />\n  </a>\n</p>\n\n<img src=\"docs/img/fiber_logo.png\" alt=\"drawing\" width=\"550\"/>\n\n[**Project Home**](https://uber.github.io/fiber/) &nbsp;\n[**Blog**](https://uber.github.io/fiber/introduction/) &nbsp;\n[**Documents**](https://uber.github.io/fiber/getting-started/) &nbsp;\n[**Paper**](https://arxiv.org/abs/2003.11164) &nbsp;\n[**Media Coverage**](https://venturebeat.com/2020/03/26/uber-details-fiber-a-framework-for-distributed-ai-model-training/)\n\n# Fiber\n\n### Distributed Computing for AI Made Simple\n\n*This project is experimental and the APIs are not considered stable.*\n\nFiber is a Python distributed computing library for modern computer clusters.\n\n* It is easy to use. Fiber allows you to write programs that run on a computer cluster level without the need to dive into the details of computer cluster.\n* It is easy to learn. Fiber provides the same API as Python's standard [multiprocessing](https://docs.python.org/3.6/library/multiprocessing.html) library that you are familiar with. If you know how to use multiprocessing, you can program a computer cluster with Fiber.\n* It is fast. Fiber's communication backbone is built on top of [Nanomsg](https://nanomsg.org/) which is a high-performance asynchronous messaging library to allow fast and reliable communication.\n* It doesn't need deployment. You run it as the same way as running a normal application on a computer cluster and Fiber handles the rest for you.\n* It it reliable. Fiber has built-in error handling when you are running a pool of workers. Users can focus on writing the actual application code instead of dealing with crashed workers.\n\nOriginally, it was developed to power large scale parallel scientific computation projects like [POET](https://eng.uber.com/poet-open-ended-deep-learning/) and it has been used to power similar projects within Uber.\n\n\n## Installation\n\n```\npip install fiber\n```\n\nCheck [here](https://uber.github.io/fiber/installation/) for details.\n\n## Quick Start\n\n\n### Hello Fiber\nTo use Fiber, simply import it in your code and it works very similar to multiprocessing.\n\n```python\nimport fiber\n\nif __name__ == '__main__':\n    fiber.Process(target=print, args=('Hello, Fiber!',)).start()\n```\n\nNote that `if __name__ == '__main__':` is necessary because Fiber uses *spawn* method to start new processes. Check [here](https://stackoverflow.com/questions/50781216/in-python-multiprocessing-process-do-we-have-to-use-name-main) for details.\n\nLet's take look at another more complex example:\n\n### Estimating Pi\n\n\n```python\nimport fiber\nimport random\n\n@fiber.meta(cpu=1)\ndef inside(p):\n    x, y = random.random(), random.random()\n    return x * x + y * y < 1\n\ndef main():\n    NUM_SAMPLES = int(1e6)\n    pool = fiber.Pool(processes=4)\n    count = sum(pool.map(inside, range(0, NUM_SAMPLES)))\n    print(\"Pi is roughly {}\".format(4.0 * count / NUM_SAMPLES))\n\nif __name__ == '__main__':\n    main()\n```\n\n\nFiber implements most of multiprocessing's API including `Process`, `SimpleQueue`, `Pool`, `Pipe`, `Manager` and it has its own extension to the multiprocessing's API to make it easy to compose large scale distributed applications. For the detailed API guild, check out [here](https://uber.github.io/fiber/process/).\n\n### Running on a Kubernetes cluster\n\nFiber also has native support for computer clusters. To run the above example on Kubernetes, fiber provided a convenient command line tool to manage the workflow.\n\nAssume you have a working docker environment locally and have finished configuring [Google Cloud SDK](https://cloud.google.com/sdk/docs/quickstarts). Both `gcloud` and `kubectl` are available locally. Then you can start by writing a Dockerfile which describes the running environment.  An example Dockerfile looks like this:\n\n```dockerfile\n# example.docker\nFROM python:3.6-buster\nADD examples/pi_estimation.py /root/pi_estimation.py\nRUN pip install fiber\n```\n**Build an image and launch your job**\n\n```\nfiber run -a python3 /root/pi_estimation.py\n```\n\nThis command will look for local Dockerfile and build a docker image and push it to your Google Container Registry . It then launches the main job which contains your code and runs the command `python3 /root/pi_estimation.py` inside your job. Once the main job is running, it will start 4 subsequent jobs on the cluster and each of them is a Pool worker.\n\n\n## Supported platforms\n\n* Operating system: Linux\n* Python: 3.6+\n* Supported cluster management systems:\n\t* Kubernetes (Tested with Google Kubernetes Engine on Google cloud)\n\nWe are interested in supporting other cluster management systems like [Slurm](https://slurm.schedmd.com/), if you want to contribute to it please let us know.\n\n\nCheck [here](https://uber.github.io/fiber/platforms/) for details.\n\n## Documentation\n\nThe documentation, including method/API references, can be found [here](https://uber.github.io/fiber/getting-started/).\n\n\n## Testing\n\nInstall test dependencies. You'll also need to make sure [docker](https://docs.docker.com/install/) is available on the testing machine.\n\n```bash\n$ pip install -e .[test]\n```\n\nRun tests\n\n```bash\n$ make test\n```\n\n## Contributing\nPlease read our [code of conduct](CODE_OF_CONDUCT.md) before you contribute! You can find details for submitting pull requests in the [CONTRIBUTING.md](CONTRIBUTING.md) file. Issue [template](https://help.github.com/articles/about-issue-and-pull-request-templates/).\n\n## Versioning\nWe document versions and changes in our changelog - see the [CHANGELOG.md](CHANGELOG.md) file for details.\n\n## License\nThis project is licensed under the Apache 2.0 License - see the [LICENSE](LICENSE) file for details.\n\n## Cite Fiber\n\n```\n@misc{zhi2020fiber,\n    title={Fiber: A Platform for Efficient Development and Distributed Training for Reinforcement Learning and Population-Based Methods},\n    author={Jiale Zhi and Rui Wang and Jeff Clune and Kenneth O. Stanley},\n    year={2020},\n    eprint={2003.11164},\n    archivePrefix={arXiv},\n    primaryClass={cs.LG}\n}\n```\n\n## Acknowledgments\n* Special thanks to Piero Molino for designing the logo for Fiber",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/uber/fiber",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fiber",
    "package_url": "https://pypi.org/project/fiber/",
    "platform": "",
    "project_url": "https://pypi.org/project/fiber/",
    "project_urls": {
      "Homepage": "https://github.com/uber/fiber"
    },
    "release_url": "https://pypi.org/project/fiber/0.2.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A distributed computing library for modern computer clusters",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7661919,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf84dc071c857bc1bb979c3346f4e513c94e84ac581060c59244d66d5b067bb3",
          "md5": "67f6c12ca15c38bfe3f38429120a60c0",
          "sha256": "dccaf2fcb9ffd7daeb45feadcd3dc6399b84d6a9a51763f06c846e04bf8bbeb5"
        },
        "downloads": -1,
        "filename": "fiber-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "67f6c12ca15c38bfe3f38429120a60c0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 544,
        "upload_time": "2019-01-07T19:28:26",
        "upload_time_iso_8601": "2019-01-07T19:28:26.753945Z",
        "url": "https://files.pythonhosted.org/packages/bf/84/dc071c857bc1bb979c3346f4e513c94e84ac581060c59244d66d5b067bb3/fiber-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "85a866c255fb55d261f7955cb0f7e3609990aba1774d4fce161772d6b949ab46",
          "md5": "7722d25ab07b6d623dc20c8eca1a1890",
          "sha256": "ff9ed84367c33c31fd79e935a0db687170f3b0090815eb0459b45f8d01d23451"
        },
        "downloads": -1,
        "filename": "fiber-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7722d25ab07b6d623dc20c8eca1a1890",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 58569,
        "upload_time": "2020-03-26T01:29:36",
        "upload_time_iso_8601": "2020-03-26T01:29:36.651245Z",
        "url": "https://files.pythonhosted.org/packages/85/a8/66c255fb55d261f7955cb0f7e3609990aba1774d4fce161772d6b949ab46/fiber-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0rc1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b852b8d07811b278e468041c72a436481f3cb75469bcdc9bf0fad28f82bdd038",
          "md5": "f917ddc2fa1403389fa808bc85162313",
          "sha256": "67b32e075e5e853f2d288b60431bb5e4f5f8ef2f86929e176f8bd73da5ba3671"
        },
        "downloads": -1,
        "filename": "fiber-0.2.0rc1.tar.gz",
        "has_sig": false,
        "md5_digest": "f917ddc2fa1403389fa808bc85162313",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 58577,
        "upload_time": "2020-03-26T00:58:42",
        "upload_time_iso_8601": "2020-03-26T00:58:42.360949Z",
        "url": "https://files.pythonhosted.org/packages/b8/52/b8d07811b278e468041c72a436481f3cb75469bcdc9bf0fad28f82bdd038/fiber-0.2.0rc1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aeb2cd58d966f0b3cde99046108dbfb8de80b9935dfb64606c4951321c30a240",
          "md5": "40494a203d11d2a0bd13f835de4c6127",
          "sha256": "dd7cfa8f21454f0315b49192be609456f71b710a5ab541587819dff8dec009b7"
        },
        "downloads": -1,
        "filename": "fiber-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "40494a203d11d2a0bd13f835de4c6127",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 61621,
        "upload_time": "2020-07-09T03:28:28",
        "upload_time_iso_8601": "2020-07-09T03:28:28.456774Z",
        "url": "https://files.pythonhosted.org/packages/ae/b2/cd58d966f0b3cde99046108dbfb8de80b9935dfb64606c4951321c30a240/fiber-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1.dev0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ffb20e82825eb926f507108cd7eceef28c4d08b56b2ecaf4c1d47548bb4be0ef",
          "md5": "09b3315859e87feb7f6aaa4b23c6729e",
          "sha256": "e31db2a48a223486cf901381a605db8e696e197e04309c9044c56c501f83c503"
        },
        "downloads": -1,
        "filename": "fiber-0.2.1.dev0.tar.gz",
        "has_sig": false,
        "md5_digest": "09b3315859e87feb7f6aaa4b23c6729e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 61030,
        "upload_time": "2020-06-08T06:09:48",
        "upload_time_iso_8601": "2020-06-08T06:09:48.587274Z",
        "url": "https://files.pythonhosted.org/packages/ff/b2/0e82825eb926f507108cd7eceef28c4d08b56b2ecaf4c1d47548bb4be0ef/fiber-0.2.1.dev0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1.dev1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2da802761bba9efc5020b7e19b87d43f807f39ae45a65c9455329e348a7f494f",
          "md5": "fe660146563222343d49be9f097ff194",
          "sha256": "9d8d09adda34608b1727279285bca255fdf77c01222d1b1fd2c980e23a9932f2"
        },
        "downloads": -1,
        "filename": "fiber-0.2.1.dev1.tar.gz",
        "has_sig": false,
        "md5_digest": "fe660146563222343d49be9f097ff194",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 61080,
        "upload_time": "2020-07-09T00:19:15",
        "upload_time_iso_8601": "2020-07-09T00:19:15.123555Z",
        "url": "https://files.pythonhosted.org/packages/2d/a8/02761bba9efc5020b7e19b87d43f807f39ae45a65c9455329e348a7f494f/fiber-0.2.1.dev1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "aeb2cd58d966f0b3cde99046108dbfb8de80b9935dfb64606c4951321c30a240",
        "md5": "40494a203d11d2a0bd13f835de4c6127",
        "sha256": "dd7cfa8f21454f0315b49192be609456f71b710a5ab541587819dff8dec009b7"
      },
      "downloads": -1,
      "filename": "fiber-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "40494a203d11d2a0bd13f835de4c6127",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 61621,
      "upload_time": "2020-07-09T03:28:28",
      "upload_time_iso_8601": "2020-07-09T03:28:28.456774Z",
      "url": "https://files.pythonhosted.org/packages/ae/b2/cd58d966f0b3cde99046108dbfb8de80b9935dfb64606c4951321c30a240/fiber-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}