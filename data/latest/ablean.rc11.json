{
  "info": {
    "author": "abl",
    "author_email": "support@quantconnect.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Financial and Insurance Industry",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "![Lean CLI](http://cdn.quantconnect.com.s3.us-east-1.amazonaws.com/i/github/lean-cli-splash.png)\n\n# QuantConnect Lean CLI\n \n[![Build Status](https://github.com/QuantConnect/lean-cli/workflows/Build/badge.svg)](https://github.com/QuantConnect/lean-cli/actions?query=workflow%3ABuild)\n[![PyPI Version](https://img.shields.io/pypi/v/lean)](https://pypi.org/project/lean/)\n[![Project Status](https://img.shields.io/pypi/status/lean)](https://pypi.org/project/lean/)\n\nThe Lean CLI is a cross-platform CLI aimed at making it easier to develop with the LEAN engine locally and in the cloud.\n\nVisit the [documentation website](https://www.lean.io/docs/lean-cli/key-concepts/getting-started) for comprehensive and up-to-date documentation.\n\n## Highlights\n\n- [Project scaffolding](https://www.lean.io/docs/lean-cli/projects/project-management)\n- [Local autocomplete](https://www.lean.io/docs/lean-cli/projects/autocomplete)\n- [Local data downloading](https://www.lean.io/docs/lean-cli/datasets/downloading-quantconnect-data)\n- [Local backtesting](https://www.lean.io/docs/lean-cli/backtesting/deployment#02-Run-Local-Backtests)\n- [Local debugging](https://www.lean.io/docs/lean-cli/backtesting/debugging)\n- [Local research environment](https://www.lean.io/docs/lean-cli/research)\n- [Local optimization](https://www.lean.io/docs/lean-cli/optimization/deployment#02-Run-Local-Optimizations)\n- [Local live trading](https://www.lean.io/docs/lean-cli/live-trading/quantconnect-paper-trading#02-Deploy-Local-Algorithms)\n- [Local backtest report creation](https://www.lean.io/docs/lean-cli/backtesting/report#02-Generate-a-Report)\n- [Cloud synchronization](https://www.lean.io/docs/lean-cli/projects/cloud-synchronization)\n- [Cloud backtesting](https://www.lean.io/docs/lean-cli/backtesting/deployment#03-Run-Cloud-Backtests)\n- [Cloud optimization](https://www.lean.io/docs/lean-cli/optimization/deployment#03-Run-Cloud-Optimizations)\n- [Cloud live trading](https://www.lean.io/docs/lean-cli/live-trading/quantconnect-paper-trading#03-Deploy-Cloud-Algorithms)\n\n## Installation\n\nThe CLI can be installed and updated by running `pip install --upgrade lean`.\n\nNote that many commands in the CLI require Docker to run. See [Get Docker](https://docs.docker.com/get-docker/) for instructions on how to install Docker for your operating system.\n\n**Note:** Some Linux users may need to install `tkinter` using the following commands:\n\n``` \nFor Python 3\n\nsudo apt-get install python3-tk\n\nFor Python 2.7\n\nsudo apt-get install python-tk\n```\nAfter installing the CLI, open a terminal in an empty directory and run `lean init`. This command downloads the latest configuration file and sample data from the [QuantConnect/Lean](https://github.com/QuantConnect/Lean) repository. We recommend running all Lean CLI commands in the same directory `lean init` was ran in.\n\n## Usage\n\nThe Lean CLI supports multiple workflows. The examples below serve as a starting point, you're free to mix local and cloud features in any way you'd like.\n\nA cloud-focused workflow (local development, cloud execution) with the CLI may look like this:\n1. Open a terminal in the directory you ran `lean init` in.\n2. Run `lean cloud pull` to pull remotely changed files.\n3. Start programming locally and run backtests in the cloud with `lean cloud backtest \"Project Name\" --open --push` whenever there is something to backtest. The `--open` flag means that the backtest results will be opened in the browser when done, while the `--push` flag means that local changes are pushed to the cloud before running the backtest.\n4. Whenever you want to create a new project, run `lean create-project \"Project Name\"` and `lean cloud push --project \"Project Name\"` to create a new project containing some basic code and to push it to the cloud.\n5. When you're finished for the moment, run `lean cloud push` to push all locally changed files to the cloud.\n\nA locally-focused workflow (local development, local execution) with the CLI may look like this:\n1. Open a terminal in the directory you ran `lean init` in.\n2. Run `lean create-project \"Project Name\"` to create a new project with some basic code to get you started.\n3. Work on your strategy in `./Project Name`.\n4. Run `lean research \"Project Name\"` to start a Jupyter Lab session to perform research in.\n5. Run `lean backtest \"Project Name\"` to run a backtest whenever there's something to test. This runs your strategy in a Docker container containing the same packages as the ones used on QuantConnect.com, but with your own data.\n\n## Commands\n\n*Note: the readme only contains the `--help` text of all commands. Visit the [documentation website](https://www.lean.io/docs/lean-cli/key-concepts/getting-started) for more comprehensive documentation.*\n\n<!-- commands start -->\n- [`lean backtest`](#lean-backtest)\n- [`lean build`](#lean-build)\n- [`lean cloud backtest`](#lean-cloud-backtest)\n- [`lean cloud live`](#lean-cloud-live)\n- [`lean cloud optimize`](#lean-cloud-optimize)\n- [`lean cloud pull`](#lean-cloud-pull)\n- [`lean cloud push`](#lean-cloud-push)\n- [`lean cloud status`](#lean-cloud-status)\n- [`lean config get`](#lean-config-get)\n- [`lean config list`](#lean-config-list)\n- [`lean config set`](#lean-config-set)\n- [`lean config unset`](#lean-config-unset)\n- [`lean create-project`](#lean-create-project)\n- [`lean data download`](#lean-data-download)\n- [`lean data generate`](#lean-data-generate)\n- [`lean gui logs`](#lean-gui-logs)\n- [`lean gui restart`](#lean-gui-restart)\n- [`lean gui start`](#lean-gui-start)\n- [`lean gui stop`](#lean-gui-stop)\n- [`lean init`](#lean-init)\n- [`lean library add`](#lean-library-add)\n- [`lean library remove`](#lean-library-remove)\n- [`lean live`](#lean-live)\n- [`lean login`](#lean-login)\n- [`lean logout`](#lean-logout)\n- [`lean logs`](#lean-logs)\n- [`lean optimize`](#lean-optimize)\n- [`lean report`](#lean-report)\n- [`lean research`](#lean-research)\n- [`lean whoami`](#lean-whoami)\n\n### `lean backtest`\n\nBacktest a project locally using Docker.\n\n```\nUsage: lean backtest [OPTIONS] PROJECT\n\n  Backtest a project locally using Docker.\n\n  If PROJECT is a directory, the algorithm in the main.py or Main.cs file inside it will be executed.\n  If PROJECT is a file, the algorithm in the specified file will be executed.\n\n  Go to the following url to learn how to debug backtests locally using the Lean CLI:\n  https://www.lean.io/docs/lean-cli/backtesting/debugging\n\n  By default the official LEAN engine image is used. You can override this using the --image option. Alternatively you\n  can set the default engine image for all commands using `lean config set engine-image <image>`.\n\nOptions:\n  --output DIRECTORY              Directory to store results in (defaults to PROJECT/backtests/TIMESTAMP)\n  -d, --detach                    Run the backtest in a detached Docker container and return immediately\n  --debug [pycharm|ptvsd|vsdbg|rider]\n                                  Enable a certain debugging method (see --help for more information)\n  --data-provider [Terminal Link|QuantConnect|Local]\n                                  Update the Lean configuration file to retrieve data from the given provider\n  --download-data                 Update the Lean configuration file to download data from the QuantConnect API, alias\n                                  for --data-provider QuantConnect\n\n  --data-purchase-limit INTEGER   The maximum amount of QCC to spend on downloading data during the backtest when using\n                                  QuantConnect as data provider\n\n  --release                       Compile C# projects in release configuration instead of debug\n  --image TEXT                    The LEAN engine image to use (defaults to quantconnect/lean:latest)\n  --update                        Pull the LEAN engine image before running the backtest\n  --lean-config FILE              The Lean configuration file that should be used (defaults to the nearest lean.json)\n  --verbose                       Enable debug logging\n  --help                          Show this message and exit.\n```\n\n_See code: [lean/commands/backtest.py](https://github.com/QuantConnect/lean-cli/blob/master/lean/commands/backtest.py)_\n\n### `lean build`\n\nBuild Docker images of your own version of LEAN and the Alpha Streams SDK.\n\n```\nUsage: lean build [OPTIONS] [ROOT]\n\n  Build Docker images of your own version of LEAN and the Alpha Streams SDK.\n\n  ROOT must point to a directory containing the LEAN repository and the Alpha Streams SDK repository:\n  https://github.com/QuantConnect/Lean & https://github.com/QuantConnect/AlphaStreams\n\n  When ROOT is not given, the current directory is used as root directory.\n\n  This command performs the following actions:\n  1. The lean-cli/foundation:latest image is built from Lean/DockerfileLeanFoundation(ARM).\n  2. LEAN is compiled in a Docker container using the lean-cli/foundation:latest image.\n  3. The Alpha Streams SDK is compiled in a Docker container using the lean-cli/foundation:latest image.\n  4. The lean-cli/engine:latest image is built from Lean/Dockerfile using lean-cli/foundation:latest as base image.\n  5. The lean-cli/research:latest image is built from Lean/DockerfileJupyter using lean-cli/engine:latest as base image.\n  6. The default engine image is set to lean-cli/engine:latest.\n  7. The default research image is set to lean-cli/research:latest.\n\n  When the foundation Dockerfile is the same as the official foundation Dockerfile, quantconnect/lean:foundation is\n  used instead of building a custom foundation image.\n\nOptions:\n  --tag TEXT  The tag to apply to custom images (defaults to latest)\n  --verbose   Enable debug logging\n  --help      Show this message and exit.\n```\n\n_See code: [lean/commands/build.py](https://github.com/QuantConnect/lean-cli/blob/master/lean/commands/build.py)_\n\n### `lean cloud backtest`\n\nBacktest a project in the cloud.\n\n```\nUsage: lean cloud backtest [OPTIONS] PROJECT\n\n  Backtest a project in the cloud.\n\n  PROJECT must be the name or id of the project to run a backtest for.\n\n  If the project that has to be backtested has been pulled to the local drive with `lean cloud pull` it is possible to\n  use the --push option to push local modifications to the cloud before running the backtest.\n\nOptions:\n  --name TEXT  The name of the backtest (a random one is generated if not specified)\n  --push       Push local modifications to the cloud before running the backtest\n  --open       Automatically open the results in the browser when the backtest is finished\n  --verbose    Enable debug logging\n  --help       Show this message and exit.\n```\n\n_See code: [lean/commands/cloud/backtest.py](https://github.com/QuantConnect/lean-cli/blob/master/lean/commands/cloud/backtest.py)_\n\n### `lean cloud live`\n\nStart live trading for a project in the cloud.\n\n```\nUsage: lean cloud live [OPTIONS] PROJECT\n\n  Start live trading for a project in the cloud.\n\n  PROJECT must be the name or the id of the project to start live trading for.\n\n  By default an interactive wizard is shown letting you configure the deployment. If --brokerage is given the command\n  runs in non-interactive mode. In this mode the CLI does not prompt for input or confirmation. In non-interactive\n  mode the options specific to the given brokerage are required, as well as --node, --auto-restart, --notify-order-\n  events and --notify-insights.\n\nOptions:\n  --brokerage [Paper Trading|Interactive Brokers|Tradier|Oanda|Bitfinex|Coinbase Pro|Binance|Zerodha|Samco|Kraken|FTX]\n                                  The brokerage to use\n  --ib-user-name TEXT             Your Interactive Brokers username\n  --ib-account TEXT               Your Interactive Brokers account id\n  --ib-password TEXT              Your Interactive Brokers password\n  --ib-data-feed BOOLEAN          Whether the Interactive Brokers price data feed must be used instead of the\n                                  QuantConnect price data feed\n\n  --tradier-account-id TEXT       Your Tradier account id\n  --tradier-access-token TEXT     Your Tradier access token\n  --tradier-environment [live|paper]\n                                  Whether the developer sandbox should be used\n  --oanda-environment [Practice|Trade]\n                                  The environment to run in, Practice for fxTrade Practice, Trade for fxTrade\n  --oanda-account-id TEXT         Your OANDA account id\n  --oanda-access-token TEXT       Your OANDA API token\n  --bitfinex-api-key TEXT         Your Bitfinex API key\n  --bitfinex-api-secret TEXT      Your Bitfinex API secret\n  --gdax-use-sandbox [live|paper]\n                                  Whether the sandbox should be used\n  --gdax-api-key TEXT             Your Coinbase Pro API key\n  --gdax-api-secret TEXT          Your Coinbase Pro API secret\n  --gdax-passphrase TEXT          Your Coinbase Pro API passphrase\n  --binance-use-testnet [live|paper]\n                                  Whether the testnet should be used\n  --binance-api-key TEXT          Your Binance API key\n  --binance-api-secret TEXT       Your Binance API secret\n  --zerodha-api-key TEXT          Your Kite Connect API key\n  --zerodha-access-token TEXT     Your Kite Connect access token\n  --zerodha-product-type [MIS|CNC|NRML]\n                                  MIS if you are targeting intraday products, CNC if you are targeting delivery\n                                  products, NRML if you are targeting carry forward products\n\n  --zerodha-trading-segment [EQUITY|COMMODITY]\n                                  EQUITY if you are trading equities on NSE or BSE, COMMODITY if you are trading\n                                  commodities on MCX\n\n  --samco-client-id TEXT          Your Samco account Client ID\n  --samco-client-password TEXT    Your Samco account password\n  --samco-year-of-birth TEXT      Your year of birth (YYYY) registered with Samco\n  --samco-product-type [MIS|CNC|NRML]\n                                  MIS if you are targeting intraday products, CNC if you are targeting delivery\n                                  products, NRML if you are targeting carry forward products\n\n  --samco-trading-segment [EQUITY|COMMODITY]\n                                  EQUITY if you are trading equities on NSE or BSE, COMMODITY if you are trading\n                                  commodities on MCX\n\n  --kraken-api-key TEXT           Your Kraken API key\n  --kraken-api-secret TEXT        Your Kraken API secret\n  --kraken-verification-tier [Starter|Intermediate|Pro]\n                                  Your Kraken Verification Tier\n  --ftx-exchange-name [FTX|FTXUS]\n                                  FTX exchange name [FTX, FTXUS]\n  --ftx-api-key TEXT              Your FTX API key\n  --ftxus-api-key TEXT            Your FTX API key\n  --ftx-api-secret TEXT           Your FTX API secret\n  --ftxus-api-secret TEXT         Your FTX API secret\n  --ftx-account-tier [Tier1|Tier2|Tier3|Tier4|Tier5|Tier6]\n                                  Your FTX Account Tier\n  --ftxus-account-tier [Tier1|Tier2|Tier3|Tier4|Tier5|Tier6]\n                                  Your FTX Account Tier\n  --node TEXT                     The name or id of the live node to run on\n  --auto-restart BOOLEAN          Whether automatic algorithm restarting must be enabled\n  --notify-order-events BOOLEAN   Whether notifications must be sent for order events\n  --notify-insights BOOLEAN       Whether notifications must be sent for emitted insights\n  --notify-emails TEXT            A comma-separated list of 'email:subject' pairs configuring email-notifications\n  --notify-webhooks TEXT          A comma-separated list of 'url:HEADER_1=VALUE_1:HEADER_2=VALUE_2:etc' pairs\n                                  configuring webhook-notifications\n\n  --notify-sms TEXT               A comma-separated list of phone numbers configuring SMS-notifications\n  --push                          Push local modifications to the cloud before starting live trading\n  --open                          Automatically open the live results in the browser once the deployment starts\n  --verbose                       Enable debug logging\n  --help                          Show this message and exit.\n```\n\n_See code: [lean/commands/cloud/live.py](https://github.com/QuantConnect/lean-cli/blob/master/lean/commands/cloud/live.py)_\n\n### `lean cloud optimize`\n\nOptimize a project in the cloud.\n\n```\nUsage: lean cloud optimize [OPTIONS] PROJECT\n\n  Optimize a project in the cloud.\n\n  PROJECT must be the name or id of the project to optimize.\n\n  An interactive prompt will be shown to configure the optimizer. If --target is given the command runs in non-\n  interactive mode. In this mode the CLI does not prompt for input and the following options become required:\n  --target, --target-direction, --parameter, --node and --parallel-nodes.\n\n  In non-interactive mode the --parameter option can be provided multiple times to configure multiple parameters:\n  - --parameter <name> <min value> <max value> <step size>\n  - --parameter my-first-parameter 1 10 0.5 --parameter my-second-parameter 20 30 5\n\n  In non-interactive mode the --constraint option can be provided multiple times to configure multiple constraints:\n  - --constraint \"<statistic> <operator> <value>\"\n  - --constraint \"Sharpe Ratio >= 0.5\" --constraint \"Drawdown < 0.25\"\n\n  If the project that has to be optimized has been pulled to the local drive with `lean cloud pull` it is possible to\n  use the --push option to push local modifications to the cloud before running the optimization.\n\nOptions:\n  --target TEXT                   The target statistic of the optimization\n  --target-direction [min|max]    Whether the target must be minimized or maximized\n  --parameter <TEXT FLOAT FLOAT FLOAT>...\n                                  The 'parameter min max step' pairs configuring the parameters to optimize\n  --constraint TEXT               The 'statistic operator value' pairs configuring the constraints of the optimization\n  --node [O2-8|O4-12|O8-16]       The node type to run the optimization on\n  --parallel-nodes INTEGER        The number of nodes that may be run in parallel\n  --name TEXT                     The name of the optimization (a random one is generated if not specified)\n  --push                          Push local modifications to the cloud before starting the optimization\n  --verbose                       Enable debug logging\n  --help                          Show this message and exit.\n```\n\n_See code: [lean/commands/cloud/optimize.py](https://github.com/QuantConnect/lean-cli/blob/master/lean/commands/cloud/optimize.py)_\n\n### `lean cloud pull`\n\nPull projects from QuantConnect to the local drive.\n\n```\nUsage: lean cloud pull [OPTIONS]\n\n  Pull projects from QuantConnect to the local drive.\n\n  This command overrides the content of local files with the content of their respective counterparts in the cloud.\n\n  This command will not delete local files for which there is no counterpart in the cloud.\n\nOptions:\n  --project TEXT   Name or id of the project to pull (all cloud projects if not specified)\n  --pull-bootcamp  Pull Boot Camp projects (disabled by default)\n  --verbose        Enable debug logging\n  --help           Show this message and exit.\n```\n\n_See code: [lean/commands/cloud/pull.py](https://github.com/QuantConnect/lean-cli/blob/master/lean/commands/cloud/pull.py)_\n\n### `lean cloud push`\n\nPush local projects to QuantConnect.\n\n```\nUsage: lean cloud push [OPTIONS]\n\n  Push local projects to QuantConnect.\n\n  This command overrides the content of cloud files with the content of their respective local counterparts.\n\n  This command will not delete cloud files which don't have a local counterpart.\n\nOptions:\n  --project DIRECTORY  Path to the local project to push (all local projects if not specified)\n  --verbose            Enable debug logging\n  --help               Show this message and exit.\n```\n\n_See code: [lean/commands/cloud/push.py](https://github.com/QuantConnect/lean-cli/blob/master/lean/commands/cloud/push.py)_\n\n### `lean cloud status`\n\nShow the live trading status of a project in the cloud.\n\n```\nUsage: lean cloud status [OPTIONS] PROJECT\n\n  Show the live trading status of a project in the cloud.\n\n  PROJECT must be the name or the id of the project to show the status for.\n\nOptions:\n  --verbose  Enable debug logging\n  --help     Show this message and exit.\n```\n\n_See code: [lean/commands/cloud/status.py](https://github.com/QuantConnect/lean-cli/blob/master/lean/commands/cloud/status.py)_\n\n### `lean config get`\n\nGet the current value of a configurable option.\n\n```\nUsage: lean config get [OPTIONS] KEY\n\n  Get the current value of a configurable option.\n\n  Sensitive options like credentials cannot be retrieved this way for security reasons. Please open\n  ~/.lean/credentials if you want to see your currently stored credentials.\n\n  Run `lean config list` to show all available options.\n\nOptions:\n  --verbose  Enable debug logging\n  --help     Show this message and exit.\n```\n\n_See code: [lean/commands/config/get.py](https://github.com/QuantConnect/lean-cli/blob/master/lean/commands/config/get.py)_\n\n### `lean config list`\n\nList the configurable options and their current values.\n\n```\nUsage: lean config list [OPTIONS]\n\n  List the configurable options and their current values.\n\nOptions:\n  --verbose  Enable debug logging\n  --help     Show this message and exit.\n```\n\n_See code: [lean/commands/config/list.py](https://github.com/QuantConnect/lean-cli/blob/master/lean/commands/config/list.py)_\n\n### `lean config set`\n\nSet a configurable option.\n\n```\nUsage: lean config set [OPTIONS] KEY VALUE\n\n  Set a configurable option.\n\n  Run `lean config list` to show all available options.\n\nOptions:\n  --verbose  Enable debug logging\n  --help     Show this message and exit.\n```\n\n_See code: [lean/commands/config/set.py](https://github.com/QuantConnect/lean-cli/blob/master/lean/commands/config/set.py)_\n\n### `lean config unset`\n\nUnset a configurable option.\n\n```\nUsage: lean config unset [OPTIONS] KEY\n\n  Unset a configurable option.\n\n  Run `lean config list` to show all available options.\n\nOptions:\n  --verbose  Enable debug logging\n  --help     Show this message and exit.\n```\n\n_See code: [lean/commands/config/unset.py](https://github.com/QuantConnect/lean-cli/blob/master/lean/commands/config/unset.py)_\n\n### `lean create-project`\n\nCreate a new project containing starter code.\n\n```\nUsage: lean create-project [OPTIONS] NAME\n\n  Create a new project containing starter code.\n\n  If NAME is a path containing subdirectories those will be created automatically.\n\n  The default language can be set using `lean config set default-language python/csharp`.\n\nOptions:\n  -l, --language [python|csharp]  The language of the project to create\n  --verbose                       Enable debug logging\n  --help                          Show this message and exit.\n```\n\n_See code: [lean/commands/create_project.py](https://github.com/QuantConnect/lean-cli/blob/master/lean/commands/create_project.py)_\n\n### `lean data download`\n\nPurchase and download data from QuantConnect Datasets.\n\n```\nUsage: lean data download [OPTIONS]\n\n  Purchase and download data from QuantConnect Datasets.\n\n  An interactive wizard will show to walk you through the process of selecting data, accepting the CLI API Access and\n  Data Agreement and payment. After this wizard the selected data will be downloaded automatically.\n\n  If --dataset is given the command runs in non-interactive mode. In this mode the CLI does not prompt for input or\n  confirmation but only halts when the agreement must be accepted. In non-interactive mode all options specific to the\n  selected dataset as well as --organization are required.\n\n  See the following url for the data that can be purchased and downloaded with this command:\n  https://www.quantconnect.com/datasets\n\nOptions:\n  --dataset TEXT       The name of the dataset to download non-interactively\n  --organization TEXT  The name or id of the organization to purchase and download data with\n  --overwrite          Overwrite existing local data\n  --lean-config FILE   The Lean configuration file that should be used (defaults to the nearest lean.json)\n  --verbose            Enable debug logging\n  --help               Show this message and exit.\n```\n\n_See code: [lean/commands/data/download.py](https://github.com/QuantConnect/lean-cli/blob/master/lean/commands/data/download.py)_\n\n### `lean data generate`\n\nGenerate random market data.\n\n```\nUsage: lean data generate [OPTIONS]\n\n  Generate random market data.\n\n  This uses the random data generator in LEAN to generate realistic market data using a Brownian motion model.\n  This generator supports the following security types, tick types and resolutions:\n  | Security type | Generated tick types | Supported resolutions                |\n  | ------------- | -------------------- | ------------------------------------ |\n  | Equity        | Trade                | Tick, Second, Minute, Hour and Daily |\n  | Forex         | Quote                | Tick, Second, Minute, Hour and Daily |\n  | CFD           | Quote                | Tick, Second, Minute, Hour and Daily |\n  | Future        | Trade and Quote      | Tick, Second, Minute, Hour and Daily |\n  | Crypto        | Trade and Quote      | Tick, Second, Minute, Hour and Daily |\n  | Option        | Trade and Quote      | Minute                               |\n\n  The following data densities are available:\n  - Dense: at least one data point per resolution step.\n  - Sparse: at least one data point per 5 resolution steps.\n  - VerySparse: at least one data point per 50 resolution steps.\n\n  Example which generates minute data for 100 equity symbols since 2015-01-01:\n  $ lean data generate --start=20150101 --symbol-count=100\n\n  Example which generates daily data for 100 crypto symbols since 2015-01-01:\n  $ lean data generate --start=20150101 --symbol-count=100 --security-type=Crypto --resolution=Daily\n\n  By default the official LEAN engine image is used. You can override this using the --image option. Alternatively you\n  can set the default engine image for all commands using `lean config set engine-image <image>`.\n\nOptions:\n  --start [yyyyMMdd]              Start date for the data to generate in yyyyMMdd format  [required]\n  --end [yyyyMMdd]                End date for the data to generate in yyyyMMdd format (defaults to today)\n  --symbol-count INTEGER RANGE    The number of symbols to generate data for  [required]\n  --security-type [Equity|Forex|Cfd|Future|Crypto|Option]\n                                  The security type to generate data for (defaults to Equity)\n  --resolution [Tick|Second|Minute|Hour|Daily]\n                                  The resolution of the generated data (defaults to Minute)\n  --data-density [Dense|Sparse|VerySparse]\n                                  The density of the generated data (defaults to Dense)\n  --include-coarse BOOLEAN        Whether coarse universe data should be generated for Equity data (defaults to True)\n  --market TEXT                   The market to generate data for (defaults to standard market for the security type)\n  --image TEXT                    The LEAN engine image to use (defaults to quantconnect/lean:latest)\n  --update                        Pull the LEAN engine image before running the generator\n  --lean-config FILE              The Lean configuration file that should be used (defaults to the nearest lean.json)\n  --verbose                       Enable debug logging\n  --help                          Show this message and exit.\n```\n\n_See code: [lean/commands/data/generate.py](https://github.com/QuantConnect/lean-cli/blob/master/lean/commands/data/generate.py)_\n\n### `lean gui logs`\n\nSee the logs of the local GUI.\n\n```\nUsage: lean gui logs [OPTIONS]\n\n  See the logs of the local GUI.\n\nOptions:\n  -f, --follow  Update the logs in real-time while the GUI is running\n  --verbose     Enable debug logging\n  --help        Show this message and exit.\n```\n\n_See code: [lean/commands/gui/logs.py](https://github.com/QuantConnect/lean-cli/blob/master/lean/commands/gui/logs.py)_\n\n### `lean gui restart`\n\nRestart the local GUI and open it in the browser.\n\n```\nUsage: lean gui restart [OPTIONS]\n\n  Restart the local GUI and open it in the browser.\n\nOptions:\n  --no-open  Skip opening the local GUI in the browser after restarting it\n  --verbose  Enable debug logging\n  --help     Show this message and exit.\n```\n\n_See code: [lean/commands/gui/restart.py](https://github.com/QuantConnect/lean-cli/blob/master/lean/commands/gui/restart.py)_\n\n### `lean gui start`\n\nStart the local GUI.\n\n```\nUsage: lean gui start [OPTIONS]\n\n  Start the local GUI.\n\nOptions:\n  --organization TEXT  The name or id of the organization with the local GUI module subscription\n  --port INTEGER       The port to run the local GUI on (defaults to 5612)\n  --no-open            Skip opening the local GUI in the browser after starting it\n  --shortcut           Create a desktop shortcut for launching the local GUI\n  --lean-config FILE   The Lean configuration file that should be used (defaults to the nearest lean.json)\n  --verbose            Enable debug logging\n  --help               Show this message and exit.\n```\n\n_See code: [lean/commands/gui/start.py](https://github.com/QuantConnect/lean-cli/blob/master/lean/commands/gui/start.py)_\n\n### `lean gui stop`\n\nStop the local GUI.\n\n```\nUsage: lean gui stop [OPTIONS]\n\n  Stop the local GUI.\n\nOptions:\n  --verbose  Enable debug logging\n  --help     Show this message and exit.\n```\n\n_See code: [lean/commands/gui/stop.py](https://github.com/QuantConnect/lean-cli/blob/master/lean/commands/gui/stop.py)_\n\n### `lean init`\n\nScaffold a Lean configuration file and data directory.\n\n```\nUsage: lean init [OPTIONS]\n\n  Scaffold a Lean configuration file and data directory.\n\nOptions:\n  --verbose  Enable debug logging\n  --help     Show this message and exit.\n```\n\n_See code: [lean/commands/init.py](https://github.com/QuantConnect/lean-cli/blob/master/lean/commands/init.py)_\n\n### `lean library add`\n\nAdd a custom library to a project.\n\n```\nUsage: lean library add [OPTIONS] PROJECT NAME\n\n  Add a custom library to a project.\n\n  PROJECT must be the path to the project.\n\n  NAME must be the name of a NuGet package (for C# projects) or of a PyPI package (for Python projects).\n\n  If --version is not given, the package is pinned to the latest compatible version. For C# projects, this is the\n  latest available version. For Python projects, this is the latest version compatible with Python 3.6 (which is what\n  the Docker images use).\n\n  Custom C# libraries are added to your project's .csproj file, which is then restored if dotnet is on your PATH and\n  the --no-local flag has not been given.\n\n  Custom Python libraries are added to your project's requirements.txt file and are installed in your local Python\n  environment so you get local autocomplete for the library. The last step can be skipped with the --no-local flag.\n\n  C# example usage:\n  $ lean library add \"My CSharp Project\" Microsoft.ML\n  $ lean library add \"My CSharp Project\" Microsoft.ML --version 1.5.5\n\n  Python example usage:\n  $ lean library add \"My Python Project\" tensorflow\n  $ lean library add \"My Python Project\" tensorflow --version 2.5.0\n\nOptions:\n  --version TEXT  The version of the library to add (defaults to latest compatible version)\n  --no-local      Skip making changes to your local environment\n  --verbose       Enable debug logging\n  --help          Show this message and exit.\n```\n\n_See code: [lean/commands/library/add.py](https://github.com/QuantConnect/lean-cli/blob/master/lean/commands/library/add.py)_\n\n### `lean library remove`\n\nRemove a custom library from a project.\n\n```\nUsage: lean library remove [OPTIONS] PROJECT NAME\n\n  Remove a custom library from a project.\n\n  PROJECT must be the path to the project directory.\n\n  NAME must be the name of the NuGet package (for C# projects) or of the PyPI package (for Python projects) to remove.\n\n  Custom C# libraries are removed from the project's .csproj file, which is then restored if dotnet is on your PATH\n  and the --no-local flag has not been given.\n\n  Custom Python libraries are removed from the project's requirements.txt file.\n\n  C# example usage:\n  $ lean library remove \"My CSharp Project\" Microsoft.ML\n\n  Python example usage:\n  $ lean library remove \"My Python Project\" tensorflow\n\nOptions:\n  --no-local  Skip making changes to your local environment\n  --verbose   Enable debug logging\n  --help      Show this message and exit.\n```\n\n_See code: [lean/commands/library/remove.py](https://github.com/QuantConnect/lean-cli/blob/master/lean/commands/library/remove.py)_\n\n### `lean live`\n\nStart live trading a project locally using Docker.\n\n```\nUsage: lean live [OPTIONS] PROJECT\n\n  Start live trading a project locally using Docker.\n\n  If PROJECT is a directory, the algorithm in the main.py or Main.cs file inside it will be executed.\n  If PROJECT is a file, the algorithm in the specified file will be executed.\n\n  By default an interactive wizard is shown letting you configure the brokerage and data feed to use. If\n  --environment, --brokerage or --data-feed are given the command runs in non-interactive mode. In this mode the CLI\n  does not prompt for input.\n\n  If --environment is given it must be the name of a live environment in the Lean configuration.\n\n  If --brokerage and --data-feed are given, the options specific to the given brokerage/data feed must also be given.\n  The Lean config is used as fallback when a brokerage/data feed-specific option hasn't been passed in. If a required\n  option is not given and cannot be found in the Lean config the command aborts.\n\n  By default the official LEAN engine image is used. You can override this using the --image option. Alternatively you\n  can set the default engine image for all commands using `lean config set engine-image <image>`.\n\nOptions:\n  --environment TEXT              The environment to use\n  --output DIRECTORY              Directory to store results in (defaults to PROJECT/live/TIMESTAMP)\n  -d, --detach                    Run the live deployment in a detached Docker container and return immediately\n  --gui                           Enable monitoring and controlling of the deployment via the local GUI\n  --gui-organization TEXT         The name or id of the organization with the local GUI module subscription\n  --brokerage [Paper Trading|Interactive Brokers|Tradier|Oanda|Bitfinex|Coinbase Pro|Binance|Zerodha|Samco|Terminal Link|Atreyu|Trading Technologies|Kraken|FTX]\n                                  The brokerage to use\n  --data-feed [Interactive Brokers|Tradier|Oanda|Bitfinex|Coinbase Pro|Binance|Zerodha|Samco|Terminal Link|Trading Technologies|Kraken|FTX|IQFeed|Custom data only]\n                                  The data feed to use\n  --ib-organization TEXT          The name or id of the organization with the Interactive Brokers module subscription\n  --ib-user-name TEXT             Your Interactive Brokers username\n  --ib-account TEXT               Your Interactive Brokers account id\n  --ib-password TEXT              Your Interactive Brokers password\n  --ib-enable-delayed-streaming-data BOOLEAN\n                                  Whether delayed data may be used when your algorithm subscribes to a security you\n                                  don't have a market data subscription for\n\n  --tradier-account-id TEXT       Your Tradier account id\n  --tradier-access-token TEXT     Your Tradier access token\n  --tradier-environment [live|paper]\n                                  Whether the developer sandbox should be used\n  --oanda-environment [Practice|Trade]\n                                  The environment to run in, Practice for fxTrade Practice, Trade for fxTrade\n  --oanda-account-id TEXT         Your OANDA account id\n  --oanda-access-token TEXT       Your OANDA API token\n  --bitfinex-api-key TEXT         Your Bitfinex API key\n  --bitfinex-api-secret TEXT      Your Bitfinex API secret\n  --gdax-use-sandbox [live|paper]\n                                  Whether the sandbox should be used\n  --gdax-api-key TEXT             Your Coinbase Pro API key\n  --gdax-api-secret TEXT          Your Coinbase Pro API secret\n  --gdax-passphrase TEXT          Your Coinbase Pro API passphrase\n  --binance-use-testnet [live|paper]\n                                  Whether the testnet should be used\n  --binance-organization TEXT     The name or id of the organization with the Binance module subscription\n  --binance-api-key TEXT          Your Binance API key\n  --binance-api-secret TEXT       Your Binance API secret\n  --zerodha-organization TEXT     The name or id of the organization with the zerodha module subscription\n  --zerodha-api-key TEXT          Your Kite Connect API key\n  --zerodha-access-token TEXT     Your Kite Connect access token\n  --zerodha-product-type [MIS|CNC|NRML]\n                                  MIS if you are targeting intraday products, CNC if you are targeting delivery\n                                  products, NRML if you are targeting carry forward products\n\n  --zerodha-trading-segment [EQUITY|COMMODITY]\n                                  EQUITY if you are trading equities on NSE or BSE, COMMODITY if you are trading\n                                  commodities on MCX\n\n  --zerodha-history-subscription BOOLEAN\n                                  Whether you have a history API subscription for Zerodha\n  --samco-organization TEXT       The name or id of the organization with the samco module subscription\n  --samco-client-id TEXT          Your Samco account Client ID\n  --samco-client-password TEXT    Your Samco account password\n  --samco-year-of-birth TEXT      Your year of birth (YYYY) registered with Samco\n  --samco-product-type [MIS|CNC|NRML]\n                                  MIS if you are targeting intraday products, CNC if you are targeting delivery\n                                  products, NRML if you are targeting carry forward products\n\n  --samco-trading-segment [EQUITY|COMMODITY]\n                                  EQUITY if you are trading equities on NSE or BSE, COMMODITY if you are trading\n                                  commodities on MCX\n\n  --terminal-link-organization TEXT\n                                  The name or id of the organization with the Terminal Link module subscription\n  --bloomberg-environment [Production|Beta]\n                                  The environment to run in\n  --bloomberg-server-host TEXT    The host of the Bloomberg server\n  --bloomberg-server-port INTEGER\n                                  The port of the Bloomberg server\n  --bloomberg-symbol-map-file FILE\n                                  The path to the Bloomberg symbol map file\n  --bloomberg-emsx-broker TEXT    The EMSX broker to use\n  --bloomberg-emsx-user-time-zone TEXT\n                                  The EMSX user timezone to use\n  --bloomberg-emsx-account TEXT   The EMSX account to use\n  --bloomberg-emsx-strategy TEXT  The EMSX strategy to use\n  --bloomberg-emsx-notes TEXT     The EMSX notes to use\n  --bloomberg-emsx-handling TEXT  The EMSX handling to use\n  --bloomberg-allow-modification BOOLEAN\n                                  Whether modification is allowed\n  --atreyu-organization TEXT      The name or id of the organization with the Atreyu module subscription\n  --atreyu-host TEXT              The host of the Atreyu server\n  --atreyu-req-port INTEGER       The Atreyu request port\n  --atreyu-sub-port INTEGER       The Atreyu subscribe port\n  --atreyu-username TEXT          Your Atreyu username\n  --atreyu-password TEXT          Your Atreyu password\n  --atreyu-client-id TEXT         Your Atreyu client id\n  --atreyu-broker-mpid TEXT       The broker MPID to use\n  --atreyu-locate-rqd TEXT        The locate rqd to use\n  --tt-organization TEXT          The name or id of the organization with the Trading Technologies module subscription\n  --tt-user-name TEXT             Your Trading Technologies username\n  --tt-session-password TEXT      Your Trading Technologies session password\n  --tt-account-name TEXT          Your Trading Technologies account name\n  --tt-rest-app-key TEXT          Your Trading Technologies REST app key\n  --tt-rest-app-secret TEXT       Your Trading Technologies REST app secret\n  --tt-rest-environment TEXT      The REST environment to run in\n  --tt-market-data-sender-comp-id TEXT\n                                  The market data sender comp id to use\n  --tt-market-data-target-comp-id TEXT\n                                  The market data target comp id to use\n  --tt-market-data-host TEXT      The host of the market data server\n  --tt-market-data-port TEXT      The port of the market data server\n  --tt-order-routing-sender-comp-id TEXT\n                                  The order routing sender comp id to use\n  --tt-order-routing-target-comp-id TEXT\n                                  The order routing target comp id to use\n  --tt-order-routing-host TEXT    The host of the order routing server\n  --tt-order-routing-port TEXT    The port of the order routing server\n  --tt-log-fix-messages BOOLEAN   Whether FIX messages should be logged\n  --kraken-organization TEXT      The name or id of the organization with the kraken module subscription\n  --kraken-api-key TEXT           Your Kraken API key\n  --kraken-api-secret TEXT        Your Kraken API secret\n  --kraken-verification-tier [Starter|Intermediate|Pro]\n                                  Your Kraken Verification Tier\n  --ftx-exchange-name [FTX|FTXUS]\n                                  FTX exchange name [FTX, FTXUS]\n  --ftx-organization TEXT         The name or id of the organization with the FTX module subscription\n  --ftx-api-key TEXT              Your FTX API key\n  --ftxus-api-key TEXT            Your FTX API key\n  --ftx-api-secret TEXT           Your FTX API secret\n  --ftxus-api-secret TEXT         Your FTX API secret\n  --ftx-account-tier [Tier1|Tier2|Tier3|Tier4|Tier5|Tier6]\n                                  Your FTX Account Tier\n  --ftxus-account-tier [Tier1|Tier2|Tier3|Tier4|Tier5|Tier6]\n                                  Your FTX Account Tier\n  --iqfeed-iqconnect FILE         The path to the IQConnect binary\n  --iqfeed-username TEXT          Your IQFeed username\n  --iqfeed-password TEXT          Your IQFeed password\n  --iqfeed-productName TEXT       The product name of your IQFeed developer account\n  --iqfeed-version TEXT           The product version of your IQFeed developer account\n  --release                       Compile C# projects in release configuration instead of debug\n  --image TEXT                    The LEAN engine image to use (defaults to quantconnect/lean:latest)\n  --update                        Pull the LEAN engine image before starting live trading\n  --lean-config FILE              The Lean configuration file that should be used (defaults to the nearest lean.json)\n  --verbose                       Enable debug logging\n  --help                          Show this message and exit.\n```\n\n_See code: [lean/commands/live.py](https://github.com/QuantConnect/lean-cli/blob/master/lean/commands/live.py)_\n\n### `lean login`\n\nLog in with a QuantConnect account.\n\n```\nUsage: lean login [OPTIONS]\n\n  Log in with a QuantConnect account.\n\n  If user id or API token is not provided an interactive prompt will show.\n\n  Credentials are stored in ~/.lean/credentials and are removed upon running `lean logout`.\n\nOptions:\n  -u, --user-id TEXT    QuantConnect user id\n  -t, --api-token TEXT  QuantConnect API token\n  --verbose             Enable debug logging\n  --help                Show this message and exit.\n```\n\n_See code: [lean/commands/login.py](https://github.com/QuantConnect/lean-cli/blob/master/lean/commands/login.py)_\n\n### `lean logout`\n\nLog out and remove stored credentials.\n\n```\nUsage: lean logout [OPTIONS]\n\n  Log out and remove stored credentials.\n\nOptions:\n  --verbose  Enable debug logging\n  --help     Show this message and exit.\n```\n\n_See code: [lean/commands/logout.py](https://github.com/QuantConnect/lean-cli/blob/master/lean/commands/logout.py)_\n\n### `lean logs`\n\nDisplay the most recent backtest/live/optimization logs.\n\n```\nUsage: lean logs [OPTIONS]\n\n  Display the most recent backtest/live/optimization logs.\n\nOptions:\n  --backtest           Display the most recent backtest logs (default)\n  --live               Display the most recent live logs\n  --optimization       Display the most recent optimization logs\n  --project DIRECTORY  The project to get the most recent logs from\n  --lean-config FILE   The Lean configuration file that should be used (defaults to the nearest lean.json)\n  --verbose            Enable debug logging\n  --help               Show this message and exit.\n```\n\n_See code: [lean/commands/logs.py](https://github.com/QuantConnect/lean-cli/blob/master/lean/commands/logs.py)_\n\n### `lean optimize`\n\nOptimize a project's parameters locally using Docker.\n\n```\nUsage: lean optimize [OPTIONS] PROJECT\n\n  Optimize a project's parameters locally using Docker.\n\n  If PROJECT is a directory, the algorithm in the main.py or Main.cs file inside it will be executed.\n  If PROJECT is a file, the algorithm in the specified file will be executed.\n\n  By default an interactive wizard is shown letting you configure the optimizer. If --optimizer-config or --strategy\n  is given the command runs in non-interactive mode. In this mode the CLI does not prompt for input.\n\n  The --optimizer-config option can be used to specify the configuration to run the optimizer with.\n  When using the option it should point to a file like this (the algorithm-* properties should be omitted):\n  https://github.com/QuantConnect/Lean/blob/master/Optimizer.Launcher/config.json\n\n  If --strategy is given the optimizer configuration is read from the given options. In this case --strategy,\n  --target, --target-direction and --parameter become required.\n\n  In non-interactive mode the --parameter option can be provided multiple times to configure multiple parameters:\n  - --parameter <name> <min value> <max value> <step size>\n  - --parameter my-first-parameter 1 10 0.5 --parameter my-second-parameter 20 30 5\n\n  In non-interactive mode the --constraint option can be provided multiple times to configure multiple constraints:\n  - --constraint \"<statistic> <operator> <value>\"\n  - --constraint \"Sharpe Ratio >= 0.5\" --constraint \"Drawdown < 0.25\"\n\n  By default the official LEAN engine image is used. You can override this using the --image option. Alternatively you\n  can set the default engine image for all commands using `lean config set engine-image <image>`.\n\nOptions:\n  --output DIRECTORY              Directory to store results in (defaults to PROJECT/optimizations/TIMESTAMP)\n  -d, --detach                    Run the optimization in a detached Docker container and return immediately\n  --optimizer-config FILE         The optimizer configuration file that should be used\n  --strategy [Grid Search|Euler Search]\n                                  The optimization strategy to use\n  --target TEXT                   The target statistic of the optimization\n  --target-direction [min|max]    Whether the target must be minimized or maximized\n  --parameter <TEXT FLOAT FLOAT FLOAT>...\n                                  The 'parameter min max step' pairs configuring the parameters to optimize\n  --constraint TEXT               The 'statistic operator value' pairs configuring the constraints of the optimization\n  --release                       Compile C# projects in release configuration instead of debug\n  --image TEXT                    The LEAN engine image to use (defaults to quantconnect/lean:latest)\n  --update                        Pull the LEAN engine image before running the optimizer\n  --lean-config FILE              The Lean configuration file that should be used (defaults to the nearest lean.json)\n  --verbose                       Enable debug logging\n  --help                          Show this message and exit.\n```\n\n_See code: [lean/commands/optimize.py](https://github.com/QuantConnect/lean-cli/blob/master/lean/commands/optimize.py)_\n\n### `lean report`\n\nGenerate a report of a backtest.\n\n```\nUsage: lean report [OPTIONS]\n\n  Generate a report of a backtest.\n\n  This runs the LEAN Report Creator in Docker to generate a polished, professional-grade report of a backtest.\n\n  If --backtest-results is not given, a report is generated for the most recent local backtest.\n\n  The name, description, and version are optional and will be blank if not given.\n\n  If the given backtest data source file is stored in a project directory (or one of its subdirectories, like the\n  default <project>/backtests/<timestamp>), the default name is the name of the project directory and the default\n  description is the description stored in the project's config.json file.\n\n  By default the official LEAN engine image is used. You can override this using the --image option. Alternatively you\n  can set the default engine image for all commands using `lean config set engine-image <image>`.\n\nOptions:\n  --backtest-results FILE      Path to the JSON file containing the backtest results\n  --live-results FILE          Path to the JSON file containing the live trading results\n  --report-destination FILE    Path where the generated report is stored as HTML (defaults to ./report.html)\n  -d, --detach                 Run the report creator in a detached Docker container and return immediately\n  --strategy-name TEXT         Name of the strategy, will appear at the top-right corner of each page\n  --strategy-version TEXT      Version number of the strategy, will appear next to the project name\n  --strategy-description TEXT  Description of the strategy, will appear under the 'Strategy Description' section\n  --overwrite                  Overwrite --report-destination if it already contains a file\n  --image TEXT                 The LEAN engine image to use (defaults to quantconnect/lean:latest)\n  --update                     Pull the LEAN engine image before running the report creator\n  --lean-config FILE           The Lean configuration file that should be used (defaults to the nearest lean.json)\n  --verbose                    Enable debug logging\n  --help                       Show this message and exit.\n```\n\n_See code: [lean/commands/report.py](https://github.com/QuantConnect/lean-cli/blob/master/lean/commands/report.py)_\n\n### `lean research`\n\nRun a Jupyter Lab environment locally using Docker.\n\n```\nUsage: lean research [OPTIONS] PROJECT\n\n  Run a Jupyter Lab environment locally using Docker.\n\n  By default the official LEAN research image is used. You can override this using the --image option. Alternatively\n  you can set the default research image using `lean config set research-image <image>`.\n\nOptions:\n  --port INTEGER                  The port to run Jupyter Lab on (defaults to 8888)\n  --data-provider [Terminal Link|QuantConnect|Local]\n                                  Update the Lean configuration file to retrieve data from the given provider\n  --download-data                 Update the Lean configuration file to download data from the QuantConnect API, alias\n                                  for --data-provider QuantConnect\n\n  --data-purchase-limit INTEGER   The maximum amount of QCC to spend on downloading data during the research session\n                                  when using QuantConnect as data provider\n\n  -d, --detach                    Run Jupyter Lab in a detached Docker container and return immediately\n  --no-open                       Don't open the Jupyter Lab environment in the browser after starting it\n  --image TEXT                    The LEAN research image to use (defaults to quantconnect/research:latest)\n  --update                        Pull the LEAN research image before starting the research environment\n  --lean-config FILE              The Lean configuration file that should be used (defaults to the nearest lean.json)\n  --verbose                       Enable debug logging\n  --help                          Show this message and exit.\n```\n\n_See code: [lean/commands/research.py](https://github.com/QuantConnect/lean-cli/blob/master/lean/commands/research.py)_\n\n### `lean whoami`\n\nDisplay who is logged in.\n\n```\nUsage: lean whoami [OPTIONS]\n\n  Display who is logged in.\n\nOptions:\n  --verbose  Enable debug logging\n  --help     Show this message and exit.\n```\n\n_See code: [lean/commands/whoami.py](https://github.com/QuantConnect/lean-cli/blob/master/lean/commands/whoami.py)_\n<!-- commands end -->\n\n## Development\n\nTo work on the Lean CLI, clone the repository, enter an environment containing Python 3.6+ and run `pip install -r requirements.txt`. This command will install the required dependencies and installs the CLI in editable mode. This means you'll be able to edit the code and immediately see the results the next time you run `lean`.\n\nIf you need to add dependencies, first update `setup.py` (if it is a production dependency) or `requirements.txt` (if it is a development dependency) and then re-run `pip install -r requirements.txt`.\n\nThe automated tests can be ran by running `pytest`. The filesystem and HTTP requests are mocked when running tests to make sure they run in an isolated environment.\n\nCan build the lean CLI by running `python setup.py sdist bdist_wheel` from the root of the project and to install it `pip install --force-reinstall dist/lean-dev-py3-none-any.whl`. To update the commands reference part of the readme run `python scripts/readme.py` from the root of the project, after installing the new version.\n\nMaintainers can publish new releases by pushing a Git tag containing the new version to GitHub. This will trigger a GitHub Actions workflow which releases the current `master` branch to PyPI with the value of the tag as version. Make sure the version is not prefixed with \"v\".\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://lean.io/cli",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ablean",
    "package_url": "https://pypi.org/project/ablean/",
    "platform": null,
    "project_url": "https://pypi.org/project/ablean/",
    "project_urls": {
      "Documentation": "https://www.lean.io/docs/lean-cli/key-concepts/getting-started",
      "Homepage": "https://lean.io/cli",
      "Source": "https://github.com/QuantConnect/lean-cli"
    },
    "release_url": "https://pypi.org/project/ablean/1.3.4/",
    "requires_dist": [
      "click (~=8.1.3)",
      "requests (~=2.25.1)",
      "json5 (~=0.9.5)",
      "rich (~=12.4.4)",
      "dependency-injector (~=4.20.1)",
      "pydantic (~=1.7.3)",
      "python-dateutil (~=2.8.1)",
      "lxml (~=4.6.3)",
      "maskpass (==0.3.5)",
      "joblib (~=1.0.1)",
      "python-certifi-win32 (~=1.6)",
      "pyshortcuts (~=1.8.0)",
      "wrapt (~=1.12.1)",
      "paramiko (~=2.11.0)",
      "scp (~=0.14.4)",
      "ptvsd",
      "setuptools",
      "abl-quantconnect-stubs (>=13987.1)"
    ],
    "requires_python": ">= 3.8",
    "summary": "A CLI aimed at making it easier to run QuantConnect's LEAN engine locally and in the cloud",
    "version": "1.3.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14089846,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4d6c08a434630bf5a342df4114300a988b3388d30f67538e5b9deca4c50bda37",
          "md5": "d4f6c93d04009897b222c62ecf353cd3",
          "sha256": "a71081b81ff13f731c914a4b8ae32e43f0b74aebdd13cd0060d1be6276f6d6e9"
        },
        "downloads": -1,
        "filename": "ablean-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d4f6c93d04009897b222c62ecf353cd3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">= 3.8",
        "size": 113776,
        "upload_time": "2022-06-04T08:30:13",
        "upload_time_iso_8601": "2022-06-04T08:30:13.226648Z",
        "url": "https://files.pythonhosted.org/packages/4d/6c/08a434630bf5a342df4114300a988b3388d30f67538e5b9deca4c50bda37/ablean-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ec88a28299366787c21ba6dd118cc44ceae89dca5a22a8b761684b1207678c27",
          "md5": "9d3426e2f637c46bbdefbb1bd1f0bd6e",
          "sha256": "2abe3b8b9a1be5e6cc082f7406f6bba93af5986aa1b6c7f45c4991b3905d5332"
        },
        "downloads": -1,
        "filename": "ablean-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9d3426e2f637c46bbdefbb1bd1f0bd6e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">= 3.8",
        "size": 118721,
        "upload_time": "2022-06-04T08:30:15",
        "upload_time_iso_8601": "2022-06-04T08:30:15.311392Z",
        "url": "https://files.pythonhosted.org/packages/ec/88/a28299366787c21ba6dd118cc44ceae89dca5a22a8b761684b1207678c27/ablean-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca8b8c99586034e13b599d9b652a600bbec296b6cfaa255bd89fda604391d8f3",
          "md5": "514006e9afae4a6d4d273419715602a9",
          "sha256": "1e4b03c89652071eff3fb5a00957cc478cbf53d133197ae691ceda9b8a4a75d1"
        },
        "downloads": -1,
        "filename": "ablean-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "514006e9afae4a6d4d273419715602a9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">= 3.8",
        "size": 113792,
        "upload_time": "2022-06-04T09:06:49",
        "upload_time_iso_8601": "2022-06-04T09:06:49.929416Z",
        "url": "https://files.pythonhosted.org/packages/ca/8b/8c99586034e13b599d9b652a600bbec296b6cfaa255bd89fda604391d8f3/ablean-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f94675693cde4882ccb4d6fe18ce9c791b802a178c4b876576709b879214d465",
          "md5": "c568fcc4385284368eaa54003ec13502",
          "sha256": "8ddab1f489793ce9291d9503c8db03910aea1e71a78c282cb5637c668ed78d83"
        },
        "downloads": -1,
        "filename": "ablean-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c568fcc4385284368eaa54003ec13502",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">= 3.8",
        "size": 118722,
        "upload_time": "2022-06-04T09:06:51",
        "upload_time_iso_8601": "2022-06-04T09:06:51.485253Z",
        "url": "https://files.pythonhosted.org/packages/f9/46/75693cde4882ccb4d6fe18ce9c791b802a178c4b876576709b879214d465/ablean-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a23f3cbdedb47c6f1043ebbbd53cf24a9878506423fdcf651ac73b73b9abdc24",
          "md5": "a423a3d7d6b36571bafc17088cef71b1",
          "sha256": "4afefd514b6a8d861275a3f76ab90e6ad40d1ff98b179c8ccfd017a5c0c74046"
        },
        "downloads": -1,
        "filename": "ablean-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a423a3d7d6b36571bafc17088cef71b1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">= 3.8",
        "size": 118492,
        "upload_time": "2022-06-04T15:18:02",
        "upload_time_iso_8601": "2022-06-04T15:18:02.555850Z",
        "url": "https://files.pythonhosted.org/packages/a2/3f/3cbdedb47c6f1043ebbbd53cf24a9878506423fdcf651ac73b73b9abdc24/ablean-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70a10ee595e512275d37a7d59b4f8d143c63382fb2446b25ae20e75ca2bb5ac9",
          "md5": "a056f96cb4f938e5be7c4738d80965f3",
          "sha256": "822d41f1089813e96d5609603dc3b5b5c6b234a5363a877b8fd1828c193aa282"
        },
        "downloads": -1,
        "filename": "ablean-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a056f96cb4f938e5be7c4738d80965f3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">= 3.8",
        "size": 121422,
        "upload_time": "2022-06-04T15:18:04",
        "upload_time_iso_8601": "2022-06-04T15:18:04.833829Z",
        "url": "https://files.pythonhosted.org/packages/70/a1/0ee595e512275d37a7d59b4f8d143c63382fb2446b25ae20e75ca2bb5ac9/ablean-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cad92769c4412b2d4e14c220ec837a0b684991abeca2a9dc30abf274b330db10",
          "md5": "c5af17b9908b7cb7bc18532261a5a4f5",
          "sha256": "24dc6879aa8fac7e10ff371cf1f088c403e2a9fe2f546f1085827b8e28032662"
        },
        "downloads": -1,
        "filename": "ablean-1.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c5af17b9908b7cb7bc18532261a5a4f5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">= 3.8",
        "size": 118368,
        "upload_time": "2022-06-05T05:44:21",
        "upload_time_iso_8601": "2022-06-05T05:44:21.227460Z",
        "url": "https://files.pythonhosted.org/packages/ca/d9/2769c4412b2d4e14c220ec837a0b684991abeca2a9dc30abf274b330db10/ablean-1.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f0746b932c0d030c05f3d29cc22213955a381334e873a5ed4a801c5654c4c93d",
          "md5": "cf6a3e4b4ff677242b6f94197f32f4a2",
          "sha256": "e19456d11787e14b5bec502e939d13a3c4a9c4ce8c57c18666750f0d0c93832f"
        },
        "downloads": -1,
        "filename": "ablean-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "cf6a3e4b4ff677242b6f94197f32f4a2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">= 3.8",
        "size": 122143,
        "upload_time": "2022-06-05T05:44:22",
        "upload_time_iso_8601": "2022-06-05T05:44:22.851607Z",
        "url": "https://files.pythonhosted.org/packages/f0/74/6b932c0d030c05f3d29cc22213955a381334e873a5ed4a801c5654c4c93d/ablean-1.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cb9b3a70a0681532f3f8b8880918f7e7b3b2678ec2dd240f0623cc85d2de1b22",
          "md5": "c3d0941fb5ad94d88b029d244b24b312",
          "sha256": "bd461083167c5e65cfb2cd7764560dafde1ae565725485a7ec764308f7a55be2"
        },
        "downloads": -1,
        "filename": "ablean-1.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c3d0941fb5ad94d88b029d244b24b312",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">= 3.8",
        "size": 118524,
        "upload_time": "2022-06-05T08:20:11",
        "upload_time_iso_8601": "2022-06-05T08:20:11.350187Z",
        "url": "https://files.pythonhosted.org/packages/cb/9b/3a70a0681532f3f8b8880918f7e7b3b2678ec2dd240f0623cc85d2de1b22/ablean-1.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "81f12daf0cbc495566dd70771471d0b74520c3548668512b74c0f295c9e7fb48",
          "md5": "0104139b07e31326e05b0c7385fcb5e5",
          "sha256": "3fb0474b39dfccc28a9f3df8c8d725367db65d67c0edf3a40ec7b8bcce21ba3b"
        },
        "downloads": -1,
        "filename": "ablean-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0104139b07e31326e05b0c7385fcb5e5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">= 3.8",
        "size": 122302,
        "upload_time": "2022-06-05T08:20:12",
        "upload_time_iso_8601": "2022-06-05T08:20:12.972002Z",
        "url": "https://files.pythonhosted.org/packages/81/f1/2daf0cbc495566dd70771471d0b74520c3548668512b74c0f295c9e7fb48/ablean-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c464bab1f6e352c73acf621d61c00540f0b36510849cc906288c459474ef180b",
          "md5": "991a1101453052541234809f402f8123",
          "sha256": "43b76769165e4be7b3488febc7bf2922ee8f711da32ca09ecbcc94b448bd4235"
        },
        "downloads": -1,
        "filename": "ablean-1.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "991a1101453052541234809f402f8123",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">= 3.8",
        "size": 118524,
        "upload_time": "2022-06-05T09:41:04",
        "upload_time_iso_8601": "2022-06-05T09:41:04.984354Z",
        "url": "https://files.pythonhosted.org/packages/c4/64/bab1f6e352c73acf621d61c00540f0b36510849cc906288c459474ef180b/ablean-1.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c45c3757cfdfb39bb3bd3393c67c23a190af09cf6fe26733e5a635662370eb85",
          "md5": "be157e7ecadc031d9f0df25ded78f9fb",
          "sha256": "1cdcecf7f8ec9be7f58ee71e917bc3a0284552c367c1e7118e8406129ac86a88"
        },
        "downloads": -1,
        "filename": "ablean-1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "be157e7ecadc031d9f0df25ded78f9fb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">= 3.8",
        "size": 122313,
        "upload_time": "2022-06-05T09:41:07",
        "upload_time_iso_8601": "2022-06-05T09:41:07.317630Z",
        "url": "https://files.pythonhosted.org/packages/c4/5c/3757cfdfb39bb3bd3393c67c23a190af09cf6fe26733e5a635662370eb85/ablean-1.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7852585fd516d842ae7601446c6eb147556301f3368203e1d093f4c195436418",
          "md5": "b86d4c48108637af1fc234483669cf9e",
          "sha256": "d520e58bfc4182f6cf7a3fd3cf33b3013ddb9b654fe9c509a70dbc80c9d79ad0"
        },
        "downloads": -1,
        "filename": "ablean-1.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b86d4c48108637af1fc234483669cf9e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">= 3.8",
        "size": 118751,
        "upload_time": "2022-06-05T10:57:55",
        "upload_time_iso_8601": "2022-06-05T10:57:55.160275Z",
        "url": "https://files.pythonhosted.org/packages/78/52/585fd516d842ae7601446c6eb147556301f3368203e1d093f4c195436418/ablean-1.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a961c48f3eecb83099ef674dd82069bb4f3d56b240119d494fcd043487983b23",
          "md5": "22cc8a4ede3cffb915d3b8a9ecc1a196",
          "sha256": "a8123d911a70165d03b57c80b2bb4ba4deb505ac0dba78bbd97d5900b36fa1f2"
        },
        "downloads": -1,
        "filename": "ablean-1.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "22cc8a4ede3cffb915d3b8a9ecc1a196",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">= 3.8",
        "size": 122495,
        "upload_time": "2022-06-05T10:57:57",
        "upload_time_iso_8601": "2022-06-05T10:57:57.637512Z",
        "url": "https://files.pythonhosted.org/packages/a9/61/c48f3eecb83099ef674dd82069bb4f3d56b240119d494fcd043487983b23/ablean-1.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0061d0667ec23ad3caa2190e80eb633e9e7fb067bd40a1835120b8a51ca1cf7d",
          "md5": "5a59efc81db20f9d21390ea166f23542",
          "sha256": "cfd5b72f6288ce83cc2ab1d5b883ee8d87da91c87bb27a63fd3e7febf3a2a051"
        },
        "downloads": -1,
        "filename": "ablean-1.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5a59efc81db20f9d21390ea166f23542",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">= 3.8",
        "size": 120221,
        "upload_time": "2022-06-07T06:32:04",
        "upload_time_iso_8601": "2022-06-07T06:32:04.831609Z",
        "url": "https://files.pythonhosted.org/packages/00/61/d0667ec23ad3caa2190e80eb633e9e7fb067bd40a1835120b8a51ca1cf7d/ablean-1.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5ebd93eae19f279b634a5bdff2ba10ee05e2fa3282ce8f6e6fcd0c74a710ff1a",
          "md5": "363102286bef49ce07dc82954e00b83d",
          "sha256": "36de34ac2afe33946350106e8a395163e18b82bfe751b4fcd0a31349eb8475dd"
        },
        "downloads": -1,
        "filename": "ablean-1.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "363102286bef49ce07dc82954e00b83d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">= 3.8",
        "size": 123286,
        "upload_time": "2022-06-07T06:32:06",
        "upload_time_iso_8601": "2022-06-07T06:32:06.876254Z",
        "url": "https://files.pythonhosted.org/packages/5e/bd/93eae19f279b634a5bdff2ba10ee05e2fa3282ce8f6e6fcd0c74a710ff1a/ablean-1.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a9b8a3718a1ec5a951f9729881fc49ceb4a1f32ebba0d541e921101d0d536ab3",
          "md5": "69ad304cd5273aae7c6ba9cd44aba1e6",
          "sha256": "0ef2af90d91e3f8d8247c51ebcd1660677f6333d988a89906dd7b4ecc0362a07"
        },
        "downloads": -1,
        "filename": "ablean-1.3.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "69ad304cd5273aae7c6ba9cd44aba1e6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">= 3.8",
        "size": 120287,
        "upload_time": "2022-06-08T09:13:22",
        "upload_time_iso_8601": "2022-06-08T09:13:22.365660Z",
        "url": "https://files.pythonhosted.org/packages/a9/b8/a3718a1ec5a951f9729881fc49ceb4a1f32ebba0d541e921101d0d536ab3/ablean-1.3.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6096c57b5dad29e5305b1f2c2af110d01504fd31b3c009a64e7be7a5047081e",
          "md5": "574a4ec9214cfd7d9b4ea775ccd15b41",
          "sha256": "fd9fbf4eec0e0b423c21c3fc2d9ae72d5ea9894136a746cd76045405cd860c29"
        },
        "downloads": -1,
        "filename": "ablean-1.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "574a4ec9214cfd7d9b4ea775ccd15b41",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">= 3.8",
        "size": 123339,
        "upload_time": "2022-06-08T09:13:23",
        "upload_time_iso_8601": "2022-06-08T09:13:23.780940Z",
        "url": "https://files.pythonhosted.org/packages/a6/09/6c57b5dad29e5305b1f2c2af110d01504fd31b3c009a64e7be7a5047081e/ablean-1.3.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eec44186a7d4ed610f1889f9bb7146f8b61d0051d0667813fce91b0bf26d0006",
          "md5": "a8e2f12e9ac1942985eddcfe0e79c43a",
          "sha256": "55d3ac798d3d64e2de86783e493e4839f28017a77df71776dcbabd0eb4cf42fd"
        },
        "downloads": -1,
        "filename": "ablean-1.3.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a8e2f12e9ac1942985eddcfe0e79c43a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">= 3.8",
        "size": 120286,
        "upload_time": "2022-06-09T08:33:43",
        "upload_time_iso_8601": "2022-06-09T08:33:43.598289Z",
        "url": "https://files.pythonhosted.org/packages/ee/c4/4186a7d4ed610f1889f9bb7146f8b61d0051d0667813fce91b0bf26d0006/ablean-1.3.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e5d09ffbe4fc20a558ee3e4530903dc5f83039870b4dfa3abaf87787b4c74fc7",
          "md5": "b9d1d72e13632073e3857e9e218db1d7",
          "sha256": "2a3d0d57aafebc682d57355e6bd79b15c78f440aa92ee31e86bd8792cc54a4db"
        },
        "downloads": -1,
        "filename": "ablean-1.3.3.tar.gz",
        "has_sig": false,
        "md5_digest": "b9d1d72e13632073e3857e9e218db1d7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">= 3.8",
        "size": 123322,
        "upload_time": "2022-06-09T08:34:03",
        "upload_time_iso_8601": "2022-06-09T08:34:03.012981Z",
        "url": "https://files.pythonhosted.org/packages/e5/d0/9ffbe4fc20a558ee3e4530903dc5f83039870b4dfa3abaf87787b4c74fc7/ablean-1.3.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cc1712d64d4125bd8f1c2efb57d4fe17413de18539e589187a0995cb22d9ee47",
          "md5": "fee87fa86caffe271e31a1b600cc5af4",
          "sha256": "d54a988bdf6c6640191926c7118709900342a3177cf4d5d62239336131afc127"
        },
        "downloads": -1,
        "filename": "ablean-1.3.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fee87fa86caffe271e31a1b600cc5af4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">= 3.8",
        "size": 120286,
        "upload_time": "2022-06-10T02:23:11",
        "upload_time_iso_8601": "2022-06-10T02:23:11.968134Z",
        "url": "https://files.pythonhosted.org/packages/cc/17/12d64d4125bd8f1c2efb57d4fe17413de18539e589187a0995cb22d9ee47/ablean-1.3.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a9f197616ad8c1c7d554436ef220143b38d59cec86e53395aca6d80cb8e3f515",
          "md5": "41c379123f3a37eb24e8647cb459f4ab",
          "sha256": "ef85c0ca3a89d349997affa4789e67cffa3d76e10b3268f3c2cd729b5d6d6c98"
        },
        "downloads": -1,
        "filename": "ablean-1.3.4.tar.gz",
        "has_sig": false,
        "md5_digest": "41c379123f3a37eb24e8647cb459f4ab",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">= 3.8",
        "size": 123335,
        "upload_time": "2022-06-10T02:23:13",
        "upload_time_iso_8601": "2022-06-10T02:23:13.968272Z",
        "url": "https://files.pythonhosted.org/packages/a9/f1/97616ad8c1c7d554436ef220143b38d59cec86e53395aca6d80cb8e3f515/ablean-1.3.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cc1712d64d4125bd8f1c2efb57d4fe17413de18539e589187a0995cb22d9ee47",
        "md5": "fee87fa86caffe271e31a1b600cc5af4",
        "sha256": "d54a988bdf6c6640191926c7118709900342a3177cf4d5d62239336131afc127"
      },
      "downloads": -1,
      "filename": "ablean-1.3.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "fee87fa86caffe271e31a1b600cc5af4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">= 3.8",
      "size": 120286,
      "upload_time": "2022-06-10T02:23:11",
      "upload_time_iso_8601": "2022-06-10T02:23:11.968134Z",
      "url": "https://files.pythonhosted.org/packages/cc/17/12d64d4125bd8f1c2efb57d4fe17413de18539e589187a0995cb22d9ee47/ablean-1.3.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a9f197616ad8c1c7d554436ef220143b38d59cec86e53395aca6d80cb8e3f515",
        "md5": "41c379123f3a37eb24e8647cb459f4ab",
        "sha256": "ef85c0ca3a89d349997affa4789e67cffa3d76e10b3268f3c2cd729b5d6d6c98"
      },
      "downloads": -1,
      "filename": "ablean-1.3.4.tar.gz",
      "has_sig": false,
      "md5_digest": "41c379123f3a37eb24e8647cb459f4ab",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">= 3.8",
      "size": 123335,
      "upload_time": "2022-06-10T02:23:13",
      "upload_time_iso_8601": "2022-06-10T02:23:13.968272Z",
      "url": "https://files.pythonhosted.org/packages/a9/f1/97616ad8c1c7d554436ef220143b38d59cec86e53395aca6d80cb8e3f515/ablean-1.3.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}