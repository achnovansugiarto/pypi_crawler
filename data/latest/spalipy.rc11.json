{
  "info": {
    "author": "Joe Lyman",
    "author_email": "joedlyman@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Scientific/Engineering :: Astronomy"
    ],
    "description": "# spalipy\n\nDetection-based astronomical image registration.\n\nInitially built from the algorithm of\n[alipy2.0](https://obswww.unige.ch/~tewes/alipy/), `spalipy` includes an\noptional additional warping of the affine transformation via splines to \nachieve accurate registration in the case of non-homogeneous coordinate \ntransforms. This is particularly useful in the case of optically distorted \nor wide field-of-view images.\n\n## Install\n\n#### From PyPI\n```\npip install spalipy\n```\n\n#### From source\n```\ngit clone https://github.com/Lyalpha/spalipy\ncd spalipy\npip install .\n```\n\n## Quick run\n\nIf you have (geometrically) well-behaved images with a significant\noverlap, then good results can usually be obtained with a call such\nas:\n```\nalign-fits-simple source.fits source_aligned.fits template.fits\n```\nWhere `source.fits` is the image to be aligned to the supplied `template.fits`,\nand `source_aligned.fits` is where the result should be written.\n\nTo take advantage of all the dials and sliders to tweak the alignment,\ntake a look at the entire parameter descriptions via:\n```\nalign-fits -h\n```\n\nAlternatively, one can pass lower level objects to perform an alignment\ninteractively or within an external script, see running `spalipy` \n[interactively](#interactively).\n\n## Description\n\nA `source` image is transformed to the pixel-coordinate system of a\n`template` image using their respective detections as tie-points.\n\nMatching [quads](https://arxiv.org/abs/0910.2233) of detections between \nthe two catalogues are used to match corresponding detections in the two \nimages. An initial affine transformation is calculated from a quad match,\nand is applied to `source` image detections. Following this, cross-matching\nis performed within some tolerance to find corresponding detections across\nthe image. The remaining residuals between the matched detection coordinates \nare used to construct 2D spline surfaces that represent the spatially-varying \nresiduals in `x` and `y` axes. These surfaces are used to calculate the \ncorrection needed to properly register the images even in the face of \nnon-homogeneous coordinate transformation between the images. Flux \nconservation is relatively robust so long as the pixel scale between `source`\nand `template` is the same. Proper investigation with different pixel scales\nhas not been performed.\n\n*__Note:__ the affine transformation uses `scipy.interpolation.affine_transform`\nwhich doesn't handle nans properly, therefore replace all nan values\nin the `source` image prior to running `spalipy`.*\n\n\n## Examples\n\n`spalipy` can be run in two modes - via the command-line scripts or \ninteractively. The second big choice is to either provide your own detection\ncatalogues or let `spalipy` perform its own detection. Each of these scenarios\nis shown below.\n\n### via the command-line\n\n##### Using the internal detection routine\n\nWhen using the internal detection routines, there are two command-line \nscripts: `align-fits` and `align-fits-simple`. For narrow field-of-view\nimages without significant distortions, `align-fits-simple` is probabably\nentirely sufficient to get a good alignment. (`align-fits-simple` has\na significantly reduced parameter list and sets some automatically,\nfor example it will always switch off spline fitting and does not\nallow the user to pass existing detection catalogues.)\n\n```\nalign-fits-simple source.fits source_aligned.fits template.fits\n```\nor\n```\nalign-fits source.fits source_aligned.fits -tf template.fits\n```\nTake notice of the `-tf` argument in the second example, this is because \n`align-fits` offers multiple ways to provide detections, as shown in the next\nsection.\n\n##### Passing existing SExtractor detection catalogues\n\nIf one already has detection catalogues from a SExtractor run, then these can\nbe used to save repetition.\n\ne.g. create two `SExtractor` catalogues for the image:\n```\nsex -c /path/to/my/sex.config source.fits -CATALOG_NAME source.cat\nsex -c /path/to/my/sex.config template.fits -CATALOG_NAME template.cat\n```\n*__Note:__ At a minimum, the `SExtractor` catalogues __must__ contain the \ncolumns `X_IMAGE, Y_IMAGE, FLUX, FWHM_IMAGE, FLAGS`.*\n\nWe must use `align-fits` here since `align-fits-simple` does not allow us to\npass catalogues:\n\n```\nalign-fits source.fits source_aligned.fits -sc source.cat -tc template.cat\n```\n\n### Interactively\n\n##### Using the internal detection routine\n\n```python\nfrom astropy.io import fits\nfrom spalipy import Spalipy\n\nsource_data = fits.getdata(\"source.fits\")\ntemplate_data = fits.getdata(\"template.fits\")\n\nsp = Spalipy(source_data, template_data=template_data)\nsp.align()\nfits.writeto(\"source_aligned.fits\", data=sp.aligned_data)\n```\n\n##### Passing existing detection tables\n\nAnalagously to [passing `SExtractor` catalogues](#passing-existing-sextractor-detection-catalogues),\none can pass existing `astropy.Table` objects when calling `spalipy` interactively, for examples\nas the output of a prior `sep.extract()` call.\n\n*__Note:__ At a minimum, the detection tables __must__ contain the \ncolumns `x, y, flux, fwhm, flag`.*\n\n```python\nimport sep\nfrom astropy.io import fits\nfrom astropy.table import Table\nfrom spalipy import Spalipy\n\nsource_data = fits.getdata(\"source.fits\")\ntemplate_data = fits.getdata(\"template.fits\")\n# Run sep on each set of data\n# ...\n# source_extracted = sep.extract(...)\n# template_extracted = sep.extract(...)\nsource_det = Table(source_extracted)\ntemplate_det = Table(template_extracted)\n\nsp = Spalipy(source_data, source_det=source_det, template_det=template_det)\nsp.align()\nfits.writeto(\"source_aligned.fits\", data=sp.aligned_data)\n```\n\n### Logging\n\nWhen running interactively, all information is output in logging. To see these\none can do\n```python\nimport logging\nlogging.getLogger().setLevel(logging.INFO)  # or logging.DEBUG for more messages\n```\nprior to any of the [interactive example calls](#interactively).\n\nStatistics for the transformation goodness can also be accessed via:\n```python\nsp.log_transform_stats()\n```\n\n### Parameter tuning\n\nSeveral parameters should have the main focus of attention if an acceptable \nalignment is not being found.\n\n* If you have a small number of detections in your image overlap then\n`min_n_match` will need to be lowered from its default of `100`, but it is\nalso worth raising `n_det` so that the alignment uses all of your sources.\nSee `n_det` docstring on its float vs int format, but it is safe/easy to just\nset to some overly large value such that it won't limit your detection tables,\ne.g. `n_det=10000`.\n* `sub_tile` at a default of `2` will effectively fit an affine transformation\nin each quart of the image. On extremely distorted images even this may not be\nenough and so it can be raised to `3` (or even `4`). It is a balancing act \nthat there must still be sufficient detections in each image in each sub tile\nregion from which to make a fit. If you have a low number of detections,\nor detections are spread strongly unevenly, this should be set to `1`.\n* `spline_order` should generally only be lowered from its default of `3`. \nSetting it to zero might actually be preferable for simple alignment tasks.\nAlso, with a low number of detections, and particularly with regions of low\nnumber of detections, the splines may misbehave.\n* `max_match_dist` is the tolerance in pixels when considering a `source` \nand `template` detection as matched after the affine transform. One may \nincrease this in the case of poorly centred detections. Note that this\nhas an indirect impact on `min_sep` (set to `2 * max_match_dist` by \ndefault) - when raising `max_match_dist` then `min_sep` correspondingly\nincreases, offering some guard against ambguous cross-matching in crowded\nregions. However, raising it too high may mean that too few detections\npass the `min_sep` criterion. In crowded fields and with well-behaved\ndetection centres, reducing `max_match_dist` may be advisable.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Lyalpha/spalipy",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "spalipy",
    "package_url": "https://pypi.org/project/spalipy/",
    "platform": null,
    "project_url": "https://pypi.org/project/spalipy/",
    "project_urls": {
      "Homepage": "https://github.com/Lyalpha/spalipy"
    },
    "release_url": "https://pypi.org/project/spalipy/3.3.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Detection-based astrononmical image registration",
    "version": "3.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15857160,
  "releases": {
    "2.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "812be516c4c74fa86321b787d0c30aeb8accedae0a9d88ea51333b5752f85a99",
          "md5": "ca3ed324c2e23a9fbfef6d9db6d9f3a9",
          "sha256": "43a40d2672cc6877688aa30c8c85b5e78c0fe1115ea6e355237c28a8159f1489"
        },
        "downloads": -1,
        "filename": "spalipy-2.0.2-py3.8.egg",
        "has_sig": false,
        "md5_digest": "ca3ed324c2e23a9fbfef6d9db6d9f3a9",
        "packagetype": "bdist_egg",
        "python_version": "3.8",
        "requires_python": null,
        "size": 29115,
        "upload_time": "2020-11-03T18:09:52",
        "upload_time_iso_8601": "2020-11-03T18:09:52.483804Z",
        "url": "https://files.pythonhosted.org/packages/81/2b/e516c4c74fa86321b787d0c30aeb8accedae0a9d88ea51333b5752f85a99/spalipy-2.0.2-py3.8.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea9c559676e33332737a9c5ffd116e34b61736af34996ffa1d3b0d5aaf68db2a",
          "md5": "992f36a551c8a6647ad0f879cec0aa05",
          "sha256": "0ed0db606908a48ca4946acf9abda5dd0aaf97a48b7a7993d8144ce79cdec9f2"
        },
        "downloads": -1,
        "filename": "spalipy-2.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "992f36a551c8a6647ad0f879cec0aa05",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30019,
        "upload_time": "2020-11-03T16:53:55",
        "upload_time_iso_8601": "2020-11-03T16:53:55.823840Z",
        "url": "https://files.pythonhosted.org/packages/ea/9c/559676e33332737a9c5ffd116e34b61736af34996ffa1d3b0d5aaf68db2a/spalipy-2.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4f69492fa7d9300de9a9f3c97279636a4fb1bffdfa1aaf4170c95e623528062b",
          "md5": "a3374da79860a9bbcb653da9b8ecf74e",
          "sha256": "83b30f309b527561869cb091c7ec409738579039f588034f31c6e69534d9d9ab"
        },
        "downloads": -1,
        "filename": "spalipy-2.0.3-py3.7.egg",
        "has_sig": false,
        "md5_digest": "a3374da79860a9bbcb653da9b8ecf74e",
        "packagetype": "bdist_egg",
        "python_version": "2.0.3",
        "requires_python": null,
        "size": 28998,
        "upload_time": "2021-04-01T14:59:18",
        "upload_time_iso_8601": "2021-04-01T14:59:18.059550Z",
        "url": "https://files.pythonhosted.org/packages/4f/69/492fa7d9300de9a9f3c97279636a4fb1bffdfa1aaf4170c95e623528062b/spalipy-2.0.3-py3.7.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa23ba87fc9fd06dc8d8116829ffcbcf61c4e8983dd9747a9898a51bd4559fe2",
          "md5": "109ce9230ecadac5b05840641cdfe0d8",
          "sha256": "a99baf0e58e8a5c01bb4a5998f860c2f3d5029c3f8d888866fd40402f071b0f8"
        },
        "downloads": -1,
        "filename": "spalipy-2.0.3-py3.8.egg",
        "has_sig": false,
        "md5_digest": "109ce9230ecadac5b05840641cdfe0d8",
        "packagetype": "bdist_egg",
        "python_version": "2.0.3",
        "requires_python": null,
        "size": 29940,
        "upload_time": "2021-04-01T14:59:19",
        "upload_time_iso_8601": "2021-04-01T14:59:19.210424Z",
        "url": "https://files.pythonhosted.org/packages/aa/23/ba87fc9fd06dc8d8116829ffcbcf61c4e8983dd9747a9898a51bd4559fe2/spalipy-2.0.3-py3.8.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7d4fcd19d5a6109326da2e7d10a539facbd0df07df71738138636a849d66f999",
          "md5": "d5d49691702b1006565dd85e13af20c5",
          "sha256": "25d3998da4fb1553390b445f495af30bed45853c486230a170adad41b01af154"
        },
        "downloads": -1,
        "filename": "spalipy-2.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "d5d49691702b1006565dd85e13af20c5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30025,
        "upload_time": "2020-11-03T18:09:54",
        "upload_time_iso_8601": "2020-11-03T18:09:54.499052Z",
        "url": "https://files.pythonhosted.org/packages/7d/4f/cd19d5a6109326da2e7d10a539facbd0df07df71738138636a849d66f999/spalipy-2.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "84f91f21458784f30394117a0bc82137ba0bff2c5a7af9fe2020f0ecda1f049f",
          "md5": "ae3b59d18511de0d22fcd9e97c77a184",
          "sha256": "3a867a4598d31ff84f85e29be35ec5f43ba0c12c8a323bff6bd5544e60f80426"
        },
        "downloads": -1,
        "filename": "spalipy-3.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ae3b59d18511de0d22fcd9e97c77a184",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 34461,
        "upload_time": "2021-04-01T15:01:17",
        "upload_time_iso_8601": "2021-04-01T15:01:17.507037Z",
        "url": "https://files.pythonhosted.org/packages/84/f9/1f21458784f30394117a0bc82137ba0bff2c5a7af9fe2020f0ecda1f049f/spalipy-3.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18788eff251f201a64e72ad59b782c1f76d4dc801022429b21661af5ab38070e",
          "md5": "0e17d1cfed2e1b910606079ee52ded00",
          "sha256": "ec12dacfd2f576132b889dfa4846dff0b6dcac7560a448c9d43390c33990d47c"
        },
        "downloads": -1,
        "filename": "spalipy-3.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0e17d1cfed2e1b910606079ee52ded00",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 34882,
        "upload_time": "2021-11-02T12:20:46",
        "upload_time_iso_8601": "2021-11-02T12:20:46.207995Z",
        "url": "https://files.pythonhosted.org/packages/18/78/8eff251f201a64e72ad59b782c1f76d4dc801022429b21661af5ab38070e/spalipy-3.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6a9ec09263afe7b1d61d785928bd9da1c5ebd8abf45e4c9ef0eaf618824cb2b7",
          "md5": "23a63ec4aafbde96a725567b4c73e00b",
          "sha256": "eee8e4033948960a9158cf42e77358a3cf029e3d09d7dd00ebe16f5dc24e6dea"
        },
        "downloads": -1,
        "filename": "spalipy-3.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "23a63ec4aafbde96a725567b4c73e00b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 34894,
        "upload_time": "2022-01-12T15:39:23",
        "upload_time_iso_8601": "2022-01-12T15:39:23.176569Z",
        "url": "https://files.pythonhosted.org/packages/6a/9e/c09263afe7b1d61d785928bd9da1c5ebd8abf45e4c9ef0eaf618824cb2b7/spalipy-3.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1b86ecbf2885f6e7df3bc324fb37b278dd09c19f84250d60374c9ea4ead426eb",
          "md5": "bbed48a9422249af094896a14784f2b9",
          "sha256": "8320369065b17b5483f9c72088df4f2c74049d1a4c8b8d354becb7ac46eca5a4"
        },
        "downloads": -1,
        "filename": "spalipy-3.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bbed48a9422249af094896a14784f2b9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 35515,
        "upload_time": "2022-01-27T18:22:49",
        "upload_time_iso_8601": "2022-01-27T18:22:49.083211Z",
        "url": "https://files.pythonhosted.org/packages/1b/86/ecbf2885f6e7df3bc324fb37b278dd09c19f84250d60374c9ea4ead426eb/spalipy-3.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "06d262354866a8f149cabe56d93c3bf4c09dd1846068d01a51ed277c7bd125d1",
          "md5": "a1460d9edc55850719a180af7794e0b7",
          "sha256": "cd49c5946226e9a86f04529a324abe40e524ac3739a53ca6851ba4178f35ffd9"
        },
        "downloads": -1,
        "filename": "spalipy-3.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a1460d9edc55850719a180af7794e0b7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 35617,
        "upload_time": "2022-02-28T14:58:13",
        "upload_time_iso_8601": "2022-02-28T14:58:13.835873Z",
        "url": "https://files.pythonhosted.org/packages/06/d2/62354866a8f149cabe56d93c3bf4c09dd1846068d01a51ed277c7bd125d1/spalipy-3.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "16e84b7cc73c670778a6c1b471a7c283eb716c4a1acc491efd9d34317940b690",
          "md5": "2822ae3399b7a39236b70c39bce757dd",
          "sha256": "160dba479fa6ea3b8ba7410a3b6d8c64356bfb1f673fbfbdf74b83768f833144"
        },
        "downloads": -1,
        "filename": "spalipy-3.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2822ae3399b7a39236b70c39bce757dd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 37157,
        "upload_time": "2022-04-11T15:48:41",
        "upload_time_iso_8601": "2022-04-11T15:48:41.090357Z",
        "url": "https://files.pythonhosted.org/packages/16/e8/4b7cc73c670778a6c1b471a7c283eb716c4a1acc491efd9d34317940b690/spalipy-3.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "031d92f7f267769bc0795a8136bb9cde5ad4bf7a4c1629547e86cf8d5476d96a",
          "md5": "80e750d212400f7490f3889ee14ba55e",
          "sha256": "3854a9810a1b3e0c321341e26f22d601b634ddbc17506d67fcdc8e5333b638bf"
        },
        "downloads": -1,
        "filename": "spalipy-3.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "80e750d212400f7490f3889ee14ba55e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 37434,
        "upload_time": "2022-04-21T12:15:27",
        "upload_time_iso_8601": "2022-04-21T12:15:27.657230Z",
        "url": "https://files.pythonhosted.org/packages/03/1d/92f7f267769bc0795a8136bb9cde5ad4bf7a4c1629547e86cf8d5476d96a/spalipy-3.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cb64a97c65045f8e4d3d0a98fb69be320ce98172a10f7295af83ea536ceb12e7",
          "md5": "b4552e01bf578bbc718e4b875bcc9100",
          "sha256": "bb94a600ffb2c39aa90ce80d87bf1efda857998b0a60b18ed085436c67b8522a"
        },
        "downloads": -1,
        "filename": "spalipy-3.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b4552e01bf578bbc718e4b875bcc9100",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 38077,
        "upload_time": "2022-05-06T17:26:52",
        "upload_time_iso_8601": "2022-05-06T17:26:52.573281Z",
        "url": "https://files.pythonhosted.org/packages/cb/64/a97c65045f8e4d3d0a98fb69be320ce98172a10f7295af83ea536ceb12e7/spalipy-3.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4537cc2d0528824cec0c430b17f50edf61b448170d936dd3855ad2826a8e4978",
          "md5": "5f192e5cdeaf2644f7b6b089f14aca34",
          "sha256": "67820c1459625af61cf64a725fb913389e078a0b74c3cb6a89019eb5e9595b42"
        },
        "downloads": -1,
        "filename": "spalipy-3.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5f192e5cdeaf2644f7b6b089f14aca34",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 38332,
        "upload_time": "2022-11-22T17:44:18",
        "upload_time_iso_8601": "2022-11-22T17:44:18.315326Z",
        "url": "https://files.pythonhosted.org/packages/45/37/cc2d0528824cec0c430b17f50edf61b448170d936dd3855ad2826a8e4978/spalipy-3.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4537cc2d0528824cec0c430b17f50edf61b448170d936dd3855ad2826a8e4978",
        "md5": "5f192e5cdeaf2644f7b6b089f14aca34",
        "sha256": "67820c1459625af61cf64a725fb913389e078a0b74c3cb6a89019eb5e9595b42"
      },
      "downloads": -1,
      "filename": "spalipy-3.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "5f192e5cdeaf2644f7b6b089f14aca34",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 38332,
      "upload_time": "2022-11-22T17:44:18",
      "upload_time_iso_8601": "2022-11-22T17:44:18.315326Z",
      "url": "https://files.pythonhosted.org/packages/45/37/cc2d0528824cec0c430b17f50edf61b448170d936dd3855ad2826a8e4978/spalipy-3.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}