{
  "info": {
    "author": "Sean Breckenridge",
    "author_email": "seanbrecke@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# google_takeout_parser\n\n- parses both the Historical HTML and new JSON format for Google Takeouts\n- caches individual takeout results behind [`cachew`](https://github.com/karlicoss/cachew)\n- merge multiple takeouts into unique events\n\nParses data out of your [Google Takeout](https://takeout.google.com/) (History, Activity, Youtube, Locations, etc...)\n\nThis doesn't handle all cases, but I have yet to find a parser that does, so here is my attempt at parsing what I see as the most useful info from it. The Google Takeout is pretty particular, and the contents of the directory depend on what you select while exporting. Unhandled files will warn, though feel free to [PR a parser](#contributing) or [create an issue](https://github.com/seanbreckenridge/google_takeout_parser/issues/new?title=add+parser+for) if this doesn't parse some part you want.\n\nThis can take a few minutes to parse depending on what you have in your Takeout (especially while using the old HTML format), so this uses [cachew](https://github.com/karlicoss/cachew) to cache the function result for each Takeout you may have. That means this'll take a few minutes the first time parsing a takeout, but then only a few seconds every subsequent time.\n\nSince the Takeout slowly removes old events over time, I would recommend periodically (personally I do it once every few months) backing up your data, to not lose any old events and get data from new ones. To use, go to [takeout.google.com](https://takeout.google.com/); For Reference, once on that page, I hit `Deselect All`, then select:\n\n- Chrome\n- Google Play Store\n- Location History\n  - Select JSON as format\n- My Activity\n  - Select JSON as format\n- Youtube and Youtube Music\n  - Select JSON as format\n  - In options, deselect `music-library-songs`, `music-uploads` and `videos`\n\nThe process for getting these isn't that great -- you have to manually go to [takeout.google.com](https://takeout.google.com) every few months, select what you want to export info for, and then it puts the zipped file into your google drive. You can tell it to run it at specific intervals, but I personally haven't found that to be that reliable.\n\nThis was extracted out of [my HPI](https://github.com/seanbreckenridge/HPI/tree/4bb1f174bdbd693ab29e744413424d18b8667b1f/my/google) modules, which was in turn modified from the google files in [karlicoss/HPI](https://github.com/karlicoss/HPI/blob/4a04c09f314e10a4db8f35bf1ecc10e4d0203223/my/google/takeout/html.py)\n\nThis currently parses:\n\n- Activity (from dozens of Google Services) - `My Activity/*.html|*.json`)\n- Chrome History - `Chrome/BrowserHistory.json`\n- Google Play Installs - `Google Play Store/Installs.json`\n- Location History:\n  - Semantic Location History`Location History/Semantic Location History/*`\n  - Location History `Location History/Location History.json`, `Location History/Records.json`\n- Youtube:\n  - History - `YouTube and YouTube Music/history/*.html|*.json`\n  - Comments - `YouTube and YouTube Music/my-comments/*.html`\n  - Live Chat Messages - `YouTube and YouTube Music/my-live-chat-messages/*.html`\n  - Likes: `YouTube and YouTube Music/playlists/likes.json`\n\n## Installation\n\nRequires `python3.7+`\n\nTo install with pip, run:\n\n    pip install google_takeout_parser\n\n## Usage\n\n### CLI Usage\n\nCan be access by either `google_takeout_parser` or `python -m google_takeout_parser`. Offers a basic interface to list/clear the cache directory, and/or parse/merge a takeout and interact with it in a REPL:\n\nTo clear the `cachew` cache: `google_takeout_parser cache_dir clear`\n\nA few examples of parsing takeouts:\n\n```\n$ google_takeout_parser --quiet parse ~/data/Unpacked_Takout --cache\nInteract with the export using res\n\nIn [1]: res[-2]\nOut[1]: PlayStoreAppInstall(title='Hangouts', device_name='motorola moto g(7) play', dt=datetime.datetime(2020, 8, 2, 15, 51, 50, 180000, tzinfo=datetime.timezone.utc))\n\nIn [2]: len(res)\nOut[2]: 236654\n```\n\n`$ google_takeout_parser --quiet merge ./Takeout-Old ./Takeout-New --action summary --no-cache`\n\n```python\nCounter({'Activity': 366292,\n         'Location': 147581,\n         'YoutubeComment': 131,\n         'PlayStoreAppInstall': 122,\n         'LikedYoutubeVideo': 100,\n         'ChromeHistory': 4})\n```\n\nCan also dump the info to JSON; e.g. to filter YouTube links from your Activity:\n\n```bash\ngoogle_takeout_parser parse -a json --no-cache ./Takeout-New \\\n  | jq '.[] | select(.type == \"Activity\") | select(.header == \"YouTube\") | .titleUrl'\n```\n\nAlso contains a small utility command to help move/extract the google takeout:\n\n```bash\n$ google_takeout_parser move --from ~/Downloads/takeout*.zip --to-dir ~/data/google_takeout --extract\nExtracting /home/sean/Downloads/takeout-20211023T070558Z-001.zip to /tmp/tmp07ua_0id\nMoving /tmp/tmp07ua_0id/Takeout to /home/sean/data/google_takeout/Takeout-1634993897\n$ ls -1 ~/data/google_takeout/Takeout-1634993897\narchive_browser.html\nChrome\n'Google Play Store'\n'Location History'\n'My Activity'\n'YouTube and YouTube Music'\n```\n\n### Library Usage\n\nAssuming you maintain an unpacked view, e.g. like:\n\n```\n $ tree -L 1 ./Takeout-1599315526\n./Takeout-1599315526\n├── Google Play Store\n├── Location History\n├── My Activity\n└── YouTube and YouTube Music\n```\n\nTo parse one takeout:\n\n```python\nfrom google_takeout.path_dispatch import TakeoutParser\ntp = TakeoutParser(\"/full/path/to/Takeout-1599315526\")\n# to check if files are all handled\ntp.dispatch_map()\n# to parse without caching the results in ~/.cache/google_takeout_parser\nuncached = list(tp.parse())\n# to parse with cachew cache https://github.com/karlicoss/cachew\ncached = list(tp.parse(cache=True))\n```\n\nTo cache and merge takeouts (maintains a single dependency on the paths you pass -- so if you change the input paths, it does a full recompute)\n\n```python\nfrom google_takeout.merge import cached_merge_takeouts\nresults = list(cached_merge_takeouts([\"/full/path/to/Takeout-1599315526\", \"/full/path/to/Takeout-1634971143\"]))\n```\n\nIf you don't want to cache the results but want to merge results from multiple takeouts, can do something custom by directly using the `merge_events` function:\n\n```python\nfrom google_takeout_parser.merge import merge_events, TakeoutParser\nitrs = []  # list of iterators of google events\nfor path in ['path/to/Takeout-1599315526' 'path/to/Takeout-1616796262']:\n    # ignore errors\n    tk = TakeoutParser(path, error_policy=\"drop\")\n    itrs.append(tk.parse(cache=False))\nres = list(merge_events(*itrs))\n```\n\nThe events this returns is a combination of all types in the [`models.py`](google_takeout_parser/models.py), to filter to a particular type you can provide that to skip parsing other files:\n\n```python\nfrom google_takeout_parser.models import Location\nfrom google_takeout_parser.path_dispatch import TakeoutParser\nlocations = list(TakeoutParser(\"path/to/Takeout\").parse(filter_type=Location))\nlen(locations)\n99913\n```\n\nI personally exclusively use this through the [HPI google takeout](https://github.com/karlicoss/HPI/blob/master/my/google/takeout/parser.py) file, as a configuration layer to locate where my takeouts are on disk, and since that 'automatically' unzips the takeouts (I store them as the zips), i.e., doesn't require me to maintain an unpacked view\n\n### Contributing\n\nJust to give a brief overview, to add new functionality (parsing some new folder that this doesn't currently support), you'd need to:\n\n- Add a `model` for it in [`models.py`](google_takeout_parser/models.py) subclassing `BaseEvent` and adding it to the Union at the bottom of the file. That should have a `key` property function which describes each event uniquely (used to merge takeout events)\n- Write a function which takes the `Path` to the file you're trying to parse and converts it to the model you created (See examples in [`parse_json.py`](google_takeout_parser/parse_json.py)). Ideally extract a single raw item from the takeout file add a test for it so its obvious when/if the format changes.\n- Set [the `return_type`](https://github.com/seanbreckenridge/google_takeout_parser/blob/7b1ee8ec3c3f36e6f279f20a9a214b6a3e8775f5/google_takeout_parser/parse_json.py#L71) property on the function, to use for caching/filtering\n- Add a regex match for the file path to the [`DEFAULT_HANDLER_MAP`](https://github.com/seanbreckenridge/google_takeout_parser/blob/2bd64b7373e4a2ac2ace32e03b25ca3b7e901034/google_takeout_parser/path_dispatch.py#L48)\n\n### Tests\n\n```bash\ngit clone 'https://github.com/seanbreckenridge/google_takeout_parser'\ncd ./google_takeout_parser\npip install '.[testing]'\nmypy ./google_takeout_parser\nflake8 ./google_takeout_parser\npytest\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/seanbreckenridge/google_takeout_parser",
    "keywords": "google data parsing",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "google-takeout-parser",
    "package_url": "https://pypi.org/project/google-takeout-parser/",
    "platform": null,
    "project_url": "https://pypi.org/project/google-takeout-parser/",
    "project_urls": {
      "Homepage": "https://github.com/seanbreckenridge/google_takeout_parser"
    },
    "release_url": "https://pypi.org/project/google-takeout-parser/0.1.3/",
    "requires_dist": [
      "click (>=8.0)",
      "logzero (>=1.7.0)",
      "lxml (>=4.6.0)",
      "beautifulsoup4 (>=4.9.0)",
      "cachew (>=0.9.0)",
      "pytz (>=2021.3)",
      "IPython",
      "platformdirs (>=2.3.0)",
      "typing-extensions ; python_version<\"3.7\"",
      "pytest ; extra == 'testing'",
      "mypy ; extra == 'testing'",
      "flake8 ; extra == 'testing'"
    ],
    "requires_python": ">=3.7",
    "summary": "Parses data out of your Google Takeout (History, Activity, Youtube, Locations, etc...)",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16691340,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7d96272717886d534237cca5d4bd400c479f6617c7e0046592e64deb616fd96d",
          "md5": "ea728edb808d2229a7acdd8487b1843f",
          "sha256": "b9316146a6b27c339b68f7d856776ba2d34a5bfa32f1e6e391f0d5b417da4d13"
        },
        "downloads": -1,
        "filename": "google_takeout_parser-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ea728edb808d2229a7acdd8487b1843f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 23173,
        "upload_time": "2021-10-23T10:40:06",
        "upload_time_iso_8601": "2021-10-23T10:40:06.126171Z",
        "url": "https://files.pythonhosted.org/packages/7d/96/272717886d534237cca5d4bd400c479f6617c7e0046592e64deb616fd96d/google_takeout_parser-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7f1795fe3da27b1bd1b18617359cbfe3dbbf8d5a61fa8d54f325cb8037364b5c",
          "md5": "7cb79df52c3dda520a860c0080458578",
          "sha256": "6f6918e518596b4ea84c2da5c1d67437812286e6f578cd6a87b2026b143a21c9"
        },
        "downloads": -1,
        "filename": "google_takeout_parser-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7cb79df52c3dda520a860c0080458578",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 19410,
        "upload_time": "2021-10-23T10:40:08",
        "upload_time_iso_8601": "2021-10-23T10:40:08.224869Z",
        "url": "https://files.pythonhosted.org/packages/7f/17/95fe3da27b1bd1b18617359cbfe3dbbf8d5a61fa8d54f325cb8037364b5c/google_takeout_parser-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f63d2e12da512272382fcff4cb3bf4dbda6c9eae87294252d2a5fdf843f794a",
          "md5": "711cc282cad3be6e3e1279d76effba91",
          "sha256": "1a99a415caa8f21eaa018884ed0b1994b5110003518a077822a4f1901157e69e"
        },
        "downloads": -1,
        "filename": "google_takeout_parser-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "711cc282cad3be6e3e1279d76effba91",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 28841,
        "upload_time": "2022-07-15T06:30:40",
        "upload_time_iso_8601": "2022-07-15T06:30:40.553625Z",
        "url": "https://files.pythonhosted.org/packages/5f/63/d2e12da512272382fcff4cb3bf4dbda6c9eae87294252d2a5fdf843f794a/google_takeout_parser-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ccb3e0fc95038b4f3b45b370e9a49224f9001827fd7f828bc4df02d5147fe4d2",
          "md5": "2b9427b35efbcaec9dfc5181b18a1490",
          "sha256": "c1075ccb8a053ce41a40dd3cc45f941ee26a590ca2fc35d0ac03b0d4cf36f709"
        },
        "downloads": -1,
        "filename": "google_takeout_parser-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2b9427b35efbcaec9dfc5181b18a1490",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 26866,
        "upload_time": "2022-07-15T06:30:42",
        "upload_time_iso_8601": "2022-07-15T06:30:42.602470Z",
        "url": "https://files.pythonhosted.org/packages/cc/b3/e0fc95038b4f3b45b370e9a49224f9001827fd7f828bc4df02d5147fe4d2/google_takeout_parser-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "62f629cd342e84215bd90b71343d3ac48d839d3e5dd2caf4e892656642f5ba0b",
          "md5": "cc5118811844ddd0dd06fba52e263e36",
          "sha256": "16d8b6c2378abdca46c203aa83eccfb80e71f2bfa14f2f3c80ee3a3c6d020450"
        },
        "downloads": -1,
        "filename": "google_takeout_parser-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cc5118811844ddd0dd06fba52e263e36",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 29354,
        "upload_time": "2022-11-12T02:49:06",
        "upload_time_iso_8601": "2022-11-12T02:49:06.924171Z",
        "url": "https://files.pythonhosted.org/packages/62/f6/29cd342e84215bd90b71343d3ac48d839d3e5dd2caf4e892656642f5ba0b/google_takeout_parser-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "417876a41e10a74b037332c114338c64f09b42f6adadc59e2bbd8606040f5dd6",
          "md5": "87da869ac048bf8da1bf9249f7e4eb89",
          "sha256": "cf2902a69054fa67c2f3a884ec696414ea76c2ededc1f3ad81f360f2567b6683"
        },
        "downloads": -1,
        "filename": "google_takeout_parser-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "87da869ac048bf8da1bf9249f7e4eb89",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 27185,
        "upload_time": "2022-11-12T02:49:09",
        "upload_time_iso_8601": "2022-11-12T02:49:09.558464Z",
        "url": "https://files.pythonhosted.org/packages/41/78/76a41e10a74b037332c114338c64f09b42f6adadc59e2bbd8606040f5dd6/google_takeout_parser-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "922bea8a984560cb409e8d465f595519ae67077d5b28a659d28e8e6d1f553bd9",
          "md5": "0b709dcf66b188faad369ef9b6b8de3e",
          "sha256": "fa9cca488ce2b2bb8c53fb8f3e6b8caa7205255dbfc5292f5212b198397a4097"
        },
        "downloads": -1,
        "filename": "google_takeout_parser-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0b709dcf66b188faad369ef9b6b8de3e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 30845,
        "upload_time": "2023-02-04T06:04:18",
        "upload_time_iso_8601": "2023-02-04T06:04:18.534167Z",
        "url": "https://files.pythonhosted.org/packages/92/2b/ea8a984560cb409e8d465f595519ae67077d5b28a659d28e8e6d1f553bd9/google_takeout_parser-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea7f13418409dd42b01f7f746ec5e21cb3bacf3d91c1719584321bccc469d710",
          "md5": "8f1d4d1e1578e5016091f3f357c5a59c",
          "sha256": "838b6cf640c7d9853c63b521a2ba1a9e1bfde5592abec03394a4f4b12b2daa6d"
        },
        "downloads": -1,
        "filename": "google_takeout_parser-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "8f1d4d1e1578e5016091f3f357c5a59c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 28815,
        "upload_time": "2023-02-04T06:04:20",
        "upload_time_iso_8601": "2023-02-04T06:04:20.095502Z",
        "url": "https://files.pythonhosted.org/packages/ea/7f/13418409dd42b01f7f746ec5e21cb3bacf3d91c1719584321bccc469d710/google_takeout_parser-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "922bea8a984560cb409e8d465f595519ae67077d5b28a659d28e8e6d1f553bd9",
        "md5": "0b709dcf66b188faad369ef9b6b8de3e",
        "sha256": "fa9cca488ce2b2bb8c53fb8f3e6b8caa7205255dbfc5292f5212b198397a4097"
      },
      "downloads": -1,
      "filename": "google_takeout_parser-0.1.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0b709dcf66b188faad369ef9b6b8de3e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 30845,
      "upload_time": "2023-02-04T06:04:18",
      "upload_time_iso_8601": "2023-02-04T06:04:18.534167Z",
      "url": "https://files.pythonhosted.org/packages/92/2b/ea8a984560cb409e8d465f595519ae67077d5b28a659d28e8e6d1f553bd9/google_takeout_parser-0.1.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ea7f13418409dd42b01f7f746ec5e21cb3bacf3d91c1719584321bccc469d710",
        "md5": "8f1d4d1e1578e5016091f3f357c5a59c",
        "sha256": "838b6cf640c7d9853c63b521a2ba1a9e1bfde5592abec03394a4f4b12b2daa6d"
      },
      "downloads": -1,
      "filename": "google_takeout_parser-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "8f1d4d1e1578e5016091f3f357c5a59c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 28815,
      "upload_time": "2023-02-04T06:04:20",
      "upload_time_iso_8601": "2023-02-04T06:04:20.095502Z",
      "url": "https://files.pythonhosted.org/packages/ea/7f/13418409dd42b01f7f746ec5e21cb3bacf3d91c1719584321bccc469d710/google_takeout_parser-0.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}