{
  "info": {
    "author": "Avinash Kori, Parth Natekar",
    "author_email": "koriavinash1@gmail.com, parth@smail.iitm.ac.in",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.5"
    ],
    "description": "# BioExp\n[![Build Status](https://travis-ci.org/koriavinash1/BioExp.svg?branch=master)](https://travis-ci.org/koriavinash1/BioExp)\n[![Documentation Status](https://readthedocs.org/projects/bioexp/badge/?version=latest)](https://bioexp.readthedocs.io/en/latest/?badge=latest)\n[![PyPI version](https://badge.fury.io/py/BioExp.svg)](https://badge.fury.io/py/BioExp)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n\nExplaining Deep Learning Models which perform various image processing tasks in the medical images and natural images.\n\n# Features\n\n- [x] Dissection Analysis\n- [x] Ablation Analysis\n- [x] Uncertainity Analysis\n   - [x] Epistemic Uncertainty using Bayesian Dropout\n   - [x] Aleatoric Uncertainty using Test Time Augmentation\n- [x] Activation Maximization\n- [x] CAM Analysis\n- [x] RCT on input and concept space \n- [x] Concept generation clustering analysis\n   - [x] wts based clustering\n   - [x] feature based clustering\n- [x] Concept Identification\n  - [x] Dissection based\n  - [x] Flow based\n- [x] Causal Graph \n- [x] Inference Methods\n- [ ] Counterfactuals on Visual Trails\n- [ ] Counterfactual Generation\n- [ ] Ante-hoc methods (Meta-Causation)\n\n# Citations\nIf you use BioExp, please cite our work:\n\n```\n@article{natekar2019demystifying,\n  title={Demystifying Brain Tumour Segmentation Networks: Interpretability and Uncertainty Analysis},\n  author={Natekar, Parth and Kori, Avinash and Krishnamurthi, Ganapathy},\n  journal={arXiv preprint arXiv:1909.01498},\n  year={2019}\n}\n```\n\n# Defined Pipeline\n![pipeline](./imgs/pipeline.png)\n\n# Installation\nRunning of the explainability pipeline requires a GPU and several deep learning modules. \n\n### Requirements\n- 'pandas'\n- 'numpy'\n- 'scipy==1.6.0'\n- 'matplotlib'\n- 'pillow'\n- 'simpleITK'\n- 'opencv-python'\n- 'tensorflow-gpu==1.14'\n- 'keras'\n- 'keras-vis'\n- 'lucid'\n\nThe following command will install only the dependencies listed above.\n\n```\npip install BioExp\n```\n\n# Ablation\n\n## Usage\n```\nfrom BioExp.spatial import Ablation\n\nA = spatial.Ablation(model = model, \n\t\t\t\tweights_pth = weights_path, \n\t\t\t\tmetric      = dice_label_coef, \n\t\t\t\tlayer_name  = layer_name, \n\t\t\t\ttest_image  = test_image, \n\t\t\t\tgt \t    = gt, \n\t\t\t\tclasses     = infoclasses, \n\t\t\t\tnclasses    = 4)\n\ndf = A.ablate_filter(step = 1)\n```\n\n# Dissection\n\n## Usage\n```\nfrom BioExp.spatial import Dissector\n\nlayer_name = 'conv2d_3'\ninfoclasses = {}\nfor i in range(1): infoclasses['class_'+str(i)] = (i,)\ninfoclasses['whole'] = (1,2,3)\n\ndissector = Dissector(model=model,\n                        layer_name = layer_name)\n\nthreshold_maps = dissector.get_threshold_maps(dataset_path = data_root_path,\n                                                save_path  = savepath,\n                                                percentile = 85)\ndissector.apply_threshold(image, threshold_maps, \n                        nfeatures =9, \n                        save_path = savepath, \n                        ROI       = ROI)\n\ndissector.quantify_gt_features(image, gt, \n                        threshold_maps, \n                        nclasses   = infoclass, \n                        nfeatures  = 9, \n                        save_path  = savepath,\n                        save_fmaps = False, \n                        ROI        = ROI)\n```\n## Results\n\n![dissection](./imgs/dissection.png)\n\n\n# GradCAM\n\n## Usage\n```\nfrom BioExp.spatial import cam\n\ndice = flow.cam(model, img, gt, \n\t\t\t\tnclasses = nclasses, \n\t\t\t\tsave_path = save_path, \n\t\t\t\tlayer_idx = -1, \n\t\t\t\tthreshol = 0.5,\n\t\t\t\tmodifier = 'guided')\n\n```\n## Results\n![gradcam](./imgs/gradcam.png)\n\n\n# Activation Maximization\n\n## Usage\n```\nfrom BioExp.concept.feature import Feature_Visualizer\n\nclass Load_Model(Model):\n\n  model_path = '../../saved_models/model_flair_scaled/model.pb'\n  image_shape = [None, 1, 240, 240]\n  image_value_range = (0, 10)\n  input_name = 'input_1'\n\nE = Feature_Visualizer(Load_Model, savepath = '../results/', regularizer_params={'L1':1e-3, 'rotate':8})\na = E.run(layer = 'conv2d_17', class_ = 'None', channel = 95, transforms=True)\n\n```\n\n##Activation Results\n![lucid](./imgs/lucid.png)\n\n\n# Uncertainty\n\n## Usage\n```\nfrom BioExp.uncertainty import uncertainty\n\nD = uncertainty(test_image)\n            \n# for aleatoric\nmean, var = D.aleatoric(model, iterations = 50)\n\n# for epistemic\nmean, var = D.epistemic(model, iterations = 50)\n \n# for combined\nmean, var = D.combined(model, iterations = 50)\n\n```\n## Results\n![un](./imgs/uncertainty.png)\n\n\n# Radiomics\n## Usage\n```\nfrom BioExp.helpers import radfeatures\nfeat_extractor = radfeatures.ExtractRadiomicFeatures(image, mask, save_path = pth)\ndf = feat_extractor.all_features()\n```\n\n# Causal Inference Pipeline\n![un](./imgs/causal_pipeline.png)\n\n# Contact\n- Avinash Kori (koriavinash1@gmail.com)\n- Parth Natekar (parth@smail.iitm.ac.in)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/koriavinash1/BioExp",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "BioExp",
    "package_url": "https://pypi.org/project/BioExp/",
    "platform": "",
    "project_url": "https://pypi.org/project/BioExp/",
    "project_urls": {
      "Homepage": "https://github.com/koriavinash1/BioExp"
    },
    "release_url": "https://pypi.org/project/BioExp/0.0.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Deep Learning model analysis toolbox",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7615124,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "38a6c33394003f00dbf9cbb90495391940a29d38283d15117bb6a12a0e8b8478",
          "md5": "2066000144b3d8ff78a3636a0817afc1",
          "sha256": "d6322980e0503275e3de36c0faf70a091e6453cf790833e8ce63a9e73ff4598d"
        },
        "downloads": -1,
        "filename": "BioExp-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2066000144b3d8ff78a3636a0817afc1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29738,
        "upload_time": "2020-06-02T10:35:57",
        "upload_time_iso_8601": "2020-06-02T10:35:57.300895Z",
        "url": "https://files.pythonhosted.org/packages/38/a6/c33394003f00dbf9cbb90495391940a29d38283d15117bb6a12a0e8b8478/BioExp-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f23a7804f631593078c4a68441b2071d633f21ed7cfdfafc3374172810e5615b",
          "md5": "106b2812057c78908cc2c52bbdc5703f",
          "sha256": "66f7e257fcc31c1a4c7d4f548ff9ce306d1acd6c11f1419c574c1b6e5afcb05a"
        },
        "downloads": -1,
        "filename": "BioExp-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "106b2812057c78908cc2c52bbdc5703f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29758,
        "upload_time": "2020-06-02T10:43:43",
        "upload_time_iso_8601": "2020-06-02T10:43:43.385703Z",
        "url": "https://files.pythonhosted.org/packages/f2/3a/7804f631593078c4a68441b2071d633f21ed7cfdfafc3374172810e5615b/BioExp-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7cbef63f6b3b9db1190769ed5deacb73f7fa939c07dcbd464756840724ca6887",
          "md5": "eb599df809f5e717193499ba8635e277",
          "sha256": "3067c338093664b5cf24539c701f7a03cdc03742da232e189b761cb9d9f6c8bf"
        },
        "downloads": -1,
        "filename": "BioExp-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "eb599df809f5e717193499ba8635e277",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30478,
        "upload_time": "2020-07-02T13:27:58",
        "upload_time_iso_8601": "2020-07-02T13:27:58.641395Z",
        "url": "https://files.pythonhosted.org/packages/7c/be/f63f6b3b9db1190769ed5deacb73f7fa939c07dcbd464756840724ca6887/BioExp-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7cbef63f6b3b9db1190769ed5deacb73f7fa939c07dcbd464756840724ca6887",
        "md5": "eb599df809f5e717193499ba8635e277",
        "sha256": "3067c338093664b5cf24539c701f7a03cdc03742da232e189b761cb9d9f6c8bf"
      },
      "downloads": -1,
      "filename": "BioExp-0.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "eb599df809f5e717193499ba8635e277",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 30478,
      "upload_time": "2020-07-02T13:27:58",
      "upload_time_iso_8601": "2020-07-02T13:27:58.641395Z",
      "url": "https://files.pythonhosted.org/packages/7c/be/f63f6b3b9db1190769ed5deacb73f7fa939c07dcbd464756840724ca6887/BioExp-0.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}