{
  "info": {
    "author": "guankaisi",
    "author_email": "guankaisi@ruc.edu.cn",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "## Learning_to_rank 一个传统学习排序算法库\r\n\r\n### 工具包说明\r\n\r\n•当前的Learning to rank 工具包，Ranklib基于java开发，TRanking基于Tensorflow开发，XGBoost，LightGBM基于树结构的模型 \r\n\r\n•开发一个传统Learning to rank的工具包，涉及到神经网络部分用pytorch编写\r\n\r\n•熟悉老师上课的知识点 & 更简单，轻便的LTR模型用于实验与教学工作\r\n\r\n•实现算法的效率可以接近这些模型的最好水平\r\n\r\n\r\n\r\n### 算法实现\r\n\r\n**Pointwise**：MLP\r\n\r\n**Pairwise**：RankNet，RankSVM， LambdaRank，RankBoost\r\n\r\n**Listwise**：LambdaMar, ListNet, ListMLE\r\n\r\n### 实现流程\r\n\r\n数据处理，特征提取，评分函数构建\r\n\r\n\r\n\r\n![image-20230106103447962](C:\\Users\\kai'si\\AppData\\Roaming\\Typora\\typora-user-images\\image-20230106103447962.png)\r\n\r\n\r\n\r\n![image-20230106103509158](C:\\Users\\kai'si\\AppData\\Roaming\\Typora\\typora-user-images\\image-20230106103509158.png)\r\n\r\n\r\n\r\n### 需求\r\n\r\n```\r\n安装需求\r\ntorch>=1.10.0\r\nnumpy>=1.17.2\r\nscikit_learn>=0.23.2\r\npickle\r\ntqdm>=4.48.2\r\n```\r\n\r\n### 安装\r\n\r\n使用pip方式安装\r\n\r\n```\r\npip install learning-to-rank\r\n```\r\n\r\n从github上clone\r\n\r\n```\r\n$ git clone https://github.com/guankaisi/learning-to-rank.git\r\n$ cd learning-to-rank\r\n$ pip install -r requirements.txt\r\n$ python setup.py install\r\n```\r\n\r\n### 使用说明\r\n\r\n提供了test.py测试脚本\r\n\r\n首先调用你想要使用的模型，调用data_reader\r\n\r\n```python\r\nfrom  learning_to_rank.listwise import LambdaMART,ListNet,ListMLE\r\nfrom learning_to_rank.pairwise import RankNet,LambdaRank\r\nfrom learning_to_rank.poinstwise import NRegression\r\nfrom learning_to_rank.utils import data_reader\r\n```\r\n\r\n这里我们用LETOR 4.0 中的MQ2008进行实验\r\n\r\n用data_reader进行数据读取\r\n\r\n```python\r\nfor i in [1,2,3,4,5]:\r\n   print('start Fold ' + str(i))\r\n   training_data = data_reader('MQ2008/Fold%d/train.txt' % (i))\r\n   test_data = data_reader('MQ2008/Fold%d/test.txt' % (i)\r\n```\r\n\r\n定义模型，并通过model.fit()开始训练\r\n\r\n```\r\nmodel = LambdaMART(training_data, number_of_trees=100, lr=0.001,max_depth=50)\r\nmodel.fit()\r\n```\r\n\r\n模型验证，定义ndcg@k中的k值\r\n\r\n```python\r\naverage_ndcg, predicted_scores = model.validate(test_data, k=10)\r\nprint(average_ndcg)\r\n```\r\n\r\n这里面直接计算给出了ndcg，如果要计算其他指标，可以根据predicted_scores直接计算\r\n\r\n决策树可以直接可视化，层数太深可视化会不清晰，所以该可视化决策树层数只有5层\r\n\r\n```python\r\nimport matplotlib.pyplot as plt\r\nfrom sklearn import tree\r\ntree.plot_tree(model.trees[0])\r\nplt.show()\r\n```\r\n\r\n![image-20230106113745805](C:\\Users\\kai'si\\AppData\\Roaming\\Typora\\typora-user-images\\image-20230106113745805.png)\r\n\r\n### 达到效果\r\n\r\n上述LambdaMart模型：\r\n\r\n|         | **NDCG@10**        |\r\n| ------- | ------------------ |\r\n| Fold1   | 0.7275983469048656 |\r\n| Fold2   | 0.6850899950641907 |\r\n| Fold3   | 0.6654757957913352 |\r\n| Fold4   | 0.7038660130946692 |\r\n| Fold5   | 0.699629816361395  |\r\n| Average | 0.6963319934432912 |\r\n\r\n**当前lambdaMART在LETOR4.0上的SOTA为：0.822891**\r\n\r\n我实现的LambdaMart算法和sota相比有一定的距离\r\n\r\n可能的原因：\r\n\r\n（1）由于设备计算资源和时间限制，num_of_trees并没有设特别大\r\n\r\n（2）sklearn的决策树算法和XGBoost，lightGBM工具包相比有着效率和效果上的劣势\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/guankaisi/learning_to_rank",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "learning-to-rank",
    "package_url": "https://pypi.org/project/learning-to-rank/",
    "platform": null,
    "project_url": "https://pypi.org/project/learning-to-rank/",
    "project_urls": {
      "Homepage": "https://github.com/guankaisi/learning_to_rank"
    },
    "release_url": "https://pypi.org/project/learning-to-rank/0.0.3/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A small package for learning to rank",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16339351,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c282055c65b1a769235f336752b24a1d20bb589faef4df9b090e50ff3730d701",
          "md5": "76d99fd19318024a479583e17bb2d5cb",
          "sha256": "901d9b4c1f6b0d0bd95818db93af0e47764086d5a82d988a59321d7e314c911e"
        },
        "downloads": -1,
        "filename": "learning_to_rank-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "76d99fd19318024a479583e17bb2d5cb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11560,
        "upload_time": "2022-12-21T14:22:54",
        "upload_time_iso_8601": "2022-12-21T14:22:54.836020Z",
        "url": "https://files.pythonhosted.org/packages/c2/82/055c65b1a769235f336752b24a1d20bb589faef4df9b090e50ff3730d701/learning_to_rank-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa039eb00aa47449d6d1dc009936fa9dd501bb9204451224018bdf9cc5c10348",
          "md5": "20f7198fbb73c21c267a9d77c55a04bb",
          "sha256": "eb99c75f2c2af853d370e06319f3510355cba9411667f062cecda04dfa901f6c"
        },
        "downloads": -1,
        "filename": "learning_to_rank-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "20f7198fbb73c21c267a9d77c55a04bb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7527,
        "upload_time": "2022-12-21T14:22:58",
        "upload_time_iso_8601": "2022-12-21T14:22:58.693656Z",
        "url": "https://files.pythonhosted.org/packages/aa/03/9eb00aa47449d6d1dc009936fa9dd501bb9204451224018bdf9cc5c10348/learning_to_rank-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "58d4d371f56dc4c86a8f6131f421f09d897b85b156c1e51220c4635b0d919647",
          "md5": "2cf6b6b4e46daf692df85bd726763830",
          "sha256": "95a48ca0276349e0a8167f4332e3635bc206d1d64c7c0ee892dda07142c6bb07"
        },
        "downloads": -1,
        "filename": "learning_to_rank-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2cf6b6b4e46daf692df85bd726763830",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 15870,
        "upload_time": "2023-01-07T07:24:07",
        "upload_time_iso_8601": "2023-01-07T07:24:07.898129Z",
        "url": "https://files.pythonhosted.org/packages/58/d4/d371f56dc4c86a8f6131f421f09d897b85b156c1e51220c4635b0d919647/learning_to_rank-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "736426ec339114c5fbef578ea4f40bc38c75279b7131a2ebe266eb4e49417387",
          "md5": "cc7c3eaf12e6dd3a0057fc2e30f2505a",
          "sha256": "5279d0544818dd1490a2897549327e5529ae070314edb7632a7d4ed48cbe5f27"
        },
        "downloads": -1,
        "filename": "learning_to_rank-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "cc7c3eaf12e6dd3a0057fc2e30f2505a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11784,
        "upload_time": "2023-01-07T07:24:09",
        "upload_time_iso_8601": "2023-01-07T07:24:09.946388Z",
        "url": "https://files.pythonhosted.org/packages/73/64/26ec339114c5fbef578ea4f40bc38c75279b7131a2ebe266eb4e49417387/learning_to_rank-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "58d4d371f56dc4c86a8f6131f421f09d897b85b156c1e51220c4635b0d919647",
        "md5": "2cf6b6b4e46daf692df85bd726763830",
        "sha256": "95a48ca0276349e0a8167f4332e3635bc206d1d64c7c0ee892dda07142c6bb07"
      },
      "downloads": -1,
      "filename": "learning_to_rank-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2cf6b6b4e46daf692df85bd726763830",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 15870,
      "upload_time": "2023-01-07T07:24:07",
      "upload_time_iso_8601": "2023-01-07T07:24:07.898129Z",
      "url": "https://files.pythonhosted.org/packages/58/d4/d371f56dc4c86a8f6131f421f09d897b85b156c1e51220c4635b0d919647/learning_to_rank-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "736426ec339114c5fbef578ea4f40bc38c75279b7131a2ebe266eb4e49417387",
        "md5": "cc7c3eaf12e6dd3a0057fc2e30f2505a",
        "sha256": "5279d0544818dd1490a2897549327e5529ae070314edb7632a7d4ed48cbe5f27"
      },
      "downloads": -1,
      "filename": "learning_to_rank-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "cc7c3eaf12e6dd3a0057fc2e30f2505a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 11784,
      "upload_time": "2023-01-07T07:24:09",
      "upload_time_iso_8601": "2023-01-07T07:24:09.946388Z",
      "url": "https://files.pythonhosted.org/packages/73/64/26ec339114c5fbef578ea4f40bc38c75279b7131a2ebe266eb4e49417387/learning_to_rank-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}