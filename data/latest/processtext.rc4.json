{
  "info": {
    "author": "Ujjwal Chowdhury",
    "author_email": "<u77w41@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# processtext\n\n\n**processtext** is a an open-source python package to clean raw text data.\n\n## Installation\n\nprocesstext requires [Python 3](https://www.python.org/downloads/), [NLTK](http://www.nltk.org/install.html), and [Autocorrect](https://github.com/filyp/autocorrect) to execute. \n\nTo install using pip, use\n\n`pip install processtext`\n\n\n\n## Features \n\n### processtext package contains different functions such as:\n* **degroup_num**: Removes comma(,) in between numbers inside a string\n* **remove_hyphen**: Removes hyphen(-) in between texts\n* **int_to_en**: Returns whole numbers in english text. e.g. 25 -> twenty-five\n* **num_to_en**: Returns english of numbers one by one from left to right\n* **float_to_en**: Returns floating point numbers into english text\n* **int_to_text**: Replaces all the whole numbers inside string into English text\n* **float_to_text**: Replacing all the positive rational numbers inside string into English text\n* **decontract_strings**: Decontracts strings e.g. I'm -> I am\n* **remove_emoji**: Removes emoji\n* **clean_text**: For deep cleaning of texts\n* **lowercase**: Converts the texts into lowercase\n* **autocorrect**: Corrects spelling mistakes \n* **lemmatize**: Lemmatizes the input texts\n* **remove_sw**: Removes stop words\n* **clean**: to clean raw text and return the cleaned text\n* **clean_l**: to clean raw text and return a list of clean words\n\n#### The processtext.clean() and processtext.clean_l() function can apply all, or a selected combination of the following cleaning operations:\n* Remove special symbols/characters\n* Remove digits from the text\n* Remove punctuations from the text\n* Remove extra white spaces\n* Remove or replace the part of text with custom regex\n* Convert the entire text into a uniform lowercase\n* Lemmatize the words \n* Remove stop words, and choose a language for stop words\n\n\n\n\n## Usage\n\n* **Import the library**:\n\n``` python\nimport processtext as pt\n```\n\n* **Choose a method:**\n\n To return the text in a string format, \n \n``` python\npt.clean(\"your_raw_text_here\") \n```\n \n To return a list of words from the text,\n \n``` python\npt.clean_l(\"your_raw_text_here\") \n```\n \n To choose a specific set of cleaning operations,\n\n``` python\npt.clean_l(\"your_raw_text_here\",\nclean_all= False # Execute all cleaning operations\nextra_spaces=True ,  # Remove extra white spaces \nstemming=True , # Stem the words\nstopwords=True ,# Remove stop words\nlowercase=True ,# Convert to lowercase\nnumbers=True ,# Remove all digits \npunct=True ,# Remove all punctuations\nreg: str = '<regex>', # Remove parts of text based on regex\nreg_replace: str = '<replace_value>', # String to replace the regex used in reg\nstp_lang='english'  # Language for stop words\n)\n```\n\n## Examples\n\n\n``` python\nimport processtext as pt\npt.degroup_num('111,222,333')\n```\n\nreturns,\n\n``` Python\n'111222333'\n```\n\n\n``` python\nimport processtext as pt\npt.remove_hyphen('2022-2023')\n```\n\nreturns,\n\n``` Python\n'2022 2023'\n```\n\n\n\n``` python\nimport processtext as pt\nprint(pt.int_to_en(1998))\nprint(pt.int_to_en('9123456789'))\n```\n\nreturns,\n\n``` Python\none thousand nine hundred and ninety-eight\n\nnine billion one hundred and twenty-three million four hundred and fifty-six thousand seven hundred and eighty-nine\n```\n\n\n``` python\nimport processtext as pt\nprint(pt.num_to_en(12345))\nprint(pt.num_to_en('09876'))\n```\n\nreturns,\n\n``` Python\none two three four five\n\nzero nine eight seven six\n```\n\n\n``` python\nimport processtext as pt\nprint(pt.float_to_en(12.345))\nprint(pt.float_to_en('456.09876'))\n```\n\nreturns,\n\n``` Python\ntwelve point three four five\n\nfour hundred and fifty-six point zero nine eight seven six\n```\n\n\n\n``` python\nimport processtext as pt\nprint(pt.float_to_en(12.345))\nprint(pt.float_to_en('456.09876'))\n```\n\nreturns,\n\n``` Python\ntwelve point three four five\n\nfour hundred and fifty-six point zero nine eight seven six\n```\n\n\n``` python\nimport processtext as pt\npt.int_to_text('First 100 twin primes have values between 3 & 5 and 3821 & 3823')\n```\n\nreturns,\n\n``` Python\nFirst one hundred twin primes have values between three & five and three thousand eight hundred and twenty-one & three thousand eight hundred and twenty-three\n```\n\n\n``` python\nimport processtext as pt\npt.float_to_text('The first 10 digits of pi are 3.141592653')\n```\n\nreturns,\n\n``` Python\nThe first ten point zero digits of pi are three point one four one five nine two six five three\n```\n\n\n\n``` python\nimport processtext as pt\npt.decontract_strings(\"I can't believe he'll be graduating from college in just a few months.\")\n```\n\nreturns,\n\n``` Python\nI can not believe he will be graduating from college in just a few months.\n```\n\n\n\n``` python\nimport processtext as pt\npt.remove_emoji(\"üåûüåä‚òÄÔ∏è Just spent an amazing day at the beach with my friends! üèñÔ∏èüë≠üë¨ We built sandcastles üè∞, played beach volleyball üèê, and even went for a swim üèä‚Äç‚ôÄÔ∏èüèä‚Äç‚ôÇÔ∏è. The sun was shining ‚òÄÔ∏è and the water was so refreshing üí¶. Can't wait to do it again! ü§©üëç\")\n```\n\nreturns,\n\n``` Python\n Just spent an amazing day at the beach with my friends!  We built sandcastles , played beach volleyball , and even went for a swim . The sun was shining  and the water was so refreshing . Can't wait to do it again! \n```\n\n\n\n``` python\nimport processtext as pt\npt.clean_text('The password must contain at least one symbol such as !,^,*,+,=,%,$,~,?,/,<>,|@, #, or %.')\n```\n\nreturns,\n\n``` Python\nThe password must contain at least one symbol such as                               or   \n```\n\n\n\n``` python\nimport processtext as pt\npt.lowercase('THE QUICK BROWN FOX JUMPED OVER THE LAZY DOG.')\n```\n\nreturns,\n\n``` Python\nthe quick brown fox jumped over the lazy dog.\n```\n\n\n\n``` python\nimport processtext as pt\npt.lowercase('THE QUICK BROWN FOX JUMPED OVER THE LAZY DOG.')\n```\n\nreturns,\n\n``` Python\nthe quick brown fox jumped over the lazy dog.\n```\n\n\n\n``` python\nimport processtext as pt\npt.autocorrect(\"I haven't receeved the package yet, but I think it should arrive somtime tomoro.\")\n```\n\nreturns,\n\n``` Python\nI haven't received the package yet, but I think it should arrive sometime tomorrow.\n```\n\n\n``` python\nimport processtext as pt\npt.autocorrect(\"I haven't receeved the package yet, but I think it should arrive somtime tomoro.\")\n```\n\nreturns,\n\n``` Python\nI haven't received the package yet, but I think it should arrive sometime tomorrow.\n```\n\n\n\n``` python\nimport processtext as pt\npt.lemmatize('they were playing in the garden.')\n```\n\nreturns,\n\n``` Python\nthey be play in the garden.\n```\n\n\n\n``` python\nimport processtext as pt\npt.remove_sw('I went to the store and bought some milk, bread, and eggs.')\n```\n\nreturns,\n\n``` Python\nwent store bought milk, bread, eggs.\n```\n \n\n\n``` python\nimport processtext as pt\npt.clean(\"TH@@#e Q!@#UicK bR0owN f*#!@)(O000000X JUmp100ED 000oV###3eR Th77777#$$e..........                 L@a/\\|z+Y d==OG.\", extra_spaces=True, lowercase=True, numbers=True, punct=True)\n```\n\nreturns,\n\n``` Python\n'the quick brown fox jumped over the lazy dog'\n```\n\n----\n\n``` Python\nimport processtext as pt\npt.clean_l('TH@@#e Q!@#UicK bR0owN f*#!@)(O000000X JUmp100ED 000oV###3eR Th77777#$$e..........                 L@a/\\|z+Y d==OG.', \n           extra_spaces=True, lowercase=True, numbers=True, punct=True)\n```\n\nreturns,\n\n``` Python\n['the', 'quick', 'brown', 'fox', 'jumped', 'over', 'the', 'lazy', 'dog']\n```\n\n----\n\n``` Python\nfrom processtext import clean\ntext = \"my email id: ujjwal@rkmvu.ac.in and your's: mili@rnlk.ed\"\nclean(text, reg=r\"[a-z0-9\\.\\-+_]+@[a-z0-9\\.\\-+_]+\\.[a-z]+\", reg_replace='********', clean_all=False)\n\n```\n\nreturns,\n\n``` Python\n'my email id: ******** and your's: ********'\n```\n\n## License\n\n##### MIT\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/U77w41/processtext",
    "keywords": "python,nlp,text,regex,text processing",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "processtext",
    "package_url": "https://pypi.org/project/processtext/",
    "platform": null,
    "project_url": "https://pypi.org/project/processtext/",
    "project_urls": {
      "Homepage": "https://github.com/U77w41/processtext"
    },
    "release_url": "https://pypi.org/project/processtext/0.1.2/",
    "requires_dist": [
      "nltk",
      "autocorrect"
    ],
    "requires_python": "",
    "summary": "An open-source python package to process text data",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17331305,
  "releases": {
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "28dcbc8c3bc358cf19901699743e7dd73e8b867da704dbe49faf70aa0786595a",
          "md5": "cb895b8af20d1a0172c2010a87aac421",
          "sha256": "8c869909312b39e666b1685751614fe28407a82005a964624b52158f0649300a"
        },
        "downloads": -1,
        "filename": "processtext-0.0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cb895b8af20d1a0172c2010a87aac421",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8601,
        "upload_time": "2023-03-17T08:03:39",
        "upload_time_iso_8601": "2023-03-17T08:03:39.133296Z",
        "url": "https://files.pythonhosted.org/packages/28/dc/bc8c3bc358cf19901699743e7dd73e8b867da704dbe49faf70aa0786595a/processtext-0.0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ff40f0113399a06fb69ee5ace638f1ecb6bc0a4807811f440cc267202982bf67",
          "md5": "94c88f9fbe3c9aaeb8ce5739e2c74507",
          "sha256": "56080d6da689c2f23fabe9a3c48ae4a01d6e60f14ad4af1f6018e181bfda28f6"
        },
        "downloads": -1,
        "filename": "processtext-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "94c88f9fbe3c9aaeb8ce5739e2c74507",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9700,
        "upload_time": "2023-03-17T08:03:42",
        "upload_time_iso_8601": "2023-03-17T08:03:42.111219Z",
        "url": "https://files.pythonhosted.org/packages/ff/40/f0113399a06fb69ee5ace638f1ecb6bc0a4807811f440cc267202982bf67/processtext-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cf0e34365b2ffedb9ea5b1fbab086232f033559a1d7520fca2d30e4be8a908e0",
          "md5": "34d843c3778122ae3e408f4679039b93",
          "sha256": "325b59788070b46fa13f5e3ad1fd0f67f9058610f5e8ef4fde6127a4e62f6b1d"
        },
        "downloads": -1,
        "filename": "processtext-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "34d843c3778122ae3e408f4679039b93",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8609,
        "upload_time": "2023-03-17T08:13:12",
        "upload_time_iso_8601": "2023-03-17T08:13:12.619580Z",
        "url": "https://files.pythonhosted.org/packages/cf/0e/34365b2ffedb9ea5b1fbab086232f033559a1d7520fca2d30e4be8a908e0/processtext-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "48e1a93ae9ac884a090ac4a43206f8128fe676529d235764739003089da6c5ee",
          "md5": "97765026ec26868d0e0a2f055a2f4c1c",
          "sha256": "2ddb87aebb7bbdc95814166e802ccd897dd6219745fa148332726cf87add5570"
        },
        "downloads": -1,
        "filename": "processtext-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "97765026ec26868d0e0a2f055a2f4c1c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9718,
        "upload_time": "2023-03-17T08:13:14",
        "upload_time_iso_8601": "2023-03-17T08:13:14.755375Z",
        "url": "https://files.pythonhosted.org/packages/48/e1/a93ae9ac884a090ac4a43206f8128fe676529d235764739003089da6c5ee/processtext-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3c0281c8660984a3845b64767366f258aa8cacf3a3fe18025fc08c2fb1757706",
          "md5": "ddd44be16f1ab6bd0e0bcbade6341a7d",
          "sha256": "ccf7b5c0e035a85060b3d02529de9e68c2839a2a6ab0216128581c8004c755b0"
        },
        "downloads": -1,
        "filename": "processtext-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ddd44be16f1ab6bd0e0bcbade6341a7d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8607,
        "upload_time": "2023-03-17T08:18:34",
        "upload_time_iso_8601": "2023-03-17T08:18:34.528555Z",
        "url": "https://files.pythonhosted.org/packages/3c/02/81c8660984a3845b64767366f258aa8cacf3a3fe18025fc08c2fb1757706/processtext-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "73eac301bda77497dd204b9960d71fe96e8df0e2a52b0aa8faa2e6f43535e191",
          "md5": "48443fce6d1b06d47d50793adf9b4f35",
          "sha256": "519a104a83a9b9217ec60eac4409dc993e4040ebe5c05820fc59c5c18b95321d"
        },
        "downloads": -1,
        "filename": "processtext-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "48443fce6d1b06d47d50793adf9b4f35",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9717,
        "upload_time": "2023-03-17T08:18:36",
        "upload_time_iso_8601": "2023-03-17T08:18:36.564773Z",
        "url": "https://files.pythonhosted.org/packages/73/ea/c301bda77497dd204b9960d71fe96e8df0e2a52b0aa8faa2e6f43535e191/processtext-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f1746d6c8fd1caa440c20a73d9c9e1222cead837ba5290ff05ef7c696d39d6ae",
          "md5": "7bbdfacd226d3093ce63a0699b6c6762",
          "sha256": "0542db77c22ff19f3a29dd0fdc4decfcc9499fc4c221069e844707959987d548"
        },
        "downloads": -1,
        "filename": "processtext-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7bbdfacd226d3093ce63a0699b6c6762",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8605,
        "upload_time": "2023-03-17T08:46:42",
        "upload_time_iso_8601": "2023-03-17T08:46:42.268621Z",
        "url": "https://files.pythonhosted.org/packages/f1/74/6d6c8fd1caa440c20a73d9c9e1222cead837ba5290ff05ef7c696d39d6ae/processtext-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fa3ad3b4a6f0049ad4681fc3abd163cfa079bd8ac0017ad3720ac7ceaf1ea328",
          "md5": "107d4c00202d94c12d21345e7d634463",
          "sha256": "a1f8e49c80d3f81b782b27f99ab50889d257c8dd0977307d47b5b569100fe342"
        },
        "downloads": -1,
        "filename": "processtext-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "107d4c00202d94c12d21345e7d634463",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9712,
        "upload_time": "2023-03-17T08:46:44",
        "upload_time_iso_8601": "2023-03-17T08:46:44.714375Z",
        "url": "https://files.pythonhosted.org/packages/fa/3a/d3b4a6f0049ad4681fc3abd163cfa079bd8ac0017ad3720ac7ceaf1ea328/processtext-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f1746d6c8fd1caa440c20a73d9c9e1222cead837ba5290ff05ef7c696d39d6ae",
        "md5": "7bbdfacd226d3093ce63a0699b6c6762",
        "sha256": "0542db77c22ff19f3a29dd0fdc4decfcc9499fc4c221069e844707959987d548"
      },
      "downloads": -1,
      "filename": "processtext-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7bbdfacd226d3093ce63a0699b6c6762",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 8605,
      "upload_time": "2023-03-17T08:46:42",
      "upload_time_iso_8601": "2023-03-17T08:46:42.268621Z",
      "url": "https://files.pythonhosted.org/packages/f1/74/6d6c8fd1caa440c20a73d9c9e1222cead837ba5290ff05ef7c696d39d6ae/processtext-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fa3ad3b4a6f0049ad4681fc3abd163cfa079bd8ac0017ad3720ac7ceaf1ea328",
        "md5": "107d4c00202d94c12d21345e7d634463",
        "sha256": "a1f8e49c80d3f81b782b27f99ab50889d257c8dd0977307d47b5b569100fe342"
      },
      "downloads": -1,
      "filename": "processtext-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "107d4c00202d94c12d21345e7d634463",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9712,
      "upload_time": "2023-03-17T08:46:44",
      "upload_time_iso_8601": "2023-03-17T08:46:44.714375Z",
      "url": "https://files.pythonhosted.org/packages/fa/3a/d3b4a6f0049ad4681fc3abd163cfa079bd8ac0017ad3720ac7ceaf1ea328/processtext-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}