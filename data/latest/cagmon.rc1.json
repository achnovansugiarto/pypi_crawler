{
  "info": {
    "author": "Phil Jung",
    "author_email": "pjjung@nims.re.kr",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2.7"
    ],
    "description": ",-----.  ,---.   ,----.   ,--.   ,--.                            ,--.             ,--.        \n    '  .--./ /  O  \\ '  .-./   |   `.'   | ,---. ,--,--,      ,---. ,-'  '-.,--.,--. ,-|  | ,---.  \n    |  |    |  .-.  ||  | .---.|  |'.'|  || .-. ||      \\    | .-. :'-.  .-'|  ||  |' .-. || .-. : \n    '  '--'\\|  | |  |'  '--'  ||  |   |  |' '-' '|  ||  |    \\   --.  |  |  '  ''  '\\ `-' |\\   --. \n     `-----'`--' `--' `------' `--'   `--' `---' `--''--'     `----'  `--'   `----'  `---'  `----' \n\nThe CAGMon is the tool that evaluates the dependence between the primary and auxiliary channels of Gravitational-Wave detectors.   \n\nThe goal of this project is to find a systematic way of identifying the abnormal glitches in the gravitational-wave data using various methods of correlation analysis. Usually, the community such as LIGO, Virgo, and KAGRA uses a conventional way of finding glitches in auxiliary channels of the detector - Klein-Welle, Omicron, Ordered Veto Lists, etc. However, some different ways can be possible to find and monitor them in a (quasi-) realtime. Also, the method can point out which channel is responsible for the found glitch. In this project, we study its possible to apply three different correlation methods - maximal information coefficient, Pearson's correlation coefficient, and Kendall's tau coefficient - in the gravitational wave data from the KAGRA detector.\n\n## Status\n\n[![Build Status](https://img.shields.io/badge/version-0.8.5-blue)](https://img.shields.io/badge/version-0.8.5-blue)\n\n[![Build Status](https://img.shields.io/badge/license-%20GPLv3-green)](http://www.gnu.org/licenses/)\n[![Build Status](https://img.shields.io/badge/python-3.6%20%7C%203.7%20%7C%203.8%20%7C%203.9-brightgreen)](https://minepy.readthedocs.io/en/latest/)\n[![Build Status](https://img.shields.io/badge/package-gwpy-yellow)](https://gwpy.github.io)\n[![Build Status](https://img.shields.io/badge/package-minepy-yellowgreen)](https://minepy.readthedocs.io/en/latest/)\n\n## References\n\nThe CAGMon algorithm is described in\n- Piljong Jung, Sang Hoon Oh, Young-Min Kim, Edwin J. Son, John J. Oh, *Optimizing Parameters of Information-Theoretic Correlation Measurement for Multi-Channel Time-Series Datasets in Gravitational Wave Detectors*, [arXiv:2107.03516](https://arxiv.org/abs/2107.03516)\n- Piljong Jung, Sang Hoon Oh, Young-Min Kim, Edwin J. Son, John J. Oh, *Identifying and diagnosing coherent associations and causalities between multi-channels of the gravitational wave detector*, [JGW-P2113130](https://gwdoc.icrr.u-tokyo.ac.jp/cgi-bin/private/DocDB/ShowDocument?docid=13130)\n\n\n## Installation\n\n```sh\n$ git clone https://github.com/pjjung/cagmon.git\n$ cd cagmon\n$ python setup.py install\n```\n\n## Syntax of configuration files (.ini)\n* Example of full configurations\n<pre>\n<code>\n[GENERAL]\ngps_start_time = 1234500000\ngps_end_time = 1234599968\nstride = 512\n\n[PREPROSECCING]\ndatasize = 8192\nfilter_type = highpass (or low/bandpass)\nfrequency1 = 10 (if bandpass file is applied, two frequency conditions are required; frequncy1 and crequncy2)\n\n[SEGMENT]\ndefined_condition = LSC_LOCK_STATE_CHANNEL == 10 (or segment_file_path = /path/to/segment/file/)\n\n[CHANNELS]\nmain_channel = GW-STRAIN_CHANNEL\naux_channels_file_path = /path/to/channel/list/file\n\n[INPUT AND OUTPUT PATHS]\nframe_files_path = /path/to/frame/file/folder\noutput_path = /path/to/output/folder\n</code>\n</pre> \n\n* Example of essential configurations\n<pre>\n<code>\n[GENERAL]\ngps_start_time = 1234500000\ngps_end_time = 1234599968\nstride = 512\n\n[SEGMENT]\ndefined_condition = LSC_LOCK_STATE_CHANNEL == 10 (or segment_file_path = /path/to/segment/file/)\n\n[CHANNELS]\nmain_channel = GW-STRAIN_CHANNEL\naux_channels_file_path = /path/to/channel/list/file\n\n[INPUT AND OUTPUT PATHS]\nframe_files_path = /path/to/frame/file/folder\noutput_path = /path/to/output/folder\n</code>\n</pre> \n\n## Syntax of Channel list files\n* Type 1\n<pre>\n<code>\nK1:AUX_CHANNEL_NAME_1\nK1:AUX_CHANNEL_NAME_2\nK1:AUX_CHANNEL_NAME_3\n.\n.\n.\n</code>\n</pre> \n\n* Type 1\n<pre>\n<code>\nK1:AUX_CHANNEL_NAME_1 SAMPLE_RATE\nK1:AUX_CHANNEL_NAME_2 SAMPLE_RATE\nK1:AUX_CHANNEL_NAME_3 SAMPLE_RATE\n.\n.\n.\n</code>\n</pre> \n\n## Execute the CAGMon etude\n```sh\n$ cagmon --config cagmon_config.ini\n```\n\n## License\n\nThe CAGMon is following the GNU General Public License version 3. Under this term, you can redistribute and/or modify it.\nSee [the GNU free software license](http://www.gnu.org/licenses/) for more details.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pjjung/cagmon",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "CAGMon",
    "package_url": "https://pypi.org/project/CAGMon/",
    "platform": null,
    "project_url": "https://pypi.org/project/CAGMon/",
    "project_urls": {
      "Homepage": "https://github.com/pjjung/cagmon"
    },
    "release_url": "https://pypi.org/project/CAGMon/0.8.5/",
    "requires_dist": [
      "gwpy (>=1.0.1)",
      "lalsuite (>=1.4.4)",
      "minepy (>=1.2.5)",
      "setuptools"
    ],
    "requires_python": ">=2.7",
    "summary": "Correlation Analysis based on Glitch Monitoring",
    "version": "0.8.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13165666,
  "releases": {
    "0.8.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "32b12e929f6e9bfd219681b90b5b9bf092d08621c3bc69e84e829c2021e81877",
          "md5": "856fe6e5915bff886fe6d6e7a21d2fca",
          "sha256": "528719000fe5b55f9403687113b512493fe248065a71dbc1a009b73fbb5788a9"
        },
        "downloads": -1,
        "filename": "CAGMon-0.8.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "856fe6e5915bff886fe6d6e7a21d2fca",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7",
        "size": 35945,
        "upload_time": "2022-03-14T00:56:22",
        "upload_time_iso_8601": "2022-03-14T00:56:22.063587Z",
        "url": "https://files.pythonhosted.org/packages/32/b1/2e929f6e9bfd219681b90b5b9bf092d08621c3bc69e84e829c2021e81877/CAGMon-0.8.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "32b12e929f6e9bfd219681b90b5b9bf092d08621c3bc69e84e829c2021e81877",
        "md5": "856fe6e5915bff886fe6d6e7a21d2fca",
        "sha256": "528719000fe5b55f9403687113b512493fe248065a71dbc1a009b73fbb5788a9"
      },
      "downloads": -1,
      "filename": "CAGMon-0.8.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "856fe6e5915bff886fe6d6e7a21d2fca",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=2.7",
      "size": 35945,
      "upload_time": "2022-03-14T00:56:22",
      "upload_time_iso_8601": "2022-03-14T00:56:22.063587Z",
      "url": "https://files.pythonhosted.org/packages/32/b1/2e929f6e9bfd219681b90b5b9bf092d08621c3bc69e84e829c2021e81877/CAGMon-0.8.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}