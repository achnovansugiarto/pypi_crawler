{
  "info": {
    "author": "GE",
    "author_email": "sontunghoang@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: System :: Networking",
      "Topic :: System :: Systems Administration"
    ],
    "description": "# python-liftbridge\n[![PyPI](https://img.shields.io/pypi/v/python-liftbridge.svg)](https://pypi.org/project/python-liftbridge/)\n[![GitHub](https://img.shields.io/github/license/dgzlopes/python-liftbridge)](https://github.com/dgzlopes/python-liftbridge/blob/master/LICENSE.md)\n\n**This project is under development.**\n\nPython client for [Liftbridge](https://github.com/liftbridge-io/liftbridge), a system that provides lightweight, fault-tolerant message streams for [NATS](https://nats.io).\n\nLiftbridge provides the following high-level features:\n\n- Log-based API for NATS\n- Replicated for fault-tolerance\n- Horizontally scalable\n- Wildcard subscription support\n- At-least-once delivery support and message replay\n- Message key-value support\n- Log compaction by key\n\n## Installation\n\n```\n$ pip install python-liftbridge\n```\n\n## Basic Usage\n\n```python\nfrom liftclient import Lift, Message, Stream, ErrStreamExists\n\n# Create a Liftbridge client.\nclient = Lift(ip_address='localhost:9292', timeout=5)\n\n# Create a stream attached to the NATS subject \"foo\".\ntry:\n    client.create_stream(Stream(subject='foo', name='foo-stream'))\nexcept ErrStreamExists:\n    print('This stream already exists!')\n\n# Publish a message to \"foo\".\nclient.publish(Message(value='hello', subject='foo'))\n\n# Subscribe to the stream starting from the beginning.\nfor message in client.subscribe(\n    Stream(\n        subject='foo',\n        name='foo-stream',\n    ).start_at_earliest_received(),\n):\n    print(\"Received: '{}'\".format(message.value))\n\n```\n\n### Create Stream\n\n[Streams](https://github.com/liftbridge-io/liftbridge/blob/master/documentation/concepts.md#stream) are a durable message log attached to a NATS subject. They record messages published to the subject for consumption.\n\nStreams have a few key properties: a subject, which is the corresponding NATS subject, a name, which is a human-readable identifier for the stream, and a replication factor, which is the number of nodes the stream should be replicated to for redundancy.  Optionally, there is a group which is the name of a load-balance group for the stream to join. When there are multiple streams in the same group, messages will be balanced among them.\n\n```python\n\"\"\"\n    Create a stream attached to the NATS subject \"foo.*\" that is replicated to\n    all the brokers in the cluster. ErrStreamExists is returned if a stream with\n    the given name already exists for the subject.\n\"\"\"\nclient.create_stream(Stream(subject='foo.*', name='my-stream', max_replication=True))\n```\n\n### Subscription Start/Replay Options\n\n[Subscriptions](https://github.com/liftbridge-io/liftbridge/blob/master/documentation/concepts.md#subscription) are how Liftbridge streams are consumed. Clients can choose where to start consuming messages from in a stream. This is controlled using options passed to Subscribe.\n\n```python\n# Subscribe starting with new messages only.\nclient.subscribe(\n    Stream(subject='foo', name='foo-stream')\n)\n# Subscribe starting with the most recently published value.\nclient.subscribe(\n    Stream(subject='foo', name='foo-stream').start_at_earliest_received()\n)\n# Subscribe starting with the oldest published value.\nclient.subscribe(\n    Stream(subject='foo', name='foo-stream').start_at_latest_received()\n)\n# Subscribe starting at a specific offset.\nclient.subscribe(\n    Stream(subject='foo', name='foo-stream').start_at_offset(4)\n)\n# Subscribe starting at a specific time.\nclient.subscribe(\n    Stream(subject='foo', name='foo-stream').start_at_time(datetime.now())\n)\n# Subscribe starting at a specific amount of time in the past.\nclient.subscribe(\n    Stream(subject='foo', name='foo-stream').start_at_time_delta(timedelta(days=1))\n)\n```\n\n### Publishing\n\nA publish API is provided to make it easy to write messages to streams. This includes a number of options for decorating messages with metadata like a message key.\n\nKeys are used by Liftbridge's log compaction. When enabled, Liftbridge streams will retain only the last message for a given key.\n\n```python\n# Publish a message with a key\nclient.publish(Message(subject='foo', value='Hello', key='key'))\n```\n\n#### Publishing Directly with NATS\n\nSince Liftbridge is an extension of [NATS](https://github.com/nats-io/gnatsd), a [NATS client](https://github.com/nats-io/nats.py) can also be used to publish messages. This means existing NATS publishers do not need any changes for messages to be consumed in Liftbridge.\n\n## How to contribute\n1. Check for open issues or open a fresh issue to start a discussion around a feature idea or a bug.\n2. Fork [the repository](https://github.com/dgzlopes/python-liftbridge) on GitHub to start making your changes to the master branch (or branch off of it).\n3. Write a test which shows that the bug was fixed or that the feature works as expected.\n4. Send a [pull request](https://help.github.com/en/articles/creating-a-pull-request-from-a-fork) and bug [me](https://github.com/dgzlopes) until it gets merged and published.\n\nSome things on the backlog:\n\n- [ ] Add documentation (Sphynx)\n- [ ] Add CI (CircleCI or TravisCI)\n- [ ] Add tests\n- [ ] Add code coverage\n- [ ] Add TLS support for gRPC\n- [ ] Add message headers support\n- [ ] Add message ACK support (scaffolding is already done)\n- [x] Add method to close connection\n- [ ] Add async client\n- [ ] Add gRPC connection pool\n- [x] Add logging (and remove all the random prints)\n- [ ] Add proper docstrings\n- [x] Add version file\n- [ ] Add Contributing.md and explanation of the workflow (pyenv,tox,make,pre-commit...)\n- [ ] Improve fetch metadata\n- [ ] Improve error handling\n- [x] Add to the makefile run-liftbridge using Docker [container](https://github.com/dgzlopes/liftbridge-docker)\n- [ ] Better instrumentation/observability (OpenCensus support?)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/LaPetiteSouris/liftbridge",
    "keywords": "",
    "license": "Apache Software License (Apache License, Version 2.0)",
    "maintainer": "",
    "maintainer_email": "",
    "name": "liftclient",
    "package_url": "https://pypi.org/project/liftclient/",
    "platform": "",
    "project_url": "https://pypi.org/project/liftclient/",
    "project_urls": {
      "Homepage": "https://github.com/LaPetiteSouris/liftbridge"
    },
    "release_url": "https://pypi.org/project/liftclient/0.0.6/",
    "requires_dist": [
      "grpcio (<2,>=1.23.0)"
    ],
    "requires_python": "",
    "summary": "Python client for Liftbridge.",
    "version": "0.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7423237,
  "releases": {
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a78abdebc413364ee7703b1eaf4dcb1dcf170786bdb434d390936b3c4ed902ee",
          "md5": "b2feb80494804597b0be4c4b80a4ab80",
          "sha256": "b3555fd7692bd078eebe5f5248cf226af82ded3b80cd37f1d740f2723790ca69"
        },
        "downloads": -1,
        "filename": "liftclient-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b2feb80494804597b0be4c4b80a4ab80",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 21400,
        "upload_time": "2020-06-08T11:54:39",
        "upload_time_iso_8601": "2020-06-08T11:54:39.737424Z",
        "url": "https://files.pythonhosted.org/packages/a7/8a/bdebc413364ee7703b1eaf4dcb1dcf170786bdb434d390936b3c4ed902ee/liftclient-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6944ce90f688825b0eac4602d15644d7b79b54f915d8cdfad9ec6f40849f2204",
          "md5": "15311970927e9706f51c8aab7307324d",
          "sha256": "a54ba312c180bbb482630c43f123394d7bc9e9a810726990b54c260ce84d4a59"
        },
        "downloads": -1,
        "filename": "liftclient-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "15311970927e9706f51c8aab7307324d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17419,
        "upload_time": "2020-06-08T11:54:42",
        "upload_time_iso_8601": "2020-06-08T11:54:42.527920Z",
        "url": "https://files.pythonhosted.org/packages/69/44/ce90f688825b0eac4602d15644d7b79b54f915d8cdfad9ec6f40849f2204/liftclient-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef799f2dbcee16862e8a3c767896e814f0fd0cc8761f8edd0f44317ce6fa9809",
          "md5": "64e433347f05cacf213a0b558b1ba832",
          "sha256": "ac33eeda377c7c9423f5e5b945f894834d3375380786a82cabb5c7e4ae90af50"
        },
        "downloads": -1,
        "filename": "liftclient-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "64e433347f05cacf213a0b558b1ba832",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 22950,
        "upload_time": "2020-06-08T11:59:16",
        "upload_time_iso_8601": "2020-06-08T11:59:16.094786Z",
        "url": "https://files.pythonhosted.org/packages/ef/79/9f2dbcee16862e8a3c767896e814f0fd0cc8761f8edd0f44317ce6fa9809/liftclient-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "36e432f75eb0fd872c316a936b0bb8fd256c503acf8e63da552c44bcc253f51d",
          "md5": "7755cbff4ca09fe7c16f73baf84435ab",
          "sha256": "f0eddc939499605d4221d049618eb23c07eee4e364ef92d56ad97eff60541c12"
        },
        "downloads": -1,
        "filename": "liftclient-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "7755cbff4ca09fe7c16f73baf84435ab",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17533,
        "upload_time": "2020-06-08T11:59:17",
        "upload_time_iso_8601": "2020-06-08T11:59:17.478910Z",
        "url": "https://files.pythonhosted.org/packages/36/e4/32f75eb0fd872c316a936b0bb8fd256c503acf8e63da552c44bcc253f51d/liftclient-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ef799f2dbcee16862e8a3c767896e814f0fd0cc8761f8edd0f44317ce6fa9809",
        "md5": "64e433347f05cacf213a0b558b1ba832",
        "sha256": "ac33eeda377c7c9423f5e5b945f894834d3375380786a82cabb5c7e4ae90af50"
      },
      "downloads": -1,
      "filename": "liftclient-0.0.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "64e433347f05cacf213a0b558b1ba832",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 22950,
      "upload_time": "2020-06-08T11:59:16",
      "upload_time_iso_8601": "2020-06-08T11:59:16.094786Z",
      "url": "https://files.pythonhosted.org/packages/ef/79/9f2dbcee16862e8a3c767896e814f0fd0cc8761f8edd0f44317ce6fa9809/liftclient-0.0.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "36e432f75eb0fd872c316a936b0bb8fd256c503acf8e63da552c44bcc253f51d",
        "md5": "7755cbff4ca09fe7c16f73baf84435ab",
        "sha256": "f0eddc939499605d4221d049618eb23c07eee4e364ef92d56ad97eff60541c12"
      },
      "downloads": -1,
      "filename": "liftclient-0.0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "7755cbff4ca09fe7c16f73baf84435ab",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 17533,
      "upload_time": "2020-06-08T11:59:17",
      "upload_time_iso_8601": "2020-06-08T11:59:17.478910Z",
      "url": "https://files.pythonhosted.org/packages/36/e4/32f75eb0fd872c316a936b0bb8fd256c503acf8e63da552c44bcc253f51d/liftclient-0.0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}