{
  "info": {
    "author": null,
    "author_email": "Michael Stanley <stanley50@marshall.edu>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Testing"
    ],
    "description": "# WMUL-FM Test Untilities\n\nThese are utilities that help with testing WMUL-FM's other python modules.\n\n1. `make_namedtuple` creates one-off named tuples for concisely passing data from the fixture method to the test methods.\n\n2. `generate_true_false_matrix_from_named_tuple` creates a list of true and false values, and a list of corresponding ids, to be passed into a pytest test fixture.\n\n3. `assert_has_only_these_calls` receives a `unittest.mock` object and asserts that it has been called with the specified calls and only the specified calls. The counts are compared and then the `mock_calls` list is checked for the calls.\n\n## make_namedtuple(class_name, **fields)\n`class_name`: The name of the tuple class. Same as `namedtuple(class_name=)`.\n\n`fields`: A keyword dictionary of field names and values. The names are the same as `namedtuple(field_names=)`.\n\n`returns` A namedtuple of type `class_name`, with `field_names` corresponding to the keys of the fields dictionary and field values corresponding to the values of the fields dictionary.\n\n`enterprise = make_namedtuple(\"Starship\", name=\"U.S.S. Enterprise\", registry_number=\"NCC-1701\")`\n\nis the same as\n\n`starship_tuple = namedtuple(\"Starship\", [\"name\", \"registry_number\"])`  \n`enterprise = starship_tuple(\"U.S.S. Enterprise\", \"NCC-1701\")`\n\nThis is useful when you want to make a one-off namedtuple. It can be used to pass data concisely from a testing fixture to the test methods.\n\n## generate_true_false_matrix_from_namedtuple(input_namedtuple)\n`input_namedtuple` A named tuple whose fields will be used to generate the True False matrix.\n\n`returns` Two lists: true_false_matrix and test_ids. The True-False matrix is a list of the namedtuples that is of size len(input_tuple) and with the fields set to every combination of True and False. The list of ids is a list of strings that describe the corresponding tuples.\n\nGiven: `input_tuple = namedtuple(\"burger_toppings\", [\"with_cheese\", \"with_ketchup\", \"with_mustard\"])`\n\n`true_false_matrix` will be:  \n```\n[\n    burger_toppings(with_cheese=False, with_ketchup=False, with_mustard=False),\n    burger_toppings(with_cheese=True,  with_ketchup=False, with_mustard=False),\n    burger_toppings(with_cheese=False, with_ketchup=True,  with_mustard=False),\n    burger_toppings(with_cheese=True,  with_ketchup=True,  with_mustard=False),\n    burger_toppings(with_cheese=False, with_ketchup=False, with_mustard=True),\n    burger_toppings(with_cheese=True,  with_ketchup=False, with_mustard=True),\n    burger_toppings(with_cheese=False, with_ketchup=True,  with_mustard=True),\n    burger_toppings(with_cheese=True,  with_ketchup=True,  with_mustard=True)\n]\n```\n\nand `test_ids` will be:\n```\n[\n    'burger_toppings(with_cheese=False, with_ketchup=False, with_mustard=False)',\n    'burger_toppings(with_cheese=True,  with_ketchup=False, with_mustard=False)',\n    'burger_toppings(with_cheese=False, with_ketchup=True,  with_mustard=False)',\n    'burger_toppings(with_cheese=True,  with_ketchup=True,  with_mustard=False)',\n    'burger_toppings(with_cheese=False, with_ketchup=False, with_mustard=True)',\n    'burger_toppings(with_cheese=True,  with_ketchup=False, with_mustard=True)',\n    'burger_toppings(with_cheese=False, with_ketchup=True,  with_mustard=True)',\n    'burger_toppings(with_cheese=True,  with_ketchup=True,  with_mustard=True)'\n]\n```\n\nNote that true_false_matrix is a list of namedtuples and test_ids is a list of the string representations of those same namedtuples.\n\n## generate_true_false_matrix_from_list_of_strings(name, input_strings):\nA convenience function. It takes a string name and a list of strings, and \nreturns the true-false matrix built from those values.\n\n```\ngenerate_true_false_matrix_from_list_of_strings(\n    \"burger_toppings\",\n    [\"with_cheese\", \"with_ketchup\", \"with_mustard\"]\n)\n```\n\nis the equivalent of\n\n```\nburger_toppings = namedtuple(\n    \"burger_toppings\", \n    [\"with_cheese\", \"with_ketchup\", \"with_mustard\"]\n)\ngenerate_true_false_matrix_from_namedtuple(burger_toppings)\n```\n\n## assert_has_only_these_calls(mock, calls, any_order=False)\n`mock` a `unittest.mock` object.\n\n`calls` a list of calls.\n\nIf `any_order` is False (the default) then the calls must be\nsequential. \n\nIf `any_order` is True then the calls can be in any order, but\nthey must all appear in `mock_calls`.\n\nassert the mock has been called with the specified calls and only\nthe specified calls. The counts are compared and then `assert_has_calls` is called.\n\nThis is the natural continuation of `assert_called_once_with` and is based on that method.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": null,
    "keywords": null,
    "license": null,
    "maintainer": null,
    "maintainer_email": null,
    "name": "wmul-test-utils",
    "package_url": "https://pypi.org/project/wmul-test-utils/",
    "platform": null,
    "project_url": "https://pypi.org/project/wmul-test-utils/",
    "project_urls": {
      "Bug Tracker": "https://github.com/MikeTheHammer/wmul_test_utils/issues",
      "Homepage": "https://github.com/MikeTheHammer/wmul_test_utils"
    },
    "release_url": "https://pypi.org/project/wmul-test-utils/0.3.1/",
    "requires_dist": [
      "pytest ; extra == \"test\"",
      "pytest-mock ; extra == \"test\"",
      "tox ; extra == \"tox\""
    ],
    "requires_python": ">=3.6",
    "summary": "Various utilities for testing WMUL-FM's other packages.",
    "version": "0.3.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16460330,
  "releases": {
    "0.2.0": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "30187c1c14e471e0da3d62a86d642d8fd2c48dae1b93d58b3ba17008645f935a",
          "md5": "d0a5a896e151c4fa1b21356e52e648e5",
          "sha256": "11951ced9a06e96f96f985284c16a7e89e2a1df965d6cc964a622751bf2e8887"
        },
        "downloads": -1,
        "filename": "wmul_test_utils-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d0a5a896e151c4fa1b21356e52e648e5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11573,
        "upload_time": "2023-01-13T15:17:25",
        "upload_time_iso_8601": "2023-01-13T15:17:25.912310Z",
        "url": "https://files.pythonhosted.org/packages/30/18/7c1c14e471e0da3d62a86d642d8fd2c48dae1b93d58b3ba17008645f935a/wmul_test_utils-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "104f58635b7d79d7575277832209c6337f33160a0f6cf4a47c51a32005eedc46",
          "md5": "c1cbbd0ab934bf67255383fe9903341f",
          "sha256": "b72756226635102836ebb7e5868d9650d6df9a202efd1124e135916f336f2601"
        },
        "downloads": -1,
        "filename": "wmul-test-utils-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c1cbbd0ab934bf67255383fe9903341f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12124,
        "upload_time": "2023-01-13T15:17:27",
        "upload_time_iso_8601": "2023-01-13T15:17:27.232249Z",
        "url": "https://files.pythonhosted.org/packages/10/4f/58635b7d79d7575277832209c6337f33160a0f6cf4a47c51a32005eedc46/wmul-test-utils-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "ef354d665a3688269663fffb355d6320168cb6b6461a4f86a5325137510f6a8d",
          "md5": "c569eda7c9cba4ee4ab63f05a0119999",
          "sha256": "93a23cb1b9f9b627b070deb06651eee80a040cdabcea4ada557de6aee1edd834"
        },
        "downloads": -1,
        "filename": "wmul_test_utils-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c569eda7c9cba4ee4ab63f05a0119999",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11710,
        "upload_time": "2023-01-17T15:58:41",
        "upload_time_iso_8601": "2023-01-17T15:58:41.622355Z",
        "url": "https://files.pythonhosted.org/packages/ef/35/4d665a3688269663fffb355d6320168cb6b6461a4f86a5325137510f6a8d/wmul_test_utils-0.3.0-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": "Bad API"
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "be91042b96c8a8dad9ba5b5a025cb81d2207c9c2d88e6774417fcf4fdbdbdac8",
          "md5": "c61b440818b293ae984f76f92d3b0edc",
          "sha256": "e9ce57f7f441a78802d4f655cc1bf6350e7b3fa62f5c8768bf3ed24be6c30317"
        },
        "downloads": -1,
        "filename": "wmul-test-utils-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c61b440818b293ae984f76f92d3b0edc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13205,
        "upload_time": "2023-01-17T15:58:43",
        "upload_time_iso_8601": "2023-01-17T15:58:43.092683Z",
        "url": "https://files.pythonhosted.org/packages/be/91/042b96c8a8dad9ba5b5a025cb81d2207c9c2d88e6774417fcf4fdbdbdac8/wmul-test-utils-0.3.0.tar.gz",
        "yanked": true,
        "yanked_reason": "Bad API"
      }
    ],
    "0.3.1": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "1405cc6581b76fd9a68a0b83d8154644a2b2648a9ea9ca3844d2ff9f4706dcf8",
          "md5": "f6064f5acd3d8f143df7f9f79aeb7f88",
          "sha256": "da5b84e896e9e7e22650c07b58e4e5a9bfa77f432001ce0e4566a07bf69aa0c0"
        },
        "downloads": -1,
        "filename": "wmul_test_utils-0.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f6064f5acd3d8f143df7f9f79aeb7f88",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11975,
        "upload_time": "2023-01-17T16:16:56",
        "upload_time_iso_8601": "2023-01-17T16:16:56.636503Z",
        "url": "https://files.pythonhosted.org/packages/14/05/cc6581b76fd9a68a0b83d8154644a2b2648a9ea9ca3844d2ff9f4706dcf8/wmul_test_utils-0.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "25b5272b49f7cf7f5a3ae374e879c5f9d4696da12ad5c716ceaaa6456671afb0",
          "md5": "fd935fa5b2125e364518e7cbe3b6dadd",
          "sha256": "8bfe85da0c06869b2530a087b181e6b623160f4f9d7c9099783190268d58977f"
        },
        "downloads": -1,
        "filename": "wmul-test-utils-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "fd935fa5b2125e364518e7cbe3b6dadd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13691,
        "upload_time": "2023-01-17T16:16:57",
        "upload_time_iso_8601": "2023-01-17T16:16:57.752976Z",
        "url": "https://files.pythonhosted.org/packages/25/b5/272b49f7cf7f5a3ae374e879c5f9d4696da12ad5c716ceaaa6456671afb0/wmul-test-utils-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "1405cc6581b76fd9a68a0b83d8154644a2b2648a9ea9ca3844d2ff9f4706dcf8",
        "md5": "f6064f5acd3d8f143df7f9f79aeb7f88",
        "sha256": "da5b84e896e9e7e22650c07b58e4e5a9bfa77f432001ce0e4566a07bf69aa0c0"
      },
      "downloads": -1,
      "filename": "wmul_test_utils-0.3.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f6064f5acd3d8f143df7f9f79aeb7f88",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 11975,
      "upload_time": "2023-01-17T16:16:56",
      "upload_time_iso_8601": "2023-01-17T16:16:56.636503Z",
      "url": "https://files.pythonhosted.org/packages/14/05/cc6581b76fd9a68a0b83d8154644a2b2648a9ea9ca3844d2ff9f4706dcf8/wmul_test_utils-0.3.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "25b5272b49f7cf7f5a3ae374e879c5f9d4696da12ad5c716ceaaa6456671afb0",
        "md5": "fd935fa5b2125e364518e7cbe3b6dadd",
        "sha256": "8bfe85da0c06869b2530a087b181e6b623160f4f9d7c9099783190268d58977f"
      },
      "downloads": -1,
      "filename": "wmul-test-utils-0.3.1.tar.gz",
      "has_sig": false,
      "md5_digest": "fd935fa5b2125e364518e7cbe3b6dadd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 13691,
      "upload_time": "2023-01-17T16:16:57",
      "upload_time_iso_8601": "2023-01-17T16:16:57.752976Z",
      "url": "https://files.pythonhosted.org/packages/25/b5/272b49f7cf7f5a3ae374e879c5f9d4696da12ad5c716ceaaa6456671afb0/wmul-test-utils-0.3.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}