{
  "info": {
    "author": "ukrolelo",
    "author_email": "max13fr@yozo.fr",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Airzone Cloud\n\n- [Airzone Cloud](#airzone-cloud)\n  - [Presentation](#presentation)\n    - [Abstract](#abstract)\n    - [Module classes](#module-classes)\n  - [Usage](#usage)\n    - [Install](#install)\n    - [Start API](#start-api)\n    - [Get device status](#get-device-status)\n    - [Get system status](#get-system-status)\n    - [Get all zones status (on all devices / systems)](#get-all-zones-status-on-all-devices--systems)\n    - [Control a specific zone](#control-a-specific-zone)\n    - [HVAC mode](#hvac-mode)\n      - [Available modes](#available-modes)\n      - [Set HVAC mode on a system (and its sub-zones)](#set-hvac-mode-on-a-system-and-its-sub-zones)\n  - [API doc](#api-doc)\n    - [Constructor](#constructor)\n\n## Presentation\n\n### Abstract\n\nAllow to communicate easily with Airzone Cloud to retrieve information or to send commands (on/off, temperature, HVAC mode, ...)\n\nThis library manage the main Airzone Cloud API (try to connect to [www.airzonecloud.com](https://www.airzonecloud.com) to be sure).\n\nIf you are looking for the specific Airzone Cloud API for Daikin (try to connect to [dkn.airzonecloud.com](https://dkn.airzonecloud.com)), you should use this package : [AirzoneCloudDaikin](https://github.com/max13fr/AirzoneCloudDaikin)\n\n### Module classes\n\n* **AirzoneCloud** : represent your AirzoneCloud account. Contains a list of your **devices** :\n  * **Device** : represent one of your Airzone webserver registered. Contains a list of its **systems** :\n    * **System** : represent your climate equipment (Mitsubishi, Daikin, ...). Contains a list of its **zones** :\n      * **Zone** : represent a zone to control\n\n## Usage\n\n### Install\n\n```bash\npip3 install AirzoneCloud\n```\n\n### Start API\n\n```python\nfrom AirzoneCloud import AirzoneCloud\napi = AirzoneCloud(\"email@domain.com\", \"password\")\n```\n\n### Get device status\n\n```python\nfor device in api.devices:\n    print(\n        \"Device name={}, status={}, id={}, mac={}, pin={}\".format(\n            device.name, device.status, device.id, device.mac, device.pin\n        )\n    )\n```\n\nOutput :\n\n<pre>\nDevice name=Home, status=activated, id=5bc8ae0c4149526af90c0000, mac=AA:BB:CC:DD:EE:FF, pin=1234\n</pre>\n\n### Get system status\n\n```python\nfor system in api.devices[0].systems:\n    print(\n        \"System name={}, mode={}, eco={}, velocity={}, airflow={}\".format(\n            system.name,\n            system.mode,\n            system.eco,\n            system.velocity,\n            system.airflow,\n        )\n    )\n```\n\nOutput :\n\n<pre>\nSystem name=Home, mode=heat-both, eco=eco-a, velocity=None, airflow=None\n</pre>\n\n### Get all zones status (on all devices / systems)\n\n```python\nfor zone in api.all_zones:\n    print(\n        \"Zone name={}, is_on={}, mode={}, current_temperature={}, target_temperature={}\".format(\n            zone.name,\n            zone.is_on,\n            zone.mode,\n            zone.current_temperature,\n            zone.target_temperature,\n        )\n    )\n```\n\nOutput :\n\n<pre>\nZone name=Baby bedroom, is_on=False, mode=heat-both, current_temperature=20.4, target_temperature=19.5\nZone name=Parents bedroom, is_on=False, mode=heat-both, current_temperature=21.1, target_temperature=17.0\nZone name=Living room, is_on=True, mode=heat-both, current_temperature=21.4, target_temperature=21.5\nZone name=Kitchen, is_on=False, mode=heat-both, current_temperature=21.2, target_temperature=19.0\n</pre>\n\n### Control a specific zone\n\n```python\nzone = api.all_zones[2]\nprint(zone)\n\n# start zone\nzone.turn_on()\n\n# set temperature\nzone.set_temperature(18.5)\n\nprint(zone)\n```\n\nOutput :\n\n<pre>\nZone(name=Living room, is_on=False, mode=heat-both, current_temp=21.6, target_temp=21.0)\nZone(name=Living room, is_on=True, mode=heat-both, current_temp=21.6, target_temp=18.5)\n</pre>\n\n### HVAC mode\n\n#### Available modes\n\n* **stop** : Stop\n* **ventilate** : Ventilate\n* **dehumidify** : Dry\n* **heat-air** : Air heating\n* **heat-radiant** : Radiant heating\n* **heat-both** : Combined heating\n* **cool-air** : Air cooling\n* **cool-radiant** : Radiant cooling\n* **cool-both** : Combined cooling\n\n#### Set HVAC mode on a system (and its sub-zones)\n\n```python\nsystem = api.devices[0].systems[0]\nprint(system)\n\n# set mode to heat-both\nsystem.set_mode(\"heat-both\")\n\nprint(system)\n```\n\nOutput :\n\n<pre>\nSystem(name=Home, mode=stop, eco=eco-a, velocity=None, airflow=None)\nSystem(name=Home, mode=heat-both, eco=eco-a, velocity=None, airflow=None)\n</pre>\n\n## API doc\n\n[API full doc](API.md)\n\n### Constructor\n\n```python\nAirzoneCloud(username, password, user_agent=None, base_url=None)\n```\n\n* **username** : you're username used to connect on Airzone Cloud website or app\n* **password** : you're password used to connect on Airzone Cloud website or app\n* **user_agent** : allow to change default user agent if set\n* **base_url** : allow to change base url of the Airzone Cloud API if set\n  * default value : _https://www.airzonecloud.com_",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ukrolelo/AirzoneCloud",
    "keywords": "airzone,airzonecloud,api",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "AirzoneCloudfix",
    "package_url": "https://pypi.org/project/AirzoneCloudfix/",
    "platform": "",
    "project_url": "https://pypi.org/project/AirzoneCloudfix/",
    "project_urls": {
      "Homepage": "https://github.com/ukrolelo/AirzoneCloud"
    },
    "release_url": "https://pypi.org/project/AirzoneCloudfix/0.5.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.5",
    "summary": "Python3 library for Airzone Cloud API",
    "version": "0.5.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11243666,
  "releases": {
    "0.5.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3a7b60ab3c993c6e57dd721933bdfca4635882f0e492e5f127d15f0d5533d6cc",
          "md5": "efc223e9b5f6657bbd275026aa6c6836",
          "sha256": "8c07274eaf95088e145a328cf963e9be6478e8c3eb3b0904a46c12e1e1c68287"
        },
        "downloads": -1,
        "filename": "AirzoneCloudfix-0.5.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "efc223e9b5f6657bbd275026aa6c6836",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 10092,
        "upload_time": "2021-08-22T09:45:42",
        "upload_time_iso_8601": "2021-08-22T09:45:42.319029Z",
        "url": "https://files.pythonhosted.org/packages/3a/7b/60ab3c993c6e57dd721933bdfca4635882f0e492e5f127d15f0d5533d6cc/AirzoneCloudfix-0.5.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3a7b60ab3c993c6e57dd721933bdfca4635882f0e492e5f127d15f0d5533d6cc",
        "md5": "efc223e9b5f6657bbd275026aa6c6836",
        "sha256": "8c07274eaf95088e145a328cf963e9be6478e8c3eb3b0904a46c12e1e1c68287"
      },
      "downloads": -1,
      "filename": "AirzoneCloudfix-0.5.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "efc223e9b5f6657bbd275026aa6c6836",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 10092,
      "upload_time": "2021-08-22T09:45:42",
      "upload_time_iso_8601": "2021-08-22T09:45:42.319029Z",
      "url": "https://files.pythonhosted.org/packages/3a/7b/60ab3c993c6e57dd721933bdfca4635882f0e492e5f127d15f0d5533d6cc/AirzoneCloudfix-0.5.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}