{
  "info": {
    "author": "BFG-Soft LLC",
    "author_email": "info@bfg-soft.ru",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries",
      "Typing :: Typed"
    ],
    "description": "# Some extra python data containers (extra collections).\n\nThis project extends python\\`s core library `collections` module.\n \n\n## Getting started.\n\n### Installation.\n\nWe have no pypi account yet and we have no private pypi repository.\nSo, you should install this package as usual with `pip` package manager in \nvirtualenv or just globally from source:\n```bash\npip install git+https://bitbucket.org/bfg-soft/collections_extension.git\n```\nIf you want to install specific version or branch, you should execute:\n```bash\npip install git+https://bitbucket.org/bfg-soft/collections_extension.git@v0.1.0\n```\n\n\n### Content.\n\n#### Native-like containers.\n\nAs we know, it is not recommended to inherit your own types from python\\`s \ncore types like `dict` or `tuple`.\nThis package provides some native-like types, such as:\n\n * `Tuple` - `tuple`-like container for user types (immutable),\n * `List` - `list`-like container for user types (mutable),\n * `Dict` - `dict`-like container for user types (mutable),\n * `Map` - `MappingProxyType`-like (`dict` without mutability) container for user \n types (immutable),\n * `Set` - `set`-like container for user types (mutable)\n \n \n#### Exception map container.\n\nContainer implements map of exception classes with inheritance check during \nsearching key in map. For example, we have ``ExceptionMap``:\n\n```python\nfrom collections_extension import ExceptionMap\n\nm = ExceptionMap({ValueError: 'somevalue'})\n```\n\nImagine, that we catch `UnicodeError` somewere in program and we want to \nprocess it. Our processing is based on defined ``ExceptionMap`` `m` and we \nwant to know what value we should send futher to the program runtime.\n\n```python\nfrom collections_extension import ExceptionMap\n\nm = ExceptionMap({ValueError: 'somevalue'})\n\n...\n\n\ndef somefn():\n try:\n  ...\n\n except UnicodeError:\n  value = m[UnicodeError]\n\n except TypeError:\n  value = m.get(TypeError)\n  if value is None:\n   raise\n\n else:\n  value = None\n\n return value\n```\n\n``ExceptionMap`` will search the hierarchy of key exception until it comes to \n``Exception`` class. Only after that, map will raise ``KeyError`` exception.\n\nOur map doesn\\`t contain ``UnicodeError`` key, but it contains \n``ValueError``. We know, that ``UnicodeError`` inherits ``ValueError`` \nexception class, so `value` during handling ``UnicodeError`` will be \nassigned to `somevalue` string.\n\nDuring handling of ``TypeError`` exception we use method `get` of \n``ExceptionMap``. It doesn\\`t raise any exception, like method of type \n``dict`` and returns default value (second argument, that should be passing to \nthe method) or ``None``. \n\nBecides that, ``ExceptionMap`` allow to defined `default_value` during it\\`s \ninitialization like:\n\n```python\nfrom collections_extension import ExceptionMap\n\nm = ExceptionMap({ValueError: 'somevalue'}, default_value='not none')\n```\n\nIt overrides default value ``None``, that will be returned when key does not \nexist and not default value has been passed.\n\n\n#### Sqlalchemy declarative model map container.\n\nContainer implements map of [sqlalchemy](https://sqlalchemy.org) declarative \nmeta classes as values and their tablenames as keys.\n\nFor example, you have module `your_package.data.model` with sqlalchemy \ndeclarative models.\n\nYou can make map of declarative models withthis code:\n\n```python\nfrom collections_extension import SqlalchemyModelMap\n\nMODEL_MAP = SqlalchemyModelMap.from_module_name('your_package.data.model')\n```\n\nAfter that, you can find all declarative model classes in this map (if your \nstructured module correctly) by their tablename. For example \n`MODEL_MAP['my_table']` will get you declarative model for `my_table` table.\n\n\n#### Sqlalchemy declarative model schema map container.\n\nContainer implements map of \n[marshmallow](https://github.com/marshmallow-code/marshmallow) schema \ninstances as values and tablenames of declarative model classes as keys.\n\nEach marshmallow schema creates with special library \n[marshmallow-sqlalchemy](https://github.com/marshmallow-code/marshmallow-sqlalchemy),\nwhich inspects declarative model classes and makes schema class as a result.\n\nTypical usage:\n\n```python\nfrom collections_extension import SqlalchemyModelMap, SqlalchemyModelSchemaMap\n\nMODEL_MAP = SqlalchemyModelMap.from_module_name('your_package.data.model')\nMODEL_SCHEMA_MAP = SqlalchemyModelSchemaMap.from_sqlalchemy_model_map(MODEL_MAP)\n```\n\n\n## License.\n\nThis project is licensed under the MIT License - see the \n[LICENSE.txt](LICENSE.txt) file for details.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://bitbucket.org/bfg-soft/collections_extension",
    "keywords": "",
    "license": "MIT",
    "maintainer": "Vladimir V. Pivovarov",
    "maintainer_email": "pvv@bfg-soft.ru",
    "name": "collections-extension",
    "package_url": "https://pypi.org/project/collections-extension/",
    "platform": null,
    "project_url": "https://pypi.org/project/collections-extension/",
    "project_urls": {
      "Homepage": "https://bitbucket.org/bfg-soft/collections_extension",
      "Repository": "https://bitbucket.org/bfg-soft/collections_extension"
    },
    "release_url": "https://pypi.org/project/collections-extension/0.5.0/",
    "requires_dist": [
      "SQLAlchemy (>=1.4.0,<2.0.0); extra == \"sqlalchemy\" or extra == \"marshmallow-sqlalchemy\"",
      "marshmallow-sqlalchemy (>=0.28.1,<0.29.0); extra == \"marshmallow-sqlalchemy\"",
      "marshmallow (>=3.0.0,<4.0.0); extra == \"marshmallow-sqlalchemy\""
    ],
    "requires_python": ">=3.8,<4.0",
    "summary": "Extra core collecions package additionals.",
    "version": "0.5.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14773339,
  "releases": {
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "de604fda79425671c58d1d2f6d43a4b2ff06c7ca97730deae6af5b03e7080527",
          "md5": "c0489ba66daa790d287fe520d07ba69c",
          "sha256": "b94d54f5e20307623af3f688c311eacdd25994598fb84f9d8205af96c14f7756"
        },
        "downloads": -1,
        "filename": "collections_extension-0.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c0489ba66daa790d287fe520d07ba69c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 7840,
        "upload_time": "2022-08-16T06:27:38",
        "upload_time_iso_8601": "2022-08-16T06:27:38.366295Z",
        "url": "https://files.pythonhosted.org/packages/de/60/4fda79425671c58d1d2f6d43a4b2ff06c7ca97730deae6af5b03e7080527/collections_extension-0.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "de604fda79425671c58d1d2f6d43a4b2ff06c7ca97730deae6af5b03e7080527",
        "md5": "c0489ba66daa790d287fe520d07ba69c",
        "sha256": "b94d54f5e20307623af3f688c311eacdd25994598fb84f9d8205af96c14f7756"
      },
      "downloads": -1,
      "filename": "collections_extension-0.5.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c0489ba66daa790d287fe520d07ba69c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<4.0",
      "size": 7840,
      "upload_time": "2022-08-16T06:27:38",
      "upload_time_iso_8601": "2022-08-16T06:27:38.366295Z",
      "url": "https://files.pythonhosted.org/packages/de/60/4fda79425671c58d1d2f6d43a4b2ff06c7ca97730deae6af5b03e7080527/collections_extension-0.5.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}