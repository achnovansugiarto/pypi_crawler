{
  "info": {
    "author": "Guillaume Leclerc",
    "author_email": "leclerc@mit.edu",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# cortx_pytorch\nFast interface between pytorch and Segate CORTX\n\nThis package let you encode and upload a pytorch computer vision dataset (of the shape (image,label)) to CORTX.\n\n## 1: Install\n\n```\npip install cortx_pytorch\n```\n\n## 2: Convert and upload your dataset\n\n```python\nfrom cortx_pytorch import upload_cv_dataset, make_client\nfrom torchvision import datasets\n\nif __name__ == '__main__':\n    # Define the connection settings for our client\n    client = make_client(URL, ACCESS_KEY, SECRET_KEY)\n\n\n    bucket = 'testbucket'  # Bucket where to read/write our ML dataset\n    folder = 'imagenet-val'  # Folder where this particular dataset will be\n\n    # We use a pytorch dataset as a source to prime the content of CORTX\n    # Once we have encoded and uploaded it we don't need it anymore\n    # Here we use a locally available Imagenet dataset\n    ds = ds = datasets.ImageFolder('/scratch/datasets/imagenet-pytorch/val')\n\n    # Packs and upload any computer vision dataset on cortx\n    #\n    # It only needs to be done once !\n    # Image are groupped in objects of size at most `masize` and at most\n    # `maxcount` images. We use `workers` processes to prepare the data\n    # in parallel\n    upload_cv_dataset(ds, client=client, bucket=bucket,\n                      base_folder=folder, maxsize=1e8,\n                      maxcount=100000, workers=30\n```\n\n## 2: Use the dataset like any pytorch dataset\n\n```python\nfimport torch as ch\nfrom tqdm import tqdm\n\nfrom cortx_pytorch import RemoteDataset, make_client\nfrom torchvision import transforms\n\npreproc = transforms.Compose([\n    transforms.RandomResizedCrop(224),\n    transforms.RandomHorizontalFlip(),\n    transforms.ToTensor(),\n])\n        \nif __name__ == '__main__':\n\n    # Define the connection settings for our client\n    client = make_client(URL, ACCESS_KEY, SECRET_KEY)\n\n    bucket = 'testbucket'  # Bucket where to read/write our ML dataset\n    folder = 'imagenet-val'  # Folder where this particular dataset will be\n    \n    # Now that we have created and upload the dataset on CORTX we can use\n    # it in Pytorch\n    dataset = (RemoteDataset(client, bucket, folder)\n        .decode(\"pil\") # Decode the data as PIL images\n        .to_tuple(\"jpg;png\", \"cls\") # Extract images and labels from the dataset\n        .map_tuple(preproc, lambda x: x) # Apply data augmentations\n        .batched(64)  # Make batches of 64 images\n    )\n    # We create a regular pytorch data loader as we would do for regular data sets\n    dataloader = ch.utils.data.DataLoader(dataset, num_workers=3, batch_size=None)\n    for image, label in tqdm((x for x in dataloader), total = 100000 / 60):\n        # Train / evaluate ML models on this batch of data\n        pass\n\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/GuillaumeLeclerc/cortx_pytorch",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cortx-pytorch",
    "package_url": "https://pypi.org/project/cortx-pytorch/",
    "platform": "",
    "project_url": "https://pypi.org/project/cortx-pytorch/",
    "project_urls": {
      "Homepage": "https://github.com/GuillaumeLeclerc/cortx_pytorch"
    },
    "release_url": "https://pypi.org/project/cortx-pytorch/1.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Fast interface between pytorch and Segate CORTX",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10193412,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ab260e22c9d8eb2b7d9d1b2cf28a16c54865f6843f7ef796c69e8f80d17ff6e2",
          "md5": "31ab84096a3361bfef0ae7c95f29000e",
          "sha256": "1d8b498b353792cc7ff59979c93a4fad9d3db9e7e271fa2eff16fc444e33720e"
        },
        "downloads": -1,
        "filename": "cortx_pytorch-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "31ab84096a3361bfef0ae7c95f29000e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1615,
        "upload_time": "2021-04-28T08:07:58",
        "upload_time_iso_8601": "2021-04-28T08:07:58.388622Z",
        "url": "https://files.pythonhosted.org/packages/ab/26/0e22c9d8eb2b7d9d1b2cf28a16c54865f6843f7ef796c69e8f80d17ff6e2/cortx_pytorch-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c5b5d30ff15c739e75273feaf3fbcf69f595171c7c0fb6dcd662cea9c356c548",
          "md5": "090177cfcc96812fe1f7f4ea154b4b8d",
          "sha256": "25e157d357c50caab16da11e41fb91e35f316345dd54299c086ffb8b76d5013a"
        },
        "downloads": -1,
        "filename": "cortx_pytorch-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "090177cfcc96812fe1f7f4ea154b4b8d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3297,
        "upload_time": "2021-04-28T08:20:35",
        "upload_time_iso_8601": "2021-04-28T08:20:35.807583Z",
        "url": "https://files.pythonhosted.org/packages/c5/b5/d30ff15c739e75273feaf3fbcf69f595171c7c0fb6dcd662cea9c356c548/cortx_pytorch-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c5b5d30ff15c739e75273feaf3fbcf69f595171c7c0fb6dcd662cea9c356c548",
        "md5": "090177cfcc96812fe1f7f4ea154b4b8d",
        "sha256": "25e157d357c50caab16da11e41fb91e35f316345dd54299c086ffb8b76d5013a"
      },
      "downloads": -1,
      "filename": "cortx_pytorch-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "090177cfcc96812fe1f7f4ea154b4b8d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3297,
      "upload_time": "2021-04-28T08:20:35",
      "upload_time_iso_8601": "2021-04-28T08:20:35.807583Z",
      "url": "https://files.pythonhosted.org/packages/c5/b5/d30ff15c739e75273feaf3fbcf69f595171c7c0fb6dcd662cea9c356c548/cortx_pytorch-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}