{
  "info": {
    "author": "Slack Technologies, LLC",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython"
    ],
    "description": "# Python-Slack-Discovery-SDK\n\n👋🏼 Welcome to the Python-Slack-Discovery-SDK! This project aims to make using the Slack Discovery APIs easier.\n\n> 🚨 Note: This SDK is only accessible to customer developers with access to the Discovery API (Enterprise accounts) or partners who have been onboarded to the Security and Compliance partner program. To learn more about the Discovery APIs, please [visit our help center](https://slack.com/help/articles/360002079527-A-guide-to-Slacks-Discovery-APIs). 🚨\n\n\n## Prerequisites For Using the SDK\n* Python version 3.6 or greater\n* Latest version of pip\n* A token with discovery scopes (`discovery:read` and or `discovery:write`)\n  > Note: Please see the [OAuth guide](https://api.slack.com/enterprise/discovery/oauth-guide) on how to get this token if you don't already have one.\n\n## Using the SDK\n\nUse pip to install the SDK.\n\n```bash\npip install slack-discovery-sdk\n```\n\nOnce you've installed the SDK, you can use the following import statement \nto use the methods in the SDK. \n\n```python\nfrom slack_discovery_sdk import DiscoveryClient\n```\n\n> Note: use the following command to set your environmental variable to be your token with discovery scopes.\n\n```bash\nexport SLACK_DISCOVERY_SDK_TEST_ENTERPRISE_TOKEN=\"your-discovery-token-goes-here\"\n```\nTo initialize the SDK, you must pass in a token with Discovery Scopes:\n\n```python\nimport os\nenterprise_token = os.environ[\"SLACK_DISCOVERY_SDK_TEST_ENTERPRISE_TOKEN\"]\nclient = DiscoveryClient(token=enterprise_token)\n```\n> Note: Please see the [OAuth guide](https://api.slack.com/enterprise/discovery/oauth-guide) on how to get this token if you don't already have one.\n\nNow, you can use the client to call all of the Slack Discovery SDK methods. \nHere is an example of calling the `discovery.enterprise.info` endpoint, and printing the result to the console:\n\n```python\nenterprise_info = client.discovery_enterprise_info()\nprint(enterprise_info.body)\n```\n\nTo view the full code using the `discovery.enterprise.info` endpoint, please see the sample \n[`app.py` file](https://github.com/slackapi/python-slack-discovery-sdk/blob/main/app.py).\n\nTo view all of the methods offered by the SDK, please see the [client.py file](https://github.com/slackapi/python-slack-discovery-sdk/blob/main/slack_discovery_sdk/client.py).\n\n# 👨🏻‍💻 Understanding the Setup Script 👩🏻‍💻\n\nIn order to speed up the development process, we've provided you with a script called \n`set_env_vars.sh` in the scripts folder to automate a few things needed to run the SDK. \nThe script accomplishes the following things using the following code:\n* Prints your current Python version (**you will need Python version 3.6 or greater for this SDK**) \n  ```bash\n  python3 --version\n  ```\n* Sets your Virtual Environment\n  ```bash\n  python3 -m venv .venv\n  source .venv/bin/activate\n  ```\n* Ensures pip is updated to the latest version\n  ```bash\n  pip install -U pip\n  ```\n* Installs required packages and dependencies\n  ```bash\n  pip install -e \".[testing]\"\n  ```\n\n## 👨🏻‍💻 Adding Env Variables to Setup Script 👩🏻‍💻\n\n🚨 At this point, you'll need to edit the `scripts/set_env_vars.sh` script in an editor of your choice 🚨\n\nEdit the line below, and add in your token with `discovery:read` and `discovery:write` scopes.\n```bash\nexport SLACK_DISCOVERY_SDK_TEST_ENTERPRISE_TOKEN='xoxp-**********'\n```\n\nNow, if you want to run the examples in the `slack_discovery_sdk/examples` directory, you'll need to set \na few other additional environmental variables.  \n\nEdit the lines below, and add in the appropriate tokens:\n\n```bash\n# A normal bot token with many scopes\nexport SLACK_DISCOVERY_SDK_TEST_BOT_TOKEN = \"xoxb-*******\"\n\n# A test workspace ID in the Enterprise Org\n# SLACK_DISCOVERY_SDK_TEST_BOT_TOKEN should have the access to this workspace\nexport SLACK_DISCOVERY_SDK_TEST_TEAM_ID='T0********'\n\n# A test channel ID in the Enterprise Org\nexport SLACK_DISCOVERY_SDK_TEST_CHANNEL_ID='C0******'\n\n# Used for audit logs API (examples/audit_logs_pattern.py)\n# A User Token with auditlogs:read scopes, \nexport SLACK_DISCOVERY_SDK_TEST_USER_AUDIT_TOKEN='xoxp-*************'\n```\n\n🚨 Once you are done adding in your tokens, save the file 🚨\n\n> Note: before you can run this script, you will need to mark the file as executable with the following command:\n```bash\nchmod +x scripts/set_env_vars.sh\n```\n\n## 👩🏻‍💻 Run the Setup Script 👨🏻‍💻\nUse the following command to run the script:\n\n> Note: you must use the `source` command so that the env variables are set properly.\n\n```bash\nsource ./scripts/set_env_vars.sh\n```\n\nIf all went well, you should see the following output:\n```bash\nYour current Python version is: \nPython 3.10.0\nSetting your virtual env.\nSuccess.\nSetting your SLACK_DISCOVERY_SDK_TEST_ENTERPRISE_TOKEN.\nSuccess.\nSetting your SLACK_DISCOVERY_SDK_TEST_BOT_TOKEN (this is needed if you want to run the examples).\nSuccess.\nSetting your SLACK_DISCOVERY_SDK_TEST_TEAM_ID (this is needed if you want to run the examples).\nSuccess.\nSetting your SLACK_DISCOVERY_SDK_TEST_CHANNEL_ID (this is needed if you want to run the examples).\nSuccess.\nSetting your SLACK_DISCOVERY_SDK_TEST_USER_AUDIT_TOKEN (this is needed if you want to run the examples).\nSuccess.\n```\n\n## Running the Examples\nUse the following command to run a script which calls the `discovery.enterprise.info` endpoint. This endpoint returns basic information about the Enterprise Grid org where the app is installed, including all workspaces (teams). \n\n```python\npython3 slack_discovery_sdk/examples/get_enterprise_info.py\n```\n\nYou should see a response similar to the following (note the result below has been truncated for readability):\n\n```python\nDEBUG:slack_discovery_sdk.base_client:Rate limit metrics: DEBUG:slack_discovery_sdk.base_client:Received the following response - status: 200, headers: {'date': 'Wed, 13 Oct 2021 22:09:57 GMT',..., body: {\"ok\":true,\"enterprise\":{\"id\":\"T027****D2R\",\"name\":\"Enterprise-****-Sandbox\",\"domain\":\"test-****\",\"email_domain\":\"\",\"icon\":...,\"image_default\":true},\"is_verified\":false,\"teams\":[{\"id\":\"****\",\"name\":\"Enterprise-****-Sandbox\",\"domain\":\"test-****\",\"email_domain\":\"\",\"icon\":{\"image_102\":\"https:\\/\\/a...avatars-teams\\/ava_0021-88.png\",\"image_default\":true},\"is_verified\":false,\"enterprise_id\":\"E**\",\"is_enterprise\":0,\"created\":1625594757,\"archived\":false,\"deleted\":false,\"discoverable\":\"unlisted\"}]}}\n```\n\nIf you want to run all of the examples at once, you can use the `run_all.sh` script.\n\n> Note: before you can run this script, you will need to mark the file as executable with the following command:\n\n```bash\nchmod +x scripts/run_all.sh\n```\n\nThen, run the script:\n\n```bash\n./scripts/run_all.sh\n```\n\nThis will run all of the examples in the `slack_discovery_sdk/examples` folder, and \nyou should see debug output in your terminal once the script has finished running.\n\nContinue reading below to learn what each example does:\n\n💳 **`DLP_call_pattern.py`** 💳\n* This script involves using the tombstoning capabilities of the Discovery SDK to check for messages that contain sensitive information. If sensitive information is detected by our script (for example a credit card number), the message is tombstoned, and the user is notified that their message is being reviewed.\n* Once you run this script, you should see that one of your \nmessages in the channel which you set in your env variable (SLACK_DISCOVERY_SDK_TEST_CHANNEL_ID) should have been tombstoned. The message should now say `This message is being scanned to make sure it complies with your team’s data security policies.`\n\n🙋🏾‍♀️ **`user_based_eDiscovery_with_edits.py`** 👩🏻‍🏫\n* This script retrieves all of the conversations (channels) and messages a particular user is in. It then outputs those \nconversations to a file, and stores them in the following format: `YYYY/MM/DD/user_id/channel_id/discovery_conversations.json`. If the `has_edits` flag is true \nfor a certain conversation, all edited messages will be found in the `edits` field.\n\n👩🏻‍🏫 **`audit_logs_pattern.py`** 👩🏻‍🏫\n* This script will use the [Audit Logs API](https://api.slack.com/admins/audit-logs) to find all of the\nchannels that a particular user has created. As is the \ncase with the `user_based_eDiscovery` script, it will only\nbe useful if you have a paricular user which you want to see details about. This script will output the channel creation events associated with a particular user_id to in the following format: `YYYY/MM/DD/user_id/audit_logs/public_channel_created.json`.\n\n🙋🏾‍♀️ **`user_based_eDiscovery_pattern.py`** 👩🏻‍🏫\n* This is the same as the `user_based_eDiscovery_with_edits.py` script, except it \ndoesn't capture edits. \n\n## Considerations\nThe SDK and examples are to aid in your development process. Please feel free to use this as a learning exercise, and to build on top of these examples, but the examples shown above are by no means a complete solution. \n\n## Running tests\n\nTo run the unit tests in this repository, creating a Discovery API enabled app is required.\n\n```yaml\n_metadata:\n  major_version: 1\n  minor_version: 1\ndisplay_information:\n  name: discovery-api-test\nfeatures:\n  bot_user:\n    display_name: discovery-api-test\noauth_config:\n  redirect_urls:\n    - https://your-own-domain.ngrok.io/slack/oauth_redirect\n  scopes:\n    user:\n      - discovery:read\n      - discovery:write\n    bot:\n      - channels:manage\n      - channels:read\n      - chat:write\n      - commands\n      - groups:write\n      - im:write\n      - mpim:write\n      - reactions:write\n      - channels:join\n      - files:write\nsettings:\n  org_deploy_enabled: true\n  socket_mode_enabled: false\n  token_rotation_enabled: false\n```\n\nAnd then, setting the bot / user tokens in the env variables as below:\n\n```bash\n# Setup your virtual environment\npython --version  # make sure if you're using Python 3.6+\npython -m venv .venv\nsource .venv/bin/activate\npip install -U pip\npip install -e \".[testing]\"\n\n# Set required env variables\n# 1. An admin user token with discovery:read, discovery:write\nexport SLACK_DISCOVERY_SDK_TEST_ENTERPRISE_TOKEN=xoxp-xxx\n# 2. A normal bot token with many scopes\nexport SLACK_DISCOVERY_SDK_TEST_BOT_TOKEN=xoxb-xxxx\n# 3. A test workspace ID in the Enterprise Org\n#    SLACK_DISCOVERY_SDK_TEST_BOT_TOKEN should have the access to this workspace\nexport SLACK_DISCOVERY_SDK_TEST_TEAM_ID=T1234567890\n# 4. A test channel ID in the Enterprise Org\n#    SLACK_DISCOVERY_SDK_TEST_BOT_TOKEN should have the access to this channel\nexport SLACK_DISCOVERY_SDK_TEST_CHANNEL_ID=C1234567890\npytest tests/\n\n# You can check logs/pytest.log for trouble shooting\n```\n\n## Feedback\n\nFor feedback, please use [this feedback form](https://forms.gle/B2PRF9HQheRgQdo7A). \n\n## Issues and Troubleshooting\nFor issues, please use [this issue form](https://forms.gle/jHS17eYEYAtcXA96A).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "slack-discovery-sdk",
    "package_url": "https://pypi.org/project/slack-discovery-sdk/",
    "platform": "",
    "project_url": "https://pypi.org/project/slack-discovery-sdk/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/slack-discovery-sdk/1.0.1/",
    "requires_dist": [
      "slack-sdk (<4,>=3.11) ; extra == 'testing'",
      "pytest (<7,>=6) ; extra == 'testing'",
      "pytest-cov (<4,>=3) ; extra == 'testing'",
      "black (==21.10b0) ; extra == 'testing'"
    ],
    "requires_python": ">=3.6",
    "summary": "The Slack Discovery API SDK for Python",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11941125,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e4ac54e108bc3ab07bc302918f863d3c1f81e4e850bb4cef1d6c61961345fc62",
          "md5": "a2c9961fe2685b25f5a9b3e18bea5425",
          "sha256": "964ff4a6a9f03da9cc8005fe47fce0c314a586ae891235fc66711194ef0ff7e8"
        },
        "downloads": -1,
        "filename": "slack_discovery_sdk-1.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a2c9961fe2685b25f5a9b3e18bea5425",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 37725,
        "upload_time": "2021-11-04T02:46:13",
        "upload_time_iso_8601": "2021-11-04T02:46:13.909375Z",
        "url": "https://files.pythonhosted.org/packages/e4/ac/54e108bc3ab07bc302918f863d3c1f81e4e850bb4cef1d6c61961345fc62/slack_discovery_sdk-1.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "17e5d8fc570dcc2157fa7a871496ed1b813d0c1d731b3aafd4125d56d6e53413",
          "md5": "0f27fe27abffae10e78db6b196aa125d",
          "sha256": "c11aa6ce384be4a5253ae33808a0a0c5afed8522ef4df90404999b3825c7e6ee"
        },
        "downloads": -1,
        "filename": "slack-discovery-sdk-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0f27fe27abffae10e78db6b196aa125d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 33941,
        "upload_time": "2021-11-04T02:46:15",
        "upload_time_iso_8601": "2021-11-04T02:46:15.943773Z",
        "url": "https://files.pythonhosted.org/packages/17/e5/d8fc570dcc2157fa7a871496ed1b813d0c1d731b3aafd4125d56d6e53413/slack-discovery-sdk-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1dce043af89d18b2f759d2a40b667d6d004dce68e7d7012d8a1b902626eff653",
          "md5": "711706293a24ef329c0cf569b4febde5",
          "sha256": "e0ce6ac148cc584b4b25fb665aefac1185015df576b7afe540f34999dc56a6e7"
        },
        "downloads": -1,
        "filename": "slack_discovery_sdk-1.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "711706293a24ef329c0cf569b4febde5",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 38019,
        "upload_time": "2021-11-05T21:50:28",
        "upload_time_iso_8601": "2021-11-05T21:50:28.393269Z",
        "url": "https://files.pythonhosted.org/packages/1d/ce/043af89d18b2f759d2a40b667d6d004dce68e7d7012d8a1b902626eff653/slack_discovery_sdk-1.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1cd71a856009100edd8c50300476119f3ef1740e3346647341332b4a28d0f884",
          "md5": "28c4fc29991a7d0b9fbf3387869f7199",
          "sha256": "e19823938fe4513748ff6def74b89a54688b1703c86fd9a74ad21000aa4965f5"
        },
        "downloads": -1,
        "filename": "slack-discovery-sdk-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "28c4fc29991a7d0b9fbf3387869f7199",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 34646,
        "upload_time": "2021-11-05T21:50:30",
        "upload_time_iso_8601": "2021-11-05T21:50:30.318888Z",
        "url": "https://files.pythonhosted.org/packages/1c/d7/1a856009100edd8c50300476119f3ef1740e3346647341332b4a28d0f884/slack-discovery-sdk-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1dce043af89d18b2f759d2a40b667d6d004dce68e7d7012d8a1b902626eff653",
        "md5": "711706293a24ef329c0cf569b4febde5",
        "sha256": "e0ce6ac148cc584b4b25fb665aefac1185015df576b7afe540f34999dc56a6e7"
      },
      "downloads": -1,
      "filename": "slack_discovery_sdk-1.0.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "711706293a24ef329c0cf569b4febde5",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.6",
      "size": 38019,
      "upload_time": "2021-11-05T21:50:28",
      "upload_time_iso_8601": "2021-11-05T21:50:28.393269Z",
      "url": "https://files.pythonhosted.org/packages/1d/ce/043af89d18b2f759d2a40b667d6d004dce68e7d7012d8a1b902626eff653/slack_discovery_sdk-1.0.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1cd71a856009100edd8c50300476119f3ef1740e3346647341332b4a28d0f884",
        "md5": "28c4fc29991a7d0b9fbf3387869f7199",
        "sha256": "e19823938fe4513748ff6def74b89a54688b1703c86fd9a74ad21000aa4965f5"
      },
      "downloads": -1,
      "filename": "slack-discovery-sdk-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "28c4fc29991a7d0b9fbf3387869f7199",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 34646,
      "upload_time": "2021-11-05T21:50:30",
      "upload_time_iso_8601": "2021-11-05T21:50:30.318888Z",
      "url": "https://files.pythonhosted.org/packages/1c/d7/1a856009100edd8c50300476119f3ef1740e3346647341332b4a28d0f884/slack-discovery-sdk-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}