{
  "info": {
    "author": "Martin Ortbauer",
    "author_email": "mortbauer@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: End Users/Desktop",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "Developing\n##########\n\nInstall extras::\n\n    python -m pip install .[test] .[lint]\n\n\nTesting\n#######\n\n\nhttps://pypi.org/project/tox-pyenv/\n\nIdeas\n#####\n\nParallel States\n***************\n\nTo model a parallel substate, for example you have a `MenuMachine` and only in\nthe specific menu `SFTPState` it is possible to change the `SFTPState`. The\n`SFTPState` would be a substate which lives indipendently (parallel) from the\nmain `MenuMachine` state, however it can only be changed when being when the\n`MenuMachine` is in the `SFTPMenu` state.\n\nIt could look something like::\n\n    class SFTPMenu(MenuMachine):\n        def enable_sftp(self) -> Prallel(SFTPEnabled):\n            pass\n\n        def disable_sftp(self) -> Prallel(SFTPDisabled):\n            pass\n\ncalling `enable_sftp` or `disable_sftp` would not change the main menu state,\nwhich would still be in `SFTPMenu` but the substate would change.\n\nThe object carrying the state would probably have multiple attribs, like\n`menustate` and `sftpstate`. \n\nAutomatic Transitions\n*********************\n\nI created this module for automatic transitions, it however only works\ntransparently if there is only one transitions to each state, my current\nsolution is::\n\n    class MyState(MyMachine):\n        def transition_which_is_not_normal_path(self):\n            self.state(MyState,NewState)\n\nwhich works but is not transparent, better would be something like::\n\n    class MyState(MyMachine):\n        def transition_which_is_not_normal_path(self) -> NoAutoTrans(NewState):\n            self.state(MyState,NewState)\n\n\nAnd to have an easier auto transition it would be great to maybe set some key\nin the Machine to do auto transitions if possible and then::\n\n    MyState(stateobj)\n\nwould automaticallly transition if it wouldn't be in the correct state.",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mortbauer/taskcontext",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "taskcontext",
    "package_url": "https://pypi.org/project/taskcontext/",
    "platform": "",
    "project_url": "https://pypi.org/project/taskcontext/",
    "project_urls": {
      "Homepage": "https://github.com/mortbauer/taskcontext"
    },
    "release_url": "https://pypi.org/project/taskcontext/0.1.0/",
    "requires_dist": null,
    "requires_python": ">= 3.7",
    "summary": "TaskManager with context resolution",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7719653,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd7eae1d67b130b327a4702d347d5f235b5ae24ec05b0cc48a804d05326a2d0e",
          "md5": "59727f378aee15414eacc18332eaaae2",
          "sha256": "0058e6966bdd571f5fc132209efe93ccb67f999af53401c918a96a7687724a7a"
        },
        "downloads": -1,
        "filename": "taskcontext-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "59727f378aee15414eacc18332eaaae2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">= 3.7",
        "size": 5829,
        "upload_time": "2020-07-17T05:41:30",
        "upload_time_iso_8601": "2020-07-17T05:41:30.913972Z",
        "url": "https://files.pythonhosted.org/packages/bd/7e/ae1d67b130b327a4702d347d5f235b5ae24ec05b0cc48a804d05326a2d0e/taskcontext-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bd7eae1d67b130b327a4702d347d5f235b5ae24ec05b0cc48a804d05326a2d0e",
        "md5": "59727f378aee15414eacc18332eaaae2",
        "sha256": "0058e6966bdd571f5fc132209efe93ccb67f999af53401c918a96a7687724a7a"
      },
      "downloads": -1,
      "filename": "taskcontext-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "59727f378aee15414eacc18332eaaae2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">= 3.7",
      "size": 5829,
      "upload_time": "2020-07-17T05:41:30",
      "upload_time_iso_8601": "2020-07-17T05:41:30.913972Z",
      "url": "https://files.pythonhosted.org/packages/bd/7e/ae1d67b130b327a4702d347d5f235b5ae24ec05b0cc48a804d05326a2d0e/taskcontext-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}