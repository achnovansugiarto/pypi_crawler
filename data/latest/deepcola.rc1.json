{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Scientific/Engineering",
      "Topic :: Software Development"
    ],
    "description": "COLA - Competitive layers for deep learning\n======================================================\n\nCOLA (COmpetitive LAyers) is a Python package providing the implementation of\ngradient-based competitive layers which can be used on top of deep\nlearning models for unsupervised tasks.\n\n\n.. image:: https://github.com/pietrobarbiero/deep-topological-learning/blob/master/deep_dual_figure.png\n    :height: 300px\n\n\nTheory\n--------\nTheoretical foundations can be found in our paper.\n\nIf you find COLA useful in your research, please consider citing the following paper::\n\n    @misc{barbiero2020topological,\n        title={Topological Gradient-based Competitive Learning},\n        author={Pietro Barbiero and Gabriele Ciravegna and Vincenzo Randazzo and Giansalvo Cirrincione},\n        year={2020},\n        eprint={2008.09477},\n        archivePrefix={arXiv},\n        primaryClass={stat.ML}\n    }\n\nExamples\n----------\n\nDual Competitive Layer (DCL)\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. list-table::\n\n    * - .. figure:: https://github.com/pietrobarbiero/deep-topological-learning/blob/master/test/test-results/circles_dynamic_dual.png\n            :height: 200px\n\n      - .. image:: https://github.com/pietrobarbiero/deep-topological-learning/blob/master/test/test-results/circles_scatter_dual.png\n            :height: 200px\n\n\nVanilla Competitive Layer (VCL)\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. list-table::\n\n    * - .. figure:: https://github.com/pietrobarbiero/deep-topological-learning/blob/master/test/test-results/circles_dynamic_vanilla.png\n            :height: 200px\n\n      - .. image:: https://github.com/pietrobarbiero/deep-topological-learning/blob/master/test/test-results/circles_scatter_vanilla.png\n            :height: 200px\n\n\n\nUsing COLA\n---------------\n\n.. code:: python\n\n    from cola import DualModel, plot_confusion_matrix, scatterplot, scatterplot_dynamic\n\n    X, y = ... # load dataset\n\n    # load custom tensorflow layers\n    inputs = Input(shape=(d,), name='input')\n    ...\n    outputs = ...\n\n    # instantiate the dual model\n    n = X.shape[0] # number of samples\n    k = ... # upper bound of the desired number of prototypes\n    model = DualModel(n_samples=n, k_prototypes=k, inputs=inputs, outputs=outputs, deep=False)\n    model.compile(optimizer=optimizer)\n    model.fit(X, y, epochs=epochs)\n\n    # plot prototype dynamics\n    plt.figure()\n    scatterplot_dynamic(X, model.prototypes_, y, valid=True)\n    plt.show()\n\n    # plot confusion matrix\n    # considering the prototypes estimated in the last epoch\n    plt.figure()\n    plot_confusion_matrix(x_pred, model.prototypes[-1], y)\n    plt.show()\n\n    # plot estimated topology\n    # considering the prototypes estimated in the last epoch\n    plt.figure()\n    scatterplot(x_pred, model.prototypes[-1], y, valid=True)\n    plt.show()\n\n\n\nAuthors\n-------\n\n`Pietro Barbiero <http://www.pietrobarbiero.eu/>`__\n\nLicence\n-------\n\nCopyright 2020 Pietro Barbiero.\n\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may\nnot use this file except in compliance with the License. You may obtain\na copy of the License at: http://www.apache.org/licenses/LICENSE-2.0.\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "https://github.com/pietrobarbiero/cola.git",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pietrobarbiero/cola",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "P. Barbiero",
    "maintainer_email": "barbiero@tutanota.com",
    "name": "deepcola",
    "package_url": "https://pypi.org/project/deepcola/",
    "platform": "",
    "project_url": "https://pypi.org/project/deepcola/",
    "project_urls": {
      "Download": "https://github.com/pietrobarbiero/cola.git",
      "Homepage": "https://github.com/pietrobarbiero/cola"
    },
    "release_url": "https://pypi.org/project/deepcola/0.0.0/",
    "requires_dist": [
      "numpy",
      "scikit-learn",
      "tensorflow",
      "tqdm",
      "sphinx ; extra == 'docs'",
      "sphinx-gallery ; extra == 'docs'",
      "sphinx-rtd-theme ; extra == 'docs'",
      "numpydoc ; extra == 'docs'",
      "matplotlib ; extra == 'docs'",
      "pytest ; extra == 'tests'",
      "pytest-cov ; extra == 'tests'"
    ],
    "requires_python": "",
    "summary": "COLA - Competitive layers for deep learning.",
    "version": "0.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8062131,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f7eb397fe1eeef2c425c6d98272efb001454de0f5933355c21d46463a04fa87c",
          "md5": "e08f258f8066a6bb9bda33ef0cc7decf",
          "sha256": "3a6b120d397ccb61fc35c659ce0694ec99e9042d1d89b6da126b5785c84d92dc"
        },
        "downloads": -1,
        "filename": "deepcola-0.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e08f258f8066a6bb9bda33ef0cc7decf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16099,
        "upload_time": "2020-08-28T16:39:53",
        "upload_time_iso_8601": "2020-08-28T16:39:53.189891Z",
        "url": "https://files.pythonhosted.org/packages/f7/eb/397fe1eeef2c425c6d98272efb001454de0f5933355c21d46463a04fa87c/deepcola-0.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "00a792cf586b99fc1d6b8f63fbdacf8f6113b1368dde48d3145a4b3f3e3f0253",
          "md5": "457bdffc8add1bf63cfb9a51bf59bcf3",
          "sha256": "be10bde18d9c2170189889f63e844dcccbde8c28a8f2858adb537bc529af0e01"
        },
        "downloads": -1,
        "filename": "deepcola-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "457bdffc8add1bf63cfb9a51bf59bcf3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13866,
        "upload_time": "2020-08-28T16:39:56",
        "upload_time_iso_8601": "2020-08-28T16:39:56.642939Z",
        "url": "https://files.pythonhosted.org/packages/00/a7/92cf586b99fc1d6b8f63fbdacf8f6113b1368dde48d3145a4b3f3e3f0253/deepcola-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f7eb397fe1eeef2c425c6d98272efb001454de0f5933355c21d46463a04fa87c",
        "md5": "e08f258f8066a6bb9bda33ef0cc7decf",
        "sha256": "3a6b120d397ccb61fc35c659ce0694ec99e9042d1d89b6da126b5785c84d92dc"
      },
      "downloads": -1,
      "filename": "deepcola-0.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e08f258f8066a6bb9bda33ef0cc7decf",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 16099,
      "upload_time": "2020-08-28T16:39:53",
      "upload_time_iso_8601": "2020-08-28T16:39:53.189891Z",
      "url": "https://files.pythonhosted.org/packages/f7/eb/397fe1eeef2c425c6d98272efb001454de0f5933355c21d46463a04fa87c/deepcola-0.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "00a792cf586b99fc1d6b8f63fbdacf8f6113b1368dde48d3145a4b3f3e3f0253",
        "md5": "457bdffc8add1bf63cfb9a51bf59bcf3",
        "sha256": "be10bde18d9c2170189889f63e844dcccbde8c28a8f2858adb537bc529af0e01"
      },
      "downloads": -1,
      "filename": "deepcola-0.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "457bdffc8add1bf63cfb9a51bf59bcf3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13866,
      "upload_time": "2020-08-28T16:39:56",
      "upload_time_iso_8601": "2020-08-28T16:39:56.642939Z",
      "url": "https://files.pythonhosted.org/packages/00/a7/92cf586b99fc1d6b8f63fbdacf8f6113b1368dde48d3145a4b3f3e3f0253/deepcola-0.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}