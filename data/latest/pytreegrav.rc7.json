{
  "info": {
    "author": "Mike Grudic",
    "author_email": "mike.grudich@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Introduction\npytreegrav is a package for computing the gravitational potential and/or field of a set of particles. It includes methods for brute-force direction summation and for the fast, approximate Barnes-Hut treecode method. For the Barnes-Hut method we implement an oct-tree as a numba jitclass to achieve much higher peformance than the equivalent pure Python implementation, without writing a single line of C or Cython.\n\n# Walkthrough\nFirst let's import the stuff we want and generate some particle positions and masses - these would be your particle data for whatever your problem is.\n\n\n```python\nimport numpy as np\nfrom pytreegrav import Accel, Potential\n```\n\n\n```python\nN = 10**5 # number of particles\nx = np.random.rand(N,3) # positions randomly sampled in the unit cube\nm = np.repeat(1./N,N) # masses - let the system have unit mass\nh = np.repeat(0.01,N) # softening radii - these are optional, assumed 0 if not provided to the frontend functions\n```\n\nNow we can use the ``Accel`` and ``Potential`` functions to compute the gravitational field and potential at each particle position:\n\n\n```python\nprint(Accel(x,m,h))\nprint(Potential(x,m,h))\n```\n\n    [[-0.1521787   0.2958852  -0.30109005]\n     [-0.50678204 -0.37489886 -1.0558666 ]\n     [-0.24650087  0.95423467 -0.175074  ]\n     ...\n     [ 0.87868472 -1.28332176 -0.22718531]\n     [-0.41962742  0.32372245 -1.31829084]\n     [ 2.45127054  0.38292881  0.05820412]]\n    [-2.35518057 -2.19299372 -2.28494218 ... -2.11783337 -2.1653377\n     -1.80464695]\n\n\nBy default, pytreegrav will try to make the optimal choice between brute-force and tree methods for speed, but we can also force it to use one method or another. Let's try both and compare their runtimes:\n\n\n```python\nfrom time import time\nt = time()\n# tree gravitational acceleration\naccel_tree = Accel(x,m,h,method='tree')\nprint(\"Tree accel runtime: %gs\"%(time() - t)); t = time()\n\naccel_bruteforce = Accel(x,m,h,method='bruteforce')\nprint(\"Brute force accel runtime: %gs\"%(time() - t)); t = time()\n\nphi_tree = Potential(x,m,h,method='tree')\nprint(\"Tree potential runtime: %gs\"%(time() - t)); t = time()\n\nphi_bruteforce = Potential(x,m,h,method='bruteforce')\nprint(\"Brute force potential runtime: %gs\"%(time() - t)); t = time()\n```\n\n    Tree accel runtime: 0.927745s\n    Brute force accel runtime: 44.1175s\n    Tree potential runtime: 0.802386s\n    Brute force potential runtime: 20.0234s\n\n\nAs you can see, the tree-based methods can be much faster than the brute-force methods, especially for particle counts exceeding 10^4. Here's an example of how much faster the treecode is when run on a Plummer sphere with a variable number of particles, on a single core of an Intel i9 9900k workstation:\n![Benchmark](./CPU_Time_serial.png)\n\n\nBut there's no free lunch here: the tree methods are approximate. Let's quantify the RMS errors of the stuff we just computed, compared to the exact brute-force solutions:\n\n\n```python\nacc_error = np.sqrt(np.mean(np.sum((accel_tree-accel_bruteforce)**2,axis=1))) # RMS force error\nprint(\"RMS force error: \", acc_error)\nphi_error = np.std(phi_tree - phi_bruteforce)\nprint(\"RMS potential error: \", phi_error)\n```\n\n    RMS force error:  0.006739311224338851\n    RMS potential error:  0.0003888328578588027\n\n\nThe above errors are typical for default settings: ~1% force error and ~0.1\\% potential error. The error in the tree approximation is controlled by the Barnes-Hut opening angle ``theta``, set to 0.7 by default. Smaller ``theta`` gives higher accuracy, but also runs slower:\n\n\n```python\nthetas = 0.1,0.2,0.4,0.8 # different thetas to try\nfor theta in thetas:\n    t = time()    \n    accel_tree = Accel(x,m,h,method='tree',theta=theta)\n    acc_error = np.sqrt(np.mean(np.sum((accel_tree-accel_bruteforce)**2,axis=1)))\n    print(\"theta=%g Runtime: %gs RMS force error: %g\"%(theta, time()-t, acc_error))\n```\n\n    theta=0.1 Runtime: 63.1738s RMS force error: 3.78978e-05\n    theta=0.2 Runtime: 14.3356s RMS force error: 0.000258755\n    theta=0.4 Runtime: 2.91292s RMS force error: 0.00148698\n    theta=0.8 Runtime: 0.724668s RMS force error: 0.0105937\n\n\nBoth brute-force and tree-based calculations can be parallelized across all available logical cores via OpenMP, by specifying ``parallel=True``. This can speed things up considerably, with parallel scaling that will vary with your core and particle number:\n\n\n```python\nfrom time import time\nt = time()\n# tree gravitational acceleration\naccel_tree = Accel(x,m,h,method='tree',parallel=True)\nprint(\"Tree accel runtime in parallel: %gs\"%(time() - t)); t = time()\n\naccel_bruteforce = Accel(x,m,h,method='bruteforce',parallel=True)\nprint(\"Brute force accel runtime in parallel: %gs\"%(time() - t)); t = time()\n\nphi_tree = Potential(x,m,h,method='tree',parallel=True)\nprint(\"Tree potential runtime in parallel: %gs\"%(time() - t)); t = time()\n\nphi_bruteforce = Potential(x,m,h,method='bruteforce',parallel=True)\nprint(\"Brute force potential runtime in parallel: %gs\"%(time() - t)); t = time()\n```\n\n    Tree accel runtime in parallel: 0.222271s\n    Brute force accel runtime in parallel: 7.25576s\n    Tree potential runtime in parallel: 0.181393s\n    Brute force potential runtime in parallel: 5.72611s\n\n\n# What if I want to evaluate the fields at different points than where the particles are?\n\nWe got you covered. The ``Target`` methods do exactly this: you specify separate sets of points for the particle positions and the field evaluation, and everything otherwise works exactly the same (including optional parallelization and choice of solver):\n\n\n```python\nfrom pytreegrav import AccelTarget, PotentialTarget\n\n# generate a separate set of \"target\" positions where we want to know the potential and field\nN_target = 10**4\nx_target = np.random.rand(N_target,3)\nh_target = np.repeat(0.01,N_target) # optional \"target\" softening: this sets a floor on the softening length of all forces/potentials computed\n\naccel_tree = AccelTarget(x_target, x,m, h_target=h_target, h_source=h,method='tree') # we provide the points/masses/softenings we generated before as the \"source\" particles\naccel_bruteforce = AccelTarget(x_target,x,m,h_source=h,method='bruteforce')\n\nacc_error = np.sqrt(np.mean(np.sum((accel_tree-accel_bruteforce)**2,axis=1))) # RMS force error\nprint(\"RMS force error: \", acc_error)\n\nphi_tree = PotentialTarget(x_target, x,m, h_target=h_target, h_source=h,method='tree') # we provide the points/masses/softenings we generated before as the \"source\" particles\nphi_bruteforce = PotentialTarget(x_target,x,m,h_target=h_target, h_source=h,method='bruteforce')\n\nphi_error = np.std(phi_tree - phi_bruteforce)\nprint(\"RMS potential error: \", phi_error)\n```\n\n    RMS force error:  0.006719983300560105\n    RMS potential error:  0.0003873676304955059\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pytreegrav",
    "package_url": "https://pypi.org/project/pytreegrav/",
    "platform": "",
    "project_url": "https://pypi.org/project/pytreegrav/",
    "project_urls": {
      "Bug Tracker": "https://github.com/mikegrudic/pytreegrav"
    },
    "release_url": "https://pypi.org/project/pytreegrav/0.27/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Fast approximate gravitational force and potential calculations",
    "version": "0.27",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11035365,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "86a9f23a64d75cda2cad87d59ea78dee97fdb79a30892064669646c6922cae16",
          "md5": "cdf09231fd531174b89e0d3609857b51",
          "sha256": "49fcb731baaaf0ca15e524c8b45f410cc7bfdfbbc30028a91d764e106a41ba56"
        },
        "downloads": -1,
        "filename": "pytreegrav-0.1-py3.7.egg",
        "has_sig": false,
        "md5_digest": "cdf09231fd531174b89e0d3609857b51",
        "packagetype": "bdist_egg",
        "python_version": "0.1",
        "requires_python": ">=3.6",
        "size": 16417,
        "upload_time": "2021-06-09T02:53:04",
        "upload_time_iso_8601": "2021-06-09T02:53:04.171490Z",
        "url": "https://files.pythonhosted.org/packages/86/a9/f23a64d75cda2cad87d59ea78dee97fdb79a30892064669646c6922cae16/pytreegrav-0.1-py3.7.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "926598f8d62f5e4d6bd91555432ace87f891288c7a28bdffaea5a9ef2013d9c6",
          "md5": "35965c02b00c548e298ceca634e64d3b",
          "sha256": "e6405bd5c968cdd64665b4b843ce9db1bd15e6b5fe0a3a9ed093ec708605a97d"
        },
        "downloads": -1,
        "filename": "pytreegrav-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "35965c02b00c548e298ceca634e64d3b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 9141,
        "upload_time": "2021-06-09T02:53:02",
        "upload_time_iso_8601": "2021-06-09T02:53:02.446669Z",
        "url": "https://files.pythonhosted.org/packages/92/65/98f8d62f5e4d6bd91555432ace87f891288c7a28bdffaea5a9ef2013d9c6/pytreegrav-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0299ae269d6f63c29ba88eece3ff4735fd7b5b62bbfdfd03df4308807327f414",
          "md5": "278a5f13f3b57cea4b6b7e5dbdff654e",
          "sha256": "dc6ce35eb7e6848ae13a3976131940ec7097be7e62de43fa8bd47944d54aa33c"
        },
        "downloads": -1,
        "filename": "pytreegrav-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "278a5f13f3b57cea4b6b7e5dbdff654e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11572,
        "upload_time": "2021-06-09T02:53:05",
        "upload_time_iso_8601": "2021-06-09T02:53:05.546761Z",
        "url": "https://files.pythonhosted.org/packages/02/99/ae269d6f63c29ba88eece3ff4735fd7b5b62bbfdfd03df4308807327f414/pytreegrav-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e85adc54c2b14ab152e497f09425f7908f5c8cf73f3e3460465d8daacac7d22d",
          "md5": "8baacc4f147f1cf5e80abf71f88d42ec",
          "sha256": "13b3a28a90c18053b7f346b9f0f5518518c470f6326f93a8441aff182b9a3c23"
        },
        "downloads": -1,
        "filename": "pytreegrav-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8baacc4f147f1cf5e80abf71f88d42ec",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11339,
        "upload_time": "2021-06-21T18:53:51",
        "upload_time_iso_8601": "2021-06-21T18:53:51.928479Z",
        "url": "https://files.pythonhosted.org/packages/e8/5a/dc54c2b14ab152e497f09425f7908f5c8cf73f3e3460465d8daacac7d22d/pytreegrav-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.21": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f5efff6e7e9b5472b8ae52b0ace762acdbe258c310361e8fbdff06b84b5018a",
          "md5": "8da043988e36498939bf0b254e4ffe58",
          "sha256": "b508752244ba496affcfe724009b033138e311edb9be8b2b4305484c51cf769c"
        },
        "downloads": -1,
        "filename": "pytreegrav-0.21-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8da043988e36498939bf0b254e4ffe58",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11367,
        "upload_time": "2021-06-21T18:55:01",
        "upload_time_iso_8601": "2021-06-21T18:55:01.769646Z",
        "url": "https://files.pythonhosted.org/packages/1f/5e/fff6e7e9b5472b8ae52b0ace762acdbe258c310361e8fbdff06b84b5018a/pytreegrav-0.21-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.22": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d40e987b911b66847d06e07341f5b9e08060769b7f405a07a280be37b1cadb0b",
          "md5": "a58b0ff3c9c47df0803df48a4916a682",
          "sha256": "b329844bccf2687630beb2d3405c47222de4cdc5f5c11ac658ea5cf7d9027f40"
        },
        "downloads": -1,
        "filename": "pytreegrav-0.22-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a58b0ff3c9c47df0803df48a4916a682",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11368,
        "upload_time": "2021-06-21T18:56:30",
        "upload_time_iso_8601": "2021-06-21T18:56:30.058814Z",
        "url": "https://files.pythonhosted.org/packages/d4/0e/987b911b66847d06e07341f5b9e08060769b7f405a07a280be37b1cadb0b/pytreegrav-0.22-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c81bc141bd0c3f8db42eca64ec9e30708b0cbcbf02a062b0dd328b0a8b66455b",
          "md5": "5897f9ba9f2fac1e261f502858619269",
          "sha256": "56a6f624066b93bdd3da12915ab9c39adaa81481650d688f42813bcbd7231e68"
        },
        "downloads": -1,
        "filename": "pytreegrav-0.22.tar.gz",
        "has_sig": false,
        "md5_digest": "5897f9ba9f2fac1e261f502858619269",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14103,
        "upload_time": "2021-06-21T18:56:31",
        "upload_time_iso_8601": "2021-06-21T18:56:31.254637Z",
        "url": "https://files.pythonhosted.org/packages/c8/1b/c141bd0c3f8db42eca64ec9e30708b0cbcbf02a062b0dd328b0a8b66455b/pytreegrav-0.22.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.25": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "71c96da3c2509414b1d2f0178ee7a5897dd219373755e201c55194d1350bf626",
          "md5": "01ae4bea9571fe0251d7fd4a78da59d4",
          "sha256": "ba8644372ce3b70733ba7f6abeeeddbf823c139ee7f698bc06c514710412d25d"
        },
        "downloads": -1,
        "filename": "pytreegrav-0.25-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "01ae4bea9571fe0251d7fd4a78da59d4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 20053,
        "upload_time": "2021-07-28T22:26:58",
        "upload_time_iso_8601": "2021-07-28T22:26:58.452033Z",
        "url": "https://files.pythonhosted.org/packages/71/c9/6da3c2509414b1d2f0178ee7a5897dd219373755e201c55194d1350bf626/pytreegrav-0.25-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4c6dd75f28d8e4da5cda888c9df5d028a2468bf72956fbe0b1af07d8d246a280",
          "md5": "afdb968f756a22658a789b9fd24e7c7f",
          "sha256": "7b64c1612e55d6a51e825a8c8b80d13a0358216fbcc61b3edd5330c9819cacfc"
        },
        "downloads": -1,
        "filename": "pytreegrav-0.25.tar.gz",
        "has_sig": false,
        "md5_digest": "afdb968f756a22658a789b9fd24e7c7f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 22345,
        "upload_time": "2021-07-28T22:27:00",
        "upload_time_iso_8601": "2021-07-28T22:27:00.810377Z",
        "url": "https://files.pythonhosted.org/packages/4c/6d/d75f28d8e4da5cda888c9df5d028a2468bf72956fbe0b1af07d8d246a280/pytreegrav-0.25.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.26": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "427832515c97d021c97065965ff963777e29826354797c68fffdae8948feb1a2",
          "md5": "4118b07417e5c21403a6a6493cfe77d1",
          "sha256": "1737615e88d3c562d6f912d0d391a38b4b64f7d020a02d5aa28004c01e8b6bd0"
        },
        "downloads": -1,
        "filename": "pytreegrav-0.26-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4118b07417e5c21403a6a6493cfe77d1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 20628,
        "upload_time": "2021-07-29T04:08:31",
        "upload_time_iso_8601": "2021-07-29T04:08:31.005537Z",
        "url": "https://files.pythonhosted.org/packages/42/78/32515c97d021c97065965ff963777e29826354797c68fffdae8948feb1a2/pytreegrav-0.26-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2d0e9eb6cd22949ad76fe8aef97c39581312d0f427a66c3059894ae811ec4353",
          "md5": "c39f743befd4400e8b312806ab7014b6",
          "sha256": "758bddd2e30bd91f5f03fa397df17fef1c0c9e29accd631fa9f3112c42de1218"
        },
        "downloads": -1,
        "filename": "pytreegrav-0.26.tar.gz",
        "has_sig": false,
        "md5_digest": "c39f743befd4400e8b312806ab7014b6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 22880,
        "upload_time": "2021-07-29T04:08:32",
        "upload_time_iso_8601": "2021-07-29T04:08:32.473949Z",
        "url": "https://files.pythonhosted.org/packages/2d/0e/9eb6cd22949ad76fe8aef97c39581312d0f427a66c3059894ae811ec4353/pytreegrav-0.26.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.27": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9bc35d0ca99b7c177d95632fe16f497fb05a552b3589190bdca742c640aef459",
          "md5": "6bcec5af1b51ce88cc90c67e4f4603b6",
          "sha256": "8a97266fa2f57741cc2c7334e74c0e99fbea64ee96831bfc60211f2063c971cb"
        },
        "downloads": -1,
        "filename": "pytreegrav-0.27-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6bcec5af1b51ce88cc90c67e4f4603b6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 20619,
        "upload_time": "2021-07-29T05:16:32",
        "upload_time_iso_8601": "2021-07-29T05:16:32.248658Z",
        "url": "https://files.pythonhosted.org/packages/9b/c3/5d0ca99b7c177d95632fe16f497fb05a552b3589190bdca742c640aef459/pytreegrav-0.27-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "84a7958f9c671cac1e07acd8a15dd46cc588df7b72f5c29ef43fcf6e720387bf",
          "md5": "994d6ed0fac93b37e89fc0aae531be89",
          "sha256": "ee5d52290527d981f40262d789da82032e189e52c79b490d9d76b946a58d30fb"
        },
        "downloads": -1,
        "filename": "pytreegrav-0.27.tar.gz",
        "has_sig": false,
        "md5_digest": "994d6ed0fac93b37e89fc0aae531be89",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 22881,
        "upload_time": "2021-07-29T05:16:34",
        "upload_time_iso_8601": "2021-07-29T05:16:34.084607Z",
        "url": "https://files.pythonhosted.org/packages/84/a7/958f9c671cac1e07acd8a15dd46cc588df7b72f5c29ef43fcf6e720387bf/pytreegrav-0.27.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9bc35d0ca99b7c177d95632fe16f497fb05a552b3589190bdca742c640aef459",
        "md5": "6bcec5af1b51ce88cc90c67e4f4603b6",
        "sha256": "8a97266fa2f57741cc2c7334e74c0e99fbea64ee96831bfc60211f2063c971cb"
      },
      "downloads": -1,
      "filename": "pytreegrav-0.27-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6bcec5af1b51ce88cc90c67e4f4603b6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 20619,
      "upload_time": "2021-07-29T05:16:32",
      "upload_time_iso_8601": "2021-07-29T05:16:32.248658Z",
      "url": "https://files.pythonhosted.org/packages/9b/c3/5d0ca99b7c177d95632fe16f497fb05a552b3589190bdca742c640aef459/pytreegrav-0.27-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "84a7958f9c671cac1e07acd8a15dd46cc588df7b72f5c29ef43fcf6e720387bf",
        "md5": "994d6ed0fac93b37e89fc0aae531be89",
        "sha256": "ee5d52290527d981f40262d789da82032e189e52c79b490d9d76b946a58d30fb"
      },
      "downloads": -1,
      "filename": "pytreegrav-0.27.tar.gz",
      "has_sig": false,
      "md5_digest": "994d6ed0fac93b37e89fc0aae531be89",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 22881,
      "upload_time": "2021-07-29T05:16:34",
      "upload_time_iso_8601": "2021-07-29T05:16:34.084607Z",
      "url": "https://files.pythonhosted.org/packages/84/a7/958f9c671cac1e07acd8a15dd46cc588df7b72f5c29ef43fcf6e720387bf/pytreegrav-0.27.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}