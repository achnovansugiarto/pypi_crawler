{
  "info": {
    "author": "Davi Sidarta-Oliveira",
    "author_email": "davisidarta@fcm.unicamp.br",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "[![Latest PyPI version](https://img.shields.io/pypi/v/celltometry.svg)](https://pypi.org/project/celltometry/)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n[![Documentation Status](https://readthedocs.org/projects/topometry/badge/?version=latest)](https://topometry.readthedocs.io/en/latest/?badge=latest)\n[![Twitter](https://img.shields.io/twitter/url/https/twitter.com/DaviSidarta.svg?style=social&label=Follow%20%40davisidarta)](https://twitter.com/davisidarta)\n\n# CellTOMetry: single-Cell Topologically Optimized Geometry\n\nCellTOMetry is a python library to\norchestrate topological single-cell data analysis. It is centered around \n[TopOMetry](https://github.com/davisidarta/topometry) and \n[scanpy](https://scanpy.readthedocs.io/en/stable/index.html).\n\n## Installation and dependencies\n\nCellTOMetry requires [scanpy](https://scanpy.readthedocs.io/en/stable/index.html) \nand [TopOMetry](https://github.com/davisidarta/topometry). After installing both,\ninstall celltometry with:\n\n```\npip3 install celltometry\n```\n\n## Using CellTOMetry with scanpy\n\nThis is a quick-start. For further instructions, check [TopOMetry documentation](https://topometry.readthedocs.io/en/latest/pbmc3k.html).\n\nFirst, we load libraries and some data to work with:\n```\nimport scanpy as sc\nimport topo as tp\nimport celltometry as ct\n\n# Load the PBMC3k dataset\nadata = sc.datasets.pbmc3k()\n```\n\nNext, we perform the default preprocessing workflow with scanpy: libraries are size-normalized,\nlog-transformed for variance stabilization, and subset to highly variable genes. \n\n```\n# Normalize and find highly variable genes\nadata = ct.preprocess(adata)\n```\n\nThen, we proceed to the default scanpy workflow. It corresponds to:\n* Scaling data (optional, changes adata.X) - ``\n* Performing PCA \n* Learning a neighborhood graph\n* Learn an UMAP projection with this graph\n* Cluster this graph with the Leiden community detection algorithm\n\nSimilar to preprocessing, we wrap it\nwith an one-liner:\n\n```\nadata = ct.default_workflow(adata, scale=True)\n```\n\nTo run the topological workflow, create a [TopOGraph](https://topometry.readthedocs.io/en/latest/topograph.html#topograph) object `tg` and use it to learn and add information to `AnnData`:\n\n```\nadata = ct.topological_workflow(adata, tg)\n```\n\nFor further instructions, please check [TopOMetry documentation](https://topometry.readthedocs.io/en/latest/index.html).\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/davisidarta/celltometry",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "celltometry",
    "package_url": "https://pypi.org/project/celltometry/",
    "platform": null,
    "project_url": "https://pypi.org/project/celltometry/",
    "project_urls": {
      "Bug Tracker": "https://github.com/davisidarta/celltometry/issues",
      "Homepage": "https://github.com/davisidarta/celltometry"
    },
    "release_url": "https://pypi.org/project/celltometry/0.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Learn single-cell data structure through topological bases, graphs and layouts",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13177706,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bc35e1cf300f0984b3e8991ddb1ac7bed419f561f8bf375b8c05a404d1c4c4ad",
          "md5": "2d70d0fa0043c7ee893385846610d3dd",
          "sha256": "70d39af8a7ab5fbf2797e00a35f15d497214464197e7d9ff8b61c710263bb732"
        },
        "downloads": -1,
        "filename": "celltometry-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2d70d0fa0043c7ee893385846610d3dd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 19630,
        "upload_time": "2022-03-15T04:19:41",
        "upload_time_iso_8601": "2022-03-15T04:19:41.742853Z",
        "url": "https://files.pythonhosted.org/packages/bc/35/e1cf300f0984b3e8991ddb1ac7bed419f561f8bf375b8c05a404d1c4c4ad/celltometry-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "281cb85978e5a7b125c983a4ec38e64fdc153f3b9e5d234091012102af3cd5a6",
          "md5": "c5f2d3c1d381bb563e38f21e7db0ffad",
          "sha256": "5da48c7ec55dbdef041af7b4683c4d768ed16f89acecb77c8b353fd06001b933"
        },
        "downloads": -1,
        "filename": "celltometry-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c5f2d3c1d381bb563e38f21e7db0ffad",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 25101,
        "upload_time": "2022-03-15T04:19:43",
        "upload_time_iso_8601": "2022-03-15T04:19:43.677021Z",
        "url": "https://files.pythonhosted.org/packages/28/1c/b85978e5a7b125c983a4ec38e64fdc153f3b9e5d234091012102af3cd5a6/celltometry-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bc35e1cf300f0984b3e8991ddb1ac7bed419f561f8bf375b8c05a404d1c4c4ad",
        "md5": "2d70d0fa0043c7ee893385846610d3dd",
        "sha256": "70d39af8a7ab5fbf2797e00a35f15d497214464197e7d9ff8b61c710263bb732"
      },
      "downloads": -1,
      "filename": "celltometry-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2d70d0fa0043c7ee893385846610d3dd",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 19630,
      "upload_time": "2022-03-15T04:19:41",
      "upload_time_iso_8601": "2022-03-15T04:19:41.742853Z",
      "url": "https://files.pythonhosted.org/packages/bc/35/e1cf300f0984b3e8991ddb1ac7bed419f561f8bf375b8c05a404d1c4c4ad/celltometry-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "281cb85978e5a7b125c983a4ec38e64fdc153f3b9e5d234091012102af3cd5a6",
        "md5": "c5f2d3c1d381bb563e38f21e7db0ffad",
        "sha256": "5da48c7ec55dbdef041af7b4683c4d768ed16f89acecb77c8b353fd06001b933"
      },
      "downloads": -1,
      "filename": "celltometry-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "c5f2d3c1d381bb563e38f21e7db0ffad",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 25101,
      "upload_time": "2022-03-15T04:19:43",
      "upload_time_iso_8601": "2022-03-15T04:19:43.677021Z",
      "url": "https://files.pythonhosted.org/packages/28/1c/b85978e5a7b125c983a4ec38e64fdc153f3b9e5d234091012102af3cd5a6/celltometry-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}