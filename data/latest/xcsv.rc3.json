{
  "info": {
    "author": "Paul Breen",
    "author_email": "pbree@bas.ac.uk",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# xcsv\n\nxcsv is a package for reading and writing extended CSV files.\n\n## Extended CSV format\n\n* Extended header section of parseable atttributes, introduced by '#'.\n* Header row of variable and units for each column.\n* Data rows.\n\n### Example\n\n#### Extended header section\n\n* No leading/trailing whitespace.\n* Each line introduced by a comment ('#') character.\n* Each line contains a single header item.\n* Key/value separator ': '.\n* Multi-line values naturally continued over to the next lines following the line introducing the key.\n* Continuation lines that contain the delimiter character in the value must be escaped by a leading delimiter.\n* Preferably use a common vocabulary for attribute name, such as [CF conventions](http://cfconventions.org/index.html).\n* Preferably include recommended attributes from [Attribute Convention for Data Discovery (ACDD)](https://wiki.esipfed.org/Attribute_Convention_for_Data_Discovery_1-3).\n* Preferably use units from [Unified Code for Units of Measure](https://ucum.org/ucum.html) and/or [Udunits](https://www.unidata.ucar.edu/software/udunits/).\n* Units in parentheses.\n* Certain special keys are used to [further process the data](#automated-post-processing-of-the-data), for example the `missing_value` key.\n\n```\n# id: 1\n# title: The title\n# summary: This dataset...\n# The second summary paragraph.\n# : The third summary paragraph.  Escaped because it contains the delimiter in a URL https://dummy.domain\n# authors: A B, C D\n# latitude: -73.86 (degree_north)\n# longitude: -65.46 (degree_east)\n# elevation: 1897 (m a.s.l.)\n# [a]: 2012 not a complete year\n```\n\n#### Header row\n\n* No leading/trailing whitespace.\n* Preferably use a common vocabulary for variable name, such as [CF conventions](http://cfconventions.org/index.html).\n* Units in parentheses.\n* Optional notes in square brackets, that reference an item in the extended header section.\n\n```\ntime (year) [a],depth (m)\n```\n\n#### Data row\n\n* No leading/trailing whitespace.\n\n```\n2012,0.575\n```\n\n#### Automated post-processing of the data\n\nDepending on the presence of special keys in the extended header section, these will be used to automatically post-process the data.  To turn off this automatic behaviour, either remove or rename these keys, or set `parse_metadata=False` when reading in the data.\n\n* `missing_value`:  This is used to define those values in the data that are to be considered as missing values.  This is typically a value that is outside the domain of the data such as `-999.99`, or can be a symbolic value such as `NA`.  All such values appearing in the data will be masked, appearing as an `NA` value to pandas (i.e. `pd.isna(value)` returns `True`).  Note that pandas itself will automatically do this for certain values regardless of this key, such as for the strings `NaN` or `NA`, or the constant `None`.\n\n## Install\n\nThe package can be installed from PyPI:\n\n```bash\n$ pip install xcsv\n```\n\n## Using the package\n\nThe package has a general `XCSV` class, that has a `metadata` attribute that holds the parsed contents of the extended file header section and the parsed column headers from the data table, and a `data` attribute that holds the data table (including the column headers as-is).\n\nThe `metadata` attribute is a `dict`, with the following general structure:\n\n```python\n{'header': {}, 'column_headers': {}}\n```\n\nand the `data` attribute is a `pandas.DataFrame`, and so has all the features of the [pandas](https://pandas.pydata.org/docs/index.html) package.\n\nThe package also has a `Reader` class for reading an extended CSV file into an `XCSV` object, and similarly a `Writer` class for writing an `XCSV` object to a file in the extended CSV format.  In addition there is a `File` class that provides a convenient context manager for reading and writing these files.\n\n### Examples\n\n#### Simple read and print\n\nRead in a file and print the contents to `stdout`.  This shows how the contents of the extended CSV file are stored in the `XCSV` object.  Note how multi-line values, such as `summary` here, are stored in a list.  Given the following script called, say, `simple_read.py`:\n\n```python\nimport argparse\n\nimport xcsv\n\nparser = argparse.ArgumentParser()\nparser.add_argument('filename', help='filename.csv')\nargs = parser.parse_args()\n\nwith xcsv.File(args.filename) as f:\n    content = f.read()\n    print(content.metadata)\n    print(content.data)\n```\n\nRunning it would produce:\n\n```bash\n$ python3 simple_read.py example.csv\n{'header': {'id': '1', 'title': 'The title', 'summary': ['This dataset...', 'The second summary paragraph.', 'The third summary paragraph.  Escaped because it contains the delimiter in a URL https://dummy.domain'], 'authors': 'A B, C D', 'latitude': {'value': '-73.86', 'units': 'degree_north'}, 'longitude': {'value': '-65.46', 'units': 'degree_east'}, 'elevation': {'value': '1897', 'units': 'm a.s.l.'}, '[a]': '2012 not a complete year'}, 'column_headers': {'time (year) [a]': {'name': 'time', 'units': 'year', 'notes': 'a'}, 'depth (m)': {'name': 'depth', 'units': 'm', 'notes': None}}}\n   time (year) [a]  depth (m)\n0             2012      0.575\n1             2011      1.125\n2             2010      2.225\n```\n\n#### Simple read and print with missing values\n\nIf the above example header section included the following:\n\n```\n# missing_value: -999.99\n```\n\nand the data section looked like:\n\n```\ntime (year) [a],depth (m)\n2012,0.575\n2011,1.125\n2010,2.225\n2009,-999\n2008,999\n2007,-999.99\n2006,999.99\n2005,NA\n2004,NaN\n```\n\nRunning it would produce:\n\n```bash\n$ python3 simple_read.py missing_example.csv\n{'header': {'id': '1', 'title': 'The title', 'summary': ['This dataset...', 'The second summary paragraph.', 'The third summary paragraph.  Escaped because it contains the delimiter in a URL https://dummy.domain'], 'authors': 'A B, C D', 'latitude': {'value': '-73.86', 'units': 'degree_north'}, 'longitude': {'value': '-65.46', 'units': 'degree_east'}, 'elevation': {'value': '1897', 'units': 'm a.s.l.'}, 'missing_value': '-999.99', '[a]': '2012 not a complete year'}, 'column_headers': {'time (year) [a]': {'name': 'time', 'units': 'year', 'notes': 'a'}, 'depth (m)': {'name': 'depth', 'units': 'm', 'notes': None}}}\n   time (year) [a]  depth (m)\n0             2012      0.575\n1             2011      1.125\n2             2010      2.225\n3             2009   -999.000\n4             2008    999.000\n5             2007        NaN\n6             2006    999.990\n7             2005        NaN\n8             2004        NaN\n```\n\nNote that the `-999.99` value has been automatically masked as a missing value (shown as `NaN` in the printed pandas `DataFrame`), as well as the `NA` and `NaN` strings in the original data, which pandas automatically masks itself, irrespective of the `missing_value` header item.\n\n#### Simple read and plot\n\nRead a file and plot the data:\n\n```python\nimport argparse\n\nimport matplotlib.pyplot as plt\n\nimport xcsv\n\nparser = argparse.ArgumentParser()\nparser.add_argument('filename', help='filename.csv')\nargs = parser.parse_args()\n\nwith xcsv.File(args.filename) as f:\n    content = f.read()\n    content.data.plot(x='depth (m)', y='time (year) [a]')\n    plt.show()\n```\n\n#### Simple read and write\n\nRead a file in, manipulate the data in some way, and write this modified `XCSV` object out to a new file:\n\n```python\nimport argparse\n\nimport xcsv\n\nparser = argparse.ArgumentParser()\nparser.add_argument('in_filename', help='in_filename.csv')\nparser.add_argument('out_filename', help='out_filename.csv')\nargs = parser.parse_args()\n\nwith xcsv.File(args.in_filename) as f:\n    content = f.read()\n\n# Manipulate the data...\n\nwith xcsv.File(args.out_filename, mode='w') as f:\n    f.write(xcsv=content)\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/paul-breen/xcsv",
    "keywords": "",
    "license": "Apache-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "xcsv",
    "package_url": "https://pypi.org/project/xcsv/",
    "platform": null,
    "project_url": "https://pypi.org/project/xcsv/",
    "project_urls": {
      "Documentation": "https://github.com/paul-breen/xcsv/blob/main/README.md",
      "Homepage": "https://github.com/paul-breen/xcsv",
      "Repository": "https://github.com/paul-breen/xcsv"
    },
    "release_url": "https://pypi.org/project/xcsv/0.3.0/",
    "requires_dist": [
      "pandas (>=1.4.2,<2.0.0)"
    ],
    "requires_python": ">=3.8,<4.0",
    "summary": "Package for working with extended CSV (XCSV) files",
    "version": "0.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16437561,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f9151086c229f99cd3e516693c543b6e281a61d7ad72310f67b470c9f03b8d52",
          "md5": "c41f6c3464c7d1bacb81e830c0f93d45",
          "sha256": "0f91a7ebb32e4fc3e29d071c046b2113c290230a0e65861d5b72e97c7c15a557"
        },
        "downloads": -1,
        "filename": "xcsv-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c41f6c3464c7d1bacb81e830c0f93d45",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 10172,
        "upload_time": "2022-04-18T23:27:32",
        "upload_time_iso_8601": "2022-04-18T23:27:32.839244Z",
        "url": "https://files.pythonhosted.org/packages/f9/15/1086c229f99cd3e516693c543b6e281a61d7ad72310f67b470c9f03b8d52/xcsv-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "adbfcfaf377b01f1ba6d66133eac5526cc517ad8da471ea20e64a2491c7e28ea",
          "md5": "53fd2327089c27d29712e0a9d7903807",
          "sha256": "7b799092fdff67adfa9682403d85dfcf4a93b34f705c1f47e5e03ad5dd564aee"
        },
        "downloads": -1,
        "filename": "xcsv-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "53fd2327089c27d29712e0a9d7903807",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 10549,
        "upload_time": "2022-04-18T23:27:34",
        "upload_time_iso_8601": "2022-04-18T23:27:34.547915Z",
        "url": "https://files.pythonhosted.org/packages/ad/bf/cfaf377b01f1ba6d66133eac5526cc517ad8da471ea20e64a2491c7e28ea/xcsv-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f2f6939b402120b57726722a96fbb63d6114019867851bb896f7973ff097488",
          "md5": "269019443c1c2d8eceddb3a05a7738ce",
          "sha256": "ccbaa48a2528f98477f9e687bbb42fbdca12d79e925a15aadd1084c7794386dc"
        },
        "downloads": -1,
        "filename": "xcsv-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "269019443c1c2d8eceddb3a05a7738ce",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 11116,
        "upload_time": "2022-05-14T17:16:38",
        "upload_time_iso_8601": "2022-05-14T17:16:38.766460Z",
        "url": "https://files.pythonhosted.org/packages/5f/2f/6939b402120b57726722a96fbb63d6114019867851bb896f7973ff097488/xcsv-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9ff7589e3326dc0201ffea6167b4c9ef64baa0f258abc149dc4a0cb138f6b727",
          "md5": "11e120e74d5656c40c7d48cdfc5e8c44",
          "sha256": "af76190f91f9bdd6cac7cb4f4117cc58ae78360d8764e836c42f934e7bf935d8"
        },
        "downloads": -1,
        "filename": "xcsv-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "11e120e74d5656c40c7d48cdfc5e8c44",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 11472,
        "upload_time": "2022-05-14T17:16:40",
        "upload_time_iso_8601": "2022-05-14T17:16:40.691546Z",
        "url": "https://files.pythonhosted.org/packages/9f/f7/589e3326dc0201ffea6167b4c9ef64baa0f258abc149dc4a0cb138f6b727/xcsv-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8001f886bd732e6dd1209717beddda17cd9edd6c4a21f0e178d4c017876bc90c",
          "md5": "2d9a3ef7adc502c5ba6b8cde97d4d6f2",
          "sha256": "c80a7ad0b3de2642c0297b6118620fd5aa4d9ef821c9a4502186dd1be4b805f5"
        },
        "downloads": -1,
        "filename": "xcsv-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2d9a3ef7adc502c5ba6b8cde97d4d6f2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 12313,
        "upload_time": "2023-01-15T19:35:23",
        "upload_time_iso_8601": "2023-01-15T19:35:23.200312Z",
        "url": "https://files.pythonhosted.org/packages/80/01/f886bd732e6dd1209717beddda17cd9edd6c4a21f0e178d4c017876bc90c/xcsv-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "db983fece7a558a6217d359e920d2f7194782a7cc8fee4b82c12ea89c61d260f",
          "md5": "2dd05769a28a9ce66de568c8619678c1",
          "sha256": "ac66f3f403b139031f91d0244b466a824e1cad28be4fb7f2433dc2eb76126762"
        },
        "downloads": -1,
        "filename": "xcsv-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2dd05769a28a9ce66de568c8619678c1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 14301,
        "upload_time": "2023-01-15T19:35:24",
        "upload_time_iso_8601": "2023-01-15T19:35:24.412648Z",
        "url": "https://files.pythonhosted.org/packages/db/98/3fece7a558a6217d359e920d2f7194782a7cc8fee4b82c12ea89c61d260f/xcsv-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8001f886bd732e6dd1209717beddda17cd9edd6c4a21f0e178d4c017876bc90c",
        "md5": "2d9a3ef7adc502c5ba6b8cde97d4d6f2",
        "sha256": "c80a7ad0b3de2642c0297b6118620fd5aa4d9ef821c9a4502186dd1be4b805f5"
      },
      "downloads": -1,
      "filename": "xcsv-0.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2d9a3ef7adc502c5ba6b8cde97d4d6f2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<4.0",
      "size": 12313,
      "upload_time": "2023-01-15T19:35:23",
      "upload_time_iso_8601": "2023-01-15T19:35:23.200312Z",
      "url": "https://files.pythonhosted.org/packages/80/01/f886bd732e6dd1209717beddda17cd9edd6c4a21f0e178d4c017876bc90c/xcsv-0.3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "db983fece7a558a6217d359e920d2f7194782a7cc8fee4b82c12ea89c61d260f",
        "md5": "2dd05769a28a9ce66de568c8619678c1",
        "sha256": "ac66f3f403b139031f91d0244b466a824e1cad28be4fb7f2433dc2eb76126762"
      },
      "downloads": -1,
      "filename": "xcsv-0.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "2dd05769a28a9ce66de568c8619678c1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<4.0",
      "size": 14301,
      "upload_time": "2023-01-15T19:35:24",
      "upload_time_iso_8601": "2023-01-15T19:35:24.412648Z",
      "url": "https://files.pythonhosted.org/packages/db/98/3fece7a558a6217d359e920d2f7194782a7cc8fee4b82c12ea89c61d260f/xcsv-0.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}