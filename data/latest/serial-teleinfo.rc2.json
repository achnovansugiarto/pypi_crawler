{
  "info": {
    "author": "Ugo MÃ©da",
    "author_email": "meda.ugo@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Serial Teleinfo\n\nThis project provides Python utilities to access data from Enedis energy meters using a serial converter :\n\n- `serial_teleinfo` provides the classes to read and parse data\n- `serial_teleinfo.server` is a simple web-server to access live readings through a JSON api\n\nYou will need a serial adapter such as the [Micro Teleinfo](https://www.tindie.com/products/hallard/micro-teleinfo-v20/)\nto use this package.\n\n## Running the server\n\nThe web server exposes a JSON API providing live data read from the energy meter :\n\n```json\n{\n   \"connected\":true,\n   \"ready\":true,\n   \"values\":{\n      \"ISOUSC\": [30, \"A\"],\n      \"BASE\": [804220, \"Wh\"],\n      \"PTEC\": [\"TH\", null],\n      \"IINST\": [1, \"A\"],\n      \"IMAX\": [90, \"A\"],\n      \"PAPP\": [340, \"VA\"],\n      \"HHPHC\": [\"A\", null],\n      \"MOTDETAT\": [\"000000\", null],\n      \"ADCO\": [\"012345678901\", null],\n      \"OPTARIF\": [\"BASE\", null]\n   }\n}\n```\n\n### Configuration file\n\nThe configuration is as follows :\n\n```ini\n[teleinfo]\ndevice=/dev/ttyUSB0\nloglevel=INFO\n\n[http]\nlisten=127.0.0.1:8000\n\n[users]\napiuser=apipassword\n```\n\n- `teleinfo/device` : The path to the serial port.\n- `teleinfo/loglevel` *(optionnal)* : Modifies the log verbosity, it can be `DEBUG`, `INFO`, `WARNING`, `ERROR`. Default is `INFO`.\n- `http/listen` : The host and port to listen to.\n- `users` : A list of user/password allowed to use the API (using basic authentification).\n\n### Using python\n\nInstall the package :\n\n```bash\npip install serial-teleinfo[server]\n```\n\nCreate a configuration file `teleinfo.ini` as described above and run the command :\n\n```bash\npython -m serial_teleinfo.server teleinfo.ini\n```\n\nOnce the server is running, you can access the values at [http://apiuser:apipassword@localhost:8000/status.json](http://apiuser:apipassword@localhost:8000/status.json).\n\n### Using Docker\n\nA docker image is provided, here's an example `docker-compose.yml` :\n\n```yaml\nversion: '3'\nservices:\n  teleinfo:\n    image: ugomeda/serial-teleinfo\n    restart: always\n    devices:\n      - /dev/ttyUSB0\n    environment:\n      HTTP_LISTEN: \"0.0.0.0:7777\"\n      USERS_PASSWORD: \"Str0ngPa55w0rd!\"\n      TELEINFO_LOGLEVEL: \"DEBUG\"\n    ports:\n      - \"7777:7777\"\n```\n\nYou can access the values at [http://apiuser:Str0ngPa55w0rd!@SERVERIP:7777/status.json](http://apiuser:Str0ngPa55w0rd!@SERVERIP:7777/status.json).\n\nThe environment variables are :\n\n| Variable          | Default value |\n|-------------------|---------------|\n| TELEINFO_DEVICE   | /dev/ttyUSB0  |\n| TELEINFO_LOGLEVEL | INFO          |\n| HTTP_LISTEN       | 0.0.0.0:8000  |\n| USERS_USER        | apiuser       |\n| USERS_PASSWORD    | apipassword   |\n\n\n## Using the library\n\nInstall the package :\n\n```bash\npip install serial-teleinfo\n```\n\n### serial_teleinfo.Client\n\nThis class provides direct access to the values read on the serial port.\n\nHere's an example usage :\n\n```python\nimport serial\nfrom serial_teleinfo import Client, TeleinfoException\n\ntry:\n    with Client(\"/dev/ttyUSB0\") as client:\n        while True:\n            print(client.read_value())\nexcept TeleinfoException as e:\n    print(e)\nexcept serial.SerialException as e:\n    print(e)\n```\n\nYou can also refer to the `serial_teleinfo.ValueUpdater` implementation.\n\n### serial_teleinfo.ValueUpdater\n\nThis utility class manages a background thread to update values indefinitely.\nIt will automatically handle reconnection to the serial port and ignore temporary errors or\nreccuring unknown keys.\n\nIt provides 3 main properties :\n\n- `values` : A dictionary with all the values\n- `connected` : True if the client is connected to the meter\n- `ready` : True if all the values are available\n\nYou can also override the `update_value` method to access the read values as they are read.\n\nHeres an example usage :\n\n```python\nimport time\nfrom serial_teleinfo import ValueUpdater\n\n\nclass MyValueUpdater(ValueUpdater):\n    def update_value(self, value):\n        print(f\"Updated {value.key}\")\n\n        super().update_value(value)\n\n\nupdater = MyValueUpdater(\"/dev/ttyUSB0\")\nupdater.start()\n\ntry:\n    while True:\n        print(f\"Connected : {updater.connected}\")\n        print(f\"Ready : {updater.ready}\")\n        for value in updater.values.values():\n            print(value)\n\n        time.sleep(2)\nfinally:\n    updater.stop()\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ugomeda/serial-teleinfo",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "serial-teleinfo",
    "package_url": "https://pypi.org/project/serial-teleinfo/",
    "platform": "",
    "project_url": "https://pypi.org/project/serial-teleinfo/",
    "project_urls": {
      "Homepage": "https://github.com/ugomeda/serial-teleinfo"
    },
    "release_url": "https://pypi.org/project/serial-teleinfo/1.0.1/",
    "requires_dist": [
      "pyserial",
      "aiohttp ; extra == 'server'",
      "http-basic-auth ; extra == 'server'"
    ],
    "requires_python": ">=3.7",
    "summary": "Utilities to connect to a Teleinformation serial device",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7160393,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ffa813809823c00882a5891d4af695252c80cc57be35bb67449af5d7d893bfc7",
          "md5": "ef67c616c13aecf29f40d0f8a7668713",
          "sha256": "814aa5ac13907823b464d76ce1ad53d9b20448cc25fbe86b137fc4e9447771ee"
        },
        "downloads": -1,
        "filename": "serial_teleinfo-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ef67c616c13aecf29f40d0f8a7668713",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 10975,
        "upload_time": "2020-05-03T16:43:02",
        "upload_time_iso_8601": "2020-05-03T16:43:02.202274Z",
        "url": "https://files.pythonhosted.org/packages/ff/a8/13809823c00882a5891d4af695252c80cc57be35bb67449af5d7d893bfc7/serial_teleinfo-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "67aaae61d448cf203060ea9d7b34269f7b90f98a634271468eccaf4eac6bcfc9",
          "md5": "673d10a8bfb2b1e9c42360cd99f8f7a9",
          "sha256": "34d6e34960eacb9d54fdf24aab9f43238c7764688297ea4d10ac9561ecc3bf43"
        },
        "downloads": -1,
        "filename": "serial-teleinfo-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "673d10a8bfb2b1e9c42360cd99f8f7a9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 8543,
        "upload_time": "2020-05-03T16:43:04",
        "upload_time_iso_8601": "2020-05-03T16:43:04.527945Z",
        "url": "https://files.pythonhosted.org/packages/67/aa/ae61d448cf203060ea9d7b34269f7b90f98a634271468eccaf4eac6bcfc9/serial-teleinfo-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f81b0e679172057e589fadc88074e63c385bd8d15467be4d1a60faff2ed32764",
          "md5": "b54330a52a776b220dcdde9e1f398d2a",
          "sha256": "e4de1da74878a22062385aa40b11064a733cb874fd604629305c3474ea2a2e2a"
        },
        "downloads": -1,
        "filename": "serial_teleinfo-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b54330a52a776b220dcdde9e1f398d2a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 11155,
        "upload_time": "2020-05-03T23:34:36",
        "upload_time_iso_8601": "2020-05-03T23:34:36.340112Z",
        "url": "https://files.pythonhosted.org/packages/f8/1b/0e679172057e589fadc88074e63c385bd8d15467be4d1a60faff2ed32764/serial_teleinfo-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "14fbd6c9b17531ff1f63aea3d3973f45b4bd2102e1a72572436223e30cd0b63f",
          "md5": "448215b4f6928999eb98df5a050406f6",
          "sha256": "ce100cc4454bf55a18ae2e53aa83913b58c52eddb9f9d76dc83bd53c5b78c38f"
        },
        "downloads": -1,
        "filename": "serial-teleinfo-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "448215b4f6928999eb98df5a050406f6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 8805,
        "upload_time": "2020-05-03T23:34:37",
        "upload_time_iso_8601": "2020-05-03T23:34:37.514931Z",
        "url": "https://files.pythonhosted.org/packages/14/fb/d6c9b17531ff1f63aea3d3973f45b4bd2102e1a72572436223e30cd0b63f/serial-teleinfo-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f81b0e679172057e589fadc88074e63c385bd8d15467be4d1a60faff2ed32764",
        "md5": "b54330a52a776b220dcdde9e1f398d2a",
        "sha256": "e4de1da74878a22062385aa40b11064a733cb874fd604629305c3474ea2a2e2a"
      },
      "downloads": -1,
      "filename": "serial_teleinfo-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b54330a52a776b220dcdde9e1f398d2a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 11155,
      "upload_time": "2020-05-03T23:34:36",
      "upload_time_iso_8601": "2020-05-03T23:34:36.340112Z",
      "url": "https://files.pythonhosted.org/packages/f8/1b/0e679172057e589fadc88074e63c385bd8d15467be4d1a60faff2ed32764/serial_teleinfo-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "14fbd6c9b17531ff1f63aea3d3973f45b4bd2102e1a72572436223e30cd0b63f",
        "md5": "448215b4f6928999eb98df5a050406f6",
        "sha256": "ce100cc4454bf55a18ae2e53aa83913b58c52eddb9f9d76dc83bd53c5b78c38f"
      },
      "downloads": -1,
      "filename": "serial-teleinfo-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "448215b4f6928999eb98df5a050406f6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 8805,
      "upload_time": "2020-05-03T23:34:37",
      "upload_time_iso_8601": "2020-05-03T23:34:37.514931Z",
      "url": "https://files.pythonhosted.org/packages/14/fb/d6c9b17531ff1f63aea3d3973f45b4bd2102e1a72572436223e30cd0b63f/serial-teleinfo-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}