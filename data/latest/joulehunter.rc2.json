{
  "info": {
    "author": "chakib belgaid",
    "author_email": "chakib.belgaid@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: POSIX",
      "Topic :: Software Development :: Debuggers",
      "Topic :: Software Development :: Testing"
    ],
    "description": "joulehunter \n=========== \n[![Unit tests](https://github.com/powerapi-ng/joulehunter/actions/workflows/test.yaml/badge.svg)](https://github.com/powerapi-ng/joulehunter/actions/workflows/test.yaml)\n[![PyPI version](https://badge.fury.io/py/joulehunter.svg)](https://badge.fury.io/py/joulehunter)\n![screenshot](https://user-images.githubusercontent.com/11022568/134655797-3872379e-0e4e-48d6-a771-6a94c756fa67.png)\n\nJoulehunter helps you find what part of your code is consuming considerable amounts of energy.\n\nThis repo is still a work in progress. ðŸ˜„\n\nCompatibility\n------------\n\nJoulehunter runs on **Linux** machines with **Intel RAPL** support. This technology has been available since the Sandy Bridge generation.\n\n\nInstallation\n------------\n\nYou can install joulehunter with pip: ```pip install joulehunter```.\n\nYou can also clone the repo and install it directly:\n\n     git clone https://github.com/powerapi-ng/joulehunter.git\n     cd joulehunter\n     python setup.py install\n\nUsage\n------------\n\nJoulehunter works similarly to [pyinstrument](https://github.com/joerick/pyinstrument), as we forked the repo and replaced time measuring with energy measuring. Here's [pyinstrument's documentation](https://pyinstrument.readthedocs.io/). Whenever ```pyinstrument``` is present in a variable name, it should be replaced with ```joulehunter``` (for example, ```PYINSTRUMENT_PROFILE_DIR``` turns into ```JOULEHUNTER_PROFILE_DIR```).\n\n### Command line\n\n```joulehunter -l``` will list the available domains on this machine. These include the packages and their components, such as the DRAM and core.\n\nThe command ```joulehunter main.py``` will execute ```main.py``` and measure the energy consumption of the first package (CPU).\n\nTo select the package to analyze use the option ```-p``` or ```--package``` followed by the package number or the package name. The default value is 0.\n\nThe options ```-c``` and ```--component``` allow you to measure the energy of an individual component by specifying their name or ID. If not specified, the entire package will be selected.\n\n\n#### Example\n\nExecuting ```joulehunter -l``` could output this:\n    \n    [0] package-0\n      [0] core\n      [1] uncore\n      [2] dram\n    [1] package-1\n      [0] core\n      [1] uncore\n      [2] dram\n\nIf we run ```joulehunter -p package-1 -c 2 my_file.py```, joulehunter will execute ```my_file.py``` and measure the energy consumption of package-1's DRAM.\n\n### Profiling chunks of code\n\nAs [pyinstrument's documentation](https://pyinstrument.readthedocs.io/en/latest/guide.html#profile-a-specific-chunk-of-code) shows, it's also possible to profile specific chunks of code.\n\nJoulehunter's Profiler class can receive two additional arguments: ```package``` and ```component```. They receive the ID (as a string or integer) or name of the desired package/component. If ```package``` is not specified, ```package-0``` will be used. If ```component``` is ```None```, the entire package will be analyzed.\n\n### Profiling web requests in Flask\n\nPlease refer to [pyinstrument's documentation](https://pyinstrument.readthedocs.io/en/latest/guide.html#profile-a-web-request-in-flask) for instructions on how to profile web requests in Flask. As in the previous case, joulehunter's ```Profiler()``` accepts two additional arguments.\n\n### Profiling web requests in Django\n\nProfiling web requests in Django as explained in [pyinstrument's documentation](https://pyinstrument.readthedocs.io/en/latest/guide.html#profile-a-web-request-in-django) selects package 0 as the default domain (don't forget to rename the ```pyinstrument``` in variable names with ```joulehunter```).\n\nThe user can choose a particular package and component as follows:\n\n**Query component**: The query strings ```package``` and ```component``` are used to select the desired package and component. For example, including ```?profiler&package=0&component=dram``` at the end of a request URL will select the first package and the DRAM. If the component query component is present but empty, the package will be analyzed.\n\n\n**Variable in ```settings.py```:** The user's selection can also be defined in ```settings.py``` with the ```JOULEHUNTER_PACKAGE``` and ```JOULEHUNTER_COMPONENT``` variables. These are later passed to ```Package()```.\n\nIf the package or component is defined both as a query component and in ```settings.py```, the one defined as a query component will be selected.\n\n\nRead permission\n---------------\n\nDue to a [security vulnerability](https://platypusattack.com), only root has read permission for the energy files. In order to circumvent this, run the script as root or grant read permissions for the following files:\n\n    /sys/devices/virtual/powercap/intel-rapl/intel-rapl:*/energy_uj\n    /sys/devices/virtual/powercap/intel-rapl/intel-rapl:*/intel-rapl:*:*/energy_uj\n    \nMore info [here](https://github.com/powerapi-ng/pyJoules/issues/13).\n\nAcknowledgments\n------------\n\nThanks to [Joe Rickerby](https://github.com/joerick) and all of [pyinstrument](https://github.com/joerick/pyinstrument)'s contributors.\n\nThis fork is being developed by [Chakib Belgaid](https://github.com/chakib-belgaid) and [Alex Kaminetzky](https://github.com/akaminetzkyp). Feel free to ask us any questions!",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/powerapi-ng/joulehunter",
    "keywords": "profiling,profile,profiler,energy,cpu,time,sampling",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "joulehunter",
    "package_url": "https://pypi.org/project/joulehunter/",
    "platform": null,
    "project_url": "https://pypi.org/project/joulehunter/",
    "project_urls": {
      "Bug Tracker": "https://github.com/powerapi-ng/joulehunter/issues",
      "Homepage": "https://github.com/powerapi-ng/joulehunter"
    },
    "release_url": "https://pypi.org/project/joulehunter/1.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "detect where your code consumes energy the most so you can optimize those functions",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15629846,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6ce7d70c52671e7817fcf721056c8a3b245e1c8972e04200b8608c027eb6349",
          "md5": "9417d695a6756a3a8dfc3b786e8bb9d9",
          "sha256": "f3c1c33644fcb8e68c5523dccdd2470203abaec97f142e5efacdca2f0ba481fd"
        },
        "downloads": -1,
        "filename": "joulehunter-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9417d695a6756a3a8dfc3b786e8bb9d9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 355144,
        "upload_time": "2021-10-03T23:49:36",
        "upload_time_iso_8601": "2021-10-03T23:49:36.916741Z",
        "url": "https://files.pythonhosted.org/packages/a6/ce/7d70c52671e7817fcf721056c8a3b245e1c8972e04200b8608c027eb6349/joulehunter-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9d99072046ec515a9850dfa935b096ad1f11282ccf50e66f9ea6464c2e463701",
          "md5": "1cbdb7bbcd921315c0fd73f3b093e9d0",
          "sha256": "5dc3ec4dc8a9fa90030b23254ef5ea8987c424cca2d1e3988202c2682d27ad67"
        },
        "downloads": -1,
        "filename": "joulehunter-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "1cbdb7bbcd921315c0fd73f3b093e9d0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 357217,
        "upload_time": "2022-11-02T17:02:57",
        "upload_time_iso_8601": "2022-11-02T17:02:57.612434Z",
        "url": "https://files.pythonhosted.org/packages/9d/99/072046ec515a9850dfa935b096ad1f11282ccf50e66f9ea6464c2e463701/joulehunter-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9d99072046ec515a9850dfa935b096ad1f11282ccf50e66f9ea6464c2e463701",
        "md5": "1cbdb7bbcd921315c0fd73f3b093e9d0",
        "sha256": "5dc3ec4dc8a9fa90030b23254ef5ea8987c424cca2d1e3988202c2682d27ad67"
      },
      "downloads": -1,
      "filename": "joulehunter-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "1cbdb7bbcd921315c0fd73f3b093e9d0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 357217,
      "upload_time": "2022-11-02T17:02:57",
      "upload_time_iso_8601": "2022-11-02T17:02:57.612434Z",
      "url": "https://files.pythonhosted.org/packages/9d/99/072046ec515a9850dfa935b096ad1f11282ccf50e66f9ea6464c2e463701/joulehunter-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}