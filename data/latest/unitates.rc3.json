{
  "info": {
    "author": "liubomyr.ivanitskyi",
    "author_email": "lubomyr.ivanitskiy@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "\r\n# Unitates\r\n\r\nIt is a simple yet powerful package for creating and working with units of measurement.\r\nYou can simply create your own units or use predefined ones.\r\n\r\nSupports all mathematical operations,\r\nconstruction of complex units such as m/s, kg/m^2, etc., unit conversions,\r\ncomparison of units, basic work with arrays.\r\n\r\nFeel free to ask questions, suggest new ideas, open new issues and create pull requests. \r\n\r\nI will be happy to cooperate!\r\n\r\n## Installation\r\n```shell\r\ngit clone https://github.com/LubomyrIvanitskiy/unitates.git\r\n```\r\nor \r\n```shell\r\npip install unitates\r\n```\r\n\r\n## Usage\r\n\r\n### Using predefined units\r\n```python\r\nfrom units.constants.time import *\r\nfrom units.constants.length import *\r\n\r\n>>> km(2) # create a unit with constructor\r\n2 km\r\n>>> 2*km # create a unit by multiplication\r\n2 km\r\n>>> 2>>km # create a unit by conversion operator (overloaded rshift)\r\n2 km\r\n>>> 2*km + 3*m # result will be always in lower units\r\n2003 m\r\n>>> 2*m/sec\r\n2 m/sec\r\n>>> 3*m / sec(2)\r\n1.5 m/sec\r\n>>> 2*m/sec >> km/hr # unit conversion\r\n7.2 km/hr\r\n>>> a=[[1,2,3], [4,5,6]] >> m/sec**2 # list conversion\r\n>>> a\r\n[[1 m/sec^2, 2 m/sec^2, 3 m/sec^2], [4 m/sec^2, 5 m/sec^2, 6 m/sec^2]]\r\n>>> a >> km/hr**2\r\n[[12960 km/hr^2, 25920 km/hr^2, 38880 km/hr^2], [51840 km/hr^2, 64800 km/hr^2, 77760 km/hr^2]]\r\n>>> 10*m/sec**2 > 2*km/hr**2 # comparasion example \r\nTrue\r\n>>> 60*min == 1*hr # equality\r\nTrue\r\n>>> d = {60*sec: \"a\"} #hash overriding\r\n>>> min in d\r\nTrue\r\n```\r\n\r\n### Custom units\r\n#### Creating your own units\r\nTo create you own units call `create_units` function with named parameters where the name is the unit name\r\nand the value is the weight of the unit relative to the previous one:\r\n```python\r\n>>> from units import create_units\r\n>>> characters, words, sentences, paragraphs, pages, chapters, books = create_units(\r\n...     group_name=\"Book\",\r\n...     characters=1, \r\n...     words=4.7,\r\n...     sentences=21, \r\n...     paragraphs=3.5, \r\n...     pages=3, \r\n...     chapters=13,\r\n...     books=3)\r\n>>> hound_of_the_baskervilles_book = 256*pages\r\n>>> hound_of_the_baskervilles_book >> words\r\n56447.99999999999 words\r\n```\r\n#### Use already created custom units\r\n\r\nLoading group of units\r\n```python\r\n>>> from units import load_units\r\n>>> characters, words, sentences, paragraphs, pages, chapters, books = load_units(group_name=\"Book\")\r\n>>> 200*sentences >> pages\r\n19.04761904761905 pages\r\n```\r\n\r\nLoading specific units\r\n```python\r\n>>> from units import load_units\r\n>>> words, pages = load_units(\"words\", \"pages\")\r\n>>> pages >> words\r\n220.49999999999997 words\r\n```\r\n\r\nThe result of load_units is a namedtuple, so you can use it in the following way:\r\n```python\r\n>>> from units import load_units\r\n>>> units = load_units(\"words\", \"pages\")\r\n>>> units.pages >> units.words\r\n220.49999999999997 words\r\n```\r\n\r\nThere is also additional argument for customising result according to your needs\r\n\r\n\r\n#### Units cleanup\r\nIf your custom units is no longer needed make sure they are properly reset\r\n```python\r\n>>> from units import destroy_units\r\n>>> destroy_units(group_name=\"Book\")\r\n```\r\n\r\n\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "unitates",
    "package_url": "https://pypi.org/project/unitates/",
    "platform": null,
    "project_url": "https://pypi.org/project/unitates/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/unitates/1.0.14/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Python library for working with custom and predefined number measurement units",
    "version": "1.0.14",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14410667,
  "releases": {
    "1.0.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c3b62652200578270189699b977f63225760de60e17e1e260a6d861448bb2bdc",
          "md5": "cbaf18ac2066772bb898ef50cefaeab3",
          "sha256": "d3f95d2d17eec46e03d0beb8eb8bd0e1f6f1cc268753c4753160a1faadc60e17"
        },
        "downloads": -1,
        "filename": "unitates-1.0.12.tar.gz",
        "has_sig": false,
        "md5_digest": "cbaf18ac2066772bb898ef50cefaeab3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8034,
        "upload_time": "2022-07-12T07:33:03",
        "upload_time_iso_8601": "2022-07-12T07:33:03.518752Z",
        "url": "https://files.pythonhosted.org/packages/c3/b6/2652200578270189699b977f63225760de60e17e1e260a6d861448bb2bdc/unitates-1.0.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b887ab0c44f547fcb52f632e4b582d30feeae59d8b7751e9cb1759f14b76eb66",
          "md5": "1ab6257d229e4d80f178ae992d2eb01b",
          "sha256": "34c882c124e634327b0176f2861753209efba41e2d4d68c5c39a721fb4264033"
        },
        "downloads": -1,
        "filename": "unitates-1.0.13.tar.gz",
        "has_sig": false,
        "md5_digest": "1ab6257d229e4d80f178ae992d2eb01b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8147,
        "upload_time": "2022-07-12T07:46:04",
        "upload_time_iso_8601": "2022-07-12T07:46:04.067819Z",
        "url": "https://files.pythonhosted.org/packages/b8/87/ab0c44f547fcb52f632e4b582d30feeae59d8b7751e9cb1759f14b76eb66/unitates-1.0.13.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.14": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e674c41ad326e11be6183e89275ba916290815ff5345e94275b60fabede54664",
          "md5": "6e39a7da732bf7c960ccf805e48d60f1",
          "sha256": "7c70ba9cb42292965c0e8620f3832e207aa512761eaf2c837e76b14984d15568"
        },
        "downloads": -1,
        "filename": "unitates-1.0.14.tar.gz",
        "has_sig": false,
        "md5_digest": "6e39a7da732bf7c960ccf805e48d60f1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8147,
        "upload_time": "2022-07-12T12:40:21",
        "upload_time_iso_8601": "2022-07-12T12:40:21.739732Z",
        "url": "https://files.pythonhosted.org/packages/e6/74/c41ad326e11be6183e89275ba916290815ff5345e94275b60fabede54664/unitates-1.0.14.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e674c41ad326e11be6183e89275ba916290815ff5345e94275b60fabede54664",
        "md5": "6e39a7da732bf7c960ccf805e48d60f1",
        "sha256": "7c70ba9cb42292965c0e8620f3832e207aa512761eaf2c837e76b14984d15568"
      },
      "downloads": -1,
      "filename": "unitates-1.0.14.tar.gz",
      "has_sig": false,
      "md5_digest": "6e39a7da732bf7c960ccf805e48d60f1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8147,
      "upload_time": "2022-07-12T12:40:21",
      "upload_time_iso_8601": "2022-07-12T12:40:21.739732Z",
      "url": "https://files.pythonhosted.org/packages/e6/74/c41ad326e11be6183e89275ba916290815ff5345e94275b60fabede54664/unitates-1.0.14.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}