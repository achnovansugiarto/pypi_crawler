{
  "info": {
    "author": "Samyak Tamrakar",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.7",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# NeatLogger\nConvenient wrapper for logging python applications with options to add color, select logging style, rotate files by size and time, etc.\n\nOutput from [`demo.py`](https://github.com/srtamrakar/python-logger/blob/master/demo.py):\n![demo logs](https://raw.githubusercontent.com/srtamrakar/python-logger/master/docs/demo-logs.png)\n\n## Install with pip\n```bash\n$ pip install NeatLogger\n```\n\n## Usage\n1. Import the library.\n    ```python\n    from NeatLogger import Log\n    ```\n\n1. Create an instance.\n    ```python\n    log = Log()\n    ```\n    Arguments (all are optional):\n    * `project_name`: Project name, which would serve as the logger's name (*if specified*), and the prefix for log filenames.\n    * `log_level`: Level for logging. Choices:\n        * `\"critical\"`\n        * `\"error\"`\n        * `\"warning\"`\n        * `\"info\"`\n        * `\"debug\"`\n        * `\"notset\"`\n    * `assign_logger_name`: Flag to decide whether to assign `project_name` as the name to the logger.\n    * `formatter`: Logging formatter. Choices:\n        * an instance of `logging.Formatter`\n        * `\"json\"`\n        * `\"apache\"`\n    * `log_to_stdout`: Flag to decide whether to display the logs in stdout.\n    * `log_to_file`: Flag to decide whether to store the logs in a file.\n    * `log_dir`: Directory where the log files are stored.\n    * `log_file_suffix`: Suffix for the log filenames. Ignored if `rotate_file_by_time=True` . Choices:\n        * `\"S\"`: `%Y-%m-%d_%H-%M-%S` is appended to the filename.\n        * `\"M\"`: `%Y-%m-%d_%H-%M-00`\n        * `\"H\"`: `%Y-%m-%d_%H-00-00`\n        * `\"D\"`: `%Y-%m-%d`\n    * `rotate_file_by_size`: Flag to decide whether to rotate the log files by size.\n    * `rotating_file_max_size_bytes`: Size (in bytes) threshold to rollover the log files.\n    * `rotate_file_by_time`: Flag to decide whether to rotate the log files by time. Ignores `log_file_suffix`.\n    * `rotation_period`: Rotation period for the log files. Choices:\n        * `\"S\"`: log file rollovers every second. Ignores `rotation_time`.\n        * `\"M\"`: log file rollovers every minute. Ignores `rotation_time`.\n        * `\"H\"`: log file rollovers every hour. Ignores `rotation_time`.\n        * `\"D\"`: log file rollovers every day. Ignores `rotation_time`.\n        * `\"MIDNIGHT\"`: log file rollovers at midnight, or at `rotation_time` *if specified*.\n        * `\"W0\"`: log file rollovers on weekday 0 i.e. Monday, at `rotation_time` *if specified*.\n        * `\"W1\"`\n        * `\"W2\"`\n        * `\"W3\"`\n        * `\"W4\"`\n        * `\"W5\"`\n        * `\"W6\"`\n    * `rotation_interval`: Intervals of rotation period to rollover the log files. Ignored if `rotation_time` is a weekday.\n    * `rotation_time`: Time of the day to rollover the log file when `rotation_period` = `\"MIDNIGHT\"` or a weekday.\n    * `rotating_file_backup_count`: Number of old files to be retained.\n    * `use_utc`: Flag to decide whether to use UTC in the log timestamp and filenames.\n    * `colors_to_stdout`: Flag to decide whether to have colorful log. Only works for `log_to_stdout=True` and `log_formatter=\"apache\"`.\n    * `ignore_log_attribute_list`: List of log attributes to be ignored in the log. By default, some attributes are ignored. If all the attributes are desired, use `ignore_log_attribute_list=list()`.\n\n    :warning: If more than 1 of the following are set to `True`, only one of them is implemented. Their priority follows the order:\n    1. `rotate_file_by_size`\n    1. `rotate_file_by_time`\n    1. `log_to_file`\n\n1. Get a logger and start logging.\n    ```python\n    logger = log.get_logger()\n    logger.info(\"Testing 1 2 3 ...\")\n    ```\n\n## Author\n\n**&copy; 2021, [Samyak Tamrakar](https://www.linkedin.com/in/srtamrakar/)**.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/srtamrakar/python-logger/archive/v_0.0.1.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/srtamrakar/python-logger",
    "keywords": "log,logger,logging,apache,json,color",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "NeatLogger",
    "package_url": "https://pypi.org/project/NeatLogger/",
    "platform": "",
    "project_url": "https://pypi.org/project/NeatLogger/",
    "project_urls": {
      "Download": "https://github.com/srtamrakar/python-logger/archive/v_0.0.1.tar.gz",
      "Homepage": "https://github.com/srtamrakar/python-logger"
    },
    "release_url": "https://pypi.org/project/NeatLogger/0.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Convenient wrapper for logging python applications with options to add color, select logging style, rotate files by size and time, etc.",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9431430,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "db49513e183d0f08b3cc01934080a21bcb06e570db96dfabb67b3c4ca4bb1fb3",
          "md5": "9d3bac1d0782ac55f3b5616c27f4b193",
          "sha256": "6dd6db6d5557a547fc6a89e400fb1f94b4485aebf16f8dfee0b9e34089a10979"
        },
        "downloads": -1,
        "filename": "NeatLogger-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9d3bac1d0782ac55f3b5616c27f4b193",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6970,
        "upload_time": "2021-02-16T11:14:26",
        "upload_time_iso_8601": "2021-02-16T11:14:26.031951Z",
        "url": "https://files.pythonhosted.org/packages/db/49/513e183d0f08b3cc01934080a21bcb06e570db96dfabb67b3c4ca4bb1fb3/NeatLogger-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "db49513e183d0f08b3cc01934080a21bcb06e570db96dfabb67b3c4ca4bb1fb3",
        "md5": "9d3bac1d0782ac55f3b5616c27f4b193",
        "sha256": "6dd6db6d5557a547fc6a89e400fb1f94b4485aebf16f8dfee0b9e34089a10979"
      },
      "downloads": -1,
      "filename": "NeatLogger-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "9d3bac1d0782ac55f3b5616c27f4b193",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6970,
      "upload_time": "2021-02-16T11:14:26",
      "upload_time_iso_8601": "2021-02-16T11:14:26.031951Z",
      "url": "https://files.pythonhosted.org/packages/db/49/513e183d0f08b3cc01934080a21bcb06e570db96dfabb67b3c4ca4bb1fb3/NeatLogger-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}