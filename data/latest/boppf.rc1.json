{
  "info": {
    "author": null,
    "author_email": "\"Sterling G. Baird\" <sterling.baird@utah.edu>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Bayesian Optimization of Particle Packing Fractions (BOPPF)\n\n[![DOI](https://zenodo.org/badge/475255905.svg)](https://zenodo.org/badge/latestdoi/475255905)\n\nBayesian optimization of particle packing fractions for solid rocket propellant fuels. The objective function (not released here) is based on proprietary code from Northrop Grumman Innovation Systems (NGIS).\n\nTo reproduce, this requires a proprietary Windows executable (renamed to\n`particle_packing_sim.exe`) and Python functions contained in an unreleased module named `proprietary.m` for writing the input files and reading the volume fraction from the output files. These files should be placed into the [boppf/utils](boppf/utils) directory.\n\n## Installation\n\nA local installation can be performed via:\n```bash\nconda create -n packing python==3.9.*\nconda activate packing\ngit clone https://github.com/sparks-baird/bayes-opt-particle-packing.git\ncd bayes-opt-particle-packing\nconda install flit\nflit install --pth-file\n```\n<!-- To be able to run the two MATLAB scripts (which again, are not released here) requires an active MATLAB subscription and installation and the Statistics and Machine Learning Toolbox. The MATLAB version must be [compatible](https://www.mathworks.com/content/dam/mathworks/mathworks-dot-com/support/sysreq/files/python-compatibility.pdf) with the Python version that you're using. For example, `R2022a` supports Python `3.8` and `3.9`. Additionally, you will need to run a `setup.py` script **as an administrator** within the MATLAB installation directory per MATLAB's [instructions](https://www.mathworks.com/help/matlab/matlab_external/install-matlab-engine-api-for-python-in-nondefault-locations.html). Make sure that your `conda` environment is activated when you do this.\n\nYou must also add the [boppf/utils](boppf/utils) folder to the MATLAB path [in a persistent way](https://www.mathworks.com/matlabcentral/answers/97990-how-do-i-make-permanent-changes-to-the-matlab-path-using-command-line-functions) to accomodate the use of Ray Tune within Ax to perform asynchronous hyperparameter optimization scheduling. -->\n\n<!-- Replace `<matlabroot>` with the appropriate path to the MATLAB installation directory. For example, `C:\\Program Files\\MATLAB\\R2021a`, and run the following commands:\n```bash\ncd \"<matlabroot>\\extern\\engines\\python\"\npython setup.py build --build-base=\"C:\\Temp\" install\n```\n`--build-base=\"C:\\Temp\"` circumvents \"access denied\" issues that can crop up even when running in an Administrator shell by building in a temporary directory (Windows/Anaconda/MATLAB issue). -->\n\n<!-- For troubleshooting issues with Windows/Anaconda/MATLAB installation, see also [1](https://www.mathworks.com/matlabcentral/answers/346068-how-do-i-properly-install-matlab-engine-using-the-anaconda-package-manager-for-python), [2](https://stackoverflow.com/questions/33357739/problems-installing-matlab-engine-for-python-with-anaconda), [3](https://stackoverflow.com/questions/50488997/anaconda-python-modulenotfounderror-no-module-named-matlab). -->\n\n## Usage\nThe following is based on [boppf_example.py](examples/boppf_example.py), which can be run via `python examples/boppf_example.py`\n\nFirst, take care of imports.\n```python\nfrom boppf.boppf import BOPPF\nfrom boppf.utils.data import load_data\n```\n<!-- Load `X_train` and `y_train` from [packing-fraction.csv](data/packing-fraction.csv)\n\n| Run \t| ID \t| Mean_Particle_Size_#1 \t| SD_of_Particle_#1 \t| Mean_Particle_Size_#2 \t| SD_of_Particle_#2 \t| Mean_Particle_Size_#3 \t| SD_of_Particle_#3 \t| Particle_#1_Mass_Fraction \t| Particle_#2_Mass_Fraction \t| Particle_#3_Mass_Fraction \t| Packing_Fraction \t|\n|-----\t|----\t|-----------------------\t|-------------------\t|-----------------------\t|-------------------\t|-----------------------\t|-------------------\t|---------------------------\t|---------------------------\t|---------------------------\t|------------------\t|\n| 1   \t| 0  \t| 20                    \t| 1                 \t| 40                    \t| 2.8284            \t| 60                    \t| 5.1962            \t| 0.2239                    \t| 0.597                     \t| 0.1791                    \t| 0.74             \t|\n| 2   \t| 1  \t| 20                    \t| 1                 \t| 40                    \t| 2.8284            \t| 60                    \t| 779.4229          \t| 0.2239                    \t| 0.597                     \t| 0.1791                    \t| 0.737            \t|\n| .   \t| .  \t| .                     \t| .                 \t| .                     \t| .                 \t| .                     \t| .                 \t| .                         \t| .                         \t| .                         \t| .                \t|\n -->\n<!-- \n```python\ndata_dir = \"data\"\nfname = \"packing-fraction.csv\"\nX_train, y_train = load_data(fname=\"packing-fraction.csv\", folder=\"data\")\n```\n -->\nDefine how many pseudo-random initial Sobol points to generate (`n_sobol`, typical is twice the number of parameters), the number of Bayesian optimization iterations `n_bayes`, and the number of particles to drop in each simulation (`particles`).\n```python\nn_sobol = 10\nn_bayes = 40\nparticles = int(2.5e4)\n```\n\nInstantiate the `BOPPF` class, and call the `optimize` method.\n```python\nboppf = BOPPF(n_sobol=n_sobol, n_bayes=n_bayes, particles=particles)\nbest_parameters, means, covariances, ax_client = boppf.optimize(np.array([]), np.array([]), return_ax_client=True)\n```\n\nThe Ax `experiment` object and a tabular summary are saved to the `results` directory.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": null,
    "keywords": null,
    "license": null,
    "maintainer": null,
    "maintainer_email": null,
    "name": "boppf",
    "package_url": "https://pypi.org/project/boppf/",
    "platform": null,
    "project_url": "https://pypi.org/project/boppf/",
    "project_urls": {
      "Home": "https://github.com/sparks-baird/boppf"
    },
    "release_url": "https://pypi.org/project/boppf/0.1.0/",
    "requires_dist": [
      "ax-platform",
      "pyro-ppl",
      "ray[tune]",
      "tqdm",
      "psutil",
      "kaleido"
    ],
    "requires_python": ">=3.7,<3.10",
    "summary": "Bayesian optimization of particle packing fractions.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15543256,
  "releases": {
    "0.1.0": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "1f0539785a150f14f4567381572c57fad5ee2eacf3512a3a19fac8dcb785f1a1",
          "md5": "dbe2705118ce0a9ae31f875d5a99f1b6",
          "sha256": "5b0adbb9061d9d502ed346603b1217757c4fa3fa18b62122c08647328ef362c5"
        },
        "downloads": -1,
        "filename": "boppf-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dbe2705118ce0a9ae31f875d5a99f1b6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<3.10",
        "size": 20560,
        "upload_time": "2022-10-26T20:10:20",
        "upload_time_iso_8601": "2022-10-26T20:10:20.209488Z",
        "url": "https://files.pythonhosted.org/packages/1f/05/39785a150f14f4567381572c57fad5ee2eacf3512a3a19fac8dcb785f1a1/boppf-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "b32984f9bd6e9d2c8bcc311e332dce085192b20b60abe32b1dc5512c870b068d",
          "md5": "d1f0e0e0d6fa7329daf673574145b807",
          "sha256": "e977452b19809f9d3eccb8f8559e62a534bae5cc6549ad536861e0c2fa386a11"
        },
        "downloads": -1,
        "filename": "boppf-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d1f0e0e0d6fa7329daf673574145b807",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<3.10",
        "size": 1104727,
        "upload_time": "2022-10-26T20:15:27",
        "upload_time_iso_8601": "2022-10-26T20:15:27.799252Z",
        "url": "https://files.pythonhosted.org/packages/b3/29/84f9bd6e9d2c8bcc311e332dce085192b20b60abe32b1dc5512c870b068d/boppf-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "1f0539785a150f14f4567381572c57fad5ee2eacf3512a3a19fac8dcb785f1a1",
        "md5": "dbe2705118ce0a9ae31f875d5a99f1b6",
        "sha256": "5b0adbb9061d9d502ed346603b1217757c4fa3fa18b62122c08647328ef362c5"
      },
      "downloads": -1,
      "filename": "boppf-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "dbe2705118ce0a9ae31f875d5a99f1b6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<3.10",
      "size": 20560,
      "upload_time": "2022-10-26T20:10:20",
      "upload_time_iso_8601": "2022-10-26T20:10:20.209488Z",
      "url": "https://files.pythonhosted.org/packages/1f/05/39785a150f14f4567381572c57fad5ee2eacf3512a3a19fac8dcb785f1a1/boppf-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "b32984f9bd6e9d2c8bcc311e332dce085192b20b60abe32b1dc5512c870b068d",
        "md5": "d1f0e0e0d6fa7329daf673574145b807",
        "sha256": "e977452b19809f9d3eccb8f8559e62a534bae5cc6549ad536861e0c2fa386a11"
      },
      "downloads": -1,
      "filename": "boppf-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "d1f0e0e0d6fa7329daf673574145b807",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7,<3.10",
      "size": 1104727,
      "upload_time": "2022-10-26T20:15:27",
      "upload_time_iso_8601": "2022-10-26T20:15:27.799252Z",
      "url": "https://files.pythonhosted.org/packages/b3/29/84f9bd6e9d2c8bcc311e332dce085192b20b60abe32b1dc5512c870b068d/boppf-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}