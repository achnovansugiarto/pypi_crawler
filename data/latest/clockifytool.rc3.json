{
  "info": {
    "author": "Mike Cantelon",
    "author_email": "mcantelon@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# clockify-tool\n\nThe Clockify Tool (`cft`) can be used to list, create, and delete time entries\nin Clockify.\n\nWith `cft` you can make use of time entry \"templates\" (see `Advanced\nconfiguration`) to rapidly create time entries. For example if you regularly\nhave a 15 minute scrum meeting you could create a \"scrum\" time entry template\nthat allows you to add a time entry like this:\n\n    $ ./cft +scrum\n\n\nKnown issues\n------------\n\nClockify's API requires that all important details about a time entry be\nprovided when making a change to a time entry. Because of this `cft`, when\nyou list or create time entries, caches these details. Given this if you list\ntime entries in `cft`, change one of the listed time entries using Clockify's\nweb UI, then change the same time entry using `cft` you'd lose the changes you\nmake in the web UI. For this reason it's advised to stick to `cft` for time\nentry if you want to use `cft`. You can still safely use the web UI for\nsearching, etc.\n\nAlso note that, when updating existing time entries, start time can't yet be\nchanged. This will likely be added in the future.\n\nTested with Python 2.7 and 3. Will need to be tweaked to handle Unicode.\n\n\nInstallation\n------------\n\nInstall via PyPi:\n\n    $ pip install clockifytool\n\n...Or clone this repo, change into the repo directory, then enter the following\ncommand:\n\n    $ pip install -r requirements.txt\n\n\nBasic Configuration\n-------------------\n\nTo use `cft` you'll need to, in the Clockify web UI, click the \"GENERATE\"\nbutton on the \"Personal settings\" page to generate an API key. You'll then need\nto put the key into the `cft` configuration file, which is YAML-formatted and\nmust be created in `$HOME/.cft.yml`.\n\nHere's an example configuration file containing an API key:\n\n    api key: aLedJtL4rl48s2O7\n\nOnce you've created a configuration file, you can then run `cft` which will\nprovide you will a list of available workspaces.\n\nFor example:\n\n    $ ./cft\n    Please set workspace ID as \"workspace\" in /home/vagrant/.cft.yml.\n\n    Available workspaces:\n    * Client-Project-Task Workspace [4c31a29da059321c02e301e0]\n\nEdit the configuration file to set the ID of the workspace you'd like to use.\n\nExample configuration with API key and workspace set:\n\n    api key: aLedJtL4rl48s2O7\n    workspace: 4c31a29da059321c02e301e0\n\nRead on to learn about the basic functionality of `cft` and, once you've got\nthe hang of things, check out `Advanced Configuration` to learn how you can\nsave time when entering new time entries.\n\n\nCommands\n--------\n\nClockify Tool allows you to list, create and delete Clockify time entries. You\ncan also list projects, project tasks, and workspaces to find out their IDs.\n\n\n### Listing time entries in a period of time\n\nHelp for the list command:\n\n    $ ./cft list -h\n    usage: cft list [-h] [-s start date] [-e end date] [--strict] [-v] [period]\n\n    positional arguments:\n      period                time period: optional, overrides -s and -e\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -s start date, --start start date\n      -e end date, --end end date\n      --strict\n      -v, --verbose\n\n    Available periods: \"yesterday\" (\"y\"): day before today, \"daybeforeyesterday\"\n    (\"dby\"): day before yesterday, \"lastweek\" (\"lw\"): last work week (Monday to\n    Friday), \"currentweek\" (\"cw\"): current work week (Monday to Friday),\n    \"fulllastweek\" (\"flw\"): last full week (Sunday to Saturday), \"fullcurrentweek\"\n    (\"fcw\"): current full week (Sunday to Saturday), \"lastmonth\" (\"lm\"): last\n    month, \"currentmonth\" (\"cm\"): current month, \"lastyear\" (\"ly\"): last year,\n    \"currentyear\" (\"cy\"): current year, \"monday\" (\"mon\"): Monday, \"tuesday\"\n    (\"tue\"): Tuesday, \"wednesday\" (\"wed\"): Wednesday, \"thursday\" (\"thu\"):\n    Thursday, \"friday\" (\"fri\"): Friday, \"saturday\" (\"sat\"): Saturday, \"sunday\"\n    (\"sun\"): Sunday, \"lastmonday\" (\"lmon\"): Last Monday, \"lasttuesday\" (\"ltue\"):\n    Last Tuesday, \"lastwednesday\" (\"lwed\"): Last Wednesday, \"lastthursday\"\n    (\"lthu\"): Last Thursday, \"lastfriday\" (\"lfri\"): Last Friday, \"lastsaturday\"\n    (\"lsat\"): Last Saturday, \"lastsunday\" (\"lsun\"): Last Sunday,\n    \"currentpayperiod\" (\"cp\"): current pay period, \"previouspayperiod\" (\"pp\"):\n    previous pay period\n\nExample list of today's time entries:\n\n    $ ./cft\n\nHere's example output:\n\n    $ ./cft \n    Fetching time entries from 2020-02-13 (Thursday)...\n\n    Time entries:\n    * Reading email. (Email: 5cdb08621080ec2d4a8e707e) [0.25 hours: 5cdb08bfb0798752b039c5ba]\n    * Daily scrum. (Meetings: 5cdb08ead278ae206156ae6f) [0.25 hours: 5cdb090bb0798752b039c5f6]\n\n    0.5 hours.\n\nIn the output each line under \"Time entries\" that begins with a `*` is a time\nentry. The time entry's description is first shown, then the entry's project\nname and ID, then the hours spent and the time entry's ID.\n\nThe default behavior of the list command is to display all time entries with a\nstart date that's within a date range. When the `--strict` option is used,\nhowever, both the start date and end date must be within the date range.\n\nTo get more information, per time entry, the `--verbose` (or `-v`) option can\nbe used. This will display date and time for each entry as well as the parent\nproject of any entry that is associated with a task rather than a project.\n\nHere's an example of listing yesterday's time entries:\n\n    $ ./cft list yesterday\n\nYesterday is one time period of a number of available time periods.\n\nNote that there are one letter abbreviations for the periods. The abbreviation\nfor \"yesterday\" is \"y\", for example.\n\n`cft` commands like \"list\" can have one letter abbreviations. So if you\nwanted to list yesterday's time entries you could enter:\n\n    $ ./cft l y\n\nAnother time saver: if you enter a time period, instead of a command, you'll\nget a list of entries in the time period:\n\n    $ ./cft y\n\n\n### List time entries in an arbitrary date range\n\nWhen listing time entries, an arbitrary date range can be specified using the\n`--start` (or `-s-`) and/or `--end` (or `-e`) options.\n\nIf either `--start` or `--end` are specified, but the other isn't, then the\none that's omitted they will default to today's date.\n\nExample list of time entries in an arbitary date range:\n\n    $ ./cft l -s 2019-03-06 --e 2019-03-09\n\nThe `-` or `+` operators, as a prefix to a integeter represeting a number of\ndays, can also be used to indicate a relative date.\n\nFor example, if one wanted to list time entries created five days ago to the\npresent day then one could use this command:\n\n    $ ./cft l -s -5\n\n\n### List projects\n\nThe `projects` (or `p`) command is used to list projects. The project name\nand ID will be output.\n\nFor example:\n\n    $ ./cft projects\n    * Email [5cdb08621080ec2d4a8e707e]\n    * Meetings [5cdb08ead278ae206156ae6f]\n\n\n### Project details\n\nThe `project` (or `pd`) command is used to display details about a project,\nincluding a list of tasks for it.\n\nFor example:\n\n    $ ./cft project ed5c600955e74cce9648cd91\n    Name: Example Company - Hosting\n    Client: Example\n\n    Tasks:\n    * Support [5d8bff9dad3d0047ca62e3fd]\n\n\n### Task details\n\nThe `task` (or `td`) command is used to display details about a task.\n\nFor example:\n\n    $ ./cft task 5d8bff9dad3d0047ca62e3fd\n    Name: Support\n    Project ID: ed5c600955e74cce9648cd91\n\n\n### Creating a time entry\n\nThe `new` (or `n`) command is used to create a new time entry. The number of\nhours, rather than a particular time range, is specified.\n\nHelp for the new command:\n\n    $ ./cft new -h\n    usage: cft new [-h] [-c comments: required for new time entries]\n                   [-t hours spent: required for new time entries] [-d date] [-b]\n                   [-s start time]\n                   project ID\n\n    positional arguments:\n      project ID            ID of project or task: required\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -c comments: required for new time entries, --comments comments: required for new time entries\n      -t hours spent: required for new time entries, --hours hours spent: required for new time entries\n      -d date, --date date  defaults to today\n      -b, --billable\n      -s start time, --start start time\n\nHere's an example (in which `5cb772f3f15c9857ee275d00` is the project ID:\n\n    $ ./cft new 5cb772f3f15c9857ee275d00 --comments=\"Checking email.\" --hours=.25\n\nHere's the same example in a briefer form.\n\n    $ ./cft n 5cb772f3f15c9857ee275d00 -c \"Checking email.\" -t .25\n\nWhen specifying a date, the `+` or `-` operators are relative to the current\ndate. If you create a time entry today that should be dated as yesteray you\ncould update it with `-1` as the date to fix.\n\nFor example:\n\n    $ ./cft n 5cb772f3f15c9857ee275d00 -c \"Checking email.\" -t .25 -d -1\n\nIf specifying a start time, using the `--start`/`-s` optional argument, the\ntime should be specified in 24 hour time format.\n\nFor example:\n\n    $ ./cft n 5cb772f3f15c9857ee275d00 -c \"Checking email.\" -t .25 -s 13:15\n\nNote that when adding a time entry the current time will be used as the start\ntime unless a date and/or start time are specified. If a date is specified, but\na start time isn't, then the start time will be midnight. If a start time is\nspecified, however, then the specified start time will be used.\n\n\n### Updating a time entry\n\nThe `update` (or `u`) command is used to update an existing time entry.\n\nHelp for the update command:\n\n    $ ./cft update -h\n    usage: cft update [-h] [-c comments: required for new time entries]\n                      [-t hours spent: required for new time entries] [-d date]\n                      [-b] [-a append: append text to comments] [-u]\n                      entry ID\n\n    positional arguments:\n      entry ID              ID of time entry: required\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -c comments: required for new time entries, --comments comments: required for new time entries\n      -t hours spent: required for new time entries, --hours hours spent: required for new time entries\n      -d date, --date date  defaults to today\n      -b, --billable\n      -a append: append text to comments, --append append: append text to comments\n      -u, --unbillable\n\nHere's an example (in which `5ce54a35a02987296634c98a` is the time entry's ID:\n\n    $ ./cft update 5ce54a35a02987296634c98a --comments=\"Changed tires.\" --hours=1.5\n\nComments can be amended, rather than replaced, using the `--append` option.\n\nFor example:\n\n    $ ./cft u 5ce54a35a02987296634c98a -a \"I also fixed the flux capacitor.\"\n\nWhen updating hours worked, the `+` or `-` operators can be used to increment\nor decrement the entry's current hours worked value.\n\nFor example:\n\n    $ ./cft u 5ce54a35a02987296634c98a -t +.25\n\nWhen adjusting a date, the `+` or `-` operators are relative to the current\ndate. If you added something today that should be dated as yesteray you could\nupdate it with `-1` as the date to fix.\n\nFor example:\n\n    $ ./cft u 5ce54a35a02987296634c98a -d -1\n\nNote: make sure you read the intro to this README file so you know that there\ncan be issues with updating time entries if you use both Clockify's web UI and\n`cft`.\n\n\n### Deleting a time entry\n\nThe `delete` (or `d`) command is used to delete a time entry.\n\nHere's an example (in which `5cd64137b079870300a9c9e0` is the time entry ID:\n\n    $ ./cft delete 5cd64137b079870300a9c9e0\n\n\n### List workspaces\n\nThe `workspaces` (or `w`) command is used to list workspaces. The workspace\nname and ID will be output.\n\nFor example:\n\n    $ ./cft workspaces\n    * Client-Project-Task Workspace [4c31a29da059321c02e301e0]\n\n\n### Cache status/flushing\n\nYou probably won't need to use this, but it exists. The `cache` command is used\nto display how many time entries have been cached. The `--flush` (or `-f`) flag\ncan be used to delete all cached time entries.\n\n\nAdvanced configuration\n----------------------\n\nYou can save time entering time entries by using advanced configuration.\n\n### Project time entry aliases\n\nWhen specifying a project, or project task, you can either use ID of the\nproject or you can refer to an alias specifed in your configuration file. You\ncan also create aliases for aliases.\n\nExample:\n\n    projects:\n      meet:\n        id: 4cb771f3f13c9855ee275d00\n      meeting:\n        id: meet\n\n\n### Project time entry templates\n\nIn addition to using an alias to specify a project, or project task, ID, you\ncan use the same technique to, when creating a time entry, automatically set\nthe comments and hours spent.\n\nExample:\n\n    projects:\n      meet:\n        id: 100\n      meeting:\n        id: meet\n      scrum:\n        id: meet\n        comments: \"Daily scrum.\"\n        hours: .25\n\nThese values can be overridden by command-line options so if, building on the\nprevious example, you had a scrum meeting that lasted a half hour, instead of\n15 minutes, you could add a time entry using the \"scrum\" alias and just\noverrride the --time command-line option.\n\nExample:\n\n    $ ./cft n scrum -t .5\n\n\nShortcuts and abbreviations\n---------------------------\n\nExample of quick addition of a time entry using a template:\n\n    $ ./cft +scrum\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/artefactual-labs/clockify-tool",
    "keywords": "clockify",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "clockifytool",
    "package_url": "https://pypi.org/project/clockifytool/",
    "platform": "",
    "project_url": "https://pypi.org/project/clockifytool/",
    "project_urls": {
      "Homepage": "https://github.com/artefactual-labs/clockify-tool"
    },
    "release_url": "https://pypi.org/project/clockifytool/0.0.3/",
    "requires_dist": [
      "future",
      "isodate",
      "python-dateutil",
      "PyYAML",
      "requests",
      "tzlocal"
    ],
    "requires_python": "",
    "summary": "Tool to list, create, and delete time entries in Clockify",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7930760,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "87e3ef412a0e6be71f46efcbf36d8a20777242fca8f8798c32bd8c29a9e9fa22",
          "md5": "7f373a8e8ed473eb5a3363544adb8360",
          "sha256": "a00bc5c6f0aca8bd68ca64c4148560fb42fbfdf63d47da986c77a7be460d2dd1"
        },
        "downloads": -1,
        "filename": "clockifytool-0.0.1-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "7f373a8e8ed473eb5a3363544adb8360",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 17110,
        "upload_time": "2020-08-06T08:59:41",
        "upload_time_iso_8601": "2020-08-06T08:59:41.228602Z",
        "url": "https://files.pythonhosted.org/packages/87/e3/ef412a0e6be71f46efcbf36d8a20777242fca8f8798c32bd8c29a9e9fa22/clockifytool-0.0.1-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "35a6cb612195e087f8867cc61916554f69d50e5ac711c672fe36edf188b1cf7f",
          "md5": "3ca7e53d5a63de9a2b1354c5a64edcbc",
          "sha256": "19a22786c7a271a4eb67dcbdd7f83e268ec6c6807a2a4dc8ec96257a7491c630"
        },
        "downloads": -1,
        "filename": "clockifytool-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3ca7e53d5a63de9a2b1354c5a64edcbc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17112,
        "upload_time": "2020-08-06T08:59:43",
        "upload_time_iso_8601": "2020-08-06T08:59:43.488050Z",
        "url": "https://files.pythonhosted.org/packages/35/a6/cb612195e087f8867cc61916554f69d50e5ac711c672fe36edf188b1cf7f/clockifytool-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c50d9465fe8012c558168c9ae10567b3c655d44b3d7646e86faf50e8a8800637",
          "md5": "7473a8f91372f2dd1a57ad48f4db6adf",
          "sha256": "8e261d266e33e1e35f39f01258555b046a07ce649c80942effc8c55167a3b6a4"
        },
        "downloads": -1,
        "filename": "clockifytool-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7473a8f91372f2dd1a57ad48f4db6adf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19587,
        "upload_time": "2020-08-06T08:59:44",
        "upload_time_iso_8601": "2020-08-06T08:59:44.577490Z",
        "url": "https://files.pythonhosted.org/packages/c5/0d/9465fe8012c558168c9ae10567b3c655d44b3d7646e86faf50e8a8800637/clockifytool-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f2149436232331020e66e03d1107a8b2067ce9d9ad72dda87810a04fef3737d",
          "md5": "589adcd24e2425bd2704b0549fd7f2fa",
          "sha256": "94e75a183c0f984e8591699c8867bfa8167d1b218d2b85cff9a18c3dab66b89b"
        },
        "downloads": -1,
        "filename": "clockifytool-0.0.2-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "589adcd24e2425bd2704b0549fd7f2fa",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 17244,
        "upload_time": "2020-08-08T07:20:48",
        "upload_time_iso_8601": "2020-08-08T07:20:48.001127Z",
        "url": "https://files.pythonhosted.org/packages/5f/21/49436232331020e66e03d1107a8b2067ce9d9ad72dda87810a04fef3737d/clockifytool-0.0.2-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef510781af0001a8254b4c31c97d63a52aeb6a49d13dbdde2835cc7a0ff96e4f",
          "md5": "b4a2b66097ca724ed0d22ff70c6a86c4",
          "sha256": "541530158e33a0381f931badcd957fb5029ba9e8f5f0e5a43bd41ffd4982a9f7"
        },
        "downloads": -1,
        "filename": "clockifytool-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b4a2b66097ca724ed0d22ff70c6a86c4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17245,
        "upload_time": "2020-08-08T07:20:49",
        "upload_time_iso_8601": "2020-08-08T07:20:49.347231Z",
        "url": "https://files.pythonhosted.org/packages/ef/51/0781af0001a8254b4c31c97d63a52aeb6a49d13dbdde2835cc7a0ff96e4f/clockifytool-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bbd360e6a9bf55a9eae4561c22c051448ea84d586760a99908121b7881693469",
          "md5": "93716ffc22be295f8b388695ff5be62d",
          "sha256": "f76875f89ededcde2ab291f9f2626670ae5e8833217efe4c12fde24fa5e3b825"
        },
        "downloads": -1,
        "filename": "clockifytool-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "93716ffc22be295f8b388695ff5be62d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19745,
        "upload_time": "2020-08-08T07:20:50",
        "upload_time_iso_8601": "2020-08-08T07:20:50.661033Z",
        "url": "https://files.pythonhosted.org/packages/bb/d3/60e6a9bf55a9eae4561c22c051448ea84d586760a99908121b7881693469/clockifytool-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad17bcfef189f676ee1fb4d9899150dc0789df7c5f7b19c75f935910f380e021",
          "md5": "4eee7b37429d578378f717eaaa0b598f",
          "sha256": "29e30eba1275313442937d35511cdfc44b3532a373feb1ff6bccee26046e259f"
        },
        "downloads": -1,
        "filename": "clockifytool-0.0.3-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "4eee7b37429d578378f717eaaa0b598f",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 17316,
        "upload_time": "2020-08-11T02:06:05",
        "upload_time_iso_8601": "2020-08-11T02:06:05.620200Z",
        "url": "https://files.pythonhosted.org/packages/ad/17/bcfef189f676ee1fb4d9899150dc0789df7c5f7b19c75f935910f380e021/clockifytool-0.0.3-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6a59d7cd4a56c1aa6e0c9ab28d458a34575a58cb5acf849a8dfeebbfa958c8e3",
          "md5": "62f84cfa38e5491d27956ae36e950ee4",
          "sha256": "5eaf01dabc8216f2c0b266f64d64a2d9b60c3c56980cbc2bdfe96bf6fee6b4b6"
        },
        "downloads": -1,
        "filename": "clockifytool-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "62f84cfa38e5491d27956ae36e950ee4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17316,
        "upload_time": "2020-08-11T02:06:06",
        "upload_time_iso_8601": "2020-08-11T02:06:06.994185Z",
        "url": "https://files.pythonhosted.org/packages/6a/59/d7cd4a56c1aa6e0c9ab28d458a34575a58cb5acf849a8dfeebbfa958c8e3/clockifytool-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e1532ffa920e20e9d48435d273dbdbfc823fb27251d1ec1e812c2363cddaf0b7",
          "md5": "ba7b137f81dadca1e121c0b8abd1afbf",
          "sha256": "79cd1331935b80f7e6f1cd4ceaa5c393ad71ce3184cb0c90d88b92e4ce5bc96f"
        },
        "downloads": -1,
        "filename": "clockifytool-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "ba7b137f81dadca1e121c0b8abd1afbf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19826,
        "upload_time": "2020-08-11T02:06:08",
        "upload_time_iso_8601": "2020-08-11T02:06:08.740196Z",
        "url": "https://files.pythonhosted.org/packages/e1/53/2ffa920e20e9d48435d273dbdbfc823fb27251d1ec1e812c2363cddaf0b7/clockifytool-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ad17bcfef189f676ee1fb4d9899150dc0789df7c5f7b19c75f935910f380e021",
        "md5": "4eee7b37429d578378f717eaaa0b598f",
        "sha256": "29e30eba1275313442937d35511cdfc44b3532a373feb1ff6bccee26046e259f"
      },
      "downloads": -1,
      "filename": "clockifytool-0.0.3-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "4eee7b37429d578378f717eaaa0b598f",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "requires_python": null,
      "size": 17316,
      "upload_time": "2020-08-11T02:06:05",
      "upload_time_iso_8601": "2020-08-11T02:06:05.620200Z",
      "url": "https://files.pythonhosted.org/packages/ad/17/bcfef189f676ee1fb4d9899150dc0789df7c5f7b19c75f935910f380e021/clockifytool-0.0.3-py2-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6a59d7cd4a56c1aa6e0c9ab28d458a34575a58cb5acf849a8dfeebbfa958c8e3",
        "md5": "62f84cfa38e5491d27956ae36e950ee4",
        "sha256": "5eaf01dabc8216f2c0b266f64d64a2d9b60c3c56980cbc2bdfe96bf6fee6b4b6"
      },
      "downloads": -1,
      "filename": "clockifytool-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "62f84cfa38e5491d27956ae36e950ee4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 17316,
      "upload_time": "2020-08-11T02:06:06",
      "upload_time_iso_8601": "2020-08-11T02:06:06.994185Z",
      "url": "https://files.pythonhosted.org/packages/6a/59/d7cd4a56c1aa6e0c9ab28d458a34575a58cb5acf849a8dfeebbfa958c8e3/clockifytool-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e1532ffa920e20e9d48435d273dbdbfc823fb27251d1ec1e812c2363cddaf0b7",
        "md5": "ba7b137f81dadca1e121c0b8abd1afbf",
        "sha256": "79cd1331935b80f7e6f1cd4ceaa5c393ad71ce3184cb0c90d88b92e4ce5bc96f"
      },
      "downloads": -1,
      "filename": "clockifytool-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "ba7b137f81dadca1e121c0b8abd1afbf",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 19826,
      "upload_time": "2020-08-11T02:06:08",
      "upload_time_iso_8601": "2020-08-11T02:06:08.740196Z",
      "url": "https://files.pythonhosted.org/packages/e1/53/2ffa920e20e9d48435d273dbdbfc823fb27251d1ec1e812c2363cddaf0b7/clockifytool-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}