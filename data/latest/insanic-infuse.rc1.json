{
  "info": {
    "author": "Kwang Jin Kim",
    "author_email": "kwangjinkim@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": ".. image:: https://github.com/crazytruth/infuse/raw/master/docs/source/_static/infuse.png\n\nInfuse\n======\n\n|Build Status| |Documentation Status| |Codecov|\n\n|PyPI pyversions| |PyPI version| |PyPI license| |Black|\n\n.. |Build Status| image:: https://github.com/crazytruth/infuse/workflows/Python%20Tests/badge.svg\n    :target: https://github.com/crazytruth/infuse/actions?query=workflow%3A%22Python+Tests%22\n\n.. |Documentation Status| image:: https://readthedocs.org/projects/infuse/badge/?version=latest\n    :target: http://infuse.readthedocs.io/?badge=latest\n\n.. |Codecov| image:: https://codecov.io/gh/crazytruth/infuse/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/crazytruth/infuse\n\n.. |PyPI version| image:: https://img.shields.io/pypi/v/insanic-infuse\n    :target: https://pypi.org/project/insanic-infuse/\n\n.. |PyPI pyversions| image:: https://img.shields.io/pypi/pyversions/insanic-infuse\n    :target: https://pypi.org/project/insanic-infuse/\n\n.. |Black| image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://github.com/psf/black\n\n.. |PyPI license| image:: https://img.shields.io/github/license/crazytruth/infuse?style=flat-square\n    :target: https://pypi.org/project/insanic-infuse/\n\n.. end-badges\n\n\n\nInfuse is a Python implementation of the Circuit Breaker pattern, described\nin Michael T. Nygard's book `Release It!`_.\n\nIn Nygard's words, *\"circuit breakers exists to allow one subsystem to fail\nwithout destroying the entire system. This is done by wrapping dangerous\noperations (typically integration points) with a component that can circumvent\ncalls when the system is not healthy\"*.\n\nThis basically extends `pybreaker`_ with support for `Insanic`_.\nFor full documentation refer to `pybreaker`_.\nWhat is different from pybreaker is that it is an asynchronous implementation\nwith asynchronous storage options.\n\nWe needed a lot more customizations compared to what the pybreaker was providing.\nEspecially with async storage options. The whole CircuitBreaker implementation needed\nto be fixed for asyncio support.\n\n\nWhats up with the name?\n-----------------------\n\nSome people might ask why infuse? My basic thought process:\n\n#. Need a name that starts with \"in~\"\n#. \"Circuit Breaker\" -> Fuse box\n#. infuse?\n\n\nFeatures\n--------\n\n-   pybreaker features +\n-   aioredis backed storage option\n\n\nRequirements\n------------\n\n-   infuse is only `Python`_ 3.4+ (support for asyncio)\n\n    - pybreaker is originally : `Python`_ 2.7+ (or Python 3.0+)\n\n-   redis if using async redis (aioredis)\n\n\nInstallation\n------------\n\nRun the following command line to download the latest stable version of\ninfuse from `PyPI`_\n\n.. code-block:: sh\n\n    $ pip install insanic-infuse\n\n\nUsage\n-----\n\nUsage of Infuse is different from `pybreaker`_, where everything is done\nthrough the Infuse :code:`init_app` method.\n\n.. code-block:: python\n\n    from insanic import Insanic\n    from infuse import Infuse\n\n    app = Insanic(\"example\", version=\"0.1.0\")\n    Infuse.init_app(app)\n\nBut, before we go on some explanation of what a circuit breaker does:\n\n\nWhat Does a Circuit Breaker Do? (from `pybreaker`_)\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nLet's say you want to use a circuit breaker on a function that updates a row\nin the ``customer`` database table.\n\n\n.. code-block:: python\n\n    def update_customer(cust):\n        # Do stuff here...\n        pass\n\n    # Will trigger the circuit breaker\n    updated_customer = await db_breaker.call(update_customer, my_customer)\n\n\nAccording to the default parameters, the circuit breaker :code:`db_breaker` will\nautomatically **OPEN** the circuit after 5 consecutive failures in\n:code:`update_customer`.\n\nWhen the circuit is **OPEN**, all calls to :code:`update_customer` will fail immediately\n(raising a :code:`CircuitBreakerError`) without any attempt to execute the real\noperation.\n\nAfter 60 seconds, the circuit breaker will allow the next call to\n:code:`update_customer` pass through.  This state is called **HALF OPEN** .\nIf that call succeeds, the circuit is **CLOSED** ;\nif it fails, however, the circuit is **OPEN** ed again until another timeout elapses.\n\n\nExcluding Exceptions(from `pybreaker`_)\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nBy default, a failed call is any call that raises an exception. However, it's\ncommon to raise exceptions to also indicate business exceptions, and those\nexceptions should be ignored by the circuit breaker as they don't indicate\nsystem errors.\n\n.. code-block:: python\n\n    # At creation time...\n    db_breaker = CircuitBreaker(exclude=[CustomerValidationError])\n\n    # ...or later\n    db_breaker.add_excluded_exception(CustomerValidationError)\n\n\nIn that case, when any function guarded by that circuit breaker raises\n:code:`CustomerValidationError` (or any exception derived from\n:code:`CustomerValidationError`), that call won't be considered a system failure.\n\n\nWhat does Infuse do?\n^^^^^^^^^^^^^^^^^^^^\n\nInfuse, when initializing the Insanic application\n\n#.  Sets its own state on the storage as defined in :code:`INFUSE_INITIAL_CIRCUIT_STATE`.\n#.  Patches Insanic's Service object to wrap with circuit breaking.\n\nOther than this, there are some configurations you can tweak.\nPretty simple.\n\nFor more information, please refer to the `Documentation`_.\n\nRelease History\n===============\n\nView release history `here <CHANGELOG.rst>`_\n\n\nContributing\n=============\n\nFor guidance on setting up a development environment and how to make a contribution to Infuse,\nsee the `CONTRIBUTING.rst <CONTRIBUTING.rst>`_ guidelines.\n\n\nMeta\n====\n\nDistributed under the MIT license. See `LICENSE <LICENSE>`_ for more information.\n\nThanks to all the people at my prior company that worked with me to make this possible.\n\nLinks\n=====\n\n- Documentation: https://infuse.readthedocs.io/en/latest/\n- Releases: https://pypi.org/project/insanic-infuse/\n- Code: https://www.github.com/crazytruth/infuse/\n- Issue Tracker: https://www.github.com/crazytruth/infuse/issues\n- Insanic Documentation: http://insanic.readthedocs.io/\n- Insanic Repository: https://www.github.com/crazytruth/insanic/\n\n\n\n.. _Python: http://python.org\n.. _Release It!: http://pragprog.com/titles/mnee/release-it\n.. _PyPI: https://pypi.org/project/insanic-infuse/\n.. _Git: http://git-scm.com\n.. _pybreaker: https://github.com/danielfm/pybreaker\n.. _Insanic: https://github.com/crazytruth/insanic\n.. _Documentation: https://infuse.readthedocs.io/en/latest/\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/crazytruth/infuse",
    "keywords": "circuit breaker async asyncio microservice",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "insanic-infuse",
    "package_url": "https://pypi.org/project/insanic-infuse/",
    "platform": "",
    "project_url": "https://pypi.org/project/insanic-infuse/",
    "project_urls": {
      "Homepage": "https://github.com/crazytruth/infuse"
    },
    "release_url": "https://pypi.org/project/insanic-infuse/0.4.0/",
    "requires_dist": [
      "insanic-framework (<0.10,>=0.9.0)",
      "pybreaker",
      "wrapt"
    ],
    "requires_python": "",
    "summary": "Async circuit breaker implementation for Insanic",
    "version": "0.4.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8559543,
  "releases": {
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a736685bf2abb5f85d056a004a6309959d2a73ebe40a36cafb6018306381c3ba",
          "md5": "3cacc32b07b672335448186caad5f545",
          "sha256": "7d3a76f0af7af96e322f572dac993a12622f663993edd0085822a124eb01621f"
        },
        "downloads": -1,
        "filename": "insanic_infuse-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3cacc32b07b672335448186caad5f545",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 15017,
        "upload_time": "2020-11-02T12:27:04",
        "upload_time_iso_8601": "2020-11-02T12:27:04.104843Z",
        "url": "https://files.pythonhosted.org/packages/a7/36/685bf2abb5f85d056a004a6309959d2a73ebe40a36cafb6018306381c3ba/insanic_infuse-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "74d2a68a23de722369f9241d4904994b1274526c9f4972912893c809014aa904",
          "md5": "2e1f1cce4dfe54df7297c8a56b563ee2",
          "sha256": "2d7683d3ba89b2fb01c98e7a6050a64038002bcfec8ac4f0853c64a681850147"
        },
        "downloads": -1,
        "filename": "insanic-infuse-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2e1f1cce4dfe54df7297c8a56b563ee2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 31615,
        "upload_time": "2020-11-02T12:27:08",
        "upload_time_iso_8601": "2020-11-02T12:27:08.363456Z",
        "url": "https://files.pythonhosted.org/packages/74/d2/a68a23de722369f9241d4904994b1274526c9f4972912893c809014aa904/insanic-infuse-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a736685bf2abb5f85d056a004a6309959d2a73ebe40a36cafb6018306381c3ba",
        "md5": "3cacc32b07b672335448186caad5f545",
        "sha256": "7d3a76f0af7af96e322f572dac993a12622f663993edd0085822a124eb01621f"
      },
      "downloads": -1,
      "filename": "insanic_infuse-0.4.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3cacc32b07b672335448186caad5f545",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 15017,
      "upload_time": "2020-11-02T12:27:04",
      "upload_time_iso_8601": "2020-11-02T12:27:04.104843Z",
      "url": "https://files.pythonhosted.org/packages/a7/36/685bf2abb5f85d056a004a6309959d2a73ebe40a36cafb6018306381c3ba/insanic_infuse-0.4.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "74d2a68a23de722369f9241d4904994b1274526c9f4972912893c809014aa904",
        "md5": "2e1f1cce4dfe54df7297c8a56b563ee2",
        "sha256": "2d7683d3ba89b2fb01c98e7a6050a64038002bcfec8ac4f0853c64a681850147"
      },
      "downloads": -1,
      "filename": "insanic-infuse-0.4.0.tar.gz",
      "has_sig": false,
      "md5_digest": "2e1f1cce4dfe54df7297c8a56b563ee2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 31615,
      "upload_time": "2020-11-02T12:27:08",
      "upload_time_iso_8601": "2020-11-02T12:27:08.363456Z",
      "url": "https://files.pythonhosted.org/packages/74/d2/a68a23de722369f9241d4904994b1274526c9f4972912893c809014aa904/insanic-infuse-0.4.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}