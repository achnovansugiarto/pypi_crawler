{
  "info": {
    "author": "João Ribeiro",
    "author_email": "joao.g.ribeiro@tecnico.ulisboa.pt",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3"
    ],
    "description": "# Yet Another Agents Framework\n\n_An RL research-oriented framework for agent prototyping and evaluation_\n\n- [Introduction](#introduction)\n- [Installation](#installation)\n- [Examples](#examples)\n    - [DQN for Space Invaders](#1---space-invaders-dqn)\n    - [DQN for Cart Pole](#2---cartpole-dqn)\n    - [A3C (on GPU) for Space Invaders](#3---asynchronous-advantage-actor-critic-on-gpu)\n    - [DQN from scratch for CartPole](#4---cartpole-dqn-from-scratch)\n- [Markov Submodule](#markov)    \n- [Citing](#citing-the-project)\n- [Roadmap](#roadmap)\n- [Contributing](#contributing)\n- [Acknowledgments](#acknowledgments)\n\n## Introduction\n\nYAAF is a reinforcement learning, research-oriented framework designed for quick agent prototyping and evaluation.\n\nAt its core, YAAF follows the assumptions that:\n- Agents execute actions upon the environment (which yields observations and rewards in return)\n- Environments follow the interface from [OpenAI Gym](https://github.com/openai/gym/blob/master/gym/core.py)\n- Agents follow a clear [agent interface](yaaf/agents/Agent.py)\n- Any deep learning framework can be used for deep rl agents (even though it comes packed with [PyTorch tools](yaaf/models))\n\nAs a simple example, suppose you'd want to evaluate an agent following a random policy on the Space Invaders environment\n\n```python\nimport gym\n\nfrom yaaf.agents import RandomAgent\nfrom yaaf.evaluation import AverageEpisodeReturnMetric\nfrom yaaf.execution import EpisodeRunner\nfrom yaaf.visualization import LinePlot\n\nenv = gym.make(\"SpaceInvaders-v0\")\nagent = RandomAgent(num_actions=env.action_space.n)\nmetric = AverageEpisodeReturnMetric()\nrunner = EpisodeRunner(5, agent, env, [metric], render=True).run()\n\nplot = LinePlot(\"Space Invaders Random Policy\", x_label=\"Episode\", y_label=\"Average Episode Return\", num_measurements=5)\nplot.add_run(\"random policy\", metric.result())\nplot.show()\n\n```\n\n_Quick Disclaimer:_\n\nYAAF is not yet another deep reinforcement learning framework. \n\nIf you are looking for high-quality implementations of state-of-the-art algorithms, then I suggest the following libraries:\n\n- [OpenAI Spinning Up (2020)](https://spinningup.openai.com/en/latest/)\n- [Acme (2020)](https://github.com/deepmind/acme)\n- [Stable-Baselines (2019)](https://github.com/hill-a/stable-baselines)\n- [RLLib (2019)](https://github.com/ray-project/ray/tree/master/rllib)\n\n## Installation\nFor the first installation I suggest setting up new Python 3.7 virtual environment\n\n    $ python -m venv yaaf_test_environment\n    $ source yaaf_test_environment/bin/activate\n    $ pip install --upgrade pip setuptools\n    $ pip install yaaf  \n    $ pip install gym[atari] # Optional - Atari2600\n\n## Examples\n\n##### 1 - Space Invaders DQN\n\n```python\nimport gym\nfrom yaaf.environments.wrappers import DeepMindAtari2600Wrapper\nfrom yaaf.agents.dqn import DeepMindAtariDQNAgent\nfrom yaaf.execution import TimestepRunner\nfrom yaaf.evaluation import AverageEpisodeReturnMetric, TotalTimestepsMetric\n\nenv = DeepMindAtari2600Wrapper(gym.make(\"SpaceInvaders-v0\"))\nagent = DeepMindAtariDQNAgent(num_actions=env.action_space.n)\n\nmetrics = [AverageEpisodeReturnMetric(), TotalTimestepsMetric()]\nrunner = TimestepRunner(1e9, agent, env, metrics, render=True).run()\n```\n\n##### 2 - CartPole DQN\n\n```python\nimport gym\nfrom yaaf.agents.dqn import MLPDQNAgent\nfrom yaaf.execution import EpisodeRunner\nfrom yaaf.evaluation import AverageEpisodeReturnMetric, TotalTimestepsMetric\n\nenv = gym.make(\"CartPole-v0\")\nlayers = [(64, \"relu\"), (64, \"relu\")]\nagent = MLPDQNAgent(num_features=env.observation_space.shape[0], num_actions=env.action_space.n, layers=layers)\n\nmetrics = [AverageEpisodeReturnMetric(), TotalTimestepsMetric()]\nrunner = EpisodeRunner(100, agent, env, metrics, render=True).run()\n```\n\n##### 3 - Asynchronous Advantage Actor-Critic on GPU \n##### (my multi-task implementation, requires tensorflow-gpu)\nhttps://research.nvidia.com/publication/reinforcement-learning-through-asynchronous-advantage-actor-critic-gpu\n\n```python\nfrom yaaf.environments.wrappers import NvidiaAtari2600Wrapper\nfrom yaaf.agents.hga3c import HybridGA3CAgent\nfrom yaaf.execution import AsynchronousParallelRunner\n\nnum_processes = 8\n\nenvs = [NvidiaAtari2600Wrapper(\"SpaceInvadersDeterministic-v4\")\n        for _ in range(num_processes)\n]\n\nhga3c = HybridGA3CAgent(\n            environment_names=[env.spec.id for env in envs],\n            environment_actions=[env.action_space.n for env in envs],\n            observation_space=envs[0].observation_space.shape\n        )\n\nhga3c.start_threads()\ntrainer = AsynchronousParallelRunner(\n    agents=hga3c.workers,\n    environments=envs,\n    max_episodes=150000,\n    render_ids=[0, 1, 2]\n)\n\ntrainer.start()\nwhile trainer.running:\n    continue\n\nhga3c.save(f\"hga3c_space_invaders\")\nhga3c.stop_threads()\n```\n\n##### 4 - CartPole DQN from scratch\n\n```python\nimport gym\nfrom yaaf.agents.dqn import DQNAgent\nfrom yaaf.agents.dqn.networks import DeepQNetwork\n\nfrom yaaf.execution import EpisodeRunner\nfrom yaaf.evaluation import AverageEpisodeReturnMetric, TotalTimestepsMetric\nfrom yaaf.models.feature_extraction import MLPFeatureExtractor\n\n# Setup env\nenv = gym.make(\"CartPole-v0\")\nnum_features = env.observation_space.shape[0]\nnum_actions = env.action_space.n\n\n# Setup model\nmlp_feature_extractor = MLPFeatureExtractor(num_inputs=num_features, layers=[(64, \"relu\"), (64, \"relu\")])\nnetwork = DeepQNetwork(feature_extractors=[mlp_feature_extractor],\n                       num_actions=num_actions, learning_rate=0.001, optimizer=\"adam\", cuda=True)\n# Setup agent\nagent = DQNAgent(network, num_actions, \n                 discount_factor=0.95, initial_exploration_steps=1000, final_exploration_rate=0.001)\n\n# Run\nmetrics = [AverageEpisodeReturnMetric(), TotalTimestepsMetric()]\nrunner = EpisodeRunner(100, agent, env, metrics, render=True).run()\n```\n\n## Markov Sub-module\n\nTODO\n\n## Citing the Project\n\nWhen using YAAF in your projects, cite using:\n\n```\n@misc{yaaf,\n  author = {João Ribeiro},\n  title = {YAAF - Yet Another Agents Framework},\n  year = {2020},\n  publisher = {GitHub},\n  journal = {GitHub repository},\n  howpublished = {\\url{https://github.com/jmribeiro/yaaf}},\n}\n```\n\n## Roadmap\n\n- Documentation\n- Code cleanup\n- More algorithms\n\n## Contributing\n\nIf you want to contribute to this project, feel free to contact me by [e-mail](mailto:joao.mg.ribeiro94@gmail.com) or open an issue.\n\n## Acknowledgments\n\nYAAF was developed as a side-project to my research work and its creation was motivated by work done in the project [Ad Hoc Teams With Humans And Robots](http://gaips.inesc-id.pt/component/gaips/projects/showProject/10/44) funded by the Air Force Office of Scientific Research, in collaboration with PUC-Rio.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/jmribeiro/yaaf",
    "keywords": "Autonomous Agents,Reinforcement Learning,Deep Learning",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "yaaf",
    "package_url": "https://pypi.org/project/yaaf/",
    "platform": "",
    "project_url": "https://pypi.org/project/yaaf/",
    "project_urls": {
      "Homepage": "http://github.com/jmribeiro/yaaf"
    },
    "release_url": "https://pypi.org/project/yaaf/1.1.0/",
    "requires_dist": [
      "numpy",
      "matplotlib",
      "gym",
      "torch",
      "torchvision",
      "tensorflow",
      "sklearn",
      "pyyaml",
      "pyparsing",
      "tqdm"
    ],
    "requires_python": "",
    "summary": "YAAF: Yet Another Agents Framework",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8458404,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "14236062d61a260a214709bb230ccc873153ee4dfde5ff40b3cc7901459e2f88",
          "md5": "d6140c146b2ae12e4efc00c9c582605a",
          "sha256": "7c66c7ae1e6992635dbd3eb181f63eddea30f954cb732e8fa50aca405f7af395"
        },
        "downloads": -1,
        "filename": "yaaf-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d6140c146b2ae12e4efc00c9c582605a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 25087,
        "upload_time": "2019-06-01T17:43:22",
        "upload_time_iso_8601": "2019-06-01T17:43:22.047913Z",
        "url": "https://files.pythonhosted.org/packages/14/23/6062d61a260a214709bb230ccc873153ee4dfde5ff40b3cc7901459e2f88/yaaf-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "88516ee32bd9672312b3ba6600d1c60883bf50c9f53a4773707ebf41c95d33d6",
          "md5": "fcea87e141b5a38cf1a30f83cfa7d06c",
          "sha256": "ca7f8df9c6d83bd205e113883d71f9427c6ea4ca2eeaf0610af120134d8796c4"
        },
        "downloads": -1,
        "filename": "yaaf-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fcea87e141b5a38cf1a30f83cfa7d06c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 25091,
        "upload_time": "2019-06-01T17:43:23",
        "upload_time_iso_8601": "2019-06-01T17:43:23.667009Z",
        "url": "https://files.pythonhosted.org/packages/88/51/6ee32bd9672312b3ba6600d1c60883bf50c9f53a4773707ebf41c95d33d6/yaaf-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f2bea073e95dc565e3c97a81c608d0320a741976373c0cb83c4f7c11a8861976",
          "md5": "796e1c3dc84d6e9609b3b8a01b549865",
          "sha256": "6addd119a153a15c2083ca48f0a4926e8069ddcda32b7d3034c9cc14884d9665"
        },
        "downloads": -1,
        "filename": "yaaf-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "796e1c3dc84d6e9609b3b8a01b549865",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 53435,
        "upload_time": "2020-06-10T15:06:47",
        "upload_time_iso_8601": "2020-06-10T15:06:47.092380Z",
        "url": "https://files.pythonhosted.org/packages/f2/be/a073e95dc565e3c97a81c608d0320a741976373c0cb83c4f7c11a8861976/yaaf-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4690a7a7e2169dcc1ade306fadc6846f3a67c38801b237ada2973f5070577025",
          "md5": "fb12d16042c548777c20ee84f36c6f0a",
          "sha256": "4211faf295520166b01c86413b614373dd0cc6038709d8a563172ba2731639d8"
        },
        "downloads": -1,
        "filename": "yaaf-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "fb12d16042c548777c20ee84f36c6f0a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 53484,
        "upload_time": "2020-06-10T15:32:17",
        "upload_time_iso_8601": "2020-06-10T15:32:17.388046Z",
        "url": "https://files.pythonhosted.org/packages/46/90/a7a7e2169dcc1ade306fadc6846f3a67c38801b237ada2973f5070577025/yaaf-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0306fe261ef11f3354a3901f19e204741e8d49ddf18c1aa854f5bb053fb7dc80",
          "md5": "69a2abd4c74019cee264c533ebb1e9a6",
          "sha256": "dc22dda3ad30b565ca32856dcc638274c971bbecdb05c4f71a5499877b322f71"
        },
        "downloads": -1,
        "filename": "yaaf-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "69a2abd4c74019cee264c533ebb1e9a6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 88392,
        "upload_time": "2020-07-01T15:53:42",
        "upload_time_iso_8601": "2020-07-01T15:53:42.355637Z",
        "url": "https://files.pythonhosted.org/packages/03/06/fe261ef11f3354a3901f19e204741e8d49ddf18c1aa854f5bb053fb7dc80/yaaf-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6c063f3a642001e6ee60152a895f452164bc1852dd899f21088b39edeca45873",
          "md5": "f10a3a89122f509813019b700511890b",
          "sha256": "11772d388cb8d3fde7631644bad5bb01af3110dcd127b33d59c41b62fd959284"
        },
        "downloads": -1,
        "filename": "yaaf-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "f10a3a89122f509813019b700511890b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 53713,
        "upload_time": "2020-07-01T15:53:44",
        "upload_time_iso_8601": "2020-07-01T15:53:44.293999Z",
        "url": "https://files.pythonhosted.org/packages/6c/06/3f3a642001e6ee60152a895f452164bc1852dd899f21088b39edeca45873/yaaf-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c3fea3c44a440df165f926b4a648f34ee76b2d3adce7c9dadae8c8e6e0698c4e",
          "md5": "5f98248644590fd23813622b19a67066",
          "sha256": "e8adfd1b9e902ea1863476e3bdcd730a8a6305ddaf6012b9d682ea40c54814b8"
        },
        "downloads": -1,
        "filename": "yaaf-1.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5f98248644590fd23813622b19a67066",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 84048,
        "upload_time": "2020-07-23T16:53:22",
        "upload_time_iso_8601": "2020-07-23T16:53:22.940523Z",
        "url": "https://files.pythonhosted.org/packages/c3/fe/a3c44a440df165f926b4a648f34ee76b2d3adce7c9dadae8c8e6e0698c4e/yaaf-1.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0fab5eb2aa11813a3478f557fadc9f5d2f88dcf7cf53d375543ae796ca3d6007",
          "md5": "221908e1ebc662fca933d0086158c710",
          "sha256": "6889f75eb3abf24cfbaf678f72952f4478f0750b02ffb144a1960e2368a4ed16"
        },
        "downloads": -1,
        "filename": "yaaf-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "221908e1ebc662fca933d0086158c710",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 51814,
        "upload_time": "2020-07-23T16:53:24",
        "upload_time_iso_8601": "2020-07-23T16:53:24.750811Z",
        "url": "https://files.pythonhosted.org/packages/0f/ab/5eb2aa11813a3478f557fadc9f5d2f88dcf7cf53d375543ae796ca3d6007/yaaf-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0fc38fb6cd18bef136460a162ac338927c91bc8ce3c678260a43a495211f83cc",
          "md5": "cc804e3105bd7af2cce5aabd0146efe1",
          "sha256": "1d5acf677821d130a6b51032651ed456079890982611c00a6e196488edc5a7f6"
        },
        "downloads": -1,
        "filename": "yaaf-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cc804e3105bd7af2cce5aabd0146efe1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 84365,
        "upload_time": "2020-10-20T16:36:09",
        "upload_time_iso_8601": "2020-10-20T16:36:09.614781Z",
        "url": "https://files.pythonhosted.org/packages/0f/c3/8fb6cd18bef136460a162ac338927c91bc8ce3c678260a43a495211f83cc/yaaf-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c962d6f1aa4e860d7843bdf41f2c6c6e367fce495c38dcc24963550411e7f1e0",
          "md5": "8e4c74ec97287e6614e1d9e8d49c99f7",
          "sha256": "36e29d09384999be2727b80b19e1a3acaeaa8d92918f982721e4c67432f101c0"
        },
        "downloads": -1,
        "filename": "yaaf-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8e4c74ec97287e6614e1d9e8d49c99f7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 51794,
        "upload_time": "2020-10-20T16:36:12",
        "upload_time_iso_8601": "2020-10-20T16:36:12.328479Z",
        "url": "https://files.pythonhosted.org/packages/c9/62/d6f1aa4e860d7843bdf41f2c6c6e367fce495c38dcc24963550411e7f1e0/yaaf-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0fc38fb6cd18bef136460a162ac338927c91bc8ce3c678260a43a495211f83cc",
        "md5": "cc804e3105bd7af2cce5aabd0146efe1",
        "sha256": "1d5acf677821d130a6b51032651ed456079890982611c00a6e196488edc5a7f6"
      },
      "downloads": -1,
      "filename": "yaaf-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "cc804e3105bd7af2cce5aabd0146efe1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 84365,
      "upload_time": "2020-10-20T16:36:09",
      "upload_time_iso_8601": "2020-10-20T16:36:09.614781Z",
      "url": "https://files.pythonhosted.org/packages/0f/c3/8fb6cd18bef136460a162ac338927c91bc8ce3c678260a43a495211f83cc/yaaf-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c962d6f1aa4e860d7843bdf41f2c6c6e367fce495c38dcc24963550411e7f1e0",
        "md5": "8e4c74ec97287e6614e1d9e8d49c99f7",
        "sha256": "36e29d09384999be2727b80b19e1a3acaeaa8d92918f982721e4c67432f101c0"
      },
      "downloads": -1,
      "filename": "yaaf-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "8e4c74ec97287e6614e1d9e8d49c99f7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 51794,
      "upload_time": "2020-10-20T16:36:12",
      "upload_time_iso_8601": "2020-10-20T16:36:12.328479Z",
      "url": "https://files.pythonhosted.org/packages/c9/62/d6f1aa4e860d7843bdf41f2c6c6e367fce495c38dcc24963550411e7f1e0/yaaf-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}