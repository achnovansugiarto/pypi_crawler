{
  "info": {
    "author": "",
    "author_email": "Hubert <hubert.hamelin@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3"
    ],
    "description": "# AugFeat\nAugFeat is a Python library that provides data augmentation in feature space. It is an implementation of the method\ndescribed in the paper 'Dataset Augmentation in Feature Space' written by Terrance DeVries and Graham W. Taylor in 2017.\n\n\n## Installation\nUse the package manager pip to install AugFeat.\n```bash\npip install augfeat\n```\n\n## Usage\nThere are a few limitations for now if using this library. However using it is extremely simple.\n\n### Prerequisites\nThe dataset on which you want to perform data augmentation operations has to respect the following:\n- All classes are in a single main directory, its name has no importance.\n- Each class has its own directory inside the main directory, named with the class name.\n- All elements of a class are inside the corresponding class directory, names have no importance.\n- Version 1.0.0 (first release) only handles numpy datasets.\n- All elements of a single class must have the exact same shapes, which means no missing data.\n\n### How to use it\n```python\nfrom augfeat.balancer import Balancer\nfrom augfeat.custom_types import DataTypes\nfrom augfeat import config\n\n# It's up to you to choose which class in your dataset will be augmented, and how much.\ndataset_path = './your/main/dataset/directory/path'\ntarget_path = './your/target/directory/path/for/augmented/data'\nclass_name = 'one_of_your_classes_name'\naugmentation_target = 42\n\n# Create Balancer instance.\nbalancer = Balancer(dataset_path, target_path, DataTypes.NUMPY)\n\n# Call augment_class to create new data relevant to your original class.\nbalancer.augment_class(class_name, augmentation_target, config.AUTOENCODER_TRAINING_CONFIG_MEDIUM)\n```\n\n### Results example\nNewly created elements will be saved on disk each time the augment_class method is called. After checking if the quality\nis up to your expectations, you can choose  to merge the augmented elements with your original data, or keep them \nseparated.\n\nExamples of results obtained respectively for the MNIST dataset and the UJI Pen Characters dataset are in the tests \nfolder.\n\n\n### Configuration details\nYou can either use one of the default configurations from the config.py file, or your own configuration. \nSee the example below:\n```python\nautoencoder_config = {\n    'latent_dim': 128,  # higher dim => can take more complex data but harder to train.\n    'dropout_rate': 0.2,\n    'epochs': 200,  # depends on your data.\n    'batch_size': 128,  # higher => faster but careful with your available memory.\n    'learning_rate': 1e-3\n}\n```\n\n## Roadmap\nExtend formats handled by the library:\n- 3D numpy matrices and higher dimensions.\n- Images (png)\n- Dataframes (within restrictive conditions)\n\nEnhance augmented data quality:\n- Post processing enhancement of generated elements\n- Add other types of autoencoders to better suit various data (CNN for images ...)\n- Learning rate scheduler for the autoencoder class \n- Reverse the order of input sequences as suggested in the original paper\n\nExtend possible execution modes:\n- Add distinct CPU and GPU execution mode options\n\nMake user experience easier:\n- Add a more extensive and comprehensive configuration for both the balancer and the autoencoder\n\n## Contributing\nJust create a new branch to experiment your functionalities, and make a merge request.\n\n## Authors and acknowledgment\n- Hubert Hamelin : keep in mind this implementation is personal, and differs from the one which was used in the original\npaper.\n\n## License\nMIT License, see LICENSE file.\n\n## Project Status\n1.0.0 is the very first release ! See the Roadmap section to see everything that is left to do.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "augmentation,data,machine-learning",
    "license": "The MIT License (MIT) Copyright © 2022 <copyright holders>  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "maintainer": "",
    "maintainer_email": "",
    "name": "augfeat",
    "package_url": "https://pypi.org/project/augfeat/",
    "platform": null,
    "project_url": "https://pypi.org/project/augfeat/",
    "project_urls": {
      "Homepage": "https://github.com/HubertHamelin/augfeat"
    },
    "release_url": "https://pypi.org/project/augfeat/1.0.0/",
    "requires_dist": [
      "numpy",
      "scikit-learn",
      "tqdm",
      "matplotlib",
      "keras",
      "pandas",
      "Pillow",
      "idx2numpy"
    ],
    "requires_python": ">=3.9",
    "summary": "Data augmentation in features space",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17100216,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "306c5b607ee7691eb69a836f860dee2f76ad6e6657c46fca435b4e802f4fcefa",
          "md5": "2a69590cccdccd422ad7ff08c88605fa",
          "sha256": "e3c755d12935300e1218182df24559ebd23c1a5d08792f0d96e7b07de47dcaf0"
        },
        "downloads": -1,
        "filename": "augfeat-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2a69590cccdccd422ad7ff08c88605fa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 10669,
        "upload_time": "2023-02-28T19:20:44",
        "upload_time_iso_8601": "2023-02-28T19:20:44.276399Z",
        "url": "https://files.pythonhosted.org/packages/30/6c/5b607ee7691eb69a836f860dee2f76ad6e6657c46fca435b4e802f4fcefa/augfeat-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c0fb1898e46379104a0fff2f61e2487f6fd9954d80a2b8ffdf502d8d29f3809f",
          "md5": "d03a11a437e2889dcae756a6bbe4a231",
          "sha256": "5a4e2f520cd697fc431f2e0d929894e6f883e9bc56920a0e99fac4caeaa0b6d0"
        },
        "downloads": -1,
        "filename": "augfeat-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d03a11a437e2889dcae756a6bbe4a231",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 10995,
        "upload_time": "2023-02-28T19:20:46",
        "upload_time_iso_8601": "2023-02-28T19:20:46.571463Z",
        "url": "https://files.pythonhosted.org/packages/c0/fb/1898e46379104a0fff2f61e2487f6fd9954d80a2b8ffdf502d8d29f3809f/augfeat-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "306c5b607ee7691eb69a836f860dee2f76ad6e6657c46fca435b4e802f4fcefa",
        "md5": "2a69590cccdccd422ad7ff08c88605fa",
        "sha256": "e3c755d12935300e1218182df24559ebd23c1a5d08792f0d96e7b07de47dcaf0"
      },
      "downloads": -1,
      "filename": "augfeat-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2a69590cccdccd422ad7ff08c88605fa",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 10669,
      "upload_time": "2023-02-28T19:20:44",
      "upload_time_iso_8601": "2023-02-28T19:20:44.276399Z",
      "url": "https://files.pythonhosted.org/packages/30/6c/5b607ee7691eb69a836f860dee2f76ad6e6657c46fca435b4e802f4fcefa/augfeat-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c0fb1898e46379104a0fff2f61e2487f6fd9954d80a2b8ffdf502d8d29f3809f",
        "md5": "d03a11a437e2889dcae756a6bbe4a231",
        "sha256": "5a4e2f520cd697fc431f2e0d929894e6f883e9bc56920a0e99fac4caeaa0b6d0"
      },
      "downloads": -1,
      "filename": "augfeat-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "d03a11a437e2889dcae756a6bbe4a231",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 10995,
      "upload_time": "2023-02-28T19:20:46",
      "upload_time_iso_8601": "2023-02-28T19:20:46.571463Z",
      "url": "https://files.pythonhosted.org/packages/c0/fb/1898e46379104a0fff2f61e2487f6fd9954d80a2b8ffdf502d8d29f3809f/augfeat-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}