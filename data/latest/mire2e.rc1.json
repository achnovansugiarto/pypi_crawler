{
  "info": {
    "author": "Jonathan Raad",
    "author_email": "jraad@sinc.unl.edu.ar",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# miRe2e\n\nThis package contains the original methods proposed in:\n\n    [1] J. Raad, L. A. Bugnon, D. H. Milone and G. Stegmayer, \"miRe2e: a full\n    end-to-end deep model based on  Transformers for prediction\n    of pre-miRNAs from raw genome-wide data\", 2021.\n\nmiRe2e is a novel deep learning model based on Transformers that allows\nfinding  pre-miRNA sequences in raw genome-wide data. This model is a full\nend-to-end neural architecture, using only the raw sequences as inputs.\nThis way, there is no need to use other libraries for preprocessing RNA sequences.\n\nThe model has 3 stages, as depicted in the figure:\n\n1. Structure prediction model: predicts RNA secondary structure using only \n    the input  sequence.\n2. MFE estimation model: estimates the minimum free energy when folding (MFE) the secondary  structure.\n3. Pre-miRNA classifier: uses the input RNA sequence and the outputs of the two previous\n  models to give a score to the input sequence in order to determine if it is a  pre-miRNA candidate.  \n\n![Abstract](abstract.png)\n\nThis repository provides a miRe2e model pre-trained with known pre-miRNAs\nfrom *H. sapiens*. It is open sourced and free to use. If you use any of\nthe following, please cite them properly. \n\nAn easy to try online demo is available at [https://sinc.unl.edu.\nar/web-demo/miRe2e/](https://sinc.unl.edu.ar/web-demo/miRe2e/). This demo runs \na pre-trained model on small RNA sequences. To use larger datasets, or \ntrain your oun model, see the following instructions.  \n\n## Installation\n\nYou need a Python>=3.7 distribution to use this package. You can install\nthe package from PyPI:\n\n    pip install miRe2e\n\ndepending on your system configuration. You can also clone this repository and install with:\n\n    git clone git@github.com:sinc-lab/miRe2e.git\n    cd miRe2e\n    pip install .\n\n## Using the trained models\n\nWhen using miRe2e, pre-trained weights will be automatically downloaded.\nThe model receives a fasta file with a raw RNA sequence. The sequence is\nanalyzed with a sliding window, and a pre-miRNA score is assigned to each part. \n\nYou can find a complete demonstration of usage in\n[miRe2e usage](https://colab.research.google.com/drive/1xeOrjaYP150War9R-LsPpukpJ7_TV0sh#scrollTo=Uan5dhSzegA2).\n\nThe notebook is also in this repository: [miRe2e_usage.ipynb](miRe2e_usage.ipynb).\n\n## Training the models\n\nTraining the models may take several hours and requires GPU processing \ncapabilities beyond the ones provided freely by google colab.  In  the \nfollowing, there are instructions for training each stage of this \nmodel. \n\nEach one of the following steps will train a stage of the model, replacing \nthe current model during the rest of the program. New models are saved as \npickle files (*.pkl). These files can be loaded using \n\n```python\nfrom miRe2e import MiRe2e\nnew_model = MiRe2E(mfe_model_file=\"trained_mfe_predictor.pkl\",\n                   structure_model_file=\"trained_structure_predictor.pkl\",\n                   predictor_model_file=\"trained_predictor.pkl\")\n```\n\n\n\n### Structure prediction model\n\nTo train the Structure prediction model, run:\n```python\nfrom miRe2e import MiRe2e\nmodel = MiRe2e(device=\"cuda\")\nmodel.fit_structure(\"hairpin_examples.fa\")\n```\nThe fasta file should contain sequences of hairpins and it's secondary structure.\n\n### MFE estimation model\n\nTo train the Structure prediction model, run:\n```python\nfrom miRe2e import MiRe2e\nmodel = MiRe2e(device=\"cuda\")\nmodel.fit_mfe(\"mfe_examples.fa\")\n```\n\nThe fasta file should contain sequences of pre-miRNAs, hairpin and flats with the target MFE. \n\n\n### Pre-miRNA classifier model\n\nTo train the pre-miRNA classifier model, you need at least one set of \npositive samples (known pre-miRNA sequences) and a set of negative samples. \nEach sample must be a trimmed to 100 nt in length to use the current \nmodel configuration. These should be stored in a single FASTA file, one sample \nper row.  Furthermore, since the pre-miRNAs have an average length of less \nthan 100nt, it is  necessary to randomly trim negative training sequences \nto match the positive distribution.  This prevents that training got  \nbiased by \nthe length of the sequences.          \n\nTo train this stage, run:\n\n```python\nfrom miRe2e import MiRe2e\nmodel = MiRe2e(device=\"cuda\")\nmodel.fit(pos_fname=\"positive_examples.fa\", \n          neg_fname=\"negative_examples.fa\")\n```\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sinc-lab/miRe2e",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "miRe2e",
    "package_url": "https://pypi.org/project/miRe2e/",
    "platform": "",
    "project_url": "https://pypi.org/project/miRe2e/",
    "project_urls": {
      "Homepage": "https://github.com/sinc-lab/miRe2e",
      "Webdemo": "https://sinc.unl.edu.ar/web-demo/miRe2e/"
    },
    "release_url": "https://pypi.org/project/miRe2e/0.17/",
    "requires_dist": [
      "torch (>=1.7)",
      "biopython (>=1.78)",
      "scikit-learn (>=0.23)",
      "tqdm"
    ],
    "requires_python": ">=3.7",
    "summary": "An end-to-end deep neural network based on Transformers for pre-miRNA prediction",
    "version": "0.17",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10309386,
  "releases": {
    "0.17": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bc04c643e4ee9c9c682b22a0c57a5f3ce08baa51d69a237f2cb7904a11d52f18",
          "md5": "e1869a0789e12e8c3e6e8dee053b7384",
          "sha256": "d94350441191e19a76448b1b2733fe8cecb2a42899f19b81d690a93c906d43c1"
        },
        "downloads": -1,
        "filename": "miRe2e-0.17-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e1869a0789e12e8c3e6e8dee053b7384",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 30866,
        "upload_time": "2021-05-08T02:22:48",
        "upload_time_iso_8601": "2021-05-08T02:22:48.815805Z",
        "url": "https://files.pythonhosted.org/packages/bc/04/c643e4ee9c9c682b22a0c57a5f3ce08baa51d69a237f2cb7904a11d52f18/miRe2e-0.17-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bad9281be7a02acfd7286ddf6ca341d7a83a3d3da6ed9cf70ee1d3cc959322ac",
          "md5": "8b0ca0340f292aafe3303ca8a4d35710",
          "sha256": "47b44daaee628108dce780a4f7b3e2038efe4a9e1d509bc3ce23ad1c283f5e01"
        },
        "downloads": -1,
        "filename": "miRe2e-0.17.tar.gz",
        "has_sig": false,
        "md5_digest": "8b0ca0340f292aafe3303ca8a4d35710",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 30275,
        "upload_time": "2021-05-08T02:22:50",
        "upload_time_iso_8601": "2021-05-08T02:22:50.357127Z",
        "url": "https://files.pythonhosted.org/packages/ba/d9/281be7a02acfd7286ddf6ca341d7a83a3d3da6ed9cf70ee1d3cc959322ac/miRe2e-0.17.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bc04c643e4ee9c9c682b22a0c57a5f3ce08baa51d69a237f2cb7904a11d52f18",
        "md5": "e1869a0789e12e8c3e6e8dee053b7384",
        "sha256": "d94350441191e19a76448b1b2733fe8cecb2a42899f19b81d690a93c906d43c1"
      },
      "downloads": -1,
      "filename": "miRe2e-0.17-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e1869a0789e12e8c3e6e8dee053b7384",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 30866,
      "upload_time": "2021-05-08T02:22:48",
      "upload_time_iso_8601": "2021-05-08T02:22:48.815805Z",
      "url": "https://files.pythonhosted.org/packages/bc/04/c643e4ee9c9c682b22a0c57a5f3ce08baa51d69a237f2cb7904a11d52f18/miRe2e-0.17-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bad9281be7a02acfd7286ddf6ca341d7a83a3d3da6ed9cf70ee1d3cc959322ac",
        "md5": "8b0ca0340f292aafe3303ca8a4d35710",
        "sha256": "47b44daaee628108dce780a4f7b3e2038efe4a9e1d509bc3ce23ad1c283f5e01"
      },
      "downloads": -1,
      "filename": "miRe2e-0.17.tar.gz",
      "has_sig": false,
      "md5_digest": "8b0ca0340f292aafe3303ca8a4d35710",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 30275,
      "upload_time": "2021-05-08T02:22:50",
      "upload_time_iso_8601": "2021-05-08T02:22:50.357127Z",
      "url": "https://files.pythonhosted.org/packages/ba/d9/281be7a02acfd7286ddf6ca341d7a83a3d3da6ed9cf70ee1d3cc959322ac/miRe2e-0.17.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}