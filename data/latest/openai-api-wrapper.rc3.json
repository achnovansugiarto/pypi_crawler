{
  "info": {
    "author": "Jiangwen Su",
    "author_email": "531045572@qq.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "\nOpenAI API Wrapper for Advanced ChatGPT Development\n===================================================\n\nThis Python package provides a comprehensive and efficient wrapper for the OpenAI API, designed to support advanced application development based on ChatGPT. The package simplifies the integration process and offers additional functionalities such as conversation management, model fine-tuning, retrieval of embeddings, automatic question generation, and offline model execution.\n\nFeatures\n--------\n\n* Easy interaction with the OpenAI API for ChatGPT applications\n* Conversation management for multiple chat sessions\n* Support for fine-tuning the ChatGPT model\n* Retrieval of embeddings for specific text passages\n* Automatic question generation for given paragraphs\n* Offline model execution with compatible models\n\nInstallation\n------------\n\nYou can install the package using pip:\n\n`pip install openai-api-wrapper`\n\nUsage\n-----\n\nHere is a basic example of how to use the OpenAI API Wrapper:\n\npython\n\n```python\n    \"\"\"\n    Set environment variable OPENAI_API_KEY to your OpenAI API key.\n    Set environment variable OPENAI_PROXY to your OpenAI proxy setting, \n    such as \"http://<proxy_server>:<proxy_port>\" or \"socks5://<proxy_server>:<proxy_port>\" .\n    \"\"\"\n    from openai_api_wrapper import ChatBot\n\n    # Initialize the Chatbot instance\n    chatbot = ChatBot()\n\n    def show_result(conversation_id, reply_content):\n        print(f\"[{conversation_id}] AI Response: {reply_content}\")\n        conversation_turns = chatbot.get_conversation_turns(conversation_id=conversation_id)\n        print(f\"[{conversation_id}] Conversation turns: {conversation_turns}\")\n\n    # ----- The default conversation -----\n\n    # Generate a reply to the given prompt.\n    prompt = \"What is the capital of France?\"\n    print(f\"[default] User message: {prompt}\")\n    reply_content= chatbot.ask(prompt)\n    show_result(\"default\", reply_content)\n\n    # Generate a reply to the given prompt using streaming API.\n    prompt = \"Tell me a joke.\"\n    print(f\"[default] User message: {prompt}\")\n    reply_content= chatbot.ask(prompt, stream=True)\n    show_result(\"default\", reply_content)\n\n    # ----- Two conversations -----\n\n    # Generate a reply_contentto the given prompt.\n    conversation_id = \"conversation_1\"\n    prompt = \"What is the capital of France?\"\n    print(f\"[{conversation_id}] User message: {prompt}\")\n\n    reply_content= chatbot.ask(prompt, conversation_id=conversation_id)\n    show_result(conversation_id, reply_content)\n\n\n    # Generate a reply_contentto the given prompt using streaming API.\n    conversation_id = \"conversation_2\"\n    prompt = \"Tell me a joke.\"\n    print(f\"[{conversation_id}] User message: {prompt}\")\n\n    reply_content= chatbot.ask(prompt, conversation_id=conversation_id, stream=True)\n    # unfinished_reply_content= \"\"\n    # for chunked_reply_content in chatbot.ask_stream_iterator(prompt, conversation_id=conversation_id):\n    #     unfinished_reply_content+= chunked_reply_content\n    #     print(unfinished_reply_content)\n    # reply_content= chatbot.get_last_reply_content(conversation_id)\n\n    show_result(conversation_id, reply_content)\n```\n\nFor a more detailed example with all the available features, check out the `example.py` file in the repository.\n\nDocumentation\n-------------\n\nYou can find the complete documentation for this package in the `docs` folder, or check out the source code for more details on the implementation.\n\nRoadmap\n-------\n\nWe plan to continually improve and expand the functionality of this package. Some of the upcoming features include:\n\n* Integration with various machine learning frameworks\n* Support for multi-modal inputs (e.g., text, images, audio)\n* Expansion of available pre-trained models\n* Simplified deployment options for various platforms\n\nContributing\n------------\n\nWe welcome contributions from the community! If you'd like to contribute, please follow these steps:\n\n1. Fork the repository\n2. Create a new branch for your changes (`git checkout -b my-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push the branch (`git push origin my-feature`)\n5. Create a new pull request\n\nPlease make sure to add tests and documentation for any new features or changes.\n\nLicense\n-------\n\nThis project is licensed under the MIT License. See the `LICENSE` file for more details.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/runnable.it/openai-api-wrapper",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "openai-api-wrapper",
    "package_url": "https://pypi.org/project/openai-api-wrapper/",
    "platform": null,
    "project_url": "https://pypi.org/project/openai-api-wrapper/",
    "project_urls": {
      "Homepage": "https://gitlab.com/runnable.it/openai-api-wrapper"
    },
    "release_url": "https://pypi.org/project/openai-api-wrapper/0.3.0/",
    "requires_dist": [
      "openai"
    ],
    "requires_python": "",
    "summary": "This Python package provides a comprehensive and efficient wrapper for the OpenAI API, designed to support advanced application development based on ChatGPT.",
    "version": "0.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17361557,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "db6f0ce1829368604be1a8a7bdb2cea83bcef44828a742a821911e637368d85a",
          "md5": "c8efeb1007e465429f4dc60c80893d8f",
          "sha256": "a49f2ddf82a7e7b269fc799516a1ef5b9826d405e37190ca4d0afa7bde3b33ce"
        },
        "downloads": -1,
        "filename": "openai_api_wrapper-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c8efeb1007e465429f4dc60c80893d8f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5331,
        "upload_time": "2023-03-20T06:44:22",
        "upload_time_iso_8601": "2023-03-20T06:44:22.310330Z",
        "url": "https://files.pythonhosted.org/packages/db/6f/0ce1829368604be1a8a7bdb2cea83bcef44828a742a821911e637368d85a/openai_api_wrapper-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c29dbc5c22ef4243abfcebd19c6bf39c10956758771b3074c0b1000f81478da9",
          "md5": "e7452d81f8e0d88263a416cece9a55ef",
          "sha256": "dc60af5b851c948c7ba7c35a4dbe6140c75ac3d1d0e02b3b6660fb8cc26f51c8"
        },
        "downloads": -1,
        "filename": "openai-api-wrapper-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e7452d81f8e0d88263a416cece9a55ef",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5647,
        "upload_time": "2023-03-20T06:44:25",
        "upload_time_iso_8601": "2023-03-20T06:44:25.896120Z",
        "url": "https://files.pythonhosted.org/packages/c2/9d/bc5c22ef4243abfcebd19c6bf39c10956758771b3074c0b1000f81478da9/openai-api-wrapper-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "17e4964542f05eef489d701da9ef3de6350746bf7283a26f22201f5b16056746",
          "md5": "471ade0471f72ab53e51379422200b1c",
          "sha256": "725931a8907487759cbe3323bf87c7a6fec947a9544405a3400291d0a2cd7cfa"
        },
        "downloads": -1,
        "filename": "openai_api_wrapper-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "471ade0471f72ab53e51379422200b1c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5335,
        "upload_time": "2023-03-20T06:51:11",
        "upload_time_iso_8601": "2023-03-20T06:51:11.856796Z",
        "url": "https://files.pythonhosted.org/packages/17/e4/964542f05eef489d701da9ef3de6350746bf7283a26f22201f5b16056746/openai_api_wrapper-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "34f73b96647388a2f98be60b51cd0b3c724d7f0d5f90bbf2853f066cc2ef5939",
          "md5": "59999b4b0f15c613bc8291b616504eaa",
          "sha256": "908df167c5470c2ea1b76b81a9ff17b3bec146d140916e53e2e81b3aa74a1650"
        },
        "downloads": -1,
        "filename": "openai-api-wrapper-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "59999b4b0f15c613bc8291b616504eaa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5628,
        "upload_time": "2023-03-20T06:51:14",
        "upload_time_iso_8601": "2023-03-20T06:51:14.022997Z",
        "url": "https://files.pythonhosted.org/packages/34/f7/3b96647388a2f98be60b51cd0b3c724d7f0d5f90bbf2853f066cc2ef5939/openai-api-wrapper-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc7c85481e9bf186d6b90c700241f658b6d255837a6e68b40aa81f6ac99d3f11",
          "md5": "4aee8634bf8509202020de1c2c098f49",
          "sha256": "66df1782f5ddfa6d23ce4eb2d386b257f13fdfcbb14819f9d45b786877db2379"
        },
        "downloads": -1,
        "filename": "openai_api_wrapper-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4aee8634bf8509202020de1c2c098f49",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5691,
        "upload_time": "2023-03-20T10:00:52",
        "upload_time_iso_8601": "2023-03-20T10:00:52.351909Z",
        "url": "https://files.pythonhosted.org/packages/dc/7c/85481e9bf186d6b90c700241f658b6d255837a6e68b40aa81f6ac99d3f11/openai_api_wrapper-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4d81827a766e7e0c48b16010de22cbda281689dbb7f0c770e9ab04be0bae313",
          "md5": "2b10f00f6bd965898e4a14fca40b58f3",
          "sha256": "a7174591211ce896eb9a9ee2ec6518cf955946750e72507d9c8fac64a5bdd844"
        },
        "downloads": -1,
        "filename": "openai-api-wrapper-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2b10f00f6bd965898e4a14fca40b58f3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5926,
        "upload_time": "2023-03-20T10:00:54",
        "upload_time_iso_8601": "2023-03-20T10:00:54.975475Z",
        "url": "https://files.pythonhosted.org/packages/a4/d8/1827a766e7e0c48b16010de22cbda281689dbb7f0c770e9ab04be0bae313/openai-api-wrapper-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dc7c85481e9bf186d6b90c700241f658b6d255837a6e68b40aa81f6ac99d3f11",
        "md5": "4aee8634bf8509202020de1c2c098f49",
        "sha256": "66df1782f5ddfa6d23ce4eb2d386b257f13fdfcbb14819f9d45b786877db2379"
      },
      "downloads": -1,
      "filename": "openai_api_wrapper-0.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4aee8634bf8509202020de1c2c098f49",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 5691,
      "upload_time": "2023-03-20T10:00:52",
      "upload_time_iso_8601": "2023-03-20T10:00:52.351909Z",
      "url": "https://files.pythonhosted.org/packages/dc/7c/85481e9bf186d6b90c700241f658b6d255837a6e68b40aa81f6ac99d3f11/openai_api_wrapper-0.3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a4d81827a766e7e0c48b16010de22cbda281689dbb7f0c770e9ab04be0bae313",
        "md5": "2b10f00f6bd965898e4a14fca40b58f3",
        "sha256": "a7174591211ce896eb9a9ee2ec6518cf955946750e72507d9c8fac64a5bdd844"
      },
      "downloads": -1,
      "filename": "openai-api-wrapper-0.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "2b10f00f6bd965898e4a14fca40b58f3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5926,
      "upload_time": "2023-03-20T10:00:54",
      "upload_time_iso_8601": "2023-03-20T10:00:54.975475Z",
      "url": "https://files.pythonhosted.org/packages/a4/d8/1827a766e7e0c48b16010de22cbda281689dbb7f0c770e9ab04be0bae313/openai-api-wrapper-0.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}