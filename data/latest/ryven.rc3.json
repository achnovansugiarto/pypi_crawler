{
  "info": {
    "author": "Leon Thomm",
    "author_email": "l.thomm@mailbox.org",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "<p align=\"center\">\n  <img src=\"./docs/img/logo.png\" alt=\"drawing\" width=\"70%\"/>\n</p>\n\n# A simple visual node editor for Python\n\n**Ryven combines flow-based visual scripting with Python. It gives you absolute freedom for your nodes and a simple system for programming them. While there are some example node packages, you will most likely rely mostly on your own nodes.**\n\n![](./docs/img/themes_with_logo.png)\n\n<!-- Ryven is based on [ryvencore](https://github.com/leon-thomm/ryvencore) and [ryvencore-qt](https://github.com/leon-thomm/ryvencore-qt). A detailed guide for Ryven can be found [here](https://ryven.org/guides.html#/). -->\n\nWhile Ryven has a large Qt-based frontend which affects performance of flow execution, you can disable particularly expensive features, and a project made in the editor can be deployed directly on the backend (ryvencore) via RyvenConsole, which does not have a single dependency!\n\n| Ryven repos on GitHub | -------------------------------------------------------------------------------- |\n|---|---|\n| [ryvencore](https://github.com/leon-thomm/ryvencore) | backend / core framework |\n| [ryvencore-qt](https://github.com/leon-thomm/ryvencore-qt) | Qt frontend |\n| [ryven-blender](https://github.com/leon-thomm/ryven-blender) | Ryven plugin for Blender |\n| [ryven-unreal](https://github.com/leon-thomm/ryven-unreal) | Ryven plugin for Unreal Engine |\n| [ryven-website](https://github.com/leon-thomm/ryven-website) | Ryven website sources |\n| [PythonOCC nodes for Ryven](https://github.com/Tanneguydv/Pythonocc-nodes-for-Ryven) | Ryven nodes for PythonOCC |\n\nTo get started with Ryven, these are the resources that guide you through the process (in an order that makes the most sense):\n1. the quick start guide below\n2. the tutorials in the `docs/node_tutorials` directory\n3. a longer [guide on the website](https://ryven.org/guide#/) for details\n\nRyven comes with some example nodes, but these are, indeed, just examples, and there's no guarantee that all of them will stay. I would like to open a repository for maintaining particularly useful (frameworks of) nodes, but I will need contributors for that.\n\n### Installation\n\n```\npip install ryven\n```\n\nand now you can launch it by running `ryven` on your terminal, and `ryven_console` for RyvenConsole. If you want to start Ryven from a Python script, just import it and run it like this\n\n```python\nimport ryven\n\nryven.run_ryven(\n    # args...\n)\n\n```\n\n### quick start\n\nA super quick intro to Ryven.\n\n**editor usage**\n\nOpen Ryven by typing `ryven` in your terminal (or running `Ryven.py` with python), and create a new project. Import some example nodes via `File -> Import Example Nodes` and select `std/nodes.py`. You should now see a long list of nodes on the left. Drag and drop them into the scene and get a feeling for how they work, everything is being executed at realtime. For instance, drag two `val` nodes into the scene, wire them together with a `+` node and display the result in a `result` node. Now replace one of them with a slider node generating real numbers. You can also get an interactive nodes list preview inside the scene by right-clicking. You can pan around also with the right mouse button, and zoom via `ctrl + scroll`.  You can also create new scripts, rename and delete them.\n\nNow let's check out the small example projects: open a new Ryven window and load one of them. Take a closer look and understand what they do.\n\nAt this point you are ready to start building your own nodes.\n\n**defining nodes**\n\nNavigate to the `~/.ryven/packages/` directory and create a new folder `<your_package_name>`. Inside this folder create a python file `nodes.py` and fill it with the following content:\n\n```python\nfrom ryven.NENV import *\n\n# your node definitions go here\n\nexport_nodes(\n    # list your node classes here, as tuple\n)\n```\n\nand now you can define your own node classes. Reference the ones you want to expose to Ryven in the `export_nodes` function (for example `export_nodes(MyNode, )` or `export_nodes(Node1, Node2, )`). Let's define two basic nodes:\n\none which generates random numbers\n\n```python\nfrom random import random\n\nclass RandNode(Node):\n    \"\"\"Generates scaled random float values\"\"\"\n    # the docstring will be shown as tooltip in the editor\n\n    title = 'Rand'  # the display_title is title by default\n    tags = ['random', 'numbers']  # for better search\n    \n    init_inputs = [  # one input\n        NodeInputBP(dtype=dtypes.Data(default=1))\n        # the dtype will automatically provide a suitable widget\n    ]\n    init_outputs = [  # and one output\n        NodeOutputBP()\n    ]\n    color = '#fcba03'\n\n    def update_event(self, inp=-1):\n        # update first output\n        self.set_output_val(0, \n            random() * self.input(0)  # random float between 0 and value at input\n        )\n```\n\nand another one which prints them\n\n```python\nclass PrintNode(Node):\n    title = 'Print'\n    init_inputs = [\n        NodeInputBP(),\n    ]\n    color = '#A9D5EF'\n\n    def update_event(self, inp=-1):\n        print(self.input(0))\n```\n\nand that's it! Go ahead and import your nodes package in Ryven. Place both in the scene and connect the `Rand` node to your `Print` node.\n\n***\n\nYou can do a lot more than shown above. A summary of the main features:\n\n- **many modifiable themes**, including light themes\n- **simple and unrestricted nodes system**\n- **actions / right-click operations system for nodes**\n- **variables system** with update mechanism for nodes that automatically adapt to change of data\n- **logging support**\n- **rendering flow images**\n- **stylus support** for adding handwritten notes / drawings on touch devices\n- **exec flow support** like [UnrealEngine BluePrints](https://docs.unrealengine.com/4.26/en-US/ProgrammingAndScripting/Blueprints/)\n- **Qt widgets support**\n\nand some examples for those:\n\n#### actions / right-click operations system for nodes\nwhich can be edited through the API at any time.\n```python\nclass MyNode(Node):\n    ...\n\n    def a_method(self):\n        self.actions['do something'] = {\n            'method': self.do_sth,\n        }\n\n    # with some method...\n    def do_sth(self):\n        ...\n```\n\n#### Qt widgets\nYou can add custom Qt widgets for your nodes. Define a `widgets.py` file next to your `nodes.py` with similar structure to `nodes.py`, see the guide for detailed instructions.\n\n`widgets.py`\n```python\nfrom ryven.NWENV import *\nfrom qtpy.QtWidgets import QWidget\n\nclass SomeMainWidget(MWB, QWidget):\n    def __init__(self, params):\n        MWB.__init__(self, params)\n        QWidget.__init__(self)\n    ...\n\nclass SomeInputWidget(IWB, QWidget):\n    def __init__(self, params):\n        IWB.__init__(self, params)\n        QWidget.__init__(self)\n    ...\n\nexport_widgets(\n    SomeMainWidget,\n    SomeInputWidget,\n)\n```\n`nodes.py`\n```python\nclass MyNode(Node):\n    main_widget_class = MyNode_MainWidget\n    main_widget_pos = 'below ports'  # alternatively 'between ports'\n```\n\n#### stylus support\n<p align=\"center\">\n  <img src=\"./docs/img/stylus_dark.png\" alt=\"drawing\" width=\"70%\"/>\n</p>\n\n#### logging support\n```python\nimport logging\n\nclass MyNode(Node):\n    def somewhere(self):\n        self.logger = self.new_logger('nice log')\n    \n    def update_event(self, inp=-1):\n        self.logger.info('updated!')\n```\n\n#### variables system\nwith an update mechanism to build nodes that automatically adapt to change of data.\n\n```python\nclass MyNode(Node):\n    def a_method(self):\n        self.register_var_receiver('x', method=self.process)\n\n    # with some method...\n    def process(self, val_of_x):\n        # processing new value of var 'x'\n        ...\n```\n\n## Contributions\n\nContributing guidelines: [here](https://github.com/leon-thomm/Ryven/blob/dev/CONTRIBUTING.md).\n\nParticularly effective ways to contribute outside direct development of the software include\n\n- creating examples\n- creating tutorials\n- creating node packages\n- improving documentation\n\nAlso notice that there's a *discussions* area in this repo.\n\nThe docs page on the website is made with [Docsify](https://github.com/docsifyjs/docsify/), so you can improve it by simply editing the markdown. The whole [website sources](https://github.com/leon-thomm/ryven-website) are also on GitHub.\n\nCheers.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/leon-thomm/Ryven",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ryven",
    "package_url": "https://pypi.org/project/ryven/",
    "platform": "",
    "project_url": "https://pypi.org/project/ryven/",
    "project_urls": {
      "Homepage": "https://github.com/leon-thomm/Ryven",
      "Website": "https://ryven.org"
    },
    "release_url": "https://pypi.org/project/ryven/3.1.1/",
    "requires_dist": [
      "ryvencore-qt (==0.3.1.*)",
      "ryvencore (==0.3.1.*)",
      "Jinja2",
      "Pygments",
      "textdistance"
    ],
    "requires_python": "!=3.10,>=3.6",
    "summary": "Flow-based visual scripting for Python",
    "version": "3.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12504087,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7ec07b525119c2d7fc182434b599792153c5117cfada9c9b0e1538d054ad8b1e",
          "md5": "e4d419bfa35f21a427e5f0a4cba60af8",
          "sha256": "020070507b83ecd746bddbe4e24d31863416f345c9541d33967e7d36d5601d29"
        },
        "downloads": -1,
        "filename": "ryven-0.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e4d419bfa35f21a427e5f0a4cba60af8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 1899,
        "upload_time": "2021-03-16T18:31:14",
        "upload_time_iso_8601": "2021-03-16T18:31:14.661503Z",
        "url": "https://files.pythonhosted.org/packages/7e/c0/7b525119c2d7fc182434b599792153c5117cfada9c9b0e1538d054ad8b1e/ryven-0.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "06bd9d68ef88173cc363c9cd17d9bd799b33525d50386f7fb91cfc6e958e2166",
          "md5": "813674d8475a0c154f19a309a52db8a3",
          "sha256": "d91dca01db5fb8da4a9d6973f2576b5dc9ab16bc08a202d74fce2610a46dca15"
        },
        "downloads": -1,
        "filename": "ryven-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "813674d8475a0c154f19a309a52db8a3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 1711,
        "upload_time": "2021-03-16T18:31:16",
        "upload_time_iso_8601": "2021-03-16T18:31:16.062785Z",
        "url": "https://files.pythonhosted.org/packages/06/bd/9d68ef88173cc363c9cd17d9bd799b33525d50386f7fb91cfc6e958e2166/ryven-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8ff871bb373b62867bb02b9b46c62415e74b7833152bb57cc42a942f9826871d",
          "md5": "951fbcec1b950ac04152705ffa5d394d",
          "sha256": "068cbc5ef4f49f80111d030a5a4c77f3e6d3ffb7214701e9ca862ab1c6d4252f"
        },
        "downloads": -1,
        "filename": "ryven-3.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "951fbcec1b950ac04152705ffa5d394d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4301282,
        "upload_time": "2021-12-07T09:21:20",
        "upload_time_iso_8601": "2021-12-07T09:21:20.619769Z",
        "url": "https://files.pythonhosted.org/packages/8f/f8/71bb373b62867bb02b9b46c62415e74b7833152bb57cc42a942f9826871d/ryven-3.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d6cf9c3e7abdccd552a477218298d7950be4c5499f988480336954e609f8d4e7",
          "md5": "c7c00875ec9a7247114e2e1a52b14553",
          "sha256": "e7f6e2ecce6de5a3fa0fe4f20e95b31d0443d496fcd4023beada2248760cf63b"
        },
        "downloads": -1,
        "filename": "ryven-3.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c7c00875ec9a7247114e2e1a52b14553",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7845400,
        "upload_time": "2021-12-07T09:21:22",
        "upload_time_iso_8601": "2021-12-07T09:21:22.648195Z",
        "url": "https://files.pythonhosted.org/packages/d6/cf/9c3e7abdccd552a477218298d7950be4c5499f988480336954e609f8d4e7/ryven-3.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bbd77dcf04ddbb42f79fc6a9f8b0171defeac46927cdb41709d14474ce0fa9ba",
          "md5": "5e3b22df548b88ad6a7e30b59f6d5b0f",
          "sha256": "d32af55f7a6faf0640c5e13c35c33ff020262c75758487f5219d306f37703829"
        },
        "downloads": -1,
        "filename": "ryven-3.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5e3b22df548b88ad6a7e30b59f6d5b0f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "!=3.10,>=3.6",
        "size": 4301641,
        "upload_time": "2022-01-07T13:18:34",
        "upload_time_iso_8601": "2022-01-07T13:18:34.872008Z",
        "url": "https://files.pythonhosted.org/packages/bb/d7/7dcf04ddbb42f79fc6a9f8b0171defeac46927cdb41709d14474ce0fa9ba/ryven-3.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f562c7091328a794d6cd6b937266d79114d8ae208f9eb0305ab49351b4d0ecac",
          "md5": "3e36b50de155fd4a2ead6396b3863ea5",
          "sha256": "82ef851e5bf01a330122947d062ca39d9bf50c29d456a8d54547fd7c553899bf"
        },
        "downloads": -1,
        "filename": "ryven-3.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3e36b50de155fd4a2ead6396b3863ea5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "!=3.10,>=3.6",
        "size": 7845806,
        "upload_time": "2022-01-07T13:18:37",
        "upload_time_iso_8601": "2022-01-07T13:18:37.200767Z",
        "url": "https://files.pythonhosted.org/packages/f5/62/c7091328a794d6cd6b937266d79114d8ae208f9eb0305ab49351b4d0ecac/ryven-3.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bbd77dcf04ddbb42f79fc6a9f8b0171defeac46927cdb41709d14474ce0fa9ba",
        "md5": "5e3b22df548b88ad6a7e30b59f6d5b0f",
        "sha256": "d32af55f7a6faf0640c5e13c35c33ff020262c75758487f5219d306f37703829"
      },
      "downloads": -1,
      "filename": "ryven-3.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5e3b22df548b88ad6a7e30b59f6d5b0f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": "!=3.10,>=3.6",
      "size": 4301641,
      "upload_time": "2022-01-07T13:18:34",
      "upload_time_iso_8601": "2022-01-07T13:18:34.872008Z",
      "url": "https://files.pythonhosted.org/packages/bb/d7/7dcf04ddbb42f79fc6a9f8b0171defeac46927cdb41709d14474ce0fa9ba/ryven-3.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f562c7091328a794d6cd6b937266d79114d8ae208f9eb0305ab49351b4d0ecac",
        "md5": "3e36b50de155fd4a2ead6396b3863ea5",
        "sha256": "82ef851e5bf01a330122947d062ca39d9bf50c29d456a8d54547fd7c553899bf"
      },
      "downloads": -1,
      "filename": "ryven-3.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "3e36b50de155fd4a2ead6396b3863ea5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "!=3.10,>=3.6",
      "size": 7845806,
      "upload_time": "2022-01-07T13:18:37",
      "upload_time_iso_8601": "2022-01-07T13:18:37.200767Z",
      "url": "https://files.pythonhosted.org/packages/f5/62/c7091328a794d6cd6b937266d79114d8ae208f9eb0305ab49351b4d0ecac/ryven-3.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}