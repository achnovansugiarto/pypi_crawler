{
  "info": {
    "author": "Kornpow",
    "author_email": "test@email.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# pool-grpc-client\nA python grpc client for Lightning Pool (Lightning Network Daemon) ⚡⚡⚡\n\nThis is a wrapper around the default grpc interface that handles setting up credentials (including macaroons.\n\n## Dependencies\n- Python 3.6+\n- Working LND lightning node, take note of its ip address.\n- Copy your pool.macaroon and tls.cert files from `~/.pool/mainnet` to a directoy on your machine. \n\n\n## Installation\n```bash\n# NOT ON PYPI YET\npip install pool-grpc-client\n```\n\n\n\n\n## Basic Usage\nThe api mirrors the underlying lnd grpc api (http://api.lightning.community/) but methods will be in pep8 style. ie. `.GetInfo()` becomes `.get_info()`.\n\n```python\nfrom pathlib import Path\nimport json\nfrom poolgrpc.client import PoolClient\n\ncredential_path = Path(\"/home/skorn/.pool/mainnet/\")\n\nmac = str(credential_path.joinpath(\"pool.macaroon\").absolute())\ntls = str(credential_path.joinpath(\"tls.cert\").absolute())\n\npool = PoolClient(\n\tmacaroon_filepath=mac,\n\tcert_filepath=tls\n)\n\npool.get_info()\n\npool.get_lsat_tokens()\n```\n\n### Specifying Macaroon/Cert files\nBy default the client will attempt to lookup the `readonly.macaron` and `tls.cert` files in the mainnet directory. \nHowever if you want to specify a different macaroon or different path you can pass in the filepath explicitly.\n\n```python\nlnd = LNDClient(\n    macaroon_filepath='~/.lnd/invoice.macaroon', \n    cert_filepath='path/to/tls.cert'\n)\n```\n\n## Generating LND Proto Files\n```bash\nvirtualenv lnd\nsource lnd/bin/activate\npip install grpcio grpcio-tools googleapis-common-protos sh\ngit clone https://github.com/lightningnetwork/lnd.git\nmkdir genprotos\ngit clone https://github.com/googleapis/googleapis.git\n\n# python -m grpc_tools.protoc --proto_path=googleapis:. --python_out=. --grpc_python_out=. rpc.proto\n```\n\n```python\nfrom pathlib import Path\nimport shutil\nimport sh\nimport sys\nimport re\nimport os\n\nloop_dir = Path.home().joinpath(\"Documents/lightning/loop\")\ngrpc_client_dir = Path.home().joinpath(\"Documents/lightning/loop-grpc-client\")\n\nos.chdir(grpc_client_dir)\n\nif not all([loop_dir.exists(), grpc_client_dir.exists()]):\n    print(\"Error: Double check that the paths exist!\")\n    sys.exit(1)\n\nfor proto in list(loop_dir.rglob(\"**/*.proto\")):\n    shutil.copy(proto, grpc_client_dir.joinpath(\"loopgrpc/compiled/\"))\n    print(f\"Copied: {proto.name}\")\n\n# Modify auctioneer.proto from auctioneerrpc/auctioneer.proto --> poolgrpc/compiled/auctioneer.proto\nfor proto in list(grpc_client_dir.joinpath(\"loopgrpc/compiled/\").rglob(\"*.proto\")):\n    with open(proto, 'r+') as f:\n        text = f.read()\n        text = re.sub('import \"swapserverrpc/common.proto\";', 'import \"loopgrpc/compiled/common.proto\";', text)\n        text = re.sub('import \"common.proto\";', 'import \"loopgrpc/compiled/common.proto\";', text)\n        f.seek(0)\n        f.write(text)\n        f.truncate()\n\nprotos = list(Path(\".\").joinpath(\"loopgrpc/compiled/\").glob(\"*.proto\"))\n\nargs = [\n    \"-m\",\n    \"grpc_tools.protoc\",\n    \"--proto_path=loopgrpc/compiled/googleapis:.\",\n    \"--python_out=.\",\n    \"--grpc_python_out=.\",\n]\n\nfor protofile in protos:\n    args.append(str(protofile) )\n\n# Generate the compiled protofiles\nsh.python(args)\n```\n\n## Deploy to Test-PyPi\n```bash\npoetry build\ntwine check dist/*\ntwine upload --repository-url https://test.pypi.org/legacy/ dist/*\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "loop-grpc-client",
    "package_url": "https://pypi.org/project/loop-grpc-client/",
    "platform": null,
    "project_url": "https://pypi.org/project/loop-grpc-client/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/loop-grpc-client/0.1.3/",
    "requires_dist": [
      "aiogrpc (>=1.8,<2.0)",
      "googleapis-common-protos (>=1.53.0,<2.0.0)",
      "grpcio (>=1.37.0,<2.0.0)",
      "grpcio-tools (>=1.37.0,<2.0.0)",
      "protobuf (>=3.15.8,<4.0.0)",
      "protobuf3-to-dict (>=0.1.5,<0.2.0)"
    ],
    "requires_python": ">3.6",
    "summary": "An rpc client for LL Loop (Add/Remove liquidity from channels)",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14268151,
  "releases": {
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "df9a5342e221a7dc61139383a65c7988e6c786a2c759b50bf930b2b47a494b0f",
          "md5": "8b1defdc310e93bcd156cd03c811c475",
          "sha256": "76c974e4d6512d8f3f5825bc7e7106b49161a06b9ee473af3cfd353b951eab90"
        },
        "downloads": -1,
        "filename": "loop_grpc_client-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8b1defdc310e93bcd156cd03c811c475",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">3.6",
        "size": 42359,
        "upload_time": "2021-12-14T19:17:25",
        "upload_time_iso_8601": "2021-12-14T19:17:25.794961Z",
        "url": "https://files.pythonhosted.org/packages/df/9a/5342e221a7dc61139383a65c7988e6c786a2c759b50bf930b2b47a494b0f/loop_grpc_client-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "45778e279549a92e656a8b20880c9fbda4a629de4ac5cb9ab636c53a903bb63e",
          "md5": "c68ac9546b72bfcbf1d7ac6341b80c32",
          "sha256": "7dddab04743288dccb42a60c149b8631a3606e8258464c290f4ee56611626733"
        },
        "downloads": -1,
        "filename": "loop_grpc_client-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c68ac9546b72bfcbf1d7ac6341b80c32",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">3.6",
        "size": 37700,
        "upload_time": "2022-06-21T04:08:22",
        "upload_time_iso_8601": "2022-06-21T04:08:22.307162Z",
        "url": "https://files.pythonhosted.org/packages/45/77/8e279549a92e656a8b20880c9fbda4a629de4ac5cb9ab636c53a903bb63e/loop_grpc_client-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eccbea415b1c8a04ed200eb98337c60efd8308f63dd628ec02bdbb4862e88479",
          "md5": "31449dbab145340f6d11ccbeb7abbfeb",
          "sha256": "7d8572924b049d659089bc48535e801661913ee06494e6ed8af4fdbba0fb9218"
        },
        "downloads": -1,
        "filename": "loop_grpc_client-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "31449dbab145340f6d11ccbeb7abbfeb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">3.6",
        "size": 37748,
        "upload_time": "2022-06-21T15:12:22",
        "upload_time_iso_8601": "2022-06-21T15:12:22.677150Z",
        "url": "https://files.pythonhosted.org/packages/ec/cb/ea415b1c8a04ed200eb98337c60efd8308f63dd628ec02bdbb4862e88479/loop_grpc_client-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bc646cde5ce0207c05374160362c0823613fa6b99e8bf9a7e672a0e3fa418548",
          "md5": "346a993a4b8ce61cb6caf08f8f770848",
          "sha256": "ccdcbc19d5397d4980f99c22720c898ebdd19e6ff3e8402ee84761d81f6ddcc7"
        },
        "downloads": -1,
        "filename": "loop_grpc_client-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "346a993a4b8ce61cb6caf08f8f770848",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">3.6",
        "size": 38084,
        "upload_time": "2022-06-28T04:02:01",
        "upload_time_iso_8601": "2022-06-28T04:02:01.157258Z",
        "url": "https://files.pythonhosted.org/packages/bc/64/6cde5ce0207c05374160362c0823613fa6b99e8bf9a7e672a0e3fa418548/loop_grpc_client-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bc646cde5ce0207c05374160362c0823613fa6b99e8bf9a7e672a0e3fa418548",
        "md5": "346a993a4b8ce61cb6caf08f8f770848",
        "sha256": "ccdcbc19d5397d4980f99c22720c898ebdd19e6ff3e8402ee84761d81f6ddcc7"
      },
      "downloads": -1,
      "filename": "loop_grpc_client-0.1.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "346a993a4b8ce61cb6caf08f8f770848",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">3.6",
      "size": 38084,
      "upload_time": "2022-06-28T04:02:01",
      "upload_time_iso_8601": "2022-06-28T04:02:01.157258Z",
      "url": "https://files.pythonhosted.org/packages/bc/64/6cde5ce0207c05374160362c0823613fa6b99e8bf9a7e672a0e3fa418548/loop_grpc_client-0.1.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}