{
  "info": {
    "author": "",
    "author_email": "\"Tanner B. Corcoran\" <tannerbcorcoran@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Install\r\n`pip install rlim`\r\n\r\n# What purpose does `rlim` serve?\r\nWhen working with various APIs, I have found that in some cases the rate limits imposed on the user can be somewhat complex. For example, a single endpoint may have a limit of 3 calls per second *and* 5000 calls per hour (in a few rare instances, I have seen 3 limits for a single endpoint). The two other common rate limiting packages out there ([ratelimit](https://pypi.org/project/ratelimit/) and [ratelimiter](https://pypi.org/project/ratelimiter/)) only allow for a single rate limit to be set (e.g. 300 calls per 30 seconds). Although you could simply decorate a function multiple times, it can very quickly become wasteful in terms of memory and performance. Thus I decided to make a modern memory- and performance-efficient rate limiting module that allows for multiple limits to be imposed on a single rate limiter, as well as combining the best parts of the aforementioned packages.\r\n\r\n# How to create and use the RateLimiter\r\nThe creation of a `RateLimiter` instance is rather simple, and there are numerous ways to implement it into your code. When creating a `RateLimiter` instance, you must provide one more more *criteria*. These are the rates/limits that the rate limiter will abide to. The `Rate` object is used for limiting constant-speed function calls (e.g. 2 calls per second), while the `Limit` object is used for limiting quotas (e.g. 3000 calls every 3600 seconds). Using these examples, you could create a `RateLimiter` like this:\r\n```py\r\nfrom rlim import RateLimiter, Rate, Limit\r\n\r\nRateLimiter(Rate(2), Limit(3000, 3600))\r\n```\r\nWhen it comes to using this object, there are numerous ways in which to go about it:\r\n## Decorators\r\nA function can be decorated either with a `RateLimiter` instance or with the `placeholder` function decorator. When a function is decorated with either of these, it gains two attributes: `rate_limiter` and `rate_limiter_enabled`. If `rate_limiter` is not `None` and `rate_limiter_enabled` is `True`, the function will be rate limited; otherwise, the function will still run but without any rate limiting. **NOTE**: for all the below examples, the process is identical for async functions / methods.\r\n\r\n### Decorating with a `RateLimiter` instance\r\nBelow is an example on how you might decorate a function with a new instance, as well as with an existing instance.\r\n```py\r\nfrom rlim import RateLimiter, Rate, Limit\r\n\r\n@RateLimiter(Rate(3), Limit(1000, 3600))\r\ndef example():\r\n    ...\r\n\r\nrl = RateLimiter(Rate(3), Limit(1000, 3600))\r\n\r\n@rl\r\ndef example():\r\n    ...\r\n```\r\n\r\n### Decorating with `placeholder`\r\nThe purpose of `placeholder` is so that you can prepare a function to be rate limited (e.g. in a new class instance) and apply the `RateLimiter` instance afterward (e.g. in \\_\\_init\\_\\_). Setting the rate limiter can be done with the `set_rate_limiter` helper method, or by simply setting the function's `rate_limiter` attribute (via `.rate_limiter` or `.__dict__[\"rate_limiter\"]`) to a `RateLimiter` instance.\r\n```py\r\nfrom rlim import RateLimiter, Rate, Limit, placeholder, set_rate_limiter\r\n\r\nclass Example:\r\n    def __init__(self, rl: RateLimiter):\r\n        set_rate_limiter(self.example_method, rl)\r\n    \r\n    @placeholder\r\n    def example_method(self):\r\n        ...\r\n\r\n@placeholder\r\nasync def example():\r\n    ...\r\n\r\nrl = RateLimiter(Rate(3), Limit(1000, 3600))\r\neg = Example(rl)\r\nexample.rate_limiter = rl\r\n```\r\n\r\n## Using context managers\r\nAnother way to implement this into your code is to simply use a context manager.\r\n```py\r\nfrom rlim import RateLimiter, Rate, Limit\r\n\r\nrl = RateLimiter(Rate(3), Limit(1000, 3600))\r\n\r\ndef example():\r\n    with rl:\r\n        ...\r\n\r\nasync def example():\r\n    async with rl:\r\n        ...\r\n```\r\n\r\n## Using `pause` and `apause`\r\nIn general, the decorator or context manager methods should be used, but if needed, there are also the `pause` and `apause` methods which can be used to simply pause within your code. This comes with the possiblity to exceed the rate limits of the API you are interacting with, as the next timestamp gets added directly after the pause, not after the encapsulated code has completed. So use this with caution.\r\n```py\r\nfrom rlim import RateLimiter, Rate, Limit\r\n\r\nrl = RateLimiter(Rate(3), Limit(1000, 3600))\r\n\r\ndef example():\r\n    rl.pause()\r\n    ...\r\n\r\nasync def example():\r\n    await rl.apause()\r\n    ...\r\n```\r\n\r\n# List of functions and classes\r\n- RateLimiter [*._ratelimit.RateLimiter*]\r\n    - The main class used to rate limit function calls.\r\n- placeholder [*._ratelimit.placeholder*]\r\n    - Used to prepare a function for rate limiting when a rate limiter instance is not yet available.\r\n- set_rate_limiter [*._ratelimit.set_rate_limiter*]\r\n    - Sets a function's rate limiter.\r\n- set_rate_limiter_enabled [*._ratelimit.set_rate_limiter_enabled*]\r\n    - Enables or disables a function's rate limiter.\r\n- get_rate_limiter [*._ratelimit.get_rate_limiter*]\r\n    - Get a function's rate limiter.\r\n- get_rate_limiter_enabled [*._ratelimit.get_rate_limiter_enabled*]\r\n    - Get a function's rate limiter enabled status\r\n- RateLimitExceeded [*.exceptions.RateLimitExceeded*]\r\n    - An exception raised if `raise_on_limit` is enabled in the `RateLimiter` instance.\r\n- Rate [*.models.Rate*]\r\n    - A criteria for constant-rate limiting.\r\n- Limit [*.models.Limit*]\r\n    - A criteria for quota limiting.\r\n- *._ratelimit._maxrate*\r\n    - An internal method used for creating a new `Rate` instance if `autorate` is set to `True` upon instantiation of the `RateLimiter` instance.\r\n- *._ratelimit._maxcalls*\r\n    - An internal method used for determining the size of the `RateLimiter` instance's `deque`.\r\n- *._ratelimit._wrapper*\r\n    - An internal method used to create the base function wrapper.\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "rlim",
    "package_url": "https://pypi.org/project/rlim/",
    "platform": null,
    "project_url": "https://pypi.org/project/rlim/",
    "project_urls": {
      "Homepage": "https://github.com/tanrbobanr/rlim"
    },
    "release_url": "https://pypi.org/project/rlim/0.0.3/",
    "requires_dist": null,
    "requires_python": ">=3.5",
    "summary": "A modern synchronous and asynchronous function rate limiter",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15991903,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "540793adf93a663741ee6ef82e4b0e0a118c10f143ad35942366086bfeed71ac",
          "md5": "7e363e2bf3027e0c95cb2241faf4cad1",
          "sha256": "5ed995f848789596c0e5c6ece6684eca3611a7dcb412db38601709e341c9a2e7"
        },
        "downloads": -1,
        "filename": "rlim-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7e363e2bf3027e0c95cb2241faf4cad1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 7029,
        "upload_time": "2022-12-04T06:47:23",
        "upload_time_iso_8601": "2022-12-04T06:47:23.957163Z",
        "url": "https://files.pythonhosted.org/packages/54/07/93adf93a663741ee6ef82e4b0e0a118c10f143ad35942366086bfeed71ac/rlim-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fc25ad31064235d25573f08c32cbfe5a7d9ceda79966eea4b212f1d2993fc099",
          "md5": "f3fd2b38bf57c32728da28335d4b39c9",
          "sha256": "5fc770835d3572947f5918f5db612ff9be5690023f8de78810ae4e18c9deb93b"
        },
        "downloads": -1,
        "filename": "rlim-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f3fd2b38bf57c32728da28335d4b39c9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 7993,
        "upload_time": "2022-12-04T06:47:25",
        "upload_time_iso_8601": "2022-12-04T06:47:25.612571Z",
        "url": "https://files.pythonhosted.org/packages/fc/25/ad31064235d25573f08c32cbfe5a7d9ceda79966eea4b212f1d2993fc099/rlim-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a29d1bf447b58c9003498d56098a003126bd55e7ea2fe02b2095248e2ac44e60",
          "md5": "58061f37d44ee5711603e28c158a8d82",
          "sha256": "e074d680bc1365021a03a7cc1e188e449573998cfa15a3f3bbf067556c22c857"
        },
        "downloads": -1,
        "filename": "rlim-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "58061f37d44ee5711603e28c158a8d82",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 7073,
        "upload_time": "2022-12-04T21:35:25",
        "upload_time_iso_8601": "2022-12-04T21:35:25.866599Z",
        "url": "https://files.pythonhosted.org/packages/a2/9d/1bf447b58c9003498d56098a003126bd55e7ea2fe02b2095248e2ac44e60/rlim-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d354dd43c6bee6c92e0364e2675d10037486b67071cff8ed1df04517f271b496",
          "md5": "90e2978f07efcd5ba78a0a2ad82f748f",
          "sha256": "1c408894c2b4c154c1105d9fcd23309143174f14634c8c1ed20516a3162312ee"
        },
        "downloads": -1,
        "filename": "rlim-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "90e2978f07efcd5ba78a0a2ad82f748f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 8039,
        "upload_time": "2022-12-04T21:35:27",
        "upload_time_iso_8601": "2022-12-04T21:35:27.033773Z",
        "url": "https://files.pythonhosted.org/packages/d3/54/dd43c6bee6c92e0364e2675d10037486b67071cff8ed1df04517f271b496/rlim-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b22706033fd702f55cb783f011615a9b0e25ac1131c0e9dd5142923c6e54ba33",
          "md5": "c0f4ce3a6e0f7374b8d054955ee8b8bf",
          "sha256": "5113817b00ce708ab8815bfbc3e9883af7a520de9c9778d5b6e9a1db1aa5aeda"
        },
        "downloads": -1,
        "filename": "rlim-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c0f4ce3a6e0f7374b8d054955ee8b8bf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 7440,
        "upload_time": "2022-12-05T06:37:10",
        "upload_time_iso_8601": "2022-12-05T06:37:10.072964Z",
        "url": "https://files.pythonhosted.org/packages/b2/27/06033fd702f55cb783f011615a9b0e25ac1131c0e9dd5142923c6e54ba33/rlim-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad97917caedcc46a34f04c952fc48fd040262cbded86db028278dd686a949c2c",
          "md5": "3ec26acccb77dda5d2de64bf41eaea90",
          "sha256": "ca7c1d3ec987e985ed7236bc55df9da2a774801c73ca4b6a0fac4d635ee6a515"
        },
        "downloads": -1,
        "filename": "rlim-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "3ec26acccb77dda5d2de64bf41eaea90",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 8453,
        "upload_time": "2022-12-05T06:37:11",
        "upload_time_iso_8601": "2022-12-05T06:37:11.495257Z",
        "url": "https://files.pythonhosted.org/packages/ad/97/917caedcc46a34f04c952fc48fd040262cbded86db028278dd686a949c2c/rlim-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b22706033fd702f55cb783f011615a9b0e25ac1131c0e9dd5142923c6e54ba33",
        "md5": "c0f4ce3a6e0f7374b8d054955ee8b8bf",
        "sha256": "5113817b00ce708ab8815bfbc3e9883af7a520de9c9778d5b6e9a1db1aa5aeda"
      },
      "downloads": -1,
      "filename": "rlim-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c0f4ce3a6e0f7374b8d054955ee8b8bf",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 7440,
      "upload_time": "2022-12-05T06:37:10",
      "upload_time_iso_8601": "2022-12-05T06:37:10.072964Z",
      "url": "https://files.pythonhosted.org/packages/b2/27/06033fd702f55cb783f011615a9b0e25ac1131c0e9dd5142923c6e54ba33/rlim-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ad97917caedcc46a34f04c952fc48fd040262cbded86db028278dd686a949c2c",
        "md5": "3ec26acccb77dda5d2de64bf41eaea90",
        "sha256": "ca7c1d3ec987e985ed7236bc55df9da2a774801c73ca4b6a0fac4d635ee6a515"
      },
      "downloads": -1,
      "filename": "rlim-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "3ec26acccb77dda5d2de64bf41eaea90",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 8453,
      "upload_time": "2022-12-05T06:37:11",
      "upload_time_iso_8601": "2022-12-05T06:37:11.495257Z",
      "url": "https://files.pythonhosted.org/packages/ad/97/917caedcc46a34f04c952fc48fd040262cbded86db028278dd686a949c2c/rlim-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}