{
  "info": {
    "author": "Conor Durkan, Artur Bekasov, George Papamakarios, Iain Murray",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# nflows\n\n<a href=\"https://doi.org/10.5281/zenodo.4296287\"><img src=\"https://zenodo.org/badge/DOI/10.5281/zenodo.4296287.svg\" alt=\"DOI\"></a>\n<a href=\"https://github.com/bayesiains/nflows/actions/workflows/build_lint_test.yml\"><img src=\"https://github.com/bayesiains/nflows/actions/workflows/build_lint_test.yml/badge.svg\" alt=\"Build status\"></a>\n\n`nflows` is a comprehensive collection of [normalizing flows](https://arxiv.org/abs/1912.02762) using [PyTorch](https://pytorch.org).\n\n## Installation\n\nTo install from PyPI:\n```\npip install nflows\n```\n\n## Usage\n\nTo define a flow:\n\n```python\nfrom nflows import transforms, distributions, flows\n\n# Define an invertible transformation.\ntransform = transforms.CompositeTransform([\n    transforms.MaskedAffineAutoregressiveTransform(features=2, hidden_features=4),\n    transforms.RandomPermutation(features=2)\n])\n\n# Define a base distribution.\nbase_distribution = distributions.StandardNormal(shape=[2])\n\n\n# Combine into a flow.\nflow = flows.Flow(transform=transform, distribution=base_distribution)\n```\n\nTo evaluate log probabilities of inputs:\n```python\nlog_prob = flow.log_prob(inputs)\n```\n\nTo sample from the flow:\n```python\nsamples = flow.sample(num_samples)\n```\n\nAdditional examples of the workflow are provided in [examples folder](examples/).\n\n## Development\n\nTo install all the dependencies for development:\n```\npip install -r requirements.txt\n```\n\n## Citing nflows\n\nTo cite the package:\n```bibtex\n@software{nflows,\n  author       = {Conor Durkan and\n                  Artur Bekasov and\n                  Iain Murray and\n                  George Papamakarios},\n  title        = {{nflows}: normalizing flows in {PyTorch}},\n  month        = nov,\n  year         = 2020,\n  publisher    = {Zenodo},\n  version      = {v0.14},\n  doi          = {10.5281/zenodo.4296287},\n  url          = {https://doi.org/10.5281/zenodo.4296287}\n}\n```\n\nThe version number is intended to be the one from `nflows/version.py`. The year/month correspond to the date of the release. BibTeX entries for other versions could be found on [Zenodo](https://doi.org/10.5281/zenodo.4296286).\n\nIf you're using spline-based flows in particular, consider citing the _Neural Spline Flows_ paper: [[bibtex]](https://papers.nips.cc/paper/2019/file/7ac71d433f282034e088473244df8c02-Bibtex.bib).\n\n## References\n`nflows` is derived from [bayesiains/nsf](https://github.com/bayesiains/nsf) originally published with\n> C. Durkan, A. Bekasov, I. Murray, G. Papamakarios, _Neural Spline Flows_, NeurIPS 2019.\n> [[arXiv]](https://arxiv.org/abs/1906.04032) [[bibtex]](https://papers.nips.cc/paper/2019/file/7ac71d433f282034e088473244df8c02-Bibtex.bib)\n\n\n`nflows` has been used in \n> Conor Durkan, Iain Murray, George Papamakarios, _On Contrastive Learning for Likelihood-free Inference_, ICML 2020.\n> [[arXiv]](https://arxiv.org/abs/2002.03712).\n\n> Artur Bekasov, Iain Murray, _Ordering Dimensions with Nested Dropout Normalizing Flows_.\n> [[arXiv]](https://arxiv.org/abs/2006.08777).\n\n> Tim Dockhorn, James A. Ritchie, Yaoliang Yu, Iain Murray, _Density Deconvolution with Normalizing Flows_.\n> [[arXiv]](https://arxiv.org/abs/2006.09396).\n\n`nflows` is used by the conditional density estimation package [pyknos](https://github.com/mackelab/pyknos), and in turn the likelihood-free inference framework [sbi](https://github.com/mackelab/sbi).\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/bayesiains/nflows/archive/v0.14.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bayesiains/nflows",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "matts-nflows",
    "package_url": "https://pypi.org/project/matts-nflows/",
    "platform": null,
    "project_url": "https://pypi.org/project/matts-nflows/",
    "project_urls": {
      "Download": "https://github.com/bayesiains/nflows/archive/v0.14.tar.gz",
      "Homepage": "https://github.com/bayesiains/nflows"
    },
    "release_url": "https://pypi.org/project/matts-nflows/0.14/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Normalizing flows in PyTorch.",
    "version": "0.14",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15322227,
  "releases": {
    "0.14": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "39ed1799982f9950cd911cff995ae4ad8e6a0d59cffc6b18311d5063b1685987",
          "md5": "3df524b75430d29de191812d28e1002b",
          "sha256": "16b600a33f1ffbccc8b2f71c9fdffe37a4632e8939747f9dcd58dad8e4aa5a29"
        },
        "downloads": -1,
        "filename": "matts-nflows-0.14.tar.gz",
        "has_sig": false,
        "md5_digest": "3df524b75430d29de191812d28e1002b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 51056,
        "upload_time": "2022-10-06T11:36:09",
        "upload_time_iso_8601": "2022-10-06T11:36:09.164710Z",
        "url": "https://files.pythonhosted.org/packages/39/ed/1799982f9950cd911cff995ae4ad8e6a0d59cffc6b18311d5063b1685987/matts-nflows-0.14.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "39ed1799982f9950cd911cff995ae4ad8e6a0d59cffc6b18311d5063b1685987",
        "md5": "3df524b75430d29de191812d28e1002b",
        "sha256": "16b600a33f1ffbccc8b2f71c9fdffe37a4632e8939747f9dcd58dad8e4aa5a29"
      },
      "downloads": -1,
      "filename": "matts-nflows-0.14.tar.gz",
      "has_sig": false,
      "md5_digest": "3df524b75430d29de191812d28e1002b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 51056,
      "upload_time": "2022-10-06T11:36:09",
      "upload_time_iso_8601": "2022-10-06T11:36:09.164710Z",
      "url": "https://files.pythonhosted.org/packages/39/ed/1799982f9950cd911cff995ae4ad8e6a0d59cffc6b18311d5063b1685987/matts-nflows-0.14.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}