{
  "info": {
    "author": "Bassem Girgis",
    "author_email": "brgirgis@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Communications",
      "Topic :: Internet"
    ],
    "description": "\npyzmqrpc3\n=========\n\n!`Publish <https://github.com/brgirgis/pyzmqrpc3/workflows/Publish/badge.svg>`_\n\n!`Test <https://github.com/brgirgis/pyzmqrpc3/workflows/Test/badge.svg>`_\n\n# Introduction\n==============\n\nThis Python package adds basic Remote Procedure Call (RPC) functionalities to\n\nZeroMQ.\n\nThe supported command/service architecture allows for complex serialization of\n\nuser defined data and modern-looking implementation.\n\n# Install\n=========\n\n\tpip install pyzmqrpc3\n\n# Usage\n=======\n\nImplement a concrete class of the interface class `ICommand` that can\n\nde/serialize itself and has a default constructor\n\n(i.e. can be constructed without any arguments):\n\n\tfrom typing import Optional\n\n\tfrom zmqrpc import ICommand\n\n\tclass SimpleCommand(ICommand):\n\n\t\tdef \\_\\_init\\_\\_(\n\n\t\t\t\tself,\n\n\t\t\t\tparam1: Optional[str] = None,\n\n\t\t\t\tparam2: Optional[str] = None):\n\n\t\t\tsuper().\\_\\_init\\_\\_()\n\n\t\t\tself.\\_\\_param1 = param1 or ''\n\n\t\t\tself.\\_\\_param2 = param2 or ''\n\n\t\t@property\n\n\t\tdef param1(self) \\-> str:\n\n\t\t\treturn self.\\_\\_param1\n\n\t\t@property\n\n\t\tdef param2(self) \\-> str:\n\n\t\t\treturn self.\\_\\_param2\n\n\t\tdef set\\_command\\_state(self, state: dict) \\-> None:\n\n\t\t\tself.\\_\\_param1 = state['param1']\n\n\t\t\tself.\\_\\_param2 = state['param2']\n\n\t\tdef get\\_command\\_state(self) \\-> dict:\n\n\t\t\treturn dict(\n\n\t\t\t\tparam1=self.param1,\n\n\t\t\t\tparam2=self.param2,\n\n\t\t\t)\n\nThe two methods, `set*command*state()` and `get*command*state()`, are\n\nessential for marshaling the command data between the client and the server.\n\nIt is the user's responsibility to make sure that the implementation of these\n\nmethods is correct to avoid any data loss.\n\nBoth the client and the server side need to be aware of all the system\n\ncommands' implementations.\n\nImplement a concrete service functor which inherits from `IService` and\n\nhandles one kind of a command by the server:\n\n\tfrom typing import Optional\n\n\tfrom zmqrpc import IService\n\n\tclass SimpleService(IService):\n\n\t\tdef \\_\\_call\\_\\_(self, command: SimpleCommand) \\-> Optional[object]:\n\n\t\t\tprint(\n\n\t\t\t\t'SimpleCommand executed with params \"{0}\" and \"{1}\"'.format(\n\n\t\t\t\t\tcommand.param1,\n\n\t\t\t\t\tcommand.param2,\n\n\t\t\t\t)\n\n\t\t\t)\n\n\t\t\treturn 'SimpleService response text for SimpleCommand is \"%s\"' % str(\n\n\t\t\t\tdict(\n\n\t\t\t\t\tparam1=command.param1,\n\n\t\t\t\t\tparam2=command.param2,\n\n\t\t\t\t)\n\n\t\t\t)\n\nAlthough it is technically possible to make one service to handle more\n\nthan one command,\n\nit is highly recommended from architecture point of view to dedicate\n\none service for one command type.\n\nServices' implementations need not to be visible on the client side\n\nfrom code organization point of view.\n\nOn the server side, create a ZeroMQ RPC server:\n\n\tfrom zmqrpc import ZmqRpcServer\n\n\tserver = ZmqRpcServer(\n\n\t\tzmq\\_rep\\_bind\\_address='tcp://\\*:30000',\n\n\t)\n\nRegister all the services:\n\n\tserver.register\\_service(\n\n\t\tcommand\\_class=SimpleCommand,\n\n\t\tservice=SimpleService(),\n\n\t)\n\nNote that this call takes the ***actual*** command class and an ***instance***\n\nof the service functor.\n\nAfter registering all the services, start the RPC server:\n\n\tserver.start()\n\nOn the client side, create a client that connects to that server endpoint:\n\n\tclient = ZmqRpcClient(\n\n\t\tzmq\\_req\\_endpoints=['tcp://localhost:30000'],\n\n\t)\n\nHave the client execute commands on the server:\n\n\tclient.execute\\_remote(\n\n\t\tcommand=SimpleCommand(param1='value1', param2='value2'),\n\n\t)\n\nFor more examples, take a look at the `examples <./examples>`_ directory.\n\nEven more examples can be found in the `tests <./tests>`_ directory.\n\n# Rationale\n===========\n\nWorking with ZeroMQ is great!\n\nIt is fun, fast and simply works.\n\nIt can be used with many applications out of the box with minimal effort.\n\nHowever, there is no clear structure for the RPC workflow.\n\nThis package is a lightweight layer to bridge this gap with minimal restrictions\n\non what we can already do with the barebone ZMQ.\n\n# Requirements\n==============\n\n1. It should be possible to create a network by simply starting apps and\n\nconfigure them with the location of the end-points.\n\nThe apps will typically be started on a process level, however,\n\nthreading should also be supported.\n\n2. Must have support for PUB/SUB (non-reliable, whoever is listening) and\n\nREQ/REP sockets (reliable).\n\nThe latter should have support for timeouts and automatic recreation of a\n\nREQ socket if no message is received in the timeout period.\n\n3. If somewhere in the network there is connection failing, messages\n\nshould be automatically queued up to a certain queue size.\n\nRight now, this has been implemented on the PUB/SUB interface.\n\n4. Password protection is important when traversing non-secure networks.\n\nHowever, no CURVE based protection is needed for now, just simple\n\nusername/password.\n\nThe fact that a network can be sniffed is not relevant for general use cases.\n\n5. Since it is common to use a lot of devices together, like Raspberry devices,\n\nit shall be able to work around via proxy connections.\n\n# Components\n============\n\n## ZmqReceiver/Thread\n=====================\n\nStarts a loop listening via a SUB or REP socket for new messages.\n\nMultiple SUB end-points may be provided.\n\nIf a message is received, it calls the `handle*incoming*message()` method\n\nwhich can be overridden by any subclassed implementation.\n\nThe thread version, `ZmqReceiverThread`, can be used for testing or with\n\napplications that might be running multiple server threads.\n\n## ZmqSender\n============\n\nUpon creation it starts a PUB socket and/or creates a REQ socket.\n\nThe REQ socket may point to multiple end-points, which then use round-robin\n\nmessage delivery.\n\nThe ZmqSender implements the `send()` method that sends a message.\n\n## ZmqProxy\n===========\n\nForwards messages from a SUB --> REQ socket or from a PUB --> REP socket using\n\na receiver/sender pair.\n\n## ZmqRpcServer/Thread\n======================\n\nImplements service(s) that can be remotely executed by receiving a distinct\n\ncommand type.\n\nIt inherits the `ZmqReceiver` functionality to listen for messages on a\n\nREP or SUB socket.\n\nHowever, it overrides the `handle*incoming*message()` method to deserialize\n\ncommand messages, identify their type and execute the corresponding service\n\nimplementation.\n\nThe thread version, `ZmqRpcServerThread`, can be used for testing or with\n\napplications that might be running multiple server threads.\n\n## ZmqRpcClient\n===============\n\nExecutes a remotely implemented service over a PUB or REQ socket using a\n\ncommand argument.\n\nFor PUB sockets, no response messages should be expected.\n\nIt inherits the `ZmqSender` functionality to send messages over the wire.\n\n## ICommand\n===========\n\nThe base interface class for all concrete command types.\n\nIt enforces the implementation of two methods; `set*command*state()` and\n\n`get*command*state()`.\n\nThese two methods are essential in marshaling any complex user data from the\n\nclient side to the server side.\n\n## IService\n===========\n\nThe base interface class for all concrete service functors.\n\nIt enforces the implementation of the `**call**()` method which is the entry\n\npoint of handling a certain command type on the server side.\n\n# Available Standard Proxies\n============================\n\nA number of proxies are available out of the box:\n\n* REQ to REQ by means of ZmqProxySub2Req/Thread\n\n* SUB to PUB by means of ZmqProxySub2Pub/Thread\n\n* REP to PUB by means of ZmqProxyRep2Pub/Thread\n\n* REP to REQ by means of ZmqProxyRep2Req/Thread\n\n* Buffered REP to REQ via ZmqBufferedProxyRep2ReqThread\n\nEach of these proxies/proxy-threads will take a message from the input\n\nformat/socket and marshal it to the output socket.\n\nOne model could be to collect all samples from all sub-processes on a site\n\nand multiplex them via the proxy in a reliable manner over a REP/REQ socket.\n\nNote that when a PUB/SUB connection is used, there is no return message or\n\nin case of method invocation, any function response is discarded.\n\nThe buffered REP/REQ proxy quietly uses a PUB/SUB socket to introduce a\n\nmeans to buffer messages and method invocations.\n\n# Known Issues and Limitations (KIL)\n====================================\n\n* Only localhost type of testing done with passwords.\n\nNot sure if auth works over remote connections.\n\n* The `inproc://` transport of ZMQ is not supported by current implementation.\n\n# Notes\n=======\n\nPlease note that this implementation is very pre-mature, although it works\n\nfine for the projects it is currently being used in and has operated stable\n\nfor months.\n\n\nFor more info visit the project repository at\nhttps://github.com/brgirgis/pyzmqrpc3\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "https://pypi.org/project/pyzmqrpc3/",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/brgirgis/pyzmqrpc3",
    "keywords": "zmq,zeromq,pyzmq,rpc",
    "license": "MIT",
    "maintainer": "Bassem Girgis",
    "maintainer_email": "brgirgis@gmail.com",
    "name": "pyzmqrpc3",
    "package_url": "https://pypi.org/project/pyzmqrpc3/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyzmqrpc3/",
    "project_urls": {
      "Download": "https://pypi.org/project/pyzmqrpc3/",
      "Homepage": "https://github.com/brgirgis/pyzmqrpc3"
    },
    "release_url": "https://pypi.org/project/pyzmqrpc3/3.2.2/",
    "requires_dist": [
      "pyzmq (>=15.0.0)",
      "future (>=0.15.0)"
    ],
    "requires_python": "",
    "summary": "A simple ZMQ RPC extension with command/service architecture",
    "version": "3.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8535426,
  "releases": {
    "3.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6580c947369a4912bc0fff376145059cd363f0e88e18e082304f7f1c68fcbd49",
          "md5": "bc517dd7cc74f6af15409585d22e2071",
          "sha256": "59d63b0c051cfb94b44c38d85b98cab67f54698d27d40ed52a0ab202e94a7356"
        },
        "downloads": -1,
        "filename": "pyzmqrpc3-3.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bc517dd7cc74f6af15409585d22e2071",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 20876,
        "upload_time": "2020-10-23T17:54:50",
        "upload_time_iso_8601": "2020-10-23T17:54:50.393027Z",
        "url": "https://files.pythonhosted.org/packages/65/80/c947369a4912bc0fff376145059cd363f0e88e18e082304f7f1c68fcbd49/pyzmqrpc3-3.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "45650137c23693f848d1f167184e713c6b53fdd331ac787eefa6515cbfa10868",
          "md5": "4d9e1dfd8b783e8f79cecd4de2e85659",
          "sha256": "432caa3cbe45c57b72bbfd42860ccedfefb310792755185d2b5ed33d13271c5b"
        },
        "downloads": -1,
        "filename": "pyzmqrpc3-3.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4d9e1dfd8b783e8f79cecd4de2e85659",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13561,
        "upload_time": "2020-10-23T17:54:52",
        "upload_time_iso_8601": "2020-10-23T17:54:52.714688Z",
        "url": "https://files.pythonhosted.org/packages/45/65/0137c23693f848d1f167184e713c6b53fdd331ac787eefa6515cbfa10868/pyzmqrpc3-3.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5dbb46e4b6a76d613cbe40c84d150feb9d7e2df1accca568cf5e7702a1652067",
          "md5": "fbdcdb6363cc94ac30fd0e555879f8bf",
          "sha256": "9df4cf7b85188557dc7235bfaf1b419562462d38c52f07f3919195cf8ef565a3"
        },
        "downloads": -1,
        "filename": "pyzmqrpc3-3.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fbdcdb6363cc94ac30fd0e555879f8bf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 22784,
        "upload_time": "2020-10-27T18:59:30",
        "upload_time_iso_8601": "2020-10-27T18:59:30.372259Z",
        "url": "https://files.pythonhosted.org/packages/5d/bb/46e4b6a76d613cbe40c84d150feb9d7e2df1accca568cf5e7702a1652067/pyzmqrpc3-3.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "43096a1952d5022d689e553a09385615f763fe9b6d31e8c3a396218402094d0a",
          "md5": "30cf1cd6bba15c2338678b9155544fd9",
          "sha256": "1fcdd2728831eab0475992e2a0acdf58a6fe25e3ef179808f8c1de7b45716b1e"
        },
        "downloads": -1,
        "filename": "pyzmqrpc3-3.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "30cf1cd6bba15c2338678b9155544fd9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13421,
        "upload_time": "2020-10-27T18:59:31",
        "upload_time_iso_8601": "2020-10-27T18:59:31.372513Z",
        "url": "https://files.pythonhosted.org/packages/43/09/6a1952d5022d689e553a09385615f763fe9b6d31e8c3a396218402094d0a/pyzmqrpc3-3.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cf9b069326ed4b52cd18792f2795fae0ffa4aba68fdcd18c87f71ea6bf8a364c",
          "md5": "2549f7312f58e7e2d0453f2c58821d7b",
          "sha256": "c4dfb2fa151d7de05a4f29538e803f5a9fc38e0d62247f36d167ac5864db90f8"
        },
        "downloads": -1,
        "filename": "pyzmqrpc3-3.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2549f7312f58e7e2d0453f2c58821d7b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 27742,
        "upload_time": "2020-10-29T18:19:03",
        "upload_time_iso_8601": "2020-10-29T18:19:03.837063Z",
        "url": "https://files.pythonhosted.org/packages/cf/9b/069326ed4b52cd18792f2795fae0ffa4aba68fdcd18c87f71ea6bf8a364c/pyzmqrpc3-3.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "34fb6001ff847c42662bc0e74ba2f7b7c05c3ae8bd54ae2cfade72f1056531b3",
          "md5": "4afeb3c9cbf393a7d0930d4f4ce69e84",
          "sha256": "cd5b7f99420789df5796e2b642f532c76102416b098b53df6a7f0e8a5a7d1f2c"
        },
        "downloads": -1,
        "filename": "pyzmqrpc3-3.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4afeb3c9cbf393a7d0930d4f4ce69e84",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16677,
        "upload_time": "2020-10-29T18:19:05",
        "upload_time_iso_8601": "2020-10-29T18:19:05.088483Z",
        "url": "https://files.pythonhosted.org/packages/34/fb/6001ff847c42662bc0e74ba2f7b7c05c3ae8bd54ae2cfade72f1056531b3/pyzmqrpc3-3.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2e2f2631cb2d4fbd14e9c78aa3147695b838b82ebf9dee411b0d6800d41cafbe",
          "md5": "46fe62e99f1f68a599ec0e10912dec73",
          "sha256": "bc11bd275f0e8c83ce7521083c336cf32d2b48e0e5119ee7c3a9b47817ca0946"
        },
        "downloads": -1,
        "filename": "pyzmqrpc3-3.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "46fe62e99f1f68a599ec0e10912dec73",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 30779,
        "upload_time": "2020-10-29T19:08:33",
        "upload_time_iso_8601": "2020-10-29T19:08:33.259190Z",
        "url": "https://files.pythonhosted.org/packages/2e/2f/2631cb2d4fbd14e9c78aa3147695b838b82ebf9dee411b0d6800d41cafbe/pyzmqrpc3-3.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "678d0794b073faddc3160b290a100ce45999f5d6908f36f30585b11ba80a2553",
          "md5": "2eb51a60879136ae6843cbecc8c83da3",
          "sha256": "146acde56ab39a31ff9cf7ccd43790a5265abdd05e4b7488ecafb7d27f023d3b"
        },
        "downloads": -1,
        "filename": "pyzmqrpc3-3.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2eb51a60879136ae6843cbecc8c83da3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17820,
        "upload_time": "2020-10-29T19:08:34",
        "upload_time_iso_8601": "2020-10-29T19:08:34.328274Z",
        "url": "https://files.pythonhosted.org/packages/67/8d/0794b073faddc3160b290a100ce45999f5d6908f36f30585b11ba80a2553/pyzmqrpc3-3.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70765e29cad811f02bd42cd5e043c073eb602953219caa8f67eb34b3edfacd07",
          "md5": "8564db33b00dcd64eebca0ea348abc4a",
          "sha256": "e71cebfc21ea9d8194962bf7c819e1a0fad7bfa3b3a11ab8423486d7f18024d8"
        },
        "downloads": -1,
        "filename": "pyzmqrpc3-3.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8564db33b00dcd64eebca0ea348abc4a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 30855,
        "upload_time": "2020-10-29T19:49:44",
        "upload_time_iso_8601": "2020-10-29T19:49:44.798962Z",
        "url": "https://files.pythonhosted.org/packages/70/76/5e29cad811f02bd42cd5e043c073eb602953219caa8f67eb34b3edfacd07/pyzmqrpc3-3.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e1587bfcea87318fa07daa7be608544cdcb6b5e122898f248b01dcc24728f7b2",
          "md5": "83f090aac6e457a76535047ad67adef8",
          "sha256": "28ba0307ad98f237431afbebdcfa09cec3064700e584127ec52ba220218e8236"
        },
        "downloads": -1,
        "filename": "pyzmqrpc3-3.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "83f090aac6e457a76535047ad67adef8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17886,
        "upload_time": "2020-10-29T19:49:45",
        "upload_time_iso_8601": "2020-10-29T19:49:45.854108Z",
        "url": "https://files.pythonhosted.org/packages/e1/58/7bfcea87318fa07daa7be608544cdcb6b5e122898f248b01dcc24728f7b2/pyzmqrpc3-3.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "70765e29cad811f02bd42cd5e043c073eb602953219caa8f67eb34b3edfacd07",
        "md5": "8564db33b00dcd64eebca0ea348abc4a",
        "sha256": "e71cebfc21ea9d8194962bf7c819e1a0fad7bfa3b3a11ab8423486d7f18024d8"
      },
      "downloads": -1,
      "filename": "pyzmqrpc3-3.2.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8564db33b00dcd64eebca0ea348abc4a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 30855,
      "upload_time": "2020-10-29T19:49:44",
      "upload_time_iso_8601": "2020-10-29T19:49:44.798962Z",
      "url": "https://files.pythonhosted.org/packages/70/76/5e29cad811f02bd42cd5e043c073eb602953219caa8f67eb34b3edfacd07/pyzmqrpc3-3.2.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e1587bfcea87318fa07daa7be608544cdcb6b5e122898f248b01dcc24728f7b2",
        "md5": "83f090aac6e457a76535047ad67adef8",
        "sha256": "28ba0307ad98f237431afbebdcfa09cec3064700e584127ec52ba220218e8236"
      },
      "downloads": -1,
      "filename": "pyzmqrpc3-3.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "83f090aac6e457a76535047ad67adef8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 17886,
      "upload_time": "2020-10-29T19:49:45",
      "upload_time_iso_8601": "2020-10-29T19:49:45.854108Z",
      "url": "https://files.pythonhosted.org/packages/e1/58/7bfcea87318fa07daa7be608544cdcb6b5e122898f248b01dcc24728f7b2/pyzmqrpc3-3.2.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}