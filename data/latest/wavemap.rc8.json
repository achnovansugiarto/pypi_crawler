{
  "info": {
    "author": "Tom Ritchford",
    "author_email": "tom@swirly.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries",
      "Topic :: Utilities"
    ],
    "description": "ðŸŒŠ Memory map WAVE files into numpy arrays ðŸŒŠ\n----------------------------------------------\n\n.. image:: https://raw.githubusercontent.com/rec/wavemap/master/wavemap.png\n   :alt: WaveMap logo\n\nManipulate huge WAVE or RAW files as numpy matrices - even if they are too\nlarge to fit into memory.\n\nMemory mapping is a technique where files on disk are directly mapped to\nlocations in memory and use the same logic as swap space does.\n\nSamples from a WAVE or RAW audio file are directly memory mapped to entries in\na ``numpy`` array, letting you manipulate very large audio files as if they\nall fit into memory at one time, and even directly change samples on disk.\n\nTypical usage:\n\n.. code-block:: python\n\n    import wavemap\n\n    wm = wavemap('test.wav', 'r+')  # r+ means read/write\n    # Now you have a numpy matrix that you can use like any other\n\n    wm /= 2\n    # Each sample in the file is scaled by half.\n\nAPI\n===\n\n``wavemap()``\n~~~~~~~~~~~~~~~~~~~~~~\n\n.. code-block:: python\n\n  wavemap(\n       filename: str,\n       mode: str='r',\n       order: Union[str, NoneType]=None,\n       always_2d: bool=False,\n       dtype: Union[numpy.dtype, NoneType]=None,\n       shape: Union[NoneType, int, tuple]=None,\n       sample_rate: int=0,\n       roffset: int=0,\n       warn: Union[Callable, NoneType]='<function warn:  print to stderr>',\n  )\n\n(`wavemap/__init__.py, 56-121 <https://github.com/rec/wavemap/blob/master/wavemap/__init__.py#L56-L121>`_)\n\n    Memory map a WAVE file to a ``numpy`` array\n\n    Return an instance of ``ReadMap`` or ``WriteMap``, depending on\n    ``mode``.\n\nARGUMENTS\n  filename\n    The name of the file being mapped\n\n  mode\n    The file is opened in this mode.\n    Must be one of ``'r'``, ``'r+'``, ``'c'``, ``'w+'``\n\n    In mode ``'r'``, the default, the file is opened read-only and\n    the ``numpy.darray`` is immutable.\n\n    In mode ``'r+'``, the file is opened read-write and changes to the\n    ``numpy.darray`` are automatically applied to the file.\n\n    In mode ``'c'``, \"copy-on-write\", the file is opened read-only, but\n    the ``numpy.darray`` is *not* immutable: changes to the array are\n    instead stored in memory.\n\n    In mode ``'w+'``, \"write\", the file is opened for write, and overwrites\n    whatever else is there.\n\n  order\n    Samples usually get laid out in into a ``numpy.darray`` with``\n    shape=(N, C)`` where ``N`` is the number of audio frames, and ``C`` is\n    the number of channels.\n\n    This is called column major order, but this can be toggled by\n    setting the ``order`` parameter to ``F`` for Fortan or row-major row.\n\n    See https://stackoverflow.com/questions/27266338/\n\n  always_2d\n    If ``False``, the default, mono WAVE files with only one channel\n    get special treatment and are mapped to a one-dimensional vector\n    with ``size=(N,)``.\n\n    If ``True``, mono WAVE files are treated the same as any other file\n    and are mapped to a two-dimensional matrix with ``size=(N, 1)``.\n\n  dtype\n    The numpy datatype of the samples in the file.\n\n  shape\n    The shape of the resulting numpy.darray. Can be a tuple, or a positive\n    integer, or ``None``.\n\n  sample_rate\n    The sample rate in Hz (cycles per second)\n\n  roffset\n    How many bytes in the file after the WAV data\n\n  warn\n    Programmers are sloppy so quite a lot of real-world WAVE files have\n    recoverable errors in their format.  ``warn`` is the function used to\n    report those recoverable errors.  By default, it's set to print to\n    ``sys.stderr`` but setting it to ``None`` disables errors entirely, or\n    you can pass your own callback in\n\nClass ``wavemap.RawMap``\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n(`wavemap/raw.py, 14-67 <https://github.com/rec/wavemap/blob/master/wavemap/raw.py#L14-L67>`_)\n\n\"Memory map raw audio data from a disk file into a numpy matrix\n\n``wavemap.RawMap.__new__()``\n____________________________\n\n.. code-block:: python\n\n  wavemap.RawMap.__new__(\n       cls,\n       filename: str,\n       dtype: numpy.dtype,\n       shape: Union[tuple, int, NoneType]=None,\n       mode: str='r',\n       offset: int=0,\n       roffset: int=0,\n       order: Union[str, NoneType]=None,\n       always_2d: bool=False,\n       warn: Union[Callable, NoneType]='<function warn:  print to stderr>',\n  )\n\n(`wavemap/raw.py, 17-67 <https://github.com/rec/wavemap/blob/master/wavemap/raw.py#L17-L67>`_)\n\nMemory map raw audio data from a disk file into a numpy matrix\n\nARGUMENTS\n  cls\n    Think of this as ``self``.  (This is because you need to implement ``__new__``\n    and not ``__init__`` when deriving from ``np.darray``.)\n\n  filename\n    The name of the file being mapped\n\n  dtype\n    The numpy datatype of the samples in the file.\n\n  shape\n    The shape of the resulting numpy.darray. Can be a tuple, or a positive\n    integer, or ``None``.\n\n  mode\n    The file is opened in this mode.\n    Must be one of ``'r'``, ``'r+'``, ``'c'``, ``'w+'``\n\n    In mode ``'r'``, the default, the file is opened read-only and\n    the ``numpy.darray`` is immutable.\n\n    In mode ``'r+'``, the file is opened read-write and changes to the\n    ``numpy.darray`` are automatically applied to the file.\n\n    In mode ``'c'``, \"copy-on-write\", the file is opened read-only, but\n    the ``numpy.darray`` is *not* immutable: changes to the array are\n    instead stored in memory.\n\n    In mode ``'w+'``, \"write\", the file is opened for write, and overwrites\n    whatever else is there.\n\n  offset\n    How many bytes in the file before the WAV data\n\n  roffset\n    How many bytes in the file after the WAV data\n\n  order\n    Samples usually get laid out in into a ``numpy.darray`` with``\n    shape=(N, C)`` where ``N`` is the number of audio frames, and ``C`` is\n    the number of channels.\n\n    This is called column major order, but this can be toggled by\n    setting the ``order`` parameter to ``F`` for Fortan or row-major row.\n\n    See https://stackoverflow.com/questions/27266338/\n\n  always_2d\n    If ``False``, the default, mono WAVE files with only one channel\n    get special treatment and are mapped to a one-dimensional vector\n    with ``size=(N,)``.\n\n    If ``True``, mono WAVE files are treated the same as any other file\n    and are mapped to a two-dimensional matrix with ``size=(N, 1)``.\n\n  warn\n    Programmers are sloppy so quite a lot of real-world WAVE files have\n    recoverable errors in their format.  ``warn`` is the function used to\n    report those recoverable errors.  By default, it's set to print to\n    ``sys.stderr`` but setting it to ``None`` disables errors entirely, or\n    you can pass your own callback in\n\nClass ``wavemap.ReadMap``\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\n(`wavemap/read.py, 18-84 <https://github.com/rec/wavemap/blob/master/wavemap/read.py#L18-L84>`_)\n\nMemory-map an existing WAVE file into a numpy vector or matrix\n\n``wavemap.ReadMap.__new__()``\n_____________________________\n\n.. code-block:: python\n\n  wavemap.ReadMap.__new__(\n       cls: Type,\n       filename: str,\n       mode: str='r',\n       order: Union[str, NoneType]=None,\n       always_2d: bool=False,\n       warn: Union[Callable, NoneType]='<function warn:  print to stderr>',\n  )\n\n(`wavemap/read.py, 21-84 <https://github.com/rec/wavemap/blob/master/wavemap/read.py#L21-L84>`_)\n\nMemory-map an existing WAVE file into a numpy matrix.\n\nARGUMENTS\n  cls\n    Think of this as ``self``.  (This is because you need to implement ``__new__``\n    and not ``__init__`` when deriving from ``np.darray``.)\n\n  filename\n    The name of the file being mapped\n\n  mode\n    The file is opened in this mode.\n    Must be one of ``'r'``, ``'r+'`` and ``'c'``.\n\n    In mode ``'r'``, the default, the file is opened read-only and\n    the ``numpy.darray`` is immutable.\n\n    In mode ``'r+'``, the file is opened read-write and changes to the\n    ``numpy.darray`` are automatically applied to the file.\n\n    In mode ``'c'``, \"copy-on-write\", the file is opened read-only, but\n    the ``numpy.darray`` is *not* immutable: changes to the array are\n    instead stored in memory.\n\n  order\n    Samples usually get laid out in into a ``numpy.darray`` with``\n    shape=(N, C)`` where ``N`` is the number of audio frames, and ``C`` is\n    the number of channels.\n\n    This is called column major order, but this can be toggled by\n    setting the ``order`` parameter to ``F`` for Fortan or row-major row.\n\n    See https://stackoverflow.com/questions/27266338/\n\n  always_2d\n    If ``False``, the default, mono WAVE files with only one channel\n    get special treatment and are mapped to a one-dimensional vector\n    with ``size=(N,)``.\n\n    If ``True``, mono WAVE files are treated the same as any other file\n    and are mapped to a two-dimensional matrix with ``size=(N, 1)``.\n\n  warn\n    Programmers are sloppy so quite a lot of real-world WAVE files have\n    recoverable errors in their format.  ``warn`` is the function used to\n    report those recoverable errors.  By default, it's set to print to\n    ``sys.stderr`` but setting it to ``None`` disables errors entirely, or\n    you can pass your own callback in\n\nClass ``wavemap.WriteMap``\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n(`wavemap/write.py, 12-115 <https://github.com/rec/wavemap/blob/master/wavemap/write.py#L12-L115>`_)\n\n\"Memory-map a new wave file into a new numpy vector or matrix\n\n``wavemap.WriteMap.__new__()``\n______________________________\n\n.. code-block:: python\n\n  wavemap.WriteMap.__new__(\n       cls: Type,\n       filename: str,\n       dtype: numpy.dtype,\n       shape: Union[NoneType, int, tuple],\n       sample_rate: int,\n       roffset: int=0,\n       warn: Union[Callable, NoneType]='<function warn:  print to stderr>',\n  )\n\n(`wavemap/write.py, 15-85 <https://github.com/rec/wavemap/blob/master/wavemap/write.py#L15-L85>`_)\n\n        Open a memory-mapped WAVE file in write mode and overwrite any existing\n        file.\n\nARGUMENTS\n  cls\n    Think of this as ``self``.  (This is because you need to implement ``__new__``\n    and not ``__init__`` when deriving from ``np.darray``.)\n\n  filename\n    The name of the file being mapped\n\n  dtype\n    The numpy datatype of the samples in the file.\n\n  shape\n    The shape of the resulting numpy.darray. Can be a tuple, or a positive\n    integer, or ``None``.\n\n  sample_rate\n    The sample rate in Hz (cycles per second)\n\n  roffset\n    How many bytes in the file after the WAV data\n\n  warn\n    Programmers are sloppy so quite a lot of real-world WAVE files have\n    recoverable errors in their format.  ``warn`` is the function used to\n    report those recoverable errors.  By default, it's set to print to\n    ``sys.stderr`` but setting it to ``None`` disables errors entirely, or\n    you can pass your own callback in\n\n``wavemap.convert()``\n~~~~~~~~~~~~~~~~~~~~~\n\n.. code-block:: python\n\n  wavemap.convert(\n       arr: numpy.ndarray,\n       dtype: Union[numpy.dtype, NoneType],\n       must_copy: bool=False,\n  )\n\n(`wavemap/convert.py, 6-77 <https://github.com/rec/wavemap/blob/master/wavemap/convert.py#L6-L77>`_)\n\nReturns a copy of a numpy array or matrix that represents audio data in\nanother type, scaling and shifting as necessary.\n\nARGUMENTS\n  arr\n    A numpy darray representing an audio signal\n\n  dtype\n    The numpy dtype to convert to - none means \"no conversion\"\n\n  must_copy\n    If true, ``arr`` is copied even if it is already the requested type\n\n(automatically generated by `doks <https://github.com/rec/doks/>`_ on 2021-02-23T14:37:02.652534)\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/rec/wavemap",
    "keywords": "testing,modules",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "wavemap",
    "package_url": "https://pypi.org/project/wavemap/",
    "platform": null,
    "project_url": "https://pypi.org/project/wavemap/",
    "project_urls": {
      "Homepage": "https://github.com/rec/wavemap"
    },
    "release_url": "https://pypi.org/project/wavemap/2.0.1/",
    "requires_dist": [
      "numpy",
      "xmod"
    ],
    "requires_python": "",
    "summary": "Memory map WAVE or raw audio files",
    "version": "2.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13947980,
  "releases": {
    "0.8.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "38eb84d4ea07b8327b2020a384a2bf033bd9731d62aa0e9bc271d9d37b3b073b",
          "md5": "3135defb204d6f528c335591ae432f7a",
          "sha256": "e2446adfa858155867ee0999c4eee767b03c0e399b383b66c82238ae973cb053"
        },
        "downloads": -1,
        "filename": "wavemap-0.8.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3135defb204d6f528c335591ae432f7a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4437,
        "upload_time": "2020-12-22T19:38:54",
        "upload_time_iso_8601": "2020-12-22T19:38:54.339883Z",
        "url": "https://files.pythonhosted.org/packages/38/eb/84d4ea07b8327b2020a384a2bf033bd9731d62aa0e9bc271d9d37b3b073b/wavemap-0.8.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "838f28ffd2a86c901fd35ceae4b5074b45cf8dc73bcbdf7692e0e7ec46f380bc",
          "md5": "01d278630ddff05db02b5d4b3a0c16b9",
          "sha256": "3010e513fa242a6c244fe073047b4e094e80f163d406a3030b7f25d58547b6b1"
        },
        "downloads": -1,
        "filename": "wavemap-0.8.0.tar.gz",
        "has_sig": false,
        "md5_digest": "01d278630ddff05db02b5d4b3a0c16b9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3997,
        "upload_time": "2020-12-22T19:38:56",
        "upload_time_iso_8601": "2020-12-22T19:38:56.075035Z",
        "url": "https://files.pythonhosted.org/packages/83/8f/28ffd2a86c901fd35ceae4b5074b45cf8dc73bcbdf7692e0e7ec46f380bc/wavemap-0.8.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a0624576f48ad55af5d9dfc5fe8590727c9df42cc1ea11f9ef1845bd5c47a85a",
          "md5": "c8cd336fad7d4deb3b7ef177faa936f1",
          "sha256": "236f79055efe1a3de9c34e18ab19dd6f34b33b844cd7405a828848cee46d2a9e"
        },
        "downloads": -1,
        "filename": "wavemap-0.9.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c8cd336fad7d4deb3b7ef177faa936f1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5505,
        "upload_time": "2020-12-27T17:34:29",
        "upload_time_iso_8601": "2020-12-27T17:34:29.176795Z",
        "url": "https://files.pythonhosted.org/packages/a0/62/4576f48ad55af5d9dfc5fe8590727c9df42cc1ea11f9ef1845bd5c47a85a/wavemap-0.9.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "920f2a0be9092af0ef262655eb0a9f1a013f38ab7f356ffc69833d72f36cef13",
          "md5": "8f585f47a10e725bf9e193ceb7895823",
          "sha256": "0e240d0899a11bf72bd64ee4540ec81ee5e2b6092ece2dd31a35790b2fbce96b"
        },
        "downloads": -1,
        "filename": "wavemap-0.9.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8f585f47a10e725bf9e193ceb7895823",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6506,
        "upload_time": "2020-12-27T17:34:30",
        "upload_time_iso_8601": "2020-12-27T17:34:30.477648Z",
        "url": "https://files.pythonhosted.org/packages/92/0f/2a0be9092af0ef262655eb0a9f1a013f38ab7f356ffc69833d72f36cef13/wavemap-0.9.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "42d8a130ef8dd5f29934cc1480e9325d2859e9ec2a9031d7e8c7257450caad54",
          "md5": "237b0de31b023e5bf3ac22c4fc07c643",
          "sha256": "71492cdcb3a34daf71574328e8aaef9927075aee4321b256d8672cf2e276b17e"
        },
        "downloads": -1,
        "filename": "wavemap-0.9.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "237b0de31b023e5bf3ac22c4fc07c643",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5961,
        "upload_time": "2020-12-27T17:48:27",
        "upload_time_iso_8601": "2020-12-27T17:48:27.398322Z",
        "url": "https://files.pythonhosted.org/packages/42/d8/a130ef8dd5f29934cc1480e9325d2859e9ec2a9031d7e8c7257450caad54/wavemap-0.9.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0e01e63f2c154e73d9f7dee9e47b2048664a1fcf87c67c87b620081d45b54e42",
          "md5": "82478cc53594ddd28a2a58334d290a4c",
          "sha256": "f01766154bb3dded23959bfee8ffdd6d3b6a62b0faf6ac4a79f642222612baca"
        },
        "downloads": -1,
        "filename": "wavemap-0.9.1.tar.gz",
        "has_sig": false,
        "md5_digest": "82478cc53594ddd28a2a58334d290a4c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6940,
        "upload_time": "2020-12-27T17:48:28",
        "upload_time_iso_8601": "2020-12-27T17:48:28.776905Z",
        "url": "https://files.pythonhosted.org/packages/0e/01/e63f2c154e73d9f7dee9e47b2048664a1fcf87c67c87b620081d45b54e42/wavemap-0.9.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9ba5155fe032cb4d59284475e6e0edd6645282857b7791a8f77b989fef0167b7",
          "md5": "e7c1cd515dc967213560b1306bef76c9",
          "sha256": "89563bbcc9c231cf57c269616f91c86e1825c0e858741cfc51f65a7a54175649"
        },
        "downloads": -1,
        "filename": "wavemap-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e7c1cd515dc967213560b1306bef76c9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4462,
        "upload_time": "2021-01-24T10:41:59",
        "upload_time_iso_8601": "2021-01-24T10:41:59.931544Z",
        "url": "https://files.pythonhosted.org/packages/9b/a5/155fe032cb4d59284475e6e0edd6645282857b7791a8f77b989fef0167b7/wavemap-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b7ccc5393692c774b22142b832cbbc8d33958066102f6f5b3e4b1107d290d8b0",
          "md5": "6a4c85962e22288e222e23dee4881f08",
          "sha256": "937d9dc9311c083e644f7960b360538fd160a9a8adf858206f0fafbdb2605dcc"
        },
        "downloads": -1,
        "filename": "wavemap-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6a4c85962e22288e222e23dee4881f08",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8813,
        "upload_time": "2021-01-24T10:42:01",
        "upload_time_iso_8601": "2021-01-24T10:42:01.800836Z",
        "url": "https://files.pythonhosted.org/packages/b7/cc/c5393692c774b22142b832cbbc8d33958066102f6f5b3e4b1107d290d8b0/wavemap-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "39f43139bd8fa84a6bd98f888bbdae134bece01ff89ee3b99039b11d61c28506",
          "md5": "c1be4e64f2b6ff404a2164e6aec781c0",
          "sha256": "30fbf5f6a40dadedca61cfa1c97e9c0119d7c5bc0de6aea99b7e65be8abb7211"
        },
        "downloads": -1,
        "filename": "wavemap-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c1be4e64f2b6ff404a2164e6aec781c0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4514,
        "upload_time": "2021-02-20T13:23:45",
        "upload_time_iso_8601": "2021-02-20T13:23:45.118626Z",
        "url": "https://files.pythonhosted.org/packages/39/f4/3139bd8fa84a6bd98f888bbdae134bece01ff89ee3b99039b11d61c28506/wavemap-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6ad84edca2f350aaaa17cfe328462715a3c8e1cdc66590d79f51ba8a6599d521",
          "md5": "c082c954c1a56fe163a7da3243c886ae",
          "sha256": "e24f4d344745ba1c309458a463a196b9455d03a01b6d4adc2cecbf115f8d5f1e"
        },
        "downloads": -1,
        "filename": "wavemap-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c082c954c1a56fe163a7da3243c886ae",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8986,
        "upload_time": "2021-02-20T13:23:46",
        "upload_time_iso_8601": "2021-02-20T13:23:46.896647Z",
        "url": "https://files.pythonhosted.org/packages/6a/d8/4edca2f350aaaa17cfe328462715a3c8e1cdc66590d79f51ba8a6599d521/wavemap-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "79d55103a940871e4da4b7b1d9c97d9076640088b00dc73f1605b481bdf74add",
          "md5": "e26f2de27dd9b63da59125c23cc27718",
          "sha256": "921e9c20c36a847f2d560e69ca24dcf56e89b051eb73ae2669b7e9216240b162"
        },
        "downloads": -1,
        "filename": "wavemap-1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e26f2de27dd9b63da59125c23cc27718",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17140,
        "upload_time": "2021-02-20T13:34:03",
        "upload_time_iso_8601": "2021-02-20T13:34:03.419084Z",
        "url": "https://files.pythonhosted.org/packages/79/d5/5103a940871e4da4b7b1d9c97d9076640088b00dc73f1605b481bdf74add/wavemap-1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "79a3e2ec28655b2fd7ba9ef73f182c7ba24a33c9d5ea6b0a2ab353b027d19fd6",
          "md5": "daf3f359f5df46804ab79f2407c6ad3d",
          "sha256": "9a2e47a914ca20267f2b5c3066a838550176250048c88c46d3c72eb288287208"
        },
        "downloads": -1,
        "filename": "wavemap-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "daf3f359f5df46804ab79f2407c6ad3d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18630,
        "upload_time": "2021-02-20T13:34:05",
        "upload_time_iso_8601": "2021-02-20T13:34:05.371143Z",
        "url": "https://files.pythonhosted.org/packages/79/a3/e2ec28655b2fd7ba9ef73f182c7ba24a33c9d5ea6b0a2ab353b027d19fd6/wavemap-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "998b5e8e7746b45fdd25c7e8310cfcb072a7c697e7ddde0031d7a1c512a8ee68",
          "md5": "a139429f36155f3a1c443b7555f94ad5",
          "sha256": "b76c29f773a40ae02cc6dffa637444383517a4eed20405273b99b03a213e16d5"
        },
        "downloads": -1,
        "filename": "wavemap-2.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a139429f36155f3a1c443b7555f94ad5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18595,
        "upload_time": "2021-02-23T13:38:50",
        "upload_time_iso_8601": "2021-02-23T13:38:50.484336Z",
        "url": "https://files.pythonhosted.org/packages/99/8b/5e8e7746b45fdd25c7e8310cfcb072a7c697e7ddde0031d7a1c512a8ee68/wavemap-2.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b7d4e72628a45542de8461cf9f695e97afba9f435f831650ef373dda0d06dd8f",
          "md5": "9a52aba948f1c125d392b00110cf1959",
          "sha256": "e3d822e3ba68a6cfadadb6ab729c8972bb3561cb7696bf3fefb666034529f2e5"
        },
        "downloads": -1,
        "filename": "wavemap-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9a52aba948f1c125d392b00110cf1959",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19442,
        "upload_time": "2021-02-23T13:38:52",
        "upload_time_iso_8601": "2021-02-23T13:38:52.431532Z",
        "url": "https://files.pythonhosted.org/packages/b7/d4/e72628a45542de8461cf9f695e97afba9f435f831650ef373dda0d06dd8f/wavemap-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c0fff94e4165d1be4c5311fd831e8e91a145a8fe68b04697c919eb402ff56efa",
          "md5": "f24ef334321eddac83f1f59ff0fce826",
          "sha256": "2cdf280d8d28c28e8183fbe89e5bd39d67de389e329392e78f6afd679789de4f"
        },
        "downloads": -1,
        "filename": "wavemap-2.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f24ef334321eddac83f1f59ff0fce826",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18675,
        "upload_time": "2022-05-26T17:45:16",
        "upload_time_iso_8601": "2022-05-26T17:45:16.006470Z",
        "url": "https://files.pythonhosted.org/packages/c0/ff/f94e4165d1be4c5311fd831e8e91a145a8fe68b04697c919eb402ff56efa/wavemap-2.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a05fede2bf5d1500b328a2ca720e38205e973b8c6dbba047613d9d7361f42ca1",
          "md5": "72f9846caa5520028dac5a2d0ac7ee12",
          "sha256": "4e9fee1ea02aacbf78e752f97e1e4dfe4b1e0f3ada92318d6f047772ba058539"
        },
        "downloads": -1,
        "filename": "wavemap-2.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "72f9846caa5520028dac5a2d0ac7ee12",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19742,
        "upload_time": "2022-05-26T17:45:18",
        "upload_time_iso_8601": "2022-05-26T17:45:18.588133Z",
        "url": "https://files.pythonhosted.org/packages/a0/5f/ede2bf5d1500b328a2ca720e38205e973b8c6dbba047613d9d7361f42ca1/wavemap-2.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c0fff94e4165d1be4c5311fd831e8e91a145a8fe68b04697c919eb402ff56efa",
        "md5": "f24ef334321eddac83f1f59ff0fce826",
        "sha256": "2cdf280d8d28c28e8183fbe89e5bd39d67de389e329392e78f6afd679789de4f"
      },
      "downloads": -1,
      "filename": "wavemap-2.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f24ef334321eddac83f1f59ff0fce826",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 18675,
      "upload_time": "2022-05-26T17:45:16",
      "upload_time_iso_8601": "2022-05-26T17:45:16.006470Z",
      "url": "https://files.pythonhosted.org/packages/c0/ff/f94e4165d1be4c5311fd831e8e91a145a8fe68b04697c919eb402ff56efa/wavemap-2.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a05fede2bf5d1500b328a2ca720e38205e973b8c6dbba047613d9d7361f42ca1",
        "md5": "72f9846caa5520028dac5a2d0ac7ee12",
        "sha256": "4e9fee1ea02aacbf78e752f97e1e4dfe4b1e0f3ada92318d6f047772ba058539"
      },
      "downloads": -1,
      "filename": "wavemap-2.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "72f9846caa5520028dac5a2d0ac7ee12",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 19742,
      "upload_time": "2022-05-26T17:45:18",
      "upload_time_iso_8601": "2022-05-26T17:45:18.588133Z",
      "url": "https://files.pythonhosted.org/packages/a0/5f/ede2bf5d1500b328a2ca720e38205e973b8c6dbba047613d9d7361f42ca1/wavemap-2.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}