{
  "info": {
    "author": "zlyuan",
    "author_email": "1277260932@qq.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# 消息中心, 避免代码的强耦合性, 支持多线程\n\n### zmsgcentre是什么\n> zmsgcentre是一个消息中心, 整个程序所有的模块和函数引用都不需要直接调用了, 而是通过消息中心进行转发, 极大的降低代码耦合性\n\n### 为什么需要降低代码耦合性\n> 在开发大型程序的时候难免会出现代码的强耦合性, 这是一个危险的设计, 假设你在维护你的程序时, 将某个函数名或参数改变了, 那么所有调用这个函数的代码都必须同时更改, 如果是少数则改代码很简单.\n+ Q: 如果是几十个甚至上百上千个地方引用了这个函数怎么办?\n+ A: 你告诉我你时间多没关系慢慢改.\n+ Q: 万一忘记了一两处没改怎么办?\n+ A: ctrl+f全局替换就行了.\n+ Q: 如果你的函数名是多用的呢, 如: 函数名为'AA', 或者某个函数名为'AAX', 某一处字符串为'AABC', 你还能淡定么?\n+ A: 正则表达式替换...\n+ Q: 新的函数名或参数是否会和其他函数产生冲突, 你的任何一处代码更改, 需花费10倍以上的时间来评估整个程序的健壮性, 更改后多个模块之间是否会冲突, 出现隐藏bug如何调试\n+ A: emmmmm.....\n\n### 如何使用zmsgcentre\n使用zmsgcentre你需要明白sender角色, receiver角色以及msg_tag\n+ sender可以理解为一个广播电台.\n+ msg_tag就是广播电台的频率\n+ receiver就是接收电台消息的接收器\n\n### 它有什么优点\n+ 一次发送广播可以被多个接收器接收.\n+ 线程安全.\n+ 支持标签级别线程锁.\n+ 允许在接收器回调函数中创建和销毁接收器, 销毁消息标签.\n+ 理解简单, 无需消息订阅系统那么复杂的创建topic和消费者观念.\n+ 使用方便, 发送者和接受器只需要一行代码定义, 不影响代码阅读性, 让代码逻辑更简单\n+ 代码开源, 精简, 整个模块只有3.5kb.\n\n###  一个简单的实例\n```python\nimport zmsgcentre # 导入zmsgcentre模块\n\ndef receiver_func(a):\n    print(a)\n\nzmsgcentre.create_receiver('test_tag', receiver_func) # 创建一个接收器, 接收消息标签为'test_tag'的内容\nzmsgcentre.send('test_tag', '广播数据') # 发送广播到'test_tag'\n```\n\n### 多模块实例\n+ manager.py\n\n```python\nimport zmsgcentre\n\nimport test_A\nimport test_B\n\ndef send(data):\n    return zmsgcentre.send('test_tag', data) #发送广播到'test_tag'\n\nif __name__ == '__main__':\n    result = send('主模块发送来的消息')\n    print(result) # send返回一个列表, 这个列表包含所有接收器的返回值(无序), 无接收器返回一个空列表\n```\n\n+ test_A.py\n\n```python\nimport zmsgcentre\n\ndef receiver_func_a(data):\n    print(data)\n    return 'test_A已收到'\n\nzmsgcentre.create_receiver('test_tag', receiver_func_a) # 创建接收器, 指定消息标签, 绑定回调函数\n```\n\n+ test_B.py\n\n```python\nimport zmsgcentre\n\ndef receiver_func_b(data):\n    print(data)\n    return 'test_B已收到'\n\nzmsgcentre.create_receiver('test_tag', receiver_func_b) # 创建接收器, 指定消息标签, 绑定回调函数\n```\n\n### 使用装饰器简化代码\n+ manager.py\n\n```python\nimport zmsgcentre\n\nimport test_A\nimport test_B\n\n@zmsgcentre.sender('test_tag') # 创建广播器, 指定广播的消息标签, 绑定广播入口为send函数\ndef send(data):\n    pass # 无需任何代码, 写了也不会执行这里的代码, 因为没必要.\n\nif __name__ == '__main__':\n    result = send('主模块发送来的消息')\n    print(result)\n```\n\n+ test_A.py\n\n```python\nimport zmsgcentre\n\n@zmsgcentre.receiver('test_tag') # 创建接收器, 指定消息标签, 绑定回调函数\ndef receiver_func_a(data):\n    print(data)\n    return 'test_A已收到'\n```\n\n+ test_B.py\n\n```python\nimport zmsgcentre\n\n@zmsgcentre.receiver('test_tag') # 创建接收器, 指定消息标签, 绑定回调函数\ndef receiver_func_b(data):\n    print(data)\n    return 'test_B已收到'\n```\n###### 注: 即使使用了装饰器定义了一个接收器, 仍然可以主动调用它, 如上可以不通过消息中心直接调用receiver_func_b\n\n### 接收器优先级\n``` python\nimport zmsgcentre\n\n# priority表示优先级, 你可以简单理解为接收器到广播器的距离, 数字越小越先收到消息, 数字相等的接收器收到消息顺序随机\n@zmsgcentre.receiver('test_tag', priority=999)\ndef receiver_func(a):\n    print(a)\n```\n\n### 更新日志\n发布时间|发布版本|发布说明\n--|:--:|---\n19-01-29 | 2.0.1 | 发送器新增一个参数stop_send_flag, 如果有一个接收器返回这个标记则停止发送(内部使用is判断)并且返回True\n19-01-10 | 2.0.0 | <li>新增了接收器优先级</li> <li>优化了接收器函数中创建和销毁接收器的逻辑, 用户不需要再去判断是否强制使用线程来创建销毁接收器</li> <li>优化了多线程安全</li> <li>更改了所有函数名</li>\n18-10-05 | 1.0.3 | 这是v1版本的最后一版, 将不再更新, 请使用最新版本\n\n- - -\n##### 本项目仅供所有人学习交流使用, 禁止用于商业用途\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://pypi.org/",
    "keywords": "",
    "license": "GNU GENERAL PUBLIC LICENSE",
    "maintainer": "",
    "maintainer_email": "",
    "name": "zmsgcentre",
    "package_url": "https://pypi.org/project/zmsgcentre/",
    "platform": "all",
    "project_url": "https://pypi.org/project/zmsgcentre/",
    "project_urls": {
      "Homepage": "https://pypi.org/"
    },
    "release_url": "https://pypi.org/project/zmsgcentre/2.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "消息中心, 避免代码的强耦合性, 支持多线程",
    "version": "2.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4753099,
  "releases": {
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f6e7cda006cc7068e9af968e726933bc700bf38b0ebe2ae85c42f2d2b1e069cf",
          "md5": "c6f9597ca860c20f4b23b3a55208212c",
          "sha256": "fc0b25652eab5302df2f15cc482dfa68f1e37070e27393e892be2188f313f60c"
        },
        "downloads": -1,
        "filename": "zmsgcentre-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c6f9597ca860c20f4b23b3a55208212c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 2231,
        "upload_time": "2018-10-05T06:08:58",
        "upload_time_iso_8601": "2018-10-05T06:08:58.286394Z",
        "url": "https://files.pythonhosted.org/packages/f6/e7/cda006cc7068e9af968e726933bc700bf38b0ebe2ae85c42f2d2b1e069cf/zmsgcentre-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1a4aec41347e2b641a006a63a96444135ec90e5e55e723339435ceb51384e895",
          "md5": "97dcaeba2165c2de737d62188c5a26bb",
          "sha256": "a9e0a5e7aa369fa8e4cd0a441e07716ff82f364bc7d0726ff00ff0eeb51b467f"
        },
        "downloads": -1,
        "filename": "zmsgcentre-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "97dcaeba2165c2de737d62188c5a26bb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2010,
        "upload_time": "2018-10-05T06:08:59",
        "upload_time_iso_8601": "2018-10-05T06:08:59.394957Z",
        "url": "https://files.pythonhosted.org/packages/1a/4a/ec41347e2b641a006a63a96444135ec90e5e55e723339435ceb51384e895/zmsgcentre-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9e17e77920f13f2c5e003f145afe6256a8b3ee69dbfee0b9f865295253b70270",
          "md5": "3329ad9df12587e79e30a1f6ef94295a",
          "sha256": "d945288ee1eac512334c2aef496f9127ad755751060df4b1701df8e6938a40ff"
        },
        "downloads": -1,
        "filename": "zmsgcentre-2.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3329ad9df12587e79e30a1f6ef94295a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16852,
        "upload_time": "2019-01-10T02:10:25",
        "upload_time_iso_8601": "2019-01-10T02:10:25.274726Z",
        "url": "https://files.pythonhosted.org/packages/9e/17/e77920f13f2c5e003f145afe6256a8b3ee69dbfee0b9f865295253b70270/zmsgcentre-2.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee8d15ae460709eba09788c309b116cb71c06b512f7f66294c9681bdd57c872a",
          "md5": "d6137e1d2ed1e90700af87eeb6003ea4",
          "sha256": "e98a2d3a1c4e24f9683a8f944ade70b848f5d6557940ccd8ae60c7d6cd008588"
        },
        "downloads": -1,
        "filename": "zmsgcentre-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d6137e1d2ed1e90700af87eeb6003ea4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4432,
        "upload_time": "2019-01-10T02:10:34",
        "upload_time_iso_8601": "2019-01-10T02:10:34.093503Z",
        "url": "https://files.pythonhosted.org/packages/ee/8d/15ae460709eba09788c309b116cb71c06b512f7f66294c9681bdd57c872a/zmsgcentre-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2c965682d0a23235d6644fba7e75fa9cabafcab7ec2379fadee876c6f8379789",
          "md5": "c8fcabf352b046541da3e7b8f0089b4d",
          "sha256": "c55571dc777fe72a8c2dc5f54d3d4724443df831ac4d19a494273a741e62408c"
        },
        "downloads": -1,
        "filename": "zmsgcentre-2.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c8fcabf352b046541da3e7b8f0089b4d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17079,
        "upload_time": "2019-01-29T04:09:19",
        "upload_time_iso_8601": "2019-01-29T04:09:19.773100Z",
        "url": "https://files.pythonhosted.org/packages/2c/96/5682d0a23235d6644fba7e75fa9cabafcab7ec2379fadee876c6f8379789/zmsgcentre-2.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2c965682d0a23235d6644fba7e75fa9cabafcab7ec2379fadee876c6f8379789",
        "md5": "c8fcabf352b046541da3e7b8f0089b4d",
        "sha256": "c55571dc777fe72a8c2dc5f54d3d4724443df831ac4d19a494273a741e62408c"
      },
      "downloads": -1,
      "filename": "zmsgcentre-2.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c8fcabf352b046541da3e7b8f0089b4d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 17079,
      "upload_time": "2019-01-29T04:09:19",
      "upload_time_iso_8601": "2019-01-29T04:09:19.773100Z",
      "url": "https://files.pythonhosted.org/packages/2c/96/5682d0a23235d6644fba7e75fa9cabafcab7ec2379fadee876c6f8379789/zmsgcentre-2.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}