{
  "info": {
    "author": "Luke Pratley & Matthijs Mars & Matthew Price & Contributors",
    "author_email": "luke.pratley@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "Optimus-Primal: A Lightweight primal-dual solver\n========================================================\n\n.. image:: https://img.shields.io/badge/GitHub-optimusprimal-brightgreen.svg?style=flat\n    :target: https://github.com/astro-informatics/Optimus-Primal\n.. image:: https://github.com/astro-informatics/Optimus-Primal/actions/workflows/python.yml/badge.svg\n    :target: https://github.com/astro-informatics/Optimus-Primal/actions/workflows/python.yml\n.. image:: https://codecov.io/gh/astro-informatics/Optimus-Primal/branch/master/graph/badge.svg?token=AJIQGKU8D2\n    :target: https://codecov.io/gh/astro-informatics/Optimus-Primal\n.. image:: https://badge.fury.io/py/optimusprimal.svg\n    :target: https://badge.fury.io/py/optimusprimal\n.. image:: https://img.shields.io/badge/License-GPL-blue.svg\n    :target: http://perso.crans.org/besson/LICENSE.html\n\n``optimusprimal`` is a light weight proximal splitting Forward Backward Primal Dual based solver for convex optimization problems. \nThe current version supports finding the minimum of f(x) + h(A x) + p(B x) + g(x), where f, h, and p are lower semi continuous and have proximal operators, and g is differentiable. A and B are linear operators.\nTo learn more about proximal operators and algorithms, visit `proximity operator repository <http://proximity-operator.net/index.html>`_. We suggest that users read the tutorial `\"The Proximity Operator Repository. User's guide\" <http://proximity-operator.net/download/guide.pdf>`_.\n\nQUICK INSTALL\n==============================================\nYou can install ``optimusprimal`` with PyPi by running\n\n.. code-block:: bash\n\n    pip install optimusprimal\n\nINSTALL FROM SOURCE\n==============================================\nAlternatively, you can install ``optimusprimal`` from GitHub by first cloning the repository \n\n.. code-block:: bash\n\n    git clone git@github.com:astro-informatics/Optimus-Primal.git\n    cd Optimus-Primal\n\nand running the build script and run install tests by\n\n.. code-block:: bash \n\n    bash build_optimusprimal.sh \n    pytest --black optimusprimal/tests/\n\nBASIC USAGE\n==============================================\nAfter installing ``optimusprimal`` one can *e.g.* perform an constrained proximal primal dual reconstruction by\n\n.. code-block:: python \n\n    import numpy as np \n    import optimusprimal.primal_dual as primal_dual\n    import optimusprimal.linear_operators as linear_ops \n    import optimusprimal.prox_operators as prox_ops \n\n    options = {'tol': 1e-5, 'iter': 5000, 'update_iter': 50, 'record_iters': False}\n\n    # Load some data\n    y = np.load('Some observed signal y')                                 # Load a file of observed data.\n    epsilon = sigma * np.sqrt(y.size + 2 np.sqrt(y.size))                 # where sigma is your noise std.\n\n    # Define a forward model i.e. y = M(x) + n\n    M = np.ones_like(y)                                                   # Here M = Identity for simplicity.\n    p = prox_ops.l2_ball(epsilon, y, linear_ops.diag_matrix_operator(M))  # Create a l2-ball data-fidelity.\n\n    # Define a regularisation i.e. ||W(x)||_1\n    wav = ['db1', 'db3', 'db4']                                           # Select some wavelet dictionaries.\n    psi = linear_operators.dictionary(wav, levels=6, y.shape)             # Define multi-dictionary wavelets.\n    h = prox_ops.l1_norm(gamma=1, psi)                                    # Create an l1-norm regulariser.\n\n    # Recover an estiamte i.e. x_est = min[h(x)] s.t. p(x) <= epsilon\n    x_est, = primal_dual.FBPD(y, options, None, None, h, p, None)         # Recover an estimate of x.\n\nCONTRIBUTORS\n==============================================\n`Luke Pratley <https://www.lukepratley.com>`_, `Matthijs Mars <https://www.linkedin.com/in/matthijs-mars/>`_, `Matthew Price <https://cosmomatt.github.io>`_.\n\nLICENSE\n==============================================\n\n``optimusprimal`` is released under the GPL-3 license (see `LICENSE.txt <https://github.com/astro-informatics/Optimus-Primal/blob/master/LICENSE>`_), subject to \nthe non-commercial use condition.\n\n.. code-block::\n\n     optimusprimal\n     Copyright (C) 2021 Luke Pratley & contributors\n\n     This program is released under the GPL-3 license (see LICENSE.txt), \n     subject to a non-commercial use condition (see LICENSE_EXT.txt).\n\n     This program is distributed in the hope that it will be useful,\n     but WITHOUT ANY WARRANTY; without even the implied warranty of\n     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/astro-informatics/Optimus-Primal",
    "keywords": "",
    "license": "GNU General Public License v3 (GPLv3)",
    "maintainer": "",
    "maintainer_email": "",
    "name": "optimusprimal",
    "package_url": "https://pypi.org/project/optimusprimal/",
    "platform": "",
    "project_url": "https://pypi.org/project/optimusprimal/",
    "project_urls": {
      "Homepage": "https://github.com/astro-informatics/Optimus-Primal"
    },
    "release_url": "https://pypi.org/project/optimusprimal/0.0.2/",
    "requires_dist": [
      "numpy",
      "scipy",
      "PyWavelets",
      "black"
    ],
    "requires_python": "",
    "summary": "Convex Optimization Primal Dual Solver",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12958211,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "97b2677250510a80ca0a17895dc2a0cc8de6bcf7ac8f470bdace75d1ae9f2b28",
          "md5": "501619d64981c29126946ab5dc4c16cb",
          "sha256": "c396dd8f7efecf86037a870f2e9e26ef25f00342c5cfc216b98aa9369c63d47d"
        },
        "downloads": -1,
        "filename": "optimusprimal-0.0.1-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "501619d64981c29126946ab5dc4c16cb",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": ">=3.6",
        "size": 25394,
        "upload_time": "2021-09-09T06:31:26",
        "upload_time_iso_8601": "2021-09-09T06:31:26.023251Z",
        "url": "https://files.pythonhosted.org/packages/97/b2/677250510a80ca0a17895dc2a0cc8de6bcf7ac8f470bdace75d1ae9f2b28/optimusprimal-0.0.1-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "420582022fe0952f099c0e4a25f40115e6ea7049d6a8a771274fa7f45094aa6c",
          "md5": "3aa55b6185e346948feb2fe1c889316c",
          "sha256": "8559c88b1ed7f918c6a0fc8a5ab035e017d7cd0eed1700253172544e26fd9765"
        },
        "downloads": -1,
        "filename": "optimusprimal-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3aa55b6185e346948feb2fe1c889316c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10347,
        "upload_time": "2021-09-09T06:31:27",
        "upload_time_iso_8601": "2021-09-09T06:31:27.018241Z",
        "url": "https://files.pythonhosted.org/packages/42/05/82022fe0952f099c0e4a25f40115e6ea7049d6a8a771274fa7f45094aa6c/optimusprimal-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "564f02c4f02cddc4e1f89a918cb2d8b7c41e6aa22a609582d8b3b43454044868",
          "md5": "d15a332076def300ebb62aa8b3c27b1a",
          "sha256": "32f61941b43880bf3c9a2679045c422fe0c16371ccc7ca688f14ea5d867a2210"
        },
        "downloads": -1,
        "filename": "optimusprimal-0.0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d15a332076def300ebb62aa8b3c27b1a",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 26176,
        "upload_time": "2022-02-21T09:48:28",
        "upload_time_iso_8601": "2022-02-21T09:48:28.842083Z",
        "url": "https://files.pythonhosted.org/packages/56/4f/02c4f02cddc4e1f89a918cb2d8b7c41e6aa22a609582d8b3b43454044868/optimusprimal-0.0.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "564f02c4f02cddc4e1f89a918cb2d8b7c41e6aa22a609582d8b3b43454044868",
        "md5": "d15a332076def300ebb62aa8b3c27b1a",
        "sha256": "32f61941b43880bf3c9a2679045c422fe0c16371ccc7ca688f14ea5d867a2210"
      },
      "downloads": -1,
      "filename": "optimusprimal-0.0.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d15a332076def300ebb62aa8b3c27b1a",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 26176,
      "upload_time": "2022-02-21T09:48:28",
      "upload_time_iso_8601": "2022-02-21T09:48:28.842083Z",
      "url": "https://files.pythonhosted.org/packages/56/4f/02c4f02cddc4e1f89a918cb2d8b7c41e6aa22a609582d8b3b43454044868/optimusprimal-0.0.2-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}