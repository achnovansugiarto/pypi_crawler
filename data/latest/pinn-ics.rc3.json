{
  "info": {
    "author": "threezinedine",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "Programming Language :: Python :: 3 :: Only"
    ],
    "description": "\r\n# pinn-ics\r\r\nPINN framework\r\r\n\r\r\n\r\r\n# Installation \r\r\n```python\r\r\n    pip install pinn-ics\r\r\n```\r\r\n\r\r\nLatest version: `1.0.2`\r\r\n    - New Features: `RAR algorithm` - generate data where the loss is higher\r\r\n\r\r\n# Syntax\r\r\n\r\r\n## Var Configuration\r\r\n\r\r\n- `pinnics` requires configurations for all variables.\r\r\n    - `VarSpec` can import directly from `pinnics`\r\r\n    - `VarSpec` object contains `indentify character` and `limit` of this variable.\r\r\n- Example: \r\r\n    - Your solution depends on 2 domains: `dimension` and `time`.\r\r\n    - Format `u(x, t)`\r\r\n    \r\r\n```python\r\r\nfrom pinnics import VarSpec\r\r\nx = VarSpec('x', limit=(-1, 1))\r\r\nt = VarSpec('x') # which defaults the limit of var t from 0 to 1\r\r\n```\r\r\n\r\r\n## Function Definition\r\r\n\r\r\n- `pinnics` supports solving partial differential equation with the simple syntax.\r\r\n    - Define a `function` with format:\r\r\n\r\r\n    ```python\r\r\n    import numpy as np \r\r\n    import tensorflow as tf\r\r\n\r\r\n    def pde_loss(res):\r\r\n\r\r\n        # that presents u = u(x, t)\r\r\n        u = res(x='x', t='t', num=10000)\r\r\n\r\r\n        # u't + u * u'x = 3 * u''xx + sin(pi * x)\r\r\n        return u.diff('t') + u() * u.diff('x') - 3 * u.diff('x', 'x') - tf.sin(np.pi * res.var['x'])\r\r\n    ```\r\r\n    - Whereas:\r\r\n        - `res` is the required predefine argument, that will store all information.\r\r\n        - `u = res(x='x', t='t', num==10000)` that represents `u = u(x, t)`. \r\r\n        - You can also use like that `u = res(x=-1., t='t')` that represents `u = u(-1, t)`\r\r\n        - `u()` will return the value of `u(x, t)`\r\r\n        - `u.diff('x')` returns the first order partial derivative of `u(x, t)` by `x`\r\r\n        - `u.diff('x', 'x')` returns the second order partial derivative\r\r\n        - `res.var['x']` is the input value `x` for the model.\r\r\n\r\r\n## Network\r\r\n\r\r\n- `pinnics` provides a `Network` class to help people solve `PDE` problems by easy way.\r\r\n\r\r\nExample:\r\r\n```python\r\r\nfrom pinnics import NetWork\r\r\n\r\r\n# define network to solve pde problem. \r\r\nnet = NetWork(variables=[x, t], \r\r\n    losses = [pde_loss],\r\r\n    layers=[2, 20, 20, 20, 1])\r\r\n\r\r\nnet.solve(epochs=10000, show_every=1000)\r\r\n```\r\r\n\r\r\n- Whereas:\r\r\n    - `variables`, `losses`, `layers` are required to create a new network.\r\r\n        - `variables` is the `list` which contains all `variables` (`VarSpec` object) of model.\r\r\n        - `losses` is the `list` which contains all `equations` (function defined in previous part).\r\r\n        - `layers` is the `list` that represents network's architecture.\r\r\n    - Non-required arguments:\r\r\n        - `activation_func`: the activation function after each layer (expect result layer), `default` by `tf.keras.activations.tanh`\r\r\n        - `optimizer`: the optimizer of model, `default` by `tf.keras.optimizers.Adam()`\r\r\n        - `initializer_func`: the initializer for model's parameters, `default` by `tf.keras.initializer.glorut_normal`\r\r\n    - `net.solve(10000)` will training and approximate the result.\r\r\n\r\r\nAfter obtaining the model, you can get predict by using __call__() function.\r\r\n```python\r\r\nx = np.linspace (-1, 1, 200).reshape(-1, 1)\r\r\nt = np.linspace (0, 1, 200).reshape(-1, 1)\r\r\ninput = np.concatentate([x, t], axis=1)\r\r\ny_pred = net(input)\r\r\n```\r\r\n\r\r\n## A completely example\r\r\n\r\r\n```python\r\r\nfrom pinnics import NetWork, VarSpec\r\r\nimport matplotlib.pyplot as plt\r\r\nimport numpy as np\r\r\n\r\r\n\r\r\nt = VarSpec('t', limit=(0, 5))\r\r\n\r\r\ndef pde(res):\r\r\n    u = res(t='t', num=1000)\r\r\n    return u.diff('t', 't') + 3*u.diff('t') + 2*u()\r\r\n\r\r\ndef bound(res):\r\r\n    u_pos = res(t=0, num=50)\r\r\n    return u_pos() - 3\r\r\n\r\r\ndef bound_t(res):\r\r\n    u_zero = res(t=0, num=50)\r\r\n    return u_zero.diff('t') - 1\r\r\n\r\r\nnet = NetWork(variables=[t], losses=[pde, bound, bound_t], layers=[1, 20, 20, 1])\r\r\nnet.solve(epochs=1000, show_every=100)\r\r\n\r\r\nplt.plot(net.history_loss)\r\r\nplt.show()\r\r\n\r\r\nx = np.linspace(0, 5, 300).reshape(-1, 1)\r\r\ny = 7 * np.exp(-x) - 4 * np.exp(-2 * x)\r\r\ny_pred = net(x)\r\r\n\r\r\n\r\r\nplt.plot(x, y, label='truth', linewidth=3)\r\r\nplt.plot(x, y_pred, label='predict', linewidth=3, linestyle='dashed')\r\r\nplt.plot(x, y-y_pred, label='different') \r\r\nplt.show()\r\r\n```\r\r\n\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "python,scientist,equation solver",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pinn-ics",
    "package_url": "https://pypi.org/project/pinn-ics/",
    "platform": "",
    "project_url": "https://pypi.org/project/pinn-ics/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/pinn-ics/1.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Solving physics problems by using Deep Learning",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12658558,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "73481afdb46bdf37846a5e0ebbbb4e50a6df33c5b6f1fd82e4a6919b36d243c2",
          "md5": "206f68cab1ea72374509c2d0c1e6e3bf",
          "sha256": "7384a17f3423eb210e5ee9cf80d1a44bed7b7f7ed245c42d54f140a5b27ba9ad"
        },
        "downloads": -1,
        "filename": "pinn-ics-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "206f68cab1ea72374509c2d0c1e6e3bf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3862,
        "upload_time": "2022-01-13T06:52:58",
        "upload_time_iso_8601": "2022-01-13T06:52:58.049778Z",
        "url": "https://files.pythonhosted.org/packages/73/48/1afdb46bdf37846a5e0ebbbb4e50a6df33c5b6f1fd82e4a6919b36d243c2/pinn-ics-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cc86e4a34abad422b07a3bd171851c1084e5a67d577cce2a93f462f4832ab8ff",
          "md5": "42aa1e9744a1d278e5973c7fcb4d8b24",
          "sha256": "a0f9e9a2580c1e58b21162dc5df67cb8db63e13eeffb9cc07dcac61187ea8e56"
        },
        "downloads": -1,
        "filename": "pinn_ics-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "42aa1e9744a1d278e5973c7fcb4d8b24",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6581,
        "upload_time": "2022-01-16T00:32:46",
        "upload_time_iso_8601": "2022-01-16T00:32:46.106696Z",
        "url": "https://files.pythonhosted.org/packages/cc/86/e4a34abad422b07a3bd171851c1084e5a67d577cce2a93f462f4832ab8ff/pinn_ics-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "debe35404488bfbc8d5acb2f309ef53a740478db064adbf388cc8b8c080813bc",
          "md5": "5242ef6eea582a2ee7b8ed679fc94f2b",
          "sha256": "714a8ebf0a325c59b68b582e2d0282794abcea66d430d9b5d3781d58bd17392a"
        },
        "downloads": -1,
        "filename": "pinn-ics-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "5242ef6eea582a2ee7b8ed679fc94f2b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6787,
        "upload_time": "2022-01-23T09:57:35",
        "upload_time_iso_8601": "2022-01-23T09:57:35.319304Z",
        "url": "https://files.pythonhosted.org/packages/de/be/35404488bfbc8d5acb2f309ef53a740478db064adbf388cc8b8c080813bc/pinn-ics-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "debe35404488bfbc8d5acb2f309ef53a740478db064adbf388cc8b8c080813bc",
        "md5": "5242ef6eea582a2ee7b8ed679fc94f2b",
        "sha256": "714a8ebf0a325c59b68b582e2d0282794abcea66d430d9b5d3781d58bd17392a"
      },
      "downloads": -1,
      "filename": "pinn-ics-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "5242ef6eea582a2ee7b8ed679fc94f2b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6787,
      "upload_time": "2022-01-23T09:57:35",
      "upload_time_iso_8601": "2022-01-23T09:57:35.319304Z",
      "url": "https://files.pythonhosted.org/packages/de/be/35404488bfbc8d5acb2f309ef53a740478db064adbf388cc8b8c080813bc/pinn-ics-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}