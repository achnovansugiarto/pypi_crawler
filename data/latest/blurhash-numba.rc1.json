{
  "info": {
    "author": "Ankit Mahato",
    "author_email": "ankit@realworldpython.guide",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Information Technology",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/animator/blurhash-numba/master/media/logo-text.png\" alt=\"Blurhash numba logo\">\n</p>\n\n# blurhash-numba : The fastest Python 3 BlurHash implementation *powered by* numba\n[![Build Status](https://travis-ci.com/animator/blurhash-numba.svg?branch=master)](https://travis-ci.com/animator/blurhash-numba)\n\n## What is BlurHash?\n\nBlurHash is a compact representation of a placeholder for an image.  \n\n<img src=\"https://raw.githubusercontent.com/animator/blurhash-numba/master/media/WhyBlurHash.png\" width=\"600\">\n\nBlurHash encoder consumes an image, and provides a short string (only 20-30 characters!) that represents the placeholder for the image. You perform this on the backend of your service, and store the string along with the image. When you send data to any client, you send both the URL to the image, and the BlurHash string. Your client then takes the string, and decodes it into an image that it shows while the real image is loading over the network. The string is short enough that it comfortably fits into whatever data format you use. For instance, it can easily be added as a field in a JSON object.\n\nIn summary:\n\n<img src=\"https://raw.githubusercontent.com/animator/blurhash-numba/master/media/HowItWorks1.jpg\" width=\"250\">&nbsp;&nbsp;&nbsp;<img src=\"https://raw.githubusercontent.com/animator/blurhash-numba/master/media/HowItWorks2.jpg\" width=\"250\">\n\nRead more about the algorithm [here](https://github.com/woltapp/blurhash/blob/master/Algorithm.md).\n\n# Installation\n\nYou can install `blurhash-numba` using pip3\n```\n$ pip3 install blurhash-numba\n```\n\nYou can also optionally install `Pillow` (PIL) along with `blurhash-numba` in case it is not already installed\n```\n$ pip3 install blurhash-numba[pillow]\n```\n\n# Usage\n\n## Encoding \n\nAs `blurhash_numba.encode` accepts the image in the form of a `numpy` array. You can convert an image file using the `Pillow` python library.\n\n```python\nfrom blurhash_numba import encode\nfrom PIL import Image\nimport numpy as np\n\nimage = Image.open(\"256.jpg\")\n```\n\n\n> `image`    \n> <img src=\"https://raw.githubusercontent.com/animator/blurhash-numba/master/media/256.jpg\" width=\"256\">\n\n```python\nimage_array = np.array(image.convert(\"RGB\"), dtype=np.float)\nblurhash_code = encode(image_array, x_components = 4, y_components = 3)\n```\n\n> `blurhash_code`    \n> `'LtL#LZR*x]jG.TRkoeayIUofM{R*'`\n\n`y_components` and `x_components` parameters adjust the amount of\nvertical and horizontal AC components in hashed image. Both parameters must\nbe `>= 1` and `<= 9`.\n\n## Decoding\n\n```python\nfrom blurhash_numba import decode\nfrom PIL import Image\nimport numpy as np\n\nblur_img = Image.fromarray(np.array(decode(blur_hash, 256, 256)).astype('uint8'))\n```\n\n> `blur_img`    \n> <img src=\"https://raw.githubusercontent.com/animator/blurhash-numba/master/media/256-blur.jpg\" width=\"256\">\n\n# Tests\n\nRun test suite with `pytest` in virtual environment\n```\n$ pytest\n```\n\n# FAQs\n\n## Why should I use blurhash-numba?\n\nThis is the fastest implementation of the BlurHash algorithm (both encoding & decoding) in Python currently as it uses `numba` to directly convert the Python+NumPy code into fast machine code. It is 30-70x faster than [halcy/blurhash-python](https://github.com/halcy/blurhash-python) and 2-4x faster than [woltapp/blurhash](https://github.com/woltapp/blurhash).\n\n## How do I pick the number of X and Y components?\n\nIt depends a bit on taste. The more components you pick, the more information is retained in the placeholder, but the longer the BlurHash string will be. Also, it doesn't always look good with too many components. We usually go with 4 by 3, which seems to strike a nice balance.\n\nHowever, you should adjust the number of components depending on the aspect ratio of your images. For instance, very wide images should have more X components and fewer Y components.\n\n## What is the `punch` parameter in this implementations?\n\nIt is a parameter that adjusts the contrast on the decoded image. 1 means normal, smaller values will make the effect more subtle, and larger values will make it stronger. This is basically a design parameter, which lets you adjust the look.\n\nTechnically, what it does is scale the AC components up or down.\n\n# Credits\n\nThis project is based on the pure python BlurHash implementation by [halcy/blurhash-python](https://github.com/halcy/blurhash-python).   \nAlso credit goes to the original implementation by [woltapp/blurhash](https://github.com/woltapp/blurhash). \n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://realworldpython.guide/blurhash-numba/",
    "keywords": "blurhash python numba placeholder image",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "blurhash-numba",
    "package_url": "https://pypi.org/project/blurhash-numba/",
    "platform": "",
    "project_url": "https://pypi.org/project/blurhash-numba/",
    "project_urls": {
      "Bug Tracker": "https://github.com/animator/blurhash-numba/issues",
      "Documentation": "https://realworldpython.guide/blurhash-numba/",
      "Homepage": "https://realworldpython.guide/blurhash-numba/",
      "Source Code": "https://github.com/animator/blurhash-numba"
    },
    "release_url": "https://pypi.org/project/blurhash-numba/0.0.1/",
    "requires_dist": [
      "numba (>=0.51.0)",
      "Pillow (>=7.2.0) ; extra == 'pillow'",
      "pytest ; extra == 'testing'",
      "Pillow (>=7.2.0) ; extra == 'testing'"
    ],
    "requires_python": ">=3.6",
    "summary": "Numba aware BlurHash encoder and decoder implementation for Python",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8267994,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "411e90c0fe560648c4cc8ec6b6ffe79fd0a72493bd4e487b0c71f1fe26dc9553",
          "md5": "033c3a69f9f87cce7e3ebd8a925d125e",
          "sha256": "fd29f128b39b6061f5476d4122e0ac57d620ac24787563daa8fdda476afe2343"
        },
        "downloads": -1,
        "filename": "blurhash_numba-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "033c3a69f9f87cce7e3ebd8a925d125e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6743,
        "upload_time": "2020-09-25T02:00:33",
        "upload_time_iso_8601": "2020-09-25T02:00:33.227781Z",
        "url": "https://files.pythonhosted.org/packages/41/1e/90c0fe560648c4cc8ec6b6ffe79fd0a72493bd4e487b0c71f1fe26dc9553/blurhash_numba-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fac8b4ed70da73de95aaf81ae577a0c33a0c44dd1974eb91b361d12bc300bdb9",
          "md5": "7acb0b161dd5f6780692e56d0086d555",
          "sha256": "d5a1edbc3ec182f229992b9dee65f243ed732173548992262cdce81456c2be14"
        },
        "downloads": -1,
        "filename": "blurhash-numba-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7acb0b161dd5f6780692e56d0086d555",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6148,
        "upload_time": "2020-09-25T02:00:36",
        "upload_time_iso_8601": "2020-09-25T02:00:36.198519Z",
        "url": "https://files.pythonhosted.org/packages/fa/c8/b4ed70da73de95aaf81ae577a0c33a0c44dd1974eb91b361d12bc300bdb9/blurhash-numba-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "411e90c0fe560648c4cc8ec6b6ffe79fd0a72493bd4e487b0c71f1fe26dc9553",
        "md5": "033c3a69f9f87cce7e3ebd8a925d125e",
        "sha256": "fd29f128b39b6061f5476d4122e0ac57d620ac24787563daa8fdda476afe2343"
      },
      "downloads": -1,
      "filename": "blurhash_numba-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "033c3a69f9f87cce7e3ebd8a925d125e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 6743,
      "upload_time": "2020-09-25T02:00:33",
      "upload_time_iso_8601": "2020-09-25T02:00:33.227781Z",
      "url": "https://files.pythonhosted.org/packages/41/1e/90c0fe560648c4cc8ec6b6ffe79fd0a72493bd4e487b0c71f1fe26dc9553/blurhash_numba-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fac8b4ed70da73de95aaf81ae577a0c33a0c44dd1974eb91b361d12bc300bdb9",
        "md5": "7acb0b161dd5f6780692e56d0086d555",
        "sha256": "d5a1edbc3ec182f229992b9dee65f243ed732173548992262cdce81456c2be14"
      },
      "downloads": -1,
      "filename": "blurhash-numba-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "7acb0b161dd5f6780692e56d0086d555",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 6148,
      "upload_time": "2020-09-25T02:00:36",
      "upload_time_iso_8601": "2020-09-25T02:00:36.198519Z",
      "url": "https://files.pythonhosted.org/packages/fa/c8/b4ed70da73de95aaf81ae577a0c33a0c44dd1974eb91b361d12bc300bdb9/blurhash-numba-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}