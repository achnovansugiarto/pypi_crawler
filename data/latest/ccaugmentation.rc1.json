{
  "info": {
    "author": "Piotr Juszczyk",
    "author_email": "piotr.a.juszczyk@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# CCAugmentation\n\nData preprocessing and augmentation framework that is designed for working with crowd counting datasets.\nIt supports multitude of simple as well as advanced transformations\nand is based on pipelines which allow a flexible flow of data between loaders, transformations and outputs.\nDeep learning framework-independent, though works best with PyTorch.\n\n## Current capabilities\n\nEach data preprocessing procedure is defined in form of a pipeline that consists of a data loader and\na list of operations to sequentially execute on the data. Each of the operations may be of the following types:\n- **Transformation** - Returns transformed data on output, does not have side effects\n- **Output** - Returns unmodified data on output, has side effects that, for example, write data to files\n- **Operation** - Performs any other functions, not qualifying for any of the aforementioned types\n\nAvailable transformations are:\n- **Crop**\n- **Scale**\n- **Downscale**\n- **Rotate**\n- **StandardizeSize**\n- **Normalize**\n- **NormalizeDensityMap**\n- **FlipLR**\n- **ToGrayscale**\n- **LambdaTransformation**\n- **Cutout**\n\nAvailable outputs are:\n- **Demonstrate**\n- **SaveImagesToFiles**\n- **SaveImagesToBinaryFile**\n- **SaveDensityMapsToCSVFiles**\n- **SaveDensityMapsToBinaryFile**\n\nAvailable operations are:\n- **Duplicate**\n- **Dropout**\n- **RandomArgs**\n- **OptimizeBatch**\n\nAvailable loaders are:\n- **BasicImageFileLoader**\n- **ImageFileLoader**\n- **BasicGTPointsMatFileLoader**\n- **GTPointsMatFileLoader**\n- **BasicDensityMapCSVFileLoader**\n- **DensityMapCSVFileLoader**\n- **VariableLoader**\n- **ConcatenatingLoader**\n- **CombinedLoader**\n\nFor more information about the specific topics, please refer to the related comments in the code.\n\n## How to use\n\nLoading the data from ShanghaiTech dataset and taking crops with 1/4 size:\n\n    import CCAugmentation as cca\n    import CCAugmentation as ccat\n\n\n    train_data_pipeline = cca.Pipeline(\n        cca.examples.loading.SHHLoader(\"/data/ShanghaiTech/\", \"train\", \"B\"),\n        [\n            ccat.Crop(None, None, 1/4, 1/4)\n        ]\n    )\n\n    train_img, train_dm = train_data_pipeline.execute_collect()\n    # you can also use execute_generate() to create a generator\n\n    print(len(train_img), len(train_dm))\n\nTo see more examples of usage, please see our [experiment environment repository](https://github.com/m-konopka/CCAugmentation-Experiments-Env).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pijuszczyk/CCAugmentation",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ccaugmentation",
    "package_url": "https://pypi.org/project/ccaugmentation/",
    "platform": "",
    "project_url": "https://pypi.org/project/ccaugmentation/",
    "project_urls": {
      "Homepage": "https://github.com/pijuszczyk/CCAugmentation"
    },
    "release_url": "https://pypi.org/project/ccaugmentation/0.1.0/",
    "requires_dist": [
      "numpy (==1.19.3)",
      "opencv-python",
      "matplotlib",
      "scipy",
      "tqdm"
    ],
    "requires_python": "",
    "summary": "Data preprocessing & augmentation framework, designed for working with crowd counting datasets and ML/DL framework-independent. Supports multitude of simple as well as advanced transformations, outputs and loaders, all of them to be combined using pipelines.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8842625,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2bc884ee56cb4327c3434fb71eaca9c34d3ae7f0ceb1866ad66730d4e3477dfa",
          "md5": "06a7b656b5df9f2fc8ba8801093cc085",
          "sha256": "83bcda4455d3dffdb805d0eb891c4b41f349aa02d7acc48441a247a615af8185"
        },
        "downloads": -1,
        "filename": "ccaugmentation-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "06a7b656b5df9f2fc8ba8801093cc085",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 25417,
        "upload_time": "2020-12-07T20:00:54",
        "upload_time_iso_8601": "2020-12-07T20:00:54.539950Z",
        "url": "https://files.pythonhosted.org/packages/2b/c8/84ee56cb4327c3434fb71eaca9c34d3ae7f0ceb1866ad66730d4e3477dfa/ccaugmentation-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "868afde8d766450dae605a8fb8d98b61f7cd4dae2b7051be09b788a95236222e",
          "md5": "6dd5f5878ec45184d44079e87493e4dc",
          "sha256": "21b7216cd0163106fff2f8830c81957c1cc90e9d2b43789afc8dee232d80c59d"
        },
        "downloads": -1,
        "filename": "ccaugmentation-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6dd5f5878ec45184d44079e87493e4dc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21806,
        "upload_time": "2020-12-07T20:00:55",
        "upload_time_iso_8601": "2020-12-07T20:00:55.723221Z",
        "url": "https://files.pythonhosted.org/packages/86/8a/fde8d766450dae605a8fb8d98b61f7cd4dae2b7051be09b788a95236222e/ccaugmentation-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2bc884ee56cb4327c3434fb71eaca9c34d3ae7f0ceb1866ad66730d4e3477dfa",
        "md5": "06a7b656b5df9f2fc8ba8801093cc085",
        "sha256": "83bcda4455d3dffdb805d0eb891c4b41f349aa02d7acc48441a247a615af8185"
      },
      "downloads": -1,
      "filename": "ccaugmentation-0.1.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "06a7b656b5df9f2fc8ba8801093cc085",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 25417,
      "upload_time": "2020-12-07T20:00:54",
      "upload_time_iso_8601": "2020-12-07T20:00:54.539950Z",
      "url": "https://files.pythonhosted.org/packages/2b/c8/84ee56cb4327c3434fb71eaca9c34d3ae7f0ceb1866ad66730d4e3477dfa/ccaugmentation-0.1.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "868afde8d766450dae605a8fb8d98b61f7cd4dae2b7051be09b788a95236222e",
        "md5": "6dd5f5878ec45184d44079e87493e4dc",
        "sha256": "21b7216cd0163106fff2f8830c81957c1cc90e9d2b43789afc8dee232d80c59d"
      },
      "downloads": -1,
      "filename": "ccaugmentation-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "6dd5f5878ec45184d44079e87493e4dc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 21806,
      "upload_time": "2020-12-07T20:00:55",
      "upload_time_iso_8601": "2020-12-07T20:00:55.723221Z",
      "url": "https://files.pythonhosted.org/packages/86/8a/fde8d766450dae605a8fb8d98b61f7cd4dae2b7051be09b788a95236222e/ccaugmentation-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}