{
  "info": {
    "author": "Madison Landry",
    "author_email": "mlandry@mit.edu",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "\n# Perennial ðŸŒ±\n\nJournaling kit for long-term self-analysis.\n\n**Journaling** can help identify patterns and themes in one's thoughts and behaviors. Tracking **mood** can provide valuable information about what triggers certain moods and how to manage them. And tracking **goals or tasks** can help to stay focused and motivated and can provide a sense of accomplishment and progress as one works toward achieving them.\n\nBy combining these, an individual can gain a more complete picture of themselves and their behavior and can more easily achieve personal growth.\n\nThis journal kit was originally intended just for personal journaling, but I can also envision it being used for more specialized stories, such as documenting the course of projects, recording meeting minutes, or tracking pain across medical recovery.\n\n# Getting started\n\n## Install\n\n```bash\npip install perennial\n```\n\nOr alternatively, download the source directly.\n\n```bash\ngit clone https://almonds.dev/git/perennial\ncd perennial\npip install -e .\n```\n\n## Example usage\n\nSee [the quickstart page](https://web.mit.edu/almonds/www/perennial/quickstart.html) for getting started using the command line arguments.\n\n### Load a journal\n\nStart a new journal in the current working directory that keeps track of a daily streak:\n\n```py\n>>> from perennial import Journal\n>>> \n>>> j = Journal(content=\"Example journal\", streak_checker=StreakCheck.DAILY)\n>>>\n```\n\nIf the database file already exists, it is loaded:\n\n```py\n>>> j = Journal()\n>>>\n```\n\n### Adding entries\n\n```py\n>>> content = \"I had a nice day today. I visited some friends and made progress on my journal project.\"\n>>> e1 = j.record(content, mood=4)\n>>> e1.streak # number of days logged in a row\n22\n>>>\n```\n\n### Reflect on past entries\n\n```py\n>>> search_results = j.search(\"dog\") # retrieve entries with search terms\n>>> e2 = search_results[0]\n>>> e2.content\n'Today I saw a cute dog. (:'\n>>> \n>>> e3 = j.random() # retrieve a random entry\n>>> e3.date\ndatetime.datetime(2022, 12, 12, 10, 5, 0, 0)\n>>>\n```\n\n### Track mood\n\n```py\n>>> from datetime import datetime, timedelta\n>>> one_week_ago = datetime.today() - timedelta(days=7)\n>>> today = datetime.today()\n>>> \n>>> entries = j.search(start_date=one_week_ago, end_date=today)\n>>> moods = [e.mood if e.mood is not None for e in entries]\n>>> moods\n[3, 4, 3, 3, 2, 5, 3]\n>>> \n```\n\n### Goal or task tracking\n\nGoals or tasks are associated with their states of completion.\n\n```py\n>>> j.time_in_state(\"Submit PhD apps\", \"DOING\")\ndatetime.timedelta(days=65)\n>>> \n>>> _ = j.goal(\"Submit PhD apps\", \"DONE\")\n>>> _ = j.goal(\"Meeting with Alex, Bailey, and Casey\", \"CANCELED\")\n>>> _ = j.goal(\"Fold laundry\", \"TODO\")\n>>>\n```\n\nPersonally, I'm fond of this tetrad of task states, as used in [Logseq](https://logseq.com/):\n\n* `TODO`\n* `DOING`\n* `DONE`\n* `CANCELED`\n\n## Documentation\n\nI'll also set this up eventually.\n\n# To-do\n\n* ~~Accept Markdown files as entries~~\n* ~~Ability to sync database streak info (important for adding latent entries)~~\n* CLI\n* Tweak streak-tracking functions so they can be generalized\n* Open new files automatically?\n* Superjournals and subjournals? (kind of already have that)\n* Eventually switch to a Rust implementation with SurrealDB?\n\n# Implementation\n\nThe journal entries are saved in a SQLite table called `entries`:\n\n| Column name | Data type | Description                           |\n|-------------|-----------|---------------------------------------|\n| `id`        | `INTEGER` | Primary key                           |\n| `date`      | `TEXT`    | Date of the journal entry             |\n| `content`   | `TEXT`    | Journal entry summary                 |\n| `streak`    | `INTEGER` | Daily streak                          |\n| `mood`      | `INTEGER` | Mood level (e.g. scale 1-5) (may be `NULL`) |\n| `file`      | `TEXT`    | Associated file (may be `NULL`)       |\n\nAnd the goals and their states are stored in a table called `goals`:\n\n| Column name | Data type | Description                           |\n|-------------|-----------|---------------------------------------|\n| `id`        | `INTEGER` | Primary key                           |\n| `date`      | `TEXT`    | Date of goal update                   |\n| `name`      | `TEXT`    | Name of goal                          |\n| `state`     | `TEXT`    | State of goal (e.g. `\"TODO\"`, `\"DOING\"`, `\"DONE\"`, `\"CANCELED\"`) |\n\nInformation about the journal itself is in a table called `meta`, which always has a single row:\n\n| Column name   | Data type | Description                         |\n|---------------|-----------|-------------------------------------|\n| `id`          | `INTEGER` | Primary key                         |\n| `date`        | `TEXT`    | Date of journal creation            |\n| `content`     | `TEXT`    | Journal summary                     |\n| `streak_mode` | `TEXT`    | i.e. \"daily\", \"weekly\", \"monthly\", or \"yearly\" |\n| `template`    | `TEXT`    | Path to the template to use when touching a file for a new entry |\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://almonds.dev/focus/perennial",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "perennial",
    "package_url": "https://pypi.org/project/perennial/",
    "platform": null,
    "project_url": "https://pypi.org/project/perennial/",
    "project_urls": {
      "Homepage": "https://almonds.dev/focus/perennial"
    },
    "release_url": "https://pypi.org/project/perennial/0.1.0/",
    "requires_dist": [
      "twine ; extra == 'dev'",
      "wheel (>=0.36.2) ; extra == 'dev'",
      "check-manifest ; extra == 'dev'",
      "Sphinx (>=6.1.3) ; extra == 'dev'",
      "sphinx-autodoc-typehints ; extra == 'dev'",
      "sphinxcontrib-trio ; extra == 'dev'"
    ],
    "requires_python": ">=3.9",
    "summary": "Journaling kit for long-term self-analysis.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17246936,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "44029ff4285ab3d8add2f31e78d9ebab6321ed79b9d8ba59ca5381cc58285b60",
          "md5": "c9c0c9c5d9d40c706b1cb38509006303",
          "sha256": "881a53d20477ddc9d15de09746c0e32caf61b00b8a432fac7f4bf53295eba514"
        },
        "downloads": -1,
        "filename": "perennial-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c9c0c9c5d9d40c706b1cb38509006303",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 14050,
        "upload_time": "2023-03-11T01:01:12",
        "upload_time_iso_8601": "2023-03-11T01:01:12.760212Z",
        "url": "https://files.pythonhosted.org/packages/44/02/9ff4285ab3d8add2f31e78d9ebab6321ed79b9d8ba59ca5381cc58285b60/perennial-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "99128094422e46e6f1a1de0b890a9120f1628485698d4206e7d081a7217eeb54",
          "md5": "1a351e0919efade7db1dcf279c0427a3",
          "sha256": "fc53984c552e11c5330c7061ab2521be78d98b9934e96ca1e1ef7b01c52124af"
        },
        "downloads": -1,
        "filename": "perennial-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1a351e0919efade7db1dcf279c0427a3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 18959,
        "upload_time": "2023-03-11T01:01:14",
        "upload_time_iso_8601": "2023-03-11T01:01:14.410340Z",
        "url": "https://files.pythonhosted.org/packages/99/12/8094422e46e6f1a1de0b890a9120f1628485698d4206e7d081a7217eeb54/perennial-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "44029ff4285ab3d8add2f31e78d9ebab6321ed79b9d8ba59ca5381cc58285b60",
        "md5": "c9c0c9c5d9d40c706b1cb38509006303",
        "sha256": "881a53d20477ddc9d15de09746c0e32caf61b00b8a432fac7f4bf53295eba514"
      },
      "downloads": -1,
      "filename": "perennial-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c9c0c9c5d9d40c706b1cb38509006303",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 14050,
      "upload_time": "2023-03-11T01:01:12",
      "upload_time_iso_8601": "2023-03-11T01:01:12.760212Z",
      "url": "https://files.pythonhosted.org/packages/44/02/9ff4285ab3d8add2f31e78d9ebab6321ed79b9d8ba59ca5381cc58285b60/perennial-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "99128094422e46e6f1a1de0b890a9120f1628485698d4206e7d081a7217eeb54",
        "md5": "1a351e0919efade7db1dcf279c0427a3",
        "sha256": "fc53984c552e11c5330c7061ab2521be78d98b9934e96ca1e1ef7b01c52124af"
      },
      "downloads": -1,
      "filename": "perennial-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "1a351e0919efade7db1dcf279c0427a3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 18959,
      "upload_time": "2023-03-11T01:01:14",
      "upload_time_iso_8601": "2023-03-11T01:01:14.410340Z",
      "url": "https://files.pythonhosted.org/packages/99/12/8094422e46e6f1a1de0b890a9120f1628485698d4206e7d081a7217eeb54/perennial-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}