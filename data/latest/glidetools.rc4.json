{
  "info": {
    "author": "Kapil Devkota",
    "author_email": "kapil.devkota@tufts.edu",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# GLIDETOOLS: A python based package for computing Diffusion State Distance and GLIDE\n\n## Licensing\n\nThis code is copyrighted under the MIT License. \n\n## Publications\n\n**GLIDE:** Devkota, Kapil, James M. Murphy, and Lenore J. Cowen. \"GLIDE: combining local methods and diffusion state embeddings to predict missing interactions in biological networks.\" Bioinformatics 36.Supplement_1 (2020): i464-i473.\n\n**GLIDER:** Devkota, K., Schmidt, H., Werenski, M., Murphy, J.M., Erden, M., Arsenescu, V. and Cowen, L.J., 2022. GLIDER: Function Prediction from GLIDE-based Neigborhoods. Bioinformatics.\n\n**DSD:** Cao, Mengfei, et al. \"New directions for diffusion-based network prediction of protein function: incorporating pathways with confidence.\" Bioinformatics 30.12 (2014): i219-i227. \n\n## Dependencies\n\nThis package requires the following dependencies:\n\n1. numpy\n2. scipy\n3. pandas\n4. matplotlib\n5. json\n6. networkx\n\n## How to install\n\nYou can install the package using `pip`. \n\n```\npip install glidetools\n```\n\nYou can also go to the glidetools repository at `https://github.com/kap-devkota/GLIDER` and clone the latest version under the `main branch`.\nAfter you enter the `glidetools` folder, run \n\n```\npython -m pip install glidetools\n```\n\n## Package Description\n\n### Computing DSD matrix\n\nThis can be done by using the function  `glidetools.algorithm.dsd:compute_dsd_embedding` \n\n```\ndef compute_dsd_embedding(A, \n                        t = -1, \n                        gamma = 1, \n                        is_normalized = True)\n```\n\nWhere,\n- A: a numpy adjacency matrix (N x N)\n- t: The number of random walks to get the DSD matrix. Setting `t` to a negative value implies `t` is infinity.\n- gamma: Set it to 1 to get the default cDSD embedding\n- is_normalized: If set to True, a normalized form of cDSD (by the steady state vector) is returned\n\nThis function returns a (N x N) cDSD embedding. **Note:** The output is an embedding, not a distance. To compute the cDSD distance,\ndo the following\n\n```\nfrom scipy.spatial.distance import squareform, pdist\nsquareform(pdist(X))\n```\n\nWhere, `X` is the output from the `compute_dsd_embedding` function.\n\n\n### Computing the GLIDE Matrix\n\nThis can be done by using the function  `glidetools.algorithm.glide:glide`\n\n```\ndef glide(A, \n          alpha = 0.1,\n          beta  = 1000,\n          delta = 1,\n          gamma = 1,\n          normalize_dsd = False,\n          local = \"\",\n          **kwargs)\n```\n\nWhere,\n- A : A N x N numpy matrix\n- alpha, beta, delta, gamma => glide parameters: For more information, see :\n- normalize_dsd: If set to True, generates the normalized version of DSD embedding\n- local: Can be either `cw`(common weighted) or [`l3`](https://www.nature.com/articles/s41467-019-09177-y).  \n    \n    \nYou can also provide your own local and global functions for GLIDE\n    \n- localf: a custom function that takes in adjacency matrix and returns the local pairwise score\n- globalf: a custom function that takes in adjacency matrix and returns the global pairwise score\n\n### Using `glide_compute`\n\nIf you have installed the pip package, you can the entrypoint `glide_compute` to obtain both the DSD and GLIDE outputs. \n\n```\nusage: glide-compute [-h] [--network NETWORK] [--output OUTPUT] [-v] [--return-dsd-emb] [--return-dsd-dist] [--dsd-dist-norm {l1,l2}] [--normalized] [--reduced-dims REDUCED_DIMS] [--gamma GAMMA] [--get-glide-neighbors]\n                     [--glide-neighbors-k GLIDE_NEIGHBORS_K] [--neighbors-return-format {dataframe,graph,map}] [--alpha ALPHA] [--beta BETA] [--delta DELTA] [--local {cw,l3}] [--normalize-local] [--weighted-local] [--scale-local]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --network NETWORK     A Tab-delimited network file\n  --output OUTPUT       The output URL. If the output is a matrix, it is always saved in a pickle format along with the name-to-index mapping dictionary\n  -v                    Verbose mode\n  --return-dsd-emb      If set to True, only returns the DSD embedding, else returns the GLIDE matrix\n  --return-dsd-dist     If set to True, bypasses the --return-dsd-emb command to return the pairwise distance matrix from the dsd embedding\n  --dsd-dist-norm {l1,l2}\n                        Only used in conjunction with the --return-dsd-dist argument. Decides whether to use the `l1` or `l2` norm while computing distance\n  --normalized          If set to false, returns the classic cDSD, else returns normalized cDSD embedding.\n  --reduced-dims REDUCED_DIMS\n                        If set to a positive value, the output is a reduced normalized DSD with reduced dimensions given by --reduced_dims\n  --gamma GAMMA         DSD gamma parameter\n  --get-glide-neighbors\n                        If set to true, --get_glide_neighbors returns glide neighbors instead of glide matrix\n  --glide-neighbors-k GLIDE_NEIGHBORS_K\n                        If --get_glide_neighbors is set to true, the code uses --glide_neighbors to decide on the number of neighbors\n  --neighbors-return-format {dataframe,graph,map}\n                        This parameter decides the output format for the GLIDE neighbors. If `dataframe` is selected, the code returns output as a panda DataFrame.If `graph` is selected, the code returns output as a networkx graph,\n                        otherwise the output is returned as a simple dictionary {NODE: LIST[NODE]}, where LIST[NODE]is the list of neighbors for the particular node\n  --alpha ALPHA         GLIDE alpha parameter\n  --beta BETA           GLIDE beta parameter\n  --delta DELTA         GLIDE delta parameter\n  --local {cw,l3}       The local parameter for GLIDE\n  --normalize-local     If set to False, the local measures are not normalized\n  --weighted-local      If set to False, the adjacency matrix is converted to a unweighted form (setting every non-zero elements to 1)before applying local measures\n  --scale-local         If set to True, scales the local measures by their max value before returning it\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/kap-devkota/GLIDER",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "glidetools",
    "package_url": "https://pypi.org/project/glidetools/",
    "platform": null,
    "project_url": "https://pypi.org/project/glidetools/",
    "project_urls": {
      "Homepage": "https://github.com/kap-devkota/GLIDER"
    },
    "release_url": "https://pypi.org/project/glidetools/0.0.4.post2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "DSD, GLIDE and GLIDER tools",
    "version": "0.0.4.post2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15488008,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "360547b795680c77b419c54c561763ff8af2c69ce3b9d40d165b6ab8bd7d174d",
          "md5": "d1ca3ffa477f3c41c1a57e8549a1228c",
          "sha256": "07f1731652963640bd68432145079bd403d8b005619c3d5b4731cd177f38783d"
        },
        "downloads": -1,
        "filename": "glidetools-0.0.1-py3.6.egg",
        "has_sig": false,
        "md5_digest": "d1ca3ffa477f3c41c1a57e8549a1228c",
        "packagetype": "bdist_egg",
        "python_version": "0.0.1",
        "requires_python": null,
        "size": 18384,
        "upload_time": "2022-09-27T04:30:35",
        "upload_time_iso_8601": "2022-09-27T04:30:35.426363Z",
        "url": "https://files.pythonhosted.org/packages/36/05/47b795680c77b419c54c561763ff8af2c69ce3b9d40d165b6ab8bd7d174d/glidetools-0.0.1-py3.6.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "49fd2191fcd9cc11b88d644c2bffd6a768b033833875c5aed5ee49e5c6a6aa83",
          "md5": "5f99ff7438bdd03a8d738cc7dfe0fbc8",
          "sha256": "deec333423e79714ca04ef4a3987cd8ea6f8f594fd10adc74a1b78fa17ce7317"
        },
        "downloads": -1,
        "filename": "glidetools-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5f99ff7438bdd03a8d738cc7dfe0fbc8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6024,
        "upload_time": "2022-09-27T04:30:37",
        "upload_time_iso_8601": "2022-09-27T04:30:37.626696Z",
        "url": "https://files.pythonhosted.org/packages/49/fd/2191fcd9cc11b88d644c2bffd6a768b033833875c5aed5ee49e5c6a6aa83/glidetools-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7307e39dced7c026bb2853d103f6a6efff4bfdfe214fa8e67358c13522201300",
          "md5": "08411c472ddc2e097b990f3c9a9e0aea",
          "sha256": "57624c22d5db39730fc522ff62291c0ae1d8fe0f6331fba3b0bb3127992f8185"
        },
        "downloads": -1,
        "filename": "glidetools-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "08411c472ddc2e097b990f3c9a9e0aea",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6778,
        "upload_time": "2022-09-28T19:24:30",
        "upload_time_iso_8601": "2022-09-28T19:24:30.608086Z",
        "url": "https://files.pythonhosted.org/packages/73/07/e39dced7c026bb2853d103f6a6efff4bfdfe214fa8e67358c13522201300/glidetools-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4b1105901ae3efe7db55cc45b83aa2321dce3db2289de4341a19f30742a4ada5",
          "md5": "69641eb8acf6e0530f4de6c0ee9ee646",
          "sha256": "2169d4e864d434fb605c04cfc8d7797e003cc08a186c52075f16d32f0bc304dc"
        },
        "downloads": -1,
        "filename": "glidetools-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "69641eb8acf6e0530f4de6c0ee9ee646",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9874,
        "upload_time": "2022-09-29T04:40:05",
        "upload_time_iso_8601": "2022-09-29T04:40:05.989130Z",
        "url": "https://files.pythonhosted.org/packages/4b/11/05901ae3efe7db55cc45b83aa2321dce3db2289de4341a19f30742a4ada5/glidetools-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4.post2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2768cd6c45028ed132c5ea776dce9d0a3b09d6fc9a6110184c8416c4b1dd43bc",
          "md5": "fd905260b96d51af42623681bbd86359",
          "sha256": "73f47509d32f99af1003eb3906eca5e0715ffebf23599614f2b2b59a7a26ee71"
        },
        "downloads": -1,
        "filename": "glidetools-0.0.4.post2.tar.gz",
        "has_sig": false,
        "md5_digest": "fd905260b96d51af42623681bbd86359",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8884,
        "upload_time": "2022-10-21T15:08:56",
        "upload_time_iso_8601": "2022-10-21T15:08:56.962766Z",
        "url": "https://files.pythonhosted.org/packages/27/68/cd6c45028ed132c5ea776dce9d0a3b09d6fc9a6110184c8416c4b1dd43bc/glidetools-0.0.4.post2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2768cd6c45028ed132c5ea776dce9d0a3b09d6fc9a6110184c8416c4b1dd43bc",
        "md5": "fd905260b96d51af42623681bbd86359",
        "sha256": "73f47509d32f99af1003eb3906eca5e0715ffebf23599614f2b2b59a7a26ee71"
      },
      "downloads": -1,
      "filename": "glidetools-0.0.4.post2.tar.gz",
      "has_sig": false,
      "md5_digest": "fd905260b96d51af42623681bbd86359",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8884,
      "upload_time": "2022-10-21T15:08:56",
      "upload_time_iso_8601": "2022-10-21T15:08:56.962766Z",
      "url": "https://files.pythonhosted.org/packages/27/68/cd6c45028ed132c5ea776dce9d0a3b09d6fc9a6110184c8416c4b1dd43bc/glidetools-0.0.4.post2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}