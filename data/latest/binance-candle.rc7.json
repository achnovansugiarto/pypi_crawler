{
  "info": {
    "author": "pyted",
    "author_email": "pyted@outlook.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "\n# Binance_candle v1.0.6\n\n## 1 Binance_candle的设计目的？\n\n**1.为本地模拟交易提供历史数据**\n\n- 支持现货、U本位合约、币本位合约历史K线下载、管理与快速读取。\n\n**2.为实盘交易决策依据**\n\n- 支持现货与合约产品实时最新历史K线数据的缓存更新\n- 获取实时行情数据\n\n## 2 安装Binance_candle\n\n\n```cmd\npip3 install binance_candle\n```\n\nGITHUB：https://github.com/pyted/binance_candle\n\n里面有Binance_candle的使用例子：\n\n![](vx_images/244075001625094.png)\n\n## 3 快速开始\n\n### 3.1 维护产品实时历史K线数据candle_map\n\n以U本位产品为例，运行run_candle_map函数后，会以多线程的方式维护candle_map属性，保证candle_map的时效性。\n\ncandle_map的格式：candle_map[\\<symbol:str\\>] = \\<candle:np.ndarray\\>\n\n```python\nfrom binance_candle import CandleServer\n\ncandleServer = CandleServer('UM') # UM：U本位合约\ncandleServer.run_candle_map()\nprint(candleServer.candle_map)\n```\n\n输出：\n\n```text\n>> {\n>>     '1000LUNCBUSD': array(\n>>         [[1.67496882e+12, 1.74100000e-01, 1.74100000e-01, ...,\n>>           7.31000000e+03, 1.27199670e+03, 0.00000000e+00],\n>>          [1.67496888e+12, 1.74000000e-01, 1.74200000e-01, ...,\n>>           1.90710000e+04, 3.31999150e+03, 0.00000000e+00],\n>>          [1.67496894e+12, 1.74200000e-01, 1.74200000e-01, ...,\n>>           3.23500000e+03, 5.63537000e+02, 0.00000000e+00],\n>>          ...,\n>>          [1.67514144e+12, 1.66000000e-01, 1.66000000e-01, ...,\n>>           1.00560000e+04, 1.66929600e+03, 0.00000000e+00],\n>>          [1.67514150e+12, 1.65800000e-01, 1.65800000e-01, ...,\n>>           3.56710000e+04, 5.91068840e+03, 0.00000000e+00],\n>>          [1.67514156e+12, 1.65700000e-01, 1.65800000e-01, ...,\n>>           7.88270000e+04, 1.30688056e+04, 0.00000000e+00]]\n>>     ),\n>>     ... ... \n>> }\n```\n\n### 3.2 每日定时下载历史K线\n\n以现货交易为例，每天定时下载前一天的历史K线数据。\n\n```python\nfrom binance_candle import CandleServer\n\ncandleServer = CandleServer('SPOT') # SPOT：现货交易\ncandleServer.download_daily()\n```\n\n### 3.3 获取实时最优挂单价格\n\n以币本位合约为例，获取实时最优挂单价格\n\n```python\nfrom binance_candle import CandleServer\n\ncandleServer = CandleServer('CM') # CM：币本位合约\nbookTickerMap = candleServer.market.get_bookTickersMap()\nprint(bookTickerMap)\n```\n\n输出：\n\n```text\n>> {\n>>      'code': 200,\n>>      'data': {'AAVEUSD_PERP': {'askPrice': '81.300',\n>>                                'askQty': '92',\n>>                                'bidPrice': '81.260',\n>>                                'bidQty': '42',\n>>                                'pair': 'AAVEUSD',\n>>                                'symbol': 'AAVEUSD_PERP',\n>>                                'time': 1675143719137},\n>>               'ADAUSD_230331': {'askPrice': '0.37198',\n>>                                 'askQty': '100',\n>>                                 'bidPrice': '0.37170',\n>>                                 'bidQty': '30',\n>>                                 'pair': 'ADAUSD',\n>>                                 'symbol': 'ADAUSD_230331',\n>>                                 'time': 1675143718074},\n>>               ... ...\n>>               }\n>>      'msg': ''\n>> }\n```\n\n## 4 历史K线candle的数据说明\n\n### 4.1 K线的格式\n\n为了保证运算的速度，candle采用np.ndarray类型存储。\n\n|列索引|字段解释|例子|\n|:---|:---|:---|\n|0|K线开盘时间|1499040000000.0|\n|1|开盘价|0.01634790|\n|2|最高价|0.80000000|\n|3|最低价|0.01575800|\n|4|收盘价|0.01577100|\n|5|成交量|148976.11427815|\n|6|K线收盘时间|1499644799999.0|\n|7|成交额|2434.19055334|\n|8|成交笔数|308.0|\n|9|主动买入成交量|1756.87402397|\n|10|主动买入成交额|28.46694368|\n|11|<官方解释为可忽略的参数>|17928899.62484339|\n\n官方返回的字段类型包含整数和字符串，但对于历史K线数据，binance_candle中均以np.float64作为存储格式。\n\n注：Python对于数字精度的支持并不优秀，对于模拟运算或者实盘决策，使用浮点数是安全的，但对于交易接口，例如下单的数量和金额，采用字符串类型更为安全，在全部pyted的量化交易架构中，与订单相关的数字对象均采用字符串用于提交。\n\n### 4.2 K线的存储规则\n\n本地历史K线数据是按照日期拆分拆分存储，每个CSV文件保存指定日期指定产品的全部K线数据。\n\n每个CSV文件的时间跨度为：00:00:00 ~ 24:00:00 - \\<bar\\>\n\n如果保存ETH 2023年1月1日 时间粒度bar是1分钟的数据：CSV中的数据条数是1440条，起点为时间：00:00:00，终点时间为：23:59:00，同样如果保存时间粒度bar是1小时的数据，存储的数据时间终点是：23:00:00\n\n由于是按照日期分片存储，'2023-01-01'在美式日期与中国日期对应的时间戳并不相同，Binance_candle默认采用'America/New_York'时区。\n\n![](vx_images/495193492836002.png)\n\n### 4.3 K线的安全性\n\nBinance_candle中的全部K线数据均会受到严格的验证，保证数据的安全性。\n\n- valid_interval 验证数据时间间隔 = <bar>\n- valid_start 验证数据时间起点 \n- valid_end 验证数据时间终点\n- valid_length 验证数据长度 （仅在维护实时历史K线数据服务的时候使用）\n\n## 5 产品类别instType代号\n\n在实例化CandlerServer时，需要可以传递两个参数，一个是instType产品类别，另一个是rule服务规则。\n\n|产品类别|代号|\n|:---|:---|\n|现货交易|SPOT|\n|U本位合约|UM|\n|币本位合约|CM|\n|欧式期权|EO **注：Binance_candle不支持欧式期权**|\n\n## 6 K线服务规则CandleRule\n\n### 6.1 规则属性总览\n\nCandleRule是CandleServer的运行规则，用户可以自定义规则内容以适应不同的交易场景。\n\n```python\nfrom binance_candle import CandleServer, CandleRule\n\nCandleRule.BAR = '5m'  # K线的时间粒度调整为5分钟\ncandleServer = CandleServer('SPOT', CandleRule)\n```\n\n在CandleServer中，有两个重要的异步方法：\n\n- run_candle_map 异步的方式维护实时历史K线字典 candle_map\n- download_daily 异步的方式每日下载上一天的K线数据\n\n这两个方法均受到CandleRule的规则约束。下面是CandleRule中各个属性的作用规则。\n\n![](vx_images/480313210278479.png)\n\n### 6.2 服务权重系数\n\n#### 6.2.1 SERVER_WEIGHT 服务权重系数\n\n类型：Union[int,float]，默认值：0.9\n\nBinance官方会计算每个IP每分钟发送的请求权重，超过权重上限将会被短暂封禁。各个产品间的权重计量彼此独立。\n\n权重上限：\n\n- 现货：1200 weight / minute\n- U本位合约：2400 weight / minute\n- 币本位合约：2400 weight / minute\n\nSERVER_WEIGHT 默认值0.9，会将请求的权重维持在每分钟请求上限 * 0.9左右。调整SERVER_WEIGHT可以控制下载与更新历史K线的速度，如果这台计算机不进行实盘交易，建议使用默认值0.9，如果同一台计算机既要维护实时K线，又要发送下单请求，建议降低SERVER_WEIGHT，避免订单请求被ban。\n\n### 6.3 产品名称条件\n\n#### 6.3.1 SYMBOLS 产品名称\n\n类型：Union[str,list]，默认值：'all'\n\n|例子|解释|\n|:---|:---|\n|SYMBOLS = 'all'|维护产品类型中的全部子产品|\n|SYMBOLS = ['BTCUSDT','ETCUSDT']|仅维护BTCUSDT与ETCUSDT|\n\n#### 6.3.2 SYMBOLS_FILTER 过滤产品\n\n类型：list，默认值：''\n\n|例如|解释|\n|:---|:---|\n|SYMBOLS = 'all' ; SYMBOLS_FILTER = ['BTCUSDT']|维护除了BTCUSDT之外全部的产品|\n\n#### 6.3.3 SYMBOL_CONTAINS 产品名称中需包含的内容\n\n类型：str，默认值：''\n\n过滤名称中不包含此内容的产品（区分大小写）。\n\n\n|例如|解释|\n|:---|:---|\n|SYMBOLS = 'all' ; SYMBOL_CONTAINS = 'BTC'|维护名称中包含'BTC'的全部产品|\n\n#### 6.3.4 SYMBOL_ENDSWITH 产品名称必须以何结尾\n\n类型：str，默认值：''\n\n过滤名称中不以此内容结尾的产品（区分大小写）。\n\n\n|例如|解释|\n|:---|:---|\n|SYMBOLS = 'all' ; SYMBOL_ENDSWITH = 'USDT'|维护名称以USDT结尾的全部产品|\n\n如果你仅要维护以USDT为交易货币的产品，可以设置：\n\n- SYMBOLS = 'all'\n- SYMBOLS_ENDSWITH = 'USDT'\n\n### 6.4 K线参数\n\n#### 6.4.1 BAR 时间粒度\n\n类型：str，默认值：candlelite.crypto.binance_lite.BINANCE_DEFAULT_BAR\n\n历史K线的时间粒度，目前仅支持以分m、小时h、天d为单位。\n\n|例子|解释|\n|:---|:---|\n|1m|1分钟|\n|5m|5分钟|\n|15m|15分钟|\n|1h|1小时|\n|4h|4小时|\n|1d|1天|\n|..|...|\n\n因为Binance_candle对于K线数据的读取使用的是candlelite，许多默认值使用的是candlelite中settings的配置内容。\n\n```python\n# 查看默认配置信息\ncandlelite show_settings \n# 在终端中修改默认配置\ncandlelite console_settings\n# 查看配置文件的路径->用编辑器自行编辑修改\ncandlelite settings_path\n```\n\n### 6.5 K线下载相关\n\n#### 6.5.1 TIMEZONE 时区\n\n类型：Union[str,None]，默认值：candlelite.crypto.binace_lite.BINANCE_TIMEZONE\n\nTIMEZONE所起的作用：\n\n- 数据存储路径中的文件夹命名\n- 划分一天的起始与终止时间戳\n\n#### 6.5.2 CANDLE_DIR 日期为分割存储的数据路径\n\n类型：str，默认值：candlelite.crypto.binace_lite.BINANCE_CANDLE_DATE_BASE_DIR\n\n#### 6.5.3 DOWNLOAD_TIME 每日下载昨日K线数据的时间\n\n类型：str，默认值：'00:10:00'\n\nDOWNLAOD_TIME可以决定每天的哪个时间点下载昨日的历史K线数据，作用于两个异步函数：\n\n- run_candle_map\n- download_daily\n\n这两个函数的下载方式不相同，run_candle_map函数会在DOWNLOAD_TIME时刻取出candle_map字典中昨日的K线数据，保存到本地。donwload_daily函数会在DOWNLOAD_TIME时刻向官方发送请求获取昨日K线数据，再保存到本地。\n\n\nDOWNLOAD_TIME的时间格式为：%H:%M:%S，例如DOWNLOAD_TIME = '01:00:00'。\n\nDOWNLOAD_TIME = None 表示禁用实时K线维护的每日下载功能。\n\n需要注意的问题：\n\n1. DOWNLOAD_TIME不应该过早，官方整合上一个单位时间的历史K线一般会有0~2分钟的延误，所以如果BAR='1m'，在'00:00:00'可能无法获取昨日'23:59:00'时刻的历史K线，这样会引发错误。\n\n2. DOWNLOAD_TIME对于run_candle_map异步线程来说，会从candle_map字典中获取昨日的K线数据，所以如果此时candle_map中昨日历史K线数据不足，也会引发异常，可以加大维护的K线长度LENGTH并调整合理的DOWNLOAD_TIME时刻。\n\n### 6.6 秘钥\n\n#### 6.6.1 KEY与SECRET\n\n类型：str，默认值：''\n\nBinance获取行情数据，一般可以不填写秘钥，但无秘钥或者普通秘钥官方会限制访问IP权重，默认现货：1200、合约：2400。\n\n### 6.7 run_candle_map实时K线相关配置\n\n#### 6.7.1 LOCAL_CANDLE_DAYS 启动后下载近期多少日的历史K线数据\n\n类型：Union[int,None]，默认值：2（单位：天）\n\n在启动实时K线服务后，CandleServer将校验本地是否有最近的LOCAL_CANDLE_DAYS产品K线数据，如果没有，则会自动下载\n\nLOCAL_CANDLE_DAYS = None 表示禁用此功能\n\n#### 6.7.2 LENGTH 保留实时K线的长度\n\n类型：int，默认值：2880\n\n保留candle_map字典中各个产品的最新K线数据的行数。\n\n如果某产品刚刚上线，数据长度小于LENGTH，则会被过滤。\n\n#### 6.7.3 UPDATE_INTERVAL_SECONDS 实时K线的更新间隔\n\n类型：int，默认值：3（单位：秒）\n\n将candle_map中的历史K线数据更新到最新时间，每次更新的时间间隔。\n\n#### 6.7.4 CACHE_DELAY_SECONDS 实时K线本地缓存的时间间隔\n\n类型：Union[int,None]，默认值：3600（单位：秒）\n\n间隔多少秒，将candle_map保存到本地，这样可以在服务重启后，快速读取缓存数据，减少访问量与等待时间。\n\nCACHE_DELAY_SECONDS = None 表示禁用此功能\n\n#### 6.7.5 CACHE_DIR 缓存数据路径\n\n类型：str，默认值：'./BINANCE_CACHE'\n\ncandle_map缓存保存到的文件路径。\n\n### 6.8 日志\n\n#### 6.8.1 LOG_DIRPATH 日志文件夹路径\n\n类型：str，默认值：./BINANCE_CANDLE_SERVER_LOG_DATA'\n\nbinance_candle中的日志文件按照本地日期与级别分割存储在文件夹中。\n\n#### 6.8.2 LOG_FILE_LEVEL 日志文件级别\n\n类型：str，默认值：'INFO'\n\n储存在日志文件中的级别。\n\n#### 6.8.3 LOG_CONSOLE_LEVEL 日志打印级别\n\n类型：str，默认值：'DEBUG'\n\n终端打印日志的级别。\n\n## 7 维护实时K线字典 candle_map\n\n### 7.1 run_candle_map 方法\n\nCandleServer.run_candle_map先会以堵塞的模式等待第一次candle_map更新完毕，随后以异步多线程的方式实时更新candle_map，以保证数据的实效性与安全性。\n\n如果在更新candle_map中存在某个历史K线有错误，则会从candle_map字典中删除这个symbol的candle。\n\n更新candle_map中默认验证的内容有：\n\n- valid_interval 验证K线时间间隔需要与bar相同\n- valid_end 验证K线的最大时间戳要等于被更新时间\n- valid_length 验证K线的长度需要严格等于LENGTH\n\nrun_candle_map方法执行流程简图：\n\n![](vx_images/176016628950838.png)\n\n### 7.2 candle_map 实时K线字典属性\n\n格式：candle_map[\\<symbol:str\\>] = \\<candle:np.ndarray\\>\n\n- KEY：symbol 产品名称\n- VALUE：candle np.ndarray类型的K线数据\n\n### 7.3 get_candle_security 安全获取实时K线\n\n|参数|类型|说明|\n|:---|:---|:---|\n|symbol|str|产品名称|\n|security_seconds|int|安全间隔（单位：秒）|\n\n为什么要有这个方法：\n\ncandle_map会使用基准产品的历史K线最新时间点为基准更新，但是官方更新最近时间点的历史K线数据往往存在0~2分钟的时间差甚至更多，服务器访问更新也需要花费时间，get_candle_security可以验证candle_map中产品的K线最大时间与当前时间的差值，如果差值过大，视为不安全，返回空数组，如果满足在预设时间差值以内，则正常返回。\n\n\n以U本位产品为例，实时更新全部产品的历史K线数据\n\n```python\nfrom binance_candle import CandleServer\nimport time\n\ncandleServer = CandleServer('UM')\ncandleServer.run_candle_map()\n\nwhile True:\n    for symbol in candleServer.candle_map.keys():\n        print(\n            symbol,\n            candleServer.get_candle_security(symbol, security_seconds=60)\n        )\n        time.sleep(1)\n```\n\n### 7.4 close_run_candle_map 关闭实时K线数据更新服务\n\nclose_run_candle_map仅作用于异步运行，为了保证异步的安全性，关闭方法会等待异步程序阶段性运行结束后关闭，例如避免在保存本地数据的时候发生了终止，造成数据错误。\n\n## 8 下载历史K线\n\n### 8.1 download_candles_by_date 方法\n\n下载从start日期到end日期（包括end），规则产品的历史K线数据。\n\n|参数|类型|默认值|说明|\n|:---|:---|:---|:---|\n|start|Union[int,float,str,datetime.date]|无|起始日期|\n|end|Union[int,float,str,datetime.date,None]|None|终止日期 None表示昨日|\n|replace|bool|False|如果本地数据已存在，是否下载替换|\n\nstart与end支持整数与浮点数类型的**毫秒**时间戳、日期格式的字符串与日期类型。\n\n例如：\n\n```python\nstart = 1672502400000 # 毫秒时间戳（北京时间2023-01-01 00:00:00）\nstart = '2023-01-02' # 日期类型字符串(中国时间格式)\nstart = '01/02/2023' # 日期类型字符串(美国时间格式)\nstart = pendulum.yesterday('Asia/Shanghai') # 日期类型\nstart = datetime.date(2023,1,2) # 日期格式\n```\n\n如果start或end为日期形式的字符串，Binance_candle会将其转化为CandleRule中TIMEZONE对应的日期。所以中国时间格式与美国时间格式是等价的。\n\n下载从start~end的数据，数据终点是被包含的。\n\n例如：start = '2023-01-01' end = '2023-01-03'，会下载 ['2023-01-01','2023-01-02','2023-01-03'] 三天的数据。\n\n以日期为拆分存储，每一天的数据不会包含下一天的时间起点。\n\n例如：\n\n|BAR|每天数据的最后时刻K线的开盘时间|\n|:---|:---|  \n|1m|23:59:00|\n|5m|23:55:00|\n|1h|23:00:00|\n\n例子：\n\n下载现货BTCUSDT与ETCUSDT，从美国时间2023-01-01~2023-01-10，时间粒度为1m的K线数据。\n\n```python\nfrom binance_candle import CandleServer, CandleRule\n\nCandleRule.BAR = '1m'\nCandleRule.SYMBOLS = ['BTCUSDT', 'ETCUSDT']\nCandleRule.TIMEZONE = 'America/New_York'\n\ncandleServer = CandleServer('SPOT', CandleRule)\n\ncandleServer.download_candles_by_date(\n    start='2022-01-01',\n    end='2022-01-10',\n)\n```\n\n### 8.2 download_daily 方法\n\n每日定点下载昨日历史K线数据的服务，异步执行。\n\n|参数|类型|默认值|说明|\n|:---|:---|:---|:---|\n|start|Union[int,float,str,datetime.date,None]|None|补充下载从start~yesterday的数据 start=None等价于start=yesterday|\n|replace|bool|False|本地已存在的数据是否重新下载替换|\n\ndownload_daily是完全异步执行的，先补充下载start~yesterday的历史K线数据，随后在每天的DOWNLOAD_TIME下载昨日的历史K线数据。\n\n例子：\n\n开启服务，每天定时下载现货产品的历史K线数据，K线参数与时区均等均选择默认值。\n\n```python\nfrom binance_candle import CandleServer\n\ncandleServer = CandleServer('SPOT')\ncandleServer.download_daily()\n```\n\n### 8.3 close_download_daily 关闭每日K线下载服务\n\n为了保证异步的安全性，关闭方法会等待异步程序阶段性运行结束后关闭，例如避免在保存本地数据的时候发生了终止，造成数据错误。\n\n## 9 行情数据\n\n### 9.1 行情数据的规则\n\n行情数据支持：现货、U本位合约与币本位合约，**目前不支持欧式期权**。\n\n导入行情数据模块\n\n```python\nfrom binance_candle import Market\n\nmarket = Market(\n    instType='SPOT',  # 产品类型 SPOT | UM | CM\n    key='',  # 秘钥\n    secret='',  # 秘钥\n    timezone='America/New_York'  # 时区\n)\n```\n\n也可以使用CandleServer中的market模块\n\n```python\nfrom binance_candle import CandleServer\n\ncandleServer = CandleServer('SPOT')\nmarket = candleServer.market\n```\n\n行情数据的返回格式均为：{'code':\\<状态码\\>, 'data':\\<主体数据\\>, 'msg':\\<提示信息\\>}\n\n状态码为200表示成功。\n\n### 9.2 最优挂单价格\n\n#### 9.2.1 get_bookTickers 全部产品的最优挂单列表\n\n例如获取现货交易全部的最优挂单\n\n```python\nfrom binance_candle.market import Market\n\nbookTickers = Market('SPOT').get_bookTickers()\nprint(bookTickers)\n```\n\n输出：\n\n```text\n>> {\n>>     'code': 200,\n>>     'data': [\n>>         {\n>>             'askPrice': '0.06861100',\n>>             'askQty': '28.32510000',\n>>             'bidPrice': '0.06861000',\n>>             'bidQty': '20.86970000',\n>>             'symbol': 'ETHBTC'\n>>         },\n>>         {\n>>             'askPrice': '0.00418600',\n>>             'askQty': '11.67400000',\n>>             'bidPrice': '0.00418500',\n>>             'bidQty': '4.67100000',\n>>             'symbol': 'LTCBTC'\n>>         },\n>>         ... ...\n>>     ],\n>>     'msg': '',\n>> }\n```\n\n#### 9.2.2 get_bookTickersMap 全部产品的最优挂单字典\n\n例如获取U本位交易全部的最优挂单\n\n```python\nfrom binance_candle.market import Market\n\nbookTickersMap = Market('UM').get_bookTickersMap()\nprint(bookTickersMap)\n```\n\n输出：\n\n```python\n>> {\n>>     'code': 200,\n>>     'data': {\n>>         '1000LUNCBUSD': {\n>>             'askPrice': '0.1713000',\n>>             'askQty': '71623',\n>>             'bidPrice': '0.1712000',\n>>             'bidQty': '96247',\n>>             'symbol': '1000LUNCBUSD',\n>>             'time': 1675216339831\n>>         },\n>>         '1000LUNCUSDT': {\n>>             'askPrice': '0.1713000',\n>>             'askQty': '98341',\n>>             'bidPrice': '0.1712000',\n>>             'bidQty': '71166',\n>>             'symbol': '1000LUNCUSDT',\n>>             'time': 1675216339829\n>>         },\n>>         ... ...\n>>     },\n>>     'msg': ''\n>> }\n```\n\n#### 9.2.3 get_bookTicker单个产品的最优挂单\n\n获取现货交易BTCUSDT的最优挂单\n\n```python\nfrom binance_candle.market import Market\n\nbookTicker = Market('SPOT').get_bookTicker('BTCUSDT')\nprint(bookTicker)\n```\n\n输出：\n\n```text\n>> {\n>>     'code': 200,\n>>     'data':\n>>         {\n>>             'symbol': 'BTCUSDT',\n>>             'bidPrice': '23122.18000000',\n>>             'bidQty': '0.07635000',\n>>             'askPrice': '23122.81000000',\n>>             'askQty': '0.00200000'\n>>         },\n>>     'msg': ''\n>> }\n```\n\n### 9.3 最新成交价\n\n#### 9.3.1 get_tickerPrices 全部产品的最新成交价列表\n\n获取币本位合约全部产品的最新成交价格列表\n\n```python\nfrom binance_candle.market import Market\n\ntickerPrices = Market('CM').get_tickerPrices()\nprint(tickerPrices)\n```\n\n输出：\n\n```text\n>> {\n>>     'code': 200,\n>>     'data': [\n>>         {\n>>             'price': '23312.5',\n>>             'ps': 'BTCUSD',\n>>             'symbol': 'BTCUSD_230331',\n>>             'time': 1675217026295\n>>         },\n>>         {\n>>             'price': '0.80450',\n>>             'ps': 'KNCUSD',\n>>             'symbol': 'KNCUSD_PERP',\n>>             'time': 1675216973427\n>>         },\n>>         ... ...\n>>     ],\n>>     'msg': ''\n>> }\n```\n\n#### 9.3.2 get_tickerPricesMap 全部产品的最新成交价字典\n\n获取币本位合约全部产品的最新成交价格字典\n\n```python\nfrom binance_candle.market import Market\n\ntickerPricesMap = Market('CM').get_tickerPricesMap()\nprint(tickerPricesMap)\n```\n\n输出：\n\n```text\n>> {\n>>     'code': 200,\n>>     'data': {\n>>         'AAVEUSD_PERP': {\n>>             'price': '83.080',\n>>             'ps': 'AAVEUSD',\n>>             'symbol': 'AAVEUSD_PERP',\n>>             'time': 1675217116068\n>>         },\n>>         'ADAUSD_230331': {\n>>             'price': '0.38853',\n>>             'ps': 'ADAUSD',\n>>             'symbol': 'ADAUSD_230331',\n>>             'time': 1675217149962\n>>         },\n>>         ... ...\n>>     },\n>>     'msg': ''\n>> }\n```\n\n#### 9.3.3 get_tickerPrice 单个产品的最新成交价\n\n获取币本位合约中ETCUSD_PERP的最新成交价格\n\n```python\nfrom binance_candle.market import Market\n\ntickerPrice = Market('CM').get_tickerPrice('ETCUSD_PERP')\nprint(tickerPrice)\n```\n\n输出：\n\n```text\n>> {\n>>     'code': 200,\n>>     'data': [\n>>         {\n>>             'symbol': 'ETCUSD_PERP',\n>>             'ps': 'ETCUSD',\n>>             'price': '21.589',\n>>             'time': 1675217398417\n>>         }\n>>     ],\n>>     'msg': ''\n>> }\n```\n\n\n\n### 9.4 交易规范\n\n#### 9.4.1 缓存机制\n\n获取交易规范的API文档：\n\n- 现货交易：https://binance-docs.github.io/apidocs/spot/cn/#3f1907847c\n- U本位合约：https://binance-docs.github.io/apidocs/futures/cn/#0f3f2d5ee7\n- 币本位合约：https://binance-docs.github.io/apidocs/delivery/cn/#185368440e\n\n交易规范的返回信息内容较多，现货交易权重为10，合约交易权重为1，因为交易规范本身改动频率较小，在Binance_candle中默认采用缓存的方式获取交易规范结果，以提高速度和节约权重。\n\n第一次获取交易规范信息会向官方发送请求，将请求结果保存在缓存中，随后再次获取交易规范信息会验证上次缓存的数据是否符合过期，过期则重新访问，否则返回缓存数据。\n\n如果不使用缓存，可以将过期时间expire_seconds设置为0（单位：秒）。\n\n#### 9.4.2 get_exchangeInfos 完整的交易规范\n\n|参数|类型|默认值|说明|\n|:---|:---|:---|:---|\n|expire_seconds|int|300|缓存过期时间|\n\n每种产品类型之间的交易规则式独立的，例如获取现货交易的交易规则信息。\n\n```python\nfrom binance_candle import Market\n\nexchangeInfos = Market('SPOT').get_exchangeInfos()\nprint(exchangeInfos)\n```\n\n输出：\n\n```text\n>> {\n>>     'code': 200,\n>>     'data': {'exchangeFilters': [],\n>>              'rateLimits': [{'interval': 'MINUTE',\n>>                              'intervalNum': 1,\n>>                              'limit': 1200,\n>>                              'rateLimitType': 'REQUEST_WEIGHT'},\n>>                             {'interval': 'SECOND',\n>>                              'intervalNum': 10,\n>>                              'limit': 50,\n>>                              'rateLimitType': 'ORDERS'},\n>>                             {'interval': 'DAY',\n>>                              'intervalNum': 1,\n>>                              'limit': 160000,\n>>                              'rateLimitType': 'ORDERS'},\n>>                             {'interval': 'MINUTE',\n>>                              'intervalNum': 5,\n>>                              'limit': 6100,\n>>                              'rateLimitType': 'RAW_REQUESTS'}],\n>>              'serverTime': 1675220759508,\n>>              'symbols': [\n>>                  {'allowTrailingStop': True,\n>>                   'allowedSelfTradePreventionModes': ['NONE',\n>>                                                       'EXPIRE_TAKER',\n>>                                                       'EXPIRE_MAKER',\n>>                                                       'EXPIRE_BOTH'],\n>>                   'baseAsset': 'ETH',\n>>                   'baseAssetPrecision': 8,\n>>                   'baseCommissionPrecision': 8,\n>>                   'cancelReplaceAllowed': True,\n>>                   'defaultSelfTradePreventionMode': 'NONE',\n>>                   'filters': [{'filterType': 'PRICE_FILTER',\n>>                                'maxPrice': '922327.00000000',\n>>                                'minPrice': '0.00000100',\n>>                                'tickSize': '0.00000100'},\n>>                               {'filterType': 'LOT_SIZE',\n>>                                'maxQty': '100000.00000000',\n>>                                'minQty': '0.00010000',\n>>                                'stepSize': '0.00010000'},\n>>                               {'applyToMarket': True,\n>>                                'avgPriceMins': 5,\n>>                                'filterType': 'MIN_NOTIONAL',\n>>                                'minNotional': '0.00010000'},\n>>                               {'filterType': 'ICEBERG_PARTS', 'limit': 10},\n>>                               {'filterType': 'MARKET_LOT_SIZE',\n>>                                'maxQty': '1657.19015357',\n>>                                'minQty': '0.00000000',\n>>                                'stepSize': '0.00000000'},\n>>                               {'filterType': 'TRAILING_DELTA',\n>>                                'maxTrailingAboveDelta': 2000,\n>>                                'maxTrailingBelowDelta': 2000,\n>>                                'minTrailingAboveDelta': 10,\n>>                                'minTrailingBelowDelta': 10},\n>>                               {'askMultiplierDown': '0.2',\n>>                                'askMultiplierUp': '5',\n>>                                'avgPriceMins': 5,\n>>                                'bidMultiplierDown': '0.2',\n>>                                'bidMultiplierUp': '5',\n>>                                'filterType': 'PERCENT_PRICE_BY_SIDE'},\n>>                               {'filterType': 'MAX_NUM_ORDERS',\n>>                                'maxNumOrders': 200},\n>>                               {'filterType': 'MAX_NUM_ALGO_ORDERS',\n>>                                'maxNumAlgoOrders': 5}],\n>>                   'icebergAllowed': True,\n>>                   'isMarginTradingAllowed': True,\n>>                   'isSpotTradingAllowed': True,\n>>                   'ocoAllowed': True,\n>>                   'orderTypes': ['LIMIT',\n>>                                  'LIMIT_MAKER',\n>>                                  'MARKET',\n>>                                  'STOP_LOSS_LIMIT',\n>>                                  'TAKE_PROFIT_LIMIT'],\n>>                   'permissions': ['SPOT',\n>>                                   'MARGIN',\n>>                                   'TRD_GRP_004',\n>>                                   'TRD_GRP_005',\n>>                                   'TRD_GRP_006'],\n>>                   'quoteAsset': 'BTC',\n>>                   'quoteAssetPrecision': 8,\n>>                   'quoteCommissionPrecision': 8,\n>>                   'quoteOrderQtyMarketAllowed': True,\n>>                   'quotePrecision': 8,\n>>                   'status': 'TRADING',\n>>                   'symbol': 'ETHBTC'},\n>>                  ... ...\n>>              ],\n>>              'timezone': 'UTC'},\n>>     'msg': ''\n>> }\n```\n\n#### 9.4.3 get_exchangeInfo 单个产品的交易规范\n\n|参数|类型|默认值|说明|\n|:---|:---|:---|:---|\n|symbol|str|无|产品名称|\n|expire_seconds|int|300|缓存过期时间|\n\n获取U本位合约中BTCUSDT的交易规范\n\n\n```python\nfrom binance_candle import Market\n\nexchangeInfos = Market('UM').get_exchangeInfo('BTCUSDT')\nprint(exchangeInfos)\n```\n\n\n```text\n>> {\n>>     'code': 200,\n>>     'data': {\n>>         'baseAsset': 'BTC',\n>>         'baseAssetPrecision': 8,\n>>         'contractType': 'PERPETUAL',\n>>         'deliveryDate': 4133404800000,\n>>         'filter': {'LOT_SIZE': {'filterType': 'LOT_SIZE',\n>>                                 'maxQty': '1000',\n>>                                 'minQty': '0.001',\n>>                                 'stepSize': '0.001'},\n>>                    'MARKET_LOT_SIZE': {'filterType': 'MARKET_LOT_SIZE',\n>>                                        'maxQty': '120',\n>>                                        'minQty': '0.001',\n>>                                        'stepSize': '0.001'},\n>>                    'MAX_NUM_ALGO_ORDERS': {'filterType': 'MAX_NUM_ALGO_ORDERS',\n>>                                            'limit': 10},\n>>                    'MAX_NUM_ORDERS': {'filterType': 'MAX_NUM_ORDERS',\n>>                                       'limit': 200},\n>>                    'MIN_NOTIONAL': {'filterType': 'MIN_NOTIONAL',\n>>                                     'notional': '5'},\n>>                    'PERCENT_PRICE': {'filterType': 'PERCENT_PRICE',\n>>                                      'multiplierDecimal': '4',\n>>                                      'multiplierDown': '0.9500',\n>>                                      'multiplierUp': '1.0500'},\n>>                    'PRICE_FILTER': {'filterType': 'PRICE_FILTER',\n>>                                     'maxPrice': '4529764',\n>>                                     'minPrice': '556.80',\n>>                                     'tickSize': '0.10'}},\n>>         'filters': [{'filterType': 'PRICE_FILTER',\n>>                      'maxPrice': '4529764',\n>>                      'minPrice': '556.80',\n>>                      'tickSize': '0.10'},\n>>                     {'filterType': 'LOT_SIZE',\n>>                      'maxQty': '1000',\n>>                      'minQty': '0.001',\n>>                      'stepSize': '0.001'},\n>>                     {'filterType': 'MARKET_LOT_SIZE',\n>>                      'maxQty': '120',\n>>                      'minQty': '0.001',\n>>                      'stepSize': '0.001'},\n>>                     {'filterType': 'MAX_NUM_ORDERS', 'limit': 200},\n>>                     {'filterType': 'MAX_NUM_ALGO_ORDERS', 'limit': 10},\n>>                     {'filterType': 'MIN_NOTIONAL', 'notional': '5'},\n>>                     {'filterType': 'PERCENT_PRICE',\n>>                      'multiplierDecimal': '4',\n>>                      'multiplierDown': '0.9500',\n>>                      'multiplierUp': '1.0500'}],\n>>         'liquidationFee': '0.012500',\n>>         'maintMarginPercent': '2.5000',\n>>         'marginAsset': 'USDT',\n>>         'marketTakeBound': '0.05',\n>>         'onboardDate': 1569398400000,\n>>         'orderTypes': ['LIMIT',\n>>                        'MARKET',\n>>                        'STOP',\n>>                        'STOP_MARKET',\n>>                        'TAKE_PROFIT',\n>>                        'TAKE_PROFIT_MARKET',\n>>                        'TRAILING_STOP_MARKET'],\n>>         'pair': 'BTCUSDT',\n>>         'pricePrecision': 2,\n>>         'quantityPrecision': 3,\n>>         'quoteAsset': 'USDT',\n>>         'quotePrecision': 8,\n>>         'requiredMarginPercent': '5.0000',\n>>         'settlePlan': 0,\n>>         'status': 'TRADING',\n>>         'symbol': 'BTCUSDT',\n>>         'timeInForce': ['GTC', 'IOC', 'FOK', 'GTX'],\n>>         'triggerProtect': '0.0500',\n>>         'underlyingSubType': ['PoW'],\n>>         'underlyingType': 'COIN'},\n>>     'msg': ''\n>> }\n```\n\n注：其中的filter字典属性是binance_candle对filters列表的整合，并不属于官方返回的结果。\n\n#### 9.4.4 get_symbols_trading_on 获取可以交易的产品名称\n\n|参数|类型|默认值|说明|\n|:---|:---|:---|:---|\n|expire_seconds|int|300|缓存过期时间|\n\n获取U本位合约正在交易的产品名称列表\n\n```python\nfrom binance_candle import Market\n\nsymbols_trading_on = Market('UM').get_symbols_trading_on()\nprint(symbols_trading_on)\n```\n\n输出：\n\n```text\n>> {\n>>     'code': 200,\n>>     'data': [\n>>         'BTCUSDT', 'ETHUSDT', 'BCHUSDT', 'XRPUSDT', 'EOSUSDT', 'LTCUSDT', 'TRXUSDT', 'ETCUSDT', 'LINKUSDT', 'XLMUSDT',\n>>         'ADAUSDT', 'XMRUSDT', 'DASHUSDT', 'ZECUSDT', 'XTZUSDT', 'BNBUSDT', 'ATOMUSDT', 'ONTUSDT', 'IOTAUSDT', 'BATUSDT',\n>>         'VETUSDT', 'NEOUSDT', 'QTUMUSDT', 'IOSTUSDT', 'THETAUSDT', 'ALGOUSDT', 'ZILUSDT', 'KNCUSDT', 'ZRXUSDT',\n>>         'COMPUSDT', 'OMGUSDT', 'DOGEUSDT', 'SXPUSDT', 'KAVAUSDT', 'BANDUSDT', 'RLCUSDT', 'WAVESUSDT', 'MKRUSDT',\n>>         'SNXUSDT', 'DOTUSDT', 'DEFIUSDT', 'YFIUSDT', 'BALUSDT', 'CRVUSDT', 'TRBUSDT', 'RUNEUSDT', 'SUSHIUSDT',\n>>         'EGLDUSDT', 'SOLUSDT', 'ICXUSDT', 'STORJUSDT', 'BLZUSDT', 'UNIUSDT', 'AVAXUSDT', 'FTMUSDT', 'HNTUSDT',\n>>         'ENJUSDT', 'FLMUSDT', 'TOMOUSDT', 'RENUSDT', 'KSMUSDT', 'NEARUSDT', 'AAVEUSDT', 'FILUSDT', 'RSRUSDT', 'LRCUSDT',\n>>         'MATICUSDT', 'OCEANUSDT', 'BELUSDT', 'CTKUSDT', 'AXSUSDT', 'ALPHAUSDT', 'ZENUSDT', 'SKLUSDT', 'GRTUSDT',\n>>         '1INCHUSDT', 'BTCBUSD', 'CHZUSDT', 'SANDUSDT', 'ANKRUSDT', 'LITUSDT', 'UNFIUSDT', 'REEFUSDT', 'RVNUSDT',\n>>         'SFPUSDT', 'XEMUSDT', 'COTIUSDT', 'CHRUSDT', 'MANAUSDT', 'ALICEUSDT', 'HBARUSDT', 'ONEUSDT', 'LINAUSDT',\n>>         'STMXUSDT', 'DENTUSDT', 'CELRUSDT', 'HOTUSDT', 'MTLUSDT', 'OGNUSDT', 'NKNUSDT', 'DGBUSDT', '1000SHIBUSDT',\n>>         'BAKEUSDT', 'GTCUSDT', 'ETHBUSD', 'BTCDOMUSDT', 'BNBBUSD', 'ADABUSD', 'XRPBUSD', 'IOTXUSDT', 'DOGEBUSD',\n>>         'AUDIOUSDT', 'C98USDT', 'MASKUSDT', 'ATAUSDT', 'SOLBUSD', 'DYDXUSDT', '1000XECUSDT', 'GALAUSDT', 'CELOUSDT',\n>>         'ARUSDT', 'KLAYUSDT', 'ARPAUSDT', 'CTSIUSDT', 'LPTUSDT', 'ENSUSDT', 'PEOPLEUSDT', 'ANTUSDT', 'ROSEUSDT',\n>>         'DUSKUSDT', 'FLOWUSDT', 'IMXUSDT', 'API3USDT', 'GMTUSDT', 'APEUSDT', 'BNXUSDT', 'WOOUSDT', 'JASMYUSDT',\n>>         'DARUSDT', 'GALUSDT', 'AVAXBUSD', 'NEARBUSD', 'GMTBUSD', 'APEBUSD', 'GALBUSD', 'FTMBUSD', 'DODOBUSD',\n>>         'GALABUSD', 'TRXBUSD', '1000LUNCBUSD', 'LUNA2BUSD', 'OPUSDT', 'DOTBUSD', 'TLMBUSD', 'ICPBUSD', 'WAVESBUSD',\n>>         'LINKBUSD', 'SANDBUSD', 'LTCBUSD', 'MATICBUSD', 'CVXBUSD', 'FILBUSD', '1000SHIBBUSD', 'LEVERBUSD', 'ETCBUSD',\n>>         'LDOBUSD', 'UNIBUSD', 'INJUSDT', 'STGUSDT', 'FOOTBALLUSDT', 'SPELLUSDT', '1000LUNCUSDT', 'LUNA2USDT', 'AMBBUSD',\n>>         'PHBBUSD', 'LDOUSDT', 'CVXUSDT', 'ICPUSDT', 'APTUSDT', 'QNTUSDT', 'APTBUSD', 'BLUEBIRDUSDT', 'ETHUSDT_230331',\n>>         'BTCUSDT_230331', 'FETUSDT', 'AGIXBUSD', 'FXSUSDT', 'HOOKUSDT', 'MAGICUSDT'\n>>     ],\n>>     'msg': ''\n>> }\n```\n\n#### 9.4.5 get_symbols_trading_off 获取不可交易的产品名称\n\n|参数|类型|默认值|说明|\n|:---|:---|:---|:---|\n|expire_seconds|int|300|缓存过期时间|\n\n获取U本位合约不可交易的产品名称列表\n\n```python\nfrom binance_candle import Market\n\nsymbols_trading_off = Market('UM').get_symbols_trading_off()\nprint(symbols_trading_off)\n```\n\n输出：\n\n```text\n>> {\n>>     'code': 200,\n>>     'data': [\n>>         'SRMUSDT', 'CVCUSDT', 'BTSUSDT', 'BTCSTUSDT', 'SCUSDT', 'TLMUSDT', 'RAYUSDT', 'FTTBUSD', 'FTTUSDT',\n>>         'ANCBUSD', 'AUCTIONBUSD'\n>>     ],\n>>     'msg': ''\n>> }\n```\n\n\n### 9.5 深度信息\n\n#### 9.5.1 get_get_depth 获取单个产品的深度信息\n\n```python\nfrom binance_candle import Market\nfrom pprint import pprint\n\nif __name__ == '__main__':\n    # 币币交易：SPOT；U本位合约：UM；币本位合约：CM\n    instType = 'UM'\n    # 实例化行情Market\n    market = Market(instType)\n    # 单个产品的深度信息 limit : 数量\n    pprint(market.get_depth('BTCUSDT', limit=10))\n```\n\n输出：\n\n```text\n>> {'code': 200,\n>>  'data': {'E': 1675823293991,\n>>           'T': 1675823293984,\n>>           'asks': [['23290.50', '15.695'],\n>>                    ['23290.80', '0.003'],\n>>                    ['23290.90', '0.001'],\n>>                    ['23291.00', '0.084'],\n>>                    ['23291.10', '0.006'],\n>>                    ['23291.20', '0.034'],\n>>                    ['23291.30', '0.017'],\n>>                    ['23291.40', '0.258'],\n>>                    ['23291.50', '0.010'],\n>>                    ['23291.70', '0.821']],\n>>           'bids': [['23290.40', '18.252'],\n>>                    ['23290.30', '2.230'],\n>>                    ['23290.20', '1.156'],\n>>                    ['23290.10', '0.130'],\n>>                    ['23290.00', '2.182'],\n>>                    ['23289.90', '0.010'],\n>>                    ['23289.80', '0.172'],\n>>                    ['23289.70', '0.151'],\n>>                    ['23289.60', '0.044'],\n>>                    ['23289.50', '0.002']],\n>>           'lastUpdateId': 2476916281979},\n>>  'msg': ''}\n```\n\n## 10 历史K线管理\n\n### 10.1 BinanceLite 简介\n\n\nBinanceLite基于candlelite的IO为底层，用于维护本地Binance历史K线数据，由于BinanceLite采用日期分割的CSV文件存储，不需要安装第三方数据库。并且由于默认系统路径的配置可以使不同路径的项目共享历史K线数据。\n\n```python\nfrom binance_candle import BinanceLite\n\nbinanceLite = BinanceLite()\ncandle = binanceLite.load_candle_by_date(\n    instType='SPOT',\n    symbol='BTCUSDT',\n    start='2023-01-01',\n    end='2023-01-10',\n)\n```\n\n对于任何历史K线数据的读取，都需要时区timezone、时间粒度bar、数据位置base_dir，如果在调用函数的时候不指定这三个内容，将使用candlelite的默认配置。\n\n你可以在candlelite中查看Binance默认的配置内容。\n\n```cmd\ncandlelite show_settings # 查看配置信息\n```\n\n输出：\n\n```text\n>> # 历史K线数据根目录\n>> CANDLE_BASE_DIR = 'CANDLELITE_DATA'\n>> # OKX以日期为单位的存储目录\n>> OKX_DATE_DIRNAME = 'OKX'\n>> # OKX以文件为单位的存储目录\n>> OKX_FILE_DIRNAME = 'OKX_FILE'\n>> # OKX的默认时区\n>> OKX_TIMEZONE = 'Asia/Shanghai'\n>> # OKX的默认时间粒度\n>> OKX_DEFAULT_BAR = '1m'\n>> # BINANCE以日期为单位的存储目录\n>> BINANCE_DATE_DIRNAME = 'BINANCE'\n>> # BINANCE以文件为单位的存储目录\n>> BINANCE_FILE_DIRNAME = 'BINANCE_FILE'\n>> # BINANCE的默认时区\n>> BINANCE_TIMEZONE = 'America/New_York'\n>> # BINANCE的默认时间粒度\n>> BINANCE_DEFAULT_BAR = '1m'\n```\n\n修改配置内容\n\n```cmd\ncandlelite console_settings\n```\n\n为了让多个不同路径本地项目可以共享数据，可以将\"CANDLE_BASE_DIR\"设置为绝对路径，例如：'/root/CANDLELITE_DATA' 或 'd:\\CANDLELITE_DATA'。\n\n### 10.2 读取数据\n\n#### 10.2.1 load_candle_by_date \n\nload_candle_by_date 以日期为单位读取单个产品历史K线数据\n\n|参数|类型|默认值|说明|\n|:---|:---|:---|:---|\n|instType|str|无|产品类别（现货：SPOT、U本位：UM、币本位：CM）|\n|symbol|str|无|产品名称|\n|start|Union[int,float,str,datetime.date]|无|起始日期|\n|end|Union[int,float,str,datetime.date]|无|终止日期|\n|base_dir|Union[str,None]|None|数据根目录，None使用candlelite中Binance的默认根目录|\n|timezone|Union[str,None]|None|时区，None使用candlelite中Binance的默认时区|\n|bar|Union[str,None]|None|时间粒度，None使用candlelite中Binance的默认时间粒度|\n|valid_interval|bool|True|是否验证数据的时间间隔|\n|valid_start|bool|True|是否验证数据的时间起点|\n|valid_end|bool|True|是否验证数据的时间终点|\n\n\n读取U本位合约中BTCUSDT从2023-01-01 ~ 2023-01-10 的历史K线数据\n\n```python\nfrom binance_candle import BinanceLite\n\nbinanceLite = BinanceLite()\ncandle = binanceLite.load_candle_by_date(\n    instType='UM',\n    symbol='BTCUSDT',\n    start='2023-01-01',\n    end='2023-01-10',\n)\nprint(candle)\n```\n\n#### 10.2.1 load_candle_map_by_date\n\n load_candle_map_by_date 以日期为单位读取全部产品历史K线数据字典\n\n|参数|类型|默认值|说明|\n|:---|:---|:---|:---|\n|instType|str|无|产品类别（现货：SPOT、U本位：UM、币本位：CM）|\n|symbols|list|无|产品名称列表，如果为空列表，读取从start~end范围数据完整的全部产品|\n|start|Union[int,float,str,datetime.date]|无|起始日期|\n|end|Union[int,float,str,datetime.date]|无|终止日期|\n|base_dir|Union[str,None]|None|数据根目录，None使用candlelite中Binance的默认根目录|\n|timezone|Union[str,None]|None|时区，None使用candlelite中Binance的默认时区|\n|bar|Union[str,None]|None|时间粒度，None使用candlelite中Binance的默认时间粒度|\n|contains|str|''|产品名称中需包含的内容，不满足则过滤读取|\n|endswith|str|''|产品名称中需以何结尾，不满足则过滤读取|\n|p_num|int|4|使用多进程加速读取，进程个数|\n|valid_interval|bool|True|是否验证数据的时间间隔|\n|valid_start|bool|True|是否验证数据的时间起点|\n|valid_end|bool|True|是否验证数据的时间终点|\n\n\n\n读取U本位合约从2023-01-01 ~ 2023-01-10 的历史K线数据字典\n\n```python\nfrom binance_candle import BinanceLite\n\nbinanceLite = BinanceLite()\ncandle_map = binanceLite.load_candle_map_by_date(\n    instType='UM',\n    symbols=[],\n    start='2023-01-01',\n    end='2023-01-10',\n)\nprint(candle_map)\n```\n\n### 10.3 保存数据\n\n#### 10.3.1 save_candle_by_date\n\nsave_candle_by_date 以日期为单位保存单个产品历史K线数据\n\n|参数|类型|默认值|说明|\n|:---|:---|:---|:---|\n|candle|np.ndarray|无|历史K线数据|\n|instType|str|无|产品类别（现货：SPOT、U本位：UM、币本位：CM）|\n|symbol|str|无|产品名称|\n|start|Union[int,float,str,datetime.date]|无|起始日期|\n|end|Union[int,float,str,datetime.date]|无|终止日期|\n|base_dir|Union[str,None]|None|数据根目录，None使用candlelite中Binance的默认根目录|\n|timezone|Union[str,None]|None|时区，None使用candlelite中Binance的默认时区|\n|bar|Union[str,None]|None|时间粒度，None使用candlelite中Binance的默认时间粒度|\n|replace|bool|False|是否替换本地数据|\n|drop_duplicate|bool|True|是否去重|\n|sort|bool|True|是否按照时间戳排序|\n|valid_interval|bool|True|是否验证数据的时间间隔|\n|valid_start|bool|True|是否验证数据的时间起点|\n|valid_end|bool|True|是否验证数据的时间终点|\n\n读取U本位合约中BTCUSDT从2023-01-01~ 2023-01-10 的历史K线数据，截取2023-01-05 ~ 2023-01-06 日期范围数据保存到指定文件夹中。\n\n```python\nfrom binance_candle import BinanceLite\n\nbinanceLite = BinanceLite()\ncandle = binanceLite.load_candle_by_date(\n    instType='UM',\n    symbol='BTCUSDT',\n    start='2023-01-01',\n    end='2023-01-10',\n)\n\nbinanceLite.save_candle_by_date(\n    candle=candle,\n    instType='UM',\n    symbol='BTCUSDT',\n    start='2023-01-05',\n    end='2023-01-06',\n    base_dir='./target_dir'\n)\n```\n\n\n#### 10.3.2 save_candle_map_by_date\n\nsave_candle_by_date 以日期为单位保存产品历史K线数据字典\n\n|参数|类型|默认值|说明|\n|:---|:---|:---|:---|\n|candle_map|dict|无|历史K线数据字典|\n|instType|str|无|产品类别（现货：SPOT、U本位：UM、币本位：CM）|\n|symbols|list|无|保存的产品名称，空列表表示candle_map中的全部产品|\n|start|Union[int,float,str,datetime.date]|无|起始日期|\n|end|Union[int,float,str,datetime.date]|无|终止日期|\n|base_dir|Union[str,None]|None|数据根目录，None使用candlelite中Binance的默认根目录|\n|timezone|Union[str,None]|None|时区，None使用candlelite中Binance的默认时区|\n|bar|Union[str,None]|None|时间粒度，None使用candlelite中Binance的默认时间粒度|\n|replace|bool|False|是否替换本地数据|\n|drop_duplicate|bool|True|是否去重|\n|sort|bool|True|是否按照时间戳排序|\n|valid_interval|bool|True|是否验证数据的时间间隔|\n|valid_start|bool|True|是否验证数据的时间起点|\n|valid_end|bool|True|是否验证数据的时间终点|\n\n读取U本位合约从2023-01-01 ~ 2023-01-10 的历史K线数据字典，截取2023-01-05 ~ 2023-01-06 日期范围数据保存到指定文件夹中。\n\n```python\nfrom binance_candle import BinanceLite\n\nbinanceLite = BinanceLite()\ncandle_map = binanceLite.load_candle_map_by_date(\n    instType='UM',\n    symbols=[],\n    start='2023-01-01',\n    end='2023-01-10',\n)\n\nbinanceLite.save_candle_map_by_date(\n    candle_map=candle_map,\n    instType='UM',\n    symbols=[],\n    start='2023-01-05',\n    end='2023-01-06',\n    base_dir='./target_dir'\n)\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pyted/binance_candle",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "binance-candle",
    "package_url": "https://pypi.org/project/binance-candle/",
    "platform": null,
    "project_url": "https://pypi.org/project/binance-candle/",
    "project_urls": {
      "Homepage": "https://github.com/pyted/binance_candle"
    },
    "release_url": "https://pypi.org/project/binance-candle/1.0.6/",
    "requires_dist": [
      "pendulum",
      "numpy",
      "pandas",
      "candlelite",
      "paux",
      "pbinance"
    ],
    "requires_python": ">=3.6.0",
    "summary": "Binance local and real-time market candle server",
    "version": "1.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17169920,
  "releases": {
    "1.0.0.dev0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5c9b646319067a1e07c9977465b82364503bcce81a2dc0ff03f2a8e0d6087dbb",
          "md5": "4f475afc23c1f71b256e9ea0ff38cbab",
          "sha256": "9f8c426ff419d31d25bf2ee417d081ef6aca59e33452acb1bebe47837f6e3500"
        },
        "downloads": -1,
        "filename": "binance_candle-1.0.0.dev0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4f475afc23c1f71b256e9ea0ff38cbab",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 19408,
        "upload_time": "2023-01-28T22:45:51",
        "upload_time_iso_8601": "2023-01-28T22:45:51.444404Z",
        "url": "https://files.pythonhosted.org/packages/5c/9b/646319067a1e07c9977465b82364503bcce81a2dc0ff03f2a8e0d6087dbb/binance_candle-1.0.0.dev0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "90a199c5ef3f8345e4c66fff5881f890f3609bd726e09899bdf64b7fc3697c47",
          "md5": "4c71ff67c4ac5d3754d8d40129e3ff4a",
          "sha256": "c7d336e5935fa62bfb580fd0f34ad31797f477a95eabd6b97807d62156ce143e"
        },
        "downloads": -1,
        "filename": "binance_candle-1.0.0.dev0.tar.gz",
        "has_sig": false,
        "md5_digest": "4c71ff67c4ac5d3754d8d40129e3ff4a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 15490,
        "upload_time": "2023-01-28T22:45:55",
        "upload_time_iso_8601": "2023-01-28T22:45:55.538464Z",
        "url": "https://files.pythonhosted.org/packages/90/a1/99c5ef3f8345e4c66fff5881f890f3609bd726e09899bdf64b7fc3697c47/binance_candle-1.0.0.dev0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dccd4b5a3183823a7c0b727a042d06b66f92c57e6330270f766992a2171e9e20",
          "md5": "46830cf9705f7c0ccb51ebeb55445272",
          "sha256": "2aacfe1273807cacb56b721fd1614cb8450dd908c9a522ddf79b90eef7277970"
        },
        "downloads": -1,
        "filename": "binance_candle-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "46830cf9705f7c0ccb51ebeb55445272",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 32160,
        "upload_time": "2023-02-01T07:15:28",
        "upload_time_iso_8601": "2023-02-01T07:15:28.403547Z",
        "url": "https://files.pythonhosted.org/packages/dc/cd/4b5a3183823a7c0b727a042d06b66f92c57e6330270f766992a2171e9e20/binance_candle-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "983504f704a0dea1cf45e1a45b093e7007f646b3d9854d2af60567459cd90a02",
          "md5": "a1a8083a2460978f7fb702300f4b7027",
          "sha256": "44bb8c92a138fb148b1b092387b651f01ad3d5ca8cf7ffb1d0679a3d21a7389a"
        },
        "downloads": -1,
        "filename": "binance_candle-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a1a8083a2460978f7fb702300f4b7027",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 39345,
        "upload_time": "2023-02-01T07:15:33",
        "upload_time_iso_8601": "2023-02-01T07:15:33.717281Z",
        "url": "https://files.pythonhosted.org/packages/98/35/04f704a0dea1cf45e1a45b093e7007f646b3d9854d2af60567459cd90a02/binance_candle-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "37e69239c96967f6ba4e4a7fdf36a8d3cd1df74092f385f8557af95c75d326d8",
          "md5": "97875b02c3268f2d3972462d3eef36ae",
          "sha256": "1d48220498acd5e5b0c54ccc0f3e6a597e672aedc3e01d51fbb37364adedb673"
        },
        "downloads": -1,
        "filename": "binance_candle-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "97875b02c3268f2d3972462d3eef36ae",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 32754,
        "upload_time": "2023-02-08T02:40:57",
        "upload_time_iso_8601": "2023-02-08T02:40:57.313351Z",
        "url": "https://files.pythonhosted.org/packages/37/e6/9239c96967f6ba4e4a7fdf36a8d3cd1df74092f385f8557af95c75d326d8/binance_candle-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f95b312bf102f31550b63eea471c34e0bdacfd590604f8756d128739a7a12ee4",
          "md5": "8180702972a0fccbb3051a6e386f29a2",
          "sha256": "d2c4e6718e406fcff3bba83db7cf815ca83bafdc59b2ff390ed63933e5ff5fa8"
        },
        "downloads": -1,
        "filename": "binance_candle-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8180702972a0fccbb3051a6e386f29a2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 654148,
        "upload_time": "2023-02-08T02:41:00",
        "upload_time_iso_8601": "2023-02-08T02:41:00.715481Z",
        "url": "https://files.pythonhosted.org/packages/f9/5b/312bf102f31550b63eea471c34e0bdacfd590604f8756d128739a7a12ee4/binance_candle-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "121657f6968fd644208742b62708eff365884ec9597d7c1d3b54643e545c2611",
          "md5": "157502740aa08dccfba28afc64dd0b22",
          "sha256": "a306d527c241c3575aeffbac299b1af8428a69bedc948ad7d172ba9f0fa94ae0"
        },
        "downloads": -1,
        "filename": "binance_candle-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "157502740aa08dccfba28afc64dd0b22",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 32748,
        "upload_time": "2023-02-10T03:24:50",
        "upload_time_iso_8601": "2023-02-10T03:24:50.774166Z",
        "url": "https://files.pythonhosted.org/packages/12/16/57f6968fd644208742b62708eff365884ec9597d7c1d3b54643e545c2611/binance_candle-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bdc9e158b9620435668ba6d9d311974e43d0b77e8212eb618cc37756afa2fae6",
          "md5": "577dfc48a13c752221a325d55d8ab93b",
          "sha256": "8caa5c0d0b7c8b169f78d3b5e68804bcd898727472cf9bc90ba709ece2c02bc5"
        },
        "downloads": -1,
        "filename": "binance_candle-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "577dfc48a13c752221a325d55d8ab93b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 654106,
        "upload_time": "2023-02-10T03:24:53",
        "upload_time_iso_8601": "2023-02-10T03:24:53.802211Z",
        "url": "https://files.pythonhosted.org/packages/bd/c9/e158b9620435668ba6d9d311974e43d0b77e8212eb618cc37756afa2fae6/binance_candle-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c8e87034901ae0fc567f020fd51e3ba34b3df9e97bfc8b234edbd76ae03effbb",
          "md5": "34caafb7dbefec0efc599254902c1289",
          "sha256": "cd1182447dcfa264783f885361216b57d3e089fda1aee028c803e0ab236a7b4c"
        },
        "downloads": -1,
        "filename": "binance_candle-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "34caafb7dbefec0efc599254902c1289",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 32764,
        "upload_time": "2023-03-03T03:10:34",
        "upload_time_iso_8601": "2023-03-03T03:10:34.774011Z",
        "url": "https://files.pythonhosted.org/packages/c8/e8/7034901ae0fc567f020fd51e3ba34b3df9e97bfc8b234edbd76ae03effbb/binance_candle-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "63249e8628b1e17e43f60d4d896cfd39e528a44aefbe51649d9eb9b223d30d0d",
          "md5": "6bf7c47e0e551334c595817d809db746",
          "sha256": "d94ac13c040003082027b76096b03e04a7f1935b2c472dff2ea06fd9d24248bd"
        },
        "downloads": -1,
        "filename": "binance_candle-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "6bf7c47e0e551334c595817d809db746",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 654140,
        "upload_time": "2023-03-03T03:10:40",
        "upload_time_iso_8601": "2023-03-03T03:10:40.001388Z",
        "url": "https://files.pythonhosted.org/packages/63/24/9e8628b1e17e43f60d4d896cfd39e528a44aefbe51649d9eb9b223d30d0d/binance_candle-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "430eeadc06224425e66b348d279f5214ee93946c4092afd14295f95c22f8b509",
          "md5": "5c8745d384fe2296eea4ef502a034abb",
          "sha256": "5fa5b6216ccc135d2cf2d4fd09ab750a734e620dc8ff12490a5c214412281bd4"
        },
        "downloads": -1,
        "filename": "binance_candle-1.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5c8745d384fe2296eea4ef502a034abb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 32765,
        "upload_time": "2023-03-03T03:29:05",
        "upload_time_iso_8601": "2023-03-03T03:29:05.307707Z",
        "url": "https://files.pythonhosted.org/packages/43/0e/eadc06224425e66b348d279f5214ee93946c4092afd14295f95c22f8b509/binance_candle-1.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cbcf5b46f731febc11a962489fc29f0579416926550aa8e37d700b9329155c53",
          "md5": "8c8e8b7a870747b17e24daff43c157fc",
          "sha256": "61824d26dc623d62d069c06dbd3d4ac4357197ca2a707de57be2f9f0d604cc9e"
        },
        "downloads": -1,
        "filename": "binance_candle-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "8c8e8b7a870747b17e24daff43c157fc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 654148,
        "upload_time": "2023-03-03T03:29:08",
        "upload_time_iso_8601": "2023-03-03T03:29:08.735468Z",
        "url": "https://files.pythonhosted.org/packages/cb/cf/5b46f731febc11a962489fc29f0579416926550aa8e37d700b9329155c53/binance_candle-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "de0d681cb1b2d1e864b2e5e03a31b9523a50d832c17fed388b303c28e775e843",
          "md5": "08656a54b4cde02ee52672a6f53dcfd9",
          "sha256": "d048d15cdc8d8bf394ab755e5b68c7e577e39407999ba292c1face2fac442ea7"
        },
        "downloads": -1,
        "filename": "binance_candle-1.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "08656a54b4cde02ee52672a6f53dcfd9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 32876,
        "upload_time": "2023-03-06T04:09:05",
        "upload_time_iso_8601": "2023-03-06T04:09:05.120409Z",
        "url": "https://files.pythonhosted.org/packages/de/0d/681cb1b2d1e864b2e5e03a31b9523a50d832c17fed388b303c28e775e843/binance_candle-1.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1fb4f47b54e26b560bb35b2fc70df474a7aa9929e844662e9f86f93cddde259e",
          "md5": "71bb33fc175a03eba55a0cc43a461730",
          "sha256": "834d238568f023a98dcb4a95f69514b07fce1efcb3d7450cb18535c988a032f3"
        },
        "downloads": -1,
        "filename": "binance_candle-1.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "71bb33fc175a03eba55a0cc43a461730",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 654276,
        "upload_time": "2023-03-06T04:09:08",
        "upload_time_iso_8601": "2023-03-06T04:09:08.390695Z",
        "url": "https://files.pythonhosted.org/packages/1f/b4/f47b54e26b560bb35b2fc70df474a7aa9929e844662e9f86f93cddde259e/binance_candle-1.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "de0d681cb1b2d1e864b2e5e03a31b9523a50d832c17fed388b303c28e775e843",
        "md5": "08656a54b4cde02ee52672a6f53dcfd9",
        "sha256": "d048d15cdc8d8bf394ab755e5b68c7e577e39407999ba292c1face2fac442ea7"
      },
      "downloads": -1,
      "filename": "binance_candle-1.0.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "08656a54b4cde02ee52672a6f53dcfd9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6.0",
      "size": 32876,
      "upload_time": "2023-03-06T04:09:05",
      "upload_time_iso_8601": "2023-03-06T04:09:05.120409Z",
      "url": "https://files.pythonhosted.org/packages/de/0d/681cb1b2d1e864b2e5e03a31b9523a50d832c17fed388b303c28e775e843/binance_candle-1.0.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1fb4f47b54e26b560bb35b2fc70df474a7aa9929e844662e9f86f93cddde259e",
        "md5": "71bb33fc175a03eba55a0cc43a461730",
        "sha256": "834d238568f023a98dcb4a95f69514b07fce1efcb3d7450cb18535c988a032f3"
      },
      "downloads": -1,
      "filename": "binance_candle-1.0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "71bb33fc175a03eba55a0cc43a461730",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.0",
      "size": 654276,
      "upload_time": "2023-03-06T04:09:08",
      "upload_time_iso_8601": "2023-03-06T04:09:08.390695Z",
      "url": "https://files.pythonhosted.org/packages/1f/b4/f47b54e26b560bb35b2fc70df474a7aa9929e844662e9f86f93cddde259e/binance_candle-1.0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}