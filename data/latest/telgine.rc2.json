{
  "info": {
    "author": "Danil Sokolov",
    "author_email": "danilzyx@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Environment :: Console",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Topic :: Internet",
      "Topic :: Software Development",
      "Topic :: Software Development :: Code Generators",
      "Topic :: Software Development :: Libraries :: Application Frameworks"
    ],
    "description": "# telgine is the python telegram bot framework \n\n## Установка\nПоддерживаемая версия - `Python 3.10` и выше\n\nВажно! Если вы на Windows, то запускаете скрипт ниже из консоли запущенной с правами админимтратора, иначе скрипт не добавится в переменную `PATH` и команды `ni` и `telgine` работать не будут.\n\nНапишите `pip install telgine` для установки пакета из [PyPI](https://pypi.org).\n\nДля разработки этого пакета требуется установить [Poetry](https://python-poetry.org/) командой `pip install poetry`. Обязательно посмотрите [документацию](https://python-poetry.org/docs/) этого пакетного менеджера!\n\nНапишите `ni init superbot` для инициализации проекта.\n\n## Проект\n### Конфигурация\n`bot/config/env.py` Файл для описния переменных среды. \n\n```python\nclass EnvConfig:\n    BOT_NAME: str\n    BOT_TOKEN: str\n    ADMINS: list[int]\n\n    APP_HOST: str = 'localhost'\n    APP_PORT: int = 8443\n    DB_HOST: str\n    DB_PORT: int\n    DB_NAME: str\n    DB_USER: str\n    DB_PASSWORD: str\n```\nВзгляните на этот кусок кода:\n```python\nAPPHOST: str = 'localhost'\n```\n`APP_HOST` это поле класса в которое будет подргужено значение из файла `.env` по ключу `APP_HOST`. \n\n`str` означает, что при подргрузке переменной, ее значение будет приведено к этому типу. \n\n`'localhost'` - это значение по умолчанию, которое будет использовано в случае отсутствия ключа или его значения в файле `.env`\n## Контроллеры \n`bot/controllers` - папака для контроллеров\nВсе контроллеры подгружаются и регистрируются автоматически при инициализации приложения.\n\n```python\nfrom telgine import command, send\nfrom bot.config import config\n\n\n@command\nasync def start():\n  await send(f'Application started at {config.APP_HOST}:{config.APP_PORT}')\n```\n`@command` - это декоратор, который помечает обработчик команд `start()` как команду. Если вы отправите боту `/start`, то он исполнит тело этого обработчика.\nПо умочанию за имя команду принимается название функции. Вы также можете изменить его изменив значение параметра `name`.\nДля добавления описания функции, которое будет отображатся в списке команд Telegram, используйте поле `description`.\n```python\n@command(name='start', description='Start this bot for you')\ndef rename_me(): pass\n```\n\n`send()` - функция, которая отсылает текст пользователю бота, который вызвал обработку этого коллбека. \n### Получение данных от пользователя \nДля получения данных и текста введеного пользователем, вызовите функцию `message()`\n```python\nfrom telgine import command, message\n\n@command\nasync def start():\n    msg = message()\n    print(msg)\n```\n### Запрос данных у пользователя \n`ask()` Отсылает сообщение с просьбой ввести информацию и возвращает обьект сообщения с этой информацией.\n\n```python\nfrom telgine import command, ask, send\n\n\n@command\nasync def start():\n  name_msg = await ask('Введите ваше имя')\n  age_msg = await ask('Теперь введите ваш возраст')\n\n  print(name_msg)\n  print(age_msg)\n\n  send(f'Привет {name_msg.text}, которому {age_msg.text} лет')\n```\n### Другие декораторы для создания контроллеров\n`@startup` - Запускает обработчик при запуске приложения \n\n`@halt` - Запускает обработчик при остановке приложения\n\n`@hear` - Запускает обработчик при получение сообщения с обычным текстом текста\n\n\n## Хранение данных вне обработчиков\nДля сохранения данных введенных пользователем между вызовами разных обработчиков, нужно использовать `UserStore`\n```python\n# bot/stores/user.py\nfrom telgine import UserStore\n\nclass User(UserStore):\n    # 'Петр' и 10 - это значение по умолчанию \n    name: str = 'Рома'\n    age: int = 16\n```\n```python\n# bot/controllers/start.py\nfrom telgine import ask, command\nfrom bot.stores.User import User\n\n@command\nasync def start():\n    name = await ask('Введите ваше имя')\n    age = await ask('Введите ваш возраст')\n    user = User()\n    user.name = name.text, \n    user.age = int(age.text)\n\n@command\nasync def info():\n    user = User()\n    await send(f'Привет {user.name}, которому {user.age} лет')\n```\nЗдесь класс `User` - сохраняет данные не глобально для всех пользователей, а локально именно для этого пользователя в хранилеще по `id` его чата в `Storage`. По умолчанию используется `MemoryStorage`, но потом мы добавим `RedistStorage`, `MongoStorage` и `FileStorage`\n\n`UserStore.clear()` - востанавливает значение хранилища к значениям по умолчанию, если их нет, то удаляет все данные для этого пользователя.\n`UserStore.delete()` - полностью удаляет данные этого хранилища для этого пользователя.\n\n## Tasks\n- [ ] Implement modules autoimport \n- [ ] Implement method `select(message: str, enum: Enum)` which send a message with selection and return option of enum and map selected option to value\n- [ ] Implement `LocalStorage()` with the same syntax `name, email, age = LocalStore()` which create storage for each user. For implementation need to use python AST.\n- [ ] Make architecture for this project\n- [ ] Refactor all project\n- [ ] Make documentation better\n- [ ] Make errors better\n- [ ] Make using Config class from project for type auto complete\n- [ ] Add code formatter - black\n- [ ] Set name to \"bot\" folder the same as project\n- [ ] Make plugin system\n- [ ] Add Template renderer\n- [ ] Add `@startup`, `@stop` decorators\n- [ ] Add `@hear` decorator\n- [ ] Add the ability to work with inline query\n- [ ] Add checking for existence value in .env file. If value is not defined then raise error\n- [ ] Colorize output\n- [ ] Make beautiful serve message\n- [ ] Add the ability to adding other threads to app\n- [ ] Add `@middleware` decorator\n- [ ] Add `@filter` decorator\n- [ ] Add questions to init project command\n- [ ] Add auto db injection to peewee models\n- [ ] Change every event syntax\n- [ ] Implement overwrite default `/help` command text and reaction for it\n- [ ] Implement `/myuserid` command for improve user experience\n- [ ] Implement `setcommand()` function for showing commands at list\n- [ ] Schedulling with localization\n- [ ] Add logging with structuring for years, month and days\n- [ ] Buy website for telgine project\n- [ ] Make additional cli commands:\n  - [ ] `generate` - generate something project items\n  - [ ] `start` - start server\n  - [ ] `dev` - start server with auto reloading\n  - [ ] `build` - compile all project to one .pyc file\n  - [ ] `deploy` - deploy bot to telgine server\n  - [ ] `auth` - authorize for telgine server for deploy\n- [ ] Implement plugins:\n  - [ ] Role plugin\n  - [ ] Admin plugin\n  - [ ] Analytic plugin\n  - [ ] Payment plugin\n- [ ] Add notification about startup and stopping for bot admins\n- [ ] Detach telgine from specific service (Telegram) and make it universe:\n  - [ ] Telegram\n  - [ ] WhatsApp\n  - [ ] Discord\n  - [ ] Github\n  - [ ] Twitter and others social networks\n- [ ] Draw logotype for telgine project\n- [ ] Add choosing between requirements.txt and pyproject.toml files (poetry and pip options).",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sejjax/telgine",
    "keywords": "telegram,bot,framework,aiogram,mtproto",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "telgine",
    "package_url": "https://pypi.org/project/telgine/",
    "platform": null,
    "project_url": "https://pypi.org/project/telgine/",
    "project_urls": {
      "Bug Tracker": "https://github.com/sejjax/telgine/issues",
      "Homepage": "https://github.com/sejjax/telgine",
      "Repository": "https://github.com/sejjax/telgine"
    },
    "release_url": "https://pypi.org/project/telgine/0.2.1/",
    "requires_dist": [
      "click (>=8.1.3,<9.0.0)",
      "aiogram (>=2.21,<3.0)",
      "aioredis (>=2.0.1)",
      "environs (>=9.5.0)",
      "peewee (>=3.14.10)",
      "Werkzeug (>=2.1.2,<3.0.0)",
      "aioschedule (>=0.5.2,<0.6.0)",
      "cogapp (>=3.3.0,<4.0.0)",
      "Jinja2 (>=3.1.2,<4.0.0)",
      "ply (>=3.11,<4.0)",
      "sly (>=0.4,<0.5)"
    ],
    "requires_python": ">=3.10",
    "summary": "Telegram bot framework",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15244231,
  "releases": {
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c0fd02e4ef8e621b15f7cdc9a673d29c939a2fb83be9766e02c60c3853de7bea",
          "md5": "11b43da9d487de15b9bbe48dac026447",
          "sha256": "8084b31ce4ac7fc16d381281950b09308181d5c7d8405d931e14aed159faa26c"
        },
        "downloads": -1,
        "filename": "telgine-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "11b43da9d487de15b9bbe48dac026447",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 34984,
        "upload_time": "2022-09-28T16:32:27",
        "upload_time_iso_8601": "2022-09-28T16:32:27.013464Z",
        "url": "https://files.pythonhosted.org/packages/c0/fd/02e4ef8e621b15f7cdc9a673d29c939a2fb83be9766e02c60c3853de7bea/telgine-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b3f774f45ffb4086e8d09ea37da8a7dff270a92b575b71c6878b0df67c70caa2",
          "md5": "d499118f80e9e472c6f11c05376353a2",
          "sha256": "a27358f7544b15aefc891ad4c6a3713db43759c79463eb6a9ae29a80a4240fde"
        },
        "downloads": -1,
        "filename": "telgine-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d499118f80e9e472c6f11c05376353a2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 26133,
        "upload_time": "2022-09-28T16:32:29",
        "upload_time_iso_8601": "2022-09-28T16:32:29.011903Z",
        "url": "https://files.pythonhosted.org/packages/b3/f7/74f45ffb4086e8d09ea37da8a7dff270a92b575b71c6878b0df67c70caa2/telgine-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e7dd0823381f013947db5f492c182654a18eb94a5bc0a8b7a45c315bd7db64c7",
          "md5": "9b3c5f35e2ca4c91c1b163183b647ea5",
          "sha256": "fa6756ff6cc713710209e7ea048485428850a60e45b8f79ddd023710114d2e7f"
        },
        "downloads": -1,
        "filename": "telgine-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9b3c5f35e2ca4c91c1b163183b647ea5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 35005,
        "upload_time": "2022-09-28T16:41:47",
        "upload_time_iso_8601": "2022-09-28T16:41:47.799688Z",
        "url": "https://files.pythonhosted.org/packages/e7/dd/0823381f013947db5f492c182654a18eb94a5bc0a8b7a45c315bd7db64c7/telgine-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "76d09cd08cbe7505a6fda3a784e604adb247b53ca5b634304b8a0f4a31f5ef2f",
          "md5": "80a9d131325f4d040a71b6f183468d1c",
          "sha256": "fcf351e8333567e75d26d6280b10a589b74257864651e93c0742e839e0bf4150"
        },
        "downloads": -1,
        "filename": "telgine-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "80a9d131325f4d040a71b6f183468d1c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 26203,
        "upload_time": "2022-09-28T16:41:49",
        "upload_time_iso_8601": "2022-09-28T16:41:49.673396Z",
        "url": "https://files.pythonhosted.org/packages/76/d0/9cd08cbe7505a6fda3a784e604adb247b53ca5b634304b8a0f4a31f5ef2f/telgine-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e7dd0823381f013947db5f492c182654a18eb94a5bc0a8b7a45c315bd7db64c7",
        "md5": "9b3c5f35e2ca4c91c1b163183b647ea5",
        "sha256": "fa6756ff6cc713710209e7ea048485428850a60e45b8f79ddd023710114d2e7f"
      },
      "downloads": -1,
      "filename": "telgine-0.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9b3c5f35e2ca4c91c1b163183b647ea5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10",
      "size": 35005,
      "upload_time": "2022-09-28T16:41:47",
      "upload_time_iso_8601": "2022-09-28T16:41:47.799688Z",
      "url": "https://files.pythonhosted.org/packages/e7/dd/0823381f013947db5f492c182654a18eb94a5bc0a8b7a45c315bd7db64c7/telgine-0.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "76d09cd08cbe7505a6fda3a784e604adb247b53ca5b634304b8a0f4a31f5ef2f",
        "md5": "80a9d131325f4d040a71b6f183468d1c",
        "sha256": "fcf351e8333567e75d26d6280b10a589b74257864651e93c0742e839e0bf4150"
      },
      "downloads": -1,
      "filename": "telgine-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "80a9d131325f4d040a71b6f183468d1c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10",
      "size": 26203,
      "upload_time": "2022-09-28T16:41:49",
      "upload_time_iso_8601": "2022-09-28T16:41:49.673396Z",
      "url": "https://files.pythonhosted.org/packages/76/d0/9cd08cbe7505a6fda3a784e604adb247b53ca5b634304b8a0f4a31f5ef2f/telgine-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}