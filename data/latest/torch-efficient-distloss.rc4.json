{
  "info": {
    "author": "Cheng Sun",
    "author_email": "chengsun@gapp.nthu.edu.tw",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# torch_efficient_distloss\n\nDistortion loss is proposed by [mip-nerf-360](https://jonbarron.info/mipnerf360/), which encourages volume rendering weights to be compact and sparse and can alleviate *floater* and *background collapse* artifact.\nIn our DVGOv2 report (coming soon), we show that the distortion loss is also helpful to point-based query, which speeds up our training and gives us better quantitative results.\n\nA pytorch pseudo-code for the distortion loss:\n```python\ndef original_distloss(w, m, interval):\n    '''\n    Original O(N^2) realization of distortion loss.\n    There are B rays each with N sampled points.\n    w:        Float tensor in shape [B,N]. Volume rendering weights of each point.\n    m:        Float tensor in shape [B,N]. Midpoint distance to camera of each point.\n    interval: Scalar or float tensor in shape [B,N]. The query interval of each point.\n    '''\n    loss_uni = (1/3) * (interval * w.pow(2)).sum(-1).mean()\n    ww = w.unsqueeze(-1) * w.unsqueeze(-2)          # [B,N,N]\n    mm = (m.unsqueeze(-1) - m.unsqueeze(-2)).abs()  # [B,N,N]\n    loss_bi = (ww * mm).sum((-1,-2)).mean()\n    return loss_uni + loss_bi\n```\n\nUnfortunately, the straightforward implementation results in `O(N^2)` space time complexity for N sampled points on a ray. In this package, we provide our `O(N)` realization presnted in the DVGOv2 report.\n\nPlease cite mip-nerf-360 if you find this repo helpful. We will be happy if you also cite DVGOv2.\n```\n@inproceedings{BarronMVSH22,\n  author    = {Jonathan T. Barron and\n               Ben Mildenhall and\n               Dor Verbin and\n               Pratul P. Srinivasan and\n               Peter Hedman},\n  title     = {Mip-NeRF 360: Unbounded Anti-Aliased Neural Radiance Fields},\n  booktitle = {CVPR},\n  year      = {2022},\n}\n\n@article{SunSC22_2,\n  author    = {Cheng Sun and\n               Min Sun and\n               Hwann{-}Tzong Chen},\n  title     = {Improved Direct Voxel Grid Optimization for Radiance Fields Reconstruction},\n  journal   = {to be announced},\n  year      = {2022},\n}\n```\n\n## Installation\n```\npip install torch_efficient_distloss\n```\nAssumed `Pytorch` and `numpy` are already installed.\n\n## Documentation\nAll functions are runs in `O(N)` and are numerical equivalent to the distortion loss.\n```python\nimport torch\nfrom torch_efficient_distloss import eff_distloss, eff_distloss_native, flatten_eff_distloss\n\n# A toy example\nB = 8192  # number of rays\nN = 128   # number of points on a ray\nw = torch.rand(B, N).cuda()\nw = w / w.sum(-1, keepdim=True)\nw = w.clone().requires_grad_()\ns = torch.linspace(0, 1, N+1).cuda()\nm = (s[1:] + s[:-1]) * 0.5\nm = m[None].repeat(B,1)\ninterval = 1/N\n\nloss = eff_distloss(w, m, interval)\nloss.backward()\nprint('Loss', loss)\nprint('Gradient', w.grad)\n```\n- `eff_distloss_native`:\n    - Using built-in Pytorch operation to implement the `O(N)` distortion loss.\n    - Input:\n        - `w`: Float tensor in shape [B,N]. Volume rendering weights of each point.\n        - `m`: Float tensor in shape [B,N]. Midpoint distance to camera of each point.\n        - `interval`: Scalar or float tensor in shape [B,N]. The query interval of each point.\n- `eff_distloss`:\n    - The same as `eff_distloss_native`. Slightly faster and consume slightly more GPU memory.\n- `flatten_eff_distloss`:\n    - Support varied number of sampled points on each ray.\n    - All input tensor should be flatten.\n    - Should provide an additional flatten Long tensor `ray_id` to specify the ray index of each point. `ray_id` should be increasing (i.e., `ray_id[i-1]<=ray_id[i]`) and ranging from `0` to `N-1`.\n\n\n## Testing\n### Numerical equivalent\nRun `python test.py`. All our implementation is numerical equivalent to the `O(N^2)` `original_distloss`.\n\n### Speed and memeory benchmark\nRun `python test_time_mem.py`. We use a batch of `B=8192` rays. Below is the results on my `RTX 2080Ti` GPU.\n- Peak GPU memory (MB)\n    | \\# of pts `N` | 32 | 64 | 128 | 256 | 384 | 512 |\n    |:------------:|:--:|:--:|:---:|:---:|:---:|:---:|\n    |`original_distloss`   |102|396|1560|6192|OOM|OOM|\n    |`eff_distloss_native` |12|24|48|96|144|192|\n    |`eff_distloss`        |14|28|56|112|168|224|\n    |`flatten_eff_distloss`|13|26|52|104|156|208|\n- Run time accumulated over 100 runs (sec)\n    | \\# of pts `N` | 32 | 64 | 128 | 256 | 384 | 512 |\n    |:------------:|:--:|:--:|:---:|:---:|:---:|:---:|\n    |`original_distloss`   |0.2|0.8|2.4|17.9|OOM|OOM|\n    |`eff_distloss_native` |0.1|0.1|0.1|0.2|0.3|0.3|\n    |`eff_distloss`        |0.1|0.1|0.1|0.1|0.2|0.2|\n    |`flatten_eff_distloss`|0.1|0.1|0.1|0.2|0.2|0.3|\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sunset1995",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "torch-efficient-distloss",
    "package_url": "https://pypi.org/project/torch-efficient-distloss/",
    "platform": null,
    "project_url": "https://pypi.org/project/torch-efficient-distloss/",
    "project_urls": {
      "Homepage": "https://github.com/sunset1995"
    },
    "release_url": "https://pypi.org/project/torch-efficient-distloss/0.1.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Efficient distortion loss with O(n) realization.",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14102073,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bc8bb84fd61ee2a92db6deb084f7207f20b56044ae89bdbd882e6b65f3246a52",
          "md5": "7c5486561bca2b85ee4560ab48a7ad70",
          "sha256": "1ce4142dcf038060af01ff0ca9dc87161ff7162f3ad0579da3dc8eecfc62f6f6"
        },
        "downloads": -1,
        "filename": "torch_efficient_distloss-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7c5486561bca2b85ee4560ab48a7ad70",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4917,
        "upload_time": "2022-06-10T18:40:14",
        "upload_time_iso_8601": "2022-06-10T18:40:14.105495Z",
        "url": "https://files.pythonhosted.org/packages/bc/8b/b84fd61ee2a92db6deb084f7207f20b56044ae89bdbd882e6b65f3246a52/torch_efficient_distloss-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f6b4f62fcdd0fc936da8fd5b3d568b6135424fc62117d38a47c97c0729085d7",
          "md5": "f2967e5b1076c1893eb9f28e387ac7ca",
          "sha256": "951b3b73d2045bc7c88d4982128e6f34b4d58a71fc052c0909b867666d7d23d5"
        },
        "downloads": -1,
        "filename": "torch_efficient_distloss-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f2967e5b1076c1893eb9f28e387ac7ca",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6326,
        "upload_time": "2022-06-11T15:22:18",
        "upload_time_iso_8601": "2022-06-11T15:22:18.010454Z",
        "url": "https://files.pythonhosted.org/packages/1f/6b/4f62fcdd0fc936da8fd5b3d568b6135424fc62117d38a47c97c0729085d7/torch_efficient_distloss-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5b7f5cfc9678253c50bfd5a8a043b0549d07b624c93d5a132cce6691b5df4e30",
          "md5": "ef585c3f1e1f74dc99160e27c646c263",
          "sha256": "2654495c06266db5dd447fa4a0342dd56d4480fc7ac936a6172c0c5c69933dc0"
        },
        "downloads": -1,
        "filename": "torch_efficient_distloss-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ef585c3f1e1f74dc99160e27c646c263",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6309,
        "upload_time": "2022-06-11T15:54:41",
        "upload_time_iso_8601": "2022-06-11T15:54:41.679556Z",
        "url": "https://files.pythonhosted.org/packages/5b/7f/5cfc9678253c50bfd5a8a043b0549d07b624c93d5a132cce6691b5df4e30/torch_efficient_distloss-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d857a65f02aa109ac185089090eca35dedc4d2e53b8ed4c4e3a51fda7daee6df",
          "md5": "17589f29e210654af82c465d4a71e645",
          "sha256": "9e5a6778c033e939b69b34b9f02c4fb86add324168c1df3de7dd06d8eaf0c5fc"
        },
        "downloads": -1,
        "filename": "torch_efficient_distloss-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "17589f29e210654af82c465d4a71e645",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6350,
        "upload_time": "2022-06-11T16:00:39",
        "upload_time_iso_8601": "2022-06-11T16:00:39.695313Z",
        "url": "https://files.pythonhosted.org/packages/d8/57/a65f02aa109ac185089090eca35dedc4d2e53b8ed4c4e3a51fda7daee6df/torch_efficient_distloss-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d857a65f02aa109ac185089090eca35dedc4d2e53b8ed4c4e3a51fda7daee6df",
        "md5": "17589f29e210654af82c465d4a71e645",
        "sha256": "9e5a6778c033e939b69b34b9f02c4fb86add324168c1df3de7dd06d8eaf0c5fc"
      },
      "downloads": -1,
      "filename": "torch_efficient_distloss-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "17589f29e210654af82c465d4a71e645",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6350,
      "upload_time": "2022-06-11T16:00:39",
      "upload_time_iso_8601": "2022-06-11T16:00:39.695313Z",
      "url": "https://files.pythonhosted.org/packages/d8/57/a65f02aa109ac185089090eca35dedc4d2e53b8ed4c4e3a51fda7daee6df/torch_efficient_distloss-0.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}