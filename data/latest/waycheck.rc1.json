{
  "info": {
    "author": "AbleInc - Jaylen Douglas",
    "author_email": "douglas.jaylen@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# Waycheck (Python Type Checker)\n\nA lightweight Python type checker. Designed with the developer in mind. The Waycheck class is a decorator, which means you can use it by prepending '@' above the function you'd like to type check. No library dependencies under the hood - Pure Python ;)!\n\n## Install\n\n```bash\npython -m pip --install waycheck\n```\n\n## Getting Started\n\nYou can refer to the ```demo.py``` file in this repository or the code block below\nto see how ```Waycheck``` works.\n\n```python\nimport waycheck\n\n# Defining the type for each argument\n@Waycheck(a=int, b=int)\ndef main(a, b):\n    print('Total: ', a + b)\n\n\n# Defining the default type for ALL arguments\n@Waycheck(default_type=int)\ndef main2(a, b):\n    print('Total: ', a + b)\n\n\nif __name__ == '__main__':\n    main(5, 10)  # this will pass\n    main('5', 10)  # this will fail\n\n    main2(5, 10)  # this will pass\n    main2('5', 10)  # this will fail\n```\n\n## Accepted Types\n\nWaycheck can type check any valid Python Type provided to it, as well as a wildcard type. A wildcard type\nis used when an argument can be any value. This is handy when you're doing your own type checking within\nyour function and would like Waycheck to skip type checking that argument.\n\nYou can specify a wildcard by using '*'. See an example below:\n\n```python\n@Waycheck(a='*', b=bool)\ndef main(a, b):\n    if b:\n        return a\n```\n\nYou can also pass a tuple of Types, instead of '*' (wildcat). See an example below:\n\n```python\n@Waycheck(a=(str, int))\ndef main(a):\n    print('Argument a is: ', a, ' - type: ', type(a))\n```\n\n## Exmaples\n\nRefer to ```demo.py``` file.\n\n## FAQ\n\nQ: My type checking is failling/passing, but I know it shouldn't be. Why is this happening?\nA: This happens when you don't specify the correct order of appearance for the Waycheck class.\nThe order in which the arguments are passed to the function, should be the exact same order you\nprovide to the Waycheck class. By not doing this, unexpected type checking behavior will occur,\nsuch as passing when it should fail or failing when it should pass.\n\nNote: This will occur if the argument all have different expected type values. i.e if all arguments are supposed to be integers, then the order doesn't matter.\nExample:\n\n```python\n# this works as expected\n@Waycheck(a=int, b=int)\ndef main(a, b):\n    ...\n\n\n# this will fail if all the arguments\n# are not the same expected type\n@Waycheck(b=int, a=int)\ndef main(a, b):\n    ...\n```\n\nQ: Can I pass my own custom error class?\nA: No. The default error given is ```WaycheckTypeError```. You could use a blanket Exeception check (try/except) then throw whatever error you want.\n\nQ: I keep getting an IndexError, why?\nA: If you're going to type check the function you must provide Waycheck with the expected type for ALL the arguments, not just some of them.\n\n## Changelog\n\nApril 2022:\n\n* Initial Release - v0.0.1\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ableinc/waycheck",
    "keywords": "waycheck,typechecker,type,check,assertion,assertion check,python types,ableinc,python type check,python type checker,python decorator,decorator,decorator class,type check decorator",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "waycheck",
    "package_url": "https://pypi.org/project/waycheck/",
    "platform": null,
    "project_url": "https://pypi.org/project/waycheck/",
    "project_urls": {
      "Homepage": "https://github.com/ableinc/waycheck"
    },
    "release_url": "https://pypi.org/project/waycheck/0.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A lightweight Python type checker. Designed with the developer in mind.",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13558654,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0629503001782054b91f68f848536ee6d0cf59ac15a538184314d7194253763c",
          "md5": "cf8b28aed329d112737ef3858e7f41ac",
          "sha256": "947e6e243d8ea9e0ec226e4f33ada0ace8b12af1ff0db9bb03adf46d7484e824"
        },
        "downloads": -1,
        "filename": "waycheck-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "cf8b28aed329d112737ef3858e7f41ac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3313,
        "upload_time": "2022-04-19T16:25:20",
        "upload_time_iso_8601": "2022-04-19T16:25:20.735982Z",
        "url": "https://files.pythonhosted.org/packages/06/29/503001782054b91f68f848536ee6d0cf59ac15a538184314d7194253763c/waycheck-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0629503001782054b91f68f848536ee6d0cf59ac15a538184314d7194253763c",
        "md5": "cf8b28aed329d112737ef3858e7f41ac",
        "sha256": "947e6e243d8ea9e0ec226e4f33ada0ace8b12af1ff0db9bb03adf46d7484e824"
      },
      "downloads": -1,
      "filename": "waycheck-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "cf8b28aed329d112737ef3858e7f41ac",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3313,
      "upload_time": "2022-04-19T16:25:20",
      "upload_time_iso_8601": "2022-04-19T16:25:20.735982Z",
      "url": "https://files.pythonhosted.org/packages/06/29/503001782054b91f68f848536ee6d0cf59ac15a538184314d7194253763c/waycheck-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}