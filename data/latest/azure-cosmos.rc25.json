{
  "info": {
    "author": "Microsoft Corporation",
    "author_email": "askdocdb@microsoft.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "## _Disclaimer_\n_Azure SDK Python packages support for Python 2.7 has ended 01 January 2022. For more information and questions, please refer to https://github.com/Azure/azure-sdk-for-python/issues/20691_\n\n# Azure Cosmos DB SQL API client library for Python\n\nAzure Cosmos DB is a globally distributed, multi-model database service that supports document, key-value, wide-column, and graph databases.\n\nUse the Azure Cosmos DB SQL API SDK for Python to manage databases and the JSON documents they contain in this NoSQL database service. High level capabilities are:\n\n* Create Cosmos DB **databases** and modify their settings\n* Create and modify **containers** to store collections of JSON documents\n* Create, read, update, and delete the **items** (JSON documents) in your containers\n* Query the documents in your database using **SQL-like syntax**\n\n[SDK source code][source_code] | [Package (PyPI)][cosmos_pypi] | [API reference documentation][ref_cosmos_sdk] | [Product documentation][cosmos_docs] | [Samples][cosmos_samples]\n\n> This SDK is used for the [SQL API](https://docs.microsoft.com/azure/cosmos-db/sql-query-getting-started). For all other APIs, please check the [Azure Cosmos DB documentation](https://docs.microsoft.com/azure/cosmos-db/introduction) to evaluate the best SDK for your project.\n\n## Getting started\n\n### Important update on Python 2.x Support\n\nNew releases of this SDK won't support Python 2.x starting January 1st, 2022. Please check the [CHANGELOG](https://github.com/Azure/azure-sdk-for-python/blob/main/sdk/cosmos/azure-cosmos/CHANGELOG.md) for more information.\n\n### Prerequisites\n\n* Azure subscription - [Create a free account][azure_sub]\n* Azure [Cosmos DB account][cosmos_account] - SQL API\n* [Python 3.6+][python]\n\nIf you need a Cosmos DB SQL API account, you can create one with this [Azure CLI][azure_cli] command:\n\n```Bash\naz cosmosdb create --resource-group <resource-group-name> --name <cosmos-account-name>\n```\n\n### Install the package\n\n```bash\npip install azure-cosmos\n```\n\n#### Configure a virtual environment (optional)\n\nAlthough not required, you can keep your base system and Azure SDK environments isolated from one another if you use a virtual environment. Execute the following commands to configure and then enter a virtual environment with [venv][venv]:\n\n```Bash\npython3 -m venv azure-cosmosdb-sdk-environment\nsource azure-cosmosdb-sdk-environment/bin/activate\n```\n\n### Authenticate the client\n\nInteraction with Cosmos DB starts with an instance of the [CosmosClient][ref_cosmosclient] class. You need an **account**, its **URI**, and one of its **account keys** to instantiate the client object.\n\nUse the Azure CLI snippet below to populate two environment variables with the database account URI and its primary master key (you can also find these values in the Azure portal). The snippet is formatted for the Bash shell.\n\n```Bash\nRES_GROUP=<resource-group-name>\nACCT_NAME=<cosmos-db-account-name>\n\nexport ACCOUNT_URI=$(az cosmosdb show --resource-group $RES_GROUP --name $ACCT_NAME --query documentEndpoint --output tsv)\nexport ACCOUNT_KEY=$(az cosmosdb list-keys --resource-group $RES_GROUP --name $ACCT_NAME --query primaryMasterKey --output tsv)\n```\n\n### Create the client\n\nOnce you've populated the `ACCOUNT_URI` and `ACCOUNT_KEY` environment variables, you can create the [CosmosClient][ref_cosmosclient].\n\n```Python\nfrom azure.cosmos import CosmosClient\n\nimport os\nURL = os.environ['ACCOUNT_URI']\nKEY = os.environ['ACCOUNT_KEY']\nclient = CosmosClient(URL, credential=KEY)\n```\n\n### AAD Authentication\n\nYou can also authenticate a client utilizing your service principal's AAD credentials and the azure identity package. \nYou can directly pass in the credentials information to ClientSecretCredential, or use the DefaultAzureCredential:\n```Python\nfrom azure.cosmos import CosmosClient\nfrom azure.identity import ClientSecretCredential, DefaultAzureCredential\n\nimport os\nurl = os.environ['ACCOUNT_URI']\ntenant_id = os.environ['TENANT_ID']\nclient_id = os.environ['CLIENT_ID']\nclient_secret = os.environ['CLIENT_SECRET']\n\n# Using ClientSecretCredential\naad_credentials = ClientSecretCredential(\n    tenant_id=tenant_id,\n    client_id=client_id,\n    client_secret=client_secret)\n\n# Using DefaultAzureCredential (recommended)\naad_credentials = DefaultAzureCredential()\n\nclient = CosmosClient(url, aad_credentials)\n```\nAlways ensure that the managed identity you use for AAD authentication has `readMetadata` permissions. <br>\nMore information on how to set up AAD authentication: [Set up RBAC for AAD authentication](https://docs.microsoft.com/azure/cosmos-db/how-to-setup-rbac) <br>\nMore information on allowed operations for AAD authenticated clients: [RBAC Permission Model](https://aka.ms/cosmos-native-rbac)\n\n## Key concepts\n\nOnce you've initialized a [CosmosClient][ref_cosmosclient], you can interact with the primary resource types in Cosmos DB:\n\n* [Database][ref_database]: A Cosmos DB account can contain multiple databases. When you create a database, you specify the API you'd like to use when interacting with its documents: SQL, MongoDB, Gremlin, Cassandra, or Azure Table. Use the [DatabaseProxy][ref_database] object to manage its containers.\n\n* [Container][ref_container]: A container is a collection of JSON documents. You create (insert), read, update, and delete items in a container by using methods on the [ContainerProxy][ref_container] object.\n\n* Item: An Item is the dictionary-like representation of a JSON document stored in a container. Each Item you add to a container must include an `id` key with a value that uniquely identifies the item within the container.\n\nFor more information about these resources, see [Working with Azure Cosmos databases, containers and items][cosmos_resources].\n\n\n## How to use `enable_cross_partition_query`\n\nThe keyword-argument `enable_cross_partition_query` accepts 2 options: `None` (default) or `True`.\n\n## Note on using queries by id\n\nWhen using queries that try to find items based on an **id** value, always make sure you are passing in a string type variable. Azure Cosmos DB only allows string id values and if you use any other datatype, this SDK will return no results and no error messages.\n\n## Note on client consistency levels\n\nAs of release version 4.3.0b3, if a user does not pass in an explicit consistency level to their client initialization,\ntheir client will use their database account's default level. Previously, the default was being set to `Session` consistency.\nIf for some reason you'd like to keep doing this, you can change your client initialization to include the explicit parameter for this like shown:\n```Python\nfrom azure.cosmos import CosmosClient\n\nimport os\nURL = os.environ['ACCOUNT_URI']\nKEY = os.environ['ACCOUNT_KEY']\nclient = CosmosClient(URL, credential=KEY, consistency_level='Session')\n```\n\n## Limitations\n\nCurrently the features below are **not supported**. For alternatives options, check the **Workarounds** section below.\n\n### Data Plane Limitations:\n\n* Group By queries\n* Queries with COUNT from a DISTINCT subquery: SELECT COUNT (1) FROM (SELECT DISTINCT C.ID FROM C)\n* Bulk/Transactional batch processing\n* Direct TCP Mode access\n* Continuation token for cross partitions queries\n* Change Feed: Processor\n* Change Feed: Read multiple partitions key values\n* Change Feed: Read specific time\n* Change Feed: Read from the beginning\n* Change Feed: Pull model\n* Cross-partition ORDER BY for mixed types\n* Enabling diagnostics for async query-type methods\n\n### Control Plane Limitations:\n\n* Get CollectionSizeUsage, DatabaseUsage, and DocumentUsage metrics\n* Create Geospatial Index\n* Get the connection string\n* Get the minimum RU/s of a container\n\n## Workarounds\n\n### Bulk processing Limitation Workaround\n\nIf you want to use Python SDK to perform bulk inserts to Cosmos DB, the best alternative is to use [stored procedures](https://docs.microsoft.com/azure/cosmos-db/how-to-write-stored-procedures-triggers-udfs) to write multiple items with the same partition key.\n\n### Control Plane Limitations Workaround\n\nTypically, you can use [Azure Portal](https://portal.azure.com/), [Azure Cosmos DB Resource Provider REST API](https://docs.microsoft.com/rest/api/cosmos-db-resource-provider), [Azure CLI](https://docs.microsoft.com/cli/azure/azure-cli-reference-for-cosmos-db) or [PowerShell](https://docs.microsoft.com/azure/cosmos-db/manage-with-powershell) for the control plane unsupported limitations.\n\n## Boolean Data Type\n\nWhile the Python language [uses](https://docs.python.org/3/library/stdtypes.html?highlight=boolean#truth-value-testing) \"True\" and \"False\" for boolean types, Cosmos DB [accepts](https://docs.microsoft.com/azure/cosmos-db/sql-query-is-bool) \"true\" and \"false\" only. In other words, the Python language uses Boolean values with the first uppercase letter and all other lowercase letters, while Cosmos DB and its SQL language use only lowercase letters for those same Boolean values. How to deal with this challenge?\n\n* Your JSON documents created with Python must use \"True\" and \"False\", to pass the language validation. The SDK will convert it to \"true\" and \"false\" for you. Meaning that \"true\" and \"false\" is what will be stored in Cosmos DB.\n* If you retrieve those documents with the Cosmos DB Portal's Data Explorer, you will see \"true\" and \"false\".\n* If you retrieve those documents with this Python SDK, \"true\" and \"false\" values will be automatically converted to \"True\" and \"False\".\n\n## SQL Queries x FROM Clause Subitems\n\nThis SDK uses the [query_items](https://docs.microsoft.com/python/api/azure-cosmos/azure.cosmos.containerproxy?preserve-view=true&view=azure-python#query-items-query--parameters-none--partition-key-none--enable-cross-partition-query-none--max-item-count-none--enable-scan-in-query-none--populate-query-metrics-none----kwargs-) method to submit SQL queries to Azure Cosmos DB.\n\nCosmos DB SQL language allows you to [get subitems by using the FROM clause](https://docs.microsoft.com/azure/cosmos-db/sql-query-from#get-subitems-by-using-the-from-clause), to reduce the source to a smaller subset. As an example, you can use `select * from Families.children` instead of `select * from Families`. But please note that:\n\n* For SQL queries using the `query_items` method, this SDK demands that you specify the `partition_key` or use the `enable_cross_partition_query` flag.\n* If you are getting subitems and specifying the `partition_key`, please make sure that your partition key is included in the subitems, which is not true for most of the cases.\n\n## Max Item Count\n\nThis is a parameter of the query_items method, an integer indicating the maximum number of items to be returned per page. The `None` value can be specified to let the service determine the optimal item count. This is the recommended configuration value, and the default behavior of this SDK when it is not set.\n\n## Examples\n\nThe following sections provide several code snippets covering some of the most common Cosmos DB tasks, including:\n\n* [Create a database](#create-a-database \"Create a database\")\n* [Create a container](#create-a-container \"Create a container\")\n* [Create an analytical store enabled container](#create-an-analytical-store-enabled-container \"Create a container\")\n* [Get an existing container](#get-an-existing-container \"Get an existing container\")\n* [Insert data](#insert-data \"Insert data\")\n* [Delete data](#delete-data \"Delete data\")\n* [Query the database](#query-the-database \"Query the database\")\n* [Get database properties](#get-database-properties \"Get database properties\")\n* [Get database and container throughputs](#get-database-and-container-throughputs \"Get database and container throughputs\")\n* [Modify container properties](#modify-container-properties \"Modify container properties\")\n* [Using the asynchronous client](#using-the-asynchronous-client \"Using the asynchronous client\")\n\n### Create a database\n\nAfter authenticating your [CosmosClient][ref_cosmosclient], you can work with any resource in the account. The code snippet below creates a SQL API database, which is the default when no API is specified when [create_database][ref_cosmosclient_create_database] is invoked.\n\n```Python\nfrom azure.cosmos import CosmosClient, exceptions\nimport os\n\nURL = os.environ['ACCOUNT_URI']\nKEY = os.environ['ACCOUNT_KEY']\nclient = CosmosClient(URL, credential=KEY)\nDATABASE_NAME = 'testDatabase'\ntry:\n    database = client.create_database(DATABASE_NAME)\nexcept exceptions.CosmosResourceExistsError:\n    database = client.get_database_client(DATABASE_NAME)\n```\n\n### Create a container\n\nThis example creates a container with default settings. If a container with the same name already exists in the database (generating a `409 Conflict` error), the existing container is obtained instead.\n\n```Python\nfrom azure.cosmos import CosmosClient, PartitionKey, exceptions\nimport os\n\nURL = os.environ['ACCOUNT_URI']\nKEY = os.environ['ACCOUNT_KEY']\nclient = CosmosClient(URL, credential=KEY)\nDATABASE_NAME = 'testDatabase'\ndatabase = client.get_database_client(DATABASE_NAME)\nCONTAINER_NAME = 'products'\n\ntry:\n    container = database.create_container(id=CONTAINER_NAME, partition_key=PartitionKey(path=\"/productName\"))\nexcept exceptions.CosmosResourceExistsError:\n    container = database.get_container_client(CONTAINER_NAME)\nexcept exceptions.CosmosHttpResponseError:\n    raise\n```\n\n### Create an analytical store enabled container\n\nThis example creates a container with [Analytical Store](https://docs.microsoft.com/azure/cosmos-db/analytical-store-introduction) enabled, for reporting, BI, AI, and Advanced Analytics with [Azure Synapse Link](https://docs.microsoft.com/azure/cosmos-db/synapse-link).\n\nThe options for analytical_storage_ttl are:\n\n+ 0 or Null or not informed: Not enabled.\n+ -1: The data will be stored infinitely.\n+ Any other number: the actual ttl, in seconds.\n\n\n```Python\nCONTAINER_NAME = 'products'\ntry:\n    container = database.create_container(id=CONTAINER_NAME, partition_key=PartitionKey(path=\"/productName\"),analytical_storage_ttl=-1)\nexcept exceptions.CosmosResourceExistsError:\n    container = database.get_container_client(CONTAINER_NAME)\nexcept exceptions.CosmosHttpResponseError:\n    raise\n```\n\nThe preceding snippets also handle the [CosmosHttpResponseError][ref_httpfailure] exception if the container creation failed. For more information on error handling and troubleshooting, see the [Troubleshooting](#troubleshooting \"Troubleshooting\") section.\n\n### Get an existing container\n\nRetrieve an existing container from the database:\n\n```Python\nfrom azure.cosmos import CosmosClient\nimport os\n\nURL = os.environ['ACCOUNT_URI']\nKEY = os.environ['ACCOUNT_KEY']\nclient = CosmosClient(URL, credential=KEY)\nDATABASE_NAME = 'testDatabase'\ndatabase = client.get_database_client(DATABASE_NAME)\nCONTAINER_NAME = 'products'\ncontainer = database.get_container_client(CONTAINER_NAME)\n```\n\n### Insert data\n\nTo insert items into a container, pass a dictionary containing your data to [ContainerProxy.upsert_item][ref_container_upsert_item]. Each item you add to a container must include an `id` key with a value that uniquely identifies the item within the container.\n\nThis example inserts several items into the container, each with a unique `id`:\n\n```Python\nfrom azure.cosmos import CosmosClient\nimport os\n\nURL = os.environ['ACCOUNT_URI']\nKEY = os.environ['ACCOUNT_KEY']\nclient = CosmosClient(URL, credential=KEY)\nDATABASE_NAME = 'testDatabase'\ndatabase = client.get_database_client(DATABASE_NAME)\nCONTAINER_NAME = 'products'\ncontainer = database.get_container_client(CONTAINER_NAME)\n\nfor i in range(1, 10):\n    container.upsert_item({\n            'id': 'item{0}'.format(i),\n            'productName': 'Widget',\n            'productModel': 'Model {0}'.format(i)\n        }\n    )\n```\n\n### Delete data\n\nTo delete items from a container, use [ContainerProxy.delete_item][ref_container_delete_item]. The SQL API in Cosmos DB does not support the SQL `DELETE` statement.\n\n```Python\nfrom azure.cosmos import CosmosClient\nimport os\n\nURL = os.environ['ACCOUNT_URI']\nKEY = os.environ['ACCOUNT_KEY']\nclient = CosmosClient(URL, credential=KEY)\nDATABASE_NAME = 'testDatabase'\ndatabase = client.get_database_client(DATABASE_NAME)\nCONTAINER_NAME = 'products'\ncontainer = database.get_container_client(CONTAINER_NAME)\n\nfor item in container.query_items(\n        query='SELECT * FROM products p WHERE p.productModel = \"Model 2\"',\n        enable_cross_partition_query=True):\n    container.delete_item(item, partition_key='Widget')\n```\n\n> NOTE: If you are using partitioned collection, the value of the `partitionKey` in the example code above, should be set to the value of the partition key for this particular item, not the name of the partition key column in your collection. This holds true for both point reads and deletes.\n\n### Query the database\n\nA Cosmos DB SQL API database supports querying the items in a container with [ContainerProxy.query_items][ref_container_query_items] using SQL-like syntax.\n\nThis example queries a container for items with a specific `id`:\n\n```Python\nfrom azure.cosmos import CosmosClient\nimport os\n\nURL = os.environ['ACCOUNT_URI']\nKEY = os.environ['ACCOUNT_KEY']\nclient = CosmosClient(URL, credential=KEY)\nDATABASE_NAME = 'testDatabase'\ndatabase = client.get_database_client(DATABASE_NAME)\nCONTAINER_NAME = 'products'\ncontainer = database.get_container_client(CONTAINER_NAME)\n\n# Enumerate the returned items\nimport json\nfor item in container.query_items(\n        query='SELECT * FROM mycontainer r WHERE r.id=\"item3\"',\n        enable_cross_partition_query=True):\n    print(json.dumps(item, indent=True))\n```\n\n> NOTE: Although you can specify any value for the container name in the `FROM` clause, we recommend you use the container name for consistency.\n\nPerform parameterized queries by passing a dictionary containing the parameters and their values to [ContainerProxy.query_items][ref_container_query_items]:\n\n```Python\ndiscontinued_items = container.query_items(\n    query='SELECT * FROM products p WHERE p.productModel = @model',\n    parameters=[\n        dict(name='@model', value='Model 7')\n    ],\n    enable_cross_partition_query=True\n)\nfor item in discontinued_items:\n    print(json.dumps(item, indent=True))\n```\n\nFor more information on querying Cosmos DB databases using the SQL API, see [Query Azure Cosmos DB data with SQL queries][cosmos_sql_queries].\n\n### Get database properties\n\nGet and display the properties of a database:\n\n```Python\nfrom azure.cosmos import CosmosClient\nimport os\nimport json\n\nURL = os.environ['ACCOUNT_URI']\nKEY = os.environ['ACCOUNT_KEY']\nclient = CosmosClient(URL, credential=KEY)\nDATABASE_NAME = 'testDatabase'\ndatabase = client.get_database_client(DATABASE_NAME)\nproperties = database.read()\nprint(json.dumps(properties))\n```\n\n### Get database and container throughputs\n\nGet and display the throughput values of a database and of a container with dedicated throughput:\n\n```Python\nfrom azure.cosmos import CosmosClient\nimport os\nimport json\n\nURL = os.environ['ACCOUNT_URI']\nKEY = os.environ['ACCOUNT_KEY']\nclient = CosmosClient(URL, credential=KEY)\n\n# Database\nDATABASE_NAME = 'testDatabase'\ndatabase = client.get_database_client(DATABASE_NAME)\ndb_offer = database.read_offer()\nprint('Found Offer \\'{0}\\' for Database \\'{1}\\' and its throughput is \\'{2}\\''.format(db_offer.properties['id'], database.id, db_offer.properties['content']['offerThroughput']))\n\n# Container with dedicated throughput only. Will return error \"offer not found\" for containers without dedicated throughput\nCONTAINER_NAME = 'testContainer'\ncontainer = database.get_container_client(CONTAINER_NAME)\ncontainer_offer = container.read_offer()\nprint('Found Offer \\'{0}\\' for Container \\'{1}\\' and its throughput is \\'{2}\\''.format(container_offer.properties['id'], container.id, container_offer.properties['content']['offerThroughput']))\n```\n\n\n### Modify container properties\n\nCertain properties of an existing container can be modified. This example sets the default time to live (TTL) for items in the container to 10 seconds:\n\n```Python\nfrom azure.cosmos import CosmosClient, PartitionKey\nimport os\nimport json\n\nURL = os.environ['ACCOUNT_URI']\nKEY = os.environ['ACCOUNT_KEY']\nclient = CosmosClient(URL, credential=KEY)\nDATABASE_NAME = 'testDatabase'\ndatabase = client.get_database_client(DATABASE_NAME)\nCONTAINER_NAME = 'products'\ncontainer = database.get_container_client(CONTAINER_NAME)\n\ndatabase.replace_container(\n    container,\n    partition_key=PartitionKey(path=\"/productName\"),\n    default_ttl=10,\n)\n# Display the new TTL setting for the container\ncontainer_props = container.read()\nprint(json.dumps(container_props['defaultTtl']))\n```\n\nFor more information on TTL, see [Time to Live for Azure Cosmos DB data][cosmos_ttl].\n\n### Using the asynchronous client\n\nThe asynchronous cosmos client is a separate client that looks and works in a similar fashion to the existing synchronous client. However, the async client needs to be imported separately and its methods need to be used with the async/await keywords.\nThe Async client needs to be initialized and closed after usage, which can be done manually or with the use of a context manager. The example below shows how to do so manually.\n\n```Python\nfrom azure.cosmos.aio import CosmosClient\nimport os\n\nURL = os.environ['ACCOUNT_URI']\nKEY = os.environ['ACCOUNT_KEY']\nDATABASE_NAME = 'testDatabase'\nCONTAINER_NAME = 'products'    \n\nasync def create_products():\n    client = CosmosClient(URL, credential=KEY)\n    database = client.get_database_client(DATABASE_NAME)\n    container = database.get_container_client(CONTAINER_NAME)\n    for i in range(10):\n        await container.upsert_item({\n                'id': 'item{0}'.format(i),\n                'productName': 'Widget',\n                'productModel': 'Model {0}'.format(i)\n            }\n        )\n    await client.close() # the async client must be closed manually if it's not initialized in a with statement\n```\n\nInstead of manually opening and closing the client, it is highly recommended to use the `async with` keywords. This creates a context manager that will initialize and later close the client once you're out of the statement. The example below shows how to do so.\n\n```Python\nfrom azure.cosmos.aio import CosmosClient\nimport os\n\nURL = os.environ['ACCOUNT_URI']\nKEY = os.environ['ACCOUNT_KEY']\nDATABASE_NAME = 'testDatabase'\nCONTAINER_NAME = 'products'\n\nasync def create_products():\n    async with CosmosClient(URL, credential=KEY) as client: # the with statement will automatically initialize and close the async client\n        database = client.get_database_client(DATABASE_NAME)\n        container = database.get_container_client(CONTAINER_NAME)\n        for i in range(10):\n            await container.upsert_item({\n                    'id': 'item{0}'.format(i),\n                    'productName': 'Widget',\n                    'productModel': 'Model {0}'.format(i)\n                }\n            )\n```\n\n### Queries with the asynchronous client\n\nUnlike the synchronous client, the async client does not have an `enable_cross_partition` flag in the request. Queries without a specified partition key value will attempt to do a cross partition query by default. \n\nQuery results can be iterated, but the query's raw output returns an asynchronous iterator. This means that each object from the iterator is an awaitable object, and does not yet contain the true query result. In order to obtain the query results you can use an async for loop, which awaits each result as you iterate on the object, or manually await each query result as you iterate over the asynchronous iterator.\n\nSince the query results are an asynchronous iterator, they can't be cast into lists directly; instead, if you need to create lists from your results, use an async for loop or Python's list comprehension to populate a list:\n\n```Python\nfrom azure.cosmos.aio import CosmosClient\nimport os\n\nURL = os.environ['ACCOUNT_URI']\nKEY = os.environ['ACCOUNT_KEY']\nclient = CosmosClient(URL, credential=KEY)\nDATABASE_NAME = 'testDatabase'\ndatabase = client.get_database_client(DATABASE_NAME)\nCONTAINER_NAME = 'products'\ncontainer = database.get_container_client(CONTAINER_NAME)\n\nasync def create_lists():\n    results = container.query_items(\n            query='SELECT * FROM products p WHERE p.productModel = \"Model 2\"')\n\n    # iterates on \"results\" iterator to asynchronously create a complete list of the actual query results\n\n    item_list = []\n    async for item in results:\n        item_list.append(item)\n\n    # Asynchronously creates a complete list of the actual query results. This code performs the same action as the for-loop example above.\n    item_list = [item async for item in results]\n    await client.close()\n```\n\n### Using Integrated Cache\nAn integrated cache is an in-memory cache that helps you ensure manageable costs and low latency as your request volume grows. The integrated cache has two parts: an item cache for point reads and a query cache for queries. The code snippet below shows you how to use this feature with the point read and query cache methods.\n\nThe benefit of using this is that the point reads and queries that hit the integrated cache won't use any RUs. This means you will have a much lower per-operation cost than reads from the backend.\n\n[How to configure the Azure Cosmos DB integrated cache (Preview)][cosmos_configure_integrated_cache]\n\n```Python\nimport azure.cosmos.cosmos_client as cosmos_client\nimport os\n\nURL = os.environ['ACCOUNT_URI']\nKEY = os.environ['ACCOUNT_KEY']\nclient = cosmos_client.CosmosClient(URL, credential=KEY)\nDATABASE_NAME = 'testDatabase'\ndatabase = client.get_database_client(DATABASE_NAME)\nCONTAINER_NAME = 'testContainer'\ncontainer = database.get_container_client(CONTAINER_NAME)\n\ndef integrated_cache_snippet():\n    item_id = body['id'] \n    query = 'SELECT * FROM c'\n\n    #item cache\n    container.read_item(item=item_id, partition_key=item_id, max_integrated_cache_staleness_in_ms=30000)\n\n    #query cache   \n    container.query_items(query=query,\n         partition_key=item_id, max_integrated_cache_staleness_in_ms=30000)\n```\nFor more information on Integrated Cache, see [Azure Cosmos DB integrated cache - Overview][cosmos_integrated_cache].\n\n## Troubleshooting\n\n### General\n\nWhen you interact with Cosmos DB using the Python SDK, exceptions returned by the service correspond to the same HTTP status codes returned for REST API requests:\n\n[HTTP Status Codes for Azure Cosmos DB][cosmos_http_status_codes]\n\nFor example, if you try to create a container using an ID (name) that's already in use in your Cosmos DB database, a `409` error is returned, indicating the conflict. In the following snippet, the error is handled gracefully by catching the exception and displaying additional information about the error.\n\n```Python\ntry:\n    database.create_container(id=CONTAINER_NAME, partition_key=PartitionKey(path=\"/productName\"))\nexcept exceptions.CosmosResourceExistsError:\n    print(\"\"\"Error creating container\nHTTP status code 409: The ID (name) provided for the container is already in use.\nThe container name must be unique within the database.\"\"\")\n\n```\n### Logging\n\nThis library uses the standard\n[logging](https://docs.python.org/3.5/library/logging.html) library for logging.\nBasic information about HTTP sessions (URLs, headers, etc.) is logged at INFO\nlevel.\n\nDetailed DEBUG level logging, including request/response bodies and unredacted\nheaders, can be enabled on a client with the `logging_enable` argument:\n```python\nimport sys\nimport logging\nfrom azure.cosmos import CosmosClient\n\n# Create a logger for the 'azure' SDK\nlogger = logging.getLogger('azure')\nlogger.setLevel(logging.DEBUG)\n\n# Configure a console output\nhandler = logging.StreamHandler(stream=sys.stdout)\nlogger.addHandler(handler)\n\n# This client will log detailed information about its HTTP sessions, at DEBUG level\nclient = CosmosClient(URL, credential=KEY, logging_enable=True)\n```\n\nSimilarly, `logging_enable` can enable detailed logging for a single operation,\neven when it isn't enabled for the client:\n```py\ndatabase = client.create_database(DATABASE_NAME, logging_enable=True)\n```\nAlternatively, you can log using the CosmosHttpLoggingPolicy, which extends from the azure core HttpLoggingPolicy, by passing in your logger to the `logger` argument.\nBy default, it will use the behaviour from HttpLoggingPolicy. Passing in the `enable_diagnostics_logging` argument will enable the\nCosmosHttpLoggingPolicy, and will have additional information in the response relevant to debugging Cosmos issues.\n```python\nimport logging\nfrom azure.cosmos import CosmosClient\n\n#Create a logger for the 'azure' SDK\nlogger = logging.getLogger('azure')\nlogger.setLevel(logging.DEBUG)\n\n# Configure a file output\nhandler = logging.FileHandler(filename=\"azure\")\nlogger.addHandler(handler)\n\n# This client will log diagnostic information from the HTTP session by using the CosmosHttpLoggingPolicy.\n# Since we passed in the logger to the client, it will log information on every request.\nclient = CosmosClient(URL, credential=KEY, logger=logger, enable_diagnostics_logging=True)\n```\nSimilarly, logging can be enabled for a single operation by passing in a logger to the singular request.\nHowever, if you desire to use the CosmosHttpLoggingPolicy to obtain additional information, the `enable_diagnostics_logging` argument needs to be passed in at the client constructor.\n```py\n# This example enables the CosmosHttpLoggingPolicy and uses it with the `logger` passed in to the `create_database` request.\nclient = CosmosClient(URL, credential=KEY, enable_diagnostics_logging=True)\ndatabase = client.create_database(DATABASE_NAME, logger=logger)\n```\n\n## Next steps\n\nFor more extensive documentation on the Cosmos DB service, see the [Azure Cosmos DB documentation][cosmos_docs] on docs.microsoft.com.\n\n<!-- LINKS -->\n[azure_cli]: https://docs.microsoft.com/cli/azure\n[azure_portal]: https://portal.azure.com\n[azure_sub]: https://azure.microsoft.com/free/\n[cloud_shell]: https://docs.microsoft.com/azure/cloud-shell/overview\n[cosmos_account_create]: https://docs.microsoft.com/azure/cosmos-db/how-to-manage-database-account\n[cosmos_account]: https://docs.microsoft.com/azure/cosmos-db/account-overview\n[cosmos_container]: https://docs.microsoft.com/azure/cosmos-db/databases-containers-items#azure-cosmos-containers\n[cosmos_database]: https://docs.microsoft.com/azure/cosmos-db/databases-containers-items#azure-cosmos-databases\n[cosmos_docs]: https://docs.microsoft.com/azure/cosmos-db/\n[cosmos_samples]: https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/cosmos/azure-cosmos/samples\n[cosmos_pypi]: https://pypi.org/project/azure-cosmos/\n[cosmos_http_status_codes]: https://docs.microsoft.com/rest/api/cosmos-db/http-status-codes-for-cosmosdb\n[cosmos_item]: https://docs.microsoft.com/azure/cosmos-db/databases-containers-items#azure-cosmos-items\n[cosmos_request_units]: https://docs.microsoft.com/azure/cosmos-db/request-units\n[cosmos_resources]: https://docs.microsoft.com/azure/cosmos-db/databases-containers-items\n[cosmos_sql_queries]: https://docs.microsoft.com/azure/cosmos-db/how-to-sql-query\n[cosmos_ttl]: https://docs.microsoft.com/azure/cosmos-db/time-to-live\n[cosmos_integrated_cache]: https://docs.microsoft.com/azure/cosmos-db/integrated-cache\n[cosmos_configure_integrated_cache]: https://docs.microsoft.com/azure/cosmos-db/how-to-configure-integrated-cache\n[python]: https://www.python.org/downloads/\n[ref_container_delete_item]: https://aka.ms/azsdk-python-cosmos-ref-delete-item\n[ref_container_query_items]: https://aka.ms/azsdk-python-cosmos-ref-query-items\n[ref_container_upsert_item]: https://aka.ms/azsdk-python-cosmos-ref-upsert-item\n[ref_container]: https://aka.ms/azsdk-python-cosmos-ref-container\n[ref_cosmos_sdk]: https://aka.ms/azsdk-python-cosmos-ref\n[ref_cosmosclient_create_database]: https://aka.ms/azsdk-python-cosmos-ref-create-database\n[ref_cosmosclient]: https://aka.ms/azsdk-python-cosmos-ref-cosmos-client\n[ref_database]: https://aka.ms/azsdk-python-cosmos-ref-database\n[ref_httpfailure]: https://aka.ms/azsdk-python-cosmos-ref-http-failure\n[sample_database_mgmt]: https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/cosmos/azure-cosmos/samples/database_management.py\n[sample_document_mgmt]: https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/cosmos/azure-cosmos/samples/document_management.py\n[sample_examples_misc]: https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/cosmos/azure-cosmos/samples/examples.py\n[source_code]: https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/cosmos/azure-cosmos\n[venv]: https://docs.python.org/3/library/venv.html\n[virtualenv]: https://virtualenv.pypa.io\n\n## Contributing\n\nThis project welcomes contributions and suggestions.  Most contributions require you to agree to a\nContributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us\nthe rights to use your contribution. For details, visit https://cla.microsoft.com.\n\nWhen you submit a pull request, a CLA-bot will automatically determine whether you need to provide\na CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions\nprovided by the bot. You will only need to do this once across all repos using our CLA.\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/).\nFor more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/) or\ncontact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.\n\n\n## Release History\n\n### 4.3.1 (2023-02-23)\n\n#### Features Added\n - Added `correlated_activity_id` for query operations\n - Added cross regional retries for Service Unavailable/Request Timeouts for read/Query Plan operations\n - GA release of CosmosHttpLoggingPolicy and autoscale feature\n\n#### Bugs Fixed\n- Bug fix to address queries with VALUE MAX (or any other aggregate) that run into an issue if the query is executed on a container with at least one \"empty\" partition.\n\n### 4.3.1b1 (2022-09-19)\n\n#### Features Added\n- GA release of integrated cache functionality. For more information on integrated cache please see [Azure Cosmos DB integrated cache](https://docs.microsoft.com/azure/cosmos-db/integrated-cache).\n- Added ability to replace analytical ttl on containers. For more information on analytical ttl please see [Azure Cosmos DB analytical store](https://docs.microsoft.com/azure/cosmos-db/analytical-store-introduction).\n- Added `CosmosHttpLoggingPolicy` to replace `HttpLoggingPolicy` for logging HTTP sessions.\n- Added the ability to create containers and databases with autoscale properties for the sync and async clients.\n- Added the ability to update autoscale throughput properties.\n\n#### Bugs Fixed\n- Fixed parsing of args for overloaded `container.read()` method.\n- Fixed `validate_cache_staleness_value()` method to allow max_integrated_cache_staleness to be an integer greater than or equal to 0.\n- Fixed `__aiter__()` method by removing the async keyword.\n\n### 4.3.0 (2022-05-23)\n#### Features Added\n- GA release of Async I/O APIs, including all changes from 4.3.0b1 to 4.3.0b4.\n\n#### Breaking Changes\n- Method signatures have been updated to use keyword arguments instead of positional arguments for most method options in the async client.\n- Bugfix: Automatic Id generation for items was turned on for `upsert_items()` method when no 'id' value was present in document body.\nMethod call will now require an 'id' field to be present in the document body.\n\n#### Other Changes\n- Deprecated offer-named methods in favor of their new throughput-named counterparts (`read_offer` -> `get_throughput`).\n- Marked the GetAuthorizationHeader method for deprecation since it will no longer be public in a future release.\n- Added samples showing how to configure retry options for both the sync and async clients.\n- Deprecated the `connection_retry_policy` and `retry_options` options in the sync client.\n- Added user warning to non-query methods trying to use `populate_query_metrics` options.\n\n### 4.3.0b4 (2022-04-07)\n\n#### Features Added\n- Added support for AAD authentication for the async client.\n- Added support for AAD authentication for the sync client.\n\n#### Other Changes\n- Changed `_set_partition_key` return typehint in async client.\n\n### 4.3.0b3 (2022-03-10)\n\n>[WARNING]\n>The default `Session` consistency bugfix will impact customers whose database accounts have a `Bounded Staleness` or `Strong`\n> consistency level, and were previously not sending `Session` as a consistency_level parameter when initializing\n> their clients.\n> Default consistency level for the sync and async clients is no longer \"Session\" and will instead be set to the \n  consistency level of the user's cosmos account setting on initialization if not passed during client initialization. \n> Please see [Consistency Levels in Azure Cosmos DB](https://docs.microsoft.com/azure/cosmos-db/consistency-levels) \n> for more details on consistency levels, or the README section on this change [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/cosmos/azure-cosmos#note-on-client-consistency-levels).\n\n#### Features Added\n- Added new **provisional** `max_integrated_cache_staleness_in_ms` parameter to read item and query items APIs in order\n  to make use of the **preview** CosmosDB integrated cache functionality [See PR #22946](https://github.com/Azure/azure-sdk-for-python/pull/22946).\n  Please see [Azure Cosmos DB integrated cache](https://docs.microsoft.com/azure/cosmos-db/integrated-cache) for more details.\n- Added support for split-proof queries for the async client.\n\n### Bugs fixed\n- Default consistency level for the sync and async clients is no longer `Session` and will instead be set to the \n  consistency level of the user's cosmos account setting on initialization if not passed during client initialization. \n  This change will impact client application in terms of RUs and latency. Users relying on default `Session` consistency\n  will need to pass it explicitly if their account consistency is different than `Session`.\n  Please see [Consistency Levels in Azure Cosmos DB](https://docs.microsoft.com/azure/cosmos-db/consistency-levels) for more details.  \n- Fixed invalid request body being sent when passing in `serverScript` body parameter to replace operations for trigger, sproc and udf resources.\n- Moved `is_system_key` logic in async client.\n- Fixed TypeErrors not being thrown when passing in invalid connection retry policies to the client.\n\n### 4.3.0b2 (2022-01-25)\n\nThis version and all future versions will require Python 3.6+. Python 2.7 is no longer supported.\nWe will also be removing support for Python 3.6 and will only support Python 3.7+ starting December 2022.\n\n#### Features Added\n- Added support for split-proof queries for the sync client.\n\n#### Other Changes\n- Added async user agent for async client.\n\n### 4.3.0b1 (2021-12-14)\n\n#### Features Added\n- Added language native async i/o client.\n\n### 4.2.0 (2020-10-08)\n\n**Bug fixes**\n- Fixed bug where continuation token is not honored when query_iterable is used to get results by page. Issue #13265.\n- Fixed bug where resource tokens not being honored for document reads and deletes. Issue #13634.\n\n**New features**\n- Added support for passing partitionKey while querying changefeed. Issue #11689.\n\n### 4.1.0 (2020-08-10)\n\n- Added deprecation warning for \"lazy\" indexing mode. The backend no longer allows creating containers with this mode and will set them to consistent instead.\n\n**New features**\n- Added the ability to set the analytical storage TTL when creating a new container.\n\n**Bug fixes**\n- Fixed support for dicts as inputs for get_client APIs.\n- Fixed Python 2/3 compatibility in query iterators.\n- Fixed type hint error. Issue #12570 - thanks @sl-sandy.\n- Fixed bug where options headers were not added to upsert_item function. Issue #11791 - thank you @aalapatirvbd.\n- Fixed error raised when a non string ID is used in an item. It now raises TypeError rather than AttributeError. Issue #11793 - thank you @Rabbit994.\n\n\n### 4.0.0 (2020-05-20)\n\n- Stable release.\n- Added HttpLoggingPolicy to pipeline to enable passing in a custom logger for request and response headers.\n\n\n## 4.0.0b6\n\n- Fixed bug in synchronized_request for media APIs.\n- Removed MediaReadMode and MediaRequestTimeout from ConnectionPolicy as media requests are not supported.\n\n\n## 4.0.0b5\n\n- azure.cosmos.errors module deprecated and replaced by azure.cosmos.exceptions\n- The access condition parameters (`access_condition`, `if_match`, `if_none_match`) have been deprecated in favor of separate `match_condition` and `etag` parameters.\n- Fixed bug in routing map provider.\n- Added query Distinct, Offset and Limit support.\n- Default document query execution context now used for\n    - ChangeFeed queries\n    - single partition queries (partitionkey, partitionKeyRangeId is present in options)\n    - Non document queries\n- Errors out for aggregates on multiple partitions, with enable cross partition query set to true, but no \"value\" keyword present\n- Hits query plan endpoint for other scenarios to fetch query plan\n- Added `__repr__` support for Cosmos entity objects.\n- Updated documentation.\n\n\n## 4.0.0b4\n\n- Added support for a `timeout` keyword argument to all operations to specify an absolute timeout in seconds\n  within which the operation must be completed. If the timeout value is exceeded, a `azure.cosmos.errors.CosmosClientTimeoutError` will be raised.\n- Added a new `ConnectionRetryPolicy` to manage retry behaviour during HTTP connection errors.\n- Added new constructor and per-operation configuration keyword arguments:\n    - `retry_total` - Maximum retry attempts.\n    - `retry_backoff_max` - Maximum retry wait time in seconds.\n    - `retry_fixed_interval` - Fixed retry interval in milliseconds.\n    - `retry_read` - Maximum number of socket read retry attempts.\n    - `retry_connect` - Maximum number of connection error retry attempts.\n    - `retry_status` - Maximum number of retry attempts on error status codes.\n    - `retry_on_status_codes` - A list of specific status codes to retry on.\n    - `retry_backoff_factor` - Factor to calculate wait time between retry attempts.\n\n## 4.0.0b3\n\n- Added `create_database_if_not_exists()` and `create_container_if_not_exists` functionalities to CosmosClient and Database respectively.\n\n## 4.0.0b2\n\nVersion 4.0.0b2 is the second iteration in our efforts to build a more Pythonic client library.\n\n**Breaking changes**\n\n- The client connection has been adapted to consume the HTTP pipeline defined in `azure.core.pipeline`.\n- Interactive objects have now been renamed as proxies. This includes:\n    - `Database` -> `DatabaseProxy`\n    - `User` -> `UserProxy`\n    - `Container` -> `ContainerProxy`\n    - `Scripts` -> `ScriptsProxy`\n- The constructor of `CosmosClient` has been updated:\n    - The `auth` parameter has been renamed to `credential` and will now take an authentication type directly. This means the master key value, a dictionary of resource tokens, or a list of permissions can be passed in. However the old dictionary format is still supported.\n    - The `connection_policy` parameter has been made a keyword only parameter, and while it is still supported, each of the individual attributes of the policy can now be passed in as explicit keyword arguments:\n        - `request_timeout`\n        - `media_request_timeout`\n        - `connection_mode`\n        - `media_read_mode`\n        - `proxy_config`\n        - `enable_endpoint_discovery`\n        - `preferred_locations`\n        - `multiple_write_locations`\n- A new classmethod constructor has been added to `CosmosClient` to enable creation via a connection string retrieved from the Azure portal.\n- Some `read_all` operations have been renamed to `list` operations:\n    - `CosmosClient.read_all_databases` -> `CosmosClient.list_databases`\n    - `Container.read_all_conflicts` -> `ContainerProxy.list_conflicts`\n    - `Database.read_all_containers` -> `DatabaseProxy.list_containers`\n    - `Database.read_all_users` -> `DatabaseProxy.list_users`\n    - `User.read_all_permissions` -> `UserProxy.list_permissions`\n- All operations that take `request_options` or `feed_options` parameters, these have been moved to keyword only parameters. In addition, while these options dictionaries are still supported, each of the individual options within the dictionary are now supported as explicit keyword arguments.\n- The error hierarchy is now inherited from `azure.core.AzureError` instead of `CosmosError` which has been removed.\n    - `HTTPFailure` has been renamed to `CosmosHttpResponseError`\n    - `JSONParseFailure` has been removed and replaced by `azure.core.DecodeError`\n    - Added additional errors for specific response codes:\n        - `CosmosResourceNotFoundError` for status 404\n        - `CosmosResourceExistsError` for status 409\n        - `CosmosAccessConditionFailedError` for status 412\n- `CosmosClient` can now be run in a context manager to handle closing the client connection.\n- Iterable responses (e.g. query responses and list responses) are now of type `azure.core.paging.ItemPaged`. The method `fetch_next_block` has been replaced by a secondary iterator, accessed by the `by_page` method.\n\n## 4.0.0b1\n\nVersion 4.0.0b1 is the first preview of our efforts to create a user-friendly and Pythonic client library for Azure Cosmos. For more information about this, and preview releases of other Azure SDK libraries, please visit https://aka.ms/azure-sdk-preview1-python.\n\n**Breaking changes: New API design**\n\n- Operations are now scoped to a particular client:\n    - `CosmosClient`: This client handles account-level operations. This includes managing service properties and listing the databases within an account.\n    - `Database`: This client handles database-level operations. This includes creating and deleting containers, users and stored procedures. It can be accessed from a `CosmosClient` instance by name.\n    - `Container`: This client handles operations for a particular container. This includes querying and inserting items and managing properties.\n    - `User`: This client handles operations for a particular user. This includes adding and deleting permissions and managing user properties.\n    \n    These clients can be accessed by navigating down the client hierarchy using the `get_<child>_client` method. For full details on the new API, please see the [reference documentation](https://aka.ms/azsdk-python-cosmos-ref).\n- Clients are accessed by name rather than by Id. No need to concatenate strings to create links.\n- No more need to import types and methods from individual modules. The public API surface area is available directly in the `azure.cosmos` package.\n- Individual request properties can be provided as keyword arguments rather than constructing a separate `RequestOptions` instance.\n\n## 3.0.2\n\n- Added Support for MultiPolygon Datatype\n- Bug Fix in Session Read Retry Policy\n- Bug Fix for Incorrect padding issues while decoding base 64 strings\n\n## 3.0.1\n\n- Bug fix in LocationCache\n- Bug fix endpoint retry logic\n- Fixed documentation\n\n## 3.0.0\n\n- Multi-region write support added\n- Naming changes\n  - DocumentClient to CosmosClient\n  - Collection to Container\n  - Document to Item\n  - Package name updated to \"azure-cosmos\"\n  - Namespace updated to \"azure.cosmos\"\n\n## 2.3.3\n\n- Added support for proxy\n- Added support for reading change feed\n- Added support for collection quota headers\n- Bugfix for large session tokens issue\n- Bugfix for ReadMedia API\n- Bugfix in partition key range cache\n\n## 2.3.2\n\n- Added support for default retries on connection issues.\n\n## 2.3.1\n\n- Updated documentation to reference Azure Cosmos DB instead of Azure DocumentDB.\n\n## 2.3.0\n\n- This SDK version requires the latest version of Azure Cosmos DB Emulator available for download from https://aka.ms/cosmosdb-emulator.\n\n## 2.2.1\n\n- bugfix for aggregate dict\n- bugfix for trimming slashes in the resource link\n- tests for unicode encoding\n\n## 2.2.0\n\n- Added support for Request Unit per Minute (RU/m) feature.\n- Added support for a new consistency level called ConsistentPrefix.\n\n## 2.1.0\n\n- Added support for aggregation queries (COUNT, MIN, MAX, SUM, and AVG).\n- Added an option for disabling SSL verification when running against DocumentDB Emulator.\n- Removed the restriction of dependent requests module to be exactly 2.10.0.\n- Lowered minimum throughput on partitioned collections from 10,100 RU/s to 2500 RU/s.\n- Added support for enabling script logging during stored procedure execution.\n- REST API version bumped to '2017-01-19' with this release.\n\n## 2.0.1\n\n- Made editorial changes to documentation comments.\n\n## 2.0.0\n\n- Added support for Python 3.5.\n- Added support for connection pooling using the requests module.\n- Added support for session consistency.\n- Added support for TOP/ORDERBY queries for partitioned collections.\n\n## 1.9.0\n\n- Added retry policy support for throttled requests. (Throttled requests receive a request rate too large exception, error code 429.)\n  By default, DocumentDB retries nine times for each request when error code 429 is encountered, honoring the retryAfter time in the response header.\n  A fixed retry interval time can now be set as part of the RetryOptions property on the ConnectionPolicy object if you want to ignore the retryAfter time returned by server between the retries.\n  DocumentDB now waits for a maximum of 30 seconds for each request that is being throttled (irrespective of retry count) and returns the response with error code 429.\n  This time can also be overridden in the RetryOptions property on ConnectionPolicy object.\n\n- DocumentDB now returns x-ms-throttle-retry-count and x-ms-throttle-retry-wait-time-ms as the response headers in every request to denote the throttle retry count\n  and the cumulative time the request waited between the retries.\n\n- Removed the RetryPolicy class and the corresponding property (retry_policy) exposed on the document_client class and instead introduced a RetryOptions class\n  exposing the RetryOptions property on ConnectionPolicy class that can be used to override some of the default retry options.\n\n## 1.8.0\n\n- Added the support for geo-replicated database accounts.\n- Test fixes to move the global host and masterKey into the individual test classes.\n\n## 1.7.0\n\n- Added the support for Time To Live(TTL) feature for documents.\n\n## 1.6.1\n\n- Bug fixes related to server side partitioning to allow special characters in partitionkey path.\n\n## 1.6.0\n\n- Added the support for server side partitioned collections feature.\n\n## 1.5.0\n\n- Added Client-side sharding framework to the SDK. Implemented HashPartionResolver and RangePartitionResolver classes.\n\n## 1.4.2\n\n- Implement Upsert. New UpsertXXX methods added to support Upsert feature.\n- Implement ID Based Routing. No public API changes, all changes internal.\n\n## 1.3.0\n\n- Release skipped to bring version number in alignment with other SDKs\n\n## 1.2.0\n\n- Supports GeoSpatial index.\n- Validates id property for all resources. Ids for resources cannot contain ?, /, #, \\\\, characters or end with a space.\n- Adds new header \"index transformation progress\" to ResourceResponse.\n\n## 1.1.0\n\n- Implements V2 indexing policy\n\n## 1.0.1\n\n- Supports proxy connection\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Azure/azure-sdk-for-python",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "Microsoft",
    "maintainer_email": "askdocdb@microsoft.com",
    "name": "azure-cosmos",
    "package_url": "https://pypi.org/project/azure-cosmos/",
    "platform": null,
    "project_url": "https://pypi.org/project/azure-cosmos/",
    "project_urls": {
      "Homepage": "https://github.com/Azure/azure-sdk-for-python"
    },
    "release_url": "https://pypi.org/project/azure-cosmos/4.3.1/",
    "requires_dist": [
      "azure-core (<2.0.0,>=1.23.0)"
    ],
    "requires_python": ">=3.6",
    "summary": "Microsoft Azure Cosmos Client Library for Python",
    "version": "4.3.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17003288,
  "releases": {
    "3.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "407afce4884461105636f9ac361ef3f9fd83df9c362d9595a9b6791a537117ef",
          "md5": "4f455ef86d6385a584290c758b34ba20",
          "sha256": "829d14430b03ebee0f679b06954d1875a00df0ab6335a7d403d8d9eca7ea8b6a"
        },
        "downloads": -1,
        "filename": "azure_cosmos-3.0.0-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "4f455ef86d6385a584290c758b34ba20",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 102630,
        "upload_time": "2018-09-21T23:31:30",
        "upload_time_iso_8601": "2018-09-21T23:31:30.155691Z",
        "url": "https://files.pythonhosted.org/packages/40/7a/fce4884461105636f9ac361ef3f9fd83df9c362d9595a9b6791a537117ef/azure_cosmos-3.0.0-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fd7db4303ec0656cd391b1b7327aadf46283db4121171d02883efd0cc02462e9",
          "md5": "5b721d485732c27fbfa5e821faedf51f",
          "sha256": "3609e28a29737522e9312dc27b88df5414c5b2ec514029f79ad255e51b477bf0"
        },
        "downloads": -1,
        "filename": "azure-cosmos-3.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5b721d485732c27fbfa5e821faedf51f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 117594,
        "upload_time": "2018-09-21T23:31:57",
        "upload_time_iso_8601": "2018-09-21T23:31:57.139900Z",
        "url": "https://files.pythonhosted.org/packages/fd/7d/b4303ec0656cd391b1b7327aadf46283db4121171d02883efd0cc02462e9/azure-cosmos-3.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9ee1581887b8471b2d81dab42b480b5bf0c88a01cede579aadeab7bd345ac5df",
          "md5": "035811a5573f9903c0f0a5e9f94e9545",
          "sha256": "6882ffaf3fb5781006455a7baa8e04cd982deeb49241b0962c5f8338670d0f41"
        },
        "downloads": -1,
        "filename": "azure_cosmos-3.0.1-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "035811a5573f9903c0f0a5e9f94e9545",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 103596,
        "upload_time": "2018-10-04T09:51:01",
        "upload_time_iso_8601": "2018-10-04T09:51:01.451194Z",
        "url": "https://files.pythonhosted.org/packages/9e/e1/581887b8471b2d81dab42b480b5bf0c88a01cede579aadeab7bd345ac5df/azure_cosmos-3.0.1-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a9ece3d7156474f4451292be2f25a950c8e3d655863f575cd7ddeed1c7c9259",
          "md5": "c855863382fd2685dbea107eab8af1e1",
          "sha256": "2672ffa2b0a0cd11a7426508f32b4b7de8161d9eb5113e95601bfc19516eb43f"
        },
        "downloads": -1,
        "filename": "azure-cosmos-3.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c855863382fd2685dbea107eab8af1e1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 118512,
        "upload_time": "2018-10-04T09:51:20",
        "upload_time_iso_8601": "2018-10-04T09:51:20.265306Z",
        "url": "https://files.pythonhosted.org/packages/8a/9e/ce3d7156474f4451292be2f25a950c8e3d655863f575cd7ddeed1c7c9259/azure-cosmos-3.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6ac2f358d3bbc70403a95157285eb55cdd0e635c7b8c155428171094abe7332",
          "md5": "736dc73f49cdafce974477192c9dbc94",
          "sha256": "eb5721012e9bbdec1ade722f33903e288f580765e180c4511c47cde26bf61320"
        },
        "downloads": -1,
        "filename": "azure_cosmos-3.0.2-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "736dc73f49cdafce974477192c9dbc94",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 102838,
        "upload_time": "2018-11-15T19:24:16",
        "upload_time_iso_8601": "2018-11-15T19:24:16.582728Z",
        "url": "https://files.pythonhosted.org/packages/a6/ac/2f358d3bbc70403a95157285eb55cdd0e635c7b8c155428171094abe7332/azure_cosmos-3.0.2-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a063921bda96c1cf5cee4777a69fc0c13b44ff11a656dd8b88eb38818dc835d3",
          "md5": "dedc61da961cf89183a8ed52c0deda22",
          "sha256": "12dac400ddebc72f9cff2dd152cd6cbd861d3dc11530e07c5aecd5a81a1b49d6"
        },
        "downloads": -1,
        "filename": "azure_cosmos-3.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dedc61da961cf89183a8ed52c0deda22",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 102827,
        "upload_time": "2019-04-24T22:22:56",
        "upload_time_iso_8601": "2019-04-24T22:22:56.031846Z",
        "url": "https://files.pythonhosted.org/packages/a0/63/921bda96c1cf5cee4777a69fc0c13b44ff11a656dd8b88eb38818dc835d3/azure_cosmos-3.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f8afd1e22dcc61ba299f0786518e68f2287b73be027b16ee0120548e652a1aa8",
          "md5": "e9ef4a20b1773737d7fcad20fb071298",
          "sha256": "081b3f592c3cf88c4d423fbb8184732cae0427cc5188cfed4835d9cdb64fa5f7"
        },
        "downloads": -1,
        "filename": "azure-cosmos-3.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e9ef4a20b1773737d7fcad20fb071298",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 119109,
        "upload_time": "2018-11-15T19:24:40",
        "upload_time_iso_8601": "2018-11-15T19:24:40.646976Z",
        "url": "https://files.pythonhosted.org/packages/f8/af/d1e22dcc61ba299f0786518e68f2287b73be027b16ee0120548e652a1aa8/azure-cosmos-3.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ac3fe4e8b02949e5a3fac0c44df713c237116d06faff0d7d3501a9b9f23dbac7",
          "md5": "77b1b16dfa15fd4433c646461acd032a",
          "sha256": "dbdc41d29bf186e361bb8d693aaac9fd93d2fdc88e48344b9e8e67004976852c"
        },
        "downloads": -1,
        "filename": "azure_cosmos-3.1.0-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "77b1b16dfa15fd4433c646461acd032a",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 103234,
        "upload_time": "2019-05-01T20:21:17",
        "upload_time_iso_8601": "2019-05-01T20:21:17.934880Z",
        "url": "https://files.pythonhosted.org/packages/ac/3f/e4e8b02949e5a3fac0c44df713c237116d06faff0d7d3501a9b9f23dbac7/azure_cosmos-3.1.0-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d5ef87bd5c7ea5fd448501fe74dd54fd4e148cb52423e681026390b72d1f49df",
          "md5": "146ef6c9a1b7529639e7fc37836a0258",
          "sha256": "f4e8c207e74296644ae2cb9816084562d8471f9b27c3f5533d048e87aa711a13"
        },
        "downloads": -1,
        "filename": "azure_cosmos-3.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "146ef6c9a1b7529639e7fc37836a0258",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 103234,
        "upload_time": "2019-05-01T20:21:19",
        "upload_time_iso_8601": "2019-05-01T20:21:19.392308Z",
        "url": "https://files.pythonhosted.org/packages/d5/ef/87bd5c7ea5fd448501fe74dd54fd4e148cb52423e681026390b72d1f49df/azure_cosmos-3.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5d24d7dca6df234404d8a11c9df59533d79331e8ba20c471cb2e7d73efbaf0d2",
          "md5": "e72c8f7b5c8e3a531967fdd9f708463e",
          "sha256": "f4a718cc4d26e90ad22abbd0d208f43040cbb4b7768144632dd3042fec9da5a4"
        },
        "downloads": -1,
        "filename": "azure-cosmos-3.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e72c8f7b5c8e3a531967fdd9f708463e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 122634,
        "upload_time": "2019-05-01T20:21:20",
        "upload_time_iso_8601": "2019-05-01T20:21:20.899331Z",
        "url": "https://files.pythonhosted.org/packages/5d/24/d7dca6df234404d8a11c9df59533d79331e8ba20c471cb2e7d73efbaf0d2/azure-cosmos-3.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6b143a24c1c408cd49caf8ec40127ea6ea8e8216f14ea627997c3bf6540ff0ab",
          "md5": "6dff2dbe179f48fad86ea238bbb329cb",
          "sha256": "8021effaaa2277a83094e29f7c099eb2e927a4ca84c2aaafc6b71e827b956eef"
        },
        "downloads": -1,
        "filename": "azure_cosmos-3.1.1-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "6dff2dbe179f48fad86ea238bbb329cb",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 134306,
        "upload_time": "2019-08-06T07:30:21",
        "upload_time_iso_8601": "2019-08-06T07:30:21.720718Z",
        "url": "https://files.pythonhosted.org/packages/6b/14/3a24c1c408cd49caf8ec40127ea6ea8e8216f14ea627997c3bf6540ff0ab/azure_cosmos-3.1.1-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1eab7bce6265918d91325537f188869b901fb25d652e2c02ba3c2d0342d95114",
          "md5": "c512fd093102587f41e78bb518ecde58",
          "sha256": "3061e081150320a8aba5bf0204fa1c26329478bd9f00af1c1a64e0ebf53dae48"
        },
        "downloads": -1,
        "filename": "azure_cosmos-3.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c512fd093102587f41e78bb518ecde58",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 134297,
        "upload_time": "2019-08-06T07:30:40",
        "upload_time_iso_8601": "2019-08-06T07:30:40.421598Z",
        "url": "https://files.pythonhosted.org/packages/1e/ab/7bce6265918d91325537f188869b901fb25d652e2c02ba3c2d0342d95114/azure_cosmos-3.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "420ab004ff6f20d851460c0e02f474642e86552fc21d893fe51ef7b4b3bf4a07",
          "md5": "b6ea8eb6aa2355ed3d6b69565671442f",
          "sha256": "f3922891baf59742556cbc8bd96aaba4f582a6a8f9bbccb8f2b0376539a21761"
        },
        "downloads": -1,
        "filename": "azure-cosmos-3.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b6ea8eb6aa2355ed3d6b69565671442f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 122635,
        "upload_time": "2019-08-06T07:31:02",
        "upload_time_iso_8601": "2019-08-06T07:31:02.942810Z",
        "url": "https://files.pythonhosted.org/packages/42/0a/b004ff6f20d851460c0e02f474642e86552fc21d893fe51ef7b4b3bf4a07/azure-cosmos-3.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dea2d36cd4aa92fcb4b6d15833e0320fc3d6067ff59815d095f2772bd036025e",
          "md5": "4479fc86bf9a10d6e98b155222ab51e3",
          "sha256": "4905cb00a834e86338bc611e2f278bb12834812801c6a420b973c5f821ce283c"
        },
        "downloads": -1,
        "filename": "azure_cosmos-3.1.2-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "4479fc86bf9a10d6e98b155222ab51e3",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 140948,
        "upload_time": "2019-10-16T22:33:42",
        "upload_time_iso_8601": "2019-10-16T22:33:42.150832Z",
        "url": "https://files.pythonhosted.org/packages/de/a2/d36cd4aa92fcb4b6d15833e0320fc3d6067ff59815d095f2772bd036025e/azure_cosmos-3.1.2-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7ac4a4aa7dad65c1a55bf1a5794c897e7e5a2ab3260e6c76afb01e5ffb3e1307",
          "md5": "0832bf51d3a74c275f1743555b7c186d",
          "sha256": "bac7de8fa84a3e34b6814cdadbb5ce99653874c27180f5fa596363a8dc1945db"
        },
        "downloads": -1,
        "filename": "azure_cosmos-3.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0832bf51d3a74c275f1743555b7c186d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 140883,
        "upload_time": "2019-10-16T22:34:04",
        "upload_time_iso_8601": "2019-10-16T22:34:04.822935Z",
        "url": "https://files.pythonhosted.org/packages/7a/c4/a4aa7dad65c1a55bf1a5794c897e7e5a2ab3260e6c76afb01e5ffb3e1307/azure_cosmos-3.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9c47c77b0008c9f3bf90c533a7f538b149c7cd28d2d9c5303d3fc017ada6c09c",
          "md5": "cc38ea87911e38a0ae71809e550e481c",
          "sha256": "7f8ac99e4e40c398089fc383bfadcdc83376f72b88532b0cac0b420357cd08c7"
        },
        "downloads": -1,
        "filename": "azure-cosmos-3.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "cc38ea87911e38a0ae71809e550e481c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 137228,
        "upload_time": "2019-10-16T22:33:19",
        "upload_time_iso_8601": "2019-10-16T22:33:19.247903Z",
        "url": "https://files.pythonhosted.org/packages/9c/47/c77b0008c9f3bf90c533a7f538b149c7cd28d2d9c5303d3fc017ada6c09c/azure-cosmos-3.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4a4f23ffc8e870df94ea6def08121245301e763eaee7236fb8c3d02d5ff66687",
          "md5": "de8e51b0538ec3bf09d54542e093485d",
          "sha256": "313e766bcf5a1779802c274dec94d5b9cc0e4d0d269489c56606fd2464070fad"
        },
        "downloads": -1,
        "filename": "azure_cosmos-3.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "de8e51b0538ec3bf09d54542e093485d",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 106591,
        "upload_time": "2020-07-08T18:40:26",
        "upload_time_iso_8601": "2020-07-08T18:40:26.085095Z",
        "url": "https://files.pythonhosted.org/packages/4a/4f/23ffc8e870df94ea6def08121245301e763eaee7236fb8c3d02d5ff66687/azure_cosmos-3.2.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3cd3f74bf55c48851944b726cb36883c68d3c4bb887fb2196f216ca543c691e1",
          "md5": "ea692a3b63925ecd53263833c6eaaecb",
          "sha256": "4f77cc558fecffac04377ba758ac4e23f076dc1c54e2cf2515f85bc15cbde5c6"
        },
        "downloads": -1,
        "filename": "azure-cosmos-3.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ea692a3b63925ecd53263833c6eaaecb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 154607,
        "upload_time": "2020-07-08T18:40:27",
        "upload_time_iso_8601": "2020-07-08T18:40:27.701902Z",
        "url": "https://files.pythonhosted.org/packages/3c/d3/f74bf55c48851944b726cb36883c68d3c4bb887fb2196f216ca543c691e1/azure-cosmos-3.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "af42f9df4e1cba74ee5058782ef838b0f6caa0c271670e054c263d69702884e2",
          "md5": "84da2ea7227f6fa90a724e4e30b559f3",
          "sha256": "2dbcb33e091b6c3284026472cf3fc3d3ca3cc8bfdc200d469dbd9089f8ba0e54"
        },
        "downloads": -1,
        "filename": "azure_cosmos-4.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "84da2ea7227f6fa90a724e4e30b559f3",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 134739,
        "upload_time": "2020-05-20T21:37:38",
        "upload_time_iso_8601": "2020-05-20T21:37:38.404403Z",
        "url": "https://files.pythonhosted.org/packages/af/42/f9df4e1cba74ee5058782ef838b0f6caa0c271670e054c263d69702884e2/azure_cosmos-4.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3bc2af9569e6ad4838e4e4ecab8f0dbb7b861be4544f40380e3e69b4ea04c04a",
          "md5": "f8a4ce40709def3a5cad4491fd8065a7",
          "sha256": "c4e40e0d378fd0c96664f46f1ad08e6c8aaaac31c463726a74aae9eae724442d"
        },
        "downloads": -1,
        "filename": "azure-cosmos-4.0.0.zip",
        "has_sig": false,
        "md5_digest": "f8a4ce40709def3a5cad4491fd8065a7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 269128,
        "upload_time": "2020-05-20T21:37:40",
        "upload_time_iso_8601": "2020-05-20T21:37:40.251800Z",
        "url": "https://files.pythonhosted.org/packages/3b/c2/af9569e6ad4838e4e4ecab8f0dbb7b861be4544f40380e3e69b4ea04c04a/azure-cosmos-4.0.0.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.0.0a1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "419b99d44f8ef4db02dc5fc64f6e5d7a50514e1a5ed6803e79ccef33f780806c",
          "md5": "3447285f4597d5c611288a4d39c50298",
          "sha256": "df552c2ab4bbdad52135ef0b6b0803c3c9ddaab3095ef271698a0be0f932a15a"
        },
        "downloads": -1,
        "filename": "azure_cosmos-4.0.0a1-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "3447285f4597d5c611288a4d39c50298",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 125847,
        "upload_time": "2019-04-01T18:56:24",
        "upload_time_iso_8601": "2019-04-01T18:56:24.818051Z",
        "url": "https://files.pythonhosted.org/packages/41/9b/99d44f8ef4db02dc5fc64f6e5d7a50514e1a5ed6803e79ccef33f780806c/azure_cosmos-4.0.0a1-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7dc9aec60fbc5fc5a9cfe9c1e7dde9ae5845c0d12b47754f5ad441c335d4fa9f",
          "md5": "7a40dcf9ed16e6052ef645a6eca26476",
          "sha256": "9808fd1451fd687817ff4eecbc61172f06e97fca58c6f42edf97fdc0f85d82a3"
        },
        "downloads": -1,
        "filename": "azure-cosmos-4.0.0a1.tar.gz",
        "has_sig": false,
        "md5_digest": "7a40dcf9ed16e6052ef645a6eca26476",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 126800,
        "upload_time": "2019-04-01T18:57:16",
        "upload_time_iso_8601": "2019-04-01T18:57:16.255010Z",
        "url": "https://files.pythonhosted.org/packages/7d/c9/aec60fbc5fc5a9cfe9c1e7dde9ae5845c0d12b47754f5ad441c335d4fa9f/azure-cosmos-4.0.0a1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.0.0a2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "542f9c5f7b114eb463978aed7b660b7ee984d61e12bd052aa6cc54dd43e145ec",
          "md5": "995b0d6a77aa5aadc74406025c74090a",
          "sha256": "44f9da6251125e63ace6e9a6f737617ebf9fadb546257c2f05bd4729aba0606b"
        },
        "downloads": -1,
        "filename": "azure_cosmos-4.0.0a2-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "995b0d6a77aa5aadc74406025c74090a",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 125066,
        "upload_time": "2019-05-04T07:42:16",
        "upload_time_iso_8601": "2019-05-04T07:42:16.118055Z",
        "url": "https://files.pythonhosted.org/packages/54/2f/9c5f7b114eb463978aed7b660b7ee984d61e12bd052aa6cc54dd43e145ec/azure_cosmos-4.0.0a2-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6b06bbd15c29fece61376bd9c9dd1acbfdf53e082cc7257fafebb0a5c6a1d56e",
          "md5": "b5c1acc5829c9679e7229497dbe35b67",
          "sha256": "e14a4a6903859f9187788943cc9e9c9068b0f46a83c1044c2ed860a2a54df22e"
        },
        "downloads": -1,
        "filename": "azure_cosmos-4.0.0a2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b5c1acc5829c9679e7229497dbe35b67",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 125052,
        "upload_time": "2019-05-04T07:42:34",
        "upload_time_iso_8601": "2019-05-04T07:42:34.617630Z",
        "url": "https://files.pythonhosted.org/packages/6b/06/bbd15c29fece61376bd9c9dd1acbfdf53e082cc7257fafebb0a5c6a1d56e/azure_cosmos-4.0.0a2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2a5f2f4284b258430e4f952a10fd63ba4eff51122f096fd9a77fd3f6afcf1746",
          "md5": "5e3ace28de02fcbbaa828aaa508d8af0",
          "sha256": "b122bbfc616f406a17f58fc46ced60e2cba1d02b7f0249ea35ff3654e9e4b978"
        },
        "downloads": -1,
        "filename": "azure-cosmos-4.0.0a2.tar.gz",
        "has_sig": false,
        "md5_digest": "5e3ace28de02fcbbaa828aaa508d8af0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 129202,
        "upload_time": "2019-05-04T07:42:56",
        "upload_time_iso_8601": "2019-05-04T07:42:56.650779Z",
        "url": "https://files.pythonhosted.org/packages/2a/5f/2f4284b258430e4f952a10fd63ba4eff51122f096fd9a77fd3f6afcf1746/azure-cosmos-4.0.0a2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.0.0b1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b9b869f98f2c9f150a6a33a20ac85f36cccb6be8810b09cb54f67a4b6256e64e",
          "md5": "6050fed2f03fab3eda57c4173e8ac356",
          "sha256": "e9a8422991be532a2a6d6f7e7a7315b6a78c9057906c441c7262693580f64d76"
        },
        "downloads": -1,
        "filename": "azure_cosmos-4.0.0b1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6050fed2f03fab3eda57c4173e8ac356",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 126934,
        "upload_time": "2019-07-09T01:44:56",
        "upload_time_iso_8601": "2019-07-09T01:44:56.455670Z",
        "url": "https://files.pythonhosted.org/packages/b9/b8/69f98f2c9f150a6a33a20ac85f36cccb6be8810b09cb54f67a4b6256e64e/azure_cosmos-4.0.0b1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5125ebd1bbad9a08d0daeb78ab5060c563899333b6e9a92e46ccee314d5cf15d",
          "md5": "36dcd0b9f46e315bc1559ffab2112c51",
          "sha256": "abe04236e28017e000ae83fc07772cf56b259ec5bd81ff4abfb9c36152471514"
        },
        "downloads": -1,
        "filename": "azure-cosmos-4.0.0b1.zip",
        "has_sig": false,
        "md5_digest": "36dcd0b9f46e315bc1559ffab2112c51",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 223098,
        "upload_time": "2019-07-09T01:44:58",
        "upload_time_iso_8601": "2019-07-09T01:44:58.048610Z",
        "url": "https://files.pythonhosted.org/packages/51/25/ebd1bbad9a08d0daeb78ab5060c563899333b6e9a92e46ccee314d5cf15d/azure-cosmos-4.0.0b1.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.0.0b2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ee550e7ba1935e45b6624935b596ee6811d7704edca69e9bd8825baffc5cd4f",
          "md5": "f8b725d3148440c8bf26e676b0077c11",
          "sha256": "ddbc079f33ac4657a1789d906582ae3ae29d7eb82d1abd62e01af2c27879e1e9"
        },
        "downloads": -1,
        "filename": "azure_cosmos-4.0.0b2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f8b725d3148440c8bf26e676b0077c11",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 135836,
        "upload_time": "2019-09-10T19:26:50",
        "upload_time_iso_8601": "2019-09-10T19:26:50.781758Z",
        "url": "https://files.pythonhosted.org/packages/0e/e5/50e7ba1935e45b6624935b596ee6811d7704edca69e9bd8825baffc5cd4f/azure_cosmos-4.0.0b2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5820d67d84197958e963b1e83c4cd6edb104321e44fffc0151f6c815babd8aa5",
          "md5": "23df8c636eaca9f7aec313b6afde85f6",
          "sha256": "8fbdf94a4f9595ca3479989d293bd87721f5d2b24546e303b0a596a3573e551d"
        },
        "downloads": -1,
        "filename": "azure-cosmos-4.0.0b2.zip",
        "has_sig": false,
        "md5_digest": "23df8c636eaca9f7aec313b6afde85f6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 243191,
        "upload_time": "2019-09-10T19:26:52",
        "upload_time_iso_8601": "2019-09-10T19:26:52.880799Z",
        "url": "https://files.pythonhosted.org/packages/58/20/d67d84197958e963b1e83c4cd6edb104321e44fffc0151f6c815babd8aa5/azure-cosmos-4.0.0b2.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.0.0b3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "df415901dc9f4dfefeaec1f9e73d8238c9956340a1f6e7dd3e509c67c146dded",
          "md5": "8faf2a9217bfe85bdfc960ade772431f",
          "sha256": "d7123968e91b028dd0336f9f60e7108661027c467cf7d2bc5d7682d659a5d909"
        },
        "downloads": -1,
        "filename": "azure_cosmos-4.0.0b3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8faf2a9217bfe85bdfc960ade772431f",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 136389,
        "upload_time": "2019-09-19T00:55:33",
        "upload_time_iso_8601": "2019-09-19T00:55:33.966785Z",
        "url": "https://files.pythonhosted.org/packages/df/41/5901dc9f4dfefeaec1f9e73d8238c9956340a1f6e7dd3e509c67c146dded/azure_cosmos-4.0.0b3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1c645fa46f7695b24656721dff6998babb08c0e340eeff528da06f1ba4fea66d",
          "md5": "702f783f6ae277c7f7106e22218b9787",
          "sha256": "46ee571a544789fedd9554c6a19844bcf55000bdcde2b748687339c45666191c"
        },
        "downloads": -1,
        "filename": "azure-cosmos-4.0.0b3.zip",
        "has_sig": false,
        "md5_digest": "702f783f6ae277c7f7106e22218b9787",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 243982,
        "upload_time": "2019-09-19T00:55:35",
        "upload_time_iso_8601": "2019-09-19T00:55:35.716335Z",
        "url": "https://files.pythonhosted.org/packages/1c/64/5fa46f7695b24656721dff6998babb08c0e340eeff528da06f1ba4fea66d/azure-cosmos-4.0.0b3.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.0.0b4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bea468403635202e5e17d4d585e40db1b501b05f48b8b2a3336e8070af386821",
          "md5": "645fb52d07072d3896b5237d606b247d",
          "sha256": "00eca545574be3d15bd431f8bc1d08d9ed3377caba8e7f01df2a51eb7ca99a8b"
        },
        "downloads": -1,
        "filename": "azure_cosmos-4.0.0b4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "645fb52d07072d3896b5237d606b247d",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 138300,
        "upload_time": "2019-10-09T17:30:43",
        "upload_time_iso_8601": "2019-10-09T17:30:43.583422Z",
        "url": "https://files.pythonhosted.org/packages/be/a4/68403635202e5e17d4d585e40db1b501b05f48b8b2a3336e8070af386821/azure_cosmos-4.0.0b4-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "61021ef95640bd62ef713ed278ce15ca08d58c9ad38da7cf3158e3d0b62cc3dc",
          "md5": "8f9561d1d08e40f6e1039a32d3093089",
          "sha256": "22a1128f2a85b377416765de6eb4c6cb5260482b6557563a8ee6ad99c33f7cb3"
        },
        "downloads": -1,
        "filename": "azure-cosmos-4.0.0b4.zip",
        "has_sig": false,
        "md5_digest": "8f9561d1d08e40f6e1039a32d3093089",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 241235,
        "upload_time": "2019-10-09T17:30:45",
        "upload_time_iso_8601": "2019-10-09T17:30:45.265461Z",
        "url": "https://files.pythonhosted.org/packages/61/02/1ef95640bd62ef713ed278ce15ca08d58c9ad38da7cf3158e3d0b62cc3dc/azure-cosmos-4.0.0b4.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.0.0b5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "11b8fee79c8e168db149f84e78b8c6f1a4e2e3d633bcd447be090ab7c38aaf2b",
          "md5": "dfdc427407eddf2ab7528e2b6ddd76f5",
          "sha256": "e2c279ff8bca89816cf09f8253040855038a075fb23cd47940139eeaf76a4494"
        },
        "downloads": -1,
        "filename": "azure_cosmos-4.0.0b5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dfdc427407eddf2ab7528e2b6ddd76f5",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 141760,
        "upload_time": "2019-10-31T15:42:44",
        "upload_time_iso_8601": "2019-10-31T15:42:44.397249Z",
        "url": "https://files.pythonhosted.org/packages/11/b8/fee79c8e168db149f84e78b8c6f1a4e2e3d633bcd447be090ab7c38aaf2b/azure_cosmos-4.0.0b5-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c236a5c537ab46e2ed95cefc88a67d09fbdb391d0264bb4ccbb49d0f678a8f06",
          "md5": "b3d181d7577b736206ca67e871c1110a",
          "sha256": "308f89bfeabac2400c0baa9b99f789621cd8bd479bfbdadeaa66f2e39cfafffc"
        },
        "downloads": -1,
        "filename": "azure-cosmos-4.0.0b5.zip",
        "has_sig": false,
        "md5_digest": "b3d181d7577b736206ca67e871c1110a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 274444,
        "upload_time": "2019-10-31T15:42:46",
        "upload_time_iso_8601": "2019-10-31T15:42:46.281889Z",
        "url": "https://files.pythonhosted.org/packages/c2/36/a5c537ab46e2ed95cefc88a67d09fbdb391d0264bb4ccbb49d0f678a8f06/azure-cosmos-4.0.0b5.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.0.0b6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aba0f78132db93684d073d09483e77b985a63cffe669c0de884ded4a993515b7",
          "md5": "822b9aff1bb7bcce6f2fc1a206fa36db",
          "sha256": "209fed33e7aa6e6218701d9671ceae07123646990ac81535fb00bb5e1eda909d"
        },
        "downloads": -1,
        "filename": "azure_cosmos-4.0.0b6-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "822b9aff1bb7bcce6f2fc1a206fa36db",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 140438,
        "upload_time": "2019-11-19T02:12:25",
        "upload_time_iso_8601": "2019-11-19T02:12:25.864639Z",
        "url": "https://files.pythonhosted.org/packages/ab/a0/f78132db93684d073d09483e77b985a63cffe669c0de884ded4a993515b7/azure_cosmos-4.0.0b6-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "334ffdc2deabe7f11ef6c20c0fc46cd773e69afb3c4bb8f03a0aa12b170489b9",
          "md5": "7217109cef6fe9f7179ba22eb633d4a8",
          "sha256": "cd50bebb22fa50f324720c2250f5cce1f4b8b5f6bcc2878ac4d1c53300b16e91"
        },
        "downloads": -1,
        "filename": "azure-cosmos-4.0.0b6.zip",
        "has_sig": false,
        "md5_digest": "7217109cef6fe9f7179ba22eb633d4a8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 274164,
        "upload_time": "2019-11-19T02:12:28",
        "upload_time_iso_8601": "2019-11-19T02:12:28.499991Z",
        "url": "https://files.pythonhosted.org/packages/33/4f/fdc2deabe7f11ef6c20c0fc46cd773e69afb3c4bb8f03a0aa12b170489b9/azure-cosmos-4.0.0b6.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b8f3c4ab295b7219a286da1374963ef8a9c18ef6e639b6fe03a70d09088c982c",
          "md5": "9f763ca6d9d38c4879d0a0c598c02026",
          "sha256": "84ad6144ed91ad42ba5a76a7a7e97c8f00ab3cdf79bc1de4b51186aa7b548e2c"
        },
        "downloads": -1,
        "filename": "azure_cosmos-4.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9f763ca6d9d38c4879d0a0c598c02026",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 135557,
        "upload_time": "2020-08-12T19:44:59",
        "upload_time_iso_8601": "2020-08-12T19:44:59.586063Z",
        "url": "https://files.pythonhosted.org/packages/b8/f3/c4ab295b7219a286da1374963ef8a9c18ef6e639b6fe03a70d09088c982c/azure_cosmos-4.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "41257be4398be920c4795aedd7431f0cb678e628c17232f5506a3463e7791d81",
          "md5": "519d7aa7924fd5993056670703c52cfd",
          "sha256": "202afb989f9587c25762d21fceeb282606d97f711905ebc1ea20546ab621ed92"
        },
        "downloads": -1,
        "filename": "azure-cosmos-4.1.0.zip",
        "has_sig": false,
        "md5_digest": "519d7aa7924fd5993056670703c52cfd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 271127,
        "upload_time": "2020-08-12T19:45:01",
        "upload_time_iso_8601": "2020-08-12T19:45:01.752468Z",
        "url": "https://files.pythonhosted.org/packages/41/25/7be4398be920c4795aedd7431f0cb678e628c17232f5506a3463e7791d81/azure-cosmos-4.1.0.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6a66683228000d19273676f8bfc65a3881251cdd405674f692b8fa832b3e1aed",
          "md5": "2816cb52602d224546a1b1780db489f0",
          "sha256": "d0edcc3acd09e5c422b6cf07a34f9faa418414ba72eea3db2a3dcfaa9b1ee610"
        },
        "downloads": -1,
        "filename": "azure_cosmos-4.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2816cb52602d224546a1b1780db489f0",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 136336,
        "upload_time": "2020-10-09T15:23:22",
        "upload_time_iso_8601": "2020-10-09T15:23:22.471455Z",
        "url": "https://files.pythonhosted.org/packages/6a/66/683228000d19273676f8bfc65a3881251cdd405674f692b8fa832b3e1aed/azure_cosmos-4.2.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "870dee9d2110b82692af77b2ff22294a5563948b42d25f92a5df95471612dbd8",
          "md5": "f9c31bd22bda5479c29970c503c265eb",
          "sha256": "867191fa5966446101f7ca3834f23060a85735d0b660303ca353864945d572b6"
        },
        "downloads": -1,
        "filename": "azure-cosmos-4.2.0.zip",
        "has_sig": false,
        "md5_digest": "f9c31bd22bda5479c29970c503c265eb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 273225,
        "upload_time": "2020-10-09T15:23:24",
        "upload_time_iso_8601": "2020-10-09T15:23:24.568047Z",
        "url": "https://files.pythonhosted.org/packages/87/0d/ee9d2110b82692af77b2ff22294a5563948b42d25f92a5df95471612dbd8/azure-cosmos-4.2.0.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5e0c5a720c5146c3bc1c764704390f8ccacf44b05aad7eb9bf6f21c4db9d30e8",
          "md5": "2a15ed3137a003e60b45093ca9edcca7",
          "sha256": "50060a29a57021c5687e68129ae751295cc0a0cf7970fd1e0fd86b3cd7d34de4"
        },
        "downloads": -1,
        "filename": "azure_cosmos-4.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2a15ed3137a003e60b45093ca9edcca7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 215591,
        "upload_time": "2022-05-24T04:16:52",
        "upload_time_iso_8601": "2022-05-24T04:16:52.089532Z",
        "url": "https://files.pythonhosted.org/packages/5e/0c/5a720c5146c3bc1c764704390f8ccacf44b05aad7eb9bf6f21c4db9d30e8/azure_cosmos-4.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "06c94811347aa7e76af301bf9e2330775087fb851a66263641fbd33bc5ed1300",
          "md5": "d5eff3e1f53b6dacf0e41d7a6e3094f5",
          "sha256": "e2d993af0ce7598fbfee2c3c9776dcd47b75a47f3ccbe43bb372a601cd3d5f20"
        },
        "downloads": -1,
        "filename": "azure-cosmos-4.3.0.zip",
        "has_sig": false,
        "md5_digest": "d5eff3e1f53b6dacf0e41d7a6e3094f5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 418669,
        "upload_time": "2022-05-24T04:16:55",
        "upload_time_iso_8601": "2022-05-24T04:16:55.841395Z",
        "url": "https://files.pythonhosted.org/packages/06/c9/4811347aa7e76af301bf9e2330775087fb851a66263641fbd33bc5ed1300/azure-cosmos-4.3.0.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.3.0b1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9491bb7e811149732bbf8596ab9ae20eb1a19bebbcbde71c6c07d3886351cbd7",
          "md5": "f667032435309aa407a07e4a17f02a5c",
          "sha256": "cdd3db54aed089699186428e5093d6d61bf7e8697d15fba806c7cefc53a4ddf5"
        },
        "downloads": -1,
        "filename": "azure_cosmos-4.3.0b1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f667032435309aa407a07e4a17f02a5c",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 202471,
        "upload_time": "2021-12-14T18:13:41",
        "upload_time_iso_8601": "2021-12-14T18:13:41.645447Z",
        "url": "https://files.pythonhosted.org/packages/94/91/bb7e811149732bbf8596ab9ae20eb1a19bebbcbde71c6c07d3886351cbd7/azure_cosmos-4.3.0b1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d9c87cb294312084bd80b41e21780c24fa6f133e49e29e4240eca761d3c5be1e",
          "md5": "e0b352189e27383bf3e4014ea4bc56ec",
          "sha256": "c03a4f26855679a988536268a69f081ecc0bf91fa02c6f9dcb18044e56e58588"
        },
        "downloads": -1,
        "filename": "azure-cosmos-4.3.0b1.zip",
        "has_sig": false,
        "md5_digest": "e0b352189e27383bf3e4014ea4bc56ec",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 371214,
        "upload_time": "2021-12-14T18:13:44",
        "upload_time_iso_8601": "2021-12-14T18:13:44.866423Z",
        "url": "https://files.pythonhosted.org/packages/d9/c8/7cb294312084bd80b41e21780c24fa6f133e49e29e4240eca761d3c5be1e/azure-cosmos-4.3.0b1.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.3.0b2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a046841a690c3540651421d269dcb0d073c0ca3c519c35e33ad063f28e9431b",
          "md5": "aa432e2add493830b97a8c9d58d16a25",
          "sha256": "f43f463014a9ad5606db52ab7489fb84b1c3957b5365af2aee61d12247d468e0"
        },
        "downloads": -1,
        "filename": "azure_cosmos-4.3.0b2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "aa432e2add493830b97a8c9d58d16a25",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 204405,
        "upload_time": "2022-01-25T21:21:09",
        "upload_time_iso_8601": "2022-01-25T21:21:09.612663Z",
        "url": "https://files.pythonhosted.org/packages/9a/04/6841a690c3540651421d269dcb0d073c0ca3c519c35e33ad063f28e9431b/azure_cosmos-4.3.0b2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bb7f4e019feb05fbab2ddf48bd9b1f23d7fee5e5783edd9319246621d0bde072",
          "md5": "ee8ca078cf34bcff2d6d5ca854a71210",
          "sha256": "08915ab86c93341c8cfb5814ae850bc9cb263c142ef89f7512e8e589bd43175f"
        },
        "downloads": -1,
        "filename": "azure-cosmos-4.3.0b2.zip",
        "has_sig": false,
        "md5_digest": "ee8ca078cf34bcff2d6d5ca854a71210",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 378128,
        "upload_time": "2022-01-25T21:21:12",
        "upload_time_iso_8601": "2022-01-25T21:21:12.455633Z",
        "url": "https://files.pythonhosted.org/packages/bb/7f/4e019feb05fbab2ddf48bd9b1f23d7fee5e5783edd9319246621d0bde072/azure-cosmos-4.3.0b2.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.3.0b3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "493aaa4247ad8426eaf511887ecec795a86877b09904d341031cae88f8608f32",
          "md5": "1c053edf4dac3272f48b8799e6f8bba1",
          "sha256": "fd5f8542f3638c66ffa771516a9efab6202b2846a81ff4e8fd2006634516c505"
        },
        "downloads": -1,
        "filename": "azure_cosmos-4.3.0b3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1c053edf4dac3272f48b8799e6f8bba1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 208288,
        "upload_time": "2022-03-10T17:12:33",
        "upload_time_iso_8601": "2022-03-10T17:12:33.290029Z",
        "url": "https://files.pythonhosted.org/packages/49/3a/aa4247ad8426eaf511887ecec795a86877b09904d341031cae88f8608f32/azure_cosmos-4.3.0b3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa3a997ef2b8045c431c8d143135b6fcdba25307bbc6754bb0bf43fa0b2a30da",
          "md5": "7c9d7dd20bba3aea4c5a93bb47940618",
          "sha256": "8b19da281ae2a2ac55b17cb1dfeb7bc4445d2b7418c83bf257b519c5c9a2be01"
        },
        "downloads": -1,
        "filename": "azure-cosmos-4.3.0b3.zip",
        "has_sig": false,
        "md5_digest": "7c9d7dd20bba3aea4c5a93bb47940618",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 388081,
        "upload_time": "2022-03-10T17:12:36",
        "upload_time_iso_8601": "2022-03-10T17:12:36.700652Z",
        "url": "https://files.pythonhosted.org/packages/aa/3a/997ef2b8045c431c8d143135b6fcdba25307bbc6754bb0bf43fa0b2a30da/azure-cosmos-4.3.0b3.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.3.0b4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a5a9164a062121a4daa2318cadd9b0f251aec64182b3e22d57f61cce008550b8",
          "md5": "99181b8ea09c407cc935b3d5e798ca57",
          "sha256": "709c98011444e7585c8dbf2b21d3e26a82281db41c9734dcdd99da50fc9c7391"
        },
        "downloads": -1,
        "filename": "azure_cosmos-4.3.0b4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "99181b8ea09c407cc935b3d5e798ca57",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 213780,
        "upload_time": "2022-04-07T15:51:07",
        "upload_time_iso_8601": "2022-04-07T15:51:07.764367Z",
        "url": "https://files.pythonhosted.org/packages/a5/a9/164a062121a4daa2318cadd9b0f251aec64182b3e22d57f61cce008550b8/azure_cosmos-4.3.0b4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1bfd940df5d80466a383b02fd80f01b3a28346d61339859cf895e57d3cd9f104",
          "md5": "f45906b6d65066af3ecaee3c2b78071a",
          "sha256": "2fb12e6bf2a05d13a3e6cb3803a241593900162661c35c7ca5dd3c4bdcbd5ee8"
        },
        "downloads": -1,
        "filename": "azure-cosmos-4.3.0b4.zip",
        "has_sig": false,
        "md5_digest": "f45906b6d65066af3ecaee3c2b78071a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 402133,
        "upload_time": "2022-04-07T15:51:10",
        "upload_time_iso_8601": "2022-04-07T15:51:10.906301Z",
        "url": "https://files.pythonhosted.org/packages/1b/fd/940df5d80466a383b02fd80f01b3a28346d61339859cf895e57d3cd9f104/azure-cosmos-4.3.0b4.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1ae68fdeb60b1a5d2a9128a038056acaca64ee87a68cbe2f18dfe8a91cb4e5c2",
          "md5": "6fbd218594fb1434b19abbd34605daae",
          "sha256": "68570310512deadeeacb29f9a2ed3c32c58083a456bc2f68e36b28e6353a3a97"
        },
        "downloads": -1,
        "filename": "azure_cosmos-4.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6fbd218594fb1434b19abbd34605daae",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 222763,
        "upload_time": "2023-02-24T00:46:36",
        "upload_time_iso_8601": "2023-02-24T00:46:36.538541Z",
        "url": "https://files.pythonhosted.org/packages/1a/e6/8fdeb60b1a5d2a9128a038056acaca64ee87a68cbe2f18dfe8a91cb4e5c2/azure_cosmos-4.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "90dcd962600643262152e5b8ab166a5327881a9ac91d6b7e1049ccbec7a2b5d7",
          "md5": "035509718716237c71111ad036b83acb",
          "sha256": "e3852b38373ab6853a6b2a800a4a0df0ac7f157a7de3f05d1b18617ba5db76a2"
        },
        "downloads": -1,
        "filename": "azure-cosmos-4.3.1.zip",
        "has_sig": false,
        "md5_digest": "035509718716237c71111ad036b83acb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 441614,
        "upload_time": "2023-02-24T00:46:39",
        "upload_time_iso_8601": "2023-02-24T00:46:39.684610Z",
        "url": "https://files.pythonhosted.org/packages/90/dc/d962600643262152e5b8ab166a5327881a9ac91d6b7e1049ccbec7a2b5d7/azure-cosmos-4.3.1.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.3.1b1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "088518b2b859e7888141fa9d59d009440ef3d78e43a17b8b6c52e921b0096488",
          "md5": "f76a20a635ac17f3de6c950898b09d08",
          "sha256": "8d96d26952fd77d5c4693e519b6948b49f27fd7e35043b40fe6cd6cd995f249d"
        },
        "downloads": -1,
        "filename": "azure_cosmos-4.3.1b1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f76a20a635ac17f3de6c950898b09d08",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 219976,
        "upload_time": "2022-09-20T00:01:11",
        "upload_time_iso_8601": "2022-09-20T00:01:11.930492Z",
        "url": "https://files.pythonhosted.org/packages/08/85/18b2b859e7888141fa9d59d009440ef3d78e43a17b8b6c52e921b0096488/azure_cosmos-4.3.1b1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "05a2745500605d76d406777d2de1c1d36200c6647825a31edae7aa21b0f27f62",
          "md5": "db56a4ac1ecd787bec864806311f1bcc",
          "sha256": "4dc5e10e2f989672ad33f6adbd3fed9faeb1d4e2c25b75a00690ec9c111d0908"
        },
        "downloads": -1,
        "filename": "azure-cosmos-4.3.1b1.zip",
        "has_sig": false,
        "md5_digest": "db56a4ac1ecd787bec864806311f1bcc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 436927,
        "upload_time": "2022-09-20T00:01:15",
        "upload_time_iso_8601": "2022-09-20T00:01:15.834601Z",
        "url": "https://files.pythonhosted.org/packages/05/a2/745500605d76d406777d2de1c1d36200c6647825a31edae7aa21b0f27f62/azure-cosmos-4.3.1b1.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1ae68fdeb60b1a5d2a9128a038056acaca64ee87a68cbe2f18dfe8a91cb4e5c2",
        "md5": "6fbd218594fb1434b19abbd34605daae",
        "sha256": "68570310512deadeeacb29f9a2ed3c32c58083a456bc2f68e36b28e6353a3a97"
      },
      "downloads": -1,
      "filename": "azure_cosmos-4.3.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6fbd218594fb1434b19abbd34605daae",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 222763,
      "upload_time": "2023-02-24T00:46:36",
      "upload_time_iso_8601": "2023-02-24T00:46:36.538541Z",
      "url": "https://files.pythonhosted.org/packages/1a/e6/8fdeb60b1a5d2a9128a038056acaca64ee87a68cbe2f18dfe8a91cb4e5c2/azure_cosmos-4.3.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "90dcd962600643262152e5b8ab166a5327881a9ac91d6b7e1049ccbec7a2b5d7",
        "md5": "035509718716237c71111ad036b83acb",
        "sha256": "e3852b38373ab6853a6b2a800a4a0df0ac7f157a7de3f05d1b18617ba5db76a2"
      },
      "downloads": -1,
      "filename": "azure-cosmos-4.3.1.zip",
      "has_sig": false,
      "md5_digest": "035509718716237c71111ad036b83acb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 441614,
      "upload_time": "2023-02-24T00:46:39",
      "upload_time_iso_8601": "2023-02-24T00:46:39.684610Z",
      "url": "https://files.pythonhosted.org/packages/90/dc/d962600643262152e5b8ab166a5327881a9ac91d6b7e1049ccbec7a2b5d7/azure-cosmos-4.3.1.zip",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}