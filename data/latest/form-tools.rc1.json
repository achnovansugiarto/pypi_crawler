{
  "info": {
    "author": "gwionap",
    "author_email": "gwion.aprhobat@justice.gov.uk",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# form-tools\n\nThe raw data for many case management and data systems exist as paper forms. `form-tools` is a package to help with preprocessing scanned images of these paper forms for further analysis and / or processing. It does this by making use of a template for the form to match and align scanned versions of the document to it, before taking thumbnails of the fields in the scanned document.\n\n## Before you begin\n\n* `form-tools` makes use of the [`pdf2image`](https://github.com/Belval/pdf2image) package for converting document images stored as pdf to image files. As such, you'll need to install `poppler`. See the `pdf2image` readme for guidance on how to do so.\n* The current default OCR engine for matching pages in a form template to its scanned image is [`tesseract`](https://github.com/tesseract-ocr/tesseract). Please follow the instructions at the link for how to install it.\n* Computer vision is performed by using the `opencv` library. This project makes use of the pre-compiled python library for `opencv` which will be installed by default but you may wish to install `opencv` from source instead.\n\nOn Ubuntu, you can install all the necessary packages by running\n\n```\nsudo apt-get install tesseract-ocr libtesseract-dev libleptonica-dev pkg-config poppler-utils\n```\n\n## Installation\n\nTo install the library run:\n\n```\npip install form-tools\n```\n\n## Basic use\n\n### Extracting form metadata\n\nSay you have a form with a pdf template `my_form.pdf`. To pre-process scanned copies of the form you'll first need to create an image directory for your template as well as a `FormMetadata` compliant json file.\n\nTo do this from the command line and output the metadata to `my_form_meta.json` and your images to a directory `template_images` you would run:\n\n```\nform-tools extract-meta my_form.pdf my_form_meta.json --form-image-directory template_images\n```\n\nTo interact with the API directly in python you should use the built in `PdfFormMetaExtractor` class.\n\n```py\nfrom form_tools.form_meta.extractors.pdf_form_extractor import PdfFormMetaExtractor\n\n# Instantiate extractor\npfme = PdfFormMetaExtractor()\n\n# Create FormMetadata object and populate\n# image directory template_images\nform_metadata = pfme.extract_meta(\n    form_template_path=\"my_form.pdf\",\n    form_image_dir=\"template_images\"\n)\n\n# Write FormMetadata to json file\nform_metadata.to_json(\n    \"my_form_meta.json\",\n)\n```\n\nThe output metadata should contain bounding box coordinates for each field in the form that correspond to regions in the images outputted to `template_images`.\n\n**Note**: The output metadata will not be able to be used immediately to align a scanned image to the template as the `form_identifier` key and `identifier` key for each `form_page` in the metadata will need to be populated with a valid regular expression so that the correct page in the scanned image can be compared with the correct page in the template images.\n\n### Aligning scanned images to a template\n\nOnce you have a complete form metadata file for your template and a populated image directory you can attempt to align a scanned form, say `my_scanned_form.pdf` to the template and extract field thumbnails.\n\nYou will first need to prepare a config file to specify the `opencv` algorithms to use for the alignment process. An example `config.yaml` would be as follows:\n\n```yaml\ndetector:\n  name: SIFT\nmatcher:\n  id: FLANN\n  args:\n    - algorithm: 1\n      trees: 5\n    - check: 50\nknn: 2\nproportion: 0.7\nocr_options:\n  rotation_engine: tesseract\n  text_extraction_engine: tesseract\npass_directory: s3://my-bucket/pass_directory\nfail_directory: s3://my-bucket/fail_directory\nform_metadata_directory: metadata\n```\n\nThis config specifies that the `SIFT` algorithm should be used for keypoint detection and the `FLANN` algorithm should be used for keypoint matching, with 70% of the best keypoints kept (using KNN to decide on which of these are best). Also, note that we've put the output metadata in a `metadata` subdirectory in our working directory.\n\nTo align the scanned image from the command line you would then run:\n\n```\nform-tools process-form my_scanned_form.pdf config.yaml\n```\n\nTo interact with the API directly in python you would use the `FormOperator` class.\n\n```py\nfrom form_tools.form_operators import FormOperator\n\nform_operator = FormOperator.create_from_config(\"config.yaml\")\n\n_ = form_operator.run_full_pipeline(\n    form_path=\"my_scanned_form.pdf\",\n    pass_dir=\"s3://my-bucket/pass_directory\",\n    fail_dir=\"s3://my-bucket/fail_directory\",\n    form_meta_directory=\"metadata\",\n)\n```\n\n> **Note**: The scanned image could be stored in an AWS S3 bucket. In that case you would pass the S3 path (e.g. `s3://my-bucket/my_scanned_form.pdf`). Only the config and metadata directory need to be located in your local working directory.\n\n## Running documentation locally\n\n`mkdocs` is used to document `form-tools`. To run the documentation locally, run `mkdocs serve` on the command line and follow the link to the local host.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "form-tools",
    "package_url": "https://pypi.org/project/form-tools/",
    "platform": null,
    "project_url": "https://pypi.org/project/form-tools/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/form-tools/0.1.2/",
    "requires_dist": [
      "awswrangler (>=2.17.0,<3.0.0)",
      "dataengineeringutils3 (>=1.4.1,<2.0.0)",
      "Pillow (>=9.2.0,<10.0.0)",
      "opencv-python (>=4.6.0.66,<5.0.0.0)",
      "pdf2image (>=1.16.0,<2.0.0)",
      "pytesseract (>=0.3.9,<0.4.0)",
      "pdfminer-six (>=20220524,<20220525)",
      "jsonschema (>=4.7.2,<5.0.0)",
      "mojap-metadata (>=1.10.2,<2.0.0)",
      "pydantic (>=1.10.2,<2.0.0)",
      "charset-normalizer (>=2.1.0,<3.0.0)",
      "tesserocr (>=v2.5.2,<3.0.0)",
      "arrow-pd-parser (>=v1.3.3,<2.0.0)"
    ],
    "requires_python": ">=3.9,<3.11",
    "summary": "",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17095917,
  "releases": {
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "265023eb6d6525c2fd528487a060b4ed4157569f666ab51506b8eeab08a0dd64",
          "md5": "d498f9176aafdb29c1e27ea494fa3162",
          "sha256": "c0eeb0ce67cd29c59ec9075e9f4a858de3d8ab22afdd19605737426f184e8cc6"
        },
        "downloads": -1,
        "filename": "form_tools-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d498f9176aafdb29c1e27ea494fa3162",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<3.11",
        "size": 38771,
        "upload_time": "2023-02-28T13:49:05",
        "upload_time_iso_8601": "2023-02-28T13:49:05.140911Z",
        "url": "https://files.pythonhosted.org/packages/26/50/23eb6d6525c2fd528487a060b4ed4157569f666ab51506b8eeab08a0dd64/form_tools-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7a0761d2544d9f1dff067f1ed15bc9cff0b0c546e970ba05fa10bfdcf583baad",
          "md5": "885b249e8f8f0cbb62d8e15b319d292d",
          "sha256": "54f8abd21b09ab137bbe94cc262170a18f296885181b810364a110dc6ab3059a"
        },
        "downloads": -1,
        "filename": "form_tools-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "885b249e8f8f0cbb62d8e15b319d292d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<3.11",
        "size": 32390,
        "upload_time": "2023-02-28T13:49:06",
        "upload_time_iso_8601": "2023-02-28T13:49:06.867262Z",
        "url": "https://files.pythonhosted.org/packages/7a/07/61d2544d9f1dff067f1ed15bc9cff0b0c546e970ba05fa10bfdcf583baad/form_tools-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "265023eb6d6525c2fd528487a060b4ed4157569f666ab51506b8eeab08a0dd64",
        "md5": "d498f9176aafdb29c1e27ea494fa3162",
        "sha256": "c0eeb0ce67cd29c59ec9075e9f4a858de3d8ab22afdd19605737426f184e8cc6"
      },
      "downloads": -1,
      "filename": "form_tools-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d498f9176aafdb29c1e27ea494fa3162",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9,<3.11",
      "size": 38771,
      "upload_time": "2023-02-28T13:49:05",
      "upload_time_iso_8601": "2023-02-28T13:49:05.140911Z",
      "url": "https://files.pythonhosted.org/packages/26/50/23eb6d6525c2fd528487a060b4ed4157569f666ab51506b8eeab08a0dd64/form_tools-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7a0761d2544d9f1dff067f1ed15bc9cff0b0c546e970ba05fa10bfdcf583baad",
        "md5": "885b249e8f8f0cbb62d8e15b319d292d",
        "sha256": "54f8abd21b09ab137bbe94cc262170a18f296885181b810364a110dc6ab3059a"
      },
      "downloads": -1,
      "filename": "form_tools-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "885b249e8f8f0cbb62d8e15b319d292d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9,<3.11",
      "size": 32390,
      "upload_time": "2023-02-28T13:49:06",
      "upload_time_iso_8601": "2023-02-28T13:49:06.867262Z",
      "url": "https://files.pythonhosted.org/packages/7a/07/61d2544d9f1dff067f1ed15bc9cff0b0c546e970ba05fa10bfdcf583baad/form_tools-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}