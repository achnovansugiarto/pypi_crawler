{
  "info": {
    "author": "Souvik Saha",
    "author_email": "ssouvik.191@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# Image Augmentations\n\nThis is a bounding box level image augmentation tool, it can perform 14 annotations. The important ones are rotation, affine, zooming in and out, noise, and blur. The augmentations were applied to a fraction of the data (40 - 50 percent of the images out of 100 can be augmented).When rotating or zooming in and out, the bounding box coordinates will also change as the image is rotated or zoomed.\n\n### Create a folder first, inside that folder keep your image annotation folder.\n\n### Create a virtual environment\n\n```python\n\npip install virtualenv\n#name your environment\npython3 -m venv <your env name>\n\n#activate the environment --> for linux user\nsource <your env name>/bin/activate\n\n#activate the environment  --> for windows user\n<your env name>/Source/activate.ps1\n\n```\n\n### Installation (for pip installation)\n\n```python\npip install image_augs\n```\n\n## After installation\n\n**create a .py script inside your created folder**\n\n**This Script is for OBJECT DETECTION**\n\n```python\n#import these modules in your created <scriptname>.py file\n\n\nfrom object_detection_aug.combined import main\nfrom object_detection_aug.converter_for_txtToYolo import converter\n\n\n\nannotation_folder = 'test_objectDetection'  # YOUR ANNOTATION FOLDER NAME\nnew_aug_saved_folder = 'test_object'        # AUGMENTATION SAVED FOLDER\nresize_image = 640                          # REIZE IMAGE\ntest_split = 0.20                           # TEST SPLIT \n\n\n\noutput = converter(annotation_folder,resize_im=resize_image)\n\n# DO YOUR DESIRED AUGMENTATION\n# IF BLUR TRUE AND BLUR_F SET TO 0.7 THEN IT WILL TAKE 50% OF YOUR TRAINNING DATA AND APPLY BLUR ON IT.\ndicc = main(folder=new_aug_saved_folder,\n\n\n    test_split=test_split,\n\n    blurs=True, blur_f=0.7,\n\n    noise=True, noise_f=0.6,\n\n    NB=True, NB_f=0.5,\n\n    hue=True, hue_f=0.5,\n\n    sat=True, sat_f=0.5,\n\n    bright=True, bright_f=0.7,\n\n    contrast=True , contrast_f=0.5,\n\n    rotation=True, rotation_f=0.5,\n\n    zoom=True, zoom_f=0.5,\n\n    affine=True, affine_f=0.5,\n\n    translation=True, translation_f=0.5,\n\n    vertical_flip=True, vertical_f=0.5)\n\n#results will be saved in < your given folder >\n```\n\n**This Script is for INSTANCE SEGMENTATION**\n\n```python\n#import these modules in your created <scriptname>.py file\nfrom instance_seg.json_reader_poly import PolygonAugmentation\n\nannotation_folder = '<YOUR ANNOTATION FOLDER NAME>'    \nnew_aug_saved_folder = '< AUGMENTATION SAVED FOLDER>'\nresize_image = 640\ntrain_split = 0.80\n\nim_aug_helper = PolygonAugmentation(aug_save_folder_name=new_aug_saved_folder,\n                                    image_resize=resize_image)\n\nim_aug_helper.Image_augmentation(annotation_folder,\n                                 \n                                 train_split=train_split,\n\n                                    blur=True,  blur_f=0.8,\n\n                                    rotate=True, rotate_f = 0.8, \n\n                                    noise=True, noise_f=0.8,\n\n                                    perspective=True, perspective_f = 0.8,\n\n                                    affine=True, affine_f=0.8,\n\n                                    brightness=True, brightness_f=0.8,\n                                    \n                                    hue=True, hue_f=0.8,\n\n                                    removesaturation=True, removesaturation_f=0.8,\n\n                                    contrast=True, contrast_f=0.8,\n\n                                    upflip=True, upflip_f=0.8,\n\n                                    shear=True , shear_f=0.8, \n\n                                    rotate90=True, rotate90_f =0.8,\n\n                                    blur_and_noise=True, blur_and_noise_f=0.8,\n\n                                    image_cutout = True, image_cutout_f=0.8,\n                                    \n                                    mix_aug=True, mix_aug_f=0.8,\n                                    \n                                    temperature_change=True, temperature_change_f=0.8)\n#results will be saved in < your given folder >\n```\n\n**This Script is for IMAGE CLASSIFICATION**\n\n```python\n#import these modules in your created <scriptname>.py file\nfrom classification.classification_combined import ImageAugmentHelper\n\n\n### PARAMS ###\nsource_folder = '<source folder>'\naug_saved_folder = '<augmentation saved folder>'\ntrain_split = 0.5\nimage_height = 512\nimage_width = 512\n\nclassification_aug = ImageAugmentHelper(source_folder=source_folder,\n                                        aug_save_folder_name=aug_saved_folder,\n                                        train_split=train_split,\n                                        height=image_height,\n                                        width=image_width)\n\n\nclassification_aug.augmentations(\n\n    save_raw_images=True,\n\n    blur=True, blur_f=1.0,\n\n    noise=True,noise_f=1.0,\n\n    horizontalFlip=True, horizontalFlip_f=1.0,\n\n    brightness=True, brightness_f=1.0,\n\n    contrast=True, contrast_f=1.0,\n\n    hue=True, hue_f=1.0,\n\n    saturation=True, saturation_f=1.0,\n\n    zoom=True, zoom_f=1.0,\n\n    perspective=True, perspective_f=1.0,\n\n    translation=True, translation_f=1.0,\n\n    sharpen=True, sharpen_f=1.0,\n    \n    randomShadow=True, randomShadow_f=1.0\n)\n\n\nUse github to clone [image_augmentations](https://github.com/Souviksaha1998/Image_augmentations) repo.\n\n\n\n\n## Contributing\nPull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.\n\n## License\n[MIT](https://choosealicense.com/licenses/mit/)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "machine_learning,development,data_augmentations",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "image-augs",
    "package_url": "https://pypi.org/project/image-augs/",
    "platform": null,
    "project_url": "https://pypi.org/project/image-augs/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/image-augs/1.0.1/",
    "requires_dist": [
      "opencv-contrib-python",
      "opencv-python (==4.6.0.66)",
      "albumentations (==1.3.0)",
      "tqdm (==4.64.0)",
      "tornado (==6.2)",
      "bbox-visualizer (==0.1.0)",
      "pybboxes (==0.1.5)",
      "scikit-image (==0.19.3)",
      "Pillow (==9.1.1)",
      "matplotlib",
      "rich (==12.6.0)",
      "imgaug (==0.4.0)"
    ],
    "requires_python": ">=3.7",
    "summary": "Image Augs supports Augmentation for Object Detection , Instance Segmentation and classification tasks.",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17506995,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4482f54da4501aef6747ec9db69213c27e00079ee4adbeafe6768f077a2ad480",
          "md5": "c8fecf0ca1a94e6802f744ebb352b3aa",
          "sha256": "d6866e73b8973211d1538d18ad216f55047a14a01fff50083b2c7a338298852b"
        },
        "downloads": -1,
        "filename": "image_augs-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c8fecf0ca1a94e6802f744ebb352b3aa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 20319,
        "upload_time": "2022-11-01T11:17:58",
        "upload_time_iso_8601": "2022-11-01T11:17:58.164690Z",
        "url": "https://files.pythonhosted.org/packages/44/82/f54da4501aef6747ec9db69213c27e00079ee4adbeafe6768f077a2ad480/image_augs-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d6d5dc8cdbade1184bc3ffeaf57b2f686bbb3919daa15de05a001fb028b96c06",
          "md5": "2ad953d35631da40f1cae5a46679d230",
          "sha256": "980dc57da76ad0de40a49b4b7f42a78fcfdf99d505245d4398d341121406794a"
        },
        "downloads": -1,
        "filename": "image_augs-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2ad953d35631da40f1cae5a46679d230",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 35700,
        "upload_time": "2023-03-30T07:47:49",
        "upload_time_iso_8601": "2023-03-30T07:47:49.456117Z",
        "url": "https://files.pythonhosted.org/packages/d6/d5/dc8cdbade1184bc3ffeaf57b2f686bbb3919daa15de05a001fb028b96c06/image_augs-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d22a85dc20de83d1b384900d531df8754c098ff06f62b604f9de0fcbbeb30e14",
          "md5": "97f0ff641a7c64cea88866d2751986a9",
          "sha256": "c6b32c44f806cfd3558f85e0d0a065950b642c486cef9cd6ae6a68ed6a0e6524"
        },
        "downloads": -1,
        "filename": "image_augs-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "97f0ff641a7c64cea88866d2751986a9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 29172,
        "upload_time": "2023-03-30T07:47:51",
        "upload_time_iso_8601": "2023-03-30T07:47:51.911466Z",
        "url": "https://files.pythonhosted.org/packages/d2/2a/85dc20de83d1b384900d531df8754c098ff06f62b604f9de0fcbbeb30e14/image_augs-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d6d5dc8cdbade1184bc3ffeaf57b2f686bbb3919daa15de05a001fb028b96c06",
        "md5": "2ad953d35631da40f1cae5a46679d230",
        "sha256": "980dc57da76ad0de40a49b4b7f42a78fcfdf99d505245d4398d341121406794a"
      },
      "downloads": -1,
      "filename": "image_augs-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2ad953d35631da40f1cae5a46679d230",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 35700,
      "upload_time": "2023-03-30T07:47:49",
      "upload_time_iso_8601": "2023-03-30T07:47:49.456117Z",
      "url": "https://files.pythonhosted.org/packages/d6/d5/dc8cdbade1184bc3ffeaf57b2f686bbb3919daa15de05a001fb028b96c06/image_augs-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d22a85dc20de83d1b384900d531df8754c098ff06f62b604f9de0fcbbeb30e14",
        "md5": "97f0ff641a7c64cea88866d2751986a9",
        "sha256": "c6b32c44f806cfd3558f85e0d0a065950b642c486cef9cd6ae6a68ed6a0e6524"
      },
      "downloads": -1,
      "filename": "image_augs-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "97f0ff641a7c64cea88866d2751986a9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 29172,
      "upload_time": "2023-03-30T07:47:51",
      "upload_time_iso_8601": "2023-03-30T07:47:51.911466Z",
      "url": "https://files.pythonhosted.org/packages/d2/2a/85dc20de83d1b384900d531df8754c098ff06f62b604f9de0fcbbeb30e14/image_augs-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}