{
  "info": {
    "author": "Pete Crocker",
    "author_email": "pete@petecrocker.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Netconan\n========\n\nNetconan (network configuration anonymizer) anonymizes text files that contain sensitive network information.\n\nWith Netconan, a sensitive input file\n\n.. code-block:: bash\n\n    $ cat sensitive/cisco.cfg \n    ! This is intentionet's sensitive comment\n    username admin password 7 122A001901\n    enable secret 5 $1$wtHI$0rN7R8PKwC30AsCGA77vy.\n    !\n    tacacs-server host 1.2.3.4 key pwd1234\n    ip address 10.10.20.30/24\n    ip address 2001:2002::9d3b:1\n    !\n    route-map sea-to-lax ...\n    route-map sea-to-atl ...\n\ncan be anonymized\n\n.. code-block:: bash\n\n    $ netconan -i sensitive -o anonymized \\\n        --sensitive-words intentionet,sea,lax,atl \\\n        --anonymize-passwords \\\n        --anonymize-ips \n    WARNING No salt was provided; using randomly generated \"WNo5pX28MJOrqxfv\"\n    INFO Anonymizing cisco.cfg\n\nto produce an output file you can feel comfortable sharing.\n\n.. code-block:: bash\n\n    $ cat anonymized/cisco.cfg \n    ! This is db1792's sensitive comment\n    username admin password 7 09424B1D1A0A1913053E012724322D3765\n    enable secret 5 $1$0000$EhfXcDfB7iiakW6mwMy1i.\n    !\n    tacacs-server host 7.227.130.88 key netconanRemoved2\n    ip address 10.72.218.183/24\n    ip address cd7e:83e:1eaf:2ada:7535:591e:6d47:a4b8\n    !\n    route-map e69ceb-to-880ac2 ...\n    route-map e69ceb-to-5d37ad ...\n\nInstalling Netconan\n===================\n\nInstall Netconan using ``pip``:\n\n.. code-block:: bash\n\n    $ pip install netconan\n\nFeatures\n========\n\nNetconan can anonymize *many types of sensitive information*:\n\n* Sensitive strings like passwords or SNMP community strings (``--anonymize-passwords``, ``-p``), for many common network vendors.\n* IPv4 and IPv6 addresses (``--anonymize-ips``, ``-a``).\n* User-specified sensitive words (``--sensitive-words``, ``-w``).  *Note that any occurrence of a specified sensitive word will be replaced regardless of context, even if it is part of a larger string.*\n* User-specified AS numbers (``--as-numbers``, ``-n``).  *Note that any number matching a specified AS number will be anonymized.*\n\n\nNetconan attempts to *preserve useful structure*. For example,\n\n* Netconan preserves prefixes when anonymizing IPv4 and IPv6 addresses: IP addresses with a common prefix before anonymization will share the same prefix length after anonymization. For more information, see J. Xu et al., *On the Design and Performance of Prefix-Preserving IP Traffic Trace Anonymization*, ACM SIGCOMM Workshop on Internet Measurement, 2001 [`link <https://smartech.gatech.edu/bitstream/handle/1853/6573/GIT-CC-01-22.pdf>`_].\n\n* IPv4 classes and private-use prefixes (see `IANA IPv4 assignments <https://www.iana.org/assignments/iana-ipv4-special-registry/iana-ipv4-special-registry.xhtml>`_) are preserved by default, but can be overridden (with ``--preserve-prefixes`` e.g. ``--preserve-prefixes 12.0.0.0/8`` will preserve a leading octet ``12`` of IP addresses encountered but anonymize octets after the ``12``).\n\n* By default, the last ``8`` bits of each IP address are preserved. This prevents IP anonymization from breaking important network structure such as point-to-point IPv4 /30 links or NAT pools. This can be overridden to a new number ``B`` using ``--preserve-host-bits B``, and it can be disabled entirely using ``--preserve-host-bits 0``.\n\n* Specific addresses can optionally be preserved, e.g.\n\n  - ``--preserve-addresses`` skips anonymizing the specified network or address. For example, ``--preserve-addresses 12.0.0.0/8,13.12.11.10`` will skip anonymization for any address in the ``12.0.0.0/8`` network and skip anonymizing ``13.12.11.10``.\n\n  - ``--preserve-private-addresses`` skips anonymizing all addresses that fall under private-use blocks.\n\n* AS number blocks are preserved (i.e. an anonymized public AS number will still be in the public AS number range after anonymization).\n\n* Standard password and hash formats (salted md5, Cisco Type 7, Juniper Type 9) are recognized and substituted with format-compliant replacements.\n\nNetconan is *deterministic* when provided the same user-controllable salt (``--salt``, ``-s``). Files processed using the same salt are compatible (e.g., IP addresses anonymized the same way) whether anonymized together or separately. Setting the salt in a configuration file is recommended, so that you can get compatible anonymization each time you use netconan.\n\nFor *reversible operations* (specifically, IP address anonymization), Netconan can produce a de-anonymized file (``--undo``, ``-u``) when provided with the same salt used in anonymization (``--salt``, ``-s``).\n\nRunning netconan\n================\n\nNetconan processes the ``input`` file or recursively processes files in the ``input`` directory (skipping files starting with ``.``) and saves processed files at the specified ``output``. \n\nFor more information about less commonly-used features, see the Netconan help (``-h``).  For more information on config file syntax, see `here <https://goo.gl/R74nmi>`_.\n\n.. code-block:: bash\n\n    usage: netconan [-h] [--version] [-a] [-c CONFIG] [-d DUMP_IP_MAP] -i INPUT\n                    [-l {DEBUG,INFO,WARNING,ERROR,CRITICAL}] [-n AS_NUMBERS] -o\n                    OUTPUT [-p] [-r RESERVED_WORDS] [-s SALT] [-u]\n                    [-w SENSITIVE_WORDS] [--preserve-prefixes PRESERVE_PREFIXES]\n                    [--preserve-addresses PRESERVE_ADDRESSES]\n                    [--preserve-private-addresses]\n                    [--preserve-host-bits PRESERVE_HOST_BITS]\n\n    Args that can start with '--' can also be set in a config file (specified via\n    -c). If an arg is specified in more than one place, then command line values\n    override config file values which override defaults. Config file syntax\n    allows: key=value, flag=true, stuff=[a,b,c] (for more details, see here\n    https://goo.gl/R74nmi).\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      --version             Print version number and exit\n      -a, --anonymize-ips   Anonymize IP addresses\n      -c CONFIG, --config CONFIG\n                            Netconan configuration file with defaults for these\n                            CLI parameters\n      -d DUMP_IP_MAP, --dump-ip-map DUMP_IP_MAP\n                            Dump IP address anonymization map to specified file\n      -i INPUT, --input INPUT\n                            Input file or directory containing files to anonymize\n      -l {DEBUG,INFO,WARNING,ERROR,CRITICAL}, --log-level {DEBUG,INFO,WARNING,ERROR,CRITICAL}\n                            Determines what level of logs to display\n      -n AS_NUMBERS, --as-numbers AS_NUMBERS\n                            List of comma separated AS numbers to anonymize\n      -o OUTPUT, --output OUTPUT\n                            Output file or directory where anonymized files are\n                            placed\n      -p, --anonymize-passwords\n                            Anonymize password and snmp community lines\n      -r RESERVED_WORDS, --reserved-words RESERVED_WORDS\n                            List of comma separated words that should not be\n                            anonymized\n      -s SALT, --salt SALT  Salt for IP and sensitive keyword anonymization\n      -u, --undo            Undo reversible anonymization (must specify salt)\n      -w SENSITIVE_WORDS, --sensitive-words SENSITIVE_WORDS\n                            List of comma separated keywords to anonymize\n      --preserve-prefixes PRESERVE_PREFIXES\n                            List of comma separated IP prefixes to preserve.\n                            Specified prefixes are preserved, but the host bits\n                            within those prefixes are still anonymized. To\n                            preserve prefixes and host bits in specified blocks,\n                            use --preserve-addresses instead\n      --preserve-addresses PRESERVE_ADDRESSES\n                            List of comma separated IP addresses or networks to\n                            preserve. Prefixes and host bits within those networks\n                            are preserved. To preserve just prefixes and anonymize\n                            host bits, use --preserve-prefixes\n      --preserve-private-addresses\n                            Preserve private-use IP addresses. Prefixes and host\n                            bits within the private-use IP networks are preserved.\n                            To preserve specific addresses or networks, use\n                            --preserve-addresses instead. To preserve just\n                            prefixes and anonymize host bits, use --preserve-\n                            prefixes\n      --preserve-host-bits PRESERVE_HOST_BITS\n                            Preserve the trailing bits of IP addresses, aka the\n                            host bits of a network. Set this value large enough to\n                            represent the largest interface network (e.g., 8 for a\n                            /24 or 12 for a /20) or NAT pool.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/petercrocker/netconan",
    "keywords": "network configuration anonymizer",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "netconan-nsv",
    "package_url": "https://pypi.org/project/netconan-nsv/",
    "platform": "",
    "project_url": "https://pypi.org/project/netconan-nsv/",
    "project_urls": {
      "Homepage": "https://github.com/petercrocker/netconan"
    },
    "release_url": "https://pypi.org/project/netconan-nsv/1.0a2/",
    "requires_dist": [
      "bidict (<1.0.0)",
      "configargparse (<1.0.0)",
      "ipaddress (<2.0.0)",
      "passlib (<2.0.0)",
      "six (<2.0.0)",
      "enum34 (<2.0.0) ; python_version < \"3.4\"",
      "flake8-docstrings (<2.0.0) ; extra == 'dev'",
      "flake8 (<4.0.0) ; extra == 'dev'",
      "pydocstyle (<4.0.0) ; extra == 'dev'",
      "pytest-cov (<3.0.0) ; extra == 'test'",
      "pytest (<5.0.0,>=4.6.0) ; extra == 'test'",
      "requests-mock (<2.0.0) ; extra == 'test'",
      "testfixtures (<7.0.0) ; extra == 'test'",
      "zipp (<2.2) ; extra == 'test'"
    ],
    "requires_python": "",
    "summary": "Netconan network configuration anonymization utilities",
    "version": "1.0a2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9955874,
  "releases": {
    "1.0a1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "98583fef6e7051663c97228b477f0e63a3e5fad50823df91014136f53ece9f78",
          "md5": "8d299ec2c5e59a1eb686b6db849b3962",
          "sha256": "4885c2ffae103ff68104a0dc124fca330799b77383f3650124d37c6906ead3df"
        },
        "downloads": -1,
        "filename": "netconan_nsv-1.0a1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8d299ec2c5e59a1eb686b6db849b3962",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 49195,
        "upload_time": "2021-04-01T15:51:34",
        "upload_time_iso_8601": "2021-04-01T15:51:34.941662Z",
        "url": "https://files.pythonhosted.org/packages/98/58/3fef6e7051663c97228b477f0e63a3e5fad50823df91014136f53ece9f78/netconan_nsv-1.0a1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0a2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f72208310a32ff9d963f7656269aa9165f19e6dc6017cefcd3da70607df0c2e",
          "md5": "144f3eb8e661eb5b8118c363c60b0e78",
          "sha256": "c82dbf49cf8268805201b0649c9209b8843ccc4e865cfce74438aabb7ae7cdff"
        },
        "downloads": -1,
        "filename": "netconan_nsv-1.0a2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "144f3eb8e661eb5b8118c363c60b0e78",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 49239,
        "upload_time": "2021-04-02T08:47:29",
        "upload_time_iso_8601": "2021-04-02T08:47:29.414296Z",
        "url": "https://files.pythonhosted.org/packages/1f/72/208310a32ff9d963f7656269aa9165f19e6dc6017cefcd3da70607df0c2e/netconan_nsv-1.0a2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1f72208310a32ff9d963f7656269aa9165f19e6dc6017cefcd3da70607df0c2e",
        "md5": "144f3eb8e661eb5b8118c363c60b0e78",
        "sha256": "c82dbf49cf8268805201b0649c9209b8843ccc4e865cfce74438aabb7ae7cdff"
      },
      "downloads": -1,
      "filename": "netconan_nsv-1.0a2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "144f3eb8e661eb5b8118c363c60b0e78",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 49239,
      "upload_time": "2021-04-02T08:47:29",
      "upload_time_iso_8601": "2021-04-02T08:47:29.414296Z",
      "url": "https://files.pythonhosted.org/packages/1f/72/208310a32ff9d963f7656269aa9165f19e6dc6017cefcd3da70607df0c2e/netconan_nsv-1.0a2-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}