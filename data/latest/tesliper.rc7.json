{
  "info": {
    "author": "MichaĹ‚ M. WiÄ™cĹ‚aw",
    "author_email": "wieclawmm@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Chemistry"
    ],
    "description": "[![Build status](https://ci.appveyor.com/api/projects/status/vh0t6udj7mnpnfoe?svg=true)](https://ci.appveyor.com/project/mishioo/tesliper-jjshl)\n[![Documentation Status](https://readthedocs.org/projects/tesliper/badge/?version=stable)](https://tesliper.readthedocs.io/en/stable/?badge=stable)\n[![Coverage Status](https://coveralls.io/repos/github/mishioo/tesliper/badge.svg)](https://coveralls.io/github/mishioo/tesliper)\n[![PyPi version](https://badgen.net/pypi/v/tesliper/)](https://pypi.org/project/tesliper)\n[![PyPI pyversions](https://img.shields.io/pypi/pyversions/tesliper.svg)](https://pypi.python.org/pypi/tesliper/)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n[![License](https://img.shields.io/badge/License-BSD_2--Clause-orange.svg)](https://opensource.org/licenses/BSD-2-Clause)\n[![status](https://joss.theoj.org/papers/3dedbebd87078d759ac2c40afaf47138/status.svg)](https://joss.theoj.org/papers/3dedbebd87078d759ac2c40afaf47138)\n\n<img align=\"right\" width=\"100\" height=\"100\" src=\"https://raw.githubusercontent.com/mishioo/tesliper/master/tesliper/tesliper.ico\">\n\n# tesliper\n\n`tesliper`: Theoretical Spectroscopist's Little Helper is a program for batch processing\nof Gaussian output files, focused on calculations of vibrational, electronic, and\nscattering spectra from Gaussian-calculated quantum properties of molecule's conformers.\n\nIt allows to easily exclude conformers that are not suitable for further analysis:\nerroneous, not optimized, of higher energy or lower contribution than a user-given\nthreshold. It also implements an RMSD sieve, enabling one to filter out similar\nstructures. It lets you calculate theoretical IR, VCD, UV, ECD, Raman, and ROA spectra\nfor each conformer or as a population-weighted average and export obtained spectral data\nin one of supported file formats: `.txt`, `.csv`, or `.xlsx`. Finally, if allows to\neasily setup a next calculations step with batch export to `.gjf` Gaussian input files.\n\n`tesliper` is written in Python 3.6 and makes use of some additional third party\npackages (see below or requirements.txt). It may be used as a package or as a\nstand-alone application with dedicated GUI.\n\n- [tesliper](#tesliper)\n- [Getting Started](#getting-started)\n  - [Requirements](#requirements)\n  - [Installing to your Python distribution](#installing-to-your-python-distribution)\n  - [A standalone application](#a-standalone-application)\n- [How to use](#how-to-use)\n  - [Primer](#primer)\n  - [In Python scripts](#in-python-scripts)\n  - [A graphical interface](#a-graphical-interface)\n- [License](#license)\n- [Contributing to `tesliper`](#contributing-to-tesliper)\n  - [Bugs and suggestions](#bugs-and-suggestions)\n  - [Participating in code](#participating-in-code)\n  - [Roadmap](#roadmap)\n  - [Acknowledgements](#acknowledgements)\n\n# Getting Started\n\nYou can use `tesliper` from python or as standalone application with dedicated graphical\nuser interface. See below for details.\n\n## Requirements\n\n```\nPython 3.6+\nnumpy\nopenpyxl\nmatplotlib (optional, for GUI)\n```\n\n`tesliper` uses `tkinter` to deliver the graphical interface. It is included in\nmost Python distributions, but please be aware, that some might miss it. You will\nneed to install it manually in such case.\n\n## Installing to your Python distribution\n\n`tesliper` is available on PyPI, you can install it to your python distribution by\nsimply running:\n\n`$ python -m pip install tesliper`\n\nor\n\n`$ python -m pip install tesliper[gui]`\n\nif you would like to be able to use a graphical interface.\n\n## A standalone application\n\nThis option is currently available only for Windows users.\nTo get your copy of `tesliper`, simply download a `Tesliper.exe` file from the\n[latest relase](https://github.com/Mishioo/tesliper/releases/latest).\nThis file is a standalone application, no installation is required.\n\n# How to use\nFull documentation is available online: https://tesliper.readthedocs.io/.\n\n## Primer\nConventions that are important to note:\n\n- `tesliper` stores multiple data entries of various types for each conformer. To\nprevent confusion with Python's data ``type`` and with data itself, `tesliper` refers to\nspecific kinds of data as \"genres\". Genres in code are represented by specific strings,\nused as identifiers. To learn about data genres known to `tesliper`, see [Available data\ngenres](https://tesliper.readthedocs.io/en/stable/genres.html).\n- `tesliper` identifies conformers using a stem of an extracted file (i.e. its filename\nwithout extension). When files with identical names are extracted in course of\nsubsequent `Tesliper.extract` calls or in recursive extraction using\n``Tesliper.extract(recursive=True)``, they are treated as data for one conformer.\nThis enables to join data from subsequent calculations steps, e.g. geometry\noptimization, vibrational spectra simulation, and electronic spectra simulation.\nPlease note that if specific data genre is available from more than one calculation\njob, only recently extracted values will be stored.\n- `tesliper` was designed to deal with multiple conformers of single molecule and may\nnot work properly when used to process data concerning different molecules (i.e.\nhaving different number of atoms, different number of degrees of freedom, etc.).\nIf you want to use it for such purpose anyway, you may set\n`Tesliper.conformers.allow_data_inconsistency` to ``True``. `tesliper` will then stop\ncomplaining and try to do its best.\n\n## In Python scripts\n`Tesliper` class is the main access point to `tesliper`'s functionality. It allows you\nto extract data from specified files, provides a proxy to the trimming\nfunctionality, gives access to data in form of specialized arrays, enables you\nto calculate and average desired spectra, and provides an easy way to export data.\n\nMost basic use might look like this:\n```python\nfrom tesliper import Tesliper\ntslr = Tesliper()\ntslr.extract()\ntslr.calculate_spectra()\ntslr.average_spectra()\ntslr.export_averaged()\n```\nThis extracts data from files in the current working directory, calculates\navailable spectra using standard parameters, averages them using available energy\nvalues, and exports to current working directory in .txt format.\n\nYou can customize this process by specifying call parameters for used methods\nand modifying `Tesliper`'s configuration attributes:\n- to change source directory\nor location of exported files instantiate `Tesliper` object with `input_dir`\nand `output_dir` parameters specified, respectively. You can also set appropriate\nattributes on the instance directly;\n- to extract only selected files in `input_dir` use `wanted_files` init parameter.\nIt should be given an iterable of filenames you want to parse. Again, you can\nalso directly set an identically named attribute;\n- use `Tesliper.conformers.trim...` methods to easily filter out conformers you wish\nto ignore in further analysis;\n- to change parameters used for calculation of spectra, modify appropriate entries\nof `parameters` attribute;\n- use other export methods to export more data and specify `fmt` parameter\nin method's call to export to other file formats.\n\n```python\ntslr = Tesliper(input_dir=\"./myjob/optimization/\", output_dir=\"./myjob/output/\")\ntslr.wanted_files = [\"one\", \"two\", \"three\"]  # only files with these names\ntslr.extract()  # use tslr.input_dir as source\ntslr.extract(path=\"./myjob/vcd_sim/\")  # use other input_dir\ntslr.conformers.trim_not_optimized()  # filtering out unwanted conformers\ntslr.parameters[\"vcd\"].update({\"start\": 500, \"stop\": 2500, \"width\": 2})\ntslr.calculate_spectra(genres=[\"vcd\"])  # we want only VCD spectrum\ntslr.average_spectra()\ntslr.export_averaged(mode=\"w\")  # overwrite previously exported files\ntslr.export_activities(fmt=\"csv\")  # save activities for analysis elsewhere\ntslr.output_dir = \"./myjob/ecd_sim/\"\ntslr.export_job_file(  # prepare files for next step of calculations\n    route=\"# td=(singlets,nstates=80) B3LYP/Def2TZVP\"\n)\n```\n\n## A graphical interface\nIf you are using `tesliper` as a standalone application, simply double click on the\n`Tesliper.exe` file to start the application. To invoke it from the command line,\njust run `tesliper-gui`. GUI consists of three panels and a number of controls.\nThe panels are: \"Extracted data\", \"Energies list\", and \"Spectra view\". First two\noffer a list of conformers read so far using \"Chose files\" and \"Chose folder\" buttons\non the left. The last enables to preview calculated spectra.\n\n![screenshot](https://raw.githubusercontent.com/mishioo/tesliper/master/docs/source/_static/screenshots/16426974012.png)\n\n- \"Extracted data\" panel shows an identifier of each conformer (a file name) and an\noverview of data extracted. Little checkboxes on the left of each conformer may be\nclicked to mark this conformer as \"kept\" or \"not kept\".\n- \"Energies list\" offers the same set of conformers and checkboxes, but with energies\nvalues listed for each conformer. The view may be changed using \"Show\" dropdown box\nin \"Energies and Structure\" section of controls, to present difference in energy\nbetween conformers or their percentage contribution in population.\n- \"Spectra view\" tab shows calculated spectra. It may be controlled using \"Calculate\nspectra\" section. After choosing a spectra genre to calculate you may control if it is\nsimulated using lorentzian or gaussian fitting function, change peak width, spectra\nbounds, etc. You may view spectra for one conformer, all of them stacked, or averaged.\nYou may also load an experimental spectrum (.txt or .csv format) for comparison.\n\n![screenshot](https://raw.githubusercontent.com/mishioo/tesliper/master/docs/source/_static/screenshots/16426984646.png)\n\nOnce done with extracting files and tweaking parameters, export selected data to desired\nformat or save the session for later using buttons in \"Session control\" section.\n\nA detailed tutorial with screenshots is available in the documentation:\nhttps://tesliper.readthedocs.io/en/stable/gui.html.\n\n# License\nThis project is licensed with BSD 2-Clause license.\nSee [LICENSE.txt](https://github.com/mishioo/tesliper/blob/master/LICENSE.txt)\nfile for details.\n\n# Contributing to `tesliper`\nContributions are welcome! `tesliper` is a growing project and definitely has room\nfor improvements. \n\n## Bugs and suggestions\nBug reports are of great value, if you encounter a problem please let me know by\nsubmitting a [new issue](https://github.com/mishioo/tesliper/issues/new).\nIf you have a suggestion how `tesliper` can be improved, please let me know as well!\n\n## Participating in code\nIf you'd like to contribute to `tesliper`'s codebase, that's even better! If there is a\nspecific bug that you know how to fix or a feature you'd like to develop, please let me\nknow via [issues](https://github.com/mishioo/tesliper/issues). To start coding, get your\nworking copy of `tesliper`'s source code by cloning the repository and then setup your\nenvironment by installing development dependencies (probably to a virtual environment):\n```\npython -m pip install .[dev]\n```\nPlease remember to add/update relevant tests along with your code changes.\nMake sure the test suite passes by running\n```\npython -m pytest test\n```\nor, if you'd like to also generate the coverage report, you can invoke the pytest\nwith the pytest-cov plugin (included in the \"dev\" installation), as shown below.\nThe .coveragerc file includes plugin's configuration (i.e. to omit GUI code).\n```\npython -m pytest --cov=tesliper --cov-config=.coveragerc test\n```\nIf you contribute code to `tesliper`, the test coverage badge will be updated by the CI\nservice after your changes are merged.\n\nAlthough [`mypy`](https://mypy.readthedocs.io/) is not incorporated in `tesliper`'s\ndevelopment (yet!), I believe that type hints greatly improve the experience of using\nthe package. Please, add them to the new code you submit. If you're willing to\nsupplement typing of the existing code, that would be very much welcome!\n\n`tesliper`'s codebase is formatted with [`black`](https://black.readthedocs.io/) and\n[`isort`](https://pycqa.github.io/isort/), please use these tools before submitting your\ncode contribution. To make it easier, you may use a pre-commit configuration available\nin this repository. To include it in your workflow, simply run `pre-commit install` in\nyour copy's root directory. Note, that this configuration also sets up\n[`flake8`](https://flake8.pycqa.org/) linter.\n\nTo get your change introduced to the codebase, please make a Pull Request to the `fixes`\nbranch for quick bug fixes or to the `dev` branch for new features and bigger changes.\nIf at a loss, do not hesitate to reach to me directly! :)\n\n## Roadmap\nIdeas for possible future improvements to the software are listed below. Based on the\nfeedback from the Community, I will decide, which ones are desired and worth working on.\n\n### New Functionality: <!-- omit in toc -->\n- command line interface\n- support for Jaguar & other packages\n- option for using `cclib` for parsing\n- spectra comparison feature\n- velocity and length electronic spectra comparison\n- parsing conformational search files\n- GUI: manually choose spectra colour\n\n### UX Improvements: <!-- omit in toc -->\n- supplement logging\n- auto finding optimal spectra range\n- GUI: export spectra as image\n- GUI: spectra colour by population\n- GUI: drag&drop support\n- GUI: display tooltips on hover\n\n\n## Acknowledgements\n\nMany thanks to the scientists, who advised me on the domain-specific details and helped\nto test the software:\n\n[orcid_logo]: https://info.orcid.org/wp-content/uploads/2019/11/orcid_16x16.png\n\n- Joanna Rode [![orcid_id][orcid_logo] 0000-0003-0592-4053](https://orcid.org/0000-0003-0592-4053)\n- Magdalena Jawiczuk [![orcid_id][orcid_logo] 0000-0003-2576-4042](https://orcid.org/0000-0003-2576-4042)\n- Marcin GĂłrecki [![orcid_id][orcid_logo] 0000-0001-7472-3875](https://orcid.org/0000-0001-7472-3875)\n\nas well as to people, who reviewed the project: [@alejandrogallo](https://github.com/alejandrogallo) and [@arepstein](https://github.com/arepstein).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mishioo/tesliper",
    "keywords": "chemistry,chemical computing,optical spectroscopy,spectral simulations,spectroscopy,Gaussian,workflow automation,batch processing",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tesliper",
    "package_url": "https://pypi.org/project/tesliper/",
    "platform": null,
    "project_url": "https://pypi.org/project/tesliper/",
    "project_urls": {
      "Homepage": "https://github.com/mishioo/tesliper"
    },
    "release_url": "https://pypi.org/project/tesliper/0.9.3/",
    "requires_dist": [
      "numpy",
      "openpyxl",
      "pyinstaller ; extra == 'build'",
      "twine ; extra == 'build'",
      "matplotlib ; extra == 'build'",
      "black ; extra == 'dev'",
      "pre-commit ; extra == 'dev'",
      "flake8 ; extra == 'dev'",
      "isort ; extra == 'dev'",
      "matplotlib ; extra == 'dev'",
      "pytest ; extra == 'dev'",
      "hypothesis ; extra == 'dev'",
      "coverage ; extra == 'dev'",
      "pytest-cov ; extra == 'dev'",
      "matplotlib ; extra == 'dev-all'",
      "pytest ; extra == 'dev-all'",
      "hypothesis ; extra == 'dev-all'",
      "coverage ; extra == 'dev-all'",
      "pytest-cov ; extra == 'dev-all'",
      "sphinx ; extra == 'dev-all'",
      "sphinx-rtd-theme ; extra == 'dev-all'",
      "pyinstaller ; extra == 'dev-all'",
      "twine ; extra == 'dev-all'",
      "black ; extra == 'dev-all'",
      "pre-commit ; extra == 'dev-all'",
      "flake8 ; extra == 'dev-all'",
      "isort ; extra == 'dev-all'",
      "sphinx ; extra == 'docs'",
      "sphinx-rtd-theme ; extra == 'docs'",
      "matplotlib ; extra == 'gui'",
      "pytest ; extra == 'test'",
      "hypothesis ; extra == 'test'",
      "coverage ; extra == 'test'",
      "pytest-cov ; extra == 'test'"
    ],
    "requires_python": ">=3.6",
    "summary": "a package for batch processing of spectra-related Gaussian output files",
    "version": "0.9.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13397545,
  "releases": {
    "0.8.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "21659899810f9a01f4af09e8887b2f14b7cf8fbb18f36ce99435c4e54cd551b5",
          "md5": "0982f61c5972a9ca74482031e708e15b",
          "sha256": "9ca4e1f1259730bc95a1e45074394c1d274ac524558deb4464698913b2eaa92a"
        },
        "downloads": -1,
        "filename": "tesliper-0.8.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0982f61c5972a9ca74482031e708e15b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 183959,
        "upload_time": "2021-11-17T22:25:06",
        "upload_time_iso_8601": "2021-11-17T22:25:06.991709Z",
        "url": "https://files.pythonhosted.org/packages/21/65/9899810f9a01f4af09e8887b2f14b7cf8fbb18f36ce99435c4e54cd551b5/tesliper-0.8.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "94d028304e09db23617c3c5ae57b628ef40bcbf44cf2388e8ce510b054346e36",
          "md5": "66682ebc2644a474f737c876295dd916",
          "sha256": "994fb26d3c3904ed448077b9ce3d8451a789cefbb63645cf993cef68f66f243f"
        },
        "downloads": -1,
        "filename": "tesliper-0.8.0.tar.gz",
        "has_sig": false,
        "md5_digest": "66682ebc2644a474f737c876295dd916",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 162231,
        "upload_time": "2021-11-17T22:25:09",
        "upload_time_iso_8601": "2021-11-17T22:25:09.755179Z",
        "url": "https://files.pythonhosted.org/packages/94/d0/28304e09db23617c3c5ae57b628ef40bcbf44cf2388e8ce510b054346e36/tesliper-0.8.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70df6d4d2af70e5ea2ed9e7126284b14b897d383a279a05de292f51bf1a58726",
          "md5": "22e487950b87cb0dbe8b45c53358a61c",
          "sha256": "f8ff6ee76207c2e3c8e955701d84ff2180c0d9b320889ad7ec1260c6595b41d5"
        },
        "downloads": -1,
        "filename": "tesliper-0.8.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "22e487950b87cb0dbe8b45c53358a61c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 184604,
        "upload_time": "2021-11-28T14:12:54",
        "upload_time_iso_8601": "2021-11-28T14:12:54.959512Z",
        "url": "https://files.pythonhosted.org/packages/70/df/6d4d2af70e5ea2ed9e7126284b14b897d383a279a05de292f51bf1a58726/tesliper-0.8.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b99d5ae27daeff638399ea8b1c27761632014943768fb3bf17bd2656508343d",
          "md5": "7e98e6cde79ea700354e7e0b64c29773",
          "sha256": "51b8e8687ee5ea5bb8eba91a47721d9978440a5492cdcfdec33b86b47b49d661"
        },
        "downloads": -1,
        "filename": "tesliper-0.8.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7e98e6cde79ea700354e7e0b64c29773",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 163172,
        "upload_time": "2021-11-28T14:12:56",
        "upload_time_iso_8601": "2021-11-28T14:12:56.382463Z",
        "url": "https://files.pythonhosted.org/packages/8b/99/d5ae27daeff638399ea8b1c27761632014943768fb3bf17bd2656508343d/tesliper-0.8.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9726ceb28cb6d6097a69dfee6f84dc29a79dbbd1b4f9de921114e291b4119e46",
          "md5": "0abc82a3dbc1867494189756b524f62c",
          "sha256": "5dcef649cea42728722e38e2233a20f8774748b87a5a8b1e387d252dcfbf614b"
        },
        "downloads": -1,
        "filename": "tesliper-0.8.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0abc82a3dbc1867494189756b524f62c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 186340,
        "upload_time": "2021-12-02T20:08:13",
        "upload_time_iso_8601": "2021-12-02T20:08:13.593721Z",
        "url": "https://files.pythonhosted.org/packages/97/26/ceb28cb6d6097a69dfee6f84dc29a79dbbd1b4f9de921114e291b4119e46/tesliper-0.8.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "17a6c567569813cc70369e82e2e97b91585c3d29ff254f46a731e19b2475f182",
          "md5": "d6a14b913b0554be7bb104c5ab7169ca",
          "sha256": "28f8f9cf77f736ab4e35223466f4c62f599a3172db529fd6c5f95257e7ef6f93"
        },
        "downloads": -1,
        "filename": "tesliper-0.8.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d6a14b913b0554be7bb104c5ab7169ca",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 164593,
        "upload_time": "2021-12-02T20:08:15",
        "upload_time_iso_8601": "2021-12-02T20:08:15.511337Z",
        "url": "https://files.pythonhosted.org/packages/17/a6/c567569813cc70369e82e2e97b91585c3d29ff254f46a731e19b2475f182/tesliper-0.8.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2197fe3a80ad141e93576d9a9aa8873f45bd2f342f29217d130dda40e277082e",
          "md5": "a3f48ed94a4abf0696ed09af90e98551",
          "sha256": "921001f2eec534a6f334751c22146104d3b838b2d9c16e7e23a33366998f2dfd"
        },
        "downloads": -1,
        "filename": "tesliper-0.9.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a3f48ed94a4abf0696ed09af90e98551",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 199852,
        "upload_time": "2022-01-25T15:08:27",
        "upload_time_iso_8601": "2022-01-25T15:08:27.741124Z",
        "url": "https://files.pythonhosted.org/packages/21/97/fe3a80ad141e93576d9a9aa8873f45bd2f342f29217d130dda40e277082e/tesliper-0.9.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b00a3ebbec9389f42300831c8fe58e324c38e129e2efa520850d556848bc603e",
          "md5": "d0fa7700db73343bfc0e82624a509ac2",
          "sha256": "7d4e00eb525028505f3e1e3c3d3e52093b8e86cec32e2e0b025ee7925430cfa3"
        },
        "downloads": -1,
        "filename": "tesliper-0.9.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d0fa7700db73343bfc0e82624a509ac2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 175709,
        "upload_time": "2022-01-25T15:08:29",
        "upload_time_iso_8601": "2022-01-25T15:08:29.818413Z",
        "url": "https://files.pythonhosted.org/packages/b0/0a/3ebbec9389f42300831c8fe58e324c38e129e2efa520850d556848bc603e/tesliper-0.9.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "53360cd529ee7fd6767ae1f2d03b9f65cf53990260012705a2a4e0eaff0f48db",
          "md5": "581fd4aa1940d32ea5c8d68ad35c0ddb",
          "sha256": "0e1ad8da708674c8fd1372abc793d74a223966567a6e3901ae71e1259c1eb224"
        },
        "downloads": -1,
        "filename": "tesliper-0.9.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "581fd4aa1940d32ea5c8d68ad35c0ddb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 203296,
        "upload_time": "2022-02-28T12:16:22",
        "upload_time_iso_8601": "2022-02-28T12:16:22.910361Z",
        "url": "https://files.pythonhosted.org/packages/53/36/0cd529ee7fd6767ae1f2d03b9f65cf53990260012705a2a4e0eaff0f48db/tesliper-0.9.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "225706ccb86d79b349ce543e9a9bdceb761b573de06ab604582a8a243e9fefe8",
          "md5": "5a24c42076f1965aec334ca0ff6598d1",
          "sha256": "5c8124bfa4fac4f0a650b4db724374a55d40cca533d53d5607ba4c4218307812"
        },
        "downloads": -1,
        "filename": "tesliper-0.9.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5a24c42076f1965aec334ca0ff6598d1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 180377,
        "upload_time": "2022-02-28T12:16:24",
        "upload_time_iso_8601": "2022-02-28T12:16:24.933794Z",
        "url": "https://files.pythonhosted.org/packages/22/57/06ccb86d79b349ce543e9a9bdceb761b573de06ab604582a8a243e9fefe8/tesliper-0.9.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f6c47e027c6b44c49baec10d349e1e9495a21aee3f3dcc4c5dd354c12476d52c",
          "md5": "a6890fffa8f3c665213e1ebd8be19c8d",
          "sha256": "c3164cc2f76b8be1fc87dc989ed6aa6584d7f497ccfad45ffcf3e57806393d0a"
        },
        "downloads": -1,
        "filename": "tesliper-0.9.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a6890fffa8f3c665213e1ebd8be19c8d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 203323,
        "upload_time": "2022-02-28T12:57:39",
        "upload_time_iso_8601": "2022-02-28T12:57:39.256279Z",
        "url": "https://files.pythonhosted.org/packages/f6/c4/7e027c6b44c49baec10d349e1e9495a21aee3f3dcc4c5dd354c12476d52c/tesliper-0.9.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "63526b8f2bf2719f5b2c48d9408be80b266f1d249d5a061ab2d5987e549fe30f",
          "md5": "1ef38ff4e46660de98adf3c6dcd67256",
          "sha256": "0da9907593dee3166320166750795da8c59bf184b6989cb1ad327aa0ec9330c3"
        },
        "downloads": -1,
        "filename": "tesliper-0.9.2.tar.gz",
        "has_sig": false,
        "md5_digest": "1ef38ff4e46660de98adf3c6dcd67256",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 180369,
        "upload_time": "2022-02-28T12:57:40",
        "upload_time_iso_8601": "2022-02-28T12:57:40.851673Z",
        "url": "https://files.pythonhosted.org/packages/63/52/6b8f2bf2719f5b2c48d9408be80b266f1d249d5a061ab2d5987e549fe30f/tesliper-0.9.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "16e7b8a295afd1fffeab7abc2566c9720038da0f1bc78e9e29b401dc362b23e5",
          "md5": "94c367c3c887b33184512be50ef5d378",
          "sha256": "ead3b4592cbd1f88c8e252e874d6c206a5124920c7cefc3d765d9733c666006f"
        },
        "downloads": -1,
        "filename": "tesliper-0.9.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "94c367c3c887b33184512be50ef5d378",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 204195,
        "upload_time": "2022-04-04T08:49:52",
        "upload_time_iso_8601": "2022-04-04T08:49:52.933771Z",
        "url": "https://files.pythonhosted.org/packages/16/e7/b8a295afd1fffeab7abc2566c9720038da0f1bc78e9e29b401dc362b23e5/tesliper-0.9.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2a8891505bd9917ca843cbd3a2e8d11f035732dcdebd165661674a4955e4e631",
          "md5": "5643a13cd8fb1431e5edb3d9564b12aa",
          "sha256": "1526bd4304b9c485a4f27195468b42c5c9b97c5178b36008f073dbee52683cce"
        },
        "downloads": -1,
        "filename": "tesliper-0.9.3.tar.gz",
        "has_sig": false,
        "md5_digest": "5643a13cd8fb1431e5edb3d9564b12aa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 181259,
        "upload_time": "2022-04-04T08:49:54",
        "upload_time_iso_8601": "2022-04-04T08:49:54.532534Z",
        "url": "https://files.pythonhosted.org/packages/2a/88/91505bd9917ca843cbd3a2e8d11f035732dcdebd165661674a4955e4e631/tesliper-0.9.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "16e7b8a295afd1fffeab7abc2566c9720038da0f1bc78e9e29b401dc362b23e5",
        "md5": "94c367c3c887b33184512be50ef5d378",
        "sha256": "ead3b4592cbd1f88c8e252e874d6c206a5124920c7cefc3d765d9733c666006f"
      },
      "downloads": -1,
      "filename": "tesliper-0.9.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "94c367c3c887b33184512be50ef5d378",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 204195,
      "upload_time": "2022-04-04T08:49:52",
      "upload_time_iso_8601": "2022-04-04T08:49:52.933771Z",
      "url": "https://files.pythonhosted.org/packages/16/e7/b8a295afd1fffeab7abc2566c9720038da0f1bc78e9e29b401dc362b23e5/tesliper-0.9.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2a8891505bd9917ca843cbd3a2e8d11f035732dcdebd165661674a4955e4e631",
        "md5": "5643a13cd8fb1431e5edb3d9564b12aa",
        "sha256": "1526bd4304b9c485a4f27195468b42c5c9b97c5178b36008f073dbee52683cce"
      },
      "downloads": -1,
      "filename": "tesliper-0.9.3.tar.gz",
      "has_sig": false,
      "md5_digest": "5643a13cd8fb1431e5edb3d9564b12aa",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 181259,
      "upload_time": "2022-04-04T08:49:54",
      "upload_time_iso_8601": "2022-04-04T08:49:54.532534Z",
      "url": "https://files.pythonhosted.org/packages/2a/88/91505bd9917ca843cbd3a2e8d11f035732dcdebd165661674a4955e4e631/tesliper-0.9.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}