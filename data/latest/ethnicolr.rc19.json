{
  "info": {
    "author": "Suriyan Laohaprapanon, Gaurav Sood, Bashar Naji",
    "author_email": "suriyant@gmail.com, gsood07@gmail.com, balkuwai@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Information Analysis",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Utilities"
    ],
    "description": "ethnicolr: Predict Race and Ethnicity From Name\n----------------------------------------------------\n\n.. image:: https://github.com/appeler/ethnicolr/workflows/test/badge.svg\n    :target: https://github.com/appeler/ethnicolr/actions?query=workflow%3Atest\n.. image:: https://ci.appveyor.com/api/projects/status/u9fe72hn8nnhmaxt?svg=true\n    :target: https://ci.appveyor.com/project/soodoku/ethnicolr-m6u1p\n.. image:: https://img.shields.io/pypi/v/ethnicolr.svg\n    :target: https://pypi.python.org/pypi/ethnicolr\n.. image:: https://anaconda.org/soodoku/ethnicolr/badges/version.svg\n    :target: https://anaconda.org/soodoku/ethnicolr/\n.. image:: https://pepy.tech/badge/ethnicolr\n    :target: https://pepy.tech/project/ethnicolr\n\nWe exploit the US census data, the Florida voting registration data, and \nthe Wikipedia data collected by Skiena and colleagues, to predict race\nand ethnicity based on first and last name or just the last name. The granularity \nat which we predict the race depends on the dataset. For instance, \nSkiena et al.' Wikipedia data is at the ethnic group level, while the \ncensus data we use in the model (the raw data has additional categories of \nNative Americans and Bi-racial) merely categorizes between Non-Hispanic Whites, \nNon-Hispanic Blacks, Asians, and Hispanics.\n\nDIME Race\n-----------\nData on race of all the people in the `DIME data <https://data.stanford.edu/dime>`__ \nis posted `here <http://dx.doi.org/10.7910/DVN/M5K7VR>`__ The underlying python scripts \nare posted `here <https://github.com/appeler/dime_race>`__ \n\nCaveats and Notes\n-----------------------\n\nIf you picked a random individual with last name 'Smith' from the US in 2010  \nand asked us to guess this person's race (measured as crudely as by the census),\nthe best guess would be based on what is available from the aggregated Census file. \nIt is the Bayes Optimal Solution. So what good are last name only predictive models\nfor? A few things---if you want to impute ethnicity at a more granular level,\nguess the race of people in different years (than when the census was conducted \nif some assumptions hold), guess the race of people in different countries (again if some \nassumptions hold), when names are slightly different (again with some assumptions), etc. \nThe big benefit comes from when both the first name and last name is known.\n\nInstall\n----------\n\nWe strongly recommend installing `ethnicolor` inside a Python virtual environment\n(see `venv documentation <https://docs.python.org/3/library/venv.html#creating-virtual-environments>`__)\n\n::\n\n    pip install ethnicolr\n\nOr \n\n::\n   \n   conda install -c soodoku ethnicolr \n\nNotes:\n - The models are run and verified on TensorFlow 2.x using Python 3.7 and 3.8 and lower will work. TensorFlow 1.x has been deprecated.\n - If you are installing on Windows, Theano installation typically needs admin. privileges on the shell.\n\nGeneral API\n------------------\n\nTo see the available command line options for any function, please type in \n``<function-name> --help``\n\n::\n\n   # census_ln --help\n   usage: census_ln [-h] [-y {2000,2010}] [-o OUTPUT] -l LAST input\n\n   Appends Census columns by last name\n\n   positional arguments:\n     input                 Input file\n\n   optional arguments:\n     -h, --help            show this help message and exit\n     -y {2000,2010}, --year {2000,2010}\n                           Year of Census data (default=2000)\n     -o OUTPUT, --output OUTPUT\n                           Output file with Census data columns\n     -l LAST, --last LAST  Name or index location of column contains the last\n                           name\n\n\nExamples\n----------\n\nTo append census data from 2010 to a `file without column headers <ethnicolr/data/input-without-header.csv>`__ and the first column carries the last name, use ``-l 0``\n\n::\n\n   census_ln -y 2010 -o output-census2010.csv -l 0 input-without-header.csv\n\nTo append census data from 2010 to a `file with column header in the first row <ethnicolr/data/input-with-header.csv>`__, specify the column name carrying last names using the ``-l`` option, keeping the rest the same:\n\n::\n\n   census_ln -y 2010 -o output-census2010.csv -l last_name input-with-header.csv   \n\n\nTo predict race/ethnicity using `Wikipedia full name model <ethnicolr/models/ethnicolr_keras_lstm_wiki_name.ipynb>`__, if the input file doesn't have any column headers, you must using ``-l`` and ``-f`` to specify the index of column carrying the last name and first name respectively (first column has index 0).\n\n::\n\n   pred_wiki_name -o output-wiki-pred-race.csv -l 0 -f 1 input-without-header.csv\n\n\nAnd to predict race/ethnicity using `Wikipedia full name model <ethnicolr/models/ethnicolr_keras_lstm_wiki_name.ipynb>`__ for a file with column headers, you can specify the column name of last name and first name by using ``-l`` and ``-f`` flags respectively.\n\n::\n\n   pred_wiki_name -o output-wiki-pred-race.csv -l last_name -f first_name input-with-header.csv\n\n\nFunctions\n----------\n\nWe expose 6 functions, each of which either take a pandas DataFrame or a\nCSV. If the CSV doesn't have a header, we make some assumptions about\nwhere the data is:\n\n- **census\\_ln(df, namecol, year=2000)**\n\n  -  What it does:\n\n     - Removes extra space\n     - For names in the `census file <ethnicolr/data/census>`__, it appends \n       relevant data of what probability the name provided is of a certain race/ethnicity\n\n\n +------------+--------------------------------------------------------------------------------------------------------------------------+\n | Parameters |                                                                                                                          |\n +============+==========================================================================================================================+\n |            | **df** : *{DataFrame, csv}* Pandas dataframe of CSV file contains the names of the individual to be inferred             |\n +------------+--------------------------------------------------------------------------------------------------------------------------+\n |            | **namecol** : *{string, list, int}* string or list of the name or location of the column containing the last name        |\n +------------+--------------------------------------------------------------------------------------------------------------------------+\n |            | **Year** : *{2000, 2010}, default=2000* year of census to use                                                            |\n +------------+--------------------------------------------------------------------------------------------------------------------------+\n\n\n-  Output: Appends the following columns to the pandas DataFrame or CSV: \n   pctwhite, pctblack, pctapi, pctaian, pct2prace, pcthispanic. \n   See `here <https://github.com/appeler/ethnicolr/blob/master/ethnicolr/data/census/census_2000.pdf>`__ \n   for what the column names mean.\n\n   ::\n\n      >>> import pandas as pd\n\n      >>> from ethnicolr import census_ln, pred_census_ln\n\n      >>> names = [{'name': 'smith'},\n      ...         {'name': 'zhang'},\n      ...         {'name': 'jackson'}]\n\n      >>> df = pd.DataFrame(names)\n\n      >>> df\n            name\n      0    smith\n      1    zhang\n      2  jackson\n\n      >>> census_ln(df, 'name')\n            name pctwhite pctblack pctapi pctaian pct2prace pcthispanic\n      0    smith    73.35    22.22   0.40    0.85      1.63        1.56\n      1    zhang     0.61     0.09  98.16    0.02      0.96        0.16\n      2  jackson    41.93    53.02   0.31    1.04      2.18        1.53\n\n\n-  **pred\\_census\\_ln(df, namecol, year=2000, num\\_iter=100, conf\\_int=1.0)**\n\n   -  What it does:\n\n      -  Removes extra space.\n      -  Uses the `last name census 2000 \n         model <ethnicolr/models/ethnicolr_keras_lstm_census2000_ln.ipynb>`__ or \n         `last name census 2010 model <ethnicolr/models/ethnicolr_keras_lstm_census2010_ln.ipynb>`__ \n         to predict the race and ethnicity.\n\n\n   +--------------+---------------------------------------------------------------------------------------------------------------------+\n   | Parameters   |                                                                                                                     |\n   +==============+=====================================================================================================================+\n   |              | **df** : *{DataFrame, csv}* Pandas dataframe of CSV file contains the names of the individual to be inferred        |\n   +--------------+---------------------------------------------------------------------------------------------------------------------+\n   |              | **namecol** : *{string, list, int}* string or list of the name or location of the column containing the last name   |\n   +--------------+---------------------------------------------------------------------------------------------------------------------+\n   |              | **year** : *{2000, 2010}, default=2000* year of census to use                                                       |\n   +--------------+---------------------------------------------------------------------------------------------------------------------+\n   |              | **num\\_iter** : *int, default=100* number of iterations to calculate uncertainty in model                           |\n   +--------------+---------------------------------------------------------------------------------------------------------------------+\n   |              | **conf\\_int** : *float, default=1.0* confidence interval in predicted class                                         |\n   +--------------+---------------------------------------------------------------------------------------------------------------------+\n\n\n   -  Output: Appends the following columns to the pandas DataFrame or CSV:\n      race (white, black, asian, or hispanic), api (percentage chance\n      asian), black, hispanic, white. For each race it will provide the\n      mean, standard error, lower & upper bound of confidence interval\n\n   *(Using the same dataframe from example above)*\n   ::\n\n         >>> census_ln(df, 'name')\n               name pctwhite pctblack pctapi pctaian pct2prace pcthispanic\n         0    smith    73.35    22.22   0.40    0.85      1.63        1.56\n         1    zhang     0.61     0.09  98.16    0.02      0.96        0.16\n         2  jackson    41.93    53.02   0.31    1.04      2.18        1.53\n\n         >>> census_ln(df, 'name', 2010)\n               name   race pctwhite pctblack pctapi pctaian pct2prace pcthispanic\n         0    smith  white     70.9    23.11    0.5    0.89      2.19         2.4\n         1    zhang    api     0.99     0.16  98.06    0.02      0.62        0.15\n         2  jackson  black    39.89    53.04   0.39    1.06      3.12         2.5\n\n         >>> pred_census_ln(df, 'name')\n               name   race       api     black  hispanic     white\n         0    smith  white  0.002019  0.247235  0.014485  0.736260\n         1    zhang    api  0.997807  0.000149  0.000470  0.001574\n         2  jackson  black  0.002797  0.528193  0.014605  0.454405\n\n\n-  **pred\\_wiki\\_ln( df, namecol, num\\_iter=100, conf\\_int=1.0)**\n\n   -  What it does:\n\n      -  Removes extra space.\n      -  Uses the `last name wiki\n         model <ethnicolr/models/ethnicolr_keras_lstm_wiki_ln.ipynb>`__ to\n         predict the race and ethnicity.\n\n\n   +--------------+---------------------------------------------------------------------------------------------------------------------+\n   | Parameters   |                                                                                                                     |\n   +==============+=====================================================================================================================+\n   |              | **df** : *{DataFrame, csv}* Pandas dataframe of CSV file contains the names of the individual to be inferred        |\n   +--------------+---------------------------------------------------------------------------------------------------------------------+\n   |              | **namecol** : *{string, list, int}* string or list of the name or location of the column containing the last name   |\n   +--------------+---------------------------------------------------------------------------------------------------------------------+\n   |              | **num\\_iter** : *int, default=100* number of iterations to calculate uncertainty in model                           |\n   +--------------+---------------------------------------------------------------------------------------------------------------------+\n   |              | **conf\\_int** : *float, default=1.0* confidence interval in predicted class                                         |\n   +--------------+---------------------------------------------------------------------------------------------------------------------+\n\n\n   -  Output: Appends the following columns to the pandas DataFrame or CSV:\n      race (categorical variable --- category with the highest probability). \n      For each race it will provide the mean, standard error, lower & upper\n      bound of confidence interval\n      \n   ::\n      \"Asian,GreaterEastAsian,EastAsian\",\n      \"Asian,GreaterEastAsian,Japanese\", \"Asian,IndianSubContinent\",\n      \"GreaterAfrican,Africans\", \"GreaterAfrican,Muslim\",\n      \"GreaterEuropean,British\",\"GreaterEuropean,EastEuropean\",\n      \"GreaterEuropean,Jewish\",\"GreaterEuropean,WestEuropean,French\",\n      \"GreaterEuropean,WestEuropean,Germanic\",\"GreaterEuropean,WestEuropean,Hispanic\",\n      \"GreaterEuropean,WestEuropean,Italian\",\"GreaterEuropean,WestEuropean,Nordic\".\n      \n\n   ::\n\n      >>> import pandas as pd\n\n      >>> names = [\n      ...             {\"last\": \"smith\", \"first\": \"john\", \"true_race\": \"GreaterEuropean,British\"},\n      ...             {\n      ...                 \"last\": \"zhang\",\n      ...                 \"first\": \"simon\",\n      ...                 \"true_race\": \"Asian,GreaterEastAsian,EastAsian\",\n      ...             },\n      ...         ]\n      >>> df = pd.DataFrame(names)\n\n      >>> from ethnicolr import pred_wiki_ln, pred_wiki_name\n\n      >>> odf = pred_wiki_ln(df,'last', conf_int=0.9)\n      ['Asian,GreaterEastAsian,EastAsian', 'Asian,GreaterEastAsian,Japanese', 'Asian,IndianSubContinent', 'GreaterAfrican,Africans', 'GreaterAfrican,Muslim', 'GreaterEuropean,British', 'GreaterEuropean,EastEuropean', 'GreaterEuropean,Jewish', 'GreaterEuropean,WestEuropean,French', 'GreaterEuropean,WestEuropean,Germanic', 'GreaterEuropean,WestEuropean,Hispanic', 'GreaterEuropean,WestEuropean,Italian', 'GreaterEuropean,WestEuropean,Nordic']\n\n      >>> odf\n         last  first                         true_race  ...  GreaterEuropean,WestEuropean,Nordic_lb  GreaterEuropean,WestEuropean,Nordic_ub                              race\n      0  Smith   john           GreaterEuropean,British  ...                                0.005248                                0.034912           GreaterEuropean,British\n      1  Zhang  simon  Asian,GreaterEastAsian,EastAsian  ...                                0.002145                                0.068731  Asian,GreaterEastAsian,EastAsian\n\n      [2 rows x 56 columns]\n\n      >>> odf.iloc[0, :8]\n      last                                                       Smith\n      first                                                       john\n      true_race                                GreaterEuropean,British\n      Asian,GreaterEastAsian,EastAsian_mean                   0.015033\n      Asian,GreaterEastAsian,EastAsian_std                    0.009354\n      Asian,GreaterEastAsian,EastAsian_lb                     0.005062\n      Asian,GreaterEastAsian,EastAsian_ub                     0.036501\n      Asian,GreaterEastAsian,Japanese_mean                    0.003411\n      Name: 0, dtype: object\n\n\n\n\n-  **pred\\_wiki\\_name(df, namecol, num\\_iter=100, conf\\_int=1.0)**\n\n   -  What it does:\n\n      -  Removes extra space.\n      -  Uses the `full name wiki\n         model <ethnicolr/models/ethnicolr_keras_lstm_wiki_name.ipynb>`__\n         to predict the race and ethnicity.\n\n   +--------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n   | Parameters   |                                                                                                                                                                                                                                                                                                                            |\n   +==============+============================================================================================================================================================================================================================================================================================================================+\n   |              | **df** : *{DataFrame, csv}* Pandas dataframe of CSV file contains the names of the individual to be inferred                                                                                                                                                                                                               |\n   +--------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n   |              | **namecol** : *{string, list}* string or list of the name or location of the column containing the first name, last name, middle name, and suffix, if there. The first name and last name columns are required. If no middle name of suffix columns are there, it is assumed that there are no middle names or suffixes.   |\n   +--------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n   |              | **num\\_iter** : *int, default=100* number of iterations to calculate uncertainty in model                                                                                                                                                                                                                                  |\n   +--------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n   |              | **conf\\_int** : *float, default=1.0* confidence interval in predicted class                                                                                                                                                                                                                                                |\n   +--------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n\n\n\n   -  Output: Appends the following columns to the pandas DataFrame or CSV:\n      race (categorical variable---category with the highest probability),\n      \"Asian,GreaterEastAsian,EastAsian\",\n      \"Asian,GreaterEastAsian,Japanese\", \"Asian,IndianSubContinent\",\n      \"GreaterAfrican,Africans\", \"GreaterAfrican,Muslim\",\n      \"GreaterEuropean,British\",\"GreaterEuropean,EastEuropean\",\n      \"GreaterEuropean,Jewish\",\"GreaterEuropean,WestEuropean,French\",\n      \"GreaterEuropean,WestEuropean,Germanic\",\"GreaterEuropean,WestEuropean,Hispanic\",\n      \"GreaterEuropean,WestEuropean,Italian\",\"GreaterEuropean,WestEuropean,Nordic\".\n      For each race it will provide the mean, standard error, lower & upper\n      bound of confidence interval\n\n   *(Using the same dataframe from example above)*\n   ::\n\n      >>> odf = pred_wiki_name(df,'last', 'first', conf_int=0.9)\n      ['Asian,GreaterEastAsian,EastAsian', 'Asian,GreaterEastAsian,Japanese', 'Asian,IndianSubContinent', 'GreaterAfrican,Africans', 'GreaterAfrican,Muslim', 'GreaterEuropean,British', 'GreaterEuropean,EastEuropean', 'GreaterEuropean,Jewish', 'GreaterEuropean,WestEuropean,French', 'GreaterEuropean,WestEuropean,Germanic', 'GreaterEuropean,WestEuropean,Hispanic', 'GreaterEuropean,WestEuropean,Italian', 'GreaterEuropean,WestEuropean,Nordic']\n\n      >>> odf\n         last  first                         true_race  ... GreaterEuropean,WestEuropean,Nordic_lb  GreaterEuropean,WestEuropean,Nordic_ub                              race\n      0  Smith   john           GreaterEuropean,British  ...                               0.001280                                0.019053           GreaterEuropean,British\n      1  Zhang  simon  Asian,GreaterEastAsian,EastAsian  ...                               0.000043                                0.001708  Asian,GreaterEastAsian,EastAsian\n\n      [2 rows x 57 columns]\n\n      >>> odf.iloc[0,:8]\n      last                                                       Smith\n      first                                                       john\n      true_race                                GreaterEuropean,British\n      __name                                                Smith John\n      Asian,GreaterEastAsian,EastAsian_mean                   0.003466\n      Asian,GreaterEastAsian,EastAsian_std                     0.00158\n      Asian,GreaterEastAsian,EastAsian_lb                     0.001343\n      Asian,GreaterEastAsian,EastAsian_ub                     0.006278\n      Name: 0, dtype: object\n\n\n-  **pred\\_fl\\_reg\\_ln(df, namecol, num\\_iter=100, conf\\_int=1.0)**\n\n   -  What it does?:\n\n      -  Removes extra space, if there.\n      -  Uses the `last name FL registration\n         model <ethnicolr/models/ethnicolr_keras_lstm_fl_voter_ln.ipynb>`__\n         to predict the race and ethnicity.\n\n   +--------------+---------------------------------------------------------------------------------------------------------------------+\n   | Parameters   |                                                                                                                     |\n   +==============+=====================================================================================================================+\n   |              | **df** : *{DataFrame, csv}* Pandas dataframe of CSV file contains the names of the individual to be inferred        |\n   +--------------+---------------------------------------------------------------------------------------------------------------------+\n   |              | **namecol** : *{string, list, int}* string or list of the name or location of the column containing the last name   |\n   +--------------+---------------------------------------------------------------------------------------------------------------------+\n   |              | **num\\_iter** : *int, default=100* number of iterations to calculate uncertainty in model                           |\n   +--------------+---------------------------------------------------------------------------------------------------------------------+\n   |              | **conf\\_int** : *float, default=1.0* confidence interval in predicted class                                         |\n   +--------------+---------------------------------------------------------------------------------------------------------------------+\n\n\n\n   -  Output: Appends the following columns to the pandas DataFrame or CSV:\n      race (white, black, asian, or hispanic), asian (percentage chance\n      Asian), hispanic, nh\\_black, nh\\_white. For each race it will provide\n      the mean, standard error, lower & upper bound of confidence interval\n\n   ::\n\n      >>> import pandas as pd\n\n      >>> names = [\n      ...             {\"last\": \"sawyer\", \"first\": \"john\", \"true_race\": \"nh_white\"},\n      ...             {\"last\": \"torres\", \"first\": \"raul\", \"true_race\": \"hispanic\"},\n      ...         ]\n      \n      >>> df = pd.DataFrame(names)\n\n      >>> from ethnicolr import pred_fl_reg_ln, pred_fl_reg_name, pred_fl_reg_ln_five_cat, pred_fl_reg_name_five_cat\n\n      >>> odf = pred_fl_reg_ln(df, 'last', conf_int=0.9)\n      ['asian', 'hispanic', 'nh_black', 'nh_white']\n\n      >>> odf\n         last first true_race  asian_mean  asian_std  asian_lb  asian_ub  hispanic_mean  ...  nh_black_std  nh_black_lb  nh_black_ub  nh_white_mean  nh_white_std  nh_white_lb  nh_white_ub      race\n      0  Sawyer  john  nh_white    0.009093   0.003401  0.005307  0.015345       0.022212  ...      0.049869     0.116214     0.280148       0.775057      0.048677     0.692295     0.847054  nh_white\n      1  Torres  raul  hispanic    0.006580   0.002218  0.003549  0.010928       0.874953  ...      0.005776     0.006483     0.020168       0.106233      0.021872     0.071461     0.149506  hispanic\n\n      [2 rows x 20 columns]\n\n      >>> odf.iloc[0]\n      last               Sawyer\n      first                john\n      true_race        nh_white\n      asian_mean       0.009093\n      asian_std        0.003401\n      asian_lb         0.005307\n      asian_ub         0.015345\n      hispanic_mean    0.022212\n      hispanic_std     0.005254\n      hispanic_lb       0.01498\n      hispanic_ub      0.030114\n      nh_black_mean    0.193638\n      nh_black_std     0.049869\n      nh_black_lb      0.116214\n      nh_black_ub      0.280148\n      nh_white_mean    0.775057\n      nh_white_std     0.048677\n      nh_white_lb      0.692295\n      nh_white_ub      0.847054\n      race             nh_white\n      Name: 0, dtype: object\n\n\n-  **pred\\_fl\\_reg\\_name(df, namecol, num\\_iter=100, conf\\_int=1.0)**\n\n   -  What it does:\n\n      -  Removes extra space.\n      -  Uses the `full name FL\n         model <ethnicolr/models/ethnicolr_keras_lstm_fl_voter_name.ipynb>`__\n         to predict the race and ethnicity.\n\n   +--------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n   | Parameters   |                                                                                                                                                                                                                                                                                                                            |\n   +==============+============================================================================================================================================================================================================================================================================================================================+\n   |              | **df** : *{DataFrame, csv}* Pandas dataframe of CSV file contains the names of the individual to be inferred                                                                                                                                                                                                               |\n   +--------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n   |              | **namecol** : *{string, list}* string or list of the name or location of the column containing the first name, last name, middle name, and suffix, if there. The first name and last name columns are required. If no middle name of suffix columns are there, it is assumed that there are no middle names or suffixes.   |\n   +--------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n   |              | **num\\_iter** : *int, default=100* number of iterations to calculate uncertainty in model                                                                                                                                                                                                                                  |\n   +--------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n   |              | **conf\\_int** : *float, default=1.0* confidence interval in predicted class                                                                                                                                                                                                                                                |\n   +--------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n\n\n   -  Output: Appends the following columns to the pandas DataFrame or CSV:\n      race (white, black, asian, or hispanic), asian (percentage chance\n      Asian), hispanic, nh\\_black, nh\\_white. For each race it will provide\n      the mean, standard error, lower & upper bound of confidence interval\n\n   \n   *(Using the same dataframe from example above)*\n   ::\n\n      >>> odf = pred_fl_reg_name(df, 'last', 'first', conf_int=0.9)\n      ['asian', 'hispanic', 'nh_black', 'nh_white']\n\n      >>> odf\n         last first true_race  asian_mean  asian_std  asian_lb  asian_ub  hispanic_mean  ...  nh_black_std  nh_black_lb  nh_black_ub  nh_white_mean  nh_white_std  nh_white_lb  nh_white_ub      race\n      0  Sawyer  john  nh_white     0.00142   0.000826  0.000607  0.003163       0.006704  ...      0.013759     0.009763     0.051053       0.963650      0.014840     0.936385     0.982274  nh_white\n      1  Torres  raul  hispanic     0.00635   0.003612  0.002263  0.012572       0.888118  ...      0.005181     0.006091     0.021166       0.093334      0.031507     0.051153     0.156381  hispanic\n\n      [2 rows x 20 columns]\n\n      >>> odf.iloc[1]\n      last               Torres\n      first                raul\n      true_race        hispanic\n      asian_mean        0.00635\n      asian_std        0.003612\n      asian_lb         0.002263\n      asian_ub         0.012572\n      hispanic_mean    0.888118\n      hispanic_std     0.034588\n      hispanic_lb      0.817893\n      hispanic_ub      0.928268\n      nh_black_mean    0.012199\n      nh_black_std     0.005181\n      nh_black_lb      0.006091\n      nh_black_ub      0.021166\n      nh_white_mean    0.093334\n      nh_white_std     0.031507\n      nh_white_lb      0.051153\n      nh_white_ub      0.156381\n      race             hispanic\n      Name: 1, dtype: object\n\n\n-  **pred\\_fl\\_reg\\_ln\\_five\\_cat(df, namecol, num\\_iter=100, conf\\_int=1.0)**\n\n   -  What it does?:\n\n      -  Removes extra space, if there.\n      -  Uses the `last name FL registration\n         model <ethnicolr/models/ethnicolr_keras_lstm_fl_voter_ln_five_cat.ipynb>`__\n         to predict the race and ethnicity.\n\n   +--------------+---------------------------------------------------------------------------------------------------------------------+\n   | Parameters   |                                                                                                                     |\n   +==============+=====================================================================================================================+\n   |              | **df** : *{DataFrame, csv}* Pandas dataframe of CSV file contains the names of the individual to be inferred        |\n   +--------------+---------------------------------------------------------------------------------------------------------------------+\n   |              | **namecol** : *{string, list, int}* string or list of the name or location of the column containing the last name   |\n   +--------------+---------------------------------------------------------------------------------------------------------------------+\n   |              | **num\\_iter** : *int, default=100* number of iterations to calculate uncertainty in model                           |\n   +--------------+---------------------------------------------------------------------------------------------------------------------+\n   |              | **conf\\_int** : *float, default=1.0* confidence interval in predicted class                                         |\n   +--------------+---------------------------------------------------------------------------------------------------------------------+\n\n\n   -  Output: Appends the following columns to the pandas DataFrame or CSV:\n      race (white, black, asian, hispanic or other), asian (percentage\n      chance Asian), hispanic, nh\\_black, nh\\_white, other. For each race\n      it will provide the mean, standard error, lower & upper bound of\n      confidence interval\n\n   *(Using the same dataframe from example above)*\n   ::\n\n      >>> odf = pred_fl_reg_ln_five_cat(df,'last')\n      ['asian', 'hispanic', 'nh_black', 'nh_white', 'other']\n\n      >>> odf\n         last first true_race  asian_mean  asian_std  asian_lb  asian_ub  hispanic_mean  hispanic_std  ...  nh_white_mean  nh_white_std  nh_white_lb  nh_white_ub  other_mean  other_std  other_lb  other_ub      race\n      0  Sawyer  john  nh_white    0.100038   0.020539  0.073266  0.143334       0.044263      0.013077  ...       0.376639      0.048289     0.296989     0.452834    0.248466   0.021040  0.219721  0.283785  nh_white\n      1  Torres  raul  hispanic    0.062390   0.021863  0.033837  0.103737       0.774414      0.043238  ...       0.030393      0.009591     0.019713     0.046483    0.117761   0.019524  0.089418  0.150615  hispanic\n\n      [2 rows x 24 columns]\n\n      >>> odf.iloc[0]\n      last               Sawyer\n      first                john\n      true_race        nh_white\n      asian_mean       0.100038\n      asian_std        0.020539\n      asian_lb         0.073266\n      asian_ub         0.143334\n      hispanic_mean    0.044263\n      hispanic_std     0.013077\n      hispanic_lb       0.02476\n      hispanic_ub      0.067965\n      nh_black_mean    0.230593\n      nh_black_std     0.063948\n      nh_black_lb      0.130577\n      nh_black_ub      0.343513\n      nh_white_mean    0.376639\n      nh_white_std     0.048289\n      nh_white_lb      0.296989\n      nh_white_ub      0.452834\n      other_mean       0.248466\n      other_std         0.02104\n      other_lb         0.219721\n      other_ub         0.283785\n      race             nh_white\n      Name: 0, dtype: object\n\n\n-  **pred\\_fl\\_reg\\_name\\_five\\_cat(df, namecol, num\\_iter=100, conf\\_int=1.0)**\n\n   -  What it does:\n\n      -  Removes extra space.\n      -  Uses the `full name FL\n         model <ethnicolr/models/ethnicolr_keras_lstm_fl_voter_ln_five_cat.ipynb>`__\n         to predict the race and ethnicity.\n\n   +--------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n   | Parameters   |                                                                                                                                                                                                                                                                                                                            |\n   +==============+============================================================================================================================================================================================================================================================================================================================+\n   |              | **df** : *{DataFrame, csv}* Pandas dataframe of CSV file contains the names of the individual to be inferred                                                                                                                                                                                                               |\n   +--------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n   |              | **namecol** : *{string, list}* string or list of the name or location of the column containing the first name, last name, middle name, and suffix, if there. The first name and last name columns are required. If no middle name of suffix columns are there, it is assumed that there are no middle names or suffixes.   |\n   +--------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n   |              | **num\\_iter** : *int, default=100* number of iterations to calculate uncertainty in model                                                                                                                                                                                                                                  |\n   +--------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n   |              | **conf\\_int** : *float, default=1.0* confidence interval in predicted class                                                                                                                                                                                                                                                |\n   +--------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n\n\n   -  Output: Appends the following columns to the pandas DataFrame or CSV:\n      race (white, black, asian, hispanic, or other), asian (percentage\n      chance Asian), hispanic, nh\\_black, nh\\_white, other. For each race\n      it will provide the mean, standard error, lower & upper bound of\n      confidence interval\n\n   *(Using the same dataframe from example above)*\n   ::\n\n      >>> odf = pred_fl_reg_name_five_cat(df, 'last','first')\n      ['asian', 'hispanic', 'nh_black', 'nh_white', 'other']\n\n      >>> odf\n         last first true_race  asian_mean  asian_std  asian_lb  asian_ub  hispanic_mean  hispanic_std  ...  nh_white_mean  nh_white_std  nh_white_lb  nh_white_ub  other_mean  other_std  other_lb  other_ub      race\n      0  Sawyer  john  nh_white    0.039310   0.011657  0.025982  0.059719       0.019737      0.005813  ...       0.650306      0.059327     0.553913     0.733201    0.192242   0.021004  0.160185  0.226063  nh_white\n      1  Torres  raul  hispanic    0.020086   0.011765  0.008240  0.041741       0.899110      0.042237  ...       0.019073      0.009901     0.010166     0.040081    0.055774   0.017897  0.036245  0.088741  hispanic\n\n      [2 rows x 24 columns]\n\n      >>> odf.iloc[1]\n      last               Torres\n      first                raul\n      true_race        hispanic\n      asian_mean       0.020086\n      asian_std        0.011765\n      asian_lb          0.00824\n      asian_ub         0.041741\n      hispanic_mean     0.89911\n      hispanic_std     0.042237\n      hispanic_lb      0.823799\n      hispanic_ub      0.937612\n      nh_black_mean    0.005956\n      nh_black_std     0.006528\n      nh_black_lb      0.002686\n      nh_black_ub      0.010134\n      nh_white_mean    0.019073\n      nh_white_std     0.009901\n      nh_white_lb      0.010166\n      nh_white_ub      0.040081\n      other_mean       0.055774\n      other_std        0.017897\n      other_lb         0.036245\n      other_ub         0.088741\n      race             hispanic\n      Name: 1, dtype: object\n\n\n-  **pred\\_nc\\_reg\\_name(df, namecol, num\\_iter=100, conf\\_int=1.0)**\n\n   -  What it does:\n\n      -  Removes extra space.\n      -  Uses the `full name NC\n         model <ethnicolr/models/ethnicolr_keras_lstm_nc_12_cat_model.ipynb>`__\n         to predict the race and ethnicity.\n\n   +--------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n   | Parameters   |                                                                                                                                                                                                                                                                                                                            |\n   +==============+============================================================================================================================================================================================================================================================================================================================+\n   |              | **df** : *{DataFrame, csv}* Pandas dataframe of CSV file contains the names of the individual to be inferred                                                                                                                                                                                                               |\n   +--------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n   |              | **namecol** : *{string, list}* string or list of the name or location of the column containing the first name, last name, middle name, and suffix, if there. The first name and last name columns are required. If no middle name of suffix columns are there, it is assumed that there are no middle names or suffixes.   |\n   +--------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n   |              | **num\\_iter** : *int, default=100* number of iterations to calculate uncertainty in model                                                                                                                                                                                                                                  |\n   +--------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n   |              | **conf\\_int** : *float, default=1.0* confidence interval in predicted class                                                                                                                                                                                                                                                |\n   +--------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n\n\n   -  Output: Appends the following columns to the pandas DataFrame or CSV:\n      race + ethnicity. The codebook is\n      `here <https://github.com/appeler/nc_race_ethnicity>`__. For each\n      race it will provide the mean, standard error, lower & upper bound of\n      confidence interval\n\n   ::\n\n      >>> import pandas as pd\n\n      >>> names = [\n      ...             {\"last\": \"hernandez\", \"first\": \"hector\", \"true_race\": \"HL+O\"},\n      ...             {\"last\": \"zhang\", \"first\": \"simon\", \"true_race\": \"NL+A\"},\n      ...         ]\n\n      >>> df = pd.DataFrame(names)\n\n      >>> from ethnicolr import pred_nc_reg_name\n\n      >>> odf = pred_nc_reg_name(df, 'last','first', conf_int=0.9)\n      ['HL+A', 'HL+B', 'HL+I', 'HL+M', 'HL+O', 'HL+W', 'NL+A', 'NL+B', 'NL+I', 'NL+M', 'NL+O', 'NL+W']\n\n      >>> odf\n            last   first true_race            __name     HL+A_mean  HL+A_std       HL+A_lb       HL+A_ub     HL+B_mean  ...  NL+O_mean  NL+O_std   NL+O_lb   NL+O_ub  NL+W_mean  NL+W_std   NL+W_lb   NL+W_ub  race\n      0  hernandez  hector      HL+O  Hernandez Hector  2.727371e-13       0.0  2.727374e-13  2.727374e-13  6.542198e-04  ...   0.184513       0.0  0.184513  0.184513   0.001256       0.0  0.001256  0.001256  HL+O\n      1      zhang   simon      NL+A       Zhang Simon  1.985419e-06       0.0  1.985417e-06  1.985417e-06  8.708256e-09  ...   0.003238       0.0  0.003238  0.003238   0.000154       0.0  0.000154  0.000154  NL+A\n\n      [2 rows x 53 columns]\n\n      >>> odf.iloc[0]\n      last                hernandez\n      first                  hector\n      true_race                HL+O\n      __name       Hernandez Hector\n      HL+A_mean                 0.0\n      HL+A_std                  0.0\n      HL+A_lb                   0.0\n      HL+A_ub                   0.0\n      HL+B_mean            0.000654\n      HL+B_std                  0.0\n      HL+B_lb              0.000654\n      HL+B_ub              0.000654\n      HL+I_mean            0.000032\n      HL+I_std                  0.0\n      HL+I_lb              0.000032\n      HL+I_ub              0.000032\n      HL+M_mean            0.000541\n      HL+M_std                  0.0\n      HL+M_lb              0.000541\n      HL+M_ub              0.000541\n      HL+O_mean             0.58944\n      HL+O_std                  0.0\n      HL+O_lb              0.589441\n      HL+O_ub              0.589441\n      HL+W_mean            0.221308\n      HL+W_std                  0.0\n      HL+W_lb              0.221309\n      HL+W_ub              0.221309\n      NL+A_mean            0.000044\n      NL+A_std                  0.0\n      NL+A_lb              0.000044\n      NL+A_ub              0.000044\n      NL+B_mean            0.002199\n      NL+B_std                  0.0\n      NL+B_lb              0.002199\n      NL+B_ub              0.002199\n      NL+I_mean            0.000004\n      NL+I_std                  0.0\n      NL+I_lb              0.000004\n      NL+I_ub              0.000004\n      NL+M_mean            0.000008\n      NL+M_std                  0.0\n      NL+M_lb              0.000008\n      NL+M_ub              0.000008\n      NL+O_mean            0.184513\n      NL+O_std                  0.0\n      NL+O_lb              0.184513\n      NL+O_ub              0.184513\n      NL+W_mean            0.001256\n      NL+W_std                  0.0\n      NL+W_lb              0.001256\n      NL+W_ub              0.001256\n      race                     HL+O\n      Name: 0, dtype: object\n\n\n\nApplication\n--------------\n\nTo illustrate how the package can be used, we impute the race of the campaign contributors recorded by FEC for the years 2000 and 2010 and tally campaign contributions by race.\n\n- `Contrib 2000/2010 using census_ln <ethnicolr/examples/ethnicolr_app_contrib20xx-census_ln.ipynb>`__\n- `Contrib 2000/2010 using pred_census_ln <ethnicolr/examples/ethnicolr_app_contrib20xx.ipynb>`__\n- `Contrib 2000/2010 using pred_fl_reg_name <ethnicolr/examples/ethnicolr_app_contrib20xx-fl_reg.ipynb>`__\n\nData on race of all the people in the `DIME data <https://data.stanford.edu/dime>`__ is posted `here <http://dx.doi.org/10.7910/DVN/M5K7VR>`__ The underlying python scripts are posted `here <https://github.com/appeler/dime_race>`__ \n\nData\n----------\n\nIn particular, we utilize the last-name--race data from the `2000\ncensus <http://www.census.gov/topics/population/genealogy/data/2000_surnames.html>`__\nand `2010\ncensus <http://www.census.gov/topics/population/genealogy/data/2010_surnames.html>`__,\nthe `Wikipedia data <ethnicolr/data/wiki/>`__ collected by Skiena and colleagues,\nand the Florida voter registration data from early 2017.\n\n-  `Census <ethnicolr/data/census/>`__\n-  `The Wikipedia dataset <ethnicolr/data/wiki/>`__\n-  `Florida voter registration database <http://dx.doi.org/10.7910/DVN/UBIG3F>`__\n\nEvaluation\n------------------------------------------\n1. SCAN Health Plan, a Medicare Advantage plan that serves over 200,000 members throughout California used the software to better assess racial disparities of health among the people they serve. They only had racial data on about 47% of their members so used it to learn the race of the remaining 53%. On the data they had labels for, they found .9 AUC and 83% accuracy for the last name model.\n\n2. Evaluation on NC Data: https://github.com/appeler/nc_race_ethnicity\n\nAuthors\n----------\n\nSuriyan Laohaprapanon, Gaurav Sood and Bashar Naji\n\nContributor Code of Conduct\n---------------------------------\n\nThe project welcomes contributions from everyone! In fact, it depends on\nit. To maintain this welcoming atmosphere, and to collaborate in a fun\nand productive way, we expect contributors to the project to abide by\nthe `Contributor Code of\nConduct <http://contributor-covenant.org/version/1/0/0/>`__.\n\nLicense\n----------\n\nThe package is released under the `MIT\nLicense <https://opensource.org/licenses/MIT>`__.\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/appeler/ethnicolr",
    "keywords": "race ethnicity names",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ethnicolr",
    "package_url": "https://pypi.org/project/ethnicolr/",
    "platform": null,
    "project_url": "https://pypi.org/project/ethnicolr/",
    "project_urls": {
      "Homepage": "https://github.com/appeler/ethnicolr"
    },
    "release_url": "https://pypi.org/project/ethnicolr/0.9.3/",
    "requires_dist": [
      "pandas (>=1.3.0)",
      "tensorflow (<3,>=2.7.2) ; platform_machine != \"aarch64\"",
      "tensorflow-aarch64 (<3,>=2.7.2) ; platform_machine == \"aarch64\"",
      "check-manifest ; extra == 'dev'",
      "coverage ; extra == 'test'"
    ],
    "requires_python": "",
    "summary": "Predict Race/Ethnicity Based on Sequence of Characters in the Name",
    "version": "0.9.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15901404,
  "releases": {
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "643426492694a2dab13c4fab12c12daabffff14c64b2bb5a080c3c9fbd7b11fa",
          "md5": "b0e6704274220003d349b65efd66827c",
          "sha256": "15002c6fc4e8ffbebe6f1de0e654e74305f4a01f597befa5951e7bb7f32dddff"
        },
        "downloads": -1,
        "filename": "ethnicolr-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b0e6704274220003d349b65efd66827c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17146791,
        "upload_time": "2017-05-29T04:58:47",
        "upload_time_iso_8601": "2017-05-29T04:58:47.803699Z",
        "url": "https://files.pythonhosted.org/packages/64/34/26492694a2dab13c4fab12c12daabffff14c64b2bb5a080c3c9fbd7b11fa/ethnicolr-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f8890896f10f77a37be9b1b5e8ee2cc111c9977aa5d6f6573f2898e07dca975b",
          "md5": "0c678deb2f722eec01ce5aa8b370f73e",
          "sha256": "7c000de0502b162076cec8c0c29b7cccd1f2af28e0e5677c6a8a8569d8725a85"
        },
        "downloads": -1,
        "filename": "ethnicolr-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "0c678deb2f722eec01ce5aa8b370f73e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17146838,
        "upload_time": "2017-09-17T11:03:22",
        "upload_time_iso_8601": "2017-09-17T11:03:22.513964Z",
        "url": "https://files.pythonhosted.org/packages/f8/89/0896f10f77a37be9b1b5e8ee2cc111c9977aa5d6f6573f2898e07dca975b/ethnicolr-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3d36f2c938835c821d3ea7d1c0fc7e50341f5784e133eb14b8a010e825d31093",
          "md5": "b96b89065b7301cbee9161a07d2cb626",
          "sha256": "35da754a3fa323322c1e27243b4e9b92a5552df21c779fd5b8b45c4ab42ecec9"
        },
        "downloads": -1,
        "filename": "ethnicolr-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "b96b89065b7301cbee9161a07d2cb626",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17155755,
        "upload_time": "2018-02-07T14:57:58",
        "upload_time_iso_8601": "2018-02-07T14:57:58.919968Z",
        "url": "https://files.pythonhosted.org/packages/3d/36/f2c938835c821d3ea7d1c0fc7e50341f5784e133eb14b8a010e825d31093/ethnicolr-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "01219f975639aa45c527cdca801e14d234f715c507d0559f12f144b87813e31e",
          "md5": "554ec1d0b0a2fd26e54d6d69faeef85a",
          "sha256": "1372dfc726f389bcb2f3fa5cd00f72cd4a1d115b9e2436982e8a411cbf58b183"
        },
        "downloads": -1,
        "filename": "ethnicolr-0.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "554ec1d0b0a2fd26e54d6d69faeef85a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16944791,
        "upload_time": "2018-05-07T14:18:50",
        "upload_time_iso_8601": "2018-05-07T14:18:50.052634Z",
        "url": "https://files.pythonhosted.org/packages/01/21/9f975639aa45c527cdca801e14d234f715c507d0559f12f144b87813e31e/ethnicolr-0.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b43dc5aa889a6d1938f09138b87297c255505226ee48d7930d3ea5cf4368ccb0",
          "md5": "fd2dab3b638acaba85623af6b5998088",
          "sha256": "3f932acf5b62f8e1684509d58c411360cb60023cd539eaf251304e0fcd38c996"
        },
        "downloads": -1,
        "filename": "ethnicolr-0.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "fd2dab3b638acaba85623af6b5998088",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25296448,
        "upload_time": "2018-11-02T08:19:56",
        "upload_time_iso_8601": "2018-11-02T08:19:56.554278Z",
        "url": "https://files.pythonhosted.org/packages/b4/3d/c5aa889a6d1938f09138b87297c255505226ee48d7930d3ea5cf4368ccb0/ethnicolr-0.1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "97eced4d5930059c77c0bab4d101580691d137b5b891020ae5a2931c89983a19",
          "md5": "a8e712579e23cc01c400b37738f7cbe5",
          "sha256": "c62ae6c0e168fa07da3ff959a98cf507a28cfcc3b2b03ff759350aa365030e7a"
        },
        "downloads": -1,
        "filename": "ethnicolr-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a8e712579e23cc01c400b37738f7cbe5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25296695,
        "upload_time": "2018-11-09T14:59:06",
        "upload_time_iso_8601": "2018-11-09T14:59:06.088010Z",
        "url": "https://files.pythonhosted.org/packages/97/ec/ed4d5930059c77c0bab4d101580691d137b5b891020ae5a2931c89983a19/ethnicolr-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0a92547262319b2695300275f063b1d3a189263b5f9679544b0d89f5beaa62a2",
          "md5": "0bc1f64163b5efca9232464468345bfa",
          "sha256": "17ab4e287476d37705c9b8b072cfb2cc40025eb340230772981fcebb042a9563"
        },
        "downloads": -1,
        "filename": "ethnicolr-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0bc1f64163b5efca9232464468345bfa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25296563,
        "upload_time": "2019-06-26T13:17:40",
        "upload_time_iso_8601": "2019-06-26T13:17:40.929898Z",
        "url": "https://files.pythonhosted.org/packages/0a/92/547262319b2695300275f063b1d3a189263b5f9679544b0d89f5beaa62a2/ethnicolr-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f40ce91e33a93c97a216e0ee9c7b795d26f3718730301b40adffd018a979ae50",
          "md5": "fbdac820d5d2b728fd17ec5fd424c389",
          "sha256": "a3e0802f05d50ee69712ac6a49be5c9b5fdeeced9df4dcb753ea3b27c8c4660e"
        },
        "downloads": -1,
        "filename": "ethnicolr-0.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "fbdac820d5d2b728fd17ec5fd424c389",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25296572,
        "upload_time": "2019-09-21T03:53:59",
        "upload_time_iso_8601": "2019-09-21T03:53:59.228327Z",
        "url": "https://files.pythonhosted.org/packages/f4/0c/e91e33a93c97a216e0ee9c7b795d26f3718730301b40adffd018a979ae50/ethnicolr-0.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5135932d531aaf8ea933de62ea52ff0d300028bd9eb33a54caa42512efc35a8e",
          "md5": "e3d49fc2186f4759fc52baff15cab43f",
          "sha256": "c67b5f362f082733f9863c5e482363592bf57d7ec1d83839bc64e90001015998"
        },
        "downloads": -1,
        "filename": "ethnicolr-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e3d49fc2186f4759fc52baff15cab43f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25296612,
        "upload_time": "2019-11-05T13:14:26",
        "upload_time_iso_8601": "2019-11-05T13:14:26.464419Z",
        "url": "https://files.pythonhosted.org/packages/51/35/932d531aaf8ea933de62ea52ff0d300028bd9eb33a54caa42512efc35a8e/ethnicolr-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "db4eeba3b2471c95f8146d9c0139d7eb69c515875b8592f18fc8f209b9b42730",
          "md5": "133ffdc1a877c186925a350991856f80",
          "sha256": "8e49acf8062eaec9396db0a8920914f24a7dad375026574709bbb9d830429a73"
        },
        "downloads": -1,
        "filename": "ethnicolr-0.4.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "133ffdc1a877c186925a350991856f80",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 25462331,
        "upload_time": "2020-05-27T01:20:18",
        "upload_time_iso_8601": "2020-05-27T01:20:18.751107Z",
        "url": "https://files.pythonhosted.org/packages/db/4e/eba3b2471c95f8146d9c0139d7eb69c515875b8592f18fc8f209b9b42730/ethnicolr-0.4.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d62122a879eee1a2d6a46ae16cd7a1d38c89ac1980c8ae6ac8ed244ca7ad1383",
          "md5": "a22b4cf3ae1e72ce35bb201be4256278",
          "sha256": "bccc126c0f073094b5d9e899c50ee283883ad9aac266a90747530c223ca048fa"
        },
        "downloads": -1,
        "filename": "ethnicolr-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a22b4cf3ae1e72ce35bb201be4256278",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25293416,
        "upload_time": "2020-05-27T01:20:22",
        "upload_time_iso_8601": "2020-05-27T01:20:22.346721Z",
        "url": "https://files.pythonhosted.org/packages/d6/21/22a879eee1a2d6a46ae16cd7a1d38c89ac1980c8ae6ac8ed244ca7ad1383/ethnicolr-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6b234ef1ca0c00f10362c3e2262b04c54cf7c7c28069a20dd842313dfaa5c553",
          "md5": "dc168dfd23c059a68f489599e08e9b8d",
          "sha256": "aefef80162066fb0aee38556c340a8bd34bf0b5b5dc203e8113c46c0f4c8ce5c"
        },
        "downloads": -1,
        "filename": "ethnicolr-0.5.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dc168dfd23c059a68f489599e08e9b8d",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 39050371,
        "upload_time": "2021-02-05T14:55:06",
        "upload_time_iso_8601": "2021-02-05T14:55:06.795250Z",
        "url": "https://files.pythonhosted.org/packages/6b/23/4ef1ca0c00f10362c3e2262b04c54cf7c7c28069a20dd842313dfaa5c553/ethnicolr-0.5.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "27ea627e6cc85fa9effdbe954de8a4d2a7a510e76a8ffd9f4d219c19c521d93d",
          "md5": "52f6efde1fb7a650a848d99121d3adcb",
          "sha256": "f77dd9829b2ae1619c800c736e9e280db276ca9e2af65cc6bf1058e6b50622c3"
        },
        "downloads": -1,
        "filename": "ethnicolr-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "52f6efde1fb7a650a848d99121d3adcb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 38874444,
        "upload_time": "2021-02-05T14:55:10",
        "upload_time_iso_8601": "2021-02-05T14:55:10.698305Z",
        "url": "https://files.pythonhosted.org/packages/27/ea/627e6cc85fa9effdbe954de8a4d2a7a510e76a8ffd9f4d219c19c521d93d/ethnicolr-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "05807bcfbb8974f336952e89ca70d77a0f0470f5290b1d91590d2dbc064b3343",
          "md5": "42867e993cb8d8226fcefd3901d4a1ca",
          "sha256": "92a9d351dd5c1b7c83a8be006eccfa268981a55dc290de79eacdd7a806c69ec1"
        },
        "downloads": -1,
        "filename": "ethnicolr-0.6.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "42867e993cb8d8226fcefd3901d4a1ca",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 40580631,
        "upload_time": "2021-06-22T18:21:15",
        "upload_time_iso_8601": "2021-06-22T18:21:15.954497Z",
        "url": "https://files.pythonhosted.org/packages/05/80/7bcfbb8974f336952e89ca70d77a0f0470f5290b1d91590d2dbc064b3343/ethnicolr-0.6.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5ca519646c05bab1ce328dafceca62ccc1bb4af4b3580240807bfefb9b37ff7d",
          "md5": "04147f1a70e0235462bc4777041d230a",
          "sha256": "0743fce67de55df4773b6ecffcba39b379c9e513c657357dd05458757b0cdb58"
        },
        "downloads": -1,
        "filename": "ethnicolr-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "04147f1a70e0235462bc4777041d230a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 40401829,
        "upload_time": "2021-06-22T18:21:21",
        "upload_time_iso_8601": "2021-06-22T18:21:21.196313Z",
        "url": "https://files.pythonhosted.org/packages/5c/a5/19646c05bab1ce328dafceca62ccc1bb4af4b3580240807bfefb9b37ff7d/ethnicolr-0.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "446cb9af9587a54adb8b588a0a5678e3486626c3adf5262a965142a107232656",
          "md5": "b3a91b6513803fac8465f65f70393ce7",
          "sha256": "78f8ca9f3d93b50d7f60bfd78aab16af78681dd182ad4ee1e6d4324772bc9ed6"
        },
        "downloads": -1,
        "filename": "ethnicolr-0.6.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b3a91b6513803fac8465f65f70393ce7",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 40580668,
        "upload_time": "2021-06-23T02:37:33",
        "upload_time_iso_8601": "2021-06-23T02:37:33.577516Z",
        "url": "https://files.pythonhosted.org/packages/44/6c/b9af9587a54adb8b588a0a5678e3486626c3adf5262a965142a107232656/ethnicolr-0.6.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "970c941e76454a628ba55827412a7be016fbd7b95192a2b107c90e9b07e27ec8",
          "md5": "e03a1def0b2c00e24858e17f1d27638e",
          "sha256": "3a99a9ef41c723cb8103c09e4680f02831f0648a08758e03647616b42a8b8331"
        },
        "downloads": -1,
        "filename": "ethnicolr-0.6.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e03a1def0b2c00e24858e17f1d27638e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 40401805,
        "upload_time": "2021-06-23T02:37:39",
        "upload_time_iso_8601": "2021-06-23T02:37:39.574785Z",
        "url": "https://files.pythonhosted.org/packages/97/0c/941e76454a628ba55827412a7be016fbd7b95192a2b107c90e9b07e27ec8/ethnicolr-0.6.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a75f9907af0334822bb2eaf516ada4e283572c4d08b88a88e7994a29df8d38d2",
          "md5": "246724dfd9825fabef1eb9085ede1021",
          "sha256": "07a905bdeb6835131a02d1596137cbdfb8b78171ebd81c8091b4a40efa1ea996"
        },
        "downloads": -1,
        "filename": "ethnicolr-0.7.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "246724dfd9825fabef1eb9085ede1021",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 36764829,
        "upload_time": "2021-07-15T10:29:04",
        "upload_time_iso_8601": "2021-07-15T10:29:04.258022Z",
        "url": "https://files.pythonhosted.org/packages/a7/5f/9907af0334822bb2eaf516ada4e283572c4d08b88a88e7994a29df8d38d2/ethnicolr-0.7.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d616f3d6a4fd97e15be18445c411655ebd5d18f2ecca860f08ec4beb1d5cbb8b",
          "md5": "c80bb042b3c1376b23b8006e897c66ae",
          "sha256": "669490c14e4e685c2cb93286c2351a2ff125447efd5ab038a55d8c24b6219f89"
        },
        "downloads": -1,
        "filename": "ethnicolr-0.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c80bb042b3c1376b23b8006e897c66ae",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 36577974,
        "upload_time": "2021-07-15T10:29:08",
        "upload_time_iso_8601": "2021-07-15T10:29:08.950846Z",
        "url": "https://files.pythonhosted.org/packages/d6/16/f3d6a4fd97e15be18445c411655ebd5d18f2ecca860f08ec4beb1d5cbb8b/ethnicolr-0.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d9f8c5a07e466832106daabd857b1e95a84f914093e3ec423f8093b7208e36dc",
          "md5": "0740ca927a1b3f9e3ad9e4186bc0cfd9",
          "sha256": "1e973962604cce455c07f250d0c1f9485bf1a557cf6e1e6ae449b4fedf0224e3"
        },
        "downloads": -1,
        "filename": "ethnicolr-0.8.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0740ca927a1b3f9e3ad9e4186bc0cfd9",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 36099775,
        "upload_time": "2021-11-08T17:52:07",
        "upload_time_iso_8601": "2021-11-08T17:52:07.907530Z",
        "url": "https://files.pythonhosted.org/packages/d9/f8/c5a07e466832106daabd857b1e95a84f914093e3ec423f8093b7208e36dc/ethnicolr-0.8.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d8302101f8547cce690f5182e16aa2b2e810912b6eaa520c2fd04430e6bab7c0",
          "md5": "196dee8c162a3b66319167129fa30e77",
          "sha256": "3546545a65a4ec11b7246f75f48d43fc6422ab5768a02b1798dfe171d930925b"
        },
        "downloads": -1,
        "filename": "ethnicolr-0.8.0.tar.gz",
        "has_sig": false,
        "md5_digest": "196dee8c162a3b66319167129fa30e77",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 35919174,
        "upload_time": "2021-11-08T17:52:13",
        "upload_time_iso_8601": "2021-11-08T17:52:13.814749Z",
        "url": "https://files.pythonhosted.org/packages/d8/30/2101f8547cce690f5182e16aa2b2e810912b6eaa520c2fd04430e6bab7c0/ethnicolr-0.8.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "af082704326e7df7aa996f23ffcbf87eb569a392a2b8faf5966c571cebe2efe7",
          "md5": "18a1b5fbdbd43a8d589eba20be66adc2",
          "sha256": "9b64043bfa6c4481ce7ea7e4aa42fb094be7b997114d61e42b6de803e7abcc12"
        },
        "downloads": -1,
        "filename": "ethnicolr-0.8.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "18a1b5fbdbd43a8d589eba20be66adc2",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 36099784,
        "upload_time": "2021-11-24T08:44:12",
        "upload_time_iso_8601": "2021-11-24T08:44:12.282798Z",
        "url": "https://files.pythonhosted.org/packages/af/08/2704326e7df7aa996f23ffcbf87eb569a392a2b8faf5966c571cebe2efe7/ethnicolr-0.8.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3cdef3d1a4fb1854ce6cb1496670f9fab4b2be08ca0459e054db6b5e8567129e",
          "md5": "41aa1a9b855ed4a7e13c39502367afda",
          "sha256": "22f8c576f3e0b8b085be31a44679ee6ece22a65cd3cdda2cc7435057063ff890"
        },
        "downloads": -1,
        "filename": "ethnicolr-0.8.1.tar.gz",
        "has_sig": false,
        "md5_digest": "41aa1a9b855ed4a7e13c39502367afda",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 35919185,
        "upload_time": "2021-11-24T08:44:17",
        "upload_time_iso_8601": "2021-11-24T08:44:17.202780Z",
        "url": "https://files.pythonhosted.org/packages/3c/de/f3d1a4fb1854ce6cb1496670f9fab4b2be08ca0459e054db6b5e8567129e/ethnicolr-0.8.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "394cb830f5bb9e5e9b84b0d27401c8453fefd71b90388c181be7d2aac628a787",
          "md5": "0ab82dc3cfe8244a5940f0dc170d8fd0",
          "sha256": "7996806bd88d8d11536928253d1617a7daf42f4885dca288de6fbbe5ec705844"
        },
        "downloads": -1,
        "filename": "ethnicolr-0.9.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0ab82dc3cfe8244a5940f0dc170d8fd0",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 36829649,
        "upload_time": "2022-06-14T17:04:50",
        "upload_time_iso_8601": "2022-06-14T17:04:50.211988Z",
        "url": "https://files.pythonhosted.org/packages/39/4c/b830f5bb9e5e9b84b0d27401c8453fefd71b90388c181be7d2aac628a787/ethnicolr-0.9.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "78a9267208599b83d72a97ce79f6f6b98b5e04f2ac6a214a7b86b7e4d290045c",
          "md5": "0d09aaf148051c0007dafd80c7409f7e",
          "sha256": "67aa7e29791c2d4284d8a0bd5919b3a23ffea3ff776101c38ceaf52dfb97072e"
        },
        "downloads": -1,
        "filename": "ethnicolr-0.9.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0d09aaf148051c0007dafd80c7409f7e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 36646474,
        "upload_time": "2022-06-14T17:04:54",
        "upload_time_iso_8601": "2022-06-14T17:04:54.008580Z",
        "url": "https://files.pythonhosted.org/packages/78/a9/267208599b83d72a97ce79f6f6b98b5e04f2ac6a214a7b86b7e4d290045c/ethnicolr-0.9.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "87382de502b28b6413691530d8b64cd6ff2104de570b0f21a50d601007797c88",
          "md5": "54c90c0f53fc7524ef7c5d6b446da1a9",
          "sha256": "af5aa34b7c274b3bc98d8466b5de731d87362d18bfc36711dc8952e768f76077"
        },
        "downloads": -1,
        "filename": "ethnicolr-0.9.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "54c90c0f53fc7524ef7c5d6b446da1a9",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 36829559,
        "upload_time": "2022-06-17T16:01:44",
        "upload_time_iso_8601": "2022-06-17T16:01:44.753827Z",
        "url": "https://files.pythonhosted.org/packages/87/38/2de502b28b6413691530d8b64cd6ff2104de570b0f21a50d601007797c88/ethnicolr-0.9.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fe687db3e3596bd612f0eb881fd0a2848d0f74efa685d44cfc6c64c70f8f8522",
          "md5": "a7c8020ade549e559d7cf767ba3e2a4f",
          "sha256": "82e5a55abadc159cd89fe0ce3ab0d390b25c37db2ca1985fac386095fd63a2f2"
        },
        "downloads": -1,
        "filename": "ethnicolr-0.9.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a7c8020ade549e559d7cf767ba3e2a4f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 36646239,
        "upload_time": "2022-06-17T16:01:48",
        "upload_time_iso_8601": "2022-06-17T16:01:48.833943Z",
        "url": "https://files.pythonhosted.org/packages/fe/68/7db3e3596bd612f0eb881fd0a2848d0f74efa685d44cfc6c64c70f8f8522/ethnicolr-0.9.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "91dc3656a78cd077178507324353d23702c3e3a1bf27a2b842138e857625563c",
          "md5": "ab32cb9f87c47424bc5fc955aeabc72e",
          "sha256": "ea1133b817af19f94e22baca8b8144f4392bbe394f990aa221a2ea22c026d58f"
        },
        "downloads": -1,
        "filename": "ethnicolr-0.9.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ab32cb9f87c47424bc5fc955aeabc72e",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 39544992,
        "upload_time": "2022-11-27T03:35:22",
        "upload_time_iso_8601": "2022-11-27T03:35:22.755155Z",
        "url": "https://files.pythonhosted.org/packages/91/dc/3656a78cd077178507324353d23702c3e3a1bf27a2b842138e857625563c/ethnicolr-0.9.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b3df1f2cbad7eef27a108ab3f45299ebab963c6ec2fe6869a1be6ffccf606555",
          "md5": "2de23ad43ae72feeb59c31fa8deee446",
          "sha256": "05fb882e57ad2bc77c34b89e59f98f7e824bd34f4378ad14b82eab60db5c62ea"
        },
        "downloads": -1,
        "filename": "ethnicolr-0.9.3.tar.gz",
        "has_sig": false,
        "md5_digest": "2de23ad43ae72feeb59c31fa8deee446",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 39353181,
        "upload_time": "2022-11-27T03:35:27",
        "upload_time_iso_8601": "2022-11-27T03:35:27.996859Z",
        "url": "https://files.pythonhosted.org/packages/b3/df/1f2cbad7eef27a108ab3f45299ebab963c6ec2fe6869a1be6ffccf606555/ethnicolr-0.9.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "91dc3656a78cd077178507324353d23702c3e3a1bf27a2b842138e857625563c",
        "md5": "ab32cb9f87c47424bc5fc955aeabc72e",
        "sha256": "ea1133b817af19f94e22baca8b8144f4392bbe394f990aa221a2ea22c026d58f"
      },
      "downloads": -1,
      "filename": "ethnicolr-0.9.3-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ab32cb9f87c47424bc5fc955aeabc72e",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 39544992,
      "upload_time": "2022-11-27T03:35:22",
      "upload_time_iso_8601": "2022-11-27T03:35:22.755155Z",
      "url": "https://files.pythonhosted.org/packages/91/dc/3656a78cd077178507324353d23702c3e3a1bf27a2b842138e857625563c/ethnicolr-0.9.3-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b3df1f2cbad7eef27a108ab3f45299ebab963c6ec2fe6869a1be6ffccf606555",
        "md5": "2de23ad43ae72feeb59c31fa8deee446",
        "sha256": "05fb882e57ad2bc77c34b89e59f98f7e824bd34f4378ad14b82eab60db5c62ea"
      },
      "downloads": -1,
      "filename": "ethnicolr-0.9.3.tar.gz",
      "has_sig": false,
      "md5_digest": "2de23ad43ae72feeb59c31fa8deee446",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 39353181,
      "upload_time": "2022-11-27T03:35:27",
      "upload_time_iso_8601": "2022-11-27T03:35:27.996859Z",
      "url": "https://files.pythonhosted.org/packages/b3/df/1f2cbad7eef27a108ab3f45299ebab963c6ec2fe6869a1be6ffccf606555/ethnicolr-0.9.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}