{
  "info": {
    "author": "Sankalp Jonna, Christoph Becker",
    "author_email": "tuergeist@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Timeloop-NG\n\nTimeloop-NG (for next generation) is a service that can be used to run periodic\ntasks after a certain interval.\n\nIt's the successor of [timeloop](https://github.com/sankalpjonn/timeloop) from \nSankalp Jonna as pull requests were never accepted.\n\nEach job runs on a separate thread and when the service is shut down, it waits \ntill all tasks currently being executed are completed.\n\n## Installation\n\n```sh\npip install timeloop-ng\n```\n\n## Writing jobs\n\nThe jobs run the first time after the first wait interval.\n\n```python\nimport time\n\nfrom timeloop import Timeloop\nfrom datetime import timedelta\n\ntl = Timeloop()\n\n\n@tl.job(interval=timedelta(seconds=2))\ndef sample_job_every_2s():\n    print(\"2s job current time : {}\".format(time.ctime()))\n\n\n@tl.job(interval=timedelta(seconds=5))\ndef sample_job_every_5s():\n    print(\"5s job current time : {}\".format(time.ctime()))\n\n\n@tl.job(interval=timedelta(seconds=10))\ndef sample_job_every_10s():\n    print(\"10s job current time : {}\".format(time.ctime()))\n```\n\n## Jobs that only run a certain amount of time\n\nBy default, all jobs run until they are stopped. At times you may want to run a job only once or twice.\n\n```python\nimport time\n\nfrom timeloop import Timeloop\nfrom datetime import timedelta\n\ntl = Timeloop()\n\n\n@tl.job(interval=timedelta(seconds=10), num_executions=2)\ndef run_me_twice_with_10s_pause():\n    print(\"10s job current time : {}\".format(time.ctime()))\n```\n\n## Jobs with a different initial interval\n\nAt times, you want\n\n```python\n@tl.job(interval=timedelta(seconds=1), initial_delay=timedelta(seconds=10))\ndef run_after10s_and_then_every_second():\n    print(\"job current time : {}\".format(time.ctime()))\n\n\n@tl.job(interval=timedelta(seconds=1), num_executions=2, initial_delay=timedelta(seconds=10))\ndef run_after10s_and_then_after_1second_then_stop():\n    print(\"job current time : {}\".format(time.ctime()))\n```\n\n## Start time loop in separate thread\n\nBy default timeloop starts in a separate thread.\n\nPlease do not forget to call ```tl.stop``` before exiting the program, Or else the jobs wont shut down gracefully.\n\n```python\ntl.start()\n\nwhile True:\n    try:\n        time.sleep(1)\n    except KeyboardInterrupt:\n        tl.stop()\n        break\n```\n\n## Start time loop in main thread\n\nDoing this will automatically shut down the jobs gracefully when the program is killed, so no need to call ```tl.stop```\n\n```python\ntl.start(block=True)\n```\n\n## Author\n\n* Sankalp Jonna (author of the original version)\n* Christoph Becker aka [tuergeist](mailto:tuergeist@gmail.com)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/tuergeist/timeloop",
    "keywords": "tasks,jobs,periodic task,interval,periodic job,flask style,decorator",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "timeloop-ng",
    "package_url": "https://pypi.org/project/timeloop-ng/",
    "platform": "",
    "project_url": "https://pypi.org/project/timeloop-ng/",
    "project_urls": {
      "Homepage": "https://github.com/tuergeist/timeloop"
    },
    "release_url": "https://pypi.org/project/timeloop-ng/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "An elegant way to run period tasks.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13018499,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c698064e18f6cda5f7cd62286a15126fc154701b6d42cc6a5e2ea943360c3254",
          "md5": "7ffc44aaf337ff49ad28f176b64fe289",
          "sha256": "6d8349b3212ef96a53de7c3568c61ae6e186206263c9408db143fd35607d47cf"
        },
        "downloads": -1,
        "filename": "timeloop_ng-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7ffc44aaf337ff49ad28f176b64fe289",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5162,
        "upload_time": "2022-02-26T13:51:46",
        "upload_time_iso_8601": "2022-02-26T13:51:46.376696Z",
        "url": "https://files.pythonhosted.org/packages/c6/98/064e18f6cda5f7cd62286a15126fc154701b6d42cc6a5e2ea943360c3254/timeloop_ng-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "31385a30ca30074eb5a110c3aadf6e399120287223865cf45f4e58777cf303d5",
          "md5": "89ba450ff2c987d54924f25cfe89c9de",
          "sha256": "2fd07e2aa852ab3402b0243aaabfa4993bd50ab0ecbdd92567d8ec301b666022"
        },
        "downloads": -1,
        "filename": "timeloop-ng-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "89ba450ff2c987d54924f25cfe89c9de",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4240,
        "upload_time": "2022-02-26T13:51:47",
        "upload_time_iso_8601": "2022-02-26T13:51:47.853248Z",
        "url": "https://files.pythonhosted.org/packages/31/38/5a30ca30074eb5a110c3aadf6e399120287223865cf45f4e58777cf303d5/timeloop-ng-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c698064e18f6cda5f7cd62286a15126fc154701b6d42cc6a5e2ea943360c3254",
        "md5": "7ffc44aaf337ff49ad28f176b64fe289",
        "sha256": "6d8349b3212ef96a53de7c3568c61ae6e186206263c9408db143fd35607d47cf"
      },
      "downloads": -1,
      "filename": "timeloop_ng-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7ffc44aaf337ff49ad28f176b64fe289",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 5162,
      "upload_time": "2022-02-26T13:51:46",
      "upload_time_iso_8601": "2022-02-26T13:51:46.376696Z",
      "url": "https://files.pythonhosted.org/packages/c6/98/064e18f6cda5f7cd62286a15126fc154701b6d42cc6a5e2ea943360c3254/timeloop_ng-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "31385a30ca30074eb5a110c3aadf6e399120287223865cf45f4e58777cf303d5",
        "md5": "89ba450ff2c987d54924f25cfe89c9de",
        "sha256": "2fd07e2aa852ab3402b0243aaabfa4993bd50ab0ecbdd92567d8ec301b666022"
      },
      "downloads": -1,
      "filename": "timeloop-ng-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "89ba450ff2c987d54924f25cfe89c9de",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4240,
      "upload_time": "2022-02-26T13:51:47",
      "upload_time_iso_8601": "2022-02-26T13:51:47.853248Z",
      "url": "https://files.pythonhosted.org/packages/31/38/5a30ca30074eb5a110c3aadf6e399120287223865cf45f4e58777cf303d5/timeloop-ng-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}