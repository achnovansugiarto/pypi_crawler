{
  "info": {
    "author": "Rudolph Pienaar -- FNNDSC",
    "author_email": "rudolph.pienaar@childrens.harvard.edu",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "pl-pull_scp\n================================\n\n.. image:: https://img.shields.io/docker/v/fnndsc/pl-pull_scp?sort=semver\n    :target: https://hub.docker.com/r/fnndsc/pl-pull_scp\n\n.. image:: https://img.shields.io/github/license/fnndsc/pl-pull_scp\n    :target: https://github.com/FNNDSC/pl-pull_scp/blob/master/LICENSE\n\n.. image:: https://github.com/FNNDSC/pl-pull_scp/workflows/ci/badge.svg\n    :target: https://github.com/FNNDSC/pl-pull_scp/actions\n\n\n.. contents:: Table of Contents\n\n\nAbstract\n--------\n\nThis plugin application is used to recursively copy data from a remote host into an analysis root node.\n\n\nDescription\n-----------\n\n``pull_scp`` is a *ChRIS fs-type* application that produces data for an analysis tree by copying data off a remote host using (recursive) ``scp``.\n\nOf course this assumes that the user executing this plugin has the correct login credentials to access the resource. Credentials are defined in either:\n\n* a hard-coded .env file in the repo/container\n* setting appropriate environment variables\n* using plugin CLI arguments\n\nOther than login credentials, this plugin also needs a ``filepath`` in the remote user space. All files and directories rooted in this file ``filepath`` are copied into this plugin's ``outputdir``.\n\nWarning\n-------\n\nThis plugin/app is not considered or purported to be secure! One deployment vector has the login credentials contained within an ``.env`` file in cleartext and copied into the container. Deploying such a container will expose login credentials! For better security, supply login credentials from the CLI or from within environment variables:\n\n.. code:: bash\n\n    export ENVIRONMENT=development\n    export SSH_REMOTE_HOST=1.1.1.1\n    export SSH_USERNAME=yourname\n    export SSH_PASSWORD=yourpassword\n    export SSH_KEY_FILEPATH=/usr/local/src/key.pub\n    export SCP_DESTINATION_FOLDER=/tmp\n\nCredit\n------\n\nMost of the innards of this plugin are lightly adapted from the most excellent paramiko tutorial of Todd Birchard:\n\n* https://hackersandslackers.com/automate-ssh-scp-python-paramiko\n\n\nUsage\n-----\n\n.. code::\n\n        docker run --rm fnndsc/pl-pull_scp pull_scp                     \\\n            [-h] [--help]                                               \\\n            [--json]                                                    \\\n            [--man]                                                     \\\n            [--meta]                                                    \\\n            [--savejson <DIR>]                                          \\\n            [-v <level>] [--verbosity <level>]                          \\\n            [--version]                                                 \\\n            [--username <username>]                                     \\\n            [--password <password>]                                     \\\n            [--host <hostname>]                                         \\\n            [--sshPubKeyFile <pubKeyFile>]                              \\\n            --filepath <filepath>                                       \\\n            <outputDir>\n\n\nArguments\n~~~~~~~~~\n\n.. code::\n\n        --filepath <filepath>\n        The path in the <hostname>'s filesystem to pull. This is technically\n        the only required argument of this plugin. All user specific\n        credentials are assumed to be container in the .env file or set in\n        environment variables. Note of course that all the credentials can\n        be overriden with CLI flags.\n\n        [--username <username>]\n        The username in the remote host.\n\n        [--password <password>]\n        The <username>'s password to connect to the remote host.\n\n        [--sshPubKeyFile <pubKeyFile>]\n        The ssh public key file to use in this session.\n\n        [--host <hostname>]\n        The hostname to access.\n\n        [-h] [--help]\n        If specified, show help message and exit.\n\n        [--json]\n        If specified, show json representation of app and exit.\n\n        [--man]\n        If specified, print (this) man page and exit.\n\n        [--meta]\n        If specified, print plugin meta data and exit.\n\n        [--savejson <DIR>]\n        If specified, save json representation file to DIR and exit.\n\n        [-v <level>] [--verbosity <level>]\n        Verbosity level for app. Not used currently.\n\n        [--version]\n        If specified, print version number and exit.\n\n\nInstall\n~~~~~~~\n\nInstallation is either via ``docker`` (recommended) or directly from ``PyPI`` (less recommended).\n\nFrom docker\n^^^^^^^^^^^\n\n.. code:: bash\n\n    docker pull fnndsc/pl-pull_scp\n\nGetting inline help is:\n\n.. code:: bash\n\n    docker run --rm fnndsc/pl-pull_scp pull_scp --man\n\n\nFrom PyPI\n^^^^^^^^^\n\n.. code:: bash\n\n    pip install pull_scp\n\nFor this use case, copy your public key to ``/tmp/key.pub`` and create an environment file ``/tmp/.env`` that either contains your login data/credentials or contains \"dummy\" data. The ``.env``  _must_ exist for the app to work -- regardless of the validity of its data.\n\nRun\n~~~\n\nSince ``docker`` is the recommended usagage deployment, the following instructions are ``docker`` based.\n\nBeing an _FS_ plugin, you should specify an output directory using the ``-v`` flag to ``docker run``.\n\n\n.. code:: bash\n\n    docker run --rm -u $(id -u)                             \\\n        -v $(pwd)/out:/outgoing                             \\\n        fnndsc/pl-pull_scp pull_scp                         \\\n        --username johnnyapple                              \\\n        --password 'mysecret'                               \\\n        --host computer.org                                 \\\n        --sshPubKeyFile ~/.ssh/rsa_pub.key                  \\\n        --filepath /home/johnnyapple/data                   \\\n        /outgoing\n\n\nDevelopment\n-----------\n\nBuild the Docker container:\n\n.. code:: bash\n\n    docker build -t local/pl-pull_scp .\n\nRun unit tests:\n\n.. code:: bash\n\n    docker run --rm local/pl-pull_scp nosetests\n\nExamples\n--------\n\nUsing login credentials stored in the container's `.env` file:\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nAll relevant login credentials are stored in ``/tmp/.env`` in the container. Note this method embeds the ``.env`` file in the container where it can be potentially expose credentials!\n\n.. code:: console\n\n    mkdir out && chmod 777 out\n    docker run --rm -u $(id -u) --name=pl-pull_scp              \\\n                -v $PWD/out:/outgoing                           \\\n                -it                                             \\\n                local/pl-pull_scp pull_scp -v 1                 \\\n                --filepath /home/rudolphpienaar/Desktop         \\\n                outgoing\n\n    10-15-2021 16:25:38 | INFO: /tmp/key.pub uploaded to 192.168.1.216\n\n                 _ _\n                | | |\n     _ __  _   _| | |  ___  ___ _ __\n    | '_ \\| | | | | | / __|/ __| '_ \\\n    | |_) | |_| | | | \\__ \\ (__| |_) |\n    | .__/ \\__,_|_|_| |___/\\___| .__/\n    | |           ______       | |\n    |_|          |______|      |_|\n\n    Version: X.Y.Z\n    10-15-2021 16:25:38 | INFO: (remote): du -ksh /home/rudolphpienaar/Desktop: 142M\t/home/  rudolphpienaar/Desktop\n    10-15-2021 16:25:39 | INFO: Pulling rudolphpienaar@192.168.1.216:/home/rudolphpienaar/Desktop...\n    10-15-2021 16:25:53 | INFO: Remote contents pulled to /outgoing\n    10-15-2021 16:25:53 | INFO: (NOTE: if running in a container, and doing a volume mapping,\n                                the destination dir name might not match the host dirname!)\n    10-15-2021 16:25:53 | INFO: (local): du -ksh /outgoing: 142M\t/outgoing\n\nUsing login credentials from the CLI:\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nCredentials are supplied at run time. Contents of ``/tmp/.env`` are not used.\n\n.. code:: console\n\n    docker run --rm -u $(id -u) --name=pl-pull_scp          \\\n                -v $PWD/out:/outgoing                       \\\n                -it                                         \\\n                local/pl-pull_scp pull_scp -v 1             \\\n                --filepath /home/chris/Pictures             \\\n                --host 192.168.1.200                        \\\n                --username chris                            \\\n                --password XXXXXXXXXXX                      \\\n                /outgoing\n    10-15-2021 17:05:13 | INFO: /tmp/key.pub uploaded to 192.168.1.200\n\n                 _ _\n                | | |\n     _ __  _   _| | |  ___  ___ _ __\n    | '_ \\| | | | | | / __|/ __| '_ \\\n    | |_) | |_| | | | \\__ \\ (__| |_) |\n    | .__/ \\__,_|_|_| |___/\\___| .__/\n    | |           ______       | |\n    |_|          |______|      |_|\n\n    Version: X.Y.Z\n    10-15-2021 17:05:14 | INFO: (remote): du -ksh /home/chris/Pictures: 81M\t/home/chris/Pictures\n    10-15-2021 17:05:14 | INFO: Pulling chris@192.168.1.200:/home/chris/Pictures...\n    10-15-2021 17:06:01 | INFO: Remote contents pulled to /outgoing\n    10-15-2021 17:06:01 | INFO: (NOTE: if running in a container, and doing a volume mapping,\n                                the destination dir name might not match the host dirname!)\n    10-15-2021 17:06:01 | INFO: (local): du -ksh /outgoing: 156M\t/outgoing\n\n(note that in this example the ``local`` directory is larger than the ``remote``. This occurs when the remote directory contains symbolic links -- each symbolic link is actually translated into the target file when pulled)\n\n_-30-_\n\n.. image:: https://raw.githubusercontent.com/FNNDSC/cookiecutter-chrisapp/master/doc/assets/badge/light.png\n    :target: https://chrisstore.co",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/FNNDSC/pl-pull_scp",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pull-scp",
    "package_url": "https://pypi.org/project/pull-scp/",
    "platform": "",
    "project_url": "https://pypi.org/project/pull-scp/",
    "project_urls": {
      "Homepage": "https://github.com/FNNDSC/pl-pull_scp"
    },
    "release_url": "https://pypi.org/project/pull-scp/1.2.4/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "This plugin application is used to recursively copy data from a remote host into an analysis root node.",
    "version": "1.2.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11781323,
  "releases": {
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d2a76026eadfca8e5f01b0758792a6ce33bc1e642efc3464db0158f3a5b824fe",
          "md5": "ffbd6f366a446c59b5d190f4c041fec6",
          "sha256": "87511ad2e6d7cb9015f63855c422946acc76576a7d0a770a28a86f6fe6629add"
        },
        "downloads": -1,
        "filename": "pull_scp-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "ffbd6f366a446c59b5d190f4c041fec6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12396,
        "upload_time": "2021-10-15T17:35:19",
        "upload_time_iso_8601": "2021-10-15T17:35:19.673303Z",
        "url": "https://files.pythonhosted.org/packages/d2/a7/6026eadfca8e5f01b0758792a6ce33bc1e642efc3464db0158f3a5b824fe/pull_scp-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bdbd14c013e60a2d058bd42aeb42d8542c4547a404f41e7601d49e77b24e00e1",
          "md5": "0a58502c531ff559e7924b3e312ddea8",
          "sha256": "3779ce6eaeb4838c94881773d79832ea4f7a1745a64a95672db90027b6b6498a"
        },
        "downloads": -1,
        "filename": "pull_scp-1.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "0a58502c531ff559e7924b3e312ddea8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12393,
        "upload_time": "2021-10-15T17:42:18",
        "upload_time_iso_8601": "2021-10-15T17:42:18.604846Z",
        "url": "https://files.pythonhosted.org/packages/bd/bd/14c013e60a2d058bd42aeb42d8542c4547a404f41e7601d49e77b24e00e1/pull_scp-1.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a5c30b28e54ff3a4408a5c8ec6a0ea46ae965ff0381fff0b1f432c0616499f2e",
          "md5": "2409cc065b5305fab8affd60a02ee5bc",
          "sha256": "e6ea66c61c07f9beb25df3fd530ac295bacfefcac04f4bf0e762b64d455d6ff0"
        },
        "downloads": -1,
        "filename": "pull_scp-1.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "2409cc065b5305fab8affd60a02ee5bc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12381,
        "upload_time": "2021-10-18T19:36:47",
        "upload_time_iso_8601": "2021-10-18T19:36:47.187188Z",
        "url": "https://files.pythonhosted.org/packages/a5/c3/0b28e54ff3a4408a5c8ec6a0ea46ae965ff0381fff0b1f432c0616499f2e/pull_scp-1.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c215a163409db47af13f645fe62f89aa978e9cdff75e9c35a73850a9a21f475c",
          "md5": "ce2f1bb6dfbda48e0a80fa831eb32456",
          "sha256": "fcc0af058d16cc5c933f05a7d3de6646b544fbbc023fc2d10a33af9b8c21cfe5"
        },
        "downloads": -1,
        "filename": "pull_scp-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ce2f1bb6dfbda48e0a80fa831eb32456",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12975,
        "upload_time": "2021-10-20T14:35:58",
        "upload_time_iso_8601": "2021-10-20T14:35:58.250569Z",
        "url": "https://files.pythonhosted.org/packages/c2/15/a163409db47af13f645fe62f89aa978e9cdff75e9c35a73850a9a21f475c/pull_scp-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4202bd61aa5f88d19a1d324fda9b59aa0ef117ed8038c8e8db143bb6d3eb924e",
          "md5": "aaa9b9f702755f7e9712b58889681df1",
          "sha256": "06776be3f414ad305370d8c87891b760aa384ad21ca0e0aacd6c20dee7f49a41"
        },
        "downloads": -1,
        "filename": "pull_scp-1.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "aaa9b9f702755f7e9712b58889681df1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13230,
        "upload_time": "2021-10-20T14:44:29",
        "upload_time_iso_8601": "2021-10-20T14:44:29.275041Z",
        "url": "https://files.pythonhosted.org/packages/42/02/bd61aa5f88d19a1d324fda9b59aa0ef117ed8038c8e8db143bb6d3eb924e/pull_scp-1.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d620812882b1e6962a9fb9cc06c55f0bd43d19508df805b914c84b6c52be81d7",
          "md5": "240c03af1b46744afe2e98c805544585",
          "sha256": "7e52ed1d558e3db61f7b8901e34a3bb1eceb739046b45131391e608a923c81a1"
        },
        "downloads": -1,
        "filename": "pull_scp-1.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "240c03af1b46744afe2e98c805544585",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13239,
        "upload_time": "2021-10-20T14:51:08",
        "upload_time_iso_8601": "2021-10-20T14:51:08.345503Z",
        "url": "https://files.pythonhosted.org/packages/d6/20/812882b1e6962a9fb9cc06c55f0bd43d19508df805b914c84b6c52be81d7/pull_scp-1.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d620812882b1e6962a9fb9cc06c55f0bd43d19508df805b914c84b6c52be81d7",
        "md5": "240c03af1b46744afe2e98c805544585",
        "sha256": "7e52ed1d558e3db61f7b8901e34a3bb1eceb739046b45131391e608a923c81a1"
      },
      "downloads": -1,
      "filename": "pull_scp-1.2.4.tar.gz",
      "has_sig": false,
      "md5_digest": "240c03af1b46744afe2e98c805544585",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 13239,
      "upload_time": "2021-10-20T14:51:08",
      "upload_time_iso_8601": "2021-10-20T14:51:08.345503Z",
      "url": "https://files.pythonhosted.org/packages/d6/20/812882b1e6962a9fb9cc06c55f0bd43d19508df805b914c84b6c52be81d7/pull_scp-1.2.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}