{
  "info": {
    "author": "",
    "author_email": "Romain Damian <damian.romain@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Archivist\n=========\n\n*Easily build a logger with various usual templates : console, rotating\nand file.*\n\nInstallation\n------------\n\n.. code:: bash\n\n   pip install archivist-logger\n\nUsage\n-----\n\nBuild and use the logger\n~~~~~~~~~~~~~~~~~~~~~~~~\n\nThere’s really only object that is to be used, that configures and\nreturns a logger with one of the available configuration templates.\n\n.. code:: python\n\n   from archivist import LoggerBuilder\n\n   logger = LoggerBuilder().build()\n\n   message = \"Hello\"\n   logger.info(\"An info saying %s\", message)\n\nThe default behaviour is to log only to console. To change this\nbehaviour and log to files ontop of logging to console, use one of the\nbuilt-in templates by specifying the ``template`` argument :\n``LoggerBuilder().build(template=\"rotating\")``. See the details section\nfor more information about the available templates.\n\n*Note that you should instanciate a logger as above only once for the\nwhole program*, usually in the main. Logger instances in modules are to\nbe accessed with ``logger = logging.getLogger(__name__)``, so that the\nprogram from which the logger was called always appears in the log\nstatement.\n\nDetails\n-------\n\nSetting log level\n~~~~~~~~~~~~~~~~~\n\nThe main feature of this package, compared to the usual\n``logging.getLogger(__name__)``, is to choose the level of logging from\nan environment variable rather than hard-setting it in the code.\n\nThe level (for both console and file handlers) is read from variable\n``LOGGER_LEVEL``, and defaulted to ``CRITICAL`` if it is not found. The\nlevel is applied both to the console handler and the optional file\nhandler.\n\nLogging templates\n~~~~~~~~~~~~~~~~~\n\nThere are three logging behaviours available that must be chosen when\nbuilding a logger : *console*, *rotating* or *scheduled*.\n\nTemplate *console*\n^^^^^^^^^^^^^^^^^^\n\nWhen building the logger with ``template=\"console\"``, the returned\nlogger will only log statements to the console. When using this template\non aws lambda functions, these statements are automatically redirected\nto cloudwatch.\n\nTemplate *rotating*\n^^^^^^^^^^^^^^^^^^^\n\nWhen building the logger with ``template=\"rotating\"``, log files will be\nwritten using ``logging.handlers.RotatingFileHandler``, which means that\neach log file has a size limit, and when the size limit is reached,\nanother log file is created. See the documentation\n`here <https://docs.python.org/3/library/logging.handlers.html#logging.handlers.RotatingFileHandler>`__\nfor details.\n\nThe size limit for a single file is set to 1MB, and the maximum number\nof files is 20. This mode is appropriate for programs that handles a lot\nof requests\n\nTemplate *scheduled*\n^^^^^^^^^^^^^^^^^^^^\n\nWhen building the logger with ``template=\"scheduled\"``, a single log\nfile is written per program execution. The launch date and time is\nappended to the log file name, so that each execution can be uniquely\nretrieved by its log file. The format is\n``activity-20200101-00h00m00s.log``.\n\nThis mode is appropriate for periodically triggered programs, where one\nwants to be able to identify then investigate a specific execution.\n\nLogfiles name and location\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nBy default, when log files are written, they are at the module’s\nlocation, with a default filename ``activity.log`` (with variations\naccording to the template used). It is generally a bad idea to keep log\nfiles there since they won’t be easily accessible in a python\nenvironment. Defining custom location and filename is made with\n(``.log`` extension is automatically appended to the given filename) :\n\n.. code:: python\n\n   logger = LoggerBuilder().build(template=\"scheduled\", folder=\"/home/here\", filename=\"tracking\")\n\nNote that no log file is written when using the default behaviour which\nis template *console*, so those arguments, if given, will be ignored.\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "archivist-logger",
    "package_url": "https://pypi.org/project/archivist-logger/",
    "platform": null,
    "project_url": "https://pypi.org/project/archivist-logger/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/archivist-logger/0.1.1/",
    "requires_dist": [
      "pyyaml"
    ],
    "requires_python": "",
    "summary": "Fast building of logger from common templates",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16965829,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f40625da3a629f56c4ac7bf2caac02d15d2dbe72bdd9ee6f56a285316bf5de2b",
          "md5": "625778b9a747626db376f082af4b4e80",
          "sha256": "16fac92570c1000ee3bf5aca0f99bd80284cf90bea7de194be7f457f5404faf7"
        },
        "downloads": -1,
        "filename": "archivist-logger-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "625778b9a747626db376f082af4b4e80",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5161,
        "upload_time": "2023-02-21T20:32:31",
        "upload_time_iso_8601": "2023-02-21T20:32:31.208914Z",
        "url": "https://files.pythonhosted.org/packages/f4/06/25da3a629f56c4ac7bf2caac02d15d2dbe72bdd9ee6f56a285316bf5de2b/archivist-logger-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fe9f8bcfb364f220b239442abb9caf8ff0c0fb6158883bbe2382b3354b9b0e8d",
          "md5": "e7d381c0143764c78370c8eb71b2933a",
          "sha256": "3c510919f441df6d913b513c17f66724127020b2c897415a35e8ee6599ece7ae"
        },
        "downloads": -1,
        "filename": "archivist_logger-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e7d381c0143764c78370c8eb71b2933a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7252,
        "upload_time": "2023-02-21T21:21:54",
        "upload_time_iso_8601": "2023-02-21T21:21:54.898256Z",
        "url": "https://files.pythonhosted.org/packages/fe/9f/8bcfb364f220b239442abb9caf8ff0c0fb6158883bbe2382b3354b9b0e8d/archivist_logger-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c325adec49525a00e0b91be43223b6cdb5d16bd823fd0bdd4c65fc390813ae45",
          "md5": "32ce1c97a5d89c83ac5b08a9999a6bb6",
          "sha256": "6aeabb2c20bfb0123243c6612ba38e632795f572fb71a9b5b9c5b06c490a7677"
        },
        "downloads": -1,
        "filename": "archivist-logger-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "32ce1c97a5d89c83ac5b08a9999a6bb6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5751,
        "upload_time": "2023-02-21T21:21:56",
        "upload_time_iso_8601": "2023-02-21T21:21:56.904351Z",
        "url": "https://files.pythonhosted.org/packages/c3/25/adec49525a00e0b91be43223b6cdb5d16bd823fd0bdd4c65fc390813ae45/archivist-logger-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fe9f8bcfb364f220b239442abb9caf8ff0c0fb6158883bbe2382b3354b9b0e8d",
        "md5": "e7d381c0143764c78370c8eb71b2933a",
        "sha256": "3c510919f441df6d913b513c17f66724127020b2c897415a35e8ee6599ece7ae"
      },
      "downloads": -1,
      "filename": "archivist_logger-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e7d381c0143764c78370c8eb71b2933a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 7252,
      "upload_time": "2023-02-21T21:21:54",
      "upload_time_iso_8601": "2023-02-21T21:21:54.898256Z",
      "url": "https://files.pythonhosted.org/packages/fe/9f/8bcfb364f220b239442abb9caf8ff0c0fb6158883bbe2382b3354b9b0e8d/archivist_logger-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c325adec49525a00e0b91be43223b6cdb5d16bd823fd0bdd4c65fc390813ae45",
        "md5": "32ce1c97a5d89c83ac5b08a9999a6bb6",
        "sha256": "6aeabb2c20bfb0123243c6612ba38e632795f572fb71a9b5b9c5b06c490a7677"
      },
      "downloads": -1,
      "filename": "archivist-logger-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "32ce1c97a5d89c83ac5b08a9999a6bb6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5751,
      "upload_time": "2023-02-21T21:21:56",
      "upload_time_iso_8601": "2023-02-21T21:21:56.904351Z",
      "url": "https://files.pythonhosted.org/packages/c3/25/adec49525a00e0b91be43223b6cdb5d16bd823fd0bdd4c65fc390813ae45/archivist-logger-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}