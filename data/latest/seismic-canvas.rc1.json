{
  "info": {
    "author": "Yunzhi Shi",
    "author_email": "yunzhi.shi.phd@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# Seismic-Canvas: interactive 3D seismic visualization tool\n\nSeismic-Canvas is an interactive 3D visualization tool mainly designed for seismic data, at the same time also can be useful for any 3D data.\nThis tool is based on [VisPy](https://github.com/vispy/vispy), a Python library that leverages the computational power of GPUs through the **OpenGL** library.\n\nInstall\n--------\nSimply run the following command to install from PyPI:\n```\npip install seismic_canvas\n```\n\nUsage\n--------\n\n### Slicing\nAdd any number of slices to view the slices of your volume using `seismic_canvas.volume_slices` function. For example:\n```python\nvisual_nodes = volume_slices(volume,\n  x_pos=[370, 170, 570, 770], y_pos=810, z_pos=120, clim=(-2, 2))\n```\n\n<img src='./images/Slicing.png' alt='Slicing' width=480/>\n\n### Camera\nLeft click and drag to rotate the camera angle; right click and drag, or scroll mouse wheel, to zoom in and out. Hold **Shift** key, left click and drag to pan move. Press **Space** key to return to the initial view. Press **S** key to save a screenshot PNG file at any time. Press **Esc** key to close the window.\n\n<img src='./images/Camera.gif' alt='Camera' width=640/>\n\n### Dragging\nMost elements are draggable. Hold **Ctrl** key, the selectable visual nodes will be highlighted when your mouse hovers over them; left click and drag to move the highlighted visual node. The volume slices will update their contents in real-time during dragging. You can also press **D** key to toggle the dragging mode on/off.\n\n<img src='./images/Dragging.gif' alt='Dragging' width=640/>\n\n### MemMap\nCompatible to [numpy memory map](https://docs.scipy.org/doc/numpy/reference/generated/numpy.memmap.html). For example, reading in a binary data file contatining a 3D seismic volume with size 210x920x825 (608MB), Seismic-Canvas takes ~700MB RAM (Windows PyQt5 backend).\n```python\nvolume = np.fromfile('./CostaRica_seismic.dat', '>f4').reshape(825, 920, 210)\n```\nInstead, reading in the same file using numpy memory map, Seismic-Canvas takes only ~82MB RAM (Windows PyQt5 backend), and significantly reduces the launch time.\n```python\nvolume = np.memmap('./CostaRica_seismic.dat', dtype='>f4',\n                   mode='r', shape=(825, 920, 210))\n```\n\n### Reproducibility\nWhen you drag and arrange everything on the canvas, press **A** key to print out a collection of useful parameters that can be used to reproduce the current canvas setting.\n\n<img src='./images/Reproducibility.png' alt='Reproducibility' width=640/>\n\nDependencies\n------------\n\nSeismic-Canvas depends on **numpy** and **vispy** Python libraries.\nThe vispy library also depends on one of these backends to display a window on your OS: PyQt4/PySide, PyQt5/PySide2, glfw, pyglet, SDL, or wx.\nWe recommend **PyQt5** as it is the easiest to install and most compatible on different platforms.\n\nIt is also recommended to install **PyOpenGL** and **matplotlib**; they are optinal libraries that can enhance the visualization in various ways. For example, **PyOpenGL** allows for nice antialiased 3D line objects, and **matplotlib** helps render a much more useful colorbar than the vispy stock colorbar object.\n\nDemo\n----\n\nSee [`simple_demo.py`](./examples/simple_demo.py) for a simple demo. [`vispy/util/fetching.py`](https://github.com/vispy/vispy/blob/master/vispy/util/fetching.py) will automatically download this example data.\n\n<img src='./images/Simple Demo.png' alt='Simple Demo' width=360/>\n\nAlso try [`osv_F3_demo.py`](./examples/osv_F3_demo.py) to check out the results from this research: [xinwucwp/osv](https://github.com/xinwucwp/osv). You can download all the binary data volumes from this [Google Drive link](https://drive.google.com/drive/folders/1SqEOYIi6MV0PNKazuZ50R_qjLA0VWBM7?usp=sharing).\n\n<img src='./images/Planarity.png' alt='Planarity' width=640/>\n<img src='./images/Fault Semblance.png' alt='Fault Semblance' width=640/>\n<img src='./images/Fault Strike Angle.png' alt='Fault Strike Angle' width=640/>\n\nUsing 2D markers to visualize a randomly generated well logs.\n\n<img src='./images/Voting Scores.png' alt='Voting Scores' width=640/>\n\nUsing triangle mesh surfaces to visualize `FaultSkin`s.\n\n<img src='./images/Fault Surfaces.png' alt='Fault Surfaces' width=640/>\n\nA dark themed example with a z-axis-up axis legend:\n\n<img src='./images/Fault Likelihood.png' alt='Fault Likelihood' width=640/>\n\nTo-Do List\n-------\n- [x] Well log visualization\n- [x] Replace current colorbar with Matplotlib rendered colorbar\n- [ ] Draw lines where slice planes intersect\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/yunzhishi/seismic-canvas",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "seismic-canvas",
    "package_url": "https://pypi.org/project/seismic-canvas/",
    "platform": "",
    "project_url": "https://pypi.org/project/seismic-canvas/",
    "project_urls": {
      "Homepage": "https://github.com/yunzhishi/seismic-canvas"
    },
    "release_url": "https://pypi.org/project/seismic-canvas/0.1.0/",
    "requires_dist": [
      "numpy",
      "vispy",
      "PyQt5",
      "PyOpenGL",
      "matplotlib"
    ],
    "requires_python": "",
    "summary": "An interactive 3D visualization tool mainly designed for seismic data",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8520175,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fad50ab6891be18d3be1560d8be1ac308f3bae43eb07bcaa40150c10470ca1ef",
          "md5": "6ec8ec7c41667843e1382a34d097d1cf",
          "sha256": "3ee3421402bb9f44ce51df09de12283000243b72d9b94516899419865740326a"
        },
        "downloads": -1,
        "filename": "seismic_canvas-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6ec8ec7c41667843e1382a34d097d1cf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19484,
        "upload_time": "2020-10-28T04:45:26",
        "upload_time_iso_8601": "2020-10-28T04:45:26.908244Z",
        "url": "https://files.pythonhosted.org/packages/fa/d5/0ab6891be18d3be1560d8be1ac308f3bae43eb07bcaa40150c10470ca1ef/seismic_canvas-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c140994a92789e2a431a994979cb62fd8901448daf2535a09956380c9b9cd370",
          "md5": "06e750f110e6842f64cc28a607dcad60",
          "sha256": "dfc7a3708e084580f4ad89f5db68ac860c553df304d2e18ca8b5e59088f2b7a8"
        },
        "downloads": -1,
        "filename": "seismic_canvas-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "06e750f110e6842f64cc28a607dcad60",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26296222,
        "upload_time": "2020-10-28T04:46:50",
        "upload_time_iso_8601": "2020-10-28T04:46:50.888759Z",
        "url": "https://files.pythonhosted.org/packages/c1/40/994a92789e2a431a994979cb62fd8901448daf2535a09956380c9b9cd370/seismic_canvas-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fad50ab6891be18d3be1560d8be1ac308f3bae43eb07bcaa40150c10470ca1ef",
        "md5": "6ec8ec7c41667843e1382a34d097d1cf",
        "sha256": "3ee3421402bb9f44ce51df09de12283000243b72d9b94516899419865740326a"
      },
      "downloads": -1,
      "filename": "seismic_canvas-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6ec8ec7c41667843e1382a34d097d1cf",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 19484,
      "upload_time": "2020-10-28T04:45:26",
      "upload_time_iso_8601": "2020-10-28T04:45:26.908244Z",
      "url": "https://files.pythonhosted.org/packages/fa/d5/0ab6891be18d3be1560d8be1ac308f3bae43eb07bcaa40150c10470ca1ef/seismic_canvas-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c140994a92789e2a431a994979cb62fd8901448daf2535a09956380c9b9cd370",
        "md5": "06e750f110e6842f64cc28a607dcad60",
        "sha256": "dfc7a3708e084580f4ad89f5db68ac860c553df304d2e18ca8b5e59088f2b7a8"
      },
      "downloads": -1,
      "filename": "seismic_canvas-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "06e750f110e6842f64cc28a607dcad60",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 26296222,
      "upload_time": "2020-10-28T04:46:50",
      "upload_time_iso_8601": "2020-10-28T04:46:50.888759Z",
      "url": "https://files.pythonhosted.org/packages/c1/40/994a92789e2a431a994979cb62fd8901448daf2535a09956380c9b9cd370/seismic_canvas-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}