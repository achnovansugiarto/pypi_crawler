{
  "info": {
    "author": "Kareem Ahmed, Tao Li, Thy Ton, Quan Gio, Kai-Wei Chang, Parisa Kordjamshidi, Vivek Srikumar, Guy Van den Broeck, Sameer Singh",
    "author_email": "ahmedk@cs.ucla.edu",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "\n# Pylon: A PyTorch Framework for Learning with Constraints\n\n## Dependencies\n- Python >= 3.6\n- torch>=1.9.0\n- astor\n\n## Installation\n\nOptional, set up virtualenv:\n```\npython3 -m venv /path/to/env\nsource /path/to/env/bin/activate\n```\nInstall using pip:\n```\npip install pylon-lib\n```\n\nAlternatively, compile from source:\n```\ngit clone https://github.com/pylon-lib/pylon.git\ncd pylon\npython3 -m pip install --upgrade pip\npip install flake8 pytest\npip install -r requirements.txt\n```\nMake sure to install PyTorch: https://pytorch.org\n\n## Basic Example\nOur goal is to enforce the XOR constraint on the output of a simple classifier:\nonly one of the outputs can be \"on\" i.e. set to 1\n\n```\nimport torch\nimport torch.nn.functional as F\n\nclass Net(torch.nn.Module):\n    def __init__(self, w=None):\n        super().__init__()\n        if w is not None:\n            self.w = torch.nn.Parameter(torch.tensor(w).float().view(6, 1))\n        else:\n            self.w = torch.nn.Parameter(torch.rand(6, 1))\n\n    def forward(self, x):\n        return torch.matmul(self.w, x).view(3, 2)\n```\nWe define our constraint funciton\n```\nfrom pylon.constraint import constraint\nfrom pylon.brute_force_solver import SatisfactionBruteForceSolver\n\n# Our constraint function accepts a decoding tensor of\n# shape (batch_size, ...) and is expected to return\n# a tensor fo shape (batch_size, )\ndef xor(y):\n    return y[:, 0] != y[:, 1] and y[:, 1] != y[:, 2]\n    \nxor_cons = constraint(xor, SatisfactionBruteForceSolver())\n```\nAnd proceed to our training loop\n```\n# Create network and optimizer\nnet = Net()\nopt = torch.optim.SGD(net.parameters(), lr=0.1)\n\n# Input and label\nx = torch.tensor([1.])\ny = torch.tensor([0, 0, 1])\n\n# training loop\ny0, y1, y2 = [], [], []\nfor i in range(500):\n    opt.zero_grad()\n    y_logit = net(x)\n    loss = F.cross_entropy(y_logit[2:], y[2:])\n    loss += xor_cons(y_logit.unsqueeze(0)) #Pylon expect tensors of shape (batch_size, ...)\n    loss.backward()\n    y_prob = torch.softmax(y_logit, dim=-1)\n    y0.append(y_prob[0,1].data); y1.append(y_prob[1,1].data); y2.append(y_prob[2,1].data)\n    opt.step()\n\nimport matplotlib.pyplot as plt\nplt.plot(y0, label='y0')\nplt.plot(y1, label='y1')\nplt.plot(y2, label='y2')\nplt.legend()\n```\n![Image](https://user-images.githubusercontent.com/2989475/135705681-ce62667f-cdf1-4b8a-9efc-db0fc9cefb2e.png)\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://pylon-lib.github.io",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pylon-lib",
    "package_url": "https://pypi.org/project/pylon-lib/",
    "platform": "",
    "project_url": "https://pypi.org/project/pylon-lib/",
    "project_urls": {
      "Homepage": "https://pylon-lib.github.io",
      "Pylon source": "https://github.com/pylon-lib/pylon"
    },
    "release_url": "https://pypi.org/project/pylon-lib/0.1.0/",
    "requires_dist": [
      "astor",
      "PySDD ; extra == 'circuits'"
    ],
    "requires_python": ">=3.6.0",
    "summary": "A PyTorch framework for learning with constraints",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11649420,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "df085b6447ec3902bd95dbcffa1d4034c08b5659eb0758e8cfc2876ff3cb4f16",
          "md5": "7eec38ecafcf1e479417768895e41ba9",
          "sha256": "91d6baeb9558e857acbb8b6b97b89df97b12da7f08b25c39bd146b3b52852d6e"
        },
        "downloads": -1,
        "filename": "pylon_lib-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7eec38ecafcf1e479417768895e41ba9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 24334,
        "upload_time": "2021-10-06T22:55:30",
        "upload_time_iso_8601": "2021-10-06T22:55:30.724885Z",
        "url": "https://files.pythonhosted.org/packages/df/08/5b6447ec3902bd95dbcffa1d4034c08b5659eb0758e8cfc2876ff3cb4f16/pylon_lib-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c5b4c168140a45e185413ef8c0e49953f7236be7745ed62080d83dfb250d6243",
          "md5": "e7a91fe9db543f5ff6b890136a82c554",
          "sha256": "03cad55ad255d8a4be1d2bcf5a9c09078b47bed5fc5d19d41abfbece5d829ed7"
        },
        "downloads": -1,
        "filename": "pylon-lib-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e7a91fe9db543f5ff6b890136a82c554",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 22377,
        "upload_time": "2021-10-06T22:55:32",
        "upload_time_iso_8601": "2021-10-06T22:55:32.918341Z",
        "url": "https://files.pythonhosted.org/packages/c5/b4/c168140a45e185413ef8c0e49953f7236be7745ed62080d83dfb250d6243/pylon-lib-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "df085b6447ec3902bd95dbcffa1d4034c08b5659eb0758e8cfc2876ff3cb4f16",
        "md5": "7eec38ecafcf1e479417768895e41ba9",
        "sha256": "91d6baeb9558e857acbb8b6b97b89df97b12da7f08b25c39bd146b3b52852d6e"
      },
      "downloads": -1,
      "filename": "pylon_lib-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7eec38ecafcf1e479417768895e41ba9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6.0",
      "size": 24334,
      "upload_time": "2021-10-06T22:55:30",
      "upload_time_iso_8601": "2021-10-06T22:55:30.724885Z",
      "url": "https://files.pythonhosted.org/packages/df/08/5b6447ec3902bd95dbcffa1d4034c08b5659eb0758e8cfc2876ff3cb4f16/pylon_lib-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c5b4c168140a45e185413ef8c0e49953f7236be7745ed62080d83dfb250d6243",
        "md5": "e7a91fe9db543f5ff6b890136a82c554",
        "sha256": "03cad55ad255d8a4be1d2bcf5a9c09078b47bed5fc5d19d41abfbece5d829ed7"
      },
      "downloads": -1,
      "filename": "pylon-lib-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e7a91fe9db543f5ff6b890136a82c554",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.0",
      "size": 22377,
      "upload_time": "2021-10-06T22:55:32",
      "upload_time_iso_8601": "2021-10-06T22:55:32.918341Z",
      "url": "https://files.pythonhosted.org/packages/c5/b4/c168140a45e185413ef8c0e49953f7236be7745ed62080d83dfb250d6243/pylon-lib-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}