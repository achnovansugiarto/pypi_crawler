{
  "info": {
    "author": "garretthoffman",
    "author_email": "garrett.lee.hoffman@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: System :: Distributed Computing"
    ],
    "description": "# mlflow-modal\n\nA plugin that integrates [Modal] with MLflow. `mlflow-modal` enables MLflow users to deploy their models to serverless, scalable endpoints seamlessly with zero infrastructure.\n\n[Modal]: https://www.modal.com\n\n## Installation\n\n```bash\npip install mlflow-modal\n```\n\nThe following packages are required and will be installed with the plugin:\n\n1. `\"modal-client\"`\n2. `\"mlflow>=1.12.0\"`\n\n\n## Usage\nThe `mlflow-modal` plugin integrates Modal with the MLFlow deployments API.\n\nBefore using this plugin, you must set create an account and API Token at https://modal.com/.\n\nYou must have the following environment variables configured to allow the plugin to integrate with your Modal workspace:\n\n* `MODAL_TOKEN_ID`\n* `MODAL_TOKEN_SECRET`\n* `MODAL_WORKSPACE`\n\nThe API is summarized below. For full details see the MLflow deployment plugin [Python API] and [command-line interface] documentation.\n\n### Create deployment\nDeploy a model built with MLflow as a Modal webhook with the desired [configuration parameters]; for example, `gpu` or `keep_warm`.  Currently this plugin only supports the `python_function` flavor of MLflow models that expect a numpy array as input and return a numpy array as output. The `python_function` flavor is the default flavor so this is not required to be specified in commands.\n\nModel deployments on Modal create a REST API endpoint at `https://<modal workspace>--mlflow-<deployment name>-predict.modal.run`. The endpoint accepts POST requests with a body specifying `input` and returns a response with a body specifying `predictions`. For example:\n\n```bash\nvscode@ccd6dde2dbf5:/workspaces/mlflow-modal$ curl -X POST https://workspace--mlflow-add5-predict.modal.run -d '{\"input\": [[1,2,3,4,5],[6,7,8,9,10]]}' --header \"Content-Type: application/json\"\n{\"predictions\":[[6.0,7.0,8.0,9.0,10.0],[11.0,12.0,13.0,14.0,15.0]]}\n```\n\n##### CLI\n```bash\nmlflow deployments create -t modal -m <model uri> --name <deployment name> -C gpu=T4 -C keep_warm=true\n```\n\n##### Python API\n```python\nfrom mlflow.deployments import get_deploy_client\ntarget_uri = \"modal\"\nplugin = get_deploy_client(target_uri)\nplugin.create_deployment(\n    name=\"<deployment name>\",\n    model_uri=\"<model uri>\",\n    config={\"gpu\": \"T4\", \"keep_warm\"=True})\n```\n\n### Update deployment\nModify the configuration of a deployed model and/or replace the deployment with a new model URI.\n\n##### CLI\n```bash\nmlflow deployments update -t modal --name <deployment name> -C gpu=A100\n```\n\n##### Python API\n```python\nplugin.update_deployment(name=\"<deployment name>\", config={\"gpu\": \"A100\"})\n```\n\n### Delete deployment\nDelete an existing deployment.\n\n##### CLI\n```bash\nmlflow deployments delete -t modal --name <deployment name>\n```\n\n##### Python API\n```python\nplugin.delete_deployment(name=\"<deployment name>\")\n```\n\n### List deployments\nList the details of all the models deployed on Modal. This includes only models deployed via this plugin.\n\n##### CLI\n```bash\nmlflow deployments list -t modal\n```\n\n##### Python API\n```python\nplugin.list_deployments()\n```\n\n### Get deployment details\nFetch the details associated with a given deployment. This includes Modal `app_id`, `created_at` timestamp, and the `endpoint` for the Modal webhook.\n\n##### CLI\n```bash\nmlflow deployments get -t modal --name <deployment name>\n```\n\n##### Python API\n```python\nplugin.get_deployment(name=\"<deployment name>\")\n```\n\n### Run prediction on deployed model\nFor the prediction inputs, the Python API expects a pandas DataFrame. To invoke via the command line, pass in the path to a JSON file containing the input.\n\n##### CLI\n```bash\nmlflow deployments predict -t modal --name <deployment name> --input-path <input file path> --output-path <output file path>\n```\n\n`output-path` is an optional parameter. Without it, the result will be printed in the terminal.\n\n##### Python API\n```python\nplugin.predict(name=\"<deployment name>\", inputs=<prediction input>)\n```\n\n### Run the model deployment \"locally\"\nRun an ephemeral deployment of your model using [`modal serve`]. This will behave exactly the same as `mlflow deployments create -t modal` however the app will stop running approximately 5 minutes after you hit Ctrl-C. While the app is running Modal will create a temporary URL that you can use like the normal web endpoint created by Modal. \n\n##### CLI\n```bash\nmlflow deployments run-local -t modal -m <model uri> --name <deployment name> -C gpu=T4 -C keep_warm=true\n```\n\n### Plugin help\nPrints the plugin help string.\n\n##### CLI\n```bash\nmlflow deployments help -t modal\n```\n\n[Python API]: https://www.mlflow.org/docs/latest/python_api/mlflow.deployments.html\n[command-line interface]: https://www.mlflow.org/docs/latest/cli.html#mlflow-deployments\n[configuration parameters]: https://modal.com/docs/reference/modal.Stub#webhook\n[`modal serve`]: https://modal.com/docs/guide/webhooks#developing-with-modal-serve\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/garretthoffman/mlflow-modal",
    "keywords": "mlflow,modal,serverless,machine learning",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mlflow-modal",
    "package_url": "https://pypi.org/project/mlflow-modal/",
    "platform": null,
    "project_url": "https://pypi.org/project/mlflow-modal/",
    "project_urls": {
      "Homepage": "https://github.com/garretthoffman/mlflow-modal"
    },
    "release_url": "https://pypi.org/project/mlflow-modal/0.1.0/",
    "requires_dist": [
      "modal-client",
      "mlflow (>=1.12.0)",
      "pydantic (>=1.10.5)"
    ],
    "requires_python": ">=3.7",
    "summary": "Modal MLflow deployment plugin",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17023495,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "af2b2f7065f96efc55b43253603b66dfdc1b31c6cae0c6cd4c88c106451290fa",
          "md5": "50287dc1f1970add1d5856d621fc0d04",
          "sha256": "cbe9f04ea675c6a9412da3e6f1b7141cd2e5fb70b2820d1e6cd2cb0ad34ccd76"
        },
        "downloads": -1,
        "filename": "mlflow_modal-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "50287dc1f1970add1d5856d621fc0d04",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 13468,
        "upload_time": "2023-02-25T04:57:34",
        "upload_time_iso_8601": "2023-02-25T04:57:34.102929Z",
        "url": "https://files.pythonhosted.org/packages/af/2b/2f7065f96efc55b43253603b66dfdc1b31c6cae0c6cd4c88c106451290fa/mlflow_modal-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd4f5302fd94f91ef53d6c3baa823850f2320a9b8f0d4c7c9ae0c65ccb211c85",
          "md5": "b60ae13afb9a99de21fc958e5ab88b70",
          "sha256": "2090a7e837356850c816c6836afe130d4af72c25e2bf0d464730afea218ba676"
        },
        "downloads": -1,
        "filename": "mlflow-modal-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b60ae13afb9a99de21fc958e5ab88b70",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 13119,
        "upload_time": "2023-02-25T04:57:36",
        "upload_time_iso_8601": "2023-02-25T04:57:36.213393Z",
        "url": "https://files.pythonhosted.org/packages/cd/4f/5302fd94f91ef53d6c3baa823850f2320a9b8f0d4c7c9ae0c65ccb211c85/mlflow-modal-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "af2b2f7065f96efc55b43253603b66dfdc1b31c6cae0c6cd4c88c106451290fa",
        "md5": "50287dc1f1970add1d5856d621fc0d04",
        "sha256": "cbe9f04ea675c6a9412da3e6f1b7141cd2e5fb70b2820d1e6cd2cb0ad34ccd76"
      },
      "downloads": -1,
      "filename": "mlflow_modal-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "50287dc1f1970add1d5856d621fc0d04",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 13468,
      "upload_time": "2023-02-25T04:57:34",
      "upload_time_iso_8601": "2023-02-25T04:57:34.102929Z",
      "url": "https://files.pythonhosted.org/packages/af/2b/2f7065f96efc55b43253603b66dfdc1b31c6cae0c6cd4c88c106451290fa/mlflow_modal-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cd4f5302fd94f91ef53d6c3baa823850f2320a9b8f0d4c7c9ae0c65ccb211c85",
        "md5": "b60ae13afb9a99de21fc958e5ab88b70",
        "sha256": "2090a7e837356850c816c6836afe130d4af72c25e2bf0d464730afea218ba676"
      },
      "downloads": -1,
      "filename": "mlflow-modal-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "b60ae13afb9a99de21fc958e5ab88b70",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 13119,
      "upload_time": "2023-02-25T04:57:36",
      "upload_time_iso_8601": "2023-02-25T04:57:36.213393Z",
      "url": "https://files.pythonhosted.org/packages/cd/4f/5302fd94f91ef53d6c3baa823850f2320a9b8f0d4c7c9ae0c65ccb211c85/mlflow-modal-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}