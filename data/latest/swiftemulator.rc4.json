{
  "info": {
    "author": "Josh Borrow",
    "author_email": "josh@joshborrow.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "SWIFT-Emulator\n==============\n\n[![Documentation Status](https://readthedocs.org/projects/swiftemulator/badge/?version=latest)](https://swiftemulator.readthedocs.io/en/latest/?badge=latest)\n![Test Status](https://github.com/swiftsim/emulator/actions/workflows/pytest.yml/badge.svg)\n[![PyPI version](https://badge.fury.io/py/swiftemulator.svg)](https://badge.fury.io/py/swiftemulator)\n[![status](https://joss.theoj.org/papers/61d082196ef861cc0b612486c1fa6d40/status.svg)](https://joss.theoj.org/papers/61d082196ef861cc0b612486c1fa6d40)\n\nThe SWIFT-emulator (henceforth 'the emulator') was initially designed for [SWIFT](http://swift.dur.ac.uk)\noutputs, and includes utilities to read and write SWIFT data.\n\nThe emulator can be used used to predict \noutputs of simulations without having to run them, by employing Gaussian Process\nRegression with `george` and sensitivity analysis with `SALib`.\n\nDcumentation is available at [ReadTheDocs](https://swiftemulator.readthedocs.io/).\n\nPredicting Simulations\n----------------------\n\nThe emulator can predict a given scaling relation\n(the relationship between two output variables in a simulation, for instance the\nmasses of galaxies and their size) when varying the underlying physical model\nsimulated in a continuous way.\n\nAs an example from cosmological simulations, imagine varing the energy that supernovae\nrelease when they explode as a parameter `x`. This affects both the sizes and masses of galaxies.\nThe emulator, using a few 'base' simulations, performed with the real code,\nat various values of `x` spaced evenly throughout the viable region, can predict\nwhat the shape of the relationship between mass and size would be at other values\nof `x`, given that it has been trained on the base simulation outputs.\n\nWhy SWIFT Emulator?\n-------------------\n\nThe emulator works at a much higher level than other Gaussian Process Regression\nlibraries, such as `george` (which it is built on).\n\nWorking with base machine learning libraries can be tricky, as it typically\nrequries knowledge of how to structure input arrays in a specific way (both for\ntraining and prediction). They also rarely also include model design routines.\nAdditionally, validation and visualisation routines\nare typically missing.\n\nThe SWIFT Emulator package provides a one-stop solution, with a consistent API,\nfor developing a model design, running it (if using SWIFT), reading in data (\nagain if using SWIFT), building an emulation model, validating said model,\ncomparing the model against ground-truth data _across parameter space_ \n(e.g. observations), and visualising the results.\n\nInstallation\n------------\n\nThe package can be installed easily from PyPI under the name `swiftemulator`,\nso:\n\n```\npip3 install swiftemulator\n```\n\nThis will install all necessary dependencies.\n\nThe package can be installed from source, by cloning the repository and\nthen using `pip install -e .` for development purposes.\n\n\nRequirements\n------------\n\nThe package requires a number of numerical and experimental design packages.\nThese have been tested (and are continuously tested) using GitHub actions CI\nto use the latest versions available on PyPI. See `requirements.txt` for\ndetails for the packages required to develop SWIFT-Emulator. The packages\nwill be installed automatically by `pip` when installing from PyPI.\n\n\nAuthors\n-------\n\n+ Roi Kugel (@Moyoxkit)\n+ Josh Borrow (@jborrow)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/SWIFTSIM/emulator",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "swiftemulator",
    "package_url": "https://pypi.org/project/swiftemulator/",
    "platform": null,
    "project_url": "https://pypi.org/project/swiftemulator/",
    "project_urls": {
      "Homepage": "https://github.com/SWIFTSIM/emulator"
    },
    "release_url": "https://pypi.org/project/swiftemulator/1.2.0/",
    "requires_dist": [
      "numpy",
      "unyt",
      "attrs",
      "george",
      "SALib",
      "scikit-learn",
      "corner",
      "velociraptor",
      "pyyaml",
      "pyDOE",
      "tqdm",
      "emcee"
    ],
    "requires_python": "",
    "summary": "Gaussian process emulator for creating synthetic model data across high dimensional parameter spaces, initially developed for use with the SWIFT simulation code.",
    "version": "1.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13477347,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4a2508db34ae2c44814b099d099d48a57191496bae13330f68e6306bb8316cf0",
          "md5": "751a0d655276350c4e4eeee3794b37fb",
          "sha256": "8076a83b63fe330b538571e6672902bb1c49b58dbad37012e9162792cfe58c1e"
        },
        "downloads": -1,
        "filename": "swiftemulator-0.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "751a0d655276350c4e4eeee3794b37fb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 54636,
        "upload_time": "2022-01-27T14:10:05",
        "upload_time_iso_8601": "2022-01-27T14:10:05.044211Z",
        "url": "https://files.pythonhosted.org/packages/4a/25/08db34ae2c44814b099d099d48a57191496bae13330f68e6306bb8316cf0/swiftemulator-0.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2dd4bbba11980b02b795e0ddbd5e2847723ffc3e773009034794bdb8d252041f",
          "md5": "fec1101354c03b5f0a086bb21c8d6a70",
          "sha256": "7d6a398d66bf175f6e9e9ef5a5ec3dc069ca27d37b7a965b43a0af843ef58f8a"
        },
        "downloads": -1,
        "filename": "swiftemulator-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fec1101354c03b5f0a086bb21c8d6a70",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 58089,
        "upload_time": "2022-01-28T14:47:36",
        "upload_time_iso_8601": "2022-01-28T14:47:36.648442Z",
        "url": "https://files.pythonhosted.org/packages/2d/d4/bbba11980b02b795e0ddbd5e2847723ffc3e773009034794bdb8d252041f/swiftemulator-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "895b948773a45f9cd4d7ac4b272c96e83f6892f51459eb6fdfe82b95dda2a3de",
          "md5": "b489bea0172bfa1ffff0dbb7c9dec8b7",
          "sha256": "cb519a64c25b3ead9d1642875c36c7f3c9c2fcdee942d2ef7f3e7f563e3808be"
        },
        "downloads": -1,
        "filename": "swiftemulator-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b489bea0172bfa1ffff0dbb7c9dec8b7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 58282,
        "upload_time": "2022-03-28T19:32:52",
        "upload_time_iso_8601": "2022-03-28T19:32:52.300066Z",
        "url": "https://files.pythonhosted.org/packages/89/5b/948773a45f9cd4d7ac4b272c96e83f6892f51459eb6fdfe82b95dda2a3de/swiftemulator-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e16541d6e27794694ddfacdb41da6967894df2411b554228a48ab88b7299f498",
          "md5": "e011e645278b2341f7a63c92d9013469",
          "sha256": "cdd6a0acb50cb24cc8e758fcbfc99e812d1c4af9090951c597731bc6485d7a9f"
        },
        "downloads": -1,
        "filename": "swiftemulator-1.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e011e645278b2341f7a63c92d9013469",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 58278,
        "upload_time": "2022-04-11T12:17:16",
        "upload_time_iso_8601": "2022-04-11T12:17:16.137588Z",
        "url": "https://files.pythonhosted.org/packages/e1/65/41d6e27794694ddfacdb41da6967894df2411b554228a48ab88b7299f498/swiftemulator-1.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e16541d6e27794694ddfacdb41da6967894df2411b554228a48ab88b7299f498",
        "md5": "e011e645278b2341f7a63c92d9013469",
        "sha256": "cdd6a0acb50cb24cc8e758fcbfc99e812d1c4af9090951c597731bc6485d7a9f"
      },
      "downloads": -1,
      "filename": "swiftemulator-1.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e011e645278b2341f7a63c92d9013469",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 58278,
      "upload_time": "2022-04-11T12:17:16",
      "upload_time_iso_8601": "2022-04-11T12:17:16.137588Z",
      "url": "https://files.pythonhosted.org/packages/e1/65/41d6e27794694ddfacdb41da6967894df2411b554228a48ab88b7299f498/swiftemulator-1.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}