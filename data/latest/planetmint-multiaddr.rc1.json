{
  "info": {
    "author": "Steven Buss",
    "author_email": "steven.buss@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "py-multiaddr\n==========================\n\n.. image:: https://img.shields.io/pypi/v/multiaddr.svg\n        :target: https://pypi.python.org/pypi/multiaddr\n\n.. image:: https://api.travis-ci.com/multiformats/py-multiaddr.svg?branch=master\n        :target: https://travis-ci.com/multiformats/py-multiaddr\n\n.. image:: https://codecov.io/github/multiformats/py-multiaddr/coverage.svg?branch=master\n        :target: https://codecov.io/github/multiformats/py-multiaddr?branch=master\n\n.. image:: https://readthedocs.org/projects/multiaddr/badge/?version=latest\n        :target: https://readthedocs.org/projects/multiaddr/?badge=latest\n        :alt: Documentation Status\n..\n\n    multiaddr_ implementation in Python\n\n.. _multiaddr: https://github.com/multiformats/multiaddr\n\n..\n\n\n.. contents:: :local:\n\nUsage\n=====\n\nSimple\n------\n\n.. code-block:: python\n\n    from multiaddr import Multiaddr\n\n    # construct from a string\n    m1 = Multiaddr(\"/ip4/127.0.0.1/udp/1234\")\n\n    # construct from bytes\n    m2 = Multiaddr(bytes_addr=m1.to_bytes())\n\n    assert str(m1) == \"/ip4/127.0.0.1/udp/1234\"\n    assert str(m1) == str(m2)\n    assert m1.to_bytes() == m2.to_bytes()\n    assert m1 == m2\n    assert m2 == m1\n    assert not (m1 != m2)\n    assert not (m2 != m1)\n\n\nProtocols\n---------\n\n.. code-block:: python\n\n    from multiaddr import Multiaddr\n\n    m1 = Multiaddr(\"/ip4/127.0.0.1/udp/1234\")\n\n    # get the multiaddr protocol description objects\n    m1.protocols()\n    # [Protocol(code=4, name='ip4', size=32), Protocol(code=17, name='udp', size=16)]\n\n\nEn/decapsulate\n--------------\n\n.. code-block:: python\n\n    from multiaddr import Multiaddr\n\n    m1 = Multiaddr(\"/ip4/127.0.0.1/udp/1234\")\n    m1.encapsulate(Multiaddr(\"/sctp/5678\"))\n    # <Multiaddr /ip4/127.0.0.1/udp/1234/sctp/5678>\n    m1.decapsulate(Multiaddr(\"/udp\"))\n    # <Multiaddr /ip4/127.0.0.1>\n\n\nTunneling\n---------\n\nMultiaddr allows expressing tunnels very nicely.\n\n\n.. code-block:: python\n\n    printer = Multiaddr(\"/ip4/192.168.0.13/tcp/80\")\n    proxy = Multiaddr(\"/ip4/10.20.30.40/tcp/443\")\n    printerOverProxy = proxy.encapsulate(printer)\n    print(printerOverProxy)\n    # /ip4/10.20.30.40/tcp/443/ip4/192.168.0.13/tcp/80\n\n    proxyAgain = printerOverProxy.decapsulate(printer)\n    print(proxyAgain)\n    # /ip4/10.20.30.40/tcp/443\n\nMaintainers\n===========\n\nOriginal author: `@sbuss`_.\n\nContribute\n==========\n\nContributions welcome. Please check out `the issues`_.\n\nCheck out our `contributing document`_ for more information on how we work, and about contributing in general.\nPlease be aware that all interactions related to multiformats are subject to the IPFS `Code of Conduct`_.\n\nLicense\n=======\n\nDual-licensed:\n\n-  `MIT`_ © 2014 Steven Buss\n-  `Apache 2`_ © 2014 Steven Buss\n\n.. _the issues: https://github.com/multiformats/py-multiaddr/issues\n.. _contributing document: https://github.com/multiformats/multiformats/blob/master/contributing.md\n.. _Code of Conduct: https://github.com/ipfs/community/blob/master/code-of-conduct.md\n.. _standard-readme: https://github.com/RichardLitt/standard-readme\n.. _MIT: LICENSE-MIT\n.. _Apache 2: LICENSE-APACHE2\n.. _`@sbuss`: https://github.com/sbuss\n\n\nHistory\n=======\n\n0.0.10 (2022-9-9)\n-----------------\n\n* forked and applied dependency cleanup to support more recent projects\n\n\n0.0.7 (2019-5-8)\n----------------\n\n* include subpackage\n* refactor util and codec\n\n0.0.5 (2019-5-7)\n----------------\n\n* unhexilified bytes\n* new exceptions\n* miscellaneous improvements [via alexander255_ `#42`_]\n\n.. _alexander255: https://github.com/alexander255\n.. _`#42`: https://github.com/multiformats/py-multiaddr/pull/42\n\n0.0.2 (2016-5-4)\n----------------\n\n* Fix a bug in decapsulate that threw an IndexError instead of a copy of the\n  Multiaddr when the original multiaddr does not contain the multiaddr to\n  decapsulate. [via fredthomsen_ `#9`_]\n* Increase test coverage [via fredthomsen_ `#9`_]\n\n.. _fredthomsen: https://github.com/fredthomsen\n.. _`#9`: https://github.com/multiformats/py-multiaddr/pull/9\n\n0.0.1 (2016-1-22)\n-----------------\n\n* First release on PyPI.\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "https://github.com/multiformats/py-multiaddr/tarball/0.0.10",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/planetmint/py-multiaddr",
    "keywords": "multiaddr",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "planetmint-multiaddr",
    "package_url": "https://pypi.org/project/planetmint-multiaddr/",
    "platform": null,
    "project_url": "https://pypi.org/project/planetmint-multiaddr/",
    "project_urls": {
      "Download": "https://github.com/multiformats/py-multiaddr/tarball/0.0.10",
      "Homepage": "https://github.com/planetmint/py-multiaddr"
    },
    "release_url": "https://pypi.org/project/planetmint-multiaddr/0.0.10/",
    "requires_dist": null,
    "requires_python": ">=3.5",
    "summary": "Python implementation of jbenet's multiaddr",
    "version": "0.0.10",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15037527,
  "releases": {
    "0.0.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd1291410826587e20375717befa917cb07c65df84b82d4ce516698f99880f79",
          "md5": "3112a1dbe49f395fc38623a81e5d4695",
          "sha256": "f6daf70931c3f73acfcb0c7c08f3e00721a8d70946d37687ba1b5e1f1f6ef129"
        },
        "downloads": -1,
        "filename": "planetmint-multiaddr-0.0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "3112a1dbe49f395fc38623a81e5d4695",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 28232,
        "upload_time": "2022-09-08T20:43:59",
        "upload_time_iso_8601": "2022-09-08T20:43:59.874644Z",
        "url": "https://files.pythonhosted.org/packages/bd/12/91410826587e20375717befa917cb07c65df84b82d4ce516698f99880f79/planetmint-multiaddr-0.0.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bd1291410826587e20375717befa917cb07c65df84b82d4ce516698f99880f79",
        "md5": "3112a1dbe49f395fc38623a81e5d4695",
        "sha256": "f6daf70931c3f73acfcb0c7c08f3e00721a8d70946d37687ba1b5e1f1f6ef129"
      },
      "downloads": -1,
      "filename": "planetmint-multiaddr-0.0.10.tar.gz",
      "has_sig": false,
      "md5_digest": "3112a1dbe49f395fc38623a81e5d4695",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 28232,
      "upload_time": "2022-09-08T20:43:59",
      "upload_time_iso_8601": "2022-09-08T20:43:59.874644Z",
      "url": "https://files.pythonhosted.org/packages/bd/12/91410826587e20375717befa917cb07c65df84b82d4ce516698f99880f79/planetmint-multiaddr-0.0.10.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}