{
  "info": {
    "author": "Whois API, Inc.",
    "author_email": "support@whoisxmlapi.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "Flask-EmailVerifier\n===================\n\nThe easiest way to verify emails in your Flask application.\n\n\nMeta\n----\n- Author: Whois API, Inc.\n- Email: support@whoisxmlapi.com\n- Site: https://emailverification.whoisxmlapi.com\n\n\nPrerequisites\n-------------\n\nTo use this library, you'll need to create a free Email Verification API\naccount: https://emailverification.whoisxmlapi.com/\n\nIf you haven't done this yet, please do so now.\n\n\nInstallation\n------------\n\nTo install ``Flask-EmailVerifier`` using `pypi <https://pypi.org/>`_, simply run:\n\n.. code-block:: console\n\n    $ pip install Flask-EmailVerifier\n\nIn the root of your project directory.\n\n\nUsage\n-----\n\nOnce you have `Flask-EmailVerifier` installed, you can use it to easily\nverify an email address.\n\nThis library gives you access to the Email Verification API that\nyou can use in your application in any number of ways.\n\nHere's a simple Flask app that makes use of the email address verification\nand returns an email address information:\n\n.. code-block:: python\n\n    from flask import Flask, make_response\n    from flask_email_verifier import EmailVerifier\n    from json import dumps, loads\n\n    app = Flask(__name__)\n    # Initialize the extension\n    verifier = EmailVerifier(app)\n\n    @app.route('/email/<email>')\n    def email(email):\n        # Retrieve an info for the given email address\n        email_address_info = verifier.verify(email)\n        if email_address_info is not None:\n            data = dumps(loads(email_address_info.json_string), indent=4)\n            resp = make_response(data, 200)\n            resp.headers['Content-Type'] = 'application/json'\n        else:\n            resp = make_response('None', 404)\n        return resp\n\nDon't forget to specify your API key:\n\n.. code-block:: bash\n\n    $ export EMAIL_VERIFIER_KEY='your-key'\n\n\nHere's the sort of data you might get back when performing a email\nverification request:\n\n.. code-block:: json\n\n    {\n        \"emailAddress\": \"test.email@gmail.com\",\n        \"formatCheck\": \"true\",\n        \"smtpCheck\": \"false\",\n        \"dnsCheck\": \"true\",\n        \"freeCheck\": \"true\",\n        \"disposableCheck\": \"false\",\n        \"catchAllCheck\": \"false\",\n        \"mxRecords\": [\n            \"alt3.gmail-smtp-in.l.google.com\",\n            \"alt1.gmail-smtp-in.l.google.com\",\n            \"alt2.gmail-smtp-in.l.google.com\",\n            \"alt4.gmail-smtp-in.l.google.com\",\n            \"gmail-smtp-in.l.google.com\"\n        ],\n        \"audit\": {\n            \"auditCreatedDate\": \"2018-11-14 13:05:09.000 UTC\",\n            \"auditUpdatedDate\": \"2018-11-14 13:05:09.000 UTC\"\n        }\n    }\n\n\nIn the event an email verification request can't finish successfully, the data\nreturned will be `None`. This library will *never* throw an exception.\nThis decision was made strategically: if you cannot verify user's email, it\ndoesn't mean that this user is bad.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/whois-api-llc/flask-email-verifier",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Flask-EmailVerifier",
    "package_url": "https://pypi.org/project/Flask-EmailVerifier/",
    "platform": "any",
    "project_url": "https://pypi.org/project/Flask-EmailVerifier/",
    "project_urls": {
      "Homepage": "https://github.com/whois-api-llc/flask-email-verifier"
    },
    "release_url": "https://pypi.org/project/Flask-EmailVerifier/0.1.0/",
    "requires_dist": [
      "Flask",
      "email-verifier"
    ],
    "requires_python": "",
    "summary": "The simplest library for email verification for Flask.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4552929,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a9e8b27295a4a7c91a29bf47d6ea710432c8cbd880441c89128eac0fa36f0006",
          "md5": "2a925f5f52d511d6e35f8069c9e709a0",
          "sha256": "5d3f684503a50a40c230d8902446e49ac603f0a60eb84e24ce7701db799cb336"
        },
        "downloads": -1,
        "filename": "Flask_EmailVerifier-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2a925f5f52d511d6e35f8069c9e709a0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 3867,
        "upload_time": "2018-12-02T18:06:36",
        "upload_time_iso_8601": "2018-12-02T18:06:36.055901Z",
        "url": "https://files.pythonhosted.org/packages/a9/e8/b27295a4a7c91a29bf47d6ea710432c8cbd880441c89128eac0fa36f0006/Flask_EmailVerifier-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "77539759fd871c9bdcd90bd0425ef5c0159ba66c382e448b69e4489bc8409098",
          "md5": "7ba13662b9461228452bc93d6295c671",
          "sha256": "73a66ff0737b8cbc70e244b4e686f4ba865586c21bcd5e0c7b0591497489b0fe"
        },
        "downloads": -1,
        "filename": "Flask-EmailVerifier-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7ba13662b9461228452bc93d6295c671",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3075,
        "upload_time": "2018-12-02T18:06:38",
        "upload_time_iso_8601": "2018-12-02T18:06:38.158665Z",
        "url": "https://files.pythonhosted.org/packages/77/53/9759fd871c9bdcd90bd0425ef5c0159ba66c382e448b69e4489bc8409098/Flask-EmailVerifier-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a9e8b27295a4a7c91a29bf47d6ea710432c8cbd880441c89128eac0fa36f0006",
        "md5": "2a925f5f52d511d6e35f8069c9e709a0",
        "sha256": "5d3f684503a50a40c230d8902446e49ac603f0a60eb84e24ce7701db799cb336"
      },
      "downloads": -1,
      "filename": "Flask_EmailVerifier-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2a925f5f52d511d6e35f8069c9e709a0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 3867,
      "upload_time": "2018-12-02T18:06:36",
      "upload_time_iso_8601": "2018-12-02T18:06:36.055901Z",
      "url": "https://files.pythonhosted.org/packages/a9/e8/b27295a4a7c91a29bf47d6ea710432c8cbd880441c89128eac0fa36f0006/Flask_EmailVerifier-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "77539759fd871c9bdcd90bd0425ef5c0159ba66c382e448b69e4489bc8409098",
        "md5": "7ba13662b9461228452bc93d6295c671",
        "sha256": "73a66ff0737b8cbc70e244b4e686f4ba865586c21bcd5e0c7b0591497489b0fe"
      },
      "downloads": -1,
      "filename": "Flask-EmailVerifier-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "7ba13662b9461228452bc93d6295c671",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3075,
      "upload_time": "2018-12-02T18:06:38",
      "upload_time_iso_8601": "2018-12-02T18:06:38.158665Z",
      "url": "https://files.pythonhosted.org/packages/77/53/9759fd871c9bdcd90bd0425ef5c0159ba66c382e448b69e4489bc8409098/Flask-EmailVerifier-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}