{
  "info": {
    "author": "An0nimia",
    "author_email": "An0nimia@protonmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# deezloader\n\nThis project has been created to download songs, albums or playlists with Spotify or Deezer link from Deezer.\n\n# Disclaimer\n\n- I am not responsible for the usage of this program by other people.\n- I do not recommend you doing this illegally or against Deezer's terms of service.\n- This project is licensed under [CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/)\n\n\n* ### PYTHON VERSION SUPPORTED ###\n\t![Python >= 3.9](https://img.shields.io/badge/python-v%3E=3.9-blue)\n\n* ### OS Supported ###\n\t![Linux Support](https://img.shields.io/badge/Linux-Support-brightgreen.svg)\n\t![macOS Support](https://img.shields.io/badge/macOS-Support-brightgreen.svg)\n\t![Windows Support](https://img.shields.io/badge/Windows-Support-brightgreen.svg)\n\n* ### Installation ###\n```bash\npip3 install deezloader\n```\n\n# SETTING\n\t[deez_login]\n\tmail = #YOUR DEEZER EMAIL\n\tpassword = #YOUR DEEZER PASSWORD\n\ttoken = #YOUR ARL TOKEN GOT FROM DEEZER\n\n### Setting disclaimer\n- Write that content inside .deez_settings.ini file for using deez-dw.py\n\n# API Avalaible\n\nFinally **deez-web.py** avalaible ;)\n```bash\ndeez-web.py\n```\n\n### API disclaimer\n- Open your browser at http://127.0.0.1:8000/docs\n\n# CLI interface\n\nFinally **deez-dw.py** avalaible ;)\n```bash\ndeez-dw.py -h\n```\n\tusage: deez-dw.py [-h] [-l LINK] [-s SONG] [-a ARTIST] [-o OUTPUT]\n\t[-q {FLAC,MP3_320,MP3_128}] [-rq] [-rd]\n\t[-g] [-z] [-sa {0,1,2}]\n\n## OPTIONS\n\t-h, --help            show this help message and exit\n\t-l LINK, --link LINK  Deezer or Spotify link for download\n\t-s SONG, --song SONG  song name\n\t-a ARTIST, --artist ARTIST\n\t\t\t\t\t\tartist song\n\t-o OUTPUT, --output OUTPUT\n\t\t\t\t\t\tOutput folder\n\t-q {FLAC,MP3_320,MP3_128}, --quality {FLAC,MP3_320,MP3_128}\n\t-rq, --recursive_quality\n\t\t\t\t\t\tIf choosen quality doesn't exist download with best possible\n\t\t\t\t\t\tquality (True or False)\n\t-rd, --recursive_download\n\t\t\t\t\t\tIf the song has already downloaded skip (True or False)\n\t-g, --not_gui         Show the little not_gui (True or False)\n\t-z, --zip             If is an album or playlist link create a zip archive (True or\n\t\t\t\t\t\tFalse)\n\t-sa {0,1,2}, --save {0,1,2}\n\n# Library\n\n### Initialize\n\n```python\nfrom deezloader import Login\n\n# if you want login with arl, IT EXPIRES\ndownloa = Login(arl = my_arl_token)\n# if you want to login through your email and password, SHOULD LAST FOREVER\ndownloa = Login(\n\temail = my_deezer_email,\n\tpassword = my_deezer_password\n)\n```\n\n### Download song\n\nDownload track by Spotify link\n\n```python\ndownloa.download_trackspo(\n\t#YOUR SPOTIFY TRACK LINK,\n\toutput_dir = #The output dir for the download,\n\tquality_download = #Choose between FLAC, MP3_320, MP3_128,\n\trecursive_quality = #True or False,\n\trecursive_download = #True or False,\n\tnot_interface = #True or False,\n\tmethod_save = #choose between 0, 1 or 2\n)\n```\n\nDownload track by Deezer link\n```python\ndownloa.download_trackdee(\n\t#YOUR DEEZER TRACK LINK,\n\toutput_dir = #The output dir for the download,\n\tquality_download = #Choose between FLAC, MP3_320, MP3_128,\n\trecursive_quality = #True or False,\n\trecursive_download = #True or False,\n\tnot_interface = #True or False,\n\tmethod_save = #choose between 0, 1 or 2\n)\n```\n\n### Download album\nDownload album by Spotify link\n```python\ndownloa.download_albumspo(\n\t#YOUR SPOTIFY ALBUM LINK,\n\toutput_dir = #The output dir for the download,\n\tquality_download = #Choose between FLAC, MP3_320, MP3_128,\n\trecursive_quality = #True or False,\n\trecursive_download = #True or False,\n\tnot_interface = #True or False,\n\tmake_zip = #True or False,\n\tmethod_save = #choose between 0, 1 or 2\n)\n```\n\nDownload album from Deezer link\n```python\ndownloa.download_albumdee(\n\t#YOUR DEEZER ALBUM LINK,\n\toutput_dir = #The output dir for the download,\n\tquality_download = #Choose between FLAC, MP3_320, MP3_128,\n\trecursive_quality = #True or False,\n\trecursive_download = #True or False,\n\tnot_interface = #True or False,\n\tmake_zip = #True or False,\n\tmethod_save = #choose between 0, 1 or 2\n)\n```\n\n### Download playlist\n\nDownload playlist by Spotify link\n```python\ndownloa.download_playlistspo(\n\t#YOUR SPOTIFY PLAYLIST LINK,\n\toutput_dir = #The output dir for the download,\n\tquality_download = #Choose between FLAC, MP3_320, MP3_128,\n\trecursive_quality = #True or False,\n\trecursive_download = #True or False,\n\tnot_interface = #True or False,\n\tmake_zip = #True or False,\n\tmethod_save = #choose between 0, 1 or 2\n)\n```\n\nDownload playlist from Deezer link\n```python\ndownloa.download_playlistdee(\n\t#YOUR DEEZER PLAYLIST LINK,\n\toutput_dir = #The output dir for the download,\n\tquality_download = #Choose between FLAC, MP3_320, MP3_128,\n\trecursive_quality = #True or False,\n\trecursive_download = #True or False,\n\tnot_interface = #True or False,\n\tmake_zip = #True or False,\n\tmethod_save = #choose between 0, 1 or 2\n```\n\n### Download name\n\nDownload by name\n```python\ndownloa.download_name(\n\tartist = #ARTIST NAME,\n\tsong = #ARTIST SONG NAME,\n\toutput_dir = #The output dir for the download,\n\tquality_download = #Choose between FLAC, MP3_320, MP3_128,\n\trecursive_quality = #True or False,\n\trecursive_download = #True or False,\n\tnot_interface = #True or False,\n\tmethod_save = #choose between 0, 1 or 2\n)\n```\n\n# DONATION\n\nIF YOU ARE POOR DON'T DONATE I AM ALSO POOR, IF YOU ARE RICH JUST PRESS [HERE](https://www.paypal.com/paypalme/an0nimia) THANKS YOU :)\n\n# HEY YOUUUU\n\nToo Lazy to finish the shitty documentation with VSCode you should be able discover the other params, methods and propieties I will try to do something more professional, MAYBE :)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/An0nimia/deezloader",
    "keywords": "",
    "license": "CC BY-NC-SA 4.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "deezfacu",
    "package_url": "https://pypi.org/project/deezfacu/",
    "platform": null,
    "project_url": "https://pypi.org/project/deezfacu/",
    "project_urls": {
      "Homepage": "https://github.com/An0nimia/deezloader"
    },
    "release_url": "https://pypi.org/project/deezfacu/2021.8.31/",
    "requires_dist": [
      "mutagen",
      "pycryptodome",
      "requests",
      "spotipy",
      "tqdm",
      "fastapi",
      "uvicorn[standard]"
    ],
    "requires_python": ">=3.9",
    "summary": "Downloads songs, albums or playlists from deezer",
    "version": "2021.8.31",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14451973,
  "releases": {
    "2021.8.31": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "449c3d64d41a5318b08f82732bed3c36142d17e79f0a1edf6270599fb00f4d26",
          "md5": "0e524cd31bd4205912ef2df44e26d5e1",
          "sha256": "e9e0ea6bec85616097664b224e121d515dfad203ea120cffe78d6b8a01cfbec6"
        },
        "downloads": -1,
        "filename": "deezfacu-2021.8.31-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0e524cd31bd4205912ef2df44e26d5e1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 40425,
        "upload_time": "2022-07-16T03:25:59",
        "upload_time_iso_8601": "2022-07-16T03:25:59.765272Z",
        "url": "https://files.pythonhosted.org/packages/44/9c/3d64d41a5318b08f82732bed3c36142d17e79f0a1edf6270599fb00f4d26/deezfacu-2021.8.31-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "449c3d64d41a5318b08f82732bed3c36142d17e79f0a1edf6270599fb00f4d26",
        "md5": "0e524cd31bd4205912ef2df44e26d5e1",
        "sha256": "e9e0ea6bec85616097664b224e121d515dfad203ea120cffe78d6b8a01cfbec6"
      },
      "downloads": -1,
      "filename": "deezfacu-2021.8.31-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0e524cd31bd4205912ef2df44e26d5e1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 40425,
      "upload_time": "2022-07-16T03:25:59",
      "upload_time_iso_8601": "2022-07-16T03:25:59.765272Z",
      "url": "https://files.pythonhosted.org/packages/44/9c/3d64d41a5318b08f82732bed3c36142d17e79f0a1edf6270599fb00f4d26/deezfacu-2021.8.31-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}