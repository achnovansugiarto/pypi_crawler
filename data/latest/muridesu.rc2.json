{
  "info": {
    "author": "thautawarm",
    "author_email": "twshere@outlook.com",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: Implementation :: CPython"
    ],
    "description": "补注: 在彻底了解mulan源码后和中科院处理结果后，我认为木兰从动机上有可能并无过错。\n他确实实现了一些东西，\"套壳\"说法不合适。\n这些东西在我们编译器相关专业的人眼中菜得一匹，唯三可赞之处，最大的不过一个lambda lifting。\n这是我主要持批评态度的原因。\n但并非所有批评都是合适，他至少比较直接地解决了一些python低端黑黑python的点。\n以非专业水准做到这点实属不易，可以作出一定的肯定。\n\n## muridesu\n\n~~听说最近有人想用Python编译器骗经费?~~\n\n\n还用的是**PLY**?! 这都0202年了我的天.\n\n您好，这儿是一位不愿透露姓名的你红姐制作的一个木兰那样的语言, 学你们木兰,\n**只有前端, 编译到Python**.\n\n居然用了我**三个小时零28分钟**！加上从QQ里爬出来开机建项目的时间.\n\n语法如下，见`excuse_me.muridesu`.\n\n```go\nfunc f(x, seq){\n    for i in seq\n    {\n        print(i + x)\n    }\n}\n\nf(1, [2, 3, 4])\n\nclass A {\n    func f(self){\n        print(\"A\")\n    }\n}\nclass S <: A {\n    func g(self){\n        print(\"S\")\n    }\n}\n\nS().g()\nS().f()\n```\n\n编译到`.pyc`:\n\n```shell script\nλ> muridesu excuse_me.muridesu excuse_me.pyc                                                                           \nλ> python excuse_me.pyc\n3\n4\n5\nS\nA\n```\n\n我们支持了什么呢?\n\n请看`muridesu.exrbnf`.\n\n语句:\n- `import`\n- `try`, `except`(这里改成了`catch`, 因为搞点新东西), `finally`.\n- `assert`\n- `global`\n- `nonlocal`\n- `break`\n- `continue`\n- `with`, `with A as B, ...`\n- `for ... in`\n- `class Name <: Base1, Base2`\n- `meta 你的Type构造器 class Name <: Base1, Base2`\n- `return`, `return expr`\n- `if`\n- 函数定义`func`(让我们学学木兰?)\n- 解构`(a, b, [c, d, (f, g, h)]) = ...`\n\n表达式:\n- lambda: `fn args... -> expr`, lambda 返回值可以是一个block`fn (x) -> { ...; return ...}`.\n- bool表达式 `and, or, not`\n- 比较: `<, >, ...`(Python所有的)\n- 二元运算(Python所有的, 懒得实现优先级了, 毕竟这只是个迫害项目)\n- 单目运算(`-`, `~`)\n- `yield`, `yield from`\n- `set`, `dict`没有字面量, 但参考julia, 引入广泛可扩展的构造方式: `set [1, 2, 3]`, `dict [1 => 2, 2 => 3]`.\n- 其他的Python字面量, 除comprehensions\n\n注: Python中的`a[b]`在muridesu中是`a.[b]`, 因为我的想法是`A[b, c, d]`表示`A_list([b, c, d])`, `A\"string\"`表示`A_str(\"string\")`.\n\n基本上接近Python的全集了.\n\n\n所有说编译到Python AST真的是很简单的，不能让他骗经费是对的。\n\nPython牛逼的编译器应该是这里这样的:\n- [FINISHED: 丰富的模式匹配, 尾递归优化, 自定义算符优先级, let绑定控制作用域](https://github.com/RemuLang/urgent-lang)\n- [FINISHED: 易用的Python字节码代码生成后端, 提供Label as Value(实现stackless coroutine), Switch(不是嵌套if-else)](https://github.com/RemuLang/sijuiacion-lang)\n- [WIP: HM类型系统扩展, Extensible Records等强力的静态语言特性](https://github.com/RemuLang/proud)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/thautawarm/muridesu",
    "keywords": "",
    "license": "mit",
    "maintainer": "",
    "maintainer_email": "",
    "name": "muridesu",
    "package_url": "https://pypi.org/project/muridesu/",
    "platform": "any",
    "project_url": "https://pypi.org/project/muridesu/",
    "project_urls": {
      "Homepage": "https://github.com/thautawarm/muridesu"
    },
    "release_url": "https://pypi.org/project/muridesu/0.0.58/",
    "requires_dist": [
      "devpackage",
      "argser",
      "rbnf-rts",
      "remu-operator"
    ],
    "requires_python": ">=3.7, <3.8",
    "summary": "",
    "version": "0.0.58",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6602058,
  "releases": {
    "0.0.57": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "08d6f69f906606f7865f6a9d20e909a3825df7470844a062bd8fb7dda64035cf",
          "md5": "4a71b78ba3b39c633035d671b6ca774a",
          "sha256": "c089b8f87a6e140c4e33a7cf6d6d674d6e4d34754978973d38a39c29b6973440"
        },
        "downloads": -1,
        "filename": "muridesu-0.0.57-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4a71b78ba3b39c633035d671b6ca774a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "==3.7",
        "size": 28550,
        "upload_time": "2020-02-10T09:47:38",
        "upload_time_iso_8601": "2020-02-10T09:47:38.158783Z",
        "url": "https://files.pythonhosted.org/packages/08/d6/f69f906606f7865f6a9d20e909a3825df7470844a062bd8fb7dda64035cf/muridesu-0.0.57-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.58": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b514c336909eba1c2b61c036bfba1e8ea249be2ecb004eff40fa021a3b8a4865",
          "md5": "35c8a679d0591ea7889b514216ecca72",
          "sha256": "63ae3c48ef78a5f644a30f41330c646fc7fce5480e8143bd0d5687abf4f47ed1"
        },
        "downloads": -1,
        "filename": "muridesu-0.0.58-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "35c8a679d0591ea7889b514216ecca72",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <3.8",
        "size": 28556,
        "upload_time": "2020-02-10T12:13:40",
        "upload_time_iso_8601": "2020-02-10T12:13:40.182523Z",
        "url": "https://files.pythonhosted.org/packages/b5/14/c336909eba1c2b61c036bfba1e8ea249be2ecb004eff40fa021a3b8a4865/muridesu-0.0.58-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b514c336909eba1c2b61c036bfba1e8ea249be2ecb004eff40fa021a3b8a4865",
        "md5": "35c8a679d0591ea7889b514216ecca72",
        "sha256": "63ae3c48ef78a5f644a30f41330c646fc7fce5480e8143bd0d5687abf4f47ed1"
      },
      "downloads": -1,
      "filename": "muridesu-0.0.58-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "35c8a679d0591ea7889b514216ecca72",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7, <3.8",
      "size": 28556,
      "upload_time": "2020-02-10T12:13:40",
      "upload_time_iso_8601": "2020-02-10T12:13:40.182523Z",
      "url": "https://files.pythonhosted.org/packages/b5/14/c336909eba1c2b61c036bfba1e8ea249be2ecb004eff40fa021a3b8a4865/muridesu-0.0.58-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}