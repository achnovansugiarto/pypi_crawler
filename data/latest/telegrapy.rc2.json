{
  "info": {
    "author": "sudogene",
    "author_email": "andywubby@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# Telegrapy\n\nTelegrapy is a package for easy building of bots using the [Telegram Bot API](https://core.telegram.org/bots). \n\n---\n\n### How to start\n1. Install package using pip\n```\n$ pip3 install telegrapy\n```\nALTERNATIVE: Clone the repo\n```\n$ cd PATH_OF_YOUR_CHOICE\n$ git clone https://github.com/sudogene/telegrapy.git\n$ cd telegrapy\n```\n2. Test your bot's account using the following code\n```\nfrom telegrapy import Bot\n\ntoken = 'YOUR_TOKEN'\nbot = Bot(token)\n\nprint(bot.get_me())\n```\n\n3. Set bot to run in a loop and keep program alive\n```\n\nbot.run()\nprint('Running...')\n\nwhile True:\n  time.sleep(3)\n```\nWhen the bot runs, it indefinitely checks for message updates and handles them.\n\nQuick example on an echo bot can be found in [example.py](example.py).\n\n---\n\n### Telegram Objects\nTelegram Objects in telegrapy are object-oriented implementation of [JSON-objects](https://core.telegram.org/bots/api#available-types) in the Telegram API. Each object has a unique identifier (ID) and its corresponding JSON. Hence, any object can return its own JSON format by calling the `.json` attribute.\n\n#### User\nBased on Telegram [User](https://core.telegram.org/bots/api#user). These are typically senders of `Message`.\n\n#### Chat\nBased on Telegram [Chat](https://core.telegram.org/bots/api#chat). They are subclassed into `PrivateChat`, `GroupChat`, and `SupergroupChat`. As of now, there are not many differences in terms of parsing messages from these chat types. Chat IDs are required for bots to send messages to.\n\n#### Message\nBased on Telegram [Message](https://core.telegram.org/bots/api#message). The main bulk of data necessary for bot interactions. Contains information of the date time, sender, chat, command, and text.\n\n---\n\n### Creating Bot Commands\nBot commands are special text/phrases recognized by bots as commands, and trigger bots to call functions defined by the user. All messages received by the bot are parsed and handled by the `Handler` class which is attached to the Bot upon creation. You can create your handler functions using the function signature \n```\ndef function_name(msg: telegrapy.Message)\n```\nwhere all functions MUST take in the `Message` object. A code example:\n```\ndef echo(msg):\n  chat_id = msg.chat_id\n  text = msg.text\n  bot.send_message(chat_id, text)\n```\nDefined handler functions can then be added to the bot's handler:\n```\n# get the handelr\nhandler = bot.handler\n\n# add the function\nhandler.add_command('echo', echo)\n```\nAdding of commands to the handler requires two arguments; the string command and the function.\n\n---\n\n### Bot Methods\nNot to be confused with bot commands. Bot methods are GET and POST HTTP methods based on Telegram [Available Methods](https://core.telegram.org/bots/api#available-methods). As of now, the following methods have been implemented in this library:\n\nMethod | telegrapy.Bot function\n-------- | --------\n[getMe](https://core.telegram.org/bots/api#getme) | `get_me`\n[sendMessage](https://core.telegram.org/bots/api#sendmessage) | `send_message`\n[sendPhoto](https://core.telegram.org/bots/api#sendphoto) | `send_photo`\n[sendAudio](https://core.telegram.org/bots/api#sendaudio) | `send_audio`\n[sendDocument](https://core.telegram.org/bots/api#senddocument) | `send_document`\n[sendVideo](https://core.telegram.org/bots/api#sendvideo) | `send_video`\n[sendVoice](https://core.telegram.org/bots/api#sendvoice) | `send_voice`\n[sendDice](https://core.telegram.org/bots/api#senddice) | `send_dice`\n\n#### Optional Arguments for Bot Methods\nSome methods support additional arguments specific to use case. An example is `reply_to_message_id` which allows the bot's message to reply to a specific message. This requires the Message ID, which is conveniently available in the `Message` input for all handler functions.\n```\n# Direct reply to the sender's message\ndef echo(msg):\n  chat_id = msg.chat_id\n  text = msg.text\n  bot.send_message(chat_id, text, reply_to_message_id=msg.id)\n\nbot.handler.add_command('echo', echo)\n```\n\n... More to be added",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sudogene/telegrapy",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "telegrapy",
    "package_url": "https://pypi.org/project/telegrapy/",
    "platform": "",
    "project_url": "https://pypi.org/project/telegrapy/",
    "project_urls": {
      "Homepage": "https://github.com/sudogene/telegrapy"
    },
    "release_url": "https://pypi.org/project/telegrapy/0.1.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Telegram Bot API",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9782926,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "365a8629c38d5af434bd16e789184f98b2d0afd8653eaa06a6fe6ff88bd7ab93",
          "md5": "59efd0766dc12a8870a7f25db6687b64",
          "sha256": "01f224139e7eb8edac6c345f88765388e78c686cae18e5112b2511f2e3634af8"
        },
        "downloads": -1,
        "filename": "telegrapy-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "59efd0766dc12a8870a7f25db6687b64",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19300,
        "upload_time": "2021-02-18T15:28:04",
        "upload_time_iso_8601": "2021-02-18T15:28:04.348524Z",
        "url": "https://files.pythonhosted.org/packages/36/5a/8629c38d5af434bd16e789184f98b2d0afd8653eaa06a6fe6ff88bd7ab93/telegrapy-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "148697a9cadcb320ea08d4d79d1a4d0957019a4408237dfa467c1529fb4a7067",
          "md5": "66925ed561e2a5cdd6547edf8c8de03e",
          "sha256": "1a2630f1184700fe8b792cc7dec3f9ac97fdd7aa3e6965cfb893482212e1c605"
        },
        "downloads": -1,
        "filename": "telegrapy-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "66925ed561e2a5cdd6547edf8c8de03e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7969,
        "upload_time": "2021-02-18T15:28:05",
        "upload_time_iso_8601": "2021-02-18T15:28:05.654429Z",
        "url": "https://files.pythonhosted.org/packages/14/86/97a9cadcb320ea08d4d79d1a4d0957019a4408237dfa467c1529fb4a7067/telegrapy-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "720853c0e7956fceec64312e98e1e712b7143c1cd75f8d9a936afe6a8fe29596",
          "md5": "98446b7f26c3bd30e15a2b9c86b462e1",
          "sha256": "84d4922b66eb5254da9f9fd70a7d19bee6140c6fa6cf062a1990c1153cadfbef"
        },
        "downloads": -1,
        "filename": "telegrapy-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "98446b7f26c3bd30e15a2b9c86b462e1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8186,
        "upload_time": "2021-03-16T10:05:53",
        "upload_time_iso_8601": "2021-03-16T10:05:53.178544Z",
        "url": "https://files.pythonhosted.org/packages/72/08/53c0e7956fceec64312e98e1e712b7143c1cd75f8d9a936afe6a8fe29596/telegrapy-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "720853c0e7956fceec64312e98e1e712b7143c1cd75f8d9a936afe6a8fe29596",
        "md5": "98446b7f26c3bd30e15a2b9c86b462e1",
        "sha256": "84d4922b66eb5254da9f9fd70a7d19bee6140c6fa6cf062a1990c1153cadfbef"
      },
      "downloads": -1,
      "filename": "telegrapy-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "98446b7f26c3bd30e15a2b9c86b462e1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8186,
      "upload_time": "2021-03-16T10:05:53",
      "upload_time_iso_8601": "2021-03-16T10:05:53.178544Z",
      "url": "https://files.pythonhosted.org/packages/72/08/53c0e7956fceec64312e98e1e712b7143c1cd75f8d9a936afe6a8fe29596/telegrapy-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}