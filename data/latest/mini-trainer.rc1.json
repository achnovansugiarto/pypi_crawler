{
  "info": {
    "author": "Yuhua Liao",
    "author_email": "ml.liaoyuhua@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Mini Trainer for PyTorch\n\nThis is a mini Trainer for PyTorch ecosystem. Particularly suitable for research and experiments because of the following advantages:\n\n* Fully transparent and retraceable training process\n* Low code volume for easy debugging\n* Meets the main requirements for model training and evaluating\n\nMain features:\n\n* Pipeline for model training and evaluating\n* Checkpoint\n* Earlystopping\n* Logging based on json file\n\n## Installation\n```bash\npip install mini-trainer\n```\n\n## Quick Start\nBelow is two examples for starting using mini-trainer. First is classic image classification task and another is house price regression. Both of them are complete deep learning project, and you can learn how the basic usage and main APIs of this project.\n\n[MINST Classification](https://github.com/liaoyuhua/mini-trainer/tree/master/examples/image_classsification)\n\n[House Sale Price Prediction](https://github.com/liaoyuhua/mini-trainer/tree/master/examples/pirce_regression)\n\n## Main Functions and APIs\n\nInitialization: Trainer()\n\n|      API       |         Type          |                             Desc                             |\n| :------------: | :-------------------: | :----------------------------------------------------------: |\n|     model      |       nn.Module       |                   A model object to train.                   |\n|   save_path    |          str          |       Path to save checkpoints/loss plot/log file/etc.       |\n|   optimizer    | torch.optim.optimizer |                Optimizer class, default Adam                 |\n|       lr       |         float         |               Learning rate, default **1e-3**                |\n|      loss      |       callable        |              Loss function, default **L1 loss**              |\n|     device     |          str          |   Device type, default **\"auto\"**. [\"auto\", \"cpu\", \"cuda\"]   |\n| early_stopping |         bool          |             Whether early stopping, default True             |\n| stop_patience  |          int          |                 Stop patience, default **7**                 |\n|   stop_mode    |          str          | Stop mode. For example, if you use MSE to test you model,  this argument should be \"min\" while this should be \"max\" for Accuracy. default **\"min\"** |\n\nModel Training: fit()\n\n|       API        |            Type             |                             Desc                             |\n| :--------------: | :-------------------------: | :----------------------------------------------------------: |\n| train_dataloader | torch.utils.data.DataLoader |                     Training dataloader.                     |\n|  val_dataloader  | torch.utils.data.DataLoader |                    Validation dataloader.                    |\n|      epochs      |             int             |               Number of epochs, default **50**               |\n|     prog_bar     |            bool             | Whether display progress bar to monitor training process, default  **True** |\n\nPredicting: predict()\n\n|       API       |            Type             |    Desc     |\n| :-------------: | :-------------------------: | :---------: |\n| test_dataloader | torch.utils.data.DataLoader | Dataloader. |\n\nResult saving: log()\n\n| API  | Type |                             Desc                             |\n| :--: | :--: | :----------------------------------------------------------: |\n| log  | dict | Anything you want to record to log file, saved as a dictionary. It is very useful for research experiments in which you can record experiment start time, version, key hyperparameters, etc. |\n\nPlot loss curve: plot_loss()\n\n| API  | Type |            Desc            |\n| :--: | :--: | :------------------------: |\n| save | bool | Whether to save loss plot. |\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/liaoyuhua/mini-trainer",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mini-trainer",
    "package_url": "https://pypi.org/project/mini-trainer/",
    "platform": null,
    "project_url": "https://pypi.org/project/mini-trainer/",
    "project_urls": {
      "Homepage": "https://github.com/liaoyuhua/mini-trainer"
    },
    "release_url": "https://pypi.org/project/mini-trainer/0.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A mini Trainer for PyTorch ecosystem.",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16008809,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5730a18ee3171496f6dab91b932212cde42ad6d58b6a5dc1e1e7cf60b2d857fb",
          "md5": "a326c854eebea527df6dcaab41adf54c",
          "sha256": "0cc091b52c5a7dc461ab8598b1af3061adeb13c4d869f6b698da343937ed0c9c"
        },
        "downloads": -1,
        "filename": "mini_trainer-0.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a326c854eebea527df6dcaab41adf54c",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 6040,
        "upload_time": "2022-12-06T14:19:24",
        "upload_time_iso_8601": "2022-12-06T14:19:24.705093Z",
        "url": "https://files.pythonhosted.org/packages/57/30/a18ee3171496f6dab91b932212cde42ad6d58b6a5dc1e1e7cf60b2d857fb/mini_trainer-0.1.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5730a18ee3171496f6dab91b932212cde42ad6d58b6a5dc1e1e7cf60b2d857fb",
        "md5": "a326c854eebea527df6dcaab41adf54c",
        "sha256": "0cc091b52c5a7dc461ab8598b1af3061adeb13c4d869f6b698da343937ed0c9c"
      },
      "downloads": -1,
      "filename": "mini_trainer-0.1.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a326c854eebea527df6dcaab41adf54c",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.6",
      "size": 6040,
      "upload_time": "2022-12-06T14:19:24",
      "upload_time_iso_8601": "2022-12-06T14:19:24.705093Z",
      "url": "https://files.pythonhosted.org/packages/57/30/a18ee3171496f6dab91b932212cde42ad6d58b6a5dc1e1e7cf60b2d857fb/mini_trainer-0.1.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}