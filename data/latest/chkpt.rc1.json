{
  "info": {
    "author": "Matthew Suozzo",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# chkpt\nA <sub>tiny</sub> pipeline builder\n\n## What\n\n`chkpt` is a zero-dependency, 100-line library that makes it easy to define and execute checkpointed pipelines.\n\nIt features...\n\n* Fluent pipeline construction\n* Transparent caching of expensive operations\n* JSON serialization\n\n## How\n\n### Defining a `Stage`\n\n`Stage`s are the atomic units of work in `chkpt` and correspond to single Python functions. Existing functions need only use a decorator `@chkpt.Stage.wrap()` to be used as a `Stage`:\n\n```python\n@chkpt.Stage.wrap()\ndef stage1():\n  return \"123\"\n\n# stage1 is now a Stage instance\nassert isinstance(stage1, chkpt.Stage)\n\n# but the original function is still accessible\nassert stage1.func() == \"123\"\n```\n\n`Stage`s can also accept parameters to be provided by other `Stage`s in the final `Pipeline`:\n\n```python\n@chkpt.Stage.wrap()\ndef stage2(stage1_input):\n  return [stage1_input, \"456\"]\n```\n\n### Defining a `Pipeline`\n\n`Pipeline`s define the excution graph of `Stage`s to be run. `Stage`s are combined with shift operators (`<<` and `>>`) to direct the dataflow:\n\n```python\n# Each defines a pipeline calculating `stage1` and passing its output to `stage2`.\npipeline = stage1 >> stage2\npipeline = stage2 << stage1\npipeline = stage2 << (stage1,)\npipeline = (stage1,) >> stage2\npipeline = () >> stage1 >> stage2 \n```\n\nMore complex pipelines should be defined from the leaves down:\n\n```python\nresult1 = (stage1, stage2) >> stage3\nresult2 = (result1, stage1) >> stage4\npipeline = result2 >> stage5\n```\n\n### Executing a `Pipeline`\n\n`Pipeline`s can be directly executed which will use the default config settings:\n\n```python\nresult = pipeline()\n```\n\nThe defaults can be configured by passing a `Config` instance:\n\n```python\n# Will store all stage results and attempt to load already-stored results, if present.\nresult = pipeline(chkpt.Config(store=True, load=True, dir='/tmp'))\n```\n\n### Examples\n\nFor detailed usage, see the [examples/]() directory.\n\nThe following is a brief example pipeline:\n\n```python\nimport chkpt\n\n\n@chkpt.Stage.wrap()\ndef make_dataset1():\n  ...\n\n@chkpt.Stage.wrap()\ndef big_download2():\n  ...\n\n@chkpt.Stage.wrap()\ndef work_in_progress_analysis(dataset1, dataset2):\n  ...\n\npipeline = (make_dataset1, big_download2) >> work_in_progress_analysis\n# Work-intensive inputs only run once, caching on reruns.\nresult = pipeline(chkpt.Config(load=[make_dataset1, big_download2]))\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/msuozzo/chkpt",
    "keywords": "pipeline,data,prototyping",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "chkpt",
    "package_url": "https://pypi.org/project/chkpt/",
    "platform": "",
    "project_url": "https://pypi.org/project/chkpt/",
    "project_urls": {
      "Bug Reports": "https://github.com/msuozzo/chkpt/issues",
      "Homepage": "https://github.com/msuozzo/chkpt",
      "Source": "https://github.com/msuozzo/chkpt/"
    },
    "release_url": "https://pypi.org/project/chkpt/0.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.6, <4",
    "summary": "A tiny pipeline builder",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12385179,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d18d53f4d17aef83020862e9030d175ffc28ef04426fa82d0b3bd283f8ee978b",
          "md5": "9246fc6bbd00d9522228ff5aea6acd16",
          "sha256": "9116898e3d219d6a8064d438e979ed5d919fcce51c6b0e9cc72f85ed7fd3cbb5"
        },
        "downloads": -1,
        "filename": "chkpt-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9246fc6bbd00d9522228ff5aea6acd16",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6, <4",
        "size": 4316,
        "upload_time": "2021-12-22T22:41:40",
        "upload_time_iso_8601": "2021-12-22T22:41:40.006432Z",
        "url": "https://files.pythonhosted.org/packages/d1/8d/53f4d17aef83020862e9030d175ffc28ef04426fa82d0b3bd283f8ee978b/chkpt-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f506ef44e733536d8fe17c12b5b044a208a3886444c3accf87df4fd2e63a3ba",
          "md5": "fbcfc2bb41114f18bb1f43add1dafb9b",
          "sha256": "4b8553e61698b8452b19e8b2efbb01923fce59c444bf1b9c813d14091d999b8c"
        },
        "downloads": -1,
        "filename": "chkpt-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fbcfc2bb41114f18bb1f43add1dafb9b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 4250,
        "upload_time": "2021-12-22T22:41:41",
        "upload_time_iso_8601": "2021-12-22T22:41:41.945247Z",
        "url": "https://files.pythonhosted.org/packages/9f/50/6ef44e733536d8fe17c12b5b044a208a3886444c3accf87df4fd2e63a3ba/chkpt-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d18d53f4d17aef83020862e9030d175ffc28ef04426fa82d0b3bd283f8ee978b",
        "md5": "9246fc6bbd00d9522228ff5aea6acd16",
        "sha256": "9116898e3d219d6a8064d438e979ed5d919fcce51c6b0e9cc72f85ed7fd3cbb5"
      },
      "downloads": -1,
      "filename": "chkpt-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9246fc6bbd00d9522228ff5aea6acd16",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6, <4",
      "size": 4316,
      "upload_time": "2021-12-22T22:41:40",
      "upload_time_iso_8601": "2021-12-22T22:41:40.006432Z",
      "url": "https://files.pythonhosted.org/packages/d1/8d/53f4d17aef83020862e9030d175ffc28ef04426fa82d0b3bd283f8ee978b/chkpt-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9f506ef44e733536d8fe17c12b5b044a208a3886444c3accf87df4fd2e63a3ba",
        "md5": "fbcfc2bb41114f18bb1f43add1dafb9b",
        "sha256": "4b8553e61698b8452b19e8b2efbb01923fce59c444bf1b9c813d14091d999b8c"
      },
      "downloads": -1,
      "filename": "chkpt-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "fbcfc2bb41114f18bb1f43add1dafb9b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6, <4",
      "size": 4250,
      "upload_time": "2021-12-22T22:41:41",
      "upload_time_iso_8601": "2021-12-22T22:41:41.945247Z",
      "url": "https://files.pythonhosted.org/packages/9f/50/6ef44e733536d8fe17c12b5b044a208a3886444c3accf87df4fd2e63a3ba/chkpt-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}