{
  "info": {
    "author": "",
    "author_email": "Beza Amsalu <beza.amsalu@columbia.edu>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "# Spotify to Apple Music Converter\n\nThis web app allows you to easily perform cross-platform playlist migration from spotify to apple-music and vice-versa.\n\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n\n![GitHub issues](https://img.shields.io/github/issues-raw/Beza4598/spotify_apple_converter)\n\n![Codecov](https://img.shields.io/codecov/c/github/Beza4598/spotify_apple_converter)\n\n[![Build Status](https://github.com/Beza4598/spotify_apple_converter/workflows/Build%20Status/badge.svg?branch=main)](https://github.com/Beza4598/spotify_apple_converter/actions?query=workflow%3A%22Build+Status%22)\n\n\n## Overview\n\nThis program provides a convenient way to transfer all of your playlists from Spotify to Apple Music. The initial version supports the `--all` mode to transfer all playlists at once. Before running the program, you need to configure the necessary API keys and tokens in the `config.py` file located in the `src` folder.\n\n### Apple Music API Configuration\n\nTo make requests to the Apple Music API, you need several keys, which can be obtained by enrolling in the Apple Developer Program. Once enrolled, you can access your `team_id`, `secret_key`, and `key_id` directly. However, generating a `music_user_token` requires extra steps since the Apple user authorization service is not available in Python. We recommend following the instructions in this [GitHub repository](https://github.com/KoleMyers/apple-musickit-example) to generate your `music_user_token`. Once you have all of the required information, first replace the apple_private_key.p8 file with your `private_key.p8` file that you downloaded from Apple. then create a `.env` file in the `src` folder and set these variables to their corresponding values.\n\n```\n# Apple API configuration\nAPPLE_KEY_ID=\"\"\nAPPLE_TEAM_ID=\"\"\nAPPLE_USER_TOKEN=\"\"\n```\n\n### Spotify API Configuration\n\nObtaining the Spotify API keys is more straightforward. After logging in to the Spotify Web API Dashboard with your Spotify account, you will have access to the required keys. Add them to the corresponding variables in the .env file you just created.\n\n```\n# Spotify API configuration\nCLIENT_ID=\"\"\nCLIENT_SECRET=\"\"\nCALLBACK_ADDRESS=\"\"\n\n```\n\nThe program uses the Spotipy API to retrieve your current Spotify playlists and iterates through each track to find an iTunes identifier using the track's ISRC (a unique identifier for any published soundtrack). For matched songs, the program sends HTTP POST requests to copy each playlist to Apple Music. To comply with Apple's rate limit on API requests, there is a 3-second interval between each insertion.\n\nRun tests on the program using make test.\n\n\nOnce up and running the program should update you on the progress of conversion as shown below. And pres cmd and click on the link to go to the playlist.\n\n<img width=\"1174\" alt=\"Screen Shot 2023-03-29 at 10 40 40 PM\" src=\"https://user-images.githubusercontent.com/28851549/228714366-50e001c5-987b-426f-93a5-b3e4af8e7c9a.png\">\n\n\n## Usage\n- `make`: list available commands\n- `make develop`: install and build this library and its dependencies using `pip`\n- `make build`: build the library using `setuptools`\n- `make lint`: perform static analysis of this library with `flake8` and `black`\n- `make format`: autoformat this library using `black`\n- `make test`: run automated tests with `pytest`\n- `make coverage`: run automated tests with `pytest` and collect coverage information\n- `make dist`: package library for distribution\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT License  Copyright (c) 2023 Beza Amare Amsalu  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. ",
    "maintainer": "",
    "maintainer_email": "",
    "name": "spotify-to-apple-py",
    "package_url": "https://pypi.org/project/spotify-to-apple-py/",
    "platform": null,
    "project_url": "https://pypi.org/project/spotify-to-apple-py/",
    "project_urls": {
      "repository": "https://github.com/columbiaoss/example-project-python"
    },
    "release_url": "https://pypi.org/project/spotify-to-apple-py/0.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Convert spotify playlists to apple music",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17504861,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "59063e6a6434a94be696fa1a2f65b0d6bff02041070f7aca20636f9785398dfe",
          "md5": "ae5af531003365ab1d7f166052f6a8dd",
          "sha256": "8d271dcc6d35ba7bee32bd9c7b2bc8c85ae8b80789cb966dd950d5fce5bdd3af"
        },
        "downloads": -1,
        "filename": "spotify-to-apple-py-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ae5af531003365ab1d7f166052f6a8dd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 8061,
        "upload_time": "2023-03-30T04:24:33",
        "upload_time_iso_8601": "2023-03-30T04:24:33.179040Z",
        "url": "https://files.pythonhosted.org/packages/59/06/3e6a6434a94be696fa1a2f65b0d6bff02041070f7aca20636f9785398dfe/spotify-to-apple-py-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "59063e6a6434a94be696fa1a2f65b0d6bff02041070f7aca20636f9785398dfe",
        "md5": "ae5af531003365ab1d7f166052f6a8dd",
        "sha256": "8d271dcc6d35ba7bee32bd9c7b2bc8c85ae8b80789cb966dd950d5fce5bdd3af"
      },
      "downloads": -1,
      "filename": "spotify-to-apple-py-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "ae5af531003365ab1d7f166052f6a8dd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 8061,
      "upload_time": "2023-03-30T04:24:33",
      "upload_time_iso_8601": "2023-03-30T04:24:33.179040Z",
      "url": "https://files.pythonhosted.org/packages/59/06/3e6a6434a94be696fa1a2f65b0d6bff02041070f7aca20636f9785398dfe/spotify-to-apple-py-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}