{
  "info": {
    "author": "Gamma Science",
    "author_email": "info@gammascience.co.uk",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Django :: 2.0",
      "Framework :: Django :: 2.1",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.0",
      "Framework :: Django :: 3.1",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Site Management"
    ],
    "description": "Django Consent Log\n------------------\n\n.. image:: https://github.com/rgammans/django-consent-log/workflows/Project%20tests/badge.svg\n\n\nSome django views which log actions taken on the frontend, these return an emtpy HTML page and are intended\nto be called from an ajax function on the frontend. No frontent functions are provided but there are many cookie\nand other consent banner action projects on npmjs.com which can be use the build the frontend component.\n\nThe  timestamp, user agent string, referrer are stored along with a boolean flag for consent /reject\nstatus. Additionally the request body is also stored so the frontend can send supplemental data to store.\n\nAn expiry framework is included which provides a mechanism for deletion of records older than \na certain, the rentenion period can be set in the settings.py file. The expiry framework \nalso has a mechanism to limit it runs to a maximum frequency.\n\nAnonymized IP address storage is planned but not yet implemented. \n\nThis provides the views and the management logs for\nthe purpose\n\nSetup\n-----\n\nAdd::\n\n    'consent_log'\n\n\nto ``INSTALLED_APPS`` in settings.py and also a set an integer\nvalue ``CONSENT_LOG_DAYS_EXPIRY`` to settings.py to configure\nthe length of time that consent record live for.\n\nYou must also set the boolean value ``CONSENT_LOG_AUTO_EXPIRE``, this\nsetting is treated as a booleand and if true expire_consent_log() is call\non every request to the confirm or reject views. \n\nIf you use the ``expire_consent_log()`` model function (such as via the auto\nexpire setting above), or expireconset management command you can set a\nmaximum frequency at which the the expire run will happen.  \n\n::\n\n    CONSENT_LOG_EXPIRY_MIN_PERIOD = 7 # Only run expiry once a week maxmum.\n\nyou must set ths variable if you use these entrypoints.\n\nTo Use\n------\n\nAdd something like the following to your projects urls.py..\n\n::\n\n    path(\"consent_log/\", include(\"consent_log.urls\"))\n\nThis add the modules endpoints to your defined urls, our urls are\nreversable and named ``consent-log:confirm`` and 'consent-log:reject`` within\ndjango url namespace so can be reference as those insire your django templates.\n\nYou will need to write or import your own frontend integration \nto send the actions to record to this module.\n\n\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/rgammans/django-consent-log",
    "keywords": "",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "consent-log",
    "package_url": "https://pypi.org/project/consent-log/",
    "platform": "",
    "project_url": "https://pypi.org/project/consent-log/",
    "project_urls": {
      "Homepage": "http://github.com/rgammans/django-consent-log"
    },
    "release_url": "https://pypi.org/project/consent-log/0.1/",
    "requires_dist": [
      "Django (>=2.0.0)"
    ],
    "requires_python": "",
    "summary": "Keeps a record of consents. Required by EU law",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7495884,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0a813519da907b978565a3dbf741a6a04168464528cb3cf8fa5fa0bc4db30a73",
          "md5": "b9fa4010a084196352823e1407b40495",
          "sha256": "8f782fd2cb1a5595c82bad2cef639f3afa38c9431c6eda10fc3760cb57f138ee"
        },
        "downloads": -1,
        "filename": "consent_log-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b9fa4010a084196352823e1407b40495",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11192,
        "upload_time": "2020-06-17T10:34:12",
        "upload_time_iso_8601": "2020-06-17T10:34:12.373837Z",
        "url": "https://files.pythonhosted.org/packages/0a/81/3519da907b978565a3dbf741a6a04168464528cb3cf8fa5fa0bc4db30a73/consent_log-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9ed3fdf94378920124801ff9840ca4c67cee105002614c211dd9f8b5195097b9",
          "md5": "70070f49d8398b75b6480c279ab07a31",
          "sha256": "68211f4a32467ee81fc9375b0cb074d19825632c513fbbf0bd0eea588128de38"
        },
        "downloads": -1,
        "filename": "consent_log-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "70070f49d8398b75b6480c279ab07a31",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7565,
        "upload_time": "2020-06-17T10:34:14",
        "upload_time_iso_8601": "2020-06-17T10:34:14.671832Z",
        "url": "https://files.pythonhosted.org/packages/9e/d3/fdf94378920124801ff9840ca4c67cee105002614c211dd9f8b5195097b9/consent_log-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0a813519da907b978565a3dbf741a6a04168464528cb3cf8fa5fa0bc4db30a73",
        "md5": "b9fa4010a084196352823e1407b40495",
        "sha256": "8f782fd2cb1a5595c82bad2cef639f3afa38c9431c6eda10fc3760cb57f138ee"
      },
      "downloads": -1,
      "filename": "consent_log-0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b9fa4010a084196352823e1407b40495",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 11192,
      "upload_time": "2020-06-17T10:34:12",
      "upload_time_iso_8601": "2020-06-17T10:34:12.373837Z",
      "url": "https://files.pythonhosted.org/packages/0a/81/3519da907b978565a3dbf741a6a04168464528cb3cf8fa5fa0bc4db30a73/consent_log-0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9ed3fdf94378920124801ff9840ca4c67cee105002614c211dd9f8b5195097b9",
        "md5": "70070f49d8398b75b6480c279ab07a31",
        "sha256": "68211f4a32467ee81fc9375b0cb074d19825632c513fbbf0bd0eea588128de38"
      },
      "downloads": -1,
      "filename": "consent_log-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "70070f49d8398b75b6480c279ab07a31",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7565,
      "upload_time": "2020-06-17T10:34:14",
      "upload_time_iso_8601": "2020-06-17T10:34:14.671832Z",
      "url": "https://files.pythonhosted.org/packages/9e/d3/fdf94378920124801ff9840ca4c67cee105002614c211dd9f8b5195097b9/consent_log-0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}