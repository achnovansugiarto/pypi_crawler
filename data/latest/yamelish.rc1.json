{
  "info": {
    "author": "Xavier G.",
    "author_email": "xavier.yamelish@kindwolf.org",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3 :: Only",
      "Topic :: Text Processing"
    ],
    "description": "# yamelish\n\nyamelish is a non-parsable YAML-ish output format that was designed as a convenience to diff JSON files.\n\n\"non-parsable\" means that yamelish was not designed to be parsed by computers. It might actually be parsable with some care and caveats (e.g. no way to distinguish boolean/null values from their string counterparts), but this is not the object of this project.\n\nYAML-ish means that it looks like YAML but is not YAML. Specifically, it looks like YAML, without quotes (except for empty strings), indicators like `>` or `|` and advanced features:\n```yaml\npostId: 1\nid: 1\nname: id labore ex et quam laborum\nemail: Eliseo@gardner.biz\nbody:\n  laudantium enim quasi est quidem magnam voluptate ipsam eos\n  tempora quo necessitatibus\n  dolor quam autem quasi\n  reiciendis et nam sapiente accusantium\nexamples:\n  booleans:\n    - True\n    - False\n  null_value: None\n  integer: 4\n  float: 4.4\n  empty_string: \"\"\n  empty_array: []\n  empty_object: {}\n```\n\nyamelish's main limitation is that it offers no way to distinguish non-string values from their textual representation: the \"True\" string and the true boolean values will both end up as `True`. Consequently, yamelish remains relevant to spot changing values and structures but not changing types.\n\n## Command-line usage\n\n```console\n$ yamelish file1.json file2.json\n```\n\n## Git usage\n\nGit configuration (typically `~/.config/git/config`):\n```ini\n[diff \"json_diff\"]\n    textconv = /path/to/yamelish\n; Optional:\n[alias]\n    showobject = show --ext-diff\n```\n\nRepository's `.gitattributes` file:\n```gitattributes\n*.json diff=json_diff\n```\n\n## Python usage\n\n```python\nfrom yamelish.handlers import handle\nyamelish = handle(your_data)[0]\nprint(yamelish)\n```\n\n## Why not ... ?\n\n### Why not JSON?\n\nJSON diff is hard to read because of:\n\n- escaped strings:\n  - `\"this\\nis\\na\\nmultiline\\nstring\\nand\\nthis\\nis\\npainful\"`\n  - `\"\\\"wait, what?\\\"\"`\n- extra commas when appending to an array:\n\n```diff\n {\n    \"array\": [\n        \"a\",\n-       \"b\"\n+       \"b\",\n+       \"c\"\n    ]\n }\n```\n\n### Why not gron?\n\nBecause the gron format reflects array indices, inserting an element into an array makes diff way longer than expected:\n\n```diff\n json = {};\n json.array = [];\n-json.array[0] = \"a\";\n-json.array[1] = \"b\";\n+json.array[0] = \"z\";\n+json.array[1] = \"a\";\n+json.array[2] = \"b\";\n```\n\n### Why not YAML?\n\nYAML is better but it still clutters the output with quotes, escaped values and/or little things like `|-`; this is because YAML is a format that is meant to be parsed, so it has to keep this kind of things.\n\n\n```diff\n array:\n - \"# this string is double-quoted because otherwise it would be a YAML comment\"\n-- \"# this string is double-quoted because otherwise it would be a YAML comment\"\n+- this string is no longer double-quoted\n - \"# this string is double-quoted because otherwise it would be a YAML comment\"\n```\n\n## License\n\nyamelish is licensed under WTFPL.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/xavierog/yamelish",
    "keywords": "cli,json,yaml,diff",
    "license": "WTFPL",
    "maintainer": "",
    "maintainer_email": "",
    "name": "yamelish",
    "package_url": "https://pypi.org/project/yamelish/",
    "platform": "",
    "project_url": "https://pypi.org/project/yamelish/",
    "project_urls": {
      "Homepage": "https://github.com/xavierog/yamelish"
    },
    "release_url": "https://pypi.org/project/yamelish/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "YAML-ish, non parsable format, suitable to diff JSON data",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12872349,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b2d5d0084e33bea025dc3e872d980f8ac86606fb57f72ab60ba3b9c94a715b61",
          "md5": "43960cc91f3d42ffc280b4c597fefe7b",
          "sha256": "6b7cb0a42e7067132e3bcb43e51b385fde925fda2ecedc71f43591589491ebc7"
        },
        "downloads": -1,
        "filename": "yamelish-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "43960cc91f3d42ffc280b4c597fefe7b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5197,
        "upload_time": "2022-02-12T20:02:39",
        "upload_time_iso_8601": "2022-02-12T20:02:39.957049Z",
        "url": "https://files.pythonhosted.org/packages/b2/d5/d0084e33bea025dc3e872d980f8ac86606fb57f72ab60ba3b9c94a715b61/yamelish-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8674cd28f1c9c69df5b696238c373de0ae4d2055e0b67ba3059c75aaf424ca8f",
          "md5": "e69dac61a412d01ecd0d5ff99370bc19",
          "sha256": "71dcf55941d7f92e9c41ecf0a0dc309be6482ffa550366432752c8023e079680"
        },
        "downloads": -1,
        "filename": "yamelish-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e69dac61a412d01ecd0d5ff99370bc19",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4364,
        "upload_time": "2022-02-12T20:02:41",
        "upload_time_iso_8601": "2022-02-12T20:02:41.669746Z",
        "url": "https://files.pythonhosted.org/packages/86/74/cd28f1c9c69df5b696238c373de0ae4d2055e0b67ba3059c75aaf424ca8f/yamelish-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b2d5d0084e33bea025dc3e872d980f8ac86606fb57f72ab60ba3b9c94a715b61",
        "md5": "43960cc91f3d42ffc280b4c597fefe7b",
        "sha256": "6b7cb0a42e7067132e3bcb43e51b385fde925fda2ecedc71f43591589491ebc7"
      },
      "downloads": -1,
      "filename": "yamelish-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "43960cc91f3d42ffc280b4c597fefe7b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 5197,
      "upload_time": "2022-02-12T20:02:39",
      "upload_time_iso_8601": "2022-02-12T20:02:39.957049Z",
      "url": "https://files.pythonhosted.org/packages/b2/d5/d0084e33bea025dc3e872d980f8ac86606fb57f72ab60ba3b9c94a715b61/yamelish-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8674cd28f1c9c69df5b696238c373de0ae4d2055e0b67ba3059c75aaf424ca8f",
        "md5": "e69dac61a412d01ecd0d5ff99370bc19",
        "sha256": "71dcf55941d7f92e9c41ecf0a0dc309be6482ffa550366432752c8023e079680"
      },
      "downloads": -1,
      "filename": "yamelish-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e69dac61a412d01ecd0d5ff99370bc19",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4364,
      "upload_time": "2022-02-12T20:02:41",
      "upload_time_iso_8601": "2022-02-12T20:02:41.669746Z",
      "url": "https://files.pythonhosted.org/packages/86/74/cd28f1c9c69df5b696238c373de0ae4d2055e0b67ba3059c75aaf424ca8f/yamelish-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}