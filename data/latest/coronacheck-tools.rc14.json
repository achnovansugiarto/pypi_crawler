{
  "info": {
    "author": "Thomas Phil",
    "author_email": "thomas@tphil.nl",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "![badge](https://github.com/Sikerdebaard/coronacheck-tools/workflows/Python%20package/badge.svg)\n\n# coronacheck-tools\n\n**This is an unofficial tool that is in no way affiliated with CoronaCheck.nl or the Ministry of VWS. You have been warned!**\n\ncoronacheck-tools is a python package and cli tool that allows you to validate, convert and dump the contents of the domestic coronacheck qr code generated at https://coronacheck.nl either through the app or the website. This tool is useful to get some insight into the data stored in these QR Codes, to fuzz the fields or to create your own QR validator.\n\n# Installation\n\n\n## Python\n\n```bash\n# Install the package through pip\n# This package requires python 3.6 or higher\n# Depending on your Operating System you might need to install some extra dependencies.\n# E.g. ubuntu linux: apt install ffmpeg libsm6 libxext6 zbar-tools\n#      OSX: brew install zbar\n#      Windows: choco install zbar\n> pip install coronacheck-tools\n\n# Example: dumping QR code data to JSON\n> coronacheck-tools dump json /path/to/qrcode.jpg /path/to/output/directory\n\n# Example: validate QR Code\n> coronacheck-tools verify qr /path/to/qrcode.jpg\n\n# Example: convert QR to ASN1 DER\n> coronacheck-tools convert qr /path/to/qrcode.jpg asn1 /path/to/output/directory\n\n# Example: convert ASN1 DER to QR\n> coronacheck-tools convert asn1 /path/to/asn1.der qr /path/to/output/directory\n```\n\n## Docker\n```bash\n# Running the tool through docker is quite easy.\n# Just docker run sikerdebaard/coronacheck-tools:latest\n# Optional: add --user `id -u` to change the uid/group of output files to the current user\n\n# Example: dumping QR code data to JSON\n> docker run --rm -v /path/to/your/data:/data sikerdebaard/coronacheck-tools:latest dump json /data/qrcode.jpg /data\n\n# Example: validate QR Code\n> docker run --rm -v /path/to/your/data:/data sikerdebaard/coronacheck-tools:latest verify qr /data/qrcode.jpg\n\n# Example: convert QR to ASN1 DER\n> docker run --rm -v /path/to/your/data:/data sikerdebaard/coronacheck-tools:latest convert qr /data/qrcode.jpg asn1 /data\n\n# Example: convert ASN1 DER to QR\n> docker run --rm -v /path/to/your/data:/data sikerdebaard/coronacheck-tools:latest convert asn1 /data/asn1.der qr /data\n```\n\n# Usage\n\nThe tools main commands are as follows: verify, dump, convert, denylist and asn1spec.\n\n## verify\nThis command is used for verifying a QR code. It supports a QR image,\nRAW, ASN1 DER and JSON as input for verification. This tool uses a thin\nwrapper around the official mobilecore verifier as used by the\nCoronaCheck.nl app.\n\n```bash\n> coronacheck-tools verify --help\n\nThis is an unofficial tool that is in no way affiliated with CoronaCheck.nl or the Ministry of VWS\nUSAGE\n  coronacheck-tools verify <input-format> <input>\n\nARGUMENTS\n  <input-format>         Input format. QR, RAW, ASN1, JSON.\n  <input>                Input file.\n\nGLOBAL OPTIONS\n  -h (--help)            Display this help message\n  -q (--quiet)           Do not output any message\n  -v (--verbose)         Increase the verbosity of messages: \"-v\" for normal output, \"-vv\" for more verbose output and \"-vvv\" for debug\n  -V (--version)         Display this application version\n  --ansi                 Force ANSI output\n  --no-ansi              Disable ANSI output\n  -n (--no-interaction)  Do not ask any interactive question\n\n```\n\n\n## dump\nDump is for converting and image with a QR code to RAW, ASN1 DER or JSON.\n\n```bash\n> coronacheck-tools dump --help\n\nThis is an unofficial tool that is in no way affiliated with CoronaCheck.nl or the Ministry of VWS\nUSAGE\n  coronacheck-tools dump <format> <image> <output>\n\nARGUMENTS\n  <format>               Output format. RAW, ASN1, JSON.\n  <image>                Path to an image file with one or more QR codes.\n  <output>               Output directory. Will overwrite existing files.\n\nGLOBAL OPTIONS\n  -h (--help)            Display this help message\n  -q (--quiet)           Do not output any message\n  -v (--verbose)         Increase the verbosity of messages: \"-v\" for normal\n                         output, \"-vv\" for more verbose output and \"-vvv\" for\n                         debug\n  -V (--version)         Display this application version\n  --ansi                 Force ANSI output\n  --no-ansi              Disable ANSI output\n  -n (--no-interaction)  Do not ask any interactive question\n```\n\n## convert\nThe convert command helps in converting one format into another.\nSupported formats are QR image, RAW, ASN1 DER and JSON. The tools\ncan upconvert or downconvert. E.g. QR -> JSON or JSON -> QR, but it can\nalso be used for cloning QR -> QR. This is usefull for convert a QR in\na fuzzy image to a crisp clean QR.\n\n```bash\n> coronacheck-tools convert --help\n\nThis is an unofficial tool that is in no way affiliated with CoronaCheck.nl or the Ministry of VWS\nUSAGE\n  coronacheck-tools convert <input-format> <input> <output-format> <output>\n\nARGUMENTS\n  <input-format>         Input format. QR, RAW, ASN1, JSON.\n  <input>                Input file.\n  <output-format>        Output format. QR, RAW, ASN1, JSON.\n  <output>               Output directory. Existing files will be overwritten without warning.\n\nGLOBAL OPTIONS\n  -h (--help)            Display this help message\n  -q (--quiet)           Do not output any message\n  -v (--verbose)         Increase the verbosity of messages: \"-v\" for normal output, \"-vv\" for more verbose output and \"-vvv\" for debug\n  -V (--version)         Display this application version\n  --ansi                 Force ANSI output\n  --no-ansi              Disable ANSI output\n  -n (--no-interaction)  Do not ask any interactive question\n\n```\n\n## denylist\nThis tool lists all entries on the deny list and optionally checks if a given QR code is on the denylist if such a parameter is given.\n\n```bash\n> coronacheck-tools denylist --help\nThis is an unofficial tool that is in no way affiliated with CoronaCheck.nl or the Ministry of VWS\nUSAGE\n  coronacheck-tools denylist [<input-format>] [<input>]\n\nARGUMENTS\n  <input-format>         Optional input format (must be combined with <input>)\n  <input>                Optional input QR code data (must be combined with <input-format>)\n\nGLOBAL OPTIONS\n  -h (--help)            Display this help message\n  -q (--quiet)           Do not output any message\n  -v (--verbose)         Increase the verbosity of messages: \"-v\" for normal output, \"-vv\" for more verbose output and \"-vvv\" for debug\n  -V (--version)         Display this application version\n  --ansi                 Force ANSI output\n  --no-ansi              Disable ANSI output\n  -n (--no-interaction)  Do not ask any interactive question\n```\n\n## asn1spec\nThis tool shows the ASN1 specification as used for\ndeserializing the QR code data.\n\n```bash\n> coronacheck-tools asn1spec --help\n\nThis is an unofficial tool that is in no way affiliated with CoronaCheck.nl or the Ministry of VWS\nUSAGE\n  coronacheck-tools asn1spec [<version>]\n\nARGUMENTS\n  <version>              Currently supported versions: 2 \"2\"\n\nGLOBAL OPTIONS\n  -h (--help)            Display this help message\n  -q (--quiet)           Do not output any message\n  -v (--verbose)         Increase the verbosity of messages: \"-v\" for normal output, \"-vv\" for more verbose output and \"-vvv\" for debug\n  -V (--version)         Display this application version\n  --ansi                 Force ANSI output\n  --no-ansi              Disable ANSI output\n  -n (--no-interaction)  Do not ask any interactive question\n```\n\n# Python API\nThis package requires python 3.6 or higher\n\nThe python library allows for a little bit more control over how the qr-code is decoded. Here's an example script on how to dump a qr-code to ASN.1 and then read the ASN.1 and convert it to a dict. Finally the script wil re-encode the whole thing back to a QR code.\n\n```python3\nfrom coronacheck_tools import decode_qr, decode_raw, decode_asn1_der, decode_to_dict, encode_dict, raw_to_qr, validate_raw\n\n# An image can contain multiple QR codes. As such, this function always returns an array with decoded data.\n# Format can be the following:\n#  RAW = Just grab the raw data from the QR code(s) in the image\n#  ASN1_DER = Decoded QR Code data. The raw data is confiks and then base45 decoded. This results in a ASN.1 DER blob.\n#  ASN1 = Uses the ASN.1 specification to decode the ASN.1 DER data. This is then represented as a dict. Some of the fields in this data\n#         are still encoded. Mainly the aDisclosed records still need some decoding. The data is almost usable at this point.\n#  DICT = Decode everything, even the records within aDisclosed, and output a dict.\n\n\n# Let's first convert the qr-code to an ASN1 DER.\nasn1s = decode_qr('test/testdata/qrtest.png', format='asn1_der')\n\n# Store the first QR code's ASN.1 DER to disk\nwith open('/tmp/asn1der.asn', 'wb') as fh:\n    fh.write(asn1s[0])\n\n\n# This ASN1 blob can be read by tools like openssl\n# E.g.: openssl asn1parse -in /tmp/test/asn1blob.asn -inform DER\n\n\n# Let's read the ASN.1 DER data from disk\nwith open('/tmp/asn1der.asn', 'rb') as fh:\n    asn1_der = fh.read()\n\n# Since it's an ASN.1 DER we have to use decode_asn1_der to deserialize it.\n# Like all of these functions it allows for a desired format parameter.\n# Data can always be converted to the next step in the pipeline but\n# never backwards. It always happens in this order:\n# RAW -> ASN1_DER -> ASN1 -> DICT\n#\n# Lets convert the blob to a DICT\n\ndata = decode_asn1_der(asn1_der, format='dict')\n\n\n# Now lets re-encode the dict back to RAW and dump it as a QR code\n# As it's a dict, we have to use encode_dict\nrawdata = encode_dict(data, 'RAW')\n\n\n# Now convert RAW to a QR code image\nraw_to_qr('/tmp/qrcode.png', rawdata)\n\n\n# Finally let's validate the QR Code!\nvalidity = validate_raw(rawdata)\n```\n\n# Example scripts\nYou can find some [example python scripts here](https://github.com/Sikerdebaard/coronacheck-tools/tree/main/examples). E.g. how to fuzz some of the QR code fields or how to read (and validate) the QR from a webcam.\n\n# License\n\nThe program is licensed under the [MIT License](https://github.com/Sikerdebaard/coronacheck-tools/blob/main/LICENSE).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Sikerdebaard/coronacheck-tools",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "coronacheck-tools",
    "package_url": "https://pypi.org/project/coronacheck-tools/",
    "platform": "",
    "project_url": "https://pypi.org/project/coronacheck-tools/",
    "project_urls": {
      "Homepage": "https://github.com/Sikerdebaard/coronacheck-tools"
    },
    "release_url": "https://pypi.org/project/coronacheck-tools/5/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Unofficial tool to encode, decode and verify the domestic QR code from CoronaCheck.nl. Not affiliated with CoronaCheck.nl or Ministry of VWS.",
    "version": "5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11969082,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0aa0f631b2f21730ca65adf7476af05a9dc371aee73cf28aba3e8dce9e2f19b0",
          "md5": "39829fb85bc21eca21420b5a80b14e8e",
          "sha256": "64603699f45e1344975f7cd08fd9ac456e4bacc43896506c034e8235dd12d6b0"
        },
        "downloads": -1,
        "filename": "coronacheck-tools-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "39829fb85bc21eca21420b5a80b14e8e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5833,
        "upload_time": "2021-06-25T18:16:46",
        "upload_time_iso_8601": "2021-06-25T18:16:46.986787Z",
        "url": "https://files.pythonhosted.org/packages/0a/a0/f631b2f21730ca65adf7476af05a9dc371aee73cf28aba3e8dce9e2f19b0/coronacheck-tools-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f23bced4fd01e242ad0087f2eb80f5d413e4e4570ac1deadd97012d1c04054b",
          "md5": "c6a8062544a9e55113168469b0f3f35f",
          "sha256": "b769b069ea25cf10f37f43172b8716354abf49ac5086f7badf93cb56a1474df1"
        },
        "downloads": -1,
        "filename": "coronacheck-tools-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c6a8062544a9e55113168469b0f3f35f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6699,
        "upload_time": "2021-06-25T19:51:28",
        "upload_time_iso_8601": "2021-06-25T19:51:28.578783Z",
        "url": "https://files.pythonhosted.org/packages/1f/23/bced4fd01e242ad0087f2eb80f5d413e4e4570ac1deadd97012d1c04054b/coronacheck-tools-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0360e1d5ae48a5b4a837099b531dd74b79309cb98f9ecabcc36128f55908b2d2",
          "md5": "0ce95a15d60deeeb64a5c63574cea52a",
          "sha256": "f99a417dfb7c515f5dd56c0b8933f38b16ef3d098028dbd3f95724a4b2e62d10"
        },
        "downloads": -1,
        "filename": "coronacheck-tools-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0ce95a15d60deeeb64a5c63574cea52a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8898,
        "upload_time": "2021-06-27T16:11:05",
        "upload_time_iso_8601": "2021-06-27T16:11:05.098765Z",
        "url": "https://files.pythonhosted.org/packages/03/60/e1d5ae48a5b4a837099b531dd74b79309cb98f9ecabcc36128f55908b2d2/coronacheck-tools-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ab4599b0b15c3a1ae2a54510cf9e2dbc55c8ef6edee9228981c1e8c890a3954c",
          "md5": "9e7363efe4e82b8e08b8d8b8fb76ecb6",
          "sha256": "99be26c787bd2c39648d42dd23169bdeefa0590ace5808eeb18781a04418141d"
        },
        "downloads": -1,
        "filename": "coronacheck-tools-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9e7363efe4e82b8e08b8d8b8fb76ecb6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 25320146,
        "upload_time": "2021-07-02T05:33:50",
        "upload_time_iso_8601": "2021-07-02T05:33:50.169709Z",
        "url": "https://files.pythonhosted.org/packages/ab/45/99b0b15c3a1ae2a54510cf9e2dbc55c8ef6edee9228981c1e8c890a3954c/coronacheck-tools-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cf17aa1c4587a2d811635ce6df198780c9ec3017b3d6c33bf374090d8ea321e7",
          "md5": "a94d9d91d70158c6baea9c2390270aa7",
          "sha256": "5fac0ada408dbaaaf9310e8e14389f8ded3bdc8d290ab243cb84b9ccbe458c45"
        },
        "downloads": -1,
        "filename": "coronacheck-tools-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a94d9d91d70158c6baea9c2390270aa7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 25322333,
        "upload_time": "2021-07-04T11:32:11",
        "upload_time_iso_8601": "2021-07-04T11:32:11.839756Z",
        "url": "https://files.pythonhosted.org/packages/cf/17/aa1c4587a2d811635ce6df198780c9ec3017b3d6c33bf374090d8ea321e7/coronacheck-tools-1.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "95a0c46a751ba23d1102671ee7e484d6dbc85d928e5b3fd9a72951d4bd68082b",
          "md5": "cac4964145998580de304838ca42ca16",
          "sha256": "bb3f373d129fbee346a3dee5043d227981b0eed498bba2188ff4a5eea07fd2f3"
        },
        "downloads": -1,
        "filename": "coronacheck-tools-1.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "cac4964145998580de304838ca42ca16",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 25322207,
        "upload_time": "2021-07-06T15:12:20",
        "upload_time_iso_8601": "2021-07-06T15:12:20.280532Z",
        "url": "https://files.pythonhosted.org/packages/95/a0/c46a751ba23d1102671ee7e484d6dbc85d928e5b3fd9a72951d4bd68082b/coronacheck-tools-1.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7cce19666ab5025abf91e9086fca3d43ff1d765b1afa93ee255fb64e2fce2d37",
          "md5": "f89e6bdd7fe46a43e2460161d757a400",
          "sha256": "acda6492166a6e9e36a29fb1d8b56a78232f11c57d5066ed01cef0814796ca5d"
        },
        "downloads": -1,
        "filename": "coronacheck-tools-1.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "f89e6bdd7fe46a43e2460161d757a400",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 27734579,
        "upload_time": "2021-07-18T09:49:53",
        "upload_time_iso_8601": "2021-07-18T09:49:53.632897Z",
        "url": "https://files.pythonhosted.org/packages/7c/ce/19666ab5025abf91e9086fca3d43ff1d765b1afa93ee255fb64e2fce2d37/coronacheck-tools-1.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2661804ed2a0de9d7dec4cc7166d86a0bb5f2ac7014d1b17f56f030897764169",
          "md5": "65d78c6bb46eac5fc420224b45377ca2",
          "sha256": "512aa1989ba91952e981cf0353c659dc74944b8c3259ea71a55df8d8a5b34b07"
        },
        "downloads": -1,
        "filename": "coronacheck-tools-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "65d78c6bb46eac5fc420224b45377ca2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 27741431,
        "upload_time": "2021-09-26T10:48:51",
        "upload_time_iso_8601": "2021-09-26T10:48:51.991177Z",
        "url": "https://files.pythonhosted.org/packages/26/61/804ed2a0de9d7dec4cc7166d86a0bb5f2ac7014d1b17f56f030897764169/coronacheck-tools-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0deb20b5a013b67a6c06c6f069f457ad517e1a0bfba178e1443835177ba4632b",
          "md5": "2713b8506ffeaca5cba0b513af5c2252",
          "sha256": "a302de167f1542075fde865710fdc649d35b824d934a1b3acc5bca43ddb656d6"
        },
        "downloads": -1,
        "filename": "coronacheck-tools-1.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2713b8506ffeaca5cba0b513af5c2252",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 27758881,
        "upload_time": "2021-10-13T16:15:12",
        "upload_time_iso_8601": "2021-10-13T16:15:12.827826Z",
        "url": "https://files.pythonhosted.org/packages/0d/eb/20b5a013b67a6c06c6f069f457ad517e1a0bfba178e1443835177ba4632b/coronacheck-tools-1.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c872a2c24d2020dea2cfb86f3dd7be437380fa278ce9ba901355659a8cee33d",
          "md5": "8495f5b21d56bfe83dffd09e20fca0d2",
          "sha256": "33dbd356362e21af52fed06798d0c39912458d30396625acecec913cc3d8947d"
        },
        "downloads": -1,
        "filename": "coronacheck-tools-1.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8495f5b21d56bfe83dffd09e20fca0d2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 27758891,
        "upload_time": "2021-10-13T16:21:23",
        "upload_time_iso_8601": "2021-10-13T16:21:23.492893Z",
        "url": "https://files.pythonhosted.org/packages/8c/87/2a2c24d2020dea2cfb86f3dd7be437380fa278ce9ba901355659a8cee33d/coronacheck-tools-1.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "19bdcb85e755d5b99cfd5837dcd712751325ed0fa2505e9b2d827685d6bce44f",
          "md5": "d38eb54d16811e82ee9848f44e41e746",
          "sha256": "d6deb2f7b61921b7dc24ffb1568fa1b298eb264fff5b7fdaea542f17c6f7fa4f"
        },
        "downloads": -1,
        "filename": "coronacheck-tools-2.tar.gz",
        "has_sig": false,
        "md5_digest": "d38eb54d16811e82ee9848f44e41e746",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 27759858,
        "upload_time": "2021-10-14T09:02:13",
        "upload_time_iso_8601": "2021-10-14T09:02:13.584885Z",
        "url": "https://files.pythonhosted.org/packages/19/bd/cb85e755d5b99cfd5837dcd712751325ed0fa2505e9b2d827685d6bce44f/coronacheck-tools-2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1bebb2b5fe67ca11f6d08acf413263afe6df0ce4bfeed72945abe26e2610be8a",
          "md5": "66f82d39f1484a176372fa4d61d2c42c",
          "sha256": "6191524288c99017eafcd289055fc1fc256f37ef6f92e5e096e84e5fef0ae900"
        },
        "downloads": -1,
        "filename": "coronacheck-tools-3.tar.gz",
        "has_sig": false,
        "md5_digest": "66f82d39f1484a176372fa4d61d2c42c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 27760571,
        "upload_time": "2021-10-14T12:36:27",
        "upload_time_iso_8601": "2021-10-14T12:36:27.941544Z",
        "url": "https://files.pythonhosted.org/packages/1b/eb/b2b5fe67ca11f6d08acf413263afe6df0ce4bfeed72945abe26e2610be8a/coronacheck-tools-3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3b694a3c5f4183091694d96c6c29789e89c299d33e8237a111b50df41da9d3d7",
          "md5": "d4e4a29ab405a026e2b601f5fda8428e",
          "sha256": "7b274e716d149476805c14d8294d1dad5fb6adb3ebf3f7f96d9cc9fb706a6dd7"
        },
        "downloads": -1,
        "filename": "coronacheck-tools-4.tar.gz",
        "has_sig": false,
        "md5_digest": "d4e4a29ab405a026e2b601f5fda8428e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 27772072,
        "upload_time": "2021-11-06T16:25:03",
        "upload_time_iso_8601": "2021-11-06T16:25:03.476262Z",
        "url": "https://files.pythonhosted.org/packages/3b/69/4a3c5f4183091694d96c6c29789e89c299d33e8237a111b50df41da9d3d7/coronacheck-tools-4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0dec430e579c0fb33a7d20db85eb841d356a079fc17b44ca963dbedb0097fc6d",
          "md5": "b1599ab8f3618fd86e07ad0250d0edab",
          "sha256": "9cb38ebac45b0ea25e53f23bf723e35896ea056b82aaf811667e786019b75836"
        },
        "downloads": -1,
        "filename": "coronacheck-tools-5.tar.gz",
        "has_sig": false,
        "md5_digest": "b1599ab8f3618fd86e07ad0250d0edab",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 27772406,
        "upload_time": "2021-11-09T07:42:20",
        "upload_time_iso_8601": "2021-11-09T07:42:20.336948Z",
        "url": "https://files.pythonhosted.org/packages/0d/ec/430e579c0fb33a7d20db85eb841d356a079fc17b44ca963dbedb0097fc6d/coronacheck-tools-5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0dec430e579c0fb33a7d20db85eb841d356a079fc17b44ca963dbedb0097fc6d",
        "md5": "b1599ab8f3618fd86e07ad0250d0edab",
        "sha256": "9cb38ebac45b0ea25e53f23bf723e35896ea056b82aaf811667e786019b75836"
      },
      "downloads": -1,
      "filename": "coronacheck-tools-5.tar.gz",
      "has_sig": false,
      "md5_digest": "b1599ab8f3618fd86e07ad0250d0edab",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 27772406,
      "upload_time": "2021-11-09T07:42:20",
      "upload_time_iso_8601": "2021-11-09T07:42:20.336948Z",
      "url": "https://files.pythonhosted.org/packages/0d/ec/430e579c0fb33a7d20db85eb841d356a079fc17b44ca963dbedb0097fc6d/coronacheck-tools-5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}