{
  "info": {
    "author": "Jaxon",
    "author_email": "jinlong.wang@protonmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3"
    ],
    "description": "# py-i18n-countries\ni18n for ISO 3166-1 country codes. We support Alpha-2, Alpha-3 and Numeric codes from: [Wiki](https://en.wikipedia.org/wiki/ISO_3166-1#Officially_assigned_code_elements)\n\n## Install\n```\npip install i18n-iso-countries\n```\n\n## Code to Country\n###  Get the name of a country by its ISO 3166-1 Alpha-2, Alpha-3 or Numeric code\n```python\nfrom i18n_iso_countries import get_country_name\n\nget_country_name(code=\"US\", language='en') # United States of America\nget_country_name(code=\"US\", language='de') # Vereinigte Staaten von Amerika\nget_country_name(code=\"USA\", language='en') # United States of America\nget_country_name(code=\"840\", language='en') # United States of America\n```\n#### Get aliases/short name using select\n```python\nfrom i18n_iso_countries import get_country_name\n\n# Some countries have alias/short names defined. `select` is used to control which\n# name will be returned.\nget_country_name(code=\"GB\", language='en', select=\"official\") # United Kingdom\nget_country_name(code=\"GB\", language='en', select=\"alias\") # UK\nget_country_name(code=\"GB\", language='en', select=\"all\") # [\"United Kingdom\", \"UK\", \"Great Britain\"]\n\n# Countries without an alias will always return the offical name\nget_country_name(code=\"LT\", language='en', select=\"official\") # Lithuania\nget_country_name(code=\"LT\", language='de', select=\"alias\") # Lithuania\nget_country_name(code=\"LT\", language='en', select=\"all\") # [\"Lithuania\"]\n\n```\n\n###  Get all names by their ISO 3166-1 Alpha-2 code\n```python\nfrom i18n_iso_countries import get_country_name\n\nget_country_name(language='en', select=\"official\") # { 'AF': 'Afghanistan', 'AL': 'Albania', [...], 'ZM': 'Zambia', 'ZW': 'Zimbabwe' }\n\n```\n\n### Get all supported languages (ISO 639-1)\n\n```python\nfrom i18n_iso_countries import get_supported_languages\nget_supported_languages() # [\"cy\", \"dv\", \"sw\", \"eu\", \"af\", \"am\", ...]\n```\n\n### Supported languages (ISO 639-1)\n\n> In case you want to add new language, please refer [ISO 639-1 table][iso:639-1].\n\n- `af`: Afrikaans\n- `am`: Amharic\n- `ar`: Arabic\n- `az`: Azerbaijani\n- `be`: Belorussian\n- `bg`: Bulgarian\n- `bn`: Bengali\n- `bs`: Bosnian\n- `ca`: Catalan\n- `cs`: Czech\n- `cy`: Cymraeg\n- `da`: Danish\n- `de`: German\n- `dv`: Dhivehi\n- `en`: English\n- `es`: Spanish\n- `et`: Estonian\n- `eu`: Basque\n- `fa`: Persian\n- `fi`: Finnish\n- `fr`: French\n- `gl`: Galician\n- `el`: Greek\n- `ha`: Hausa\n- `he`: Hebrew\n- `hi`: Hindi\n- `hr`: Croatian\n- `hu`: Hungarian\n- `hy`: Armenian\n- `is`: Icelandic\n- `it`: Italian\n- `id`: Indonesian\n- `ja`: Japanese\n- `ka`: Georgian\n- `kk`: Kazakh\n- `km`: Khmer\n- `ko`: Korean\n- `ku`: Kurdish\n- `ky`: Kyrgyz\n- `lt`: Lithuanian\n- `lv`: Latvian\n- `mk`: Macedonian\n- `ml`: Malayalam\n- `mn`: Mongolian\n- `ms`: Malay\n- `nb`: Norwegian BokmÃ¥l\n- `nl`: Dutch\n- `nn`: Norwegian Nynorsk\n- `no`: Norwegian\n- `pl`: Polish\n- `ps`: Pashto\n- `pt`: Portuguese\n- `ro`: Romanian\n- `ru`: Russian\n- `sd`: Sindhi\n- `sk`: Slovak\n- `sl`: Slovene\n- `so`: Somali\n- `sq`: Albanian\n- `sr`: Serbian\n- `sv`: Swedish\n- `sw`: Swahili\n- `ta`: Tamil\n- `tg`: Tajik\n- `th`: Thai\n- `tr`: Turkish\n- `tt`: Tatar\n- `ug`: Uyghur\n- `uk`: Ukrainian\n- `ur`: Urdu\n- `uz`: Uzbek\n- `zh`: Chinese\n- `vi`: Vietnamese\n\n[List of ISO 639-1 codes](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes)\n\n## Codes\n\n### Convert Alpha-3 to Alpha-2 code\n\n```python\nfrom i18n_iso_countries import alpha3_to_alpha2\n\nalpha3_to_alpha2('USA') #US\n```\n\n### Convert Numeric to Alpha-2 code\n\n```python\nfrom i18n_iso_countries import numeric_to_alpha2\n\nnumeric_to_alpha2('840') # US\n```\n\n### Convert Alpha-2 to Alpha-3 code\n\n```python\nfrom i18n_iso_countries import alpha2_to_alpha3\n\nalpha2_to_alpha3('DE') # DEU\n```\n\n### Convert Numeric to Alpha-3 code\n\n```python\nfrom i18n_iso_countries import numeric_to_alpha3\n\nnumeric_to_alpha3('840') # USA\n```\n\n### Convert Alpha-3 to Numeric code\n\n```python\nfrom i18n_iso_countries import alpha3_to_numeric\n\nalpha3_to_numeric('SWE') #752\n```\n\n### Convert Alpha-2 to Numeric code\n\n```python\nfrom i18n_iso_countries import alpha2_to_numeric\n\nalpha2_to_numeric(\"SE\") # 752\n```\n\n### Get all Alpha-2 codes\n\n```python\nfrom i18n_iso_countries import get_alpha2_codes\n\nget_alpha2_codes() # { 'AF': 'AFG', 'AX': 'ALA', [...], 'ZM': 'ZMB', 'ZW': 'ZWE' }\n```\n\n### Get all Alpha-3 codes\n\n```python\nfrom i18n_iso_countries import get_alpha3_codes\n\nget_alpha3_codes() # { 'AFG': 'AF', 'ALA': 'AX', [...], 'ZMB': 'ZM', 'ZWE': 'ZW' }\n```\n\n### Get all Numeric codes\n\n```python\nfrom i18n_iso_countries import get_numeric_codes\n\nget_numeric_codes() # { '004': 'AF', '008': 'AL', [...], '887': 'YE', '894': 'ZM' }\n```\n\n### Validate country code\n\n```python\nfrom i18n_iso_countries import is_valid_country_code\n\nis_valid_country_code(\"US\") # True\nis_valid_country_code(\"USA\") # True\nis_valid_country_code(\"XX\") # False\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pleasurelong/i18n-iso-countries",
    "keywords": "countries iso 3166-1",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "i18n-iso-countries",
    "package_url": "https://pypi.org/project/i18n-iso-countries/",
    "platform": null,
    "project_url": "https://pypi.org/project/i18n-iso-countries/",
    "project_urls": {
      "Homepage": "https://github.com/pleasurelong/i18n-iso-countries"
    },
    "release_url": "https://pypi.org/project/i18n-iso-countries/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.5, <4",
    "summary": "i18n for ISO 3166-1 country codes. We support Alpha-2, Alpha-3 and Numeric codes",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13605196,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef926e58bb1b3161e315663890a2adfb89aca7885755a1f4b8ef26b6a66eec3d",
          "md5": "cece35275a7502599753d3499fc6cfe1",
          "sha256": "2f06364c00ee299e0589097649ef97ae9bf05a583daa961efe727466f321f2d4"
        },
        "downloads": -1,
        "filename": "i18n-iso-countries-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "cece35275a7502599753d3499fc6cfe1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5, <4",
        "size": 150766,
        "upload_time": "2022-04-24T10:30:01",
        "upload_time_iso_8601": "2022-04-24T10:30:01.147771Z",
        "url": "https://files.pythonhosted.org/packages/ef/92/6e58bb1b3161e315663890a2adfb89aca7885755a1f4b8ef26b6a66eec3d/i18n-iso-countries-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ef926e58bb1b3161e315663890a2adfb89aca7885755a1f4b8ef26b6a66eec3d",
        "md5": "cece35275a7502599753d3499fc6cfe1",
        "sha256": "2f06364c00ee299e0589097649ef97ae9bf05a583daa961efe727466f321f2d4"
      },
      "downloads": -1,
      "filename": "i18n-iso-countries-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "cece35275a7502599753d3499fc6cfe1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5, <4",
      "size": 150766,
      "upload_time": "2022-04-24T10:30:01",
      "upload_time_iso_8601": "2022-04-24T10:30:01.147771Z",
      "url": "https://files.pythonhosted.org/packages/ef/92/6e58bb1b3161e315663890a2adfb89aca7885755a1f4b8ef26b6a66eec3d/i18n-iso-countries-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}