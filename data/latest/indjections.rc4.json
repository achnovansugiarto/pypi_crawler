{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# Indjections\nThis project enables one-line installation of Django packages by\ninjecting code in the _right_ places.\n\n## Installation\nInstall using `pip`:\n\n    pip install indjections\n\nor, if using [pipenv](https://pipenv.pypa.io/en/latest/):\n\n    pipenv install indjections --dev\n\nAdd `'indjections'` to your `INSTALLED_APPS` setting.\n```python\nINSTALLED_APPS = [\n    ...\n    'indjections',\n]\n```\n\n## Example\nBy default, `indjections` assumes your [TOML](https://github.com/toml-lang/toml) file is a [Pipfile](https://github.com/pypa/pipfile) in the\nproject root.  For example, say your [Pipfile](https://github.com/pypa/pipfile) has the following packages:\n```toml\n[dev-packages]\ndjango-debug-toolbar = \"*\"\n\n[packages]\ndjangorestframework = \"*\"\ndjango-hijack = \"*\"\n```\n\nTo install these packages, you just have to run a Django management command:\n```\npython manage.py indject\n```\n\nThis will auto-insert code into `settings.py`, `urls.py`, and `base.html`\nas described by the package's documentation.  For example, for `django-hijack`, the following\nsnippet is added to `settings.py` (as described in the [documentation](https://django-hijack.readthedocs.io/en/stable/#installation)):\n```python\n### block: django-hijack ####\nINSTALLED_APPS += ['hijack', 'compat']\n### endblock: django-hijack ####\n```\n\nMoreover, if you remove this package from your project's [Pipfile](https://github.com/pypa/pipfile) and rerun `python manage.py indject`,\nthen `indjections` will search for `### block: django-hijack ####`/`### endblock: django-hijack ####` and delete this text.\n\nNote that `indjections` assumes that `base.html` is\nthe Django admin `base.html` and is located at your project root's `templates/admin/base.html`.\nIf you want to use another `base.html`, you can add a setting to your project's `settings.py`:\n```python\nINDJECTIONS_SETTINGS = {\n    'BASE_HTML': os.path.join(BASE_DIR, 'templates', 'custom_base.html')\n}\n```\n\nIn some cases, a package installer might insert code at the app and model level (see the\ndiscussion below for more detail).  By default, all apps and models in the project are included.\n(Obviously, this won't impact third party packages in any way.)  To include/exclude a subset,\nyou can add a setting to your project's `settings.py`:\n```python\nINDJECTIONS_SETTINGS = {\n    'INCLUDE_APPS': {\n        'main': ['djangorestframework']  # any list of installation files\n    },\n}\n```\n\nor\n```python\nINDJECTIONS_SETTINGS = {\n    'EXCLUDE_APPS': {\n        'main': ['djangorestframework']  # any list of installation files\n    },\n}\n```\n\nIf both `INCLUDE_APPS` and `EXCLUDE_APPS` are specified, an exception will be raised.\n\n## Q&A\n### What if I want to modify the inserted code?\nYou have two options:\n1. If you change `### block: django-hijack ####` to `### block: django-hijack/lock ####`,\nthen `injections` will not reinsert code if `python manage.py indject` is run again.\nHowever, if the package is removed from the [TOML](https://github.com/toml-lang/toml) file, then `indjections`\nwill delete the block even if `lock` appears in the block header.\n1. `indjections` installation files are regular Python modules.  If you create a\ncustom installation file, `indjections` will look for custom installers in the\n`custom_installers` directory of your project's root directory.  For example, if\nyou want to create a custom installer for `djangorestframework`, you just add a\nfile called `{project_root_directory}/custom_installers/djangorestframework.py`.\nThen this version will be used and the default `indjections` version will be\nignored.\n\n<!---\n1. `indjections` also includes a convenience utility to monkey patch variables in \ninstallion files.  For example, say the default installer for \n`djangorestframework` has this definition:\n```python\nTYPE_OF_SERIALIZER = \"ModelSerializer\"\n```\nTo change this to `HyperlinkedModelSerializer`, you can include the following in\nyour project's `settings.py`:\n```python\nfrom indjections import get_installer\nget_installer('djangorestframework').TYPE_OF_SERIALIZER  = 'HyperlinkedModelSerializer'\n```\n-->\n\n### What if I don't use pipenv?\nThe packages can be defined with _any_ [TOML](https://github.com/toml-lang/toml) file.  For example, if you use [poetry](https://python-poetry.org/),\nthen add the following to your project's `settings.py`:\n```python\nINDJECTIONS_SETTINGS = {\n    'TOML_FILE': os.path.join(BASE_DIR, 'pyproject.toml'),\n    'TOML_KEYS': [\"tool.poetry.dependencies\", \"tool.poetry.dev-dependencies\"],\n}\n```\n\n### Does this package run anything in production?\nNo.  `indjections` is only used during development to help with Django configurations \nand project setup.\n\n### Why do I need another package?\nI got tired of installing packages by hand.  This project has a similar goal to [Cookiecutter Django](https://github.com/pydanny/cookiecutter-django).\nI didn't love the cookiecutter approach, so I wrote `indjections` as an alternative.\n[Cookiecutter Django](https://github.com/pydanny/cookiecutter-django) is a top down approach where packages are all bundled together.\nSo if you don't like something, you need to spend time removing code (or writing your own cookiecutter).\n`indjections` is a bottom up approach i.e., you can do the usual `django-admin startproject {project_name}`\nand then let `python manage.py indject` insert code in the right places.\n\n### How do I create my own installation file?\n\n`indjections` looks for a module named `indjections.packages.{package_name}`.\nThis declaratively defines 6 locations in a Django project:\n\n`settings`: The bottom of `settings.py` as defined by the `DJANGO_SETTINGS_MODULE` environment variable.\n\n`urls`: The bottom of `urls.py` as defined by `settings.ROOT_URLCONF`.\n\n`base_top`: The very top of `base.html` e.g., `{% load i18n %}`\n\n`base_head`: The bottom of the `<head>` section in `base.html` e.g., custom CSS.\n\n`base_body`: The top of the `<body>` section in `base.html`.\n\n`base_finally`: The bottom of the `<body>` section in `base.html` e.g., Javascript `<script>` tags\n\nThese 6 sections seem to cover the vast majority of Django package installation requirements.\n\nAdditionally, `indjections` provides 4 hooks:\n\n`pre_hook`: Functions run before inserting code (for each package separately)\n\n`post_hook`: Functions run after inserting code (for each package separately)\n\n`pre_hook_delete`: Functions run before deleting code (for each package separately); in other words,\nif the package is removed from the [TOML](https://github.com/toml-lang/toml) file\n\n`post_hook_delete`: Functions run after deleting code (for each package separately); in other words,\nif the package is removed from the [TOML](https://github.com/toml-lang/toml) file\n\nFor example, the installation file for `django` might include a `post_hook`\nto copy Django admin template files to the project root directory.\n\nThe 6 locations also support insertions of app and model level code.  These are \nspecified as a tuple, where the first parameter is at the project level, the second\nat the app level, and the third at the model level.  For example, say our project\nhas two apps. `app1` consists of models `Model1` and `Model2` and `app2` consists\nof models `Model3` and `Model4`.  Moreover, we have an installer called \n`_simple_print` with the following content:\n\n```python\nsettings = (\n    '\\n# project level code',\n    '\\nprint(\"{label}\")',  # \"label\" is a Django name at the app level\n    '\\nprint(\"{app_label}:{object_name}\")\\n',  # \"app_label\" and \"object_name\" are at the model level\n)\n```\n\nThis produces the following text in `settings.py`:\n```python\n### block: _simple_print ####\n# project level code\nprint(\"app1\")\nprint(\"app1:Model1\")\nprint(\"app1:Model2\")\nprint(\"app2\")\nprint(\"app2:Model3\")\nprint(\"app2:Model4\")\n### endblock: _simple_print ####\n```\n\nNote that `settings = \"print('hello')\"` is equivalent to `settings = (\"print('hello')\",)`.\n\nAdditional project files may be specified with a variable of the form `project_*`.\nFor example, the following declaration will create a new `admin.py` file in the same directory\nas `settings.ROOT_URLCONF` (i.e., a project's `urls.py` file):\n\n```python\nproject_admin = (\n    '\\n# project level code',\n    '\\nprint(\"{label}\")',  # \"label\" is a Django name at the app level\n    '\\nprint(\"{app_label}:{object_name}\")\\n',  # \"app_label\" and \"object_name\" are at the model level\n)\n\nurls = \"from .admin import *\"\n```\n\nFinally, installation files can have variables of the form `app_*`,\nwhich will insert code into app files of the form `app_*.py`.  Here, the first \nelement of the tuple variable is at the **app** level and the second element is \nat the **model** level.  For example, say the installer for `djangorestframework` \nhas the following content:\n\n```python\napp_serializers = (\"\"\"\nfrom rest_framework import serializers\n\"\"\",\"\"\"\nclass {object_name}Serializer(serializers.HyperlinkedModelSerializer):\n    class Meta:\n        model = {object_name}\n        fields = {field_names}\n\"\"\")\n```\n\nThis will produce the following in `app1/serializers.py`:\n```python\n### block: djangorestframework ####\nfrom rest_framework import serializers\n\nclass Model1Serializer(serializers.HyperlinkedModelSerializer):\n    class Meta:\n        model = Model1\n        fields = ['field1', 'field2', 'field3']\n\nclass Model2Serializer(serializers.HyperlinkedModelSerializer):\n    class Meta:\n        model = Model2\n        fields = ['field1', 'field2', 'field3']\n### endblock: djangorestframework ####\n```\n\nand the equivalent insertion in `app2/serializers.py`.\n\nFinally, to see the full list of app and model inspection variables, run \nthe following in the console:\n```python\nfrom indjections.core import get_app_and_model_data\nprint(get_app_and_model_data())\n```\n\n## Bonus Example: Configuring [React.js](https://reactjs.org/) with Django\nAfter parsing the relevant [TOML](https://github.com/toml-lang/toml) file,\n`indjections` looks for the equivalent file name in `indjections.packages.{package_name}`.  If it\nfinds the file, the installation procedure begins.\n\nBut note that the string reference found in the [TOML](https://github.com/toml-lang/toml) file \ndoes _not_ actually need to be a Python package.  Take the following example:\n```toml\n[dev-packages]\ndjango-debug-toolbar = \"*\"\n\n[packages]\ndjangorestframework = \"*\"\ndjango-hijack = \"*\"\n\n[indjections.extras]\n_create-react-app = \"*\"\n```\nThere is no Python package called `_create-react-app`.  However, `indjections` ships\nwith a `_create-react-app.py` installation file.  This will automatically execute [create-react-app](https://reactjs.org/docs/create-a-new-react-app.html#create-react-app)\nand add a reasonable set of configurations for a Django project to serve the [React.js](https://reactjs.org/) app's static files.  More specifically, the installer:\n* Runs `npx create-react-app reactapp` in the project's root directory\n* Sets `STATICFILES_DIRS` and `TEMPLATES` to plug Django into the React app\n* Sets Django's `autoreload` signal to watch for file changes in the React app; when files change,\nthe React app is rebuilt *and* the Django server restarts.\n\nOf course, this might not be the optimal setup for your needs, but a) it works out of the box and b)\n it's a good starting point for customization.\n\nBy the way, `indjections.extras` is a special name.  By default,\n`indjections` looks for `dev-packages`, `packages`, and `indjections.extras`.\n\n## Supported Packages\n\n### Currently Supported\n* [django-debug-toolbar](https://django-debug-toolbar.readthedocs.io/en/latest/installation.html)\n* [djangorestframework](https://www.django-rest-framework.org/#installation)\n* [django-hijack](https://django-hijack.readthedocs.io/en/stable/#installation)\n* [django-allauth](https://django-allauth.readthedocs.io/en/latest/installation.html)\n* [django-cors-headers](https://github.com/adamchainz/django-cors-headers)\n\n### Seeking Contributors for the Following Packages\n* django-filter\n* django-tables2\n* djangoql\n* django-material-admin\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "indjections",
    "package_url": "https://pypi.org/project/indjections/",
    "platform": "",
    "project_url": "https://pypi.org/project/indjections/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/indjections/0.0.4/",
    "requires_dist": [
      "toml",
      "colorama",
      "pytest ; extra == 'dev'",
      "ipython ; extra == 'dev'",
      "pytest-cov ; extra == 'dev'",
      "pytest-django ; extra == 'dev'",
      "django ; extra == 'dev'",
      "djangorestframework ; extra == 'dev'",
      "indjections ; extra == 'dev'",
      "pytest-pythonpath ; extra == 'dev'"
    ],
    "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*, <4",
    "summary": "Enables one-line installation of Django packages by injecting code in the right places.",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7800293,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "77d024d347e28882a88d536c03cf3cc63d5033a3c0cdecf7f7e051b2fd281e4a",
          "md5": "b9b0a0337ed76ea974cf169d789588da",
          "sha256": "e5e088b6ae78558dbfe57b6ab4562cdb8aee7faf5fd0b455b8e3f12b5e2b8670"
        },
        "downloads": -1,
        "filename": "indjections-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b9b0a0337ed76ea974cf169d789588da",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4",
        "size": 3924,
        "upload_time": "2020-07-19T23:47:46",
        "upload_time_iso_8601": "2020-07-19T23:47:46.372864Z",
        "url": "https://files.pythonhosted.org/packages/77/d0/24d347e28882a88d536c03cf3cc63d5033a3c0cdecf7f7e051b2fd281e4a/indjections-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "37ed4a1b7645689df6289f5058b9a599920ae684015220ec2f8ba094230c887e",
          "md5": "eeed76b8b7b2748bf536cb8e7687f278",
          "sha256": "d03478a51097442f1b7cca91fc48a20ed4ed58c47a4d5f464dd01e9f23357c12"
        },
        "downloads": -1,
        "filename": "indjections-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "eeed76b8b7b2748bf536cb8e7687f278",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4",
        "size": 4096,
        "upload_time": "2020-07-19T23:47:48",
        "upload_time_iso_8601": "2020-07-19T23:47:48.405054Z",
        "url": "https://files.pythonhosted.org/packages/37/ed/4a1b7645689df6289f5058b9a599920ae684015220ec2f8ba094230c887e/indjections-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "249b7d79dfc668064764acc25f1ebc42c6864178f1d11e0d5b0a09cf5c9623b2",
          "md5": "5cf1ebe3904b5e4edc4ed4a445677a54",
          "sha256": "b62f87523410f33271668fa97a02d59f6b9630689c56488423752dfdd93d0fce"
        },
        "downloads": -1,
        "filename": "indjections-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5cf1ebe3904b5e4edc4ed4a445677a54",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4",
        "size": 12328,
        "upload_time": "2020-07-20T00:08:28",
        "upload_time_iso_8601": "2020-07-20T00:08:28.188616Z",
        "url": "https://files.pythonhosted.org/packages/24/9b/7d79dfc668064764acc25f1ebc42c6864178f1d11e0d5b0a09cf5c9623b2/indjections-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "774accc4e8af184168e9167f875222299fc225222e7bce5dc9fc8d8a35b96ebb",
          "md5": "e46655616161a3914958625f79c2da8c",
          "sha256": "c11bbcca331838a50b16d79562c6efd1aaf85822e6b6a49aa0189cc7519ee58c"
        },
        "downloads": -1,
        "filename": "indjections-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e46655616161a3914958625f79c2da8c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4",
        "size": 10832,
        "upload_time": "2020-07-20T00:08:29",
        "upload_time_iso_8601": "2020-07-20T00:08:29.328567Z",
        "url": "https://files.pythonhosted.org/packages/77/4a/ccc4e8af184168e9167f875222299fc225222e7bce5dc9fc8d8a35b96ebb/indjections-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e2e09505d2e858a3d37b17e3c7469e97dee9c6c585fa819e0a3806e3643c6bb0",
          "md5": "ef7611b659db67c544cbcddbf1c3ce16",
          "sha256": "2ededff0b8b4445c6313330eebe65c297862b5bf9e6fda2bb1a8f58289264156"
        },
        "downloads": -1,
        "filename": "indjections-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ef7611b659db67c544cbcddbf1c3ce16",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*, !=3.6.*, <4",
        "size": 13223,
        "upload_time": "2020-07-20T04:06:54",
        "upload_time_iso_8601": "2020-07-20T04:06:54.048092Z",
        "url": "https://files.pythonhosted.org/packages/e2/e0/9505d2e858a3d37b17e3c7469e97dee9c6c585fa819e0a3806e3643c6bb0/indjections-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f6919468acc99e2b0354d35286b28dc0b5145e05586c598c59e35e5730df376e",
          "md5": "43af87d534785dfc868e330e95c05394",
          "sha256": "fb8af988c25c36e0b418c751605ac93266f4f3cd676ef8cbe943ae988b6de1ce"
        },
        "downloads": -1,
        "filename": "indjections-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "43af87d534785dfc868e330e95c05394",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*, !=3.6.*, <4",
        "size": 12371,
        "upload_time": "2020-07-20T04:06:55",
        "upload_time_iso_8601": "2020-07-20T04:06:55.291275Z",
        "url": "https://files.pythonhosted.org/packages/f6/91/9468acc99e2b0354d35286b28dc0b5145e05586c598c59e35e5730df376e/indjections-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4203e527048960add9894ec605806ca432092bbc8091e498d97ff56cc17601dc",
          "md5": "40de4a4105a5c810ad2c50609843a166",
          "sha256": "e99267ece59bc9093772c98b5a95a8529298fa7dd5c56b578dded59f23853d74"
        },
        "downloads": -1,
        "filename": "indjections-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "40de4a4105a5c810ad2c50609843a166",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*, <4",
        "size": 23355,
        "upload_time": "2020-07-27T17:52:39",
        "upload_time_iso_8601": "2020-07-27T17:52:39.251079Z",
        "url": "https://files.pythonhosted.org/packages/42/03/e527048960add9894ec605806ca432092bbc8091e498d97ff56cc17601dc/indjections-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ec40e94fc0c42733863877a2dbdd9d4efa2beea38360174915d509296e82d5e9",
          "md5": "d002bcc57346cc9a7a3a36fdb6d983d6",
          "sha256": "ca2f549d466aade8841dcdefeff9fcda39540ef164a75f789deb97aae54e4bcd"
        },
        "downloads": -1,
        "filename": "indjections-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "d002bcc57346cc9a7a3a36fdb6d983d6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*, <4",
        "size": 22010,
        "upload_time": "2020-07-27T17:52:40",
        "upload_time_iso_8601": "2020-07-27T17:52:40.400075Z",
        "url": "https://files.pythonhosted.org/packages/ec/40/e94fc0c42733863877a2dbdd9d4efa2beea38360174915d509296e82d5e9/indjections-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4203e527048960add9894ec605806ca432092bbc8091e498d97ff56cc17601dc",
        "md5": "40de4a4105a5c810ad2c50609843a166",
        "sha256": "e99267ece59bc9093772c98b5a95a8529298fa7dd5c56b578dded59f23853d74"
      },
      "downloads": -1,
      "filename": "indjections-0.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "40de4a4105a5c810ad2c50609843a166",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*, <4",
      "size": 23355,
      "upload_time": "2020-07-27T17:52:39",
      "upload_time_iso_8601": "2020-07-27T17:52:39.251079Z",
      "url": "https://files.pythonhosted.org/packages/42/03/e527048960add9894ec605806ca432092bbc8091e498d97ff56cc17601dc/indjections-0.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ec40e94fc0c42733863877a2dbdd9d4efa2beea38360174915d509296e82d5e9",
        "md5": "d002bcc57346cc9a7a3a36fdb6d983d6",
        "sha256": "ca2f549d466aade8841dcdefeff9fcda39540ef164a75f789deb97aae54e4bcd"
      },
      "downloads": -1,
      "filename": "indjections-0.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "d002bcc57346cc9a7a3a36fdb6d983d6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*, <4",
      "size": 22010,
      "upload_time": "2020-07-27T17:52:40",
      "upload_time_iso_8601": "2020-07-27T17:52:40.400075Z",
      "url": "https://files.pythonhosted.org/packages/ec/40/e94fc0c42733863877a2dbdd9d4efa2beea38360174915d509296e82d5e9/indjections-0.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}