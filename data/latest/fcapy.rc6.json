{
  "info": {
    "author": "Egor Dudyrev",
    "author_email": "egor.dudyrev@yandex.ru",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# FCApy\n\n[![Travis (.com)](https://img.shields.io/travis/com/EgorDudyrev/FCApy)](https://travis-ci.com/github/EgorDudyrev/FCApy)\n[![Read the Docs (version)](https://img.shields.io/readthedocs/fcapy/latest)](https://fcapy.readthedocs.io/en/latest/)\n[![Codecov](https://img.shields.io/codecov/c/github/EgorDudyrev/FCApy)](https://codecov.io/gh/EgorDudyrev/FCApy)\n[![GitHub](https://img.shields.io/github/license/EgorDudyrev/FCApy)](https://github.com/EgorDudyrev/FCApy/blob/main/LICENSE)\n\nA python package to work with Formal Concept Analysis (FCA).\n\n## Install\nFCApy can be installed from [PyPI](https://pypi.org/project/fcapy):\n\n```console\npip install fcapy[all]\n```\n\n*The appendix [all] installs additional packages like numpy and scikit-learn\n(see more in [setup.py](https://github.com/EgorDudyrev/FCApy/blob/main/setup.py)).*\n\n*This option is preferred, but not obligatory.*\n\n\n## Gentle Intro to Formal Concept Analysis  \n\n**Formal Concept Analysis (FCA)** is a mathematical framework aimed at simplifying the data analysis.\n\nTo achieve so, FCA introduces a **concept lattice**: a hierarchical representation of the dataset.\nA concept lattice can be visualized in an appealing tree-like manner,\nwhile keeping all the dependencies of the corresponding binary dataset.\n\nThe following Figure compares the tabular, Formal Context-based data representation (on the left),\nwith the hierarchical, Concept Lattice-based data representation on the right. Both representations describe the same [\"Live in water\"](https://upriss.github.io/fca/examples.html) dataset.\nBut the right subfigure also unravels the dichotomy between the ones who \"can move\" (i.e. animals) and the ones who \"needs chlorophyll\" (i.e. plants).\n\n![Live in water representation comparison](https://github.com/EgorDudyrev/FCApy/blob/main/docs/images/live_in_water_representation_comparison.png?raw=true  \"Live in water representation comparison\")\n\nThe right subfigure highlights 'the structure' of the data.\nYet, it still contains exactly the same dependencies as the tabular view on the left.\nFor example, the table says that a \"fish leech\" is something that \"needs water to live\", \"lives in water\", and \"can move\".\nThe same description can be derived from the diagram:\na \"fish leech\" \"can move\" and \"needs water to live\" as it derives from the respectively entitled nodes,\nand a \"fish leech\" \"lives in water\" since its node is coloured blue.\n\nFormal Concept Analysis concentrates on analysing binary datasets.\nHowever, there are many extensions to analyse more complex data:\ne.g. Pattern Structures, Relational Concept Analysis, Fuzzy Concept Analysis, etc.\nAlso, in general, any kind of data can be binarized to some extent.\nFor example, decision tree algorithms intrinsically binarize the data all the time.  \n\n*[Source code to generate Figure](https://github.com/EgorDudyrev/FCApy_tutorials/blob/main/Lattice%20Visualization/Visualizing_lattice.ipynb)* \n\n\n## Current state of FCApy\n\nThe library implements the main artifacts from FCA theory:\n* a formal context _(``context`` subpackage)_, and\n* a concept lattice _(``lattice`` subpackage)_.\n\nThere are also some additional subpackages:\n* ``visualizer`` to visualize the lattices,\n* ``mvcontext`` implementing pattern structures and a many valued context,\n* ``poset`` implementing partially ordered sets, and\n* ``ml`` to test FCA in supervised machine learning scenario.\n\nThe following repositories complement the package:\n* [FCApy_tutorials](https://github.com/EgorDudyrev/FCApy_tutorials)\n* [FCApy_benchmarks](https://github.com/EgorDudyrev/FCApy_benchmarks)\n\n\n### Formal context\n***NB:** The following code suits the current GitHub version of the package.\nIf it does not run well on package installed from PyPi,\nplease consider the corresponding README available on PyPi.*\n\nThe ``context`` subpackage implements a formal context from FCA theory.\n\nFormal context `K = (G, M, I)` is a triplet of set of objects `G`, set of attributes `M`, and mapping `I: G x M` between them.\nA natural way to represent a formal context is a binary table.\nThe rows of such table represent objects `G`, columns represent attributes `M` and crosses in the table are elements from the mapping `I`.\n\n`FormalContext` class provides two main functions:\n* ``extension( attributes )`` - return a maximal set of objects which share ``attributes``\n* ``intention( objects )`` - return a maximal set of attributes shared by ``objects``\n\nThese functions are also known as ''prime operations'' (denoted by `'`) or ``arrow operations''.\n\nFor example, 'animal_movement' context shows the connection between animals (objects) and actions (attributes) \n```python\nimport pandas as pd\nfrom fcapy.context import FormalContext\nurl = 'https://raw.githubusercontent.com/EgorDudyrev/FCApy/main/data/animal_movement.csv'\nK = FormalContext.from_pandas(pd.read_csv(url, index_col=0))\n\n# Print the first five objects data\nprint(K[:5])\n```\n> <pre>\n> FormalContext (5 objects, 4 attributes, 7 connections) \n>      |fly|hunt|run|swim|\n> dove |  X|    |   |    |\n> hen  |   |    |   |    |\n> duck |  X|    |   |   X|\n> goose|  X|    |   |   X|\n> owl  |  X|   X|   |    |\n> </pre>\n\n\nNow we can select all the animals who can both `fly` and `swim`: \n```python\nprint(K.extension( ['fly', 'swim'] ))\n```\n> ['duck', 'goose']\n\nand all the actions both `dove` and `goose` can perform:\n```python\nprint(K.intention( ['dove', 'goose'] ))\n```\n> ['fly']\n\nSo we state the following:\n* the animals who can both `fly` and `swim` are only `duck` and `goose`;\n* the only action both `dove` and `goose` do is `fly`.\nAt least, this is formally true in 'animal_movement' context. \n\n\nA detailed example is given in\n[this notebook](https://github.com/EgorDudyrev/FCApy_tutorials/blob/main/Formal%20Context.ipynb).\n \n\n### Concept lattice\n\nThe `lattice` subpackage implements the concept lattice from FCA theory.\nThe concept lattice `L` is a lattice of (formal) concepts.\n\nA formal concept is a pair `(A, B)` of objects `A` and attributes `B`.\nObjects `A` are all the objects sharing attributes `B`.\nAttributes `B` are all the attributes describing objects `A`.\n\nIn other words:\n* `A = extension(B)`\n* `B = intention(A)` \n\nA concept `(A1, B1)` is bigger (more general) than a concept `(A2, B2)`\nif it describes the bigger set of objects (i.e. `A2` is a subset of `A1`, or, equivalently, `B1` is a subset of `B2`).\n\nA lattice is an ordered set with the biggest and the smallest element.\nThus the concept lattice is an ordered set of (formal) concepts\nwith the biggest (most genereal) concept and the smallest (least general) concept.\n\nApplied to 'animal_movement' context we get this ConceptLattice:\n```python\n# Load the formal context\nimport pandas as pd\nfrom fcapy.context import FormalContext\nurl = 'https://raw.githubusercontent.com/EgorDudyrev/FCApy/main/data/animal_movement.csv'\nK = FormalContext.from_pandas(pd.read_csv(url, index_col=0))\n\n# Create the concept lattice\nfrom fcapy.lattice import ConceptLattice\nL = ConceptLattice.from_context(K)\n```\n\nThe lattice contains 8 concepts:\n```python\nprint(len(L))\n```\n> 8\n\nwith the most general and the most specific concepts indexes:\n\n```python\nprint(L.top, L.bottom)\n```\n> 0, 7\n\nOne can draw line diagram of the lattice by `visualizer` subpackage:\n```python\nimport matplotlib.pyplot as plt\nfrom fcapy.visualizer import LineVizNx\nfig, ax = plt.subplots(figsize=(10, 5))\nvsl = LineVizNx()\nvsl.draw_concept_lattice(L, ax=ax, flg_node_indices=True)\nax.set_title('\"Animal movement\" concept lattice', fontsize=18)\nplt.tight_layout()\nplt.show()\n```\n\n> ![Animal Movement concept lattice](https://github.com/EgorDudyrev/FCApy/blob/main/docs/images/animal_context_lattice.png?raw=true  \"Animal movement concept lattice\")\n\nHow to read the visualization:\n* the concept #3 contains all the animals (objects) who can `fly`.\n  These are `dove`, `goose` and `duck`. The latter two are taken from the more specific (smaller) concepts;\n* the concept #4 represents all the animals who can both `run` (acc. to the more general concept #2) and `hunt` (acc. to the more general concept #1);\n* etc.\n\n### The other FCA artifacts\n\nYou can find tutorials in [FCApy_tutorials](https://github.com/EgorDudyrev/FCApy_tutorials) repository.\n\nThey include some info on the use of FCA framework applied to non-binary data (MVContext),\nand supervised machine learning (DecisionLattice).\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/EgorDudyrev/FCApy",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fcapy",
    "package_url": "https://pypi.org/project/fcapy/",
    "platform": null,
    "project_url": "https://pypi.org/project/fcapy/",
    "project_urls": {
      "Homepage": "https://github.com/EgorDudyrev/FCApy"
    },
    "release_url": "https://pypi.org/project/fcapy/0.1.4.1/",
    "requires_dist": [
      "joblib ; extra == 'algorithms'",
      "scikit-learn ; extra == 'algorithms'",
      "tqdm ; extra == 'algorithms'",
      "matplotlib ; extra == 'all'",
      "ipywidgets ; extra == 'all'",
      "pandas ; extra == 'all'",
      "bitsets ; extra == 'all'",
      "tqdm ; extra == 'all'",
      "scikit-learn ; extra == 'all'",
      "bitarray ; extra == 'all'",
      "plotly ; extra == 'all'",
      "xgboost ; extra == 'all'",
      "joblib ; extra == 'all'",
      "frozendict ; extra == 'all'",
      "numpydoc ; extra == 'all'",
      "sphinx-rtd-theme ; extra == 'all'",
      "nbsphinx ; extra == 'all'",
      "numpy (>=1.20.0) ; extra == 'all'",
      "networkx (>=2.5) ; extra == 'all'",
      "sphinx ; extra == 'all'",
      "pydantic ; extra == 'all'",
      "pandas ; extra == 'context'",
      "frozendict ; extra == 'context'",
      "bitsets ; extra == 'context'",
      "bitarray ; extra == 'context'",
      "numpy (>=1.20.0) ; extra == 'context'",
      "matplotlib ; extra == 'docs'",
      "ipywidgets ; extra == 'docs'",
      "pandas ; extra == 'docs'",
      "bitsets ; extra == 'docs'",
      "tqdm ; extra == 'docs'",
      "scikit-learn ; extra == 'docs'",
      "bitarray ; extra == 'docs'",
      "plotly ; extra == 'docs'",
      "xgboost ; extra == 'docs'",
      "joblib ; extra == 'docs'",
      "frozendict ; extra == 'docs'",
      "numpydoc ; extra == 'docs'",
      "sphinx-rtd-theme ; extra == 'docs'",
      "nbsphinx ; extra == 'docs'",
      "numpy (>=1.20.0) ; extra == 'docs'",
      "networkx (>=2.5) ; extra == 'docs'",
      "sphinx ; extra == 'docs'",
      "pydantic ; extra == 'docs'",
      "ipywidgets ; extra == 'lattice'",
      "tqdm ; extra == 'lattice'",
      "pydantic ; extra == 'lattice'",
      "scikit-learn ; extra == 'ml'",
      "xgboost ; extra == 'ml'",
      "frozendict ; extra == 'mvcontext'",
      "networkx (>=2.5) ; extra == 'poset'",
      "scikit-learn ; extra == 'tests'",
      "matplotlib ; extra == 'visualizer'",
      "networkx (>=2.5) ; extra == 'visualizer'",
      "plotly ; extra == 'visualizer'",
      "pydantic ; extra == 'visualizer'"
    ],
    "requires_python": ">=3.7",
    "summary": "A library to work with formal (and pattern) contexts, concepts, lattices",
    "version": "0.1.4.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15979465,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1a2273d86d9883066d1183c34ca5c9d8de72203c21e5bde8e7b373325fe50698",
          "md5": "4ab35bd0a3318e8b623fbd610804f162",
          "sha256": "84d92fd6661a844ef38c13e094e5e67528735dfd6ff13cbf3c759170ba0b5930"
        },
        "downloads": -1,
        "filename": "fcapy-0.1.0.linux-x86_64.tar.gz",
        "has_sig": false,
        "md5_digest": "4ab35bd0a3318e8b623fbd610804f162",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19085,
        "upload_time": "2020-12-04T18:02:57",
        "upload_time_iso_8601": "2020-12-04T18:02:57.458276Z",
        "url": "https://files.pythonhosted.org/packages/1a/22/73d86d9883066d1183c34ca5c9d8de72203c21e5bde8e7b373325fe50698/fcapy-0.1.0.linux-x86_64.tar.gz",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "48f74097d203a369a454a7ded40ad453199e3134dbe8a81a28b8025d240d0723",
          "md5": "fbc0f4fafe7a550360ab31cd51c6ca09",
          "sha256": "ea34082d75b3bee8f956b2f3468312e717a6f743e82dbd6f19ae0184108a236a"
        },
        "downloads": -1,
        "filename": "fcapy-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fbc0f4fafe7a550360ab31cd51c6ca09",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 22837,
        "upload_time": "2020-12-04T18:02:55",
        "upload_time_iso_8601": "2020-12-04T18:02:55.820310Z",
        "url": "https://files.pythonhosted.org/packages/48/f7/4097d203a369a454a7ded40ad453199e3134dbe8a81a28b8025d240d0723/fcapy-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6c2a0f21ac1d898065c7f9216d35ae31c7c2c14d7c2495b47578feac277ee2a5",
          "md5": "2547bb933742620a1c59195eeca8401f",
          "sha256": "ef15d97c617911d395a3e09aa015e63f6dba8eb61efe782ccf3147e12602f5b9"
        },
        "downloads": -1,
        "filename": "fcapy-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2547bb933742620a1c59195eeca8401f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 84159,
        "upload_time": "2021-03-24T20:09:23",
        "upload_time_iso_8601": "2021-03-24T20:09:23.419764Z",
        "url": "https://files.pythonhosted.org/packages/6c/2a/0f21ac1d898065c7f9216d35ae31c7c2c14d7c2495b47578feac277ee2a5/fcapy-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "85580e1432defed0c06daacf9824a0ff56328579bbfee57046c94c5f4ca8d688",
          "md5": "79d17914b31e600bdb984ed7917d2e53",
          "sha256": "d3df8b82e9b7bfcfb44ba69665f8a15fd3758ad87d626e4f9e2a7757ffbac752"
        },
        "downloads": -1,
        "filename": "fcapy-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "79d17914b31e600bdb984ed7917d2e53",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 61585,
        "upload_time": "2021-03-24T20:09:26",
        "upload_time_iso_8601": "2021-03-24T20:09:26.604129Z",
        "url": "https://files.pythonhosted.org/packages/85/58/0e1432defed0c06daacf9824a0ff56328579bbfee57046c94c5f4ca8d688/fcapy-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "99affdabe7fb9e5e5d427bbefb0ab627361b09395403eadede07e3b6ce6fb462",
          "md5": "87f4db054145a43171f25bb685526f9c",
          "sha256": "0b03d6fc6b351fa9fc6dc86cdfe1c6cd52492cc0a8a7f42a931af6a81d5f26d4"
        },
        "downloads": -1,
        "filename": "fcapy-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "87f4db054145a43171f25bb685526f9c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 88170,
        "upload_time": "2021-03-28T21:03:13",
        "upload_time_iso_8601": "2021-03-28T21:03:13.129039Z",
        "url": "https://files.pythonhosted.org/packages/99/af/fdabe7fb9e5e5d427bbefb0ab627361b09395403eadede07e3b6ce6fb462/fcapy-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0e33ea06c4c838d77dc99e6b621131540f45aaafe7c4e243adf3f0cc4762fef6",
          "md5": "284ccc4035876644ad2a14d92ae48a7a",
          "sha256": "069f77daf756ef63cf53dd3c7763a8817b042e9eba13905f8d1cc679bc5863a8"
        },
        "downloads": -1,
        "filename": "fcapy-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "284ccc4035876644ad2a14d92ae48a7a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 64795,
        "upload_time": "2021-03-28T21:03:14",
        "upload_time_iso_8601": "2021-03-28T21:03:14.980293Z",
        "url": "https://files.pythonhosted.org/packages/0e/33/ea06c4c838d77dc99e6b621131540f45aaafe7c4e243adf3f0cc4762fef6/fcapy-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "537357d19aa26a156faf6003e2515ac43b8aa959678ada1bea8af6d6d2c7344c",
          "md5": "83fb757cbd20592f00b0ca7b2118973e",
          "sha256": "f8945324d4d68db40599f48def47a3995e13d4d825740db153cbde181784cdce"
        },
        "downloads": -1,
        "filename": "fcapy-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "83fb757cbd20592f00b0ca7b2118973e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 139636,
        "upload_time": "2021-09-09T16:08:41",
        "upload_time_iso_8601": "2021-09-09T16:08:41.700283Z",
        "url": "https://files.pythonhosted.org/packages/53/73/57d19aa26a156faf6003e2515ac43b8aa959678ada1bea8af6d6d2c7344c/fcapy-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cacd575018d5379c09fd3e283a882af8feadf0e2ff1e06aedfc48e9ea8999e3c",
          "md5": "508ff8d0707c21bc64664846264cdf48",
          "sha256": "c7ef70961fce1d7257a8d970488fd589c63769103a6c343cf580c91d2e63e82c"
        },
        "downloads": -1,
        "filename": "fcapy-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "508ff8d0707c21bc64664846264cdf48",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 131467,
        "upload_time": "2022-07-04T17:38:18",
        "upload_time_iso_8601": "2022-07-04T17:38:18.704520Z",
        "url": "https://files.pythonhosted.org/packages/ca/cd/575018d5379c09fd3e283a882af8feadf0e2ff1e06aedfc48e9ea8999e3c/fcapy-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c9159288b112b2a85427270fb23e81d8cfcb3d7612c51e058a32204f8e71369f",
          "md5": "0214503c4fb46859043112103479088a",
          "sha256": "38e122900bbef7ee97d8fcea69622ba885a813d524fdff1a0c9339752b1d02a7"
        },
        "downloads": -1,
        "filename": "fcapy-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "0214503c4fb46859043112103479088a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 713296,
        "upload_time": "2022-07-04T17:38:24",
        "upload_time_iso_8601": "2022-07-04T17:38:24.094842Z",
        "url": "https://files.pythonhosted.org/packages/c9/15/9288b112b2a85427270fb23e81d8cfcb3d7612c51e058a32204f8e71369f/fcapy-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "866e5212f4fc4790dbcf209a41d93d05369c17f2d017a00feea2d6783363db3d",
          "md5": "28d0c65733a76fce1f850ba5144b91c9",
          "sha256": "f66d5203d213572b380b8adfb17722cf97df3b43609139ddd558fc8a644b6cf4"
        },
        "downloads": -1,
        "filename": "fcapy-0.1.4.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "28d0c65733a76fce1f850ba5144b91c9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 137556,
        "upload_time": "2022-12-03T15:38:24",
        "upload_time_iso_8601": "2022-12-03T15:38:24.648226Z",
        "url": "https://files.pythonhosted.org/packages/86/6e/5212f4fc4790dbcf209a41d93d05369c17f2d017a00feea2d6783363db3d/fcapy-0.1.4.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3a38399f8efca34112d697c34b7299d1cc76f9002d1b1a18c023292f092a7903",
          "md5": "1732a2954ba16d245fb7d0e540062d06",
          "sha256": "cb7d9a7fb1ca3c9c2ff594bc9f61a4eaaf7733d1cfeb6a57315d05639fba3027"
        },
        "downloads": -1,
        "filename": "fcapy-0.1.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1732a2954ba16d245fb7d0e540062d06",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 718823,
        "upload_time": "2022-12-03T15:38:27",
        "upload_time_iso_8601": "2022-12-03T15:38:27.193646Z",
        "url": "https://files.pythonhosted.org/packages/3a/38/399f8efca34112d697c34b7299d1cc76f9002d1b1a18c023292f092a7903/fcapy-0.1.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "866e5212f4fc4790dbcf209a41d93d05369c17f2d017a00feea2d6783363db3d",
        "md5": "28d0c65733a76fce1f850ba5144b91c9",
        "sha256": "f66d5203d213572b380b8adfb17722cf97df3b43609139ddd558fc8a644b6cf4"
      },
      "downloads": -1,
      "filename": "fcapy-0.1.4.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "28d0c65733a76fce1f850ba5144b91c9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 137556,
      "upload_time": "2022-12-03T15:38:24",
      "upload_time_iso_8601": "2022-12-03T15:38:24.648226Z",
      "url": "https://files.pythonhosted.org/packages/86/6e/5212f4fc4790dbcf209a41d93d05369c17f2d017a00feea2d6783363db3d/fcapy-0.1.4.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3a38399f8efca34112d697c34b7299d1cc76f9002d1b1a18c023292f092a7903",
        "md5": "1732a2954ba16d245fb7d0e540062d06",
        "sha256": "cb7d9a7fb1ca3c9c2ff594bc9f61a4eaaf7733d1cfeb6a57315d05639fba3027"
      },
      "downloads": -1,
      "filename": "fcapy-0.1.4.1.tar.gz",
      "has_sig": false,
      "md5_digest": "1732a2954ba16d245fb7d0e540062d06",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 718823,
      "upload_time": "2022-12-03T15:38:27",
      "upload_time_iso_8601": "2022-12-03T15:38:27.193646Z",
      "url": "https://files.pythonhosted.org/packages/3a/38/399f8efca34112d697c34b7299d1cc76f9002d1b1a18c023292f092a7903/fcapy-0.1.4.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}