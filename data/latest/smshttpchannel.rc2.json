{
  "info": {
    "author": "suk",
    "author_email": "277667028@qq.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "#### **1、SmsHttpChannel介绍**\n\n​       SmsHttpChannel模块是用于异步短信接口的发送，主要依赖于Tornado框架中的AsyncHTTPClient模块。\n\n#### **2、接口所属**\n\n​\t\t主要用于**无锡线上线下通讯信息技术股份有限公司**的短信接口\n\n#### **3、短信接口协议文档**\n\n​\t\t***v3 : http://doc.wxxsxx.com/***\n\n​        ***v4: https://api-wiki.wxxsxx.com/***\n\n#### **4、代码示例**\n\n##### 4.1、单内容多号码批量发送\n\n```python\nimport logging\nfrom typing import Dict\nfrom xsxx.xsxx_channel import SmsV3HttpChannel,SmsV4HttpChannel\n\ndef submit_callback(response: Dict):\n    \"\"\"\n        定义提交短信后的回调的处理函数\n    \"\"\"\n    logging.info(response)\n\nif __name__ == '__main__':\n    logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')\n    logger = logging.getLogger(__name__)\n\n    url = 'https://ip:port'\n    userId = 'xxxx'\n    password = 'xxxxx'\n\n    # http_channel = SmsV3HttpChannel(url=url, userId=userId, password=password)  # V3协议\n    http_channel = SmsV4HttpChannel(url=url, userId=userId, password=password)  # V4协议\n\n    request_list = list()\n    request_list.append(http_channel.one_content_phones(content='【线上线下】你的验证码:8888', mobile='1314342139x'))\n    request_list.append(http_channel.one_content_phones(content='【线上线下】你的验证码:8888', mobile='1314342139x'))\n    request_list.append(http_channel.one_content_phones(content='【线上线下】你的验证码:8888', mobile='1314342139x'))\n    http_channel.send_request(http_channel, request_list, callback_func=submit_callback)\n\n    \"\"\"\n    输出的结果:\n        2020-11-26 23:26:16,812 - root - INFO - {'status': 0, 'msgid': '-4801649735315642901'}\n        2020-11-26 23:26:16,829 - root - INFO - {'status': 0, 'msgid': '-4801649735315642900'}\n        2020-11-26 23:26:16,861 - root - INFO - {'status': 0, 'msgid': '-4801649735315642899'}\n    \"\"\"\n```\n\n##### **4.2、 预付费账号余额查询**\n\n```python\nimport logging\nfrom typing import Dict\nfrom xsxx.xsxx_channel import SmsV3HttpChannel,SmsV4HttpChannel\n\ndef balance_callback(response: Dict):\n    \"\"\"\n        查询余额请求后的回调的处理函数\n    \"\"\"\n    logging.info(response)\n\nif __name__ == '__main__':\n    logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')\n    logger = logging.getLogger(__name__)\n\n    url = 'https://ip:port'\n    userId = 'xxxx'\n    password = 'xxxxx'\n\n    # http_channel = SmsV3HttpChannel(url=url, userId=userId, password=password)  # V3协议\n    http_channel = SmsV4HttpChannel(url=url, userId=userId, password=password)  # V4协议\n\n    request_list = list()\n    request_list.append(http_channel.get_user_balance())\n    http_channel.send_request(http_channel, request_list, callback_func=balance_callback)\n```\n\n##### **4.3、上行主动获取**\n\n```python\nimport logging\nfrom typing import Dict\nfrom xsxx.xsxx_channel import SmsV3HttpChannel,SmsV4HttpChannel\n\ndef mo_callback(response: Dict):\n    \"\"\"\n        查询上行请求后的回调的处理函数\n    \"\"\"\n    logging.info(response)\n\nif __name__ == '__main__':\n    logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')\n    logger = logging.getLogger(__name__)\n\n    url = 'https://ip:port'\n    userId = 'xxxx'\n    password = 'xxxxx'\n\n    # http_channel = SmsV3HttpChannel(url=url, userId=userId, password=password)  # V3协议\n    http_channel = SmsV4HttpChannel(url=url, userId=userId, password=password)  # V4协议\n\n    request_list = list()\n    request_list.append(http_channel.get_mo())\n    http_channel.send_request(http_channel, request_list, callback_func=mo_callback)\n\n    \"\"\"\n    输出的结果:\n        2020-11-26 23:55:27,590 - root - INFO - {'status': 0, 'result': []}\n    \"\"\"\n```\n\n##### **4.4、状态报告主动获取**\n\n```python\nimport logging\nfrom typing import Dict\nfrom xsxx.xsxx_channel import SmsV3HttpChannel,SmsV4HttpChannel\n\ndef report_callback(response: Dict):\n    \"\"\"\n        定义状态请求后的回调的处理函数\n    \"\"\"\n    logging.info(response)\n\nif __name__ == '__main__':\n    logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')\n    logger = logging.getLogger(__name__)\n\n    url = 'https://ip:port'\n    userId = 'xxxx'\n    password = 'xxxxx'\n\n    # http_channel = SmsV3HttpChannel(url=url, userId=userId, password=password)  # V3协议\n    http_channel = SmsV4HttpChannel(url=url, userId=userId, password=password)  # V4协议\n\n    request_list = list()\n    request_list.append(http_channel.get_report())\n    http_channel.send_request(http_channel, request_list, callback_func=report_callback)\n\n    \"\"\"\n    输出的结果:\n        2020-11-26 23:57:14,371 - root - INFO - {'status': 0, 'result': []}\n    \"\"\"\n```\n\n##### 4.5、获取发送账号日统计[V4协议支持]\n\n```python\nimport logging\nfrom typing import Dict\nfrom xsxx.xsxx_channel import SmsV4HttpChannel\n\ndef daily_stats(response: Dict):\n    \"\"\"\n        日统计报表请求后的回调的处理函数\n    \"\"\"\n    logging.info(response)\n\nif __name__ == '__main__':\n    logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')\n    logger = logging.getLogger(__name__)\n\n    url = 'https://ip:port'\n    userId = 'xxxx'\n    password = 'xxxxx'\n\n    #  获取发送账号日统计\n    http_channel = SmsV4HttpChannel(url=url, userId=userId, password=password)\n    request_list = list()\n    request_list.append(http_channel.get_daily_stats())\n    http_channel.send_request(http_channel, request_list, callback_func=daily_stats)\n```\n\n#### **5、多线程多协程提交短信的示例**\n\n```python\nimport threading\nimport logging\nfrom typing import Dict\nfrom xsxx.xsxx_channel import SmsV3HttpChannel\n\ndef submit_callback(response: Dict):\n    \"\"\"\n        提交短信的回调函数\n    \"\"\"\n    logging.info(response)\n\nif __name__ == '__main__':\n    logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')\n    logger = logging.getLogger(__name__)\n\n    url = 'https://ip:port'\n    userId = 'xxxx'\n    password = 'xxxxx'\n\n    # http_channel = SmsV3HttpChannel(url=url, userId=userId, password=password)  # V3协议\n    http_channel = SmsV4HttpChannel(url=url, userId=userId, password=password)  # V4协议\n\n    request_list = list()\n    request_list.append(http_channel.one_content_phones(content='【线上线下】你的验证码:8888', mobile='1314342139x'))\n    request_list.append(http_channel.one_content_phones(content='【线上线下】你的验证码:8888', mobile='1314342139x'))\n    request_list.append(http_channel.one_content_phones(content='【线上线下】你的验证码:8888', mobile='1314342139x'))\n\n    # 多线程多协程的运行任务\n    task_list = []\n\n    for task in range(3):\n        task_start = threading.Thread(target=http_channel.send_request,\n                                      args=(http_channel, request_list, submit_callback))\n        task_start.start()\n        task_list.append(task_start)\n\n    for task in task_list:\n        task.join()\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitee.com/pysuk/SmsHttpChannel.git",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "SmsHttpChannel",
    "package_url": "https://pypi.org/project/SmsHttpChannel/",
    "platform": "",
    "project_url": "https://pypi.org/project/SmsHttpChannel/",
    "project_urls": {
      "Homepage": "https://gitee.com/pysuk/SmsHttpChannel.git"
    },
    "release_url": "https://pypi.org/project/SmsHttpChannel/0.0.2/",
    "requires_dist": [
      "tornado (==6.1)"
    ],
    "requires_python": ">=3",
    "summary": "Python异步提交短信的模块",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8788106,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5bdbbc87c32e81dd288bb3cbf5c72e37870f172c9e60068db33ed40eb045d9a3",
          "md5": "32fd191c17dff4ff8c5cc1461fb8d57f",
          "sha256": "7d9b0f88b03818bc8b41d0c21253f83dd8c7688189232b3289f00509ae9b30e1"
        },
        "downloads": -1,
        "filename": "SmsHttpChannel-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "32fd191c17dff4ff8c5cc1461fb8d57f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 7771,
        "upload_time": "2020-12-01T07:35:12",
        "upload_time_iso_8601": "2020-12-01T07:35:12.162718Z",
        "url": "https://files.pythonhosted.org/packages/5b/db/bc87c32e81dd288bb3cbf5c72e37870f172c9e60068db33ed40eb045d9a3/SmsHttpChannel-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cda57718a506c81311a20ff0f8188284646e354b87e365bc5e2b8684eb7c3493",
          "md5": "95dd591cac98be34dd8e74bb73419f25",
          "sha256": "e0d385a5a06c82b3764b380945efb230cd6d72087da375b7867f03c60d9474e9"
        },
        "downloads": -1,
        "filename": "SmsHttpChannel-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "95dd591cac98be34dd8e74bb73419f25",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 6552,
        "upload_time": "2020-12-01T07:35:14",
        "upload_time_iso_8601": "2020-12-01T07:35:14.349459Z",
        "url": "https://files.pythonhosted.org/packages/cd/a5/7718a506c81311a20ff0f8188284646e354b87e365bc5e2b8684eb7c3493/SmsHttpChannel-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e48d9727e5d2344a0d95a96196a398ea4db333632f111a1e7ff71ffb82238df5",
          "md5": "9747d5d77ea7263e764c3858058d2873",
          "sha256": "415b1eb89a2584b62344bbe1d5dfbe7bd2015dc882e05f1e6f7eb48504842551"
        },
        "downloads": -1,
        "filename": "SmsHttpChannel-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9747d5d77ea7263e764c3858058d2873",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 7670,
        "upload_time": "2020-12-01T09:20:14",
        "upload_time_iso_8601": "2020-12-01T09:20:14.905877Z",
        "url": "https://files.pythonhosted.org/packages/e4/8d/9727e5d2344a0d95a96196a398ea4db333632f111a1e7ff71ffb82238df5/SmsHttpChannel-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "509995df407aa929d16947eb70673c1ebf040289172af80daac31fba1f3aac92",
          "md5": "466439a182959cf2453e4a92d2d5b6f7",
          "sha256": "dfd0a4c1f0fba7f2828b4b10e8ec3dadfb51675282768575e3d41830094cbdf7"
        },
        "downloads": -1,
        "filename": "SmsHttpChannel-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "466439a182959cf2453e4a92d2d5b6f7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 6376,
        "upload_time": "2020-12-01T09:20:16",
        "upload_time_iso_8601": "2020-12-01T09:20:16.583881Z",
        "url": "https://files.pythonhosted.org/packages/50/99/95df407aa929d16947eb70673c1ebf040289172af80daac31fba1f3aac92/SmsHttpChannel-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e48d9727e5d2344a0d95a96196a398ea4db333632f111a1e7ff71ffb82238df5",
        "md5": "9747d5d77ea7263e764c3858058d2873",
        "sha256": "415b1eb89a2584b62344bbe1d5dfbe7bd2015dc882e05f1e6f7eb48504842551"
      },
      "downloads": -1,
      "filename": "SmsHttpChannel-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9747d5d77ea7263e764c3858058d2873",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3",
      "size": 7670,
      "upload_time": "2020-12-01T09:20:14",
      "upload_time_iso_8601": "2020-12-01T09:20:14.905877Z",
      "url": "https://files.pythonhosted.org/packages/e4/8d/9727e5d2344a0d95a96196a398ea4db333632f111a1e7ff71ffb82238df5/SmsHttpChannel-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "509995df407aa929d16947eb70673c1ebf040289172af80daac31fba1f3aac92",
        "md5": "466439a182959cf2453e4a92d2d5b6f7",
        "sha256": "dfd0a4c1f0fba7f2828b4b10e8ec3dadfb51675282768575e3d41830094cbdf7"
      },
      "downloads": -1,
      "filename": "SmsHttpChannel-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "466439a182959cf2453e4a92d2d5b6f7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3",
      "size": 6376,
      "upload_time": "2020-12-01T09:20:16",
      "upload_time_iso_8601": "2020-12-01T09:20:16.583881Z",
      "url": "https://files.pythonhosted.org/packages/50/99/95df407aa929d16947eb70673c1ebf040289172af80daac31fba1f3aac92/SmsHttpChannel-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}