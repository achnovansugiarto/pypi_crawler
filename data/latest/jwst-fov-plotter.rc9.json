{
  "info": {
    "author": "Pablo Arrabal Haro",
    "author_email": "parrabalh@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "**_JWST FOV Plotter_** is a very simple package created to facilitate representing the apertures\nof the different James Webb Space Telescope instruments on the sky projection.\n\nIt allows to easily plot any FOV configuration by only specifying some central pointing\ncoordinates, rotation angle and any selection of instruments/apertures. Moreover, the\npointing coordinates and rotation angle can be given in the ideal coordinate system of any specific\ninstrument.\n\nAdditionally, the package includes a function to quickly generate DS9 region files.\n\n**Useful Links:**\n\n[JWST Field of View](https://jwst-docs.stsci.edu/jwst-observatory-hardware/jwst-field-of-view)\n\n[JWST Instrument Ideal Coordinate Systems](https://jwst-docs.stsci.edu/jwst-observatory-functionality/jwst-instrument-ideal-coordinate-systems)\n\n**Installation:**\n\nThrough pip:\n\n`pip install --upgrade JWST_FOV_plotter` (make sure to install version 0.2.3 or newer)\n\nAlternatively, you can download the source code, move to the package folder and run:\n\n`python setup.py install`\n\n**Description and instructions:**\n\nThe package essentially consists of only two main functions:\n\n- _plot_JWST_FOVs (ra, dec, fovs=None, ax=None, ref_instr='NIRCam', rot=0, instr_to_plot=['NIRCam', 'NIRSpec', 'MIRI', 'NIRISS'], colormap=None, color=None, NIRCam_long_wl=True, NIRCam_short_wl=True, NIRCam_coron=True, NIRSpec_MSA=True, NIRSpec_IFU=True, NIRSpec_fixed_slits=True, MIRI_imag=True, MIRI_IFU=True, MIRI_4QPM=True, MIRI_Lyot=True, MIRI_slit=True, NIRISS_WFSS=True, NIRISS_AMI=True, **kwargs):_\n\n`plot_JWST_FOVs` receives a pair of `ra`, `dec` coordinates in degrees, a counterclockwise rotation angle in degrees `rot`,\nthe name of the instrument to use as reference for the pointing `ref_instr` (default: 'NIRCam') and a matplotlib axes `ax` to plot the resulting FOV. If no `ax` is specified, it will use the current axis from matplotlib at the time of calling the function, but it is advisable to specify the `ax`, specially when plotting on top of a background .fits image.\n\nThe function uses the values from the SIAF table available in the [JWST FOV documentation](https://jwst-docs.stsci.edu/jwst-observatory-hardware/jwst-field-of-view). That table contains the geometry of all the different apertures in the V2V3 coordinate system. If desired, a different V2V3 apertures table can be used instead (`fovs='my_own_SIAF_table.csv'`). The given table must be in .csv or .fits format, and it must include at least all the columns present in the [original SIAF table](https://jwst-docs.stsci.edu/jwst-observatory-hardware/jwst-field-of-view). The default V2V3 FOV geometry will be updated in future versions of the package in the event of any future official modification of the values previously given.\n\nBy default, all the JWST apertures are represented. In order to remove any of them, a set of boolean variables is available. Setting any of them to `False` will remove its corresponding aperture from the final plot (e.g., `NIRCam_long_wl=False`). These are all the available options:\n\n| Optional argument | Aperture |\n| ------ | ------ |\n| `NIRCam_long_wl` | NIRCam long wavelength detectors |\n| `NIRCam_short_wl` | NIRCam short wavelength detectors |\n| `NIRCam_coron` | NIRCam coronagraph masks |\n| `NIRSpec_MSA` | NIRSpec MSA |\n| `NIRSpec_IFU` | NIRSpec IFU |\n| `NIRSpec_fixed_slits` | NIRSpec fixed slits |\n| `MIRI_imag` | MIRI imaging |\n| `MIRI_IFU` | MIRI IFU |\n| `MIRI_4QPM` | MIRI 4QPM coronagraphs |\n| `MIRI_Lyot` | MIRI Lyot coronagraph |\n| `MIRI_slit` | MIRI slit of the LRS |\n| `NIRISS_WFSS` | NIRISS WFSS |\n| `NIRISS_AMI` | NIRISS AMI |\n\nTo turn off all the apertures of any instruments, it exists the option of just removing their name from the `instr_to_plot` argument (default: `['NIRCam', 'NIRSpec', 'MIRI', 'NIRISS']`). In this way, by setting `instr_to_plot=['NIRCam', 'MIRI']`, for example, the function would only plot the FOV of those two instruments without needing to switch off all the individual apertures of the other unwanted instruments with the booleans listed above.\n\nAny extra matplotlib plotting parameters can also be added to the arguments of `plot_JWST_FOVs`. As some particularly useful examples, inputing a matplotlib transparency `alpha` value will plot shaded filled regions instead of just the edges of the apertures, while specifying a small value for `linewidth` will plot thinner edges.\n\nIn addition to plotting the FOV in the corresponding matplotlib figure, the function also returns a `pandas.DataFrame` object with the resulting geometry of the plotted FOV in ICRS coordinates.\n\n- _create_ds9_region (out_name, ra, dec, fovs=None, ref_instr='NIRCam', rot=0, instr_to_plot=['NIRCam', 'NIRSpec', 'MIRI', 'NIRISS'], colormap=None, color=None, NIRCam_long_wl=True, NIRCam_short_wl=True, NIRCam_coron=True, NIRSpec_MSA=True, NIRSpec_IFU=True, NIRSpec_fixed_slits=True, MIRI_imag=True, MIRI_IFU=True, MIRI_4QPM=True, MIRI_Lyot=True, MIRI_slit=True, NIRISS_WFSS=True, NIRISS_AMI=True, extra_params=''):_\n\n`create_ds9_region` generates a DS9 region file named `out_name` from a pair of `ra`, `dec` coordinates in degrees, a counterclockwise rotation angle in degrees `rot` and the name of the instrument to use as reference for the pointing `ref_instr` (default: 'NIRCam').\n\nIndeed, the way `create_ds9_region` works is essentially identical to how `plot_JWST_FOVs` does, the main difference being that this time no axis `ax` is required since the function is not going to plot on a figure. Instead, an output file name must be specified for the DS9 region file to be created.\n\nBy default, the region files generated will include one aperture per line in the form of a polygon constitued by 4 vertices plus a color parameter. Any extra DS9 region parameters can be added at the end of each line passing them in `str` format through the `extra_params` argument (e.g., `extra_params='dash=1 highlite=1 width=2'`).\n\nIn addition to generating the DS9 region file with the corresponding JWST FOV, the function also returns a `pandas.DataFrame` object with the resulting geometry of the plotted FOV in ICRS coordinates (exactly identical to that returned by `plot_JWST_FOVs`).\n\n# **Complete example script**\n\nThe script below gives an overview of the different utilities in **_JWST_FOV_plotter_**.\nIn this example, we plot a .fits as background image making use of the [`astropy`](https://docs.astropy.org/en/stable/index.html) package and the [`matplotlib.pyplot.imshow`](https://matplotlib.org/3.3.4/api/_as_gen/matplotlib.pyplot.imshow.html) function.\nSome arbitrary JWST FOVs are represented in top of the background image using the `JWST_FOV_plotter.plotter.plot_JWST_FOVs` function.\nIn the last part of the script, we show how to create a DS9 region file with our pointig FOVs through the `JWST_FOV_plotter.plotter.create_ds9_region` function, as well as how to save the pointing FOV geometry in ICRS coordinates to a .csv table if desired.\n\n```\n# Complete example of the use of plot_JWST_FOVs and create_ds9_region to\n# represent JWST FOVs over a background .fits image and make ds9 regions of any\n# desired JWST aperture, respectively.\n\n###############################################################################\n# Importing functions and libraries.\n\nimport matplotlib.pyplot as plt\nfrom astropy.io import fits\nfrom astropy import wcs\nfrom JWST_FOV_plotter.plotter import plot_JWST_FOVs, create_ds9_region, radec_FOV\n\n###############################################################################\n# Plotting example.\n###############################################################################\n\n# Loading .fits image to be plotted as background (if desired).\nima = fits.open('F160W_aegis_3dhst_example_image.fits')\n\n# Loading WCS information from the image header.\nw = wcs.WCS(ima[0].header)\n\n# Creating the figure.\nfig = plt.figure()\n\n# Defining axes.\n# Remove the projection=w argument if not using a background .fits image.\nax = fig.add_subplot(111, projection=w)\nax.set_xlabel('RA')\nax.set_ylabel('Dec')\n\n# Plotting .fits image.\n# WARNING: To save compilation time, remove the interpolation='None'\n# argument (or set it to any other value among those supported by imshow)\n# to carry out quick tests before plotting the final image.\n\nax.imshow(ima[0].data, cmap='Greys', origin='lower', interpolation='None',\n          vmin=0, vmax=0.01)\n\n#####################\n# Plotting JWST FOVs.\n\n# Setting reference instrument for the pointing.\n# Possible values: 'NIRCam', 'NIRSpec', 'MIRI', 'NIRISS'\nref_inst = 'NIRSpec'\n\n# Pointing coordinates in degrees.\nra = 215.069306\ndec = 52.9483236\n\n# APA angle of the reference instrument in degrees.\nang = 110\n\n# Remove the transform=ax.get_transform('icrs') argument if not using a\n# background .fits image.\n\nplot_JWST_FOVs(ra, dec, rot=ang, ax=ax, ref_instr=ref_inst,\n               transform=ax.get_transform('icrs'))\n\n# More JWST FOVs.\n# This time, we will not plot NIRSpec nor NIRISS, and will also skip the\n# NIRCam coronagraph apertures, for example.\n# Adding an alpha value (between 0-1) will plot shaded areas instead of only\n# contours.\n\nplot_JWST_FOVs(ra, dec, rot=ang-15, ax=ax, ref_instr=ref_inst,\n               instr_to_plot=['NIRCam', 'MIRI'], NIRCam_coron=False,\n               linewidth=0.2, alpha=0.3, color='magenta',\n               transform=ax.get_transform('icrs'))\n\n# Saving plot.\nplt.savefig('My_JWST_FOVs_test.pdf')\nplt.close(fig)\nima.close()\n\n\n###########################################################################\n# DS9 region file creation example.\n###########################################################################\n\n# For simplicity, we will use the same ra, dec, ang and ref_inst previously\n# defined in the script.\n\n# Creating the DS9 region file with some arbitrary optional arguments.\ncreate_ds9_region('My_JWST_FOV_DS9_region.reg', ra, dec, rot=ang,\n                  ref_instr=ref_inst,\n                  instr_to_plot=['NIRCam', 'MIRI'], NIRCam_coron=False)\n\n\n###############################################################################\n# Saving pointing apertures to a .csv table.\n###############################################################################\n\n# If you want to save your pointing FOV geometry in ICRS coordinates to a\n# .csv table for other purposes, you can get it this way.\n\nradec_fovs = create_ds9_region('My_JWST_FOV_DS9_region.reg', ra, dec,\n                               rot=ang, ref_instr=ref_inst, NIRCam_coron=False,\n                               instr_to_plot=['NIRCam', 'MIRI'])\n\nradec_fovs.to_csv('My_pointing_FOV.csv', index=False)\n\n# Alternatively, you could also just call the intermediate function radec_FOV,\n# which generates the same DataFrame without plotting anything.\nradec_fovs_2 = radec_FOV(ra, dec, rot=ang, ref_instr=ref_inst,\n                         NIRCam_coron=False, instr_to_plot=['NIRCam', 'MIRI'])\n\nradec_fovs_2.to_csv('My_pointing_FOV_2.csv', index=False)\n\n```\n\n**Example matplotlib image generated by the code shown above:**\n\n![](./examples/JWST_FOV_plotter_example.png)\n\n**Example DS9 region generated by the code shown above:**\n\n![](/examples/JWST_FOV_plotter_DS9_region_example.png)\n\n\nI hope this simple package can make you save some time. In case of needing any help using it, do not hesitate to contact me at parrabalh@gmail.com or pablo.arrabalharo@noirlab.edu.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/parrabalh/jwst_fov_plots",
    "keywords": "",
    "license": "LICENSE",
    "maintainer": "",
    "maintainer_email": "",
    "name": "JWST-FOV-plotter",
    "package_url": "https://pypi.org/project/JWST-FOV-plotter/",
    "platform": "",
    "project_url": "https://pypi.org/project/JWST-FOV-plotter/",
    "project_urls": {
      "Homepage": "https://gitlab.com/parrabalh/jwst_fov_plots"
    },
    "release_url": "https://pypi.org/project/JWST-FOV-plotter/0.3.1/",
    "requires_dist": [
      "astropy",
      "matplotlib",
      "numpy",
      "pandas",
      "shapely"
    ],
    "requires_python": ">=3",
    "summary": "Simple tools to easily represent JWST FOVs.",
    "version": "0.3.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9825752,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c85a4b595e7c54ac30408d5624f8fd1fc49158f9e603ae20711923cc18b2a84e",
          "md5": "b081ec6edc04c0ba3b8ae52055375ccd",
          "sha256": "de18621f73b389b695c350397700b22697fe766af5d49113bb4fef498889223b"
        },
        "downloads": -1,
        "filename": "JWST_FOV_plotter-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b081ec6edc04c0ba3b8ae52055375ccd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 13727,
        "upload_time": "2021-02-22T22:50:45",
        "upload_time_iso_8601": "2021-02-22T22:50:45.218780Z",
        "url": "https://files.pythonhosted.org/packages/c8/5a/4b595e7c54ac30408d5624f8fd1fc49158f9e603ae20711923cc18b2a84e/JWST_FOV_plotter-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "870dbd4a5f2dd1e31841095d63ac7ceb6b6d4245958487b2d4686405282923b5",
          "md5": "08c5155c289d7b74fd45588003429fb3",
          "sha256": "f02d4828625a18cd556bc2e88e28d540f14f354e02f3f4ff86e6166039bb2a1c"
        },
        "downloads": -1,
        "filename": "JWST_FOV_plotter-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "08c5155c289d7b74fd45588003429fb3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 10664,
        "upload_time": "2021-02-22T22:50:47",
        "upload_time_iso_8601": "2021-02-22T22:50:47.618778Z",
        "url": "https://files.pythonhosted.org/packages/87/0d/bd4a5f2dd1e31841095d63ac7ceb6b6d4245958487b2d4686405282923b5/JWST_FOV_plotter-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4d1f3eb295ac7d1b352ffe6c2552e95cd6092aae0d2fdfdbd678f729782ba61c",
          "md5": "0889e8bd147720e2135cae7155aefe6a",
          "sha256": "95bf2ba79d0aa32723c66f5b2c6cfeffc2ed370c505e240029aac79739e9261c"
        },
        "downloads": -1,
        "filename": "JWST_FOV_plotter-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0889e8bd147720e2135cae7155aefe6a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 13776,
        "upload_time": "2021-02-23T00:57:59",
        "upload_time_iso_8601": "2021-02-23T00:57:59.327163Z",
        "url": "https://files.pythonhosted.org/packages/4d/1f/3eb295ac7d1b352ffe6c2552e95cd6092aae0d2fdfdbd678f729782ba61c/JWST_FOV_plotter-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "376c9bef5fc04c6372f5e3c3f8c16e2e4ddf2bf7084bf20a4f573eecb3ab5e47",
          "md5": "d33f3e87544189ca2e62377151d798c0",
          "sha256": "8b74d8d49425f85e2db6f3c9fd3731d6f6c1e154349495f14150976cb77b7b03"
        },
        "downloads": -1,
        "filename": "JWST_FOV_plotter-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d33f3e87544189ca2e62377151d798c0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 13406,
        "upload_time": "2021-02-23T00:58:01",
        "upload_time_iso_8601": "2021-02-23T00:58:01.435746Z",
        "url": "https://files.pythonhosted.org/packages/37/6c/9bef5fc04c6372f5e3c3f8c16e2e4ddf2bf7084bf20a4f573eecb3ab5e47/JWST_FOV_plotter-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "547b76788d80522a1e5f8734db0e07c72491a0f7b67e12f201fe20c5b83d9d9f",
          "md5": "e9b6cdddc612d172f37108a2b380f5fc",
          "sha256": "c590ecfb17c9a04dbdecea22a0b17ed6a2b74066026e83955115367bd5d2b984"
        },
        "downloads": -1,
        "filename": "JWST_FOV_plotter-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e9b6cdddc612d172f37108a2b380f5fc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 13774,
        "upload_time": "2021-02-23T01:27:09",
        "upload_time_iso_8601": "2021-02-23T01:27:09.648235Z",
        "url": "https://files.pythonhosted.org/packages/54/7b/76788d80522a1e5f8734db0e07c72491a0f7b67e12f201fe20c5b83d9d9f/JWST_FOV_plotter-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "62fe24196b3ab8f2fd4beea0b768ed25ade7dd781e5229e309f95dd44808e63b",
          "md5": "0374363d3c44a0f862a91b6cb1396fb1",
          "sha256": "ac8e79b897e7cccf0076fceec2ff230e41e0c8a8d5b9ebb974986642b8a15f99"
        },
        "downloads": -1,
        "filename": "JWST_FOV_plotter-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "0374363d3c44a0f862a91b6cb1396fb1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 13419,
        "upload_time": "2021-02-23T01:27:11",
        "upload_time_iso_8601": "2021-02-23T01:27:11.274400Z",
        "url": "https://files.pythonhosted.org/packages/62/fe/24196b3ab8f2fd4beea0b768ed25ade7dd781e5229e309f95dd44808e63b/JWST_FOV_plotter-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9d4323601a122442304f04c9c4e2b3206cc41eb058bf00c3ca9d8f15a4077912",
          "md5": "77355fe958837eee2c8c2853faeaf967",
          "sha256": "f6b83168a45a4cc044bf31f436674ab9c40bb5f9b6bd7c68ac3ccd9692c1e9da"
        },
        "downloads": -1,
        "filename": "JWST_FOV_plotter-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "77355fe958837eee2c8c2853faeaf967",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 15692,
        "upload_time": "2021-02-23T01:56:04",
        "upload_time_iso_8601": "2021-02-23T01:56:04.794783Z",
        "url": "https://files.pythonhosted.org/packages/9d/43/23601a122442304f04c9c4e2b3206cc41eb058bf00c3ca9d8f15a4077912/JWST_FOV_plotter-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e434beffecb7fdb6adb9afe2846ed8548333fa2354a8be9b2c0f0b0524100c24",
          "md5": "5b981cc30856aa15a2a595c75adebdc4",
          "sha256": "99e68334bc4885f5cdd9ebf798372bb517c1a1babe54a97c61c75144d3845038"
        },
        "downloads": -1,
        "filename": "JWST_FOV_plotter-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5b981cc30856aa15a2a595c75adebdc4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 13419,
        "upload_time": "2021-02-23T01:56:06",
        "upload_time_iso_8601": "2021-02-23T01:56:06.262523Z",
        "url": "https://files.pythonhosted.org/packages/e4/34/beffecb7fdb6adb9afe2846ed8548333fa2354a8be9b2c0f0b0524100c24/JWST_FOV_plotter-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f5ee7accc4d719afeb423abea839fefef016756880c79860cb8d9dbf2489263",
          "md5": "9d71f438c567e4fe0d0237cae0678f46",
          "sha256": "4e362b6173ebafcbd914d3fd307404c48559eeda27b38b8a73a09adf93120526"
        },
        "downloads": -1,
        "filename": "JWST_FOV_plotter-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9d71f438c567e4fe0d0237cae0678f46",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 15724,
        "upload_time": "2021-02-23T02:17:27",
        "upload_time_iso_8601": "2021-02-23T02:17:27.642970Z",
        "url": "https://files.pythonhosted.org/packages/2f/5e/e7accc4d719afeb423abea839fefef016756880c79860cb8d9dbf2489263/JWST_FOV_plotter-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a5421d272692ce14cb4c662914eeb3f0b6f9d49ad45d77ae92b0c91b84d2f327",
          "md5": "7c5a9b9083ed268aeae64f87b8f80a8f",
          "sha256": "acc1064bcbe2c4d59eef891a47df2a2b479c9e7123c6864bf536ed27cd3d2a51"
        },
        "downloads": -1,
        "filename": "JWST_FOV_plotter-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7c5a9b9083ed268aeae64f87b8f80a8f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 13509,
        "upload_time": "2021-02-23T02:17:29",
        "upload_time_iso_8601": "2021-02-23T02:17:29.457721Z",
        "url": "https://files.pythonhosted.org/packages/a5/42/1d272692ce14cb4c662914eeb3f0b6f9d49ad45d77ae92b0c91b84d2f327/JWST_FOV_plotter-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6360348eaf4f276050feb241a5f209206f86d5ad7ec5e5b0e3378da399092abd",
          "md5": "745ffd317c5ac585661ac28af7b56792",
          "sha256": "f9375301eedea284fed83e86813798deeb8b8ae5e00db5688222b83ce7e06c11"
        },
        "downloads": -1,
        "filename": "JWST_FOV_plotter-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "745ffd317c5ac585661ac28af7b56792",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 16103,
        "upload_time": "2021-02-24T22:53:49",
        "upload_time_iso_8601": "2021-02-24T22:53:49.077182Z",
        "url": "https://files.pythonhosted.org/packages/63/60/348eaf4f276050feb241a5f209206f86d5ad7ec5e5b0e3378da399092abd/JWST_FOV_plotter-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b36d236c4d715c7b3df0811ce6f4d7af45aec19320c3c064c6ca496863f65e77",
          "md5": "d5723b7a0a3651de44be5e6fc25f515d",
          "sha256": "ab475e8c1dbe51d3cb30a505d11ecfdb34b6677e80ea8d42a63a61ebe3f9b2d4"
        },
        "downloads": -1,
        "filename": "JWST_FOV_plotter-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d5723b7a0a3651de44be5e6fc25f515d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 13934,
        "upload_time": "2021-02-24T22:53:51",
        "upload_time_iso_8601": "2021-02-24T22:53:51.231138Z",
        "url": "https://files.pythonhosted.org/packages/b3/6d/236c4d715c7b3df0811ce6f4d7af45aec19320c3c064c6ca496863f65e77/JWST_FOV_plotter-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f8165c78d2c7b3a6ca89caae4100ce9db112bb2706cd1785bc5bf2195f4ed657",
          "md5": "eb8da4ebdeffef97d8e7c2b069e0dc65",
          "sha256": "d93c13d73aa0b63049835e04040c1ae5f5b29b4e1366d398f6e34a202c02f942"
        },
        "downloads": -1,
        "filename": "JWST_FOV_plotter-0.2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eb8da4ebdeffef97d8e7c2b069e0dc65",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 16155,
        "upload_time": "2021-02-26T16:48:23",
        "upload_time_iso_8601": "2021-02-26T16:48:23.198625Z",
        "url": "https://files.pythonhosted.org/packages/f8/16/5c78d2c7b3a6ca89caae4100ce9db112bb2706cd1785bc5bf2195f4ed657/JWST_FOV_plotter-0.2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2ecb6a14ff826cc342be4deb6a4fdddbfa4f3e07994e9054f4c08b5eb99db105",
          "md5": "db0fc19fd06209b9ec7c6b86f00017f9",
          "sha256": "62aa2c974b21db34d10c6e550f7b016de8450fedf19b18339415d99202aababe"
        },
        "downloads": -1,
        "filename": "JWST_FOV_plotter-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "db0fc19fd06209b9ec7c6b86f00017f9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 14005,
        "upload_time": "2021-02-26T16:48:24",
        "upload_time_iso_8601": "2021-02-26T16:48:24.433928Z",
        "url": "https://files.pythonhosted.org/packages/2e/cb/6a14ff826cc342be4deb6a4fdddbfa4f3e07994e9054f4c08b5eb99db105/JWST_FOV_plotter-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "165580bc7870a8210f31228ba418cdccdd425d208cccce81df34ff0343e7fafa",
          "md5": "8e43155ec18d092694d3c4931fc1b9b0",
          "sha256": "22c5dcb4224bb1161c17b09826cdc7f64522311bc21b635607f1ab1bd015d8d2"
        },
        "downloads": -1,
        "filename": "JWST_FOV_plotter-0.3.0-py3.8.egg",
        "has_sig": false,
        "md5_digest": "8e43155ec18d092694d3c4931fc1b9b0",
        "packagetype": "bdist_egg",
        "python_version": "3.8",
        "requires_python": ">=3",
        "size": 28420,
        "upload_time": "2021-03-19T22:24:22",
        "upload_time_iso_8601": "2021-03-19T22:24:22.426564Z",
        "url": "https://files.pythonhosted.org/packages/16/55/80bc7870a8210f31228ba418cdccdd425d208cccce81df34ff0343e7fafa/JWST_FOV_plotter-0.3.0-py3.8.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "97d35a3e3416f3a4cfe637a7545ec70c005e5b7d46a37e7547a450257bf0d76d",
          "md5": "d31d449e2095b61ba7b23925430dcd7d",
          "sha256": "761706e57b7c78d48c5dfdeff06cbabd1f7eb5c6aaf9bb07c50a99d19c53cac0"
        },
        "downloads": -1,
        "filename": "JWST_FOV_plotter-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d31d449e2095b61ba7b23925430dcd7d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 18130,
        "upload_time": "2021-03-19T22:24:21",
        "upload_time_iso_8601": "2021-03-19T22:24:21.336985Z",
        "url": "https://files.pythonhosted.org/packages/97/d3/5a3e3416f3a4cfe637a7545ec70c005e5b7d46a37e7547a450257bf0d76d/JWST_FOV_plotter-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c842aecfa7004045b4e04cf839d308e3358bcdacb3a4ba66098eaf4735044d78",
          "md5": "dfaa360d496e011d350c3fdba70ca795",
          "sha256": "9386e6d005a438759a1c57dca4bed15ff17e36eba8c3eae5b81baaa78d4f8460"
        },
        "downloads": -1,
        "filename": "JWST_FOV_plotter-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "dfaa360d496e011d350c3fdba70ca795",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 15924,
        "upload_time": "2021-03-19T22:24:23",
        "upload_time_iso_8601": "2021-03-19T22:24:23.433269Z",
        "url": "https://files.pythonhosted.org/packages/c8/42/aecfa7004045b4e04cf839d308e3358bcdacb3a4ba66098eaf4735044d78/JWST_FOV_plotter-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "407ae2055bf2b847d9a2ba99b00f937b0569b9c1c3a898186fa2bd55db3f5c97",
          "md5": "6d98231fe14766f370b92f142ddb78c3",
          "sha256": "5ff1ad414b22e1300f0c3227b090237bd2b590f92e69a2d61c5c019d3fc64f10"
        },
        "downloads": -1,
        "filename": "JWST_FOV_plotter-0.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6d98231fe14766f370b92f142ddb78c3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 18145,
        "upload_time": "2021-03-19T22:50:03",
        "upload_time_iso_8601": "2021-03-19T22:50:03.068657Z",
        "url": "https://files.pythonhosted.org/packages/40/7a/e2055bf2b847d9a2ba99b00f937b0569b9c1c3a898186fa2bd55db3f5c97/JWST_FOV_plotter-0.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ca37c768cb29ed3c1344eb08f635f618dc3e1c9a1ef8bf0d4eb492a2645f7c2",
          "md5": "0709980b570b2c5e621cc8618185e8ee",
          "sha256": "d87efbad6115d9e4b45e2094336b3136ee197f84f861f82a91b06e06e293feb9"
        },
        "downloads": -1,
        "filename": "JWST_FOV_plotter-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0709980b570b2c5e621cc8618185e8ee",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 15907,
        "upload_time": "2021-03-19T22:50:04",
        "upload_time_iso_8601": "2021-03-19T22:50:04.818882Z",
        "url": "https://files.pythonhosted.org/packages/0c/a3/7c768cb29ed3c1344eb08f635f618dc3e1c9a1ef8bf0d4eb492a2645f7c2/JWST_FOV_plotter-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "407ae2055bf2b847d9a2ba99b00f937b0569b9c1c3a898186fa2bd55db3f5c97",
        "md5": "6d98231fe14766f370b92f142ddb78c3",
        "sha256": "5ff1ad414b22e1300f0c3227b090237bd2b590f92e69a2d61c5c019d3fc64f10"
      },
      "downloads": -1,
      "filename": "JWST_FOV_plotter-0.3.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6d98231fe14766f370b92f142ddb78c3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3",
      "size": 18145,
      "upload_time": "2021-03-19T22:50:03",
      "upload_time_iso_8601": "2021-03-19T22:50:03.068657Z",
      "url": "https://files.pythonhosted.org/packages/40/7a/e2055bf2b847d9a2ba99b00f937b0569b9c1c3a898186fa2bd55db3f5c97/JWST_FOV_plotter-0.3.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0ca37c768cb29ed3c1344eb08f635f618dc3e1c9a1ef8bf0d4eb492a2645f7c2",
        "md5": "0709980b570b2c5e621cc8618185e8ee",
        "sha256": "d87efbad6115d9e4b45e2094336b3136ee197f84f861f82a91b06e06e293feb9"
      },
      "downloads": -1,
      "filename": "JWST_FOV_plotter-0.3.1.tar.gz",
      "has_sig": false,
      "md5_digest": "0709980b570b2c5e621cc8618185e8ee",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3",
      "size": 15907,
      "upload_time": "2021-03-19T22:50:04",
      "upload_time_iso_8601": "2021-03-19T22:50:04.818882Z",
      "url": "https://files.pythonhosted.org/packages/0c/a3/7c768cb29ed3c1344eb08f635f618dc3e1c9a1ef8bf0d4eb492a2645f7c2/JWST_FOV_plotter-0.3.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}