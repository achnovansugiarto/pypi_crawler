{
  "info": {
    "author": "Vladislav Shufinsky",
    "author_email": "shufinsky.90210@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "|License| |Contact|\n\nAdding data about players on court in NBA games.\n================================================\n\n**nba_on_court** package allows you to add to  play-by-play data information\nabout players who were on court at any given time.\n\nInstalation\n-----------\n::\n\n    pip install nba-on-court\n\n\n**Important: This package does not request play-by-play data from NBA website.\nYou need to get them in advance, for example, using nba_api package.**\n\nhttps://github.com/swar/nba_api\n\nHow it work\n-----------\n\nPlay-by-play NBA data contains information about each event in the game\n(throw, substitution, foul, etc.) and players who participated in it\n(PLAYER1_ID, PLAYER2_ID, PLAYER3_ID).\n\nFrom this data, we get a list of players who were on court in this\nquarter. Then, we need to filter this list to 10 people who started\nquarter. This is done by analyzing substitutions in quarter.\n\nI will soon describe a more complete mechanism for processing\nplay-by-play data to obtain information about players on court in an\narticle.\n\nIn package two main functions: **players_on_court** and **players_name**.\n\n**players_on_court** takes play-by-play data as input and returns it with 10\ncolumns of the PLAYER_ID of players who were on court at each time.\n\n**players_name** allows you to replace PLAYER_ID with first and last name of player.\nThis allows user to understand exactly which players were on court (few know PLAYER_ID\nall players in NBA),but it is not necessary to do this before calculations, because the\nplayer's NAME_SURNAME is not unique, unlike PLAYER_ID.\n\nCode example\n------------\n.. code:: python\n\n    >>> from nba_api.stats.endpoints import playbyplayv2\n    >>> import nba_on_court.nba_on_court as noc\n    >>>\n    >>> pbp = playbyplayv2.PlayByPlayV2(game_id=\"0022100001\").play_by_play.get_data_frame()\n    >>> pbp_with_players = noc.players_on_court(pbp)\n    >>> len(pbp_with_players.columns) - len(pbp.columns)\n    10\n    >>> players_id = list(pbp_with_players.iloc[0, 34:].reset_index(drop=True))\n    >>> print(players_id)\n    [201142, 1629651, 201933, 201935, 203925, 201572, 201950, 1628960, 203114, 203507]\n    >>> players_name = noc.players_name(players_id)\n    >>> print(players_name)\n    ['Kevin Durant', 'Nic Claxton', 'Blake Griffin', 'James Harden', 'Joe Harris',\n    'Brook Lopez', 'Jrue Holiday', 'Grayson Allen', 'Khris Middleton', 'Giannis Antetokounmpo']\n\nYou can also replace the PLAYER_ID with the player's name in the entire data frame at once.\n\n.. code:: python\n\n    >>> cols = [\"PLAYER1\", \"PLAYER2\", \"PLAYER3\", \"PLAYER4\", \"PLAYER5\", \"PLAYER6\", \"PLAYER7\", \"PLAYER8\", \"PLAYER9\", \"PLAYER10\"]\n    >>> pbp_with_players.loc[:, cols] = pbp_with_players.loc[:, cols].apply(noc.players_name, result_type=\"expand\")\n\n\n.. |License| image:: https://img.shields.io/badge/License-MIT-yellow.svg\n    :target:  https://opensource.org/licenses/MIT\n.. |Contact| image:: https://img.shields.io/badge/telegram-write%20me-blue.svg\n    :target:  https://t.me/nbaatlantic\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/shufinskiy/nba-on-court",
    "keywords": "nba,play-by-play",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "nba-on-court",
    "package_url": "https://pypi.org/project/nba-on-court/",
    "platform": "any",
    "project_url": "https://pypi.org/project/nba-on-court/",
    "project_urls": {
      "Homepage": "https://github.com/shufinskiy/nba-on-court"
    },
    "release_url": "https://pypi.org/project/nba-on-court/0.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "attr: nba-on-court.__doc__",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13452216,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "95cb2dbca81033a625604ea084b37d10a8c280dbf0618719238d45e30b1e0b92",
          "md5": "2b4fb61bccd8eabbd7e505141a345210",
          "sha256": "429413122e0ffbd934b6cf1f59aae4d4d1f9415f534cc2b1e817511987dbaf07"
        },
        "downloads": -1,
        "filename": "nba-on-court-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2b4fb61bccd8eabbd7e505141a345210",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 4270,
        "upload_time": "2022-04-08T09:53:13",
        "upload_time_iso_8601": "2022-04-08T09:53:13.894552Z",
        "url": "https://files.pythonhosted.org/packages/95/cb/2dbca81033a625604ea084b37d10a8c280dbf0618719238d45e30b1e0b92/nba-on-court-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b3bb2badf6831b1a7c2f166ac79bda4a5eacb1612a651d6e4c1832f26c2a32dd",
          "md5": "3005b95ae38d37f40456b950e84b85ea",
          "sha256": "2b4e3d90c6a5f4c37b5d5454c944c13f12aacfe80b7cc04460d83e7ea8a01061"
        },
        "downloads": -1,
        "filename": "nba-on-court-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3005b95ae38d37f40456b950e84b85ea",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 6241,
        "upload_time": "2022-04-08T10:01:14",
        "upload_time_iso_8601": "2022-04-08T10:01:14.579244Z",
        "url": "https://files.pythonhosted.org/packages/b3/bb/2badf6831b1a7c2f166ac79bda4a5eacb1612a651d6e4c1832f26c2a32dd/nba-on-court-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b3bb2badf6831b1a7c2f166ac79bda4a5eacb1612a651d6e4c1832f26c2a32dd",
        "md5": "3005b95ae38d37f40456b950e84b85ea",
        "sha256": "2b4e3d90c6a5f4c37b5d5454c944c13f12aacfe80b7cc04460d83e7ea8a01061"
      },
      "downloads": -1,
      "filename": "nba-on-court-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "3005b95ae38d37f40456b950e84b85ea",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 6241,
      "upload_time": "2022-04-08T10:01:14",
      "upload_time_iso_8601": "2022-04-08T10:01:14.579244Z",
      "url": "https://files.pythonhosted.org/packages/b3/bb/2badf6831b1a7c2f166ac79bda4a5eacb1612a651d6e4c1832f26c2a32dd/nba-on-court-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}