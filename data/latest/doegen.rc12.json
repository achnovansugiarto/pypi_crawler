{
  "info": {
    "author": "Sebastian Haan",
    "author_email": "sebastian.haan@sydney.edu.au",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "DoEgen: A Python Library for Optimised Design of Experiment Generation and Evaluation\n=====================================================================================\n\nDoEgen is a Python library aiming to assist in generating optimised\nDesign of Experiments (DoE), evaluating design efficiencies, and\nanalysing experiment results.\n\nIn a first step, optimised designs can be automatically generated and\nefficiencies evaluated for any mixture of factor-levels for numeric and\ncategorical factors. Designs are automatically evaluated as function of\nnumber of experiment runs and the most efficient designs are suggested.\nIn particular DoEgen provides computation of a wide range of design\nefficiencies and allows to import and evaluate externally generated\ndesigns as well.\n\nThe second part of DoEgen assists in analysing any derived experiment\nresults in terms of factor importance, correlations, and response\nanalysis for best parameter space selection.\n\nAuthor: Sebastian Haan\n\nTable of Contents\n-----------------\n\n-   [Definitions](#definitions)\n-   [Functionality](#functionality)\n-   [Installation And Requirements](#installation-and-requirements)\n    -   [Requirements](#requirements)\n    -   [User Templates](#user-templates)\n    -   [Running tests](#running-tests)\n    -   [Documentation](#documentation)\n-   [Main Modules and Usage](#main-modules-and-usage)\n    -   [Design Generation](#design-generation)\n    -   [Design Efficiencies](#design-efficiencies)\n    -   [Design Selection](#design-selection)\n    -   [Experiment Result Analysis](#experiment-result-analysis)\n-   [Use Case Study](#use-case-study)\n-   [Comparison to Other DoE Tools](#comparison-to-other-doe-tools)\n-   [Literature](#literature)\n-   [Attribution and Acknowledgments](#attribution-and-acknowledgements)\n-   [License](#license)\n\nDefinitions\n-----------\n\nAn Experiment Design is typically defined by:\n\n-   Number of Factors: the parameters or variates of the experiment\n-   Number of Runs: the number of experiments\n-   Levels: The number of value options for each factor, which can be\n    either numeric values (discrete or continuous) or categorical.\n    Discrete levels for continuous factors can be obtained by providing\n    the minimum and maximum of the factor range and the number of\n    levels. The more levels, the more “fine-grained” the experiment will\n    evaluate this factor, but also more experimental runs are required.\n\nThe goal of optimising an experimental design is to provide an efficient\ndesign that is near-optimal in terms of, e.g., orthogonality, level\nbalance, and two-way interaction coverage, yet can be performed with a\nminimum number of experimental runs, which are often costly or\ntime-consuming.\n\nFunctionality\n-------------\n\nIf you would like to jumpstart a new experiment and to skip the\ntechnical details, you can find a summary of the main usage of DoEgen in\n[Use Case Study](#use-case-study).\n\nCurrently, the (preliminary) release contains several functions for\ngenerating and evaluating designs. Importing and evaluating external\ndesigns is supported (e.g. for comparison to other DoE generator tools).\nDoE also implements several functions for experiment result analysis and\nvisualisation of parameter space.\n\nThe main functionalities are (sorted in order of typical experiment\nprocess):\n\n-   Reading Experiment Setup Table and Settings (Parameter Name, Levels\n    for each factor, Maximum number of runs, Min/Max etc)\n-   Generating optimised design arrays for a range of runs (given\n    maximum number of runs, and optional computation-time constraints,\n    see `settings_design.yaml`).\n-   Evaluation and visualisation of more than ten design efficiencies\n    such as level balance, orthogonality, D-efficiencies etc (see\n    [Design Efficiencies](#design-efficiencies) for the complete list).\n-   Automatic suggestion of minimum, optimal, and best designs within a\n    given range of experiment runs.\n-   Import and evaluation of externally generated design arrays.\n-   Experiment result analysis: Template table for experiment results,\n    multi-variant RMSE computation, best model/parameter selection,\n    Factor Importance computation, pairwise response surface and\n    correlation computation, factor correlation analysis and Two-way\n    interaction response plots.\n-   Visualisation of experiment results.\n\nInstallation And Requirements\n-----------------------------\n\n### Requirements\n\n-   Python \\>= 3.6\n-   SWIG \\>=3.0.12\n-   OApackage\n-   xlrd\n-   XlsxWriter\n-   openpyxl\n-   Numpy\n-   Pandas\n-   PyYAML\n-   scikit-learn\n-   matplotlib\n-   seaborn\n\nThe DoEgen package is currently considered experimental and has been\ntested with the libraries specified in `requirements.txt`.\n\nThe OApackage requires an installation of SWIG (tested with SWIG\n3.0.12), which can be found at\nhttps://www.dev2qa.com/how-to-install-swig-on-macos-linux-and-windows/or\ncan be installed via conda\n\n``` sh\nconda install swig\n```\n\nAfter installing `swig` and `numpy`, DoEgen can be installed either with\n\n``` sh\npython setup.py build \npython setup.py install\n```\n\nor using pip\n\n``` sh\npip install DoEgen\n```\n\nNote that OAPackage can be also installed manually by following\ninstallation instructions and documentation for OApackage (tested with\nOApackage 2.6.6), which can be found at\nhttps://pypi.org/project/OApackage/.\n\n### User Templates\n\n1.  The factor (parameter) settings of experiment are defined in an\n    experiment setup table (see `Experiment_results_template.xlsx`). A\n    new excel setup template table can be also created with\n    `create_setupfile.py`. Each factor is on a new row and specified by\n    `Parameter Name`, `Parameter Type` , `Level Number`, `Minimum`,\n    `Maximum`, `Include (Y/N)` (optional, by default all will be included), `Levels` (optional)\n    If `Levels` are provided pleae seperate each level by a comma; \n    Levels can be a mix of numerical and string entries (NUmbre of entries should match `Level Number`)\n\n2.  After the experiment is run, the results have to be filled in an\n    experiment result table (see `Experiment_results_template.xlsx`). A\n    new excel result template table can be also created with\n    `create_resultfile.py` The result table allows to fill in multiple\n    output properties (Y\\_label: output target to be predicted) and\n    experiment positions. The results have to be provided in the table\n    with the following columns:\n\n-   `Nexp`: Run\\# of experiment, need to match Run\\# in Experiment setup\n    and design.\n-   `PID`: Identifier\\# of label of location (point) in experiment\n    (e.g. if experiment is run at different locations simultaneously).\n-   `Y Label`: Identifier\\# or label of Y-Variate (target property that\n    has to be predicted or evaluated, e.g. Rain and Temperature). This\n    allows to include multi-output models with distinct target\n    properties. Note that currently each Y variate is evaluated\n    separately.\n-   `Y Exp` The experiment result for Y\n-   `Y Truth` (optional) if the true value available is available for Y.\n    This is required to calculate the RMSE and to select best parameter\n    space.\n-   Not currently considered (yet) in result stats computation:\n    `Std Y Exp`, `Std Y Truth`, `Weight PID`\n\n<figure>\n<img src=\"https://github.com/sebhaan/DoEgen/blob/main/figures/Setup_header.png\" width=\"600\" alt=\"\" /><figcaption>Experiment Setup Table Header.</figcaption>\n</figure>\n\n<figure>\n<img src=\"https://github.com/sebhaan/DoEgen/blob/main/figures/Result_header.png\" width=\"600\" alt=\"\" /><figcaption>Experiment Result Table Header.</figcaption>\n</figure>\n\n### Running Tests\n\nTo verify that DoEgen works, you can run the example experiment\n\n``` bash\n$ python -m doegen.init_tests\n$ python -m doegen.doegen test/settings_design_test.yaml\n$ python -m doegen.doeval test/settings_expresults_test.yaml\n```\n\n### Documentation\n\nPlease do not modify `README.md`. Instead make any changes in the master\ndocumentation file `MANUAL.md` (uses pandoc markdown syntax) and then\nconvert to the inferior Github markdown flavor (note that the new\ngithub-flavored markdown format gfm option does not correctly solve\nfigure caption and resize options):\n\n``` bash\npandoc -f markdown -t markdown_github MANUAL.md -o README.md\n```\n\nand to pdf:\n\n``` bash\npandoc -V geometry:margin=1.2in MANUAL.md -o docs/MANUAL.pdf\n```\n\nor as standalone html:\n\n``` bash\npandoc MANUAL.md -o MANUAL.html\n```\n\nMain Modules and Usage\n----------------------\n\n### Design Generation\n\nDesign generation with `doegen.py`: Main model for generating optimised\ndesigns and computation of efficiencies. Settings are specified in\nsettings yaml file `settings_design.yaml`. If the yaml and .xlsx\ntemplate files are not yet in your working directory (e.g. after first\nDoEgen installation), you can create in the the yaml and excel template\nfiles with\n\n``` bash\n$ python -m doegen.init_config\n```\n\nBefore running `doegen.py`,two things have to be the done:\n\n1.  fill in experiment setup table (see template provided\n    `Experiment_setup_template.xlsx` or example in `test/` folder)\n2.  provide settings in settings file (see `settings_design.yaml`)\n\nNow you are ready to run the design generation\n\n``` bash\n$ python -m doegen.doegen settings_design.yaml\n```\n\nThis will produce a number of files for different experiment run length\n(see folder `test/results/DesignArray_Nrun...`):\n\n-   The optimised design array `EDarray_[factor_levelels]_Nrun.csv`.\n-   A table of design efficiencies\n    `Efficiencies_[factor_levelels]_Nrun.csv`\n-   Table of two-way Interaction balance `Table_Interaction_Balance.txt`\n-   Table of Pearson correlation coefficients between all factor pairs\n    `Table_Pearson_Correlation.csv`\n-   Plot of pairwise correlation including regression fit\n    `pairwise_correlation.png` (see example plot below)\n\nBesides the default optimisation (based on function\n`doegen.deogen.optimize_design`), DoEgen also allows the to construct\nfull orthogonal designs using the function `doegen.doegen.gen_highD`,\nwhich is based on OApackage orthogonal arrays and extensions. However,\nthis works only for special cases with limited number of factors and\ndesign levels. Thus, it is currently not fully automated but might\nassist advanced users to construct optimal designs.\n\n### Design Selection\n\nDoEgen will select by default three designs based on the following\nciteria:\n\n1.  minimum Design with the criteria:\n\n-   number of runs \\>= number of factors + 1\n-   center balance \\> 95%\n-   level balance \\> 95%\n-   Orthogonal Balance \\> 90%\n-   Two Level interaction Balance \\> 90%\n-   Two Level Interaction Minimum One = 100%\n\n1.  optimal Design with the criteria:\n\n-   center balance \\> 98%\n-   level balance \\> 98%\n-   Orthogonal Balance \\> 95%\n-   Two Level interaction Balance \\> 95%\n-   Two Level Interaction Minimum One = 100%\n\n1.  best design which is based on best score that is sum of efficiencies\n    above and includes a small penalty for runsize relative to maximum\n    runsize\n\nThis will deliver (see folder `test/results/`):\n\n-   Overview summary of the three designs and their main efficiencies:\n    `Experiment_Design_selection_summary.txt`\n-   Three tables (`Designtable_minimum/optimal/best...csv`) for the\n    there suggested designs that are converted in the actual level\n    values\n-   An overview of the efficiencies is plotted as function of exp run\n    and saved in `Efficiencies_[factor_levels].png`\n\nIn case the user wants to select another design for a different run\nsize, one can covert the design array into a design table with the\nfunction `doegen.deogen.array2valuetable()`.\n\n<figure>\n<img src=\"https://github.com/sebhaan/DoEgen/blob/main/figures/Efficiencies.png\" width=\"400\" alt=\"\" /><figcaption>Example overview plot of the main efficiencies (from 0=worst to 100=best) as function of number of experiments.</figcaption>\n</figure>\n\n### Design Efficiencies\n\nDoEgen computes more than ten efficiencies and saves them as .csv file\nfor each generated design array. All indicators, except for the\ncanonical correlations, have a range from 0 (worst possible) to 1\n(optimal):\n\n-   Center Balance: 100% \\[1 - Sum(Center-Deviation)/Array Size\\],\n    i.e. the average center balance over all factors.\n-   Level Balance: Defined as 100% \\[1 - Sum(Imbalance)/Array Size\\],\n    the average level balance over all factors.\n-   Orthogonality: Defined as 100% \\[1 - Orthogonality\\], i.e. the\n    average orthogonality over all factor pairs.\n-   Two-way Interaction Balance: Similar to level balance but for\n    pairwise factor balance.\n-   Two-way Interaction with at least one occurrence: 100% \\[1 - Sum(Not\n    at least one pairwise factor occurrence)/number of pairwise\n    combinations\\]; 100% if all factor-level pair combinations occur at\n    least once.\n-   D-Eff: D-Efficiency (model includes main term and quadratic).\n-   D1 Eff: only main terms\n-   D2 Eff: main, quadratic, and interaction terms\n-   A-Eff: A-efficiency (main term and quadratic)\n-   A1-Eff: only main terms\n-   A2-Eff: main, quadratic, and interaction terms\n\nFor further inspection, `doegen.deogen.evaluate_design2` creates also\nthe following tables and plots:\n\n-   Table of Pearson Correlation (same as above if normalised discrete\n    variables)\n-   Table of Two-way Interaction Balance\n-   Cornerplot of pairwise factor relation with Y\n\n<figure>\n<img src=\"https://github.com/sebhaan/DoEgen/blob/main/figures/pairwise_correlation.png\" width=\"600\" alt=\"\" /><figcaption>Pairwise factor correlation plot of an example 8 factor design array with a mix of 3- and 2-level factors. The lines and blue shadows correspond to the linear regression fit and its uncertainty. Two pairs are 100% orthogonal if the linear regression line is horizontal. The diagonal bar charts show the histogram of level values for each factor (perfect level balance if histogram is flat).</figcaption>\n</figure>\n\n### Experiment Result Analysis\n\nExperiment Result Analysis with `doeval.py`: The experiment results have\nto be provided in a result table with the format as specified in\n\\#user-templates, and specifications in the `settings_expresults.yaml`\nfile. Then run\n\n``` bash\n$ python -m doegen.doeval settings_expresults.yaml\n```\n\nThis will create the following stats tables and plots (see folder\n`test/expresults/` as example):\n\n-   A valuation of the factors in term of “importance”, which is defined\n    by the maximum change (range) in the average Y between any factor\n    levels. Results are visualized in bar plot (`Ybarplot_*.png`) and saved as csv (`Experiment_Elevation_Factorimportance.csv`),\n    including, min, max, std deviation across all levels\n-   Computes RMSE between experiment result and ground truth; results\n    saved as csv.\n-   Ranks list of top experiments and their parameters based on RMSE\n-   Computes average and variance of best parameters weighted with RMSE;\n    saved to csv file\n-   An overview plot of all the correlation plots between Y and each\n    factor (`Expresult_distribution_X-Y_*.png`, see function `plot_regression`)\n-   Overview plot of the correlations  between Y and RMSE (`Expresult_distribution_X-RMSE_*.png`,\n    see function `plot_regression`)\n-   Plot of Y values for each pairwise combination of\n    factors (`Y-pairwise-correlation_*.png`, see function `plot_3dmap`), which allows the user to\n    visualise categorical factors\n-   Plot of RMSE value for each pairwise combination of\n    factors (`RMSE-pairwise-correlation_*.png`, see function `plot_3dmap`)\n\n<figure>\n<img src=\"https://github.com/sebhaan/DoEgen/blob/main/figures/Expresult_correlation_X_1.png\" width=\"600\" alt=\"\" /><figcaption>Overview plot of X-Y Correlation for each factor as function of their level values. On top the linear regression coefficient <code>r</code> is shown along the linear regression fit and its uncertainty (line and shadow).</figcaption>\n</figure>\n\n<figure>\n<img src=\"https://github.com/sebhaan/DoEgen/blob/main/figures/Expresult_pairwise-correlation_1.png\" width=\"600\" alt=\"\" /><figcaption>Cornerplot of pairwise factor relation with Y. The color(bar) indicates the value of Y.</figcaption>\n</figure>\n\nUse Case Study\n--------------\n\nHere we demonstrate a typical use case where we would like to first\ngenerate and select an optimal experiment design. Then subsequently\nafter running the experiment we would like to answer the question which\nis the best parameter space and what parameters are important. Our case\nstudy is given by the test example, which consists of 8 factors\n(parameters) that are specified in the experiment setup table\n`Experiment_setup_test.xlsx`.\n\n<figure>\n<img src=\"https://github.com/sebhaan/DoEgen/blob/main/figures/Setup_header_test.png\" width=\"600\" alt=\"\" /><figcaption>Test Experiment Setup Table with 6 discrete and 2 categorical factors. Each factor can have a certain number of levels (values), which are here either 3 or 2</figcaption>\n</figure>\n\nThe first goal is to generate an efficient design with only a fraction\nof the entire parameter combination (in our case the full factorial\nwould be 3<sup>6</sup> × 2<sup>2</sup> = 2916). The maximum number of\nexperiments (in this case we choose 150) is set in the file\n`settings_design_test.yaml`, which also specifies input and output\ndirectory names, as well as the maximum time for optimising one run (in\nthis case 100 seconds per design optimisation). This configuration will\ngenerate and optimize a range of experiments with different design run\nsizes from 12 to 150, in steps of 6 runsizes (since the lowest common\nmultiple of our mix of 2 and 3 factor levels is 6). Note that the user\ncan also choose a different stepsize, which can done by setting the\nvalue in the setting parameter `delta_nrun`. Now we are all setup to\nstart the experiment design generation and optimisation script, which we\ndo by running the script doegen.py with the settings file as argument:\n\n``` bash\n$ cd DoEgen\n$ python -m doegen.doegen test/settings_design_test.yaml\n```\n\nThis will generate for each runsize an optimised design array and a list\nof efficiencies and diagnostic tables and plots (see [Design\nGeneration](#design-generation) for more details). To simplify the\nselection of the generated experiment designs, DoEgen suggests\nautomatically three designs: 1) one minimum design (lowest number of\nruns at given efficiency threshold), 2) one optimal design, and 3) one\nbest design (either equal or has larger experiment run number than\noptimal design). In our case the three design are selected for run\nnumbers 30 (minimum), 72 (optimal), 90 (best). Since the optimal design\nhas basically almost the same efficiencies as the best design (see\nfigure below) but at a lower cost of experiment runs, we choose for our\nexperiment the optimal design, which is given in the table\n`Designtable_optimal_Nrun72.csv`.\n\n<figure>\n<img src=\"https://github.com/sebhaan/DoEgen/blob/main/figures/Results_overview.png\" width=\"600\" alt=\"\" /><figcaption>Result Overview of Experiment Design Generation and the three suggested choices. The most important criteria for a good design are orthogonality (100% means that all factor pairs are 100% orthogonal to each other), level/center balance (100% is best) and two-way interaction balance (100% is best). We also want to make sure that at each pairwise interaction occurs at least one (100% Two-Level Min Efficiency). D-efficiency maximises the determinant of the information matrix <span class=\"math inline\">|<em>X</em><sup><em>T</em></sup><em>X</em>|</span>, which corresponds to minimizing the generalized variance of the parameter estimates for a pre-specified model <span class=\"math inline\"><em>X</em></span>. Here, D1-efficiency defines the model with only the main effects, while D-efficiency includes also all quadratic terms in the model <span class=\"math inline\"><em>X</em></span>. Typically D1-efficiency should be larger than 60%, while D-efficiency only increases if number of experiments is much larger than the number of model terms. In this case study we consider only D1-efficiency given that we want to minimize the number of experiments.</figcaption>\n</figure>\n\n<figure>\n<img src=\"https://github.com/sebhaan/DoEgen/blob/main/figures/Designtable_optimal_Nrun72.png\" width=\"600\" alt=\"\" /><figcaption>Header with first 5 rows of the optimal design with 72 experiments</figcaption>\n</figure>\n\nNow it is time to run the experiment. In our example, we produce just\nsome random data for the 72 experiments with 10 sensor locations (PID 1\nto 10) and one output variable Y (e.g. temperature). To analyse the\nexperiment, the results have to written in a structured table with the\nformat as given in `experiment_results_Nrun72.xlsx` (see description in\nfigure below).\n\n<figure>\n<img src=\"https://github.com/sebhaan/DoEgen/blob/main/figures/Experiment_result_Nrun72_header.png\" width=\"600\" alt=\"\" /><figcaption>Header with first rows of the experiment result table for 72 experiments. Note that the <code>Nexp</code> number has to match the experiment design table <code>Nexp</code>. Each experiment (label <code>Nexp</code>) can have multiple locations or points (identifier# <code>PID</code>), e.g., if experiment is run at different locations simultaneously. In addition, it is possible that one has multiple output Y-variates, labeled with identifier <code>Y :abel</code> (target property that has to be predicted or evaluated, e.g. Rain and Temperature). The column <code>Y Exp</code> holds the experiment result for Y while the column <code>Y Truth</code>holds the ground truth value, which is required to calculate the RMSE and to select best parameter space.</figcaption>\n</figure>\n\nTo run the experiment analysis script, settings such as for input output\ndirectory names are given in the settings file\n`settings_expresults_test.yaml`, and we can now run the analysis script\nwith\n\n``` bash\n$ python -m doegen.doeval test/settings_expresults_test.yaml\n```\n\nThis analysis produces a range of diagnostic tables and result plots for\neach output variable Y (in our case we have only one Y). One of the\nquestion of this example use case is to identify what factors are\nimportant, which is given in the figure `Ybarplot.png`. The “importance”\nbasically indicates how much a factor changes Y (defined by the maximum\naverage change in Y between any levels). This has the advantage to\nidentify also important factors that have either a low linear regression\ncoefficients with Y (see r values in plot `Expresult_correlation_X.png`)\nor are categorical. Such insight can be valuable to determine, e.g.,\nwhich factors should be investigated in more detail in a subsequent\nexperiment or to estiamate which factors have no effect on Y.\n\n<figure>\n<img src=\"https://github.com/sebhaan/DoEgen/blob/main/figures/Ybarplot_1.png\" width=\"600\" alt=\"\" /><figcaption>Factor Importance ranked from maximum to lowest change (range) in Y</figcaption>\n</figure>\n\nAnother important question is what are the best parameter values based\non the obtained experiment results so far? This question can be answered\nby computing the Root-Mean-Square-Error between experiment results and\nground truth (or alternatively the likelihood if the model predictions\ninclude also uncertainties). Table `Experiment_1_RMSE_Top10_sorted.csv`\nprovides an overview of the top 10 experiments sorted as function of\ntheir RMSE. Moroever we can calculate the (RMSE-weighted) average of\neach factor for the top experiments as shown in bar plot below.\n\n<figure>\n<img src=\"figures/Top10.png\" width=\"600\" alt=\"\" /><figcaption>Picture of Table <code>Experiment_1_RMSE_Top10_sorted.csv</code> which shows the factor values of the top 10 experiments based on their RSME values.</figcaption>\n</figure>\n\n<figure>\n<img src=\"https://github.com/sebhaan/DoEgen/blob/main/figures/BestFactor_Avg1.png\" width=\"600\" alt=\"\" /><figcaption>Factor values of the top 10 experiments based on their RSME values. The bar heights indicate the top factor’s average value and the dark lines their standard deviation. Note that the average and their standard deviation are computed with the weights <span class=\"math inline\"><em>R</em><em>M</em><em>S</em><em>E</em><sup> − 2</sup></span>.</figcaption>\n</figure>\n\nFurthermore, multiple other diagnostics plots such as factor-Y\ncorrelation and pairwise correlation maps with RMSE are generated (see [Experiment\nResult Analysis](#experiment-result-analysis) for more details).\n\nComparison to Other DoE Tools\n-----------------------------\n\nThe aim of DoEgen is to provide an open-source tool for researchers to\ncreate optimised designs and a framework for transparent evaluation of\nexperiment designs. Moreover, DoEgen aims to assist the result analysis\nthat may allow the researcher a subsequent factor selection, parameter\nfine-tuning, or model building. The design generation function of DoEgen\nis build upon the excellent package `OApackage` and extends it further\nin terms of design efficiency evaluation, filtering, automation, and\nexperiment analysis. There are multiple other tools available for DoE;\nthe table below provides a brief (preliminary, subjective, and\noversimplified) summary of the main advantages and disadvantages for\neach tool that has been tested. Users are encouraged to test these tools\nthemselves.\n\n| Feature                   |  SAS JMP  |  pyDOE2 | OApackage |   DoEgen   |\n|---------------------------|:---------:|:-------:|:---------:|:----------:|\n| Open-Source               | no (paid) |   yes   |    yes    |     yes    |\n| Design Optimisation Score | very good | limited |    good   |    good    |\n| Optimal Runsize Finder    |     no    |    no   |     no    |     yes    |\n| Design Efficiency Eval    |    yes    |    no   |  limited  |     yes    |\n| Exp Result Analysis       |    yes    |    no   |     no    |     yes    |\n| Development Stage         |  advanced |  early  |  moderate | very early |\n\nLiterature\n----------\n\n[OApackage: A Python package for generation and analysis of orthogonal\narrays, optimal designs and conference\ndesigns](https://doi.org/10.21105/joss.01097), P.T. Eendebak, A.R.\nVazquez, Journal of Open Source Software, 2019\n\n[pyDOE2: An experimental design package for\npython](https://github.com/clicumu/pyDOE2)\n\nDean, A., Morris, M., Stufken, J. and Bingham, D. eds., 2015. Handbook\nof design and analysis of experiments (Vol. 7). CRC Press.\n\nGoos, P. and Jones, B., 2011. Optimal design of experiments: a case\nstudy approach. John Wiley & Sons.\n\nKuhfeld, W.F., 2010. Discrete choice. SAS Technical Papers, 2010,\npp.285-663.\n\nZwerina, K., Huber, J. and Kuhfeld, W.F., 1996. A general method for\nconstructing efficient choice designs. Durham, NC: Fuqua School of\nBusiness, Duke University.\n\nCheong, Y.P. and Gupta, R., 2005. Experimental design and analysis\nmethods for assessing volumetric uncertainties. SPE Journal, 10(03),\npp.324-335.\n\nJMP, A. and Proust, M., 2010. Design of experiments guide. Cary, NC: SAS\nInstitute Inc.\n\nAttribution and Acknowledgments\n-------------------------------\n\nAcknowledgments are an important way for us to demonstrate the value we\nbring to your research. Your research outcomes are vital for ongoing\nfunding of the Sydney Informatics Hub.\n\nIf you make use of this code for your research project, please include\nthe following acknowledgment:\n\n“This research was supported by the Sydney Informatics Hub, a Core\nResearch Facility of the University of Sydney.”\n\nProject Contributors\n--------------------\n\nKey project contributors to the DoEgen project are:\n\n-   Sebastian Haan (Sydney Informatics Hub, University of Sydney): Main\n    contributor and software development of DoEgen.\n-   Christopher Howden (Sydney Informatics Hub, University of Sydney):\n    Statistical consultancy, literature suggestions, and documentation.\n-   Danial Azam (School of Geophysics, University of Sydney): Testing\n    DoEgen on applications for computational geosciences.\n-   Joel Nothman (Sydney Informatics Hub, University of Sydney): Code\n    review and improvements with focus on doegen.py.\n-   Dietmar Muller (School of Geophysics, University of Sydney):\n    Suggesting the need for this project and developing real-world use\n    cases for geoscience research.\n\nDoEgen has benefited from the OApackage library\n[OApackage](https://github.com/eendebakpt/oapackage) for the design\noptimisation code and we would like to thank the researchers who have\nmade their code available as open-source.\n\nLicense\n-------\n\nCopyright 2021 Sebastian Haan, The University of Sydney\n\nDoEgen is free software: you can redistribute it and/or modify it under\nthe terms of the GNU Affero General Public License (AGPL version 3) as\npublished by the Free Software Foundation.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\nGeneral Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with this program (see LICENSE.md). If not, see\n<https://www.gnu.org/licenses/>.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sebhaan/DoEgen",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "DoEgen",
    "package_url": "https://pypi.org/project/DoEgen/",
    "platform": "",
    "project_url": "https://pypi.org/project/DoEgen/",
    "project_urls": {
      "Homepage": "https://github.com/sebhaan/DoEgen"
    },
    "release_url": "https://pypi.org/project/DoEgen/0.4.8/",
    "requires_dist": [
      "numpy (>=1.16.3)",
      "xlrd (==1.2.0)",
      "pandas (>=1.0.3)",
      "XlsxWriter (>=1.2.8)",
      "openpyxl (>=3.0.7)",
      "seaborn (>=0.11.1)",
      "OApackage (==2.6.6)",
      "tabulate (==0.8.7)",
      "matplotlib (>=3.1.0)",
      "PyYAML (>=5.3.1)",
      "scikit-learn (>=0.22.2.post1)"
    ],
    "requires_python": ">=3.6",
    "summary": "DoEgen: A Python Library for Optimised Design of Experiment Generation and Evaluation",
    "version": "0.4.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11011191,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "37a5e9d1a8ab346871d4ed095fc8caaf503fcce5a62c0c28d320f8e892d3bc88",
          "md5": "e4c166fc24efe7bf1a7bc1086c57ee3f",
          "sha256": "d1827cc3bf5af250fdd5d68ac53a67f8ff07681090073003fd60eba4d3f221fc"
        },
        "downloads": -1,
        "filename": "doegen-0.1-py3.7.egg",
        "has_sig": false,
        "md5_digest": "e4c166fc24efe7bf1a7bc1086c57ee3f",
        "packagetype": "bdist_egg",
        "python_version": "3.7",
        "requires_python": ">=3.6",
        "size": 123205,
        "upload_time": "2020-11-18T21:34:15",
        "upload_time_iso_8601": "2020-11-18T21:34:15.545616Z",
        "url": "https://files.pythonhosted.org/packages/37/a5/e9d1a8ab346871d4ed095fc8caaf503fcce5a62c0c28d320f8e892d3bc88/doegen-0.1-py3.7.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "839bf8b8eac0ebe855505ecc41fce45a1cceabbe017edbd436f85d866eca9976",
          "md5": "c4760bb939306ab0ea86e312a72f72cf",
          "sha256": "4a54495a4c55887682957fabf0d5729453d3df0eda8b63d95a5ce7c178aa3aea"
        },
        "downloads": -1,
        "filename": "DoEgen-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c4760bb939306ab0ea86e312a72f72cf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 103230,
        "upload_time": "2020-11-26T04:56:56",
        "upload_time_iso_8601": "2020-11-26T04:56:56.624320Z",
        "url": "https://files.pythonhosted.org/packages/83/9b/f8b8eac0ebe855505ecc41fce45a1cceabbe017edbd436f85d866eca9976/DoEgen-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "be790616e53a6fc3a97f090358df35c49cd1af396dbb00762094435545fad837",
          "md5": "bec74be7d2d27ef6970874b810b7c22e",
          "sha256": "533fec6d7f9f368ab34cfcb180cfac8b30bb4d358baf3ef71798c18aa9d59165"
        },
        "downloads": -1,
        "filename": "DoEgen-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "bec74be7d2d27ef6970874b810b7c22e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 92589,
        "upload_time": "2020-11-26T04:56:58",
        "upload_time_iso_8601": "2020-11-26T04:56:58.298728Z",
        "url": "https://files.pythonhosted.org/packages/be/79/0616e53a6fc3a97f090358df35c49cd1af396dbb00762094435545fad837/DoEgen-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1fca6d6897b96c2486e572f25dcb673c3fc97dfad1458e3f719ac43081bd0658",
          "md5": "ec8385b8b7f9fec0d1a9c95fd7beed27",
          "sha256": "e9d6f2bce379c525fb87fe5a2d56f1636c5227dfab591a5cde91790d2ac1f996"
        },
        "downloads": -1,
        "filename": "DoEgen-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ec8385b8b7f9fec0d1a9c95fd7beed27",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 118287,
        "upload_time": "2021-03-02T00:38:39",
        "upload_time_iso_8601": "2021-03-02T00:38:39.923572Z",
        "url": "https://files.pythonhosted.org/packages/1f/ca/6d6897b96c2486e572f25dcb673c3fc97dfad1458e3f719ac43081bd0658/DoEgen-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "346dada8c3478197ea224a42d315341ae7b374c63ae92359c2032dcf3448aaad",
          "md5": "a62e28c32aa14db50de43e10324ee4ab",
          "sha256": "bf05ffb3dc393a010b813542151f8c7d04a3820a8b78a6c6e2d07d2acc325e65"
        },
        "downloads": -1,
        "filename": "DoEgen-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a62e28c32aa14db50de43e10324ee4ab",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 103158,
        "upload_time": "2021-03-02T00:38:41",
        "upload_time_iso_8601": "2021-03-02T00:38:41.527255Z",
        "url": "https://files.pythonhosted.org/packages/34/6d/ada8c3478197ea224a42d315341ae7b374c63ae92359c2032dcf3448aaad/DoEgen-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "566ff4303aa78de1c2ae87418356984e22b65fc2fd9638cae5e1dc39df03856b",
          "md5": "0131848d478c45cd430c80b2407854eb",
          "sha256": "9d2ab5d032df1086c79f10d4c241b3460ece4ff0413d6b3c03c4c2b6c817ed2f"
        },
        "downloads": -1,
        "filename": "DoEgen-0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0131848d478c45cd430c80b2407854eb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 104503,
        "upload_time": "2021-03-30T04:26:38",
        "upload_time_iso_8601": "2021-03-30T04:26:38.683035Z",
        "url": "https://files.pythonhosted.org/packages/56/6f/f4303aa78de1c2ae87418356984e22b65fc2fd9638cae5e1dc39df03856b/DoEgen-0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4f260609774b48a891930c93a7b4c17a3289e7b3e8971c99ea9934211f3c8cf5",
          "md5": "8d52065879d981c124068b9445eda1d7",
          "sha256": "2b1e56264f19a46aa2c159f04a7a4b3b245ceae59db48f35439dcd85610a6808"
        },
        "downloads": -1,
        "filename": "DoEgen-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "8d52065879d981c124068b9445eda1d7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 93251,
        "upload_time": "2021-03-30T04:26:40",
        "upload_time_iso_8601": "2021-03-30T04:26:40.584663Z",
        "url": "https://files.pythonhosted.org/packages/4f/26/0609774b48a891930c93a7b4c17a3289e7b3e8971c99ea9934211f3c8cf5/DoEgen-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8bdb0f8e0321a3ea7855220ed602ba7aa38c0063dd0b5c5ffd7fe533f4796424",
          "md5": "3cd24cfb7a1e9ac464b59c8e4afd5851",
          "sha256": "8ed992adb7a9539b7b8840dd20b4c4f9934b271f3d754b161c5822d791af5c9a"
        },
        "downloads": -1,
        "filename": "DoEgen-0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3cd24cfb7a1e9ac464b59c8e4afd5851",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 111859,
        "upload_time": "2021-04-14T03:19:30",
        "upload_time_iso_8601": "2021-04-14T03:19:30.677821Z",
        "url": "https://files.pythonhosted.org/packages/8b/db/0f8e0321a3ea7855220ed602ba7aa38c0063dd0b5c5ffd7fe533f4796424/DoEgen-0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0d9eb671c0d6547ad4b3322eb175544607c5a566c0dd2255b086d6faa762b094",
          "md5": "1fadda6c8c920e3c405b77c3253f78fa",
          "sha256": "54dc3ab9fbf712a2eecad14500639c82f192b3d918e3e3c153da30c01747d75b"
        },
        "downloads": -1,
        "filename": "DoEgen-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "1fadda6c8c920e3c405b77c3253f78fa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 95304,
        "upload_time": "2021-04-14T03:19:32",
        "upload_time_iso_8601": "2021-04-14T03:19:32.422889Z",
        "url": "https://files.pythonhosted.org/packages/0d/9e/b671c0d6547ad4b3322eb175544607c5a566c0dd2255b086d6faa762b094/DoEgen-0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a812894f1d1606dafb6b2d53eca431f59cd6238ed7d4e4ef2268d9c9df63c076",
          "md5": "2c420ff58ce58e70c02e1ee9edad4b05",
          "sha256": "deb68a76ec233d426f3e4a689ee2f19df9d1084b81405a686ef28615182a69a3"
        },
        "downloads": -1,
        "filename": "DoEgen-0.4.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2c420ff58ce58e70c02e1ee9edad4b05",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 111900,
        "upload_time": "2021-04-14T03:57:39",
        "upload_time_iso_8601": "2021-04-14T03:57:39.694022Z",
        "url": "https://files.pythonhosted.org/packages/a8/12/894f1d1606dafb6b2d53eca431f59cd6238ed7d4e4ef2268d9c9df63c076/DoEgen-0.4.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "85d16e4478c67507da6b4a40bff1bf8b2196ac2feafbe140e95e4984eb71758e",
          "md5": "272023db5ca6c3dfd0076365aed77438",
          "sha256": "c71097d99c14fa7cdc3a3de251d7ac72e4387d26ce500884980d4e704df9d03c"
        },
        "downloads": -1,
        "filename": "DoEgen-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "272023db5ca6c3dfd0076365aed77438",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 95297,
        "upload_time": "2021-04-14T03:57:41",
        "upload_time_iso_8601": "2021-04-14T03:57:41.808958Z",
        "url": "https://files.pythonhosted.org/packages/85/d1/6e4478c67507da6b4a40bff1bf8b2196ac2feafbe140e95e4984eb71758e/DoEgen-0.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "084a64349a57389c06597fcc4e29f4c8f497f44b15d7e03f6e7cd28216ddc000",
          "md5": "a5b2afce1574121dd4b059ae0e501498",
          "sha256": "1a2ffb7acda9374fd83690c1fff893a1fb5cb47c1a842fdfc7482eed1cd03f0c"
        },
        "downloads": -1,
        "filename": "DoEgen-0.4.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a5b2afce1574121dd4b059ae0e501498",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 111901,
        "upload_time": "2021-04-14T04:04:52",
        "upload_time_iso_8601": "2021-04-14T04:04:52.841793Z",
        "url": "https://files.pythonhosted.org/packages/08/4a/64349a57389c06597fcc4e29f4c8f497f44b15d7e03f6e7cd28216ddc000/DoEgen-0.4.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "29c8b8437d157f53292672f8a8a4ef78520f7f7eb784acf1a52afb6683878c0f",
          "md5": "42dad740618342815721ec67e80b9b5e",
          "sha256": "a0c8fe382404e4a028325993abce5f70f72c4a7159b4f11047b384a5269f59d8"
        },
        "downloads": -1,
        "filename": "DoEgen-0.4.2.tar.gz",
        "has_sig": false,
        "md5_digest": "42dad740618342815721ec67e80b9b5e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 95288,
        "upload_time": "2021-04-14T04:04:54",
        "upload_time_iso_8601": "2021-04-14T04:04:54.888728Z",
        "url": "https://files.pythonhosted.org/packages/29/c8/b8437d157f53292672f8a8a4ef78520f7f7eb784acf1a52afb6683878c0f/DoEgen-0.4.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ea63b8a316c3f49104e6b1f528bd03234a632975bb68bb6cad2333821a8573d",
          "md5": "4b8e5eff4f526c0b2f410fd2403e2279",
          "sha256": "20e9e514f62eb7006da4dc2c91b47cf6145a59b5a1098b36efc4e4881de7f9ab"
        },
        "downloads": -1,
        "filename": "DoEgen-0.4.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4b8e5eff4f526c0b2f410fd2403e2279",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 112122,
        "upload_time": "2021-04-14T12:08:20",
        "upload_time_iso_8601": "2021-04-14T12:08:20.032082Z",
        "url": "https://files.pythonhosted.org/packages/0e/a6/3b8a316c3f49104e6b1f528bd03234a632975bb68bb6cad2333821a8573d/DoEgen-0.4.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4dcfcd42040c14a96111859199badd26b986481e10b85faecb25946daf0ec84c",
          "md5": "e862962e2b6a0f4a51bbde54e9e64c02",
          "sha256": "d42c1f228d6cf3ea6366d524b1b204f4f95bc91ebc2510b6eaa5f38222e49b07"
        },
        "downloads": -1,
        "filename": "DoEgen-0.4.3.tar.gz",
        "has_sig": false,
        "md5_digest": "e862962e2b6a0f4a51bbde54e9e64c02",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 95406,
        "upload_time": "2021-04-14T12:08:21",
        "upload_time_iso_8601": "2021-04-14T12:08:21.958400Z",
        "url": "https://files.pythonhosted.org/packages/4d/cf/cd42040c14a96111859199badd26b986481e10b85faecb25946daf0ec84c/DoEgen-0.4.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3b858705a1946b0e66e77b1d880fd376d2195a861f266ef1b42c8268cc1e33fa",
          "md5": "ebf8cb7c4a6c3763f7f99bbe6b7e4ac0",
          "sha256": "97f5a8831333a6481779338da5b4063921556d095a08eec0b92cd2f50b72d78f"
        },
        "downloads": -1,
        "filename": "DoEgen-0.4.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ebf8cb7c4a6c3763f7f99bbe6b7e4ac0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 112126,
        "upload_time": "2021-05-06T03:49:00",
        "upload_time_iso_8601": "2021-05-06T03:49:00.846780Z",
        "url": "https://files.pythonhosted.org/packages/3b/85/8705a1946b0e66e77b1d880fd376d2195a861f266ef1b42c8268cc1e33fa/DoEgen-0.4.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c68ff5bb25d253de36918146e47990eb633da3c243b8d92d8f7bfcfac64de03c",
          "md5": "1b862cc3c22b721b049632b94f8fef49",
          "sha256": "a01d13baa1c94d5051d13eae25c9f21fb52e790dd24c9f9c238857beab155258"
        },
        "downloads": -1,
        "filename": "DoEgen-0.4.4.tar.gz",
        "has_sig": false,
        "md5_digest": "1b862cc3c22b721b049632b94f8fef49",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 95419,
        "upload_time": "2021-05-06T03:49:04",
        "upload_time_iso_8601": "2021-05-06T03:49:04.334663Z",
        "url": "https://files.pythonhosted.org/packages/c6/8f/f5bb25d253de36918146e47990eb633da3c243b8d92d8f7bfcfac64de03c/DoEgen-0.4.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4d4f54c50e525cdc6310168b44c48b54e3882b7b4a51d1a60b869d953b55aa64",
          "md5": "99123c365322e6dcf8e7ad3fb9973f70",
          "sha256": "422683490520e723bb3054c8031db1c88a9c5059c8a898624876f71b787d19ae"
        },
        "downloads": -1,
        "filename": "DoEgen-0.4.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "99123c365322e6dcf8e7ad3fb9973f70",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 105988,
        "upload_time": "2021-06-08T00:18:37",
        "upload_time_iso_8601": "2021-06-08T00:18:37.702032Z",
        "url": "https://files.pythonhosted.org/packages/4d/4f/54c50e525cdc6310168b44c48b54e3882b7b4a51d1a60b869d953b55aa64/DoEgen-0.4.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "497f4c8523aeec2113d1bc0f8224182580271548e2125f9aca32bdffd688d546",
          "md5": "ad41d08a92e267b2e579366ca4d42bfd",
          "sha256": "ad00bed35e30e9ce8e4336e851ca5af44e7e2bc53f9013197c2310387b4da8d5"
        },
        "downloads": -1,
        "filename": "DoEgen-0.4.5.tar.gz",
        "has_sig": false,
        "md5_digest": "ad41d08a92e267b2e579366ca4d42bfd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 95546,
        "upload_time": "2021-06-08T00:18:44",
        "upload_time_iso_8601": "2021-06-08T00:18:44.661024Z",
        "url": "https://files.pythonhosted.org/packages/49/7f/4c8523aeec2113d1bc0f8224182580271548e2125f9aca32bdffd688d546/DoEgen-0.4.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c35a182ec651ed890e1587784d2c050d9540f537ce80c70a9e9942c640af98a4",
          "md5": "1f3e41683b45865d7805ee99de74ea1e",
          "sha256": "2d12637f4eb1faefce3f963c1447bdce1e1c8497cd884e937c7736307268e912"
        },
        "downloads": -1,
        "filename": "DoEgen-0.4.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1f3e41683b45865d7805ee99de74ea1e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 105999,
        "upload_time": "2021-07-13T04:25:17",
        "upload_time_iso_8601": "2021-07-13T04:25:17.840938Z",
        "url": "https://files.pythonhosted.org/packages/c3/5a/182ec651ed890e1587784d2c050d9540f537ce80c70a9e9942c640af98a4/DoEgen-0.4.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0c25ce833e3b29cb6fba5ad42239d4f7b5d42f9f034f3b3f3015549cbfb69c45",
          "md5": "bff58f628e703ef90d1bdafb8f126fbe",
          "sha256": "ca0866457a8f5cd9ff268921c2c702bb2250cdb087b617f833125924b70d14ef"
        },
        "downloads": -1,
        "filename": "DoEgen-0.4.6.tar.gz",
        "has_sig": false,
        "md5_digest": "bff58f628e703ef90d1bdafb8f126fbe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 95476,
        "upload_time": "2021-07-13T04:25:20",
        "upload_time_iso_8601": "2021-07-13T04:25:20.292807Z",
        "url": "https://files.pythonhosted.org/packages/0c/25/ce833e3b29cb6fba5ad42239d4f7b5d42f9f034f3b3f3015549cbfb69c45/DoEgen-0.4.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f55af3239c5134b88037cfee189f63f8e31aeeac51600b3d34de5be97593b74e",
          "md5": "7777fbd2cc878f784760f3be6fb18fb7",
          "sha256": "51052bb64beec12a6d78367a659ea7e76d21c7d9b8fa9b55fb58b6ba5578d092"
        },
        "downloads": -1,
        "filename": "DoEgen-0.4.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7777fbd2cc878f784760f3be6fb18fb7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 105999,
        "upload_time": "2021-07-13T05:48:10",
        "upload_time_iso_8601": "2021-07-13T05:48:10.221024Z",
        "url": "https://files.pythonhosted.org/packages/f5/5a/f3239c5134b88037cfee189f63f8e31aeeac51600b3d34de5be97593b74e/DoEgen-0.4.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ef47567d518c7b465c6b3010434dbe883e6b354ffb1611fe14a5a6631bbe898",
          "md5": "52c319349e003ffa5e39957b69fa270d",
          "sha256": "91090c1916a9717ec34c1978470b68fa70b75fabef8700834ac64330ef647758"
        },
        "downloads": -1,
        "filename": "DoEgen-0.4.7.tar.gz",
        "has_sig": false,
        "md5_digest": "52c319349e003ffa5e39957b69fa270d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 95486,
        "upload_time": "2021-07-13T05:48:12",
        "upload_time_iso_8601": "2021-07-13T05:48:12.442948Z",
        "url": "https://files.pythonhosted.org/packages/0e/f4/7567d518c7b465c6b3010434dbe883e6b354ffb1611fe14a5a6631bbe898/DoEgen-0.4.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6918ec9e113809176983d71e707ee4985b6635fcc6373efa890bfed5f1cb07f6",
          "md5": "8bcf1f20af4ebb270b7874a961f0ae82",
          "sha256": "9a6b7d8506eb47b705542a6c1712fb8974201c2cc5f9ba0ba8b18b2b7d9b5e7c"
        },
        "downloads": -1,
        "filename": "DoEgen-0.4.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8bcf1f20af4ebb270b7874a961f0ae82",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 106089,
        "upload_time": "2021-07-27T01:43:58",
        "upload_time_iso_8601": "2021-07-27T01:43:58.896169Z",
        "url": "https://files.pythonhosted.org/packages/69/18/ec9e113809176983d71e707ee4985b6635fcc6373efa890bfed5f1cb07f6/DoEgen-0.4.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f6d971ff26b3b8a24ce353466b5e2741687d4635ad7a0db65958271e4e930b58",
          "md5": "2f5f13c1f31f2cb7e7270aa7f6da5ed6",
          "sha256": "0f810907a670f16af2be53763f3ae486c2ad639c209821c3086ec4e2e39878aa"
        },
        "downloads": -1,
        "filename": "DoEgen-0.4.8.tar.gz",
        "has_sig": false,
        "md5_digest": "2f5f13c1f31f2cb7e7270aa7f6da5ed6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 96137,
        "upload_time": "2021-07-27T01:44:01",
        "upload_time_iso_8601": "2021-07-27T01:44:01.360655Z",
        "url": "https://files.pythonhosted.org/packages/f6/d9/71ff26b3b8a24ce353466b5e2741687d4635ad7a0db65958271e4e930b58/DoEgen-0.4.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6918ec9e113809176983d71e707ee4985b6635fcc6373efa890bfed5f1cb07f6",
        "md5": "8bcf1f20af4ebb270b7874a961f0ae82",
        "sha256": "9a6b7d8506eb47b705542a6c1712fb8974201c2cc5f9ba0ba8b18b2b7d9b5e7c"
      },
      "downloads": -1,
      "filename": "DoEgen-0.4.8-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8bcf1f20af4ebb270b7874a961f0ae82",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 106089,
      "upload_time": "2021-07-27T01:43:58",
      "upload_time_iso_8601": "2021-07-27T01:43:58.896169Z",
      "url": "https://files.pythonhosted.org/packages/69/18/ec9e113809176983d71e707ee4985b6635fcc6373efa890bfed5f1cb07f6/DoEgen-0.4.8-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f6d971ff26b3b8a24ce353466b5e2741687d4635ad7a0db65958271e4e930b58",
        "md5": "2f5f13c1f31f2cb7e7270aa7f6da5ed6",
        "sha256": "0f810907a670f16af2be53763f3ae486c2ad639c209821c3086ec4e2e39878aa"
      },
      "downloads": -1,
      "filename": "DoEgen-0.4.8.tar.gz",
      "has_sig": false,
      "md5_digest": "2f5f13c1f31f2cb7e7270aa7f6da5ed6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 96137,
      "upload_time": "2021-07-27T01:44:01",
      "upload_time_iso_8601": "2021-07-27T01:44:01.360655Z",
      "url": "https://files.pythonhosted.org/packages/f6/d9/71ff26b3b8a24ce353466b5e2741687d4635ad7a0db65958271e4e930b58/DoEgen-0.4.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}