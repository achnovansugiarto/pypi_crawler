{
  "info": {
    "author": "Aditya Karan Chhabra",
    "author_email": "aditya0chhabra@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Information Analysis",
      "Topic :: Sociology",
      "Topic :: Text Processing :: Linguistic",
      "Topic :: Utilities"
    ],
    "description": "# iQual\n\n[![MIT license](https://img.shields.io/badge/License-MIT-green.svg)](https://github.com/worldbank/iQual/blob/main/LICENSE.md)\n[![PyPI version](https://badge.fury.io/py/iQual.svg?kill_cache=1)](https://badge.fury.io/py/iQual)\n[![Docs - GitHub.io](https://img.shields.io/static/v1?logo=github&style=flat&color=blue&label=docs&message=iQual)](https://worldbank.github.io/iQual/)\n\nThis repository contains the code and resources necessary to implement the techniques described in the paper [A Method to Scale-Up Interpretative Qualitative Analysis, with an Application to Aspirations in Cox’s Bazaar, Bangladesh](https://documents.worldbank.org/en/publication/documents-reports/documentdetail/099759305162210822/idu0a357362e00b6004c580966006b1c2f2e3996). The `iQual` package is designed for qualitative analysis of open-ended interviews and aims to extend a small set of interpretative human-codes to a much larger set of documents using natural language processing. The package provides a method for assessing the robustness and reliability of this approach. The `iQual` package has been applied to analyze 2,200 open-ended interviews on parent’s aspirations for children from Rohingya refugees and their Bangladeshi hosts in Cox’s Bazaar, Bangladesh. It draws on work in anthropology and philosophy to expand conceptions of aspirations in economics to distinguish between material goals, moral and religious values, and navigational capacity—the ability to achieve goals and aspirations, showing that they have very different correlates. \n\nWith `iQual`, researchers can efficiently analyze large amounts of qualitative data while maintaining the nuance and accuracy of human interpretation.\n\n---\n\n## Installation\n- To install `iQual` using pip, use the following command:\n```sh\npip install -U iQual\n```\n- Alternatively, you can install `iQual` from source. To do so, use the following commands:\n```sh\ngit clone https://github.com/worldbank/iQual.git\ncd iQual\npip install -e .\n```\n---\n\n## Dependencies\n\n`iQual` requires Python 3.7+ and the following dependencies:\n\n> - [pandas](https://pandas.pydata.org/) \n> - [scikit-learn](https://scikit-learn.org/stable/)\n> - [sentence-transformers](https://sbert.net/)\n> - [spaCy](https://spacy.io/)\n> - [numpy](https://numpy.org/)\n> - [umap-learn](https://umap-learn.readthedocs.io/en/latest/)\n> - [scipy](https://www.scipy.org/)\n> - [statsmodels](https://www.statsmodels.org/stable/index.html) \n> - [simplejson](https://simplejson.readthedocs.io/en/latest/)\n> - [matplotlib](https://matplotlib.org/)\n> - [seaborn](https://seaborn.pydata.org/)\n\n---\n\n## Features\n\n`iQual` is a package designed for qualitative analysis of open-ended interviews. It allows researchers to efficiently analyze large amounts of qualitative data while maintaining the nuance and accuracy of human interpretation.\n\n- Customizable pipelines using [scikit-learn](https://scikit-learn.org/stable/modules/classes.html#module-sklearn.pipeline) pipelines\n\n- Text-vectorization using:\n    - Any of the [scikit-learn](https://scikit-learn.org/stable/modules/classes.html#module-sklearn.feature_extraction.text) text feature extraction method.\n    - Any [sentence-transformers](https://sbert.net/) compatible model.\n    - Any [spaCy](https://spacy.io/) model with a `doc.vector` attribute.\n\n- Classification using any [scikit-learn](https://scikit-learn.org/stable/modules/) classification method\n\n- Feature Transformation:\n    - Dimensionality reduction using any [scikit-learn](https://scikit-learn.org/stable/modules/) `decomposition` method, or UMAP using [umap-learn](https://umap-learn.readthedocs.io/en/latest/).\n\n    - Feature scaling using any [scikit-learn](https://scikit-learn.org/stable/modules/) `preprocessing` method.\n- Model selection and performance evaluation using [scikit-learn](https://scikit-learn.org/stable/modules/classes.html#module-sklearn.model_selection) methods.\n- Model performance evaluation using [scikit-learn](https://scikit-learn.org/stable/modules/classes.html#module-sklearn.metrics) metrics.\n- Tests for bias and interpretability, with [statsmodels](https://www.statsmodels.org/stable/index.html).\n\n---\n\n## Basic Usage\n\nThe following code demonstrates the basic usage of the `iQual` package. It shows how to construct a pipeline, fit it to the data, and use it to classify new data.\n\nImport the `iqual` package and initiate the model class.\n\n```python\nfrom iqual import iqualnlp     # Import `iqualnlp` from the `iqual` package\n\niqual_model = iqualnlp.Model() # Initiate the model class\n```\n\nAdd text features to the model. The `add_text_features` method takes the following arguments:\n- `question_col`: The name of the column containing the question text.\n- `answer_col`: The name of the column containing the answer text.\n- `model`: Name of a scikit-learn, spaCy, sentence-transformers, or a precomputed vector (picklized dictionary) model. The default is `TfidfVectorizer`.\n- `env`: The environment or package which is being used. The default is `scikit-learn`. Available options are `scikit-learn`, `spacy`, `sentence-transformers`, and `saved-dict`.\n- `**kwargs`: Additional keyword arguments to pass to the model.\n\n```python\n# Use a scikit-learn feature extraction method\niqual_model.add_text_features(question_col,answer_col,model='TfidfVectorizer',env='scikit-learn') \n\n# OR - Use a sentence-transformers model\niqual_model.add_text_features(question_col,answer_col,model='all-mpnet-base-v2',env='sentence-transformers') \n\n# OR - Use a spaCy model\niqual_model.add_text_features(question_col,answer_col,model='en_core_web_lg',env='spacy') \n\n# OR - Use a precomputed vector (picklized dictionary)\niqual_model.add_text_features(question_col,answer_col,model='qa_precomputed.pkl',env='saved-dict') \n```\n\n***(OPTIONAL)*** Add a feature transformation layer. The `add_feature_transformer` method takes the following arguments:\n- `name`: The name of the feature transformation layer.\n- `transformation`: The type of transformation. Available options are `FeatureScaler` and `DimensionalityReduction`.\n\nTo add a **feature scaling** layer, use the following code:\n```python\niqual_model.add_feature_transformer(name='Normalizer', transformation=\"FeatureScaler\") # or any other scikit-learn scaler\n```\nTo add a **dimensionality reduction** layer, use the following code:\n```python\niqual_model.add_feature_transformer(name='UMAP', transformation=\"DimensionalityReduction\") # supports UMAP or any other scikit-learn decomposition method\n```\nAdd a classifier layer. The `add_classifier` method takes the following arguments:\n- `name`: The name of the classifier layer. The default is `LogisticRegression`. \n- `**kwargs`: Additional keyword arguments to pass to the classifier.\n\n```python\niqual_model.add_classifier(name = \"LogisticRegression\") #  Add a classifier layer from scikit-learn\n```\n***(OPTIONAL)*** Add a threshold layer for the classifier using `add_threshold` \n```python\niqual_model.add_threshold() # Add a threshold layer for the classifier, recommended for imbalanced data\n```\nCompile the model with `compile`.\n```python\niqual_model.compile() # Compile the model\n```\nFit the model to the data using `fit`. The `fit` method takes the following arguments:\n- `X_train`: The training data. (pandas dataframe)\n- `y_train`: The training labels. (pandas series)\n\n```python\niqual_model.fit(X_train,y_train) # Fit the model to the data\n```\n\nPredict the labels for new data using `predict`. The `predict` method takes the following arguments:\n- `X_test`: The test data. (pandas dataframe)\n\n```python\ny_pred = iqual_model.predict(X_test) # Predict the labels for new data\n```\n\nFor examples on cross-validation fitting, model selection & performance evaluation, bias, interpretability and measurement tests, refer to the [notebooks](notebooks) folder.\n\n---\n\n## Notebooks\n\nThe [notebooks](https://github.com/worldbank/iQual/tree/main/notebooks) folder contains detailed examples on using `iQual`. The notebooks are organized into the following categories:\n\n* [Basic Modelling](https://github.com/worldbank/iQual/tree/main/notebooks/basic)\nThese notebooks demonstrates the basic usage of the package, the pipeline construction, and the vectorization and classification options.\n\n* [Advanced Modelling](https://github.com/worldbank/iQual/tree/main/notebooks/advanced) \nThese notebooks demonstrate advanced pipeline construction, mixing and matching of feature extraction and classification methods, and model selection.\n\n* [Interpretability](https://github.com/worldbank/iQual/tree/main/notebooks/interpretability)\nThese notebooks demonstrate the interpretability and related tests for measurement and comparison of interpretability across human and enhanced (machine + human) codes.\n\n* [Bias](https://github.com/worldbank/iQual/tree/main/notebooks/bias) and [Efficiency](https://github.com/worldbank/iQual/tree/main/notebooks/efficiency)\nThese notebooks demonstrate the bias and efficiency tests for determining the value and validity of enhanced codes.\n\n---\n\n## Citation & Authors\nIf you use this package, please cite the following paper:\n\n[A Method to Scale-Up Interpretative Qualitative Analysis, with an Application to Aspirations in Cox’s Bazaar, Bangladesh](https://documents.worldbank.org/en/publication/documents-reports/documentdetail/099759305162210822/idu0a357362e00b6004c580966006b1c2f2e3996)\n\n```\nAshwin,Julian; Rao,Vijayendra; Biradavolu,Monica Rao; Chhabra,Aditya; Haque,Arshia; Khan,Afsana Iffat; Krishnan,Nandini.\nA Method to Scale-Up Interpretative Qualitative Analysis, with an Application to Aspirations in Cox’s Bazaar, Bangladesh (English). (Policy Research Working Paper No. WPS 10046)\nPaper is funded by the Knowledge for Change Program (KCP) Washington, D.C. : World Bank Group.\nhttp://documents.worldbank.org/curated/en/099759305162210822/IDU0a357362e00b6004c580966006b1c2f2e3996\n```\n\n---\n\n\n## Maintainers\n### Please contact the following people for any queries regarding the package:\n\n- [Aditya Karan Chhabra](mailto:aditya0chhabra@gmail.com)\n- [Julian Ashwin](mailto:julianashwin@googlemail.com)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/worldbank/iQual",
    "keywords": "nlp natural-language-processing qualitative-analysis human-coding qualitative-research",
    "license": "MIT",
    "maintainer": "Aditya Karan Chhabra",
    "maintainer_email": "aditya0chhabra@gmail.com",
    "name": "iQual",
    "package_url": "https://pypi.org/project/iQual/",
    "platform": null,
    "project_url": "https://pypi.org/project/iQual/",
    "project_urls": {
      "Homepage": "https://github.com/worldbank/iQual"
    },
    "release_url": "https://pypi.org/project/iQual/0.1.2/",
    "requires_dist": [
      "scikit-learn (>=1.1.0)",
      "sentence-transformers",
      "umap-learn",
      "pandas",
      "numpy",
      "scipy",
      "simplejson",
      "statsmodels",
      "spacy",
      "matplotlib",
      "seaborn"
    ],
    "requires_python": ">=3.7",
    "summary": "iQual is a package that leverages natural language processing to scale up interpretative qualitative analysis. It also provides methods to assess the bias, interpretability and efficiency of the machine-enhanced codes.",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16970887,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a2a445a9708efc8a22d6ae1759f90aecd5def43e07e24ae399d34d21b1d3f8b4",
          "md5": "42233b9d8e1ee5925e48dfc82104cc2b",
          "sha256": "66bfe0c56d3e3a4d1b782ab0d7e3d039aaf3b5937134dbc3872f743454ed3fba"
        },
        "downloads": -1,
        "filename": "iQual-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "42233b9d8e1ee5925e48dfc82104cc2b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 22886,
        "upload_time": "2023-02-18T20:29:03",
        "upload_time_iso_8601": "2023-02-18T20:29:03.589665Z",
        "url": "https://files.pythonhosted.org/packages/a2/a4/45a9708efc8a22d6ae1759f90aecd5def43e07e24ae399d34d21b1d3f8b4/iQual-0.1.0-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": "Major bug, most modules unusable"
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "acf6b0a0add9454b7563cd96026dc8e09154df52265eb00c64144497fe8aa479",
          "md5": "d97a454748365807dc265a5062325cd7",
          "sha256": "64beb900921964bb44757a9832495d8a28826fd29c31761749d67f3e40485593"
        },
        "downloads": -1,
        "filename": "iQual-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d97a454748365807dc265a5062325cd7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 20531,
        "upload_time": "2023-02-18T20:29:05",
        "upload_time_iso_8601": "2023-02-18T20:29:05.406021Z",
        "url": "https://files.pythonhosted.org/packages/ac/f6/b0a0add9454b7563cd96026dc8e09154df52265eb00c64144497fe8aa479/iQual-0.1.0.tar.gz",
        "yanked": true,
        "yanked_reason": "Major bug, most modules unusable"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "009696f0a34514dc0bd81edb57b2d34b6e453b78890acadbeef3eb17df09c1b0",
          "md5": "797c5d87db42be0011dbb500825c41a0",
          "sha256": "73b228a92e6b326825de758255a2d7b4f3babe83e6f5534d413d130a8c05f8f1"
        },
        "downloads": -1,
        "filename": "iQual-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "797c5d87db42be0011dbb500825c41a0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 23124,
        "upload_time": "2023-02-22T02:11:26",
        "upload_time_iso_8601": "2023-02-22T02:11:26.147489Z",
        "url": "https://files.pythonhosted.org/packages/00/96/96f0a34514dc0bd81edb57b2d34b6e453b78890acadbeef3eb17df09c1b0/iQual-0.1.1-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": "Partial upload"
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e7f8996d6067b39e6f7524436eb679ef3f170d740e7b2ce4e261eb5160c30e3d",
          "md5": "c10e5de46aea64c8c1a104abf82a83e1",
          "sha256": "73e24a4072348e98e7fdfd1a0db1996f19de0668dc46b780d0d8994209eaec96"
        },
        "downloads": -1,
        "filename": "iQual-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c10e5de46aea64c8c1a104abf82a83e1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 2240744,
        "upload_time": "2023-02-22T02:09:58",
        "upload_time_iso_8601": "2023-02-22T02:09:58.390034Z",
        "url": "https://files.pythonhosted.org/packages/e7/f8/996d6067b39e6f7524436eb679ef3f170d740e7b2ce4e261eb5160c30e3d/iQual-0.1.1.tar.gz",
        "yanked": true,
        "yanked_reason": "Partial upload"
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b8c2a7317940e0732e8de9f61e91312c9b941dd583642b9fbab49494fc8eff3c",
          "md5": "c0c17a1fb672406564fc186f1fbe3e8e",
          "sha256": "a14e73febf7b027b0800b5e0b12cabe5fbde6e143acf784d871275c78d2b9a65"
        },
        "downloads": -1,
        "filename": "iQual-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c0c17a1fb672406564fc186f1fbe3e8e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 23101,
        "upload_time": "2023-02-22T02:35:47",
        "upload_time_iso_8601": "2023-02-22T02:35:47.382736Z",
        "url": "https://files.pythonhosted.org/packages/b8/c2/a7317940e0732e8de9f61e91312c9b941dd583642b9fbab49494fc8eff3c/iQual-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b8c2a7317940e0732e8de9f61e91312c9b941dd583642b9fbab49494fc8eff3c",
        "md5": "c0c17a1fb672406564fc186f1fbe3e8e",
        "sha256": "a14e73febf7b027b0800b5e0b12cabe5fbde6e143acf784d871275c78d2b9a65"
      },
      "downloads": -1,
      "filename": "iQual-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c0c17a1fb672406564fc186f1fbe3e8e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 23101,
      "upload_time": "2023-02-22T02:35:47",
      "upload_time_iso_8601": "2023-02-22T02:35:47.382736Z",
      "url": "https://files.pythonhosted.org/packages/b8/c2/a7317940e0732e8de9f61e91312c9b941dd583642b9fbab49494fc8eff3c/iQual-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}