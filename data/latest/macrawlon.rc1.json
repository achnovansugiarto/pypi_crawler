{
  "info": {
    "author": "Alexandros Stergiou",
    "author_email": "alexstergiou5@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "<center>\n  <img src=\"images/macralon_iconandtext.png\" alt=\"text\" width=\"400\"/>\n</center>\n\n### (a Multi-processing Audiovisual CRAWLer collectiON)\n\n![supported versions](https://img.shields.io/badge/python-3.x-brightgreen?style=for-the-badge&logo=python) &nbsp;  [![PyPi](https://img.shields.io/badge/pypi-yellow?style=for-the-badge&logo=pypi)](https://twitter.com/intent/tweet?text=macrawlonüç¨&video&and&audio&crawler&url=https://github.com/alexandrosstergiou/macrawlon&hashtags=VideoAudioCrawler) &nbsp; ![Licence](https://img.shields.io/badge/licence-mit-gray?style=for-the-badge) &nbsp; [![Tweet](https://img.shields.io/badge/tweet-white?style=for-the-badge&logo=twitter)](https://twitter.com/intent/tweet?text=macrawlonüç¨&video&and&audio&crawler&url=https://github.com/alexandrosstergiou/macrawlon&hashtags=VideoAudioCrawler)\n\n\n----------------------\nAbout\n----------------------\n\n\nA package for crawling and downloading YouTube videos. As multiple datasets that are introduced only provide the ids of videos without a download script, obtaining the video files may be difficult. This project aims to provide a general solution is such cases by downloading either the video or audio from ids specified by a dataset. It also aims to speed up processing though enabling multiple threads to run in parallel. The video resolution is user set in order to speed-up downloading and to limit the on-disk dataset size.\n\nCurrently only video-only or audio-only files are downloaded (the next update/version will allow to also download videos with audio).\n\n----\nPackage Requirements\n----\nThis is the list of the required packages:\n- `pandas`\n- `pafy`\n- `ffmpeg`\n- `youtube-dl`\n- `tqdm`\n\nThey can all be downloaded with:\n```\n$ pip install pandas pafy tqdm\n```\n\n---\nCSV Dataset file\n---\n\nThe package assumes that the following headers are included in the `.csv` file that includes the YouTube ids:\n\n| youtube_id | start | end (or) duration |\n| ---------- | ------| ------------------|\n\nThe name of the headers do not need to match exactly but the data needs to include the id, start time end time or duration.\n\n\n---\nUsage\n---\n\nThe main function used to download files is called `download()` as is located at the `youtube_audio_and_video_downloader.py`. You can simply call it by first importing it:\n```python\nfrom macrawlon import download\n#or\nfrom youtube_audio_and_video_downloader import download\n\ndownload(\n  csv_dir=my_csv_dir,\n  download_dir=my_down_dir,\n  modality='video',\n  resolutions=my_res_list,\n  id_idx = 0,\n  start_idx = 1,\n  end_idx = None,\n  duration=10,\n  workers=5\n  )\n\n```\n\nThe function takes the following arguments:\n\n| Argument | About |\n| ---- | ---- |\n| `csv_dir` | directory for the dataset `.csv` file. |\n| `download_dir` | directory for the location to download |\n| `modality` | video modality to download, can choose `audio`, `video`, `audio-video` for separate audio and video files or `audio+video` for video files with audio. |\n| `resolutions` | (optional) list of resolution qualities, with the first list elements being the preferred options. |\n| `id_idx` | (optional) The column index in the csv file that contains the youtube video ids. E.g. if `0` then the first column of the csv should have the youtube video ids.|\n| `start_idx` | (optional) The index for the starting location (in secs.) in the video.|\n| `end_idx` | (optional) The index for the ending location (in secs.) in the video.|\n| `duration` | (optional) The duration (in secs.) of the video. To be used if `end_idx` is not specified.|\n| `workers` | (optional) The number of sub-processes to run.|\n\n\n-------------------------\nInstallation through git\n-------------------------\n\nPlease make sure, Git is installed in your machine:\n```\n$ sudo apt-get update\n$ sudo apt-get install git\n$ git clone https://github.com/macrawlon/macrawlon.git\n$ cd macrawlon\n$ pip install .\n```\n\nYou can then use it as any other package installed through pip.\n\n-------------------------\nInstallation through pip\n-------------------------\n\nThe latest stable release is also available for download through pip\n```\n$ pip install macrawlon\n```\n\n\n-------------------------\nLicence\n-------------------------\nMIT\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/alexandrosstergiou/macrawlon",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "macrawlon",
    "package_url": "https://pypi.org/project/macrawlon/",
    "platform": null,
    "project_url": "https://pypi.org/project/macrawlon/",
    "project_urls": {
      "Homepage": "https://github.com/alexandrosstergiou/macrawlon"
    },
    "release_url": "https://pypi.org/project/macrawlon/0.1/",
    "requires_dist": [
      "pandas",
      "youtube-dl",
      "pafy",
      "tqdm"
    ],
    "requires_python": "",
    "summary": "A sweet little collection of handy functions for video file downloading. üìº",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13791337,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3b4bbf10c5f2911f382e810ac01352aa2f8c6e1d846bcce94aad3b785736cf3c",
          "md5": "f50f484a549698d2701495a70a951d55",
          "sha256": "8bd9909df3bad5ee5dff9b2a9fe8abf8a9c3d2e1f82c01d490898b300517c25d"
        },
        "downloads": -1,
        "filename": "macrawlon-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f50f484a549698d2701495a70a951d55",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7438,
        "upload_time": "2022-05-12T08:52:03",
        "upload_time_iso_8601": "2022-05-12T08:52:03.190466Z",
        "url": "https://files.pythonhosted.org/packages/3b/4b/bf10c5f2911f382e810ac01352aa2f8c6e1d846bcce94aad3b785736cf3c/macrawlon-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0b9fdd645e4b72eafff98952c6da8cdfdc6b220afeb0ad8d3201cf2417099249",
          "md5": "2587e8ca324a82ca62486b9ae73d819a",
          "sha256": "2c9a2cea60ddeb5bed4a0cba4e288b904d0bcf1632ea792530dc22683c4d669f"
        },
        "downloads": -1,
        "filename": "macrawlon-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2587e8ca324a82ca62486b9ae73d819a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6968,
        "upload_time": "2022-05-12T08:52:05",
        "upload_time_iso_8601": "2022-05-12T08:52:05.111226Z",
        "url": "https://files.pythonhosted.org/packages/0b/9f/dd645e4b72eafff98952c6da8cdfdc6b220afeb0ad8d3201cf2417099249/macrawlon-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3b4bbf10c5f2911f382e810ac01352aa2f8c6e1d846bcce94aad3b785736cf3c",
        "md5": "f50f484a549698d2701495a70a951d55",
        "sha256": "8bd9909df3bad5ee5dff9b2a9fe8abf8a9c3d2e1f82c01d490898b300517c25d"
      },
      "downloads": -1,
      "filename": "macrawlon-0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f50f484a549698d2701495a70a951d55",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 7438,
      "upload_time": "2022-05-12T08:52:03",
      "upload_time_iso_8601": "2022-05-12T08:52:03.190466Z",
      "url": "https://files.pythonhosted.org/packages/3b/4b/bf10c5f2911f382e810ac01352aa2f8c6e1d846bcce94aad3b785736cf3c/macrawlon-0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0b9fdd645e4b72eafff98952c6da8cdfdc6b220afeb0ad8d3201cf2417099249",
        "md5": "2587e8ca324a82ca62486b9ae73d819a",
        "sha256": "2c9a2cea60ddeb5bed4a0cba4e288b904d0bcf1632ea792530dc22683c4d669f"
      },
      "downloads": -1,
      "filename": "macrawlon-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "2587e8ca324a82ca62486b9ae73d819a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6968,
      "upload_time": "2022-05-12T08:52:05",
      "upload_time_iso_8601": "2022-05-12T08:52:05.111226Z",
      "url": "https://files.pythonhosted.org/packages/0b/9f/dd645e4b72eafff98952c6da8cdfdc6b220afeb0ad8d3201cf2417099249/macrawlon-0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}