{
  "info": {
    "author": "WISE-PaaS/AFS",
    "author_email": "stacy.yeh@advantech.com.tw",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# AFS2-DataSource SDK\nThe AFS2-DataSource SDK package allows developers to easily access PostgreSQL, MongoDB, InfluxDB, S3 and APM.\n\n## Installation\nSupport Python version 3.6 or later\n```\npip install afs2-datasource\n```\n\n## Development\n```\npip install -e .\n```\n\n## Notice\nAFS2-DataSource SDK uses `asyncio` package, and Jupyter kernel is also using `asyncio` and running an event loop, but these loops can't be nested.\n(https://github.com/jupyter/notebook/issues/3397)\n\nIf using AFS2-DataSource SDK in Jupyter Notebook, please add the following codes to resolve this issue:\n```python\n!pip install nest_asyncio\nimport nest_asyncio\nnest_asyncio.apply()\n```\n\n## API\n### DBManager\n+ <a href=\"#init\"><code>Init DBManager</code></a>\n+ <a href=\"#connect\"><code>DBManager.<b>connect()</b></code></a>\n+ <a href=\"#disconnect\"><code>DBManager.<b>disconnect()</b></code></a>\n+ <a href=\"#is_connected\"><code>DBManager.<b>is_connected()</b></code></a>\n+ <a href=\"#is_connecting\"><code>DBManager.<b>is_connecting()</b></code></a>\n+ <a href=\"#get_dbtype\"><code>DBManager.<b>get_dbtype()</b></code></a>\n+ <a href=\"#get_query\"><code>DBManager.<b>get_query()</b></code></a>\n+ <a href=\"#execute_query\"><code>DBManager.<b>execute_query()</b></code></a>\n+ <a href=\"#create_table\"><code>DBManager.<b>create_table(table_name, columns)</b></code></a>\n+ <a href=\"#is_table_exist\"><code>DBManager.<b>is_table_exist(table_name)</b></code></a>\n+ <a href=\"#is_file_exist\"><code>DBManager.<b>is_file_exist(table_name, file_name)</b></code></a>\n+ <a href=\"#insert\"><code>DBManager.<b>insert(table_name, columns, records, source, destination)</b></code></a>\n+ <a href=\"#delete_table\"><code>DBManager.<b>delete_table(table_name)</b></code></a>\n+ <a href=\"#delete_record\"><code>DBManager.<b>delete_record(table_name, file_name, condition)</b></code></a>\n----\n<a name=\"init\"></a>\n#### Init DBManager\n<!--##### With Enviroment Variable\nDatabase config from environment variable.\n\nExport database config on command line.\n```base\nexport PAI_DATA_DIR=\"{\"type\": \"mongo-firehose\",\"data\": {querySql\": \"{QUERY_STRING}\",\"collection\": \"{COLLECTION_NAME}\",\"credential\": {\"username\": \"{DB_USERNAME}\",\"password\": \"{DB_PASSWORD}\",\"database\": \"{DB_NAME}\",\"port\": {DB_PORT},\"host\": \"{DB_HOST}\"}}}\"\n\nexport PAI_DATA_DIR=\"{\"type\": \"s3-firehose\", \"data\": {\"bucketName\": \"{BUCKET_NAME}\", \"blobList\": [\"{FILE_NAME}\"], \"credential\": {\"endpoint\\\": \"{ENDPOINT}\", \"accessKey\": \"{ACESSKEY}\", \"secretKey\": \"{SECRETKEY}\"}}}\"\n\n```-->\n##### With Database Config\nImport database config via Python.\n```python\nfrom afs2datasource import DBManager, constant\n\n# For MySQL\nmanager = DBManager(db_type=constant.DB_TYPE['MYSQL'],\n  username=username,\n  password=password,\n  host=host,\n  port=port,\n  database=database,\n  querySql=\"select {field} from {table}\"\n)\n\n# For SQLServer\nmanager = DBManager(db_type=constant.DB_TYPE['SQLSERVER'],\n  username=username,\n  password=password,\n  host=host,\n  port=port,\n  database=database,\n  querySql=\"select {field} from {table}\"  # only support `SELECT`\n)\n\n# For PostgreSQL\nmanager = DBManager(db_type=constant.DB_TYPE['POSTGRES'],\n  username=username,\n  password=password,\n  host=host,\n  port=port,\n  database=database,\n  querySql=\"select {field} from {schema}.{table}\"\n)\n\n# For MongoDB\nmanager = DBManager(db_type=constant.DB_TYPE['MONGODB'],\n  username=username,\n  password=password,\n  host=host,\n  port=port,\n  database=database,\n  collection=collection,\n  querySql=\"{}\"\n)\n\n# For InfluxDB\nmanager = DBManager(db_type=constant.DB_TYPE['INFLUXDB'],\n  username=username,\n  password=password,\n  host=host,\n  port=port,\n  database=database,\n  querySql=\"select {field_key} from {measurement_name}\"\n)\n\n# For Oracle Database\nmanager = DBManagerdb_type=constant.DB_TYPE['ORACLEDB'],\n  username=username,\n  password=password,\n  host=host,\n  port=port,\n  database=database,\n  querySql=\"select {field_key} from {measurement_name}\" # only support `SELECT`\n)\n\n# For S3\nmanager = DBManager(db_type=constant.DB_TYPE['S3'],\n  endpoint=endpoint,\n  access_key=access_key,\n  secret_key=secret_key,\n  is_verify=False,\n  buckets=[{\n    'bucket': 'bucket_name',\n    'blobs': {\n      'files': ['file_name'],\n      'folders': ['folder_name']\n    }\n  }]\n)\n\n# For AWS S3\nmanager = DBManager(db_type=constant.DB_TYPE['AWS'],\n  access_key=access_key,\n  secret_key=secret_key,\n  buckets=[{\n    'bucket': 'bucket_name',\n    'blobs': {\n      'files': ['file_name'],\n      'folders': ['folder_name']\n    }\n  }]\n)\n\n# For APM\nmanager = DBManager(db_type=constant.DB_TYPE['APM'],\n  username=username,  # sso username\n  password=password,  # sso password\n  apmUrl=apmUrl,\n  apm_config=[{\n    'name': name  # dataset name\n    'machines': [{\n      'id': machine_id  # node_id in APM\n    }],\n    'parameters': [\n      parameter1,      # parameter in APM\n      parameter2\n    ]\n  }],\n  mongouri=mongouri,\n  # timeRange or timeLast\n  timeRange=[{'start': start_ts, 'end': end_ts}],\n  timeLast={'lastDays': lastDay, 'lastHours': lastHour, 'lastMins': lastMin}\n)\n\n# For Azure Blob\nmanager = DBManager(db_type=constant.DB_TYPE['AZUREBLOB'],\n  account_name=account_name,\n  account_key=account_key,\n  containers=[{\n    'container': container_name,\n    'blobs': {\n      'files': ['file_name']\n      'folders': ['folder_name']\n    }\n  }]\n)\n\n# For DataHub\nmanager = DBManager(db_type=constant.DB_TYPE['DATAHUB'],\n  username=username,  # sso username\n  password=password,  # sso password\n  datahub_url=datahub_url,\n  datahub_config=[{\n    \"name\": \"string\", # dataset name\n    \"project_id\": \"project_id\",\n    \"node_id\": \"node_id\",\n    \"device_id\": \"device_id\",\n    \"tags\": [\n      \"tag_name\"\n    ]\n  }],\n  uri=mongouri, # mongouri or influxuri\n  # timeRange or timeLast\n  timeRange=[{'start': start_ts, 'end': end_ts}],\n  timeLast={'lastDays': lastDay, 'lastHours': lastHour, 'lastMins': lastMin}\n)\n```\n##### How to get APM machine id and parameters\n![](https://github.com/stacy0416/afs2-datasource/blob/master/apm_document.jpg?raw=true)\n\n##### How to get DataHub project id, node id, device id and tag\n![](https://github.com/stacy0416/afs2-datasource/blob/master/datahub.gif?raw=true)\n\n----\n<a name=\"connect\"></a>\n#### DBManager.connect()\nConnect to MySQL, PostgreSQL, MongoDB, InfluxDB, S3, APM with specified by the given config.\n```python\nmanager.connect()\n```\n----\n<a name=\"disconnect\"></a>\n#### DBManager.disconnect()\nClose the connection.\nNote S3 datasource not support this function.\n```python\nmanager.disconnect()\n```\n----\n<a name=\"is_connected\"></a>\n#### DBManager.is_connected()\nReturn if the connection is connected.\n```python\nmanager.is_connected()\n```\n----\n<a name=\"is_connecting\"></a>\n#### DBManager.is_connecting()\nReturn if the connection is connecting.\n```python\nmanager.is_connecting()\n```\n----\n<a name=\"get_dbtype\"></a>\n#### DBManager.get_dbtype()\nReturn database type of the connection.\n```python\nmanager.get_dbtype()\n# Return: str\n```\n----\n<a name=\"get_query\"></a>\n#### DBManager.get_query()\nReturn query in the config.\n```python\nmanager.get_query()\n\n# MySQL, Oracle Database\n# Return type: String\n\"\"\"\nselect {field} from {table} {condition}\n\"\"\"\n\n# PostgreSQL\n# Return type: String\n\"\"\"\nselect {field} from {schema}.{table}\n\"\"\"\n\n# MongoDB\n# Return type: String\n\"\"\"\n{\"{key}\": {value}}\n\"\"\"\n\n# InfluxDB\n# Return type: String\n\"\"\"\nselect {field_key} from {measurement_name}\n\"\"\"\n\n# S3\n# Return type: List\n\"\"\"\n[{\n  'bucket': 'bucket_name',\n  'blobs': {\n    'files': ['file_name'],\n    'folders': ['folder_name']\n  }\n}]\n\"\"\"\n\n# Azure Blob\n# Return type: List\n\"\"\"\n[{\n  'container': container_name,\n  'blobs': {\n    'files': ['file_name']\n    'folders': ['folder_name']\n  }\n}]\n\"\"\"\n\n# APM\n# Return type: Dict\n\"\"\"\n{\n  'apm_config': [{\n    'name': name  # dataset name\n    'machines': [{\n      'id': machine_id  # node_id in APM\n    }],\n    'parameters': [\n      parameter1,      # parameter in APM\n      parameter2\n    ]\n  }],\n  'time_range': [{'start': start_ts, 'end': end_ts}],\n  'time_last': {'lastDays': lastDay, 'lastHours': lastHour, 'lastMins': lastMin}\n}\n\"\"\"\n\n# DataHub\n# Return type: Dict\n\"\"\"\n{\n  'config': [{\n    \"name\": \"string\", # dataset name\n    \"project_id\": \"project_id\",\n    \"node_id\": \"node_id\",\n    \"device_id\": \"device_id\",\n    \"tags\": [\n      \"tag_name\"\n    ]\n  }],\n  'time_range': [{'start': start_ts, 'end': end_ts}],\n  'time_last': {'lastDays': lastDay, 'lastHours': lastHour, 'lastMins': lastMin}\n}\n\"\"\"\n```\n----\n<a name=\"execute_query\"></a>\n#### DBManager.execute_query(querySql=None)\nReturn the result in MySQL, PostgreSQL, MongoDB or InfluxDB after executing the `querySql` in config or `querySql` parameter.\n\nDownload files which are specified in `buckets` in S3 config or `containers` in Azure Blob config, and return `buckets` and `containers` name of the array.\nIf only download one csv file, then return `dataframe`.\n\nReturn dataframe of list which  of `Machine` and `Parameter` in `timeRange` or `timeLast` from APM.\nReturn dataframe of list which  of `Tag` in `timeRange` or `timeLast` from DataHub.\n\n```python\n# For MySQL, Postgres, MongoDB, InfluxDB, Oracle Database, APM and DataHub\ndf = manager.execute_query()\n# Return type: DataFrame\n\"\"\"\n      Age  Cabin  Embarked      Fare  ...  Sex  Survived  Ticket_info  Title2\n0    22.0    7.0       2.0    7.2500  ...  1.0       0.0          2.0     2.0\n1    38.0    2.0       0.0   71.2833  ...  0.0       1.0         14.0     3.0\n2    26.0    7.0       2.0    7.9250  ...  0.0       1.0         31.0     1.0\n3    35.0    2.0       2.0   53.1000  ...  0.0       1.0         36.0     3.0\n4    35.0    7.0       2.0    8.0500  ...  1.0       0.0         36.0     2.0\n...\n\"\"\"\n\n# For Azure Blob\ncontainer_names = manager.execute_query()\n# Return Array\n# Return type: DataFrame\n\"\"\"\n['container1', 'container2']\n\"\"\"\n# or Return type: DataFrame\n\"\"\"\n      Age  Cabin  Embarked      Fare  ...  Sex  Survived  Ticket_info  Title2\n0    22.0    7.0       2.0    7.2500  ...  1.0       0.0          2.0     2.0\n1    38.0    2.0       0.0   71.2833  ...  0.0       1.0         14.0     3.0\n2    26.0    7.0       2.0    7.9250  ...  0.0       1.0         31.0     1.0\n3    35.0    2.0       2.0   53.1000  ...  0.0       1.0         36.0     3.0\n4    35.0    7.0       2.0    8.0500  ...  1.0       0.0         36.0     2.0\n...\n\"\"\"\n\n\n# For S3\nbucket_names = manager.execute_query()\n# Return Array\n\"\"\"\n['bucket1', 'bucket2']\n\"\"\"\n# or Return type: DataFrame\n\"\"\"\n      Age  Cabin  Embarked      Fare  ...  Sex  Survived  Ticket_info  Title2\n0    22.0    7.0       2.0    7.2500  ...  1.0       0.0          2.0     2.0\n1    38.0    2.0       0.0   71.2833  ...  0.0       1.0         14.0     3.0\n2    26.0    7.0       2.0    7.9250  ...  0.0       1.0         31.0     1.0\n3    35.0    2.0       2.0   53.1000  ...  0.0       1.0         36.0     3.0\n4    35.0    7.0       2.0    8.0500  ...  1.0       0.0         36.0     2.0\n...\n\"\"\"\n\n```\n----\n<a name=\"create_table\"></a>\n#### DBManager.create_table(table_name, columns=[])\nCreate table in database for MySQL, Postgres, MongoDB and InfluxDB.\nNoted, to create a new measurement in influxdb simply insert data into the measurement.\n\nCreate Bucket/Container in S3/Azure Blob.\n\nNote: PostgreSQL table_name format **schema.table**\n```python\n# For MySQL, Postgres, MongoDB and InfluxDB\ntable_name = 'titanic'\ncolumns = [\n  {'name': 'index', 'type': 'INTEGER', 'is_primary': True},\n  {'name': 'survived', 'type': 'FLOAT', 'is_not_null': True},\n  {'name': 'age', 'type': 'FLOAT'},\n  {'name': 'embarked', 'type': 'INTEGER'}\n]\nmanager.create_table(table_name=table_name, columns=columns)\n\n# For S3\nbucket_name = 'bucket'\nmanager.create_table(table_name=bucket_name)\n\n# For Azure Blob\ncontainer_name = 'container'\nmanager.create_table(table_name=container_name)\n```\n----\n<a name=\"is_table_exist\"></a>\n#### DBManager.is_table_exist(table_name)\nReturn if the table exists in MySQL, Postgres, MongoDB or Influxdb.\n\nReturn if the bucket exists in S3.\n\nReturn if the container exists in Azure Blob.\n\n```python\n# For Postgres, MongoDB and InfluxDB\ntable_name = 'titanic'\nmanager.is_table_exist(table_name=table_name)\n\n# For S3\nbucket_name = 'bucket'\nmanager.is_table_exist(table_name=bucket_name)\n\n# For Azure blob\ncontainer_name = 'container'\nmanager.is_table_exist(table_name=container_name)\n```\n----\n<a name=\"is_file_exist\"></a>\n#### DBManager.is_file_exist(table_name, file_name)\nReturn if the file exists in the bucket in S3 & AWS S3.\n\nNote this function only support S3 and AWS S3.\n```python\n# For S3 & AWS S3\nbucket_name = 'bucket'\nfile_name = 'test.csv\nmanager.is_file_exist(table_name=bucket_name, file_name=file_name)\n# Return: Boolean\n```\n----\n<a name=\"insert\"></a>\n#### DBManager.insert(table_name, columns=[], records=[], source='', destination='')\nInsert records into table in MySQL, Postgres, MongoDB or InfluxDB.\n\nUpload file to S3 and Azure Blob.\n\n```python\n# For MySQL, Postgres, MongoDB and InfluxDB\ntable_name = 'titanic'\ncolumns = ['index', 'survived', 'age', 'embarked']\nrecords = [\n  [0, 1, 22.0, 7.0],\n  [1, 1, 2.0, 0.0],\n  [2, 0, 26.0, 7.0]\n]\nmanager.insert(table_name=table_name, columns=columns, records=records)\n\n# For S3\nbucket_name = 'bucket'\nsource='test.csv' # local file path\ndestination='test_s3.csv' # the file path and name in s3\nmanager.insert(table_name=bucket_name, source=source, destination=destination)\n\n# For Azure Blob\ncontainer_name = 'container'\nsource='test.csv' # local file path\ndestination='test_s3.csv' # the file path and name in Azure blob\nmanager.insert(table_name=container_name, source=source, destination=destination)\n```\n---\n#### Use APM data source\n* Get Hist Raw data from SCADA Mongo data base\n* Required\n  - username: APM SSO username\n  - password: APM SSO password\n  - mongouri: mongo data base uri\n  - apmurl: APM api url\n  - apm_config: APM config (**type:Array**)\n    - name: dataset name\n    - machines: APM machine list (**type:Array**)\n      - id: APM machine Id\n    - parameters: APM parameter name list (**type:Array**)\n  - time range: Training date range\n    * example:\n    ```json\n    [{'start':'2019-05-01', 'end':'2019-05-31'}]\n    ```\n  - time last: Training date range\n    * example:\n    ```json\n    {'lastDays:' 1, 'lastHours': 2, 'lastMins': 3}\n    ```\n----\n<a name=\"delete_table\"></a>\n#### DBManager.delete_table(table_name)\nDelete table in MySQL, Postgres, MongoDB or InfluxDB, and return if the table is deleted successfully.\n\nDelete the bucket in S3 and return if the table is deleted successfully.\n\nDelete the container in Azure Blob and return if the table is deleted successfully.\n\n```python\n# For Postgres, MongoDB or InfluxDB\ntable_name = 'titanic'\nis_success = manager.delete_table(table_name=table_name)\n# Return: Boolean\n\n# For S3\nbucket_name = 'bucket'\nis_success = manager.delete_table(table_name=bucket_name)\n# Return: Boolean\n\n# For Azure Blob\ncontainer_name = 'container'\nis_success = manager.delete_table(table_name=container_name)\n# Return: Boolean\n```\n----\n<a name=\"delete_record\"></a>\n#### DBManager.delete_record(table_name, file_name, condition)\nDelete record with `condition` in `table_name` in MySQL, Postgres and MongoDB, and return if delete successfully.\n\nDelete file in bucket in S3 and in container in Azure Blob,  and return if the file is deleted successfully.\n\nNote Influx not support this function.\n\n```python\n# For MySQL, Postgres\ntable_name = 'titanic'\ncondition = 'passenger_id = 1'\nis_success = manager.delete_record(table_name=table_name, condition=condition)\n# Return: Boolean\n\n# For MongoDB\ntable_name = 'titanic'\ncondition = {'passanger_id': 1}\nis_success = manager.delete_record(table_name=table_name, condition=condition)\n# Return: Boolean\n\n# For S3\nbucket_name = 'bucket'\nfile_name = 'data/titanic.csv'\nis_success = manager.delete_record(table_name=bucket_name, file_name=file_name)\n# Return: Boolean\n\n# For Azure Blob\ncontainer_name = 'container'\nfile_name = 'data/titanic.csv'\nis_success = manager.delete_record(table_name=container_name,file_name=file_name)\n# Return: Boolean\n```\n---\n# Example\n\n## MongoDB Example\n\n```python\nfrom afs2datasource import DBManager, constant\n\n# Init DBManager\nmanager = DBManager(\n db_type=constant.DB_TYPE['MONGODB'],\n username={USERNAME},\n password={PASSWORD},\n host={HOST},\n port={PORT},\n database={DATABASE},\n collection={COLLECTION},\n querySql={QUERYSQL}\n)\n\n## Mongo query ISODate Example\nQUERYSQL = \"{\\\"ts\\\": {\\\"$lte\\\": ISODate(\\\"2020-09-26T02:53:00Z\\\")}}\"\nQUERYSQL = {'ts': {'$lte': datetime.datetime(2020,9,26,2,53,0)}}\n\n# Connect DB\nmanager.connect()\n\n# Check the status of connection\nis_connected = manager.is_connected()\n# Return type: boolean\n\n# Check is the table is exist\ntable_name = 'titanic'\nmanager.is_table_exist(table_name)\n# Return type: boolean\n\n# Create Table\ncolumns = [\n  {'name': 'index', 'type': 'INTEGER', 'is_not_null': True},\n  {'name': 'survived', 'type': 'INTEGER'},\n  {'name': 'age', 'type': 'FLOAT'},\n  {'name': 'embarked', 'type': 'INTEGER'}\n]\nmanager.create_table(table_name=table_name, columns=columns)\n\n# Insert Record\ncolumns = ['index', 'survived', 'age', 'embarked']\nrecords = [\n  [0, 1, 22.0, 7.0],\n  [1, 1, 2.0, 0.0],\n  [2, 0, 26.0, 7.0]\n]\nmanager.insert(table_name=table_name, columns=columns, records=records)\n\n# Execute querySql in DB config\ndata = manager.execute_query()\n# Return type: DataFrame\n\"\"\"\n      index  survived   age   embarked\n0         0         1   22.0       7.0\n1         1         1    2.0       0.0\n2         2         0   26.0       7.0\n...\n\"\"\"\n\n# Delete Document\ncondition = {'survived': 0}\nis_success = db.delete_record(table_name=table_name, condition=condition)\n# Return type: Boolean\n\n# Delete Table\nis_success = db.delete_table(table_name=table_name)\n# Return type: Boolean\n\n# Disconnect to DB\nmanager.disconnect()\n```\n---\n## S3 Example\n\n```python\nfrom afs2datasource import DBManager, constant\n\n# Init DBManager\nmanager = DBManager(\n  db_type = constant.DB_TYPE['S3'],\n  endpoint={ENDPOINT},\n  access_key={ACCESSKEY},\n  secret_key={SECRETKEY},\n  buckets=[{\n    'bucket': {BUCKET_NAME},\n    'blobs': {\n      'files': ['titanic.csv'],\n      'folders': ['models/']\n    }\n  }]\n)\n\n# Connect S3\nmanager.connect()\n\n# Check is the table is exist\nbucket_name = 'titanic'\nmanager.is_table_exist(table_name=bucket_name)\n# Return type: boolean\n\n# Create Bucket\nmanager.create_table(table_name=bucket_name)\n\n# Upload File to S3\nlocal_file = '../titanic.csv'\ns3_file = 'titanic.csv'\nmanager.insert(table_name=bucket_name, source=local_file, destination=s3_file)\n\n# Download files in blob_list\n# Download all files in directory\nbucket_names = manager.execute_query()\n# Return type: Array\n\n# Check if file is exist or not\nis_exist = manager.is_file_exist(table_name=bucket_name, file_name=s3_file)\n# Return type: Boolean\n\n# Delete the file in Bucket and return if the file is deleted successfully\nis_success = manager.delete_record(table_name=bucket_name, file_name=s3_file)\n# Return type: Boolean\n\n# Delete Bucket\nis_success = manager.delete_table(table_name=bucket_name)\n# Return type: Boolean\n```\n---\n\n## APM Data source example\n```python\nAPMDSHelper(\n  username,\n  password,\n  apmurl,\n  machineIdList,\n  parameterList,\n  mongouri,\n  timeRange)\nAPMDSHelper.execute()\n```\n---\n\n## Azure Blob Example\n\n```python\nfrom afs2datasource import DBManager, constant\n\n# Init DBManager\nmanager = DBManager(\n db_type=constant.DB_TYPE['AZUREBLOB'],\n account_key={ACCESS_KEY},\n account_name={ACCESS_NAME}\n containers=[{\n   'container': {CONTAINER_NAME},\n   'blobs': {\n     'files': ['titanic.csv'],\n     'folders': ['test/']\n   }\n }]\n)\n\n# Connect Azure Blob\nmanager.connect()\n\n# Check is the container is exist\ncontainer_name = 'container'\nmanager.is_table_exist(table_name=container_name)\n# Return type: boolean\n\n# Create container\nmanager.create_table(table_name=container_name)\n\n# Upload File to Azure Blob\nlocal_file = '../titanic.csv'\nazure_file = 'titanic.csv'\nmanager.insert(table_name=container_name, source=local_file, destination=azure_file)\n\n# Download files in `containers`\n# Download all files in directory\ncontainer_names = manager.execute_query()\n# Return type: Array\n\n# Check if file is exist in container or not\nis_exist = manager.is_file_exist(table_name=container_name, file_name=azure_file)\n# Return type: Boolean\n\n# Delete File\nis_success = manager.delete_record(table_name=container_name,\nfile_file=azure_file)\n\n# Delete Container\nis_success = manager.delete_table(table_name=container_name)\n# Return type: Boolean\n```\n\n## Oracle Example\n### Notice\n- Install OracleDB client Documents\n  - https://www.oracle.com/au/database/technologies/instant-client/linux-x86-64-downloads.html#ic_x64_inst\n\n\n```python\nfrom afs2datasource import DBManager, constant\n\n# Init DBManager\nmanager = DBManager(\n  db_type=constant.DB_TYPE['ORACLEDB'],\n  username=username,\n  password=password,\n  host=host,\n  port=port,\n  dsn=dsb,\n  querySql=\"select {field_key} from {measurement_name}\" # only support `SELECT`\n)\n\n# Connect OracleDB\nmanager.connect()\n\n# Check is the container is exist\ntable_name = 'table'\nmanager.is_table_exist(table_name=table_name)\n# Return type: boolean\n\n# Execute querySql in DB config\ndata = manager.execute_query()\n# Return type: DataFrame\n\"\"\"\n      index  survived   age   embarked\n0         0         1   22.0       7.0\n1         1         1    2.0       0.0\n2         2         0   26.0       7.0\n...\n\"\"\"\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/stacy0416/afs2-datasource",
    "keywords": "AFS",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "afs2-datasource",
    "package_url": "https://pypi.org/project/afs2-datasource/",
    "platform": null,
    "project_url": "https://pypi.org/project/afs2-datasource/",
    "project_urls": {
      "Homepage": "https://github.com/stacy0416/afs2-datasource"
    },
    "release_url": "https://pypi.org/project/afs2-datasource/3.8.2/",
    "requires_dist": [
      "pymongo (==3.7.2)",
      "pandas (<2.0,>=1.0.0)",
      "psycopg2-binary (==2.8.1)",
      "influxdb (==5.2.2)",
      "boto3 (<=1.17)",
      "requests (==2.22.0)",
      "motor (==2.0.0)",
      "azure-storage-blob (==2.0.1)",
      "mysql-connector-python (==8.0.26)",
      "cx-Oracle (==8.3.0)",
      "sqlalchemy (==1.4.27)",
      "pyodbc (==4.0.32)"
    ],
    "requires_python": "",
    "summary": "For AFS developer to access Datasource",
    "version": "3.8.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14136681,
  "releases": {
    "1.0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "13a846532af306a02ae0776c383037de6102a353ceb0a65ac2f3a7acfe93c351",
          "md5": "9b6eedf8172656877ab2b7d3cd247da4",
          "sha256": "e51ecaf054088d590612072e955edba7b919a67f97be78cab6c9b4b3a3178c80"
        },
        "downloads": -1,
        "filename": "afs2_datasource-1.0.11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9b6eedf8172656877ab2b7d3cd247da4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9342,
        "upload_time": "2019-05-13T02:48:38",
        "upload_time_iso_8601": "2019-05-13T02:48:38.339278Z",
        "url": "https://files.pythonhosted.org/packages/13/a8/46532af306a02ae0776c383037de6102a353ceb0a65ac2f3a7acfe93c351/afs2_datasource-1.0.11-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "85e32173025362a64f069360a7196526cd769b93fe7441649b3d92ff9dd84d2f",
          "md5": "62a3c4971264c6b83f527698b12aea48",
          "sha256": "79a4ba75eee2295543438989abe66e40ca2d9ef1bc8ceb6fc5c51ceafe46d01e"
        },
        "downloads": -1,
        "filename": "afs2-datasource-1.0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "62a3c4971264c6b83f527698b12aea48",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2875,
        "upload_time": "2019-05-09T03:27:46",
        "upload_time_iso_8601": "2019-05-09T03:27:46.297706Z",
        "url": "https://files.pythonhosted.org/packages/85/e3/2173025362a64f069360a7196526cd769b93fe7441649b3d92ff9dd84d2f/afs2-datasource-1.0.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eef4eeb24d4d30499b5fc9fb504ffb980b9599f55851372eac5f9e85eca7a609",
          "md5": "474ab568334ac02b7743d8f6c28673a6",
          "sha256": "3b309848a0f2364dcbb14e06c829e9b2f2adb957444c120c800438cc2b9522eb"
        },
        "downloads": -1,
        "filename": "afs2_datasource-1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "474ab568334ac02b7743d8f6c28673a6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10667,
        "upload_time": "2019-05-13T02:48:39",
        "upload_time_iso_8601": "2019-05-13T02:48:39.902725Z",
        "url": "https://files.pythonhosted.org/packages/ee/f4/eeb24d4d30499b5fc9fb504ffb980b9599f55851372eac5f9e85eca7a609/afs2_datasource-1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.14": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "24cee665536369f465c931ee2c7f24062211c3281b7bb9c22f3fac7848867814",
          "md5": "2de1a63cb48b8582788138b2882ae7d5",
          "sha256": "706f9ebfbfb95d09889f8681ce4cca8caeb1872c9256ef3d638c2218a9ef6aba"
        },
        "downloads": -1,
        "filename": "afs2_datasource-2.1.14-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2de1a63cb48b8582788138b2882ae7d5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10080,
        "upload_time": "2019-05-13T02:48:41",
        "upload_time_iso_8601": "2019-05-13T02:48:41.113620Z",
        "url": "https://files.pythonhosted.org/packages/24/ce/e665536369f465c931ee2c7f24062211c3281b7bb9c22f3fac7848867814/afs2_datasource-2.1.14-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "783d8a9958823a4494af8b9ed9d942234deff7f6625904e0003d6deb753b443f",
          "md5": "84bff330c79f4bc7d6de53a9de469cdd",
          "sha256": "401282578cfe13779bf0af87e9dfc2150dfb91c679d64aa903563a79dc6ab2f4"
        },
        "downloads": -1,
        "filename": "afs2-datasource-2.1.14.tar.gz",
        "has_sig": false,
        "md5_digest": "84bff330c79f4bc7d6de53a9de469cdd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3887,
        "upload_time": "2019-05-13T02:48:43",
        "upload_time_iso_8601": "2019-05-13T02:48:43.200897Z",
        "url": "https://files.pythonhosted.org/packages/78/3d/8a9958823a4494af8b9ed9d942234deff7f6625904e0003d6deb753b443f/afs2-datasource-2.1.14.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.15": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f206129ee8761f5c0ea0b7facdf11305cc82021045480004f04c855585800f33",
          "md5": "15865333039c630df52774e8bac38144",
          "sha256": "81e51f7bf5faa1cd3e04b48e9212a0ad7d29f7717783189c2eef4508f0ce5405"
        },
        "downloads": -1,
        "filename": "afs2_datasource-2.1.15-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "15865333039c630df52774e8bac38144",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11511,
        "upload_time": "2019-05-16T06:20:56",
        "upload_time_iso_8601": "2019-05-16T06:20:56.081435Z",
        "url": "https://files.pythonhosted.org/packages/f2/06/129ee8761f5c0ea0b7facdf11305cc82021045480004f04c855585800f33/afs2_datasource-2.1.15-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a9b19ba751ee4c26c97cd0bf1ab1de6ab961ed0c6bb43423c1144b4b269e0335",
          "md5": "d2dc1e1ed345e1184b0c342ade5bbc71",
          "sha256": "701d5706277c85b244bfb41a2cf44929d3d982de184d923b6a2862b0e03365c5"
        },
        "downloads": -1,
        "filename": "afs2-datasource-2.1.15.tar.gz",
        "has_sig": false,
        "md5_digest": "d2dc1e1ed345e1184b0c342ade5bbc71",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5028,
        "upload_time": "2019-05-16T06:21:04",
        "upload_time_iso_8601": "2019-05-16T06:21:04.865445Z",
        "url": "https://files.pythonhosted.org/packages/a9/b1/9ba751ee4c26c97cd0bf1ab1de6ab961ed0c6bb43423c1144b4b269e0335/afs2-datasource-2.1.15.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.17": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d89d7ac1f3d9eb8a5c91ba97c294dccfa68614078fe92bf759c6db8546603964",
          "md5": "f2f7ba401876b2179ee29f94e14904c9",
          "sha256": "5d71a8c1dd8bb4e8b8928ea8af143c7f9d023be3a3ba68457d1bc4bb183bffe5"
        },
        "downloads": -1,
        "filename": "afs2-datasource-2.1.17.tar.gz",
        "has_sig": false,
        "md5_digest": "f2f7ba401876b2179ee29f94e14904c9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6687,
        "upload_time": "2019-05-30T06:07:39",
        "upload_time_iso_8601": "2019-05-30T06:07:39.102571Z",
        "url": "https://files.pythonhosted.org/packages/d8/9d/7ac1f3d9eb8a5c91ba97c294dccfa68614078fe92bf759c6db8546603964/afs2-datasource-2.1.17.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.18": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4d44ab57119fd6ee430fcd07ab23f72271217c79eedd3811625b37a8c12b6be8",
          "md5": "d230784103e586741f50015f5ec01c1f",
          "sha256": "2852fcc8b3ab62743bbd824a6db6af7dd45734588137911c269e12239f743d7e"
        },
        "downloads": -1,
        "filename": "afs2_datasource-2.1.18-0617-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d230784103e586741f50015f5ec01c1f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17850,
        "upload_time": "2019-06-17T01:52:24",
        "upload_time_iso_8601": "2019-06-17T01:52:24.006336Z",
        "url": "https://files.pythonhosted.org/packages/4d/44/ab57119fd6ee430fcd07ab23f72271217c79eedd3811625b37a8c12b6be8/afs2_datasource-2.1.18-0617-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.19": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "51bdc9e6a5adcee9e067c6584b49f73cc6201f85777590af0aceaf4129538c58",
          "md5": "a203eb67ebc7e20dbcc4ef355b09eed3",
          "sha256": "137239f157ef3fcb2f8a1b2fd0c1982347affbac5f73d0511de9f27f72851140"
        },
        "downloads": -1,
        "filename": "afs2_datasource-2.1.19-1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a203eb67ebc7e20dbcc4ef355b09eed3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 21097,
        "upload_time": "2019-06-25T02:41:40",
        "upload_time_iso_8601": "2019-06-25T02:41:40.293557Z",
        "url": "https://files.pythonhosted.org/packages/51/bd/c9e6a5adcee9e067c6584b49f73cc6201f85777590af0aceaf4129538c58/afs2_datasource-2.1.19-1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.20": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6579e5d022fcd5aed4a44918c71c85d719221b16bfec360b2fc9930b7c47e70f",
          "md5": "cb0bcc1c09493bac1f5bca43d9681a32",
          "sha256": "bea9f0ca54b61c1e78b7962b6122e2010957c98202e2179c756bade71f2a43be"
        },
        "downloads": -1,
        "filename": "afs2_datasource-2.1.20-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cb0bcc1c09493bac1f5bca43d9681a32",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 21834,
        "upload_time": "2019-07-01T02:53:31",
        "upload_time_iso_8601": "2019-07-01T02:53:31.300146Z",
        "url": "https://files.pythonhosted.org/packages/65/79/e5d022fcd5aed4a44918c71c85d719221b16bfec360b2fc9930b7c47e70f/afs2_datasource-2.1.20-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.23": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc27eaea7a5c8847e38ec987336f1caa47e3619b4ab1518ed63746c6ff9d78bf",
          "md5": "005aa375fb527c9a63a5578c00327f79",
          "sha256": "fe467992444cccdf3480f11dd86ea1327b8cb669cc7a412516893dd5cce4c712"
        },
        "downloads": -1,
        "filename": "afs2_datasource-2.1.23-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "005aa375fb527c9a63a5578c00327f79",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 24402,
        "upload_time": "2019-07-24T06:28:57",
        "upload_time_iso_8601": "2019-07-24T06:28:57.792960Z",
        "url": "https://files.pythonhosted.org/packages/dc/27/eaea7a5c8847e38ec987336f1caa47e3619b4ab1518ed63746c6ff9d78bf/afs2_datasource-2.1.23-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.25": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f76a0f0f6c1cbfe921f731659572de8b4bd0e1f288dca7b92ebba414a53c6d5c",
          "md5": "c67ac3b79c53e4363259c59293962045",
          "sha256": "849b957c54fcbe5f5ae6b188f5d7054d5243239e6ca5143818356e8accb28d40"
        },
        "downloads": -1,
        "filename": "afs2_datasource-2.1.25-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c67ac3b79c53e4363259c59293962045",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 24518,
        "upload_time": "2019-08-02T03:28:34",
        "upload_time_iso_8601": "2019-08-02T03:28:34.774103Z",
        "url": "https://files.pythonhosted.org/packages/f7/6a/0f0f6c1cbfe921f731659572de8b4bd0e1f288dca7b92ebba414a53c6d5c/afs2_datasource-2.1.25-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.27": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5a6bc6d0a16b67dd223cf6f9e354f0f44fb7c7ea174398e1a2929f8e2bd5e7f0",
          "md5": "fef24a6aab964f712c14036e541143d4",
          "sha256": "0782e835a977c52819d0063274b31fa0bdc02bab432e1719c015884992486a2c"
        },
        "downloads": -1,
        "filename": "afs2_datasource-2.1.27-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fef24a6aab964f712c14036e541143d4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 24803,
        "upload_time": "2019-08-27T09:24:48",
        "upload_time_iso_8601": "2019-08-27T09:24:48.121987Z",
        "url": "https://files.pythonhosted.org/packages/5a/6b/c6d0a16b67dd223cf6f9e354f0f44fb7c7ea174398e1a2929f8e2bd5e7f0/afs2_datasource-2.1.27-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.28": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2c75adf3bbfd35a0b3b4d3b7a5921dfb566da6c4a77e01a79ced2b6c809e7e52",
          "md5": "e287e201110c697f8fa12fdb8c021683",
          "sha256": "d61959956aec6ce7a9cf7b32ebc59e18b6e1344d34987ecd8c4ee9bb5415b522"
        },
        "downloads": -1,
        "filename": "afs2_datasource-2.1.28-2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e287e201110c697f8fa12fdb8c021683",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 26535,
        "upload_time": "2019-12-11T10:01:50",
        "upload_time_iso_8601": "2019-12-11T10:01:50.696204Z",
        "url": "https://files.pythonhosted.org/packages/2c/75/adf3bbfd35a0b3b4d3b7a5921dfb566da6c4a77e01a79ced2b6c809e7e52/afs2_datasource-2.1.28-2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "612a9ad93a24403abb56204852a405530dee9f914addbcd7d48f2721adf46599",
          "md5": "109d1b6d68cb6e2e9070034191dae935",
          "sha256": "4862bf8c0cb5057f54ffd323ba263d4e89f1c7a8ca11b79e252a760f37c9216e"
        },
        "downloads": -1,
        "filename": "afs2_datasource-3.2.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "109d1b6d68cb6e2e9070034191dae935",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 26825,
        "upload_time": "2020-07-09T09:55:18",
        "upload_time_iso_8601": "2020-07-09T09:55:18.748062Z",
        "url": "https://files.pythonhosted.org/packages/61/2a/9ad93a24403abb56204852a405530dee9f914addbcd7d48f2721adf46599/afs2_datasource-3.2.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.3.5.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca6a4c54f4473de79e1429785da9be1a47c45ab1f7c994f8e132bda642f376db",
          "md5": "07ad05557df078a7f86aee02c5134fb8",
          "sha256": "8d2327f43b2268b27916bf84ffb822de633d476d03fb89e61d2a400173c9b81e"
        },
        "downloads": -1,
        "filename": "afs2_datasource-3.3.5.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "07ad05557df078a7f86aee02c5134fb8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 27096,
        "upload_time": "2020-10-12T02:45:06",
        "upload_time_iso_8601": "2020-10-12T02:45:06.654793Z",
        "url": "https://files.pythonhosted.org/packages/ca/6a/4c54f4473de79e1429785da9be1a47c45ab1f7c994f8e132bda642f376db/afs2_datasource-3.3.5.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.3.5.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "84d313c83a19f8fccd39abcf404e3f0f6f90297ce9129b8dd238fb541be3148e",
          "md5": "e19ee28d1f5886da22097da573b1c07a",
          "sha256": "baf1c4586455b4c1b4c2a97325339135f45f24187b972537d487c327fa36a3e9"
        },
        "downloads": -1,
        "filename": "afs2_datasource-3.3.5.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e19ee28d1f5886da22097da573b1c07a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 27106,
        "upload_time": "2020-10-22T03:18:49",
        "upload_time_iso_8601": "2020-10-22T03:18:49.691660Z",
        "url": "https://files.pythonhosted.org/packages/84/d3/13c83a19f8fccd39abcf404e3f0f6f90297ce9129b8dd238fb541be3148e/afs2_datasource-3.3.5.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.3.5.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "035fa4ce7c6d3d39c09eda4760fe4c92736f2bfeec671b7260cad890b34f00fb",
          "md5": "fcebce860a0a3fd650e40512c786962c",
          "sha256": "9ba14d24a85b7f45d589b571132291e964c24922b6db8f37998e665bdd29d8e3"
        },
        "downloads": -1,
        "filename": "afs2_datasource-3.3.5.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fcebce860a0a3fd650e40512c786962c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 27108,
        "upload_time": "2020-10-27T05:28:42",
        "upload_time_iso_8601": "2020-10-27T05:28:42.636155Z",
        "url": "https://files.pythonhosted.org/packages/03/5f/a4ce7c6d3d39c09eda4760fe4c92736f2bfeec671b7260cad890b34f00fb/afs2_datasource-3.3.5.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2afc0f7a765bcd64789314ccefffcc6428ca529aac22362b89d34253af2b984f",
          "md5": "2b50b038bbe736aed9cc028c699d0e7d",
          "sha256": "05ee88efe9ecf3ee654df12055eb07ae615dcc4643af68be086ca39b6ade1493"
        },
        "downloads": -1,
        "filename": "afs2_datasource-3.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2b50b038bbe736aed9cc028c699d0e7d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 27503,
        "upload_time": "2020-11-30T07:06:26",
        "upload_time_iso_8601": "2020-11-30T07:06:26.427105Z",
        "url": "https://files.pythonhosted.org/packages/2a/fc/0f7a765bcd64789314ccefffcc6428ca529aac22362b89d34253af2b984f/afs2_datasource-3.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5cb9151e85f92985bc2f3fee4475eed6856e482aa4a91da66b2b2c793d98d62b",
          "md5": "e61cf4fe14e1e4bf0269f00d6fed2e4c",
          "sha256": "5617cbafec8f52c1b54e1bef8c1e18cac26772826a391417db809049b9c27e85"
        },
        "downloads": -1,
        "filename": "afs2_datasource-3.4.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e61cf4fe14e1e4bf0269f00d6fed2e4c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 27714,
        "upload_time": "2020-12-01T02:21:32",
        "upload_time_iso_8601": "2020-12-01T02:21:32.357338Z",
        "url": "https://files.pythonhosted.org/packages/5c/b9/151e85f92985bc2f3fee4475eed6856e482aa4a91da66b2b2c793d98d62b/afs2_datasource-3.4.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.4.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f71414ac20533ed4261f138e9f2e339f780683fa526093ca4cfc468d4e174108",
          "md5": "9beec8e0ed4c077c14a850ff2d837ac3",
          "sha256": "c4deebf2142c315d78185072a749931c8d5a24c2489b949ca259ad5053d0b6da"
        },
        "downloads": -1,
        "filename": "afs2_datasource-3.4.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9beec8e0ed4c077c14a850ff2d837ac3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 27699,
        "upload_time": "2020-12-02T02:42:00",
        "upload_time_iso_8601": "2020-12-02T02:42:00.508962Z",
        "url": "https://files.pythonhosted.org/packages/f7/14/14ac20533ed4261f138e9f2e339f780683fa526093ca4cfc468d4e174108/afs2_datasource-3.4.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4292dac66b339a5a4aa0977ee1ad510685862d663121a80cb4ff6a62f8164d22",
          "md5": "052848c93303f3ef726f7078f775218b",
          "sha256": "879a27f038e2e7070d63ddd2a8bea8fd7341ef45b58a5770e0f2187927f907ca"
        },
        "downloads": -1,
        "filename": "afs2_datasource-3.6.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "052848c93303f3ef726f7078f775218b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 32542,
        "upload_time": "2021-06-08T06:40:28",
        "upload_time_iso_8601": "2021-06-08T06:40:28.100841Z",
        "url": "https://files.pythonhosted.org/packages/42/92/dac66b339a5a4aa0977ee1ad510685862d663121a80cb4ff6a62f8164d22/afs2_datasource-3.6.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f21bacb25b8940b263c5616c0c22fd4a26a4a347564dcb4b597ae942993238b0",
          "md5": "8265e9737b49fb17035f8a1b3b85d47e",
          "sha256": "0cb8b67a4aebfacfb5b99736ed525400d4bf09bdc7ebc8c6ddc5ac85313d9722"
        },
        "downloads": -1,
        "filename": "afs2_datasource-3.7.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8265e9737b49fb17035f8a1b3b85d47e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 47220,
        "upload_time": "2021-09-28T08:54:44",
        "upload_time_iso_8601": "2021-09-28T08:54:44.186926Z",
        "url": "https://files.pythonhosted.org/packages/f2/1b/acb25b8940b263c5616c0c22fd4a26a4a347564dcb4b597ae942993238b0/afs2_datasource-3.7.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.7.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "190de9946bfb5ae9bff58b62edf67135749e035aff28b77cdc842a91d99a393f",
          "md5": "3c94584304b9109b62ee8f1438295d8a",
          "sha256": "97e04f042a2990c60cb9bbfdde240f06c3246d915ff3c0c1417344a5143f78a6"
        },
        "downloads": -1,
        "filename": "afs2_datasource-3.7.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3c94584304b9109b62ee8f1438295d8a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 50076,
        "upload_time": "2021-11-25T07:23:13",
        "upload_time_iso_8601": "2021-11-25T07:23:13.478679Z",
        "url": "https://files.pythonhosted.org/packages/19/0d/e9946bfb5ae9bff58b62edf67135749e035aff28b77cdc842a91d99a393f/afs2_datasource-3.7.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.7.1.dev5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "95db6655f912db42903f19fe5192eff932c0d7ce5aab408a754d6fe561143a7d",
          "md5": "065ff2d0efb8009eb3311418f99e74bc",
          "sha256": "f8d13157de12b425e26fbd86a29b3b26f37c6476ab5109e2f3c53a14c161b01b"
        },
        "downloads": -1,
        "filename": "afs2_datasource-3.7.1.dev5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "065ff2d0efb8009eb3311418f99e74bc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 51995,
        "upload_time": "2022-01-05T01:45:10",
        "upload_time_iso_8601": "2022-01-05T01:45:10.685199Z",
        "url": "https://files.pythonhosted.org/packages/95/db/6655f912db42903f19fe5192eff932c0d7ce5aab408a754d6fe561143a7d/afs2_datasource-3.7.1.dev5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.7.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd47e15dcf23f846f11e171120725bfe3eb3666cb8c02a55999cbfa77dac8e47",
          "md5": "7f9a7c9e256788e259c1970e759986be",
          "sha256": "bbda1b77ffa134df61831825cf32ab10b676ba5063b76d0f01c0b3aca4383f07"
        },
        "downloads": -1,
        "filename": "afs2_datasource-3.7.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7f9a7c9e256788e259c1970e759986be",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 51938,
        "upload_time": "2022-01-05T01:45:12",
        "upload_time_iso_8601": "2022-01-05T01:45:12.813423Z",
        "url": "https://files.pythonhosted.org/packages/bd/47/e15dcf23f846f11e171120725bfe3eb3666cb8c02a55999cbfa77dac8e47/afs2_datasource-3.7.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.7.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5865c2896277d82d76e41cfb41dd132939bb51d7423fbc45c8b01283767796ea",
          "md5": "c12445554b1a7fcbc4e9457f364a9494",
          "sha256": "f047d089bb5b4666106c763945a7e1cadd5e2ff8c60effad6567a051d052e97d"
        },
        "downloads": -1,
        "filename": "afs2_datasource-3.7.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c12445554b1a7fcbc4e9457f364a9494",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 50021,
        "upload_time": "2022-01-06T05:57:04",
        "upload_time_iso_8601": "2022-01-06T05:57:04.792877Z",
        "url": "https://files.pythonhosted.org/packages/58/65/c2896277d82d76e41cfb41dd132939bb51d7423fbc45c8b01283767796ea/afs2_datasource-3.7.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.7.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7807ef7136a510ac274591cb7f49f07195437c2026935b3a7ab479609dd546a8",
          "md5": "deee9526bdbf2ca863dfbe4c7297c766",
          "sha256": "bb9ed5116a659b9a4c5d782686ac5e690d00de35a58324e6e8188325d827a379"
        },
        "downloads": -1,
        "filename": "afs2_datasource-3.7.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "deee9526bdbf2ca863dfbe4c7297c766",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 44569,
        "upload_time": "2022-05-12T07:38:45",
        "upload_time_iso_8601": "2022-05-12T07:38:45.956668Z",
        "url": "https://files.pythonhosted.org/packages/78/07/ef7136a510ac274591cb7f49f07195437c2026935b3a7ab479609dd546a8/afs2_datasource-3.7.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.8.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8d2c99565da2091f07637e6e7aba1ffba14af83e97247cf3b7569d6a9d2a8811",
          "md5": "5fd9ae5824693dd79afe80c4ceeee177",
          "sha256": "d9b0027f711cbecc7c4d03ad3925851bba07d4a04ff49022f39bc34a13590549"
        },
        "downloads": -1,
        "filename": "afs2_datasource-3.8.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5fd9ae5824693dd79afe80c4ceeee177",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 52934,
        "upload_time": "2021-12-29T05:01:15",
        "upload_time_iso_8601": "2021-12-29T05:01:15.718319Z",
        "url": "https://files.pythonhosted.org/packages/8d/2c/99565da2091f07637e6e7aba1ffba14af83e97247cf3b7569d6a9d2a8811/afs2_datasource-3.8.0.0-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": "waiting for aifs 3.8 release"
      }
    ],
    "3.8.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5aaa589b261d623e68014f139a7f5ba71ae7e92dd7a47a325a929e8c936ae499",
          "md5": "530411aed2c527a4ecd9e19317e89224",
          "sha256": "616c3b87f2d6bbafeca19f7209622c3b32cbdc242f8ed99a4ced72b0c4c9848d"
        },
        "downloads": -1,
        "filename": "afs2_datasource-3.8.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "530411aed2c527a4ecd9e19317e89224",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 46991,
        "upload_time": "2022-06-15T07:28:27",
        "upload_time_iso_8601": "2022-06-15T07:28:27.722781Z",
        "url": "https://files.pythonhosted.org/packages/5a/aa/589b261d623e68014f139a7f5ba71ae7e92dd7a47a325a929e8c936ae499/afs2_datasource-3.8.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5aaa589b261d623e68014f139a7f5ba71ae7e92dd7a47a325a929e8c936ae499",
        "md5": "530411aed2c527a4ecd9e19317e89224",
        "sha256": "616c3b87f2d6bbafeca19f7209622c3b32cbdc242f8ed99a4ced72b0c4c9848d"
      },
      "downloads": -1,
      "filename": "afs2_datasource-3.8.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "530411aed2c527a4ecd9e19317e89224",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 46991,
      "upload_time": "2022-06-15T07:28:27",
      "upload_time_iso_8601": "2022-06-15T07:28:27.722781Z",
      "url": "https://files.pythonhosted.org/packages/5a/aa/589b261d623e68014f139a7f5ba71ae7e92dd7a47a325a929e8c936ae499/afs2_datasource-3.8.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}