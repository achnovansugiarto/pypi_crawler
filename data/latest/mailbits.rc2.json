{
  "info": {
    "author": "John Thorvald Wodder II",
    "author_email": "mailbits@varonathe.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Communications :: Email",
      "Topic :: Utilities",
      "Typing :: Typed"
    ],
    "description": ".. image:: http://www.repostatus.org/badges/latest/active.svg\n    :target: http://www.repostatus.org/#active\n    :alt: Project Status: Active — The project has reached a stable, usable\n          state and is being actively developed.\n\n.. image:: https://github.com/jwodder/mailbits/workflows/Test/badge.svg?branch=master\n    :target: https://github.com/jwodder/mailbits/actions?workflow=Test\n    :alt: CI Status\n\n.. image:: https://codecov.io/gh/jwodder/mailbits/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/jwodder/mailbits\n\n.. image:: https://img.shields.io/pypi/pyversions/mailbits.svg\n    :target: https://pypi.org/project/mailbits/\n\n.. image:: https://img.shields.io/github/license/jwodder/mailbits.svg\n    :target: https://opensource.org/licenses/MIT\n    :alt: MIT License\n\n`GitHub <https://github.com/jwodder/mailbits>`_\n| `PyPI <https://pypi.org/project/mailbits/>`_\n| `Issues <https://github.com/jwodder/mailbits/issues>`_\n| `Changelog <https://github.com/jwodder/mailbits/blob/master/CHANGELOG.md>`_\n\n``mailbits`` provides a small assortment of functions for working with the\nPython standard library's ``Message``/``EmailMessage``, ``Address``, and\n``Group`` types, as well as a couple other features.  It can parse & reassemble\nContent-Type strings, convert instances of the old ``Message`` class to the new\n``EmailMessage``, convert ``Message`` & ``EmailMessage`` instances into\nstructured ``dict``\\s, parse addresses, format address lists, and extract\nrecipients' raw e-mail addresses from an ``EmailMessage``.\n\n\nInstallation\n============\n``mailbits`` requires Python 3.6 or higher.  Just use `pip\n<https://pip.pypa.io>`_ for Python 3 (You have pip, right?) to install it::\n\n    python3 -m pip install mailbits\n\n\nAPI\n===\n\n``ContentType``\n---------------\n\nThe ``ContentType`` class provides a representation of a parsed Content-Type\nheader value.  Parse Content-Type strings with the ``parse()`` classmethod,\ninspect the parts via the ``content_type``, ``maintype``, ``subtype``, and\n``params`` attributes (the last three of which can be mutated), convert back to\na string with ``str()``, and convert to ASCII bytes using encoded words for\nnon-ASCII with ``bytes()``.\n\n>>> from mailbits import ContentType\n>>> ct = ContentType.parse(\"text/plain; charset=utf-8; name*=utf-8''r%C3%A9sum%C3%A9.txt\")\n>>> ct\nContentType(maintype='text', subtype='plain', params={'charset': 'utf-8', 'name': 'résumé.txt'})\n>>> ct.content_type\n'text/plain'\n>>> str(ct)\n'text/plain; charset=\"utf-8\"; name=\"résumé.txt\"'\n>>> bytes(ct)\nb'text/plain; charset=\"utf-8\"; name*=utf-8\\'\\'r%C3%A9sum%C3%A9.txt'\n\n\n``email2dict()``\n----------------\n\n.. code:: python\n\n    class MessageDict(TypedDict):\n        unixfrom: Optional[str]\n        headers: Dict[str, Any]\n        preamble: Optional[str]\n        content: Any\n        epilogue: Optional[str]\n\n    mailbits.email2dict(msg: email.message.Message, include_all: bool = False) -> MessageDict\n\nConvert a ``Message`` object to a ``dict``.  All encoded text & bytes are\ndecoded into their natural values.\n\nNeed to examine a ``Message`` but find the builtin Python API too fiddly?  Need\nto check that a ``Message`` has the content & structure you expect?  Need to\ncompare two ``Message`` instances for equality?  Need to pretty-print the\nstructure of a ``Message``?  Then ``email2dict()`` has your back.\n\nBy default, any information specific to how the message is encoded (Content-Type\nparameters, Content-Transfer-Encoding, etc.) is not reported, as the focus is\non the actual content rather than the choices made in representing it.  To\ninclude this information anyway, set ``include_all`` to ``True``.\n\nThe output structure has the following fields:\n\n``unixfrom``\n    The \"From \" line marking the start of the message in a mbox, if any\n\n``headers``\n    A ``dict`` mapping lowercased header field names to values.  The following\n    headers have special representations:\n\n    ``subject``\n        A single string\n\n    ``from``, ``to``, ``cc``, ``bcc``, ``resent-from``, ``resent-to``, ``resent-cc``, ``resent-bcc``, ``reply-to``\n        A list of groups and/or addresses.  Addresses are represented as\n        ``dict``\\s with two string fields: ``display_name`` (an empty string if\n        not given) and ``address``.  Groups are represented as ``dict``\\s with\n        a ``group`` field giving the name of the group and an ``addresses``\n        field giving a list of addresses in the group.\n\n    ``message-id``\n        A single string\n\n    ``content-type``\n        A ``dict`` containing a ``content_type`` field (a string of the form\n        ``maintype/subtype``, e.g., ``\"text/plain\"``) and a ``params`` field (a\n        ``dict`` of string keys & values).  The ``charset`` and ``boundary``\n        parameters are discarded unless ``include_all`` is ``True``.\n\n    ``date``\n        A ``datetime.datetime`` instance\n\n    ``orig-date``\n        A ``datetime.datetime`` instance\n\n    ``resent-date``\n        A list of ``datetime.datetime`` instances\n\n    ``sender``\n        A single address ``dict``\n\n    ``resent-sender``\n        A list of address ``dict``\\s\n\n    ``content-disposition``\n        A ``dict`` containing a ``disposition`` field (value either\n        ``\"inline\"`` or ``\"attachment\"``) and a ``params`` field (a ``dict`` of\n        string keys & values)\n\n    ``content-transfer-encoding``\n        A single string.  This header is discarded unless ``include_all`` is\n        ``True``.\n\n    ``mime-version``\n        A single string.  This header is discarded unless ``include_all`` is\n        ``True``.\n\n    All other headers are represented as lists of strings.\n\n``preamble``\n    The message's preamble__\n\n    __ https://docs.python.org/3/library/email.message.html\n       #email.message.EmailMessage.preamble\n\n``content``\n    If the message is multipart, this is a list of message ``dict``\\s,\n    structured the same way as the top-level ``dict``.  If the message's\n    Content-Type is ``message/rfc822`` or ``message/external-body``, this is a\n    single message ``dict``.  If the message's Content-Type is ``text/*``, this\n    is a ``str`` giving the contents of the message.  Otherwise, it is a\n    ``bytes`` giving the contents of the message.\n\n``epilogue``\n    The message's epilogue__\n\n    __ https://docs.python.org/3/library/email.message.html\n       #email.message.EmailMessage.epilogue\n\nAn example: The ``email`` `examples page`__ in the Python docs includes an\nexample of constructing an HTML e-mail with an alternative plain text version\n(It's the one with the subject \"Ayons asperges pour le déjeuner\").  Passing the\nresulting ``EmailMessage`` object to ``email2dict()`` produces the following\noutput structure:\n\n__ https://docs.python.org/3/library/email.examples.html\n\n.. code:: python\n\n    {\n        \"unixfrom\": None,\n        \"headers\": {\n            \"subject\": \"Ayons asperges pour le déjeuner\",\n            \"from\": [\n                {\n                    \"display_name\": \"Pepé Le Pew\",\n                    \"address\": \"pepe@example.com\",\n                },\n            ],\n            \"to\": [\n                {\n                    \"display_name\": \"Penelope Pussycat\",\n                    \"address\": \"penelope@example.com\",\n                },\n                {\n                    \"display_name\": \"Fabrette Pussycat\",\n                    \"address\": \"fabrette@example.com\",\n                },\n            ],\n            \"content-type\": {\n                \"content_type\": \"multipart/alternative\",\n                \"params\": {},\n            },\n        },\n        \"preamble\": None,\n        \"content\": [\n            {\n                \"unixfrom\": None,\n                \"headers\": {\n                    \"content-type\": {\n                        \"content_type\": \"text/plain\",\n                        \"params\": {},\n                    },\n                },\n                \"preamble\": None,\n                \"content\": (\n                    \"Salut!\\n\"\n                    \"\\n\"\n                    \"Cela ressemble à un excellent recipie[1] déjeuner.\\n\"\n                    \"\\n\"\n                    \"[1] http://www.yummly.com/recipe/Roasted-Asparagus-Epicurious-203718\\n\"\n                    \"\\n\"\n                    \"--Pepé\\n\"\n                ),\n                \"epilogue\": None,\n            },\n            {\n                \"unixfrom\": None,\n                \"headers\": {\n                    \"content-type\": {\n                        \"content_type\": \"multipart/related\",\n                        \"params\": {},\n                    },\n                },\n                \"preamble\": None,\n                \"content\": [\n                    {\n                        \"unixfrom\": None,\n                        \"headers\": {\n                            \"content-type\": {\n                                \"content_type\": \"text/html\",\n                                \"params\": {},\n                            },\n                        },\n                        \"preamble\": None,\n                        \"content\": (\n                            \"<html>\\n\"\n                            \"  <head></head>\\n\"\n                            \"  <body>\\n\"\n                            \"    <p>Salut!</p>\\n\"\n                            \"    <p>Cela ressemble à un excellent\\n\"\n                            \"        <a href=\\\"http://www.yummly.com/recipe/Roasted-Asparagus-\"\n                            \"Epicurious-203718\\\">\\n\"\n                            \"            recipie\\n\"\n                            \"        </a> déjeuner.\\n\"\n                            \"    </p>\\n\"\n                            \"    <img src=\\\"cid:RANDOM_MESSAGE_ID\\\" />\\n\"\n                            \"  </body>\\n\"\n                            \"</html>\\n\"\n                        ),\n                        \"epilogue\": None,\n                    },\n                    {\n                        \"unixfrom\": None,\n                        \"headers\": {\n                            \"content-type\": {\n                                \"content_type\": \"image/png\",\n                                \"params\": {},\n                            },\n                            \"content-disposition\": {\n                                \"disposition\": \"inline\",\n                                \"params\": {},\n                            },\n                            \"content-id\": [\"<RANDOM_MESSAGE_ID>\"],\n                        },\n                        \"preamble\": None,\n                        \"content\": b'IMAGE BLOB',\n                        \"epilogue\": None,\n                    },\n                ],\n                \"epilogue\": None,\n            },\n        ],\n        \"epilogue\": None,\n    }\n\n\n``format_addresses()``\n----------------------\n\n.. code:: python\n\n    mailbits.format_addresses(addresses: Iterable[Union[str, Address, Group]], encode: bool = False) -> str\n\nConvert an iterable of e-mail address strings (of the form\n\"``foo@example.com``\", without angle brackets or a display name),\n``email.headerregistry.Address`` objects, and/or ``email.headerregistry.Group``\nobjects into a formatted string.  If ``encode`` is ``False`` (the default),\nnon-ASCII characters are left as-is.  If it is ``True``, non-ASCII display\nnames are converted into :RFC:`2047` encoded words, and non-ASCII domain names\nare encoded using Punycode.\n\n\n``message2email()``\n-------------------\n\n.. code:: python\n\n    mailbits.message2email(msg: email.message.Message) -> email.message.EmailMessage\n\nConvert an instance of the old ``Message`` class (or one of its subclasses,\nlike a ``mailbox`` message class) to an instance of the new ``EmailMessage``\nclass with the ``default`` policy.  If ``msg`` is already an ``EmailMessage``,\nit is returned unchanged.\n\n\n``parse_address()``\n-------------------\n\n.. code:: python\n\n    mailbits.parse_address(s: str) -> email.headerregistry.Address\n\nParse a single e-mail address — either a raw address like \"``foo@example.com``\"\nor a combined display name & address like \"``Fabian Oh <foo@example.com>``\"\ninto an ``Address`` object.\n\n\n``parse_addresses()``\n---------------------\n\n.. code:: python\n\n    mailbits.parse_addresses(s: Union[str, email.headerregistry.AddressHeader]) \\\n        -> List[Union[email.headerregistry.Address, email.headerregistry.Group]]\n\nParse a formatted list of e-mail addresses or the contents of an\n``EmailMessage``'s \"To\", \"CC\", \"BCC\", etc. header into a list of ``Address``\nand/or ``Group`` objects.\n\n\n``recipient_addresses()``\n-------------------------\n\n.. code:: python\n\n    mailbits.recipient_addresses(msg: email.message.EmailMessage) -> List[str]\n\nReturn a sorted list of all of the distinct e-mail addresses (not including\ndisplay names) in an ``EmailMessage``'s combined \"To\", \"CC\", and \"BCC\" headers.\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jwodder/mailbits",
    "keywords": "EmailMessage,content type,e-mail,e-mail address,e-mail comparison,e-mail inspection,email,recipients",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mailbits",
    "package_url": "https://pypi.org/project/mailbits/",
    "platform": "",
    "project_url": "https://pypi.org/project/mailbits/",
    "project_urls": {
      "Bug Tracker": "https://github.com/jwodder/mailbits/issues",
      "Homepage": "https://github.com/jwodder/mailbits",
      "Source Code": "https://github.com/jwodder/mailbits"
    },
    "release_url": "https://pypi.org/project/mailbits/0.2.1/",
    "requires_dist": [
      "attrs (>=18.1)",
      "typing-extensions ; python_version < \"3.8\""
    ],
    "requires_python": "~=3.6",
    "summary": "Assorted e-mail utility functions",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9788062,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "04dec100b38be75237474cb8f9e40baa6f561a566db3c35d3b53c45d8fe5dfb8",
          "md5": "4851dae20eeb718a38015dcecf74a3fb",
          "sha256": "73d08a3e8ef28495388721a130371256142d1d33d6d01681c9f579f68eb17c63"
        },
        "downloads": -1,
        "filename": "mailbits-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4851dae20eeb718a38015dcecf74a3fb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.6",
        "size": 11655,
        "upload_time": "2021-03-14T03:51:07",
        "upload_time_iso_8601": "2021-03-14T03:51:07.234988Z",
        "url": "https://files.pythonhosted.org/packages/04/de/c100b38be75237474cb8f9e40baa6f561a566db3c35d3b53c45d8fe5dfb8/mailbits-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "35e35149ef8a6922cc7f5323c6971c5b236cbcb9b7b9dcbe8d701f98ddcb47f5",
          "md5": "ce7f09657bbff5338fbcf2fc5f34551f",
          "sha256": "705d49b66f8ba8f6c92865175d1fb1dc330bd6d0001db74878fe7d308932fe45"
        },
        "downloads": -1,
        "filename": "mailbits-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ce7f09657bbff5338fbcf2fc5f34551f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.6",
        "size": 35256,
        "upload_time": "2021-03-14T03:51:08",
        "upload_time_iso_8601": "2021-03-14T03:51:08.728621Z",
        "url": "https://files.pythonhosted.org/packages/35/e3/5149ef8a6922cc7f5323c6971c5b236cbcb9b7b9dcbe8d701f98ddcb47f5/mailbits-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a70b0d15da3a546ac2da71fd821636b171fd48e3209feb7ea3de54b03413f4bf",
          "md5": "5f075fb42bcc8a5975d35325e48c100b",
          "sha256": "04c06b036bba93067d96b08288780ae7002ba604ac7b205bc55dca52474fc3e2"
        },
        "downloads": -1,
        "filename": "mailbits-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5f075fb42bcc8a5975d35325e48c100b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.6",
        "size": 11658,
        "upload_time": "2021-03-16T19:54:01",
        "upload_time_iso_8601": "2021-03-16T19:54:01.244849Z",
        "url": "https://files.pythonhosted.org/packages/a7/0b/0d15da3a546ac2da71fd821636b171fd48e3209feb7ea3de54b03413f4bf/mailbits-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "632503071b1b5475c75b9336fd66e49054e95516603d7f46ac4e6d596370af94",
          "md5": "b7f5a28d9aeb9ff04e0e054fb80654d1",
          "sha256": "eb53610e01611a95d2ae46559e00d862d907c776e88034dd53020a53baac21d1"
        },
        "downloads": -1,
        "filename": "mailbits-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b7f5a28d9aeb9ff04e0e054fb80654d1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.6",
        "size": 35329,
        "upload_time": "2021-03-16T19:54:02",
        "upload_time_iso_8601": "2021-03-16T19:54:02.497487Z",
        "url": "https://files.pythonhosted.org/packages/63/25/03071b1b5475c75b9336fd66e49054e95516603d7f46ac4e6d596370af94/mailbits-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a70b0d15da3a546ac2da71fd821636b171fd48e3209feb7ea3de54b03413f4bf",
        "md5": "5f075fb42bcc8a5975d35325e48c100b",
        "sha256": "04c06b036bba93067d96b08288780ae7002ba604ac7b205bc55dca52474fc3e2"
      },
      "downloads": -1,
      "filename": "mailbits-0.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5f075fb42bcc8a5975d35325e48c100b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": "~=3.6",
      "size": 11658,
      "upload_time": "2021-03-16T19:54:01",
      "upload_time_iso_8601": "2021-03-16T19:54:01.244849Z",
      "url": "https://files.pythonhosted.org/packages/a7/0b/0d15da3a546ac2da71fd821636b171fd48e3209feb7ea3de54b03413f4bf/mailbits-0.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "632503071b1b5475c75b9336fd66e49054e95516603d7f46ac4e6d596370af94",
        "md5": "b7f5a28d9aeb9ff04e0e054fb80654d1",
        "sha256": "eb53610e01611a95d2ae46559e00d862d907c776e88034dd53020a53baac21d1"
      },
      "downloads": -1,
      "filename": "mailbits-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "b7f5a28d9aeb9ff04e0e054fb80654d1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "~=3.6",
      "size": 35329,
      "upload_time": "2021-03-16T19:54:02",
      "upload_time_iso_8601": "2021-03-16T19:54:02.497487Z",
      "url": "https://files.pythonhosted.org/packages/63/25/03071b1b5475c75b9336fd66e49054e95516603d7f46ac4e6d596370af94/mailbits-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}