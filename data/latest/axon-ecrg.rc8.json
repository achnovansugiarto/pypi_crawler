{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Axon\n\nEdge computing framework developed and maintained by the Edge Computing Research Group at Queen's University.\n\n## Installation\n\n`pip install axon-ECRG`\n\n## QuickStart\n\n### Worker\n\n```\nfrom axon import worker\n\n@worker.rpc()\ndef hello_world():\n\tprint(\"hello\")\n\treturn \"world\"\n\nworker.init()\n```\n\n### Client\n\n```\nimport asyncio\nimport axon\n\nhello_world = axon.stubs.SyncSimplexStub(worker_ip='localhost', rpc_name='hello_world')\n\nresult = hello_world()\n\nprint(result)\n```\n\nReplace '127.0.0.1' with the IP address of the worker, and you can call functions on other computers on your network.\n\n#### What does simplex mean?\n\nThe call to `SyncSimplexStub` returns an RPC stub that calls the function `hello_world` on \"127.0.0.1\" with a single HTTP request. This could become a problem when the function being called might take longer than the timeout of an HTTP request. If the function calls other RPCs and stacks latencies, or performs a stateful operation on the worker that requires the aqcisition of a threadlock, the calling HTTP could timeout and crash.\n\nThe solution then, is to use a separate HTTP request to return the result to the caller of the function. This pattern is called a duplex RPC, and can be performed with simple alterations:\n\n### Worker\n\n```\nfrom axon import worker\n\n@worker.rpc(comms_pattern=\"duplex\")\ndef hello_world():\n\tprint(\"hello\")\n\treturn \"world\"\n\nworker.init()\n```\n\n### Client\n\n```\nimport axon\n\nhello_world = axon.stubs.SyncDuplexStub(worker_ip='localhost', rpc_name='hello_world')\n\nresult = hello_world()\n\nprint(result)\n```\n\nTo receive the incomming HTTP request containing the result of the function being called, the client must be started before the calling request is made. This is done automatically upon the first call to a duplex RPC, and so if not done explicitly it will add to the latency of the first call.\n\n#### What if I don't know if a function is duplex or simplex prior to calling it?\n\nThe reccommended way of calling RPCs is through a RemoteWorker object. This will automatically distinguish between simplex and duplex RPCs, without any involvement from the caller. RemoteWorkers can be instantiated with the IP address of the worker they are associated with, and are meant to be a local represenation of that worker.\n\n### Worker\n\n```\nfrom axon import worker\n\n@worker.rpc()\ndef fn_1(a):\n\tprint(a)\n\treturn 'this is a simplex function'\n\n@worker.rpc(comms_pattern='duplex')\ndef fn_2(a):\n\tprint(a)\n\treturn 'this is a duplex function'\n\nworker.init()\n```\n\n### Client\n\n```\nimport asyncio\nfrom axon import client\n\nremote_worker = client.RemoteWorker('127.0.0.1')\n\nasync def main():\n\tresult = await remote_worker.rpcs.fn_1('hello')\n\tprint(result)\n\n\tresult = await remote_worker.rpcs.fn_2('world')\n\tprint(result)\n\nasyncio.run(main())\n```\n\nRPCs can also be run in their own thread or a Process by passing `executor='Thread'` or `executor='Process'` to the rcp decorator. Be warned that this feature is on the chopping block, to be replaced by literal `ThreadPool` or `ProcessPool` executors rather than threads and processes instantiated per call.\n\n#### How do I find workers on my network?\n\nIt can be a logistical challenge to keep track of the IP addresses of the workers on your network. To help with this task, axon comes with a discovery module that can be used to discover workers and other entities. If I had two workers on my network I could find their IP addresses you running the following command in a python terminal:\n\n`axon.discovery.broadcast_discovery(num_hosts=2, timeout=3)`\n\nThis would return the following array of IP addresses:\n\n`['192.168.2.19', '192.168.2.26']`\n\nThe function `broadcast_discovery` will search for axon entities that are listenning on the default port, and will return a list of the IP addresses of all the entities it finds. By default it spends 10 seconds searching, but this can be set with the timeout option. If you know how many workers are on your network, you can tell axon to stop looking after it finds a certain number of hosts with the num_hosts option, saving the time it takes to wait for the timeout.\n\nDiscovering workers via broadcasts is inneficient and causes a lot of network noise. The right way to discover workers is with a notice board, which workers can sign into to show that they're willing to participate in the network, and clients can query to discover the IP adresses of workers. Using a notice board means you only need to remember one IP address, the notice board's, instead of the IP address if every active worker. Starting a notice board is as simple as:\n\n```\nimport axon\n\nnb = axon.discovery.NoticeBoard()\n\nnb.start()\n```\n\nWorkers can sign in and out of a notice board with the `sign_in` and `sign_out` functions from the discovery module, and clients can query it for active workers with the `get_ips` function. A helpful function is:\n\n```\nimport axon, requests\n\nnb_ip = '192.168.2.19'\n\nasync def start_up():\n\ttry:\n\t\taxon.discovery.sign_in(ip=nb_ip)\n\n\texcept(requests.exceptions.ConnectionError):\n\t\tprint('no notice board at:', nb_ip)\n\n\t\tip_list = await axon.discovery.broadcast_discovery(num_hosts=1, port=axon.config.comms_config.notice_board_port)\n\n\t\tif (len(ip_list) == 0):\n\t\t\tprint('no notice board on network, sign in unsuccessful')\n\n\t\telse:\n\t\t\tnb_ip = ip_list.pop()\n\t\t\tprint('notice board at a new ip:', nb_ip)\n\t\t\taxon.discovery.sign_in(ip=nb_ip)\n```\n\nwhich will try signing into a notice board at a recorded IP, but in case of failure will look for a notice board on the network, and then either sign into it or give up depending on weather or not it finds one. Notice that the notice board runs on a different port from workers, and so we must specify `port=axon.config.comms_config.notice_board_port` in the call to broadcast_discovery. This is done so that the notice board can run on the same machine as a worker.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/DuncanMays/axon-ECRG",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "axon-ECRG",
    "package_url": "https://pypi.org/project/axon-ECRG/",
    "platform": null,
    "project_url": "https://pypi.org/project/axon-ECRG/",
    "project_urls": {
      "Homepage": "https://github.com/DuncanMays/axon-ECRG"
    },
    "release_url": "https://pypi.org/project/axon-ECRG/0.1.5/",
    "requires_dist": [
      "flask",
      "uuid",
      "requests",
      "aiohttp"
    ],
    "requires_python": "",
    "summary": "Edge computing framework developed and maintained by the Edge Computing Research Group at Queen's University",
    "version": "0.1.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15414268,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c53d168bbf4883f7f7ee0ea8ba68e853d785a05a9093173a9f266763d395d794",
          "md5": "1363e17932b6a0ac2014e2ede565e9f2",
          "sha256": "65d8de7b194d40dd736a95ca879e4fb89080c94b127927732276f66a9f385810"
        },
        "downloads": -1,
        "filename": "axon_ECRG-0.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1363e17932b6a0ac2014e2ede565e9f2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9716,
        "upload_time": "2022-01-03T00:04:49",
        "upload_time_iso_8601": "2022-01-03T00:04:49.660106Z",
        "url": "https://files.pythonhosted.org/packages/c5/3d/168bbf4883f7f7ee0ea8ba68e853d785a05a9093173a9f266763d395d794/axon_ECRG-0.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "323e48322d4b0238b82fdeb452f636ae9b85c59911c9e27f86d580d9dbe115e5",
          "md5": "0e4795cd0070fe21222e235a6575efa6",
          "sha256": "ced47902bfc6a2b724f2666cf201ffb2a86090b9876c1a162b333d7c3f44641e"
        },
        "downloads": -1,
        "filename": "axon-ECRG-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0e4795cd0070fe21222e235a6575efa6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7495,
        "upload_time": "2022-01-03T00:04:51",
        "upload_time_iso_8601": "2022-01-03T00:04:51.538174Z",
        "url": "https://files.pythonhosted.org/packages/32/3e/48322d4b0238b82fdeb452f636ae9b85c59911c9e27f86d580d9dbe115e5/axon-ECRG-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "63827009e23b1a5b11122e0a191500f515e9ae0e1fdc744bf20c53ecd9033b9c",
          "md5": "1e05e0589928b4b92de303b4e0cd4b2e",
          "sha256": "16011992952a03c56eedfc14c73fc8f08059d3f5e16b3f5ad3380ca8b5114301"
        },
        "downloads": -1,
        "filename": "axon_ECRG-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1e05e0589928b4b92de303b4e0cd4b2e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9710,
        "upload_time": "2022-01-03T00:13:32",
        "upload_time_iso_8601": "2022-01-03T00:13:32.532143Z",
        "url": "https://files.pythonhosted.org/packages/63/82/7009e23b1a5b11122e0a191500f515e9ae0e1fdc744bf20c53ecd9033b9c/axon_ECRG-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0795e52cba3e822af21a767166b31e6d151b628b77f9528c288c15d6493d8510",
          "md5": "b2f3b717ed3edbe8ba4f6022689ac71d",
          "sha256": "ce131cc6e288e9926346edc810b476e31fc5f71b1e488e25a1919868f59bf565"
        },
        "downloads": -1,
        "filename": "axon-ECRG-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b2f3b717ed3edbe8ba4f6022689ac71d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7490,
        "upload_time": "2022-01-03T00:13:34",
        "upload_time_iso_8601": "2022-01-03T00:13:34.665452Z",
        "url": "https://files.pythonhosted.org/packages/07/95/e52cba3e822af21a767166b31e6d151b628b77f9528c288c15d6493d8510/axon-ECRG-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "416633c2644bc18df2838a35ead28f1e5d6ef29728d74bb91d3d19bfa393f73d",
          "md5": "480209229796baf323a6a026c1388d64",
          "sha256": "487faefcdeff5fbe8a647237be022174bbbb546ab3a0663f3c5705b99c5badff"
        },
        "downloads": -1,
        "filename": "axon_ECRG-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "480209229796baf323a6a026c1388d64",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11030,
        "upload_time": "2022-01-04T20:34:25",
        "upload_time_iso_8601": "2022-01-04T20:34:25.705503Z",
        "url": "https://files.pythonhosted.org/packages/41/66/33c2644bc18df2838a35ead28f1e5d6ef29728d74bb91d3d19bfa393f73d/axon_ECRG-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f43f1b4c8153249ba8934d365971e87f3c9c6dbd4186a523e2a90466e07dcfc",
          "md5": "313271ad9c75b7f4dcffe458a607d350",
          "sha256": "0cff849495d87eba8625cf967d7cf326e66c4acc8a247781cc78129af7e074f0"
        },
        "downloads": -1,
        "filename": "axon-ECRG-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "313271ad9c75b7f4dcffe458a607d350",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8523,
        "upload_time": "2022-01-04T20:34:26",
        "upload_time_iso_8601": "2022-01-04T20:34:26.821515Z",
        "url": "https://files.pythonhosted.org/packages/5f/43/f1b4c8153249ba8934d365971e87f3c9c6dbd4186a523e2a90466e07dcfc/axon-ECRG-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "258d132f08778f2a7ab8fe475cee9ea504f85a68d84f14e9f95ecb1fc5a36c51",
          "md5": "e4919c549b549569f67301ff63b6ed16",
          "sha256": "076f4e04a96fb8223c1d4d062aed28e513524b7def7d45d8851e24d199811e9d"
        },
        "downloads": -1,
        "filename": "axon-ECRG-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e4919c549b549569f67301ff63b6ed16",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8799,
        "upload_time": "2022-01-05T20:27:47",
        "upload_time_iso_8601": "2022-01-05T20:27:47.790954Z",
        "url": "https://files.pythonhosted.org/packages/25/8d/132f08778f2a7ab8fe475cee9ea504f85a68d84f14e9f95ecb1fc5a36c51/axon-ECRG-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2d4f19ee39bfa452196074a0d26e270268db82f46581fe72e1c70ac3a6634b91",
          "md5": "463b74d3f8fdd0c1c6a8484b2d594c4e",
          "sha256": "22248cd619cb8ac3325a45f857821dc565601f2fdbc35e2126a230b146724e40"
        },
        "downloads": -1,
        "filename": "axon_ECRG-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "463b74d3f8fdd0c1c6a8484b2d594c4e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12961,
        "upload_time": "2022-01-06T21:39:18",
        "upload_time_iso_8601": "2022-01-06T21:39:18.936561Z",
        "url": "https://files.pythonhosted.org/packages/2d/4f/19ee39bfa452196074a0d26e270268db82f46581fe72e1c70ac3a6634b91/axon_ECRG-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d590cb1bf9f8f3f0ebfeeb133cb1275ed69daf48382422a1c77a854616faf736",
          "md5": "2bdbc3e38df5e723d14ae6b4190b5caf",
          "sha256": "b357821cb6d8acf4f936239ba41e1c2f50a03c6ddd9cfa3faaef98884fd4e811"
        },
        "downloads": -1,
        "filename": "axon-ECRG-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2bdbc3e38df5e723d14ae6b4190b5caf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11335,
        "upload_time": "2022-01-06T21:39:20",
        "upload_time_iso_8601": "2022-01-06T21:39:20.419090Z",
        "url": "https://files.pythonhosted.org/packages/d5/90/cb1bf9f8f3f0ebfeeb133cb1275ed69daf48382422a1c77a854616faf736/axon-ECRG-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "90cc3473c677f2a62d639e204c369144389fde97f692280b8370298550603540",
          "md5": "623b532e2ae71f2b6d47d73732e50920",
          "sha256": "fb72539e28fc9fe7c68777e5fdf2043d93c1940ccb9f209d1472a06d06199360"
        },
        "downloads": -1,
        "filename": "axon_ECRG-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "623b532e2ae71f2b6d47d73732e50920",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 14122,
        "upload_time": "2022-02-02T16:23:52",
        "upload_time_iso_8601": "2022-02-02T16:23:52.749253Z",
        "url": "https://files.pythonhosted.org/packages/90/cc/3473c677f2a62d639e204c369144389fde97f692280b8370298550603540/axon_ECRG-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ff88918c4cc6ae500632fc5f350e9cead6bd44da5cdcf5ad6accdb08f6800a8d",
          "md5": "c433a78d9c8f0ade401797f165427fb5",
          "sha256": "f8bc1087720ff529e206ded572c1bf6d41e078661dcdc9f0f4fe11080553990d"
        },
        "downloads": -1,
        "filename": "axon-ECRG-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "c433a78d9c8f0ade401797f165427fb5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12997,
        "upload_time": "2022-02-02T16:23:54",
        "upload_time_iso_8601": "2022-02-02T16:23:54.939451Z",
        "url": "https://files.pythonhosted.org/packages/ff/88/918c4cc6ae500632fc5f350e9cead6bd44da5cdcf5ad6accdb08f6800a8d/axon-ECRG-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e5e214ca3b4644b43d4ed46ab4375cf6d7c1b9dcdb0f5f4adf2075688f73b5ab",
          "md5": "58326dbe471e82b2e8cf581cebf46d6d",
          "sha256": "47adc6c7ed1dd9178f06a7171f1d9d30b05c82191e5de38f30361ae2730d5183"
        },
        "downloads": -1,
        "filename": "axon_ECRG-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "58326dbe471e82b2e8cf581cebf46d6d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17037,
        "upload_time": "2022-02-11T00:22:58",
        "upload_time_iso_8601": "2022-02-11T00:22:58.894591Z",
        "url": "https://files.pythonhosted.org/packages/e5/e2/14ca3b4644b43d4ed46ab4375cf6d7c1b9dcdb0f5f4adf2075688f73b5ab/axon_ECRG-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9d3231825ab60de02bfcf365583a82003037b7135c423c7d8171c916877b37f1",
          "md5": "72a3169d25b30fa892f3337dd77f93f9",
          "sha256": "fc6c38e34ce4cd9ce425f01a1b3908b90ee6998b98b782b3a68568948be38593"
        },
        "downloads": -1,
        "filename": "axon-ECRG-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "72a3169d25b30fa892f3337dd77f93f9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14958,
        "upload_time": "2022-02-11T00:22:59",
        "upload_time_iso_8601": "2022-02-11T00:22:59.939866Z",
        "url": "https://files.pythonhosted.org/packages/9d/32/31825ab60de02bfcf365583a82003037b7135c423c7d8171c916877b37f1/axon-ECRG-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "99b40e07d5b0b2f6ef412f3aaf03920dc335c81ff1b8fbf58b23b2b5ab9e86ff",
          "md5": "2ac73aee057d82de74a1a70e5abe2152",
          "sha256": "3c4ec6b1b7f3ae72511d710a539d8ec847f3c84b926771780239cf70c71f1fb9"
        },
        "downloads": -1,
        "filename": "axon_ECRG-0.1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2ac73aee057d82de74a1a70e5abe2152",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19409,
        "upload_time": "2022-10-14T17:30:32",
        "upload_time_iso_8601": "2022-10-14T17:30:32.760022Z",
        "url": "https://files.pythonhosted.org/packages/99/b4/0e07d5b0b2f6ef412f3aaf03920dc335c81ff1b8fbf58b23b2b5ab9e86ff/axon_ECRG-0.1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "99b40e07d5b0b2f6ef412f3aaf03920dc335c81ff1b8fbf58b23b2b5ab9e86ff",
        "md5": "2ac73aee057d82de74a1a70e5abe2152",
        "sha256": "3c4ec6b1b7f3ae72511d710a539d8ec847f3c84b926771780239cf70c71f1fb9"
      },
      "downloads": -1,
      "filename": "axon_ECRG-0.1.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2ac73aee057d82de74a1a70e5abe2152",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 19409,
      "upload_time": "2022-10-14T17:30:32",
      "upload_time_iso_8601": "2022-10-14T17:30:32.760022Z",
      "url": "https://files.pythonhosted.org/packages/99/b4/0e07d5b0b2f6ef412f3aaf03920dc335c81ff1b8fbf58b23b2b5ab9e86ff/axon_ECRG-0.1.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}