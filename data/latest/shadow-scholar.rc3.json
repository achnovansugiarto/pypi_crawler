{
  "info": {
    "author": "",
    "author_email": "Luca Soldaini <lucas@allenai.org>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Typing :: Typed"
    ],
    "description": "<h1 align=\"center\">Shadow Scholar</h1>\n<p align=\"center\">\n    <img src=\"https://raw.githubusercontent.com/allenai/shadow-scholar/main/res/shadow-scholar.png\" width=\"400\" height=\"400\" align=\"center\" />\n</p>\n\n## Installation\n\nTo install from PyPI, simply run:\n\n```bash\npip install shadow-scholar\n```\n\n## Available Scripts\n\nEach script is launched with `shadow <entrypoint_name>`.\nFor a full list of all entry points, run `shadow -l`.\n\n\n## Getting Access to AWS services\n\nTo run the scripts that use AWS services, you will need to have access to the following services:\n\n- [Athena](https://aws.amazon.com/athena/)\n- [S3](https://aws.amazon.com/s3/)\n\nThe best way to do so is to obtain AWS credentials (access key and secret key) and set them as environment variables.\n\n\n## Writing your own script\n\nTo write your own script for Shadow Scholar, follow these steps:\n\n**Step 1**: Choose where to add your code in Shadow Scholar. It can either be\nin an existing module, such as `shadow_scholar.collections.athena`, or in a\nnew module.\n\n**Step 2**: Understand that the entry point for your script should be a single\nfunction; think of this as the `main` function.\n\n**Step 3**: Write your main function. For each argument you expect a user might\nwant to provide from command line, add a corresponding argument to the\nfunction. For example:\n\n```python\ndef my_script(\n    arg1: str,\n    arg2: int,\n    arg3: bool,\n    arg4: Optional[str] = None,\n):\n    # Do something with the arguments\n    pass\n```\n\n**Step 4**: Add the cli from `shadow_scholar.cli` to your script. This will\nallow users to run your script from the command line. For example:\n\n```python\nfrom shadow_scholar.cli import cli\nfrom typing import Optional\n\n@cli(\n    name=\"scripts_collection.my_script\",\n    arguments=...,\n    requirements=...,\n)\ndef my_script(\n    arg1: str,\n    arg2: int,\n    arg3: bool,\n    arg4: Optional[str] = None,\n):\n    # Do something with the arguments\n    pass\n```\n\nThe `cli` decorator takes three arguments: the name of the script, a list\nof arguments, and a list of requirements. The name of the script should be\nthe name a user would use to run the script from the command line. In the\nexample above, the user would run the script with `shadow\nscripts_collection.my_script`.\n\n**Step 5**: Add arguments to your script. Each argument should be an instance\nof `shadow_scholar.cli.Argument`. For example:\n\n```python\nfrom typing import Optional\nfrom shadow_scholar.cli import Argument, cli\n\n@cli(\n    name=\"scripts_collection.my_script\",\n    arguments=[\n        Argument(\n            name=\"arg1\",\n            type=str,\n            help=\"This is the first argument\",\n        ),\n        Argument(\n            name=\"arg2\",\n            type=int,\n            help=\"This is the second argument\",\n        ),\n        Argument(\n            name=\"arg3\",\n            type=bool,\n            help=\"This is the third argument\",\n        ),\n        Argument(\n            name=\"arg4\",\n            type=str,\n            help=\"This is the fourth argument\",\n            default=None,\n        ),\n    ],\n    requirements=...,\n)\ndef my_script(\n    arg1: str,\n    arg2: int,\n    arg3: bool,\n    arg4: Optional[str] = None,\n):\n    # Do something with the arguments\n    pass\n```\n\nYou should have as many Arguments as you have arguments to your main function.\n\n\n**Step 6**: Add requirements to your script. Each requirement should be an\nin the format used by `requirements.txt`. When using optional requirements,\nmake sure to wrap them in a `with safe_import()` statement at the top of your\nscript. For example:\n\n```python\nfrom typing import Optional\nfrom shadow_scholar.cli import Argument, cli, safe_import\n\nwith safe_import() as safe:\n    # this will not fail if pandas is not installed\n    import pandas as pd\n\n\n@cli(\n    name=\"scripts_collection.my_script\",\n    arguments=[\n        Argument(\n            name=\"arg1\",\n            type=str,\n            help=\"This is the first argument\",\n        ),\n        Argument(\n            name=\"arg2\",\n            type=int,\n            help=\"This is the second argument\",\n        ),\n        Argument(\n            name=\"arg3\",\n            type=bool,\n            help=\"This is the third argument\",\n        ),\n        Argument(\n            name=\"arg4\",\n            type=str,\n            help=\"This is the fourth argument\",\n            default=None,\n        ),\n    ],\n    requirements=[\n        \"pandas>=1.0.0\",\n    ],\n)\ndef my_script(\n    arg1: str,\n    arg2: int,\n    arg3: bool,\n    arg4: Optional[str] = None,\n):\n    # Do something with the arguments\n    pass\n```\n\n**Step 7**: Import the function in the `__init__.py` file of the module. For\nexample, if you added your script to `shadow_scholar/examples.py`, you would\nadd the following to `shadow_scholar/__init__.py`:\n\n```python\nfrom shadow_scholar.examples import my_script\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "Apache-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "shadow-scholar",
    "package_url": "https://pypi.org/project/shadow-scholar/",
    "platform": null,
    "project_url": "https://pypi.org/project/shadow-scholar/",
    "project_urls": {
      "Homepage": "https://github.com/allenai/shadow-scholar",
      "Source": "https://github.com/allenai/shadow-scholar",
      "Tracker": "https://github.com/allenai/shadow-scholar/issues"
    },
    "release_url": "https://pypi.org/project/shadow-scholar/0.5.0/",
    "requires_dist": [
      "necessary (>=0.4.1)",
      "typing-extensions (>=4.0.0)",
      "platformdirs (>=2.4.0)",
      "cachetools (>=4.2.4)",
      "black (>=22.6.0) ; extra == 'dev'",
      "isort (>=5.10.1) ; extra == 'dev'",
      "mypy (>=0.971) ; extra == 'dev'",
      "pytest (>=5.2) ; extra == 'dev'",
      "ipython (>=8.4.0) ; extra == 'dev'",
      "autopep8 (>=1.7.0) ; extra == 'dev'",
      "flake8 (>=5.0) ; extra == 'dev'",
      "ipdb (>=0.13.0) ; extra == 'dev'",
      "flake8-pyi (>=22.8.1) ; extra == 'dev'",
      "Flake8-pyproject (>=1.1.0) ; extra == 'dev'"
    ],
    "requires_python": ">=3.8",
    "summary": "🎓🕶️ A collection of utilities and demos from the Semantic Scholar Research Team 🕶️🎓",
    "version": "0.5.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17423918,
  "releases": {
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a7747cc2179d14f1c8a7c8089ce36b28702e3dff12c254c9f80c59509e084f43",
          "md5": "c35b0f60d3cf61b08266c76249339297",
          "sha256": "1e257ceda27c04a6208ba1640de50684f0c7bda0df111ffe5a2e01aa07c2a7f8"
        },
        "downloads": -1,
        "filename": "shadow_scholar-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c35b0f60d3cf61b08266c76249339297",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 1428634,
        "upload_time": "2023-03-10T05:37:46",
        "upload_time_iso_8601": "2023-03-10T05:37:46.141823Z",
        "url": "https://files.pythonhosted.org/packages/a7/74/7cc2179d14f1c8a7c8089ce36b28702e3dff12c254c9f80c59509e084f43/shadow_scholar-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "43a74bbda08534e0ebb5339f398454a39a35bf922cb1bd63a7144bb4e0928956",
          "md5": "9adaa1d70fd062a7a881adc2dd210c54",
          "sha256": "1b3a45560ce452e6021b7d21f9def5757e963a371b8e283c9e8a40681caddfef"
        },
        "downloads": -1,
        "filename": "shadow_scholar-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9adaa1d70fd062a7a881adc2dd210c54",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 1419617,
        "upload_time": "2023-03-10T05:37:48",
        "upload_time_iso_8601": "2023-03-10T05:37:48.178372Z",
        "url": "https://files.pythonhosted.org/packages/43/a7/4bbda08534e0ebb5339f398454a39a35bf922cb1bd63a7144bb4e0928956/shadow_scholar-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea0e28b50d30e5bd47a8060da17455b736d313eadfe03e3298751ae418aaf546",
          "md5": "48eb9caf79700ae4df2aaec6e285e6e2",
          "sha256": "591ce8cba2980a21c902b7522279d2fa4f0b9b65b523e2a6c670c9475e29f950"
        },
        "downloads": -1,
        "filename": "shadow_scholar-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "48eb9caf79700ae4df2aaec6e285e6e2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 1428658,
        "upload_time": "2023-03-10T05:46:13",
        "upload_time_iso_8601": "2023-03-10T05:46:13.520590Z",
        "url": "https://files.pythonhosted.org/packages/ea/0e/28b50d30e5bd47a8060da17455b736d313eadfe03e3298751ae418aaf546/shadow_scholar-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0723fdf2a585deac5c5ce54bbb6f417364f5db8d69b3f097f668e31ca0e28d20",
          "md5": "32f91d6aebb0383ac09d19775af0e8b4",
          "sha256": "91d40001c1ac6deec3bcf0ddd54b28d94961070a4468922fff26d20efd5709e9"
        },
        "downloads": -1,
        "filename": "shadow-scholar-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "32f91d6aebb0383ac09d19775af0e8b4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 1419644,
        "upload_time": "2023-03-10T05:46:15",
        "upload_time_iso_8601": "2023-03-10T05:46:15.101440Z",
        "url": "https://files.pythonhosted.org/packages/07/23/fdf2a585deac5c5ce54bbb6f417364f5db8d69b3f097f668e31ca0e28d20/shadow-scholar-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a536c645c4d66ef08bbdf16c571b8bdc317c0ef3fa32072a22ba65e462c6355",
          "md5": "fe4f2e64f78fd84a23d0f1708ab667de",
          "sha256": "039611d7d0fffb0c8c910f2acac29cad513e87be4c368d810f5a8bd6bdaa9c8d"
        },
        "downloads": -1,
        "filename": "shadow_scholar-0.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fe4f2e64f78fd84a23d0f1708ab667de",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 1435259,
        "upload_time": "2023-03-24T01:01:38",
        "upload_time_iso_8601": "2023-03-24T01:01:38.620510Z",
        "url": "https://files.pythonhosted.org/packages/8a/53/6c645c4d66ef08bbdf16c571b8bdc317c0ef3fa32072a22ba65e462c6355/shadow_scholar-0.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c0bc3eba2adf66a02f1b340cb41403fca9b90b616abd3359fdc8b232cd3fbf27",
          "md5": "c54abcbdb516a5a002ef6f2a485659a6",
          "sha256": "2db7ad297d193abe89e852f0d4b09e31db179e7055bbd4cc0d3f9e04a6755c12"
        },
        "downloads": -1,
        "filename": "shadow-scholar-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c54abcbdb516a5a002ef6f2a485659a6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 1424689,
        "upload_time": "2023-03-24T01:01:40",
        "upload_time_iso_8601": "2023-03-24T01:01:40.546440Z",
        "url": "https://files.pythonhosted.org/packages/c0/bc/3eba2adf66a02f1b340cb41403fca9b90b616abd3359fdc8b232cd3fbf27/shadow-scholar-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8a536c645c4d66ef08bbdf16c571b8bdc317c0ef3fa32072a22ba65e462c6355",
        "md5": "fe4f2e64f78fd84a23d0f1708ab667de",
        "sha256": "039611d7d0fffb0c8c910f2acac29cad513e87be4c368d810f5a8bd6bdaa9c8d"
      },
      "downloads": -1,
      "filename": "shadow_scholar-0.5.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "fe4f2e64f78fd84a23d0f1708ab667de",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 1435259,
      "upload_time": "2023-03-24T01:01:38",
      "upload_time_iso_8601": "2023-03-24T01:01:38.620510Z",
      "url": "https://files.pythonhosted.org/packages/8a/53/6c645c4d66ef08bbdf16c571b8bdc317c0ef3fa32072a22ba65e462c6355/shadow_scholar-0.5.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c0bc3eba2adf66a02f1b340cb41403fca9b90b616abd3359fdc8b232cd3fbf27",
        "md5": "c54abcbdb516a5a002ef6f2a485659a6",
        "sha256": "2db7ad297d193abe89e852f0d4b09e31db179e7055bbd4cc0d3f9e04a6755c12"
      },
      "downloads": -1,
      "filename": "shadow-scholar-0.5.0.tar.gz",
      "has_sig": false,
      "md5_digest": "c54abcbdb516a5a002ef6f2a485659a6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 1424689,
      "upload_time": "2023-03-24T01:01:40",
      "upload_time_iso_8601": "2023-03-24T01:01:40.546440Z",
      "url": "https://files.pythonhosted.org/packages/c0/bc/3eba2adf66a02f1b340cb41403fca9b90b616abd3359fdc8b232cd3fbf27/shadow-scholar-0.5.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}