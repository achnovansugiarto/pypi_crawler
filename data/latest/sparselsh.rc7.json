{
  "info": {
    "author": "Brandon Roberts",
    "author_email": "brandon@bxroberts.org",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# SparseLSH\n\nA locality sensitive hashing library with an emphasis on large, highly-dimensional datasets.\n\n## Features\n\n- Fast and memory-efficient calculations using sparse matrices.\n- Built-in support for key-value storage backends: pure-Python, Redis (memory-bound), LevelDB, BerkeleyDB\n- Multiple hash indexes support (based on Kay Zhu's lshash)\n- Built-in support for common distance/objective functions for ranking outputs.\n\n## Details\n\nSparseLSH is based on a fork of Kay Zhu's lshash, and is suited for datasets that won't\nfit into main memory or are highly dimensional. Using sparse matrices\nallows for speedups of easily over an order of magnitude compared to using dense, list-based\nor numpy array-based vector math. Sparse matrices also makes it possible to deal with\nthese datasets purely in memory using python dicts or through Redis. When this isn't\nappropriate, you can use one of the disk-based key-value stores, LevelDB and BerkeleyDB.\nSerialization is done using cPickle (for raw C speedups), falling back to python\npickle if it's not available.\n\n## Installation\n\nThe easy way:\n\n    pip install sparselsh\n\nOr you can clone this repo and follow these instructions:\n\n`SparseLSH` depends on the following libraries:\n- [numpy](http://www.numpy.org/)\n- [scipy](http://www.scipy.org/)\n\nOptionally (for in-memory and disk-based persistence):\n- [redis](https://pypi.python.org/pypi/redis/)\n- [leveldb](https://code.google.com/p/py-leveldb/)\n- [bsddb](https://pypi.python.org/pypi/bsddb3/6.0.1) (built-in on Python 2.7.x)\n\nTo install (minimal install):\n\n    python setup.py install\n\nIf you would like to use the LevelDB or Redis storage backends, you can\ninstall the dependencies from the `optional-requirements.txt`:\n\n    pip install -r optional-requirements.txt\n\n## Quickstart\n\nYou can quickly use LSH using the bundled `sparselsh` command line utility. Simply pass the path to a file containing records to be clustered, one per line, and the script will output groups of similar items.\n\n    sparselsh path/to/recordsfile.txt\n\nTo create 4-bit hashes for input data of 7 dimensions:\n\n    from sparselsh import LSH\n    from scipy.sparse import csr_matrix\n\n    X = csr_matrix([\n        [3, 0, 0, 0, 0, 0, -1],\n        [0, 1, 0, 0, 0, 0,  1],\n        [1, 1, 1, 1, 1, 1,  1]\n    ])\n\n    # One label for each input point\n    y = [\"label-one\", \"second\", \"last\"]\n\n    lsh = LSH(\n        4,\n        X.shape[1],\n        num_hashtables=1,\n        storage_config={\"dict\":None}\n    )\n\n    # If you're using >= v2.1.0, this is much faster\n    # lsh.index(X, extra_data=y)\n\n    # For all versions\n    for ix in range(X.shape[0]):\n        x = X.getrow(ix)\n        c = y[ix]\n        lsh.index( x, extra_data=c)\n\n    # Build a 1-D (single row) sparse matrix\n    X_sim = csr_matrix([[1, 1, 1, 1, 1, 1, 0]])\n    # find the point in X nearest to X_sim\n    points = lsh.query(X_sim, num_results=1)\n\nThe query above result in a list of matrix-class tuple & similarity\nscore tuples. A lower score is better in this case (the score here is 1.0).\nHere's a breakdown of the return value when `query` is called with a\nsingle input row (1-dimensional sparse matrix, the output is different\nwhen passing multiple query points):\n\n    [((<1x7 sparse matrix of type '<type 'numpy.int64'>' with 7 stored elements in Compressed Sparse Row format>, 'label'), 1.0)]\n\nWe can look at the most similar matched item by accessing the sparse array\nand invoking it's `todense` function:\n\n    #                      ,------- Get first result-score tuple\n    #                     |   ,---- Get data. [1] is distance score\n    #                     |  |  ,-- Get the point. [1] is extra_data\n    #                     |  |  |\n    In [11]: print points[0][0][0].todense()\n    [[1 1 1 1 1 1 1]]\n\nYou can also pass multiple records to `query` by simply increasing the\ndimension of the input to `query`. This will change the output data\nto have one extra dimension, representing the input query. (NOTE: When\nthen dimension is 1, a.k.a. a single sparse row, this extra dimension won't\nbe added.) Here's the output when `query` is passed a 2-dimensional input:\n\n    [\n      [((<1x7 sparse matrix ...>, 'label'), 1.0)],\n      [((<1x7 sparse matrix ...>, 'extra'), 0.8),\n       ((<1x7 sparse matrix ...>, 'another'), 0.3)]\n    ]\n\nHere, you can see an extra dimension, one for each query point passed\nto `query`. The data structure for each query point result is the same\nas the 1-Dimensional output.\n\n## Main Interface\n\nMost of the parameters are supplied at class init time:\n\n    LSH( hash_size,\n         input_dim,\n         num_of_hashtables=1,\n         storage_config=None,\n         matrices_filename=None,\n         overwrite=False)\n\nParameters:\n\n    hash_size:\n        The length of the resulting binary hash. This controls how many \"buckets\"\n        there will be for items to be sorted into.\n\n    input_dim:\n        The dimension of the input vector. This needs to be the same as the input\n        points.\n\n    num_hashtables = 1:\n        (optional) The number of hash tables used. More hashtables increases the\n        probability of hash-collisions and the more similar items are likely\n        to be found for a query item. Increase this to get better accuracy\n        at the expense of increased memory usage.\n\n    storage = None:\n        (optional) A dict representing the storage backend and configuration\n        options. The following storage backends are supported with the following\n        configurations:\n            In-Memory Python Dictionary:\n                {\"dict\": None} # Takes no options\n            Redis:\n                {\"redis\": {\"host\": \"127.0.0.1\", \"port\": 6379, \"db\": 0}\n            LevelDB:\n                {\"leveldb\":{\"db\": \"ldb\"}}\n                Where \"ldb\" specifies the directory to store the LevelDB database.\n                (In this case it will be `./ldb/`)\n            Berkeley DB:\n                {\"berkeleydb\":{\"filename\": \"./db\"}}\n                Where \"filename\" is the location of the database file.\n\n    matrices_filename = None:\n        (optional) Specify the path to the .npz file random matrices are stored\n        or to be stored if the file does not exist yet. If you change the input\n        dimensions or the number of hashtables, you'll need to set the following\n        option, overwrite, to True, or delete this file.\n\n    overwrite = False:\n        (optional) Whether to overwrite the matrices file if it already exists.\n\n### Index (Add points to hash table):\n\n- To index a data point of a given `LSH` instance:\n\n    lsh.index(input_point, extra_data=None)\n\nParameters:\n\n    input_point:\n        The input data point is an array or tuple of numbers of input_dim.\n\n    extra_data = None:\n        (optional) Extra data to be added along with the input_point.\n        This can be used to hold values like class labels, URIs, titles, etc.\n\nThis function returns nothing.\n\n### Query (Search for similar points)\n\nTo query a data point against a given `LSH` instance:\n\n    lsh.query(query_point, num_results=None, distance_func=\"euclidean\")\n\nParameters:\n\n    query_point:\n        The query data point is a sparse CSR matrix.\n\n    num_results = None:\n        (optional) Integer, specifies the max amount of results to be\n        returned. If not specified all candidates will be returned as a\n        list in ranked order.\n        NOTE: You do not save processing by limiting the results. Currently,\n        a similarity ranking and sort is done on all items in the hashtable\n        regardless if this parameter.\n\n    distance_func = \"euclidean\":\n        (optional) Distance function to use to rank the candidates. By default\n        euclidean distance function will be used.\n\nReturns a list of tuples, each of which has the original input point (which\nwill be a tuple of csr-matrix, extra_data or just the csr-matrix if no extra\ndata was supplied) and a similarity score.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/brandonrobertz/SparseLSH/releases/tag/v2.1.1",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/brandonrobertz/sparselsh",
    "keywords": "clustering,sparse,lsh",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sparselsh",
    "package_url": "https://pypi.org/project/sparselsh/",
    "platform": null,
    "project_url": "https://pypi.org/project/sparselsh/",
    "project_urls": {
      "Download": "https://github.com/brandonrobertz/SparseLSH/releases/tag/v2.1.1",
      "Homepage": "https://github.com/brandonrobertz/sparselsh"
    },
    "release_url": "https://pypi.org/project/sparselsh/2.1.1/",
    "requires_dist": [
      "numpy (<2.0,>=1.18.6)",
      "scipy (<2.0,>=1.0.0)",
      "scikit-learn (<2.0,>=0.24.0)",
      "redis (<3.0,>=2.10.1) ; extra == 'redis'",
      "pytest ; extra == 'test'"
    ],
    "requires_python": "",
    "summary": "A locality sensitive hashing library with an emphasis on large, sparse datasets.",
    "version": "2.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16166505,
  "releases": {
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82ae77d04d1596c4870254fe6973b704d976d596a5f4133acd815a5f6aae6683",
          "md5": "0cee0a27e9cf6c80f6a52bb83e40f3e6",
          "sha256": "2eb7652f68a4df9cbdb003d1fcd8f4d764ced67bc060fb7c3b7c176e242cf401"
        },
        "downloads": -1,
        "filename": "sparselsh-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0cee0a27e9cf6c80f6a52bb83e40f3e6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9374,
        "upload_time": "2017-02-09T01:34:30",
        "upload_time_iso_8601": "2017-02-09T01:34:30.778543Z",
        "url": "https://files.pythonhosted.org/packages/82/ae/77d04d1596c4870254fe6973b704d976d596a5f4133acd815a5f6aae6683/sparselsh-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f48cfe266fc6d8c202e1369bfe553abe8a35906bc4d91776c4b4146e6a9c4086",
          "md5": "1f2374437d7d6e88f0bfa46ce4792a02",
          "sha256": "fb9476bfd65ad0137b1e053737c666070af32b7de57579ddab0d7e46ade893ab"
        },
        "downloads": -1,
        "filename": "sparselsh-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1f2374437d7d6e88f0bfa46ce4792a02",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9434,
        "upload_time": "2017-02-09T01:42:56",
        "upload_time_iso_8601": "2017-02-09T01:42:56.610659Z",
        "url": "https://files.pythonhosted.org/packages/f4/8c/fe266fc6d8c202e1369bfe553abe8a35906bc4d91776c4b4146e6a9c4086/sparselsh-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d8125c57b94519b1e425e92ca02536755792cbc27e66d407609dc578e74a53fe",
          "md5": "8864e90bfb0d09d09ac261a3694857f5",
          "sha256": "fea2bf3cb9f9d289e640fe5637dfc3a6dff38b0f64011ec9d47031f564993e34"
        },
        "downloads": -1,
        "filename": "sparselsh-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8864e90bfb0d09d09ac261a3694857f5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9420,
        "upload_time": "2017-02-09T01:54:05",
        "upload_time_iso_8601": "2017-02-09T01:54:05.395908Z",
        "url": "https://files.pythonhosted.org/packages/d8/12/5c57b94519b1e425e92ca02536755792cbc27e66d407609dc578e74a53fe/sparselsh-1.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "250e3b1327f67407357cf75540686b635e81563a03b8699ff9ee1011181ceb15",
          "md5": "2a6856d126d1f541bee01b818d8e7809",
          "sha256": "73e8150a5fab0b03f90dd802333d7b6ad5e0d197c0a1c771d3eec35c5ddd5ac8"
        },
        "downloads": -1,
        "filename": "sparselsh-1.1.3-py3.8.egg",
        "has_sig": false,
        "md5_digest": "2a6856d126d1f541bee01b818d8e7809",
        "packagetype": "bdist_egg",
        "python_version": "3.8",
        "requires_python": null,
        "size": 18719,
        "upload_time": "2020-12-27T03:38:58",
        "upload_time_iso_8601": "2020-12-27T03:38:58.340057Z",
        "url": "https://files.pythonhosted.org/packages/25/0e/3b1327f67407357cf75540686b635e81563a03b8699ff9ee1011181ceb15/sparselsh-1.1.3-py3.8.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ecb8e5f65f14935e3030a68d0c19f2d088aeb272cb7a3aca966b6f7a9e62189b",
          "md5": "9d6c4445241824ef633fa27905a92155",
          "sha256": "f3e29c80f86a495a20892323e5016e8c7e745f2539e54525fdec8f7720e66eeb"
        },
        "downloads": -1,
        "filename": "sparselsh-1.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9d6c4445241824ef633fa27905a92155",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10992,
        "upload_time": "2019-02-07T02:59:12",
        "upload_time_iso_8601": "2019-02-07T02:59:12.916516Z",
        "url": "https://files.pythonhosted.org/packages/ec/b8/e5f65f14935e3030a68d0c19f2d088aeb272cb7a3aca966b6f7a9e62189b/sparselsh-1.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e8b28b3e724f02f6d71e4fdb77af4fb7d6f231e4b641b69330dad9bee516bdc1",
          "md5": "167edd6bca9ac978a9b58947b90e3b72",
          "sha256": "aa0b4fc6741caf6fa1ce89f8c1f8da4e22b05388cfc6158fdd83ccd9d02b2401"
        },
        "downloads": -1,
        "filename": "sparselsh-1.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "167edd6bca9ac978a9b58947b90e3b72",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10066,
        "upload_time": "2019-02-07T02:59:14",
        "upload_time_iso_8601": "2019-02-07T02:59:14.448798Z",
        "url": "https://files.pythonhosted.org/packages/e8/b2/8b3e724f02f6d71e4fdb77af4fb7d6f231e4b641b69330dad9bee516bdc1/sparselsh-1.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "68edd442085c07e1a4ed60789f1a797fdceae0b6d81a2a633c5a37b6365d390d",
          "md5": "db872f36df62774e84fbfd57bba464be",
          "sha256": "15436542ae7c85cebf6ae0be0b1f98e5a6bf889e217cd215d733f8494be8f8f7"
        },
        "downloads": -1,
        "filename": "sparselsh-2.0.1.linux-x86_64.tar.gz",
        "has_sig": false,
        "md5_digest": "db872f36df62774e84fbfd57bba464be",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14736,
        "upload_time": "2020-12-27T03:38:59",
        "upload_time_iso_8601": "2020-12-27T03:38:59.524428Z",
        "url": "https://files.pythonhosted.org/packages/68/ed/d442085c07e1a4ed60789f1a797fdceae0b6d81a2a633c5a37b6365d390d/sparselsh-2.0.1.linux-x86_64.tar.gz",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9cc075ff85343529080841e00ec61a4562f9a7c24fcca5e491a2719370edb24f",
          "md5": "5e1173d93516b4a5fdf44283025ac33c",
          "sha256": "293d64e8ad53176bb0fe6f82399babc33fb2ff1b2cf37014a3a503a1e382657d"
        },
        "downloads": -1,
        "filename": "sparselsh-2.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5e1173d93516b4a5fdf44283025ac33c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10789,
        "upload_time": "2020-12-27T03:38:56",
        "upload_time_iso_8601": "2020-12-27T03:38:56.799476Z",
        "url": "https://files.pythonhosted.org/packages/9c/c0/75ff85343529080841e00ec61a4562f9a7c24fcca5e491a2719370edb24f/sparselsh-2.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6dabf05a51376535842a4002524c64c9b0dc3fc79f8fc5de5cf5d4849206dea4",
          "md5": "3317fb21eefb5d03df5fad597664ec84",
          "sha256": "451b3edb06034f2000e79431f27667c1a0014d2e09b3720894bd15c0ac410363"
        },
        "downloads": -1,
        "filename": "sparselsh-2.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3317fb21eefb5d03df5fad597664ec84",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10788,
        "upload_time": "2020-12-27T03:44:30",
        "upload_time_iso_8601": "2020-12-27T03:44:30.696028Z",
        "url": "https://files.pythonhosted.org/packages/6d/ab/f05a51376535842a4002524c64c9b0dc3fc79f8fc5de5cf5d4849206dea4/sparselsh-2.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "06462cf7335608a15821410e44c0a8aefd8582f250e44065b2da6ec50423669a",
          "md5": "2ee93c607bb9be09a4d769dee0fdc4ce",
          "sha256": "99ae923400a16868e8f422d72a0efb5f3d444c3c86581b41aaea0e214472c38a"
        },
        "downloads": -1,
        "filename": "sparselsh-2.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2ee93c607bb9be09a4d769dee0fdc4ce",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12496,
        "upload_time": "2020-12-27T03:44:31",
        "upload_time_iso_8601": "2020-12-27T03:44:31.809626Z",
        "url": "https://files.pythonhosted.org/packages/06/46/2cf7335608a15821410e44c0a8aefd8582f250e44065b2da6ec50423669a/sparselsh-2.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5fc4084f49af5617bb5bb747eb7c8addaf3d2ccf27473d0856e9734f9eea3ff5",
          "md5": "4b91076defba3df68a0d984abb876a9c",
          "sha256": "6ac4a6f00c7a17ec8a46e316ffa1620ec19987e408d46dec5b62b06e7888df69"
        },
        "downloads": -1,
        "filename": "sparselsh-2.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4b91076defba3df68a0d984abb876a9c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 22941,
        "upload_time": "2022-12-20T22:22:19",
        "upload_time_iso_8601": "2022-12-20T22:22:19.966611Z",
        "url": "https://files.pythonhosted.org/packages/5f/c4/084f49af5617bb5bb747eb7c8addaf3d2ccf27473d0856e9734f9eea3ff5/sparselsh-2.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "505ae13e4ce3572397753ae732d0523b50fd2d03ccddf00fa1f4f94f6e2f3834",
          "md5": "ce189babe8a757218bd0b85fdf739255",
          "sha256": "0476224d59f23412832ebd5b55d34e1b56e3d08ba94db9942a72cb1a0bffd773"
        },
        "downloads": -1,
        "filename": "sparselsh-2.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ce189babe8a757218bd0b85fdf739255",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21683,
        "upload_time": "2022-12-20T22:22:21",
        "upload_time_iso_8601": "2022-12-20T22:22:21.969453Z",
        "url": "https://files.pythonhosted.org/packages/50/5a/e13e4ce3572397753ae732d0523b50fd2d03ccddf00fa1f4f94f6e2f3834/sparselsh-2.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5fc4084f49af5617bb5bb747eb7c8addaf3d2ccf27473d0856e9734f9eea3ff5",
        "md5": "4b91076defba3df68a0d984abb876a9c",
        "sha256": "6ac4a6f00c7a17ec8a46e316ffa1620ec19987e408d46dec5b62b06e7888df69"
      },
      "downloads": -1,
      "filename": "sparselsh-2.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4b91076defba3df68a0d984abb876a9c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 22941,
      "upload_time": "2022-12-20T22:22:19",
      "upload_time_iso_8601": "2022-12-20T22:22:19.966611Z",
      "url": "https://files.pythonhosted.org/packages/5f/c4/084f49af5617bb5bb747eb7c8addaf3d2ccf27473d0856e9734f9eea3ff5/sparselsh-2.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "505ae13e4ce3572397753ae732d0523b50fd2d03ccddf00fa1f4f94f6e2f3834",
        "md5": "ce189babe8a757218bd0b85fdf739255",
        "sha256": "0476224d59f23412832ebd5b55d34e1b56e3d08ba94db9942a72cb1a0bffd773"
      },
      "downloads": -1,
      "filename": "sparselsh-2.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "ce189babe8a757218bd0b85fdf739255",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 21683,
      "upload_time": "2022-12-20T22:22:21",
      "upload_time_iso_8601": "2022-12-20T22:22:21.969453Z",
      "url": "https://files.pythonhosted.org/packages/50/5a/e13e4ce3572397753ae732d0523b50fd2d03ccddf00fa1f4f94f6e2f3834/sparselsh-2.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}