{
  "info": {
    "author": "Connor White",
    "author_email": "connorwhite101@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "#  Vys Documentation\n\n\n## DB Schema documentation:\n\n### SqLite Syntax\n```python\nfrom Vys import models\n\ncfg = models.DbCredentials(database='test.db')\n\nclass Employee(models.LiteSchema):\n    def __init__(self, *args, **kwargs):\n        super().__init__(db_credentials=cfg, table='employee')\n```\n\n### Create the schema parameters\n```python\nclass Employee(models.LiteSchema):\n    def __init__(self, *args, **kwargs):\n        super().__init__(db_credentials=cfg, table='employee')\n        self.add_params({\n            'name': {\n                'dbtype': 'varchar(255)',\n                'type': str\n            },\n            'manager': {\n                'dbtype': 'varchar(9)'\n            }\n        })\n        self.init_schema(args, kwargs)\n```\nIDs for SqLite are added automatically. \n\nDbtype and type is different purely for validation purposes - type is for schema validation, dbtype corresponds to the data type in the database. \n\n### Query\n```python\nuser = User\nx = user.find(\n    query={\n        'user': 'connor.white'\n    },\n    fetch=['perms']\n)\n# Returns [{'ID': 'ShlLuRWaa', 'createdAt': '2020-09-04 11:32:44.132863', 'updatedAt': '2020-09-04 11:32:44.132863', 'manager': None, 'name': 'tefrstf'}\n\nx = user.find_one(\n    query={\n        'user': 'connor.white'\n    },\n    fetch=['perms']\n)\n# Returns {'ID': 'ShlLuRWaa', 'createdAt': '2020-09-04 11:32:44.132863', 'updatedAt': '2020-09-04 11:32:44.132863', 'manager': None, 'name': 'tefrstf'}\n\nuser.populate(\n    query={'name': 'tefrstf'} \n)\nprint(user)\n\n# OR\n\nuser.populate(\n    name='newname'\n)\n\n# Returns # Returns {'ID': 'ShlLuRWaa', 'createdAt': '2020-09-04 11:32:44.132863', 'updatedAt': '2020-09-04 11:32:44.132863', 'manager': None, 'name': 'tefrstf'}\n\nuser.populate_many(\n    query={'name': 'tefrstf'} \n)\nprint(user)\n# Returns {'createdAt': ['2020-09-04 11:32:44.132863', '2020-09-04 11:33:02.841748', '2020-09-04 11:33:37.348974', '2020-09-04 11:37:57.689165', '2020-09-04 11:38:11.541987', '2020-09-04 11:39:46.465859', '2020-09-04 11:40:28.353423'], 'updatedAt': ['2020-09-04 11:32:44.132863', '2020-09-04 11:33:02.841748', '2020-09-04 11:33:37.348974', '2020-09-04 11:37:57.689165', '2020-09-04 11:38:11.541987', '2020-09-04 11:39:46.465859', '2020-09-04 11:40:28.353423'], 'name': ['tefrstf', 'tefrstf', 'tefrstf', 'tefrstf', 'tefrstf', 'tefrstf', 'tefrstf'], 'manager': [None, None, None, None, None, None, None], 'ID': ['ShlLuRWaa', 'jkkVrB06P', 'LXCBlqUhN', 'tLCrf5EzW', '8EJzjBtwO', 'TrPxwtTXo', 'wRTuXYKe1']}\n\n```\nThe fetch parameter is not required here, excluding it will return all columns. Find will return multiple, find_one only one. \n\n### Create\n```python\nUser.create({\n    'user': 'new',\n    'password': 'hffgv'\n})\n\nuser = User('create', name='name', password='hffgv')\n\n```\nThe id will be done automatically, as will the \"CreatedAt\" and \"UpdatedAt\" Fields. This will insert a new row into the db. \n\n### Update\n```python\nUser.find_and_update(\n    query={\n        'perms': 'user'\n    },\n    update={\n        'perms': 'silly'\n    }\n)\n\n############################################\n\nUser.populate({\n    'name': 'tefrstf'\n})\n\nmark.update({\n    'name': 'testing123'\n})\n\n# OR\n\nmark.update(\n    name='testing123'\n)\n```\nFind and update will update all instances - as the \"find\" function returns a python dict, you can input them directly into the query section here.\nUsing the .update function on a class that has been populated will only update that row.\n\n### Adding a foreign key to a table. \n\n```python\noptions = {\n    'column': 'manager',\n    'table': 'managers',\n    'foreign column': 'ID'\n}\n\n\nclass Employee(models.LiteSchema):\n    def __init__(self, *args, **kwargs):\n        super().__init__(db_credentials=cfg, table='employee', f_keys=options)\n        self.add_params({\n            'name': {\n                'dbtype': 'varchar(255)',\n                'type': str\n            },\n            'manager': {\n                'dbtype': 'varchar(9)'\n            }\n        })\n        self.expand_param(\n            param='manager',\n            fetch='ID, name'\n        )\n        self.init_schema(args, kwargs)\n\n\n```\nThis snippet creates a column linked to a foreign key. In the \"options\" dict, the keys should be self explanatory.\nThe expand_param function expands the return - so instead of returning the ID of the field, it will return info from the column in which that key is present in the other table. \n\n### Creating the virtual population. \n```python\nclass Manager(models.LiteSchema):\n    def __init__(self, db_credentials=cfg, table='managers'):\n        super().__init__(db_credentials, table)\n        self.add_params({\n            'name': {\n                'dbtype': 'varchar(255)',\n                'type': str\n            }\n        })\n        self.add_virtual({\n            'table': 'employee',\n            'foreign_column': 'manager',\n            'field': 'ID'\n        })\n\n```\nThe dict takes 3 arguments. \"Table\" is the target table where the foreign key is located. \"Foreign column\" is the column where the key is located. \"Field\" is the local column where the key is located. \n\n### Populating the virtual field.\n```python\nmanager = Manager()\n\nmanager.populate_new(name='connor')\nmanager.populate_virtual()\n\nprint(manager.virtual)\n\n# Returns [{'ID': 'o0l5i2nIr', 'createdAt': '2020-08-31 20:51:08.422624', 'updatedAt': '2020-09-02 08:43:51.600846', 'manager': 'w47mlx4df', 'name': 'mark'}]\n\nprint(manager.virtual.o0l5i2nIr)\n\n# Returns {'ID': 'o0l5i2nIr', 'createdAt': '2020-08-31 20:51:08.422624', 'updatedAt': '2020-09-02 08:43:51.600846', 'manager': 'w47mlx4df', 'name': 'mark'}\n\n```\n\n\n\n\n\n## Datetime manipulation\n\n### DatetimeGenerator\n```python\ndatetime_object = DatetimeGenerator(\n    datetime_input=datetime.strptime('2000-08-31 10:22:08', '%Y-%m-%d %H:%M:%S'),\n    format='iso',\n    str_format='%Y-%m-%d'\n)\ndatetime_object.add(hours=9, days=12)\n```\nDatetime input can be any datetime object.\nFormat can be either \"datetime\", \"iso\", \"unix\", or \"string\".\n\nLeaving datetime input blank will generate the current time. Leaving the format blank defaults to datetime. Str_format \nshould only be used when the format is put as string. \n\nYou can add or subtract values of time with the add and subtract methods. \n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://www.connorwhite.uk",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Vys",
    "package_url": "https://pypi.org/project/Vys/",
    "platform": "",
    "project_url": "https://pypi.org/project/Vys/",
    "project_urls": {
      "Homepage": "http://www.connorwhite.uk"
    },
    "release_url": "https://pypi.org/project/Vys/0.2.2/",
    "requires_dist": [
      "requests",
      "openpyxl",
      "mysql-connector-python",
      "python-dateutil"
    ],
    "requires_python": ">=3.6",
    "summary": "A collection of classes that allow for easier usage of common packages.",
    "version": "0.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8156866,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bb544dca94bd9c1aea0028398bd76986688c841f02464f6ce44b921ed122d6da",
          "md5": "4824b613bf1ff5ec6fa4944dc85cca99",
          "sha256": "1724e8a51c802f93c760be86dc5a011d3550778994f5ed58a80a05271207a194"
        },
        "downloads": -1,
        "filename": "Vys-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4824b613bf1ff5ec6fa4944dc85cca99",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 15515,
        "upload_time": "2020-09-05T11:12:44",
        "upload_time_iso_8601": "2020-09-05T11:12:44.855239Z",
        "url": "https://files.pythonhosted.org/packages/bb/54/4dca94bd9c1aea0028398bd76986688c841f02464f6ce44b921ed122d6da/Vys-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "94eda0a54b2ca57f963226e69dce74fca123ad9a4207c71ea82c707e332825de",
          "md5": "f5c5ee484fd60f24ff6a65493e75a9cd",
          "sha256": "913b6911365a20c9fe6c307de384725df09921f023c84a21d02a738ce315c646"
        },
        "downloads": -1,
        "filename": "Vys-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f5c5ee484fd60f24ff6a65493e75a9cd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13541,
        "upload_time": "2020-09-05T11:12:48",
        "upload_time_iso_8601": "2020-09-05T11:12:48.359920Z",
        "url": "https://files.pythonhosted.org/packages/94/ed/a0a54b2ca57f963226e69dce74fca123ad9a4207c71ea82c707e332825de/Vys-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "47c262f676551674276fa1932cb64654eff8d3a5fc45b050e6b081bb8a5a0a04",
          "md5": "55178a6484a06175d83b21ca6540a03a",
          "sha256": "df788956bf59dd766f0af3ae5264f96399c667c30e4bfa4d6c768a6c7db8aeaf"
        },
        "downloads": -1,
        "filename": "Vys-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "55178a6484a06175d83b21ca6540a03a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 15417,
        "upload_time": "2020-09-06T17:24:47",
        "upload_time_iso_8601": "2020-09-06T17:24:47.906355Z",
        "url": "https://files.pythonhosted.org/packages/47/c2/62f676551674276fa1932cb64654eff8d3a5fc45b050e6b081bb8a5a0a04/Vys-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "05c805865f60e59e9c90ccca6bffc19f11a3ac75cc91695ef06e814d33dfb53d",
          "md5": "dbf2b676c67eedfc533ad17e5844b1fa",
          "sha256": "45a93543fdcbe085aaf76ba8bd26811ca65e33081dabd2346f3ad9a834b1f2f9"
        },
        "downloads": -1,
        "filename": "Vys-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "dbf2b676c67eedfc533ad17e5844b1fa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13435,
        "upload_time": "2020-09-06T17:24:48",
        "upload_time_iso_8601": "2020-09-06T17:24:48.834782Z",
        "url": "https://files.pythonhosted.org/packages/05/c8/05865f60e59e9c90ccca6bffc19f11a3ac75cc91695ef06e814d33dfb53d/Vys-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b3e97d4ce0ba4f4e0a47c36bce910c1a47232f0d3240a606a8a3d6c3f0e049a9",
          "md5": "035e3e4a7105f68837b2e75e934347df",
          "sha256": "fc0bb5d267c45b95ab09db616e6fcffbd8726cc4044df07459fa012e75147f35"
        },
        "downloads": -1,
        "filename": "Vys-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "035e3e4a7105f68837b2e75e934347df",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 15576,
        "upload_time": "2020-09-10T18:59:42",
        "upload_time_iso_8601": "2020-09-10T18:59:42.356547Z",
        "url": "https://files.pythonhosted.org/packages/b3/e9/7d4ce0ba4f4e0a47c36bce910c1a47232f0d3240a606a8a3d6c3f0e049a9/Vys-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8ab7bf23c1dd5c2f95a5db2041880f2c27652b61d2758ee18c5e65cf165cf471",
          "md5": "cb828de9ab4df36b43a8175ed85120b6",
          "sha256": "682d48f3a7ed67cde2ec40688c2a354182a6552555ea5ed597d5aa8fb6bf0203"
        },
        "downloads": -1,
        "filename": "Vys-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "cb828de9ab4df36b43a8175ed85120b6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13552,
        "upload_time": "2020-09-10T18:59:43",
        "upload_time_iso_8601": "2020-09-10T18:59:43.662502Z",
        "url": "https://files.pythonhosted.org/packages/8a/b7/bf23c1dd5c2f95a5db2041880f2c27652b61d2758ee18c5e65cf165cf471/Vys-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b3e97d4ce0ba4f4e0a47c36bce910c1a47232f0d3240a606a8a3d6c3f0e049a9",
        "md5": "035e3e4a7105f68837b2e75e934347df",
        "sha256": "fc0bb5d267c45b95ab09db616e6fcffbd8726cc4044df07459fa012e75147f35"
      },
      "downloads": -1,
      "filename": "Vys-0.2.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "035e3e4a7105f68837b2e75e934347df",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 15576,
      "upload_time": "2020-09-10T18:59:42",
      "upload_time_iso_8601": "2020-09-10T18:59:42.356547Z",
      "url": "https://files.pythonhosted.org/packages/b3/e9/7d4ce0ba4f4e0a47c36bce910c1a47232f0d3240a606a8a3d6c3f0e049a9/Vys-0.2.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8ab7bf23c1dd5c2f95a5db2041880f2c27652b61d2758ee18c5e65cf165cf471",
        "md5": "cb828de9ab4df36b43a8175ed85120b6",
        "sha256": "682d48f3a7ed67cde2ec40688c2a354182a6552555ea5ed597d5aa8fb6bf0203"
      },
      "downloads": -1,
      "filename": "Vys-0.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "cb828de9ab4df36b43a8175ed85120b6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 13552,
      "upload_time": "2020-09-10T18:59:43",
      "upload_time_iso_8601": "2020-09-10T18:59:43.662502Z",
      "url": "https://files.pythonhosted.org/packages/8a/b7/bf23c1dd5c2f95a5db2041880f2c27652b61d2758ee18c5e65cf165cf471/Vys-0.2.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}