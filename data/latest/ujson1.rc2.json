{
  "info": {
    "author": "Jonas Tarnstrom",
    "author_email": "jonas.tarnstrom@esn.me",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: C",
      "Programming Language :: Python :: 2.4",
      "Programming Language :: Python :: 2.5",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.2"
    ],
    "description": "ujson1\n======\n\nThis is a compatibility fork of ultrajson 1.35 that is intended to coexist with\nnewer versions by renaming the c extension to \"ujson1\".\n\nDevelopment on mainline ultrajson 3.x has reumed in\nhttps://github.com/ultrajson/ultrajson and please send pull requests there\nunless they are absolutely necessary to get you OFF of 1.x.\n\n.. image:: https://travis-ci.org/esnme/ultrajson.svg?branch=master\n    :target: https://travis-ci.org/esnme/ultrajson\n\nUltraJSON is an ultra fast JSON encoder and decoder written in pure C with bindings for Python 2.5+ and 3.\n\nFor a more painless day to day C/C++ JSON decoder experience please checkout ujson4c_, based on UltraJSON.\n\n.. _ujson4c: http://github.com/esnme/ujson4c/\n\n| Please checkout the rest of the projects in the Ultra series:\n| http://github.com/esnme/ultramemcache\n| http://github.com/esnme/ultramysql\n\nTo install it just run Pip as usual::\n\n    $ pip install ujson\n\n============\nUsage\n============\nMay be used as a drop in replacement for most other JSON parsers for Python::\n\n    >>> import ujson\n    >>> ujson.dumps([{\"key\": \"value\"}, 81, True])\n    '[{\"key\":\"value\"},81,true]'\n    >>> ujson.loads(\"\"\"[{\"key\": \"value\"}, 81, true]\"\"\")\n    [{u'key': u'value'}, 81, True]\n\n~~~~~~~~~~~~~~~\nEncoder options\n~~~~~~~~~~~~~~~\nencode_html_chars\n-----------------\nUsed to enable special encoding of \"unsafe\" HTML characters into safer Unicode sequences. Default is false::\n\n    >>> ujson.dumps(\"<script>John&Doe\", encode_html_chars=True)\n    '\"\\\\u003cscript\\\\u003eJohn\\\\u0026Doe\"'\n\nensure_ascii\n-------------\nLimits output to ASCII and escapes all extended characters above 127. Default is true. If your end format supports UTF-8 setting this option to false is highly recommended to save space::\n\n    >>> ujson.dumps(u\"\\xe5\\xe4\\xf6\")\n    '\"\\\\u00e5\\\\u00e4\\\\u00f6\"'\n    >>> ujson.dumps(u\"\\xe5\\xe4\\xf6\", ensure_ascii=False)\n    '\"\\xc3\\xa5\\xc3\\xa4\\xc3\\xb6\"'\n\ndouble_precision\n----------------\nControls how many decimals to encode for double or decimal values. Default is 9::\n\n    >>> ujson.dumps(math.pi)\n    '3.1415926536'\n    >>> ujson.dumps(math.pi, double_precision=1)\n    '3.1'\n    >>> ujson.dumps(math.pi, double_precision=0)\n    '3'\n    >>> ujson.dumps(math.pi, double_precision=4)\n    '3.1416'\n\nescape_forward_slashes\n----------------------\nControls whether forward slashes (``/``) are escaped. Default is True::\n\n    >>> ujson.dumps(\"http://esn.me\")\n    '\"http:\\/\\/esn.me\"'\n    >>> ujson.dumps(\"http://esn.me\", escape_forward_slashes=False)\n    '\"http://esn.me\"'\n\nindent\n----------------------\nControls whether indention (\"pretty output\") is enabled. Default is 0 (disabled)::\n\n    >>> ujson.dumps({\"foo\": \"bar\"})\n    '{\"foo\":\"bar\"}'\n    >>> ujson.dumps({\"foo\": \"bar\"}, indent=4)\n    {\n        \"foo\":\"bar\"\n    }\n\n~~~~~~~~~~~~~~~~\nDecoders options\n~~~~~~~~~~~~~~~~\nprecise_float\n-------------\nSet to enable usage of higher precision (strtod) function when decoding string to double values. Default is to use fast but less precise builtin functionality::\n\n    >>> ujson.loads(\"4.56\")\n    4.5600000000000005\n    >>> ujson.loads(\"4.56\", precise_float=True)\n    4.5599999999999996\n\n~~~~~~~~~~~~~\nTest machine:\n~~~~~~~~~~~~~\n\nLinux 3.13.0-66-generic x86_64 #108-Ubuntu SMP Wed Oct 7 15:20:27 UTC 2015\n\n~~~~~~~~~\nVersions:\n~~~~~~~~~\n\n- CPython 2.7.6 (default, Jun 22 2015, 17:58:13) [GCC 4.8.2]\n- blist     : 1.3.6\n- simplejson: 3.8.1\n- ujson     : 1.34 (0c52200eb4e2d97e548a765d5f089858c41967b0)\n- yajl      : 0.3.5\n\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n|                                                                               | ujson      | yajl       | simplejson | json       |\n+===============================================================================+============+============+============+============+\n| Array with 256 doubles                                                        |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |    3508.19 |    5742.00 |    3232.38 |    3309.09 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |   25103.37 |   11257.83 |   11696.26 |   11871.04 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Array with 256 UTF-8 strings                                                  |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |    3189.71 |    2717.14 |    2006.38 |    2961.72 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |    1354.94 |     630.54 |     356.35 |     344.05 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Array with 256 strings                                                        |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |   18127.47 |   12537.39 |   12541.23 |   20001.00 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |   23264.70 |   12788.85 |   25427.88 |    9352.36 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Medium complex object                                                         |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |   10519.38 |    5021.29 |    3686.86 |    4643.47 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |    9676.53 |    5326.79 |    8515.77 |    3017.30 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Array with 256 True values                                                    |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |  105998.03 |  102067.28 |   44758.51 |   60424.80 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |  163869.96 |   78341.57 |  110859.36 |  115013.90 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Array with 256 dict{string, int} pairs                                        |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |   13471.32 |   12109.09 |    3876.40 |    8833.92 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |   16890.63 |    8946.07 |   12218.55 |    3350.72 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Dict with 256 arrays with 256 dict{string, int} pairs                         |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |      50.25 |      46.45 |      13.82 |      29.28 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |      33.27 |      22.10 |      27.91 |      10.43 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Dict with 256 arrays with 256 dict{string, int} pairs, outputting sorted keys |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |      27.19 |            |       7.75 |       2.39 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Complex object                                                                |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |     577.98 |            |     387.81 |     470.02 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |     496.73 |     234.44 |     151.00 |     145.16 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n\n~~~~~~~~~\nVersions:\n~~~~~~~~~\n\n- CPython 3.4.3 (default, Oct 14 2015, 20:28:29) [GCC 4.8.4]\n- blist     : 1.3.6\n- simplejson: 3.8.1\n- ujson     : 1.34 (0c52200eb4e2d97e548a765d5f089858c41967b0)\n- yajl      : 0.3.5\n\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n|                                                                               | ujson      | yajl       | simplejson | json       |\n+===============================================================================+============+============+============+============+\n| Array with 256 doubles                                                        |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |    3477.15 |    5732.24 |    3016.76 |    3071.99 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |   23625.20 |    9731.45 |    9501.57 |    9901.92 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Array with 256 UTF-8 strings                                                  |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |    1995.89 |    2151.61 |    1771.98 |    1817.20 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |    1425.04 |     625.38 |     327.14 |     305.95 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Array with 256 strings                                                        |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |   25461.75 |   12188.64 |   13054.76 |   14429.81 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |   21981.31 |   17014.22 |   23869.48 |   22483.58 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Medium complex object                                                         |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |   10821.46 |    4837.04 |    3114.04 |    4254.46 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |    7887.77 |    5126.67 |    4934.60 |    6204.97 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Array with 256 True values                                                    |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |  100452.86 |   94639.42 |   46657.63 |   60358.63 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |  148312.69 |   75485.90 |   88434.91 |  116395.51 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Array with 256 dict{string, int} pairs                                        |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |   11698.13 |    8886.96 |    3043.69 |    6302.35 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |   10686.40 |    7061.77 |    5646.80 |    7702.29 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Dict with 256 arrays with 256 dict{string, int} pairs                         |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |      44.26 |      34.43 |      10.40 |      21.97 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |      28.46 |      23.95 |      18.70 |      22.83 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Dict with 256 arrays with 256 dict{string, int} pairs, outputting sorted keys |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |      33.60 |            |       6.94 |      22.34 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Complex object                                                                |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |     432.30 |            |     351.47 |     379.34 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |     434.40 |     221.97 |     149.57 |     147.79 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "http://github.com/esnme/ultrajson",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://www.esn.me",
    "keywords": "",
    "license": "BSD License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ujson1",
    "package_url": "https://pypi.org/project/ujson1/",
    "platform": "any",
    "project_url": "https://pypi.org/project/ujson1/",
    "project_urls": {
      "Download": "http://github.com/esnme/ultrajson",
      "Homepage": "http://www.esn.me"
    },
    "release_url": "https://pypi.org/project/ujson1/1.36/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Ultra fast JSON encoder and decoder for Python",
    "version": "1.36",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7953180,
  "releases": {
    "1.35": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3519da8bee91df64fc79e5029351cc8c123e24a4613bb7df2285a9a5dc86ccb7",
          "md5": "4957604ba355c2bd02a394cda215518e",
          "sha256": "b4b85f0c4b9882dd0f5b02d52e4eccefa6435dd5722614e2f72791161c65a19d"
        },
        "downloads": -1,
        "filename": "ujson1-1.35.tar.gz",
        "has_sig": false,
        "md5_digest": "4957604ba355c2bd02a394cda215518e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 189503,
        "upload_time": "2020-08-12T02:31:56",
        "upload_time_iso_8601": "2020-08-12T02:31:56.547574Z",
        "url": "https://files.pythonhosted.org/packages/35/19/da8bee91df64fc79e5029351cc8c123e24a4613bb7df2285a9a5dc86ccb7/ujson1-1.35.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.36": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fc214f49e23bb0a7d38f077dbdced7012a1ea0e66e5929abac7139f397587ace",
          "md5": "d95f913c2ece239cbda0c56454ee02e5",
          "sha256": "00792db47b0bad1edd680c72f3f5c101db0b861d64b506ce9629aa0758246e01"
        },
        "downloads": -1,
        "filename": "ujson1-1.36.tar.gz",
        "has_sig": false,
        "md5_digest": "d95f913c2ece239cbda0c56454ee02e5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 189769,
        "upload_time": "2020-08-13T15:27:08",
        "upload_time_iso_8601": "2020-08-13T15:27:08.568225Z",
        "url": "https://files.pythonhosted.org/packages/fc/21/4f49e23bb0a7d38f077dbdced7012a1ea0e66e5929abac7139f397587ace/ujson1-1.36.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fc214f49e23bb0a7d38f077dbdced7012a1ea0e66e5929abac7139f397587ace",
        "md5": "d95f913c2ece239cbda0c56454ee02e5",
        "sha256": "00792db47b0bad1edd680c72f3f5c101db0b861d64b506ce9629aa0758246e01"
      },
      "downloads": -1,
      "filename": "ujson1-1.36.tar.gz",
      "has_sig": false,
      "md5_digest": "d95f913c2ece239cbda0c56454ee02e5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 189769,
      "upload_time": "2020-08-13T15:27:08",
      "upload_time_iso_8601": "2020-08-13T15:27:08.568225Z",
      "url": "https://files.pythonhosted.org/packages/fc/21/4f49e23bb0a7d38f077dbdced7012a1ea0e66e5929abac7139f397587ace/ujson1-1.36.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}