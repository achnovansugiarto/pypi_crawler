{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Intended Audience :: Science/Research",
      "Natural Language :: English",
      "Operating System :: POSIX",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "[![Tests](https://github.com/PennyLaneAI/catalyst/actions/workflows/check-catalyst.yaml/badge.svg)](https://github.com/PennyLaneAI/catalyst/actions/workflows/check-catalyst.yaml)\n[![Coverage](https://img.shields.io/codecov/c/github/PennyLaneAI/catalyst/master.svg?logo=codecov&style=flat-square)](https://codecov.io/gh/PennyLaneAI/catalyst)\n[![Documentation](https://readthedocs.com/projects/xanaduai-catalyst/badge/?version=latest&token=e6f8607e841564d11d02baef4540523169f95d9c64fcdc656a0ecfd6564203ca)](https://docs.pennylane.ai/projects/catalyst)\n[![PyPI](https://img.shields.io/pypi/v/PennyLane-Catalyst.svg?style=flat-square)](https://pypi.org/project/PennyLane-Catalyst)\n[![Forum](https://img.shields.io/discourse/https/discuss.pennylane.ai/posts.svg?logo=discourse&style=flat-square)](https://discuss.pennylane.ai)\n[![License](https://img.shields.io/pypi/l/PennyLane.svg?logo=apache&style=flat-square)](https://www.apache.org/licenses/LICENSE-2.0)\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/PennyLaneAI/catalyst/main/doc/_static/catalyst.png#gh-light-mode-only\" width=\"700px\">\n    <!--\n    Use a relative import for the dark mode image. When loading on PyPI, this\n    will fail automatically and show nothing.\n    -->\n  <img src=\"./doc/_static/catalyst-dark.png#gh-dark-mode-only\" width=\"700px\" onerror=\"this.style.display='none'\" alt=\"\"/>\n</p>\n\nCatalyst is an experimental package that enables just-in-time (JIT) compilation of hybrid\nquantum-classical programs.\n\n**Catalyst is currently under heavy development — if you have suggestions on the API or use-cases\nyou'd like to be covered, please open an GitHub issue or reach out. We'd love to hear about how\nyou're using the library, collaborate on development, or integrate additional devices and\nfrontends.**\n\n## Key Features\n\n- Compile the entire quantum-classical workflow, including any optimization loops.\n\n- Use Catalyst alongside PennyLane directly from Python. Simply decorate quantum code and hybrid\n  functions with `@qjit`, leading to significant performance improvements over standard Python\n  execution.\n\n- Access advanced control flow that supports both quantum and classical instructions.\n\n- Infrastructure for both quantum *and* classical compilation, allowing you to compile quantum\n  circuits that contain control flow.\n\n- Built to be end-to-end differentiable.\n\n- Support for the [Lightning](https://github.com/PennyLaneAI/pennylane-lightning/) high\n  performance simulator. Additional hardware support, including GPUs and QPUs to come.\n\n## Overview\n\nCatalyst currently consists of the following components:\n\n- [Catalyst Compiler](https://docs.pennylane.ai/projects/catalyst/en/latest/modules/mlir.html).\n\n  The core Catalyst compiler is built using [MLIR](https://mlir.llvm.org/), with the addition of a\n  quantum dialect used to represent quantum instructions. This allows for a high-level intermediate\n  representation of the classical and quantum components of the program, resulting in advantages\n  during optimization. Once optimized, the compiler lowers the representation down to LLVM +\n  [QIR](https://www.qir-alliance.org/), and a machine binary is produced.\n\n- [Catalyst\n  Runtime](https://docs.pennylane.ai/projects/catalyst/en/latest/modules/runtime.html).\n\n  The\n  runtime is a C++ runtime based on QIR that enables the execution of Catalyst-compiled quantum programs.\n  Currently, a runtime implementation is available for the state-vector simulators\n  [Lightning](https://github.com/PennyLaneAI/pennylane-lightning/). A complete\n  list of the quantum instruction set supported by these runtime implementations can be found by\n  visiting the Catalyst documentation.\n\nIn addition, we also provide a Python frontend for [PennyLane](https://pennylane.ai) and [JAX](https://jax.readthedocs.io):\n\n- [PennyLane JAX\n  frontend](https://docs.pennylane.ai/projects/catalyst/en/latest/modules/frontend.html).\n\n  A Python\n  library that provides a `@qjit` decorator to just-in-time compile PennyLane hybrid\n  quantum-classical programs. In addition, the frontend package provides Python functions for\n  defining Catalyst-compatible control flow structures, gradient, and mid-circuit measurement.\n\n\n## Installation\n\nCatalyst has been tested on Linux operating systems and the Python frontend and C++ binaries are available as an\neasy-to-install Python binary via `pip`. The only requirements to use Catalyst via Python is\n[PennyLane](https://pennylane.ai) and [Python](https://www.python.org)  3.8 or higher.\n\nCatalyst can then be installed via a single command:\n\n```console\npip install pennylane-catalyst\n```\n\nWe do not currently have binaries available for Windows or MacOS. If you are using one of these\noperating systems, or wish to contribute to Catalyst or develop against our runtime or compiler,\nplease see the instructions for [building from\nsource](https://docs.pennylane.ai/projects/catalyst/en/latest/dev/installation.html).\n\n## Trying Catalyst with PennyLane\n\nTo get started using the Catalyst JIT compiler from Python, check out our [quick start\nguide](https://docs.pennylane.ai/projects/catalyst/en/latest/dev/quick_start.html), as well as our\nvarious examples and tutorials in our [documentation](https://docs.pennylane.ai/projects/catalyst).\n\nFor an introduction to quantum computing and quantum machine learning, you can also visit the\nPennyLane website for [tutorials, videos, and demonstrations](https://pennylane.ai/qml).\n\n## Roadmap\n\n- **Frontend:** As we continue to build out Catalyst, the PennyLane frontend will likely be\n  upstreamed into PennyLane proper, providing native JIT functionality built-in to PennyLane. The\n  Catalyst compiler and runtime will remain part of the Catalyst project. *If you are interested in\n  working on additional frontends for Catalyst, please get in touch.*\n\n- **Compiler:** We will continue to build out the compiler stack, and add quantum compilation\n  routines. This includes an API for providing or writing Catalyst-compatible compilation routines.\n  In addition, we will be improving the autodifferentiation support, and adding support for\n  classical autodiff, additional quantum gradients, and quantum-aware optimization methods.\n\n- **Runtime:** We will be adding support for more devices, including quantum hardware devices. In\n  addition, we will be building out support for hetereogeneous execution. *If you are interested in\n  working on connecting a quantum device with Catalyst, please get in touch.*\n\nTo get the details right, we need your help — please send us your use cases by starting a\nconversation, or trying Catalyst out.\n\n## Contributing to Catalyst\n\nWe welcome contributions — simply fork the Catalyst repository, and then make a [pull\nrequest](https://help.github.com/articles/about-pull-requests/) containing your contribution.\n\nWe also encourage bug reports, suggestions for new features and enhancements.\n\n## Support\n\n- **Source Code:** https://github.com/PennyLaneAI/catalyst\n- **Issue Tracker:** https://github.com/PennyLaneAI/catalyst/issues\n\nIf you are having issues, please let us know by posting the issue on our GitHub issue tracker.\n\nWe also have a [PennyLane discussion forum](https://discuss.pennylane.ai)—come join the community\nand chat with the PennyLane team.\n\nNote that we are committed to providing a friendly, safe, and welcoming environment for all. Please\nread and respect the [Code of Conduct](.github/CODE_OF_CONDUCT.md).\n\n## Authors\n\nCatalyst is the work of [many contributors](https://github.com/PennyLaneAI/catalyst/graphs/contributors).\n\nIf you are doing research using Catalyst, please cite our GitHub repo.\n\n## License\n\nCatalyst is **free** and **open source**, released under the Apache License, Version 2.0.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/PennyLaneAI/catalyst",
    "keywords": "",
    "license": "Apache License 2.0",
    "maintainer": "Xanadu Inc.",
    "maintainer_email": "software@xanadu.ai",
    "name": "pennylane-catalyst",
    "package_url": "https://pypi.org/project/pennylane-catalyst/",
    "platform": null,
    "project_url": "https://pypi.org/project/pennylane-catalyst/",
    "project_urls": {
      "Homepage": "https://github.com/PennyLaneAI/catalyst"
    },
    "release_url": "https://pypi.org/project/pennylane-catalyst/0.1.1/",
    "requires_dist": [
      "pennylane (>=0.28)",
      "jax (==0.4.1)",
      "jaxlib (==0.4.1)"
    ],
    "requires_python": ">=3.8",
    "summary": "A JIT compiler for hybrid quantum programs in PennyLane",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17191429,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "be54ad23bdb339f2df248834c50c979b6203a89b81e5e1024d89a1d51d2e44d5",
          "md5": "9077f8548662de937ff2f0c7488d0437",
          "sha256": "60270708faf5a17703d6492191279c35041f6f56a838151a528c1f112aa61cf4"
        },
        "downloads": -1,
        "filename": "pennylane_catalyst-0.1.0-py3-none-manylinux2014_x86_64.whl",
        "has_sig": false,
        "md5_digest": "9077f8548662de937ff2f0c7488d0437",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 61402172,
        "upload_time": "2023-03-01T17:14:38",
        "upload_time_iso_8601": "2023-03-01T17:14:38.571841Z",
        "url": "https://files.pythonhosted.org/packages/be/54/ad23bdb339f2df248834c50c979b6203a89b81e5e1024d89a1d51d2e44d5/pennylane_catalyst-0.1.0-py3-none-manylinux2014_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ff06b7e14c7face371f566a87798ee57f39f0576dc2a63d73bd9f46b3176dd08",
          "md5": "6b5b1c2dd5fe3de2e6b49c26ea1e0d1f",
          "sha256": "988ce83a9619bd689172bfdbe8913fbe6194c5a27529b6d86c8bf08283dd521c"
        },
        "downloads": -1,
        "filename": "pennylane_catalyst-0.1.1-py3-none-manylinux2014_x86_64.whl",
        "has_sig": false,
        "md5_digest": "6b5b1c2dd5fe3de2e6b49c26ea1e0d1f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 61403443,
        "upload_time": "2023-03-07T14:09:50",
        "upload_time_iso_8601": "2023-03-07T14:09:50.457247Z",
        "url": "https://files.pythonhosted.org/packages/ff/06/b7e14c7face371f566a87798ee57f39f0576dc2a63d73bd9f46b3176dd08/pennylane_catalyst-0.1.1-py3-none-manylinux2014_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ff06b7e14c7face371f566a87798ee57f39f0576dc2a63d73bd9f46b3176dd08",
        "md5": "6b5b1c2dd5fe3de2e6b49c26ea1e0d1f",
        "sha256": "988ce83a9619bd689172bfdbe8913fbe6194c5a27529b6d86c8bf08283dd521c"
      },
      "downloads": -1,
      "filename": "pennylane_catalyst-0.1.1-py3-none-manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "6b5b1c2dd5fe3de2e6b49c26ea1e0d1f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 61403443,
      "upload_time": "2023-03-07T14:09:50",
      "upload_time_iso_8601": "2023-03-07T14:09:50.457247Z",
      "url": "https://files.pythonhosted.org/packages/ff/06/b7e14c7face371f566a87798ee57f39f0576dc2a63d73bd9f46b3176dd08/pennylane_catalyst-0.1.1-py3-none-manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}