{
  "info": {
    "author": "Jean Demeusy",
    "author_email": "jean.demeusy@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: OS Independent",
      "Operating System :: POSIX",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# jdutable\n\nCommand line table data visualisation tool.\n\n## Installation\n\n```bash\n> pip(3) install (-U) jdutable\n```\n\nand\n\n```python\nfrom jdutable import TableWriter\n```\n\n## Instantiation\n```python\ntable = TableWriter()\n```\n\n## Methods\n\n### Add data\n\n```python\ndef set_header(self, header: list[str])\n```\n... to add a list of strings as the header of the table.\n\n\n```python\ndef set_footer(self, footer: list[str])\n```\n... to add a list of strings as the footer of the table.\n\n```python\ndef append(self, line:list[str])\n```\n... to add a line of strings to the content of the table.\n\n```python\ndef append_bulk(self, data: list[list[str]])\n```\n... to add multiple lines to the content of the table.\n\n```python\ndef from_csv(self, filename: Path, header: bool = False, footer: bool = False, sep: str = \",\")\n```\n... to import a csv file. The parameter are:\n- filename: path to the csv file to import\n- header: boolean to tell if csv file contains a header\n- footer: boolean to tell if csv file contains a footer\n- sep: string defining what the csv delimiter is\n\n\n\n### Parameters\n```python\ndef set_uppercased(self, state: bool)\n```\n... to print the header and footer with uppercased letters.\n\n```python\ndef set_border(self, state: bool)\n```\n... to show a border around the table.\n\n```python\ndef set_alignment(self, alignment: str or list[str])\n```\n... to define alignment guide for each column. Alignement can be a single string defining alignment for all columns, or a list of strings specifying the alignment guide for each column. To align to the:\n- left: either \"<\", \"left\" or \"l\"\n- center: either \"^\", \"center\" or \"c\"\n- right: either \">\", \"right\" or \"r\"\n\n\n```python\ndef set_center_separator(self, separator: str)\n```\n... to change the table lines intersection character.\n\n```python\ndef set_column_separator(self, separator: str)\n```\n... to change the table vertical lines character.\n\n### Display\n```python\ndef render(self, file=sys.stdout)\n```\n... to render the table using previously specified content, header/footer and parameters. `file` parameter can be add to write the table to a file, or a different standard output.\n\n### Reset\n```python\ndef reset_header(self)\n```\n... to reset the header to an empty list.\n\n```python\ndef reset_body(self)\n```\n... to reset the body to an empty list.\n\n```python\ndef reset_footer(self)\n```\n... to reset the footer to an empty list.\n\n```python\ndef reset_content(self)\n```\n... to reset header, body, and footer to an empty list.\n\n### Example\nLet's use the following content, that is in file `assets/example.csv`:\n```csv\nDate, Description, Amout\n1/1/2014, Domain name, $10.98\n1/1/2014, January Hosting, $54.95\n1/4/2014, February Hosting, $51.00\n1/4/2014, February Extra Bandwidth, $30.00\n, Total, $146.93\n```\n\nHeres an example code to render this file:\n```python\nfrom pathlib import Path\n\nfrom jdutable import TableWriter\n\ntable = TableWriter()\n\ntable.from_csv(Path(\"assets/example.csv\"), header=True, footer=True)\n\ntable.set_uppercased(False)\ntable.set_border(True)\ntable.set_alignment([\"left\", \"<\", \"r\"])\ntable.set_center_separator(\"-\")\ntable.set_column_separator(\"|\")\n\ntable.render()\n```\n\nThis shows the following result in the command line:\n```console\n---------------------------------------------------\n! Date     ! Description               !    Amout !\n---------------------------------------------------\n! 1/1/2014 !  Domain name              !   $10.98 !\n! 1/1/2014 !  January Hosting          !   $54.95 !\n! 1/4/2014 !  February Hosting         !   $51.00 !\n! 1/4/2014 !  February Extra Bandwidth !   $30.00 !\n---------------------------------------------------\n              Total                       $146.93\n           ----------------------------------------\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jeandemeusy/jdu-table",
    "keywords": "tables",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "jdutable",
    "package_url": "https://pypi.org/project/jdutable/",
    "platform": null,
    "project_url": "https://pypi.org/project/jdutable/",
    "project_urls": {
      "Homepage": "https://github.com/jeandemeusy/jdu-table"
    },
    "release_url": "https://pypi.org/project/jdutable/0.4/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Simple table tool for Python",
    "version": "0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14195764,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6be6505226cdc1128326c0a9c5cbc6b2965afd3e6b1c854ee4e80f054026fb9b",
          "md5": "dc48a5bea4c4be2ffabca71fcd5b221b",
          "sha256": "724009929c793e52c55397aec874e401cbf11d856092fc84144ae8b49600cf25"
        },
        "downloads": -1,
        "filename": "jdutable-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "dc48a5bea4c4be2ffabca71fcd5b221b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3607,
        "upload_time": "2022-02-07T12:36:05",
        "upload_time_iso_8601": "2022-02-07T12:36:05.695223Z",
        "url": "https://files.pythonhosted.org/packages/6b/e6/505226cdc1128326c0a9c5cbc6b2965afd3e6b1c854ee4e80f054026fb9b/jdutable-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a156cc929cac4be356715d5ff77f6e599f866836535393d24feaac3c348530d2",
          "md5": "7076adbb499f58966a50546b153ee34c",
          "sha256": "75b8704aedef8535d7389edee13af13d08a5609e44180272164fcbde8aa1f799"
        },
        "downloads": -1,
        "filename": "jdutable-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7076adbb499f58966a50546b153ee34c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4444,
        "upload_time": "2022-02-09T10:22:53",
        "upload_time_iso_8601": "2022-02-09T10:22:53.346723Z",
        "url": "https://files.pythonhosted.org/packages/a1/56/cc929cac4be356715d5ff77f6e599f866836535393d24feaac3c348530d2/jdutable-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "48cb0c2b622cacc8c471cca9d3f31b41c6ee6325f4b899f85a3386b9c77eb462",
          "md5": "64175e965e52f060cc1be518e250a7fb",
          "sha256": "48ebe0630292777c7e16efc4a3c989319797bf42c820993b8b36088418a57872"
        },
        "downloads": -1,
        "filename": "jdutable-0.2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "64175e965e52f060cc1be518e250a7fb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4862,
        "upload_time": "2022-02-09T10:28:24",
        "upload_time_iso_8601": "2022-02-09T10:28:24.616059Z",
        "url": "https://files.pythonhosted.org/packages/48/cb/0c2b622cacc8c471cca9d3f31b41c6ee6325f4b899f85a3386b9c77eb462/jdutable-0.2.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "36b4ab78e922fd8f524eee095fa8d3c03d2bbc0d61477b32b822771d181bb7f2",
          "md5": "322e234b24baf390a2ba90f5c0f61d71",
          "sha256": "d5f8d9d5f43d7fc778955654db772e9fd7707ab282cfbb9abc80e71a526bbe82"
        },
        "downloads": -1,
        "filename": "jdutable-0.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "322e234b24baf390a2ba90f5c0f61d71",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6094,
        "upload_time": "2022-04-12T17:16:09",
        "upload_time_iso_8601": "2022-04-12T17:16:09.643454Z",
        "url": "https://files.pythonhosted.org/packages/36/b4/ab78e922fd8f524eee095fa8d3c03d2bbc0d61477b32b822771d181bb7f2/jdutable-0.3.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8f1db08036e20f791fb2e33f985e3299c14dfe8234bc0a777412034a9f980e67",
          "md5": "28b72740574ca021f2a4cba2ece10f06",
          "sha256": "c199e8a81ad73d187b1612b43d2d6bc65c2484bb5309b6bcf276c2ccea7fba49"
        },
        "downloads": -1,
        "filename": "jdutable-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "28b72740574ca021f2a4cba2ece10f06",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6116,
        "upload_time": "2022-06-21T07:32:33",
        "upload_time_iso_8601": "2022-06-21T07:32:33.239299Z",
        "url": "https://files.pythonhosted.org/packages/8f/1d/b08036e20f791fb2e33f985e3299c14dfe8234bc0a777412034a9f980e67/jdutable-0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8f1db08036e20f791fb2e33f985e3299c14dfe8234bc0a777412034a9f980e67",
        "md5": "28b72740574ca021f2a4cba2ece10f06",
        "sha256": "c199e8a81ad73d187b1612b43d2d6bc65c2484bb5309b6bcf276c2ccea7fba49"
      },
      "downloads": -1,
      "filename": "jdutable-0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "28b72740574ca021f2a4cba2ece10f06",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 6116,
      "upload_time": "2022-06-21T07:32:33",
      "upload_time_iso_8601": "2022-06-21T07:32:33.239299Z",
      "url": "https://files.pythonhosted.org/packages/8f/1d/b08036e20f791fb2e33f985e3299c14dfe8234bc0a777412034a9f980e67/jdutable-0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}