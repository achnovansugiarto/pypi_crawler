{
  "info": {
    "author": "Drew Hainer",
    "author_email": "codeconfidant@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# ***filewrap***\n\n    Python package for file/directory/archive management.\n\n    Make sure to have the latest version of Python 3 installed although this should work with previous versions. \n\n    To install/update the package with pip enter command in terminal:\n        pip install filewrap\n\n    To uninstall the package with pip enter command in terminal:\n        pip uninstall filewrap\n\n    Built-in modules used: os, tarfile, gzip, zipfile, zlib\n\n<table width=\"100%\">\n\t<tr>\n\t\t<th align=\"left\">\n            Method\n        </th>\n\t\t<th align=\"left\">\n            Description\n        </th>\n\t</tr>\n    <tr>\n\t\t<td>\n            <code>copydir(destination_path, target_path)</code>\n        </td>\n\t\t<td>\n            Copy target directory and all of it's subdirectories/files to a destination directory.\n        </td>\n\t</tr>\n    <tr>\n\t\t<td>\n            <code>copyfile(destination_path, *filepaths)</code>\n        </td>\n\t\t<td>\n            Copy single/multiple files to destination directory. <br/>\n            The destination_path and *filepaths arguments must be strings.\n        </td>\n\t</tr>\n    <tr>\n\t\t<td>\n            <code>read(filepath)</code>\n        </td>\n\t\t<td>\n            Read the binary from a file and return. <br/>\n            The filepath argument must be a string.\n        </td>\n\t</tr>\n    <tr>\n\t\t<td>\n            <code>write(filepath, data)</code>\n        </td>\n\t\t<td>\n            Write bytes object to a file. <br/>\n            The filepath argument must be a string. <br/>\n            The data argument must be a bytes object.\n        </td>\n\t</tr>\n\t<tr>\n\t\t<td>\n            <code>rpfile(mode, *filepaths)</code>\n        </td>\n\t\t<td>\n            Read and print lines in single/multiple text/binary based files. <br/>\n            The mode argument must be either strings: \"t\" (text) or \"b\" (binary). <br/>\n            The *filepaths arguments must be strings.\n        </td>\n\t</tr>\n    <tr>\n\t\t<td>\n            <code>rmfile(*filepaths)</code>\n        </td>\n\t\t<td>\n            Delete single/multiple files. <br/>\n            The *filepaths arguments must be strings.\n        </td>\n\t</tr>\n    <tr>\n\t\t<td>\n            <code>mkfile(mode, *filepaths)</code>\n        </td>\n\t\t<td>\n            Make single/multiple text/binary based files. <br/>\n            The mode argument must be either strings: \"t\" (text) or \"b\" (binary). <br/>\n            The *filepaths arguments must be strings.\n        </td>\n\t</tr>\n    <tr>\n\t\t<td>\n            <code>rmdir(*filepaths)</code>\n        </td>\n\t\t<td>\n            Delete single/multiple directories. <br/>\n            The *filepaths arguments must be strings.\n        </td>\n\t</tr>\n    <tr>\n\t\t<td>\n            <code>rmall(dirpath)</code>\n        </td>\n\t\t<td>\n            Delete single directory along with it's subdirectories and files. <br/>\n            Use this with caution, as you could delete your entire file system if you're not careful.\n        </td>\n\t</tr>\n    <tr>\n\t\t<td>\n            <code>mkdir(*filepaths)</code>\n        </td>\n\t\t<td>\n            Make single/multiple directories. <br/>\n            The *filepaths arguments must be strings.\n        </td>\n\t</tr>\n    <tr>\n\t\t<td>\n            <code>rpdir(*filepaths)</code>\n        </td>\n\t\t<td>\n            Output to terminal the file/subdirectory names of single/multiple argument filepaths. <br/>\n            Use no arguments for working directory only. <br/>\n            The *filepaths arguments must be strings.\n        </td>\n\t</tr>\n    <tr>\n\t\t<td>\n            <code>lsdir(*filepaths)</code>\n        </td>\n\t\t<td>\n            Return a list with file/subdirectory names of the single/multiple argument filepaths. <br/>\n            If there are no arguments used in *filepaths, a list of the contents within the working directory is returned. <br/>\n            If there is only one argument used in *filepaths, a list of the contents of only that filepath directory is returned. <br/>\n            Using the method with two or more arguments in *filepaths will return a list of lists with each list containing the file/subdirectory names of that filepath argument.\n        </td>\n\t</tr>\n    <tr>\n\t\t<td>\n            <code>chdir(filepath)</code>\n        </td>\n\t\t<td>\n            Change current working directory. <br/>\n            The filepath argument must be a string.\n        </td>\n\t</tr>\n    <tr>\n\t\t<td>\n            <code>wdir()</code>\n        </td>\n\t\t<td>\n            Return string of the path of the current working directory.\n        </td>\n\t</tr>\n    <tr>\n\t\t<td>\n            <code>pwdir()</code>\n        </td>\n\t\t<td>\n            Print working directory to terminal.\n        </td>\n\t</tr>\n    <tr>\n\t\t<td>\n            <code>mklist(*filepaths)</code>\n        </td>\n\t\t<td>\n            Return a list from lines in single/multiple text based files. <br/>\n            The *filepaths arguments must be strings.\n        </td>\n\t</tr>\n    <tr>\n\t\t<td>\n            <code>writelines(filepath, *lines)</code>\n        </td>\n\t\t<td>\n            Write singular strings or lists of strings in sequence to lines in a text based file. <br/>\n            The filepath argument must be a string. <br/>\n            The lines in the file are overwritten by the lines argument values.\n        </td>\n\t</tr>\n    <tr>\n\t\t<td>\n            <code>appendlines(filepath, *lines)</code>\n        </td>\n\t\t<td>\n            Append singular strings or lists of strings in sequence to lines at the end of a text based file. <br/> \n            The filepath argument must be a string.\n        </td>\n\t</tr>\n    <tr>\n\t\t<td>\n            <code>path_exists(filepath)</code>\n        </td>\n\t\t<td>\n            Return boolean value (True or False) to check if a single file path exists. <br/>\n            The filepath argument must be a string.\n        </td>\n\t</tr>\n    <tr>\n\t\t<td>\n            <code>isfile(filepath)</code>\n        </td>\n\t\t<td>\n            Return boolean value (True or False) to check if filepath argument is a file. <br/>\n            The filepath argument must be a string.\n        </td>\n\t</tr>\n    <tr>\n\t\t<td>\n            <code>isdir(filepath)</code>\n        </td>\n\t\t<td>\n            Return boolean value (True or False) to check if filepath argument is a directory. <br/>\n            The filepath argument must be a string.\n        </td>\n\t</tr>\n    <tr>\n\t\t<td>\n            <code>istar(filepath)</code>\n        </td>\n\t\t<td>\n            Return boolean value (True or False) to check if filepath argument is a tar archive. <br/>\n            The filepath argument must be a string.\n        </td>\n\t</tr>\n    <tr>\n\t\t<td>\n            <code>iszip(filepath)</code>\n        </td>\n\t\t<td>\n            Return boolean value (True or False) to check if filepath argument is a zip archive. <br/>\n            The filepath argument must be a string.\n        </td>\n\t</tr>\n    <tr>\n\t\t<td>\n            <code>ren(current_filepath, desired_filepath)</code>\n        </td>\n\t\t<td>\n            Rename single/multiple files or directories. <br/>\n            current_filepath represents the file path's name being changed. <br/>\n            desired_filepath represents the file path's new intended name. <br/>\n            current_filepath and desired_filepath can either be:\n            <ul>\n                <li>Two strings</li>\n                <li>Two lists of equal length consisting of strings</li>\n            </ul>\n        </td>\n\t</tr>\n    <tr>\n\t\t<td>\n            <code>tar_wrap(filepath)</code>\n        </td>\n\t\t<td>\n            Create a tar archive with gzip compression & .gz extension.\n        </td>\n\t</tr>\n    <tr>\n\t\t<td>\n            <code>tar_extract(filepath)</code>\n        </td>\n\t\t<td>\n            Extract a tar gzip archive contents to working directory.\n        </td>\n\t</tr>\n     <tr>\n\t\t<td>\n            <code>zip_wrap(filepath)</code>\n        </td>\n\t\t<td>\n            Create a zip archive with DEFLATE compression.\n        </td>\n\t</tr>\n    <tr>\n\t\t<td>\n            <code>zip_extract(filepath)</code>\n        </td>\n\t\t<td>\n            Extract a zip archive contents to working directory.\n        </td>\n\t</tr>\n    <tr>\n\t\t<td>\n            <code>filecount(filepath)</code>\n        </td>\n\t\t<td>\n            Count and return the number of files within a directory.\n        </td>\n\t</tr>\n    <tr>\n\t\t<td>\n            <code>dircount(filepath)</code>\n        </td>\n\t\t<td>\n            Count and return the number of directories within a directory.\n        </td>\n\t</tr>\n    <tr>\n\t\t<td>\n            <code>size(*filepaths)</code>\n        </td>\n\t\t<td>\n            Get the total combined size in bytes of the file paths & directories within the *filepaths argument.\n        </td>\n\t</tr>\n</table>\n\n[Back to Top](#filewrap)\n\n---",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/CodeConfidant/filewrap-os",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "filewrap",
    "package_url": "https://pypi.org/project/filewrap/",
    "platform": "Windows",
    "project_url": "https://pypi.org/project/filewrap/",
    "project_urls": {
      "Homepage": "https://github.com/CodeConfidant/filewrap-os"
    },
    "release_url": "https://pypi.org/project/filewrap/1.1.5/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Python package for file/directory/archive management.",
    "version": "1.1.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11494108,
  "releases": {
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ab493c3c73cf9771bfec0c460a914e321e6578ae453c30093f7c8a51a7d9e262",
          "md5": "68167c9389ad926b0592ec21488d90bf",
          "sha256": "b87bca2ae4ac53b34d2fff235b91c28dd0a6218e174e53cd9d4c88a2d2da8a96"
        },
        "downloads": -1,
        "filename": "filewrap-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "68167c9389ad926b0592ec21488d90bf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6076,
        "upload_time": "2020-07-24T09:45:11",
        "upload_time_iso_8601": "2020-07-24T09:45:11.121545Z",
        "url": "https://files.pythonhosted.org/packages/ab/49/3c3c73cf9771bfec0c460a914e321e6578ae453c30093f7c8a51a7d9e262/filewrap-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "68c059a3718127d6549b0ff0ff68dfd6671c653f4b7dd5ca8d1c389ce3d7c787",
          "md5": "289acfdce3ad42e934c12768f7a7ca96",
          "sha256": "62eb44b956726180afd626a5b1adf64e1474e58dedba41f79debddbaf6b470fa"
        },
        "downloads": -1,
        "filename": "filewrap-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "289acfdce3ad42e934c12768f7a7ca96",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6307,
        "upload_time": "2020-10-24T21:39:26",
        "upload_time_iso_8601": "2020-10-24T21:39:26.187870Z",
        "url": "https://files.pythonhosted.org/packages/68/c0/59a3718127d6549b0ff0ff68dfd6671c653f4b7dd5ca8d1c389ce3d7c787/filewrap-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0c8325cf1d6d4c1e6ec31d19182a64bafd736620e929f9643927577a8dd4f43d",
          "md5": "868dfb228d746997fb8267bd8a6fb229",
          "sha256": "ff61a11e8a6929380b8d531e136a9917c90ddbd568dfaa75b2168c6ef35b4696"
        },
        "downloads": -1,
        "filename": "filewrap-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "868dfb228d746997fb8267bd8a6fb229",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5804,
        "upload_time": "2020-12-18T03:44:26",
        "upload_time_iso_8601": "2020-12-18T03:44:26.694642Z",
        "url": "https://files.pythonhosted.org/packages/0c/83/25cf1d6d4c1e6ec31d19182a64bafd736620e929f9643927577a8dd4f43d/filewrap-1.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fa8266ae1279a74372b232709b02720dd8c6d6c0442976bc0957876367cf3cb0",
          "md5": "8525f7467d2c43a4e5d0a941ee1a6e18",
          "sha256": "1e581a3decb6c65ece27af6888ce464ec01b227287a7e570134cb390e755ce17"
        },
        "downloads": -1,
        "filename": "filewrap-1.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "8525f7467d2c43a4e5d0a941ee1a6e18",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5587,
        "upload_time": "2020-12-22T18:11:45",
        "upload_time_iso_8601": "2020-12-22T18:11:45.219062Z",
        "url": "https://files.pythonhosted.org/packages/fa/82/66ae1279a74372b232709b02720dd8c6d6c0442976bc0957876367cf3cb0/filewrap-1.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d7ee79b1998b6db1fe5db13297df66a9f61e0d54c20679fb068fb5e56f01b805",
          "md5": "be300b827a82ff8d3ac46e159b50c157",
          "sha256": "5fd0b26f5816649379e2d4b6d3f8a6d4fc87066fcb93599556815f39605b0d74"
        },
        "downloads": -1,
        "filename": "filewrap-1.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "be300b827a82ff8d3ac46e159b50c157",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5890,
        "upload_time": "2021-08-13T03:33:21",
        "upload_time_iso_8601": "2021-08-13T03:33:21.370061Z",
        "url": "https://files.pythonhosted.org/packages/d7/ee/79b1998b6db1fe5db13297df66a9f61e0d54c20679fb068fb5e56f01b805/filewrap-1.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "29dc4cd2d2eb576115869b30270cc17cb9c8049449a225151ae82c34900d5426",
          "md5": "fe05392c0c92eab8f7d98ffe49fa3660",
          "sha256": "29d66dd702afe79354827fbef560343949ddff7adf5166ad48a6fb0157377dda"
        },
        "downloads": -1,
        "filename": "filewrap-1.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "fe05392c0c92eab8f7d98ffe49fa3660",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6334,
        "upload_time": "2021-09-20T00:27:32",
        "upload_time_iso_8601": "2021-09-20T00:27:32.271927Z",
        "url": "https://files.pythonhosted.org/packages/29/dc/4cd2d2eb576115869b30270cc17cb9c8049449a225151ae82c34900d5426/filewrap-1.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "29dc4cd2d2eb576115869b30270cc17cb9c8049449a225151ae82c34900d5426",
        "md5": "fe05392c0c92eab8f7d98ffe49fa3660",
        "sha256": "29d66dd702afe79354827fbef560343949ddff7adf5166ad48a6fb0157377dda"
      },
      "downloads": -1,
      "filename": "filewrap-1.1.5.tar.gz",
      "has_sig": false,
      "md5_digest": "fe05392c0c92eab8f7d98ffe49fa3660",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6334,
      "upload_time": "2021-09-20T00:27:32",
      "upload_time_iso_8601": "2021-09-20T00:27:32.271927Z",
      "url": "https://files.pythonhosted.org/packages/29/dc/4cd2d2eb576115869b30270cc17cb9c8049449a225151ae82c34900d5426/filewrap-1.1.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}