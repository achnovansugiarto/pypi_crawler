{
  "info": {
    "author": "Oafish1",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Squares: A Counter-Based Random Number Generator\n\n\nThis library is an implementation of [arXiv:2004.06278](https://arxiv.org/abs/2004.06278) adapted for any number of bits.  Keep in mind that the original implementation was designed for 64 bit numbers while this implementation uses a default of 32.\n\nThe generation algorithm is **NOT MY WORK**.  For the paper on which this utility is based, please look [here](https://arxiv.org/abs/2004.06278).\n\n### Usage\n\nThe package can be installed with\n```bash\npip install squares-rng\n```\n\nAfter installing, the generator can be used with\n```bash\nfrom squares import squares\n\nrng = squares()\nnext(rng) # Returns 32-bit uint\n```\n\nThe generator can be seeded\n```bash\nrng = squares(seed=42)\nnext(rng) # 4161798144\n```\n\nIf you are struggling to decide on a seed to use for reproducible testing, one can be generated from the computer's internal clock\n```bash\nfrom squares import get_suitable_seed\n\nseed = get_suitable_seed()\n```\n\nThis function is used in the case that no seed is provided to the generator.\n\n`get_suitable_seed` has no bit restrictions.  If a seed containing too many bits is passed to the generator, it will be truncated and a warning will be shown.\n\nFor small seeds, the `safety` parameter should be left as `True`\n```bash\nrng = squares(seed=42, safety=False)\nnext(rng) # 0\nnext(rng) # 115605504\n```\n\n`safety` is a proprietary method to allow for smaller keys, iterating the generator until the seed has a non-zero maximal bit.  Due to the nature of the algorithm, smaller keys would otherwise result in much smaller numbers for the first few iterations.  With `safety=True`, keep in mind that the first generation will take longer than subsequent calls.\n\nThe maximal bits of the generated number can also be set\n```bash\nrng = squares(seed=84, bits=64)\nnext(rng) # 9267630197371305984\n```\n\nThe default is `bits=32` for maximal python compatibility.  Keep in mind that this does not automatically influence the internal calculation except where necessary.  Some internal calculations may involve more than the specified number of bits if python allows it.  However, the generated integer will not exceed the requested bits.\n\nLastly, a truncation utility is included\n```bash\nfrom squares import truncate\n\ntruncate(6798039809, 32) # 2503072513\n```\n\nThe truncation utility defaults to truncating the higher bits, but can be configured to preserve them instead\n```bash\ntruncate(698320, 16, right_shift=True) # 43645\n```\n\n# Original Paper\n\n[Widynski, *arXiv:2004.06278*](https://arxiv.org/abs/2004.06278)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Oafish1/Squares",
    "keywords": "",
    "license": "GNLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "squares-rng",
    "package_url": "https://pypi.org/project/squares-rng/",
    "platform": "",
    "project_url": "https://pypi.org/project/squares-rng/",
    "project_urls": {
      "Homepage": "https://github.com/Oafish1/Squares"
    },
    "release_url": "https://pypi.org/project/squares-rng/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A simple counter-based pseudo random number generator implementation based on arXiv:2004.06278",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11107111,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "968a98a66d82c59d373a38e7499a2887e16b1e27176804279913192732bce7b4",
          "md5": "7e313b0e189b3e0c3ec921bae35c7a16",
          "sha256": "13d432659fbdf675c418c90f34d4e56456f6340e270850deace22c8baebfb2c6"
        },
        "downloads": -1,
        "filename": "squares_rng-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7e313b0e189b3e0c3ec921bae35c7a16",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16367,
        "upload_time": "2021-08-06T03:26:55",
        "upload_time_iso_8601": "2021-08-06T03:26:55.106358Z",
        "url": "https://files.pythonhosted.org/packages/96/8a/98a66d82c59d373a38e7499a2887e16b1e27176804279913192732bce7b4/squares_rng-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b29928ea9748aae40631273b4a2027e06119656d014d3a6408a0a97f628f43b2",
          "md5": "2610455817236daef5f009bb60c67ed5",
          "sha256": "50764bc2d7e233b48592668a9d93a99ec587399db58cf16353b4e582e386c9d0"
        },
        "downloads": -1,
        "filename": "squares-rng-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2610455817236daef5f009bb60c67ed5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3980,
        "upload_time": "2021-08-06T03:26:56",
        "upload_time_iso_8601": "2021-08-06T03:26:56.562871Z",
        "url": "https://files.pythonhosted.org/packages/b2/99/28ea9748aae40631273b4a2027e06119656d014d3a6408a0a97f628f43b2/squares-rng-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "968a98a66d82c59d373a38e7499a2887e16b1e27176804279913192732bce7b4",
        "md5": "7e313b0e189b3e0c3ec921bae35c7a16",
        "sha256": "13d432659fbdf675c418c90f34d4e56456f6340e270850deace22c8baebfb2c6"
      },
      "downloads": -1,
      "filename": "squares_rng-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7e313b0e189b3e0c3ec921bae35c7a16",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 16367,
      "upload_time": "2021-08-06T03:26:55",
      "upload_time_iso_8601": "2021-08-06T03:26:55.106358Z",
      "url": "https://files.pythonhosted.org/packages/96/8a/98a66d82c59d373a38e7499a2887e16b1e27176804279913192732bce7b4/squares_rng-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b29928ea9748aae40631273b4a2027e06119656d014d3a6408a0a97f628f43b2",
        "md5": "2610455817236daef5f009bb60c67ed5",
        "sha256": "50764bc2d7e233b48592668a9d93a99ec587399db58cf16353b4e582e386c9d0"
      },
      "downloads": -1,
      "filename": "squares-rng-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "2610455817236daef5f009bb60c67ed5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3980,
      "upload_time": "2021-08-06T03:26:56",
      "upload_time_iso_8601": "2021-08-06T03:26:56.562871Z",
      "url": "https://files.pythonhosted.org/packages/b2/99/28ea9748aae40631273b4a2027e06119656d014d3a6408a0a97f628f43b2/squares-rng-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}