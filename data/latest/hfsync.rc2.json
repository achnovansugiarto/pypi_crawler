{
  "info": {
    "author": "Tri Songz",
    "author_email": "ts@growthengineai.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Intended Audience :: Developers"
    ],
    "description": "# hfsync\n Sync Huggingface Transformer Models to Cloud Storage (GCS/S3 + more soon)\n\n\n\n## Quickstart\n\n```python\n!pip install --upgrade git+https://github.com/trisongz/hfsync.git\n!pip install --upgrade hfsync\n\n```\n\n## Usage\n```python\nfrom hfsync import GCSAuth, S3Auth # AZAuth (not yet supported)\nfrom hfsync import Sync\n\n# Note: Only use one auth client.\n\n# To have Auth picked up from env vars / implicitly\nauth_client = GCSAuth()\nauth_client = S3Auth()\n\n# To set Auth directly / explicitly\nauth_client = GCSAuth(service_account='service_account', token='gcs_token')\nauth_client = S3Auth(access_key='access_key', secret_key='secret_key', session_token='token')\n\n# Local and Cloud Paths\nlocal_path = '/content/model'\ncloud_path = 'gs://bucket/model/experiment' # or 's3://bucket/model/experiment'\nsync_client = Sync(local_path=local_path, cloud_path=cloud_path, auth_client=auth_client)\n\n# Or Implicitly without an auth_client to have it figure things out based on your cloud path\nsync_client = Sync(local_path=local_path, cloud_path=cloud_path)\n\n# After training loop, sync your pretrained model to both local and cloud. \n# You don't need to explicitly call model.save_pretrained(path) as this function will do that automatically\nresults = sync_client.save_pretrained(model, tokenizer)\n# results = {\n# '/content/model/pytorch_model.bin': 'gs://bucket/model/experiment/pytorch_model.bin'\n# ...\n# }\n\n# Pull Down from your bucket to local\nresults = sync_client.sync_to_local(overwrite=False)\n# results = {\n# 'gs://bucket/model/experiment/pytorch_model.bin': '/content/model/pytorch_model.bin'\n# ...\n# }\n\n# Or set explicit paths if you are changing paths, for example, different dirs for each checkpoint\nnew_local = '/content/model2'\nresults = sync_client.sync_to_local(local_path=new_local, cloud_path=cloud_path, overwrite=False)\n# results = {\n# 'gs://bucket/model/experiment/pytorch_model.bin': '/content/model2/pytorch_model.bin'\n# ...\n# }\n\n# Or set paths to use\nnew_cloud = 'gs://bucket/model/experiment2'\nsync_client.set_paths(local_path=new_local, cloud_path=new_cloud)\nresults = sync_client.save_pretrained(model, tokenizer)\n# results = {\n# '/content/model2/pytorch_model.bin': 'gs://bucket/model/experiment2/pytorch_model.bin'\n# ...\n# }\n\n\n# You can also use the underlying filesystem to copy a file directly\n\n# Implicitly & Explicitly\nfilename = '/content/model2/pytorch_model.bin'\nsync_client.copy(filename) # Copies to the set cloud_path variable -> 'gs://bucket/model/experiment2/pytorch_model.bin'\nsync_client.copy(filename, dest='gs://bucket/model/experiment3') # Copies to dest variable -> 'gs://bucket/model/experiment3/pytorch_model.bin'\nsync_client.copy(filename, dest='gs://bucket/model/experiment3/model.bin') # Copies to dest variable -> 'gs://bucket/model/experiment3/model.bin'\n\nfilename = 'gs://bucket/model/experiment2/pytorch_model.bin'\nsync_client.copy(filename) # Copies to the set local_path variable -> '/content/model2/pytorch_model.bin'\nsync_client.copy(filename, dest='/content/model3') # Copies to dest variable -> '/content/model3/pytorch_model.bin'\nsync_client.copy(filename, dest='/content/model3/model.bin') # Copies to dest variable -> '/content/model3/model.bin'\n\n# Copy Explicitly\nsrc_file = '/content/mydataset.pb'\ndest_file = 's3://bucket/data/dataset.pb'\nsync_client.copy(src_file, dest_file)\n\n```\n### Environment Variables Used\n\nGoogle Cloud Storage\n- `GOOGLE_API_TOKEN`\n- `GOOGLE_APPLICATION_CREDENTIALS`\n\nAWS S3\n- `AWS_ACCESS_KEY_ID`\n- `AWS_SECRET_ACCESS_KEY`\n- `AWS_SESSION_TOKEN`\n\n\n### Limitations\n\nWhile the library tries to respect and check prior to overwriting where `overwrite=false` is available, it's not currently supported agnostically across all cloud.\nSupport for other Cloud FS is WIP.\n\n### Credits\n\n- [file-io](https://github.com/trisongz/file_io)\n- [smart-open](https://github.com/RaRe-Technologies/smart_open)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/trisongz/hfsync",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "hfsync",
    "package_url": "https://pypi.org/project/hfsync/",
    "platform": "",
    "project_url": "https://pypi.org/project/hfsync/",
    "project_urls": {
      "Homepage": "http://github.com/trisongz/hfsync"
    },
    "release_url": "https://pypi.org/project/hfsync/0.0.2/",
    "requires_dist": [
      "file-io[cloud]",
      "transformers"
    ],
    "requires_python": ">3.6",
    "summary": "hfsync",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10263156,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cfaaf36da46f4043ad4063576e8bdb2edfc637ae6a7acddbb8074381cfdc91ce",
          "md5": "8a8e87add79ebf9b3eed6b552bda2fd2",
          "sha256": "e79fbf56fc4ead086942b9828348697251f2525438e55851e975380e3d2dc1ec"
        },
        "downloads": -1,
        "filename": "hfsync-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8a8e87add79ebf9b3eed6b552bda2fd2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">3.6",
        "size": 5957,
        "upload_time": "2021-05-05T05:58:41",
        "upload_time_iso_8601": "2021-05-05T05:58:41.266119Z",
        "url": "https://files.pythonhosted.org/packages/cf/aa/f36da46f4043ad4063576e8bdb2edfc637ae6a7acddbb8074381cfdc91ce/hfsync-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2d67b8938543630dd548fa9f4445ad7b81d3e245b678737b9de44747dd4f40ed",
          "md5": "c0684dcc94a162e455b6f5fbb4447acf",
          "sha256": "970ce04a82bd406433fcdec976215f3685e27b0e357e5387e48fe4c48c206e0d"
        },
        "downloads": -1,
        "filename": "hfsync-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c0684dcc94a162e455b6f5fbb4447acf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.6",
        "size": 5014,
        "upload_time": "2021-05-05T05:58:42",
        "upload_time_iso_8601": "2021-05-05T05:58:42.329206Z",
        "url": "https://files.pythonhosted.org/packages/2d/67/b8938543630dd548fa9f4445ad7b81d3e245b678737b9de44747dd4f40ed/hfsync-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dd485140adfd0f0f3d14bc5a846dc34c2aace9debf2d42fa64f78d51c3208b00",
          "md5": "5cc95b852cad7feb3cba2155202df14e",
          "sha256": "86761a61213cd4e280d18a94dacd74bdfcf0204dbd57fa87ce48defa6016318d"
        },
        "downloads": -1,
        "filename": "hfsync-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5cc95b852cad7feb3cba2155202df14e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">3.6",
        "size": 6168,
        "upload_time": "2021-05-05T06:46:42",
        "upload_time_iso_8601": "2021-05-05T06:46:42.907664Z",
        "url": "https://files.pythonhosted.org/packages/dd/48/5140adfd0f0f3d14bc5a846dc34c2aace9debf2d42fa64f78d51c3208b00/hfsync-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f4b14f8cdaa71fa0ea81af34d08ee745585e7a304b627ffe277b1638323ec9b9",
          "md5": "0770b8600572bb1e0f0446a7020bad42",
          "sha256": "0047d2d7ced343f9ea8191dc796bfe6c563e563e4c941eff9744c4524a995d77"
        },
        "downloads": -1,
        "filename": "hfsync-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0770b8600572bb1e0f0446a7020bad42",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.6",
        "size": 5207,
        "upload_time": "2021-05-05T06:46:43",
        "upload_time_iso_8601": "2021-05-05T06:46:43.989568Z",
        "url": "https://files.pythonhosted.org/packages/f4/b1/4f8cdaa71fa0ea81af34d08ee745585e7a304b627ffe277b1638323ec9b9/hfsync-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dd485140adfd0f0f3d14bc5a846dc34c2aace9debf2d42fa64f78d51c3208b00",
        "md5": "5cc95b852cad7feb3cba2155202df14e",
        "sha256": "86761a61213cd4e280d18a94dacd74bdfcf0204dbd57fa87ce48defa6016318d"
      },
      "downloads": -1,
      "filename": "hfsync-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5cc95b852cad7feb3cba2155202df14e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">3.6",
      "size": 6168,
      "upload_time": "2021-05-05T06:46:42",
      "upload_time_iso_8601": "2021-05-05T06:46:42.907664Z",
      "url": "https://files.pythonhosted.org/packages/dd/48/5140adfd0f0f3d14bc5a846dc34c2aace9debf2d42fa64f78d51c3208b00/hfsync-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f4b14f8cdaa71fa0ea81af34d08ee745585e7a304b627ffe277b1638323ec9b9",
        "md5": "0770b8600572bb1e0f0446a7020bad42",
        "sha256": "0047d2d7ced343f9ea8191dc796bfe6c563e563e4c941eff9744c4524a995d77"
      },
      "downloads": -1,
      "filename": "hfsync-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "0770b8600572bb1e0f0446a7020bad42",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">3.6",
      "size": 5207,
      "upload_time": "2021-05-05T06:46:43",
      "upload_time_iso_8601": "2021-05-05T06:46:43.989568Z",
      "url": "https://files.pythonhosted.org/packages/f4/b1/4f8cdaa71fa0ea81af34d08ee745585e7a304b627ffe277b1638323ec9b9/hfsync-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}