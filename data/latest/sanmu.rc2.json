{
  "info": {
    "author": "dongfangtianyu",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Sanmu\n\nSanmu 是一个纯用Excel描述测试用例的UI自动化测试框，基于python实现，支持unittest和pytest两种模式。\n\n借助Sanmu框架，不需要掌握编程语言，也不需要编写代码，只需要编辑Excel即可完成UI自动化测试。\n\n\n\n## 功能特点\n- [x] 纯Excel测试用例，不需要任何代码\n- [x] 支持pytest及其插件生态\n- [x] webdriver：**自动就绪**，支持ChromeDriver（国内网络复杂，暂时只关注ChromeDriver）\n- [x] 关键字驱动：内置常用关键字，实现**关键字驱动测试**，提供了接口可以**扩展自定义关键字**\n- [x] 变量：使用`save`关键字**创建变量**，使用`{vars}`标签**使用变量**\n- [x] 定位：内置可配置的等待策略+XPath智能补全功能，实现元素**智能定位**\n- [x] 用例截图：元素交互时自动聚焦，交互后**自动截图**记录\n- [x] HTML报告：自动生成HTML测试报告，展示用例执行过程、**交互截图**\n- [x] 用例筛选：通过 `-k` 参数，可以**筛选指定的用例**进行执行\n- [x] 命令指定excel文件路径（pytest模式）\n- [x] 支持allure报告（pytest模式）\n- [x] 自动生成**关键字文档**\n- [x] 支持**并行测试**(pytest-xdist插件)\n- [x] 一键生成的**excel文件模板**\n- [x] excel文件内容增加**关键字提示**（不用死记硬背关键字了）\n- [ ] 变量类型：支持变量进行**类型转换**\n- [x] 支持基于pytest.ini 的框架配置\n- [ ] 增加逻辑控制关键字：for、if 、else、sleep等\n- [ ] 调用python内置函数\n- [ ] 调用python**自定义函数**\n- [x] 弹窗：自动处理弹窗，避免用例阻塞、定位失败等问题\n- [ ] 支持Appium，实现App端的自动化测试\n- [x] 支持docker run，开箱即用\n- [ ] 在线测试报告：展示框架运行日志，支持查看历史报告\n- [x] 测试结果即时通知：测试执行完毕后，自动通知到相关人员，支持**Email、钉钉、企业微信**\n\n\n\n## 安装\n\nsanmu可以通过pip进行安装\n\n```bash\npip install sanmu -U\n```\n\n\n\n## 使用\n\n在控制台输入 `sanmu --help` 后可以看到帮助信息\n\n```bash\n>sanmu --help \nUsage: sanmu [OPTIONS] COMMAND [ARGS]...           \n                                                   \n  Sanmu 是一个纯用Excel描述测试用例的UI自动化测试框\n                                                   \n  默认执行 run_pytest 命令                         \n                                                   \nOptions:                                           \n  --help  Show this message and exit.              \n\nCommands:\n  report        调用allure，生成HTML报告\n  run-pytest    （默认）启动 Pytest 框架执行用例，通过pytest-html生成报告\n  run-unittest  启动UnitTess框架执行用例，通过HTMLTestRunner生成报告\n  show_keys  查看关键字文档\n  start         创建demo文件，并命名为 test_{name}.xlsx\n\n```\n\n\n\n如果只输入`sanmu` 将调用默认子命令`run-pytest`，开始执行pytest模式的用例\n```\n>sanmu        \n========================== test session starts ==========================\nplatform win32 -- Python 3.10.1, pytest-6.2.5, py-1.11.0, pluggy-1.0.0\nrootdir: D:\\Users\\Tianyu\\PycharmProjects\\UI_by_Excel, configfile: pytest.ini\nplugins: allure-pytest-2.9.45, html-3.1.1, metadata-1.11.0, rerunfailures-10.2, sanmu-0.0.6\ncollected 2 items\n\ntest_电商项目.xlsx ..                                         [100%]           \n========================== 2 passed in 15.22s ===========================\n```\n\n\n\n\n\n## 编写用例\n\n通过excel文件编写用例：\n\n- 每个sheet视为一个TestSuite，\n- 数据行，视为测试用例的“步骤”\n- 如果步骤为“0”，视为一个新的用例\n\n基本关系：\n\n- 每个excel中有**多个 sheet**\n- 每个sheet中有**多个 用例**\n- 每个用例中有**多个 步骤**\n- 每个步骤中有**说明、关键字、参数**\n\n示例：\n\n![基于Excel的测试用例](images/case_by_excel.jpg)\n\n## 查看报告\n\n### 1. unittest模式\n\n在unittest模式下，sanmu强绑定了HTMLTestRunner，在执行完毕后，自动在**当前目录**生成前缀为`TestResults`的HTML文件，效果如下：\n\n![](images/report_by_unittest.png)\n\n### 2. pytest模式\n\n在pytest模式下，可以按照pytest的惯例，使用以下插件生成报告，sanmu对其有良好的兼容和支持：\n\n- pytest-html\n- allure-pytest\n\n\n\n![](images/report_by_allure.jpg)\n\n\n\n## 结果通知\n\n### 1. 企业微信\n\n在配置文件中填写钉钉通知设置，在测试结束后会自动通知测试结果\n\n\n\n配置内容：\n\n```ini\n[sanmu]\nqywx_url = https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=2c253bf4-6412-4f0e-bc7e-5e0f3216bc24\n```\n\n消息预览：\n\n![企业微信通知消息](images/msg_to_qywx.jpg)\n\n### 2. 钉钉\n\n在配置文件中填写钉钉通知设置，在测试结束后会自动通知测试结果\n\n\n\n配置内容：\n\n```ini\n[sanmu]\ndingding_url = https://oapi.dingtalk.com/robot/send?access_token=3905a29983f849fc3c6e9728eb1996cfadfefe7e1cab511c506edd3ee89f5200\ndingding_secret = SEC51f562f1c05967c13d40907fd495585132fa180af76fb6ef0a61f4f682cd87c2\n```\n\n消息预览：\n\n![钉钉消息通知](images/msg_to_dingding.jpg)\n\n\n\n\n\n## 并发执行\n\nsanmu框架支持为excel用例进行并发执行测试，使用并发执行时，为sanmu 添加参数即可\n\n```\nsanmu -n 4\n```\n\n也可修改pytest.ini中的adopts项来传递参数\n\n```ini\n[pytest]\naddopts = -n 4\n```\n\n其中`4 `为并发进程数， 如果改为`auto` 则根据CPU数量自动配置并发进程数\n\n**注意：** 并发模式下，每个进程会创建单独的日志文件\n\n\n\n## 内置关键字\n可通过`show-keys`命令查看内置关键字的说明和参数\n```bash\n>sanmu show-keys\n\n关键字及其参数\n====================\n关键字：alert_dismiss\n        为alert点击取消\n--------------------\n关键字：alert_accept\n        为alert点击确定\n\n        :param text: 如果输入的内容（可选）\n--------------------\n关键字 assert\n        进行断言\n\n        :param value: 预期结果\n        :param assert_name: 断言表达式\n        :param actual_value: 实际结果\n--------------------\n关键字: chosen\n        适用于jquery-chosen的下拉选择\n        :param xpath: 选择框的定位表达式\n        :param value: 要输入的值\n--------------------\n关键字：click\n        点击指定的元素\n\n        等待元素可交互， 可以选择强制点击\n        :param locator: 元素定位表达式\n        :param force: 是否强制点击，默认为False\n--------------------\n关键字：frame_ente\n        进入指定的iframe\n\n        :param xpath: iframe定位表达式\n--------------------\n关键字：frame_exit\n        退出iframe\n--------------------\n关键字：frame_top\n        返回到顶层frame\n--------------------\n关键字 ：goto\n        跳转到指定页面\n        :param url: 指定页面的url\n--------------------\n关键字：input\n        在指定元素内容输入内容\n\n        等待元素可交互\n        :param locator: 元素定位表达式\n        :param content: 要输入的内容\n--------------------\n关键字：move\n        鼠标移动指定元素的相对位置\n\n        :param xpath: 元素定位表达式\n        :param x: 相对元素中心的水平位置，偏移x像素\n        :param y: 相对元素中心的垂直位置，偏移y像素\n--------------------\n关键字：save\n        保存变量\n\n        变量应该是一个字符串，在字符串中使用`{}`标签将自动引用已有变量\n        例如：\n        `save_value(\"a\", \"123\")`   =>  `a = \"123\"`\n        `save_value(\"b\", \"hi:{a})`   =>  `b = \"hi:123\"`\n\n        :param var_name: 变量名\n        :param value: 变量值（字符串）\n--------------------\n关键字：save_attr\n        保存元素属性\n\n        :param var_name: 要保存的变量名\n        :param xpath: 元素定位表达式，\n        :param attr_name: 属性名\n--------------------\n关键字：save_text\n        保存页面上text内容\n\n        :param var_name: 要保存的变量名\n        :param xpath: 元素定位表达式，如果要获取alert的内容，请传递字符串：alert\n        :param allow_empty: 是否允许为空，默认为Ture\n--------------------\n关键字：save_title\n        保存网页标题\n\n        :param var_name: 要保存的变量名\n--------------------\n关键字：save_url\n        保存当前网址\n\n        :param var_name: 要保存的变量名\n--------------------\n关键字：show\n        滚动画面使指定元素可见\n\n        :param xpath: 元素定位表达式\n--------------------\n关键字：sleep\n        用例强制等待x 秒\n\n        :param times: 等待的秒数，可以有小数点\n--------------------\n关键字 ：touch\n        聚焦指定元素\n\n        :param locator: 元素定位表达式\n--------------------\n\n```\n\n\n\n\n\n## 自定义关键字（todo）\n\ntodo\n\n\n\n\n\n\n\n\n## 验证器 (obsolete)\n\n验证器(即：verify关键字)接收以下参数\n\n- locator  ，要断言的元素\n- verify_name， 要断言的属性\n- expression， 断言表达式\n- value， 预期值\n\n\n\n### verify_name\n\n要断言的属性，在excel独占一个单元格，可选的值如下表\n\n| verify_name | 详情            |      |\n| ----------- | --------------- | ---- |\n| title       | 网页标题        |      |\n| url         | 网页url         |      |\n| alert       | alert弹窗的文本 |      |\n| text        | 元素内的文本    |      |\n\n### expression\n\n断言表达式在excel独占一个单元格，可选的值如下表\n\n| expression | 详情     | 例子                     |\n| ---------- | -------- | ------------------------ |\n| >          | 大于     | 3 > 2                    |\n| >=         | 大于等于 | 2 >= 2                   |\n| <=         | 小于等于 | 1 <= 2                   |\n| <          | 小于     | 0 < 2                    |\n| ==         | 相等     | 2 == 2<br />张三 == 张三 |\n| !=         | 不相等   | 1 != 2<br />张三 != 李四 |\n| contains   | 包含     | 张三 contains 张         |\n|            |          |                          |\n|            |          |                          |\n\n\n\n## 配置\n\n可配置项：\n\n- [x] 日志等级\n- [x] 日志路径\n- [x] 聚焦颜色\n- [x] 报告路径\n- [x] 等待时长\n- [x] 等待频率\n- [x] 默认使用强制点击\n- [x] Selenium Grid\n- [x] 默认浏览器类型\n- [x] 默认浏览器启动参数\n- [ ] ~~HTMLTestRunner模板路径~~\n\n\n\n如果项目中未包含`pytest.ini`，则框架会自动生成，其包含了各项配置的默认值\n\n```ini\n[pytest] # pytest原生设置\naddopts =\n\t# allure结果目录\n    --alluredir=./.allure_results\n    # 执行前自动清空allure结果\n    --clean-alluredir\n    # 并发执行用例\n    -n auto\n\nlog_cli = 0 \n# 日志文件路径\nlog_file = pytest.txt\n# 日志文件等级\nlog_file_level = info\n# 日志文件格式\nlog_file_format = %(levelname)-8s %(asctime)s [%(name)s:%(lineno)s]  : %(message)s\n\n[sanmu] # sanmu框架扩展设置\n\n# Allure的绝对路径\nallure_path = allure\n# Allure报告的保存目录\nallure_report = ./report\n# allure生成报告后是否自动打开\nallure_show = yes\n\n# 浏览器类型\ndriver_type= chrome\n# 浏览器启动参数\ndriver_option = \n# grid 地址，留空则使用本地浏览器\nselenium_grid = \n\n# 自动等待的检查频率（秒/次）\nwait_poll = 0.1\n# 自动等待的最大时长（秒）\nwait_max = 5\n\n# 元素聚焦时的CSS样式\ntouch_css = background: #71b95ea1; border: 2px solid red;\n\n# 使用强制点击\nforce_clieck = no\n\n# email配置\nemail_server =\nemail_from = \nemail_password = \nemail_to = \n\n# 企业微信\nqywx_url =\n\n# 钉钉\ndingding_url =\ndingding_secret =\n\n```\n\n\n## 发布流程\n\n1. 开发环境执行pytest，确保测试用例全部通过\n2. 修改版本号，并创建新的commit和tag\n3. push到github后，手动创建新的releases\n4. releases会触发CI/CD，自动完成发布\n\n\n\n## 联系作者\n\n如果在使用过程中遇到什么问题，欢迎通过以下方式与我联系：\n\n-   **Email**：dongfangtianyu@gmail.com\n\n-   **WeiXin**:  python_sanmu\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dongfangtianyu/sanmu",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sanmu",
    "package_url": "https://pypi.org/project/sanmu/",
    "platform": null,
    "project_url": "https://pypi.org/project/sanmu/",
    "project_urls": {
      "Homepage": "https://github.com/dongfangtianyu/sanmu"
    },
    "release_url": "https://pypi.org/project/sanmu/0.1.1/",
    "requires_dist": [
      "webdriver-manager",
      "selenium",
      "openpyxl",
      "pydantic",
      "ddt",
      "pytest",
      "pytest-html"
    ],
    "requires_python": ">=3.10",
    "summary": "用Excel描述测试用例的UI自动化测试框架，基于Selenium 和 UnitTes",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13953800,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2d2653002b79c97096154d256f4c310ad2ac41157a56497eb28bd20473714490",
          "md5": "8484775f05c010713f1337c6f4a01be5",
          "sha256": "580bd89b1369e5fd5cab90c501dffdac775e792980b36f60af051c27e1e3aa4d"
        },
        "downloads": -1,
        "filename": "sanmu-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8484775f05c010713f1337c6f4a01be5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 10012,
        "upload_time": "2021-12-24T06:12:48",
        "upload_time_iso_8601": "2021-12-24T06:12:48.900962Z",
        "url": "https://files.pythonhosted.org/packages/2d/26/53002b79c97096154d256f4c310ad2ac41157a56497eb28bd20473714490/sanmu-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "56f69950c459d5b4e6e30fe7fa4ca79f19f90c2e66e6b3a97715ace5652816b3",
          "md5": "3453e74ba5704771dcf31cd0be30dd63",
          "sha256": "ccdaf1f858a1cd6713baf9d30684146e0aceafed23993acc462a4999ea9c063e"
        },
        "downloads": -1,
        "filename": "sanmu-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3453e74ba5704771dcf31cd0be30dd63",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 12119,
        "upload_time": "2022-05-27T11:14:08",
        "upload_time_iso_8601": "2022-05-27T11:14:08.131476Z",
        "url": "https://files.pythonhosted.org/packages/56/f6/9950c459d5b4e6e30fe7fa4ca79f19f90c2e66e6b3a97715ace5652816b3/sanmu-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c34c0b8f08acc0e2e21caee6b15065737b272020a06455672fc4fbed525db2f4",
          "md5": "a0324a43aa58f2e7b567be5b48792556",
          "sha256": "afb165002553a49821eb5ac6382a609f34084e1acd5e59dccecb57b427ad8070"
        },
        "downloads": -1,
        "filename": "sanmu-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a0324a43aa58f2e7b567be5b48792556",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 15307,
        "upload_time": "2022-05-27T11:14:09",
        "upload_time_iso_8601": "2022-05-27T11:14:09.467830Z",
        "url": "https://files.pythonhosted.org/packages/c3/4c/0b8f08acc0e2e21caee6b15065737b272020a06455672fc4fbed525db2f4/sanmu-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "56f69950c459d5b4e6e30fe7fa4ca79f19f90c2e66e6b3a97715ace5652816b3",
        "md5": "3453e74ba5704771dcf31cd0be30dd63",
        "sha256": "ccdaf1f858a1cd6713baf9d30684146e0aceafed23993acc462a4999ea9c063e"
      },
      "downloads": -1,
      "filename": "sanmu-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3453e74ba5704771dcf31cd0be30dd63",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10",
      "size": 12119,
      "upload_time": "2022-05-27T11:14:08",
      "upload_time_iso_8601": "2022-05-27T11:14:08.131476Z",
      "url": "https://files.pythonhosted.org/packages/56/f6/9950c459d5b4e6e30fe7fa4ca79f19f90c2e66e6b3a97715ace5652816b3/sanmu-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c34c0b8f08acc0e2e21caee6b15065737b272020a06455672fc4fbed525db2f4",
        "md5": "a0324a43aa58f2e7b567be5b48792556",
        "sha256": "afb165002553a49821eb5ac6382a609f34084e1acd5e59dccecb57b427ad8070"
      },
      "downloads": -1,
      "filename": "sanmu-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "a0324a43aa58f2e7b567be5b48792556",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10",
      "size": 15307,
      "upload_time": "2022-05-27T11:14:09",
      "upload_time_iso_8601": "2022-05-27T11:14:09.467830Z",
      "url": "https://files.pythonhosted.org/packages/c3/4c/0b8f08acc0e2e21caee6b15065737b272020a06455672fc4fbed525db2f4/sanmu-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}