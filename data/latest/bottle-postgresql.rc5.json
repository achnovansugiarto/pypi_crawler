{
  "info": {
    "author": "Bernardo Couto",
    "author_email": "bernardocouto.py@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Database"
    ],
    "description": "# Bottle PostgreSQL\n![PyPI - License](https://img.shields.io/pypi/l/bottle-postgresql?color=4B8BBE&label=License)\n![PyPI - Version](https://img.shields.io/pypi/v/bottle-postgresql?color=FFE873&label=PyPI)\n\nBottle PostgreSQL is a simple adapter for PostgreSQL with connection pooling.\n\n## Configuration\nThe configuration can be done through **JSON** file or by **Dict** following the pattern described below:\n```json\n{\n  \"connect_timeout\": 30,\n  \"dbname\": \"postgres\",\n  \"host\": \"localhost\",\n  \"maxconnections\": 5,\n  \"password\": \"postgres\",\n  \"port\": 5432,\n  \"print_sql\": true,\n  \"user\": \"postgres\n}\n```\n\nCreate the `queries` directory. This should contain all the `.sql` files that the library will use.\n\n## Usage\nPyPostgreSQLWrapper usage description:\n\n### Delete\n\n#### Delete with where\n```python\nfrom bottle_postgresql import Database\n\nwith Database() as connection:\n    (\n        connection\n        .delete('test')\n        .where('id', 1)\n        .execute()\n    )\n```\n\n#### Delete with where condition\n```python\nfrom bottle_postgresql import Database\n\nwith Database() as connection:\n    (\n        connection\n        .delete('test')\n        .where('description', 'Test%', operator='like')\n        .execute()\n    )\n```\n\n### Execute\n```python\nfrom bottle_postgresql import Database\n\nwith Database() as connection:\n    (\n        connection\n        .execute(\n            '''\n                create table if not exists test (\n                    id bigserial not null,\n                    name varchar(100),\n                    description varchar(255),\n                    constraint test_primary_key primary key (id)\n                )\n            ''',\n            skip_load_query=True\n        )\n    )\n```\n\n### Insert\n```python\nfrom bottle_postgresql import Database\n\nwith Database() as connection:\n    (\n        connection\n        .insert('test')\n        .set('id', 1)\n        .set('name', 'Name')\n        .set('description', 'Description')\n        .execute()   \n    )\n```\n\n### Paging\n\n#### Paging with where condition\n```python\nfrom bottle_postgresql import Database\n\nwith Database() as connection:\n    (\n        connection\n        .select('test')\n        .fields('id', 'name', 'description')\n        .where('id', 1, operator='>')\n        .order_by('id')\n        .paging(0, 2)\n    )\n```\n\n#### Paging without where condition\n```python\nfrom bottle_postgresql import Database\n\nwith Database() as connection:\n    (\n        connection\n        .select('test')\n        .paging(0, 10)\n    )\n```\n\n### Select\n\n#### Fetch all\n```python\nfrom bottle_postgresql import Database\n\nwith Database() as connection:\n    (\n        connection\n        .select('test')\n        .execute()\n        .fetch_all()   \n    )\n```\n\n#### Fetch many\n```python\nfrom bottle_postgresql import Database\n\nwith Database() as connection:\n    (\n        connection\n        .select('test')\n        .execute()\n        .fetch_many(1)\n    )\n```\n\n#### Fetch one\n```python\nfrom bottle_postgresql import Database\n\nwith Database() as connection:\n    (\n        connection\n        .select('test')\n        .execute()\n        .fetch_one()\n    )\n```\n\n#### Select by file\n```python\nfrom bottle_postgresql import Database\n\nwith Database() as connection:\n    (\n        connection\n        .execute('find_by_id', {'id': 1})\n        .fetch_one()\n    )\n```\n\n#### Select by query\n```python\nfrom bottle_postgresql import Database\n\nwith Database() as connection:\n    (\n        connection\n        .execute('select id, name, description from test where id = %(id)s', {'id': 1})\n        .fetch_one()\n    )\n```\n\n### Update\n\n#### Update with where\n```python\nfrom bottle_postgresql import Database\n\nwith Database() as connection:\n    (\n        connection\n        .update('test')\n        .set('name', 'New Name')\n        .set('description', 'New Description')\n        .where('id', 1)\n        .execute()   \n    )\n```\n\n#### Update with where all\n```python\nfrom bottle_postgresql import Database\n\nwith Database() as connection:\n    (\n        connection\n        .update('test')\n        .set('name', 'New Name')\n        .set('description', 'New Description')\n        .where_all({'id': 1, 'name': 'Name', 'description': 'Description'})\n        .execute()\n    )\n```\n\n### Using filters\n\n#### SQL\n```sql\nselect\n    id,\n    name,\n    description\nfrom test\nwhere 1 = 1\n{{#id}}\nand id = %(id)s\n{{/id}}\n{{#id}}\nand name like %(name)s\n{{/id}}\n```\n\n#### Select with filters\n```python\nfrom bottle_postgresql import Database\n\nwith Database() as connection:\n    (\n        connection\n        .execute('test.find_all_with_filter', parameters={'id': 1, 'name': 'Name'})\n        .fetch_one()\n    )\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bernardocouto/bottle-postgresql",
    "keywords": "bottle database postgresql psycopg2",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "bottle-postgresql",
    "package_url": "https://pypi.org/project/bottle-postgresql/",
    "platform": "any",
    "project_url": "https://pypi.org/project/bottle-postgresql/",
    "project_urls": {
      "Homepage": "https://github.com/bernardocouto/bottle-postgresql"
    },
    "release_url": "https://pypi.org/project/bottle-postgresql/1.0.1/",
    "requires_dist": [
      "dbutils",
      "psycopg2-binary",
      "pystache"
    ],
    "requires_python": "",
    "summary": "Bottle PostgreSQL is a simple adapter for PostgreSQL with connection pooling.",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11638929,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "401b5f6f2e745bc013453c7558f7102e1708dbe09e258ff5c7d65607a9a27a6d",
          "md5": "e3d47da245fa011147c508c6d8e30575",
          "sha256": "ebdbbd60c668846974c0e1d88c3e743474673bb71925a61e5d39f6d37aebd1a3"
        },
        "downloads": -1,
        "filename": "bottle_postgresql-0.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e3d47da245fa011147c508c6d8e30575",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 4188,
        "upload_time": "2021-03-23T19:39:04",
        "upload_time_iso_8601": "2021-03-23T19:39:04.662913Z",
        "url": "https://files.pythonhosted.org/packages/40/1b/5f6f2e745bc013453c7558f7102e1708dbe09e258ff5c7d65607a9a27a6d/bottle_postgresql-0.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fef96161a399ec48fd3963acb6d6f3f20ee650df23e76bbbca4caf52deb24505",
          "md5": "0d12df254cdcb12ff304fef4c4309faa",
          "sha256": "1a1bb26abe3dd61442c2bafff4f451fb42abc473aac22062e4e7885f939e9c88"
        },
        "downloads": -1,
        "filename": "bottle_postgresql-0.0.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0d12df254cdcb12ff304fef4c4309faa",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 4182,
        "upload_time": "2021-05-19T19:31:54",
        "upload_time_iso_8601": "2021-05-19T19:31:54.714786Z",
        "url": "https://files.pythonhosted.org/packages/fe/f9/6161a399ec48fd3963acb6d6f3f20ee650df23e76bbbca4caf52deb24505/bottle_postgresql-0.0.4-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c564e31210d9c10930617d78dd8ad10ee5f2d54dede7562935954ca1ce953d90",
          "md5": "b768762b0cb110885f465639dbf3e33e",
          "sha256": "57a3c856150e3d019980012fa09c7e79d1af92920d21aeddc6dcfffc06139c39"
        },
        "downloads": -1,
        "filename": "bottle-postgresql-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "b768762b0cb110885f465639dbf3e33e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4084,
        "upload_time": "2021-05-19T19:31:56",
        "upload_time_iso_8601": "2021-05-19T19:31:56.086782Z",
        "url": "https://files.pythonhosted.org/packages/c5/64/e31210d9c10930617d78dd8ad10ee5f2d54dede7562935954ca1ce953d90/bottle-postgresql-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "44e679e7be2c79593de8ad41412586fe967b1f9de05f30eafa23e2ad9a8c8b7a",
          "md5": "836f0a626f8cae982e11a5fccdf347f6",
          "sha256": "c18b50036c1cad9f3194ff0e92d970082baca345c279906b0ee1f14cc492f883"
        },
        "downloads": -1,
        "filename": "bottle_postgresql-0.0.5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "836f0a626f8cae982e11a5fccdf347f6",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 4183,
        "upload_time": "2021-05-19T20:52:28",
        "upload_time_iso_8601": "2021-05-19T20:52:28.794514Z",
        "url": "https://files.pythonhosted.org/packages/44/e6/79e7be2c79593de8ad41412586fe967b1f9de05f30eafa23e2ad9a8c8b7a/bottle_postgresql-0.0.5-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f77ddafefb470c1912c56f5a02ca00c863732cf2efc885d2742d42df5734544d",
          "md5": "84e8da8ec8379abe624e29831af641d9",
          "sha256": "b103cb5f38d4d3f3b111b5d4d8cd472725576a3145a6a5f21886f466c9b1e77d"
        },
        "downloads": -1,
        "filename": "bottle_postgresql-1.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "84e8da8ec8379abe624e29831af641d9",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 6752,
        "upload_time": "2021-05-21T16:29:20",
        "upload_time_iso_8601": "2021-05-21T16:29:20.638857Z",
        "url": "https://files.pythonhosted.org/packages/f7/7d/dafefb470c1912c56f5a02ca00c863732cf2efc885d2742d42df5734544d/bottle_postgresql-1.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa906b763d1343866e862c045e40bfd794419087b24c09287a64d566a46f69e9",
          "md5": "16b175dbc52f10db0cee86492263a5d9",
          "sha256": "af7020131f2c71a1d85343c0f314621176a47c67939b443a86074bb1b45a0894"
        },
        "downloads": -1,
        "filename": "bottle-postgresql-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "16b175dbc52f10db0cee86492263a5d9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6564,
        "upload_time": "2021-05-21T16:29:22",
        "upload_time_iso_8601": "2021-05-21T16:29:22.118768Z",
        "url": "https://files.pythonhosted.org/packages/aa/90/6b763d1343866e862c045e40bfd794419087b24c09287a64d566a46f69e9/bottle-postgresql-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5fbe146e8e0df819166105a4cede5747a37b58883ec64c78f9ba04262692e6c2",
          "md5": "58f35826579be30bfb9c99c1eababa01",
          "sha256": "ee1a97dc884348e85a097072ab404fdc6660fb5f8cc19ac152223cd2539756a3"
        },
        "downloads": -1,
        "filename": "bottle_postgresql-1.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "58f35826579be30bfb9c99c1eababa01",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 6745,
        "upload_time": "2021-10-05T22:56:56",
        "upload_time_iso_8601": "2021-10-05T22:56:56.125360Z",
        "url": "https://files.pythonhosted.org/packages/5f/be/146e8e0df819166105a4cede5747a37b58883ec64c78f9ba04262692e6c2/bottle_postgresql-1.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5fbe146e8e0df819166105a4cede5747a37b58883ec64c78f9ba04262692e6c2",
        "md5": "58f35826579be30bfb9c99c1eababa01",
        "sha256": "ee1a97dc884348e85a097072ab404fdc6660fb5f8cc19ac152223cd2539756a3"
      },
      "downloads": -1,
      "filename": "bottle_postgresql-1.0.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "58f35826579be30bfb9c99c1eababa01",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 6745,
      "upload_time": "2021-10-05T22:56:56",
      "upload_time_iso_8601": "2021-10-05T22:56:56.125360Z",
      "url": "https://files.pythonhosted.org/packages/5f/be/146e8e0df819166105a4cede5747a37b58883ec64c78f9ba04262692e6c2/bottle_postgresql-1.0.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}