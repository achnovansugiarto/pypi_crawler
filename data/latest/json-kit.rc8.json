{
  "info": {
    "author": "lihailin",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "### Installation\n* from python package index\n```python\npip install json_kit\n```\n* download package and run setup.py\n```python\npython setup.py install\n```\n### Usage\n#### Use SimpleJSONEncoder to serialize Enum and customized class\n```python\nfrom enum import Enum\nfrom json_kit import SimpleJSONEncoder\nclass Job(Enum):\n    Teacher = 0\n    Engineer = 1\n    Doctor = 2\n\nhobbies = [\"Swimming\", \"Video Games\", \"Fishing\"]\n\n# If reference keeping is not required, no need to impl __hash__, __eq__\nclass Person:\n    def __init__(self, name, age, job, hobbies):\n        self.name = name\n        self.age = age\n        self.job = job\n        self.hobbies = hobbies\n\njack = Person('Jack', 33, Job.Teacher)\nwith open(json_path, 'w') as fp:\n    json.dump(jack, fp, cls=SimpleJSONEncoder)\n\n# output string\n# {\"name\": \"Jack\", \"age\": 33, \"job\": 0, \"hobbies\": [\"Swimming\", \"Video Games\", \"Fishing\"]}\n```\n\n#### Use RefJSONEncoder to serialize and preserve customized class reference\n  * implement \\_\\_hash\\_\\_ and \\_\\_eq\\_\\_ for class to preserve its references\n  * built-in collecionts such list/dict/set/tuple's references are not preserved\n```python\nfrom json_kit import RefJSONEncoder, is_customized_class, hashable, to_hashable\n# Should implement __hash__ and __eq__ for certain custom class\n# if its reference keeping is intended;\n# and don't impl both __hash__ and __eq__ for classes \n# if reference keeping is not intended (when using RefJSONEncoder or AllRefJSONEncoder)\nclass Person:\n    def __init__(self, name, age, job, hobbies):\n        self.name = name\n        self.age = age\n        self.job = job\n        self.hobbies = hobbies\n\n    def __hash__(self):\n        data = [(k, v) if hashable(v) else (k, to_hashable(v)) for k, v in self.__dict__.items()]\n        data.sort(key=lambda x: x[0])\n        data = tuple(data)\n        return hash(data)\n\n    def __eq__(self, other):\n        if not is_customized_class(other) or not hashable(other):\n            return False\n        return self.__class__ == other.__class__ and self.__hash__() == other.__hash__()\n\njack = Person('Jack', 33, Job.Doctor)\nanother_jack = Person('Jack', 33, Job.Doctor)\njacks = [jack, another_jack]\n\nwith open(json_path, 'w') as fp:\n    json.dump(jacks, fp, cls=RefJSONEncoder)\n# output string:\n# [{\"$id\": \"1\", \"name\": \"Jack\", \"age\": 33, \"job\": 0, \"hobbies\": [\"Swimming\", \"Video Games\", \"Fishing\"]}, {\"$ref\": \"1\"}]\n```\n#### Use AllRefJSONEncoder to serialize and preserve references of customized class, list(set/tuple), dict\n  * implement \\_\\_hash\\_\\_ and \\_\\_eq\\_\\_ for class to preserve its references\n  * built-in collecionts such list/dict/set/tuple's references are preserved (set/tuple are converted into lists).\n  * use IList/IDictionary instead of IReadOnlyList/IReadOnlyDictionary in C#, otherwise Json.net won't be able to presever builtin collection reference when deserializing.\n```python\nfrom json_kit import RefJSONEncoder, is_customized_class, hashable, to_hashable\n# Should implement __hash__ and __eq__ for certain custom class\n# if its reference keeping is intended\nclass Person:\n    def __init__(self, name, age, job, hobbies):\n        self.name = name\n        self.age = age\n        self.job = job\n        self.hobbies = hobbies\n\n    def __hash__(self):\n        data = [(k, v) if hashable(v) else (k, to_hashable(v)) for k, v in self.__dict__.items()]\n        data.sort(key=lambda x: x[0])\n        data = tuple(data)\n        return hash(data)\n\n    def __eq__(self, other):\n        if not is_customized_class(other) or not hashable(other):\n            return False\n        return self.__class__ == other.__class__ and self.__hash__() == other.__hash__()\n\njack = Person('Jack', 33, Job.Teacher, hobbies)\nanother_jack = Person('Jack', 33, Job.Teacher, hobbies)\nmike = Person('Mike', 24, Job.Doctor, hobbies)\npersons = [jack, another_jack, mike]\n\nwith open(json_path, 'w') as fp:\n    json.dump(persons, fp, cls=AllRefJSONEncoder)\n# output text:\n# [{\"$id\": \"1\", \"name\": \"Jack\", \"age\": 33, \"job\": 0, \"hobbies\": {\"$id\": \"2\", \"$values\": [\"Swimming\", \"Video Games\", \"Fishing\"]}}, {\"$ref\": \"1\"}, {\"name\": \"Mike\", \"age\": 24, \"job\": 2, \"hobbies\": {\"$ref\": \"2\"}}]\n```\n#### Disable skip_none_fields to preserve null fields\n```python\n# Note\n# None fields in cusomized classes are skipped in default.\n# Set Encoder.skip_none_fields = False to preserve none fields.\nperson = Person('Jack', Job.Teacher, hobbies)\nperson.age = None\njstr = json.dumps(obj, cls=SimpleJSONEncoder)\n# output string\n# {\"name\": \"Jack\", \"job\": 0, \"hobbies\": [\"Swimming\", \"Video Games\", \"Fishing\"]}\nSimpleJSONEncoder.skip_none_fieds = False\njstr = json.dumps(obj, cls=SimpleJSONEncoder)\n# output string\n# {\"name\": \"Jack\", \"age\": null, \"job\": 0, \"hobbies\": [\"Swimming\", \"Video Games\", \"Fishing\"]}\n```\n\n### Use serialize_only_annotated to serialize only annotated fields\n* To serialize only part of instance fields, annotate those to be serialize on class level\n* If no annotation exists on class level, all instance fields will be serialized\n```python\nfrom typing import List\nfrom json_kit import SimpleJSONEncoder\nclass Person:\n    name: str\n    age: int\n    job: Job\n    hobbies: List[str]\n    def __init__(self, name, age, job, hobbies, address):\n        self.name = name\n        self.age = age\n        self.job = job\n        self.hobbies = hobbies\n        self.address = address\n\nperson = Person('Jack', 33, Job.Teacher, hobbies, 'Chengdu')\nSimpleJSONEncoder.serialize_only_annotated = True\njstr = json.dumps(person, cls=SimpleJSONEncoder)\n# output string\n# {\"name\": \"Jack\", \"age\": 33, \"job\": 0, \"hobbies\": [\"Swimming\", \"Video Games\", \"Fishing\"]}\n# if no annotation is provided, then all fields will be serialized, including 'address' field.\n```\n\n#### Use load_json_file for auto encoding detection\n```python\nfrom json_kit import load_json_file\nfilename = \"./sample.json\"\nobj = load_json_file(filename)\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/fortfall/json_kit",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "json-kit",
    "package_url": "https://pypi.org/project/json-kit/",
    "platform": "",
    "project_url": "https://pypi.org/project/json-kit/",
    "project_urls": {
      "Homepage": "https://github.com/fortfall/json_kit"
    },
    "release_url": "https://pypi.org/project/json-kit/1.0.8/",
    "requires_dist": [
      "chardet"
    ],
    "requires_python": ">=3.5",
    "summary": "",
    "version": "1.0.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8377858,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1df8478d430e898d8261f5f13b13a575ef4115988137916463c81a7ce5715a1d",
          "md5": "5ab035e926eb3f6c2b6745e735838ec8",
          "sha256": "b9b1dc3775fbf0d1c4cfe4785ee0f214e1ba565cc5516d53280b026ccc8ae70b"
        },
        "downloads": -1,
        "filename": "json_kit-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5ab035e926eb3f6c2b6745e735838ec8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8339,
        "upload_time": "2020-05-12T14:37:56",
        "upload_time_iso_8601": "2020-05-12T14:37:56.156017Z",
        "url": "https://files.pythonhosted.org/packages/1d/f8/478d430e898d8261f5f13b13a575ef4115988137916463c81a7ce5715a1d/json_kit-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c617f5c4df8dfdd0713e99374bf42bce5b19310b139078b2929bae493dbecf7c",
          "md5": "608804d01a603afa06e196439882dd98",
          "sha256": "e8c71251bfeab9f52d1b20535a8486199358669f59714414681ee4a5398311cc"
        },
        "downloads": -1,
        "filename": "json_kit-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "608804d01a603afa06e196439882dd98",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8894,
        "upload_time": "2020-05-14T16:56:34",
        "upload_time_iso_8601": "2020-05-14T16:56:34.018958Z",
        "url": "https://files.pythonhosted.org/packages/c6/17/f5c4df8dfdd0713e99374bf42bce5b19310b139078b2929bae493dbecf7c/json_kit-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4dcae8351836382688fa1f4100c9c6229b681ede2e53aea7dc7f23d7077305f3",
          "md5": "ece175858e111506f0754668c2d398b3",
          "sha256": "0db9b5cb0c1ea46fb16de8d34824d7a34257eb233362272ce14e3a40cd9c68b6"
        },
        "downloads": -1,
        "filename": "json_kit-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ece175858e111506f0754668c2d398b3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 10867,
        "upload_time": "2020-05-19T09:30:15",
        "upload_time_iso_8601": "2020-05-19T09:30:15.096558Z",
        "url": "https://files.pythonhosted.org/packages/4d/ca/e8351836382688fa1f4100c9c6229b681ede2e53aea7dc7f23d7077305f3/json_kit-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8bfe70262f7daab28eb497e3d326169d4c80d4ae8c60cce7ead2c446a9c828ab",
          "md5": "2251569a6bcbdab890d4ffcdc109d00f",
          "sha256": "ad554d8438e4ff94f4e560741ff832086f23b05fac5a71b02ff815eef9741081"
        },
        "downloads": -1,
        "filename": "json_kit-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "2251569a6bcbdab890d4ffcdc109d00f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 10865,
        "upload_time": "2020-05-20T03:32:20",
        "upload_time_iso_8601": "2020-05-20T03:32:20.772401Z",
        "url": "https://files.pythonhosted.org/packages/8b/fe/70262f7daab28eb497e3d326169d4c80d4ae8c60cce7ead2c446a9c828ab/json_kit-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "115c3d7f52eabe63c1c8d82bf03197ad90edcdf778015272f05c95d386d953d1",
          "md5": "f6c06c8187070fec915bc486162395e0",
          "sha256": "bcad0e095e74ca9dc6bdcd57a38f7bb503063550934911886330d0c6b6c99679"
        },
        "downloads": -1,
        "filename": "json_kit-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f6c06c8187070fec915bc486162395e0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 9513,
        "upload_time": "2020-07-06T09:04:03",
        "upload_time_iso_8601": "2020-07-06T09:04:03.786247Z",
        "url": "https://files.pythonhosted.org/packages/11/5c/3d7f52eabe63c1c8d82bf03197ad90edcdf778015272f05c95d386d953d1/json_kit-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1ed1062ad0953ee11f2ea0d1573e26bff3e45d5ca184e77449e1e9403dcf9d73",
          "md5": "c6dad671c97ce8220528c4b2488461fe",
          "sha256": "c600e966ea416d9a5f457fda7c5056c1c59a4529f79d8cab7ca9d1f4c6d57745"
        },
        "downloads": -1,
        "filename": "json_kit-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "c6dad671c97ce8220528c4b2488461fe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 8820,
        "upload_time": "2020-07-06T09:04:09",
        "upload_time_iso_8601": "2020-07-06T09:04:09.767624Z",
        "url": "https://files.pythonhosted.org/packages/1e/d1/062ad0953ee11f2ea0d1573e26bff3e45d5ca184e77449e1e9403dcf9d73/json_kit-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "01310e5bf80bcf97f0b87fa1b674f83d5399322dddac3caf97b068ba407f1cde",
          "md5": "03056a5db3eafc1c5521a1211d04dbd1",
          "sha256": "1d00146b4c0854f4c309a654bd34c17631e448abb71bcb68fda872a501f6a720"
        },
        "downloads": -1,
        "filename": "json_kit-1.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "03056a5db3eafc1c5521a1211d04dbd1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 9526,
        "upload_time": "2020-10-08T20:08:33",
        "upload_time_iso_8601": "2020-10-08T20:08:33.782785Z",
        "url": "https://files.pythonhosted.org/packages/01/31/0e5bf80bcf97f0b87fa1b674f83d5399322dddac3caf97b068ba407f1cde/json_kit-1.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0e54239ec8945fe7b023ef76b3885cedcbae55e0e70dc9cbb30214cec61121ab",
          "md5": "d0173b156a8cefffdc76da9fc9cd7e30",
          "sha256": "20df07d87a2cb6d971c3a3dac1c7d661fe6542b98d5435a59972b778012af7e7"
        },
        "downloads": -1,
        "filename": "json_kit-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "d0173b156a8cefffdc76da9fc9cd7e30",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 9341,
        "upload_time": "2020-10-08T20:08:38",
        "upload_time_iso_8601": "2020-10-08T20:08:38.650784Z",
        "url": "https://files.pythonhosted.org/packages/0e/54/239ec8945fe7b023ef76b3885cedcbae55e0e70dc9cbb30214cec61121ab/json_kit-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3b4ae50a14ef90e7b1461e5ecd4a9cedd539e0152f4c38972c54c9911c99ab95",
          "md5": "22aa35acbe3d730a29b02b2605a7bbbc",
          "sha256": "46a5db83b3645b9fa1bd95b33bb8cf61541543a88ea99697c86c1b2107dc3627"
        },
        "downloads": -1,
        "filename": "json_kit-1.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "22aa35acbe3d730a29b02b2605a7bbbc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 9626,
        "upload_time": "2020-10-09T16:49:15",
        "upload_time_iso_8601": "2020-10-09T16:49:15.097564Z",
        "url": "https://files.pythonhosted.org/packages/3b/4a/e50a14ef90e7b1461e5ecd4a9cedd539e0152f4c38972c54c9911c99ab95/json_kit-1.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1bb2b789782c114d8910f496647c5e73dfc7805d628be7462e549164812d0ad7",
          "md5": "9f65ee6de5033f32bfc07f452a083e69",
          "sha256": "1f96268656a2010c711ae8be83ac63895a6435db0b34808d946251a6dd8c56d0"
        },
        "downloads": -1,
        "filename": "json_kit-1.0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9f65ee6de5033f32bfc07f452a083e69",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 9594,
        "upload_time": "2020-10-09T18:11:24",
        "upload_time_iso_8601": "2020-10-09T18:11:24.911418Z",
        "url": "https://files.pythonhosted.org/packages/1b/b2/b789782c114d8910f496647c5e73dfc7805d628be7462e549164812d0ad7/json_kit-1.0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1bb2b789782c114d8910f496647c5e73dfc7805d628be7462e549164812d0ad7",
        "md5": "9f65ee6de5033f32bfc07f452a083e69",
        "sha256": "1f96268656a2010c711ae8be83ac63895a6435db0b34808d946251a6dd8c56d0"
      },
      "downloads": -1,
      "filename": "json_kit-1.0.8-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9f65ee6de5033f32bfc07f452a083e69",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 9594,
      "upload_time": "2020-10-09T18:11:24",
      "upload_time_iso_8601": "2020-10-09T18:11:24.911418Z",
      "url": "https://files.pythonhosted.org/packages/1b/b2/b789782c114d8910f496647c5e73dfc7805d628be7462e549164812d0ad7/json_kit-1.0.8-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}