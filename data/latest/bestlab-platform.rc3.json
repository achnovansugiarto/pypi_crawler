{
  "info": {
    "author": "",
    "author_email": "Wei Mu <wmu100@syr.edu>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "BESTLab Platform\n================\n\nOne package to access multiple different data sources through their\nrespective API platforms.\n\nInstall\n-------\n\nIn conda or virtualenv environment, run the following commad:\n\n.. code:: bash\n\n   python3 -m pip install -U bestlab_platform\n\nIf you are using Windows with Anaconda installed, use the following\ncommand in Anaconda Prompt:\n\n::\n\n   pip install -U bestlab_platform\n\nUsage\n-----\n\nHOBO Platform\n~~~~~~~~~~~~~\n\nExample\n^^^^^^^\n\n.. code:: python\n\n   import json\n   from bestlab_platform.hobo import HoboAPI\n\n\n   CLIENT_ID = \"aaaaa\"\n   CLIENT_SECRET = \"bbbbbbbbbbbbb\"\n   USER_ID = \"123456\"\n\n   # Uncomment the following lines to show all debug output\n   #\n   # import logging\n   # from bestlab_platform.hobo import HoboLogger\n   # HoboLogger.setLevel(logging.DEBUG)\n\n   hobo_api = HoboAPI(CLIENT_ID, CLIENT_SECRET, USER_ID)\n   print(f\"access token: {hobo_api.token_info.access_token}\")\n\n   devices = [\n       \"123456789\",\n       \"987654321\"\n   ]\n   start_time = '2021-10-15 00:00:00'\n   end_time = '2021-10-15 01:00:00'\n   response = hobo_api.get_data(devices, start_time, end_time, warn_on_empty_data=True)\n   # Pretty print the JSON object from response\n   print(json.dumps(response, indent=2))\n\n`hobo_example.py <https://github.com/umonaca/bestlab_platform/blob/master/example/hobo_example.py>`__\nis another working example which reads in the secrets from a\nsingle\\ ``.env`` file. It requires ``python-dotenv`` package.\n\n**Note:** Since HOBO APIs are extremely straightforward, you can\ndefinitely write your own script without any extra packages (including\nthis one) except for ``requests``\\ package. However, there are some\nextra functionality provided by this package:\n\n-  exception handling\n-  logging with standard format (including timestamps etc.)\n-  caching and reusing of existing unexpired access tokens\n\nTuya Platform\n~~~~~~~~~~~~~\n\n.. _example-1:\n\nExample\n^^^^^^^\n\n.. code:: python\n\n   #!/usr/bin/env python\n   # -*- coding: UTF-8 -*-\n   \"\"\"Tuya API\"\"\"\n   from __future__ import annotations\n\n   import json\n   from bestlab_platform.tuya import TuyaOpenAPI, SmartHomeDeviceAPI, TuyaDeviceManager\n\n   if __name__ == '__main__':\n       ENDPOINT = \"https://openapi.tuyaus.com\"\n       CLIENT_ID = \"aaabbbbcccc\"\n       CLIENT_SECRET = \"dddddddddd12345\"\n\n       # Uncomment the following line to print messages when querying device logs on Tuya platform\n       #\n       # import logging\n       # from bestlab_platform.tuya import TUYA_LOGGER\n       # TUYA_LOGGER.setLevel(logging.INFO)\n       #\n       # If you want to debug requests and responses, uncomment the following line.\n       # TUYA_LOGGER.setLevel(logging.DEBUG)\n\n       tuya_api = TuyaOpenAPI(ENDPOINT, CLIENT_ID, CLIENT_SECRET)\n       print(tuya_api.token_info.access_token)\n\n       # map of device name (your choice, can be any string, for readability) -> device id (in Tuya's system)\n       devices = {\n           \"PIR3\": \"asdasdadx\",\n           \"PIR4\": \"12345abcde\"\n       }\n\n       # Unix timestamp in your local zone, can be 10 digit or 13 digit int, float, or string\n       start_timestamp = \"1634005305000\"\n       end_timestamp = \"1634523705000\"\n\n       # Example 1: Query in batch\n       device_group = TuyaDeviceManager(tuya_api, device_map=devices)\n       devices_log_map = device_group.get_device_log_in_batch(\n           start_timestamp=start_timestamp,\n           end_timestamp=end_timestamp,\n           warn_on_empty_data=True\n       )\n\n       # Save to JSON files\n       for dev_name, device_log in devices_log_map.items():\n           with open(f'{dev_name}_historical_1017.json', 'w') as f:\n               json.dump(device_log, f)\n\n       # Example 2: call API for a single device\n       # You can use the code above or the following. It's flexible.\n       response_device_status = SmartHomeDeviceAPI(tuya_api).get_device_status(devices[\"PIR3\"])\n       print(response_device_status)\n\n       response_device_log = SmartHomeDeviceAPI(tuya_api).get_device_log(\n           device_id=devices[\"PIR3\"],\n           start_timestamp=start_timestamp,\n           end_timestamp=end_timestamp,\n           device_name=\"PIR3\",\n           warn_on_empty_data=True\n       )\n       print(response_device_log)\n\n`tuya_example.py <https://github.com/umonaca/bestlab_platform/blob/master/example/tuya_example.py>`__\nis another working example which reads in the secrets from a\nsingle\\ ``.env`` file in your working directory. It requires\n``python-dotenv`` package.\n\nWhy should I use this package for Tuya platform?\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nThis package **correctly and automatically** handles connection, token\ncaching and refreshing behind the scene so you can focus on your work.\nIt provides functions to call most of the APIs available on their\nplatform (available to our project account), and also added\nfunctionalities to:\n\n-  Call API for multiple devices in batch.\n-  Query device logs, correctly follow the pagination and return the\n   entire log available for the period.\n\nIt is inspired by `Tuya’s own python\nSDK <https://github.com/tuya/tuya-iot-python-sdk>`__, but their SDK does\nnot work for our projects, because of the following reasons:\n\n-  It is only suitable for B-to-C scenarios. It uses API endpoints\n   **scoped to users within the cloud project**. In order to use these\n   endpoints, we have to physically go to where the devices are located\n   and add them again with another mobile app, and add those devices\n   into the correct “Asset”.\n-  It requires subscription to Tuya’s message service, which is over\n   complicated.\n-  It contains too many APIs that we will never use.\n-  It does not have any function to query device logs. Also, Tuya’s API\n   to query the device log is paginated, which requires manual handling.\n\n`TinyTuya <https://github.com/jasonacox/tinytuya>`__ is another python\nproject which uses a simple function to connect and fetch data from the\nTuya IoT cloud. However, their function does not work seamlessly for us\nbecause:\n\n-  Tuya platform never refreshes current access token, unless you use\n   the refresh token to get a new one. Access token expires two hours\n   later after it is first obtained, which means if we don’t refresh the\n   token, we will see an error message.\n\n**Update 10/25/2021**: I have managed to find out Tuya’s B-to-B platform\npackage `here <https://github.com/tuya/tuya-connector-python>`__, which\nuses unscoped API endpoint and Pulsar as message service. However, there\nis `a bug <https://github.com/tuya/tuya-iot-python-sdk/issues/35>`__\nwhich has not been properly fixed in both of their packages. Tokens are\nstill not refreshed in the correct way with their packages. I have\nalready fixed on my side when I rewrote the Tuya package.\n\neGauge Platform\n~~~~~~~~~~~~~~~\n\nNot implemented yet.\n\nAPI Reference\n-------------\n\nhttps://bestlab-platform.readthedocs.io/en/latest/index.html\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "bestlab_platform",
    "package_url": "https://pypi.org/project/bestlab_platform/",
    "platform": "",
    "project_url": "https://pypi.org/project/bestlab_platform/",
    "project_urls": {
      "Source": "https://github.com/umonaca/bestlab_platform"
    },
    "release_url": "https://pypi.org/project/bestlab_platform/0.2.2/",
    "requires_dist": [
      "requests",
      "sphinx ; extra == \"docs\"",
      "sphinx-rtd-theme ; extra == \"docs\"",
      "sphinx-autodoc-typehints ; extra == \"docs\"",
      "flake8 ; extra == \"linters\"",
      "flake8-bugbear ; extra == \"linters\"",
      "flake8-comprehensions ; extra == \"linters\"",
      "mypy ; extra == \"linters\"",
      "types-requests ; extra == \"linters\"",
      "python-dotenv ; extra == \"utils\""
    ],
    "requires_python": ">=3.7",
    "summary": "Packages to access APIs for different platforms",
    "version": "0.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12041307,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d95271daf54e58de27cfafe691c644dfa117e484a949ec6846412c00439a1074",
          "md5": "f64bec81a29d7bd530a19130aca2f6c3",
          "sha256": "8ef50db992a62a95c73725803caa6a5c42ef5d3dc0e147546113f590f7fd196b"
        },
        "downloads": -1,
        "filename": "bestlab_platform-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f64bec81a29d7bd530a19130aca2f6c3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 16050,
        "upload_time": "2021-10-22T12:24:54",
        "upload_time_iso_8601": "2021-10-22T12:24:54.323417Z",
        "url": "https://files.pythonhosted.org/packages/d9/52/71daf54e58de27cfafe691c644dfa117e484a949ec6846412c00439a1074/bestlab_platform-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d1a31015dc2bbab7c1bf2bc4a49032924079a2b02825ff44951d9be96038cde0",
          "md5": "a817f539a9b65fbdac66c4a86c2953bd",
          "sha256": "e77f82cf3840f7c4bb7b220c0d9ce46fbd69dd916e2cdb5dee227950d0f81f2c"
        },
        "downloads": -1,
        "filename": "bestlab_platform-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a817f539a9b65fbdac66c4a86c2953bd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 17331,
        "upload_time": "2021-10-22T12:24:56",
        "upload_time_iso_8601": "2021-10-22T12:24:56.191387Z",
        "url": "https://files.pythonhosted.org/packages/d1/a3/1015dc2bbab7c1bf2bc4a49032924079a2b02825ff44951d9be96038cde0/bestlab_platform-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8228c7a060991597ecf59112b747bc625234fe4094f1c7bd1dc21b4db042c724",
          "md5": "0b5a073cdaf0e47206ef38965769383c",
          "sha256": "854d563e967a77affa43055612f628fd351c07e065d5da286ef30d9cd569cb12"
        },
        "downloads": -1,
        "filename": "bestlab_platform-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0b5a073cdaf0e47206ef38965769383c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 16332,
        "upload_time": "2021-10-25T18:04:16",
        "upload_time_iso_8601": "2021-10-25T18:04:16.211394Z",
        "url": "https://files.pythonhosted.org/packages/82/28/c7a060991597ecf59112b747bc625234fe4094f1c7bd1dc21b4db042c724/bestlab_platform-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "15811187a9ebe3b967e016680d2efd37f3a49e0b2a8b2130152e1851cfe8896b",
          "md5": "e0c9ecedf323c808378215df804cde2a",
          "sha256": "38b2dcbee70d0718eeca385b055793c4d9d2c4ec35b5f5a5674de35d3d15abbd"
        },
        "downloads": -1,
        "filename": "bestlab_platform-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e0c9ecedf323c808378215df804cde2a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 18206,
        "upload_time": "2021-10-25T18:04:19",
        "upload_time_iso_8601": "2021-10-25T18:04:19.016887Z",
        "url": "https://files.pythonhosted.org/packages/15/81/1187a9ebe3b967e016680d2efd37f3a49e0b2a8b2130152e1851cfe8896b/bestlab_platform-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "538f3ab545aa894a48ef8c7cad33d9e21a763d0555cefe5c106e207d104666e6",
          "md5": "01a71418788d51ba0991c2dcc307fcf3",
          "sha256": "963f3ad4c3d0e6073713bb8f46aec8cb14ecb4da31daf967df88cee6faf2d18c"
        },
        "downloads": -1,
        "filename": "bestlab_platform-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "01a71418788d51ba0991c2dcc307fcf3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 16531,
        "upload_time": "2021-11-16T20:31:47",
        "upload_time_iso_8601": "2021-11-16T20:31:47.248650Z",
        "url": "https://files.pythonhosted.org/packages/53/8f/3ab545aa894a48ef8c7cad33d9e21a763d0555cefe5c106e207d104666e6/bestlab_platform-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dbc8ea2af5fe624fa6fdf981dfba45fc899f73e7d3cd73f30ef337e9d138df8d",
          "md5": "28d99c7a8c935fc145352fa9fc75d1a0",
          "sha256": "fa47a470ecfc0558ea7ada885dd62e89fc2f11b9ed96bc310f04ef73ae4bff7f"
        },
        "downloads": -1,
        "filename": "bestlab_platform-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "28d99c7a8c935fc145352fa9fc75d1a0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 20080,
        "upload_time": "2021-11-16T20:31:48",
        "upload_time_iso_8601": "2021-11-16T20:31:48.822077Z",
        "url": "https://files.pythonhosted.org/packages/db/c8/ea2af5fe624fa6fdf981dfba45fc899f73e7d3cd73f30ef337e9d138df8d/bestlab_platform-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "538f3ab545aa894a48ef8c7cad33d9e21a763d0555cefe5c106e207d104666e6",
        "md5": "01a71418788d51ba0991c2dcc307fcf3",
        "sha256": "963f3ad4c3d0e6073713bb8f46aec8cb14ecb4da31daf967df88cee6faf2d18c"
      },
      "downloads": -1,
      "filename": "bestlab_platform-0.2.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "01a71418788d51ba0991c2dcc307fcf3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 16531,
      "upload_time": "2021-11-16T20:31:47",
      "upload_time_iso_8601": "2021-11-16T20:31:47.248650Z",
      "url": "https://files.pythonhosted.org/packages/53/8f/3ab545aa894a48ef8c7cad33d9e21a763d0555cefe5c106e207d104666e6/bestlab_platform-0.2.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dbc8ea2af5fe624fa6fdf981dfba45fc899f73e7d3cd73f30ef337e9d138df8d",
        "md5": "28d99c7a8c935fc145352fa9fc75d1a0",
        "sha256": "fa47a470ecfc0558ea7ada885dd62e89fc2f11b9ed96bc310f04ef73ae4bff7f"
      },
      "downloads": -1,
      "filename": "bestlab_platform-0.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "28d99c7a8c935fc145352fa9fc75d1a0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 20080,
      "upload_time": "2021-11-16T20:31:48",
      "upload_time_iso_8601": "2021-11-16T20:31:48.822077Z",
      "url": "https://files.pythonhosted.org/packages/db/c8/ea2af5fe624fa6fdf981dfba45fc899f73e7d3cd73f30ef337e9d138df8d/bestlab_platform-0.2.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}