{
  "info": {
    "author": "jychen7",
    "author_email": "jychen7@users.noreply.github.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Build Tools",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# BigQL\n\nBigQL provides a SQL Query Layer for [Google Cloud Bigtable](https://cloud.google.com/bigtable/docs).\n\n## Use Cases\n\nCloud Bigtable is Google's fully managed NoSQL Big Data database service. Each table contains rows and columns. Each row/column intersection can contain multiple cells. Each cell contains a unique timestamped version of the data for that row and column. Thus Bigtable is often used to store time series data.\n\nBigQL provides a SQL query layer to run aggregation query on Bigtable.\n\n## Quick Start\n\n```\npip install bigql\n```\n\nUsing the [weather balloon example data](https://cloud.google.com/bigtable/docs/schema-design-time-series#example-data) shown in [Single-timestamp unserialized](https://cloud.google.com/bigtable/docs/schema-design-time-series#unserialized) schema design\n\n```\nRow key                         pressure    temperature humidity    altitude\nus-west2#3698#2021-03-05-1200   94558       9.6         61          612\nus-west2#3698#2021-03-05-1201   94122       9.7         62          611\nus-west2#3698#2021-03-05-1202   95992       9.5         58          602\nus-west2#3698#2021-03-05-1203   96025       9.5         66          598\nus-west2#3698#2021-03-05-1204   96021       9.6         63          624\n```\n\nAfter initialize the client\n```\nfrom bigql.client import Client\n# config follows offical python bigtable client\nclient = Client(config)\n\nclient.register_table(\n    \"weather_balloons\",\n    instance_id=\"INSTANCE_ID\",\n    column_families={\n        \"measurements\": {\n            \"only_read_latest\": True,\n            \"columns\": {\n                \"pressure\": int,\n                \"temperature\": str,\n                \"humidity\": int,\n                \"altitude\": int\n            }\n        }\n    }\n)\n```\n\nwe are able to calculate average pressure of the period by\n\n```\nclient.query(\"measurements\", \"\"\"\nSELECT avg(pressure) FROM weather_balloons\nWHERE\n  \"_row_key\" BETWEEN 'us-west2#3698#2021-03-05-1200' AND 'us-west2#3698#2021-03-05-1204'\n\"\"\")\n```\n\nOr with row key decomposition\n\n```\nclient.register_table(\n    xxx,\n    row_key_identifiers=[\"location\", \"balloon_id\", \"event_minute\"],\n    row_key_separator=\"#\"\n)\n\nclient.query(\"measurements\", \"\"\"\nSELECT balloon_id, avg(pressure) FROM weather_balloons\nWHERE\n  location = 'us-west2'\n  AND balloon_id IN ('3698', '3700')\n  AND event_minute BETWEEN '2021-03-05-1200' AND '2021-03-05-1204'\nGROUP BY 1\n\"\"\")\n```\n\nThe output of `query` is list of [pyarrow.RecordBatch](https://arrow.apache.org/docs/python/generated/pyarrow.RecordBatch.html#pyarrow.RecordBatch.from_pydict). It can be easily convert to python dictionary (`to_pydict`) and pandas dataframe (`to_pandas`).\n\n### Group by Time\n\nEach cell in Bigtable have a timestamp. `SELECT \"_timestamp\"` will return a float number, represent seconds since Unix epoch. Following is an example to select 5 minutes interval\n\n```\nSELECT to_timestamp_seconds(cast(floor(\"_timestamp\" / 600) * 600 as bigint)) as interval\n```\n\n## Alternative\n\n1. [Google BigQuery external data source](https://cloud.google.com/bigquery/external-data-bigtable)\n\nHowever, as of 2022-01, it\n- only supports \"us-central1\" and \"europe-west1\" region\n- only supports query with \"rowkey\"\n- by default can run up to [4 concurrent queries](https://cloud.google.com/bigquery/quotas) against Bigtable external data source\n\n## Roadmap\n\n### SQL\n\n- ✅ Insert Into\n- ✅ Select *\n- ✅ Select column(s)\n- ✅ Filter (WHERE): \"=\", \"IN\", \"BETWEEN\", \">\", \">=\", \"<\", \"<=\"\n- ✅ GROUP BY\n- ✅ ORDER BY\n- ✅ HAVING\n- ✅ LIMIT\n- ✅ Aggregate (e.g. avg, sum, count)\n- ✅ AND\n- ✅ Alias\n- ✅ Cast\n- ✅ Common Math Functions\n- [ ] Common Date/Time Functions\n- [ ] OR ???\n- [ ] Join ???\n\n### General\n\n- ✅ Partition Pruning\n- ✅ Projection pushdown\n- ❌ Predicate push down ([Value range](https://cloud.google.com/bigtable/docs/using-filters#value-range) and [Value regex](https://cloud.google.com/bigtable/docs/using-filters#value-regex))\n    + not work well, because its filter works on all cells, not only predicate column\n- [ ] Limit Pushdown ???\n\n## Limitation\n\n- for row key encoding, only string is supported\n- for single/composite row key, identifiers supports \"=\" and \"IN\". Additionally, last identifier also supports \"BETWEEN\".\n- for qualifiers, only string and integer (64bit BigEndian encoding) value are supported\n- subqueries and common table expressions are not supported\n\n## Technical Details\n\nBigQL depends on\n- [sqloxide](https://github.com/wseaton/sqloxide) and [sqlparser-rs](https://github.com/sqlparser-rs/sqlparser-rs): SQL parser\n- [python-bigtable](https://github.com/googleapis/python-bigtable): offical python bigtable client\n- [datafusion-python](https://github.com/datafusion-contrib/datafusion-python): in memory query engine\n- [pyarrow](https://github.com/apache/arrow/tree/master/python): in memory columnar store / dataframe\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jychen7/BigQL",
    "keywords": "arrow,bigtable,datafusion,sql",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "bigql",
    "package_url": "https://pypi.org/project/bigql/",
    "platform": null,
    "project_url": "https://pypi.org/project/bigql/",
    "project_urls": {
      "Homepage": "https://github.com/jychen7/BigQL",
      "Repository": "https://github.com/jychen7/BigQL"
    },
    "release_url": "https://pypi.org/project/bigql/0.1.11/",
    "requires_dist": [
      "sqloxide (==0.1.13)",
      "google-cloud-bigtable (==2.4.0)",
      "pyarrow (==6.0.1)",
      "datafusion (==0.4.0)",
      "numpy (==1.21.5)"
    ],
    "requires_python": ">=3.7,<3.10",
    "summary": "Query Layer for Google Cloud Bigtable",
    "version": "0.1.11",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13263736,
  "releases": {
    "0.1.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "62fa2edb10575f49d05ef656e8fef8a172edb31ca5ffb3b66d25d3acf3122f32",
          "md5": "12d7afbf5f371c40443e2aa1156dd68f",
          "sha256": "413bc77e01cb43c2c4f3f5cfad327565de7a9ffed3361c5eb106c9228e74bd1b"
        },
        "downloads": -1,
        "filename": "BigQL-0.1.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "12d7afbf5f371c40443e2aa1156dd68f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<3.10",
        "size": 13761,
        "upload_time": "2022-03-18T13:57:06",
        "upload_time_iso_8601": "2022-03-18T13:57:06.727598Z",
        "url": "https://files.pythonhosted.org/packages/62/fa/2edb10575f49d05ef656e8fef8a172edb31ca5ffb3b66d25d3acf3122f32/BigQL-0.1.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "75f0435808cd0e4eaf15cf1d91e39159cd6c552549a066696f77fecb95b4951e",
          "md5": "1a79bcc9c0cb7726176074b4d94d55ef",
          "sha256": "0e00887e06db428368089004e80b47469edc76eb033b1445c2b2b64f1233e72f"
        },
        "downloads": -1,
        "filename": "BigQL-0.1.10.tar.gz",
        "has_sig": false,
        "md5_digest": "1a79bcc9c0cb7726176074b4d94d55ef",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<3.10",
        "size": 11920,
        "upload_time": "2022-03-18T13:57:08",
        "upload_time_iso_8601": "2022-03-18T13:57:08.228293Z",
        "url": "https://files.pythonhosted.org/packages/75/f0/435808cd0e4eaf15cf1d91e39159cd6c552549a066696f77fecb95b4951e/BigQL-0.1.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "25df0bba1782841f1b92c4fb947985b03e4bd92c9693e53174946dc73a104457",
          "md5": "2b56970518b2f47814cec669a3b84d75",
          "sha256": "d756d81b09aeae9fa52181f9f75cf79fd4b8f899880e0b918b516e47d21e4300"
        },
        "downloads": -1,
        "filename": "BigQL-0.1.11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2b56970518b2f47814cec669a3b84d75",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<3.10",
        "size": 13831,
        "upload_time": "2022-03-23T02:39:37",
        "upload_time_iso_8601": "2022-03-23T02:39:37.531733Z",
        "url": "https://files.pythonhosted.org/packages/25/df/0bba1782841f1b92c4fb947985b03e4bd92c9693e53174946dc73a104457/BigQL-0.1.11-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fbea8291c67001c68f9211548a7f96868541365c98bacb59fb59d8e9ff4f9ad8",
          "md5": "79050d064c25e42e18e60b1cefd2b759",
          "sha256": "08053eb82fbb276bf04fec4c846f530ea3613da036c9fd9b67cb74cf95abf9ea"
        },
        "downloads": -1,
        "filename": "BigQL-0.1.11.tar.gz",
        "has_sig": false,
        "md5_digest": "79050d064c25e42e18e60b1cefd2b759",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<3.10",
        "size": 12001,
        "upload_time": "2022-03-23T02:39:38",
        "upload_time_iso_8601": "2022-03-23T02:39:38.852069Z",
        "url": "https://files.pythonhosted.org/packages/fb/ea/8291c67001c68f9211548a7f96868541365c98bacb59fb59d8e9ff4f9ad8/BigQL-0.1.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4474c04e0ccb8cdebb86fc0b36bf0e194b8becb3dca8e7136007dcb08cc467a9",
          "md5": "fe0ac885a75bea9b8943c7667f9d591e",
          "sha256": "a68b4e9ecbc46ae3fa71665312eee3b8cb79a9cd02f83dd7f20b2b0935e4307e"
        },
        "downloads": -1,
        "filename": "BigQL-0.1.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fe0ac885a75bea9b8943c7667f9d591e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<3.10",
        "size": 13669,
        "upload_time": "2022-02-26T01:37:11",
        "upload_time_iso_8601": "2022-02-26T01:37:11.174795Z",
        "url": "https://files.pythonhosted.org/packages/44/74/c04e0ccb8cdebb86fc0b36bf0e194b8becb3dca8e7136007dcb08cc467a9/BigQL-0.1.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0af08796c930437269df720ad805e60a422d0fa0b33cc341b07b4e9e4a46d7d0",
          "md5": "eb4e27eb18cb5940dc2a0aaefb67cca8",
          "sha256": "23e4a5351e4d4122bd297546e45ecfd25606ce7578f6cef7c9e5873af494986c"
        },
        "downloads": -1,
        "filename": "BigQL-0.1.9.tar.gz",
        "has_sig": false,
        "md5_digest": "eb4e27eb18cb5940dc2a0aaefb67cca8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<3.10",
        "size": 11958,
        "upload_time": "2022-02-26T01:37:12",
        "upload_time_iso_8601": "2022-02-26T01:37:12.850519Z",
        "url": "https://files.pythonhosted.org/packages/0a/f0/8796c930437269df720ad805e60a422d0fa0b33cc341b07b4e9e4a46d7d0/BigQL-0.1.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "25df0bba1782841f1b92c4fb947985b03e4bd92c9693e53174946dc73a104457",
        "md5": "2b56970518b2f47814cec669a3b84d75",
        "sha256": "d756d81b09aeae9fa52181f9f75cf79fd4b8f899880e0b918b516e47d21e4300"
      },
      "downloads": -1,
      "filename": "BigQL-0.1.11-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2b56970518b2f47814cec669a3b84d75",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<3.10",
      "size": 13831,
      "upload_time": "2022-03-23T02:39:37",
      "upload_time_iso_8601": "2022-03-23T02:39:37.531733Z",
      "url": "https://files.pythonhosted.org/packages/25/df/0bba1782841f1b92c4fb947985b03e4bd92c9693e53174946dc73a104457/BigQL-0.1.11-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fbea8291c67001c68f9211548a7f96868541365c98bacb59fb59d8e9ff4f9ad8",
        "md5": "79050d064c25e42e18e60b1cefd2b759",
        "sha256": "08053eb82fbb276bf04fec4c846f530ea3613da036c9fd9b67cb74cf95abf9ea"
      },
      "downloads": -1,
      "filename": "BigQL-0.1.11.tar.gz",
      "has_sig": false,
      "md5_digest": "79050d064c25e42e18e60b1cefd2b759",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7,<3.10",
      "size": 12001,
      "upload_time": "2022-03-23T02:39:38",
      "upload_time_iso_8601": "2022-03-23T02:39:38.852069Z",
      "url": "https://files.pythonhosted.org/packages/fb/ea/8291c67001c68f9211548a7f96868541365c98bacb59fb59d8e9ff4f9ad8/BigQL-0.1.11.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}