{
  "info": {
    "author": "Shujia Huang",
    "author_email": "huangshujia9@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Operating System :: POSIX",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Bio-Informatics"
    ],
    "description": "phimtools: A phasing and imputation tools for NGS data.\n=====================================================\n\nIntroduction\n------------\n\n`phimtools` is a phasing and imputation tools for NGS data, which is the\nmain core of imputation server. You can use phimtools as your own imputation \npipeline in your local Linux cluster.\n\nQuick start\n-----------\n\nphimtools use [Eagle](https://data.broadinstitute.org/alkesgroup/Eagle/)\nor [beagle](https://faculty.washington.edu/browning/beagle/beagle.html)(requires Java version 8)\nfor phasing and [Minimac3](https://genome.sph.umich.edu/wiki/Minimac3)\nor [Minimac4](https://genome.sph.umich.edu/wiki/Minimac4)\nfor imputation.\n\n### Installation\n\nInstall the released version by pip:\n\n```bash\npip install phimtools\n```\n\nThis command will install phimtools in your system and you can use\n`phimtools` in your commandline.\n\n### Important notes before starting\nEnsure that Eagle, beagle (requires Java version 8), and minimac4 (or minimac3) softwares are installed in your analysis environment.\n\n- Eagle \n    + download: https://alkesgroup.broadinstitute.org/Eagle/downloads/Eagle_v2.4.1.tar.gz\n- beagle\n    + Java executor: https://faculty.washington.edu/browning/beagle/beagle.28Jun21.220.jar\n    + genetic_maps: http://bochet.gcc.biostat.washington.edu/beagle/genetic_maps/\n- Minimac4\n    + install: \n    `sudo apt install minimac4` \n    or \n    ```\n    git clone https://github.com/statgen/Minimac4.git\n    cd Minimac4\n    bash install.sh\n    ```\n    + Reference Panels: https://genome.sph.umich.edu/wiki/Minimac4\n\n### Usage\n\nYou can find all the parameter for imputation process by running\n`phimtools impute --help`:\n\n    usage: phimtools impute [-h] -C CONFIG [-M IMPUTE_METHOD] [-P PHASE_METHOD] -I IN_VCF\n                     -O OUT_PREFIX --refpanel-version REFPANEL --reference-build\n                     REFBUILD [--unprephase] [--regions chr:start-end]\n                     [--nCPU NCPU]\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -C CONFIG, --conf CONFIG\n                            YAML configuration file specifying details information\n                            for imputation\n      -M IMPUTE_METHOD, --methods IMPUTE_METHOD\n                            Tool for imputation. [minimac]\n      -P PHASE_METHOD, --prephase-method PHASE_METHOD\n                            Tool for pre-phase before imputation. [eagle, beagle]\n      -I IN_VCF, --input IN_VCF\n                            Input one VCF file to analyze. Required\n      -O OUT_PREFIX, --outprefix OUT_PREFIX\n                            Prefix for output files. Required\n      --refpanel-version REFPANEL\n                            The version of haplotype data for reference panel.\n                            Required\n      --reference-build REFBUILD\n                            The build version of reference, e.g: GRCh37, GRCh38\n      --unprephase          Do not perform pre-phased before the imputation\n                            process.\n      --regions chr:start-end\n                            Skip positions which not in these regions. This\n                            parameter could be a list of comma deleimited genome\n                            regions(e.g.: chr:start-end,chr:start-end)\n      --nCPU NCPU           Number of threads. [1]\n\n### Configuration file\n\n`phimtools` needs a configuration file for setting the path of phasing\nprogram, imputation program, reference version and reference panel.\nHere\\'s one of the examples for how to create a configuration file:\n[config.yaml](./tests/config.yaml).\n\nNow you can use `phimtools` as your powerful imputation pipeline, once you\nhave finished the setting.\n\n### Examples\n\nThis command would be enough for most of your jobs, `--nCPU` is for\nsetting the number of threads.\n\n```bash\nphimtools impute -C config.yaml \\\n    -I your.vcf.gz \\\n    -O test_outprefix \\\n    --refpanel-version 1000G_P3_GRCh37 \\\n    --reference-build GRCh37 \\\n    --nCPU 4\n```\n\nWhat if you just want to preform the imputed process in some specific\nregions. Here is an example for running `phimtools` in genome region:\n`21:38347375-38500731` and `22:17203103-17439826`.\n\n```bash\nphimtools impute -C config.yaml \\\n    -I your.vcf.gz \\\n    -O test_outprefix \\\n    --refpanel-version 1000G_P3_GRCh37 \\\n    --reference-build GRCh37 \\\n    --regions  21:38347375-38500731,22:17203103-17439826 \\\n    --nCPU 4\n```\n\n`phimtools` will perform pre-phasing automatically before perform the\nimputation process. But sometimes your input VCF file has been phased\nalready. And you don\\'t want to run it again then you can set\n`--unprephase` argument to skip that process.\n\n```bash\nphimtools impute -C config.yaml \\\n    -I your.vcf.gz \\\n    -O test_outprefix \\\n    --refpanel-version 1000G_P3_GRCh37 \\\n    --reference-build GRCh37 \\\n    --unprephase \\\n    --nCPU 4\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/ShujiaHuang/phimtools",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ShujiaHuang/phimtools",
    "keywords": "",
    "license": "BSD (3-clause)",
    "maintainer": "Shujia Huang",
    "maintainer_email": "huangshujia9@gmail.com",
    "name": "phimtools",
    "package_url": "https://pypi.org/project/phimtools/",
    "platform": "",
    "project_url": "https://pypi.org/project/phimtools/",
    "project_urls": {
      "Download": "https://github.com/ShujiaHuang/phimtools",
      "Homepage": "https://github.com/ShujiaHuang/phimtools"
    },
    "release_url": "https://pypi.org/project/phimtools/1.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "phimtools: A python program for phasing and imputation NGS data.",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12571933,
  "releases": {
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b2aadee2500fa18c2289e9fcb93b465a5e2c9aead5f0e6012e0f14a87f190c0b",
          "md5": "4ed053cabe829bf9caec6005df165969",
          "sha256": "a116b77a5f04b47fbc140f74d7113cedf5e3660878c3f54f243404c3d8fd2cb3"
        },
        "downloads": -1,
        "filename": "phimtools-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4ed053cabe829bf9caec6005df165969",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14789,
        "upload_time": "2021-08-10T04:33:25",
        "upload_time_iso_8601": "2021-08-10T04:33:25.133198Z",
        "url": "https://files.pythonhosted.org/packages/b2/aa/dee2500fa18c2289e9fcb93b465a5e2c9aead5f0e6012e0f14a87f190c0b/phimtools-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a31eb0020c87933f326505a8066d237d89b7980bb173c8aa9696d4ec8462604e",
          "md5": "ac9d00ab79edeaf8d10000c093d25d76",
          "sha256": "32b882b91e76175545bee01bae7a8f2eefa6634fa5229e8b5a4cd250cbf518f9"
        },
        "downloads": -1,
        "filename": "phimtools-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ac9d00ab79edeaf8d10000c093d25d76",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28258,
        "upload_time": "2022-01-14T08:39:12",
        "upload_time_iso_8601": "2022-01-14T08:39:12.815440Z",
        "url": "https://files.pythonhosted.org/packages/a3/1e/b0020c87933f326505a8066d237d89b7980bb173c8aa9696d4ec8462604e/phimtools-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a31eb0020c87933f326505a8066d237d89b7980bb173c8aa9696d4ec8462604e",
        "md5": "ac9d00ab79edeaf8d10000c093d25d76",
        "sha256": "32b882b91e76175545bee01bae7a8f2eefa6634fa5229e8b5a4cd250cbf518f9"
      },
      "downloads": -1,
      "filename": "phimtools-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "ac9d00ab79edeaf8d10000c093d25d76",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 28258,
      "upload_time": "2022-01-14T08:39:12",
      "upload_time_iso_8601": "2022-01-14T08:39:12.815440Z",
      "url": "https://files.pythonhosted.org/packages/a3/1e/b0020c87933f326505a8066d237d89b7980bb173c8aa9696d4ec8462604e/phimtools-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}