{
  "info": {
    "author": "D-Wave Systems Inc.",
    "author_email": "radomir@dwavesys.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# D-Wave Ocean plugin for IBM Qiskit\n\nEnables [Qiskit](https://qiskit.org/) users to obtain ground state(s) of Ising Hamiltonians using [D-Wave](https://www.dwavesys.com/)'s QPU available via [Leap](https://cloud.dwavesys.com/).\n\nThe package provides an implementation of Qiskit's [`MinimumEigensolver`](https://qiskit.org/documentation/stubs/qiskit.aqua.algorithms.MinimumEigensolver.html)\ninterface (available as `DWaveMinimumEigensolver`) which can be used directly on qubit operators, or via\n`qikist.optimization`'s [`MinimumEigenOptimizer`](https://qiskit.org/documentation/stubs/qiskit.optimization.algorithms.MinimumEigenOptimizer.html).\n\n\n## Examples\n\nSolve a [`QuadraticProgram`](https://qiskit.org/documentation/stubs/qiskit.optimization.QuadraticProgram.html)\nwith [`MinimumEigenOptimizer`](https://qiskit.org/documentation/stubs/qiskit.optimization.algorithms.MinimumEigenOptimizer.html)\n(see Qiskit's [tutorial](https://qiskit.org/documentation/tutorials/optimization/3_minimum_eigen_optimizer.html))\nusing `DWaveMinimumEigensolver`:\n\n```python\n>>> from qiskit.optimization import QuadraticProgram\n>>> from qiskit.optimization.algorithms import MinimumEigenOptimizer\n>>> from dwave.plugins.qiskit import DWaveMinimumEigensolver\n...\n>>> # Construct a simple quadratic program\n>>> qp = QuadraticProgram()\n>>> qp.binary_var('x')\n>>> qp.binary_var('y')\n>>> qp.minimize(quadratic={'xy': 1})\n...\n>>> # Solve using Qiskit's MinimumEigenOptimizer on D-Wave QPU as a minimum eigen solver\n>>> dwave_mes = DWaveMinimumEigensolver()\n>>> optimizer = MinimumEigenOptimizer(dwave_mes)\n>>> result = optimizer.solve(qp)\n...\n>>> print(result)\noptimal function value: 0.0\noptimal value: [0. 1.]\nstatus: SUCCESS\n>>> result.samples\n[('01', 0.0, 0.39), ('00', 0.0, 0.25), ('10', 0.0, 0.36)]\n```\n\nSolve a 6-city TSP (or [some other Ising model](https://qiskit.org/documentation/apidoc/qiskit.optimization.applications.ising.html#module-qiskit.optimization.applications.ising)).\n\n```python\n>>> from qiskit.optimization.applications.ising import tsp\n>>> from qiskit.optimization.applications.ising.common import sample_most_likely\n>>> from dwave.plugins.qiskit import DWaveMinimumEigensolver\n...\n>>> six_cities_tsp = tsp.random_tsp(6, seed=123)\n>>> operator, offset = tsp.get_operator(six_cities_tsp)\n...\n>>> print(operator.print_details())\nIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIZ\t(-400141.5+0j)\nIIIIIIIIIIIIIIIIIIIIIIIIIIIIZIIIIIII\t(-400152.5+0j)\nIIIIIIIIIIIIIIIIIIIIIIIIIIIIZIIIIIIZ\t(12+0j)\n# snipped for brevity\n>>> print(operator.num_qubits)\n36\n...\n>>> dwave_mes = DWaveMinimumEigensolver(num_reads=1000)\n>>> result = dwave_mes.compute_minimum_eigenvalue(operator)\n...\n>>> x = sample_most_likely(result.eigenstate)\n>>> tsp.tsp_feasible(x)\nTrue\n>>> tsp.get_tsp_solution(x)\n[2, 3, 5, 1, 4, 0]\n```\n\nFor comparison, trying this on `NumPyMinimumEigensolver` produces:\n\n```python\n>>> from qiskit.aqua.algorithms import NumPyMinimumEigensolver\n>>> result = NumPyMinimumEigensolver().compute_minimum_eigenvalue(operator)\n# snipped for brevity\nMemoryError: Unable to allocate 512. GiB for an array with shape (68719476737,) and data type uint64\n```\n\nand trying with `QAOA` backed with \"qasm_simulator\" produces:\n\n```python\n>>> from qiskit import BasicAer\n>>> from qiskit.aqua import QuantumInstance\n>>> from qiskit.aqua.algorithms import QAOA\n\n>>> quantum_instance = QuantumInstance(BasicAer.get_backend('qasm_simulator'))\n>>> qaoa_mes = QAOA(quantum_instance=quantum_instance, initial_point=[0., 0.])\n>>> result = qaoa_mes.compute_minimum_eigenvalue(operator)\n# snipped for brevity\nBasicAerError: 'Number of qubits 36 is greater than maximum (24) for \"qasm_simulator\".'\n```\n\n## Installation\n\nCompatible with Python 3.6+, [Qiskit](https://github.com/Qiskit/qiskit) 0.23.0+,\nand [Ocean](https://github.com/dwavesystems/dwave-ocean-sdk) 3.1.0+.\n\n```bash\npip install dwave-qiskit-plugin\n```\n\nTo install from source:\n```bash\npip install -r requirements.txt\npython setup.py install\n```\n\nTest requirements are in `tests/requirements.txt`.\n\nNote: [Configured access to D-Wave API](https://docs.ocean.dwavesys.com/en/latest/overview/sapi.html) is required.\n\n\n## License\n\nReleased under the Apache License 2.0. See [LICENSE](./LICENSE) file.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dwavesystems/dwave-qiskit-plugin",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dwave-qiskit-plugin",
    "package_url": "https://pypi.org/project/dwave-qiskit-plugin/",
    "platform": "",
    "project_url": "https://pypi.org/project/dwave-qiskit-plugin/",
    "project_urls": {
      "Homepage": "https://github.com/dwavesystems/dwave-qiskit-plugin"
    },
    "release_url": "https://pypi.org/project/dwave-qiskit-plugin/0.1.0/",
    "requires_dist": [
      "qiskit-aqua (>=0.8.0)",
      "dwave-system (>=1.2.0)"
    ],
    "requires_python": ">=3.6",
    "summary": "Access D-Wave system from IBM Qiskit via MinimumEigensolver interface.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8849451,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "15f2e4c00ebb6739e5162cd4b055bd7b2d58e75bf3ce70baa6b8c0b956ab374a",
          "md5": "1c6d1bad631a1f5b5cfff9d1590a95d1",
          "sha256": "9ed86cbfa92f90d6901529674ceb94c11e9c12336b71bc0f835a329899997579"
        },
        "downloads": -1,
        "filename": "dwave_qiskit_plugin-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1c6d1bad631a1f5b5cfff9d1590a95d1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 12401,
        "upload_time": "2020-12-08T14:17:29",
        "upload_time_iso_8601": "2020-12-08T14:17:29.021488Z",
        "url": "https://files.pythonhosted.org/packages/15/f2/e4c00ebb6739e5162cd4b055bd7b2d58e75bf3ce70baa6b8c0b956ab374a/dwave_qiskit_plugin-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "da54c43e84cd7f310e8b85b1a80cf8371b0c0961d85b4ef2493e63ffb61bd64f",
          "md5": "221f3049f80c2f4f24ed0a0c900bca3f",
          "sha256": "e5404e312a73a2ed77f2c30e60219b2446bdbfbcc27c510473ec88b773be2682"
        },
        "downloads": -1,
        "filename": "dwave-qiskit-plugin-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "221f3049f80c2f4f24ed0a0c900bca3f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9963,
        "upload_time": "2020-12-08T14:17:30",
        "upload_time_iso_8601": "2020-12-08T14:17:30.336827Z",
        "url": "https://files.pythonhosted.org/packages/da/54/c43e84cd7f310e8b85b1a80cf8371b0c0961d85b4ef2493e63ffb61bd64f/dwave-qiskit-plugin-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "15f2e4c00ebb6739e5162cd4b055bd7b2d58e75bf3ce70baa6b8c0b956ab374a",
        "md5": "1c6d1bad631a1f5b5cfff9d1590a95d1",
        "sha256": "9ed86cbfa92f90d6901529674ceb94c11e9c12336b71bc0f835a329899997579"
      },
      "downloads": -1,
      "filename": "dwave_qiskit_plugin-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1c6d1bad631a1f5b5cfff9d1590a95d1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 12401,
      "upload_time": "2020-12-08T14:17:29",
      "upload_time_iso_8601": "2020-12-08T14:17:29.021488Z",
      "url": "https://files.pythonhosted.org/packages/15/f2/e4c00ebb6739e5162cd4b055bd7b2d58e75bf3ce70baa6b8c0b956ab374a/dwave_qiskit_plugin-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "da54c43e84cd7f310e8b85b1a80cf8371b0c0961d85b4ef2493e63ffb61bd64f",
        "md5": "221f3049f80c2f4f24ed0a0c900bca3f",
        "sha256": "e5404e312a73a2ed77f2c30e60219b2446bdbfbcc27c510473ec88b773be2682"
      },
      "downloads": -1,
      "filename": "dwave-qiskit-plugin-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "221f3049f80c2f4f24ed0a0c900bca3f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 9963,
      "upload_time": "2020-12-08T14:17:30",
      "upload_time_iso_8601": "2020-12-08T14:17:30.336827Z",
      "url": "https://files.pythonhosted.org/packages/da/54/c43e84cd7f310e8b85b1a80cf8371b0c0961d85b4ef2493e63ffb61bd64f/dwave-qiskit-plugin-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}