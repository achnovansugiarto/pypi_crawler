{
  "info": {
    "author": "David Vaughan",
    "author_email": "david.vaughan@quickrelease.co.uk",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Django :: 1.11",
      "Framework :: Django :: 2.0",
      "Framework :: Django :: 2.1",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.0",
      "Framework :: Django :: 3.1",
      "Framework :: Django :: 3.2",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# cypress-django\n\nPython and Node.js package providing support for Cypress and Django integration.\n\n## Python: Cypress DB\n\nIssue commands to operate on the project's Cypress test database.\n\nExpects `settings/cypress.py` to exist for the Django settings and\n`cypress/db/setup_test_data.py` to exist to house the functions for loading\nin test data (though both can be customised, see below).\n\nThis script can be used in Cypress tests to load data into the test database,\nas well as be run on the command line as a shortcut for various operations on the\ntest database.\n\nIt caches the last loaded test data function and exits early if the same function\nis loaded again - for tests that do not alter the database, it is not necessary to\nreload the data, so we can save time here.\n\nImplemented as a standalone script rather than a management command to avoid the\noverhead of `manage.py` when exiting early, since we want tests to be as fast as\npossible.\n\n### Installation\n\n```\npip install cypress-django\n```\n\n\n### Usage\n\n```\ncypress_db [-h] [--init] [--flush] [--clearcache] [func]\n```\n\npositional arguments:\n```\n  func          Setup test data function to run\n```\n\noptional arguments:\n```\n  -h, --help    show this help message and exit\n  --init        Initialise the database (run `migrate` and `createcachetable`)\n  --flush       Clear all data (run `flush`)\n  --clearcache  Delete the test data cache (use when a test will modify the database)\n```\n\n### Setup test data functions\n\nThese are python functions that should load data into the test database as required for\ntests. The functions should not have any required arguments, as when they are invoked,\nno arguments will be passed. There is no particular restriction on what the functions\ncan do, so it is possbile to have helper functions setup to do common setup that the\nexposed setup functions can call.\n\nFor example, one possible function could be to create a superuser:\n```python\ndef superuser():\n    User.objects.create_superuser(username=\"test\", password=\"a\")\n```\nAnother function may be something like:\n```python\ndef make_some_objects():\n    # we also need a create a superuser\n    superuser()\n    # make some objects\n    # ...\n```\nWhen a new function is loaded, the database is always flushed first, so you are starting\nfrom scratch every time.\n\n### Configuration\n\nEnvironment variables:\n- `CYPRESS_SETTINGS` - python module for the cypress settings (default `<project_name>.settings.cypress`)\n\nSettings:\n- `CYPRESS_SETUP_TEST_DATA_MODULE` - python module for setup test data functions (default `cypress.db.setup_test_data`)\n- `CYPRESS_CACHE_KEY` - cache key for tracking last setup test data function loaded (default `cypress_last_func`)\n- `CYPRESS_CACHE_TIMEOUT` - how long the `CYPRESS_CACHE_KEY` lasts before expiring in seconds (default 1 day)\n\n## Node.js: Cypress Commands\n\nProvides a `login` helper function:\n- `cy.login()` will programmatically login using the `USERNAME` and `PASSWORD` environment\nvariables defined in `cypress.json` (or with `CYPRESS_` prefix if defined elsewhere)\n- Recommended way to use is to put `cy.login()` in `beforeEach`\n- If it is necessary to login as a different user, for example to test behaviour for users with\nlimited permissions, simply provide the appropriate username and password as arguments\n\nProvides a `setupDB` helper function that expects the python package in this repo to be\ninstalled:\n- `cy.setupDB` will flush the test database and load new data according to the\nfunction `setupFunc`\n- If the test will write to the database, `mutable` should be set to `true`\n- Otherwise set `mutable` to `false` to allow early exit from the script if no DB setup\nis necessary (this means repeated test runs with such tests will be significantly faster)\n- The `setupFunc` argument should be the name of a function living in `cypress/db/setup_test_data.py`\nwhich loads whatever data necessary into the test database - this is similar to a\n`TestCase.setUpTestData` method\n\nExample `cypress.json`:\n```json\n{\n  \"baseUrl\": \"http://127.0.0.1:8000\",\n  \"env\": {\n    \"USERNAME\": \"test\",\n    \"PASSWORD\": \"a\"\n  },\n  \"viewportHeight\": 800,\n  \"viewportWidth\": 1400\n}\n```\n\n### Installation\n\nEnsure `cypress` is installed:\n```\nnpm install cypress --save-dev\n```\n\nInstall `cypress-django`:\n```\nnpm install git+https://github.com/QuickRelease/cypress-django.git --save-dev\n```\n\nand include this line in `cypress/support/index.js` or `cypress/support/commands.js`:\n```\nimport 'cypress-django/commands'\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/QuickRelease/cypress-django.git",
    "keywords": "cypress django test",
    "license": "MIT",
    "maintainer": "Quick Release (Automotive) Ltd.",
    "maintainer_email": "",
    "name": "cypress-django",
    "package_url": "https://pypi.org/project/cypress-django/",
    "platform": "",
    "project_url": "https://pypi.org/project/cypress-django/",
    "project_urls": {
      "Homepage": "https://github.com/QuickRelease/cypress-django.git"
    },
    "release_url": "https://pypi.org/project/cypress-django/0.1.0/",
    "requires_dist": [
      "Django (>=1.11)"
    ],
    "requires_python": "",
    "summary": "Cypress DB helper command line script",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9535320,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ceb617f773dec7b1d7c9742a6a8d7b67f2a6fea3b48df442bbc4a97dfc6907f9",
          "md5": "545d742e8f67c0d275b0465ec7850b7d",
          "sha256": "040a8427907fd76e3f60ed5c479194b923a11c5d51ed7fd310b685a9683f1e90"
        },
        "downloads": -1,
        "filename": "cypress_django-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "545d742e8f67c0d275b0465ec7850b7d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6632,
        "upload_time": "2021-02-26T17:13:28",
        "upload_time_iso_8601": "2021-02-26T17:13:28.846265Z",
        "url": "https://files.pythonhosted.org/packages/ce/b6/17f773dec7b1d7c9742a6a8d7b67f2a6fea3b48df442bbc4a97dfc6907f9/cypress_django-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "96366953b9bb18e95502aeb727f2c3a1e45d2e41cb4a1e1437efa2078d09f7f0",
          "md5": "1cca1efc21fa937d166a1cf9b4db6ae0",
          "sha256": "ad7c349586ea0ddae478f1c29af737900e8fb5404f401ef2c571d891819be24f"
        },
        "downloads": -1,
        "filename": "cypress-django-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1cca1efc21fa937d166a1cf9b4db6ae0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5701,
        "upload_time": "2021-02-26T17:13:29",
        "upload_time_iso_8601": "2021-02-26T17:13:29.798722Z",
        "url": "https://files.pythonhosted.org/packages/96/36/6953b9bb18e95502aeb727f2c3a1e45d2e41cb4a1e1437efa2078d09f7f0/cypress-django-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ceb617f773dec7b1d7c9742a6a8d7b67f2a6fea3b48df442bbc4a97dfc6907f9",
        "md5": "545d742e8f67c0d275b0465ec7850b7d",
        "sha256": "040a8427907fd76e3f60ed5c479194b923a11c5d51ed7fd310b685a9683f1e90"
      },
      "downloads": -1,
      "filename": "cypress_django-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "545d742e8f67c0d275b0465ec7850b7d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 6632,
      "upload_time": "2021-02-26T17:13:28",
      "upload_time_iso_8601": "2021-02-26T17:13:28.846265Z",
      "url": "https://files.pythonhosted.org/packages/ce/b6/17f773dec7b1d7c9742a6a8d7b67f2a6fea3b48df442bbc4a97dfc6907f9/cypress_django-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "96366953b9bb18e95502aeb727f2c3a1e45d2e41cb4a1e1437efa2078d09f7f0",
        "md5": "1cca1efc21fa937d166a1cf9b4db6ae0",
        "sha256": "ad7c349586ea0ddae478f1c29af737900e8fb5404f401ef2c571d891819be24f"
      },
      "downloads": -1,
      "filename": "cypress-django-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "1cca1efc21fa937d166a1cf9b4db6ae0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5701,
      "upload_time": "2021-02-26T17:13:29",
      "upload_time_iso_8601": "2021-02-26T17:13:29.798722Z",
      "url": "https://files.pythonhosted.org/packages/96/36/6953b9bb18e95502aeb727f2c3a1e45d2e41cb4a1e1437efa2078d09f7f0/cypress-django-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}