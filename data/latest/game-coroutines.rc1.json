{
  "info": {
    "author": "Leonardo Baptista",
    "author_email": "leonardoobaptistaa@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable"
    ],
    "description": "game_coroutines\n===============\n\ngame_coroutines is a pure-python lib with no dependencies, to simplify calling \nmethods over time on game environments.\n\nFor example, on a game, if you need to move a sprite from point (0, 100) to \n(300, 100) over 10 seconds, you will need to deal with frame updates, \ndelta_times and controlling the position over time.\n\nWith game_coroutines you can create a coroutine to do that for you, for example:\n\n```python\n#main.py\n\nimport arcade\nfrom game_coroutines import Coroutine\n\n...\nself.player = #player sprite creation\n...\n\ndef move_player(progress):\n    self.center_x = arcade.lerp(0, 300, progress)\n\nmove_routine = Coroutine(delay=0.0, duration=10, progress_func=move_player)\nmove_routine()\n```\n\nIs was maded to work with arcade, but it can run easily on py-game too.\n\nInstall\n-------\n\n```\npip install game_coroutines\n```\n\nConfiguring\n-----------\n\nIt's very easy to configure game_coroutines. You need to call `.start` on the\nsetup method and `.update` on the on_update.\n\n### Start\n\nCall start on your `setup` method:\n\n```python\n#main.py\n\nfrom game_coroutines import CoroutineManager\n...\n...\n\ndef setup(self):\n    ...\n    CoroutineManager.start()\n```\n\n### Update\n\nUpdate coroutine manager every FPS tick:\n\n```python\n#main.py\n...\n...\n\ndef on_update(self, delta_time):\n    ...\n    CoroutineManager.update(delta_time)\n```\n\nCall Coroutine\n--------------\n\nNow you can create your Coroutine and call it.\n\n```python\n#main.py\n\nimport arcade\nfrom game_coroutines import Coroutine\n\n...\nself.player = #player sprite creation\n...\n\ndef move_player(progress):\n    self.center_x = arcade.lerp(0, 300, progress)\n\nmove_routine = Coroutine(delay=0.0, duration=10, progress_func=move_player)\nmove_routine()\n```\n\n### Callbacks\n\nYou can have callbacks to be called after a coroutine finishes. \n\nA callback can be any Callable object or a Coroutine (which is a Callable\nobject too).\n\n```python\n#main.py\n\nimport arcade\nfrom game_coroutines import Coroutine\n\n...\nself.player = #player sprite creation\n...\n\ndef move_player(progress):\n    self.center_x = arcade.lerp(0, 300, progress)\n\ndef print_player_x_after():\n    print(f'Finished moving at: {self.player.center_x}')\n\ndef scale_up_player(progress):\n    self.center_x = arcade.lerp(1, 1.5, progress)\n\nscale_routine = Coroutine(delay=0.0, duration=10, progress_func=scale_up_player,\n    callback=print_player_x_after)\nmove_routine = Coroutine(delay=0.0, duration=10, progress_func=move_player,\n    callback=scale_routine)\n\nmove_routine()\n```\n\nOn the example above we have 2 coroutines: `scale_routine` and `move_routine`.\n\nWe first call `move_routine`. After it finishes, it will start the coroutine\n`scale_routine` which is defined as callback.\n\nAfter `scale_routine` ends, it will call the `print_player_x_after` function.\n\nSequence\n--------\n\nYou can call a sequence of couroutines too:\n\n```python\n#main.py\n\nimport arcade\nfrom game_coroutines import Sequence, Coroutine\n\n...\nself.player = #player sprite creation\n...\n\ndef move_player(progress):\n    self.center_x = arcade.lerp(0, 300, progress)\n\ndef scale_up_player(progress):\n    self.center_x = arcade.lerp(1, 1.5, progress)\n\ndef scale_down_player(progress):\n    self.center_x = arcade.lerp(1.5, 1, progress)\n\nSequence(\n    Coroutine(delay=0.0, duration=10, progress_func=move_player),\n    Coroutine(delay=0.1, duration=1, progress_func=scale_up_player),\n    Coroutine(delay=0.1, duration=1, progress_func=scale_down_player)\n)\n```\n\nSequences starts after initializing, don't need to call it.\n\nContributions\n-------------\n\nFuture Needs:\n\n* tests\n* accept callbacks with args\n* [add your needs here]\n\nPRs are welcome!\n\nHow to upload to Pip\n--------------------\n\nThis section is for the maintainer to remember how to upload to pypi.\nMove along.\n\n```\npython setup.py sdist\npip install twine\ntwine upload dist/*\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Ruppy/game_coroutines",
    "keywords": "pygame arcade coroutines routines sprites",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "game-coroutines",
    "package_url": "https://pypi.org/project/game-coroutines/",
    "platform": null,
    "project_url": "https://pypi.org/project/game-coroutines/",
    "project_urls": {
      "Homepage": "https://github.com/Ruppy/game_coroutines"
    },
    "release_url": "https://pypi.org/project/game-coroutines/0.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "game_coroutines is a pure-python lib with no dependencies, to simplify calling methods over time on game environments.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14051611,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cca79e63de275ca2de35d6db9295bb33c99dd9ea031bac2b95e15a7189b814b9",
          "md5": "141309e391f51c9b22bbb56287c88560",
          "sha256": "2425fc7e65a4be9c34bab6ad5f5d30e616a60810056dfd5000d3185ad1026abb"
        },
        "downloads": -1,
        "filename": "game_coroutines-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "141309e391f51c9b22bbb56287c88560",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5037,
        "upload_time": "2022-06-07T00:29:38",
        "upload_time_iso_8601": "2022-06-07T00:29:38.526310Z",
        "url": "https://files.pythonhosted.org/packages/cc/a7/9e63de275ca2de35d6db9295bb33c99dd9ea031bac2b95e15a7189b814b9/game_coroutines-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cca79e63de275ca2de35d6db9295bb33c99dd9ea031bac2b95e15a7189b814b9",
        "md5": "141309e391f51c9b22bbb56287c88560",
        "sha256": "2425fc7e65a4be9c34bab6ad5f5d30e616a60810056dfd5000d3185ad1026abb"
      },
      "downloads": -1,
      "filename": "game_coroutines-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "141309e391f51c9b22bbb56287c88560",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5037,
      "upload_time": "2022-06-07T00:29:38",
      "upload_time_iso_8601": "2022-06-07T00:29:38.526310Z",
      "url": "https://files.pythonhosted.org/packages/cc/a7/9e63de275ca2de35d6db9295bb33c99dd9ea031bac2b95e15a7189b814b9/game_coroutines-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}