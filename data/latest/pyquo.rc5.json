{
  "info": {
    "author": "QuoLab Technologies",
    "author_email": "curious@quolab.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# About\n\npyquo is a library which offers bindings for the quolab REST API in\npython.\n\n## Compatibility\n\npyquo is designed to be compatbile with both python2 and python3\n\n## Installation\n\n```shell\n$ pip install pyquo\n```\n\n## Authentication\n\nThere are two ways of authenticating against Quolab's API. The first \nmethod is using the UserAuthenticator which uses  `BasicAuth`.\n\n```python\nfrom pyquo.authenticator import UserAuthenticator\nauth = UserAuthenticator(username='user', password='pass')\n```\n\nHowever, the prefered way of authenticating would be by using the\n`TokenAuthenticator`.\n\n```python\nfrom pyquo.authenticator import TokenAuthenticator\n\nauth = TokenAuthenticator(token='your-token-here')\n```\n\nIn order to generate a token the following pyquo code can be used:\n\n```python\nfrom pyquo.Session import Session\nfrom pyquo.authenticator import UserAuthenticator, TokenAuthenticator\n\nsession = Session(\n    base_url=\"https://qlab.quo/\",\n    global_session=True,\n    auth=UserAuthenticator(username=\"<username>\", password=\"<password>\")\n)\n\nprint(TokenAuthenticator.create_token(session, \"1y\"))\n```\n\nFor more information on the `expires_in` (e.g. 1y = 1 year) field, please\nconsult the quolab REST API documentation\n\n## Sessions\n\nIn order to interact with the quolab api, a `Session` instance is required. This\ncan be created as follows:\n\n```python\nfrom pyquo.session import Session\n\ns = Session(base_url=\"https://<url>/\", global_session=True, auth=auth, verify=False)\n```\n\nWhen interacting with a single quolab instance, it is recommended to set\n`global_session` to `True`. When interacting with multiple sessions at once,\ne.g. retreiving information mutliple nodes, you will be required to store the\nsession, and pass it around with your queries.\n\n## Models\n\npyquo implements (sys-)facts, (sys-)references and annotations as pyquo.model\nobject instances. For example, a case model can be created as follows:\n\n```python\n[In:] from pyquo.models import Case\n[In:] case = Case(id='2981693283194043a185c0cc9412ad83')\n[Out:] case(2981693283194043a185c0cc9412ad83)\n```\n\n`case` is a 'handle' object for the case with the case id\n'2981693283194043a185c0cc9412ad83'. This handle can now be used to perform\nread/store/update/delete operations on the case. \n\n```python\n[In:] case.get()\n[In:] case.name\n[Out:] \"Fancy case name\"\n[In:] case.name = \"Renamed case\"\n[In:] case.save()\n[In:] case.get().name\n[Out:] \"Renamed case\"\n```\n\n## Querysets\n\n### References / Sysreferences\n\n(Sys-)Facts can have incoming and outgoing (sys-)references, which can be\nqueried as follows:\n\n```python\n[In:] references = case.references()\n[Out:] [case(2981693283194043a185c0cc9412ad83)→associated-with→user(test),\n        case(2981693283194043a185c0cc9412ad83)→encases→ipynb(Untitled1.ipynb)]\n```\n\nThis will show all outgoing references. In order to show incoming references,\nthe `incoming` parameter needs to be set to `True` (`case.references(incoming=True)`)\n\nIt is possible to filter for `sysrefs` using `fact.references(refs=SysRef)`.\n\nFurther the associated facts behind the references can be filtered (e.g. Files\nand Mutexes only) using:\n\n```python\n[In:] fact.references(facts=(models.File, models.Mutex))\n```\n\nWhile the reference type can also be filtered using:\n\n```python\n[In:] fact.references[models.Contains](facts=(models.File, models.Mutex))\n```\n\nThe obtained references have a `source` and a `target` property which resolves\nto an instance of the related fact. E.g.\n\n```python\n[In:] reference\n[Out:] case(2981693283194043a185c0cc9412ad83)→encases→ipynb(Untitled1.ipynb)\n[In:] reference.source\n[Out:] case(2981693283194043a185c0cc9412ad83)\n[In:] reference.target\n[Out:] ipynb(Untitled1.ipynb)\n```\n\nIt is also possible to obtain the `source` and `target` facts directly, by\nusing the properties `fact.ancestors` and `fact.descendants`.\n\n### Annotations\n\nFact annotations can be queries as follows:\n\n```python\nfact.annotations(annotations=pyquo.models.KnownAs, limit=3)\n```\n\n`annotations=<pyquo.Model>` allows serverside filtering for annotations of a\ngiven type, while `limit=1` allows limiting the number of results returned by a\ngiven query.\n\n\n## Raw Queries\n\nFrom time to time it can occur that pyquo is not flexible enough to cover each\nand every usecase/api feature which is why raw queries have been made possible\nin pyquo:\n\n```python\nfrom pyquo.session import Query\n\nfoo = {\n    \"class\": \"annotation\",\n    \"type\": \"known-as\",\n    \"aggregate\": \"first\",\n    \"fact\": {\n        \"type\": \"function\",\n        \"id\": [f.id for f in functions],\n        \"aggregate\": \"group\" \n    }\n}\n\nfor i in Query.generate(foo, session):\n    print(i)\n\nprint(Query.execute(foo, session))\n```\n\nThe `Query.generate(foo, session)` method will execute the given query and\nreturn a deserialized pyquo object, while `result = Query.execute(foo, session)`\nwill return the raw query result as a dictionary.\n\n## Examples\n\nFurhter examples can be found here [Example.md](Examples.md)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/quolab/pyquo",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyquo",
    "package_url": "https://pypi.org/project/pyquo/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyquo/",
    "project_urls": {
      "Homepage": "https://github.com/quolab/pyquo"
    },
    "release_url": "https://pypi.org/project/pyquo/20.1.5/",
    "requires_dist": [
      "certifi (==2018.8.24)",
      "chardet (==3.0.4)",
      "idna (==2.6)",
      "requests (==2.21.0)",
      "six (==1.12.0)",
      "urllib3 (==1.24.2)"
    ],
    "requires_python": "",
    "summary": "Python QuoLab REST Client",
    "version": "20.1.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8483300,
  "releases": {
    "20.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee3496c53673cd9e82f8d57f7dbff5ff3c5390afd57db3a9cd7fab4e5851249c",
          "md5": "1eba3f5aea6c0c1b5d119e8c1a74cb96",
          "sha256": "0ed175e5a6041ae9d148772b14511d6050aedffe83714f12b11aa55a1f8f232d"
        },
        "downloads": -1,
        "filename": "pyquo-20.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1eba3f5aea6c0c1b5d119e8c1a74cb96",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19980,
        "upload_time": "2020-05-13T09:43:44",
        "upload_time_iso_8601": "2020-05-13T09:43:44.808364Z",
        "url": "https://files.pythonhosted.org/packages/ee/34/96c53673cd9e82f8d57f7dbff5ff3c5390afd57db3a9cd7fab4e5851249c/pyquo-20.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8d114a9bf8d07f37c2bf310c4562c1835236bd385de6c6d4b98d5b9a2184b645",
          "md5": "51fea53f98c5db7a0ee02fb9b9125edb",
          "sha256": "b9775c39a331930be04be2644d32a28b82ce71fa9f7137967e08938f89396e8f"
        },
        "downloads": -1,
        "filename": "pyquo-20.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "51fea53f98c5db7a0ee02fb9b9125edb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15184,
        "upload_time": "2020-05-13T09:43:47",
        "upload_time_iso_8601": "2020-05-13T09:43:47.728527Z",
        "url": "https://files.pythonhosted.org/packages/8d/11/4a9bf8d07f37c2bf310c4562c1835236bd385de6c6d4b98d5b9a2184b645/pyquo-20.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "20.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4f30045f38ac6593fc347a80a5eba12fc96501931f70778a942a9076c10c1a13",
          "md5": "a36c6a22eb8985b8f3df424f7464a002",
          "sha256": "6b511e504a9810cc21ac0454760b7e36f1aea7ecf91b079deeed6caaed66c92b"
        },
        "downloads": -1,
        "filename": "pyquo-20.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a36c6a22eb8985b8f3df424f7464a002",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19996,
        "upload_time": "2020-10-16T15:07:30",
        "upload_time_iso_8601": "2020-10-16T15:07:30.298783Z",
        "url": "https://files.pythonhosted.org/packages/4f/30/045f38ac6593fc347a80a5eba12fc96501931f70778a942a9076c10c1a13/pyquo-20.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2061515916e892e64185ab6378ee1a2ae48546a5183a75d39f13f6d3d5aa611e",
          "md5": "a6f866ebbe22eb9631155547cd9b59e5",
          "sha256": "2f4cdcd05edc3ab1d52e06ca7b8effb2fcad5008cb93726e1c2709c829cd3111"
        },
        "downloads": -1,
        "filename": "pyquo-20.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a6f866ebbe22eb9631155547cd9b59e5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15199,
        "upload_time": "2020-10-16T15:07:32",
        "upload_time_iso_8601": "2020-10-16T15:07:32.203600Z",
        "url": "https://files.pythonhosted.org/packages/20/61/515916e892e64185ab6378ee1a2ae48546a5183a75d39f13f6d3d5aa611e/pyquo-20.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "20.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f13afd65d945ae4fa3fd5b7fcb2f5048f33a1d99768aeab585aa45bffddfc0e3",
          "md5": "e833deb6fcb6f4e59e28a1836bed61fc",
          "sha256": "9f188400204d155e339d72f3c520e334278afe76d18ed93868dd0eb2aef492b4"
        },
        "downloads": -1,
        "filename": "pyquo-20.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e833deb6fcb6f4e59e28a1836bed61fc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 20025,
        "upload_time": "2020-10-19T07:51:03",
        "upload_time_iso_8601": "2020-10-19T07:51:03.836158Z",
        "url": "https://files.pythonhosted.org/packages/f1/3a/fd65d945ae4fa3fd5b7fcb2f5048f33a1d99768aeab585aa45bffddfc0e3/pyquo-20.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea98c7b2fff73f331b9cce0b2ae9e6fa2d902c11329abb40c97f068f6b11a3e1",
          "md5": "8a13d58e21c51eb0a8de18e0e2c59ab3",
          "sha256": "75145a4be0df3a0deb9927294e8f895e0b6cfe49f85cd7bc3f53b6a9daf4a1c6"
        },
        "downloads": -1,
        "filename": "pyquo-20.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "8a13d58e21c51eb0a8de18e0e2c59ab3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15231,
        "upload_time": "2020-10-19T07:51:05",
        "upload_time_iso_8601": "2020-10-19T07:51:05.178625Z",
        "url": "https://files.pythonhosted.org/packages/ea/98/c7b2fff73f331b9cce0b2ae9e6fa2d902c11329abb40c97f068f6b11a3e1/pyquo-20.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "20.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "85ea9620895d656461427d5f0837837275e2c5e1e8ed95cb357680edbee92b74",
          "md5": "20849e36e0ffe2a6b26b8dac998fdf3f",
          "sha256": "f71156b845c46a63d08b87d200a9a8eb86aa386c8abf376b76e7e89842e3982a"
        },
        "downloads": -1,
        "filename": "pyquo-20.1.4-py3.7.egg",
        "has_sig": false,
        "md5_digest": "20849e36e0ffe2a6b26b8dac998fdf3f",
        "packagetype": "bdist_egg",
        "python_version": "3.7",
        "requires_python": null,
        "size": 39575,
        "upload_time": "2020-10-19T08:22:54",
        "upload_time_iso_8601": "2020-10-19T08:22:54.748030Z",
        "url": "https://files.pythonhosted.org/packages/85/ea/9620895d656461427d5f0837837275e2c5e1e8ed95cb357680edbee92b74/pyquo-20.1.4-py3.7.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5adb2bfdd6804cbb21ec80af74b1628fa887c61f72f9fce2d3bb34298fffa24a",
          "md5": "cf12939d6a7599f1992b296016a0a710",
          "sha256": "05fc5ae56ed874f23544683e7327026839ca35fed95c31556f2a24cef8d774e3"
        },
        "downloads": -1,
        "filename": "pyquo-20.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cf12939d6a7599f1992b296016a0a710",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 20023,
        "upload_time": "2020-10-19T08:22:53",
        "upload_time_iso_8601": "2020-10-19T08:22:53.382779Z",
        "url": "https://files.pythonhosted.org/packages/5a/db/2bfdd6804cbb21ec80af74b1628fa887c61f72f9fce2d3bb34298fffa24a/pyquo-20.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5bbf743b40b24b98f7ff1d816e6fab854dadf4e2e1935b954997713ba5537ce5",
          "md5": "b03b067c9ab41bf117cf5a832ad97621",
          "sha256": "1ca08f84bb21dfe43c76a656a245d95046c9c6a53eb9651d06bc85179d9dc8b9"
        },
        "downloads": -1,
        "filename": "pyquo-20.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "b03b067c9ab41bf117cf5a832ad97621",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15224,
        "upload_time": "2020-10-19T08:22:56",
        "upload_time_iso_8601": "2020-10-19T08:22:56.462783Z",
        "url": "https://files.pythonhosted.org/packages/5b/bf/743b40b24b98f7ff1d816e6fab854dadf4e2e1935b954997713ba5537ce5/pyquo-20.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "20.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e53c874495f2411604ceb5a3f567795a2c06c543dd71e9ee6aab06e46c1349d5",
          "md5": "cca3fc113b59a97b9297062f1efc7c4d",
          "sha256": "578fe57b1adf92eb5ee3f737dae599f5905387473e6d4fe46edc95050237f91a"
        },
        "downloads": -1,
        "filename": "pyquo-20.1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cca3fc113b59a97b9297062f1efc7c4d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 20059,
        "upload_time": "2020-10-23T10:35:35",
        "upload_time_iso_8601": "2020-10-23T10:35:35.572651Z",
        "url": "https://files.pythonhosted.org/packages/e5/3c/874495f2411604ceb5a3f567795a2c06c543dd71e9ee6aab06e46c1349d5/pyquo-20.1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d2c0e34634cf0d237f7a7437ebabdc39363aa5efc7c0da5d5af07ef672c64e03",
          "md5": "ed706bf3e8aed5553383cd38ddc198ae",
          "sha256": "c8ee36167c37e1f5694237da1ea017d82cc694b445495f6655755cdeaed5f35e"
        },
        "downloads": -1,
        "filename": "pyquo-20.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "ed706bf3e8aed5553383cd38ddc198ae",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15265,
        "upload_time": "2020-10-23T10:35:37",
        "upload_time_iso_8601": "2020-10-23T10:35:37.178787Z",
        "url": "https://files.pythonhosted.org/packages/d2/c0/e34634cf0d237f7a7437ebabdc39363aa5efc7c0da5d5af07ef672c64e03/pyquo-20.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e53c874495f2411604ceb5a3f567795a2c06c543dd71e9ee6aab06e46c1349d5",
        "md5": "cca3fc113b59a97b9297062f1efc7c4d",
        "sha256": "578fe57b1adf92eb5ee3f737dae599f5905387473e6d4fe46edc95050237f91a"
      },
      "downloads": -1,
      "filename": "pyquo-20.1.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "cca3fc113b59a97b9297062f1efc7c4d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 20059,
      "upload_time": "2020-10-23T10:35:35",
      "upload_time_iso_8601": "2020-10-23T10:35:35.572651Z",
      "url": "https://files.pythonhosted.org/packages/e5/3c/874495f2411604ceb5a3f567795a2c06c543dd71e9ee6aab06e46c1349d5/pyquo-20.1.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d2c0e34634cf0d237f7a7437ebabdc39363aa5efc7c0da5d5af07ef672c64e03",
        "md5": "ed706bf3e8aed5553383cd38ddc198ae",
        "sha256": "c8ee36167c37e1f5694237da1ea017d82cc694b445495f6655755cdeaed5f35e"
      },
      "downloads": -1,
      "filename": "pyquo-20.1.5.tar.gz",
      "has_sig": false,
      "md5_digest": "ed706bf3e8aed5553383cd38ddc198ae",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 15265,
      "upload_time": "2020-10-23T10:35:37",
      "upload_time_iso_8601": "2020-10-23T10:35:37.178787Z",
      "url": "https://files.pythonhosted.org/packages/d2/c0/e34634cf0d237f7a7437ebabdc39363aa5efc7c0da5d5af07ef672c64e03/pyquo-20.1.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}