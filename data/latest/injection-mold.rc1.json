{
  "info": {
    "author": "Jonathan McCaffrey",
    "author_email": "jmc@teammccaffrey.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "# Injection Mold\r\n\r\nThis module provides a Spring/Micronaut-esque dependency injection system for Python using type hints.\r\n\r\n## Example\r\n\r\n```python\r\nfrom mold import factory, singleton, inject, BeanContext\r\n\r\nclass SqlSession:\r\n    pass\r\n\r\nclass User:\r\n    id: str\r\n\r\nclass IUserRepo(abc.ABC):\r\n    @abc.abstractmethod\r\n    def get_user_by_id(self, id: str) -> User:\r\n        raise NotImplementedError()\r\n\r\n@singleton()\r\nclass SqlUserRepo(IUserRepo):\r\n    def __init__(self, session: SqlSession):\r\n        self._session = session\r\n        \r\n    def get_user_by_id(self, id: str) -> User:\r\n        # ...\r\n        pass\r\n\r\n@factory()\r\ndef sql_session_factory() -> SqlSession:\r\n    return SqlSession()\r\n\r\n@inject()\r\ndef get_user_service(user_repo: IUserRepo, id: str) -> User:\r\n    return user_repo.get_user_by_id(id)\r\n\r\n@app.route('/user/<id>')\r\ndef get_user_route(id: str):\r\n    user = get_user_service(id)\r\n    return jsonify(user) \r\n\r\nif __name__ == '__main__':\r\n    with BeanContext():\r\n        app.run()\r\n```\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jmccaffrey42/mold",
    "keywords": "",
    "license": "MPL-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "injection-mold",
    "package_url": "https://pypi.org/project/injection-mold/",
    "platform": null,
    "project_url": "https://pypi.org/project/injection-mold/",
    "project_urls": {
      "Homepage": "https://github.com/jmccaffrey42/mold"
    },
    "release_url": "https://pypi.org/project/injection-mold/0.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Spring/Micronaut-esque dependency injection system for Python using type hints",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13370163,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "116e5e446953588d272b3b07f4a78ccf73852f16fce457f0ec2c285c1d60fffe",
          "md5": "e8088cacb77fef8ea20bca60f39fb8f2",
          "sha256": "0b17c706c3fb5703e29256b3dadc242f8797bde8472194976e20769de6f0fc30"
        },
        "downloads": -1,
        "filename": "injection-mold-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e8088cacb77fef8ea20bca60f39fb8f2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6186,
        "upload_time": "2022-04-01T05:45:29",
        "upload_time_iso_8601": "2022-04-01T05:45:29.196338Z",
        "url": "https://files.pythonhosted.org/packages/11/6e/5e446953588d272b3b07f4a78ccf73852f16fce457f0ec2c285c1d60fffe/injection-mold-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "116e5e446953588d272b3b07f4a78ccf73852f16fce457f0ec2c285c1d60fffe",
        "md5": "e8088cacb77fef8ea20bca60f39fb8f2",
        "sha256": "0b17c706c3fb5703e29256b3dadc242f8797bde8472194976e20769de6f0fc30"
      },
      "downloads": -1,
      "filename": "injection-mold-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "e8088cacb77fef8ea20bca60f39fb8f2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6186,
      "upload_time": "2022-04-01T05:45:29",
      "upload_time_iso_8601": "2022-04-01T05:45:29.196338Z",
      "url": "https://files.pythonhosted.org/packages/11/6e/5e446953588d272b3b07f4a78ccf73852f16fce457f0ec2c285c1d60fffe/injection-mold-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}