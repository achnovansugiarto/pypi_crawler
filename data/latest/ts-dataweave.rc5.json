{
  "info": {
    "author": "Ian Cooper",
    "author_email": "icooper@tetrasience.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3"
    ],
    "description": "# DataWeave Python Wrapper [![Build Status](https://travis-ci.com/tetrascience/ts-dataweave-python.svg?token=uzw5KFZps3QXT9bqRDHY&branch=main)](https://travis-ci.com/tetrascience/ts-dataweave-python)\n\nPython wrapper around MuleSoft's DataWeave data transformation engine.\n\n## Installation\n\nAdd this package to your project using `pip` or `pipenv`:\n\n```sh\n# using pip\npip install ts-dataweave\n\n# using pipenv\npipenv install ts-dataweave\n```\n\nThe post-install script will download and extract the correct DataWeave command-line binary from [MuleSoft's DataWeave CLI repository](https://github.com/mulesoft-labs/data-weave-native/).\n\n## Usage\n\nTo use DataWeave, import `ts_dataweave`:\n\n```python\nimport ts_dataweave\n```\n\n### ts_dataweave.run(_payload_, _script_, \\[_timeout_\\])\n\nRuns a DataWeave script with the specified payloads. The input payloads and script are written to temporary files and then removed when the execution is complete.\n\nThe _payload_ parameter should be a dictionary of `ts_dataweave.Payload` instances with _string_ keys. The payloads will be added to DataWeave with the corresponding key as the name of the payload.\n\nThe _script_ parameter should be a _string_, _bytes_, or _file-like_ object containing the DataWeave script.\n\nThe _timeout_ parameter is optional and should be the number of seconds that the script is allowed to run before an error is raised. The default timeout is 30 seconds.\n\nThe `ts_dataweave.run()` function returns a _bytes_ object containing the output of the DataWeave script execution.\n\n> A _bytes_ object can easily be converted to a UTF-8 string by using `.decode(\"utf-8\")`.\n\n### ts_dataweave.Payload\n\nThe `dataweave.Payload` object contains information about a DataWeave payload. Use the constructor:\n\n```py\nts_dataweave.Payload([payloadType], data)\n```\n\nThe _payloadType_ parameter should be either `\"json\"`, `\"csv\"`, or `\"xml\"`. Alternatively, the members from the enumeration `dataweave.PayloadType` can also be used. Additional input types are not recognized at this time. If the _payloadType_ parameter is omitted, the type will be guessed based on the first non-whitespace byte of _data_:\n  - `b\"{\"` ➡️ `\"json\"`\n  - `b\"[\"` ➡️ `\"json\"`\n  - `b\"<\"` ➡️ `\"xml\"`\n  - Else ➡️ `\"csv\"`\nIf the payload is large or there is any chance of ambiguity, please specify _payloadType_.\n\nThe _data_ parameter should be a _string_, _bytes_, _dict_, _list_, or _file-like_ object containing the content of the payload. The _payloadType_ parameter can be safely omitted if _data_ is a _dict_ or _list_.\n\n## Examples\n\nExample with explicit payload types:\n\n```python\nimport ts_dataweave\n\nprint(ts_dataweave.run({\n    \"doc1\": ts_dataweave.Payload(\n        \"xml\", # can also use ts_dataweave.XML\n        \"\"\"<root>\n            <firstname>Mike</firstname>\n            <lastname>Foo</lastname>\n        </root>\"\"\"\n    ),\n    \"doc2\": ts_dataweave.Payload(\n        \"json\", # can also use ts_dataweave.JSON\n        \"\"\"{\n            \"birthday\": \"yesterday\",\n            \"favoriteFood\": \"salami\"\n        }\"\"\"\n    ),        \n}, \"\"\"contact: {\n    firstname: doc1.root.firstname,\n    lastname: doc1.root.lastname,\n    food: doc2.favoriteFood,\n    bday: doc2.birthday\n}\"\"\").decode(\"utf-8\"))\n```\n\nPayload data types can also be auto-detected:\n\n```python\nimport ts_dataweave\n\nprint(ts_dataweave.run({\n    \"doc1\": ts_dataweave.Payload(\n        \"\"\"<root>\n            <firstname>Mike</firstname>\n            <lastname>Foo</lastname>\n        </root>\"\"\"\n    ),\n    \"doc2\": ts_dataweave.Payload(\n        \"\"\"{\n            \"birthday\": \"yesterday\",\n            \"favoriteFood\": \"salami\"\n        }\"\"\"\n    ),        \n}, \"\"\"contact: {\n    firstname: doc1.root.firstname,\n    lastname: doc1.root.lastname,\n    food: doc2.favoriteFood,\n    bday: doc2.birthday\n}\"\"\").decode(\"utf-8\"))\n```\n\nPython `dict`s and `list`s can also be used for payload data with payload type safely omitted:\n\n```python\nimport ts_dataweave\n\nprint(ts_dataweave.run({\n    \"doc1\": ts_dataweave.Payload([\"Mike\", \"Foo\"]),\n    \"doc2\": ts_dataweave.Payload(\n        {\n            \"birthday\": \"yesterday\",\n            \"favoriteFood\": \"salami\"\n        }\n    ),        \n}, \"\"\"contact: {\n    firstname: doc1[0],\n    lastname: doc1[1],\n    food: doc2.favoriteFood,\n    bday: doc2.birthday\n}\"\"\").decode(\"utf-8\"))\n```\n\n## Tests\n\nThe repository includes a test suite.\n\n```sh\npython -m pytest\n```\n\n## Compatibility\n\nThis package has been specifically developed and tested with Python 3.7 on Darwin (macOS) x86_64 and Linux x86_64 platforms.\n\n## Changelog\n\n### 1.0.4\n\n- Update DataWeave CLI to v1.0.16 for macOS and Linux.\n\n### 1.0.3\n\n- Optional auto-detection of _payloadType_ in `ts_dataweave.Payload` constructor\n\n### 1.0.2\n\n- Fix wrapping of `ts_dataweave.Error` with another `ts_dataweave.Error`\n- Sanitize payload IDs before executing DataWeave\n\n### 1.0.1\n\n- Use temporary file to capture DataWeave output instead of the standard output stream.\n\n### 1.0.0\n\n- Initial implementation.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://developers.tetrascience.com",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ts-dataweave",
    "package_url": "https://pypi.org/project/ts-dataweave/",
    "platform": null,
    "project_url": "https://pypi.org/project/ts-dataweave/",
    "project_urls": {
      "Homepage": "https://developers.tetrascience.com"
    },
    "release_url": "https://pypi.org/project/ts-dataweave/1.0.4/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Python wrapper around MuleSoft DataWeave data transformation engine.",
    "version": "1.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13351274,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2558afd3304d68bee706677a38db6aa12c22f4bc55a953d2914ad67c21a1d792",
          "md5": "ae8f411eeea05907cfbecc9cc80805aa",
          "sha256": "a246a89db764ac2a6fabfb87bbc58e2b02524932838e912108e99f651d4b909f"
        },
        "downloads": -1,
        "filename": "ts-dataweave-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ae8f411eeea05907cfbecc9cc80805aa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 8818,
        "upload_time": "2021-07-20T14:10:46",
        "upload_time_iso_8601": "2021-07-20T14:10:46.466284Z",
        "url": "https://files.pythonhosted.org/packages/25/58/afd3304d68bee706677a38db6aa12c22f4bc55a953d2914ad67c21a1d792/ts-dataweave-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa1ce8c9e16cba938a905b96c4191069cc4011d1ef285e85bd0f62c2986db156",
          "md5": "b74b6b1cf5c4ba75dbf2931d50c6d665",
          "sha256": "3004cd693c06b10f83e2c2339188e8b3b000ab5cc608203a5c3e63f2d4a5b275"
        },
        "downloads": -1,
        "filename": "ts-dataweave-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b74b6b1cf5c4ba75dbf2931d50c6d665",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 8899,
        "upload_time": "2021-07-20T15:12:17",
        "upload_time_iso_8601": "2021-07-20T15:12:17.221129Z",
        "url": "https://files.pythonhosted.org/packages/aa/1c/e8c9e16cba938a905b96c4191069cc4011d1ef285e85bd0f62c2986db156/ts-dataweave-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e05eb1bcc862aae37774f22b990d35dc287b892eee6181c9e19904cccf6d2215",
          "md5": "a173cfe19c7054f8cdca10e17818ea96",
          "sha256": "e269dcd9e4f2ce71485830530b5909bb44146b003c90c0f37e1f8ce3eaf0325a"
        },
        "downloads": -1,
        "filename": "ts-dataweave-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a173cfe19c7054f8cdca10e17818ea96",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9067,
        "upload_time": "2021-07-29T14:27:18",
        "upload_time_iso_8601": "2021-07-29T14:27:18.963211Z",
        "url": "https://files.pythonhosted.org/packages/e0/5e/b1bcc862aae37774f22b990d35dc287b892eee6181c9e19904cccf6d2215/ts-dataweave-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c8a62144215edeccd80bbd56ccc57e4814d98c2e2a75d60fad69c2e9d0610250",
          "md5": "540bf506c2191a11d4f6cbc9bd556e16",
          "sha256": "ef628df0baa90f5501140ebfc104f1bb8e35ecb622bbe133ee432ca0fa6f6c28"
        },
        "downloads": -1,
        "filename": "ts-dataweave-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "540bf506c2191a11d4f6cbc9bd556e16",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9804,
        "upload_time": "2021-08-06T20:04:07",
        "upload_time_iso_8601": "2021-08-06T20:04:07.206988Z",
        "url": "https://files.pythonhosted.org/packages/c8/a6/2144215edeccd80bbd56ccc57e4814d98c2e2a75d60fad69c2e9d0610250/ts-dataweave-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "896de47ca6acd1eae5fb8af5c4df112f0287eb64e867e2e888f6c7a66667ddfb",
          "md5": "5694e33d41ba805b591e72a658c2a668",
          "sha256": "f952fcd39f3c3aa9039cc10dc7b26a351216faab82342a3bb94b324ca47930f6"
        },
        "downloads": -1,
        "filename": "ts-dataweave-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "5694e33d41ba805b591e72a658c2a668",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9814,
        "upload_time": "2022-03-30T20:51:05",
        "upload_time_iso_8601": "2022-03-30T20:51:05.287655Z",
        "url": "https://files.pythonhosted.org/packages/89/6d/e47ca6acd1eae5fb8af5c4df112f0287eb64e867e2e888f6c7a66667ddfb/ts-dataweave-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "896de47ca6acd1eae5fb8af5c4df112f0287eb64e867e2e888f6c7a66667ddfb",
        "md5": "5694e33d41ba805b591e72a658c2a668",
        "sha256": "f952fcd39f3c3aa9039cc10dc7b26a351216faab82342a3bb94b324ca47930f6"
      },
      "downloads": -1,
      "filename": "ts-dataweave-1.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "5694e33d41ba805b591e72a658c2a668",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 9814,
      "upload_time": "2022-03-30T20:51:05",
      "upload_time_iso_8601": "2022-03-30T20:51:05.287655Z",
      "url": "https://files.pythonhosted.org/packages/89/6d/e47ca6acd1eae5fb8af5c4df112f0287eb64e867e2e888f6c7a66667ddfb/ts-dataweave-1.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}