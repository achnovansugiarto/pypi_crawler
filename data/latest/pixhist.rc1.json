{
  "info": {
    "author": "Sidney Radcliffe",
    "author_email": "sidneyradcliffe@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# PixHist\n\n\n[![](https://github.com/sradc/PixHist/workflows/Python%20package/badge.svg)](https://github.com/sradc/PixHist/commits/)\n\n\n`pip install pixhist`\n\n\n*PixHist - pixel histogram.*\n\n\nDependencies: [Numba](http://numba.pydata.org/), [NumPy](https://numpy.org/), and [Matplotlib](https://matplotlib.org/) to use `pixhist.rendering`.\n\n\n```python\nimport matplotlib.pyplot as plt\nfrom numba import njit\nimport numpy as np\nimport pixhist\nimport pixhist.rendering\n```\n\n## Example 1: create a pixhist from a generator\n\nThe generator should have no arguments, and return the values `x, y`:\n\n`generator() -> x, y`\n\nIt should be compiled with Numba's `njit` / `jit`.\n\n\n```python\n@njit\ndef gen():  \n    \"\"\"A Clifford Attractor\"\"\"\n    x, y = 0, 0\n    while True:\n        yield x, y\n        x_ = np.sin(2.27 * y) + 0.66 * np.cos(2.27 * x)\n        y_ = np.sin(1.13 * x) + 2.16 * np.cos(1.13 * y)\n        x, y = x_, y_\n\nr = pixhist.estimate_range(gen, n_iter=100_000)\nr = pixhist.scale_range(r, 1.2)\n\nN_ITER = 1000_000\nW = 500\nH = 400\nhist = pixhist.from_gen(gen, N_ITER, W, H, range=r, make_xy_proportional=True, log=True)\n\npixhist.rendering.plot(hist)\nplt.show()\n```\n\n\n![png](https://raw.githubusercontent.com/sradc/PixHist/master/assets/output_3_0.png)\n\n\n## Example 2: using a generator factory\n\nCreate a 'generator factory' to get around the fact that the generator should have no arguments.\n\n\n```python\ndef get_clifford_generator(a, b, c, d, x_i=0, y_i=0):\n    @njit\n    def gen():\n        x, y = x_i, y_i\n        while True:\n            yield x, y\n            x_ = np.sin(a * y) + c * np.cos(a * x)\n            y_ = np.sin(b * x) + d * np.cos(b * y)\n            x, y = x_, y_\n    return gen\n\nparams = [1.8, -1.4, -1.5, -0.71]\ngen = get_clifford_generator(*params)\nr = pixhist.estimate_range(gen, n_iter=100_000)\n\nN_ITER = 1000_000\nW, H = 500, 500\nhist = pixhist.from_gen(gen, N_ITER, W, H, range=r, make_xy_proportional=False, log=True)\n\npixhist.rendering.plot(hist, cmap='twilight')\nplt.show()\n```\n\n\n![png](https://raw.githubusercontent.com/sradc/PixHist/master/assets/output_5_0.png)\n\n\n## Example 3: pixhist from arrays\n\nCreate a pixel histogram from two arrays of the same length.\n\n\n```python\nx_vals = np.random.random(100_000)\ny_vals = np.sin(x_vals)**2 * np.random.random(100_000)\n\nW, H = 200, 300\nhist = pixhist.from_arrays(x_vals, y_vals, W, H, make_xy_proportional=True, log=True)\n\npixhist.rendering.plot(hist, cmap='nipy_spectral')\nplt.show()\n```\n\n\n![png](https://raw.githubusercontent.com/sradc/PixHist/master/assets/output_7_0.png)\n\n\n## Example 4: the advantage of using generators\n\nYou can have a large number of iterations, since you don't need to store the arrays `x_vals, y_vals` in memory. (Time becomes the limiting factor).\n\n\n```python\nfrom magic_timer import MagicTimer\n\nparams = [1.8, -1.4, -1.5, -0.71]\ngen = get_clifford_generator(*params)\n\nr = pixhist.estimate_range(gen, n_iter=100_000)\n\nN_ITER = 100_000_000\nW, H = 500, 500\n\nt = MagicTimer()\nhist = pixhist.from_gen(gen, N_ITER, W, H, range=r, make_xy_proportional=False, log=True)\nprint('Time elapsed:', t)\n\npixhist.rendering.plot(hist, cmap='twilight')\nplt.show()\n```\n\n    Time elapsed: 8.4 seconds\n\n\n\n![png](https://raw.githubusercontent.com/sradc/PixHist/master/assets/output_9_1.png)\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sradc/PixHist",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pixhist",
    "package_url": "https://pypi.org/project/pixhist/",
    "platform": "",
    "project_url": "https://pypi.org/project/pixhist/",
    "project_urls": {
      "Homepage": "https://github.com/sradc/PixHist"
    },
    "release_url": "https://pypi.org/project/pixhist/0.0.2/",
    "requires_dist": [
      "numpy",
      "numba",
      "matplotlib ; extra == 'pixhist.rendering'"
    ],
    "requires_python": ">=3.6",
    "summary": "Pixel histograms.",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6984902,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd56e64666af0caa75e44723dc7b66b84784af065f588bf9f180033fc16d0de3",
          "md5": "5551b9b4a641e8104bd7f0e9b0390224",
          "sha256": "7a6e3d09d31225bd77ae1efa5acaefb01fac50a97b94c546b0dfca5c119e914f"
        },
        "downloads": -1,
        "filename": "pixhist-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5551b9b4a641e8104bd7f0e9b0390224",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8756,
        "upload_time": "2020-04-09T10:31:36",
        "upload_time_iso_8601": "2020-04-09T10:31:36.826430Z",
        "url": "https://files.pythonhosted.org/packages/bd/56/e64666af0caa75e44723dc7b66b84784af065f588bf9f180033fc16d0de3/pixhist-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "582b6a6b01fb51c3b3017f3a20467a150c9bfaecd34322ace3c2f9ab7e107247",
          "md5": "adb4cb763747c641c9060bd4c71276b7",
          "sha256": "6229d8ae9e226ef2fbf7482e0b2367f51c3d92e981ffb0215af5078765df96a8"
        },
        "downloads": -1,
        "filename": "pixhist-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "adb4cb763747c641c9060bd4c71276b7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6918,
        "upload_time": "2020-04-09T10:31:38",
        "upload_time_iso_8601": "2020-04-09T10:31:38.324460Z",
        "url": "https://files.pythonhosted.org/packages/58/2b/6a6b01fb51c3b3017f3a20467a150c9bfaecd34322ace3c2f9ab7e107247/pixhist-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bd56e64666af0caa75e44723dc7b66b84784af065f588bf9f180033fc16d0de3",
        "md5": "5551b9b4a641e8104bd7f0e9b0390224",
        "sha256": "7a6e3d09d31225bd77ae1efa5acaefb01fac50a97b94c546b0dfca5c119e914f"
      },
      "downloads": -1,
      "filename": "pixhist-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5551b9b4a641e8104bd7f0e9b0390224",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 8756,
      "upload_time": "2020-04-09T10:31:36",
      "upload_time_iso_8601": "2020-04-09T10:31:36.826430Z",
      "url": "https://files.pythonhosted.org/packages/bd/56/e64666af0caa75e44723dc7b66b84784af065f588bf9f180033fc16d0de3/pixhist-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "582b6a6b01fb51c3b3017f3a20467a150c9bfaecd34322ace3c2f9ab7e107247",
        "md5": "adb4cb763747c641c9060bd4c71276b7",
        "sha256": "6229d8ae9e226ef2fbf7482e0b2367f51c3d92e981ffb0215af5078765df96a8"
      },
      "downloads": -1,
      "filename": "pixhist-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "adb4cb763747c641c9060bd4c71276b7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 6918,
      "upload_time": "2020-04-09T10:31:38",
      "upload_time_iso_8601": "2020-04-09T10:31:38.324460Z",
      "url": "https://files.pythonhosted.org/packages/58/2b/6a6b01fb51c3b3017f3a20467a150c9bfaecd34322ace3c2f9ab7e107247/pixhist-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}