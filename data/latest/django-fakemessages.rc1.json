{
  "info": {
    "author": "Pascal Fouque",
    "author_email": "fouquepascal@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 3.2",
      "Framework :: Django :: 4",
      "Framework :: Django :: 4.0",
      "Framework :: Django :: 4.1",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# django-fakemessages - Generate fake language files for your [Django Project](https://djangoproject.com/)\n\n[![CI tests](https://github.com/pfouque/django-fakemessages/actions/workflows/test.yml/badge.svg)](https://github.com/pfouque/django-fakemessages/actions/workflows/test.yml)\n[![codecov](https://codecov.io/github/pfouque/django-fakemessages/branch/master/graph/badge.svg?token=GWGDR6AR6D)](https://codecov.io/github/pfouque/django-fakemessages)\n[![Documentation](https://img.shields.io/static/v1?label=Docs&message=READ&color=informational&style=plastic)](https://github.com/pfouque/django-fakemessages#settings)\n[![MIT License](https://img.shields.io/static/v1?label=License&message=MIT&color=informational&style=plastic)](https://github.com/pfouque/django-fakemessages/LICENSE)\n\n\n## Introduction\n\nLooking for missing translations in your Django project? Let's censor what is done and see what remains!\n\n## Resources\n\n-   Package on PyPI: [https://pypi.org/project/django-fakemessages/](https://pypi.org/project/django-fakemessages/)\n-   Project on Github: [https://github.com/pfouque/django-fakemessages](https://github.com/pfouque/django-fakemessages)\n\n## Requirements\n\n-   Django >=3.2\n-   Python >=3.8\n-   Translate-toolkit >=3.8.5\n\n## How to\n\n1. Install\n    ```\n    $ pip install \"django-fakemessages\"\n    ```\n\n2. Register fakemessage in your list of Django applications:\n    ```\n    INSTALLED_APPS = [\n        # ...\n        \"fakemessages\",\n        # ...\n    ]\n    ```\n\n3. Update your settings:\n    ```\n    if DEBUG:\n        \"\"\"Add our fake language to Django\"\"\"\n        from django.conf.locale import LANG_INFO\n\n        FAKE_LANGUAGE_CODE = \"kl\"\n\n        LANG_INFO[FAKE_LANGUAGE_CODE] = {\n            \"bidi\": False,\n            \"code\": FAKE_LANGUAGE_CODE,\n            \"name\": \"â–®â–®â–®â–®â–®â–®â–®â–®\",\n            \"name_local\": \"ðŸ–– â–®â–®â–®â–®â–®â–®â–®\",\n        }\n        LANGUAGES.append((FAKE_LANGUAGE_CODE, \"ðŸ–– â–®â–®â–®â–®â–®â–®â–®\"))\n    ```\n\n4. ðŸŽ‰ Voila!\n\n\n## Contribute\n\n### Principles\n\n-   Simple for developers to get up-and-running\n-   Consistent style (`black`, `ruff`)\n-   Future-proof (`pyupgrade`)\n-   Full type hinting (`mypy`)\n\n### Coding style\n\nWe use [pre-commit](https://pre-commit.com/) to run code quality tools.\n[Install pre-commit](https://pre-commit.com/#install) however you like (e.g.\n`pip install pre-commit` with your system python) then set up pre-commit to run every time you\ncommit with:\n\n```bash\n> pre-commit install\n```\n\nYou can then run all tools:\n\n```bash\n> pre-commit run --all-files\n```\n\nIt includes the following:\n\n-   `poetry` for dependency management\n-   `Ruff`, `black` and `pyupgrade` linting\n-   `mypy` for type checking\n-   `Github Actions` for builds and CI\n\nThere are default config files for the linting and mypy.\n\n### Tests\n\n#### Tests package\n\nThe package tests themselves are _outside_ of the main library code, in a package that is itself a\nDjango app (it contains `models`, `settings`, and any other artifacts required to run the tests\n(e.g. `urls`).) Where appropriate, this test app may be runnable as a Django project - so that\ndevelopers can spin up the test app and see what admin screens look like, test migrations, etc.\n\n#### Running tests\n\nThe tests themselves use `pytest` as the test runner. If you have installed the `poetry` evironment,\nyou can run them thus:\n\n```\n$ poetry run pytest\n```\n\nor\n\n```\n$ poetry shell\n(django-fakemessages-py3.10) $ pytest\n```\n\n#### CI\n\n- `.github/workflows/lint.yml`: Defines and ensure coding rules on Github.\n\n- `.github/workflows/test.yml`: Runs tests on all compatible combinations of Django (3.2+) & Python (3.8+) in a Github matrix.\n\n- `.github/workflows/coverage.yml`: Calculates the coverage on an up to date version.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pfouque/django-fakemessages",
    "keywords": "",
    "license": "MIT",
    "maintainer": "Pascal Fouque",
    "maintainer_email": "fouquepascal@gmail.com",
    "name": "django-fakemessages",
    "package_url": "https://pypi.org/project/django-fakemessages/",
    "platform": null,
    "project_url": "https://pypi.org/project/django-fakemessages/",
    "project_urls": {
      "Documentation": "https://github.com/pfouque/django-fakemessages",
      "Homepage": "https://github.com/pfouque/django-fakemessages",
      "Repository": "https://github.com/pfouque/django-fakemessages"
    },
    "release_url": "https://pypi.org/project/django-fakemessages/0.0.1/",
    "requires_dist": [
      "django (>=3.2,<5.0)",
      "translate-toolkit (>=3.8.5,<4.0.0)"
    ],
    "requires_python": ">=3.8,<4.0",
    "summary": "Generate fake language files",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17258423,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b7cd0def5485ad3c072f001421c0615367e98cd970a40aef942e84d55d338cbc",
          "md5": "dc3425c2f7efdefadaeebf3c084638ba",
          "sha256": "ddeb6243f76d6cac064e09f8e23deeec2180779f77c5ef5c748d5ea572799c30"
        },
        "downloads": -1,
        "filename": "django_fakemessages-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dc3425c2f7efdefadaeebf3c084638ba",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 5025,
        "upload_time": "2023-03-12T06:49:26",
        "upload_time_iso_8601": "2023-03-12T06:49:26.758288Z",
        "url": "https://files.pythonhosted.org/packages/b7/cd/0def5485ad3c072f001421c0615367e98cd970a40aef942e84d55d338cbc/django_fakemessages-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d44a69171a815d64b67d7eb9e3347b3d7844f353571ba5edd61be4f1b78ff589",
          "md5": "96c239da3c2922307d6804381875f59d",
          "sha256": "ebce43290f0e89d530191e21c96d6adde3b4c8e2046c3c2d7300f9440080b837"
        },
        "downloads": -1,
        "filename": "django_fakemessages-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "96c239da3c2922307d6804381875f59d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 5408,
        "upload_time": "2023-03-12T06:49:28",
        "upload_time_iso_8601": "2023-03-12T06:49:28.026935Z",
        "url": "https://files.pythonhosted.org/packages/d4/4a/69171a815d64b67d7eb9e3347b3d7844f353571ba5edd61be4f1b78ff589/django_fakemessages-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b7cd0def5485ad3c072f001421c0615367e98cd970a40aef942e84d55d338cbc",
        "md5": "dc3425c2f7efdefadaeebf3c084638ba",
        "sha256": "ddeb6243f76d6cac064e09f8e23deeec2180779f77c5ef5c748d5ea572799c30"
      },
      "downloads": -1,
      "filename": "django_fakemessages-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "dc3425c2f7efdefadaeebf3c084638ba",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<4.0",
      "size": 5025,
      "upload_time": "2023-03-12T06:49:26",
      "upload_time_iso_8601": "2023-03-12T06:49:26.758288Z",
      "url": "https://files.pythonhosted.org/packages/b7/cd/0def5485ad3c072f001421c0615367e98cd970a40aef942e84d55d338cbc/django_fakemessages-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d44a69171a815d64b67d7eb9e3347b3d7844f353571ba5edd61be4f1b78ff589",
        "md5": "96c239da3c2922307d6804381875f59d",
        "sha256": "ebce43290f0e89d530191e21c96d6adde3b4c8e2046c3c2d7300f9440080b837"
      },
      "downloads": -1,
      "filename": "django_fakemessages-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "96c239da3c2922307d6804381875f59d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<4.0",
      "size": 5408,
      "upload_time": "2023-03-12T06:49:28",
      "upload_time_iso_8601": "2023-03-12T06:49:28.026935Z",
      "url": "https://files.pythonhosted.org/packages/d4/4a/69171a815d64b67d7eb9e3347b3d7844f353571ba5edd61be4f1b78ff589/django_fakemessages-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}