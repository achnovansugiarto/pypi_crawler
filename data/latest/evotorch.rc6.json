{
  "info": {
    "author": "Nihat Engin Toklu, Timothy Atkinson, Vojtech Micka, Pawel Liskowski, Rupesh Kumar Srivastava",
    "author_email": "engin@nnaisense.com, timothy@nnaisense.com, vojtech@nnaisense.com, pawel@nnaisense.com, rupesh@nnaisense.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Utilities"
    ],
    "description": "<p align=\"center\">\n    <a href=\"https://evotorch.ai\" rel=\"nofollow\">\n        <img src=\"https://raw.githubusercontent.com/nnaisense/evotorch/master/docs/assets/evotorch.svg\" />\n    </a>\n</p>\n\n<div align=\"center\">\n    <a href=\"https://www.python.org/\" rel=\"nofollow\">\n        <img src=\"https://img.shields.io/pypi/pyversions/evotorch\" alt=\"Python\" />\n    </a>\n    <a href=\"https://pypi.org/project/evotorch/\" rel=\"nofollow\">\n        <img src=\"https://img.shields.io/pypi/v/evotorch\" alt=\"PyPI\" />\n    </a>\n    <a href=\"https://github.com/nnaisense/evotorch/blob/master/LICENSE\" rel=\"nofollow\">\n        <img src=\"https://img.shields.io/pypi/l/evotorch\" alt=\"License\" />\n    </a>\n    <a href=\"https://docs.evotorch.ai\" rel=\"nofollow\">\n        <img src=\"https://github.com/nnaisense/evotorch/actions/workflows/docs.yaml/badge.svg\" alt=\"Build\" />\n    </a>\n    <a href=\"https://github.com/nnaisense/evotorch/actions/workflows/test.yaml\" rel=\"nofollow\">\n        <img src=\"https://github.com/nnaisense/evotorch/actions/workflows/test.yaml/badge.svg\" alt=\"Test\" />\n    </a>\n    <a href=\"https://github.com/psf/black\" rel=\"nofollow\">\n        <img src=\"https://img.shields.io/badge/code%20style-black-000000.svg\" alt=\"Code style: black\" />\n    </a>\n    <a href=\"https://results.pre-commit.ci/latest/github/nnaisense/evotorch/master\" rel=\"nofollow\">\n        <img src=\"https://results.pre-commit.ci/badge/github/nnaisense/evotorch/master.svg\" alt=\"pre-commit.ci status\" />\n    </a>\n</div>\n\n---\n\nWelcome to the EvoTorch project!\nEvoTorch is an open source evolutionary computation library developed at [NNAISENSE](https://nnaisense.com), built on top of [PyTorch](https://pytorch.org/).\nSee the [documentation](https://docs.evotorch.ai) for in-depth guidance about using EvoTorch, and [join us on Slack](https://join.slack.com/t/evotorch/shared_invite/zt-1hcj9prrl-wQBMX4JtaB6WdGKSDjZGXw) for discussions.\n\nGet started by installing EvoTorch:\n```\npip install evotorch\n```\n\nWith EvoTorch, one can solve various optimization problems, regardless of whether they are differentiable (i.e. allow gradient descent). Among the problem types that are solvable with EvoTorch are:\n- Black-box optimization problems (continuous or discrete)\n- Reinforcement learning tasks\n- Supervised learning tasks\n\nVarious evolutionary computation algorithms are available in EvoTorch:\n- **Distribution-based search algorithms:**\n    - **PGPE:** Policy Gradients with Parameter-based Exploration.\n    - **XNES:** Exponential Natural Evolution Strategies.\n    - **CMA-ES:** Covariance Matrix Adaptation Evolution Strategies.\n    - **SNES:** Separable Natural Evolution Strategies.\n    - **CEM:** Cross Entropy Method.\n- **Population-based search algorithms:**\n    - **GeneticAlgorithm:** A genetic algorithm implementation. Also supports multiple objectives, in which case it behaves like **NSGA-II**.\n    - **CoSyNE:** Cooperative Synapse Neuroevolution.\n    - **MAPElites:** Multi-dimensional Archive of Phenotypic Elites\n\nSince all of these algorithms are implemented in PyTorch, they benefit from use of vectorization and parallelization on GPUs, drastically speeding up optimization when GPUs are available.\nUsing [Ray](https://github.com/ray-project/ray), EvoTorch scales these algorithms even further by splitting the workload across:\n- multiple CPUs\n- multiple GPUs\n- multiple computers in a Ray cluster\n\n# Examples\n\nBelow are some code examples that demonstrate the API of EvoTorch.\n\n## A black-box optimization example\n\nAny objective function defined to work with PyTorch can be used directly with EvoTorch.\nA non-vectorized objective function simply receives a solution as a 1-dimensional torch tensor, and returns a fitness as a scalar.\nA vectorized objective function receives a batch of solutions as a 2-dimensional torch tensor, and returns a 1-dimensional tensor of fitnesses.\nThe following example demonstrates how to define and solve the classical Rastrigin problem.\n\n```python\nfrom evotorch import Problem\nfrom evotorch.algorithms import SNES\nfrom evotorch.logging import StdOutLogger, PandasLogger\nimport math\nimport matplotlib.pyplot as plt\nimport torch\n\n\n# Declare the objective function\ndef rastrigin(x: torch.Tensor) -> torch.Tensor:\n    A = 10\n    (_, n) = x.shape\n    return A * n + torch.sum((x**2) - A * torch.cos(2 * math.pi * x), 1)\n\n\n# Declare the problem\nproblem = Problem(\n    \"min\",\n    rastrigin,\n    initial_bounds=(-5.12, 5.12),\n    solution_length=100,\n    vectorized=True,\n    # device=\"cuda:0\"  # enable this line if you wish to use GPU\n)\n\n# Initialize the SNES algorithm to solve the problem\nsearcher = SNES(problem, popsize=1000, stdev_init=10.0)\n\n# Initialize a standard output logger, and a pandas logger\n_ = StdOutLogger(searcher, interval=10)\npandas_logger = PandasLogger(searcher)\n\n# Run SNES for the specified amount of generations\nsearcher.run(2000)\n\n# Get the progress of the evolution into a DataFrame with the\n# help of the PandasLogger, and then plot the progress.\npandas_frame = pandas_logger.to_dataframe()\npandas_frame[\"best_eval\"].plot()\nplt.show()\n```\n\n## A reinforcement learning example\n\nThe following example demonstrates how to solve reinforcement learning tasks that are available through the gym library.\n\n```python\nfrom evotorch.algorithms import PGPE\nfrom evotorch.logging import StdOutLogger, PicklingLogger\nfrom evotorch.neuroevolution import GymNE\n\n# Declare the problem to solve\nproblem = GymNE(\n    env=\"Humanoid-v4\",  # Solve the Humanoid-v4 task\n    network=\"Linear(obs_length, act_length)\",  # Linear policy\n    observation_normalization=True,  # Normalize the policy inputs\n    decrease_rewards_by=5.0,  # Decrease each reward by 5.0\n    num_actors=\"max\",  # Use all available CPUs\n    # num_actors=4,    # Explicit setting. Use 4 actors.\n)\n\n# Instantiate a PGPE algorithm to solve the problem\nsearcher = PGPE(\n    problem,\n    # Base population size\n    popsize=200,\n    # For each generation, sample more solutions until the\n    # number of simulator interactions reaches this threshold\n    num_interactions=int(200 * 1000 * 0.75),\n    # Stop re-sampling solutions if the current population size\n    # reaches or exceeds this number.\n    popsize_max=3200,\n    # Learning rates\n    center_learning_rate=0.0075,\n    stdev_learning_rate=0.1,\n    # Radius of the initial search distribution\n    radius_init=0.27,\n    # Use the ClipUp optimizer with the specified maximum speed\n    optimizer=\"clipup\",\n    optimizer_config={\"max_speed\": 0.15},\n)\n\n# Instantiate a standard output logger\n_ = StdOutLogger(searcher)\n\n# Optional: Instantiate a logger to pickle and save the results periodically.\n# In this example, among the saved results will be the center of the search\n# distribution, since we are using PGPE which is distribution-based.\n_ = PicklingLogger(searcher, interval=10)\n\n# Run the algorithm for the specified amount of generations\nsearcher.run(500)\n\n# Get the center point of the search distribution,\n# obtain a policy out of that point, and visualize the\n# agent using that policy.\ncenter_solution = searcher.status[\"center\"]\ntrained_policy = problem.make_net(center_solution)\nproblem.visualize(trained_policy)\n```\n\nMore examples can be found [here](examples/).\n\n# How to cite\n\nIf you use EvoTorch in your research, please consider citing our [paper](https://arxiv.org/abs/2302.12600).\n\n```bibtex\n@article{evotorch2023arxiv,\n  title={{EvoTorch}: Scalable Evolutionary Computation in {Python}},\n  author={Toklu, Nihat Engin and Atkinson, Timothy and Micka, Vojt\\v{e}ch and Liskowski, Pawe\\l{} and Srivastava, Rupesh Kumar},\n  journal={arXiv preprint},\n  year={2023},\n  note={https://arxiv.org/abs/2302.12600}\n}\n```\n\n# How to Contribute\n\nPlease see our [contribution guidelines](CONTRIBUTING.md).\n\n# Authors\n\n- [Nihat Engin Toklu](https://github.com/engintoklu)\n- [Timothy Atkinson](https://github.com/NaturalGradient)\n- [Vojtech Micka](https://github.com/Higgcz)\n- [Pawel Liskowski](https://github.com/pliskowski)\n- [Rupesh Kumar Srivastava](https://github.com/flukeskywalker)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://evotorch.ai",
    "keywords": "python,evolution,neuroevolution,evolutionary computation,genetic algorithm,reinforcement learning",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "evotorch",
    "package_url": "https://pypi.org/project/evotorch/",
    "platform": null,
    "project_url": "https://pypi.org/project/evotorch/",
    "project_urls": {
      "Documentation": "https://docs.evotorch.ai",
      "Homepage": "https://evotorch.ai",
      "Source Code": "https://github.com/nnaisense/evotorch"
    },
    "release_url": "https://pypi.org/project/evotorch/0.4.1/",
    "requires_dist": [
      "cma",
      "functorch",
      "gym",
      "matplotlib",
      "numpy",
      "packaging",
      "pandas",
      "ray (>=1.0)",
      "torch",
      "box2d ; extra == 'all'",
      "pymongo ; extra == 'all'",
      "jupyterlab ; extra == 'all'",
      "mlflow ; extra == 'all'",
      "neptune-client ; extra == 'all'",
      "sacred ; extra == 'all'",
      "wandb ; extra == 'all'",
      "black ; extra == 'dev'",
      "flake8 ; extra == 'dev'",
      "isort ; extra == 'dev'",
      "pre-commit ; extra == 'dev'",
      "swig ; extra == 'dev'",
      "box2d ; extra == 'dev'",
      "pymongo ; extra == 'dev'",
      "jupyterlab ; extra == 'dev'",
      "mlflow ; extra == 'dev'",
      "neptune-client ; extra == 'dev'",
      "sacred ; extra == 'dev'",
      "wandb ; extra == 'dev'",
      "pytest ; extra == 'dev'",
      "pytest-cov ; extra == 'dev'",
      "mike ; extra == 'dev'",
      "mkdocs ; extra == 'dev'",
      "mkdocs-gen-files ; extra == 'dev'",
      "mkdocs-literate-nav ; extra == 'dev'",
      "mkdocs-material ; extra == 'dev'",
      "mkdocstrings[python-legacy] (>=0.18) ; extra == 'dev'",
      "nbconvert ; extra == 'dev'",
      "mike ; extra == 'doc'",
      "mkdocs ; extra == 'doc'",
      "mkdocs-gen-files ; extra == 'doc'",
      "mkdocs-literate-nav ; extra == 'doc'",
      "mkdocs-material ; extra == 'doc'",
      "mkdocstrings[python-legacy] (>=0.18) ; extra == 'doc'",
      "nbconvert ; extra == 'doc'",
      "mlflow ; extra == 'doc'",
      "neptune-client ; extra == 'doc'",
      "sacred ; extra == 'doc'",
      "wandb ; extra == 'doc'",
      "mlflow ; extra == 'logging'",
      "neptune-client ; extra == 'logging'",
      "sacred ; extra == 'logging'",
      "wandb ; extra == 'logging'",
      "mlflow ; extra == 'mlflow'",
      "neptune-client ; extra == 'neptune'",
      "sacred ; extra == 'sacred'",
      "pytest ; extra == 'test'",
      "pytest-cov ; extra == 'test'",
      "wandb ; extra == 'wandb'"
    ],
    "requires_python": ">=3.7",
    "summary": "EvoTorch is an advanced evolutionary computation library built directly on top of PyTorch, created at NNAISENSE.",
    "version": "0.4.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17205235,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5d3ce45784bce61f55c2e43f6d7667486f5a5475edbf29a68c0c15bbcbdfe0ec",
          "md5": "05c5b211318fcba158c29d401fd062de",
          "sha256": "d26601eb462c3da78181c4216becec9eb0995712b74c2d23426724321373efb3"
        },
        "downloads": -1,
        "filename": "evotorch-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "05c5b211318fcba158c29d401fd062de",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 166470,
        "upload_time": "2022-08-08T21:07:23",
        "upload_time_iso_8601": "2022-08-08T21:07:23.299384Z",
        "url": "https://files.pythonhosted.org/packages/5d/3c/e45784bce61f55c2e43f6d7667486f5a5475edbf29a68c0c15bbcbdfe0ec/evotorch-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "638e68e39a531b2d032e2db0ecab4fc6d576cfc4c8a1d382c46bf4b80605803b",
          "md5": "722999651b139a01432998317d637283",
          "sha256": "d781b3c4e1daa5229075f544480e6e5492af47777fdd4458a9b90113f5337cb4"
        },
        "downloads": -1,
        "filename": "evotorch-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "722999651b139a01432998317d637283",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 1609465,
        "upload_time": "2022-08-08T21:07:25",
        "upload_time_iso_8601": "2022-08-08T21:07:25.278975Z",
        "url": "https://files.pythonhosted.org/packages/63/8e/68e39a531b2d032e2db0ecab4fc6d576cfc4c8a1d382c46bf4b80605803b/evotorch-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bcc5c999f5a61dbfc5704359fb57ccb738ed58d62dd6148838106fa3a4f4f6ec",
          "md5": "042de9584ec3e1800bfbfb7cb4980eef",
          "sha256": "cf6d1c496e50fbbf01835d8ba697adb3d7c79970dbc749f2133b802199f1bd32"
        },
        "downloads": -1,
        "filename": "evotorch-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "042de9584ec3e1800bfbfb7cb4980eef",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 166434,
        "upload_time": "2022-08-09T09:57:15",
        "upload_time_iso_8601": "2022-08-09T09:57:15.230235Z",
        "url": "https://files.pythonhosted.org/packages/bc/c5/c999f5a61dbfc5704359fb57ccb738ed58d62dd6148838106fa3a4f4f6ec/evotorch-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "84d1eb1cbe114c15cea19f13ed2155b7e2c929671f4c142c92958df080d13563",
          "md5": "d2007f3aae8bca07e70f7b7a8f24d3b0",
          "sha256": "bd1f612ef8709e04d59e197aca618bbe579229b13af205d64ecc671535893d57"
        },
        "downloads": -1,
        "filename": "evotorch-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d2007f3aae8bca07e70f7b7a8f24d3b0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 1609351,
        "upload_time": "2022-08-09T09:57:17",
        "upload_time_iso_8601": "2022-08-09T09:57:17.195459Z",
        "url": "https://files.pythonhosted.org/packages/84/d1/eb1cbe114c15cea19f13ed2155b7e2c929671f4c142c92958df080d13563/evotorch-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "31c2a6fa17f3cfe6a1c2ff40d77b66d07358d893bf6cce22333ba6919212fc86",
          "md5": "ad0bbd42cc3d9ba33c633933759110cd",
          "sha256": "24903cd3b6fe4902177f05096378785db226a167406abbca82a9aea5f2017893"
        },
        "downloads": -1,
        "filename": "evotorch-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ad0bbd42cc3d9ba33c633933759110cd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 166663,
        "upload_time": "2022-08-31T18:16:27",
        "upload_time_iso_8601": "2022-08-31T18:16:27.547081Z",
        "url": "https://files.pythonhosted.org/packages/31/c2/a6fa17f3cfe6a1c2ff40d77b66d07358d893bf6cce22333ba6919212fc86/evotorch-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "436fe1f2f095c7aa853c7ee35b164db969a6748da60769f86a12bcbc36781b6f",
          "md5": "88661eb513aad1c4a48f624a25bab720",
          "sha256": "a9d5d1052b85856d765dd494bcfe3e3221bac7e824f1ae65033b04e155a0a0cc"
        },
        "downloads": -1,
        "filename": "evotorch-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "88661eb513aad1c4a48f624a25bab720",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 1610221,
        "upload_time": "2022-08-31T18:16:29",
        "upload_time_iso_8601": "2022-08-31T18:16:29.675756Z",
        "url": "https://files.pythonhosted.org/packages/43/6f/e1f2f095c7aa853c7ee35b164db969a6748da60769f86a12bcbc36781b6f/evotorch-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3371e3ed32820bf3b30a98fbbdb5aabddab491d03e54a3af90392d18eb882e3a",
          "md5": "8183b90fa12d1b62895059e1fc9ec85c",
          "sha256": "164dd853d31ef09c1a3d3ea5547b9eef2df1428b78a91356782a3f1c89c86929"
        },
        "downloads": -1,
        "filename": "evotorch-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8183b90fa12d1b62895059e1fc9ec85c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 217958,
        "upload_time": "2022-10-24T20:04:48",
        "upload_time_iso_8601": "2022-10-24T20:04:48.359521Z",
        "url": "https://files.pythonhosted.org/packages/33/71/e3ed32820bf3b30a98fbbdb5aabddab491d03e54a3af90392d18eb882e3a/evotorch-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b825aa091aa28f5e28e7ab5a44cdfa58e1d35665fd33fc2641ec52a6fa3b4079",
          "md5": "56988110bcc104aa5483e2dce387ac09",
          "sha256": "9d711f0615ffb1680aacdabe8846aee4011c681dc55b11e92c04b60a7b548b17"
        },
        "downloads": -1,
        "filename": "evotorch-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "56988110bcc104aa5483e2dce387ac09",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 1670633,
        "upload_time": "2022-10-24T20:04:49",
        "upload_time_iso_8601": "2022-10-24T20:04:49.910203Z",
        "url": "https://files.pythonhosted.org/packages/b8/25/aa091aa28f5e28e7ab5a44cdfa58e1d35665fd33fc2641ec52a6fa3b4079/evotorch-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "19a3c44eb6e9a7251604247c55c5a09da0558c41268ea41a7cee2e56697768f6",
          "md5": "567b90b780b8c9d78dd50b05b203da1c",
          "sha256": "79e30280102c3b0ea7a7ad4503b0129cf898db1f4e966c4ef344cbb1308a5aa6"
        },
        "downloads": -1,
        "filename": "evotorch-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "567b90b780b8c9d78dd50b05b203da1c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 270755,
        "upload_time": "2023-01-17T14:11:56",
        "upload_time_iso_8601": "2023-01-17T14:11:56.484711Z",
        "url": "https://files.pythonhosted.org/packages/19/a3/c44eb6e9a7251604247c55c5a09da0558c41268ea41a7cee2e56697768f6/evotorch-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b1fa23bdbc97eb067c0e5c0c8eeda148cbc9c4c5050963a32fb912080e4e6ae1",
          "md5": "d04b4852f58becf0852329d8d6f973f1",
          "sha256": "b735bafee14bde189a07fea57c10b61330144bd55572693b31173de9033e6fe7"
        },
        "downloads": -1,
        "filename": "evotorch-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d04b4852f58becf0852329d8d6f973f1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 1740344,
        "upload_time": "2023-01-17T14:11:58",
        "upload_time_iso_8601": "2023-01-17T14:11:58.401931Z",
        "url": "https://files.pythonhosted.org/packages/b1/fa/23bdbc97eb067c0e5c0c8eeda148cbc9c4c5050963a32fb912080e4e6ae1/evotorch-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aad186c145fff9a80510fa4853b78d3f8f5d57638237c0876077e83d04433ae4",
          "md5": "591650060b79f916f097ae4fd1f6d99a",
          "sha256": "d82212911756182bc9e538bdc6b202231e0c9bc99c2eaca4e5ac3e51a38fc4ba"
        },
        "downloads": -1,
        "filename": "evotorch-0.4.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "591650060b79f916f097ae4fd1f6d99a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 271243,
        "upload_time": "2023-03-08T10:31:33",
        "upload_time_iso_8601": "2023-03-08T10:31:33.645768Z",
        "url": "https://files.pythonhosted.org/packages/aa/d1/86c145fff9a80510fa4853b78d3f8f5d57638237c0876077e83d04433ae4/evotorch-0.4.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "14a903125b9a69bd8b058499bb5c854cf9045b629ab3a138fc4d86ca301d17c1",
          "md5": "0dedf2de0d619973191fbc95e73d5b36",
          "sha256": "50ca5400dc1091f9b603837b83f8221ff133a48f9bced78528a609e52c7c1b53"
        },
        "downloads": -1,
        "filename": "evotorch-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0dedf2de0d619973191fbc95e73d5b36",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 1742692,
        "upload_time": "2023-03-08T10:31:34",
        "upload_time_iso_8601": "2023-03-08T10:31:34.970060Z",
        "url": "https://files.pythonhosted.org/packages/14/a9/03125b9a69bd8b058499bb5c854cf9045b629ab3a138fc4d86ca301d17c1/evotorch-0.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "aad186c145fff9a80510fa4853b78d3f8f5d57638237c0876077e83d04433ae4",
        "md5": "591650060b79f916f097ae4fd1f6d99a",
        "sha256": "d82212911756182bc9e538bdc6b202231e0c9bc99c2eaca4e5ac3e51a38fc4ba"
      },
      "downloads": -1,
      "filename": "evotorch-0.4.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "591650060b79f916f097ae4fd1f6d99a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 271243,
      "upload_time": "2023-03-08T10:31:33",
      "upload_time_iso_8601": "2023-03-08T10:31:33.645768Z",
      "url": "https://files.pythonhosted.org/packages/aa/d1/86c145fff9a80510fa4853b78d3f8f5d57638237c0876077e83d04433ae4/evotorch-0.4.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "14a903125b9a69bd8b058499bb5c854cf9045b629ab3a138fc4d86ca301d17c1",
        "md5": "0dedf2de0d619973191fbc95e73d5b36",
        "sha256": "50ca5400dc1091f9b603837b83f8221ff133a48f9bced78528a609e52c7c1b53"
      },
      "downloads": -1,
      "filename": "evotorch-0.4.1.tar.gz",
      "has_sig": false,
      "md5_digest": "0dedf2de0d619973191fbc95e73d5b36",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 1742692,
      "upload_time": "2023-03-08T10:31:34",
      "upload_time_iso_8601": "2023-03-08T10:31:34.970060Z",
      "url": "https://files.pythonhosted.org/packages/14/a9/03125b9a69bd8b058499bb5c854cf9045b629ab3a138fc4d86ca301d17c1/evotorch-0.4.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}