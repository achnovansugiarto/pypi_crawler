{
  "info": {
    "author": "Sandra Mierz",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# diophila\nPython API Wrapper for [OpenAlex](http://openalex.org/).\n\n### Entities / Endpoints\nOpenAlex currently describes five different [scholarly entity types](https://docs.openalex.org/about-the-data) \nand their connections: \n* [Authors](https://docs.openalex.org/about-the-data/author)\n* [Concepts](https://docs.openalex.org/about-the-data/concept)\n* [Institutions](https://docs.openalex.org/about-the-data/institution)\n* [Venues](https://docs.openalex.org/about-the-data/venue)\n* [Works](https://docs.openalex.org/about-the-data/work)\n\nEach entity type comes with an endpoint of the same name that can be queried\nfor a single (random or specific) entity or multiple (grouped or listed) entities.\n\n### Installation\n```commandline\npip (or pip3) install diophila\n```\n\n### Usage\nFirst off, you need to initialize a client. The client offers all methods to query the API.\n\n```Python\nfrom diophila import OpenAlex\n\nopenalex = OpenAlex()\n```\n\nYou can use the client to query for a [single random entity](https://docs.openalex.org/api/get-single-entities#random-entity) \nwith the method `get_random_<entity>`:\n```Python\nrandom_author = openalex.get_random_author()\nrandom_author['id']\n```\n\nOr if you have a [specific entity](https://docs.openalex.org/api/get-single-entities) in mind, you can use the client\nusing one of the entity's IDs via the `get_single_<entity>` method:\n```Python\nspecific_work = openalex.get_single_work(\"https://doi.org/10.1364/PRJ.433188\", \"doi\")\nspecific_work['display_name']\n```\n\nIf you are interested in [entities grouped](https://docs.openalex.org/api/get-groups-of-entities) into facets, \nuse the `get_groups_of_<entities>` method:\n```Python\ngrouped_institutions = openalex.get_groups_of_institutions(\"type\")\nfor group in grouped_institutions['group_by']:\n    group['key']\n```\n\nAnd last but not least you can get [multiple entities](https://docs.openalex.org/api/get-lists-of-entities) from a type\nin a list by using the `get_list_of_<entities>` method. Note that this method uses pagination,\neither [basic paging](https://docs.openalex.org/api#basic-paging) or \n[cursor paging](https://docs.openalex.org/api#cursor-paging) \ndepending on whether the `pages` parameter is supplied:\n```Python\n# if no `pages` parameter is supplied, we use cursor paging\npages = None\n# if `pages` parameter is supplied, we use basic paging\npages = [1, 2, 3]\n\nfilters = {\"is_oa\": \"true\",\n           \"works_count\": \">15000\"}\npages_of_venues = openalex.get_list_of_venues(filters=filters, pages=pages)\n\nfor page in pages_of_venues:        # loop through pages\n    for venue in page['results']:   # loop though list of venues\n        venue['id']\n```\n\nBonus: If you want to retrieve all `works` connected to another entity,\nyou may use the entity's `works_api_url` property with the `get_works_by_api_url` method: \n```Python\nworks_api_url = \"https://api.openalex.org/works?filter=author.id:A1969205032\"\npages_of_works = openalex.get_works_by_api_url(works_api_url)\n\nfor page in pages_of_works:\n    for work in page['results']:\n        work['display_name']\n```\n\n### The Polite Pool\nIt's a good idea to use OpenAlex [polite pool](https://docs.openalex.org/api#the-polite-pool) \nwhich offers faster response times for users providing an email address.\nIf you would like to use it, simply initialize the client with your email address.\n\n```Python\nfrom diophila import OpenAlex\n\nopenalex = OpenAlex(\"your-email@address.com\")\n```\n\n### Rate limits\nThe API currently doesn't have [rate limits](https://docs.openalex.org/api#rate-limits). \nHowever, if you need more than 100,000 calls per day,\nplease drop the OpenAlex team a line at team@ourresearch.org\nor alternatively look into [using a snapshot](https://docs.openalex.org/download-snapshot).\n\n### Citation\nIf you are using OpenAlex in your research, \nthe OpenAlex team kindly asks you to cite https://doi.org/10.48550/arXiv.2205.01833\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/smierz/diophila",
    "keywords": "openalex",
    "license": "BSD-3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "diophila",
    "package_url": "https://pypi.org/project/diophila/",
    "platform": null,
    "project_url": "https://pypi.org/project/diophila/",
    "project_urls": {
      "Bug Tracker": "https://github.com/smierz/diophila/issues",
      "Homepage": "https://github.com/smierz/diophila"
    },
    "release_url": "https://pypi.org/project/diophila/0.4.0/",
    "requires_dist": [
      "requests (>=2.7.0)"
    ],
    "requires_python": "",
    "summary": "Python API Wrapper for OpenAlex",
    "version": "0.4.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14604784,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e5cd0ed4010dccf2a1fa0e3939ad1094ccd031659ee546641014257421750e9",
          "md5": "13b5fb55aa101e0784e2793a4c4ead42",
          "sha256": "6f42336cb5b64a9f5331d303a6705ad516d1f5cd61b93ca8471ef07a0b5730c3"
        },
        "downloads": -1,
        "filename": "diophila-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "13b5fb55aa101e0784e2793a4c4ead42",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9934,
        "upload_time": "2022-05-31T09:31:44",
        "upload_time_iso_8601": "2022-05-31T09:31:44.913099Z",
        "url": "https://files.pythonhosted.org/packages/7e/5c/d0ed4010dccf2a1fa0e3939ad1094ccd031659ee546641014257421750e9/diophila-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee1ef1217e97f6536a1ccd30888d9bbc434df685d1778c6c298ab4b99499e751",
          "md5": "e88b4bcaa1cc0f7746aa6807dd8fe462",
          "sha256": "e68bb22e04c0e973f15f268457e7b282ed3f9ff8e7eae323084cc4fa33e7634d"
        },
        "downloads": -1,
        "filename": "diophila-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e88b4bcaa1cc0f7746aa6807dd8fe462",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10388,
        "upload_time": "2022-05-31T13:58:12",
        "upload_time_iso_8601": "2022-05-31T13:58:12.858315Z",
        "url": "https://files.pythonhosted.org/packages/ee/1e/f1217e97f6536a1ccd30888d9bbc434df685d1778c6c298ab4b99499e751/diophila-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8610e3861719faef2ac7204a4e95c3d8386ebf7463363d3ae7e8c3cae28bc966",
          "md5": "2c086d06a612e5f1255678fd3264f391",
          "sha256": "e8691c2643a6a86ea348a31acb48ea4bff2614cc13d170c2acaf6bff7be78867"
        },
        "downloads": -1,
        "filename": "diophila-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2c086d06a612e5f1255678fd3264f391",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10610,
        "upload_time": "2022-06-07T12:32:23",
        "upload_time_iso_8601": "2022-06-07T12:32:23.534473Z",
        "url": "https://files.pythonhosted.org/packages/86/10/e3861719faef2ac7204a4e95c3d8386ebf7463363d3ae7e8c3cae28bc966/diophila-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fb2b27ea13131ef78d0b2698b68ddf953a78dae7bfda0a13d52812f2d17491f5",
          "md5": "0a65b512a3a6d94955c6786d34a22837",
          "sha256": "504016392e7f74d89a8a7a5d053dba78ec11cc7135ba5df0e5ed1215b093e168"
        },
        "downloads": -1,
        "filename": "diophila-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0a65b512a3a6d94955c6786d34a22837",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10463,
        "upload_time": "2022-06-07T12:32:24",
        "upload_time_iso_8601": "2022-06-07T12:32:24.909177Z",
        "url": "https://files.pythonhosted.org/packages/fb/2b/27ea13131ef78d0b2698b68ddf953a78dae7bfda0a13d52812f2d17491f5/diophila-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ba92092e732a65cc5d8e2e71c4db5a2c62e41103f307f7543be1196399adfe1",
          "md5": "395176aee800dc0b51efe93bb97293e3",
          "sha256": "b2dab4464026efe1a7b3384b5bfe94c2f29436e0a70643ec842644bf649c2044"
        },
        "downloads": -1,
        "filename": "diophila-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "395176aee800dc0b51efe93bb97293e3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11241,
        "upload_time": "2022-07-31T14:28:28",
        "upload_time_iso_8601": "2022-07-31T14:28:28.505718Z",
        "url": "https://files.pythonhosted.org/packages/0b/a9/2092e732a65cc5d8e2e71c4db5a2c62e41103f307f7543be1196399adfe1/diophila-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a044402da824c41f1cd95c5718fedef14a39789c8af15e73d2c18f0c9cbf825b",
          "md5": "ebe76a5bbc891c847684f7d4a8dae694",
          "sha256": "6fcc04c9d707a601ab6b447d6616de9e6fee118fdf4bc4d9e08bf6c4132704e3"
        },
        "downloads": -1,
        "filename": "diophila-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ebe76a5bbc891c847684f7d4a8dae694",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10971,
        "upload_time": "2022-07-31T14:28:29",
        "upload_time_iso_8601": "2022-07-31T14:28:29.963632Z",
        "url": "https://files.pythonhosted.org/packages/a0/44/402da824c41f1cd95c5718fedef14a39789c8af15e73d2c18f0c9cbf825b/diophila-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0ba92092e732a65cc5d8e2e71c4db5a2c62e41103f307f7543be1196399adfe1",
        "md5": "395176aee800dc0b51efe93bb97293e3",
        "sha256": "b2dab4464026efe1a7b3384b5bfe94c2f29436e0a70643ec842644bf649c2044"
      },
      "downloads": -1,
      "filename": "diophila-0.4.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "395176aee800dc0b51efe93bb97293e3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 11241,
      "upload_time": "2022-07-31T14:28:28",
      "upload_time_iso_8601": "2022-07-31T14:28:28.505718Z",
      "url": "https://files.pythonhosted.org/packages/0b/a9/2092e732a65cc5d8e2e71c4db5a2c62e41103f307f7543be1196399adfe1/diophila-0.4.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a044402da824c41f1cd95c5718fedef14a39789c8af15e73d2c18f0c9cbf825b",
        "md5": "ebe76a5bbc891c847684f7d4a8dae694",
        "sha256": "6fcc04c9d707a601ab6b447d6616de9e6fee118fdf4bc4d9e08bf6c4132704e3"
      },
      "downloads": -1,
      "filename": "diophila-0.4.0.tar.gz",
      "has_sig": false,
      "md5_digest": "ebe76a5bbc891c847684f7d4a8dae694",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10971,
      "upload_time": "2022-07-31T14:28:29",
      "upload_time_iso_8601": "2022-07-31T14:28:29.963632Z",
      "url": "https://files.pythonhosted.org/packages/a0/44/402da824c41f1cd95c5718fedef14a39789c8af15e73d2c18f0c9cbf825b/diophila-0.4.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}