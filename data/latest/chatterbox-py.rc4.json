{
  "info": {
    "author": "JungWinter",
    "author_email": "wintermy201@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: Korean",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: CPython"
    ],
    "description": "\n# Chatterbox\n[![license]](/LICENSE)\n[![pypi]](https://pypi.org/project/chatterbox.py/)\n[![pyversions]](http://pypi.python.org/pypi/chatterbox.py)\n[![travis]](https://travis-ci.org/JungWinter/chatterbox)\n[![appveyor]](https://ci.appveyor.com/project/JungWinter/chatterbox)\n[![codecov]](https://codecov.io/gh/JungWinter/chatterbox)\n\n---\n\n<b>[Chatterbox]</b>는 [카카오톡 플러스친구 자동응답 API]를 활용하여 챗봇을 만들 때 사용되는 파이썬 라이브러리입니다.\n\n**Table of Contents**\n\n- [:memo: Installation](#memo-installation)\n- [:rocket: Example](#rocket-example)\n- [:gem: Usage](#gem-usage)\n  - [Chatter](#chatter)\n    - [`Chatter.route(data)`](#chatterroutedata)\n  - [Response](#response)\n    - [Text(text)](#texttext)\n    - [Photo(url, width, height)](#photourl-width-height)\n    - [MessageButton(label, url)](#messagebuttonlabel-url)\n    - [Keyboard(buttons, type)](#keyboardbuttons-type)\n    - [조합](#%EC%A1%B0%ED%95%A9)\n  - [Base](#base)\n    - [`Chatter.add_base(name, func)`](#chatteradd_basename-func)\n    - [`@Chatter.base(name)`](#chatterbasename)\n    - [`Chatter.home()`](#chatterhome)\n  - [Rule](#rule)\n    - [`Chatter.add_rule(action, src, dest, func)`](#chatteradd_ruleaction-src-dest-func)\n    - [`@Chatter.rule(action, src, dest)`](#chatterruleaction-src-dest)\n    - [주관식 답변 처리하기](#%EC%A3%BC%EA%B4%80%EC%8B%9D-%EB%8B%B5%EB%B3%80-%EC%B2%98%EB%A6%AC%ED%95%98%EA%B8%B0)\n    - [fallback 처리하기](#fallback-%EC%B2%98%EB%A6%AC%ED%95%98%EA%B8%B0)\n- [:pray: Contribution](#pray-contribution)\n- [:link: Related projects](#link-related-projects)\n\n## :memo: Installation\n\n```shell\n$ pip install chatterbox.py\n```\n\n## :rocket: Example\n더 다양한 예제는 [examples]를 참고해주세요.\n\n```python\nfrom flask import Flask, request, jsonify\nfrom chatterbox import Chatter\nfrom chatterbox.response import Text, Keyboard, MessageButton\n\n\napp = Flask(__name__)\nchatter = Chatter()\n\n\n@chatter.base(name='홈')\ndef home_keyboard():\n    home_buttons = ['자기소개', '사이트로 이동하기']\n    return Keyboard(home_buttons)\n\n\n@chatter.rule(action='자기소개', src='홈', dest='홈')\ndef intro(data):\n    message = 'chatterbox를 통해 더 쉽게 카카오톡 봇을 만들 수 있습니다!'\n    return Text(message) + chatter.home()\n\n\n@chatter.rule(action='사이트로 이동하기', src='홈', dest='홈')\ndef web(data):\n    text = Text('자세한 정보를 보고싶으면 사이트로 이동해주세요!')\n    msg_button = MessageButton(label='이동하기',\n                               url='https://github.com/jungwinter/chatterbox')\n    keyboard = chatter.home()\n    return text + msg_button + keyboard\n\n\n@app.route('/keyboard', methods=['GET'])\ndef keyboard():\n    return jsonify(chatter.home())\n\n\n@app.route('/message', methods=['POST'])\ndef message():\n    return jsonify(chatter.route(request.json))\n\n\nif __name__ == '__main__':\n    app.run(debug=True)\n```\n\n## :gem: Usage\n### Chatter\n[FSM(finite-state machine)]을 사용해 유저들의 state를 내부에 저장하고, 요청에 맞는 response를 반환합니다.\n\n#### `Chatter.route(data)`\n[카카오톡 자동응답 api 명세]에 맞는 json 데이터를 인자로 받습니다. `user_key`로 가져온 state와 `content`값을 action으로 적절한 rule을 찾아 등록된 함수를 실행한 후 api 명세에 맞는 response를 반환합니다. rule에 관해선 아래에 서술되어 있습니다.\n\n##### 예제\n```py\n@app.route('/message', methods=['POST'])\ndef message():\n    response = chatter.route(request.json)\n    return jsonify(response)\n```\n\ninput 데이터로 다음과 같은 형식의 dict 객체를 인자로 받습니다.\n\n```json\n{\n  \"user_key\": \"encryptedUserKey\",\n  \"type\": \"text\",\n  \"content\": \"자기소개\"\n}\n```\n\noutput 데이터로 다음과 같은 형식의 Response 객체(dict로 동작함)를 반환합니다.\n\n```json\n{\n  \"message\": {\n    \"text\": \"안녕하세요! 무엇을 도와드릴까요?\"\n  },\n  \"keyboard\": {\n    \"buttons\": [\n      \"오늘의 날씨\",\n      \"취소\"\n    ],\n    \"type\": \"buttons\"\n  }\n}\n```\n\n### Response\n`chatterbox.response`에서 [카카오톡 response object 명세]를 만족하는 클래스를 가져올 수 있습니다.\n\n#### Text(text)\n다음과 같은 dict like 객체를 반환합니다. 멤버 변수로 `text`, `message`를 갖습니다.\n\n```python\nText(text='안녕!')\n```\n\n```json\n{\n  \"message\": {\n    \"text\": \"안녕!\"\n  }\n}\n```\n\n#### Photo(url, width, height)\n다음과 같은 dict like 객체를 반환합니다. 멤버 변수로 `url`, `width`, `height`, `message`를 갖습니다.\n\n```python\nPhoto(url='https://image/url.png',\n      width=500,\n      height=400)\n```\n\n```json\n{\n  \"message\": {\n    \"photo\": {\n      \"url\": \"https://image/url.png\",\n      \"width\": 500,\n      \"height\": 400\n    }\n  }\n}\n```\n\n#### MessageButton(label, url)\n다음과 같은 dict like 객체를 반환합니다. 멤버 변수로 `label`, `url`, `message`를 갖습니다.\n\n```python\nMessageButton(label='이동하기',\n              url='https://github.com/jungwinter/chatterbox')\n```\n\n```json\n{\n  \"message\": {\n    \"message_button\": {\n      \"label\": \"이동하기\",\n      \"url\": \"https://github.com/jungwinter/chatterbox\"\n    }\n  }\n}\n```\n\n#### Keyboard(buttons, type)\n자세한 명세는 [Keyboard object 문서]에서 확인할 수 있습니다. 멤버 변수로 `type`, `buttons`, `keyboard`를 갖습니다.\n\n##### 주관식 입력\n```python\nKeyboard(type='text')\n```\n\n```json\n{\n  \"keyboard\": {\n    \"type\": \"text\"\n  }\n}\n```\n##### 버튼 입력\n```python\nKeyboard(['버튼1', '버튼2'])  # type='buttons'는 생략할 수 있음\n```\n\n```json\n{\n  \"keyboard\": {\n    \"buttons\": [\n      \"버튼1\",\n      \"버튼2\"\n    ],\n    \"type\": \"buttons\"\n  }\n}\n```\n\n#### 조합\n\n```python\ndef intro():\n    text = Text('안녕!')\n    photo = Photo('https://image/url.png', 500, 400)\n    keyboard = Keyboard(['날씨', '시간'])\n    return text + photo + keyboard\n```\n\n위 코드는 아래와 같은 dict 객체를 반환합니다.\n\n```json\n{\n  \"message\": {\n    \"text\": \"안녕!\",\n    \"photo\": {\n        \"url\": \"https://image/url.png\",\n        \"width\": 500,\n        \"height\": 400\n    }\n  },\n  \"keyboard\": {\n    \"buttons\": [\n      \"날씨\",\n      \"시간\"\n    ],\n    \"type\": \"buttons\"\n  }\n}\n```\n\n##### 관계\n```\nResponse\n├── Message\n│   ├── Text\n│   ├── Photo\n│   └── MessageButton\n└── Keyboard\n    ├── ButtonType\n    └── TextType\n\nMessage + Message = Message\nMessage + Keyboard = Response\nResponse + Message = Response\n```\n\n### Base\n#### `Chatter.add_base(name, func)`\n`name`으로 유저가 시작할 state 이름을 지정할 수 있습니다.\n\n> `func`은 인자가 없어야하며 `Keyboard`를 반환해야합니다.\n\n##### 예제\n```python\ndef func():\n    return Keyboard(['버튼1', '버튼2'])\nchatter.add_base(name='홈', func=func)\n```\n\n#### `@Chatter.base(name)`\n`Chatter.add_base()`의 wrapper입니다. 데코레이터로 사용할 수 있습니다.\n\n##### 예제\n```python\n@chatter.base(name='홈')\ndef func():\n    return Keyboard(['버튼1', '버튼2'])\n```\n\n#### `Chatter.home()`\n`Chatter.add_base()`를 통해 등록된 함수 `func`을 실행해 `Keyboard`를 반환합니다.\n\n##### 예제\n```python\n>>> chatter.home()\n{\n  \"keyboard\": {\n    \"buttons\": [\n      \"버튼1\",\n      \"버튼2\"\n    ],\n    \"type\": \"buttons\"\n  }\n}\n```\n\n### Rule\n#### `Chatter.add_rule(action, src, dest, func)`\n유저의 현재 state가 `src`이고 input으로 받은 데이터에서 content가 `action`일 때, `func` 함수를 실행하고 유저의 state를 `dest`로 변경합니다. state를 활용하여 1 depth 이상의 자동응답 시나리오를 구성할 수 있습니다.\n\n> `func` 함수는 반드시 `data`를 인자로 받아야하며 `Response`를 반환해야합니다.\n\n##### 예제\n```python\ndef intro(data):\n    message = 'chatterbox를 통해 더 쉽게 카카오톡 봇을 만들 수 있습니다!'\n    return Text(message) + chatter.home()\n\nchatter.add_rule(action='자기소개', src='홈', dest='홈', func=intro)\n```\n\n#### `@Chatter.rule(action, src, dest)`\n`Chatter.add_rule()`의 wrapper입니다. 데코레이터로 사용할 수 있습니다.\n\n##### 예제\n\n```python\n@chatter.rule(action='자기소개', src='홈', dest='홈')\ndef intro(data):\n    message = 'chatterbox를 통해 더 쉽게 카카오톡 봇을 만들 수 있습니다!'\n    return Text(message) + chatter.home()\n```\n\n#### 주관식 답변 처리하기\n`Keyboard(type='text')`를 반환해 유저의 주관식 답변을 받는 경우 `action='*'`을 사용해 처리할 수 있습니다. 자세한 방법은 [examples/flask_advance.py]를 참고해주세요.\n\n#### fallback 처리하기\n`src='*'`를 사용해 유저가 어떤 state에 있더라도 특정 dest로 이동시킬 수 있습니다.\n\n##### 예제\n```python\n@chatter.rule(action='취소', src='*', dest='홈')\ndef cancel(data):\n    message = '취소하셨습니다.'\n    return Text(message) + chatter.home()\n```\n\n## :pray: Contribution\n[CONTRIBUTING.md]을 참고해주세요.\n\n## :link: Related projects\n* [홍익대학교 학식알리미 셰프 홍]\n\n[Chatterbox]: https://github.com/JungWinter/chatterbox\n[license]: https://img.shields.io/badge/license-MIT-blue.svg\n[pypi]: https://img.shields.io/pypi/v/chatterbox.py.svg\n[pyversions]: https://img.shields.io/pypi/pyversions/chatterbox.py.svg\n[travis]: https://travis-ci.org/JungWinter/chatterbox.svg\n[appveyor]: https://ci.appveyor.com/api/projects/status/ispy5kkm050m0ka5?svg=true\n[codecov]: https://codecov.io/gh/JungWinter/chatterbox/branch/master/graph/badge.svg\n[카카오톡 플러스친구 자동응답 API]: https://github.com/plusfriend/auto_reply\n[examples]: https://github.com/JungWinter/chatterbox/blob/master/examples\n[FSM(finite-state machine)]: https://ko.wikipedia.org/wiki/유한_상태_기계\n[카카오톡 자동응답 api 명세]: https://github.com/plusfriend/auto_reply#specification-1\n[카카오톡 response object 명세]: https://github.com/plusfriend/auto_reply/blob/master/README.md#6-object\n[Keyboard object 문서]: https://github.com/plusfriend/auto_reply/blob/master/README.md#61-keyboard\n[examples/flask_advance.py]: https://github.com/JungWinter/chatterbox/blob/master/examples/flask/flask_advance.py\n[CONTRIBUTING.md]: https://github.com/JungWinter/chatterbox/blob/master/.github/CONTRIBUTING.md\n[홍익대학교 학식알리미 셰프 홍]: https://github.com/JungWinter/chef-hong\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/JungWinter/chatterbox",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "chatterbox.py",
    "package_url": "https://pypi.org/project/chatterbox.py/",
    "platform": "",
    "project_url": "https://pypi.org/project/chatterbox.py/",
    "project_urls": {
      "Homepage": "https://github.com/JungWinter/chatterbox"
    },
    "release_url": "https://pypi.org/project/chatterbox.py/0.2.5/",
    "requires_dist": null,
    "requires_python": ">=3.4",
    "summary": "Python library for Kakaotalk chatbot",
    "version": "0.2.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4107299,
  "releases": {
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a6bc425da24200ec174de10e3cee7a3a416f971e26a4e0b784e944c4cc3c9bb",
          "md5": "aac9330fc6004eb35dcb179248b382ed",
          "sha256": "e4ecaae051a1d9e05ad9898fdc08d161c4fde5857624c791e12db7f117ea6bf2"
        },
        "downloads": -1,
        "filename": "chatterbox.py-0.2.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "aac9330fc6004eb35dcb179248b382ed",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.4.0",
        "size": 7811,
        "upload_time": "2018-03-16T06:48:33",
        "upload_time_iso_8601": "2018-03-16T06:48:33.041783Z",
        "url": "https://files.pythonhosted.org/packages/8a/6b/c425da24200ec174de10e3cee7a3a416f971e26a4e0b784e944c4cc3c9bb/chatterbox.py-0.2.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "71170a4851ea7b8d2d02f2f8c3cdedf19e2b1fbd8ec721ef3bcc620e13c3f9ce",
          "md5": "3037cc158f1014432c7b048cad2ab94e",
          "sha256": "a3b12f6f51d7a54c5a4188a7706e385286a9e60bd67fd7f5eabaf1fe838a80df"
        },
        "downloads": -1,
        "filename": "chatterbox.py-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "3037cc158f1014432c7b048cad2ab94e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4.0",
        "size": 8876,
        "upload_time": "2018-03-16T06:48:34",
        "upload_time_iso_8601": "2018-03-16T06:48:34.636319Z",
        "url": "https://files.pythonhosted.org/packages/71/17/0a4851ea7b8d2d02f2f8c3cdedf19e2b1fbd8ec721ef3bcc620e13c3f9ce/chatterbox.py-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bab47b30e508b54bc5eb215ae4ad6c4053629f4ca18d6a01d3ebf8facaee6ac6",
          "md5": "0c0155964cbd0cb916c445ff1204cbb8",
          "sha256": "30691625f35e3df8806739c52c074ae8016be49e18837a183a699b3f03cced7a"
        },
        "downloads": -1,
        "filename": "chatterbox.py-0.2.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0c0155964cbd0cb916c445ff1204cbb8",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.4",
        "size": 7542,
        "upload_time": "2018-03-25T02:01:03",
        "upload_time_iso_8601": "2018-03-25T02:01:03.852021Z",
        "url": "https://files.pythonhosted.org/packages/ba/b4/7b30e508b54bc5eb215ae4ad6c4053629f4ca18d6a01d3ebf8facaee6ac6/chatterbox.py-0.2.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c25c0e40ac0dee8f8fc2491376449cc110b5e0f5af8d43f2a2a1e9d5f93752b8",
          "md5": "f0223ec9d8d03855d65475219aeeaa0c",
          "sha256": "0f0533403f20c527780114c8bec601b9a736b024117ab40081f1aa1a2f4a64ea"
        },
        "downloads": -1,
        "filename": "chatterbox.py-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "f0223ec9d8d03855d65475219aeeaa0c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 8756,
        "upload_time": "2018-03-25T02:01:05",
        "upload_time_iso_8601": "2018-03-25T02:01:05.271561Z",
        "url": "https://files.pythonhosted.org/packages/c2/5c/0e40ac0dee8f8fc2491376449cc110b5e0f5af8d43f2a2a1e9d5f93752b8/chatterbox.py-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4b7667e5d327ca4e284181291d95fc5212b2edb211775d9ca4bdfaa377107d4e",
          "md5": "ca8928c4c2a946ebe005272a61d2707a",
          "sha256": "760c27f18907be0ab3dd0531195f24ecaf763cde9cb425f9cbcfc5b78a5407e7"
        },
        "downloads": -1,
        "filename": "chatterbox.py-0.2.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ca8928c4c2a946ebe005272a61d2707a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.4",
        "size": 7550,
        "upload_time": "2018-03-25T03:34:49",
        "upload_time_iso_8601": "2018-03-25T03:34:49.784296Z",
        "url": "https://files.pythonhosted.org/packages/4b/76/67e5d327ca4e284181291d95fc5212b2edb211775d9ca4bdfaa377107d4e/chatterbox.py-0.2.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc5a216a7210bd48d56872758e1f888ce3b0dac528bd1b306a735b7e6bc5302f",
          "md5": "688ac726052e763745a22c55ccf92c9f",
          "sha256": "db6096b0a14a0840bc420bb90d277453e0c748b35276693353b7fe29a00ff4c5"
        },
        "downloads": -1,
        "filename": "chatterbox.py-0.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "688ac726052e763745a22c55ccf92c9f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 8796,
        "upload_time": "2018-03-25T03:34:51",
        "upload_time_iso_8601": "2018-03-25T03:34:51.358258Z",
        "url": "https://files.pythonhosted.org/packages/dc/5a/216a7210bd48d56872758e1f888ce3b0dac528bd1b306a735b7e6bc5302f/chatterbox.py-0.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0e179dd2c844374a7523c0ca1102c5f3ec9b9aaf100b24b352ff6b6e0edc1f6b",
          "md5": "8a5fb9bc15ab13fbb2dff654e8cd2f27",
          "sha256": "03fddd7f3199653ebed60debcbf5074f90baeae7682d0fc4eab54e866e38fe6d"
        },
        "downloads": -1,
        "filename": "chatterbox.py-0.2.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8a5fb9bc15ab13fbb2dff654e8cd2f27",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.4",
        "size": 10209,
        "upload_time": "2018-07-27T04:37:16",
        "upload_time_iso_8601": "2018-07-27T04:37:16.587787Z",
        "url": "https://files.pythonhosted.org/packages/0e/17/9dd2c844374a7523c0ca1102c5f3ec9b9aaf100b24b352ff6b6e0edc1f6b/chatterbox.py-0.2.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "97657880e825663ee378e529069856005807a51fe633690dc9b28441d8c5dad5",
          "md5": "94370939edd4ad6d83a0136f91f5df8f",
          "sha256": "170e6968eba53eeebc217e9e7c5e0219dded3193b499bc0ee806b9f6eff5da0a"
        },
        "downloads": -1,
        "filename": "chatterbox.py-0.2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "94370939edd4ad6d83a0136f91f5df8f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 14202,
        "upload_time": "2018-07-27T04:37:18",
        "upload_time_iso_8601": "2018-07-27T04:37:18.108358Z",
        "url": "https://files.pythonhosted.org/packages/97/65/7880e825663ee378e529069856005807a51fe633690dc9b28441d8c5dad5/chatterbox.py-0.2.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0e179dd2c844374a7523c0ca1102c5f3ec9b9aaf100b24b352ff6b6e0edc1f6b",
        "md5": "8a5fb9bc15ab13fbb2dff654e8cd2f27",
        "sha256": "03fddd7f3199653ebed60debcbf5074f90baeae7682d0fc4eab54e866e38fe6d"
      },
      "downloads": -1,
      "filename": "chatterbox.py-0.2.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8a5fb9bc15ab13fbb2dff654e8cd2f27",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.4",
      "size": 10209,
      "upload_time": "2018-07-27T04:37:16",
      "upload_time_iso_8601": "2018-07-27T04:37:16.587787Z",
      "url": "https://files.pythonhosted.org/packages/0e/17/9dd2c844374a7523c0ca1102c5f3ec9b9aaf100b24b352ff6b6e0edc1f6b/chatterbox.py-0.2.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "97657880e825663ee378e529069856005807a51fe633690dc9b28441d8c5dad5",
        "md5": "94370939edd4ad6d83a0136f91f5df8f",
        "sha256": "170e6968eba53eeebc217e9e7c5e0219dded3193b499bc0ee806b9f6eff5da0a"
      },
      "downloads": -1,
      "filename": "chatterbox.py-0.2.5.tar.gz",
      "has_sig": false,
      "md5_digest": "94370939edd4ad6d83a0136f91f5df8f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.4",
      "size": 14202,
      "upload_time": "2018-07-27T04:37:18",
      "upload_time_iso_8601": "2018-07-27T04:37:18.108358Z",
      "url": "https://files.pythonhosted.org/packages/97/65/7880e825663ee378e529069856005807a51fe633690dc9b28441d8c5dad5/chatterbox.py-0.2.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}