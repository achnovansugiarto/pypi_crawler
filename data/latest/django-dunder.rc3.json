{
  "info": {
    "author": "John Mark Vandenberg",
    "author_email": "jayvdb@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# django-dunder\n\ndjango-dunder is an installable app to automatically provide customisable\n`__repr__` and `__str__` for other Django third-party installable apps\nand for project apps.\n\nOn Python 3, it can use `__unicode__` if present and `__str__` is missing,\nsuch as apps that work on Python 3, but havent been fully updated.\n\nIt emits warnings whenever `__unicode__` is encountered on an active model.\nIt does this even on Python 2 when the `__unicode__`\nis identical to the `__str__`, providing custom warnings to indicate what\ncode changes are needed to finish the Python 3 port.\n\nThe motivation for this app came while consulting for\nhttps://github.com/viper-development/ , which builds apps quickly,\ndeveloping custom functionality instead of writing boilerplate code.\n\nBy default, it will detect and attach to existing models that are using\nthe default `__repr__` and `__str__`.\n\nIt can be instructed to overwrite the `__repr__` and `__str__` of specific\nmodels, useful if the model has dedicated methods, but the output is not\ndesirable.\n\nIt will look for primary and unique keys, in an attempt to show the minimum\nnecessary for the user to recognise the record.\n\n*Note*: On Python 2, it will add a `__str__` which may emit non-ascii for\nmodel instances containing Unicode values in the fields it decides to\ndisplay.  De-select any such models using the settings.  I am willing to\nreview a PR to add proper Python 2 support, but I will reject any partial\nPython 2 support.  I can be convinced to build it to my own standards,\nbut it isnt sensible to do it in 2020 without a good reason.\n\n## Install\n\n1. `pip install django-dunder`\n2. Add `django_dunder` to `INSTALLED_APPS` *before* models that need\n   dunders added.\n\nTo catch all models missing `__str__` or `__repr__`, put it at the top\nof `INSTALLED_APPS`.\n\nTo quickly see how it improves the Django admin, install\n[`django-data-browser`](https://github.com/tolomea/django-data-browser)\nin development before and after, and click its \"admin\" column on\nany model that was using the Django default string representation.\n\n## Configure\n\nTo disable unicode warnings, set `DUNDER_WARN_UNICODE = False`.\n\nFor more control, in your `settings`, toggle these \"auto\", \"force\" and\n\"exclude\" settings.\n\nTo disable the automatic attaching for one or both of `__str__` and `__repr__`,\nset one of\n\n- `DUNDER_AUTO = False`\n- `DUNDER_AUTO_REPR = False`\n- `DUNDER_AUTO_STR = False`\n- `DUNDER_COPY_UNICODE = False`\n\nTo force all models to use these methods, use `DUNDER_FORCE = True`, or\nset `DUNDER_FORCE_REPR` or `DUNDER_FORCE_STR` to `True`.\n\nTo force specific models only, `DUNDER_FORCE_REPR` and `DUNDER_FORCE_STR`\nmay be defined as a list of model labels, e.g. `auth.User`.\n\nWhen using either auto or force modes, specific models can be excluded\nby providing a list of model labels to the exclude settings:\n\n```py\nDUNDER_REPR_EXCLUDE = ['auth.User']\nDUNDER_STR_EXCLUDE = ['myapp.Person']\n```\n\n*Note* When the copying of `__unicode__` is disabled on Python 3, and the\nDjango setting `DEBUG` is also disabled, this app will raise\n`ImproperlyConfigured` if it finds a `__unicode__`, as it assumes the app\nintended for the `__unicode__` to be used, and running in production with\nthe default Django `__str__` would result in incorrect behaviour.\nTo disable this, re-enable copying of the unicode, or set\n\n- `DUNDER_REJECT_UNICODE = False`\n\nThere is also a Django [check](https://docs.djangoproject.com/en/3.0/topics/checks/)\nfor inactive custom `__unicode__`, which runs seperately from the model\nregistration process, so it is safer to use.  It defaults to emit errors,\nhowever it can be set to emit errors, or disabled by setting it to `False`.\n\n- `DUNDER_CHECK_INACTIVE_UNICODE = 'warn'`\n\n### Formatting\n\nThe default formatting of `__str__` and `__repr__` given below can be modified\nglobally in the settings.\n\n- `DUNDER_REPR_ATTR_FMT = '{name}={value!r}'`\n- `DUNDER_REPR_FMT = '{}({})'`\n\n- `DUNDER_STR_ATTR_FMT = '{name}={value}'`\n- `DUNDER_STR_FMT = '<{}: {}>'`\n\nIn addition to standard Python string Formatter syntax, some experimental magic\nbehind the scenes allows the chaining together of attribute modifiers.\nThis is only active for the two attribute formatters.  Methods of types are\ntransparently invoked, and as are builtins.\n\ne.g. `DUNDER_STR_ATTR_FMT = '{name}={value.round__title}'` will apply\nround up numbers and apply title case to strings.\n\nIn addition, there is one extra modifier `ellipsis` that can be used to truncate\nlong text fields, appending an `...` ellipsis.  It defaults to 100 characters.\n\ne.g. `DUNDER_STR_ATTR_FMT = '{name}={value.round__ellipsis_20}'` will apply\nround up numbers and shorten strings to at most 20 characters.\n\nOn CPython, it is possible to add methods to core types using the `forbiddenfruit`\nlibrary.  For example, if [`datatype-tools`](https://github.com/edmundpf/datatype_tools)\nis installed as directed, with imports in `settings.py` or some other early\nloading Django code, use `()` syntax to use method names containing a `_`.\n\n- `DUNDER_STR_ATTR_FMT = '{name}={value.round__ellipsis_20__format_date()}'`\n\nWhen installing custom methods for core types from libraries, be aware they\noften reuse existing core methods or builtin names.\nIn the case of `datatype-tools`, it provides a `float.round()` which uses\ntwo significant places by default while `round(float)` has zero as default.\n\nWhen building custom methods for core types, avoid using method names\nwhich conflict with Python names or conflict with Django names.  Otherwise\nproblems like https://github.com/havocesp/typext/issues/1 arise.\n\nWant more?  If you can find the experimental magic, extend it and activate with:\n\n- `DUNDER_WRAPPER_CLASS = 'your_magic.Wrapper'`\n\nAnd please submit PRs to add your magic here for others to use.\n\n## Explicit fields\n\nTo show specific fields in either `str()` or `repr()`, two extra\n[model meta options](https://docs.djangoproject.com/en/dev/ref/models/options)\nare automatically added by django-dunder:\n\n```py\nfrom django.db import models\n\nclass MyModel(models.Model):\n    uuid = models.TextField()\n    first_name = models.TextField()\n    last_name = models.TextField()\n    ...\n\n    Meta:\n        str_fields = ('first_name', 'last_name')\n        repr_fields = ('uuid', )\n```\n\n## Explicit mixins\n\nAlternatively disable auto mode (`DUNDER_AUTO = False`), and use the\nmixins, and set the :\n\n```py\nfrom django_dunder.mixins import DunderModel\n\nclass MyModel(DunderModel):\n    first_name = models.TextField()\n    last_name = models.TextField()\n    ...\n\n    Meta:\n        repr_fields = ('first_name', 'last_name')\n```\n\nAdding Meta options can cause exceptions if django-dunders is removed\nfrom `INSTALLED_APPS`.\n\nTo avoid that, use [djsommo](https://github.com/jayvdb/djsommo)\n\n## Extending to other types\n\nIt should be possible to apply the functionality here to types other than\nDjango models and instances.  Some other way of identifying the appropriate\nclasses to patch is need, perhaps with additional configuration.\n\nThe ultimate solution for CPython-only would be if\n[its type dunders could be 'curse'd](https://github.com/clarete/forbiddenfruit/issues/11),\nespecially if `object.__str__` and `object.__repr__` could be replaced.\n\n## Alternatives\n\ndjango-dunder is especially useful when a project uses third-party apps\nthat do not provide these dunder methods that are suitable for the project.\nIn fact, several `django.contrib` models do not provide these dunder methods.\n\nInspiration was drawn from\n- [django-model-repr](https://github.com/relip/django-model-repr)\n- [django-auto-repr](https://github.com/dan-passaro/django-auto-repr)\n\nThey may be sufficient for some projects.\n\nIf that is not relevant, and if the project is using sentry, and the project\nonly wants a sane `__repr__`, incorporate the decorator in\n[`sentry.db.models`](https://github.com/getsentry/sentry/blob/master/src/sentry/db/models/base.py)\ninto a base mixin model used throughout the project.\n\nStarting a new project, and only interested in your own models?\n[pydantic](https://github.com/samuelcolvin/pydantic) provides default and customisable\ndunders, and\n[django-ninja](https://github.com/vitalik/django-ninja) provides a Django REST\ninterface on top, and there are lots of other tools layered on top of pydantic, like\n[pydantic-ui](https://github.com/prismaticd/pydantic-ui) providing a Django Admin-like\ninterface.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/jayvdb/django-dunder",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-dunder",
    "package_url": "https://pypi.org/project/django-dunder/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-dunder/",
    "project_urls": {
      "Homepage": "http://github.com/jayvdb/django-dunder"
    },
    "release_url": "https://pypi.org/project/django-dunder/0.3.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Reusable Django app to automate dunders `__repr__` and `__str__`",
    "version": "0.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7566250,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "06ab30c2a8c7b665390d8bc5c1e211252d614d9d491bce0137e96e8bfc34eaa7",
          "md5": "ce93a212eccd3f8895c182ac1f88604c",
          "sha256": "2467242a8f9951f8ea0f79eb32383140a98aa58102f10f05815c356d43ed37fb"
        },
        "downloads": -1,
        "filename": "django_dunder-0.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ce93a212eccd3f8895c182ac1f88604c",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 10251,
        "upload_time": "2020-06-17T16:29:35",
        "upload_time_iso_8601": "2020-06-17T16:29:35.950700Z",
        "url": "https://files.pythonhosted.org/packages/06/ab/30c2a8c7b665390d8bc5c1e211252d614d9d491bce0137e96e8bfc34eaa7/django_dunder-0.2.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "27d4646e9123b978fdc3ad3b4c12eb628ddff9e83de25836a7d663925e60cd04",
          "md5": "fa77143417a25a6874985cff9354cfa9",
          "sha256": "f054143fa1b2813f222d22a3be8ff1d0ddfa136f0d984d476b8f7e68bb446414"
        },
        "downloads": -1,
        "filename": "django-dunder-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fa77143417a25a6874985cff9354cfa9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11368,
        "upload_time": "2020-06-17T16:29:38",
        "upload_time_iso_8601": "2020-06-17T16:29:38.399468Z",
        "url": "https://files.pythonhosted.org/packages/27/d4/646e9123b978fdc3ad3b4c12eb628ddff9e83de25836a7d663925e60cd04/django-dunder-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b192b0fe89919147a0bf3cd46a22bbd564375a0ebad2a61c87bb7ec975ead694",
          "md5": "096a29dbdb054f1fffc7c073e945ba10",
          "sha256": "ff12aad282c097bcd0527a83bab3c6dd9276e5f450d8d974d19c07cc9148a616"
        },
        "downloads": -1,
        "filename": "django_dunder-0.2.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "096a29dbdb054f1fffc7c073e945ba10",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 10215,
        "upload_time": "2020-06-18T04:52:03",
        "upload_time_iso_8601": "2020-06-18T04:52:03.143307Z",
        "url": "https://files.pythonhosted.org/packages/b1/92/b0fe89919147a0bf3cd46a22bbd564375a0ebad2a61c87bb7ec975ead694/django_dunder-0.2.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0bd25bafb5b5e26d142d76a46c0d5063ccd7b82e285ebdec4a966887e1ef35cf",
          "md5": "21f2d2b8d78a77ba67180a235bc7c573",
          "sha256": "ee93c5f2774e41f4a3f8f8c8ca0b3ea4aa956d2a3e5379786ee7c797285768e7"
        },
        "downloads": -1,
        "filename": "django-dunder-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "21f2d2b8d78a77ba67180a235bc7c573",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11428,
        "upload_time": "2020-06-18T04:52:05",
        "upload_time_iso_8601": "2020-06-18T04:52:05.136957Z",
        "url": "https://files.pythonhosted.org/packages/0b/d2/5bafb5b5e26d142d76a46c0d5063ccd7b82e285ebdec4a966887e1ef35cf/django-dunder-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "168c112651eefd0389d754735d275888dd48d5d525fc25ecd9ad791cebcee7f4",
          "md5": "81bca86028f697c1350f9e27557a81e2",
          "sha256": "e5a92cc7fd287d81dc93e703b19eff14ff03f52d1c563ada92905add33606600"
        },
        "downloads": -1,
        "filename": "django_dunder-0.3.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "81bca86028f697c1350f9e27557a81e2",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 19867,
        "upload_time": "2020-06-26T04:23:18",
        "upload_time_iso_8601": "2020-06-26T04:23:18.048206Z",
        "url": "https://files.pythonhosted.org/packages/16/8c/112651eefd0389d754735d275888dd48d5d525fc25ecd9ad791cebcee7f4/django_dunder-0.3.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5eb20791fad939a8e47cecb86086d8758edb307fca5249c59d948264890562da",
          "md5": "582da52f3350ab3a661c2869dffcfb97",
          "sha256": "e0bc053a7a98016afe200a2c7d5cde6a45045f76d1f1120174c4add5d43fea48"
        },
        "downloads": -1,
        "filename": "django-dunder-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "582da52f3350ab3a661c2869dffcfb97",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 22071,
        "upload_time": "2020-06-26T04:23:19",
        "upload_time_iso_8601": "2020-06-26T04:23:19.597944Z",
        "url": "https://files.pythonhosted.org/packages/5e/b2/0791fad939a8e47cecb86086d8758edb307fca5249c59d948264890562da/django-dunder-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "168c112651eefd0389d754735d275888dd48d5d525fc25ecd9ad791cebcee7f4",
        "md5": "81bca86028f697c1350f9e27557a81e2",
        "sha256": "e5a92cc7fd287d81dc93e703b19eff14ff03f52d1c563ada92905add33606600"
      },
      "downloads": -1,
      "filename": "django_dunder-0.3.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "81bca86028f697c1350f9e27557a81e2",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 19867,
      "upload_time": "2020-06-26T04:23:18",
      "upload_time_iso_8601": "2020-06-26T04:23:18.048206Z",
      "url": "https://files.pythonhosted.org/packages/16/8c/112651eefd0389d754735d275888dd48d5d525fc25ecd9ad791cebcee7f4/django_dunder-0.3.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5eb20791fad939a8e47cecb86086d8758edb307fca5249c59d948264890562da",
        "md5": "582da52f3350ab3a661c2869dffcfb97",
        "sha256": "e0bc053a7a98016afe200a2c7d5cde6a45045f76d1f1120174c4add5d43fea48"
      },
      "downloads": -1,
      "filename": "django-dunder-0.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "582da52f3350ab3a661c2869dffcfb97",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 22071,
      "upload_time": "2020-06-26T04:23:19",
      "upload_time_iso_8601": "2020-06-26T04:23:19.597944Z",
      "url": "https://files.pythonhosted.org/packages/5e/b2/0791fad939a8e47cecb86086d8758edb307fca5249c59d948264890562da/django-dunder-0.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}