{
  "info": {
    "author": "Markus Weber",
    "author_email": "markus.weber@wacom.com",
    "bugtrack_url": null,
    "classifiers": [
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# Wacom Personal Knowledge Library\n\nThe library and the cloud services are still under development. \nThe required access tokens are only available for selected partner companies.\n\n> :warning:  Its is still under development, so **we do not recommend using it yet for production environments**. Moreover, it is not following any formal QA and release process, yet. :fire:\n\n## Introduction\n\nIn knowledge management there is a distinction between data, information and knowledge.\nIn the domain of digital ink this means:\n\n- **Data** - The equivalent would be the ink strokes\n- **Information** - After using handwriting-, shape-, math-, or other recognition processes ink strokes are converted into machine readable content, such as text, shapes, math representations, other other digital content\n- **Knowledge / Semantics** -  Beyond recognition content needs to be semantically analysed to become semantically understood based on a shared common knowledge.\n\nThe following illustration shows the different layers of knowledge:\n![Levels of ink knowledge layers](https://github.com/Wacom-Developer/personal-knowledge-library/blob/main/assets/knowledge-levels.png)\n\nFor handling semantics, Wacom introduced the Wacom Personal Knowledge (WPK) cloud service to manage personal ontologies and its associated personal knowledge graph.\n\nThis library provide simplified access to Wacom's personal knowledge cloud service.\nIt contains:\n\n- Basic datastructures for Ontology object and entities from the knowledge graph\n- Clients for the REST APIs\n- Connector for Wikidata public knowledge graph\n\n**Ontology service:**\n\n- List all Ontology structures\n- Modify Ontology structures\n- Delete Ontology structures\n\n**Entity service:**\n\n- List all entities\n- Add entities to knowledge graph\n- Access object properties\n\n# Technology stack\n\n## Domain Knowledge\n\nThe tasks of the ontology within Wacom's personal knowledge system is to formalised the domain the technology is used in, such as education-, smart home-, or creative domein.\nThe domain model will be the foundation for the entities collected within the knowledge graph, describing real world concepts in a formal language understood by artificial intelligence system:\n\n- Foundation for structured data, knowledge representation as concepts and relations among concepts\n- Being explicit definitions of shared vocabularies for interoperability\n- Being actionable fragments of explicit knowledge that engines can use for inferencing (Reasoning)\n- Can be used for problem solving\n\nAn ontology defines (specifies) the concepts, relationships, and other distinctions that are relevant for modelling a domain.\n\n## Knowledge Graph\n\n- Knowledge graph is generated from unstructured and structured knowledge sources\n- Contains all structured knowledge gathered from all sources\n- Foundation for all semantic algorithms\n\n## Semantic Technology\n\n- Extract knowledge from various sources (Connectors)\n- Linking words to knowledge entities from graph in a given text (Ontology-based Named Entity Linking)\n- Enables a smart search functionality which understands the context and finds related documents (Semantic Search)\n\n\n# Functionality\n\n## Access API\n\nThe personal knowledge graph backend is implement as a multi-tenancy system.\nThus, several tenants can be logically separated from each other and different organisations can build their one knowledge graph.\n\n![Tenant concept](https://github.com/Wacom-Developer/personal-knowledge-library/blob/main/assets/tenant-concept.png)\n\nIn general, a tenant with their users, groups, and entities are logically separated.\nPhysically the entities are store in the same instance of the Wacom Personal Knowledge (WPK) backend database system.\n\nThe user management is rather limited, each organisation must provide their own authentication service and user management.\nThe backend only has a reference of the user (*“shadow user”*) by an **external user id**.\n\nThe management of tenants is limited to the system owner - Wacom -, as it requires a **tenant management API** key.\nWhile users for each tenant can be created by the owner of the **Tenant API Key**.\nYou will receive this token from the system owner after the creation of the tenant.\n\n\n> :warning: Store the **Tenant API Key** in a secure key store, as attackers can use the key to harm your system.\n\n\nThe **Tenant API Key** should be only used by your authentication service to create shadow users and to login your user into the WPK backend.\nAfter a successful user login, you will receive a token which can be used by the user to create, update, or delete entities and relations.\n\nThe following illustration summarizes the flows for creation of tenant and users:\n\n![Tenant and user creation](https://github.com/Wacom-Developer/personal-knowledge-library/blob/main/assets/tenant-user-creation.png)\n\nThe organisation itself needs to implement their own authentication service which:\n\n- handles the users and their passwords,\n- controls the personal data of the users,\n- connects the users with the WPK backend and share with them the user token.\n\nThe WPK backend only manages the access levels of the entities and the group management for users.\nThe illustration shows how the access token is received from the WPK endpoint:\n\n![Access token request.](https://github.com/Wacom-Developer/personal-knowledge-library/blob/main/assets/access-token.png)\n\n# Entity API\n\nThe entities used within the knowledge graph and the relationship among them is defined within an ontology that is manage with Wacom Ontology Management System (WOMS).\n\nAn entity within the personal knowledge graphs consist of these major parts:\n\n- **Icon** - a visual representation of the entity, for instance a portrait of a person.\n- **URI** - a unique resource identifier of an entity in the graph.\n- **Type** - the type links to the defined concept class in the ontology.\n- **Labels** - labels are the word(s) use in a language for the concept.\n- **Description** - a short abstract that describes the entity.\n- **Literals** - literals are properties of an entity, such as first name of a person. The ontology defines all literals of the concept class as well as its data type.\n- **Relations** - the relationship among different entities is described using relations.\n\nThe following illustration provides an example for an entity:\n\n![Entity description](https://github.com/Wacom-Developer/personal-knowledge-library/blob/main/assets/entity-description.png)\n\n## Entity content\n\nEntities in general are language-independent as across nationalities or cultures we only use different scripts and words for a shared instance of a concept.\n\nLet's take Leonardo da Vinci as an example.\nThe ontology defines the concept of a Person, a human being.\nNow, in English its label would be _Leonardo da Vinci_, while in Japanese _レオナルド・ダ・ヴィンチ_.\nMoreover, he is also known as _Leonardo di ser Piero da Vinci_ or _ダ・ビンチ_.\n\n### Labels\n\nNow, in the given example all words that a assigned to the concept are labels.\nThe label _Leonardo da Vinci_ is stored in the backend with an additional language code, e.g. _en_.\n\nThere is always a main label, which refers to the most common or official name of entity.\nAnother example would be Wacom, where _Wacom Co., Ltd._ is the official name while _Wacom_ is commonly used and be considered as an alias.\n\n>  :pushpin: For the language code the **ISO 639-1:2002**, codes for the representation of names of languages—Part 1: Alpha-2 code. Read more, [here](https://www.iso.org/standard/22109.html)\n\n## Samples\n\n### Entity handling\n\nThis samples shows how to work with graph service.\n\n```python\nimport argparse\nfrom typing import Optional, List, Dict\n\nfrom knowledge.base.entity import LanguageCode, Description, Label\nfrom knowledge.base.ontology import OntologyClassReference, OntologyPropertyReference, ThingObject, ObjectProperty\nfrom knowledge.services.graph import WacomKnowledgeService\n\n# ------------------------------- Knowledge entities -------------------------------------------------------------------\nLEONARDO_DA_VINCI: str = 'Leonardo da Vinci'\nSELF_PORTRAIT_STYLE: str = 'self-portrait'\nICON: str = \"https://upload.wikimedia.org/wikipedia/commons/thumb/8/87/Mona_Lisa_%28copy%2C_Thalwil%2C_Switzerland%29.\"\\\n            \"JPG/1024px-Mona_Lisa_%28copy%2C_Thalwil%2C_Switzerland%29.JPG\"\n# ------------------------------- Ontology class names -----------------------------------------------------------------\nTHING_OBJECT: OntologyClassReference = OntologyClassReference('wacom', 'core', 'Thing')\n\"\"\"\nThe Ontology will contain a Thing class where is the root class in the hierarchy. \n\"\"\"\nARTWORK_CLASS: OntologyClassReference = OntologyClassReference('wacom', 'creative', 'VisualArtwork')\nPERSON_CLASS: OntologyClassReference = OntologyClassReference('wacom', 'core', 'Person')\nART_STYLE_CLASS: OntologyClassReference = OntologyClassReference.parse('wacom:creative#ArtStyle')\nIS_CREATOR: OntologyPropertyReference = OntologyPropertyReference('wacom', 'core', 'created')\nHAS_TOPIC: OntologyPropertyReference = OntologyPropertyReference.parse('wacom:core#hasTopic')\nCREATED: OntologyPropertyReference = OntologyPropertyReference.parse('wacom:core#created')\nHAS_ART_STYLE: OntologyPropertyReference = OntologyPropertyReference.parse('wacom:creative#hasArtstyle')\n\n\ndef print_entity(entity: ThingObject, list_idx: int, auth_key: str, client: WacomKnowledgeService, short: bool = False):\n    \"\"\"\n    Printing entity details.\n\n    Parameters\n    ----------\n    entity: ThingObject\n        Entity with properties\n    list_idx: int\n        Index with a list\n    auth_key: str\n        Authorization key\n    client: WacomKnowledgeService\n        Knowledge graph client\n    short: bool\n        Short summary\n    \"\"\"\n    print(f'[{list_idx}] : {entity.uri} <{entity.concept_type.iri}>')\n    if len(entity.label) > 0:\n        print('    | [Labels]')\n        for la in entity.label:\n            print(f'    |     |- \"{la.content}\"@{la.language_code}')\n        print('    |')\n    if not short:\n        if len(entity.alias) > 0:\n            print('    | [Alias]')\n            for la in entity.alias:\n                print(f'    |     |- \"{la.content}\"@{la.language_code}')\n            print('    |')\n        if len(entity.data_properties) > 0:\n            print('    | [Attributes]')\n            for data_property, labels in entity.data_properties.items():\n                print(f'    |    |- {data_property.iri}:')\n                for li in labels:\n                    print(f'    |    |-- \"{li.value}\"@{li.language_code}')\n            print('    |')\n\n        relations_obj: Dict[OntologyPropertyReference, ObjectProperty] = client.relations(auth_key=auth_key,\n                                                                                          uri=entity.uri)\n        if len(relations_obj) > 0:\n            print('    | [Relations]')\n            for re in relations_obj.values():\n                print(f'    |--- {re.relation.iri}: ')\n                print(f'           |- [Incoming]: {re.incoming_relations} ')\n                print(f'           |- [Outgoing]: {re.outgoing_relations}')\n        print()\n\n\nif __name__ == '__main__':\n    parser = argparse.ArgumentParser()\n    parser.add_argument(\"-u\", \"--user\", help=\"External Id of the shadow user within the Wacom Personal Knowledge.\",\n                        required=True)\n    parser.add_argument(\"-t\", \"--tenant\", help=\"Tenant Id of the shadow user within the Wacom Personal Knowledge.\",\n                        required=True)\n    parser.add_argument(\"-i\", \"--instance\", default='https://stage-private-knowledge.wacom.com',\n                        help=\"URL of instance\")\n    args = parser.parse_args()\n    TENANT_KEY: str = args.tenant\n    EXTERNAL_USER_ID: str = args.user\n    # Wacom personal knowledge REST API Client\n    knowledge_client: WacomKnowledgeService = WacomKnowledgeService(application_name=\"Wacom Knowledge Listing\",\n                                                                    service_url=args.instance)\n    # Use special tenant for testing:  Unit-test tenant\n    user_token, refresh_token, expiration_time = knowledge_client.request_user_token(TENANT_KEY, EXTERNAL_USER_ID)\n    page_id: Optional[str] = None\n    page_number: int = 1\n    entity_count: int = 0\n    print('-----------------------------------------------------------------------------------------------------------')\n    print(' First step: Find Leonardo da Vinci in the knowledge graph.')\n    print('-----------------------------------------------------------------------------------------------------------')\n    res_entities, next_search_page = knowledge_client.search_labels(auth_key=user_token, search_term=LEONARDO_DA_VINCI,\n                                                                    language_code=LanguageCode('en_US'), limit=1000)\n    leo: Optional[ThingObject] = None\n    s_idx: int = 1\n    for entity in res_entities:\n        #  Entity must be a person and the label match with full string\n        if entity.concept_type == PERSON_CLASS and LEONARDO_DA_VINCI in [l.content for l in entity.label]:\n            leo = entity\n            break\n\n    print('-----------------------------------------------------------------------------------------------------------')\n    print(' What artwork exists in the knowledge graph.')\n    print('-----------------------------------------------------------------------------------------------------------')\n    relations_dict: Dict[OntologyPropertyReference, ObjectProperty] = knowledge_client.relations(auth_key=user_token,\n                                                                                                 uri=leo.uri)\n    print(f' Artwork of {leo.label}')\n    print('-----------------------------------------------------------------------------------------------------------')\n    idx: int = 1\n    if CREATED in relations_dict:\n        for e in relations_dict[CREATED].outgoing_relations:\n            print(f' [{idx}] {e.uri}: {e.label}')\n            idx += 1\n    print('-----------------------------------------------------------------------------------------------------------')\n    print(' Let us create a new piece of artwork.')\n    print('-----------------------------------------------------------------------------------------------------------')\n\n    # Main labels for entity\n    artwork_labels: List[Label] = [\n        Label('Ginevra Gherardini', LanguageCode('en_US')),\n        Label('Ginevra Gherardini', LanguageCode('de_DE'))\n    ]\n    # Alias labels for entity\n    artwork_alias: List[Label] = [\n        Label(\"Ginevra\", LanguageCode('en_US')),\n        Label(\"Ginevra\", LanguageCode('de_DE'))\n    ]\n    # Topic description\n    artwork_description: List[Description] = [\n        Description('Oil painting of Mona Lisa\\' sister', LanguageCode('en_US')),\n        Description('Ölgemälde von Mona Lisa\\' Schwester', LanguageCode('de_DE'))\n    ]\n    # Topic\n    artwork_object: ThingObject = ThingObject(label=artwork_labels, concept_type=ARTWORK_CLASS,\n                                              description=artwork_description,\n                                              icon=ICON)\n    artwork_object.alias = artwork_alias\n    print(f' Create: {artwork_object}')\n    # Create artwork\n    artwork_entity_uri: str = knowledge_client.create_entity(user_token, artwork_object)\n    print(f' Entity URI: {artwork_entity_uri}')\n    # Create relation between Leonardo da Vinci and artwork\n    knowledge_client.create_relation(auth_key=user_token, source=leo.uri, relation=IS_CREATOR,\n                                     target=artwork_entity_uri)\n\n    relations_dict = knowledge_client.relations(auth_key=user_token, uri=artwork_entity_uri)\n    for ontology_property, object_property in relations_dict.items():\n        print(f'  {object_property}')\n    # You will see that wacom:core#isCreatedBy is automatically inferred as relation as it is the inverse property of\n    # wacom:core#created.\n\n    # Now, more search options\n    res_entities, next_search_page = knowledge_client.search_description(user_token, 'Michelangelo\\'s Sistine Chapel',\n                                                                         LanguageCode('en_US'), limit=1000)\n    print('-----------------------------------------------------------------------------------------------------------')\n    print(' Search results.  Description: \"Michelangelo\\'s Sistine Chapel\"')\n    print('-----------------------------------------------------------------------------------------------------------')\n    s_idx: int = 1\n    for e in res_entities:\n        print_entity(e, s_idx, user_token, knowledge_client)\n\n    # Now, let's search all artwork that has the art style self-portrait\n    res_entities, next_search_page = knowledge_client.search_labels(auth_key=user_token,\n                                                                    search_term=SELF_PORTRAIT_STYLE,\n                                                                    language_code=LanguageCode('en_US'), limit=1000)\n    art_style: Optional[ThingObject] = None\n    s_idx: int = 1\n    for entity in res_entities:\n        #  Entity must be a person and the label match with full string\n        if entity.concept_type == ART_STYLE_CLASS and SELF_PORTRAIT_STYLE in [l.content for l in entity.label]:\n            art_style = entity\n            break\n    res_entities, next_search_page = knowledge_client.search_relation(auth_key=user_token,\n                                                                      subject_uri=None,\n                                                                      relation=HAS_ART_STYLE,\n                                                                      object_uri=art_style.uri,\n                                                                      language_code=LanguageCode('en_US'))\n    print('-----------------------------------------------------------------------------------------------------------')\n    print(' Search results.  Relation: relation:=has_topic  object_uri:= unknown')\n    print('-----------------------------------------------------------------------------------------------------------')\n    s_idx: int = 1\n    for e in res_entities:\n        print_entity(e, s_idx, user_token, knowledge_client, short=True)\n        s_idx += 1\n\n    # Finally, the activation function retrieving the related identities to a pre-defined depth.\n    entities, relations = knowledge_client.activations(auth_key=user_token,\n                                                       uris=[leo.uri],\n                                                       depth=1)\n    print('-----------------------------------------------------------------------------------------------------------')\n    print(f'Activation.  URI: {leo.uri}')\n    print('-----------------------------------------------------------------------------------------------------------')\n    s_idx: int = 1\n    for e in res_entities:\n        print_entity(e, s_idx, user_token, knowledge_client)\n        s_idx += 1\n    # All relations\n    print('-----------------------------------------------------------------------------------------------------------')\n    for r in relations:\n        print(f'Subject: {r[0]} Predicate: {r[1]} Object: {r[2]}')\n    print('-----------------------------------------------------------------------------------------------------------')\n    page_id = None\n\n    # Listing all entities which have the type\n    idx: int = 1\n    while True:\n        # pull\n        entities, total_number, next_page_id = knowledge_client.listing(user_token, ART_STYLE_CLASS, page_id=page_id,\n                                                                        limit=100)\n        pulled_entities: int = len(entities)\n        entity_count += pulled_entities\n        print('-------------------------------------------------------------------------------------------------------')\n        print(f' Page: {page_number} Number of entities: {len(entities)}  ({entity_count}/{total_number}) '\n              f'Next page id: {next_page_id}')\n        print('-------------------------------------------------------------------------------------------------------')\n        for e in entities:\n            print_entity(e, idx, user_token, knowledge_client)\n            idx += 1\n        if pulled_entities == 0:\n            break\n        page_number += 1\n        page_id = next_page_id\n    print()\n    # Delete all personal entities for this user\n    while True:\n        # pull\n        entities, total_number, next_page_id = knowledge_client.listing(user_token, THING_OBJECT, page_id=page_id,\n                                                                        limit=100)\n        pulled_entities: int = len(entities)\n        if pulled_entities == 0:\n            break\n        delete_uris: List[str] = [e.uri for e in entities]\n        print(f'Cleanup. Delete entities: {delete_uris}')\n        knowledge_client.delete_entities(auth_key=user_token, uris=delete_uris, force=True)\n        page_number += 1\n        page_id = next_page_id\n    print('-----------------------------------------------------------------------------------------------------------')\n```\n\n### Named Entity Linking \n\nPerforming Named Entity Linking (NEL) on text and Universal Ink Model.\n\n```python\nimport argparse\nfrom typing import List, Dict\n\nfrom knowledge.base.entity import LanguageCode\nfrom knowledge.base.ontology import OntologyPropertyReference, ThingObject, ObjectProperty\nfrom knowledge.nel.base import KnowledgeGraphEntity\nfrom knowledge.nel.engine import WacomEntityLinkingEngine\nfrom knowledge.services.graph import WacomKnowledgeService\n\nLANGUAGE_CODE: LanguageCode = LanguageCode(\"en_US\")\nTEXT: str = \"Leonardo da Vinci painted the Mona Lisa.\"\n\n\ndef print_entity(entity: KnowledgeGraphEntity, list_idx: int, auth_key: str, client: WacomKnowledgeService):\n    \"\"\"\n    Printing entity details.\n\n    Parameters\n    ----------\n    entity: KnowledgeGraphEntity\n        Named entity\n    list_idx: int\n        Index with a list\n    auth_key: str\n        Authorization key\n    client: WacomKnowledgeService\n        Knowledge graph client\n    \"\"\"\n    thing: ThingObject = knowledge_client.entity(auth_key=user_token, uri=entity.entity_source.uri)\n    print(f'[{list_idx}] - {e.ref_text} [{e.start_idx}-{e.end_idx}] : {thing.uri} <{thing.concept_type.iri}>')\n    if len(thing.label) > 0:\n        print('    | [Labels]')\n        for la in thing.label:\n            print(f'    |     |- \"{la.content}\"@{la.language_code}')\n        print('    |')\n    if len(thing.label) > 0:\n        print('    | [Alias]')\n        for la in thing.alias:\n            print(f'    |     |- \"{la.content}\"@{la.language_code}')\n        print('    |')\n    relations: Dict[OntologyPropertyReference, ObjectProperty] = client.relations(auth_key=auth_key, uri=thing.uri)\n    if len(thing.data_properties) > 0:\n        print('    | [Attributes]')\n        for data_property, labels in thing.data_properties.items():\n            print(f'    |    |- {data_property.iri}:')\n            for li in labels:\n                print(f'    |    |-- \"{li.value}\"@{li.language_code}')\n        print('    |')\n    if len(relations) > 0:\n        print('    | [Relations]')\n        for re in relations.values():\n            print(f'    |--- {re.relation.iri}: ')\n            print(f'           |- [Incoming]: {re.incoming_relations} ')\n            print(f'           |- [Outgoing]: {re.outgoing_relations}')\n    print()\n\n\nif __name__ == '__main__':\n    parser = argparse.ArgumentParser()\n    parser.add_argument(\"-u\", \"--user\", help=\"External Id of the shadow user within the Wacom Personal Knowledge.\",\n                        required=True)\n    parser.add_argument(\"-t\", \"--tenant\", help=\"Tenant Id of the shadow user within the Wacom Personal Knowledge.\",\n                        required=True)\n    parser.add_argument(\"-i\", \"--instance\", default=\"https://stage-private-knowledge.wacom.com\", help=\"URL of instance\")\n    args = parser.parse_args()\n    TENANT_KEY: str = args.tenant\n    EXTERNAL_USER_ID: str = args.user\n    # Wacom personal knowledge REST API Client\n    knowledge_client: WacomKnowledgeService = WacomKnowledgeService(\n        application_name=\"Named Entity Linking Knowledge access\",\n        service_url=args.instance)\n    #  Wacom Named Entity Linking\n    nel_client: WacomEntityLinkingEngine = WacomEntityLinkingEngine(\n        service_url=args.instance,\n        service_endpoint=WacomEntityLinkingEngine.SERVICE_ENDPOINT\n    )\n    # Use special tenant for testing:  Unit-test tenant\n    user_token, refresh_token, expiration_time = nel_client.request_user_token(TENANT_KEY, EXTERNAL_USER_ID)\n    entities: List[KnowledgeGraphEntity] = nel_client.\\\n        link_personal_entities(auth_key=user_token, text=TEXT,\n                               language_code=LANGUAGE_CODE)\n    idx: int = 1\n    print('-----------------------------------------------------------------------------------------------------------')\n    print(f'Text: \"{TEXT}\"@{LANGUAGE_CODE}')\n    print('-----------------------------------------------------------------------------------------------------------')\n    for e in entities:\n        print_entity(e, idx, user_token, knowledge_client)\n        idx += 1\n\n```\n\n### Access Management\n\nThe sample shows, how access to entities can be shared with a group of users or the tenant.\n\n```python\nimport argparse\nfrom typing import List\nfrom knowledge.base.entity import LanguageCode, Label, Description\nfrom knowledge.base.ontology import OntologyClassReference, ThingObject\nfrom knowledge.services.base import WacomServiceException\nfrom knowledge.services.graph import WacomKnowledgeService\nfrom knowledge.services.group import GroupManagementServiceAPI, Group\nfrom knowledge.services.users import UserManagementServiceAPI\n\n# ------------------------------- User credential ----------------------------------------------------------------------\nTOPIC_CLASS: OntologyClassReference = OntologyClassReference('wacom', 'core', 'Topic')\n\n\ndef create_entity() -> ThingObject:\n    # Main labels for entity\n    topic_labels: List[Label] = [\n        Label('Hidden', LanguageCode('en_US')),\n        Label('Versteckt', LanguageCode('de_DE')),\n        Label('隠れた', LanguageCode('ja_JP'))\n    ]\n\n    # Topic description\n    topic_description: List[Description] = [\n        Description('Hidden entity to explain access management.', LanguageCode('en_US')),\n        Description('Verstecke Entität, um die Zugriffsteuerung zu erlären.', LanguageCode('de_DE'))\n    ]\n    # Topic\n    topic_object: ThingObject = ThingObject(label=topic_labels, concept_type=TOPIC_CLASS, description=topic_description)\n    return topic_object\n\n\nif __name__ == '__main__':\n    parser = argparse.ArgumentParser()\n    parser.add_argument(\"-u\", \"--user\", help=\"External Id of the shadow user within the Wacom Personal Knowledge.\",\n                        required=True)\n    parser.add_argument(\"-t\", \"--tenant\", help=\"Tenant Id of the shadow user within the Wacom Personal Knowledge.\",\n                        required=True)\n    parser.add_argument(\"-i\", \"--instance\", default='https://stage-private-knowledge.wacom.com',\n                        help=\"URL of instance\")\n    args = parser.parse_args()\n    TENANT_KEY: str = args.tenant\n    EXTERNAL_USER_ID: str = args.user\n    # Wacom personal knowledge REST API Client\n    knowledge_client: WacomKnowledgeService = WacomKnowledgeService(application_name=\"Wacom Knowledge Listing\",\n                                                                    service_url=args.instance)\n    # User Management\n    user_management: UserManagementServiceAPI = UserManagementServiceAPI(service_url=args.instance)\n    # Group Management\n    group_management: GroupManagementServiceAPI = GroupManagementServiceAPI(service_url=args.instance)\n    admin_token, refresh_token, expiration_time  = user_management.request_user_token(TENANT_KEY, EXTERNAL_USER_ID)\n    # Now, we create a users\n    u1, u1_token = user_management.create_user(TENANT_KEY, \"u1\")\n    u2, u2_token = user_management.create_user(TENANT_KEY, \"u2\")\n    u3, u3_token = user_management.create_user(TENANT_KEY, \"u3\")\n\n    # Now, let's create an entity\n    thing: ThingObject = create_entity()\n    entity_uri: str = knowledge_client.create_entity(u1_token, thing)\n    # Only user 1 can access the entity from cloud storage\n    my_thing: ThingObject = knowledge_client.entity(u1_token, entity_uri)\n    print(f'User is the owner of {my_thing.owner}')\n    # Now only user 1 has access to the personal entity\n    knowledge_client.entity(u1_token, entity_uri)\n    # Try to access the entity\n    try:\n        knowledge_client.entity(u2_token, entity_uri)\n    except WacomServiceException as we:\n        print(f\"Expected exception as user 2 has no access to the personal entity of user 1. Exception: {we}\")\n    # Try to access the entity\n    try:\n        knowledge_client.entity(u3_token, entity_uri)\n    except WacomServiceException as we:\n        print(f\"Expected exception as user 3 has no access to the personal entity of user 1. Exception: {we}\")\n    # Now, user 1 creates a group\n    g: Group = group_management.create_group(u1_token, \"test-group\")\n    # Shares the join key with user 2 and user 2 joins\n    group_management.join_group(u2_token, g.id, g.join_key)\n    # Share entity with group\n    group_management.add_entity_to_group(u1_token, g.id, entity_uri)\n    # Now, user 2 should have access\n    other_thing: ThingObject = knowledge_client.entity(u2_token, entity_uri)\n    print(f'User 2 is the owner of the thing: {other_thing.owner}')\n    # Try to access the entity\n    try:\n        knowledge_client.entity(u3_token, entity_uri)\n    except WacomServiceException as we:\n        print(f\"Expected exception as user 3 still has no access to the personal entity of user 1. Exception: {we}\")\n    # Un-share the entity\n    group_management.remove_entity_to_group(u1_token, g.id, entity_uri)\n    # Now, again no access\n    try:\n        knowledge_client.entity(u2_token, entity_uri)\n    except WacomServiceException as we:\n        print(f\"Expected exception as user 2 has no access to the personal entity of user 1. Exception: {we}\")\n    group_management.leave_group(u2_token, group_id=g.id)\n    # Now, share the entity with the whole tenant\n    my_thing.tenant_access_right.read = True\n    knowledge_client.update_entity(u1_token, my_thing)\n    # Now, all users can access the entity\n    knowledge_client.entity(u2_token, entity_uri)\n    knowledge_client.entity(u3_token, entity_uri)\n    # Finally, clean up\n    knowledge_client.delete_entity(u1_token, entity_uri, force=True)\n    # Remove users\n    user_management.delete_user(TENANT_KEY, u1.external_user_id, u1.id)\n    user_management.delete_user(TENANT_KEY, u2.external_user_id, u2.id)\n    user_management.delete_user(TENANT_KEY, u3.external_user_id, u3.id)\n\n```\n\n### Ontology Creation\n\nThe samples show how the ontology can be extended and new entities can be added using the added classes.\n\n```python\nimport argparse\nfrom typing import List, Optional\n\nfrom knowledge.base.entity import OntologyContext, Label, LanguageCode, Description\nfrom knowledge.base.ontology import DataPropertyType, OntologyClassReference, OntologyPropertyReference, ThingObject, \\\n    DataProperty\nfrom knowledge.services.graph import WacomKnowledgeService\nfrom knowledge.services.ontology import OntologyService\n\n# ------------------------------- Constants ----------------------------------------------------------------------------\nLEONARDO_DA_VINCI: str = 'Leonardo da Vinci'\nCONTEXT_NAME: str = 'core'\n# Wacom Base Ontology Types\nPERSON_TYPE: OntologyClassReference = OntologyClassReference.parse(\"wacom:core#Person\")\n# Demo Class\nARTIST_TYPE: OntologyClassReference = OntologyClassReference.parse(\"demo:creative#Artist\")\n# Demo Object property\nIS_INSPIRED_BY: OntologyPropertyReference = OntologyPropertyReference.parse(\"demo:creative#isInspiredBy\")\n# Demo Data property\nSTAGE_NAME: OntologyPropertyReference = OntologyPropertyReference.parse(\"demo:creative#stageName\")\n\n\ndef create_artist() -> ThingObject:\n    # Main labels for entity\n    topic_labels: List[Label] = [\n        Label('Gian Giacomo Caprotti', LanguageCode('en_US'))\n    ]\n\n    # Topic description\n    topic_description: List[Description] = [\n        Description('Hidden entity to explain access management.', LanguageCode('en_US')),\n        Description('Verstecke Entität, um die Zugriffsteuerung zu erlären.', LanguageCode('de_DE'))\n    ]\n\n    data_property: DataProperty = DataProperty(content='Salaj',\n                                               property_ref=STAGE_NAME,\n                                               language_code=LanguageCode('en_US'))\n    # Topic\n    artist: ThingObject = ThingObject(label=topic_labels, concept_type=ARTIST_TYPE, description=topic_description)\n    artist.add_data_property(data_property)\n    return artist\n\n\nif __name__ == '__main__':\n    parser = argparse.ArgumentParser()\n    parser.add_argument(\"-u\", \"--user\", help=\"External Id of the shadow user within the Wacom Personal Knowledge.\",\n                        required=True)\n    parser.add_argument(\"-t\", \"--tenant\", help=\"Tenant Id of the shadow user within the Wacom Personal Knowledge.\",\n                        required=True)\n    parser.add_argument(\"-i\", \"--instance\", default=\"https://stage-private-knowledge.wacom.com\", help=\"URL of instance\")\n    args = parser.parse_args()\n    TENANT_KEY: str = args.tenant\n    EXTERNAL_USER_ID: str = args.user\n    # Wacom Ontology REST API Client\n    ontology_client: OntologyService = OntologyService(service_url=args.instance)\n    admin_token, refresh_token, expiration_time  = ontology_client.request_user_token(TENANT_KEY, EXTERNAL_USER_ID)\n    knowledge_client: WacomKnowledgeService = WacomKnowledgeService(\n        application_name=\"Ontology Creation Demo\",\n        service_url=args.instance)\n    contexts: List[OntologyContext] = ontology_client.contexts(admin_token)\n    if len(contexts) == 0:\n        # First, create a context for the ontology\n        ontology_client.create_context(admin_token, name=CONTEXT_NAME, base_uri=f'demo:{CONTEXT_NAME}')\n        context_name: str = CONTEXT_NAME\n    else:\n        context_name: str = contexts[0].context\n    # Creating a class which is a subclass of a person\n    ontology_client.create_concept(admin_token, CONTEXT_NAME, reference=ARTIST_TYPE, subclass_of=PERSON_TYPE)\n\n    # Object properties\n    ontology_client.create_object_property(auth_key=admin_token, context=CONTEXT_NAME,\n                                           reference=IS_INSPIRED_BY, domains_cls=[ARTIST_TYPE], \n                                           ranges_cls=[PERSON_TYPE],\n                                           inverse_of=None, subproperty_of=None)\n    # Data properties\n    ontology_client.create_data_property(auth_key=admin_token, context=CONTEXT_NAME,\n                                         reference=STAGE_NAME,\n                                         domains_cls=[ARTIST_TYPE],\n                                         ranges_cls=[DataPropertyType.STRING],\n                                         subproperty_of=None)\n\n    # Commit the changes of the ontology. This is very important to confirm changes.\n    ontology_client.commit(admin_token, CONTEXT_NAME)\n    # Trigger graph service. After the update the ontology is available and the new entities can be created\n    knowledge_client.ontology_update(admin_token)\n\n    res_entities, next_search_page = knowledge_client.search_labels(auth_key=admin_token, search_term=LEONARDO_DA_VINCI,\n                                                                    language_code=LanguageCode('en_US'), limit=1000)\n    leo: Optional[ThingObject] = None\n    for entity in res_entities:\n        #  Entity must be a person and the label match with full string\n        if entity.concept_type == PERSON_TYPE and LEONARDO_DA_VINCI in [la.content for la in entity.label]:\n            leo = entity\n            break\n\n    artist_student: ThingObject = create_artist()\n    artist_student_uri: str = knowledge_client.create_entity(admin_token, artist_student)\n    knowledge_client.create_relation(admin_token, artist_student_uri, IS_INSPIRED_BY, leo.uri)\n```\n\n## Tools\n\nThe following samples show how to utilize the library to work with Wacom's Personal Knowledge.\n\n### Listing script\n\nListing the entities for tenant. \n\n```bash\n>> python listing.py [-h] -u USER -t TENANT [-r] [-i INSTANCE]\n```\n\n**Parameters:**\n\n- _-i INSTANCE, --instance INSTANCE_ - URL of instance\n- _-u USER, --user USER_ - External ID to identify user of the Wacom Personal Knowledge \n- _-t TENANT, --tenant TENANT_ - Tenant key to identify tenant\n- _-r, --relations (optional)_ -  Requesting the relations for each entity\n\n### Export entities script\n\nDump all entities of a user to a ndjson file. \n\n```bash\n>> python  export_entities.py [-h] -u USER -t TENANT [-r] [-a] [-p] [-d DUMP] [-i INSTANCE]\n```\n\n**Parameters:**\n\n- _-i INSTANCE, --instance INSTANCE_ - URL of instance. (default:=https://private-\n                        knowledge.wacom.com)\n- _-u USER, --user USER_ - External ID to identify user of the Wacom Personal Knowledge \n- _-t TENANT, --tenant TENANT_ - Tenant key to identify tenant\n- _-r, --relations (optional)_ -  Requesting the relations for each entity\n- _-a, --all (optional)_ - All entities the user as access to, otherwise only his own entities are dumped.\n- _-p, --images (optional)_ - Include the images in the dump.\n- _-d DUMP, --dump DUMP_ -  Defines the location of the dump path.\n\n### Push entities script\n\nPushing entities to knowledge graph.\n\n```bash\n>> python push_entities.py [-h] [-u USER] [-t TENANT] [-r] [-i INSTANCE]\n```\n\n**Parameters:**\n\n- _-i INSTANCE, --instance INSTANCE_ - URL of instance\n- _-u USER, --user USER_ - External ID to identify user of the Wacom Personal Knowledge \n- _-t TENANT, --tenant TENANT_ - Tenant key to identify tenant\n- _-i CACHE, --cache CACHE_ - Path to entities that must be imported.\n\n### Reset\n\nResets a tenant by removing entities, groups, and users. \n\n```bash\n>> python reset.py [-h] [-u USER] [-t TENANT] [-i INSTANCE]\n```\n\n**Parameters:**\n\n- _-i INSTANCE, --instance INSTANCE_ - URL of instance\n- _-u USER, --user USER_ - External ID to identify user of the Wacom Personal Knowledge \n- _-t TENANT, --tenant TENANT_ - Tenant key to identify tenant\n- _-i CACHE, --cache CACHE_ - Path to entities that must be imported.  \n\n# Documentation\n\nYou can find more detailed technical documentation, [here](https://developer-docs.wacom.com/preview/semantic-ink/).\nAPI documentation is available [here](./docs/).\n\n## Contributing\nContribution guidelines are still work in progress.\n\n## License\n[Apache License 2.0](LICENSE)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Wacom-Developer/personal-knowledge-library",
    "keywords": "semantic-knowledge;knowledge-graph",
    "license": "Apache 2.0 License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "personal-knowledge-library",
    "package_url": "https://pypi.org/project/personal-knowledge-library/",
    "platform": null,
    "project_url": "https://pypi.org/project/personal-knowledge-library/",
    "project_urls": {
      "Homepage": "https://github.com/Wacom-Developer/personal-knowledge-library"
    },
    "release_url": "https://pypi.org/project/personal-knowledge-library/0.9.4/",
    "requires_dist": [
      "requests (>=2.25.1)",
      "qwikidata (>=0.4.2)",
      "python-dateutil (>=2.8.2)",
      "PyJWT (==2.6.0)",
      "tqdm (>=4.62.0)",
      "ndjson (>=0.3.1)",
      "rdflib (>=6.3.1)",
      "iso639-lang"
    ],
    "requires_python": "",
    "summary": "Library to access Wacom's Personal Knowledge graph.",
    "version": "0.9.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17428815,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4f05db950fb4106d16957dedd6b397e1c3401ae3dbf141b73b15b32c853938d9",
          "md5": "a094cad621b2869a741b1cdaefcd83bf",
          "sha256": "11bcc432b11a20fc0f5c0d79f09a548e8e3a034a9c0888f7dbc535ef94adc552"
        },
        "downloads": -1,
        "filename": "personal_knowledge_library-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a094cad621b2869a741b1cdaefcd83bf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 139164,
        "upload_time": "2021-11-05T20:04:08",
        "upload_time_iso_8601": "2021-11-05T20:04:08.949538Z",
        "url": "https://files.pythonhosted.org/packages/4f/05/db950fb4106d16957dedd6b397e1c3401ae3dbf141b73b15b32c853938d9/personal_knowledge_library-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f4f0864bc64afcace3ea1ec7b59bab28ff41a8825197919c0875949afda0eaad",
          "md5": "b95b629a3ee6723ad4f66af08eb712ad",
          "sha256": "0949a30dd4578d5145cae38495da894b87e5c6445efc58468eecb8e694e1bdb0"
        },
        "downloads": -1,
        "filename": "personal_knowledge_library-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b95b629a3ee6723ad4f66af08eb712ad",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 145751,
        "upload_time": "2021-11-05T20:13:17",
        "upload_time_iso_8601": "2021-11-05T20:13:17.240245Z",
        "url": "https://files.pythonhosted.org/packages/f4/f0/864bc64afcace3ea1ec7b59bab28ff41a8825197919c0875949afda0eaad/personal_knowledge_library-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5fe2ee3ae557d9c97306b0e4d0756b1414ddb875c84669be85d67093e7d05714",
          "md5": "9328f36748fdde4a13c4e7028e292b7e",
          "sha256": "d64bd2748e25a6425c0713371c5bc526f52b7003b2907df05e0a172bfe9b79ef"
        },
        "downloads": -1,
        "filename": "personal_knowledge_library-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9328f36748fdde4a13c4e7028e292b7e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 146525,
        "upload_time": "2021-11-10T20:49:05",
        "upload_time_iso_8601": "2021-11-10T20:49:05.537660Z",
        "url": "https://files.pythonhosted.org/packages/5f/e2/ee3ae557d9c97306b0e4d0756b1414ddb875c84669be85d67093e7d05714/personal_knowledge_library-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "453117a1a0c9aba2e569f4d9f8213f3178acbfb2d36cbbf0caa834f0ac14d388",
          "md5": "c4ce576ea5da6c4a526d8e7348c6639f",
          "sha256": "5471d85e457a5280eddfffc49c6a248dc05ce597605795e3b8898147b09f2bc9"
        },
        "downloads": -1,
        "filename": "personal_knowledge_library-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c4ce576ea5da6c4a526d8e7348c6639f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 145984,
        "upload_time": "2021-11-10T20:49:07",
        "upload_time_iso_8601": "2021-11-10T20:49:07.550574Z",
        "url": "https://files.pythonhosted.org/packages/45/31/17a1a0c9aba2e569f4d9f8213f3178acbfb2d36cbbf0caa834f0ac14d388/personal_knowledge_library-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9340f1256a6e3e079eba2fad1794d7102ab2053f7e8c7e7c759c7e1858096e0b",
          "md5": "e6d6adffe6e356c997c3da8350c5350a",
          "sha256": "aed3e22e3dd82505d27a9b7ba4ee84a0407d7688a74091b564c5fab9e0984d8b"
        },
        "downloads": -1,
        "filename": "personal_knowledge_library-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e6d6adffe6e356c997c3da8350c5350a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 146853,
        "upload_time": "2021-11-12T19:35:09",
        "upload_time_iso_8601": "2021-11-12T19:35:09.470225Z",
        "url": "https://files.pythonhosted.org/packages/93/40/f1256a6e3e079eba2fad1794d7102ab2053f7e8c7e7c759c7e1858096e0b/personal_knowledge_library-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "29d68a9b3499fa853b7ed1cb484f2298bed843f19e90215a177a5189dacd2da1",
          "md5": "bafa0b891a549d34e511b1a5479e762b",
          "sha256": "9655d3aa71943d1bc68dc9d7a42e1e64f043d054743dc1af690814435202e16b"
        },
        "downloads": -1,
        "filename": "personal_knowledge_library-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "bafa0b891a549d34e511b1a5479e762b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 146349,
        "upload_time": "2021-11-12T19:35:12",
        "upload_time_iso_8601": "2021-11-12T19:35:12.071681Z",
        "url": "https://files.pythonhosted.org/packages/29/d6/8a9b3499fa853b7ed1cb484f2298bed843f19e90215a177a5189dacd2da1/personal_knowledge_library-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "995cc834c2af50f93b7b1e70497ac0f9642a1ca8c41f4de011bf551a98ecfe52",
          "md5": "77650cb8f96d314a0a33e0edcf316168",
          "sha256": "059d3cc121fe41d9769346d370415f6d4eb9d1ee883b2496c7bd399f791431b0"
        },
        "downloads": -1,
        "filename": "personal_knowledge_library-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "77650cb8f96d314a0a33e0edcf316168",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 148728,
        "upload_time": "2021-11-18T21:07:46",
        "upload_time_iso_8601": "2021-11-18T21:07:46.755902Z",
        "url": "https://files.pythonhosted.org/packages/99/5c/c834c2af50f93b7b1e70497ac0f9642a1ca8c41f4de011bf551a98ecfe52/personal_knowledge_library-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "635e6ee5ef3e5be4173392a8de43352e6f6195f3488a567f06f3f7792282f925",
          "md5": "4bd593d7a8eb9c05bb21522c46e570d7",
          "sha256": "c526aa62ddf49d4f2d82ffb465caf12aaf6df63c81eb065e4e842bf6cc65a24c"
        },
        "downloads": -1,
        "filename": "personal_knowledge_library-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "4bd593d7a8eb9c05bb21522c46e570d7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 147939,
        "upload_time": "2021-11-18T21:07:48",
        "upload_time_iso_8601": "2021-11-18T21:07:48.586250Z",
        "url": "https://files.pythonhosted.org/packages/63/5e/6ee5ef3e5be4173392a8de43352e6f6195f3488a567f06f3f7792282f925/personal_knowledge_library-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f22d64708cec18af6435bb8d260c6a49a675f1afa11a827d9713be2adb1c6eb7",
          "md5": "26b93b1da3a9351c2d6d504d1c5f47fb",
          "sha256": "7011ec53f3fe26e07b1bc2ddb6a20732470ae2f520d344bc934abfd04c7b4ff6"
        },
        "downloads": -1,
        "filename": "personal_knowledge_library-0.1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "26b93b1da3a9351c2d6d504d1c5f47fb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 151142,
        "upload_time": "2021-11-19T20:45:58",
        "upload_time_iso_8601": "2021-11-19T20:45:58.095645Z",
        "url": "https://files.pythonhosted.org/packages/f2/2d/64708cec18af6435bb8d260c6a49a675f1afa11a827d9713be2adb1c6eb7/personal_knowledge_library-0.1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4caaa3837615113d468fecc89e0953718dcf70229a96d211802fd38e10c78b10",
          "md5": "baf3e36f80457321e6c2cf2cf4516571",
          "sha256": "3bd288e1db5da7ae921e9a8b4e700693f1fba5c177086440f7fe64513dc54c87"
        },
        "downloads": -1,
        "filename": "personal_knowledge_library-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "baf3e36f80457321e6c2cf2cf4516571",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 148914,
        "upload_time": "2021-11-19T20:45:59",
        "upload_time_iso_8601": "2021-11-19T20:45:59.505868Z",
        "url": "https://files.pythonhosted.org/packages/4c/aa/a3837615113d468fecc89e0953718dcf70229a96d211802fd38e10c78b10/personal_knowledge_library-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9c91dde31ac8bdc5b93eea82ae5c4985c85892a6e297176b63dff73d7c61d32d",
          "md5": "12b515c6b6c74284f3bf93f1427b688d",
          "sha256": "96bfec25076bb9eac95b1b1b70846e13c14341e9be258957607041fafd44a428"
        },
        "downloads": -1,
        "filename": "personal_knowledge_library-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "12b515c6b6c74284f3bf93f1427b688d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 155625,
        "upload_time": "2021-11-23T20:42:15",
        "upload_time_iso_8601": "2021-11-23T20:42:15.231780Z",
        "url": "https://files.pythonhosted.org/packages/9c/91/dde31ac8bdc5b93eea82ae5c4985c85892a6e297176b63dff73d7c61d32d/personal_knowledge_library-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e016c0ef8827f89b26c587eaabb2404a2f967bf27fef8cced43aa3661909d938",
          "md5": "15f6d17dc0fe0293d7597805540f5215",
          "sha256": "edae42683eb09167f68e287550d266297ca561bf522f99c58881f9da7899f941"
        },
        "downloads": -1,
        "filename": "personal_knowledge_library-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "15f6d17dc0fe0293d7597805540f5215",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 160845,
        "upload_time": "2021-11-23T20:42:20",
        "upload_time_iso_8601": "2021-11-23T20:42:20.720413Z",
        "url": "https://files.pythonhosted.org/packages/e0/16/c0ef8827f89b26c587eaabb2404a2f967bf27fef8cced43aa3661909d938/personal_knowledge_library-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "84eb9105d5db47f8a58ee83033ef27e3d9d8045d4be0c94f8fee80ae70a9293b",
          "md5": "0abb840fc95fdab3dbf0666ed4edf5f2",
          "sha256": "349a8099185c0962294ab94201ef885ed8994cd38f5c005a58a9fa03029eacf5"
        },
        "downloads": -1,
        "filename": "personal_knowledge_library-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0abb840fc95fdab3dbf0666ed4edf5f2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 156253,
        "upload_time": "2021-12-08T19:17:57",
        "upload_time_iso_8601": "2021-12-08T19:17:57.587062Z",
        "url": "https://files.pythonhosted.org/packages/84/eb/9105d5db47f8a58ee83033ef27e3d9d8045d4be0c94f8fee80ae70a9293b/personal_knowledge_library-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "28500eb5b2bb78efc3037ae8b939a90ef125fbe1c37ef98e9008b53a5d4376a2",
          "md5": "df65b869365d96c2e3d731a50f7a4e17",
          "sha256": "ad4b714f554e4b78652bc6ec02b34494dc234ac71373c933ce230b150d69bbfc"
        },
        "downloads": -1,
        "filename": "personal_knowledge_library-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "df65b869365d96c2e3d731a50f7a4e17",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 161461,
        "upload_time": "2021-12-08T19:17:59",
        "upload_time_iso_8601": "2021-12-08T19:17:59.743546Z",
        "url": "https://files.pythonhosted.org/packages/28/50/0eb5b2bb78efc3037ae8b939a90ef125fbe1c37ef98e9008b53a5d4376a2/personal_knowledge_library-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4b953af7cebd391c7607efeda43cce076620a5ebc6e6c12ffb19fc21ae34354f",
          "md5": "61263ceffffad88316d39da6bee11f58",
          "sha256": "d83423b9ad81f2e3bc9cf2b43d984a5e8b9962718eab9463f801c76397ae3315"
        },
        "downloads": -1,
        "filename": "personal_knowledge_library-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "61263ceffffad88316d39da6bee11f58",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 156226,
        "upload_time": "2021-12-08T20:39:25",
        "upload_time_iso_8601": "2021-12-08T20:39:25.931687Z",
        "url": "https://files.pythonhosted.org/packages/4b/95/3af7cebd391c7607efeda43cce076620a5ebc6e6c12ffb19fc21ae34354f/personal_knowledge_library-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9044eb7840d62cda27cf35672208e4de5ab893f2b7006f554b7e7adb7dcdfaed",
          "md5": "036c23520bd76552fa3faee99db47f95",
          "sha256": "8d6502c27e887fdf6a6b3531fcaed5b8ff9a798f1eab1732b6598247bbf3f671"
        },
        "downloads": -1,
        "filename": "personal_knowledge_library-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "036c23520bd76552fa3faee99db47f95",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 161433,
        "upload_time": "2021-12-08T20:39:29",
        "upload_time_iso_8601": "2021-12-08T20:39:29.065590Z",
        "url": "https://files.pythonhosted.org/packages/90/44/eb7840d62cda27cf35672208e4de5ab893f2b7006f554b7e7adb7dcdfaed/personal_knowledge_library-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad8a82df9ed784a2090218cd9b9198cb111b6b742b8f3495138ece6c55f6e13e",
          "md5": "2a19443648f7ee9444663caa0eccfd0d",
          "sha256": "b8c1323e19ee7bcfa180082b1a18bc329c057210cca135ca501e345913055a1a"
        },
        "downloads": -1,
        "filename": "personal_knowledge_library-0.2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2a19443648f7ee9444663caa0eccfd0d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 156400,
        "upload_time": "2021-12-10T11:31:42",
        "upload_time_iso_8601": "2021-12-10T11:31:42.533933Z",
        "url": "https://files.pythonhosted.org/packages/ad/8a/82df9ed784a2090218cd9b9198cb111b6b742b8f3495138ece6c55f6e13e/personal_knowledge_library-0.2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "da5fcaaad09776798ef34032a3b2d616198d465cf54fbea5d89781aa77348128",
          "md5": "13ebc883c31c65de6ed5927c1dea68ee",
          "sha256": "5b6ef61a14fd4c9cc416e1a636ae2cb09e204c1ca308152a367304f39555f65d"
        },
        "downloads": -1,
        "filename": "personal_knowledge_library-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "13ebc883c31c65de6ed5927c1dea68ee",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 161438,
        "upload_time": "2021-12-10T11:31:44",
        "upload_time_iso_8601": "2021-12-10T11:31:44.180880Z",
        "url": "https://files.pythonhosted.org/packages/da/5f/caaad09776798ef34032a3b2d616198d465cf54fbea5d89781aa77348128/personal_knowledge_library-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "95dbe69d015f1d9d793137a6eae2e34edd858d494c2bcdc217c70453fc03db8b",
          "md5": "b2ad476bb3937b9f3d60a30f125b74d6",
          "sha256": "77f88991ab642cee04e6ba5d0ea667e3615404da7d7696924792601d479c2c6d"
        },
        "downloads": -1,
        "filename": "personal_knowledge_library-0.2.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b2ad476bb3937b9f3d60a30f125b74d6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 156666,
        "upload_time": "2022-01-28T17:28:41",
        "upload_time_iso_8601": "2022-01-28T17:28:41.400265Z",
        "url": "https://files.pythonhosted.org/packages/95/db/e69d015f1d9d793137a6eae2e34edd858d494c2bcdc217c70453fc03db8b/personal_knowledge_library-0.2.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "42b7a2fcc4c5309fa6bfc5b5d4973253251bbce35d51f565bdde1fad1994845d",
          "md5": "999cdc7b8a93e1289f9ff22686e9ae92",
          "sha256": "fe8dd1ec240294d88f1c05e2bd1fa53dc29c81ec7ecccc0b8bc558ab86333f2e"
        },
        "downloads": -1,
        "filename": "personal_knowledge_library-0.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "999cdc7b8a93e1289f9ff22686e9ae92",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 161682,
        "upload_time": "2022-01-28T17:28:43",
        "upload_time_iso_8601": "2022-01-28T17:28:43.905253Z",
        "url": "https://files.pythonhosted.org/packages/42/b7/a2fcc4c5309fa6bfc5b5d4973253251bbce35d51f565bdde1fad1994845d/personal_knowledge_library-0.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6ce9d53cf938a3a205831e7b5225c41ae413830028b62d215adab6276b595040",
          "md5": "571a52a32c45aecd062b71355732a13a",
          "sha256": "5659cca15b41066f16db196c98455c9727ee35b5c0a77f634ad8825d4d55c3c1"
        },
        "downloads": -1,
        "filename": "personal_knowledge_library-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "571a52a32c45aecd062b71355732a13a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 158133,
        "upload_time": "2022-03-25T10:59:02",
        "upload_time_iso_8601": "2022-03-25T10:59:02.536086Z",
        "url": "https://files.pythonhosted.org/packages/6c/e9/d53cf938a3a205831e7b5225c41ae413830028b62d215adab6276b595040/personal_knowledge_library-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8341d57c5aa24d7f1998d894c4dcc4df5af6e1a5734f8c14db2557e5a9b1cece",
          "md5": "8e0e796fe57bbdcb8ed4916d5614b994",
          "sha256": "a70e0359f412c8bfc0469b59935fa24bfd98cde7db1acea12ea2069ca9ed387a"
        },
        "downloads": -1,
        "filename": "personal_knowledge_library-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8e0e796fe57bbdcb8ed4916d5614b994",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 165242,
        "upload_time": "2022-03-25T10:59:04",
        "upload_time_iso_8601": "2022-03-25T10:59:04.532002Z",
        "url": "https://files.pythonhosted.org/packages/83/41/d57c5aa24d7f1998d894c4dcc4df5af6e1a5734f8c14db2557e5a9b1cece/personal_knowledge_library-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf45557c32fc2869e14086df9fa53081b6a990e51dd6114bab7c0b860b62c6d1",
          "md5": "393c3cf19459a8522f0613ac299c1add",
          "sha256": "959ed4edaf3ade50e8bf86df1a5c8eab1dd58ede6864feaa3c87d0f8b733dddc"
        },
        "downloads": -1,
        "filename": "personal_knowledge_library-0.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "393c3cf19459a8522f0613ac299c1add",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 158289,
        "upload_time": "2022-03-31T16:18:55",
        "upload_time_iso_8601": "2022-03-31T16:18:55.048226Z",
        "url": "https://files.pythonhosted.org/packages/bf/45/557c32fc2869e14086df9fa53081b6a990e51dd6114bab7c0b860b62c6d1/personal_knowledge_library-0.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b282a635f9579cb9274a52018bdf4d4eb0b12f3ea1fba6215b63c80d03d49a9f",
          "md5": "41e237696aa08e1dc93bb49f6c71d86d",
          "sha256": "a5a949090728f41c42fe1897dd9f9cf2696b0910ea6f8cda091e797763c6bfd0"
        },
        "downloads": -1,
        "filename": "personal_knowledge_library-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "41e237696aa08e1dc93bb49f6c71d86d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 165351,
        "upload_time": "2022-03-31T16:18:57",
        "upload_time_iso_8601": "2022-03-31T16:18:57.112766Z",
        "url": "https://files.pythonhosted.org/packages/b2/82/a635f9579cb9274a52018bdf4d4eb0b12f3ea1fba6215b63c80d03d49a9f/personal_knowledge_library-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4fe61cca48b5717d7d3c8859462219d65708aa1d3fcfba76af87fa49c1f19ab",
          "md5": "335e6d37fa9d0d30ca68ab8580239858",
          "sha256": "93797de965e57f5e9e30414ab98881a6b2b8fb1514c472533f2facf5380f2853"
        },
        "downloads": -1,
        "filename": "personal_knowledge_library-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "335e6d37fa9d0d30ca68ab8580239858",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 158656,
        "upload_time": "2022-05-24T16:15:06",
        "upload_time_iso_8601": "2022-05-24T16:15:06.904023Z",
        "url": "https://files.pythonhosted.org/packages/a4/fe/61cca48b5717d7d3c8859462219d65708aa1d3fcfba76af87fa49c1f19ab/personal_knowledge_library-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "789a6bb744b8fd164b5ba8a129354dff02e91584bc59c347633dd3f323675827",
          "md5": "a68d3165a6eece89b8130454504169be",
          "sha256": "21249449da3da8602e7f92d070b9101475fc8b86d47720102846f7d79861c30d"
        },
        "downloads": -1,
        "filename": "personal_knowledge_library-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a68d3165a6eece89b8130454504169be",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 165772,
        "upload_time": "2022-05-24T16:15:09",
        "upload_time_iso_8601": "2022-05-24T16:15:09.716922Z",
        "url": "https://files.pythonhosted.org/packages/78/9a/6bb744b8fd164b5ba8a129354dff02e91584bc59c347633dd3f323675827/personal_knowledge_library-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2d8bcf1ee4200916c7dced26713a842e86e4a6f73a75077832fc2d47c8398ee3",
          "md5": "d1e2e8baee6498c7c1f1f0492e807138",
          "sha256": "4ffddc964149a7a7decb617030cdce7706f97691ce6eecbc744705562c1e3ccb"
        },
        "downloads": -1,
        "filename": "personal_knowledge_library-0.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d1e2e8baee6498c7c1f1f0492e807138",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 159459,
        "upload_time": "2022-07-03T10:20:13",
        "upload_time_iso_8601": "2022-07-03T10:20:13.361072Z",
        "url": "https://files.pythonhosted.org/packages/2d/8b/cf1ee4200916c7dced26713a842e86e4a6f73a75077832fc2d47c8398ee3/personal_knowledge_library-0.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "29d1d180d99e86c8c04e8ac9a6cfaddaaaffcc9d18b5bc0b1031eda7174eb8c4",
          "md5": "3398709a8f74c873cbadb89938c1ec95",
          "sha256": "12e0b1e9ce42ebfdb1208df851ae9a3943b188ca49707618929326f03431575d"
        },
        "downloads": -1,
        "filename": "personal_knowledge_library-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3398709a8f74c873cbadb89938c1ec95",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 166569,
        "upload_time": "2022-07-03T10:20:15",
        "upload_time_iso_8601": "2022-07-03T10:20:15.514797Z",
        "url": "https://files.pythonhosted.org/packages/29/d1/d180d99e86c8c04e8ac9a6cfaddaaaffcc9d18b5bc0b1031eda7174eb8c4/personal_knowledge_library-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "64de1d7816aafe5ee8c4c901b0c00b973892d04ff6c195737af9580268994062",
          "md5": "57aa120360d9d581424917765810e175",
          "sha256": "f8828024f4e11b3a9492147cfa738b0b6f097756737502485e85df80ccb20ad4"
        },
        "downloads": -1,
        "filename": "personal_knowledge_library-0.6.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "57aa120360d9d581424917765810e175",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 159794,
        "upload_time": "2022-08-09T07:58:40",
        "upload_time_iso_8601": "2022-08-09T07:58:40.993786Z",
        "url": "https://files.pythonhosted.org/packages/64/de/1d7816aafe5ee8c4c901b0c00b973892d04ff6c195737af9580268994062/personal_knowledge_library-0.6.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9b8ea66d5de2fbd688617f1d084b057fc7363dbad38466ae5ddf3286bf58e931",
          "md5": "4ff62a7db8a68c126ffaf3ad2221c7f5",
          "sha256": "adc5c6fd100d75ef8d5a0bee6bb6d5115d514c214971bf09c133b5d7531fec62"
        },
        "downloads": -1,
        "filename": "personal_knowledge_library-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4ff62a7db8a68c126ffaf3ad2221c7f5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 166866,
        "upload_time": "2022-08-09T07:58:43",
        "upload_time_iso_8601": "2022-08-09T07:58:43.201568Z",
        "url": "https://files.pythonhosted.org/packages/9b/8e/a66d5de2fbd688617f1d084b057fc7363dbad38466ae5ddf3286bf58e931/personal_knowledge_library-0.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8baf0de0f0182590568e3c401f98aacbd7f9e1fabe7b1ce49e0983f6efb3b2e5",
          "md5": "510675c634413db729c2a46c72b91cae",
          "sha256": "7fc86d6132c934ef8c24ed06bb95bd64b065737f264b9edfd204b86f677e7348"
        },
        "downloads": -1,
        "filename": "personal_knowledge_library-0.6.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "510675c634413db729c2a46c72b91cae",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 159996,
        "upload_time": "2022-08-23T07:02:54",
        "upload_time_iso_8601": "2022-08-23T07:02:54.914537Z",
        "url": "https://files.pythonhosted.org/packages/8b/af/0de0f0182590568e3c401f98aacbd7f9e1fabe7b1ce49e0983f6efb3b2e5/personal_knowledge_library-0.6.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "66cf44e09222e2218e37cfe299118e33c3f355b12253f60ebd3396e2a17cc4e6",
          "md5": "1c322023df67aa2d975be5dc210af60e",
          "sha256": "16ed6e711261d8ac4141ca66ff8c7ebb7511a4b7b50a1f79d45702642e82ef1b"
        },
        "downloads": -1,
        "filename": "personal_knowledge_library-0.6.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1c322023df67aa2d975be5dc210af60e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 167155,
        "upload_time": "2022-08-23T07:02:56",
        "upload_time_iso_8601": "2022-08-23T07:02:56.881660Z",
        "url": "https://files.pythonhosted.org/packages/66/cf/44e09222e2218e37cfe299118e33c3f355b12253f60ebd3396e2a17cc4e6/personal_knowledge_library-0.6.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b3631a9bf25a86584d062a6871800bd22f219f6f7c5fd160f3ff24a1ba84e87c",
          "md5": "06d20a5596627b49a97b7867ded1d6c6",
          "sha256": "8b42ca11e539e903943576d8fa087bb9098e6d6ad460a2b4b4b805721cb7fe87"
        },
        "downloads": -1,
        "filename": "personal_knowledge_library-0.6.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "06d20a5596627b49a97b7867ded1d6c6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 160046,
        "upload_time": "2022-09-20T09:34:29",
        "upload_time_iso_8601": "2022-09-20T09:34:29.901348Z",
        "url": "https://files.pythonhosted.org/packages/b3/63/1a9bf25a86584d062a6871800bd22f219f6f7c5fd160f3ff24a1ba84e87c/personal_knowledge_library-0.6.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "407b453769ff867532547d60cb4035e6d34945b19129070a40222a0fc9777b67",
          "md5": "802c931faad4db67141dd181dd8fe4bf",
          "sha256": "99d8b88057ff4f97e43c6cf43e3338d129f9277b1def1ea1a72dc0edc93f12b5"
        },
        "downloads": -1,
        "filename": "personal_knowledge_library-0.6.2.tar.gz",
        "has_sig": false,
        "md5_digest": "802c931faad4db67141dd181dd8fe4bf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 167210,
        "upload_time": "2022-09-20T09:34:32",
        "upload_time_iso_8601": "2022-09-20T09:34:32.615469Z",
        "url": "https://files.pythonhosted.org/packages/40/7b/453769ff867532547d60cb4035e6d34945b19129070a40222a0fc9777b67/personal_knowledge_library-0.6.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2eaa047be80a0bc594d2ca377b88aec7967081868bacc0daeb31f185b542aabb",
          "md5": "4fed677ee6da8c6988edc81460d9a3a8",
          "sha256": "70cfce11229b029b098d6cd8e046949caf9796d3303a01e182aa2fb20216ebd1"
        },
        "downloads": -1,
        "filename": "personal_knowledge_library-0.7.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4fed677ee6da8c6988edc81460d9a3a8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 160128,
        "upload_time": "2022-10-26T16:26:23",
        "upload_time_iso_8601": "2022-10-26T16:26:23.621977Z",
        "url": "https://files.pythonhosted.org/packages/2e/aa/047be80a0bc594d2ca377b88aec7967081868bacc0daeb31f185b542aabb/personal_knowledge_library-0.7.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8003e81c92600f29d4ae46f9f10447b27aa70e5a6719a3c9507e6e047732d042",
          "md5": "22d32d29711d46f4ec2e99bb6ea6b0a6",
          "sha256": "9dfccb0db8f96e951ba27379fb4ed611ec77139d2f879f7ae572b4c36cc6310b"
        },
        "downloads": -1,
        "filename": "personal_knowledge_library-0.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "22d32d29711d46f4ec2e99bb6ea6b0a6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 167274,
        "upload_time": "2022-10-26T16:26:25",
        "upload_time_iso_8601": "2022-10-26T16:26:25.558651Z",
        "url": "https://files.pythonhosted.org/packages/80/03/e81c92600f29d4ae46f9f10447b27aa70e5a6719a3c9507e6e047732d042/personal_knowledge_library-0.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9c4e2d4fd9cd22c3423859f396e2e06570fa8034bcbb34b6a3cbe6b2ecc9708f",
          "md5": "8cb850bdab7815bb2486b966d4a15fca",
          "sha256": "1d4f545a950ed07f736a8b671f916cf98cbfbf417b22c03ef9eeb2950050d19a"
        },
        "downloads": -1,
        "filename": "personal_knowledge_library-0.7.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8cb850bdab7815bb2486b966d4a15fca",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 160223,
        "upload_time": "2022-11-02T18:51:36",
        "upload_time_iso_8601": "2022-11-02T18:51:36.678736Z",
        "url": "https://files.pythonhosted.org/packages/9c/4e/2d4fd9cd22c3423859f396e2e06570fa8034bcbb34b6a3cbe6b2ecc9708f/personal_knowledge_library-0.7.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ce2de5deb59d17faee090c7e0a92b635ae1969c51786165f8f22bc28d61b579f",
          "md5": "977a06a816d21774f4ff79ce53cb1f70",
          "sha256": "f36977bf6097a353fbe96dffd7a2865ea51eab104d11508f893db9e976a77205"
        },
        "downloads": -1,
        "filename": "personal_knowledge_library-0.7.1.tar.gz",
        "has_sig": false,
        "md5_digest": "977a06a816d21774f4ff79ce53cb1f70",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 167386,
        "upload_time": "2022-11-02T18:51:38",
        "upload_time_iso_8601": "2022-11-02T18:51:38.871317Z",
        "url": "https://files.pythonhosted.org/packages/ce/2d/e5deb59d17faee090c7e0a92b635ae1969c51786165f8f22bc28d61b579f/personal_knowledge_library-0.7.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fbb873de9ee94af4626d6386bcdfd349d520b85fc307f857fbf1a045cc909ed3",
          "md5": "482f5b82fd1d4a0137831de7c6ef04d8",
          "sha256": "404e7bfc8f27f2ebd4a278b4c16cccd6b26ed76d2a41c5bf502bc7b648b0d878"
        },
        "downloads": -1,
        "filename": "personal_knowledge_library-0.8.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "482f5b82fd1d4a0137831de7c6ef04d8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 160813,
        "upload_time": "2022-11-19T16:33:02",
        "upload_time_iso_8601": "2022-11-19T16:33:02.252100Z",
        "url": "https://files.pythonhosted.org/packages/fb/b8/73de9ee94af4626d6386bcdfd349d520b85fc307f857fbf1a045cc909ed3/personal_knowledge_library-0.8.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e2f314046d4ba24ab1b7e9a2af6accd8773b5c78648064cb2f657bfc8c4a55e5",
          "md5": "e7e51c1f8a4dcfdaec45285c03d49752",
          "sha256": "f90dead68658c7e103c29a05722c6633acbb68b5de7c51cde33f26d8d5e0b53e"
        },
        "downloads": -1,
        "filename": "personal_knowledge_library-0.8.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e7e51c1f8a4dcfdaec45285c03d49752",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 167902,
        "upload_time": "2022-11-19T16:33:04",
        "upload_time_iso_8601": "2022-11-19T16:33:04.780985Z",
        "url": "https://files.pythonhosted.org/packages/e2/f3/14046d4ba24ab1b7e9a2af6accd8773b5c78648064cb2f657bfc8c4a55e5/personal_knowledge_library-0.8.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0a3f057adc15c97d7dca4a87773438512ed1b9e2baf7bac0c1ae336be2d860b1",
          "md5": "7fac984c94d0fdcc1086a5822c982601",
          "sha256": "a199e67830fa2f678a9386dfb27bbfc0ec0b1d26ff13ec6b62d38338ccf7a0d0"
        },
        "downloads": -1,
        "filename": "personal_knowledge_library-0.9.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7fac984c94d0fdcc1086a5822c982601",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 161180,
        "upload_time": "2022-11-23T18:31:00",
        "upload_time_iso_8601": "2022-11-23T18:31:00.931924Z",
        "url": "https://files.pythonhosted.org/packages/0a/3f/057adc15c97d7dca4a87773438512ed1b9e2baf7bac0c1ae336be2d860b1/personal_knowledge_library-0.9.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cc327ede8876c561281aedc4f00c781bec9171cc24a9737adfcfd259bc5b25fd",
          "md5": "c9ee7024a1d33222d39e77fb8d2bbafb",
          "sha256": "e4d6ba219e9cbb71907dd24892bc8b4ad6bf24d44f11b9047077dbd1d753faa1"
        },
        "downloads": -1,
        "filename": "personal_knowledge_library-0.9.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c9ee7024a1d33222d39e77fb8d2bbafb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 168251,
        "upload_time": "2022-11-23T18:31:03",
        "upload_time_iso_8601": "2022-11-23T18:31:03.137975Z",
        "url": "https://files.pythonhosted.org/packages/cc/32/7ede8876c561281aedc4f00c781bec9171cc24a9737adfcfd259bc5b25fd/personal_knowledge_library-0.9.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "342ed8bbdc0a00aaac47b066f30e60b8984c189ca4222415ead4db5a72777d39",
          "md5": "e5b4cb26cb37ab0e51b2e15fd56012c8",
          "sha256": "8685067654d79d79f3b0e88f360c64584f70539996959747ad707180ed222985"
        },
        "downloads": -1,
        "filename": "personal_knowledge_library-0.9.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e5b4cb26cb37ab0e51b2e15fd56012c8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 161496,
        "upload_time": "2022-11-30T21:45:22",
        "upload_time_iso_8601": "2022-11-30T21:45:22.068105Z",
        "url": "https://files.pythonhosted.org/packages/34/2e/d8bbdc0a00aaac47b066f30e60b8984c189ca4222415ead4db5a72777d39/personal_knowledge_library-0.9.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c1fb3c0ea518c4059cc4d48c89b7e07b3e1d9968736c532bed4330db5e3bf9f9",
          "md5": "b16b4f0fdd7239603a9dc4184b76a482",
          "sha256": "0dfd0437f10ff81e8edc8467e566137aff1443f574aac942b9ffe07c967e82e1"
        },
        "downloads": -1,
        "filename": "personal_knowledge_library-0.9.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b16b4f0fdd7239603a9dc4184b76a482",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 168573,
        "upload_time": "2022-11-30T21:45:24",
        "upload_time_iso_8601": "2022-11-30T21:45:24.084408Z",
        "url": "https://files.pythonhosted.org/packages/c1/fb/3c0ea518c4059cc4d48c89b7e07b3e1d9968736c532bed4330db5e3bf9f9/personal_knowledge_library-0.9.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d3bdf1694bec663c23b3b8c713963f7a15286537423f18d01a4fc6593b7a86e3",
          "md5": "a4557c99ef7ba8861e385133b6bff0a4",
          "sha256": "04c145a3023305b8127b6449352ff586cbf24b28b034bab0ece0482a30c5ad3b"
        },
        "downloads": -1,
        "filename": "personal_knowledge_library-0.9.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a4557c99ef7ba8861e385133b6bff0a4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 161784,
        "upload_time": "2023-01-11T07:47:43",
        "upload_time_iso_8601": "2023-01-11T07:47:43.974483Z",
        "url": "https://files.pythonhosted.org/packages/d3/bd/f1694bec663c23b3b8c713963f7a15286537423f18d01a4fc6593b7a86e3/personal_knowledge_library-0.9.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d6605201034c6fbd6d134086ecced010cd01df7957b1b0a13f1b046960d412af",
          "md5": "b54253b3f253511cd5bb948e30ec137e",
          "sha256": "81da4c2a397874b5a3d4b09e60155ea02a66cccaf1f0b207b68addafdcce377c"
        },
        "downloads": -1,
        "filename": "personal_knowledge_library-0.9.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b54253b3f253511cd5bb948e30ec137e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 168822,
        "upload_time": "2023-01-11T07:47:46",
        "upload_time_iso_8601": "2023-01-11T07:47:46.056485Z",
        "url": "https://files.pythonhosted.org/packages/d6/60/5201034c6fbd6d134086ecced010cd01df7957b1b0a13f1b046960d412af/personal_knowledge_library-0.9.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c4545f9637076ae522ca406c3588726c775bc6c13acce57c972cacdca42bacc1",
          "md5": "23ebb6b585e5abb283ee077728a19e6e",
          "sha256": "228158bff6be5c4cd4286491adf7cc66d42a9aecac6183509a2fddbbc61d3b5e"
        },
        "downloads": -1,
        "filename": "personal_knowledge_library-0.9.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "23ebb6b585e5abb283ee077728a19e6e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 161910,
        "upload_time": "2023-02-23T16:47:12",
        "upload_time_iso_8601": "2023-02-23T16:47:12.040754Z",
        "url": "https://files.pythonhosted.org/packages/c4/54/5f9637076ae522ca406c3588726c775bc6c13acce57c972cacdca42bacc1/personal_knowledge_library-0.9.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c267bf25354d0def033917dafc5edd597232d7b2f063c0701b9967c2e68fbf95",
          "md5": "c7fa46cf0312dae757dd17aa84a8ef42",
          "sha256": "2a27ba8fb54cdfaf2f14d4b85293a9369c84a72c8a0623abd67ee9fcd081aacd"
        },
        "downloads": -1,
        "filename": "personal_knowledge_library-0.9.3.tar.gz",
        "has_sig": false,
        "md5_digest": "c7fa46cf0312dae757dd17aa84a8ef42",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 169073,
        "upload_time": "2023-02-23T16:47:13",
        "upload_time_iso_8601": "2023-02-23T16:47:13.813979Z",
        "url": "https://files.pythonhosted.org/packages/c2/67/bf25354d0def033917dafc5edd597232d7b2f063c0701b9967c2e68fbf95/personal_knowledge_library-0.9.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d0729c9b01d4a9142d9b1d203aaf68bca24a2e73bade74c90c83b7ec504dba03",
          "md5": "23ae55a054b40d819ef8538f6a4c2788",
          "sha256": "4b02c737d9cccd6b330f88ff0b289196c5f0672ce031f846cd681246b1f76355"
        },
        "downloads": -1,
        "filename": "personal_knowledge_library-0.9.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "23ae55a054b40d819ef8538f6a4c2788",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 161919,
        "upload_time": "2023-03-24T09:04:47",
        "upload_time_iso_8601": "2023-03-24T09:04:47.277216Z",
        "url": "https://files.pythonhosted.org/packages/d0/72/9c9b01d4a9142d9b1d203aaf68bca24a2e73bade74c90c83b7ec504dba03/personal_knowledge_library-0.9.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18250b637316de5aba9f56eb7bc068e3d625ee2402bf779eeb75d5b833a28641",
          "md5": "579bf50babb8c3e76af31e991138279c",
          "sha256": "c81543a13f11615144f10300da3483689f3c761a472a83ea89acb2e343d2f8e2"
        },
        "downloads": -1,
        "filename": "personal_knowledge_library-0.9.4.tar.gz",
        "has_sig": false,
        "md5_digest": "579bf50babb8c3e76af31e991138279c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 169103,
        "upload_time": "2023-03-24T09:04:49",
        "upload_time_iso_8601": "2023-03-24T09:04:49.212531Z",
        "url": "https://files.pythonhosted.org/packages/18/25/0b637316de5aba9f56eb7bc068e3d625ee2402bf779eeb75d5b833a28641/personal_knowledge_library-0.9.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d0729c9b01d4a9142d9b1d203aaf68bca24a2e73bade74c90c83b7ec504dba03",
        "md5": "23ae55a054b40d819ef8538f6a4c2788",
        "sha256": "4b02c737d9cccd6b330f88ff0b289196c5f0672ce031f846cd681246b1f76355"
      },
      "downloads": -1,
      "filename": "personal_knowledge_library-0.9.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "23ae55a054b40d819ef8538f6a4c2788",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 161919,
      "upload_time": "2023-03-24T09:04:47",
      "upload_time_iso_8601": "2023-03-24T09:04:47.277216Z",
      "url": "https://files.pythonhosted.org/packages/d0/72/9c9b01d4a9142d9b1d203aaf68bca24a2e73bade74c90c83b7ec504dba03/personal_knowledge_library-0.9.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "18250b637316de5aba9f56eb7bc068e3d625ee2402bf779eeb75d5b833a28641",
        "md5": "579bf50babb8c3e76af31e991138279c",
        "sha256": "c81543a13f11615144f10300da3483689f3c761a472a83ea89acb2e343d2f8e2"
      },
      "downloads": -1,
      "filename": "personal_knowledge_library-0.9.4.tar.gz",
      "has_sig": false,
      "md5_digest": "579bf50babb8c3e76af31e991138279c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 169103,
      "upload_time": "2023-03-24T09:04:49",
      "upload_time_iso_8601": "2023-03-24T09:04:49.212531Z",
      "url": "https://files.pythonhosted.org/packages/18/25/0b637316de5aba9f56eb7bc068e3d625ee2402bf779eeb75d5b833a28641/personal_knowledge_library-0.9.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}