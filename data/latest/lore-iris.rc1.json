{
  "info": {
    "author": "Lore Ai",
    "author_email": "iris@lore.ai",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# Installation\n\nYou can install Lore's Iris API with pip.\n\n    pip install lore-iris\n\nThe API has been tested with python 3.8.\n\n# Setup\n\nIn order to use Iris you need to register for a free [Iris API\naccount](https://api.iris.lore.ai/signup).  After registration you can access\nyour token at [https://api.iris.lore.ai/user](https://api.iris.lore.ai/user).\n\nYou will be prompted to enter this token when you first use the API:\n\n\t>>> from lore.iris import Client\n\t>>> client = Client()\n\t>>> results = client.search(docset_name=\"NEWS\", query_string=\"covid\")\n\tAuthorization failed.  Visit http://api.iris.lore.ai//user to get your token and then update your iris.yaml\n\tToken: \n\tUpdated to new token\n\tConfig file saved to /home/<username>/.config/iris/iris.yaml\n\t>>> len(results)\n\t100\n\nNote that the initial search query will run upon entering a valid token.\n\n\n# Basic Usage\n\nTo access the API:\n\n\tfrom lore.iris import Client\n\tclient = Client()\n\n\t# run a search\n\tresults = client.search(\n\t\t\tdocset_name=\"NEWS\",\n\t\t\tquery_string=\"covid\",\n\t\t\tfuzzy=True\n\t\t\t)\n\nTo see the number of results:\n\n\t# check number of results\n\tprint(len(results))\n\nA \"fuzzy\" query will generally include more terms than the original search string:\n\n\t>>> print(results.terms)\n\t['covid', 'coronavirus', 'pandemic', 'covid-19', 'covid 19']\n\nThe results object is an iterator:\n\n\t# get first result\n\tfirst = next(results)\n\tprint(first)\n\nYou can iterate through all results but note that this will _automatically_\ngenerate additional queries to page through all results (by default a search\ngenerates max 100 results returned in pages of size 10):\n\n\t# get all results\n\t# NOTE: this will automatically fire additional paging queries\n\tfor idx,r in enumerate(results):\n\t\tprint(f\"{idx}. {r['display_name']} (lang [{r['language']}], {r['num_pages']} pages)\")\n\n\n# Config\n\nIris reads its configuration from the file `.config/iris/iris.yaml` in your\nhome directory:\n\n    irisapi:\n        server: http://api.iris.lore.ai/\n        token: <API_TOKEN>\n        version: '0.1'\n\n\nIf this file is missing, Iris will use a default configuration without any token.\nIf you try to access the API with this configuration you will be prompted to\nvisit:\n\n    https://api.iris.lore.ai/user\n\nwhere you will see your token.  Copy this into the prompt and Iris will save\nyour updated config file to `.config/iris/iris.yaml` in your homedir.\n\n\n# Testing\n\nTo test run:\n\n    pytest tests/test_api.py",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://api.iris.lore.ai",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lore-iris",
    "package_url": "https://pypi.org/project/lore-iris/",
    "platform": "",
    "project_url": "https://pypi.org/project/lore-iris/",
    "project_urls": {
      "Homepage": "https://api.iris.lore.ai"
    },
    "release_url": "https://pypi.org/project/lore-iris/0.0.1b0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Programmatic access to thousands of public documents.",
    "version": "0.0.1b0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8890005,
  "releases": {
    "0.0.1b0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8aef4f7d878d827d22eea7279ffc0ec86300fcbc662c4221654053fbe84eb560",
          "md5": "6d5f9ca9b0dd686d7ce6de7568c98c0c",
          "sha256": "ab38c975f3eaaf554bd8a798fb15854de3aa4d1801eef4c3ded1c5fd121551d1"
        },
        "downloads": -1,
        "filename": "lore-iris-0.0.1b0.tar.gz",
        "has_sig": false,
        "md5_digest": "6d5f9ca9b0dd686d7ce6de7568c98c0c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5927,
        "upload_time": "2020-12-13T15:45:53",
        "upload_time_iso_8601": "2020-12-13T15:45:53.346908Z",
        "url": "https://files.pythonhosted.org/packages/8a/ef/4f7d878d827d22eea7279ffc0ec86300fcbc662c4221654053fbe84eb560/lore-iris-0.0.1b0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8aef4f7d878d827d22eea7279ffc0ec86300fcbc662c4221654053fbe84eb560",
        "md5": "6d5f9ca9b0dd686d7ce6de7568c98c0c",
        "sha256": "ab38c975f3eaaf554bd8a798fb15854de3aa4d1801eef4c3ded1c5fd121551d1"
      },
      "downloads": -1,
      "filename": "lore-iris-0.0.1b0.tar.gz",
      "has_sig": false,
      "md5_digest": "6d5f9ca9b0dd686d7ce6de7568c98c0c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5927,
      "upload_time": "2020-12-13T15:45:53",
      "upload_time_iso_8601": "2020-12-13T15:45:53.346908Z",
      "url": "https://files.pythonhosted.org/packages/8a/ef/4f7d878d827d22eea7279ffc0ec86300fcbc662c4221654053fbe84eb560/lore-iris-0.0.1b0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}