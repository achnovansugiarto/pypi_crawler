{
  "info": {
    "author": "Nikolay Novik",
    "author_email": "nickolainovik@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Web Environment",
      "Framework :: AsyncIO",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "aiobotocore\n===========\n.. image:: https://travis-ci.com/aio-libs/aiobotocore.svg?branch=master\n    :target: https://travis-ci.com/aio-libs/aiobotocore\n.. image:: https://codecov.io/gh/aio-libs/aiobotocore/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/aio-libs/aiobotocore\n.. image:: https://readthedocs.org/projects/aiobotocore/badge/?version=latest\n    :target: https://aiobotocore.readthedocs.io/en/latest/?badge=latest\n    :alt: Documentation Status\n.. image:: https://img.shields.io/pypi/v/aiobotocore.svg\n    :target: https://pypi.python.org/pypi/aiobotocore\n.. image:: https://badges.gitter.im/Join%20Chat.svg\n    :target: https://gitter.im/aio-libs/aiobotocore\n    :alt: Chat on Gitter\n\n\n\nAsync client for amazon services using botocore_ and aiohttp_/asyncio_.\n\nThis library is a mostly full featured asynchronous version of botocore.\n\n\nInstall\n-------\n::\n\n    $ pip install aiobotocore\n\n\nBasic Example\n-------------\n\n.. code:: python\n\n    import asyncio\n    from aiobotocore.session import get_session\n\n    AWS_ACCESS_KEY_ID = \"xxx\"\n    AWS_SECRET_ACCESS_KEY = \"xxx\"\n\n\n    async def go():\n        bucket = 'dataintake'\n        filename = 'dummy.bin'\n        folder = 'aiobotocore'\n        key = '{}/{}'.format(folder, filename)\n\n        session = get_session()\n        async with session.create_client('s3', region_name='us-west-2',\n                                       aws_secret_access_key=AWS_SECRET_ACCESS_KEY,\n                                       aws_access_key_id=AWS_ACCESS_KEY_ID) as client:\n            # upload object to amazon s3\n            data = b'\\x01'*1024\n            resp = await client.put_object(Bucket=bucket,\n                                                Key=key,\n                                                Body=data)\n            print(resp)\n\n            # getting s3 object properties of file we just uploaded\n            resp = await client.get_object_acl(Bucket=bucket, Key=key)\n            print(resp)\n\n            # get object from s3\n            response = await client.get_object(Bucket=bucket, Key=key)\n            # this will ensure the connection is correctly re-used/closed\n            async with response['Body'] as stream:\n                assert await stream.read() == data\n\n            # list s3 objects using paginator\n            paginator = client.get_paginator('list_objects')\n            async for result in paginator.paginate(Bucket=bucket, Prefix=folder):\n                for c in result.get('Contents', []):\n                    print(c)\n\n            # delete object from s3\n            resp = await client.delete_object(Bucket=bucket, Key=key)\n            print(resp)\n\n    loop = asyncio.get_event_loop()\n    loop.run_until_complete(go())\n\n\n\nContext Manager Examples\n------------------------\n\n.. code:: python\n\n    from contextlib import AsyncExitStack\n\n    from aiobotocore.session import AioSession\n\n\n    # How to use in existing context manager\n    class Manager:\n        def __init__(self):\n            self._exit_stack = AsyncExitStack()\n            self._s3_client = None\n\n        async def __aenter__(self):\n            session = AioSession()\n            self._s3_client = await self._exit_stack.enter_async_context(session.create_client('s3'))\n\n        async def __aexit__(self, exc_type, exc_val, exc_tb):\n            await self._exit_stack.__aexit__(exc_type, exc_val, exc_tb)\n\n    # How to use with an external exit_stack\n    async def create_s3_client(session: AioSession, exit_stack: AsyncExitStack):\n        # Create client and add cleanup\n        client = await exit_stack.enter_async_context(session.create_client('s3'))\n        return client\n\n\n    async def non_manager_example():\n        session = AioSession()\n\n        async with AsyncExitStack() as exit_stack:\n            s3_client = await create_s3_client(session, exit_stack)\n\n            # do work with s3_client\n\n\n\nSupported AWS Services\n----------------------\n\nThis is a non-exuastive list of what tests aiobotocore runs against AWS services. Not all methods are tested but we aim to test the majority of\ncommonly used methods.\n\n+----------------+-----------------------+\n| Service        | Status                |\n+================+=======================+\n| S3             | Working               |\n+----------------+-----------------------+\n| DynamoDB       | Basic methods tested  |\n+----------------+-----------------------+\n| SNS            | Basic methods tested  |\n+----------------+-----------------------+\n| SQS            | Basic methods tested  |\n+----------------+-----------------------+\n| CloudFormation | Stack creation tested |\n+----------------+-----------------------+\n| Kinesis        | Basic methods tested  |\n+----------------+-----------------------+\n\nDue to the way boto3 is implemented, its highly likely that even if services are not listed above that you can take any `boto3.client('service')` and\nstick `await` infront of methods to make them async, e.g. `await client.list_named_queries()` would asynchronous list all of the named Athena queries.\n\nIf a service is not listed here and you could do with some tests or examples feel free to raise an issue.\n\nRun Tests\n---------\n\nMake sure you have development requirements installed and your amazon key and\nsecret accessible via environment variables:\n\n::\n\n    $ cd aiobotocore\n    $ export AWS_ACCESS_KEY_ID=xxx\n    $ export AWS_SECRET_ACCESS_KEY=xxx\n    $ pipenv sync --dev\n\nExecute tests suite:\n\n::\n\n    $ py.test -v tests\n\n\nMailing List\n------------\n\nhttps://groups.google.com/forum/#!forum/aio-libs\n\n\nRequirements\n------------\n* Python_ 3.6+\n* aiohttp_\n* botocore_\n\n.. _Python: https://www.python.org\n.. _asyncio: https://docs.python.org/3/library/asyncio.html\n.. _botocore: https://github.com/boto/botocore\n.. _aiohttp: https://github.com/aio-libs/aiohttp\n\nawscli\n------\n\nawscli depends on a single version of botocore, however aiobotocore only supports a\nspecific range of botocore versions. To ensure you install the latest version of\nawscli that your specific combination or aiobotocore and botocore can support use::\n\n    pip install -U aiobotocore[awscli]\n\nChanges\n-------\n1.4.1 (2021-08-24)\n^^^^^^^^^^^^^^^^^^\n* put backwards incompatible changes behind ``AIOBOTOCORE_DEPRECATED_1_4_0_APIS`` env var.  This means that `#876 <https://github.com/aio-libs/aiobotocore/issues/876>`_ will not work unless this env var has been set to 0.\n\n1.4.0 (2021-08-20)\n^^^^^^^^^^^^^^^^^^\n* fix retries via config `#877 <https://github.com/aio-libs/aiobotocore/pull/877>`_\n* remove AioSession and get_session top level names to match botocore_\n* change exceptions raised to match those of botocore_, see `mappings <https://github.com/aio-libs/aiobotocore/pull/877/files#diff-b1675e1eb4276bfae81107cda919ba446e4ce1b1e228a9e878d65dd1f474bf8cR162-R181>`_\n\n1.3.3 (2021-07-12)\n^^^^^^^^^^^^^^^^^^\n* fix AioJSONParser `#872 <https://github.com/aio-libs/aiobotocore/issues/872>`_\n\n1.3.2 (2021-07-07)\n^^^^^^^^^^^^^^^^^^\n* Bump to botocore_ to `1.20.106 <https://github.com/boto/botocore/tree/1.20.106>`_\n\n1.3.1 (2021-06-11)\n^^^^^^^^^^^^^^^^^^\n* TCPConnector: change deprecated ssl_context to ssl\n* fix non awaited generate presigned url calls `#868 <https://github.com/aio-libs/aiobotocore/issues/868>`_\n\n1.3.0 (2021-04-09)\n^^^^^^^^^^^^^^^^^^\n* Bump to botocore_ to `1.20.49 <https://github.com/boto/botocore/tree/1.20.49>`_ `#856 <https://github.com/aio-libs/aiobotocore/pull/856>`_\n\n1.2.2 (2021-03-11)\n^^^^^^^^^^^^^^^^^^\n* Await call to async method _load_creds_via_assume_role `#858 <https://github.com/aio-libs/aiobotocore/pull/858>`_ (thanks `@puzza007 <https://github.com/puzza007>`_)\n\n1.2.1 (2021-02-10)\n^^^^^^^^^^^^^^^^^^\n* verify strings are now correctly passed to aiohttp.TCPConnector `#851 <https://github.com/aio-libs/aiobotocore/pull/851>`_ (thanks `@FHTMitchell <https://github.com/FHTMitchell>`_)\n\n1.2.0 (2021-01-11)\n^^^^^^^^^^^^^^^^^^\n* bump botocore to `1.19.52 <https://github.com/boto/botocore/tree/1.19.52>`_\n* use passed in http_session_cls param to create_client `#797 <https://github.com/aio-libs/aiobotocore/issues/797>`_\n\n1.1.2 (2020-10-07)\n^^^^^^^^^^^^^^^^^^\n* fix AioPageIterator search method #831 (thanks `@joseph-jones <https://github.com/joseph-jones>`_)\n\n1.1.1 (2020-08-31)\n^^^^^^^^^^^^^^^^^^\n* fix s3 region redirect bug #825\n\n1.1.0 (2020-08-18)\n^^^^^^^^^^^^^^^^^^\n* bump botocore to 1.17.44\n\n1.0.7 (2020-06-04)\n^^^^^^^^^^^^^^^^^^\n* fix generate_db_auth_token via #816\n\n1.0.6 (2020-06-04)\n^^^^^^^^^^^^^^^^^^\n* revert __getattr__ fix as it breaks ddtrace\n\n1.0.5 (2020-06-03)\n^^^^^^^^^^^^^^^^^^\n* Fixed AioSession.get_service_data emit call #811 via #812\n* Fixed async __getattr__ #789 via #803\n\n1.0.4 (2020-04-15)\n^^^^^^^^^^^^^^^^^^\n* Fixed S3 Presigned Post not being async\n\n1.0.3 (2020-04-09)\n^^^^^^^^^^^^^^^^^^\n* Fixes typo when using credential process\n\n1.0.2 (2020-04-05)\n^^^^^^^^^^^^^^^^^^\n* Disable Client.__getattr__ emit for now #789\n\n1.0.1 (2020-04-01)\n^^^^^^^^^^^^^^^^^^\n* Fixed signing requests with explicit credentials\n\n1.0.0 (2020-03-31)\n^^^^^^^^^^^^^^^^^^\n* API breaking: The result of create_client is now a required async context class\n* Credential refresh should now work\n* generate_presigned_url is now an async call along with other credential methods\n* Credentials.[access_key/secret_key/token] now raise NotImplementedError because\n  they won't call refresh like botocore. Instead should use get_frozen_credentials\n  async method\n* Bump botocore and extras\n\n0.12.0 (2020-02-23)\n^^^^^^^^^^^^^^^^^^^\n* Bump botocore and extras\n* Drop support for 3.5 given we are unable to test it with moto\n  and it will soon be unsupported\n* Remove loop parameters for Python 3.8 compliance\n* Remove deprecated AioPageIterator.next_page\n\n0.11.1 (2020-01-03)\n^^^^^^^^^^^^^^^^^^^\n* Fixed event streaming API calls like S3 Select.\n\n0.11.0 (2019-11-12)\n^^^^^^^^^^^^^^^^^^^\n* replace CaseInsensitiveDict with urllib3 equivalent #744\n  (thanks to inspiration from @craigmccarter and @kevchentw)\n* bump botocore to 1.13.14\n* fix for mismatched botocore method replacements\n\n0.10.4 (2019-10-24)\n^^^^^^^^^^^^^^^^^^^\n* Make AioBaseClient.close method async #724 (thanks @bsitruk)\n* Bump awscli, boto3, botocore #735 (thanks @bbrendon)\n* switch paginator to async_generator, add result_key_iters\n  (deprecate next_page method)\n\n0.10.3 (2019-07-17)\n^^^^^^^^^^^^^^^^^^^\n* Bump botocore and extras\n\n0.10.2 (2019-02-11)\n^^^^^^^^^^^^^^^^^^^\n* Fix response-received emitted event #682\n\n0.10.1 (2019-02-08)\n^^^^^^^^^^^^^^^^^^^\n* Make tests pass with pytest 4.1 #669 (thanks @yan12125)\n* Support Python 3.7 #671 (thanks to @yan12125)\n* Update RTD build config #672 (thanks @willingc)\n* Bump to botocore 1.12.91 #679\n\n0.10.0 (2018-12-09)\n^^^^^^^^^^^^^^^^^^^\n* Update to botocore 1.12.49 #639 (thanks @terrycain)\n\n0.9.4 (2018-08-08)\n^^^^^^^^^^^^^^^^^^\n* Add ClientPayloadError as retryable exception\n\n0.9.3 (2018-07-16)\n^^^^^^^^^^^^^^^^^^\n* Bring botocore up to date\n\n0.9.2 (2018-05-05)\n^^^^^^^^^^^^^^^^^^\n* bump aiohttp requirement to fix read timeouts\n\n0.9.1 (2018-05-04)\n^^^^^^^^^^^^^^^^^^\n* fix timeout bug introduced in last release\n\n0.9.0 (2018-06-01)\n^^^^^^^^^^^^^^^^^^\n* bump aiohttp to 3.3.x\n* remove unneeded set_socket_timeout\n\n0.8.0 (2018-05-07)\n^^^^^^^^^^^^^^^^^^\n* Fix pagination #573 (thanks @adamrothman)\n* Enabled several s3 tests via moto\n* Bring botocore up to date\n\n0.7.0 (2018-05-01)\n^^^^^^^^^^^^^^^^^^\n* Just version bump\n\n0.6.1a0 (2018-05-01)\n^^^^^^^^^^^^^^^^^^^^\n* bump to aiohttp 3.1.x\n* switch tests to Python 3.5+\n* switch to native coroutines\n* fix non-streaming body timeout retries\n\n0.6.0 (2018-03-04)\n^^^^^^^^^^^^^^^^^^\n* Upgrade to aiohttp>=3.0.0 #536 (thanks @Gr1N)\n\n0.5.3 (2018-02-23)\n^^^^^^^^^^^^^^^^^^\n* Fixed waiters #523 (thanks @dalazx)\n* fix conn_timeout #485\n\n0.5.2 (2017-12-06)\n^^^^^^^^^^^^^^^^^^\n* Updated awscli dependency #461\n\n0.5.1 (2017-11-10)\n^^^^^^^^^^^^^^^^^^\n* Disabled compressed response #430\n\n0.5.0 (2017-11-10)\n^^^^^^^^^^^^^^^^^^\n* Fix error botocore error checking #190\n* Update supported botocore requirement to: >=1.7.28, <=1.7.40\n* Bump aiohttp requirement to support compressed responses correctly #298\n\n0.4.5 (2017-09-05)\n^^^^^^^^^^^^^^^^^^\n* Added SQS examples and tests #336\n* Changed requirements.txt structure #336\n* bump to botocore 1.7.4\n* Added DynamoDB examples and tests #340\n\n\n0.4.4 (2017-08-16)\n^^^^^^^^^^^^^^^^^^\n* add the supported versions of boto3 to extras require #324\n\n0.4.3 (2017-07-05)\n^^^^^^^^^^^^^^^^^^\n* add the supported versions of awscli to extras require #273 (thanks @graingert)\n\n0.4.2 (2017-07-03)\n^^^^^^^^^^^^^^^^^^\n* update supported aiohttp requirement to: >=2.0.4, <=2.3.0\n* update supported botocore requirement to: >=1.5.71, <=1.5.78\n\n0.4.1 (2017-06-27)\n^^^^^^^^^^^^^^^^^^\n* fix redirects #268\n\n0.4.0 (2017-06-19)\n^^^^^^^^^^^^^^^^^^\n* update botocore requirement to: botocore>=1.5.34, <=1.5.70\n* fix read_timeout due to #245\n* implement set_socket_timeout\n\n0.3.3 (2017-05-22)\n^^^^^^^^^^^^^^^^^^\n* switch to PEP 440 version parser to support 'dev' versions\n\n0.3.2 (2017-05-22)\n^^^^^^^^^^^^^^^^^^\n* Fix botocore integration\n* Provisional fix for aiohttp 2.x stream support\n* update botocore requirement to: botocore>=1.5.34, <=1.5.52\n\n0.3.1 (2017-04-18)\n^^^^^^^^^^^^^^^^^^\n* Fixed Waiter support\n\n0.3.0 (2017-04-01)\n^^^^^^^^^^^^^^^^^^\n* Added support for aiohttp>=2.0.4 (thanks @achimnol)\n* update botocore requirement to: botocore>=1.5.0, <=1.5.33\n\n0.2.3 (2017-03-22)\n^^^^^^^^^^^^^^^^^^\n* update botocore requirement to: botocore>=1.5.0, <1.5.29\n\n0.2.2 (2017-03-07)\n^^^^^^^^^^^^^^^^^^\n* set aiobotocore.__all__ for * imports #121 (thanks @graingert)\n* fix ETag in head_object response #132\n\n0.2.1 (2017-02-01)\n^^^^^^^^^^^^^^^^^^\n* Normalize headers and handle redirection by botocore #115 (thanks @Fedorof)\n\n0.2.0 (2017-01-30)\n^^^^^^^^^^^^^^^^^^\n* add support for proxies (thanks @jjonek)\n* remove AioConfig verify_ssl connector_arg as this is handled by the\n  create_client verify param\n* remove AioConfig limit connector_arg as this is now handled by\n  by the Config `max_pool_connections` property (note default is 10)\n\n0.1.1 (2017-01-16)\n^^^^^^^^^^^^^^^^^^\n* botocore updated to version 1.5.0\n\n0.1.0 (2017-01-12)\n^^^^^^^^^^^^^^^^^^\n* Pass timeout to aiohttp.request to enforce read_timeout #86 (thanks @vharitonsky)\n  (bumped up to next semantic version due to read_timeout enabling change)\n\n0.0.6 (2016-11-19)\n^^^^^^^^^^^^^^^^^^\n\n* Added enforcement of plain response #57 (thanks @rymir)\n* botocore updated to version 1.4.73 #74 (thanks @vas3k)\n\n\n0.0.5 (2016-06-01)\n^^^^^^^^^^^^^^^^^^\n\n* Initial alpha release",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "https://pypi.python.org/pypi/aiobotocore",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/aio-libs/aiobotocore",
    "keywords": "",
    "license": "Apache 2",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aiobotocore-chrisglass",
    "package_url": "https://pypi.org/project/aiobotocore-chrisglass/",
    "platform": "",
    "project_url": "https://pypi.org/project/aiobotocore-chrisglass/",
    "project_urls": {
      "Download": "https://pypi.python.org/pypi/aiobotocore",
      "Homepage": "https://github.com/aio-libs/aiobotocore"
    },
    "release_url": "https://pypi.org/project/aiobotocore-chrisglass/1.4.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Async client for aws services using botocore and aiohttp",
    "version": "1.4.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11497061,
  "releases": {
    "1.4.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9c68cbcfd86233447322abec4770871b20ee3d81d1f14453c17aca1bb18d5e46",
          "md5": "f38248c03d2bf46fd14c52d6d7eaadb2",
          "sha256": "31f3750a222bd4c7cca46cd090fad9594480a8918e20a36b250f55840d062aac"
        },
        "downloads": -1,
        "filename": "aiobotocore-chrisglass-1.4.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f38248c03d2bf46fd14c52d6d7eaadb2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 52508,
        "upload_time": "2021-09-20T09:52:44",
        "upload_time_iso_8601": "2021-09-20T09:52:44.857197Z",
        "url": "https://files.pythonhosted.org/packages/9c/68/cbcfd86233447322abec4770871b20ee3d81d1f14453c17aca1bb18d5e46/aiobotocore-chrisglass-1.4.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9c68cbcfd86233447322abec4770871b20ee3d81d1f14453c17aca1bb18d5e46",
        "md5": "f38248c03d2bf46fd14c52d6d7eaadb2",
        "sha256": "31f3750a222bd4c7cca46cd090fad9594480a8918e20a36b250f55840d062aac"
      },
      "downloads": -1,
      "filename": "aiobotocore-chrisglass-1.4.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "f38248c03d2bf46fd14c52d6d7eaadb2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 52508,
      "upload_time": "2021-09-20T09:52:44",
      "upload_time_iso_8601": "2021-09-20T09:52:44.857197Z",
      "url": "https://files.pythonhosted.org/packages/9c/68/cbcfd86233447322abec4770871b20ee3d81d1f14453c17aca1bb18d5e46/aiobotocore-chrisglass-1.4.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}