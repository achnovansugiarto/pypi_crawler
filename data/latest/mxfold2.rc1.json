{
  "info": {
    "author": "Kengo Sato",
    "author_email": "satoken@bio.keio.ac.jp",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# MXfold2\nRNA secondary structure prediction using deep learning with thermodynamic integrations  \n\n## Installation\n\n### System requirements\n* python (>=3.7)\n* pytorch (>=1.4)\n* C++17 compatible compiler (tested on Apple clang version 12.0.0 and GCC version 7.4.0) (optional)\n* cmake (>=3.10) (optional)\n\n### Install from wheel\n\nWe provide the wheel python packages for several platforms at [the release](https://github.com/keio-bioinformatics/mxfold2/releases). You can download an appropriate package and install it as follows:\n\n    % pip3 install mxfold2-0.1.1-cp38-cp38-macosx_10_15_x86_64.whl\n\n### Install from sdist\n\nYou can build and install from the source distribution downloaded from [the release](https://github.com/keio-bioinformatics/mxfold2/releases) as follows:\n\n    % pip3 install mxfold2-0.1.1.tar.gz\n\nTo build MXfold2 from the source distribution, you need a C++17 compatible compiler and cmake.\n\n## Prediction\n\nYou can predict RNA secondary structures of given FASTA-formatted RNA sequences like:\n\n    % mxfold2 predict test.fa\n    >DS4440\n    GGAUGGAUGUCUGAGCGGUUGAAAGAGUCGGUCUUGAAAACCGAAGUAUUGAUAGGAAUACCGGGGGUUCGAAUCCCUCUCCAUCCG\n    (((((((........(((((..((((.....))))...)))))...................(((((.......)))))))))))). (24.8)\n\nBy default, MXfold2 employs the parameters trained from TrainSetA and TrainSetB (see our paper).\n\nWe provide other pre-trained models used in our paper. You can download [``models-0.1.0.tar.gz``](https://github.com/keio-bioinformatics/mxfold2/releases/download/v0.1.0/models-0.1.0.tar.gz) and extract the pre-trained models from it as follows:\n\n    % tar -zxvf models-0.1.0.tar.gz\n\nThen, you can predict RNA secondary structures of given FASTA-formatted RNA sequences like:\n\n    % mxfold2 predict @./models/TrainSetA.conf test.fa\n    >DS4440\n    GGAUGGAUGUCUGAGCGGUUGAAAGAGUCGGUCUUGAAAACCGAAGUAUUGAUAGGAAUACCGGGGGUUCGAAUCCCUCUCCAUCCG\n    (((((((.((....))...........(((((.......))))).(((((......))))).(((((.......)))))))))))). (24.3)\n\nHere, ``./models/TrainSetA.conf`` specifies a lot of parameters including hyper-parameters of DNN models.\n\n## Training\n\nMXfold2 can train its parameters from BPSEQ-formatted RNA sequences. You can also download the datasets used in our paper at [the release](https://github.com/keio-bioinformatics/mxfold2/releases/tag/v0.1.0). \n\n    % mxfold2 train --model MixC --param model.pth --save-config model.conf data/TrainSetA.lst\n\nYou can specify a lot of model's hyper-parameters. See ``mxfold2 train --help``. In this example, the model's hyper-parameters and the trained parameters are saved in ``model.conf`` and ``model.pth``, respectively.\n\n## Web server\n\nComming soon.\n\n\n## References\n\n* Sato, K., Akiyama, M., Sakakibara, Y.: RNA secondary structure prediction using deep learning with thermodynamic integrations,  [preprint](https://www.biorxiv.org/content/10.1101/2020.08.10.244442v1).\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/keio-bioinformatics/mxfold2",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mxfold2",
    "package_url": "https://pypi.org/project/mxfold2/",
    "platform": null,
    "project_url": "https://pypi.org/project/mxfold2/",
    "project_urls": {
      "Homepage": "https://github.com/keio-bioinformatics/mxfold2",
      "Repository": "https://github.com/keio-bioinformatics/mxfold2"
    },
    "release_url": "https://pypi.org/project/mxfold2/0.1.1/",
    "requires_dist": [
      "numpy (>=1.18,<2.0)",
      "torch (>=1.4,<2.0)",
      "torchvision (>=0,<1)",
      "tqdm (>=4.40,<5.0)",
      "wheel (>=0.35.1,<0.36.0)"
    ],
    "requires_python": ">=3.7,<4.0",
    "summary": "RNA secondary structure prediction using deep neural networks with thermodynamic integrations",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14298687,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "44a7df1df576b2d706ceebb600d84703279d5b25d28ee5ec98861cf84c437207",
          "md5": "86902f5a75188e0809e706d4959c9e82",
          "sha256": "8343dce235b16e782485cd269f41a08a185339f60f07f1912aa4cf145194cfc7"
        },
        "downloads": -1,
        "filename": "mxfold2-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "86902f5a75188e0809e706d4959c9e82",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 3711007,
        "upload_time": "2022-06-30T17:31:41",
        "upload_time_iso_8601": "2022-06-30T17:31:41.957493Z",
        "url": "https://files.pythonhosted.org/packages/44/a7/df1df576b2d706ceebb600d84703279d5b25d28ee5ec98861cf84c437207/mxfold2-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7a6fb9bf5423e82c49c04747581e0ee616844bd23cdbc4a561e50cb16107da84",
          "md5": "4a21620aa4668e6efbdaa6f10a17a87c",
          "sha256": "9f39c6ff4138212d1ad2639005f5c05ffb4df0f7e22f5e7ad49466a05aa047e5"
        },
        "downloads": -1,
        "filename": "mxfold2-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4a21620aa4668e6efbdaa6f10a17a87c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 3507545,
        "upload_time": "2022-06-30T17:31:45",
        "upload_time_iso_8601": "2022-06-30T17:31:45.165527Z",
        "url": "https://files.pythonhosted.org/packages/7a/6f/b9bf5423e82c49c04747581e0ee616844bd23cdbc4a561e50cb16107da84/mxfold2-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "44a7df1df576b2d706ceebb600d84703279d5b25d28ee5ec98861cf84c437207",
        "md5": "86902f5a75188e0809e706d4959c9e82",
        "sha256": "8343dce235b16e782485cd269f41a08a185339f60f07f1912aa4cf145194cfc7"
      },
      "downloads": -1,
      "filename": "mxfold2-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "86902f5a75188e0809e706d4959c9e82",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<4.0",
      "size": 3711007,
      "upload_time": "2022-06-30T17:31:41",
      "upload_time_iso_8601": "2022-06-30T17:31:41.957493Z",
      "url": "https://files.pythonhosted.org/packages/44/a7/df1df576b2d706ceebb600d84703279d5b25d28ee5ec98861cf84c437207/mxfold2-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7a6fb9bf5423e82c49c04747581e0ee616844bd23cdbc4a561e50cb16107da84",
        "md5": "4a21620aa4668e6efbdaa6f10a17a87c",
        "sha256": "9f39c6ff4138212d1ad2639005f5c05ffb4df0f7e22f5e7ad49466a05aa047e5"
      },
      "downloads": -1,
      "filename": "mxfold2-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "4a21620aa4668e6efbdaa6f10a17a87c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7,<4.0",
      "size": 3507545,
      "upload_time": "2022-06-30T17:31:45",
      "upload_time_iso_8601": "2022-06-30T17:31:45.165527Z",
      "url": "https://files.pythonhosted.org/packages/7a/6f/b9bf5423e82c49c04747581e0ee616844bd23cdbc4a561e50cb16107da84/mxfold2-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}