{
  "info": {
    "author": "CGnal s.r.l.",
    "author_email": "info@cgnal.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "\n<div align=\"center\">\n  <img src=\"https://cgnal.com/wp-content/uploads/2016/05/Gnal_logo.png\"><br>\n</div>\n\n-----------------\n\nCGnal core\n====\n\n[![PyPI](https://img.shields.io/pypi/v/cgnal-core.svg)](https://pypi.python.org/pypi/cgnal-core)\n[![PyPI version](https://img.shields.io/pypi/pyversions/cgnal-core.svg)](https://pypi.python.org/pypi/cgnal-core)\n[![Documentation](https://img.shields.io/badge/docs-latest-brightgreen.svg)](https://cgnal.github.io/cgnal-core/)\n![Python package](https://github.com/CGnal/cgnal-core/workflows/CI%20-%20Build%20and%20Test/badge.svg)\n\n--------------------------------------------------------------------------------\n\n\nA Python library defining data structures optimized for machine learning pipelines \n\n\n## What is it ?\n**cgnal-core** is a Python package with modular design that provides powerful abstractions to build data \ningestion pipelines and run end to end machine learning pipelines. \nThe library offers lightweight object-oriented interface to MongoDB as well as Pandas based data structures. \nThe aim of the library is to provide extensive support for developing machine learning based applications \nwith a focus on practicing clean code and modular design. \n\n## Features\nSome cool features that we are proud to mention are: \n\n### Data layers \n1. Archiver: Offers an object-oriented design to perform ETL on Mongodb collections as well as Pandas DataFrames.\n2. DAO: Data Access Object to allow archivers to serialize domain objects into the proper persistence layer support \nobject (e.g. in the case of MongoDB, a DAO serializes a domain object into a MongoDB document) and to parse objects\nretrieved from the given persistence layer in the correct representation in our framework (e.g. a text will be parsed in \na Document while tabular data will be parsed in a pandas DataFrame).\n3. Database: Object representing a relational database\n4. Table: Object representing a table of a relational database\n\n### Data Model\nOffers the following data structures: \n1. Document : Data structure specifically designed to work with NLP applications that parses a json-like document \ninto a couple of uuid and dictionary of information.\n2. Sample : Data structure representing an observation (a.k.a. sample) as used in machine learning applications\n3. MultiFeatureSample : Data structure representing an observation defined by a nested list of arrays.\n4. Dataset : Data structure designed to be used specifically for machine learning applications representing a collection \nof samples.\n\n## Installation\nFrom pypi server\n```\npip install cgnal-core\n```\n\nFrom source\n```\ngit clone https://github.com/CGnal/cgnal-core\ncd cgnal-core\nmake install\n```\n\n## Tests \n```\nmake tests\n```\n\n## Checks \nTo run predefined checks (unit-tests, linting checks, formatting checks and static typing checks):\n```\nmake checks\n```\n\n## Examples \n\n#### Data Layers\nCreating a Database of Table objects\n\n```python\nimport pandas as pd\nfrom cgnal.core.data.layer.pandas.databases import Database\n\n# sample df\ndf1 = pd.DataFrame([[1, 2, 3], [6, 5, 4]], columns=['a', 'b', 'c'])\n\n# creating a database \ndb = Database('/path/to/db')\ntable1 = db.table('df1')\n\n# write table to path\ntable1.write(df1)\n# get path  \ntable1.filename\n\n# convert to pandas dataframe \ntable1.to_df()\n\n# get table from database \ndb.__getitem__('df1')\n```\n\nUsing an Archiver with Dao objects\n\n```python\nfrom cgnal.core.data.layer.pandas.archivers import CsvArchiver\nfrom cgnal.core.data.layer.pandas.dao import DataFrameDAO\n\n# create a dao object \ndao = DataFrameDAO()\n\n# create a csv archiver \narch = CsvArchiver('/path/to/csvfile.csv', dao)\n\n# get pandas dataframe \narch.data\n\n# retrieve a single document object \ndoc = next(arch.retrieve())\n# retrieve a list of document objects \ndocs = [i for i in arch.retrieve()]\n# retrieve a document by it's id \narch.retrieveById(doc.uuid)\n\n# archive a single document \ndoc = next(self.a.retrieve())\n# update column_name field of the document with the given value\ndoc.data.update({'column_name': value})\n# archive the document \narch.archiveOne(doc)\n# archive list of documents\na.archiveMany([doc, doc])\n\n# get a document object as a pandas series \narch.dao.get(doc)\n```\n#### Data Model\n\nCreating a PandasDataset object\n\n```python\nimport pandas as pd\nfrom cgnal.core.data.model.ml import PandasDataset\n\ndataset = PandasDataset(features=pd.concat([pd.Series([1, np.nan, 2, 3], name=\"feat1\"),\n                                            pd.Series([1, 2, 3, 4], name=\"feat2\")], axis=1),\n                        labels=pd.Series([0, 0, 0, 1], name=\"Label\"))\n\n# access features as a pandas dataframe \ndataset.features\n# access labels as pandas dataframe \ndataset.labels\n# access features as a python dictionary \ndataset.getFeaturesAs('dict')\n# access features as numpy array \ndataset.getFeaturesAs('array')\n\n# indexing operations \n# access features and labels at the given index as a pandas dataframe  \ndataset.loc(2).features\ndataset.loc(2).labels\n```\n\nCreating a PandasTimeIndexedDataset object\n\n```python\nimport pandas as pd\nfrom cgnal.core.data.model.ml import PandasTimeIndexedDataset\n\ndateStr = [str(x) for x in pd.date_range('2010-01-01', '2010-01-04')]\ndataset = PandasTimeIndexedDataset(\n    features=pd.concat([\n        pd.Series([1, np.nan, 2, 3], index=dateStr, name=\"feat1\"),\n        pd.Series([1, 2, 3, 4], index=dateStr, name=\"feat2\")\n    ], axis=1))\n```\n\n## How to contribute ? \n\nWe are very much willing to welcome any kind of contribution whether it is bug report, bug fixes, contributions to the \nexisting codebase or improving the documentation. \n\n### Where to start ? \nPlease look at the [Github issues tab](https://github.com/CGnal/cgnal-core/issues) to start working on open \nissues \n\n### Contributing to cgnal-core \nPlease make sure the general guidelines for contributing to the code base are respected\n1. [Fork](https://docs.github.com/en/get-started/quickstart/contributing-to-projects) the cgnal-core repository. \n2. Create/choose an issue to work on in the [Github issues page](https://github.com/CGnal/cgnal-core/issues). \n3. [Create a new branch](https://docs.github.com/en/get-started/quickstart/github-flow) to work on the issue. \n4. Commit your changes and run the tests to make sure the changes do not break any test. \n5. Open a Pull Request on Github referencing the issue.\n6. Once the PR is approved, the maintainers will merge it on the main branch.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/CGnal/cgnal-core",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cgnal-core",
    "package_url": "https://pypi.org/project/cgnal-core/",
    "platform": null,
    "project_url": "https://pypi.org/project/cgnal-core/",
    "project_urls": {
      "Homepage": "https://github.com/CGnal/cgnal-core"
    },
    "release_url": "https://pypi.org/project/cgnal-core/2.0.2/",
    "requires_dist": [
      "cfg-load (>=0.8)",
      "deprecated (>=1.2.12)",
      "dill (>=0.3)",
      "pandas (>=1.0)",
      "pymongo (>=4.0)",
      "scipy (>=1.7.3)",
      "setuptools (>=47.1)",
      "typeguard (>=2.13.0)",
      "typing-extensions (>=4.0)"
    ],
    "requires_python": "~=3.7",
    "summary": "A Python library of data structures optimized for machine learning tasks",
    "version": "2.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13208101,
  "releases": {
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c8a11f6b202f344d9757576b8174f972b5d72ff1c7571b37fe8a8e8b7494296b",
          "md5": "cff989ec012d94531998d9c3dbdf4424",
          "sha256": "83f9244cb27bc695f45eaad8874ed8c2736f68fb6b40c9cba5b5d7cd413d3be3"
        },
        "downloads": -1,
        "filename": "cgnal_core-2.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cff989ec012d94531998d9c3dbdf4424",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.7",
        "size": 41502,
        "upload_time": "2022-02-24T17:54:41",
        "upload_time_iso_8601": "2022-02-24T17:54:41.282950Z",
        "url": "https://files.pythonhosted.org/packages/c8/a1/1f6b202f344d9757576b8174f972b5d72ff1c7571b37fe8a8e8b7494296b/cgnal_core-2.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f1a43dd5d4bb66f18e521a54450048d68319043b9262ab4f46cafedba354ebca",
          "md5": "93827088570c5c76c0e1819206896bbb",
          "sha256": "e2bf0d1ac97157a3773daf8be44d6fd5071845f88e68ec082eacc898b4b123cb"
        },
        "downloads": -1,
        "filename": "cgnal-core-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "93827088570c5c76c0e1819206896bbb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.7",
        "size": 50331,
        "upload_time": "2022-02-24T17:54:42",
        "upload_time_iso_8601": "2022-02-24T17:54:42.894963Z",
        "url": "https://files.pythonhosted.org/packages/f1/a4/3dd5d4bb66f18e521a54450048d68319043b9262ab4f46cafedba354ebca/cgnal-core-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f25f0fabfa665e5917f824fca92fed96a2facba2526b5e896b22f84e268dcac7",
          "md5": "30a24a7ef73b959319bf92b12c50cd3d",
          "sha256": "61275c94385039fc5892b4b8b9a101f69a86b6f038dc3242f240f62beed4f67c"
        },
        "downloads": -1,
        "filename": "cgnal_core-2.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "30a24a7ef73b959319bf92b12c50cd3d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.7",
        "size": 41738,
        "upload_time": "2022-03-09T21:46:26",
        "upload_time_iso_8601": "2022-03-09T21:46:26.945966Z",
        "url": "https://files.pythonhosted.org/packages/f2/5f/0fabfa665e5917f824fca92fed96a2facba2526b5e896b22f84e268dcac7/cgnal_core-2.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18bb4ef46966e3e923b53abd36ddcc1e6274a208e38b04cb3de22fa409309f31",
          "md5": "eabf6680d77ff06286f8a20a4c377055",
          "sha256": "fdfb1887aa229c9e89c4d6572fa4a2512152e2adbbd015a3abc387b87969cb07"
        },
        "downloads": -1,
        "filename": "cgnal-core-2.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "eabf6680d77ff06286f8a20a4c377055",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.7",
        "size": 51886,
        "upload_time": "2022-03-09T21:46:28",
        "upload_time_iso_8601": "2022-03-09T21:46:28.023346Z",
        "url": "https://files.pythonhosted.org/packages/18/bb/4ef46966e3e923b53abd36ddcc1e6274a208e38b04cb3de22fa409309f31/cgnal-core-2.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "432f898d8d64b0f42959130cb3edd4d4ae59342fcf47b2dfbde02cffea574b5d",
          "md5": "49eabed1f1e5c0a8f2be1a4042d8af73",
          "sha256": "61daad3e544e7223b6bc2c13c06a00f5ad939aa0ef87da7faf4b23185d763f7f"
        },
        "downloads": -1,
        "filename": "cgnal_core-2.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "49eabed1f1e5c0a8f2be1a4042d8af73",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.7",
        "size": 42063,
        "upload_time": "2022-03-17T18:20:38",
        "upload_time_iso_8601": "2022-03-17T18:20:38.568448Z",
        "url": "https://files.pythonhosted.org/packages/43/2f/898d8d64b0f42959130cb3edd4d4ae59342fcf47b2dfbde02cffea574b5d/cgnal_core-2.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8e3e4852acf40b165a6dcb598aeb7977d408aa2c4d94e52273b7a35d06ed5fa7",
          "md5": "a68f171c420a194461f132054ff5d51f",
          "sha256": "42424dffc0a3e78f25adbcebdf7d71e1277ffc96c5d9d560ffa10b77dd6d8e3e"
        },
        "downloads": -1,
        "filename": "cgnal-core-2.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a68f171c420a194461f132054ff5d51f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.7",
        "size": 51994,
        "upload_time": "2022-03-17T18:20:40",
        "upload_time_iso_8601": "2022-03-17T18:20:40.103913Z",
        "url": "https://files.pythonhosted.org/packages/8e/3e/4852acf40b165a6dcb598aeb7977d408aa2c4d94e52273b7a35d06ed5fa7/cgnal-core-2.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "432f898d8d64b0f42959130cb3edd4d4ae59342fcf47b2dfbde02cffea574b5d",
        "md5": "49eabed1f1e5c0a8f2be1a4042d8af73",
        "sha256": "61daad3e544e7223b6bc2c13c06a00f5ad939aa0ef87da7faf4b23185d763f7f"
      },
      "downloads": -1,
      "filename": "cgnal_core-2.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "49eabed1f1e5c0a8f2be1a4042d8af73",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": "~=3.7",
      "size": 42063,
      "upload_time": "2022-03-17T18:20:38",
      "upload_time_iso_8601": "2022-03-17T18:20:38.568448Z",
      "url": "https://files.pythonhosted.org/packages/43/2f/898d8d64b0f42959130cb3edd4d4ae59342fcf47b2dfbde02cffea574b5d/cgnal_core-2.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8e3e4852acf40b165a6dcb598aeb7977d408aa2c4d94e52273b7a35d06ed5fa7",
        "md5": "a68f171c420a194461f132054ff5d51f",
        "sha256": "42424dffc0a3e78f25adbcebdf7d71e1277ffc96c5d9d560ffa10b77dd6d8e3e"
      },
      "downloads": -1,
      "filename": "cgnal-core-2.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "a68f171c420a194461f132054ff5d51f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "~=3.7",
      "size": 51994,
      "upload_time": "2022-03-17T18:20:40",
      "upload_time_iso_8601": "2022-03-17T18:20:40.103913Z",
      "url": "https://files.pythonhosted.org/packages/8e/3e/4852acf40b165a6dcb598aeb7977d408aa2c4d94e52273b7a35d06ed5fa7/cgnal-core-2.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}