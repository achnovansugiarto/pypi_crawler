{
  "info": {
    "author": "Xyce Team",
    "author_email": "xyce@sandia.gov",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "Future location of Python enabled Xyce.\n\nIn the meantime, check out Xyce-PyMi at:\nhttps://github.com/xyce/xyce\n\nwith instruction details at:\nhttps://cfwebprod.sandia.gov/cfdocs/CompResearch/docs/Xyce-PyMi-Guide.pdf\n\n\n\nAbout Xyce:\n\nXyce (rhymes with \"spice\") is an open source, SPICE-compatible, high-performance analog circuit simulator, capable of solving extremely large circuit problems by supporting large-scale parallel computing platforms. It also supports serial execution on all common desktop platforms, and small-scale parallel runs on Unix-like systems. In addition to analog electronic simulation, Xyce has also been used to investigate more general network systems, such as neural networks and power grids. In providing an Open Source version of Xyce to the external community, Sandia hopes to contribute a robust and modern electronic simulator to users and researchers in the field.\n\nWhile designed to be SPICE-compatible, Xyce is not a derivative of SPICE. Xyce was designed from scratch to be a parallel simulation code, written in C++ and using a message-passing implementation (MPI). Xyce also leverages Sandia's open-source solver library, Trilinos, which includes a number of circuit-specific solvers, such as the KLU direct solver. With its modular and flexible design, Xyce applies abstract interfaces to enable easy development of different analysis types, solvers and models.\n\nXyce is compatible with SPICE-based codes, in that it supports a canonical set of SPICE compact models and standard SPICE analysis methods, such as steady-state (.DC), transient (.TRAN), small-signal frequency domain (.AC), and noise (.NOISE). However, Xyce goes beyond most SPICE-based codes in a number of ways, including support for a large number of non-traditional models, such as neuron and reaction network models. Xyce also supports Harmonic Balance analysis (.HB), random sampling analysis, sensitivity calculations, and post processing of the simulation metrics (.FOUR and .MEASURE).",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Xyce/Xyce",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "xycepymi",
    "package_url": "https://pypi.org/project/xycepymi/",
    "platform": "",
    "project_url": "https://pypi.org/project/xycepymi/",
    "project_urls": {
      "Bug Tracker": "https://github.com/Xyce/Xyce/issues",
      "Homepage": "https://github.com/Xyce/Xyce"
    },
    "release_url": "https://pypi.org/project/xycepymi/7.4.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Xyce",
    "version": "7.4.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12484243,
  "releases": {
    "7.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "95d41eca5f8da63c2a35f5752764901cd0be380a0a954375285de3ed518c936b",
          "md5": "55e163ee55018c4955c28aef575374eb",
          "sha256": "0bf53c881d5a5cedbbf1c05f897dedb8f41c45734773ce772b5560012e563d4b"
        },
        "downloads": -1,
        "filename": "xycepymi-7.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "55e163ee55018c4955c28aef575374eb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 2356,
        "upload_time": "2022-01-05T14:10:29",
        "upload_time_iso_8601": "2022-01-05T14:10:29.614755Z",
        "url": "https://files.pythonhosted.org/packages/95/d4/1eca5f8da63c2a35f5752764901cd0be380a0a954375285de3ed518c936b/xycepymi-7.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "95d41eca5f8da63c2a35f5752764901cd0be380a0a954375285de3ed518c936b",
        "md5": "55e163ee55018c4955c28aef575374eb",
        "sha256": "0bf53c881d5a5cedbbf1c05f897dedb8f41c45734773ce772b5560012e563d4b"
      },
      "downloads": -1,
      "filename": "xycepymi-7.4.0.tar.gz",
      "has_sig": false,
      "md5_digest": "55e163ee55018c4955c28aef575374eb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 2356,
      "upload_time": "2022-01-05T14:10:29",
      "upload_time_iso_8601": "2022-01-05T14:10:29.614755Z",
      "url": "https://files.pythonhosted.org/packages/95/d4/1eca5f8da63c2a35f5752764901cd0be380a0a954375285de3ed518c936b/xycepymi-7.4.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}