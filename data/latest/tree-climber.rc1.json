{
  "info": {
    "author": "",
    "author_email": "Benjamin Steenhoek <benjaminjsteenhoek@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# tree-climber\n\nProgram analysis tools built on [tree-sitter](https://github.com/tree-sitter/tree-sitter).\nCurrently supports only C.\n\n# Try it out\n\nInstall from pip:\n\n```bash\npip install tree_climber\n```\n\nor run from source:\n\n```bash\n# install deps\npip install -r requirements.txt\n# run on a test program :)\npython tree_climber tests/data/example.c --draw_ast --draw_cfg --draw_duc\n```\n\nFor Fedora 36:\n```\nsudo dnf install graphviz-devel python3-tkinter\n```\n\nFeel free to open a PR with other platform-specific instructions.\n\nSee [developers.md](./developers.md) for developer setup instructions.\n\n# Table of contents\n\n1. [Features](#features)\n\t1. [Visualize AST](#visualize-ast)\n\t2. [Construct and visualize Control-flow graph (CFG)](#construct-and-visualize-control-flow-graph-cfg)\n\t3. [Monotonic dataflow analysis](#monotonic-dataflow-analysis)\n\t4. [Construct and visualize Def-use chain (DUC)](#construct-and-visualize-def-use-chain-duc)\n\t5. [Construct and visualize Code Property Graph (CPG)](#construct-and-visualize-code-property-graph-cpg)\n2. [Contribute](#contribute)\n\n# Features\n\nExamples shown on [tests/data/example.c](./tests/data/example.c).\n```c\nint main()\n{\n    int x = 0;\n    x = x + 1;\n    if (x > 1) {\n        x += 5;\n    }\n    else {\n        x += 50;\n    }\n    x = x + 2;\n    for (int i = 0; i < 10; i ++) {\n        x --;\n    }\n    x = x + 3;\n    while (x < 0) {\n        x ++;\n        x = x + 1;\n    }\n    x = x + 4;\n    return x;\n}\n```\n\n## Visualize AST\n\nVisualize AST without concrete tokens included in tree-sitter:\n```bash\npython main.py tests/data/example.c --draw_ast\n```\n\nExample:\n![AST example](./images/ast_example.png)\n\n## Construct and visualize Control-flow graph (CFG)\n\nConvert tree-sitter AST to CFG for C programs.\nAST -> CFG algorithm is based on Joern, specifically [CfgCreator.scala](https://github.com/joernio/joern/blob/6df0bbe6afad7f9b04bf0d1877e9797a7cdddcc4/joern-cli/frontends/x2cpg/src/main/scala/io/joern/x2cpg/passes/controlflow/cfgcreation/CfgCreator.scala).\n\nVisualize CFG:\n```bash\npython main.py tests/data/example.c --draw_cfg\n```\n\nExample:\n![CFG example](./images/cfg_example.png)\n\n## Monotonic dataflow analysis\n\nSee `dataflow_solver.py`.\n\n## Construct and visualize Def-use chain (DUC)\n\nVisualize DUC:\n```bash\npython main.py tests/data/example.c --draw_duc\n```\n\nExample:\n![DUC example](./images/duc_example.png)\n\n## Construct and visualize Code Property Graph (CPG)\n\nCPG composes AST + CFG + DUC into one graph for combined analysis.\nEventual goal is feature parity with Joern's usage in ML4SE.\n\nVisualize CPG (edges are color-coded - black = AST, blue = CFG, red = DUC):\n```bash\npython main.py tests/data/example.c --draw_cpg\n```\n\nExample:\n![CPG example](./images/cpg_example.png)\n\n# Contribute\n\n[Open issues on Github](https://github.com/bstee615/tree-climber/issues)\n\n# Stress test (Jun 16 2022, outdated)\n\nFile [parse.sh](./tests/vs-joern/parse.sh) runs Joern and tree-sitter side by side to compare performance.\nUse [joern-install.sh](./tests/vs-joern/joern-install.sh) to install Joern first.\n\nBenchmark 1: long stupid file - 10,000 lines of `x++`.\nOutput 2022-06-15 19:44, v1.1.891 of Joern:\n```bash\n(tree-sitter-py38) benjis@AM:~/code/ts$ bash tests/vs-joern/parse.sh --joern tests/data/10000.c\nexecuting /home/benjis/code/ts/tests/vs-joern/get_func_graph.scala with params=Map(filename -> tests/data/10000.c)\nCompiling /home/benjis/code/ts/tests/vs-joern/get_func_graph.scala\ncreating workspace directory: /home/benjis/code/ts/workspace\nCreating project `10000.c` for code at `tests/data/10000.c`\nmoving cpg.bin.zip to cpg.bin because it is already a database file\nCreating working copy of CPG to be safe\nLoading base CPG from: /home/benjis/code/ts/workspace/10000.c/cpg.bin.tmp\nCode successfully imported. You can now query it using `cpg`.\nFor an overview of all imported code, type `workspace`.\nAdding default overlays to base CPG\nThe graph has been modified. You may want to use the `save` command to persist changes to disk.  All changes will also be saved collectively on exit\nscript finished successfully\nSome(())\n\nreal    0m14.143s\nuser    0m44.302s\nsys     0m1.260s\n(tree-sitter-py38) benjis@AM:~/code/ts$ bash tests/vs-joern/parse.sh --tree-sitter tests/data/10000.c\n\nreal    0m1.503s\nuser    0m1.385s\nsys     0m0.111s\n```\n\nBenchmark 2: [Linux kernel 5.18.4](https://cdn.kernel.org/pub/linux/kernel/v5.x/linux-5.18.4.tar.xz)\nOutput 2022-06-15 21:51, v1.1.891 of Joern:\n```bash\n(tree-sitter-py38) benjis@AM:~/code/ts$ time python main.py linux-5.18.4 --cfg --file > output_treesitter.txt\n\nreal    9m47.570s\nuser    9m4.308s\nsys     0m5.854s\n\n(base) benjis@AM:~/code/ts$ time ./joern/joern-cli/joern --script ./tests/vs-joern/get_func_graph.scala --params filename=linux-5.18.4\nexecuting /home/benjis/code/ts/tests/vs-joern/get_func_graph.scala with params=Map(filename -> linux-5.18.4)\n\u001b[34mCompiling /home/benjis/code/ts/tests/vs-joern/get_func_graph.scala\u001b[39m\ncreating workspace directory: /home/benjis/code/ts/workspace\nCreating project `linux-5.18.4` for code at `linux-5.18.4`\nKilled\nError running shell command: List(/home/benjis/code/ts/joern/joern-cli/c2cpg.sh, linux-5.18.4, --output, /home/benjis/code/ts/workspace/linux-5.18.4/cpg.bin.zip)\nException in thread \"main\" java.lang.AssertionError: script errored: \n\tat io.joern.console.ScriptExecution.runScript(BridgeBase.scala:253)\n\tat io.joern.console.ScriptExecution.runScript$(BridgeBase.scala:229)\n\tat io.joern.joerncli.console.AmmoniteBridge$.runScript(AmmoniteBridge.scala:5)\n\tat io.joern.console.BridgeBase.runAmmonite(BridgeBase.scala:164)\n\tat io.joern.console.BridgeBase.runAmmonite$(BridgeBase.scala:146)\n\tat io.joern.joerncli.console.AmmoniteBridge$.runAmmonite(AmmoniteBridge.scala:5)\n\tat io.joern.joerncli.console.AmmoniteBridge$.delayedEndpoint$io$joern$joerncli$console$AmmoniteBridge$1(AmmoniteBridge.scala:7)\n\tat io.joern.joerncli.console.AmmoniteBridge$delayedInit$body.apply(AmmoniteBridge.scala:5)\n\tat scala.Function0.apply$mcV$sp(Function0.scala:39)\n\tat scala.Function0.apply$mcV$sp$(Function0.scala:39)\n\tat scala.runtime.AbstractFunction0.apply$mcV$sp(AbstractFunction0.scala:17)\n\tat scala.App.$anonfun$main$1(App.scala:76)\n\tat scala.App.$anonfun$main$1$adapted(App.scala:76)\n\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)\n\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)\n\tat scala.collection.AbstractIterable.foreach(Iterable.scala:926)\n\tat scala.App.main(App.scala:76)\n\tat scala.App.main$(App.scala:74)\n\tat io.joern.joerncli.console.AmmoniteBridge$.main(AmmoniteBridge.scala:5)\n\tat io.joern.joerncli.console.AmmoniteBridge.main(AmmoniteBridge.scala)\nCaused by: io.joern.console.ConsoleException: Error creating project for input path: `linux-5.18.4`\n\nreal\t499m56.583s\nuser\t1193m14.686s\nsys\t7m26.020s\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "cfg,cpg,dfg,pdg,program-analysis,tree-sitter",
    "license": "MIT License  Copyright (c) 2022 Benjamin Steenhoek  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tree-climber",
    "package_url": "https://pypi.org/project/tree-climber/",
    "platform": null,
    "project_url": "https://pypi.org/project/tree-climber/",
    "project_urls": {
      "Bug Tracker": "https://github.com/bstee615/tree-climber/issues",
      "Homepage": "https://github.com/bstee615/tree-climber"
    },
    "release_url": "https://pypi.org/project/tree-climber/0.0.1/",
    "requires_dist": [
      "gitpython",
      "matplotlib",
      "networkx",
      "pygraphviz",
      "tree-sitter"
    ],
    "requires_python": ">=3.7",
    "summary": "Program analysis tools built on tree-sitter.",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15279077,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "36b8ce54a6586b74408bb4d9eb091d2e9fa21afaf21ae7ec3f968cb46134889a",
          "md5": "718c190c943a121b591f0c77e7ceb7a7",
          "sha256": "b14d28d0f3b2b627bce29c729380f23f08cd8b6d456554b29657657f87d2fed1"
        },
        "downloads": -1,
        "filename": "tree_climber-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "718c190c943a121b591f0c77e7ceb7a7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 17741,
        "upload_time": "2022-10-02T04:03:48",
        "upload_time_iso_8601": "2022-10-02T04:03:48.620326Z",
        "url": "https://files.pythonhosted.org/packages/36/b8/ce54a6586b74408bb4d9eb091d2e9fa21afaf21ae7ec3f968cb46134889a/tree_climber-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d41ec5f157a3e472e7473420d3390714cef443d04677f9ee0e043b0a587fdc7e",
          "md5": "dc1d0d78100be03da6160a39d2551564",
          "sha256": "a9ce6b0b69a19bf565edbf156598dd171ef275269394273b91d0340ca551772f"
        },
        "downloads": -1,
        "filename": "tree_climber-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "dc1d0d78100be03da6160a39d2551564",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 1015459,
        "upload_time": "2022-10-02T04:03:51",
        "upload_time_iso_8601": "2022-10-02T04:03:51.355452Z",
        "url": "https://files.pythonhosted.org/packages/d4/1e/c5f157a3e472e7473420d3390714cef443d04677f9ee0e043b0a587fdc7e/tree_climber-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "36b8ce54a6586b74408bb4d9eb091d2e9fa21afaf21ae7ec3f968cb46134889a",
        "md5": "718c190c943a121b591f0c77e7ceb7a7",
        "sha256": "b14d28d0f3b2b627bce29c729380f23f08cd8b6d456554b29657657f87d2fed1"
      },
      "downloads": -1,
      "filename": "tree_climber-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "718c190c943a121b591f0c77e7ceb7a7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 17741,
      "upload_time": "2022-10-02T04:03:48",
      "upload_time_iso_8601": "2022-10-02T04:03:48.620326Z",
      "url": "https://files.pythonhosted.org/packages/36/b8/ce54a6586b74408bb4d9eb091d2e9fa21afaf21ae7ec3f968cb46134889a/tree_climber-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d41ec5f157a3e472e7473420d3390714cef443d04677f9ee0e043b0a587fdc7e",
        "md5": "dc1d0d78100be03da6160a39d2551564",
        "sha256": "a9ce6b0b69a19bf565edbf156598dd171ef275269394273b91d0340ca551772f"
      },
      "downloads": -1,
      "filename": "tree_climber-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "dc1d0d78100be03da6160a39d2551564",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 1015459,
      "upload_time": "2022-10-02T04:03:51",
      "upload_time_iso_8601": "2022-10-02T04:03:51.355452Z",
      "url": "https://files.pythonhosted.org/packages/d4/1e/c5f157a3e472e7473420d3390714cef443d04677f9ee0e043b0a587fdc7e/tree_climber-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}