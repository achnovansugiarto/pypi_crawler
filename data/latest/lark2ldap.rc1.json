{
  "info": {
    "author": "Huangxinyu",
    "author_email": "huangxinyu.2991@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 3.2",
      "Framework :: Django :: 4.0",
      "Framework :: Django :: 4.1",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Poetry Template\n\nDjango app template, using `poetry-python` as dependency manager.\n\nThis project is a template that can be cloned and re-used for\nredistributable apps.\n\nIt includes the following:\n\n* `poetry` for dependency management\n* `isort`, `black`, `pyupgrade` and `flake8` linting\n* `pre-commit` to run linting\n* `mypy` for type checking\n* `tox` and Github Actions for builds and CI\n\nThere are default config files for the linting and mypy.\n\n## Principles\n\nThe motivation for this project is to provide a consistent set of\nstandards across all YunoJuno public Python/Django projects. The\nprinciples we want to encourage are:\n\n* Simple for developers to get up-and-running\n* Consistent style (`black`, `isort`, `flake8`)\n* Future-proof (`pyupgrade`)\n* Full type hinting (`mypy`)\n\n## Versioning\n\nWe currently support Python 3.7+, and Django 3.2+. We will aggressively\nupgrade Django versions, and we won't introduce hacks to support\nbreaking changes - if Django 4 introduces something that 2.2 doesn't\nsupport we'll drop it.\n\n## Tests\n\n#### Tests package\n\nThe package tests themselves are _outside_ of the main library code, in\na package that is itself a Django app (it contains `models`, `settings`,\nand any other artifacts required to run the tests (e.g. `urls`).) Where\nappropriate, this test app may be runnable as a Django project - so that\ndevelopers can spin up the test app and see what admin screens look\nlike, test migrations, etc.\n\n#### Running tests\n\nThe tests themselves use `pytest` as the test runner. If you have\ninstalled the `poetry` evironment, you can run them thus:\n\n```\n$ poetry run pytest\n```\n\nor\n\n```\n$ poetry shell\n(my_app) $ pytest\n```\n\nThe full suite is controlled by `tox`, which contains a set of\nenvironments that will format, lint, and test against all\nsupport Python + Django version combinations.\n\n```\n$ tox\n...\n______________________ summary __________________________\n  fmt: commands succeeded\n  lint: commands succeeded\n  mypy: commands succeeded\n  py37-django22: commands succeeded\n  py37-django32: commands succeeded\n  py37-djangomain: commands succeeded\n  py38-django22: commands succeeded\n  py38-django32: commands succeeded\n  py38-djangomain: commands succeeded\n  py39-django22: commands succeeded\n  py39-django32: commands succeeded\n  py39-djangomain: commands succeeded\n```\n\n#### CI\n\nThere is a `.github/workflows/tox.yml` file that can be used as a\nbaseline to run all of the tests on Github. This file runs the oldest\n(2.2), newest (3.2), and head of the main Django branch.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/huangxy29/lark_to_ldap",
    "keywords": "",
    "license": "MIT",
    "maintainer": "Huangxinyu",
    "maintainer_email": "huangxinyu.2991@gmail.com",
    "name": "lark2ldap",
    "package_url": "https://pypi.org/project/lark2ldap/",
    "platform": null,
    "project_url": "https://pypi.org/project/lark2ldap/",
    "project_urls": {
      "Documentation": "https://github.com/huangxy29/lark_to_ldap",
      "Homepage": "https://github.com/huangxy29/lark_to_ldap",
      "Repository": "https://github.com/huangxy29/lark_to_ldap"
    },
    "release_url": "https://pypi.org/project/lark2ldap/0.1.0/",
    "requires_dist": [
      "django (>=3.2,<5.0)"
    ],
    "requires_python": ">=3.8,<4.0",
    "summary": "Django app,to sync feishu contacts to ldap.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16254030,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3bbc91f771040ff40439595a3f026e3d1c375de177dc43d99d625d1985c2755c",
          "md5": "0f6f207616e3a114f8eda636612552f3",
          "sha256": "9fb7037de7880137eddf84bff6cb05b27e9a73aedecfbb6e53d7ce5ef24155e4"
        },
        "downloads": -1,
        "filename": "lark2ldap-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0f6f207616e3a114f8eda636612552f3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 4243,
        "upload_time": "2022-12-30T03:26:01",
        "upload_time_iso_8601": "2022-12-30T03:26:01.081500Z",
        "url": "https://files.pythonhosted.org/packages/3b/bc/91f771040ff40439595a3f026e3d1c375de177dc43d99d625d1985c2755c/lark2ldap-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a3c0b5541f74ceceb9b238953b1752a7e84dc68cb28386c0b3e9f8e95ec154e5",
          "md5": "e6e7e9cb23ba1602d8a7b8fa45970d60",
          "sha256": "1b035eeac41263874fb84b52bbfb1210cafe965c7f0904d948894a5c6d58aa7f"
        },
        "downloads": -1,
        "filename": "lark2ldap-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e6e7e9cb23ba1602d8a7b8fa45970d60",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 3919,
        "upload_time": "2022-12-30T03:26:02",
        "upload_time_iso_8601": "2022-12-30T03:26:02.849118Z",
        "url": "https://files.pythonhosted.org/packages/a3/c0/b5541f74ceceb9b238953b1752a7e84dc68cb28386c0b3e9f8e95ec154e5/lark2ldap-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3bbc91f771040ff40439595a3f026e3d1c375de177dc43d99d625d1985c2755c",
        "md5": "0f6f207616e3a114f8eda636612552f3",
        "sha256": "9fb7037de7880137eddf84bff6cb05b27e9a73aedecfbb6e53d7ce5ef24155e4"
      },
      "downloads": -1,
      "filename": "lark2ldap-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0f6f207616e3a114f8eda636612552f3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<4.0",
      "size": 4243,
      "upload_time": "2022-12-30T03:26:01",
      "upload_time_iso_8601": "2022-12-30T03:26:01.081500Z",
      "url": "https://files.pythonhosted.org/packages/3b/bc/91f771040ff40439595a3f026e3d1c375de177dc43d99d625d1985c2755c/lark2ldap-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a3c0b5541f74ceceb9b238953b1752a7e84dc68cb28386c0b3e9f8e95ec154e5",
        "md5": "e6e7e9cb23ba1602d8a7b8fa45970d60",
        "sha256": "1b035eeac41263874fb84b52bbfb1210cafe965c7f0904d948894a5c6d58aa7f"
      },
      "downloads": -1,
      "filename": "lark2ldap-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e6e7e9cb23ba1602d8a7b8fa45970d60",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<4.0",
      "size": 3919,
      "upload_time": "2022-12-30T03:26:02",
      "upload_time_iso_8601": "2022-12-30T03:26:02.849118Z",
      "url": "https://files.pythonhosted.org/packages/a3/c0/b5541f74ceceb9b238953b1752a7e84dc68cb28386c0b3e9f8e95ec154e5/lark2ldap-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}