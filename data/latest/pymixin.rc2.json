{
  "info": {
    "author": "Martmists",
    "author_email": "martmists@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Code Generators",
      "Topic :: Software Development :: Libraries :: Application Frameworks"
    ],
    "description": "# PyMixin\n\nPyMixin is a python library designed to help inject code in a compatible way.\nIt is heavily inspired by the SpongePowered Mixin project.\n\n## Features\n\n### Redirect function calls\n\n```python\n>>> from mixin import *\n>>> from math import log, log10\n>>> \n>>> def test_function(n: int) -> int:\n...     return log(n)\n... \n>>> @redirect(method=test_function, at=At(value=AtValue.INVOKE, target=log))\n... def real_input(n: int) -> int:\n...     # Call log10 instead of log\n...     return log10(n)\n... \n>>> test_function(10)\n1.0\n```\n\n### Change constants\n\n```python\n>>> from mixin import *\n>>> from random import randint\n>>> \n>>> def percent(n: int) -> float:\n...     return n / 100\n... \n>>> @modify_const(method=percent, at=At(value=AtValue.LOAD, target=100))\n... def random_denominator():\n...     return randint(0, 100)\n... \n>>> percent(10)\n0.2777777777777778\n>>> percent(10)\n0.35714285714285715\n```\n\n### Inject callbacks\n\n```python\n>>> from mixin import *\n>>> \n>>> def internal_message_handler(data: bytes):\n...     return  # Dummy implementation\n... \n>>> @inject(method=internal_message_handler, at=At(value=AtValue.HEAD))\n... def log_message(data: bytes, callback_info: CallbackInfo):\n...     print(\"Received data:\", data)\n... \n>>> internal_message_handler(b\"Hello world\")\nReceived data: b'Hello world'\n```\n\n### Cancel functions\n\n```python\n>>> from mixin import *\n>>> \n>>> def process(body: str):\n...     if body == \"Hello\":\n...         print(\"World\")\n...     else:\n...         print(\"Invalid body\")\n... \n>>> @inject(method=process, at=At(value=AtValue.HEAD), cancellable=True)\n... def cancel_if_bad(body: str, callback_info: CallbackInfo):\n...     if body != \"Hello\":\n...         callback_info.cancel()\n... \n>>> process(\"Hello\")\nWorld\n>>> process(\"World\")\n>>> \n```\n\n### Modify returned value\n\n```python\n>>> from mixin import *\n>>> \n>>> def return_n_squared(n):\n...     return n * n\n... \n>>> @inject(method=return_n_squared, at=At(value=AtValue.RETURN), cancellable=True)  # Warning: injects at EVERY return by default\n... def return_n_cubed_instead(callback_info: CallbackInfo):\n...     n = (callback_info.return_value**0.5)\n...     callback_info.set_return(n**3)\n... \n>>> return_n_squared(10)\n1000.0\n```\n\n### Overwrite functions\n\n```python\n>>> from mixin import *\n>>> \n>>> def spam_a():\n...     while True:\n...         print(\"a\")\n... \n>>> @overwrite(method=spam_a)\n... def replacement():\n...     print(\"b\")\n... \n>>> spam_a()\nb\n```\n\n### A note on decorators\n\nOften in python, a function is wrapped with a decorator. This means the value of a function is no longer the same.\nTo resolve this, we added `mixin.unwrap`, to get the original function back (assuming `functools.wraps`) was used.\n\n```python\n>>> from mixin import *\n>>> from functools import wraps\n>>> \n>>> def with_print(func):\n...     @wraps(func)\n...     def inner(*args, **kwargs):\n...         print(\"args\", args, kwargs)\n...         return func(*args, **kwargs)\n...     return inner\n... \n>>> @with_print\n... def test(n):\n...     return n*2\n... \n>>> @inject(method=unwrap(test), at=At(value=AtValue.HEAD))\n... def log_n(n, callback_info):\n...     print(\"N:\", n)\n... \n>>> test(10)\nargs (10,) {}\nN: 10\n20\n\n```\n\n## Installing\n\nTo install PyMixin, you can just use pip:\n\n```shell\npip install pymixin\n```\n\n## License\n\nPyMixin is licensed under MIT.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pymixin",
    "package_url": "https://pypi.org/project/pymixin/",
    "platform": "",
    "project_url": "https://pypi.org/project/pymixin/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/pymixin/1.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.5",
    "summary": "A high-level library for manipulating Python Bytecode in an easy way.",
    "version": "1.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11726938,
  "releases": {
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2fdf59b531ad38dfd0cfc8cbe36814f3872904289789bc2b461d8771f44c6420",
          "md5": "801af00c474364aef21547378c136cef",
          "sha256": "e854d15c594757b0d9a5169bef2336e80678b630669290e84f199a1bcbb46b69"
        },
        "downloads": -1,
        "filename": "pymixin-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "801af00c474364aef21547378c136cef",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 6964,
        "upload_time": "2021-10-14T17:05:43",
        "upload_time_iso_8601": "2021-10-14T17:05:43.942570Z",
        "url": "https://files.pythonhosted.org/packages/2f/df/59b531ad38dfd0cfc8cbe36814f3872904289789bc2b461d8771f44c6420/pymixin-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "21c2668f94a9fc47d8d70db9b3e882fbfee7c995908a48a7ab0899e42ca272a2",
          "md5": "0936f3b7c9178629a9ecd6407276aa17",
          "sha256": "febd832dd2553807da7ee30b139f7883e1a5ba5a3c75983ece0dc1a29dfed15d"
        },
        "downloads": -1,
        "filename": "pymixin-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0936f3b7c9178629a9ecd6407276aa17",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 6952,
        "upload_time": "2021-10-14T17:05:45",
        "upload_time_iso_8601": "2021-10-14T17:05:45.205659Z",
        "url": "https://files.pythonhosted.org/packages/21/c2/668f94a9fc47d8d70db9b3e882fbfee7c995908a48a7ab0899e42ca272a2/pymixin-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cf20d0e56094b5d6a9eb2236893717ee25481ac19b9f5a99beeb278a97d17a37",
          "md5": "ba20026ef29fc0182def119a625370a4",
          "sha256": "86b6e3107b0d6dcf186ff4aa8c76c54bd187f54cb0bca31f010651ee2ea29620"
        },
        "downloads": -1,
        "filename": "pymixin-1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ba20026ef29fc0182def119a625370a4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 8141,
        "upload_time": "2021-10-14T17:13:59",
        "upload_time_iso_8601": "2021-10-14T17:13:59.924624Z",
        "url": "https://files.pythonhosted.org/packages/cf/20/d0e56094b5d6a9eb2236893717ee25481ac19b9f5a99beeb278a97d17a37/pymixin-1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6666c0ad0135ee4d2798d219fc6dafc617838df9d3acb2e477b23bad22c0047a",
          "md5": "e54c4c5c81d0edaa1fdf120e1d8484a3",
          "sha256": "5856837ce05d1a0012d4dd7cc15c17c37451b9ba7d512b573cb1758412846fd0"
        },
        "downloads": -1,
        "filename": "pymixin-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e54c4c5c81d0edaa1fdf120e1d8484a3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 8128,
        "upload_time": "2021-10-14T17:14:01",
        "upload_time_iso_8601": "2021-10-14T17:14:01.700879Z",
        "url": "https://files.pythonhosted.org/packages/66/66/c0ad0135ee4d2798d219fc6dafc617838df9d3acb2e477b23bad22c0047a/pymixin-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cf20d0e56094b5d6a9eb2236893717ee25481ac19b9f5a99beeb278a97d17a37",
        "md5": "ba20026ef29fc0182def119a625370a4",
        "sha256": "86b6e3107b0d6dcf186ff4aa8c76c54bd187f54cb0bca31f010651ee2ea29620"
      },
      "downloads": -1,
      "filename": "pymixin-1.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ba20026ef29fc0182def119a625370a4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 8141,
      "upload_time": "2021-10-14T17:13:59",
      "upload_time_iso_8601": "2021-10-14T17:13:59.924624Z",
      "url": "https://files.pythonhosted.org/packages/cf/20/d0e56094b5d6a9eb2236893717ee25481ac19b9f5a99beeb278a97d17a37/pymixin-1.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6666c0ad0135ee4d2798d219fc6dafc617838df9d3acb2e477b23bad22c0047a",
        "md5": "e54c4c5c81d0edaa1fdf120e1d8484a3",
        "sha256": "5856837ce05d1a0012d4dd7cc15c17c37451b9ba7d512b573cb1758412846fd0"
      },
      "downloads": -1,
      "filename": "pymixin-1.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "e54c4c5c81d0edaa1fdf120e1d8484a3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 8128,
      "upload_time": "2021-10-14T17:14:01",
      "upload_time_iso_8601": "2021-10-14T17:14:01.700879Z",
      "url": "https://files.pythonhosted.org/packages/66/66/c0ad0135ee4d2798d219fc6dafc617838df9d3acb2e477b23bad22c0047a/pymixin-1.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}