{
  "info": {
    "author": "Sharashchandra Desai",
    "author_email": "Sharashchandra Desai <sharashchandra.desai@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Operating System :: OS Independent",
      "Programming Language :: Python"
    ],
    "description": "# TikTok Business API Wrapper\n\nThis is a minimal api wrapper to interface with the Tiktok business API\n\n# Installation\n\n``` console\npip install TikTok-Business-API\n```\n\nThe current version of this package only covers the Tiktok Business API. Tiktok Developer API support will be added in a later version.\n\n# Getting Started\n\nTo get started, get an Access Token from the app detail page in the [TikTok for Business Developers page](https://ads.tiktok.com/marketing_api/apps/).\nYou can also use the access token from the sandbox account to make test calls to the sandbox account.\n\n# Authorization\n\nObtaining an access_token is simple. Visit the authorization url mentioned in the app detail page. Once you login and grant authorization, it will redirect you to the callback url mentioned while creating the app. The auth_code can be gotten from url after the callback.\n\nBy default, the access token will be written to `~/.tiktok/access_token.json`\n\n``` python\nfrom tiktok.business.oauth2 import OAuth\n\naccess_token = OAuth2.get_access_token(\n    app_id='YOUR_APP_ID',\n    secret='YOUR_APP_SECRET',\n    auth_code='AUTH_CODE FROM CALLBACK',\n    write_to_file=True,\n    file_path=\"access_token.json\"\n)\n```\n# Initializing a client\n\nThis api wrapper makes it easy to switch between the main app and the sandbox account. This client will automatically include the advertiser id to every request if not specified otherwise.The Access Token is included in the header for all the api calls made.\n\nYou can initialize a new `Client` by making use of the `access_token.json` file generated in the previous step. The access tokens will be loaded in from `~/.tiktok/access_token.json` if path is not mentioned. Advertiser Id can also added to the `access_token.json`.\n\n``` python\nfrom tiktok.business.client import TikTokBusinessClient\n\nclient = TikTokBusinessClient.from_json_file(\n    json_file_path=\"/path/to/file\",\n    sandbox=True\n)\n```\n\nYou can initialize a new `Client` with just the Access Token and Advertiser Id to get started.\n\n``` python\nfrom tiktok.business.client import TikTokBusinessClient\n\nclient = TikTokBusinessClient(\n    access_token='YOUR_ACCESS_TOKEN',\n    advertiser_id='AD_ADVERTISER_ID'\n)\n```\n\nYou can also create a new `Client` for the sandbox account in the same way\n\n``` python\nfrom tiktok.business.client import TikTokBusinessClient\n\nclient = TikTokBusinessClient(\n    access_token='SANDBOX_ACCESS_TOKEN',\n    advertiser_id='SANDBOX_ADVERTISER_ID',\n    sandbox=True\n)\n```\n\nThe actual function calls remain the same with the only difference being in the url. URLs:\n\n* SANDBOX_URL = https://sandbox-ads.tiktok.com/open_api\n* BUSINESS_URL = https://business-api.tiktok.com/open_api\n\n# Endpoints\n\nAll the functionality of the modules can be accessed as attributes of the client object. The functions for each module differs and follows the [TikTok Business API Documentation](https://ads.tiktok.com/marketing_api/docs)\n\nFollow the steps outlined here to [create a client object](#Initializing-a-client)\n\nAll of the function take the same parameters `params` as mentioned in the official documentation unless specified.\n\nThe client object keeps a track of the advertiser id and passes it along with each request. There is no need to explicitly pass it in the params.\n\n## Campaign\n``` python\n# Get campaigns (page_size set to 1000 by default)\nclient.campaign.get_campaigns(params)\n\n# Create campaign\nclient.campaign.create_campaigns(params)\n\n# Update campaign\nclient.campaign.update_campaign(params)\n\n# Enable campaigns (max allowed 100 campaign ids in a single request)\nclient.campaign.enable_campaigns(campaigns_ids: List[str])\n\n# Disable campaigns (max allowed 100 campaign ids in a single request)\nclient.campaign.disable_campaigns(campaigns_ids: List[str])\n\n# Delete campaigns (max allowed 100 campaign ids in a single request)\nclient.campaign.delete_campaigns(campaigns_ids: List[str])\n```\n\n## Ad Group\n``` python\n# Get ad groups (page_size set to 1000 by default)\nclient.ad_group.get_ad_groups(params)\n\n# Create ad group\nclient.ad_group.create_ad_group(params)\n\n# Update ad group\nclient.ad_group.update_ad_group(params)\n\n# Update ad group budget\nclient.ad_group.update_ad_group_budget(params)\n\n# Enable ad groups (max allowed 100 adgroup_ids in a single request)\nclient.ad_group.enable_adgroups(adgroups_ids: List[str])\n\n# Disable adgroups (max allowed 100 adgroup_ids in a single request)\nclient.ad_group.disable_adgroups(adgroups_ids: List[str])\n\n# Delete adgroups (max allowed 100 adgroup_ids in a single request)\nclient.ad_group.delete_adgroups(adgroups_ids: List[str])\n```\n\n## Ad\n``` python\n# Get ads (page_size set to 1000 by default)\nclient.ad.get_ads(params)\n\n# Create ad \nclient.ad.create_ad(params)\n\n# Update ad \nclient.ad.update_ad(params)\n\n# Enable ads (max allowed 100 ad_ids in a single request)\nclient.ad.enable_ads(ads_ids: List[str])\n\n# Disable ads (max allowed 100 ad_ids in a single request)\nclient.ad.disable_ads(ads_ids: List[str])\n\n# Delete ads (max allowed 100 ad_ids in a single request)\nclient.ad.delete_ads(ads_ids: List[str])\n```\n\n## Creative\n### Image\n``` python\n# Upload image file\nclient.creative.image.upload_file(file_path: str, file_name: Optional[str])\n\n# Upload file by url\nclient.creative.image.upload_file_by_url(url: str, file_name: Optional[str])\n\n# Upload file by file id\nclient.creative.image.upload_file_by_file_id(file_id: str, file_name: Optional[str])\n```\n\n### Video\n``` python\n# Upload video file\nclient.creative.video.upload_file(file_path: str, file_name: Optional[str])\n\n# Upload file by url\nclient.creative.video.upload_file_by_url(url: str, file_name: Optional[str])\n\n# Upload file by file id\nclient.creative.video.upload_file_by_file_id(file_id: str, file_name: Optional[str])\n```\n\n### Music\n``` python\n# Upload music file\nclient.creative.music.upload_file(file_path: str, file_name: Optional[str])\n\n# Upload file by url\nclient.creative.music.upload_file_by_url(url: str, file_name: Optional[str])\n\n# Upload file by file id\nclient.creative.music.upload_file_by_file_id(file_id: str, file_name: Optional[str])\n```\n\n## Audience\n``` python\n# Get all audiences (page_size set to 1000 by default)\nclient.audience.get_all_audiences(params)\n\n# Get audience details (max allowed 100 custom_audience_ids in a single request)\nclient.audience.get_audience_details(custom_audience_ids: List[str])\n\n# Upload audience (each file needs to be less 50 mb. will add functionality to handle bigger file sizes in future release)\nclient.audience.upload_audience(file_path: str, calculate_type: str)\n\n# Create custom audience by tiktok file paths\nclient.audience.create_audience_by_file(params)\n\n# Create custom audience by rules\nclient.audience.create_audience_by_rule(params)\n\n# Create lookalike audience by file_ids\nclient.audience.create_lookalike_audience(params)\n\n# Update custom audience\nclient.audience.update_audience(params)\n\n# Delete custom audience (max allowed 100 custom_audience_ids in a single request)\nclient.audience.delete_audience(custom_audience_ids: List[str])\n\n# Share custom audience with advertiser accounts\nclient.audience.share_audience(params)\n\n# Cancel audience sharing (currently an allowlist-only feature)\nclient.audience.cancel_audience_sharing(params)\n\n# Get audience share log (currently an allowlist-only feature)\nclient.audience.get_audience_sharing_log(custom_audience_id: str)\n```\n\n## Reports\n``` python\n# Get synchronous report (page_size set to 1000 by default)\nclient.reports.get_synchronous_report(params)\n\n# Create asynchronous report task (page_size set to 1000 by default) (currently an allowlist-only feature)\nclient.reports.create_asynchronous_report_task(params)\n\n# Check asynchronous report task\nclient.reports.check_asynchronous_report_task(task_id: str)\n\n# Download asynchronous report\nclient.reports.download_asynchronous_report(task_id: str, file_path: str)\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Sharashchandra/TikTok-Business-API",
    "keywords": "tiktok,business,api,wrapper",
    "license": "MIT License Copyright (c) 2022 Sharashchandra Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "maintainer": "",
    "maintainer_email": "",
    "name": "TikTok-Business-API",
    "package_url": "https://pypi.org/project/TikTok-Business-API/",
    "platform": null,
    "project_url": "https://pypi.org/project/TikTok-Business-API/",
    "project_urls": {
      "Homepage": "https://github.com/Sharashchandra/TikTok-Business-API"
    },
    "release_url": "https://pypi.org/project/TikTok-Business-API/1.1/",
    "requires_dist": [
      "requests"
    ],
    "requires_python": ">3.8",
    "summary": "Minimal api wrapper for the TikTok Business API",
    "version": "1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14149504,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "54923de7b4db35c3333ddcf72a1515bef418b307a426dc8aed75ac2f2bab7266",
          "md5": "b0daf583a502a76324545c35cbc2cdb6",
          "sha256": "c8e5ebb9da9e1b32d2665e99898686597cb8b4a0fda2ae6255fe5fa26a980bc1"
        },
        "downloads": -1,
        "filename": "TikTok_Business_API-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b0daf583a502a76324545c35cbc2cdb6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">3.8",
        "size": 20941,
        "upload_time": "2022-06-14T17:20:25",
        "upload_time_iso_8601": "2022-06-14T17:20:25.389988Z",
        "url": "https://files.pythonhosted.org/packages/54/92/3de7b4db35c3333ddcf72a1515bef418b307a426dc8aed75ac2f2bab7266/TikTok_Business_API-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9535878529232f74a4b4b37a4726b9da4cda0c3ef0294a7353c338d579292168",
          "md5": "cde430d50a07f7f3c1a97ef8400724c5",
          "sha256": "ad779a96f118bd1b5f326757ed999efeb0c808864e5ab08bbdd0115691957f68"
        },
        "downloads": -1,
        "filename": "TikTok-Business-API-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "cde430d50a07f7f3c1a97ef8400724c5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.8",
        "size": 9931,
        "upload_time": "2022-06-14T17:20:27",
        "upload_time_iso_8601": "2022-06-14T17:20:27.904476Z",
        "url": "https://files.pythonhosted.org/packages/95/35/878529232f74a4b4b37a4726b9da4cda0c3ef0294a7353c338d579292168/TikTok-Business-API-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6774906d7b07713f5a19acde07b585983afb0d4a88aec9ba2a6a1ec3da2a6809",
          "md5": "0c486da5f2cc8091a0fbe02db4508af8",
          "sha256": "0139eb45375dd5ad91c43b14f9e4f224279b369cb1b3055cd35fff7d6b722aba"
        },
        "downloads": -1,
        "filename": "TikTok_Business_API-1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0c486da5f2cc8091a0fbe02db4508af8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">3.8",
        "size": 20964,
        "upload_time": "2022-06-16T09:46:59",
        "upload_time_iso_8601": "2022-06-16T09:46:59.767724Z",
        "url": "https://files.pythonhosted.org/packages/67/74/906d7b07713f5a19acde07b585983afb0d4a88aec9ba2a6a1ec3da2a6809/TikTok_Business_API-1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2efca5a2407ebae864788d24d8d162024b07b48a2015d0a3378a0611552d3607",
          "md5": "b8b19ce8f83a2d5f00220859055c0888",
          "sha256": "73f3e3f25ef9345b663d867151eb359db16feab03af0b5ef09bc2163ffd6ede9"
        },
        "downloads": -1,
        "filename": "TikTok-Business-API-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b8b19ce8f83a2d5f00220859055c0888",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.8",
        "size": 9858,
        "upload_time": "2022-06-16T09:47:05",
        "upload_time_iso_8601": "2022-06-16T09:47:05.173143Z",
        "url": "https://files.pythonhosted.org/packages/2e/fc/a5a2407ebae864788d24d8d162024b07b48a2015d0a3378a0611552d3607/TikTok-Business-API-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6774906d7b07713f5a19acde07b585983afb0d4a88aec9ba2a6a1ec3da2a6809",
        "md5": "0c486da5f2cc8091a0fbe02db4508af8",
        "sha256": "0139eb45375dd5ad91c43b14f9e4f224279b369cb1b3055cd35fff7d6b722aba"
      },
      "downloads": -1,
      "filename": "TikTok_Business_API-1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0c486da5f2cc8091a0fbe02db4508af8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">3.8",
      "size": 20964,
      "upload_time": "2022-06-16T09:46:59",
      "upload_time_iso_8601": "2022-06-16T09:46:59.767724Z",
      "url": "https://files.pythonhosted.org/packages/67/74/906d7b07713f5a19acde07b585983afb0d4a88aec9ba2a6a1ec3da2a6809/TikTok_Business_API-1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2efca5a2407ebae864788d24d8d162024b07b48a2015d0a3378a0611552d3607",
        "md5": "b8b19ce8f83a2d5f00220859055c0888",
        "sha256": "73f3e3f25ef9345b663d867151eb359db16feab03af0b5ef09bc2163ffd6ede9"
      },
      "downloads": -1,
      "filename": "TikTok-Business-API-1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "b8b19ce8f83a2d5f00220859055c0888",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">3.8",
      "size": 9858,
      "upload_time": "2022-06-16T09:47:05",
      "upload_time_iso_8601": "2022-06-16T09:47:05.173143Z",
      "url": "https://files.pythonhosted.org/packages/2e/fc/a5a2407ebae864788d24d8d162024b07b48a2015d0a3378a0611552d3607/TikTok-Business-API-1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}