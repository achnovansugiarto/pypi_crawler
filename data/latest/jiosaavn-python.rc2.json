{
  "info": {
    "author": "Abhishek Chaudhari",
    "author_email": "abhichaudhari@protonmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# [JioSaavn-Python](https://github.com/abhichaudharii/jiosaavn-python)\n\nAn unofficial Python3 wrapper for JioSaavn, a popular Indian music streaming service.. I am in no way affiliated with [JioSaavn](https://www.jiosaavn.com/), use at your own risk.\n\n### Show some ❤️ and ⭐ the repo to support the project. It will motivate me to keep this project alive.\n[![Telegram Channel](https://img.shields.io/badge/Telegram-Channel-orange)](https://t.me/ab_projects) [![made-with-python](https://img.shields.io/badge/Made%20with-Python-1f425f.svg)](https://www.python.org/)\n\n### Hire Me: [Abhi Chaudhari](https://www.freelancer.com/hireme/abhichaudharii)!\n\n\n## Features\n- Get New Releases\n- Get Song Lyrics\n- Get Song Info\n- Get Song Direct Download Link\n- Get Featured Playlists\n- Get Playlist Songs\n- Get Top Charts\n- Get Top Artists\n- Get Artist's Top Songs\n- Search for Songs\n- Search for Albums\n- Search for Artists\n- Search for Playlists\n- Search for Podcasts\n- Search Top Queries\n\n###  Getting it\nTo download jiosaavn-python, either fork this github repo or simply use Pypi via pip.\n```bash\npip install jiosaavn-python\n```\n\n#### Get New Releases\n\nYou can use the following code to get new releases from `JioSaavn`. The below code shows the example using `asyncio` but you can also use the following in the async function with the `await` keyword. We are using `limit=2` to limit the number of results returned.\n\n```python\nimport json\nimport asyncio\nfrom jiosaavn import JioSaavn\n\nsaavn = JioSaavn()\ndata = asyncio.run(saavn.get_new_releases(page=1, limit=2))\nprint(json.dumps(data, indent=4))\n```\n\n#### Get Song Lyrics\n\nYou can use the following code to get song lyrics from `JioSaavn`. You can pass Song `ID/LINK` Below code shows the example using `asyncio` but you can also use the following in the async function with `await` keyword.\n\n```python\nimport json\nimport asyncio\nfrom jiosaavn import JioSaavn\n\nsaavn = JioSaavn()\ndata = asyncio.run(saavn.get_song_lyrics(\"https://www.jiosaavn.com/song/srivalli/RBpGRidYdVI\"))\nprint(json.dumps(data, indent=4))\n```\n\n#### Get Song Info\n\nYou can use the following code to get song info from `JioSaavn`. You can pass Song `ID/LINK` Below code shows the example using `asyncio` but you can also use the following in the async function with the `await` keyword.\n\n```python\nimport json\nimport asyncio\nfrom jiosaavn import JioSaavn\n\nsaavn = JioSaavn()\ndata = asyncio.run(saavn.get_song_details(\"https://www.jiosaavn.com/song/srivalli/RBpGRidYdVI\"))\nprint(json.dumps(data, indent=4))\n```\n\n#### Get Song Direct Download Link\n\nYou can use the following code to get a song direct download from `JioSaavn`. You can pass Song `ID/LINK` Below code shows the example using `asyncio` but you can also use the following in the async function with the `await` keyword.\n\n```python\nimport json\nimport asyncio\nfrom jiosaavn import JioSaavn\n\nsaavn = JioSaavn()\ndata = asyncio.run(saavn.get_song_direct_link(\"https://www.jiosaavn.com/song/srivalli/RBpGRidYdVI\"))\nprint(json.dumps(data, indent=4))\n```\n\n#### Get Featured Playlists\n\nYou can use the following code to get featured playlists from `JioSaavn`. You can pass Song `ID/LINK` Below code shows the example using `asyncio` but you can also use the following in the async function with the `await` keyword. We are using `limit=2` to limit the number of results returned.\n\n```python\nimport json\nimport asyncio\nfrom jiosaavn import JioSaavn\n\nsaavn = JioSaavn()\ndata = asyncio.run(saavn.get_featured_playlists(page=1, limit=2))\nprint(json.dumps(data, indent=4))\n```\n\n#### Get Playlist Songs\n\nYou can use the following code to get playlist songs from `JioSaavn`. You can pass Song `ID/LINK` Below code shows the example using `asyncio` but you can also use the following in the async function with the `await` keyword. We are using `limit=2` to limit the number of results returned\n\n```python\nimport json\nimport asyncio\nfrom jiosaavn import JioSaavn\n\nsaavn = JioSaavn()\ndata = asyncio.run(saavn.get_playlist_songs(\"https://www.jiosaavn.com/featured/the-landers/2-aGcw5eLvQwkg5tVhI3fw__\", page=1, limit=2))\nprint(json.dumps(data, indent=4))\n```\n\n#### Get Top Charts\n\nYou can use the following code to top charts from `JioSaavn`. You can pass Song `ID/LINK` Below code shows the example using `asyncio` but you can also use the following in the async function with the `await` keyword.\n\n```python\nimport json\nimport asyncio\nfrom jiosaavn import JioSaavn\n\nsaavn = JioSaavn()\ndata = asyncio.run(saavn.get_top_charts())\nprint(json.dumps(data, indent=4))\n```\n\n#### Get Top Artists\n\nYou can use the following code to get top artists from `JioSaavn`. You can pass Song `ID/LINK` Below code shows the example using `asyncio` but you can also use the following in the async function with the `await` keyword.\n\n```python\nimport json\nimport asyncio\nfrom jiosaavn import JioSaavn\n\nsaavn = JioSaavn()\ndata = asyncio.run(saavn.get_top_artists())\nprint(json.dumps(data, indent=4))\n```\n\n#### Get Artist's Top Songs\n\nYou can use the following code to get the artist's top songs from `JioSaavn`. You can pass Song `ID/LINK` Below code shows the example using `asyncio` but you can also use the following in the async function with the `await` keyword. We are using `limit=2` to limit the number of results returned.\n\n```python\nimport json\nimport asyncio\nfrom jiosaavn import JioSaavn\n\nsaavn = JioSaavn()\ndata = asyncio.run(saavn.get_artist_top_songs(\"https://www.jiosaavn.com/artist/allu-arjun-songs/BGi8EcKdZXk_\", limit=2))\nprint(json.dumps(data, indent=4))\n```\n\n#### Search for Songs\n\nYou can use the following code to search songs from `JioSaavn`. You can pass Song `ID/LINK` Below code shows the example using `asyncio` but you can also use the following in the async function with the `await` keyword.\n\n```python\nimport json\nimport asyncio\nfrom jiosaavn import JioSaavn\n\nsaavn = JioSaavn()\ndata = asyncio.run(saavn.search_songs(\"Narayan mil jayega\"))\nprint(json.dumps(data, indent=4))\n```\n\n#### Search for Albums\n\nYou can use the following code to search albums from `JioSaavn`. You can pass Song `ID/LINK` Below code shows the example using `asyncio` but you can also use the following in the async function with the `await` keyword.\n\n```python\nimport json\nimport asyncio\nfrom jiosaavn import JioSaavn\n\nsaavn = JioSaavn()\ndata = asyncio.run(saavn.search_albums(\"Narayan mil jayega\"))\nprint(json.dumps(data, indent=4))\n```\n\n#### Search for Artists\n\nYou can use the following code to search artists from `JioSaavn`. You can pass Song `ID/LINK` Below code shows the example using `asyncio` but you can also use the following in the async function with the `await` keyword.\n\n```python\nimport json\nimport asyncio\nfrom jiosaavn import JioSaavn\n\nsaavn = JioSaavn()\ndata = asyncio.run(saavn.search_artists(\"Allu Arjun\"))\nprint(json.dumps(data, indent=4))\n```\n\n#### Search for Playlists\n\nYou can use the following code to search playlists from `JioSaavn`. You can pass Song `ID/LINK` Below code shows the example using `asyncio` but you can also use the following in the async function with the `await` keyword.\n\n```python\nimport json\nimport asyncio\nfrom jiosaavn import JioSaavn\n\nsaavn = JioSaavn()\ndata = asyncio.run(saavn.search_playlists(\"Krishna\"))\nprint(json.dumps(data, indent=4))\n```\n\n#### Search for Podcasts\n\nYou can use the following code to search podcasts from `JioSaavn`. You can pass Song `ID/LINK` Below code shows the example using `asyncio` but you can also use the following in the async function with the `await` keyword.\n\n```python\nimport json\nimport asyncio\nfrom jiosaavn import JioSaavn\n\nsaavn = JioSaavn()\ndata = asyncio.run(saavn.search_podcasts(\"Krishan\"))\nprint(json.dumps(data, indent=4))\n```\n\n#### Search Top Queries\n\nYou can use the following code to search top queries from `JioSaavn`. You can pass Song `ID/LINK` Below code shows the example using `asyncio` but you can also use the following in the async function with the `await` keyword.\n\n```python\nimport json\nimport asyncio\nfrom jiosaavn import JioSaavn\n\nsaavn = JioSaavn()\ndata = asyncio.run(saavn.search_topquery(\"the landers\"))\nprint(json.dumps(data, indent=4))\n```\n\n### Todo\n- [ ] Add download support for album\n- [ ] Add download support for playlist\n- [ ] Add download support for podcasts\n- [ ] Add get details feature for album\n- [ ] Add get details feature for atrist\n- [ ] Add get details feature for playlist\n- [ ] Add get details feature for podcasts\n\n\nLicense\n----\n\nMIT License\n\nCopyright (c) 2023 Abhishek Chaudhari\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/abhichaudharii/jiosaavn-python/archive/refs/tags/v0.2.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/abhichaudharii/jiosaavn-python",
    "keywords": "JioSaavn,JioSaavn-API,Saavn,Saavn API,download songs,lyrics,playlist",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "jiosaavn-python",
    "package_url": "https://pypi.org/project/jiosaavn-python/",
    "platform": null,
    "project_url": "https://pypi.org/project/jiosaavn-python/",
    "project_urls": {
      "Download": "https://github.com/abhichaudharii/jiosaavn-python/archive/refs/tags/v0.2.tar.gz",
      "Homepage": "https://github.com/abhichaudharii/jiosaavn-python"
    },
    "release_url": "https://pypi.org/project/jiosaavn-python/0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "An unofficial Python3 wrapper for JioSaavn, a popular Indian music streaming service..",
    "version": "0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17171250,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e66dfacf45ae338409b329bf2c716f40b85086fc16793b7172467a7f06cb285c",
          "md5": "b6b650e34bdf13be815ccd3150bcfdc8",
          "sha256": "b1197528bf131274966ee6a0c8e70891b183234eab43e0ccadb6ed65e6d1fd94"
        },
        "downloads": -1,
        "filename": "jiosaavn-python-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b6b650e34bdf13be815ccd3150bcfdc8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5903,
        "upload_time": "2023-03-01T13:15:17",
        "upload_time_iso_8601": "2023-03-01T13:15:17.705548Z",
        "url": "https://files.pythonhosted.org/packages/e6/6d/facf45ae338409b329bf2c716f40b85086fc16793b7172467a7f06cb285c/jiosaavn-python-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fff48c57cdbb42a77476e8b661d9406d4aeaa6e998ac6b7625f0b3d6e12f4372",
          "md5": "59b14d5d5ffc38128ed490f64c678ec7",
          "sha256": "95a4d651339f33fe1adb84faa3af09abdbfb45e42cf05fea7dbf9cdf4b830d08"
        },
        "downloads": -1,
        "filename": "jiosaavn-python-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "59b14d5d5ffc38128ed490f64c678ec7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5971,
        "upload_time": "2023-03-06T07:55:49",
        "upload_time_iso_8601": "2023-03-06T07:55:49.116073Z",
        "url": "https://files.pythonhosted.org/packages/ff/f4/8c57cdbb42a77476e8b661d9406d4aeaa6e998ac6b7625f0b3d6e12f4372/jiosaavn-python-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fff48c57cdbb42a77476e8b661d9406d4aeaa6e998ac6b7625f0b3d6e12f4372",
        "md5": "59b14d5d5ffc38128ed490f64c678ec7",
        "sha256": "95a4d651339f33fe1adb84faa3af09abdbfb45e42cf05fea7dbf9cdf4b830d08"
      },
      "downloads": -1,
      "filename": "jiosaavn-python-0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "59b14d5d5ffc38128ed490f64c678ec7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5971,
      "upload_time": "2023-03-06T07:55:49",
      "upload_time_iso_8601": "2023-03-06T07:55:49.116073Z",
      "url": "https://files.pythonhosted.org/packages/ff/f4/8c57cdbb42a77476e8b661d9406d4aeaa6e998ac6b7625f0b3d6e12f4372/jiosaavn-python-0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}