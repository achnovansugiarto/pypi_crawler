{
  "info": {
    "author": "Werley Cordeiro",
    "author_email": "werleycordeiro@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "=====================================\nDynamic-Nelson-Siegel-Svensson Models\n=====================================\n\n\n.. image:: https://img.shields.io/pypi/v/Dynamic_Nelson_Siegel_Svensson_Kalman_Filter.svg\n        :target: https://pypi.python.org/pypi/Dynamic_Nelson_Siegel_Svensson_Kalman_Filter\n\n\nThis package implements the Dynamic Nelson-Siegel-Svensson models with Kalman filter in Python.\n\n* Free software: MIT license\n* Python 3.7 or later supported\n\n\nFeatures\n--------\n\n* Python implementation of the Dynamic Nelson-Siegel curve (three factors) with Kalman filter\n* Python implementation of the Dynamic Nelson-Siegel-Svensson curve (four factors) with Kalman filter\n* Forecasting the yield curve is available\n* Log-likelihood is available to use optimize.minimize\n\nFitting the Dynamic-Nelson-Siegel\n---------------------------------\n\nTo fitting the yield curve, we must set (param,Y,lik,frct,ahead,mty,model)\n\nparam: initial parameters vector of Dynamic-Nelson-Siegel models obtained by OLS in the two-step approach = \n\n([\n\nThe log of lambdas,\n\nthe square root of sample covariance diagonal matrix of VAR(1) residuals (H),\n\nthe VAR(1) matrix (phi),\n\nthe betas averages (mu), and\n\nthe cholesky deconposition of the VAR(1) estimated innovations covariance matrix (Q)\n\n]);\n\nY: pandas data frame;\n\nlik: log-likelihood;\n\nfrct: forecasts;\n\nahead: months (years) ahead forecasts;\n\nmty: maturities in months (years);\n\nmodel: 'NS' for the Dynamic Nelson-Siegel model  or 'S' for the Dynamic Nelson-Siegel-Svensson model;\n\n.. code-block:: python\n\n        from Dynamic_Nelson_Siegel_Svensson_Kalman_Filter import kalman\n        import numpy as np\n        import pandas as pd\n\n        url = 'https://www.dropbox.com/s/inpnlugzkddp42q/bonds.csv?dl=1' # US Yield Curve 1972 - 2000\n        df = pd.read_csv(url,sep=';',index_col=0)\n\n        frct = False\n        ahead = 0\n        lik = True\n        mty =  np.array([3,6,9,12,15,18,21,24,30,36,48,60,72,84,96,108,120]) # maturities in months\n        model = 'NS'\n\n        param = np.array([-2.798522, # log of 0.0609\n        0.14170940,0.07289485,0.11492339,0.11120008,0.09055795,0.07672075,0.07222108,0.07076431,0.07012891,0.07267366,0.10624206,0.09029621,0.10374527,0.09801215,0.09122014,0.11794190,0.13354418, # H\n        0.99010443,0.02496842,-0.002294319, # phi\n        -0.02812401,0.94256154, 0.028699387, # phi\n        0.05178493,0.01247332, 0.788078795, # phi\n        8.345444,-1.572442,0.2029919,  # mu\n        0.3408764,-0.07882772,-0.21351036, # Q\n        0.62661018,-0.00425989, # Q\n        1.08802059]) # Q\n\n        kalman(param = param,Y = df, lik = lik, frct = frct, ahead = ahead, mty = mty, model = model)\n\nwhich gives the following output\n\n.. code-block:: python\n\n        -2281.5860793152\n\n\nForecasting the Dynamic-Nelson-Siegel \n-------------------------------------\n\nKalman function also provides forecasts. We set 12 months ahead, and we define param, Y, mty, and model as above. \n\n.. code-block:: console\n\n        frst = True\n        lik = False\n        ahead = 12\n\n        kalman(param = param,Y = df, lik = lik, frct = frct, ahead = ahead, mty = mty, model = model)\n\nwhich returns (a_tt,a_t,P_tt,P_t,v2,v1,Yf)\n\na_tt: the a posteriori state estimate,\n\na_t: the a priori state estimate,\n\nP_tt: the a posteriori estimate covariance matrix,\n\nP_t: the a posteriori estimate covariance matrix,\n\nv2: filtered yields,\n\nv1: filtered erros, and\n\nYf: forecasts.\n\nFitting and Forecasting the Dynamic-Nelson-Siegel-Svensson\n----------------------------------------------------------\n\nWe can replicate the steps above but using the following initial parameters.\n\n.. code-block:: console\n\n        model = 'S'\n\n        param = np.array([-2.798522,-3.55908713, # lambdas\n        0.14170940,0.07289485,0.11492339,0.11120008,0.09055795,0.07672075,0.07222108,0.07076431,0.07012891,0.07267366,0.10624206,0.09029621,0.10374527,0.09801215,0.09122014,0.11794190,0.13354418, # H\n        0.99010443,0.02496842,-0.002294319,0.0000, # phi\n        -0.02812401,0.94256154, 0.028699387,0.000, # phi\n        0.05178493,0.01247332, 0.788078795,0.0000, # phi\n        0.00000000,0.00000000,0.0000000000,0.6000, # phi\n        8.345444,-1.572442,0.2029919,2.96696726, # mu \n        0.3408764,-0.07882772,-0.21351036,0.1, # Q\n        0.62661018,-0.00425989,0.2, # Q\n        1.08802059,0.3, # Q\n        0.4]) # Q\n\noptimize.minimize \n------------------\n\n.. code-block:: console\n\n        from scipy import optimize\n\n        optimize.minimize(fun = kalman, x0 = param, args = (df,lik,frct,ahead,mty,model),method = 'L-BFGS-B', bounds = None,options={'disp':True})\n\nwhich gives the following output for the Dynamic-Nelson-Siegel model\n\n.. code-block:: console\n\n        ...\n        CONVERGENCE: REL_REDUCTION_OF_F_<=_FACTR*EPSMCH\n        fun: -3184.551029683603\n        ...\n        success: True\n        x: array([-2.55419095,  0.2682528 ,  0.07550792,  0.09029396,  0.10450556,\n        0.09915572,  0.08648558,  0.07862346,  0.07209206,  0.07267585,\n        0.07909973,  0.10295337,  0.09260472,  0.10041753,  0.1117615 ,\n        0.10696698,  0.15069579,  0.17277911,  0.99437232,  0.02861622,\n       -0.02214779, -0.02886483,  0.93904762,  0.03963317,  0.02540488,\n        0.02288304,  0.84151308,  7.99042415, -1.46634099, -0.43379175,\n        0.30276472, -0.02340832,  0.0488872 ,  0.61858155,  0.01026079,\n        0.89411573])\n\nCredits\n-------\n\nMain developer is Werley Cordeiro_.\n\n.. _Cordeiro: https://werleycordeiro.github.io/\n\n\n=======\nHistory\n=======\n\n0.1.0 (2021-02-25)\n------------------\n\n* First release on PyPI.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "https://github.com/werleycordeiro/Dynamic_Nelson_Siegel_Svensson_Kalman_Filter/archive/v_0.1.0.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/werleycordeiro/Dynamic_Nelson_Siegel_Svensson_Kalman_Filter",
    "keywords": "Dynamic_Nelson_Siegel_Svensson_Kalman_Filter",
    "license": "MIT license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Dynamic-Nelson-Siegel-Svensson-Kalman-Filter",
    "package_url": "https://pypi.org/project/Dynamic-Nelson-Siegel-Svensson-Kalman-Filter/",
    "platform": "",
    "project_url": "https://pypi.org/project/Dynamic-Nelson-Siegel-Svensson-Kalman-Filter/",
    "project_urls": {
      "Download": "https://github.com/werleycordeiro/Dynamic_Nelson_Siegel_Svensson_Kalman_Filter/archive/v_0.1.0.tar.gz",
      "Homepage": "https://github.com/werleycordeiro/Dynamic_Nelson_Siegel_Svensson_Kalman_Filter"
    },
    "release_url": "https://pypi.org/project/Dynamic-Nelson-Siegel-Svensson-Kalman-Filter/0.1.0/",
    "requires_dist": [
      "pandas (>=0.23)",
      "numpy (>=1.14)"
    ],
    "requires_python": "",
    "summary": "Implementation of the Dynamic-Nelson-Siegel-Svensson models with Kalman FilterFitting and Forecasting the Yield Curve.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9526261,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fe7f146159ed3b1a3a6dc7af953f40b1d3b65d5be9e7300d5912db0b155873bd",
          "md5": "e6b66608da524aede06ae80f94933068",
          "sha256": "e2a1f9c84eb5046d0c23216981af488fad4f89e07f4186ebd1c070a84d086e1c"
        },
        "downloads": -1,
        "filename": "Dynamic_Nelson_Siegel_Svensson_Kalman_Filter-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e6b66608da524aede06ae80f94933068",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7944,
        "upload_time": "2021-02-25T22:08:09",
        "upload_time_iso_8601": "2021-02-25T22:08:09.281332Z",
        "url": "https://files.pythonhosted.org/packages/fe/7f/146159ed3b1a3a6dc7af953f40b1d3b65d5be9e7300d5912db0b155873bd/Dynamic_Nelson_Siegel_Svensson_Kalman_Filter-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fa4911e5744b1f008423d92aca44f260d3268dfe262bd4f4b33c9b3adeafd531",
          "md5": "3a42779aefef8320dd8e9c90072eb0ec",
          "sha256": "e49784de87d6a91bbc57a392c3274918df9d7c3897592007f786698ae32a27b2"
        },
        "downloads": -1,
        "filename": "Dynamic_Nelson_Siegel_Svensson_Kalman_Filter-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3a42779aefef8320dd8e9c90072eb0ec",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5856,
        "upload_time": "2021-02-25T22:08:10",
        "upload_time_iso_8601": "2021-02-25T22:08:10.707192Z",
        "url": "https://files.pythonhosted.org/packages/fa/49/11e5744b1f008423d92aca44f260d3268dfe262bd4f4b33c9b3adeafd531/Dynamic_Nelson_Siegel_Svensson_Kalman_Filter-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fe7f146159ed3b1a3a6dc7af953f40b1d3b65d5be9e7300d5912db0b155873bd",
        "md5": "e6b66608da524aede06ae80f94933068",
        "sha256": "e2a1f9c84eb5046d0c23216981af488fad4f89e07f4186ebd1c070a84d086e1c"
      },
      "downloads": -1,
      "filename": "Dynamic_Nelson_Siegel_Svensson_Kalman_Filter-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e6b66608da524aede06ae80f94933068",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 7944,
      "upload_time": "2021-02-25T22:08:09",
      "upload_time_iso_8601": "2021-02-25T22:08:09.281332Z",
      "url": "https://files.pythonhosted.org/packages/fe/7f/146159ed3b1a3a6dc7af953f40b1d3b65d5be9e7300d5912db0b155873bd/Dynamic_Nelson_Siegel_Svensson_Kalman_Filter-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fa4911e5744b1f008423d92aca44f260d3268dfe262bd4f4b33c9b3adeafd531",
        "md5": "3a42779aefef8320dd8e9c90072eb0ec",
        "sha256": "e49784de87d6a91bbc57a392c3274918df9d7c3897592007f786698ae32a27b2"
      },
      "downloads": -1,
      "filename": "Dynamic_Nelson_Siegel_Svensson_Kalman_Filter-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "3a42779aefef8320dd8e9c90072eb0ec",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5856,
      "upload_time": "2021-02-25T22:08:10",
      "upload_time_iso_8601": "2021-02-25T22:08:10.707192Z",
      "url": "https://files.pythonhosted.org/packages/fa/49/11e5744b1f008423d92aca44f260d3268dfe262bd4f4b33c9b3adeafd531/Dynamic_Nelson_Siegel_Svensson_Kalman_Filter-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}