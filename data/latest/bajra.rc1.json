{
  "info": {
    "author": "Souvik Pratiher",
    "author_email": "spratiher9@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Bajra [![Bajra](https://img.shields.io/pypi/v/Bajra.svg?style=flat-square)](https://pypi.org/project/bajra/)\n\n![bajra](https://i.ibb.co/r2DmPqb/bajra.png)\n\nBajra is a simple ORM API *(for MySQL and PostGreSQL)* that provide helpers to manage raw SQL in Python applications.\n\n# What Bajra can do?\n\nBajra allows you to write raw SQL and forget about cursors, and it's related data structures like tuples or dicts. \nAlso allows you to write your query by pieces, making the whole thing more readable.\n\nLet's see a few examples!\n\n## Fetching results made simple\n\n```python\nfrom bajra import Bajra\nfrom bajra.engines.postgres import PostgreSQLEngine\n\ncater = Bajra(PostgreSQLEngine(dsn=\"YOUR-DATABASE-DSN\"))\nrows = cater.fetchall(\"SELECT name, surname FROM test\")  # That command returns a RowResult you can iterate\nfor row in rows:\n    print(row.name)  # You can access to the data with dot notation.\n    print(row['name'])  # Also as a dict-like object.\n```\n\n## Querying with arguments. No more pain.\n\n```python\nfrom bajra import Bajra\nfrom bajra.engines.postgres import PostgreSQLEngine\n\ncater = Bajra(PostgreSQLEngine(dsn=\"YOUR-DATABASE-DSN\"))\nrow = cater.fetchone(\"SELECT name, surname FROM test WHERE name = %s\", (\"John\", ))\nprint(row.name)  # John\nprint(row.surname)  # Costa\n\nrow = cater.fetchone(\"SELECT name, surname FROM test WHERE name = %(name)s\", {'name': 'John'})\nprint(row.name)  # John\nprint(row.surname)  # Costa\n\nrow = cater.fetchone(\"SELECT name, surname FROM test WHERE name = %(name)s\", name='John')\nprint(row.name)  # John\nprint(row.surname)  # Costa\n```\n\n## Querying piece by piece\n```python\nfrom bajra import Bajra\nfrom bajra.engines.postgres import PostgreSQLEngine\n\ncater = Bajra(PostgreSQLEngine(dsn=\"YOUR-DATABASE-DSN\"))\nquery = cater.query(\"SELECT * FROM test\")\nquery.append(\"WHERE name = %(name)s\", name=\"John\")\nrow = cater.fetchone(query)\nrow.name  # John\nrow.surname  # Costa\n```\n\n## Execute all the things.\n```python\nfrom bajra import Bajra\nfrom bajra.engines.postgres import PostgreSQLEngine\n\ncater = Bajra(PostgreSQLEngine(dsn=\"YOUR-DATABASE-DSN\"))\nquery = cater.query(\"INSERT INTO test (name, surname) VALUES\")\nquery.append(\"(%(name)s, %(surname)s)\", name=\"Thomas\", surname=\"Jefferson\")\n\nresult = cater.execute(query)\nprint(result.lastrowid)  # Last Row ID of the last query. (If the engine supports it.)\nprint(result.rowcount)  # How many rows retrieve the last query. (If the engine supports it.)\nprint(result.rownumber)  # Number of rows affected by the last query. (If engine supports it.)\n```\n\n## Transactions\n```python\nfrom bajra import Bajra\nfrom bajra.engines.postgres import PostgreSQLEngine\n\ncater = Bajra(PostgreSQLEngine(dsn=\"YOUR-DATABASE-DSN\"))\ncater.begin()\nquery = cater.query(\"INSERT INTO test (name, surname) VALUES\")\nquery.append(\"(%(name)s, %(surname)s)\", name=\"Marie-Cole\", surname=\"Ross\")\n\nresult = cater.execute(query)\nprint(result.lastrowid)  # Last Row ID of the last query. (If the engine supports it.)\nprint(result.rowcount)  # How many rows retrieve the last query. (If the engine supports it.)\nprint(result.rownumber)  # Number of rows affected by the last query. (If engine supports it.)\n\ncater.commit()\n```\n\n## Transactions within a context manager\n```python\nfrom bajra import Bajra\nfrom bajra.engines.postgres import PostgreSQLEngine\n\n\ndef callback_on_exception(_cater, exc_type, exc_value, traceback):\n    print(exc_type)  # <class 'psycopg2.ProgrammingError'>\n\n\ncater = Bajra(PostgreSQLEngine(dsn=\"YOUR-DATABASE-DSN\"))\n\nwith cater.transaction(rollback_on_exc=True, callback_exc=callback_on_exception):\n    cater.execute(\"INSERT INTO test (name, surname) VALUES %s, %s\", (\"Augustus\", \"Zuma\"))\n\nrow = cater.fetchone(\"SELECT * FROM test WHERE name=%s AND surname=%s\", (\"Augustus\", \"Zuma\"))\nprint(row)  # None, Bajra has perfomed a rollback due to a exception.\n```\n\n# Collaborators Welcome!\n\nIf you have an idea you want to contribute in Bajra, clone the repo and raise a pull request with your feature!\n\n![Made with love in India](https://madewithlove.now.sh/in?heart=true&template=flat-square)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/Spratiher9/Bajra/archive/refs/tags/v0.0.1.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Spratiher9/Bajra",
    "keywords": "sql,orm,raw-sql,python,postgres,mysql,database",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "bajra",
    "package_url": "https://pypi.org/project/bajra/",
    "platform": "",
    "project_url": "https://pypi.org/project/bajra/",
    "project_urls": {
      "Download": "https://github.com/Spratiher9/Bajra/archive/refs/tags/v0.0.1.tar.gz",
      "Homepage": "https://github.com/Spratiher9/Bajra"
    },
    "release_url": "https://pypi.org/project/bajra/0.0.1/",
    "requires_dist": [
      "PyMySQL (==0.9.2)",
      "psycopg2-binary (==2.9.3)"
    ],
    "requires_python": ">=3.6",
    "summary": "A efficient raw SQL ORM",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12690706,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4fa4729a868ef6bac3e4b3b648fd5122dbcb00cb1fd6c2cb906b05715235cc1",
          "md5": "707ab9b6d347ba72ce0b1121f7fae2be",
          "sha256": "d7aec783d0476b001cfe3c114763af349b3b915c8bd48ec4e8fc84205e3f758b"
        },
        "downloads": -1,
        "filename": "bajra-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "707ab9b6d347ba72ce0b1121f7fae2be",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10581,
        "upload_time": "2022-01-25T19:27:11",
        "upload_time_iso_8601": "2022-01-25T19:27:11.512293Z",
        "url": "https://files.pythonhosted.org/packages/a4/fa/4729a868ef6bac3e4b3b648fd5122dbcb00cb1fd6c2cb906b05715235cc1/bajra-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ae65fef73fee96f5e6cb417061e458f2a05db4251549dbb0d08191e27a51d925",
          "md5": "4a7786d0f73da4d3d2e3a912420e0eab",
          "sha256": "6911c91257865df97a19312f3c972bd6149c68e9aba40d70d571177755dfb870"
        },
        "downloads": -1,
        "filename": "bajra-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4a7786d0f73da4d3d2e3a912420e0eab",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10645,
        "upload_time": "2022-01-25T19:27:13",
        "upload_time_iso_8601": "2022-01-25T19:27:13.936256Z",
        "url": "https://files.pythonhosted.org/packages/ae/65/fef73fee96f5e6cb417061e458f2a05db4251549dbb0d08191e27a51d925/bajra-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a4fa4729a868ef6bac3e4b3b648fd5122dbcb00cb1fd6c2cb906b05715235cc1",
        "md5": "707ab9b6d347ba72ce0b1121f7fae2be",
        "sha256": "d7aec783d0476b001cfe3c114763af349b3b915c8bd48ec4e8fc84205e3f758b"
      },
      "downloads": -1,
      "filename": "bajra-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "707ab9b6d347ba72ce0b1121f7fae2be",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 10581,
      "upload_time": "2022-01-25T19:27:11",
      "upload_time_iso_8601": "2022-01-25T19:27:11.512293Z",
      "url": "https://files.pythonhosted.org/packages/a4/fa/4729a868ef6bac3e4b3b648fd5122dbcb00cb1fd6c2cb906b05715235cc1/bajra-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ae65fef73fee96f5e6cb417061e458f2a05db4251549dbb0d08191e27a51d925",
        "md5": "4a7786d0f73da4d3d2e3a912420e0eab",
        "sha256": "6911c91257865df97a19312f3c972bd6149c68e9aba40d70d571177755dfb870"
      },
      "downloads": -1,
      "filename": "bajra-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "4a7786d0f73da4d3d2e3a912420e0eab",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 10645,
      "upload_time": "2022-01-25T19:27:13",
      "upload_time_iso_8601": "2022-01-25T19:27:13.936256Z",
      "url": "https://files.pythonhosted.org/packages/ae/65/fef73fee96f5e6cb417061e458f2a05db4251549dbb0d08191e27a51d925/bajra-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}