{
  "info": {
    "author": "Koen Schilders",
    "author_email": "koen@schilders.org",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Writing your own crypto-trade bot is easy now!\n\ncryptrade is a project that offers a a high level abstraction of a crypto-currency trade API. It offers classes for:\n* Accounts, holding both fiat currency (EUR, USD, etc) as well as crypto currencies (BTH, ETH, etc)\n* Products, representing what you can actually trade on a crypto exchange, eg. BTC-EUR (buy BTC pay in EUR) or ETH-BTC (buy ETH pay in BTC)\n* Currencies, representing fiat and crypro currencies and their IDs used by exchanges\n* Orders, the actual trade (buying or selling) of crypto currency\n* Tickers, providing 'real-time' info on market-price and bid/ask prices\n\nThe (abstract) exchange interfaces provide the basic validations needed to successfully trade on an online exchange, make the necessary API calls, and handle the responses. To make the underlying exchange transparent, the API is provided using an Abstract Factory pattern. \n\nOn top of this, classes are provided for:\n* Ticker, Account, and Order monitoring (implemented using the Observer pattern)\n* Transactions, representing the total of buying/selling transactions\n* Logger, providing logging classes for logging to console, file, and through PushBullet. These classes are implemented as Singletons.\n\nAt this moment, the following crypto exchanges are supported:\n* Coinbase Pro (http://pro.coinbase.com), formerly known as GDAX\n* Binance (http://binance.com)\n* Kraken (http://www.kraken.com)\n* Bitfinex (http://bitfinex.com)\n\nThe interfaces can be used in a synchronous manner, however they also include asynchronous interfaces so it is possible to make use of the asyncio package for cooperative multitasking using an event-loop.\n\nTwo sample programs are included:\n* cryptrade.py, a sample program that shows the usage of this package. It's operation can be directed using commandline parameters. It will trade according a very simple algorithm.\n~~~~\nusage: cryptrade.py [-h] [-c {eur,btc}] [-d TRADE_DELTA] [-a TRADE_AMOUNT]\n                    exchange currency\n\npositional arguments:\n  exchange              Exchange to trade on. Currently supported: coinbase,\n                        binance, kraken, bitfinex\n  currency              Currency to trade in: btc, eth, xrp, ltc, bch, ...\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c CURRENCY, --currency CURRENCY\n                        (Crypto) currency to use for buying.\n  -d TRADE_DELTA, --delta TRADE_DELTA\n                        Percentage (0.0 < trade < 100.0) by which market price\n                        should change before making a trade (accepts\n                        fractional numbers).\n  -a TRADE_AMOUNT, --amount TRADE_AMOUNT\n                        Initial amount to start trading with (btc>=0.001,\n                        eth>=0.01, xrp>=1, ltc=0.1).\n~~~~\n* tickermonitor.py, shows how the asynchronous interfaces can be used by implementing a tickermonitor for all supported exchanges in parallel.\n\nMake sure you provide your credentials (API key & secret) before using it. They should be stored in a json file like:\n~~~~\n{\n    \"coinbase\" : \n     {\n        \"api_key\" : \"your api key\",\n        \"api_secret\" : \"your api secret\",\n        \"api_pass\" : \"you api password\"\n    },\n    \"binance\" :\n    {\n        \"api_key\" : \"your api key\",\n        \"api_secret\" : \"your api secret\"\n    },\n    \"kraken\" :\n    {\n        \"api_key\" : \"your api key\",\n        \"api_secret\" : \"your api secret\"\n    },\n    \"bitfinex\" :\n    {\n        \"api_key\" : \"your api key\",\n        \"api_secret\" : \"your api secret\"\n    },\n    \"pushbullet\" :\n    {\n        \"api_key\" : \"your api key\"\n    }\n}\n~~~~\n\nThe cryptrade module contains the following packages:\n* logging (logging interfaces)\n* parameters (interfaces for dealing with -commandline- parameters)\n* exceptions (containing module-specific exceptions)\n* observers (containing base classes for observables and observers)\n* exchange_api (containing the abstract interface for trading)\n* monitor (containing monitoring classes using asyncio)\n* binance (containing concrete implementation for Binance)\n* bitfinex (containing concrete implementation for Bitfinex)\n* kraken (containing concrete implementation for Kraken)\n* coinbase (containing concrete implementation for Coinbase Pro)\n\nThis project uses the official python interface for [binance.com](http://python-binance.readthedocs.io/en/latest) as well as the 'unofficial' python interface for [Coinbase Pro](https://github.com/danpaquin/coinbasepro-python) by Daniel Paquin, the official python interface for [Kraken.com](https://github.com/veox/python3-krakenex), and the official python interface from [bitfinex.com](https://github.com/bitfinexcom/bitfinex-api-py).\n\nSpecial requests or questions: send me a message!\n\nWant to stimulate the ongoing development? Your BTCs are welcome! Send them to bitcoin:15pqCjD7pPPraGJ8T4yfbkrtFTBX8M4jyw\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/elnkosc/cryptrade/",
    "keywords": "",
    "license": "GNU General Public License v3.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cryptrade",
    "package_url": "https://pypi.org/project/cryptrade/",
    "platform": "",
    "project_url": "https://pypi.org/project/cryptrade/",
    "project_urls": {
      "Homepage": "https://github.com/elnkosc/cryptrade/"
    },
    "release_url": "https://pypi.org/project/cryptrade/1.103/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Basic crypto trading API for developing trading bots with transparent access to Coinbase Pro, Binance, Kraken, and Bitfinex",
    "version": "1.103",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7289714,
  "releases": {
    "1.103": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e600b57f80456fc5ea85b39023be8ca3dae39d0b60a0f50ada8aafb0f1a83469",
          "md5": "90a629d07f7e799e3bc042f9a823cb7d",
          "sha256": "486040da554b493141460095a835092f1e52134b00d4affed1e175f66fffbf15"
        },
        "downloads": -1,
        "filename": "cryptrade-1.103-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "90a629d07f7e799e3bc042f9a823cb7d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17895,
        "upload_time": "2020-05-20T21:28:47",
        "upload_time_iso_8601": "2020-05-20T21:28:47.009553Z",
        "url": "https://files.pythonhosted.org/packages/e6/00/b57f80456fc5ea85b39023be8ca3dae39d0b60a0f50ada8aafb0f1a83469/cryptrade-1.103-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dd0353a372ef3aeb10607ad286acfbe310f1f636e0855338875eb216771b0596",
          "md5": "2bccd55e22aaa74bf9e168c40df0b614",
          "sha256": "2e4797468f13c91d7ad74a00361a926242273f7040c0d579a84f1fb0d4f71c48"
        },
        "downloads": -1,
        "filename": "cryptrade-1.103.tar.gz",
        "has_sig": false,
        "md5_digest": "2bccd55e22aaa74bf9e168c40df0b614",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13942,
        "upload_time": "2020-05-20T21:28:48",
        "upload_time_iso_8601": "2020-05-20T21:28:48.075935Z",
        "url": "https://files.pythonhosted.org/packages/dd/03/53a372ef3aeb10607ad286acfbe310f1f636e0855338875eb216771b0596/cryptrade-1.103.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e600b57f80456fc5ea85b39023be8ca3dae39d0b60a0f50ada8aafb0f1a83469",
        "md5": "90a629d07f7e799e3bc042f9a823cb7d",
        "sha256": "486040da554b493141460095a835092f1e52134b00d4affed1e175f66fffbf15"
      },
      "downloads": -1,
      "filename": "cryptrade-1.103-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "90a629d07f7e799e3bc042f9a823cb7d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 17895,
      "upload_time": "2020-05-20T21:28:47",
      "upload_time_iso_8601": "2020-05-20T21:28:47.009553Z",
      "url": "https://files.pythonhosted.org/packages/e6/00/b57f80456fc5ea85b39023be8ca3dae39d0b60a0f50ada8aafb0f1a83469/cryptrade-1.103-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dd0353a372ef3aeb10607ad286acfbe310f1f636e0855338875eb216771b0596",
        "md5": "2bccd55e22aaa74bf9e168c40df0b614",
        "sha256": "2e4797468f13c91d7ad74a00361a926242273f7040c0d579a84f1fb0d4f71c48"
      },
      "downloads": -1,
      "filename": "cryptrade-1.103.tar.gz",
      "has_sig": false,
      "md5_digest": "2bccd55e22aaa74bf9e168c40df0b614",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13942,
      "upload_time": "2020-05-20T21:28:48",
      "upload_time_iso_8601": "2020-05-20T21:28:48.075935Z",
      "url": "https://files.pythonhosted.org/packages/dd/03/53a372ef3aeb10607ad286acfbe310f1f636e0855338875eb216771b0596/cryptrade-1.103.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}