{
  "info": {
    "author": "Mark Henderson",
    "author_email": "mark.henderson1988@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "KML+\n===\n\n\nKML+ (KMLPlus) is library of code for Python which allows the user to easily create standard and 'floating' Polygons,\nCircles and Arcs.\n\n---\n\nTable of Contents\n-----------------\n\n1. [Who is this for](#who-is-this-for)\n2. [Installing](#installing)\n3. [Usage](#usage)\n    - [Recommendations](#recommendations)\n    - [Quick Start](#quick-start)\n4. [Classes](#classes)\n    - [Coordinate](#coordinate)\n      - [Methods](#coordinate-methods)\n    - [LinePath](#linepath)\n        - [Creating a polygon using the LinePath class](#creating-a-polygon-using-the-linepath-class)\n        - [Automatically create LinePath objects without Coordinate objects](#automatically-create-linepath-objects-without-coordinate-objects)\n         - [Methods](#linepath-methods)\n    - [ArcPath](#arcpath)\n      - [Methods](#arcpath-methods)\n5. [Acknowledgements](#acknowledgements)\n\n---\n\nWho is this for\n---------------\n\nThis is for anyone who wishes to easily render polygons, especially 'floating' or curved polygons within Google Earth.\n\nI work in the aviation industry and needed a reliable way to create models of our airspace. It its useful for creating\nmodels of airways and controlled airspace. It can be used for anything that takes your fancy!\n\n![Prestwick airspace example](img/egpk_airspace_sideon.png)\n\n![Floating polygon example](img/floating_polygon_1.jpg)\n\n---\n\nInstalling\n----------\n\n### Pip\n\n```\npip install kmlplus\n```\n\n### Clone\n\n```\ngit clone https://github.com/MHenderson1988/kmlplus.git\n\n# Or\n\ngit clone git@github.com:MHenderson1988/kmlplus.git\n```\n\n### Running tests\n\n```\npython -m unittest\n```\n\n---\n\nUsage\n-----\n\n### Recommendations\n\nKML+ easily integrates with the fantastic [Simplekml](https://pypi.org/project/simplekml/) library and I highly\nrecommend using it in conjunction with KML+ for the best experience.\n\nTake a look at the example .py file provided to see how KML+ integrates with SimpleKML to create airspace\nrepresentations from CAA AIP supplied data.\n\n---\n\n### Quick Start\n\nThe simplest way to create a standard 'level' floating polygon is to use the 'paths.quick_polygon()' method.\n\n```bazaar\nimport simplekml\nfrom kmlplus import paths\n\n# Auto generate a linepath polygon from a list of string representations of coordinates in latitude, longitude, height\n# format.  Can be a mix of DMS and decimal.  Make sure the last and first coordinate are the same, otherwise the\n# Polygon will not complete\nlist_of_coordinates = [\"55.123, -4.123\", \"55.600, -41232.12\", \"55.100, -4.4323\", \"55.123, -4.123\"]\n\n# Pass the list to the LinePath constructor.  You can override the height at this point with the 'height' kwarg.\nlower_layer, upper_layer, sides = paths.quick_polygon(*list_of_coordinates, lower_height=3000, upper_height=8000)\n\n\n# Use simplekml to create the .kml\ndef create_kml():\n    kml = simplekml.Kml()\n    fol = kml.newfolder(name='Quick start example')\n\n    pol = fol.newpolygon()\n    pol.outerboundaryis = lower_layer\n    pol.altitudemode = simplekml.AltitudeMode.relativetoground\n\n    pol = fol.newpolygon()\n    pol.outerboundaryis = upper_layer\n    pol.altitudemode = simplekml.AltitudeMode.relativetoground\n\n    for item in sides:\n        pol = fol.newpolygon()\n        pol.outerboundaryis = item\n        pol.altitudemode = simplekml.AltitudeMode.relativetoground\n\n    kml.save('Quick start example.kml')\n\n\nif __name__ == \"__main__\":\n    create_kml()\n```\n\n![Floating polygon example](img/quick_start.jpg)\n\nFor 'sloped' polygons, you need to manually specify the coordinates, so as not to override height values.\n\n```bazaar\nimport simplekml\nfrom kmlplus import paths\n\n\"\"\"\nCreating a sloped polygon using the create_layer_and_sides method.  When creating a sloped polygon you will need to\ndetermine the coordinates manually.  The blanket 'height' key word argument will cause all to default to a single value\nand will result in a 'level' polygon.\n\"\"\"\n\nlist_of_coordinates_lower = [\"56.11, -4.33, 5000\", \"56.88, -4.33, 20000\", \"56.88, -4.88, 20000\", \"56.11, -4.88, 5000\"]\nlist_of_coordinates_upper = [\"56.11, -4.33, 10000\", \"56.88, -4.33, 25000\", \"56.88, -4.88, 25000\", \"56.11, -4.88, 10000\"]\n\nlp_1 = paths.LinePath(*list_of_coordinates_lower)\nlp_2 = paths.LinePath(*list_of_coordinates_upper)\nsloped_sides = lp_1.create_sides(lp_2)\n```\n\n![Sloped polygon example](img/sloped_poly.jpg)\n\n---\n\nClasses\n---\n\nKML+ comprises three classes -\n\n- Coordinate class\n- LinePath class\n- ArcPath class\n\nThe user should be able to create simple floating polygons without touching the ArcPath class however it is documented\nhere in case you should wish to use it in other ways.\n\n***\n\n## Coordinate\n\n```bazaar\nCoordinate(**args, name=None, arc_direction=None, arc_origin=None*)\n```\n\nThe Coordinate class accepts up to three arguments - latitude, longitude and height. This can be given as either one\nstring or three separate arguments. Latitude and longitude must be either decimal coordinates or degrees minutes\nseconds (DMS). The coordinate object will auto-detect the coordinate type and will automatically convert DMS coordinates\nto kml readable decimal coordinates.\n\nCoordinate instances can also be designated as the start point of a clockwise or anti-clockwise arc/circle. This is\nachieved by appending either 'a' or 'c' to end of the latitude or longitude value.\n\nExamples -\n\n```bazaar\nfrom kmlplus import coordinates\n\n# A standard coordinate object with a default height of 0\nc1 = coordinates.Coordinate(55.123, -4.1234)\n\n# The same coordinate initialised with a height of 50m\nc1 = coordinates.Coordinate(55.123, -4.1234, 50)\n\n# Now with a string\nc1 = coordinates.Coordinate(\"55.123, -4.1234\")\n\n# Specifying that this coordinate is the start of a clockwise 'arc'\nc1 = coordinates.Coordinate(55.123, '-4.1234c')\n\n# You can combine coordinate types\nc1 = coordinates.Coordinate(55.123, '-41232.327847834c')\n```\n\nA note on arcs -\n\n* Values must be passed as a String eg - \"55.22132c\" is valid, 55.22132c will throw an error\n\n* If kwarg arc_origin is not passed, it will default to the centroid of the LineString created later on.\n\n### Coordinate Methods\n\n*generate_coordinates(distance=10, bearing=10, height=0)*\n\nTakes 3 key word arguments of distance(in Km), bearing and height. It returns a new Coordinate object representing the\nlocation specified from the Coordinate object calling the function\n\n```bazaar\nc1 = coordinates.Coordinate(55.123, -4.123, 0)\nc2 = c1.generate_coordinates(10, 180, 0)\n\nprint(c2)\n\n>> 55.03317, -4.123, 0.0\n```\n\n*get_bearing_and_distance(a_coordinate_object)*\n\nTakes one other Coordinate object as its argument. It returns the distance and bearing FROM the argument to the object\ncalling the method.\n\n```bazaar\nc1 = coordinates.Coordinate(55.123, -4.123, 0)\nc2 = c1.generate_coordinates(50, 180, 0)\nbearing, distance = c2.get_bearing_and_distance(c1)\n\nprint(bearing, distance)\n\n>> 180.0 50.0\n```\n\n*to_string_yx()*\n\nAccepts no arguments and returns a string in Latitude, Longitude format.\n\n```bazaar\nc1 = coordinates.Coordinate(55.11213, -4.24453)\nprint(c1.to_string_yx())\n\n>> 55.11213, -4.24453\n```\n\n*kml_tuple()*\n\nAccepts no arguments and returns a Tuple readable by .kml (Longitude, Latitude, height)\n\n```bazaar\nc1 = coordinates.Coordinate(\"55.23231c, -552312\")\nprint(c1.kml_tuple())\n\n>> (-55.38667, 55.23231, 0.0)\n```\n\n***\n\n## LinePath\n\nThe LinePath class takes Coordinate objects or lists of Coordinate objects as its arguments. If a Coordinate object\ndefines itself as the start of a clockwise or anticlockwise arc, the LinePath class will call an ArcPath instance. This\nwill automatically create the required arc as part of the LinePath objects coordinates.\n\n```bazaar\nLinePath(*args, sort=False, height=None, arc_points=50, origin = self.centroid*)\n```\n\n*args must all be instances of Type Coordinate.\n\n*sort=True* will sort the Coordinate objects into anticlockwise order around the polygon's centroid therefore allowing\ncorrect rendering by Google Earth. This is experimental and is highly unlikely to work with concave polygons.\n\n*height=float or int* will override all height values in the Coordinate arguments.\n\n*arc_points=int* will define how many coordinates should be created for any detected arcs/circles.\n\n*origin=Coordinate* details the origin for all ArcPaths automatically generated by the LinePath. Defaults to the\nLinePath centroid.\n\n```bazaar\nfrom kmlplus import paths\nmy_line_path = paths.Linepath(coordinate_1, coordinate_2, *arcpath_1)\n```\n\nIf a coordinate is detected with an arc suffix 'c' or 'a', the LinePath will automatically call the ArcPath class and\npopulate the arc coordinates.\n\n---\n\n### Creating a polygon using the LinePath class (The non-quick polygon)\n\n**Note** - LinePath.sides has been deprecated since 2.0. You can now create the sides using the .create_sides() method\nwhich returns a list. Or call .create_layer_and_sides() method to create an upper layer and the sides simultaneously\n\nOnce you have created the lower layer of your polygon, you can generate the upper layer and generate the sides by\ncalling the create_layer_and_sides() method -\n\n```bazaar\nmy_line_path = paths.Linepath(coordinate_1, coordinate_2, *arcpath_1)\nupper_layer, sides = my_line_path.create_layer_and_sides(height=height_for_upper_layer, origin=ArcPath_origin_coordinates)\n```\n\n---\n\n### Automatically create LinePath objects without Coordinate objects.\n\nLinePaths and their Coordinate instances can be automatically created from a list, as in the example file provided.\n\n```bazaar\nfrz_ref_point = coordinates.Coordinate(55.509392, -4.594581)\ncta_1 = [\n    \"554023,-45040\", \"553734,-44227a\", \"552811,-44906\", \"553124,-45830\", \"554023,-45040\"\n]\n\ndef create_polygon(a_list, lower_height, upper_height, arc_origin, **kwargs):\n    lp = paths.LinePath(*a_list, height=lower_height, origin=arc_origin)\n    lp2, sides = lp.create_layer_and_sides(height=upper_height, origin=arc_origin)\n    return lp, lp2, sides\n```\n\n### LinePath Methods\n\n*kml_format()*\n\nReturns all Coordinates in the instance as a list of Tuples.\n\n```bazaar\nc1 = coordinates.Coordinate(-43.232, 55.323, 500)\nc2 = coordinates.Coordinate(-43.232, 55.000, 23.2)\nline_path = paths.LinePath(c1, c2)\n\n>> [(55.323, -43.232, 500.0), (55.0, -43.232, 23.2)]\n```\n\n---\n\n*create_sides(a_linepath_instance)*\n\nTakes a LinePath instance as it's argument and creates polygons to form the 'sides' between the calling linepath and the\ninstance provided as the argument.\n\n```bazaar\ncoordinate_1, coordinate_2 = coordinates.Coordinate(55.22, -4.11, 0), coordinates.Coordinate(53.12, -3.11, 0)\ncoordinate_3, coordinate_4 = coordinates.Coordinate(55.22, -4.11, 500), coordinates.Coordinate(53.12, -3.11, 900)\n\nlp1 = paths.LinePath(coordinate_1, coordinate_2)\nlp2 = paths.LinePath(coordinate_3, coordinate_4)\n\nsides = lp1.create_sides(lp2)\nprint(sides)\n\n>>[[(-4.11, 55.22, 0.0), (-3.11, 53.12, 0.0), (-3.11, 53.12, 900.0), (-4.11, 55.22, 500.0)],\n [(-3.11, 53.12, 0.0), (-4.11, 55.22, 0.0), (-4.11, 55.22, 500.0), (-3.11, 53.12, 900.0)]]\n```\n\n---\n\n*create_layer_and_sides(*height=100.0*)\n\nCreates a new layer, copying the coordinates contained within the calling LinePath object and creates the 'sides' to\njoin them.\n\n```bazaar\nline_path = paths.LinePath(*self._coordinate_list)\nline_path_2, sides = line_path.create_layer_and_sides(height=400)\n```\n\n## ArcPath Methods\n\n```bazaar\nArcPath(*origin, start_bearing, end_bearing, radius, height=self.origin.height, direction='Clockwise', points=50*)\n```\n\nArcPath objects are used to create a series of Coordinate objects to simulate a circle or arc which starts and ends on a\nspecified bearing from a specified origin at a given radius. They can be 'Clockwise' or 'Anticlockwise' and return as\nmany or as few 'points' as desired.\n\n```bazaar\nc1 = coordinates.Coordinate(\"55.1234, -4.1234, 0\")\nap1 = paths.ArcPath(origin=c1, start_bearing=10, end_bearing=270, radius=25, direction='anticlockwise', points=100)\n\nprint(ap1)\n\n>>> ArcPath instance containing 100 Coordinate instances - ['55.34453, -4.05497, 0.0', '55.34518, -4.06176, 0.0', '55.34576, -4.06856, 0.0'.........]\n```\n\n## Acknowledgements\n\n- [Simplekml](https://pypi.org/project/simplekml/) - for creating an awesome library which has helped me create many\n  things and also inspiring me to write this library.`\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/MHenderson1988/kmlplus",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "KMLPlus",
    "package_url": "https://pypi.org/project/KMLPlus/",
    "platform": "",
    "project_url": "https://pypi.org/project/KMLPlus/",
    "project_urls": {
      "Homepage": "https://github.com/MHenderson1988/kmlplus"
    },
    "release_url": "https://pypi.org/project/KMLPlus/2.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "A Python library for creating 3d floating polygons and circles in .kml for Google Earth.",
    "version": "2.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9243188,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "21034df3a43b5750fde9756364fc5c86e8bafcf9ddca4bb68e88c5bdc7dfdd85",
          "md5": "8cdfe64a57739bf90dfa529cbd396e2f",
          "sha256": "3d18e94ba990d1b6438314d17b39dbafd67c45e522d90404f20f48e840c8fbd6"
        },
        "downloads": -1,
        "filename": "KMLPlus-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8cdfe64a57739bf90dfa529cbd396e2f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 11591,
        "upload_time": "2021-01-14T12:21:34",
        "upload_time_iso_8601": "2021-01-14T12:21:34.022794Z",
        "url": "https://files.pythonhosted.org/packages/21/03/4df3a43b5750fde9756364fc5c86e8bafcf9ddca4bb68e88c5bdc7dfdd85/KMLPlus-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6c2537174f2ed9cff1c5d70c0cb2463fcb548aeb936902b7ce790e8dc4289e97",
          "md5": "e9bf5fabc4926902dfb848e6fcb7b41c",
          "sha256": "4e029138fe37cf72cf554875025aad9cf98e6cd2ddf5fbc526b2e7d357b10a53"
        },
        "downloads": -1,
        "filename": "KMLPlus-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e9bf5fabc4926902dfb848e6fcb7b41c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 10166,
        "upload_time": "2021-01-14T12:21:35",
        "upload_time_iso_8601": "2021-01-14T12:21:35.724320Z",
        "url": "https://files.pythonhosted.org/packages/6c/25/37174f2ed9cff1c5d70c0cb2463fcb548aeb936902b7ce790e8dc4289e97/KMLPlus-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2855f7b18c1d1fb1734c97327b9ebc8798c6cbb1c54b1b1d5bda0db366c82c0a",
          "md5": "ccb8ddec4370976121d44865b4a0b215",
          "sha256": "57ecd11bd20980d110b8984cfe1938968e1005409dccce257d41bb4c543e9dc3"
        },
        "downloads": -1,
        "filename": "KMLPlus-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ccb8ddec4370976121d44865b4a0b215",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 9932,
        "upload_time": "2021-01-14T12:49:50",
        "upload_time_iso_8601": "2021-01-14T12:49:50.438506Z",
        "url": "https://files.pythonhosted.org/packages/28/55/f7b18c1d1fb1734c97327b9ebc8798c6cbb1c54b1b1d5bda0db366c82c0a/KMLPlus-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82be24659d1951ee08bcd89795df7e1239f0dd37b55f9e0767338d1f1ecf5e47",
          "md5": "21995972dfd1775f4a47bb981fce5c54",
          "sha256": "a5b6d9e4bd4640e8df98bf0361e15071235193bda739c560b3fc31cb6cfde739"
        },
        "downloads": -1,
        "filename": "KMLPlus-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "21995972dfd1775f4a47bb981fce5c54",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 8910,
        "upload_time": "2021-01-14T12:49:51",
        "upload_time_iso_8601": "2021-01-14T12:49:51.574451Z",
        "url": "https://files.pythonhosted.org/packages/82/be/24659d1951ee08bcd89795df7e1239f0dd37b55f9e0767338d1f1ecf5e47/KMLPlus-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7bd02dea7d1fa4e64a59d2d1b94ba90dfbe82cc6d86330b636addb41ff3972b9",
          "md5": "0094cabfccc5c6f9c74403c9dab551f0",
          "sha256": "4caaa2a751362930c8e17766e582aeca6a7e875275430925c1392fbbc02c1dfd"
        },
        "downloads": -1,
        "filename": "KMLPlus-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0094cabfccc5c6f9c74403c9dab551f0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 9975,
        "upload_time": "2021-01-18T11:33:33",
        "upload_time_iso_8601": "2021-01-18T11:33:33.659713Z",
        "url": "https://files.pythonhosted.org/packages/7b/d0/2dea7d1fa4e64a59d2d1b94ba90dfbe82cc6d86330b636addb41ff3972b9/KMLPlus-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b107bba45a2cb59891ada7334301fc48afd0d8243752d6521c559d4b114d1455",
          "md5": "2282628284a51a4ac13f555df3902a49",
          "sha256": "370bda19393f451d963608af962aefc86dc592bff3d3974022745d5bfaf42a86"
        },
        "downloads": -1,
        "filename": "KMLPlus-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "2282628284a51a4ac13f555df3902a49",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 8950,
        "upload_time": "2021-01-18T11:33:35",
        "upload_time_iso_8601": "2021-01-18T11:33:35.090844Z",
        "url": "https://files.pythonhosted.org/packages/b1/07/bba45a2cb59891ada7334301fc48afd0d8243752d6521c559d4b114d1455/KMLPlus-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f3b6243d843056c614f08c5226839bf0955705f7a8cc179f04cd42daaf7de50",
          "md5": "38f3d2491a9e50949ba8e044a6a3b141",
          "sha256": "afa92309a54bd759321671e29383864a260f7f1d40e81500609ba745f8b2ab7e"
        },
        "downloads": -1,
        "filename": "KMLPlus-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "38f3d2491a9e50949ba8e044a6a3b141",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 13022,
        "upload_time": "2021-01-20T13:51:01",
        "upload_time_iso_8601": "2021-01-20T13:51:01.449875Z",
        "url": "https://files.pythonhosted.org/packages/5f/3b/6243d843056c614f08c5226839bf0955705f7a8cc179f04cd42daaf7de50/KMLPlus-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b1533f6ac566389b7d015692305f61b8d141d55f5dd4b90005a4aee4af6335bd",
          "md5": "0853ead6bb5b259a37a21ae043a0e483",
          "sha256": "9fe6d5ef147916ee61081d7bae1228130db37a35566b2bbbbf184b4c358a608a"
        },
        "downloads": -1,
        "filename": "KMLPlus-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0853ead6bb5b259a37a21ae043a0e483",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 11103,
        "upload_time": "2021-01-20T13:51:02",
        "upload_time_iso_8601": "2021-01-20T13:51:02.505462Z",
        "url": "https://files.pythonhosted.org/packages/b1/53/3f6ac566389b7d015692305f61b8d141d55f5dd4b90005a4aee4af6335bd/KMLPlus-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cf0776deec59ab1cf01654d6299e8dd19b1f71ec08a8e60c35de4e8025dd9247",
          "md5": "fd82b0d11b59cc260f96b3ca2db3e1e2",
          "sha256": "18ad486825dc7c4fe8e54558887e9601804b942389da549b6ff11afe64797c77"
        },
        "downloads": -1,
        "filename": "KMLPlus-2.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fd82b0d11b59cc260f96b3ca2db3e1e2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 15874,
        "upload_time": "2021-01-23T13:57:52",
        "upload_time_iso_8601": "2021-01-23T13:57:52.680150Z",
        "url": "https://files.pythonhosted.org/packages/cf/07/76deec59ab1cf01654d6299e8dd19b1f71ec08a8e60c35de4e8025dd9247/KMLPlus-2.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3aa18c2ce8d65ea13773ddfd35055dda9d6e887523c73e78a55cb69e414e9d9c",
          "md5": "bb2d4fc93ed2933a81d62305f8dfce47",
          "sha256": "21bc2c751f7b94f417d48f3e93625bf78aac63cb7505609ed2f37d76d0877136"
        },
        "downloads": -1,
        "filename": "KMLPlus-2.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "bb2d4fc93ed2933a81d62305f8dfce47",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 14102,
        "upload_time": "2021-01-23T13:57:53",
        "upload_time_iso_8601": "2021-01-23T13:57:53.720878Z",
        "url": "https://files.pythonhosted.org/packages/3a/a1/8c2ce8d65ea13773ddfd35055dda9d6e887523c73e78a55cb69e414e9d9c/KMLPlus-2.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9bb68ca4857c924b90f94724f500e0d3924fff3459bb9daf93a24c8b7fed3718",
          "md5": "7bb2586eb957a0d93963765d5a96d431",
          "sha256": "4f9d18e64000153bf42c28c3ba001bdce1c3b5b1902483bd662c4a810fb5d45d"
        },
        "downloads": -1,
        "filename": "KMLPlus-2.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7bb2586eb957a0d93963765d5a96d431",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 17460,
        "upload_time": "2021-01-27T12:18:09",
        "upload_time_iso_8601": "2021-01-27T12:18:09.458868Z",
        "url": "https://files.pythonhosted.org/packages/9b/b6/8ca4857c924b90f94724f500e0d3924fff3459bb9daf93a24c8b7fed3718/KMLPlus-2.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a8f2898da8846b7282804101459d72f365dd7255b72ecae35ebc9c0c94faafac",
          "md5": "0663a6f88a22d5dcb967830e341406ae",
          "sha256": "ae922a711b30639535b8857c6f1a8a0c312e503161d1d9156c9392c2930c6577"
        },
        "downloads": -1,
        "filename": "KMLPlus-2.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0663a6f88a22d5dcb967830e341406ae",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 16092,
        "upload_time": "2021-01-27T12:18:10",
        "upload_time_iso_8601": "2021-01-27T12:18:10.454528Z",
        "url": "https://files.pythonhosted.org/packages/a8/f2/898da8846b7282804101459d72f365dd7255b72ecae35ebc9c0c94faafac/KMLPlus-2.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9bb68ca4857c924b90f94724f500e0d3924fff3459bb9daf93a24c8b7fed3718",
        "md5": "7bb2586eb957a0d93963765d5a96d431",
        "sha256": "4f9d18e64000153bf42c28c3ba001bdce1c3b5b1902483bd662c4a810fb5d45d"
      },
      "downloads": -1,
      "filename": "KMLPlus-2.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7bb2586eb957a0d93963765d5a96d431",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 17460,
      "upload_time": "2021-01-27T12:18:09",
      "upload_time_iso_8601": "2021-01-27T12:18:09.458868Z",
      "url": "https://files.pythonhosted.org/packages/9b/b6/8ca4857c924b90f94724f500e0d3924fff3459bb9daf93a24c8b7fed3718/KMLPlus-2.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a8f2898da8846b7282804101459d72f365dd7255b72ecae35ebc9c0c94faafac",
        "md5": "0663a6f88a22d5dcb967830e341406ae",
        "sha256": "ae922a711b30639535b8857c6f1a8a0c312e503161d1d9156c9392c2930c6577"
      },
      "downloads": -1,
      "filename": "KMLPlus-2.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "0663a6f88a22d5dcb967830e341406ae",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 16092,
      "upload_time": "2021-01-27T12:18:10",
      "upload_time_iso_8601": "2021-01-27T12:18:10.454528Z",
      "url": "https://files.pythonhosted.org/packages/a8/f2/898da8846b7282804101459d72f365dd7255b72ecae35ebc9c0c94faafac/KMLPlus-2.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}