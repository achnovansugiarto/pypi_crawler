{
  "info": {
    "author": "Tomas Nordin",
    "author_email": "tomasn@posteo.net",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Information Analysis",
      "Topic :: Scientific/Engineering :: Visualization"
    ],
    "description": ".. -*- coding: utf-8 -*-\n\ndwdat2py\n========\n\nDEWESoft, a company making hardware for data acquisition, also provide\nsoftware applications (Windows) for working with data sets produced with\nthe hardware. Files are in their proprietary formats such as .d7d, .d7z\nor .dxd. To work with the same data using a programming language like\nPython it is necessary to first convert them to a portable format such\nas text. To get around this extra step, DEWESoft provide a shared\nlibrary called DWDataReaderLib.\n\ndwdat2py is a python package with wrappers around the functions provided\nin DWDataReaderLib.\n\nInstallation\n------------\n\nUsing pip\n.........\n\n::\n\n   pip install dwdat2py\n\nInstalling from source\n......................\n\nClone the repo with ``git clone https://github.com/tomnor/dwdat2py.git``, cd\ninto dwdat2py directory (the directory with the ``setup.py`` file) and say\n\n::\n\n   pip install .\n\nLibraries are shipped with dwdat2py\n...................................\n\nBy installation of dwdat2py, the Dewesoft libraries are included. Be\naware that the libraries are gratis but non-free binary blobs. The\nlibraries come with an EULA that permits use and redistribution in\nthird party projects as far as I understand it.\n\nLibraries are installed in a sub-directory to dwdat2py called\n``libs``.\n\nLibraries are retrieved from\nhttps://download.dewesoft.com/list/developers where one has to\nregister for an account to get it. Once logged in, find a button\n\"Dewesoft Data Reader Library\", enabling to download a zip file\n(DWDataReader.zip) with the libs. Or skip that, since they are\nincluded with dwdat2py.\n\nUsage\n-----\n\n.. code:: python\n\n   from dwdat2py import wrappers as dw\n\n   dw.init()\n   dw.open_data_file('dat1')\n   # ... other functions to get at data in dat1 ...\n   dw.close_data_file()\n   dw.open_data_file('dat2')\n   # ... other functions to get at data in dat2 ...\n   dw.close_data_file() # work is done for now\n   dw.de_init()\n   # optionally init() again for a new session.\n\n\nThe calls ``init()`` and ``de_init()`` must be called first and last\nrespectively. Make sure ``open_data_file(...)`` is called successfully before\n``close_data_file(...)``, else don't call close_data_file.\n\nThe highest level function for now in this package is this:\n\n.. code:: python\n\n    def channel_reduced(channel, reduction, encoding=None):\n        \"\"\"Return a flat list of data for channel reduced to reduction.\n\n        Parameters\n        ----------\n\n        channel : int or str\n            Either the channel index or the channel name.\n\n        reduction : int\n            One of the following\n            time_stamp = 0\n            ave = 1\n            min = 2\n            max = 3\n            rms = 4\n\n        encoding : str\n            encoding to pass to `get_channel_list()`, which see.\n\n        Wraps:\n            Nothing explicit. This is a support function to simplify getting\n            reduced data from a channel.\n\n        \"\"\"\n\nAnd if you happen to know the index or name of the channels, this function\nshould suffice to get at the data, channel by channel. Else you would need to\ncall some helper functions first to prepare for this call.\n\nAccess to the wrappers module is also provided as a context manager:\n\n.. code:: python\n\n    @contextmanager\n    def wrappersimport(fn, fsencoding=None):\n        \"\"\"Provide context access to the wrappers module.\n\n        Return a handle to the wrappers module in a context manager and file\n        `fn` (str) opened for operations (a .dxd file for example).\n        Initialization and deinitialization is provided by this context\n        manager, as well as opening and closing the file.\n\n        The file information resulting from opening the file is available as\n        a module level variable `fileinfo`, (`handle.fileinfo`).\n\n        The function that `wrappers.open_data_file` wraps require bytes as\n        file name. `fsencoding` is used in the call to\n        `wrappers.open_data_file` but is hopefully not necessary to specify\n        since os.fsencode() is used by default.\n\n        Example usage:\n\n        >>> import dwdat2py\n        >>> with dwdat2py.wrappersimport(fn) as wi:\n        ...    print(wi.fileinfo)\n        ...    chlist = wi.get_channel_list(encoding='latin1')\n        ...    for chinfo in chlist:\n        ...        # print the average values from each channel (1)\n        ...        print(wi.channel_reduced(chinfo.index, 1))\n        ...    # get the \"time stamps\" (0)\n        ...    time = wi.channel_reduced(chlist[0].index, 0)\n\n        As with importing the wrappers module in the standard way, this will\n        fail if the shared library is not found.\n\n        \"\"\"\n\nContribute\n----------\n\nPlease report bugs and send suggestions or patches to the author. Or\nmake an issue or pull request on the repo home at `Github\n<http://github.com/tomnor/dwdat2py>`_\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "https://github.com/tomnor/dwdat/tarball/master",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/tomnor/dwdat2py",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dwdat2py",
    "package_url": "https://pypi.org/project/dwdat2py/",
    "platform": "",
    "project_url": "https://pypi.org/project/dwdat2py/",
    "project_urls": {
      "Download": "https://github.com/tomnor/dwdat/tarball/master",
      "Homepage": "https://github.com/tomnor/dwdat2py"
    },
    "release_url": "https://pypi.org/project/dwdat2py/0.3.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Python wrappers around functions in Dewesoft DWDataReaderLib shared library",
    "version": "0.3.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12877975,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "81335aa3de6a01295d801d71ae79e3ffcc562d1eb59d3c0a8fd3618586310c73",
          "md5": "e655e227232c25dbd96bf60e59e749a8",
          "sha256": "315e86bdc07b1f62cf1e3459d12bb686d5a1d98143bc5521bf7695a21f8eaf53"
        },
        "downloads": -1,
        "filename": "dwdat2py-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e655e227232c25dbd96bf60e59e749a8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 14402,
        "upload_time": "2020-06-21T20:31:15",
        "upload_time_iso_8601": "2020-06-21T20:31:15.609325Z",
        "url": "https://files.pythonhosted.org/packages/81/33/5aa3de6a01295d801d71ae79e3ffcc562d1eb59d3c0a8fd3618586310c73/dwdat2py-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f8b34e2dec42c089b0e00a7bb7b2315885fbd12e7e1ae46f69caf8d14f8ae97e",
          "md5": "c7a824df53f6a3c50a37ff25fdfad4bd",
          "sha256": "dd282c792cb33da25298c39cc85faed6aed46094df096b539faba48ab12c705a"
        },
        "downloads": -1,
        "filename": "dwdat2py-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c7a824df53f6a3c50a37ff25fdfad4bd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9909,
        "upload_time": "2020-06-21T20:31:18",
        "upload_time_iso_8601": "2020-06-21T20:31:18.283500Z",
        "url": "https://files.pythonhosted.org/packages/f8/b3/4e2dec42c089b0e00a7bb7b2315885fbd12e7e1ae46f69caf8d14f8ae97e/dwdat2py-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0a24af334e8ce9e828741a393c5449f2b8b64e1ed902287380934f96743ea0e1",
          "md5": "5a2ecc89d710cac8b51ea9544c5049f5",
          "sha256": "a65394837a290663cf64348aa4ce495baadb57c06fae7600730d60e840f8a258"
        },
        "downloads": -1,
        "filename": "dwdat2py-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5a2ecc89d710cac8b51ea9544c5049f5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 871092,
        "upload_time": "2021-03-25T20:06:43",
        "upload_time_iso_8601": "2021-03-25T20:06:43.297789Z",
        "url": "https://files.pythonhosted.org/packages/0a/24/af334e8ce9e828741a393c5449f2b8b64e1ed902287380934f96743ea0e1/dwdat2py-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d5d1995ad37a886f60c049f0b48c63df19b36cbf5534ada827ef3e4937bd337b",
          "md5": "0ce06f9b3bd08a92ca20db537b7f11fd",
          "sha256": "8d2a21d5934ba2403031c5a003d504b5acab46628c6f6823a1ccea593e29a6d4"
        },
        "downloads": -1,
        "filename": "dwdat2py-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0ce06f9b3bd08a92ca20db537b7f11fd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 866106,
        "upload_time": "2021-03-25T20:06:45",
        "upload_time_iso_8601": "2021-03-25T20:06:45.743524Z",
        "url": "https://files.pythonhosted.org/packages/d5/d1/995ad37a886f60c049f0b48c63df19b36cbf5534ada827ef3e4937bd337b/dwdat2py-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "04bc090c84840177b52fb7d9c053ff2bf8de77b68d29c0adaeb7340a1e8e5f02",
          "md5": "8a8d026ab1f221ccb2e25fb1fccdb07d",
          "sha256": "9006dcee5cb35c7937d7571a55ccc2dcf016869980e3d6a5f7e44fb73f837ca2"
        },
        "downloads": -1,
        "filename": "dwdat2py-0.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8a8d026ab1f221ccb2e25fb1fccdb07d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 872636,
        "upload_time": "2021-06-06T16:17:30",
        "upload_time_iso_8601": "2021-06-06T16:17:30.642791Z",
        "url": "https://files.pythonhosted.org/packages/04/bc/090c84840177b52fb7d9c053ff2bf8de77b68d29c0adaeb7340a1e8e5f02/dwdat2py-0.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c82b535fec7a8a45eed1233f3cb74fbfe16498a3b2912e2cf3ac5f6e2265a90a",
          "md5": "c5a217b7f8d1783626bcc9d809a9b937",
          "sha256": "236cdc98fc145d3c8114b156666e09d79510a0e958db45a1fbf758d580ea37e2"
        },
        "downloads": -1,
        "filename": "dwdat2py-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c5a217b7f8d1783626bcc9d809a9b937",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 867522,
        "upload_time": "2021-06-06T16:17:34",
        "upload_time_iso_8601": "2021-06-06T16:17:34.249831Z",
        "url": "https://files.pythonhosted.org/packages/c8/2b/535fec7a8a45eed1233f3cb74fbfe16498a3b2912e2cf3ac5f6e2265a90a/dwdat2py-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2a93ada4dd6560f02ab81a0f86582b2583ddeaff6167478abba6ed7576a1b847",
          "md5": "f9ec85b767cb01c7352929184fa34dcc",
          "sha256": "643e75bfd57b1eaf45de09addf581592f6bfb5f0c625cc45ac2535d08369d040"
        },
        "downloads": -1,
        "filename": "dwdat2py-0.3.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f9ec85b767cb01c7352929184fa34dcc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 872735,
        "upload_time": "2022-02-13T19:20:45",
        "upload_time_iso_8601": "2022-02-13T19:20:45.403521Z",
        "url": "https://files.pythonhosted.org/packages/2a/93/ada4dd6560f02ab81a0f86582b2583ddeaff6167478abba6ed7576a1b847/dwdat2py-0.3.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "03877d922a7ce11948ba4a0c2e1bdec4b4ab2769b4f01c60b9ac24e3d8a55776",
          "md5": "4c3b01b0658886650243efd2c01436da",
          "sha256": "2b6f7d54d993c6ecedd2f448d3bf6bb6e6e596f487f57f8eb639b4662457bc66"
        },
        "downloads": -1,
        "filename": "dwdat2py-0.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4c3b01b0658886650243efd2c01436da",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 867447,
        "upload_time": "2022-02-13T19:20:48",
        "upload_time_iso_8601": "2022-02-13T19:20:48.150596Z",
        "url": "https://files.pythonhosted.org/packages/03/87/7d922a7ce11948ba4a0c2e1bdec4b4ab2769b4f01c60b9ac24e3d8a55776/dwdat2py-0.3.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2a93ada4dd6560f02ab81a0f86582b2583ddeaff6167478abba6ed7576a1b847",
        "md5": "f9ec85b767cb01c7352929184fa34dcc",
        "sha256": "643e75bfd57b1eaf45de09addf581592f6bfb5f0c625cc45ac2535d08369d040"
      },
      "downloads": -1,
      "filename": "dwdat2py-0.3.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f9ec85b767cb01c7352929184fa34dcc",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 872735,
      "upload_time": "2022-02-13T19:20:45",
      "upload_time_iso_8601": "2022-02-13T19:20:45.403521Z",
      "url": "https://files.pythonhosted.org/packages/2a/93/ada4dd6560f02ab81a0f86582b2583ddeaff6167478abba6ed7576a1b847/dwdat2py-0.3.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "03877d922a7ce11948ba4a0c2e1bdec4b4ab2769b4f01c60b9ac24e3d8a55776",
        "md5": "4c3b01b0658886650243efd2c01436da",
        "sha256": "2b6f7d54d993c6ecedd2f448d3bf6bb6e6e596f487f57f8eb639b4662457bc66"
      },
      "downloads": -1,
      "filename": "dwdat2py-0.3.2.tar.gz",
      "has_sig": false,
      "md5_digest": "4c3b01b0658886650243efd2c01436da",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 867447,
      "upload_time": "2022-02-13T19:20:48",
      "upload_time_iso_8601": "2022-02-13T19:20:48.150596Z",
      "url": "https://files.pythonhosted.org/packages/03/87/7d922a7ce11948ba4a0c2e1bdec4b4ab2769b4f01c60b9ac24e3d8a55776/dwdat2py-0.3.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}