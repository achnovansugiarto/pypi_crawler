{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Gruut\n\nA tokenizer, text cleaner, and [IPA](https://en.wikipedia.org/wiki/International_Phonetic_Alphabet) phonemizer for several human languages that supports [SSML](#ssml).\n\n```python\nfrom gruut import sentences\n\ntext = 'He wound it around the wound, saying \"I read it was $10 to read.\"'\n\nfor sent in sentences(text, lang=\"en-us\"):\n    for word in sent:\n        if word.phonemes:\n            print(word.text, *word.phonemes)\n```\n\nwhich outputs:\n\n```\nHe h ˈi\nwound w ˈaʊ n d\nit ˈɪ t\naround ɚ ˈaʊ n d\nthe ð ə\nwound w ˈu n d\n, |\nsaying s ˈeɪ ɪ ŋ\nI ˈaɪ\nread ɹ ˈɛ d\nit ˈɪ t\nwas w ə z\nten t ˈɛ n\ndollars d ˈɑ l ɚ z\nto t ə\nread ɹ ˈi d\n. ‖\n```\n\nNote that \"wound\" and \"read\" have different pronunciations when used in different (grammatical) contexts.\n\nA [subset of SSML](#ssml) is also supported:\n\n```python\nfrom gruut import sentences\n\nssml_text = \"\"\"<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<speak version=\"1.1\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation=\"http://www.w3.org/2001/10/synthesis\n                http://www.w3.org/TR/speech-synthesis11/synthesis.xsd\"\n    xml:lang=\"en-US\">\n<s>Today at 4pm, 2/1/2000.</s>\n<s xml:lang=\"it\">Un mese fà, 2/1/2000.</s>\n</speak>\"\"\"\n\nfor sent in sentences(ssml_text, ssml=True):\n    for word in sent:\n        if word.phonemes:\n            print(sent.idx, word.lang, word.text, *word.phonemes)\n```\n\nwith the output:\n\n```\n0 en-US Today t ə d ˈeɪ\n0 en-US at ˈæ t\n0 en-US four f ˈɔ ɹ\n0 en-US P p ˈi\n0 en-US M ˈɛ m\n0 en-US , |\n0 en-US February f ˈɛ b j u ˌɛ ɹ i\n0 en-US first f ˈɚ s t\n0 en-US , |\n0 en-US two t ˈu\n0 en-US thousand θ ˈaʊ z ə n d\n0 en-US . ‖\n1 it Un u n\n1 it mese ˈm e s e\n1 it fà f a\n1 it , |\n1 it due d j u\n1 it gennaio d͡ʒ e n n ˈa j o\n1 it duemila d u e ˈm i l a\n1 it . ‖\n```\n\nSee [the documentation](https://rhasspy.github.io/gruut/) for more details.\n\n## Installation\n\n```sh\npip install gruut\n```\n\nLanguages besides English can be added during installation. For example, with French and Italian support:\n\n```sh\npip install -f 'https://synesthesiam.github.io/prebuilt-apps/' gruut[fr,it]\n```\n\nThe extra pip repo is needed for an updated [num2words fork](https://github.com/rhasspy/num2words) that includes support for more languages.\n\nYou may also [manually download language files](https://github.com/rhasspy/gruut/releases/latest) and use put them in `$XDG_CONFIG_HOME/gruut/` (`$HOME/.config/gruut` by default).\n\ngruut will look for language files in the directory `$XDG_CONFIG_HOME/gruut/<lang>/` if the corresponding Python package is not installed. Note that `<lang>` here is the **full** language name, e.g. `de-de` instead of just `de`. \n\n## Supported Languages\n\ngruut currently supports:\n\n* Arabic (`ar`)\n* Czech (`cs` or `cs-cz`)\n* German (`de` or `de-de`)\n* English (`en` or `en-us`)\n* Spanish (`es` or `es-es`)\n* Farsi/Persian (`fa`)\n* French (`fr` or `fr-fr`)\n* Italian (`it` or `it-it`)\n* Luxembourgish (`lb`)\n* Dutch (`nl`)\n* Russian (`ru` or `ru-ru`)\n* Swedish (`sv` or `sv-se`)\n* Swahili (`sw`)\n\nThe goal is to support all of [voice2json's languages](https://github.com/synesthesiam/voice2json-profiles#supported-languages)\n\n## Dependencies\n\n* Python 3.7 or higher\n* Linux\n    * Tested on Debian Bullseye\n* [num2words fork](https://github.com/rhasspy/num2words) and [Babel](https://pypi.org/project/Babel/)\n    * Currency/number handling\n    * num2words fork includes additional language support (Arabic, Farsi, Swedish, Swahili)\n* gruut-ipa\n    * [IPA](https://en.wikipedia.org/wiki/International_Phonetic_Alphabet) pronunciation manipulation\n* [pycrfsuite](https://github.com/scrapinghub/python-crfsuite)\n    * Part of speech tagging and grapheme to phoneme models\n* [pydateparser](https://github.com/GLibAi/pydateparser)\n    * Date parsing for multiple languages\n\n## Numbers, Dates, and More\n\n`gruut` can automatically verbalize numbers, dates, and other expressions. This is done in a locale-aware manner for both parsing and verbalization, so \"1/1/2020\" may be interpreted as \"M/D/Y\" or \"D/M/Y\" depending on the word or sentence's language (e.g., `<s lang=\"...\">`).\n\nThe following types of expressions can be automatically expanded into words by `gruut`:\n\n* Numbers - \"123\" to \"one hundred and twenty three\" (disable with `verbalize_numbers=False` or `--no-numbers`)\n    * Relies on `Babel` for parsing and `num2words` for verbalization\n* Dates - \"1/1/2020\" to \"January first, twenty twenty\" (disable with `verbalize_dates=False` or `--no-dates`)\n    * Relies on `pydateparser` for parsing and both `Babel` and `num2words` for verbalization\n* Currency - \"$10\" to \"ten dollars\" (disable with `verbalize_currency=False` or `--no-currency`)\n    * Relies on `Babel` for parsing and both `Babel` and `num2words` for verbalization\n* Times - \"12:01am\" to \"twelve oh one A M\" (disable with `verbalize_times=False` or `--no-times`)\n    * English only\n    * Relies on `num2words` for verbalization\n\n## Command-Line Usage\n\nThe `gruut` module can be executed with `python3 -m gruut --language <LANGUAGE> <TEXT>` or with the `gruut` command (from `setup.py`).\n\nThe `gruut` command is line-oriented, consuming text and producing [JSONL](https://jsonlines.org/).\nYou will probably want to install [jq](https://stedolan.github.io/jq/) to manipulate the [JSONL](https://jsonlines.org/) output from `gruut`.\n\n### Plain Text\n\nTakes raw text and outputs [JSONL](https://jsonlines.org/) with cleaned words/tokens.\n\n```sh\necho 'This, right here, is some \"RAW\" text!' \\\n   | gruut --language en-us \\\n   | jq --raw-output '.words[].text'\nThis\n,\nright\nhere\n,\nis\nsome\n\"\nRAW\n\"\ntext\n!\n```\n\nMore information is available in the full JSON output:\n\n```sh\ngruut --language en-us 'More  text.' | jq .\n```\n\nOutput:\n\n```json\n{\n  \"idx\": 0,\n  \"text\": \"More text.\",\n  \"text_with_ws\": \"More text.\",\n  \"text_spoken\": \"More text\",\n  \"par_idx\": 0,\n  \"lang\": \"en-us\",\n  \"voice\": \"\",\n  \"words\": [\n    {\n      \"idx\": 0,\n      \"text\": \"More\",\n      \"text_with_ws\": \"More \",\n      \"leading_ws\": \"\",\n      \"training_ws\": \" \",\n      \"sent_idx\": 0,\n      \"par_idx\": 0,\n      \"lang\": \"en-us\",\n      \"voice\": \"\",\n      \"pos\": \"JJR\",\n      \"phonemes\": [\n        \"m\",\n        \"ˈɔ\",\n        \"ɹ\"\n      ],\n      \"is_major_break\": false,\n      \"is_minor_break\": false,\n      \"is_punctuation\": false,\n      \"is_break\": false,\n      \"is_spoken\": true,\n      \"pause_before_ms\": 0,\n      \"pause_after_ms\": 0\n    },\n    {\n      \"idx\": 1,\n      \"text\": \"text\",\n      \"text_with_ws\": \"text\",\n      \"leading_ws\": \"\",\n      \"training_ws\": \"\",\n      \"sent_idx\": 0,\n      \"par_idx\": 0,\n      \"lang\": \"en-us\",\n      \"voice\": \"\",\n      \"pos\": \"NN\",\n      \"phonemes\": [\n        \"t\",\n        \"ˈɛ\",\n        \"k\",\n        \"s\",\n        \"t\"\n      ],\n      \"is_major_break\": false,\n      \"is_minor_break\": false,\n      \"is_punctuation\": false,\n      \"is_break\": false,\n      \"is_spoken\": true,\n      \"pause_before_ms\": 0,\n      \"pause_after_ms\": 0\n    },\n    {\n      \"idx\": 2,\n      \"text\": \".\",\n      \"text_with_ws\": \".\",\n      \"leading_ws\": \"\",\n      \"training_ws\": \"\",\n      \"sent_idx\": 0,\n      \"par_idx\": 0,\n      \"lang\": \"en-us\",\n      \"voice\": \"\",\n      \"pos\": null,\n      \"phonemes\": [\n        \"‖\"\n      ],\n      \"is_major_break\": true,\n      \"is_minor_break\": false,\n      \"is_punctuation\": false,\n      \"is_break\": true,\n      \"is_spoken\": false,\n      \"pause_before_ms\": 0,\n      \"pause_after_ms\": 0\n    }\n  ],\n  \"pause_before_ms\": 0,\n  \"pause_after_ms\": 0\n}\n```\n\nFor the whole input line and each word, the `text` property contains the processed input text with normalized whitespace while `text_with_ws` retains the original whitespace. The `text_spoken` property only contains words that are spoken, so punctuation and breaks are excluded.\n\nWithin each word, there is:\n\n* `idx` - zero-based index of the word in the sentence\n* `sent_idx` - zero-based index of the sentence in the input text\n* `pos` - part of speech tag (if available)\n* `phonemes` - list of [IPA](https://en.wikipedia.org/wiki/International_Phonetic_Alphabet) phonemes for the word (if available)\n* `is_minor_break` - `true` if \"word\" separates phrases (comma, semicolon, etc.)\n* `is_major_break` - `true` if \"word\" separates sentences (period, question mark, etc.)\n* `is_break` - `true` if \"word\" is a major or minor break\n* `is_punctuation` - `true` if \"word\" is a surrounding punctuation mark (quote, bracket, etc.)\n* `is_spoken` - `true` if not a break or punctuation\n\nSee `python3 -m gruut <LANGUAGE> --help` for more options.\n\n### SSML\n\nA subset of [SSML](https://www.w3.org/TR/speech-synthesis11/) is supported:\n\n* `<speak>` - wrap around SSML text\n    * `lang` - set language for document\n* `<p>` - paragraph\n    * `lang` - set language for paragraph\n* `<s>` - sentence (disables automatic sentence breaking)\n    * `lang` - set language for sentence\n* `<w>` / `<token>` - word (disables automatic tokenization)\n    * `lang` - set language for word\n    * `role` - set word role (see [word roles](#word-roles))\n* `<lang lang=\"...\">` - set language inner text\n* `<voice name=\"...\">` - set voice of inner text\n* `<say-as interpret-as=\"\">` - force interpretation of inner text\n    * `interpret-as` one of \"spell-out\", \"date\", \"number\", \"time\", or \"currency\"\n    * `format` - way to format text depending on `interpret-as`\n        * number - one of \"cardinal\", \"ordinal\", \"digits\", \"year\"\n        * date - string with \"d\" (cardinal day), \"o\" (ordinal day), \"m\" (month), or \"y\" (year)\n* `<break time=\"\">` - Pause for given amount of time\n    * time - seconds (\"123s\") or milliseconds (\"123ms\")\n* `<mark name=\"\">` - User-defined mark (`marks_before` and `marks_after` attributes of words/sentences)\n    * name - name of mark\n* `<sub alias=\"\">` - substitute `alias` for inner text\n* `<phoneme ph=\"...\">` - supply phonemes for inner text\n    * `ph` - phonemes for each word of inner text, separated by whitespace\n* `<lexicon id=\"...\">` - inline or external pronunciation lexicon\n    * `id` - unique id of lexicon (used in `<lookup ref=\"...\">`)\n    * `uri` - if empty or missing, lexicon is inline\n    * One or more `<lexeme>` child elements with:\n        *  Optional `role=\"...\"` ([word roles][#word-roles] separated by whitespace)\n        * `<grapheme>WORD</grapheme>` - word text\n        * `<phoneme>P H O N E M E S</phoneme>` - word pronunciation (phonemes separated by whitespace)\n* `<lookup ref=\"...\">` - use pronunciation lexicon for child elements\n    * `ref` - id from a `<lexicon id=\"...\">`\n\n#### Word Roles\n\nDuring phonemization, word roles are used to disambiguate pronunciations. Unless manually specified, a word's role is derived from its part of speech tag as `gruut:<TAG>`. For initialisms and `spell-out`, the role `gruut:letter` is used to indicate that e.g., \"a\" should be spoken as `/eɪ/` instead of `/ə/`.\n\nFor `en-us`, the following additional roles are available from the part-of-speech tagger:\n\n* `gruut:CD` - number\n* `gruut:DT` - determiner\n* `gruut:IN` - preposition or subordinating conjunction \n* `gruut:JJ` - adjective\n* `gruut:NN` - noun\n* `gruut:PRP` - personal pronoun\n* `gruut:RB` - adverb\n* `gruut:VB` - verb\n* `gruut:VB` - verb (past tense)\n\n#### Inline Lexicons\n\nInline [pronunciation lexicons](https://www.w3.org/TR/2008/REC-pronunciation-lexicon-20081014/) are supported via the `<lexicon>` and `<lookup>` tags. gruut diverges slightly from the [SSML standard](https://www.w3.org/TR/speech-synthesis11/) here by allowing lexicons to be defined within the SSML document itself (`url` is blank or missing). Additionally, the `id` attribute of the `<lexicon>` element can be left off to indicate a \"default\" inline lexicon that does not require a corresponding `<lookup>` tag.\n\nFor example, the following document will yield three different pronunciations for the word \"tomato\":\n\n``` xml\n<?xml version=\"1.0\"?>\n<speak version=\"1.1\"\n       xmlns=\"http://www.w3.org/2001/10/synthesis\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xsi:schemaLocation=\"http://www.w3.org/2001/10/synthesis\n                 http://www.w3.org/TR/speech-synthesis11/synthesis.xsd\"\n       xml:lang=\"en-US\">\n\n  <lexicon xml:id=\"test\" alphabet=\"ipa\">\n    <lexeme>\n      <grapheme>\n        tomato\n      </grapheme>\n      <phoneme>\n        <!-- Individual phonemes are separated by whitespace -->\n        t ə m ˈɑ t oʊ\n      </phoneme>\n    </lexeme>\n    <lexeme>\n      <grapheme role=\"fake-role\">\n        tomato\n      </grapheme>\n      <phoneme>\n        <!-- Made up pronunciation for fake word role -->\n        t ə m ˈi t oʊ\n      </phoneme>\n    </lexeme>\n  </lexicon>\n\n  <w>tomato</w>\n  <lookup ref=\"test\">\n    <w>tomato</w>\n    <w role=\"fake-role\">tomato</w>\n  </lookup>\n</speak>\n```\n\nThe first \"tomato\" will be looked up in the U.S. English lexicon (`/t ə m ˈeɪ t oʊ/`). Within the `<lookup>` tag's scope, the second and third \"tomato\" words will be looked up in the inline lexicon. The third \"tomato\" word has a [role](#word-roles) attached  (selecting a made up pronunciation in this case).\n\nEven further from the SSML standard, gruut allows you to leave off the `<lexicon>` id entirely. With no `id`, a `<lookup>` tag is no longer needed, allowing you to override the pronunciation of any word in the document: \n\n``` xml\n<?xml version=\"1.0\"?>\n<speak version=\"1.1\"\n       xmlns=\"http://www.w3.org/2001/10/synthesis\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xsi:schemaLocation=\"http://www.w3.org/2001/10/synthesis\n                 http://www.w3.org/TR/speech-synthesis11/synthesis.xsd\"\n       xml:lang=\"en-US\">\n\n  <!-- No id means change all words without a lookup -->\n  <lexicon>\n    <lexeme>\n      <grapheme>\n        tomato\n      </grapheme>\n      <phoneme>\n        t ə m ˈɑ t oʊ\n      </phoneme>\n    </lexeme>\n  </lexicon>\n\n  <w>tomato</w>\n</speak>\n```\n\nThis will yield a pronunciation of `/t ə m ˈɑ t oʊ/` for all instances of \"tomato\" in the document (unless they have a `<lookup>`).\n\n## Intended Audience\n\ngruut is useful for transforming raw text into phonetic pronunciations, similar to [phonemizer](https://github.com/bootphon/phonemizer). Unlike phonemizer, gruut looks up words in a pre-built lexicon (pronunciation dictionary) or guesses word pronunciations with a pre-trained grapheme-to-phoneme model. Phonemes for each language come from a [carefully chosen inventory](https://en.wikipedia.org/wiki/Template:Language_phonologies).\n\nFor each supported language, gruut includes a:\n\n* A word pronunciation lexicon built from open source data\n    * See [pron_dict](https://github.com/Kyubyong/pron_dictionaries)\n* A pre-trained grapheme-to-phoneme model for guessing word pronunciations\n\nSome languages also include:\n\n* A pre-trained part of speech tagger built from open source data:\n    * See [universal dependencies](https://universaldependencies.org/)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bookbot-hive/babygruut",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "babygruut",
    "package_url": "https://pypi.org/project/babygruut/",
    "platform": null,
    "project_url": "https://pypi.org/project/babygruut/",
    "project_urls": {
      "Homepage": "https://github.com/bookbot-hive/babygruut"
    },
    "release_url": "https://pypi.org/project/babygruut/2.3.4/",
    "requires_dist": [
      "Babel (<3.0.0,>=2.8.0)",
      "dateparser (~=1.1.0)",
      "gruut-ipa (<1.0,>=0.12.0)",
      "babygruut-lang-en",
      "jsonlines (~=1.2.0)",
      "networkx (<3.0.0,>=2.5.0)",
      "num2words (<1.0.0,>=0.5.10)",
      "numpy (<2.0.0,>=1.19.0)",
      "python-crfsuite (~=0.9.7)",
      "dataclasses ; python_version<\"3.7\"",
      "types-dataclasses ; python_version<\"3.7\"",
      "importlib-resources ; python_version<\"3.9\"",
      "aeneas (~=1.7.3.0) ; extra == 'align'",
      "pydub (~=0.24.1) ; extra == 'align'",
      "hazm (~=0.7.0) ; extra == 'all'",
      "conllu (>=4.4) ; extra == 'all'",
      "rapidfuzz (>=2.11.1) ; extra == 'all'",
      "aeneas (~=1.7.3.0) ; extra == 'all'",
      "pydub (~=0.24.1) ; extra == 'all'",
      "mishkal (~=0.4.0) ; extra == 'all'",
      "codernitydb3 (~=0.6.0) ; extra == 'all'",
      "phonetisaurus (~=0.3.0) ; extra == 'all'",
      "gruut-lang-ar (~=2.0.0) ; extra == 'all'",
      "gruut-lang-cs (~=2.0.0) ; extra == 'all'",
      "gruut-lang-de (~=2.0.0) ; extra == 'all'",
      "gruut-lang-es (~=2.0.0) ; extra == 'all'",
      "gruut-lang-fa (~=2.0.0) ; extra == 'all'",
      "gruut-lang-fr (~=2.0.0) ; extra == 'all'",
      "gruut-lang-it (~=2.0.0) ; extra == 'all'",
      "gruut-lang-lb (~=2.0.0) ; extra == 'all'",
      "gruut-lang-nl (~=2.0.0) ; extra == 'all'",
      "gruut-lang-pt (~=2.0.0) ; extra == 'all'",
      "gruut-lang-ru (~=2.0.0) ; extra == 'all'",
      "gruut-lang-sv (~=2.0.0) ; extra == 'all'",
      "gruut-lang-sw (~=2.0.0) ; extra == 'all'",
      "mishkal (~=0.4.0) ; extra == 'ar'",
      "codernitydb3 (~=0.6.0) ; extra == 'ar'",
      "gruut-lang-ar (~=2.0.0) ; extra == 'ar'",
      "gruut-lang-cs (~=2.0.0) ; extra == 'cs'",
      "gruut-lang-de (~=2.0.0) ; extra == 'de'",
      "gruut-lang-es (~=2.0.0) ; extra == 'es'",
      "hazm (~=0.7.0) ; extra == 'fa'",
      "gruut-lang-fa (~=2.0.0) ; extra == 'fa'",
      "gruut-lang-fr (~=2.0.0) ; extra == 'fr'",
      "phonetisaurus (~=0.3.0) ; extra == 'g2p'",
      "gruut-lang-it (~=2.0.0) ; extra == 'it'",
      "gruut-lang-lb (~=2.0.0) ; extra == 'lb'",
      "gruut-lang-nl (~=2.0.0) ; extra == 'nl'",
      "gruut-lang-pt (~=2.0.0) ; extra == 'pt'",
      "gruut-lang-ru (~=2.0.0) ; extra == 'ru'",
      "gruut-lang-sv (~=2.0.0) ; extra == 'sv'",
      "gruut-lang-sw (~=2.0.0) ; extra == 'sw'",
      "conllu (>=4.4) ; extra == 'train'",
      "rapidfuzz (>=2.11.1) ; extra == 'train'"
    ],
    "requires_python": ">=3.6",
    "summary": "A tokenizer, text cleaner, and phonemizer for many human languages.",
    "version": "2.3.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17284894,
  "releases": {
    "2.3.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "10c20dc35f6890478f7a0b04cbbe103e3b4f1e2b265a2ddb4d1f6e81126b4b10",
          "md5": "35804a7c53822beda64c4e879cd11d5b",
          "sha256": "212bc016f4d078f214822b91a1071abcc7ce5ff6a3e595c3e3930b86805c0283"
        },
        "downloads": -1,
        "filename": "babygruut-2.3.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "35804a7c53822beda64c4e879cd11d5b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 76441,
        "upload_time": "2023-03-14T09:32:45",
        "upload_time_iso_8601": "2023-03-14T09:32:45.578350Z",
        "url": "https://files.pythonhosted.org/packages/10/c2/0dc35f6890478f7a0b04cbbe103e3b4f1e2b265a2ddb4d1f6e81126b4b10/babygruut-2.3.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6548f9c7048e2792e01583f520fff2cefb257a98b853b47b4ff4620c81c07fe6",
          "md5": "90f442533fb177c58cb2847b16be0b05",
          "sha256": "cd250eef028788a068c819be3968d251785bfeb91f0b4a4f4354c6dc5de00af7"
        },
        "downloads": -1,
        "filename": "babygruut-2.3.4.tar.gz",
        "has_sig": false,
        "md5_digest": "90f442533fb177c58cb2847b16be0b05",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 69515,
        "upload_time": "2023-03-14T09:32:48",
        "upload_time_iso_8601": "2023-03-14T09:32:48.408912Z",
        "url": "https://files.pythonhosted.org/packages/65/48/f9c7048e2792e01583f520fff2cefb257a98b853b47b4ff4620c81c07fe6/babygruut-2.3.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "10c20dc35f6890478f7a0b04cbbe103e3b4f1e2b265a2ddb4d1f6e81126b4b10",
        "md5": "35804a7c53822beda64c4e879cd11d5b",
        "sha256": "212bc016f4d078f214822b91a1071abcc7ce5ff6a3e595c3e3930b86805c0283"
      },
      "downloads": -1,
      "filename": "babygruut-2.3.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "35804a7c53822beda64c4e879cd11d5b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 76441,
      "upload_time": "2023-03-14T09:32:45",
      "upload_time_iso_8601": "2023-03-14T09:32:45.578350Z",
      "url": "https://files.pythonhosted.org/packages/10/c2/0dc35f6890478f7a0b04cbbe103e3b4f1e2b265a2ddb4d1f6e81126b4b10/babygruut-2.3.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6548f9c7048e2792e01583f520fff2cefb257a98b853b47b4ff4620c81c07fe6",
        "md5": "90f442533fb177c58cb2847b16be0b05",
        "sha256": "cd250eef028788a068c819be3968d251785bfeb91f0b4a4f4354c6dc5de00af7"
      },
      "downloads": -1,
      "filename": "babygruut-2.3.4.tar.gz",
      "has_sig": false,
      "md5_digest": "90f442533fb177c58cb2847b16be0b05",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 69515,
      "upload_time": "2023-03-14T09:32:48",
      "upload_time_iso_8601": "2023-03-14T09:32:48.408912Z",
      "url": "https://files.pythonhosted.org/packages/65/48/f9c7048e2792e01583f520fff2cefb257a98b853b47b4ff4620c81c07fe6/babygruut-2.3.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}