{
  "info": {
    "author": "Grant Jenks",
    "author_email": "contact@grantjenks.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: Implementation :: CPython"
    ],
    "description": "Shims: Patching and Mocking Utilities\n=====================================\n\n`shims`_ is an Apache2 licensed Python module with patching and mocking\nutilities.\n\nThe `unittest` package has clever functions for patching modules and\nobjects. Unfortunately, the common interface is not very readable:\n\n.. code-block:: python\n\n   import unittest\n   from unittest.mock import patch\n\n   class TestThing(unittest.TestCase):\n       @patch(\"a.b.c\")\n       @patch(\"x.y.z\")\n       @patch(\"foo.bar.baz\")\n       @patch(\"one.two.three\")\n       def test_thing(self, mock_three, mock_baz, mock_z, mock_c):\n           ...\n\n   if __name__ == \"__main__\":\n       unittest.main()\n\nNow, raise your hand if you've ever confused the order of `patch` decorators\nand the order of the arguments (me, times :100:)?\n\nAlso, raise your hand if you've struggled to find the right string argument for\n`patch` :wave:?\n\nPatch is a great utility but the decorator pattern is not very readable. The\n`patch` function actually returns patch objects. And patch objects include\n`start()` and `stop()` methods. But these methods are hard to invoke\nautomatically without decorators using `unittest`.\n\nFurthermore, the patch target is referenced using strings to identify the\nobject to patch. Most editors lack go-to-definition support for these strings\nwhich sometimes results in even less readable code.\n\nPytest now to the rescue! Here's the same code, now using Pytest:\n\n.. code-block:: python\n\n   from unittest.mock import MagicMock\n   import pytest\n\n   import a.b\n   import x.y\n   import foo.bar\n   import one.two\n\n   def test_thing(monkeypatch):\n       mock_c = MagicMock()\n       monkeypatch.setattr(a.b, \"c\", mock_c)\n       mock_z = MagicMock()\n       monkeypatch.setattr(x.y, \"z\", mock_z)\n       mock_baz = MagicMock()\n       monkeypatch.setattr(foo.bar, \"baz\", mock_baz)\n       mock_three = MagicMock()\n       monkeypatch.setattr(one.two, \"three\", mock_three)\n       ...\n\n   if __name__ == \"__main__\":\n       pytest.main([__file__])\n\nWe're no longer abusing the decorator pattern in Python but it's still not very\nreasonable. The fixture idea is a good one and shims goes a bit farther with it.\n\nHere's the same code, now using shims:\n\n.. code-block:: python\n\n   import pytest\n\n   import a.b\n   import x.y\n   import foo.bar\n   import one.two\n\n   def test_thing(shims):\n       mock_c = shims.patch(a.b.c)\n       mock_z = shims.patch(x.y.z)\n       mock_baz = shims.patch(foo.bar.baz)\n       mock_three = shims.patch(one.two.three)\n       ...\n\n   if __name__ == \"__main__\":\n       pytest.main([__file__])\n\nThe problems solved with shims:\n\n0. Decorator pattern replaced with function calls.\n\n0. Targets used directly rather than by strings.\n\n0. MagicMock objects are created automatically.\n\nThe end goal is to integrate shims into pytest itself.\n\n\nFeatures\n--------\n\n- Pure-Python\n- Pytest Support (Optional)\n- Developed on Python 3.8\n- Tested on CPython 3.6, 3.7, 3.8 and PyPy, PyPy3\n- Tested using GitHub Actions on Linux, Mac, and Windows\n\n.. image:: https://github.com/grantjenks/python-shims/workflows/integration/badge.svg\n   :target: http://www.grantjenks.com/docs/shims/\n\n\nQuickstart\n----------\n\nInstalling `shims`_ is simple with `pip <http://www.pip-installer.org/>`_::\n\n  $ pip install shims\n\nYou can access documentation in the interpreter with Python's built-in help\nfunction:\n\n.. code-block:: python\n\n   >>> import shims\n   >>> help(shims)                         # doctest: +SKIP\n\n\nTutorial\n--------\n\nThe `shims`_ module provides utilities for patching and mocking.\n\n.. code-block:: python\n\n   >>> import urllib.request\n   >>> response = urllib.request.urlopen('http://www.example.com/').read()\n   >>> print(response[:63].decode())\n   <!doctype html>\n   <html>\n   <head>\n       <title>Example Domain</title>\n\n\n.. code-block:: python\n\n   >>> import shims\n   >>> mock_urlopen = shims.patch(urllib.request.urlopen)\n   >>> mock_urlopen.return_value = '<test response>'\n   >>> urllib.request.urlopen('http://www.example.com/')\n   '<test response>'\n   >>> shims.stop()\n\n\nReference\n---------\n\n* `shims Documentation`_\n* `shims at PyPI`_\n* `shims at GitHub`_\n* `shims Issue Tracker`_\n\n.. _`shims Documentation`: http://www.grantjenks.com/docs/shims/\n.. _`shims at PyPI`: https://pypi.python.org/pypi/shims/\n.. _`shims at GitHub`: https://github.com/grantjenks/python-shims/\n.. _`shims Issue Tracker`: https://github.com/grantjenks/python-shims/issues/\n\n\nLicense\n-------\n\nCopyright 2020 Grant Jenks\n\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License.  You may obtain a copy of the\nLicense at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed\nunder the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\nCONDITIONS OF ANY KIND, either express or implied.  See the License for the\nspecific language governing permissions and limitations under the License.\n\n.. _`shims`: http://www.grantjenks.com/docs/shims/\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://www.grantjenks.com/docs/shims/",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "shims",
    "package_url": "https://pypi.org/project/shims/",
    "platform": "",
    "project_url": "https://pypi.org/project/shims/",
    "project_urls": {
      "Homepage": "http://www.grantjenks.com/docs/shims/"
    },
    "release_url": "https://pypi.org/project/shims/0.0.1/",
    "requires_dist": [
      "pytest"
    ],
    "requires_python": "",
    "summary": "Patching and mocking utilities",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7531782,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ec833b2a38c1ea543cb23ea4c76ff50c4d22644ff440c6dc4bc1568f3a0462b4",
          "md5": "39f8dd2f619fd7b8a3109997a1b2999c",
          "sha256": "9351d98c6b56d653aee10b189935c51488617944f6e2f1ecc2292baac24f1a75"
        },
        "downloads": -1,
        "filename": "shims-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "39f8dd2f619fd7b8a3109997a1b2999c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4200,
        "upload_time": "2020-06-22T06:29:55",
        "upload_time_iso_8601": "2020-06-22T06:29:55.818448Z",
        "url": "https://files.pythonhosted.org/packages/ec/83/3b2a38c1ea543cb23ea4c76ff50c4d22644ff440c6dc4bc1568f3a0462b4/shims-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1ebace75b459599bb95c43cbfce805ba8ca88244c29e4acc31bffe061f6ec97c",
          "md5": "9948c75cd942d3a8be1b9c6ae97cdec6",
          "sha256": "4d8e838caaa7c00cf5f3fa0df22cb7bcdb37e784247df773983496bc8c0fb4fa"
        },
        "downloads": -1,
        "filename": "shims-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9948c75cd942d3a8be1b9c6ae97cdec6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4423,
        "upload_time": "2020-06-22T06:29:58",
        "upload_time_iso_8601": "2020-06-22T06:29:58.226784Z",
        "url": "https://files.pythonhosted.org/packages/1e/ba/ce75b459599bb95c43cbfce805ba8ca88244c29e4acc31bffe061f6ec97c/shims-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ec833b2a38c1ea543cb23ea4c76ff50c4d22644ff440c6dc4bc1568f3a0462b4",
        "md5": "39f8dd2f619fd7b8a3109997a1b2999c",
        "sha256": "9351d98c6b56d653aee10b189935c51488617944f6e2f1ecc2292baac24f1a75"
      },
      "downloads": -1,
      "filename": "shims-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "39f8dd2f619fd7b8a3109997a1b2999c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 4200,
      "upload_time": "2020-06-22T06:29:55",
      "upload_time_iso_8601": "2020-06-22T06:29:55.818448Z",
      "url": "https://files.pythonhosted.org/packages/ec/83/3b2a38c1ea543cb23ea4c76ff50c4d22644ff440c6dc4bc1568f3a0462b4/shims-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1ebace75b459599bb95c43cbfce805ba8ca88244c29e4acc31bffe061f6ec97c",
        "md5": "9948c75cd942d3a8be1b9c6ae97cdec6",
        "sha256": "4d8e838caaa7c00cf5f3fa0df22cb7bcdb37e784247df773983496bc8c0fb4fa"
      },
      "downloads": -1,
      "filename": "shims-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "9948c75cd942d3a8be1b9c6ae97cdec6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4423,
      "upload_time": "2020-06-22T06:29:58",
      "upload_time_iso_8601": "2020-06-22T06:29:58.226784Z",
      "url": "https://files.pythonhosted.org/packages/1e/ba/ce75b459599bb95c43cbfce805ba8ca88244c29e4acc31bffe061f6ec97c/shims-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}