{
  "info": {
    "author": "Oscar Koeroo",
    "author_email": "okoeroo@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "Author: Oscar Koeroo\n\n\n# pyDANETLSA\nGenerate TLSA record for DANE. Generated either by probing the resource and using a StartTLS or plain TLS handshake to extract the certificate, public key and formulate a TLSA 3 1 1 format. Also a X.509 in PEM or DER file format is possible.\n\n## Class: danetlsa\n### Initializer / __init__():\nStart a new instance of pyDANETLSA and initialize it with the following named attributes:\n\n* fqdn: Fully Qualified Domain Name which sets the full name of a host, e.g. smtp.koeroo.net. From this value the domain and host part is extracted. However, the algorithm expects a zone of two components, being the TLD and the zone name. If this is either three or one for gTLDs the calculation is borked. Use the ***domain*** attribute to force the calculation to become relative to the provided domain instead of guessing the zone structure.\n* port: The TCP or UDP port number for with the DANE TLSA record is to be generated.\n* tlsa\\_protocol: Select the output TLSA protocol. Options are limited to 'tcp', 'udp' and 'sctp'. Default is 'tcp'.\n* probe\\_protocol: Selects the probe method/read method. Choices are fixed to:\n\n   * ***DANETLSA_IMAP***: Probes IMAP with StartTLS on the provided port.\n   * ***DANETLSA_POP3***: Probes POP3 with StartTLS on the provided port.\n   * ***DANETLSA_SMTP***: Probes SMTP with StartTLS on the provided port.\n   * ***DANETLSA_TLS***: Probes with plain TLS on the provided port.\n   * ***DANETLSA_PEM***: Reads a certificate from the ***certfile*** property. The file must be in PEM format.\n   * ***DANETLSA_DER***: Reads a certificate from the ***certfile*** property. The file must be in DER format.\n\n* certfile: Optional for network probe ***protocol*** selections. File path to a PEM or DER certificate to read. File must exist and must be a file (or symlink to a file).\n\n### connect()\nSee ***engage()***\n\n### engage()\nThis will trigger the reading of the file or start the network connection to the selected ***protocol*** to extract the certificate, transform the certificate in the right internal formats and generate the information required for a DANE TLSA record. This information can then be retried with other methods.\n\n### subject_dn()\nReturns the Subject DN in classic OpenSSL subject format.\n```\n/C=NL/ST=Zuid-Holland/L='s-Gravenhage/O=Rijksoverheid/CN=ncsc.nl\n```\n\n### process_pubkey_hex()\nInternal function to process the public key hex value from the fetched certificate.\nReturns the hex value\n```\n78a80c6362af724f11433375890632cc099cd55a985c6e4a4a8ad741fe032f35\n```\n\n### pubkey_hex()\nReturns the hex value of the public key.\n```\n78a80c6362af724f11433375890632cc099cd55a985c6e4a4a8ad741fe032f35\n```\n\n### tlsa_rdata_3_1_1()\nReturns the ***3 1 1*** format value.\n```\n3 1 1 78a80c6362af724f11433375890632cc099cd55a985c6e4a4a8ad741fe032f35\n```\n\n### tlsa_rr_name_host()\nReturns the resource record name for TLSA appropriate for the service.\n```\n_25._tcp.smtp\n```\n\n### tlsa_rr_name_fqdn()\nReturns the resource record name as full FQDN value for TLSA appropriate for the service.\n```\n_25._tcp.smtp.koeroo.net.\n```\n\n### tlsa_rr()\nReturns full resource record, which looks a lot like a zone file.\n```\n_25._tcp.smtp IN TLSA 3 1 1 78a80c6362af724f11433375890632cc099cd55a985c6e4a4a8ad741fe032f35\n```\n\n### tlsa_rr_fqdn()\nReturns full resource record, which looks a lot like a zone file, the host is now an absolute name.\n```\n_465._tcp.smtp.koeroo.net. IN TLSA 3 1 1 78a80c6362af724f11433375890632cc099cd55a985c6e4a4a8ad741fe032f35\n```\n\n\n## Example:\n```python\n#!/usr/bin/env python3\n\nimport pyDANETLSA\n\nprint(\"Protocol support list:\", pyDANETLSA.DANETLS_protocols)\n\nd = pyDANETLSA.danetlsa(fqdn='smtp.koeroo.net.', port=25,  protocol=pyDANETLSA.DANETLSA_SMTP)\nd.engage()\nprint(\"TLSA RR with FQDN\", d.tlsa_rr_fqdn())\n```\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/okoeroo/pyDANETLSA",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyDANETLSA",
    "package_url": "https://pypi.org/project/pyDANETLSA/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyDANETLSA/",
    "project_urls": {
      "Bug Tracker": "https://github.com/okoeroo/pyDANETLSA/issues",
      "Homepage": "https://github.com/okoeroo/pyDANETLSA"
    },
    "release_url": "https://pypi.org/project/pyDANETLSA/0.1.0/",
    "requires_dist": [
      "cryptography",
      "pyOpenSSL"
    ],
    "requires_python": ">=3.4",
    "summary": "Python library to generate a TLSA record format based on the active certificate on a host.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10212946,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3efdf9addfeee60a34034e4ec5b3050a9202223e827c8db94754e30f72962005",
          "md5": "b410d4981bfa2506c860e25371f305a3",
          "sha256": "afac222aec7cb570e30f27b43312074ca6bc99253e05e556ab672eb80ed650e3"
        },
        "downloads": -1,
        "filename": "pyDANETLSA-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b410d4981bfa2506c860e25371f305a3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.4",
        "size": 3399,
        "upload_time": "2021-04-23T13:37:47",
        "upload_time_iso_8601": "2021-04-23T13:37:47.629221Z",
        "url": "https://files.pythonhosted.org/packages/3e/fd/f9addfeee60a34034e4ec5b3050a9202223e827c8db94754e30f72962005/pyDANETLSA-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a3432a904b2031d982cbe5cf6649a978e59d5764f34585a9725c9c934ea3064b",
          "md5": "006c4d3cc8a87a2106613e9cdaa314f2",
          "sha256": "433c35ecacc6e8172a2f1f793013e6511094239fd5c7a590edc1a2c8a61c64c6"
        },
        "downloads": -1,
        "filename": "pyDANETLSA-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "006c4d3cc8a87a2106613e9cdaa314f2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 3273,
        "upload_time": "2021-04-23T13:37:49",
        "upload_time_iso_8601": "2021-04-23T13:37:49.335925Z",
        "url": "https://files.pythonhosted.org/packages/a3/43/2a904b2031d982cbe5cf6649a978e59d5764f34585a9725c9c934ea3064b/pyDANETLSA-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2ecaec02ec7cddc413ba5515a1540099b0f732900da0a8a1b8628f94f788c606",
          "md5": "5f933d496b8c6151173826a855e1cbac",
          "sha256": "9d937ad71c125e21fee1f49fa417a0f0fc286ef86a447baba83509dd0d7df076"
        },
        "downloads": -1,
        "filename": "pyDANETLSA-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5f933d496b8c6151173826a855e1cbac",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.4",
        "size": 5111,
        "upload_time": "2021-04-24T14:29:36",
        "upload_time_iso_8601": "2021-04-24T14:29:36.182807Z",
        "url": "https://files.pythonhosted.org/packages/2e/ca/ec02ec7cddc413ba5515a1540099b0f732900da0a8a1b8628f94f788c606/pyDANETLSA-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e3e5437b17e41f27b97a27187896bd3d6639f2a5fc2cad9b4ee79fb71d21902a",
          "md5": "f35c0562e5e2ddfe4c99c3f2fdf4a7f8",
          "sha256": "c1a1afad9b2b02c4f7471974dbbed25b4eff109c088ed4727b446bd77d34dd6d"
        },
        "downloads": -1,
        "filename": "pyDANETLSA-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f35c0562e5e2ddfe4c99c3f2fdf4a7f8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 5116,
        "upload_time": "2021-04-24T14:29:37",
        "upload_time_iso_8601": "2021-04-24T14:29:37.265632Z",
        "url": "https://files.pythonhosted.org/packages/e3/e5/437b17e41f27b97a27187896bd3d6639f2a5fc2cad9b4ee79fb71d21902a/pyDANETLSA-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d43b14f89b6249be9ff85345c03c4fd5f32284525a2b79af38d363b89ab906f4",
          "md5": "13123dd1e947121c550079e055e52465",
          "sha256": "c833eb2b7c11833865069f5475ee6b3c6030e1c6f189ed69388cb40f4d24d299"
        },
        "downloads": -1,
        "filename": "pyDANETLSA-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "13123dd1e947121c550079e055e52465",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.4",
        "size": 5319,
        "upload_time": "2021-04-29T22:12:42",
        "upload_time_iso_8601": "2021-04-29T22:12:42.821333Z",
        "url": "https://files.pythonhosted.org/packages/d4/3b/14f89b6249be9ff85345c03c4fd5f32284525a2b79af38d363b89ab906f4/pyDANETLSA-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a5f3e52b0a2853356a7272adf6d8ebc0647aaad01c6aa4b1552800767a46101a",
          "md5": "bcb34104d47cde5495fff65c35f60e1d",
          "sha256": "f1f6a39038ad2a0c9fc802060b520f3afe92becb2d6c34820b2ab454056c8b17"
        },
        "downloads": -1,
        "filename": "pyDANETLSA-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bcb34104d47cde5495fff65c35f60e1d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 5308,
        "upload_time": "2021-04-29T22:12:43",
        "upload_time_iso_8601": "2021-04-29T22:12:43.902786Z",
        "url": "https://files.pythonhosted.org/packages/a5/f3/e52b0a2853356a7272adf6d8ebc0647aaad01c6aa4b1552800767a46101a/pyDANETLSA-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d43b14f89b6249be9ff85345c03c4fd5f32284525a2b79af38d363b89ab906f4",
        "md5": "13123dd1e947121c550079e055e52465",
        "sha256": "c833eb2b7c11833865069f5475ee6b3c6030e1c6f189ed69388cb40f4d24d299"
      },
      "downloads": -1,
      "filename": "pyDANETLSA-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "13123dd1e947121c550079e055e52465",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.4",
      "size": 5319,
      "upload_time": "2021-04-29T22:12:42",
      "upload_time_iso_8601": "2021-04-29T22:12:42.821333Z",
      "url": "https://files.pythonhosted.org/packages/d4/3b/14f89b6249be9ff85345c03c4fd5f32284525a2b79af38d363b89ab906f4/pyDANETLSA-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a5f3e52b0a2853356a7272adf6d8ebc0647aaad01c6aa4b1552800767a46101a",
        "md5": "bcb34104d47cde5495fff65c35f60e1d",
        "sha256": "f1f6a39038ad2a0c9fc802060b520f3afe92becb2d6c34820b2ab454056c8b17"
      },
      "downloads": -1,
      "filename": "pyDANETLSA-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "bcb34104d47cde5495fff65c35f60e1d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.4",
      "size": 5308,
      "upload_time": "2021-04-29T22:12:43",
      "upload_time_iso_8601": "2021-04-29T22:12:43.902786Z",
      "url": "https://files.pythonhosted.org/packages/a5/f3/e52b0a2853356a7272adf6d8ebc0647aaad01c6aa4b1552800767a46101a/pyDANETLSA-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}