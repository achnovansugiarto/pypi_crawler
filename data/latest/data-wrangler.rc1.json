{
  "info": {
    "author": "Drew Ipson",
    "author_email": "drewipson@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Data Wrangler (DW)\n\nA simple python package for data cleaning and transformations. The majority of the methods are used for somewhat intermediate string and regex manipulations that I've built out to avoid doing so in the future. This has been helpful in different cleaning different data sets -- particulary text data sets.\n\nThis package is open for contribution. Any useful data cleaning functions or tools built are welcome to be contributed and will be credited. Star this project to add! (:\n\n## DataWrangler\nThe DataWrangler class includes the following methods. A detailed description and example can be viewed in the table below. \n\n### Installation and Use\n\n#### Installation\n`python3 -m pip install DW`\n\n#### Importing the Package & Use\n```\nfrom DW import DataWrangler\nDW = DataWrangler()\n\n# for use in script or jupyter notebook\nDW.method_call()\n# for use in pandas dataseries\ndf['Col_Name'].apply(DW.method_call)\n```\n### Method Descriptions and Examples\n#### Methods = Method Name | Data Type Object = Data Type the method can be used on. | Description of the method | Example of method use |\n|Methods               |Data Type Object| Description                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   | Example                                                                                                                 | \n|----------------------|----------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------|\n|remove_pii            |String          | A list called pii_info is compiled as a regular expression pattern that is used to remove sensitive information. A cleaned string called no_pii is returned with the removed PII.                                                                                                                                                                                                                                                                                                             |`remove_pii(text=\"This is a string of personable identifiable information (pii): Drew Ipson\", pii: ['Drew', 'Ipson'])`   |\n|insert_space          |String          | Takes a string and index argument to add spacing in a string at a given index. You can find the index using python's string package to determine the integer argument to pass.                                                                                                                                                                                                                                                                                                                |`insert_space(text=\"This is a string thatneeds a space.\", index=21)` *returns \"This is a string that needs a space\"*     |\n|check_spacing         |String          | Checks for spacing in front and end of string by gettting the index of the found word and subtracting 1 for the front space and adding the length of the word to the index for the rear spacing. The insert_space method is used if a space should exist where there is none -- front or back.                                                                                                                                                                                                |`check_spacing(text=\"This is a string thatneeds a space.\", word_start_index=21, word_end_index=25)`                      |\n|remove_character_set  |String          | Pass string and list of characters as ok_pattern to be cleared when removing character set. Everything not in that character set will be removed from the string before being returned. To preserve string structure, a space is added inspace of the character removed. The ok_pattern argument is a list of characters that will stay in the text. The string.ascii_letters and space (' ') are the default  list of characters that are allowed.                                           |`remove_character_set(text=\"This is a % string with a character # set that is not wanted.\", ok_pattern=list(string.letters + ' ' + '.'))` *returns \"This is a string with a character set that is not wanted.\"*|\n|remove_spacing        |String          | Eliminates unnecessary spacing in string of words in description. Ensures that a only one space between words exist.                                                                                                                                                                                                                                                                                                                                                                          |`remove_spacing(text=\"This is a string with        unwanted spacing.\")` *returns \"This is a string with unwanted spacing* |\n|remove_www            |String          | Removes anything internet related in string such as www or .com; takes a patter_list as argument for string pattern comparison and removal.                                                                                                                                                                                                                                                                                                                                                   |`remove_www(text=\"This is a string with internet www.google.com references.\", internet_pattern=['WWW.', '.COM',])` *returns \"This is a string with internet google references.\" Additionally the pattern 'www.google.com' could be added to remove the entire URL.* |\n|split_file            |File            | Splits file into the number of rows determined by the method argument (default is 10,000 rows). Default delimiter is comma but can be changed by passing a method argument. Output_name_template is the file naming convention passed with an incrementer number included in the file name. The default output is csv file. The default path argument is set to the current directory. The keep_headers argument outputs file headers into each new file split and the default value is True. |`split_file(open('path/to/file','r'), delimiter=',', row_limit=10000, output_name_template='output_$s.csv', output_path='path/to/write/file', keep_headers=True)` |\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/drewipson/DW",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "data-wrangler",
    "package_url": "https://pypi.org/project/data-wrangler/",
    "platform": "",
    "project_url": "https://pypi.org/project/data-wrangler/",
    "project_urls": {
      "Homepage": "https://github.com/drewipson/DW"
    },
    "release_url": "https://pypi.org/project/data-wrangler/0.0.3/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A small python package full of useful methods for data cleaning and manipulation.",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9282028,
  "releases": {
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "557097fb4e9ebfb08af30e5835a57514b23acd5270cc08a7d5f1740edaf6ef47",
          "md5": "c31f183d7f8f5b505dbcd4734828d50c",
          "sha256": "33336a95f04d5fcf95fd5db4e54f7047c026517164cbce0f7cfca98543836d57"
        },
        "downloads": -1,
        "filename": "data_wrangler-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c31f183d7f8f5b505dbcd4734828d50c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6576,
        "upload_time": "2021-02-01T02:45:58",
        "upload_time_iso_8601": "2021-02-01T02:45:58.248281Z",
        "url": "https://files.pythonhosted.org/packages/55/70/97fb4e9ebfb08af30e5835a57514b23acd5270cc08a7d5f1740edaf6ef47/data_wrangler-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "557097fb4e9ebfb08af30e5835a57514b23acd5270cc08a7d5f1740edaf6ef47",
        "md5": "c31f183d7f8f5b505dbcd4734828d50c",
        "sha256": "33336a95f04d5fcf95fd5db4e54f7047c026517164cbce0f7cfca98543836d57"
      },
      "downloads": -1,
      "filename": "data_wrangler-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c31f183d7f8f5b505dbcd4734828d50c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 6576,
      "upload_time": "2021-02-01T02:45:58",
      "upload_time_iso_8601": "2021-02-01T02:45:58.248281Z",
      "url": "https://files.pythonhosted.org/packages/55/70/97fb4e9ebfb08af30e5835a57514b23acd5270cc08a7d5f1740edaf6ef47/data_wrangler-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}