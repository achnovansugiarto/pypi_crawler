{
  "info": {
    "author": "Spencer Gardner",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# pyBNA\n\n## Introduction\n\nPython module to implement BNA logic on a PostGIS database. Uses a configuration\nfile for customizability. The current implementation requires a user to run the\nold-style BNA on the command line to import datasets. This library can build the\nrouteable network, process the connectivity routing, and calculate scores.\n\nBicycle Network Analysis (BNA) is a way to measure how effectively people\ncan connect to destinations via bike on comfortable, \"low-stress\" routes.\nMore info on the methodology at the [What is the BNA?](what_is_bna.md) page.\n\n![Example of BNA results](bna.gif)\n\n## Requirements\n\npyBNA is tested with Python 3.6. The following libraries are required:\n- psycopg2\n- tqdm\n- pyyaml\n- geopandas\n- munch\n- overpass\n- osmnx\n- xlrd\n\nA requirements.txt file is provided for convenience. You can install these via\npip:\n```\npip install -r requirements.txt\n```\n\n_*Special note for Windows users:_ Installing geopandas can be a real pain. If\nyou don't already have a working version of Geopandas, we suggest following\n[this excellent guide](https://geoffboeing.com/2014/09/using-geopandas-windows/)\nfrom Geoff Boeing.\n\nThe `osmium` package is also required for parsing OSM destinations from an .osm\nextract, but if you're downloading destinations directly from OSM you can\nsafely skip this dependency.\n\n## tl;dr (Simple run)\n\nThe most simple BNA run, using stock datasets and no customization, can be\ncompleted in a few easy steps. The following assumes you already have a database\nrunning named \"bna\" on the local machine.\n\n```\nimport pybna\n\n# imports\ni = pybna.Importer()\ni.import_boundary('/path/to/your/boundary/file')\ni.import_census_blocks(fips=16)\ni.import_census_jobs(\"received.neighborhood_census_block_jobs\",state=\"ID\")\ni.import_osm_network()\ni.import_osm_destinations()\n\n# stress\ns = pybna.Stress()\ns.segment_stress()\ns.crossing_stress()\n\n# connectivity\nbna = pybna.pyBNA()\nbna.calculate_connectivity()\n\n# scores\nbna.score(\"myschema.my_scores_table\")\nbna.aggregate(\"myschema.my_aggregate_score_table\")\n```\n\n## Importing data\n\npyBNA includes a workflow to import data from publicly available sources (for\nthe United States, at least). Automatic import of demographic data relies on US\nCensus 2010 data. Street network and bicycle facility data is imported from\nOpenStreetMap.\n\nFor more guidance on the import process, see our [import instructions](import.md).\n\n## Traffic Stress\n\npyBNA has a module that can calculate traffic stress based on roadway\ncharacteristics in your roadway data. There's also the ability to apply\nassumptions for locations where data is not available.\n\nFor more information about the traffic stress module, see the [traffic stress\ninstructions](stress.md).\n\n## Getting started\n\nFirst, import pybna and create a pyBNA object by pointing it to the config file.\n```\nimport pybna\nbna = pybna.pyBNA(config=\"/path/to/my/config.yaml\")\n```\n\nNext, you can calculate the connectivity with\n```\nbna.calculate_connectivity()\n```\n\nLastly, you can generate block-level scores with\n```\nbna.score(\"myschema.my_scores_table\")\n```\n\nand aggregate scores for the entire study area with\n```\nbna.aggregate(\"myschema.my_aggregate_score_table\")\n```\n\n## Configuration file\n\nMost options in pyBNA are managed using a configuration file. This file is\npassed as an argument when creating the pyBNA object and tells pyBNA important\nthings about your data and the assumptions you want to make in the analysis. The configuration file is written using [YAML](http://yaml.org/start.html).\n\nThere's more information about the configuration file [here](config.md)\n\n## Travel sheds\n\nOnce you've completed the connectivity analysis, you can develop a low/high stress travel shed for any census block with\n```\nbna.travel_sheds([list, of, block, ids, here], my_travel_shed_table)\n```\n\n## Scenarios\n\npyBNA includes the capability to run scenarios as a way to visualize the connectivity impacts of a project or group of projects. More information on scenarios is available [here](scenarios.md).",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/tooledesign/pybna",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pybna",
    "package_url": "https://pypi.org/project/pybna/",
    "platform": "",
    "project_url": "https://pypi.org/project/pybna/",
    "project_urls": {
      "Homepage": "https://github.com/tooledesign/pybna"
    },
    "release_url": "https://pypi.org/project/pybna/1.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A library for measuring bike network connectivity using PeopleForBikes' Bicycle Network Analysis methodology",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10065992,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f9d9f390a545f4cc274097b6d5bbafb729fe38a2d9b62181e3f0712c067f069",
          "md5": "3bc67094a4d605d2b2d6fb61cf7e9256",
          "sha256": "190ba68dcb2ee59775e25015b21abf2999e8cc66e467f34d8035fc43c173b8f1"
        },
        "downloads": -1,
        "filename": "pybna-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3bc67094a4d605d2b2d6fb61cf7e9256",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 193496,
        "upload_time": "2020-08-20T16:38:55",
        "upload_time_iso_8601": "2020-08-20T16:38:55.407454Z",
        "url": "https://files.pythonhosted.org/packages/9f/9d/9f390a545f4cc274097b6d5bbafb729fe38a2d9b62181e3f0712c067f069/pybna-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f3d2613d246e8dab7475ca61ab01d0844fdfaadcb48447f6d13f3af0a487bae",
          "md5": "8fb577e5978681eee794c54b4efe622e",
          "sha256": "f02491eb7fda2ea151ffeac99ff419a5a28f9e4d749fc5e2856ef68bae30437b"
        },
        "downloads": -1,
        "filename": "pybna-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8fb577e5978681eee794c54b4efe622e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 123741,
        "upload_time": "2020-08-20T16:38:58",
        "upload_time_iso_8601": "2020-08-20T16:38:58.718511Z",
        "url": "https://files.pythonhosted.org/packages/5f/3d/2613d246e8dab7475ca61ab01d0844fdfaadcb48447f6d13f3af0a487bae/pybna-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3fa6082d83118fc77959c8abaa2131fa7569f109d7557dfa7b805901350a9c0e",
          "md5": "8da423a3f8cc5921490842f5506a27f6",
          "sha256": "0c9e7c132e9566a3be89f7aa7f7986c0945a5ea5fe372d1ec3cbe9dc09dbbee5"
        },
        "downloads": -1,
        "filename": "pybna-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8da423a3f8cc5921490842f5506a27f6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2620740,
        "upload_time": "2021-04-14T20:05:55",
        "upload_time_iso_8601": "2021-04-14T20:05:55.585965Z",
        "url": "https://files.pythonhosted.org/packages/3f/a6/082d83118fc77959c8abaa2131fa7569f109d7557dfa7b805901350a9c0e/pybna-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3fa6082d83118fc77959c8abaa2131fa7569f109d7557dfa7b805901350a9c0e",
        "md5": "8da423a3f8cc5921490842f5506a27f6",
        "sha256": "0c9e7c132e9566a3be89f7aa7f7986c0945a5ea5fe372d1ec3cbe9dc09dbbee5"
      },
      "downloads": -1,
      "filename": "pybna-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "8da423a3f8cc5921490842f5506a27f6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 2620740,
      "upload_time": "2021-04-14T20:05:55",
      "upload_time_iso_8601": "2021-04-14T20:05:55.585965Z",
      "url": "https://files.pythonhosted.org/packages/3f/a6/082d83118fc77959c8abaa2131fa7569f109d7557dfa7b805901350a9c0e/pybna-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}