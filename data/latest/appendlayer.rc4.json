{
  "info": {
    "author": "Malthe Borch",
    "author_email": "mborch@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3"
    ],
    "description": "Append layer\n------------\n\n[![PyPI version](https://badge.fury.io/py/appendlayer.svg)](https://badge.fury.io/py/appendlayer)\n\nThis standalone utility appends a tarball to an existing image in a\ncontainer registry â€“ without having to pull down the image locally.\n\nIt supports any registry that implements the [OCI Distribution\nSpec](https://github.com/opencontainers/distribution-spec).\n\n\n### Why\n\nThe basic use-case for this utility is when you have a base image that\nis already available in a container registry, and you simply need to\nadd one or more files, then push the result back to the same registry.\n\nIn this case, you can do no better in terms of network transfer than\nthis utility. It does the minimum amount of work in order to get the\njob done.\n\nWith the [Docker\nADD](https://docs.docker.com/engine/reference/builder/#add) command,\nyou'd have to download the existing image and start up a build process\nin order to run the `ADD` command.\n\n```dockerfile\nFROM apache/airflow:2.3.2\nADD your_tar_file.tar.gz /opt/airflow/dag\n```\n\nThe resulting image would be exactly the same, but there is no special\noptimization in Docker that would avoid downloading the base image\n(although theoretically, it could be done but it would require bigger\nchanges in the data model in order to support lazy referencing of\nlayer data).\n\nIncidentally, the script was designed exactly with [Apache\nAirflow](https://airflow.apache.org/) in mind.\n\n\nNote that Buildkit [will have support for\nthis](https://github.com/moby/buildkit/issues/2414) from v0.10 but\nit's not clear how this will be supported in a Dockerfile.\n\n### Installation\n\nInstall the tool using pip:\n\n```bash\n$ pip install appendlayer\n```\n\nThis makes available \"appendlayer\" as a script in your environment.\n\nAlternatively, download the [appendlayer.py](./appendlayer.py) script\nand run it using Python directly:\n\n```bash\n$ python appendlayer.py\n```\n\nThe script has no external dependencies, using only what's included already with Python.\n\n\n### Usage\n\nPipe in the layer contents using a tarball and provide the repository (or _image_) name and the old and new tags:\n\n```bash\n$ echo \"Hello world\" > test.txt\n$ tar cvf - test.txt | appendlayer <host> <repository> <old-tag> <new-tag>\n```\n\nAlternatively, qualify source and destination using image syntax:\n```bash\n$ tar cvf - test.txt | appendlayer <host> <old-repository>:<old-tag> <new-repository>:<new-tag>\n```\n\nOr even across different hosts:\n```bash\n$ tar cvf - test.txt | appendlayer <old-host>/<old-repository>:<old-tag> <new-host>/<new-repository>:<new-tag>\n```\n\nFor Azure Container Registry (ACR) for example, the _host_ is\ntypically `<registry-name>.azurecr.io`.\n\n\n### Authentication\n\nThe script uses OAuth2 to authorize requests to the container\nregistry.\n\nThis is configured using either the `ACCESS_TOKEN` or `REFRESH_TOKEN`\nenvironment variable, or by extracting authentication details from the Docker\nconfiguration file (located based on the `DOCKER_CONFIG` environment\nvariable).\n\nFor example, for [Azure Container\nRegistry](https://azure.microsoft.com/en-us/services/container-registry/),\nto authorize to a specific container registry.\n\n```bash\n$ export REFRESH_TOKEN=$( \\\n      az acr login -t --name <registry-name>.azurecr.io \\\n      --expose-token --output tsv --query accessToken)\n```\n\nTo authorize across multiple registries, use an access token:\n\n```bash\n$ export ACCESS_TOKEN=$( \\\n       az account get-access-token --query accessToken --output tsv)\n```\n\n\nChanges\n=======\n\n2.2 (2022-09-30)\n----------------\n\n- Add support for stored Docker credentials with \"https\"-based URL\n  instead of hostname as the authentication entry.\n\n\n2.1 (2022-09-30)\n----------------\n\n- Add support for username/password credentials in stored Docker\n  credentials in addition to identity token.\n\n\n2.0 (2022-09-30)\n----------------\n\n- Add support for extracting refresh token from stored Docker\n  credentials.\n\n- Fix bug where two different repositories would not correctly get\n  authorized for the destination registry.\n\n- Added support for specifying different source and destination\n  repositories. Missing blobs will be copied if necessary.\n\n\n1.0 (2022-01-29)\n----------------\n\n- Initial release.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/malthe/appendlayer",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "appendlayer",
    "package_url": "https://pypi.org/project/appendlayer/",
    "platform": null,
    "project_url": "https://pypi.org/project/appendlayer/",
    "project_urls": {
      "Homepage": "https://github.com/malthe/appendlayer"
    },
    "release_url": "https://pypi.org/project/appendlayer/2.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Append a tarball to an image in a container registry",
    "version": "2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15265323,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "84fcabecdda5c9222e3c6a5e3a00c6011b6203809f796e6f6ace40c66d8515c6",
          "md5": "d1c83238224c03ff1d76eedcd332d30e",
          "sha256": "998ee8e36c74f0457022acdeafd69b9678c37b12daa96d1bb4b9dae1da87dbc7"
        },
        "downloads": -1,
        "filename": "appendlayer-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d1c83238224c03ff1d76eedcd332d30e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3372,
        "upload_time": "2022-01-29T07:56:14",
        "upload_time_iso_8601": "2022-01-29T07:56:14.645984Z",
        "url": "https://files.pythonhosted.org/packages/84/fc/abecdda5c9222e3c6a5e3a00c6011b6203809f796e6f6ace40c66d8515c6/appendlayer-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8ee8cc30887488e6b677f06508c526f01589e1fe548c6b913239bd565e8833f8",
          "md5": "3dbc97d1f4e77820726f82daea31e9c1",
          "sha256": "5236227173a610584fb86ed4c1cb2d75d7a84437a211a70dd4c90b794eb09936"
        },
        "downloads": -1,
        "filename": "appendlayer-2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3dbc97d1f4e77820726f82daea31e9c1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6367,
        "upload_time": "2022-09-30T07:59:39",
        "upload_time_iso_8601": "2022-09-30T07:59:39.527119Z",
        "url": "https://files.pythonhosted.org/packages/8e/e8/cc30887488e6b677f06508c526f01589e1fe548c6b913239bd565e8833f8/appendlayer-2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "238c9bb350e68d56dcfd2750595dc3db8e12b1e3f85f952a21b536681cbf369e",
          "md5": "cd29091bec45529de4bf07eac50e14df",
          "sha256": "7153c682e23ea541ca63ff98a4d3307caf41b191d838de65efa27f2e11b22285"
        },
        "downloads": -1,
        "filename": "appendlayer-2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "cd29091bec45529de4bf07eac50e14df",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6549,
        "upload_time": "2022-09-30T08:39:54",
        "upload_time_iso_8601": "2022-09-30T08:39:54.949122Z",
        "url": "https://files.pythonhosted.org/packages/23/8c/9bb350e68d56dcfd2750595dc3db8e12b1e3f85f952a21b536681cbf369e/appendlayer-2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "440e492fe69bc578182d5f4936dfbc186a981dda5b646c5225b672023e7c4b9c",
          "md5": "a661942a5189ae9997d372f2716ba439",
          "sha256": "34ef8189252f46ae678d24e9e9be42a1a26b023f0e9454a9966c92ee6b0a0f7d"
        },
        "downloads": -1,
        "filename": "appendlayer-2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a661942a5189ae9997d372f2716ba439",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6667,
        "upload_time": "2022-09-30T08:53:45",
        "upload_time_iso_8601": "2022-09-30T08:53:45.738929Z",
        "url": "https://files.pythonhosted.org/packages/44/0e/492fe69bc578182d5f4936dfbc186a981dda5b646c5225b672023e7c4b9c/appendlayer-2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "440e492fe69bc578182d5f4936dfbc186a981dda5b646c5225b672023e7c4b9c",
        "md5": "a661942a5189ae9997d372f2716ba439",
        "sha256": "34ef8189252f46ae678d24e9e9be42a1a26b023f0e9454a9966c92ee6b0a0f7d"
      },
      "downloads": -1,
      "filename": "appendlayer-2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "a661942a5189ae9997d372f2716ba439",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6667,
      "upload_time": "2022-09-30T08:53:45",
      "upload_time_iso_8601": "2022-09-30T08:53:45.738929Z",
      "url": "https://files.pythonhosted.org/packages/44/0e/492fe69bc578182d5f4936dfbc186a981dda5b646c5225b672023e7c4b9c/appendlayer-2.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}