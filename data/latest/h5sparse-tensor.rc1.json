{
  "info": {
    "author": "Appier Inc.",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Intended Audience :: Information Technology",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Database",
      "Topic :: Scientific/Engineering",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "Sparse matrices from `original Github repository <https://github.com/appier/h5sparse>`_\n\n\nSparse tensors from `new Github repository <https://github.com/tvandera/h5sparse>`_\n\nh5sparse\n========\n.. image:: https://img.shields.io/travis/tvandera/h5sparse/master.svg\n   :target: https://travis-ci.org/tvandera/h5sparse\n.. image:: https://img.shields.io/pypi/v/h5sparse-tensor.svg\n   :target: https://pypi.python.org/pypi/h5sparse-tensor\n.. image:: https://img.shields.io/pypi/l/h5sparse-tensor.svg\n   :target: https://pypi.python.org/pypi/h5sparse-tensor\n\nScipy sparse matrix in HDF5.\n\n\nInstallation\n------------\n.. code:: bash\n\n   pip install h5sparse-tensor\n\n\nTesting\n-------\n- for single environment:\n\n  .. code:: bash\n\n     python setup.py test\n\n- for all environments:\n\n  .. code:: bash\n\n     tox\n\n\nExamples\n--------\n\nCreate dataset\n**************\n.. code:: python\n\n   In [1]: import scipy.sparse as ss\n      ...: import h5sparse\n      ...: import numpy as np\n      ...:\n\n   In [2]: sparse_matrix = ss.csr_matrix([[0, 1, 0],\n      ...:                                [0, 0, 1],\n      ...:                                [0, 0, 0],\n      ...:                                [1, 1, 0]],\n      ...:                               dtype=np.float64)\n\n   In [3]: # create dataset from scipy sparse matrix\n      ...: with h5sparse.File(\"test.h5\") as h5f:\n      ...:     h5f.create_dataset('sparse/matrix', data=sparse_matrix)\n\n   In [4]: # you can also create dataset from another dataset\n      ...: with h5sparse.File(\"test.h5\") as h5f:\n      ...:     h5f.create_dataset('sparse/matrix2', data=h5f['sparse/matrix'])\n\n   In [5]: # you can also create dataset using the formats that original h5py accepts\n      ...: with h5sparse.File(\"test.h5\") as h5f:\n      ...:     h5f.create_dataset('sparse/matrix3', data=[1,2,3])\n\nRead dataset\n************\n.. code:: python\n\n   In [6]: h5f = h5sparse.File(\"test.h5\")\n\n   In [7]: h5f['sparse/matrix'][1:3]\n   Out[7]:\n   <2x3 sparse matrix of type '<class 'numpy.float64'>'\n           with 1 stored elements in Compressed Sparse Row format>\n\n   In [8]: h5f['sparse/matrix'][1:3].toarray()\n   Out[8]:\n   array([[ 0.,  0.,  1.],\n          [ 0.,  0.,  0.]])\n\n   In [9]: h5f['sparse']['matrix'][1:3].toarray()\n   Out[9]:\n   array([[ 0.,  0.,  1.],\n          [ 0.,  0.,  0.]])\n\n   In [10]: h5f['sparse']['matrix'][2:].toarray()\n   Out[10]:\n   array([[ 0.,  0.,  0.],\n          [ 1.,  1.,  0.]])\n\n   In [11]: h5f['sparse']['matrix'][:2].toarray()\n   Out[11]:\n   array([[ 0.,  1.,  0.],\n          [ 0.,  0.,  1.]])\n\n   In [12]: h5f['sparse']['matrix'][-2:].toarray()\n   Out[12]:\n   array([[ 0.,  0.,  0.],\n          [ 1.,  1.,  0.]])\n\n   In [13]: h5f['sparse']['matrix'][:-2].toarray()\n   Out[13]:\n   array([[ 0.,  1.,  0.],\n          [ 0.,  0.,  1.]])\n\n   In [14]: h5f['sparse']['matrix'][()].toarray()\n   Out[14]:\n   array([[ 0.,  1.,  0.],\n          [ 0.,  0.,  1.],\n          [ 0.,  0.,  0.],\n          [ 1.,  1.,  0.]])\n\n   In [15]: import h5py\n\n   In [16]: h5py_h5f = h5py.File(\"test.h5\")\n\n   In [17]: h5sparse.Group(h5py_h5f.id)['sparse/matrix'][()]\n   Out[17]:\n   <4x3 sparse matrix of type '<class 'numpy.float64'>'\n           with 4 stored elements in Compressed Sparse Row format>\n\n   In [18]: h5sparse.Group(h5py_h5f['sparse'].id)['matrix'][()]\n   Out[18]:\n   <4x3 sparse matrix of type '<class 'numpy.float64'>'\n           with 4 stored elements in Compressed Sparse Row format>\n\n   In [19]: h5sparse.Dataset(h5py_h5f['sparse/matrix'])[()]\n   Out[19]:\n   <4x3 sparse matrix of type '<class 'numpy.float64'>'\n           with 4 stored elements in Compressed Sparse Row format>\n\nAppend dataset\n**************\n.. code:: python\n\n   In [20]: to_append = ss.csr_matrix([[0, 1, 1],\n       ...:                            [1, 0, 0]],\n       ...:                           dtype=np.float64)\n\n   In [21]: h5f.create_dataset('matrix', data=sparse_matrix, chunks=(100000,),\n       ...:                    maxshape=(None,))\n\n   In [22]: h5f['matrix'].append(to_append)\n\n   In [23]: h5f['matrix'][()]\n   Out[23]:\n   <6x3 sparse matrix of type '<class 'numpy.float64'>'\n           with 7 stored elements in Compressed Sparse Row format>\n\n   In [24]: h5f['matrix'][()].toarray()\n   Out[24]:\n   array([[ 0.,  1.,  0.],\n          [ 0.,  0.,  1.],\n          [ 0.,  0.,  0.],\n          [ 1.,  1.,  0.],\n          [ 0.,  1.,  1.],\n          [ 1.,  0.,  0.]])",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/tvandera/h5sparse",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "h5sparse-tensor",
    "package_url": "https://pypi.org/project/h5sparse-tensor/",
    "platform": "",
    "project_url": "https://pypi.org/project/h5sparse-tensor/",
    "project_urls": {
      "Homepage": "https://github.com/tvandera/h5sparse"
    },
    "release_url": "https://pypi.org/project/h5sparse-tensor/0.2.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Scipy sparse matrices in HDF5. Sparse COO tensors in HDF5",
    "version": "0.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7580477,
  "releases": {
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "61dfa4f7105561c2b77ca6203e32e32019295730154a9df8c8997544236a9fd5",
          "md5": "83cae75a240480645ecad24e2437e90a",
          "sha256": "74af4da4972a8b734bed9543494a722e7c5c865c49fac2a276fb3afb01f8e578"
        },
        "downloads": -1,
        "filename": "h5sparse-tensor-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "83cae75a240480645ecad24e2437e90a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6567,
        "upload_time": "2020-06-28T11:18:38",
        "upload_time_iso_8601": "2020-06-28T11:18:38.062689Z",
        "url": "https://files.pythonhosted.org/packages/61/df/a4f7105561c2b77ca6203e32e32019295730154a9df8c8997544236a9fd5/h5sparse-tensor-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "61dfa4f7105561c2b77ca6203e32e32019295730154a9df8c8997544236a9fd5",
        "md5": "83cae75a240480645ecad24e2437e90a",
        "sha256": "74af4da4972a8b734bed9543494a722e7c5c865c49fac2a276fb3afb01f8e578"
      },
      "downloads": -1,
      "filename": "h5sparse-tensor-0.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "83cae75a240480645ecad24e2437e90a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6567,
      "upload_time": "2020-06-28T11:18:38",
      "upload_time_iso_8601": "2020-06-28T11:18:38.062689Z",
      "url": "https://files.pythonhosted.org/packages/61/df/a4f7105561c2b77ca6203e32e32019295730154a9df8c8997544236a9fd5/h5sparse-tensor-0.2.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}