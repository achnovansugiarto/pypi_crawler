{
  "info": {
    "author": "Michael Vaughn",
    "author_email": "mikish.vaughn@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Topic :: Home Automation"
    ],
    "description": "# IPRemote\nSamsung TV IP Remote Control\n\n- All credit is due to the prior work of others. \n- For the code origin, please reference: \n- https://github.com/kdschlosser/samsungctl.\n\n<br><br>\nIPRemote is a library and a command line tool for remote controlling\nSamsung televisions via a TCP/IP connection. It currently supports\n2008+ TVs with Ethernet or Wi-Fi connectivity. That includes the\nH and J model year TV's as well as the TV's that have the latest\nSamsung firmware that makes use of an SSL based websocket connection.\n\nOn all TV's you will be prompted to accept the connection this prompt\ngets displayed ON THE TV. You will have 30 seconds to do this before it\nerrors out. There is a slight variation to this, on 2014 and 2015 year\nTV's (H and J) a pin will be displayed ON THE TV that will have to be\nentered when prompted to ON YOUR PC.\n<br><br>\n\n***Dependencies***\n------------------\n\n- `Python 2.7+`\n- `websocket-client`\n- `requests`\n- `pycryptodome`\n- `lxml`\n- `ifaddr`\n- `six`\n- `curses` (optional, for the interactive mode)\n\n<br></br>\n\n***Installation***\n------------------\n\nPreferred:\n```python\n    pip install ipremote\n```\nUsing the downloaded code:\n```python \n    setup.py install\n```\nWith the downloaded code it's possible to use the command line tool without installation too:\n```python\n    python -m IPRemote\n```\n<br></br>\n\n***Command line usage***\n------------------------\nYou can use `IPRemote` command to send keys to a TV:\n<br></br>\n```python\n    IPRemote --host <host> [options] <key> [key ...]\n```\n\n- `host` is the hostname or IP address of the TV.\n- `key` is a key code, e.g.\n- `KEY_VOLDOWN` (See Key codes).\n<br></br>\nThere is also an interactive mode (ncurses) for sending the key presses:\n```python\n    IPRemote --host <host> [options] --interactive\n```\n<br></br>\nUse `IPRemote --help` for more information about the command line\narguments:\n```\nusage: IPRemote [-h] [--version] [-v] [-q] [-i] [--host HOST] [--port PORT]\n                     [--method METHOD] [--name NAME] [--description DESC]\n                     [--id ID] [--token TOKEN] [--timeout TIMEOUT]\n                     [--volume VOLUME] [--mute MUTE] [--brightness BRIGHTNESS]\n                     [--contrast CONTRAST] [--sharpness SHARPNESS]\n                     [--source SOURCE] [--source-label SOURCE_LABEL]\n                     [--config-file PATH/FILENAME]\n                     [--start-app APP NAME OR ID] [--app-metadata METADATA]\n                     [--key-help]\n                     [key [key ...]]\n\nRemote control Samsung televisions via TCP/IP connection\n\npositional arguments:\n    key [keys to be sent (e.g. KEY_VOLDOWN)]\n```\n<br></br>\nBreakdown of the parameters:\n<br></br>\n\noptional_argument|description\n-----------------|-----------\n-h, --help|show this help message and exit\n--version|show program's version number and exit\n-v, --verbose|increase output verbosity\n-q, --quiet|suppress non-fatal output\n-i, --interactive|interactive control\n--host HOST|TV hostname or IP address\n--port PORT|TV port number (TCP)\n--method METHOD|Connection method (legacy or websocket)\n--name NAME|remote control name\n--description DESC|remote control description\n--id ID|remote control id\n--token TOKEN|Authentication token that is used by 2014-2015 TVs and some 2016-current TVs\n--timeout TIMEOUT|socket timeout in seconds (0 = no timeout)\n--volume VOLUME|sets the volume allowed values: 0-100 or -1 to print the volume\n--mute MUTE|sets the mute. allowed values: on, off, state. state to print the mute state\n--brightness BRIGHTNESS|sets the brightness allowed values: 0-100 or -1 to print the brightness\n--contrast CONTRAST|sets the contrast allowed values: 0-100 or -1 to print the contrast\n--sharpness SHARPNESS|sets the sharpness allowed values: 0-100 or -1 to print the sharpness\n--source SOURCE|set the source. you can use the TV defined names.. HDMI1, HDMI2, PC, USB... or you can use the programmed label that appears on the OSD.\n--source-label SOURCE_LABEL|sets the source label that appears on the OSD\n--config-file PATH/FILENAME|path and filename to configuration file *see below for mor information\n--start-app APPLICATION NAME OR ID|starts an application\n--app-metadata METADATA|string of information the application can use when it starts up. And example would be the browser. To have it open directly to a specific URL you would enter: `\"http\\/\\/www.some-web-address.com\"` wrapping the meta data in quotes will reduce the possibility of a command line parser error.\n--key-help {OPTIONAL KEYS}|prints out key help\n\n<br></br>\nExample use:\n```python\n    IPRemote --host 192.168.0.10 --name myremote KEY_VOLDOWN\n```\n<br></br>\nTo obtain a list of all of the known keys:\n<br></br>\n```python\n    IPRemote --help-keys\n```\n<br></br>\nYou can also get help on a specific key:\n<br></br>\n```python\n    IPRemote --key-help KEY_16_9\n```\n<br></br>\nor if you wanted to list more then one key:\n<br></br>\n```python\n    IPRemote --key-help KEY_16_9 KEY_TTX_MIX\n```\n<br></br>\n<br></br>\n\n***--config-file***\n-------------------\nIf this is the first time you are using this library on a TV you must\nspecify --host and key code for the command you wish to execute along\nwith this parameter.\n```python\n    IPRemote --host 192.168.1.100 --config-file \"/PATH/FILE.NAME\" KEY_MENU\n```\n<br></br>\nBy doing this it will make all of the necessary config file settings that\nare needed to be made for your TV. After the library has sent the command\nto your TV it will then save the file. Any calls there after will only\nneed to have --config-file PATH/FILENAME along with the command you\nwish to perform for a command line options.\n```python\n    IPRemote --config-file \"/PATH/FILE.NAME\" KEY_MENU\n```\n<br></br>\nAll other information will be retrieved from the file.\n\n<br></br>\n<br></br>\n\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\n<br></br>\n***depreciated***\n<br></br>\n\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\n<br></br>\nThe settings can be loaded from a configuration file. The file is searched from\n\n* `$XDG_CONFIG_HOME/IPRemote.conf`\n* `~/.config/IPRemote.conf`\n* `/etc/IPRemote.conf`\n\nin this order. A simple default configuration is\nbundled with the source as\n\n* `IPRemote.conf <IPRemote.conf>`\n\n<br></br>\n\n***Library usage***\n-------------------\n\nIPRemote can also be used as a python package.\n```python\n    import IPRemote\n```\n\nA context managed remote controller object of class `Remote` can be\nconstructed using the `with` statement:\n\n```python\n    with IPRemote.Remote(config) as remote:\n        # Use the remote object\n```\n\n<br></br>\n\n***Config Class***\n------------------\n\nThere is a class that handles all of the configuration\ninformation. It makes it easier to save and load config data.\n\n```python\nimport IPRemote\n\nconfig = IPRemote.Config(\n    name='IPRemote',\n    description='IPRemote-library',\n    method='websocket',\n    port=8001\n)\n```\n<br></br>\nThe constructor for the Config class takes these parameters:\n<br></br>\n\nParam Name|Default value|Param Type|Use\n----------|-------------|----------|---\nname|`\"IPRemote\"`|`str`|Name of the \"remote\" this is the name that is going to appear on the TV\ndescription|HOSTNAME of local PC|`str`|Only used in the legacy connection (pre 2014  TVs)\nhost|`None`|`str`|The ip address of the TV `\"192.168.1.1\"`\nport|`None`|`int`|The port to connect to. choices aree 55000 (< 2014), 8080 (2014 & 2015), 8001 & 8002 (>= 2016) or `None` \\*\nmethod|`None`|`str`|Connection method \\(`\"legacy\"`, `\"websocket\"`, `\"encrypted\"` or `None` \\* \\)\nid|`None`|`str`|This is an identifier that you can set. when using the \"encrypted\" method this should be left out\ntimeout|`0`|`int`|socket timeout, only used for the legacy method\ntoken|`None`|`str`|Authentication token that is used for 2014 & 2015 and some 2016+ TV's\ndevice_id|`None`|`str`|Internal Use\nupnp_locations|`None`|`list`|Future Use\nmac|`None`|`str`|MAC address of the TV `\"00:00:00:00:00\"` or `None` \\*\\*.\n\n<br></br>\n\\* A detection system will automatically detect what connection type\nand port to use. In order to have the detection system activate the\nport and the method parameters in the call to Config MUST be `None`.\n<br></br>\n\n\\*\\* The `mac` parameter in the config class does not have to be used if\nyou are using a legacy connection, <= 2013 TV. If you are using a\nTV that is 2014 and newer, if there is no mac address, the power on\nfeature will not work. If you do not specify a mac address and the TV\nis 2014 or newer, the program will attempt to acquire the MAC address of\nthe TV for you. In order for this to be successful you need to have\nyour TV turned on. This process only needs to be done one time if\nyou are saving the configuration data using the `save` method. If for\nsome reason we are unable to locate the MAC address for the TV you have\nthe option of manually passing it to the call to Config. If you are\nentering it manually it needs to be formatted `\"00:00:00:00:00\"`.\n<br></br>\n\nHere is a python script example of running IPRemote using all of the\ndetection features activated remember in order for this to work you\nneed to have the TV powered on. Since we only want to go through this\nprocess a single time (because it can take an extra second or 2) we want\nto save the configuration information to file. So be sure to enter the\npath and filename into the save method.\n<br></br>\n```python\nimport IPRemote\n\nconfig = IPRemote.Config(host='192.168.1.100')\n\nwith IPRemote.Remote(config) as remote:\n    remote.KEY_MENU()\n\nconfig.save('PATH/FILE.NAME')\n```\n<br></br>\nthe Config class is also where you set your logging level\n<br></br>\n```python\nimport logging\nimport IPRemote\n\nconfig = IPRemote.Config(\n    name='IPRemote',\n    method='websocket',\n    host='192.168.1.100'\n)\n\nconfig.log_level = logging.DEBUG\n```\n<br></br>\nThere are two methods for saving and loading a config file.\n<br></br>\n```python\nimport IPRemote\n\nconfig = IPRemote.Config.load('path/to/save/file')\n```\n<br></br>\nIf you load a file the path is saved so you can call save to\nsave any new data. If you constructed the Config class manually you will\nneed to pass a path when calling save. and that path is then saved so\nany subsequent calls to save will not require you to pass the path\n<br></br>\n```python\nimport IPRemote\n\nconfig = IPRemote.Config(\n    name='IPRemote',\n    description='IPRemote-library',\n    method='websocket',\n    host='192.168.1.100'\n)\n\nconfig.save('path/to/save/file')\n```\n<br></br>\nWhen calling save, if you only pass a folder path and not a folder/file path,\nthe name you passed to the constructor will be used along with the\nextension \".config\".\n<br></br>\n\nYou do not need to keep track of the config instance. once it is passed\nto the Remote constructor it is then stored in that instance.\n<br></br>\n```python\nimport IPRemote\n\nconfig = IPRemote.Config.load('path/to/save/file')\nremote = IPRemote.Remote(config)\nremote.config.save()\n```\n<br></br>\n\nAlternately,\n<br></br>\n```python\nimport IPRemote\n\nconfig = IPRemote.Config.load('PATH/FILE.NAME')(\n    name='IPRemote',\n    description='IPRemote-library',\n    method='websocket',\n    host='192.168.1.100'\n)\n\nconfig.save()\n```\n<br></br>\nOnly one config setup routines is needed. \n1. If the file exists then it is used.\n2. If you happen to only specify a directory and want IPRemote to use the name parameter for the filename, this is what makes that possible.\n3. If the path does not exist, then it will create a new configuration with the supplied arguments and save that config data.\n\n<br></br>\n<br></br>\nYou are still able to pass a dictionary to the Remote constructor as well.\n<br></br>\n\n<br></br>\n\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\n<br></br>\n***depreciated***\n<br></br>\n\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\n<br></br>\nThe constructor takes a configuration dictionary as a parameter. All\nconfiguration items must be specified.\n<br></br>\n<br></br>\n\nKey|Type|Description\n---|----|-----------\nhost|string|Hostname or IP address of the TV.\nport|int|TCP port number. \\(Default: `55000`\\)\nmethod|string|Connection method \\(`\"legacy\"` or `\"websocket\"`\\)\nname|string|Name of the remote controller.\ndescription|string|Remote controller description.\nid|string|Additional remote controller ID.\ntoken|string|Authentication token\ntimeout|int|Timeout in seconds. `0` means no timeout.\n\n<br></br>\n\n***Power Property***\n--------------------\nPower status along with powering off and on 2014+ TV's\n<br></br>\n```python\nimport IPRemote\n\nconfig = IPRemote.Config.load('path/to/save/file')\nremote = IPRemote.Remote(config)\nprint(remote.power)\n\n# turns the TV on\nremote.power = True\n\nprint(remote.power)\n# turns the TV off\nremote.power = False\n\n# toggles the power\nremote.power = not remote.power\n```\n<br></br>\nWe do not have the ability to turn on the TV's older then 2014.\n<br></br>\n<br></br>\n\n***Exceptions***\n----------------\nWhen something goes wrong you will receive an exception:\n<br></br>\n\nException|Description\n---------|-----------\nSamsungTVError|Samsung TV Exception Base Class.\nAccessDenied|Connection was denied.\nConnectionClosed|Connection was closed.\nUnhandledResponse|Received unknown response.\nNoTVFound|Unable to locate a TV.\nConfigError|Base class for config exceptions.\nConfigUnknownMethod|Unknown connection method.\nConfigParseError|Config data is not json formatted or is not a formatted flat file.\nConfigLoadError|Config path specified cannot be located.\nConfigSavePathError|Config save path is not valid.\nConfigSaveError|Error saving config.\nConfigSavePathNotSpecified|Config save path was not specified.\nConfigParameterError|Parameter is not a config parameter.\n\n<br></br>\n\n***Example program***\n---------------------\nThis simple program opens and closes the menu a few times.\n<br></br>\n```python\nimport IPRemote\nimport time\n\nconfig = IPRemote.Config(\n    name='IPRemote',\n    method='legacy',\n    host='192.168.1.100'\n)\n\nwith IPRemote.Remote(config) as remote:\n    for i in range(10):\n        remote.control(\"KEY_MENU\")\n        time.sleep(0.5)\n```\n<br></br>\n\n***Mouse Control***\n-------------------\nMouse control can only be done by using IPRemote as a python module.\nMouse command are built. this way you can accomplish multiple movements\nin a single \"command\" and the movement set can be stored for later use.\ndepending on how long it takes to accomplish a movement\n(distance traveled) you will need to insert a wait period in between\neach movement.\n<br></br>\n```python\nimport IPRemote\n\nconfig = IPRemote.Config(\n    name='IPRemote',\n    method='websocket',\n    host='192.168.1.100'\n)\n\nwith IPRemote.Remote(config) as remote:\n    mouse = remote.mouse\n    mouse.move(x=100, y=300)\n    mouse.wait(0.5)\n    mouse.left_click()\n    mouse.run()\n    mouse.clear()\n```\n<br></br>\nThis is thread safe, so only one mouse command set\ncan be run at a single time. If you have the mouse running in a\nthread and you need to stop the movement from another, or you simply\nwant to terminate the program gracefully, you would call `mouse.stop()`\n<br></br>\n```python\nimport IPRemote\nimport time\n\nconfig = IPRemote.Config(\n    name='IPRemote',\n    method='websocket',\n    host='192.168.1.100'\n)\n\nwith IPRemote.Remote(config) as remote:\n     mouse = remote.mouse\n\n    def move_mouse(_x, _y):\n        mouse.move(x=x, y=y)\n        start = time.time()\n        mouse.run()\n        stop = time.time()\n        print('x:', x, 'y:', y, 'time:', (stop - start) * 1000)\n        mouse.clear()\n        mouse.move(x=-x, y=-y)\n        mouse.run()\n        mouse.clear()\n\n    for x in range(1920):\n        move_mouse(x, 0)\n\n        for y in range(1080):\n            move_mouse(0, y)\n            move_mouse(x, y)\n```\n<br></br>\n\n***Voice Recognition***\n-----------------------\nIf your TV supports voice recognition, then you have the ability to start and\nstop the voice recognition service on the TV. This can be done only by\nusing the IPRemote library as a package to an already existing program.\nexample code of how to do this is below.\n<br></br>\n```python\nimport IPRemote\nimport time\n\nconfig = IPRemote.Config(\n    name='IPRemote',\n    method='websocket',\n    host='192.168.1.100'\n)\n\nwith IPRemote.Remote(config) as remote:\n    remote.start_voice_recognition()\n    time.sleep(5.0)\n    remote.stop_voice_recognition()\n```\n<br></br>\n\n***Applications***\n------------------\nBelow is a sample of how to access the applications on the TV.\n<br></br>\n```python\nimport IPRemote\n\nconfig = IPRemote.Config(\n    name='IPRemote',\n    method='websocket',\n    host='192.168.1.100'\n)\n\nwith IPRemote.Remote(config) as remote:\n    for app in remote.applications:\n        print('name:', app.name)\n        print('=' * 30)\n        print('id:', app.app_id)\n        print('is running:', app.is_running)\n        print('version:', app.version)\n        print()\n```\n<br></br>\nif you want to access a specific application by name or by the app id.\n<br></br>\n```python\nimport IPRemote\n\nconfig = IPRemote.Config(\n    name='IPRemote',\n    method='websocket',\n    host='192.168.1.100'\n)\n\nwith IPRemote.Remote(config) as remote:\n    app = remote.get_application('YouTube')\n    if app is not None:\n        print('name:', app.name)\n        print('=' * 30)\n        print('id:', app.app_id)\n        print('is running:', app.is_running)\n        print('version:', app.version)\n        print()\n```\n<br></br>\nHere are the available properties for an application\n\n* is_lock\n* name\n* app_type\n* position\n* app_id\n* launcher_type\n* mbr_index\n* source_type_num\n* icon\n* id\n* mbr_source\n* action_type\n* version\n* is_visible\n* is_running\n\n<br></br>\nWe can also iterate over an application for any content groups,\nand then we can iterate over the content group forthe available\ncontent in that group.\n<br></br>\n```python\nimport IPRemote\n\nconfig = IPRemote.Config(\n    name='IPRemote',\n    method='websocket',\n    host='192.168.1.100'\n)\n\nwith IPRemote.Remote(config) as remote:\n    for app in remote.applications:\n        print('name:', app.name)\n        print('=' * 30)\n        for content_group in app:\n            print('   ', content_group.title)\n            print('   ', '-' * 26)\n            for content in content_group:\n                print('       ', content.title)\n```\n<br></br>\nHere are the available properties for the content group:\n\n* title\n\n<br></br>\nHere are the available properties for the content:\n\n* is_playable\n* subtitle\n* app_type\n* title\n* mbr_index\n* live_launcher_type\n* action_play_url\n* service_id\n* launcher_type\n* source_type_num\n* action_type\n* app_id\n* subtitle2\n* display_from\n* display_until\n* mbr_source\n* id\n* subtitle3\n* icon\n\n<br></br>\nYou can also run an application or a piece of content by calling `run()`\non either an application or on the content.\n<br></br>\n\n***Key codes***\n---------------\nHere is the new list of keycodes that are supported.\n<br></br>\n<br></br>\n\n*Power Keys*\n------------\n\nKey|Description\n---|-----------\nKEY_POWEROFF|PowerOFF\nKEY_POWERON|PowerOn\nKEY_POWER|PowerToggle\n\n<br></br>\n\n*Input Keys*\n------------\n\nKey|Description\n---|-----------\nKEY_SOURCE|Source\nKEY_COMPONENT1|Component1\nKEY_COMPONENT2|Component2\nKEY_AV1|AV1\nKEY_AV2|AV2\nKEY_AV3|AV3\nKEY_SVIDEO1|SVideo1\nKEY_SVIDEO2|SVideo2\nKEY_SVIDEO3|SVideo3\nKEY_HDMI|HDMI\nKEY_HDMI1|HDMI1\nKEY_HDMI2|HDMI2\nKEY_HDMI3|HDMI3\nKEY_HDMI4|HDMI4\nKEY_FM_RADIO|FMRadio\nKEY_DVI|DVI\nKEY_DVR|DVR\nKEY_TV|TV\nKEY_ANTENA|AnalogTV\nKEY_DTV|DigitalTV\n\n<br></br>\n\n*Number Keys*\n-------------\nKey|Description\n---|-----------\nKEY_1|Key1\nKEY_2|Key2\nKEY_3|Key3\nKEY_4|Key4\nKEY_5|Key5\nKEY_6|Key6\nKEY_7|Key7\nKEY_8|Key8\nKEY_9|Key9\nKEY_0|Key0\n\n<br></br>\n\n*Misc Keys*\n-----------\nKey|Description\n---|-----------\nKEY_PANNEL_CHDOWN|3D\nKEY_ANYNET|AnyNet+\nKEY_ESAVING|EnergySaving\nKEY_SLEEP|SleepTimer\nKEY_DTV_SIGNAL|DTVSignal\n\n<br></br>\n\n*Channel Keys*\n--------------\nKey|Description\n---|-----------\nKEY_CHUP|ChannelUp\nKEY_CHDOWN|ChannelDown\nKEY_PRECH|PreviousChannel\nKEY_FAVCH|FavoriteChannels\nKEY_CH_LIST|ChannelList\nKEY_AUTO_PROGRAM|AutoProgram\nKEY_MAGIC_CHANNEL|MagicChannel\n\n<br></br>\n\n*Volume Keys*\n-------------\nKey|Description\n---|-----------\nKEY_VOLUP|VolumeUp\nKEY_VOLDOWN|VolumeDown\nKEY_MUTE|Mute\n\n<br></br>\n\n*Direction Keys*\n----------------\nKey|Description\n---|-----------\nKEY_UP|NavigationUp\nKEY_DOWN|NavigationDown\nKEY_LEFT|NavigationLeft\nKEY_RIGHT|NavigationRight\nKEY_RETURN|NavigationReturn/Back\nKEY_ENTER|NavigationEnter\n\n<br></br>\n\n*Media Keys*\n------------\nKey|Description\n---|-----------\nKEY_REWIND|Rewind\nKEY_STOP|Stop\nKEY_PLAY|Play\nKEY_FF|FastForward\nKEY_REC|Record\nKEY_PAUSE|Pause\nKEY_LIVE|Live\nKEY_QUICK_REPLAY|fnKEY_QUICK_REPLAY\nKEY_STILL_PICTURE|fnKEY_STILL_PICTURE\nKEY_INSTANT_REPLAY|fnKEY_INSTANT_REPLAY\n\n<br></br>\n\n*Picture in Picture*\n--------------------\nKey|Description\n---|-----------\nKEY_PIP_ONOFF|PIPOn/Off\nKEY_PIP_SWAP|PIPSwap\nKEY_PIP_SIZE|PIPSize\nKEY_PIP_CHUP|PIPChannelUp\nKEY_PIP_CHDOWN|PIPChannelDown\nKEY_AUTO_ARC_PIP_SMALL|PIPSmall\nKEY_AUTO_ARC_PIP_WIDE|PIPWide\nKEY_AUTO_ARC_PIP_RIGHT_BOTTOM|PIPBottomRight\nKEY_AUTO_ARC_PIP_SOURCE_CHANGE|PIPSourceChange\nKEY_PIP_SCAN|PIPScan\n\n<br></br>\n\n*Modes*\n-------\nKey|Description\n---|-----------\nKEY_VCR_MODE|VCRMode\nKEY_CATV_MODE|CATVMode\nKEY_DSS_MODE|DSSMode\nKEY_TV_MODE|TVMode\nKEY_DVD_MODE|DVDMode\nKEY_STB_MODE|STBMode\nKEY_PCMODE|PCMode\n\n<br></br>\n\n*Color Keys*\n------------\nKey|Description\n---|-----------\nKEY_GREEN|Green\nKEY_YELLOW|Yellow\nKEY_CYAN|Cyan\nKEY_RED|Red\n\n<br></br>\n\n*Teletext*\n----------\nKey|Description\n---|-----------\nKEY_TTX_MIX|TeletextMix\nKEY_TTX_SUBFACE|TeletextSubface\n\n<br></br>\n\n*AspectRatio*\n-------------\nKey|Description\n---|-----------\nKEY_ASPECT|AspectRatio\nKEY_PICTURE_SIZE|PictureSize\nKEY_4_3|AspectRatio4:3\nKEY_16_9|AspectRatio16:9\nKEY_EXT14|AspectRatio3:4(Alt)\nKEY_EXT15|AspectRatio16:9(Alt)\n\n<br></br>\n\n*Picture Mode*\n--------------\nKey|Description\n---|-----------\nKEY_PMODE|PictureMode\nKEY_PANORAMA|PictureModePanorama\nKEY_DYNAMIC|PictureModeDynamic\nKEY_STANDARD|PictureModeStandard\nKEY_MOVIE1|PictureModeMovie\nKEY_GAME|PictureModeGame\nKEY_CUSTOM|PictureModeCustom\nKEY_EXT9|PictureModeMovie(Alt)\nKEY_EXT10|PictureModeStandard(Alt)\n\n<br></br>\n\n*Menus*\n-------\nKey|Description\n---|-----------\nKEY_MENU|Menu\nKEY_TOPMENU|TopMenu\nKEY_TOOLS|Tools\nKEY_HOME|Home\nKEY_CONTENTS|Contents\nKEY_GUIDE|Guide\nKEY_DISC_MENU|DiscMenu\nKEY_DVR_MENU|DVRMenu\nKEY_HELP|Help\n\n<br></br>\n\n*OSD*\n-----\nKey|Description\n---|-----------\nKEY_INFO|Info\nKEY_CAPTION|Caption\nKEY_CLOCK_DISPLAY|ClockDisplay\nKEY_SETUP_CLOCK_TIMER|SetupClock\nKEY_SUB_TITLE|Subtitle\n\n<br></br>\n\n*Zoom*\n------\nKey|Description\n---|-----------\nKEY_ZOOM_MOVE|ZoomMove\nKEY_ZOOM_IN|ZoomIn\nKEY_ZOOM_OUT|ZoomOut\nKEY_ZOOM1|Zoom1\nKEY_ZOOM2|Zoom2\n\n<br></br>\n\n*Other Keys*\n------------\nKey|Description\n---|-----------\nKEY_WHEEL_LEFT|WheelLeft\nKEY_WHEEL_RIGHT|WheelRight\nKEY_ADDDEL|Add/Del\nKEY_PLUS100|Plus100\nKEY_AD|AD\nKEY_LINK|Link\nKEY_TURBO|Turbo\nKEY_CONVERGENCE|Convergence\nKEY_DEVICE_CONNECT|DeviceConnect\nKEY_11|Key11\nKEY_12|Key12\nKEY_FACTORY|KeyFactory\nKEY_3SPEED|Key3SPEED\nKEY_RSURF|KeyRSURF\nKEY_FF_|FF_\nKEY_REWIND_|REWIND_\nKEY_ANGLE|Angle\nKEY_RESERVED1|Reserved1\nKEY_PROGRAM|Program\nKEY_BOOKMARK|Bookmark\nKEY_PRINT|Print\nKEY_CLEAR|Clear\nKEY_VCHIP|VChip\nKEY_REPEAT|Repeat\nKEY_DOOR|Door\nKEY_OPEN|Open\nKEY_DMA|DMA\nKEY_MTS|MTS\nKEY_DNIe|DNIe\nKEY_SRS|SRS\nKEY_CONVERT_AUDIO_MAINSUB|ConvertAudioMain/Sub\nKEY_MDC|MDC\nKEY_SEFFECT|SoundEffect\nKEY_PERPECT_FOCUS|PERPECTFocus\nKEY_CALLER_ID|CallerID\nKEY_SCALE|Scale\nKEY_MAGIC_BRIGHT|MagicBright\nKEY_W_LINK|WLink\nKEY_DTV_LINK|DTVLink\nKEY_APP_LIST|ApplicationList\nKEY_BACK_MHP|BackMHP\nKEY_ALT_MHP|AlternateMHP\nKEY_DNSe|DNSe\nKEY_RSS|RSS\nKEY_ENTERTAINMENT|Entertainment\nKEY_ID_INPUT|IDInput\nKEY_ID_SETUP|IDSetup\nKEY_ANYVIEW|AnyView\nKEY_MS|MS\nKEY_MORE|\nKEY_MIC|\nKEY_NINE_SEPERATE|\nKEY_AUTO_FORMAT|AutoFormat\nKEY_DNET|DNET\n\n<br></br>\n\n*Auto Arc Keys*\n---------------\nKey|Description\n---|-----------\nKEY_AUTO_ARC_C_FORCE_AGING|\nKEY_AUTO_ARC_CAPTION_ENG|\nKEY_AUTO_ARC_USBJACK_INSPECT|\nKEY_AUTO_ARC_RESET|\nKEY_AUTO_ARC_LNA_ON|\nKEY_AUTO_ARC_LNA_OFF|\nKEY_AUTO_ARC_ANYNET_MODE_OK|\nKEY_AUTO_ARC_ANYNET_AUTO_START|\nKEY_AUTO_ARC_CAPTION_ON|\nKEY_AUTO_ARC_CAPTION_OFF|\nKEY_AUTO_ARC_PIP_DOUBLE|\nKEY_AUTO_ARC_PIP_LARGE|\nKEY_AUTO_ARC_PIP_LEFT_TOP|\nKEY_AUTO_ARC_PIP_RIGHT_TOP|\nKEY_AUTO_ARC_PIP_LEFT_BOTTOM|\nKEY_AUTO_ARC_PIP_CH_CHANGE|\nKEY_AUTO_ARC_AUTOCOLOR_SUCCESS|\nKEY_AUTO_ARC_AUTOCOLOR_FAIL|\nKEY_AUTO_ARC_JACK_IDENT|\nKEY_AUTO_ARC_CAPTION_KOR|\nKEY_AUTO_ARC_ANTENNA_AIR|\nKEY_AUTO_ARC_ANTENNA_CABLE|\nKEY_AUTO_ARC_ANTENNA_SATELLITE|\n\n<br></br>\n\n*Panel Keys*\n------------\nKey|Description\n---|-----------\nKEY_PANNEL_POWER|\nKEY_PANNEL_CHUP|\nKEY_PANNEL_VOLUP|\nKEY_PANNEL_VOLDOW|\nKEY_PANNEL_ENTER|\nKEY_PANNEL_MENU|\nKEY_PANNEL_SOURCE|\nKEY_PANNEL_ENTER|\n\n<br></br>\n\n*Extended Keys*\n---------------\nKey|Description\n---|-----------\nKEY_EXT1|\nKEY_EXT2|\nKEY_EXT3|\nKEY_EXT4|\nKEY_EXT5|\nKEY_EXT6|\nKEY_EXT7|\nKEY_EXT8|\nKEY_EXT11|\nKEY_EXT12|\nKEY_EXT13|\nKEY_EXT16|\nKEY_EXT17|\nKEY_EXT18|\nKEY_EXT19|\nKEY_EXT20|\nKEY_EXT21|\nKEY_EXT22|\nKEY_EXT23|\nKEY_EXT24|\nKEY_EXT25|\nKEY_EXT26|\nKEY_EXT27|\nKEY_EXT28|\nKEY_EXT29|\nKEY_EXT30|\nKEY_EXT31|\nKEY_EXT32|\nKEY_EXT33|\nKEY_EXT34|\nKEY_EXT35|\nKEY_EXT36|\nKEY_EXT37|\nKEY_EXT38|\nKEY_EXT39|\nKEY_EXT40|\nKEY_EXT41|\n\n<br></br>\nPlease note that some codes are different on the 2016+ TVs. For example,\n`KEY_POWEROFF` is `KEY_POWER` on the newer TVs.\n<br></br>\nYou have the choice of using\nthe method for sending a key\n<br></br>\n```python\nimport IPRemote\n\nconfig = IPRemote.Config(\n    name='IPRemote',\n    method='websocket',\n    host='192.168.1.100'\n)\n\nwith IPRemote.Remote(config) as remote:\n    remote.command(\"KEY_VOLUP\")\n```\n<br></br>\nor you can also use this\n<br></br>\n```python\nimport IPRemote\n\nconfig = IPRemote.Config(\n    name='IPRemote',\n    method='websocket',\n    host='192.168.1.100'\n)\n\nwith IPRemote.Remote(config) as remote:\n    remote.KEY_VOLUP()\n```\n\n<br></br>\n<br></br>\n\n***References***\n----------------\n\nI did not reverse engineer the control protocol myself and IPRemote is not\nthe only implementation. Here is the list of things that inspired IPRemote.\n\n- http://sc0ty.pl/2012/02/samsung-tv-network-remote-control-protocol/\n- https://gist.github.com/danielfaust/998441\n- https://github.com/Bntdumas/SamsungIPRemote\n- https://github.com/kyleaa/homebridge-samsungtv2016\n- https://github.com/eclair4151/SmartCrypto\n- https://github.com/kdschlosser/samsungctl\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/MikishVaughn/IPRemote",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "IPRemote",
    "package_url": "https://pypi.org/project/IPRemote/",
    "platform": "",
    "project_url": "https://pypi.org/project/IPRemote/",
    "project_urls": {
      "Homepage": "https://github.com/MikishVaughn/IPRemote"
    },
    "release_url": "https://pypi.org/project/IPRemote/0.1.8/",
    "requires_dist": [
      "websocket-client",
      "requests",
      "lxml",
      "six",
      "ifaddr",
      "pycryptodome"
    ],
    "requires_python": "",
    "summary": "",
    "version": "0.1.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8258362,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b80f2df1e0cba8ce6e8ff3ab60570807f930421c4ef2f2f769f3e9b0f649b9b",
          "md5": "25ffb9748847df019041889b6b84ebd3",
          "sha256": "07188c08d015af4c989743fd89d4233c83b51399cc3ad38dee32d392b1fc251a"
        },
        "downloads": -1,
        "filename": "IPRemote-0.1.1-py3.8.egg",
        "has_sig": false,
        "md5_digest": "25ffb9748847df019041889b6b84ebd3",
        "packagetype": "bdist_egg",
        "python_version": "3.8",
        "requires_python": null,
        "size": 173386,
        "upload_time": "2020-09-20T19:09:55",
        "upload_time_iso_8601": "2020-09-20T19:09:55.678485Z",
        "url": "https://files.pythonhosted.org/packages/2b/80/f2df1e0cba8ce6e8ff3ab60570807f930421c4ef2f2f769f3e9b0f649b9b/IPRemote-0.1.1-py3.8.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "876a5e2a720c01a157a44c874416b6808533e8ce33bd70bb987c1fd0d3836250",
          "md5": "76fda1e6e3f5b592f9b09a226554467f",
          "sha256": "4171d00b076a47c53f0b6c3b0c5724ab15aacf2865013461541c4a58fbdf8397"
        },
        "downloads": -1,
        "filename": "IPRemote-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "76fda1e6e3f5b592f9b09a226554467f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 75246,
        "upload_time": "2020-09-20T19:09:50",
        "upload_time_iso_8601": "2020-09-20T19:09:50.002777Z",
        "url": "https://files.pythonhosted.org/packages/87/6a/5e2a720c01a157a44c874416b6808533e8ce33bd70bb987c1fd0d3836250/IPRemote-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b29a03196772ed7291d1b0ee23d82721423666cfee85be039257a70a86350974",
          "md5": "dadc9f437f99114aa3f6f776b03657c7",
          "sha256": "83f825b3df91b28e2d4c5c9138e43ec69d201479dba275ed44c10fba83b7f452"
        },
        "downloads": -1,
        "filename": "IPRemote-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "dadc9f437f99114aa3f6f776b03657c7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 78375,
        "upload_time": "2020-09-20T19:09:58",
        "upload_time_iso_8601": "2020-09-20T19:09:58.090970Z",
        "url": "https://files.pythonhosted.org/packages/b2/9a/03196772ed7291d1b0ee23d82721423666cfee85be039257a70a86350974/IPRemote-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5a9d9b6550f5f644b89ce8c1a3ac23b35fa5b82a20d7b5da9b7ea32e21af77ae",
          "md5": "3db7a0ab2b9ae95e57f960df3ebc8b5d",
          "sha256": "c2a1eec437f9698505dc5cda0572a9bc80202e875bc8e2b4157ef9af7473824f"
        },
        "downloads": -1,
        "filename": "IPRemote-0.1.2-py3.8.egg",
        "has_sig": false,
        "md5_digest": "3db7a0ab2b9ae95e57f960df3ebc8b5d",
        "packagetype": "bdist_egg",
        "python_version": "3.8",
        "requires_python": null,
        "size": 173376,
        "upload_time": "2020-09-20T23:10:38",
        "upload_time_iso_8601": "2020-09-20T23:10:38.587040Z",
        "url": "https://files.pythonhosted.org/packages/5a/9d/9b6550f5f644b89ce8c1a3ac23b35fa5b82a20d7b5da9b7ea32e21af77ae/IPRemote-0.1.2-py3.8.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "34b09252825a122f839ff43f96c9c038daa50e2aa50245010259ca38bb89a44b",
          "md5": "bcae0fd3df6b859ef0f772d50eebeed4",
          "sha256": "f168cabb5715b9094a641cd6ec97dcc39af5d6668fb6d989688795d0554ee902"
        },
        "downloads": -1,
        "filename": "IPRemote-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bcae0fd3df6b859ef0f772d50eebeed4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 75237,
        "upload_time": "2020-09-20T23:10:34",
        "upload_time_iso_8601": "2020-09-20T23:10:34.389165Z",
        "url": "https://files.pythonhosted.org/packages/34/b0/9252825a122f839ff43f96c9c038daa50e2aa50245010259ca38bb89a44b/IPRemote-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c7aaebc7465ff8518709edb3db5aeace36084b944d1dc24b70f308d3618ec9c7",
          "md5": "9443715f2cedd2878956b713b026cee0",
          "sha256": "bec199712537c737169d4b58dd3f720dcf3ef3e9893b46cba3e15c6426942afe"
        },
        "downloads": -1,
        "filename": "IPRemote-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "9443715f2cedd2878956b713b026cee0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 78199,
        "upload_time": "2020-09-20T23:10:41",
        "upload_time_iso_8601": "2020-09-20T23:10:41.340892Z",
        "url": "https://files.pythonhosted.org/packages/c7/aa/ebc7465ff8518709edb3db5aeace36084b944d1dc24b70f308d3618ec9c7/IPRemote-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1961bceb62c62c766f851824c5eebd679b11d3cd896405bed971cfca7d5012d0",
          "md5": "cf47fc7a3744d91598a5501bde9c1c2d",
          "sha256": "3e1105a991f77fcd8dabf74f479cc3c91e5d73a40af81d6da6fa8d6e34650a54"
        },
        "downloads": -1,
        "filename": "IPRemote-0.1.3-py3.8.egg",
        "has_sig": false,
        "md5_digest": "cf47fc7a3744d91598a5501bde9c1c2d",
        "packagetype": "bdist_egg",
        "python_version": "3.8",
        "requires_python": null,
        "size": 173487,
        "upload_time": "2020-09-21T03:36:09",
        "upload_time_iso_8601": "2020-09-21T03:36:09.259461Z",
        "url": "https://files.pythonhosted.org/packages/19/61/bceb62c62c766f851824c5eebd679b11d3cd896405bed971cfca7d5012d0/IPRemote-0.1.3-py3.8.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c8e14a95aaec458c16e15528673b4b46e1715e81cc6a5fe466d51a755893470e",
          "md5": "84937e10cb812d9ea7430693192021cc",
          "sha256": "952e1269a36912f1672c154fc36fe7513000aaf14c30e8a21b271475ab7d67a1"
        },
        "downloads": -1,
        "filename": "IPRemote-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "84937e10cb812d9ea7430693192021cc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 75319,
        "upload_time": "2020-09-21T03:36:06",
        "upload_time_iso_8601": "2020-09-21T03:36:06.517107Z",
        "url": "https://files.pythonhosted.org/packages/c8/e1/4a95aaec458c16e15528673b4b46e1715e81cc6a5fe466d51a755893470e/IPRemote-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6815ed9d649941a1c0daffed436eac9b04afc28c4bd7d1c6b1d61ec0eb8f1c4e",
          "md5": "687d98d0ebb9f671829d990ab85368b4",
          "sha256": "62a3b4dc677b2416693d5ea9f168d0fcafa1e21757aaebc3a05806de075812c3"
        },
        "downloads": -1,
        "filename": "IPRemote-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "687d98d0ebb9f671829d990ab85368b4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 78447,
        "upload_time": "2020-09-21T03:36:11",
        "upload_time_iso_8601": "2020-09-21T03:36:11.738085Z",
        "url": "https://files.pythonhosted.org/packages/68/15/ed9d649941a1c0daffed436eac9b04afc28c4bd7d1c6b1d61ec0eb8f1c4e/IPRemote-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "77135a238448780a6de53b7a5b912ebd2e4b6d7eb4d469df905eb927854746bd",
          "md5": "734baeff1cdb59c84fa4b0f6319cb257",
          "sha256": "22acd000df5cf40a2b0d7a76ea41779ef40fdbb41fd179da026f0c4fbd7801b8"
        },
        "downloads": -1,
        "filename": "IPRemote-0.1.4-py3.8.egg",
        "has_sig": false,
        "md5_digest": "734baeff1cdb59c84fa4b0f6319cb257",
        "packagetype": "bdist_egg",
        "python_version": "3.8",
        "requires_python": null,
        "size": 173487,
        "upload_time": "2020-09-22T02:16:43",
        "upload_time_iso_8601": "2020-09-22T02:16:43.226866Z",
        "url": "https://files.pythonhosted.org/packages/77/13/5a238448780a6de53b7a5b912ebd2e4b6d7eb4d469df905eb927854746bd/IPRemote-0.1.4-py3.8.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d1052500f0794d078c734275b0140edffd5abeb95eac286c2a715f5ecc9afae5",
          "md5": "9bd542f976ed91ed7f64f885c46e059a",
          "sha256": "6091eb5fcbfd379274b72ab514f45c0aa6fa19db4c9f5a5ce341ccbe9e6a9f56"
        },
        "downloads": -1,
        "filename": "IPRemote-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9bd542f976ed91ed7f64f885c46e059a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 75320,
        "upload_time": "2020-09-22T02:16:37",
        "upload_time_iso_8601": "2020-09-22T02:16:37.717434Z",
        "url": "https://files.pythonhosted.org/packages/d1/05/2500f0794d078c734275b0140edffd5abeb95eac286c2a715f5ecc9afae5/IPRemote-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6e943ca92e408b0f8acb5abf8c03aaf02625a69eb255ae8fb4cc820f155a793b",
          "md5": "ba55ae86b0b7433d7b973356f2dc5be9",
          "sha256": "e5b3b439e0462712833fde5b9cde1d6b6eca5a1f4ba8f99a07cd03e395f6f2ba"
        },
        "downloads": -1,
        "filename": "IPRemote-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "ba55ae86b0b7433d7b973356f2dc5be9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 78203,
        "upload_time": "2020-09-22T02:16:45",
        "upload_time_iso_8601": "2020-09-22T02:16:45.564766Z",
        "url": "https://files.pythonhosted.org/packages/6e/94/3ca92e408b0f8acb5abf8c03aaf02625a69eb255ae8fb4cc820f155a793b/IPRemote-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dcb7612a3489cbf76d161fcaf74f87357cebf8c094e66a571656d443fb3e9d3c",
          "md5": "a1867836c579e61cd54ba7e7e57654db",
          "sha256": "27948cf8e52cc8e32524745755b45d171ea18c09e3f3c9d21073e5f22e979e2f"
        },
        "downloads": -1,
        "filename": "IPRemote-0.1.5-py3.8.egg",
        "has_sig": false,
        "md5_digest": "a1867836c579e61cd54ba7e7e57654db",
        "packagetype": "bdist_egg",
        "python_version": "3.8",
        "requires_python": null,
        "size": 178578,
        "upload_time": "2020-09-24T00:47:11",
        "upload_time_iso_8601": "2020-09-24T00:47:11.372554Z",
        "url": "https://files.pythonhosted.org/packages/dc/b7/612a3489cbf76d161fcaf74f87357cebf8c094e66a571656d443fb3e9d3c/IPRemote-0.1.5-py3.8.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ab22fa12a0d845326e4108cfa4cff3e4543a2c522ab8a4bacbe948adaf03bc91",
          "md5": "5e865e0b48568ecf6a062a16527a269d",
          "sha256": "1e2e35704e05b11719688d08bd9b9b19414ffb1fec2a630d4379ecc5ca5de431"
        },
        "downloads": -1,
        "filename": "IPRemote-0.1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5e865e0b48568ecf6a062a16527a269d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 77280,
        "upload_time": "2020-09-24T00:47:08",
        "upload_time_iso_8601": "2020-09-24T00:47:08.821890Z",
        "url": "https://files.pythonhosted.org/packages/ab/22/fa12a0d845326e4108cfa4cff3e4543a2c522ab8a4bacbe948adaf03bc91/IPRemote-0.1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18e3d4778f056179e0ca5ae6bc17ef395e71b0bf6e9eeaa13bae54935ff3f5a7",
          "md5": "4c19d89ef4b075b54b625f1b5cdc7e9a",
          "sha256": "80e9c611d1dc222e2be24f70357cfd70a73d56b2da126650e68c6e1a21677ff6"
        },
        "downloads": -1,
        "filename": "IPRemote-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "4c19d89ef4b075b54b625f1b5cdc7e9a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 81469,
        "upload_time": "2020-09-24T00:47:13",
        "upload_time_iso_8601": "2020-09-24T00:47:13.331297Z",
        "url": "https://files.pythonhosted.org/packages/18/e3/d4778f056179e0ca5ae6bc17ef395e71b0bf6e9eeaa13bae54935ff3f5a7/IPRemote-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f9d8338a729d253f4ae2ddb0e9bf109c935d1d4314d2d1fbfdb888351ca66191",
          "md5": "b9b31a05c3704de0236f7d8f69459962",
          "sha256": "3e9926d4d0b5302d66b0600be109c87b5632c514a3c49e8f77250818a6b4f1d9"
        },
        "downloads": -1,
        "filename": "IPRemote-0.1.6-py3.8.egg",
        "has_sig": false,
        "md5_digest": "b9b31a05c3704de0236f7d8f69459962",
        "packagetype": "bdist_egg",
        "python_version": "3.8",
        "requires_python": null,
        "size": 178575,
        "upload_time": "2020-09-24T01:19:07",
        "upload_time_iso_8601": "2020-09-24T01:19:07.210763Z",
        "url": "https://files.pythonhosted.org/packages/f9/d8/338a729d253f4ae2ddb0e9bf109c935d1d4314d2d1fbfdb888351ca66191/IPRemote-0.1.6-py3.8.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "026ef77a0b707c9a769118d1c36b34d48b10e421797412e2baccc0fe5a4cc0bb",
          "md5": "3dc3c15b3dfca15bba149bb132277e4d",
          "sha256": "fa23a4c7592db8dacae94075709c189020e2799e862fb23ad7901f817f2e3b47"
        },
        "downloads": -1,
        "filename": "IPRemote-0.1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3dc3c15b3dfca15bba149bb132277e4d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 77284,
        "upload_time": "2020-09-24T01:19:01",
        "upload_time_iso_8601": "2020-09-24T01:19:01.426507Z",
        "url": "https://files.pythonhosted.org/packages/02/6e/f77a0b707c9a769118d1c36b34d48b10e421797412e2baccc0fe5a4cc0bb/IPRemote-0.1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cec09bd0a24b2bb14a3d9e7123db272ee7d280c2aaf6e68b24183bb75771378a",
          "md5": "6dfb309500327b19a2d27736b0715c2a",
          "sha256": "ffb99ef22ad039f3d82509bdf5913d67e3a9331d95c7ff321a9a8d3e457f1887"
        },
        "downloads": -1,
        "filename": "IPRemote-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "6dfb309500327b19a2d27736b0715c2a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 81458,
        "upload_time": "2020-09-24T01:19:10",
        "upload_time_iso_8601": "2020-09-24T01:19:10.052604Z",
        "url": "https://files.pythonhosted.org/packages/ce/c0/9bd0a24b2bb14a3d9e7123db272ee7d280c2aaf6e68b24183bb75771378a/IPRemote-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b46e98ca384b0450030efc662bfbc344b1e41d67a686d9cd9d5df5251327f7d2",
          "md5": "98f3a45b68303faacf82ccf9a880fbe7",
          "sha256": "997cd2ea57f3d7d5303a191481f5c51fc61236016a44414be7cf96b52842a7dd"
        },
        "downloads": -1,
        "filename": "IPRemote-0.1.7-py3.8.egg",
        "has_sig": false,
        "md5_digest": "98f3a45b68303faacf82ccf9a880fbe7",
        "packagetype": "bdist_egg",
        "python_version": "3.8",
        "requires_python": null,
        "size": 178593,
        "upload_time": "2020-09-24T02:11:44",
        "upload_time_iso_8601": "2020-09-24T02:11:44.294788Z",
        "url": "https://files.pythonhosted.org/packages/b4/6e/98ca384b0450030efc662bfbc344b1e41d67a686d9cd9d5df5251327f7d2/IPRemote-0.1.7-py3.8.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd58b6bc7be0ea4fcf54e4b1953dec23e8a4ff34989eba5f08758ab562b9380e",
          "md5": "b900f9babb5ddf317faa332e383a01ce",
          "sha256": "e7691527c40afca5aea89696e617d591ae79cca75e5404212eb52add35b28de4"
        },
        "downloads": -1,
        "filename": "IPRemote-0.1.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b900f9babb5ddf317faa332e383a01ce",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 77288,
        "upload_time": "2020-09-24T02:11:42",
        "upload_time_iso_8601": "2020-09-24T02:11:42.161987Z",
        "url": "https://files.pythonhosted.org/packages/bd/58/b6bc7be0ea4fcf54e4b1953dec23e8a4ff34989eba5f08758ab562b9380e/IPRemote-0.1.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ff12927aeed384bf792533901c080aed7041b0818fe204d7a0834a2a93dc3f7b",
          "md5": "380516897234b411bd9202a468d272bc",
          "sha256": "27836af964f43add5d8f95ec606d7eb7fe6cbe82fc2a8254e58331834f9e6eb6"
        },
        "downloads": -1,
        "filename": "IPRemote-0.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "380516897234b411bd9202a468d272bc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 81580,
        "upload_time": "2020-09-24T02:11:46",
        "upload_time_iso_8601": "2020-09-24T02:11:46.683990Z",
        "url": "https://files.pythonhosted.org/packages/ff/12/927aeed384bf792533901c080aed7041b0818fe204d7a0834a2a93dc3f7b/IPRemote-0.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "070bf470cf5eee590f45d22932ec2ce6fd90815011c8e0fdcc8e26341276c166",
          "md5": "f8207a6969dd4c775cc0d2c844d9d37e",
          "sha256": "532e18d16b3c46a2bd2f1b61921c71fe95d1428aa9c1e1bec9246ecb220ab684"
        },
        "downloads": -1,
        "filename": "IPRemote-0.1.8-py3.8.egg",
        "has_sig": false,
        "md5_digest": "f8207a6969dd4c775cc0d2c844d9d37e",
        "packagetype": "bdist_egg",
        "python_version": "3.8",
        "requires_python": null,
        "size": 178587,
        "upload_time": "2020-09-24T02:18:26",
        "upload_time_iso_8601": "2020-09-24T02:18:26.426829Z",
        "url": "https://files.pythonhosted.org/packages/07/0b/f470cf5eee590f45d22932ec2ce6fd90815011c8e0fdcc8e26341276c166/IPRemote-0.1.8-py3.8.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f7097e54445e6469fb5c7530f1ec8a1e85b918f371d912dfe2b36acdf2d56fad",
          "md5": "80432e2ebe248791f1e620ee3b17f5ef",
          "sha256": "88863ed861f984868594adf6c98c2763928564a3b6ecc96a212f122a2cec3c42"
        },
        "downloads": -1,
        "filename": "IPRemote-0.1.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "80432e2ebe248791f1e620ee3b17f5ef",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 77284,
        "upload_time": "2020-09-24T02:18:22",
        "upload_time_iso_8601": "2020-09-24T02:18:22.136699Z",
        "url": "https://files.pythonhosted.org/packages/f7/09/7e54445e6469fb5c7530f1ec8a1e85b918f371d912dfe2b36acdf2d56fad/IPRemote-0.1.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7f48a47367fd69f364cbf262fd13bf5f3ef55509bee69f964ae72c6e469e47ad",
          "md5": "4671ea82eed83df8153ab6851f559057",
          "sha256": "f9761d31c277f2d9442f250bbd18d82ef0af569c79088fa02de81615eeb476fd"
        },
        "downloads": -1,
        "filename": "IPRemote-0.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "4671ea82eed83df8153ab6851f559057",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 81583,
        "upload_time": "2020-09-24T02:18:28",
        "upload_time_iso_8601": "2020-09-24T02:18:28.658859Z",
        "url": "https://files.pythonhosted.org/packages/7f/48/a47367fd69f364cbf262fd13bf5f3ef55509bee69f964ae72c6e469e47ad/IPRemote-0.1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "070bf470cf5eee590f45d22932ec2ce6fd90815011c8e0fdcc8e26341276c166",
        "md5": "f8207a6969dd4c775cc0d2c844d9d37e",
        "sha256": "532e18d16b3c46a2bd2f1b61921c71fe95d1428aa9c1e1bec9246ecb220ab684"
      },
      "downloads": -1,
      "filename": "IPRemote-0.1.8-py3.8.egg",
      "has_sig": false,
      "md5_digest": "f8207a6969dd4c775cc0d2c844d9d37e",
      "packagetype": "bdist_egg",
      "python_version": "3.8",
      "requires_python": null,
      "size": 178587,
      "upload_time": "2020-09-24T02:18:26",
      "upload_time_iso_8601": "2020-09-24T02:18:26.426829Z",
      "url": "https://files.pythonhosted.org/packages/07/0b/f470cf5eee590f45d22932ec2ce6fd90815011c8e0fdcc8e26341276c166/IPRemote-0.1.8-py3.8.egg",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f7097e54445e6469fb5c7530f1ec8a1e85b918f371d912dfe2b36acdf2d56fad",
        "md5": "80432e2ebe248791f1e620ee3b17f5ef",
        "sha256": "88863ed861f984868594adf6c98c2763928564a3b6ecc96a212f122a2cec3c42"
      },
      "downloads": -1,
      "filename": "IPRemote-0.1.8-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "80432e2ebe248791f1e620ee3b17f5ef",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 77284,
      "upload_time": "2020-09-24T02:18:22",
      "upload_time_iso_8601": "2020-09-24T02:18:22.136699Z",
      "url": "https://files.pythonhosted.org/packages/f7/09/7e54445e6469fb5c7530f1ec8a1e85b918f371d912dfe2b36acdf2d56fad/IPRemote-0.1.8-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7f48a47367fd69f364cbf262fd13bf5f3ef55509bee69f964ae72c6e469e47ad",
        "md5": "4671ea82eed83df8153ab6851f559057",
        "sha256": "f9761d31c277f2d9442f250bbd18d82ef0af569c79088fa02de81615eeb476fd"
      },
      "downloads": -1,
      "filename": "IPRemote-0.1.8.tar.gz",
      "has_sig": false,
      "md5_digest": "4671ea82eed83df8153ab6851f559057",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 81583,
      "upload_time": "2020-09-24T02:18:28",
      "upload_time_iso_8601": "2020-09-24T02:18:28.658859Z",
      "url": "https://files.pythonhosted.org/packages/7f/48/a47367fd69f364cbf262fd13bf5f3ef55509bee69f964ae72c6e469e47ad/IPRemote-0.1.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}