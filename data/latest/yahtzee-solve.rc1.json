{
  "info": {
    "author": "David Merrell",
    "author_email": "davidpmerrell@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# yahtzee\nA Yahtzee-solving python package and command line tool.\n\nThe algorithm is mathematically guaranteed to have the best strategy. That is, it maximizes expected score for a single game of Yahtzee.\n\nThe command line tool (`play_yahtzee`) guides you through a game and advises you on the best moves to make.\n\nThe algorithm assumes \"vanilla\" rules. It attains an average score of ~230 points.\n\n## Installation\n\nClone the repository:\n\n`$ git clone git@github.com:dpmerrell/yahtzee.git`\n\nMake sure you have python >= 3.8.\nI recommend using a virtual environment:\n\n`$ source my_py38_env`\n\nInstall via pip:\n\n```\n(my_py38_env)$ cd yahtzee\n(my_py38_env)$ pip install .\n```\n\nCongratulations! The `yahtzee` package and `play_yahtzee` command line tool are now installed.\n\n## Command line tool\nAfter installation, you can run the interactive command line tool `play_yahtzee`:\n\n```\n(my_py38_env)$ play_yahtzee\n\n###### STARTING GAME ######\n\n    Roll all of your dice!\n    Enter all of your dice here:\n    \n```\nThe prompts will lead you through a game of Yahtzee and advise you on the best moves to make.\n\n## Python package\nThe `yahtzee` python package has the following components:\n* A dynamic programming algorithm that solves the whole game (`solve_game`, `solve_turn`)\n* Precomputed results for that algorithm (`PRECOMP_STATE_VALUES`) (you can compute those results for yourself, but it will take hours)\n* An object-oriented interface for the algorithm to interact with a game of Yahtzee (`OptimalPlayer`, `InteractiveGame`)\n* A command line script based on that interface (`play_interactive_game()`)\n\nThe source code is small -- look through it for details.\n\n## Algorithmic ideas\n\nYahtzee is a [Markov Decision Process](https://en.wikipedia.org/wiki/Markov_decision_process).\nIt has convenient properties that make it straightforward to solve.\n\nThe solver uses dynamic programming to iterate through every possible state and action in a game of Yahtzee.\nFor each state, the algorithm computes the maximal expected score (subject to the game's randomness), and the corresponding action.\nThe algorithm stores these expected scores and optimal actions in a pair of tables.\nThe table of actions is called the _policy_.\n\nIt turns out Yahtzee's state space has an interesting structure that makes it economical to \n1. Store a cache of expected scores for a very small number (2^13 = 8192) of states.\n2. At play time, recompute a small portion of the entire game's policy at the beginning of each turn.\n\nThis design strikes a balance between memory and computation. A very small number of expected values are stored, but some computation is required during the game.\n\n(In a fully automated setting where speed matters, it may be better to just store the entire policy.)\n\n\n## Legal stuff\n\nThis software is distributed under an MIT license, see LICENSE.txt.\n\nThe name \"Yahtzee\" may or may not be trademarked. I don't know, Hasbro can get in touch with me if they have problems with what I'm doing\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dpmerrell/yahtzee",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "yahtzee-solve",
    "package_url": "https://pypi.org/project/yahtzee-solve/",
    "platform": "",
    "project_url": "https://pypi.org/project/yahtzee-solve/",
    "project_urls": {
      "Homepage": "https://github.com/dpmerrell/yahtzee"
    },
    "release_url": "https://pypi.org/project/yahtzee-solve/0.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "A package and command line tool for Yahtzee",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12238826,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "abc24aa1e85753b98dcd4ca582dbc1fe7722105927b819ae871ffd505187a6e4",
          "md5": "5db69f64588526f5c20686835cc54a62",
          "sha256": "7d7b5ece140d8c92d25150b0602541efd681c98d6f0b13951bfafbee0acfc8e5"
        },
        "downloads": -1,
        "filename": "yahtzee_solve-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5db69f64588526f5c20686835cc54a62",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 92657,
        "upload_time": "2021-12-07T22:33:32",
        "upload_time_iso_8601": "2021-12-07T22:33:32.705187Z",
        "url": "https://files.pythonhosted.org/packages/ab/c2/4aa1e85753b98dcd4ca582dbc1fe7722105927b819ae871ffd505187a6e4/yahtzee_solve-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "14bc4874e68d421d5f308044210a58a1905ece7b1d73a7d9667abc2dfe58ae42",
          "md5": "60c40b3b40672907d0591eaaffee9987",
          "sha256": "50d3325b865d684bff9d8a8ad06a2aa9331350fc322d40a1e6364e6ccef177d6"
        },
        "downloads": -1,
        "filename": "yahtzee_solve-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "60c40b3b40672907d0591eaaffee9987",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 100257,
        "upload_time": "2021-12-07T22:33:33",
        "upload_time_iso_8601": "2021-12-07T22:33:33.803680Z",
        "url": "https://files.pythonhosted.org/packages/14/bc/4874e68d421d5f308044210a58a1905ece7b1d73a7d9667abc2dfe58ae42/yahtzee_solve-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "abc24aa1e85753b98dcd4ca582dbc1fe7722105927b819ae871ffd505187a6e4",
        "md5": "5db69f64588526f5c20686835cc54a62",
        "sha256": "7d7b5ece140d8c92d25150b0602541efd681c98d6f0b13951bfafbee0acfc8e5"
      },
      "downloads": -1,
      "filename": "yahtzee_solve-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5db69f64588526f5c20686835cc54a62",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 92657,
      "upload_time": "2021-12-07T22:33:32",
      "upload_time_iso_8601": "2021-12-07T22:33:32.705187Z",
      "url": "https://files.pythonhosted.org/packages/ab/c2/4aa1e85753b98dcd4ca582dbc1fe7722105927b819ae871ffd505187a6e4/yahtzee_solve-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "14bc4874e68d421d5f308044210a58a1905ece7b1d73a7d9667abc2dfe58ae42",
        "md5": "60c40b3b40672907d0591eaaffee9987",
        "sha256": "50d3325b865d684bff9d8a8ad06a2aa9331350fc322d40a1e6364e6ccef177d6"
      },
      "downloads": -1,
      "filename": "yahtzee_solve-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "60c40b3b40672907d0591eaaffee9987",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 100257,
      "upload_time": "2021-12-07T22:33:33",
      "upload_time_iso_8601": "2021-12-07T22:33:33.803680Z",
      "url": "https://files.pythonhosted.org/packages/14/bc/4874e68d421d5f308044210a58a1905ece7b1d73a7d9667abc2dfe58ae42/yahtzee_solve-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}