{
  "info": {
    "author": "Jonny-exe",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Floating-point Binary Fractions: Do math in base 2!\n\n![logo](https://raw.githubusercontent.com/Jonny-exe/binary-fractions/master/binary-fractions.svg)\n\n```\n ████       ███\n░░███      ░░░\n ░███████  ████  ████████    ██████   ████████  █████ ████\n ░███░░███░░███ ░░███░░███  ░░░░░███ ░░███░░███░░███ ░███\n ░███ ░███ ░███  ░███ ░███   ███████  ░███ ░░░  ░███ ░███\n ░███ ░███ ░███  ░███ ░███  ███░░███  ░███      ░███ ░███\n ████████  █████ ████ █████░░████████ █████     ░░███████\n░░░░░░░░  ░░░░░ ░░░░ ░░░░░  ░░░░░░░░ ░░░░░       ░░░░░███\n                                                 ███ ░███\n                                                ░░██████\n                                                 ░░░░░░\n\n    ██████                                 ███      ███\n   ███░░███                               ░███     ░░░\n  ░███ ░░░  ████████   ██████    ██████  ███████   ████   ██████  ████████    █████\n ███████   ░░███░░███ ░░░░░███  ███░░███░░░███░   ░░███  ███░░███░░███░░███  ███░░\n░░░███░     ░███ ░░░   ███████ ░███ ░░░   ░███     ░███ ░███ ░███ ░███ ░███ ░░█████\n  ░███      ░███      ███░░███ ░███  ███  ░███ ███ ░███ ░███ ░███ ░███ ░███  ░░░░███\n  █████     █████    ░░████████░░██████   ░░█████  █████░░██████  ████ █████ ██████\n ░░░░░     ░░░░░      ░░░░░░░░  ░░░░░░     ░░░░░  ░░░░░  ░░░░░░  ░░░░ ░░░░░ ░░░░░░\n```\n\n[![PyPi](https://img.shields.io/pypi/v/binary-fractions)](https://pypi.org/project/binary-fractions/)\n[![Black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n[![Checked with mypy](http://www.mypy-lang.org/static/mypy_badge.svg)](http://mypy-lang.org/)\n\nAn implementation of a floating-point binary fractions class and module\nin Python. Work with binary fractions and binary floats with ease!\n\nThis module allows one to represent integers, floats and fractions as\nbinary strings.\n- e.g. the integer 3 will be represented as string '0b11'.\n- e.g. the float -3.75 will be represented as string '-0b11.11'.\n- e.g. the fraction 1/2 will be represented as string '0b0.1'\n- Exponential representation is also possible:\n'-0b0.01111e3', '-0b11.1e1' or '-0b1110e-2' all represent float -3.75.\n- two's complement representation is possible too:\n'11.11' for -1.25 in decimal, or '-0b1.01' in binary fraction.\n\nMany operations and transformations are offered.\nYou can sum, subtract, multiply, and divide long floating-point binary\nfractions. You can compute power of them, shift them left, shift them right,\netc.\n\nBasic representation of binary fractions and binary floats:\nA binary fraction is a subset of binary floats. Basically, a binary fraction\nis a binary float without an exponent (e.g. '-0b101.0101').\nLet's have a look at an example binary float value to see how it is represented.\n\n```\n     prefix '0b' to indicate \"binary\" or \"base 2\"\n     ||\n     ||   decimal point\n     ||   |\n     ||   |    exponent separator\n     ||   |    |\n     ||   |    | exponent in base 10 (not in base 2!)\n     ||   |    | ||\n    -0b101.0101e-34  <-- example floating-point binary fraction\n    |  ||| |||| |\n sign  ||| |||| exponent sign\n       ||| ||||\n       ||| fraction bits in base 2\n       |||\n       integer bits in base 2\n```\n\nIf you are curious about floating point binary fractions, have a look at:\n- https://en.wikipedia.org/wiki/Computer_number_format#Representing_fractions_in_binary\n- https://www.electronics-tutorials.ws/binary/binary-fractions.html\n- https://ryanstutorials.net/binary-tutorial/binary-floating-point.php\n- https://planetcalc.com/862/\n\nIf you are curious about Two's complement:\n- https://janmr.com/blog/2010/07/bitwise-operators-and-negative-numbers/\n- https://en.wikipedia.org/wiki/Two%27s_complement\n\n## License:\n- GPL v3 or later\n\n## Features:\n- Python 3\n- constructors for various types: int, float, Fraction, str, TwosComplement, Binary\n- supports many operators: +, -, *, /, //, %, **, <<, >>, ~, &, ...\n- supports many methods: not, abs, round, floor, ceil, ...\n- internally the value is kept as a Fraction and most operations are done\n\tin Fractions. This results in better performance and infinite precision.\n\tOnly a few limited operations such as 'and', 'or', 'xor', and 'invert'\n\tare done on strings.\n- very high precision\n- many operations are lossless, i.e. with no rounding errors or loss of precision\n- supports very long binary fractions\n- supports exponential representations\n- well documented\n    - Please read the documentation inside the source code\n  ([binary.py](https://github.com/Jonny-exe/binary-fractions/blob/master/binary_fractions/binary.py)).\n    - Or look at the pydoc-generated documentation in\n  [README.md](https://github.com/Jonny-exe/binary-fractions/blob/master/binary_fractions/README.md).\n- well tested\n    - over 1600 test cases\n\n\n## Sample usage, Example calls:\n\nPlease have a look at the short example program that uses the\n`Binary` class and module. See file\n[binary_sample.py](https://github.com/Jonny-exe/binary-fractions/blob/master/binary_fractions/binary_sample.py).\n\nThe sample source code looks like this:\n```\n#!/usr/bin/python3\n\n# Sample program using the Binary class and module.\n\n# Install with: pip3 install --upgrade binary-fractions\nif __name__ == \"__main__\":\n    from binary_fractions import TwosComplement, Binary\n    from math import ceil, floor\n\n    bf1str: str = \"-1.01\"  # -1.25\n    bf2str: str = \"10.1\"  # 2.5\n    bf3str: str = \"10.1e-3\"  # 2.5/8\n    tcstr1: str = \"10.1\"  # -1.5 in two's complement, '-0b1.1' as binary fraction\n    tcstr2: str = \"100001001000.1\"  # -1975.5 in two's complement, '-0b11110111000.1'\n    fl1: float = 2.3\n    fl2: float = -1975.5\n\n    bf1: Binary = Binary(bf1str)\n    bf2: Binary = Binary(bf2str)\n    bf3: Binary = Binary(bf3str)\n    tc1: TwosComplement = TwosComplement(tcstr1)\n    tc2: TwosComplement = TwosComplement(tcstr2)\n    tc3: TwosComplement = TwosComplement(fl2)\n\n    print(\"Sample program demonstrating binary fractions class and module:\")\n    print(f\"Binary({fl1}) = {Binary(fl1)}\")\n    print(f\"Binary({fl2}) = {Binary(fl2)}\")\n    print(f\"Binary({bf3str}) = {Binary(bf3str)}\")\n    print(f\"{bf1} = {bf1}\")\n    print(f\"{bf1} + {bf2} = {bf1+bf2}\")\n    print(f\"{bf1} - {bf2} = {bf1-bf2}\")\n    print(f\"{bf1} * {bf2} = {bf1*bf2}\")\n    print(f\"{bf1} / {bf2} = {bf1/bf2}\")\n    print(f\"{bf1} // {bf2} = {bf1//bf2}\")\n    print(f\"{bf1} % {bf2} = {bf1%bf2}\")\n    print(f\"{bf2} ** {bf1} = {bf2**bf1}\")\n    print(f\"{bf1} >> {1} = {bf1>>1}\")\n    print(f\"{bf1} << {1} = {bf1<<1}\")\n    print(f\"abs({bf1}) = {abs(bf1)}\")\n    print(f\"round({bf1}) = {round(bf1)}\")\n    print(f\"ceil({bf1}) = {ceil(bf1)} (int)\")\n    print(f\"Binary('{bf1}').ceil() = {bf1.ceil()} (Binary)\")\n    print(f\"floor({bf1}) = {floor(bf1)} (int)\")\n    print(f\"Binary('{bf1}').floor() = {bf1.floor()} (Binary)\")\n    print(f\"int({bf1}) = {int(bf1)}\")\n    print(f\"float({bf1}) = {float(bf1)}\")\n    print(f\"str({bf1}) = {str(bf1)}\")\n    print(f\"str({bf3}) = {str(bf3)}\")\n    print(f\"Fraction({bf1}) = {bf1.fraction}\")\n    print(f\"Binary({bf1}).fraction = {bf1.fraction}\")\n    print(f\"Binary({fl2}).string = {Binary(fl2).string}\")\n    print(f\"{bf1} & {bf2} = {bf1&bf2}\")\n    print(f\"{bf1} | {bf2} = {bf1|bf2}\")\n    print(f\"{bf1} ^ {bf2} = {bf1^bf2}\")\n    print(f\"~(floor({bf2})) = {~(floor(bf2))}\")\n    print(f\"type({bf1}) = {type(bf1)}\")\n    print(f\"type({tc1}) = {type(tc1)}\")\n    print(f\"Binary('{bf3}').to_no_exponent() = {bf3.to_no_exponent()}\")\n    print(f\"Binary('{bf3}').to_no_mantissa() = {bf3.to_no_mantissa()}\")\n    # scientific notation\n    print(f\"Binary('{bf3}').to_sci_exponent() = {bf3.to_sci_exponent()}\")\n    # engineering notation\n    print(f\"Binary('{bf3}').to_eng_exponent() = {bf3.to_eng_exponent()}\")\n    print(f\"Binary('{bf1}').to_twos_complement() = {bf1.to_twoscomplement()}\")\n    print(f\"Binary(TwosComplement('{tcstr1}')) = {Binary.from_twoscomplement(tc1)}\")\n    print(f\"Binary(TwosComplement('{tcstr2}')) = {Binary.from_twoscomplement(tc2)}\")\n    print(f\"Binary(TwosComplement({fl2})) = {Binary.from_twoscomplement(tc3)}\")\n    print(f\"TwosComplement({fl2}) = {TwosComplement(fl2)}\")\n    print(\"And there are more operands, more methods, more functions, ...\")\n    print(\"For more information read the documentation at:\")\n    print(\"https://raw.githubusercontent.com/Jonny-exe/binary-fractions\")\n```\n\nWhen executed with the command `python3 binary_sample.py`, it returns these\nresults:\n\n```\nSample program demonstrating binary fractions class and module:\nBinary(2.3) = 0b10.01001100110011001100110011001100110011001100110011\nBinary(-1975.5) = -0b11110110111.1\nBinary(10.1e-3) = 0b10.1e-3\n-0b1.01 = -0b1.01\n-0b1.01 + 0b10.1 = 0b1.01\n-0b1.01 - 0b10.1 = -0b11.11\n-0b1.01 * 0b10.1 = -0b11.001\n-0b1.01 / 0b10.1 = -0b0.1\n-0b1.01 // 0b10.1 = -0b1\n-0b1.01 % 0b10.1 = 0b1.01\n0b10.1 ** -0b1.01 = 0b0.010100010110111110001011100001001001101110110100110011\n-0b1.01 >> 1 = -0b0.101\n-0b1.01 << 1 = -0b10.1\nabs(-0b1.01) = 0b1.01\nround(-0b1.01) = -0b1\nceil(-0b1.01) = -1 (int)\nBinary('-0b1.01').ceil() = -0b1 (Binary)\nfloor(-0b1.01) = -2 (int)\nBinary('-0b1.01').floor() = -0b10 (Binary)\nint(-0b1.01) = -1\nfloat(-0b1.01) = -1.25\nstr(-0b1.01) = -0b1.01\nstr(0b10.1e-3) = 0b10.1e-3\nFraction(-0b1.01) = -5/4\n-0b1.01 & 0b10.1 = 0b10.1\n-0b1.01 | 0b10.1 = -0b1.01\n-0b1.01 ^ 0b10.1 = -0b11.11\n~(floor(0b10.1)) = -3\ntype(-0b1.01) = <class 'binary.Binary'>\ntype(10.1) = <class 'binary.TwosComplement'>\nBinary('0b10.1e-3').to_no_exponent() = 0b0.0101\nBinary('0b10.1e-3').to_no_mantissa() = 0b101e-4\nBinary('0b10.1e-3').to_sci_exponent() = 0b1.01e-2\nBinary('0b10.1e-3').to_eng_exponent() = 0b101000000e-10\nBinary('-0b1.01').to_twos_complement() = 10.11\nBinary(TwosComplement('10.1')) = -1.1\nBinary(TwosComplement('100001001000.1')) = -11110110111.1\nBinary(TwosComplement(-1975.5)) = -11110110111.1\nTwosComplement(-1975.5) = 100001001000.1\n```\n\n## Requirements:\n- Python 3\n- requires no `pip` packages (uses built-in `math` and `fractions` modules for\n    math operations, uses `unittest` for unit testing)\n\n## Installation:\n- see [https://pypi.org/project/binary-fractions/](https://pypi.org/project/binary-fractions/)\n- `pip install binary-fractions`\n\n## Testing, Maturity\n- run `python3 binary_sample.py` to execute a simple sample program\n- run `python3 binary_test.py` to execute all unit tests\n- `Binary` is relatively mature, more than 1600 test cases have been written and all\n    passed.\n\n## Contributions:\n- PRs are welcome and very much appreciated! :+1:\n- Please run and pass all existing 1600+ test cases in\n    [binary_test.py](https://github.com/Jonny-exe/binary-fractions/blob/master/binary_fractions/binary_test.py)\n    before issuing a PR.\n- File Format: linted/beautified with [black](https://github.com/psf/black)\n- This project uses static typing. [mypy](https://github.com/python/mypy)\n    is used for type checking.\n- Test case format: [unittest](https://docs.python.org/3/library/unittest.html)\n- Documentation format: [pydoc](https://docs.python.org/3/library/pydoc.html)\n\nEnjoy :heart: !",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Jonny-exe/binary-fractions",
    "keywords": "binary fractions python python3 floating-point high-precision base-2 floating-point-arithmetic binary-fractions twos-complement",
    "license": "GPL3+",
    "maintainer": "",
    "maintainer_email": "",
    "name": "binary-fractions",
    "package_url": "https://pypi.org/project/binary-fractions/",
    "platform": "",
    "project_url": "https://pypi.org/project/binary-fractions/",
    "project_urls": {
      "Homepage": "https://github.com/Jonny-exe/binary-fractions"
    },
    "release_url": "https://pypi.org/project/binary-fractions/1.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A Python package for floating-point binary fractions. Do math in base 2!",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10939388,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "37545ac6c381740c62acc425b4437ebacc85c77cd63b69ae2e94dcaab4519f95",
          "md5": "e09367d8bc6b6cba3a0a923156990dc4",
          "sha256": "11683a99f5a418b6a9fcdc04104d8ee87947804f7e09347195706dd9b68c33db"
        },
        "downloads": -1,
        "filename": "binary_fractions-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e09367d8bc6b6cba3a0a923156990dc4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1328,
        "upload_time": "2021-06-15T21:04:12",
        "upload_time_iso_8601": "2021-06-15T21:04:12.325091Z",
        "url": "https://files.pythonhosted.org/packages/37/54/5ac6c381740c62acc425b4437ebacc85c77cd63b69ae2e94dcaab4519f95/binary_fractions-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "380d423ebfc7f0824a920d3fa886b0ad81db2f465e8172065cc8b62d43cd8e80",
          "md5": "a0a6d960cf2d65e0d13825fe9efafd59",
          "sha256": "29d570b8949c729aec2adfd93e67d108a84cbfe3c153991abef1503591518842"
        },
        "downloads": -1,
        "filename": "binary_fractions-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a0a6d960cf2d65e0d13825fe9efafd59",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1678,
        "upload_time": "2021-06-15T21:12:58",
        "upload_time_iso_8601": "2021-06-15T21:12:58.173777Z",
        "url": "https://files.pythonhosted.org/packages/38/0d/423ebfc7f0824a920d3fa886b0ad81db2f465e8172065cc8b62d43cd8e80/binary_fractions-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "af39f2c1ad700e4e1f89f97be8f7d3a1732a3fda14e255fe67b8318953192b9a",
          "md5": "a78fbd5084db95b5d4740d32ed909333",
          "sha256": "5d96080b066675f508bf307144ad260c046329eaf09b107846c48ae08453ce2e"
        },
        "downloads": -1,
        "filename": "binary_fractions-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "a78fbd5084db95b5d4740d32ed909333",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1908,
        "upload_time": "2021-06-16T14:56:23",
        "upload_time_iso_8601": "2021-06-16T14:56:23.331746Z",
        "url": "https://files.pythonhosted.org/packages/af/39/f2c1ad700e4e1f89f97be8f7d3a1732a3fda14e255fe67b8318953192b9a/binary_fractions-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a1db4df77a98a3fff34cbe52d9ea937c16084b58c3527da893f23a6fe3ea525f",
          "md5": "32d475fe23c38b04151a33dcb140ded9",
          "sha256": "3c4bb3c0c37f7aa90022e8d3d804440bab363f3237b8ac6a11d72bc94ac24f1e"
        },
        "downloads": -1,
        "filename": "binary_fractions-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "32d475fe23c38b04151a33dcb140ded9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 44569,
        "upload_time": "2021-07-16T09:56:56",
        "upload_time_iso_8601": "2021-07-16T09:56:56.971027Z",
        "url": "https://files.pythonhosted.org/packages/a1/db/4df77a98a3fff34cbe52d9ea937c16084b58c3527da893f23a6fe3ea525f/binary_fractions-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "428deb481dc6e294b08801db23dab68f87ec687ec8778dd5ce01fe1166cc5e9f",
          "md5": "2d6885f6ff0e6b59fe0d2ee2560e29f0",
          "sha256": "b7001bb83519543a631b7b13b99535ed18ad576efea0a7a26f1c473c84142be9"
        },
        "downloads": -1,
        "filename": "binary_fractions-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2d6885f6ff0e6b59fe0d2ee2560e29f0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 44649,
        "upload_time": "2021-07-16T10:15:57",
        "upload_time_iso_8601": "2021-07-16T10:15:57.422345Z",
        "url": "https://files.pythonhosted.org/packages/42/8d/eb481dc6e294b08801db23dab68f87ec687ec8778dd5ce01fe1166cc5e9f/binary_fractions-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "013ce25f2f84aff6d350ca10563d9c077ed579412c3d43fab3ded7409617d15f",
          "md5": "60e1f3435b06af6a83467eab4781ccbd",
          "sha256": "fc5d8df8960d5ccca04cd3f5d6ced7f12d5a98c15295401f099b9e3b0ef9214f"
        },
        "downloads": -1,
        "filename": "binary_fractions-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "60e1f3435b06af6a83467eab4781ccbd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 44599,
        "upload_time": "2021-07-16T11:49:08",
        "upload_time_iso_8601": "2021-07-16T11:49:08.187451Z",
        "url": "https://files.pythonhosted.org/packages/01/3c/e25f2f84aff6d350ca10563d9c077ed579412c3d43fab3ded7409617d15f/binary_fractions-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bef522e41323dd9439ba3b518516a64c6b5bb2a5b942172c8438ccb2201eca04",
          "md5": "9704bf228185f0ad538ca9814489b70b",
          "sha256": "caf7ee981a99029bb6b9eb84923373c1f973fa7759e3e66f0cddbe51905b3908"
        },
        "downloads": -1,
        "filename": "binary_fractions-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "9704bf228185f0ad538ca9814489b70b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 44863,
        "upload_time": "2021-07-16T12:04:23",
        "upload_time_iso_8601": "2021-07-16T12:04:23.183533Z",
        "url": "https://files.pythonhosted.org/packages/be/f5/22e41323dd9439ba3b518516a64c6b5bb2a5b942172c8438ccb2201eca04/binary_fractions-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2e28b5b4d513a62d752a05820fcaf6af4b6dd984acd915d036516b5e61b3de19",
          "md5": "a27c910916f07b8f6aaf54082044ae89",
          "sha256": "785e5a0f30585b4831eef1042dbed1ccc9ab3addea2e79274382599910bf3f9e"
        },
        "downloads": -1,
        "filename": "binary_fractions-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "a27c910916f07b8f6aaf54082044ae89",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 46411,
        "upload_time": "2021-07-17T08:47:59",
        "upload_time_iso_8601": "2021-07-17T08:47:59.998777Z",
        "url": "https://files.pythonhosted.org/packages/2e/28/b5b4d513a62d752a05820fcaf6af4b6dd984acd915d036516b5e61b3de19/binary_fractions-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a9dc20d1c031e560625a7ce26f4a0d6081846d2b5beb4a4a6fb28cd6a4f2f5c8",
          "md5": "591b4302a560cd17e0f5514fe948fe8e",
          "sha256": "b8572706e6bc954a785fb865963c4c76cbd4cf92ee14d5ac800807014c2c14db"
        },
        "downloads": -1,
        "filename": "binary_fractions-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "591b4302a560cd17e0f5514fe948fe8e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 47729,
        "upload_time": "2021-07-18T13:37:31",
        "upload_time_iso_8601": "2021-07-18T13:37:31.603373Z",
        "url": "https://files.pythonhosted.org/packages/a9/dc/20d1c031e560625a7ce26f4a0d6081846d2b5beb4a4a6fb28cd6a4f2f5c8/binary_fractions-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a9dc20d1c031e560625a7ce26f4a0d6081846d2b5beb4a4a6fb28cd6a4f2f5c8",
        "md5": "591b4302a560cd17e0f5514fe948fe8e",
        "sha256": "b8572706e6bc954a785fb865963c4c76cbd4cf92ee14d5ac800807014c2c14db"
      },
      "downloads": -1,
      "filename": "binary_fractions-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "591b4302a560cd17e0f5514fe948fe8e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 47729,
      "upload_time": "2021-07-18T13:37:31",
      "upload_time_iso_8601": "2021-07-18T13:37:31.603373Z",
      "url": "https://files.pythonhosted.org/packages/a9/dc/20d1c031e560625a7ce26f4a0d6081846d2b5beb4a4a6fb28cd6a4f2f5c8/binary_fractions-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}