{
  "info": {
    "author": "Kacper Hanuszewicz, Aleksander Karbowy, Wojciech Marcinkowski, Marcin RogoÅ„",
    "author_email": "baraqda-team@outlook.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# baraqda-lib\nGenerating data for testing using real distribution of person attributes in particular society.\nFor now data is generated only for Polish person. \n\n# How to run\nInstall library from pip\n\n    pip install baraqda-lib\n\nCheck if everything is working by simple code below:\n\n    from baraqdalib import Person\n    from baraqdalib import Addresses\n    from baraqdalib import Generator\n\n    if __name__ == '__main__':\n        abba = Addresses()\n        print(abba.generate())  # print generated address\n        abba = Person()\n        abba.set()  # Generate person attributes\n        print(abba.get())  # print generated person attributes\n        abba = Generator()\n        print(abba.generate('PL', 'male_first_name', 100, sep='\\t'))  # generate one attribute from provided data\n\n# How to use\nFor generating address use:\n\n    Addresses.generate()\nLibrary does not save generated data.\n\nIf you want to generate more addresses or change country, define these parameters when calling function.\n    \n    Addresses.generate(counter = 100, lang = 'PL')\n\nFor generating person attributes use:\n\n    Person.set()\n    Person.get()\n\nIf you want to generate more person attributes put above code in loop. You can also specify nationality of person using parameter lang ('PL', 'DE').\n\nIf you don't want to generate the whole person but only one attribute use Generator class.\nExample:\n    \n    Generator.generate('PL', 'female_first_name', 100, sep='\\t'))\n\nThis code provides list of 100 female first name. \n\nList of available attributes to generate for Polish person.\n- age, \n- blood_type,\n- cities_pops,\n- eyes,\n- female_first_name,\n- female_second_name,\n- female_surname,\n- hair,\n- male_first_name,\n- male_second_name,\n- male_surname\n\n\n# Generating data\n\nGenerating data take place in class `Generator()`. Instance of this class provide function to read data, store data,\ndisplay data that was read from files and most import make a toss. Generating address and person took place in class Addresses and Person.\n\n\n## Functions in `Generator()`\n\n### Generator.draw(lang: str, data_type: str, count: int = 1, sep: str = ' ') -> List[str]\n\nDrawing a results from given file, returning list with len(list) = counter\n\n        Parameters:\n        lang (str): Two letters shortcut for country.\n        data_type (str): Name of file from which data should be generated.\n        count (int):  How many records should be generated, Default is 1.\n        sep (str): Set separators for columns in files. Default is single space.\n\n        Returns:\n        list: Returning list of generated data.\n\n### Generator.search_files(path, sep, lang) -> None\nRunning this function erase all stored data and read it again. Use with caution!\n        \n    Parameters:\n        sep (str): separator of columns in files\n        lang (str): Two letters shortcut for country\n\n    Returns: None\n\n### Generator.read_files(filepath, separator, lang, filename) -> None\nReading files into class variable self._data\n\n        Parameters:\n        filepath (str): Filepath for a file\n        separator (str): Separator of columns in files\n        lang (str): Two letters shortcut for country\n        filename (str): Filename\n\n        Returns: None\n        \"\"\"\n\n### Generator.generate(lang: str, data_type: str, counter: int = 1, sep: str = ' ') -> List[str]\nGenerating data with reading files. This is recommended way of using generator. \n\n    Parameters:\n        lang (str): two letters shortcut for country\n        data_type (str): name of file from which data should be generated\n        counter (int): default is 1. How many records should be generated\n        sep (str): default is single space. Set separators for columns in files\n\n    Returns:\n        list: Returning list of generated data.\n        \"\"\"\n\n\n### Generator.access_data(lang: str, data_type: str) -> Dict[str, list]\nAccess data which are read from files. Helpful when you\n        want to make sure that your files are in correct format\n\n    Parameters:\n        lang (str): Two letters shortcut for country\n        data_type (str): Name of file from which data should be generated\n\n    Returns:\n        Dict: Returning dictionary with loaded data in class instance\n\n\n## Generate polish person and address\n\nTo generate person and address we can use class Person and class Addresses \nThis two class generate only fake polish person.\n\nLibrary generate only person nat\n\n## Functions in `Addresses()`\n### Addresses._set_codes(self):\nGet postal codes from file postal_codes.csv and save in self._postal_code list\n\n    Parameters : None\n\n    Returns: None\n\n ### Addresses._set_cities(self):\n Get cities names  from file cities.csv and save in self._cities list\n\n    Parameters : None\n\n    Returns: None\n\n ### Addresses._set_streets(self):\n Get street names from file streets.csv and save in self._streets list\n\n    Parameters : None\n\n    Returns: None\n\n\n### Addresses.generate(self, counter: int = 1, lang: str = 'PL')\nGenerating address with city, street, street number,  and postal code\n\n    Parameters:\n        counter (int): Default is 1. You can specify how much addreses you want to generate\n        lang (str): Default is 'PL'. By this argument you can choose from wchich country addresses should be generated.\n\n    Returns:\n        Dict(Dict()): returning generated addresses in nested dictionary for easy access\n\n\n### Addresses.get_code(self, city: str)\nSearch and return postal code for a given city\n\n    Parameters:\n        city (str): Name of the city\n\n    Returns:\n        str: Returns postal code\n\n### Addresses.get_sym_city(self, city: str)\nSearching for city in cities and returning sym (identification)\n\n    Parameters:\n        city (str): name of city for searching\n\n    Returns:\n        str : return sym for searching city\n\n### Addresses.get_streets(self, city_sym: int)\nGenerate random street for given city sym (identification) that is in this city.\n\n    Parameters:\n        city_sym (int): number of city syn\n\n    Returns:\n        str: returns random street\n\n\n## Functions in `Person()`\nGenerating attributes for Polish person. For simple use set() and get() to generate one record,\nfor more make for loop with these two functions.\n \n\n### Person.toss(self)\n    Parameters: None\n\n    Returns:\n        int: return random value of 0 or 1 which determines gender\n\n### Person.set_date_of_birth(self, nr_of_years)\nCreate date of brith using generated number of years.\n\n    Parameters:\n        nr_of_years (int): number of years of generated person\n\n    Returns:\n        str: returns calculated date of birth\n\n### Person.set_pesel(self, date_of_birth, female_or_male)\nCreate polish identification number, PESEL\n\n    Parameters:\n        date_of_birth (str):\n        female_or_male (int): determines gender\n\n    Returns:\n        str: returning calculated PESEL\n\n### Person.set(self)\nGenerating parameters for a person based on\n\n    Parameters: None\n\n    Returns: None\n\n\n### Person.get(self)\nPrint generated attributes\n\n    Parameters: None\n\n    Returns: None\n        \n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "baraqda-lib",
    "package_url": "https://pypi.org/project/baraqda-lib/",
    "platform": null,
    "project_url": "https://pypi.org/project/baraqda-lib/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/baraqda-lib/0.0.18/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Generator of real fake data for testing purpose using real distribution in society",
    "version": "0.0.18",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14260770,
  "releases": {
    "0.0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "98f1c6641b107942f7a1669d992dc23587458a3ee997f51172f1b643b789fef7",
          "md5": "e556a13adb392b1f90296e04ca5899a8",
          "sha256": "b37f159a282bf4deeb490c98f9f6ecbe4b1710d983349fa13b59c0f57982023a"
        },
        "downloads": -1,
        "filename": "baraqda_lib-0.0.11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e556a13adb392b1f90296e04ca5899a8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7225755,
        "upload_time": "2022-05-09T22:21:56",
        "upload_time_iso_8601": "2022-05-09T22:21:56.099638Z",
        "url": "https://files.pythonhosted.org/packages/98/f1/c6641b107942f7a1669d992dc23587458a3ee997f51172f1b643b789fef7/baraqda_lib-0.0.11-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7646c89fef2d06045a91ab6438157b8afdc49971767492031d52882482796f7c",
          "md5": "a3c4bbafe175d19cda8e44d554a293ce",
          "sha256": "5433ba397ae2300619f94a061c5f7daaa840f7fd1acb1b729d5655fe5c003e69"
        },
        "downloads": -1,
        "filename": "baraqda-lib-0.0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "a3c4bbafe175d19cda8e44d554a293ce",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7152373,
        "upload_time": "2022-05-09T22:22:22",
        "upload_time_iso_8601": "2022-05-09T22:22:22.406971Z",
        "url": "https://files.pythonhosted.org/packages/76/46/c89fef2d06045a91ab6438157b8afdc49971767492031d52882482796f7c/baraqda-lib-0.0.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "338912190615858d26f460094ba2b976d626703384ed444eecec49044828b6f2",
          "md5": "f163da52d7acd36f34a250b8da651782",
          "sha256": "505da182939be0fd810f639e505c06fb71ca7eaa8aeb2f8c79cdf933e0e286ac"
        },
        "downloads": -1,
        "filename": "baraqda_lib-0.0.12-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f163da52d7acd36f34a250b8da651782",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7226826,
        "upload_time": "2022-05-10T10:44:18",
        "upload_time_iso_8601": "2022-05-10T10:44:18.857986Z",
        "url": "https://files.pythonhosted.org/packages/33/89/12190615858d26f460094ba2b976d626703384ed444eecec49044828b6f2/baraqda_lib-0.0.12-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4061c140265dc5dd052771db8320bb7659ea2cb989176759f74981ad4761c5a0",
          "md5": "202c4f1724d281dc0862e3ca05500eb9",
          "sha256": "8b4e5274ad717cef3bbf1e62492bb052f7ecbe5616be3d6fa7e1da97fee93a69"
        },
        "downloads": -1,
        "filename": "baraqda-lib-0.0.12.tar.gz",
        "has_sig": false,
        "md5_digest": "202c4f1724d281dc0862e3ca05500eb9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7153539,
        "upload_time": "2022-05-10T10:44:23",
        "upload_time_iso_8601": "2022-05-10T10:44:23.941729Z",
        "url": "https://files.pythonhosted.org/packages/40/61/c140265dc5dd052771db8320bb7659ea2cb989176759f74981ad4761c5a0/baraqda-lib-0.0.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba8a5ef9941624dab33bba48a2aa54b14ae95b94aca24300424d3819e0b4bedb",
          "md5": "f763bd135e03c5f331f550830d9a7979",
          "sha256": "d5659519ba21a68f126f95ab8ab17c8044a55f065444e476c6b6f75ee99a95f1"
        },
        "downloads": -1,
        "filename": "baraqda_lib-0.0.13-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f763bd135e03c5f331f550830d9a7979",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7226902,
        "upload_time": "2022-05-15T16:55:45",
        "upload_time_iso_8601": "2022-05-15T16:55:45.112952Z",
        "url": "https://files.pythonhosted.org/packages/ba/8a/5ef9941624dab33bba48a2aa54b14ae95b94aca24300424d3819e0b4bedb/baraqda_lib-0.0.13-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "57b83d51e109d8b322d919f4d262af2beb956a78224cc356036c6fdb201618f8",
          "md5": "fd0c905be5eceea392b1ae17e6172c18",
          "sha256": "3d27415c2bcc2b9ae11b0943c5d4c5c7406fb3dd40cc440dfd0de78ff6d1701f"
        },
        "downloads": -1,
        "filename": "baraqda-lib-0.0.13.tar.gz",
        "has_sig": false,
        "md5_digest": "fd0c905be5eceea392b1ae17e6172c18",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7153723,
        "upload_time": "2022-05-15T16:55:52",
        "upload_time_iso_8601": "2022-05-15T16:55:52.470347Z",
        "url": "https://files.pythonhosted.org/packages/57/b8/3d51e109d8b322d919f4d262af2beb956a78224cc356036c6fdb201618f8/baraqda-lib-0.0.13.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.14": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "907b9bfb5fa0e37bd7bad8eab492abc7cf428ef37252b3fff219de863d29c0b8",
          "md5": "b9770c0d8dddf5af05f470d387ee509a",
          "sha256": "e0f30ce3fad90f2dff91b60e9655d1cf238ca547163b9e96265bb22fbf47866e"
        },
        "downloads": -1,
        "filename": "baraqda_lib-0.0.14-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b9770c0d8dddf5af05f470d387ee509a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7227026,
        "upload_time": "2022-05-15T17:04:09",
        "upload_time_iso_8601": "2022-05-15T17:04:09.609655Z",
        "url": "https://files.pythonhosted.org/packages/90/7b/9bfb5fa0e37bd7bad8eab492abc7cf428ef37252b3fff219de863d29c0b8/baraqda_lib-0.0.14-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9d2e4cfff2186e7d45289588fef821c9bc35cd6b8045863826ef0d956db979a9",
          "md5": "07976fa0e816f974ff246f000ea16ed0",
          "sha256": "1b47ed90705803c374db6bd0f962ceadfae5ba2675689ff47cfd071fa7488aa7"
        },
        "downloads": -1,
        "filename": "baraqda-lib-0.0.14.tar.gz",
        "has_sig": false,
        "md5_digest": "07976fa0e816f974ff246f000ea16ed0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7153970,
        "upload_time": "2022-05-15T17:04:18",
        "upload_time_iso_8601": "2022-05-15T17:04:18.483760Z",
        "url": "https://files.pythonhosted.org/packages/9d/2e/4cfff2186e7d45289588fef821c9bc35cd6b8045863826ef0d956db979a9/baraqda-lib-0.0.14.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.15": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7111e1c7fb5ba6402b7c23be2cecfa815e75508ec279ccb63df476f2bff6730e",
          "md5": "9f2e515f2e7ab8e90675564803881f9e",
          "sha256": "a7e2f5f001d2c67ea21fe751ee0a9552b8d57d9bbb8a690ebaf00b08eb4371b1"
        },
        "downloads": -1,
        "filename": "baraqda_lib-0.0.15-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9f2e515f2e7ab8e90675564803881f9e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7226931,
        "upload_time": "2022-06-06T18:10:10",
        "upload_time_iso_8601": "2022-06-06T18:10:10.640951Z",
        "url": "https://files.pythonhosted.org/packages/71/11/e1c7fb5ba6402b7c23be2cecfa815e75508ec279ccb63df476f2bff6730e/baraqda_lib-0.0.15-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6c01cc9c68bf2d71f89fe1f021e0512484a8fe124d5ee3bab4bcb68e34657369",
          "md5": "69c6748a2f996438fd5397ed47773b2b",
          "sha256": "cd13ddf90c2ed18f29a6010aea1045a5897519984824419ce44f8220713fac98"
        },
        "downloads": -1,
        "filename": "baraqda-lib-0.0.15.tar.gz",
        "has_sig": false,
        "md5_digest": "69c6748a2f996438fd5397ed47773b2b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7153606,
        "upload_time": "2022-06-06T18:10:12",
        "upload_time_iso_8601": "2022-06-06T18:10:12.785505Z",
        "url": "https://files.pythonhosted.org/packages/6c/01/cc9c68bf2d71f89fe1f021e0512484a8fe124d5ee3bab4bcb68e34657369/baraqda-lib-0.0.15.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.16": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "16724aee19089069a8b40cd73850c18059b55e4f612bef2c10587c9ea41b0cd7",
          "md5": "b312cd645efdaa6a8b0cb084e61cf6bf",
          "sha256": "0cd13f01cbacad490dd1175ebec0609d017a584996f85a8efd4ada0bd087c3d0"
        },
        "downloads": -1,
        "filename": "baraqda_lib-0.0.16-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b312cd645efdaa6a8b0cb084e61cf6bf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11187312,
        "upload_time": "2022-06-19T14:03:10",
        "upload_time_iso_8601": "2022-06-19T14:03:10.268322Z",
        "url": "https://files.pythonhosted.org/packages/16/72/4aee19089069a8b40cd73850c18059b55e4f612bef2c10587c9ea41b0cd7/baraqda_lib-0.0.16-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd0017ae4929436ef78b027b4808c587f93edec0ff6022ce157c7407e2fe5168",
          "md5": "8c10d95aba88346251f75760efb8a1d2",
          "sha256": "8defba1cbe63225089b1a859ef5aba554f40aea5118889a292c7280e821f7829"
        },
        "downloads": -1,
        "filename": "baraqda-lib-0.0.16.tar.gz",
        "has_sig": false,
        "md5_digest": "8c10d95aba88346251f75760efb8a1d2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7058955,
        "upload_time": "2022-06-19T14:03:20",
        "upload_time_iso_8601": "2022-06-19T14:03:20.490507Z",
        "url": "https://files.pythonhosted.org/packages/bd/00/17ae4929436ef78b027b4808c587f93edec0ff6022ce157c7407e2fe5168/baraqda-lib-0.0.16.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.17": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "46668693a1bcca44816de8dd4a6cb02fbf774918a3ca833781547345e9e3afc1",
          "md5": "3b7ccfe097c499c30a577de139115452",
          "sha256": "867a5f034a18340a6e16b3cdd640b7bbad4e21fcb15dc851a3a15b10139909e7"
        },
        "downloads": -1,
        "filename": "baraqda_lib-0.0.17-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3b7ccfe097c499c30a577de139115452",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11187310,
        "upload_time": "2022-06-19T14:56:05",
        "upload_time_iso_8601": "2022-06-19T14:56:05.438502Z",
        "url": "https://files.pythonhosted.org/packages/46/66/8693a1bcca44816de8dd4a6cb02fbf774918a3ca833781547345e9e3afc1/baraqda_lib-0.0.17-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b6fb2886d0d78361eb752bd1e281dae254707944af3038c2d76a721d4035417",
          "md5": "796c8a08a2f607536154694351a27001",
          "sha256": "df9c034e8a39bae3ce347879b2e302c00efc454996a4f0528e3ec54d1fea8a12"
        },
        "downloads": -1,
        "filename": "baraqda-lib-0.0.17.tar.gz",
        "has_sig": false,
        "md5_digest": "796c8a08a2f607536154694351a27001",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7058977,
        "upload_time": "2022-06-19T14:56:17",
        "upload_time_iso_8601": "2022-06-19T14:56:17.216307Z",
        "url": "https://files.pythonhosted.org/packages/8b/6f/b2886d0d78361eb752bd1e281dae254707944af3038c2d76a721d4035417/baraqda-lib-0.0.17.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.18": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fcaed65b3a59bfecd304c021f1ca8fa15895d679d4fb70e86734a2ca57077eb9",
          "md5": "e05802d2bb36eed966f30e46cded510c",
          "sha256": "b8ce3ea31668e4791d80fbeefe5a1d4f6297fdb7e9005b2daa3dcc9975453be7"
        },
        "downloads": -1,
        "filename": "baraqda_lib-0.0.18-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e05802d2bb36eed966f30e46cded510c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11187230,
        "upload_time": "2022-06-27T13:50:46",
        "upload_time_iso_8601": "2022-06-27T13:50:46.880887Z",
        "url": "https://files.pythonhosted.org/packages/fc/ae/d65b3a59bfecd304c021f1ca8fa15895d679d4fb70e86734a2ca57077eb9/baraqda_lib-0.0.18-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "097857b047446bc57e6f09787defcd3c6366eceb58cd03fa32bad0f29066f505",
          "md5": "d7e96e08f16fa7fb4d5a8c268b6b4c1e",
          "sha256": "94f8460a5bbc2750a3c51842d1b07f418d4dea4cdded553abcfcda15edca4fc4"
        },
        "downloads": -1,
        "filename": "baraqda-lib-0.0.18.tar.gz",
        "has_sig": false,
        "md5_digest": "d7e96e08f16fa7fb4d5a8c268b6b4c1e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7058920,
        "upload_time": "2022-06-27T13:51:23",
        "upload_time_iso_8601": "2022-06-27T13:51:23.064946Z",
        "url": "https://files.pythonhosted.org/packages/09/78/57b047446bc57e6f09787defcd3c6366eceb58cd03fa32bad0f29066f505/baraqda-lib-0.0.18.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fcaed65b3a59bfecd304c021f1ca8fa15895d679d4fb70e86734a2ca57077eb9",
        "md5": "e05802d2bb36eed966f30e46cded510c",
        "sha256": "b8ce3ea31668e4791d80fbeefe5a1d4f6297fdb7e9005b2daa3dcc9975453be7"
      },
      "downloads": -1,
      "filename": "baraqda_lib-0.0.18-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e05802d2bb36eed966f30e46cded510c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 11187230,
      "upload_time": "2022-06-27T13:50:46",
      "upload_time_iso_8601": "2022-06-27T13:50:46.880887Z",
      "url": "https://files.pythonhosted.org/packages/fc/ae/d65b3a59bfecd304c021f1ca8fa15895d679d4fb70e86734a2ca57077eb9/baraqda_lib-0.0.18-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "097857b047446bc57e6f09787defcd3c6366eceb58cd03fa32bad0f29066f505",
        "md5": "d7e96e08f16fa7fb4d5a8c268b6b4c1e",
        "sha256": "94f8460a5bbc2750a3c51842d1b07f418d4dea4cdded553abcfcda15edca4fc4"
      },
      "downloads": -1,
      "filename": "baraqda-lib-0.0.18.tar.gz",
      "has_sig": false,
      "md5_digest": "d7e96e08f16fa7fb4d5a8c268b6b4c1e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7058920,
      "upload_time": "2022-06-27T13:51:23",
      "upload_time_iso_8601": "2022-06-27T13:51:23.064946Z",
      "url": "https://files.pythonhosted.org/packages/09/78/57b047446bc57e6f09787defcd3c6366eceb58cd03fa32bad0f29066f505/baraqda-lib-0.0.18.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}