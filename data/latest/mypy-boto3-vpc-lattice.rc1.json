{
  "info": {
    "author": "Vlad Emelianov",
    "author_email": "vlad.emelianov.nz@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.12",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Typing :: Typed"
    ],
    "description": "<a id=\"mypy-boto3-vpc-lattice\"></a>\n\n# mypy-boto3-vpc-lattice\n\n[![PyPI - mypy-boto3-vpc-lattice](https://img.shields.io/pypi/v/mypy-boto3-vpc-lattice.svg?color=blue)](https://pypi.org/project/mypy-boto3-vpc-lattice)\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/mypy-boto3-vpc-lattice.svg?color=blue)](https://pypi.org/project/mypy-boto3-vpc-lattice)\n[![Docs](https://img.shields.io/readthedocs/boto3-stubs.svg?color=blue)](https://youtype.github.io/boto3_stubs_docs/mypy_boto3_vpc_lattice/)\n[![PyPI - Downloads](https://img.shields.io/pypi/dm/mypy-boto3-vpc-lattice?color=blue)](https://pypistats.org/packages/mypy-boto3-vpc-lattice)\n\n![boto3.typed](https://github.com/youtype/mypy_boto3_builder/raw/main/logo.png)\n\nType annotations for\n[boto3.VPCLattice 1.26.103](https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/vpc-lattice.html#VPCLattice)\nservice compatible with [VSCode](https://code.visualstudio.com/),\n[PyCharm](https://www.jetbrains.com/pycharm/),\n[Emacs](https://www.gnu.org/software/emacs/),\n[Sublime Text](https://www.sublimetext.com/),\n[mypy](https://github.com/python/mypy),\n[pyright](https://github.com/microsoft/pyright) and other tools.\n\nGenerated by\n[mypy-boto3-builder 7.14.4](https://github.com/youtype/mypy_boto3_builder).\n\nMore information can be found on\n[boto3-stubs](https://pypi.org/project/boto3-stubs/) page and in\n[mypy-boto3-vpc-lattice docs](https://youtype.github.io/boto3_stubs_docs/mypy_boto3_vpc_lattice/).\n\nSee how it helps to find and fix potential bugs:\n\n![boto3-stubs demo](https://github.com/youtype/mypy_boto3_builder/raw/main/demo.gif)\n\n- [mypy-boto3-vpc-lattice](#mypy-boto3-vpc-lattice)\n  - [How to install](#how-to-install)\n    - [VSCode extension](#vscode-extension)\n    - [From PyPI with pip](#from-pypi-with-pip)\n  - [How to uninstall](#how-to-uninstall)\n  - [Usage](#usage)\n    - [VSCode](#vscode)\n    - [PyCharm](#pycharm)\n    - [Emacs](#emacs)\n    - [Sublime Text](#sublime-text)\n    - [Other IDEs](#other-ides)\n    - [mypy](#mypy)\n    - [pyright](#pyright)\n  - [Explicit type annotations](#explicit-type-annotations)\n    - [Client annotations](#client-annotations)\n    - [Paginators annotations](#paginators-annotations)\n    - [Literals](#literals)\n    - [Typed dictionaries](#typed-dictionaries)\n  - [How it works](#how-it-works)\n  - [What's new](#what's-new)\n    - [Implemented features](#implemented-features)\n    - [Latest changes](#latest-changes)\n  - [Versioning](#versioning)\n  - [Thank you](#thank-you)\n  - [Documentation](#documentation)\n  - [Support and contributing](#support-and-contributing)\n\n<a id=\"how-to-install\"></a>\n\n## How to install\n\n<a id=\"vscode-extension\"></a>\n\n### VSCode extension\n\nAdd\n[AWS Boto3](https://marketplace.visualstudio.com/items?itemName=Boto3typed.boto3-ide)\nextension to your VSCode and run `AWS boto3: Quick Start` command.\n\nClick `Modify` and select `boto3 common` and `VPCLattice`.\n\n<a id=\"from-pypi-with-pip\"></a>\n\n### From PyPI with pip\n\nInstall `boto3-stubs` for `VPCLattice` service.\n\n```bash\n# install with boto3 type annotations\npython -m pip install 'boto3-stubs[vpc-lattice]'\n\n\n# Lite version does not provide session.client/resource overloads\n# it is more RAM-friendly, but requires explicit type annotations\npython -m pip install 'boto3-stubs-lite[vpc-lattice]'\n\n\n# standalone installation\npython -m pip install mypy-boto3-vpc-lattice\n```\n\n<a id=\"how-to-uninstall\"></a>\n\n## How to uninstall\n\n```bash\npython -m pip uninstall -y mypy-boto3-vpc-lattice\n```\n\n<a id=\"usage\"></a>\n\n## Usage\n\n<a id=\"vscode\"></a>\n\n### VSCode\n\n- Install\n  [Python extension](https://marketplace.visualstudio.com/items?itemName=ms-python.python)\n- Install\n  [Pylance extension](https://marketplace.visualstudio.com/items?itemName=ms-python.vscode-pylance)\n- Set `Pylance` as your Python Language Server\n- Install `boto3-stubs[vpc-lattice]` in your environment:\n\n```bash\npython -m pip install 'boto3-stubs[vpc-lattice]'\n```\n\nBoth type checking and code completion should now work. No explicit type\nannotations required, write your `boto3` code as usual.\n\n<a id=\"pycharm\"></a>\n\n### PyCharm\n\nInstall `boto3-stubs-lite[vpc-lattice]` in your environment:\n\n```bash\npython -m pip install 'boto3-stubs-lite[vpc-lattice]'`\n```\n\nBoth type checking and code completion should now work. Explicit type\nannotations **are required**.\n\nUse `boto3-stubs` package instead for implicit type discovery.\n\n<a id=\"emacs\"></a>\n\n### Emacs\n\n- Install `boto3-stubs` with services you use in your environment:\n\n```bash\npython -m pip install 'boto3-stubs[vpc-lattice]'\n```\n\n- Install [use-package](https://github.com/jwiegley/use-package),\n  [lsp](https://github.com/emacs-lsp/lsp-mode/),\n  [company](https://github.com/company-mode/company-mode) and\n  [flycheck](https://github.com/flycheck/flycheck) packages\n- Install [lsp-pyright](https://github.com/emacs-lsp/lsp-pyright) package\n\n```elisp\n(use-package lsp-pyright\n  :ensure t\n  :hook (python-mode . (lambda ()\n                          (require 'lsp-pyright)\n                          (lsp)))  ; or lsp-deferred\n  :init (when (executable-find \"python3\")\n          (setq lsp-pyright-python-executable-cmd \"python3\"))\n  )\n```\n\n- Make sure emacs uses the environment where you have installed `boto3-stubs`\n\nType checking should now work. No explicit type annotations required, write\nyour `boto3` code as usual.\n\n<a id=\"sublime-text\"></a>\n\n### Sublime Text\n\n- Install `boto3-stubs[vpc-lattice]` with services you use in your environment:\n\n```bash\npython -m pip install 'boto3-stubs[vpc-lattice]'\n```\n\n- Install [LSP-pyright](https://github.com/sublimelsp/LSP-pyright) package\n\nType checking should now work. No explicit type annotations required, write\nyour `boto3` code as usual.\n\n<a id=\"other-ides\"></a>\n\n### Other IDEs\n\nNot tested, but as long as your IDE supports `mypy` or `pyright`, everything\nshould work.\n\n<a id=\"mypy\"></a>\n\n### mypy\n\n- Install `mypy`: `python -m pip install mypy`\n- Install `boto3-stubs[vpc-lattice]` in your environment:\n\n```bash\npython -m pip install 'boto3-stubs[vpc-lattice]'`\n```\n\nType checking should now work. No explicit type annotations required, write\nyour `boto3` code as usual.\n\n<a id=\"pyright\"></a>\n\n### pyright\n\n- Install `pyright`: `npm i -g pyright`\n- Install `boto3-stubs[vpc-lattice]` in your environment:\n\n```bash\npython -m pip install 'boto3-stubs[vpc-lattice]'\n```\n\nOptionally, you can install `boto3-stubs` to `typings` folder.\n\nType checking should now work. No explicit type annotations required, write\nyour `boto3` code as usual.\n\n<a id=\"explicit-type-annotations\"></a>\n\n## Explicit type annotations\n\n<a id=\"client-annotations\"></a>\n\n### Client annotations\n\n`VPCLatticeClient` provides annotations for `boto3.client(\"vpc-lattice\")`.\n\n```python\nfrom boto3.session import Session\n\nfrom mypy_boto3_vpc_lattice import VPCLatticeClient\n\nclient: VPCLatticeClient = Session().client(\"vpc-lattice\")\n\n# now client usage is checked by mypy and IDE should provide code completion\n```\n\n<a id=\"paginators-annotations\"></a>\n\n### Paginators annotations\n\n`mypy_boto3_vpc_lattice.paginator` module contains type annotations for all\npaginators.\n\n```python\nfrom boto3.session import Session\n\nfrom mypy_boto3_vpc_lattice import VPCLatticeClient\nfrom mypy_boto3_vpc_lattice.paginator import (\n    ListAccessLogSubscriptionsPaginator,\n    ListListenersPaginator,\n    ListRulesPaginator,\n    ListServiceNetworkServiceAssociationsPaginator,\n    ListServiceNetworkVpcAssociationsPaginator,\n    ListServiceNetworksPaginator,\n    ListServicesPaginator,\n    ListTargetGroupsPaginator,\n    ListTargetsPaginator,\n)\n\nclient: VPCLatticeClient = Session().client(\"vpc-lattice\")\n\n# Explicit type annotations are optional here\n# Types should be correctly discovered by mypy and IDEs\nlist_access_log_subscriptions_paginator: ListAccessLogSubscriptionsPaginator = client.get_paginator(\n    \"list_access_log_subscriptions\"\n)\nlist_listeners_paginator: ListListenersPaginator = client.get_paginator(\"list_listeners\")\nlist_rules_paginator: ListRulesPaginator = client.get_paginator(\"list_rules\")\nlist_service_network_service_associations_paginator: ListServiceNetworkServiceAssociationsPaginator = client.get_paginator(\n    \"list_service_network_service_associations\"\n)\nlist_service_network_vpc_associations_paginator: ListServiceNetworkVpcAssociationsPaginator = (\n    client.get_paginator(\"list_service_network_vpc_associations\")\n)\nlist_service_networks_paginator: ListServiceNetworksPaginator = client.get_paginator(\n    \"list_service_networks\"\n)\nlist_services_paginator: ListServicesPaginator = client.get_paginator(\"list_services\")\nlist_target_groups_paginator: ListTargetGroupsPaginator = client.get_paginator(\"list_target_groups\")\nlist_targets_paginator: ListTargetsPaginator = client.get_paginator(\"list_targets\")\n```\n\n<a id=\"literals\"></a>\n\n### Literals\n\n`mypy_boto3_vpc_lattice.literals` module contains literals extracted from\nshapes that can be used in user code for type checking.\n\n```python\nfrom mypy_boto3_vpc_lattice.literals import (\n    AuthPolicyStateType,\n    AuthTypeType,\n    HealthCheckProtocolVersionType,\n    IpAddressTypeType,\n    ListAccessLogSubscriptionsPaginatorName,\n    ListListenersPaginatorName,\n    ListRulesPaginatorName,\n    ListServiceNetworkServiceAssociationsPaginatorName,\n    ListServiceNetworkVpcAssociationsPaginatorName,\n    ListServiceNetworksPaginatorName,\n    ListServicesPaginatorName,\n    ListTargetGroupsPaginatorName,\n    ListTargetsPaginatorName,\n    ListenerProtocolType,\n    ServiceNetworkServiceAssociationStatusType,\n    ServiceNetworkVpcAssociationStatusType,\n    ServiceStatusType,\n    TargetGroupProtocolType,\n    TargetGroupProtocolVersionType,\n    TargetGroupStatusType,\n    TargetGroupTypeType,\n    TargetStatusType,\n    VPCLatticeServiceName,\n    ServiceName,\n    ResourceServiceName,\n    PaginatorName,\n    RegionName,\n)\n\n\ndef check_value(value: AuthPolicyStateType) -> bool:\n    ...\n```\n\n<a id=\"typed-dictionaries\"></a>\n\n### Typed dictionaries\n\n`mypy_boto3_vpc_lattice.type_defs` module contains structures and shapes\nassembled to typed dictionaries for additional type checking.\n\n```python\nfrom mypy_boto3_vpc_lattice.type_defs import (\n    AccessLogSubscriptionSummaryTypeDef,\n    ResponseMetadataTypeDef,\n    RuleUpdateFailureTypeDef,\n    CreateAccessLogSubscriptionRequestRequestTypeDef,\n    CreateServiceNetworkRequestRequestTypeDef,\n    CreateServiceNetworkServiceAssociationRequestRequestTypeDef,\n    DnsEntryTypeDef,\n    CreateServiceNetworkVpcAssociationRequestRequestTypeDef,\n    CreateServiceRequestRequestTypeDef,\n    DeleteAccessLogSubscriptionRequestRequestTypeDef,\n    DeleteAuthPolicyRequestRequestTypeDef,\n    DeleteListenerRequestRequestTypeDef,\n    DeleteResourcePolicyRequestRequestTypeDef,\n    DeleteRuleRequestRequestTypeDef,\n    DeleteServiceNetworkRequestRequestTypeDef,\n    DeleteServiceNetworkServiceAssociationRequestRequestTypeDef,\n    DeleteServiceNetworkVpcAssociationRequestRequestTypeDef,\n    DeleteServiceRequestRequestTypeDef,\n    DeleteTargetGroupRequestRequestTypeDef,\n    TargetTypeDef,\n    TargetFailureTypeDef,\n    FixedResponseActionTypeDef,\n    WeightedTargetGroupTypeDef,\n    GetAccessLogSubscriptionRequestRequestTypeDef,\n    GetAuthPolicyRequestRequestTypeDef,\n    GetListenerRequestRequestTypeDef,\n    GetResourcePolicyRequestRequestTypeDef,\n    GetRuleRequestRequestTypeDef,\n    GetServiceNetworkRequestRequestTypeDef,\n    GetServiceNetworkServiceAssociationRequestRequestTypeDef,\n    GetServiceNetworkVpcAssociationRequestRequestTypeDef,\n    GetServiceRequestRequestTypeDef,\n    GetTargetGroupRequestRequestTypeDef,\n    HeaderMatchTypeTypeDef,\n    MatcherTypeDef,\n    PaginatorConfigTypeDef,\n    ListAccessLogSubscriptionsRequestRequestTypeDef,\n    ListListenersRequestRequestTypeDef,\n    ListenerSummaryTypeDef,\n    ListRulesRequestRequestTypeDef,\n    RuleSummaryTypeDef,\n    ListServiceNetworkServiceAssociationsRequestRequestTypeDef,\n    ListServiceNetworkVpcAssociationsRequestRequestTypeDef,\n    ServiceNetworkVpcAssociationSummaryTypeDef,\n    ListServiceNetworksRequestRequestTypeDef,\n    ServiceNetworkSummaryTypeDef,\n    ListServicesRequestRequestTypeDef,\n    ListTagsForResourceRequestRequestTypeDef,\n    ListTargetGroupsRequestRequestTypeDef,\n    TargetGroupSummaryTypeDef,\n    TargetSummaryTypeDef,\n    PathMatchTypeTypeDef,\n    PutAuthPolicyRequestRequestTypeDef,\n    PutResourcePolicyRequestRequestTypeDef,\n    TagResourceRequestRequestTypeDef,\n    UntagResourceRequestRequestTypeDef,\n    UpdateAccessLogSubscriptionRequestRequestTypeDef,\n    UpdateServiceNetworkRequestRequestTypeDef,\n    UpdateServiceNetworkVpcAssociationRequestRequestTypeDef,\n    UpdateServiceRequestRequestTypeDef,\n    CreateAccessLogSubscriptionResponseTypeDef,\n    CreateServiceNetworkResponseTypeDef,\n    CreateServiceNetworkVpcAssociationResponseTypeDef,\n    DeleteServiceNetworkServiceAssociationResponseTypeDef,\n    DeleteServiceNetworkVpcAssociationResponseTypeDef,\n    DeleteServiceResponseTypeDef,\n    DeleteTargetGroupResponseTypeDef,\n    GetAccessLogSubscriptionResponseTypeDef,\n    GetAuthPolicyResponseTypeDef,\n    GetResourcePolicyResponseTypeDef,\n    GetServiceNetworkResponseTypeDef,\n    GetServiceNetworkVpcAssociationResponseTypeDef,\n    ListAccessLogSubscriptionsResponseTypeDef,\n    ListTagsForResourceResponseTypeDef,\n    PutAuthPolicyResponseTypeDef,\n    UpdateAccessLogSubscriptionResponseTypeDef,\n    UpdateServiceNetworkResponseTypeDef,\n    UpdateServiceNetworkVpcAssociationResponseTypeDef,\n    UpdateServiceResponseTypeDef,\n    CreateServiceNetworkServiceAssociationResponseTypeDef,\n    CreateServiceResponseTypeDef,\n    GetServiceNetworkServiceAssociationResponseTypeDef,\n    GetServiceResponseTypeDef,\n    ServiceNetworkServiceAssociationSummaryTypeDef,\n    ServiceSummaryTypeDef,\n    DeregisterTargetsRequestRequestTypeDef,\n    ListTargetsRequestRequestTypeDef,\n    RegisterTargetsRequestRequestTypeDef,\n    DeregisterTargetsResponseTypeDef,\n    RegisterTargetsResponseTypeDef,\n    ForwardActionTypeDef,\n    HeaderMatchTypeDef,\n    HealthCheckConfigTypeDef,\n    ListAccessLogSubscriptionsRequestListAccessLogSubscriptionsPaginateTypeDef,\n    ListListenersRequestListListenersPaginateTypeDef,\n    ListRulesRequestListRulesPaginateTypeDef,\n    ListServiceNetworkServiceAssociationsRequestListServiceNetworkServiceAssociationsPaginateTypeDef,\n    ListServiceNetworkVpcAssociationsRequestListServiceNetworkVpcAssociationsPaginateTypeDef,\n    ListServiceNetworksRequestListServiceNetworksPaginateTypeDef,\n    ListServicesRequestListServicesPaginateTypeDef,\n    ListTargetGroupsRequestListTargetGroupsPaginateTypeDef,\n    ListTargetsRequestListTargetsPaginateTypeDef,\n    ListListenersResponseTypeDef,\n    ListRulesResponseTypeDef,\n    ListServiceNetworkVpcAssociationsResponseTypeDef,\n    ListServiceNetworksResponseTypeDef,\n    ListTargetGroupsResponseTypeDef,\n    ListTargetsResponseTypeDef,\n    PathMatchTypeDef,\n    ListServiceNetworkServiceAssociationsResponseTypeDef,\n    ListServicesResponseTypeDef,\n    RuleActionTypeDef,\n    TargetGroupConfigTypeDef,\n    UpdateTargetGroupRequestRequestTypeDef,\n    HttpMatchTypeDef,\n    CreateListenerRequestRequestTypeDef,\n    CreateListenerResponseTypeDef,\n    GetListenerResponseTypeDef,\n    UpdateListenerRequestRequestTypeDef,\n    UpdateListenerResponseTypeDef,\n    CreateTargetGroupRequestRequestTypeDef,\n    CreateTargetGroupResponseTypeDef,\n    GetTargetGroupResponseTypeDef,\n    UpdateTargetGroupResponseTypeDef,\n    RuleMatchTypeDef,\n    CreateRuleRequestRequestTypeDef,\n    CreateRuleResponseTypeDef,\n    GetRuleResponseTypeDef,\n    RuleUpdateSuccessTypeDef,\n    RuleUpdateTypeDef,\n    UpdateRuleRequestRequestTypeDef,\n    UpdateRuleResponseTypeDef,\n    BatchUpdateRuleResponseTypeDef,\n    BatchUpdateRuleRequestRequestTypeDef,\n)\n\n\ndef get_structure() -> AccessLogSubscriptionSummaryTypeDef:\n    return {...}\n```\n\n<a id=\"how-it-works\"></a>\n\n## How it works\n\nFully automated\n[mypy-boto3-builder](https://github.com/youtype/mypy_boto3_builder) carefully\ngenerates type annotations for each service, patiently waiting for `boto3`\nupdates. It delivers drop-in type annotations for you and makes sure that:\n\n- All available `boto3` services are covered.\n- Each public class and method of every `boto3` service gets valid type\n  annotations extracted from `botocore` schemas.\n- Type annotations include up-to-date documentation.\n- Link to documentation is provided for every method.\n- Code is processed by [black](https://github.com/psf/black) and\n  [isort](https://github.com/PyCQA/isort) for readability.\n\n<a id=\"what's-new\"></a>\n\n## What's new\n\n<a id=\"implemented-features\"></a>\n\n### Implemented features\n\n- Fully type annotated `boto3`, `botocore`, `aiobotocore` and `aioboto3`\n  libraries\n- `mypy`, `pyright`, `VSCode`, `PyCharm`, `Sublime Text` and `Emacs`\n  compatibility\n- `Client`, `ServiceResource`, `Resource`, `Waiter` `Paginator` type\n  annotations for each service\n- Generated `TypeDefs` for each service\n- Generated `Literals` for each service\n- Auto discovery of types for `boto3.client` and `boto3.resource` calls\n- Auto discovery of types for `session.client` and `session.resource` calls\n- Auto discovery of types for `client.get_waiter` and `client.get_paginator`\n  calls\n- Auto discovery of types for `ServiceResource` and `Resource` collections\n- Auto discovery of types for `aiobotocore.Session.create_client` calls\n\n<a id=\"latest-changes\"></a>\n\n### Latest changes\n\nBuilder changelog can be found in\n[Releases](https://github.com/youtype/mypy_boto3_builder/releases).\n\n<a id=\"versioning\"></a>\n\n## Versioning\n\n`mypy-boto3-vpc-lattice` version is the same as related `boto3` version and\nfollows [PEP 440](https://www.python.org/dev/peps/pep-0440/) format.\n\n<a id=\"thank-you\"></a>\n\n## Thank you\n\n- [Allie Fitter](https://github.com/alliefitter) for\n  [boto3-type-annotations](https://pypi.org/project/boto3-type-annotations/),\n  this package is based on top of his work\n- [black](https://github.com/psf/black) developers for an awesome formatting\n  tool\n- [Timothy Edmund Crosley](https://github.com/timothycrosley) for\n  [isort](https://github.com/PyCQA/isort) and how flexible it is\n- [mypy](https://github.com/python/mypy) developers for doing all dirty work\n  for us\n- [pyright](https://github.com/microsoft/pyright) team for the new era of typed\n  Python\n\n<a id=\"documentation\"></a>\n\n## Documentation\n\nAll services type annotations can be found in\n[boto3 docs](https://youtype.github.io/boto3_stubs_docs/mypy_boto3_vpc_lattice/)\n\n<a id=\"support-and-contributing\"></a>\n\n## Support and contributing\n\nThis package is auto-generated. Please reports any bugs or request new features\nin [mypy-boto3-builder](https://github.com/youtype/mypy_boto3_builder/issues/)\nrepository.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/youtype/mypy_boto3_builder",
    "keywords": "boto3 vpc-lattice type-annotations boto3-stubs mypy typeshed autocomplete",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mypy-boto3-vpc-lattice",
    "package_url": "https://pypi.org/project/mypy-boto3-vpc-lattice/",
    "platform": null,
    "project_url": "https://pypi.org/project/mypy-boto3-vpc-lattice/",
    "project_urls": {
      "Documentation": "https://youtype.github.io/boto3_stubs_docs/mypy_boto3_vpc_lattice/",
      "Homepage": "https://github.com/youtype/mypy_boto3_builder",
      "Source": "https://github.com/youtype/mypy_boto3_builder",
      "Tracker": "https://github.com/youtype/mypy_boto3_builder/issues"
    },
    "release_url": "https://pypi.org/project/mypy-boto3-vpc-lattice/1.26.103/",
    "requires_dist": [
      "typing-extensions (>=4.1.0) ; python_version < \"3.9\""
    ],
    "requires_python": ">=3.7",
    "summary": "Type annotations for boto3.VPCLattice 1.26.103 service generated with mypy-boto3-builder 7.14.4",
    "version": "1.26.103",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17515353,
  "releases": {
    "1.26.103": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "30d09e8ca2a0a6f2f4a9d70cb67956b7bfc1e59e6155cf8931a7bb716d2a84b9",
          "md5": "0b66857166573c64aa3b66f00280a2c0",
          "sha256": "7252bc360a46c746d509aa8789f96af639ca0dc94a2dc6d092bf3673566108fe"
        },
        "downloads": -1,
        "filename": "mypy_boto3_vpc_lattice-1.26.103-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0b66857166573c64aa3b66f00280a2c0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 34505,
        "upload_time": "2023-03-30T19:49:23",
        "upload_time_iso_8601": "2023-03-30T19:49:23.607780Z",
        "url": "https://files.pythonhosted.org/packages/30/d0/9e8ca2a0a6f2f4a9d70cb67956b7bfc1e59e6155cf8931a7bb716d2a84b9/mypy_boto3_vpc_lattice-1.26.103-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "431814f57490744706f9d43bc3347d5a1ec103c91f94170ef27dcedeac604ac4",
          "md5": "f41aa9b60849354049714438b84e4eb4",
          "sha256": "9d0003cf4b1c06e6554d7f7d5d94388ba9a255f490b0f8a5b98e7aebe0fff6c0"
        },
        "downloads": -1,
        "filename": "mypy-boto3-vpc-lattice-1.26.103.tar.gz",
        "has_sig": false,
        "md5_digest": "f41aa9b60849354049714438b84e4eb4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 31113,
        "upload_time": "2023-03-30T19:49:30",
        "upload_time_iso_8601": "2023-03-30T19:49:30.187418Z",
        "url": "https://files.pythonhosted.org/packages/43/18/14f57490744706f9d43bc3347d5a1ec103c91f94170ef27dcedeac604ac4/mypy-boto3-vpc-lattice-1.26.103.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "30d09e8ca2a0a6f2f4a9d70cb67956b7bfc1e59e6155cf8931a7bb716d2a84b9",
        "md5": "0b66857166573c64aa3b66f00280a2c0",
        "sha256": "7252bc360a46c746d509aa8789f96af639ca0dc94a2dc6d092bf3673566108fe"
      },
      "downloads": -1,
      "filename": "mypy_boto3_vpc_lattice-1.26.103-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0b66857166573c64aa3b66f00280a2c0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 34505,
      "upload_time": "2023-03-30T19:49:23",
      "upload_time_iso_8601": "2023-03-30T19:49:23.607780Z",
      "url": "https://files.pythonhosted.org/packages/30/d0/9e8ca2a0a6f2f4a9d70cb67956b7bfc1e59e6155cf8931a7bb716d2a84b9/mypy_boto3_vpc_lattice-1.26.103-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "431814f57490744706f9d43bc3347d5a1ec103c91f94170ef27dcedeac604ac4",
        "md5": "f41aa9b60849354049714438b84e4eb4",
        "sha256": "9d0003cf4b1c06e6554d7f7d5d94388ba9a255f490b0f8a5b98e7aebe0fff6c0"
      },
      "downloads": -1,
      "filename": "mypy-boto3-vpc-lattice-1.26.103.tar.gz",
      "has_sig": false,
      "md5_digest": "f41aa9b60849354049714438b84e4eb4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 31113,
      "upload_time": "2023-03-30T19:49:30",
      "upload_time_iso_8601": "2023-03-30T19:49:30.187418Z",
      "url": "https://files.pythonhosted.org/packages/43/18/14f57490744706f9d43bc3347d5a1ec103c91f94170ef27dcedeac604ac4/mypy-boto3-vpc-lattice-1.26.103.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}