{
  "info": {
    "author": "Nikola Gajin",
    "author_email": "nikola@ferrislab.net",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: System :: Logging"
    ],
    "description": "# FERRIS Executor Helper\n\n This package can be used for logging and accessing service configuration, parameters, secrets and state through it's context.\n \n```python\nfrom ferris_ef import context\n```\n\n### Accessing package configuration\n\n```python\nfrom ferris_ef import context\n\ncontext.config.get('some_configuration_key')\n```\n\n### Accessing execution parameters\n\n```python\nfrom ferris_ef import context\n\ncontext.params.get('param_name')\n```\n\n### Accessing secrets\n\nWith `ferris_ef.context.secrets` you can access secrets stored on platform, project or package level.    \n\n```python\nfrom ferris_ef import context\n\ncontext.secrets.get('secret_name')\n```\n\nThis command will first lookup for secret named `secret_name` within package secrets (defined in `secrets.json` file of the package). If such key doesn't exist it will lookup for it within project secrets, and finally within platform's secrets. If secret with such name doesn't exist `None` will be returned.\n\n### Setting secrets\n\nUsing `ferris_ef.context.secrets.set(name, value, context)` method you can set secrets on project and platform level.   \n\n```python\nfrom ferris_ef import context\n\ncontext.secrets.set(name=\"platform_secret\", value={\"somekey\":\"someval\"}, context=\"platform\")\n```\n\n| Parameter | Description                                                                                 |\n|-----------|---------------------------------------------------------------------------------------------|\n| name | Name of the secret to be set. If secret with the same name already exist it will be updated |\n| value | Value of the secret that should be set |\n| context | Context of the secret. Possible values are `platform` and `project` |\n\n\n### Accessing package id and name\n\n```python\nfrom ferris_ef import context\n\ncontext.package.name\ncontext.package.id\n```\n\n### Accessing and updating package state\n\n```python\nfrom ferris_ef import context\n\ncontext.state.get()\ncontext.state.put(\"some_key\", \"some_value\")\n```\n\n### Logging\n\nAvailable levels: DEBUG, INFO (default), ERROR, WARNING, CRITICAL\n\n```python\nfrom ferris_ef import context\n\ncontext.logging.setLevel('INFO')\n\ncontext.logging.debug(\"debug msg\")\ncontext.logging.info(\"info msg\")\ncontext.logging.error(\"error msg\")\ncontext.logging.warning(\"warning msg\")\ncontext.logging.critical(\"critical msg\")\n```\n\n### Scheduling retry of service execution\n\nUsed for scheduling next execution of the service from within that service script.\n\n```python\nfrom ferris_ef import context\n\ncontext.retry(minutes=0, hours=0, days=0, cron_expression=None, parameters={}):\n```\n\n| Parameter       | Description                                                                                                                                                                                                        |\n|-----------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| minutes         | Number of minutes until next execution                                                                                                                                                                   |\n| hours           | Number of hours until next execution                                                                                                                                                                     |\n| days            | Number of days until next execution                                                                                                                                                                      |\n| cron_expression | Cron like expression when next execution should occur. It is not allowed to have `/` in the cron expression (e.g. */2 3 * * *) If `cron_expression` is set `minutes`, `hours` and `days` will be skipped |\n| parameters      | Parameters that will be passed to next execution                                                                                                                                                                   |\n\n\n```python\nfrom ferris_ef import context\n\n# retry in 3 minutes\njobid = context.scheduler.retry(minutes=3)\n\n# retry in 3 hours\njobid = context.scheduler.retry(hours=3)\n\n# retry in 3 days\njobid = context.scheduler.retry(days=3)\n\n# retry on 56th minute of next hour\njobid = context.scheduler.retry(cron_expression=\"56 * * * *\")\n```\n\n\n## Using `ferris_ef` for local development\n\nTo use `ferris_ef` for local development and testing without need to run scripts through Executor `EF_ENV=local` env variable must be set. When it is set `ferris_ef.context` will be read from local file `ef_env.json` that must be created within same directory as the script that is accessing `ferris_ef.context`.  \n`ef_env.json` must have following structure:\n\n```json\n{\n  \"params\": {\n    \"package_name\": \"some_package_name\",\n    \"package_id\": \"some_package_id\",\n    \"optional_param_1\": \"param_1_value\",\n    \"optional_param_2\": \"param_2_value\"\n  },\n  \"secrets\": {\n    \"secret_param_1\": \"secret_1_value\",\n    \"secret_param_2\": \"secret_2_value\"\n  },\n  \"config\": {\n    \"config_param_1\": \"config_1_value\",\n    \"config_param_2\": \"config_2_value\"\n  }\n}\n```\n\nNOTE: `params`, `package_name` and `package_id` are mandatory.\n\nWhen `EF_ENV=local` is set, package state is also stored and fetched from the local file `ef_package_state.json` within the same directory. If file does not exist it will be created on the fly.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://pypi.org/project/ferris-ef/",
    "keywords": "",
    "license": "Apache2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ferris-ef",
    "package_url": "https://pypi.org/project/ferris-ef/",
    "platform": "any",
    "project_url": "https://pypi.org/project/ferris-ef/",
    "project_urls": {
      "Homepage": "https://pypi.org/project/ferris-ef/"
    },
    "release_url": "https://pypi.org/project/ferris-ef/1.3.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Utilities for working with Ferris Executor Framework",
    "version": "1.3.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17228164,
  "releases": {
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1c8e14089f44d993b45ba96785aaaa392a0d6a9c65c2b95039907bee6123a57b",
          "md5": "25f0bfa16747dc464582c356a1dc3133",
          "sha256": "392f7f5158583bb22103f051451145d477367c3dc3c84659d8c12c2f18aa4360"
        },
        "downloads": -1,
        "filename": "ferris_ef-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "25f0bfa16747dc464582c356a1dc3133",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9607,
        "upload_time": "2022-04-05T13:41:32",
        "upload_time_iso_8601": "2022-04-05T13:41:32.822910Z",
        "url": "https://files.pythonhosted.org/packages/1c/8e/14089f44d993b45ba96785aaaa392a0d6a9c65c2b95039907bee6123a57b/ferris_ef-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "513b37f48f53bf8881ec3f3ddef69336d16ee35c2638d9469da514072a846e51",
          "md5": "43e8ff5e91f934cedcb891ee5d66e934",
          "sha256": "fd56c567ea9b7012df597ad54622bd0cf636c505c50a65b347e835d61bc16ec7"
        },
        "downloads": -1,
        "filename": "ferris_ef-1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "43e8ff5e91f934cedcb891ee5d66e934",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9883,
        "upload_time": "2022-04-20T08:41:46",
        "upload_time_iso_8601": "2022-04-20T08:41:46.311154Z",
        "url": "https://files.pythonhosted.org/packages/51/3b/37f48f53bf8881ec3f3ddef69336d16ee35c2638d9469da514072a846e51/ferris_ef-1.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0899eded3cc3743d3725b6fb635f94d475c550758e375d175d6deec2d7347298",
          "md5": "4ee06c0070b39e7d69ae6f9dafe965bd",
          "sha256": "314c8ca1c3734fc5795906285726a180f415d3108fe8d026797f5575853cebee"
        },
        "downloads": -1,
        "filename": "ferris_ef-1.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4ee06c0070b39e7d69ae6f9dafe965bd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10906,
        "upload_time": "2022-04-21T08:46:17",
        "upload_time_iso_8601": "2022-04-21T08:46:17.455378Z",
        "url": "https://files.pythonhosted.org/packages/08/99/eded3cc3743d3725b6fb635f94d475c550758e375d175d6deec2d7347298/ferris_ef-1.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8afe2feede6c0e18567eb21cbb7287886be10638223a4aa1c9215094014a5a8e",
          "md5": "c7a8cae0d703320b69722ff9742098d6",
          "sha256": "8c702e937339d51d0d9e4873b0d4636d593b65d3fe52f3b7d3179eae13ae24db"
        },
        "downloads": -1,
        "filename": "ferris_ef-1.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "c7a8cae0d703320b69722ff9742098d6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12773,
        "upload_time": "2022-09-27T07:51:09",
        "upload_time_iso_8601": "2022-09-27T07:51:09.638394Z",
        "url": "https://files.pythonhosted.org/packages/8a/fe/2feede6c0e18567eb21cbb7287886be10638223a4aa1c9215094014a5a8e/ferris_ef-1.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "02500663d112657c5691b7e3bd83a133c6a7fe1fd8ab985b0da50718b42e1f41",
          "md5": "72cfc7ac3a8aa5f7ff0de45317ed210c",
          "sha256": "ed3f456300770cc4a902f664f8a57cc7a3af291f2020b5ce65cb76072eb7598f"
        },
        "downloads": -1,
        "filename": "ferris_ef-1.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "72cfc7ac3a8aa5f7ff0de45317ed210c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14038,
        "upload_time": "2023-03-09T11:23:26",
        "upload_time_iso_8601": "2023-03-09T11:23:26.468142Z",
        "url": "https://files.pythonhosted.org/packages/02/50/0663d112657c5691b7e3bd83a133c6a7fe1fd8ab985b0da50718b42e1f41/ferris_ef-1.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b010d2dd02ca52246cac22071d65d3b15a8ec35d58bd10445689c86bca66ff8",
          "md5": "6f633b7b8147c05d1af0bc91416f684b",
          "sha256": "4e6dcee885e3f04943187af853d97ebb64c13bbee70f7de43f33902d14f0f531"
        },
        "downloads": -1,
        "filename": "ferris_ef-1.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6f633b7b8147c05d1af0bc91416f684b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14006,
        "upload_time": "2023-03-09T18:54:22",
        "upload_time_iso_8601": "2023-03-09T18:54:22.047297Z",
        "url": "https://files.pythonhosted.org/packages/8b/01/0d2dd02ca52246cac22071d65d3b15a8ec35d58bd10445689c86bca66ff8/ferris_ef-1.3.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8b010d2dd02ca52246cac22071d65d3b15a8ec35d58bd10445689c86bca66ff8",
        "md5": "6f633b7b8147c05d1af0bc91416f684b",
        "sha256": "4e6dcee885e3f04943187af853d97ebb64c13bbee70f7de43f33902d14f0f531"
      },
      "downloads": -1,
      "filename": "ferris_ef-1.3.2.tar.gz",
      "has_sig": false,
      "md5_digest": "6f633b7b8147c05d1af0bc91416f684b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 14006,
      "upload_time": "2023-03-09T18:54:22",
      "upload_time_iso_8601": "2023-03-09T18:54:22.047297Z",
      "url": "https://files.pythonhosted.org/packages/8b/01/0d2dd02ca52246cac22071d65d3b15a8ec35d58bd10445689c86bca66ff8/ferris_ef-1.3.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}