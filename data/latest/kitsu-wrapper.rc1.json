{
  "info": {
    "author": "Naegin",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Internet",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Utilities"
    ],
    "description": "|Disco|\n-------\n\n|Discord| |License| |Twitter|\n\nkitsu-wrapper\n=============\n\nA simple python async wrapper for the Kitsu.io API.\n\nSupports searches for Animes, Mangas and Streaming Links.\n\nInstallation\n------------\n\n**NOTE**: Python 3.6 or higher is required.\n\n.. code:: python\n\n   # Windows\n   py -3.6 -m pip install kitsu-wrapper\n\n   # Linux\n   python3.6 -m pip install kitsu-wrapper\n\nExample\n-------\n\n.. code:: python\n\n   import asyncio\n\n   import kitsu\n\n\n   client = kitsu.Client()\n\n\n   async def anime_search(query):\n       entries = await client.search('anime', query, limit=5)\n       if not entries:\n           print(f'No entries found for \"{query}\"')\n           return\n\n       for i, anime in enumerate(entries, 1):\n           print(f'\\n{i}. {anime.title}:')\n           print('---> Sub-Type:', anime.subtype)\n           print('---> Status:', anime.status)\n           print('---> Synopsis:\\n' + anime.synopsis)\n           print('---> Episodes:', anime.episode_count)\n           print('---> Age Rating:', anime.age_rating_guide)\n           print('---> Ranking:')\n           print('-> Popularity:', anime.popularity_rank)\n           print('-> Rating:', anime.rating_rank)\n\n           if anime.started_at:\n               print('---> Started At:', anime.started_at.strftime('%Y-%m-%d'))\n           if anime.ended_at:\n               print('---> Ended At:', anime.ended_at.strftime('%Y-%m-%d'))\n\n           streaming_links = await client.fetch_anime_streaming_links(anime)\n           if streaming_links:\n               print('---> Streaming Links:')\n               for link in streaming_links:\n                   print(f'-> {link.title}: {link.url}')\n\n           print('---> Kitsu Page:', anime.url)\n\n\n   async def manga_search(query):\n       entries = await client.search('manga', query, limit=5)\n       if not entries:\n           print(f'No entries found for \"{query}\"')\n           return\n\n       for i, manga in enumerate(entries, 1):\n           print(f'\\n{i}. {manga.title}:')\n           print('---> Sub-Type:', manga.subtype)\n           print('---> Status:', manga.status)\n           print('---> Volumes:', manga.volume_count)\n           print('---> Chapters:', manga.chapter_count)\n           print('---> Synopsis:\\n' + manga.synopsis)\n           print('---> Age Rating:', manga.age_rating_guide)\n           print('---> Ranking:')\n           print('-> Popularity:', manga.popularity_rank)\n           print('-> Rating:', manga.rating_rank)\n\n           if manga.started_at:\n               print('---> Started At:', manga.started_at.strftime('%Y-%m-%d'))\n           if manga.ended_at:\n               print('---> Ended At:', manga.ended_at.strftime('%Y-%m-%d'))\n\n           print('---> Kitsu Page:', manga.url)\n\n\n   loop = asyncio.get_event_loop()\n   loop.run_until_complete(anime_search(input('Insert an anime name: ')))\n   loop.run_until_complete(manga_search(input('Insert a manga name: ')))\n\n\n.. |Disco| image:: https://i.imgur.com/DWa6iY0.png\n   :target: https://is.gd/disco_github\n.. |Discord| image:: https://img.shields.io/discord/516346444463210542?label=chat&logo=discord\n   :target: https://discord.gg/qN5886E\n.. |License| image:: https://img.shields.io/github/license/DiscoMusic/kitsu-wrapper\n   :target: https://github.com/DiscoMusic/kitsu-wrapper/tree/master/LICENSE\n.. |Twitter| image:: https://img.shields.io/twitter/follow/DiscoTheBot\n   :target: https://twitter.com/DiscoTheBot\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/DiscoMusic/kitsu-wrapper",
    "keywords": "anime,manga,search,kitsu,api,wrapper",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "kitsu-wrapper",
    "package_url": "https://pypi.org/project/kitsu-wrapper/",
    "platform": "",
    "project_url": "https://pypi.org/project/kitsu-wrapper/",
    "project_urls": {
      "Homepage": "https://github.com/DiscoMusic/kitsu-wrapper"
    },
    "release_url": "https://pypi.org/project/kitsu-wrapper/1.0.0/",
    "requires_dist": [
      "aiohttp (<3.7.0,>=3.6.0)"
    ],
    "requires_python": "",
    "summary": "A simple python async wrapper for the Kitsu.io API.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7029306,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eeeaadbf2aa66f99f90828eb537a1877474536472cd27a0ee74ce5e880d1b2e9",
          "md5": "1bd999fa7c2d3cedc7bc74e3c8ebb8a9",
          "sha256": "c42127693ceb6dc880e08a441f53e463a70546150d714e1af37523e64c7537c1"
        },
        "downloads": -1,
        "filename": "kitsu_wrapper-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1bd999fa7c2d3cedc7bc74e3c8ebb8a9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5994,
        "upload_time": "2020-04-16T04:01:25",
        "upload_time_iso_8601": "2020-04-16T04:01:25.960595Z",
        "url": "https://files.pythonhosted.org/packages/ee/ea/adbf2aa66f99f90828eb537a1877474536472cd27a0ee74ce5e880d1b2e9/kitsu_wrapper-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "28326ec40a89df1c09b177ceb3f97788ee3379f75730aede6ec2a60b21ebfe8f",
          "md5": "4539f56b48dcf2bd00f15eb5121db88a",
          "sha256": "26cc95d62c6d54d232820b8ae4ef1e7dcfa19520d13921d636a4342eb715c7e3"
        },
        "downloads": -1,
        "filename": "kitsu-wrapper-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4539f56b48dcf2bd00f15eb5121db88a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4865,
        "upload_time": "2020-04-16T04:01:28",
        "upload_time_iso_8601": "2020-04-16T04:01:28.342282Z",
        "url": "https://files.pythonhosted.org/packages/28/32/6ec40a89df1c09b177ceb3f97788ee3379f75730aede6ec2a60b21ebfe8f/kitsu-wrapper-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "eeeaadbf2aa66f99f90828eb537a1877474536472cd27a0ee74ce5e880d1b2e9",
        "md5": "1bd999fa7c2d3cedc7bc74e3c8ebb8a9",
        "sha256": "c42127693ceb6dc880e08a441f53e463a70546150d714e1af37523e64c7537c1"
      },
      "downloads": -1,
      "filename": "kitsu_wrapper-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1bd999fa7c2d3cedc7bc74e3c8ebb8a9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 5994,
      "upload_time": "2020-04-16T04:01:25",
      "upload_time_iso_8601": "2020-04-16T04:01:25.960595Z",
      "url": "https://files.pythonhosted.org/packages/ee/ea/adbf2aa66f99f90828eb537a1877474536472cd27a0ee74ce5e880d1b2e9/kitsu_wrapper-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "28326ec40a89df1c09b177ceb3f97788ee3379f75730aede6ec2a60b21ebfe8f",
        "md5": "4539f56b48dcf2bd00f15eb5121db88a",
        "sha256": "26cc95d62c6d54d232820b8ae4ef1e7dcfa19520d13921d636a4342eb715c7e3"
      },
      "downloads": -1,
      "filename": "kitsu-wrapper-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "4539f56b48dcf2bd00f15eb5121db88a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4865,
      "upload_time": "2020-04-16T04:01:28",
      "upload_time_iso_8601": "2020-04-16T04:01:28.342282Z",
      "url": "https://files.pythonhosted.org/packages/28/32/6ec40a89df1c09b177ceb3f97788ee3379f75730aede6ec2a60b21ebfe8f/kitsu-wrapper-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}