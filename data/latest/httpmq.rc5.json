{
  "info": {
    "author": "Rhine Cliff",
    "author_email": "rhinecliff@protonmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# HTTP MQ - Python Client\n\nPython client for [httpmq](https://github.com/alwitt/httpmq)\n\n[![MIT][License-Image]][License-Url] ![CICD workflow](https://github.com/alwitt/httpmq-python/actions/workflows/cicd.yaml/badge.svg) [![PyPI version](https://badge.fury.io/py/httpmq.svg)](https://badge.fury.io/py/httpmq)\n\n[License-Url]: https://mit-license.org/\n[License-Image]: https://img.shields.io/badge/License-MIT-blue.svg\n\n# Table of Content\n\n- [1. Introduction](#1-introduction)\n- [2. Installation](#2-installation)\n- [3. Examples](#3-examples)\n- [4. Local Development](#4-local-development)\n\n---\n\n# [1. Introduction](#table-of-content)\n\nThis is a [async](https://docs.python.org/3/library/asyncio.html) Python client SDK for [httpmq](https://github.com/alwitt/httpmq) built around [aiohttp](https://github.com/aio-libs/aiohttp), and uses the auto-generated data models of [httpmq](https://github.com/alwitt/httpmq)'s OpenAPI specification. The auto-generated data models are placed under `httpmq/models`. The module provides client objects for interacting with the management and data plane API of [httpmq](https://github.com/alwitt/httpmq).\n\n```python\nimport asyncio\nimport logging\nimport httpmq\n\n\nasync def async_main(log: logging.Logger):\n    try:\n        # Create management plane client\n        mgmt_client = httpmq.ManagementClient(\n            api_client=httpmq.APIClient(base_url=\"http://127.0.0.1:4100\")\n        )\n        # Create data plane client\n        data_client = httpmq.DataClient(\n            api_client=httpmq.APIClient(base_url=\"http://127.0.0.1:4101\")\n        )\n\n        # Check whether management plane is ready\n        await mgmt_client.ready(context=httpmq.RequestContext())\n        log.info(\"Management API ready\")\n\n        # Check whether data plane is ready\n        await data_client.ready(context=httpmq.RequestContext())\n        log.info(\"Data plane API ready\")\n    finally:\n        # Always disconnect\n        await mgmt_client.disconnect()\n        await data_client.disconnect()\n```\n\n# [2. Installation](#table-of-content)\n\n```shell\n$ pip3 install httpmq\n```\n\n# [3. Examples](#table-of-content)\n\n- [Hello World](examples/hello_world.md): basic example showing how to define the client.\n\n- [Manage Streams](examples/manage_streams.md): managing streams through the `management` API.\n\n- [Manage Consumers](examples/manage_consumer.md): managing consumers through the `management` API.\n\n- [Sending and Receiving Messages](examples/sending_messages.md): sending and receiving messages.\n\n# [4. Local Development](#table-of-content)\n\n> **NOTE:** Though the described procedures supports local development, the same `docker-compose.yaml` can be used to create a [httpmq](https://github.com/alwitt/httpmq) test environment independent of this project.\n\nThis project uses [Poetry](https://python-poetry.org/) as the dependency management framework.\n\n```shell\n$ poetry check\nAll set!\n```\n\nA helper Makefile is also included to automate the common development tasks. The available make targets are:\n\n```shell\n$ make help\nlint                           Run python lint\nbuild                          Build module\ntest                           Run unit-tests\none-test                       Run specific unit-tests\ninstall                        Install module\nuninstall                      Uninstall module\nreinstall                      Reinstall module\ncli                            Run venv python CLI\ncompose                        Bring up development environment via docker-compose\nclean                          Clean up the python build artifacts\nhelp                           Display this help screen\n```\n\nFirst, prepare the development environment:\n\n```\nmake\n```\n\nThis will call `Poetry` to setup the virtual environment, install dependencies, and build the module.\n\nNow, start the development environment:\n\n```shell\n$ make compose\ndocker-compose -f docker-compose.yaml down --volume\nRemoving network httpmq-python_httpmq-py-test\nWARNING: Network httpmq-python_httpmq-py-test not found.\ndocker-compose -f docker-compose.yaml up -d\nCreating network \"httpmq-python_httpmq-py-test\" with driver \"bridge\"\nCreating httpmq-python_httpmq-data_1 ... done\nCreating httpmq-python_httpmq-mgmt_1 ... done\nCreating httpmq-python_dev-nats_1    ... done\n```\n\nVerify the code passes unit-tests:\n\n```shell\n$ make test\npoetry run pytest --verbose --junitxml=test-reports/test.xml test/\n=============================================== test session starts ===============================================\nplatform linux -- Python 3.10.6, pytest-7.1.2, pluggy-1.0.0 -- /home/harry/Git/HTTP_Message_Broker/httpmq-python/.venv/bin/python\ncachedir: .pytest_cache\nrootdir: /home/harry/Git/HTTP_Message_Broker/httpmq-python\ncollected 11 items\n\ntest/test_client.py::TestAPIClient::test_delete PASSED                                                      [  9%]\ntest/test_client.py::TestAPIClient::test_get PASSED                                                         [ 18%]\ntest/test_client.py::TestAPIClient::test_post PASSED                                                        [ 27%]\ntest/test_client.py::TestAPIClient::test_put PASSED                                                         [ 36%]\ntest/test_client.py::TestAPIClient::test_sse_get PASSED                                                     [ 45%]\ntest/test_dataplane.py::TestDataplane::test_basic_sanity PASSED                                             [ 54%]\ntest/test_dataplane.py::TestDataplane::test_message_splitter PASSED                                         [ 63%]\ntest/test_dataplane.py::TestDataplane::test_push_subscribe PASSED                                           [ 72%]\ntest/test_management.py::TestManagement::test_basic_sanity PASSED                                           [ 81%]\ntest/test_management.py::TestManagement::test_consumer_management PASSED                                    [ 90%]\ntest/test_management.py::TestManagement::test_stream_management PASSED                                      [100%]\n\n----------- generated xml file: /home/harry/Git/HTTP_Message_Broker/httpmq-python/test-reports/test.xml -----------\n=============================================== 11 passed in 2.62s ================================================\n```\n\nA demo application, `scripts/httpmq_test_cli.py`, is also provided. It exercises all the functionalities of the [httpmq](https://github.com/alwitt/httpmq) APIs. These functionalities are separated into subcommands, and the associated usage message explains how to call each functionality.\n\n> **IMPORTANT:** Before starting, perform\n>\n> ```shell\n> $ make install\n> $ poetry shell\n> ```\n>\n> This will install the locally built SDK package into the local virtual environment, and start a new shell within that virtual environment.\n\n```shell\n$ ./scripts/httpmq_test_cli.py --help\nUsage: httpmq_test_cli.py [OPTIONS] COMMAND [ARGS]...\n\n  Demo application for trying out functionalities of httpmq\n\nOptions:\n  --custom-ca-file, --ca TEXT  Custom CA file to use with HTTP client  [env\n                               var: HTTP_CUSTOM_CA_FILE]\n  --access-token, --at TEXT    Bearer access token used for authentication\n                               [env var: HTTP_BEARER_ACCESS_TOKEN]\n  --request-id, --rid TEXT     Request ID to use with this call  [default:\n                               6403e98e-d29a-478b-99e4-49ff07fb210f]\n  -v, --verbose                Verbose logging\n  --help                       Show this message and exit.\n\nCommands:\n  data    Operate the httpmq dataplane API\n  manage  Operate the httpmq management API\n```\n\n```shell\n$ ./scripts/httpmq_test_cli.py manage --help\nUsage: httpmq_test_cli.py manage [OPTIONS] COMMAND [ARGS]...\n\n  Operate the httpmq management API\n\nOptions:\n  -s, --management-server-url TEXT\n                                  Management server URL  [env var:\n                                  MANAGEMENT_SERVER_URL; default:\n                                  http://127.0.0.1:4100]\n  --help                          Show this message and exit.\n\nCommands:\n  consumer  Manages consumers through httpmq management API\n  ready     Verify the management API is ready\n  stream    Manages streams through httpmq management API\n```\n\n```shell\n$ ./scripts/httpmq_test_cli.py manage ready --help\nUsage: httpmq_test_cli.py manage ready [OPTIONS]\n\n  Verify the management API is ready\n\nOptions:\n  --help  Show this message and exit.\n```\n\n```shell\n$ ./scripts/httpmq_test_cli.py manage stream --help\nUsage: httpmq_test_cli.py manage stream [OPTIONS] COMMAND [ARGS]...\n\n  Manages streams through httpmq management API\n\nOptions:\n  --help  Show this message and exit.\n\nCommands:\n  change-retention  Changed a stream's message retention policy.\n  change-subject    Changed the target subjects of a stream through management API\n  create            Define a new stream through httpmq management API\n  delete            Delete one stream through management API\n  get               Read information regarding one stream through management API\n  list-all          List all streams through httpmq management API\n```\n\n```shell\n$ ./scripts/httpmq_test_cli.py manage consumer --help\nUsage: httpmq_test_cli.py manage consumer [OPTIONS] COMMAND [ARGS]...\n\n  Manages consumers through httpmq management API\n\nOptions:\n  -s, --target-stream TEXT  Target stream to operate against  [env var:\n                            TARGET_STREAM; required]\n  --help                    Show this message and exit.\n\nCommands:\n  create    Define a new consumer through httpmq management API\n  delete    Delete a consumer through httpmq management API\n  get       Read information regarding one consumer through management API\n  list-all  List all consumers of a stream through httpmq management API\n```\n\n```shell\n$ ./scripts/httpmq_test_cli.py data --help\nUsage: httpmq_test_cli.py data [OPTIONS] COMMAND [ARGS]...\n\n  Operate the httpmq dataplane API\n\nOptions:\n  -s, --dataplane-server-url TEXT\n                                  Dataplane server URL  [env var:\n                                  DATAPLANE_SERVER_URL; default:\n                                  http://127.0.0.1:4101]\n  --help                          Show this message and exit.\n\nCommands:\n  pub    Publish messages on a subject through httpmq dataplane API\n  ready  Verify the dataplane API is ready\n  sub    Subscribe for messages as a consumer on a stream through httpmq dataplane API\n```\n\n```shell\n$ ./scripts/httpmq_test_cli.py data ready --help\nUsage: httpmq_test_cli.py data ready [OPTIONS]\n\n  Verify the dataplane API is ready\n\nOptions:\n  --help  Show this message and exit.\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/alwitt/httpmq-python",
    "keywords": "httpmq",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "httpmq",
    "package_url": "https://pypi.org/project/httpmq/",
    "platform": null,
    "project_url": "https://pypi.org/project/httpmq/",
    "project_urls": {
      "Bug Tracker": "https://github.com/alwitt/httpmq-python/issues",
      "Homepage": "https://github.com/alwitt/httpmq-python",
      "Repository": "https://github.com/alwitt/httpmq-python"
    },
    "release_url": "https://pypi.org/project/httpmq/0.1.0/",
    "requires_dist": [
      "aiohttp (>=3.8)",
      "asyncio (>=3.4)",
      "python-dateutil (>=2.8)"
    ],
    "requires_python": ">=3.7.2,<4.0",
    "summary": "HTTP MQ Python client module",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14830658,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a2d80386e0129c954e5f8f7bac2d4834cd19e45578990c6b41d9e98ee0689f64",
          "md5": "9554645ef0b2ef7ab47e49d4e9dacb99",
          "sha256": "1498200651cc408abaff3e22c12f44385cef286b3add5d8702207e6022699c8e"
        },
        "downloads": -1,
        "filename": "httpmq-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9554645ef0b2ef7ab47e49d4e9dacb99",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.2,<4.0",
        "size": 43581,
        "upload_time": "2022-08-22T00:29:13",
        "upload_time_iso_8601": "2022-08-22T00:29:13.387440Z",
        "url": "https://files.pythonhosted.org/packages/a2/d8/0386e0129c954e5f8f7bac2d4834cd19e45578990c6b41d9e98ee0689f64/httpmq-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "928d4d68906be63caa66ff9ad217f6cb14585517c47bf445e57fe8f5fd3a55ee",
          "md5": "6893b8fb67ad010b12ea4b2ff7c00c4a",
          "sha256": "9e061b99f7ffeca86ec5729ef2099ba090e4b376e6f50ee88c4a56b0eab64657"
        },
        "downloads": -1,
        "filename": "httpmq-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6893b8fb67ad010b12ea4b2ff7c00c4a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.2,<4.0",
        "size": 29718,
        "upload_time": "2022-08-22T00:29:15",
        "upload_time_iso_8601": "2022-08-22T00:29:15.476402Z",
        "url": "https://files.pythonhosted.org/packages/92/8d/4d68906be63caa66ff9ad217f6cb14585517c47bf445e57fe8f5fd3a55ee/httpmq-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0rc2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "27af57686c28bf1ca2cd58ac7b273bb6e614b2b69c1900f936b67bc6df4c47dd",
          "md5": "5d0f778b34ded29f3b5879d873cfd158",
          "sha256": "33026198c71e0815fd32e728591255a98456f964b2836a3ffe736bb5244ec714"
        },
        "downloads": -1,
        "filename": "httpmq-0.1.0rc2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5d0f778b34ded29f3b5879d873cfd158",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.2,<4.0",
        "size": 43433,
        "upload_time": "2022-08-21T19:41:58",
        "upload_time_iso_8601": "2022-08-21T19:41:58.068749Z",
        "url": "https://files.pythonhosted.org/packages/27/af/57686c28bf1ca2cd58ac7b273bb6e614b2b69c1900f936b67bc6df4c47dd/httpmq-0.1.0rc2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a9a5e9bd456c7ee08d18e485b218bef21e1717e80de9b32e011b6aef6b91efdf",
          "md5": "2a19242bb45a1dbdd6181888eca2ffec",
          "sha256": "ab5a659d2f251e722f0d6990e8a2f173a29b37b323db86f5c533a59ee61d8bbe"
        },
        "downloads": -1,
        "filename": "httpmq-0.1.0rc2.tar.gz",
        "has_sig": false,
        "md5_digest": "2a19242bb45a1dbdd6181888eca2ffec",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.2,<4.0",
        "size": 29701,
        "upload_time": "2022-08-21T19:42:00",
        "upload_time_iso_8601": "2022-08-21T19:42:00.071616Z",
        "url": "https://files.pythonhosted.org/packages/a9/a5/e9bd456c7ee08d18e485b218bef21e1717e80de9b32e011b6aef6b91efdf/httpmq-0.1.0rc2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0rc3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e7cc156f480e2b5dcfa0893edbde34d81a1d734e0f5a1422079229bec903c50f",
          "md5": "655541a0f3c677cae4cca51a5da4b227",
          "sha256": "fed881c85b7935006f04b39eeb7f4306d4397fc09ca27b76f1b97895554aaa68"
        },
        "downloads": -1,
        "filename": "httpmq-0.1.0rc3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "655541a0f3c677cae4cca51a5da4b227",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.2,<4.0",
        "size": 43479,
        "upload_time": "2022-08-21T19:47:31",
        "upload_time_iso_8601": "2022-08-21T19:47:31.329296Z",
        "url": "https://files.pythonhosted.org/packages/e7/cc/156f480e2b5dcfa0893edbde34d81a1d734e0f5a1422079229bec903c50f/httpmq-0.1.0rc3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b3a7c85706508af9d3e30151b5f9aaba528930b08f4cc808bb6b866756c5f339",
          "md5": "273c3048428d814028897f20f4b3b11a",
          "sha256": "d539a6906918cd8dd0205f9aaf34e2bda7970888bd4293d825ed7943f3c0732a"
        },
        "downloads": -1,
        "filename": "httpmq-0.1.0rc3.tar.gz",
        "has_sig": false,
        "md5_digest": "273c3048428d814028897f20f4b3b11a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.2,<4.0",
        "size": 29760,
        "upload_time": "2022-08-21T19:47:33",
        "upload_time_iso_8601": "2022-08-21T19:47:33.089241Z",
        "url": "https://files.pythonhosted.org/packages/b3/a7/c85706508af9d3e30151b5f9aaba528930b08f4cc808bb6b866756c5f339/httpmq-0.1.0rc3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0rc4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bea9eda077e1efb4d46b70690a8f567f13f3a30016ff823c65734d451d9a4cb2",
          "md5": "29a2a027cf60506e483227ae18c555f3",
          "sha256": "12f32fe53ee33371c9b5e33af26f33bd603fde24479670b667fcc4120fb36a2a"
        },
        "downloads": -1,
        "filename": "httpmq-0.1.0rc4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "29a2a027cf60506e483227ae18c555f3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.2,<4.0",
        "size": 43611,
        "upload_time": "2022-08-22T00:18:45",
        "upload_time_iso_8601": "2022-08-22T00:18:45.813970Z",
        "url": "https://files.pythonhosted.org/packages/be/a9/eda077e1efb4d46b70690a8f567f13f3a30016ff823c65734d451d9a4cb2/httpmq-0.1.0rc4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "993d4ebf924b1973a6a7f1d0a7c3b73e9cd940a96a1d2b73fb8e27fee39e6c02",
          "md5": "ff23df770af7a98e734c1090931a7cc4",
          "sha256": "ad5ecb189fd1e1d01c81fbf7ae895747358d68c528b70bb478f501a863adf910"
        },
        "downloads": -1,
        "filename": "httpmq-0.1.0rc4.tar.gz",
        "has_sig": false,
        "md5_digest": "ff23df770af7a98e734c1090931a7cc4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.2,<4.0",
        "size": 29727,
        "upload_time": "2022-08-22T00:18:47",
        "upload_time_iso_8601": "2022-08-22T00:18:47.728567Z",
        "url": "https://files.pythonhosted.org/packages/99/3d/4ebf924b1973a6a7f1d0a7c3b73e9cd940a96a1d2b73fb8e27fee39e6c02/httpmq-0.1.0rc4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0rc5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c899e53e91047c18255149a32444af8a20b6fd71f86889a971efd9b8475095b0",
          "md5": "374b9a843fdc23c250ee90fde3efc4e5",
          "sha256": "be11a3917335d21a7389801e063fc4d94988baae0cbfa4dfe6ac38f9548e9d16"
        },
        "downloads": -1,
        "filename": "httpmq-0.1.0rc5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "374b9a843fdc23c250ee90fde3efc4e5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.2,<4.0",
        "size": 43610,
        "upload_time": "2022-08-22T00:23:37",
        "upload_time_iso_8601": "2022-08-22T00:23:37.150103Z",
        "url": "https://files.pythonhosted.org/packages/c8/99/e53e91047c18255149a32444af8a20b6fd71f86889a971efd9b8475095b0/httpmq-0.1.0rc5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1ae1df4910adcc73982f4804736fa082798942df7b3ce87412fdaf315fcc9435",
          "md5": "f16bd9cd80ecb7fcc564847c7a76f37f",
          "sha256": "54b3d4a7738471fad00ebe2bcff8cde600bfec90635ea7f8df8b84a86b4a04f7"
        },
        "downloads": -1,
        "filename": "httpmq-0.1.0rc5.tar.gz",
        "has_sig": false,
        "md5_digest": "f16bd9cd80ecb7fcc564847c7a76f37f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.2,<4.0",
        "size": 29722,
        "upload_time": "2022-08-22T00:23:38",
        "upload_time_iso_8601": "2022-08-22T00:23:38.697575Z",
        "url": "https://files.pythonhosted.org/packages/1a/e1/df4910adcc73982f4804736fa082798942df7b3ce87412fdaf315fcc9435/httpmq-0.1.0rc5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a2d80386e0129c954e5f8f7bac2d4834cd19e45578990c6b41d9e98ee0689f64",
        "md5": "9554645ef0b2ef7ab47e49d4e9dacb99",
        "sha256": "1498200651cc408abaff3e22c12f44385cef286b3add5d8702207e6022699c8e"
      },
      "downloads": -1,
      "filename": "httpmq-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9554645ef0b2ef7ab47e49d4e9dacb99",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7.2,<4.0",
      "size": 43581,
      "upload_time": "2022-08-22T00:29:13",
      "upload_time_iso_8601": "2022-08-22T00:29:13.387440Z",
      "url": "https://files.pythonhosted.org/packages/a2/d8/0386e0129c954e5f8f7bac2d4834cd19e45578990c6b41d9e98ee0689f64/httpmq-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "928d4d68906be63caa66ff9ad217f6cb14585517c47bf445e57fe8f5fd3a55ee",
        "md5": "6893b8fb67ad010b12ea4b2ff7c00c4a",
        "sha256": "9e061b99f7ffeca86ec5729ef2099ba090e4b376e6f50ee88c4a56b0eab64657"
      },
      "downloads": -1,
      "filename": "httpmq-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "6893b8fb67ad010b12ea4b2ff7c00c4a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7.2,<4.0",
      "size": 29718,
      "upload_time": "2022-08-22T00:29:15",
      "upload_time_iso_8601": "2022-08-22T00:29:15.476402Z",
      "url": "https://files.pythonhosted.org/packages/92/8d/4d68906be63caa66ff9ad217f6cb14585517c47bf445e57fe8f5fd3a55ee/httpmq-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}