{
  "info": {
    "author": "Jeanderson Gomes, José fernando",
    "author_email": "jeandsgomes10@ufpi.edu.br",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "Reconhecimento Facial com VGG faces e BallTree\n=============\n\n#### Esse é que abstrai o processo de reconhecimento facial com o modelo VGG faces e o classificador BallTree.\n\n## Instalação:\n\n    '''\n    pip install face_Recognit\n    '''\n\n## Uso:\n\n### Importando a biblioteca\n\n    '''\n    import Face_Recognition\n    '''\n\n### Inicializando o modelo\n#### é nescessario o caminho para o arquivo vgg_face_weights.h3\n#### você pode baixar o arquivo nesse link [vgg face weights](https://drive.google.com/file/d/1yMLtU3tcfp7hVwoMt6JIPnG0MvXVwTEs/view?usp=sharing)\n\n    '''\n    r_f = Face_Recognition('.../Reconhecimento_Facial/vgg_face_weights.h5')\n    r_f.criando_modelo()\n    '''\n\n### Formatar o caminho do diretorio para importar o banco de dados\n#### A função dicionario_diretorio_treino_teste ira formatar os caminhos para as fotos presentes no banco de dados.\n#### Os parametros são os seguintes: \n1. diretorio : caminho para o banco de dados formatado da seguinte forma (.../base_de_dados/) \n2. quantidade_de_fotos_para_treino : quantidade de fotos armazenadas no banoco de treino.\n3. quantidade_de_fotos_para_teste : quantidade de fotos armazenadas no banoco de teste.\n    \n    '''\n    diretorio = '.../base_de_dados/'\n    dicionario_treino_teste = r_f.dicionario_diretorio_treino_teste(diretorio,quantidade_de_fotos_para_treino,quantidade_de_fotos_para_teste)\n    '''\n\n### Formatar o banco de dados\n#### A função extracao_de_caracteristicas_diretorio_treino vai retornar uma lista com as caracteristicas das fotos do banco de treino.\n#### Os parametros são os seguintes: \n1. dicionario_treino_teste : resultado retornado da função dicionario_diretorio_treino_teste\n\n    '''\n    base_treino = r_f.extracao_de_caracteristicas_diretorio_treino(dicionario_treino_teste)\n    '''\n\n#### A função extracao_de_caracteristicas_diretorio_teste vai retornar uma lista com as caracteristicas das fotos do banco de teste.\n#### Os parametros são os seguintes: \n1. dicionario_treino_teste : resultado retornado da função dicionario_diretorio_treino_teste\n\n    '''\n    base_teste = r_f.extracao_de_caracteristicas_diretorio_teste(dicionario_treino_teste)\n    '''\n\n### Classificar o banco de dados teste\n#### A função resultados_da_classificacao realiza a classificação do banco de dados teste.\n#### Os parametros são os seguintes: \n1. base_teste : base de treino.\n2. base_teste : base de teste.\n\n    '''\n    classificacao = r_f.resultados_da_classificacao(base_treino,base_teste)\n    '''\n\n### Reultados da classificação da base de dados teste\n#### A função resultado_dos_teste_percentual_acertos mostra resultados da classificação do banco teste.\n#### Os parametros são os seguintes: \n1. classificacao : resultados da função resultados_da_classificaca.\n2. base_teste : base de teste.\n\n    '''\n    r_f.resultado_dos_teste_percentual_acertos(classificacao,base_teste)\n    '''\n\n### Reconhecimneto de uma foto\n#### A função resultados_do_reconhecimento_de_uma_foto realiza o reconheicmento de uma foto apenas informando o diretorio dela e fornecendo a base de dados de treino.\n#### Os parametros são os seguintes: \n1. base_treino : base de teste.\n2. image_path : caminho para o diretorio da imagem que deseja identificar.\n\n    '''\n    image_path = '.../5.pgm'\n    r_f.resultados_do_reconhecimento_de_uma_foto(base_treino,image_path)\n    '''\n\n### Adicionar individuo a base de dados\n#### A função adicionando_individuos_a_base_treino que vai adicionar um novo individuo na base de dados.\n#### Os parametros são os seguintes: \n1. base_de_dados : base de dadis resultante das funções de estrações de caracteristicas.\n2. diretorio_individuo_para_adicionar : caminho para o diretorio do individuo que deseja adicionar.\n\n    '''\n    individuo_para_adicionar = '.../Jeanderson/'\n    r_f.adicionando_individuos_a_base_treino(base_de_dados,diretorio_individuo_para_adicionar)\n    '''\n\n### Remover individuo a base de dados\n#### A função remover_individuos_a_base_treino que vai remover o individuo informado.\n#### Os parametros são os seguintes: \n1. base_de_dados : base de dadis resultante das funções de estrações de caracteristicas.\n2. identificador_do_individuo : identificador usado na base de dados.\n\n    '''\n    r_f.remover_individuos_a_base_treino(base_treino,identificador_do_individuo)\n    '''\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/JeandsGomes/pacotes_pypi",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "face-Recognit",
    "package_url": "https://pypi.org/project/face-Recognit/",
    "platform": "",
    "project_url": "https://pypi.org/project/face-Recognit/",
    "project_urls": {
      "Bug Tracker": "https://github.com/pypa/sampleproject/issues",
      "Homepage": "https://github.com/JeandsGomes/pacotes_pypi"
    },
    "release_url": "https://pypi.org/project/face-Recognit/0.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "Abstrair o processo de reconhecimento facial com o modelo CNN Vgg Faces.",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10936719,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "072674de3eb52c22abec6b295501af1484ebc0aaba2262b808713645e373089d",
          "md5": "ff2b321647fa30d214bad26218461200",
          "sha256": "43e695b572d0442530981677da58b9692cef16e08be079bc372b66cce689f649"
        },
        "downloads": -1,
        "filename": "face_Recognit-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ff2b321647fa30d214bad26218461200",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 8304,
        "upload_time": "2021-07-17T22:37:14",
        "upload_time_iso_8601": "2021-07-17T22:37:14.231162Z",
        "url": "https://files.pythonhosted.org/packages/07/26/74de3eb52c22abec6b295501af1484ebc0aaba2262b808713645e373089d/face_Recognit-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18290b5d3638954a5bfbc9b5d3dce0a07af1f89e1168c30e5ae66035dc6e97ec",
          "md5": "8812737cbf962cbd604434c12a61d117",
          "sha256": "3e3afef4ddcc85ecc635318d6d4f32ef17dcdc7163cdb7104ce103bd30577fe0"
        },
        "downloads": -1,
        "filename": "face_Recognit-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8812737cbf962cbd604434c12a61d117",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 8755,
        "upload_time": "2021-07-17T22:37:17",
        "upload_time_iso_8601": "2021-07-17T22:37:17.770815Z",
        "url": "https://files.pythonhosted.org/packages/18/29/0b5d3638954a5bfbc9b5d3dce0a07af1f89e1168c30e5ae66035dc6e97ec/face_Recognit-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "072674de3eb52c22abec6b295501af1484ebc0aaba2262b808713645e373089d",
        "md5": "ff2b321647fa30d214bad26218461200",
        "sha256": "43e695b572d0442530981677da58b9692cef16e08be079bc372b66cce689f649"
      },
      "downloads": -1,
      "filename": "face_Recognit-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ff2b321647fa30d214bad26218461200",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 8304,
      "upload_time": "2021-07-17T22:37:14",
      "upload_time_iso_8601": "2021-07-17T22:37:14.231162Z",
      "url": "https://files.pythonhosted.org/packages/07/26/74de3eb52c22abec6b295501af1484ebc0aaba2262b808713645e373089d/face_Recognit-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "18290b5d3638954a5bfbc9b5d3dce0a07af1f89e1168c30e5ae66035dc6e97ec",
        "md5": "8812737cbf962cbd604434c12a61d117",
        "sha256": "3e3afef4ddcc85ecc635318d6d4f32ef17dcdc7163cdb7104ce103bd30577fe0"
      },
      "downloads": -1,
      "filename": "face_Recognit-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "8812737cbf962cbd604434c12a61d117",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 8755,
      "upload_time": "2021-07-17T22:37:17",
      "upload_time_iso_8601": "2021-07-17T22:37:17.770815Z",
      "url": "https://files.pythonhosted.org/packages/18/29/0b5d3638954a5bfbc9b5d3dce0a07af1f89e1168c30e5ae66035dc6e97ec/face_Recognit-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}