{
  "info": {
    "author": "Renato Fuzaro Miotto",
    "author_email": "<renato.fmiotto@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "Intended Audience :: Developers",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3"
    ],
    "description": "# CoSaMP\n\nCoSaMP algorithm in Python. <br/>\n\n## Installation\n\nHow to install:\n\n```\npip install cosamp\n```\nor\n```\npip3 install cosamp\n```\n\nDependencies: **numpy**.\n\n## Usage example\n\n```\n@Input:  Phi - Sampling matrix\n          u   - Noisy sample vector\n          s   - Sparsity vector\n\n@Return: A s-sparse approximation \"a\" of the target signal\n```\n\nUsing CoSaMP algorithm to reconstruct a high-frequency signal from sparse measurements:\n\n```python\nimport numpy as np\nimport scipy.linalg\nimport scipy.signal\nimport matplotlib.pyplot as plt\nfrom cosamp import cosamp\n\n\nn = 100 # number of measurements\nt = np.linspace(0.0, 1.0, num=n)\n\nx = np.sin(91*2*np.pi*t) + np.sin(412*2*np.pi*t) # original signal (to be reconstructed)\n\n# randomly sample signal\np = 103 # random sampling (Note that this is one eighth of the Shannonâ€“Nyquist rate!)\naquis = np.round((n-1) * np.random.rand(p)).astype(int)\ny = x[aquis] # our compressed measurement from the random sampling\n\n# Here {y} = [C]{x} = [C][Phi]{s}, where Phi is the inverse discrete cosine transform\n\nPhi = scipy.fft.dct(np.eye(n), axis=0, norm='ortho')\nCPhi = Phi[aquis,:]\n\n# l1 minimization (through linear programming)\ns = cosamp.cosamp(CPhi, y, 10) # obtain the sparse vector through CoSaMP algorithm\nxrec = scipy.fft.idct(s, axis=0, norm='ortho') # Reconstructed signal\n\n\n\nfigw, figh = 7.0, 5.0 # figure width and height\nplt.figure(figsize=(figw, figh))\nplt.plot(t, s)\nplt.title('Sparse vector $s$')\nplt.show()\n\n\n# Visualize the compressed-sensing reconstruction signal\nfigw, figh = 7.0, 5.0 # figure width and height\nplt.figure(figsize=(figw, figh))\nplt.plot(t, x,    'b', label='Original signal')\nplt.plot(t, xrec, 'r', label='Reconstructed signal')\nplt.xlim(0.4, 0.5)\nlegend = plt.legend(loc='upper center', shadow=True, fontsize='x-large')\n# Put a nicer background color on the legend.\nlegend.get_frame().set_facecolor('C0')\nplt.show()\n```\n![sparse vector](https://github.com/rfmiotto/CoSaMP/blob/master/images/sparse-vector.png?raw=true)\n![result](https://github.com/rfmiotto/CoSaMP/blob/master/images/result.png?raw=true)\n\n## Other info\n\nMATLAB versions of the algorithm are readly available (see [here](https://www.mathworks.com/matlabcentral/fileexchange/32402-cosamp-and-omp-for-sparse-recovery) for instance). This Python method is based on the MATLAB routine written by Prof. Bob L. Sturm.\n\nThe original Needell and Tropp's 2008 paper can be found [here](http://users.cms.caltech.edu/~jtropp/papers/NT08-CoSaMP-Iterative-preprint.pdf).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "python,sparse signal,cosamp",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cosamp",
    "package_url": "https://pypi.org/project/cosamp/",
    "platform": "",
    "project_url": "https://pypi.org/project/cosamp/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/cosamp/0.0.2/",
    "requires_dist": [
      "numpy"
    ],
    "requires_python": "",
    "summary": "Python implementation of the CoSaMP algorithm",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12578863,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "92ebcbd915ed36a51e3cd7b1c21bb5ea45448a5c2f07d1f86a43663bcbdb0757",
          "md5": "f0f05077c0110e1dd384b44090fc4e45",
          "sha256": "8ee71e63ed5c8c3ecaeea8bcee2eafbb4ee85341ba03ec9b06a72667194d89f1"
        },
        "downloads": -1,
        "filename": "cosamp-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f0f05077c0110e1dd384b44090fc4e45",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4196,
        "upload_time": "2022-01-14T23:18:28",
        "upload_time_iso_8601": "2022-01-14T23:18:28.601757Z",
        "url": "https://files.pythonhosted.org/packages/92/eb/cbd915ed36a51e3cd7b1c21bb5ea45448a5c2f07d1f86a43663bcbdb0757/cosamp-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "19587567ad5549c4c1a18995fdae9e1bd330f67a645c2b7da7e2d7e33359039c",
          "md5": "e1739d6ccfc76e1a7c15c4a601b4429e",
          "sha256": "bb010324054aed2ee1c94ce887934cf495ef9243a0425590b5bca9d8e43503e2"
        },
        "downloads": -1,
        "filename": "cosamp-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e1739d6ccfc76e1a7c15c4a601b4429e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3464,
        "upload_time": "2022-01-14T23:18:31",
        "upload_time_iso_8601": "2022-01-14T23:18:31.345049Z",
        "url": "https://files.pythonhosted.org/packages/19/58/7567ad5549c4c1a18995fdae9e1bd330f67a645c2b7da7e2d7e33359039c/cosamp-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "92ebcbd915ed36a51e3cd7b1c21bb5ea45448a5c2f07d1f86a43663bcbdb0757",
        "md5": "f0f05077c0110e1dd384b44090fc4e45",
        "sha256": "8ee71e63ed5c8c3ecaeea8bcee2eafbb4ee85341ba03ec9b06a72667194d89f1"
      },
      "downloads": -1,
      "filename": "cosamp-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f0f05077c0110e1dd384b44090fc4e45",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 4196,
      "upload_time": "2022-01-14T23:18:28",
      "upload_time_iso_8601": "2022-01-14T23:18:28.601757Z",
      "url": "https://files.pythonhosted.org/packages/92/eb/cbd915ed36a51e3cd7b1c21bb5ea45448a5c2f07d1f86a43663bcbdb0757/cosamp-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "19587567ad5549c4c1a18995fdae9e1bd330f67a645c2b7da7e2d7e33359039c",
        "md5": "e1739d6ccfc76e1a7c15c4a601b4429e",
        "sha256": "bb010324054aed2ee1c94ce887934cf495ef9243a0425590b5bca9d8e43503e2"
      },
      "downloads": -1,
      "filename": "cosamp-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "e1739d6ccfc76e1a7c15c4a601b4429e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3464,
      "upload_time": "2022-01-14T23:18:31",
      "upload_time_iso_8601": "2022-01-14T23:18:31.345049Z",
      "url": "https://files.pythonhosted.org/packages/19/58/7567ad5549c4c1a18995fdae9e1bd330f67a645c2b7da7e2d7e33359039c/cosamp-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}