{
  "info": {
    "author": "Anatolii Aniskovych",
    "author_email": "lin.aaa.lin@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Utilities"
    ],
    "description": "==============\nLayer Enforcer\n==============\n\nLayer Enforcer is a tool for linting your imports within the project.\n\nThe tool was designed to help maintain following order of things:\n\n* Dependencies always flow towards root of the tree. Often this is ``domain``\n  layer.\n* Dependencies may skip layers, as long as they flow in same direction.\n  For instance, your ``web`` layer may import use cases from ``domain`` layer.\n* Infer layer from imports or module names. Say, if you import ``fastapi``\n  anywhere on the chain, the module is assigned to ``web`` layer, or maybe you\n  want ``models`` to always be ``db`` layer.\n* Flexible layer structure. Preferably defined via config file.\n* Code is packaged by component. I.e. single component may contain code from\n  the different layers.\n\nBe warned, since this might not the best fit for you.\n\nAlgorithm\n=========\n\nFirst pass: Match modules to layers. Report conflict if single module match\nmore than one layer.\n\nSecond pass: For each module, iterate through all the imported modules.\nIf current module has no assigned layer, assign first found layer within list\nof imported modules. If current module has an assigned layer, report conflict\nif import is not allowed.\n\nInstallation\n============\n\n.. code-block:: sh\n\n    pip install layer-enforcer\n\nFor Development\n---------------\n\n.. code-block:: sh\n\n    pip install -e .[test,lint]\n\nUsage\n=====\n\n.. code-block:: sh\n\n    layer-enforcer myproject myotherproject --layers layers.yml\n\n\npyproject.toml\n--------------\n\nInstead of explicitly specifying CLI arguments, it is possible to provide\nconfiguration via ``pyproject.toml`` within the ``tool.layer_enforcer`` table:\n\n.. code-block:: toml\n\n    [tool.layer_enforcer]\n    modules = [\"myproject\", \"myotherproject\"]\n    ignore = [\"myproject.containers\"]\n    layers = \"layers.yml\"\n\n\nlayers.yml\n-----------\n\nAn example of clean-architecture-ish layer layout for typical web app:\n\n.. code-block:: yaml\n\n    name: domain\n    submodules: [\"entities\", \"use_cases\"]\n    layers:\n    - name: service\n      submodules: [\"services\"]\n      layers:\n      - name: infrastructure\n        imports: [\"stripe\", \"requests\", \"passlib\"]\n        layers:\n        - name: db\n          imports: [\"sqlalchemy\", \"psycopg2\", \"alembic\"]\n          submodules: [\"models\", \"memory\", \"database\"]\n        - name: web\n          imports: [\"fastapi\", \"jose\"]\n          submodules: [\"views\", \"schemas\"]\n        - name: tasks\n          imports: [\"celery\"]\n          submodules: [\"tasks\"]\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ZipFile/layer-enforcer",
    "keywords": "clean architecture,dependency rule",
    "license": "BSD 2-Clause License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "layer-enforcer",
    "package_url": "https://pypi.org/project/layer-enforcer/",
    "platform": null,
    "project_url": "https://pypi.org/project/layer-enforcer/",
    "project_urls": {
      "Homepage": "https://github.com/ZipFile/layer-enforcer"
    },
    "release_url": "https://pypi.org/project/layer-enforcer/0.2.0/",
    "requires_dist": [
      "grimp (>=1.3)",
      "pyyaml (>=5.1.0)",
      "tomli (>=1.0.0) ; python_version < \"3.11\"",
      "black ; extra == 'lint'",
      "flake8 ; extra == 'lint'",
      "flake8-print ; extra == 'lint'",
      "isort ; extra == 'lint'",
      "mypy ; extra == 'lint'",
      "pretend ; extra == 'test'",
      "pytest ; extra == 'test'",
      "pytest-cov ; extra == 'test'"
    ],
    "requires_python": "",
    "summary": "Relaxed layer architecture linter based on the import graph.",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14830094,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "030392768e2c0fae46d5d47bdf9d26856297d8f9b9f0f8abefe2b6df18763e75",
          "md5": "44e501eb55bb3d42735f403f4dd796fe",
          "sha256": "bbfde74023627475db81cb87578cf8114b9fb9a4c71f5151cd1524cdcec2bb6e"
        },
        "downloads": -1,
        "filename": "layer_enforcer-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "44e501eb55bb3d42735f403f4dd796fe",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7513,
        "upload_time": "2021-06-01T06:50:10",
        "upload_time_iso_8601": "2021-06-01T06:50:10.280074Z",
        "url": "https://files.pythonhosted.org/packages/03/03/92768e2c0fae46d5d47bdf9d26856297d8f9b9f0f8abefe2b6df18763e75/layer_enforcer-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "961c3b53f9c0e9cae35e9afcd6488153d6b9f1ea2247135bd083dec5096f3a63",
          "md5": "a64a8352489b31dab00c4a5aa03e007d",
          "sha256": "af29d82238149488db85e38f7950128ff5e5715eca70dda472901d4c84e4ae89"
        },
        "downloads": -1,
        "filename": "layer_enforcer-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a64a8352489b31dab00c4a5aa03e007d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6911,
        "upload_time": "2021-06-01T06:50:12",
        "upload_time_iso_8601": "2021-06-01T06:50:12.001966Z",
        "url": "https://files.pythonhosted.org/packages/96/1c/3b53f9c0e9cae35e9afcd6488153d6b9f1ea2247135bd083dec5096f3a63/layer_enforcer-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b8ed360e193741936dcfd99869e2892bb87ffefd98654293591a145aabaf90ac",
          "md5": "33e0391096f13965ef50aa33899f3a76",
          "sha256": "9b4d9c3710c0689556cd27de3c4613926b169dfbcb061332fa3404171f1a2157"
        },
        "downloads": -1,
        "filename": "layer_enforcer-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "33e0391096f13965ef50aa33899f3a76",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7871,
        "upload_time": "2021-06-17T11:19:02",
        "upload_time_iso_8601": "2021-06-17T11:19:02.056876Z",
        "url": "https://files.pythonhosted.org/packages/b8/ed/360e193741936dcfd99869e2892bb87ffefd98654293591a145aabaf90ac/layer_enforcer-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c37256d61758771b4cb4b89387b0dd77800f83d2e261626694226c163ec58cfa",
          "md5": "e2d86305ca05f46b5f150fd61037479c",
          "sha256": "3d64d99989ed270f15765efc82c35754c46d337f41531b1f1a59fec928cd8fd8"
        },
        "downloads": -1,
        "filename": "layer_enforcer-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e2d86305ca05f46b5f150fd61037479c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7325,
        "upload_time": "2021-06-17T11:19:03",
        "upload_time_iso_8601": "2021-06-17T11:19:03.902456Z",
        "url": "https://files.pythonhosted.org/packages/c3/72/56d61758771b4cb4b89387b0dd77800f83d2e261626694226c163ec58cfa/layer_enforcer-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "feceed86bc0e8bea30e5445475ec21737aec933ddf2d5527c1972d5e42dd0650",
          "md5": "3d2465d7ea58ebc29ccecab9adda23af",
          "sha256": "58b59f7198888d4dbad91b16bbe31313df129d2620c8f14ecec1af7632cd702b"
        },
        "downloads": -1,
        "filename": "layer_enforcer-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3d2465d7ea58ebc29ccecab9adda23af",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12364,
        "upload_time": "2022-08-21T22:37:58",
        "upload_time_iso_8601": "2022-08-21T22:37:58.839965Z",
        "url": "https://files.pythonhosted.org/packages/fe/ce/ed86bc0e8bea30e5445475ec21737aec933ddf2d5527c1972d5e42dd0650/layer_enforcer-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a089ca952cc42bf990469195aebe8ee2e79ebfb62649a6fa8f0d2b5e658fc12b",
          "md5": "4f9770db31e99a8efa288c51b72e151e",
          "sha256": "2ccb59fc75047a2f76f4bd88c0a87b3010d07f344746fdd21ae26f7c5345d3f7"
        },
        "downloads": -1,
        "filename": "layer_enforcer-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4f9770db31e99a8efa288c51b72e151e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10262,
        "upload_time": "2022-08-21T22:38:01",
        "upload_time_iso_8601": "2022-08-21T22:38:01.855206Z",
        "url": "https://files.pythonhosted.org/packages/a0/89/ca952cc42bf990469195aebe8ee2e79ebfb62649a6fa8f0d2b5e658fc12b/layer_enforcer-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "feceed86bc0e8bea30e5445475ec21737aec933ddf2d5527c1972d5e42dd0650",
        "md5": "3d2465d7ea58ebc29ccecab9adda23af",
        "sha256": "58b59f7198888d4dbad91b16bbe31313df129d2620c8f14ecec1af7632cd702b"
      },
      "downloads": -1,
      "filename": "layer_enforcer-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3d2465d7ea58ebc29ccecab9adda23af",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 12364,
      "upload_time": "2022-08-21T22:37:58",
      "upload_time_iso_8601": "2022-08-21T22:37:58.839965Z",
      "url": "https://files.pythonhosted.org/packages/fe/ce/ed86bc0e8bea30e5445475ec21737aec933ddf2d5527c1972d5e42dd0650/layer_enforcer-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a089ca952cc42bf990469195aebe8ee2e79ebfb62649a6fa8f0d2b5e658fc12b",
        "md5": "4f9770db31e99a8efa288c51b72e151e",
        "sha256": "2ccb59fc75047a2f76f4bd88c0a87b3010d07f344746fdd21ae26f7c5345d3f7"
      },
      "downloads": -1,
      "filename": "layer_enforcer-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "4f9770db31e99a8efa288c51b72e151e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10262,
      "upload_time": "2022-08-21T22:38:01",
      "upload_time_iso_8601": "2022-08-21T22:38:01.855206Z",
      "url": "https://files.pythonhosted.org/packages/a0/89/ca952cc42bf990469195aebe8ee2e79ebfb62649a6fa8f0d2b5e658fc12b/layer_enforcer-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}