{
  "info": {
    "author": "Riccardo Curcio",
    "author_email": "curcioriccardo@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "\n# **Super-case-convertor-2000**\n\n### Quick start\n\n___\n\nFirst, install the library\n\n```\npip3 install super-case-converter-2000\n```\n\ninclude in your project\n\n```python\nfrom converter import case\n```\n\n## Methods\n# snake\n\nConvert string to '*snake case*' string\n\n#### alias\n- c_case\n\n```python\nsnake(string: str = \"\", replaceSeparator: Optional[str] = None) -> str:\n```\n#### Example\n```python\nstring_camel = \"stringCase\"\n\nstring_snake = case.snake(string=string_camel)\n\n# alias\nstring_c_case = case.c_case(string=string_camel)\n\nprint(string_snake, string_c_case)\n```\n\n##### Output\n```console\nstring_case string_case\n```\n\n#### Example\n```python\nstring_custom = \"string!!case\"\n\nstring_snake = case.snake(string=string_custom, replaceSeparator='!!')\n\n# alias\nstring_c_case = case.c_case(string=string_custom, replaceSeparator='!!')\n\nprint(string_snake, string_c_case)\n```\n\n##### Output\n```console\nstring_case string_case\n```\n\n\n# camel\nConvert string to '*camel case*' string\n\n```python\ncamel(string: str = \"\", replaceSeparator: Optional[str] = None) -> str:\n```\n\n#### Example\n```python\nstring_snake = \"string_case\"\n\nstring_camel = case.camel(string=string_snake)\n\nprint(string_camel)\n```\n\n##### Output\n```console\nstringCase\n```\n\n#### Example\n```python\nstring_custom = \"string!!case\"\n\nstring_camel = case.camel(string=string_custom, replaceSeparator='!!')\n\nprint(string_camel)\n```\n\n##### Output\n```console\nstringCase\n```\n\n# pascal\nConvert string to '*pascal case*' string\n#### alias\n- capital_camel\n\n\n```python\npascal(string: str = \"\", replaceSeparator: Optional[str] = None) -> str:\n\n```\n\n#### Example\n```python\nstring_snake = \"string_case\"\n\nstring_pascal = case.pascal(string=string_snake)\n\n# alias\nstring_capital_camel = case.capital_camel(string=string_snake)\n\nprint(string_pascal, string_capital_camel)\n```\n\n##### Output\n```\nStringCase StringCase\n```\n#### Example\n```python\nstring_custom = \"string!!case\"\n\nstring_pascal = case.pascal(string=string_custom, replaceSeparator='!!')\n\nprint(string_pascal)\n\n```\n##### Output\n```\nStringCase\n```\n\n# kebab\nConvert string to '*kebak case*' string\n\n#### alias\n- kebabm\n- caterpillar\n- dash\n- hyphen\n- lisp\n- spinal\n- css\n\n```python\nkebab(string: str = \"\", replaceSeparator: Optional[str] = None) -> str:\n\n```\n\n#### Example\n```python\nstring_snake = \"string_case\"\n\nstring_kebab = case.kebab(string=string_snake)\n\n# alias\nstring_caterpillar = case.caterpillar(string=string_snake)\n\nprint(string_kebab, string_caterpillar)\n```\n\n#### Output\n```\nstring-case string-case\n```\n\n#### Example\n```python\nstring_custom = \"string!!case\"\n\nstring_kebab = case.kebab(string=string_custom, replaceSeparator='!!')\n\nprint(string_kebab)\n```\n\n#### Output\n```\nstring-case\n```\n\n# flat\nConvert string to '*flat case*' string\n```python\nflat(string: str = \"\", replaceSeparator: Optional[str] = None) -> str:\n```\n\n#### Example\n```python\nstring_snake = \"string_case\"\n\nstring_flat = case.flat(string=string_snake)\n\nprint(string_flat)\n```\n\n#### Output\n```\nstringcase\n```\n#### Example\n```python\nstring_custom = \"string!!case\"\n\nstring_flat = case.flat(string=string_custom, replaceSeparator='!!')\n\nprint(string_flat)\n```\n\n#### Output\n```\nstringcase\n```\n\n# raw\nConvert string to '*raw case*' string\n```python\nraw(string: str = \"\", replaceSeparator: Optional[str] = None) -> str:\n```\n\n#### Example\n```python\nstring_snake = \"string_case\"\n\nstring_raw = case.raw(string=string_snake)\n\nprint(string_raw)\n```\n\n#### Output\n```\nstring case\n```\n#### Example\n```python\nstring_custom = \"string!!case\"\n\nstring_raw = case.raw(string=string_custom, replaceSeparator='!!')\n\nprint(string_raw)\n```\n\n#### Output\n```\nstring case\n```\n\n# path\nConvert string to '*path*' string\n```python\npath(string: str = \"\", replaceSeparator: Optional[str] = None) -> str:\n```\n\n#### Example\n```python\nstring_snake = \"string_case\"\n\nstring_path = case.path(string=string_snake)\n\nprint(string_path)\n```\n\n#### Output\n```\nstring/case\n```\n\n#### Example\n```python\nstring_custom = \"string!!case\"\n\nstring_path = case.path(string=string_custom, replaceSeparator='!!')\n\nprint(string_path)\n```\n\n#### Output\n```\nstring/case\n```\n\n# piped\nConvert string to '*piped*' string\n```python\npiped(string: str = \"\", replaceSeparator: Optional[str] = None) -> str:\n```\n\n#### Example\n```python\nstring_snake = \"string_case\"\n\nstring_piped = case.piped(string=string_snake)\n\nprint(string_piped)\n```\n\n#### Output\n```\nstring|case\n```\n\n#### Example\n```python\nstring_custom = \"string!!case\"\n\nstring_piped = case.piped(string=string_custom, replaceSeparator='!!')\n\nprint(string_piped)\n```\n\n#### Output\n```\nstring|case\n```\n\n# title\nConvert string to '*title case*' string\n```python\ntitle(string: str = \"\", replaceSeparator: Optional[str] = None) -> str:\n```\n\n\n#### Example\n```python\nstring_snake = \"string_case\"\n\nstring_title = case.title(string=string_snake)\n\nprint(string_title)\n```\n\n#### Output\n```\nString Case\n```\n\n#### Example\n```python\nstring_custom = \"string!!case\"\n\nstring_title = case.title(string=string_custom, replaceSeparator='!!')\n\nprint(string_title)\n```\n\n#### Output\n```\nString Case\n```\n\n# custom\n\nConvert string to '*custom separator*' string\n\n\n```python\ncustom(string: str = \"\", separator: str = \"\",replaceSeparator: Optional[str] = None) -> str:\n```\n\n\n#### Example\n```python\nstring_snake = \"string_case\"\n\nstring_custom = case.custom(string=string_snake, separator='<#>')\n\nprint(string_custom)\n```\n\n#### Output\n```\nstring<#>case\n```\n\n#### Example\n```python\nstring_custom = \"string!!case\"\n\nstring_custom = case.custom(string=string_custom, separator='<#>', replaceSeparator='!!')\n\nprint(string_custom)\n```\n\n#### Output\n```\nstring<#>case\n```\n\n# custom_between\n\nConvert string to '*custom between*' list of strings\n\n```python\ncustom_between(string: str = \"\", open: str = \"\", close: Optional[str] = None, replaceSeparator: Optional[str] = None) -> list:\n\n```\n\n#### Example\n```python\nstring_snake = \"string_case\"\n\nlist_custom_between = case.custom_between(\n  string=string_snake,\n  open='<',\n  close='>'\n)\n\nprint(list_custom_between)\n```\n\n#### Output\n```\n['<string>', '<case>']\n```\n\n#### Example\n```python\nstring_custom = \"string!!case\"\n\nlist_custom_between = case.custom_between(\n  string=string_custom,\n  open='<',\n  close='>',\n  replaceSeparator='!!'\n)\n\nprint(list_custom_between)\n```\n\n#### Output\n```\n['<string>', '<case>']\n```\n\n# sentence\nConvert string to '*sentence case*' string or list of strings\n```python\nsentence(string: str = \"\", listMode: bool = False, capitalize: bool = False, upper: bool = False, replaceSeparator: Optional[str] = None) -> Union[str, list]:\n\n```\n\n#### Example\n```python\nstring_snake = \"string_case\"\n\nstring_sentence = case.sentence(string=string_snake)\n\nprint(string_sentence)\n```\n\n#### Output\n```\nString case\n```\n\n#### Example\n```python\nstring_snake = \"string_case\"\n\nstring_sentence_capitalize = case.sentence(string=string_snake, capitalize=True)\n\nprint(string_sentence_capitalize)\n```\n\n#### Output\n```\nString Case\n```\n\n#### Example\n```python\nstring_snake = \"string_case\"\n\nstring_sentence_upper = case.sentence(string=string_snake, upper=True)\n\nprint(string_sentence_upper)\n```\n\n#### Output\n```\nSTRING CASE\n```\n\n#### Example\n```python\nstring_snake = \"string_case\"\n\nlist_sentence = case.sentence(string=string_snake, listMode=True)\n\nprint(list_sentence)\n```\n\n#### Output\n```\n['String', 'case']\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/RiccardoCurcio/super-case-convertor-2000/archive/v1.1.2.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/RiccardoCurcio/super-case-convertor-2000.git",
    "keywords": "snake,camel,pascal,kebab,flat,raw,path,piped,custom,title",
    "license": "GPL v3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "super-case-converter-2000",
    "package_url": "https://pypi.org/project/super-case-converter-2000/",
    "platform": "",
    "project_url": "https://pypi.org/project/super-case-converter-2000/",
    "project_urls": {
      "Download": "https://github.com/RiccardoCurcio/super-case-convertor-2000/archive/v1.1.2.tar.gz",
      "Homepage": "https://github.com/RiccardoCurcio/super-case-convertor-2000.git"
    },
    "release_url": "https://pypi.org/project/super-case-converter-2000/1.1.2/",
    "requires_dist": [
      "typing"
    ],
    "requires_python": ">=3.6",
    "summary": "Case converter",
    "version": "1.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7861517,
  "releases": {
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "086b2196800d4020acabdd2279a0604e6d61bb265e86b453a6d836c17f49a0af",
          "md5": "92440bb84554c96bdabf78b18701f510",
          "sha256": "ee9d4a4dcfa168030259acf97dca7c2b4b7f46b02229ebe89d8f15bfd17d7581"
        },
        "downloads": -1,
        "filename": "super_case_converter_2000-1.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "92440bb84554c96bdabf78b18701f510",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 42272,
        "upload_time": "2020-08-01T09:32:28",
        "upload_time_iso_8601": "2020-08-01T09:32:28.674794Z",
        "url": "https://files.pythonhosted.org/packages/08/6b/2196800d4020acabdd2279a0604e6d61bb265e86b453a6d836c17f49a0af/super_case_converter_2000-1.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "04e023b6c764c0afd13b247b349be4d2ef49002d26cc709231dcf9786c8bc335",
          "md5": "7d923b4c435eccd12ff248bb5d522fad",
          "sha256": "3e429c85b02963507477b2edd548bb972e6d93ecdfc60ef6158fbb09a489c6c1"
        },
        "downloads": -1,
        "filename": "super-case-converter-2000-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7d923b4c435eccd12ff248bb5d522fad",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8872,
        "upload_time": "2020-08-01T09:37:24",
        "upload_time_iso_8601": "2020-08-01T09:37:24.654778Z",
        "url": "https://files.pythonhosted.org/packages/04/e0/23b6c764c0afd13b247b349be4d2ef49002d26cc709231dcf9786c8bc335/super-case-converter-2000-1.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "086b2196800d4020acabdd2279a0604e6d61bb265e86b453a6d836c17f49a0af",
        "md5": "92440bb84554c96bdabf78b18701f510",
        "sha256": "ee9d4a4dcfa168030259acf97dca7c2b4b7f46b02229ebe89d8f15bfd17d7581"
      },
      "downloads": -1,
      "filename": "super_case_converter_2000-1.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "92440bb84554c96bdabf78b18701f510",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 42272,
      "upload_time": "2020-08-01T09:32:28",
      "upload_time_iso_8601": "2020-08-01T09:32:28.674794Z",
      "url": "https://files.pythonhosted.org/packages/08/6b/2196800d4020acabdd2279a0604e6d61bb265e86b453a6d836c17f49a0af/super_case_converter_2000-1.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "04e023b6c764c0afd13b247b349be4d2ef49002d26cc709231dcf9786c8bc335",
        "md5": "7d923b4c435eccd12ff248bb5d522fad",
        "sha256": "3e429c85b02963507477b2edd548bb972e6d93ecdfc60ef6158fbb09a489c6c1"
      },
      "downloads": -1,
      "filename": "super-case-converter-2000-1.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "7d923b4c435eccd12ff248bb5d522fad",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 8872,
      "upload_time": "2020-08-01T09:37:24",
      "upload_time_iso_8601": "2020-08-01T09:37:24.654778Z",
      "url": "https://files.pythonhosted.org/packages/04/e0/23b6c764c0afd13b247b349be4d2ef49002d26cc709231dcf9786c8bc335/super-case-converter-2000-1.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}