{
  "info": {
    "author": "Long Le",
    "author_email": "vanlong.le@cenaero.be",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: OS Independent",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython"
    ],
    "description": "\n# VPPopt - Virtual Power Plant Optimization Platform\n\n## The platform is current under development\n\n## Introduction\n\nVPPopt platform is developed within the framework of [H2 CoopStorage](https://h2coopstorage.eu) project (WP3). The objective of this WP is to develop a tool for (optimally) sizing a Community-based Virtual Power Plant with a hybrid solution of energy storage using electric batteries and hydrogen production.\n\nVPPopt used [oemof-solph](https://github.com/oemof/oemof-solph) for creating energy system and formulating optimization problem (Linear Program or Mixed Integer Linear Program). The latter is then solved by a LP or MILP solver such as CBC, GLPK, Cplex, Gurobi. More information for using oemof-solph could be found [here](https://oemof-solph.readthedocs.io/en/latest/usage.html). VPPopt is expected to recommend an optimally sized mix of **renewable energy**, and **energy storage technologies**; provides a **dispatch strategy** for operating the technology mix at **maximum economic efficiency**\n\n## Installation\n\nVPPopt has been developed using python 3 (higher or equal 3.6). A python 3 ([miniconda](https://docs.conda.io/en/latest/miniconda.html) is recommended) is therefore mandatory for the installation.\n\nThe latest version of VPPopt could be downloaded or cloned (using git) from https://github.com/cenaero-enb/h2cs-design.git. Hereafter, some instruction for the installation of vppopt on Windows\n\n- Check if python 3 is installed (using CMD or Powershell): just type `python` in the termial as below.\n\n```bash\npython\nPython 3.6.8 (tags/v3.6.8:3c6b436a57, Dec 24 2018, 00:16:47) [MSC v.1916 64 bit (AMD64)] on win32\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n```\n\n- vppopt could be installed in the default python environment or in a specific python virtual environment. A virtual python environment could be created as follows\n\n```bash\npython -m venv <path_to>\\vppopt_env\n```\n\n- For activating python virtual environment in Windows: from terminal (cmd or powershell) type:\n\n```bash\n<path_to>\\vppopt_env\\Scripts\\activate\n```\n\n- download or clone vppopt source code from github repository\n\n```bash\ngit clone https://github.com/cenaero-enb/h2cs-design.git\n```\n\n- go directly to h2cs-design folder for installing vppopt and its dependencies on activated python environment\n\n```bash\ncd h2cs-design\npython setup.py install\npip install -r requirements.txt\n```\n\n- Install pygraphviz on Windows using the instruction [here](https://github.com/pygraphviz/pygraphviz/blob/main/INSTALL.txt)\n\n### Installing a LP or MILP solver\n\nVarious commercial and open-source solvers are available and can be used with vppopt, e.g. Cplex, Gurobi, CBC, GLPK, IPOPT, etc. As recommanded from oemof.solph, it worths sometime comparing the result of different solvers. More information about solvers supported by pyomo could be found [here](https://pyomo.readthedocs.io/en/stable/solving_pyomo_models.html#supported-solvers)\n\nSeveral opensource solvers could be found [here](https://ampl.com/products/solvers/open-source/) or [here](https://ampl.com/dl/open/). The instruction below describes the installation of a solver on Windows:\n\n1. Dowload CBC ([64](https://ampl.com/dl/open/cbc/cbc-win64.zip) or [32](https://ampl.com/dl/open/cbc/cbc-win32.zip) bit)\n2. Or download GLPK ([64/32 bit](https://sourceforge.net/projects/winglpk/))\n3. Unpack CBC/GLPK to any folder (e.g. C:/Users/Somebody/aml_solvers)\n4. Add the path of the executable files of both solvers to the PATH variable using this [tutorial](https://www.computerhope.com/issues/ch000549.htm)\n5. Restart Windows\n\n## Usage\n\n### Comand Line Interface\n\n```bash\nvppopt --version\n0.1.0\n```\n\n```bash\nvppopt --help\nusage: vppopt [-h] [--version] {init,run,excel_reader} ...\n\nScript for initilazing vppopt scenario\n\npositional arguments:\n  {init,run,excel_reader}\n                        sub-command help\n    init                Initializing vppopt scenario and more        \n    run                 run vppopt scenario and more\n    excel_reader        run vppopt with scenario read from excel file\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --version             version of vppopt\n```\n\n- initialize a project\n\n```bash\nvppopt init -pdir Project1\n```\n\n- run a project\n\n```bash\nvppopt run -wf vppopt.json\n```\n\n### vppopt project structure\n\n- after initialize a vppopt project, the following files/directory will be created inside project directory\n\n```\nProject1\n    |__Scripts (empty folder for external user python scripts)\n    |__vppopt.json (Editable vppopt json workflow file)\n    |__vppopt.xlsx (Template of vppopt Excel input file)\n```\n\n### vppopt json workflow file\n\n- vppopt json (editable) workflow file give vppopt program the necessary information on\n  - file and directory paths\n  - simulation settings\n  - external user scripts being used\n\n```json\n{\n    \"Version\": \"2021.01\",\n    \"ProjName\": \"Untitled Project\",\n    \"ProjDir\": \"G:\\\\Workspace\\\\Cenaero\\\\Git\\\\vppopt-examples\\\\examples\\\\opnieuw\",\n    \"WorkflowFile\": \"G:\\\\Workspace\\\\Cenaero\\\\Git\\\\vppopt-examples\\\\examples\\\\opnieuw\\\\vppopt.json\",\n    \"NodesDataExcelFile\": \"G:\\\\Workspace\\\\Cenaero\\\\Git\\\\vppopt-examples\\\\examples\\\\opnieuw\\\\vppopt.xlsx\",\n    \"Scenario\": {},\n    \"Nodes\": {},\n    \"SimulationStep\": {\n        \"start_date\": \"2016-01-01\",\n        \"end_date\": \"2016-12-31\",\n        \"time_step\": 4,\n        \"solver_settings\": {\n            \"solver\": \"cbc\",\n            \"executable\": \"\",\n            \"solver_io\": \"lp\",\n            \"solve_kwargs\": {},\n            \"cmdline_options\": {}\n        }\n    },\n    \"ExternalScript\": {\n        \"script_dir\": \"G:\\\\Workspace\\\\Cenaero\\\\Git\\\\vppopt-examples\\\\examples\\\\opnieuw\\\\scripts\",\n        \"scripts\": [\n            {\n                \"name\":\"reporting_create_graph\",\n                \"tag\":\"reporting\",\n                \"arguments\":{}\n            },\n            {\n                \"name\":\"model_test_updating_nodes\",\n                \"tag\":\"model\",\n                \"arguments\":{}\n            }\n        ]\n    }\n}\n```\n\n### Excel input file\n\n- After initializing the project using `vppopt init` an Excel template will be created to fill all necessary input for creating an (oemof-solph) energy system. Different Excel sheets will be used for different input, e.g. buses, demand, renewables, etc.\n\n### outputs\n\n- when the optimization process is finished, all results (scalars and timeseries data) will be saved in `out.xlsx`\n- advanced user could add external python scripts into Script folder for different post-processing just after optimization process.\n\n## Examples\n\nSeveral examples for using vppopt could be found [here](https://github.com/cenaero-enb/vppopt-examples)\n\n## Main developers\n\n|Name|Affiliation|Email|\n|-----|-----|-----|\n|Van long LÃª|Cenaero|vanlong.le@cenaero.be|\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/cenaero-enb/h2cs-design",
    "keywords": "vppopt",
    "license": "Apache Software License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "vppopt",
    "package_url": "https://pypi.org/project/vppopt/",
    "platform": "",
    "project_url": "https://pypi.org/project/vppopt/",
    "project_urls": {
      "Homepage": "https://github.com/cenaero-enb/h2cs-design"
    },
    "release_url": "https://pypi.org/project/vppopt/0.1.1/",
    "requires_dist": [
      "pyomo (==5.7.2)",
      "pandas",
      "openpyxl",
      "xlrd",
      "matplotlib",
      "python-jsonschema-objects",
      "xlsxwriter",
      "loguru",
      "oemof.solph",
      "pymoo",
      "xmltodict"
    ],
    "requires_python": ">=3.6.0",
    "summary": "Virtual Power Plant Optimization Platform",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12908505,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "26fcad044c76113dda0b7c2336390d48210c042491a8d9e4f5f09d761c5b3435",
          "md5": "b69a4ec177d979af90b158ce71907eb0",
          "sha256": "4de9a5700620b9786f0817e0d5ba536812cd83327d74d87f877df6ba726580de"
        },
        "downloads": -1,
        "filename": "vppopt-0.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b69a4ec177d979af90b158ce71907eb0",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6.0",
        "size": 21715,
        "upload_time": "2022-02-16T12:53:00",
        "upload_time_iso_8601": "2022-02-16T12:53:00.208379Z",
        "url": "https://files.pythonhosted.org/packages/26/fc/ad044c76113dda0b7c2336390d48210c042491a8d9e4f5f09d761c5b3435/vppopt-0.1.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fc6f5a13daf09d860ca90d85eb7f3e42a8cecc8e2c3fd0a84c1cde6bbb7acbd1",
          "md5": "f7c5f12e455d30bcde87dfe329d4bde9",
          "sha256": "6e5dbb181822e3a324f546b677945fa516bbd5f4f65d55570dc9f05feac0758b"
        },
        "downloads": -1,
        "filename": "vppopt-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f7c5f12e455d30bcde87dfe329d4bde9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 627495,
        "upload_time": "2022-02-16T12:53:01",
        "upload_time_iso_8601": "2022-02-16T12:53:01.809383Z",
        "url": "https://files.pythonhosted.org/packages/fc/6f/5a13daf09d860ca90d85eb7f3e42a8cecc8e2c3fd0a84c1cde6bbb7acbd1/vppopt-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "26fcad044c76113dda0b7c2336390d48210c042491a8d9e4f5f09d761c5b3435",
        "md5": "b69a4ec177d979af90b158ce71907eb0",
        "sha256": "4de9a5700620b9786f0817e0d5ba536812cd83327d74d87f877df6ba726580de"
      },
      "downloads": -1,
      "filename": "vppopt-0.1.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b69a4ec177d979af90b158ce71907eb0",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.6.0",
      "size": 21715,
      "upload_time": "2022-02-16T12:53:00",
      "upload_time_iso_8601": "2022-02-16T12:53:00.208379Z",
      "url": "https://files.pythonhosted.org/packages/26/fc/ad044c76113dda0b7c2336390d48210c042491a8d9e4f5f09d761c5b3435/vppopt-0.1.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fc6f5a13daf09d860ca90d85eb7f3e42a8cecc8e2c3fd0a84c1cde6bbb7acbd1",
        "md5": "f7c5f12e455d30bcde87dfe329d4bde9",
        "sha256": "6e5dbb181822e3a324f546b677945fa516bbd5f4f65d55570dc9f05feac0758b"
      },
      "downloads": -1,
      "filename": "vppopt-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "f7c5f12e455d30bcde87dfe329d4bde9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.0",
      "size": 627495,
      "upload_time": "2022-02-16T12:53:01",
      "upload_time_iso_8601": "2022-02-16T12:53:01.809383Z",
      "url": "https://files.pythonhosted.org/packages/fc/6f/5a13daf09d860ca90d85eb7f3e42a8cecc8e2c3fd0a84c1cde6bbb7acbd1/vppopt-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}