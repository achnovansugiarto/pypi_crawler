{
  "info": {
    "author": "Idan Morad",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: tox",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "# Data Science Utils: Frequently Used Methods for Data Science\n[![License: MIT](https://img.shields.io/github/license/idanmoradarthas/DataScienceUtils)](https://opensource.org/licenses/MIT)\n![GitHub release (latest SemVer)](https://img.shields.io/github/v/release/idanmoradarthas/DataScienceUtils)\n[![GitHub issues](https://img.shields.io/github/issues/idanmoradarthas/DataScienceUtils)](https://github.com/idanmoradarthas/DataScienceUtils/issues)\n[![Documentation Status](https://readthedocs.org/projects/datascienceutils/badge/?version=latest)](https://datascienceutils.readthedocs.io/en/latest/?badge=latest)\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/data-science-utils)\n![PyPI - Wheel](https://img.shields.io/pypi/wheel/data-science-utils)\n[![PyPI version](https://badge.fury.io/py/data-science-utils.svg)](https://badge.fury.io/py/data-science-utils)\n[![Anaconda-Server Badge](https://anaconda.org/idanmorad/data-science-utils/badges/version.svg)](https://anaconda.org/idanmorad/data-science-utils)\n[![Build Status](https://travis-ci.org/idanmoradarthas/DataScienceUtils.svg?branch=master)](https://travis-ci.org/idanmoradarthas/DataScienceUtils)\n[![Coverage Status](https://coveralls.io/repos/github/idanmoradarthas/DataScienceUtils/badge.svg?branch=master)](https://coveralls.io/github/idanmoradarthas/DataScienceUtils?branch=master)\n\n\nData Science Utils extends the Scikit-Learn API and Matplotlib API to provide simple methods that simplify task and \nvisualization over data. \n\n# Code Examples and Documentation\n**Let's see some code examples and outputs.** \n\n**You can read the full documentation with all the code examples from:\n[https://datascienceutils.readthedocs.io/en/latest/](https://datascienceutils.readthedocs.io/en/latest/)**\n\nIn the documentation you can find more methods and more examples.\n\nThe API of the package is build to work with Scikit-Learn API and Matplotlib API. Here are some of capabilities of this\npackage:\n\n## Metrics\n### Plot Confusion Matrix\nComputes and plot confusion matrix, False Positive Rate, False Negative Rate, Accuracy and F1 score of a classification.\n\n```python\nfrom ds_utils.metrics import plot_confusion_matrix\n\n\n\nplot_confusion_matrix(y_test, y_pred, [0, 1, 2])\n```\n\n![multi label classification confusion matrix](https://raw.githubusercontent.com/idanmoradarthas/DataScienceUtils/master/tests/baseline_images/test_metrics/test_print_confusion_matrix.png)\n\n### Plot Metric Growth per Labeled Instances\n\nReceives a train and test sets, and plots given metric change in increasing amount of trained instances.\n\n```python\nfrom ds_utils.metrics import plot_metric_growth_per_labeled_instances\n\n\n\nplot_metric_growth_per_labeled_instances(x_train, y_train, x_test, y_test,\n                                             {\"DecisionTreeClassifier\":\n                                                DecisionTreeClassifier(random_state=0),\n                                              \"RandomForestClassifier\":\n                                                RandomForestClassifier(random_state=0, n_estimators=5)})\n```\n\n![metric growth per labeled instances with n samples](https://raw.githubusercontent.com/idanmoradarthas/DataScienceUtils/master/tests/baseline_images/test_metrics/test_plot_metric_growth_per_labeled_instances_with_n_samples.png)\n\n### Visualize Accuracy Grouped by Probability\n\nReceives test true labels and classifier probabilities predictions, divide and classify the results and finally\nplots a stacked bar chart with the results. [Original code](https://github.com/EthicalML/XAI)\n\n```python\nfrom ds_utils.metrics import visualize_accuracy_grouped_by_probability\n\n\nvisualize_accuracy_grouped_by_probability(test[\"target\"], 1, \n                                          classifier.predict_proba(test[selected_features]),\n                                          display_breakdown=False)\n```\n\nWithout breakdown:\n\n![visualize_accuracy_grouped_by_probability](https://raw.githubusercontent.com/idanmoradarthas/DataScienceUtils/master/tests/baseline_images/test_metrics/test_visualize_accuracy_grouped_by_probability.png)\n\nWith breakdown:\n\n![visualize_accuracy_grouped_by_probability_with_breakdown](https://raw.githubusercontent.com/idanmoradarthas/DataScienceUtils/master/tests/baseline_images/test_metrics/test_visualize_accuracy_grouped_by_probability_with_breakdown.png)\n\n## Preprocess\n### Visualize Feature\n\nReceives a feature and visualize its values on a graph:\n\n* If the feature is float then the method plots the distribution plot.\n* If the feature is datetime then the method plots a line plot of progression of amount thought time.\n* If the feature is object, categorical, boolean or integer then the method plots count plot (histogram).\n\n```python\nfrom ds_utils.preprocess import visualize_feature\n\n\n\nvisualize_feature(X_train[\"feature\"])\n```\n\n|Feature Type      |Plot|\n|------------------|----|\n|Float             |![](https://raw.githubusercontent.com/idanmoradarthas/DataScienceUtils/master/tests/baseline_images/test_visualization_aids/test_visualize_feature_float.png)|\n|Integer           |![](https://raw.githubusercontent.com/idanmoradarthas/DataScienceUtils/master/tests/baseline_images/test_visualization_aids/test_visualize_feature_int.png)|\n|Datetime          |![](https://raw.githubusercontent.com/idanmoradarthas/DataScienceUtils/master/tests/baseline_images/test_visualization_aids/test_visualize_feature_datetime.png)|\n|Category / Object |![](https://raw.githubusercontent.com/idanmoradarthas/DataScienceUtils/master/tests/baseline_images/test_visualization_aids/test_visualize_feature_category_more_than_10_categories.png)|\n|Boolean           |![](https://raw.githubusercontent.com/idanmoradarthas/DataScienceUtils/master/tests/baseline_images/test_visualization_aids/test_visualize_feature_bool.png)|\n\n### Get Correlated Features\n\nCalculate which features correlated above a threshold and extract a data frame with the correlations and correlation to \nthe target feature.\n\n```python\nfrom ds_utils.preprocess import get_correlated_features\n\n\n\ncorrelations = get_correlated_features(train, features, target)\n```\n\n|level_0               |level_1               |level_0_level_1_corr|level_0_target_corr|level_1_target_corr|\n|----------------------|----------------------|--------------------|-------------------|-------------------|\n|income_category_Low   |income_category_Medium| 1.0                | 0.1182165609358650|0.11821656093586504|\n|term\\_ 36 months      |term\\_ 60 months      | 1.0                | 0.1182165609358650|0.11821656093586504|\n|interest_payments_High|interest_payments_Low | 1.0                | 0.1182165609358650|0.11821656093586504|\n\n### Visualize Correlations\nCompute pairwise correlation of columns, excluding NA/null values, and visualize it with heat map.\n[Original code](https://seaborn.pydata.org/examples/many_pairwise_correlations.html)\n\n```python\nfrom ds_utils.preprocess import visualize_correlations\n\n\n\nvisualize_correlations(data)\n```\n\n![visualize features](https://raw.githubusercontent.com/idanmoradarthas/DataScienceUtils/master/tests/baseline_images/test_visualization_aids/test_visualize_correlations.png)\n\n### Plot Correlation Dendrogram\nPlot dendrogram of a correlation matrix. This consists of a chart that that shows hierarchically the variables that are \nmost correlated by the connecting trees. The closer to the right that the connection is, the more correlated the \nfeatures are. [Original code](https://github.com/EthicalML/XAI)\n\n```python\nfrom ds_utils.preprocess import plot_correlation_dendrogram\n\n\n\nplot_correlation_dendrogram(data)\n```\n\n![plot correlation dendrogram](https://raw.githubusercontent.com/idanmoradarthas/DataScienceUtils/master/tests/baseline_images/test_visualization_aids/test_plot_correlation_dendrogram.png)\n\n### Plot Features' Interaction\nPlots the joint distribution between two features:\n* If both features are either categorical, boolean or object then the method plots the shared histogram.\n* If one feature is either categorical, boolean or object and the other is numeric then the method plots a boxplot chart.\n* If one feature is datetime and the other is numeric or datetime then the method plots a line plot graph.\n* If one feature is datetime and the other is either categorical, boolean or object the method plots a violin plot (combination of boxplot and kernel density estimate).\n* If both features are numeric then the method plots scatter graph.\n\n```python\nfrom ds_utils.preprocess import plot_features_interaction\n\n\n\nplot_features_interaction(\"feature_1\", \"feature_2\", data)\n```\n\n|               | Numeric | Categorical | Boolean | Datetime\n|---------------|---------|-------------|---------|---------|\n|**Numeric**    |![](https://raw.githubusercontent.com/idanmoradarthas/DataScienceUtils/master/tests/baseline_images/test_visualization_aids/test_plot_relationship_between_features_both_numeric.png)| | | |\n|**Categorical**|![](https://raw.githubusercontent.com/idanmoradarthas/DataScienceUtils/master/tests/baseline_images/test_visualization_aids/test_plot_relationship_between_features_numeric_categorical.png)|![](https://raw.githubusercontent.com/idanmoradarthas/DataScienceUtils/master/tests/baseline_images/test_visualization_aids/test_plot_relationship_between_features_both_categorical.png)| | |\n|**Boolean**    |![](https://raw.githubusercontent.com/idanmoradarthas/DataScienceUtils/master/tests/baseline_images/test_visualization_aids/test_plot_relationship_between_features_numeric_boolean.png)|![](https://raw.githubusercontent.com/idanmoradarthas/DataScienceUtils/master/tests/baseline_images/test_visualization_aids/test_plot_relationship_between_features_categorical_bool.png)|![](https://raw.githubusercontent.com/idanmoradarthas/DataScienceUtils/master/tests/baseline_images/test_visualization_aids/test_plot_relationship_between_features_both_bool.png)| |\n|**Datetime**   |![](https://raw.githubusercontent.com/idanmoradarthas/DataScienceUtils/master/tests/baseline_images/test_visualization_aids/test_plot_relationship_between_features_datetime_numeric.png)|![](https://raw.githubusercontent.com/idanmoradarthas/DataScienceUtils/master/tests/baseline_images/test_visualization_aids/test_plot_relationship_between_features_datetime_categorical.png)|![](https://raw.githubusercontent.com/idanmoradarthas/DataScienceUtils/master/tests/baseline_images/test_visualization_aids/test_plot_relationship_between_features_datetime_bool.png)|![](https://raw.githubusercontent.com/idanmoradarthas/DataScienceUtils/master/tests/baseline_images/test_visualization_aids/test_plot_relationship_between_features_datetime_datetime.png)|\n\n## Strings\n### Append Tags to Frame\n\nExtracts tags from a given field and append them as dataframe.\n\nA dataset that looks like this:\n\n``x_train``:\n\n|article_name|article_tags|\n|------------|------------|\n|1           |ds,ml,dl    |\n|2           |ds,ml       |\n\n``x_test``:\n\n|article_name|article_tags|\n|------------|------------|\n|3           |ds,ml,py    |\n\nUsing this code:\n```python\nimport pandas\n\nfrom ds_utils.strings import append_tags_to_frame\n\n\nx_train = pandas.DataFrame([{\"article_name\": \"1\", \"article_tags\": \"ds,ml,dl\"},\n                             {\"article_name\": \"2\", \"article_tags\": \"ds,ml\"}])\nx_test = pandas.DataFrame([{\"article_name\": \"3\", \"article_tags\": \"ds,ml,py\"}])\n\nx_train_with_tags, x_test_with_tags = append_tags_to_frame(x_train, x_test, \"article_tags\", \"tag_\")\n```\n\nwill be parsed into this:\n\n``x_train_with_tags``:\n\n|article_name|tag_ds|tag_ml|tag_dl|\n|------------|------|------|------|\n|1           |1     |1     |1     |\n|2           |1     |1     |0     |\n\n``x_test_with_tags``:\n\n|article_name|tag_ds|tag_ml|tag_dl|\n|------------|------|------|------|\n|3           |1     |1     |0     |\n\n### Extract Significant Terms from Subset\nReturns interesting or unusual occurrences of terms in a subset. Based on the [elasticsearch significant_text aggregation](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-significantterms-aggregation.html#_scripted).\n\n```python\nimport pandas\n\nfrom ds_utils.strings import extract_significant_terms_from_subset\n\ncorpus = ['This is the first document.', 'This document is the second document.',\n          'And this is the third one.', 'Is this the first document?']\ndata_frame = pandas.DataFrame(corpus, columns=[\"content\"])\n# Let's differentiate between the last two documents from the full corpus\nsubset_data_frame = data_frame[data_frame.index > 1]\nterms = extract_significant_terms_from_subset(data_frame, subset_data_frame, \n                                               \"content\")\n\n```\nAnd the following table will be the output for ``terms``:\n\n|third|one|and|this|the |is  |first|document|second|\n|-----|---|---|----|----|----|-----|--------|------|\n|1.0  |1.0|1.0|0.67|0.67|0.67|0.5  |0.25    |0.0   |\n\n## Unsupervised\n### Cluster Cardinality\nCluster cardinality is the number of examples per cluster. This method plots the number of points per cluster as a bar \nchart.\n\n```python\nimport pandas\nfrom matplotlib import pyplot\nfrom sklearn.cluster import KMeans\n\nfrom ds_utils.unsupervised import plot_cluster_cardinality\n\n\ndata = pandas.read_csv(path/to/dataset)\nestimator = KMeans(n_clusters=8, random_state=42)\nestimator.fit(data)\n\nplot_cluster_cardinality(estimator.labels_)\n\npyplot.show()\n```\n![Cluster Cardinality](https://raw.githubusercontent.com/idanmoradarthas/DataScienceUtils/master/tests/baseline_images/test_unsupervised/test_cluster_cardinality.png)\n\n### Plot Cluster Magnitude\nCluster magnitude is the sum of distances from all examples to the centroid of the cluster. This method plots the \nTotal Point-to-Centroid Distance per cluster as a bar chart.\n\n```python\nimport pandas\nfrom matplotlib import pyplot\nfrom sklearn.cluster import KMeans\nfrom scipy.spatial.distance import euclidean\n\nfrom ds_utils.unsupervised import plot_cluster_magnitude\n\ndata = pandas.read_csv(path/to/dataset)\nestimator = KMeans(n_clusters=8, random_state=42)\nestimator.fit(data)\n\nplot_cluster_magnitude(data, estimator.labels_, estimator.cluster_centers_, euclidean)\n\npyplot.show()\n```\n![Plot Cluster Magnitude](https://raw.githubusercontent.com/idanmoradarthas/DataScienceUtils/master/tests/baseline_images/test_unsupervised/test_plot_cluster_magnitude.png)\n\n### Magnitude vs. Cardinality\nHigher cluster cardinality tends to result in a higher cluster magnitude, which intuitively makes sense. Clusters\nare anomalous when cardinality doesn't correlate with magnitude relative to the other clusters. Find anomalous \nclusters by plotting magnitude against cardinality as a scatter plot.\n```python\nimport pandas\nfrom matplotlib import pyplot\nfrom sklearn.cluster import KMeans\nfrom scipy.spatial.distance import euclidean\n\nfrom ds_utils.unsupervised import plot_magnitude_vs_cardinality\n\ndata = pandas.read_csv(path/to/dataset)\nestimator = KMeans(n_clusters=8, random_state=42)\nestimator.fit(data)\n\nplot_magnitude_vs_cardinality(data, estimator.labels_, estimator.cluster_centers_, euclidean)\n\npyplot.show()\n```\n![Magnitude vs. Cardinality](https://raw.githubusercontent.com/idanmoradarthas/DataScienceUtils/master/tests/baseline_images/test_unsupervised/test_plot_magnitude_vs_cardinality.png)\n\n### Optimum Number of Clusters\nk-means requires you to decide the number of clusters ``k`` beforehand. This method runs the KMean algorithm and \nincreases the cluster number at each try. The Total magnitude or sum of distance is used as loss.\n\nRight now the method only works with ``sklearn.cluster.KMeans``.\n\n```python\nimport pandas\n\nfrom matplotlib import pyplot\nfrom scipy.spatial.distance import euclidean\n\nfrom ds_utils.unsupervised import plot_loss_vs_cluster_number\n\n\n\ndata = pandas.read_csv(path/to/dataset)\n\nplot_loss_vs_cluster_number(data, 3, 20, euclidean)\n\npyplot.show()\n```\n![Optimum Number of Clusters](https://raw.githubusercontent.com/idanmoradarthas/DataScienceUtils/master/tests/baseline_images/test_unsupervised/test_plot_loss_vs_cluster_number.png)\n\n## XAI\n### Generate Decision Paths\nReceives a decision tree and return the underlying decision-rules (or 'decision paths') as text (valid python syntax). \n[Original code](https://stackoverflow.com/questions/20224526/how-to-extract-the-decision-rules-from-scikit-learn-decision-tree)\n\n```python\nfrom sklearn.tree import DecisionTreeClassifier\n\nfrom ds_utils.xai import generate_decision_paths\n    \n\n# Create decision tree classifier object\nclf = DecisionTreeClassifier(max_depth=3)\n\n# Train model\nclf.fit(x, y)\nprint(generate_decision_paths(clf, feature_names, target_names.tolist(), \n                              \"iris_tree\"))\n```\nThe following text will be printed:\n```\ndef iris_tree(petal width (cm), petal length (cm)):\n    if petal width (cm) <= 0.8000:\n        # return class setosa with probability 0.9804\n        return (\"setosa\", 0.9804)\n    else:  # if petal width (cm) > 0.8000\n        if petal width (cm) <= 1.7500:\n            if petal length (cm) <= 4.9500:\n                # return class versicolor with probability 0.9792\n                return (\"versicolor\", 0.9792)\n            else:  # if petal length (cm) > 4.9500\n                # return class virginica with probability 0.6667\n                return (\"virginica\", 0.6667)\n        else:  # if petal width (cm) > 1.7500\n            if petal length (cm) <= 4.8500:\n                # return class virginica with probability 0.6667\n                return (\"virginica\", 0.6667)\n            else:  # if petal length (cm) > 4.8500\n                # return class virginica with probability 0.9773\n                return (\"virginica\", 0.9773)\n```\n\n## Plot Features` Importance\n\nplot feature importance as a bar chart.\n\n```python\nimport pandas\n\nfrom matplotlib import pyplot\nfrom sklearn.tree import DecisionTreeClassifier\n\nfrom ds_utils.xai import plot_features_importance\n\n\ndata = pandas.read_csv(path/to/dataset)\ntarget = data[\"target\"]\nfeatures = data.columns.to_list()\nfeatures.remove(\"target\")\n\nclf = DecisionTreeClassifier(random_state=42)\nclf.fit(data[features], target)\nplot_features_importance(features, clf.feature_importances_)\n\npyplot.show()\n```\n![Plot Features Importance](https://raw.githubusercontent.com/idanmoradarthas/DataScienceUtils/master/tests/baseline_images/test_xai/test_plot_features_importance.png)\n\nExcited?\n\nRead about all the modules here and see more abilities: \n* [Metrics](https://datascienceutils.readthedocs.io/en/latest/metrics.html) - The module of metrics contains methods that help to calculate and/or visualize evaluation performance of an algorithm.\n* [Preprocess](https://datascienceutils.readthedocs.io/en/latest/preprocess.html) - The module of preprocess contains methods that are processes that could be made to data before training.\n* [Strings](https://datascienceutils.readthedocs.io/en/latest/strings.html) - The module of strings contains methods that help manipulate and process strings in a dataframe.\n* [Unsupervised](https://datascienceutils.readthedocs.io/en/latest/unsupervised.html) - The module od unsupervised contains methods that calculate and/or visualize evaluation performance of an unsupervised model.\n* [XAI](https://datascienceutils.readthedocs.io/en/latest/xai.html) - The module of xai contains methods that help explain a model decisions.\n\n## Contributing\nInterested in contributing to Data Science Utils? Great! You're welcome,  and we would love to have you. We follow \nthe [Python Software Foundation Code of Conduct](http://www.python.org/psf/codeofconduct/) and \n[Matplotlib Usage Guide](https://matplotlib.org/tutorials/introductory/usage.html#coding-styles).\n\nNo matter your level of technical skill, you can be helpful. We appreciate bug reports, user testing, feature \nrequests, bug fixes, product enhancements, and documentation improvements.\n\nThank you for your contributions!\n\n## Find a Bug?\nCheck if there's already an open [issue](https://github.com/idanmoradarthas/DataScienceUtils/issues) on the topic. If \nneeded, file an issue.\n\n## Open Source\nData Science Utils license is [MIT License](https://opensource.org/licenses/MIT). \n\n## Installing Data Science Utils\nData Science Utils is compatible with Python 3.6 or later. The simplest way to install Data Science Utils and its \ndependencies is from PyPI with pip, Python's preferred package installer:\n```bash\npip install data-science-utils\n```\nNote that this package is an active project and routinely publishes new releases with more methods.  In order to \nupgrade Data Science Utils to the latest version, use pip as follows:\n```bash\npip install -U data-science-utils\n```\nAlternatively you can install from source by cloning the repo and running:\n```bash\ngit clone https://github.com/idanmoradarthas/DataScienceUtils.git\ncd DataScienceUtils\npython setup.py install\n```\nOr install using pip from source:\n```bash\npip install git+https://github.com/idanmoradarthas/DataScienceUtils.git\n```\nIf you're using Anaconda, you can install using conda:\n```bash\nconda install -c idanmorad data-science-utils\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/idanmoradarthas/DataScienceUtils/releases/download/1.7.1/data_science_utils-1.7.1.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://datascienceutils.readthedocs.io/en/latest/",
    "keywords": "data-science utilities python machine-learning scikit-learn matplotlib",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "data-science-utils",
    "package_url": "https://pypi.org/project/data-science-utils/",
    "platform": "",
    "project_url": "https://pypi.org/project/data-science-utils/",
    "project_urls": {
      "Download": "https://github.com/idanmoradarthas/DataScienceUtils/releases/download/1.7.1/data_science_utils-1.7.1.tar.gz",
      "Homepage": "https://datascienceutils.readthedocs.io/en/latest/"
    },
    "release_url": "https://pypi.org/project/data-science-utils/1.7.1/",
    "requires_dist": [
      "numpy (>=1.3)",
      "scipy (>=1.0.0)",
      "pandas (>=0.23.0)",
      "matplotlib (>2.02)",
      "seaborn (>=0.8.0)",
      "scikit-learn (>=1.0.0)",
      "pydotplus (>=2.0.2)",
      "joblib (>=0.12)"
    ],
    "requires_python": ">=3.6",
    "summary": "This project is an ensemble of methods which are frequently used in python Data Science projects.",
    "version": "1.7.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13034178,
  "releases": {
    "1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bc2f0037e5479a389b34f9842fd4b307691bc13c0132837b609c040d7ccdcf6e",
          "md5": "47a54729b4f7c7b44d96f33c98052c13",
          "sha256": "681610e3d53d0c0ad289f9ee1fc4b416e2e52a5102ef6cc4a30dbcdba2ec8aa5"
        },
        "downloads": -1,
        "filename": "data_science_utils-1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "47a54729b4f7c7b44d96f33c98052c13",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10731,
        "upload_time": "2019-12-26T12:39:42",
        "upload_time_iso_8601": "2019-12-26T12:39:42.573658Z",
        "url": "https://files.pythonhosted.org/packages/bc/2f/0037e5479a389b34f9842fd4b307691bc13c0132837b609c040d7ccdcf6e/data_science_utils-1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b3b68d9f154db43047734d7f2d2190927f94981ff906c9e8f9b03b275d4802b8",
          "md5": "25a09a9f163cf6b4127fe5fc94097858",
          "sha256": "a1096843688568a591f6c4138e8c5acd53e53a7b3bb5a45bcac513afeb73ba09"
        },
        "downloads": -1,
        "filename": "data_science_utils-1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "25a09a9f163cf6b4127fe5fc94097858",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10866,
        "upload_time": "2019-12-26T12:39:45",
        "upload_time_iso_8601": "2019-12-26T12:39:45.238023Z",
        "url": "https://files.pythonhosted.org/packages/b3/b6/8d9f154db43047734d7f2d2190927f94981ff906c9e8f9b03b275d4802b8/data_science_utils-1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "45e6d5e3008cae6339f49941bb156db52126ee44a5338e28bfde2f1c3d9a1972",
          "md5": "c962b94dc4bfc4b186b00b2c870c8aab",
          "sha256": "841389c400d94c3be6b8fd314c22228c4345ea3dcb94effb61ced7eb2d0d4009"
        },
        "downloads": -1,
        "filename": "data_science_utils-1.4.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c962b94dc4bfc4b186b00b2c870c8aab",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10815,
        "upload_time": "2019-12-26T12:57:04",
        "upload_time_iso_8601": "2019-12-26T12:57:04.661333Z",
        "url": "https://files.pythonhosted.org/packages/45/e6/d5e3008cae6339f49941bb156db52126ee44a5338e28bfde2f1c3d9a1972/data_science_utils-1.4.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6e5b7b4e74081978bbd89e3cf7dd5d39e37a0131d2a7be35ecebe067bc2b075b",
          "md5": "abd474cf65c9f06630cee0edcb0188dc",
          "sha256": "cd1df35e6456262981200a1bd59e5c13d00ae55efe3f2f6eb358adac8555b59b"
        },
        "downloads": -1,
        "filename": "data_science_utils-1.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "abd474cf65c9f06630cee0edcb0188dc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11012,
        "upload_time": "2019-12-26T12:57:06",
        "upload_time_iso_8601": "2019-12-26T12:57:06.590829Z",
        "url": "https://files.pythonhosted.org/packages/6e/5b/7b4e74081978bbd89e3cf7dd5d39e37a0131d2a7be35ecebe067bc2b075b/data_science_utils-1.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "faea3baefd84972f333b723dc4197a65ee6936d1a77209ca07819e2e88542e23",
          "md5": "d60d5dbf777cf5ce623ad392d7f2bd53",
          "sha256": "2b014e618a545689d2fad45a28ee56158f66cc5f9a138b24cd5ba14e0a22e25d"
        },
        "downloads": -1,
        "filename": "data_science_utils-1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d60d5dbf777cf5ce623ad392d7f2bd53",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 13531,
        "upload_time": "2020-01-08T08:30:09",
        "upload_time_iso_8601": "2020-01-08T08:30:09.393913Z",
        "url": "https://files.pythonhosted.org/packages/fa/ea/3baefd84972f333b723dc4197a65ee6936d1a77209ca07819e2e88542e23/data_science_utils-1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ed46008ee34d6a4d1140152b7a5c8ffc2f7427b54e2c2ac5c0631040c9f01146",
          "md5": "e83c4b10364841869d20e0421764a121",
          "sha256": "345325b895a47ab93e2d9bf6bad394bfffa0e0bf0027ca459dcfee0cc48de172"
        },
        "downloads": -1,
        "filename": "data_science_utils-1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "e83c4b10364841869d20e0421764a121",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 15394,
        "upload_time": "2020-01-08T08:30:10",
        "upload_time_iso_8601": "2020-01-08T08:30:10.773462Z",
        "url": "https://files.pythonhosted.org/packages/ed/46/008ee34d6a4d1140152b7a5c8ffc2f7427b54e2c2ac5c0631040c9f01146/data_science_utils-1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6609e5459f1a44e033f3e8e01548fd0b69d3107939242a422f7fedaaf48ddad9",
          "md5": "94af4b6bebeda2648bee24cead482ac0",
          "sha256": "10b209602919e10912a1374725e886ce5ee0796e75b306e95f8d982a658b532f"
        },
        "downloads": -1,
        "filename": "data_science_utils-1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "94af4b6bebeda2648bee24cead482ac0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 15117,
        "upload_time": "2020-06-14T09:33:47",
        "upload_time_iso_8601": "2020-06-14T09:33:47.753299Z",
        "url": "https://files.pythonhosted.org/packages/66/09/e5459f1a44e033f3e8e01548fd0b69d3107939242a422f7fedaaf48ddad9/data_science_utils-1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "667bf14976edceceea0683757ad3de0a61eff9be40975be23de6dbebd52dc51b",
          "md5": "10ac15167f2f8f850fbc3c1b7cd29ab9",
          "sha256": "822a8fa970a4bcc9d6aec899ca01012e708e2ffed35af1e85cae063b571cf817"
        },
        "downloads": -1,
        "filename": "data_science_utils-1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "10ac15167f2f8f850fbc3c1b7cd29ab9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13899,
        "upload_time": "2020-06-14T09:33:49",
        "upload_time_iso_8601": "2020-06-14T09:33:49.189631Z",
        "url": "https://files.pythonhosted.org/packages/66/7b/f14976edceceea0683757ad3de0a61eff9be40975be23de6dbebd52dc51b/data_science_utils-1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a69dee0db996eb582bbb17fe1a2cc257ce6fa52944fa50cf6f531028169ec00f",
          "md5": "25f68b0705556dae62ce66e04a8982fc",
          "sha256": "63ff680003f91832a279b3183d17516c2adc5da9a48df684747a75cabb541ccf"
        },
        "downloads": -1,
        "filename": "data_science_utils-1.6.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "25f68b0705556dae62ce66e04a8982fc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 17626,
        "upload_time": "2020-06-21T12:07:17",
        "upload_time_iso_8601": "2020-06-21T12:07:17.177980Z",
        "url": "https://files.pythonhosted.org/packages/a6/9d/ee0db996eb582bbb17fe1a2cc257ce6fa52944fa50cf6f531028169ec00f/data_science_utils-1.6.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1cce530c83ad4f2c6c4282369d4e7469d6b299befcf3e935e4179461e8b7bdce",
          "md5": "5bfbad4e72782491e2f0b05c2e8cc6f4",
          "sha256": "00618e782389dbe9274b3a0a595c9275c59c200af97c99cd93f62ad5ba40b0a0"
        },
        "downloads": -1,
        "filename": "data_science_utils-1.6.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5bfbad4e72782491e2f0b05c2e8cc6f4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17767,
        "upload_time": "2020-06-21T12:07:18",
        "upload_time_iso_8601": "2020-06-21T12:07:18.762622Z",
        "url": "https://files.pythonhosted.org/packages/1c/ce/530c83ad4f2c6c4282369d4e7469d6b299befcf3e935e4179461e8b7bdce/data_science_utils-1.6.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5962c6c28b33d055f25c71fac9066d4ef123861cdf9b24c3325e3da2b136f941",
          "md5": "fe0b67b665acf0d05228f1e2744b4e7c",
          "sha256": "51d7cb52f5ee94df70c248d713212816928ac84cad16cb221288865b77cd1074"
        },
        "downloads": -1,
        "filename": "data_science_utils-1.6.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fe0b67b665acf0d05228f1e2744b4e7c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 18569,
        "upload_time": "2020-07-02T13:30:43",
        "upload_time_iso_8601": "2020-07-02T13:30:43.482246Z",
        "url": "https://files.pythonhosted.org/packages/59/62/c6c28b33d055f25c71fac9066d4ef123861cdf9b24c3325e3da2b136f941/data_science_utils-1.6.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "43d5555ccbb5afb403634dfd9f68007dfe27e8d98b69ffaea3b0b203be5abb48",
          "md5": "10a7a704fce74248aae55f26ce8ac456",
          "sha256": "296a2fb50cdf0a6dc466fc64dde33f5d3c7234f81a72bca76a5d9c865633322f"
        },
        "downloads": -1,
        "filename": "data_science_utils-1.6.2.tar.gz",
        "has_sig": false,
        "md5_digest": "10a7a704fce74248aae55f26ce8ac456",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 18905,
        "upload_time": "2020-07-02T13:30:48",
        "upload_time_iso_8601": "2020-07-02T13:30:48.465875Z",
        "url": "https://files.pythonhosted.org/packages/43/d5/555ccbb5afb403634dfd9f68007dfe27e8d98b69ffaea3b0b203be5abb48/data_science_utils-1.6.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "38a399803767986397fe8f120b8a917cf8003f2527290ec5de28d7a7db9c2d2d",
          "md5": "bf0fde1cd07c15f06989c25ae334070b",
          "sha256": "261228a498c1b9932c44f9712a50261d363576058c5c41d54b4f3be5f813d1ad"
        },
        "downloads": -1,
        "filename": "data_science_utils-1.6.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bf0fde1cd07c15f06989c25ae334070b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 18480,
        "upload_time": "2020-07-09T06:13:21",
        "upload_time_iso_8601": "2020-07-09T06:13:21.618733Z",
        "url": "https://files.pythonhosted.org/packages/38/a3/99803767986397fe8f120b8a917cf8003f2527290ec5de28d7a7db9c2d2d/data_science_utils-1.6.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "73b3f1461a156809dd470a9ad29dd34bacdf49a80b8c2e94d3f0ea53513e7e87",
          "md5": "50f7b82999bb5ba4a7f2444962bfa4c7",
          "sha256": "5a87bb00358853247783a80a3c7d6cef2f32a4df1fab2e0175b150ead72dd4a8"
        },
        "downloads": -1,
        "filename": "data_science_utils-1.6.3.tar.gz",
        "has_sig": false,
        "md5_digest": "50f7b82999bb5ba4a7f2444962bfa4c7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19328,
        "upload_time": "2020-07-09T06:13:23",
        "upload_time_iso_8601": "2020-07-09T06:13:23.277643Z",
        "url": "https://files.pythonhosted.org/packages/73/b3/f1461a156809dd470a9ad29dd34bacdf49a80b8c2e94d3f0ea53513e7e87/data_science_utils-1.6.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e1198a2bbb399665e69d6d7bcc76671f39a292e2199832dcf80c234a23cfbb9d",
          "md5": "bccc3da36265ec2ebb177ee7f0224121",
          "sha256": "b408e729d332c8d0b8d81371635f2c1212bcc134307abb3112946b453c233ba0"
        },
        "downloads": -1,
        "filename": "data_science_utils-1.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bccc3da36265ec2ebb177ee7f0224121",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 21445,
        "upload_time": "2020-09-16T06:53:54",
        "upload_time_iso_8601": "2020-09-16T06:53:54.922936Z",
        "url": "https://files.pythonhosted.org/packages/e1/19/8a2bbb399665e69d6d7bcc76671f39a292e2199832dcf80c234a23cfbb9d/data_science_utils-1.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2795fb435b5dc3ef6579c3f9a7d7ca2bdd4860b62f85ef66a1b8aed953b5458d",
          "md5": "bf71bd288c38a9b3d4e9e0067e9ace93",
          "sha256": "0d60ef37af0253317dddd96cf6b19e70a0fff59c53c083407daa2e4d693b0dc0"
        },
        "downloads": -1,
        "filename": "data_science_utils-1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "bf71bd288c38a9b3d4e9e0067e9ace93",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 22302,
        "upload_time": "2020-09-16T06:53:56",
        "upload_time_iso_8601": "2020-09-16T06:53:56.476912Z",
        "url": "https://files.pythonhosted.org/packages/27/95/fb435b5dc3ef6579c3f9a7d7ca2bdd4860b62f85ef66a1b8aed953b5458d/data_science_utils-1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.7.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "66f0fa6f01a3925cd9f1cdd3c48378e5f1b8379310db3279d0b004e87a55cab8",
          "md5": "58b0dc655c36597a3955621ff07aeb7e",
          "sha256": "1e2be365cb47fd82057e5dd9cae7c86f42bd3897cebadfd1d7d6ef9fe2fc21a7"
        },
        "downloads": -1,
        "filename": "data_science_utils-1.7.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "58b0dc655c36597a3955621ff07aeb7e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 21622,
        "upload_time": "2022-02-28T14:39:33",
        "upload_time_iso_8601": "2022-02-28T14:39:33.976485Z",
        "url": "https://files.pythonhosted.org/packages/66/f0/fa6f01a3925cd9f1cdd3c48378e5f1b8379310db3279d0b004e87a55cab8/data_science_utils-1.7.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d52a89618aca30b7cd779d38a5ee0b6a2371fbbf74401f571db79fed252f0f6e",
          "md5": "0ac95472c2de6e90928a209973642065",
          "sha256": "ae46411d506e4cb5c8637e490aa3017719d8196801faa2bfa3e1e54446c37f73"
        },
        "downloads": -1,
        "filename": "data_science_utils-1.7.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0ac95472c2de6e90928a209973642065",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 20700,
        "upload_time": "2022-02-28T14:39:35",
        "upload_time_iso_8601": "2022-02-28T14:39:35.912883Z",
        "url": "https://files.pythonhosted.org/packages/d5/2a/89618aca30b7cd779d38a5ee0b6a2371fbbf74401f571db79fed252f0f6e/data_science_utils-1.7.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "66f0fa6f01a3925cd9f1cdd3c48378e5f1b8379310db3279d0b004e87a55cab8",
        "md5": "58b0dc655c36597a3955621ff07aeb7e",
        "sha256": "1e2be365cb47fd82057e5dd9cae7c86f42bd3897cebadfd1d7d6ef9fe2fc21a7"
      },
      "downloads": -1,
      "filename": "data_science_utils-1.7.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "58b0dc655c36597a3955621ff07aeb7e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 21622,
      "upload_time": "2022-02-28T14:39:33",
      "upload_time_iso_8601": "2022-02-28T14:39:33.976485Z",
      "url": "https://files.pythonhosted.org/packages/66/f0/fa6f01a3925cd9f1cdd3c48378e5f1b8379310db3279d0b004e87a55cab8/data_science_utils-1.7.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d52a89618aca30b7cd779d38a5ee0b6a2371fbbf74401f571db79fed252f0f6e",
        "md5": "0ac95472c2de6e90928a209973642065",
        "sha256": "ae46411d506e4cb5c8637e490aa3017719d8196801faa2bfa3e1e54446c37f73"
      },
      "downloads": -1,
      "filename": "data_science_utils-1.7.1.tar.gz",
      "has_sig": false,
      "md5_digest": "0ac95472c2de6e90928a209973642065",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 20700,
      "upload_time": "2022-02-28T14:39:35",
      "upload_time_iso_8601": "2022-02-28T14:39:35.912883Z",
      "url": "https://files.pythonhosted.org/packages/d5/2a/89618aca30b7cd779d38a5ee0b6a2371fbbf74401f571db79fed252f0f6e/data_science_utils-1.7.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}