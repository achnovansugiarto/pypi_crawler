{
  "info": {
    "author": "Jaquet Vincent",
    "author_email": "vincent.jaquet@edu.hefr.ch",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# HumanTech - Telegram Notification - Python Client\n\n## How to install\n\n```\n$ pip install telenotipy\n```\n\n## How to use\n\n1) Create a new TelegramNotificationClient with your API token\n```python\nfrom telenotipy import TelegramNotificationClient\nclient = TelegramNotificationClient('API TOKEN')\n```\n\nThe token must be retrieved from the TeleNotiPy server instance.\n\n2) Send notifications to your users!\n```python\nclient.send_notification(\n\tto=['UserID1', 'UserID2']\n\tmessage=\"Hi from My Application\"\n)\n```\n\n---\n\n## Simple flow\n\n1) First you want to send a subscription to a Telegram User\n```python\nfrom telenotipy import TelegramNotificationClient\n\nclient = TelegramNotificationClient('MY API TOKEN')\n\nsubscription = client.create_subscription()\n\n# Send subscription.id to a Telegram user\n# The user must send the command /start followed by this token to the bot\n# This can be simplified by giving the user a Start link:\n# - https://telegram.me/MyTeleNotiPyBot?start=TheSubscriptionID\n```\n\n2) Then you might want to check if the user has accepted the subscription\n```python\nfrom telenotipy import TelegramNotificationClient\n\nclient = TelegramNotificationClient('MY API TOKEN')\n\nsubscription = client.get_subscription(the_subscription_id)\n\nprint(subscription.is_bound)\n# If the subscription is bound, it means that the user has accepted\n```\n\n3) You want to send notifications to one or more Telegram Users\n```python\nfrom telenotipy import TelegramNotificationClient\n\nclient = TelegramNotificationClient('MY API TOKEN')\n\nclient.send_notification(\n\tto=[the_subscription_id_1, the_subscription_id_2, ...]\n\tmessage=\"Hi, here is my message!\"\n)\n```\n\n---\n\n## Advanced usage\n\n### Use a different server\n```python\nclient = TelegramNotificationClient('API TOKEN', 'The telenotipy server address')\n```\n\n### Create a new subscription\n```python\nsubscription = client.create_subscription()\nsubscription.id # The User Token\nsubscription.is_bound # Whether the subscription is bound to a Telegram User, is False when creating\n```\n\n### List your existing subscriptions\n```python\nsubscriptions = client.list_subscriptions(page=1)\nsubscriptions.previous_page # The Previous page number\nsubscriptions.next_page # The Next page number\nsubscriptions.count # The total count of subscriptions (all pages)\nsubscriptions.results # The list of subscriptions\n```\n\n### Get the info about an existing subscription\n```python\nsubscription_id = 'The Subscription ID'\n\nsubscription = client.get_subscription(subscription_id):\nsubscription.id # The User Token\nsubscription.is_bound # Whether the subscription is bound to a Telegram User\n```\n\n### Delete an existing subscription\n```python\nsubscription_id = 'The Subscription ID'\n\nclient.delete_subscription(subscription_id):\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.forge.hefr.ch/vincent.jaquet/humantech-telegram-notification",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "telenotipy",
    "package_url": "https://pypi.org/project/telenotipy/",
    "platform": "",
    "project_url": "https://pypi.org/project/telenotipy/",
    "project_urls": {
      "Homepage": "https://gitlab.forge.hefr.ch/vincent.jaquet/humantech-telegram-notification"
    },
    "release_url": "https://pypi.org/project/telenotipy/0.0.2/",
    "requires_dist": [
      "requests"
    ],
    "requires_python": ">=3.5",
    "summary": "Python client to interact with TeleNoti API",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11055267,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6a7ff3541d61f802c5d7f0c472183413f76ad2495471bba4b91a06b489fbf7ce",
          "md5": "69b88cb3a6c15ad95a0bf797b979e7d3",
          "sha256": "2711cad5a6619b0c4d45a274d96a0b048cb8012ea929fa9464df355401f40f3a"
        },
        "downloads": -1,
        "filename": "telenotipy-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "69b88cb3a6c15ad95a0bf797b979e7d3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 3698,
        "upload_time": "2020-05-20T15:10:07",
        "upload_time_iso_8601": "2020-05-20T15:10:07.220714Z",
        "url": "https://files.pythonhosted.org/packages/6a/7f/f3541d61f802c5d7f0c472183413f76ad2495471bba4b91a06b489fbf7ce/telenotipy-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7566486045f2cd45479712845df1831e0cefb000461dbf3994c0e47589a9e0ad",
          "md5": "dbc79198684e86eb5cd621cef73f4bc5",
          "sha256": "510a93ebf8a5911f23f9405170e360e3d995d068482df762ce9e75760dd72a57"
        },
        "downloads": -1,
        "filename": "telenotipy-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "dbc79198684e86eb5cd621cef73f4bc5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 3918,
        "upload_time": "2020-05-20T15:10:09",
        "upload_time_iso_8601": "2020-05-20T15:10:09.234228Z",
        "url": "https://files.pythonhosted.org/packages/75/66/486045f2cd45479712845df1831e0cefb000461dbf3994c0e47589a9e0ad/telenotipy-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6a7ff3541d61f802c5d7f0c472183413f76ad2495471bba4b91a06b489fbf7ce",
        "md5": "69b88cb3a6c15ad95a0bf797b979e7d3",
        "sha256": "2711cad5a6619b0c4d45a274d96a0b048cb8012ea929fa9464df355401f40f3a"
      },
      "downloads": -1,
      "filename": "telenotipy-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "69b88cb3a6c15ad95a0bf797b979e7d3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 3698,
      "upload_time": "2020-05-20T15:10:07",
      "upload_time_iso_8601": "2020-05-20T15:10:07.220714Z",
      "url": "https://files.pythonhosted.org/packages/6a/7f/f3541d61f802c5d7f0c472183413f76ad2495471bba4b91a06b489fbf7ce/telenotipy-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7566486045f2cd45479712845df1831e0cefb000461dbf3994c0e47589a9e0ad",
        "md5": "dbc79198684e86eb5cd621cef73f4bc5",
        "sha256": "510a93ebf8a5911f23f9405170e360e3d995d068482df762ce9e75760dd72a57"
      },
      "downloads": -1,
      "filename": "telenotipy-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "dbc79198684e86eb5cd621cef73f4bc5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 3918,
      "upload_time": "2020-05-20T15:10:09",
      "upload_time_iso_8601": "2020-05-20T15:10:09.234228Z",
      "url": "https://files.pythonhosted.org/packages/75/66/486045f2cd45479712845df1831e0cefb000461dbf3994c0e47589a9e0ad/telenotipy-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}