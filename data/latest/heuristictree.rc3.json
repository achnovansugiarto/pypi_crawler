{
  "info": {
    "author": "Matheus Pimenta",
    "author_email": "matheus.pimenta@outlook.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# heuristictree\nHeuristic Methods for Minimizing Cut Bars and Using Leftovers from the One-dimensional Cutting Process - TREE Heuristic.\n\n## Getting Started\n#### Dependencies\nYou need Python 3.8 or later to use **heuristictree**. You can find it at [python.org](https://www.python.org/).\n\n#### Installation\nClone this repo to your local machine using:\n```\ngit clone https://github.com/omatheuspimenta/heuristictree.git\n```\nor\n```p\npip install heuristictree\n```\n\n## Features\nIn this heuristic, the losses of the cutting process are concentrated on the smallest number of bars possible, using a tree structure, in order to become losses (unusable) into leftovers (usable). \n\n## Example\n```python\nfrom heuristictree import tree as ht\n\nn = 7\nL = 30\nl = [7, 9, 11, 14, 19, 21, 26]\nd = [2, 3, 2, 2, 2, 1, 1]\n\nleft = loss = bar = 0\nx = []\n\nleft,loss,bar,x = ht.tree(L=L, n=n, l=l, d=d)\n```\n## Input and Parameters\n* **L:** Size of bar to be cutting. _(int)_\n* **n:** Number of Items to be cutting. _(int)_\n* **l:** Lenght of items to be cutting. _(list)_\n* **d:** Demand of items to be cutting. _(list)_\n* **smallitem:** Size of small item. Default is the smallest item to be cutting. _(int)_\n\n## Output \n* **left:** Leftover from the cutting process. _(int)_\n* **loss:** Loss from the cutting process. _(int)_\n* **bar:** Bar number used in the cutting process. _(int)_\n* **x:** Cutting pattern. _(list)_\n\n## Contributing\nPull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.\n\nPlease make sure to update tests as appropriate.\n\n## Citation\nIf you use this software in your work, please cite our paper. (soon)\n\n## License\n[MIT](https://choosealicense.com/licenses/mit/)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/omatheuspimenta/heuristictree",
    "keywords": "Heuristic_Tree",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "heuristictree",
    "package_url": "https://pypi.org/project/heuristictree/",
    "platform": "",
    "project_url": "https://pypi.org/project/heuristictree/",
    "project_urls": {
      "Homepage": "https://github.com/omatheuspimenta/heuristictree"
    },
    "release_url": "https://pypi.org/project/heuristictree/1.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Heuristic Methods for Minimizing Cut Bars and Using Leftovers from the One-dimensional Cutting Process",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9256521,
  "releases": {
    "0.0.1": [],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "849ebbf223d7a9ecef6572f245d6bd933be56de66c4c4b87a86c10828d71e79b",
          "md5": "9c0c7e91a89120f7fc344bcb5d361a54",
          "sha256": "88b95327ee5e8a35fb02fd85e699e22144dd121956c7f0dc1ff4de70b55c4c48"
        },
        "downloads": -1,
        "filename": "heuristictree-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9c0c7e91a89120f7fc344bcb5d361a54",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3389,
        "upload_time": "2020-11-18T21:22:07",
        "upload_time_iso_8601": "2020-11-18T21:22:07.124535Z",
        "url": "https://files.pythonhosted.org/packages/84/9e/bbf223d7a9ecef6572f245d6bd933be56de66c4c4b87a86c10828d71e79b/heuristictree-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "688eb774671f7c54c929dde85a74f766f13b8123e28d1a2f7a0e9fc63c8d7967",
          "md5": "d14e1a78ed64cdaf48a29a8643ea8864",
          "sha256": "2562359a5f113f68e2c1f4725645b6e3ed41bc965032d8e0de7f819a84d9cd72"
        },
        "downloads": -1,
        "filename": "heuristictree-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d14e1a78ed64cdaf48a29a8643ea8864",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3332,
        "upload_time": "2021-01-28T17:31:40",
        "upload_time_iso_8601": "2021-01-28T17:31:40.821732Z",
        "url": "https://files.pythonhosted.org/packages/68/8e/b774671f7c54c929dde85a74f766f13b8123e28d1a2f7a0e9fc63c8d7967/heuristictree-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "688eb774671f7c54c929dde85a74f766f13b8123e28d1a2f7a0e9fc63c8d7967",
        "md5": "d14e1a78ed64cdaf48a29a8643ea8864",
        "sha256": "2562359a5f113f68e2c1f4725645b6e3ed41bc965032d8e0de7f819a84d9cd72"
      },
      "downloads": -1,
      "filename": "heuristictree-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "d14e1a78ed64cdaf48a29a8643ea8864",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3332,
      "upload_time": "2021-01-28T17:31:40",
      "upload_time_iso_8601": "2021-01-28T17:31:40.821732Z",
      "url": "https://files.pythonhosted.org/packages/68/8e/b774671f7c54c929dde85a74f766f13b8123e28d1a2f7a0e9fc63c8d7967/heuristictree-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}