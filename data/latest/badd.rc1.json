{
  "info": {
    "author": "Vladislava Smirnova",
    "author_email": "wksmirnowa@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# BadD(etector)\n\n## Description (How it can help)\n\nBadD(etector) was created for detecting bad things in user-generated content in Russian.\nNow this library supports obscene words detection, advertising detection and toxicity detection. \nAll the magic done by neural networks.\n\n## Requirements\n1. Python 3.7+\n1. PyTorch 1.8.1\n1. Gensim 3.8.1\n1. NLTK 3.2.5\n1. pymorphy2 0.9.1\n1. emoji 1.2.0\n\n## How to install\n\n**locally (dev mode)**\n```shell\npython3 -m pip install -e <path-to-lib>\n```\n\n**from github**\n```shell\npip install git+https://github.com/wksmirnowa/badd.git@master\n```\n\n**from pip**\n```shell\npip install badd\n```\n\n## Usage\n\nDownload files and models for:\n\n* [ObsceneDetector](https://drive.google.com/file/d/1Q2rVfRHFKMV97Fa7n-Ll0NPcZoZeD09m/view?usp=sharing)\n* [AdDetector](https://drive.google.com/file/d/1EvbLwT7r66wAI29wDBQrMFSc00qXGYXy/view?usp=sharing)\n* [ToxicDetector](https://drive.google.com/file/d/1IHHdnCycu8OKrHMqVp-xXNJmNZyErMll/view?usp=sharing)\n\n\n### Obscene words detection\n\nImport the ObsceneDetector class\n\n```python3\nimport torch\nfrom badd import ObsceneDetector\n```\n\nSet pathes to files and device\n\n```python3\n# path to vocab\nvocab_path = \"obscene_vocab.json\"\n# path to embeddings\nfasttext_path = \"obscene_embeddings.pickle\"\n# path to model \nmodel_path = \"obscene_model_cpu.pth\"\n# set device\ndevice = torch.device('cpu')\n```\n\nUse ObsceneDetector\n\n```python3\nobscene_detector = ObsceneDetector(vocab_path, fasttext_path, model_path, device)\n```\n\nPredict every word in text\n\n```python3\nobscene_detector.predict_text(text)\n```\n\nPredict probability for every word in text\n\n```python3\nobscene_detector.predict_probability(text)\n```\n\nCheck whether any obscene word is in text\n\n```python3\nobscene_detector.obscene_in_text(text)\n```\n\n#### Attributes\n\n* ```obscene_detector.obscene_words``` list of found obscene words. Available after one of the methods \n(```predict_probability```, ```predict_text```, ```obscene_in_text```) was runned.\n\n### Ad detection\n\nImport the AdDetector class\n\n```python3\nimport torch\nfrom badd import AdDetector\n```\n\nSet pathes to files and device\n\n```python3\n# path to vocab\nvocab_path = \"ad_vocab.json\"\n# path to embeddings\nfasttext_path = \"ad_embeddings.pickle\"\n# path to model \nmodel_path = \"ad_model_cpu.pth\"\n# set device\ndevice = torch.device('cpu')\n```\n\nUse AdDetector\n\n```python3\nad_detector = AdDetector(vocab_path, fasttext_path, model_path, device)\n```\n\nPredict text\n\n```python3\nad_detector.predict_text(text)\n```\n\nPredict probability for text\n\n```python3\nad_detector.predict_probability(text)\n```\n\nCheck whether a text is ad\n\n```python3\nad_detector.is_ad(text)\n```\n\n### Toxic texts detection\n\nImport the ToxicDetector class\n\n```python3\nimport torch\nfrom badd import ToxicDetector\n```\n\nSet pathes to files and device\n\n```python3\n# path to vocab\nvocab_path = \"toxic_vocab.json\"\n# path to embeddings\nfasttext_path = \"toxic_embeddings.pickle\"\n# path to model \nmodel_path = \"toxic_model_cpu.pth\"\n# set device\ndevice = torch.device('cpu')\n```\n\nUse AdDetector\n\n```python3\ntoxic_detector = ToxicDetector(vocab_path, fasttext_path, model_path, device)\n```\n\nPredict text\n\n```python3\ntoxic_detector.predict_text(text)\n```\n\nPredict probability for text\n\n```python3\ntoxic_detector.predict_probability(text)\n```\n\nCheck whether a text is toxic\n\n```python3\ntoxic_detector.is_toxic(text)\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/wksmirnowa/badd",
    "keywords": "toxic ad advertising obscene classification texts words nlp nn",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "badd",
    "package_url": "https://pypi.org/project/badd/",
    "platform": "",
    "project_url": "https://pypi.org/project/badd/",
    "project_urls": {
      "Homepage": "https://github.com/wksmirnowa/badd"
    },
    "release_url": "https://pypi.org/project/badd/1.0.32/",
    "requires_dist": null,
    "requires_python": ">=3.7.*",
    "summary": "In English",
    "version": "1.0.32",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10446695,
  "releases": {
    "1.0.32": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bba35ad6e86dfed3b314a3232948ece201ba512168336444c37a428a5004cce5",
          "md5": "6b0f977a34dde9a84defa056c9a79a06",
          "sha256": "96692f007c6cea26e92833f067176eafe1537b25a7ff53ed75d079806c16750f"
        },
        "downloads": -1,
        "filename": "badd-1.0.32.tar.gz",
        "has_sig": false,
        "md5_digest": "6b0f977a34dde9a84defa056c9a79a06",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.*",
        "size": 6912,
        "upload_time": "2021-05-23T12:12:24",
        "upload_time_iso_8601": "2021-05-23T12:12:24.737599Z",
        "url": "https://files.pythonhosted.org/packages/bb/a3/5ad6e86dfed3b314a3232948ece201ba512168336444c37a428a5004cce5/badd-1.0.32.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bba35ad6e86dfed3b314a3232948ece201ba512168336444c37a428a5004cce5",
        "md5": "6b0f977a34dde9a84defa056c9a79a06",
        "sha256": "96692f007c6cea26e92833f067176eafe1537b25a7ff53ed75d079806c16750f"
      },
      "downloads": -1,
      "filename": "badd-1.0.32.tar.gz",
      "has_sig": false,
      "md5_digest": "6b0f977a34dde9a84defa056c9a79a06",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7.*",
      "size": 6912,
      "upload_time": "2021-05-23T12:12:24",
      "upload_time_iso_8601": "2021-05-23T12:12:24.737599Z",
      "url": "https://files.pythonhosted.org/packages/bb/a3/5ad6e86dfed3b314a3232948ece201ba512168336444c37a428a5004cce5/badd-1.0.32.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}