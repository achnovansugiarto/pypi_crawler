{
  "info": {
    "author": "Aidar Turkenov",
    "author_email": "a.k.turken0v@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: AsyncIO",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Communications",
      "Topic :: Internet",
      "Typing :: Typed"
    ],
    "description": "# Wampify - High-Level WAMP framework\n\n![license](https://img.shields.io/github/license/aturkenov/wampify)\n![package-version](https://img.shields.io/pypi/v/wampify)\n![pyversions](https://img.shields.io/pypi/pyversions/wampify)\n\nProvides an opportunity for better interaction with Web Application Messaging Protocol. It offers a variety of tools (background tasks, scheduling, signals, middlewares, etc...) that enable one to create a platform of independent applications. Built on top of [autobahn library](https://autobahn.readthedocs.io/en/latest/index.html).\n\n## Features:\n- [High performance](https://github.com/aturkenov/wampify/tree/main/example/benchmark)\n- [Remote Procedure Calls (RPC)](https://github.com/aturkenov/wampify#remote-procedure-call-rpc) and [Publish & Subscribe (PubSub)](https://github.com/aturkenov/wampify#publish--subscribe-pubsub)\n- [Payload validation](https://pydantic-docs.helpmanual.io/usage/validation_decorator/) based on python [pydantic library](https://pydantic-docs.helpmanual.io)\n- [Signals (WAMP session joined, WAMP session leaved, etc...)](https://github.com/aturkenov/wampify#signals)\n- [Middlewares](https://github.com/aturkenov/wampify#custom-middlewares)\n- [Background tasks](https://github.com/aturkenov/wampify#backgroud-tasks)\n- [Scheduling](https://github.com/aturkenov/wampify#scheduling) based on python [schedule library]()\n- Source code is well documented\n\n# Introduction\n\n[Web Application Messaging Protocol (WAMP)](https://wamp-proto.org/intro.html) is an open standard WebSocket subprotocol that provides two messaging patterns in one Web native protocol:\n\n- [routed Remote Procedure Calls (RPC)](https://github.com/aturkenov/wampify#remote-procedure-call-rpc)\n- [Publish & Subscribe (PubSub)](https://github.com/aturkenov/wampify#publish--subscribe-pubsub)\n\nThe [WebSocket protocol](https://developer.mozilla.org/en-US/docs/Web/API/WebSocket) brings bi-directional (soft) real-time and wire traffic efficient connections to the browser. Today (2022) WebSocket is universally supported in browsers, network equipment, servers and client languages.\n\nUsing WAMP you can build distributed systems which are loosely coupled and communicate in (soft) real-time.\n\n`INFO!` Full source code in [example/basic/ directory](https://github.com/aturkenov/wampify/tree/main/example/basic) (`a.py` is server side and `b.py` is client side). More examples [here](https://github.com/aturkenov/wampify/tree/main/example).\n\nBefore install and configure your [WAMP router](https://wamp-proto.org/implementations.html#routers). I'm recomending to use [Crossbar router](https://crossbar.io). More about crossbar configuration [here](https://crossbar.io/docs/Getting-Started/#crossbar-configuration).\n\n```bash\npip install crossbar\ncrossbar init\n```\n\n```bash\npip install wampify\n```\n\nInitialize Wampify application, pass `preuri` (URI prefix), WAMP router URL, WAMP session realm and WAMP session authentication (by default anonymous).\n\n```python\nfrom wampify import Wampify\n\nwampify = Wampify(\n    debug=True,\n    preuri='com.example',\n    router={\n        'url': 'ws://127.0.0.1:8080/private'\n    },\n    wamps={\n        'realm': 'example',\n        'authid': 'application',\n        'authmethods': ['anonymous'],\n        'authrole': 'private',\n        'show_registered': True,\n        'show_subscribed': True\n    }\n)\n\n@wampify.subscribe\nasync def hello(name: str = 'Anonymous'):\n    print(f'{name} you are welcome!')\n\nif __name__ == '__main__':\n    wampify.run()\n```\n\n`IMPORTANT!` Don't forget to disable debug mode in production. (default `debug=False`)\n\nFinally, run router `crossbar start` and application `python application.py` in different terminal sessions.\n\n## Remote Procedure Calls (RPC)\n\nA Caller issues calls to remote procedures by providing the procedure URI and any arguments for the call. The Callee will execute the procedure using the supplied arguments to the call and return the result of the call to the Caller.\n\nCallees register procedures they provide with Dealers. Callers initiate procedure calls first to Dealers. Dealers route calls incoming from Callers to Callees implementing the procedure called, and route call results back from Callees to Callers.\n\nBy default Wampify validates input payload if type annotations are defined and takes procedure name as URI segment\n\nIt will executes when someone call `com.example.pow`\n\n```python\n@wampify.register\nasync def pow(x: float = 1):\n    return x ** 2\n```\n\nBut you can disable payload validation\n\n```python\n@wampify.register(settings={ 'validate_payload': False })\n```\n\nChange to another URI\n\n```python\n@wampify.register('math.square')\n```\n\n## Publish & Subscribe (PubSub)\n\nA Publishers publishes events to topics by providing the topic URI and any payload for the event. Subscribers of the topic will receive the event together with the event payload.\n\nSubscribers subscribe to topics they are interested in with Brokers. Publishers initiate publication first at Brokers. Brokers route events incoming from Publishers to Subscribers that are subscribed to respective topics.\n\nIt will executes when someone publish something to `com.example.hello`\n\n```python\n@wampify.subscribe\nasync def hello(name: str = 'Anonymous'):\n    print(f'{name} you are welcome!')\n```\n\n# Advanced\n\n## Story\n\nLike Request object Story represents request details: caller or publisher details (if not disclosed), sent time and event type.\n\nAll required resources (as WAMP Session, Background tasks, ...) bind to Story instance.\n\nHow to get current Story instance?\nJust `import * from wampify.story` module and call `get_current_story()` in your procedure.\n\n### Use WAMP session in procedure\n\n```python\n...\nfrom wampify.story import *\n\n@wampify.subscribe\nasync def hello(name: str = 'Anonymous'):\n    story = get_current_story()\n    story._wamps_.call(\n        'com.another_application.client.counter.increment'\n    )\n    print(f'{name} you are welcome!')\n\n...\n```\n\nThis example increment clients counter in another application (or microservice) via calling remote procedure, when someone publishes event to `com.example.hello` topic.\n\n## Background Tasks\n\nIt's useful for operations that need to happen after a request, but that client doesn't really have to be waiting for operation to complete before receiving response. Also cpu intensive operations can be executed in separated thread.\n\nMount wampify background task module by passing instance of Wampify, then define required procedure and pass it as `story._background_tasks_.add($REQUIRED_PROCEDURE)`.\n\n```python\nfrom wampify import Wampify, background_task\nfrom wampify.story import *\n\nwampify = Wampify(...)\n\nbackground_task.mount(wampify)\n\nasync def task():\n    print('im here')\n\n@wampify.register\nasync def asap():\n    story = get_current_story()\n    story._background_tasks_.add(task)\n    print('background task pushed to queue')\n\nif __name__ == '__main__':\n    wampify.run()\n```\n\nMore examples [here](https://github.com/aturkenov/wampify/tree/main/example/background_task/).\n\n## Scheduling\n\nRun anything periodically using a friendly syntax.\n\nBefore install dependencies. More about library [here](https://schedule.readthedocs.io/en/stable/).\n\n```bash\npip install schedule\n```\n\nMount wampify scheduling module by passing instance of Wampify, then define required procedure and pass it as `wampify.schedule.every($INTERVAL).$TIME_UNIT.do($REQUIRED_PROCEDURE)`\n\n```python\nfrom wampify import Wampify, scheduling\n\nwampify = Wampify(...)\n\nscheduling.mount(wampify)\n\nasync def send_message_every_day(): ...\n\nwampify.schedule.every().day.do(send_message_every_day)\n\nif __name__ == '__main__':\n    wampify.run()\n```\n\nMore examples [here](https://github.com/aturkenov/wampify/tree/main/example/scheduling/).\n\n## Signals (Events)\n\nSignals allow certain senders to notify listeners. For example subscribe to wamp session `joined` or `leaved` events via `@wamps_signals.on` decorator.\n\n```python\nfrom wampify import Wampify\nfrom wampify.signals import wamps_signals\n\nwampify = Wampify(...)\n\n@wamps_signals.on\nasync def joined(): ...\n\n@wamps_signals.on\nasync def leaved(): ...\n\nif __name__ == '__main__':\n    wampify.run()\n```\n\nMore examples [here](https://github.com/aturkenov/wampify/tree/main/example/signal/)\n\n## Middlewares\n\nA \"middleware\" is a behavior that works with every request before it is processed by any specific procedure. And also with every response before returning it.\n\nFor example `TimeoutMiddleware`. it raises `TimedOut` error if procedure runtime overflow `n` seconds\n\n```python\nfrom wampify import Wampify\nfrom wampify.middleware.timeout import TimeoutMiddleware\n\nwampify = Wampify(\n    debug=False,\n    preuri='com.example',\n    router={ 'url': 'ws://127.0.0.1:8765/private' },\n    wamps={\n        'realm': 'example',\n        'show_registered': True,\n        'show_subscribed': True\n    },\n    middlewares={\n        'timeout': { 'duration': 60 }\n    }\n)\n\nwampify.add_middleware(TimeoutMiddleware)\n\nif __name__ == '__main__':\n    wampify.run()\n```\n\nMore examples [here](https://github.com/aturkenov/wampify/tree/main/example/middleware/)\n\n## How to connect SQLAlchemy?\n\n```python\nfrom wampify import Wampify\nfrom wampify.signals import entrypoint_signals\n\nfrom sqlalchemy.ext.asyncio import create_async_engine\nfrom sqlalchemy.ext.asyncio import AsyncSession\nfrom sqlalchemy.orm import sessionmaker\n\nwampify = Wampify(...)\n\nengine = create_async_engine('postgresql+asyncpg://scott:tiger@localhost/test', echo=True)\n\nAlchemySession = sessionmaker(engine, AsyncSession)\n\n@entrypoint_signals.on\nasync def opened(story):\n    story.alchemy = AlchemySession()\n    print('SQLAlchemy Async Session initialized')\n\n@entrypoint_signals.on\nasync def raised(story, e):\n    await story.alchemy.rollback()\n    await story.alchemy.close()\n    print('SQLAlchemy Async Session rollback')\n\n@entrypoint_signals.on\nasync def closed(story):\n    await story.alchemy.commit()\n    await story.alchemy.close()\n    print('SQLAlchemy Async Session closed')\n\n@wampify.subscribe\nasync def hello(name: str = 'Anonymous'):\n    story = get_current_story()\n    STMT = \"select * from test\"\n    print(await story.alchemy.execute(STMT))\n\n...\n```\n\n# TODO:\n\n- Benchmarking\n- Unit tests\n- Better payload validation for subscriptions and pattern matching\n- Subscription white/black listing\n- Wampify serializer\n- Background tasks must have wamp session\n- Progressive calls\n- In Memory Cache\n- Uvloop support\n- Documentation\n- Clean Arch\n- API Schema generation\n\n# Contribution\n\nhttps://stackoverflow.com/users/13774052/aidar-turkenov\n\nhttps://stackoverflow.com/questions/tagged/wamp\n\nhttps://stackoverflow.com/questions/tagged/wampify\n\nhttps://github.com/aturkenov/wampify/discussions\n\nhttps://github.com/aturkenov/wampify/issues\n\na.k.turken0v@gmail.com",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/aturkenov/wampify",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "wampify",
    "package_url": "https://pypi.org/project/wampify/",
    "platform": null,
    "project_url": "https://pypi.org/project/wampify/",
    "project_urls": {
      "Bug Tracker": "https://github.com/aturkenov/wampify/issues",
      "Discussions": "https://github.com/aturkenov/wampify/discussions",
      "Homepage": "https://github.com/aturkenov/wampify"
    },
    "release_url": "https://pypi.org/project/wampify/0.1.7/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Web Application Messaging Protocol Framework",
    "version": "0.1.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14223408,
  "releases": {
    "0.0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cc4df2723fc04fa5ca604912cb707e80f82fe8b55945c93447720e16959ddf12",
          "md5": "3785d073c1f79d51eec7ab9ad2a540f9",
          "sha256": "eb9b65ed6b77764d756f02b00934825da878ae7723a4466d4f5e6c863bba9381"
        },
        "downloads": -1,
        "filename": "wampify-0.0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3785d073c1f79d51eec7ab9ad2a540f9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 16403,
        "upload_time": "2022-01-30T16:01:54",
        "upload_time_iso_8601": "2022-01-30T16:01:54.684181Z",
        "url": "https://files.pythonhosted.org/packages/cc/4d/f2723fc04fa5ca604912cb707e80f82fe8b55945c93447720e16959ddf12/wampify-0.0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d5fa6dd6a0f3820b33a467503103dc2e127493890646cac2a2b47dc5e483d8b0",
          "md5": "087a1b29eebd5c06e104089e04f95e82",
          "sha256": "e926020cf7770b4d1428370945f14fe64969c0051171e45d3024453308e34f44"
        },
        "downloads": -1,
        "filename": "wampify-0.0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "087a1b29eebd5c06e104089e04f95e82",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14427,
        "upload_time": "2022-01-30T16:01:56",
        "upload_time_iso_8601": "2022-01-30T16:01:56.912504Z",
        "url": "https://files.pythonhosted.org/packages/d5/fa/6dd6a0f3820b33a467503103dc2e127493890646cac2a2b47dc5e483d8b0/wampify-0.0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9682d4f83069ce0f697fceedacd2af3efe9ef0063b80ef3f0e391ffb9c073ac7",
          "md5": "613902c5cebdad51db96cf8b4bd3843d",
          "sha256": "516df0acaed884e4ca4c81a21207449426a0482a18528bf4903f2aae9a4d8ab5"
        },
        "downloads": -1,
        "filename": "wampify-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "613902c5cebdad51db96cf8b4bd3843d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 20496,
        "upload_time": "2022-04-22T11:13:40",
        "upload_time_iso_8601": "2022-04-22T11:13:40.245135Z",
        "url": "https://files.pythonhosted.org/packages/96/82/d4f83069ce0f697fceedacd2af3efe9ef0063b80ef3f0e391ffb9c073ac7/wampify-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4e9af82be0a1c1c6fac97ed72848926ec09e5a4897080c7a5450a65045df4442",
          "md5": "7d11f32b86433592a6bb834f08aa4c75",
          "sha256": "d2587491071c7a634aa8fcd601aed4c075aea87ccbc75228eb192422c32086dc"
        },
        "downloads": -1,
        "filename": "wampify-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "7d11f32b86433592a6bb834f08aa4c75",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14380,
        "upload_time": "2022-02-13T18:20:33",
        "upload_time_iso_8601": "2022-02-13T18:20:33.223000Z",
        "url": "https://files.pythonhosted.org/packages/4e/9a/f82be0a1c1c6fac97ed72848926ec09e5a4897080c7a5450a65045df4442/wampify-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "75607417c438742461d408c10a02c36f0273180a7bb564f30b893eaf03090f7a",
          "md5": "74802a2578b4545c12cfbe8924d73351",
          "sha256": "619a7834db33b809f13d80b5b2759572e8a85e93e77a8aaaf2dbab6b8fce1384"
        },
        "downloads": -1,
        "filename": "wampify-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "74802a2578b4545c12cfbe8924d73351",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 18953,
        "upload_time": "2022-03-26T12:14:10",
        "upload_time_iso_8601": "2022-03-26T12:14:10.402562Z",
        "url": "https://files.pythonhosted.org/packages/75/60/7417c438742461d408c10a02c36f0273180a7bb564f30b893eaf03090f7a/wampify-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "935d28776d16c60613612ceb1f3eb5f1d5ef7e37c961c916c9221a1591e51343",
          "md5": "48b756d1bbef57c33c82fd62fc4d74ad",
          "sha256": "135428d5940f305be3e69bf358964a99192d14c3f853128bb7aedca856a35819"
        },
        "downloads": -1,
        "filename": "wampify-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "48b756d1bbef57c33c82fd62fc4d74ad",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19255,
        "upload_time": "2022-04-22T11:10:02",
        "upload_time_iso_8601": "2022-04-22T11:10:02.776902Z",
        "url": "https://files.pythonhosted.org/packages/93/5d/28776d16c60613612ceb1f3eb5f1d5ef7e37c961c916c9221a1591e51343/wampify-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "abdad30392157453709b5e0d179fd98779596f354572d7b98b44e86b6cc3c15c",
          "md5": "b5e3b19a43225e65ce864d0598081ebf",
          "sha256": "b775ea182c59a478b3b5c06451c522ed10dba173c797c10b6fd1410d40eafa72"
        },
        "downloads": -1,
        "filename": "wampify-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b5e3b19a43225e65ce864d0598081ebf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 20496,
        "upload_time": "2022-04-25T10:35:53",
        "upload_time_iso_8601": "2022-04-25T10:35:53.886006Z",
        "url": "https://files.pythonhosted.org/packages/ab/da/d30392157453709b5e0d179fd98779596f354572d7b98b44e86b6cc3c15c/wampify-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "90ea95e76651822f17956c5ad5f235849a227a908a40fe3bbfcd64ae5bdae552",
          "md5": "7609e78b81ecdfa6fba8a83619924821",
          "sha256": "c472ea958e5aa208a6a48c55c01eb0966a787b1469c1b1b975ab152d8595bbaa"
        },
        "downloads": -1,
        "filename": "wampify-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "7609e78b81ecdfa6fba8a83619924821",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19288,
        "upload_time": "2022-04-25T10:33:55",
        "upload_time_iso_8601": "2022-04-25T10:33:55.957353Z",
        "url": "https://files.pythonhosted.org/packages/90/ea/95e76651822f17956c5ad5f235849a227a908a40fe3bbfcd64ae5bdae552/wampify-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "da227248203f96f42eb1be68e727040b0e2197e76e3ff1b9020d75fae01cee68",
          "md5": "7f52fe7503f79451a7e559810de5176d",
          "sha256": "7b043672ef00c7ce7f02b1158208232a95875776e302fce581a924d41a956355"
        },
        "downloads": -1,
        "filename": "wampify-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7f52fe7503f79451a7e559810de5176d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 17958,
        "upload_time": "2022-04-26T07:45:16",
        "upload_time_iso_8601": "2022-04-26T07:45:16.370339Z",
        "url": "https://files.pythonhosted.org/packages/da/22/7248203f96f42eb1be68e727040b0e2197e76e3ff1b9020d75fae01cee68/wampify-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea0e3fc048dbe0f6659b4a2b9075c1892bf053b45e7b7a4d797081ace142c73a",
          "md5": "444b4033a58505865335b176fa2ae9e7",
          "sha256": "b067c14c6079c72f287341158e81c1f5c64b24039bc885281e6fcf98d40bafb6"
        },
        "downloads": -1,
        "filename": "wampify-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "444b4033a58505865335b176fa2ae9e7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17619,
        "upload_time": "2022-04-26T07:40:38",
        "upload_time_iso_8601": "2022-04-26T07:40:38.091049Z",
        "url": "https://files.pythonhosted.org/packages/ea/0e/3fc048dbe0f6659b4a2b9075c1892bf053b45e7b7a4d797081ace142c73a/wampify-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a06ee7e77cce31afa5ad26927f13496206b233da74d039ec401aa335b7d154e9",
          "md5": "5bf3e07a80ff3b164e7bede77deca3da",
          "sha256": "daeee11d88fde18840169f95b734596fc91a51a294b2373bc5dd17bf9a30a111"
        },
        "downloads": -1,
        "filename": "wampify-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5bf3e07a80ff3b164e7bede77deca3da",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 18860,
        "upload_time": "2022-04-26T08:03:35",
        "upload_time_iso_8601": "2022-04-26T08:03:35.582061Z",
        "url": "https://files.pythonhosted.org/packages/a0/6e/e7e77cce31afa5ad26927f13496206b233da74d039ec401aa335b7d154e9/wampify-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9404d8a562548c835c83c48381f72a8d2c4d17251830c895a0253804df91f919",
          "md5": "e683fb2ea645a51a30e732cd02b41e21",
          "sha256": "28ff1e2b9150c5db35b974477b0ef8af6b1e2bc08a0c1f5f05c03acaabe1e006"
        },
        "downloads": -1,
        "filename": "wampify-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e683fb2ea645a51a30e732cd02b41e21",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 18996,
        "upload_time": "2022-04-28T09:14:23",
        "upload_time_iso_8601": "2022-04-28T09:14:23.969634Z",
        "url": "https://files.pythonhosted.org/packages/94/04/d8a562548c835c83c48381f72a8d2c4d17251830c895a0253804df91f919/wampify-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "354ba1ec0370340e70e3554ba454d7d7024b82f599ea51764e863619190210db",
          "md5": "b55a5fdd7d9d6cf200af1523fa1c0e58",
          "sha256": "6902f71aca781ee961422fbbabcd27a9b7aa36ec703468f486c2679d45992d0c"
        },
        "downloads": -1,
        "filename": "wampify-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "b55a5fdd7d9d6cf200af1523fa1c0e58",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 18977,
        "upload_time": "2022-04-28T09:45:20",
        "upload_time_iso_8601": "2022-04-28T09:45:20.720887Z",
        "url": "https://files.pythonhosted.org/packages/35/4b/a1ec0370340e70e3554ba454d7d7024b82f599ea51764e863619190210db/wampify-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f861e1f58dedb69a9f4ce28577b002d519511c94f6a8e0ce8b7d8c1125c19b40",
          "md5": "7398c438b62aae93b38d78afd39ecc1a",
          "sha256": "2af5591d53117418807c101aba87469b2591d0953d55e2ef28c37cfede91b7fe"
        },
        "downloads": -1,
        "filename": "wampify-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "7398c438b62aae93b38d78afd39ecc1a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19835,
        "upload_time": "2022-06-23T08:35:13",
        "upload_time_iso_8601": "2022-06-23T08:35:13.820097Z",
        "url": "https://files.pythonhosted.org/packages/f8/61/e1f58dedb69a9f4ce28577b002d519511c94f6a8e0ce8b7d8c1125c19b40/wampify-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f6034b5ce0a3e76c2ae4f5d713d887ff3848808c05c92e7cff220cf5a73e2701",
          "md5": "73467144fa3b162da8415dc4a127b937",
          "sha256": "1a159395c5282259ab06b1e96de1e92b7fb58dd72c4123a74a40fd4eb08c772f"
        },
        "downloads": -1,
        "filename": "wampify-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "73467144fa3b162da8415dc4a127b937",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19893,
        "upload_time": "2022-06-23T09:10:46",
        "upload_time_iso_8601": "2022-06-23T09:10:46.617070Z",
        "url": "https://files.pythonhosted.org/packages/f6/03/4b5ce0a3e76c2ae4f5d713d887ff3848808c05c92e7cff220cf5a73e2701/wampify-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5a42bd884d4878ddca1662e6f0143be249720a966303cf83b98f0157b2e6abd1",
          "md5": "b5837dfe3f8df6d47f13e64ca6559317",
          "sha256": "f8a1d011e6f9e01126fa477af4eb69d2825ef504ffa7e9262624f186f036f295"
        },
        "downloads": -1,
        "filename": "wampify-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "b5837dfe3f8df6d47f13e64ca6559317",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19972,
        "upload_time": "2022-06-23T09:28:28",
        "upload_time_iso_8601": "2022-06-23T09:28:28.413692Z",
        "url": "https://files.pythonhosted.org/packages/5a/42/bd884d4878ddca1662e6f0143be249720a966303cf83b98f0157b2e6abd1/wampify-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "49dc56bf11a2701e01020bf6b2631be5557edbcad125438b5ae143049b88af7c",
          "md5": "fce3f4becc076104f52202b82bb5761f",
          "sha256": "e54e7cd96e23158fea1a504681308627dbc4b3cb45ffc357673323fe0d22ee68"
        },
        "downloads": -1,
        "filename": "wampify-0.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "fce3f4becc076104f52202b82bb5761f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19983,
        "upload_time": "2022-06-23T10:33:15",
        "upload_time_iso_8601": "2022-06-23T10:33:15.295732Z",
        "url": "https://files.pythonhosted.org/packages/49/dc/56bf11a2701e01020bf6b2631be5557edbcad125438b5ae143049b88af7c/wampify-0.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "49dc56bf11a2701e01020bf6b2631be5557edbcad125438b5ae143049b88af7c",
        "md5": "fce3f4becc076104f52202b82bb5761f",
        "sha256": "e54e7cd96e23158fea1a504681308627dbc4b3cb45ffc357673323fe0d22ee68"
      },
      "downloads": -1,
      "filename": "wampify-0.1.7.tar.gz",
      "has_sig": false,
      "md5_digest": "fce3f4becc076104f52202b82bb5761f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 19983,
      "upload_time": "2022-06-23T10:33:15",
      "upload_time_iso_8601": "2022-06-23T10:33:15.295732Z",
      "url": "https://files.pythonhosted.org/packages/49/dc/56bf11a2701e01020bf6b2631be5557edbcad125438b5ae143049b88af7c/wampify-0.1.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}