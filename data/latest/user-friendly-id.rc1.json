{
  "info": {
    "author": "Remy Charlot <remy@personalstock.com>",
    "author_email": "remy@personalstock.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# User-friendly ID\n\nCollection of functions to randomly and securely generate commonly-used types of IDs.\n\n## Installation\nInstall from PyPI:\n\n`pip install user-friendly-id`\n\n## Features\n- Generate any length of random string, either cryptographically secure (slower) or not (faster)\n- Generate IDs without without common confusables / homoglyphs (e.g lowercase \"l\" vs uppercase \"i\")\n- Lowers chances of a curse word randomly appearing in IDs using same logic as Hashids library.\n\n## How to use?\n\n```\nfrom ufid import (\n    generate_random_string,\n    generate_random_lowercase_string,\n    generate_random_digit_string,\n    generate_base64_random_string,\n    generate_base47_random_string,\n    generate_user_friendly_id,\n)\n\n# Generate securely a random string of 10 characters of\n# any lowercase/uppercase alphabet + digits\ngenerate_random_string(length=10, secure=True)\n\n\n# Generate a random string of 10 characters within a set of predefined chars\ngenerate_random_string(length=10, allowed_chars='01')\n\n\n# Shortcut of the above to only allow lowercase alphabet\ngenerate_random_lowercase_string(length=10)\n\n\n# Again, shortcut to get only digits\ngenerate_random_digit_string(length=10)\n\n\n# Generate youtube-like base64 random string\ngenerate_base64_random_string(length=10)\n\n\n# Generate a random string without common confusables / homoglyphs.\n# To maximize number of combination allowed_chars is not settable.\n# This gives a base47 string hence the name of the function\n\ngenerate_base47_random_string(length=10)\n\n\n# Generate a 'true' user-friendly ID. Opiniated to a secure settings, and default of\n# 6 chars for about 10 billion combinations. Also excludes without confusables / homoglyphs\n# but also adds an algorithm inspired by the popular Hashids library to lower chances of\n# generating curse words\n\ngenerate_user_friendly_id()\ngenerate_user_friendly_id(length=10)\n```\n\n## Tests\nTODO",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/lapinvert/user-friendly-id/",
    "keywords": "generator,strings,string,str,generate,user,user-friendly,ID,IDs,secure,safe",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "user-friendly-id",
    "package_url": "https://pypi.org/project/user-friendly-id/",
    "platform": "",
    "project_url": "https://pypi.org/project/user-friendly-id/",
    "project_urls": {
      "Homepage": "https://github.com/lapinvert/user-friendly-id/"
    },
    "release_url": "https://pypi.org/project/user-friendly-id/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Collection of functions to randomly and securely generate commonly used IDs.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11343511,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eb04898afc7b5819ba490b7af0ca10d7676b7e66318f0851f7630c3f7239118f",
          "md5": "5986e0b82bd3c11cd461e009678c372e",
          "sha256": "d9c5dd79dffebc6dfbb6eb2178e37617d048e86128ceb952365ffe19f03e75a7"
        },
        "downloads": -1,
        "filename": "user-friendly-id-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5986e0b82bd3c11cd461e009678c372e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3920,
        "upload_time": "2021-09-02T05:26:55",
        "upload_time_iso_8601": "2021-09-02T05:26:55.994149Z",
        "url": "https://files.pythonhosted.org/packages/eb/04/898afc7b5819ba490b7af0ca10d7676b7e66318f0851f7630c3f7239118f/user-friendly-id-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "eb04898afc7b5819ba490b7af0ca10d7676b7e66318f0851f7630c3f7239118f",
        "md5": "5986e0b82bd3c11cd461e009678c372e",
        "sha256": "d9c5dd79dffebc6dfbb6eb2178e37617d048e86128ceb952365ffe19f03e75a7"
      },
      "downloads": -1,
      "filename": "user-friendly-id-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "5986e0b82bd3c11cd461e009678c372e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3920,
      "upload_time": "2021-09-02T05:26:55",
      "upload_time_iso_8601": "2021-09-02T05:26:55.994149Z",
      "url": "https://files.pythonhosted.org/packages/eb/04/898afc7b5819ba490b7af0ca10d7676b7e66318f0851f7630c3f7239118f/user-friendly-id-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}