{
  "info": {
    "author": "Mohammadreza Rostam, Rongxuan Du",
    "author_email": "reza.rostam@mech.ubc.ca",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: Free for non-commercial use",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.8",
      "Topic :: Scientific/Engineering"
    ],
    "description": "# Recycling Plant Simulator Package\n\n[![PyPi version](https://badgen.net/pypi/v/rcplant/)](https://pypi.org/project/rcplant/)\n[![Downloads](https://pepy.tech/badge/rcplant)](https://pepy.tech/project/rcplant)\n\n## Quick start\n\nThe following code is an example of how to use this package:\n\n```python\nimport random\n\nfrom rcplant import *\n\n\ndef user_sorting_function(sensors_output):\n    # random identification\n    decision = {sensor_id: random.choice(list(Plastic)) for (sensor_id, value) in sensors_output.items()}\n\n    return decision\n\n\ndef main():\n\n    # simulation parameters\n    conveyor_length = 1000  # cm\n    conveyor_width = 100  # cm\n    conveyor_speed = 10  # cm per second\n    num_containers = 100\n    sensing_zone_location_1 = 500  # cm\n    sensors_sampling_frequency = 1  # Hz\n    simulation_mode = 'training'\n\n    sensors = [\n        Sensor.create(SpectrumType.FTIR, sensing_zone_location_1),\n    ]\n\n    conveyor = Conveyor.create(conveyor_speed, conveyor_length, conveyor_width)\n\n    simulator = RPSimulation(\n        sorting_function=user_sorting_function,\n        num_containers=num_containers,\n        sensors=sensors,\n        sampling_frequency=sensors_sampling_frequency,\n        conveyor=conveyor,\n        mode=simulation_mode\n    )\n\n    elapsed_time = simulator.run()\n\n    print(f'\\nResults for running the simulation in \"{simulation_mode}\" mode:')\n\n    for item_id, result in simulator.identification_result.items():\n        print(result)\n\n    print(f'Total missed containers = {simulator.total_missed}')\n    print(f'Total sorted containers = {simulator.total_classified}')\n    print(f'Total mistyped containers = {simulator.total_mistyped}')\n\n    print(f'\\n{num_containers} containers are processed in {elapsed_time:.2f} seconds')\n\n\nif __name__ == '__main__':\n    main()\n\n```\n\nYou may modify the [`user_sorting_function`](src/main.py) function and implement new logic for sorting plastic containers.\n\n## API\n\n---\n\n#### `RPSimulation`\n\n```python\nclass RPSimulation:\n    def __init__(\n            self,\n            sorting_function,\n            num_containers: int,\n            sensors: List[Sensor],\n            sampling_frequency: int,\n            conveyor: Conveyor,\n            mode: str\n    )\n```\n\nA manager class for the recycling plant simulator.\n\n##### Input parameters:\n\n- [sorting_function](#sorting_function) : A user-defined function that gets the [output of the sensors](#) and identifies the type of [plastic](#plastic), based on the given spectrum.\n- num_containers : Number of input containers needed to be sorted.\n- sensors : An array of [sensors](#sensor).\n- sampling_frequency: The sampling frequency of sensors. Acceptable values: 10, 5, 2, and 1 Hz. In `testing` mode, increasing the sampling frequency increases added noise to spectrum.\n- conveyor : A user-defined [conveyor](#conveyor) system.\n- mode: A selector to run the simulation in either `training` or `testing` configuration.\n---\n\n#### RPSimulation.`run`\n\n```python\ndef run(self)\n```\n\nA function to run the simulation.\n\n##### Outputs:\n- RPSimulation.`total_missed` : Number of missed containers.\n- RPSimulation.`classified` : Number of classified containers.\n- RPSimulation.`mistyped` : Number of containers classified incorrectly.\n\n##### Returns:\n- Amount of time required to process all containers [seconds].\n\n---\n\n#### Sensor\n\n```python\nclass Sensor:\n    def __init__(self, sensor_type: SpectrumType, location_cm: int, sensor_id: int = None)\n```\n\nA class to define a new sensor.\n\n##### Input parameters:\n\n- location_cm : Location of the sensor [centimeter].\n- sensor_type : Type of the sensor [[SpectrumType](#spectrumtype)].\n- sensor_id : Sensor ID, which is used in [sorting_function](#sorting_function) to identify each sensor. \nIf no ID is provided, an ID will be generated based on the number of sensors.\n---\n\n#### Sensor.`create`\n\n```python\ndef create(cls, sensor_type: SpectrumType, location: int, sensor_id: int = None)\n```\n\nA factory method to create a new [sensor](#sensor).\n\n##### Input parameters:\n\n- location : Location of the sensor [centimeter].\n- sensor_type : Type of the sensor [[SpectrumType](#spectrumtype)].\n- sensor_id : Sensor ID, which is used in [sorting_function](#sorting_function) to identify each sensor. \nIf no ID is provided, an ID will be generated based on the number of sensors.\n\n##### Returns\n- A [sensor](#sensor) object.\n\n---\n\n#### Sensor.`reset_num`\n\n```python\ndef reset_num(cls)\n```\n\nA class method to reset the number of created sensors. This would be helpful if you also want to reset IDs assigned to newly created sensors.\n\n---\n\n#### Sensor.`id`\n\n```python\n@property\ndef id(self)\n```\n\nReturns Sensor's ID.\n\n---\n#### Conveyor\n\n```python\nclass Conveyor:\n    def __init__(self, speed_cm_per_second: int, dimension:ConveyorDimension)\n```\n\nA class to define a new conveyor.\n\n##### Input parameters:\n\n- speed_cm_per_second : Speed of the conveyor [centimeter per second].\n- dimension : Dimensions of the conveyor in centimeter.\n---\n\n#### Conveyor.`create`\n\n```python\ndef create(cls, speed_cm_per_second: int, length: int, width: int)\n```\n\nA factory method to create a new [conveyor](#conveyor).\n\n##### Input parameters:\n\n- speed_cm_per_second : Speed of the conveyor [centimeter per second].\n- length : Length of the conveyor in centimeter.\n- width : Width of the conveyor in centimeter.\n\n##### Returns\n- A [conveyor](#conveyor) object.\n\n---\n\n#### Sorting_function\n\n```python\ndef sorting_function(sensors_output)\n```\n\nA user-defined function that identifies the type of plastic, based on the given spectrum.\n\n##### Input parameters:\n\n- sensors_output : A dictionary with sensors information. The keys are the id of each sensor.\n\n```python\n{\n    sensor.id: {\n        'type': type,\n        'location': location,\n        'spectrum': spectrum,\n    }\n}\n```\n\n##### Return value:\n\n- plastic_type dict: [Plastic](#plastic)\n```python\ndecision = {\n    sensor_id: plastic_type\n}\n```\n\n---\n\n#### Plastic\n\n```python\nclass Plastic(enum.Enum):\n    HDPE = 'HDPE'\n    LDPE = 'LDPE'\n    PP = 'PP'\n    PS = 'PS'\n    PC = 'PC'\n    PVC = 'PVC'\n    Polyester = 'Polyester'\n    PET = 'PET'\n    PU = 'PU'\n    Blank = 'background'\n```\n\nAn enum for all types of plastics\n\n---\n\n#### SpectrumType\n\n```python\nclass SpectrumType(enum.Enum):\n    FTIR = 'FTIR'\n    Raman = 'Raman'\n```\n\nAn enum for all types of sensors\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "rcplant",
    "package_url": "https://pypi.org/project/rcplant/",
    "platform": null,
    "project_url": "https://pypi.org/project/rcplant/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/rcplant/1.1.3/",
    "requires_dist": [
      "pandas (>=1.3.4)",
      "openpyxl (>=3.0.9)",
      "numpy (>=1.21.5)"
    ],
    "requires_python": ">=3.7",
    "summary": "Recycling Plant Simulator",
    "version": "1.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13935322,
  "releases": {
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7d796626db4af223f9573dccb428ccdeb63637f0675ceb7c8e8c8aaaca094ccd",
          "md5": "d44435df28a0bfe0fbaab788f56c6a57",
          "sha256": "9d90f9b2f12113ba21e78a3eed26096c9a6f94ce774b01b6bb85d1eb3ccf0633"
        },
        "downloads": -1,
        "filename": "rcplant-1.0.2-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "d44435df28a0bfe0fbaab788f56c6a57",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": ">=3.8",
        "size": 2249669,
        "upload_time": "2022-02-05T18:26:34",
        "upload_time_iso_8601": "2022-02-05T18:26:34.808286Z",
        "url": "https://files.pythonhosted.org/packages/7d/79/6626db4af223f9573dccb428ccdeb63637f0675ceb7c8e8c8aaaca094ccd/rcplant-1.0.2-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a1cccf34ed048c7708bc7d79f7434ede0c074adee19d99a5943b6fbd2dab3060",
          "md5": "ee1c12db213c46d20978d09ba31f3c35",
          "sha256": "e3acd1ba9c49598167645396b349a5eeca95274258d19ea81fc02a4b089319bc"
        },
        "downloads": -1,
        "filename": "rcplant-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ee1c12db213c46d20978d09ba31f3c35",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 2233030,
        "upload_time": "2022-02-05T18:26:39",
        "upload_time_iso_8601": "2022-02-05T18:26:39.023368Z",
        "url": "https://files.pythonhosted.org/packages/a1/cc/cf34ed048c7708bc7d79f7434ede0c074adee19d99a5943b6fbd2dab3060/rcplant-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f6a31b7736e88e77f837230b4421b45fbe47968f5336a41f13437f10749fc027",
          "md5": "78f7b6a2d98f2377aef4627877e855eb",
          "sha256": "d80340004ce3d25f6260ffcb4391f18bf9e6db7a4d9b7633926695f48cf80c88"
        },
        "downloads": -1,
        "filename": "rcplant-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "78f7b6a2d98f2377aef4627877e855eb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 2249839,
        "upload_time": "2022-02-05T19:45:54",
        "upload_time_iso_8601": "2022-02-05T19:45:54.015905Z",
        "url": "https://files.pythonhosted.org/packages/f6/a3/1b7736e88e77f837230b4421b45fbe47968f5336a41f13437f10749fc027/rcplant-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ae6e38670b24e8bb4e5c4918f8d37d5f489ccd045fae431e25f6677e019676de",
          "md5": "169d191bc1c9eadf65e916ee870dc6c2",
          "sha256": "660c6eded7d3e43f93f365df581e692015dc8e0d9a14c57e3bd3715bcc3c0fd8"
        },
        "downloads": -1,
        "filename": "rcplant-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "169d191bc1c9eadf65e916ee870dc6c2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 2244882,
        "upload_time": "2022-02-05T19:45:57",
        "upload_time_iso_8601": "2022-02-05T19:45:57.609204Z",
        "url": "https://files.pythonhosted.org/packages/ae/6e/38670b24e8bb4e5c4918f8d37d5f489ccd045fae431e25f6677e019676de/rcplant-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fa0c41ec9da37cd8d0406b613cf44a91271e9a573d737381261d6ef6695bd083",
          "md5": "8241f0c98c1589b9181e7345781cd00c",
          "sha256": "2409d339da2b911b039c7a8ea51c3d4c2c37a1963a21c9db6218ffcb99a03fe6"
        },
        "downloads": -1,
        "filename": "rcplant-1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8241f0c98c1589b9181e7345781cd00c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 2249828,
        "upload_time": "2022-02-05T22:24:48",
        "upload_time_iso_8601": "2022-02-05T22:24:48.780527Z",
        "url": "https://files.pythonhosted.org/packages/fa/0c/41ec9da37cd8d0406b613cf44a91271e9a573d737381261d6ef6695bd083/rcplant-1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4e12c57a9f20dbf41116826bcc64a32d97e919c4159776a054d72fc771b0fd06",
          "md5": "31a81c52993d792a0660ec9563e52976",
          "sha256": "bff463477897afb5fd0d074e16f8d7f2c927d12fedddad907387b80c1ad2a271"
        },
        "downloads": -1,
        "filename": "rcplant-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "31a81c52993d792a0660ec9563e52976",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 2244829,
        "upload_time": "2022-02-05T22:24:52",
        "upload_time_iso_8601": "2022-02-05T22:24:52.457286Z",
        "url": "https://files.pythonhosted.org/packages/4e/12/c57a9f20dbf41116826bcc64a32d97e919c4159776a054d72fc771b0fd06/rcplant-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "99c2cf7f306fe834dbd3eb736473ff96c0a21b1ab6f485f3fc5bcf889c4f01d3",
          "md5": "fb86d4335d5307ac032681e7bdd2742d",
          "sha256": "c964cdbce34f0d92c9e77d3b3f19d43913ec14493af17f3c4e99b3c1824e0074"
        },
        "downloads": -1,
        "filename": "rcplant-1.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fb86d4335d5307ac032681e7bdd2742d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 2250180,
        "upload_time": "2022-03-01T23:06:53",
        "upload_time_iso_8601": "2022-03-01T23:06:53.796408Z",
        "url": "https://files.pythonhosted.org/packages/99/c2/cf7f306fe834dbd3eb736473ff96c0a21b1ab6f485f3fc5bcf889c4f01d3/rcplant-1.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "45237024247bd9fa11c211b98e488ae0e5687c8aa6565bdea981a68433d2b01f",
          "md5": "7c8b05bc8fc26a81879966925ab33aec",
          "sha256": "1485bd2ee4f990b7a22d7bd840d90aa2fe07d9431e33b97881c0d1f625e438df"
        },
        "downloads": -1,
        "filename": "rcplant-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7c8b05bc8fc26a81879966925ab33aec",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 2245315,
        "upload_time": "2022-03-01T23:06:56",
        "upload_time_iso_8601": "2022-03-01T23:06:56.208542Z",
        "url": "https://files.pythonhosted.org/packages/45/23/7024247bd9fa11c211b98e488ae0e5687c8aa6565bdea981a68433d2b01f/rcplant-1.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f03b28a01d597561204e3e51733c40ed4065a9c035ff8aa9648feae650c4641e",
          "md5": "72bb685d716da08eeaada38f929ce1ec",
          "sha256": "f49ee5c090c017bc44ae15b12fc6a79b30a15742b1efd5812dbb3ad5929a8d18"
        },
        "downloads": -1,
        "filename": "rcplant-1.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "72bb685d716da08eeaada38f929ce1ec",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 2250278,
        "upload_time": "2022-05-25T15:50:23",
        "upload_time_iso_8601": "2022-05-25T15:50:23.834591Z",
        "url": "https://files.pythonhosted.org/packages/f0/3b/28a01d597561204e3e51733c40ed4065a9c035ff8aa9648feae650c4641e/rcplant-1.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2cbffc946ec77d52b694f0fa7c6c08a4fb015eb493515378766c700e9ab95d02",
          "md5": "6158afc7266f8790c104a9f745d2cddf",
          "sha256": "3fd1500dc1361370d9b212c44469a400d47c427f0f6b2875cbaea845b1d663fc"
        },
        "downloads": -1,
        "filename": "rcplant-1.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "6158afc7266f8790c104a9f745d2cddf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 2245503,
        "upload_time": "2022-05-25T15:50:26",
        "upload_time_iso_8601": "2022-05-25T15:50:26.138296Z",
        "url": "https://files.pythonhosted.org/packages/2c/bf/fc946ec77d52b694f0fa7c6c08a4fb015eb493515378766c700e9ab95d02/rcplant-1.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f03b28a01d597561204e3e51733c40ed4065a9c035ff8aa9648feae650c4641e",
        "md5": "72bb685d716da08eeaada38f929ce1ec",
        "sha256": "f49ee5c090c017bc44ae15b12fc6a79b30a15742b1efd5812dbb3ad5929a8d18"
      },
      "downloads": -1,
      "filename": "rcplant-1.1.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "72bb685d716da08eeaada38f929ce1ec",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 2250278,
      "upload_time": "2022-05-25T15:50:23",
      "upload_time_iso_8601": "2022-05-25T15:50:23.834591Z",
      "url": "https://files.pythonhosted.org/packages/f0/3b/28a01d597561204e3e51733c40ed4065a9c035ff8aa9648feae650c4641e/rcplant-1.1.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2cbffc946ec77d52b694f0fa7c6c08a4fb015eb493515378766c700e9ab95d02",
        "md5": "6158afc7266f8790c104a9f745d2cddf",
        "sha256": "3fd1500dc1361370d9b212c44469a400d47c427f0f6b2875cbaea845b1d663fc"
      },
      "downloads": -1,
      "filename": "rcplant-1.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "6158afc7266f8790c104a9f745d2cddf",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 2245503,
      "upload_time": "2022-05-25T15:50:26",
      "upload_time_iso_8601": "2022-05-25T15:50:26.138296Z",
      "url": "https://files.pythonhosted.org/packages/2c/bf/fc946ec77d52b694f0fa7c6c08a4fb015eb493515378766c700e9ab95d02/rcplant-1.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}