{
  "info": {
    "author": "Sundar Nagarajan",
    "author_email": "sun.nagarajan@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Cython",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "## python_protected_class\n\n### Protect class attributes in any python object instance\n\n- Supports (virtually) any python object\n- Uses Cython to build a C extension\n- Does not leave a back door like:\n    - Attributes still accessible using ```object.__getattribute__(myobj, atribute)```\n    - Looking at python stack frame\n- Tested on Python 2.7.17 and python 3.6.9, 3.7.5, 3.8.0\n- Should work on any Python 3 version\n- Well documented (docstring)\n- doctests in tests directory\n- Tested (only) on Ubuntu Bionic 18.04. Should work on any Linux distribution\n- Should work wherever cython works\n- If you want to CHANGE the source and recompile protected_class.c, and you want it\n  to work with Python 3.7+, you need to install cython version >= 0.27.3\n  Do this with\n  ```sudo pip3 install --upgrade cython>=0.27.3```\n- This README.md is not completely up to date. Use ```pydoc protected_class``` for the most up-to-date documentation\n\n\n### Usage\n```python\n# Use any custom class of your own\nclass MyClass(object):\n    def __init__(self):\n        self.__hidden = 1\n        self._private = 2\n        self.public = 3\n\n\n# Get an instance of your class\nmyinst = MyClass()\n\n# import + ONE line to wrap and protect class attributes\nfrom protected_class import Protected\nwrapped = Protected(myinst)\n```\n\nThat's it!\n\n### Options: Proteced class constructor keyword arguments:\n\n| Option            | Type        | Default  | Description | Overrides |\n| ----------------- | ----------- | -------- | ----------- | --------- |\n| **add**           | **bool**    | **True** | **<ul><li>Whether attributes can be ADDED</li></ul>** | |\n| frozen            | bool        | False    | <ul><li>If True, no attributes can be CHANGED or ADDED</li></ul> | <ul><li>add</li><li>rw</li></ul> | |\n| **protect_class** | bool        | **True** | **<ul><li>Prevents modification of CLASS of wrapped object</li><li>Doesn't PREVENT modification, but modification has no effect</li></ul>** | |\n| hide_all          | bool        | False    | <ul><li>All attributes will be hidden</li><li>Can override selectively with 'show'</li></ul> | |\n| hide_data         | bool        | False    | <ul><li>Data (non-method) attributes will be hidden</li><li>Override selectively with 'show'</li></ul> | |\n| hide_method       | bool        | False    | <ul><li>Method attributes will be hidden</li><li>Override selectively with 'show'</li></ul> | |\n| hide_private      | bool        | False    | <ul><li>Private vars (form _var) will be hidden</li><li>Override selectively with 'show'</li></ul> | |\n| hide_dunder       | bool        | False    | <ul><li>'dunder-vars' will be hidden</li><li>Override selectively with 'show'</li></ul> | |\n| ro_all            | bool        | False    | <ul><li>All attributes will be read-only</li><li>Can override selectively with 'rw'</li></ul> | |\n| ro_data           | bool        | False    | <ul><li>Data (non-method) attributes will be read-only</li><li>Override selectively with 'rw'</li></ul> | |\n| **ro_method**     | **bool**    | **True** | **<ul><li>Method attributes will be read-only</li><li>Override selectively with 'rw'</li></ul>** | |\n| **ro_dunder**     | **bool**    | **True** | **<ul><li>'dunder-vars' will be  read-only</li><li>Override selectively with 'rw'</li></ul>** | |\n| ro                | list of str | [ ]   | <ul><li>Attributes that will be read-only</li><li>Can selectively override with 'rw'</li></ul> | |\n| rw                | list of str | [ ]   | <ul><li>Attributes that will be read-write</li></ul> | <ul><li>ro_all</li><li>ro_data</li><li>ro_method</li><li>ro_dunder</li><li>ro</li></ul> |\n| hide              | list of str | [ ]   | <ul><li>Attributes that will be hidden</li><li>Override selectively with 'show'</li></ul> | |\n| show              | list of str | [ ]   | <ul><li>Attributes that will be visible</li></ul> | <ul><li>hide_all</li><li>hide_data</li><li>hide_method</li><li>hide_dunder</li><li>hide</li></ul> |\n\n### VISIBILITY versus READABILITY or ACCESSIBILITY\n#### VISIBILITY: appears in dir(object)\n- Never affected by Protected class: ```object.__dir__(myinst)``` will still show ALL attribute **NAMES**\n- Note: visibility in Protected object IS controlled by Protected class: ```object.__dir__(wrapped)``` will show attributes based on options used with Protected class\n\n#### READABILITY or ACCESSIBILITY: Accessing the VALUE of the attribute\n- Applies to Protected object instance - NOT original wrapped object\n- Code of original wrapped object instance is completely UNAFFECTED by Protected Class\n- Accessibility of attributes of original wrapped object through Protected class instance IS controled by Protected class\n- Affects ```getattr```, ```hasattr```, ```object.__getattribute__``` etc\n\n### MUTABILITY: Ability to CHANGE or DELETE an attribute\n- Protected class will not allow CHANGING OR DELETING an attribute that is not VISIBLE - per rules of Protected class\n- Attributes set to read-only using Protected class cannot be modified through Protected class instance. The code of the original wrapped object is not affected by this.\n\n| Option        | Attribute Type    | Readability | Mutability     |\n| ------------- | ----------------- | ----------- | -------------- |\n| frozen        | Any               | NO          | YES            |\n| add           | Added at run-time | NO          | NO             |\n| protect_class | object class      | NO          | YES            |\n| hide_all      | ANY               | YES         | YES (Indirect) |\n| hide_data     | Data attributes   | YES         | YES (Indirect) |\n| hide_method   | Method attributes | YES         | YES (Indirect) |\n| hide_private  | Private attributes | YES         | YES (Indirect) |\n| hide_dunder   | dunder-attributes | YES         | YES (Indirect) |\n| ro_all        | ANY               | NO          | YES            |\n| ro_data       | Data attributes   | NO          | YES            |\n| ro_method     | Method attributes | NO          | YES            |\n| ro_dunder     | dunder-attributes | NO          | YES            |\n| ro            | ANY               | NO          | YES            |\n| rw            | ANY               | NO          | YES            |\n| hide          | ANY               | YES         | YES (Indirect) |\n| show          | ANY               | YES         | NO             |\n\n\n### Default settings:\n- Traditional (mangled) Python private vars are ALWAYS hidden\n    - CANNOT be overridden\n- Private vars (form _var) will be read-only\n    - Can use hide_private to hide them\n    - They CANNOT be made read-write\n- add == True: New attributes can be added (Python philosophy)\n- protect_class == True: Prevents modification of CLASS of wrapped object\n- ro_dunder == True: 'dunder-vars' will be  read-only\n- ro_method == True: Method attributes will be read-only\n- All other non-dunder non-private data attributes are read-write\n\n### Non-overrideable behaviors of Protected class:\n1. Traditional python 'private' vars - start with ```__``` but do not end with ```__``` - can never be read, written or deleted\n2. If an attribute cannot be read, it cannot be written or deleted\n3. Attributes can NEVER be DELETED UNLESS they were added at run-time\n4. Attributes that are properties are ALWAYS visible AND WRITABLE (except if 'frozen' is used)\n    - Properties indicate an intention of class author to expose them\n    - Whether they are actually writable depends on whether class author implemented property.setter\n5. The following attributes of wrapped object are NEVER visible:\n       ```__dict__```, ```__delattr__```, ```__setattr__```, ```__slots__```, ```__getattribute__```\n6. You cannot subclass Protected class\n\n### Python rules for attributes of type 'property':\n- Properties are defined in the CLASS, and cannot be changed in the object INSTANCE\n- Properties cannot be DELETED\n- Properties cannot be WRITTEN to unless property has a 'setter' method defined in the CLASS\n- These rules are implemented by the python language (interpreter) and Protected class does not enforce or check\n\n### What kind of python objects can be wrapped?\nPretty much anything. Protected only mediates attribute access using ```object.__getattribute__```, ```object.__setattr__``` and ```object.__delatr__```. If these methods work on your object, your object can be wrapped\n\n### Can a Protected class instance be wrapped again using Protected?\n**YES !**\n\n### Why can't I subclass Protected class?\n- Protected class is only for wrapping a python object INSTANCE\n- NONE of the atributes of Protected class are exposed - only (selecive) attributes of the WRAPPED object\n- Overriding methods of Protected class is not possible - since Protected is implemented in C\n- Overriding attributes of wrapped object is not possible, since the original object is wrapped inside Protected and all accesses are hrough the Proteced class instance\n- New attributes defined in sub-class will not be accessible, since attribute access is mediated by Protected class\n- Because of this, Protected class PREVENTS sub-classing\n- Subclass your python object BEFORE wrapping with Protected\n\n\n### How do I\n#### Make my object completely read-only\n- Use ```add=False, frozen=True```\n\n#### Completely hide private variables hat are normally read-only, but visible\n- Use ```hide_private=True```\n\n#### Hide all except properties\n- Use ```ro_all=True```\n\n#### Hide all dunder-attributes except specific ones\n- Use ```hide_dunder=True, show=['exception1', 'exception2']```\n\n#### Hide all attributes except specific ones\n- Use ```hide_all=True, show=['exception1', 'exception2']```\n\n#### Make all attributes read-only except specific ones\n- Use ```ro_all=True, rw=['exception1', 'exception2']```\n\n#### How can I get close to default python behavior\n- Use ```add=True, protect_class=False, ro_method=False, ro_dunder=False```\n- Mangled private variables still won't be visible\n- Private variables (form ```_var```) will still be read-only\n\n### Some RUN-TIME behaviors to AVOID in wrapped objects:\n- Do not create attribute - these will not be detected once the object instance is wrapped in Protected\n- Do not delete attributes - these will still appear to be part of the wrapped object when accessing through the wrapping Protected class. Actual access will result in ```AttributeError``` as expected\n- Do not change attribute TYPE - from METHOD to DATA or vice-versa\n    - This will cause predictable effects if Protected instance was created using any of the following options:\n          hide_method\n          hide_data\n          ro_method\n          ro_data\n- None of the above run-time behaviors should be common or recommended - especially when wanting to expose a wrapped interface with visibility and/or mutability protections\n\n### Work in progress\n- Completing setup.py to allow installation with ```pip```\n- Uploading to pypi.org",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sundarnagarajan/python_protected_class",
    "keywords": "private private_attributes frozen immutable freeze frozen_object immutable_object freeze_object",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "protected-class",
    "package_url": "https://pypi.org/project/protected-class/",
    "platform": "",
    "project_url": "https://pypi.org/project/protected-class/",
    "project_urls": {
      "Homepage": "https://github.com/sundarnagarajan/python_protected_class"
    },
    "release_url": "https://pypi.org/project/protected-class/1.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Protect class attributes in any python object instance",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9060469,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e8e50520221e3c47d86718f5ac88671f9b149daf8fde32338da3d24f25cb8c97",
          "md5": "33a4bdf0276d3f983b1da916fb22c4c2",
          "sha256": "7393ac514c383975451718237592f938a87a1ac7120e3fd62d4a6877f34af1fe"
        },
        "downloads": -1,
        "filename": "protected_class-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "33a4bdf0276d3f983b1da916fb22c4c2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 205877,
        "upload_time": "2020-12-22T02:53:56",
        "upload_time_iso_8601": "2020-12-22T02:53:56.562293Z",
        "url": "https://files.pythonhosted.org/packages/e8/e5/0520221e3c47d86718f5ac88671f9b149daf8fde32338da3d24f25cb8c97/protected_class-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f965353d2dd365bdec8542218e82aabc10c20e50dc18af56db0b2e39a20ce58",
          "md5": "c75996640b0cb332a20fcf25ca373da2",
          "sha256": "8fc1fe51932e3007b75e742852d48de8712e6ccf80406c46bca27fcf270472ef"
        },
        "downloads": -1,
        "filename": "protected_class-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c75996640b0cb332a20fcf25ca373da2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 209418,
        "upload_time": "2020-12-22T02:57:13",
        "upload_time_iso_8601": "2020-12-22T02:57:13.432305Z",
        "url": "https://files.pythonhosted.org/packages/1f/96/5353d2dd365bdec8542218e82aabc10c20e50dc18af56db0b2e39a20ce58/protected_class-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "478030d8a2aa20124323fc129ad0f0f01b1cd6ff5598752a2bbb72a58636504b",
          "md5": "71c560667631cc5943cad7c25d59e22f",
          "sha256": "221e931a7ca0e953c072f3840cdb470f0bae1f26fbd9e9f06f5db8be024ba218"
        },
        "downloads": -1,
        "filename": "protected_class-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "71c560667631cc5943cad7c25d59e22f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 209495,
        "upload_time": "2020-12-22T03:57:29",
        "upload_time_iso_8601": "2020-12-22T03:57:29.512693Z",
        "url": "https://files.pythonhosted.org/packages/47/80/30d8a2aa20124323fc129ad0f0f01b1cd6ff5598752a2bbb72a58636504b/protected_class-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f359732535c5289d24204d472ace60480725da75cbc3bd9b5fa62b854c2e825",
          "md5": "923c6b5d3f27469e2ac4aecb3d7132a3",
          "sha256": "560485093d3fd58a0b4d58d29b90e1719e1ac6a2a142f9a75b727d5e58e31218"
        },
        "downloads": -1,
        "filename": "protected_class-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "923c6b5d3f27469e2ac4aecb3d7132a3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 388356,
        "upload_time": "2021-01-05T20:16:56",
        "upload_time_iso_8601": "2021-01-05T20:16:56.024808Z",
        "url": "https://files.pythonhosted.org/packages/2f/35/9732535c5289d24204d472ace60480725da75cbc3bd9b5fa62b854c2e825/protected_class-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2f359732535c5289d24204d472ace60480725da75cbc3bd9b5fa62b854c2e825",
        "md5": "923c6b5d3f27469e2ac4aecb3d7132a3",
        "sha256": "560485093d3fd58a0b4d58d29b90e1719e1ac6a2a142f9a75b727d5e58e31218"
      },
      "downloads": -1,
      "filename": "protected_class-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "923c6b5d3f27469e2ac4aecb3d7132a3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 388356,
      "upload_time": "2021-01-05T20:16:56",
      "upload_time_iso_8601": "2021-01-05T20:16:56.024808Z",
      "url": "https://files.pythonhosted.org/packages/2f/35/9732535c5289d24204d472ace60480725da75cbc3bd9b5fa62b854c2e825/protected_class-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}