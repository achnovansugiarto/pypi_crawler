{
  "info": {
    "author": "Erik Sjöstrand, Gert-Jan Paulissen",
    "author_email": "gert.jan.paulissen@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 6 - Mature",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Utilities"
    ],
    "description": "- [BML - Bridge Bidding Markup Language](#org115d667)\n- [Using the BML converters](#org89d0d39)\n  - [Help](#help)\n    - [bml2bss](#bml2bss)\n    - [bml2html](#bml2html)\n    - [bml2latex](#bml2latex)\n    - [bss2bml](#bss2bml)\n    - [latexmk](#latexmk)\n- [BML Syntax](#orgb7edaf0)\n  - [Editor](#editor)\n  - [Bidding tables](#org7d04bc7)\n    - [Competitive auctions](#orgb09a520)\n    - [Hiding from export](#org1ad58a1)\n    - [Copy/Cut/Paste](#org6245610)\n    - [Seat and vulnerability dependency](#orgedebd00)\n  - [Headers and paragraphs](#org611b48c)\n  - [Metadata](#orgcac4b8a)\n  - [Deal diagrams](#orgd8dc689)\n  - [Lists](#org686568f)\n  - [Comments](#org423e46a)\n  - [Including other files](#orgc6198d8)\n  - [Font styles](#org52b95c3)\n- [BSS Lifecycle Note](#bss_lifecycle_note)\n- [BSS Syntax](#bss_syntax)\n  - [Header Record](#bss_header_record)\n  - [Stock Convention Card Record](#bss_stock_convention_card_record)\n  - [Bidding Sequence](#bss_bidding_sequence)\n  - [Convention Record](#bss_convention_record)\n  - [Defensive Carding Record](#bss_defensive_carding_record)\n- [Changelog](#changelog)\n\n<a id=\"org115d667\"></a>\n\n# BML - Bridge Bidding Markup Language\n\nThis GitHub repository (<https://github.com/gpaulissen/bml>) created by Gert-Jan Paulissen is a fork of <https://github.com/Kungsgeten/bml> created by Erik Sjöstrand. The BML format and its utilities in this repository are supposed to be backwards compatible unless mentioned otherwise. In order to better distinguish between both BML versions, I may refer to BML 1 (Erik's version) and BML 2 (this version).\n\nThe purpose of the *Bridge Bidding Markup Language* (BML) is to offer an easy\nway of documenting contract bridge bidding systems. The file(s) created are\nsupposed to be easy to read for both human and machines. A BML file is created\nusing an ordinary text editor (like *Notepad* or even better [Notepad++](https://notepad-plus-plus.org/)).\n\nPrograms have been written in order to export BML files to the following formats:\n\n-   **HTML**: Outputs a .htm file which can be used on the web. Use bml2html.\n\n-   **LaTeX**: Outputs a .tex file which can be converted to a pdf, using LaTeX. Use bml2latex.\n\n-   **Full Disclosure**: Outputs a .bss file to be used on the popular bridge website [Bridge Base Online](http://www.bridgebase.com) (BBO) where the players are able to submit their own systems in order to have their bids alerted automatically when bidding. Use bml2bss.\n\nPlease note that the latest option is obsolete now. The BBO web version does not\nsupport it anymore. An alternative may be\n[BBOalert](https://github.com/stanmaz/BBOalert) that allows you to upload these\n.bss files. In the past you could use the BBO desktop Windows client to upload\n.bss files.\n\nCheckout example.txt in directory test/data for an example of how BML looks. Also be sure to check\nout example.htm, example.tex (and example.pdf) and example.bss in directory\ntest/expected to see how BML converts to different formats.\n\nThere is also a program to convert back to BML format:\n\n-   **BML**: Outputs a .bml file from a .bss file. Use bss2bml.\n\nAllows you to reformat a .bml file by converting it first to .bss and then\nback to .bml. You will loose all the features of BML except the bidding tables\nthough.\n\nIt may also be handy when you have received a BBO .bss file and you want to\ncreate a first draft of a .bml file.\n\n<a id=\"org89d0d39\"></a>\n\n# Using the BML converters\n\nSee the [BML Installation\nGuide](https://gpaulissen.github.io/blog/bml-installation) for how to install\nthe converters of BML.\n\nAfter the installation the BML converters are available on your system and you\ncan use them most easily using a command prompt.\n\n<a id=\"help\"></a>\n\n## Help\n\n<a id=\"bml2bss\"></a>\n\n### bml2bss\n\nConvert to Bridge Base Online BSS format. See **Full Disclosure** above.\n\nOpen a command prompt and issue:\n\n```\nbml2bss -h\n```\n\nYou should see at least:\n\n```\nusage: Convert BML to BSS. [-h] [-o OUTPUTFILE] [-v] inputfile\n\npositional arguments:\n  inputfile             the input file (- is stdin)\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -o OUTPUTFILE, --outputfile OUTPUTFILE\n                        the output file (- is stdout)\n  -v, --verbose         increase output verbosity\n```\n\nWhen no output file is supplied, it is constructed from the input file by\nreplacing that extension by `.bss` (except of course when the input is `-`).\n\n<a id=\"bml2html\"></a>\n\n### bml2html\n\nConvert to HTML format. See **HTML** above.\n\nOpen a command prompt and issue:\n\n```\nbml2html -h\n```\n\nYou should see at least:\n\n```\nusage: Convert BML to HTML. [-h] [-i {1,2,3,4,5,6,7,8,9}] [-o OUTPUTFILE] [-v] [--tree | --no-tree] [--include-external-files | --no-include-external-files] inputfile\n\npositional arguments:\n  inputfile             the input file (- is stdin)\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i {1,2,3,4,5,6,7,8,9}, --indentation {1,2,3,4,5,6,7,8,9}\n                        the indentation of a bidtable\n  -o OUTPUTFILE, --outputfile OUTPUTFILE\n                        the output file (- is stdout)\n  -v, --verbose         increase output verbosity\n  --tree\n  --no-tree\n  --include-external-files\n  --no-include-external-files\n```\n\nWhen no output file is supplied, it is constructed from the input file by\nreplacing that extension by `.htm` (except of course when the input is `-`).\n\nThe `--tree` command line option creates nice looking bidtable trees (this is the\ndefault). The `--no-tree` does not create such trees.\n\nThe `--include-external-files` includes the bml.css style sheet into the\ngenerated output file (this is the default). The `--no-include-external-files`\njust creates a link reference to that file but then at run-time that style\nsheet should be present.\n\n<a id=\"bml2latex\"></a>\n\n### bml2latex\n\nConvert to LaTeX format. See **LaTeX** above.\n\nOpen a command prompt and issue:\n\n```\nbml2latex -h\n```\n\nYou should see at least:\n\n```\nusage: Convert BML to LaTeX. [-h] [-i {1,2,3,4,5,6,7,8,9}] [-o OUTPUTFILE] [-v] [--tree | --no-tree] [--include-external-files | --no-include-external-files] inputfile\n\npositional arguments:\n  inputfile             the input file (- is stdin)\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i {1,2,3,4,5,6,7,8,9}, --indentation {1,2,3,4,5,6,7,8,9}\n                        the indentation of a bidtable\n  -o OUTPUTFILE, --outputfile OUTPUTFILE\n                        the output file (- is stdout)\n  -v, --verbose         increase output verbosity\n  --tree\n  --no-tree\n  --include-external-files\n  --no-include-external-files\n```\n\nWhen no output file is supplied, it is constructed from the input file by\nreplacing that extension by `.tex` (except of course when the input is `-`).\n\nThe `--tree` command line option creates nice looking bidtable trees (this is the\ndefault). The `--no-tree` does not create such trees.\n\nThe `--include-external-files` includes the bml.tex package into the generated\noutput file (this is the default). The `--no-include-external-files`\njust adds \\\\include{bml} to the generated output file but then you must have\nthe bml.tex at some point where LaTeX can find it.\n\n<a id=\"bss2bml\"></a>\n\n### bss2bml\n\nConvert BSS to BML format. See **BML** above.\n\nOpen a command prompt and issue:\n\n```\nbss2bml -h\n```\n\nYou should see at least:\n\n```\nusage: Convert BSS to BML. [-h] [-o OUTPUTFILE] [-v] inputfile\n\npositional arguments:\n  inputfile             the input file (- is stdin)\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -o OUTPUTFILE, --outputfile OUTPUTFILE\n                        the output file (- is stdout)\n  -v, --verbose         increase output verbosity\n```\n\nWhen no output file is supplied, it is constructed from the input file by\nreplacing that extension by `.bml` (except of course when the input is `-`).\n\n<a id=\"latexmk\"></a>\n\n### latexmk\n\nThis program that belongs to LaTeX (hence not part of BML) lets you convert a LaTeX (.tex) file to a PDF (or other file types).\n\nOpen a command prompt and issue this command to get help:\n\n```\nlatexmk -h\n```\n\nTo generate PDFs from every .tex files found in the current directory you just issue:\n\n```\nlatexmk -pdf\n```\n\nTo generate file /tmp/test.pdf from file test.tex, you just issue:\n\n```\nlatexmk -pdf -output-directory=/tmp test.tex\n```\n\nThe installation of this program is covered by the [BML Installation\nGuide](https://gpaulissen.github.io/blog/bml-installation).\n\n<a id=\"orgb7edaf0\"></a>\n\n# BML Syntax\n\nThe goal of BML's syntax is to be readable and easy to write. It is heavily\ninspired by [org-mode](http://orgmode.org/); a plugin included in the powerful\ntext editor [Emacs](http://www.gnu.org/software/emacs/). If using org-mode in\nEmacs, there are some nifty features which might make it easier to work with BML.\n\nPerhaps the best way to get an introduction to BML is to read example.txt, as it show of a lot of the features of BML.\n\nA BML file can contain a number of elements: bidding tables, text paragraphs, section names, lists and metadata. All elements must be separated by a blank line.\n\n\n<a id=\"editor\"></a>\n\n## Editor\n\nPlease be aware of TAB characters in your BML file. They count as 1 character\nbut may look like 1 or more spaces. The rules for indentation (described later\non) count the number of whitespace characters (so a SPACE and a TAB count both\nfor one). So please try to avoid using TAB characters (or convert them to\nSPACEs using your editor settings).\n\nThe [Notepad++](https://notepad-plus-plus.org/) is a free source code editor\nthat may be useful to edit BML files. Of course you may use *Notepad* but be\nwarned about the TAB character.\n\n<a id=\"org7d04bc7\"></a>\n\n## Bidding tables\n\nThe most powerful part of BML is the ability to write bidding tables easily. Let's take a look at this basic precision structure:\n\n```\n1C  Any hand with 16+ hcp\n  1D  Artificial. 0--7 hcp\n    1H  Any hand with 20+ hcp\n  1HS 5+ suit, forcing to game (8+ hcp)\n  1N  Natural game force, 8+ hcp\n  2CD  5+ suit, forcing to game (8+ hcp)\n  2HS  6+ suit, 5--7 hcp\n1D  Nebulous with 2+!d, 11--15 hcp\n1HS 5+ suit, 11--15 hcp\n1N  14--16 hcp\n2C  6+!c or 5!c and 4!h/!s, 11--15 hcp\n2D  4414. 4405, 4305 or 3405, 11--15 hcp\n2HS Weak\n2N  Weak with 5-5 minors\n```\n\nPretty simple, right? A row is written according to the format &lt;bid&gt; &lt;description&gt;. Each bid may have sub-bids, by increasing the indentation (number of spaces). The text !c, !d, !h and !s will be converted to suit symbols when exported (and so will the bid names in the bid table).\n\nWhen writing bidding tables you may sometimes want to have a description with linebreaks. This can be done in BML by indenting the description lines at the same level. Here's an example:\n\n```\n1C  Polish club, one of three:\n    a) 12--14 NT\n    b) 15+ hcp and 5+!c\n    c) 18+ hcp any distribution\n```\n\nBecause of the description linebreak feature it isn't possible to start a sub-bid at the same indentation level as the previous bid's description.\n\nYou may add equal signs when separating bids and descriptions, instead of only whitespaces, if you prefer that notation. This can make the bidtable easier to read:\n\n```\n1m = 3+ minor\n1M = 5+ major\n1N = 15--17\n     May have 5M, 6m or 5-4 minors\n2C = Strong and forcing\n2X = Weak\n2N = 20--21\n```\n\nAs bids you could type for instance 1C, to show the bid of 1 club. D(iamond),\nH(eart), S(spade) and N(o trump) work too. You could also use to suits, like\n3CD to define both 3C and 3D at the same time. There are also some other\nspecial cases: variable suits.\n\nYou can use variable suits m (minor), om (other minor), M (major), oM (other\nmajor) and they can be used for suits **NOT** already used in the sequence\n(neither literally nor variable). So for instance when you have a bidding\ntable of opening bids you can start with 1C and later use 3m for the 3 level\nminor preempt openings since m is not used in the sequence yet (1C is not part\nof the sequence). But if you use m for any bid in the sequence **after** the\nopening bid 1C, m will be diamonds. And om is not possible.\n\n-   **&lt;digit&gt;m**: Defines a minor suit, hence both &lt;digit&gt;C and &lt;digit&gt;D (not used already in the sequence).\n-   **&lt;digit&gt;om**: Defines the other minor, hence both &lt;digit&gt;C and &lt;digit&gt;D (but only if &lt;digit&gt;m is used before).\n-   **&lt;digit&gt;M**: Defines a major suit, hence both &lt;digit&gt;H and &lt;digit&gt;S (not used already in the sequence).\n-   **&lt;digit&gt;oM**: Defines the other major suit, hence both &lt;digit&gt;H and &lt;digit&gt;S (but only if &lt;digit&gt;M is used before).\n\nYou can use variable suits X, Y and Z where X &lt; Y &lt; Z. Here too they can be\nused for suits **NOT** already used in the sequence (neither literally nor\nvariable). So for instance if in a bidding table 2X, 1Y and 3Z are used then X\nmay be clubs, Y hearts and Z spades. But not X diamonds and Y clubs since then\nY &lt; X.\n\n-   **&lt;digit&gt;X**: Defines &lt;digit&gt;C, &lt;digit&gt;D, &lt;digit&gt;H and &lt;digit&gt;S.\n-   **&lt;digit&gt;Y**: Defines &lt;digit&gt;C, &lt;digit&gt;D, &lt;digit&gt;H and &lt;digit&gt;S.\n-   **&lt;digit&gt;Z**: Defines &lt;digit&gt;C, &lt;digit&gt;D, &lt;digit&gt;H and &lt;digit&gt;S.\n\nAnd here some more special variables:\n\n-   **&lt;digit&gt;red**: Defines &lt;digit&gt;D and &lt;digit&gt;H\n-   **&lt;digit&gt;black**: Defines &lt;digit&gt;C and &lt;digit&gt;S. Since BML 2.\n-   **&lt;digit&gt;step[s]**: Defines the bid &lt;digit&gt; steps above the parent bid (the previous bid made). In response to 1C, 1step would be 1D, 2steps would be 1H etc.\n\nIn all cases you can not use two or more variables for the same suit so using\nm and X for clubs is considered an error.\n\nIt is worth noticing that whitespace before the **first bid** in the bidding table is ignored. Other indentation whitespace is part of the syntax.\n\nYou probably do not want to add your entire system to a single bidding table. The first line in a bidding table is the start of a sequence, if the characters - and/or ; are included in the bid. Here's an example of adding the answers to Stayman to an already existing sequence.\n\n```\n1N-2C;\n2D No 4 card major\n  2H 5+!h, 4!s, invitational\n  2S 5+!s, invitational\n  3HS Smolen (5+ cards in other major)\n2HS 4+ suit\n2N  4-4 majors, minimum\n3C  4-4 majors, maximum\n```\n\nIf a bid has already been defined, it will not be overwritten; the first definition stands. Normal bids (like 2C) are evaluated before special bids (like 2X), hence this would work:\n\n```\n2C Strong, forcing\n  2D Waiting\n2X Weak\n  2N Ogust\n```\n\n<a id=\"orgb09a520\"></a>\n\n### Competitive auctions\n\nIn order to describe competitive auctions, use parantheses around the opponents' bids. All bids, even passes, needs to be described in an competitive auction. P stands for Pass, D is for Double and R is for Redouble. Here's an example of a defense to 1NT:\n\n```\n(1NT)---\nD   Strength, ca 15+\n2C  At least 5-4 majors\n  (D)\n    P  5+!c, suggestion to play\n    R  Asking for better/longer major\n    2D 5+!d, suggestion to play\n  (P)\n    2D Asking for better/longer major\n2D  A weak major or a strong minor\n2HS Constructive\n2N  5-5 minors\n3X  Preemptive\n```\n\nNote that the above only defines competing directly over 1NT, balancing over 1NT would be written as `(1NT)-P-(P)---` instead of `(1NT)---`.\n\n\n<a id=\"org1ad58a1\"></a>\n\n### Hiding from export\n\nIf you add #HIDE at the beginning of a row somewhere in the bidding table, the bidding table will only be exported to Full Disclosure; not HTML nor LaTeX.\n\n\n<a id=\"org6245610\"></a>\n\n### Copy/Cut/Paste\n\nYou could copy/cut sections of bidding tables. This is done by writing #COPY &lt;name&gt; or #CUT &lt;name&gt;. The &lt;name&gt; is later used when pasting the copy. The difference between #COPY and #CUT is that #COPY will preserve the copied rows, while #CUT will remove them (and hence they will not be parsed until pasted). Use #ENDCOPY or #ENDCUT to specify where the copying/cutting ends.\n\nTo paste a copied/cut section, use #PASTE &lt;name&gt;. #PASTE takes indentation into consideration, so for instance a #CUT may be done at the top level of the document and later pasted deep into a bidding table. You can also replace text in the copy when pasting, a somewhat complex but powerful tool. This is done by typing #PASTE &lt;name&gt; &lt;target&gt;=&lt;replacement&gt;. A paste may have several targets and replacements. Let's look at an example:\n\n```\n#CUT transfer\n2\\R Transfer\n  2\\M Transfer accept\n  3\\M Super accept\n#ENDCUT\n\n1N---\n2C Stayman\n#PASTE transfer \\R=D \\M=H\n#PASTE transfer \\R=H \\M=S\n```\n\n\n<a id=\"orgedebd00\"></a>\n\n### Seat and vulnerability dependency\n\nBy default it doesn't matter which seat you're in, or which vulnerability it is, when you bid. Full Disclosure, however, allows for different meanings of sequences depending on these factors.\n\nTo change the vulnerability (for the forthcoming bidding tables) type #VUL &lt;we&gt;&lt;them&gt;. Both &lt;we&gt; and &lt;them&gt; can be Y, N or 0: Yes, No or Doesn't matter. #VUL Y0 would mean that where vulnerable, but it doesn't matter if the opponents are.\n\nSeat is changed in a similar way: #SEAT &lt;seat&gt;, where &lt;seat&gt; can be 0 (doesn't matter), 1, 2, 3, 4, 12 (first or second) or 34 (third or fourth).\n\n\n<a id=\"org611b48c\"></a>\n\n## Headers and paragraphs\n\nIn order to write text, just write normal text and separate the paragraphs by blank lines. Any whitespace in the beginning of a row will be ignored.\n\nIn order to separate the document into sections, asterisks are used. One for the first level, two for the second level etc.\n\nThe character combinations !c, !d, !h and !s will be converted into suit symbols when exported, just as in the case of bidding tables.\n\n```\n* The 1!c opening\n\n  Opening 1!c shows at least 16+ hcp, and is forcing. The\n  continuation is fairly natural.\n\n  Some hands might be upgraded to 1!c due to distribution, but\n  wildly distributional hands might also be downgraded to avoid\n  problems if the opponents preempt.\n\n** The 1!d negative\n\n   Responding 1!d shows a hand which doesn't have enough values to\n   establish a game force.\n```\n\nIn the examples above whitespace are used in the beginning of the paragraph lines, in order to make the text easier to read, but doing this is optional.\n\n\n<a id=\"orgcac4b8a\"></a>\n\n## Metadata\n\nMetadata are written like `#+METADATA:data`, where `METADATA` is the type of the data and `data` is the actual content. The available type of metadata is:\n\n-   **TITLE:** The system's title, and also the title of the document\n-   **DESCRIPTION:** A short description of the system\n-   **AUTHOR:** The author of the document\n\n```\n#+TITLE: Precision club\n#+AUTHOR: John Smith\n#+DESCRIPTION: Strong club system. Nebulous diamond and 5 card majors\n```\n\nThe metadata can be set anywhere in the BML file. If the metadata has already been set, it will not be overwritten.\n\n\n<a id=\"orgd8dc689\"></a>\n\n## Deal diagrams\n\nIt is possible to create deal diagrams with BML. **Right now these can only be exported to LaTeX.** Here's an example of a deal diagram:\n\n```\nN None 35 4SXS hK\nN Kxx T9 xxx Q987x\nE Jx AJxxx AJx KTx\nS A987xx - Q9xx Axx\nW QT KQxxxx KTx Jx\n```\n\nThe first row is the header row. The header row adds additional information about the deal, and may be excluded if you only want to show the cards. The header row can include the following information:\n\n-   **Dealer:** The dealer of this deal. You simply write the first letter of the player: `N E S W`\n-   **Vulnerability:** Who is vulnerable on this deal? You write `NS` (north/south), `EW` (east/west), `None` or `All`\n-   **Board number:** If you write a digit, this will be interpreted as the board number. 35 in the example above.\n-   **Final contract and declarer:** To specify the final contract of the deal, you simply write the contract (capital letters) and the player which played the contract. In the example above this is `4SXS` (four spades doubled, played by south). If the board is passed out, write `P`.\n-   **Lead:** The deal is written with a lower-case suit (`s h d c`), followed by the card (a number or `A K Q J T`).\n\nAny of the above parameters may be excluded from the header row if you do not want to include all the info. They may also be entered in any order. They may be followed by a comma, to make it more readable. The board number may have a # in front of it. You may have any other words in the header row as well, to increase readability.\n\nAfter the (optional) header row, the hands are specified. Each hand is written on its own row, starting with the player holding the hand (`N E S W`), optionally followed by a colon. Any hand may be excluded if you'd like a diagram not showing all hands. A hand may have any number of cards but all four suits must be specified, separated by space, in the order spades, hearts, diamonds clubs. A dash `-` is used to notate a void. A card is notated by a number, `A K Q J T` or `x`.\n\nHere's an example of how the above example diagram may be more readable:\n\n```\n#35, Dealer N, None vul, played 4SXS with hK lead\nN: Kxx    T9     xxx  Q987x\nE: Jx     AJxxx  AJx  KTx\nS: A987xx -      Q9xx Axx\nW: QT     KQxxxx KTx  Jx\n```\n\n\n<a id=\"org686568f\"></a>\n\n## Lists\n\nThere are two types of lists available in BML; ordered lists and unordered lists. The syntax is easy:\n\n```\n- The first item in an unordered list\n- The second item\n- Etc..\n\n1. The first item in an ordered list\n2. The second item\n3. Etc..\n```\n\nAt the moment it is not possible to have different levels in a BML list.\n\n\n<a id=\"org423e46a\"></a>\n\n## Comments\n\nIf you want to write text which shouldn't be shown in the export, use `//comment here`. Since BML 2 a comment must start at the beginning of a line. If this would not be enforced it is impossible to write internet addresses in your text.\n\n\n<a id=\"orgc6198d8\"></a>\n\n## Including other files\n\nIt is possible to split your system notes into different files. To include\nanother file in a document, use:\n\n```\n#INCLUDE <filename>\n```\n\nThe filename may be a relative path. Let's say you have made a BML file for a\nmulti opening, and placed it into a subfolder called \"modules\". You could now\nwrite #INCLUDE modules/multi.txt where you want the file to be inserted. And\nyou can reuse that file in other systems.\n\n\n<a id=\"org52b95c3\"></a>\n\n## Font styles\n\nBy surrounding words/sentences with / \\* or = you can make them italic, bold or monospace.\n\n```\n/Here's/ *an* =example= (italic, bold, monospace)\n```\n\n<a id=\"bss_lifecycle_note\"></a>\n\n# BSS Lifecycle Note\n\nPlease note that BSS is not supported anymore by Bridge Base Online. The\ndocumentation below will talk about a Full Disclosure editor, which was the\nWindows program `bidedit.exe` if I remember it well. I do not know if that\nprogram can still be installed.\n\nBut you can still upload BSS files using [BBOalert](https://github.com/stanmaz/BBOalert).\n\n<a id=\"bss_syntax\"></a>\n\n# BSS Syntax\n\nConvention Card Definition and Convention Definition files are ASCII text\nfiles having a '.bss' file name extension. As might be surmised from the use\nof a specific file name extension, the files have a well defined format,\nincluding encoding of information. In a defined context, a specific character\nwill be an encoding of something, for example, a single character will\nrepresent position at the table (including one character to indicate 1st or\n2nd position, etc.).\n\nThe file consists of a series of 'records'. A record is a line of the text\nfile : it is terminated by a 'new line' character. The overall format of the\nfile is:\n\n- A single header record\n- Zero or one stock convention card records\n- Zero or more bidding sequence records\n- Zero or more include (convention) records\n- Zero or one defensive carding records\n\n<a id=\"bss_header_record\"></a>\n\n## Header Record\n\n### Format\n```\n*00 [{<System Name>}] = NYYYYYY [<Summary>]\n?00 [{<System Name>}] = NYYYYYY [<Summary>]\n```\n\n### Description\nThe first record in the file is a Header record. The '00' and the '= NYYYYYY'\nare ignored (though they must be present).\n\n### File Type\nThe first character in the record is either an '\\*' or a '?'. An '\\*' indicates\na standard Convention Card Definition or Convention Definition file; a '?'\nidentifies a Floating Convention Definition file. Currently the only stock\nFloating convention is 'Roman Key Card Blackwood (1430)'.\n\nAlthough the Full Disclosure editor can be used to open any Convention\nDefinition file, editing Floating conventions is not currently supported\n(nothing will be visible in the editor except the name and description).\n\n### System Name\nSystem Name is the name entered in the Define dialog when editing the convention card file.\n\n### Summary\nSummary is the system summary entered in the Define dialog when editing the convention card file.\n\n<a id=\"bss_stock_convention_card_record\"></a>\n\n## Stock Convention Card Record\n\n### Format\n```\n$ <File Name>\n```\n\n### Description\nWhen you edit one of the stock convention cards online, change it, and save it\nunder a new name, then rather than storing a complete copy of the Convention\nCard Definition file, a reference to the stock card is put into your new file.\n\nThere can only be one Convention Card Record in a Convention Card Definition\nfile. If there is one, it appears immediately after the Header record.\n\n### File Name\nFile Name is the name of the stock Convention Card Definition file. These\nfiles are stored in the 'convcards\\\\default convcards' subdirectory of the\n'Bridge Base Online' directory.\n\n<a id=\"bss_bidding_sequence\"></a>\n\n## Bidding Sequence\n\n### Format\n```\n  AB <Bidding Sequence> = CDEFGHI J [KL] [<Description>]\n* AB <Bidding Sequence> = CDEFGHI J [KL] [<Description>]\n```\n\nRecords that start with an asterisk represent competitive sequences where They\nopen; those without the asterisk represent sequences where We open.\n\nThe capital letters, except in the name of character strings, represent\nencodings : each is a single character representing some information.\n\n### Position\n'A' represents the position in which the opening bid is made. Implicitly this\ndefines the Dealer, which is the label used in the Full Disclosure editor when\ndefining the bid.\n\nThe encoding is:\n\n- 0 : Any position\n- 1 : 1st position\n- 2 : 2nd position\n- 3 : 3rd position\n- 4 : 4th position\n- 5 : 1st or 2nd position\n- 6 : 3rd or 4th position.\n\n### Vulnerability\n'B' represents the prevailing vulnerability conditions which apply to the bidding sequence.\n\nIn the following list of encodings, the labels used in the Full Disclosure\neditor are included in parentheses.\n\n- 0 : Any conditions (Any)\n- 1 : Nobody vulnerable (None vul)\n- 2 : We are vulnerable; they are not (Only we vul)\n- 3 : We are not vulnerable; they are (Only they vul)\n- 4 : Both sides are vulnerable (Both vul)\n- 5 : We are not vulnerable; they may or may not be (We not vul)\n- 6 : We are vulnerable; they may or may not be (We vul)\n- 7 : We may or may not be vulnerable; they are not (They not vul)\n- 8 : We may or may not be vulnerable; they are (They vul)\n\n### Bidding Sequence\nThe Bidding Sequence starts immediately after the first two characters and is\nterminated by the equals sign ('='). The calls in the sequence are either 'P'\nfor Pass, 'D' for Double, 'R' for Redouble, or a bid. A bid consists of a\nsingle digit ('1' to '7') followed by the initial letter of the strain ('S',\n'H', 'D', 'C', or 'N' for notrump).\n\nNote: If a Qualification is entered for an opponent's bid, then that\nqualification will appear as a string within braces (curly brackets). It will\nappear after the bid that was qualified and after the intervention. The\nqualified bid does not have to be the first one in the sequence; for example,\nyou might play one agreement over an opponent's transfer bid, but another if\ntheir suit responses to 1NT are natural.\n\n### Artificial Bid\n'C' is used to indicate whether the last bid in the sequence is artificial ('Y') or not ('N').\n\n### Possible Outcomes\nThe next six characters ('D' through 'I') represent the six possible\noutcomes. If the outcome is possible, it is a 'Y'; otherwise an 'N'. The\noutcomes (possible strains that are still open after the last bid in the\nsequence) are, in order:\n\n- D : Clubs\n- E : Diamonds\n- F : Hearts\n- G : Spades\n- H : Notrump\n- I : Defend undoubled\n\n### Disposition\n'J' encodes the Disposition of the last bid in the sequence as defined in Full Disclosure.\n\nThe encoding is:\n\n- 0 : no agreement\n- 1 : Signoff\n- 2 : Non-forcing\n- 3 : Constructive\n- 4 : Invitational\n- 5 : Forcing\n- 6 : Forcing to game\n- 7 : Slam try\n- 8 : Control bid\n- 9 : Preemptive\n- A : Transfer\n- B : Puppet\n- C : Relay\n- D : Asking bid\n- E : Asking bid response\n \n### Suit Length\nThe minimum and maximum promised suit length that apply to the last bid in the bidding sequence are defined by 'K' and 'L' respectively.\n\nIf the last bid is a notrump bid, then 'K' and 'L' are omitted.\n\nThe digits '0' to '8' are used to represent the actual length for the minimum length ('K').\n\nIn the case of the maximum length ('L'), the digits '0' to '7' are used to represent the actual length, and '8' to represent 'Any'.\n\n### Description\nThe Description string is whatever you entered under Description when you defined the last bid in the bidding sequence.\n\n<a id=\"bss_convention_record\"></a>\n\n## Convention Record\n\n### Format\n```\n+ <File Name>\n```\n\n### Description\nWhen you use Manage Conventions in the Full Disclosure editor, it creates (or\nremoves) Convention records. These are simply pointers to the appropriate\nConvention Definition files.\n\nMultiple Convention Records are allowed, however they cannot be nested (the\nConvention Definition file cannot contain further Convention Records).\n\n### File Name\nFile Name is the name of the Convention Definition file. These files are\nstored in the 'conventions' subdirectory of the 'Bridge Base Online'\ndirectory.\n\n<a id=\"bss_defensive_carding_record\"></a>\n\n## Defensive Carding Record\n\n### Comment\nThere should never be a need to edit or generate this record other than by\nusing the Full Disclosure editor.\n\n### Format\n```\n% <Leads vs NT> <Leads vs Suits> <Defensive Signals> [<Description and Other agreements>]\n```\n\n### Description\nThis record represents your carding agreements and, if there is one, is the\nlast record in the file.\n\n### Leads vs NT\nThere are 22 characters in this string, each representing one of the card\ncombinations listed in the Leads vs NT section of the Full Disclosure editor's\nOpening Leads section.\n\nThe choices you can make in the editor do not always include every card in the\ncombination; for example, you cannot choose to lead the Queen from Qxx. Of the\navailable choices, 'B' indicates the top card, 'C' the next lower card, and so\non.\n\nHere is the full list of 22 card combinations:\n\nxx, xxx, xxxx, xxxxx, Qxx, Qxxx, Qxxxx, Qxxxxx, Qxxxxxx, AKx, KQJ, QJ10, J109, 1098, KQ109, AKJ10, AQJ, AJ10, A109, KJ10, K109, Q109\n\n### Leads vs Suits\nThere are 18 characters in this string, each representing one of the card\ncombinations listed in the Leads vs Suits section of the Full Disclosure\neditor's Opening Leads section.\n\nThe encoding is exactly the same as described above.\n\nHere is the full list of 18 card combinations:\n\nxx, xxx, xxxx, xxxxx, Qxx, Qxxx, Qxxxx, Qxxxxx, Qxxxxxx, AK, AKx, KQJ, QJ10, J109, 1098, KJ10, K109, Q109\n\n### Defensive Signals\nIn the Full Disclosure editor section on Defensive Signals, there are three\nsections for signals against notrump contract and three for suit\ncontracts. Each of those has an agreement for first, second, and third\npriority.\n\nThus the following six sections each have a first, second, and third priority for a total of 18 characters in the Defensive Carding record:\n\n- Partner leads vs NT\n- Declarer leads vs NT\n- Discards vs NT\n- Partner leads vs suit\n- Declarer leads vs suit\n- Discards vs suit\n\nThe choice of agreements listed in the Full Disclosure editor is the same for each of the 18 situations. The encoding is:\n\n- A : No agreement\n- B : Attitude (Hi=Enc.)\n- C : Attitude (Hi=Disc.)\n- D : Attitude (Odd=Enc.)\n- E : Attitude (Odd=Disc.)\n- F : Count (Hi=Even)\n- G : Count (Hi=Odd)\n- H : Count (Odd/Even)\n- I : Suit Preference (Hi-Hi)\n- J : Suit Preference (Hi-Low)\n- K : Other\n\n<a id=\"changelog\"></a>\n\n# Change history\n\nSee the Changelog (CHANGELOG.md).\n# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## [Unreleased]\n\n## [2.7.0] - 2021-07-08\n\n### Changed\n\n  - Issue [Bold doesn't work in bml2latex #14](https://github.com/gpaulissen/bml/issues/14)\n\n## [2.6.1] - 2021-05-13\n\n### Changed\n\n  - A bidding table where a bid has more than one description line and\n    the last description line is just a point, will convert that last\n    description line into an empty line, see issue [Blank & Comment Line](https://github.com/gpaulissen/bml/issues/7)\n\n## [2.6.0] - 2021-05-10\n\n### Added\n\n  - Added string representation of class Args so the default arguments can be tested\n  - The output file may also be a directory\n  - A bidding table line with a single point is ignored, see issue [Blank & Comment Line](https://github.com/gpaulissen/bml/issues/7)\n  - Extra logging will help in detecting this [Puzzling indentation error](https://github.com/gpaulissen/bml/issues/12)\n\n## [2.5.1] - 2021-05-06\n\n### Changed\n\n  - Moved module about.py to the src/bml directory because it was missing in the distribution.\n\n### Changed\n\n  - Issue [Bold description #4](https://github.com/gpaulissen/bml/issues/4)\n  - Issue [Printing a bidding table in HTML loses the tree\n  - decoration.](https://github.com/gpaulissen/bml/issues/10\n\n## [2.5.0] - 2021-05-05\n\n### Added\n\n  - Added --version option to command line.\n  - Added pretty printing HTML.\n\n### Changed\n\n  - Issue [Bold description #4](https://github.com/gpaulissen/bml/issues/4)\n  - Issue [Printing a bidding table in HTML loses the tree decoration.](https://github.com/gpaulissen/bml/issues/10)\n\n## [2.4.0] - 2021-04-30\n\n### Added\n\n  - Added latexmk to README.\n  - Added bml_makedepend utility.\n  - Added tests for bml_makedepend utility.\n  - Added Make file bml.mk.\n  - Added Docker files.\n  - BML utility modules (bml2bss, bml2html, bml2latex, bss2bml, bml_makedepend) can now be run from Python as a script.\n  - Indentation option is suppressed for bml2bss, bss2bml and bml_makedepend.\n\n### Changed\n\n  - Installation moved from README to my blog site.\n  - Testing tree generation for HTML and LaTeX.\n  - Handling of command line arguments enhanced.\n  \n## [2.3.0] - 2021-04-20\n\n### Changed\n  - Added BSS syntax to README.\n  - README enhanced for non-HTML tags like <bid> <description>.\n  - Variable suits also correctly translated for their bids.\n  - bss2bml utility added.\n  \n## [2.2.1] - 2021-04-15\n\n### Changed\n  - README enhanced for variable suits.\n\n## [2.2.0] - 2021-04-15\n\n### Changed\n  - Two More Variable Colours (issue #1)\n  - Things for newbies to do (issue #3)\n  - Some characters have a special meaning for LaTeX (issue #8)\n\n## [2.0.3] - 2021-03-21\n\n### Changed\n\n  - Updated the README with respect to the command line options.\n\n## [2.0.2] - 2021-03-19\n\n### Changed\n\n  - README.md and README.org merged to README.md.\n\n## [2.0.1] - 2021-03-19\n\n### Added\n\n  - Python package now correctly includes external files bml.css and bml.tex.\n\n### Changed\n\n  - README.md now links correctly to README.org for a Python package.\n  - Replaced test package pytest-cover by pytest-cov (pytest-cover has been merged back into pytest-cov 2.0).\n\n## [2.0.0] - 2021-03-18\n\n### Added\n\n  - Applied Python best practices.\n  - Uploading to PyPi as package bridge-markup.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/gpaulissen/bml",
    "keywords": "bridge,markup",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "bridge-markup",
    "package_url": "https://pypi.org/project/bridge-markup/",
    "platform": "",
    "project_url": "https://pypi.org/project/bridge-markup/",
    "project_urls": {
      "Homepage": "https://github.com/gpaulissen/bml"
    },
    "release_url": "https://pypi.org/project/bridge-markup/2.7.0/",
    "requires_dist": [
      "bs4",
      "pytest ; extra == 'test'",
      "pytest-cov ; extra == 'test'",
      "pytest-flakes ; extra == 'test'",
      "pytest-pycodestyle ; extra == 'test'",
      "flake8 ; extra == 'test'"
    ],
    "requires_python": "",
    "summary": "Bridge Markup Language for creating bridge (card game) bidding documents.",
    "version": "2.7.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10864888,
  "releases": {
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c3969f6848d3a860df2a64433b3c720c69b3e0e0419f206ab7e48a7aa4aca9ae",
          "md5": "dadbc2fe6eeeede1292e406732ab2b54",
          "sha256": "62cfba2556ce574e5f872284b345b7dbd2548db45f872f9b5297c0103e7d68d3"
        },
        "downloads": -1,
        "filename": "bridge_markup-2.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dadbc2fe6eeeede1292e406732ab2b54",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 26893,
        "upload_time": "2021-03-18T16:52:44",
        "upload_time_iso_8601": "2021-03-18T16:52:44.961701Z",
        "url": "https://files.pythonhosted.org/packages/c3/96/9f6848d3a860df2a64433b3c720c69b3e0e0419f206ab7e48a7aa4aca9ae/bridge_markup-2.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "07eec63b1eb1bca982204d17f5adc80024411dc5de390eb51e09321024d8a4ab",
          "md5": "d8fe8fc5f4ceb5dd5a6c7f63fa196758",
          "sha256": "ad22530c549022cf760a702fcf1a719ed5404e58dcd54061ac0874e8fefc767b"
        },
        "downloads": -1,
        "filename": "bridge-markup-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d8fe8fc5f4ceb5dd5a6c7f63fa196758",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26675,
        "upload_time": "2021-03-18T16:52:46",
        "upload_time_iso_8601": "2021-03-18T16:52:46.592187Z",
        "url": "https://files.pythonhosted.org/packages/07/ee/c63b1eb1bca982204d17f5adc80024411dc5de390eb51e09321024d8a4ab/bridge-markup-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "701690589c3e40c3d21b911a906d50c7ecac846992a4bf0c2b75ad588552ccf6",
          "md5": "6eab1ff5858172b9793e2028e171901d",
          "sha256": "fea2ea27a29216888bebe5eec1d4ef6285d7b34c783bea8a4e5018cd97a31696"
        },
        "downloads": -1,
        "filename": "bridge_markup-2.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6eab1ff5858172b9793e2028e171901d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 29223,
        "upload_time": "2021-03-19T13:11:12",
        "upload_time_iso_8601": "2021-03-19T13:11:12.222782Z",
        "url": "https://files.pythonhosted.org/packages/70/16/90589c3e40c3d21b911a906d50c7ecac846992a4bf0c2b75ad588552ccf6/bridge_markup-2.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "39394e85de4c04f970e8fb93ebb186995f64d4007240a9134e4f77f7cc962d16",
          "md5": "f5b4cceef83478c7f43b1e3b8e1857db",
          "sha256": "8b8042124ee58e76b17ac5279279796ecfe64a28f155093a9659f01a19ca4247"
        },
        "downloads": -1,
        "filename": "bridge-markup-2.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f5b4cceef83478c7f43b1e3b8e1857db",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 35669,
        "upload_time": "2021-03-19T13:11:21",
        "upload_time_iso_8601": "2021-03-19T13:11:21.261820Z",
        "url": "https://files.pythonhosted.org/packages/39/39/4e85de4c04f970e8fb93ebb186995f64d4007240a9134e4f77f7cc962d16/bridge-markup-2.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f0643c40136f49d93e9b1bd974b690c393b95fcaffd5d46013337d836dd4007f",
          "md5": "ae649c5bdf3a29c22137fd49cd831146",
          "sha256": "05dbdb6f4b5d33792b7ee112e95c1f7a86b4c1c04866ff1c8b691e8284190dde"
        },
        "downloads": -1,
        "filename": "bridge_markup-2.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ae649c5bdf3a29c22137fd49cd831146",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 34679,
        "upload_time": "2021-03-19T16:17:09",
        "upload_time_iso_8601": "2021-03-19T16:17:09.269850Z",
        "url": "https://files.pythonhosted.org/packages/f0/64/3c40136f49d93e9b1bd974b690c393b95fcaffd5d46013337d836dd4007f/bridge_markup-2.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef242b771401d88492ad23b82d23bb4e9fbcb77e1256bfa94ed929a036f139d7",
          "md5": "0dee8f6ee51c18c85597c031c6b95a9e",
          "sha256": "6587e9f58fdb82a26ed42d9e701a1fddc5e298cc40245d4bf030961252cbb289"
        },
        "downloads": -1,
        "filename": "bridge-markup-2.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0dee8f6ee51c18c85597c031c6b95a9e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 42333,
        "upload_time": "2021-03-19T16:17:11",
        "upload_time_iso_8601": "2021-03-19T16:17:11.397365Z",
        "url": "https://files.pythonhosted.org/packages/ef/24/2b771401d88492ad23b82d23bb4e9fbcb77e1256bfa94ed929a036f139d7/bridge-markup-2.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f1804f69eeb88db1157c7ab8939875a2f5a6213349df4d945252c5daafc28f5d",
          "md5": "dfffa038f2f8243911ffa507bb088b3d",
          "sha256": "d7d9807b944be89be46fdb7ed7dbbb225871e3ca330d1057177c25e97094e914"
        },
        "downloads": -1,
        "filename": "bridge_markup-2.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dfffa038f2f8243911ffa507bb088b3d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 34794,
        "upload_time": "2021-03-21T08:50:38",
        "upload_time_iso_8601": "2021-03-21T08:50:38.885727Z",
        "url": "https://files.pythonhosted.org/packages/f1/80/4f69eeb88db1157c7ab8939875a2f5a6213349df4d945252c5daafc28f5d/bridge_markup-2.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7faf298edba18259780b0de4db5a925bbdc384481c42b64e9aff912e7fa88746",
          "md5": "403a97ec4842d4f4fb3e2187b94627de",
          "sha256": "e2f806aa14ec931990f376da795f07e00e1b47486edb33b610dbfcf38485548f"
        },
        "downloads": -1,
        "filename": "bridge-markup-2.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "403a97ec4842d4f4fb3e2187b94627de",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 42685,
        "upload_time": "2021-03-21T08:50:40",
        "upload_time_iso_8601": "2021-03-21T08:50:40.770348Z",
        "url": "https://files.pythonhosted.org/packages/7f/af/298edba18259780b0de4db5a925bbdc384481c42b64e9aff912e7fa88746/bridge-markup-2.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f981b26d3e80dd9369259a43d063986402a10fcc605c5b44d4ec33095b9ab952",
          "md5": "07a55dd0d79adac537e39de8008e603f",
          "sha256": "95180856c75c8e3b6b3cfd71d7ca2301b9661d753a93058df2e77a399849e1bb"
        },
        "downloads": -1,
        "filename": "bridge_markup-2.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "07a55dd0d79adac537e39de8008e603f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 36612,
        "upload_time": "2021-04-15T12:56:52",
        "upload_time_iso_8601": "2021-04-15T12:56:52.470290Z",
        "url": "https://files.pythonhosted.org/packages/f9/81/b26d3e80dd9369259a43d063986402a10fcc605c5b44d4ec33095b9ab952/bridge_markup-2.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "194ef4b9c827548dcd4a02a43b6f261bdafa1091dbc5d75c08a34b5f8581e0eb",
          "md5": "ed4a07c33f53eab4938026ec81162c8b",
          "sha256": "d6d53c188770a63bf5ccb5598f71ae63901b3e8104fa45aed4f7d39db67bc635"
        },
        "downloads": -1,
        "filename": "bridge-markup-2.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ed4a07c33f53eab4938026ec81162c8b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 45627,
        "upload_time": "2021-04-15T12:56:54",
        "upload_time_iso_8601": "2021-04-15T12:56:54.547765Z",
        "url": "https://files.pythonhosted.org/packages/19/4e/f4b9c827548dcd4a02a43b6f261bdafa1091dbc5d75c08a34b5f8581e0eb/bridge-markup-2.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e1b8d47ae73c90cb536de651db0adf84ec0cef383bfbbf11e6ad09842f8cf2cb",
          "md5": "3a971dc817c72a5133a231c3dddabc51",
          "sha256": "58b2d83b12cfe2a6c52718d826b80710ddc52ce5376f63b61830f286fb5b88e1"
        },
        "downloads": -1,
        "filename": "bridge_markup-2.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3a971dc817c72a5133a231c3dddabc51",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 36778,
        "upload_time": "2021-04-15T13:30:26",
        "upload_time_iso_8601": "2021-04-15T13:30:26.594418Z",
        "url": "https://files.pythonhosted.org/packages/e1/b8/d47ae73c90cb536de651db0adf84ec0cef383bfbbf11e6ad09842f8cf2cb/bridge_markup-2.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "43622c3bfa8c3fe29ebe406bf560e0706308afd2c61fd34aff635d28b74b86f1",
          "md5": "eaca2e05b895ba6a294ac0ef43a221a9",
          "sha256": "39dce7c266228f8bbb3b38131f99c8ba79faf66bcac3c257b834ea35149aca48"
        },
        "downloads": -1,
        "filename": "bridge-markup-2.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "eaca2e05b895ba6a294ac0ef43a221a9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 46053,
        "upload_time": "2021-04-15T13:30:28",
        "upload_time_iso_8601": "2021-04-15T13:30:28.598639Z",
        "url": "https://files.pythonhosted.org/packages/43/62/2c3bfa8c3fe29ebe406bf560e0706308afd2c61fd34aff635d28b74b86f1/bridge-markup-2.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9682cbbaa6cacace7071f786a7b1049d5c710dff772e96200a72b7d36c67e6e3",
          "md5": "d5bf91274496cd3b7626b31b234b85d2",
          "sha256": "abeaae198731385a51d54627f8ab2aecd989bccba6a8999d989e47835bb59d88"
        },
        "downloads": -1,
        "filename": "bridge_markup-2.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d5bf91274496cd3b7626b31b234b85d2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 41748,
        "upload_time": "2021-04-20T12:35:45",
        "upload_time_iso_8601": "2021-04-20T12:35:45.741276Z",
        "url": "https://files.pythonhosted.org/packages/96/82/cbbaa6cacace7071f786a7b1049d5c710dff772e96200a72b7d36c67e6e3/bridge_markup-2.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5d2193e60a42d3698c97bcd51e73f785caa65db646a66d424c31b8106d1dc8ae",
          "md5": "65e7fb17e4904b47ca83df5a582b377d",
          "sha256": "1f0866987787a765e54b1557c5bb3e15998e127f8694872c4475573afb737084"
        },
        "downloads": -1,
        "filename": "bridge-markup-2.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "65e7fb17e4904b47ca83df5a582b377d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 64371,
        "upload_time": "2021-04-20T12:35:48",
        "upload_time_iso_8601": "2021-04-20T12:35:48.228120Z",
        "url": "https://files.pythonhosted.org/packages/5d/21/93e60a42d3698c97bcd51e73f785caa65db646a66d424c31b8106d1dc8ae/bridge-markup-2.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7ddc19e61b4cf05764904e1c5f40371abf0cbee2a2dff4cadbc87a69a6dcb4c8",
          "md5": "7846dd7a6795c3be0054932d44b46c31",
          "sha256": "4903efc89a2cc1c486d27bdf9eb8c6bf7d1bcd866fe80c4621a1c3c63af7b776"
        },
        "downloads": -1,
        "filename": "bridge_markup-2.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7846dd7a6795c3be0054932d44b46c31",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 42980,
        "upload_time": "2021-04-30T13:45:58",
        "upload_time_iso_8601": "2021-04-30T13:45:58.446840Z",
        "url": "https://files.pythonhosted.org/packages/7d/dc/19e61b4cf05764904e1c5f40371abf0cbee2a2dff4cadbc87a69a6dcb4c8/bridge_markup-2.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3066bd392ef3c772586b71cb02fa157b695db0224e36f7c8a19d1be843521778",
          "md5": "3f9ec30bc5fe4b21743022ee4e14bb54",
          "sha256": "8695461f2f6a41d0f703c69dd49232d3ccc1370430a6da35dacf13804df253c3"
        },
        "downloads": -1,
        "filename": "bridge-markup-2.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3f9ec30bc5fe4b21743022ee4e14bb54",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 66189,
        "upload_time": "2021-04-30T13:46:00",
        "upload_time_iso_8601": "2021-04-30T13:46:00.906991Z",
        "url": "https://files.pythonhosted.org/packages/30/66/bd392ef3c772586b71cb02fa157b695db0224e36f7c8a19d1be843521778/bridge-markup-2.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "29bb12c963f2b75c1290ab60ca0ec409f9e0ccdf77dfab5eb6a8872f05750c21",
          "md5": "b5470d41e8dfbd5287317290b1f54b1c",
          "sha256": "97cb4dce2def9d8f525b6219fa0f5363658501cdd4eca952058aeee4921e2bf6"
        },
        "downloads": -1,
        "filename": "bridge_markup-2.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b5470d41e8dfbd5287317290b1f54b1c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 43548,
        "upload_time": "2021-05-05T11:41:14",
        "upload_time_iso_8601": "2021-05-05T11:41:14.541655Z",
        "url": "https://files.pythonhosted.org/packages/29/bb/12c963f2b75c1290ab60ca0ec409f9e0ccdf77dfab5eb6a8872f05750c21/bridge_markup-2.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef0502ec941064ca738a7f252b6021478230513470859c1f008a6cc7a6126c4e",
          "md5": "9fd84d18c6c5dcadbc332991e3b408b7",
          "sha256": "966ed1c69e601fa19f8b18e07119599e65bc6cc35ad1e97ac61ee5d5d12555ee"
        },
        "downloads": -1,
        "filename": "bridge-markup-2.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9fd84d18c6c5dcadbc332991e3b408b7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 66978,
        "upload_time": "2021-05-05T11:41:16",
        "upload_time_iso_8601": "2021-05-05T11:41:16.850788Z",
        "url": "https://files.pythonhosted.org/packages/ef/05/02ec941064ca738a7f252b6021478230513470859c1f008a6cc7a6126c4e/bridge-markup-2.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "786e9da9ef9533e7cb52e41839bbbea5f7aa3702af4d6df423c635e267742272",
          "md5": "9633faa1c5283d96c377957523575c93",
          "sha256": "16eaaddb32e8ebc6f3d055532c29bf6ec183f7fe3d09bea01a27143a274b55ba"
        },
        "downloads": -1,
        "filename": "bridge_markup-2.5.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9633faa1c5283d96c377957523575c93",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 44112,
        "upload_time": "2021-05-06T08:03:17",
        "upload_time_iso_8601": "2021-05-06T08:03:17.626001Z",
        "url": "https://files.pythonhosted.org/packages/78/6e/9da9ef9533e7cb52e41839bbbea5f7aa3702af4d6df423c635e267742272/bridge_markup-2.5.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "100d63d130bde862f337ccfc84e389dc2ec3b4973c67a9078492a4803c41dcda",
          "md5": "5d2717d0a3b92aa2f5341543ebf60338",
          "sha256": "8264fec9a01590d405921aac94c014ffd07ee2fff65b21d2f740ab831fe22e98"
        },
        "downloads": -1,
        "filename": "bridge-markup-2.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5d2717d0a3b92aa2f5341543ebf60338",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 67542,
        "upload_time": "2021-05-06T08:03:20",
        "upload_time_iso_8601": "2021-05-06T08:03:20.024265Z",
        "url": "https://files.pythonhosted.org/packages/10/0d/63d130bde862f337ccfc84e389dc2ec3b4973c67a9078492a4803c41dcda/bridge-markup-2.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bfcc4f0ac282ada4d7a07d9c58d98e497a430ff16531f7f38a7226c398fb8b85",
          "md5": "3a63aedfb440cd6718efec22acb01605",
          "sha256": "7fd51761e3c1d85e2742039b0146053ea57359698e4e998965ff5e156a79e6c2"
        },
        "downloads": -1,
        "filename": "bridge_markup-2.6.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3a63aedfb440cd6718efec22acb01605",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 44778,
        "upload_time": "2021-05-10T12:49:02",
        "upload_time_iso_8601": "2021-05-10T12:49:02.064768Z",
        "url": "https://files.pythonhosted.org/packages/bf/cc/4f0ac282ada4d7a07d9c58d98e497a430ff16531f7f38a7226c398fb8b85/bridge_markup-2.6.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fccdeadaaf918f7bd578d98445d60f40f4ca0513d57014aba2a5d426d2b57f74",
          "md5": "bd9c919abb891c6195bdde66acf95825",
          "sha256": "48d4e115011f61efa913095ac3cbe80def857268368ab42aea2650a46e63fc2f"
        },
        "downloads": -1,
        "filename": "bridge-markup-2.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bd9c919abb891c6195bdde66acf95825",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 68312,
        "upload_time": "2021-05-10T12:49:04",
        "upload_time_iso_8601": "2021-05-10T12:49:04.387584Z",
        "url": "https://files.pythonhosted.org/packages/fc/cd/eadaaf918f7bd578d98445d60f40f4ca0513d57014aba2a5d426d2b57f74/bridge-markup-2.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.6.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4359aba9b85bfa015c02f87928cb7ee35a70ef98bcb312ad2fedb296f5d74d8d",
          "md5": "fddd593883b28d3864a15596def7daf5",
          "sha256": "633ca0a83fb1a531eacb4376a03924d3af4b5d496bd7cca18a9f1088b72064d7"
        },
        "downloads": -1,
        "filename": "bridge_markup-2.6.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fddd593883b28d3864a15596def7daf5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 45294,
        "upload_time": "2021-05-13T08:22:55",
        "upload_time_iso_8601": "2021-05-13T08:22:55.826645Z",
        "url": "https://files.pythonhosted.org/packages/43/59/aba9b85bfa015c02f87928cb7ee35a70ef98bcb312ad2fedb296f5d74d8d/bridge_markup-2.6.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c3d868ee807aa5361598e03ec28df63f97d2f900349d5b44b88bccc558bddae8",
          "md5": "98c5933e3182097a44b425a2a25dbb83",
          "sha256": "1ae7d52b11328a55cd9728d853bb3f7cbe6e38f1776ef20ba4b67256e965d9dc"
        },
        "downloads": -1,
        "filename": "bridge-markup-2.6.1.tar.gz",
        "has_sig": false,
        "md5_digest": "98c5933e3182097a44b425a2a25dbb83",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 68734,
        "upload_time": "2021-05-13T08:22:58",
        "upload_time_iso_8601": "2021-05-13T08:22:58.388203Z",
        "url": "https://files.pythonhosted.org/packages/c3/d8/68ee807aa5361598e03ec28df63f97d2f900349d5b44b88bccc558bddae8/bridge-markup-2.6.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f5b57d0e57c59e6c88f169ed64bcade2ceee7d34cf55a2f896fcd39105e6ec2",
          "md5": "067e839e9e9cea30fcde216b78e39d75",
          "sha256": "9966b2d2634b1438e9ac7b185e4d44b6d6558242b8b4e7df444c2dcbceeb3461"
        },
        "downloads": -1,
        "filename": "bridge_markup-2.7.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "067e839e9e9cea30fcde216b78e39d75",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 45162,
        "upload_time": "2021-07-09T12:35:18",
        "upload_time_iso_8601": "2021-07-09T12:35:18.429596Z",
        "url": "https://files.pythonhosted.org/packages/0f/5b/57d0e57c59e6c88f169ed64bcade2ceee7d34cf55a2f896fcd39105e6ec2/bridge_markup-2.7.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a9e3ab853261c8ba86badad949ad97db1efc27669e8439c309b21a6f4354a7f7",
          "md5": "a70c7bc0663c7b9836823d3f68e5c035",
          "sha256": "c26e3908cabd4889a82ce020e953406f89acec595764798878d00c91a15d6210"
        },
        "downloads": -1,
        "filename": "bridge-markup-2.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a70c7bc0663c7b9836823d3f68e5c035",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 67236,
        "upload_time": "2021-07-09T12:35:20",
        "upload_time_iso_8601": "2021-07-09T12:35:20.985274Z",
        "url": "https://files.pythonhosted.org/packages/a9/e3/ab853261c8ba86badad949ad97db1efc27669e8439c309b21a6f4354a7f7/bridge-markup-2.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0f5b57d0e57c59e6c88f169ed64bcade2ceee7d34cf55a2f896fcd39105e6ec2",
        "md5": "067e839e9e9cea30fcde216b78e39d75",
        "sha256": "9966b2d2634b1438e9ac7b185e4d44b6d6558242b8b4e7df444c2dcbceeb3461"
      },
      "downloads": -1,
      "filename": "bridge_markup-2.7.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "067e839e9e9cea30fcde216b78e39d75",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 45162,
      "upload_time": "2021-07-09T12:35:18",
      "upload_time_iso_8601": "2021-07-09T12:35:18.429596Z",
      "url": "https://files.pythonhosted.org/packages/0f/5b/57d0e57c59e6c88f169ed64bcade2ceee7d34cf55a2f896fcd39105e6ec2/bridge_markup-2.7.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a9e3ab853261c8ba86badad949ad97db1efc27669e8439c309b21a6f4354a7f7",
        "md5": "a70c7bc0663c7b9836823d3f68e5c035",
        "sha256": "c26e3908cabd4889a82ce020e953406f89acec595764798878d00c91a15d6210"
      },
      "downloads": -1,
      "filename": "bridge-markup-2.7.0.tar.gz",
      "has_sig": false,
      "md5_digest": "a70c7bc0663c7b9836823d3f68e5c035",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 67236,
      "upload_time": "2021-07-09T12:35:20",
      "upload_time_iso_8601": "2021-07-09T12:35:20.985274Z",
      "url": "https://files.pythonhosted.org/packages/a9/e3/ab853261c8ba86badad949ad97db1efc27669e8439c309b21a6f4354a7f7/bridge-markup-2.7.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}