{
  "info": {
    "author": "XiaoTao Wang",
    "author_email": "wangxiaotao686@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Science/Research",
      "Operating System :: POSIX",
      "Programming Language :: Python :: 3 :: Only",
      "Topic :: Scientific/Engineering :: Bio-Informatics"
    ],
    "description": "Neo-loop Finder\n***************\n.. image:: https://codeocean.com/codeocean-assets/badge/open-in-code-ocean.svg\n   :target: https://codeocean.com/capsule/8407443/tree/v1\n.. image:: https://static.pepy.tech/personalized-badge/neoloop?period=total&units=international_system&left_color=black&right_color=orange&left_text=Downloads\n   :target: https://pepy.tech/project/neoloop\n\nAlthough recent efforts have shown that structural variations (SVs) can disrupt the 3D genome\norganization and induce enhancer-hijacking, no computational tools exist to detect such events\nfrom chromatin interaction data, such as Hi-C. Here, we develop NeoLoopFinder, a computational\nframework to identify the chromatin interactions induced by SVs, such as inter-chromosomal\ntranslocations, large deletions, and inversions. Our framework can automatically reconstruct\nlocal Hi-C maps surrounding the breakpoints, normalize copy number variation and allele effects,\nand capture local optimal signals. We applied NeoLoopFinder in Hi-C data from 50 cancer cell\nlines and primary tumors and identified tens of recurrent genes associated with enhancer-hijacking\nin different cancer types. To validate the algorithm, we deleted hijacked enhancers by CRISPR/Cas9\nand showed that the deletions resulted in the reduction of the target oncogene expression. In\nsummary, NeoLoopFinder is a novel tool for identifying potential tumorigenic mechanisms and\nsuggesting new diagnostic and therapeutic targets.\n\nCitation\n========\nWang, X., Xu, J., Zhang, B., Hou, Y., Song, F., Lyu, H., Yue, F. Genome-wide detection of\nenhancer-hijacking events from chromatin interaction data in re-arranged genomes. Nat Methods. 2021.\n\n\nInstallation\n============\nNeoLoopFinder and all the dependencies can be installed using either `mamba <https://mamba.readthedocs.io/en/latest/installation.html>`_\nor `pip <https://pypi.org/project/pip/>`_::\n\n    $ conda config --add channels r\n    $ conda config --add channels defaults\n    $ conda config --add channels bioconda\n    $ conda config --add channels conda-forge\n    $ conda config --set channel_priority strict\n    $ mamba create -n neoloop cooler matplotlib pyensembl pybigwig intervaltree scikit-learn=1.1.2 joblib=1.1.0 rpy2 r-mgcv\n    $ mamba activate neoloop\n    $ pip install -U neoloop TADLib pomegranate\n\nOverview\n========\nneoloop-finder is distributed with 9 scripts. You can learn the basic usage of each script\nby typing ``command [-h]`` in a terminal window, where \"command\" is one of the following\nscript names:\n\n- calculate-cnv\n\n  Calculate the copy number variation profile from Hi-C map using a generalized additive\n  model with the Poisson link function\n\n- segment-cnv\n\n  Perform HMM segmentation on a pre-calculated copy number variation profile.\n\n- plot-cnv\n  \n  Plot genome-wide CNV profiles and segments.\n\n- correct-cnv\n\n  Remove copy number variation effects from cancer Hi-C.\n\n- simulate-cnv\n\n  Simulate CNV effects on a normal Hi-C. The inputs are the Hi-C matrix of a normal cell in .cool format,\n  the Hi-C matrix of a cancer cell in .cool format, and the CNV segmentation file of the same cancer cell\n  in bedGraph format.\n\n- assemble-complexSVs\n\n  Assemble complex SVs. The inputs are a list of simple SVs and the Hi-C matrix of the same sample.\n\n- neoloop-caller\n\n  Identify neo-loops across SV breakpoints. The required inputs are the output SV assemblies from\n  ``assemble-complexSVs`` and the corresponding Hi-C map in .cool format.\n\n- neotad-caller\n\n  Identify neo-TADs. The inputs are the same as ``neoloop-caller``.\n\n- searchSVbyGene\n\n  Search SV assemblies by gene name.\n\nTutorial\n========\nThis tutorial will cover the overall pipeline of `NeoLoopFinder <https://www.nature.com/articles/s41592-021-01164-w/figures/1>`_.\nGiven a Hi-C map in `.cool/.mcool <https://cooler.readthedocs.io/en/latest/schema.html#multi-resolution>`_\nformat and an SV list in the same sample, NeoLoopFinder starts with the inference of\nthe genome-wide copy number variation (CNV) profile and remove the CNV effects from\nHi-C. Then it resolves complex SVs and reconstructs local Hi-C matrices surrounding SV\nbreakpoints. And finally, it detects chromatin loops on each SV/complex SV assembly,\nincluding both loops in the regions not affected by SVs and loops across the breakpoints.\n\nCopy number inference from Hi-C map\n-----------------------------------\n.. note::\n   If the chromosome names in your .cool files do not have the \"chr\" prefix,\n   please make sure to add the \"chr\" prefix using `add_prefix_to_cool.py <https://raw.githubusercontent.com/XiaoTaoWang/NeoLoopFinder/master/scripts/add_prefix_to_cool.py>`_\n   before you run ``calculate-cnv`` (`issue #1 <https://github.com/XiaoTaoWang/NeoLoopFinder/issues/1>`_).\n   Also make sure you have run ``cooler balance`` on your cool files before\n   you run ``correct-cnv`` (`issue #8 <https://github.com/XiaoTaoWang/NeoLoopFinder/issues/8>`_).\n\nFirst, let's download a processed Hi-C dataset in SK-N-MC (a neuroepithelioma cell line)::\n\n    $ wget -O SKNMC-MboI-allReps-filtered.mcool -L https://www.dropbox.com/s/tuhhrecipkp1u8k/SKNMC-MboI-allReps-filtered.mcool?dl=0\n\nThe downloaded \".mcool\" file contains contact matrices at multiple resolutions. To list all\nindividual cool URIs within it, execute the ``cooler ls`` command below::\n\n    $ cooler ls SKNMC-MboI-allReps-filtered.mcool\n\n    SKNMC-MboI-allReps-filtered.mcool::/resolutions/5000\n    SKNMC-MboI-allReps-filtered.mcool::/resolutions/10000\n    SKNMC-MboI-allReps-filtered.mcool::/resolutions/25000\n    SKNMC-MboI-allReps-filtered.mcool::/resolutions/50000\n    SKNMC-MboI-allReps-filtered.mcool::/resolutions/100000\n    SKNMC-MboI-allReps-filtered.mcool::/resolutions/250000\n    SKNMC-MboI-allReps-filtered.mcool::/resolutions/500000\n    SKNMC-MboI-allReps-filtered.mcool::/resolutions/1000000\n    SKNMC-MboI-allReps-filtered.mcool::/resolutions/2500000\n    SKNMC-MboI-allReps-filtered.mcool::/resolutions/5000000\n\nTo infer the genome-wide CNV profile at a specific resolution, just run *calculate-cnv*\nusing the cool URI at that resolution as input. For example, the following command will\ncalculate the CNV profile at the 25kb resolution::\n\n    $ calculate-cnv -H SKNMC-MboI-allReps-filtered.mcool::resolutions/25000 -g hg38 \\\n                    -e MboI --output SKNMC_25k.CNV-profile.bedGraph\n\nHere the ``-g`` parameter indicates the reference genome you used for mapping\nyour Hi-C data, which currently supports *hg38*, *hg19*, *mm10*, and *mm9*.\nAnd the \"-e\" parameter indicates the restriction enzyme used in your\nHi-C experiment, which currently supports *HindIII*, *MboI*, *DpnII*, *BglII*,\n*Arima*, and *uniform*, where *uniform* may be specified when the genome was\ncutted using a sequence-independent/uniform-cutting enzyme\n(please refer to `issue 24 <https://github.com/XiaoTaoWang/NeoLoopFinder/issues/24>`_).\n\nThe inferred CNV values for each 25kb bin will be reported in the bedGraph format\nas follows::\n\n    $ head SKNMC_25k.CNV-profile.bedGraph\n\n    chr1\t0\t25000\t0.3622223616602325\n    chr1\t25000\t50000\t0.16018489189648388\n    chr1\t50000\t75000\t0.6700770894724766\n    chr1\t75000\t100000\t0.29407421138399936\n    chr1\t100000\t125000\t0.7064836696780397\n    chr1\t125000\t150000\t0.18356628377821504\n    chr1\t150000\t175000\t0.008115191530591481\n    chr1\t175000\t200000\t1.9345786937265874\n    chr1\t200000\t225000\t1.1066640487666337\n    chr1\t225000\t250000\t0.0\n\nSince the raw CNV profiles are usually relatively noisy, the next step is to\nidentify CNV segments from the original signals::\n\n    $ segment-cnv --cnv-file SKNMC_25k.CNV-profile.bedGraph --binsize 25000 \\\n                  --ploidy 2 --output SKNMC_25k.CNV-seg.bedGraph --nproc 4\n\nHere the ``--ploidy`` parameter indicates the ploidy or on average how many chromosome\ncopies are there in your sample's cell nucleus. For example, in our analysis,\nwe set this parameter to 2 for diploid/pseudodiploid cells, 3 for triploid/hypotriploid\ncells, 4 for hypotetraploid cells, and 5 for hypopentaploid cells. This information\nis usually obtained from karyotyping, but if you are not sure about it for your samples,\nyou can safely set it to 2.\n\nSo how does the inferred CNV look like? For this job, you can use the *plot-cnv* command::\n\n    $ plot-cnv --cnv-profile SKNMC_25k.CNV-profile.bedGraph \\\n               --cnv-segment SKNMC_25k.CNV-seg.bedGraph \\\n               --output-figure-name SKNMC_25k.CNV.genome-wide.png \\\n               --dot-size 0.5 --dot-alpha 0.2 --line-width 1 --boundary-width 0.5 \\\n               --label-size 7 --tick-label-size 6 --clean-mode\n\n.. image:: ./images/SKNMC_25k.CNV.genome-wide.png\n        :align: center\n\nIf you want to zoom into specific chromosomes, you can specify the chromosome labels\non the command using the ``-C`` parameter::\n\n    $ plot-cnv --cnv-profile SKNMC_25k.CNV-profile.bedGraph \\\n               --cnv-segment SKNMC_25k.CNV-seg.bedGraph \\\n               --output-figure-name SKNMC_25k.CNV.bychrom.png \\\n               --dot-size 1.5 --dot-alpha 0.3 --line-width 1.5 --boundary-width 1 \\\n               --label-size 7 --tick-label-size 6 --maximum-value 3 \\\n               --minimum-value -5 -C 3 4 5 6 7 8\n\n.. image:: ./images/SKNMC_25k.CNV.bychrom.png\n        :align: center\n\nNote that most key parameters of the CNV segmentation algorithm is now tunable since\nv0.4.1, so if you are not satisfied with the segmentation outputted by the default\nparameters, it would always be a good idea to tune those parameters yourself to find\nthe best solution (see an example here `issue #3 <https://github.com/XiaoTaoWang/NeoLoopFinder/issues/3#issuecomment-1261176468>`_).\n\nAt the end of this section, let's compute the CNV profiles and CNV segments at 10kb\nand 5kb resolutions as well::\n\n    $ calculate-cnv -H SKNMC-MboI-allReps-filtered.mcool::resolutions/10000 -g hg38 \\\n                    -e MboI --output SKNMC_10k.CNV-profile.bedGraph\n    $ segment-cnv --cnv-file SKNMC_10k.CNV-profile.bedGraph --binsize 10000 \\\n                  --ploidy 2 --output SKNMC_10k.CNV-seg.bedGraph --nproc 4 \n    $ calculate-cnv -H SKNMC-MboI-allReps-filtered.mcool::resolutions/5000 -g hg38 \\\n                    -e MboI --output SKNMC_5k.CNV-profile.bedGraph\n    $ segment-cnv --cnv-file SKNMC_5k.CNV-profile.bedGraph --binsize 5000 \\\n                  --ploidy 2 --output SKNMC_5k.CNV-seg.bedGraph --nproc 4\n\nRemove CNV biases from Hi-C contacts\n------------------------------------\nAs copy number variations (CNVs) can greatly distort Hi-C signals in cancer cells, we\nsuggest using the *correct-cnv* command to remove such effects along with other systematic\nbiases including mappability, GC content, and restriction fragment sizes from the Hi-C\ndata.\n\nThe command below will perform this CNV normalization on the above SK-N-MC Hi-C at the 25kb\nresolution::\n\n    $ correct-cnv -H SKNMC-MboI-allReps-filtered.mcool::resolutions/25000 \\\n                  --cnv-file SKNMC_25k.CNV-seg.bedGraph --nproc 4 -f\n\n*correct-cnv* takes the Cool URI at a certain resolution and the CNV segmentation file at the\nsame resolution as inputs, and after this command has been executed, a bias vector will be\nreported in the \"sweight\" column in the `bins <https://cooler.readthedocs.io/en/latest/datamodel.html#bins>`_\ntable of the cool file, which can be further used to normalize the Hi-C contacts.\n\nAgain, let's perform the CNV normalization at the 10kb and 5kb resolutions as well::\n\n    $ correct-cnv -H SKNMC-MboI-allReps-filtered.mcool::resolutions/10000 \\\n                  --cnv-file SKNMC_10k.CNV-seg.bedGraph --nproc 4 -f\n    $ correct-cnv -H SKNMC-MboI-allReps-filtered.mcool::resolutions/5000 \\\n                  --cnv-file SKNMC_5k.CNV-seg.bedGraph --nproc 4 -f\n\nAssemble complex SVs\n--------------------\n.. note::\n   By default, ``assemble-complexSVs``, ``neoloop-caller``, and ``neotad-caller``\n   will use the \"sweight\" column to normalize the Hi-C matrix. However, you can\n   change this option to ICE normalization by specifying ``--balance-type ICE``.\n\nAfter you have obtained the CNV-normalized Hi-C matrices, the next step of\nNeoLoopFinder is to reconstruct the Hi-C map for the rearranged genomic\nregions surrounding SV breakpoints. This job can be done by the *assemble-complexSVs*\ncommand.\n\nIn addition to cool URIs, another required input to *assemble-complexSVs* is\na file containing a list of SVs identified from the same sample. Our recently\ndeveloped software `EagleC <https://github.com/XiaoTaoWang/EagleC>`_ can predict\na full range of SVs from Hi-C and report SVs in a format that can be directly\nused here. If your SVs were identified by other software or platforms, please\nprepare your SV list in a 6-column TXT format like this::\n\n    chr7    chr14   ++      14000000        37500000        translocation\n    chr7    chr14   --      7901149 37573191        translocation\n\n1. **chrA**: The chromosome name of the 1st breakpoint.\n2. **chrB**: The chromosome name of the 2nd breakpoint.\n3. **orientation**: The orientation type of the fusion, one of ++, +-, -+, or --.\n4. **b1**: The position of the 1st breakpoint on *chrA*.\n5. **b2**: The position of the 2nd breakpoint on *chrB*.\n6. **type**: SV type. Allowable choices are: *deletion*, *inversion*, *duplication*, and *translocation*.\n\nFor this tutorial, let's directly run *assemble-complexSVs* with a pre-identified\nSV list in SK-N-MC (by EagleC)::\n\n    $ wget -O SKNMC-EagleC.SV.txt -L https://www.dropbox.com/s/g1wa799wgwta9p4/SK-N-MC.EagleC.txt?dl=0\n    $ assemble-complexSVs -O SKNMC -B SKNMC-EagleC.SV.txt --balance-type CNV --protocol insitu --nproc 6 \\\n                          -H SKNMC-MboI-allReps-filtered.mcool::resolutions/25000 \\\n                             SKNMC-MboI-allReps-filtered.mcool::resolutions/10000 \\\n                             SKNMC-MboI-allReps-filtered.mcool::resolutions/5000 \\\n\nHere you can pass either one cool URI or a list of cool URIs at multiple resolutions\nto the ``-H`` parameter. And if multiple cool URIs are provided, the program will\nfirst detect complex SVs from each individual resolution, and then combine results\nfrom all resolutions in a non-redundant way.\n\nThe job should be finished in ~6 minutes, and all candidate local assemblies will be reported\ninto a TXT file named \"SKNMC.assemblies.txt\"::\n\n    $ head SKNMC.assemblies.txt\n\n    A0\tinversion,8,132915000,+,8,130825000,+\tdeletion,8,130800000,-,8,129520000,+\t8,132155000\t8,129375000\n    A1\tinversion,11,84315000,-,11,83565000,-\tinversion,11,84315000,+,11,83565000,+\t11,85050000\t11,82625000\n    A2\tdeletion,8,130800000,-,8,129520000,+\tdeletion,8,129375000,-,8,127880000,+\t8,130835000\t8,126215000\n    C0\ttranslocation,1,10260000,+,X,21495000,-\t1,9380000\tX,22205000\n    C1\ttranslocation,1,10260000,-,X,21495000,+\t1,10630000\tX,20080000\n    C2\tinversion,11,83565000,+,11,84315000,+\t11,82630000\t11,84245000\n    C3\tinversion,11,83565000,-,11,84315000,-\t11,83645000\t11,84855000\n    C4\ttranslocation,11,128790000,+,15,50540000,-\t11,127950000\t15,51475000\n    C5\ttranslocation,11,128790000,-,22,29290000,+\t11,129535000\t22,28520000\n    C6\ttranslocation,15,50545000,+,22,29285000,-\t15,49835000\t22,30330000\n\nIdentify chromatin loops on local SV assemblies\n-----------------------------------------------\nTo identify chromatin loops on each assembly, simply execute the command below::\n\n    $ neoloop-caller -O SKNMC.neo-loops.txt --assembly SKNMC.assemblies.txt \\\n                     --balance-type CNV --protocol insitu --prob 0.95 --nproc 4 \\\n                     -H SKNMC-MboI-allReps-filtered.mcool::resolutions/25000 \\\n                        SKNMC-MboI-allReps-filtered.mcool::resolutions/10000 \\\n                        SKNMC-MboI-allReps-filtered.mcool::resolutions/5000 \\\n\nWait ~10 minutes. The loop coordinates in both shuffled (neo-loops) and undisrupted\nregions near SV breakpoints will be reported into \"SKNMC.neo-loops.txt\" in\n`BEDPE <https://bedtools.readthedocs.io/en/latest/content/general-usage.html>`_ format::\n\n    $ head SKNMC.neo-loops.txt\n\n    chr1\t9490000\t9500000\tchr1\t9860000\t9870000\tC0,370000,0\n    chr1\t9500000\t9505000\tchr1\t9570000\t9575000\tC0,80000,0,C0,70000,0\n    chr1\t9620000\t9630000\tchrX\t21730000\t21740000\tC0,880000,1,C0,900000,1\n    chr1\t9625000\t9650000\tchr1\t9850000\t9875000\tC0,225000,0\n    chr1\t9625000\t9650000\tchrX\t21725000\t21750000\tC0,900000,1\n    chr1\t9630000\t9635000\tchr1\t9865000\t9870000\tC0,240000,0,C0,235000,0,C0,225000,0\n    chr1\t9630000\t9640000\tchrX\t21700000\t21710000\tC0,840000,1\n    chr1\t9640000\t9645000\tchr1\t9850000\t9855000\tC0,210000,0,C0,225000,0\n    chr1\t9700000\t9710000\tchr1\t9850000\t9860000\tC0,150000,0\n    chr1\t9720000\t9725000\tchr1\t9860000\t9865000\tC0,140000,0\n\nThe last column records the assembly IDs, the genomic distance between two loop anchors\non the assembly, and whether this is a neo-loop. For example, for the 5th row above, the loop\nwas detected on the assemblies \"C0\", the genomic distance between the two anchors on this\nassembly is 900K, and it is a neo-loop as indicated by \"1\".\n\nVisualize neo-loops on local assemblies\n---------------------------------------\nIn our paper, we showed that neo-loops frequently involved oncogenes or tumor-suppressor\ngenes in cancer. But how can we know whether a specific gene is involved in neo-loops or\nnot in a sample? For this job, we provide the *searchSVbyGene* command, which takes a\nloop file returned by *neoloop-caller* and a gene name as inputs, and outputs a list of\nSV assemblies, where the input gene is involved in neo-loops on those assemblies::\n\n    $ searchSVbyGene -L SKNMC.neo-loops.txt -G MYC\n\n    C16\n    A2\n\nIn this case, we searched for the MYC gene, and from the result, we can see MYC is\ninvolved in neo-loops on the assembles \"C16\" and \"A2\"::\n\n    A2\tdeletion,8,130800000,-,8,129520000,+\tdeletion,8,129375000,-,8,127880000,+\t8,130835000\t8,126215000\n    C16\tdeletion,8,127880000,+,8,129375000,-\t8,126215000\t8,130125000\n\nFinally, let's plot the Hi-C matrix, the identified neo-loops, and the gene track on the\n\"C16\" assembly, using the built-in visualization module of NeoLoopFinder::\n\n    >>> from neoloop.visualize.core import * \n    >>> import cooler\n    >>> clr = cooler.Cooler('SKNMC-MboI-allReps-filtered.mcool::resolutions/5000')\n    >>> assembly = 'C16\tdeletion,8,127880000,+,8,129375000,-\t8,126215000\t8,130125000'\n    >>> vis = Triangle(clr, assembly, n_rows=3, figsize=(7, 4.2), \n        track_partition=[5, 0.4, 0.5], correct='sweight', span=500000,\n        slopes={(0,0):1, (0,1):0.3, (1,1):1})\n    >>> vis.matrix_plot(vmin=0)\n    >>> vis.plot_chromosome_bounds(linewidth=2)\n    >>> vis.plot_loops('SKNMC.neo-loops.txt', face_color='none', marker_size=40,\n        cluster=False, filter_by_res=True, onlyneo=True)\n    >>> vis.plot_genes(filter_=['MYC', 'PVT1'],label_aligns={'MYC':'right'}, fontsize=9) \n    >>> vis.plot_chromosome_bar(name_size=10, coord_size=9)\n    >>> vis.outfig('SKNMC.C16.pdf')\n\n.. image:: ./images/SKNMC.C16.png\n        :align: center\n\n\nGallery\n=======\nIn addtion to the reconstructed Hi-C maps (.cool), loops (.bedpe), and genes, the visualization module also supports plotting\nRNA-Seq/ChIP-Seq/ATAC-Seq signals (.bigwig), peaks (.bed), and motifs (.bed). Below I'm going to share more examples and the\ncode snippets used to generate the figure.\n\nCode Snippet 1:\n\n    >>> from neoloop.visualize.core import * \n    >>> import cooler\n    >>> clr = cooler.Cooler('SCABER-Arima-allReps.10K.cool')\n    >>> List = [line.rstrip() for line in open('demo/allOnco-genes.txt')] # please find allOnco-genes.txt in the demo folder of this repository\n    >>> assembly = 'A3      deletion,9,38180000,-,9,14660000,+      inversion,9,13870000,-,9,22260000,-     9,38480000      9,24220000'\n    >>> vis = Triangle(clr, assembly, n_rows=5, figsize=(7, 5.2), track_partition=[5, 0.8, 0.8, 0.2, 0.5], correct='weight', span=300000, space=0.08)\n    >>> vis.matrix_plot(vmin=0, cbr_fontsize=9)\n    >>> vis.plot_chromosome_bounds(linewidth=2)\n    >>> vis.plot_signal('RNA-Seq', 'enc_SCABER_RNASeq_rep1.bw', label_size=10, data_range_size=9, max_value=0.5, color='#E31A1C')\n    >>> vis.plot_signal('H3K27ac', 'SCABER_H3K27ac_pool.bw', label_size=10, data_range_size=9, max_value=20, color='#6A3D9A')\n    >>> vis.plot_genes(release=75, filter_=List, fontsize=10)\n    >>> vis.plot_chromosome_bar(name_size=13, coord_size=10)\n    >>> vis.outfig('SCaBER.NFIB.png', dpi=300)\n\nFigure output 1:\n\n.. image:: ./images/SCaBER.NFIB.png\n        :align: center\n\nNote that when you initialize a plotting object, the figure size (**figsize**), the number of tracks (**n_rows**), and the height of each\ntrack (**track_partition**) can all be configured flexibly.\n\nCode Snippet 2:\n\n    >>> from neoloop.visualize.core import * \n    >>> import cooler\n    >>> clr = cooler.Cooler('LNCaP-WT-Arima-allReps-filtered.mcool::resolutions/10000')\n    >>> assembly = 'C26     translocation,7,14158275,+,14,37516423,+        7,13140000      14,36390000'\n    >>> vis = Triangle(clr, assembly, n_rows=6, figsize=(7, 5.3), track_partition=[5, 0.4, 0.8, 0.3, 0.3, 0.5], correct='weight', span=600000, space=0.03)\n    >>> vis.matrix_plot(vmin=0, cbr_fontsize=9)\n    >>> vis.plot_chromosome_bounds(linewidth=2)\n    >>> vis.plot_genes(filter_=['ETV1', 'DGKB', 'MIPOL1'],label_aligns={'DGKB':'right', 'ETV1':'right'}, fontsize=10) \n    >>> vis.plot_signal('DNase-Seq', 'LNCaP.DNase2.hg38.bw', label_size=10, data_range_size=9, max_value=1.8, color='#6A3D9A')\n    >>> vis.plot_motif('demo/LNCaP.CTCF-motifs.hg38.txt', subset='+') # an example file LNCaP.CTCF-motifs.hg38.txt can be found at the demo folder of this repository\n    >>> vis.plot_motif('demo/LNCaP.CTCF-motifs.hg38.txt', subset='-')\n    >>> vis.plot_chromosome_bar(name_size=13, coord_size=10, color_by_order=['#1F78B4','#33A02C'])\n    >>> vis.outfig('LNCaP.CTCF-motifs.png', dpi=300)\n\nFigure output 2:\n\n.. image:: ./images/LNCaP.CTCF-motifs.png\n        :align: center\n\nCode Snippet 3:\n\n    >>> from neoloop.visualize.core import * \n    >>> import cooler\n    >>> clr = cooler.Cooler('LNCaP-WT-Arima-allReps-filtered.mcool::resolutions/10000')\n    >>> assembly = 'C26     translocation,7,14158275,+,14,37516423,+        7,13140000      14,36390000'\n    >>> vis = Triangle(clr, assembly, n_rows=5, figsize=(7, 5.3), track_partition=[5, 0.4, 0.8, 0.8, 0.5], correct='weight', span=600000, space=0.03)\n    >>> vis.matrix_plot(vmin=0, cbr_fontsize=9)\n    >>> vis.plot_chromosome_bounds(linewidth=2)\n    >>> vis.plot_loops('LNCaP.neoloops.txt', face_color='none', marker_size=40, cluster=True, onlyneo=True) # only show neo-loops\n    >>> vis.plot_genes(filter_=['ETV1', 'DGKB', 'MIPOL1'],label_aligns={'DGKB':'right', 'ETV1':'right'}, fontsize=10)\n    >>> vis.plot_signal('DNase-Seq', 'LNCaP.DNase2.hg38.bw', label_size=10, data_range_size=9, max_value=1.8, color='#6A3D9A')\n    >>> vis.plot_arcs(lw=1.5, cutoff='top', gene_filter=['ETV1'], arc_color='#666666') # ETV1-related neo-loops\n    >>> vis.plot_chromosome_bar(name_size=13, coord_size=10, color_by_order=['#1F78B4','#33A02C'])\n    >>> vis.outfig('LNCaP.arcs.png', dpi=300)\n\nFigure output 3:\n\n.. image:: ./images/LNCaP.arcs.png\n        :align: center\n\nNote that both **plot_loops** and **plot_genes** need to be called before **plot_arcs**.\n\nRelease Notes\n=============\nVersion 0.4.0 (09/16/2022)\n--------------------------\n1. Made it compatible with the latest versions of dependent packages\n2. Changed to Peakachu v2.0 models\n3. Moved all reference data to the 3D genome browser server (http://3dgenome.fsm.northwestern.edu/)\n\nVersion 0.4.2 (09/28/2022)\n--------------------------\n1. For CNV segmentation, changed to use the genome-wide CNV profiles to train HMM models\n2. Made key parameters of the CNV segmentation algorithm tunable\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/XiaoTaoWang/NeoLoopFinder",
    "keywords": "Hi-C cooler cancer enhancer hijacking",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "neoloop",
    "package_url": "https://pypi.org/project/neoloop/",
    "platform": null,
    "project_url": "https://pypi.org/project/neoloop/",
    "project_urls": {
      "Homepage": "https://github.com/XiaoTaoWang/NeoLoopFinder"
    },
    "release_url": "https://pypi.org/project/neoloop/0.4.3.post2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Predict neo-loops induced by structural variations",
    "version": "0.4.3.post2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17265034,
  "releases": {
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6bc35d8afc4c19a36efdc16a64f453e47a3cd308a52405bfdf96f226284ea6bd",
          "md5": "83712d4df5924479c67cb97cd3d78ffa",
          "sha256": "bcf12093ee38d24c7463c47ecbec90044dc2b92b6c80883800c7ec2d90076eb8"
        },
        "downloads": -1,
        "filename": "neoloop-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "83712d4df5924479c67cb97cd3d78ffa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 40646853,
        "upload_time": "2021-04-21T18:35:35",
        "upload_time_iso_8601": "2021-04-21T18:35:35.642777Z",
        "url": "https://files.pythonhosted.org/packages/6b/c3/5d8afc4c19a36efdc16a64f453e47a3cd308a52405bfdf96f226284ea6bd/neoloop-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4478bdc71aef4df8337cd0698d3a59fc014952056001e7500d4c880e79b3c316",
          "md5": "9bceb3f8b6a4eeb2afb4fe2be1547ac8",
          "sha256": "3a259ec9e6d96bb6cec06ac869b9165091e15399aa931869b2aefdf61be77d15"
        },
        "downloads": -1,
        "filename": "neoloop-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "9bceb3f8b6a4eeb2afb4fe2be1547ac8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 40618340,
        "upload_time": "2021-04-21T18:35:57",
        "upload_time_iso_8601": "2021-04-21T18:35:57.915152Z",
        "url": "https://files.pythonhosted.org/packages/44/78/bdc71aef4df8337cd0698d3a59fc014952056001e7500d4c880e79b3c316/neoloop-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2354c5de8c762af178d91a3d562d2ec05781ec2a56d093e8f04669927996d29e",
          "md5": "48d4edb40bb0f443a437cf7d7fa22713",
          "sha256": "3c53b4b5513766eb4bc8a19944deb5a36be679a66adfb2cf45d0fa9f6ecd8c73"
        },
        "downloads": -1,
        "filename": "neoloop-0.2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "48d4edb40bb0f443a437cf7d7fa22713",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 40648892,
        "upload_time": "2021-05-05T16:25:03",
        "upload_time_iso_8601": "2021-05-05T16:25:03.085677Z",
        "url": "https://files.pythonhosted.org/packages/23/54/c5de8c762af178d91a3d562d2ec05781ec2a56d093e8f04669927996d29e/neoloop-0.2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4c96cf4fecccadbae6e5f573c027964ff96b364f6119aeaf2104e57d10079700",
          "md5": "94be7e64b8ca1fb73baf2da8a8dc44d9",
          "sha256": "adfb0d0c118a292af26b48ddf796eb6f358467a1629766f3a5b05bcff7e90871"
        },
        "downloads": -1,
        "filename": "neoloop-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "94be7e64b8ca1fb73baf2da8a8dc44d9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 40620343,
        "upload_time": "2021-05-05T16:25:26",
        "upload_time_iso_8601": "2021-05-05T16:25:26.337126Z",
        "url": "https://files.pythonhosted.org/packages/4c/96/cf4fecccadbae6e5f573c027964ff96b364f6119aeaf2104e57d10079700/neoloop-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3.post1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "402982e151b58db64af6cfe777c5c25bcd52209d6b07037f68b3c6bb66204e7f",
          "md5": "0cbaea2d0ab080fdd3f835de70774ee5",
          "sha256": "cd2db341c4dc5abe42af52e4e36f0bea28a8657f8734eee34724f09a8053ba49"
        },
        "downloads": -1,
        "filename": "neoloop-0.2.3.post1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0cbaea2d0ab080fdd3f835de70774ee5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 40650118,
        "upload_time": "2021-07-12T23:18:31",
        "upload_time_iso_8601": "2021-07-12T23:18:31.330206Z",
        "url": "https://files.pythonhosted.org/packages/40/29/82e151b58db64af6cfe777c5c25bcd52209d6b07037f68b3c6bb66204e7f/neoloop-0.2.3.post1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a57c18afb2da77fca1fb184b47fa2f887d083828cc39a3ba3fcbb23ed7c3b74e",
          "md5": "dc21e4ccf9f5739bab5c00fa0e0da7ab",
          "sha256": "10b5def29fd1cf3a19f27d2032cd07c3a380c61dd524460f9d8ad38144d76355"
        },
        "downloads": -1,
        "filename": "neoloop-0.2.3.post1.tar.gz",
        "has_sig": false,
        "md5_digest": "dc21e4ccf9f5739bab5c00fa0e0da7ab",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 40620989,
        "upload_time": "2021-07-12T23:18:53",
        "upload_time_iso_8601": "2021-07-12T23:18:53.509617Z",
        "url": "https://files.pythonhosted.org/packages/a5/7c/18afb2da77fca1fb184b47fa2f887d083828cc39a3ba3fcbb23ed7c3b74e/neoloop-0.2.3.post1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3.post2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c3e17a9d4620520cd6c9ae46d891ce47979c3de00f645974b45b5ca804fe0546",
          "md5": "2e9a04e79ed9c6a2e66aec182c994933",
          "sha256": "1097d78224cef2510de13b549c82abbf3c810067132215944aaf33a60744fbfd"
        },
        "downloads": -1,
        "filename": "neoloop-0.2.3.post2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2e9a04e79ed9c6a2e66aec182c994933",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 40650219,
        "upload_time": "2021-07-28T01:01:35",
        "upload_time_iso_8601": "2021-07-28T01:01:35.281977Z",
        "url": "https://files.pythonhosted.org/packages/c3/e1/7a9d4620520cd6c9ae46d891ce47979c3de00f645974b45b5ca804fe0546/neoloop-0.2.3.post2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9051dda0a210fcf9fbbbcb09c67ba18696b1d2c7fe77f90e92ec67f24dc52559",
          "md5": "66349c73eb40b3224d36ef47308535cc",
          "sha256": "37223d36896bdd89e5a2b4d9261571d72a3f58e8512a4eaf4af56d6c45d33829"
        },
        "downloads": -1,
        "filename": "neoloop-0.2.3.post2.tar.gz",
        "has_sig": false,
        "md5_digest": "66349c73eb40b3224d36ef47308535cc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 40621197,
        "upload_time": "2021-07-28T01:01:57",
        "upload_time_iso_8601": "2021-07-28T01:01:57.847889Z",
        "url": "https://files.pythonhosted.org/packages/90/51/dda0a210fcf9fbbbcb09c67ba18696b1d2c7fe77f90e92ec67f24dc52559/neoloop-0.2.3.post2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "350de4c84729c7948547630e0fa504601fb9db25682801d2a9565b968a1449e9",
          "md5": "b94e2b65f0e99d03dfc9c6ea07581d09",
          "sha256": "a7e5b4b2dedeeb78b37f2f6f3b6b62ee3fc337d03a5ffd3cbd318a341b341323"
        },
        "downloads": -1,
        "filename": "neoloop-0.2.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b94e2b65f0e99d03dfc9c6ea07581d09",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 56817839,
        "upload_time": "2021-10-20T15:59:45",
        "upload_time_iso_8601": "2021-10-20T15:59:45.994374Z",
        "url": "https://files.pythonhosted.org/packages/35/0d/e4c84729c7948547630e0fa504601fb9db25682801d2a9565b968a1449e9/neoloop-0.2.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "89ac1cd0a3eb9a46fabcec197f26df9766c255e7cfd3bafad8ce3f5f735f1ad0",
          "md5": "82c91a2f1d1ac0615287f0560028ee9f",
          "sha256": "368a33de817f509b4675066d79002d999c974b991e623c3e88cd9bca27997ac3"
        },
        "downloads": -1,
        "filename": "neoloop-0.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "82c91a2f1d1ac0615287f0560028ee9f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 56791535,
        "upload_time": "2021-10-20T16:00:16",
        "upload_time_iso_8601": "2021-10-20T16:00:16.996808Z",
        "url": "https://files.pythonhosted.org/packages/89/ac/1cd0a3eb9a46fabcec197f26df9766c255e7cfd3bafad8ce3f5f735f1ad0/neoloop-0.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.4.post1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "16ed41bcd37e4d258493c5d96ea8c34b3c8da63cc143deb2ee551227359ab2a7",
          "md5": "0cfc0afc0789ac80f3ffeacb26b02c1f",
          "sha256": "5bcea3210498a6477291a03bd2887758e6f44c1f973b22bfab3221bd4ee94274"
        },
        "downloads": -1,
        "filename": "neoloop-0.2.4.post1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0cfc0afc0789ac80f3ffeacb26b02c1f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 56818369,
        "upload_time": "2021-10-29T18:07:04",
        "upload_time_iso_8601": "2021-10-29T18:07:04.208504Z",
        "url": "https://files.pythonhosted.org/packages/16/ed/41bcd37e4d258493c5d96ea8c34b3c8da63cc143deb2ee551227359ab2a7/neoloop-0.2.4.post1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "149b57c0f88f4cfd02df2ebacc685509b97196586ab5d591527156f4a9d125cd",
          "md5": "126d7f7f007deff82f6d73cbf45d0d3e",
          "sha256": "03e100ba89ae742dae3c2183bef3f6c669bade475fb630ff6720b1dbec903085"
        },
        "downloads": -1,
        "filename": "neoloop-0.2.4.post1.tar.gz",
        "has_sig": false,
        "md5_digest": "126d7f7f007deff82f6d73cbf45d0d3e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 56794654,
        "upload_time": "2021-10-29T18:07:37",
        "upload_time_iso_8601": "2021-10-29T18:07:37.084633Z",
        "url": "https://files.pythonhosted.org/packages/14/9b/57c0f88f4cfd02df2ebacc685509b97196586ab5d591527156f4a9d125cd/neoloop-0.2.4.post1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.4.post2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d3ea4ff41ccde648fa518917f5c1a5935561e7d0e6c3602476ede81c5b5bee6a",
          "md5": "130152873355e94a38f50a648b426226",
          "sha256": "f7baf7dbd0d06b6722de68f71d0645f6db69d0ab00f340a72f2f0fd782ecb0dd"
        },
        "downloads": -1,
        "filename": "neoloop-0.2.4.post2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "130152873355e94a38f50a648b426226",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 56818213,
        "upload_time": "2022-01-07T16:18:56",
        "upload_time_iso_8601": "2022-01-07T16:18:56.055061Z",
        "url": "https://files.pythonhosted.org/packages/d3/ea/4ff41ccde648fa518917f5c1a5935561e7d0e6c3602476ede81c5b5bee6a/neoloop-0.2.4.post2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5b2e590a76909621c0ee81688b9f123ac2c200d3f2ad6a5f17c8cd27a618ef03",
          "md5": "9bbf415ad774c858351da8abd62b35e1",
          "sha256": "a04f492331ff9596870798934c9d0ee2f1d36fb6a344a391ed19d848dd7c3288"
        },
        "downloads": -1,
        "filename": "neoloop-0.2.4.post2.tar.gz",
        "has_sig": false,
        "md5_digest": "9bbf415ad774c858351da8abd62b35e1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 56791771,
        "upload_time": "2022-01-07T16:19:55",
        "upload_time_iso_8601": "2022-01-07T16:19:55.475183Z",
        "url": "https://files.pythonhosted.org/packages/5b/2e/590a76909621c0ee81688b9f123ac2c200d3f2ad6a5f17c8cd27a618ef03/neoloop-0.2.4.post2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9548b74994abf81cd49ea56387a3828042885f0628d0e4f5982f8a607daa4592",
          "md5": "d06452e4793afad65d6069b719dabbea",
          "sha256": "e749d067d1f8c8a2ad33f3d2c32d9da0b1d91be18cc9f5eca905dc3816757e4d"
        },
        "downloads": -1,
        "filename": "neoloop-0.2.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d06452e4793afad65d6069b719dabbea",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 56818494,
        "upload_time": "2022-05-27T03:47:32",
        "upload_time_iso_8601": "2022-05-27T03:47:32.636065Z",
        "url": "https://files.pythonhosted.org/packages/95/48/b74994abf81cd49ea56387a3828042885f0628d0e4f5982f8a607daa4592/neoloop-0.2.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f47d058d26731c8e577ac9b41e0802fc53563204a76dd827477ab2fe0ce625f6",
          "md5": "a077b50e07cf9ac0b43c7609be19a8ff",
          "sha256": "c4df6124b0809aef00197aa315a97a4612c7d5805ff3a0782b45dee231dbd915"
        },
        "downloads": -1,
        "filename": "neoloop-0.2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "a077b50e07cf9ac0b43c7609be19a8ff",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 56792311,
        "upload_time": "2022-05-27T03:48:03",
        "upload_time_iso_8601": "2022-05-27T03:48:03.734301Z",
        "url": "https://files.pythonhosted.org/packages/f4/7d/058d26731c8e577ac9b41e0802fc53563204a76dd827477ab2fe0ce625f6/neoloop-0.2.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "823072066ce1811e4f70948fef9bc7abd8e5e7a14f1a87b30e680934001542db",
          "md5": "8deb7cbdf4731282c6ac4ff79e1ffdd4",
          "sha256": "247cf50ca3ea3653a95b0cd0316d62e3df76bed48bb79f837914cb8a65de98b7"
        },
        "downloads": -1,
        "filename": "neoloop-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8deb7cbdf4731282c6ac4ff79e1ffdd4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 132897,
        "upload_time": "2022-07-05T15:53:41",
        "upload_time_iso_8601": "2022-07-05T15:53:41.480427Z",
        "url": "https://files.pythonhosted.org/packages/82/30/72066ce1811e4f70948fef9bc7abd8e5e7a14f1a87b30e680934001542db/neoloop-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "136556a672a108265130283044e6a56bc1e4aa51ea16b364fcfbaecd1afbcdb2",
          "md5": "beb0f9073de3c50a386350122c90f8cc",
          "sha256": "ad8ae52b99ed79f8ca832de984f6004523b2beb8967d2d3e82917bba345a0c50"
        },
        "downloads": -1,
        "filename": "neoloop-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "beb0f9073de3c50a386350122c90f8cc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 106310,
        "upload_time": "2022-07-05T15:53:43",
        "upload_time_iso_8601": "2022-07-05T15:53:43.587938Z",
        "url": "https://files.pythonhosted.org/packages/13/65/56a672a108265130283044e6a56bc1e4aa51ea16b364fcfbaecd1afbcdb2/neoloop-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0.post1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "65f13531bddc9f643bb30339d4965a5e4028b42023d0228513145d7581d3235b",
          "md5": "7e8d3cc07b4e7ff9b10392439b092865",
          "sha256": "3a1b59464551429fea13581ff61e0a4bcf41bae4dea23e5f114a8c2cc59d7983"
        },
        "downloads": -1,
        "filename": "neoloop-0.3.0.post1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7e8d3cc07b4e7ff9b10392439b092865",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 133110,
        "upload_time": "2022-07-05T16:04:08",
        "upload_time_iso_8601": "2022-07-05T16:04:08.657770Z",
        "url": "https://files.pythonhosted.org/packages/65/f1/3531bddc9f643bb30339d4965a5e4028b42023d0228513145d7581d3235b/neoloop-0.3.0.post1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c5a27cd2b863011647b98c6e1277af3017b32bc69eaad01bf443cfed06e61882",
          "md5": "cf927dfffad02d9a2c8e765de1941f01",
          "sha256": "fab4d6dbf429f4feffa789804c665da374e98570240a914a0b534a19b27d2fa6"
        },
        "downloads": -1,
        "filename": "neoloop-0.3.0.post1.tar.gz",
        "has_sig": false,
        "md5_digest": "cf927dfffad02d9a2c8e765de1941f01",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 106317,
        "upload_time": "2022-07-05T16:04:11",
        "upload_time_iso_8601": "2022-07-05T16:04:11.290553Z",
        "url": "https://files.pythonhosted.org/packages/c5/a2/7cd2b863011647b98c6e1277af3017b32bc69eaad01bf443cfed06e61882/neoloop-0.3.0.post1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0.post2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4e15296a6aee1840857c0d81b0e71a0e0ed7d593875d48a6f64904051548cc55",
          "md5": "709333b09b9398c831796532f40da302",
          "sha256": "ff5c170a0910d0c1d886392f2c6b0b22f68fb5a33d1c39e1b0666a9f8525b63f"
        },
        "downloads": -1,
        "filename": "neoloop-0.3.0.post2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "709333b09b9398c831796532f40da302",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 133113,
        "upload_time": "2022-07-08T16:42:32",
        "upload_time_iso_8601": "2022-07-08T16:42:32.411888Z",
        "url": "https://files.pythonhosted.org/packages/4e/15/296a6aee1840857c0d81b0e71a0e0ed7d593875d48a6f64904051548cc55/neoloop-0.3.0.post2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "55a7b581580f6b0e1928b1a9bb2e0af18bc8b10820713e701d1a3c85a512a4d9",
          "md5": "84367edb59bc22e773499bba0cc1cffe",
          "sha256": "dd9aa5a67828c148c0e972a6dfc9cbec83b8ac0cba636fe023a75b0d5ea23c4a"
        },
        "downloads": -1,
        "filename": "neoloop-0.3.0.post2.tar.gz",
        "has_sig": false,
        "md5_digest": "84367edb59bc22e773499bba0cc1cffe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 106336,
        "upload_time": "2022-07-08T16:42:34",
        "upload_time_iso_8601": "2022-07-08T16:42:34.478481Z",
        "url": "https://files.pythonhosted.org/packages/55/a7/b581580f6b0e1928b1a9bb2e0af18bc8b10820713e701d1a3c85a512a4d9/neoloop-0.3.0.post2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0.post3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ccd49d5cf3619df046f95dd81365c40e548687a5f0fa9eb1cd14d4f6edbe2873",
          "md5": "4e504ed21b49278e22071c924acacd37",
          "sha256": "c735e8e6e0779edafe9da6c8dc9e17eeb71e841e9a6dcc225c6288d128c50931"
        },
        "downloads": -1,
        "filename": "neoloop-0.3.0.post3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4e504ed21b49278e22071c924acacd37",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 133125,
        "upload_time": "2022-07-08T21:35:43",
        "upload_time_iso_8601": "2022-07-08T21:35:43.577617Z",
        "url": "https://files.pythonhosted.org/packages/cc/d4/9d5cf3619df046f95dd81365c40e548687a5f0fa9eb1cd14d4f6edbe2873/neoloop-0.3.0.post3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "89cd50b6049f47ef14b82fd3a4eb131a7ef5ded0e9e87df860e4f649b84a5411",
          "md5": "d192f947dc43cfa76cbdd03df75ad2de",
          "sha256": "c972cf09b80856515d9e0629ebd06afd87ce3f66bfd8d697c093df6231998fce"
        },
        "downloads": -1,
        "filename": "neoloop-0.3.0.post3.tar.gz",
        "has_sig": false,
        "md5_digest": "d192f947dc43cfa76cbdd03df75ad2de",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 107207,
        "upload_time": "2022-07-08T21:35:45",
        "upload_time_iso_8601": "2022-07-08T21:35:45.699360Z",
        "url": "https://files.pythonhosted.org/packages/89/cd/50b6049f47ef14b82fd3a4eb131a7ef5ded0e9e87df860e4f649b84a5411/neoloop-0.3.0.post3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0.post4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a9030cd2e599ee3d69c12df47c44ea578c1c12ba98ecea80bcfcfdd146d99c58",
          "md5": "9b75fb6deb9fd305d7fbcaf843521a5d",
          "sha256": "ac2e9f11fab25b44f3dd73d79d1094a4e5c767ed27d75c1c0f7c270b8c0e0ac1"
        },
        "downloads": -1,
        "filename": "neoloop-0.3.0.post4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9b75fb6deb9fd305d7fbcaf843521a5d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 133124,
        "upload_time": "2022-07-09T03:18:31",
        "upload_time_iso_8601": "2022-07-09T03:18:31.736796Z",
        "url": "https://files.pythonhosted.org/packages/a9/03/0cd2e599ee3d69c12df47c44ea578c1c12ba98ecea80bcfcfdd146d99c58/neoloop-0.3.0.post4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "72b73378f7312fb7bf21bab4a93a345ebaedc6e7979d33f61bc846df66d61aec",
          "md5": "f1276a3727a7deb1df081e8d587046f0",
          "sha256": "6555716dd927b9ee3af7861d6ab139c18948b4c4393f315d7880ec23e6d67c34"
        },
        "downloads": -1,
        "filename": "neoloop-0.3.0.post4.tar.gz",
        "has_sig": false,
        "md5_digest": "f1276a3727a7deb1df081e8d587046f0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 106364,
        "upload_time": "2022-07-09T03:18:33",
        "upload_time_iso_8601": "2022-07-09T03:18:33.962202Z",
        "url": "https://files.pythonhosted.org/packages/72/b7/3378f7312fb7bf21bab4a93a345ebaedc6e7979d33f61bc846df66d61aec/neoloop-0.3.0.post4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4a692e70959d6aaffcbadeeaed0eb76e77de7e2b1c5fba4ad39d4fcc66807605",
          "md5": "18aac9c964b1db09a4a7c69c1438c0ed",
          "sha256": "efa90d87ef38f2dada68097de188ede6bd5bb37d7f82a96a0857301544c84a38"
        },
        "downloads": -1,
        "filename": "neoloop-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "18aac9c964b1db09a4a7c69c1438c0ed",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 140936,
        "upload_time": "2022-09-17T04:18:18",
        "upload_time_iso_8601": "2022-09-17T04:18:18.866264Z",
        "url": "https://files.pythonhosted.org/packages/4a/69/2e70959d6aaffcbadeeaed0eb76e77de7e2b1c5fba4ad39d4fcc66807605/neoloop-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5b6a9459254bf035de13fbe1f69155dce55b7356913e0f3481bef01a4d0ae507",
          "md5": "2b4437736f922d0e4594f81d09179793",
          "sha256": "e6680b88dd2a511711f3d2c2d87901587183591ae8ee5e1e63e84746a49929f6"
        },
        "downloads": -1,
        "filename": "neoloop-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2b4437736f922d0e4594f81d09179793",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 119352,
        "upload_time": "2022-09-17T04:18:20",
        "upload_time_iso_8601": "2022-09-17T04:18:20.741225Z",
        "url": "https://files.pythonhosted.org/packages/5b/6a/9459254bf035de13fbe1f69155dce55b7356913e0f3481bef01a4d0ae507/neoloop-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0.post1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70b1367dd55f3795f8037955c06441452b982a6afcf03137bb6f14d81f8e5a70",
          "md5": "03c57723e05b36c4dd888ca69272494a",
          "sha256": "97b246ea770c158defe1a1226df8f23a839749e400604e3e309d9138c5a5817b"
        },
        "downloads": -1,
        "filename": "neoloop-0.4.0.post1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "03c57723e05b36c4dd888ca69272494a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 141142,
        "upload_time": "2022-09-17T13:42:26",
        "upload_time_iso_8601": "2022-09-17T13:42:26.394222Z",
        "url": "https://files.pythonhosted.org/packages/70/b1/367dd55f3795f8037955c06441452b982a6afcf03137bb6f14d81f8e5a70/neoloop-0.4.0.post1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4efbc0ce836c626c258fa63ec51e398a5f57dd768112de669f7f789eb96b3b02",
          "md5": "987557b013cb10a5e9d31714f2ad3ae9",
          "sha256": "9534db1b4047cb40d582fb2c381bb57d3dd3c2ce5cd7611169296016fb633c4a"
        },
        "downloads": -1,
        "filename": "neoloop-0.4.0.post1.tar.gz",
        "has_sig": false,
        "md5_digest": "987557b013cb10a5e9d31714f2ad3ae9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 119344,
        "upload_time": "2022-09-17T13:42:29",
        "upload_time_iso_8601": "2022-09-17T13:42:29.584181Z",
        "url": "https://files.pythonhosted.org/packages/4e/fb/c0ce836c626c258fa63ec51e398a5f57dd768112de669f7f789eb96b3b02/neoloop-0.4.0.post1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "52f8342283e45d1c39ee157c1ecab517786bca24b673a25e174aad15d097da21",
          "md5": "824ef4624d213aa35fe4d7f1bb08f506",
          "sha256": "d1e94881d8cb91e8d5ca276f4b8fe2f0f12bed25cb68c6ee2c1151a96193ade4"
        },
        "downloads": -1,
        "filename": "neoloop-0.4.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "824ef4624d213aa35fe4d7f1bb08f506",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 141541,
        "upload_time": "2022-09-28T15:56:28",
        "upload_time_iso_8601": "2022-09-28T15:56:28.360894Z",
        "url": "https://files.pythonhosted.org/packages/52/f8/342283e45d1c39ee157c1ecab517786bca24b673a25e174aad15d097da21/neoloop-0.4.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "af8c7c29b35a637e383ec0d5a0b5ce40e2cfceeb3073a0576c71a97ee6d6a31b",
          "md5": "5f3d40260946564127b8f658d677839a",
          "sha256": "8d55d671bc535e551b207ff719086f272a778bfaf513753590649f7edbe87531"
        },
        "downloads": -1,
        "filename": "neoloop-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5f3d40260946564127b8f658d677839a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 118416,
        "upload_time": "2022-09-28T15:56:30",
        "upload_time_iso_8601": "2022-09-28T15:56:30.064123Z",
        "url": "https://files.pythonhosted.org/packages/af/8c/7c29b35a637e383ec0d5a0b5ce40e2cfceeb3073a0576c71a97ee6d6a31b/neoloop-0.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9416e4a0855d670f2f5b8a421f498ac6e40a00b1124afdd38994220641c5452a",
          "md5": "a533025ff5ce252337b39c463cfa3edb",
          "sha256": "f22e7a30422e0f3d3c33b4c2cca0c4f09d67b71e28a2f0cbfc18aa3ed121fbbc"
        },
        "downloads": -1,
        "filename": "neoloop-0.4.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a533025ff5ce252337b39c463cfa3edb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 141592,
        "upload_time": "2022-09-28T16:14:00",
        "upload_time_iso_8601": "2022-09-28T16:14:00.565330Z",
        "url": "https://files.pythonhosted.org/packages/94/16/e4a0855d670f2f5b8a421f498ac6e40a00b1124afdd38994220641c5452a/neoloop-0.4.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "896811f490383f97b42391a0cbefb0d7dfc91dce90292ea1354404a705ad3155",
          "md5": "8a6de25e132944f606cacd390c08767e",
          "sha256": "e2980ab3b5d79615239cf650412e20f7d81ea5a2283582bd7ecde29e1ea188f3"
        },
        "downloads": -1,
        "filename": "neoloop-0.4.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8a6de25e132944f606cacd390c08767e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 118456,
        "upload_time": "2022-09-28T16:14:03",
        "upload_time_iso_8601": "2022-09-28T16:14:03.294820Z",
        "url": "https://files.pythonhosted.org/packages/89/68/11f490383f97b42391a0cbefb0d7dfc91dce90292ea1354404a705ad3155/neoloop-0.4.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.2.post1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f92c8110517255c9c5373dfca47cb822afa300eecfa0cba33002c02b01cdb8d2",
          "md5": "842e63c8b2053f3f984587016c67cb89",
          "sha256": "8e23244b8a18fe07bad69f3bd658327dd845edb5eff92b9d154a30d57705b2e3"
        },
        "downloads": -1,
        "filename": "neoloop-0.4.2.post1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "842e63c8b2053f3f984587016c67cb89",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 141993,
        "upload_time": "2022-12-08T14:47:46",
        "upload_time_iso_8601": "2022-12-08T14:47:46.528662Z",
        "url": "https://files.pythonhosted.org/packages/f9/2c/8110517255c9c5373dfca47cb822afa300eecfa0cba33002c02b01cdb8d2/neoloop-0.4.2.post1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "284ba6a20e85d3c88a642704969178614790f953009fa63743d357a5602961bb",
          "md5": "fee24c9556589e0e97e6f05294d4a9ae",
          "sha256": "20eddc373df7b8f8afba8fe05d0980ae924b518e66dc235cbf9aa931456ade83"
        },
        "downloads": -1,
        "filename": "neoloop-0.4.2.post1.tar.gz",
        "has_sig": false,
        "md5_digest": "fee24c9556589e0e97e6f05294d4a9ae",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 120441,
        "upload_time": "2022-12-08T14:47:48",
        "upload_time_iso_8601": "2022-12-08T14:47:48.749868Z",
        "url": "https://files.pythonhosted.org/packages/28/4b/a6a20e85d3c88a642704969178614790f953009fa63743d357a5602961bb/neoloop-0.4.2.post1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "437c4878b0cf8137c82691c43fc2362444eb4608e53c88957d9714c921ef13d7",
          "md5": "22f64aa849ba9c28cb42b345cfd48822",
          "sha256": "228a2328c88576725c9a8f066b885b5e2c2595c15b11ba3d72c372cd61942ccb"
        },
        "downloads": -1,
        "filename": "neoloop-0.4.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "22f64aa849ba9c28cb42b345cfd48822",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 141870,
        "upload_time": "2022-12-18T15:08:31",
        "upload_time_iso_8601": "2022-12-18T15:08:31.889117Z",
        "url": "https://files.pythonhosted.org/packages/43/7c/4878b0cf8137c82691c43fc2362444eb4608e53c88957d9714c921ef13d7/neoloop-0.4.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8238f16b5c2838934b9d306089dad1cb05c86f8a5bae26eb5b35f0790123d239",
          "md5": "2c368a230d54f67e6f551c4114584c9b",
          "sha256": "159e2b2299e260e04038f2b60e969a08a620b4f4b39d66c774d26ea5d0a4ea9a"
        },
        "downloads": -1,
        "filename": "neoloop-0.4.3.tar.gz",
        "has_sig": false,
        "md5_digest": "2c368a230d54f67e6f551c4114584c9b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 120506,
        "upload_time": "2022-12-18T15:08:36",
        "upload_time_iso_8601": "2022-12-18T15:08:36.498219Z",
        "url": "https://files.pythonhosted.org/packages/82/38/f16b5c2838934b9d306089dad1cb05c86f8a5bae26eb5b35f0790123d239/neoloop-0.4.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.3.post1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2c66454de57448f4c44a4136eca186f39bbf787ed141f65c1d7a9e4a5a6f25f8",
          "md5": "8f7cbfe47f02d88be4ee088490397509",
          "sha256": "35b43be828018d03cb62a2a8c9a3614a31957a69a4fac97639b752699c2e8b0e"
        },
        "downloads": -1,
        "filename": "neoloop-0.4.3.post1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8f7cbfe47f02d88be4ee088490397509",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 142080,
        "upload_time": "2023-02-17T05:15:33",
        "upload_time_iso_8601": "2023-02-17T05:15:33.911160Z",
        "url": "https://files.pythonhosted.org/packages/2c/66/454de57448f4c44a4136eca186f39bbf787ed141f65c1d7a9e4a5a6f25f8/neoloop-0.4.3.post1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "35a53fb2a5c5eead4f46b02a8279b75e5fbecade38c567b52e024102e29b8fb5",
          "md5": "e8ff596d68d17a665eb604c2e7b04d9e",
          "sha256": "e751db7dbc79443cd0a440b1aebb31871fb4cb3906b0736238736986f2eb0c28"
        },
        "downloads": -1,
        "filename": "neoloop-0.4.3.post1.tar.gz",
        "has_sig": false,
        "md5_digest": "e8ff596d68d17a665eb604c2e7b04d9e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 119077,
        "upload_time": "2023-02-17T05:15:36",
        "upload_time_iso_8601": "2023-02-17T05:15:36.215462Z",
        "url": "https://files.pythonhosted.org/packages/35/a5/3fb2a5c5eead4f46b02a8279b75e5fbecade38c567b52e024102e29b8fb5/neoloop-0.4.3.post1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.3.post2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "44a65584d247da3c1cee5a4abfcc2b03a72f78d563d8800aa752fd6a852ba208",
          "md5": "057e2417cef702a8f7fcc094f127ee51",
          "sha256": "314034d04aa4d00833fc8dbb117967283fa2a7078ba7466c3e2f6618548e3c0a"
        },
        "downloads": -1,
        "filename": "neoloop-0.4.3.post2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "057e2417cef702a8f7fcc094f127ee51",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 142092,
        "upload_time": "2023-03-13T01:36:23",
        "upload_time_iso_8601": "2023-03-13T01:36:23.070165Z",
        "url": "https://files.pythonhosted.org/packages/44/a6/5584d247da3c1cee5a4abfcc2b03a72f78d563d8800aa752fd6a852ba208/neoloop-0.4.3.post2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fba0ff966fb6991fb9dae5e4fedd877f8dfb787ec98c88b6298d830a05385c5f",
          "md5": "221edec3837510ebe17c3152bc725a40",
          "sha256": "2b2d2b9a807a02e4b52282a1cc0e4131f1dbbd5b386da68acdf5d4f320df740a"
        },
        "downloads": -1,
        "filename": "neoloop-0.4.3.post2.tar.gz",
        "has_sig": false,
        "md5_digest": "221edec3837510ebe17c3152bc725a40",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 119072,
        "upload_time": "2023-03-13T01:36:29",
        "upload_time_iso_8601": "2023-03-13T01:36:29.561705Z",
        "url": "https://files.pythonhosted.org/packages/fb/a0/ff966fb6991fb9dae5e4fedd877f8dfb787ec98c88b6298d830a05385c5f/neoloop-0.4.3.post2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "44a65584d247da3c1cee5a4abfcc2b03a72f78d563d8800aa752fd6a852ba208",
        "md5": "057e2417cef702a8f7fcc094f127ee51",
        "sha256": "314034d04aa4d00833fc8dbb117967283fa2a7078ba7466c3e2f6618548e3c0a"
      },
      "downloads": -1,
      "filename": "neoloop-0.4.3.post2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "057e2417cef702a8f7fcc094f127ee51",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 142092,
      "upload_time": "2023-03-13T01:36:23",
      "upload_time_iso_8601": "2023-03-13T01:36:23.070165Z",
      "url": "https://files.pythonhosted.org/packages/44/a6/5584d247da3c1cee5a4abfcc2b03a72f78d563d8800aa752fd6a852ba208/neoloop-0.4.3.post2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fba0ff966fb6991fb9dae5e4fedd877f8dfb787ec98c88b6298d830a05385c5f",
        "md5": "221edec3837510ebe17c3152bc725a40",
        "sha256": "2b2d2b9a807a02e4b52282a1cc0e4131f1dbbd5b386da68acdf5d4f320df740a"
      },
      "downloads": -1,
      "filename": "neoloop-0.4.3.post2.tar.gz",
      "has_sig": false,
      "md5_digest": "221edec3837510ebe17c3152bc725a40",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 119072,
      "upload_time": "2023-03-13T01:36:29",
      "upload_time_iso_8601": "2023-03-13T01:36:29.561705Z",
      "url": "https://files.pythonhosted.org/packages/fb/a0/ff966fb6991fb9dae5e4fedd877f8dfb787ec98c88b6298d830a05385c5f/neoloop-0.4.3.post2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}