{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Plover Speaker ID\n\nA Plover plugin for managing speaker identification and question-and-answer\ndesignations. Define your speaker IDs inline and use them right away.\n\n## Speaker Numbers\n\nSpeaker numbers are somewhat arbitrary, and you can have as many items defined\nin your dictionary as you need. The predefined speaker IDs range from 1 to 4\nfor regular speakers, and 300 upwards for some special roles.\n\n| Num | Name                 |\n| --: | -------------------- |\n|   1 | `Mr. Stphao`         |\n|   2 | `Ms. Skwrao`         |\n|   3 | `Mr. Eufplt`         |\n|   4 | `Ms. Eurbgs`         |\n| 300 | `the Witness`        |\n| 301 | `the Court`          |\n| 302 | `the Videographer`   |\n| 303 | `the Court Reporter` |\n| 304 | `the Clerk`          |\n| 305 | `the Bailiff`        |\n\nThese are by no means the only speaker IDs available. Feel free to redefine the\nspeaker names, or add more to fit your use case.\n\n## Writing Designations\n\nTo actually write designations, you can define outlines to translate to special\noperators in your personal dictionaries.\n\n_Note: The outlines used below are merely examples from my own usage; feel free\nto use outlines that match your own theory or personal dictionary._\n\n### Question and Answer\n\nQuestions can be defined with the `:question` meta, and answers with `:answer`:\n\n```json\n\"STKPWHR\": \"{:question}\"\n\"-FRPBLGTS\": \"{:answer}\"\n```\n\nBoth of these start a new line with either `Q.` or `A.`. To start a paragraph\ndouble-spaced, use the `:question_dsp`/`:Q` or `:answer_dsp`/`:A` metas.\n\n### Speaker Identification (Court Reporting)\n\nTo start a paragraph of colloquy, use the `:colloquy` meta, and provide\na speaker number:\n\n```json\n\"STPHAO\": \"{:colloquy:1}\"\n\"SKWRAO\": \"{:colloquy:2}\"\n```\n\nIt starts a new line with the speaker's name _in all upper case_ followed by\na colon, for example `MR. SNOO:`. To start double-spaced, use\n`:colloquy_dsp`/`:coll`.\n\nFor bylines, use the `:byline` meta, and provide a speaker number:\n\n```json\n\"STPHAO/STKPWHR\": \"{:byline:1}\"\n\"SKWRAO/STKPWHR\": \"{:byline:2}\"\n```\n\nThis outputs a byline of the form `BY <speaker>:`, followed by a `Q.` on the\nnext line. To start double-spaced, use `:byline_dsp`/`:by`.\n\nCalifornia-style bylines have the initial `Q.` on the same line as the speaker\nname. To use this style, prefix the meta names with `ca_`: `:ca_byline`,\n`:ca_byline_dsp`/`:ca_by`.\n\n### Speaker Identification (Captioning)\n\nTo start a paragraph by a certain speaker, use the `:cap_speaker` meta, and\nprovide the speaker number:\n\n```json\n\"STPHAO\": \"{:cap_speaker:1}\"\n\"SKWRAO\": \"{:cap_speaker:2}\"\n```\n\nThis starts a new line with two arrows `>>`, then the speaker's name, then\na colon. To start double-spaced, use `:cap_speaker_dsp`/`:capspkr`.\n\nTo start a paragraph without a named speaker, use `:caption` and don't provide\na number. For double spacing, use `:caption_dsp`/`:cap`.\n\n```json\n\"EUFPLT\": \"{:caption}\"\n```\n\n### Inline Speaker Names\n\nTo write a speaker's name inline, use the `:spkr_inline` meta with a speaker\nnumber:\n\n```json\n\"EUFPLT\": \"{:spkr_inline:3}\"\n```\n\n## Speaker Management\n\nBefore editing speaker names, you'll need to define some dictionary entries.\n\nFirst, define an entry in your personal dictionary using\n`:speaker_id_set`/`:spkrid_set` for setting the name for that specific speaker\nnumber. I like to use `SKPREUD` (\"skpr-id\") followed by the speaker's outline:\n\n```json\n\"SKPREUD/STPHAO\": \"{:spkrid_set:1}\"\n\"SKPREUD/SKWRAO\": \"{:spkrid_set:2}\"\n```\n\nAnd also have a single outline for ending a speaker definition, using\n`:speaker_id_end`/`:spkrid_end`. I like to use `SKPREUDZ` (\"skpr-idz\").\n\n```json\n\"SKPREUDZ\": \"{:spkrid_end}\"\n```\n\nTo define a speaker name, write your outline for setting the name. You should\nget a prompt that mentions the speaker ID and current name:\n\n```\n+------------------------+\n|                        |\n| S KP  R   EU        D  |\n| S K W RAO              | [Speaker 2 (Ms. Skwrao) =>]\n|                        |\n```\n\nThen, write the new name:\n\n```\n|                        |\n|    P H               Z | Ms.\n|   K  H A      PB       | Chan\n|                        |\n```\n\nLastly, write the outline to end. This deletes the prompt and the name, and\nnow the name is ready to use.\n\n```\n|                        |\n| S KP  R   EU        DZ |\n|                        |\n+------------------------+\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sammdot/plover-speaker-id",
    "keywords": "plover plover_plugin",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "plover-speaker-id",
    "package_url": "https://pypi.org/project/plover-speaker-id/",
    "platform": null,
    "project_url": "https://pypi.org/project/plover-speaker-id/",
    "project_urls": {
      "Homepage": "https://github.com/sammdot/plover-speaker-id"
    },
    "release_url": "https://pypi.org/project/plover-speaker-id/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Plover plugin for Q&A, speaker designations, and bylines",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14007925,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2a1677b1dbb918a086e59621badea98526aac1bb9903b4f11090c42fa9df864d",
          "md5": "60ed5980a5286a152a88bbcecab7cdd6",
          "sha256": "f677f8c4cd4fb24a72d29fe3b6aa5d74e10deda3d58a713e252213b72421fe03"
        },
        "downloads": -1,
        "filename": "plover-speaker-id-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "60ed5980a5286a152a88bbcecab7cdd6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4747,
        "upload_time": "2022-06-02T03:35:55",
        "upload_time_iso_8601": "2022-06-02T03:35:55.110881Z",
        "url": "https://files.pythonhosted.org/packages/2a/16/77b1dbb918a086e59621badea98526aac1bb9903b4f11090c42fa9df864d/plover-speaker-id-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2a1677b1dbb918a086e59621badea98526aac1bb9903b4f11090c42fa9df864d",
        "md5": "60ed5980a5286a152a88bbcecab7cdd6",
        "sha256": "f677f8c4cd4fb24a72d29fe3b6aa5d74e10deda3d58a713e252213b72421fe03"
      },
      "downloads": -1,
      "filename": "plover-speaker-id-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "60ed5980a5286a152a88bbcecab7cdd6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4747,
      "upload_time": "2022-06-02T03:35:55",
      "upload_time_iso_8601": "2022-06-02T03:35:55.110881Z",
      "url": "https://files.pythonhosted.org/packages/2a/16/77b1dbb918a086e59621badea98526aac1bb9903b4f11090c42fa9df864d/plover-speaker-id-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}