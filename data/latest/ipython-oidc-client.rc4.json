{
  "info": {
    "author": "Jorge C. Leitao",
    "author_email": "jorgecarleitao@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License"
    ],
    "description": "# OAuth2 on Jupyter Notebook\n\nA Jupyter extension to perform OAuth2 flows (e.g. token, code) in notebooks.\n\n## Rational\n\nA major challenge in using APIs from notebooks is to form a trust relationship between the client (notebook)\nand the API.\n\nThis problem is often solved by trusting the *host* of the kernel. The typical approach here is the managed identity pattern through a metadata service, that all major cloud providers offer. A major disadvantage of this pattern is that any user that can access the execution engine (the kernel through a notebook), can also access whatever API that host has access to. I.e. it does not allow discrimatory access to APIs as it does not separate \"access to notebooks\" from \"access to APIs\". This generally leads to host-based access architectures with one host per set of access policies. An aditional limitation of this pattern is that it incentivizes vendor lock-in, as it implies that the service needs to run on the vendor's infrastructure.\n\nAnother pattern to solve this problem is to use a service principal (OAuth2) to access the API through a client secret. This unfortunatelly suffers from the same problems as the managed identity: it leads to indiscrimatory access to the API by anyone with access to the execution engine. This pattern has another risk: in the context of a notebook, it is easy to programatically obtain the client secret, which gives an attacker indiscrimatory access to the API from *any host* in a zero trust network.\n\n### This package\n\nThis package allows users to perform OAuth2 flows (e.g. token, code) in notebooks, thus considering a notebook, and consequently the kernel, as a client application with limited trust. This allows kernels to run on infrastructure without a metadata service, while at the same time maintaining high security standards.\n\n## How to install\n\n```\npip install ipython-oidc-client\n\njupyter nbextension install --py ipython_oidc_client\njupyter nbextension enable --py ipython_oidc_client\njupyter serverextension enable --py ipython_oidc_client\n```\n\nOn your identity provider (e.g. Azure, Google, Auth0), add a reply url to the path `/redirect.html`,\ne.g. `https://example.com/redirect.hml`.\n\n## How to use\n\nOpen a new notebook and run\n\n```\nfrom ipython_oidc_client import authenticate\n\n\naccess_configuration = {\n    'authority': 'https://.../.well-known/openid-configuration',\n    'client_id': '...',\n    'response_type': '...',\n    'scope': '...',\n}\n# valid variables available here: https://github.com/IdentityModel/oidc-client-js/wiki#usermanager\n\ntoken = {}\nauthenticate(access_configuration, token)  # this changes token (see note in README.md)\n```\n\nAt this point, you will be redirected to the authentication page of the identity provider declared\nin `authority`. Once authenticated (e.g. through MFA), you will be redirected back to the notebook.\n\nOnce back in the notebook, re-run the cell above, and `token['access_token']` becomes the access token returned by the authority. Re-running the first cell does not trigger a new authentication; in fact, running that cell on any notebook on the same jupyterhub will yield the same access token.\n\nAt this point, you can run e.g.\n\n```\nimport requests\nr = requests.get('https://api....', headers={'Authorization': f'Bearer {token[\"access_token\"]}'})\n```\n\nOnce the token expires (typically after 1 hour), re-run the cell above to get a new token.\n\nThis procedure can be repeated for access tokens to multiple APIs within the same notebook.\n\n### Why not returning the token?\n\nDue to a [limitation in Jupyter](https://github.com/jupyter/notebook/issues/3187),\nthe access token only becomes available to the kernel after the execution of the *whole* cell.\nAs such, we can't return the token from `authenticate` and instead have to assign it to a variable of global\nscope. This may change in the future.\n\n## Example\n\n[Dockerfile](./Dockerfile) contains a complete installation of the package from pypi on a server,\ndemonstrating how an administrator can install this extension system-wide. Run it with\n\n```bash\ndocker build -t t . && docker run -p 8888:8888 --rm -it t\n```\n\nand add `http://localhost:8888/redirect.html` as a reply url to an application in your identity provider.\n\nAfter start, copy the snipped above to a cell and run it.\n\n## Security\n\nThis package has to deal with two execution environments:\n\n* javascript, on the browser\n* Python, on the kernel \n\nOn the browser, it uses [oidc-client-js](https://github.com/IdentityModel/oidc-client-js) to perform\nthe oauth2 flows. In Python, it uses this package's source code, which performs a redirect and communicates with the browser.\n\nThe flow after running the example above is:\n\n1. The client code is loaded when the kernel starts, loading external client dependencies (see below)\n2. The cell is ran, which stores the current path on a cookie and triggers a javascript redirect to the identity provider\n3. the identity provider redirects to `/redirect.html` after sucessful authentication\n4. the callback client code stores the token and redirects the user to the path in a cookie\n\nThis package does not deliver js dependencies; the client needs access to \n\n* https://cdnjs.cloudflare.com/ajax/libs/oidc-client/1.10.0/oidc-client.min.js\n* https://unpkg.com/universal-cookie@3/umd/universalCookie.min.js\n\nthis may change in the future.\n\n### Kernel - Browser trust\n\nThis package assumes that the kernel is less trustworthy than the browser. This is because, by design, in a notebook environment, it is easy to\n\n* print a variable on an output cell of a notebook and \n* share the notebook with someone\n\nThese induce a risk of inadvertedly sharing tokens, in particular refresh tokens. To reduce this risk, the browser only shares access tokens with the kernel, which are extrictly necessary to communicate with an API.\n\nAnother advantage of this pattern is that an attack on the kernel server requires significantly more effort to grant access to an API: a user needs to have printed its access token to a notebook and the attacker\nneeds to access that notebook (privileged access) within the expiration date of the token (within 1 hour).This is in opposition to the metadata service, which is available to any process running on the host (see [AWS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html) and [Azure](https://docs.microsoft.com/en-us/azure/virtual-machines/windows/instance-metadata-service#security)).\n\n### Browser trust\n\nThe pattern used by this library has the same risks of a single page application, including secret exfiltration from the browser. This implies that auditing is required for any client-side code that jupyter delivers to end users, as to not exfiltrate tokens from the client.\n\n## How to develop\n\nThis package has 4 components:\n\n* [js client running on the browser](ipyoauth_oidc_client/client)\n* [Python extension running on the server](ipyoauth_oidc_client/server)\n* [Python API to authenticate on a notebook](ipyoauth_oidc_client/__init__.py)\n* [html/js callback page to process the response from the IP](ipyoauth_oidc_client/server/static/redirect.html)\n\nThe easiest way to develop this package is to run\n\n```bash\ndocker build -f Dockerfile.dev -t t . && docker run -p 8888:8888 -v $(pwd):/project --rm -it t\n```\n\nand open the browser at http://localhost:8888/?token= (note, *not* 127.0.0.1). Afterwards, add \n`http://localhost:8888/redirect.html` as a reply url in your identity provider.\n\nThis runs a Python-based image with Jupyter and the package installed in a way that\nchanging the js only requires refreshing the page. Changing the Python code requires re-running the image.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jorgecarleitao/ipython-oidc-client",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ipython_oidc_client",
    "package_url": "https://pypi.org/project/ipython_oidc_client/",
    "platform": "",
    "project_url": "https://pypi.org/project/ipython_oidc_client/",
    "project_urls": {
      "Homepage": "https://github.com/jorgecarleitao/ipython-oidc-client"
    },
    "release_url": "https://pypi.org/project/ipython_oidc_client/0.1.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A Jupyter extension to perform OAuth2 flows (e.g. token, code) in notebooks.",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7877871,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1af42a360d7297bf1d6d6ce726979b00d7cd4aaacadfb5044fbbf8e371de1f05",
          "md5": "1ef52e45d7701e9c495b9a28fe7bf5ad",
          "sha256": "0a680a771c20b7fa1707040798eebed2cba3c19495b2c273bb8e2b3bd8987f59"
        },
        "downloads": -1,
        "filename": "ipython_oidc_client-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1ef52e45d7701e9c495b9a28fe7bf5ad",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 4407,
        "upload_time": "2020-06-30T08:43:02",
        "upload_time_iso_8601": "2020-06-30T08:43:02.142909Z",
        "url": "https://files.pythonhosted.org/packages/1a/f4/2a360d7297bf1d6d6ce726979b00d7cd4aaacadfb5044fbbf8e371de1f05/ipython_oidc_client-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "012c16e99d8ce39aaf3b5cc6b58e7839632002cb6b48f5668b88eb83966ffe1b",
          "md5": "cd1510df6d2e3546c8493bac731ab0b1",
          "sha256": "3e24c8d7adf6558db92f528a2d5ed8bf64a7183426e05661292a93e8b1f0f6f8"
        },
        "downloads": -1,
        "filename": "ipython_oidc_client-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "cd1510df6d2e3546c8493bac731ab0b1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6385,
        "upload_time": "2020-06-30T08:43:18",
        "upload_time_iso_8601": "2020-06-30T08:43:18.997052Z",
        "url": "https://files.pythonhosted.org/packages/01/2c/16e99d8ce39aaf3b5cc6b58e7839632002cb6b48f5668b88eb83966ffe1b/ipython_oidc_client-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "22e07f515b40b2a3aebb14b3454f0294a7548bd11e99476b32bb7cb8bb6babd9",
          "md5": "2675ccd2cace15681bcfc1912ffca5a0",
          "sha256": "320c52b5bc87e6d576d91fc7015959511b0dfdd6cf6ae01e301b02b25eabf78b"
        },
        "downloads": -1,
        "filename": "ipython_oidc_client-0.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2675ccd2cace15681bcfc1912ffca5a0",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 7188,
        "upload_time": "2020-06-30T10:15:44",
        "upload_time_iso_8601": "2020-06-30T10:15:44.356103Z",
        "url": "https://files.pythonhosted.org/packages/22/e0/7f515b40b2a3aebb14b3454f0294a7548bd11e99476b32bb7cb8bb6babd9/ipython_oidc_client-0.1.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eaa78f31ddf0e191e750c4ffabf5dffc8ed196c2d0b7203827bdfda2af7ee040",
          "md5": "129301216c8a51c93c4469bfe3042d6c",
          "sha256": "37ab3c6ea76b13484ffcf8f8dd922d1fc72578b0f8118c018dfc8a289211b390"
        },
        "downloads": -1,
        "filename": "ipython_oidc_client-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "129301216c8a51c93c4469bfe3042d6c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6260,
        "upload_time": "2020-06-30T10:15:46",
        "upload_time_iso_8601": "2020-06-30T10:15:46.401383Z",
        "url": "https://files.pythonhosted.org/packages/ea/a7/8f31ddf0e191e750c4ffabf5dffc8ed196c2d0b7203827bdfda2af7ee040/ipython_oidc_client-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "67251db6b3839367855dd6fd7baa701ed54f1bc6255e9ad7352c4b6a508cd5b1",
          "md5": "2a355423df3841fdc5a9ed43484ce2b6",
          "sha256": "1861f715aae32930a9b621b9153a0aa76135aa3bbc310da0ca64ae6c0e40ca5d"
        },
        "downloads": -1,
        "filename": "ipython_oidc_client-0.1.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2a355423df3841fdc5a9ed43484ce2b6",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 7581,
        "upload_time": "2020-06-30T14:21:41",
        "upload_time_iso_8601": "2020-06-30T14:21:41.643385Z",
        "url": "https://files.pythonhosted.org/packages/67/25/1db6b3839367855dd6fd7baa701ed54f1bc6255e9ad7352c4b6a508cd5b1/ipython_oidc_client-0.1.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b0a83f0ae4174c2988d00323e4e1ffe7d5e5522f5306f28003deb5489499843d",
          "md5": "f9d99bd89c49996a6fbd847c0659c65b",
          "sha256": "4c9c6fb4476478879e75c9e2dc9e7525aae35e2a677d85e8c62081f4b5e789df"
        },
        "downloads": -1,
        "filename": "ipython_oidc_client-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f9d99bd89c49996a6fbd847c0659c65b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6646,
        "upload_time": "2020-06-30T14:21:43",
        "upload_time_iso_8601": "2020-06-30T14:21:43.816575Z",
        "url": "https://files.pythonhosted.org/packages/b0/a8/3f0ae4174c2988d00323e4e1ffe7d5e5522f5306f28003deb5489499843d/ipython_oidc_client-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6b4cfb5d38e15770dd230b63574f3a6a1b44566fc850f50b82fa724104876824",
          "md5": "7bf67a1d9848c22e8d149f1229c4fe7f",
          "sha256": "a951e53325b567e8d01b03927b6615b8f96bf4a1bc1e46ef35d49c10d57bc97a"
        },
        "downloads": -1,
        "filename": "ipython_oidc_client-0.1.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7bf67a1d9848c22e8d149f1229c4fe7f",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 7749,
        "upload_time": "2020-08-04T05:39:50",
        "upload_time_iso_8601": "2020-08-04T05:39:50.970877Z",
        "url": "https://files.pythonhosted.org/packages/6b/4c/fb5d38e15770dd230b63574f3a6a1b44566fc850f50b82fa724104876824/ipython_oidc_client-0.1.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5d21561908d87b06f7fc2bfdc4f7ef539f5ff5bf04e65c562db93182ae92fe59",
          "md5": "770631b59dc8a72ee3a71f023931af1d",
          "sha256": "757193f4c00ddef5857b30f1d9906731e384e705358f6477f0472a50788f674f"
        },
        "downloads": -1,
        "filename": "ipython_oidc_client-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "770631b59dc8a72ee3a71f023931af1d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6751,
        "upload_time": "2020-08-04T05:39:58",
        "upload_time_iso_8601": "2020-08-04T05:39:58.542797Z",
        "url": "https://files.pythonhosted.org/packages/5d/21/561908d87b06f7fc2bfdc4f7ef539f5ff5bf04e65c562db93182ae92fe59/ipython_oidc_client-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6b4cfb5d38e15770dd230b63574f3a6a1b44566fc850f50b82fa724104876824",
        "md5": "7bf67a1d9848c22e8d149f1229c4fe7f",
        "sha256": "a951e53325b567e8d01b03927b6615b8f96bf4a1bc1e46ef35d49c10d57bc97a"
      },
      "downloads": -1,
      "filename": "ipython_oidc_client-0.1.3-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7bf67a1d9848c22e8d149f1229c4fe7f",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 7749,
      "upload_time": "2020-08-04T05:39:50",
      "upload_time_iso_8601": "2020-08-04T05:39:50.970877Z",
      "url": "https://files.pythonhosted.org/packages/6b/4c/fb5d38e15770dd230b63574f3a6a1b44566fc850f50b82fa724104876824/ipython_oidc_client-0.1.3-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5d21561908d87b06f7fc2bfdc4f7ef539f5ff5bf04e65c562db93182ae92fe59",
        "md5": "770631b59dc8a72ee3a71f023931af1d",
        "sha256": "757193f4c00ddef5857b30f1d9906731e384e705358f6477f0472a50788f674f"
      },
      "downloads": -1,
      "filename": "ipython_oidc_client-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "770631b59dc8a72ee3a71f023931af1d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6751,
      "upload_time": "2020-08-04T05:39:58",
      "upload_time_iso_8601": "2020-08-04T05:39:58.542797Z",
      "url": "https://files.pythonhosted.org/packages/5d/21/561908d87b06f7fc2bfdc4f7ef539f5ff5bf04e65c562db93182ae92fe59/ipython_oidc_client-0.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}