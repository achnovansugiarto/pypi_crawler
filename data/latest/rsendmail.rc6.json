{
  "info": {
    "author": "Antoine BeauprÃ©",
    "author_email": "anarcat@debian.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
      "Natural Language :: English",
      "Operating System :: POSIX",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "Restricted sendmail command\n===========================\n\nA safer sendmail command to send email without passwords, over SSH.\n\nObjective\n---------\n\nThis command aims at replacing the builtin `sendmail` command which\ngives too much privileges to the caller. For example, [Postfix](http://www.postfix.org/)'s\n[sendmail(1)](http://www.postfix.org/sendmail.1.html) command can list the mail queue (`-bp`), rehash the\nalias database (`-bi`), start a daemon (`-bl`, `-bd`), or flush the\nqueue (`-q`); all remnants of the old [Sendmail](https://en.wikipedia.org/wiki/Sendmail) binary, which\nprobably is Turing-complete on its own.\n\nInstead, rsendmail can easily queue mails on a system without giving\nany extra privileges to the client. In turn, this makes configuring a\nsatellite system like a laptop or a workstation as simple as adding an\nSSH key to an `authorized_keys` file. That key can then send email,\nbut *only* send email: no shell access or server management.\n\nThis can of course be accomplished by a regular SMTP client, but that\nrequires passwords, and passwords are weak.\n\nQuickstart\n----------\n\n    scp rsendmail.py example.net:/usr/local/bin/rsendmail\n\nWherever you would call `sendmail`, you can now call this instead:\n\n    ssh example.net rsendmail\n\nSee below for instructions on how to add a queue for when you're\noffline, restrict the connection to rsendmail, or integrate with\nexisting MTAs.\n\nInstallation\n------------\n\nThis system is made of two parts:\n\n * `rsendmail.py` - a wrapper script installed on a remote SSH server\n   that restricts the connection to only accepting and relaying mail\n\n * `sshsendmail.py` - a local [MDA][] that acts as a compatibility shim\n   with the remote rsendmail. this part is optional, as you'll see\n   below.\n\n [MDA]: https://en.wikipedia.org/wiki/Mail_delivery_agent\n\n### Basic configuration\n\nThe following assumes your relay host is `example.net` and is already\nconfigured to accept SSH connections on a user called `rsendmail`. It\nalso assumes there's an email `devnull@localhost` that accepts\ndelivery.\n\n 1. find the `$PATH` on the remote host:\n\n        ssh rsendmail@example.net 'echo $PATH'\n\n 2. install `rsendmail.py` somewhere in your `$PATH` as `rsendmail`:\n\n        scp rsendmail.py rsendmail@example.net:/usr/local/bin/rsendmail\n\n 3. generate an SSH key for rsendmail:\n\n        ssh-keygen -t ed25519 -f ~/.ssh/id_ed25519_rsendmail\n\n 4. copy the key to your `authorized_keys` file:\n\n        ( printf 'command=\"rsendmail\",restrict '; cat ~/.ssh/id_ed25519_rsendmail.pub ) | ssh rsendmail@example.net 'cat >> .ssh/authorized_keys'\n\n 5. send a test email:\n\n        printf \"Subject: test\\n\\nThis is a test\" | ssh -i ~/.ssh/id_ed25519_rsendmail  rsendmail@example.net rsendmail devnull@localhost\n\n 6. verify the mail was properly delivered and the message content is\n    complete. if so, then `rsendmail` is properly configured\n\nNow you can send email, but there are some bits missing. Most tools\nwill expect a `sendmail` command to be available and you might want to\nqueue up mails locally to avoid failing when the network is not\navailable. So you need some sort of wrapper, a [MDA][] to actually\ndeliver the mail in a standard way. Queuing will be handled by a\n[MTA][] that will call the MDA.\n\n [MTA]: https://en.wikipedia.org/wiki/Message_transfer_agent\n\nMDA configuration\n-----------------\n\nSo the next step is to setup a local MDA to talk with\n`rsendmail`. Here's a quick comparison of the possible configurations\ndocumented below:\n\n| MDA        | Advantages | Disadvantages |\n| ---------- | ---------- | ------------- |\n| Standalone | Simplest   | Single user, no queue |\n| Nullmailer | Minimalist | Unusual standard, reliability concerns |\n| Postfix    | Well-known | Queue expires |\n\nIntegration with other MTAs are quite possible as well and\ndocumentation to accomplish that is welcome.\n\n### Standalone\n\nThe simplest configuration is to use a simple wrapper script for an\nMDA, without any other MTA. For example, here is the content of a\npossible `sendmail` command:\n\n    #!/bin/sh -e\n\n    exec ssh -i /var/mail/.ssh/id_ed25519 rsendmail@example.net rsendmail \"$@\"\n\nThe above assumes the private key is stored in the `~mail` home\ndirectory. The private key needs to be readable by all callers of the\ncommand, which might be a security issue for multi-user systems. This\nalso assumes a `rsendmail` user was created on the remote system.\n\n### Nullmailer compatibility\n\n[Nullmailer][] is a \"simple relay-only mail transport agent\" which\nsome people use to queue up mails locally when the network is\nunavailable. We can't use a simple wrapper like the above because\nnullmailer has a non-standard way of passing recipients to MDA. This\nis where the `sshsendmail.py` wrapper comes in.\n\n[Nullmailer]: https://untroubled.org/nullmailer/\n\n 1. generate an SSH key for the `mail` user:\n\n        sudo -u mail ssh-keygen -t ed25519\n\n 2. make sure the remote server identity is verified:\n\n        sudo -u mail ssh rsendmail@example.net true\n\n 3. install the `nullmailer` package, version at least 2.0:\n\n        apt install -t buster nullmailer\n\n 4. deploy the MDA wrapper:\n\n        install sshsendmail.py /usr/lib/nullmailer/sshsendmail\n\n 5. add it as a remote in `/etc/nullmailer/remotes`:\n\n        example.net sshsendmail --mta=nullmailer --identity=/var/mail/.ssh/id_ed25519 --user=rsendmail\n\nAgain, adapt the `example.net` host and `rsendmail` user to your\nconfiguration.\n\nI have found the wire protocol used by nullmailer to be rather\nunusual. It seems to be completely non-standard which was annoying to\ndeal with. Worse, the above instructions will only work with\nNullmailer 2.x - previous versions had a different protocol which is\nnot supported here. Furthermore, I have concerns over the reliability\nof the software: during tests, nullmailer segfaulted while failing to\nhandle a bug in `rsendmail`...\n\n### Postfix compatibility\n\nPostfix can talk to a remote `rsendmail` server easily through the\n[pipe](http://www.postfix.org/pipe.8.html) service. Here are the steps to configure a Postfix client,\nonce `rsendmail` is installed on a server and the `authorized_keys` is\nsetup:\n\n 1. Install Postfix\n\n         apt-get install postfix\n\n 2. configure it as a `satellite` system and use the recommended\n    hostname. as a `relayhost`, use the hostname (and username!)\n    of the SSH server, e.g. `rsendmail@example.net`, in other words:\n\n        postconf -e 'relayhost=rsendmail@example.net'\n\n 3. configure the `pipe` service in `/etc/postfix/master.cf`:\n\n        rsendmail unix  -       n       n       -       -       pipe\n           user=mail argv=ssh ${nexthop} rsendmail -f ${sender} ${recipient}\n\n 4. configure that transport as the default relay:\n\n        postconf -e 'default_transport=rsendmail:'\n\n 5. Make sure the `mail` user can login to the relay server\n    automatically and send mail:\n\n        sudo -u mail ssh rsendmail@example.net rsendmail devnull@localhost < /dev/null\n\n 6. The above will ask for host verification. Once that works, reload\n    Postfix, which should start relaying mail through the other\n    server:\n\n        postfix reload\n\nNote that the above configuration will bounce messages if SSH cannot\nreach the remote server. That is because SSH returns non-standard (as\nper `sysexits.h`) error codes (i.e. `255` on failure) which Postfix\ncannot directly parse. To handle this correctly, the `sshsendmail.py`\nwrapper can be installed instead, again in `master.cf`:\n\n    rsendmail unix  -       n       n       -       -       pipe\n      user=mail argv=/usr/local/bin/sshsendmail --host ${nexthop} -f ${sender} ${recipient}\n\nExample:\n\n    avr 23 20:38:06 curie postfix/pickup[28657]: 61947125AA4: uid=0 from=<root>\n    avr 23 20:38:06 curie postfix/cleanup[28716]: 61947125AA4: message-id=<20180424003806.61947125AA4@curie.example.net>\n    avr 23 20:38:06 curie postfix/qmgr[28658]: 61947125AA4: from=<root@curie.example.net>, size=386, nrcpt=1 (queue active)\n    avr 23 20:38:06 curie postfix/pipe[28718]: 61947125AA4: to=<anarcat@example.net>, relay=rsendmail, delay=0.49, delays=0.03/0/0/0.46, dsn=2.0.0, status=sent (delivered via rsendmail service (sending message through command: ['sendmail', '-f',\n    avr 23 20:38:06 curie postfix/qmgr[28658]: 61947125AA4: removed\n\nNote that Postfix bounces emails from the queue after 5 days. If you\nstay offline longer than that period, you might want to tweak the\n[`maximal_queue_lifetime`](http://www.postfix.org/postconf.5.html#maximal_queue_lifetime) setting to something larger:\n\n    postconf -e maximal_queue_lifetime=30d\n    postfix reload\n\nImplementation details\n----------------------\n\nWe drastically restrict the number of options accepted from\n`sendmail`. Only those options are considered valid:\n\n * `<recipient> [ <recipient> [ ... ] ]` - email addresses to send the\n   email to. those cannot start with a dash and must not contain\n   spaces. each email must be passed as its own separate argument to\n   rsendmail\n * `-t`: deduce recipients from the `To` or `Cc` email headers. This\n   is passed directly to the underlying sendmail command, no parsing\n   is done by rsendmail directly. This assumes there is no\n   vulnerability in the `-t` option on the other side.\n * `-f <sender>`: Set  the  envelope sender address. This is the\n   address where delivery problems are sent to.\n * `-oi`: Do not treat `.` on its own line specially.\n\nThe following options are deliberately ignored, even though they might\neventually be implemented:\n\n * `-R <return>` and `-N <dsn>`: we do not really care about\n   status. just accept the default from the remote server.\n * `-r <sender>`: same as `-f`\n * `-v`: might be useful in the future, but keeping it simple for now\n\nAll other options will cause an error or might be ignored in the\nfuture for backwards compatibility purposes, but should never have an\neffect. Unless otherwise noted, `sendmail` arguments in this document\nrefer to the Postfix [sendmail(1)](http://www.postfix.org/sendmail.1.html) manual page.\n\nThe `mail` logging facility is used to send messages to syslog.\n\nPitfalls and caveats\n--------------------\n\n * `sshd` makes some noises about `no-pty` and `command=` regarding\n   8-bit clean channels. we assume an 8-bit clean channel, so make\n   sure the `authorized_keys` file has a `no-pty` setting. best is to\n   use the `restrict` argument, but that is available only starting\n   from OpenSSH 7.2\n * creating a dedicated user might be more appropriate than reusing a\n   privileged account.\n * Emacs' `sendmail-send-it` function will fail if there is *any*\n   output from the sendmail command, if `mail-interactive` is enabled\n   (the default). This means changing the log level to anything more\n   verbose than `WARNING` will cause Emacs to think there is a failure\n   even if the email is actually sent. This will mean `Fcc` will fail\n   as well and multiple emails be sent if the user doesn't realize the\n   problem.\n * Armstrong's script uses a (MD5) checksum to ensure the message's\n   integrity. This was introduced in [this commit](https://git.donarmstrong.com/?p=bin.git;a=commitdiff;h=0c9b112effdd642db560859dbae5fb77d1bfea56) as a way to\n   \"avoid having a dropped connection send a truncated file\". We do\n   not know if rsendmail suffers from this bug.\n\nPrior art\n---------\n\n * [LMTP](https://en.wikipedia.org/wiki/Local_Mail_Transfer_Protocol) somewhat does what we want here, but there's not a real\nclient that we can run on the other side, so it's not really useful.\n\n * [msmtp](http://msmtp.sourceforge.net/) is pretty close to what we need, but only talks SMTP, which\nmeans storing secrets on the client. We *could* try to pipe an SMTP\nsocket through the SSH connection, but that feels rather messier and\nless general-purpose-y. It also does not have a local queue.\n\n * [nullmailer](https://packages.debian.org/sid/nullmailer) is *almost* what we need, but still talks SMTP.\n\n * [dma](https://github.com/corecode/dma) (DragonFly Mail Agent) is similar and does weird things like\nmodifying the message in flight (e.g. removing `Bcc`).\n\n * [esmtp](http://esmtp.sourceforge.net/) is more of the above and \"no longer being maintained\"\n(accessed on 2018-04-21)\n\n * [ssmtp](https://tracker.debian.org/pkg/ssmtp) is similar to msmtp except it has no active upstream out of\nDebian.\n\n * [masqmail](http://marmaro.de/prog/masqmail/) is yet more of the above, except it seems to have its\nown alias database and other complicated stuff.\n\n * [UUCP](https://en.wikipedia.org/wiki/UUCP) (Unix-to-Unix CoPy) is designed with this in mind and\nsendmail ships a [rmail](https://manpages.debian.org/stretch/rmail/rmail.8.en.html) command that reads emails from UUCP\nclients, but those have their own idiosyncrasies. Still, it should be\npossible to configure UUCP clients to send email through an SSH\nconnexion, but that seems needlessly complicated.\n\n * [NNCP](http://www.nncpgo.org/) (Node to Node copy) \"is a collection of utilities\nsimplifying secure store-and-forward files and mail exchanging.\" It's\ninteresting in theory, but it practice it does much more than what we\nactually need here. But if I were to redo this, I would probably use\nit instead of my setup, because it's fairly easy to integrate into\nPostfix *and* it is more resilient than SSH (e.g. email over Ham radio\nanyone?)\n\n * [Don Armstrong](https://donarmstrong.com/) wrote a [nullmailer](https://untroubled.org/nullmailer/) remote called\n[sshsendmail](https://git.donarmstrong.com/?p=bin.git;a=blob_plain;f=sshsendmail) which basically does what we want, but it injects a\nnullmailer shim through the SSH connection as a `perl -e`\nexecutable. This makes it difficult to restrict the SSH\nconnection. [David Bremner](https://www.cs.unb.ca/~bremner/) repackaged an earlier version of this as\n[nullmailer-ssh](https://salsa.debian.org/bremner/nullmailer-ssh) which at least does not use `perl -e` but still\nhas a nullmailer-specific dialect in the `rsendmail` command.\n\n * Some IMAP servers have support for an `Outbox` folder that will send\nan email that is dropped on that folder through a configured mail\nserver. Only the [Courier MTA](https://www.courier-mta.org/) seems to have that functionality\n(called [IMAP send](https://www.courier-mta.org/imap/INSTALL.html#imapsend)) and I have stopped using that server a while\nago. My server of choice ([Dovecot](https://www.dovecot.org/)) [debated the feature in\n2006](https://www.dovecot.org/list/dovecot/2006-November/017285.html) but it was never implemented.\n\nFuture work\n-----------\n\nThis could be made in a Debian package or two: one would be\n`rsendmail` for the server side and `sshsendmail` for the client side,\nand maybe plugin packages for the various integration mechanisms. I'm\ntoo lazy for this now.\n\nPiping stuff through SSH makes it difficult to distinguish between\ntemporary failures (e.g. DNS or TCP fails) and configuration errors\n(SSH key mismatch). I'm not even sure what should bounce, so I have\navoided that issue altogether by treating all SSH failures as\ntemporary, but it might be relevant to re-implement this using\n[Paramiko](http://www.paramiko.org/) or some other library in the future.\n\nCredits\n-------\n\nOn top of the above \"prior art\", I stand on Bremner and Armstrong's\nshoulders as they provided the basic idea for this program.\n\nThis software was written by Antoine BeauprÃ© in 2018 and is released\nunder the Affero GPLv3.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/anarcat/rsendmail",
    "keywords": "",
    "license": "AGPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "rsendmail",
    "package_url": "https://pypi.org/project/rsendmail/",
    "platform": null,
    "project_url": "https://pypi.org/project/rsendmail/",
    "project_urls": {
      "Homepage": "https://gitlab.com/anarcat/rsendmail"
    },
    "release_url": "https://pypi.org/project/rsendmail/1.1.4/",
    "requires_dist": [
      "pytest ; extra == 'test'",
      "pytest-cov ; extra == 'test'"
    ],
    "requires_python": "",
    "summary": "email delivery over SSH and restricted sendmail",
    "version": "1.1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16671476,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5110c8cce581d4f97f1d58a3e50ac5b90bcbc544e361b9f8c90aa69b89016ea2",
          "md5": "65caba0b010830a50a0f5c06e7042de8",
          "sha256": "bb173ca8de620bae712cc693e3492cb459ab09c3087bf9c37febd5ad6a71e814"
        },
        "downloads": -1,
        "filename": "rsendmail-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "65caba0b010830a50a0f5c06e7042de8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5110,
        "upload_time": "2018-04-24T16:30:35",
        "upload_time_iso_8601": "2018-04-24T16:30:35.348042Z",
        "url": "https://files.pythonhosted.org/packages/51/10/c8cce581d4f97f1d58a3e50ac5b90bcbc544e361b9f8c90aa69b89016ea2/rsendmail-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "289ef8201a08abdb687de5505e8a92322bfb572b0d0b38a3569481b1fe136042",
          "md5": "2be3c85ac546e0d736da725da87935a1",
          "sha256": "25ed754e956301c30a99290cbe069464203ac5e35af95cc0bbfc527f84eb56d0"
        },
        "downloads": -1,
        "filename": "rsendmail-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2be3c85ac546e0d736da725da87935a1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5112,
        "upload_time": "2018-05-07T14:29:35",
        "upload_time_iso_8601": "2018-05-07T14:29:35.007937Z",
        "url": "https://files.pythonhosted.org/packages/28/9e/f8201a08abdb687de5505e8a92322bfb572b0d0b38a3569481b1fe136042/rsendmail-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6267f1a57ad7358b51693097678ce9dc2336d6fb50eb0979a91a0b7745c0bbcf",
          "md5": "cae03c46bc828b0a29ffa7e0d6bfa0a8",
          "sha256": "eeb958037a9a6f11f95e2e9706879981da2173b6c5ac3d1154297290f79614ba"
        },
        "downloads": -1,
        "filename": "rsendmail-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cae03c46bc828b0a29ffa7e0d6bfa0a8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 32514,
        "upload_time": "2020-07-08T15:06:49",
        "upload_time_iso_8601": "2020-07-08T15:06:49.181705Z",
        "url": "https://files.pythonhosted.org/packages/62/67/f1a57ad7358b51693097678ce9dc2336d6fb50eb0979a91a0b7745c0bbcf/rsendmail-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a0efee91a3d5f85d3a1858574ba6003df118eec477095891fe1fcf62a7c2d630",
          "md5": "7e8b4a843dc005958f06d229b8a95b15",
          "sha256": "526c365db85817c72914167e3c7b11a183c136e71f9ea5a3ef81d9908e043bfe"
        },
        "downloads": -1,
        "filename": "rsendmail-1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7e8b4a843dc005958f06d229b8a95b15",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 26826,
        "upload_time": "2020-07-08T15:18:54",
        "upload_time_iso_8601": "2020-07-08T15:18:54.018411Z",
        "url": "https://files.pythonhosted.org/packages/a0/ef/ee91a3d5f85d3a1858574ba6003df118eec477095891fe1fcf62a7c2d630/rsendmail-1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a219e5a189a7923c64a7aec080eee6b3bc1d07e7aa06bdcbab74817108f6437a",
          "md5": "2a819b17ced9614c714aeff7450ca020",
          "sha256": "48d82120383d433ce788b43b6218cbd833496d7faa9e4a2f2350c71976c935b8"
        },
        "downloads": -1,
        "filename": "rsendmail-1.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2a819b17ced9614c714aeff7450ca020",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 26942,
        "upload_time": "2023-01-26T21:47:51",
        "upload_time_iso_8601": "2023-01-26T21:47:51.213199Z",
        "url": "https://files.pythonhosted.org/packages/a2/19/e5a189a7923c64a7aec080eee6b3bc1d07e7aa06bdcbab74817108f6437a/rsendmail-1.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fd4b82e1305e91fd711dab149fdb9ebfc1a66e96bc1046334896b16bf3b9c642",
          "md5": "1ca44e6646fa59e571189ef13ac6c50c",
          "sha256": "15543b5b17e6f588b6b3e98793c48f612692603be23555137d8c7023bd5b142c"
        },
        "downloads": -1,
        "filename": "rsendmail-1.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1ca44e6646fa59e571189ef13ac6c50c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 26931,
        "upload_time": "2023-02-02T21:38:32",
        "upload_time_iso_8601": "2023-02-02T21:38:32.922658Z",
        "url": "https://files.pythonhosted.org/packages/fd/4b/82e1305e91fd711dab149fdb9ebfc1a66e96bc1046334896b16bf3b9c642/rsendmail-1.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fd4b82e1305e91fd711dab149fdb9ebfc1a66e96bc1046334896b16bf3b9c642",
        "md5": "1ca44e6646fa59e571189ef13ac6c50c",
        "sha256": "15543b5b17e6f588b6b3e98793c48f612692603be23555137d8c7023bd5b142c"
      },
      "downloads": -1,
      "filename": "rsendmail-1.1.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1ca44e6646fa59e571189ef13ac6c50c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 26931,
      "upload_time": "2023-02-02T21:38:32",
      "upload_time_iso_8601": "2023-02-02T21:38:32.922658Z",
      "url": "https://files.pythonhosted.org/packages/fd/4b/82e1305e91fd711dab149fdb9ebfc1a66e96bc1046334896b16bf3b9c642/rsendmail-1.1.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}