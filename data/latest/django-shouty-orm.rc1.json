{
  "info": {
    "author": "Keryn Knight",
    "author_email": "django-shouty-orm@kerynknight.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "django-shouty-orm\n=================\n\n:author: Keryn Knight\n:version: 0.1.1\n\nRationale\n---------\n\nI want to use ``MyModel.objects.only()`` and ``.defer()`` because that's the\n**correct** thing to do, even if it's not the default thing Django does. But\nusing ``.only()`` and ``.defer()`` in Django is an absolute footgun because any\nattempt to subsequently access the missing fields will ... **do another query**\n\nSimilarly, I don't want Django to silently allow me to do N+1 queries for related\nmanagers/querysets. But it does, so there's another footgun.\n\nThis module then, is my terrible attempt to fix the footguns automatically, by\nforcing them to raise exceptions where possible, rather than do the query. This\nflies in the face of some other proposed solutions over the years on the mailing list,\nsuch as automatically doing  ``prefetch_related`` or ``select_related``.\n\nI think/hope that the package pairs well with `django-shouty-templates`_ to try\nand surface some of the small pains I've had over the years.\n\nWhat it does\n------------\n\nAll of the following examples should raise an exception because they pose a probable\nadditional +1 (or more) queries.\n\nAccessing fields intentionally not selected::\n\n    >>> u = User.objects.only('pk').get(pk=1)\n    >>> u.username\n    MissingLocalField(\"Access to username [...]\")\n    >>> u = User.objects.defer('username').get(pk=1)\n    >>> u.email\n    >>> u.username\n    MissingLocalField(\"Access to username [...]\")\n\nAccess to relationships that have not been selected::\n\n    >>> le = LogEntry.objects.get(pk=1)\n    >>> le.action_flag\n    >>> le.user.pk\n    MissingRelationField(\"Access to user [...]\")\n\nAccess to reverse relationships that have not been selected::\n\n    >>> u = User.objects.only('pk').get(pk=1)\n    >>> u.logentry_set.all()\n    MissingReverseRelationField(\"Access to logentry_set [...]\")\n\nPretty much all relationship access (normal or reverse, ``OneToOne`` or\n``ForeignKey`` or ``ManyToMany``) should be blocked unless ``select_related`` or\n``prefetch_related`` were used to include them.\n\nSetup\n-----\n\nAdd ``shoutyorm`` or ``shoutyorm.Shout`` to your ``settings.INSTALLED_APPS``\n\nI'd certainly suggest that you should only enable it when ``DEBUG`` is ``True`` or\nduring your test suite.\n\nDependencies\n^^^^^^^^^^^^\n\n- Django 2.2+ (obviously)\n- `wrapt`_ 1.11+ (for proxying managers/querysets transparently)\n\n\nOptional configuration\n^^^^^^^^^^^^^^^^^^^^^^\n\n\n- ``settings.SHOUTY_LOCAL_FIELDS`` may be ``True|False``\n\n  Accessing fields which have been deferred via ``.only()`` and ``.defer()`` at the\n  QuerySet level will error loudly.\n- ``settings.SHOUTY_RELATION_FIELDS`` may be ``True|False``\n\n  Accessing OneToOnes which have not been ``.select_related()`` at the QuerySet\n  level will error loudly.\n  Accessing local foreignkeys which have not been ``prefetch_related()`` or\n  ``select_related()`` at the queryset level will error loudly.\n- ``settings.SHOUTY_RELATION_REVERSE_FIELDS`` may be ``True|False``\n\n  Accessing foreignkeys from the \"other\" side (that is, via the reverse relation\n  manager) which have not been ``.prefetch_related()`` at the QuerySet level will error loudly.\n\nTests\n-----\n\nJust run ``python3 -m shoutyorm`` and hope for the best. I usually do.\n\n\nAlternatives\n------------\n\nA similar similar approach is taken by `django-seal`_ but without the\nonus/burden of subclassing from specific models. I've not looked at the\nimplementation details of how seal works, but I expect I could've saved myself\nquite a lot of headache by seeing what steps it takes in what circumstances,\nrather than constantly hitting breakpoints and inspecting state.\n\nA novel idea is presented in `django-eraserhead`_ of specifically calling out\nwhen you might be able to use ``defer()`` and ``only()`` to reduce your selections,\nbut introducing those optimisations still poses a danger of regression without a\ntest suite and this module.\n\nHaving started writing this list of alternatives, I am reminded of `nplusone`_\nand it turns out that has Django support *and* a setting for raising exceptions...\nSo all of this patch may be moot, because I expect that covers a lot more? Again\nI've not looked at their implementation but I'm sure it's miles better than this\nabomination.\n\n\nThe license\n-----------\n\nIt's `FreeBSD`_. There's should be a ``LICENSE`` file in the root of the repository, and in any archives.\n\n.. _FreeBSD: http://en.wikipedia.org/wiki/BSD_licenses#2-clause_license_.28.22Simplified_BSD_License.22_or_.22FreeBSD_License.22.29\n.. _django-seal: https://github.com/charettes/django-seal\n.. _django-eraserhead: https://github.com/dizballanze/django-eraserhead\n.. _nplusone: https://github.com/jmcarp/nplusone\n.. _django-shouty-templates: https://github.com/kezabelle/django-shouty-templates\n.. _wrapt: https://wrapt.readthedocs.io/en/latest/index.html\n\n\n----\n\nCopyright (c) 2020, Keryn Knight\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n----\n\nChange history for django-shouty-orm\n------------------------------------\n0.1.1\n^^^^^^\n* Initial release\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/kezabelle/django-shouty-orm",
    "keywords": "django orm sql exception",
    "license": "BSD License",
    "maintainer": "Keryn Knight",
    "maintainer_email": "django-shouty-orm@kerynknight.com",
    "name": "django-shouty-orm",
    "package_url": "https://pypi.org/project/django-shouty-orm/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-shouty-orm/",
    "project_urls": {
      "Homepage": "https://github.com/kezabelle/django-shouty-orm"
    },
    "release_url": "https://pypi.org/project/django-shouty-orm/0.1.1/",
    "requires_dist": [
      "Django (>=2.2)",
      "wrapt (>=1.11)"
    ],
    "requires_python": "",
    "summary": "Applies a monkeypatch which forces Django's ORM to error far more loudly in certain cases",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6970961,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3b68e98135c1aa46b067a2b32a7cf14aa1306b00d4d39efcef7d287114fc76ca",
          "md5": "974c20ae382273c351e198a035820d1a",
          "sha256": "3d8500b2b2991ad84763e58c2c76064d13ecfa9f102b9f62284b305fc34f788d"
        },
        "downloads": -1,
        "filename": "django_shouty_orm-0.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "974c20ae382273c351e198a035820d1a",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 13248,
        "upload_time": "2020-04-07T15:48:01",
        "upload_time_iso_8601": "2020-04-07T15:48:01.202715Z",
        "url": "https://files.pythonhosted.org/packages/3b/68/e98135c1aa46b067a2b32a7cf14aa1306b00d4d39efcef7d287114fc76ca/django_shouty_orm-0.1.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "92b7e41188714006d797cc3e40c192098ebe182d3804fdc80be017ec9c924e69",
          "md5": "a549bd72aa58cbb062eebb1abc4e77a5",
          "sha256": "bf804e31f929e937c6fd036a8a9fa52bee530b2304c0980535318b17668c180b"
        },
        "downloads": -1,
        "filename": "django-shouty-orm-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a549bd72aa58cbb062eebb1abc4e77a5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20216,
        "upload_time": "2020-04-07T15:48:07",
        "upload_time_iso_8601": "2020-04-07T15:48:07.975298Z",
        "url": "https://files.pythonhosted.org/packages/92/b7/e41188714006d797cc3e40c192098ebe182d3804fdc80be017ec9c924e69/django-shouty-orm-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3b68e98135c1aa46b067a2b32a7cf14aa1306b00d4d39efcef7d287114fc76ca",
        "md5": "974c20ae382273c351e198a035820d1a",
        "sha256": "3d8500b2b2991ad84763e58c2c76064d13ecfa9f102b9f62284b305fc34f788d"
      },
      "downloads": -1,
      "filename": "django_shouty_orm-0.1.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "974c20ae382273c351e198a035820d1a",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 13248,
      "upload_time": "2020-04-07T15:48:01",
      "upload_time_iso_8601": "2020-04-07T15:48:01.202715Z",
      "url": "https://files.pythonhosted.org/packages/3b/68/e98135c1aa46b067a2b32a7cf14aa1306b00d4d39efcef7d287114fc76ca/django_shouty_orm-0.1.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "92b7e41188714006d797cc3e40c192098ebe182d3804fdc80be017ec9c924e69",
        "md5": "a549bd72aa58cbb062eebb1abc4e77a5",
        "sha256": "bf804e31f929e937c6fd036a8a9fa52bee530b2304c0980535318b17668c180b"
      },
      "downloads": -1,
      "filename": "django-shouty-orm-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "a549bd72aa58cbb062eebb1abc4e77a5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 20216,
      "upload_time": "2020-04-07T15:48:07",
      "upload_time_iso_8601": "2020-04-07T15:48:07.975298Z",
      "url": "https://files.pythonhosted.org/packages/92/b7/e41188714006d797cc3e40c192098ebe182d3804fdc80be017ec9c924e69/django-shouty-orm-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}