{
  "info": {
    "author": "Anastasia Skoufa",
    "author_email": "anastasia.skoufa@noris.gr",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Plugins",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Internet :: Name Service (DNS)",
      "Topic :: Security",
      "Topic :: System :: Systems Administration",
      "Topic :: Utilities"
    ],
    "description": "# certbot-dns-norisnetwork\n\nnoris network DNS Authenticator plugin for Certbot\n\nAn authenticator plugin for [certbot](https://certbot.eff.org/) to support ACMEv2 dns-01 challenge for domains the DNS zones of which are managed by noris network AG.\n\nThis plugin automates the process of completing a `dns-01` challenge by creating and subsequently removing TXT records using the [noris network ServiceAPI](https://service-api.noris.net/v1/docs/).\n\n\n## Installation\n\nInstall the plugin:\n\n* Via pip:\n  ```\n  pip install certbot-dns-norisnetwork\n  ```\n* From source:\n  ```\n  python3 setup.py install\n  ```\n\n## Preparation\n\nThe usage of this plugin requires a configuration file containing noris network `ServiceAPI Token` obtained from our [Customer Portal](https://service.noris.net/).\n\n\n### Get your API Token\n\nIn case you don't have a noris API Token, you can acquire one by following the instructions found in our OpenAPI Docs:\n- [Authentication mechanism for noris ServiceAPI](https://service-api.noris.net/v1/docs/#section/Introduction/Authentication)\n- [Required Roles for your User](https://service-api.noris.net/v1/docs/#section/Introduction/Role-model)\n\nCreate you `noris API Token` and store it in a safe place.\n\n\n### Configure your Login Details\n\nCreate a **credentials.ini** file and add the following content:\n```\ndns_noris_token=<norisAPIToken>\n```\n\n> Note: You should protect these API credentials as you would a password. Users who can read this file can use these credentials to issue arbitrary API calls on your behalf. Users who can cause Certbot to run using these credentials can complete a `dns-01` challenge to acquire new certificates or revoke existing certificates for associated domains, even if those domains aren't being managed by this server.\n\n**Important Notes**\n\n1. Make sure that the file is only readable by the user.\n\n   Certbot will emit a warning if it detects that the `credentials.ini` file can be accessed by other users on your system. The warning includes \"Unsafe permissions on credentials configuration file\", followed by the path to the credentials file. This warning will be emitted each time Certbot uses the credentials file,including for renewal, and cannot be silenced except by addressing the issue.\n\n    To restrict access to the file:\n    ```sh\n    chmod 600 /path/to/credentials.ini\n    ```\n\n\n2. The path to the `credentials.ini` file can be provided interactively or using the `--dns-noris-credentials` command-line argument. Certbot records the path to this file for use during renewal, but does not store the file's contents.\n\n### Ensure access to Certbot\n\nApart from the `credentials.ini` file, Certbot user should have write access to the `logs`, `work` and `config` directories as well.\n\nYou can use the following options to overwrite the default locations, if needed:\n* `--logs-dir` option to overwrite the default location (`/var/log/letsencrypt/`) for logs\n* `--work-dir` option to overwrite the default location (`/var/log/letsencrypt/`) for working directory\n* `--config-dir` option to overwrite the default location (`/etc/letsencrypt/`) for config directory.\n    * This is where the acquired certificate will be added.\n\n\n## Usage\n\n> **WARNING**: Non-ASCII domains provided through the `-d` argument should be in punycode format (`xn--`)!\n\n1. Acquire a certificates for `example.com`:\n\n    ```sh\n    certbot certonly \\\n        -a dns-noris \\\n        --dns-noris-credentials /path/to/credentials.ini \\\n        --non-interactive \\\n        --agree-tos \\\n        -m 'my.email@mail.com' \\\n        -d example.com\n    ```\n\n2. Acquire a certificate for both `example.com` and `www.example.com`:\n    ```sh\n    certbot certonly \\\n        -a dns-noris \\\n        --dns-noris-credentials /path/to/credentials.ini \\\n        --non-interactive \\\n        --agree-tos \\\n        -m 'my.email@mail.com' \\\n        -d example.com \\\n        -d www.example.com\n    ```\n\n3. Acquire a certificate for `example.com` waiting 240 seconds for DNS propagation from the command line:\n    ```sh\n    certbot certonly \\\n        -a dns-noris \\\n        --dns-noris-credentials /path/to/credentials.ini \\\n        --dns-noris-propagation-seconds 240 \\\n        --non-interactive \\\n        --agree-tos \\\n        -m 'my.email@mail.com' \\\n        -d example.com\n    ```\n\n\n## Command Line Options\n---------------\n\nAvailable command-line options originating from `dns-noris` Authenticator:\n```\n--dns-noris-credentials DNS_NORIS_CREDENTIALS\n    Path to credentials INI file.\n        Default: /etc/letsencrypt/credentials.ini\n\n--dns-noris-propagation-seconds DNS_NORIS_PROPAGATION_SECONDS\n    The number of seconds to wait for DNS to propagate before asking the ACME server to verify the DNS record.\n        Default: 60\n```\nFor all the available command-line options originating from `Certbot` you can use [Certbot's documentation](https://eff-certbot.readthedocs.io/en/stable/using.html#certbot-command-line-options).\n\n\n## Docker\n\nIn order to create a docker container with a `certbot-dns-norisnetwork` installation,  you can use our **official Docker image**:\n\n```sh\ndocker pull norisnetwork/certbot-dns-norisnetwork\n```\n\n> Note: **Before running the app**, make sure that the path to credentials (set by `--dns-noris-credentials` arg) reside in a volume-mounted directory (e.g. in `/etc/letsencrypt/`).\n\nThe application can be run as follows::\n```sh\ndocker run --rm \\\n    -v /var/lib/letsencrypt:/var/lib/letsencrypt \\\n    -v /etc/letsencrypt:/etc/letsencrypt \\\n    norisnetwork/certbot-dns-norisnetwork certonly \\\n    --authenticator dns-noris \\\n    --dns-noris-propagation-seconds 60 \\\n    --dns-noris-credentials /etc/letsencrypt/credentials.ini \\\n    --agree-tos \\\n    --keep-until-expiring --non-interactive \\\n    --server https://acme-v02.api.letsencrypt.org/directory \\\n    -m 'user@mail.com'\n    -d example.com -d '*.example.com'\n```\n\n\n## Developer Guide\n\n### Tools\n\nUse `pip` to install all the required dev tools:\n\n```sh\npip install -e .[dev]\n```\n\n#### Code Formatter\n\nUse **Black** Python code formatter:\n\n```sh\nblack certbot_dns_norisnetwork/\nblack tests/\nblack setup.py\n```\n\n#### Code Analyzer\n\nUse **pylint** for static code analyzing:\n\n```sh\npylint certbot_dns_norisnetwork/\npytlint tests/\n```\n\n#### Type Annotations Checker\n\nUse **mypy** for type checking:\n\n```sh\nmypy certbot_dns_norisnetwork/\nmypy tests/\n```\n\n### New Release\n\nUse **bump2version** for release versioning.\n\nRun the following commands to trigger a new release:\n\n```sh\nbump2version patch # possible: major | minor | patch\ngit push <remote-repo> && git push <remote-repo> --tags\n```\n\nThis will adjust the version appropriately and create a tagged commit that will act as a trigger for the build and publish GitLab pipelines.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/noris-network/certbot-dns-norisnetwork",
    "keywords": "",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "certbot-dns-norisnetwork",
    "package_url": "https://pypi.org/project/certbot-dns-norisnetwork/",
    "platform": null,
    "project_url": "https://pypi.org/project/certbot-dns-norisnetwork/",
    "project_urls": {
      "Homepage": "https://github.com/noris-network/certbot-dns-norisnetwork"
    },
    "release_url": "https://pypi.org/project/certbot-dns-norisnetwork/0.1.1/",
    "requires_dist": [
      "certbot",
      "requests",
      "black ; extra == 'dev'",
      "bump2version ; extra == 'dev'",
      "mypy ; extra == 'dev'",
      "pylint ; extra == 'dev'",
      "pytest ; extra == 'dev'",
      "pytest-cov ; extra == 'dev'",
      "types-requests ; extra == 'dev'"
    ],
    "requires_python": ">=3.7",
    "summary": "noris network DNS Authenticator Plugin for Certbot",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17174798,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d8910d1bac502a35479bf9455257837bae8029733e715c4cff0528a30e31fef3",
          "md5": "33985b43ac624f175e3cfd49d0893bd6",
          "sha256": "1e5223bdf78230249133d43bad05ecfdac516ee4489d0401319864daf8874bf8"
        },
        "downloads": -1,
        "filename": "certbot_dns_norisnetwork-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "33985b43ac624f175e3cfd49d0893bd6",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.7",
        "size": 11519,
        "upload_time": "2022-12-01T16:21:29",
        "upload_time_iso_8601": "2022-12-01T16:21:29.478165Z",
        "url": "https://files.pythonhosted.org/packages/d8/91/0d1bac502a35479bf9455257837bae8029733e715c4cff0528a30e31fef3/certbot_dns_norisnetwork-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a9897c16016343e52fd7175cdd7acb5b4599e5d54c1f20864865af15aaa22485",
          "md5": "7d1e9a6bad0c6c31f68319c0ac338bda",
          "sha256": "c4d3b9aa1e87eb090d89d46634c18c112508aee5b59e3cf9269555cda9a1a00e"
        },
        "downloads": -1,
        "filename": "certbot_dns_norisnetwork-0.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7d1e9a6bad0c6c31f68319c0ac338bda",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.7",
        "size": 11562,
        "upload_time": "2023-03-06T13:09:44",
        "upload_time_iso_8601": "2023-03-06T13:09:44.580062Z",
        "url": "https://files.pythonhosted.org/packages/a9/89/7c16016343e52fd7175cdd7acb5b4599e5d54c1f20864865af15aaa22485/certbot_dns_norisnetwork-0.1.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a9897c16016343e52fd7175cdd7acb5b4599e5d54c1f20864865af15aaa22485",
        "md5": "7d1e9a6bad0c6c31f68319c0ac338bda",
        "sha256": "c4d3b9aa1e87eb090d89d46634c18c112508aee5b59e3cf9269555cda9a1a00e"
      },
      "downloads": -1,
      "filename": "certbot_dns_norisnetwork-0.1.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7d1e9a6bad0c6c31f68319c0ac338bda",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.7",
      "size": 11562,
      "upload_time": "2023-03-06T13:09:44",
      "upload_time_iso_8601": "2023-03-06T13:09:44.580062Z",
      "url": "https://files.pythonhosted.org/packages/a9/89/7c16016343e52fd7175cdd7acb5b4599e5d54c1f20864865af15aaa22485/certbot_dns_norisnetwork-0.1.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}