{
  "info": {
    "author": "Dmitry Makarov",
    "author_email": "mit.makaroff@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "\n<p align=\"center\">\n  <a href=\"https://fresh-bakery.readthedocs.io/en/latest/\"><img width=\"300px\" src=\"https://user-images.githubusercontent.com/17745407/187294435-a3bc6b26-b7df-43e5-abd3-0d7a7f92b71e.png\" alt='fresh-bakery'></a>\n</p>\n<p align=\"center\">\n    <em>üç∞ The little DI framework that tastes like a cake. üç∞</em>\n</p>\n\n---\n\n**Documentation**: [https://fresh-bakery.readthedocs.io/en/latest/](https://fresh-bakery.readthedocs.io/en/latest/)\n\n---\n\n# Fresh Bakery\n\nFresh bakery is a lightweight [Dependency Injection][DI] framework/toolkit,\nwhich is ideal for building object dependencies in Python.\n\nIt is [nearly] production-ready, and gives you the following:\n\n* A lightweight, stupidly simple DI framework.\n* Fully asynchronous, no synchronous mode.\n* Any async backends compatible (`asyncio`, `trio`).\n* Zero dependencies.\n* `Mypy` compatible (no probably need for `# type: ignore`).\n* `FastAPI` fully compatible.\n* `Pytest` fully compatible (Fresh Bakery encourages the use of `pytest`).\n* Ease of testing.\n* Easily extended (contribution is welcome).\n\n## Requirements\n\nPython 3.6+\n\n## Installation\n\n```shell\n$ pip3 install fresh-bakery\n```\n\n## Examples\n\n### Raw example\nIn this example, you can see how to create a specific IoC container using the fresh bakery library in plain python code \n```python\nimport asyncio\n\nfrom dataclasses import dataclass\nfrom bakery import Bakery, Cake\n\n\n# your dependecies\n@dataclass\nclass Settings:\n    database_dsn: str\n    info_id_list: list[int]\n\n\nclass Database:\n    def __init__(self, dsn: str):\n        self.dsn: str = dsn\n\n    async def fetch_info(self, info_id: int) -> dict:\n        return {\"dsn\": self.dsn, \"info_id\": info_id}\n\n\nclass InfoManager:\n    def __init__(self, database: Database):\n        self.database: Database = database\n\n    async def fetch_full_info(self, info_id: int) -> dict:\n        info: dict = await self.database.fetch_info(info_id)\n        info[\"full\"] = True\n        return info\n\n\n# specific ioc container, all magic happens here\nclass MyBakeryIOC(Bakery):\n    settings: Settings = Cake(Settings, database_dsn=\"my_dsn\", info_id_list=[1,2,3])\n    database: Database = Cake(Database, dsn=settings.database_dsn)\n    manager: InfoManager = Cake(InfoManager, database=database)\n\n\n# code in your application that needs those dependencies ‚Üë\nasync def main() -> None:\n    async with MyBakery() as bakery:\n        for info_id in bakery.settings.info_id_list:\n            info: dict = await bakery.manager.fetch_full_info(info_id)\n            assert info[\"dsn\"] == bakery.settings.database_dsn\n            assert info[\"info_id\"] == info_id\n            assert info[\"full\"]\n\n\n# just a piece of service code\nif __name__ == \"__main__\":\n    asyncio.run(main())\n```\n\n### FastAPI example\nThis is a full-fledged complex example of how you can use IoC with your FastAPI application:\n```python\nimport asyncio\nimport random\nimport typing\n\nimport bakery\nimport fastapi\nimport pydantic\nfrom loguru import logger\n\n\n# The following is a long and boring list of dependencies\nclass PersonOut(pydantic.BaseModel):\n    \"\"\"Person out.\"\"\"\n\n    first_name: str\n    second_name: str\n    age: int\n    person_id: int\n\n\nclass FakeDbConnection:\n    \"\"\"Fake db connection.\"\"\"\n\n    def __init__(self, *_: typing.Any, **__: typing.Any):\n        ...\n\n\nclass DatabaseFakeService:\n    \"\"\"Fake database layer.\"\"\"\n\n    def __init__(self, connection: FakeDbConnection) -> None:\n        # wannabe connection only for test purposes\n        self._connection: FakeDbConnection = connection\n\n    async def __aenter__(self) -> \"DatabaseFakeService\":\n        \"\"\"On startup.\"\"\"\n        return self\n\n    async def __aexit__(self, *_args: typing.Any) -> None:\n        \"\"\"Wannabe shutdown.\"\"\"\n        await asyncio.sleep(0)\n\n    async def fetch_person(\n        self, person_id: int\n    ) -> dict[typing.Literal['first_name', 'second_name', 'age', 'id'], str | int]:\n        \"\"\"Fetch (fictitious) person.\"\"\"\n        return {\n            'first_name': random.choice(('John', 'Danku', 'Ichigo', 'Sakura', 'Jugem', 'Itt≈ç')),\n            'second_name': random.choice(( 'Dow', 'Kurosaki', 'Amaterasu', 'Kas≈ç', 'HiryuGekizokuShintenRaiho')),\n            'age': random.randint(18, 120),\n            'id': person_id,\n        }\n\n\nclass Settings(pydantic.BaseSettings):\n    \"\"\"Service settings.\"\"\"\n\n    postgres_dsn: pydantic.PostgresDsn = pydantic.Field(\n        default=\"postgresql://bakery_tester:bakery_tester@0.0.0.0:5432/bakery_tester\"\n    )\n    postgres_pool_min_size: int = 5\n    postgres_pool_max_size: int = 20\n    controller_logger_name: str = \"[Controller]\"\n\n\nclass ServiceController:\n    \"\"\"Service controller.\"\"\"\n\n    def __init__(\n        self,\n        *,\n        database: DatabaseFakeService,\n        logger_name: str,\n    ):\n        self._database = database\n        self._logger_name = logger_name\n\n    def __repr__(self) -> str:\n        return self._logger_name\n\n    async def fetch_person(self, person_id: int, /) -> PersonOut | None:\n        \"\"\"Fetch person by id.\"\"\"\n        person: typing.Mapping | None = await self._database.fetch_person(person_id)\n        if not person:\n            return None\n        res: PersonOut = PersonOut(\n            first_name=person[\"first_name\"],\n            second_name=person[\"second_name\"],\n            age=person[\"age\"],\n            person_id=person_id,\n        )\n        return res\n\n\ndef get_settings() -> Settings:\n    \"\"\"Get settings.\"\"\"\n    return Settings()\n\n\n# Here is your specific IoC container\nclass MainBakeryIOC(bakery.Bakery):\n    \"\"\"Main bakery.\"\"\"\n\n    config: Settings = bakery.Cake(get_settings)\n    _connection: FakeDbConnection = bakery.Cake(\n        FakeDbConnection,\n        config.postgres_dsn,\n        min_size=config.postgres_pool_min_size,\n        max_size=config.postgres_pool_max_size,\n    )\n    database: DatabaseFakeService = bakery.Cake(\n        bakery.Cake(\n            DatabaseFakeService,\n            connection=_connection,\n        )\n    )\n    controller: ServiceController = bakery.Cake(\n        ServiceController,\n        database=database,\n        logger_name=config.controller_logger_name,\n    )\n\n\nasync def startup() -> None:\n    logger.info(\"Init resources...\")\n    bakery.logger = logger\n    await MainBakeryIOC.aopen()\n\n\nasync def shutdown() -> None:\n    logger.info(\"Shutdown resources...\")\n    await MainBakeryIOC.aclose()\n\n\nMY_APP: fastapi.FastAPI = fastapi.FastAPI(\n    on_startup=[startup],\n    on_shutdown=[shutdown],\n)\n\n\n# Finally, an example of how you can use your dependencies\n@MY_APP.get('/person/random/')\nasync def create_person(\n    inversed_controller: ServiceController = fastapi.Depends(MainBakeryIOC.controller),\n) -> PersonOut | None:\n    \"\"\"Fetch random person from the ¬´database¬ª.\"\"\"\n    person_id: typing.Final[int] = random.randint(10**1, 10**6)\n    return await inversed_controller.fetch_person(person_id)\n```\nTo run this example, you will need to do the following:\n1. Install dependencies:\n    ```\n    pip install uvicorn fastapi loguru fresh-bakery\n    ```\n1. Save the example text to the file test.py\n1. Run uvicorn\n   ```\n   uvicorn test:MY_APP\n   ```\n1. Open this address in the browser: http://127.0.0.1:8000/docs#/default/create_person_person_random__get\n1. And don't forget to read the logs in the console\n\nFor a more complete examples, see [bakery examples](https://github.com/Mityuha/fresh-bakery/tree/main/examples).\n\n## Dependencies\n\nNo dependencies ;)\n\n## Changelog\nYou can see the release history here: https://github.com/Mityuha/fresh-bakery/releases/\n\n---\n\n<p align=\"center\"><i>Fresh Bakery is <a href=\"https://github.com/Mityuha/fresh-bakery/blob/main/LICENSE\">MIT licensed</a> code.</p>\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fresh-bakery",
    "package_url": "https://pypi.org/project/fresh-bakery/",
    "platform": null,
    "project_url": "https://pypi.org/project/fresh-bakery/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/fresh-bakery/0.2.1/",
    "requires_dist": null,
    "requires_python": ">=3.6.2,<3.12",
    "summary": "Bake your dependencies stupidly simple!",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16348070,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4aad57a9928a355d59cb2aaa05a8af8688711e008163209f31cb8a021cb89d80",
          "md5": "09db54ea4d3bec02d3c96547557b2181",
          "sha256": "5c21ff96fb6a23be50d78d685cc09129ae6063e3394b5efbea1ad35752bf4f60"
        },
        "downloads": -1,
        "filename": "fresh_bakery-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "09db54ea4d3bec02d3c96547557b2181",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.2,<3.11",
        "size": 14237,
        "upload_time": "2022-08-28T20:02:56",
        "upload_time_iso_8601": "2022-08-28T20:02:56.802363Z",
        "url": "https://files.pythonhosted.org/packages/4a/ad/57a9928a355d59cb2aaa05a8af8688711e008163209f31cb8a021cb89d80/fresh_bakery-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a04c6752bf6b6ddcbe56c126285d87d43a27b8350dc22f03e7ff1075ed48deca",
          "md5": "99a89f1c30022ff1065a7a0308df0656",
          "sha256": "3d9566405ab4510450148caf514f51db3f693a7d373659de06c68294f896729e"
        },
        "downloads": -1,
        "filename": "fresh-bakery-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "99a89f1c30022ff1065a7a0308df0656",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.2,<3.11",
        "size": 12009,
        "upload_time": "2022-08-28T20:02:54",
        "upload_time_iso_8601": "2022-08-28T20:02:54.883126Z",
        "url": "https://files.pythonhosted.org/packages/a0/4c/6752bf6b6ddcbe56c126285d87d43a27b8350dc22f03e7ff1075ed48deca/fresh-bakery-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "26696d2a9ae7b9d281b84f25ffd2f3eddd6fb2942cec4e0bb4c5bf54f556f9c7",
          "md5": "5ed28553790e39c1db7aaf2ce8afbeca",
          "sha256": "35f7e9d1139534264a7a119e3614e8578103c0df36b968b9ce2ad3a30917834d"
        },
        "downloads": -1,
        "filename": "fresh_bakery-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5ed28553790e39c1db7aaf2ce8afbeca",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.2,<3.11",
        "size": 15496,
        "upload_time": "2022-09-07T20:40:19",
        "upload_time_iso_8601": "2022-09-07T20:40:19.542697Z",
        "url": "https://files.pythonhosted.org/packages/26/69/6d2a9ae7b9d281b84f25ffd2f3eddd6fb2942cec4e0bb4c5bf54f556f9c7/fresh_bakery-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bbb13142daeb74aa3d596a573603cb923f279122224a6be903fc2de96385ec81",
          "md5": "1194513eda85a6b0716c571a4e9fae06",
          "sha256": "28f31f6b56147f33bc65b1f001338b873584be8e19a1a864711b4e23a9dda8f5"
        },
        "downloads": -1,
        "filename": "fresh-bakery-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1194513eda85a6b0716c571a4e9fae06",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.2,<3.11",
        "size": 14443,
        "upload_time": "2022-09-07T20:40:18",
        "upload_time_iso_8601": "2022-09-07T20:40:18.208099Z",
        "url": "https://files.pythonhosted.org/packages/bb/b1/3142daeb74aa3d596a573603cb923f279122224a6be903fc2de96385ec81/fresh-bakery-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9780e42b9a7ad98a008fb650b78dad738fac229cdb3646f463aa6059420d880c",
          "md5": "41e5d058cb12147ffeee2641a366e259",
          "sha256": "d828ccb1e65990bd71efb53fb49d09f6f2acd9beb7b3d9e18cba35901cca7ba8"
        },
        "downloads": -1,
        "filename": "fresh_bakery-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "41e5d058cb12147ffeee2641a366e259",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.2,<3.11",
        "size": 17272,
        "upload_time": "2022-10-16T12:16:34",
        "upload_time_iso_8601": "2022-10-16T12:16:34.221116Z",
        "url": "https://files.pythonhosted.org/packages/97/80/e42b9a7ad98a008fb650b78dad738fac229cdb3646f463aa6059420d880c/fresh_bakery-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cf30a3544128c7ef3f8b127b4eabe63f72e63b14e0dca4d505ceec10ab0f6b74",
          "md5": "4bb9e1692d3cea0837c1803e5ce4112a",
          "sha256": "672f0d6632ef9e503a7e5acbb27cffa95ca4e13d0b6cbcc60c4ca899a06dc0a9"
        },
        "downloads": -1,
        "filename": "fresh_bakery-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4bb9e1692d3cea0837c1803e5ce4112a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.2,<3.11",
        "size": 18425,
        "upload_time": "2022-10-16T12:16:36",
        "upload_time_iso_8601": "2022-10-16T12:16:36.193548Z",
        "url": "https://files.pythonhosted.org/packages/cf/30/a3544128c7ef3f8b127b4eabe63f72e63b14e0dca4d505ceec10ab0f6b74/fresh_bakery-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ce0ccf59c4fd49a53ec2fa056b89e5e9ea910f71f0e8d4985562c1a724fdf02a",
          "md5": "10c08ceee0d8cac2e7fcd9d36cc416f7",
          "sha256": "a26479da5673c12eb76ca7513bff2f3b323a418f45ac9bf79eaa2545502e2b9c"
        },
        "downloads": -1,
        "filename": "fresh_bakery-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "10c08ceee0d8cac2e7fcd9d36cc416f7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.2,<3.12",
        "size": 17272,
        "upload_time": "2023-01-08T10:11:07",
        "upload_time_iso_8601": "2023-01-08T10:11:07.212017Z",
        "url": "https://files.pythonhosted.org/packages/ce/0c/cf59c4fd49a53ec2fa056b89e5e9ea910f71f0e8d4985562c1a724fdf02a/fresh_bakery-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70189b96e791d5a51117f7418149cbfb838019ade1b8bab42ca70650a246e77f",
          "md5": "28c89c3dc8e3830b7dc4ff52046b8924",
          "sha256": "afda28f2112a1d707075fc67c02b88aad1aaa13c4d97c2cf85a4e14ca6c816aa"
        },
        "downloads": -1,
        "filename": "fresh_bakery-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "28c89c3dc8e3830b7dc4ff52046b8924",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.2,<3.12",
        "size": 18526,
        "upload_time": "2023-01-08T10:11:08",
        "upload_time_iso_8601": "2023-01-08T10:11:08.580642Z",
        "url": "https://files.pythonhosted.org/packages/70/18/9b96e791d5a51117f7418149cbfb838019ade1b8bab42ca70650a246e77f/fresh_bakery-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ce0ccf59c4fd49a53ec2fa056b89e5e9ea910f71f0e8d4985562c1a724fdf02a",
        "md5": "10c08ceee0d8cac2e7fcd9d36cc416f7",
        "sha256": "a26479da5673c12eb76ca7513bff2f3b323a418f45ac9bf79eaa2545502e2b9c"
      },
      "downloads": -1,
      "filename": "fresh_bakery-0.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "10c08ceee0d8cac2e7fcd9d36cc416f7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6.2,<3.12",
      "size": 17272,
      "upload_time": "2023-01-08T10:11:07",
      "upload_time_iso_8601": "2023-01-08T10:11:07.212017Z",
      "url": "https://files.pythonhosted.org/packages/ce/0c/cf59c4fd49a53ec2fa056b89e5e9ea910f71f0e8d4985562c1a724fdf02a/fresh_bakery-0.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "70189b96e791d5a51117f7418149cbfb838019ade1b8bab42ca70650a246e77f",
        "md5": "28c89c3dc8e3830b7dc4ff52046b8924",
        "sha256": "afda28f2112a1d707075fc67c02b88aad1aaa13c4d97c2cf85a4e14ca6c816aa"
      },
      "downloads": -1,
      "filename": "fresh_bakery-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "28c89c3dc8e3830b7dc4ff52046b8924",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.2,<3.12",
      "size": 18526,
      "upload_time": "2023-01-08T10:11:08",
      "upload_time_iso_8601": "2023-01-08T10:11:08.580642Z",
      "url": "https://files.pythonhosted.org/packages/70/18/9b96e791d5a51117f7418149cbfb838019ade1b8bab42ca70650a246e77f/fresh_bakery-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}