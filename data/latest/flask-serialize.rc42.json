{
  "info": {
    "author": "Andrew Rowe",
    "author_email": "rowe.andrew.d@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Flask",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# flask-serialize\n\n# DB Model JSON serialization with PUT, POST write for Flask applications using SQLAlchemy\n\n## Installation\n\n```bash\npip install flask-serialize\n```\n\n## Simple and quick to get going in two steps.\n\n*One* Import and add the FlaskSerializeMixin mixin to a model:\n\n```python\nfrom flask_serialize import FlaskSerialize\n\n# create a flask-serialize mixin instance from\n# the factory method `FlaskSerialize`\nfs_mixin = FlaskSerialize(db)\n\nclass Item(db.Model, fs_mixin):\n    id = db.Column(db.Integer, primary_key=True)\n    # other fields ...\n```\n\n*Two* Configure the route with the do all mixin method:\n\n```python\n@app.route('/item/<int:item_id>')\n@app.route('/items')\ndef items(item_id=None):\n    return Item.fs_get_delete_put_post(item_id)\n```\n\n*Three* Done!  Returns JSON as a single item or a list with only a single route.\n\nFlask-serialize is intended for joining a Flask SQLAlchemy Python backend with\na JavaScript Web client.  It allows read JSON serialization\nfrom the db and easy to use write back of models using PUT and POST.\n\n4 times faster than marshmallow for simple dict serialization.\n\n# Example\n\n## Model setup\n\n```python\n# example database model\nfrom flask_serialize import FlaskSerialize\nfrom datetime import datetime\n\n# required to set class var db for writing to a database\nfrom app import db\n\nfs_mixin = FlaskSerialize(db)\n\nclass Setting(fs_mixin, db.Model):\n    id = db.Column(db.Integer, primary_key=True)\n\n    setting_type = db.Column(db.String(120), index=True, default='misc')\n    key = db.Column(db.String(120), index=True)\n    value = db.Column(db.String(30000), default='')\n    active = db.Column(db.String(1), default='y')\n    created = db.Column(db.DateTime, default=datetime.utcnow)\n    updated = db.Column(db.DateTime, default=datetime.utcnow)\n    \n    # serializer fields\n    __fs_create_fields__ = __fs_update_fields__ = ['setting_type', 'value', 'key', 'active']\n\n    # checks if Flask-Serialize can delete\n    def __fs_can_delete__(self):\n        if self.value == '1234':\n            raise Exception('Deletion not allowed.  Magic value!')\n        return True\n\n    # checks if Flask-Serialize can create/update\n    def __fs_verify__(self, create=False):\n        if len(self.key or '') < 1:\n            raise Exception('Missing key')\n\n        if len(self.setting_type or '') < 1:\n            raise Exception('Missing setting type')\n        return True\n\n    def __repr__(self):\n        return '<Setting %r %r %r>' % (self.id, self.setting_type, self.value)\n```\n\n## Routes setup\n\nGet a single item as json.\n\n```python\n@app.route('/get_setting/<item_id>', methods=['GET'])\ndef get_setting( item_id ):\n    return Setting.fs_get_delete_put_post(item_id)\n\n# Returns a Flask response with a json object, example:\n```\n\n```JavaScript\n{id:1, value: \"hello\"}\n```\n\nPut an update to a single item as json.\n\n```python\n@app.route('/update_setting/<item_id>', methods=['PUT'])\ndef update_setting( item_id ):\n    return Setting.fs_get_delete_put_post(item_id)\n\n# Returns a Flask response with the result as a json object:\n\n```\n\n```JavaScript\n{message: \"success message\"}\n```\n\nDelete a single item.\n\n```python\n@app.route('/delete_setting/<item_id>', methods=['DELETE'])\ndef delete_setting( item_id ):\n    return Setting.fs_get_delete_put_post(item_id)\n\n# Returns a Flask response with the result and item deleted as a json response:\n```\n\n```JavaScript\n{message: \"success message\", item: {\"id\":5, name: \"gone\"}}\n```\n\nGet all items as a json list.\n\n```python\n@app.route('/get_setting_all', methods=['GET'])\ndef get_setting_all():\n    return Setting.fs_get_delete_put_post()\n\n# Returns a Flask response with a list of json objects, example:\n```\n\n```JavaScript\n[{id:1, value: \"hello\"},{id:2, value: \"there\"},{id:3, value: \"programmer\"}]\n```\n\nAll of: get-all, get, put, post, and delete can be combined in one route.\n\n```python\n@app.route('/setting/<int:item_id>', methods=['GET', 'PUT', 'DELETE', 'POST'])\n@app.route('/setting', methods=['GET', 'POST'])\ndef route_setting_all(item_id=None):\n    return Setting.fs_get_delete_put_post(item_id)\n```\n\nUpdating from a json object in the flask put request\n\nJQuery example:\n\n```javascript\nfunction put(setting_id) {\n        return $.ajax({\n            url: `/update_setting/${setting_id}`,\n            method: 'PUT',\n            contentType: \"application/json\",\n            data: {setting_type:\"x\",value:\"100\"},\n        }).then(response => {\n            alert(\"OK:\"+response.message);\n        }).fail((xhr, textStatus, errorThrown) => {\n            alert(`Error: ${xhr.responseText}`);\n        });\n    }\n}\n```\n\nFlask route:\n\n```python\n@app.route('/update_setting/<int:item_id>', methods=['PUT'])\ndef update_setting(item_id):\n    return Setting.fs_get_delete_put_post(item_id)\n```\n\nCreate or update from a WTF form:\n\n```python\n    @app.route('/setting_edit/<int:item_id>', methods=['POST'])\n    @app.route('/setting_add', methods=['POST'])    \n    def setting_edit(item_id=None):\n        if item_id:\n            item = Setting.query.get_or_404(item_id)\n        else:\n            item = {}\n        form = EditForm(obj=item)\n    \n        if form.validate_on_submit():\n            if item_id:\n                try:\n                    item.fs_request_update_form()\n                    flash('Your changes have been saved.')\n                except Exception as e:\n                    flash(str(e), category='danger')\n                return redirect(url_for('setting_edit', item_id=item_id))\n            else:\n                try:\n                    new_item = Setting.fs_request_create_form()\n                    flash('Setting created.')\n                    return redirect(url_for('setting_edit', item_id=new_item.id))\n                except Exception as e:\n                    flash('Error creating item: ' + str(e))\n                    \n        return render_template(\n                'setting_edit.html',\n                item=item,\n                title='Edit or Create item',\n                form=form\n            )\n```\n\n# Create a child database object:\n\n## Using POST.\n\nAs example: add a `Stat` object to a Survey object using the `fs_request_create_form` convenience method.  The foreign key\nto the parent `Survey` is provided as a `kwargs` parameter to the method.\n\n```python\n    @app.route('/stat/<int:survey_id>', methods=['POST'])\n    def stat_add(survey_id=None):\n        survey = Survey.query.get_or_404(survey_id)\n        return Stat.fs_request_create_form(survey_id=survey.id).fs_as_dict\n```\n\n## Using fs_get_delete_put_post.\n\nAs example: add a `Stat` object to a Survey object using the `fs_get_delete_put_post` convenience method.  The foreign key\nto the parent `Survey` is provided in the form data as survey_id.  `__fs_create_fields__` list must then include `survey_id` as\nthe foreign key field to be set if you specify any `__fs_create_fields__`.  By default, all fields are allowed to be included\nwhen creating.\n\n```html\n    <form>\n           <input type=\"hidden\" name=\"survey_id\" value=\"56\">\n           <input name=\"value\">\n    </form>\n```\n\n```python\n    @app.route('/stat/', methods=['POST'])\n    def stat_add():\n        return Stat.fs_get_delete_put_post()\n```\n\n# Writing and creating\n\nWhen using any of the convenience methods to update, create or delete an object these properties and\nmethods control how flask-serialize handles the operation.\n\n## Updating from a form or json\n\n```python\ndef fs_request_update_json():\n    \"\"\"\n    Update an item from request json data or PUT params, probably from a PUT or PATCH.\n    Throws exception if not valid\n\n    :return: True if item updated\n\n    \"\"\"\n```\n\nExample.  To update a Message object using a GET, call this method with the parameters to update as request arguments.  ie:\n\n/update_message/12/?body=hello&subject=something\n\n```python\n    @route('/update_message/<int:message_id>/')\n    def update_message(message_id)\n        message = Message.fs_get_by_user_or_404(message_id, user=current_user)\n        if message.fs_request_update_json():\n            return 'Updated'\n```\n\n```python\ndef fs_request_update_json():\n    \"\"\"\n    Update an item from request json data or PUT params, probably from a PUT or PATCH.\n    Throws exception if not valid\n\n    :return: True if item updated\n\n    \"\"\"\n```\n\nExample.  To update a Message using a POST, call this method with the parameters to update as request arguments.  ie:\n\n```\n/update_message/12/\n\nform data {body=\"hello\", subject=\"something\"}\n```\n\n```python\n    @route('/update_message/<int:message_id>/', methods=['POST'])\n    def update_message(message_id)\n        message = Message.fs_get_by_user_or_404(message_id, user=current_user)\n        if message.fs_request_update_form():\n            return 'Updated'\n```\n\n## `__fs_verify__` write and create\n\n```python\ndef  __fs_verify__(self, create=False):\n    \"\"\"\n    raise exception if item is not valid for put/patch/post\n    :param: create - True if verification is for a new item\n    \"\"\"\n```\n\nOverride the mixin `__fs_verify__` method to provide control and verification\nwhen updating and creating model items.  Simply raise an exception\nwhen there is a problem.  You can also modify `self` data before writing. See model example.\n\n## Delete\n\nTo control when a deletion using `fs_get_delete_put_post` override the `__fs_can_delete`\nhook.  Return False or raise and exception to prevent deletion.  Return True to\nallow deletion.\n\n```python\ndef __fs_can_delete__(self):\n```\n\nOverride the mixin `__fs_can_delete__` to provide control over when an\nitem can be deleted.  Simply raise an exception\nwhen there is a problem.   By default `__fs_can_delete__`\ncalls `__fs_can_update__` unless overridden.  See model example.\n\n## `__fs_can_update__`\n\n```python\ndef __fs_can_update__(self):\n    \"\"\"\n    raise exception if item cannot be updated\n    \"\"\"\n```\n\nOverride the mixin `__fs_can_update__` to provide control over when an\nitem can be updated.  Simply raise an exception\nwhen there is a problem or return False.  By default `__fs_can_update__`\nuses the result from `__fs_can_access__` unless overridden.\n\n## `__fs_can_access__`\n\n```python\ndef __fs_can_access__(self):\n    \"\"\"\n    return False if item can't be accessed\n    \"\"\"\n```\n\nOverride the mixin `__fs_can_access__` to provide control over when an\nitem can be read or accessed.  Return False to exclude from results.\n\n## Private fields\n\nFields can be made private for certain reasons by overriding the `__fs_private_field__` method\nand returning `True` if the field is to be private.\n\nPrivate fields will be excluded for any get, put and post methods.\n\nExample:\n\nTo exclude private fields when a user is not the admin.\n\n```python\ndef __fs_private_field__(self, field_name):\n    if not is_admin_user() and field_name.upper().startswith('PRIVATE_'):\n        return True\n    return False\n```\n\n## `__fs_update_fields__`\n\nList of model fields to be read from a form or JSON when updating an object.  Normally\nadmin fields such as login_counts or security fields are excluded.  Do not put foreign keys or primary\nkeys here.  By default, when `__fs_update_fields__` is empty all Model fields can be updated.\n\n```python\n__fs_update_fields__ = []\n```\n\n## `__fs_update_properties__`\n\nWhen returning a success result from a put or post update, a dict\ncomposed of the property values from the `__fs_update_properties__` list is returned\nas \"properties\".\n\nExample return `JSON`:\n\n```python\nclass ExampleModel(db.Model, FlaskSerializeMixin):\n    head_size = db.Column(db.Integer())\n    ear_width = db.Column(db.Integer())\n    __fs_update_fields__ = ['head_size', 'ear_width']\n    __fs_update_properties__ = ['hat_size']\n\n    @property\n    def hat_size(self):\n        return self.head_size * self.ear_width\n```\n\n```JavaScript\n// result update return message\n{\"message\": \"Updated\", \"properties\": {hat_size: 45.67} }\n```\n\nThis can be used to communicate from the model on the server to the JavaScript code\ninteresting things from updates\n\n## `__fs_create_fields__`\n\nList of model fields to be read from a form or json when creating an object.  Can be the specified as either 'text' or\nthe field. Do not put primary keys here.  Do not put foreign keys here if using SQLAlchemy child insertion.\nThis is usually the same as `__fs_update_fields__`.  When `__fs_create_fields__` is empty all column fields can be inserted.\n\nUsed by these methods:\n\n- fs_request_create_form\n- fs_get_delete_put_post\n\n```python\n__fs_create_fields__ = []\n```\n\nExample:\n\n```python\nclass Setting(fs_mixin, FormPageMixin, db.Model):\n    id = db.Column(db.Integer, primary_key=True)\n\n    setting_type = db.Column(db.String(120), index=True, default='misc')\n    private = db.Column(db.String(3000), default='secret')\n    value = db.Column(db.String(3000), default='')\n\n    __fs_create_fields__ = [setting_type, 'value']\n```\n\n## Update DateTime fields specification\n\nThe class methods: `fs_request_update_form`, `fs_request_create_form`, `fs_request_update_json` will automatically stamp your\nmodel's timestamp fields using the `__fs_update_timestamp__` class method.\n\n`__fs_timestamp_fields__` is a list of fields on the model to be set when updating or creating\nwith the value of `datetime.datetime.utcnow()`.  The default field names to update are: `['timestamp', 'updated']`.\n\nExample:\n\n```python\nclass ExampleModel(db.Model, FlaskSerializeMixin):\n    # ....\n    modified = db.Column(db.DateTime, default=datetime.utcnow)\n    __fs_timestamp_fields__ = ['modified']\n```\n\nOverride the timestamp default of `utcnow()` by replacing the `__fs_timestamp_stamper__` class property with your\nown.  Example:\n\n```python\nclass ExampleModel(db.Model, FlaskSerializeMixin):\n    # ....\n    __fs_timestamp_stamper__ = datetime.datetime.now\n```\n\n# Filtering and sorting\n\n## Exclude fields\n\nList of model field names to not serialize at all.\n\n```python\n__fs_exclude_serialize_fields__ = []\n```\n\nList of model field names to not serialize when returning as json.\n\n```python\n__fs_exclude_json_serialize_fields__ = []\n```\n\n## Filtering json list results\n\nJson result lists can be filtered by using the `prop_filters` parameter on either\nthe `fs_get_delete_put_post` method or the `fs_json_list` method.\n\nThe filter consists of one or more properties in the json result and\nthe value that it must match.  Filter items will match against the\nfirst `prop_filter` property to exactly equal the value.\n\nNOTE: The filter is not applied with single a GET or, the PUT, POST and DELETE methods.\n\nExample to only return dogs:\n\n```python\nresult = fs_get_delete_put_post(prop_filters = {'key':'dogs'})\n```\n\n## Sorting json list results\n\nJson result lists can be sorted by using the `__fs_order_by_field__` or the `__fs_order_by_field_desc__` properties.  The results\nare sorted after the query is converted to JSON.  As such you can use any property from a class to sort. To sort by id\nascending use this example:\n\n```python\n__fs_order_by_field__ = 'id'\n```\n\nA `lambda` or `method` can be used as the `__fs_order_by_field__`, in which case custom sorting can be achieved. The\npassed value to the `lambda` is a dictionary of the field and properties of a result row.\n\nExample:\n\n```python\n__fs_order_by_field__ = lambda r: -int(r[\"value\"])\n```\n\n\n## Filtering query results using `__fs_can_access__` and user.\n\nThe `fs_query_by_access` method can be used to filter a SQLAlchemy result set so that\nthe `user` property and `__fs_can_access__` hook method are used to restrict to allowable items.\n\nExample:\n\n```python\nresult_list = Setting. fs_query_by_access(user='Andrew', setting_type='test')\n```\n\nAny keyword can be supplied after `user` to be passed to `filter_by` method of `query`.\n\n## Relationships list of property names that are to be included in serialization\n\n```python\n__fs_relationship_fields__ = []\n```\n\nIn default operation relationships in models are not serialized.  Add any\nrelationship property name here to be included in serialization.  NOTE: take care\nto not include circular relationships.  Flask-Serialize does not check for circular\nrelationships.\n\n# Serialization converters\n\nThere are three built in converters to convert data from the database\nto a good format for serialization:\n\n- DATETIME - Removes the fractional second part and makes it a string\n- PROPERTY - Enumerates and returns model added properties\n- RELATIONSHIP - Deals with children model items.\n\nSet one of these to None or a value to remove or replace it's behaviour.\n\n## Adding and overriding converter behaviour\n\nAdd values to the class property:\n\n```python\n__fs_column_type_converters__ = {}\n```\n\nWhere the key is the column type name of the database column\nand the value is a method to provide the conversion.\n\nExample:\n\nTo convert VARCHAR(100) to a string:\n\n```python\n__fs_column_type_converters__ = {'VARCHAR': lambda v: str(v)}\n```\n\nTo change DATETIME conversion behaviour, either change the DATETIME column_type_converter or\noverride the `__fs_to_date_short__` method of the mixin.  Example:\n\n```python\nimport time\n\nclass Model(db.model, FlaskSerializeMixin):\n    # ...\n    # ...\n    def __fs_to_date_short__(self, date_value):\n        \"\"\"\n        convert a datetime.datetime type to\n        a unix like milliseconds since epoch\n        :param date_value: datetime.datetime {object}\n        :return: number\n        \"\"\"\n        if not date_value:\n            return 0\n\n        return int(time.mktime(date_value.timetuple())) * 1000\n```\n\n## Conversion types when writing to database during update and create\n\nAdd or replace to db conversion methods by using a dictionary that specifies conversions for SQLAlchemy columns.\n\n- str(type): is the key to the dictionary for a python object type\n- the value is a lambda or method to provide the conversion to a database acceptable value.\n\nExample:\n\n```python\n    __fs_convert_types__ = {\n        str(bool): lambda v: (type(v) == bool and v) or str(v).lower() == \"true\"\n    }\n```\n\nFirst the correct conversion will be attempted to be determined from the type of the updated or\nnew field value.  Then, an introspection from the destination column type will be used to get the\ncorrect value converter type.\n\n@property values are converted using the `__fs_property_converter__` class method.  Override or extend it\nfor unexpected types.\n\nNotes:\n\n- The order of convert types will have an effect. For example, the Python boolean type is derived from an int.  Make sure\n  boolean appears in the list before any int convert type.\n\n- To undertake a more specific column conversion use the `__fs_verify__` method to explicitly set the class instance value.  The\n  `__fs_verify__` method is always called before a create or update to the database.\n\n- When converting values from query strings or form values the type will always be `str`.\n\n- To add or modify values from a Flask request object before they are applied to the instance use the `__fs_before_update__` hook.\n  `__fs_verify__` is called after `__fs_before_update__`.\n\n- To undertake actions after a commit use the `__fs_after_commit__` hook.\n\n# Mixin Helper methods and properties\n\n## fs_get_delete_put_post(item_id, user, prop_filters)\n\nPut, get, delete, post and get-all magic method handler.\n\n- `item_id`: the primary key of the item - if none and method is 'GET' returns all items\n- `user`: user to user as query filter.\n- `prop_filters`: dictionary of key:value pairs to limit results when returning get-all.\n\n| Method Operation | item_id     | Response                                                                                                                                                                                                                                                                                                 |\n|------------------|-------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| GET              | primary key | returns one item when `item_id` is a primary key.  {property1:value1,property2:value2,...}                                                                                                                                                                                                               |\n| GET              | None        | returns all items when `item_id` is None. [{item1},{item2},...]                                                                                                                                                                                                                                          |\n| PUT              | primary key | updates item using `item_id` as the id from request json data.  Calls the model `__fs_verify__`    `{message:message,item:{model_fields,...}`, properties:{`__fs_update_properties__`}} before updating.  Returns new item as {item}                                                                       |\n| DELETE           | primary key | removes the item with primary key of `item_id` if self.__fs_can_delete__ does not throw an error.  `{property1:value1,property2:value2,...}`                                                                                         Returns the item removed.  Calls `__fs_can_delete__` before delete. |\n| POST             | None        | creates and returns a Flask response with a new item as json from form body data or JSON body data {property1:value1,property2:value2,...} When `item_id` is None. Calls the model `__fs_verify__` method before creating.                                                                               |\n| POST             | primary key | updates an item from form data using `item_id`. Calls the model ` __fs_verify__` method before updating.                                                                                                                                                                                                 |\n\nOn error returns a response of 'error message' with http status code of 400.\n\nSet the `user` parameter to restrict a certain user.  By default uses the\nrelationship of `user`.  Set another relationship field by setting the `__fs_user_field__` to the name of the\nrelationship.\n\nProp filters is a dictionary of `property name`:`value` pairs.  Ie: {'group': 'admin'} to restrict list to the\nadmin group.  Properties or database fields can be used as the property name.\n\n## fs_as_dict\n\nConvert a db object into a dictionary.  Example:\n\n```python\nitem = Setting.query.get_or_404(2)\ndict_item = item.fs_as_dict()\n```\n\n## fs_as_json\n\nConvert a db object into a json Flask response using `jsonify`.  Example:\n\n```python\n@app.route('/setting/<int:item_id>')\ndef get_setting(item_id):\n    item = Setting.query.get_or_404(item_id)\n    return item.fs_as_json()\n```\n\n## `__fs_after_commit__(self, create=False)`\n\n\n```python\ndef  __fs_after_commit__(self, create=False):\n```\n\nHook to call after any `fs_update_from_dict`, `fs_request_update_form`, `fs_request_update_json` has been called so that\nyou do what you like.  `self` is the updated or created (create==True) item.\n\nNOTE: not called after a `DELETE`\n\n## `__fs_before_update__(cls, data_dict)`\n\n- data_dict: a dictionary of new data to apply to the item\n- return: the new `data_dict` to use when updating\n\nHook to call before any of `fs_update_from_dict`, `fs_request_update_form`, `fs_request_update_json` is called so that\nyou may alter or add update values before the item is written to `self` in preparation for update to db.\n\nNOTE: copy `data_dict` to a normal dict as it may be an `Immutable` type from the request object.\n\nExample, make sure active is 'n' if no value from a request.\n\n```python\ndef __fs_before_update__(self, data_dict):\n    d = dict(data_dict)\n    d['active'] = d.get('active', 'n')\n    return d\n```\n\n## fs_dict_list(cls, query_result)\n\nreturn a list of dictionary objects\nfrom the sql query result using `__fs_can_access__()` to filter\nresults.\n\n```python\n@app.route('/items')\ndef get_items():\n    items = Setting.query.all()\n    return jsonify(Setting.fs_dict_list(items))\n```\n\n## fs_json_list(query_result)\n\nReturn a flask response in json list format from a sql alchemy query result.\n\n.. code:: python\npython\n\n```\n@bp.route('/address/list', methods=['GET'])\n@login_required\ndef address_list():\n    items = Address.query.filter_by(user=current_user)\n    return Address.fs_json_list(items)\n```\n\n## fs_json_filter_by(kw_args)\n\nReturn a flask list response in json format using a filter_by query.\n\nExample:\n\n```python\n@bp.route('/address/list', methods=['GET'])\n@login_required\ndef address_list():\n    return Address.filter_by(user=current_user)\n```\n\n## fs_json_first(kwargs)\n\nReturn the first result in json format using filter_by arguments.\n\nExample:\n\n```python\n@bp.route('/score/<course>', methods=['GET'])\n@login_required\ndef score(course):\n    return Score.fs_json_first(class_name=course)\n```\n\n## `__fs_previous_field_value__`\n\nA dictionary of the previous field values before an update is applied from a dict, form or json update operation. Helpful\nin the `__fs_verify__` method to see if field values are to be changed.\n\nExample:\n\n```python\ndef __fs_verify__(self, create=False):\n    previous_value = self.__fs_previous_field_value__.get('value')\n    if previous_value != self.value:\n        current_app.logger.warning(f'value is changing from {previous_value}')\n```\n\n## fs_request_create_form(kwargs)\n\nUse the contents of a Flask request form or request json data to create a item\nin the database.   Calls `__fs_verify__(create=True)`.  Returns the new item or throws error.\nUse kwargs to set the object properties of the newly created item.\n\nExample:\n\nCreate a `score` item with the parent being a `course`.\n\n```python\n@bp.route('/score/<course_id>', methods=['POST'])\n@login_required\ndef score(course_id):\n    course = Course.query.get_or_404(course_id)\n    return Score.fs_request_create_form(course_id=course.id).fs_as_dict\n```\n\n## fs_request_update_form()\n\nUse the contents of a Flask request form or request json data to update an item\nin the database.   Calls `__fs_verify__()` and `__fs_can_update__()` to check\nif can update.  Returns True on success.\n\nExample:\n\nUpdate a score item.\n\n```\n/score/6?value=23.4\n```\n\n```python\n@bp.route('/score/<int:score_id>', methods=['PUT'])\n@login_required\ndef score(score_id):\n    score = Score.query.get_or_404(score_id)\n    if Score.fs_request_update_form():\n        return 'ok'\n    else:\n        return 'update failed'\n```\n\n# FormPageMixin\n\nEasily add WTF form page handling by including the FormPageMixin.\n\nExample:\n\n```python\nfrom flask_serialize.form_page import FormPageMixin\n\nclass Setting(FlaskSerializeMixin, FormPageMixin, db.Model):\n    # ....\n```\n\nThis provides a method and class properties to quickly add a standard way of dealing with WTF forms on a Flask page.\n\n## form_page(cls, item_id=None)\n\nDo all the work for creating and editing items using a template and a wtf form.\n\nPrerequisites.\n\nSetup the class properties to use your form items.\n\n| Property                      | Usage                                                                                                                                                  |\n|-------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------|\n| form_page_form                | **Required**. WTForm Class name                                                                                                                        |\n| form_page_route_create        | **Required**. Name of the method to redirect after create, uses: url_for(cls.form_route_create, item_id=id)                                            |\n| form_page_route_update        | **Required**. Name of the method to redirect after updating, uses: url_for(cls.form_route_update, item_id=id)                                          |\n| form_page_template            | **Required**. Location of the template file to allow edit/add                                                                                          |\n| form_page_update_format       | Format string to format flash message after update. `item` (the model instance) is passed as the only parameter.  Set to '' or None to suppress flash. |\n| form_page_create_format       | Format string to format flash message after create. `item` (the model instance) is passed as the only parameter.  Set to '' or None to suppress flash. |\n| form_page_update_title_format | Format string to format title template value when editing. `item` (the model instance) is passed as the only parameter.                                |\n| form_page_create_title_format | Format string to format title template value when creating. `cls` (the model class) is passed as the only parameter.                                   |\n\nThe routes must use item_id as the parameter for editing. Use no parameter when creating.\n\nExample:\n\nTo allow the Setting class to use a template and WTForm to create and edit items.  In this example after create the index page is\nloaded, using the method `page_index`.  After update, the same page is reloaded with the new item values in the form.\n\nAdd these property overrides to the Setting Class.\n\n```python\n# form_page\nform_page_form = EditForm\nform_page_route_update = 'route_setting_form'\nform_page_route_create = 'page_index'\nform_page_template = 'setting_edit.html'\nform_page_new_title_format = 'New Setting'\n```\n\nAdd this form.\n\n```python\nclass EditForm(FlaskForm):\n    value = StringField('value')\n```\n\nSetup these routes.\n\n```python\n@app.route('/setting_form_edit/<int:item_id>', methods=['POST', 'GET'])\n@app.route('/setting_form_add', methods=['POST'])\ndef route_setting_form(item_id=None):\n    return Setting.form_page(item_id)\n```\n\nTemplate.\n\nThe template file needs to use WTForms to render the given form. `form`, `item`, `item_id` and `title` are passed as template\nvariables.\n\nExample to update using POST, NOTE: only POST and GET are supported by form submit:\n\n```html\n<h3>{{title}}</h3>\n<form method=\"POST\" submit=\"{{url_for('route_setting_form', item_id=item.id)}}\">\n  <input name=\"value\" value=\"{{form.value.data}}\">\n  <input type=\"submit\">\n</form>\n```\n\nExample to create using POST:\n\n```html\n<h3>{{title}}</h3>\n<form method=\"POST\" submit=\"{{url_for('route_setting_form')}}\">\n  <input name=\"value\" value=\"{{form.value.data}}\">\n  <input type=\"submit\">\n</form>\n```\n\n# NOTES\n\n## Version 2.0.1 update notes\n\nVersion 2.0.1 changes most of the properties, hooks and methods to use a more normal Python naming convention.\n\n- Regularly called mixin methods now start with `fs_`.\n- Hook methods start with `__fs_` and end with `__`.\n- Control properties start with `__fs_` and end with `__`.\n- Some hook functions can now return False or True rather than just raise Exceptions\n- fs_get_delete_put_post now returns a HTTP code that is more accurate of the cause\n\n## Release Notes\n\n- 2.1.3 - Allow sorting by lambda\n- 2.1.2 - Fix readme table format\n- 2.1.1 - Improve sqlite JSON handling\n- 2.1.0 - Convert readme to markdown.  Add support for JSON columns.  Withdraw Python 3.6 Support. Use unittest instead of pytest.  NOTE: Changes `__fs_convert_types__` to a `dict`.\n- 2.0.3 - Allow more use of model column variables instead of \"quoted\" field names.  Fix missing import for FlaskSerialize.\n- 2.0.2 - Fix table formatting.\n- 2.0.1 - Try to get properties and methods to use more appropriate names.\n- 1.5.2 - Test with flask 2.0.  Add `__fs_after_commit__` method to allow post create/update actions.  Improve documentation.\n- 1.5.1 - Fix TypeError: unsupported operand type(s) for +=: 'ImmutableColumnCollection' and 'list' with newer versions of SQLAlchemy\n- 1.5.0 - Return item from POST/PUT updates. Allow `__fs_create_fields__` and `__fs_update_fields__` to be specified using the column fields.  None values serialize as null/None.  Restore previous `__fs_update_properties__` behaviour.  By default, updates/creates using all fields. Exclude primary key from create and update.\n- 1.4.2 - by default return all props with `__fs_update_properties__`\n- 1.4.1 - Add better exception message when `db` mixin property not set.  Add `FlaskSerialize` factory method.\n- 1.4.0 - Add `__fs_private_field__` method.\n- 1.3.1 - Fix incorrect method signatures.  Add fs_query_by_access method.\n- 1.3.0 - Add `__fs_can_update__` and `__fs_can_access__` methods for controlling update and access.\n- 1.2.1 - Add support to change the user field name for get_put_post_delete user= parameter.\n- 1.2.0 - Add support for decimal, numeric and clob.  Treat all VARCHARS the same.  Convert non-list relationship.\n- 1.1.9 - Allow FlaskSerializeMixin to be converted when a property value.\n- 1.1.8 - Move form_page to separate MixIn.  Slight refactoring.  Add support for complex type to db.\n- 1.1.6 - Make sure all route returns use jsonify as required for older Flask versions.  Add `__fs_before_update__` hook.\n- 1.1.5 - Add `__fs_previous_field_value__` array that is set during update.  Allows comparing new and previous values during  `__fs_verify__`.\n- 1.1.4 - Fix doco typos and JavaScript examples.  Add form_page method.  Improve test and example apps.  Remove Python 2, 3.4 testing and support.\n- 1.1.3 - Fix duplicate db writes.  Return item on delete.  Remove obsolete code structures.  Do not update with non-existent fields.\n- 1.1.2 - Add 400 http status code for errors, remove error dict.  Improve documentation.\n- 1.1.0 - Suppress silly errors. Improve documentation.\n- 1.0.9 - Add kwargs to fs_request_create_form to pass Object props to be used when creating the Object instance\n- 1.0.8 - Cache introspection to improve performance.  All model definitions are cached after first use.  It is no longer possible to alter model definitions dynamically.\n- 1.0.7 - Add json request body support to post update.\n- 1.0.5 - Allow sorting of json lists.\n\n## Licensing\n\n- Apache 2.0\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/Martlark/flask-serialize/archive/2.1.3.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Martlark/flask-serialize",
    "keywords": "flask sqlalchemy serialize serialization serialise",
    "license": "Apache Software License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "flask-serialize",
    "package_url": "https://pypi.org/project/flask-serialize/",
    "platform": null,
    "project_url": "https://pypi.org/project/flask-serialize/",
    "project_urls": {
      "Download": "https://github.com/Martlark/flask-serialize/archive/2.1.3.tar.gz",
      "Homepage": "https://github.com/Martlark/flask-serialize"
    },
    "release_url": "https://pypi.org/project/flask-serialize/2.1.3/",
    "requires_dist": [
      "Permissive-Dict"
    ],
    "requires_python": "",
    "summary": "Easy to use JSON serialization and update/create for Flask and SQLAlchemy.",
    "version": "2.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17162873,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f0f2269c789c7acb0fb66443432aeec0a26f98830b2352a7da1ae32e8b4eb98f",
          "md5": "1c21b048e7938fdcb8d09c8864be63ef",
          "sha256": "f6e5e9ca204763fe75467e3efcc3db59c724147f349f7f84a34101eec16333c4"
        },
        "downloads": -1,
        "filename": "flask_serialize-0.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1c21b048e7938fdcb8d09c8864be63ef",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 8404,
        "upload_time": "2019-07-27T09:45:02",
        "upload_time_iso_8601": "2019-07-27T09:45:02.425702Z",
        "url": "https://files.pythonhosted.org/packages/f0/f2/269c789c7acb0fb66443432aeec0a26f98830b2352a7da1ae32e8b4eb98f/flask_serialize-0.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6d4105feae2fb48134b8d56eb885feaa2fb5952221c8011e432855c5c1dd0210",
          "md5": "a54f7ec4f2db554dab6d5333c20c3c62",
          "sha256": "c46cf7a845a7924eec80a82fbac2594054ef02bb3889d2389562170512544fa0"
        },
        "downloads": -1,
        "filename": "flask_serialize-0.0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a54f7ec4f2db554dab6d5333c20c3c62",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 9026,
        "upload_time": "2019-07-27T09:51:42",
        "upload_time_iso_8601": "2019-07-27T09:51:42.110550Z",
        "url": "https://files.pythonhosted.org/packages/6d/41/05feae2fb48134b8d56eb885feaa2fb5952221c8011e432855c5c1dd0210/flask_serialize-0.0.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cf3d098e5bfeb255a201d4aad6fccdafb873147595ef6ef02c393965afb95cab",
          "md5": "d4316b9686962cc907597c9906b6256e",
          "sha256": "9f5c915c01c908f89adb2702ade869a8da9ba58405b496491dae9bafe981dc2d"
        },
        "downloads": -1,
        "filename": "flask_serialize-0.0.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d4316b9686962cc907597c9906b6256e",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 9036,
        "upload_time": "2019-07-28T02:59:12",
        "upload_time_iso_8601": "2019-07-28T02:59:12.718375Z",
        "url": "https://files.pythonhosted.org/packages/cf/3d/098e5bfeb255a201d4aad6fccdafb873147595ef6ef02c393965afb95cab/flask_serialize-0.0.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "90a3699c58ddadf1469e7c4f30338f6af8b6ab5baabd9a43674335054a6c93e2",
          "md5": "811b6426bb2a97041bf86611509004e3",
          "sha256": "7451df22a0eb52d704ddab1d71592c75da330c12e1b294b82c7f333273de5650"
        },
        "downloads": -1,
        "filename": "flask_serialize-0.0.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "811b6426bb2a97041bf86611509004e3",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 9035,
        "upload_time": "2019-07-28T04:08:52",
        "upload_time_iso_8601": "2019-07-28T04:08:52.853470Z",
        "url": "https://files.pythonhosted.org/packages/90/a3/699c58ddadf1469e7c4f30338f6af8b6ab5baabd9a43674335054a6c93e2/flask_serialize-0.0.4-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cb9f4c07bbb4e38329003e9fb9765d78f14912d5bf143ca00b9096d912ac7563",
          "md5": "5d51c303890fc197b79689b6a2d1008a",
          "sha256": "06b3db0a645dcb388e756e8cee568c2abd7eaa718f04eb39ab79405fafb2a019"
        },
        "downloads": -1,
        "filename": "flask_serialize-0.0.5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5d51c303890fc197b79689b6a2d1008a",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 9034,
        "upload_time": "2019-07-28T04:40:49",
        "upload_time_iso_8601": "2019-07-28T04:40:49.144104Z",
        "url": "https://files.pythonhosted.org/packages/cb/9f/4c07bbb4e38329003e9fb9765d78f14912d5bf143ca00b9096d912ac7563/flask_serialize-0.0.5-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a0f6ff935669a5223f862673b2a3372674c20d5835744721d3d6e7eb931654f9",
          "md5": "ff1af40271d1adbd9b6da328c1501632",
          "sha256": "23ed5b7631187814beddc68e1a497c69d0a20c184dcd387fa6966d8955621ac5"
        },
        "downloads": -1,
        "filename": "flask_serialize-0.0.6-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ff1af40271d1adbd9b6da328c1501632",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 11691,
        "upload_time": "2019-07-28T05:44:42",
        "upload_time_iso_8601": "2019-07-28T05:44:42.006815Z",
        "url": "https://files.pythonhosted.org/packages/a0/f6/ff935669a5223f862673b2a3372674c20d5835744721d3d6e7eb931654f9/flask_serialize-0.0.6-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca235d6de5e92fd2fadbb14dd2e0487ce98161ad37b95bbd7ac9efb0fec33662",
          "md5": "1aa6c25727dbb54da3ccdf220ed06a20",
          "sha256": "58ec5b7fcc5a98a5cf53ab2ec8d11ba8d8cbb845048c5cc89fbec45374e1e2f4"
        },
        "downloads": -1,
        "filename": "flask_serialize-0.0.7-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1aa6c25727dbb54da3ccdf220ed06a20",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 11810,
        "upload_time": "2019-07-28T23:37:50",
        "upload_time_iso_8601": "2019-07-28T23:37:50.885391Z",
        "url": "https://files.pythonhosted.org/packages/ca/23/5d6de5e92fd2fadbb14dd2e0487ce98161ad37b95bbd7ac9efb0fec33662/flask_serialize-0.0.7-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c39cd10edddfc64f84cb48d5ec9d5a3f61ca19231541c9f9d5e027f614abbb62",
          "md5": "1f2ad8af31aee2a46479621fc4099541",
          "sha256": "dbc7f319e764dcce8211ebc501c91cd9959ee216c4f9f19f0a2680159fd82702"
        },
        "downloads": -1,
        "filename": "flask_serialize-0.0.8-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1f2ad8af31aee2a46479621fc4099541",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 12625,
        "upload_time": "2019-07-29T12:29:43",
        "upload_time_iso_8601": "2019-07-29T12:29:43.367137Z",
        "url": "https://files.pythonhosted.org/packages/c3/9c/d10edddfc64f84cb48d5ec9d5a3f61ca19231541c9f9d5e027f614abbb62/flask_serialize-0.0.8-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c0552837236e8515b5355ba52c73959abadb599b495190c68841dcec693df5ee",
          "md5": "923e735ffd8a7043c159604f0acc361e",
          "sha256": "74cffd2a26a9a5fba7d75e287d50a49db4cca7a97499e8dd0ce6d088764c8e0c"
        },
        "downloads": -1,
        "filename": "flask_serialize-0.0.9-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "923e735ffd8a7043c159604f0acc361e",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 12845,
        "upload_time": "2019-07-30T02:07:40",
        "upload_time_iso_8601": "2019-07-30T02:07:40.878333Z",
        "url": "https://files.pythonhosted.org/packages/c0/55/2837236e8515b5355ba52c73959abadb599b495190c68841dcec693df5ee/flask_serialize-0.0.9-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5e1c72fb37eda51ccd4fbea81d62a15be80d14ea90addf7ded540fb678b6f841",
          "md5": "0edfb07782bd951bdecd6816fd14dc8e",
          "sha256": "3537f97950cbbb13b61ec2d5b0f1f939f3203aa799d8c345162c5f03b416c7ac"
        },
        "downloads": -1,
        "filename": "flask_serialize-1.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0edfb07782bd951bdecd6816fd14dc8e",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 13157,
        "upload_time": "2019-08-07T02:51:27",
        "upload_time_iso_8601": "2019-08-07T02:51:27.837959Z",
        "url": "https://files.pythonhosted.org/packages/5e/1c/72fb37eda51ccd4fbea81d62a15be80d14ea90addf7ded540fb678b6f841/flask_serialize-1.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c38873abeac986eb686f59ed158ecd33d752a4ef55db22d033a0af6f64b6c23c",
          "md5": "bf2e06e0061bb7eafaed96731e8119ef",
          "sha256": "b639c84494a6ce906f7805a7d514f48341833d69d32188427c5a40f9dccdf04b"
        },
        "downloads": -1,
        "filename": "flask_serialize-1.0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bf2e06e0061bb7eafaed96731e8119ef",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 13616,
        "upload_time": "2019-08-07T10:40:27",
        "upload_time_iso_8601": "2019-08-07T10:40:27.685653Z",
        "url": "https://files.pythonhosted.org/packages/c3/88/73abeac986eb686f59ed158ecd33d752a4ef55db22d033a0af6f64b6c23c/flask_serialize-1.0.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c0a28dee65107061e1ef1dcc70e6d65836ef58f45ecd9e51bef646a4f7281325",
          "md5": "fec22c64335dd7dc41e524bcb5a78632",
          "sha256": "79fa4eeba30cb3d760c7d39837d185452932152a7d6d918f7ced251d68bce8a9"
        },
        "downloads": -1,
        "filename": "flask_serialize-1.0.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fec22c64335dd7dc41e524bcb5a78632",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 13746,
        "upload_time": "2019-08-10T00:15:17",
        "upload_time_iso_8601": "2019-08-10T00:15:17.762206Z",
        "url": "https://files.pythonhosted.org/packages/c0/a2/8dee65107061e1ef1dcc70e6d65836ef58f45ecd9e51bef646a4f7281325/flask_serialize-1.0.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "55ddcdcc4ba9115dc3741b2cce2be8d221ff508275a8a4d0320e22d32885b546",
          "md5": "3c843b63033705a6bf48c238facc7c59",
          "sha256": "fd04b22679c564390f13d57596342e50bdc361c62e8a6c3f9e61f88eeee531b6"
        },
        "downloads": -1,
        "filename": "flask_serialize-1.0.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3c843b63033705a6bf48c238facc7c59",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 14185,
        "upload_time": "2019-08-11T10:50:53",
        "upload_time_iso_8601": "2019-08-11T10:50:53.845418Z",
        "url": "https://files.pythonhosted.org/packages/55/dd/cdcc4ba9115dc3741b2cce2be8d221ff508275a8a4d0320e22d32885b546/flask_serialize-1.0.4-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f1bb481a782a6b0568090ce02441034c7e526ef2e5498eed64ab96f5f72be99",
          "md5": "fa34aa43bd1fdc2776a7c8c2a9ffbfc8",
          "sha256": "f8629aa983a6314d9bd0d0dd8c06a099f66e1812416a466b0c6db9a908d705d9"
        },
        "downloads": -1,
        "filename": "flask_serialize-1.0.5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fa34aa43bd1fdc2776a7c8c2a9ffbfc8",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 14401,
        "upload_time": "2019-08-25T09:04:52",
        "upload_time_iso_8601": "2019-08-25T09:04:52.977024Z",
        "url": "https://files.pythonhosted.org/packages/9f/1b/b481a782a6b0568090ce02441034c7e526ef2e5498eed64ab96f5f72be99/flask_serialize-1.0.5-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cbb23d59c48b5948119c97a709ecbdc20d64255e0d406f01b7c736fc90eb7858",
          "md5": "edfe15ab3d6c4b9aa015e251f958e411",
          "sha256": "987b38737527c2cf08726bfd58a00db5c73cc07c45656b887796fcddf130a181"
        },
        "downloads": -1,
        "filename": "flask_serialize-1.0.6-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "edfe15ab3d6c4b9aa015e251f958e411",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 14406,
        "upload_time": "2019-09-11T10:59:00",
        "upload_time_iso_8601": "2019-09-11T10:59:00.378602Z",
        "url": "https://files.pythonhosted.org/packages/cb/b2/3d59c48b5948119c97a709ecbdc20d64255e0d406f01b7c736fc90eb7858/flask_serialize-1.0.6-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "32c0b9abbd15229cffbcc5c41b9be1afd526973a59f3a64881b7e957d2603ec2",
          "md5": "e7379b0d8fbbc8b2fd379d01b3f45a12",
          "sha256": "03dfd39401f0a72546228ef60008ca2a5ec67d6163b26b64c87bcf7f942aea5e"
        },
        "downloads": -1,
        "filename": "flask_serialize-1.0.7-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e7379b0d8fbbc8b2fd379d01b3f45a12",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 14713,
        "upload_time": "2019-10-12T01:51:23",
        "upload_time_iso_8601": "2019-10-12T01:51:23.741176Z",
        "url": "https://files.pythonhosted.org/packages/32/c0/b9abbd15229cffbcc5c41b9be1afd526973a59f3a64881b7e957d2603ec2/flask_serialize-1.0.7-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea4c35e0b4754b2c5ded3093b8d4701a520cdfc72125f6be33e0d6e3cf0cc0d8",
          "md5": "9af6b00105eeb51b250c370ea7cc9339",
          "sha256": "4da6adfa5a77e80cb2281b1200e681a405f5cde097cf58ad2806b88a31ad8620"
        },
        "downloads": -1,
        "filename": "flask_serialize-1.0.8-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9af6b00105eeb51b250c370ea7cc9339",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 15085,
        "upload_time": "2019-11-30T22:04:57",
        "upload_time_iso_8601": "2019-11-30T22:04:57.255357Z",
        "url": "https://files.pythonhosted.org/packages/ea/4c/35e0b4754b2c5ded3093b8d4701a520cdfc72125f6be33e0d6e3cf0cc0d8/flask_serialize-1.0.8-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "053703ddeb4cbc18509af221ddfab9946a6d241c8fe5d750835886cfd54a3f2a",
          "md5": "0fab697e648a028df50403f05c9da55a",
          "sha256": "4a0030902a9581badca2016fcf48de87b8476c345fb8b7448309e9242b18503c"
        },
        "downloads": -1,
        "filename": "flask_serialize-1.0.9-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0fab697e648a028df50403f05c9da55a",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 15381,
        "upload_time": "2019-12-14T21:21:49",
        "upload_time_iso_8601": "2019-12-14T21:21:49.998783Z",
        "url": "https://files.pythonhosted.org/packages/05/37/03ddeb4cbc18509af221ddfab9946a6d241c8fe5d750835886cfd54a3f2a/flask_serialize-1.0.9-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4aafad901218ff41a003271f6460fe84ab4361e823d92488b113b8cc809eac31",
          "md5": "7853e2d97329863f45c1e1a6e80ffa69",
          "sha256": "01eb17df6a7449aba6bc66f568d9cd447574a1b261cde18a46a7113af72f69d3"
        },
        "downloads": -1,
        "filename": "flask_serialize-1.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7853e2d97329863f45c1e1a6e80ffa69",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 15570,
        "upload_time": "2019-12-20T06:19:39",
        "upload_time_iso_8601": "2019-12-20T06:19:39.692609Z",
        "url": "https://files.pythonhosted.org/packages/4a/af/ad901218ff41a003271f6460fe84ab4361e823d92488b113b8cc809eac31/flask_serialize-1.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b4900f7622fe4499467e34272b3b5a27c62542256991231b2a8ebd9470a8bb2b",
          "md5": "4ea9670d53a6a15b5b72177882589e5f",
          "sha256": "eb7c1487f6a149631fc3cbd3696af4c1235b0ba2323fdf8d7d64ffe4845905ef"
        },
        "downloads": -1,
        "filename": "flask_serialize-1.1.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4ea9670d53a6a15b5b72177882589e5f",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 15688,
        "upload_time": "2019-12-26T20:40:35",
        "upload_time_iso_8601": "2019-12-26T20:40:35.698877Z",
        "url": "https://files.pythonhosted.org/packages/b4/90/0f7622fe4499467e34272b3b5a27c62542256991231b2a8ebd9470a8bb2b/flask_serialize-1.1.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "577186e725a4902b7c7a7dbfc67f7ccc4e53daaa0caacfd31e63b6f13bea95d3",
          "md5": "a5ab3c2c645ff4dad77f7e669fbf0592",
          "sha256": "74673a616dd258219d88e4f4f7ad7db0c9e28b01104d065fb4c9aac8db677669"
        },
        "downloads": -1,
        "filename": "flask_serialize-1.1.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a5ab3c2c645ff4dad77f7e669fbf0592",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 15795,
        "upload_time": "2020-01-09T11:59:20",
        "upload_time_iso_8601": "2020-01-09T11:59:20.635893Z",
        "url": "https://files.pythonhosted.org/packages/57/71/86e725a4902b7c7a7dbfc67f7ccc4e53daaa0caacfd31e63b6f13bea95d3/flask_serialize-1.1.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cedcadf1573b0667c98b0aab45de62fd15b6e75689cf7f78b42bb2ec9352afd0",
          "md5": "45aad6dfd27155f1c3623b83b264f92c",
          "sha256": "250a2f606618ad6c4dcd0c71fd2b4fbb18c6cf86599d65bb930d00c8caedc73e"
        },
        "downloads": -1,
        "filename": "flask_serialize-1.1.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "45aad6dfd27155f1c3623b83b264f92c",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 17882,
        "upload_time": "2020-01-31T23:41:39",
        "upload_time_iso_8601": "2020-01-31T23:41:39.854703Z",
        "url": "https://files.pythonhosted.org/packages/ce/dc/adf1573b0667c98b0aab45de62fd15b6e75689cf7f78b42bb2ec9352afd0/flask_serialize-1.1.4-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f556353920b2aaa5955bc2971ee4996d012262b63b0b3ab6e2d530fe6c27b241",
          "md5": "69776d4961bd60f55fa1757eaacd1b99",
          "sha256": "5ad5f7892c768dc22989b3fcdc8a0daa65c4041e7334d96d555809ad23ff3826"
        },
        "downloads": -1,
        "filename": "flask_serialize-1.1.5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "69776d4961bd60f55fa1757eaacd1b99",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 18133,
        "upload_time": "2020-02-01T03:53:39",
        "upload_time_iso_8601": "2020-02-01T03:53:39.944271Z",
        "url": "https://files.pythonhosted.org/packages/f5/56/353920b2aaa5955bc2971ee4996d012262b63b0b3ab6e2d530fe6c27b241/flask_serialize-1.1.5-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "31413f1b528d2a3386b184698723e873fc483b4002ee2d57c5d5cd1c5906b579",
          "md5": "a14d9e9916105266dbebd1c445cf249f",
          "sha256": "6be49ba90bf0dcf1e693ddfce7f4be5939305c647d07be91ddf8889102b1a2d4"
        },
        "downloads": -1,
        "filename": "flask-serialize-1.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "a14d9e9916105266dbebd1c445cf249f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 27653,
        "upload_time": "2020-02-01T03:53:41",
        "upload_time_iso_8601": "2020-02-01T03:53:41.918691Z",
        "url": "https://files.pythonhosted.org/packages/31/41/3f1b528d2a3386b184698723e873fc483b4002ee2d57c5d5cd1c5906b579/flask-serialize-1.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e0c0980864c10fd95181b9ca7455f5f87a7d4bcba8751a6327c6b54973f7aa5f",
          "md5": "22b75109f226f11b37e575d1dade90f0",
          "sha256": "a0ce1bdafe91a6da847a51b0ab387346d458ecc628a2554837c68f1d7cb589cd"
        },
        "downloads": -1,
        "filename": "flask_serialize-1.1.6-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "22b75109f226f11b37e575d1dade90f0",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 18510,
        "upload_time": "2020-02-11T10:45:15",
        "upload_time_iso_8601": "2020-02-11T10:45:15.238542Z",
        "url": "https://files.pythonhosted.org/packages/e0/c0/980864c10fd95181b9ca7455f5f87a7d4bcba8751a6327c6b54973f7aa5f/flask_serialize-1.1.6-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "69f77b25bdb347c6900fe9c03e77f7d5b63d39715cafaa7236fb25bb8a4f5010",
          "md5": "72661c5e9b6da4648b89f96c218af484",
          "sha256": "b78016f36beb93c12c8365b4035f3f28e4b9aa28f29d61eefa2fe06c4b840383"
        },
        "downloads": -1,
        "filename": "flask-serialize-1.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "72661c5e9b6da4648b89f96c218af484",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29260,
        "upload_time": "2020-02-11T10:45:17",
        "upload_time_iso_8601": "2020-02-11T10:45:17.677364Z",
        "url": "https://files.pythonhosted.org/packages/69/f7/7b25bdb347c6900fe9c03e77f7d5b63d39715cafaa7236fb25bb8a4f5010/flask-serialize-1.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fa2e179b7ac58f7c51c93a04d767c17fe344bb7d15b731a6cef5f4e9f15307d5",
          "md5": "f3ad0959ed6dc1bae88a61ffb4063b58",
          "sha256": "a57520fe381cd9308a9094c9afca458d1b49305148a75ebdc0dbc7cceba46e5d"
        },
        "downloads": -1,
        "filename": "flask_serialize-1.1.8-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f3ad0959ed6dc1bae88a61ffb4063b58",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 19346,
        "upload_time": "2020-02-15T05:48:40",
        "upload_time_iso_8601": "2020-02-15T05:48:40.233962Z",
        "url": "https://files.pythonhosted.org/packages/fa/2e/179b7ac58f7c51c93a04d767c17fe344bb7d15b731a6cef5f4e9f15307d5/flask_serialize-1.1.8-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d3ed09fafa804322bcd78728ca9f9a233d87e644656c7d12e4938bffd1521347",
          "md5": "5156930ae73e5487081c63389044dd29",
          "sha256": "cc21165815d973068288a5e6cabaa2136d1e09484d66b591a9f2a4e87e4ef2b6"
        },
        "downloads": -1,
        "filename": "flask-serialize-1.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "5156930ae73e5487081c63389044dd29",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 31324,
        "upload_time": "2020-02-15T05:48:42",
        "upload_time_iso_8601": "2020-02-15T05:48:42.605825Z",
        "url": "https://files.pythonhosted.org/packages/d3/ed/09fafa804322bcd78728ca9f9a233d87e644656c7d12e4938bffd1521347/flask-serialize-1.1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4d3b8c7330c20e6a685712d29c346419ea00d3e51ebca7b89521f18df39b428d",
          "md5": "63a77fdcf26763f7f6feb2c9f53fd880",
          "sha256": "d0edf9997ed1c20749620fdfe56143de12b0b2384ab155cbb06406c158652f7d"
        },
        "downloads": -1,
        "filename": "flask_serialize-1.1.9-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "63a77fdcf26763f7f6feb2c9f53fd880",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 19374,
        "upload_time": "2020-02-25T09:45:21",
        "upload_time_iso_8601": "2020-02-25T09:45:21.118775Z",
        "url": "https://files.pythonhosted.org/packages/4d/3b/8c7330c20e6a685712d29c346419ea00d3e51ebca7b89521f18df39b428d/flask_serialize-1.1.9-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a09dbe5c6af228b674540d3257f69967b08f54d6d421f83f0fe8efd6cdefbf2b",
          "md5": "990e40929ef1bafb31caf77b06b49118",
          "sha256": "ab3c43f17a0ff3692cd61e4c06319c07332f3404b3616c6909cecba3e2d145d2"
        },
        "downloads": -1,
        "filename": "flask-serialize-1.1.9.tar.gz",
        "has_sig": false,
        "md5_digest": "990e40929ef1bafb31caf77b06b49118",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 31894,
        "upload_time": "2020-02-25T09:45:24",
        "upload_time_iso_8601": "2020-02-25T09:45:24.423543Z",
        "url": "https://files.pythonhosted.org/packages/a0/9d/be5c6af228b674540d3257f69967b08f54d6d421f83f0fe8efd6cdefbf2b/flask-serialize-1.1.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "203f87b15d90eff4859b9fd1e20f3f046b660566ffa66bf9849211ac3e1b98e9",
          "md5": "3a336001d0c84e0e25d7a8ee73773708",
          "sha256": "89cd01c6decf9570860a69bb42ffef16992d0fb3f6b395a0b7acdf8d42370e27"
        },
        "downloads": -1,
        "filename": "flask_serialize-1.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3a336001d0c84e0e25d7a8ee73773708",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 19822,
        "upload_time": "2020-08-07T05:13:20",
        "upload_time_iso_8601": "2020-08-07T05:13:20.030783Z",
        "url": "https://files.pythonhosted.org/packages/20/3f/87b15d90eff4859b9fd1e20f3f046b660566ffa66bf9849211ac3e1b98e9/flask_serialize-1.2.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2224b53e6003b0ca23f2079f53703a883ca04b59285d249b8cd37bb368d2dfe1",
          "md5": "d93582e0236df7da210554dab7d03a8c",
          "sha256": "45decf9a2549d14786112bdae1b18728e9034b888d740236362ea2e384b78b87"
        },
        "downloads": -1,
        "filename": "flask-serialize-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d93582e0236df7da210554dab7d03a8c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 32527,
        "upload_time": "2020-08-07T05:13:22",
        "upload_time_iso_8601": "2020-08-07T05:13:22.401323Z",
        "url": "https://files.pythonhosted.org/packages/22/24/b53e6003b0ca23f2079f53703a883ca04b59285d249b8cd37bb368d2dfe1/flask-serialize-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ddd885757223dc271cf452e217d9fcedea326a78f6f4098635c9700f8f9d026b",
          "md5": "1f66544575b2d9729ee0d15e41edd9e7",
          "sha256": "14ffd954ebd19a58fb6693160fc3fdf63d1ac19edcee0499a54311bd7ec5c573"
        },
        "downloads": -1,
        "filename": "flask_serialize-1.2.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1f66544575b2d9729ee0d15e41edd9e7",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 20002,
        "upload_time": "2020-08-09T00:10:33",
        "upload_time_iso_8601": "2020-08-09T00:10:33.046013Z",
        "url": "https://files.pythonhosted.org/packages/dd/d8/85757223dc271cf452e217d9fcedea326a78f6f4098635c9700f8f9d026b/flask_serialize-1.2.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8bc28a6e86579eeff1008b5c4851ee81ced7a1c8ad44ff8e42bb94b3eb16c280",
          "md5": "0de4e93d803959fd317b277bfd711a00",
          "sha256": "400f4029df3dfa4cf6cd75a175462fcbef17a45f7dbbd4778ecec51088cf2eec"
        },
        "downloads": -1,
        "filename": "flask-serialize-1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0de4e93d803959fd317b277bfd711a00",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 32888,
        "upload_time": "2020-08-09T00:10:35",
        "upload_time_iso_8601": "2020-08-09T00:10:35.289818Z",
        "url": "https://files.pythonhosted.org/packages/8b/c2/8a6e86579eeff1008b5c4851ee81ced7a1c8ad44ff8e42bb94b3eb16c280/flask-serialize-1.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c5c886715f8813debd333cf90511ddbb8a3cea4bf10cf333ad2c2f1a316a1c28",
          "md5": "e5e2ceae01c352f920c5e63c62528268",
          "sha256": "aadb4ecbe828c6c5fece7d05ee0fc1b4e5e29c6278f9b2631403a314cfaba9a4"
        },
        "downloads": -1,
        "filename": "flask_serialize-1.3.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e5e2ceae01c352f920c5e63c62528268",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 20911,
        "upload_time": "2020-08-29T02:27:10",
        "upload_time_iso_8601": "2020-08-29T02:27:10.996860Z",
        "url": "https://files.pythonhosted.org/packages/c5/c8/86715f8813debd333cf90511ddbb8a3cea4bf10cf333ad2c2f1a316a1c28/flask_serialize-1.3.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1722cee9e161cca9d6725e3022b17f839c67403bd382ff0572f575469f6c9971",
          "md5": "6631b6da3e878793f7d1b69883bd6d12",
          "sha256": "4c9171c998cbabbd98692724039ec07558f97baddcab5d98f94da1d1f33fbd5b"
        },
        "downloads": -1,
        "filename": "flask-serialize-1.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6631b6da3e878793f7d1b69883bd6d12",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 37320,
        "upload_time": "2020-08-29T02:27:12",
        "upload_time_iso_8601": "2020-08-29T02:27:12.962583Z",
        "url": "https://files.pythonhosted.org/packages/17/22/cee9e161cca9d6725e3022b17f839c67403bd382ff0572f575469f6c9971/flask-serialize-1.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eb1e01ae5bd50ba16bda0d10bfd782b61ec5cb56e71ddc92053ea95d118ec5f4",
          "md5": "b143453f3e484a19f51e7ca9d09d578f",
          "sha256": "b909590457df47db76bc2105de7e93f72d0280b01e2eca8b7e4b685169c52706"
        },
        "downloads": -1,
        "filename": "flask_serialize-1.3.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b143453f3e484a19f51e7ca9d09d578f",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 21128,
        "upload_time": "2020-08-29T08:41:00",
        "upload_time_iso_8601": "2020-08-29T08:41:00.639925Z",
        "url": "https://files.pythonhosted.org/packages/eb/1e/01ae5bd50ba16bda0d10bfd782b61ec5cb56e71ddc92053ea95d118ec5f4/flask_serialize-1.3.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "477ef22e12dabfd3b6dd1e8b152a9f146cf423d4c9bb0d735aec826697f65bc3",
          "md5": "aa6986243a99fc9fc9ad3cd0d21d982f",
          "sha256": "9c270d575ff93f13b0e309c82e463e4be0a5547bc3ab5d826398d794cd498283"
        },
        "downloads": -1,
        "filename": "flask-serialize-1.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "aa6986243a99fc9fc9ad3cd0d21d982f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 38304,
        "upload_time": "2020-08-29T08:41:02",
        "upload_time_iso_8601": "2020-08-29T08:41:02.647855Z",
        "url": "https://files.pythonhosted.org/packages/47/7e/f22e12dabfd3b6dd1e8b152a9f146cf423d4c9bb0d735aec826697f65bc3/flask-serialize-1.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa9696fa9f7fe0bf3adbe8484faa6c831fb38f07a45927acbefe7193d609090e",
          "md5": "d94e4a638b738e1c93fb7d59c262eece",
          "sha256": "de9eb65d82012fdfeb0e943b27e48db2706b54cc2dcb42afdc5571938c27038d"
        },
        "downloads": -1,
        "filename": "flask_serialize-1.4.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d94e4a638b738e1c93fb7d59c262eece",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 21327,
        "upload_time": "2020-08-31T12:48:35",
        "upload_time_iso_8601": "2020-08-31T12:48:35.798418Z",
        "url": "https://files.pythonhosted.org/packages/aa/96/96fa9f7fe0bf3adbe8484faa6c831fb38f07a45927acbefe7193d609090e/flask_serialize-1.4.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a0685f93ef691682837b963a0d2624b91a7f4cc20b253f1bc560769622e42bcb",
          "md5": "6b21530f22cfd445af0f1849f5d49bbc",
          "sha256": "f8110ff799d81db6f76b8bdb01d05920528b48da30edbcd76f800c4a1367336f"
        },
        "downloads": -1,
        "filename": "flask-serialize-1.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6b21530f22cfd445af0f1849f5d49bbc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 39668,
        "upload_time": "2020-08-31T12:48:37",
        "upload_time_iso_8601": "2020-08-31T12:48:37.850778Z",
        "url": "https://files.pythonhosted.org/packages/a0/68/5f93ef691682837b963a0d2624b91a7f4cc20b253f1bc560769622e42bcb/flask-serialize-1.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cc51f2e13e8a18f246c50156b1431a9fb75d9ecffaa91d20d3bf3ceab4e53584",
          "md5": "ea896592ce90daa8194eb3ef36b342d5",
          "sha256": "d2a2a178efc4479582e80f77f65261754ff51f13d1b41931dadaece1b31932f6"
        },
        "downloads": -1,
        "filename": "flask_serialize-1.4.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ea896592ce90daa8194eb3ef36b342d5",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 21493,
        "upload_time": "2021-02-14T07:44:40",
        "upload_time_iso_8601": "2021-02-14T07:44:40.074881Z",
        "url": "https://files.pythonhosted.org/packages/cc/51/f2e13e8a18f246c50156b1431a9fb75d9ecffaa91d20d3bf3ceab4e53584/flask_serialize-1.4.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1a6f5eb19c25345d09c27be69664b7baa045fdc009ed05e30babb91d4a2cc777",
          "md5": "e994d193b374652bd0f99fb12512f6d0",
          "sha256": "74c2cc965f8000d7ab1c0d863c438adab8e40760a9aa69b3872f80700f4cc77d"
        },
        "downloads": -1,
        "filename": "flask-serialize-1.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e994d193b374652bd0f99fb12512f6d0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 40065,
        "upload_time": "2021-02-14T07:44:41",
        "upload_time_iso_8601": "2021-02-14T07:44:41.865113Z",
        "url": "https://files.pythonhosted.org/packages/1a/6f/5eb19c25345d09c27be69664b7baa045fdc009ed05e30babb91d4a2cc777/flask-serialize-1.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e0cdf1bce42c5d2eed03acfd86e9b0c22bc17c31e398f79ac58fa429a76b82f4",
          "md5": "e66ac530fa12f5558a475469502087cf",
          "sha256": "cbf4e790c469a848a5f34f63c7df54469d17f25d64cc8753dd0e04b91c42fb78"
        },
        "downloads": -1,
        "filename": "flask_serialize-1.4.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e66ac530fa12f5558a475469502087cf",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 21577,
        "upload_time": "2021-02-20T06:52:10",
        "upload_time_iso_8601": "2021-02-20T06:52:10.322477Z",
        "url": "https://files.pythonhosted.org/packages/e0/cd/f1bce42c5d2eed03acfd86e9b0c22bc17c31e398f79ac58fa429a76b82f4/flask_serialize-1.4.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c14874edc7374a5632030f2be670af354acea112dcc9dfcb61b7e5501b13c110",
          "md5": "8eeaafe4a572156b5b35e2dff88e5273",
          "sha256": "2e81f50245924d63a66e4c6773e884e63dbb6d1282e40f43070fe87a0e947644"
        },
        "downloads": -1,
        "filename": "flask-serialize-1.4.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8eeaafe4a572156b5b35e2dff88e5273",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 40268,
        "upload_time": "2021-02-20T06:52:12",
        "upload_time_iso_8601": "2021-02-20T06:52:12.411594Z",
        "url": "https://files.pythonhosted.org/packages/c1/48/74edc7374a5632030f2be670af354acea112dcc9dfcb61b7e5501b13c110/flask-serialize-1.4.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "802092a1453f92d8a5e1dd29813fcd2ff4bc432766269680313ec647ed51859c",
          "md5": "bc98a9570fe3aafed6036294001f41fe",
          "sha256": "2ba53bd0bf5d29e0a6ab5322971e01a5b740c81655108cae3c883ec5230772fc"
        },
        "downloads": -1,
        "filename": "flask_serialize-1.5.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bc98a9570fe3aafed6036294001f41fe",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 22488,
        "upload_time": "2021-02-26T06:05:18",
        "upload_time_iso_8601": "2021-02-26T06:05:18.294786Z",
        "url": "https://files.pythonhosted.org/packages/80/20/92a1453f92d8a5e1dd29813fcd2ff4bc432766269680313ec647ed51859c/flask_serialize-1.5.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f2bb40f4a20bbc10ed0c3a4852c5709dfcab68228c70f83ce75d2b109cb4dac",
          "md5": "69e0ec84c79e13f60b84dad90c8d14aa",
          "sha256": "5cfa1bc8dca0b4df07d53e839e07f0b7e2fb8dd5c1dd574af628b5d145e01a15"
        },
        "downloads": -1,
        "filename": "flask-serialize-1.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "69e0ec84c79e13f60b84dad90c8d14aa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 42342,
        "upload_time": "2021-02-26T06:05:21",
        "upload_time_iso_8601": "2021-02-26T06:05:21.907783Z",
        "url": "https://files.pythonhosted.org/packages/9f/2b/b40f4a20bbc10ed0c3a4852c5709dfcab68228c70f83ce75d2b109cb4dac/flask-serialize-1.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "07cfed4c01f961fd86abfd71811893af741be384a673fc34403b4a25b5622e91",
          "md5": "b23e094b5bbe26358e942acc37f2a176",
          "sha256": "ef0702b5099e5ca7e8ce0ccd247dafc44ce33c41127403361ce2575ac45d9cc5"
        },
        "downloads": -1,
        "filename": "flask_serialize-1.5.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b23e094b5bbe26358e942acc37f2a176",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 22547,
        "upload_time": "2021-03-20T07:59:29",
        "upload_time_iso_8601": "2021-03-20T07:59:29.179896Z",
        "url": "https://files.pythonhosted.org/packages/07/cf/ed4c01f961fd86abfd71811893af741be384a673fc34403b4a25b5622e91/flask_serialize-1.5.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "742ed615796b32ab2c4550696185361c20c873291c569b336dedd6e79ba99cd2",
          "md5": "f70ad37fe89b3a908e9dcbc864c69070",
          "sha256": "740f0c703267747e78e309814ee32f14d5fefd73974e423fef26cd4ce49bd749"
        },
        "downloads": -1,
        "filename": "flask-serialize-1.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f70ad37fe89b3a908e9dcbc864c69070",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 42516,
        "upload_time": "2021-03-20T07:59:31",
        "upload_time_iso_8601": "2021-03-20T07:59:31.145967Z",
        "url": "https://files.pythonhosted.org/packages/74/2e/d615796b32ab2c4550696185361c20c873291c569b336dedd6e79ba99cd2/flask-serialize-1.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0117d22775e1504edba07234439679839d05a0ea4c2cfea26ccf0cf74d2d9753",
          "md5": "7ad9aa8ebf6381d3cadb7df09fdab6a0",
          "sha256": "003797473c91073f2fb00dcf652e283bbd9cef18900b6265d162a2ad33399e2f"
        },
        "downloads": -1,
        "filename": "flask_serialize-1.5.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7ad9aa8ebf6381d3cadb7df09fdab6a0",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 22814,
        "upload_time": "2021-06-26T02:59:02",
        "upload_time_iso_8601": "2021-06-26T02:59:02.653508Z",
        "url": "https://files.pythonhosted.org/packages/01/17/d22775e1504edba07234439679839d05a0ea4c2cfea26ccf0cf74d2d9753/flask_serialize-1.5.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4ec0a81af80e0a8a18bf68ddcadf865a07dd2168d53ba98e81c13ca204fbf2fb",
          "md5": "aec2b380bdc93a6eb5e52391ed9cdf4f",
          "sha256": "47514b6f0aab33a790f55b86656d6c5cec0f461c372f87d437bbbade58956986"
        },
        "downloads": -1,
        "filename": "flask-serialize-1.5.2.tar.gz",
        "has_sig": false,
        "md5_digest": "aec2b380bdc93a6eb5e52391ed9cdf4f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 47179,
        "upload_time": "2021-06-26T02:59:04",
        "upload_time_iso_8601": "2021-06-26T02:59:04.839979Z",
        "url": "https://files.pythonhosted.org/packages/4e/c0/a81af80e0a8a18bf68ddcadf865a07dd2168d53ba98e81c13ca204fbf2fb/flask-serialize-1.5.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ce1e0761f096ea76b71ccba17877dde47cbb63af0b81047b25ec90f44a8cfe31",
          "md5": "81190899e764952ea45d79174c5c89f1",
          "sha256": "76b1b37d33637d2a1119c956b6c9582a6f2046e7ae93a0a2bf0b6c794dfd6571"
        },
        "downloads": -1,
        "filename": "flask_serialize-2.0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "81190899e764952ea45d79174c5c89f1",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 23312,
        "upload_time": "2021-08-21T04:03:56",
        "upload_time_iso_8601": "2021-08-21T04:03:56.680633Z",
        "url": "https://files.pythonhosted.org/packages/ce/1e/0761f096ea76b71ccba17877dde47cbb63af0b81047b25ec90f44a8cfe31/flask_serialize-2.0.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e83bf80a0b5896c50aae7ab3d943c20868053be9f7a9618d60b0d99c75466b6a",
          "md5": "40b72b6289e8eda0b575a83f6a8a7454",
          "sha256": "f445b0b1b60ab239400d73e2c94da9dcb4799291cc60cc673f6c728ea767e87e"
        },
        "downloads": -1,
        "filename": "flask-serialize-2.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "40b72b6289e8eda0b575a83f6a8a7454",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 49323,
        "upload_time": "2021-08-21T04:03:58",
        "upload_time_iso_8601": "2021-08-21T04:03:58.824242Z",
        "url": "https://files.pythonhosted.org/packages/e8/3b/f80a0b5896c50aae7ab3d943c20868053be9f7a9618d60b0d99c75466b6a/flask-serialize-2.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e166aa060467a36030f0aa6ed4b9213d180ddf22ee738035127d69e0a85fbeb6",
          "md5": "dcd3561717b592a3e5f59800251e9de8",
          "sha256": "dadc9e93e4861c8506157907feba593e5705dc2f7e9662ae1e34c39333c7a7e0"
        },
        "downloads": -1,
        "filename": "flask_serialize-2.0.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dcd3561717b592a3e5f59800251e9de8",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 23458,
        "upload_time": "2022-01-30T04:06:43",
        "upload_time_iso_8601": "2022-01-30T04:06:43.915681Z",
        "url": "https://files.pythonhosted.org/packages/e1/66/aa060467a36030f0aa6ed4b9213d180ddf22ee738035127d69e0a85fbeb6/flask_serialize-2.0.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fac04bf42492850350a68a5893ae839f84ae934b68affc494945646ccb5d80dc",
          "md5": "38c75ab5d332591db078f736bd61101f",
          "sha256": "88c6d716741816e219865585e5337f13882b99e75035b81ac51787c5189eded2"
        },
        "downloads": -1,
        "filename": "flask-serialize-2.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "38c75ab5d332591db078f736bd61101f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 48844,
        "upload_time": "2022-01-30T04:06:46",
        "upload_time_iso_8601": "2022-01-30T04:06:46.124447Z",
        "url": "https://files.pythonhosted.org/packages/fa/c0/4bf42492850350a68a5893ae839f84ae934b68affc494945646ccb5d80dc/flask-serialize-2.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "79fac6a77af0e6f67752492055fbc307f9fa1b619cfa579abe310b50a20a64fa",
          "md5": "73b3a085aa7117b69eec016c8a3a2290",
          "sha256": "bc16074da6f442b6d0a58965735e69d1f99d5195e386d0cfb3859b37bbcad94a"
        },
        "downloads": -1,
        "filename": "flask_serialize-2.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "73b3a085aa7117b69eec016c8a3a2290",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 24066,
        "upload_time": "2022-08-10T09:40:43",
        "upload_time_iso_8601": "2022-08-10T09:40:43.683476Z",
        "url": "https://files.pythonhosted.org/packages/79/fa/c6a77af0e6f67752492055fbc307f9fa1b619cfa579abe310b50a20a64fa/flask_serialize-2.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e8dd2e61922608ab13798c6c1f8dc72d105b5a45a507f4ce207dafdf93c389f3",
          "md5": "0d20be6e73b73b86895ff227edbfa935",
          "sha256": "201ea75c38a168060aed5a6d73004927e98105913f81cae0b5500735e84b3410"
        },
        "downloads": -1,
        "filename": "flask-serialize-2.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0d20be6e73b73b86895ff227edbfa935",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 49776,
        "upload_time": "2022-08-10T09:40:46",
        "upload_time_iso_8601": "2022-08-10T09:40:46.369635Z",
        "url": "https://files.pythonhosted.org/packages/e8/dd/2e61922608ab13798c6c1f8dc72d105b5a45a507f4ce207dafdf93c389f3/flask-serialize-2.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa55e3ea8fd1f6c18cf636352fcb27f6d7d280fc3f01e096d1a6489205d2e231",
          "md5": "cb76a96d0fa9c3c0a9a666938cde8ab4",
          "sha256": "dcf7babff80eba1a1ea11db0f2c4eae4729600553b325d281f5de7ba8065ae6b"
        },
        "downloads": -1,
        "filename": "flask_serialize-2.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cb76a96d0fa9c3c0a9a666938cde8ab4",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 24087,
        "upload_time": "2022-09-04T06:13:26",
        "upload_time_iso_8601": "2022-09-04T06:13:26.170402Z",
        "url": "https://files.pythonhosted.org/packages/aa/55/e3ea8fd1f6c18cf636352fcb27f6d7d280fc3f01e096d1a6489205d2e231/flask_serialize-2.1.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "750989d1ef71dd4bc5c5af7458414c10dfd4a171400b40ff70c8cf8a2ca2aaa1",
          "md5": "3d26f9dc4e53eca7c4a0d987d2cd61f3",
          "sha256": "f0f5abda8d60b9eec010be44b86f3ed197eae2163d82a42f0b40b37ad1066bcf"
        },
        "downloads": -1,
        "filename": "flask-serialize-2.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3d26f9dc4e53eca7c4a0d987d2cd61f3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 49940,
        "upload_time": "2022-09-04T06:13:27",
        "upload_time_iso_8601": "2022-09-04T06:13:27.884102Z",
        "url": "https://files.pythonhosted.org/packages/75/09/89d1ef71dd4bc5c5af7458414c10dfd4a171400b40ff70c8cf8a2ca2aaa1/flask-serialize-2.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9c9a90b438aa793f916d3a9a3aecd10c0d6b1f5e67d8f2c186700cf8c05a30b0",
          "md5": "fb0e90c2b1c050d22bd13df976ec4d20",
          "sha256": "2a647706320970277ee69b95a065a9f260d5b3f584f9da92b252038521b4e967"
        },
        "downloads": -1,
        "filename": "flask_serialize-2.1.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fb0e90c2b1c050d22bd13df976ec4d20",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 24213,
        "upload_time": "2022-11-30T02:51:44",
        "upload_time_iso_8601": "2022-11-30T02:51:44.394952Z",
        "url": "https://files.pythonhosted.org/packages/9c/9a/90b438aa793f916d3a9a3aecd10c0d6b1f5e67d8f2c186700cf8c05a30b0/flask_serialize-2.1.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e5106dc6639ae1824588297dcbb702a54eda6adb561e96761d963aa4245c9394",
          "md5": "b248b558bb46e92967d801fcc211bc6b",
          "sha256": "0f2af6627df67573d08e1bf03a9ecae192e288be871fe7d07c4046142585b772"
        },
        "downloads": -1,
        "filename": "flask-serialize-2.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b248b558bb46e92967d801fcc211bc6b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 50421,
        "upload_time": "2022-11-30T02:51:46",
        "upload_time_iso_8601": "2022-11-30T02:51:46.954783Z",
        "url": "https://files.pythonhosted.org/packages/e5/10/6dc6639ae1824588297dcbb702a54eda6adb561e96761d963aa4245c9394/flask-serialize-2.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5cff0f97acd88a265e1ffc08f8420155ff4e54c2d38ffce923555b6684eb9087",
          "md5": "f69ac43fc382bea76eae78f641dab1b2",
          "sha256": "6d22bc11490fc555996274d0f8b298964fb928680adcfc8baefca0f184833826"
        },
        "downloads": -1,
        "filename": "flask_serialize-2.1.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f69ac43fc382bea76eae78f641dab1b2",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 24254,
        "upload_time": "2023-03-05T10:05:19",
        "upload_time_iso_8601": "2023-03-05T10:05:19.512117Z",
        "url": "https://files.pythonhosted.org/packages/5c/ff/0f97acd88a265e1ffc08f8420155ff4e54c2d38ffce923555b6684eb9087/flask_serialize-2.1.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "433a988cd32081270b710f6cb4ddf3e594d254ba7bcb1ff8483c958a051aad74",
          "md5": "0484028272494bdefbadeeadc739d7e4",
          "sha256": "a7e5830ebbdcfa9a7573b0a7859ea361347f3845887875e4f09a6c352826689d"
        },
        "downloads": -1,
        "filename": "flask-serialize-2.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "0484028272494bdefbadeeadc739d7e4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 50532,
        "upload_time": "2023-03-05T10:05:21",
        "upload_time_iso_8601": "2023-03-05T10:05:21.478543Z",
        "url": "https://files.pythonhosted.org/packages/43/3a/988cd32081270b710f6cb4ddf3e594d254ba7bcb1ff8483c958a051aad74/flask-serialize-2.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5cff0f97acd88a265e1ffc08f8420155ff4e54c2d38ffce923555b6684eb9087",
        "md5": "f69ac43fc382bea76eae78f641dab1b2",
        "sha256": "6d22bc11490fc555996274d0f8b298964fb928680adcfc8baefca0f184833826"
      },
      "downloads": -1,
      "filename": "flask_serialize-2.1.3-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f69ac43fc382bea76eae78f641dab1b2",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 24254,
      "upload_time": "2023-03-05T10:05:19",
      "upload_time_iso_8601": "2023-03-05T10:05:19.512117Z",
      "url": "https://files.pythonhosted.org/packages/5c/ff/0f97acd88a265e1ffc08f8420155ff4e54c2d38ffce923555b6684eb9087/flask_serialize-2.1.3-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "433a988cd32081270b710f6cb4ddf3e594d254ba7bcb1ff8483c958a051aad74",
        "md5": "0484028272494bdefbadeeadc739d7e4",
        "sha256": "a7e5830ebbdcfa9a7573b0a7859ea361347f3845887875e4f09a6c352826689d"
      },
      "downloads": -1,
      "filename": "flask-serialize-2.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "0484028272494bdefbadeeadc739d7e4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 50532,
      "upload_time": "2023-03-05T10:05:21",
      "upload_time_iso_8601": "2023-03-05T10:05:21.478543Z",
      "url": "https://files.pythonhosted.org/packages/43/3a/988cd32081270b710f6cb4ddf3e594d254ba7bcb1ff8483c958a051aad74/flask-serialize-2.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}