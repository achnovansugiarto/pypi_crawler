{
  "info": {
    "author": "PAB",
    "author_email": "pierre-antoine.bannier@polytechnique.edu",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "<h1 align=\"center\">\n  <br>\n  nanograd\n  <br>\n</h1>\n\n<h4 align=\"center\">A lightweight deep learning framework.</h4>\n\n<p align=\"center\">\n  <img src=\"docs/badge.svg\">\n</p>\n\n<p align=\"center\">\n  <a href=\"#description\">Description</a> •\n  <a href=\"#features\">Features</a> •\n  <a href=\"#todo\">TODO</a> •\n  <a href=\"#license\">License</a>\n</p>\n\n\n## Description\n\nAfter verification, nanograd is not a city in Russia...\n\nHowever, it is a PyTorch-like lightweight deep learning framework. Use it to implement any DL algo you want with little boilerplate code.\n\nEssentially, Nanograd is a continuously updated project. The goal is to implement as many features as possible while using as few abstraction layers as possible (only Numpy functions are allowed). Any contribution to the repo is welcome.\n\nThe library has a built-in auto-differentiation engine that dynamically builds a computational graph. The framework is built with basic features to train neural nets: basic ops, layers, weight initializers, optimizers and loss functions. Additional tools are developed to visualize your network: computational\ngraph visualizers or activation map visualizers (SOON!).\n\nThe repo will be updated regularly with new features and examples. \n\nInspired from <a href=\"https://github.com/geohot/tinygrad\">geohot's tinygrad</a>.\n\n\n## Features\n\n- PyTorch-like autodifferentiation engine (dynamically constructed computational graph)\n- Weight initialization: Glorot uniform, Glorot normal, Kaiming uniform, Kaiming normal\n- Activations: ReLU, Sigmoid, tanh, Swish, ELU, LeakyReLU\n- Convolutions: Conv1d, Conv2d, MaxPool2d, AvgPool2d\n- Layers: Linear, BatchNorm1d, BatchNorm2d, Flatten, Dropout\n- Optimizers: SGD, Adam, AdamW\n- Loss: CrossEntropyLoss, Mean squared error\n- Computational graph visualizer (see example)\n\n### A quick side-by-side comparison between PyTorch and Nanograd for tensor computations\n\n#### Basic tensor calculations\n\n**PyTorch**\n\n```python\na = torch.empty((30, 30, 2))\n         .normal_(mean=3, std=4)\nb = torch.empty((30, 30, 1))\n         .normal_(mean=10, std=2)\n\na.requires_grad = True\nb.requires_grad = True\n\nc = a + b\nd = c.relu()\ne = c.sigmoid()\nf = d * e\n\nf.sum().backward()\n\nprint(a.grad)\nprint(b.grad)\n```\n\n**Nanograd**\n\n```python\na = Tensor.normal(3, 4, (30, 30, 2), requires_grad=True)\nb = Tensor.normal(10, 2, (30, 30, 1), requires_grad=True)\n\nc = a + b\nd = c.relu()\ne = c.sigmoid()\nf = d * e\n\nf.backward()\n\nprint(a.grad)\nprint(b.grad)\n```\n\n\n### Training a CNN on MNIST\n\n```python\n\n# Model, loss & optim\nmodel = CNN()\nloss_function = CrossEntropyLoss()\noptim = SGD(model.parameters(), lr=0.01, momentum=0)\n\n# Training loop\nBS = 128\nlosses, accuracies = [], []\nSTEPS = 1000\n\nfor i in tqdm(range(STEPS), total=STEPS):\n  samp = np.random.randint(0, X_train.shape[0], size=(BS))\n  X = tensor.Tensor(X_train[samp])\n  Y = tensor.Tensor(Y_train[samp])\n\n  optim.zero_grad()\n\n  out = model(X)\n\n  cat = out.data.argmax(1)\n  accuracy = (cat == Y.data).mean()\n\n  loss = loss_function(out, Y)\n  loss.backward()\n\n  optim.step()\n\n  loss, accuracy = float(loss.data), float(accuracy)\n  losses.append(loss)\n  accuracies.append(accuracy)\n\nY_test_preds = model(tensor.Tensor(X_test)).data.argmax(1)\nprint((Y_test == Y_test_preds).mean())\n\n```\n\n\n### Visualizing a computational graph \n\nVisualizing a computational graph has never been that easy. Just call **plot_forward** and **plot_backward**.\n\n```python\nf.plot_forward()\n```\n\n<p align=\"center\">\n  <img src=\"docs/forward_graph.png\">\n</p>\n\n\n```python\nf.plot_backward()\n```\n\n<p align=\"center\">\n  <img src=\"docs/backward_graph.png\">\n</p>\n\n## TODO\n\n- Solve batchnorm issues\n- Add GRU, LSTM cells\n- Code example with EfficientNet-B0, CIFAR-10, MNIST\n- Code a transformer with Nanograd and train it on GPU\n\n\n## License\n\nMIT\n\n---\n\n> GitHub [@PABannier](https://github.com/PABannier) &nbsp;&middot;&nbsp;\n> Twitter [@el_PA_B](https://twitter.com/el_PA_B)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/PABannier/nanograd",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "nanograd",
    "package_url": "https://pypi.org/project/nanograd/",
    "platform": "",
    "project_url": "https://pypi.org/project/nanograd/",
    "project_urls": {
      "Homepage": "https://github.com/PABannier/nanograd"
    },
    "release_url": "https://pypi.org/project/nanograd/1.0.4/",
    "requires_dist": [
      "numpy",
      "matplotlib",
      "graphviz",
      "pyopencl",
      "mako"
    ],
    "requires_python": "",
    "summary": "A lightweight deep learning framework",
    "version": "1.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9374707,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "90e5de8dc698ded06305fdc0b295eda3f95ce2d1a9d532b534e45ea4456d94cc",
          "md5": "c94ddd026988fb320ce70d58d8e0b4cb",
          "sha256": "af2926f37a8612601ce409620858aceca6515305fb04206dc15e614e39655024"
        },
        "downloads": -1,
        "filename": "nanograd-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c94ddd026988fb320ce70d58d8e0b4cb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 31380,
        "upload_time": "2021-01-29T16:57:39",
        "upload_time_iso_8601": "2021-01-29T16:57:39.468324Z",
        "url": "https://files.pythonhosted.org/packages/90/e5/de8dc698ded06305fdc0b295eda3f95ce2d1a9d532b534e45ea4456d94cc/nanograd-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d48aa9a70051fec1540a7bd1b485fb00d84437008ed537b47835cafb9d98eb28",
          "md5": "7cc3315c96c926bc0dfb2e98f924aa51",
          "sha256": "8c2432bb043036dcace2d0e6c1f00a1f3f77bc522d32ff68b3986744370dff59"
        },
        "downloads": -1,
        "filename": "nanograd-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7cc3315c96c926bc0dfb2e98f924aa51",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29858,
        "upload_time": "2021-01-29T16:57:40",
        "upload_time_iso_8601": "2021-01-29T16:57:40.757246Z",
        "url": "https://files.pythonhosted.org/packages/d4/8a/a9a70051fec1540a7bd1b485fb00d84437008ed537b47835cafb9d98eb28/nanograd-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e3a318c2381b21badf17bd0fd5feac1e4d84da2676289257a1ffa2701a5250fb",
          "md5": "409526dd4fa94b20a1503591648cfb97",
          "sha256": "dce7466f10f7578341ca82a6573049f4ce3add8fca9a891e447db177fc6ac3c5"
        },
        "downloads": -1,
        "filename": "nanograd-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "409526dd4fa94b20a1503591648cfb97",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 31185,
        "upload_time": "2021-01-29T17:18:47",
        "upload_time_iso_8601": "2021-01-29T17:18:47.591888Z",
        "url": "https://files.pythonhosted.org/packages/e3/a3/18c2381b21badf17bd0fd5feac1e4d84da2676289257a1ffa2701a5250fb/nanograd-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9eaea9a50d113485c21210769d93073a2bf49174da18090f3d98fb82a0a0eb10",
          "md5": "9ddd9d68644fed2652a87126d2a9c6a3",
          "sha256": "204b120adc6402277293f67633c43312294a3da9c506c1c8f2ef69953e20cdc0"
        },
        "downloads": -1,
        "filename": "nanograd-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9ddd9d68644fed2652a87126d2a9c6a3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29695,
        "upload_time": "2021-01-29T17:18:50",
        "upload_time_iso_8601": "2021-01-29T17:18:50.048093Z",
        "url": "https://files.pythonhosted.org/packages/9e/ae/a9a50d113485c21210769d93073a2bf49174da18090f3d98fb82a0a0eb10/nanograd-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b75d95833d98fade257912e3974cd51a5df5d4839d9a533b0641f903dd72ac49",
          "md5": "fcfceb42f3cb794d0c3e2085fdbb3b3e",
          "sha256": "2e62d9f2ebe130da088204c55278742275ed282e27e78060bdc48db81efd99cb"
        },
        "downloads": -1,
        "filename": "nanograd-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fcfceb42f3cb794d0c3e2085fdbb3b3e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 33449,
        "upload_time": "2021-01-31T19:23:56",
        "upload_time_iso_8601": "2021-01-31T19:23:56.634990Z",
        "url": "https://files.pythonhosted.org/packages/b7/5d/95833d98fade257912e3974cd51a5df5d4839d9a533b0641f903dd72ac49/nanograd-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b1c7b1e40db1434682c55119da0f7cf6d512a8643d1a0505a606d953dc03aaaa",
          "md5": "6a5ef65bd895a0ebd988aa515a69fb22",
          "sha256": "388578ddbc8de78b3f5abb7aa15de93b575c99064b2a48a59612d5bfcf73187e"
        },
        "downloads": -1,
        "filename": "nanograd-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6a5ef65bd895a0ebd988aa515a69fb22",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29597,
        "upload_time": "2021-01-31T19:23:59",
        "upload_time_iso_8601": "2021-01-31T19:23:59.978666Z",
        "url": "https://files.pythonhosted.org/packages/b1/c7/b1e40db1434682c55119da0f7cf6d512a8643d1a0505a606d953dc03aaaa/nanograd-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7c88da76a3056f2b550e8880818da998617ec9be6e8950296395c937cc08d3c1",
          "md5": "bfa438b9f05f6516b9f60927d9d07823",
          "sha256": "6f278353eb77cf540f59d6c13aae547c602146ac120db21028519cfeda8456e2"
        },
        "downloads": -1,
        "filename": "nanograd-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bfa438b9f05f6516b9f60927d9d07823",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 33751,
        "upload_time": "2021-02-03T16:33:35",
        "upload_time_iso_8601": "2021-02-03T16:33:35.526783Z",
        "url": "https://files.pythonhosted.org/packages/7c/88/da76a3056f2b550e8880818da998617ec9be6e8950296395c937cc08d3c1/nanograd-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b930d2edb5968db1ecfa2d5859bb5c6f83444673971dc561f7ea85351026e463",
          "md5": "96bcd474077b27c964c00f704f1f57af",
          "sha256": "37e23770aa898d23620367cf020804ad06b9c059df3baa04d3b89a2c1f897201"
        },
        "downloads": -1,
        "filename": "nanograd-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "96bcd474077b27c964c00f704f1f57af",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29789,
        "upload_time": "2021-02-03T16:33:39",
        "upload_time_iso_8601": "2021-02-03T16:33:39.310551Z",
        "url": "https://files.pythonhosted.org/packages/b9/30/d2edb5968db1ecfa2d5859bb5c6f83444673971dc561f7ea85351026e463/nanograd-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bcaad770926dae1b4e4790d2e7b6dbad9a5eec8d26c8a8ee5e5125444ab21f06",
          "md5": "613b8c60120cfb663c7378be568eda0f",
          "sha256": "fb2e3813cc552fa2486b86a241b2beab10b1f1a38bb7186a88720c1bd4c62aaf"
        },
        "downloads": -1,
        "filename": "nanograd-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "613b8c60120cfb663c7378be568eda0f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 33819,
        "upload_time": "2021-02-10T14:36:28",
        "upload_time_iso_8601": "2021-02-10T14:36:28.558441Z",
        "url": "https://files.pythonhosted.org/packages/bc/aa/d770926dae1b4e4790d2e7b6dbad9a5eec8d26c8a8ee5e5125444ab21f06/nanograd-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d1ab5641603b7c931d4017dd361e52326933552a98aeaee0c6ccd446b869c598",
          "md5": "6a0ed613f69ef6f0182527cb22c5f193",
          "sha256": "a4f3e77a97265cd467c7d7631fe341b1d9a1e9d7844160e165a551aa01a5be7c"
        },
        "downloads": -1,
        "filename": "nanograd-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "6a0ed613f69ef6f0182527cb22c5f193",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29871,
        "upload_time": "2021-02-10T14:36:32",
        "upload_time_iso_8601": "2021-02-10T14:36:32.259515Z",
        "url": "https://files.pythonhosted.org/packages/d1/ab/5641603b7c931d4017dd361e52326933552a98aeaee0c6ccd446b869c598/nanograd-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bcaad770926dae1b4e4790d2e7b6dbad9a5eec8d26c8a8ee5e5125444ab21f06",
        "md5": "613b8c60120cfb663c7378be568eda0f",
        "sha256": "fb2e3813cc552fa2486b86a241b2beab10b1f1a38bb7186a88720c1bd4c62aaf"
      },
      "downloads": -1,
      "filename": "nanograd-1.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "613b8c60120cfb663c7378be568eda0f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 33819,
      "upload_time": "2021-02-10T14:36:28",
      "upload_time_iso_8601": "2021-02-10T14:36:28.558441Z",
      "url": "https://files.pythonhosted.org/packages/bc/aa/d770926dae1b4e4790d2e7b6dbad9a5eec8d26c8a8ee5e5125444ab21f06/nanograd-1.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d1ab5641603b7c931d4017dd361e52326933552a98aeaee0c6ccd446b869c598",
        "md5": "6a0ed613f69ef6f0182527cb22c5f193",
        "sha256": "a4f3e77a97265cd467c7d7631fe341b1d9a1e9d7844160e165a551aa01a5be7c"
      },
      "downloads": -1,
      "filename": "nanograd-1.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "6a0ed613f69ef6f0182527cb22c5f193",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 29871,
      "upload_time": "2021-02-10T14:36:32",
      "upload_time_iso_8601": "2021-02-10T14:36:32.259515Z",
      "url": "https://files.pythonhosted.org/packages/d1/ab/5641603b7c931d4017dd361e52326933552a98aeaee0c6ccd446b869c598/nanograd-1.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}