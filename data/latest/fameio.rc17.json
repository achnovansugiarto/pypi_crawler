{
  "info": {
    "author": "Felix Nitsch, Christoph Schimeczek, Ulrich Frey, Marc Deissenroth-Uhrig, Benjamin Fuchs, A. Achraf El Ghazi",
    "author_email": "fame@dlr.de",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "[![PyPI version](https://badge.fury.io/py/fameio.svg)](https://badge.fury.io/py/fameio)\n[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.4501190.svg)](https://doi.org/10.5281/zenodo.4501190)\n[![PyPI license](https://img.shields.io/pypi/l/fameio.svg)](https://badge.fury.io/py/fameio)\n[![pipeline status](https://gitlab.com/fame-framework/fame-io/badges/main/pipeline.svg)](https://gitlab.com/fame-framework/fame-io/commits/main)\n[![coverage report](https://gitlab.com/fame-framework/fame-io/badges/main/coverage.svg)](https://gitlab.com/fame-framework/fame-io/-/commits/main)\n\n# FAME-Io\nPython scripts for FAME models, generation of protobuf input files and conversion of protobuf output files.\nPlease visit the [FAME-Wiki](https://gitlab.com/fame-framework/wiki/-/wikis/home) to get an explanation of FAME and its components.\nThe package is also formerly known as [FAME-Py](https://doi.org/10.5281/zenodo.4314338).\n\n# Installation\n\n    pip install fameio\n\n\nYou may also use `pipx`. For detailed information please refer to the official `pipx` [documentation](https://github.com/pypa/pipx).\n\n    pipx install fameio\n\n\n# Usage\nFAME-Io currently offers two main scripts \"makeFameRunConfig\" and \"convertFameResults\".\nBoth are automatically installed with the package.\nThe first one creates a protobuf file for FAME applications using YAML definition files and .csv files.\nThe latter one reads output files from FAME applications in protobuf format and converts them to .csv files.\n\n## Make a FAME run configuration\nDigests configuration files in YAML format, combines them with .csv data files and creates a single input file for FAME applications in protobuf format.\nCall structure:\n\n    makeFameRunConfig -f <path/to/scenario.yaml>\n\nYou may also specify any of the following arguments:\n\n| Command              | Action                                                                                                          |\n|----------------------|-----------------------------------------------------------------------------------------------------------------|\n| `-l` or `--log`      | Sets the logging level. Default is `info`. Options are `debug`, `info`, `warning`, `warn`, `error`, `critical`. |\n| `-lf` or `--logfile` | Sets the logging file. Default is `None`. If `None` is provided, all logs get only printed to the console.      |\n| `-o` or `--output`   | Sets the path of the compiled protobuf output file. Default is `config.pb`.                                     |\n\nThis could look as follows:\n\n    makeFameRunConfig -f <path/to/scenario.yaml> -l debug -lf <path/to/scenario.log> -o <path/to/config.pb>\n\n\nYou may also call the configuration builder from any Python script with\n\n```python\nfrom fameio.scripts.make_config import run as make_config\n\nmake_config(\"path/to/scenario.yaml\")\n```\n\nSimilar to the console call you may also specify custom run config arguments and add it in a dictionary to the function call.\n\n```python\nfrom fameio.scripts.make_config import run as make_config\nfrom fameio.source.cli import Options\n\nrun_config = {Options.LOG_LEVEL: \"info\",\n              Options.OUTPUT: \"output.pb\",\n              Options.LOG_FILE: \"scenario.log\",\n              }\n\nmake_config(\"path/to/scenario.yaml\", run_config)\n```\n\n\n### Scenario YAML\nThe \"scenario.yaml\" file contains all configuration options for a FAME-based simulation.\nIt consists of the sections `Schema`, `GeneralProperties`, `Agents` and `Contracts`, all of them described below.\n\n#### Schema\nThe Schema is used to validate the inputs of the \"scenario.yaml\".\nSince the Schema should be valid across multiple scenarios, it is recommended to defined it in a separate file and include the file here.\n\nCurrently, the schema specifies:\n* which type of Agents can be created\n* what type of input attributes an Agent uses\n* what type of Products an Agent can send in Contracts.\n\nThe Schema consists of the sections `Header` and `AgentTypes`.\n\n##### Header\nScientific applications often evolve, and so do their required input parameters.\nTherefore, the header specifies information what FAME-based application the schema is corresponding to.\nIn this way a schema.yaml is tied to a specific version an application, ensuring a match between the inputs required by the application, and those provided by the files created with FAME-Io.\n\n```yaml\nHeader:\n  Project: MyProjectName\n  RepoUrl: https://mygithosting.com/myProject\n  CommitHash: abc123\n```\n\n* `Project` name of your project / FAME-based application\n* `RepoUrl` URL of your project\n* `CommitHash` hash of the commit / version of your project\n\n##### AgentTypes\nHere, each type of agent that can be created in your FAME-based application is listed, its attributes and its available Products for Contracts.\nThe structure of this section\n\n```yaml\nAgentTypes:\n  MyAgentType:\n    Attributes:\n      MyAttribute:\n         ...\n      MyOtherAttribute:\n         ...\n    Products: [ 'Product1', 'Product2', 'Product3' ]\n  MyOtherAgentWithoutProductsOrAttributes:\n```\n\n* `MyAgentType` Java's simple class name of the Agent type\n* `Attributes` indicates that beginning of the attribute definition section for this Agent type\n* `MyAttribute` Name of an attribute as specified in the corresponding Java source code of this Agent type (annotated with \"@Input\")\n* `MyOtherAttribute` Name of another attribute derived from Java source code\n* `Products` list of Products that this Agent can send in Contracts; derived from Java source code of this Agent type (annotated with \"@Product\")\n* `MyOtherAgentWithoutProductsOrAttributes` an Agent type that requires neither Attributes nor Products\n\nBoth Attributes and Products are optional - there could be useful Agents that require neither of them.\nIn the above example attribute definition was not shown (indicated by `...`).\nThe next example provides details on how to define an attribute:\n\n```yaml\nMySimpleAttribute:\n  AttributeType: enum\n  Mandatory: true\n  List: false\n  Values: [ 'AllowedValue1', 'AllowedValue2' ]\n  Default: 'AllowedValue1'\n  Help: 'My help text'\n\nMyComplexAttribute:\n  AttributeType: block\n  NestedAttributes:\n    InnerAttributeA:\n      AttributeType: integer\n    InnerAttributeB:\n      AttributeType: double\n```\n\n* `MySimpleAttribute`, `MyDoubleList`, `MyComplexAttribute` Names of the attributes as specified in the Java enum annotated with \"@Input\"\n* `AttributeType` (required) data type of the attribute; see options in table below\n* `Mandatory` (optional - true by default) if true: the attribute is required for this agent and validation will fail if the attribute is missing in the scenario **and** no default is provided\n* `List` (optional - false by default)\n  * `AttributeType: time_series` cannot be true\n  * `AttributeType: block`\n    * if true: any nested element in the scenario must be part of a list element and thus can appear multiple times\n    * if false: any nested element in the scenario can only appear once\n  * any other AttributeType: the attribute is interpreted as list, i.e. multiple values can be assigned to this attribute in the scenario\n* `NestedAttributes` (required only if `AttributeType: block`, otherwise disallowed) starts an inner Attribute definition block - defined Attributes are sub-elements of `MyComplexAttribute`\n* `Values` (optional - None by default): if present defines a list of allowed values for this attribute\n* `Default` (optional - None by default): if present defines a default value to be used in case the scenario does not specify it\n* `Help` (optional - None by default): if present defines a help text to you attribute\n\n| AttributeType   | value                                                                                                                   |\n|-----------------|-------------------------------------------------------------------------------------------------------------------------|\n| `integer`       | a 32-bit integer value                                                                                                  |\n| `double`        | a 64-bit floating-point value (integers also allowed)                                                                   |\n| `long`          | a 64-bit integer value                                                                                                  |\n| `time_stamp`    | either a FAME time stamp string or 64-bit integer value                                                                 |\n| `string`        | any string                                                                                                              |\n| `enum`          | any string, however, usually tied to a set of allowed `Values`                                                          |\n| `time_series`   | either a path to a .csv-file or a single 64-bit floating-point value; does not support `List: true`                     |\n| `block`         | this attribute has no value of its own but hosts a group of nested Attributes; implies `NestedAttributes` to be defined |\n\n#### GeneralProperties\nSpecifies FAME-specific properties of the simulation. Structure:\n\n```yaml\nGeneralProperties:\n  RunId: 1\n  Simulation:\n    StartTime: 2011-12-31_23:58:00\n    StopTime: 2012-12-30_23:58:00\n    RandomSeed: 1\n  Output:\n    Interval: 100\n    Process: 0\n```\n\nParameters:\n* `RunId` an ID that can be given to the simulation; use at your discretion\n* `StartTime` time stamp in the format YYYY-MM-DD_hh:mm:ss; first moment of the simulation.\n* `StopTime` time stamp in the format YYYY-MM-DD_hh:mm:ss; last moment of the simulation - i.e. simulation terminates after passing that time stamp\n* `RandomSeed` seed to initialise random number generation; each value leads to a unique series of random numbers.\n* `Interval` number of simulation ticks in between write-to-disk events; may be used for performance optimisations;\n* `Process` id of process that performs write-to-disk operations; leave at 0 to be compatible with single-processes;\n\n#### Agents\nSpecifies all Agents to be created in the simulation in a list. Each Agent has its own entry.\nStructure:\n```yaml\nAgents:\n  - Type: MyAgentWithInputs\n    Id: 1\n    Attributes:\n      MyEnum: SAME_SHARES\n      MyInteger: 2\n      MyDouble: 4.2\n      MyTimeSeries: \"./path/to/time_series.csv\"\n\n  - Type: MyAgentWithoutInputs\n    Id: 2\n```\n\nAgent Parameters:\n* `Type` Mandatory; Java's simple class name of the agent to be created\n* `Id` Mandatory; simulation-unique id of this agent; if two agents have the same ID, the configuration process will stop.\n* `Attributes` Optional; if the agent has any attributes, specify them here in the format \"AttributeName: value\"; please see attribute table above\n\nThe specified `Attributes` for each agent must match the specified `Attributes` options in the linked Schema (see above).\nFor better structure and readability of the `scenario.yaml`, `Attributes` may also be specified in a nested way as demonstrated below.\n\n```yaml\nAgents:\n  - Type: MyAgentWithInputs\n    Id: 1\n    Attributes:\n      Parent:\n        MyEnum: SAME_SHARES\n        MyInteger: 2\n      Parent2:\n        MyDouble: 4.2\n        Child:\n          MyTimeSeries: \"./path/to/time_series.csv\"\n```\n\nIn case Attributes are defined with `List: true` option, lists are assigned to an Attribute or Group:\n\n```yaml\nAttributes:\n  MyDoubleList: [5.2, 4.5, 7, 9.9]\n  MyListGroup:\n    - IntValueA: 5\n      IntValueB: 42\n    - IntValueA: 7\n      IntValueB: 100\n```\n\nHere, `MyDoubleList` and `MyListGroup` need to specify `List: true` in the corresponding Schema.\nThe shorter `[]`-notation was used to assign a list of floating-point values to `MyDoubleList`.\nNested items `IntValueA` and `IntValueB` of `MyListGroup` are assigned within a list, allowing the specification of these nested items several times.\n\n#### Contracts\nSpecifies all Contracts, i.e. repetitive bilateral transactions in between agents.\nContracts are given as a list.\nWe recommend moving Contracts to separate files and to use the `!include` command to integrate them in the scenario.\n\n```yaml\nContracts:\n  - SenderId: 1\n    ReceiverId: 2\n    ProductName: ProductOfAgent_1\n    FirstDeliveryTime: -25\n    DeliveryIntervalInSteps: 3600\n\n  - SenderId: 2\n    ReceiverId: 1\n    ProductName: ProductOfAgent_2\n    FirstDeliveryTime: -22\n    DeliveryIntervalInSteps: 3600\n    Attributes:\n      ProductAppendix: value\n      TimeOffset: 42\n```\n\nContract Parameters:\n* `SenderId` unique ID of agent sending the product\n* `ReceiverId` unique ID of agent receiving the product\n* `ProductName` name of the product to be sent\n* `FirstDeliveryTime` first time of delivery in the format \"seconds after the January 1st 2000, 00:00:00\"\n* `DeliveryIntervalInSteps` delay time in between deliveries in seconds\n* `Attributes` can be set to include additional information as `int`, `float`, `enum` or `dict` data types\n\n##### Definition of Multiple Similar Contracts\nOften, scenarios contain multiple agents of similar type that also have similar chains of contracts.\nTherefore, FAME-Io supports a compact definition of multiple similar contracts.\n`SenderId` and `ReceiverId` can both be lists and support One-to-N, N-to-One and N-to-N relations like in the following example:\n\n```yaml\nContracts:\n  # effectively 3 similar contracts (0 -> 11), (0 -> 12), (0 -> 13)\n  # with otherwise identical ProductName, FirstDeliveryTime & DeliveryIntervalInSteps\n  - SenderId: 0\n    ReceiverId: [11, 12, 13]\n    ProductName: MyOtherProduct\n    FirstDeliveryTime: 100\n    DeliveryIntervalInSteps: 3600\n\n  # effectively 3 similar contracts (1 -> 10), (2 -> 10), (3 -> 10)\n  # with otherwise identical ProductName, FirstDeliveryTime & DeliveryIntervalInSteps\n  - SenderId: [1, 2, 3]\n    ReceiverId: 10\n    ProductName: MyProduct\n    FirstDeliveryTime: 100\n    DeliveryIntervalInSteps: 3600\n\n  # effectively 3 similar contracts (1 -> 11), (2 -> 12), (3 -> 13)\n  # with otherwise identical ProductName, FirstDeliveryTime & DeliveryIntervalInSteps\n  - SenderId: [1, 2, 3]\n    ReceiverId: [11, 12, 13]\n    ProductName: MyThirdProduct\n    FirstDeliveryTime: 100\n    DeliveryIntervalInSteps: 3600\n```\n\nCombined with YAML anchors complex contract chains can be easily reduced to a minimum of required configuration.\nThe following example is equivalent to the previous one and allows a quick extension of contracts to a new couple of agents e.g. (4;14):\n\n```yaml\nGroups:\n  - &agentList1: [1,2,3]\n  - &agentList2: [11,12,13]\n\nContracts:\n  - SenderId: 0\n    ReceiverId: *agentList2\n    ProductName: MyOtherProduct\n    FirstDeliveryTime: 100\n    DeliveryIntervalInSteps: 3600\n\n  - SenderId: *agentList1\n    ReceiverId: 10\n    ProductName: MyProduct\n    FirstDeliveryTime: 100\n    DeliveryIntervalInSteps: 3600\n\n  - SenderId: *agentList1\n    ReceiverId: *agentList2\n    ProductName: MyThirdProduct\n    FirstDeliveryTime: 100\n    DeliveryIntervalInSteps: 3600\n```\n\n### CSV files\nTIME_SERIES inputs are not directly fed into the Scenario YAML file.\nInstead, TIME_SERIES reference a .csv file that can be stored some place else.\nThese .csv files follow a specific structure:\n* They must contain exactly two columns.\n* The first column must be a time stamp in form `YYYY-MM-DD_hh:mm:ss`\n* The second column must be a numerical value (either integer or floating-point)\n* The separator of the two columns is a semicolon\n\nExemplary content of a valid .csv file:\n\n    2012-01-01_00:00:00;400\n    2013-01-01_00:00:00;720.5\n    2014-01-01_00:00:00;650\n    2015-01-01_00:00:00;99.27772\n    2016-01-01_00:00:00;42\n    2017-01-01_00:00:00;0.1\n\nPlease refer also to the detailed article about `TimeStamps` in the [FAME-Wiki](https://gitlab.com/fame-framework/wiki/-/wikis/TimeStamp).\n\n### Split and join multiple YAML files\nThe user may include other YAML files into a YAML file to divide the content across files as convenient.\nWe explicitly recommend using this feature for the `Schema` and `Contracts` sections.\nOtherwise, the scenario.yaml may become crowded.\n\n#### Command: !Include\nTo hint YAML to load the content of another file use `!include \"path/relative/to/including/yaml/file.yml\"`.\nYou can concatenate !include commands and can use !include in the included file as well.\nThe path to the included file is always relative to the file using the !include command.\nSo with the following file structure\n\n###### file-structure\n```\na.yaml\nfolder/b.yaml\nfolder/c.yaml\nfolder/deeper_folder/d.yaml\n```\nthe following !include commands work\n\n###### in a.yaml\n```\nToBe: !include \"folder/b.yaml\"\nOrNot: !include \"folder/deeper_folder/d.yaml\"\n```\n\n###### in b.yaml\n```\nThatIs: !include \"c.yaml\"\nTheQuestion: !include \"deeper_folder/d.yaml\"\n```\n\nProvided that\n###### in c.yaml\n```\nOr: maybe\n```\n###### d.yaml\n```\nnot: \"?\"\n```\nthe resulting file would look like this:\n\n###### THe Joined file a.yaml\n```\nToBe:\n  ThatIs:\n    Or: maybe\n  TheQuestion:\n    not: \"?\"\nOrNot:\n  not: \"?\"\n```\n\nYou may also specify absolute file paths if preferred by starting with a \"/\".\n\nWhen specifying only a file path, the complete content of the file is assigned to the given key.\nYou always need a key to assign the !include command to.\nHowever, you cannot combine the value returned from !include with other values in the same key.\nThus, the following combinations do not work:\n###### caveats.yml\n```\n!include \"file.yaml\" # no key assigned\n\nKey:\n  Some: OtherItem\n  !include \"file.yaml\" # cannot join with other named items\n\nList:\n  - an: entry\n  !include \"file.yaml\" # cannot directly join with list items, even if !include returns a list\n```\n\n#### Integrate specific nodes of YAML files\nInstead of including *all* content in the included file, you may also pick a specific node within that file.\nFor this use `!include [<relative/path/to/file.yaml>, Path:To:Field:In:Yaml]`.\nHere, `:` is used in the node-specifying string to select a sequence of nodes to follow - with custom depth.\nConsider the following two files:\n\n###### file_to_be_included.yaml\n```yaml\nSet1:\n  Subset1:\n    Key: Value\nSet2:\n  OtherKey: OtherValue\n```\n\n###### including_file.yaml\n```yaml\n- Type: MyAgentWithInputs\n  Id: 1\n  Attributes: !include_node [file_to_be_included.yaml, Set1:Subset1]\n```\n\nCompiling \"including_file.yaml\" results in\n\n###### resulting_file.yaml\n```yaml\n- Type: MyAgentWithInputs\n  Id: 1\n  Attributes:\n    Key: Value\n```\n\n#### Load multiple files\nUsing wildcards in the given path (e.g. \"path/to/many/*.yaml\") will lead to loading multiple files and assigning their content to the same key.\nYou can make use of this feature with or without specifying a node selector.\nHowever, the elements to be joined across multiple files must be lists.\nThese lists are then concatenated into a single list and then assigned to the key in the file calling !include.\nThis feature is especially useful for Contracts: You can split the Contracts list into several files and place them in a separate folder.\nThen use !include to re-integrate them into your configuration. An example:\n###### my_contract1.yaml\n```\nContracts:\n - ContractA\n - ContractB\n```\n###### my_contract2.yaml\n```\nContracts:\n - ContractC\n - ContractD\n - ContractE\n```\n###### including_file.yaml\n```\nContracts: [!include \"my_contract*.yaml\", \"Contracts\"]\n```\n\nresults in\n###### result.yaml\n```\nContracts:\n - ContractA\n - ContractB\n - ContractC\n - ContractD\n - ContractE\n```\n\n#### Ignoring files\nFiles that have their name start with \"IGNORE_\" are not included with the !include command.\nYou will see a debug output to notify you that the file was ignored.\nUse this to temporarily take files out ouf your configuration without deleting or moving them.\n\n## Read FAME results\nTakes an output file in protobuf format of FAME-based applications and converts it into files in .csv format.\nAn individual file for each type of Agent is created in a folder named after the protobuf input file.\nCall structure:\n\n    convertFameResults -f <./path/to/protobuf_file.pb>\n\nYou may also specify any of the following arguments:\n\n| Command                              | Action                                                                                                                                                                                                                                              |\n|--------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| `-l` or `--log` <option>             | Sets the logging level. Default is `info`. Options are `debug`, `info`, `warning`, `warn`, `error`, `critical`.                                                                                                                                     |\n| `-lf` or `--logfile` <file>          | Sets the logging file. Default is `None`. If `None` is provided, all logs get only printed to the console.                                                                                                                                          |\n| `-a` or `--agents` <list-of-agents>  | If specified, only a subset of agents is extracted from the protobuf file. Default is to extract all agents.                                                                                                                                        |\n| `-o` or `--output`                   | Sets the path to where the generated output files are written to. If not specified, the folder's name is derived from the input file's name. Folder will be created if it does not exist.                                                           |\n| `-se` or `--single-export`           | Enables export of individual agents to individual files, when present. If not present (the default) one file per `AgentType` is created.                                                                                                            |\n| `-m` or `--memory-saving`            | When specified, reduces memory usage profile at the cost of runtime. Use only when necessary.                                                                                                                                                       |\n| `-cc` or `--complex-column` <option> | Defines how to deal with complex indexed output columns (if any). `IGNORE` ignores complex columns. `MERGE` squashes all data from complex columns in one big string entry. `SPLIT` creates a separate file for each complex indexed output column. |\n\nThis could look as follows:\n\n    convertFameResults -f <./path/to/protobuf_file.pb> -l debug -lf <path/to/output.log> -a AgentType1 AgentType2 -o myCsvFolder -m -cc SPLIT\n\nYou may also call the conversion script from any Python script with\n\n```python\nfrom fameio.scripts.convert_results import run as convert_results\n\nconvert_results(\"./path/to/protobuf_file.pb\")\n```\n\nSimilar to the console call you may also specify custom run config arguments and add it in a dictionary to the function call.\n\n```python\nfrom fameio.scripts.convert_results import run as convert_results\nfrom fameio.source.cli import Options\n\nrun_config = {Options.LOG_LEVEL: \"info\",\n              Options.LOG_FILE: \"scenario.log\",\n              Options.OUTPUT: \"Output\",\n              Options.AGENT_LIST: ['AgentType1', 'AgentType2'],\n              Options.MEMORY_SAVING: False,\n              Options.SINGLE_AGENT_EXPORT: False,\n              Options.RESOLVE_COMPLEX_FIELD: \"SPLIT\",\n              }\n\nconvert_results(\"./path/to/protobuf_file.pb\", run_config)\n```\n\n# Contribute\nPlease read the Contributors License Agreement `cla.md`, sign it and send it to [`fame@dlr.de`](mailto:fame@dlr.de) before contributing.\n\n## Testing changes locally\n\nOnce some changes have been performed on the local git clone, use the following command to override your local installation with your modified copy in order to test the result:\n\n```bash\npython3 setup.py bdist_wheel && pip3 install --force-reinstall --no-dependencies ./dist/*.whl\n```\n\n## Code style\n\nWe use the code formatting library [`black`](https://pypi.org/project/black/).\nThe maximum line length is defined as 120 characters. \nTherefore, before committing, run `black --line-length 120 .`\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/fame-framework/fame-io/",
    "keywords": "FAME,agent-based modelling",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fameio",
    "package_url": "https://pypi.org/project/fameio/",
    "platform": null,
    "project_url": "https://pypi.org/project/fameio/",
    "project_urls": {
      "Homepage": "https://gitlab.com/fame-framework/fame-io/"
    },
    "release_url": "https://pypi.org/project/fameio/1.7/",
    "requires_dist": [
      "pandas",
      "fameprotobuf (<1.3,>=1.2)",
      "pyyaml",
      "pytest ; extra == 'test'",
      "google.protobuf ; extra == 'test'",
      "mockito ; extra == 'test'"
    ],
    "requires_python": ">=3.8",
    "summary": "Python scripts for operation of FAME models",
    "version": "1.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16943631,
  "releases": {
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "05fc46e020e32aa4626f4843391fe36e67ca4fe142aade35e1b96a06a004a878",
          "md5": "cb511f921e1ed989d0020f9d8b4e6ff7",
          "sha256": "14e40afb13c18defa193c76d24d3bcbad6ba44c17c08db360b1409fefbd49cc0"
        },
        "downloads": -1,
        "filename": "fameio-1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cb511f921e1ed989d0020f9d8b4e6ff7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 20303,
        "upload_time": "2021-03-05T10:29:22",
        "upload_time_iso_8601": "2021-03-05T10:29:22.122733Z",
        "url": "https://files.pythonhosted.org/packages/05/fc/46e020e32aa4626f4843391fe36e67ca4fe142aade35e1b96a06a004a878/fameio-1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8cb9bb7f1819fafc13f8c6b2158615e150c13b7c01ae819f5be683c4cbb139fb",
          "md5": "682051e4e070d92a3216f316f5c40499",
          "sha256": "92ef11b38ba9fcf5db900d3eba881f69528e6947f150912e9c7cdc3691794ad0"
        },
        "downloads": -1,
        "filename": "fameio-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "682051e4e070d92a3216f316f5c40499",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14846,
        "upload_time": "2021-03-05T10:29:23",
        "upload_time_iso_8601": "2021-03-05T10:29:23.606908Z",
        "url": "https://files.pythonhosted.org/packages/8c/b9/bb7f1819fafc13f8c6b2158615e150c13b7c01ae819f5be683c4cbb139fb/fameio-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3c4eab9e9826f7d1f3eebd11062435e353872ebf14ac52af196028482fe9cf73",
          "md5": "b273905fbd831edab349a01d8c84ca08",
          "sha256": "39de94963eac0094d09fac880b4d74917f96da7899ec907645dab353ff9c27f0"
        },
        "downloads": -1,
        "filename": "fameio-1.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b273905fbd831edab349a01d8c84ca08",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 27959,
        "upload_time": "2021-02-04T10:20:41",
        "upload_time_iso_8601": "2021-02-04T10:20:41.598312Z",
        "url": "https://files.pythonhosted.org/packages/3c/4e/ab9e9826f7d1f3eebd11062435e353872ebf14ac52af196028482fe9cf73/fameio-1.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4cfe43a9b9a7be29c7ba4181db8decd42b7a1d82dc04c3659bdc1f06ab994f8",
          "md5": "eebffb72984e158a39996d068361938c",
          "sha256": "0dbdd9195572b372051ebbdf7f7f0e0d8a19cc60f619ebeb16c5bf74f61bf549"
        },
        "downloads": -1,
        "filename": "fameio-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "eebffb72984e158a39996d068361938c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 21319,
        "upload_time": "2021-02-04T10:20:42",
        "upload_time_iso_8601": "2021-02-04T10:20:42.820856Z",
        "url": "https://files.pythonhosted.org/packages/a4/cf/e43a9b9a7be29c7ba4181db8decd42b7a1d82dc04c3659bdc1f06ab994f8/fameio-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "af1d43920dcef6ba84b01a25f496f9979021556e16cfdb7b2c3353ff0e027051",
          "md5": "4c0792ecbaa355e90e748c3f06aac26c",
          "sha256": "c1bccc6898bd55a1f607b9646b7b49693b871096fa1b35798172f294ccac8e03"
        },
        "downloads": -1,
        "filename": "fameio-1.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4c0792ecbaa355e90e748c3f06aac26c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 28309,
        "upload_time": "2021-02-10T10:17:40",
        "upload_time_iso_8601": "2021-02-10T10:17:40.332902Z",
        "url": "https://files.pythonhosted.org/packages/af/1d/43920dcef6ba84b01a25f496f9979021556e16cfdb7b2c3353ff0e027051/fameio-1.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "802798b13e5bdb7470d97322c6a7de502e13770f50531ae27210cb0ad0c04937",
          "md5": "8d03b77564f043589ea4b57a61581b3a",
          "sha256": "a90b1131947385a519755a2484903aa75ec6849f5d4a0796ca70a5baadec7757"
        },
        "downloads": -1,
        "filename": "fameio-1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8d03b77564f043589ea4b57a61581b3a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 21700,
        "upload_time": "2021-02-10T10:17:42",
        "upload_time_iso_8601": "2021-02-10T10:17:42.141723Z",
        "url": "https://files.pythonhosted.org/packages/80/27/98b13e5bdb7470d97322c6a7de502e13770f50531ae27210cb0ad0c04937/fameio-1.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bb10f2d2bd3e8326472a02696414283aaf86fa347b7a2f99e2cf4fe613a1927c",
          "md5": "f0cc55d8b3243526820283fde1acbf4e",
          "sha256": "adbdc0ecd137256accdff46c9a88a4067e510711f1948156b5bde27252641e54"
        },
        "downloads": -1,
        "filename": "fameio-1.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f0cc55d8b3243526820283fde1acbf4e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 17685,
        "upload_time": "2021-02-18T11:25:26",
        "upload_time_iso_8601": "2021-02-18T11:25:26.951544Z",
        "url": "https://files.pythonhosted.org/packages/bb/10/f2d2bd3e8326472a02696414283aaf86fa347b7a2f99e2cf4fe613a1927c/fameio-1.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "511894c6641c4b766b3ac06a23c0a142232d5314a97f054e08f671ba392f93a2",
          "md5": "f523540364f93062370ff544a1da2d2c",
          "sha256": "4661abfd09b03ca966f683058b63b4f52f64a1978e1e1d5a0acb797fbe1b4683"
        },
        "downloads": -1,
        "filename": "fameio-1.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f523540364f93062370ff544a1da2d2c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 15643,
        "upload_time": "2021-02-18T11:25:28",
        "upload_time_iso_8601": "2021-02-18T11:25:28.330544Z",
        "url": "https://files.pythonhosted.org/packages/51/18/94c6641c4b766b3ac06a23c0a142232d5314a97f054e08f671ba392f93a2/fameio-1.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a2d26d2d302fc06428ce12112250ca7bf929aa6a09b9b26559804af55c6348fc",
          "md5": "d01d943825d2578a3c0a57b9ec691367",
          "sha256": "4bdc4d82c9da8b10efa6b730cb91376149979c666d39df23e176dcab94972551"
        },
        "downloads": -1,
        "filename": "fameio-1.2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d01d943825d2578a3c0a57b9ec691367",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 17689,
        "upload_time": "2021-02-24T16:40:58",
        "upload_time_iso_8601": "2021-02-24T16:40:58.151668Z",
        "url": "https://files.pythonhosted.org/packages/a2/d2/6d2d302fc06428ce12112250ca7bf929aa6a09b9b26559804af55c6348fc/fameio-1.2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "386a59ed2c92d583f14beb2f472f7c489a9762c663cd43175fabe3bf7ff1419c",
          "md5": "c9a4fc342eba47bbb05650b52596c7c0",
          "sha256": "0c3d02b9905175d60a4ac16db2de12bba6a03327c6a6d4bb78c4bf5080438935"
        },
        "downloads": -1,
        "filename": "fameio-1.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "c9a4fc342eba47bbb05650b52596c7c0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 15676,
        "upload_time": "2021-02-24T16:40:59",
        "upload_time_iso_8601": "2021-02-24T16:40:59.560977Z",
        "url": "https://files.pythonhosted.org/packages/38/6a/59ed2c92d583f14beb2f472f7c489a9762c663cd43175fabe3bf7ff1419c/fameio-1.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b542d6fae2ab7435513af009b47d05876262b1df36cdf038c4b059669d21e729",
          "md5": "e627659e2d9ab98d7a37ae3ff4839264",
          "sha256": "a198b3a140132fe9087c0828a08fab1c82d25e2e713e37ff9c9c3c95aec708a8"
        },
        "downloads": -1,
        "filename": "fameio-1.2.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e627659e2d9ab98d7a37ae3ff4839264",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 17683,
        "upload_time": "2021-02-26T14:00:23",
        "upload_time_iso_8601": "2021-02-26T14:00:23.219804Z",
        "url": "https://files.pythonhosted.org/packages/b5/42/d6fae2ab7435513af009b47d05876262b1df36cdf038c4b059669d21e729/fameio-1.2.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b8a5b84c725a0accdd9e8410512cb3fc5ed1ff7ed21f065feeb03a44ac593bb",
          "md5": "6a36ead2e7b25010ef352a6b3ccf5b1e",
          "sha256": "6cd8fd8eed35c0ceb36bfd7e9e5590eeffab121db80e7ce027605e832e6ff7dc"
        },
        "downloads": -1,
        "filename": "fameio-1.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "6a36ead2e7b25010ef352a6b3ccf5b1e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 15645,
        "upload_time": "2021-02-26T14:00:24",
        "upload_time_iso_8601": "2021-02-26T14:00:24.607886Z",
        "url": "https://files.pythonhosted.org/packages/8b/8a/5b84c725a0accdd9e8410512cb3fc5ed1ff7ed21f065feeb03a44ac593bb/fameio-1.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "05b11ddf598243a5ed39c2a0839b3ff5f7c688910de11707ec1c27630b4de7fe",
          "md5": "f708dc49ddd5a7cc8d5fdb1abf34a4b9",
          "sha256": "1b4a60a0509050e786bf616d7fe491258c9aab820fc6dd30929936da45971162"
        },
        "downloads": -1,
        "filename": "fameio-1.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f708dc49ddd5a7cc8d5fdb1abf34a4b9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 18564,
        "upload_time": "2021-04-13T16:01:21",
        "upload_time_iso_8601": "2021-04-13T16:01:21.140679Z",
        "url": "https://files.pythonhosted.org/packages/05/b1/1ddf598243a5ed39c2a0839b3ff5f7c688910de11707ec1c27630b4de7fe/fameio-1.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9d512a86665f83130c65272b404e554059cf52a3923a50110c1fcb03e2ed33f1",
          "md5": "7d56a8c07618d15b8875b1954a8158d0",
          "sha256": "b5df927721fc2b3a3545b78ba85318c39da1f9a3276a19847d924cf5a7d6760e"
        },
        "downloads": -1,
        "filename": "fameio-1.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7d56a8c07618d15b8875b1954a8158d0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 16655,
        "upload_time": "2021-04-13T16:01:22",
        "upload_time_iso_8601": "2021-04-13T16:01:22.496432Z",
        "url": "https://files.pythonhosted.org/packages/9d/51/2a86665f83130c65272b404e554059cf52a3923a50110c1fcb03e2ed33f1/fameio-1.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a1ef81019746f5845dd37760a5307e2789402ccc6373cfbbab3d0d67fe25ab67",
          "md5": "be5a7434f3579d11de5bbe1f680098eb",
          "sha256": "1089baaab1118e2428b4cf7bfc51c7e3e101a4365c9a931f7bbb62474ce9f4c0"
        },
        "downloads": -1,
        "filename": "fameio-1.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "be5a7434f3579d11de5bbe1f680098eb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 32423,
        "upload_time": "2021-06-10T13:39:44",
        "upload_time_iso_8601": "2021-06-10T13:39:44.222022Z",
        "url": "https://files.pythonhosted.org/packages/a1/ef/81019746f5845dd37760a5307e2789402ccc6373cfbbab3d0d67fe25ab67/fameio-1.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b0a9b8a471b231f796cbae9e750d529da61117ca52ee965061c0b4aa632f890b",
          "md5": "3e6e932dfc39e7426fddff3bd4e578fb",
          "sha256": "39fbbef41ef45ee6caaae0e40197b0bfb5cc7a4b96930c1a4e41ad1dac7784bf"
        },
        "downloads": -1,
        "filename": "fameio-1.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3e6e932dfc39e7426fddff3bd4e578fb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 24497,
        "upload_time": "2021-06-10T13:39:45",
        "upload_time_iso_8601": "2021-06-10T13:39:45.889024Z",
        "url": "https://files.pythonhosted.org/packages/b0/a9/b8a471b231f796cbae9e750d529da61117ca52ee965061c0b4aa632f890b/fameio-1.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cbca5fccb0f9d638ecfedf59f08cda9899f75039058bed0c90ee122f7e386dd7",
          "md5": "23a87ec37c74c8ab395e377d78479f8f",
          "sha256": "da13a94abed9bd1e2e87e1170b267ab8f4e4b421e5647d02a9ec02a1a83bf960"
        },
        "downloads": -1,
        "filename": "fameio-1.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "23a87ec37c74c8ab395e377d78479f8f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 33003,
        "upload_time": "2021-06-30T11:46:17",
        "upload_time_iso_8601": "2021-06-30T11:46:17.177959Z",
        "url": "https://files.pythonhosted.org/packages/cb/ca/5fccb0f9d638ecfedf59f08cda9899f75039058bed0c90ee122f7e386dd7/fameio-1.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e926772802a4f6fa5a37dc69a3e7b35367daa80d3e2ba73c076a40b339a04b2",
          "md5": "205baaaffb6653eaa463b1d09f3e2671",
          "sha256": "5b3b105c9e95d841652224a262fcca5ae40fb0a1e5c702d4ed5260ef9976ae98"
        },
        "downloads": -1,
        "filename": "fameio-1.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "205baaaffb6653eaa463b1d09f3e2671",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 24698,
        "upload_time": "2021-06-30T11:46:18",
        "upload_time_iso_8601": "2021-06-30T11:46:18.602911Z",
        "url": "https://files.pythonhosted.org/packages/7e/92/6772802a4f6fa5a37dc69a3e7b35367daa80d3e2ba73c076a40b339a04b2/fameio-1.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "de92f0f620e2a3a2ce90522e71cb9d5e4c1bcc75614ab8b1b7aa3b6fdebafa4b",
          "md5": "32c273f9d75d5dcc354d9d8a54771300",
          "sha256": "d57fceab05f380972db2a53270d1d27b8f17d58e12287cb463841e5dbb663124"
        },
        "downloads": -1,
        "filename": "fameio-1.5.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "32c273f9d75d5dcc354d9d8a54771300",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 36122,
        "upload_time": "2022-01-10T13:08:54",
        "upload_time_iso_8601": "2022-01-10T13:08:54.611422Z",
        "url": "https://files.pythonhosted.org/packages/de/92/f0f620e2a3a2ce90522e71cb9d5e4c1bcc75614ab8b1b7aa3b6fdebafa4b/fameio-1.5.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef3086d49008723f824cbc6ac2c9b628796bd2b78487fde376003b463e805af8",
          "md5": "b1427bfb8aa508947c2df873078e6685",
          "sha256": "5a9872268385f55624e65bf5296c8c6f8cf48cb01b66b05f36fc4d9760575d66"
        },
        "downloads": -1,
        "filename": "fameio-1.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b1427bfb8aa508947c2df873078e6685",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 28201,
        "upload_time": "2022-01-10T13:08:56",
        "upload_time_iso_8601": "2022-01-10T13:08:56.433628Z",
        "url": "https://files.pythonhosted.org/packages/ef/30/86d49008723f824cbc6ac2c9b628796bd2b78487fde376003b463e805af8/fameio-1.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "67a38911d9806ec99b023166e527ec02aac4a2581de7b8c8324ddde22dd7a49a",
          "md5": "ad2b6810f962fd49320f32d6f46b2433",
          "sha256": "1afe574bcacd65036b2227a6dba5e0ee4f75cf36a2e5b5052f8d1dcd502dd504"
        },
        "downloads": -1,
        "filename": "fameio-1.5.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ad2b6810f962fd49320f32d6f46b2433",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 37035,
        "upload_time": "2022-03-10T15:22:25",
        "upload_time_iso_8601": "2022-03-10T15:22:25.018947Z",
        "url": "https://files.pythonhosted.org/packages/67/a3/8911d9806ec99b023166e527ec02aac4a2581de7b8c8324ddde22dd7a49a/fameio-1.5.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7a8da01b4a18f682711aead2d3ea0e2cc0b0b439a21def154dda0d8f11a7fd54",
          "md5": "ce08169405e31eab77cc5828dba4b569",
          "sha256": "8b827514db32feefc83833d21bda8eea8b38e7be777365c8a3844b1a77c64063"
        },
        "downloads": -1,
        "filename": "fameio-1.5.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ce08169405e31eab77cc5828dba4b569",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 29309,
        "upload_time": "2022-03-18T11:50:02",
        "upload_time_iso_8601": "2022-03-18T11:50:02.833961Z",
        "url": "https://files.pythonhosted.org/packages/7a/8d/a01b4a18f682711aead2d3ea0e2cc0b0b439a21def154dda0d8f11a7fd54/fameio-1.5.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "16fa4716ca6e639996f1afd532788cf52534817dfdbbe83e627ecc76f880728b",
          "md5": "9aab76dfe2fcf3e0a293b6cc910c3e18",
          "sha256": "da6c7d800dcb9328622b792f70ea47a249c77bfc074a972f35006366f82be394"
        },
        "downloads": -1,
        "filename": "fameio-1.5.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9aab76dfe2fcf3e0a293b6cc910c3e18",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 37384,
        "upload_time": "2022-03-18T11:50:00",
        "upload_time_iso_8601": "2022-03-18T11:50:00.022167Z",
        "url": "https://files.pythonhosted.org/packages/16/fa/4716ca6e639996f1afd532788cf52534817dfdbbe83e627ecc76f880728b/fameio-1.5.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2a301974d3d78a1c8a662f3c2d71b12af83e189534a447f68c61b1b1025a17d8",
          "md5": "0c997027150a71e76a7d4094fb4204ac",
          "sha256": "95170254fbd54cfe4770c3d0ca7bd031851769ac8166c051aa8c015ecb95874c"
        },
        "downloads": -1,
        "filename": "fameio-1.5.3.tar.gz",
        "has_sig": false,
        "md5_digest": "0c997027150a71e76a7d4094fb4204ac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 29565,
        "upload_time": "2022-03-18T11:50:04",
        "upload_time_iso_8601": "2022-03-18T11:50:04.694099Z",
        "url": "https://files.pythonhosted.org/packages/2a/30/1974d3d78a1c8a662f3c2d71b12af83e189534a447f68c61b1b1025a17d8/fameio-1.5.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6e7f9447aea51be2a09e5559833a44d3cb109f1a18479be140add6d366e721a6",
          "md5": "305defa9d86a0f78ac3a5274fb1214c3",
          "sha256": "ed797b2501a17687ee14a9d454b8aeffa7db099640763d749a0f104da48aff3f"
        },
        "downloads": -1,
        "filename": "fameio-1.5.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "305defa9d86a0f78ac3a5274fb1214c3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 37404,
        "upload_time": "2022-06-01T09:16:48",
        "upload_time_iso_8601": "2022-06-01T09:16:48.963274Z",
        "url": "https://files.pythonhosted.org/packages/6e/7f/9447aea51be2a09e5559833a44d3cb109f1a18479be140add6d366e721a6/fameio-1.5.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0a125d64553a52621591c0eede22864171516900cb22b257f7f52730c866fbd8",
          "md5": "1717e3eae64f8aa1e69fdf4f7a0b282d",
          "sha256": "7796eb978af59dfe4b544205753161bf71ede595427bf942ed779ee710f7c446"
        },
        "downloads": -1,
        "filename": "fameio-1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1717e3eae64f8aa1e69fdf4f7a0b282d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 51487,
        "upload_time": "2022-07-08T11:39:37",
        "upload_time_iso_8601": "2022-07-08T11:39:37.096920Z",
        "url": "https://files.pythonhosted.org/packages/0a/12/5d64553a52621591c0eede22864171516900cb22b257f7f52730c866fbd8/fameio-1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "93b5ab3dda18dbf82d7cdaf8e10a853a557db2cc5d396ebe2536030cb37d1cd3",
          "md5": "55889a855304794cdf5dd76a2f41a01e",
          "sha256": "ad26b4cc6dcb1e4adecad25a224decf4bca2a27c7c8723441c61857cbe0fdf70"
        },
        "downloads": -1,
        "filename": "fameio-1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "55889a855304794cdf5dd76a2f41a01e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 46842,
        "upload_time": "2022-07-08T11:39:39",
        "upload_time_iso_8601": "2022-07-08T11:39:39.318591Z",
        "url": "https://files.pythonhosted.org/packages/93/b5/ab3dda18dbf82d7cdaf8e10a853a557db2cc5d396ebe2536030cb37d1cd3/fameio-1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ac19437b260eaa804b4fada01919afe8880ad9acc4ed47f4c5bbc92af8f70454",
          "md5": "be9fa2fd67c981af1fe5b4927c7f764b",
          "sha256": "f9f50c5854fe30686bae6f25c20016202b0265a1988ae157b30cfa50ea438840"
        },
        "downloads": -1,
        "filename": "fameio-1.6.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "be9fa2fd67c981af1fe5b4927c7f764b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 54947,
        "upload_time": "2022-11-02T12:45:02",
        "upload_time_iso_8601": "2022-11-02T12:45:02.526367Z",
        "url": "https://files.pythonhosted.org/packages/ac/19/437b260eaa804b4fada01919afe8880ad9acc4ed47f4c5bbc92af8f70454/fameio-1.6.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ae6cc61f21b870cc3f05059761d8bef44df614544ca7bcb2e7d3ea1c4c4d8c84",
          "md5": "7d5444b1a87be0a558c0f0cb30c866e4",
          "sha256": "4144fd73d71bf75bbed0f31f392afa9ba574e4ac2a4ad8e1b48e410f275b8ee2"
        },
        "downloads": -1,
        "filename": "fameio-1.6.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7d5444b1a87be0a558c0f0cb30c866e4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 46765,
        "upload_time": "2022-11-02T12:45:05",
        "upload_time_iso_8601": "2022-11-02T12:45:05.193005Z",
        "url": "https://files.pythonhosted.org/packages/ae/6c/c61f21b870cc3f05059761d8bef44df614544ca7bcb2e7d3ea1c4c4d8c84/fameio-1.6.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ecc107bb9ee816132ed185ea04995031156e71b515bc3b1016bb6fb28778c714",
          "md5": "be410010c1b582c8841f4e6ac18bfb4a",
          "sha256": "3de7ef95a33639d2ebedb432acc63dc4e187d3c929543e9c922b5a3a10b6c8af"
        },
        "downloads": -1,
        "filename": "fameio-1.6.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "be410010c1b582c8841f4e6ac18bfb4a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 51231,
        "upload_time": "2022-11-04T12:08:50",
        "upload_time_iso_8601": "2022-11-04T12:08:50.948056Z",
        "url": "https://files.pythonhosted.org/packages/ec/c1/07bb9ee816132ed185ea04995031156e71b515bc3b1016bb6fb28778c714/fameio-1.6.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "83728756a5c1ab6af4372f6d8671af23c8da017ca779eab940ed27ee26919aeb",
          "md5": "6f2223ac0829bccf7baa1b2d235d69ef",
          "sha256": "d63b9f5caeb8d704dd8679a181000a47bf79314550913ba7f0ccade2b8853989"
        },
        "downloads": -1,
        "filename": "fameio-1.6.3.tar.gz",
        "has_sig": false,
        "md5_digest": "6f2223ac0829bccf7baa1b2d235d69ef",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 46907,
        "upload_time": "2022-11-04T12:08:54",
        "upload_time_iso_8601": "2022-11-04T12:08:54.025953Z",
        "url": "https://files.pythonhosted.org/packages/83/72/8756a5c1ab6af4372f6d8671af23c8da017ca779eab940ed27ee26919aeb/fameio-1.6.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc5bca1ec028cc3a33f703c7401d04e043f334c94b1cd159db557c76be4a0f8d",
          "md5": "b6f572578bae056b132db97f9156f69b",
          "sha256": "90514dea431362062d0abeff7fd4a54d73a9ace89ef5a6260b5fe5320cd581fc"
        },
        "downloads": -1,
        "filename": "fameio-1.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b6f572578bae056b132db97f9156f69b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 52023,
        "upload_time": "2023-02-20T14:00:46",
        "upload_time_iso_8601": "2023-02-20T14:00:46.278038Z",
        "url": "https://files.pythonhosted.org/packages/dc/5b/ca1ec028cc3a33f703c7401d04e043f334c94b1cd159db557c76be4a0f8d/fameio-1.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "56fb757da895bd833f1e40746bb9cb5ff5adf45bcd1e7344dc7739872c558e73",
          "md5": "46f256f4975ebd115725558c41218c27",
          "sha256": "418cf76a9fcaa2c70e8e3ba5e044b0195b835c623204f771782f4a2ac6f3b7ed"
        },
        "downloads": -1,
        "filename": "fameio-1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "46f256f4975ebd115725558c41218c27",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 47648,
        "upload_time": "2023-02-20T14:00:49",
        "upload_time_iso_8601": "2023-02-20T14:00:49.279415Z",
        "url": "https://files.pythonhosted.org/packages/56/fb/757da895bd833f1e40746bb9cb5ff5adf45bcd1e7344dc7739872c558e73/fameio-1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dc5bca1ec028cc3a33f703c7401d04e043f334c94b1cd159db557c76be4a0f8d",
        "md5": "b6f572578bae056b132db97f9156f69b",
        "sha256": "90514dea431362062d0abeff7fd4a54d73a9ace89ef5a6260b5fe5320cd581fc"
      },
      "downloads": -1,
      "filename": "fameio-1.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b6f572578bae056b132db97f9156f69b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 52023,
      "upload_time": "2023-02-20T14:00:46",
      "upload_time_iso_8601": "2023-02-20T14:00:46.278038Z",
      "url": "https://files.pythonhosted.org/packages/dc/5b/ca1ec028cc3a33f703c7401d04e043f334c94b1cd159db557c76be4a0f8d/fameio-1.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "56fb757da895bd833f1e40746bb9cb5ff5adf45bcd1e7344dc7739872c558e73",
        "md5": "46f256f4975ebd115725558c41218c27",
        "sha256": "418cf76a9fcaa2c70e8e3ba5e044b0195b835c623204f771782f4a2ac6f3b7ed"
      },
      "downloads": -1,
      "filename": "fameio-1.7.tar.gz",
      "has_sig": false,
      "md5_digest": "46f256f4975ebd115725558c41218c27",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 47648,
      "upload_time": "2023-02-20T14:00:49",
      "upload_time_iso_8601": "2023-02-20T14:00:49.279415Z",
      "url": "https://files.pythonhosted.org/packages/56/fb/757da895bd833f1e40746bb9cb5ff5adf45bcd1e7344dc7739872c558e73/fameio-1.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}