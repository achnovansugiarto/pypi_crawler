{
  "info": {
    "author": "Felix Ceard-Falkenberg",
    "author_email": "fece00001@stud.uni-saarland.de",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.10"
    ],
    "description": "# Eb-maj7\n\n## Description\nEb-maj7 (pronounced E flat major 7) is an esoteric programming language that runs programs and outputs a midi file. \nThis means that one can run an artificial intelligence while writing it so, that it outputs a beautiful midi file to play.<br>\nYou have to figure out on what languages this languages takes references, I don't know myself.\n\n## Run\nTo run a program, simply clone the repo and run the following cmd: `./maj7.py <path to file>`. <br>\nNOTE: make sure that by default, a python file is opened with an interpreter, not with pycharm etc... <br>\nNOTE 2: this will change to simple cmd (`maj7 [run|build] [path]`)<br>\n\n# Source\nThe pip version can be found on GitHub under [this link](https://github.com/FelixCeard/maj7). <br>\nThe development version can be found on GitHub under [this link](https://github.com/FelixCeard/Eb-maj7).\n\n\n## How to write a program?\nThis is (not) very simple. A program consists of:\n- a header\n  - a title\n  - a key\n  - a composer\n  - a date\n  - a place\n    - **NOTE**: the naming of the place will be important later on\n  - a timing\n  - the name of the main function (it has to be a `Bar`)\n- at least one `Bar`\n- as many `Chord` as you wish - I mean, you are the composer right?\n\n### Header\nThe header is to be writen like this:\n```\n<title> in <key>\n<composer>\nComposed in <date>\nComposed in [as many words as you wish, only the last is kept] <place>\n\nTime: <time>\n\nopening in <name of the first Bar>\n```\n\n#### Title\nThe Title is not important for the project, so you can write whatever you want, Mr. Hans Zimmer. \n<br>Note that it only accepts **letters**.\n\n#### Key\nThe key has the following Grammar: ```<A|B|C|D|E|F|G>[#] <Major|Minor>```.\nExample: `A# Major`.\n\n#### Composer\nThe Composer is not important for the project, so it can contain whatever you wish Einstein.\n<br>Note that it only accepts **letters**.\n\n#### Date:\nThe Date may or may not be important for the project. \n<br>Note that it only accepts **arabic numbers** (0-9).\n\n#### Place\nThe place **is very important**. The last word you put after \"Composed in\" will be the name of the list (you will soon learn what this list is).\n<br>Note that it only accepts **letters**.\n\n#### Time\nSame as date, you know the procedure...\n\n#### Name of the first Bar\nLike the name states, it's the name of the first Bar you want to execute.\n\n### Rest\nSo here you are young padawan, motivated to learn about this language. Nice! <br>\nSo first up: forget variables...<br>\n\n#### Variables\n...wait not entirely, the language has two variables: `LeftHand` and `RightHand`. (I hope you understand the naming)\n\n#### List\n\"*But I need more variables!!*\" you may ask... and you'd be wrong but still... I thought of everything.  \nAs hinted above there is a (infinitely big) list where you can store values - remember: you named it, it's where you've written your composition.\n<br> to access the content: `<list name>/<index>`.\nNote that index can be a `note number` or a variable.\n\n#### Wait... what's a \"note number\"\nWell... numbers doesn't really exist in arabic form. \n<br>You may create a number by the following rules:\n- a note has a [value](./docs/note_values.md)\n  - for example: `C` is 0, `D` is 2, `D#` is 3 etc...\n  - Capital letters a positive, small letters are negative\n    - `d` is -2\n  - Note that you can have as many `#` as you wish, so `D##` is 4.\n- two notes that a next to each other are being multiplied\n  - for example: `DD` is 4 (2x2), `D#D` is 6 (3x2)\n- note groups separated by a `,` are being added together\n  - for example `D#, D` is 5 (3+2), `D#D, D` is 8 (3x2 + 2)\n\nOnce you've understood how that works, you just have to relearn how to do basic math, it's a good exercise for the brain old man (or old woman).\n  \n#### Assignments\nShort answer:\n`<variable, list> := <variable, list, note number>`. <br>\nReason being that i just liked the aesthetic of `:=`, deal with it I guess right.\n\n#### Loops\nLoops are very simple:\n\n##### For\n```\nn|:\n  [code]\n:|\n```\n\nYour code will be looped n times over.\n\n##### While\n```\n|:\n  [code]\n:|\n```\nYour code will be looped **infinitely** over. You have to stop the loop with a `tenuto`.\n\n#### If\n```\n<keyword> a b <play NAME|tenuto> [<keyword> <play NAME| tenuto>]\n```\nIf statements are pretty easy for intelligent people to understand. They are 4 keywords: `forte`, `piano`, `harmonizes`.\n<br> The first keyword determines the type of check that is being made\n- forte: a > b\n- piano: a < b\n- harmonizes: a == b (Yes I know, harmonies are more complex, but I think that this is not my problem right?)\n\nNOTE: for the second keyword, a different keyword than the first one should be created, and harmonizes can't be used for the second keyword.\n\n#### Print\nTo print sth. to the console, we have two possibilities:\n- `press [hard] <value>` - System.out.print(\\<value>)\n- `smash [hard] <value>` - System.out.println(\\<value>)\n\nIf the keyword `hard` is being used, then the true value of `value` is printed, else it's the ascii representation.\n\n#### Comments \nMade using `#`. Avoid using inline comments, it's not very stable.\n\n#### Bar and Chords\nEverything (above) must be written in a Bar or a Chord.<br>\nBars and Chords are basically functions. For the program, they have no difference, but will do different jobs at generating the midi file.\n\n#### Play\nTo run a Bar or a chord, simply write `play <name>`.<br>\nNOTE: LeftHand and RightHand are only local, so the played chord/bar doesn't inherit the values of the last chord/bar.\n\n#### User input\nYou can use `listen` in a declaration to listen to the users input. Only the ascii number of the first char is returned.\n\n----\n## Example program that print \"Hello World\"\n```yaml\nFuer Elise in A Minor\nLudwig van Beethoven\nComposed in 1802\nComposed in a Saloon\n\nTime: 138\n\nopening in Hello World\n\n# Comment style 1\n\nBar: Hello World\n  play Write in ens Muda\n  play print\n\nChord: Write in ens Muda\n  # init index 0\n  LeftHand := C\n  RightHand := C\n\n  # Write H to index\n  Saloon/LeftHand := AF#, D # 72\n\n  # increment index by 1\n  LeftHand := LeftHand, C#\n\n  # Write e\n  # etc...\n  Saloon/LeftHand := AA, C# # 101\n  LeftHand := LeftHand, C#\n\n  # l\n  Saloon/LeftHand := AA#, d # 108 (10x11 - 2)\n  LeftHand := LeftHand, C#\n\n  # l\n  Saloon/LeftHand := AA, G # 108 (10x10 + 8)\n  LeftHand := LeftHand, C#\n\n  # o\n  Saloon/LeftHand := AA, A# # 111\n  LeftHand := LeftHand, C#\n\n  # \" \"\n  Saloon/LeftHand := EED # 32\n  LeftHand := LeftHand, C#\n\n  # W\n  Saloon/LeftHand := EDA, F#\n  LeftHand := LeftHand, C#\n\n  # o\n  Saloon/LeftHand := AA, A# # 111\n  LeftHand := LeftHand, C#\n\n  # r\n  Saloon/LeftHand := AA#, E\n  LeftHand := LeftHand, C#\n\n  # l\n  Saloon/LeftHand := AA, G # 108\n  LeftHand := LeftHand, C#\n\n  # d\n  Saloon/LeftHand := AA # 100\n  LeftHand := LeftHand, C#\n\n  # !\n  Saloon/LeftHand := EED, C# # 33\n  LeftHand := LeftHand, C#\n\n\nChord: print\n    # One could also print the chars directly in the above Chord.\n    # This Chord is only there to show for loops\n    LeftHand := C\n    12|:\n        press Saloon/LeftHand\n        LeftHand := LeftHand, C#\n    :|\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/FelixCeard/maj7",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "maj7",
    "package_url": "https://pypi.org/project/maj7/",
    "platform": "",
    "project_url": "https://pypi.org/project/maj7/",
    "project_urls": {
      "Bug Tracker": "https://github.com/FelixCeard/maj7/issues",
      "Homepage": "https://github.com/FelixCeard/maj7"
    },
    "release_url": "https://pypi.org/project/maj7/0.9.2/",
    "requires_dist": null,
    "requires_python": ">=3.10",
    "summary": "An interpreter for the programming language Eb-maj7",
    "version": "0.9.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12643543,
  "releases": {
    "0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "006dcfb2566b06ab774e9b4c4d9561fb97285bbada5976c1e79e9dfda5483241",
          "md5": "80b9c8e4a35142ce5adc1c52cb0e7607",
          "sha256": "fca95a3e55ac2fb5d5802b8aff69907997a8a56fa4e5251aef3543585bb24fc0"
        },
        "downloads": -1,
        "filename": "maj7-0.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "80b9c8e4a35142ce5adc1c52cb0e7607",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 28245,
        "upload_time": "2022-01-21T09:05:45",
        "upload_time_iso_8601": "2022-01-21T09:05:45.494107Z",
        "url": "https://files.pythonhosted.org/packages/00/6d/cfb2566b06ab774e9b4c4d9561fb97285bbada5976c1e79e9dfda5483241/maj7-0.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6cabf8c97d929d9eb9adcc09f2b561c08c684735cd0723e8cbb9fb2aa523aca9",
          "md5": "fd59ddcd2034729a48511b3d4c017c54",
          "sha256": "b42d025fca4ab5bbdd6b0230da4f3bcbdc2f45d23cb94789cd33826a4b685936"
        },
        "downloads": -1,
        "filename": "maj7-0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "fd59ddcd2034729a48511b3d4c017c54",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 29635,
        "upload_time": "2022-01-21T09:05:47",
        "upload_time_iso_8601": "2022-01-21T09:05:47.047514Z",
        "url": "https://files.pythonhosted.org/packages/6c/ab/f8c97d929d9eb9adcc09f2b561c08c684735cd0723e8cbb9fb2aa523aca9/maj7-0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8fcc1dd182de3536995287f792169c05b9fa6d812fada7ff4f9a3ab31fe8a368",
          "md5": "0d885c65fe0e973fbb6ef8912909818c",
          "sha256": "671f46d83b0b331f4436042d09d885bf3d1e3af879195e5632d716be84070f18"
        },
        "downloads": -1,
        "filename": "maj7-0.9.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0d885c65fe0e973fbb6ef8912909818c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 16628,
        "upload_time": "2022-01-21T10:58:12",
        "upload_time_iso_8601": "2022-01-21T10:58:12.607916Z",
        "url": "https://files.pythonhosted.org/packages/8f/cc/1dd182de3536995287f792169c05b9fa6d812fada7ff4f9a3ab31fe8a368/maj7-0.9.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4fa7e1d0fc18aa3275e46ebb7ec97b16ea72a85301090a6a462c1ff7743db63",
          "md5": "3628bceb2bf68b44e045720c762d122a",
          "sha256": "1fb316a81066f240f8c5daebc741a779394d66ba0a26c66aaab73bd30b614b96"
        },
        "downloads": -1,
        "filename": "maj7-0.9.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3628bceb2bf68b44e045720c762d122a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 17984,
        "upload_time": "2022-01-21T10:58:14",
        "upload_time_iso_8601": "2022-01-21T10:58:14.184973Z",
        "url": "https://files.pythonhosted.org/packages/a4/fa/7e1d0fc18aa3275e46ebb7ec97b16ea72a85301090a6a462c1ff7743db63/maj7-0.9.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7b289314ffbe95cd09fcb5c641b5cfea510940b96e832e273769edcad9da384a",
          "md5": "e28be87edacd93ae1efffc6ea53b3208",
          "sha256": "fdc7b9eb031330fd46ed630cd21ac4a8b8e388e47b3b648693a4cf04f405752c"
        },
        "downloads": -1,
        "filename": "maj7-0.9.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e28be87edacd93ae1efffc6ea53b3208",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 16514,
        "upload_time": "2022-01-21T11:10:51",
        "upload_time_iso_8601": "2022-01-21T11:10:51.148944Z",
        "url": "https://files.pythonhosted.org/packages/7b/28/9314ffbe95cd09fcb5c641b5cfea510940b96e832e273769edcad9da384a/maj7-0.9.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "953f9bae583f8bd8cbad6ca269894dcc0c4751e5c1ece5e2f80fe2fed7370fd8",
          "md5": "33e4ad63ba8fbe812b27507127db0542",
          "sha256": "00bead83e741a698074eb52360a63208e025b5611c3fef7855a49b1c092bb039"
        },
        "downloads": -1,
        "filename": "maj7-0.9.2.tar.gz",
        "has_sig": false,
        "md5_digest": "33e4ad63ba8fbe812b27507127db0542",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 17905,
        "upload_time": "2022-01-21T11:10:52",
        "upload_time_iso_8601": "2022-01-21T11:10:52.361163Z",
        "url": "https://files.pythonhosted.org/packages/95/3f/9bae583f8bd8cbad6ca269894dcc0c4751e5c1ece5e2f80fe2fed7370fd8/maj7-0.9.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7b289314ffbe95cd09fcb5c641b5cfea510940b96e832e273769edcad9da384a",
        "md5": "e28be87edacd93ae1efffc6ea53b3208",
        "sha256": "fdc7b9eb031330fd46ed630cd21ac4a8b8e388e47b3b648693a4cf04f405752c"
      },
      "downloads": -1,
      "filename": "maj7-0.9.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e28be87edacd93ae1efffc6ea53b3208",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10",
      "size": 16514,
      "upload_time": "2022-01-21T11:10:51",
      "upload_time_iso_8601": "2022-01-21T11:10:51.148944Z",
      "url": "https://files.pythonhosted.org/packages/7b/28/9314ffbe95cd09fcb5c641b5cfea510940b96e832e273769edcad9da384a/maj7-0.9.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "953f9bae583f8bd8cbad6ca269894dcc0c4751e5c1ece5e2f80fe2fed7370fd8",
        "md5": "33e4ad63ba8fbe812b27507127db0542",
        "sha256": "00bead83e741a698074eb52360a63208e025b5611c3fef7855a49b1c092bb039"
      },
      "downloads": -1,
      "filename": "maj7-0.9.2.tar.gz",
      "has_sig": false,
      "md5_digest": "33e4ad63ba8fbe812b27507127db0542",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10",
      "size": 17905,
      "upload_time": "2022-01-21T11:10:52",
      "upload_time_iso_8601": "2022-01-21T11:10:52.361163Z",
      "url": "https://files.pythonhosted.org/packages/95/3f/9bae583f8bd8cbad6ca269894dcc0c4751e5c1ece5e2f80fe2fed7370fd8/maj7-0.9.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}