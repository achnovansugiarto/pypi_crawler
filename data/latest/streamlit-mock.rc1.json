{
  "info": {
    "author": "",
    "author_email": "Andrew Schofield <andrew@schofield.ch>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "License :: OSI Approved :: MIT License",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3"
    ],
    "description": "# streamlit_mock\n\nMock of streamlit to allow unit tests\n\n## Background\n\nOur simple streamlit applciation calling a REST API backend grew over time, became not so simple and needed a test suite.\nWe wrote some Selenium tests, but these are tricky to get right and run relatively slowly.\nThis package \"mocks\" most streamlit class to allow \"pytest\" to be used for testing.\n\nGoals:\n\n* Allow tests to be written using pytest\n  \n* Tests should run quickly so that multiple edge cases and variants can be tested\n  \n* Tests should be concise and easy to write\n\nNon-Goals\n\n* Testing streamlit itself (the package removes all dependnecies on the real streamlitk)\n  \n* Testing that the app uses Streamlit correctly (the package fakes input and records outputs)\n  \n* To be as complete as an end-to-end Selenium test (Streamlit/web server are out of the loop)\n\n## Limitations\n\n* The \"mock\" is probably missing some Streamlit calls.\n\n* The \"mock\" code could probably be simplified using Python magic to remove some of the boilerplate\n\n* If you want to mock the values of input elements, they should all have a \"key\" value. This may require some application changes but it is not obtrusive and is probably good preactice anyway.\n\n## Usage\n\nThe \"test\" directory contains some very simple Streamlit applications, each with a corresponding test. The tests also\nserve as programming examples.\n\n```\n$ cd test/simple_calculator\n```\n\nthen, to run the application under streamlit:\n\n```\n$ streamlit run main_simple_calculator.py\n```\n\nand to run the test with Streamlit mocked out\n\n```\n$ pytest test_simple_calculator.py\n```\n\n\n\n## Writing tests\n\nSee the examples, but the steps are-.\n\n1. import streamlit_mock - this adds itself to the front of the Python \"path\" so that the real Streamlit will not be used.\n\n2. Create a \"test_xxx\" function to be executed by \"pytest\"\n\n3. Set the inputs in `st.session_state`, See the \"form_calculator\" example to see how form_submit_button's are handled. These do not have a \"key\".\n   \n4. Run the streamlit application and get the \"results\".\n\n5. \"results\" is a dictionary of lists where the interactions are recorded\n\n6. Assert that the results are as expected. I have found it useful to temporarily print the results during test development to see what is expected/missing and then add asserts to confirm this behavior on future runs. Perhaps this should be added as a pytest option\n   \n## Tests requiring multiple \"run\"s\n\nSome tests require that the streamlit application be run more than once to create intermediate results in `session_state`.\n\nIn this case, you can follow the following sps (assuminh two \"run\"s)\n\n1. Create a StreamlitMock and get it's session_state in variable `session_state_1`\n2. Set up the input values in `session_state_1`\n3. Call \"run\" on the StreamlitMock object\n4. Optionally assert some values in \"results\"\n5. Create a new StreamlitMock and get its session_state in variable `session_state_2`\n6. `session_state_2.update(session_state_1)`\n7. Set additional input values in `session_state_2` for the second run\n8. Call \"run\" on the second StreamlitMock object\n9. Assert the results",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT License  Copyright (c) 2022 Andrew Schofield  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "maintainer": "",
    "maintainer_email": "",
    "name": "streamlit-mock",
    "package_url": "https://pypi.org/project/streamlit-mock/",
    "platform": null,
    "project_url": "https://pypi.org/project/streamlit-mock/",
    "project_urls": {
      "repository": "https://github.com/acschofield/streamlit_mock"
    },
    "release_url": "https://pypi.org/project/streamlit-mock/0.0.1/",
    "requires_dist": [
      "addict"
    ],
    "requires_python": ">=3.8",
    "summary": "Mocks the stremlit interfaces for unit testing",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14653242,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9df974ba156a2d06844c0af7e174b5a3aa9696f59f58d129d46f2cf9163af524",
          "md5": "d6b844dccc98e291b72813bec5b68690",
          "sha256": "76efdeba74d57a94996f42c0de0cdb3c5897379a670c15d090d5c3f4c2f32e61"
        },
        "downloads": -1,
        "filename": "streamlit_mock-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d6b844dccc98e291b72813bec5b68690",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 9953,
        "upload_time": "2022-08-04T13:57:36",
        "upload_time_iso_8601": "2022-08-04T13:57:36.955427Z",
        "url": "https://files.pythonhosted.org/packages/9d/f9/74ba156a2d06844c0af7e174b5a3aa9696f59f58d129d46f2cf9163af524/streamlit_mock-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c834868f8a07605950060f2a153a2cc7308f3fd3314314f848fe5aede0e5fbb0",
          "md5": "f03f9e2b80c29db025a20781300b8db6",
          "sha256": "b0e7e352b42b4f89ff8a620c224d33e76e69c7b762071d0606b852299a7fe981"
        },
        "downloads": -1,
        "filename": "streamlit_mock-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f03f9e2b80c29db025a20781300b8db6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 10576,
        "upload_time": "2022-08-04T13:57:39",
        "upload_time_iso_8601": "2022-08-04T13:57:39.828326Z",
        "url": "https://files.pythonhosted.org/packages/c8/34/868f8a07605950060f2a153a2cc7308f3fd3314314f848fe5aede0e5fbb0/streamlit_mock-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9df974ba156a2d06844c0af7e174b5a3aa9696f59f58d129d46f2cf9163af524",
        "md5": "d6b844dccc98e291b72813bec5b68690",
        "sha256": "76efdeba74d57a94996f42c0de0cdb3c5897379a670c15d090d5c3f4c2f32e61"
      },
      "downloads": -1,
      "filename": "streamlit_mock-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d6b844dccc98e291b72813bec5b68690",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 9953,
      "upload_time": "2022-08-04T13:57:36",
      "upload_time_iso_8601": "2022-08-04T13:57:36.955427Z",
      "url": "https://files.pythonhosted.org/packages/9d/f9/74ba156a2d06844c0af7e174b5a3aa9696f59f58d129d46f2cf9163af524/streamlit_mock-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c834868f8a07605950060f2a153a2cc7308f3fd3314314f848fe5aede0e5fbb0",
        "md5": "f03f9e2b80c29db025a20781300b8db6",
        "sha256": "b0e7e352b42b4f89ff8a620c224d33e76e69c7b762071d0606b852299a7fe981"
      },
      "downloads": -1,
      "filename": "streamlit_mock-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "f03f9e2b80c29db025a20781300b8db6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 10576,
      "upload_time": "2022-08-04T13:57:39",
      "upload_time_iso_8601": "2022-08-04T13:57:39.828326Z",
      "url": "https://files.pythonhosted.org/packages/c8/34/868f8a07605950060f2a153a2cc7308f3fd3314314f848fe5aede0e5fbb0/streamlit_mock-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}