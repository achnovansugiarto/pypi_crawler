{
  "info": {
    "author": "Guangyu Suo",
    "author_email": "yugsuo@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Office/Business",
      "Topic :: Software Development :: Libraries",
      "Topic :: Utilities"
    ],
    "description": "sphinxcontrib-excel-table\n=========================\n\nThe sphinxcontrib-excel-table extension is to render an excel file as an excel-alike table in Sphinx documentation.\n\nThis contrib is inspired by sphinxcontrib-excel, which uses pyexcel and handsontable to do the\nwork, but the sphinxcontrib-excel-table will instead use openpyxl and handsontable, mainly to\nsupport the following features:\n\n* merged cell\n* display specific sheet\n* display specific section in one sheet\n* display specific rows in one sheet\n\nInstallation\n------------\n\nYou can install it via pip:\n\n.. code-block:: bash\n\n    $ pip install sphinxcontrib-excel-table\n\nor install it from source code:\n\n.. code-block:: bash\n\n    $ git clone https://github.com/hackerain/sphinxcontrib-excel-table.git\n    $ cd sphinxcontrib-excel-table\n    $ python setup.py install\n\nSetup\n-----\n\nAdd sphinxcontrib.excel_table to your conf.py file::\n\n    extensions = ['sphinxcontrib.excel_table']\n\nAnd you need to copy the resource files to your sphinx source directory, the resource files\nhas been installed to your python system path if you install the package via pip, you can copy\nthem from the installation path. You can get the installation path through::\n\n    python -c \"import sphinxcontrib.excel_table; print sphinxcontrib.excel_table\"\n\nfor example in Mac:\n\n.. code-block:: bash\n\n    $ INSTALLATION_PATH=/Library/Python/2.7/site-packages/sphinxcontrib/excel_table/\n    $ cp $INSTALLATION_PATH/resources/_templates/layout.html path/to/your/project/_templates/\n    $ cp $INSTALLATION_PATH/resources/_static/handsontable.full.min.js path/to/your/project/_static/\n    $ cp $INSTALLATION_PATH/resources/_static/handsontable.full.min.css path/to/your/project/_static/\n\nor you can copy the resource files from source code directly.\n\nUsage\n-----\n\nHere is the syntax to present your excel file in sphinx documentation:\n\n.. code-block::\n\n    .. excel-table::\n       :file: path/to/file.xlsx\n\nThis will translate to:\n\n.. image:: https://raw.githubusercontent.com/hackerain/sphinxcontrib-excel-table/master/sphinx_excel_table.png\n\nAs you can see, it supports merged cells, and this is the mainly goal this contrib will achieve, because other sphinxcontrib excel extensions don't support this feature, and are not convenient to implement it. The sphinxcontrib-excel-table can do this easily using openpyxl library.\n\nOptions\n-------\n\nThis sphinxcontrib provides the following options:\n\n**file (required)**\n\nRelative path (based on document) to excel documentation. Note that as openpyxl only supports excel xlsx/xlsm/xltx/xltm files, so this contrib doesn't support other old excel file formats like xls.\n\n.. code-block::\n\n    .. excel-table::\n       :file: path/to/file.xlsx\n\n**sheet (optional)**\n\nSpecify the name of the sheet to dispaly, if not given, it will default to the first sheet in the excel file.\n\n.. code-block::\n\n    .. excel-table::\n       :file: path/to/file.xlsx\n       :sheet: Sheet2\n\nNote this contrib can only display one sheet in one excel-table directive, but you can display different sheet in one excel in different directives.\n\n**rows (optional)**\n\nSpecify the row range of one sheet do display, the default is to display all rows in one sheet, if you use this option, remember to specify a range seperated by a colon.\n\n.. code-block::\n\n    .. excel-table::\n       :file: path/to/file.xlsx\n       :rows: 1:10\n\n**selection (optional)**\n\nSelection defines from and to the selection reaches. If value is not defined, the whole data from sheet is taken into table. And if selection is used, it must specify the from and to range seperated by a colon.\n\n.. code-block::\n\n    .. excel-table::\n       :file: path/to/file.xlsx\n       :selection: A1:D10\n\n**overflow (optional)**\n\nPrevents table to overlap outside the parent element. If 'horizontal' option is chosen then table will appear horizontal\nscrollbar in case where parent's width is narrower then table's width. The default is 'horizontal', if you want to disable this feature, you can set false to this option.\n\n.. code-block::\n\n    .. excel-table::\n       :file: path/to/file.xlsx\n       :overflow: false\n\n**colwidths (optional)**\n\nDefines column widths in pixels. Accepts number, string (that will be converted to a number),\narray of numbers (if you want to define column width separately for each column) or a\nfunction (if you want to set column width dynamically on each render). The default value is undefined, means the width will be determined by the parent elements.\n\n.. code-block::\n\n    .. excel-table::\n       :file: path/to/file.xlsx\n       :colwidths: 100\n\n**row_header (optional)**\n\nTo decide whether to show the row header, the default is true, means to show the row header, you can\nset this to false to disable the row header.\n\n.. code-block::\n\n    .. excel-table::\n       :file: path/to/file.xlsx\n       :row_header: false\n\n**col_header (optional)**\n\nTo decide whether to show the col header, the default is true, means to show the col header, you can\nset this to false to disable the col header.\n\n.. code-block::\n\n    .. excel-table::\n       :file: path/to/file.xlsx\n       :col_header: false\n\nChange log\n==========\n\n1.0.0\n-----\n\n* Refactor the code to one folder\n\n1.0.1\n-----\n\n* Add margin bottom to excel table div\n\n1.0.2\n-----\n\n* Add row_header and col_header option to control whether to show the headers\n\n1.0.3\n-----\n\n* Fix bug when openpyxl upgrade to 2.5.2\n\n1.0.4\n-----\n\n* Add python 3 support\n\n1.0.6\n-----\n\n* Fix bug when calls to the same file multiple times chunks the table together\n* Fix bug date NameError when running in Python 3\n* Use the new merged_cells interface of openpyxl\n\n1.0.7\n-----\n\n* Adds the ability to set the table width\n\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "https://github.com/hackerain/sphinxcontrib-excel-table/archive/1.0.7.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hackerain/sphinxcontrib-excel-table",
    "keywords": "python,sphinx,excel",
    "license": "Apache License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sphinxcontrib-excel-table-enhanced",
    "package_url": "https://pypi.org/project/sphinxcontrib-excel-table-enhanced/",
    "platform": "",
    "project_url": "https://pypi.org/project/sphinxcontrib-excel-table-enhanced/",
    "project_urls": {
      "Download": "https://github.com/hackerain/sphinxcontrib-excel-table/archive/1.0.7.tar.gz",
      "Homepage": "https://github.com/hackerain/sphinxcontrib-excel-table"
    },
    "release_url": "https://pypi.org/project/sphinxcontrib-excel-table-enhanced/1.0.7/",
    "requires_dist": [
      "docutils",
      "sphinx",
      "openpyxl",
      "jinja2"
    ],
    "requires_python": "",
    "summary": "Embed excel file as an excel-alike table into sphinx documentation.",
    "version": "1.0.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 5684890,
  "releases": {
    "1.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "64ee5306b779a3e29f7cd54e21fc5fb657f06529a4924965131b4ac158122bd1",
          "md5": "e844a378564af3a7d58a3633f89e9b4f",
          "sha256": "c751d7f35836ddc7426aa695cb515bcf2800ed09142cf758a6c4a70e0f6591ba"
        },
        "downloads": -1,
        "filename": "sphinxcontrib_excel_table_enhanced-1.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e844a378564af3a7d58a3633f89e9b4f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 163063,
        "upload_time": "2019-08-15T23:51:20",
        "upload_time_iso_8601": "2019-08-15T23:51:20.554090Z",
        "url": "https://files.pythonhosted.org/packages/64/ee/5306b779a3e29f7cd54e21fc5fb657f06529a4924965131b4ac158122bd1/sphinxcontrib_excel_table_enhanced-1.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "64ee5306b779a3e29f7cd54e21fc5fb657f06529a4924965131b4ac158122bd1",
        "md5": "e844a378564af3a7d58a3633f89e9b4f",
        "sha256": "c751d7f35836ddc7426aa695cb515bcf2800ed09142cf758a6c4a70e0f6591ba"
      },
      "downloads": -1,
      "filename": "sphinxcontrib_excel_table_enhanced-1.0.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e844a378564af3a7d58a3633f89e9b4f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 163063,
      "upload_time": "2019-08-15T23:51:20",
      "upload_time_iso_8601": "2019-08-15T23:51:20.554090Z",
      "url": "https://files.pythonhosted.org/packages/64/ee/5306b779a3e29f7cd54e21fc5fb657f06529a4924965131b4ac158122bd1/sphinxcontrib_excel_table_enhanced-1.0.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}