{
  "info": {
    "author": "Pigeon Nation",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Other/Nonlisted Topic"
    ],
    "description": "## Introduction\n\nTimeQuery is a Python module that allows you to get the time from anywhere in the world. It is designed to be more user-firendly then datetime and zoneinfo, and is programmed to act as a midway point between your application and these two modules. Designed to be as simple as possible, TimeQuery is small and yet effective in many ways.\n\n## Usage\n\nIn order to get the time from anywhere in the world, you first need to use the `now_in(...)` function. In order to use `now_in(...)`, you simply pass the location of where you want to tell the time into it's only parameter: \"`cont`\". An example is shown below: \\\n\\\n`>>> loc = TimeQuery.now_in('Japan')`\n\\\nIf a country has more than one timezone, you can do this:\\\n\\\n`>>> loc = TimeQuery.now_in('Chile/EasterIsland')` \\\n\\\nThis \"`now_in(...)`\" function will then return data which can be stored in a variable or passed into the next function, which will output the time itself - `now(...)`. An example of you to use \"`now(...)`\" is shown below: \\\n\\\n`>>> TimeQuery.now(loc)`\\\n\\\nIf you used the code from before, you should have a readout of the time on your screen, featuring the date (in DMY form - **you will know how to change this in a sec**), 12 hour time, 24 hour time, and the current timezone you are in (abbreviated). \\\n\\\nIf you wish to have that date written out in a different form, you can use the following \\\ncommand:\\\n\\\n`>>> TimeQuery.now(loc, TimeQuery.time_formats['ymd all'])`\\\n\\\nThis will show the time exactly same as before, but the data is now in YMD form. \\\n\n### Formatting Options\n\n\nThe formatting dictionary, as it currently is, has these options: \n\n#### Day-Month-Year\n##### Time-Inc\ndmy date 12hr apm zone\\\ndmy date 24hr zone\\\ndmy date 12hr apm\\\ndmy date 24hr\n##### No-Time\ndmy date\\\ndmy date zone\n\n#### Year-Month-Day\n##### Time-Inc\nymd date 12hr apm zone\\\nymd date 24hr zone\\\nymd date 12hr apm\\\nymd date 24hr\n##### No-Time\nymd date\\\nymd date zone\n\n#### Month-Day-Year\n##### Time-Inc\nmdy date 12hr apm zone\\\nmdy date 24hr zone\\\nmdy date 12hr apm\\\nmdy date 24hr\n##### No-Time\nmdy date\\\nmdy date zone\n    \n#### Time Only\n12hr apm\\\n24hr\\\n12hr apm zone\\\n24hr zone\\\n24hr / 12hr apm\\\n24hr / 12hr apm zone\n\n#### Special - \"All\"\nall dmy\\\nall ymd\\\nall mdy\n    \n#### Timezone [Special]\ntz\n\n### Getting the Areas\n\nIt is quite hard to predict the names of the \"`zoneinfo` places\". That is why TimeQuery includes the function `tzfold()`, which will show you to the path(s) to the folder that all the \"places\" are in. In this folder, all the countries that *only have one timezone* are files. All the countries that have multiple are represented as folders, with the areas that have their own timezone within that \"country folder\". Note that several time-related acronyms can be located in the main and sub folders. Example usage is shown below: \\\n\\\n`>>> path = TimeQuery.tzfold()`\n\n## Technical ⚙️\n\nThere is nothing too technical in this module.\n\n## Credits\n\nThis module was put together by:\\\nPigeon Nation :] \\\n\\\nThis module is mainly a in-between script. The true functionality that makes this module work comes from datetime and zoneinfo; this module just makes things simpler and more understandable.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "TimeQuery",
    "package_url": "https://pypi.org/project/TimeQuery/",
    "platform": null,
    "project_url": "https://pypi.org/project/TimeQuery/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/TimeQuery/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Gets the time from specific locations.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16327759,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f0f7eee56522af369fcc41ab3b4a94a42a28d4d8c40a2ee5dc022376708d04ba",
          "md5": "9adb2f4646a15cc1a6fbf26ea613d1c1",
          "sha256": "ddfa18839f0dcf97b99440855fd73403c2c0ef5e6725f0419a11212b70da6451"
        },
        "downloads": -1,
        "filename": "TimeQuery-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9adb2f4646a15cc1a6fbf26ea613d1c1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4156,
        "upload_time": "2023-01-06T06:58:18",
        "upload_time_iso_8601": "2023-01-06T06:58:18.585123Z",
        "url": "https://files.pythonhosted.org/packages/f0/f7/eee56522af369fcc41ab3b4a94a42a28d4d8c40a2ee5dc022376708d04ba/TimeQuery-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1e80c42c3ed95e36d210c7edbe522f5cc73e73cf453d9c14c7ac9bad69436bb5",
          "md5": "dfa97b0a40d4d7ce4ddb04c418ffc4a0",
          "sha256": "5539572835ca8adca6e1b698348b36dddb06783e3585eb20fbac009e23182b3b"
        },
        "downloads": -1,
        "filename": "TimeQuery-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "dfa97b0a40d4d7ce4ddb04c418ffc4a0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4111,
        "upload_time": "2023-01-06T06:58:20",
        "upload_time_iso_8601": "2023-01-06T06:58:20.198218Z",
        "url": "https://files.pythonhosted.org/packages/1e/80/c42c3ed95e36d210c7edbe522f5cc73e73cf453d9c14c7ac9bad69436bb5/TimeQuery-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f0f7eee56522af369fcc41ab3b4a94a42a28d4d8c40a2ee5dc022376708d04ba",
        "md5": "9adb2f4646a15cc1a6fbf26ea613d1c1",
        "sha256": "ddfa18839f0dcf97b99440855fd73403c2c0ef5e6725f0419a11212b70da6451"
      },
      "downloads": -1,
      "filename": "TimeQuery-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9adb2f4646a15cc1a6fbf26ea613d1c1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 4156,
      "upload_time": "2023-01-06T06:58:18",
      "upload_time_iso_8601": "2023-01-06T06:58:18.585123Z",
      "url": "https://files.pythonhosted.org/packages/f0/f7/eee56522af369fcc41ab3b4a94a42a28d4d8c40a2ee5dc022376708d04ba/TimeQuery-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1e80c42c3ed95e36d210c7edbe522f5cc73e73cf453d9c14c7ac9bad69436bb5",
        "md5": "dfa97b0a40d4d7ce4ddb04c418ffc4a0",
        "sha256": "5539572835ca8adca6e1b698348b36dddb06783e3585eb20fbac009e23182b3b"
      },
      "downloads": -1,
      "filename": "TimeQuery-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "dfa97b0a40d4d7ce4ddb04c418ffc4a0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4111,
      "upload_time": "2023-01-06T06:58:20",
      "upload_time_iso_8601": "2023-01-06T06:58:20.198218Z",
      "url": "https://files.pythonhosted.org/packages/1e/80/c42c3ed95e36d210c7edbe522f5cc73e73cf453d9c14c7ac9bad69436bb5/TimeQuery-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}