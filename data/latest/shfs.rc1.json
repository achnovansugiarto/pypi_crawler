{
  "info": {
    "author": "Artem, et al.",
    "author_email": "artysolomko@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "<p align=\"center\"><img src=\"https://i.ibb.co/ZXSk6jG/machine-learning-1920x1180.jpg\" alt=\"machine-learning-1920x1180\"></p>\n \nLibrary consist of two groups of Classes - Feature selectors and DFwrapper to have a deal with outliers and correlation\n\n1. Feature selection group\n\nThe FeatureSelection calculates the importance of features based on the `Shap` library for a classification problem.\n  Only works with trees for better efficiency or models based on\n  gradient boosting. It is a priority to use such models as:\n   \n   Catboost - does not require handling of `NaN` and categories. works with `sklearn`\n\n    NOTE: If your import is failing due to a missing package, you can\n    manually install dependencies using either !pip or !apt.\n\n            !pip install shap \n            !pip install phik\n   \n  https://pypi.org/project/SHFS/\n  \n\n            FeatureSelectionClf - for classification\n            FeatureSelectionRegression - for regression\n            FeatureSelectionUniversal - for both classification and regression tasks\n\n  Quick start: [Collab](https://colab.research.google.com/drive/1eP6qZmxcTcsKgjLL7u_pHaM5sZc8346N?usp=sharing) and [Tutorial](https://nbviewer.org/github/ArtyKrafty/featureselectors/blob/main/Tutorial/Tutorials_ipynb_.ipynb)\n        \n\n  Parametrs. \n___\n    `estimator` :   \n        Supervised learning with the fit method will allow you to retrieve and select indices.\n        the most important features.\n    n_features_to_select: int, default = None.\n        The number of features to select, the default is None.\n    columns: List, default = None.\n        The list of attributes of the initial set, the default is None.\n    \n  Methods\n___\n    fit - trains and identifies the most important features\n    tranform - changes the original set and returns the selected attributes\n    get_index - Returns the selected indexes attributes\n\n    only for FeatureSelectionClf and FeatureSelectionRegression:\n\n    plot_values - plotting shap values\n    _estimator_type - @property method \n    get_feature_importance - Returns DataFrame FI\n  Note\n___\n Nan / Inf are allowed in case\n    they are accepted by the fit method model\n  Example use for classification\n___\n    cols = list(X_train.columns)\n    cat_features = list(X_train_cat.select_dtypes(include=['object', 'category']).columns)\n    num_features = list(X_train_cat.select_dtypes(exclude=['object', 'category']).columns)\n    estimator = CatBoostClassifier(**params_cat)\n    selector = FeatureSelectionClf(estimator, n_features_to_select=3, columns=cols) \n    preprocessor = ColumnTransformer (\n        transformers = [\n\n            ('std_scaler' , StandardScaler() , num_features) ,\n            ('cat' , OrdinalEncoder() , cat_features),\n            \n            ]\n    )\n    \n    pipe = Pipeline(steps=\n        \n        [ \n          ('preprocessor', preprocessor),\n          ('selector', selector)\n\n        ]\n    )\n       X_train_prep = pipe.fit_transform(X_train)\n       \nExample without Pipeline\n\n       cols = list(X_train.columns)\n       estimator = CatBoostClassifier(**params_cat)\n       selector = FeatureSelectionClf(estimator, n_features_to_select=3, columns=cols)\n       X = selector.fit(X_train_prep, y_train)\n\n\n2. DFwrapper\n\nDFwrapper - remove multicollinearity and outliers from Pandas DataFrame\n\n    Usage example\n    ----------\n    1. Collinearity\n\n    cleaner = DFwrapper()\n    new_df = cleaner.wrap_corr(df)\n\n    2. Outliers. Rough cleaning\n\n    cleaner = DFwrapper(low=.05, high=.95)\n    cleaned = cleaner.quantile_cleaner(df, cols_to_clean)\n\n    2. Outliers. Finer cleaning\n\n    cleaner = DFwrapper(koeff=1.5)\n    cleaned = cleaner.frame_irq(df, cols_to_clean)\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ArtyKrafty/featureselectors",
    "keywords": "shap,fi,pipeline",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "SHFS",
    "package_url": "https://pypi.org/project/SHFS/",
    "platform": "",
    "project_url": "https://pypi.org/project/SHFS/",
    "project_urls": {
      "Homepage": "https://github.com/ArtyKrafty/featureselectors"
    },
    "release_url": "https://pypi.org/project/SHFS/0.1.5/",
    "requires_dist": [
      "pandas",
      "numpy",
      "scikit-learn (==1.0.1)"
    ],
    "requires_python": ">=3.6",
    "summary": "Feature election group of classes calculate the importance of features based on the Shap library for the classification and regression problem Only works with randomforest models for efficiency or gradient boosting models. DFwrapper - remove multicollinearity and outliers",
    "version": "0.1.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12090184,
  "releases": {
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "150fb69c763857bcd12c74bc557dd8c4a45ad082607db0ff66cd8098c3eb3a5a",
          "md5": "ff47c3bc577d188e621b7d654d73ab6b",
          "sha256": "42b0e03007f0899e68ec5bedb9eb9dc041444106de92283ba4ed2141f4050cd1"
        },
        "downloads": -1,
        "filename": "SHFS-0.1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ff47c3bc577d188e621b7d654d73ab6b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10011,
        "upload_time": "2021-11-22T09:35:57",
        "upload_time_iso_8601": "2021-11-22T09:35:57.552587Z",
        "url": "https://files.pythonhosted.org/packages/15/0f/b69c763857bcd12c74bc557dd8c4a45ad082607db0ff66cd8098c3eb3a5a/SHFS-0.1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "07c3fc067196c2830990dbcbd609d8860e01bc82dc965e3ed86791560f6ede9d",
          "md5": "fbb4104bcbc34e2e8d8f7d92b479e799",
          "sha256": "8187be4fbab247812c8f4a87c5f317a1e82c4762981015ca65409491257992e1"
        },
        "downloads": -1,
        "filename": "SHFS-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "fbb4104bcbc34e2e8d8f7d92b479e799",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7294,
        "upload_time": "2021-11-22T09:35:58",
        "upload_time_iso_8601": "2021-11-22T09:35:58.844327Z",
        "url": "https://files.pythonhosted.org/packages/07/c3/fc067196c2830990dbcbd609d8860e01bc82dc965e3ed86791560f6ede9d/SHFS-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "150fb69c763857bcd12c74bc557dd8c4a45ad082607db0ff66cd8098c3eb3a5a",
        "md5": "ff47c3bc577d188e621b7d654d73ab6b",
        "sha256": "42b0e03007f0899e68ec5bedb9eb9dc041444106de92283ba4ed2141f4050cd1"
      },
      "downloads": -1,
      "filename": "SHFS-0.1.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ff47c3bc577d188e621b7d654d73ab6b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 10011,
      "upload_time": "2021-11-22T09:35:57",
      "upload_time_iso_8601": "2021-11-22T09:35:57.552587Z",
      "url": "https://files.pythonhosted.org/packages/15/0f/b69c763857bcd12c74bc557dd8c4a45ad082607db0ff66cd8098c3eb3a5a/SHFS-0.1.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "07c3fc067196c2830990dbcbd609d8860e01bc82dc965e3ed86791560f6ede9d",
        "md5": "fbb4104bcbc34e2e8d8f7d92b479e799",
        "sha256": "8187be4fbab247812c8f4a87c5f317a1e82c4762981015ca65409491257992e1"
      },
      "downloads": -1,
      "filename": "SHFS-0.1.5.tar.gz",
      "has_sig": false,
      "md5_digest": "fbb4104bcbc34e2e8d8f7d92b479e799",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 7294,
      "upload_time": "2021-11-22T09:35:58",
      "upload_time_iso_8601": "2021-11-22T09:35:58.844327Z",
      "url": "https://files.pythonhosted.org/packages/07/c3/fc067196c2830990dbcbd609d8860e01bc82dc965e3ed86791560f6ede9d/SHFS-0.1.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}