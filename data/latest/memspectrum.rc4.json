{
  "info": {
    "author": "Alessandro Martini",
    "author_email": "martini.alessandr@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "memspectrum\n===========\n\n**Authors** Alessandro Martini, Stefano Schmidt, Walter del Pozzo\n\n**emails** martini.alessandr@gmail.com, stefanoschmidt1995@gmail.com, walter.delpozzo@ligo.org\n\n**Copyright** Copyright (C) 2020 Alessandro Martini\n\n**Licence** CC BY 4.0\n\n**Version** 1.2.0\n\nMAXIMUM ENTROPY ESTIMATION ALGORITHM FOR ACCURATE PSD COMPUTATION\n=================================================================\n\n``memspectrum`` is a package for the computation of power spectral densitiy (PSD) of time series. \nIt implements a fast numpy verion of the Burg method for Maximum Entropy Spectral Analysis.\nThe method is fast and reliable and shows better performance than other standard methods.\n\nThe method is based on the maximum entropy principle, and it allows to make minimal\n assumptions on unavailable information. Furthermore, it provides a beatiful link between spectral \n analysis and the theory of autoregressive processes\n\nThe PSD is expressed in terms of a set of coefficients a_k plus an overall scale factor P.\nThe a_ks are obtained recursively through the Levinson recursion.\nThe knowledge of such coefficients allows to characterize the observed time series in terms of \nan autoregressive process of order p (AR(p)), being p + 1 the lenght of the a_k array.\nThe a_k coefficients are the autoregressive coefficients, while the P scale factor can be interpreted \nas the variance of white noise component for the process. \nOnce the link with an AR(p) process is established, high quality forecast for the time series is straightforward.\n\nUsage of memspectrum\n====================\n\nTo get the PSD computed, the following steps are required\n\n+ Import the data\n+ Import `memspectrum` and create an instance of ``MESA`` class:\n\n::\n\n\tfrom memspectrum import MESA\n\tm = MESA()\n\n+ Compute the autoregressive coefficients via the ``solve()`` method (*required* for further computations)\n\n::\n\n\tm.solve(data)\n\n+ At this point you can compute the spectrum and forecast N future observations\n\n::\n\n\tspec, frequencies = m.spectrum(dt)\n\tpredicted_data = m.forecast(data, N)\n\nSinusoid example \n================\nTo compute (and plot) the spectrum of a (noisy) sinusoidal signal:\n::\n\n\tfrom memspectrum import MESA \n\timport numpy as np\n\timport matplotlib.pyplot as plt\n\nGenerating the data: \n::\n\n\tN, dt = 1000, .01  #Number of samples and sampling interval\n\ttime = np.arange(0, N) * dt\n\tfrequency = 2  \n\tdata = np.sin(2 * np.pi * frequency * time) + np.random.normal(.4, size = 1000) \n\tplt.plot(time, data, color = 'k') \n\n.. image:: https://raw.githubusercontent.com/martini-alessandro/Maximum-Entropy-Spectrum/main/memspectrum_package/ReadMeFigures/Data.jpeg\n   :width: 700px\n\n\n\nSolving MESA is needed to compute PSD or forecast. \n::\n\n\tM = MESA() \n\tM.solve(data) \n\nThe spectrum can be computed on sampling frequencies (automatically generated) or on \nsome given interval \n::\n\n\tspectrum, frequencies = M.spectrum(dt)  #Computes on sampling frequencies \n\tuser_frequencies = np.linspace(1.5, 2.5)\n\tuser_spectrum = M.spectrum(dt, user_frequencies) #Computes on desired frequency grid\n\nThe two spectra look like\n\n.. image:: https://raw.githubusercontent.com/martini-alessandro/Maximum-Entropy-Spectrum/main/memspectrum_package/ReadMeFigures/Spectrum.jpeg\n   :width: 700px\n\n\nIt can also be used to perform forecasting. For example, we consider the first 900 points \nof the data and try to infer the upcoming signal. 1000 simulations of 100 points are performed.\nReal observed data are compared with median estimate and 90% Credibility regions \n::\n\n\tM = MESA() \n\tM.solve(data[:-100]) \n\tforecast = M.forecast(data[:-100], length = 100, number_of_simulations = 1000, include_data = False) \n\tmedian = np.median(forecast, axis = 0) #Ensemble median \n\tp5, p95 = np.percentile(forecast, (5, 95), axis = 0) #90% credibility boundaries\n\n\tplt.plot(time[:-100], data[:-100], color = 'k')\n\tplt.fill_between(time[-100:], p5, p95, color = 'b', alpha = .5, label = '90% Cr.') \n\tplt.plot(time[-100:], data[-100:], color = 'k', linestyle = '-.', label = 'Observed data') \n\tplt.plot(time[-100:], median, color = 'r', label = 'median estimate') \n\n\n\nThe forecast result is: \n\n.. image:: https://raw.githubusercontent.com/martini-alessandro/Maximum-Entropy-Spectrum/main/memspectrum_package/ReadMeFigures/Forecast.jpeg\n   :width: 700px\n\n\nGenerating data from PSD\n============================\nModule ``memspectrum.GenerateTimeSeries`` provides a function that construct a time-series with a user-given power spectral density. It can be called as \n:: \n\n\tfrom memspectrum.GenerateTimeSeries import generate_data\n\tf, psd = (whathever psd and frequency array you like)\n\ttime, time_series, frequency, frequency_series, psd = generate_data(f, psd, T, sampling_rate)\n\nwhere T represents the time length of the observation and the sampling rate is equivalent to the inverse of the sampling interval\n\n\nInstallation & documentation\n============================\nTo install the package: ::\n\n\tpip install memspectrum\n\nIt requires ``numpy``.\n\nOn the GitHub repository, a number of examples are available to the interested user:\n\n* `gwstrain.py <https://github.com/martini-alessandro/Maximum-Entropy-Spectrum/blob/main/examples/gwstrain.py>`_: computes the PSD on a piece of gravitational waves data and perform some forecasting\n* `sunspots.py <https://github.com/martini-alessandro/Maximum-Entropy-Spectrum/blob/main/examples/sunspots.py>`_: using data from sunspots, it uses memspectrum to find an autoregressive process which describes them and forecast\n* `sound_MESA.py <https://github.com/martini-alessandro/Maximum-Entropy-Spectrum/blob/main/examples/sound_MESA.py>`_: given an input audio (wav) file reproducing the sound of a waterfall, it computes the PSD and generate a synthetic noise, resembling the original one.\n\nFor more advanced use or for more information, please refer to the code documentation: ::\n\n\timport memspectrum\n\thelp(memspectrum)\n\thelp(memspectrum.<function_name>)\n\nFor full source code (and much more) see: https://github.com/martini-alessandro/Maximum-Entropy-Spectrum\n\nIf you feel that you need to know more about the code, or you just want to say hi, feel free to contact one of the authors.\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/martini-alessandro/Maximum-Entropy-Spectrum/",
    "keywords": "",
    "license": "CC by 4.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "memspectrum",
    "package_url": "https://pypi.org/project/memspectrum/",
    "platform": "",
    "project_url": "https://pypi.org/project/memspectrum/",
    "project_urls": {
      "Homepage": "https://github.com/martini-alessandro/Maximum-Entropy-Spectrum/"
    },
    "release_url": "https://pypi.org/project/memspectrum/1.2.0/",
    "requires_dist": [
      "numpy (>=1.16.4)"
    ],
    "requires_python": "",
    "summary": "maximum entropy spectral analysis",
    "version": "1.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10293951,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "52c1f060a7b1bd00543f1edde616b4836134370d3cb346dc424b9f356261ce69",
          "md5": "7611419b7a750bf15c4672353e77303e",
          "sha256": "d9673d1470865e8bf9ae484c20d058bef8b9473b08c9df6f15e0d5ed62d8fc4e"
        },
        "downloads": -1,
        "filename": "memspectrum-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7611419b7a750bf15c4672353e77303e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 763699,
        "upload_time": "2021-01-20T16:14:13",
        "upload_time_iso_8601": "2021-01-20T16:14:13.080929Z",
        "url": "https://files.pythonhosted.org/packages/52/c1/f060a7b1bd00543f1edde616b4836134370d3cb346dc424b9f356261ce69/memspectrum-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2155f544711e984c5d7a7500c1a99b599006b92cd6653fb79f5dff18105d14d0",
          "md5": "124f7ae84a62a98b7190412a3a50d1c7",
          "sha256": "390092a6e2f2b7747cfd914aa51776cb2fd0071042c7e3b163ec8b67b271edf0"
        },
        "downloads": -1,
        "filename": "memspectrum-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "124f7ae84a62a98b7190412a3a50d1c7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1517098,
        "upload_time": "2021-04-01T09:28:25",
        "upload_time_iso_8601": "2021-04-01T09:28:25.581225Z",
        "url": "https://files.pythonhosted.org/packages/21/55/f544711e984c5d7a7500c1a99b599006b92cd6653fb79f5dff18105d14d0/memspectrum-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0.post0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad370f783e2d5906cc689e9a47d572c789ee83332ed0f4a30207b9ee6c19d86b",
          "md5": "ad6b83c22e30add6d8a47aeedb77a352",
          "sha256": "6643911bb012d636ff0a2b2d118445a820377f284cf26d5007aa9ae93eafd6b7"
        },
        "downloads": -1,
        "filename": "memspectrum-1.1.0.post0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ad6b83c22e30add6d8a47aeedb77a352",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13456,
        "upload_time": "2021-04-02T13:55:37",
        "upload_time_iso_8601": "2021-04-02T13:55:37.164202Z",
        "url": "https://files.pythonhosted.org/packages/ad/37/0f783e2d5906cc689e9a47d572c789ee83332ed0f4a30207b9ee6c19d86b/memspectrum-1.1.0.post0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "10e9bf660f5ecef393690b5c00304d270ace5f9440d42f65290d199c4ae404a6",
          "md5": "e29e572310abacef8dfc6cadc354bb98",
          "sha256": "2f3f80265e0460932bed49b4c10735270a7531781a0247d9a3e0e5b799baf9ee"
        },
        "downloads": -1,
        "filename": "memspectrum-1.1.0.post0.tar.gz",
        "has_sig": false,
        "md5_digest": "e29e572310abacef8dfc6cadc354bb98",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 378678,
        "upload_time": "2021-04-02T13:55:39",
        "upload_time_iso_8601": "2021-04-02T13:55:39.052386Z",
        "url": "https://files.pythonhosted.org/packages/10/e9/bf660f5ecef393690b5c00304d270ace5f9440d42f65290d199c4ae404a6/memspectrum-1.1.0.post0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a1e5acba5e02eb1c950986804b448d8ee0d736b16ff6f98e4f6db3218f2faa3b",
          "md5": "a7e40adb2a2140f256940b2de79cb3ae",
          "sha256": "61d7d7af6b0c3d722e996275020965a1346008aae37bd249690284877459826d"
        },
        "downloads": -1,
        "filename": "memspectrum-1.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a7e40adb2a2140f256940b2de79cb3ae",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 14156,
        "upload_time": "2021-05-08T09:21:43",
        "upload_time_iso_8601": "2021-05-08T09:21:43.330782Z",
        "url": "https://files.pythonhosted.org/packages/a1/e5/acba5e02eb1c950986804b448d8ee0d736b16ff6f98e4f6db3218f2faa3b/memspectrum-1.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4d78b0838545e0b6423317c6241e73f7d46b0eea08dafe5040d4c4f6a4cc457e",
          "md5": "0893c66f3e1c0f394be1583abcea7ae0",
          "sha256": "0aba6d2dc1e9af61eb163301861fbb5dfb3f8a878768eebd5ea19d6116de9dd8"
        },
        "downloads": -1,
        "filename": "memspectrum-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0893c66f3e1c0f394be1583abcea7ae0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2099257,
        "upload_time": "2021-05-08T09:21:48",
        "upload_time_iso_8601": "2021-05-08T09:21:48.689546Z",
        "url": "https://files.pythonhosted.org/packages/4d/78/b0838545e0b6423317c6241e73f7d46b0eea08dafe5040d4c4f6a4cc457e/memspectrum-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a1e5acba5e02eb1c950986804b448d8ee0d736b16ff6f98e4f6db3218f2faa3b",
        "md5": "a7e40adb2a2140f256940b2de79cb3ae",
        "sha256": "61d7d7af6b0c3d722e996275020965a1346008aae37bd249690284877459826d"
      },
      "downloads": -1,
      "filename": "memspectrum-1.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a7e40adb2a2140f256940b2de79cb3ae",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 14156,
      "upload_time": "2021-05-08T09:21:43",
      "upload_time_iso_8601": "2021-05-08T09:21:43.330782Z",
      "url": "https://files.pythonhosted.org/packages/a1/e5/acba5e02eb1c950986804b448d8ee0d736b16ff6f98e4f6db3218f2faa3b/memspectrum-1.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4d78b0838545e0b6423317c6241e73f7d46b0eea08dafe5040d4c4f6a4cc457e",
        "md5": "0893c66f3e1c0f394be1583abcea7ae0",
        "sha256": "0aba6d2dc1e9af61eb163301861fbb5dfb3f8a878768eebd5ea19d6116de9dd8"
      },
      "downloads": -1,
      "filename": "memspectrum-1.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "0893c66f3e1c0f394be1583abcea7ae0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 2099257,
      "upload_time": "2021-05-08T09:21:48",
      "upload_time_iso_8601": "2021-05-08T09:21:48.689546Z",
      "url": "https://files.pythonhosted.org/packages/4d/78/b0838545e0b6423317c6241e73f7d46b0eea08dafe5040d4c4f6a4cc457e/memspectrum-1.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}