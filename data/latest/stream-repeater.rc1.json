{
  "info": {
    "author": "FrozenFOXX",
    "author_email": "frozenfoxx@churchoffoxx.net",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# stream_repeater\n\n[![Build Status](https://cloud.drone.io/api/badges/frozenfoxx/stream_repeater/status.svg?ref=refs/heads/main)](https://cloud.drone.io/frozenfoxx/stream_repeater)\n\nConvert, upload, and post audio and video streams to remote services.\n\nDocker Hub: [https://hub.docker.com/r/frozenfoxx/stream_repeater](https://hub.docker.com/r/frozenfoxx/stream_repeater)\n\n# Build\n\n## Docker\n\nTo build the Docker container run the following:\n\n```\ngit clone https://github.com/frozenfoxx/stream_repeater.git\ncd stream_repeater\ndocker build . -t 'frozenfoxx/stream_repeater:latest'\n```\n\n# Configuration\n\nAt this time a configuration file is required. A sample is provided in [./conf/stream_repeater.yaml](the conf directory). The fields are as such:\n\n* `accounts`: all account information for services you wish to use. If you do not with to use or do not have appropriate credentials for a service, simply omit them. All supported services and their required credentials are listed in the sample file.\n* `system`: all system configuration goes here and should not require modification unless you know what you're doing.\n* `stream`: all configuration for the stream to handle.\n  * `album`: the album description.\n  * `bitrate`: desired MP3 bitrate.\n  * `cover`: cover image, will be resized if necessary for each service.\n  * `cuesheet`: (optional) CUE file with time codes and track listing.\n  * `historysheet`: (optional) history file with time codes and track listing.\n  * `mp3file`: (optional) name of the MP3 file. If it exists, it will not be overwritten. If no name provided, one will be generated.\n  * `performer`: name of the performer.\n  * `sourcefile`: name of the file to use for conversion (WAV only at this time).\n  * `tags`: array of tags to apply.\n  * `title`: title of the stream.\n\n# Usage\n\n## Docker\n\nTo load the application launch the container with your configuration:\n\n```\ndocker run \\\n  -it \\\n  --rm \\\n  -v [mount point]:/data \\\n  -e CONFIG=[path to mounted config file] \\\n  -p 5000:5000 \\\n  frozenfoxx/stream_repeater:latest\n```\n\nThen access [http://localhost:5000](http://localhost:5000). If a `SECRET_KEY` is not supplied one will be generated.\n\n# Licenses\n\nThis software is provided under the Apache License. [Simple Sidebar Bootstrap theme](https://startbootstrap.com/template/simple-sidebar) and [jQuery](https://jquery.com/) are covered by the MIT license.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/frozenfoxx/stream_repeater/archive/refs/tags/0.1.0.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/frozenfoxx/stream_repeater",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "stream-repeater",
    "package_url": "https://pypi.org/project/stream-repeater/",
    "platform": "",
    "project_url": "https://pypi.org/project/stream-repeater/",
    "project_urls": {
      "Download": "https://github.com/frozenfoxx/stream_repeater/archive/refs/tags/0.1.0.tar.gz",
      "Homepage": "https://github.com/frozenfoxx/stream_repeater"
    },
    "release_url": "https://pypi.org/project/stream-repeater/0.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Converts and uploads saved streams to remote platforms",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12680522,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "842e44a6ac6810e63890bfffd3fe0c414e55b30b3223dd733db07ddb1d15c414",
          "md5": "ab1e9d56ec791daf2101d580793060d2",
          "sha256": "77a73e23d265a286de4508a17c24e7f6e3ef7b0a17f0d8a2b034af9b656a2038"
        },
        "downloads": -1,
        "filename": "stream_repeater-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ab1e9d56ec791daf2101d580793060d2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7829,
        "upload_time": "2022-01-24T20:48:53",
        "upload_time_iso_8601": "2022-01-24T20:48:53.971637Z",
        "url": "https://files.pythonhosted.org/packages/84/2e/44a6ac6810e63890bfffd3fe0c414e55b30b3223dd733db07ddb1d15c414/stream_repeater-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "842e44a6ac6810e63890bfffd3fe0c414e55b30b3223dd733db07ddb1d15c414",
        "md5": "ab1e9d56ec791daf2101d580793060d2",
        "sha256": "77a73e23d265a286de4508a17c24e7f6e3ef7b0a17f0d8a2b034af9b656a2038"
      },
      "downloads": -1,
      "filename": "stream_repeater-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "ab1e9d56ec791daf2101d580793060d2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7829,
      "upload_time": "2022-01-24T20:48:53",
      "upload_time_iso_8601": "2022-01-24T20:48:53.971637Z",
      "url": "https://files.pythonhosted.org/packages/84/2e/44a6ac6810e63890bfffd3fe0c414e55b30b3223dd733db07ddb1d15c414/stream_repeater-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}