{
  "info": {
    "author": "H.Mert ULAS",
    "author_email": "h.mert.ulas@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# learned\n### Machine Learning library for Python\n\n## Introduction\n#### Package containing deep learning model, classic machine learning models, various preprocessing functions and result metrics\n\n\n![image](https://user-images.githubusercontent.com/67822910/113212247-2e497500-927f-11eb-8ac5-539676edaa41.png)\n![image](https://user-images.githubusercontent.com/67822910/113213441-e0357100-9280-11eb-954c-b5b1e33c2aa3.png)\n![image](https://user-images.githubusercontent.com/67822910/113213571-0a872e80-9281-11eb-9cab-0ecbc7943d8c.png)\n![image](https://user-images.githubusercontent.com/67822910/113213775-46ba8f00-9281-11eb-9156-b37414d40df8.png)\n![image](https://user-images.githubusercontent.com/67822910/113213893-6b166b80-9281-11eb-8113-d6df48760999.png)\n\n\n# Table of Contents\n- ## [.neural_network](#neural_network-1)\n- ### [Sequential Class](#sequential-class-1)\n  * #### [parameters - hyperparameters](#sequentialparams-1)\n  * #### [methods](#sequentialmethods-1)\n- ### [DNNModel Class](#dnnmodel-class-1)\n  * #### [parameters](#dnnmodelparams-1)\n  * #### [methods](#dnnmodelmethods-1)\n  * #### [example](#dnnmodelexample)\n- ### [Layer Class](#layer-class-1)\n  * #### [parameters - hyperparameters](#layerparams-1)\n  * #### [methods](#layermethods-1)\n  * #### [example](#dnnexample-1)\n- ## [.models](#models-1)\n- ### [KNN class](#knn-class-1)\n  * #### [parameters - hyperparameters](#knnparams-1)\n  * #### [methods](#knnmethods-1)\n  * #### [example](#knnexample-1)\n- ### [LinReg class](#linreg-class-1)\n  * #### [parameters](#linregparams-1)\n  * #### [methods](#linregmethods-1)\n  * #### [example](#linregexample-1)\n- ### [LogReg class](#logreg-class-1)\n  * #### [parameters - hyperparameters](#logregparams-1)\n  * #### [methods](#logregmethods-1)\n  * #### [example](#logregexample-1)\n- ### [GradientDescent class](#gradientdescent-class-1)\n  * #### [parameters - hyperparameters](#graddescparams-1)\n  * #### [methods](#graddescmethods-1)\n  * #### [example](#graddescexample-1)\n- ## [.preprocessing](#preprocessing-1)\n- ### [OneHotEncoder class](#onehotencoder-class-1)\n  * #### [parameters](#oheparams-1)\n  * #### [methods](#ohemethods-1)\n  * #### [example](#ohexample-1)\n- ### [normalizer() function](#normalizer-function-1)\n  * #### [parameters](#normalizerparams-1)\n  * #### [example](#normalizerexample-1)\n- ### [get_split_data() function](#get_split_data-function-1)\n  * #### [parameters - hyperparameters](#getsplitdataparams-1)\n  * #### [example](#getsplitdataexample-1)\n- ### [polynomial_features() function](#polynomial_features-function-1)\n  * #### [parameters - hyperparameters](#polynomialfeaturesparams-1)\n  * #### [example](#polynomialfeaturesparams-1)\n- ## [.metrics](#metrics-1)\n- ### [confusion_matrix() function](#confusion_matrix-function-1)\n  * #### [parameters](#confusionmatrixparams-1)\n  * #### [example](#confusionmatrixexample-1)\n- ### [accuracy() function](#accuracy-function-1)\n  * #### [parameters](#accuracyparams-1)\n  * #### [example](#accuracyexample-1)\n\n\n\n## .neural_network\n\nExplanation: It contains the classes required for the deep neural network. These classes can be customized with \nvarious functions. The trained model can be saved as a folder, then call this folder and used to predict other entries\n\n### Sequential class\n\n\tExplanation: \n\t\t\tThis class is used to create a sequential deep learning structure.\n\n   \tParameters:\n\t\t\tx: \n\t\t\t\tInput values, as type below\n\t\t\tFor example, if you select images for input values and the input data contains 30 sample images in 28x28 size, \n\t\tthe images should be flattened to (pixel x N_sample), converted to (784, 30) and then entered into the model.\n\t\t\ty: \n\t\t\t\tData which size of (1 x N_samples) for regression or (class_number x N_samples) for classification \n\t\t\tNote that: It can be (1 x N_samples) for binary classification. (if output layer contains sigmoid function)\n\n\tHyperparameters:\n\t\t\tlearning_rate: \n\t\t\t\tIt can be changed in case of exploding or vanishing of gradients. (Default value is 0.01)\n\t\t\titeration: \n\t\t\t\tIteration number. (Default value is 1000)\n\t\t\tloss: \n\t\t\t\tThe loss function to be applied to the model is specified. (Default value is \"binary_cross_entropy\")\n\t\t\t\tSpeciable loss functions:\n\t\t\t\t\tFor classifications:\n\t\t\t\t\t\t\"binary_cross_entropy\" : \n<p align=\"center\"><img src=\"https://user-images.githubusercontent.com/67822910/113151329-a4c58300-923d-11eb-83d5-ca39e1dcc836.png\"></p>\n\n\t\t\t\t\t\t\"cross_entropy\" :\n<p align=\"center\"><img src=\"https://user-images.githubusercontent.com/67822910/113151263-94ada380-923d-11eb-8ad7-2747fb725d3f.png\"></p>\n\n\t\t\t\t\tFor regressions:\n\t\t\t\t\t\t\"mean_square_error\" : \n<p align=\"center\"><img src=\"https://user-images.githubusercontent.com/67822910/113151197-82cc0080-923d-11eb-8672-67b0cec52c12.png\"></p>\n\n\t\t\t\t\t\t\"mean_absolute_error\" :\n<p align=\"center\"><img src=\"https://user-images.githubusercontent.com/67822910/113151629-f4a44a00-923d-11eb-8ca2-bad33064df74.png\"></p>\n\n\n   \tmethods: \n\t\t\tSequential.add(x): \n\t\t\t\tAdds a layer to the model structure. \n\t\t\t\t(x is a object which includes \"Layer\" class (very soon also \"Convolution\" class))\n\n\t\t\tSequential.train(): \n\t\t\t\tIt starts the learning process and does not take parameters.\n\n\t\t\tSequential.test(x, y): \n\t\t\t\tIt gives the accuracy value for the test inputs and test outputs\n\n\t\t\tSequential.predict(x): \n\t\t\t\tReturns the predicted value / category for x value\n\n\t\t\tSequential.save_model(\"model_name\"): \n\t\t\t\tSaves the trained model as a folder as specified in the parameter name. (To the same directory)\n\n\t\t\tSequential.cost_list: \n\t\t\t\tIt gives the costs for visualisation\n\n\t\t\tSequential.accuracy_list: \n\t\t\t\tIt gives the accuracies for visualisation\n\n\n### DNNModel class\n\n\tExplanation:\n\t\t\tThis class loads saved models\n\n\tParameters:\n\t\t\tmodel_folder: it takes saved model's folder name\n\n\tMethods:\n\t\t\tDNNModel.predict(x): \n\t\t\t\tReturns the predicted value / category for x value\n\n\n### Layer class\n\n\tExplanation:\n\t\t\tANN model's hidden layers are defined by this layer\n\n\tHyperparameters:\n\t\t\tneurons: \n\t\t\t\tIndicates how many neurons the layer has\n\n\t\t\tweights_initializer: \n\t\t\t\tDetermines how layer weights are started (default value is \"uniform\")\n\t\t\t\t\t\"he_uniform\":\n\t\t\t\t\t\t\tsuitable_size_uniform_values * sqrt(6 / prev_layers_output_size)\n\n\t\t\t\t\t\"he_normal\":\n\t\t\t\t\t\t\tsuitable_size_uniform_values * sqrt(2 / prev_layers_output_size)\n\n\t\t\t\t\t\"xavier_uniform\":\n\t\t\t\t\t\t\tsuitable_size_uniform_values * sqrt(6 / (prev_layers_output_size + layer_neurons_size))\n\n\t\t\t\t\t\"xavier_normal\":\n\t\t\t\t\t\t\tsuitable_size_uniform_values * sqrt(2 / (prev_layers_output_size + layer_neurons_size))\n\n\t\t\t\t\t\"uniform\":\n\t\t\t\t\t\t\tsuitable_size_uniform_values * 0.1\n\n\t\t\t\t\tNote that: \"he\" initializers better for relu / leaky_relu activation functions\n\n\t\t\tactivation: \n\t\t\t\tDetermines with which function the layer will be activated. (default values is \"tanh\")\n\t\t\t\t\t\"sigmoid\": 0 - 1\n<p align=\"center\"><img src=\"https://user-images.githubusercontent.com/67822910/113162450-fd9a1900-9247-11eb-9845-a9db231ff7d3.png\"></p>\n\n\t\t\t\t\t\"tanh\":  -1 - 1\n<p align=\"center\"><img src=\"https://user-images.githubusercontent.com/67822910/113162775-3df99700-9248-11eb-8301-6b014d3fb57a.png\"></p>\n\n\t\t\t\t\t\"relu\":  it makes all negative values to zero\n<p align=\"center\"><img src=\"https://user-images.githubusercontent.com/67822910/113163132-8b760400-9248-11eb-9e59-8f72ea9471dc.png\"></p>\n\n\t\t\t\t\t\"softmax\": it is a probability function, it return values which sums of values equal 1\n<p align=\"center\"><img src=\"https://user-images.githubusercontent.com/67822910/113164891-33d89800-924a-11eb-9b5f-8aab6b94af0c.png\"></p>\n\n\t\t\t\t\t\"leaky_relu\": it don't makes all negative values to zero but makes too close to zero\n<p align=\"center\"><img src=\"https://user-images.githubusercontent.com/67822910/113166087-1d7f0c00-924b-11eb-8a38-870a4149a081.png\"></p>\n\n   \t\tExample for neural network structure:\n\t\t\t\t\tfrom learned.neural_network.models import Sequential, DNNModel\n\t\t\t\t\tfrom learned.neural_network.layers import Layer\n\t\t\t\t\tfrom learned.preprocessing import get_split_data, normalizer, OneHotEncoder\n\n\t\t\t\t\tmnist = pd.read_csv(\"train.csv\")\n\t\t\t\t\tmnist.head()\n\t\t\t\t\ttrain, test = get_split_data(mnist, test_percentage=0.33)\n\t\t\t\t\tprint(train.shape)\n\t\t\t\t\t>>> (28140, 785)\n\t\t\t\t\ty_labels_tr = train[:, :1]\n\t\t\t\t\ty_labels_te = test[:, :1]\n\t\t\t\t\tpixels_tr = train[:, 1:]\n\t\t\t\t\tpixels_te = test[:, 1:]\n\t\t\t\t\tpixels_tr = normalizer(pixels_tr)\n\t\t\t\t\tpixels_te = normalizer(pixels_te)\n\t\t\t\t\tpixels_tr = pixels_tr.T\n\t\t\t\t\tpixels_te = pixels_te.T\n\t\t\t\t\tprint(pixels_tr.shape)\n\t\t\t\t\t>>> (784, 28140)\n\t\t\t\t\tohe_tr = OneHotEncoder(y_labels_tr).transform()\n\t\t\t\t\tohe_te = OneHotEncoder(y_labels_te).transform()\n\n\t\t\t\t\tModel = Sequential(pixels_tr, ohe_tr, learning_rate=0.01, loss=\"cross_entropy\", iteration=600)\n\n\t\t\t\t\tModel.add(Layer(neurons=150, activation=\"relu\", weights_initializer=\"he_normal\"))\n\t\t\t\t\tModel.add(Layer(neurons=150, activation=\"relu\", weights_initializer=\"he_normal\"))\n\t\t\t\t\tModel.add(Layer(neurons=150, activation=\"relu\", weights_initializer=\"he_normal\"))\n\t\t\t\t\tModel.add(Layer(neurons=10, activation=\"softmax\", weights_initializer=\"xavier_normal\"))\n\n\t\t\t\t\tModel.train()\n<p align=\"center\"><img src=\"https://user-images.githubusercontent.com/67822910/113175015-a7cb6e00-9253-11eb-8963-ba9e52d8f9f3.png\"></p>\n\t\t\t\t\tpred = Model.predict(pixels_tr)\n\t\t\t\t\tModel.save_model(\"mnist_predicter\")\n\t\t\t\t\tloaded_model = DNNModel(\"mnist_predicter\")\n\t\t\t\t\tpred2 = loaded_model.predict(pixels_tr)\n\n\t\t\t\t\t>>> pred2 == pred\n\n\n## .models\n\n### KNN class\n\tExplanation:\n\t\tIncludes the k-Nearest Neighbors algorithm.\n\tParameters:\n\t\tx:\n\t\t\tTrain input values\n\t\ty:\n\t\t\tTrain output values\n\tHyperparameters:\n\t\tk_neighbors:\n\t\t\tIt determines how many neighbors will be evaluated.\n\n\t\tmetric:\n\t\t\t\"euclidean\"\n\t\t\tIt determines which distance finding function will be used.(Default value is \"euclidean\")\n\t\t\t(other distance functions coming soon)\n\n\t\tmodel:\n\t\t\t\"classification\" for categorical prediction\n\t\t\t\"regression\" for numerical prediction\n\tMethods:\n\t\tKNN.predict(x):\n\t\t\tReturns prediction from K nearest neighbors. Returns the most frequently value for \"classification\" or\n\t\t\treturns average value for \"regression\"\n\n\tUsage:\n\t'''\n\t\tfrom learned.models import KNN\n\t\tknn = KNN(x, y, k_neighbors=3, metric=\"euclidean\", model=\"classification\")\n\t\tknn.predict(test_x)\n\t'''\n\n\n### LinReg class\n    \tExplanation: \n            \tLinReg is a class that allows simple or multiple linear regressions and returns trained parameters.\n\n    \tParameters: \n            \tdata_x: \n\t\t\tInput values\n\t    \tdata_y: \n\t\t\tTrue output values\n    \tUsage:\n    \t'''\n\t\tfrom learned.models import LinReg\n\t\tlin_reg = LinReg(data_x, data_y)\n    \t'''\n    \tMethods: \n\n        \tLinReg.train(): \n\t\t\tIt applies the training process for the dataset entered while creating the class.\n    \t\tOutput:\n\t\t\t(An example simple linear regression output)\n\t\t\t    '''\n\t\t\t    Completed in 0.0 seconds.\n\t\t\t    Training R2-Score: % 97.0552464372771\n\t\t\t    Intercept: 10349.456288746507, Coefficients: [[812.87723722]]\n\t\t\t    '''\n\n   \t\tLinReg.test(test_x, test_y)\n            \t\tApplies the created model to a different input and gives the r2 score result.\n\t\tOutput:\n\t\t\t(An example simple linear regression output)\n\t\t\t    '''\n\t\t\t    Testing R2-Score: % 91.953582170654\n\t\t\t    '''\n\t\t\tNote: \n\t\t\t\tReturns an error message if applied for a model that has not been previously trained.\n\t\t\t\t'''\n\t\t\t\t  Exception: Model not trained!\n\t\t\t\t'''\n\n  \t\tLinReg.predict(x): \n\t\t\tApplies the created model to the input data, which it takes as a parameter, and returns the estimated results.\n\n    \t\t\tNote: \n\t\t\t    Returns an error message if applied for a model that has not been previously trained.\n\t\t\t    '''\n\t\t\t    Exception: Model not trained!\n\t\t\t    '''\n   \t\tLinReg.r2_score(y_true, y_predict)\n            \t\tIt takes actual results and predicted results for the same inputs as parameters and returns the value of r2 score.\n\n   \t\tLinReg.intercept\n            \t\tReturns the trained intercept value\n\n   \t\tLinReg.coefficients \n\t\t\tReturns the trained coefficients\n\n### LogReg class\n\n\tExplanation: \n            \tLogReg is a class that allows simple logistic regressions and returns trained parameters. \n\t\tWorks as a neural network one layer which includes single perceptron \n\n    \tParameters: \n            \tx: \n\t\t\tInput values\n\t    \ty: \n\t\t\tTrue output values\n\n\tHyperparameters:\n\t\tlearning_rate: \n\t\t\tIt can be changed in case of exploding or vanishing of gradients. (Default value is 0.01)\n\t\titeration: \n\t\t\tIteration number. (Default value is 1000)\t\t\n    \tUsage:\n    \t'''\n\t\tfrom learned.models import LogReg\n\t\tlog_reg = LogReg(x, y, learning_rate=0.001, iteration=1000)\n    \t'''\n    \tMethods: \n\n        \tLogReg.train(): \n\t\t\tIt applies the training process for the dataset entered while creating the class.\n\n  \t\tLogReg.predict(x): \n\t\t\tApplies the created model to the input data, which it takes as a parameter, and returns the estimated results.\n\n   \t\tLogReg.accuracy(y_true, y_pred):\n\t\t\tGives the model accuracy value\n\n### GradientDescent class\n\n    \tExplanation: \n            \tGradientDescent is a class that allows simple or multiple linear regressions and returns trained parameters. \n\t\tWorks as a neural network one layer which includes single perceptron \n\n    \tParameters: \n            \tdata_x: \n\t\t\tInput values\n\t    \tdata_y: \n\t\t\tTrue output values\n\tHyperparameters:\n\t\tlearning_rate: \n\t\t\tIt can be changed in case of exploding or vanishing of gradients. (Default value is 0.00001) \n    \tUsage:\n    \t'''\t\n\t\tfrom learned.models import GradientDescent\n\t\tgd = GradientDescent(data_x, data_y, learning_rate=0.001)\n    \t'''\n    \tMethods: \n\n        \tGradientDescent.optimizer(number_of_steps=False): \n\t\t\tIt applies the training process for the dataset entered while creating the class.\n\n\t\tParameters:\n\t\t\tnumber_of_steps:\n\t\t\t\tIteration number. Default value is \"False\". \n\t\t\t\tIf no value is entered, continues until the step size is less than 0.0001. \n    \t\tOutput:\n\t\t\t(An example multiple linear regression output)\n\t\t\t    '''\n\t\t\t    Completed in 109.72 seconds\n\t\t\t    R-Squared:%63.32075249528732\n\t\t\t    Test Score: %41.059223927525004\n\t\t\t    (-17003.943940164645, array([[3349.00019104],\n\t\t\t    [1658.35639114],[  12.87388237]]))\n\t\t\t    '''\n\n   \t\tGradientDescent.test(data_x, data_y):\n            \t\tApplies the created model to a different input and gives the r2 score result.\n\n  \t\tGradientDescent.predict(x): \n\t\t\tApplies the created model to the input data, which it takes as a parameter, and returns the estimated results.\n\n   \t\tGradientDescent.r2_score(y_true, y_pred)\n            \t\tIt takes actual results and predicted results for the same inputs as parameters and returns the value of r2 score.\n\n\t\tGradientDescent.get_parameters():\n\t\t\tReturns the trained weights\n\n## .preprocessing\n\n### OneHotEncoder class\n\n\tExplanation:\n\t\tOne hot encoding is a process by which categorical variables are converted \n\tinto a form that could be provided to ML algorithms to do a better job in prediction.\n\n\tMethods:\n\t\tOneHotEncoder(x).transform():\n\t\t\tNote: x must be a numpy object.\n\t\t\tReturns the transformed values.(Values are in ascending order / alphabetical order.)\n\n\t\tOneHotEncoder(x).values:\n\t\t\tReturns the dict which includes values and tranformed values\n\tUsage:\n\t'''\n\t\tfrom learned.preprocessing import OneHotEncoder\n\t\tohe = OneHotEncoder(x)\n\t'''\t\n\t\tFor example,\n\t\t\tfrom learned.preprocessing import OneHotEncoder\n\t\t\tvals = [\"cat\", \"dog\", \"bird\", \"lion\"]\n\t\t\tohe = OneHotEncoder(vals)\n\t\t\ttransformed_vals = ohe.transform()\n\t\t\ttransformed_vals => [[0, 1, 0, 0],\n\t\t\t\t\t     [0, 0, 1, 0],\n\t\t\t\t\t     [1, 0, 0, 0],\n\t\t\t\t\t     [0, 0, 0, 1]]\n\t\t\tthe_dict = ohe.values\n\t\t\tthe_dict => {\"bird\": [1, 0, 0, 0],\n\t\t\t\t     \"cat\":  [0, 1, 0, 0],\n\t\t\t\t     \"dog\":  [0, 0, 1, 0],\n\t\t\t\t     \"lion\": [0, 0, 0, 1]}\n\n### normalizer() function\n\tExplanation:\n\t\tConverts the entered data to the 0-1 range.\n\n\tParameters:\n\t\tdata:\n\t\t\tEntered data must be numpy object\n\tUsage:\n\t'''\n\t\tfrom learned.preprocessing import normalizer\n\n\t\tdata = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\t\tnormalize = normalizer(data)\n\t\tnormalize => [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1]\n\t'''\n\n### get_split_data() function\n\n\tExplanation:\n\t\tDivides and shuffles the given data.\n\n\tParameters:\n\t\tdata:\n\t\t\tFull data (inputs and outputs (not split))\n\tHyperparameters:\n\t\ttest_percentage:\n\t\t\tDetermines what percentage of data is allocated as test data.(Default value is 0.33)\n\t\trandom_state:\n\t\t\tDetermines the random distribution constant.(Default value is 0)\n\n\tUsage:\n\t'''\n\t\tfrom learned.preprocessing import get_split_data\n\n\t\ttrain_data, test_data = get_split_data(full_data, test_percentage=0.2, random_state=42)\n\t'''\n\n### polynomial_features() function\n\tExplanation:\n\t\tAdds polynomial features, layers to the entered data.\n\n\tParameters:\n\t\tdata:\n\t\t\tInput data\n\tHyperparameters:\n\t\tdegree:\n\t\t\tIt determines the degree of polynomial distribution to be made.(Default value is \"2\")\n\tUsages:\n\t'''\n\t\tfrom learned.preprocessing import polynomial_features\n\n\t\ta = np.array([[1, 2], [3, 4], [6, 2], [2, 7]])\n\t\tfeatures = polynomial_features(a, degree=3)\n\t\tfeatures => [[  1.   2.   1.   2.   4.   1.   2.   4.   8.]\n\t\t\t     [  3.   4.   9.  12.  16.  27.  36.  48.  64.]\n\t\t\t     [  6.   2.  36.  12.   4. 216.  72.  24.   8.]\n\t\t \t     [  2.   7.   4.  14.  49.   8.  28.  98. 343.]]\n\t'''\n\n## .metrics\n\n### confusion_matrix() function\n\tExplanation:\n\t\tReturns the confusion matrix of the entered data. Operates on both categorical and regression values.\n\t\tEntries must be of (class_numbers x N_samples) size for categorical data, and (1 x N_samples) for regression data.\n\n\tParameters:\n\t\ty_true: \n\t\t\tReal output\n\t\ty_pred:\n\t\t\tPredicted output\n\tUsage:\n\t'''\n\t\tfrom learned.metrics import confusion_matrix\n\t\ty_true = np.array([[0, 1, 1, 2, 0, 2, 1, 3]])\n\t\ty_pred = np.array([[0, 0.8, 0, 1.2, 1, 2, 1, 2.6]])\n\t\tprint(confusion_matrix(y_true, y_pred))\n\t\t=> [[1, 1, 0, 0],\n\t\t    [1, 2, 1, 0],\n\t\t    [0, 0, 1, 0],\n\t\t    [0, 0, 0, 1]]\n\t'''\n### accuracy() function\n\tExplanation:\n\t\tReturns the accuracy value for the given values.\n\n\tParameters:\n\t\ty_true:\n\t\t\tReal output\n\t\ty_pred:\n\t\t\tPredicted output\n\tUsage:\n\t'''\n\t\tfrom learned.metrics import accuracy\n\t\ty_true = np.array([[0, 1, 1, 2, 0, 2, 1, 3]])\n\t\ty_pred = np.array([[0, 0.8, 0, 1.2, 1, 2, 1, 2.6]])\n\t\tprint(accuracy(y_true, y_pred))\n\t\t=> 0.625 (% 62.5)\n\t'''\n\n\n### TODO\n- cross validation\n- p-value\n- Other algorithms\n- Examples\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/MERTULAS/learned",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "learned",
    "package_url": "https://pypi.org/project/learned/",
    "platform": "",
    "project_url": "https://pypi.org/project/learned/",
    "project_urls": {
      "Homepage": "https://github.com/MERTULAS/learned"
    },
    "release_url": "https://pypi.org/project/learned/0.5.4.5/",
    "requires_dist": [
      "numpy (>=1.14.0)"
    ],
    "requires_python": ">=3.6.0",
    "summary": "Package containing deep learning model, classic machine learning models, various preprocessing functions and result metrics",
    "version": "0.5.4.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9987919,
  "releases": {
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f05b968e5a50e16127f01153054d5861cde97a8c0a98564941dc2489d49aeaeb",
          "md5": "5e22d0add4cba23073034a35a3cebf07",
          "sha256": "6d7c3f95e74f0e7b073dd3f9684bc6cb18d834a52395344fd3b98ac0c1ebe7af"
        },
        "downloads": -1,
        "filename": "learned-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5e22d0add4cba23073034a35a3cebf07",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5.5",
        "size": 5072,
        "upload_time": "2021-03-01T00:19:12",
        "upload_time_iso_8601": "2021-03-01T00:19:12.820866Z",
        "url": "https://files.pythonhosted.org/packages/f0/5b/968e5a50e16127f01153054d5861cde97a8c0a98564941dc2489d49aeaeb/learned-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "63653fdbcbf1e6baf3ce5aa0e1f0447017ad883eca324be80dc99102df2b3e4d",
          "md5": "abb5681611f53c66d55f4cfd05c61963",
          "sha256": "d84e05c967794c072b22fc457537a2608e20a29aac51b737bade4be3fd39e5f0"
        },
        "downloads": -1,
        "filename": "learned-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "abb5681611f53c66d55f4cfd05c61963",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5.5",
        "size": 5023,
        "upload_time": "2021-03-01T00:19:13",
        "upload_time_iso_8601": "2021-03-01T00:19:13.929840Z",
        "url": "https://files.pythonhosted.org/packages/63/65/3fdbcbf1e6baf3ce5aa0e1f0447017ad883eca324be80dc99102df2b3e4d/learned-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ffd6d0c847d06af4dea9df759b70cf14b378406bb450f0f3a213ce85bf244bb7",
          "md5": "2a22337fe2fc80ecce19d5808ab89c90",
          "sha256": "193891b94aa10692cac32aafe4240167781749acbb1358502a91a44cf038c087"
        },
        "downloads": -1,
        "filename": "learned-0.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2a22337fe2fc80ecce19d5808ab89c90",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5.0",
        "size": 2110,
        "upload_time": "2021-03-31T09:48:17",
        "upload_time_iso_8601": "2021-03-31T09:48:17.717363Z",
        "url": "https://files.pythonhosted.org/packages/ff/d6/d0c847d06af4dea9df759b70cf14b378406bb450f0f3a213ce85bf244bb7/learned-0.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b74c5eb76a46477e06be25569a8e80f2ec88a066bf799fe07754b43483d339d9",
          "md5": "513ff523111f8dcad7393a4a5a454b48",
          "sha256": "1b567f39a61ccbbfe8e5e1d88e2f3502978598215b731a33d5c504ea8776eb3b"
        },
        "downloads": -1,
        "filename": "learned-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "513ff523111f8dcad7393a4a5a454b48",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5.0",
        "size": 2757,
        "upload_time": "2021-03-31T09:48:18",
        "upload_time_iso_8601": "2021-03-31T09:48:18.742480Z",
        "url": "https://files.pythonhosted.org/packages/b7/4c/5eb76a46477e06be25569a8e80f2ec88a066bf799fe07754b43483d339d9/learned-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3f579befab70198a8c4df7fc1f2b55f4d3b5d75142cd586229f57d3503ba1abd",
          "md5": "a9d1771c63efbc587b56a9467bfeb608",
          "sha256": "ce50c9b630cee9031cdc19fbeb3ad0bc9fdb73a385d790664b0a7a8d9f464dfc"
        },
        "downloads": -1,
        "filename": "learned-0.5.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a9d1771c63efbc587b56a9467bfeb608",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5.0",
        "size": 3363,
        "upload_time": "2021-03-31T10:04:23",
        "upload_time_iso_8601": "2021-03-31T10:04:23.602152Z",
        "url": "https://files.pythonhosted.org/packages/3f/57/9befab70198a8c4df7fc1f2b55f4d3b5d75142cd586229f57d3503ba1abd/learned-0.5.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "54c443ef5967b8b92854a39343d61565f3c26074c1729b8f1d1555fa353729d4",
          "md5": "1b2bbfc1ad63daf5dd49f401d1f994ce",
          "sha256": "6179ccdf46b305526d1b4731f8be1ad2da101da791da0785a03921e9ee7ddf82"
        },
        "downloads": -1,
        "filename": "learned-0.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1b2bbfc1ad63daf5dd49f401d1f994ce",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5.0",
        "size": 3258,
        "upload_time": "2021-03-31T10:04:24",
        "upload_time_iso_8601": "2021-03-31T10:04:24.890552Z",
        "url": "https://files.pythonhosted.org/packages/54/c4/43ef5967b8b92854a39343d61565f3c26074c1729b8f1d1555fa353729d4/learned-0.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fef1f5c76850872c3af5feb17cfa0a193926b13a87d975f629b6c6489d226b53",
          "md5": "3d0e5cc73524f964a8342d3ed5099e93",
          "sha256": "a00e8d6156e506ee554aea2070f03254e0934d7b4987f50db69424ae5a3725fa"
        },
        "downloads": -1,
        "filename": "learned-0.5.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3d0e5cc73524f964a8342d3ed5099e93",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5.0",
        "size": 3366,
        "upload_time": "2021-03-31T19:12:54",
        "upload_time_iso_8601": "2021-03-31T19:12:54.972589Z",
        "url": "https://files.pythonhosted.org/packages/fe/f1/f5c76850872c3af5feb17cfa0a193926b13a87d975f629b6c6489d226b53/learned-0.5.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f9ea26dfeb6a9379b8dc1a5c712193842f747be071a453b8d24e69983063750",
          "md5": "4d8d99779cbaf36206cf941c1d6e732d",
          "sha256": "1cdb269399e356e3048ab2e229561e72fe561f8d55c18dca36249b6613872dfb"
        },
        "downloads": -1,
        "filename": "learned-0.5.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4d8d99779cbaf36206cf941c1d6e732d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5.0",
        "size": 3251,
        "upload_time": "2021-03-31T19:12:56",
        "upload_time_iso_8601": "2021-03-31T19:12:56.345995Z",
        "url": "https://files.pythonhosted.org/packages/5f/9e/a26dfeb6a9379b8dc1a5c712193842f747be071a453b8d24e69983063750/learned-0.5.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9baf906ff4b79b29b4577084e079ac2720366b6b48331ac5a471c47347ad4ce7",
          "md5": "3c4faf6f2504723343917cf5b0fa13b0",
          "sha256": "8113130d5660a7bc6385a2a4148ac695cc31d62151b21a5ce28bfcb7e602ef3b"
        },
        "downloads": -1,
        "filename": "learned-0.5.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3c4faf6f2504723343917cf5b0fa13b0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5.0",
        "size": 6980,
        "upload_time": "2021-03-31T19:15:38",
        "upload_time_iso_8601": "2021-03-31T19:15:38.230037Z",
        "url": "https://files.pythonhosted.org/packages/9b/af/906ff4b79b29b4577084e079ac2720366b6b48331ac5a471c47347ad4ce7/learned-0.5.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "baf720093473409da99a4b6f6f37a19d8dabb323dc26ca254775ec9feeb63f08",
          "md5": "f02142387b5c1fec9d319d282959fefd",
          "sha256": "fa56b952907f48844c040d50e5e5fccc54e3b722f28825cf344d28cfaeb6f529"
        },
        "downloads": -1,
        "filename": "learned-0.5.3.tar.gz",
        "has_sig": false,
        "md5_digest": "f02142387b5c1fec9d319d282959fefd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5.0",
        "size": 10467,
        "upload_time": "2021-03-31T19:15:39",
        "upload_time_iso_8601": "2021-03-31T19:15:39.353176Z",
        "url": "https://files.pythonhosted.org/packages/ba/f7/20093473409da99a4b6f6f37a19d8dabb323dc26ca254775ec9feeb63f08/learned-0.5.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c49ab29c66a08d10682e6774491df207d0a44501b82ea44fde620e2fcf711539",
          "md5": "ed482ad4e9f4877be68d9bcc7a4622e4",
          "sha256": "c66a97e60a094f6c726970a1e98ea96d6f36b5f695036aea2a85ab7cf4dd805a"
        },
        "downloads": -1,
        "filename": "learned-0.5.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ed482ad4e9f4877be68d9bcc7a4622e4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5.0",
        "size": 6980,
        "upload_time": "2021-03-31T19:53:38",
        "upload_time_iso_8601": "2021-03-31T19:53:38.713354Z",
        "url": "https://files.pythonhosted.org/packages/c4/9a/b29c66a08d10682e6774491df207d0a44501b82ea44fde620e2fcf711539/learned-0.5.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "848bf19d10d33cedd909d4ee36cf81778baa376aea5cf0c634e5b004ddc1ed58",
          "md5": "fb9436d74cf5ceb9c38d403c50603947",
          "sha256": "6a28ab356ca0630e0126d0434d52080d083b74bc3f3411f7e5c7ae884e1f1db6"
        },
        "downloads": -1,
        "filename": "learned-0.5.4.tar.gz",
        "has_sig": false,
        "md5_digest": "fb9436d74cf5ceb9c38d403c50603947",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5.0",
        "size": 10464,
        "upload_time": "2021-03-31T19:53:39",
        "upload_time_iso_8601": "2021-03-31T19:53:39.873211Z",
        "url": "https://files.pythonhosted.org/packages/84/8b/f19d10d33cedd909d4ee36cf81778baa376aea5cf0c634e5b004ddc1ed58/learned-0.5.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a873a2719c8745717a554ba88fd896cbda2d0a75efe12f00baf419ad9896a1d2",
          "md5": "80bc71136f1ccf0032646760b98e3a67",
          "sha256": "6b5576c3100f14aaa5a3b0d2cea6aa2c2678c1c4ee0a38d0e8c31ff695c9f747"
        },
        "downloads": -1,
        "filename": "learned-0.5.4.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "80bc71136f1ccf0032646760b98e3a67",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5.0",
        "size": 15226,
        "upload_time": "2021-03-31T20:15:29",
        "upload_time_iso_8601": "2021-03-31T20:15:29.521623Z",
        "url": "https://files.pythonhosted.org/packages/a8/73/a2719c8745717a554ba88fd896cbda2d0a75efe12f00baf419ad9896a1d2/learned-0.5.4.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f89dbde4602b3290435e7fb6ecc0cdd7d3a827740e908850c964d9c8d5abd299",
          "md5": "868b706123c2d1ad904c23fa2f82b23a",
          "sha256": "abb9bb5a6c326d476d3612580b66c7b1f7946dc4b6b29f978754d27fe4287cd8"
        },
        "downloads": -1,
        "filename": "learned-0.5.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "868b706123c2d1ad904c23fa2f82b23a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5.0",
        "size": 19092,
        "upload_time": "2021-03-31T20:15:30",
        "upload_time_iso_8601": "2021-03-31T20:15:30.688494Z",
        "url": "https://files.pythonhosted.org/packages/f8/9d/bde4602b3290435e7fb6ecc0cdd7d3a827740e908850c964d9c8d5abd299/learned-0.5.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.4.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca94afcadd1f04afc8277bb170f18539b7647e9a1bd33b8f5e2e32531e6fb746",
          "md5": "60d057fa7d5ef5a2e54ce9d1df735d2f",
          "sha256": "2ba505b2fd3ef8b83831650cf85111d47f4f4a6103c4ca4843719e5dd4a90781"
        },
        "downloads": -1,
        "filename": "learned-0.5.4.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "60d057fa7d5ef5a2e54ce9d1df735d2f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5.0",
        "size": 15223,
        "upload_time": "2021-03-31T20:29:16",
        "upload_time_iso_8601": "2021-03-31T20:29:16.390302Z",
        "url": "https://files.pythonhosted.org/packages/ca/94/afcadd1f04afc8277bb170f18539b7647e9a1bd33b8f5e2e32531e6fb746/learned-0.5.4.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d502c6f80918362289086713a98785d5e7472ed8f59af56ea45c04e226f76c11",
          "md5": "18fc400c530b59cdf4aafdd3aee8ecbb",
          "sha256": "75c2e2b8f39845d8001c78e2d815a6036935ed035652c44c0bd69d119eee6c6f"
        },
        "downloads": -1,
        "filename": "learned-0.5.4.2.tar.gz",
        "has_sig": false,
        "md5_digest": "18fc400c530b59cdf4aafdd3aee8ecbb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5.0",
        "size": 19073,
        "upload_time": "2021-03-31T20:29:17",
        "upload_time_iso_8601": "2021-03-31T20:29:17.669886Z",
        "url": "https://files.pythonhosted.org/packages/d5/02/c6f80918362289086713a98785d5e7472ed8f59af56ea45c04e226f76c11/learned-0.5.4.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.4.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a1496eba4a12370b9e733cb683662f64faa85a3168b6a2ad89d4556442ca2d4b",
          "md5": "53ed992f58c07b9c3f807ee6d125e83f",
          "sha256": "931afd7eb1330bfd3437bff9d0bd5288373481de0df63328fb3cf0267376306c"
        },
        "downloads": -1,
        "filename": "learned-0.5.4.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "53ed992f58c07b9c3f807ee6d125e83f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5.0",
        "size": 15379,
        "upload_time": "2021-03-31T21:40:03",
        "upload_time_iso_8601": "2021-03-31T21:40:03.117638Z",
        "url": "https://files.pythonhosted.org/packages/a1/49/6eba4a12370b9e733cb683662f64faa85a3168b6a2ad89d4556442ca2d4b/learned-0.5.4.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6044698630aacdce65d49f54c3913836922c0ce25bb5a4a1d8b389f73d842b7c",
          "md5": "d234113b43e2c48199d98f9eb9c5c28d",
          "sha256": "1a70396a27995ec69e587c39fdb3a8167d6de672ea0054976a8bba1be9f2ff8f"
        },
        "downloads": -1,
        "filename": "learned-0.5.4.3.tar.gz",
        "has_sig": false,
        "md5_digest": "d234113b43e2c48199d98f9eb9c5c28d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5.0",
        "size": 19444,
        "upload_time": "2021-03-31T21:40:04",
        "upload_time_iso_8601": "2021-03-31T21:40:04.781375Z",
        "url": "https://files.pythonhosted.org/packages/60/44/698630aacdce65d49f54c3913836922c0ce25bb5a4a1d8b389f73d842b7c/learned-0.5.4.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.4.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c6c737ff501c6ad361e1b8843cecb9f08168e7d8f440213c738a9d68deca9963",
          "md5": "dad01bd0b15d7375c30858590e37792e",
          "sha256": "db0a178ad61252d1b36b1fc54e18361e437a3f5840cae1ea8fd0be5838e3d33b"
        },
        "downloads": -1,
        "filename": "learned-0.5.4.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dad01bd0b15d7375c30858590e37792e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5.0",
        "size": 15385,
        "upload_time": "2021-04-01T16:31:04",
        "upload_time_iso_8601": "2021-04-01T16:31:04.848223Z",
        "url": "https://files.pythonhosted.org/packages/c6/c7/37ff501c6ad361e1b8843cecb9f08168e7d8f440213c738a9d68deca9963/learned-0.5.4.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e8540fc907197935f5f600b1a0254e141bb34f2a397baa450098504121249822",
          "md5": "d60393a9d2de5fd5b115c9d75ba91522",
          "sha256": "6ef969b5eeb00179c5fd8ad09edac628c84990cd82441d3eac4e894df470dd6c"
        },
        "downloads": -1,
        "filename": "learned-0.5.4.4.tar.gz",
        "has_sig": false,
        "md5_digest": "d60393a9d2de5fd5b115c9d75ba91522",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5.0",
        "size": 19461,
        "upload_time": "2021-04-01T16:31:06",
        "upload_time_iso_8601": "2021-04-01T16:31:06.879773Z",
        "url": "https://files.pythonhosted.org/packages/e8/54/0fc907197935f5f600b1a0254e141bb34f2a397baa450098504121249822/learned-0.5.4.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.4.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bc3c07ba3b4f244c5c133cfd57a7eaf8e9e415d961af4f30c257e2381972297c",
          "md5": "7f10e2d503c48be2c512885f0be18c00",
          "sha256": "09b92ac25e96a63db027fb37a095f26e7b09638034f1e222dd72ed9942608486"
        },
        "downloads": -1,
        "filename": "learned-0.5.4.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7f10e2d503c48be2c512885f0be18c00",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 15509,
        "upload_time": "2021-04-06T16:13:25",
        "upload_time_iso_8601": "2021-04-06T16:13:25.303025Z",
        "url": "https://files.pythonhosted.org/packages/bc/3c/07ba3b4f244c5c133cfd57a7eaf8e9e415d961af4f30c257e2381972297c/learned-0.5.4.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a617570ae0bb0e6034b5c729ba9d8bc9fd0519d00cbfedc6ed5f0b54639ba56a",
          "md5": "800acdb03d31b5fb2cf565176d9f3498",
          "sha256": "b5efb9a6b3ec1850335e62816d4abce12a33e83f8e000fc7d0cebb850678b472"
        },
        "downloads": -1,
        "filename": "learned-0.5.4.5.tar.gz",
        "has_sig": false,
        "md5_digest": "800acdb03d31b5fb2cf565176d9f3498",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 19556,
        "upload_time": "2021-04-06T16:13:28",
        "upload_time_iso_8601": "2021-04-06T16:13:28.163993Z",
        "url": "https://files.pythonhosted.org/packages/a6/17/570ae0bb0e6034b5c729ba9d8bc9fd0519d00cbfedc6ed5f0b54639ba56a/learned-0.5.4.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bc3c07ba3b4f244c5c133cfd57a7eaf8e9e415d961af4f30c257e2381972297c",
        "md5": "7f10e2d503c48be2c512885f0be18c00",
        "sha256": "09b92ac25e96a63db027fb37a095f26e7b09638034f1e222dd72ed9942608486"
      },
      "downloads": -1,
      "filename": "learned-0.5.4.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7f10e2d503c48be2c512885f0be18c00",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6.0",
      "size": 15509,
      "upload_time": "2021-04-06T16:13:25",
      "upload_time_iso_8601": "2021-04-06T16:13:25.303025Z",
      "url": "https://files.pythonhosted.org/packages/bc/3c/07ba3b4f244c5c133cfd57a7eaf8e9e415d961af4f30c257e2381972297c/learned-0.5.4.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a617570ae0bb0e6034b5c729ba9d8bc9fd0519d00cbfedc6ed5f0b54639ba56a",
        "md5": "800acdb03d31b5fb2cf565176d9f3498",
        "sha256": "b5efb9a6b3ec1850335e62816d4abce12a33e83f8e000fc7d0cebb850678b472"
      },
      "downloads": -1,
      "filename": "learned-0.5.4.5.tar.gz",
      "has_sig": false,
      "md5_digest": "800acdb03d31b5fb2cf565176d9f3498",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.0",
      "size": 19556,
      "upload_time": "2021-04-06T16:13:28",
      "upload_time_iso_8601": "2021-04-06T16:13:28.163993Z",
      "url": "https://files.pythonhosted.org/packages/a6/17/570ae0bb0e6034b5c729ba9d8bc9fd0519d00cbfedc6ed5f0b54639ba56a/learned-0.5.4.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}