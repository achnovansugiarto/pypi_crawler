{
  "info": {
    "author": "Ilija Vukotic",
    "author_email": "ivukotic@cern.ch",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# gym-cache\nOpenAI based Gym environments for training RL caching agent\n\ninstall it:\n<code>\n   pip install gym-cache\n</code> \n\nimport it like this:\n\n<code>\nimport gym\n\ngym.make('gym_cache:Cache-v0')\n</code>\n\n\nobservation space has following variables:\n* six tokens (integers)\n* file size \\[kB\\]\n* how full is the cache at that moment\n\nThere are two discrete action environments (*Cache-v0* and *Cache-large-v0*) and one continuous action environment (*Cache-continuous-v0*).\n\n\n## Data extractions and preprocessing\nThis is a two step procedure:\n* *extract raw data* _data/extract_data.py_ - change PQ, date range\n* *process raw data* _data/process_data.py_ - tokenizes filenames, generates unique fileIDs, sorts by access time.\n\nProcessed data should be copied to the directory where actor runs.\nIt is a parque file (.pa) with one dataframe:\n* index - access time (sorted)\n* six tokens derived from the filename ('1', '2', '3', '4', '5', '6')\n* filesize ('kB')\n* unique file identifier ('fID')\n\n\n## Rewards\n* always negative and correspond to cost to get the file - if it was cached it will be smaller\n* files are cached irrespectively from what action actor performed for the file\n* cleanup: environment memorizes actions. on cleanup it first deletes files judged not to be needed again (action 0 in discrete environments or smaller values in continues environment). If multiple files have the same action value, LRU one is removed first.\n\n\n## Possible technical implementation in XCache server\n* There are additional containers in the pod. \n    * environment container\n       * recieves gstream pfc, and disk info\n       * recalculates new state, reward, tokenizes recieved gstream info. \n       * memorizes last state, actors actions for each file\n       * triggers cleanup at lower HWM then xcache itself. Loops through memorized paths and removes ones least probably needed. \n    * redis db - used by environment container to store actor responses\n    * actor container \n\n\n## Miscalenious\n\nTo change environments:\n* clone github repository\n* make changes\n* install locally:    \n   <code>  python -m pip install --user -e .  </code>\n   or\n   <code>\n   python setup.py bdist_wheel\n   python -m pip install dist\\gym_cache-1.0.1-py3-none-any.whl\n   </code> \n* to upload to pypi repository\n   <code>\n   # create %USER%\\.pypirc file first. \n   python setup.py bdist_wheel\n   python -m twine upload dist\\*\n   </code> \n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ivukotic/gym-cache",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "gym-cache",
    "package_url": "https://pypi.org/project/gym-cache/",
    "platform": "",
    "project_url": "https://pypi.org/project/gym-cache/",
    "project_urls": {
      "Homepage": "https://github.com/ivukotic/gym-cache"
    },
    "release_url": "https://pypi.org/project/gym-cache/1.0.3/",
    "requires_dist": [
      "gym (>=0.2.3)",
      "pandas (>=0.24.2)",
      "scikit-learn (>=0.22.1)"
    ],
    "requires_python": "",
    "summary": "gym environment simulating file cache.",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7904940,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0bb3ec4735cf348b70777c2115368b33c4a1c8160d0a4ab748aa47d4c34602e4",
          "md5": "1c4fbb928040c7a3b2cd3baa69f7d311",
          "sha256": "5ff5ae4f88d667f7cf079198b532eae54b2606428654200bc74a1e4be96b280e"
        },
        "downloads": -1,
        "filename": "gym_cache-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1c4fbb928040c7a3b2cd3baa69f7d311",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9905,
        "upload_time": "2020-08-04T17:26:35",
        "upload_time_iso_8601": "2020-08-04T17:26:35.692778Z",
        "url": "https://files.pythonhosted.org/packages/0b/b3/ec4735cf348b70777c2115368b33c4a1c8160d0a4ab748aa47d4c34602e4/gym_cache-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "348be006caefd6f088046b53e5429fbdf15a16cb6e01a5b9fb011566622e8132",
          "md5": "afbc61047075c503dfff2317f42f11b7",
          "sha256": "6dfbf3c9c94f123ed0b77e45be98c4b36b86df5e129f883ed0505f0014acd38a"
        },
        "downloads": -1,
        "filename": "gym_cache-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "afbc61047075c503dfff2317f42f11b7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9904,
        "upload_time": "2020-08-04T19:28:06",
        "upload_time_iso_8601": "2020-08-04T19:28:06.106126Z",
        "url": "https://files.pythonhosted.org/packages/34/8b/e006caefd6f088046b53e5429fbdf15a16cb6e01a5b9fb011566622e8132/gym_cache-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8ec0527bf73d500f1301f82e2644ac3df829f8608423d099232e5bfa57571b34",
          "md5": "943697edc3d4c4f80132975b04d6391a",
          "sha256": "4e266c41a2495f1b513be7b830ab06664fa086c283a394196ce46dbaf183dcce"
        },
        "downloads": -1,
        "filename": "gym_cache-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "943697edc3d4c4f80132975b04d6391a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12167,
        "upload_time": "2020-08-07T04:03:52",
        "upload_time_iso_8601": "2020-08-07T04:03:52.154725Z",
        "url": "https://files.pythonhosted.org/packages/8e/c0/527bf73d500f1301f82e2644ac3df829f8608423d099232e5bfa57571b34/gym_cache-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8ec0527bf73d500f1301f82e2644ac3df829f8608423d099232e5bfa57571b34",
        "md5": "943697edc3d4c4f80132975b04d6391a",
        "sha256": "4e266c41a2495f1b513be7b830ab06664fa086c283a394196ce46dbaf183dcce"
      },
      "downloads": -1,
      "filename": "gym_cache-1.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "943697edc3d4c4f80132975b04d6391a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 12167,
      "upload_time": "2020-08-07T04:03:52",
      "upload_time_iso_8601": "2020-08-07T04:03:52.154725Z",
      "url": "https://files.pythonhosted.org/packages/8e/c0/527bf73d500f1301f82e2644ac3df829f8608423d099232e5bfa57571b34/gym_cache-1.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}