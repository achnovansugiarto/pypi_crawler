{
  "info": {
    "author": "Danny Bloemendaal",
    "author_email": "danny.bloemendaal@informaat.nl",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Plone",
      "Programming Language :: Python",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "===========\nSimpleAlias\n===========\n\nRequirements\n============\n\nThis components requires Plone 3.0 or better.\n\nWhat is SimpleAlias?\n====================\n\nSimpleAlias is a product that let's you create aliases or shortcuts to content\nsomewhere in your portal.  It behaves similar to an alias in the filesystem. In\nmany cases you want to have such a link in a folder to some object elsewhere in\nthe portal without having to recreate that object. Of course you can use the\nLink object but that is rather primitive.\n\nSimpleAlias introduces a new content type: Alias. Once you create the Alias, you\ncan create a reference to another object in the portal and the Alias will copy\nthe title and description of this target object.  When you view the alias, it\nshows the object within the context of the Alias and it presents the user a link\nto the target object itself. So, no scary traversal tricks. You remain in the\ncontext of the Alias.\n\nAnother way to create an Alias to an object is to copy that object in the\ncontents view of the objects container and then to go to the location where you\nwant to Alias and click on 'Paste as alias' in the contents view.\n\nIt's as simple as that. SimpleAlias can only link to AT 1.3+ based objects so to\nmake real use of it you will need ATContentTypes.\n\nInstallation\n============\n\n``Products.SimpleAlias`` is available as egg. So you can just install it using\n``pip`` or ``easy_install``.\n\nTo install it using ``zc.buildout``, just add this line in the\n``plone.recipe.zope2instance`` part of your ``buildout.cfg`` ::\n\n  [instance]\n  recipe = plone.recipe.zope2instance\n  ...\n  eggs =\n      ...\n      Products.SimpleAlias\n\nAns, of course, re-run your buildout.\n\n\nsimplealias_tool\n================\n\nIn the root of your portal, in ZMI, a new tool is created. This tool allows you\nto filter portal types to which you cannot create a link to. It only filters the\nTarget object list in the edit view of the Alias.\n\nThe content icons\n=================\n\nAn Alias uses the target object's icon. If there is an alias-variant for this\nicon then SimpleAlias will use that instead.  That works as follows: Suppose the\ntarget object's icon is **document_icon.gif**. If there exists an icon with id\n**document_icon_alias.gif**, SimpleAlias will use that icon instead. SimpleAlias\ncomes with alias icons for the common Plone icons but of course you can create\nthem yourself. In the SimpleAlias skinfolder there is a gif alias-arrow.gif. You\ncan overlay that over your icon (preferably in the lower-right corner, with one\npixel space to the right and bottom). Save it as &lt;original icon\nname&gt;_alias.gif.  SimpleAlias will use that if it can find it.\n\nPermissions\n===========\n\nSince there is hardly any trickery in SimpleAlias, there is one security issue\nyou have to be aware of: If you create an Alias that points to a target object\nin a restricted area of your portal then a user who has view permissions for the\nAlias and not for the target object WILL see the title and description of the\ntarget object. Think about that for a while. So, the Alias will cache/show the\ntitle and description of the target, no matter what, when the user may view the\nAlias. So you will have to be aware of this when you create the Alias.\n\nFolderishness\n=============\n\nAn Alias mimicks the folderishness of the target object. If the target object is\na folder then the attribute isPrincipiaFolderish will return 1 for the Alias\neventhough it is not folderish itself.  By doing this, the Alias object will be\nvisible in the navigation portlet if the target is folderish.  The only downside\n(as far as I can see) is that sometimes you get a folder_contents view of the\nAlias without contents (since the Alias itself is not really folderish). Pff,\nwell, it's not as complicated as this paragraph itself ;-)\n\nLimitations\n===========\n\nThe view of content types that have no \"main\" macro, may be ugly. Sorry but we\ncan't find an easy workaround. You just need to add such content types in the\n'portal_type_filters\" property of the 'simplealias_tool' object in ZMI.\n\nFeedback\n========\n\nPlease send your feedback to danny dot bloemendaal at companion dot\nnl, or use the tracker available from\nhttp://plone.org/products/simplealias\n\nReleases\n========\n\nYou may find newer releases of SimpleAlias at\nhttp://plone.org/products/simplealias or\nhttp://pypi.python.org/pypi/Products.SimpleAlias . But you're certainly reading\none of these pages.\n\nChanges\n=======\n\nTODO\n----\n\n- Use z3 views\n- Use the event machinery follow targets workflow state (difficult)?\n- Use the Subject (keywords) of the target ?\n- Fix i18n weirdnesses (find why...) on status message\n- Add i18n/\\*.pot files when translations are fixed\n- Support for content types with Zope3 style views (not just a CMF\n  skin template)\n\n2.1.1\n-----\n\n- Distributed as an egg (Products.SimpleAlias) [macadames]\n- added a french translation [macadames]\n\n2.1.0\n-----\n\n- When autoTitle is enabled, the alias' title/description will now\n  remain in sync with the linked to content object.\n  [duffyd]\n- Fix GS export handler to handle sites without the tool installed.\n  [wichert]\n\n2.0.0\n-----\n\n- Added simplealias.xml GenericSetup step.\n  [glenfant]\n- Extended the list of not aliasable content types.\n  [glenfant]\n- Fixed bug in Alias type (getIcon method appeared twice!!)\n  [lenfant]\n\n2.0RC1\n------\n\n- New style templates awareness when embedding target view - stolen\n  from CMFEditions\n  [glenfant]\n- Plone 3 awareness\n  [glenfant, wichert]\n- Installation based on GenericSetup\n  [glenfant, wichert]\n- Fixed unit tests\n  [glenfant]\n- portal_type_filters property is now multiple selection\n  [glenfant]\n- using 'shasattr' (safer) instead of 'getattr' to check object referenceability\n  [glenfant]\n- Alias created from clipboard have meaningful ids\n  [glenfant]\n- Using real exceptions in manage_pasteAsAlias in tool\n  [glenfant]\n- Using new portal message framework\n  [glenfant]\n\n1.1 (unreleased)\n----------------\n\n- Plone 2.5 aware. Made it dependant on ATCT and used the new FTI\n  [ender]\n- Moved content to content folder and added some stuff in __init__.py to\n  make it compatible with previous versions.\n  [ender]\n- Added tests\n- Moved getAliasIcon to the tool where it belongs.\n  [ender]\n\n\n1.0 (unreleased)\n----------------\n\n- Plone 2.1 compatibility - naro\n- Added auto_title flag to make possible to edit title and description - zegor\n- Fix ATCT portal_type problem - zegor\n- Disabled folderish emulation - zegor\n- Added i18n + french translation - zegor\n- Added metadata files for HTTP caching - zegor\n- Added CHANGES file - zegor\n- Some zpt improvements - zegor\n- Added viewlet for contentpanels - zegor",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://plone.org/products/simplealias",
    "keywords": "web zope plone alias",
    "license": "GPL",
    "maintainer": null,
    "maintainer_email": null,
    "name": "Products.SimpleAlias",
    "package_url": "https://pypi.org/project/Products.SimpleAlias/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/Products.SimpleAlias/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://plone.org/products/simplealias"
    },
    "release_url": "https://pypi.org/project/Products.SimpleAlias/2.1.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "SimpleAlias is a product that let's you create aliases or shortcuts to content somewhere in your Plone.",
    "version": "2.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 758738,
  "releases": {
    "2.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b5ac89a040085a63e02a521d491245fdae9bfc36cf5bedd949294e4cec6940e",
          "md5": "a440d0c36e04c2f644295df32f523dc0",
          "sha256": "7e943e0d023df9f8733f57a077f5d931303ee3049696ce997db62c3fe6191a88"
        },
        "downloads": -1,
        "filename": "Products.SimpleAlias-2.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a440d0c36e04c2f644295df32f523dc0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 32066,
        "upload_time": "2010-08-20T15:54:47",
        "upload_time_iso_8601": "2010-08-20T15:54:47.109837Z",
        "url": "https://files.pythonhosted.org/packages/2b/5a/c89a040085a63e02a521d491245fdae9bfc36cf5bedd949294e4cec6940e/Products.SimpleAlias-2.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2b5ac89a040085a63e02a521d491245fdae9bfc36cf5bedd949294e4cec6940e",
        "md5": "a440d0c36e04c2f644295df32f523dc0",
        "sha256": "7e943e0d023df9f8733f57a077f5d931303ee3049696ce997db62c3fe6191a88"
      },
      "downloads": -1,
      "filename": "Products.SimpleAlias-2.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "a440d0c36e04c2f644295df32f523dc0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 32066,
      "upload_time": "2010-08-20T15:54:47",
      "upload_time_iso_8601": "2010-08-20T15:54:47.109837Z",
      "url": "https://files.pythonhosted.org/packages/2b/5a/c89a040085a63e02a521d491245fdae9bfc36cf5bedd949294e4cec6940e/Products.SimpleAlias-2.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}