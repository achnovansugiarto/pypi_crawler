{
  "info": {
    "author": "Felipe Faria",
    "author_email": "felipe@self.st",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "# Self OpenID Client\n\nDjango plugin that replaces the standard Django user model and replaces it with Self Street OpenID integration.\n\n**Note**: This project is open source but currently only being used within Column Street. If you would like to integrate Self logging into your website/app/project please reach out to us so we can discuss. \n\n## Use\n\nThis package is a thin layer on top of the `mozilla-django-oidc` project, therefore integration is very similar. \n\n### 1. Register Application with Self\n\nEither contact an admin, or initiate it via the administrator board in Self.\n\n### 2. Install Package\n\n```\npip install selfauth\n```\n\n### 3. Add & Modify Settings\n\nThe following settings need to be initialized. Inside your `INSTALLED_APPS` make sure to add `mozilla_django_oidc` and `selfauth` right after `django.contrib.auth`. \n\n```python\nINSTALLED_APPS = [\n    ...,\n    \"django.contrib.auth\",\n    \"mozilla_django_oidc\",\n    \"selfauth\",\n    ...\n]\n```\n\nAt the end of your settings file you can then add the following:\n\n```python\n# =======================================================================================================\n# Self Street\n\n# Custom User Model\n# https://docs.djangoproject.com/en/3.1/topics/auth/customizing/#substituting-a-custom-user-model\n# This custom user model is used with the OIDC backend to ensure Self and Meta communicate properly.\nAUTH_USER_MODEL = \"selfauth.User\"\n\n# Authentication Backend\n# https://docs.djangoproject.com/en/3.1/topics/auth/customizing/#specifying-authentication-backends\n# Must be modified so that the OpenID plugin can automatically create users\n# based on the login of the user from Self. We use a custom authentication so that\n# we take care of user updates and uniqueness.\nAUTHENTICATION_BACKENDS = (\"selfauth.auth.SelfAuthenticationBackend\",)\n\n# OpenID\n# https://mozilla-django-oidc.readthedocs.io/en/stable/installation.html#choose-the-appropriate-algorithm\n# These are settings related to the OpenID Connect Client.\n\n# Client ID and Secret\nOIDC_RP_CLIENT_ID = \"\"\nOIDC_RP_CLIENT_SECRET = \"\"\n\n# Server Endpoints\nOIDC_OP_ENDPOINT = \"https://self.st\"\nOIDC_OP_JWKS_ENDPOINT = OIDC_OP_ENDPOINT + \"/o/jwks/\"\nOIDC_OP_AUTHORIZATION_ENDPOINT = OIDC_OP_ENDPOINT+ \"/o/authorize/\"\nOIDC_OP_TOKEN_ENDPOINT = OIDC_OP_ENDPOINT + \"/o/token/\"\nOIDC_OP_USER_ENDPOINT = OIDC_OP_ENDPOINT + \"/o/userinfo/\"\n\n# Scopes\n# https://github.com/mozilla/mozilla-django-oidc/blob/master/mozilla_django_oidc/auth.py#L84\n# These are the default scopes that any OpenID Client with Self has access to. Add any extra if you have. \nOIDC_RP_SCOPES = \"openid profile email\"\n\n# Custom Test Page\n# Enables test webpage at self.st/login.\nAUTH_TEST = True\nAUTH_TEST_PATH = \"login\"\n# =======================================================================================================\n```\n\nMake sure to modify the following varaibles:\n\n* `OIDC_RP_CLIENT_ID`: Client ID given and generated by Self.\n* `OIDC_RP_CLIENT_SECRET`: Client secret given and generated by Self. Recommended to be passed as an env variable.\n\n### 4. Create Migrations\n\n```\npython manage.py makemigrations\npython manage.py migrate\n```\n\n### 5. Routes\n\nLogging can be done found via the router `oidc_authentication_init`, and logout via `oidc_logout`. This is defined in the `mozilla-django-oidc` docs [here](https://mozilla-django-oidc.readthedocs.io/en/stable/installation.html#enable-login-and-logout-functionality-in-templates). Make sure to set the routes:\n\n```python\nfrom django.urls import path, include\n\nurlpatterns = [\n    ...\n    path(\"\", include(\"selfauth.urls\")),\n]\n```\n\n### 6. Testing\n\nIf you would like to test the framework, enabling the `AUTH_TEST` variable will allow you to access the test page in the `AUTH_TEST_PATH` path. In the case above the test page will be in `http://example.com/login`.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/column-street/selfauth",
    "keywords": "selfauth",
    "license": "BSD 3-Clause License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "selfauth",
    "package_url": "https://pypi.org/project/selfauth/",
    "platform": "",
    "project_url": "https://pypi.org/project/selfauth/",
    "project_urls": {
      "Homepage": "https://github.com/column-street/selfauth"
    },
    "release_url": "https://pypi.org/project/selfauth/1.1.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Self Street integration with Django for SSO.",
    "version": "1.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8765508,
  "releases": {
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6f5145203d157b3d4f496ffa95325676156debe460ce8c878347889fc088189a",
          "md5": "90cce87359cb4be7699bf78fc78b735a",
          "sha256": "cade8a2d505c4a2c5d1d4e05953b62f494df25decc076f757b07efc7c82421c2"
        },
        "downloads": -1,
        "filename": "selfauth-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "90cce87359cb4be7699bf78fc78b735a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10016,
        "upload_time": "2020-10-30T19:02:15",
        "upload_time_iso_8601": "2020-10-30T19:02:15.655724Z",
        "url": "https://files.pythonhosted.org/packages/6f/51/45203d157b3d4f496ffa95325676156debe460ce8c878347889fc088189a/selfauth-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "80656a5fde61988f0c93d46b4778922910d6c596ec5f370d43e048b1ba0c3998",
          "md5": "2b96265e966b96365cc6521c1d1db098",
          "sha256": "1d2fec0f8db35cb53dead0d30422d5fa660e0a871d9cc307145d906248259ff1"
        },
        "downloads": -1,
        "filename": "selfauth-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2b96265e966b96365cc6521c1d1db098",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9716,
        "upload_time": "2020-10-30T19:02:18",
        "upload_time_iso_8601": "2020-10-30T19:02:18.072039Z",
        "url": "https://files.pythonhosted.org/packages/80/65/6a5fde61988f0c93d46b4778922910d6c596ec5f370d43e048b1ba0c3998/selfauth-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea665601b231a83b6d51a1d37d004fe26d6397209e21cd7a19b2cf90b5fa85fb",
          "md5": "765523208eb7b01d0bb2900c7b9e53b7",
          "sha256": "01e3784e9de6ba24bf1289161473fc8c3274f6645c9907c0b2b7f1d0f91411a9"
        },
        "downloads": -1,
        "filename": "selfauth-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "765523208eb7b01d0bb2900c7b9e53b7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11706,
        "upload_time": "2020-11-27T21:23:53",
        "upload_time_iso_8601": "2020-11-27T21:23:53.524347Z",
        "url": "https://files.pythonhosted.org/packages/ea/66/5601b231a83b6d51a1d37d004fe26d6397209e21cd7a19b2cf90b5fa85fb/selfauth-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ea665601b231a83b6d51a1d37d004fe26d6397209e21cd7a19b2cf90b5fa85fb",
        "md5": "765523208eb7b01d0bb2900c7b9e53b7",
        "sha256": "01e3784e9de6ba24bf1289161473fc8c3274f6645c9907c0b2b7f1d0f91411a9"
      },
      "downloads": -1,
      "filename": "selfauth-1.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "765523208eb7b01d0bb2900c7b9e53b7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11706,
      "upload_time": "2020-11-27T21:23:53",
      "upload_time_iso_8601": "2020-11-27T21:23:53.524347Z",
      "url": "https://files.pythonhosted.org/packages/ea/66/5601b231a83b6d51a1d37d004fe26d6397209e21cd7a19b2cf90b5fa85fb/selfauth-1.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}