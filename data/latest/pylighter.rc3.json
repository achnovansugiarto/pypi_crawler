{
  "info": {
    "author": "Etienne Turc",
    "author_email": "etienne.turc@paylead.fr",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "# PyLighter: Annotation tool for NER tasks\n\nPyLighter is a tool that allows data scientists to annotate a corpus of documents directly on Jupyter for NER (Named Entity Recognition) tasks.\n\n<span style=\"display:block;text-align:center\">\n<img align=\"center\" src=\"https://github.com/PayLead/PyLighter/blob/master/media/pylighter.gif\" alt=\"pylighter_gif\"/>\n</span>\n\n## Contents\n\n- [Installation](#installation)\n- [Basic usage](#basic-usage)\n- [Advanced usage](#advanced-usage)\n    - [Using an already annotated corpus](#using-an-already-annotated-corpus)\n    - [Changing labels names](#changing-labels-names)\n    - [Document styling](#document-styling)\n    - [Adding additional information](#adding-additional-information)\n    - [Adding additional outputs](#adding-additional-outputs)\n    - [Using keyboard shortcuts](#using-keyboard-shortcuts)\n- [Contributing](#contributing)\n    - [Testing](#testing)\n- [License](#license)\n\n## Installation\n\nFrom Pypi: [https://pypi.org/project/pylighter/](https://pypi.org/project/pylighter/)\n\n```\npip install pylighter\njupyter nbextension enable --py widgetsnbextension\n```\n\nFrom Github: [https://github.com/PayLead/PyLighter](https://github.com/PayLead/PyLighter)\n```\ngit clone git@github.com:PayLead/PyLighter.git\ncd PyLighter\npython setup.py install\njupyter nbextension enable --py widgetsnbextension\n```\n\n## Demos\n\nThe [demo](https://github.com/PayLead/PyLighter/tree/master/demo) folder contains working examples of PyLighter in use. To view them, open any of the ipynb files in Jupyter.\n\n## Basic usage\n\nThe use case of PyLighter is to easily annotate a corpus in Jupyter. So let's first define a corpus for this example:\n\n```python\ncorpus = [\n    \"PyLighter is an annotation tool for NER tasks directly on Jupyter. \"\n    + \"It aims on helping data scientists easily and quickly annotate datasets. \"\n    + \"This tool was developed by Paylead.\",\n    \"PayLead is a fintech company specializing in transaction data analysis. \"\n    + \"Paylead brings retail and banking together, so customers get rewarded when they buy. \"\n    + \"Welcome to the data-for-value economy.\"\n]\n```\n\nNow let's start annotating !\n\n```python\nfrom pylighter import Annotation\n\nannotation = Annotation(corpus)\n```\n\nRunning that cell gives you the following output:\n\n![screenshot_basic_usage.png](https://github.com/PayLead/PyLighter/blob/master/media/screenshot_basic_usage.png)\n\nYou can know start annotating entities using the predefined labels _l1_, _l2_, etc. \n\nWhen your annotation is finished, you can either click on the save button or retrieve the results in the current Notebook. \n- The save button will save the results in a csv file named _annotation.csv_ with two columns: the documents and the labels.\n- You can access the labels of your annotations in `annotation.labels`\n\nNote: The given labels are in IOB2 format. \n\n## Advanced usage\n\nThe above example works just fine but PyLighter can be customized to best fit your specific use case.\n\n### Using an already annotated corpus\n\nIn most cases, you want to use an already annotated corpus or simply continue your annotation.\n\nTo this, you can use the argument named `labels` with the labels of the corpus. Moreover, if you stopped at the i<sup>th</sup> document, you can directly get back to where you stopped with `start_index=i`.\n\n![screenshot_pre_annotated](https://github.com/PayLead/PyLighter/blob/master/media/screenshot_pre_annotated.png)\n\nYou can see more on that with [this](https://github.com/PayLead/PyLighter/blob/master/demo/Annotated_corpus.ipynb) demo.\n\n### Changing labels names\n\nPyLighter uses _l1_, _l2_, ...., _l7_ as default labels names, but in most cases, you want to have explicit labels such as _Noun_, _Verb_, etc. \n\nYou can define your own labels names with the argument `labels_names`. You can also define your own colors for your labels with the argument `labels_colors` in HEX format.\n\n![screenshot_labels_changed](https://github.com/PayLead/PyLighter/blob/master/media/screenshot_labels_changed.png)\n\nYou can see more on that with [this](https://github.com/PayLead/PyLighter/blob/master/demo/Simple_usage.ipynb) demo.\n\n### Document styling\n\nYou can adjust the font size, the minimal distance between two characters and the size of spaces with the argument `char_params`.\n\nDefault value for char_params is:\n```python\n# Each field expects css value as a string (ex:\"10px\", \"1em\", \"large\", etc.)\nchar_params = {\n    \"font_size\": \"medium\", \n    \"width_white_space\": \"1Opx\",\n    \"min_width_between_chars\": \"4px\",\n}\n```\n\n### Adding additional information\n\nIn some cases, you may want to know additional information about the current document, such as the source of it.\n\nTo do this, you can use the argument `additional_infos`. This argument must be a pandas DataFrame of shape (_size of the corpus_, _number of additional information_). The i<sup>th</sup> row of the DataFrame will be associated with the i<sup>th</sup> element of the corpus.\n\nThe elements of the given DataFrame need to have a proper string representation to be correctly displayed.\n\nFor instance, to add the source to each element of the corpus:\n```python\nimport pandas as pd\n\n# define corpus of size 2\nadditional_infos = pd.DataFrame({\"source\":[\"Github\", \"Paylead.fr\"]})\nannotation = Annotation(corpus, additional_infos=additional_infos)\n```\n\nThe result will be:\n\n![screenshot_additional_information](https://github.com/PayLead/PyLighter/blob/master/media/screenshot_additional_information.png)\n\nYou can see more on that with [this](https://github.com/PayLead/PyLighter/blob/master/demo/Adding_additional_elements.ipynb) demo.\n\n### Adding additional outputs\n\nIn some cases, you want to flag a document as difficult to annotate, or spot as wrong, or give a value that estimates your confidence in your annotation, etc. In short, you need to return additional information.\n\nTo do this, you can use the argument: `additional_outputs_elements`. This argument expects a list of `pylighter.AdditionalOutputElement`.\n\nA `pylighter.AdditionalOutputElement` is defined like this:\n```python\nfrom pyligher import AdditionalOutputElement\n\nAdditionalOutputElement(\n    name=\"name_of_my_element\",\n    display_type=\"type_of_display\" # checkbox, int_text, float_text, text, text_area\n    description=\"Description of the element to display\",\n    default_value=\"Default value for the element\"\n)\n```\n\nHere is an example:\n\n![screenshot_additional_outputs](https://github.com/PayLead/PyLighter/blob/master/media/screenshot_additional_outputs.png)\n\nNote: Additional outputs will be added to the save file. But you can also retrieve them with `annotation.additional_outputs_values`. You can also use previously returned additional outputs values with the argument: `additional_outputs_values` (same as the label).\n\nYou can see more on that with [this](https://github.com/PayLead/PyLighter/blob/master/demo/Adding_additional_elements.ipynb) demo.\n\n### Using keyboard shortcuts\n\nAnnotation tasks are pretty boring. Thus you may want to use keyboard shortcuts to easily change documents or to select an other label.\n\nBy default, there are only a few shortcuts defined:\n- next: **Alt + n**\n- previous: **Alt + p**\n- skip: **Alt + s**\n- save: **Shift + Alt + s**\n\nHowever, you can fully customize them with the arguments: `standard_shortcuts` and `labels_shorcuts`. The `standard_shortcuts` argument is used to redefined shortcuts for the standard buttons such as the next button whereas the \n\nA shortcut is defined like this:\n```python\nfrom pylighter import Shortcut\n\nShortcut(\n    name=\"skip\",  # Name of the button to bind on (ex: \"next\", \"skip\") or name of the label (ex: \"l1\", \"l2\", or one you defined)\n    key=\"Ã’\",  # Usually represents the character that is displayed.\n    code=\"KeyS\",  # Usually represents the key that is pressed.\n    shift_key=False,  # Wether the shift key is pressed\n    alt_key=True,\n    ctrl_key=False\n)\n```\n\nIt is pretty hard to know what is the value for the `key` and the value for the `code`. It depends on a lot of different factors such as your keyboard, your browser, etc.\n\nThus, you can use the `ShortcutHelper` to pick the right shortcut. Here is an example of it.\n\n```python\nfrom pylighter import ShortcutHelper\n\nShortcutHelper()\n```\n\n![screenshot_shortcut_helper](https://github.com/PayLead/PyLighter/blob/master/media/screenshot_shortcut_helper.png)\n\nYou can see more on that with [this](https://github.com/PayLead/PyLighter/blob/master/demo/Shortcut_helper.ipynb) demo.\n\n## Contributing\n\n### Testing\n\nPyLighter uses _pytest_. Thus, tests can be run with:\n```\nmake test\n```\n\nPyLighter uses _flake8_, _isort_ and _check-manifest_ to control the quality of the code. You can test the quality of the code with:\n```\nmake test-quality\n```\n\nIf you wish to test everything including the packaging, you can run:\n```\nmake test-all\n```\n\n## License\n\nMIT License\n\n<!-- ## Credits -->\n\n<span style=\"display:block;text-align:center\">\n<img align=\"center\" src=\"https://github.com/PayLead/PyLighter/blob/master/media/pylighter.svg\" alt=\"pylighter_gif\"/>\n</span>\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/PayLead/PyLighter",
    "keywords": "annotation,NER,Jupyter,labelize",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pylighter",
    "package_url": "https://pypi.org/project/pylighter/",
    "platform": "",
    "project_url": "https://pypi.org/project/pylighter/",
    "project_urls": {
      "Homepage": "https://github.com/PayLead/PyLighter"
    },
    "release_url": "https://pypi.org/project/pylighter/0.0.3/",
    "requires_dist": [
      "ipython (>=7.18.1)",
      "ipywidgets (>=7.5.1)",
      "pandas (>=1.1.1)",
      "check-manifest ; extra == 'dev'",
      "flake8 ; extra == 'dev'",
      "isort (>=5.0.0) ; extra == 'dev'",
      "tox ; extra == 'dev'",
      "pytest (>=6.1.1) ; extra == 'dev'",
      "wheel ; extra == 'dev'",
      "zest.releaser[recommended] ; extra == 'dev'"
    ],
    "requires_python": ">=3.7",
    "summary": "Annotation tool for NER tasks on Jupyter",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11530395,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b464a30af1457fca2e0c445d8f6039b6370da3fe4edfeb2c0ae3a7f8f6e0d689",
          "md5": "cf015755f76feace9886ff3891b561c1",
          "sha256": "e47964d5722696b5e429d17f965367e9d32c49e6bb2271fb09b38bcde5ca0b09"
        },
        "downloads": -1,
        "filename": "pylighter-0.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cf015755f76feace9886ff3891b561c1",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.7",
        "size": 29030,
        "upload_time": "2020-11-12T10:09:30",
        "upload_time_iso_8601": "2020-11-12T10:09:30.219354Z",
        "url": "https://files.pythonhosted.org/packages/b4/64/a30af1457fca2e0c445d8f6039b6370da3fe4edfeb2c0ae3a7f8f6e0d689/pylighter-0.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e31794bc57059e5363ff3095fb8db7cf7a232aefb2271c28469e741a17e77486",
          "md5": "9a5a57f25dd707177a3008c2d63ecd36",
          "sha256": "1dce8103edb11c64bd7cf6c21e7c2fd54283eb94836fb0e68858aa3b6164e7af"
        },
        "downloads": -1,
        "filename": "pylighter-0.0.1-py3.8.egg",
        "has_sig": false,
        "md5_digest": "9a5a57f25dd707177a3008c2d63ecd36",
        "packagetype": "bdist_egg",
        "python_version": "3.8",
        "requires_python": ">=3.7",
        "size": 59317,
        "upload_time": "2020-11-12T10:09:32",
        "upload_time_iso_8601": "2020-11-12T10:09:32.230269Z",
        "url": "https://files.pythonhosted.org/packages/e3/17/94bc57059e5363ff3095fb8db7cf7a232aefb2271c28469e741a17e77486/pylighter-0.0.1-py3.8.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c8e5a91d0b0c34f02f58830b317ddb98ce2bb8df73f154f3df4f65b5a7aa4503",
          "md5": "861f9884774092bff2c2b5ad1ea6cfb2",
          "sha256": "0c3a4477d25b8c9a655e6643dfce57a32c3c45b2f0f0d8954d31891ff62480f3"
        },
        "downloads": -1,
        "filename": "pylighter-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "861f9884774092bff2c2b5ad1ea6cfb2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 31151,
        "upload_time": "2020-11-12T10:09:33",
        "upload_time_iso_8601": "2020-11-12T10:09:33.507582Z",
        "url": "https://files.pythonhosted.org/packages/c8/e5/a91d0b0c34f02f58830b317ddb98ce2bb8df73f154f3df4f65b5a7aa4503/pylighter-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aff96319c96ddb68cf1cbfef359a82fd93fe0b2a6bc40017946f3346a783f055",
          "md5": "eb8d0dd6e041b98a92a092d1ee4e11f7",
          "sha256": "812b3336023edf90b683dcac5d99dde90c7fc93aa49a3186e83d1f5ddadbdce2"
        },
        "downloads": -1,
        "filename": "pylighter-0.0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eb8d0dd6e041b98a92a092d1ee4e11f7",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.7",
        "size": 34076,
        "upload_time": "2020-11-24T16:02:42",
        "upload_time_iso_8601": "2020-11-24T16:02:42.274211Z",
        "url": "https://files.pythonhosted.org/packages/af/f9/6319c96ddb68cf1cbfef359a82fd93fe0b2a6bc40017946f3346a783f055/pylighter-0.0.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7f7df16d59dce63f4f80f5a54d258be05bad22020b07f515b5ff2ed33cb023a4",
          "md5": "8821a9bfa975e8698d71db3ac45542a8",
          "sha256": "78d54c6efa5a23df6e7a02fb998410bfa6393e127856d69a18be298051d4f81b"
        },
        "downloads": -1,
        "filename": "pylighter-0.0.2-py3.8.egg",
        "has_sig": false,
        "md5_digest": "8821a9bfa975e8698d71db3ac45542a8",
        "packagetype": "bdist_egg",
        "python_version": "0.0.2",
        "requires_python": ">=3.7",
        "size": 43188,
        "upload_time": "2021-09-23T16:39:13",
        "upload_time_iso_8601": "2021-09-23T16:39:13.954160Z",
        "url": "https://files.pythonhosted.org/packages/7f/7d/f16d59dce63f4f80f5a54d258be05bad22020b07f515b5ff2ed33cb023a4/pylighter-0.0.2-py3.8.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "79433f0b3f2f2e8133a4763e39ed29876c01d76bf18a4324aafe39e56b0af4fa",
          "md5": "fc7d48ec00b6033437176e3bb8cc1c50",
          "sha256": "bdce06f0296676e969157c9993d8a5472c0885db183524bdf5036c96e7def28c"
        },
        "downloads": -1,
        "filename": "pylighter-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "fc7d48ec00b6033437176e3bb8cc1c50",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 31327,
        "upload_time": "2020-11-24T16:02:44",
        "upload_time_iso_8601": "2020-11-24T16:02:44.038039Z",
        "url": "https://files.pythonhosted.org/packages/79/43/3f0b3f2f2e8133a4763e39ed29876c01d76bf18a4324aafe39e56b0af4fa/pylighter-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fb7539d5f954bc173deefc9a1176884affac32dd259027e33957704932026810",
          "md5": "3e30f548621b86be6d2d7cfe63af6ee6",
          "sha256": "f7e48bf42a8d2a6dc396b5ad36c3148578f931f3cc75bc02c595ccbe27442d3b"
        },
        "downloads": -1,
        "filename": "pylighter-0.0.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3e30f548621b86be6d2d7cfe63af6ee6",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.7",
        "size": 25465,
        "upload_time": "2021-09-23T16:39:12",
        "upload_time_iso_8601": "2021-09-23T16:39:12.098023Z",
        "url": "https://files.pythonhosted.org/packages/fb/75/39d5f954bc173deefc9a1176884affac32dd259027e33957704932026810/pylighter-0.0.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b37bbf45bebdd13072562782fa2c0eaad4adc1677f5e41d2587bbd144bff08e7",
          "md5": "a78382fd0681655301fecabee63b890f",
          "sha256": "547fa47252b0f63e0a1301facb26b1801f5afc1d1f1bb632a95d6088f5034b00"
        },
        "downloads": -1,
        "filename": "pylighter-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "a78382fd0681655301fecabee63b890f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 32633,
        "upload_time": "2021-09-23T16:39:15",
        "upload_time_iso_8601": "2021-09-23T16:39:15.787874Z",
        "url": "https://files.pythonhosted.org/packages/b3/7b/bf45bebdd13072562782fa2c0eaad4adc1677f5e41d2587bbd144bff08e7/pylighter-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fb7539d5f954bc173deefc9a1176884affac32dd259027e33957704932026810",
        "md5": "3e30f548621b86be6d2d7cfe63af6ee6",
        "sha256": "f7e48bf42a8d2a6dc396b5ad36c3148578f931f3cc75bc02c595ccbe27442d3b"
      },
      "downloads": -1,
      "filename": "pylighter-0.0.3-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3e30f548621b86be6d2d7cfe63af6ee6",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.7",
      "size": 25465,
      "upload_time": "2021-09-23T16:39:12",
      "upload_time_iso_8601": "2021-09-23T16:39:12.098023Z",
      "url": "https://files.pythonhosted.org/packages/fb/75/39d5f954bc173deefc9a1176884affac32dd259027e33957704932026810/pylighter-0.0.3-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b37bbf45bebdd13072562782fa2c0eaad4adc1677f5e41d2587bbd144bff08e7",
        "md5": "a78382fd0681655301fecabee63b890f",
        "sha256": "547fa47252b0f63e0a1301facb26b1801f5afc1d1f1bb632a95d6088f5034b00"
      },
      "downloads": -1,
      "filename": "pylighter-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "a78382fd0681655301fecabee63b890f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 32633,
      "upload_time": "2021-09-23T16:39:15",
      "upload_time_iso_8601": "2021-09-23T16:39:15.787874Z",
      "url": "https://files.pythonhosted.org/packages/b3/7b/bf45bebdd13072562782fa2c0eaad4adc1677f5e41d2587bbd144bff08e7/pylighter-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}