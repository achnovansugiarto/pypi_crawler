{
  "info": {
    "author": "k.r. goger",
    "author_email": "k.r.goger+pyparsesynt@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3"
    ],
    "description": "\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n\n\n# pyparsesynt - parser for creating a syntax tree from a given grammar\n\nbased on a given grammar a syntax tree is constructed.\n\n\n# What's new ?\n\nCheck\n[`CHANGELOG`](https://github.com/kr-g/pyparsesynt/blob/main/CHANGELOG.MD)\nfor latest ongoing, or upcoming news\n\n\n# how it works \n\n`pyparsesynt` implements a [`botton-up parser`](https://en.wikipedia.org/wiki/Bottom-up_parsing).\n\nin principle it is a variant of a \n[`LR parser`](https://en.wikipedia.org/wiki/LR_parser)\nnamed also\n[`LALR(1) parser`](https://en.wikipedia.org/wiki/LALR_parser).\n\nthe produced syntax tree is somehow inspired by \n[`lisp`](https://en.wikipedia.org/wiki/Lisp_(programming_language)),\nso the output is a list which elements can contain again list elements (hierarchical list).\n\neach [`production rule`](https://en.wikipedia.org/wiki/Formal_grammar#The_syntax_of_grammars)\nproduces an element in the output list. \nit is possible to have more than one production rule with the same name defined.\nthose act then as alternative rule for the production. \nif required to distinguish between different alternatives it's possible to assign an `alias` to \nalternative production rules, where the alias is reflected in the output syntax tree.\n\ncurrently there is no formal grammar like BNF, or EBNF to specify the used grammar.\ninstead the grammar is defined by class based rules.\n\ncurrently the following rules are available:\n\n| name | description |\n| --- | --- | \n| Terminal | resolved against a value, or type | \n| Call | calls an other Production | \n| And | sequence | \n| Or | alternative | \n| Optional | the rule inside may be there, or not | \n| Repeat | the rule inside is repeated to match the grammar | \n\n\n# limitations\n\nthe syntax tree is not optimized.\n\nin case a parser for an infix notation might wants to have also sort of\n[`shunting-yard algorithm`](https://en.wikipedia.org/wiki/Shunting-yard_algorithm).\n\nalternatively think into the direction of \n[Nikolaus Wirth's](https://en.wikipedia.org/wiki/Niklaus_Wirth)\nproposal - as given here in \n[`EBNF`](https://en.wikipedia.org/wiki/Extended_Backus%E2%80%93Naur_form)\n\n    E = T | E \"+\" T.      # expression\n    T = F | T \"*\" F.      # term\n    F = id | \"(\" E \")\".   # factor\n\nreference: \n- Nikolaus Wirth, downloadable section \"Compiler Construction\", \n   [external link](https://people.inf.ethz.ch/wirth/), Chapter 5\n\n\n# how to use\n\n... todo\n\nrefer also to \n- test cases in [`tests`](https://github.com/kr-g/pyparsesynt/blob/main/tests)\n- [`sample`](https://github.com/kr-g/pyparsesynt/blob/main/sample.py)\n- \n\n\n# related project \n\n[`pylexem`](https://github.com/kr-g/pylexem) \ncan be used to create the tokenized tupel input stream.\n\n\n# Platform\n\nTested on Python3, and Linux.\n\n\n# development status\n\nalpha state.\nthe API or logical call flow might change without prior notice.\n\nread [`CHANGELOG`](https://github.com/kr-g/pyparsesynt/blob/main/CHANGELOG.MD)\nfor latest, or upcoming news.\n\n\n# installation\n\navailable on pypi. install with:\n\n    python3 -m pip install pyparsesynt\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/kr-g/pyparsesynt",
    "keywords": "compiler construction parser syntax tree",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyparsesynt",
    "package_url": "https://pypi.org/project/pyparsesynt/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyparsesynt/",
    "project_urls": {
      "Homepage": "https://github.com/kr-g/pyparsesynt"
    },
    "release_url": "https://pypi.org/project/pyparsesynt/0.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "pyparsesynt - parser for creating syntax tree",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10369743,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b4fbaabc00ecdb80577cbc3cc5acdec93891540eb495ba043b6881ce35e3d25f",
          "md5": "3a0b5ff18d1b26530f2c04462f0fb076",
          "sha256": "cf69ccaea2295e12f6686a8007d35675923dc0317c72f547e2babad70e09e8a0"
        },
        "downloads": -1,
        "filename": "pyparsesynt-0.0.1.linux-x86_64.tar.gz",
        "has_sig": false,
        "md5_digest": "3a0b5ff18d1b26530f2c04462f0fb076",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 15499,
        "upload_time": "2021-05-16T10:23:10",
        "upload_time_iso_8601": "2021-05-16T10:23:10.913473Z",
        "url": "https://files.pythonhosted.org/packages/b4/fb/aabc00ecdb80577cbc3cc5acdec93891540eb495ba043b6881ce35e3d25f/pyparsesynt-0.0.1.linux-x86_64.tar.gz",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b6bc3137551464755c9954548c099a16d5dd947bd5467beaf435e55365cb787b",
          "md5": "0c32275c148df32dd97a2107cd99b249",
          "sha256": "9b5d7f0831f6716ba69afc6fcc4712919fc88c44ccf53eb240e62a4c2171af3b"
        },
        "downloads": -1,
        "filename": "pyparsesynt-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0c32275c148df32dd97a2107cd99b249",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 20353,
        "upload_time": "2021-05-16T10:23:09",
        "upload_time_iso_8601": "2021-05-16T10:23:09.433955Z",
        "url": "https://files.pythonhosted.org/packages/b6/bc/3137551464755c9954548c099a16d5dd947bd5467beaf435e55365cb787b/pyparsesynt-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b4fbaabc00ecdb80577cbc3cc5acdec93891540eb495ba043b6881ce35e3d25f",
        "md5": "3a0b5ff18d1b26530f2c04462f0fb076",
        "sha256": "cf69ccaea2295e12f6686a8007d35675923dc0317c72f547e2babad70e09e8a0"
      },
      "downloads": -1,
      "filename": "pyparsesynt-0.0.1.linux-x86_64.tar.gz",
      "has_sig": false,
      "md5_digest": "3a0b5ff18d1b26530f2c04462f0fb076",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 15499,
      "upload_time": "2021-05-16T10:23:10",
      "upload_time_iso_8601": "2021-05-16T10:23:10.913473Z",
      "url": "https://files.pythonhosted.org/packages/b4/fb/aabc00ecdb80577cbc3cc5acdec93891540eb495ba043b6881ce35e3d25f/pyparsesynt-0.0.1.linux-x86_64.tar.gz",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b6bc3137551464755c9954548c099a16d5dd947bd5467beaf435e55365cb787b",
        "md5": "0c32275c148df32dd97a2107cd99b249",
        "sha256": "9b5d7f0831f6716ba69afc6fcc4712919fc88c44ccf53eb240e62a4c2171af3b"
      },
      "downloads": -1,
      "filename": "pyparsesynt-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0c32275c148df32dd97a2107cd99b249",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 20353,
      "upload_time": "2021-05-16T10:23:09",
      "upload_time_iso_8601": "2021-05-16T10:23:09.433955Z",
      "url": "https://files.pythonhosted.org/packages/b6/bc/3137551464755c9954548c099a16d5dd947bd5467beaf435e55365cb787b/pyparsesynt-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}