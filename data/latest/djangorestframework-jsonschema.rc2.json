{
  "info": {
    "author": "George Burton",
    "author_email": "g.e.c.burton@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Internet :: WWW/HTTP"
    ],
    "description": "<div class=\"badges\">\n    <a href=\"http://travis-ci.org/gecBurton/django-rest-framework-jsonschema\">\n        <img src=\"https://travis-ci.org/gecBurton/django-rest-framework-jsonschema.svg?branch=master\">\n    </a>\n    <a href=\"https://pypi.python.org/pypi/djangorestframework-jsonschema\">\n        <img src=\"https://img.shields.io/pypi/v/djangorestframework-jsonschema.svg\">\n    </a>\n</div>\n\n---\n\n# djangorestframework-jsonschema\n\n\n---\n\n## Overview\n\nThis package provides a management command that builds a \nDjango-REST-Framework solution from a JSONSchema specification.\n\n## Requirements\n\n* Python (3.8+)\n* Django (3.0+)\n* Django-Rest-Framework (3.11)\n* JSONSchema (3.2)\n* Jinja2 (2.11)\n\n\n## Installation\n\nInstall using `pip`...\n\n```bash\n$ pip install djangorestframework-jsonschema\n```\n\nThis app needs to included it in the `INSTALLED_APPS` of your project, it should\ncome after `rest_framework` and `django_filters`, both of which are required,\nbut before anything specific to your project.\n\n```python\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    ...\n    \"rest_framework\",\n    \"django_filters\",\n    \"jsonschema2dj\",\n    ...\n]\n```\n\n## Example\n\nSave the following as `schema.json` in a new DRF app `example_app`\n\n```json\n{\n  \"definitions\": {\n    \"identifiers\": {\n      \"properties\": {\n        \"ISBN\": {\n          \"type\": \"string\",\n          \"pattern\": \"[0-9]*[-| ][0-9]*[-| ][0-9]*[-| ][0-9]*[-| ][0-9]*\"\n        },\n        \"Dewey Decimal Classification\": {\n          \"type\": \"string\",\n          \"pattern\": \"\\\\d{3}|\\\\d{3}\\\\.\\\\d+|[12456]--\\\\d+|3[ABC]?--\\\\d+\"\n        }\n      }\n    },\n    \"Book\": {\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"other\": {\"$ref\": \"#/definitions/identifiers\"},\n        \"genre\": {\n          \"enum\": [\n            \"celebrity-nonsense\",\n            \"military-tat\",\n            \"other\"\n          ]\n        },\n        \"author\": {\n          \"$ref\": \"#/definitions/Author\"\n        }\n      }\n    }\n  },\n  \"properties\":{\n    \"Book\": {\"$ref\":  \"#/definitions/Book\"},\n    \"Author\": {\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"date_of_birth\": {\n          \"type\": \"string\",\n          \"format\": \"date\"\n        }\n      }\n    }\n  }\n}\n```\n\nnow run\n\n```bash\n$ python manage.py jsonschema2dj example_app\n```\n\nand the following are produced:\n\n* models.py\n* views.py\n* serializers.py\n* urls.py\n* filters.py\n* admin.py\n\nThese files are built using jinja templates using sensible default choices \nwhere possible. It is expected that the user will modify these files to suit their\nneeds.\n\neg. `models.py` would be:\n\n```python\nclass Book(models.Model):\n\n    title = models.CharField(null=True, max_length=255)\n    other = JSONField(validators=[JSONSchemaValidator({'$ref': '#/definitions/identifiers'}, DEFINITIONS)])\n    genre = models.CharField(null=True, max_length=25, choices=[\n        ('celebrity_nonsense', 'celebrity nonsense'),\n        ('military-tat', 'military-tat'),\n        ('other', 'other')\n    ])\n    author = models.ForeignKey(\"Author\", null=True, on_delete=models.CASCADE)\n\n\nclass Author(models.Model):\n\n    name = models.CharField(null=True, max_length=255)\n    date_of_birth = models.DateField(null=True)\n```\n\nThis is intended to be:\n\n* accessible to anyone with knowledge of JSONSchema\n* extensible by anyone with a rudimentary understanding of Django\n\n\n## Rules\n\nModels are objects at the root level of the `properties` of the `schema.json`.\n\nA model's fields are its root level properties.\n\nThe definitions maybe used freely without constraint.\n\nThere are three types of field:\n\n### simple fields\n\nIf a field has a `jsonschema:type` that is anything other than an `object` or \n`items` or this can be inferred then this field is mapped to a djngo field \napproximately as:\n\n* \"string\" -> CharField\n* \"integer\" -> IntegerField\n* \"number\" -> DecimalField\n* \"boolean\" -> BooleanField\n\nIf the field's name is `id` then this wil be the primary key.\n\n### reference-fields\n\nIf a field has a `jsonschema:type` that is an `object` or \n`items` and this references an object (model) with a schema also defined in the top level\nproperties then this is modeled as relationship to that object (model) like:\n\n* `\"$ref\": \"Model-X\"` -> one-to-one or one-to-many\n* `\"items\": {\"$ref\": \"Model-X\"}` -> many-to-one or many-to-many\n\nNote that the exact cardinality can only be determined by comparing both sides of\nthe relationship. If only one side is specified the it is assumed that it is \none-to-many or many-to-many respectively.\n\n### json-fields\n\nLastly if a field has a `jsonschema:type` that is an `object` or \n`items` and this references an object (model) with a schema that is not \ndefined in the top level properties then this is modeled as a jsons object \nin its own right, i.e.: \n\n* \"object\" -> JSONField\n\nIts schema will be enfoced by the serializer.\n\n\n## Testing\n\n```bash\n$ ./runtests.py\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/gecBurton/djangorestframework-jsonschema",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "djangorestframework-jsonschema",
    "package_url": "https://pypi.org/project/djangorestframework-jsonschema/",
    "platform": "",
    "project_url": "https://pypi.org/project/djangorestframework-jsonschema/",
    "project_urls": {
      "Homepage": "https://github.com/gecBurton/djangorestframework-jsonschema"
    },
    "release_url": "https://pypi.org/project/djangorestframework-jsonschema/0.1.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "build Django REST Framework API from jsonschema",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7247520,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f42b7c8e9f97d219e871d40be999693dc095fe5ef17c37b38c57c2b672c5eeb9",
          "md5": "c5834c759e127b7e07848bd367256ad5",
          "sha256": "52e1c2bb45401a628d5cc89f2b8a2880b06fc2842cee90d5963ed081e2c7d600"
        },
        "downloads": -1,
        "filename": "djangorestframework_jsonschema-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c5834c759e127b7e07848bd367256ad5",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 34051,
        "upload_time": "2020-05-15T10:20:37",
        "upload_time_iso_8601": "2020-05-15T10:20:37.695982Z",
        "url": "https://files.pythonhosted.org/packages/f4/2b/7c8e9f97d219e871d40be999693dc095fe5ef17c37b38c57c2b672c5eeb9/djangorestframework_jsonschema-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d48e897b9800a4fd910a822af314b29c230738660847c77dea38127eee22bb7a",
          "md5": "b3f19937b8587e7d9bfae0d42300e6b5",
          "sha256": "9974b691ad6a2a32b89c4b46da9e6385bcbf429b6f30901134b9cfc19324bfbf"
        },
        "downloads": -1,
        "filename": "djangorestframework-jsonschema-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b3f19937b8587e7d9bfae0d42300e6b5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13150,
        "upload_time": "2020-05-15T10:20:40",
        "upload_time_iso_8601": "2020-05-15T10:20:40.215854Z",
        "url": "https://files.pythonhosted.org/packages/d4/8e/897b9800a4fd910a822af314b29c230738660847c77dea38127eee22bb7a/djangorestframework-jsonschema-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ff2f2c439578c0a81ae5f4ddd3f21f1c1812935733c8a344492910d5ed26fb2c",
          "md5": "f879341f4f91494ae07f0067bd5a42c7",
          "sha256": "73b2209ef1c72ce03e8255223476762eb8463dd21046bd8a6fa4f4c641e5d923"
        },
        "downloads": -1,
        "filename": "djangorestframework-jsonschema-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f879341f4f91494ae07f0067bd5a42c7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13137,
        "upload_time": "2020-05-15T10:20:41",
        "upload_time_iso_8601": "2020-05-15T10:20:41.595613Z",
        "url": "https://files.pythonhosted.org/packages/ff/2f/2c439578c0a81ae5f4ddd3f21f1c1812935733c8a344492910d5ed26fb2c/djangorestframework-jsonschema-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ff2f2c439578c0a81ae5f4ddd3f21f1c1812935733c8a344492910d5ed26fb2c",
        "md5": "f879341f4f91494ae07f0067bd5a42c7",
        "sha256": "73b2209ef1c72ce03e8255223476762eb8463dd21046bd8a6fa4f4c641e5d923"
      },
      "downloads": -1,
      "filename": "djangorestframework-jsonschema-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "f879341f4f91494ae07f0067bd5a42c7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13137,
      "upload_time": "2020-05-15T10:20:41",
      "upload_time_iso_8601": "2020-05-15T10:20:41.595613Z",
      "url": "https://files.pythonhosted.org/packages/ff/2f/2c439578c0a81ae5f4ddd3f21f1c1812935733c8a344492910d5ed26fb2c/djangorestframework-jsonschema-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}