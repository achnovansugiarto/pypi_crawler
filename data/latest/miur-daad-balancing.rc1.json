{
  "info": {
    "author": "Luca Cappelletti",
    "author_email": "cappelletti.luca94@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3"
    ],
    "description": "miur_daad_balancing\n=========================================================================================\n|travis| |sonar_quality| |sonar_maintainability| |codacy| |code_climate_maintainability| |pip|\n\nTesting dataset balancing techniques from previous works.\n\nHow do I install this package?\n----------------------------------------------\nAs usual, just download it using pip:\n\n.. code:: shell\n\n    pip install miur_daad_balancing\n\nTests Coverage\n----------------------------------------------\nSince some software handling coverages sometime get slightly different results, here's three of them:\n\n|coveralls| |sonar_coverage| |code_climate_coverage|\n\nUsage\n----------------------------------------------\nThree balancing methods are available for the MIUR-DAAD project:\n\nUmbalanced\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nThis method just leaves the data as-is, and is used more as callback usefull to uniform the pipeline:\n\n.. code:: python\n\n    from miur_daad_balancing import umbalanced\n    \n    training, testing = generate_my_data(...)\n    balanced_training, balanced_testing = umbalanced(training, testing)\n\nBalanced\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nApplies a maximum threshold to every class in the training set as specified in the default package settings (3000):\n\n.. code:: python\n\n    from miur_daad_balancing import balanced\n    \n    training, testing = generate_my_data(...)\n    balanced_training, balanced_testing = balanced(training, testing)\n\nFull Balanced\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nApplies a maximum threshold to every class in the training set and balances to some default proportions the testing set:\n\n.. code:: python\n\n    from miur_daad_balancing import full_balanced\n    \n    training, testing = generate_my_data(...)\n    balanced_training, balanced_testing = full_balanced(training, testing)\n\n\n.. |travis| image:: https://travis-ci.org/LucaCappelletti94/miur_daad_balancing.png\n   :target: https://travis-ci.org/LucaCappelletti94/miur_daad_balancing\n   :alt: Travis CI build\n\n.. |sonar_quality| image:: https://sonarcloud.io/api/project_badges/measure?project=LucaCappelletti94_miur_daad_balancing&metric=alert_status\n    :target: https://sonarcloud.io/dashboard/index/LucaCappelletti94_miur_daad_balancing\n    :alt: SonarCloud Quality\n\n.. |sonar_maintainability| image:: https://sonarcloud.io/api/project_badges/measure?project=LucaCappelletti94_miur_daad_balancing&metric=sqale_rating\n    :target: https://sonarcloud.io/dashboard/index/LucaCappelletti94_miur_daad_balancing\n    :alt: SonarCloud Maintainability\n\n.. |sonar_coverage| image:: https://sonarcloud.io/api/project_badges/measure?project=LucaCappelletti94_miur_daad_balancing&metric=coverage\n    :target: https://sonarcloud.io/dashboard/index/LucaCappelletti94_miur_daad_balancing\n    :alt: SonarCloud Coverage\n\n.. |coveralls| image:: https://coveralls.io/repos/github/LucaCappelletti94/miur_daad_balancing/badge.svg?branch=master\n    :target: https://coveralls.io/github/LucaCappelletti94/miur_daad_balancing?branch=master\n    :alt: Coveralls Coverage\n\n.. |pip| image:: https://badge.fury.io/py/miur_daad_balancing.svg\n    :target: https://badge.fury.io/py/miur_daad_balancing\n    :alt: Pypi project\n\n.. |codacy|  image:: https://api.codacy.com/project/badge/Grade/b4a7c72f058b433597426fa696d71539\n    :target: https://www.codacy.com/app/LucaCappelletti94/miur_daad_balancing?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=LucaCappelletti94/miur_daad_balancing&amp;utm_campaign=Badge_Grade\n    :alt: Codacy Maintainability\n\n.. |code_climate_maintainability| image:: https://api.codeclimate.com/v1/badges/2ca44bd945309b74bc33/maintainability\n    :target: https://codeclimate.com/github/LucaCappelletti94/miur_daad_balancing/maintainability\n    :alt: Maintainability\n\n.. |code_climate_coverage| image:: https://api.codeclimate.com/v1/badges/2ca44bd945309b74bc33/test_coverage\n    :target: https://codeclimate.com/github/LucaCappelletti94/miur_daad_balancing/test_coverage\n    :alt: Code Climate Coverate",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/LucaCappelletti94/miur_daad_balancing",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "miur-daad-balancing",
    "package_url": "https://pypi.org/project/miur-daad-balancing/",
    "platform": "",
    "project_url": "https://pypi.org/project/miur-daad-balancing/",
    "project_urls": {
      "Homepage": "https://github.com/LucaCappelletti94/miur_daad_balancing"
    },
    "release_url": "https://pypi.org/project/miur-daad-balancing/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Testing dataset balancing techniques from previous works.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 5593365,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1b72d74279f5ff405ed8ec7b6d02a786d13591681cb9b12eb558b953567caaf6",
          "md5": "81f251fdf2c8b5c5d8e9ab2210bebbda",
          "sha256": "f63ca370b8ed98ddf1f7e61bd8ad8bff944226f4e89e33cff4caa1ed100731ed"
        },
        "downloads": -1,
        "filename": "miur_daad_balancing-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "81f251fdf2c8b5c5d8e9ab2210bebbda",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5823,
        "upload_time": "2019-07-27T16:03:31",
        "upload_time_iso_8601": "2019-07-27T16:03:31.350781Z",
        "url": "https://files.pythonhosted.org/packages/1b/72/d74279f5ff405ed8ec7b6d02a786d13591681cb9b12eb558b953567caaf6/miur_daad_balancing-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1b72d74279f5ff405ed8ec7b6d02a786d13591681cb9b12eb558b953567caaf6",
        "md5": "81f251fdf2c8b5c5d8e9ab2210bebbda",
        "sha256": "f63ca370b8ed98ddf1f7e61bd8ad8bff944226f4e89e33cff4caa1ed100731ed"
      },
      "downloads": -1,
      "filename": "miur_daad_balancing-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "81f251fdf2c8b5c5d8e9ab2210bebbda",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5823,
      "upload_time": "2019-07-27T16:03:31",
      "upload_time_iso_8601": "2019-07-27T16:03:31.350781Z",
      "url": "https://files.pythonhosted.org/packages/1b/72/d74279f5ff405ed8ec7b6d02a786d13591681cb9b12eb558b953567caaf6/miur_daad_balancing-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}