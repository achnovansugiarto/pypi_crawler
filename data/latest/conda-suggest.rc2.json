{
  "info": {
    "author": "Anthony Scopatz",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# conda-suggest\nSuggest packages to install to obtain command line utilities.\n\n## Quickstart\n\nFirst, install conda-suggest via:\n\n```sh\n$ conda install -c conda-suggest\n```\n\nThen you can print a message for which packages to install to obtain a command\nvia conda-suggest. For example, say we want to know where `g++`, the GNU C++\ncompiler comes from. We would then run something like the following.\n\n```sh\n$ conda suggest message g++\nCommand 'g++' not found in the environment, but can be installed with any of:\n\n    $ conda install -c conda-forge cxx-compiler\n```\n\nThe above assumes that the map files for the [`conda-forge`](https://conda-forge.org)\nchannel have also been installed.\n\n## Python API\nYou may also use conda-suggest programatically. For example:\n\n```python\nfrom conda_suggest.find import message, exact_find, substring_find\n\nmessage(\"g++\")\nexact_find(\"python\")\nsubstring_find(\"xonsh\")\n```\n\n\n## Map files\nConda-suggest works by looking for \"map files\" on the system. Map files are simple\ntext files where every line associates a command name with a package name separated\nby a colon, i.e. `<command>:<package>\\n`. For example:\n\n```\nzfp:zfp\nzic:tzcode\nzima:pint-pulsar\nzip:zip\nzipcmp:libzip\n```\n\nThese map files must be lexicographically sorted, first by the command, and then by the package.\nThe map files are named according to the following scheme: `<channel-name>.<subdir>.map`.\nThe `message` command (and others) will load and search all map files on `$CONDA_SUGGEST_PATH`.\nThis environment variable will default to\n`\"~/.local/share/conda-suggest:<sys.exec_prefix>/share/conda-suggest\"` or it's platform-specific\nequivalent.\n\nUsers should install map files for all channels that they frequently use.\n\n## Generating the Map Files & the Cache Files\nCreating the map files can be a tedious job because it requires searching through all artifacts on\na channel. The `conda suggest generate` command automates this process for you. Currently this can\nlook through a channel's artifacts in a local directory:\n\n```sh\n$ conda suggest generate /path/to/mirrors/channel-name\n```\n\nTo make restarts safe and fast, the above command produces \"cache files\" with the naming\nscheme `<channel-name>.<subdir>.cache.json`. These are JSON files with the following layout:\n\n```json\n{\n  \"<artifact-filename>\": {\n    \"executables\": [\"cmd0\", \"cmd1\", ...],\n    \"package\": \"<package-name>\"\n  },\n  ...\n}\n```\n\nIn the cache file, the artifact name is the same as the artifact filename in the\n`repodata.json` for that channel & subdir combo. The package name is taken from the\nequivalent repodata entry.\n\nGenerating these cache files can take a very long time and they tend to be quite large.\nIt is not recommended that you distribute these caches as part of any package. They are\nintended for local use only. The map files are the intended distibutable result.\n\nAt some point in the future, we would like to be able to generate maps based off of a\nremote `repodata.json` as well.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/conda-incubator/conda-suggest",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "conda-suggest",
    "package_url": "https://pypi.org/project/conda-suggest/",
    "platform": "",
    "project_url": "https://pypi.org/project/conda-suggest/",
    "project_urls": {
      "Homepage": "https://github.com/conda-incubator/conda-suggest"
    },
    "release_url": "https://pypi.org/project/conda-suggest/0.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Conda Suggest",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8138840,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2d8481be7f1fa5a1f714dc402ab581f590441b644c3a727577bf817ac8b19f0c",
          "md5": "69a13baefd66cf0ee49d41aaf6a6d8bd",
          "sha256": "1d75ea3fbd413ce819f2d58b915a78c760eccced892e2d0d4616cb5a0d3ffadb"
        },
        "downloads": -1,
        "filename": "conda-suggest-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "69a13baefd66cf0ee49d41aaf6a6d8bd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5882,
        "upload_time": "2020-09-01T21:51:55",
        "upload_time_iso_8601": "2020-09-01T21:51:55.188643Z",
        "url": "https://files.pythonhosted.org/packages/2d/84/81be7f1fa5a1f714dc402ab581f590441b644c3a727577bf817ac8b19f0c/conda-suggest-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fbd5c8cf17195433102cd9c77b37eb7dde35184694a9cbb5457669e4771f4f18",
          "md5": "3b36a632c3e6392ab04425ac696513c1",
          "sha256": "0ed4408084dd33ed2ed046e1ff52e9877e26289d677d9036591a6e48cc6c77d5"
        },
        "downloads": -1,
        "filename": "conda-suggest-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3b36a632c3e6392ab04425ac696513c1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6272,
        "upload_time": "2020-09-08T19:25:26",
        "upload_time_iso_8601": "2020-09-08T19:25:26.330788Z",
        "url": "https://files.pythonhosted.org/packages/fb/d5/c8cf17195433102cd9c77b37eb7dde35184694a9cbb5457669e4771f4f18/conda-suggest-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fbd5c8cf17195433102cd9c77b37eb7dde35184694a9cbb5457669e4771f4f18",
        "md5": "3b36a632c3e6392ab04425ac696513c1",
        "sha256": "0ed4408084dd33ed2ed046e1ff52e9877e26289d677d9036591a6e48cc6c77d5"
      },
      "downloads": -1,
      "filename": "conda-suggest-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "3b36a632c3e6392ab04425ac696513c1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 6272,
      "upload_time": "2020-09-08T19:25:26",
      "upload_time_iso_8601": "2020-09-08T19:25:26.330788Z",
      "url": "https://files.pythonhosted.org/packages/fb/d5/c8cf17195433102cd9c77b37eb7dde35184694a9cbb5457669e4771f4f18/conda-suggest-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}