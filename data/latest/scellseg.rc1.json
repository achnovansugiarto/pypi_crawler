{
  "info": {
    "author": "Dejin Xun & Deheng Chen",
    "author_email": "xundejin@zju.edu.cn",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Scellseg \r\n\r\nA style-aware cell instance segmentation tool with pre-training and contrastive fine-tuning\r\n\r\n### **Description**<img src=\"./logo.svg\" width=\"160\" title=\"scellseg\" alt=\"scellseg\" align=\"right\" vspace = \"30\">\r\n\r\nWe proposed a \"pre-trained + fine-tuning\" pipeline for cell instance segmentation. To make Scellseg easy to use, we also developed a graphical user interface integrated with functions of annotation, fine-tuning and inference. Biologists can specialize their own cell segmentation model to conduct single-cell image analysis.\r\n\r\n### Install\r\n\r\nOperating system: It has been tested on Windows 10. Theoretically, it can work on any system that can run Python.\r\n\r\nPrograming language: Python.\r\n\r\nHardware: >= 8G memory, equipped with a CPU with Core i5 or above.\r\n\r\nOur Environment: Python --3.7.4, CUDA --10.1.243, GPU：Nvidia 2080Ti.\r\n\r\nBefore installation, please check whether you can use conda environment\r\n\r\n```\r\nconda create --name scellseg_env python=3.7\r\nactivate scellseg_env\r\npip install scellseg --default-timeout=10000\r\n```\r\n\r\nIf you get an \"Timeout error\", increase the number of --default-timeout and try again, for example:\r\n\r\n```\r\npip install scellseg --default-timeout=100000\r\n```\r\n\r\nAfter installing scellseg successfully, you can start the GUI through:\r\n\r\n```\r\nactivate scellseg_env\r\npython -m scellseg\r\n```\r\n\r\nIf you have a GPU device and \"Use GPU\" in GUI is disabled, you should check the version of \"torch\" and re-install the correct torch version suitable for your CUDA version (use \"nvcc -V\" to check your CUDA version), for example:\r\n\r\n```\r\nnvcc -V\r\npip install torch==1.7.1+cu101 -f https://download.pytorch.org/whl/cu101/torch_stable.html\r\n```\r\n\r\n### How to use GUI\t\r\n\r\n#### **1. Annotation**\r\n\r\n​\tBesides the  basic function of Cellpose,\r\n\r\n​\ta) You can modify the mask of instance directly in pixel level without deleting it and drawing it from scratch. You can check \"Edit mask\" or [E],  in this mode, you need firstly select a mask you wanted to edit, the selected mask will be highlighted, use right-click to add pixels and Shift+right-click to delete pixels\r\n\r\n​\tb) You can also take an overall look at of masks you have labelled with a list for each image, each index corresponds to a instance, you can pitch on and add notes to it, besides, the list can be saved and loaded next time\r\n\r\n​\tc) Drag a image/mask or a folder is supported, for a image, we autoload its parent directory, for a mask, we autoload its corresponding image and its parent directory. You can use [ctrl+←/→]  to cycle through images in current directory\r\n\r\n​\td) You can save the masks in \".png\" format\r\n\r\n#### 2. Fine-tuning\r\n\r\n​\ta) You should prepare your data in one folder with your experiment name like \"mito-20211116\", here we call it <b>parent folder</b>. Into this folder, it should contain a **shot subfolder** and a **query subfolder**. The shot subfolder contains images and the corresponding labelled masks, the query subfolder contains the images you want to segment. Into the shot subfolder, images should be named with **\"\\_img\" suffix** and masks should be named as **\"\\_masks\" suffix**. Except the suffix, the name of image and mask should be identical, for example, 001_img and 001_masks, notably, 001_masks should not be named as 001_cp_masks or 001_img_cp_masks (You should rename your masks name after annotation). Into the query subfolder, images should be named with **\"\\_img\" suffix**\r\n\r\n​\tb) Click \"Dataset path\" to choose the parent folder of your dataset, such as \"mito-20211116\"\r\n\r\n​\tc) Set the channel you want to segment, you can also provide a chan2 like nuclei channel for better learning\r\n\r\n​\td) Set the epoch you want conduct, the default value is 100, which was used in our paper. You can increase the number for adequate training\r\n\r\n​\te) Set the batch size according to your own GPU, the default value is 100, which was used in our paper\r\n\r\n​\tf) You can select different pre-trained model (\"Scellseg\", \"Cellpose\", or \"Hover\") and fine-tuning strategy (\"contrastive fine-tuning\" or \"classic fine-tuning\")\r\n\r\n​\tg) Click \"Start fine-tuning\" button to start fine-tuning. After fine-tuning, it will show the saved path of the model file in the bottom of display window (saved at a subfolder in parent folder named \"fine-tune\", mito-20211116/fine-tune\")\r\n\r\n#### 3. Inference\r\n\r\n​\ta) There are two modes for inference,  (1) run segmentation for image in window (2) batch segmentation\r\n\r\n​\tb) If you want to conduct batch segmentation, click \"Data path\" to choose the parent folder of your dataset, such as \"mito-20211116\" , and set the adequate batch size according to your own GPU\r\n\r\n​\tc) You can choose your own model file for inference, the default is the pre-trained Scellseg model file\r\n\r\n​\td) The default \"model match threshold\" is set to 0.4 and \"cellprob threshold\" is set to 0.5, which was used in our paper, you can change it for better performance\r\n\r\n​\te) Set the channel you want to segment, you can also provide a chan2 like nuclei channel for better learning, you should set the same setting as fine-tuning process\r\n\r\n​\tf) You can get each instance image after inference, click \"Data path\" to choose the query folder of your dataset, such as \"mito-20211116/query\", the output files will be saved at a subfolder in parent folder named \"single\", mito-20211116/single\"\r\n\r\n### **Declaration**\r\n\r\nOur pipeline is heavily based on [Cellpose](https://github.com/MouseLand/cellpose) and we also referred to the following projects:\r\nHover-Net: https://github.com/vqdang/hover_net\r\nAttention-Unet: https://github.com/ozan-oktay/Attention-Gated-Networks\r\n\r\n\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/cellimnet/scellseg-publish",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "scellseg",
    "package_url": "https://pypi.org/project/scellseg/",
    "platform": "",
    "project_url": "https://pypi.org/project/scellseg/",
    "project_urls": {
      "Homepage": "https://github.com/cellimnet/scellseg-publish"
    },
    "release_url": "https://pypi.org/project/scellseg/0.1.8/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "a specializable cell segmentation tool",
    "version": "0.1.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13075701,
  "releases": {
    "0.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ec21db683293845d6df1bc29c549b60931b5de7f8cfb321ad51f01cccd90c369",
          "md5": "91afbab4ff19bf54e1d8d954df743daf",
          "sha256": "084c5f1b12d0d97f0c3d0880ae579c1b7c4f7dea2203486bd11ba4c640a92d3c"
        },
        "downloads": -1,
        "filename": "scellseg-0.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "91afbab4ff19bf54e1d8d954df743daf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 101599098,
        "upload_time": "2022-03-04T02:12:38",
        "upload_time_iso_8601": "2022-03-04T02:12:38.929453Z",
        "url": "https://files.pythonhosted.org/packages/ec/21/db683293845d6df1bc29c549b60931b5de7f8cfb321ad51f01cccd90c369/scellseg-0.1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ec21db683293845d6df1bc29c549b60931b5de7f8cfb321ad51f01cccd90c369",
        "md5": "91afbab4ff19bf54e1d8d954df743daf",
        "sha256": "084c5f1b12d0d97f0c3d0880ae579c1b7c4f7dea2203486bd11ba4c640a92d3c"
      },
      "downloads": -1,
      "filename": "scellseg-0.1.8.tar.gz",
      "has_sig": false,
      "md5_digest": "91afbab4ff19bf54e1d8d954df743daf",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 101599098,
      "upload_time": "2022-03-04T02:12:38",
      "upload_time_iso_8601": "2022-03-04T02:12:38.929453Z",
      "url": "https://files.pythonhosted.org/packages/ec/21/db683293845d6df1bc29c549b60931b5de7f8cfb321ad51f01cccd90c369/scellseg-0.1.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}