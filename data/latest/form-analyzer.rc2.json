{
  "info": {
    "author": "Florian Fetz",
    "author_email": "florian.fetz@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Image Processing",
      "Topic :: Scientific/Engineering :: Information Analysis"
    ],
    "description": "# form-analyzer - A library that uses AWS Textract to automatically evaluate filled forms\n\n[![Build](https://github.com/Futsch1/form-analyzer/actions/workflows/build.yml/badge.svg)](https://github.com/Futsch1/form-analyzer/actions/workflows/build.yml)\n[![Documentation Status](https://readthedocs.org/projects/form-analyzer/badge/?version=latest)](https://form-analyzer.readthedocs.io/en/latest/?badge=latest)\n[![Coverage Status](https://coveralls.io/repos/github/Futsch1/form-analyzer/badge.svg?branch=main)](https://coveralls.io/github/Futsch1/form-analyzer?branch=main)\n[![Maintainability](https://api.codeclimate.com/v1/badges/743708a08f4e8fd7bf7e/maintainability)](https://codeclimate.com/github/Futsch1/form-analyzer/maintainability)\n\nPython package to analyze scanned questionnaires and forms with AWS Textract and convert the results to an XLSX.\n\nNo thorough Python programming abilities are required, but a basic understanding is needed.\n\n## Prerequisites\n\n- Install form-analyzer using pip\n\n```\npip install form-analyzer\n```\n\n- Get an AWS account and [create an access key](https://aws.amazon.com/premiumsupport/knowledge-center/create-access-key/)\n- If your scanned questionnaires are in PDF format, install the required tools\n  for [pdf2image](https://pypi.org/project/pdf2image/)\n\n## Example\n\nFor a comprehensive example, see the \n[example folder in this project](https://github.com/Futsch1/form-analyzer/tree/main/example)\n\n## Prepare questionnaires\n\nIn order to process your input data, the questionnaires need to be converted to a proper format.\nform-analyzer requires PNG files for the upload to AWS Textract. If your data is already in this\nformat, make sure that their lexicographic order corresponds to the number of pages in your form.\n\nExample:\n\n```\nForm1_Page1.png\nForm1_Page2.png\nForm1_Page3.png\nForm2_Page1.png\nForm2_Page2.png\nForm2_Page3.png\n```\n\n### Convert PDF files\n\nform-analyzer can convert PDF input files to properly named PNG files ready for upload. Each PDF\npage can optionally be post-processed by a custom function to split pages.\n\nCreate a Python script like this to convert single page PDF files (assuming that the PDFs are located\nin the folder \"questionnaires\":\n\n```python\nimport form_analyzer\n\nform_analyzer.pdf_to_image('questionnaires')\n```\n\nThe following example shows how to split a single PDF page into two images:\n\n```python\nimport form_analyzer\n\n\ndef one_page_to_two(_: int, image):\n    left = image.crop((0, 0, image.width // 2, image.height))\n    right = image.crop((image.width // 2, 0, image.width, image.height))\n\n    return [form_analyzer.ProcessedImage(left, '_1'), form_analyzer.ProcessedImage(right, '_2')]\n\n\nform_analyzer.pdf_to_image('questionnaires', image_processor=one_page_to_two)\n```\n\nThe argument image_processor specifies a function that receives the current PDF page number (starting with 0)\nand an [Image](https://pillow.readthedocs.io/en/stable/reference/Image.html#PIL.Image.Image) object.\nIt returns a list of form_analyzer.ProcessedImage objects that contain an Image object and a file name suffix.\n\nThe resulting images are stored in the same folder as the PDF source files.\n\n## AWS Textract\n\nThe converted images can now be processed by AWS Textract to extract the form data. You can either\nprovide your AWS access key and region as parameters or set them up according to\n[this manual](https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html).\n\nIt is also possible to upload the images to an AWS S3 bucket and analyze them from there. If that's\ndesired, pass the S3 bucket name and an optional sub folder.\n\nAssuming that the credentials are already set, this script will upload and process the data.\n\n```python\nimport form_analyzer\n\nform_analyzer.run_textract('questionnaires')\n```\n\nThe result data is saved as JSON files in the target folder. Before using AWS Textract, the\nfunction checks if result data is already present. If that is the case, the Textract call is skipped.\n\n## Form description\n\nIn order to convert your form to a meaningful Excel file, form-analyzer needs to know the expected\nform fields. A description has to be provided as a Python module.\n\nThis module needs to contain two variables:\n\n- form_fields: The list of form fields\n- keywords_per_page: A list of keywords to expect on each page\n\n### form_fields variable\n\nThis variable is a list of FormField objects, which each describes a single field in the form. Each\nFormField object consists of a title and a Selector object. The title is the column header in the Excel\nfile and the Selector defines the type of the form field and its location.\n\n**_Important_**:\nNote that the form description greatly affects the result of the form analyzing process. The AWS\nTextract process often has slight errors and does not yield 100% correct results. The form descriptions\nneeds to account for that and on the one hand provide a detailed description of where to look for\nform fields and on the other hand needs to keep search strings generic to help to detect the correct\nfield.\n\n#### Selectors\n\nSome selectors require a key and all require filter for initialization. The key is the label\nof the form field which is searched in the extracted form data. It is recommended to not\nindicate the full label but a unique part of it to compensate for potential detection errors.\n\n- SingleSelect: Describes a list of checkboxes where only one may be marked\n- MultiSelect: Describes a list of checkboxes where none, one or several may be marked\n- TextField: Describes a text input box or input line where free text can be entered\n- TextFieldWithCheckbox: Describes a text input field with an additional checkbox\n- Number: Special case of TextField where only numbers may be entered\n- Placeholder: Results in an empty column in the Excel file\n\nFor single and multi selects, additional and alternative text fields can be given. The \ncontent of the additional field is always added to the output and can be used to handle\noptional free text fields. The alternative text field is used when no selection is made.\nBoth additional and alternative fields can be either TextField, Number or \nTextFieldWithCheckbox.\n\nNote that all text matching will be done case-insensitive and with a certain fuzziness, so that\nno exact match is required.\n\nSee also [the documentation](https://form-analyzer.readthedocs.io/en/latest/selectors.html).\n\n#### Filters\n\nFilters restrict the extracted form fields to search for the current form field. The lower the number\nof potential extracted form fields, the higher the probability of correct results.\n\nFilters can be combined using the & (and) and | (or) operator.\n\n- Page: Restricts the search to a certain page (page numbers starting with 0, so 0 is the first page)\n- Pages: Restricts the search to a list of pages\n- Location: Restricts the search to a part of the page indicated by horizontal and vertical ranges as page fractions.\n- Selected: Restricts the search to fields which are selected checkboxes\n\nLocation filters apply to all selection possibilities for single and multi selects and to the label\nfor text and number fields.\n\nNote that when working with location filters and scanned form pages, the position of certain fields on\nthe page must be similar for each scan.\n\nSee also [the documentation](https://form-analyzer.readthedocs.io/en/latest/filters.html).\n\n#### Examples\n\n```python\nfrom form_analyzer.filters import *\nfrom form_analyzer.selectors import *\n\n# Single select on the first page with two options\nsingle_select = SingleSelect(['First option', 'Second option'], \n                             Page(0))\n\n# Multi select on the top half of the first page\nmulti_select = MultiSelect(['First option', 'Second option'],\n                           Page(0) & Location(vertical=(.0, .5)))\n\n# Text field on the upper left quarter of the first page\ntext_field = TextField('Field label',\n                       Page(0) & Location(horizontal=(.0, .5), vertical=(.0, .5)))\n\n# Single select on the lowest third of the second page or the top half of the third page\nsingle_select_2 = SingleSelect(['First option', 'Second option', 'Third option'],\n                               (Page(1) & Location(vertical=(.66, 1))) |\n                               (Page(2) & Location(vertical=(.0, .5))))\n```\n\n### Keywords per page\n\nThe variable keywords_per_page in the form description is used to validate that a correct form is \nbeing analyzed. It is a list of a list of strings. For each page, a list of strings can be given \nwhere at least one of them has to be found in the strings discovered by Textract on the page.\n\nIf the list is empty or empty for a single page, no validation is performed.\n\nExample\n\n```python\n# Will search for 'welcome' on the first page and for 'future' or 'past' on the second\nkeywords_per_page = [['welcome'], ['future', 'past']]\n```\n\n## Form analysis\n\nThe data returned from AWS Textract and the form description are the inputs for the final\nanalysis step that will try to locate all described form fields, get their value in the respective\nfilled forms and put this in an Excel file.\n\nTo run the analysis, use the following where the AWS Textract JSON files and PNGs are located\nin the folder \"questionnaires\" and a Python module \"my_form\" exists in the Python search path \nthat contains the form description (this should usually be the current folder, where a \"my_form.py\" is \nlocated). You can optionally pass the name of the resulting Excel file.\n\n```python\nimport form_analyzer\n\nform_analyzer.analyze('questionnaires', 'my_form', 'my_form_results')\n```\n\n### Results\n\nAfter analyzing, an Excel file is created. The first column always contains a link to the image of the \nfirst page of the form. Each uncertain field (meaning that there was some uncertainty during the \nanalysis and the result might be incorrect) is also linked to the image of the page where the field\nis located.\n\nUsually, it is required to manually check the results. The Excel file is not perfect and depending\non the complexity of the form, the quality of the inputs, the PDF quality etc. the file might contain\nerrors. The number of found uncertain fields is printed after the analysis and can be used as a coarse\nmeasure for the quality of the results.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/futsch1/form-analyzer",
    "keywords": "textract,AWS,form,questionnaire,xlsx,excel",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "form-analyzer",
    "package_url": "https://pypi.org/project/form-analyzer/",
    "platform": null,
    "project_url": "https://pypi.org/project/form-analyzer/",
    "project_urls": {
      "Documentation": "http://form-analyzer.rtfd.io",
      "Homepage": "https://github.com/futsch1/form-analyzer"
    },
    "release_url": "https://pypi.org/project/form-analyzer/0.1.1/",
    "requires_dist": [
      "boto3",
      "amazon-textract-caller",
      "amazon-textract-response-parser",
      "pdf2image",
      "openpyxl",
      "coverage ; extra == 'dev'",
      "sphinx ; extra == 'doc'",
      "myst-parser ; extra == 'doc'"
    ],
    "requires_python": ">=3.7",
    "summary": "Python package to analyze scanned questionnaires and forms with AWS Textract and convert the results to an XLSX.",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14730009,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "77d386cf2d2fb7c780c887598413742eeca8a9cfe9e1439084ccbe2d09c66618",
          "md5": "babae3156af4c106e8ed303ca2edc303",
          "sha256": "ddc5cff3742965ee1e31048da3410973c495307c7852700626e4695a8675e11b"
        },
        "downloads": -1,
        "filename": "form_analyzer-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "babae3156af4c106e8ed303ca2edc303",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 18563,
        "upload_time": "2022-07-31T14:35:50",
        "upload_time_iso_8601": "2022-07-31T14:35:50.245712Z",
        "url": "https://files.pythonhosted.org/packages/77/d3/86cf2d2fb7c780c887598413742eeca8a9cfe9e1439084ccbe2d09c66618/form_analyzer-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eeb470be375b4835586849091ba014acfe64c499fcdf3322f6f9132d1e721118",
          "md5": "934063d421bc57b88043342b70964ad4",
          "sha256": "e13388b934bff167ce105c8ad8ad3fecf67297a0fbbbbc33977871e90a221389"
        },
        "downloads": -1,
        "filename": "form-analyzer-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "934063d421bc57b88043342b70964ad4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 18144,
        "upload_time": "2022-07-31T14:35:52",
        "upload_time_iso_8601": "2022-07-31T14:35:52.229533Z",
        "url": "https://files.pythonhosted.org/packages/ee/b4/70be375b4835586849091ba014acfe64c499fcdf3322f6f9132d1e721118/form-analyzer-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fdff41e51e13848f6f9b11e928f30bf572e33f672a641b66ac448ee916156d50",
          "md5": "7d3711bbf7a75b4a4ea3c44fd2d17508",
          "sha256": "8153a85aef4b2172d3616780caa7c397fb7515c4e717ecc4afd49414dea3441d"
        },
        "downloads": -1,
        "filename": "form_analyzer-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7d3711bbf7a75b4a4ea3c44fd2d17508",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 19170,
        "upload_time": "2022-08-11T14:15:36",
        "upload_time_iso_8601": "2022-08-11T14:15:36.746210Z",
        "url": "https://files.pythonhosted.org/packages/fd/ff/41e51e13848f6f9b11e928f30bf572e33f672a641b66ac448ee916156d50/form_analyzer-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8409405c1e87ae1ca292989c808fc744b006b81fdeba31405f526ccbfdaff95d",
          "md5": "a0ba08f3ad77fd9705f4697b8be7511a",
          "sha256": "f9cc2bf03fb75ae75e14713531d32987502e04ed3cdf1c5831a2eb0e949d2867"
        },
        "downloads": -1,
        "filename": "form-analyzer-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a0ba08f3ad77fd9705f4697b8be7511a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 18623,
        "upload_time": "2022-08-11T14:15:37",
        "upload_time_iso_8601": "2022-08-11T14:15:37.971939Z",
        "url": "https://files.pythonhosted.org/packages/84/09/405c1e87ae1ca292989c808fc744b006b81fdeba31405f526ccbfdaff95d/form-analyzer-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fdff41e51e13848f6f9b11e928f30bf572e33f672a641b66ac448ee916156d50",
        "md5": "7d3711bbf7a75b4a4ea3c44fd2d17508",
        "sha256": "8153a85aef4b2172d3616780caa7c397fb7515c4e717ecc4afd49414dea3441d"
      },
      "downloads": -1,
      "filename": "form_analyzer-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7d3711bbf7a75b4a4ea3c44fd2d17508",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 19170,
      "upload_time": "2022-08-11T14:15:36",
      "upload_time_iso_8601": "2022-08-11T14:15:36.746210Z",
      "url": "https://files.pythonhosted.org/packages/fd/ff/41e51e13848f6f9b11e928f30bf572e33f672a641b66ac448ee916156d50/form_analyzer-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8409405c1e87ae1ca292989c808fc744b006b81fdeba31405f526ccbfdaff95d",
        "md5": "a0ba08f3ad77fd9705f4697b8be7511a",
        "sha256": "f9cc2bf03fb75ae75e14713531d32987502e04ed3cdf1c5831a2eb0e949d2867"
      },
      "downloads": -1,
      "filename": "form-analyzer-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "a0ba08f3ad77fd9705f4697b8be7511a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 18623,
      "upload_time": "2022-08-11T14:15:37",
      "upload_time_iso_8601": "2022-08-11T14:15:37.971939Z",
      "url": "https://files.pythonhosted.org/packages/84/09/405c1e87ae1ca292989c808fc744b006b81fdeba31405f526ccbfdaff95d/form-analyzer-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}