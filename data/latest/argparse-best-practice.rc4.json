{
  "info": {
    "author": "oneofthezombies",
    "author_email": "hunhoekim@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# argparse-best-practice\n\n```python\ndef best_practice_bool() -> None:\n    def default_false() -> None:\n        parser = ArgumentParser()\n        parser.add_argument('--default-false', action=BooleanOptionalAction, default=False)\n        parser.add_argument('--default-false-exist', action=BooleanOptionalAction, default=False)\n        parser.add_argument('--default-false-exist-with-no', action=BooleanOptionalAction, default=False)\n        args = parser.parse_args(['--default-false-exist',\n                                  '--no-default-false-exist-with-no'\n                                  ])\n        assert args.default_false == False\n        assert args.default_false_exist == True\n        assert args.default_false_exist_with_no == False\n    default_false()\n\n\n    def default_true() -> None:\n        parser = ArgumentParser()\n        parser.add_argument('--default-true', action=BooleanOptionalAction, default=True)\n        parser.add_argument('--default-true-exist', action=BooleanOptionalAction, default=True)\n        parser.add_argument('--default-true-exist-with-no', action=BooleanOptionalAction, default=True)\n        args = parser.parse_args(['--default-true-exist',\n                                  '--no-default-true-exist-with-no'\n                                  ])\n        assert args.default_true == True\n        assert args.default_true_exist == True\n        assert args.default_true_exist_with_no == False\n    default_true()\n\n\ndef best_practice_string() -> None:\n    def default_string() -> None:\n        parser = ArgumentParser()\n        parser.add_argument('--default-string', default='a')\n        parser.add_argument('--default-string-exist', default='a')\n        args = parser.parse_args(['--default-string-exist', 'b'])\n        assert args.default_string == 'a'\n        assert args.default_string_exist == 'b'\n    default_string()\n\n\n    def my_string_validation() -> None:\n        class MyStringValidationError(Exception):\n            def __init__(self, value: str) -> None:\n                self.value = value\n                super().__init__()\n\n\n        class MyStringValidator(Action):\n            def __call__(self, \n                         parser: ArgumentParser, \n                         namespace: Namespace, \n                         values: Union[Text, Sequence[Any], None], \n                         option_string: Optional[Text]) -> None:\n                if values.islower():\n                    raise MyStringValidationError(values)\n                setattr(namespace, self.dest, values)\n\n\n        parser = ArgumentParser()\n        parser.add_argument('--my-string-validation', action=MyStringValidator)\n        try:\n            args = parser.parse_args(['--my-string-validation', 'a'])\n        except MyStringValidationError as e:\n            assert MyStringValidationError('a').value == e.value\n        else:\n            assert False\n        args = parser.parse_args(['--my-string-validation', 'A'])\n        assert args.my_string_validation == 'A'\n    my_string_validation()\n\n\ndef best_practice_number() -> None:\n    def default_number() -> None:\n        parser = ArgumentParser()\n        parser.add_argument('--default-number', type=int, default=0)\n        parser.add_argument('--default-number-exist', type=int, default=0)\n        args = parser.parse_args(['--default-number-exist', '1'])\n        assert args.default_number == 0\n        assert args.default_number_exist == 1\n    default_number()\n\n\n    def my_number_validation() -> None:\n        class MyNumberValidationError(Exception):\n            def __init__(self, value: int) -> None:\n                self.value = value\n                super().__init__()\n\n\n        class MyNumberValidator(Action):\n            def __call__(self, \n                         parser: ArgumentParser, \n                         namespace: Namespace, \n                         values: Union[Text, Sequence[Any], None], \n                         option_string: Optional[Text]) -> None:\n                if 0 > values:\n                    raise MyNumberValidationError(values)\n                setattr(namespace, self.dest, values)\n\n\n        parser = ArgumentParser()\n        parser.add_argument('--my-number-validation', action=MyNumberValidator, type=int, default=0)\n        try:\n            args = parser.parse_args(['--my-number-validation', '-1'])\n        except MyNumberValidationError as e:\n            assert MyNumberValidationError(-1).value == e.value\n        else:\n            assert False\n    my_number_validation()\n\n\ndef best_practice_list() -> None:\n    def default_empty_list() -> None:\n        parser = ArgumentParser()\n        parser.add_argument('--default-empty-list', action='extend', nargs='+', default=[])\n        parser.add_argument('--default-empty-list-exist', action='extend', nargs='+', default=[])\n        args = parser.parse_args(['--default-empty-list-exist', 'a', 'b'])\n        assert args.default_empty_list == []\n        assert args.default_empty_list_exist == ['a', 'b']\n    default_empty_list()\n\n\n    def my_unique_list() -> None:\n        class MyUniqueListCreator(Action):\n            def __call__(self, \n                         parser: ArgumentParser, \n                         namespace: Namespace, \n                         values: Union[Text, Sequence[Any], None], \n                         option_string: Optional[Text]) -> None:\n                default = getattr(namespace, self.dest) if hasattr(namespace, self.dest) else []\n                default.extend(values)      \n                new_value = list(set(default))\n                new_value.sort()      \n                setattr(namespace, self.dest,  new_value)\n\n\n        parser = ArgumentParser()    \n        parser.add_argument('--my-unique-list', action=MyUniqueListCreator, nargs='+', default=['a'])\n        args = parser.parse_args(['--my-unique-list', 'a', 'b'])\n        assert args.my_unique_list == ['a', 'b']\n    my_unique_list()\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/oneofthezombies/argparse-best-practice",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "argparse-best-practice",
    "package_url": "https://pypi.org/project/argparse-best-practice/",
    "platform": "",
    "project_url": "https://pypi.org/project/argparse-best-practice/",
    "project_urls": {
      "Homepage": "https://github.com/oneofthezombies/argparse-best-practice"
    },
    "release_url": "https://pypi.org/project/argparse-best-practice/0.1.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "python argparse best practice.",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9765088,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "446a576b2074a7720eb1e126c3da619ba45b8ceecb7ce66b9c86d4adfbdd9821",
          "md5": "6ea7d735cbcdabcc30b5c7b1cd3182b8",
          "sha256": "376473d63e3987b1d3c5a76aeb522ea9be65b6de3c5e7d4d111a2794083effc9"
        },
        "downloads": -1,
        "filename": "argparse_best_practice-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6ea7d735cbcdabcc30b5c7b1cd3182b8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5919,
        "upload_time": "2021-03-14T08:20:49",
        "upload_time_iso_8601": "2021-03-14T08:20:49.201664Z",
        "url": "https://files.pythonhosted.org/packages/44/6a/576b2074a7720eb1e126c3da619ba45b8ceecb7ce66b9c86d4adfbdd9821/argparse_best_practice-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "05735016ac891a0c4cb9c0c2c42f01fcc1c41cb7eb8b198ee7d6993d59059528",
          "md5": "b42d13d72572bdbf139d6b891ce045eb",
          "sha256": "0816f560e80ed0ca6fc85cc41255852e6e823f8357f3ab40df2764eae8664b3b"
        },
        "downloads": -1,
        "filename": "argparse-best-practice-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b42d13d72572bdbf139d6b891ce045eb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3587,
        "upload_time": "2021-03-14T08:20:50",
        "upload_time_iso_8601": "2021-03-14T08:20:50.835746Z",
        "url": "https://files.pythonhosted.org/packages/05/73/5016ac891a0c4cb9c0c2c42f01fcc1c41cb7eb8b198ee7d6993d59059528/argparse-best-practice-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ff29cfcca366fa81742cb3ece1162cdc311a8702ff85e9ab087c843e847d8be0",
          "md5": "bdb9c1dc959679e273777a3a30793db7",
          "sha256": "d57e860f3ce7651296b8cfc316fec9172d2829110be7f79df08b5e7d6fbe4ac5"
        },
        "downloads": -1,
        "filename": "argparse_best_practice-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bdb9c1dc959679e273777a3a30793db7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5919,
        "upload_time": "2021-03-14T08:26:49",
        "upload_time_iso_8601": "2021-03-14T08:26:49.944234Z",
        "url": "https://files.pythonhosted.org/packages/ff/29/cfcca366fa81742cb3ece1162cdc311a8702ff85e9ab087c843e847d8be0/argparse_best_practice-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4ce48fd3ed008f8b0b7a591c48820e531631c180c0959a9de537fbc11141f1ab",
          "md5": "3e7f5dbcb3474effd6a3a9198d5a56df",
          "sha256": "68e1af20655bb9169a7942ebb950e72b2901169ff38574328725a3b6a97fd5bd"
        },
        "downloads": -1,
        "filename": "argparse-best-practice-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3e7f5dbcb3474effd6a3a9198d5a56df",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3588,
        "upload_time": "2021-03-14T08:26:51",
        "upload_time_iso_8601": "2021-03-14T08:26:51.288911Z",
        "url": "https://files.pythonhosted.org/packages/4c/e4/8fd3ed008f8b0b7a591c48820e531631c180c0959a9de537fbc11141f1ab/argparse-best-practice-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e5152fbb2889e4203a00eb8fb99aeaa14591ff73193a7c83b4a31c42212f25fc",
          "md5": "af2fdbbb4d09fe0ce99c43357741bc7d",
          "sha256": "a724456e9f201b4da6518026f3605647b4b8115fdc38ddba8b7fa0fe501e2584"
        },
        "downloads": -1,
        "filename": "argparse_best_practice-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "af2fdbbb4d09fe0ce99c43357741bc7d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5921,
        "upload_time": "2021-03-14T08:46:50",
        "upload_time_iso_8601": "2021-03-14T08:46:50.127263Z",
        "url": "https://files.pythonhosted.org/packages/e5/15/2fbb2889e4203a00eb8fb99aeaa14591ff73193a7c83b4a31c42212f25fc/argparse_best_practice-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e40391c4646744d52ef4b7b226bf9f481e1b7115d9e3b1296327b17d8118f88d",
          "md5": "b215bd6fb953a45983e199d249de6b3c",
          "sha256": "eb9026792f077c77ebd06a2670414bd29e9f25d4c127d31c0efe47e9d02d4d72"
        },
        "downloads": -1,
        "filename": "argparse-best-practice-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b215bd6fb953a45983e199d249de6b3c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3570,
        "upload_time": "2021-03-14T08:46:51",
        "upload_time_iso_8601": "2021-03-14T08:46:51.494199Z",
        "url": "https://files.pythonhosted.org/packages/e4/03/91c4646744d52ef4b7b226bf9f481e1b7115d9e3b1296327b17d8118f88d/argparse-best-practice-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "32fc0010cc01e74847ee557ba591150eac9bd026a577dbbd52ffbea17336ead1",
          "md5": "dc1e15418db410b91924105040ea7494",
          "sha256": "bdef2bf177081b7b6e3e666e320eee8b944b0dd2fbc7f68505e2c7706ed2b715"
        },
        "downloads": -1,
        "filename": "argparse_best_practice-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dc1e15418db410b91924105040ea7494",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6154,
        "upload_time": "2021-03-14T08:55:14",
        "upload_time_iso_8601": "2021-03-14T08:55:14.187535Z",
        "url": "https://files.pythonhosted.org/packages/32/fc/0010cc01e74847ee557ba591150eac9bd026a577dbbd52ffbea17336ead1/argparse_best_practice-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1c7b1cd9290719247684495103c30817bc551a40bbff7986f413a24783298f2b",
          "md5": "519874d4bb07204367a05e1c521cead1",
          "sha256": "a32ddedcee8351d6cdbf71d0eb39d6c2dcc30633b63f683d71b8c1fe042b9e59"
        },
        "downloads": -1,
        "filename": "argparse-best-practice-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "519874d4bb07204367a05e1c521cead1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3627,
        "upload_time": "2021-03-14T08:55:15",
        "upload_time_iso_8601": "2021-03-14T08:55:15.432002Z",
        "url": "https://files.pythonhosted.org/packages/1c/7b/1cd9290719247684495103c30817bc551a40bbff7986f413a24783298f2b/argparse-best-practice-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "32fc0010cc01e74847ee557ba591150eac9bd026a577dbbd52ffbea17336ead1",
        "md5": "dc1e15418db410b91924105040ea7494",
        "sha256": "bdef2bf177081b7b6e3e666e320eee8b944b0dd2fbc7f68505e2c7706ed2b715"
      },
      "downloads": -1,
      "filename": "argparse_best_practice-0.1.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "dc1e15418db410b91924105040ea7494",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 6154,
      "upload_time": "2021-03-14T08:55:14",
      "upload_time_iso_8601": "2021-03-14T08:55:14.187535Z",
      "url": "https://files.pythonhosted.org/packages/32/fc/0010cc01e74847ee557ba591150eac9bd026a577dbbd52ffbea17336ead1/argparse_best_practice-0.1.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1c7b1cd9290719247684495103c30817bc551a40bbff7986f413a24783298f2b",
        "md5": "519874d4bb07204367a05e1c521cead1",
        "sha256": "a32ddedcee8351d6cdbf71d0eb39d6c2dcc30633b63f683d71b8c1fe042b9e59"
      },
      "downloads": -1,
      "filename": "argparse-best-practice-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "519874d4bb07204367a05e1c521cead1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3627,
      "upload_time": "2021-03-14T08:55:15",
      "upload_time_iso_8601": "2021-03-14T08:55:15.432002Z",
      "url": "https://files.pythonhosted.org/packages/1c/7b/1cd9290719247684495103c30817bc551a40bbff7986f413a24783298f2b/argparse-best-practice-0.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}