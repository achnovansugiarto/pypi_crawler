{
  "info": {
    "author": "alichinese",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3"
    ],
    "description": "总体介绍\n^^^^^^^^\n\noebuild是openEuler Embedded孵化的一个开源项目，是为了辅助开发openEuler\nEmbedded项目而衍生的辅助开发工具，是openEuler\nEmbedded项目健康运行的一个催化剂，目前oebuild主要实现了主体框架，业务只涵盖了构建，将来会涉及到CICD，本地测试，云构建等等，oebuild的使用将不仅仅限于命令行窗口，还会搭载上层IDE来使用。yocto实现了构建的灵活性，但是做应用的定制与实现需要有较高的学习成本与环境成本，oebuild将完全摒弃这些开发羁绊，解放你的双手，只需要几个指令，即可获得你要的应用镜像，你不需要去下载代码，不需要去准备编译环境，如果你要的应用不是特有定制的，甚至不要求你去学习如何修改bb文件，一切都可以交给oebuild来做，而oebuild需要的，仅仅是一个网络而已。对，就这么简单！！！\n\n如何编译一个标准镜像\n^^^^^^^^^^^^^^^^^^^^\n\n这里将介绍如何使用oebuild来进行基于openEuler\nEmbedded项目编译标准的aarch64的qemu应用\n\n安装python3和pip\n''''''''''''''''\n\noebuild由python语言编写而成，通过pip命令来完成安装，python3与pip的安装会根据运行系统的不同而不同，如果时ubuntu类系统，则通过如下命令安装：\n\n::\n\n   apt-get install python3 python3-pip\n\n如果是centos，则通过如下命令安装：\n\n::\n\n   yum install python3 python3-pip\n\n如果时suse，则通过如下命令安装：\n\n::\n\n   zepper install python3 python3-pip\n\n注1：由于版本或名称可能会有所不同，因此在各系统安装python3或pip时，请根据实际环境来安装，例如：有些系统会默认python即python3，有些系统则需要使用python-is-python3包来安装。\n\n注2：如果该系统没有pip包，则可以通过离线方式来安装，预先下载pip包，然后再通过python安装，通过如下命令来完成pip的安装：\n\n::\n\n   curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py   # 下载安装脚本\n   python get-pip.py   # python is python3\n\n下载oebuild.wheel\n'''''''''''''''''\n\n安装完pip后则可以通过以下命令来完成oebuild的安装\n\n::\n\n   pip install oebuild\n\n或者点击\\ `该地址 <https://gitee.com/alichinese/oebuild-bin>`__\\ 进入oebuild二进制仓，在该仓下有最新的二进制包，运行以下命令来完成oebuild的安装\n\n::\n\n   pip install <oebuild.wheel>\n\noebuild会依赖一些第三方库辅助运行，因此相关的第三方库也会直接被安装，如果在安装过程中显示错误，或报第三方库安装请求失败等，请再次重新运行安装oebuild的命令即可。\n\n注：\n如果安装在安装oebuild时是以root用户执行，则在安装后可以直接运行，如果是以普通用户安装的，则需要注意将普通用户执行路径添加到环境变量中，可以参考以下方式来完成添加：\n\n1，以普通用户身份打开.bashrc\n\n::\n\n   cd ~ && vim .bashrc\n\n2,\n在文件末尾查看是否将命令执行路径添加到环境变量中，该路径一般为\\ ``/home/<user>/.local/bin``,如果没有，则将以下语句添加到文件末尾\n\n::\n\n   export PATH=/home/<user>/.local/bin:$PATH\n\n在以上命令行中，\\ ``<user>``\\ 表示是你此时的用户名，如果不确定，则可以通过执行\\ ``whoami``\\ 来确定\n\n3，在添加完成后保存退出，vim编辑板的保存推出按键为：先按\\ ``esc``\\ ，再按\\ ``shift + :``,\n最后输入\\ ``wq``\\ 然后按回车键即可\n\n4，退出后还需要刷新以下环境变量，执行以下命令完成环境变量的刷新\n\n::\n\n   source ~/.bashrc\n\n这样你就可以使用oebuild这个工具了，试着执行一下\\ ``oebuild -h``\\ ，看看能否显示oebuild的帮助信息\n\n初始化oebuild目录\n'''''''''''''''''\n\n运行如下命令完成oebuild的初始化工作：\n\n::\n\n   oebuild init <directory>\n\n该操作会初始化oebuild的目录，\\ ``<directory>``\\ 表示要初始化目录的名称\n\n注：由于oebuild的运行整体依赖docker环境的运行，因此，如果你本地没有安装docker应用，则请按照oebuild给出的提示进行操作，或者按以下给出的方式完成docker的安装\n\n1，确定你本机的系统类型，这里以ubuntu为例讲解，执行以下命令完成docker的安装\n\n::\n\n   sudo apt install docker docker.io -y\n\n2, 添加docker用户组\n\n::\n\n   sudo groupadd docker\n\n3, 将本用户添加到docker组内\n\n::\n\n   sudo usermod -a -G docker $(whoami)\n\n4, 重新启动docker\n\n::\n\n   sudo systemctl-reload && systemctl restart docker \n\n5, 修改docker.sock读写权限\n\n::\n\n   sudo chmod o+rw /var/run/docker.sock\n\n其他操作系统请参考ubuntu方式进行\n\n更新oebuild运行环境\n'''''''''''''''''''\n\n运行如下命令来完成初期环境的准备工作：\n\n::\n\n   oebuild update\n\n更新工作主要有两点：一，pull相关的运行容器镜像；二，从gitee上下载yocto-meta-openeuler仓代码，如果本地没有openeuler相关容器，则在这一步执行会比较漫长，请耐心等待。\n\n创建编译配置文件\n''''''''''''''''\n\n运行如下命令来产生编译配置文件：\n\n::\n\n   oebuild generate\n\n默认配置文件对应的镜像是aarch64标准镜像\n\n执行构建操作\n''''''''''''\n\n执行如下命令会进入镜像构建程序：\n\n::\n\n   oebuild bitbake openeuler-image\n\n请耐心等待20分钟，你就可以得到一个标准的openEuler Embedded\naarch64架构的镜像\n\n命令介绍\n^^^^^^^^\n\noebuild init\n''''''''''''\n\n目录初始化指令，主要用于初始化oebuild项目目录，运行该指令在后面需要跟要初始化的目录名，如下：\n\n::\n\n   oebuild init [directory] [-u yocto_remote_url] [-b branch]\n\ndirectory:\n表示要初始化的目录名称（注意：我们无法在已经初始化的目录内再次执行初始化操作）\n\nyocto_remote_url：yocto-meta-openeuler的remote远程链接\n\nbranch：yocto-meta-openeuler的分支\n\n（注意：oebuild在执行构建任务时是依赖已经适配oebuild的yocto-meta-openeuler的仓的）\n\n例如初始化demo目录只需要执行如下命令：\n\n::\n\n   oebuild init demo\n\ninit命令执行后主要执行两个任务：一是创建src源码目录，创建.oebuild目录，拷贝config配置文件到.oebuild，二是如果设置了-u或-b参数，则对config文件进行相应的修改\n\n初始化目录后demo的目录结构如下：\n\n::\n\n   .oebuild\n       config\n   src\n\nsrc：该目录用于存放跟编译相关的源码\n\n.oebuild：目录用于存放全局性配置文件，在oebuild执行初始化后，会看到有一个config配置文件，该配置文件将在搭建编译基础环境时应用到。\n\noebuild update\n''''''''''''''\n\n基础环境更新指令，在执行初始化目录指令后，在执行构建环节之前必须要先执行该命令。\n\n::\n\n   oebuild update [-t docker_tag] [-l list] [-i ignore] [-e enable]\n\n-t: 指更新哪个tag的容器\n\n-l: 表示列出可选资源列表，目前只有docker这一项\n\n-i:\n表示在更新时忽略哪一项，可选的有docker与meta，docker代表容器镜像，meta代表yocto-meta-openeuler仓\n\n-e: 表示在更新时使能哪一项，可选范围与解释同上\n\n执行更新操作如下命令：\n\n::\n\n   oebuild update\n\noebuild执行构建有两个必要的前提，一是构建需要的容器，二是主构建仓（yocto-meta-openeuler）。所以更新命令主要以这两部分展开\n\n另外，如果我们有自己的oebuild适配仓，可以在\\ ``config``\\ 配置文件中修改（该文件在\\ ``<workspace>/.oebuild``\\ 目录下），如果已经先执行过更新操作，然后再次执行\\ ``oebuild update``\\ 会将原有的\\ ``yocto-meta-openeuler``\\ 做备份，将在工作空间根目录下创建yocto-bak备份目录，然后将备份后的\\ ``yocto-meta-openeuler``\\ 移动到该目录。更改基础仓在config中的如下字段修改：\n\n::\n\n   basic_repo:\n     yocto_meta_openeuler:\n       path: yocto-meta-openeuler\n       remote_url: https://gitee.com/openeuler/yocto-meta-openeuler.git\n       branch: master\n\nbasic_repo与yocto-meta-openeuler是两个key键，不可以更改，remote_url与branch可以更改成自己已经适配的\\ ``yocto-meta-openeuler``\\ 仓的参数\n\n注：如果我们不输入任何参数，即直接执行\\ ``oebuild update``\\ ，则默认更新容器镜像和基础仓\n\noebuild generate\n''''''''''''''''\n\n创建配置文件指令，而该命令就是用来产生配置文件的。\n\n::\n\n   oebuild generate [-p platform] [-f features] [-t toolchain_dir] [-d build_directory] [-l list]\n\n-p：cpu类型参数，全称\\ ``platform``\\ ，生成配置文件需要的一个参数，默认为aarch64-std\n\n-f：特性参数，全称\\ ``feature``\\ ，生成配置文件需要的一个参数，没有默认值\n\n-t：外部编译链参数，全称\\ ``toolchain_dir``\\ ，生成配置文件需要的一个参数，没有默认值，该值表示如果我们不需要系统提供的交叉编译链而选择自己的交叉编译链，则可以选择该参数。\n\n-d：初始化的编译目录，如果不设置该参数，则初始化的编译目录和-p参数保持一致\n\n-l:\nlist参数，有两个可选范围，platform和feature，platform则会列出支持的platform列表，feature则会列出支持的feature列表\n\noebuild在构建时依赖compile.yaml配置文件来完成构建操作，创建配置文件指令已经属于构建指令内容，该操作将会检查\\ ``yocto-meta-openeuler``\\ 是否适配了oebuild，检查是否适配的规则便是是否在\\ ``yocto-meta-openeuler``\\ 根目录创建了\\ ``.oebuild``\\ 隐藏目录，而\\ ``-p``\\ 则会解析\\ ``.oebuild/platform``\\ 下相应的平台配置文件，\\ ``-f``\\ 参数则会解析\\ ``.oebuild/feature``\\ 下相应的配置文件，该参数是可以多值传入的，例如如下范例：\n\n::\n\n   oebuild generate -p aarch64-std -f systemd -f openeuler-qt\n\n则生成的构建配置文件会涵盖\\ ``systemd openeuler-qt``\\ 两者的特性\n\n最终会在编译目录下（在执行完\\ ``oebuild generate``\\ 后按提示给出的路径即为编译目录）生成构建配置文件\\ ``compile.yaml``,关于该配置文件的详细介绍请参考配置文件介绍中的\\ ``compile.yaml``\\ 。在下一步的构建流程会解析该配置文件，在此之前，用户可以根据自身特定场景环境来修改配置文件，因为按该\\ ``oebuild generate``\\ 指令生成的配置文件仅算作一个参考模板，目的是给用户一个最基本的模板参考用，减少用户学习的成本，使用户能够快速上手。\n\noebuild bitbake\n'''''''''''''''\n\n构建指令，该指令会解析\\ ``compile.yaml``\\ (通过\\ ``oebuild generate``\\ 指令生成的)，然后完成构建环境的初始化工作。该命令参数如下：\n\n-h：帮助命令，通过执行\n\n::\n\n   oebuild bitbake -h\n\n来获取帮助\n\n一般来说，启动后的容器挂在的目录映射关系如下：\n\n::\n\n   <workspace>/src:/usr1/openeuler/src\n   <workspace>/build/:/usr1/openeuler/build\n\n如果在\\ ``compile.yaml``\\ 中有\\ ``toolchain_dir``\\ 参数，即有用户自定义外部工具链，则会增加一个挂载目录，如下：\n\n::\n\n   <toolchain_dir>：/usr1/openeuler/native_gcc\n\noebuild upgrade\n'''''''''''''''\n\n在线升级指令，该指令会请求远程oebuild版本信息，通过和本地oebuild版本对比来判断是否进行升级\n\n由于oebuild二进制包存放在gitee仓库中，因此oebuild在升级时会先克隆最新的二进制仓到用户根目录，并以一个随机文件名命名，然后执行\\ ``sudo pip install <oebuild*.whl>``\\ 来完成升级，在这之中会要求用户输入root密码，在完成升级后会自动删除oebuild二进制包\n\n配置文件介绍\n^^^^^^^^^^^^\n\noebuild在生成后有多个配置文件，每个配置文件的作用域不同，下面将介绍各配置文件存放位置以及内容\n\nconfig\n''''''\n\noebuild在外围环境的配置文件,该配置文件存放在oebuild项目根目录下的.oebuild目录中，该配置文件结构如下：\n\n::\n\n   docker:\n     repo_url: swr.cn-north-4.myhuaweicloud.com/openeuler-embedded/openeuler-container\n     tag_map:\n       openEuler-22.09: '22.09'\n       openEuler-22.03-lts-sp1: 22.03-lts-sp1\n       master: latest\n   basic_repo:\n     yocto_meta_openeuler:\n       path: yocto-meta-openeuler\n       remote_url: https://gitee.com/openeuler/yocto-meta-openeuler.git\n       branch: master\n\n**docker**:\n表示构建容器相关信息，在该字段下面所列的容器镜像，在执行\\ ``oebuild update``\\ 后会下载相应的容器\n\n​ repo_url: 表示openEuler Embedded的docker远程仓地址\n\n​ tag_map: 表示每个openEuler Embedded版本对用的docker构建容器tag\n\n**basic_repo**:表示基础的repo仓，顾名思义，表示在构建之前是作为底座的角色存在的，在执行\\ ``oebuild update``\\ 时会解析config配置文件，然后下载相应的构建代码仓\n\n​ yocto-meta-openeuler: 目前oebuild唯一的基础仓\n\n​ path: 该仓下载的路径名称\n\n​ remote_url: 该仓的远程地址\n\n​ branch: 该仓的分支\n\n.env\n''''\n\n编译目录配置文件结构如下：\n\n::\n\n   container:\n       remote: xxxxxxxxxxxx\n       branch: xxxxxxxxxxxx\n       short_id: xxxxxxxxxx\n       volumns:\n       - /xxxxxxxxxxx\n       - /xxxxxxxxxxx\n\ncontainer:表示容器相关配置信息\n\n​ remote: 表示\\ ``yocto-meta-openeuler``\\ 远程url\n\n​ branch: 表示\\ ``yocto-meta-openeuler``\\ 分支信息\n\n​ short_id: 表示容器ID\n\n​ volumns: 表示容器挂在的目录映射\n\noebuild在执行构建过程中，会解析\\ ``.env``\\ 配置文件，通过对比环境中的其他参数确定是否重新创建一个新的容器还是启用旧容器，比对的内容包括（remote，branch，volumns)只有这三个参数与要构建的对应参数一致，才会继续拉起旧容器，否则就会创建一个新的容器。另外oebuild也会检查设置的short_id对用的容器是否存在，不存在也会创建一个新的容器。在创建新的容器后，新的配置信息会重新写入到\\ ``.env``\\ 中\n\ncompile.yaml\n''''''''''''\n\n构建配置文件，该配置文件结构如下：\n\n::\n\n   platform: aarch64-std\n   machine: qemu-aarch64\n   toolchain_type: EXTERNAL_TOOLCHAIN_aarch64\n   sdk_dir:\n   toolchain_dir:\n   repos:\n     yocto-poky:\n       url: https://gitee.com/openeuler/yocto-poky.git\n       path: yocto-poky\n       refspec: openEuler-22.09\n\n     yocto-meta-openembedded:\n       url: https://gitee.com/openeuler/yocto-meta-openembedded.git\n       path: yocto-meta-openembedded\n       refspec: dev_hardknott\n\n     yocto-meta-ros:\n       url: https://gitee.com/openeuler/yocto-meta-ros.git\n       path: yocto-meta-ros\n       refspec: dev_hardknott\n   local_conf: |\n   - xxx\n   - xxx\n   layers: \n   - xxx\n   - xxxx\n\nplatform：表示cpu架构，\n\nmachine：表示机器类型\n\ntoolchain_type: 表示编译链类型\n\nsdk_dir: 保留字段\n\ntoolchain_dir：表示自定义外部编译链路径，如果在\\ ``oebuild generate``\\ 设置了该参数\\ ``-t``\\ ，则会在\\ ``compile.yaml``\\ 存在该字段\n\nrepos: 表示在初始化构建环境时需要用到的仓\n\n​ url: 表示仓的远程地址\n\n​ path: 表示仓在本地的地址\n\n​ refspec:表示仓的版本分支\n\nlocal_conf：local.conf替换内容，该值在oebuild执行完oe_init后将替换\\ ``build/conf/local.conf``\\ 中匹配到的内容\n\nlayers:\nmeta层，该值在oebuild执行完oe_init后将通过调用\\ ``bitbake-layers add-layer``\\ 来添加meta层\n\n开发者帮助\n^^^^^^^^^^\n\noebuild项目欢迎广大爱好开发者参与贡献oebuild的发展，为了使开发者更快更好的参与到oebuild的开发工作中来，我们专门写了如下指导。\n\noebuild目录介绍\n'''''''''''''''\n\n打开oebuild仓我们可以看到，oebuild一级目录有如下内容：\n\n::\n\n   docs\n   src\n   .gitignore\n   MANIFEST.in\n   README.md\n   setup.py\n\ndocs：文档目录，该目录用于存放关于oebuild的介绍性信息\n\nsrc：核心源码目录，我们真正运行oebuild的核心源码就存放在这里，后续介绍关于参与开发oebuild的详细流程将会详细介绍该目录内容\n\n.gitignore：git提交忽略的文件，在该文件中通过设置的内容可以在git提交时自动忽略\n\nMANIFEST.in：该文件为pip在打包时包含额外文件的配置文件，在该文件中的内容将在执行python打包时按规则进行包含\n\nREADME.md：简要介绍性文件\n\nsetup.py：python打包入口文件 ，我们最终要打包wheel包就要通过该文件来完成\n\n如何使用setup.py进行调试或打包\n''''''''''''''''''''''''''''''\n\n在我们完成相关的开发性工作并进行调试时，将通过setup.py内的相关设置来完成该工作\n\n打开setup.py文件，我们可以看到其内容如下：\n\n::\n\n   # Copyright 2018 Open Source Foundries Limited.\n   # Copyright (c) 2020, Nordic Semiconductor ASA\n   #\n   # SPDX-License-Identifier: Apache-2.0\n\n   import os\n\n   import setuptools\n\n   SCRIPT_DIR = os.path.dirname(os.path.realpath(__file__))\n   os.chdir(SCRIPT_DIR)\n\n   with open('README.md', 'r') as f:\n       long_description = f.read()\n\n   with open('src/oebuild/version.py', 'r') as f:\n       __version__ = None\n       exec(f.read())\n       assert __version__ is not None\n\n   version = os.environ.get('OEBUILD_VERSION', __version__)\n\n   setuptools.setup(\n       name='oebuild',\n       version=version,\n       author='alichinese',\n       author_email='',\n       description='',\n       long_description=long_description,\n       # http://docutils.sourceforge.net/FAQ.html#what-s-the-official-mime-type-for-restructuredtext-data\n       long_description_content_type=\"text/x-rst\",\n       url='',\n       packages=setuptools.find_packages(where='src'),\n       package_dir={'': 'src'},\n       include_package_data=True,\n       classifiers=[\n           'Programming Language :: Python :: 3',\n           'License :: OSI Approved :: Apache Software License',\n           'Operating System :: POSIX :: Linux',\n       ],\n       install_requires=[\n           'setuptools',\n           'packaging',\n           'PyYaml',\n           'docker',\n           'GitPython',\n           'colorama',\n           'ruamel.yaml'\n       ],\n       python_requires='>=3.8',\n       entry_points={'console_scripts': ('oebuild = oebuild.app.main:main',)},\n   )\n\n可以看到引入的模块儿有\\ ``setuptools``,这个是打包的核心模块儿，关于其他的介绍我们暂且不管，因为对于开发者来说几乎没改动，这里我们着重介绍以下\\ ``install_requires``\\ ，该设置从字面意思理解就是依赖的必要安装，也就是说oebuild运行要依赖的第三方库，如果我们在后续的oebuild开发过程中有一些其他库的依赖，则需要在这里添加。\n\n在进入oebuild目录后，我们可以执行以下命令进入调试状态：\n\n::\n\n   pip install -e .\n\n注：以上命令的运行如果以普通用户运行，需要先确认是否将本地执行路径添加到环境变量\\ ``PATH``\\ 中，如果以root用户运行则不需要考虑，这样我们可以直接运行oebuild相关指令\n\n这样在后续开发与调试过程中，我们可以随时改代码随时生效\n\nsrc源码介绍\n'''''''''''\n\n正在完善中…\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "oebuild",
    "package_url": "https://pypi.org/project/oebuild/",
    "platform": null,
    "project_url": "https://pypi.org/project/oebuild/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/oebuild/0.0.11/",
    "requires_dist": [
      "GitPython",
      "PyYaml",
      "colorama",
      "dataclasses",
      "docker",
      "packaging",
      "reprint",
      "ruamel.yaml",
      "setuptools"
    ],
    "requires_python": ">=3.8",
    "summary": "",
    "version": "0.0.11",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17455850,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5d7baec1499734597ec28dd8e17b0e7ec4ec6d0f37215a1db09d40c0c753613b",
          "md5": "bbfe866fea983eb461549cf894d1101e",
          "sha256": "a3a5a5ab7f05217cf73b27cc4ceb58ceaeedf9744e5bc238924d3c84255fe842"
        },
        "downloads": -1,
        "filename": "oebuild-0.0.1.linux-x86_64.tar.gz",
        "has_sig": false,
        "md5_digest": "bbfe866fea983eb461549cf894d1101e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 89696,
        "upload_time": "2023-03-10T06:57:49",
        "upload_time_iso_8601": "2023-03-10T06:57:49.684305Z",
        "url": "https://files.pythonhosted.org/packages/5d/7b/aec1499734597ec28dd8e17b0e7ec4ec6d0f37215a1db09d40c0c753613b/oebuild-0.0.1.linux-x86_64.tar.gz",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ff8e308d84345a8a5bb8f59ec1a2b473ee0c357d5e43751a042d9bd4b4483352",
          "md5": "cab073fa0e7ab1253ed4355695f8059b",
          "sha256": "73688d48e139775facaceccd27e01f360e28c8018bd96554b25cfc63ec675989"
        },
        "downloads": -1,
        "filename": "oebuild-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cab073fa0e7ab1253ed4355695f8059b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 60081,
        "upload_time": "2023-03-10T06:57:47",
        "upload_time_iso_8601": "2023-03-10T06:57:47.190885Z",
        "url": "https://files.pythonhosted.org/packages/ff/8e/308d84345a8a5bb8f59ec1a2b473ee0c357d5e43751a042d9bd4b4483352/oebuild-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0c8a511a3a1b22045c1413485b2c8b958368ef7e0bdf7a8cede7814a41511ec1",
          "md5": "b2c087e6ce1600ca1c47a2b5cf51ac0b",
          "sha256": "ffa5f35527efde3befe455534a795aa02a594eb09d347afdb4f26bde15549bdc"
        },
        "downloads": -1,
        "filename": "oebuild-0.0.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b2c087e6ce1600ca1c47a2b5cf51ac0b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 63669,
        "upload_time": "2023-03-27T02:45:33",
        "upload_time_iso_8601": "2023-03-27T02:45:33.801078Z",
        "url": "https://files.pythonhosted.org/packages/0c/8a/511a3a1b22045c1413485b2c8b958368ef7e0bdf7a8cede7814a41511ec1/oebuild-0.0.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "40654d564b8b8b35b6b4becd00d5a13334803b6a69b860286662fc6e85998cd4",
          "md5": "36936ca66eaefe8299069fb93e132d22",
          "sha256": "b71981124a00168eec9fd1b44bda94a017eaea1992e1766394b25fd7fba13afb"
        },
        "downloads": -1,
        "filename": "oebuild-0.0.11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "36936ca66eaefe8299069fb93e132d22",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 63755,
        "upload_time": "2023-03-27T03:52:53",
        "upload_time_iso_8601": "2023-03-27T03:52:53.881860Z",
        "url": "https://files.pythonhosted.org/packages/40/65/4d564b8b8b35b6b4becd00d5a13334803b6a69b860286662fc6e85998cd4/oebuild-0.0.11-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0fb6c4e761bb3290cf25162552ef84be55dec32a7ce8f70365d50104c98179ae",
          "md5": "477f2a50548bac75e636053dbd9d329e",
          "sha256": "59688703f24655061128af986753ebdb97b01cb99d418a596eca702980e4497a"
        },
        "downloads": -1,
        "filename": "oebuild-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "477f2a50548bac75e636053dbd9d329e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 60077,
        "upload_time": "2023-03-15T11:42:44",
        "upload_time_iso_8601": "2023-03-15T11:42:44.812149Z",
        "url": "https://files.pythonhosted.org/packages/0f/b6/c4e761bb3290cf25162552ef84be55dec32a7ce8f70365d50104c98179ae/oebuild-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "00d51808d32d2ed654d843bd38d23e6e744a49999a9154c25954ad2be0605656",
          "md5": "481b212ce9e31bce87551e24e7312c09",
          "sha256": "1edd37624e221a9bae6f6a965689d8d1aa3530fa47e44457aadae78c1a0c71e8"
        },
        "downloads": -1,
        "filename": "oebuild-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "481b212ce9e31bce87551e24e7312c09",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 60096,
        "upload_time": "2023-03-17T07:44:04",
        "upload_time_iso_8601": "2023-03-17T07:44:04.111994Z",
        "url": "https://files.pythonhosted.org/packages/00/d5/1808d32d2ed654d843bd38d23e6e744a49999a9154c25954ad2be0605656/oebuild-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b2d82800cb61f4cd53cec7a8635ca34e2339bec1e8b9764e5e24309fd38f389",
          "md5": "a06bc93e55611ce6fec685a2467a6d98",
          "sha256": "a49ce232f1742815fd7e1ea773fa3bda39e79104e7730cda94addd0244809e35"
        },
        "downloads": -1,
        "filename": "oebuild-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a06bc93e55611ce6fec685a2467a6d98",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 60055,
        "upload_time": "2023-03-21T08:11:17",
        "upload_time_iso_8601": "2023-03-21T08:11:17.245642Z",
        "url": "https://files.pythonhosted.org/packages/2b/2d/82800cb61f4cd53cec7a8635ca34e2339bec1e8b9764e5e24309fd38f389/oebuild-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e9114b1dbe150c78f69c805f700c42e10f624e296d50f9c6aae2898913ea4ec0",
          "md5": "606b97782f673c12255eb1d8dbc51b24",
          "sha256": "d194d3635ed924898dbe9e4336cdce3ef2afe09d260f6ff07304580f648e4850"
        },
        "downloads": -1,
        "filename": "oebuild-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "606b97782f673c12255eb1d8dbc51b24",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 60059,
        "upload_time": "2023-03-21T09:25:45",
        "upload_time_iso_8601": "2023-03-21T09:25:45.050440Z",
        "url": "https://files.pythonhosted.org/packages/e9/11/4b1dbe150c78f69c805f700c42e10f624e296d50f9c6aae2898913ea4ec0/oebuild-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c54dd7c33b8600df3ab1ee92c03fc42e501b455e8512b150d8171cfafd35612d",
          "md5": "932c60e5afc6c9c57f6cb84deb3b26d5",
          "sha256": "04efbd2ab404e5f89326282df654404d1bf2e75f51a32536dcd0fb6e7b96007f"
        },
        "downloads": -1,
        "filename": "oebuild-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "932c60e5afc6c9c57f6cb84deb3b26d5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 60244,
        "upload_time": "2023-03-22T12:26:34",
        "upload_time_iso_8601": "2023-03-22T12:26:34.772013Z",
        "url": "https://files.pythonhosted.org/packages/c5/4d/d7c33b8600df3ab1ee92c03fc42e501b455e8512b150d8171cfafd35612d/oebuild-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e6f491792b3acf796efc22e998402301b5495c24e6a79cb8e3086ca118643bc1",
          "md5": "ea274bea7d922ec3614df3010356a6e3",
          "sha256": "809c09de87ded274d58de38198720fabd2e982ae433421e722541692d4c986b5"
        },
        "downloads": -1,
        "filename": "oebuild-0.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ea274bea7d922ec3614df3010356a6e3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 63642,
        "upload_time": "2023-03-24T07:11:11",
        "upload_time_iso_8601": "2023-03-24T07:11:11.531498Z",
        "url": "https://files.pythonhosted.org/packages/e6/f4/91792b3acf796efc22e998402301b5495c24e6a79cb8e3086ca118643bc1/oebuild-0.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "00386ff4040fd2fa67770e5f35996109b1d55f669121a678cf84fcacc6e0e83b",
          "md5": "601784db2719a26ebfc3ff0732adf169",
          "sha256": "51c81406fc675e62ec55431fdf416ca83f82427fd295de365fcae0afbb971ebd"
        },
        "downloads": -1,
        "filename": "oebuild-0.0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "601784db2719a26ebfc3ff0732adf169",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 63644,
        "upload_time": "2023-03-24T07:55:16",
        "upload_time_iso_8601": "2023-03-24T07:55:16.314917Z",
        "url": "https://files.pythonhosted.org/packages/00/38/6ff4040fd2fa67770e5f35996109b1d55f669121a678cf84fcacc6e0e83b/oebuild-0.0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "75828f5aaba41319b25523fe1c8b9679c66d3a7f0d17bb02ab0ef6ea4ceb1871",
          "md5": "b8924fb8d02df2b1fcaf7a47c5390edb",
          "sha256": "595f3170581120a223c3d32a89dd1350fef57ac12ae9f91dc5138733da255e88"
        },
        "downloads": -1,
        "filename": "oebuild-0.0.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b8924fb8d02df2b1fcaf7a47c5390edb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 63646,
        "upload_time": "2023-03-24T09:12:55",
        "upload_time_iso_8601": "2023-03-24T09:12:55.411927Z",
        "url": "https://files.pythonhosted.org/packages/75/82/8f5aaba41319b25523fe1c8b9679c66d3a7f0d17bb02ab0ef6ea4ceb1871/oebuild-0.0.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "40654d564b8b8b35b6b4becd00d5a13334803b6a69b860286662fc6e85998cd4",
        "md5": "36936ca66eaefe8299069fb93e132d22",
        "sha256": "b71981124a00168eec9fd1b44bda94a017eaea1992e1766394b25fd7fba13afb"
      },
      "downloads": -1,
      "filename": "oebuild-0.0.11-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "36936ca66eaefe8299069fb93e132d22",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 63755,
      "upload_time": "2023-03-27T03:52:53",
      "upload_time_iso_8601": "2023-03-27T03:52:53.881860Z",
      "url": "https://files.pythonhosted.org/packages/40/65/4d564b8b8b35b6b4becd00d5a13334803b6a69b860286662fc6e85998cd4/oebuild-0.0.11-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}