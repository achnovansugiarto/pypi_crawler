{
  "info": {
    "author": "andyguo",
    "author_email": "andyguo@phenom-films.com",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: Implementation"
    ],
    "description": "dayu_oiio\n=========\n\n是OpenImageIO 中oiiotool 的python 封装。将操作转换为stream\n的概念，可以帮助用户不用记忆繁杂的终端命令行，直观的生成处理代码。\nOpenImageIO 是非常强力的序列帧转码工具，包括生成tx\n的工具都可以直接通过OpenImageIO 实现！\n\n准备工作\n========\n\n首先通过pip 进行安装\n\n.. code:: python\n\n   pip install -U dayu_oiio\n\n然后，需要用户自行安装或者编译OpenImageIO 中的oiiotool\n工具。具体的操作可以参照： https://github.com/OpenImageIO/oiio\n\n对于mac 用户，可以比较简单，直接使用brew 进行安装即可：\n\n.. code:: shell\n\n   /usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n   brew install openimageio\n\nlinux 用户也可以自行进行编译。windows\n用户相对来说麻烦一些，需要自己按照OpenImageIO 官方手册自行编译。\n\n使用方法\n========\n\n假设，用户希望对一套序列帧进行如下的操作：\n\n1. 缩放\n2. 使用ocio 转换色彩空间\n3. 输出\n\n那么对应的代码就非常简单：\n\n.. code:: python\n\n   from dayu_oiio.stream import *\n\n   cmd = OIIO() >> \\\n         Input('/some/input/files.%04d.exr', start=1001, end=1008) >> \\\n         Resize(1920, 1080) >> \\\n         ColorConvert('Input - ARRI - V3 LogC (EI800) - Wide Gamut',\n                      'ACES - ACEScg',\n                      ocio='/some/ocio/config/file.config') >> \\\n         Output('/some/output/file.%04d', start=1101, end=1108)\n\n   for _ in cmd.run():\n       print cmd.progress\n\n高级扩展\n========\n\n毕竟这里只封装了常用的 oiiotool\n指令，如果用户需要使用的指令没有被封装，那么可以自己进行扩展：\n\n.. code:: python\n\n   from dayu_oiio.base import UnaryFilterStream\n\n   class Multiply(UnaryFilterStream):\n       _name = 'mul'    # 这里对应oiio 中的指令\n\n       def __init__(self, multiply_value):    # 这里的参数是对应指令的参数\n           super(Multiply, self).__init__()\n           self.mul = multiply_value\n\n       def combine(self)\n           # 这里务必将oiio 拼接的指令加到 self._value 这个变量中\n           self._value += '--{param} {mul}'.format(param=self._name,\n                                                   mul=self.mul)\n\n这样，就完成了一个multiply 操作的自定义封装。之后就可以直接使用了：\n\n.. code:: python\n\n   cmd = OIIO() >> \\\n         Input('/some/input/files.%04d.exr', start=1001, end=1008) >> \\\n         Multiply(1.4) >> \\\n         Output('/some/output/file.%04d', start=1101, end=1108)\n\n   for _ in cmd.run():\n       print cmd.progress\n\n一些已知的问题\n==============\n\n-  由于oiiotool 的命令行工具，再输出运行指令的时候不是每行都flush\n   到stdout，因此python 的subprocess\n   在运行结束之前无法无阻塞的获得运行状态。 因此，只能够每隔1s\n   进行扫描硬盘，来获得输出素材的进度\n\n-  如果想要同时使用ocio 的色彩管理，那么需要在编译的时候加入opencolorIO\n   的支持。（Mac 通过brew 安装的已经支持了）\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/phenom-films/dayu_oiio",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dayu-oiio",
    "package_url": "https://pypi.org/project/dayu-oiio/",
    "platform": "",
    "project_url": "https://pypi.org/project/dayu-oiio/",
    "project_urls": {
      "Homepage": "https://github.com/phenom-films/dayu_oiio"
    },
    "release_url": "https://pypi.org/project/dayu-oiio/0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "a python wrapper for OpenImageIO oiiotool.",
    "version": "0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4380443,
  "releases": {
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3ae1ebfa4d55dd1365b4f3a2eb289311ca044d6a8827419ef0ba552fb69feae5",
          "md5": "40975de11c3ecd10b9f8f63f9638f493",
          "sha256": "70baadbf04cf458326c7a298095d25d48678e24fde913e9869f0ed4f4902681c"
        },
        "downloads": -1,
        "filename": "dayu_oiio-0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "40975de11c3ecd10b9f8f63f9638f493",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 6643,
        "upload_time": "2018-10-16T07:40:15",
        "upload_time_iso_8601": "2018-10-16T07:40:15.621623Z",
        "url": "https://files.pythonhosted.org/packages/3a/e1/ebfa4d55dd1365b4f3a2eb289311ca044d6a8827419ef0ba552fb69feae5/dayu_oiio-0.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "faeccae401766588699125fca5ba8b958356f35ec2c778fd3d251e9770f39b6d",
          "md5": "7cfd56549e37128cc7552e35b6a42bc8",
          "sha256": "15daed8fe3de4e53b453093d0dc6493d9a9cca4a9b365c61f752399ebe971b01"
        },
        "downloads": -1,
        "filename": "dayu_oiio-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7cfd56549e37128cc7552e35b6a42bc8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5897,
        "upload_time": "2018-10-16T07:40:17",
        "upload_time_iso_8601": "2018-10-16T07:40:17.462344Z",
        "url": "https://files.pythonhosted.org/packages/fa/ec/cae401766588699125fca5ba8b958356f35ec2c778fd3d251e9770f39b6d/dayu_oiio-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3ae1ebfa4d55dd1365b4f3a2eb289311ca044d6a8827419ef0ba552fb69feae5",
        "md5": "40975de11c3ecd10b9f8f63f9638f493",
        "sha256": "70baadbf04cf458326c7a298095d25d48678e24fde913e9869f0ed4f4902681c"
      },
      "downloads": -1,
      "filename": "dayu_oiio-0.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "40975de11c3ecd10b9f8f63f9638f493",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 6643,
      "upload_time": "2018-10-16T07:40:15",
      "upload_time_iso_8601": "2018-10-16T07:40:15.621623Z",
      "url": "https://files.pythonhosted.org/packages/3a/e1/ebfa4d55dd1365b4f3a2eb289311ca044d6a8827419ef0ba552fb69feae5/dayu_oiio-0.2-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "faeccae401766588699125fca5ba8b958356f35ec2c778fd3d251e9770f39b6d",
        "md5": "7cfd56549e37128cc7552e35b6a42bc8",
        "sha256": "15daed8fe3de4e53b453093d0dc6493d9a9cca4a9b365c61f752399ebe971b01"
      },
      "downloads": -1,
      "filename": "dayu_oiio-0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "7cfd56549e37128cc7552e35b6a42bc8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5897,
      "upload_time": "2018-10-16T07:40:17",
      "upload_time_iso_8601": "2018-10-16T07:40:17.462344Z",
      "url": "https://files.pythonhosted.org/packages/fa/ec/cae401766588699125fca5ba8b958356f35ec2c778fd3d251e9770f39b6d/dayu_oiio-0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}