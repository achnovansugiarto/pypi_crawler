{
  "info": {
    "author": "Lex Draven",
    "author_email": "lexman2@yandex.ru",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# README #\n\nA simplest html parsing library.\n\nKey features:\n\n* no third-party dependencies\n* no need to know CSS, Xpath or complicated rules to find element\n* interaction with native python lambda syntax or function-predicate\n* opportunity to work with damaged html\n* ability to use element relations (find ancestor, descendant, siblings)\n* a standard find first element or find all by current filter\n\n### Installation ###\n\nVia pip:\n\n`pip install py_parse`\n\n### First example ###\n\nLets get src attribute (link) of the Google logo on google.com\n\n```python\nimport requests\nfrom py_parse import Parser\n\n# get content of the google web page\ncontent = requests.get('https://www.google.com/').text\n# find first element with img-tag and 'alt' attribute equal to Google (logo)\ngoogle_logo = Parser().parse(content).find(lambda e: e.tag == 'img' and e.alt == 'Google')\n# prints src attribute of the logo element\nprint(google_logo.src)\n```\n\nYou will see following result\n\n```text\n/images/branding/googlelogo/1x/googlelogo_white_background_color_272x92dp.png\n```\n\nIf there is no element with current filter, you will get exception with filter text (if lambda was used):\nFor code above lets say we use wrong filter\n\n```python\ngoogle_logo = Parser().parse(content).find(lambda e: e.tag == 'img' and e.alt == 'Wrong')\n```\n\nYou will see following result\n\n```text\n...traceback...\npy_parse.exceptions.NoSuchElementError: No elements with current filter (e.tag == 'img' and e.alt == 'Wrong')\n```\n\n### HOW IT WORKS ###\n\nDuring parsing all html-elements in DOM converts to Node objects, which remains all relations\n(parent, child, sibling) and get all their attributes from html-element.\n\nFor example\n\n```html\n\n<div class=\"some\" type=\"submit\">My text</div>\n```\n\nwill return (after parsing):\n\n```python\nfrom py_parse import Parser\n\nelement = '<div class=\"some\" type=\"submit\">My text</div>'\nhtml_element = Parser().parse(element)[0]\nprint(html_element.text)  # My text\nprint(html_element.tag)  # div\nprint(html_element.class_)  # some\n```\n\nAs you can see, all html attributes became object attributes, so you can use it in your filters\n\n**But remember:**\n\n* Attribute tag is required, always present and can't be None\n* Attribute text always present BUT can be None\n* Attribute class became class_ in an object (html_element.class_), and it is not required\n\nAs you know, web page is a hierarchy, where html is a ancestor for all elements, and they all are nested in html.\nFunction parse returns Nodes object, that is just container (like list) for Node objects. And for most cases that Nodes\nwill have just one element (html), which contains all other elements inside (nested). So, for using search, you need to\nuse methods like find or find_all of the Nodes.\n\nThe main idea is simple parsing without knowledge of CSS or XPATH, user need to know just a basic part of html. If you\ncan understand what is html-element, tag, attribute, parent, child -you can parse all that you need.\n\n### Text - is that we looking for ###\n\nUser parse html to get some text of other values from it. Attributes is simple as get something from any python object.\nFor example, when we parse following html\n\n```html\n<div class=\"some\" value=\"text\"></div>\n```\n\nwe can get value simple by using attribute:\n\n```python\nvalue = Parser().parse('<div class=\"some\" value=\"text\"></div>').find_tag('div').value\nprint(value)  # text\n```\n\nIf text of the element is split by other tags, it will be split by newline character in resulting text. For example div\ntext had some br's inside:\n\n```html\n<div>One<br>Two<br>Three</div>\n```\n\nresult will be\n\n```python\ntext_with_n = Parser().parse('<div>One<br>Two<br>Three</div>').find_tag('div').text\nprint(text_with_n)  # One\\nTwo\\nThree\ntexts = text_with_n.split('\\n')\nprint(texts)  # ['One', 'Two', 'Three']\n```\n\nAnd finally we can get cleared text - the text without newlines characters, tabs or leading/following spaces.\nso following html\n```html\n<div>  One<br>  Two<br>         Three   </div>\n```\ntransforms to\n\n```python\nclear_text = Parser().parse('<div>  One<br>\\nTwo<br>\\tThree   </div>').find_tag('div').cleared_text()\nprint(clear_text)  # OneTwoThree\n```\n\n\n### Find methods ###\n\nMethod **find_all** of the Nodes objects returns all found elements. If you not specify a filter, then all elements be\nin result. With filter, you get only elements, that satisfying the condition in it. If there are no such elements, then\nempty Nodes container returns.\n\nMethod find based on **find_all**, but returns just first element with that filter. If there are no results, then\nexception will be raised.\n\nMethods **find_tags** and **find_tag** are similar to **find_all**, **find**, but it makes search with tag more\nconvinient. For example\n\n```python\nfind_all(lambda e: e.tag == 'div')\n```\n\nis equivalent to\n\n```python\nfind_tags('div')\n```\n\n### Simple Filtering ###\n\nFor all examples we will use content of the python documentation page https://docs.python.org/3/\n\nSo, start of all code is\n\n```python\nimport requests\nfrom py_parse import Parser\n\ncontent = requests.get('https://docs.python.org/3/').text\n```\n\n**1. Find by tag**\n\nLet's find first element with 'strong' tag and get it text\n\n```python\nfirst_strong = Parser().parse(content).find(lambda e: e.tag == 'strong')\nprint(first_strong.text)  # Parts of the documentation:\n```\n\nor you can use special **find_tag** method:\n\n```python\nfirst_strong = Parser().parse(content).find_tag('strong')\nprint(first_strong.text)  # Parts of the documentation:\n\n```\n\n**2. Find by tag and text (always present in any element)**\n\n```python\ntables = Parser().parse(content).find(lambda e: e.tag == 'strong' and e.text and e.text == 'Indices and tables:')\nprint(tables.text)  # Indices and tables:\n```\n\nor\n\n```python\ntables = Parser().parse(content).find_tag('strong', lambda e: e.text == 'Indices and tables:')\nprint(tables.text)  # Indices and tables:\n```\n\n**3. Find by containing text**\n\n```python\ncopyright_ = Parser().parse(content).find(lambda e: 'pyri' in e.text)  # pyri is a part of Copyright\nprint(copyright_)  # <a class=\"biglink\" href=\"copyright.html\">Copyright</a>\n```\n\nIn this example we print Node object itself, but not its text attribute.\n\n**4. Find element which has id**\n\n```python\nelement_with_id = Parser().parse(content).find(lambda e: 'id' in e)  # 'id' in e - checks element has \"id\" attribute\nprint(element_with_id)\n# <script id=\"documentation_options\" data-url_root=\"./\" src=\"_static/documentation_options.js\"></script>\n\n```\n\n**5. Find element by tag and type, then get it value**\n\nLet's find 'Go' button to search on documentation page\n\n```python\n# finds element with input tag, which has type and this type equal to submit\ngo = Parser().parse(content).find(lambda e: e.tag == 'input' and e.type == 'submit')\nprint(go.value)  # Go\n```\n\nor\n\n```python\ngo = Parser().parse(content).find_tag('input', lambda e: e.type == 'submit')\nprint(go.value)  # Go\n```\n\n**6. Finds all script elements**\n\n```python\nscripts = Parser().parse(content).find_all(lambda e: e.tag == 'script')  # Using find_all to finds all elements\nfor script in scripts:\n    print(script)\n# <script id=\"documentation_options\" data-url_root=\"./\" src=\"_static/documentation_options.js\"></script>\n# <script src=\"_static/jquery.js\"></script>\n# <script src=\"_static/underscore.js\"></script>\n# <script src=\"_static/doctools.js\"></script>\n# <script src=\"_static/language_data.js\"></script>\n# <script src=\"_static/sidebar.js\"></script>\n# <script type=\"text/javascript\" src=\"_static/copybutton.js\"></script>\n# <script type=\"text/javascript\">$('.inline-search').show(0);</script>\n# <script type=\"text/javascript\">$('.inline-search').show(0);</script>\n# <script type=\"text/javascript\" src=\"_static/switchers.js\"></script>\n```\n\nor with special **find_tags** method:\n\n```python\nscripts = Parser().parse(content).find_tags('script')  # Using find_tags to finds all elements with that tag\nfor script in scripts:\n    print(script)\n```\n\n**7. Finds all elements by part of the class name**\n\n```python\nsphinxes = Parser().parse(content).find_all(\n    lambda e: 'sphinx' in e.class_)  # finds all elements containing 'sphinx' in class name\nfor sphinx in sphinxes:\n    print(sphinx)\n# <div class=\"sphinxsidebar\" role=\"navigation\" aria-label=\"main navigation\"></div>\n# <div class=\"sphinxsidebarwrapper\"></div>\n```\n\n**8. Using function-predicate**\n\nSometimes your search filter became too long and heavy to use it in lambda, in that cases you should create a function-predicate\n with clear name to use in filters!\n\n```python\ndef images_with_alt_and_style(e) -> bool: # predicate function (takes html element and returns bool)\n    return e.tag == 'img' and 'alt' in e and 'middle' in e.style\n\n\nli_s = Parser().parse(content).find_all(images_with_alt_and_style)\nfor li in li_s:\n    print(li)\n\n# <img src=\"_static/py.png\" alt=\"\" style=\"vertical-align: middle; margin-top: -1px\"></img>\n# <img src=\"_static/py.png\" alt=\"\" style=\"vertical-align: middle; margin-top: -1px\"></img>\n```\n\n### Relations filtering ###\n\n\n### Contact me ###\n\nLexman2@yandex.ru\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://bitbucket.org/kotolex/html_parser",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "py-parse",
    "package_url": "https://pypi.org/project/py-parse/",
    "platform": "",
    "project_url": "https://pypi.org/project/py-parse/",
    "project_urls": {
      "Homepage": "https://bitbucket.org/kotolex/html_parser"
    },
    "release_url": "https://pypi.org/project/py-parse/0.2.0/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "A simplest HTML parsing library.",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9209761,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bb96ba55186f7b3bec644f9cfbd9b712f3ed73ccdcb16cd6bb45518b349006ff",
          "md5": "1cff57f156e82bd2eadabc82c9d230df",
          "sha256": "23a5201d2a4c9d428043017683e386a9db587da8388cbe6d5c6249e7934afa13"
        },
        "downloads": -1,
        "filename": "py_parse-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1cff57f156e82bd2eadabc82c9d230df",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7983,
        "upload_time": "2020-10-24T09:16:09",
        "upload_time_iso_8601": "2020-10-24T09:16:09.632140Z",
        "url": "https://files.pythonhosted.org/packages/bb/96/ba55186f7b3bec644f9cfbd9b712f3ed73ccdcb16cd6bb45518b349006ff/py_parse-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f4afa66fd191bce1930b7c84a127d95e689b2a8bfec073b9290c2e1782df3b1",
          "md5": "23f7b2a7e169b0056795c4b279842467",
          "sha256": "78017911b10cf54547b5d45c9dc923e912f30b5df547e039fda43f1b490dff4b"
        },
        "downloads": -1,
        "filename": "py_parse-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "23f7b2a7e169b0056795c4b279842467",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6024,
        "upload_time": "2020-10-24T09:16:11",
        "upload_time_iso_8601": "2020-10-24T09:16:11.983999Z",
        "url": "https://files.pythonhosted.org/packages/2f/4a/fa66fd191bce1930b7c84a127d95e689b2a8bfec073b9290c2e1782df3b1/py_parse-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "59204ac7823f82c9e70688b734fe062487e609490ce873771e40276fdb991f99",
          "md5": "83546f9b02cd9a46276f612aa1b2fbcf",
          "sha256": "ee40d2fb681c5ade7a3314fa510926d82aad906414107a3a4246b16c62d08b96"
        },
        "downloads": -1,
        "filename": "py_parse-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "83546f9b02cd9a46276f612aa1b2fbcf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8478,
        "upload_time": "2020-10-24T09:39:11",
        "upload_time_iso_8601": "2020-10-24T09:39:11.794276Z",
        "url": "https://files.pythonhosted.org/packages/59/20/4ac7823f82c9e70688b734fe062487e609490ce873771e40276fdb991f99/py_parse-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a932703a3e5df2a85c65f438dee3c79ac7ac154466197ecd04efc258e416a5c6",
          "md5": "e550f1a78a88857eabfa4deaa6580913",
          "sha256": "b222b3bd4d7f3224d3e09b2e4fc3f4eb43d215a7369c626ffedea148dcd67a08"
        },
        "downloads": -1,
        "filename": "py_parse-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e550f1a78a88857eabfa4deaa6580913",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7108,
        "upload_time": "2020-10-24T09:39:12",
        "upload_time_iso_8601": "2020-10-24T09:39:12.984729Z",
        "url": "https://files.pythonhosted.org/packages/a9/32/703a3e5df2a85c65f438dee3c79ac7ac154466197ecd04efc258e416a5c6/py_parse-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2459fa43d956d071e5fc56355a17dafb4fed6eec106df87a2d9e258d0b28ead9",
          "md5": "1841d8ecea1085b03cc66f77a792fdac",
          "sha256": "057a8e181a9623c9700395c8b9eb33e216efe8cf1fda57b475e39ac5602ca581"
        },
        "downloads": -1,
        "filename": "py_parse-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1841d8ecea1085b03cc66f77a792fdac",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8656,
        "upload_time": "2020-10-24T09:58:47",
        "upload_time_iso_8601": "2020-10-24T09:58:47.248701Z",
        "url": "https://files.pythonhosted.org/packages/24/59/fa43d956d071e5fc56355a17dafb4fed6eec106df87a2d9e258d0b28ead9/py_parse-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6d73f3d2579dd7a085897c4f082ca2e3dad6684f9f6561a7ec6bb5278bb9338c",
          "md5": "9ced8f528a7e8dc8698531a3320a762c",
          "sha256": "9bc956add75b0f50efe0bb122773e0ab029ac1357189299af954d990fa25f398"
        },
        "downloads": -1,
        "filename": "py_parse-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "9ced8f528a7e8dc8698531a3320a762c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7376,
        "upload_time": "2020-10-24T09:58:48",
        "upload_time_iso_8601": "2020-10-24T09:58:48.451184Z",
        "url": "https://files.pythonhosted.org/packages/6d/73/f3d2579dd7a085897c4f082ca2e3dad6684f9f6561a7ec6bb5278bb9338c/py_parse-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3fbf71c02a244e994dca4b1ec0e47fd64102fdf98fab44505d0e567e509cd151",
          "md5": "5dc1b8ce99c4267e74fb1158062a7f45",
          "sha256": "1346bfb61bfa37a32a148e92d89246e9878704f2d6ed4fe155316cf105390ae5"
        },
        "downloads": -1,
        "filename": "py_parse-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5dc1b8ce99c4267e74fb1158062a7f45",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10084,
        "upload_time": "2020-10-24T15:15:36",
        "upload_time_iso_8601": "2020-10-24T15:15:36.384263Z",
        "url": "https://files.pythonhosted.org/packages/3f/bf/71c02a244e994dca4b1ec0e47fd64102fdf98fab44505d0e567e509cd151/py_parse-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "06e3345d20c6d933190e65b2d02d0b67f5782103d4da7a54b843669304da8132",
          "md5": "4506cafa4f23ff82ef93a8cf225427c7",
          "sha256": "fb6f7a1c39f9fc932a78f9a5ed49af4be8a08068dfb52b5e834f181936b6c199"
        },
        "downloads": -1,
        "filename": "py_parse-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "4506cafa4f23ff82ef93a8cf225427c7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10459,
        "upload_time": "2020-10-24T15:15:37",
        "upload_time_iso_8601": "2020-10-24T15:15:37.645072Z",
        "url": "https://files.pythonhosted.org/packages/06/e3/345d20c6d933190e65b2d02d0b67f5782103d4da7a54b843669304da8132/py_parse-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d58a1c016672b1221285680de2797f12df7b24b96b05fe9f01d101d63ae0c44a",
          "md5": "95b5840b4a48c4a32dda968ca97dee7a",
          "sha256": "9477471533a373bbb02ad354cd67eade35d06c99dc4aaa00773b70c199bab58d"
        },
        "downloads": -1,
        "filename": "py_parse-0.1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "95b5840b4a48c4a32dda968ca97dee7a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 10758,
        "upload_time": "2020-12-03T17:22:56",
        "upload_time_iso_8601": "2020-12-03T17:22:56.844915Z",
        "url": "https://files.pythonhosted.org/packages/d5/8a/1c016672b1221285680de2797f12df7b24b96b05fe9f01d101d63ae0c44a/py_parse-0.1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7797ad0553c6f36b51303243779b38ecb2bd7cbbe54895f83758e0f024a40935",
          "md5": "0d83ab94b4f5c4f8942abaf3387e2e72",
          "sha256": "981996d9855622668fe5df3d2c57ed103d584e6eca71bb5898d5147c0ee174d4"
        },
        "downloads": -1,
        "filename": "py_parse-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "0d83ab94b4f5c4f8942abaf3387e2e72",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 11360,
        "upload_time": "2020-12-03T17:22:58",
        "upload_time_iso_8601": "2020-12-03T17:22:58.070133Z",
        "url": "https://files.pythonhosted.org/packages/77/97/ad0553c6f36b51303243779b38ecb2bd7cbbe54895f83758e0f024a40935/py_parse-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "51da9965a267f3b03a377caa807f462307bbad369c0da6d31f764136427e33b5",
          "md5": "262f795857d847683dd49d1e80c3863b",
          "sha256": "726000b721337c0405d6e9ec8bda07e24b5bdc30169cecf09cf59d8aa64298fe"
        },
        "downloads": -1,
        "filename": "py_parse-0.1.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "262f795857d847683dd49d1e80c3863b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 11580,
        "upload_time": "2020-12-04T16:55:58",
        "upload_time_iso_8601": "2020-12-04T16:55:58.789483Z",
        "url": "https://files.pythonhosted.org/packages/51/da/9965a267f3b03a377caa807f462307bbad369c0da6d31f764136427e33b5/py_parse-0.1.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3d147bf9ab260dffed95ffb7e7059700861c85bfd6cde2fdca2474ae7de9d5c3",
          "md5": "083982858f2b079697f5509728a16413",
          "sha256": "442385c02db018b29fcba42c1a9521a7ff9b1f10a400f5ff894c119e17d76eb8"
        },
        "downloads": -1,
        "filename": "py_parse-0.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "083982858f2b079697f5509728a16413",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 13113,
        "upload_time": "2020-12-04T16:55:59",
        "upload_time_iso_8601": "2020-12-04T16:55:59.921740Z",
        "url": "https://files.pythonhosted.org/packages/3d/14/7bf9ab260dffed95ffb7e7059700861c85bfd6cde2fdca2474ae7de9d5c3/py_parse-0.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f7e13114319139b45e896e986f385e5bf5695af526de9d988630bc9c8c9b26d6",
          "md5": "ea843127d7262ddfb4b5bf966c08f494",
          "sha256": "075731ae4c5c70ead44d462be35f94f306c59b980d2e0df8ecd8ea264657c522"
        },
        "downloads": -1,
        "filename": "py_parse-0.1.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ea843127d7262ddfb4b5bf966c08f494",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 11633,
        "upload_time": "2020-12-12T09:58:17",
        "upload_time_iso_8601": "2020-12-12T09:58:17.005968Z",
        "url": "https://files.pythonhosted.org/packages/f7/e1/3114319139b45e896e986f385e5bf5695af526de9d988630bc9c8c9b26d6/py_parse-0.1.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e4bb5f5b7fc6376668c50601ba7c2b5ddbd432580a50dbaaed200a63d1c6bf8c",
          "md5": "9c5963840204e7658256e7908b05869b",
          "sha256": "405c86c868110dd79054b5b071284c6aec2f5a7135f64c9c283c44e2086d2586"
        },
        "downloads": -1,
        "filename": "py_parse-0.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "9c5963840204e7658256e7908b05869b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 13145,
        "upload_time": "2020-12-12T09:58:18",
        "upload_time_iso_8601": "2020-12-12T09:58:18.311796Z",
        "url": "https://files.pythonhosted.org/packages/e4/bb/5f5b7fc6376668c50601ba7c2b5ddbd432580a50dbaaed200a63d1c6bf8c/py_parse-0.1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b99bdfe923ff5dbb6787e2c90742f1323c93ebce825e9b281ee86b7e3cc31922",
          "md5": "ec2e23c99c4bcd649074968a9895e324",
          "sha256": "f09e4516e0384c0c2fc8f89bdcb7f08d6bb9de96d9babcf02cfcebba37863c9c"
        },
        "downloads": -1,
        "filename": "py_parse-0.1.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ec2e23c99c4bcd649074968a9895e324",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 11671,
        "upload_time": "2020-12-12T11:45:31",
        "upload_time_iso_8601": "2020-12-12T11:45:31.983028Z",
        "url": "https://files.pythonhosted.org/packages/b9/9b/dfe923ff5dbb6787e2c90742f1323c93ebce825e9b281ee86b7e3cc31922/py_parse-0.1.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e99deb422860408c55b7bad8065ece6ce9ddd09f935e6feee66aa78e9e5ac3e2",
          "md5": "ee8fad8ab0762cea6b81995b97b594bb",
          "sha256": "90c9823ef803ddc582ef6aa07a351940f3309d593c8b6eb1c20d9131b3f3a450"
        },
        "downloads": -1,
        "filename": "py_parse-0.1.9.tar.gz",
        "has_sig": false,
        "md5_digest": "ee8fad8ab0762cea6b81995b97b594bb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 13158,
        "upload_time": "2020-12-12T11:45:33",
        "upload_time_iso_8601": "2020-12-12T11:45:33.169031Z",
        "url": "https://files.pythonhosted.org/packages/e9/9d/eb422860408c55b7bad8065ece6ce9ddd09f935e6feee66aa78e9e5ac3e2/py_parse-0.1.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a7284cb7fc7f45baf5f33a57d861e63e23c28db666f8a9f26bba0709a22a6ff0",
          "md5": "f12f6299c5f70adaf8e45f7675f34b45",
          "sha256": "3e71ed8043b5d78865552a6ecb1a7bdbf5324e8d594b44d040c91a14ed810503"
        },
        "downloads": -1,
        "filename": "py_parse-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f12f6299c5f70adaf8e45f7675f34b45",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 12106,
        "upload_time": "2021-01-23T09:48:38",
        "upload_time_iso_8601": "2021-01-23T09:48:38.445822Z",
        "url": "https://files.pythonhosted.org/packages/a7/28/4cb7fc7f45baf5f33a57d861e63e23c28db666f8a9f26bba0709a22a6ff0/py_parse-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f85c908a773baf83185ab10398d795aaddf127f3f21957927adadcb8474849c6",
          "md5": "9202d73083f966a3a4dd8e3fbbdad2e0",
          "sha256": "7f7ac2a44491e71d9caa0d9e44e3c28847fe57c1c756a4e381ddd599869cd7b8"
        },
        "downloads": -1,
        "filename": "py_parse-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9202d73083f966a3a4dd8e3fbbdad2e0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 13303,
        "upload_time": "2021-01-23T09:48:39",
        "upload_time_iso_8601": "2021-01-23T09:48:39.707219Z",
        "url": "https://files.pythonhosted.org/packages/f8/5c/908a773baf83185ab10398d795aaddf127f3f21957927adadcb8474849c6/py_parse-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a7284cb7fc7f45baf5f33a57d861e63e23c28db666f8a9f26bba0709a22a6ff0",
        "md5": "f12f6299c5f70adaf8e45f7675f34b45",
        "sha256": "3e71ed8043b5d78865552a6ecb1a7bdbf5324e8d594b44d040c91a14ed810503"
      },
      "downloads": -1,
      "filename": "py_parse-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f12f6299c5f70adaf8e45f7675f34b45",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 12106,
      "upload_time": "2021-01-23T09:48:38",
      "upload_time_iso_8601": "2021-01-23T09:48:38.445822Z",
      "url": "https://files.pythonhosted.org/packages/a7/28/4cb7fc7f45baf5f33a57d861e63e23c28db666f8a9f26bba0709a22a6ff0/py_parse-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f85c908a773baf83185ab10398d795aaddf127f3f21957927adadcb8474849c6",
        "md5": "9202d73083f966a3a4dd8e3fbbdad2e0",
        "sha256": "7f7ac2a44491e71d9caa0d9e44e3c28847fe57c1c756a4e381ddd599869cd7b8"
      },
      "downloads": -1,
      "filename": "py_parse-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "9202d73083f966a3a4dd8e3fbbdad2e0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 13303,
      "upload_time": "2021-01-23T09:48:39",
      "upload_time_iso_8601": "2021-01-23T09:48:39.707219Z",
      "url": "https://files.pythonhosted.org/packages/f8/5c/908a773baf83185ab10398d795aaddf127f3f21957927adadcb8474849c6/py_parse-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}