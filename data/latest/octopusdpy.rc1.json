{
  "info": {
    "author": "Sarvin Coachbuilder",
    "author_email": "sarvinc@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# octopusdpy\n\n\nWIP Python package for interacting with Octopus Deploy's API. Currently this provides for read only access.\n\n## Usage\nYou'll need two items:\n\n* octopusdpy_url: The URL used to interact with your instance of octopusdpy.\n* api_key: An API key used to authenticate with octopusdpy.\n\n```python\nimport octopusdpy\n\noctopusdpy_api = octopusdpy.API(octopusdpy_url=\"XXX\", api_key=\"YYY\")\n```\n\nWhen the octopusdpy API returns multiple values an iterator is used:\n\nA new item is returned each iteration. The iterator is exhausted once all items have been returned from the API.\n```python\nenvironments = api.get_environments():\n\nfor environment in environments:\n    print(environment.Name)\n```\n\nYou can do simple gathering of information like:\n\nGet all the machines assigned to an environment and the roles of those machines.\n\n```python\nimport octopusdpy\n\n\napi = octopusdpy.API(\"XXX\", \"YYY\")\nenvironment_pages = api.get_environments()\nfor environments in environment_pages:\n\n    for environment in environments:\n        machine_pages = environment.machines\n\n        for machines in machine_pages:\n            for machine in machines:\n                print(environment.Name, machine.Name, machine.Roles)\n```\n\nClone a Library Variable Set\n\n```python\nsource_library_variable_set = api.get_library_variable_set('LibraryVariableSets-123')\ndestination_library_variable_set = api.get_library_variable_set('LibraryVariableSets-456')\nsource_variable_set = source_library_variable_set.variable_set\ndestination_variable_set = destination_library_variable_set.variable_set\ndestination_variable_set.Variables = source_variable_set.Variables\ndestination_variable_set.save()\n```\n\nFind all your long running currently executing tasks\n\n```python\nfrom datetime import datetime, timezone\n\nnow = datetime.now(timezone.utc)\ntasks = api.get_tasks({'states':'executing'})\n\nfor task in tasks:\n    time_delta = now - task.start_time\n    if time_delta.total_seconds() > 86400:\n        hours, remainder = divmod(time_delta.total_seconds(), 3600)\n        minutes, seconds = divmod(remainder, 60)\n        print(task.Id, task.Description, f\"{hours} hours, {minutes} minutes\")\n```\n\nFind all the variables in a Library Variable Set that are scoped to a role\n\n```python\nimport octopusdpy\nimport re\nnightly_re = re.compile(r'.*nightly.*', re.IGNORECASE)\n\nlibrary_variable_set = api.get_library_variable_set('LibraryVariableSets-123')\nvariable_set = library_variable_set.variable_set\n\nfor variable in variable_set.Variables:\n    roles = variable['Scope'].get('Role', [])\n    for role in roles:\n        if nightly_re.match(role):\n            print(variable)\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sarvin/Poptopus",
    "keywords": "octopus",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "octopusdpy",
    "package_url": "https://pypi.org/project/octopusdpy/",
    "platform": "",
    "project_url": "https://pypi.org/project/octopusdpy/",
    "project_urls": {
      "Bug Tracker": "https://github.com/sarvin/Poptopus/issues",
      "Homepage": "https://github.com/sarvin/Poptopus"
    },
    "release_url": "https://pypi.org/project/octopusdpy/0.0.3/",
    "requires_dist": [
      "requests",
      "ipython ; extra == 'develop'",
      "vcrpy (==4.1.1) ; extra == 'test'"
    ],
    "requires_python": ">=3.6",
    "summary": "Simple library for interacting with Octopus",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11296217,
  "releases": {
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "76171671251897be5b7d0ca1880877a9e342a3548ab9e40c7a0b254577b2c68c",
          "md5": "e9247dc35e9dfe5b2020161601837fd0",
          "sha256": "b377b6a1354314cea43602d754dee85e8caed6e5c9ec04ad346526c0cf82e1ce"
        },
        "downloads": -1,
        "filename": "octopusdpy-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e9247dc35e9dfe5b2020161601837fd0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 18566,
        "upload_time": "2021-08-27T17:15:12",
        "upload_time_iso_8601": "2021-08-27T17:15:12.567345Z",
        "url": "https://files.pythonhosted.org/packages/76/17/1671251897be5b7d0ca1880877a9e342a3548ab9e40c7a0b254577b2c68c/octopusdpy-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c6f97c4191ab7e80e668df026b1b7582d8e90fcad761fabd0204dcb90379748f",
          "md5": "55ee683019a6ab83d1288da1888347e0",
          "sha256": "1743a9c1e06c0ac3b120b8539746e5caf57b9c2989d13664251ef27f8a04e763"
        },
        "downloads": -1,
        "filename": "octopusdpy-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "55ee683019a6ab83d1288da1888347e0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17781,
        "upload_time": "2021-08-27T17:15:14",
        "upload_time_iso_8601": "2021-08-27T17:15:14.535526Z",
        "url": "https://files.pythonhosted.org/packages/c6/f9/7c4191ab7e80e668df026b1b7582d8e90fcad761fabd0204dcb90379748f/octopusdpy-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "76171671251897be5b7d0ca1880877a9e342a3548ab9e40c7a0b254577b2c68c",
        "md5": "e9247dc35e9dfe5b2020161601837fd0",
        "sha256": "b377b6a1354314cea43602d754dee85e8caed6e5c9ec04ad346526c0cf82e1ce"
      },
      "downloads": -1,
      "filename": "octopusdpy-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e9247dc35e9dfe5b2020161601837fd0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 18566,
      "upload_time": "2021-08-27T17:15:12",
      "upload_time_iso_8601": "2021-08-27T17:15:12.567345Z",
      "url": "https://files.pythonhosted.org/packages/76/17/1671251897be5b7d0ca1880877a9e342a3548ab9e40c7a0b254577b2c68c/octopusdpy-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c6f97c4191ab7e80e668df026b1b7582d8e90fcad761fabd0204dcb90379748f",
        "md5": "55ee683019a6ab83d1288da1888347e0",
        "sha256": "1743a9c1e06c0ac3b120b8539746e5caf57b9c2989d13664251ef27f8a04e763"
      },
      "downloads": -1,
      "filename": "octopusdpy-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "55ee683019a6ab83d1288da1888347e0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 17781,
      "upload_time": "2021-08-27T17:15:14",
      "upload_time_iso_8601": "2021-08-27T17:15:14.535526Z",
      "url": "https://files.pythonhosted.org/packages/c6/f9/7c4191ab7e80e668df026b1b7582d8e90fcad761fabd0204dcb90379748f/octopusdpy-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}