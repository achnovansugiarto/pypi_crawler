{
  "info": {
    "author": "Dylan Walsh",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Numpy Dynamic Array\n\n---\n---\n![PyPI](https://img.shields.io/pypi/v/numpy_dynamic_array)\n![tests](https://raw.githubusercontent.com/dylanwal/numpy_dynamic_array/master/tests/badges/tests-badge.svg)\n![coverage](https://raw.githubusercontent.com/dylanwal/numpy_dynamic_array/master/tests/badges/coverage-badge.svg)\n![flake8](https://raw.githubusercontent.com/dylanwal/numpy_dynamic_array/master/tests/badges/flake8-badge.svg)\n![downloads](https://img.shields.io/pypi/dm/numpy_dynamic_array)\n![license](https://img.shields.io/github/license/dylanwal/numpy_dynamic_array)\n\nDynamically resizing Numpy array.\n\nA dynamic array expands as you add more elements. So you don't need to determine the size ahead of time. The version\npresent here is focused on being compatible with the typical Numpy indexing and functions.\n\n---\n\n## Installation\n\n```\npip install numpy_dynamic_array\n```\n\n---\n---\n\n## Usage\n\n### Basics\n\n```python\nfrom numpy_da import DynamicArray\n\ndata = DynamicArray(shape=2)\na = np.linspace(0, 9, 10)\ndata.append(a)  # requires resize (done automatically)\n\nprint(data)  # [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n\n```\n\n---\n\n### Indexing\n\nSetting values with indexing\n\n```python\ndata = DynamicArray(shape=2)\ndata.append(np.linspace(0, 9, 10))\ndata[3] = 40\nprint(data)  # [0, 1, 2, 3, 40, 5, 6, 7, 8, 9]\n```\n\nSetting values with indexing (outside current array size)\nSet `index_expansion=True`\n\n```python\ndata = DynamicArray(shape=2, index_expansion=True)\ndata[5] = 1\nprint(data)  # [0, 0, 0, 0, 0, 1]\n```\n\nSetting values with slices (outside current array size)\nSet `index_expansion=True`\n\n```python\ndata = DynamicArray(shape=2, index_expansion=True)\ndata[5:8] = [1, 2, 3]\nprint(data)  # [0, 0, 0, 0, 0, 1, 2, 3]\n```\n\n---\n\n### Operators\n\nEquality:\n\n```python\nnp_array = np.linspace(0, 9, 10)\ndata = DynamicArray()\ndata.append(np_array)\nprint(all(data == np_array))  # True\n```\n\nAddition:\n\n```python\nnp_array = np.linspace(0, 9, 10)\ndata = DynamicArray()\ndata.append(np_array)\nprint(all((data + 7.5) == (np_array + 7.5)))  # True\n```\n\nOther supported oparators:\n* floordiv (//)\n* mod (%)\n* mul (*)\n* neg (-)\n* pow (**)\n* truediv(/)\n* sub (-)\n* len (len())\n\n\n---\n### Numpy Functions\n\n```python\nnp_array = np.linspace(0, 9, 10)\ndata = DynamicArray()\ndata.append(np_array)\nprint(data.max())  # 9\n```\n\n```python\nnp_array = np.linspace(0, 9, 10)\ndata = DynamicArray()\ndata.append(np_array)\nprint(np.abs(data - 5))  # [5. 4. 3. 2. 1. 0. 1. 2. 3. 4.]\n```\n\n\n---\n### Multidimensional arrays\n\nUse the shape to specify initial ndarray with correct dimensions.\n\n```python\ndata = DynamicArray(shape=(2, 2))  # requires resize\na = np.linspace(0, 9, 10).reshape(5, 2)\ndata.append(a)\n```\n\n\n---\n<b> For more examples look at the tests folder. </b>\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dylanwal/numpy_dynamic_array",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "numpy-dynamic-array",
    "package_url": "https://pypi.org/project/numpy-dynamic-array/",
    "platform": "any",
    "project_url": "https://pypi.org/project/numpy-dynamic-array/",
    "project_urls": {
      "Homepage": "https://github.com/dylanwal/numpy_dynamic_array"
    },
    "release_url": "https://pypi.org/project/numpy-dynamic-array/0.0.1/",
    "requires_dist": [
      "numpy (>=1.22.0)",
      "pytest (>=6.0) ; extra == 'testing'",
      "pytest-cov (>=2.0) ; extra == 'testing'",
      "mypy (>=0.910) ; extra == 'testing'",
      "flake8 (>=3.9) ; extra == 'testing'"
    ],
    "requires_python": ">=3.9",
    "summary": "Create a numpy dynamic array.",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12520850,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ab9caaf8be5ea70c571cbe1630cb4d43e6df31a91c49e10d69f342f810b433f5",
          "md5": "8d8fc53e6d7bc4a829f1ca8681a00060",
          "sha256": "c878f973f5850c727e4cab9e7ae5baa2a4cffd3993fe1b8b3e1c613ab89256ae"
        },
        "downloads": -1,
        "filename": "numpy_dynamic_array-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8d8fc53e6d7bc4a829f1ca8681a00060",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 5450,
        "upload_time": "2022-01-09T17:09:44",
        "upload_time_iso_8601": "2022-01-09T17:09:44.243372Z",
        "url": "https://files.pythonhosted.org/packages/ab/9c/aaf8be5ea70c571cbe1630cb4d43e6df31a91c49e10d69f342f810b433f5/numpy_dynamic_array-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7de7a4cb1f1bbaacbccd3524c6b166ce11a953ac3c2e6fd9918d829b0883ebb0",
          "md5": "ccce35c15385724ecaf35b50e8380a1e",
          "sha256": "aa98bc8909055765a4803334af659f9d3ca81a4c88743830edb1620759d8ae10"
        },
        "downloads": -1,
        "filename": "numpy_dynamic_array-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ccce35c15385724ecaf35b50e8380a1e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 5569,
        "upload_time": "2022-01-09T17:09:45",
        "upload_time_iso_8601": "2022-01-09T17:09:45.591822Z",
        "url": "https://files.pythonhosted.org/packages/7d/e7/a4cb1f1bbaacbccd3524c6b166ce11a953ac3c2e6fd9918d829b0883ebb0/numpy_dynamic_array-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ab9caaf8be5ea70c571cbe1630cb4d43e6df31a91c49e10d69f342f810b433f5",
        "md5": "8d8fc53e6d7bc4a829f1ca8681a00060",
        "sha256": "c878f973f5850c727e4cab9e7ae5baa2a4cffd3993fe1b8b3e1c613ab89256ae"
      },
      "downloads": -1,
      "filename": "numpy_dynamic_array-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8d8fc53e6d7bc4a829f1ca8681a00060",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 5450,
      "upload_time": "2022-01-09T17:09:44",
      "upload_time_iso_8601": "2022-01-09T17:09:44.243372Z",
      "url": "https://files.pythonhosted.org/packages/ab/9c/aaf8be5ea70c571cbe1630cb4d43e6df31a91c49e10d69f342f810b433f5/numpy_dynamic_array-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7de7a4cb1f1bbaacbccd3524c6b166ce11a953ac3c2e6fd9918d829b0883ebb0",
        "md5": "ccce35c15385724ecaf35b50e8380a1e",
        "sha256": "aa98bc8909055765a4803334af659f9d3ca81a4c88743830edb1620759d8ae10"
      },
      "downloads": -1,
      "filename": "numpy_dynamic_array-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "ccce35c15385724ecaf35b50e8380a1e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 5569,
      "upload_time": "2022-01-09T17:09:45",
      "upload_time_iso_8601": "2022-01-09T17:09:45.591822Z",
      "url": "https://files.pythonhosted.org/packages/7d/e7/a4cb1f1bbaacbccd3524c6b166ce11a953ac3c2e6fd9918d829b0883ebb0/numpy_dynamic_array-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}