{
  "info": {
    "author": "steph-ben",
    "author_email": "stephane.benchimol@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3"
    ],
    "description": "# Fetching data\n\nTools for fetching data, and providing ready-to-use [Prefect](https://prefect.io) flows.\n\nFeatures:\n- Fetch from various protocol (Amazon S3, Copernicus Climate Data Store, HTTP)\n- Keep track of previously downloaded file using a sqlite\n- Temporary renaming of downloaded file (eg. .tmp extention)\n- Full-featured workflow using [Prefect](https://prefect.io)\n\nCurrent available protocol :\n- `datafetch.protocol.s3.S3ApiBucket` for fetching AWS buckets, in particular [AWS Opendata](https://registry.opendata.aws)\n- `datafetch.protocol.cds.ClimateDataStoreApi` for fetching from [Copernicus Climate Data Store](https://cds.climate.copernicus.eu)\n- `datafetch.protocol.http.SimpleHttpFetch` \n\nCurrent available weather-related fetchers:\n- `datefetch.weather.noaa.nwp.NoaaGfsS3` for fetching  [NOAA GFS from AWS S3](https://registry.opendata.aws/noaa-gfs-bdp-pds/)\n- `datefetch.weather.meteofrance.obs.MeteoFranceObservationFetch`\n- `datafetch.weather.ecmwf.EcmwfEra5CDS`\n- `datafetch.weather.ecmwf.EcmwfEra5S3`\n\n## Quickstart\n\n* Installation\n```\npip install git+https://github.com/steph-ben/datafetch.git\n```\n\n* Download a full GFS run using prefect flow\n\n```python\n>>> from datafetch.s3.flows import create_flow_download\n>>> flow = create_flow_download()\n>>> flow.run()\n```\n\n* Download single GFS file\n\n```python\n>>> from datafetch.s3 import NoaaGfsS3\n>>> s3api = NoaaGfsS3()\nNoaaGfsS3(bucket_name='noaa-gfs-bdp-pds')\n\n# Check availability\n>>> s3api.check_timestep_availability(\"20210201\", \"00\", \"003\")\n{'date_day': '20210201', 'run': '00', 'timestep': '003'}\n\n# Launch download\n>>> s3api.download_timestep(\"20210201\", \"00\", \"003\", download_dir=\"/tmp/\")\n{'fp': '/tmp/gfs.20210201/00/gfs.t00z.pgrb2.0p25.f003'}\n\n# Check file\n$ ls -lh /tmp/gfs.20210201/00/gfs.t00z.pgrb2.0p25.f003\n-rw-rw-r-- 1 steph steph 312M Feb  5 15:45 /tmp/gfs.20210201/00/gfs.t00z.pgrb2.0p25.f003\n```\n\n* Low-level API usage\n\n```python\n>>> from datafetch.s3 import NoaaGfsS3\n>>> s3api = NoaaGfsS3()\n\n# Check data availability\n>>> r = s3api.filter(Prefix=s3api.get_daterun_prefix(\"20210202\", \"00\"))\n>>> list(r)[:3]\n[s3.ObjectSummary(bucket_name='noaa-gfs-bdp-pds', key='gfs.20210202/00/gfs.t00z.pgrb2.0p25.anl'), \n s3.ObjectSummary(bucket_name='noaa-gfs-bdp-pds', key='gfs.20210202/00/gfs.t00z.pgrb2.0p25.anl.idx'), \n s3.ObjectSummary(bucket_name='noaa-gfs-bdp-pds', key='gfs.20210202/00/gfs.t00z.pgrb2.0p25.f000')]\n\n# Download\n>>> s3api.download('gfs.20210202/00/gfs.t00z.pgrb2.0p25.anl', destination_dir=\"/tmp/\")\nPosixPath('/tmp/gfs.20210202/00/gfs.t00z.pgrb2.0p25.anl')\n```\n\n## Fetching from AWS\n\nTODO\n\n## Fetching from Copernicus Climate Data Store (CDS)\n\nCopernicus CDS call itself a place to \"Dive into this wealth of information about the Earth's past, present and future climate.\"\n\nYou can browse and download all data from the official website. As well, a python API https://github.com/ecmwf/cdsapi is available\nfor downloading data from scripts.\n\nThe `datafetch.protocol.cds` package enhance `cdsapi` with the following features:\n- Make asynchronous request and check request status later on, using a sqlite\n- Keep track of previously downloaded file, using a sqlite\n- Temporary renaming of downloaded file (eg. .tmp extention)\n\n### Pre-requisites\n\nIn order to access those public data, you must:\n- Register a free account from https://cds.climate.copernicus.eu/user/register\n- Configure your user key, as defined here https://github.com/ecmwf/cdsapi#configure\n\nThen you can :\n- Browse all online resources from https://cds.climate.copernicus.eu/cdsapp#!/search?type=dataset\n- Simulate the needed information to download the resources from Donwload data > Show API request, example:\n\n```python\ncds_resource_name = 'reanalysis-era5-pressure-levels'\ncds_resource_param = {\n    'product_type': 'reanalysis',\n    'format': 'grib',\n    'variable': 'temperature',\n    'pressure_level': '850',\n    'year': '2021',\n    'month': '02',\n    'day': '18',\n    'time': [\n        '00:00', '06:00', '12:00',\n        '18:00',\n    ],\n}\n```\n\n### Usage\n\n#### Downloading a small resources\n\n```python\nfrom datafetch.protocol.cds import ClimateDataStoreApi\n\ncds = ClimateDataStoreApi()\nfp = cds.fetch(\n    cds_resource_name='reanalysis-era5-pressure-levels',\n    cds_resource_param={\n        'product_type': 'reanalysis',\n        'format': 'grib',\n        'variable': 'temperature',\n        'pressure_level': '850',\n        'year': '2021',\n        'month': '02',\n        'day': '18',\n        'time': ['00:00'],\n    },\n    destination_dir='/tmp/',\n    wait_until_complete=True\n)\n```\n\n#### Downloading a larger resource\n\nDefining the large resource to download :\n\n```python\ncds_resource_name = 'reanalysis-era5-pressure-levels'\ncds_resource_param = {\n    'product_type': 'reanalysis',\n    'format': 'grib',\n    'variable': 'temperature',\n    'pressure_level': '850',\n    'year': '2021',\n    'month': '02',\n    'day': '18',\n    'time': ['00:00'],\n}\n```\n\n\n* Submitting request to CDS, tracked into local sqlite\n\n```python\nfrom datafetch.protocol.cds import ClimateDataStoreApi\ncds = ClimateDataStoreApi()\n\ndb_record, created = cds.submit_to_queue(cds_resource_name, cds_resource_param)\nprint(db_record.queue_id)\n```\n\n\n* Check request status\n\n```python\n# Using initial request data (request id is retrieved from sqlite)\ndb_record = cds.check_queue(cds_resource_name, cds_resource_param)\nprint(db_record)\n\n# Or directly using queue id\nstate, reply = cds.check_queue_by_id(queue_id=\"xxx-xxx\")\nprint(state, reply)\n```\n\n\n* Download result\n```python\n# Using initial request data\nfp = cds.download_result(\n    cds_resource_name, cds_resource_param,\n    destination_dir=\"/tmp/\"\n)\nprint(fp)\n\n# Or directly using queue id\nfp = cds.download_result_by_id(queue_id=\"xxx-xxx\")\nprint(fp)\n```\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/steph-ben/datafetch",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "datafetch",
    "package_url": "https://pypi.org/project/datafetch/",
    "platform": "",
    "project_url": "https://pypi.org/project/datafetch/",
    "project_urls": {
      "Homepage": "https://github.com/steph-ben/datafetch"
    },
    "release_url": "https://pypi.org/project/datafetch/0.0.2/",
    "requires_dist": [
      "boto3 (==1.16.36)",
      "prefect[github] (==0.14.6)",
      "pydantic (==1.7.3)",
      "peewee (==3.14.0)",
      "cdsapi (==0.5.1)"
    ],
    "requires_python": "",
    "summary": "Tools for fetching data, and providing ready-to-use https://prefect.io flows",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9589875,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "91be4914699f55939112a8172da349883cab39e1bb5919390b6d73069472687b",
          "md5": "7e8e4be5b525b6c460135675fb84d55c",
          "sha256": "143739b71ba0660534b37a2a0a3feddfb200761b10eadb79fe33bc9b2d7dcabb"
        },
        "downloads": -1,
        "filename": "datafetch-0.0.1-py3.9.egg",
        "has_sig": false,
        "md5_digest": "7e8e4be5b525b6c460135675fb84d55c",
        "packagetype": "bdist_egg",
        "python_version": "3.9",
        "requires_python": null,
        "size": 41369,
        "upload_time": "2021-03-02T10:51:40",
        "upload_time_iso_8601": "2021-03-02T10:51:40.670554Z",
        "url": "https://files.pythonhosted.org/packages/91/be/4914699f55939112a8172da349883cab39e1bb5919390b6d73069472687b/datafetch-0.0.1-py3.9.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b081798380a00f37631ed2ef03242be2105f150dd0ecbe321c393701dc7b433e",
          "md5": "50ad7ca1f1f4ccc9a4f0ad37f9b5e441",
          "sha256": "8be4c5f9ab7f8668a0783f8c871179f7e50154d257914b4e5303d103f0aa500b"
        },
        "downloads": -1,
        "filename": "datafetch-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "50ad7ca1f1f4ccc9a4f0ad37f9b5e441",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 24706,
        "upload_time": "2021-03-02T10:51:39",
        "upload_time_iso_8601": "2021-03-02T10:51:39.046081Z",
        "url": "https://files.pythonhosted.org/packages/b0/81/798380a00f37631ed2ef03242be2105f150dd0ecbe321c393701dc7b433e/datafetch-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cfed5210bc61f41d43c067a959ccfe482c24b960df9905e96ce8f0254c7969a5",
          "md5": "3b24320b1185bfd220b1704607f17ce8",
          "sha256": "1e268675ad0f2cafe36fafb03cce869ed1ae6819b682aced7e01187f07d73483"
        },
        "downloads": -1,
        "filename": "datafetch-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3b24320b1185bfd220b1704607f17ce8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18567,
        "upload_time": "2021-03-02T10:51:42",
        "upload_time_iso_8601": "2021-03-02T10:51:42.106793Z",
        "url": "https://files.pythonhosted.org/packages/cf/ed/5210bc61f41d43c067a959ccfe482c24b960df9905e96ce8f0254c7969a5/datafetch-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "866a97400e6c5c524d5fcd0bdc6e7d349a8557859a5fa55d623dafc3a0eefa08",
          "md5": "24118ec5b200ec3a7f76b5c9b6a025ee",
          "sha256": "735d04a7058bebb27cbd31743373eedff544476e415b74279a31b4ab195ba713"
        },
        "downloads": -1,
        "filename": "datafetch-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "24118ec5b200ec3a7f76b5c9b6a025ee",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 26631,
        "upload_time": "2021-03-02T11:20:35",
        "upload_time_iso_8601": "2021-03-02T11:20:35.335433Z",
        "url": "https://files.pythonhosted.org/packages/86/6a/97400e6c5c524d5fcd0bdc6e7d349a8557859a5fa55d623dafc3a0eefa08/datafetch-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bdd6496085bf5409ad0987ac5c7a2a30950ce2d7a562456137dda17ec31450be",
          "md5": "346ff127aa2df6db528e3a88c3dba353",
          "sha256": "af3f3116d1ff912b708028a19797de633ef4efbf243d7e7ce87e986b5f47b12e"
        },
        "downloads": -1,
        "filename": "datafetch-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "346ff127aa2df6db528e3a88c3dba353",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20338,
        "upload_time": "2021-03-02T11:20:36",
        "upload_time_iso_8601": "2021-03-02T11:20:36.324778Z",
        "url": "https://files.pythonhosted.org/packages/bd/d6/496085bf5409ad0987ac5c7a2a30950ce2d7a562456137dda17ec31450be/datafetch-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "866a97400e6c5c524d5fcd0bdc6e7d349a8557859a5fa55d623dafc3a0eefa08",
        "md5": "24118ec5b200ec3a7f76b5c9b6a025ee",
        "sha256": "735d04a7058bebb27cbd31743373eedff544476e415b74279a31b4ab195ba713"
      },
      "downloads": -1,
      "filename": "datafetch-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "24118ec5b200ec3a7f76b5c9b6a025ee",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 26631,
      "upload_time": "2021-03-02T11:20:35",
      "upload_time_iso_8601": "2021-03-02T11:20:35.335433Z",
      "url": "https://files.pythonhosted.org/packages/86/6a/97400e6c5c524d5fcd0bdc6e7d349a8557859a5fa55d623dafc3a0eefa08/datafetch-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bdd6496085bf5409ad0987ac5c7a2a30950ce2d7a562456137dda17ec31450be",
        "md5": "346ff127aa2df6db528e3a88c3dba353",
        "sha256": "af3f3116d1ff912b708028a19797de633ef4efbf243d7e7ce87e986b5f47b12e"
      },
      "downloads": -1,
      "filename": "datafetch-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "346ff127aa2df6db528e3a88c3dba353",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 20338,
      "upload_time": "2021-03-02T11:20:36",
      "upload_time_iso_8601": "2021-03-02T11:20:36.324778Z",
      "url": "https://files.pythonhosted.org/packages/bd/d6/496085bf5409ad0987ac5c7a2a30950ce2d7a562456137dda17ec31450be/datafetch-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}