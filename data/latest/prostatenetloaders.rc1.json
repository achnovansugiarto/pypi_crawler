{
  "info": {
    "author": "Dimitris Zaridis",
    "author_email": "dimzaridis@email.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Prostate Net Loader\n\nProstate Net Loader contains functions to assist the Data Mining and loading process of Patients originated from the ProCAncer-AI Horizon's 2020 project.  \nThe package is under construction for the time being therefore any suggestion would be appreciated.\n\n## Installation\n\nInstall the project via pip or pull the repo\n\n```bash\npip install PROSTATENETLOADER == 0.0.1\n```\n    \n## Usage/Examples Series Parser tool\nDetailed explanation of the series parser tool is presented at the ParquetParser_Examples.ipynb\n## Usage/Examples PROSTATENETLOADER Module\n\nExamples could be found in Module_Examples.ipynb regarding the package. An example for a single patient is presented below\n\n### Single Patient\na) Import Libraries\n```python\nimport pandas as pd\nimport SimpleITK as sitk\nimport ProstateNetLoaders\n```\nb) Set the patient folder path and the csv extracted by the sequence selector tool\n```python\npth = \"PCa-...\"\nmetadata= pd.read_csv(\"results.csv\", \n                names=[\"patient_id\", \"study_uid\", \n                \"series_uid\", \"series_type\", \"series_type_heuristics\"])\n```\nc) Execute loaders and pick orientation (\"AX\",\"COR\", \"SAG\") and sequence (\"T2\",\"ADC\",\"DWI\") and whether to be AI sequence parser (Heuristics = False) or Heuristics = True\n```python\na = ProstateNetLoaders.ExecuteLoader.Execute(pth, metadata,  Heuristics = True) \na.LoadArrays(orientation=\"AX\", seq=\"T2\")\n```\nd) Get dictionaries where keys are the series names, values are the Image numpy arrays\n```python\npat,ann = a.GetItems() \n```\n\n### Batch Loading \n\nThe structure of the folders should be like this\n\n```python\npth_batch = \"Patients\"\npatients = {}\nSequence = \"T2\" # pick you sequence between \"T2\", \"ADC\", \"DWI\"\nT2_absence = [] # Store the names of the failed patients\nfor patient in os.listdir(pth_batch):\n    pat = os.path.join(pth_batch,patient)\n    a = ProstateNetLoaders.ExecuteLoader.Execute(pat, metadata)\n    try:\n        a.LoadArrays(orientation=\"AX\", seq=Sequence)\n        pat,ann = a.GetItems()\n        patients.update({patient:{Sequence:np.array(list(pat.values())[0]),\"Lesion\": np.array(list(ann.values())[0])}})\n    except: \n        T2_absence.append(patient)\n        continue\n```\n## Authors\n\n- [Dimitris Zaridis](dimzaridis@gmail.com)\n- [Harry Kalantzopoulos](xkalantzopoulos@gmail.com)\n- [Eugenia Mylona](mylona.eugenia@gmail.com)\n- [Nikolaos Tachos](ntachos@gmail.com)\n- Jos√© Guilherme Almeida\n\n\n## Badges\n\nAdd badges from somewhere like: [shields.io](https://shields.io/)\n\n[![MIT License](https://img.shields.io/badge/License-MIT-green.svg)](https://choosealicense.com/licenses/mit/)\n![Python](https://img.shields.io/badge/Python-3.6-green)\n\n\n## License\n\n[MIT](https://choosealicense.com/licenses/mit/)\n\n\n![Logo](https://www.procancer-i.eu/wp-content/uploads/2020/07/logo.png)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dzaridis/ProstateNetLoading",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ProstateNetLoaders",
    "package_url": "https://pypi.org/project/ProstateNetLoaders/",
    "platform": null,
    "project_url": "https://pypi.org/project/ProstateNetLoaders/",
    "project_urls": {
      "Homepage": "https://github.com/dzaridis/ProstateNetLoading"
    },
    "release_url": "https://pypi.org/project/ProstateNetLoaders/0.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Prostate Net loading functions",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16942539,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4ecc7398ecf459882ee111ff5bdf5ef3118ccc12737b0b2f14df0a25726ef830",
          "md5": "dd3c2033e0a9bd68e1d34ff1295c63f6",
          "sha256": "2fa323fec1b624736d297ac9a75104bf532b417ba45fe05e50c3adfb0fe3f853"
        },
        "downloads": -1,
        "filename": "ProstateNetLoaders-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "dd3c2033e0a9bd68e1d34ff1295c63f6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25598,
        "upload_time": "2023-02-20T12:00:28",
        "upload_time_iso_8601": "2023-02-20T12:00:28.169921Z",
        "url": "https://files.pythonhosted.org/packages/4e/cc/7398ecf459882ee111ff5bdf5ef3118ccc12737b0b2f14df0a25726ef830/ProstateNetLoaders-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4ecc7398ecf459882ee111ff5bdf5ef3118ccc12737b0b2f14df0a25726ef830",
        "md5": "dd3c2033e0a9bd68e1d34ff1295c63f6",
        "sha256": "2fa323fec1b624736d297ac9a75104bf532b417ba45fe05e50c3adfb0fe3f853"
      },
      "downloads": -1,
      "filename": "ProstateNetLoaders-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "dd3c2033e0a9bd68e1d34ff1295c63f6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 25598,
      "upload_time": "2023-02-20T12:00:28",
      "upload_time_iso_8601": "2023-02-20T12:00:28.169921Z",
      "url": "https://files.pythonhosted.org/packages/4e/cc/7398ecf459882ee111ff5bdf5ef3118ccc12737b0b2f14df0a25726ef830/ProstateNetLoaders-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}