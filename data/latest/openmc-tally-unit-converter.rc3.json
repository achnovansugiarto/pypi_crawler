{
  "info": {
    "author": "The openmc tally unit converter Development Team",
    "author_email": "mail@jshimwell.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering"
    ],
    "description": "\nThis Python package aims to help convert OpenMC tallies to user specified units.\n\n# Installation\n\n```bash\npip install openmc_tally_unit_converter\n```\n\n# Usage\n\nOpenMC tally results are save into a statepoint h5 file without units.\n\nThis package ascertains the base units of common tallies by inspecting their\ntally filters and scores.\n\nThe following worked example is for a heating tally. Other supported tallies\nare heating-local, flux, effective dose and damage-energy (used to find DPA)\ntallies are also supported.\n\n```python\nimport openmc_tally_unit_converter as otuc\nimport openmc\n\n# loads up tally from an openmc statepoint output file\nstatepoint = openmc.StatePoint(filepath=\"statepoint.2.h5\")\nmy_tally = statepoint.get_tally(name=\"my_cell_heating_tally\")\n\n# gets the base units of the tally\ntally = otuc.process_tally(tally=my_tally)\nprint(tally)\n>>> 218559.22320927 electron_volt / source_particle\n```\n\nThe package then allows users to scale the base tally units to different units. For example the package can easily convert cm to meters or electron volts to joules.\n\n```python\nconverted_tally = otuc.process_tally(\n    tally=my_tally,\n    required_units = \"joules / source_particle\"\n)\n\nprint(converted_tally)\n>>> 3.50170481e-14 Joules / source_particle\n```\n\nAdditional inputs can be applied to normalize the the tallies and convert the\nunits further:\n\n- The source strength of the source in particles per second can be specified with the ```strength_strength``` argument. This allows the tally results to be converted from the units of score per simulated particle to score per unit time (e.g seconds, hours, days etc).\n\n```python\nconverted_tally = otuc.process_tally(\n    tally=my_tally,\n    source_strength=1e20,  # input units for this argument are particles per second\n    required_units = \"joules / minute\"\n)\n\nprint(converted_tally)\n>>> 2.10102288e+08 joules / source_particle\n```\n\n- The volume of the cell in cm3 can also be specified with the ```volume``` argument. This allows the tally result to be converted from the base units to base units per unit volume.\n\n```python\nconverted_tally = otuc.process_tally(\n    tally=my_tally,\n    source_strength=13458.3,  # input units for this argument are particles per second\n    volume=12,  # input units are in cm3\n    required_units = \"joules / second / meter **3\"\n)\n\nprint(converted_tally)\n>>> 3.92724948e-05 Joules / meter ** 3 / second\n```\n\n:point_right: [Further examples](https://github.com/fusion-energy/openmc_tally_unit_converter/tree/main/examples)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/fusion-energy/openmc_tally_unit_converter",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "openmc-tally-unit-converter",
    "package_url": "https://pypi.org/project/openmc-tally-unit-converter/",
    "platform": "",
    "project_url": "https://pypi.org/project/openmc-tally-unit-converter/",
    "project_urls": {
      "Homepage": "https://github.com/fusion-energy/openmc_tally_unit_converter"
    },
    "release_url": "https://pypi.org/project/openmc-tally-unit-converter/0.3.1/",
    "requires_dist": [
      "pint"
    ],
    "requires_python": ">=3.6",
    "summary": "Convert OpenMC tallies into user friendly units",
    "version": "0.3.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12663539,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0caac47ab09e70c40642d4eeb8939af0e293879e47286a07c714b3889f9f992b",
          "md5": "7f079a0a7eb79e575f83eed42bdde5b7",
          "sha256": "105669ffaf674f838833f2ceb614a1a1e16560c949e8601cb4ff7ba8ca21aae3"
        },
        "downloads": -1,
        "filename": "openmc_tally_unit_converter-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7f079a0a7eb79e575f83eed42bdde5b7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7673,
        "upload_time": "2021-11-15T11:04:22",
        "upload_time_iso_8601": "2021-11-15T11:04:22.379842Z",
        "url": "https://files.pythonhosted.org/packages/0c/aa/c47ab09e70c40642d4eeb8939af0e293879e47286a07c714b3889f9f992b/openmc_tally_unit_converter-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "22f1cb07de243ad5e05aa25852438b9220566549e2a4a4a39117dfc12e8a8ab8",
          "md5": "5e85b593b6a1fc29c38e25a3185a535a",
          "sha256": "31c40376b58013d1168601c446354dd9c1053e378e934f8f20d4948d42cdc7d7"
        },
        "downloads": -1,
        "filename": "openmc_tally_unit_converter-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5e85b593b6a1fc29c38e25a3185a535a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7592,
        "upload_time": "2021-11-15T11:04:23",
        "upload_time_iso_8601": "2021-11-15T11:04:23.448907Z",
        "url": "https://files.pythonhosted.org/packages/22/f1/cb07de243ad5e05aa25852438b9220566549e2a4a4a39117dfc12e8a8ab8/openmc_tally_unit_converter-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0796ea18f93f8f5771102dda1b32f4542089c2f6e3ead935d0c0bd9fd1f9df52",
          "md5": "9b4501b68d5f68e484e210c47bd52c3a",
          "sha256": "a11361653efe01e9db159fcaba17ddad0fb7b00b38d46e1ce18136afd230a5bb"
        },
        "downloads": -1,
        "filename": "openmc_tally_unit_converter-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9b4501b68d5f68e484e210c47bd52c3a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7978,
        "upload_time": "2021-11-17T19:52:29",
        "upload_time_iso_8601": "2021-11-17T19:52:29.290004Z",
        "url": "https://files.pythonhosted.org/packages/07/96/ea18f93f8f5771102dda1b32f4542089c2f6e3ead935d0c0bd9fd1f9df52/openmc_tally_unit_converter-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "676eec9f71b77468f79ab65a3446029e8a7b7e30a7ced006a98d5b6febd3cd71",
          "md5": "bb9cbd525cfd4bb9015bd0a6f00b751d",
          "sha256": "f363852ab8eec42640ccf436f8fefb9e7050a0da0b81dc10ec20c58cd94844cf"
        },
        "downloads": -1,
        "filename": "openmc_tally_unit_converter-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bb9cbd525cfd4bb9015bd0a6f00b751d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8129,
        "upload_time": "2021-11-17T19:52:30",
        "upload_time_iso_8601": "2021-11-17T19:52:30.371849Z",
        "url": "https://files.pythonhosted.org/packages/67/6e/ec9f71b77468f79ab65a3446029e8a7b7e30a7ced006a98d5b6febd3cd71/openmc_tally_unit_converter-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c9568efd6f941f9a8f717510c20743726229cec68cb61aabbe8230810d202d63",
          "md5": "8ff0f0ca8c2d3baeb120c33382293648",
          "sha256": "10f9d94fa4dddc1d9ab2cfcbe539e94b357eff4c54ed5f26efc2fcf46c7f7f7e"
        },
        "downloads": -1,
        "filename": "openmc_tally_unit_converter-0.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8ff0f0ca8c2d3baeb120c33382293648",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8081,
        "upload_time": "2022-01-23T21:12:54",
        "upload_time_iso_8601": "2022-01-23T21:12:54.062999Z",
        "url": "https://files.pythonhosted.org/packages/c9/56/8efd6f941f9a8f717510c20743726229cec68cb61aabbe8230810d202d63/openmc_tally_unit_converter-0.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2c3f90a979829b045d00bdd2654bf86ae88a9791a7fa04b8d6eb133e01fc810f",
          "md5": "159f4c1d53318679fba4ba77d2a5432a",
          "sha256": "55efb2001b3d271f133bf8e33cf6c6e3741b80c8aabb5bd5aaada27b0e5ef734"
        },
        "downloads": -1,
        "filename": "openmc_tally_unit_converter-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "159f4c1d53318679fba4ba77d2a5432a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8244,
        "upload_time": "2022-01-23T21:12:55",
        "upload_time_iso_8601": "2022-01-23T21:12:55.578005Z",
        "url": "https://files.pythonhosted.org/packages/2c/3f/90a979829b045d00bdd2654bf86ae88a9791a7fa04b8d6eb133e01fc810f/openmc_tally_unit_converter-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c9568efd6f941f9a8f717510c20743726229cec68cb61aabbe8230810d202d63",
        "md5": "8ff0f0ca8c2d3baeb120c33382293648",
        "sha256": "10f9d94fa4dddc1d9ab2cfcbe539e94b357eff4c54ed5f26efc2fcf46c7f7f7e"
      },
      "downloads": -1,
      "filename": "openmc_tally_unit_converter-0.3.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8ff0f0ca8c2d3baeb120c33382293648",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 8081,
      "upload_time": "2022-01-23T21:12:54",
      "upload_time_iso_8601": "2022-01-23T21:12:54.062999Z",
      "url": "https://files.pythonhosted.org/packages/c9/56/8efd6f941f9a8f717510c20743726229cec68cb61aabbe8230810d202d63/openmc_tally_unit_converter-0.3.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2c3f90a979829b045d00bdd2654bf86ae88a9791a7fa04b8d6eb133e01fc810f",
        "md5": "159f4c1d53318679fba4ba77d2a5432a",
        "sha256": "55efb2001b3d271f133bf8e33cf6c6e3741b80c8aabb5bd5aaada27b0e5ef734"
      },
      "downloads": -1,
      "filename": "openmc_tally_unit_converter-0.3.1.tar.gz",
      "has_sig": false,
      "md5_digest": "159f4c1d53318679fba4ba77d2a5432a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 8244,
      "upload_time": "2022-01-23T21:12:55",
      "upload_time_iso_8601": "2022-01-23T21:12:55.578005Z",
      "url": "https://files.pythonhosted.org/packages/2c/3f/90a979829b045d00bdd2654bf86ae88a9791a7fa04b8d6eb133e01fc810f/openmc_tally_unit_converter-0.3.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}