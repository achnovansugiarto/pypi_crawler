{
  "info": {
    "author": "Michael Thingnes",
    "author_email": "thimic@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Twicorder Search\nA Twitter crawler for Python 3 based on Twitter’s public API.\n\n[![DOI](https://zenodo.org/badge/185946239.svg)](https://zenodo.org/badge/latestdoi/185946239)\n\n## Supported end points\nTwicorder Search currently supports the following end points:\n\n* `/1.1/followers/ids`\n* `/1.1/friends/list`\n* `/1.1/search/tweets`\n* `/1.1/statuses/lookup`\n* `/1.1/statuses/user_timeline`\n* `/1.1/users/lookup`\n\nTo add a new end point, fork the repository and add a new query type to \n`src/twicorder/queries/request/endpoints`. New endpoints should inherit from \n`BaseQuery` or one of its derivatives and must implement `name`, `endpoint` and \n`result_type`.\n\n## Installation\nTwicorder Search can be installed using PIP:\n\n```bash\npip install twicorder-search\n```\n\nFor a more comprehensive guide using a virtual environment, see \n[Installation using Python 3 virtual environments](../main/INSTALL.md)\n\n## Running Twicorder\nAfter installing, there will be a new executable available, `twicorder`. Use this to run the \napplication:\n```bash\ntwicorder\nUsage: twicorder [OPTIONS] COMMAND [ARGS]...\n\n  Twicorder Search\n\nOptions:\n  --project-dir TEXT  Root directory for project\n  --help              Show this message and exit.\n\nCommands:\n  run    Start crawler\n  utils  Utility functions\n\n```\n\nThe project dir is where Twicorder stores temporary files and logs. To specify a project directory \nother than the default, use the flag `--project-dir`.:\n\n```bash\ntwicorder --project-dir /path/to/my_project\n```\n\nIf not provided, the current working directory is used.\n\n## Configuration\nTwicorder can be configured by passing parameters in the command line interface or by setting \nenvironment variables. The environment variables are laid out similar to their CLI counterparts.\n\n**Specifying a task generator with CLI**\n```bash\ntwicorder run --task-gen user_timeline \n```\n\n**Specifying a task generator with environment variable**\n```bash\nexport TWICORDER_RUN_TASK_GEN=\"user_timeline\"\n```\n\nFull list of CLI options:\n\n```bash\ntwicorder run --help\nUsage: twicorder run [OPTIONS]\n\n  Start crawler\n\nOptions:\n  --consumer-key TEXT             Twitter consumer key  [required]\n  --consumer-secret TEXT          Twitter consumer secret  [required]\n  --access-token TEXT             Twitter access token  [required]\n  --access-secret TEXT            Twitter access secret  [required]\n  --out-dir TEXT                  Custom output dir for crawled data\n  --out-extension TEXT            File extension for crawled files (.txt or\n                                  .zip)\n  --task-file TEXT                Yaml file containing tasks to execute\n  --full-user-mentions            For mentions, look up full user data\n  --appdata-token TEXT            App data token\n  --user-lookup-interval INTEGER  Minutes between lookups of the same user\n                                  [default: 15]\n  --appdata-timeout FLOAT         Seconds to timeout for internal data store\n                                  [default: 5.0]\n  --task-gen <TEXT TEXT>...       Task generator(s) to use. Example: \"user_id\n                                  name_pattern=/tmp/**/*_ids.txt,delimiter=,\"\n                                  [default: config]\n  --remove-duplicates             Ensures duplicated tweets/users are not\n                                  recorded. Saves space, but can slow down the\n                                  crawler.  [default: True]\n  --help                          Show this message and exit.\n\n```\n\n## Task generators\n\nTwicorder can be configured with one or more task generators for creating API requests. \n\n### Tasks file\nThe tasks file is the default task generator for Twicorder and is used when no generator is \nspecified. By default Twocorder searches the project root for a file called `tasks.yaml`.\n\n```bash\nPROJECT_ROOT\n ├── appdata\n │   └── twicorder.sql\n ├── logs\n │   └── twicorder.log\n └── tasks.yaml\n```\n\nIt is however possible to specify a different file path using `--task-file`:\n\n```bash\ntwicorder --task-file /path/to/my_file.yaml\n```\n\n#### Example tasks.yaml file\n\nUse this file to define the queries you wish to run and where to store their output data, relative \nto the output directory. Frequency is given in minutes and defines how often a new scan will be \ntriggered for the given query.\n\n```yaml\n# Tasks\n#\n# Queries are added on the form listed below.\n#\n# free_search:                  # endpoint name\n#   - frequency: 60             # Interval between repeating queries in minutes\n#     output: github/mentions   # Output directory, relative to project directory\n#     kwargs:                   # Keyword Arguments to feed to endpoint\n#       q: @github              #   \"q\" for \"query\" in the case of free_search\n#\n# See https://developer.twitter.com/en/docs/tweets/search/guides/standard-operators\n# for how to use free search to find mentions, replies, hashtags etc.\n#\n# See https://developer.twitter.com/en/docs/tweets/search/api-reference/get-search-tweets\n# for keyword arguments to use with search.\n#\n# See https://developer.twitter.com/en/docs/tweets/timelines/api-reference/get-statuses-user_timeline\n# for keyword arguments to use with user timelines.\n\nuser_timeline:\n  - frequency: 60\n    output: \"github/timeline\"\n    kwargs:\n      screen_name: \"github\"\n  - frequency: 120\n    output: \"nasa/timeline\"\n    kwargs:\n      screen_name: \"NASA\"\n\nfree_search:\n  - frequency: 60\n    output: \"github/mentions\"\n    kwargs:\n      q: \"@github\"\n  - frequency: 60\n    output: \"github/replies\"\n    kwargs:\n      q: \"to:github\"\n  - frequency: 60\n    output: \"github/hashtags\"\n    kwargs:\n      q: \"#github\"\n\n```\n\n### User Lookup\n\nThe User Lookup generator takes one or more files with delimited user ids or \nuser names as input. It then generates tasks to fetch user objects for each id \nor user name.\n\n```bash\ntwicorder run --task-gen user_lookups name_pattern=/taskgen/*.txt,lookup_method=username\n```\n\n| Keyword Argument | Type  | Description                |\n| ---------------- | ----- | -------------------------- |\n| `name_pattern`   | `str` | POSIX style search pattern |\n| `delimiter`      | `str` | Default: `\"\\n\"`            |\n| `lookup_method`  | `str` | `\"id\"` or `\"username\"`     |\n\n### User Timeline\n\nThe User Timeline generator takes one or more files with delimited user ids or \nuser names as input. It then generates tasks to fetch tweets for each user's \ntimeline.\n\n```bash\ntwicorder run --task-gen user_timeline name_pattern=/taskgen/*.txt,lookup_method=id,max_requests=5 \n```\n\n| Keyword Argument | Type  | Description                                                            |\n| ---------------- | ----- | ---------------------------------------------------------------------- |\n| `name_pattern`   | `str` | POSIX style search pattern                                             |\n| `delimiter`      | `str` | Default: `\"\\n\"`                                                        |\n| `lookup_method`  | `str` | `\"id\"` or `\"username\"`                                                 |\n| `max_requests`   | `int` | Max number of requests before the task is considered done              |\n| `max_age`        | `int` | Max age in days for a tweet before the query should be considered done |\n\n## Create new task generator\n\nTwicorder supports creating custom task generators. To create a generator, create a class that inherits from `BaseTaskGenerator` and \nimplement the `name` class attribute and the `fetch()` method. See \n`twicorder/tasks/generators/user_lookup_generator.py` for an example.\n\nPlace the custom task \ngenerator in a suitable directory and point to said directory with the \nenvironment variable `TWICORDER_TASKGEN_PATH`:\n\n```bash\nexport TWICORDER_TASKGEN_PATH=\"/path/to/my/generator_dir\"\n```\n\nThe task generator file name must end in `_generator.py`:\n\n```bash\n$TWICORDER_TASKGEN_PATH\n ├── __init__.py\n └── custom_task_generator.py\n```\n\n## Clearing temporary files or logs\n\nUse the `utils` command to clean up temporary files and logs:\n\n```bash\ntwicorder utils --help\nUsage: twicorder utils [OPTIONS]\n\n  Utility functions\n\nOptions:\n  --clear-cache  Clear cache and exit\n  --purge-logs   Purge logs and exit\n  --help         Show this message and exit.\n\n```\n\n## Docker\n\n### Docker Compose Examples\n\nCrawl data based on entries in the [tasks file](#tasks-file).\n\n```yaml\nversion: \"3\"\n\nservices:\n  twicorder-search:\n    build: ./\n    image: twicorder-search:dev\n    restart: unless-stopped\n    container_name: twicorder-search\n    network_mode: bridge\n    environment:\n      - TWICORDER_RUN_CONSUMER_KEY=XXXXXXXXXXXXXXXXXXXXXXXXX\n      - TWICORDER_RUN_CONSUMER_SECRET=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n      - TWICORDER_RUN_ACCESS_TOKEN=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n      - TWICORDER_RUN_ACCESS_SECRET=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n      - TWICORDER_RUN_REMOVE_DUPLICATES=0\n      - TWICORDER_RUN_APPDATA_TOKEN=search\n    volumes:\n      - /home/user/project/data:/data\n      - /home/user/project/config:/config\n```\n\nCrawl tweets using the `user_timeline` task generator. The generator reads all *.txt files located \nin `/home/user/project/taskgen` on the host system (`name_pattern=/taskgen/*.txt`) and expects to \nfind one user ID (`lookup_method=id`) per line. For each user the number of page results are limited \nto 5 (`max_requests=5`).\n\n```yaml\nversion: \"3\"\n\nservices:\n  twicorder-timeline:\n    build: ./\n    image: twicorder-timeline:dev\n    restart: on-failure\n    container_name: twicorder-timeline\n    network_mode: bridge\n    environment:\n      - TWICORDER_RUN_CONSUMER_KEY=XXXXXXXXXXXXXXXXXXXXXXXXX\n      - TWICORDER_RUN_CONSUMER_SECRET=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n      - TWICORDER_RUN_ACCESS_TOKEN=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n      - TWICORDER_RUN_ACCESS_SECRET=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n      - TWICORDER_RUN_FULL_USER_MENTIONS=0\n      - TWICORDER_RUN_REMOVE_DUPLICATES=0\n      - TWICORDER_RUN_APPDATA_TOKEN=timeline\n      - TWICORDER_RUN_TASK_GEN=user_timeline name_pattern=/taskgen/*.txt,lookup_method=id,max_requests=5\n    volumes:\n      - /home/user/project/data:/data\n      - /home/user/project/taskgen:/taskgen\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/thimic/twicorder-search/archive/v0.3.0.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/thimic/twicorder-search",
    "keywords": "twitter,crawler,research",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "twicorder-search",
    "package_url": "https://pypi.org/project/twicorder-search/",
    "platform": "",
    "project_url": "https://pypi.org/project/twicorder-search/",
    "project_urls": {
      "Bug Tracker": "https://github.com/thimic/twicorder-search/issues",
      "Download": "https://github.com/thimic/twicorder-search/archive/v0.3.0.tar.gz",
      "Homepage": "https://github.com/thimic/twicorder-search"
    },
    "release_url": "https://pypi.org/project/twicorder-search/0.3.0/",
    "requires_dist": [
      "Authlib (~=0.14.3)",
      "PyYAML (~=5.1)",
      "aiosqlite (~=0.13.0)",
      "asyncclick (~=7.0.9)",
      "asyncio (~=3.4.3)",
      "click (~=7.1.2)",
      "httpx (~=0.13.3)"
    ],
    "requires_python": ">=3.7",
    "summary": "A Twitter crawler for Python 3 based on Twitter's public API",
    "version": "0.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11374839,
  "releases": {
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9fc6e3d3348896e3fb4e45165509e5e0d21ad06baca11abd18126dfb9536281f",
          "md5": "5179c79682db2f22e92e52144df61921",
          "sha256": "efdd321e3723cf78c1607b0004a4d8d5482c8eab271804d1485811fe9a26df9e"
        },
        "downloads": -1,
        "filename": "twicorder-search-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "5179c79682db2f22e92e52144df61921",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14901,
        "upload_time": "2019-05-12T10:59:57",
        "upload_time_iso_8601": "2019-05-12T10:59:57.273077Z",
        "url": "https://files.pythonhosted.org/packages/9f/c6/e3d3348896e3fb4e45165509e5e0d21ad06baca11abd18126dfb9536281f/twicorder-search-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0e8b07c159c2e745d26cef653a4d9eb941baac0136721ab5a016c705e3645741",
          "md5": "28b6638a98df3b8b4a9604a6928e9db7",
          "sha256": "c59a87c5439f9deca138b73960a3847465353cefc3402824ee07a8db7efaa034"
        },
        "downloads": -1,
        "filename": "twicorder-search-0.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "28b6638a98df3b8b4a9604a6928e9db7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14910,
        "upload_time": "2019-05-14T03:04:12",
        "upload_time_iso_8601": "2019-05-14T03:04:12.559331Z",
        "url": "https://files.pythonhosted.org/packages/0e/8b/07c159c2e745d26cef653a4d9eb941baac0136721ab5a016c705e3645741/twicorder-search-0.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e7aa70ead09664f6e52e57819bfddd9105ca60f3571bd72fcf634514d87b6d0c",
          "md5": "498c1052efeb562583b88e53b86ba6b1",
          "sha256": "fe1a964abe520eff21541388f4ff9cf73cfbfbc386ba6fdaf813b8328c50e9f8"
        },
        "downloads": -1,
        "filename": "twicorder-search-0.2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "498c1052efeb562583b88e53b86ba6b1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15036,
        "upload_time": "2019-05-14T09:55:46",
        "upload_time_iso_8601": "2019-05-14T09:55:46.212564Z",
        "url": "https://files.pythonhosted.org/packages/e7/aa/70ead09664f6e52e57819bfddd9105ca60f3571bd72fcf634514d87b6d0c/twicorder-search-0.2.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a406da1255f769a46fcbdf7e9f0f13a8f92024e0068342f809d6c3b213ecaa5c",
          "md5": "274d80eae0b6a03f753541ed3b249b50",
          "sha256": "9274690f8e08277853d90191f6dfb00b89b1914a44705ae165265f5bffee0273"
        },
        "downloads": -1,
        "filename": "twicorder-search-0.2.6.tar.gz",
        "has_sig": false,
        "md5_digest": "274d80eae0b6a03f753541ed3b249b50",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15029,
        "upload_time": "2019-05-14T17:53:31",
        "upload_time_iso_8601": "2019-05-14T17:53:31.016142Z",
        "url": "https://files.pythonhosted.org/packages/a4/06/da1255f769a46fcbdf7e9f0f13a8f92024e0068342f809d6c3b213ecaa5c/twicorder-search-0.2.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d586e0aa4bda364567e845a2785616f307f25ff57bdc84be0173801edcf48a76",
          "md5": "e825efc2ba71a895913d30359e1f8a8d",
          "sha256": "71480c5f738d4c391ca71efcd04e0e01b02f56afe8dab38389fdc30aad4b61b7"
        },
        "downloads": -1,
        "filename": "twicorder-search-0.2.7.tar.gz",
        "has_sig": false,
        "md5_digest": "e825efc2ba71a895913d30359e1f8a8d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15094,
        "upload_time": "2019-05-19T11:40:43",
        "upload_time_iso_8601": "2019-05-19T11:40:43.613204Z",
        "url": "https://files.pythonhosted.org/packages/d5/86/e0aa4bda364567e845a2785616f307f25ff57bdc84be0173801edcf48a76/twicorder-search-0.2.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "147abc7f52cca4c052e8b722237ca74ca9632b9718f1226db16582d887ff4429",
          "md5": "70f5b6e272010949333199b0b402ef51",
          "sha256": "53ae2209255cf64990a7f5612a8ce63c08b53b32c627e85c0daba1b8f3b6bd1a"
        },
        "downloads": -1,
        "filename": "twicorder-search-0.2.9.tar.gz",
        "has_sig": false,
        "md5_digest": "70f5b6e272010949333199b0b402ef51",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15095,
        "upload_time": "2019-05-20T22:48:55",
        "upload_time_iso_8601": "2019-05-20T22:48:55.289351Z",
        "url": "https://files.pythonhosted.org/packages/14/7a/bc7f52cca4c052e8b722237ca74ca9632b9718f1226db16582d887ff4429/twicorder-search-0.2.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a92802d39922f8a3c6a7bb55f3d33f1f6d700c8641c8ee72e2a5f191d245613e",
          "md5": "9163b68f98885961ba05155cfaae433a",
          "sha256": "22e5388d4d725a703a7c1fc96963ba7181b7e19d706ebc39902fb52d32312bfd"
        },
        "downloads": -1,
        "filename": "twicorder_search-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9163b68f98885961ba05155cfaae433a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 50147,
        "upload_time": "2021-09-06T08:47:11",
        "upload_time_iso_8601": "2021-09-06T08:47:11.881640Z",
        "url": "https://files.pythonhosted.org/packages/a9/28/02d39922f8a3c6a7bb55f3d33f1f6d700c8641c8ee72e2a5f191d245613e/twicorder_search-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d833d7b7116a62d71c148ed67e9b5a95dbe9eb489c6aaa9e5868a5c4d9fa261b",
          "md5": "ed7886d4cf3d7692836e191a95340c66",
          "sha256": "842aa8bbb6d47591007df75c228d726f52ad25f52297ddb550e878c2ecb6311f"
        },
        "downloads": -1,
        "filename": "twicorder_search-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ed7886d4cf3d7692836e191a95340c66",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 36394,
        "upload_time": "2021-09-06T08:47:13",
        "upload_time_iso_8601": "2021-09-06T08:47:13.091651Z",
        "url": "https://files.pythonhosted.org/packages/d8/33/d7b7116a62d71c148ed67e9b5a95dbe9eb489c6aaa9e5868a5c4d9fa261b/twicorder_search-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a92802d39922f8a3c6a7bb55f3d33f1f6d700c8641c8ee72e2a5f191d245613e",
        "md5": "9163b68f98885961ba05155cfaae433a",
        "sha256": "22e5388d4d725a703a7c1fc96963ba7181b7e19d706ebc39902fb52d32312bfd"
      },
      "downloads": -1,
      "filename": "twicorder_search-0.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9163b68f98885961ba05155cfaae433a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 50147,
      "upload_time": "2021-09-06T08:47:11",
      "upload_time_iso_8601": "2021-09-06T08:47:11.881640Z",
      "url": "https://files.pythonhosted.org/packages/a9/28/02d39922f8a3c6a7bb55f3d33f1f6d700c8641c8ee72e2a5f191d245613e/twicorder_search-0.3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d833d7b7116a62d71c148ed67e9b5a95dbe9eb489c6aaa9e5868a5c4d9fa261b",
        "md5": "ed7886d4cf3d7692836e191a95340c66",
        "sha256": "842aa8bbb6d47591007df75c228d726f52ad25f52297ddb550e878c2ecb6311f"
      },
      "downloads": -1,
      "filename": "twicorder_search-0.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "ed7886d4cf3d7692836e191a95340c66",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 36394,
      "upload_time": "2021-09-06T08:47:13",
      "upload_time_iso_8601": "2021-09-06T08:47:13.091651Z",
      "url": "https://files.pythonhosted.org/packages/d8/33/d7b7116a62d71c148ed67e9b5a95dbe9eb489c6aaa9e5868a5c4d9fa261b/twicorder_search-0.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}