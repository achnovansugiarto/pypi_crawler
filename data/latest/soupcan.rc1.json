{
  "info": {
    "author": "Stephen McCalman",
    "author_email": "stephen.mccalman@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# **SoupCan** : Your BeautifulSoup in a Can\n\n*SoupCan* aims to simplify the process of designing a Python tool for extracting and displaying webpage content.\n\nIt builds on the wonderful library, Beautiful Soup,  allowing you to leverage this library's powerful features in your tool.\n\nAll you need to do to design your tool with SoupCan is to define the kinds of content that you wish to extract, select which parts of the content you wish to display, and SoupCan will do the rest.\n\nSoupCan is ideal for designing a tool that works in a Jupyter notebook, as SoupCan, out of the box, supports HTML rendering of content in notebook cells.\n\n## Prerequisites\n\nTo get started with SoupCan, you'll need to have:\n\n* some familiarity with HTML generally, and particularly with the HTML of the webpage that you wish to extract and display content from.\n\n* knowledge of the Beautiful Soup library, and especially its search method, `find()`.\n\n* an understanding of object-oriented programming concepts, and how you apply them in Python.\n\n## Software Requirements\n\nTo use SoupCan in your tool, you'll need to have:\n\n* Python 3.6+; and \n* the Beautiful Soup library\n\nFor information on the various ways you can install the Beautiful Soup library, see this library's own [documentation](https://www.crummy.com/software/BeautifulSoup/bs4/doc/#installing-beautiful-soup).\n\n## Installation\n\nTo install SoupCan, execute the following in your local or virtual Python environment:\n\n```bash\npip install soupcan\n```\n\nIf you don't already have the Beautiful Soup library installed in your environment, this command will install this library (from the PyPI repository) too. \n\nUnder the hood, the Beautiful Soup library, by default, uses the [HTML parser](https://docs.python.org/3/library/html.parser.html#module-html.parser) that comes with the standard libray, [html](https://docs.python.org/3/library/html.html). If you wish to use a third-party parser, like [lxml](https://lxml.de/) or [html5lib](https://github.com/html5lib/), instead, you'll have to install them yourself, which you can do by adding `lxml html5lub` to the above command. \n\nIt is also up to you how you get the HTML content from a webpage. SoupCan is not a webscraper package, and so you'll have to implement those procedures yourself when designing your tool.\n\nFinally, SoupCan does not include any Jupyter software as a dependency.  You or your tool users will need to have Jupyter, if you wish to make the most of SoupCan's display features.\n\n## Basic example\n\nLet's design a simple package with SoupCan, and apply it to a basic html document:\n\n```Python\nimport soupcan as sc\n\nclass Paragraph(sc.Content):\n    \"\"\"Return a Content-typed object for <p></p> element\"\"\"\n    _KIND = {\"name\": \"p\"}\n    \n    text = sc.Property(lambda self: self.text, doc=\"Return text of paragraph\")\n    \nclass Paragraphs(sc.Contents):\n    \"\"\"Return a Contents-typed object with Paragraph-typed object\"\"\"\n    _CONTENT = Paragraph\n    \nclass Body(sc.Content):\n    \"\"\"Return a Content-typed object for a <body></body> element\"\"\"\n    _KIND = {\"name\": \"body\"}  \n\n    from_string = sc.AltConstructor() \n    \n    paragraphs = sc.Property(Paragraphs, doc=\"Return paragraphs\")    \n\n## example html document (originally used in the BeautifulSoup documentation)\n    \nhtml= \"\"\"\n<html><head><title>The Dormouse's story</title></head>\n<body>\n<p class=\"title\"><b>The Dormouse's story</b></p>\n<p class=\"story\">Once upon a time there were three little sisters; and their names were\n<a href=\"http://example.com/elsie\" class=\"sister\" id=\"link1\">Elsie</a>,\n<a href=\"http://example.com/lacie\" class=\"sister\" id=\"link2\">Lacie</a> and\n<a href=\"http://example.com/tillie\" class=\"sister\" id=\"link3\">Tillie</a>;\nand they lived at the bottom of a well.</p>\n\n<p class=\"story\">...</p>\n\"\"\"\n\nbody = Body.from_string(html,'html.parser')\n\nprint(body.paragraphs[0].text)  # print The Dormouse's story as text\n```\n\nYou could instead create a `Body`-typed object by initialising it with a BeautifulSoup object, like follows:\n\n```Python\nfrom bs4 import BeautifulSoup\nsoup = BeautifulSoup(html, features='html.parser')\nbody2  = Body(soup)\n```                     \n\nHowever, the `from_string()` alternative-constructor method, implemented using SoupCan's `AltConstructor` class, does all of this for you, under the hood. \n\nYou can extend this example package:\n\n* by adding other Content-types, say for a Hyperlink class \n\n```Python\nclass Hyerlink(sc.Content):  \n    \"\"\"Return a Content-type object for an <a></a> element\"\"\"    \n    _KIND = {\"name\": \"a\"}\n\n ```\n  \n* by creating separate a Content-type for more specific piece of content, say for a `class=title` paragraph:\n\n```Python\nclass TitlePargraph(sc.Content):        \n    \"\"\"Return a Content-type object for a <p class='title'></p> element\"\"\"    \n    _KIND = {\"name\": \"p\", 'class_':\"title\"}\n\n```\n\nExtend an existing Content type, by subclassing it and then adding  \n(say using the Property class):\n\n```Python\nclass Link(Hyerlink):\n    \"\"\"Return a extented Content-type object for an <a></a> element.\"\"\"\n    \n    href = sc.Property(lambda self: self.href, doc = \"Return hyperlink reference\")    \n    text = sc.Property(lambda self: self.text, doc= \"Return hyperlink text\")\n```\n\nThe `Propery` class is a (non-data) descriptor class. It works much like a property method:\n\n```Python\nclass ExtendedTitlePargraph(TitlePargraph):\n    \n    @property\n    def text(self):\n        \"Return text string\"\n        return self._element.text\n```\nIn the above, the `self._element` is the underlying BeautifulSoup object at the `<p>`element (with the \"class=title\" attribute).\n\n\n\n    \n## License\n[BSD 3](LICENSE)\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/stephenmccalman/soupcan",
    "keywords": "",
    "license": "BSD 3-Clause License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "soupcan",
    "package_url": "https://pypi.org/project/soupcan/",
    "platform": "",
    "project_url": "https://pypi.org/project/soupcan/",
    "project_urls": {
      "Bug Tracker": "https://github.com/stephenmccalman/soupcan/issues",
      "Homepage": "https://github.com/stephenmccalman/soupcan"
    },
    "release_url": "https://pypi.org/project/soupcan/0.0.2.dev0/",
    "requires_dist": [
      "beautifulsoup4"
    ],
    "requires_python": ">=3.6",
    "summary": "simplifies the process of designing a Python tool for extracting and displaying webpage content.",
    "version": "0.0.2.dev0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11333763,
  "releases": {
    "0.0.2.dev0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e0848055b4a09779967fbf84f5e3fe12507d62301fc1290705341fc0c4384595",
          "md5": "beb28d308d7024a1b24ca5dbdf4c21c9",
          "sha256": "5220fb147f4833d9597e9d0ace6e1990dcfadd5cb42875e227f74637b4b0519b"
        },
        "downloads": -1,
        "filename": "soupcan-0.0.2.dev0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "beb28d308d7024a1b24ca5dbdf4c21c9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7875,
        "upload_time": "2021-09-01T08:18:12",
        "upload_time_iso_8601": "2021-09-01T08:18:12.875752Z",
        "url": "https://files.pythonhosted.org/packages/e0/84/8055b4a09779967fbf84f5e3fe12507d62301fc1290705341fc0c4384595/soupcan-0.0.2.dev0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b624156035505a19a6dbe499a7d4a815db948c6f59a47210da3c183a1748fa2",
          "md5": "5f9f8e02ec7c4461adf0d9b17caaf3c6",
          "sha256": "b542beefc457ef86f850256bc3690ceb136a4efb831fd59ee09435c9df4d5c50"
        },
        "downloads": -1,
        "filename": "soupcan-0.0.2.dev0.tar.gz",
        "has_sig": false,
        "md5_digest": "5f9f8e02ec7c4461adf0d9b17caaf3c6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7208,
        "upload_time": "2021-09-01T08:18:15",
        "upload_time_iso_8601": "2021-09-01T08:18:15.191554Z",
        "url": "https://files.pythonhosted.org/packages/8b/62/4156035505a19a6dbe499a7d4a815db948c6f59a47210da3c183a1748fa2/soupcan-0.0.2.dev0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e0848055b4a09779967fbf84f5e3fe12507d62301fc1290705341fc0c4384595",
        "md5": "beb28d308d7024a1b24ca5dbdf4c21c9",
        "sha256": "5220fb147f4833d9597e9d0ace6e1990dcfadd5cb42875e227f74637b4b0519b"
      },
      "downloads": -1,
      "filename": "soupcan-0.0.2.dev0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "beb28d308d7024a1b24ca5dbdf4c21c9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 7875,
      "upload_time": "2021-09-01T08:18:12",
      "upload_time_iso_8601": "2021-09-01T08:18:12.875752Z",
      "url": "https://files.pythonhosted.org/packages/e0/84/8055b4a09779967fbf84f5e3fe12507d62301fc1290705341fc0c4384595/soupcan-0.0.2.dev0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8b624156035505a19a6dbe499a7d4a815db948c6f59a47210da3c183a1748fa2",
        "md5": "5f9f8e02ec7c4461adf0d9b17caaf3c6",
        "sha256": "b542beefc457ef86f850256bc3690ceb136a4efb831fd59ee09435c9df4d5c50"
      },
      "downloads": -1,
      "filename": "soupcan-0.0.2.dev0.tar.gz",
      "has_sig": false,
      "md5_digest": "5f9f8e02ec7c4461adf0d9b17caaf3c6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 7208,
      "upload_time": "2021-09-01T08:18:15",
      "upload_time_iso_8601": "2021-09-01T08:18:15.191554Z",
      "url": "https://files.pythonhosted.org/packages/8b/62/4156035505a19a6dbe499a7d4a815db948c6f59a47210da3c183a1748fa2/soupcan-0.0.2.dev0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}