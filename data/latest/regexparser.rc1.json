{
  "info": {
    "author": "wilsonfreitas",
    "author_email": "wilson.freitas@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "## regexparser\n\nFrequently I have to parse text into `float`, `int` and `date`, for a few examples.\nThe `TextParser` class to isolates the parsing task, instead of getting the parsing rules (or functions) spread all over the code.\n\n### Install\n\n    pip install regexparser\n\n`pip` install from github:\n\n\tpip install git+https://github.com/wilsonfreitas/regexparser.git\n\n### Using\n\nCreate a class inheriting `TextParser` and write methods with names starting with `parse`.\nThese methods must accept 2 more arguments after `self` and those arguments are the `text` that will be parsed and the `MatchObject` that is returned by applying the regular expression to the `text`.\nThe `parse*` methods are called only if its regular expression is matched and their regular expressions are set in the methods' doc string.\n\n`textparser` provides a compact way of applying transformation rules and that rules don't have to be spread out along the code.\n\nThe following code shows how to create text parsing rules for a tew text chunks in portuguese.\n\n```python\nclass PortugueseRulesParser(TextParser):\n    # transform Sim and Não into boolean True and False, ignoring case\n    def parseBoolean_ptBR(self, text, match):\n        r'^(sim|Sim|SIM|n.o|N.o|N.O)$'\n        return text[0].lower() == 's'\n    # transform Verdadeiro and Falso into boolean True and False, ignoring case\n    def parseBoolean_ptBR2(self, text, match):\n        r'^(verdadeiro|VERDADEIRO|falso|FALSO|V|F|v|f)$'\n        return text[0].lower() == 'v'\n    # parses a decimal number\n    def parse_number_decimal_ptBR(self, text, match):\n        r'^-?\\s*\\d+,\\d+?$'\n        text = text.replace(',', '.')\n        return eval(text)\n    # parses number with thousands\n    def parse_number_with_thousands_ptBR(self, text, match):\n        r'^-?\\s*(\\d+\\.)+\\d+,\\d+?$'\n        text = text.replace('.', '')\n        text = text.replace(',', '.')\n        return eval(text)\n\nparser = PortugueseRulesParser()\n\nassert parser.parse('1,1') == 1.1\nassert parser.parse('-1,1') == -1.1\nassert parser.parse('- 1,1') == -1.1\nassert parser.parse('WÃ¡lson') == 'WÃ¡lson'\nassert parser.parse('1.100,01') == 1100.01\n```\n\nI copied the idea of using a regular expression in `__doc__` from [PLY](http://www.dabeaz.com/ply/).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "regexparser",
    "package_url": "https://pypi.org/project/regexparser/",
    "platform": null,
    "project_url": "https://pypi.org/project/regexparser/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/regexparser/0.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.7,<4.0",
    "summary": "Simple parser for small text chunks",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16922803,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "794a9b2219eb2fd0cd8551b3a6c99d2206a006367706aca5b58f64384b83f6b2",
          "md5": "b2a58d6fa2c7d5829acbb6dcb4b754cc",
          "sha256": "7ef0094b1fc58379b209c3887c357a931e33488496ae1c1b0ab44822d1995e33"
        },
        "downloads": -1,
        "filename": "regexparser-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b2a58d6fa2c7d5829acbb6dcb4b754cc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 4617,
        "upload_time": "2023-02-19T01:48:38",
        "upload_time_iso_8601": "2023-02-19T01:48:38.989457Z",
        "url": "https://files.pythonhosted.org/packages/79/4a/9b2219eb2fd0cd8551b3a6c99d2206a006367706aca5b58f64384b83f6b2/regexparser-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf24b2c0ab8ea331145bda3b10c929e8e4aaa808d300480109951da666ca513f",
          "md5": "c6f3a8e00ab575a8cd8ecd6825dcb064",
          "sha256": "a4f021db06ed3c1aa0d9a97a151be2a116ae0bd6b0001880580c48f3ea4070d0"
        },
        "downloads": -1,
        "filename": "regexparser-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c6f3a8e00ab575a8cd8ecd6825dcb064",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 4381,
        "upload_time": "2023-02-19T01:48:40",
        "upload_time_iso_8601": "2023-02-19T01:48:40.716894Z",
        "url": "https://files.pythonhosted.org/packages/bf/24/b2c0ab8ea331145bda3b10c929e8e4aaa808d300480109951da666ca513f/regexparser-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "794a9b2219eb2fd0cd8551b3a6c99d2206a006367706aca5b58f64384b83f6b2",
        "md5": "b2a58d6fa2c7d5829acbb6dcb4b754cc",
        "sha256": "7ef0094b1fc58379b209c3887c357a931e33488496ae1c1b0ab44822d1995e33"
      },
      "downloads": -1,
      "filename": "regexparser-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b2a58d6fa2c7d5829acbb6dcb4b754cc",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<4.0",
      "size": 4617,
      "upload_time": "2023-02-19T01:48:38",
      "upload_time_iso_8601": "2023-02-19T01:48:38.989457Z",
      "url": "https://files.pythonhosted.org/packages/79/4a/9b2219eb2fd0cd8551b3a6c99d2206a006367706aca5b58f64384b83f6b2/regexparser-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bf24b2c0ab8ea331145bda3b10c929e8e4aaa808d300480109951da666ca513f",
        "md5": "c6f3a8e00ab575a8cd8ecd6825dcb064",
        "sha256": "a4f021db06ed3c1aa0d9a97a151be2a116ae0bd6b0001880580c48f3ea4070d0"
      },
      "downloads": -1,
      "filename": "regexparser-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "c6f3a8e00ab575a8cd8ecd6825dcb064",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7,<4.0",
      "size": 4381,
      "upload_time": "2023-02-19T01:48:40",
      "upload_time_iso_8601": "2023-02-19T01:48:40.716894Z",
      "url": "https://files.pythonhosted.org/packages/bf/24/b2c0ab8ea331145bda3b10c929e8e4aaa808d300480109951da666ca513f/regexparser-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}