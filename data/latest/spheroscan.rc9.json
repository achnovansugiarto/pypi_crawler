{
  "info": {
    "author": "Akshay",
    "author_email": "akshaysuhag1996@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# MLcps\n**MLcps: Machine Learning cumulative performance score** is a performance metric that combines multiple performance metrics and reports a cumulative score enabling researchers to compare the ML models using a single metric. MLcps provides a comprehensive platform to identify the best-performing ML model on any given dataset.\n\n### ***Note***  \nIf you want to use MLcps without installing it on your local machine, please click here [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/FunctionalUrology/MLcps.git/main). It will launch a Jupyterlab server (all the requirements for MLcps are pre-installed ) where you can run the already available example Jupyter notebook for MLcps analysis. It may take a while to launch! You can also upload your data or notebook to perform the analysis.\n\n# Prerequisites\n\n1. Python >=3.8\n2. R >=4.0. R should be accessible through terminal/command prompt.\n3. ```radarchart, tibble,``` and ```dplyr``` R packages. MLcps can install all these packages at first import if unavailable, but we highly recommend installing them before using MLcps. The user could run the following R code in the R environment to install them:\n```\n## Install the unavailable packages\ninstall.packages(c('radarchart','tibble','dplyr'),dependencies = TRUE,repos=\"https://cloud.r-project.org\")                         \n ```\n\n# Installation\n```\npip install MLcps\n```\n\n# Binder environment for MLcps\n\nAs an alternative, we have built a binder computational environment where all the requirements are pre-installed for MLcps.\nIt allows the user to ***use MLcps without any installation***.\n\nPlease click here [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/FunctionalUrology/MLcps.git/main) to launch the Jupyterlab server where you can run the already available example Jupyter notebook for MLcps analysis. It may take a while to launch! You can also upload your data or notebook to perform the analysis.\n\n# Usage\n#### **Quick Start**\n```python\n#import MLcps\nfrom MLcps import getCPS\n\n#calculate Machine Learning cumulative performance score\ncps=getCPS.calculate(object)\n```  \n> * ***object***: A pandas dataframe where rows are different metrics scores and columns are different ML models. **Or** a GridSearchCV object.\n> * ***cps***: A pandas dataframe with models name and corresponding MLcps. **Or** a GridSearchCV object.\n\n#### **Example 0.1**\nCreate Input dataframe for MLcps\n\n```python\nimport pandas as pd\nmetrics_list=[]\n\n#Metrics from SVC model (kernel=rbf)\nacc = 0.88811 #accuracy\nbacc = 0.86136 #balanced_accuracy\nprec = 0.86 #precision\nrec = 0.97727 #recall\nf1 = 0.91489 #F1\nmcc = 0.76677 #Matthews_correlation_coefficient\nmetrics_list.append([acc,bacc,prec,rec,f1,mcc])\n\n#Metrics from SVC model (kernel=linear)\nacc = 0.88811\nbacc = 0.87841\nprec = 0.90\nrec = 0.92045\nf1 = 0.91011\nmcc = 0.76235\nmetrics_list.append([acc,bacc,prec,rec,f1,mcc])\n\n#Metrics from KNN\nacc = 0.78811\nbacc = 0.82841\nprec = 0.80\nrec = 0.82\nf1 = 0.8911\nmcc = 0.71565\nmetrics_list.append([acc,bacc,prec,rec,f1,mcc])\n\nmetrics=pd.DataFrame(metrics_list,index=[\"SVM rbf\",\"SVM linear\",\"KNN\"],\n                     columns=[\"accuracy\",\"balanced_accuracy\",\"precision\",\"recall\",\n                              \"f1\",\"Matthews_correlation_coefficient\"])\nprint(metrics)\n```\n\n#### **Example 1**\nCalculate MLcps for a pandas dataframe where rows are different metrics scores and columns are different ML models.\n\n```python\n#import MLcps\nfrom MLcps import getCPS\n\n#read input data (a dataframe) or load an example data\nmetrics=getCPS.sample_metrics()\n\n#calculate Machine Learning cumulative performance score\ncpsScore=getCPS.calculate(metrics)\nprint(cpsScore)\n\n#########################################################\n#plot MLcps\nimport plotly.express as px\nfrom plotly.offline import plot\nimport plotly.io as pio\npio.renderers.default = 'iframe' #or pio.renderers.default = 'browser'\n\nfig = px.bar(cpsScore, x='Score', y='Algorithms',color='Score',labels={'MLcps Score'},\n             width=700,height=1000,text_auto=True)\n\nfig.update_xaxes(title_text=\"MLcps\")\nplot(fig)\nfig\n```\n\n\n#### **Example 2**\nCalculate MLcps using the mean test score of all the metrics available in the given GridSearch object and return an updated GridSearch object. Returned GridSearch object contains ```mean_test_MLcps``` and ```rank_test_MLcps``` arrays, which can be used to rank the models similar to any other metric.\n\n```python\n#import MLcps\nfrom MLcps import getCPS\n\n#load GridSearch object or load it from package\ngsObj=getCPS.sample_GridSearch_Object()\n\n#calculate Machine Learning cumulative performance score\ngsObj_updated=getCPS.calculate(gsObj)\n\n#########################################################\n#access MLcps\nprint(\"MLcps: \",gsObj_updated.cv_results_[\"mean_test_MLcps\"])\n\n#access rank array based on MLcps\nprint(\"Ranking based on MLcps:\",gsObj_updated.cv_results_[\"rank_test_MLcps\"])\n```  \n\n#### **Example 3**\nCertain metrics are more significant than others in some cases. As an example, if the dataset is imbalanced, a high F1 score might be preferred to higher accuracy. A user can provide weights for metrics of interest while calculating MLcps in such a scenario. Weights should be a dictionary object where keys are metric names and values are corresponding weights. It can be passed as a parameter in ```getCPS.calculate()``` function.\n\n  * **3.a)**\n\n```python\n#import MLcps\nfrom MLcps import getCPS\n\n#read input data (a dataframe) or load an example data\nmetrics=getCPS.sample_metrics()\n\n#define weights\nweights={\"Accuracy\":0.75,\"F1\": 1.25}\n\n#calculate Machine Learning cumulative performance score\ncpsScore=getCPS.calculate(metrics,weights)\nprint(cpsScore)\n\n#########################################################\n#plot weighted MLcps\nimport plotly.express as px\nfrom plotly.offline import plot\nimport plotly.io as pio\npio.renderers.default = 'iframe' #or pio.renderers.default = 'browser'\n\nfig = px.bar(cpsScore, x='Score', y='Algorithms',color='Score',labels={'MLcps Score'},\n             width=700,height=1000,text_auto=True)\n\nfig.update_xaxes(title_text=\"MLcps\")\nplot(fig)\nfig\n```  \n  * **3.b)**\n```python\n#import MLcps\nfrom MLcps import getCPS\n\n#########################################################\n#load GridSearch object or load it from package\ngsObj=getCPS.sample_GridSearch_Object()\n\n#define weights\nweights={\"accuracy\":0.75,\"f1\": 1.25}\n\n#calculate Machine Learning cumulative performance score\ngsObj_updated=getCPS.calculate(gsObj,weights)\n\n#########################################################\n#access MLcps\nprint(\"MLcps: \",gsObj_updated.cv_results_[\"mean_test_MLcps\"])\n\n#access rank array based on MLcps\nprint(\"Ranking based on MLcps:\",gsObj_updated.cv_results_[\"rank_test_MLcps\"])\n\n```  \n\n# Links\n<!--* For a general introduction of the tool and how to setting up MLcps:\n  * Please watch  MLcps **[Setup video tutorial]()** (coming soon).  \n  *  Please watch MLcps **[Introduction video tutorial]()** (coming soon).\n-->\n* MLcps source code and a Jupyter notebook with sample analyses is available on the **[MLcps GitHub repository](https://github.com/FunctionalUrology/MLcps/blob/main/Example-Notebook.ipynb)** and binder [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/FunctionalUrology/MLcps.git/main).\n* Please use the  **[MLcps GitHub](https://github.com/FunctionalUrology/MLcps/issues)** repository to report all the issues.\n\n# Citations Information\nIf **MLcps** in any way help you in your research work, please cite the MLcps publication.\n***\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/FunctionalUrology/SpheroScan.git",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "SpheroScan",
    "package_url": "https://pypi.org/project/SpheroScan/",
    "platform": null,
    "project_url": "https://pypi.org/project/SpheroScan/",
    "project_urls": {
      "Bug Tracker": "https://github.com/FunctionalUrology/SpheroScan/issues",
      "Homepage": "https://github.com/FunctionalUrology/SpheroScan.git"
    },
    "release_url": "https://pypi.org/project/SpheroScan/0.0.10/",
    "requires_dist": [
      "dash",
      "pandas",
      "numpy",
      "scipy",
      "bokeh",
      "plotly",
      "zipfile36",
      "opencv-python",
      "matplotlib",
      "subprocess.run",
      "gunicorn",
      "dash-bootstrap-components",
      "dash-uploader",
      "dash-loading-spinners"
    ],
    "requires_python": ">=3.10",
    "summary": "A User-Friendly Deep Learning Tool for Spheroid Image Analysis.",
    "version": "0.0.10",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16460686,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "339d18bcd807e8b2cf19574ff0234c43d8bfc8a21ac668c65892ec79e67fb9cd",
          "md5": "3983b4a4d59b69cad19e28c124cc575a",
          "sha256": "abde0aefa356c5022545ae033cefd209cb69e5cbef0065dd38e8115b08aae693"
        },
        "downloads": -1,
        "filename": "SpheroScan-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3983b4a4d59b69cad19e28c124cc575a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 16189,
        "upload_time": "2023-01-17T15:45:14",
        "upload_time_iso_8601": "2023-01-17T15:45:14.405929Z",
        "url": "https://files.pythonhosted.org/packages/33/9d/18bcd807e8b2cf19574ff0234c43d8bfc8a21ac668c65892ec79e67fb9cd/SpheroScan-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b1f4c9d411a0d0bf3243e4a03a4f25bdcb9ddbf4313f4d845b1d185c688b7bf4",
          "md5": "286fa72674ea435bde1c346cbc630210",
          "sha256": "ae7df36caa80f0eca537175eee529579e93896ce5bcdd426748aea728810da0f"
        },
        "downloads": -1,
        "filename": "SpheroScan-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "286fa72674ea435bde1c346cbc630210",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 16413,
        "upload_time": "2023-01-17T15:45:16",
        "upload_time_iso_8601": "2023-01-17T15:45:16.711602Z",
        "url": "https://files.pythonhosted.org/packages/b1/f4/c9d411a0d0bf3243e4a03a4f25bdcb9ddbf4313f4d845b1d185c688b7bf4/SpheroScan-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b03f6fe47d7a3dc41fe826a2b8bc7ac8c34b8c198651c5c5aaeb949ac714ee7",
          "md5": "f11174be506a36693cf5e18f587e9562",
          "sha256": "6d12284b5a16bc277b1c09236664c35eeee41f67cbf487b39be5fa57c58c74c8"
        },
        "downloads": -1,
        "filename": "SpheroScan-0.0.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f11174be506a36693cf5e18f587e9562",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 36503,
        "upload_time": "2023-01-17T16:42:51",
        "upload_time_iso_8601": "2023-01-17T16:42:51.696366Z",
        "url": "https://files.pythonhosted.org/packages/2b/03/f6fe47d7a3dc41fe826a2b8bc7ac8c34b8c198651c5c5aaeb949ac714ee7/SpheroScan-0.0.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "db4e9fff67789fbf529f4bd891def55bc285156b480019e1142c1b7011a41b81",
          "md5": "75227ff71acd5f18862150f5d65a6652",
          "sha256": "3d78ca2a203b0ddd272e99e440f9eeeaf9c2b0e69b18280bc507f5cbd3230018"
        },
        "downloads": -1,
        "filename": "SpheroScan-0.0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "75227ff71acd5f18862150f5d65a6652",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 34755,
        "upload_time": "2023-01-17T16:42:56",
        "upload_time_iso_8601": "2023-01-17T16:42:56.420034Z",
        "url": "https://files.pythonhosted.org/packages/db/4e/9fff67789fbf529f4bd891def55bc285156b480019e1142c1b7011a41b81/SpheroScan-0.0.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c7280d469c52ba70983088eaf26e3c629935c615004df2b3a2621449a1be782",
          "md5": "a832090bf224d355811deca2fddb340f",
          "sha256": "beb61fe31a3b7ef2f59daaca74aeb3e6b131cf445552201072cdf25e47efbb5c"
        },
        "downloads": -1,
        "filename": "SpheroScan-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a832090bf224d355811deca2fddb340f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 16186,
        "upload_time": "2023-01-17T15:54:51",
        "upload_time_iso_8601": "2023-01-17T15:54:51.814940Z",
        "url": "https://files.pythonhosted.org/packages/8c/72/80d469c52ba70983088eaf26e3c629935c615004df2b3a2621449a1be782/SpheroScan-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "952b8d08783aec55dbabee125d668c738f8ccf3c1737fbd31196745f64dd38a9",
          "md5": "0bb3eefbdc8e02791d58459d7dc5c1b6",
          "sha256": "87fbeee9e50767578f14cd3ccea5f10adf1a69a9fe0da27e1c59bf431c43ffee"
        },
        "downloads": -1,
        "filename": "SpheroScan-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "0bb3eefbdc8e02791d58459d7dc5c1b6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 16398,
        "upload_time": "2023-01-17T15:54:53",
        "upload_time_iso_8601": "2023-01-17T15:54:53.804828Z",
        "url": "https://files.pythonhosted.org/packages/95/2b/8d08783aec55dbabee125d668c738f8ccf3c1737fbd31196745f64dd38a9/SpheroScan-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e3d3eb1dabfa9ad357e36a84b8a6f60737daea94366f306fe20868396e753a88",
          "md5": "5c4b8883188c32fe31aad50b69512e57",
          "sha256": "934182043c9d9f930dd8ffa44c47c179aada2386da6593cfe0f2ce5173e29d2e"
        },
        "downloads": -1,
        "filename": "SpheroScan-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5c4b8883188c32fe31aad50b69512e57",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 36389,
        "upload_time": "2023-01-17T16:02:30",
        "upload_time_iso_8601": "2023-01-17T16:02:30.320562Z",
        "url": "https://files.pythonhosted.org/packages/e3/d3/eb1dabfa9ad357e36a84b8a6f60737daea94366f306fe20868396e753a88/SpheroScan-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f137273e5cb8e1c5c24b1c3074b7a41fbe8caec106873c0c39df07068d098049",
          "md5": "f9c510cfe9ff0c1ea9ee3419cd1878a3",
          "sha256": "dd11c88fac2412ba5ed3d934de28d8a8715eadb6d9bb660a9d9d3c2386ded3d4"
        },
        "downloads": -1,
        "filename": "SpheroScan-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "f9c510cfe9ff0c1ea9ee3419cd1878a3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 34670,
        "upload_time": "2023-01-17T16:02:33",
        "upload_time_iso_8601": "2023-01-17T16:02:33.329651Z",
        "url": "https://files.pythonhosted.org/packages/f1/37/273e5cb8e1c5c24b1c3074b7a41fbe8caec106873c0c39df07068d098049/SpheroScan-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5bb5d10ad8fe34a87049591aa7db956467bea09ad62d182c53365bb52534f38c",
          "md5": "420d83aa0dd83582f3c5abddd0619c6e",
          "sha256": "c90c8c64dee2b873481e6090bea1942c55385c9a788dcf4894b35754d22e5c50"
        },
        "downloads": -1,
        "filename": "SpheroScan-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "420d83aa0dd83582f3c5abddd0619c6e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 36398,
        "upload_time": "2023-01-17T16:13:27",
        "upload_time_iso_8601": "2023-01-17T16:13:27.439735Z",
        "url": "https://files.pythonhosted.org/packages/5b/b5/d10ad8fe34a87049591aa7db956467bea09ad62d182c53365bb52534f38c/SpheroScan-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7146c1ca0701a088f071672baeef4de43dc659f3706ae02aeacfadf2cfd1c218",
          "md5": "fbc58f0ab878ab210c8d8a04eef6ca04",
          "sha256": "6f6ee2fd23d708b707c2e16b8e50b28cbcd8ac54b5bfbe56f988738920016fec"
        },
        "downloads": -1,
        "filename": "SpheroScan-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "fbc58f0ab878ab210c8d8a04eef6ca04",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 34684,
        "upload_time": "2023-01-17T16:13:29",
        "upload_time_iso_8601": "2023-01-17T16:13:29.504958Z",
        "url": "https://files.pythonhosted.org/packages/71/46/c1ca0701a088f071672baeef4de43dc659f3706ae02aeacfadf2cfd1c218/SpheroScan-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4c1f6c06a6fd007719d288beff7e4724a21d11a426970eb7686aca4ccb33ef53",
          "md5": "490f087281a55e6b829c0fafa2150fda",
          "sha256": "1b153e40d4d5ea9efb8a84e1c9a0ae88543377cd04f26af9ef6ed3a70e164e23"
        },
        "downloads": -1,
        "filename": "SpheroScan-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "490f087281a55e6b829c0fafa2150fda",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 36453,
        "upload_time": "2023-01-17T16:33:19",
        "upload_time_iso_8601": "2023-01-17T16:33:19.468234Z",
        "url": "https://files.pythonhosted.org/packages/4c/1f/6c06a6fd007719d288beff7e4724a21d11a426970eb7686aca4ccb33ef53/SpheroScan-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cf8774d73c12a6a55e0d12f52be6557b330c45b34a3fcd18ceb34ced029db53f",
          "md5": "2699847fcbfc7f958e906a64aff106c4",
          "sha256": "6b263d7721bf4892ee3d14a93cfe8c7dcaf72dcf0e679011e22a8f2b25815134"
        },
        "downloads": -1,
        "filename": "SpheroScan-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "2699847fcbfc7f958e906a64aff106c4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 34714,
        "upload_time": "2023-01-17T16:33:21",
        "upload_time_iso_8601": "2023-01-17T16:33:21.138953Z",
        "url": "https://files.pythonhosted.org/packages/cf/87/74d73c12a6a55e0d12f52be6557b330c45b34a3fcd18ceb34ced029db53f/SpheroScan-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d6562f2df9c8083ff15a19b22727ff754ea335d23999d80b18fd65d649060e69",
          "md5": "0bc509c6e7d9facc71d54ef8b8a16152",
          "sha256": "e7c10afbaa59b8151798d7b739959d3138afd8c889bd44649b7bf11a0b26f773"
        },
        "downloads": -1,
        "filename": "SpheroScan-0.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0bc509c6e7d9facc71d54ef8b8a16152",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 36458,
        "upload_time": "2023-01-17T16:36:12",
        "upload_time_iso_8601": "2023-01-17T16:36:12.043005Z",
        "url": "https://files.pythonhosted.org/packages/d6/56/2f2df9c8083ff15a19b22727ff754ea335d23999d80b18fd65d649060e69/SpheroScan-0.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b302767ae9ad7c9d5964dbc874970b4645c34ac2efb67c55360b81c8b72d2a5",
          "md5": "b11a762bf87216d6aefcc79285d3eb6f",
          "sha256": "bb82d841450ba1bd80cb53f7d25c1d6ce10f459f00a572c156d14651f5303469"
        },
        "downloads": -1,
        "filename": "SpheroScan-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "b11a762bf87216d6aefcc79285d3eb6f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 34717,
        "upload_time": "2023-01-17T16:36:15",
        "upload_time_iso_8601": "2023-01-17T16:36:15.084413Z",
        "url": "https://files.pythonhosted.org/packages/2b/30/2767ae9ad7c9d5964dbc874970b4645c34ac2efb67c55360b81c8b72d2a5/SpheroScan-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4cad3ebb8bfedc8ec9531ad773c3949d2e9e421376b4aedadb0a85fd98172beb",
          "md5": "9ba907d03ffb938d4ef38e05f697438f",
          "sha256": "a078a8aef3c6438130b3f724851efaeedd973f4af613b0b1d6fb612d6a80415d"
        },
        "downloads": -1,
        "filename": "SpheroScan-0.0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9ba907d03ffb938d4ef38e05f697438f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 36474,
        "upload_time": "2023-01-17T16:38:03",
        "upload_time_iso_8601": "2023-01-17T16:38:03.798761Z",
        "url": "https://files.pythonhosted.org/packages/4c/ad/3ebb8bfedc8ec9531ad773c3949d2e9e421376b4aedadb0a85fd98172beb/SpheroScan-0.0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "50b3b633cac910662988bbc360edb79c1940fa0f8769a4cd8c20068af9786df1",
          "md5": "f9e53dd7c55330c6a46ee66312f95fe9",
          "sha256": "d1b4c218efa1a36b71bfe53a30f93f8f08c8e42eb6e53a6d3e5ec259fd25ac39"
        },
        "downloads": -1,
        "filename": "SpheroScan-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "f9e53dd7c55330c6a46ee66312f95fe9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 34739,
        "upload_time": "2023-01-17T16:38:06",
        "upload_time_iso_8601": "2023-01-17T16:38:06.122701Z",
        "url": "https://files.pythonhosted.org/packages/50/b3/b633cac910662988bbc360edb79c1940fa0f8769a4cd8c20068af9786df1/SpheroScan-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "746fdee056e2e54da3b7089e179a6c9842ae147dbcd90e50fc2ad9cf83e44648",
          "md5": "bc2fcffdaec915a884c0e9ac76d918ef",
          "sha256": "f6474b48a03502ecacb383387c65ea76c1e4c408e4d5834ff858fda065088d4f"
        },
        "downloads": -1,
        "filename": "SpheroScan-0.0.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bc2fcffdaec915a884c0e9ac76d918ef",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 36480,
        "upload_time": "2023-01-17T16:39:15",
        "upload_time_iso_8601": "2023-01-17T16:39:15.946922Z",
        "url": "https://files.pythonhosted.org/packages/74/6f/dee056e2e54da3b7089e179a6c9842ae147dbcd90e50fc2ad9cf83e44648/SpheroScan-0.0.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0eaf188d7fdbe22542f0eb4542cabcfe9d0797d0793525fec02cf2dbf66f23f3",
          "md5": "d64c06c30e01c6b830bfa832b22ace6b",
          "sha256": "7ac7d8bcbfeef0de3dcd850ec5c633af16ee5ec94056c64f6cae683056028826"
        },
        "downloads": -1,
        "filename": "SpheroScan-0.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "d64c06c30e01c6b830bfa832b22ace6b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 34751,
        "upload_time": "2023-01-17T16:39:19",
        "upload_time_iso_8601": "2023-01-17T16:39:19.339014Z",
        "url": "https://files.pythonhosted.org/packages/0e/af/188d7fdbe22542f0eb4542cabcfe9d0797d0793525fec02cf2dbf66f23f3/SpheroScan-0.0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2b03f6fe47d7a3dc41fe826a2b8bc7ac8c34b8c198651c5c5aaeb949ac714ee7",
        "md5": "f11174be506a36693cf5e18f587e9562",
        "sha256": "6d12284b5a16bc277b1c09236664c35eeee41f67cbf487b39be5fa57c58c74c8"
      },
      "downloads": -1,
      "filename": "SpheroScan-0.0.10-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f11174be506a36693cf5e18f587e9562",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10",
      "size": 36503,
      "upload_time": "2023-01-17T16:42:51",
      "upload_time_iso_8601": "2023-01-17T16:42:51.696366Z",
      "url": "https://files.pythonhosted.org/packages/2b/03/f6fe47d7a3dc41fe826a2b8bc7ac8c34b8c198651c5c5aaeb949ac714ee7/SpheroScan-0.0.10-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "db4e9fff67789fbf529f4bd891def55bc285156b480019e1142c1b7011a41b81",
        "md5": "75227ff71acd5f18862150f5d65a6652",
        "sha256": "3d78ca2a203b0ddd272e99e440f9eeeaf9c2b0e69b18280bc507f5cbd3230018"
      },
      "downloads": -1,
      "filename": "SpheroScan-0.0.10.tar.gz",
      "has_sig": false,
      "md5_digest": "75227ff71acd5f18862150f5d65a6652",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10",
      "size": 34755,
      "upload_time": "2023-01-17T16:42:56",
      "upload_time_iso_8601": "2023-01-17T16:42:56.420034Z",
      "url": "https://files.pythonhosted.org/packages/db/4e/9fff67789fbf529f4bd891def55bc285156b480019e1142c1b7011a41b81/SpheroScan-0.0.10.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}