{
  "info": {
    "author": "Gareth Sheppard",
    "author_email": "garethsheppard49@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# GAKTpore: Stereological Characterisation Methods\n\n## Installation\nTo install the package from PyPi:\n\n```bash\n$ pip install GAKTpore\n```\n\n## Quick Use\n\nGAKTpore is distributed with a function utilising the GAKTpore 'AnalysePores' class to output the relevant data files into a save folder and generate a colour map. This outputs the data used for the initial GAKTpore paper. Test-case files are included on [Github](https://github.com/gts4/GAKTpore/), with images.\n\nA [user guide](https://github.com/gts4/GAKTpore/blob/master/User%20Guide.md) is available to help get started with GAKTpore and Python.\n\nThe syntax of the function are as follows:\n\n### GAKTpore.analysis.**run**\n\n#### **Parameters**\n\n##### &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IMAGE_NAME: str,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The directory path for the image to be analysed. The image is expected to be grayscale. The image formats supported can be found on the OpenCV [imread](https://docs.opencv.org/3.4/d4/da8/group__imgcodecs.html#imread) reference.\n\n##### &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SAVE_FOLDER: str,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The directory where the output files will be saved to. There are 3 output files by default:\n* A file containing the standard evaluation parameters (such as mean diameter, number of samples etc.) per radial step.\n* A file containing the standard evaluation parameters (such as pore area, cirularity etc.) for each pore, allowing further analysis.\n* The Area fraction image generated using the 'jet' colourmap via Matplotlib.\n\nThe filename will be determined by the name of the image file and input parameters (Threshold, upscale multiplier, contour filtering method (FFT or Savgol) and the data) as &lt;Image name&gt;-&lt;Threshold&gt;-&lt;Upscale Multiplier&gt;-&lt;type of data&gt;_&lt;filtering method&gt;.&lt;file type&gt;, for example 'Test1-127-1x_FFT.csv'.\n\n##### &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; THRES: int,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The binarisation integer, expected to be between 0-255.\n\n##### &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SCALE: float,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Distance per pixel, presumed to be taken from the 'scale' bar of a microstructure image.\n\n##### &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; UPSCALE_MULTIPLIER: int, *Optional*. Default Value = 1\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The number to upscale the image being processed. Will multiply the image resulution by the value given.\n\n##### &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; W_BG: bool, *Optional*. Default Value = True, \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Whether the background of the image is white (True) or black (False).\n\n##### &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FFT: bool, *Optional*. Default Value = True, \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Whether to use FFT bandpass to smooth contours. Setting this to False will use the Savgol Filter from Scipy instead (Not validated yet, but much faster).\n\n##### &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; parallel: bool, *Optional*. Default Value = True, \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Whether to use multiple cpu cores to process the image in parallel.\n\n##### &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cpu_count: int, *Optional*. Default Value = -1,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The number of parallel computations used when a multiprocessing function is used. -1 to use the number of available cores.\n\n##### &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; npy_save: bool, *Optional*. Default Value = False,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Whether to save the numpy array of the territory map. This map is a mask containing integers, where the integers refer to the pore number the territory belongs to.\n\n##### &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; plt_save: bool, *Optional*. Default Value = False,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Whether to use matplotlib.save to save the area fraction image. Matplotlib.save is slow and will crash when using extremely high resolution images (> 25k x 25k), but is otherwise stable. If set to false, will use cv2.imsave to save the area fraction image.\n\n##### &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; draw_contours: bool, *Optional*. Default Value=True,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Whether to draw the pores onto the map in black.\n\n##### &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; vmin: float, *Optional*. Default Value=0,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; For the area fraction colour map, sets the minimum value to correspond with starting colour of the colour map. \n\n##### &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; vmax: float, *Optional*. Default Value=1,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; For the area fraction colour map, sets the maximum value to correspond with final colour of the colour map. \n\n##### &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; radii_n: int, *Optional*. Default Value=10\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Number of segmented steps to use between the centre of the image and the maximum radius.\n\n## Usage\n\nGAKTpore provides a class 'AnalysePores' with multiple analytical tools. \n\n### GAKTpore.**AnalysePores**\nThe initialisation for the class works as a simple binarisation and pore detection tool utilising the OpenCV implementation of findContours.\n\n#### **Parameters:** \n\n##### &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; img: np.array,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2D Grayscale Image\n##### &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; threshold_value: int, *Optional*. Default Value: 125\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Threshold value for binarising the image\n##### &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; scale = float, *Optional*. Default Value: 1\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Distance per pixel, presumed to be taken from the 'scale' bar of a microstructure image.\n##### &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; G = bool, *Optional*. Default Value:False\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Whether to apply a Gaussian filter of sigma=2\n##### &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; white_background= bool, *Optional*. Default Value: True\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Whether the background of the image is white (True) or black (False)\n##### &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cpu_count= int, *Optional*. Default Value:-1\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The number of parallel computations used when a multiprocessing function is used. -1 to use the number of available cores.\n\n### GAKTpore.AnalysePores.**process**\nThe next major function is process (**process_parallel** for the multiprocessing version). This function computes the properties of the pores (Area, Circularity etc.).\nNote that this must be run before the territory areas can be calculated.\n\n#### **Parameters:** \n##### &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FFT: bool, *Optional*. Default Value: True\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Whether to use FFT bandpass to smooth contours. Setting this to False will use the Savgol Filter from Scipy instead (Not validated yet, but much faster).\n\n### GAKTpore.AnalysePores.**process_free_area**\nThis function (and its parallel counterpart, **process_free_area_parallel**) calculates the territory area for each pore by computing the closest pore contour for each pixel of the image provided.\n\n#### **Parameters:** \n##### &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; zoom: int, *Optional*. Default Value: 1\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Increase the resolution of the map used for computing the territory area. Example: zoom=2 will use double the resolution of the input image to calculate the territory area.\n\n### GAKTpore.AnalysePores.**process_homogeneity_colour_map**\nThis function (and its parallel counterpart, **process_homogeneity_colour_map_parallel**) generates a colour map using the area fractions (Pore area divided by Territory area).\n#### **Parameters:** \n##### &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mapper: matplotlib.colors.LinearSegmentedColormap, *Optional*. Default Value: matplotlib.cm.get_cmap(\"jet\")\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Sets the colourmap to be used when colouring the image. Uses the colour \"jet\" by default. Provided in this layout to support custom matplotlib maps.\n##### &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; vmin: float, *Optional*. Default Value: 0\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Sets the minimum value to correspond with starting colour of the colour map. \n##### &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; vmax: float, *Optional*. Default Value: 1\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Sets the maximum value to correspond with final colour of the colour map. \n##### &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; draw_contours: bool, *Optional*. Default Value: False\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Whether to draw the pores onto the map.\n\n#### **Returns:**  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Colour map of the same resolution as the one in *process_free_area*.\n\n### GAKTpore.AnalysePores.**process_radial_contour**:\n  Computes the number of pores and the porosity percentage in segmented steps from the centre of the image.\n#### **Parameters:** \n\n##### &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; radii_n: int, *Optional*. Default Value: 10\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Number of segmented steps to use between the centre and the maximum radius.\n\n##### &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; radius_centre: np.array, *Optional*. Default Value: None\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The pixel position to use as the centre for the segmented circle. If not supplied, simply takes the centre of the image.\n\n##### &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; radius_max: float, *Optional*. Default Value: None\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The maximum radius to do the calculations for. If not supplied, simply calculates the distance to edge of the image from the centre.\n\n##### &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; draw_contours: bool, *Optional*. Default Value: False\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Whether to draw the pores onto the map.\n\n## Citation\n\nWhen using this package please cite:\n\n*   Sheppard, G.; Tassenberg, K.; Nenchev, B.; Strickland, J.; Mesalam, R.; Shepherd, J.; Williams, H. GAKTpore: Stereological Characterisation Methods for Porous Foams in Biomedical Applications. *Materials* **2021**, *14*, 1269. https://doi.org/10.3390/ma14051269 \n\n## Changelog\n\n### v1.1.2 (08/03/21)\n* Fixes a crash in *GAKTpore.analysis.**run*** radial processing section, which occurs when there are no pores within a radial step. Will output nans into the output data file.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/gts4/GAKTpore",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "GAKTpore",
    "package_url": "https://pypi.org/project/GAKTpore/",
    "platform": "",
    "project_url": "https://pypi.org/project/GAKTpore/",
    "project_urls": {
      "Bug Tracker": "https://github.com/pypa/sampleproject/issues",
      "Homepage": "https://github.com/gts4/GAKTpore"
    },
    "release_url": "https://pypi.org/project/GAKTpore/1.1.2/",
    "requires_dist": [
      "opencv-python",
      "psutil",
      "numpy",
      "scipy",
      "pyfftw",
      "matplotlib",
      "scikit-image"
    ],
    "requires_python": ">=3",
    "summary": "A stereological analysis tool for porous materials",
    "version": "1.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9706427,
  "releases": {
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eb4b3ac6f1bbb69cc7e9408fe2d751125483913f78dcb2525b68bc73d0596434",
          "md5": "cbe37e05134ee0add0b7f1b816e4be16",
          "sha256": "6a30734bf6eeb9d60d9f9882e16b579236647b29d858ab329caaf7fc2240e526"
        },
        "downloads": -1,
        "filename": "GAKTpore-1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cbe37e05134ee0add0b7f1b816e4be16",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 26227,
        "upload_time": "2021-03-06T16:05:01",
        "upload_time_iso_8601": "2021-03-06T16:05:01.895402Z",
        "url": "https://files.pythonhosted.org/packages/eb/4b/3ac6f1bbb69cc7e9408fe2d751125483913f78dcb2525b68bc73d0596434/GAKTpore-1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e67d4607dc8ace367fc50c4d1e94bcb48c09911519ec4c290d6b8fa043114ae9",
          "md5": "4facfefc9ebdc410298c86ad151284ba",
          "sha256": "0c9d66520e513a47270efa79845537a7d2c5afd6e074fba1c94cf5e697f7210a"
        },
        "downloads": -1,
        "filename": "GAKTpore-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4facfefc9ebdc410298c86ad151284ba",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 13745,
        "upload_time": "2021-03-06T16:05:02",
        "upload_time_iso_8601": "2021-03-06T16:05:02.928267Z",
        "url": "https://files.pythonhosted.org/packages/e6/7d/4607dc8ace367fc50c4d1e94bcb48c09911519ec4c290d6b8fa043114ae9/GAKTpore-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "61a3a88ce8c7189bb1b2168112f6e0bbb691bad405ddbc97a5c7f39ca4fcbdc1",
          "md5": "bca02a00ccf620d95b6d046ab996dc13",
          "sha256": "fd225a430b7521de35f86ce1593fdcaceeaa59a39f84f51ebbe49f77cfc0d98e"
        },
        "downloads": -1,
        "filename": "GAKTpore-1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bca02a00ccf620d95b6d046ab996dc13",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 26299,
        "upload_time": "2021-03-06T18:32:41",
        "upload_time_iso_8601": "2021-03-06T18:32:41.515378Z",
        "url": "https://files.pythonhosted.org/packages/61/a3/a88ce8c7189bb1b2168112f6e0bbb691bad405ddbc97a5c7f39ca4fcbdc1/GAKTpore-1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b0c5321c9692da4ed1d393d9d783fe30537db1974561c3beeb97f213dec112c0",
          "md5": "d3e9d9f8f9f7bdb2a4314daeeebc734f",
          "sha256": "34e3a4eae09e3d8afed919d45cfcd21d915f383536e6e0706ecff2f8fd3d4dae"
        },
        "downloads": -1,
        "filename": "GAKTpore-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d3e9d9f8f9f7bdb2a4314daeeebc734f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 13809,
        "upload_time": "2021-03-06T18:32:42",
        "upload_time_iso_8601": "2021-03-06T18:32:42.435541Z",
        "url": "https://files.pythonhosted.org/packages/b0/c5/321c9692da4ed1d393d9d783fe30537db1974561c3beeb97f213dec112c0/GAKTpore-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "13ba5e19316faa289665d844cca52e2deb6ef3c7a77ca6b974899ef63dffc2b7",
          "md5": "1e71380ce32b9462ac17da130c954a69",
          "sha256": "61ef1057542cedd9dc65e751321b00dd114e4295faa0a1e5d8ee9d03e422535f"
        },
        "downloads": -1,
        "filename": "GAKTpore-1.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1e71380ce32b9462ac17da130c954a69",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 26481,
        "upload_time": "2021-03-08T19:45:23",
        "upload_time_iso_8601": "2021-03-08T19:45:23.984316Z",
        "url": "https://files.pythonhosted.org/packages/13/ba/5e19316faa289665d844cca52e2deb6ef3c7a77ca6b974899ef63dffc2b7/GAKTpore-1.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "070423531a89b7eef896375cb4829329ef59ec7c094ff70352a677dc66a58ebf",
          "md5": "716272f4de88ff32b2fe2d5600ecb531",
          "sha256": "34c6f2234f170464538ce866ad88ebc7414198f52d0a41f6990ea009c1296222"
        },
        "downloads": -1,
        "filename": "GAKTpore-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "716272f4de88ff32b2fe2d5600ecb531",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 13993,
        "upload_time": "2021-03-08T19:45:25",
        "upload_time_iso_8601": "2021-03-08T19:45:25.666138Z",
        "url": "https://files.pythonhosted.org/packages/07/04/23531a89b7eef896375cb4829329ef59ec7c094ff70352a677dc66a58ebf/GAKTpore-1.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "13ba5e19316faa289665d844cca52e2deb6ef3c7a77ca6b974899ef63dffc2b7",
        "md5": "1e71380ce32b9462ac17da130c954a69",
        "sha256": "61ef1057542cedd9dc65e751321b00dd114e4295faa0a1e5d8ee9d03e422535f"
      },
      "downloads": -1,
      "filename": "GAKTpore-1.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1e71380ce32b9462ac17da130c954a69",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3",
      "size": 26481,
      "upload_time": "2021-03-08T19:45:23",
      "upload_time_iso_8601": "2021-03-08T19:45:23.984316Z",
      "url": "https://files.pythonhosted.org/packages/13/ba/5e19316faa289665d844cca52e2deb6ef3c7a77ca6b974899ef63dffc2b7/GAKTpore-1.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "070423531a89b7eef896375cb4829329ef59ec7c094ff70352a677dc66a58ebf",
        "md5": "716272f4de88ff32b2fe2d5600ecb531",
        "sha256": "34c6f2234f170464538ce866ad88ebc7414198f52d0a41f6990ea009c1296222"
      },
      "downloads": -1,
      "filename": "GAKTpore-1.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "716272f4de88ff32b2fe2d5600ecb531",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3",
      "size": 13993,
      "upload_time": "2021-03-08T19:45:25",
      "upload_time_iso_8601": "2021-03-08T19:45:25.666138Z",
      "url": "https://files.pythonhosted.org/packages/07/04/23531a89b7eef896375cb4829329ef59ec7c094ff70352a677dc66a58ebf/GAKTpore-1.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}