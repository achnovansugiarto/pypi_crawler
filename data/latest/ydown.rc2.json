{
  "info": {
    "author": "Freddyt",
    "author_email": "freddy6896@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "=====\r\nYDOWN\r\n=====\r\n\r\nydown is a complete library for getting information about or downloading youtube videos. It can show all the videos information:\r\n\r\nFor example it shows:\r\n\r\n* Author\r\n* Title\r\n* Likes and Dislikes\r\n* Views\r\n* Related Videos\r\n* Description\r\n\r\nIt also have a good download function that shows you the download status. \r\n\r\nYDOWNLIB\r\n========\r\n\r\nydownlib is the library that download a video. This is an example of the use::\r\n\r\n    import time\r\n    from ydown import ydownlib\r\n    \r\n    #THIS IS AN EXAMPLE OF THE USE OF ydownlib\r\n    #OPEN THE VIDEO\r\n    video=ydownlib.yvideo(\"http://www.youtube.com/watch?v=1T__uN5xmC0\")\r\n    \r\n    #DISPLAY THE VIDEO TITLE\r\n    print video.getTitle()\r\n    \r\n    #DISPLAY THE FILE VIDEO URL\r\n    print video.getUrl()\r\n    \r\n    #START DOWNLOAD IN ANOTHER THREAD\r\n    video.download()\r\n    \r\n    #THIS WHILE DISPLAY THE DOWNLOAD STATUS\r\n    while(1):\r\n        if video.isStarted(): #START TRACING WHEN THE DOWNLOAD IN STARTED\r\n        \r\n            #DISPLAY THE PERCENT\r\n            print str(video.getPercent()) + \"%\"\r\n            \r\n            #DISPLAY DOWNLOADED AND TOTAl FILE SIZE\r\n            print str(video.getDownloaded()) + \"/\" + str(video.getTotalSize())\r\n            \r\n            time.sleep(1) #SLEEP 1 SECOND AFTER EACH REPORT\r\n            #IF THE DOWNLOAD IS FINISHED, QUIT\r\n            if video.getPercent()==100:\r\n                break\r\n\r\nYDATALIB\r\n========\r\n\r\nydatalib is the library that show you the video's informations. This is an example of the use::\r\n\r\n    from ydown import ydatalib\r\n    \r\n    #OPEN YOUTUBE VIDEO\r\n    video=ydatalib.ydata(\"http://www.youtube.com/watch?v=1T__uN5xmC0\")\r\n    \r\n    #GET VIDEO INFORMATION\r\n    print \"TITLE\"\r\n    print video.getTitle()\r\n    print \"VIEWS\"\r\n    print video.getViews()\r\n    print \"LIKES\"\r\n    print video.getLikes()\r\n    print \"DISLIKES\"\r\n    print video.getDislikes()\r\n    print \"DESCRIPTION\"\r\n    print video.getDescription()\r\n    print \"LIST OF RELATED VIDEO URL\"\r\n    print video.getRelated()\r\n\r\nUSAGE OF YDOWNLIB\r\n=================\r\n\r\nUsing ydownlib is very simple:\r\n\r\n* FIRST CREATE A yvideo OBJECT\r\n\r\n    form ydown import ydownlib\r\n    video=ydownlib.yvideo(\"YOUTUBE URL\")\r\n\r\n* NOW YOU CAN USE ALL THE ydownlib FUNCTION\r\n\r\nUSAGE OF YDATALIB\r\n=================\r\n\r\nUsing ydatalib is very simple:\r\n\r\n* FIRST CREATE A ydata OBJECT\r\n\r\n    form ydown import ydatalib\r\n    video=ydatalib.ydata(\"YOUTUBE URL\")\r\n\r\n* NOW YOU CAN USE ALL THE ydatalib FUNCTION\r\n\r\nFUNCTIONS\r\n=========\r\n\r\nYDOWNLIB\r\n--------\r\nThis is the complete function list:\r\n\r\n* ``getTitle()`` this function return the name of the yvideo object loaded\r\n* ``getUrl()`` this function return the file's url of the yvideo object loaded\r\n* ``download()`` this function start the download in another thread\r\n* ``isStarted()`` return true if the download is started\r\n* ``getPercent()`` return the current download percent\r\n* ``getTotalSize()`` return the total file size of the video in bytes\r\n* ``getDownloaded()`` return the downloaded part of file in bytes\r\n\r\nYDATALIB\r\n--------\r\nThis is the complete function list:\r\n\r\n* ``getTitle()`` this function return the name of the ydata object loaded\r\n* ``getFileUrl()`` this function return the file's url of the ydata object loaded\r\n* ``getAuthor()`` this function return the video's author\r\n* ``getLikes()`` this function return the video's likes\r\n* ``getDislikes()`` this function return the video's dislikes\r\n* ``getRelated()`` this function return a list with related videos\r\n* ``getDescription()`` this function return the video's description\r\n\r\nVisit the sourceforge page https://sourceforge.net/projects/ydown/",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://sourceforge.net/projects/ydown/",
    "keywords": "",
    "license": "LICENSE.txt",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ydown",
    "package_url": "https://pypi.org/project/ydown/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/ydown/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://sourceforge.net/projects/ydown/"
    },
    "release_url": "https://pypi.org/project/ydown/2.0.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "ydown is a complete library for getting information about and downloading youtube videos",
    "version": "2.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 801948,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "78e9e9b3ee1512481c76a5e7cff24d27514b9128e7b78e616dff18afcfa100b7",
          "md5": "5495c517bfd0b9840a39ee71ce2e3a26",
          "sha256": "554b0ea8cdf0adffc01d07a01679602ea95191c779097dcd66d55a974f9ef5fd"
        },
        "downloads": -1,
        "filename": "ydown-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5495c517bfd0b9840a39ee71ce2e3a26",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14964,
        "upload_time": "2012-07-20T16:04:47",
        "upload_time_iso_8601": "2012-07-20T16:04:47.131444Z",
        "url": "https://files.pythonhosted.org/packages/78/e9/e9b3ee1512481c76a5e7cff24d27514b9128e7b78e616dff18afcfa100b7/ydown-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f3547221ba2915fa1cc181bd014a848af0f12ebcfecd3e9e9944cd5634ce9087",
          "md5": "af365c908d74955ddab3accabf7077f3",
          "sha256": "f6947f13e95b6c66a13ba2747bd42a86fcfdfbb124da027f5ca5ea31c8926b3e"
        },
        "downloads": -1,
        "filename": "ydown-2.0.0.zip",
        "has_sig": false,
        "md5_digest": "af365c908d74955ddab3accabf7077f3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19573,
        "upload_time": "2012-08-04T20:40:04",
        "upload_time_iso_8601": "2012-08-04T20:40:04.912781Z",
        "url": "https://files.pythonhosted.org/packages/f3/54/7221ba2915fa1cc181bd014a848af0f12ebcfecd3e9e9944cd5634ce9087/ydown-2.0.0.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f3547221ba2915fa1cc181bd014a848af0f12ebcfecd3e9e9944cd5634ce9087",
        "md5": "af365c908d74955ddab3accabf7077f3",
        "sha256": "f6947f13e95b6c66a13ba2747bd42a86fcfdfbb124da027f5ca5ea31c8926b3e"
      },
      "downloads": -1,
      "filename": "ydown-2.0.0.zip",
      "has_sig": false,
      "md5_digest": "af365c908d74955ddab3accabf7077f3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 19573,
      "upload_time": "2012-08-04T20:40:04",
      "upload_time_iso_8601": "2012-08-04T20:40:04.912781Z",
      "url": "https://files.pythonhosted.org/packages/f3/54/7221ba2915fa1cc181bd014a848af0f12ebcfecd3e9e9944cd5634ce9087/ydown-2.0.0.zip",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}