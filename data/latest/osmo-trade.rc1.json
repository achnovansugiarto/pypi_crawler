{
  "info": {
    "author": "0xmercury",
    "author_email": "osmocosmo2@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "\nosmo_trade: Making the trading experience seamless.\n====================================\n\n[![License](https://img.shields.io/badge/License-Apache%202.0-informational.svg)](https://github.com/0xmercury/osmo_trade/blob/master/LICENSE.md)\n\n**osmo_trade** is an open source python SDK made from the perspective of Algorithmic Traders. It is built to trade on Osmosis DEX powered by **Cosmos SDK** and **Tendermint** as the consensus engine. \n\nThis code is free and publicly available under the Apache 2.0 open source license!\n\nFeatures of osmo_trade as a **package**: \n- Very easy to set up any alpha based strategy on osmosis DEX.\n- Modular in nature. We can add any new feature coming on osmosis DEX like Concentrated liquidity without altering the exisiting code.\n- With a bit of customizations in regards to performance, it also can be used CEX-DEX arb which generates majority of the volume on the DEX.\n\nComponents in osmo_trade:\n* [DataFeed](https://github.com/0xmercury/osmo_trade/blob/master/osmo_trade/data_feed.py): DataFeed is the class to get the data from the blocks mined already. We haven't configured osmo_trade to have the mempool transactions as of now.\n* [TransactionBuilder](https://github.com/0xmercury/osmo_trade/blob/master/osmo_trade/transaction_build.py): This class is used to build your transactions however you want. It'll return the **txn_hash, logs, code** to tell the user whether the transaction is successful.\n* [Strategy](https://github.com/0xmercury/osmo_trade/blob/master/examples/example_momentum_strategy/example_momentum_strategy.py): We've setup an example code to really explain what each component is doing. And that is how user just need to make a script like this which will contain the strategy logic.\n\nDetailed documentation can be found in the examples directory where we try to explain each component of the SDK in much detail.\n\n## Installation\n\n```python \npip install osmo_trade \n```\n\n### Note:\nIf you want to run by customizing the SDK itself. Then git clone the repo, make your changes and do:\n\n`` pip install .`` in the cloned directory.\n\n## Mandatory Step\n\n- First of all, User have to define the env file in their current working directory with the following fields:\n\n  * MNEMONIC\n  * RPC_URL\n  * gRPC_host and gRPC_port\n  * REST_URL\n\n  A very good example of env file can be found [here](https://github.com/0xmercury/osmo_trade/blob/master/envs/strategy.env)\n\n### FAQ:\nWhat to do when user is getting the following error after installing the package for the first time:\n* when you're getting an error that says mpz object has no to_bytes() attributes\n  * ``pip uninstall gmpy2``\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/0xmercury/osmo_trade",
    "keywords": "",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "osmo-trade",
    "package_url": "https://pypi.org/project/osmo-trade/",
    "platform": null,
    "project_url": "https://pypi.org/project/osmo-trade/",
    "project_urls": {
      "Homepage": "https://github.com/0xmercury/osmo_trade",
      "Source": "https://github.com/0xmercury/osmo_trade"
    },
    "release_url": "https://pypi.org/project/osmo-trade/0.1.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "SDK to trade on osmosis DEX",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17307788,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "108cb6f52cdc0f991553b568db0e7b0a4d32434956b9e581c1b387cd8141d8f7",
          "md5": "01de3dfb3ecf5011959cfe925753ae3b",
          "sha256": "7beb91d668f5634bc11482f2aef8efa57913626b70d90dfbf0e11c27e9f547ae"
        },
        "downloads": -1,
        "filename": "osmo_trade-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "01de3dfb3ecf5011959cfe925753ae3b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15540,
        "upload_time": "2023-03-15T18:46:06",
        "upload_time_iso_8601": "2023-03-15T18:46:06.596701Z",
        "url": "https://files.pythonhosted.org/packages/10/8c/b6f52cdc0f991553b568db0e7b0a4d32434956b9e581c1b387cd8141d8f7/osmo_trade-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "108cb6f52cdc0f991553b568db0e7b0a4d32434956b9e581c1b387cd8141d8f7",
        "md5": "01de3dfb3ecf5011959cfe925753ae3b",
        "sha256": "7beb91d668f5634bc11482f2aef8efa57913626b70d90dfbf0e11c27e9f547ae"
      },
      "downloads": -1,
      "filename": "osmo_trade-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "01de3dfb3ecf5011959cfe925753ae3b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 15540,
      "upload_time": "2023-03-15T18:46:06",
      "upload_time_iso_8601": "2023-03-15T18:46:06.596701Z",
      "url": "https://files.pythonhosted.org/packages/10/8c/b6f52cdc0f991553b568db0e7b0a4d32434956b9e581c1b387cd8141d8f7/osmo_trade-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}