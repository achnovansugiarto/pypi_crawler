{
  "info": {
    "author": "Upinder S. Bhalla",
    "author_email": "bhalla@ncbs.res.in",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Time Cell Analysis project: Python and pybind11/C++ files for analysis and demos.\n\n\n## Overview\n\nThis repository contains the Matlab, Python and related files for \nTime Cell Analysis,\n\nThis is from a forthcoming paper: \n\nSynthetic Data Resource and Benchmarks for Time Cell Analysis and Detection Algorithms\n*K. Ananthamurthy and U.S. Bhalla,* \nin preparation.\n\n## Description\nTime cells are neurons whose activity encodes the time since a reference \nstimulus. They have been observed in the hippocamal CA1, CA3, and also in\nentorhinal cortex of rodents (refs). They may encode times of the order of\n100ms (Modi et al 2014 eLife ) to 20s (Mau et al 2018 Current Biology).\n\nSeveral algorithms have been developed to identify time cells from amongst a\npopulation of firing neurons. With the advent of large-scale unit recordings\nusing 2-photon Calcium imaging or high-density electrodes, it is important to\nhave reliable ways to identify time cells automatically.\n\nThis project has implemented a way to assess the performance of time-cell\nalgorithms. We have done two key things. First, we implemented code to generate\nsynthetic neuronal activity data in which we know the ground truth of which \ncells are time-cells, and we can control parameters such as noise, background \nactivity, jitter, and hit trial ratio (fraction of trials in which the time \ncell was active). \nSecond, we implemented and extended published time-cell analysis algorithms. \nWhile some of the original published algorithms were in Matlab, we have \nre-implemented key ones in C++ using the pybind11 libraries to provide a \nsimple Python interface. This gives us considerable improvements in speed and \nmemory efficiency, at the cost of some complexity in the code.\nThe Python functions can also be accessed via Matlab, and we illustrate how\nthis is done.\n\n## Functions\n\nAll these functions should be run from the cloned repository, TimeCellAnalysis.\n\n\n|Name\t\t| Description\t\t\t| Command Line | Location\t| Language  |\n|---------------|-------------------------------|--------------|----------------|-----------|\n| synthesisDemo.m | Command-line demo, output to file: \"synthData-demo.mat\". Generates a synthetic 2-P time-cell data file.  | $ cd TimeCellAnalysis/rho-matlab/demos <br> $ matlab -nodisplay -nosplash -r \"synthesisDemo; quit\" | rho-matlab/<br>demos | Matlab |\n| ti_demo.py | Command-line demo, output to console. Runs Temporal information analysis from Mau et al 2018. <br> Reports TImean, TIboot and TIboth classifications | $ python TcPy/ti_demo.py sampleData/sample_synth_data.mat |TcPy | Python interface and C++ numerics |\n| r2b_demo.py | Command-line demo, output to console. Runs Ridge-to-background analysis from Modi et al 2014. <br> Reports R2Bmean, and R2B bootstrap classifications | $ python TcPy/r2b_demo.py sampleData/sample_synth_data.mat | TcPy | Python interface and C++ numerics |\n| peq_demo.py | Command-line demo, output to console. Runs parametric equation analysis from current study. <br> Reports PEQ threshold classification, and estimates for noise, eventWidth, imprecision and hit trial ratio for dataset. | $ python TcPy/peq_demo.py sampleData/sample_synth_data.mat | TcPy | Python interface and C++ numerics |\n| ground_truth_check.py | Command-line demo, output to console. Uses synthetic data files to assess accuracy of classification by the various Mau and Modi algorithms. | $ python TcPy/ground_druth_check.py sampleData/sample_synth_data.mat | TcPy | Python interface and C++ numerics |\n| benchmark.py | Command-line demo, output to console. Simple time and memory benchmarks for the Mau, Modi, or PEQ algorithms. | $ python TcPy/run_batch_analysis.py sampleData/sample_synth_data.mat | TcPy | Python interface and C++ numerics |\n| run_batch_analysis.py | Command-line production script, output to CSV files. Runs a batch analysis using all methods on a data file. Generates csv files for TI, R2B, PEQ and ground truth classifications. | $ python TcPy/ti_demp.py sampleData/sample_synth_data.mat | TcPy | Python interface and C++ numerics |\n| pyBindMap.py | Provides an interface for Matlab programmers, to the python/C++ functions using two wrapper functions: **runTIanalysis** and **runR2Banalysis** | Utility function, not run from command line | TcPy | Python |\n| dodFbF.m | Utility function to convert experimental 2P data output from Suite2P to df by f form. | Utility function, not run from command line | rho-matlab/<br>CustomFunctions | Matlab |\n\n## Generating Paper Figures\nAll these functions should be run from the cloned repository, TimeCellAnalysis/rho-matlab/paperFigures.\nOne first generates the csv files with the output of the time-cell analysis using the function described above: run_batch_analysis.py\nSubsequent analysis and paper figures are generated using the following functions.\n\n|Name\t    \t \t | Description\t\t\t| Command Line                        |\n|------------------------|-------------------------------|-------------------------------------|\n|paperFiguresSynth.m \t | Plots all figures estimating algorithm performance for Synthetic Data analysis (Paper Fig. 4, Fig. 5, Fig. 6) | $ matlab -r \"papersFiguresSynth.m; quit\"|\n|paperFiguresReal.m \t | Plots all figures estimating algorithm performance for Real Physiology Data analysis (Paper Fig. 7) | $ matlab -r \"papersFiguresReal.m; quit\"|\n|radialPlotSummary.m \t | Plots a radial plot aka spider plot for algorithm dependence analysis (Paper Fig. 8), to be used only with Synthetic Data Analysis Outputs| $ matlab -r \"radialPlotSummary.m; quit\"|\n|paperFiguresSplits.m \t | For diagnostics: Plots all figures estimating algorithm performance over all the regimes (Unphysiological, Canonical, and Physiological)| $ matlab -r \"../src/paperFiguresSplits.m; quit\"|\n\n\n## Directories:\n\n\t- TcPy: Time Cell analysis Python demos, pybind11 and example driver \n\tcode from Matlab. Primary Author: U.S. Bhalla\n\tPlease see README in TcPy for details on running demos etc.\n\n\t- rho-matlab: Time Cell analysis Matlab libraries.\n\tPlease see README in rho-matlab for details on running demos.\n\tThe rho-matlab directory is cloned from \n\t\thttps://github.com/ananthamurthy/rho-matlab\n\t\tcommit number 1f0d765\n\t\tIn it, the paperFigures submodule is from commit 65b69de\n\tand the author of all the code in it is K. Ananthamurthy.\n\n\n## Installation:\n\tpip install TimeCellAnalysis\n\nFollowing this command, the actual files will be placed in\n\n\t~/.local/bin/TimeCellAnalysis\n\n\n\nor\n\n\tgit clone TimeCellAnalysis\n\tpip install h5py\n\tpip install pybind11\n\tpip install matplotlib\n\tmake\n\n\nFollowing this command, the actual files will be placed in \n\n\t./TimeCellAnalysis\n\nTo run the demos from the command line you should navigate to the installation\ndirectory and either the TcPy or rho-matlab subdirectories respectively, as\nindicated in their respective README files.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/bhallalab/timecellanalysis",
    "keywords": "",
    "license": "GPLv3",
    "maintainer": "HarshaRani",
    "maintainer_email": "hrani@ncbs.res.in",
    "name": "TCAnalysis",
    "package_url": "https://pypi.org/project/TCAnalysis/",
    "platform": null,
    "project_url": "https://pypi.org/project/TCAnalysis/",
    "project_urls": {
      "Homepage": "http://github.com/bhallalab/timecellanalysis"
    },
    "release_url": "https://pypi.org/project/TCAnalysis/1.0/",
    "requires_dist": [
      "numpy",
      "matplotlib",
      "h5py"
    ],
    "requires_python": "",
    "summary": "The code base is to use of timeCell python module on Matlab files",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16328638,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "88d49bfe877b5ba1769728f036dedbe0d0f478bd3501dc0d66b80eb2412d1866",
          "md5": "fb4fe6f6e7f7eef2b6e7a1f5b35e7d76",
          "sha256": "acd4d25818a1909a62136b38df00edf7c0918ab52600923b9d777cfd0f15d3b9"
        },
        "downloads": -1,
        "filename": "TCAnalysis-1.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl",
        "has_sig": false,
        "md5_digest": "fb4fe6f6e7f7eef2b6e7a1f5b35e7d76",
        "packagetype": "bdist_wheel",
        "python_version": "cp310",
        "requires_python": null,
        "size": 46750216,
        "upload_time": "2023-01-06T09:11:31",
        "upload_time_iso_8601": "2023-01-06T09:11:31.457728Z",
        "url": "https://files.pythonhosted.org/packages/88/d4/9bfe877b5ba1769728f036dedbe0d0f478bd3501dc0d66b80eb2412d1866/TCAnalysis-1.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "213ec3704109a84f24f8b2064489a36b8f3958c469b89940d46206951cbb742f",
          "md5": "720aec89c390ee4131c13aa898eae90b",
          "sha256": "242bb726aa8c709173067a4182629e37ffdb29da57231c12dc74e60414c801eb"
        },
        "downloads": -1,
        "filename": "TCAnalysis-1.0-cp36-cp36m-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl",
        "has_sig": false,
        "md5_digest": "720aec89c390ee4131c13aa898eae90b",
        "packagetype": "bdist_wheel",
        "python_version": "cp36",
        "requires_python": null,
        "size": 46793593,
        "upload_time": "2023-01-06T09:13:03",
        "upload_time_iso_8601": "2023-01-06T09:13:03.711987Z",
        "url": "https://files.pythonhosted.org/packages/21/3e/c3704109a84f24f8b2064489a36b8f3958c469b89940d46206951cbb742f/TCAnalysis-1.0-cp36-cp36m-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f9db8bf6e9bbb0e404ca08553122c8caed5dd571375a624ae50535a353cba7c",
          "md5": "dc6604207737403ac2be3a57469771f0",
          "sha256": "587b5d93b8f62cbce99dedcd82101c50a251ea8c0908faeb807e902fc65989f4"
        },
        "downloads": -1,
        "filename": "TCAnalysis-1.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl",
        "has_sig": false,
        "md5_digest": "dc6604207737403ac2be3a57469771f0",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": null,
        "size": 46850714,
        "upload_time": "2023-01-06T09:13:34",
        "upload_time_iso_8601": "2023-01-06T09:13:34.441539Z",
        "url": "https://files.pythonhosted.org/packages/1f/9d/b8bf6e9bbb0e404ca08553122c8caed5dd571375a624ae50535a353cba7c/TCAnalysis-1.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f4ce3d8a6d1c4d855b28f5ee782af3eb633f1fa4293ace17a8e20441d0bb629c",
          "md5": "676461c12778f594f3a690f483518d6c",
          "sha256": "d67e5be1d33dbf5bfc01e2e76c0ec054eacf178004c61dcc61a1fb6465dccce2"
        },
        "downloads": -1,
        "filename": "TCAnalysis-1.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl",
        "has_sig": false,
        "md5_digest": "676461c12778f594f3a690f483518d6c",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": null,
        "size": 46759691,
        "upload_time": "2023-01-06T09:14:07",
        "upload_time_iso_8601": "2023-01-06T09:14:07.619281Z",
        "url": "https://files.pythonhosted.org/packages/f4/ce/3d8a6d1c4d855b28f5ee782af3eb633f1fa4293ace17a8e20441d0bb629c/TCAnalysis-1.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1872d962c44b8e964496fe0a478c03079cc00b8370c982aa98d7df32dbacc7c8",
          "md5": "3b4f83f76a529561f6a2457300d4dd2d",
          "sha256": "27a4824d99a18aab814d38148ad81aefd0c9b7e133a3036b4c58679ff7814a57"
        },
        "downloads": -1,
        "filename": "TCAnalysis-1.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl",
        "has_sig": false,
        "md5_digest": "3b4f83f76a529561f6a2457300d4dd2d",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": null,
        "size": 46743303,
        "upload_time": "2023-01-06T09:14:40",
        "upload_time_iso_8601": "2023-01-06T09:14:40.766067Z",
        "url": "https://files.pythonhosted.org/packages/18/72/d962c44b8e964496fe0a478c03079cc00b8370c982aa98d7df32dbacc7c8/TCAnalysis-1.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "88d49bfe877b5ba1769728f036dedbe0d0f478bd3501dc0d66b80eb2412d1866",
        "md5": "fb4fe6f6e7f7eef2b6e7a1f5b35e7d76",
        "sha256": "acd4d25818a1909a62136b38df00edf7c0918ab52600923b9d777cfd0f15d3b9"
      },
      "downloads": -1,
      "filename": "TCAnalysis-1.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl",
      "has_sig": false,
      "md5_digest": "fb4fe6f6e7f7eef2b6e7a1f5b35e7d76",
      "packagetype": "bdist_wheel",
      "python_version": "cp310",
      "requires_python": null,
      "size": 46750216,
      "upload_time": "2023-01-06T09:11:31",
      "upload_time_iso_8601": "2023-01-06T09:11:31.457728Z",
      "url": "https://files.pythonhosted.org/packages/88/d4/9bfe877b5ba1769728f036dedbe0d0f478bd3501dc0d66b80eb2412d1866/TCAnalysis-1.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "213ec3704109a84f24f8b2064489a36b8f3958c469b89940d46206951cbb742f",
        "md5": "720aec89c390ee4131c13aa898eae90b",
        "sha256": "242bb726aa8c709173067a4182629e37ffdb29da57231c12dc74e60414c801eb"
      },
      "downloads": -1,
      "filename": "TCAnalysis-1.0-cp36-cp36m-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl",
      "has_sig": false,
      "md5_digest": "720aec89c390ee4131c13aa898eae90b",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": null,
      "size": 46793593,
      "upload_time": "2023-01-06T09:13:03",
      "upload_time_iso_8601": "2023-01-06T09:13:03.711987Z",
      "url": "https://files.pythonhosted.org/packages/21/3e/c3704109a84f24f8b2064489a36b8f3958c469b89940d46206951cbb742f/TCAnalysis-1.0-cp36-cp36m-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1f9db8bf6e9bbb0e404ca08553122c8caed5dd571375a624ae50535a353cba7c",
        "md5": "dc6604207737403ac2be3a57469771f0",
        "sha256": "587b5d93b8f62cbce99dedcd82101c50a251ea8c0908faeb807e902fc65989f4"
      },
      "downloads": -1,
      "filename": "TCAnalysis-1.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl",
      "has_sig": false,
      "md5_digest": "dc6604207737403ac2be3a57469771f0",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": null,
      "size": 46850714,
      "upload_time": "2023-01-06T09:13:34",
      "upload_time_iso_8601": "2023-01-06T09:13:34.441539Z",
      "url": "https://files.pythonhosted.org/packages/1f/9d/b8bf6e9bbb0e404ca08553122c8caed5dd571375a624ae50535a353cba7c/TCAnalysis-1.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f4ce3d8a6d1c4d855b28f5ee782af3eb633f1fa4293ace17a8e20441d0bb629c",
        "md5": "676461c12778f594f3a690f483518d6c",
        "sha256": "d67e5be1d33dbf5bfc01e2e76c0ec054eacf178004c61dcc61a1fb6465dccce2"
      },
      "downloads": -1,
      "filename": "TCAnalysis-1.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl",
      "has_sig": false,
      "md5_digest": "676461c12778f594f3a690f483518d6c",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": null,
      "size": 46759691,
      "upload_time": "2023-01-06T09:14:07",
      "upload_time_iso_8601": "2023-01-06T09:14:07.619281Z",
      "url": "https://files.pythonhosted.org/packages/f4/ce/3d8a6d1c4d855b28f5ee782af3eb633f1fa4293ace17a8e20441d0bb629c/TCAnalysis-1.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1872d962c44b8e964496fe0a478c03079cc00b8370c982aa98d7df32dbacc7c8",
        "md5": "3b4f83f76a529561f6a2457300d4dd2d",
        "sha256": "27a4824d99a18aab814d38148ad81aefd0c9b7e133a3036b4c58679ff7814a57"
      },
      "downloads": -1,
      "filename": "TCAnalysis-1.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl",
      "has_sig": false,
      "md5_digest": "3b4f83f76a529561f6a2457300d4dd2d",
      "packagetype": "bdist_wheel",
      "python_version": "cp39",
      "requires_python": null,
      "size": 46743303,
      "upload_time": "2023-01-06T09:14:40",
      "upload_time_iso_8601": "2023-01-06T09:14:40.766067Z",
      "url": "https://files.pythonhosted.org/packages/18/72/d962c44b8e964496fe0a478c03079cc00b8370c982aa98d7df32dbacc7c8/TCAnalysis-1.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}