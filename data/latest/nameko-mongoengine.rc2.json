{
  "info": {
    "author": "Ketan Goyal",
    "author_email": "ketangoyal1988@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Internet",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# nameko-mongoengine\n\n[![Build Status](https://travis-ci.com/ketgo/nameko-mongoengine.svg?branch=master)](https://travis-ci.com/ketgo/nameko-mongoengine)\n[![codecov.io](https://codecov.io/gh/ketgo/nameko-mongoengine/coverage.svg?branch=master)](https://codecov.io/gh/ketgo/nameko-mongoengine/coverage.svg?branch=master)\n[![Apache 2.0 licensed](https://img.shields.io/badge/License-Apache%202.0-yellow.svg)](LICENSE)\n---\n\nMongoEngine dependency provider for [Nameko](https://github.com/nameko/nameko) microservice framework.\n\n## Installation\n\n```bash\npip install nameko-mongoengine\n```\n\n## Usage\n\nThe basic usage of the dependency provider is shown:\n```python\nfrom mongoengine import Document, fields\nfrom nameko_mongoengine import MongoEngine\nfrom nameko.rpc import rpc\n\n\nclass MyModel(Document):\n    \"\"\"\n        My document model\n    \"\"\"\n    info = fields.StringField(required=True)\n\n\nclass MockService:\n    name = \"mock_service\"\n    engine = MongoEngine()\n\n    @rpc\n    def write(self, info):\n        model = MyModel()\n        model.info = info\n        model.save()\n        return model\n\n    @rpc\n    def read(self, _id):\n        return MyModel.objects.get(id=_id)\n```\n\nThe dependency `engine` exposes standard `pymongo` interface to database connections. The default connection can be accessed by the `db` property:\n```python\nclass MockService:\n    name = \"mock_service\"\n    engine = MongoEngine()\n\n    @rpc\n    def get(self, _id):\n        return self.engine.db.your_collection.find_one({'_id': _id})\n```\nOther database connections defined by `MongoEngine` aliases can be accessed by:\n```python\n@rpc\ndef get(self, _id):\n    db = self.engine.with_alias(\"your_alias\").db\n    return db.your_collection.find_one({'_id': _id})\n```\n\n## Configurations\n\nThe dependency configurations can be set in nameko `config.yaml` [file](https://docs.nameko.io/en/stable/cli.html), or by environment variables. \n\n### Config File\n\n```yaml\nMONGODB_URI: mongodb://localhost:27017/dbname?replicaSet=replset\n\n# or\n# ---- with aliases\nMONGODB_URI:\n  default: mongodb://localhost:27017/dbname?replicaSet=replset\n  \"<alias>\": \"<uri>\"\n```\n\n### Environment Variables\n\n```.env\nMONGODB_URI='mongodb://localhost:27017/dbname?replicaSet=replset'\n\n# or\n# ---- with aliases\nMONGODB_URI='{\"default\": \"mongodb://localhost:27017/dbname?replicaSet=replset\", \"<alias>\": \"<uri>\"}'\n```\n\n## Developers\n\nTo perform development tasks and run tests run:\n```bash\n$ pip install -e .[dev]\t\t\t# to install all dependencies\n$ docker run -d --restart=always --name some-rabbit -p 5672:5672 -p 15672:15672 rabbitmq:3-management   # Run rabbitmq-management server\n$ docker run --rm -d -p 27017:27017 mongo\t\t\t# Run mongodb server on docker\n$ pytest --cov=nameko_mongoengine tests/\t\t\t# to get coverage report\n$ pylint nameko_mongoengine\t\t\t# to check code quality with PyLint\n```\nOptionally you can use `make`.\n\n## Contributions\n\nPull requests always welcomed. Thanks!",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ketgo/nameko-mongoengine",
    "keywords": "nameko,mongoengine,mongodb,database,nosql,gridfs",
    "license": "Apache 2.0 license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "nameko-mongoengine",
    "package_url": "https://pypi.org/project/nameko-mongoengine/",
    "platform": "",
    "project_url": "https://pypi.org/project/nameko-mongoengine/",
    "project_urls": {
      "Homepage": "https://github.com/ketgo/nameko-mongoengine"
    },
    "release_url": "https://pypi.org/project/nameko-mongoengine/0.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.4",
    "summary": "Mongoengine dependency provider for Nameko microservice framework",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6239149,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "14dacf7babf6606d7824c3bbd9d1a9986d818e164374abcc4e33c43e1db1fa2b",
          "md5": "b14c9822859cf67526e06e8048ec887e",
          "sha256": "aba54c2ec07d108bbec33056132339a8acfd6886dad01be73938c3ccedf2d47b"
        },
        "downloads": -1,
        "filename": "nameko_mongoengine-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b14c9822859cf67526e06e8048ec887e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 3823,
        "upload_time": "2019-12-03T19:57:12",
        "upload_time_iso_8601": "2019-12-03T19:57:12.136078Z",
        "url": "https://files.pythonhosted.org/packages/14/da/cf7babf6606d7824c3bbd9d1a9986d818e164374abcc4e33c43e1db1fa2b/nameko_mongoengine-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "99667d9e18a59ac2d21bcfa46024ab64ace12974a91ae53e21aff00c887e67fb",
          "md5": "82641ed65475ff53d7bc4bc04a0d118a",
          "sha256": "644be45a056a974648b28008cef51d9d91d6aaaa2356800be5b6ddc9d5e56377"
        },
        "downloads": -1,
        "filename": "nameko_mongoengine-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "82641ed65475ff53d7bc4bc04a0d118a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 3947,
        "upload_time": "2019-12-04T04:19:37",
        "upload_time_iso_8601": "2019-12-04T04:19:37.125924Z",
        "url": "https://files.pythonhosted.org/packages/99/66/7d9e18a59ac2d21bcfa46024ab64ace12974a91ae53e21aff00c887e67fb/nameko_mongoengine-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "99667d9e18a59ac2d21bcfa46024ab64ace12974a91ae53e21aff00c887e67fb",
        "md5": "82641ed65475ff53d7bc4bc04a0d118a",
        "sha256": "644be45a056a974648b28008cef51d9d91d6aaaa2356800be5b6ddc9d5e56377"
      },
      "downloads": -1,
      "filename": "nameko_mongoengine-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "82641ed65475ff53d7bc4bc04a0d118a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.4",
      "size": 3947,
      "upload_time": "2019-12-04T04:19:37",
      "upload_time_iso_8601": "2019-12-04T04:19:37.125924Z",
      "url": "https://files.pythonhosted.org/packages/99/66/7d9e18a59ac2d21bcfa46024ab64ace12974a91ae53e21aff00c887e67fb/nameko_mongoengine-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}