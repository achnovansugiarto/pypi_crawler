{
  "info": {
    "author": "Nikita Girvel Dobrynin",
    "author_email": "widauka@ya.ru",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "![](https://byob.yarr.is/girvel/tiny_storage/coverage)\n\n# Summary\n\nLibrary for application data storage. It is:\n\n- tiny\n- key-value\n- single-file\n- YAML based\n\n## Example\n\n```py\nfrom tiny_storage import Unit, Type\nimport sys\n\n# matches the file /etc/example-app/yaml or %PROGRAMDATA%\\example-app\\config.yaml\nconfig = Unit('example-app', Type.global_config)\n\nif sys.argv[1] == 'set-greeting':\n  # changes greeting only if does not exist\n  if not config('lines.greeting').try_put(sys.argv[2]):\n    print('Greeting already exists. It should not be changed.')\nelse:\n  # prints greeting if it exists or given string\n  print(config('lines.greeting').pull('Hello, world!'))\n```\n\n## Installation\n\n```shell\npip install tiny_storage\n```\n\n# Full guide as a tiny_storage iceberg\n\n## 1. Hello world\n\n![](iceberg/1.jpg)\n\nSuppose you want to store a configuration of your application between sessions.\n\n```python\nfrom tiny_storage import Unit\n\n# create a storage unit\nconfig = Unit('application-name')\n\n# write the data\nconfig('the-best-number-ever').push(42)\n```\n\nThe code above will create a YAML configuration file in the appropriate place and save the number 42 as `the-best-number-ever` entry.\n\n## 2. Accessing data\n\n![](iceberg/2.jpg)\n\nSyntax for accessing data is the following:\n\n```python\nconfig('<dot separated path in config>').<access method>(<alternative value>)\n```\n\nThere are 5 access methods in total, but the get/set functionality is realized in pull/push methods.\n\n```python\nconfig('essential.greeting').pull('hello')  # get a greeting from config or 'hello'\nconfig('essential.greeting').push('hi')     # set a greeting as 'hi'\n```\n\n## 3. Storing config in different places\n\n![](iceberg/3.jpg)\n\nYou can define what type of config do you need and tiny_storage will choose the place according to standard of your OS. For example, to store data in global configuration file you pass `Type.global_config` to your storage unit definition, and it will go to `/etc` in linux and to `%PROGRAM_DATA%` in windows.\n\n```python\nfrom tiny_storage import Unit, Type\n\nconfig = Unit('application-name', Type.global_config)\n```\n\nThe list of all config types:\n\n| Data type            | Windows                            | Linux                          |\n|----------------------|------------------------------------|--------------------------------|\n| `Type.local`         | `{name}.yaml`                      | `{name}.yaml`                  |\n| `Type.user`          | `%APPDATA%/{name}/{name}.yaml`     | `$HOME/.{name}.yaml`           |\n| `Type.user_config `  | `%APPDATA%/{name}/config.yaml`     | `$HOME/.config/{name}.yaml`    |\n| `Type.global_data`   | `%PROGRAMDATA%/{name}/data.yaml`   | `/var/lib/{name}.yaml`         |\n| `Type.global_config` | `%PROGRAMDATA%/{name}/config.yaml` | `/etc/{name}.yaml`             |\n\nYou can also pass your own config type as a `(str) -> Path` function that constructs a path to config from the name.\n\n```python\nconfig = Unit('application-name', lambda name: Path(f\"/root/.{name}.yaml\"))\n```\n\n## 4. Access methods\n\n![](iceberg/4.jpg)\n\nThere are 5 most common cases of configuration data access and they are encapsulated into 5 access methods. \n\n### `.push(value)` to forcefully set an entry\n\n```python\nprint(f'Greeting was updated to {config(\"greeting\").push(\"hi\")}')\n```\n\n### `.pull(value)` to get an entry or default value\n\n```python\nprint(f'Current greeting is {config(\"greeting\").pull(\"<none>\")}')\n```\n\n### `.put(value)` to get the value or set it if it doesn't exist\n\n```python\nprint(f'{config(\"greeting\").put(\"Hello\")}, world')\n```\n\n### `.try_push(value)` to push and know whether something changes\n\n```python\nif not config(\"greeting\").try_push(input()):\n    print(\"You input the same greeting. Why are you doing that?\")\n```\n\n### `.try_put(value)` to put and know whether something changes\n\n```python\nif config(\"greeting\").try_put(\"Hello\"):\n    print(\"There was no greeting, so I put hello as one.\")\n```\n\n## 5. Laziness\n\n![](iceberg/5.jpg)\n\nYou can also pass a callable with no arguments as a value and it will be interpreted as a lazy value and be called only if it was used. For example, this hello world program will ask for a greeting only on the first launch:\n\n```python\nprint(config('greeting').put(input(\"greeting: \")), \"world!\")\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/girvel/tiny_storage",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tiny-storage-unstable-unstable",
    "package_url": "https://pypi.org/project/tiny-storage-unstable-unstable/",
    "platform": null,
    "project_url": "https://pypi.org/project/tiny-storage-unstable-unstable/",
    "project_urls": {
      "Homepage": "https://github.com/girvel/tiny_storage"
    },
    "release_url": "https://pypi.org/project/tiny-storage-unstable-unstable/1.1.0/",
    "requires_dist": [
      "PyYAML (>=5.3.1)"
    ],
    "requires_python": ">=3.6",
    "summary": "Tiny library for key-value single-file application data storage",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14751582,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "74f75734d1162c46c80d6665d72114fd70ca9d95806ba90870d73f835e71d9b4",
          "md5": "50c2df9fe5ce0163715f6e7f8ca3c4e0",
          "sha256": "47c39052f0c5577ee3b747143a0f4a41d0a261f9bc64ee6fe2a90f36c5fa97da"
        },
        "downloads": -1,
        "filename": "tiny_storage_unstable_unstable-0.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "50c2df9fe5ce0163715f6e7f8ca3c4e0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4056,
        "upload_time": "2021-12-23T09:35:33",
        "upload_time_iso_8601": "2021-12-23T09:35:33.030662Z",
        "url": "https://files.pythonhosted.org/packages/74/f7/5734d1162c46c80d6665d72114fd70ca9d95806ba90870d73f835e71d9b4/tiny_storage_unstable_unstable-0.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b151d3662a75bbcfca1df37cee238f0e6fee13f025372529ab68bf9c049d229b",
          "md5": "7959dacb6e8871f03f3fc965d98cee27",
          "sha256": "b5e0d274d10040092ce8b0b995f128a29e17800567f7f8b23f5c78b0cf33d7e2"
        },
        "downloads": -1,
        "filename": "tiny_storage-unstable-unstable-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7959dacb6e8871f03f3fc965d98cee27",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3528,
        "upload_time": "2021-12-23T09:35:34",
        "upload_time_iso_8601": "2021-12-23T09:35:34.489735Z",
        "url": "https://files.pythonhosted.org/packages/b1/51/d3662a75bbcfca1df37cee238f0e6fee13f025372529ab68bf9c049d229b/tiny_storage-unstable-unstable-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4912c71bf48609ee61279efbc3d66b656be78b66126180bbf941bab8102f4990",
          "md5": "354aba7cc5bfcfcaa8a41273bd887929",
          "sha256": "8065af5fffa8fd43700400f938860fba17f6ed2d9d2f934043d746329323be27"
        },
        "downloads": -1,
        "filename": "tiny_storage_unstable_unstable-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "354aba7cc5bfcfcaa8a41273bd887929",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5075,
        "upload_time": "2022-08-13T20:38:08",
        "upload_time_iso_8601": "2022-08-13T20:38:08.941920Z",
        "url": "https://files.pythonhosted.org/packages/49/12/c71bf48609ee61279efbc3d66b656be78b66126180bbf941bab8102f4990/tiny_storage_unstable_unstable-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b69a0f41208e8ef2a7d9d51ecb1fa4afe815021ad3f19335994ab3b647ef20fe",
          "md5": "d13eba656fab55ab3206180050f09404",
          "sha256": "3ae8e8838595bdb4ca5ea828c4270f60bc153987f83fb07fa072b8e7e5bbaa00"
        },
        "downloads": -1,
        "filename": "tiny_storage-unstable-unstable-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d13eba656fab55ab3206180050f09404",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4700,
        "upload_time": "2022-08-13T20:38:10",
        "upload_time_iso_8601": "2022-08-13T20:38:10.451304Z",
        "url": "https://files.pythonhosted.org/packages/b6/9a/0f41208e8ef2a7d9d51ecb1fa4afe815021ad3f19335994ab3b647ef20fe/tiny_storage-unstable-unstable-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4912c71bf48609ee61279efbc3d66b656be78b66126180bbf941bab8102f4990",
        "md5": "354aba7cc5bfcfcaa8a41273bd887929",
        "sha256": "8065af5fffa8fd43700400f938860fba17f6ed2d9d2f934043d746329323be27"
      },
      "downloads": -1,
      "filename": "tiny_storage_unstable_unstable-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "354aba7cc5bfcfcaa8a41273bd887929",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 5075,
      "upload_time": "2022-08-13T20:38:08",
      "upload_time_iso_8601": "2022-08-13T20:38:08.941920Z",
      "url": "https://files.pythonhosted.org/packages/49/12/c71bf48609ee61279efbc3d66b656be78b66126180bbf941bab8102f4990/tiny_storage_unstable_unstable-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b69a0f41208e8ef2a7d9d51ecb1fa4afe815021ad3f19335994ab3b647ef20fe",
        "md5": "d13eba656fab55ab3206180050f09404",
        "sha256": "3ae8e8838595bdb4ca5ea828c4270f60bc153987f83fb07fa072b8e7e5bbaa00"
      },
      "downloads": -1,
      "filename": "tiny_storage-unstable-unstable-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "d13eba656fab55ab3206180050f09404",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 4700,
      "upload_time": "2022-08-13T20:38:10",
      "upload_time_iso_8601": "2022-08-13T20:38:10.451304Z",
      "url": "https://files.pythonhosted.org/packages/b6/9a/0f41208e8ef2a7d9d51ecb1fa4afe815021ad3f19335994ab3b647ef20fe/tiny_storage-unstable-unstable-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}