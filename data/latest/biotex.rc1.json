{
  "info": {
    "author": "Diogo de J. S. Machado",
    "author_email": "diogomachado.bioinfo@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "BioTEX\n=======\nThe biotex library offers resources to support text mining strategy using bioinformatics tool.\n\nStand alone tools based on library are available at link <https://sourceforge.net/projects/biotex-tools/>.\n\nInstallation\n------------\nTo install aminocode through `pip`::\n\n      pip install biotex\n\n\nTested Platforms\n----------------\n- Python:\n\n - 3.7.4\n\n- Windows (64bits):\n\n - 10\n\n- Ubuntu (64bits)\n\n - 18.04.1 LTS\n\nRequired external libraries\n---------------------------\n- numpy\n- pandas\n- scipy\n- scikit-learn\n- matplotlib\n- unidecode\n- biopython\n- sweep\n\nFunctions\n---------------\n.. csv-table::\n   :header: Function Name, Description, Input, Output\n   :widths: auto\n   :stub-columns: 1\n   :delim: -\n\n   biotex.aminocode.encodeText  biotex.aminocode.encodetext  biotex.aminocode.et-Encodes a string with AMINOcode.-text: natural language text string to be encoded;  detailing: details in coding. 'd' for details in digits. 'p' for details on the punctuation. 'dp' or 'pd' for both.-encode text in string format.\n   biotex.aminocode.decodeText  biotex.aminocode.decodetext  biotex.aminocode.dt-Decodes a string with reverse AMINOcode.-text: text string encoded using the encodefile function to be decode;  detailing: details used in the text to be decoded. 'd' for details in digits. 'p' for details on the punctuation. 'dp' or 'pd' for both.-decode text in string format.\n   biotex.aminocode.encodeFile  biotex.aminocode.encodefile  biotex.aminocode.ef-Encodes a text file or a list of strings with AMINOcode.-input_file_name: text file name or list of string. It can also be used in a list of SeqRecord, in which case the function will automatically extract the headers to do the encoding;  output_file_name: the name for the output file. If not defined, the result will only be returned as a variable;  detailing: same as in the encodetext function;  header_format: format for the headers of the generated FASTA. It can be 'number+originaltext', 'number' or 'originaltext'. 'number' is a count of the lines in the input file. Blank lines are considered in the count, but are not added to the FASTA file. 'originaltext' is the input text itself;  verbose: if True displays progress.-list of SeqRecord*;  If defined output_file_name a file will be saved.\n   biotex.aminocode.decodeFile  biotex.aminocode.decodefile  biotex.aminocode.df-Decodes a fasta file or a list of SeqRecord with the reverse amino acid.-input_file_name: file name or list of SeqRecord;  output_file_name: the name for the output file. If not defined, the result will only be returned as a variable;  detailing: same as in the decodetext function;  verbose: if True displays progress;  output: string list. If defined output_file_name a file will be saved.-string list;  if defined output_file_name a file will be saved.\n   biotex. dnabits.encodeText   biotex.dnabits.encodetext  biotex. dnabits.et-Encodes a string with DNAbits.-text: natural language text string to be encoded.-encode text in string format.\n   biotex.dnabits.decodeText  biotex.dnabits.decodetext  biotex.dnabits.dt-Decodes a string with reverse DNAbits.-text: text string encoded using the encodefile function to be decode.-decode text in string format.\n   biotex.dnabits.encodeFile   biotex.dnabits.encodefile  biotex.dnabits.ef-Encodes a text file or a list of strings with DNAbits.-input_file_name: text file name or list of string. It can also be used in a list of SeqRecord, in which case the function will automatically extract the headers to do the encoding;  output_file_name: the name for the output file. If not defined, the result will only be returned as a variable;  header_format: format for the headers of the generated FASTA. It can be 'number+originaltext', 'number' or 'originaltext'. 'number' is a count of the lines in the input file. Blank lines are considered in the count, but are not added to the FASTA file. 'originaltext' is the input text itself;  verbose: if True displays progress.-list of SeqRecord.  if defined output_file_name a file will be saved.\n   biotex.dnabits.decodeFile  biotex.dnabits.decodefile  biotex.dnabits.df-Decodes a text file or a list of SeqRecord with reverse DNAbits.-input_file_name: file name or list of SeqRecord;  output_file_name: the name for the output file. If not defined, the result will only be returned as a variable;  verbose: if True displays progress.-string list;  if defined output_file_name a file will be saved.\n   biotex.fastatools.list2SeqRecord  biotex.fastatools.list2seqrecord  biotex.fastatools.list2bioSeqRecord  biotex.fastatools.list2bioseqrecord  biotex.fastatools.list2fasta-Converts a list of strings to a list of SeqRecord, a biopython object that holds Biological sequences and information about it.-seq: list of biological sequences in string format;  header: list of headers in string format, if set to \"None\" the headers will be automatically defined with an increasing number.-list of SeqRecord.\n   biotex.fastatools.fastaRead  biotex.fastatools.fastaread-Uses biopython to import a FASTA file.-input_file_name: input fasta file name.-list of SeqRecord.\n   biotex.fastatools.fastaWrite  biotex.fastatools.fastawrite-Create a file using a list of SeqRecord.-records: list of SeqRecord;  output_file_name: output fasta file name.-a file is saved with the defined name.\n   biotex.fastatools.getHeader  biotex.fastatools.getheader-Extracts the header from a list of SeqRecord.-records: list of SeqRecord.-list with headers.\n   biotex.fastatools.getSeq  biotex.fastatools.getseq-Extracts the string from a list of SeqRecord.-records: list of SeqRecord.-list with sequences.\n   biotex.fastatools.removePattern  biotex.fastatools.removepattern-Removes patterns from a SeqRecord range based on regular expression.-records: list of SeqRecord;  rex: regular expression.-list of SeqRecord with removal applied.\n   biotex.fastatools.clustalOmega  biotex.fastatools.clustalomega  biotex.fastatools.clustalo-Uses the Clustal Omega to align the strings in a FASTA file.-input_file_name: input FASTA file name.-list with strings aligned in string format.\n   biotex.fastatools.getCons  biotex.fastatools.getcons-Save a temporary file with the sequences from the list of SeqRecord, apply the clustalo function and obtain alignment consensus.-records: SeqRecord.list.-consensus for alignment in string format.\n\n\\*SeqRecord: Biopython object to store biological sequences and its information, as described in <https://biopython.org/DIST/docs/api/Bio.SeqRecord.SeqRecord-class.html>\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "biotex",
    "package_url": "https://pypi.org/project/biotex/",
    "platform": "",
    "project_url": "https://pypi.org/project/biotex/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/biotex/1.0.0.0/",
    "requires_dist": [
      "numpy",
      "pandas",
      "unidecode",
      "biopython",
      "sweep",
      "scipy",
      "scikit-learn",
      "matplotlib"
    ],
    "requires_python": "",
    "summary": "The biotext library offers resources to support text mining strategy using bioinformatics tool",
    "version": "1.0.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8218645,
  "releases": {
    "1.0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "95ab548cdafe0930ea12d0c4045cacaa63c894b1f6cdaf778a8c867694916243",
          "md5": "c167ff8698e18c489b88193a3065e0ff",
          "sha256": "a9bdf87feaa9ba3b0acbe4b46b18ba2a4957599e7adbfce05b4fc47e815b5ecf"
        },
        "downloads": -1,
        "filename": "biotex-1.0.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c167ff8698e18c489b88193a3065e0ff",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17150,
        "upload_time": "2020-09-18T16:48:04",
        "upload_time_iso_8601": "2020-09-18T16:48:04.476104Z",
        "url": "https://files.pythonhosted.org/packages/95/ab/548cdafe0930ea12d0c4045cacaa63c894b1f6cdaf778a8c867694916243/biotex-1.0.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "95ab548cdafe0930ea12d0c4045cacaa63c894b1f6cdaf778a8c867694916243",
        "md5": "c167ff8698e18c489b88193a3065e0ff",
        "sha256": "a9bdf87feaa9ba3b0acbe4b46b18ba2a4957599e7adbfce05b4fc47e815b5ecf"
      },
      "downloads": -1,
      "filename": "biotex-1.0.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c167ff8698e18c489b88193a3065e0ff",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 17150,
      "upload_time": "2020-09-18T16:48:04",
      "upload_time_iso_8601": "2020-09-18T16:48:04.476104Z",
      "url": "https://files.pythonhosted.org/packages/95/ab/548cdafe0930ea12d0c4045cacaa63c894b1f6cdaf778a8c867694916243/biotex-1.0.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}