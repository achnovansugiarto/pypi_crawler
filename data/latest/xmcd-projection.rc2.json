{
  "info": {
    "author": "Luka Skoric",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# XMCD Projection\n\n[![Documentation Status](https://readthedocs.org/projects/xmcd-projection/badge/?version=latest)](https://xmcd-projection.readthedocs.io/en/latest/?badge=latest)\n[![DOI](https://zenodo.org/badge/374098368.svg)](https://zenodo.org/badge/latestdoi/374098368)\n[![PyPi version](https://pypip.in/v/XMCD-Projection/badge.png)](https://pypi.org/project/XMCD-Projection/)\n\nProjection simulation of the PEEM structures\n\n## Installation\n\nThe project is available on PyPi: \n```\npip install xmcd-projection\n```\n\nIn order to run the example notebooks, jupyter also needs to be installed: \n```\npip install jupyter\n```\n\n## Usage\nSee the [docs](https://xmcd-projection.readthedocs.io/en/latest/?badge=latest) for details and examples: \n\nIf running in Jupyter, make sure you use qt gui for the visualizer to work:\n```python\n%gui qt\n%matplotlib qt\n```\n\n\n### From GMSH .msh file and magnetisation in .csv exported from Magnumfe data\n\n\nTo do this, have .msh file exported by GMSH and the magnetisation data by importing the data in Paraview and going to Save Data... and exporting to .csv. See `examples/example_script.py`:\n```python \n    from xmcd_projection import *\n\n    msh_file = \"example_mesh.msh\"\n    mag_file = \"mag_data.csv\"\n\n    # get the mesh\n    msh = Mesh.from_file(msh_file)\n    # get the projection vector\n    p = get_projection_vector(90, 16)\n\n    # prepare raytracing object\n    raytr = RayTracing(msh, p)\n    raytr.get_piercings()\n    struct = raytr.struct\n    struct_projected = raytr.struct_projected\n\n    # load magnetization and make sure the indices are not shuffled\n    magnetisation, mag_points = load_mesh_magnetisation(mag_file)\n    shuffle_indx = msh.get_shuffle_indx(mag_points)\n    magnetisation = magnetisation[shuffle_indx, :]\n\n    # get the colours and xmcd values\n    xmcd_value = raytr.get_xmcd(magnetisation)\n    mag_colors = get_struct_face_mag_color(struct, magnetisation)\n\n    # define the visualizer parameters and show\n    azi = 90\n    center_struct = [0, 0, 0]\n    dist_struct = 2e4\n    center_peem = [0, -1000, 0]\n    dist_peem = 2e5\n\n    vis = MeshVisualizer(struct, struct_projected,\n                        projected_xmcd=xmcd_value, struct_colors=mag_colors)\n    vis.show(azi=azi, center=center_peem, dist=dist_peem)\n    vis.start()\n```\n\n### From .vtk generated from Mumax data\nImport .vtk file in Paraview, go to Saving Data... and export to .vtu format for the mesh, and .csv format for the magnetization. Ensure that you are only exporting the part with nonzero magnetization. This can be achieved by setting a threshold in Paraview. Then, it is very similar to Magnum.fe, only care needs to be taken to set the appropriate scale. See `examples/mumax_example_script.py`:\n```python\n    from xmcd_projection import *\n\n    msh_file = \"mumax_mesh.vtu\"\n    mag_file = \"mumax_mag.csv\"\n    # need to scale points to get them in nm\n    scale = 1e9\n\n    # get the mesh\n    msh = Mesh.from_file(msh_file, scale=scale)\n    print(msh.cells)\n    # get the projection vector\n    p = get_projection_vector(90, 16)\n\n    # prepare raytracing object\n    raytr = RayTracing(msh, p)\n    raytr.get_piercings()\n    struct = raytr.struct\n    struct_projected = raytr.struct_projected\n\n    # load magnetization and make sure the indices are not shuffled\n    magnetisation, mag_points = load_mesh_magnetisation(mag_file, scale=scale)\n    shuffle_indx = msh.get_shuffle_indx(mag_points)\n    magnetisation = magnetisation[shuffle_indx, :]\n\n    # get the colours and xmcd values\n    xmcd_value = raytr.get_xmcd(magnetisation)\n    mag_colors = get_struct_face_mag_color(struct, magnetisation)\n\n    # define the visualizer parameters and show\n    azi = 90\n    center_struct = [0, 0, 0]\n    dist_struct = 1e4\n    center_peem = [100, -200, 0]\n    dist_peem = 8e4\n\n    vis = MeshVisualizer(struct, struct_projected,\n                        projected_xmcd=xmcd_value, struct_colors=mag_colors)\n    vis.show(azi=azi, center=center_peem, dist=dist_peem)\n    vis.start()\n```\n\n### From STL file and magnetisation as numpy array\nThis is older version of the library, so might not work as well. Here just in case it is needed in the future\n```python\n%gui qt\n%matplotlib qt\nfrom  xmcd_projection import *\nfrom xmcd_projection.stl_visualisation import *\nimport trimesh\nstructure_file = r\"testing\\SOL6-1-3.stl\"\nmagnetisation_file = r\"testing\\SOL6-1-3_uniform_mag.p\"\n\nstruct = trimesh.load(structure_file)\nmagnetisation = np.zeros(struct.vertices.shape)\nmagnetisation[:, 1] = 1\n\n# define projection vector\np = get_projection_vector(90, 15)\n\n# create visualisation\nv = Visualizer(struct, magnetisation, p)\nv.generate_view()\nv.show()\nv.save_render('test1.png')\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT LICENSE",
    "maintainer": "",
    "maintainer_email": "",
    "name": "XMCD-Projection",
    "package_url": "https://pypi.org/project/XMCD-Projection/",
    "platform": "",
    "project_url": "https://pypi.org/project/XMCD-Projection/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/XMCD-Projection/1.0.1/",
    "requires_dist": [
      "trimesh (>=3.9.12)",
      "numpy (==1.20.2)",
      "matplotlib (>=3.4.1)",
      "numba (>=0.53.1)",
      "joblib (>=1.0.1)",
      "PyQt5 (>=5.15.4)",
      "pyqtgraph (>=0.11.1)",
      "scikit-image (>=0.18.1)",
      "scipy (>=1.6.2)",
      "PyOpenGL (>=3.1.5)",
      "cached-property (>=1.5.2)",
      "pandas (>=1.0.5)",
      "meshio (>=4.0.16)",
      "tqdm (<=4.46.1)"
    ],
    "requires_python": "",
    "summary": "Library for simulating XMCD projection signal",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11010248,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a77ccf873eb19c31ca4ac4a782c7495b0c0d1777ccd96025ee24dd994d1ef507",
          "md5": "0c9f1d8e3e1e8d35d0301e38f8bb4c62",
          "sha256": "c6f3bffce3662c5588b3ac43db440da2bee8538ef8a166a1900c07fff5d0a48a"
        },
        "downloads": -1,
        "filename": "XMCD_Projection-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0c9f1d8e3e1e8d35d0301e38f8bb4c62",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18199,
        "upload_time": "2021-07-13T11:02:20",
        "upload_time_iso_8601": "2021-07-13T11:02:20.894848Z",
        "url": "https://files.pythonhosted.org/packages/a7/7c/cf873eb19c31ca4ac4a782c7495b0c0d1777ccd96025ee24dd994d1ef507/XMCD_Projection-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e84e4989cb71979de782d21eb0095eed153f1f692689082e91252471f3c0b2d9",
          "md5": "92e45c151809083bc53c8186ee1822c7",
          "sha256": "5320d146d91c6082eaf81199a250d2a08c69cf9d81ee10d71c6d274517425790"
        },
        "downloads": -1,
        "filename": "XMCD Projection-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "92e45c151809083bc53c8186ee1822c7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14951,
        "upload_time": "2021-07-13T11:02:22",
        "upload_time_iso_8601": "2021-07-13T11:02:22.152502Z",
        "url": "https://files.pythonhosted.org/packages/e8/4e/4989cb71979de782d21eb0095eed153f1f692689082e91252471f3c0b2d9/XMCD%20Projection-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bc36438f89b8f8a8ee3badf01775e85c791b763c27959b85ec2dc6e30f1c3b49",
          "md5": "3d3cab3f035c4341d816e1bd7d257dba",
          "sha256": "16be388d368cc07578629b3d654a997f110c23adce4311eca2ac758c21de3014"
        },
        "downloads": -1,
        "filename": "XMCD_Projection-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3d3cab3f035c4341d816e1bd7d257dba",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18223,
        "upload_time": "2021-07-26T22:32:56",
        "upload_time_iso_8601": "2021-07-26T22:32:56.375484Z",
        "url": "https://files.pythonhosted.org/packages/bc/36/438f89b8f8a8ee3badf01775e85c791b763c27959b85ec2dc6e30f1c3b49/XMCD_Projection-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "71ba36d099f6ff887458b585f75f938102337a4bac762bc075c4c3e1cc861716",
          "md5": "46ea51f9350f51eb19c87ab2a0c569f8",
          "sha256": "7c1dd73060a93002a9222a67e770d3073ffe4487d84ba0d423711a2519dae871"
        },
        "downloads": -1,
        "filename": "XMCD Projection-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "46ea51f9350f51eb19c87ab2a0c569f8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15004,
        "upload_time": "2021-07-26T22:32:58",
        "upload_time_iso_8601": "2021-07-26T22:32:58.370647Z",
        "url": "https://files.pythonhosted.org/packages/71/ba/36d099f6ff887458b585f75f938102337a4bac762bc075c4c3e1cc861716/XMCD%20Projection-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bc36438f89b8f8a8ee3badf01775e85c791b763c27959b85ec2dc6e30f1c3b49",
        "md5": "3d3cab3f035c4341d816e1bd7d257dba",
        "sha256": "16be388d368cc07578629b3d654a997f110c23adce4311eca2ac758c21de3014"
      },
      "downloads": -1,
      "filename": "XMCD_Projection-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3d3cab3f035c4341d816e1bd7d257dba",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 18223,
      "upload_time": "2021-07-26T22:32:56",
      "upload_time_iso_8601": "2021-07-26T22:32:56.375484Z",
      "url": "https://files.pythonhosted.org/packages/bc/36/438f89b8f8a8ee3badf01775e85c791b763c27959b85ec2dc6e30f1c3b49/XMCD_Projection-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "71ba36d099f6ff887458b585f75f938102337a4bac762bc075c4c3e1cc861716",
        "md5": "46ea51f9350f51eb19c87ab2a0c569f8",
        "sha256": "7c1dd73060a93002a9222a67e770d3073ffe4487d84ba0d423711a2519dae871"
      },
      "downloads": -1,
      "filename": "XMCD Projection-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "46ea51f9350f51eb19c87ab2a0c569f8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 15004,
      "upload_time": "2021-07-26T22:32:58",
      "upload_time_iso_8601": "2021-07-26T22:32:58.370647Z",
      "url": "https://files.pythonhosted.org/packages/71/ba/36d099f6ff887458b585f75f938102337a4bac762bc075c4c3e1cc861716/XMCD%20Projection-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}