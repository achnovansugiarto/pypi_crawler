{
  "info": {
    "author": "fennuDetudou",
    "author_email": "upczyxl@163.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# 说明\n\n1. 基于bert的中文自然语言处理工具\n2. 包括情感分析、中文分词、词性标注、以及命名实体识别功能\n3. 提供了训练接口，通过指定输入输出以及谷歌提供的下载好的预训练模型即可进行自己的模型的训练，训练任务有task_name参数决定，目前提供的任务主要包括句子匹配、文本分类、命名实体识别、序列标注任务\n4. 使用`pip install tudou`安装使用\n5. 需要下载预先训练好的模型，模型地址在底部\n\n# 使用示例\n在predict_test.ipynb中有预测代码的演示，可以看到效果比绝大多数开源中文nlp库要好，但是速度较慢（时间主要浪费在加载模型参数上了），**所以推荐一次性输入多个语句的文本列表进行使用**\n\n# 依赖项\n## 依赖项\n\n`python >=3.6\ntensorflow >= 1.12.0`\n## 硬件\n1. 预测与使用在普通cpu机器上既可以运行\n2. 训练接口需要在GPU机器上进行，当内存不够用时，推荐减少batch_size而不是max_sequence_len,对精度影响较小\n\n# 功能简介\n\n提供了三个接口，包括预测，常用工具以及利用bert训练模型的接口\n\n# 使用说明\n\n1. 在使用前要先下载模型，模型下载地址附在最后，根据不同的任务下载不同的模型\n1. 同时也可以使用自己训练好的模型\n1. 训练模型需要预先下载谷歌提供的bert预训练模型（该项目也提供：位于pre_trained_model下\n\n## train函数\n\n新建一个实例\n\n`trainer=tudouNLP.models.train.train(*params)`\n\n### help\n\ntrain函数的说明函数，包括一些参数及文件格式的说明\n\n`trainer.help()`\n\n### 训练\n\n`trainer()`\n\n### 预测\n\n`results=trainer.predict()`\n\n#### 说明\n\n1. 训练的时候没有返回值，根据参数中task_name开始不同的训练任务\n\n1. 包括文本分类，序列标注以及句子匹配任务的训练\n\n1. 预测时要注意与训练时参数要相同（主要是`label_list、label_dict`），同时输出目录也要相同\n\n1. 参数简介\n\n   ```\n    :param task_name:任务名：目前包括实体识别ner，序列标注tag，句子分类classify，句子配对pair\n    :param label_list: 任务的标签列表，在序列标注任务中要加入【CLS】,[SEP]\n    :param label_dict: 序列标注任务中标签与ID对应的字典名\n    :param data_dir: 数据文件\n    :param model_dir: 模型文件\n    :param output_dir: 输出文件\n    :param eval: 是否进行验证\n    :param max_seq_length:\n    :param learning_rate:\n    :param batch_size:\n   ```\n\n1. 提供的文件格式说明\n\n   ```\n   1. 序列标注任务文件格式为 word tag\n   2. 文本分类任务文件格式为 sentence label\n   3. 句子配对任务文件格式为 index text1 text2 label  ，其中index为不必要的列，中间分隔符为\\t\n   4. 文件在data_dir中，训练文件命名为train.txt，验证集文件命名为dev.txt\n   ```\n\n## predict\n\n**使用时要创建一个实例**\n\n\n### sentence函数\n\n`predictor=tudouNLP.models.predict.sentence(model_dir）# 参数为模型所在文件夹`\n\n#### 情感分析\n\n`result=predictor.sentiment(document,full_msg)`\n\n1. 返回情感分析结果，当full_msg参数为True时，返回全部的分析结果\n1. document为要分析的句子列表\n1. **注意：即使是单个句子，也要以列表或元组的形式输入**\n\n#### 句子匹配\n\n`result=predictor.pair(document,full_msg,model_name)`\n\n同情感分析\n\n### tagger函数\n\n`predictor=tudouNLP.models.predict.tagger(model_dir)`\n\n#### 分词\n\n`result=predictor.cut(document,mode='cut')`\n\n1. 返回分词结果列表\n1. document为要分析的句子列表\n1. 注意：即使是单个句子，也要以列表或元组的形式输入\n\n#### 词性标注\n\n`result=predictor.cut(document,mode='posseg')`\n\n同分词，不过返回分词结果列表\n\n## utils函数\n\n**使用时要创建一个实例**\n\n`tool=tudouNLP.tools.utils.tools()`\n\n#### 序列标注数据集转换\n\n`tool.posseg_data(input_dir,output_file)`\n\n1. 将序列标注的数据集转换为bert模型可以识别的模式\n\n#### 模型压缩\n\n`tool.compress_model(input_file,output_file)`\n\n将训练后的模型参数进行压缩\n\n# 模型下载\n\n链接: https://pan.baidu.com/s/1_dBX3-mjY3-Dedm96XNY2g     提取码: tjqe",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "bert nlp ner NER named entity recognition tensorflow machine learning sentence encoding embedding pos tag sentiment judge",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tudou",
    "package_url": "https://pypi.org/project/tudou/",
    "platform": "",
    "project_url": "https://pypi.org/project/tudou/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/tudou/2.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A Chinese NLP tools based Google-bert",
    "version": "2.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4934595,
  "releases": {
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e6ffd4e9270c60d4b1c5814eb1c279986a4486667dadac3ca6dbce4e628b06ca",
          "md5": "e863cf88ffcf7de93f7f38065b91b05e",
          "sha256": "7ea77a79c906d679008392ab513cf762f451abe8766a3488f6416dbdcdb69b21"
        },
        "downloads": -1,
        "filename": "tudou-2.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e863cf88ffcf7de93f7f38065b91b05e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 116702,
        "upload_time": "2019-03-13T13:23:34",
        "upload_time_iso_8601": "2019-03-13T13:23:34.427630Z",
        "url": "https://files.pythonhosted.org/packages/e6/ff/d4e9270c60d4b1c5814eb1c279986a4486667dadac3ca6dbce4e628b06ca/tudou-2.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e6ffd4e9270c60d4b1c5814eb1c279986a4486667dadac3ca6dbce4e628b06ca",
        "md5": "e863cf88ffcf7de93f7f38065b91b05e",
        "sha256": "7ea77a79c906d679008392ab513cf762f451abe8766a3488f6416dbdcdb69b21"
      },
      "downloads": -1,
      "filename": "tudou-2.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "e863cf88ffcf7de93f7f38065b91b05e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 116702,
      "upload_time": "2019-03-13T13:23:34",
      "upload_time_iso_8601": "2019-03-13T13:23:34.427630Z",
      "url": "https://files.pythonhosted.org/packages/e6/ff/d4e9270c60d4b1c5814eb1c279986a4486667dadac3ca6dbce4e628b06ca/tudou-2.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}