{
  "info": {
    "author": "re.public",
    "author_email": "re.public@outlook.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# r-functions\n`r-functions` is a small library which allows users to call R functions from within Python. Each function runs in a temporary R subprocess which exits upon completion. An async version is provided for concurrent execution.\n\nConsider using Apache Arrow to transfer large datasets between Python and R, as parameters and return values are serialized in memory as JSON. \n\n### Prerequisites\n- Python 3.6+\n- R 3/4.0+\n  - jsonlite\n\n\n### Installation\nEnsure that RScript is in your `PATH` and jsonlite is installed.\n\n```bash\n# install jsonlite\nRscript -e \"install.packages('jsonlite', repos='https://cloud.r-project.org/', lib = .Library)\"\n\n# or pip3, depending on your platform\npip install r-functions \n```\n\n### Example file: _test.R_\n```R\nadd <- function(a, b) {\n    a + b\n}\n\ngreet <- function(name, adjective) {\n    paste(\"Hello\", name, \"the\", adjective)\n}\n```\n\n### Example: run functions from _test.R_\n```python\nfrom r_functions import create, run\n\n# create Python functions bound to R functions\nadd = create(\"test.R\", \"add\")\ngreet = create(\"test.R\", \"greet\")\n\nsum = add(2, 3)\nprint(sum) # 5\n\n# we can use named parameters or positional parameters, but not both\ngreeting = greet(name=\"John\", adjective=\"Wise\")\nprint(greeting) # \"Hello John the Wise\"\n\n# alternatively, use r_functions.run\n\n# lists provide positional parameters\nsum = run(\"test.R\", \"add\", [2, 3])\n\n# dicts provide named parameters\ngreeting = run(\"test.R\", \"greet\", {\n    \"name\": \"John\",\n    \"adjective\": \"Wise\",\n})\n\n# optionally, provide subprocess options\n# https://docs.python.org/3/library/subprocess.html#frequently-used-arguments\nrun(\"test.R\", \"add\", [1, 2], {\n    \"cwd\": None, \n    \"env\": None, \n    \"input\": None, \n    \"stdout\": None, \n    \"stderr\": None, \n    # ...\n})\n```\n\n\n### Example: run functions from _test.R_ asynchronously\n```python\nimport asyncio\nimport sys\nfrom r_functions import create_async, run_async\n\n# on Windows, we must use the ProactorEventLoop to support subprocesses\n# https://docs.python.org/3.6/library/asyncio-subprocess.html#windows-event-loop\nif sys.platform == \"win32\":\n    asyncio.set_event_loop(asyncio.ProactorEventLoop())\n\nasync def main():\n\n    # create async Python functions bound to R functions\n    add = create_async(\"test.R\", \"add\")\n    greet = create_async(\"test.R\", \"greet\")\n\n    sum = await add(2, 3)\n    print(sum) # 5\n\n    # we can use named parameters or positional parameters, but not both\n    greeting = await greet(name=\"John\", adjective=\"Wise\")\n    print(greeting) # \"Hello John the Wise\"\n\n    # alternatively, use r_functions.run\n\n    # lists provide positional parameters\n    sum = await run_async(\"test.R\", \"add\", [2, 3])\n\n    # dicts provide named parameters\n    greeting = await run_async(\"test.R\", \"greet\", {\n        \"name\": \"John\",\n        \"adjective\": \"Wise\",\n    })\n\n    # optionally, provide subprocess options - by default, stdout/stderr use subprocess.PIPE\n    # https://docs.python.org/3.6/library/asyncio-subprocess.html#asyncio.AbstractEventLoop.subprocess_exec\n    await run_async(\"test.R\", \"add\", [1, 2], {\n        \"cwd\": None, \n        \"env\": None, \n        \"stdout\": None, \n        \"stderr\": None, \n        \"limit\": None, \n        # ...\n    })\n\nloop = asyncio.get_event_loop()\nloop.run_until_complete(main())\n```\n\n\n### Notes\nWhen running async R functions on Windows, you must use the ProactorEventLoop to support subprocesses. \nFor example:\n\n```python\nimport asyncio\nimport sys\n\nif sys.platform == \"win32\":\n    asyncio.set_event_loop(asyncio.ProactorEventLoop())\n```\n\nWhen supplying custom environmental variables to an R subprocess, you must include a valid PATH which contains the R executable. On Windows, a SYSTEMROOT (usually \"C:\\Windows\" or simply `%SystemRoot%`) must also be provided. \n\nSpecifying custom environmental variables for R can be useful if global changes are not desired, or if the user wishes to use a different version of R without reconfiguring their PATH.\n\nFor example:\n\n\n```R\nget_env <- function(name) {\n    Sys.getenv(name)\n}\n```\n\n```python\nimport os\nfrom r_functions import run\n\n# on Posix-like systems\ntest_value = run(\"test.R\", \"get_env\", {\"name\": \"test\"}, {\n    \"shell\": True,\n    \"env\": {\n        \"test\": \"test_value\", \n        \"PATH\": \"/opt/R-$VERSION/bin\",\n        \"R_PROFILE\": \"/opt/R-$VERSION/etc/Rprofile.site\",\n        \"R_LIBS\": \"/opt/R-$VERSION/library\",\n    }\n})\n\n# on Windows\ntest_value = run(\"test.R\", \"get_env\", {\"name\": \"test\"}, {\n    \"shell\": True,\n    \"env\": {\n        \"test\": \"test_value\", \n        \"PATH\": \"X:\\\\R-$VERSION\\\\bin\"\n        \"R_PROFILE\": \"X:\\\\R-$VERSION\\\\etc\\\\Rprofile.site\",\n        \"R_LIBS\": \"X:\\\\R-$VERSION\\\\library\"\n        \"SYSTEMROOT\": os.path.expandvars(\"%SystemRoot%\"), \n    }\n})\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/park-brian/r-functions",
    "keywords": "R,function,wrapper,library,async",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "r-functions",
    "package_url": "https://pypi.org/project/r-functions/",
    "platform": "",
    "project_url": "https://pypi.org/project/r-functions/",
    "project_urls": {
      "Homepage": "https://github.com/park-brian/r-functions"
    },
    "release_url": "https://pypi.org/project/r-functions/1.0.3/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A library for running R functions from a source file",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8365571,
  "releases": {
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "25ac0568511ad7b7dbaf73b18ef6a4cc88fe644d7ec35647991a4acea14f1f04",
          "md5": "aaf0c15a012d1ee018f8f746b0c16c99",
          "sha256": "29f919a47addf85e4cef6154f825caf7566456a73cb4bbb21d72a3cbf1013245"
        },
        "downloads": -1,
        "filename": "r_functions-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "aaf0c15a012d1ee018f8f746b0c16c99",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5303,
        "upload_time": "2020-10-08T06:16:41",
        "upload_time_iso_8601": "2020-10-08T06:16:41.718438Z",
        "url": "https://files.pythonhosted.org/packages/25/ac/0568511ad7b7dbaf73b18ef6a4cc88fe644d7ec35647991a4acea14f1f04/r_functions-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "83e01dea557610389961ff538cc9744716e524bf0cb6c14f178f4b8a13f8e379",
          "md5": "1d8de7feb634380b1a58dc69c399393f",
          "sha256": "22504777b9e4cdf86a64d641e9cd0983b6fd6ca619dee5b55caeba5018469d50"
        },
        "downloads": -1,
        "filename": "r-functions-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "1d8de7feb634380b1a58dc69c399393f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5108,
        "upload_time": "2020-10-08T06:16:44",
        "upload_time_iso_8601": "2020-10-08T06:16:44.217918Z",
        "url": "https://files.pythonhosted.org/packages/83/e0/1dea557610389961ff538cc9744716e524bf0cb6c14f178f4b8a13f8e379/r-functions-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "25ac0568511ad7b7dbaf73b18ef6a4cc88fe644d7ec35647991a4acea14f1f04",
        "md5": "aaf0c15a012d1ee018f8f746b0c16c99",
        "sha256": "29f919a47addf85e4cef6154f825caf7566456a73cb4bbb21d72a3cbf1013245"
      },
      "downloads": -1,
      "filename": "r_functions-1.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "aaf0c15a012d1ee018f8f746b0c16c99",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 5303,
      "upload_time": "2020-10-08T06:16:41",
      "upload_time_iso_8601": "2020-10-08T06:16:41.718438Z",
      "url": "https://files.pythonhosted.org/packages/25/ac/0568511ad7b7dbaf73b18ef6a4cc88fe644d7ec35647991a4acea14f1f04/r_functions-1.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "83e01dea557610389961ff538cc9744716e524bf0cb6c14f178f4b8a13f8e379",
        "md5": "1d8de7feb634380b1a58dc69c399393f",
        "sha256": "22504777b9e4cdf86a64d641e9cd0983b6fd6ca619dee5b55caeba5018469d50"
      },
      "downloads": -1,
      "filename": "r-functions-1.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "1d8de7feb634380b1a58dc69c399393f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 5108,
      "upload_time": "2020-10-08T06:16:44",
      "upload_time_iso_8601": "2020-10-08T06:16:44.217918Z",
      "url": "https://files.pythonhosted.org/packages/83/e0/1dea557610389961ff538cc9744716e524bf0cb6c14f178f4b8a13f8e379/r-functions-1.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}