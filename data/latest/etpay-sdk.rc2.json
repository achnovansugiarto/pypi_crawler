{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# ETpay Python SDK\n\nOfficial ETpay SDK for Python\n\n## Installation\n\n### Using [pypi](https://pypi.org/)\n\n```bash\npip install etpay_sdk\n```\n\n### Testing with whl file\n\n```bash\npip install path/to/whlfile/etpay_sdk-1.0.1-py3-none-any.whl\n```\n\n\n## How to use\n\n#### Configure ETpay module:\n\nMethod: **`ETpay.Configs(args: ConfigsArgs)`**\n\nParameters: **`ConfigsArgs`**\n\n| Parameter         | Type    | Required  | Description\n|-------------------|---------|-----------|--------------------------------------\n| merchant_code     | string  | false     | Merchant code of the client\n| merchant_api_token| string  | false     | Merchant api token of the client\n| api_url           | string  | false     | Api url of the client\n\n**`Example code`**\n\n```py\n# Import ETpay module\nimport etpay_sdk as Etpay\n\n# Declare global vars\n\n# Commerce identifier provided by ETpay.\nMERCHANT_CODE = \"valid_code\"\n# Secret token used to authenticate against the API provided by ETpay.\nMERCHANT_API_TOKEN = \"valid_api_key\"\n# Api url provided by ETpay.\nAPI_URL = \"valid_api_url\"\n\n# Configure module\nconfigs = Etpay.Configs(MERCHANT_CODE, MERCHANT_API_TOKEN, API_URL)\n```\n\n#### Metadata ETpay module:\n\nMethod: **`ETpay.Metadata(args: [MetadataParams])`**\n\nParameters: **`MetadataParams`**\n\n| Parameter    | Type    | Required  | Description\n|--------------|---------|-----------|-------------------------\n| name         | string  | true      | JSON key called \"name\"\n| value        | string  | true      | JSON key called \"value\"\n| show         | boolean | true      | JSON key called \"show\"\n\n**`Example code`**\n\n```py\n# Import ETpay module\nimport etpay_sdk as Etpay\n\n# Creation of Metadata Object\nmetadata = Etpay.Metadata([\n    {\n        \"name\":\"NAME\", \n        \"value\": \"VALUE\", \n        \"show\": True\n    },\n])\n```\n\n#### TransactionParams ETpay module:\n\nMethod: **`ETpay.TransactionParams(args: CreateTransactionArgs)`**\n\nParameters: **`CreateTransactionArgs`**\n\n| Parameter                 |   Type        | Required  | Description\n|---------------------------|:-------------:|:----------|:----------\n| merchant_order_id         |  string       | true      | Id used by the merchant to identify the transaction.\n| order_amount              |  string       | true      | Transaction amount.\n| customer_email            |  string       | false     | Customer email.\n| payment_completed_url     |  string       | true      | URL to which the API will redirect in the event of a successful payment.\n| payment_cancellation_url  |  string       | true      | URL to which the API will redirect in the event that the payer explicitly cancels the payment, or an unforeseen error occurs.\n| user_bank_code            |  string       | false     | If this field is sent, the session starts with the bank already selected.\n| user_rut                  |  string       | false     | If this field is sent, the session starts with the client's RUT already entered in the respective field.\n| is_rut_block              |  string       | false     | If this field is sent, the session starts with the client's RUT field already blocked. Important to consider sending `user_rut` together wit this attribute.\n| concat                    |  string       | false     | When merchants have URLs that vary based on different inputs, this value is what ETpay uses to recognize the character/symbol that concatenates those inputs.\n| metadata                  |  Metadata   | false     | Data showing on transaction process\n\n**`Example code`**\n\n```py\n# Import ETpay module\nimport etpay_sdk as Etpay\n\n# Obligatory Params\nMERCHANT_ORDER_ID = \"{ORDER_ID}\"\nORDER_AMOUNT = 500\nPAYMENT_COMPLETED_URL = \"{URL_SUCCESS}\"\nPAYMENT_CANCELLATION_URL = \"{URL_CANCEL}\"\n\n# Optional Params\nCUSTOMER_EMAIL = \"email@email.com\"\nUSER_BANK_CODE = \"USER_BANK_CODE\"\nUSER_RUT = \"USER_RUT\"\nIS_RUT_BLOCK = \"IS_RUT_BLOCK\"\nCONCAT = \"{“&”}\"\nMETADATA = Etpay.Metadata([\n    {\n        \"name\":\"NAME\", \n        \"value\": \"VALUE\", \n        \"show\": True\n    },\n])\n\n\n# TransactionParams module\nTransactionParams = Etpay.TransactionParams(\n  MERCHANT_ORDER_ID, \n  ORDER_AMOUNT,\n  CUSTOMER_EMAIL, \n  PAYMENT_COMPLETED_URL,\n  PAYMENT_CANCELLATION_URL, \n  USER_BANK_CODE,\n  USER_RUT,\n  IS_RUT_BLOCK, \n  CONCAT,\n  METADATA)\n```\n\n#### Create transaction Object:\n\nMethod: **`ETpay.Transaction.create()`**\n\n#### Retrieve transaction status:\n\nMethod: **`ETpay.Transaction.status(args: TransactionStatusArgs)`**\n\nParameters: **`TransactionStatusArgs`**\n\n| Parameter         | Type    | Required  | Description\n|-------------------|---------|-----------|--------------------------------------\n| session_token     | string  | false     | Received when transaction was created\n| merchant_order_id | string  | false     | Internal merchant order identifier\n| payment_token     | string  | false     | Received when transaction was created\n\n#### Validate a transaction result:\n\nMethod: **`ETpay.Transaction.verify(token: string, signature_token: string)`**\n\nParameters:\n\n| Parameter       | Type    | Required  | Description\n|-----------------|---------|-----------|--------------------------------------\n| token           | string  | true      | Received token on transaction succeed\n| signature_token | string  | true      | Signature Received when transaction was created\n\n\n**`Example code`**\n\n```py\n#Definition of client data\nmerchantcode= \"MERCHANT_CODE\"\nmerchantapitoken= \"MERCHANT_API_TOKEN\"\napiurl= \"API_URL\"\n\n# Creation of Metadata Object. Usefull in TransactionParams Object to create JSON for '/session/initialize' consult\nmetadata = Etpay.Metadata([\n    {\n        \"name\":\"NAME\", \n        \"value\": \"VALUE\", \n        \"show\": True\n    },\n])\n\n# Creation of TransactionParams. Work for containt the parameters for '/session/initialize' JSON\ntransaction_param = Etpay.TransactionParams(order_amount=1, \n                                            merchant_order_id=\"merchant_order_id\", \n                                            customer_email=\"example@example.com\",\n                                            payment_completed_url=\"https://www.google.com\",\n                                            payment_cancellation_url=\"https://www.google.com\",\n                                            metadata=metadata)\n\n# Creation of Configs. Contain configurations parameters of Client\nconfigure = Etpay.Configs(merchantcode, merchantapitoken, apiurl)\n\n\n# Creation of Transactions Object. Contain configurations and parameters for consult methods\ntransaction = Etpay.Transactions(configure, transaction_param)\n\n# Method to make de '/merchant/check_payment_status' consult and obtain the correct JSON\ncreate_response = transaction.create()\nprint(create_response.json())\n\n# Method to make de '/session/initialize' consult and obtain the correct JSON\nstatus_response = transaction.status(merchant_order_id=\"MERCHANT_ORDER_ID\")\nprint(status_response.json())\n\n# Method to verify a JWT using the signature token as a key\njwt_decode = transaction.verify(\"eyJh[...]dHxE\", \"ZPfh[...]GqPl\")\nprint(jwt_decode)\n```\n\n**`Response Object to \"create\"`**\n\n```json\n{\n  \"token\": \"LnA0o[...]UaDgTa\",\n  \"signature_token\": \"J1Bdd[...]jzsLD5\",\n  // terms_url can be null when module is configured with ETpay MX api\n  \"terms_url\": \"https://<etpay-terms-url>\"\n}\n```\n\n**`Response Object to \"status\"`**\n\n```json\n{\n  \"session_token\": \"wWkob[...]wC0L5\",\n  \"merchant_account_bank\": \"cl_estado\",\n  \"merchant_account_type\": \"cuenta_vista\",\n  \"merchant_account\": \"19687526\",\n  \"merchant_name\": \"Sandbox Developer Merchant\",\n  \"merchant_currency\": \"CLP\",\n  \"merchant_order_id\": \"oc1234566\",\n  \"merchant_amount\": 1,\n  \"user_bank\": \"Banco de prueba\",\n  \"user_rut\": \"111111111\",\n  \"user_account\": \"Cuenta Corriente 12345678\",\n  \"payment_token\": \"prNZK[...]yuPfd\",\n  \"payment_status\": true,\n  \"payment_process\": \"auto\",\n  \"iat\": 1643663332\n}\n```\n\n**`Response Object to \"verify\"`**\n\n```json\n[\n  {\n    \"session_token\": \"wWkob[...]wC0L5\",\n    \"merchant_account_bank\": \"cl_estado\",\n    \"merchant_account_type\": \"cuenta_vista\",\n    \"merchant_account\": \"19687526\",\n    \"merchant_name\": \"Sandbox Developer Merchant\",\n    \"merchant_currency\": \"CLP\",\n    \"merchant_order_id\": \"oc1234566\",\n    \"merchant_amount\": 1,\n    \"user_bank\": \"Banco de prueba\",\n    \"user_rut\": \"111111111\",\n    \"user_account\": \"Cuenta Corriente 12345678\",\n    \"payment_token\": \"prNZK[...]yuPfd\",\n    \"payment_status\": true,\n    \"payment_process\": \"auto\",\n    \"iat\": 1643663332\n  }\n]\n```\n\n## Error Handler\n\n### Etpay error\n\nIn the very unlikely case of a system error, with a disconnection with the ETpay backend, a redirect to the failure URL will be made, with a JWT signed with the session_token (instead of the signature_token).\n\n```json\n{\n    \"session_token\": \"08Zyd[...]Abv9Z\",\n    \"system_error\": true,\n    \"iat\": 1564667797\n}\n```\n\n### SDK common errors Transaction\n\n| Error                                                    | Common Cause\n|----------------------------------------------------------|-------------------------------------------------\n| TypeError: Type use in 'configure' is incorrect          | Configure argument recive it's not Config Object\n| TypeError: Type use in 'transaction_params' is incorrect | Transaction_params argument recive it's not TransactionParams Object\n\n### SDK common errors Transaction.status()\n\n| Error                                                   | Common Cause\n|---------------------------------------------------------|-------------------------------------------------\n| ValueError: The function requires at least one argument | No argument sent in this method. Is required at least one\n\n### SDK common errors Transaction.verify()\n\n| Error                                                              | Common Cause\n|--------------------------------------------------------------------|-----------------------------------------\n| jwt.exceptions.DecodeError: Invalid header padding                 | Header of JWT is incomplete\n| jwt.exceptions.InvalidSignatureError: Signature verification failed| The JWT is incomplete. The token is incomplete\n| Invalid header string: 'utf-8' codec can't decode byte 0x88 in position 6: invalid start byte| First section of JWT is incomplete\n| TypeError: Type use in 'token' is incorrect           | Token argument recive it's not String\n| TypeError: Type use in 'signature_token' is incorrect | signature_token argument recive it's not String\n\n\n### SDK common errors\n\n| Error                                               | Common Cause\n|-----------------------------------------------------|--------------------------------------\n| requests.exceptions.ConnectionError: HTTPSConnectionPool(host='api-sandbox.etpaymen', port=443): Max retries exceeded with url: /session/initialize (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x000002A296CC3348>: Failed to establish a new connection: [Errno 11001] getaddrinfo failed'))| URL used is invalid. Fail to establish connection",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "etpay-sdk",
    "package_url": "https://pypi.org/project/etpay-sdk/",
    "platform": null,
    "project_url": "https://pypi.org/project/etpay-sdk/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/etpay-sdk/1.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Etpay SDK for Python",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16753892,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "186f179789f8d51067a3356209d65447f20d6e3da97e7baad4c5d0848a498b80",
          "md5": "e7d8c766e0cfe0d139d080e06c2eac80",
          "sha256": "97d55f090d76dddd97a1c996b020e9e933159ace362982b62f0dbcf5b09428ff"
        },
        "downloads": -1,
        "filename": "etpay_sdk-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e7d8c766e0cfe0d139d080e06c2eac80",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6629,
        "upload_time": "2023-02-08T18:41:07",
        "upload_time_iso_8601": "2023-02-08T18:41:07.191458Z",
        "url": "https://files.pythonhosted.org/packages/18/6f/179789f8d51067a3356209d65447f20d6e3da97e7baad4c5d0848a498b80/etpay_sdk-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c1837b4fc828e107a2dbfbf5b76fdfde5c6e2769e90ceea882e3f2ccdadc062d",
          "md5": "a266e8b58901bc03782bd59d22c117d6",
          "sha256": "4d0957aefdeb18a8277a9549f3972bbaf7a6e2f9fd3095eb9a6977041bbb4920"
        },
        "downloads": -1,
        "filename": "etpay_sdk-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a266e8b58901bc03782bd59d22c117d6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7660,
        "upload_time": "2023-02-08T18:59:27",
        "upload_time_iso_8601": "2023-02-08T18:59:27.480498Z",
        "url": "https://files.pythonhosted.org/packages/c1/83/7b4fc828e107a2dbfbf5b76fdfde5c6e2769e90ceea882e3f2ccdadc062d/etpay_sdk-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c1837b4fc828e107a2dbfbf5b76fdfde5c6e2769e90ceea882e3f2ccdadc062d",
        "md5": "a266e8b58901bc03782bd59d22c117d6",
        "sha256": "4d0957aefdeb18a8277a9549f3972bbaf7a6e2f9fd3095eb9a6977041bbb4920"
      },
      "downloads": -1,
      "filename": "etpay_sdk-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "a266e8b58901bc03782bd59d22c117d6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7660,
      "upload_time": "2023-02-08T18:59:27",
      "upload_time_iso_8601": "2023-02-08T18:59:27.480498Z",
      "url": "https://files.pythonhosted.org/packages/c1/83/7b4fc828e107a2dbfbf5b76fdfde5c6e2769e90ceea882e3f2ccdadc062d/etpay_sdk-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}