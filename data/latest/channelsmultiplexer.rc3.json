{
  "info": {
    "author": "Matthaus Woolard",
    "author_email": "matthaus.woolard@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "====================\nChannels Multiplexer\n====================\n\nDjango Channels_ does not yet include a Multiplexing Consumer. This project aims to add such a multiplexer.\n\n.. _Channels: https://github.com/django/channels\n\nVersion Compatibility\n---------------------\n\n\n+--------------------+--------------------------------+\n| Channels Version   |  Channels Multiplexer Version  |\n+====================+================================+\n| v2                 | `0.0.2`                        |\n+--------------------+--------------------------------+\n| v3                 | `>=0.0.3`                      |\n+--------------------+--------------------------------+\n\n\n.. image:: https://travis-ci.org/hishnash/channelsmultiplexer.svg?branch=master\n    :target: https://travis-ci.org/hishnash/channelsmultiplexer\n\nInstall\n-------\n\n.. code-block:: bash\n\n  pip install channelsmultiplexer\n\n\nUsage\n-----\n\nto create a De-Multiplexer\n\n.. code-block:: python\n\n  class EchoDemultiplexerAsyncJson(AsyncJsonWebsocketDemultiplexer):\n      applications = {\n          \"echostream\": EchoTestConsumer(),\n          \"altechostream\": AltEchoTestConsumer(),\n          \"closeafterfirst\": EchoCloseAfterFirstTestConsumer(),\n          \"neveraccept\": NeverAcceptTestConsumer()\n      }\n\n\n\nor you can use the `AsyncJsonWebsocketDemultiplexer` type directly and pass the multiplexed upstream consumers as kwargs.\n\n.. code-block:: python\n\n  application = ProtocolTypeRouter({\n\t\t\t\"websocket\": URLRouter([\n\t\t\t\t\turl(r\"^ws/$\", AsyncJsonWebsocketDemultiplexer(\n\t\t\t\t\t\techostream = EchoTestConsumer(),\n\t\t\t\t\t\taltechostream = AltEchoTestConsumer(),\n\t\t\t\t\t\tcloseafterfirst = EchoCloseAfterFirstTestConsumer(),\n\t\t\t\t\t\tneveraccept = NeverAcceptTestConsumer()\n\t\t\t\t\t)),\n\t\t\t]),\n\t\t\t\"telegram\": ChattyBotConsumer.as_asgi(),\n\t})\n\nThis acts just as any other channels consumer, however it will route incoming (JSON) messages to the upstream Consumers.\n\nIt does this by reading the value of the `stream` attribute in the message body. It will then pass the value of the `payload` attribute upstream.\n\n.. code-block:: json\n\n  {\n      \"stream\": \"echostream\",\n      \"payload\": {\"hello\": \"world\"}\n  }\n\n\nMessages being sent downstream from the Multiplexed consumers will be embedded within a similar style msg.",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hishnash/channelsmultiplexer",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "channelsmultiplexer",
    "package_url": "https://pypi.org/project/channelsmultiplexer/",
    "platform": "",
    "project_url": "https://pypi.org/project/channelsmultiplexer/",
    "project_urls": {
      "Homepage": "https://github.com/hishnash/channelsmultiplexer"
    },
    "release_url": "https://pypi.org/project/channelsmultiplexer/0.0.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Multiplexing Consumer for django Channels.",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8735343,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1bda44d7fa9a7b5229ec0887b679254cf5258ee1d7777164e6c77cf33e10aaf6",
          "md5": "e86bed78fe2a39bd80b6e9fd0fa5cdc9",
          "sha256": "c027c6580e81ce4dc37dad832b9fb11ebdabec5d1484d166b1933ae03071ffbd"
        },
        "downloads": -1,
        "filename": "channelsmultiplexer-0.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e86bed78fe2a39bd80b6e9fd0fa5cdc9",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 4879,
        "upload_time": "2018-05-09T11:14:53",
        "upload_time_iso_8601": "2018-05-09T11:14:53.208360Z",
        "url": "https://files.pythonhosted.org/packages/1b/da/44d7fa9a7b5229ec0887b679254cf5258ee1d7777164e6c77cf33e10aaf6/channelsmultiplexer-0.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ab0e0e1c5791170dd159d6bb4c6c4e0865a9a0534d4d2ca35c8b3e8354a38920",
          "md5": "6b680c298bb5f0b2fdb3ce43dd49f70f",
          "sha256": "e97e45e618a21f9d0d7bed580d1859b5b17e671b575487b32991e51ec6078096"
        },
        "downloads": -1,
        "filename": "channelsmultiplexer-0.0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6b680c298bb5f0b2fdb3ce43dd49f70f",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 4911,
        "upload_time": "2018-05-15T11:33:15",
        "upload_time_iso_8601": "2018-05-15T11:33:15.370059Z",
        "url": "https://files.pythonhosted.org/packages/ab/0e/0e1c5791170dd159d6bb4c6c4e0865a9a0534d4d2ca35c8b3e8354a38920/channelsmultiplexer-0.0.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8fc91323f14fbf6916259266f0f7f749749dd0cabc59edd6fcc524a041b40a8d",
          "md5": "a87fba4b17e356fe9d0569da613af8b5",
          "sha256": "98e674110f07b1d41940a32d0a921156d17bf9176a65f19f71f703e3bb38f50e"
        },
        "downloads": -1,
        "filename": "channelsmultiplexer-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "a87fba4b17e356fe9d0569da613af8b5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5955,
        "upload_time": "2020-11-24T08:25:11",
        "upload_time_iso_8601": "2020-11-24T08:25:11.959372Z",
        "url": "https://files.pythonhosted.org/packages/8f/c9/1323f14fbf6916259266f0f7f749749dd0cabc59edd6fcc524a041b40a8d/channelsmultiplexer-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8fc91323f14fbf6916259266f0f7f749749dd0cabc59edd6fcc524a041b40a8d",
        "md5": "a87fba4b17e356fe9d0569da613af8b5",
        "sha256": "98e674110f07b1d41940a32d0a921156d17bf9176a65f19f71f703e3bb38f50e"
      },
      "downloads": -1,
      "filename": "channelsmultiplexer-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "a87fba4b17e356fe9d0569da613af8b5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5955,
      "upload_time": "2020-11-24T08:25:11",
      "upload_time_iso_8601": "2020-11-24T08:25:11.959372Z",
      "url": "https://files.pythonhosted.org/packages/8f/c9/1323f14fbf6916259266f0f7f749749dd0cabc59edd6fcc524a041b40a8d/channelsmultiplexer-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}