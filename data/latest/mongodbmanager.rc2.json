{
  "info": {
    "author": "Rhys Campbell",
    "author_email": "rhys.james.campbell@googlemail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: Public Domain",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "![CI](https://github.com/rhysmeister/mmo/workflows/CI/badge.svg)\n\nmm              mm User Manual              mm\n\nNAME\n        mm\n\nSYNOPSYS\n\n     usage: mm [-h] [--summary] [--repl]\n          [--server_status {instance,asserts,flushing,journaling,extra_info,connections,global_lock,network,opcounters,opcounters_repl,security,storage_engine,memory}]\n          [--host_info {system,os,extra,help}] [--db_hashes] [--databases]\n          [--inc_mongos] [--step_down STEP_DOWN]\n          [--step_down_nominate_host STEP_DOWN_NOMINATE_HOST]\n          [--step_down_nominate_port STEP_DOWN_NOMINATE_PORT]\n          [--replset_freeze REPLSET_FREEZE] [--force] [--profiling {-1,0,1,2}]\n          [--slowms SLOWMS] [--database DATABASE] [--sharding]\n          [--mongo_hostname MONGO_HOSTNAME] [--mongo_port MONGO_PORT]\n          [--mongo_username MONGO_USERNAME] [--mongo_password MONGO_PASSWORD]\n          [--mongo_auth_db MONGO_AUTH_DB]\n          [--execution_database EXECUTION_DATABASE] [--repeat REPEAT]\n          [--interval INTERVAL] [--connection CONNECTION] [--debug]\n          [--validate_indexes VALIDATE_INDEXES]\n          [--collection_stats COLLECTION_STATS]\n          [--database_stats DATABASE_STATS]\n          [--show_collections SHOW_COLLECTIONS] [--command COMMAND]\n          [--balancing {enable,disable}] [--collection COLLECTION]\n          [--balancing_state {enable,disable,state}] [--verbose_display]\n          [--stacktrace] [--schema_summary SCHEMA_SUMMARY]\n          [--schema_summary_limit SCHEMA_SUMMARY_LIMIT]\n          [--plan_cache PLAN_CACHE] [--plan_cache_shapes PLAN_CACHE_SHAPES]\n          [--plan_cache_query PLAN_CACHE_QUERY]\n          [--plan_cache_sort PLAN_CACHE_SORT]\n          [--plan_cache_projection PLAN_CACHE_PROJECTION]\n          [--plan_cache_query_id PLAN_CACHE_QUERY_ID]\n          [--plan_cache_clear_query_id PLAN_CACHE_CLEAR_QUERY_ID]\n          [--plan_cache_purge_data] [--chunks] [--shell]\n\n    MongoDB Manager\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      --summary             Show a summary of the MongoDB Cluster Topology\n      --repl                Show a summary of the replicaset state\n      --server_status {instance,asserts,flushing,journaling,extra_info,connections,global_lock,\n                           network,opcounters,opcounters_repl,security,storage_engine,memory}\n                            Show a summary of the appropriate section from the\n                            serverStatus document from all mongod processes.\n      --host_info {system,os,extra,help}\n                            Show a summary of the appropriate section from the\n                            hostInfo document from all mongod processes.\n      --db_hashes           Show the db hashes for each database on the cluster\n                            and perform some verification.\n      --databases           Show a summary fo the databases hosted by the MongoDB\n                            cluster\n      --inc_mongos          Optionally execute against the mongos servers. This\n                            will fail if the command is not supported by mongos.\n      --step_down STEP_DOWN\n                            Step down the primary from this replicaset\n      --step_down_nominate_host STEP_DOWN_NOMINATE_HOST\n                            Used in combination with step_down_nominate_port to\n                            select a PRIMARY\n      --step_down_nominate_port STEP_DOWN_NOMINATE_PORT\n                            Used in combination with step_down_nominate_host to\n                            select a PRIMARY\n      --replset_freeze REPLSET_FREEZE\n                            Number of seconds to- use with the replSetFreeze\n                            command\n      --force               Force the node to step down.\n      --profiling {-1,0,1,2}\n                            Display or modify the profiling level of a MongoDB\n                            Cluster\n      --slowms SLOWMS       Optionally for use with --profiling switch. The\n                            threshold in milliseconds at which the database\n                            profiler considers a query slow.\n      --database DATABASE   The database to perform the action on. The wildcard\n                            character '*' can be used to specify all databases.\n                            Enclose in single quotes to prevent the shell\n                            expanding it.\n      --sharding            List sharding details\n      --mongo_hostname MONGO_HOSTNAME, -H MONGO_HOSTNAME\n                            Hostname for the MongoDB mongos process to connect to\n      --mongo_port MONGO_PORT, -P MONGO_PORT\n                            Port for the MongoDB mongos process to connect to\n      --mongo_username MONGO_USERNAME, -u MONGO_USERNAME\n                            MongoDB username\n      --mongo_password MONGO_PASSWORD, -p MONGO_PASSWORD\n                            MongoDB password\n      --mongo_auth_db MONGO_AUTH_DB, -D MONGO_AUTH_DB\n                            MongoDB authentication database\n      --execution_database EXECUTION_DATABASE, -e EXECUTION_DATABASE\n                            Used by some command to specify the execution\n                            database.\n      --repeat REPEAT, -r REPEAT\n                            Repeat the action N number of times\n      --interval INTERVAL, -i INTERVAL\n                            Number of seconds between each repeat\n      --connection CONNECTION, -c CONNECTION\n                            Name of MongoDB connection to use as set in $HOME/.mmo/config.cnf\n      --debug, -d           Output debug information\n      --validate_indexes VALIDATE_INDEXES\n                            Collection to validate indexes across all shard\n                            servers. This should be provided in the form\n                            <database>.<collection>\n      --collection_stats COLLECTION_STATS\n                            Show a summary of the data from the\n                            db.collection.stats() command. Must be supplied in the\n                            format <database>.<collection>\n      --database_stats DATABASE_STATS\n                            Show a summary of the data from the db.stats()\n                            command.\n      --show_collections SHOW_COLLECTIONS\n                            List the collections in the given database.\n      --command COMMAND     Run a custom command against your MongoDB Cluster.\n                            Should be provided in document format,\n                                i.e. '{\"command\": <value> }'\n      --balancing {enable,disable}\n                            Enable or disabled balancing. Must be supplied with\n                            the --collection argument\n      --collection COLLECTION\n                            Collection to perform action on. Must be supplied in\n                            the format <database>.<collection>\n      --balancing_state {enable,disable,state}\n                            Globally manage the balancer state\n      --verbose_display     Used in various functions display data that is usually\n                            supressed\n      --stacktrace          By default we don't display the Python stacktace. Use\n                            this flag to enable.\n      --schema_summary SCHEMA_SUMMARY\n                            Collection to produce a summary schema for. Must be\n                            supplied in the format <database>.<collection>\n      --schema_summary_limit SCHEMA_SUMMARY_LIMIT\n                            Set the number of documents that --schema_summary will\n                            sample.\n      --plan_cache PLAN_CACHE\n                            Displays a count of the cached plans for the specified\n                            collection. Must be supplied in the format\n                            <database>.<collection>\n      --plan_cache_shapes PLAN_CACHE_SHAPES\n                            Displays the shapes from the plan cache for the\n                            specified collection. Must be supplied in the format\n                            <database>.<collection>\n      --plan_cache_query PLAN_CACHE_QUERY\n                            Use with the --collection flag\n      --plan_cache_sort PLAN_CACHE_SORT\n      --plan_cache_projection PLAN_CACHE_PROJECTION\n      --plan_cache_query_id PLAN_CACHE_QUERY_ID\n                            Display the stats for the query with the supplied id\n                            as provided in /tmp/mmo_temp_query.txt or\n                            --plan_cache_shapes\n      --plan_cache_clear_query_id PLAN_CACHE_CLEAR_QUERY_ID\n                            Clear the specified query from the Plan Cache.\n      --plan_cache_purge_data\n                            Delete the plan cache file in /tmp/mmo_temp_query.txt.\n                            You probably don't want to leave this data lying\n                            about.\n      --chunks              Display a count of the chunks broken by namespace and\n                            shard.\n      --shell               Launch a mongo shell\n\nDESCRIPTION\n\n        mm is a tool for monitoring and managing MongoDB sharded clusters.\n\nCONNECTION OPTIONS\n\n    Connecting to a MongoDB Cluster can be performed in a couple of ways; Via command-line flags or by using a configuration file. Whichever method is used the initial connection must be a mongos server. mm handles the connections to other server internally. This means you must have created the same user, with the same authentication details, on all replicasets in the cluster.\n\n    Connecting via the command-line\n\n    -H - The host to connect to. Default 'localhost'.\n    -P - The port to connect to. Default 27017.\n    -u - The username for the connection. Default 'admin'.\n    -p - password.\n    -D - The database to authentication against. Default 'admin'.\n\n    ./mm -H localhost -P 27017 -u admin -p secret -D admin\n\n    Connecting via a configuration file\n\n    By default mm will look for a configuration file a directory named .mmo in the user's home directory. This file must be called config.cnf (i.e. $HOME/.mmo/config.cnf) and contain at least one valid section. Each section must be specified as follows;\n\n    [Unique name]\n    mongo_host: <hostname>\n    mongo_port: <port>\n    mongo_username: <username>\n    mongo_password: <password>\n    mongo_auth_db: <authentication database>\n    active: True|False\n\n    Example\n\n    [Default]\n    mongo_host: localhost\n    mongo_port: 27017\n    mongo_username: admin\n    mongo_password: admin\n    mongo_auth_db: admin\n    active: True\n\n    The connection details must refer to a mongos server. If a connection is not supplied via command-line parameters mm will use the section called \"Default\" in the configuration file. Further connections can be specified in the configuration file. They should be given a unique section name. Specific connections can be referred to on the command-line by using the connection name. for example;\n\n        ./mm --connection UniqueConnectionName\n\n    mm will ignore the connection if active is set to False.\n\nEXAMPLES\n\n        Show a summary of the MongoDB topology.\n\n        Displays the following information about the Cluster;\n\n            - Config Servers\n            - mongos Servers\n            - Shard Servers and their configuration options.\n            - Global Shard configuration information.\n\n        This screen will also highlight available hosts in green and down hosts in red.\n        The screen will also detect when entire replicasets may be down with the following message;\n\n        \"rs0 Entire replicaset may be down\"\n\n            ./mm --summary\n\n            MongoDB Config Servers\n            rhysmacbook.local:27019 rhysmacbook.local:27020 rhysmacbook.local:27021\n            MongoDB mongos servers\n            rhysmacbook.local:27017 rhysmacbook.local:27018 rhysmacbook.local:27016\n            MongoDB mongod shard servers\n            rhysmacbook.local:30001 - rs0 - [0, 'buildIndexes=true', 'priority=1.0', 'votes=1']\n            rhysmacbook.local:30002 - rs0 - [1, 'buildIndexes=true', 'priority=1.0', 'votes=1']\n            rhysmacbook.local:30003 - rs0 - [2, 'buildIndexes=true', 'priority=1.0', 'votes=1']\n            rhysmacbook.local:30004 - rs1 - [0, 'buildIndexes=true', 'priority=1.0', 'votes=1']\n            rhysmacbook.local:30005 - rs1 - [1, 'buildIndexes=true', 'priority=1.0', 'votes=1']\n            rhysmacbook.local:30006 - rs1 - [2, 'buildIndexes=true', 'priority=1.0', 'votes=1']\n            rhysmacbook.local:30007 - rs2 - [0, 'buildIndexes=true', 'priority=1.0', 'votes=1']\n            rhysmacbook.local:30008 - rs2 - [1, 'buildIndexes=true', 'priority=1.0', 'votes=1']\n            rhysmacbook.local:30009 - rs2 - [2, 'buildIndexes=true', 'priority=1.0', 'votes=1']\n            MongoDB shards\n            rs   v  pv  chaining  hb interval (ms)  hb t/o (s)  election t/o (ms)  catchUp t/o (ms)  replicaSetId\n            rs0  3  1   1         2000              10          10000              2000              591714096c613edd0a28cf5f\n            rs1  3  1   1         2000              10          10000              2000              591714193a6cd8344c2de3af\n            rs2  3  1   1         2000              10          10000              2000              591714289a00739bc8ed40bd\n\n        Show a summary of the replication state\n\n        The replication screen displays the state of all replicasets, including configuration replicasets available from\n        MongoDB 3.2, the state of each host, config version, uptime and any lag (seconds) in replication. Available hosts\n        are highlighted in green, unavailable hosts in red.\n\n            ./mm --repl\n\n            hostname                 rs         state      cfgV  lag  uptime\n            rhysmacbook.local:30001  rs0        PRIMARY    3     NA   25s\n            rhysmacbook.local:30002  rs0        SECONDARY  3     0.0  28s\n            rhysmacbook.local:30003  rs0        SECONDARY  3     0.0  20s\n            rhysmacbook.local:30004  rs1        PRIMARY    3     NA   20m,12s\n            rhysmacbook.local:30005  rs1        SECONDARY  3     0.0  20m,15s\n            rhysmacbook.local:30006  rs1        SECONDARY  3     0.0  20m,7s\n            rhysmacbook.local:30007  rs2        PRIMARY    3     NA   20m,7s\n            rhysmacbook.local:30008  rs2        SECONDARY  3     0.0  20m,10s\n            rhysmacbook.local:30009  rs2        SECONDARY  3     0.0  20m,2s\n            rhysmacbook.local:27019  csReplSet  PRIMARY    1     NA   20m,50s\n            rhysmacbook.local:27020  csReplSet  SECONDARY  1     4.0  20m,44s\n            rhysmacbook.local:27021  csReplSet  SECONDARY  1     4.0  20m,44s\n            There have been no state changes in the cluster since the last check\n\n        The state of the MongoDB CLuster is recorded in two files; /tmp/replication_summary.p & /tmp/replication_summary.previous\n\n        These are use to identify and state changes in the cluster. Below shows an example of this.\n\n        hostname                 rs         state      cfgV  lag  uptime\n        rhysmacbook.local:30001  rs0        SECONDARY  3     0.0  5m,44s\n        rhysmacbook.local:30002  rs0        PRIMARY    3     NA   5m,38s\n        rhysmacbook.local:30003  rs0        SECONDARY  3     0.0  5m,38s\n        rhysmacbook.local:30004  rs1        PRIMARY    3     NA   25m,28s\n        rhysmacbook.local:30005  rs1        SECONDARY  3     0.0  25m,31s\n        rhysmacbook.local:30006  rs1        SECONDARY  3     0.0  25m,23s\n        rhysmacbook.local:30007  rs2        PRIMARY    3     NA   25m,23s\n        rhysmacbook.local:30008  rs2        SECONDARY  3     0.0  25m,26s\n        rhysmacbook.local:30009  rs2        SECONDARY  3     0.0  25m,18s\n        rhysmacbook.local:27019  csReplSet  PRIMARY    1     NA   26m,6s\n        rhysmacbook.local:27020  csReplSet  SECONDARY  1     2.0  26m\n        rhysmacbook.local:27021  csReplSet  SECONDARY  1     2.0  26m\n        There have been 2 changes in the cluster state since the last check\n        rhysmacbook.local:30001 PRIMARY -> SECONDARY\n        rhysmacbook.local:30002 SECONDARY -> PRIMARY\n        PRIMARY changed from rhysmacbook.local:30001 to rhysmacbook.local:30002\n\n        Instruct the primary of the given replicaset to step down\n\n            ./mm --step_down rs0\n\n            Output is the same as --repl flag with the addition of a line showing the PRIMARY transition.\n\n        Instruct the primary of the given replicaset to step down and nominate a secondary to take over the role.\n        Note this is not guaranteed but should work in most circumstances. If your cluster has significant replication\n        lag then this request may not be honoured.\n\n            ./mm --step_down rs0 --step_down_nominate_host rhysmacbook.local --step_down_nominate_port 30001\n\n        hostname                 rs         state      cfgV  lag  uptime\n        rhysmacbook.local:30001  rs0        SECONDARY  3     UNK  12m,14s\n        rhysmacbook.local:30002  rs0        SECONDARY  3     UNK  12m,9s\n        rhysmacbook.local:30003  rs0        SECONDARY  3     UNK  12m,9s\n        rhysmacbook.local:30004  rs1        PRIMARY    3     NA   31m,58s\n        rhysmacbook.local:30005  rs1        SECONDARY  3     0.0  32m,2s\n        rhysmacbook.local:30006  rs1        SECONDARY  3     0.0  31m,53s\n        rhysmacbook.local:30007  rs2        PRIMARY    3     NA   31m,54s\n        rhysmacbook.local:30008  rs2        SECONDARY  3     0.0  31m,57s\n        rhysmacbook.local:30009  rs2        SECONDARY  3     0.0  31m,49s\n        rhysmacbook.local:27019  csReplSet  PRIMARY    1     NA   32m,36s\n        rhysmacbook.local:27020  csReplSet  SECONDARY  1     3.0  32m,30s\n        rhysmacbook.local:27021  csReplSet  SECONDARY  1     3.0  32m,30s\n        There has been 1 change in the cluster state since the last check\n        rhysmacbook.local:30001 SECONDARY -> PRIMARY\n        rhysmacbook.local:30002 PRIMARY -> SECONDARY\n        PRIMARY changed from rhysmacbook.local:30002 to rhysmacbook.local:30001\n\n         View system info from your cluster\n\n            ./mm --host_info system\n\n            hostname            shard      port       cpuAddrSize  memSizeMB  numCores   cpuArch  numaEnabled\n            rhysmacbook.local   rs0        30001      64           16384      4          x86_64   0\n            rhysmacbook.local   rs0        30002      64           16384      4          x86_64   0\n            rhysmacbook.local   rs0        30003      64           16384      4          x86_64   0\n            rhysmacbook.local   rs1        30004      64           16384      4          x86_64   0\n            rhysmacbook.local   rs1        30005      64           16384      4          x86_64   0\n            rhysmacbook.local   rs1        30006      64           16384      4          x86_64   0\n            rhysmacbook.local   rs2        30007      64           16384      4          x86_64   0\n            rhysmacbook.local   rs2        30008      64           16384      4          x86_64   0\n            rhysmacbook.local   rs2        30009      64           16384      4          x86_64   0\n            Time difference in milliseconds between the cluster nodes: 421.0 ms (not concurrently sampled)\n\n        View os info from your cluster\n\n            ./mm --host_info os\n\n            hostname            shard      port       type       name       version\n            rhysmacbook.local   rs0        30001      Darwin     Mac OS X   15.4.0\n            rhysmacbook.local   rs0        30002      Darwin     Mac OS X   15.4.0\n            rhysmacbook.local   rs0        30003      Darwin     Mac OS X   15.4.0\n            rhysmacbook.local   rs1        30004      Darwin     Mac OS X   15.4.0\n            rhysmacbook.local   rs1        30005      Darwin     Mac OS X   15.4.0\n            rhysmacbook.local   rs1        30006      Darwin     Mac OS X   15.4.0\n            rhysmacbook.local   rs2        30007      Darwin     Mac OS X   15.4.0\n            rhysmacbook.local   rs2        30008      Darwin     Mac OS X   15.4.0\n            rhysmacbook.local   rs2        30009      Darwin     Mac OS X   15.4.0\n\n        Instruct a command to repeat 5 times 10 seconds apart\n\n        ./mm --repl --repeat 5 --interval 10\n\n        Show a summary of databases on the cluster.\n\n        ./mm --databases\n\n        rhysmacbook.local   30001\n        name       size       empty\n        admin      122880.0   0\n        local      5308416.0  0\n        test       4562944.0  0\n        rhysmacbook.local   30002\n        name       size       empty\n        admin      176128.0   0\n        local      5304320.0  0\n        test       4521984.0  0\n\n        Show statistics for a database\n\n        ./mm --database_stats test\n\n        Database stats summary of test\n        objects   avgObjSize (b)  datasize (mb)   storageSize (mb)  extents   indexSize (mb)  fileSize  extents free\n        25360     419.0           10.1381053925   3.97265625        0         0.38671875      0         0\n        Database stats by shard\n        0 collections on: rs2/rhysmacbook.local:30007,rhysmacbook.local:30008,rhysmacbook.local:30009\n        0 collections on: rs1/rhysmacbook.local:30004,rhysmacbook.local:30005,rhysmacbook.local:30006\n        rs0/rhysmacbook.local:30001,rhysmacbook.local:30002,rhysmacbook.local:30003\n        collections  objects  avgObjSize (b)  dataSize (mb)   storageSize (mb)  numExtents  indexes  indexSize (mb)  fileSize\n        3            25360    419.0           10.14           3.97              0           5        0.39            NA\n\n        Show collections in a database\n\n        ./mm --show_collections test\n\n        rhys\n        sample_messages\n        restaurants\n\n        Run a custom command\n\n        ./mm --command '{ \"listCollections\": 1 }' --execution_database test\n\n        Output for this is variable depending on the chosen command.\n\n        Enable debug output and stacktrace output\n\n        ./mm --repl --debug --stacktrace\n\n        Show the db hashes for all collections on all shards in the cluster.\n\n        ./mm --db_hashes\n\n        hostname            shard      port       db         coll #     md5\n        rhysmacbook.local   rs0        30001      test       3          5b151c215ef40b662fe79dcf44928e66\n        rhysmacbook.local   rs0        30002      test       3          5b151c215ef40b662fe79dcf44928e66\n        rhysmacbook.local   rs0        30003      test       3          5b151c215ef40b662fe79dcf44928e66\n\n        By default the above command does not show details for databases where coll # is 0. This excludes the admin and config databases because the system collections are not counted in the collection count. Use this command to override that behaviour.\n\n        ./mm --db_hashes --verbose_display\n\n        Display a summary of the schema for the specific collection. By default this is based on a sample of 200 documents.\n        The number of documents samples can be modified with the --schema_summary_limit flag.\n\n        ./mm --schema_summary test.restaurants\n\n        Schema summary for test.restaurants based on a sample of 200 documents\n        There are 7 keys in this dictionary.\n        Data types\n        _id                  <class 'bson.objectid.ObjectId'>\n        address              <type 'dict'>\n          - building             <type 'unicode'>\n          - coord                <type 'unicode'>\n          - street               <type 'unicode'>\n          - zipcode              <type 'unicode'>\n        borough              <type 'unicode'>\n        cuisine              <type 'unicode'>\n        grades               <type 'list'>\n          - List data types: <type 'dict'>\n            - date                 <type 'unicode'>\n            - grade                <type 'unicode'>\n            - score                <type 'unicode'>\n        name                 <type 'unicode'>\n        restaurant_id        <type 'unicode'>\n        Sample Document\n        {u'_id': ObjectId('5917166627bbe7a16a0e7d09'),\n         u'address': {u'building': u'49-20',\n                      u'coord': [-73.90725640000001, 40.7601082],\n                      u'street': u'30 Avenue',\n                      u'zipcode': u'11377'},\n         u'borough': u'Queens',\n         u'cuisine': u'American',\n         u'grades': [{u'date': datetime.datetime(2014, 2, 4, 0, 0),\n                      u'grade': u'A',\n                      u'score': 12},\n                     {u'date': datetime.datetime(2013, 1, 16, 0, 0),\n                      u'grade': u'A',\n                      u'score': 12},\n                     {u'date': datetime.datetime(2012, 1, 25, 0, 0),\n                      u'grade': u'A',\n                      u'score': 4},\n                     {u'date': datetime.datetime(2011, 10, 13, 0, 0),\n                      u'grade': u'A',\n                      u'score': 8},\n                     {u'date': datetime.datetime(2011, 5, 23, 0, 0),\n                      u'grade': u'A',\n                      u'score': 12}],\n         u'name': u\"Pat'S Stationary\",\n         u'restaurant_id': u'40370449'}\n\n       Display a summary of chunks and their distribution across the shards;\n\n       ./mm --chunks\n\n        namespace             shard  count\n        test.restaurants      rs0    1\n        test.sample_messages  rs0    1\n\n        Manage the balancer (globally)\n\n        ./mm --balancing_state state\n        true\n        ./mm --balancing_state disable\n        ./mm --balancing_state state\n        false\n        ./mm --balancing_state enable\n        ./mm --balancing_state state\n        true\n\n        Manage balancing on individual collections\n\n        ./mm --balancing disable --collection test.restaurants\n        Balancing for test.restaurants is disabled\n        ./mm --balancing enable --collection test.restaurants\n        Balancing for test.restaurants is enabled\n\nSEE ALSO\n\nBUGS\n\n    See https://github.com/rhysmeister/mmo/issues\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/rhysmeister/mmo",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mongodbmanager",
    "package_url": "https://pypi.org/project/mongodbmanager/",
    "platform": "",
    "project_url": "https://pypi.org/project/mongodbmanager/",
    "project_urls": {
      "Homepage": "https://github.com/rhysmeister/mmo"
    },
    "release_url": "https://pypi.org/project/mongodbmanager/0.1.1/",
    "requires_dist": [
      "pymongo",
      "argparse"
    ],
    "requires_python": ">=3.5",
    "summary": "A simple utility for managing MongoDB Sharded Clusters",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8993701,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b886a11e3dddae196b8eca72e7fb8fbfa7c7029e7931441b29cf002b403bb817",
          "md5": "02517eedca9a8b7c416be2930e3695cf",
          "sha256": "23d289515a6529cdc0be8e509965d8368d827635142c37e444d171b7f6705d8f"
        },
        "downloads": -1,
        "filename": "mongodbmanager-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "02517eedca9a8b7c416be2930e3695cf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 38070,
        "upload_time": "2020-12-27T18:47:32",
        "upload_time_iso_8601": "2020-12-27T18:47:32.046740Z",
        "url": "https://files.pythonhosted.org/packages/b8/86/a11e3dddae196b8eca72e7fb8fbfa7c7029e7931441b29cf002b403bb817/mongodbmanager-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "76d619b51ad33a06754690a3d90056c3815f3c704e574b5a66a05fc7fe99e8c3",
          "md5": "0be7de78f8f5196a9d8a981dd0853143",
          "sha256": "3456f0d960253aac84c013a4fa3dfc52aa03837bc684a88e7b173a5d23e3bd1d"
        },
        "downloads": -1,
        "filename": "mongodbmanager-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0be7de78f8f5196a9d8a981dd0853143",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 38129,
        "upload_time": "2020-12-27T19:13:44",
        "upload_time_iso_8601": "2020-12-27T19:13:44.056132Z",
        "url": "https://files.pythonhosted.org/packages/76/d6/19b51ad33a06754690a3d90056c3815f3c704e574b5a66a05fc7fe99e8c3/mongodbmanager-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "76d619b51ad33a06754690a3d90056c3815f3c704e574b5a66a05fc7fe99e8c3",
        "md5": "0be7de78f8f5196a9d8a981dd0853143",
        "sha256": "3456f0d960253aac84c013a4fa3dfc52aa03837bc684a88e7b173a5d23e3bd1d"
      },
      "downloads": -1,
      "filename": "mongodbmanager-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0be7de78f8f5196a9d8a981dd0853143",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 38129,
      "upload_time": "2020-12-27T19:13:44",
      "upload_time_iso_8601": "2020-12-27T19:13:44.056132Z",
      "url": "https://files.pythonhosted.org/packages/76/d6/19b51ad33a06754690a3d90056c3815f3c704e574b5a66a05fc7fe99e8c3/mongodbmanager-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}