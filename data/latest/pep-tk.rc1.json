{
  "info": {
    "author": "Yuval Boss",
    "author_email": "yuval@uw.edu",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "<h1><img src=\"https://raw.githubusercontent.com/readicculus/pep_gui/master/src/pep_tk/lib/img/icon_80x80.png\" width=\"80\" height=\"80\"/>Polar Ecosystems Program GUI</h1>\n\n[![PyPI version fury.io](https://badge.fury.io/py/pep-tk.svg)](https://pypi.python.org/pypi/ansicolortags/)\n![example workflow](https://github.com/readicculus/pep_gui/actions/workflows/main.yml/badge.svg)\n#### Table of Contents\n  * [Terminology](#terminology)\n  * [The GUI](#the-gui)\n    + [- Setup -](#--setup--)\n    + [- Configuring the application preferences -](#--configuring-the-application-preferences--)\n    + [- Creating a Job -](#--creating-a-job--)\n    + [- Resuming a job -](#--resuming-a-job--)\n    + [- Job progress -](#--job-progress--)\n    + [- Job outputs -](#--job-outputs--)\n  * [Dataset Manifest](#dataset-manifest)\n    + [- Dataset attributes -](#--dataset-attributes--)\n    + [- Example 1 (CSV Format) -](#--example-1-csv-format--)\n    + [- Example 2 (INI Format) -](#--example-2-ini-format--)\n    + [- Example 3 (Relative Paths) -](#--example-3-relative-paths--)\n    + [- Future features -](#--future-features--)\n\n\n#### Terminology\n - **Task** - a task is a unit of work in the GUI and is comprised of running a single dataset through a pipeline.\n - **Job** - a job is one or more tasks, so a job is comprised of running one or more datasets through a pipeline.\n - **Dataset** - a dataset is an image list or a set of image lists which point to images in the dataset.  Images within an image list can be in different directories, or two dataset's image lists could all point to images in the same directory (for example for splitting test and non-test data).  See [Dataset Manifest](#dataset-manifest) for details.\n## The GUI\n### - Setup -\nThis GUI runs kwiver pipelines using VIAME's underlying kwiver.  Some pipelines(anything requiring a transformation file) \nmay require kwiver plugins only available in the SEAL-TK distribution.  \nBinaries for SEAL-TK or VIAME can be found [here](https://github.com/VIAME/VIAME/#installations).\n\n\n```bash\npip install pep_tk\npep_gui # command to run the GUI\n```\nBecause by default this was installed for your user you may need to add the user bin/ path to your PATH variable for pep_gui to work `export PATH=~/.local/bin:$PATH`.\nI tested this on Windows11 and succeeded with the above instructions. I recommend creating a conda environment especially on our windows VMs where \nyou may have limited permissions with the global python.\n\n#### Other\nIf for some reason you are struggling and the pep_gui target doesn't work a simple script like this could be used to launch the GUI.\n```python\n# example my_custom_launcher.py\nfrom pep_tk import launch\n\nlaunch.main()  # launch GUI\n```\n\n### - Configuring the application preferences -\nWhen the application is launched for the first time you will be prompted to configure the following properties.\nAfter that, to modify these properties, go to `File > Properties`.\nHere you can set:\n- Which SEAL-TK directory to use.\n- Which dataset manfieset file to use.\n- The base directory for jobs (new jobs will be created in `/path/to/job_base_dir/`)\n\n![preoperties_window.png](https://raw.githubusercontent.com/readicculus/pep_gui/master/src/pep_tk/lib/img/screenshots/preoperties_window.png)\n### - Creating a Job -\n<img src=\"https://raw.githubusercontent.com/readicculus/pep_gui/master/src/pep_tk/lib/img/screenshots/create_job.png\" width=\"75%\" height=\"75%\">\n\nWhen you first launch the program you will be brought to a page to create a job.  To create a job:\n1. Select which datasets you want to run\n2. Select which pipeline to use\n3. Select a unique name for your job\n\n### - Resuming a job -\nResuming a job is usefil if for some reason the GUI or machine you are on crashes mid-job.  In addition if for some reason you were to cancel some tasks in a job, and decide you want to run them later, resuming will re-run any cancelled tasks.\nTo resume a Job click `File > Resume Job` which will open a prompt to select a folder.  Select the folder of the job you would like to resume.\n\n_Since a task is the smallest unit of work, if a task fails half way through, resuming a job will re-run that task from the beginning.  If a task is successful resuming a job will not re-run that task._ \n\n### - Job progress -\n<img src=\"https://raw.githubusercontent.com/readicculus/pep_gui/master/src/pep_tk/lib/img/screenshots/progress_window.png\" width=\"75%\" height=\"75%\">\n\nThe job progress GUI allows you to track individual task's progress, to cancel a task, and to see metrics such as seconds/iteration and estimated time to completion.\n### - Job outputs -\n#### Pipeline outputs (processed image lists/detections)\n1. When a task is running, the task's outputs will be written to `job_base_dir/job_name/outputs_pending/`.\n2. When a task is cancelled or an error occurs the task's output files will be moved to `job_base_dir/job_name/outputs_error/`.\n3. When a task is successfully completed the task's output files will be moved to  `job_base_dir/job_name/outputs_success/`.\n#### Logs\nThe `job_base_dir/job_name/logs/` directory contains the underlying kwiver outputs and application logs which are helpful for debugging purposes\n\n\n## Dataset Manifest\nThe dataset manifest is a file that defines all of the datasets available in csv or ini format.  When creating a job you will be able to select and filter which datasets from the dataset manifest to run.\n\nThis format allows us to organize datasets as arbitrary hierarchies.  \n\n### - Dataset attributes -\nCurrently a dataset must have one or more of the following attributes:\n- `dataset_name` - a unique name for this dataset **(required and unique)**\n- `color_image_list` - the color image list txt file **(one required)**\n- `thermal_image_list` - the thermal image list txt file **(one required)**\n    \nAdditional optional attributes are:\n- `transformation_file` - the .h5 transformation file **(optional)**\n\n### - Example 1 (CSV Format) -\nThis format requires `.csv` file extension.\n```csv\ndataset_name, color_image_list, thermal_image_list, transformation_file\nKotz-2019-fl04-CENT, /path/to/kotz/fl04/CENT/color_images.txt, /path/to/kotz/fl04/CENT/thermal_images.txt, /path/to/Homographies/A90_RGB-IR_C_100mm_0deg_20190509_fl4.h5\nKotz-2019-fl04-LEFT, /path/to/kotz/fl04/LEFT/color_images.txt, /path/to/kotz/fl04/LEFT/thermal_images.txt, /path/to/Homographies/A90_RGB-IR_L_100mm_25deg_20190509-11_fl4-7.h5\n```\nThis example defines 2 datasets, exactly the same as the INI example below, which we can select from in the GUI for running pipelines.\n```\nKotz-2019-fl04-CENT\nKotz-2019-fl04-LEFT\n```\n\n### - Example 2 (INI Format) -\nCan use file extension `.ini` or `.cfg` for this format.  The datset_name in INI format is provided by the section name in brackets as shown below.\n```ini\n[Kotz-2019-fl04-CENT]\nthermal_image_list=/path/to/kotz/fl04/CENT/thermal_images.txt\ncolor_image_list=/path/to/kotz/fl04/CENT/thermal_images.txt\ntransformation_file=/path/to/Homographies/A90_RGB-IR_C_100mm_0deg_20190509_fl4.h5\n\n[Kotz-2019-fl04-LEFT]\nthermal_image_list=/path/to/kotz/fl04/LEFT/thermal_images.txt\ncolor_image_list=/path/to/kotz/fl04/LEFT/thermal_images.txt\ntransformation_file=/path/to/Homographies/A90_RGB-IR_L_100mm_25deg_20190509-11_fl4-7.h5\n```\nThis example defines 2 datasets, exactly the same as the CSV example above, which we can select from in the GUI for running pipelines.\n```\nKotz-2019-fl04-CENT\nKotz-2019-fl04-LEFT\n```\n\n### - Example 3 (Relative Paths) -\nYou can use absolute or relative paths.  If using relative paths, the relative path must be relative to the manifest file.\n```ini\n; if this manifest is located at '/path/to/kotz/manifest.cfg'\n; then the two below are equivalent\n[Kotz-2019-fl04-CENT-relative]\nthermal_image_list=fl04/CENT/thermal_images.txt\ncolor_image_list=fl04/CENT/thermal_images.txt\ntransformation_file=/path/to/Homographies/A90_RGB-IR_C_100mm_0deg_20190509_fl4.h5\n\n[Kotz-2019-fl04-CENT-absolute]\nthermal_image_list=/path/to/kotz/fl04/CENT/thermal_images.txt\ncolor_image_list=/path/to/kotz/fl04/CENT/thermal_images.txt\ntransformation_file=/path/to/Homographies/A90_RGB-IR_L_100mm_25deg_20190509-11_fl4-7.h5\n```\n### - Future features -\n  - Ability to define a set of images using wildcards instead of having to define an image list. ex `thermal_image_list: /path/to/kotz/fl04/CENT/*_ir.tif`\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/readicculus/pep_gui",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pep-tk",
    "package_url": "https://pypi.org/project/pep-tk/",
    "platform": "",
    "project_url": "https://pypi.org/project/pep-tk/",
    "project_urls": {
      "Homepage": "https://github.com/readicculus/pep_gui"
    },
    "release_url": "https://pypi.org/project/pep-tk/1.1.0/",
    "requires_dist": [
      "PyYAML (==5.4.1)",
      "setuptools (~=52.0.0)",
      "pandas",
      "PySimpleGUI (==4.47.0)",
      "dataclasses (==0.8) ; python_version < \"3.7\""
    ],
    "requires_python": ">=3.8",
    "summary": "Polar Ecosystems Program Toolkit",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12260152,
  "releases": {
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e81ef802be7c479a653feaf4a3ab57ec2c8fca49f6ecfd5869fb3c3ee238328d",
          "md5": "9de834e0e59793e9c77f41ad095ab29a",
          "sha256": "cba568986e17ea78950506dfe2692b85af00439f50eb8faf0275d04163ad9769"
        },
        "downloads": -1,
        "filename": "pep_tk-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9de834e0e59793e9c77f41ad095ab29a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 92096608,
        "upload_time": "2021-12-09T20:37:33",
        "upload_time_iso_8601": "2021-12-09T20:37:33.465491Z",
        "url": "https://files.pythonhosted.org/packages/e8/1e/f802be7c479a653feaf4a3ab57ec2c8fca49f6ecfd5869fb3c3ee238328d/pep_tk-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a7aff5dd2eaecc7bc6c648b2e2e7110235b85d445607ce456dbf04e6550653d",
          "md5": "fa80555b4bc1c6388931b7bfa7bab147",
          "sha256": "0070ed4b2656dee8ab1af1c3ce23382bff074b78d1abbb02e02f1f095756aa42"
        },
        "downloads": -1,
        "filename": "pep_tk-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fa80555b4bc1c6388931b7bfa7bab147",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 92061052,
        "upload_time": "2021-12-09T20:37:39",
        "upload_time_iso_8601": "2021-12-09T20:37:39.414397Z",
        "url": "https://files.pythonhosted.org/packages/9a/7a/ff5dd2eaecc7bc6c648b2e2e7110235b85d445607ce456dbf04e6550653d/pep_tk-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e81ef802be7c479a653feaf4a3ab57ec2c8fca49f6ecfd5869fb3c3ee238328d",
        "md5": "9de834e0e59793e9c77f41ad095ab29a",
        "sha256": "cba568986e17ea78950506dfe2692b85af00439f50eb8faf0275d04163ad9769"
      },
      "downloads": -1,
      "filename": "pep_tk-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9de834e0e59793e9c77f41ad095ab29a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 92096608,
      "upload_time": "2021-12-09T20:37:33",
      "upload_time_iso_8601": "2021-12-09T20:37:33.465491Z",
      "url": "https://files.pythonhosted.org/packages/e8/1e/f802be7c479a653feaf4a3ab57ec2c8fca49f6ecfd5869fb3c3ee238328d/pep_tk-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9a7aff5dd2eaecc7bc6c648b2e2e7110235b85d445607ce456dbf04e6550653d",
        "md5": "fa80555b4bc1c6388931b7bfa7bab147",
        "sha256": "0070ed4b2656dee8ab1af1c3ce23382bff074b78d1abbb02e02f1f095756aa42"
      },
      "downloads": -1,
      "filename": "pep_tk-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "fa80555b4bc1c6388931b7bfa7bab147",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 92061052,
      "upload_time": "2021-12-09T20:37:39",
      "upload_time_iso_8601": "2021-12-09T20:37:39.414397Z",
      "url": "https://files.pythonhosted.org/packages/9a/7a/ff5dd2eaecc7bc6c648b2e2e7110235b85d445607ce456dbf04e6550653d/pep_tk-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}