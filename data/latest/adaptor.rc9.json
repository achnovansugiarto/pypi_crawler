{
  "info": {
    "author": "Michal Stefanik & Adaptor Authors & Contributors",
    "author_email": "stefanik.m@mail.muni.cz",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "Programming Language :: Python :: 3.8",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "# Adaptùí™r: Objective-centric Adaptation library\n\n[![Tests](https://github.com/gaussalgo/adaptor/actions/workflows/test.yml/badge.svg)](https://github.com/gaussalgo/adaptor/actions)\n[![PyPI version](https://badge.fury.io/py/adaptor.svg)](https://badge.fury.io/py/adaptor)\n\nAdaptor will help you to easily adapt a language model to your own **data domain(s)**, **task(s)**,\nor **custom objective(s)**.\n\nIf you want to jump right in, take a look at the [tutorials](tutorials).\n\n## Table of Content\n<details>\n<summary>Click to expand</summary>\n\n- [Background](#how-to-use-adaptor)\n    - [Benefits of Task and Domain Adaptation](#benefits-of-task-and-domain-adaptation)\n    - [How Can Adaptùí™r Help](#how-can-adaptor-help)\n- [Usage](#usage)\n    - [Install](#usage)\n    - [Use-cases](#adapted-named-entity-recognition)\n    - **[Tutorials](tutorials)**\n- [How to Contribute](CONTRIBUTING.md)\n- [Cite](#citing-adaptùí™r)\n</details>\n\n\n### Benefits of Task and Domain Adaptation\n\nBoth domain adaptation (e.g. [Beltagy, 2019](https://aclanthology.org/D19-1371/)) \nand task adaptation (e.g. [Gururangan, 2020](https://aclanthology.org/2020.acl-main.740/))\nare reported to improve quality of the language models on end tasks, \nand improve model's comprehension on more *niche* domains,\nsuggesting that it's usually a good idea to adapt pre-trained model before the final fine-tuning. \nHowever, it is still not a common practice, maybe because it is still a tedious thing to do. In the model-centric training, the multi-step, \nor multi-objective training requires a separate configuration of every training step due to the differences in the models' \narchitectures specific to the chosen training objective and data set.\n\n### How Adaptor handles training?\n\nAdaptor framework abstracts the term of *Objective* away from the model.\nWith Adaptor, *Any* objective can be applied to *any* model, for as long as the trained model has some *head* of a compatible shape.\n\nThe ordering in which the `Objective`s are applied is determined by the given `Schedule`.\nIn conventional adaptation, the objectives are applied *sequentially* (that's what `SequentialSchedule` does), \nbut they might as well be applied in a combilation (`ParallelSchedule`), or balanced dynamically, \ne.g. according to its objectives` losses.\n\n![Adaptation scheme](https://github.com/gaussalgo/adaptor/raw/477b88d41d5d5fe1a172e4b115d18cf0619d15d2/docs/user_flow.png)\n\nIn the `Adaptor` framework, instead of providing the `Trainer` with a model encoded dataset both compatible\nwith specific training task,\na user constructs a `Schedule` composed of the initialised `Objective`s, where each Objective performs its\ndataset sampling and objective-specific feature alignment (compliant with `objective.compatible_head`).\n\nWhen training classic `transformers` models, a selection of objectives is model-agnostic: each objective takes care\nof resolving its own compatible head within given `LangModule`. \n\n### How Can Adaptor Help\n\nAdaptor introduces objective-centric, instead of model-centric approach to the training process, \nthat makes it **easier** to experiment with **multi-objective** training, creating **custom objectives**. Thanks to that, you can do some things,\nthat are difficult, or impossible in other NLP frameworks (like HF Transformers, FairSeq or NLTK). For example:\n* **Domain adaptation** or **Task adaptation**: you do not have to handle the model \nbetween different training scripts, minimising a chance of error and improving reproducibility \n* Seamlessly experiment with different **schedule** strategies, allowing you, e.g. to backpropagate based \non multiple objectives in every training step\n* **Track the progress** of the model, concurrently on *each* relevant objective, allowing you to easier \nrecognise weak points of your model\n* Easily perform **Multi-task learning**, which that [can](https://direct.mit.edu/tacl/article/doi/10.1162/tacl_a_00335/96483/An-Empirical-Study-on-Robustness-to-Spurious) \nimproves model robustness\n* Although Adaptor aims primarily for training the models of the transformer family, the library is designed to\nwork with **any PyTorch model**\n\nBuilt upon the well-established and maintained ü§ó Transformers library, Adaptor will automatically support \nfuture new NLP models out-of-box. The upgrade of Adaptor to a different version of Hugging Face Transformers library \nshould not take longer than a few minutes.\n\n### Usage\n\nFirst, install the library: \n```shell\npip install adaptor\n```\n\nIf you clone it, you can also run and modify the provided example scripts.\n```shell\ngit clone {this repo}\ncd adaptor\npython -m pip install -e .\n```\n\nYou can also find and run full examples below with all the imports in \n[`tests/end2end_usecases_test.py`](tests/end2end_usecases_test.py).\n\n#### Adapted Named Entity Recognition\n\nSay you have nicely annotated entities in a set of news articles, but eventually, you want to use the language model\nto detect entities in office documents. You can either train the NER model on news articles, hoping that\nit will not lose much accuracy on other domains. Or you can concurrently train on both data sets:\n\n```python\n# 1. pick the model base\nlang_module = LangModule(\"bert-base-multilingual-cased\")\n\n# 2. pick objectives\n# Objectives take either List[str] for in-memory iteration, or a source file path for streamed iteration\nobjectives = [MaskedLanguageModeling(lang_module,\n                                     batch_size=16,\n                                     texts_or_path=\"tests/mock_data/domain_unsup.txt\"),\n              TokenClassification(lang_module,\n                                  batch_size=16,\n                                  texts_or_path=\"tests/mock_data/ner_texts_sup.txt\",\n                                  labels_or_path=\"tests/mock_data/ner_texts_sup_labels.txt\")]\n# 3. pick a schedule of the selected objectives\n# This one will initially fit the first objective until convergence on its eval set, then fits the second one \nschedule = ParallelSchedule(objectives, training_arguments)\n\n# 4. Run the training using Adapter, similarly to running HF.Trainer, only adding `schedule`\nadapter = Adapter(lang_module, schedule, training_arguments)\nadapter.train()\n\n# 5. save the trained lang_module (with all heads)\nadapter.save_model(\"entity_detector_model\")\n\n# 6. reload and use it like any other Hugging Face model\nner_model = AutoModelForTokenClassification.from_pretrained(\"entity_detector_model/TokenClassification\")\ntokenizer = AutoTokenizer.from_pretrained(\"entity_detector_model/TokenClassification\")\n\ninputs = tokenizer(\"Is there any Abraham Lincoln here?\", return_tensors=\"pt\")\noutputs = ner_model(**inputs)\nner_tags = [ner_model.config.id2label[label_id.item()] for label_id in outputs.logits[0].argmax(-1)]\n```\n\n#### Adapted Machine Translation\n\nSay you have a lot of clean parallel texts for news articles (like you can find on [OPUS](https://opus.nlpl.eu/)),\nbut eventually, you need to translate a different domain, for example chats with a lot of typos, \nor medicine texts with a lot of latin expressions.\n\n```python\n# 1. pick the models - randomly pre-initialize the appropriate heads\nlang_module = LangModule(\"Helsinki-NLP/opus-mt-en-de\")\n\n# (optional) pick train and validation evaluators for the objectives\nseq2seq_evaluators = [BLEU(decides_convergence=True)]\n\n# 2. pick objectives - we use BART's objective for adaptation and mBART's seq2seq objective for fine-tuning\nobjectives = [BackTranslation(lang_module,\n                              batch_size=1,\n                              texts_or_path=\"tests/mock_data/domain_unsup.txt\",\n                              back_translator=BackTranslator(\"Helsinki-NLP/opus-mt-de-en\"),\n                              val_evaluators=seq2seq_evaluators),\n              Sequence2Sequence(lang_module, \n                                batch_size=1,\n                                texts_or_path=\"tests/mock_data/seq2seq_sources.txt\",\n                                labels_or_path=\"tests/mock_data/seq2seq_targets.txt\",\n                                val_evaluators=seq2seq_evaluators,\n                                source_lang_id=\"en\", target_lang_id=\"cs\")]\n\n# this one will shuffle the batches of both objectives\nschedule = ParallelSchedule(objectives, adaptation_arguments)\n\n# 4. train using Adapter\nadapter = Adapter(lang_module, schedule, adaptation_arguments)\nadapter.train()\n\n# 5. save the trained (multi-headed) lang_module\nadapter.save_model(\"translator_model\")\n\n# 6. reload and use it like any other Hugging Face model\ntranslator_model = AutoModelForSeq2SeqLM.from_pretrained(\"translator_model/Sequence2Sequence\")\ntokenizer = AutoTokenizer.from_pretrained(\"translator_model/Sequence2Sequence\")\n\ninputs = tokenizer(\"A piece of text to translate.\", return_tensors=\"pt\")\noutput_ids = translator_model.generate(**inputs)\noutput_text = tokenizer.batch_decode(output_ids, skip_special_tokens=True)\nprint(output_text)\n```\n**Try this example** with training resources resolution from OPUS in `examples/machine_translation/train_wiki_adapt_bible.py`\n\n#### More examples\n\nYou can find a few more exaples in [tutorials](tutorials), but contributions are welcome :) (see *[CONTRIBUTING.md](CONTRIBUTING.md)*)\n\n### Motivation for objective-centric training\n\nWe've seen that transformers can outstandingly perform on relatively complicated tasks, which makes us \nthink that experimenting with custom objectives can also improve their desperately-needed\ngeneralisation abilities (many studies report transformers inability to generalise the end task, e.g. on \n[language inference](https://aclanthology.org/P19-1334/), \n[paraphrase detection](https://aclanthology.org/N19-1131/), or\n[machine translation](https://aclanthology.org/2021.scil-1.3/)).\n\nThis way, we're also hoping to enable the easy use of the most accurate deep language models for more\n**specialised domains** of application, where a little supervised data is available, but\nmuch more unsupervised sources can be found (a typical *Domain adaptation* case).\nSuch applications include for instance machine translation of non-canonical domains (chats or expert texts) or personal names recognition in texts of a domain with none of its own labeled names, but the use-cases are limitless.\n\n### How can you contribute?\n\n* If you want to add a new objective or schedule, see [CONTRIBUTING.md](https://github.com/gaussalgo/adaptor/blob/master/CONTRIBUTING.md). \n\n* If you find an issue, please report it [in this repository](https://github.com/gaussalgo/adaptor/issues) and if you'd\nalso be able to fix it, don't hesitate to contribute and create a PR.\n\n* If you'd just like to share your general impressions or personal experience with others, \nwe're happy to get into a discussion in the [Discussions section](https://github.com/gaussalgo/adaptor/discussions).\n\n## Citing Adaptùí™r\n\nIf you use Adaptor in your research, please cite it as follows.\n\n### Text\n\n≈†TEF√ÅNIK, Michal, V√≠t NOVOTN√ù, Nikola GROVEROV√Å and Petr SOJKA. Adaptor: Objective-Centric Adaptation Framework for Language Models. In  *Proceedings of 60th Annual Meeting of the Association for Computational Linguistics: Demonstrations*. ACL, 2022. 7 pp.\n\n### BibTeX\n\n``` bib\n@inproceedings{stefanik2022adaptor,\n  author = {\\v{S}tef\\'{a}nik, Michal and Novotn\\'{y}, V\\'{i}t and Groverov{\\'a}, Nikola and Sojka, Petr},\n  title = {Adapt\\$\\mathcal\\{O\\}\\$r: Objective-Centric Adaptation Framework for Language Models},\n  booktitle = {Proceedings of 60th Annual Meeting of the Association for Computational Linguistics: Demonstrations},\n  publisher = {ACL},\n  numpages = {7},\n  url = {https://aclanthology.org/2022.acl-demo.26},\n}\n```\n\n-------\nIf you have any other question(s), feel free to create an issue.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/gaussalgo/adaptor",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "adaptor",
    "package_url": "https://pypi.org/project/adaptor/",
    "platform": null,
    "project_url": "https://pypi.org/project/adaptor/",
    "project_urls": {
      "Homepage": "https://github.com/gaussalgo/adaptor"
    },
    "release_url": "https://pypi.org/project/adaptor/0.2.1/",
    "requires_dist": [
      "torch (>=1.7)",
      "transformers (>=4.10.2<=4.19.1)",
      "sentencepiece",
      "comet-ml ; extra == 'examples'",
      "sacrebleu ; extra == 'generative'",
      "rouge-score ; extra == 'generative'",
      "bert-score ; extra == 'generative'",
      "fairseq ; extra == 'generative'",
      "protobuf (<=3.20.1) ; extra == 'generative'"
    ],
    "requires_python": ">=3.7",
    "summary": "Adaptor: Objective-centric Adaptation Framework for Language Models.",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17394960,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5972f28e5d2206ce53096a6182a9d8674514e0f4acfe8c5b5e5ed9c0532082b3",
          "md5": "57487808e1b3ba842f5520d93897860f",
          "sha256": "c99dccf64a9fef7639a24c4072eeee5b86e5bb72bad3dc39693958f44f421d88"
        },
        "downloads": -1,
        "filename": "adaptor-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "57487808e1b3ba842f5520d93897860f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 85243,
        "upload_time": "2022-01-24T15:08:11",
        "upload_time_iso_8601": "2022-01-24T15:08:11.990797Z",
        "url": "https://files.pythonhosted.org/packages/59/72/f28e5d2206ce53096a6182a9d8674514e0f4acfe8c5b5e5ed9c0532082b3/adaptor-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea616bb8c9b4d9130b633579820804f97db045acc46dfad47f1ba052b14e2e68",
          "md5": "3b547b337625647790e5a6b8a646589a",
          "sha256": "861992ec886666b130e8390a9cc7359da1bff9871b5f5fc787e1101a99d3df9d"
        },
        "downloads": -1,
        "filename": "adaptor-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3b547b337625647790e5a6b8a646589a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 242028,
        "upload_time": "2022-01-24T15:08:13",
        "upload_time_iso_8601": "2022-01-24T15:08:13.675066Z",
        "url": "https://files.pythonhosted.org/packages/ea/61/6bb8c9b4d9130b633579820804f97db045acc46dfad47f1ba052b14e2e68/adaptor-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18206c5e9e1ec13af3d48ae836d71c58a0a23e5c7ee0d36414f397a9a1fada49",
          "md5": "80defe09539bd67b70cb2a32573d5b6a",
          "sha256": "850ebcf2a16a38d095ac77552e3cb382244dfbd9e7f6c89d8913788271a77b0b"
        },
        "downloads": -1,
        "filename": "adaptor-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "80defe09539bd67b70cb2a32573d5b6a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 45889,
        "upload_time": "2022-01-24T18:16:37",
        "upload_time_iso_8601": "2022-01-24T18:16:37.413668Z",
        "url": "https://files.pythonhosted.org/packages/18/20/6c5e9e1ec13af3d48ae836d71c58a0a23e5c7ee0d36414f397a9a1fada49/adaptor-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6c280bb48b354becff18e1cfba671ab4b312ba375d0a47c22f8db9e62edde2f2",
          "md5": "11f6657ea8fb1fc637c9e89b9d53078e",
          "sha256": "c2d2a50a18ec9869d2b19d4ee51ac4600d9e2028e3e172b3ab02eec171e3447c"
        },
        "downloads": -1,
        "filename": "adaptor-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "11f6657ea8fb1fc637c9e89b9d53078e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 151297,
        "upload_time": "2022-01-24T18:16:40",
        "upload_time_iso_8601": "2022-01-24T18:16:40.146557Z",
        "url": "https://files.pythonhosted.org/packages/6c/28/0bb48b354becff18e1cfba671ab4b312ba375d0a47c22f8db9e62edde2f2/adaptor-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "30ee47a22dec10a3b471ed3d7d4aef67e0b420e0c04cddd8f95e0ebcac37a2f1",
          "md5": "007f85499907c8502fc2824380f04396",
          "sha256": "24d9f26fa1d6d129c4d76ea446f31849381a451a25d65b187f15d40a96deac88"
        },
        "downloads": -1,
        "filename": "adaptor-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "007f85499907c8502fc2824380f04396",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 45924,
        "upload_time": "2022-01-28T13:02:27",
        "upload_time_iso_8601": "2022-01-28T13:02:27.970627Z",
        "url": "https://files.pythonhosted.org/packages/30/ee/47a22dec10a3b471ed3d7d4aef67e0b420e0c04cddd8f95e0ebcac37a2f1/adaptor-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "03b4b04d830b247eaa6d82c95b42a32eb69b6681b98faed6d3b54ce2071e7d73",
          "md5": "a7af2a4ecc66844e3de99588d48a5a15",
          "sha256": "f2f44d3102bfdf2ce9e82bfdbdbd968534af227f3d620fe026a241c768e95c4f"
        },
        "downloads": -1,
        "filename": "adaptor-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a7af2a4ecc66844e3de99588d48a5a15",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 151166,
        "upload_time": "2022-01-28T13:02:29",
        "upload_time_iso_8601": "2022-01-28T13:02:29.657958Z",
        "url": "https://files.pythonhosted.org/packages/03/b4/b04d830b247eaa6d82c95b42a32eb69b6681b98faed6d3b54ce2071e7d73/adaptor-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "190b2de0f7ca7f721686237298989217dc9af57df50a1513256bedeecfddbdf8",
          "md5": "fdc899f2d4f23d412f430dd0da8fe3a9",
          "sha256": "19c766414dc07adaa66ba6373979fd2068c41c6ada821182e3f4ef288adb9d77"
        },
        "downloads": -1,
        "filename": "adaptor-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fdc899f2d4f23d412f430dd0da8fe3a9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 48043,
        "upload_time": "2022-02-17T11:50:22",
        "upload_time_iso_8601": "2022-02-17T11:50:22.639892Z",
        "url": "https://files.pythonhosted.org/packages/19/0b/2de0f7ca7f721686237298989217dc9af57df50a1513256bedeecfddbdf8/adaptor-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d308775c59e6df917ee49bfbef3668ce400f39ab81aba27e89f13104e0475807",
          "md5": "8e974b61425c6b86918f2ed723537ccc",
          "sha256": "e2493ff55a5ce62a4d54a4328f991ad3dc1c39592c3fa86417cd35d7e54c20d4"
        },
        "downloads": -1,
        "filename": "adaptor-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "8e974b61425c6b86918f2ed723537ccc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 153733,
        "upload_time": "2022-02-17T11:50:28",
        "upload_time_iso_8601": "2022-02-17T11:50:28.882269Z",
        "url": "https://files.pythonhosted.org/packages/d3/08/775c59e6df917ee49bfbef3668ce400f39ab81aba27e89f13104e0475807/adaptor-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d0340d6469f272d1608869c495693d9dba6ad7d685dedc4c8b21860b8d5f41f7",
          "md5": "91991fe8ecdb23ce0c9f76adbd2a04be",
          "sha256": "5b233473a726edc74805baa6fe0bda5dd95cf040bf6788feab3a92354192a128"
        },
        "downloads": -1,
        "filename": "adaptor-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "91991fe8ecdb23ce0c9f76adbd2a04be",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 50275,
        "upload_time": "2022-05-19T16:15:55",
        "upload_time_iso_8601": "2022-05-19T16:15:55.271043Z",
        "url": "https://files.pythonhosted.org/packages/d0/34/0d6469f272d1608869c495693d9dba6ad7d685dedc4c8b21860b8d5f41f7/adaptor-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "84750b3fab66be0111d7ae3d0322c996e39d0dd3c837c1a0f2e9efbe0501717b",
          "md5": "8a05764bb6eb61f5495b60e7ffbbd0ef",
          "sha256": "5a45662c684492c7cad88aadd664d3f37f09a2c51c5ef84f0f06ad6b94d9faaa"
        },
        "downloads": -1,
        "filename": "adaptor-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "8a05764bb6eb61f5495b60e7ffbbd0ef",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 152491,
        "upload_time": "2022-05-19T16:15:57",
        "upload_time_iso_8601": "2022-05-19T16:15:57.141496Z",
        "url": "https://files.pythonhosted.org/packages/84/75/0b3fab66be0111d7ae3d0322c996e39d0dd3c837c1a0f2e9efbe0501717b/adaptor-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e4c01b0345c48dc6622331e150b1eeecc7700e65cd3fa8ec6a97a41affba8166",
          "md5": "8703792a54838af0645bb9bba3716d86",
          "sha256": "3bd75200d1edf3e13b3420c0fbd946637a073de96a4963b4767fc483978ac7c1"
        },
        "downloads": -1,
        "filename": "adaptor-0.1.5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8703792a54838af0645bb9bba3716d86",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.7",
        "size": 54279,
        "upload_time": "2022-07-29T08:34:01",
        "upload_time_iso_8601": "2022-07-29T08:34:01.521758Z",
        "url": "https://files.pythonhosted.org/packages/e4/c0/1b0345c48dc6622331e150b1eeecc7700e65cd3fa8ec6a97a41affba8166/adaptor-0.1.5-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2534c0078647aa14107e8b116c9e8fb12d641c16ae7b262100aa361aa8e1ebd2",
          "md5": "1d08c3be1bacfab2dc3cdccd92336ec9",
          "sha256": "48ffe36645d8edf73e46c505d2180fa45ddb84129986571ad836e524915860ee"
        },
        "downloads": -1,
        "filename": "adaptor-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "1d08c3be1bacfab2dc3cdccd92336ec9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 154821,
        "upload_time": "2022-07-29T08:34:03",
        "upload_time_iso_8601": "2022-07-29T08:34:03.708882Z",
        "url": "https://files.pythonhosted.org/packages/25/34/c0078647aa14107e8b116c9e8fb12d641c16ae7b262100aa361aa8e1ebd2/adaptor-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "394338612eba141c8b1ab32f5fc47c6493f3a252a2e54786ffdba69cab134681",
          "md5": "ff91937c04aafd050427ad92dc265d50",
          "sha256": "bfa8b039a4373a01278aec93a093a2e4d7f6b3d4609b7034e2342cd8ed581053"
        },
        "downloads": -1,
        "filename": "adaptor-0.1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ff91937c04aafd050427ad92dc265d50",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 54123,
        "upload_time": "2022-08-08T14:39:54",
        "upload_time_iso_8601": "2022-08-08T14:39:54.233250Z",
        "url": "https://files.pythonhosted.org/packages/39/43/38612eba141c8b1ab32f5fc47c6493f3a252a2e54786ffdba69cab134681/adaptor-0.1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "62442a2b9333b3c798110e760255e91de8726711da98f6fb9e785fd33275625a",
          "md5": "63301ef2199b95c2f517b8b4a2ae6978",
          "sha256": "ff71a5e672b324caa3d7744a416e93704b30c80c6becc226d635c37a7db33961"
        },
        "downloads": -1,
        "filename": "adaptor-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "63301ef2199b95c2f517b8b4a2ae6978",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 154737,
        "upload_time": "2022-08-08T14:39:56",
        "upload_time_iso_8601": "2022-08-08T14:39:56.983024Z",
        "url": "https://files.pythonhosted.org/packages/62/44/2a2b9333b3c798110e760255e91de8726711da98f6fb9e785fd33275625a/adaptor-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a8c3dca82c8e9e37cde5e3aa120b9881f2d0c3bc7a11f41d220641bfbab3c40",
          "md5": "206c7ce0a8caa59736dc5c85c048016f",
          "sha256": "506c204039686985833c145e2317ef0a95af2fb7eebcebb976becb8ed225ac63"
        },
        "downloads": -1,
        "filename": "adaptor-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "206c7ce0a8caa59736dc5c85c048016f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 57655,
        "upload_time": "2022-10-26T14:33:35",
        "upload_time_iso_8601": "2022-10-26T14:33:35.187579Z",
        "url": "https://files.pythonhosted.org/packages/8a/8c/3dca82c8e9e37cde5e3aa120b9881f2d0c3bc7a11f41d220641bfbab3c40/adaptor-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd92f02692e2bacfca304646520453c4f69bc0cfac59cb0b9d2591b902a6e8f0",
          "md5": "6878521a3c898f512c9c7ec5f9302dd7",
          "sha256": "76be59329b8bfde71409ca71dbe37867120d574b660daf41ba35d43914b1461d"
        },
        "downloads": -1,
        "filename": "adaptor-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6878521a3c898f512c9c7ec5f9302dd7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 157428,
        "upload_time": "2022-10-26T14:33:37",
        "upload_time_iso_8601": "2022-10-26T14:33:37.619963Z",
        "url": "https://files.pythonhosted.org/packages/cd/92/f02692e2bacfca304646520453c4f69bc0cfac59cb0b9d2591b902a6e8f0/adaptor-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d33670577c1389a59cbd776e5af55e76a5e8d13efe1b29ea3e9e79a2168cce3b",
          "md5": "5c0deba3a4776045417388a68e42f28e",
          "sha256": "12b6569df194013a2b4311ae8ffa5aa2a2cd411994f61cc36199a0970ead5cd4"
        },
        "downloads": -1,
        "filename": "adaptor-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5c0deba3a4776045417388a68e42f28e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 57717,
        "upload_time": "2023-03-22T08:49:36",
        "upload_time_iso_8601": "2023-03-22T08:49:36.078604Z",
        "url": "https://files.pythonhosted.org/packages/d3/36/70577c1389a59cbd776e5af55e76a5e8d13efe1b29ea3e9e79a2168cce3b/adaptor-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e491cf6b45e6267d3653a93a517e9179ccfc13783f05a9afb0af7c7ef643bd6a",
          "md5": "91a655049d926d758774c0d26f31ee6a",
          "sha256": "d8cb6f660eb7d762bec71aa871e6502f508e04e1490c086011dde86d4f11d06c"
        },
        "downloads": -1,
        "filename": "adaptor-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "91a655049d926d758774c0d26f31ee6a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 157661,
        "upload_time": "2023-03-22T08:49:38",
        "upload_time_iso_8601": "2023-03-22T08:49:38.389414Z",
        "url": "https://files.pythonhosted.org/packages/e4/91/cf6b45e6267d3653a93a517e9179ccfc13783f05a9afb0af7c7ef643bd6a/adaptor-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d33670577c1389a59cbd776e5af55e76a5e8d13efe1b29ea3e9e79a2168cce3b",
        "md5": "5c0deba3a4776045417388a68e42f28e",
        "sha256": "12b6569df194013a2b4311ae8ffa5aa2a2cd411994f61cc36199a0970ead5cd4"
      },
      "downloads": -1,
      "filename": "adaptor-0.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5c0deba3a4776045417388a68e42f28e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 57717,
      "upload_time": "2023-03-22T08:49:36",
      "upload_time_iso_8601": "2023-03-22T08:49:36.078604Z",
      "url": "https://files.pythonhosted.org/packages/d3/36/70577c1389a59cbd776e5af55e76a5e8d13efe1b29ea3e9e79a2168cce3b/adaptor-0.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e491cf6b45e6267d3653a93a517e9179ccfc13783f05a9afb0af7c7ef643bd6a",
        "md5": "91a655049d926d758774c0d26f31ee6a",
        "sha256": "d8cb6f660eb7d762bec71aa871e6502f508e04e1490c086011dde86d4f11d06c"
      },
      "downloads": -1,
      "filename": "adaptor-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "91a655049d926d758774c0d26f31ee6a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 157661,
      "upload_time": "2023-03-22T08:49:38",
      "upload_time_iso_8601": "2023-03-22T08:49:38.389414Z",
      "url": "https://files.pythonhosted.org/packages/e4/91/cf6b45e6267d3653a93a517e9179ccfc13783f05a9afb0af7c7ef643bd6a/adaptor-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}