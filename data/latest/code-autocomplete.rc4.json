{
  "info": {
    "author": "XuMing",
    "author_email": "xuming624@qq.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Natural Language :: Chinese (Simplified)",
      "Natural Language :: Chinese (Traditional)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Text Processing",
      "Topic :: Text Processing :: Indexing",
      "Topic :: Text Processing :: Linguistic"
    ],
    "description": "[![PyPI version](https://badge.fury.io/py/code-autocomplete.svg)](https://badge.fury.io/py/code-autocomplete)\n[![Contributions welcome](https://img.shields.io/badge/contributions-welcome-brightgreen.svg)](CONTRIBUTING.md)\n[![GitHub contributors](https://img.shields.io/github/contributors/shibing624/code-autocomplete.svg)](https://github.com/shibing624/code-autocomplete/graphs/contributors)\n[![License Apache 2.0](https://img.shields.io/badge/license-Apache%202.0-blue.svg)](LICENSE)\n[![python_vesion](https://img.shields.io/badge/Python-3.5%2B-green.svg)](requirements.txt)\n[![GitHub issues](https://img.shields.io/github/issues/shibing624/code-autocomplete.svg)](https://github.com/shibing624/code-autocomplete/issues)\n[![Wechat Group](http://vlog.sfyc.ltd/wechat_everyday/wxgroup_logo.png?imageView2/0/w/60/h/20)](#Contact)\n\n# Code AutoComplete\n\ncode-autocomplete, a code completion plugin for Python.\n\n**code-autocomplete** can automatically complete the code of lines and blocks with GPT2.\n\n**Guide**\n\n- [Feature](#Feature)\n- [Install](#install)\n- [Usage](#usage)\n- [Contact](#Contact)\n- [Citation](#Citation)\n- [Reference](#reference)\n\n# Feature\n\n- GPT2-based code completion\n- Code completion for Python, other language is coming soon\n- Line and block code completion\n- Train(Fine-tune GPT2) and predict model with your own data\n\n\n# Demo\n\n\nHuggingFace Demo: https://huggingface.co/spaces/shibing624/code-autocomplete\n\n# Install\n\n```\npip3 install torch # conda install pytorch\npip3 install -U code-autocomplete\n```\n\nor\n\n```\ngit clone https://github.com/shibing624/code-autocomplete.git\ncd code-autocomplete\npython3 setup.py install\n```\n\n# Usage\n\n## Code Completion\n\nModel upload to HF's model hub:\n\n- DistilGPT2-python: [shibing624/code-autocomplete-distilgpt2-python](https://huggingface.co/shibing624/code-autocomplete-distilgpt2-python) (fine-tuned distilgpt2, model size: 319MB)\n- GPT2-python: [shibing624/code-autocomplete-gpt2-base](https://huggingface.co/shibing624/code-autocomplete-gpt2-base) (fine-tuned gpt2, model size: 487MB)\n\n![hf](docs/hf_model.png)\n\n### Use with code-autocomplete\n\nexample: [base_demo.py](./examples/base_demo.py)\n\n```python\nfrom autocomplete.gpt2_coder import GPT2Coder\n\nm = GPT2Coder(\"shibing624/code-autocomplete-gpt2-base\")\nprint(m.generate('import torch.nn as')[0])\n```\n\ndistilgpt2 fine-tuned code autocomplete model, you can use the following code:\n\nexample: [distilgpt2_demo.py](./examples/distilgpt2_demo.py)\n\n```python\nimport sys\n\nsys.path.append('..')\nfrom autocomplete.gpt2_coder import GPT2Coder\n\nm = GPT2Coder(\"shibing624/code-autocomplete-distilgpt2-python\")\nprint(m.generate('import torch.nn as')[0])\n```\n\noutput:\n\n```shell\nimport torch.nn as nn\nimport torch.nn.functional as F\n```\n\n### Use with huggingface/transformers：\n\nexample: [use_transformers_gpt2.py](./examples/use_transformers_gpt2.py)\n\n*Please use 'GPT2' related functions to load this model!*\n\n```python\n\nimport os\nfrom transformers import GPT2Tokenizer, GPT2LMHeadModel\n\nos.environ[\"KMP_DUPLICATE_LIB_OK\"] = \"TRUE\"\n\ntokenizer = GPT2Tokenizer.from_pretrained(\"shibing624/code-autocomplete-gpt2-base\")\nmodel = GPT2LMHeadModel.from_pretrained(\"shibing624/code-autocomplete-gpt2-base\")\nprompts = [\n    \"import numpy as np\",\n    \"import torch.nn as\",\n    'parser.add_argument(\"--num_train_epochs\",',\n    \"def set_seed(\",\n    \"def factorial\",\n]\nfor prompt in prompts:\n    input_ids = tokenizer(prompt, return_tensors='pt').input_ids\n    outputs = model.generate(input_ids=input_ids,\n                             max_length=64 + len(input_ids[0]),\n                             temperature=1.0,\n                             top_k=50,\n                             top_p=0.95,\n                             repetition_penalty=1.0,\n                             do_sample=True,\n                             num_return_sequences=1,\n                             length_penalty=2.0,\n                             early_stopping=True,\n                             pad_token_id=tokenizer.eos_token_id,\n                             eos_token_id=tokenizer.eos_token_id,\n                             )\n    decoded = tokenizer.decode(outputs[0], skip_special_tokens=True)\n    print(\"Input :\", prompt)\n    print(\"Output:\", decoded)\n    print(\"=\" * 20)\n```\n\noutput:\n\n```shell\nimport numpy as np\n====================\nimport torch.nn as nn\nimport torchvision.transforms as transforms\n====================\nparser.add_argument(\"--num_train_epochs\", type=int, default=50, help=\"Number of training epochs.\")\nparser.add_argument(\"--batch_size\", type=int, default=32, help=\"Batch size of validation/test data.\")\n====================\ndef set_seed(self):\n====================\ndef factorial(n: int) -> int:\n```\n\n## Train your own model with Dataset\n\n### Build dataset\n\nThis allows to customize dataset building. Below is an example of the building process.\n\nLet's use Python codes from [Awesome-pytorch-list](https://github.com/bharathgs/Awesome-pytorch-list)\n\n1. We want the model to help auto-complete codes at a general level. The codes of The Algorithms suits the need.\n2. This code from this project is well written (high-quality codes).\n\ndataset tree:\n\n```shell\nexamples/download/python\n├── train.txt\n└── valid.txt\n└── test.txt\n```\n\nThere are three ways to build dataset:\n1. Use the huggingface/datasets library load the dataset\nhuggingface datasets [https://huggingface.co/datasets/shibing624/source_code](https://huggingface.co/datasets/shibing624/source_code)\n\n```shell\npip3 install datasets\n```\n\n```python\nfrom datasets import load_dataset\ndataset = load_dataset(\"shibing624/source_code\", \"python\") # python or java or cpp\nprint(dataset)\nprint(dataset['test'][0:10])\n```\n\noutput:\n```shell\nDatasetDict({\n    train: Dataset({\n        features: ['text'],\n        num_rows: 5215412\n    })\n    validation: Dataset({\n        features: ['text'],\n        num_rows: 10000\n    })\n    test: Dataset({\n        features: ['text'],\n        num_rows: 10000\n    })\n})\n{'text': [\n\"            {'max_epochs': [1, 2]},\\n\", \n'            refit=False,\\n', '            cv=3,\\n', \n\"            scoring='roc_auc',\\n\", '        )\\n', \n'        search.fit(*data)\\n', \n'', \n'    def test_module_output_not_1d(self, net_cls, data):\\n', \n'        from skorch.toy import make_classifier\\n', \n'        module = make_classifier(\\n'\n]}\n```\n\n2. Download dataset from Cloud\n\n| Name | Source | Download | Size |\n| :------- | :--------- | :---------: | :---------: |\n| Python+Java+CPP source code | Awesome-pytorch-list(5.22 Million lines) | [github_source_code.zip](https://github.com/shibing624/code-autocomplete/releases/download/0.0.4/source_code.zip) | 105M |\n\ndownload dataset and unzip it, put to `examples/`.\n\n3. Get source code from scratch and build dataset\n\n[prepare_data.py](./examples/prepare_data.py)\n\n```shell\ncd examples\npython prepare_data.py --num_repos 260\n```\n\n### Train and predict model\n\nexample: [train_gpt2.py](./examples/train_gpt2.py)\n\n```shell\ncd examples\npython train_gpt2.py --do_train --do_predict --num_epochs 15 --model_dir outputs-fine-tuned --model_name gpt2\n```\n\n## Server\n\nstart FastAPI server:\n\nexample: [server.py](./examples/server.py)\n\n```shell\ncd examples\npython server.py\n```\n\nopen url: http://0.0.0.0:8001/docs\n\n![api](./docs/api.png)\n\n# Contact\n\n- Issue(建议)\n  ：[![GitHub issues](https://img.shields.io/github/issues/shibing624/code-autocomplete.svg)](https://github.com/shibing624/code-autocomplete/issues)\n- 邮件我：xuming: xuming624@qq.com\n- 微信我： 加我*微信号：xuming624, 备注：个人名称-公司-NLP* 进NLP交流群。\n\n<img src=\"docs/wechat.jpeg\" width=\"200\" />\n\n# Citation\n\n如果你在研究中使用了code-autocomplete，请按如下格式引用：\n\nAPA:\n```latex\nXu, M. code-autocomplete: Code AutoComplete with GPT2 model (Version 0.0.4) [Computer software]. https://github.com/shibing624/code-autocomplete\n```\n\nBibTeX:\n```latex\n@software{Xu_code-autocomplete_Code_AutoComplete,\nauthor = {Xu, Ming},\ntitle = {code-autocomplete: Code AutoComplete with GPT2 model},\nurl = {https://github.com/shibing624/code-autocomplete},\nversion = {0.0.4}\n}\n```\n\n# License\n\n授权协议为 [The Apache License 2.0](/LICENSE)，可免费用做商业用途。请在产品说明中附加code-autocomplete的链接和授权协议。\n\n# Contribute\n\n项目代码还很粗糙，如果大家对代码有所改进，欢迎提交回本项目，在提交之前，注意以下两点：\n\n- 在`tests`添加相应的单元测试\n- 使用`python setup.py test`来运行所有单元测试，确保所有单测都是通过的\n\n之后即可提交PR。\n\n# Reference\n\n- [gpt-2-simple](https://github.com/minimaxir/gpt-2-simple)\n- [galois-autocompleter](https://github.com/galois-autocompleter/galois-autocompleter)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/shibing624/code-autocomplete",
    "keywords": "autocomplete,code-autocomplete",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "code-autocomplete",
    "package_url": "https://pypi.org/project/code-autocomplete/",
    "platform": "",
    "project_url": "https://pypi.org/project/code-autocomplete/",
    "project_urls": {
      "Homepage": "https://github.com/shibing624/code-autocomplete"
    },
    "release_url": "https://pypi.org/project/code-autocomplete/0.0.4/",
    "requires_dist": null,
    "requires_python": ">=3.5",
    "summary": "Code AutoComplete",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13044313,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b0e9a06681c505dc3ece910ee26261a1736158533a749534b748d2df364ad43c",
          "md5": "c8b012b3914041b2a58c7ca7b7b83f58",
          "sha256": "dd88e589dc0a5c2010e855894e8964dce5dc7e00f4cbe22d3618dfa1f3b2e055"
        },
        "downloads": -1,
        "filename": "code-autocomplete-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c8b012b3914041b2a58c7ca7b7b83f58",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 14415,
        "upload_time": "2022-02-11T12:15:22",
        "upload_time_iso_8601": "2022-02-11T12:15:22.850857Z",
        "url": "https://files.pythonhosted.org/packages/b0/e9/a06681c505dc3ece910ee26261a1736158533a749534b748d2df364ad43c/code-autocomplete-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f13f8daa04030a0e2a923ae7f042c1c69a67398aa1873791bd2721699a26a4a2",
          "md5": "e001ac7124f61849a00bbe0ede1f2146",
          "sha256": "0762b0abb13ff9d18d8f76a50df9caba8f22899a1944aabb24ba057cbe5bee99"
        },
        "downloads": -1,
        "filename": "code-autocomplete-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e001ac7124f61849a00bbe0ede1f2146",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 18846,
        "upload_time": "2022-02-13T09:27:06",
        "upload_time_iso_8601": "2022-02-13T09:27:06.128152Z",
        "url": "https://files.pythonhosted.org/packages/f1/3f/8daa04030a0e2a923ae7f042c1c69a67398aa1873791bd2721699a26a4a2/code-autocomplete-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "232990e583ec645606e8532811dd31786fec4c0a3995d5a23e1723080db8f673",
          "md5": "4b218251eb5fbc7e451b4413fa03ebcf",
          "sha256": "90272639c3ef76720f5b347e6929e90e663aab83079efc128d0d8113b01dff41"
        },
        "downloads": -1,
        "filename": "code-autocomplete-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "4b218251eb5fbc7e451b4413fa03ebcf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 19809,
        "upload_time": "2022-02-15T07:39:17",
        "upload_time_iso_8601": "2022-02-15T07:39:17.727485Z",
        "url": "https://files.pythonhosted.org/packages/23/29/90e583ec645606e8532811dd31786fec4c0a3995d5a23e1723080db8f673/code-autocomplete-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7856ebb2fe0e246145768f3ec064abaca7bbdfbe99b9976ee1c673aeea305b2a",
          "md5": "ee1d5f8b734c73503fef5fdf11f145c3",
          "sha256": "a0fcc241eab46fc8bae114404c3a64ae2e5ebe56caafa10d9ef3679c1c581397"
        },
        "downloads": -1,
        "filename": "code-autocomplete-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "ee1d5f8b734c73503fef5fdf11f145c3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 23084,
        "upload_time": "2022-03-01T11:16:51",
        "upload_time_iso_8601": "2022-03-01T11:16:51.434634Z",
        "url": "https://files.pythonhosted.org/packages/78/56/ebb2fe0e246145768f3ec064abaca7bbdfbe99b9976ee1c673aeea305b2a/code-autocomplete-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7856ebb2fe0e246145768f3ec064abaca7bbdfbe99b9976ee1c673aeea305b2a",
        "md5": "ee1d5f8b734c73503fef5fdf11f145c3",
        "sha256": "a0fcc241eab46fc8bae114404c3a64ae2e5ebe56caafa10d9ef3679c1c581397"
      },
      "downloads": -1,
      "filename": "code-autocomplete-0.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "ee1d5f8b734c73503fef5fdf11f145c3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 23084,
      "upload_time": "2022-03-01T11:16:51",
      "upload_time_iso_8601": "2022-03-01T11:16:51.434634Z",
      "url": "https://files.pythonhosted.org/packages/78/56/ebb2fe0e246145768f3ec064abaca7bbdfbe99b9976ee1c673aeea305b2a/code-autocomplete-0.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}