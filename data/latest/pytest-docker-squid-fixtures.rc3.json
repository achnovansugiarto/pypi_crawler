{
  "info": {
    "author": "Richard Davis",
    "author_email": "crashvb@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# pytest-docker-squid-fixtures\n\n## Overview\n\nPytest fixtures to instantiate and utilize local squid docker containers, using [lovely-pytest-docker](https://pypi.org/project/lovely-pytest-docker) and [docker-py](https://pypi.org/project/docker-py), for testing.\n\n## Getting Started\n\nUpdate <tt>setup.py</tt> to include:\n\n```python\nfrom distutils.core import setup\n\nsetup(\n\ttests_require=[\"pytest-docker-squid-fixtures\"]\n)\n```\n\nAll fixtures should be automatically included via the <tt>pytest11</tt> entry point.\n```python\nimport requests\nimport pytest\nfrom pytest_docker_squid_fixtures import SquidInsecure, SquidSecure  # Optional, for typing\n\ndef test_squid_secure(squid_secure: SquidSecure):\n    response = requests.head(f\"https://{squid_secure.endpoint}/\",\n        headers=squid_secure.auth_header,\n        verify=str(squid_secure.cacerts),\n    )\n    assert response.status_code == 200\n\ndef test_squid_insecure(squid_insecure: SquidInsecure):\n    response = requests.head(f\"http://{squid_insecure.endpoint}/\")\n    assert response.status_code == 200\n```\n\nThe `push_image` mark can optionally be added to stage images in the squid prior to testing. See [Markers](#markers) for details.\n## Compatibility\n\n* Tested with python 3.8\n\n## Installation\n### From [pypi.org](https://pypi.org/project/pytest-docker-squid-fixtures/)\n\n```\n$ pip install pytest_docker_squid_fixtures\n```\n\n### From source code\n\n```bash\n$ git clone https://github.com/crashvb/pytest-docker-squid-fixtures\n$ cd pytest-docker-squid-fixtures\n$ virtualenv env\n$ source env/bin/activate\n$ python -m pip install --editable .[dev]\n```\n\n## <a name=\"fixtures\"></a>Fixtures\n\n### <a name=\"squid_auth_header\"></a> squid_auth_header\n\nRetrieves an HTTP basic authentication header that is populated with credentials that can access the secure squid service. The credentials are retrieved from the [squid_password](#squid_password) and [squid_username](#squid_username) fixtures. This fixture is used to replicate docker images into the secure squid service.\n\n### <a name=\"squid_cacerts\"></a> squid_cacerts\n\nLocates a user-defined CA trust store (<tt>tests/cacerts</tt>) to use to verify connections to the secure squid service. If one cannot be located, a temporary trust store is created containing certificates from <tt>certifi</tt> and the [squid_certs](#squid_certs) fixture. This fixture is used to instantiate the secure squid service.\n\n### <a name=\"squid_certs\"></a> squid_certs\n\nReturns the paths of the self-signed certificate authority certificate, certificate, and private key that are used by the secure squid service. This fixture is used to instantiate the secure squid service.\n\n#### NamedTuple Fields\n\nThe following fields are defined in the tuple provided by this fixture:\n\n* **ca_certificate** - Path to the self-signed certificate authority certificate.\n* **ca_private_key** - Path to the self-signed certificate authority private key.\n* **certificate** - Path to the certificate.\n* **private_key** - Path to the private key.\n\nTyping is provided by `pytest_docker_squid_fixtures.SquidCerts`.\n\n### <a name=\"squid_hwpasswd\"></a> squid_htpasswd\n\nProvides the path to a htpasswd file that is used by the secure squid service. If a user-defined htpasswd file (<tt>tests/htpasswd</tt>) can be located, it is used. Otherwise, a temporary htpasswd file is created using credentials from the [squid_password](#squid_password) and [squid_username](#squid_username) fixtures. This fixture is used to instantiate the secure squid ervice.\n\n### <a name=\"squid_squidcfg_insecure\"></a> squid_squidcfg_insecure\n\nProvides the path to an insecure squid.cfg file that is used by the insecure squid service. If a user-defined squid.cfg file (<tt>tests/squid.insecure.cfg</tt>) can be located, it is used. Otherwise, an embedded configuration is copied to a temporary location and returned. This fixture is used to instantiate the insecure squid service.\n\n### <a name=\"squid_squidcfg_secure\"></a> squid_squidcfg_secure\n\nProvides the path to a secure squid.cfg file that is used by the secure squid service. If a user-defined squid.cfg file (<tt>tests/squid.secure.cfg</tt>) can be located, it is used. Otherwise, an embedded configuration is copied to a temporary location and returned. This fixture is used to instantiate the secure squid service.\n\n### <a name=\"squid_insecure\"></a> squid_insecure\n\nConfigures and instantiates a squid service without TLS or authentication.\n\n```python\nimport requests\nfrom pytest_docker_squid_fixtures import SquidInsecure  # Optional, for typing\n\ndef test_squid_insecure(squid_insecure: SquidInsecure):\n    response = requests.head(f\"http://{squid_insecure.endpoint}/\")\n    assert response.status_code == 200\n```\n\n#### NamedTuple Fields\n\nThe following fields are defined in the tuple provided by this fixture:\n\n* **docker_compose** - Path to the fully instantiated docker-compose configuration.\n* **endpoint** - Endpoint of the insecure squid service.\n* **endpoint_name** - Endpoint of the insecure squid service, by service name.\n* **service_name** - Name of the service within the docker-compose configuration.\n\nTyping is provided by `pytest_docker_squid_fixtures.SquidInsecure`.\n\n### <a name=\"squid_password\"></a> squid_password\n\nProvides a generated password to use for authentication to the secure squid service. This fixture is used to replicate docker images into the secure squid service.\n\n### <a name=\"squid_secure\"></a> squid_secure\n\nConfigures and instantiates a TLS enabled squid service with HTTP basic authorization.\n\n```python\nimport requests\nfrom pytest_docker_squid_fixtures import SquidSecure  # Optional, for typing\n\ndef test_squid_secure(squid_secure: SquidSecure):\n    response = requests.head(\n        f\"https://{squid_secure.endpoint}/\",\n        headers=squid_secure.auth_header,\n        verify=str(squid_secure.cacerts),\n    )\n    assert response.status_code == 200\n```\n\n#### NamedTuple Fields\n\nThe following fields are defined in the tuple provided by this fixture:\n\n* **auth_header** - from [squid_auth_header](#squid_auth_header).\n* **cacerts** - from [squid_cacerts](#squid_cacerts).\n* **certs** - from [squid_certs](#squid_certs).\n* **docker_compose** - Path to the fully instantiated docker-compose configuration.\n* **endpoint** - Endpoint of the secure squid service.\n* **endpoint_name** - Endpoint of the secure squid service, by service name.\n* **htpasswd** - from [squid_htpasswd](#squid_htpasswd)\n* **password** - from [squid_password](#squid_password).\n* **service_name** - Name of the service within the docker-compose configuration.\n* **ssl_context** - from [squid_ssl_context](#squid_ssl_context).\n* **username** - from [squid_username](#squid_username).\n\nTyping is provided by `pytest_docker_squid_fixtures.SquidSecure`.\n\n### <a name=\"squid_ssl_context\"></a> squid_ssl_context\n\nProvides an SSL context containing the CA trust store from the  [squid_cacerts](#squid_cacerts) fixture. This fixture is used to instantiate the secure squid service.\n\n### <a name=\"squid_username\"></a> squid_username\n\nProvides a generated username to use for authentication to the secure squid service. This fixture is used to replicate docker images into the secure squid service.\n\n### <a name=\"pdhf_docker_compose_insecure\"></a> pdhf_docker_compose_insecure\n\nThis fixture uses the `docker_compose_files` fixture to locate a user-defined docker-compose configuration file (typically <tt>tests/docker-compose.yml</tt>) that contains the <tt>pytest-docker-squid-insecure</tt> service. If one cannot be located, an embedded configuration is copied to a temporary location and returned. This fixture is used to instantiate the insecure squid service. The configuration will be treated as a template; the <tt>$PATH_SQUIDCFG</tt> token will be populated with the absolute path provided by the [squid_squidcfg](#squid_squidcfg) fixture.\n\n### <a name=\"pdhf_docker_compose_secure\"></a> pdhf_docker_compose_secure\n\nThis fixture uses the `docker_compose_files` fixture to locate a user-defined docker-compose configuration file (typically <tt>tests/docker-compose.yml</tt>) that contains the <tt>pytest-docker-squid-secure</tt> service. If one cannot be located, an embedded configuration is copied to a temporary location and returned. This fixture is used to instantiate the secure squid service. The configuration will be treated as a template; the <tt>$PATH_CERTIFICATE</tt>, <tt>$PATH_HTPASSWD</tt>, <tt>$PATH_KEY</tt>, and <tt>$PATH_SQUIDCFG</tt> tokens will be populated with the absolute paths provided by the [squid_certs](#squid_certs), [squid_htpasswd](#squid_htpasswd), and [squid_squidcfg](#squid_squidcfg) fixtures, as appropriate.\n\n## <a name=\"enumerated_fixtures\"></a>Enumerated Fixtures\n\nIt is possible to instantiate multiple squid instances using the corresponding enumerated fixtures. All [fixtures](#fixtures) listed above have _*_list_ (e.g. `squid_secure` -> `squid_secure_list`) versions that will return enumerated lists of corresponding data type.\n\nFor example:\n\n```python\nimport requests\nfrom typing import List  # Optional, for typing\nfrom pytest_docker_squid_fixtures import SquidSecure  # Optional, for typing\n\ndef test_squid_secure_list(squid_secure_list: List[SquidSecure]):\n    for squid_secure in squid_secure_list:\n        response = requests.head(\n            f\"https://{squid_secure.endpoint}/\",\n            headers=squid_secure.auth_header,\n            verify=str(squid_secure.cacerts),\n        )\n        assert response.status_code == 200\n```\n\nIt is possible to use both singular and enumerated fixtures within the same test context; however, the same values will be returned for the singular fixture as the first enumerated list value (i.e. squid_secure == squid_secure_list[0]). To avoid complications with lower layers, mainly docker-compose, and to allow for this interchangeability, caching is used internally.\n\nBy default, the scale factor of the enumerated instances is set to one (n=1). This value can be changed by overriding the `pdhf_scale_factor` fixture, as follows:\n\n```python\nimport pytest\n\n@pytest.fixture(scope=\"session\")\ndef pdhf_scale_factor() -> int:\n    return 4\n```\n\nThis fixture will be used to scale both the insecure and secure docker registries.\n\n## <a name=\"limitations\"></a>Limitations\n\n1. All the fixtures provided by this package are <tt>session</tt> scoped; and will only be executed once per test execution.\n2. At most 10 insecure and 10 secure squid instances are supported using the embedded docker compose.\n\n## External Debugging\nWhile all the metadata needed to interact with the proxy is available for consumption via fixtures, sometimes it is desirable to interact with the instantiated service outside of the test context.\n\nIf pytest is executed with <tt>--keepalive</tt>, it is possible to connect to the proxy using external tooling both during and after testing has completed:\n\n```bash\n$ https_proxy=https://127.0.0.1:$(docker inspect --format='{{ (index (index .NetworkSettings.Ports \"3129/tcp\") 0).HostPort }}' pytest-squid-secure-0) \\\ncurl --head --proxy-insecure --proxy-user \"pytest.username...:pytest.password...\" https://www.google.com/\nHTTP/1.1 200 Connection established\n\nHTTP/2 200\ncontent-type: text/html; charset=ISO-8859-1\n...\n```\n\nYou can also retrieve additional, transient, configuration files, such as the CA certificate or proxy configuration, from <tt>/tmp/pytest-of-${USER}/pytest-current/...</tt> or by inspecting the running container.\n## Development\n\n[Source Control](https://github.com/crashvb/pytest-docker-squid-fixtures)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/crashvb/pytest-docker-squid-fixtures",
    "keywords": "docker fixtures pytest squid",
    "license": "GNU General Public License v3.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pytest-docker-squid-fixtures",
    "package_url": "https://pypi.org/project/pytest-docker-squid-fixtures/",
    "platform": "",
    "project_url": "https://pypi.org/project/pytest-docker-squid-fixtures/",
    "project_urls": {
      "Homepage": "https://github.com/crashvb/pytest-docker-squid-fixtures"
    },
    "release_url": "https://pypi.org/project/pytest-docker-squid-fixtures/0.1.2/",
    "requires_dist": [
      "bcrypt",
      "certifi",
      "docker-compose",
      "lovely-pytest-docker",
      "pyopenssl",
      "pytest",
      "black ; extra == 'dev'",
      "pylint ; extra == 'dev'",
      "twine ; extra == 'dev'",
      "wheel ; extra == 'dev'"
    ],
    "requires_python": "",
    "summary": "Pytest fixtures for testing with squid.",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12834781,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a1cb439215292bc91ee1ab0f22ca4eac54d784f50dd9b1b83124572e591e038",
          "md5": "01bd1266a842c9ae1726cb1fa389d3e6",
          "sha256": "e3f7f6045e14a2f6bfefad03ccb15ebb1cd50a57857a201c389e72caf082c698"
        },
        "downloads": -1,
        "filename": "pytest_docker_squid_fixtures-0.1.0-py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "01bd1266a842c9ae1726cb1fa389d3e6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 21900,
        "upload_time": "2022-02-04T19:44:55",
        "upload_time_iso_8601": "2022-02-04T19:44:55.593725Z",
        "url": "https://files.pythonhosted.org/packages/8a/1c/b439215292bc91ee1ab0f22ca4eac54d784f50dd9b1b83124572e591e038/pytest_docker_squid_fixtures-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6ee8eaa4d48e3f6f3c5ab257e779418f9c77753b031dfe2d66fff6e6f77c57f7",
          "md5": "28748b591a63620142f86de28ef8f8ba",
          "sha256": "edec55a4a0b05698507118cdf5a834e16b23a7e91c88139dd0d57881d6c87bd9"
        },
        "downloads": -1,
        "filename": "pytest_docker_squid_fixtures-0.1.0.tar.gz",
        "has_sig": true,
        "md5_digest": "28748b591a63620142f86de28ef8f8ba",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16938,
        "upload_time": "2022-02-04T19:44:57",
        "upload_time_iso_8601": "2022-02-04T19:44:57.450908Z",
        "url": "https://files.pythonhosted.org/packages/6e/e8/eaa4d48e3f6f3c5ab257e779418f9c77753b031dfe2d66fff6e6f77c57f7/pytest_docker_squid_fixtures-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "71ae48fde7b435a2e1777f7f8595b0031c46762a947e70b48bdb6fc9e69042eb",
          "md5": "8d52b85ff6266236b09421d0c17f0459",
          "sha256": "6f610707f7ffff2ddc5e70235e4563566fb262b1af709c22f423f38cd6189695"
        },
        "downloads": -1,
        "filename": "pytest_docker_squid_fixtures-0.1.1-py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "8d52b85ff6266236b09421d0c17f0459",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 22022,
        "upload_time": "2022-02-08T22:16:47",
        "upload_time_iso_8601": "2022-02-08T22:16:47.120946Z",
        "url": "https://files.pythonhosted.org/packages/71/ae/48fde7b435a2e1777f7f8595b0031c46762a947e70b48bdb6fc9e69042eb/pytest_docker_squid_fixtures-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "342f1b1c008188e5f462874d5f22264e81af704e737e84c66e725ae4b6d2610c",
          "md5": "4d2e911bf37c007c80604fd517256d0a",
          "sha256": "6ca7bfece47313896ca53f41325c2703b6c5916fd9cc9b7731a88c12ee10541d"
        },
        "downloads": -1,
        "filename": "pytest_docker_squid_fixtures-0.1.1.tar.gz",
        "has_sig": true,
        "md5_digest": "4d2e911bf37c007c80604fd517256d0a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17065,
        "upload_time": "2022-02-08T22:16:48",
        "upload_time_iso_8601": "2022-02-08T22:16:48.911211Z",
        "url": "https://files.pythonhosted.org/packages/34/2f/1b1c008188e5f462874d5f22264e81af704e737e84c66e725ae4b6d2610c/pytest_docker_squid_fixtures-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "efbda3fa1e225cde99bc168d341c6649ca54f23c11abba4fa6fd8787996a2ae8",
          "md5": "f3e618d97ac93960f3e986f1b12c2c6a",
          "sha256": "6f1c2c815ffe853cd268ba906a0f4d61613b9e5ba1459fd438fb107c51e5d408"
        },
        "downloads": -1,
        "filename": "pytest_docker_squid_fixtures-0.1.2-py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "f3e618d97ac93960f3e986f1b12c2c6a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 22712,
        "upload_time": "2022-02-09T03:39:29",
        "upload_time_iso_8601": "2022-02-09T03:39:29.516123Z",
        "url": "https://files.pythonhosted.org/packages/ef/bd/a3fa1e225cde99bc168d341c6649ca54f23c11abba4fa6fd8787996a2ae8/pytest_docker_squid_fixtures-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "22eeb438486f41250e15975f3c84273a8ea65b316cb06e4e9514fa4721511cd2",
          "md5": "b05e2e778f67edc42069e87e6ae188d2",
          "sha256": "c3aa644a36ee81ff694498ed284c835c71d805ed4c7597714f47b918904b7122"
        },
        "downloads": -1,
        "filename": "pytest_docker_squid_fixtures-0.1.2.tar.gz",
        "has_sig": true,
        "md5_digest": "b05e2e778f67edc42069e87e6ae188d2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18275,
        "upload_time": "2022-02-09T03:39:30",
        "upload_time_iso_8601": "2022-02-09T03:39:30.609818Z",
        "url": "https://files.pythonhosted.org/packages/22/ee/b438486f41250e15975f3c84273a8ea65b316cb06e4e9514fa4721511cd2/pytest_docker_squid_fixtures-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "efbda3fa1e225cde99bc168d341c6649ca54f23c11abba4fa6fd8787996a2ae8",
        "md5": "f3e618d97ac93960f3e986f1b12c2c6a",
        "sha256": "6f1c2c815ffe853cd268ba906a0f4d61613b9e5ba1459fd438fb107c51e5d408"
      },
      "downloads": -1,
      "filename": "pytest_docker_squid_fixtures-0.1.2-py3-none-any.whl",
      "has_sig": true,
      "md5_digest": "f3e618d97ac93960f3e986f1b12c2c6a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 22712,
      "upload_time": "2022-02-09T03:39:29",
      "upload_time_iso_8601": "2022-02-09T03:39:29.516123Z",
      "url": "https://files.pythonhosted.org/packages/ef/bd/a3fa1e225cde99bc168d341c6649ca54f23c11abba4fa6fd8787996a2ae8/pytest_docker_squid_fixtures-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "22eeb438486f41250e15975f3c84273a8ea65b316cb06e4e9514fa4721511cd2",
        "md5": "b05e2e778f67edc42069e87e6ae188d2",
        "sha256": "c3aa644a36ee81ff694498ed284c835c71d805ed4c7597714f47b918904b7122"
      },
      "downloads": -1,
      "filename": "pytest_docker_squid_fixtures-0.1.2.tar.gz",
      "has_sig": true,
      "md5_digest": "b05e2e778f67edc42069e87e6ae188d2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 18275,
      "upload_time": "2022-02-09T03:39:30",
      "upload_time_iso_8601": "2022-02-09T03:39:30.609818Z",
      "url": "https://files.pythonhosted.org/packages/22/ee/b438486f41250e15975f3c84273a8ea65b316cb06e4e9514fa4721511cd2/pytest_docker_squid_fixtures-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}