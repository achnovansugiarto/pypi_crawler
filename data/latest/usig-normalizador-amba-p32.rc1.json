{
  "info": {
    "author": "USIG - GCBA",
    "author_email": "Hernán Ogasawara <hogasawara@buenosaires.gob.ar>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: Spanish",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3.6",
      "Topic :: Scientific/Engineering :: GIS",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "Normalizador de Direcciones AMBA\n================================\nEl procedimiento de normalización de direcciones tiene por objetivo unificar la escritura de direcciones con respecto a un callejero de referencia.\nA su vez ofrece herramientas para consultar de manera transparente la existencia de cruces de calle, calles pertenecientes a\npartidos, calle con altura con y sin partido determinado. 'Normalizador de Direcciones AMBA' es una componente python para normalizar direcciones del AMBA (conurbano y CABA).\n\nPartidos disponibles\n~~~~~~~~~~~~~~~~~~~~\nServicio de callejeros: http://servicios.usig.buenosaires.gov.ar/callejero-amba\n\n+-------------------------+-------------------------+\n| * CABA                  | * La Plata              |\n| * Almirante Brown       | * Lomas de Zamora       |\n| * Avellaneda            | * Malvinas Argentinas   |\n| * Berazategui           | * Marcos Paz            |\n| * Berisso               | * Merlo                 |\n| * Cañuelas              | * Moreno                |\n| * Ensenada              | * Morón                 |\n| * Escobar               | * Pilar                 |\n| * Esteban Echeverría    | * Presidente Perón      |\n| * Ezeiza                | * Quilmes               |\n| * Florencio Varela      | * San Fernando          |\n| * General Rodríguez     | * San Isidro            |\n| * General San Martín    | * San Miguel            |\n| * Hurlingham            | * San Vicente           |\n| * Ituzaingó             | * Tigre                 |\n| * José C. Paz           | * Tres de Febrero       |\n| * La Matanza            | * Vicente López         |\n| * Lanús                 |                         |\n+-------------------------+-------------------------+\n\n\nInstalación\n-----------\n\nPyPi\n~~~~\n.. code:: bash\n\n    $ pip install -i https://test.pypi.org/simple/usig-normalizador-amba-P32\n\nGit\n~~~\n.. code:: bash\n\n    $ git clone https://github.com/santiagocastellano/normalizador-amba-Python3.git\n    $ cd normalizador-amba\n    $ python setup.py install\n\nEasy Install\n~~~~~~~~~~~~\n.. code:: bash\n\n    $ git clone https://github.com/santiagocastellano/normalizador-amba-Python3.git\n    $ cd normalizador-amba\n    $ make prepare-package\n    $ easy_install dist/usig-normalizador-amba-x.x.x.tar.gz\n\n\nGeneración del paquete de instalación\n-------------------------------------\n.. code:: bash\n\n    $ make prepare-package\n\n\nTesting\n-------\nEn el root del proyecto ejecutar:\n\n.. code:: bash\n\n    $ make run-test\n\n\n\nEjemplos\n--------\n\n.. code:: python\n    \n    from usig_normalizador_amba import NormalizadorAMBA\n\n    nd = NormalizadorAMBA()\n    res = nd.normalizar('callao y corrientes')\n    for r in res:\n        print r\n\nPara instanciar el normalizador para algún/os partido/s en particular:\n\n.. code:: python\n    \n    from usig_normalizador_amba import NormalizadorAMBA\n\n    nd = NormalizadorAMBA(include_list=['caba']) # lista de codigos de partido\n    res = nd.normalizar(u'San Martín 153')\n    for r in res:\n        print r\n\n\nPara excluir del normalizador algún partido en particular:\n\n.. code:: python\n    \n    from usig_normalizador_amba import NormalizadorAMBA\n\n    nd = NormalizadorAMBA(exclude_list=['caba']) # lista de codigos de partido\n    res = nd.normalizar(u'San Martín 153')\n    for r in res:\n        print r\n\n\nPara buscar una dirección en un texto:\n\n.. code:: python\n    \n    from usig_normalizador_amba import NormalizadorAMBA\n\n    nd = NormalizadorAMBA() # lista de codigos de partido\n    res = nd.buscarDireccion(u'Ubicado en Monseñor Alejandro Schell 166, a metros de la estación de Lomas de Zamora.')\n    print res[0][0]['direcciones'][0]",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/santiagocastellano/normalizador-amba-Python3.git",
    "keywords": "usig gcba gis normalizador direcciones amba",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "usig-normalizador-amba-P32",
    "package_url": "https://pypi.org/project/usig-normalizador-amba-P32/",
    "platform": "Unix/Linux",
    "project_url": "https://pypi.org/project/usig-normalizador-amba-P32/",
    "project_urls": {
      "Homepage": "https://github.com/santiagocastellano/normalizador-amba-Python3.git"
    },
    "release_url": "https://pypi.org/project/usig-normalizador-amba-P32/1.2.5/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Normalizador de Direcciones AMBA",
    "version": "1.2.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4621340,
  "releases": {
    "1.2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4d300a0b781361e18df6a81a4800712db8b570752f718f097d0dfca9021fabdd",
          "md5": "27f893b83f9209625902da57f18084a1",
          "sha256": "a04cbc6b931e41ee2468d86837b8b3a400937e72e2fd079878cb7c9e74e943e1"
        },
        "downloads": -1,
        "filename": "usig-normalizador-amba-P32-1.2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "27f893b83f9209625902da57f18084a1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15308,
        "upload_time": "2018-12-20T15:32:31",
        "upload_time_iso_8601": "2018-12-20T15:32:31.898004Z",
        "url": "https://files.pythonhosted.org/packages/4d/30/0a0b781361e18df6a81a4800712db8b570752f718f097d0dfca9021fabdd/usig-normalizador-amba-P32-1.2.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4d300a0b781361e18df6a81a4800712db8b570752f718f097d0dfca9021fabdd",
        "md5": "27f893b83f9209625902da57f18084a1",
        "sha256": "a04cbc6b931e41ee2468d86837b8b3a400937e72e2fd079878cb7c9e74e943e1"
      },
      "downloads": -1,
      "filename": "usig-normalizador-amba-P32-1.2.5.tar.gz",
      "has_sig": false,
      "md5_digest": "27f893b83f9209625902da57f18084a1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 15308,
      "upload_time": "2018-12-20T15:32:31",
      "upload_time_iso_8601": "2018-12-20T15:32:31.898004Z",
      "url": "https://files.pythonhosted.org/packages/4d/30/0a0b781361e18df6a81a4800712db8b570752f718f097d0dfca9021fabdd/usig-normalizador-amba-P32-1.2.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}