{
  "info": {
    "author": "Mattia Samory",
    "author_email": "mattia.samory@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# `pytangle`\nA python wrapper for crowdtangle \n\n### In this repository\n- `pytangle.py`: main file with examples\n- `pytangle/api.py`: object oriented interface to the api\n- `pytangle/connectivity.py`: uses requests to forward calls to the api endpoints. performs rate limiting and network-related error handling.\n- `pytangle/endpoints.py`: objects detailing the crowdtangle API endpoints \n- `pytangle/utils.py`: common utility procedures\n- `pytangle_config_sample.json`: sample configuration file. `pytangle` uses this file to load your API token and to set logging \npreferences. Copy `pytangle_config_sample.json` into a file named `pytangle_config.json` before \ncustomizing it. You most likely want to edit at least your API token. See the later section for further customizations.      \n\n### Quickstart\n1. Install the package: `pip3 install pytangle`\n2. Create a file named `pytangle_config.json` in the folder from where you will call `pytangle`, and paste: \n```json\n{\n  \"token\": \"YOUR_CROWDTANGLE_TOKEN\"\n}\n```\n3. Check that everything works:\n```python\nfrom pytangle.api import API\napi = API() # or \"api = API(token=YOUR_CROWDTANGLE_TOKEN)\" \n            # if you did not create pytangle_config.json\n\n# fetch lists in the current dashboard\nfor a_list in api.lists():\n   print(a_list)\n```\n### Installation\nThe quickest way to download and install is:\n\n```bash\npip3 install pytangle\n```\n\nOtherwise, download the code, move into the directory, and install from the local file, e.g.:\n\n```bash\ngit clone https://github.com/hide-ous/pytangle.git \ncd pytangle\npip3 install . \n```\n\nTo install only the dependencies, and use the library without installing,\nrun:\n\n```bash\npip3 install -r requirements.txt\n```\n\nPython 3.5 and up. Tested on 3.7.\n\n\n### Examples\nIt is easy to use the API. Just create an API instance, and start querying way. If you have customized `pytangle_config.json` the \n API instance will automatically load your API token, otherwise you can assign explicitly via code. Rate limiting and \n pagination are handled for you. \n\n```python\nfrom pytangle.api import API\napi = API()\n# use the following line instead if you do not want to set up a configuration file\n# api = API(token=\"YOUR_TOKEN\") \n```\n\nAll query methods return an iterator, one result object (i.e. one post, account, ...) at a time. For example, to fetch \nthe lists linked to the current dashboard:  \n```python\nfrom pytangle.api import API\napi = API()\n# fetch all lists linked to the current dashboard\nfor a_list in api.lists():\n    print(a_list)\n```\n\nThe same applies to other types of objects, like posts: \n```python\nfrom pytangle.api import API\napi = API()\n\n# get the 5 top overperforming posts\nfor a_post in api.posts(count=5):\n    print(a_post)\n```\n\nIf you want information about a specific post, you can query it via either its facebook id or its crowdtangle id, by\nspecifying the `endpoint` (`platform` or `ct` respectively). For differences see \n[the official wiki](https://github.com/CrowdTangle/API/wiki/Posts#get-postid).\n```python\nfrom pytangle.api import API\napi = API()\n\n# get information about a specific post\npost_id = \"1515871602074952_5362226790772728\"\nfor a_post in api.post(id=post_id, endpoint='platform'):\n    print(a_post)\n```\n\nGet the leaderboard for the current dashboard:\n```python\nfrom pytangle.api import API\napi = API()\n\n# get the first 5 entries in the leaderboard for the current dashboard\nfor a_leaderboard in api.leaderboard(count=5):\n    print(a_leaderboard)\n```\n\nGet the top 5 posts sharing a link (like in the crowdtangle chrome extension):\n```python\nfrom pytangle.api import API\napi = API()\n\n# get the top 5 sharers of a link\nan_url = \"https://www.youtube.com/watch?v=dQw4w9WgXcQ\"\nfor a_post in api.links(count=5, link=an_url):\n    print(a_post)\n```\n\nGet details about a specific account in a list:\n\n```python\nfrom pytangle.api import API\napi = API()\n\n# get information on an account\nlist_id = 12345 # the id of one of your lists\nfor an_account in api.accounts_in_list(count=5, listId=list_id):\n    print(an_account)\n```\n\nGet all posts from a list in a specific date range (you can find which lists are in your dashboard via `api.lists()`:\n```python\nfrom pytangle.api import API\napi = API()\n\n# get all posts from a list from Jan until June 2020\nlist_ids = [12345, ] # ids of the lists of interest\nfor n, a_post in enumerate(api.posts(listIds=list_ids,\n                                     count=-1,\n                                     batchSize=100,\n                                     sortBy='date',\n                                     startDate='2020-01-01',\n                                     endDate='2020-06-30',\n                                     timeframe=None,\n                                     )):\n    # do something with the post\n    if not n % 1000:\n        print(n)\n```\n### Configuring `pytangle`\n\nThe configuration file `pytangle_config.json` is a simple json file, containing two main sections:\n- `token`: is the API token associated with a dashboard within crowdtangle. If you have access to\n the API, you can locate your API token via your dashboard under Settings > API Access.  \n- `logging`: is a dictionary of items determining how pytangle should log. It follows the conventions\nin `logging.dictConfig`: for explanations on the various options see the \n[official reference](https://docs.python.org/3/library/logging.config.html#dictionary-schema-details).\n\nThe default locations for `pytangle_config.json` are:\n - at the root of the presently used module, or \n - in the user's home.\n\nAn API instance will attempt to load the token from the configuration file, if a token is not explicitly passed.\n`pytangle.py` shows an example of how to initialize loggers using the configuration in `pytangle_config.json`. However, the API\nwill not load the logging configuration by default.\n\n`pytangle_config_sample.json` provides a reasonable starting point to customize `pytangle`: just copy the file \nin one of the default locations under the name `pytangle_config.json`, and edit (at least) your `token`.\n\n### Changelog\n* 0.0.2 \n    * bugfix: pass token via code instead of configuration file \n* 0.0.1 initial release\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/hide-ous/pytangle/archive/v0.0.1.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hide-ous/pytangle/",
    "keywords": "crowdtangle,api,wrapper",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pytangle",
    "package_url": "https://pypi.org/project/pytangle/",
    "platform": "",
    "project_url": "https://pypi.org/project/pytangle/",
    "project_urls": {
      "Download": "https://github.com/hide-ous/pytangle/archive/v0.0.1.tar.gz",
      "Homepage": "https://github.com/hide-ous/pytangle/"
    },
    "release_url": "https://pypi.org/project/pytangle/0.0.2/",
    "requires_dist": [
      "requests (>=2.9.1)",
      "ratelimit (>=2.2.1)",
      "python-dateutil (>=2.8.1)"
    ],
    "requires_python": ">=3.5",
    "summary": "A python wrapper for crowdtangle API endpoints",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8377044,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8152735f6663cde0da58e0a10c33be318b4ac45b4aa2ff803d4e2905205968fc",
          "md5": "e38c964304f4bcc05d302baf978be2ac",
          "sha256": "a977fe17d378a12b5492a37d280b94d7683726433398fce5c399dde307e6bd6d"
        },
        "downloads": -1,
        "filename": "pytangle-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e38c964304f4bcc05d302baf978be2ac",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 25421,
        "upload_time": "2020-09-28T16:07:36",
        "upload_time_iso_8601": "2020-09-28T16:07:36.141896Z",
        "url": "https://files.pythonhosted.org/packages/81/52/735f6663cde0da58e0a10c33be318b4ac45b4aa2ff803d4e2905205968fc/pytangle-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e2e379a11c3de27c9823471e4477dc72235f06bbad6c358a3b7786b18d02d98b",
          "md5": "b3dd1df51b6c1971ba61c41539a57fe8",
          "sha256": "355bfa1d2f0c27d1bbd6c466375f31b39b6eaf2fdf889fc28c719d1284077192"
        },
        "downloads": -1,
        "filename": "pytangle-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b3dd1df51b6c1971ba61c41539a57fe8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 13896,
        "upload_time": "2020-09-28T16:07:39",
        "upload_time_iso_8601": "2020-09-28T16:07:39.473135Z",
        "url": "https://files.pythonhosted.org/packages/e2/e3/79a11c3de27c9823471e4477dc72235f06bbad6c358a3b7786b18d02d98b/pytangle-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fb7737e897b367d6a9f4eb5da1f9cc5a59eb3ee78f9220bb71c9e3ba751ffb34",
          "md5": "f239c2f577dce85c05bec60b9b19edf9",
          "sha256": "4de64dc82987266e6af894b38c60677acb7beb234926125b5a4afc5b11444bce"
        },
        "downloads": -1,
        "filename": "pytangle-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f239c2f577dce85c05bec60b9b19edf9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 25434,
        "upload_time": "2020-10-09T16:01:32",
        "upload_time_iso_8601": "2020-10-09T16:01:32.787167Z",
        "url": "https://files.pythonhosted.org/packages/fb/77/37e897b367d6a9f4eb5da1f9cc5a59eb3ee78f9220bb71c9e3ba751ffb34/pytangle-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "64c725295d825ad4efc9dfec5bb547337c9843cd91d477f46cb915300472ef8b",
          "md5": "25ae2d9af7630e2e57b05b075958f21a",
          "sha256": "d2b3fe6f01949e6ac301357ccd7f95376f0099590ceee94696ea13214240c6cd"
        },
        "downloads": -1,
        "filename": "pytangle-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "25ae2d9af7630e2e57b05b075958f21a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 13973,
        "upload_time": "2020-10-09T16:01:34",
        "upload_time_iso_8601": "2020-10-09T16:01:34.137773Z",
        "url": "https://files.pythonhosted.org/packages/64/c7/25295d825ad4efc9dfec5bb547337c9843cd91d477f46cb915300472ef8b/pytangle-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fb7737e897b367d6a9f4eb5da1f9cc5a59eb3ee78f9220bb71c9e3ba751ffb34",
        "md5": "f239c2f577dce85c05bec60b9b19edf9",
        "sha256": "4de64dc82987266e6af894b38c60677acb7beb234926125b5a4afc5b11444bce"
      },
      "downloads": -1,
      "filename": "pytangle-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f239c2f577dce85c05bec60b9b19edf9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 25434,
      "upload_time": "2020-10-09T16:01:32",
      "upload_time_iso_8601": "2020-10-09T16:01:32.787167Z",
      "url": "https://files.pythonhosted.org/packages/fb/77/37e897b367d6a9f4eb5da1f9cc5a59eb3ee78f9220bb71c9e3ba751ffb34/pytangle-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "64c725295d825ad4efc9dfec5bb547337c9843cd91d477f46cb915300472ef8b",
        "md5": "25ae2d9af7630e2e57b05b075958f21a",
        "sha256": "d2b3fe6f01949e6ac301357ccd7f95376f0099590ceee94696ea13214240c6cd"
      },
      "downloads": -1,
      "filename": "pytangle-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "25ae2d9af7630e2e57b05b075958f21a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 13973,
      "upload_time": "2020-10-09T16:01:34",
      "upload_time_iso_8601": "2020-10-09T16:01:34.137773Z",
      "url": "https://files.pythonhosted.org/packages/64/c7/25295d825ad4efc9dfec5bb547337c9843cd91d477f46cb915300472ef8b/pytangle-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}