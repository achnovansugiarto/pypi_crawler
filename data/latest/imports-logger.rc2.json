{
  "info": {
    "author": "Jonathan Vanasco",
    "author_email": "jonathan@findmeon.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3"
    ],
    "description": "![Python package](https://github.com/jvanasco/imports_logger/workflows/Python%20package/badge.svg)\n\nImport Logger\n=============\n\nThis was a terrible, quickly slapped together, package designed as a quick debugging tool.\n\nOver the past few years, it has proved to be incredibly useful.\n\n## what this does\n\nThis package is used to override calls to `import`, wrapping every import with\na call to `psutil` which measures memory.  \n\nThe outputs are written to a versioned file as `csv` compatible text files --\none for \"successful\" imports, another for \"failures\"\".\n\nThe output files are written to an `__imports_logged` directory and stored under\nan incremental `__imports_logged/runs` subfolder.\n\nThis is rough and can be customized.  This should NEVER NEVER NEVER be used on\nproduction code.  This is a quick debugging tool.\n\n### DANGER DANGER DANGER\n\nDO NOT RUN THIS IN PRODUCTION\n\n### DANGER DANGER DANGER\n\nSERIOUSLY, DO NOT RUN THIS IN PRODUCTION\n\nWhy not?  This library saves the loaded information in a versioned format - so\nevery time you start/restart your applications, more disk space will be consumed.\n\n\n## so why would I use this?\n\nThere are two main use-cases:\n\n1. The outputs can be processed and analyzed (even imported to Excel!) to\n   determine where the biggest imports are, and what causes them.\n\n2. Knowing import errors is useful in two situations: refactoring your own code,\n   and finding what libraries are conditionally importing other 3rd party tools.\n\n## requirements\n\n* `psutil`\n\n## usage\n\ntry running the demo.py script\n\nit is just...\n\n\t# at the top of your script\n    import imports_logger\n    imports_logger.setup_logger()\n\n\t# your code here    \n\timport re\n\n\t# this should have created a folder named `__imports_logged/runs/001`\n\nthe text in runs 001 should look like\n\n\timport|re.None,demo.py,0,12664832,12664832",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jvanasco/imports_logger",
    "keywords": "import logging memory",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "imports-logger",
    "package_url": "https://pypi.org/project/imports-logger/",
    "platform": "",
    "project_url": "https://pypi.org/project/imports-logger/",
    "project_urls": {
      "Homepage": "https://github.com/jvanasco/imports_logger"
    },
    "release_url": "https://pypi.org/project/imports-logger/1.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Quick tool to log import statements",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9891240,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad35bccc2d2144595e3407e2a1e07850d5ee1a7f3f8cf226adc8f0470a7a4b3d",
          "md5": "cde9fde17bbcd3b77d74176b2cd1bcb7",
          "sha256": "d7047dfb18dd66e28b22e46a4f6ae6f7b75c2ccb74ca08bfc2abd7656df80c53"
        },
        "downloads": -1,
        "filename": "imports_logger-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "cde9fde17bbcd3b77d74176b2cd1bcb7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3951,
        "upload_time": "2020-10-20T20:33:11",
        "upload_time_iso_8601": "2020-10-20T20:33:11.218380Z",
        "url": "https://files.pythonhosted.org/packages/ad/35/bccc2d2144595e3407e2a1e07850d5ee1a7f3f8cf226adc8f0470a7a4b3d/imports_logger-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "670882df2a9f04bc1369da04ce9b3e6b0b7a176f12446837a0793be58e1c3ccc",
          "md5": "499617b1831d028adb746488277bb4ba",
          "sha256": "83bfc84ed88f8af844b54c21bdf79ff1dcf19945589b8d571ddc2d8895a338bc"
        },
        "downloads": -1,
        "filename": "imports_logger-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "499617b1831d028adb746488277bb4ba",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5390,
        "upload_time": "2021-03-26T15:18:27",
        "upload_time_iso_8601": "2021-03-26T15:18:27.449765Z",
        "url": "https://files.pythonhosted.org/packages/67/08/82df2a9f04bc1369da04ce9b3e6b0b7a176f12446837a0793be58e1c3ccc/imports_logger-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "670882df2a9f04bc1369da04ce9b3e6b0b7a176f12446837a0793be58e1c3ccc",
        "md5": "499617b1831d028adb746488277bb4ba",
        "sha256": "83bfc84ed88f8af844b54c21bdf79ff1dcf19945589b8d571ddc2d8895a338bc"
      },
      "downloads": -1,
      "filename": "imports_logger-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "499617b1831d028adb746488277bb4ba",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5390,
      "upload_time": "2021-03-26T15:18:27",
      "upload_time_iso_8601": "2021-03-26T15:18:27.449765Z",
      "url": "https://files.pythonhosted.org/packages/67/08/82df2a9f04bc1369da04ce9b3e6b0b7a176f12446837a0793be58e1c3ccc/imports_logger-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}