{
  "info": {
    "author": "Bonajo",
    "author_email": "m.bonajo@fontys.nl",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# CodeStripper\n\nNew version of the CodeStripper that was previously used, which can be found at [https://github.com/sebivenlo/codestripper](https://github.com/sebivenlo/codestripper).\n\nThe reason for the switch is to not be dependent on Ant as a build system and the possibility to easily add more tags.\n\n## Available tags\n\n| Command | Tag(s) | Description |\n|-----|-------------|------------|\n| Add | `cs:add:<text>` |  Add the *text* (without the tag in front) |\n| Ignore | `cs:ignore` | Ignore the entire file, only valid on the first line |\n| Remove line | `cs:remove` | Remove the line |\n| Remove range | `cs:remove:start`/`cs:remove:end` | Remove all text in between tags |\n| Replace | `cs:replace:<replacement>` | Replace the text in front by the *replacement*, keeps whitespace |\n| Uncomment | `cs:uncomment:start`/`cs:uncomment:end` | Uncomment all lines in between tags |\n\n### Legacy\n\nTo support the old CodeStripper, the legacy tag `Start Solution::replacewith::`/`End Solution::replacewith::` is still supported for now. This tag does both the `Remove` and `Replace` in one go.\n\n\n## Command Line Properties\n\nCodeStripper can be used as a Python Module and as a command line tool. The command line tool has the following interface.\n\n| Flag | Long form | Description | Default value | Required |\n|----------|------|-------------|---------------|----------|\n| `<positional>` | None | files to include for code stripping (glob) | None | True |\n| -e | --exclude | files to exclude for code stripping (glob) | None | False |\n| -c | --comment | comment symbol(s) for the given language | // | False |\n| -o | --output | the output directory to store the stripped files | out | False |\n| -r | --recursive | do NOT use recursive globs for include/exclude | True | False |\n| -v | --verbosity | increase output verbosity | None | False |\n| -d | --dry | execute a dry run | False | False |\n| -w | --working-directory | set the working directory for include/exclude | pwd | False |\n\n## Examples\n\nThis section contains examples for all supported tags.\n\n### Add\n\nInput:\n```java\npublic class Test {\n    //cs:add:private final String test = \"test\";\n}\n```\n\nOutput:\n```java\npublic class Test {\n    private final String test = \"test\";\n}\n```\n\n### Ignore\n\nInput:\n```java\n//cs:ignore\npublic class Test {\n    private final String test = \"test\";\n}\n```\n\nOutput: No output, file is ignored\n\n### Remove line\n\nInput:\n```java\npublic class Test {\n    private final String test = \"test\";//cs:remove\n}\n```\n\nOutput:\n```java\npublic class Test {\n}\n```\n\n### Remove range\n\nInput:\n```java\npublic class Test {\n    //cs:remove:start\n    private final String test = \"test\";\n    private final int count = 0;\n    //cs:remove:end\n    private final boolean keep = true;\n}\n```\n\nOutput:\n```java\npublic class Test {\n    private final boolean keep = true;\n}\n```\n\n### Replace\n\nInput:\n```java\npublic class Test {\n    private final boolean keep = false;//cs:replace://TODO: add fields\n}\n```\n\nOutput:\n```java\npublic class Test {\n    //TODO: add fields\n}\n```\n\n### Uncomment\n\nInput:\n```java\npublic class Test {\n    //cs:uncomment:start\n    //private final String example = \"example\";\n    //private final boolean isTestCode = true;\n    //cs:uncomment:end\n}\n```\n\nOutput:\n```java\npublic class Test {\n    private final String example = \"example\";\n    private final boolean isTestCode = true;\n}\n```\n\n## Adding a new tag\n\nIt is possible to add custom tags. There a two types of tags: `SingleTag` that works on one line only and `RangeTag` that works on a range of lines. Tags are defined as follows:\n\n```mermaid\nclassDiagram\n    Tag <|-- SingleTag\n    SingleTag <|-- RangeOpenTag\n    SingleTag <|-- RangeCloseTag\n    Tag <|-- RangeTag\n    \n    class Tag{\n        <<Abstract>>\n        +offset: int\n        +start: int\n        +end: int\n        +is_valid()*: bool\n        +execute()*: Optional[str]\n    }\n    class SingleTag{\n        +regex: str\n        +param_start: int\n        +param_end: int\n        +regex_start: int\n        +regex_end: int\n        +leading_characters: str\n        +parameter: str\n        +whitespace: str\n        +SingleTag(data: TagData)\n    }\n    class RangeOpenTag{\n        +RangeOpen(parent: Type, data: TagData)\n    }\n    class RangeCloseTag{\n        +RangeOpen(parent: Type, data: TagData)\n    }\n    class RangeTag{\n        +inset: int\n        +start: int\n        +end: int\n        +open_tag: RangeOpenTag\n        +close_tag: RangeCloseTag\n        +RangeTag(open_tag: RangeOpenTag, close_tag: RangeCloseTag)\n        +add_tags(tags: Iterable[Tag])\n    }\n```\nThe idea is that every tag has the following methods:\n\n- `is_valid`: whether the tag is valid\n- `execute`: handle the text for this tag\n\n`RangeTag` work in the following way:\n\n- `RangeOpenTag`: Specifies the open regex and handles the opening line. Defines the type of parent it belongs to (so that the tokenizer can match open and close tag)\n- `RangeCloseTag`: Specifies the close regex and handles the closing line. Defines the type of parent it belongs to (so that the tokenizer can match open and close tag)\n- `RangeTag`: Handles lines in between the open and close tag. Has access to both the open and close tag that were matched by the tokenizer.\n\nCreate a custom tag:\n\n1. Create a new file for your tag(s)\n2. Depending on if you create a `SingleTag` or `RangeTag`\n  - SingleTag:\n```python\nclass TestTag(SingleTag):\n    regex = r'<regex>' # Regex that should match the tag\n\n    def __init__(self, data: TagData) -> None:\n        super().__init__(data)\n\n    def execute(self, content: str) -> Optional[str]:\n        # Manipulate the line\n        # None means the line is removed\n    \n    def is_valid(self) -> bool:\n        # Return wether the tag is valid\n```\n\n  - RangeTag: Range needs a `RangeOpenTag`, `RangeCloseTag` and a `RangeTag`\n```python\nclass TestOpenTag(RangeOpenTag):\n    regex = r'<regex>' # Regex that should match the open tag\n\n    def __init__(self, data: TagData) -> None:\n        super().__init__(TestRangeTag, data)# Type of RangeTag is belong to\n\n    def execute(self, content: str) -> Optional[str]:\n        # Manipulate the line\n        # None means the line is removed\n    \n    def is_valid(self) -> bool:\n        # Return wether the tag is valid\n\nclass TestCloseTag(RangeCloseTag):\n    # Same as RangeOpenTag\n\nclass TestRangeTag(RangeTag):\n    regex = None # The matching is done based on open/close tag\n\n    def __init__(self, open_tag: RangeOpenTag, close_tag: RangeCloseTag):\n        super().__init__(open_tag, close_tag)\n\n    def execute(self, content: str) -> Union[str, None]:\n        # Manipulate lines between the tags\n```\n3. Add the new tag(s) to the `default_tags` in the `tokenizer`,\n\n```python\ndefault_tags: Set[Type[SingleTag]] = {\n    IgnoreFileTag,\n    RemoveOpenTag,\n    ...,\n    TestTag,\n    TestOpenTag\n}\n```\n> :warning: **Only the `SingleTag`(s) need to be added, not the `RangeTag`** ",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/FontysVenlo/codestripper",
    "keywords": "",
    "license": "MIT",
    "maintainer": "Bonajo",
    "maintainer_email": "m.bonajo@fontys.nl",
    "name": "codestripper",
    "package_url": "https://pypi.org/project/codestripper/",
    "platform": null,
    "project_url": "https://pypi.org/project/codestripper/",
    "project_urls": {
      "Homepage": "https://github.com/FontysVenlo/codestripper",
      "Repository": "https://github.com/FontysVenlo/codestripper"
    },
    "release_url": "https://pypi.org/project/codestripper/0.1.2/",
    "requires_dist": null,
    "requires_python": ">=3.8,<4.0",
    "summary": "CodeStripper used to strip code from assignments",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17318255,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6832838c602ec2b0d9a56314e21b302191a68da97e682602079887236d4ff20",
          "md5": "58d2e1e3bfe129f7063f16aa61b27fa2",
          "sha256": "82326983df6c6662dedc4c2aed7d1ef0efe09fc7d125067c5c7c06aed7b02ac5"
        },
        "downloads": -1,
        "filename": "codestripper-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "58d2e1e3bfe129f7063f16aa61b27fa2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 14967,
        "upload_time": "2023-02-17T10:58:42",
        "upload_time_iso_8601": "2023-02-17T10:58:42.325390Z",
        "url": "https://files.pythonhosted.org/packages/a6/83/2838c602ec2b0d9a56314e21b302191a68da97e682602079887236d4ff20/codestripper-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7802f10e63deacffc2f35c774546b050b7e5381a7432bfcb79f1422dfc53f338",
          "md5": "2910edafbcb8d4bca13c8dff0904089d",
          "sha256": "793d541f5aec24e79be2bbaa71676cd2d33d16d4293b5d25db817bbf3de5ee47"
        },
        "downloads": -1,
        "filename": "codestripper-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2910edafbcb8d4bca13c8dff0904089d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 12489,
        "upload_time": "2023-02-17T10:58:44",
        "upload_time_iso_8601": "2023-02-17T10:58:44.084223Z",
        "url": "https://files.pythonhosted.org/packages/78/02/f10e63deacffc2f35c774546b050b7e5381a7432bfcb79f1422dfc53f338/codestripper-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c723e14b564ba3759c4a531f616ece2860e403531a3ec8c318a202a2db9b6d8a",
          "md5": "53a6c63b39bf5eadcc632d21d993f4f4",
          "sha256": "9d07fda677eebfecee48740b63a9a0da58452d7945cf5217e3c4efba30d0d02c"
        },
        "downloads": -1,
        "filename": "codestripper-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "53a6c63b39bf5eadcc632d21d993f4f4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 15562,
        "upload_time": "2023-02-17T11:35:49",
        "upload_time_iso_8601": "2023-02-17T11:35:49.589120Z",
        "url": "https://files.pythonhosted.org/packages/c7/23/e14b564ba3759c4a531f616ece2860e403531a3ec8c318a202a2db9b6d8a/codestripper-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a38dba3ca129172398bf3692a7c3d7184fce0e060fe25d3751a057e0709fc310",
          "md5": "007a20a19958bfce0f2f086873cc4d87",
          "sha256": "c6ebcbc92622cac5d58602e10f9810690d011f57ce1ae7a9729696730af09ec8"
        },
        "downloads": -1,
        "filename": "codestripper-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "007a20a19958bfce0f2f086873cc4d87",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 12828,
        "upload_time": "2023-02-17T11:35:51",
        "upload_time_iso_8601": "2023-02-17T11:35:51.164943Z",
        "url": "https://files.pythonhosted.org/packages/a3/8d/ba3ca129172398bf3692a7c3d7184fce0e060fe25d3751a057e0709fc310/codestripper-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0dec1e86ec62f0c69c93f5a38d6c4e634ba41c0eebaa6e2695d3a95d6668234d",
          "md5": "14d827c21f77431431fc4df248efde34",
          "sha256": "9084eb18c4cf6fc7eaec2cef691e857238643f8d1101954a8c369447c02a1fff"
        },
        "downloads": -1,
        "filename": "codestripper-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "14d827c21f77431431fc4df248efde34",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 15624,
        "upload_time": "2023-03-16T12:13:08",
        "upload_time_iso_8601": "2023-03-16T12:13:08.809948Z",
        "url": "https://files.pythonhosted.org/packages/0d/ec/1e86ec62f0c69c93f5a38d6c4e634ba41c0eebaa6e2695d3a95d6668234d/codestripper-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18adbd4ca0551683f70bfc4b4df1e5e0fbc7c9799b0c0038fa4e9f263cf4f6e1",
          "md5": "03246dd5dc78e5257ba226fafd7ec805",
          "sha256": "1d6fc7d8313717d1f34f4d35f48d79584a92b49a2aebc0e9efb61aeb57fd7380"
        },
        "downloads": -1,
        "filename": "codestripper-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "03246dd5dc78e5257ba226fafd7ec805",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 11928,
        "upload_time": "2023-03-16T12:13:10",
        "upload_time_iso_8601": "2023-03-16T12:13:10.562865Z",
        "url": "https://files.pythonhosted.org/packages/18/ad/bd4ca0551683f70bfc4b4df1e5e0fbc7c9799b0c0038fa4e9f263cf4f6e1/codestripper-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0dec1e86ec62f0c69c93f5a38d6c4e634ba41c0eebaa6e2695d3a95d6668234d",
        "md5": "14d827c21f77431431fc4df248efde34",
        "sha256": "9084eb18c4cf6fc7eaec2cef691e857238643f8d1101954a8c369447c02a1fff"
      },
      "downloads": -1,
      "filename": "codestripper-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "14d827c21f77431431fc4df248efde34",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<4.0",
      "size": 15624,
      "upload_time": "2023-03-16T12:13:08",
      "upload_time_iso_8601": "2023-03-16T12:13:08.809948Z",
      "url": "https://files.pythonhosted.org/packages/0d/ec/1e86ec62f0c69c93f5a38d6c4e634ba41c0eebaa6e2695d3a95d6668234d/codestripper-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "18adbd4ca0551683f70bfc4b4df1e5e0fbc7c9799b0c0038fa4e9f263cf4f6e1",
        "md5": "03246dd5dc78e5257ba226fafd7ec805",
        "sha256": "1d6fc7d8313717d1f34f4d35f48d79584a92b49a2aebc0e9efb61aeb57fd7380"
      },
      "downloads": -1,
      "filename": "codestripper-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "03246dd5dc78e5257ba226fafd7ec805",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<4.0",
      "size": 11928,
      "upload_time": "2023-03-16T12:13:10",
      "upload_time_iso_8601": "2023-03-16T12:13:10.562865Z",
      "url": "https://files.pythonhosted.org/packages/18/ad/bd4ca0551683f70bfc4b4df1e5e0fbc7c9799b0c0038fa4e9f263cf4f6e1/codestripper-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}