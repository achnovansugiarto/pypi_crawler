{
  "info": {
    "author": "Cnyllou",
    "author_email": "cnyllou@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "> Just a quick side project\n\n---------------\n\n## inter-morse.py\n\nThis script has 2 feature, one is a decoder, the other one is an unnecessary one, noise reduction feature, that uses `sox` *nix utility.\n\n### Usage\n\n```bash\nusage: python -m inter_morse [-h] [-l LEVEL] {clean,decode} ... file\n\npositional arguments:\n  {clean,decode}        Commands for the decoder\n    clean               Clean up the audio\n    decode              Decode morse code\n  file                  Input file name\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -l LEVEL, --level LEVEL\n                        Verbosity level\n```\n\n### Morse Audio Decoder\n\nThis feature takes in a `.wav` file and does the following.\n\n1. With `pydub` transforms it into an audio segment\n2. Coverts all the values that are above the `max - (max * max_threshhold)` to 1 and others to 0\n3. Iterated through all the binary values, when the value switches to a different one:\n- Length is calculated in milliseconds and then based on the length, the morse code symbol is determined.\n\n```python\nDIH = 100  # On default and the same length for symbol space\nDAH = DIH * 3  # The same length is assigned for letter spacing space\nSPACE = DIH * 7  # The space between words\n```\n\n4. Reads the `codes.csv` file and assigns it to a dictionary.\n5. Finally the characters separated by the Character space are compared against the dictionary and translated\n- Unknown characters are assigned `?`\n- Word spaces are translated to a space and letter space is assigned to an empty string\n\n### Options\n\n`-d | --dih` - The length of DIH symbol in ms (will implement a detection for this) \\\n\n- 100ms is good enough for 15 WPM (tested for PARIS)\n- 50-60ms - 20 WPM\n- 25ms can do 50 WPM\n\n`-l | --level` - The verbosity of the output, haven't done much thinking with this, but 0 is for all output.\n\n### Audio De-noiser\n\nI thought I needed this feature, but will maybe improve it later, haven't tested it much, but all it does is\n\n1. Takes a `.wav` file\n2. Finds all 'silence' segments what are passed a given threshold ('-33 dBFS' on default)\n2. Runs `sox` on every segment to create a noise profile\n3. Passes the input file through all of the generated profiles\n4. Exports a cleaned version of the audio file in `export` directory\n\n## To Do\n\n- [\t] Improve the code for better detection\n- [\t] Add an encoder from text to sound\n- [\t] Add comparison option for testing\n- [ ] Add Dynamic WPM detection (so you don't have to change `-d` manually)\n\n\n## Resources\n\n- [Good online decoder](https://morsecode.world/international/decoder/audio-decoder-adaptive.html) also explains how it works.\n- [Morse code generator](https://morsecode.world/international/translator.html) that I used for generating some samples.\n- [In depth about Morse code](https://en.wikipedia.org/wiki/Morse_code#:~:text=For%20instance%2C%20%22Q%22%20in,%22Did%20she%20like%20it.%22)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/cnyllou/inter-morse",
    "keywords": "",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "inter-morse",
    "package_url": "https://pypi.org/project/inter-morse/",
    "platform": "",
    "project_url": "https://pypi.org/project/inter-morse/",
    "project_urls": {
      "Homepage": "https://github.com/cnyllou/inter-morse",
      "Source": "https://github.com/cnyllou/inter-morse/",
      "Tracker": "https://github.com/cnyllou/inter-morse/issues"
    },
    "release_url": "https://pypi.org/project/inter-morse/1.0.2/",
    "requires_dist": [
      "pydub",
      "matplotlib"
    ],
    "requires_python": "",
    "summary": "Interpret wav audio files to Morse code and translate it.",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10323013,
  "releases": {
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9fe2e81f8d98eed7f143edb95d3df75a434509a74a5966cdb38ebf0a6d62a6d8",
          "md5": "12d52ff0b568a4562f00345408e032ad",
          "sha256": "0be523492a7f7aab15471854fe7f2419f784f9ed79100b4c5699218e7a8d363c"
        },
        "downloads": -1,
        "filename": "inter_morse-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "12d52ff0b568a4562f00345408e032ad",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18922,
        "upload_time": "2021-05-10T17:52:48",
        "upload_time_iso_8601": "2021-05-10T17:52:48.726786Z",
        "url": "https://files.pythonhosted.org/packages/9f/e2/e81f8d98eed7f143edb95d3df75a434509a74a5966cdb38ebf0a6d62a6d8/inter_morse-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9b30d35e7ba9db12a06de65a99e0e5179e9606fb3719cc814eded6397a35e78c",
          "md5": "35b65be64687c51b7c741809cfdcdac0",
          "sha256": "25fb23653e107c9c3efff5efadc550f2bc29bef68eb63a95b0bb638359e312d3"
        },
        "downloads": -1,
        "filename": "inter-morse-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "35b65be64687c51b7c741809cfdcdac0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18643,
        "upload_time": "2021-05-10T17:52:51",
        "upload_time_iso_8601": "2021-05-10T17:52:51.472479Z",
        "url": "https://files.pythonhosted.org/packages/9b/30/d35e7ba9db12a06de65a99e0e5179e9606fb3719cc814eded6397a35e78c/inter-morse-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9fe2e81f8d98eed7f143edb95d3df75a434509a74a5966cdb38ebf0a6d62a6d8",
        "md5": "12d52ff0b568a4562f00345408e032ad",
        "sha256": "0be523492a7f7aab15471854fe7f2419f784f9ed79100b4c5699218e7a8d363c"
      },
      "downloads": -1,
      "filename": "inter_morse-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "12d52ff0b568a4562f00345408e032ad",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 18922,
      "upload_time": "2021-05-10T17:52:48",
      "upload_time_iso_8601": "2021-05-10T17:52:48.726786Z",
      "url": "https://files.pythonhosted.org/packages/9f/e2/e81f8d98eed7f143edb95d3df75a434509a74a5966cdb38ebf0a6d62a6d8/inter_morse-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9b30d35e7ba9db12a06de65a99e0e5179e9606fb3719cc814eded6397a35e78c",
        "md5": "35b65be64687c51b7c741809cfdcdac0",
        "sha256": "25fb23653e107c9c3efff5efadc550f2bc29bef68eb63a95b0bb638359e312d3"
      },
      "downloads": -1,
      "filename": "inter-morse-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "35b65be64687c51b7c741809cfdcdac0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 18643,
      "upload_time": "2021-05-10T17:52:51",
      "upload_time_iso_8601": "2021-05-10T17:52:51.472479Z",
      "url": "https://files.pythonhosted.org/packages/9b/30/d35e7ba9db12a06de65a99e0e5179e9606fb3719cc814eded6397a35e78c/inter-morse-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}