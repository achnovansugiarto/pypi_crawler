{
  "info": {
    "author": "Calvin Wang",
    "author_email": "calviwan@amazon.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# PyDeequ\n\nPyDeequ is a Python API for [Deequ](https://github.com/awslabs/deequ), a library built on top of Apache Spark for defining \"unit tests for data\", which measure data quality in large datasets. PyDeequ is written to support usage of Deequ in Python.\n\n[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0) ![Coverage](https://img.shields.io/badge/coverage-90%25-green)\n\nThere are 4 main components of Deequ, and they are:\n- Metrics Computation:\n    - `Profiles` leverages Analyzers to analyze each column of a dataset.\n    - `Analyzers` serve here as a foundational module that computes metrics for data profiling and validation at scale.\n- Constraint Suggestion:\n    - Specify rules for various groups of Analyzers to be run over a dataset to return back a collection of constraints suggested to run in a Verification Suite.\n- Constraint Verification:\n    - Perform data validation on a dataset with respect to various constraints set by you.   \n- Metrics Repository\n    - Allows for persistence and tracking of Deequ runs over time.\n\n![](imgs/pydeequ_architecture.jpg)\n\n## ðŸŽ‰ Announcements ðŸŽ‰\n- With PyDeequ v0.1.8+, we now officially support Spark3 ! Just make sure you have an environment variable `SPARK_VERSION` to specify your Spark version! \n- We've release a blogpost on integrating PyDeequ onto AWS leveraging services such as AWS Glue, Athena, and SageMaker! Check it out: [Monitor data quality in your data lake using PyDeequ and AWS Glue](https://aws.amazon.com/blogs/big-data/monitor-data-quality-in-your-data-lake-using-pydeequ-and-aws-glue/).\n- Check out the [PyDeequ Release Announcement Blogpost](https://aws.amazon.com/blogs/big-data/testing-data-quality-at-scale-with-pydeequ/) with a tutorial walkthrough the Amazon Reviews dataset!\n- Join the PyDeequ community on [PyDeequ Slack](https://join.slack.com/t/pydeequ/shared_invite/zt-te6bntpu-yaqPy7bhiN8Lu0NxpZs47Q) to chat with the devs!\n\n## Quickstart\n\nThe following will quickstart you with some basic usage. For more in-depth examples, take a look in the [`tutorials/`](tutorials/) directory for executable Jupyter notebooks of each module. For documentation on supported interfaces, view the [`documentation`](https://pydeequ.readthedocs.io/).\n\n### Installation\n\nYou can install [PyDeequ via pip](https://pypi.org/project/pydeequ/).\n\n```\npip install pydeequ\n```\n\n### Set up a PySpark session\n```python\nfrom pyspark.sql import SparkSession, Row\nimport pydeequ\n\nspark = (SparkSession\n    .builder\n    .config(\"spark.jars.packages\", pydeequ.deequ_maven_coord)\n    .config(\"spark.jars.excludes\", pydeequ.f2j_maven_coord)\n    .getOrCreate())\n\ndf = spark.sparkContext.parallelize([\n            Row(a=\"foo\", b=1, c=5),\n            Row(a=\"bar\", b=2, c=6),\n            Row(a=\"baz\", b=3, c=None)]).toDF()\n```\n\n### Analyzers\n\n```python\nfrom pydeequ.analyzers import *\n\nanalysisResult = AnalysisRunner(spark) \\\n                    .onData(df) \\\n                    .addAnalyzer(Size()) \\\n                    .addAnalyzer(Completeness(\"b\")) \\\n                    .run()\n\nanalysisResult_df = AnalyzerContext.successMetricsAsDataFrame(spark, analysisResult)\nanalysisResult_df.show()\n```\n\n### Profile\n\n```python\nfrom pydeequ.profiles import *\n\nresult = ColumnProfilerRunner(spark) \\\n    .onData(df) \\\n    .run()\n\nfor col, profile in result.profiles.items():\n    print(profile)\n```\n\n### Constraint Suggestions\n\n```python\nfrom pydeequ.suggestions import *\n\nsuggestionResult = ConstraintSuggestionRunner(spark) \\\n             .onData(df) \\\n             .addConstraintRule(DEFAULT()) \\\n             .run()\n\n# Constraint Suggestions in JSON format\nprint(suggestionResult)\n```\n\n### Constraint Verification\n\n```python\nfrom pydeequ.checks import *\nfrom pydeequ.verification import *\n\ncheck = Check(spark, CheckLevel.Warning, \"Review Check\")\n\ncheckResult = VerificationSuite(spark) \\\n    .onData(df) \\\n    .addCheck(\n        check.hasSize(lambda x: x >= 3) \\\n        .hasMin(\"b\", lambda x: x == 0) \\\n        .isComplete(\"c\")  \\\n        .isUnique(\"a\")  \\\n        .isContainedIn(\"a\", [\"foo\", \"bar\", \"baz\"]) \\\n        .isNonNegative(\"b\")) \\\n    .run()\n\ncheckResult_df = VerificationResult.checkResultsAsDataFrame(spark, checkResult)\ncheckResult_df.show()\n```\n\n### Repository\n\nSave to a Metrics Repository by adding the `useRepository()` and `saveOrAppendResult()` calls to your Analysis Runner.\n```python\nfrom pydeequ.repository import *\nfrom pydeequ.analyzers import *\n\nmetrics_file = FileSystemMetricsRepository.helper_metrics_file(spark, 'metrics.json')\nrepository = FileSystemMetricsRepository(spark, metrics_file)\nkey_tags = {'tag': 'pydeequ hello world'}\nresultKey = ResultKey(spark, ResultKey.current_milli_time(), key_tags)\n\nanalysisResult = AnalysisRunner(spark) \\\n    .onData(df) \\\n    .addAnalyzer(ApproxCountDistinct('b')) \\\n    .useRepository(repository) \\\n    .saveOrAppendResult(resultKey) \\\n    .run()\n```\n\nTo load previous runs, use the `repository` object to load previous results back in.\n\n```python\nresult_metrep_df = repository.load() \\\n    .before(ResultKey.current_milli_time()) \\\n    .forAnalyzers([ApproxCountDistinct('b')]) \\\n    .getSuccessMetricsAsDataFrame()\n```\n\n### Wrapping up\n\nAfter you've ran your jobs with PyDeequ, be sure to shut down your Spark session to prevent any hanging processes. \n\n```python\nspark.sparkContext._gateway.shutdown_callback_server()\nspark.stop()\n```\n\n## [Contributing](https://github.com/awslabs/python-deequ/blob/master/CONTRIBUTING.md)\nPlease refer to the [contributing doc](https://github.com/awslabs/python-deequ/blob/master/CONTRIBUTING.md) for how to contribute to PyDeequ.\n\n## [License](https://github.com/awslabs/python-deequ/blob/master/LICENSE)\n\nThis library is licensed under the Apache 2.0 License.\n\n******\n\n## Contributing Developer Setup\n\n1. Setup [SDKMAN](#setup-sdkman)\n1. Setup [Java](#setup-java)\n1. Setup [Apache Spark](#setup-apache-spark)\n1. Install [Poetry](#poetry)\n1. Run [tests locally](#running-tests-locally)\n\n### Setup SDKMAN\n\nSDKMAN is a tool for managing parallel Versions of multiple Software Development Kits on any Unix based\nsystem. It provides a convenient command line interface for installing, switching, removing and listing\nCandidates. SDKMAN! installs smoothly on Mac OSX, Linux, WSL, Cygwin, etc... Support Bash and ZSH shells. See\ndocumentation on the [SDKMAN! website](https://sdkman.io).\n\nOpen your favourite terminal and enter the following:\n\n```bash\n$ curl -s https://get.sdkman.io | bash\nIf the environment needs tweaking for SDKMAN to be installed,\nthe installer will prompt you accordingly and ask you to restart.\n\nNext, open a new terminal or enter:\n\n$ source \"$HOME/.sdkman/bin/sdkman-init.sh\"\n\nLastly, run the following code snippet to ensure that installation succeeded:\n\n$ sdk version\n```\n\n### Setup Java\n\nInstall Java Now open favourite terminal and enter the following:\n\n```bash\nList the AdoptOpenJDK OpenJDK versions\n$ sdk list java\n\nTo install For Java 11\n$ sdk install java 11.0.10.hs-adpt\n\nTo install For Java 11\n$ sdk install java 8.0.292.hs-adpt\n```\n\n### Setup Apache Spark\n\nInstall Java Now open favourite terminal and enter the following:\n\n```bash\nList the Apache Spark versions:\n$ sdk list spark\n\nTo install For Spark 3\n$ sdk install spark 3.0.2\n```\n\n### Poetry\n\nPoetry [Commands](https://python-poetry.org/docs/cli/#search)\n\n```bash\npoetry install\n\npoetry update\n\n# --tree: List the dependencies as a tree.\n# --latest (-l): Show the latest version.\n# --outdated (-o): Show the latest version but only for packages that are outdated.\npoetry show -o\n```\n\n## Running Tests Locally\n\nTake a look at tests in `tests/dataquality` and `tests/jobs`\n\n```bash\n$ poetry run pytest\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "deequ,pydeequ,data-engineering,data-quality,data-profiling,dataquality,dataunittest,data-unit-tests,data-profilers",
    "license": "Apache-2.0",
    "maintainer": "Calvin Wang",
    "maintainer_email": "calviwan@amazon.com",
    "name": "pydeequalb",
    "package_url": "https://pypi.org/project/pydeequalb/",
    "platform": null,
    "project_url": "https://pypi.org/project/pydeequalb/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/pydeequalb/0.0.4/",
    "requires_dist": [
      "numpy (>=1.22)",
      "pandas (>=0.23.0)",
      "pyspark (>=2.4.7,<3.3.0); extra == \"pyspark\""
    ],
    "requires_python": ">=3.8,<4",
    "summary": "PyDeequ - Unit Tests for Data",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15559673,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4f06ae206edacb580a253cfde2946c7856ab5667f361738c7e491351957e5501",
          "md5": "f0095798d6b517cef79ba9cdc2ac8e91",
          "sha256": "7df1436550ea1e2e74ea93e96d3d86662104ff3a681eea6e0eecc1fe2f2402a8"
        },
        "downloads": -1,
        "filename": "pydeequalb-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f0095798d6b517cef79ba9cdc2ac8e91",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4",
        "size": 36921,
        "upload_time": "2022-10-27T22:44:46",
        "upload_time_iso_8601": "2022-10-27T22:44:46.271154Z",
        "url": "https://files.pythonhosted.org/packages/4f/06/ae206edacb580a253cfde2946c7856ab5667f361738c7e491351957e5501/pydeequalb-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0452e722dd98bb879f352ee7dd7add5b9b1b8bf7be1093d4e18e8df93790cbf5",
          "md5": "b3f05fae88b6b6e489a3e534c3df9213",
          "sha256": "7b5b0bb4cf03f30a2d5b47491cad342192345c6b059da5877d14e0258e51221a"
        },
        "downloads": -1,
        "filename": "pydeequalb-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b3f05fae88b6b6e489a3e534c3df9213",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4",
        "size": 36222,
        "upload_time": "2022-10-27T22:44:47",
        "upload_time_iso_8601": "2022-10-27T22:44:47.795244Z",
        "url": "https://files.pythonhosted.org/packages/04/52/e722dd98bb879f352ee7dd7add5b9b1b8bf7be1093d4e18e8df93790cbf5/pydeequalb-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "31a9b49c576b5c9935a1b63ecf436c401f80a82ca5c42d88657e80bad272cbb3",
          "md5": "917e0e0a2e704f49d451f4632e2a501d",
          "sha256": "28a9d7e544df949e10b6bf525d660e0eea87af7149e62281eba0c775a6ebb296"
        },
        "downloads": -1,
        "filename": "pydeequalb-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "917e0e0a2e704f49d451f4632e2a501d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4",
        "size": 36919,
        "upload_time": "2022-10-27T22:58:05",
        "upload_time_iso_8601": "2022-10-27T22:58:05.411625Z",
        "url": "https://files.pythonhosted.org/packages/31/a9/b49c576b5c9935a1b63ecf436c401f80a82ca5c42d88657e80bad272cbb3/pydeequalb-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "300a439a5c3f97e42c27b4c08af6b720986209abd19b4a282d4d309007bd6edf",
          "md5": "9105d86681d35dac3623e6329e5d2d3a",
          "sha256": "a8299404f7e80f0a242132a0c3a89f5059658c9045b9b4e75fcf1e6b1dbc9944"
        },
        "downloads": -1,
        "filename": "pydeequalb-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "9105d86681d35dac3623e6329e5d2d3a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4",
        "size": 36220,
        "upload_time": "2022-10-27T22:58:07",
        "upload_time_iso_8601": "2022-10-27T22:58:07.276776Z",
        "url": "https://files.pythonhosted.org/packages/30/0a/439a5c3f97e42c27b4c08af6b720986209abd19b4a282d4d309007bd6edf/pydeequalb-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6e589d96be98e373d184cdc9700c7d44dc22f3ce2cc781fe1bd20fe692400bbe",
          "md5": "d939c7d219974eea4e21b3d5093ad5b5",
          "sha256": "4ce1683bf25e4a20227aaa08d43e5f2ed6dc2f1083e7decb699f541ea37a802f"
        },
        "downloads": -1,
        "filename": "pydeequalb-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d939c7d219974eea4e21b3d5093ad5b5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4",
        "size": 36919,
        "upload_time": "2022-10-27T23:11:20",
        "upload_time_iso_8601": "2022-10-27T23:11:20.593026Z",
        "url": "https://files.pythonhosted.org/packages/6e/58/9d96be98e373d184cdc9700c7d44dc22f3ce2cc781fe1bd20fe692400bbe/pydeequalb-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9fa785a687598851c0e15d42f8f1d9003374c0c1f1a1ebb0c7cfcfaf66441b56",
          "md5": "e091b476ac8d33f8a6ceb65f8d6b9ba0",
          "sha256": "c57d9c29a18c0253e0e0ea1d7b66392194fb606d4c785af33e3abf483d074887"
        },
        "downloads": -1,
        "filename": "pydeequalb-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "e091b476ac8d33f8a6ceb65f8d6b9ba0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4",
        "size": 36225,
        "upload_time": "2022-10-27T23:11:23",
        "upload_time_iso_8601": "2022-10-27T23:11:23.123064Z",
        "url": "https://files.pythonhosted.org/packages/9f/a7/85a687598851c0e15d42f8f1d9003374c0c1f1a1ebb0c7cfcfaf66441b56/pydeequalb-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6e589d96be98e373d184cdc9700c7d44dc22f3ce2cc781fe1bd20fe692400bbe",
        "md5": "d939c7d219974eea4e21b3d5093ad5b5",
        "sha256": "4ce1683bf25e4a20227aaa08d43e5f2ed6dc2f1083e7decb699f541ea37a802f"
      },
      "downloads": -1,
      "filename": "pydeequalb-0.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d939c7d219974eea4e21b3d5093ad5b5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<4",
      "size": 36919,
      "upload_time": "2022-10-27T23:11:20",
      "upload_time_iso_8601": "2022-10-27T23:11:20.593026Z",
      "url": "https://files.pythonhosted.org/packages/6e/58/9d96be98e373d184cdc9700c7d44dc22f3ce2cc781fe1bd20fe692400bbe/pydeequalb-0.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9fa785a687598851c0e15d42f8f1d9003374c0c1f1a1ebb0c7cfcfaf66441b56",
        "md5": "e091b476ac8d33f8a6ceb65f8d6b9ba0",
        "sha256": "c57d9c29a18c0253e0e0ea1d7b66392194fb606d4c785af33e3abf483d074887"
      },
      "downloads": -1,
      "filename": "pydeequalb-0.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "e091b476ac8d33f8a6ceb65f8d6b9ba0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<4",
      "size": 36225,
      "upload_time": "2022-10-27T23:11:23",
      "upload_time_iso_8601": "2022-10-27T23:11:23.123064Z",
      "url": "https://files.pythonhosted.org/packages/9f/a7/85a687598851c0e15d42f8f1d9003374c0c1f1a1ebb0c7cfcfaf66441b56/pydeequalb-0.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}