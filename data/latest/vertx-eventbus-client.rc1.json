{
  "info": {
    "author": "vertx-dev",
    "author_email": "vertx-dev@googlegroups.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# TCP-eventbus-client-Python\n\nThis is a TCP eventbus implementation for python clients.\n\nexample:\n\n```python\nfrom vertx import EventBus\n\nebus = EventBus('localhost', 7000)\n\n# Define a handler to handle message\ndef handler(msg):\n    print(\"Got message from server: %s\" % msg)\n\n# Connects to target bridge, it will connect automatically\nebus.connect()\n\n# register a handler on address `test`\nebus.register_handler(\"test\", handler)\n\n# send a json message to address: `test`, the handler will be called\nebus.send(\"test\", body={'name': 'python'})\n\n# You can also send a message, and specify the reply_address\nebus.send(\"echo\", reply_address=\"test\", body={'desc': 'send to echo, reply to test'})\n\n# publish message\nebus.publish(\"publish-address\", body={'name': 'python'})\n\n# unregister the handler after everything is done\nebus.unregister_handler(\"test\")\n\n# close the EventBus to release resources, after closed, it cannot be used anymore\nebus.close()\n\n```\n\n### Options\n\nThe options supported when creating the EventBus are:\n* `timeout` - the socket timeout, in seconds, defaults to `60` seconds.\n* `connection_timeout` - connection timeout, in seconds, defaults to `600` seconds.\n* `retry_interval` - retry interval on connection, in seconds, defaults to `5` seconds.\n* `ping_interval` - heart beat for ping/pong, in seconds, defaults to `5` seconds.\n* `reply_timeout` - message reply timeout, in seconds, defaults to `60` seconds.\n* `auto_connect` - if client should connect to server automatically if it is not connected yet, or on failures, defaults to `True`.\n* `ssl_options` - the `ssl` related options, please refer to [SSL Options](#ssl-options) below.\n\n## TLS support\n\nThis client supports TLS connection, you need to either specify the `ssl_options` or a `ssl.SSLContext`:\n\n```python\nfrom vertx import EventBus\n\n# for no ClientAuth required, just specify the ca_file:\nebus = EventBus(options={\"ssl_options\": {\"ca_file\": \"/path/to/ca.crt\"}})\n\n# you can also specify the ca_path(directory of the certs) or ca_data:\nebus = EventBus(options={\"ssl_options\": {\"ca_path\": \"/path/to/certs/\"}})\nebus = EventBus(options={\"ssl_options\": {\"ca_data\": \"my_cert_data\"}})\n\n# for ClientAuth, specify cert_file and key_file:\nebus = EventBus(options={\"ssl_options\": {\"ca_file\": \"/path/to/ca.crt\", \"cert_file\": \"/path/to/client.crt\"},\n                         \"key_file\": \"/path/to/client.key\"})\n\n# You can also specify a SSLContext directly if you have one already:\nmy_content = create_ssl_context()\nebus = EventBus(host=\"localhost\", port=7000, ssl_context=my_context)\n\n```\n\n### SSL Options\n\nThe SSL options supported by this client are:\n* `ca_file` - The CA certificate file which is used to verity the server.\n* `ca_path` - The directory where the CA certificates are.\n* `ca_data` - The CA certificate data which is used to verify the server.\n* `ciphers` - The ciphers client wants to use on ssl handshake.\n* `check_hostname` - Should check hostname or not.\n  When any of `ca_*` is specified, it is `True` if it is not specified.\n* `verify_mode` - Verify mode when doing handshake.\n  When any of `ca_*` is specified, it is `ssl.CERT_REQUIRED` if it is not specified.\n* `cert_file` - The client certificate file in ClientAuth case.\n* `key_file` - The client key file in ClientAuth case.\n* `key_password` - The password of client key file in ClientAuth case.\n\n\n## Build and install locally\n\n```\n# build the package\n./build.sh --dist\n\n# With the tar file you can install it anywhere\npip install dist/vertx-eventbus-client*.tar.gz\n\n# Install from PyPI:\npip install vertx-eventbus-client\n```\n\n## Build and Deploy to PyPi:\n\n* Update the version in the `setup.py`:\n```shell\n# change this value to the desired version, like: 1.0.0\nversion=\"1.0.0.dev0\"\n```\n\n* Use the following command to build and publish to PyPi:\n```shell\n./build.sh --publish\n```\nthen you will be asked for username and password like:\n```shell\nPublish the package to Pypi.org\nUploading distributions to https://upload.pypi.org/legacy/\nEnter your username:\n```\n\n> NOTE: You need to have `twine` installed in your machine to be able to publish.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/vert-x3/vertx-eventbus-bridge-clients/tree/master/python",
    "keywords": "",
    "license": "Apache Software License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "vertx-eventbus-client",
    "package_url": "https://pypi.org/project/vertx-eventbus-client/",
    "platform": "",
    "project_url": "https://pypi.org/project/vertx-eventbus-client/",
    "project_urls": {
      "Homepage": "https://github.com/vert-x3/vertx-eventbus-bridge-clients/tree/master/python"
    },
    "release_url": "https://pypi.org/project/vertx-eventbus-client/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Vertx EventBus Client",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11948870,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5b8e3e4f40cb214aa8a2f1deb20e9bac2a86b51c6b009ad83cf0ac8a99d3cc48",
          "md5": "510c060462cfe4e9579f6c9595af5c4f",
          "sha256": "78914bff3589aaf1a9c6e6f8739ad8c9c1c58a9864c6637e2143525c3f80dedb"
        },
        "downloads": -1,
        "filename": "vertx-eventbus-client-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "510c060462cfe4e9579f6c9595af5c4f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8746,
        "upload_time": "2021-11-07T03:37:11",
        "upload_time_iso_8601": "2021-11-07T03:37:11.827494Z",
        "url": "https://files.pythonhosted.org/packages/5b/8e/3e4f40cb214aa8a2f1deb20e9bac2a86b51c6b009ad83cf0ac8a99d3cc48/vertx-eventbus-client-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5b8e3e4f40cb214aa8a2f1deb20e9bac2a86b51c6b009ad83cf0ac8a99d3cc48",
        "md5": "510c060462cfe4e9579f6c9595af5c4f",
        "sha256": "78914bff3589aaf1a9c6e6f8739ad8c9c1c58a9864c6637e2143525c3f80dedb"
      },
      "downloads": -1,
      "filename": "vertx-eventbus-client-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "510c060462cfe4e9579f6c9595af5c4f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8746,
      "upload_time": "2021-11-07T03:37:11",
      "upload_time_iso_8601": "2021-11-07T03:37:11.827494Z",
      "url": "https://files.pythonhosted.org/packages/5b/8e/3e4f40cb214aa8a2f1deb20e9bac2a86b51c6b009ad83cf0ac8a99d3cc48/vertx-eventbus-client-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}