{
  "info": {
    "author": "",
    "author_email": "ciusji <bqjimaster@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "<div align=\"right\">\n    <img src=\"https://raw.githubusercontent.com/ElixirNote/elixirnote/main/docs/assets/guinsoolab-badge.png\" width=60 alt=\"badge\">\n</div>\n<div align=\"center\">\n    <img src=\"https://raw.githubusercontent.com/ElixirNote/elixirnote/main/docs/assets/elixirnote2.svg\" width=120 alt=\"logo\" />\n    <br />\n    <small>go from data to knowledge</small>\n</div>\n\n# ElixirDx\n\n> A collaborative notebook platform that enables teams to use and visualize data, together.\n\n\n## Requirements\n\nPython 3.8+\n\n## Installation\n\n```shell\npip install dx\n```\n\nThen import the package:\n\n```python\nimport dx\n```\n\n## Usage\n\nThe `dx` library currently enables DEX media type visualization of pandas `DataFrame` and `Series` objects, as \nwell as numpy `ndarray` objects. This can be handled in two ways:\n- explicit `dx.display()` calls\n- setting the `display_mode` to update the IPython display formatter for a session\n\n### With `dx.display()`\n`dx.display()` will display a single dataset using the DEX media type. It currently supports:\n- pandas `DataFrame` objects\n  ```python\n  import pandas as pd\n  import random\n\n  df = pd.DataFrame({\n      'random_ints': [random.randint(0, 100) for _ in range(500)],\n      'random_floats': [random.random() for _ in range(500)],\n  })\n  dx.display(df)\n  ```\n\n- tabular data as `dict` or `list` types\n  ```python\n  dx.display([\n    [1, 5, 10, 20, 500],\n    [1, 2, 3, 4, 5],\n    [0, 0, 0, 0, 1]\n  ])\n  ```\n\n- `.csv` or `.json` filepaths \n  ```python\n  df = dx.random_dataframe()\n  df.to_csv(\"dx_docs_sample.csv\", index=False)\n\n  dx.display(\"dx_docs_sample.csv\")\n  ```\n\n### With `dx.set_display_mode()`\nUsing either `\"simple\"` or `\"enhanced\"` display modes will allow `dx` will update the current `IPython` display formatters to allow DEX media type visualization of pandas `DataFrame` objects for an entire notebook / kernel session instead of the default `DataFrame` display output.\n\n<details>\n<summary>Details</summary>\n\nThis will adjust pandas options to:\n- increasing the number of rows displayed to `50000` from pandas default of `60`\n- increasing the number of columns displayed to `50` from pandas default of `20`\n- enabling `html.table_schema` (`False` by default in pandas)\n\nThis will also handle some basic column cleaning and generate a schema for the `DataFrame` using `pandas.io.json.build_table_schema`. Depending on the display mode, the data will be transformed into either a list of dictionaries or list of lists of columnar values.\n- `\"simple\"` - list of dictionaries\n- `\"enhanced\"` - list of lists\n</details>\n\n> **NOTE:**\n> Unlike `dx.display()`, this **only** affects pandas DataFrames (or any types set in `settings.RENDERABLE_OBJECTS`); it does not affect the display of `.csv`/`.json` file data, or `dict`/`list` outputs\n\n\n- `dx.set_display_mode(\"simple\")`\n  \n  ```python\n  import dx\n  import numpy as np\n  import pandas as pd\n\n  # enable DEX display outputs from now on\n  dx.set_display_mode(\"simple\")\n\n  df = pd.read_csv(\"dx_docs_sample.csv\")\n  df\n  ```\n  ```python\n  df2 = pd.DataFrame(\n      [\n          [1, 5, 10, 20, 500],\n          [1, 2, 3, np.nan, 5],\n          [0, 0, 0, np.nan, 1]\n      ],\n      columns=['a', 'b', 'c', 'd', 'e']\n  )\n  df2\n  ```\n\nIf, at any point, you want to go back to the default display formatting (vanilla pandas output), use the `\"plain\"` display mode. This will revert the IPython display format update to its original state and put the pandas options back to their default values.\n\n- `dx.set_display_mode(\"plain\")`\n  ```python\n  # revert to original pandas display outputs from now on\n  dx.set_display_mode(\"plain\")\n\n  df = pd.read_csv(\"dx_docs_sample.csv\")\n  df\n  ```\n  ```python\n  df2 = pd.DataFrame(\n      [\n          [1, 5, 10, 20, 500],\n          [1, 2, 3, np.nan, 5],\n          [0, 0, 0, np.nan, 1]\n      ],\n      columns=['a', 'b', 'c', 'd', 'e']\n  )\n  df2\n  ```\n\n### Generating Sample Data\nDocumentation coming soon!\n\n## Contributing\n\nSee [CONTRIBUTING.md](https://github.com/ElixirNote/elixirdx/blob/main/CONTRIBUTING.md).\n\n## Code of Conduct\n\nWe follow the ElixirNote [code of conduct](https://github.com/ElixirNote/elixirdx/blob/main/CODE_OF_CONDUCT.md).\n\n## LICENSE\n\nSee [LICENSE.md](https://github.com/ElixirNote/elixirdx/blob/main/LICENSE.md).\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "data,exploration,visualization",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "elixir-dx",
    "package_url": "https://pypi.org/project/elixir-dx/",
    "platform": null,
    "project_url": "https://pypi.org/project/elixir-dx/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/elixir-dx/1.0.0/",
    "requires_dist": [
      "pandas (>=1.3.5)",
      "ipython (>=7.31.1)",
      "pydantic (>=1.9)",
      "structlog (>=22.1.0)",
      "duckdb (>=0.6.1)"
    ],
    "requires_python": "",
    "summary": "Python wrapper for Data Explorer",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16589714,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "665edcb8783855dc1e738464fa133f181bda8fa0e19b8fab03e8f622211c71cf",
          "md5": "86e6e9984949739e064890dd336466d7",
          "sha256": "67f314c417d0f974381ab10a33bbf035392c3fb5561dc39ca2ccf7073f2f1df6"
        },
        "downloads": -1,
        "filename": "elixir_dx-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "86e6e9984949739e064890dd336466d7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 64596,
        "upload_time": "2023-01-27T12:54:15",
        "upload_time_iso_8601": "2023-01-27T12:54:15.877194Z",
        "url": "https://files.pythonhosted.org/packages/66/5e/dcb8783855dc1e738464fa133f181bda8fa0e19b8fab03e8f622211c71cf/elixir_dx-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3c804696908e42c6d4dd35cf9fbbaabc83dd5ae39977485d369849cd2b088dff",
          "md5": "5cd9fddecee8ae076e294566823b5974",
          "sha256": "b813cddd496df57cced9458df4692c1dc725d2b8f193b377e4d2482bc73ee934"
        },
        "downloads": -1,
        "filename": "elixir-dx-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5cd9fddecee8ae076e294566823b5974",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 49518,
        "upload_time": "2023-01-27T12:54:18",
        "upload_time_iso_8601": "2023-01-27T12:54:18.577314Z",
        "url": "https://files.pythonhosted.org/packages/3c/80/4696908e42c6d4dd35cf9fbbaabc83dd5ae39977485d369849cd2b088dff/elixir-dx-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "665edcb8783855dc1e738464fa133f181bda8fa0e19b8fab03e8f622211c71cf",
        "md5": "86e6e9984949739e064890dd336466d7",
        "sha256": "67f314c417d0f974381ab10a33bbf035392c3fb5561dc39ca2ccf7073f2f1df6"
      },
      "downloads": -1,
      "filename": "elixir_dx-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "86e6e9984949739e064890dd336466d7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 64596,
      "upload_time": "2023-01-27T12:54:15",
      "upload_time_iso_8601": "2023-01-27T12:54:15.877194Z",
      "url": "https://files.pythonhosted.org/packages/66/5e/dcb8783855dc1e738464fa133f181bda8fa0e19b8fab03e8f622211c71cf/elixir_dx-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3c804696908e42c6d4dd35cf9fbbaabc83dd5ae39977485d369849cd2b088dff",
        "md5": "5cd9fddecee8ae076e294566823b5974",
        "sha256": "b813cddd496df57cced9458df4692c1dc725d2b8f193b377e4d2482bc73ee934"
      },
      "downloads": -1,
      "filename": "elixir-dx-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "5cd9fddecee8ae076e294566823b5974",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 49518,
      "upload_time": "2023-01-27T12:54:18",
      "upload_time_iso_8601": "2023-01-27T12:54:18.577314Z",
      "url": "https://files.pythonhosted.org/packages/3c/80/4696908e42c6d4dd35cf9fbbaabc83dd5ae39977485d369849cd2b088dff/elixir-dx-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}