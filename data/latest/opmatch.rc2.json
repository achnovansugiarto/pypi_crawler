{
  "info": {
    "author": "Kiril Klein",
    "author_email": "kikl@di.ku.dk",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Bio-Informatics"
    ],
    "description": "The package provides the following matching methods:\r\n* **optimal match**\r\n    + one-to-one match\r\n    + one-to-many match\r\n    + variable ratio match\r\n    + full match (not implemented yet)\r\n* **greedy match**\r\n    + not implemented yet\r\n\r\nAll matching methods support covariate and propensity score matching.\r\n\r\nTo obtain matches you can simply run:\r\n\r\n```python\r\nfrom opmatch.matcher import Matcher\r\ncase_control_dict = Matcher(\r\n        df, matching_ratio, \r\n        min_mr, max_mr, n_controls, \r\n        metric, matching_type,\r\n        case_col, var_cols,  ps_col,\r\n        ).match()\r\n```\r\n>#### Parameters\r\n\r\n* **matching_ratio** number of controls per case if matching ratio is constant\r\n\r\n* **min_mr**: minimum number of controls per case\r\n* **max_mr**: maximum number of controls per case\r\n* **n_controls**: number of controls to match\r\n* **metric**: PS or one of the metrics accepted by scipy.spatial.distances.cdist\r\n* **matching_type**: constant or variable matching ratio\r\n* **case_col**: boolean column where cases are 1s and controls 0s\r\n* **var_cols**: columns containing relevatn patient variables\r\n        if metric!=PS: var_cols used for matching\r\n        if metric==PS but ps_col is not specified: var_cols used to compute PS using logistic regression\r\n* **ps_col**: column containing the propensity score\r\n* **case_col**: column name of case column, should contain 1s and 0s\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/kirilklein/opmatch",
    "keywords": "matching,statistics,epidemiology,causal inference,propensity score,optimal matching,case-control matching,matching algorithms,matching methods,pharmacoepidemiology",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "opmatch",
    "package_url": "https://pypi.org/project/opmatch/",
    "platform": null,
    "project_url": "https://pypi.org/project/opmatch/",
    "project_urls": {
      "Homepage": "https://github.com/kirilklein/opmatch"
    },
    "release_url": "https://pypi.org/project/opmatch/1.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.7, <4",
    "summary": "A leightweight package to perform optimal case-control matching.",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15979990,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "100cef43c04827848222a4259670930cc56e67401361b7262efbd3e23622e059",
          "md5": "3b5a95ebcf52a987edbe7ff77c13a2a6",
          "sha256": "e3acdaf78362489c30f71f9bebe0589ef42d3e96c3ab987dcee1560f1a35498e"
        },
        "downloads": -1,
        "filename": "opmatch-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3b5a95ebcf52a987edbe7ff77c13a2a6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 7545,
        "upload_time": "2022-12-03T17:04:31",
        "upload_time_iso_8601": "2022-12-03T17:04:31.626256Z",
        "url": "https://files.pythonhosted.org/packages/10/0c/ef43c04827848222a4259670930cc56e67401361b7262efbd3e23622e059/opmatch-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "42ce2eb8f9975ff1ce4c18440eccb272edf70b75353a642ef5086771f112f061",
          "md5": "6e04db99b8ea27c5bfad4099003c2d8a",
          "sha256": "72005b27353a6135c143b221f97747b94d295bd3b654753cace51aba2a39d6ab"
        },
        "downloads": -1,
        "filename": "opmatch-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6e04db99b8ea27c5bfad4099003c2d8a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 7741,
        "upload_time": "2022-12-03T17:11:22",
        "upload_time_iso_8601": "2022-12-03T17:11:22.143900Z",
        "url": "https://files.pythonhosted.org/packages/42/ce/2eb8f9975ff1ce4c18440eccb272edf70b75353a642ef5086771f112f061/opmatch-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "42ce2eb8f9975ff1ce4c18440eccb272edf70b75353a642ef5086771f112f061",
        "md5": "6e04db99b8ea27c5bfad4099003c2d8a",
        "sha256": "72005b27353a6135c143b221f97747b94d295bd3b654753cace51aba2a39d6ab"
      },
      "downloads": -1,
      "filename": "opmatch-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "6e04db99b8ea27c5bfad4099003c2d8a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7, <4",
      "size": 7741,
      "upload_time": "2022-12-03T17:11:22",
      "upload_time_iso_8601": "2022-12-03T17:11:22.143900Z",
      "url": "https://files.pythonhosted.org/packages/42/ce/2eb8f9975ff1ce4c18440eccb272edf70b75353a642ef5086771f112f061/opmatch-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}