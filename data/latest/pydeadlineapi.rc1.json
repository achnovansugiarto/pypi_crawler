{
  "info": {
    "author": "Maximilian Noppel",
    "author_email": "max@noppelmax.online",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# pyDeadlineAPI\n\nThis is the first implemention of the [DeadlineAPI](https://DeadlineAPI.org) for python. It implement the whole functionality of the api plus some additional features. It also runs extensive validity checks before loading successfully loading a file.\n\nThe following classes are provided:\n+ Endpoint\n+ DeadlineObject\n+ Location\n+ Contact\n\n\n## Install\n\nYou can easily install pyDeadlineAPI via pip:\n```\npip install pyDeadlineAPI\n```\n\n## The API\nIn this section we describe how the API works. \n\n### How to load a directory?\nLoading a directory is easy. You can use the following code to load the default directory at `directory.deadlineapi.org/directory.json`:\n\n```python\nimport deadlineapi\ndirectory = deadlineapi.Loader.load_directory_by_url(loadDirectly=True)\n```\n\nAlternatively you can load from a specific url, a string or a local file on your computer/server:\n```python\nimport deadlineapi\ndeadlineapi.Loader.load_directory_by_url(\"https://directory.deadlineapi.org/directory.json\",loadDirectly=True)\ndeadlineapi.Loader.load_directory_by_string(\"{ \"endpointname\": \"url\" }\",loadDirectly=True)\ndeadlineapi.Loader.load_directory_by_path(os.path.join(\"my\",\"path\"),loadDirectly=True)\n```\n\nThe `loadDirectly=True` (default) makes sure that the endpoints get loaded directly and provides you with a list of [Endpoints](Endpoints). This may take some time. You can also set `loadDirectly=False`. In this case you will get a list of [DirectoryItem](DirectoryItem)s instead. You can use `endpoint = directoryitem.load()` to load the endpoint afterwards. \n\n### Endpoints\nEndpoints represent the endpoints of the api. You can use all the fields specified in the JSON schema. E.g.:\n```python\nimport deadlineapi\ndirectory = deadlineapi.Loader.load_directory_by_url(loadDirectly=True)\nfor endpoint in directory:\n    print(f\"Endpoint is compatible to: {endpoint.api_compatibility}\")\n    print(f\"Deadlines provide by {endpoint.name}:\")\n    for d in endpoint.deadlines:\n        print(f\"{d.name}: {d.deadline}\")\n```\n\n\nIn the following table we list all the functionality that is on top of the API fields.\n\n\n| Name                   | Description                                           |\n| ---------------------- | ----------------------------------------------------- |\n| `endpointname`         | key in the directory file                             |\n| `endpointurl`          | value (url) in the directory file                     |\n\nNote further that you can also load endpoints directly. E.g. \n```python\nimport deadlineapi\ndeadlineapi.Loader.load_endpoint_by_string(s)\ndeadlineapi.Loader.load_endpoint_by_path(path)\ndeadlineapi.Loader.load_endpoint_by_url(url)\n```\n\nEndpoints get automatically validated against the [JSON schema](https://schema.deadlineapi.org/) and other requirements, like url in url field, emails in email field and so on. If you think that something is wrong with the schema files please discuss in the [schema repository](https://github.com/DeadlineAPI/Schema).\n\n\n### DirectoryItem\nA DirectoryItem is simple the representation of a key-value pair of the directory. It only hast two fields:\n\n| Name                   | Description                                           |\n| ---------------------- | ----------------------------------------------------- |\n| `endpointname`         | key in the directory file                             |\n| `endpointurl`          | value (url) in the directory file                     |\n\nYou can use `endpoint = directoryitem.load()` to load it and turn it into an [Endpoint](Endpoint) with all the deadline and fields attached. This will also set `endpointname` and `endpointurl` in the Endpoint object.\n\n\n### DeadlineObject\nThe DeadlineObject correspond to the individual deadlines. They also got all field provided by API. \n\n```pyhton\nimport deadlineapi\ndirectory = deadlineapi.Loader.load_directory_by_url()\nfor endpoint in directory:\n        for d in endpoint.deadlines:\n                print(f\"{d.name}: {d.deadline} ({d.daysleft()}d)\")\n```\n\nNote the DeadlineObject also provides some additional functionality:\n\n| Name                   | Description                                               |\n| ---------------------- | --------------------------------------------------------- |\n|  `days_left()`         | How many (full) days are left until the deadline.         |\n|  `hours_left()`        | How many (full) hours are left until the deadline.        |\n|  `minutes_left()`      | How many (full) minutes are left until the deadline.      |\n|  `countdown()`         | How much time is left in a useful format (string)         |\n|  `timediff()`         | Provides the time diff as python object                   |\n\n### Location\nThis class just wraps the location. It provides the following additional methods:\n\n| Name                   | Description                                                               |\n| ---------------------- | ------------------------------------------------------------------------- |\n|  `to_str()`            | Provides the location as string, e.g.`virtual` or `Germany, Karlsruhe`    |\n\n### Contact\nThe last class is Concat. This also provides a `toStr()` function:\n\n| Name                   | Description                                                               |\n| ---------------------- | ------------------------------------------------------------------------- |\n|  `to_str()`            | Provides the contact as string, e.g.`info@kit.edu, @kitde`                |\n\n## Contribute\nClone this repo and run\n\n```bash\npython3 -m venv venv\nsource venv/bin/activate\npip -r requirements.txt\n```\n\nWe use the GitFlow method to organize our branches. Please work with PullRequests.\n\n\n## Credits\nMany many credits for [SpaceAPI](https://spaceapi.io/), who are the ultimative inspiration for this project also provided a lot of the code. E.g. our website is completely adapted by theirs. THANKS!\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/DeadlineAPI/pyDeadlineAPI",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyDeadlineAPI",
    "package_url": "https://pypi.org/project/pyDeadlineAPI/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyDeadlineAPI/",
    "project_urls": {
      "Homepage": "https://github.com/DeadlineAPI/pyDeadlineAPI"
    },
    "release_url": "https://pypi.org/project/pyDeadlineAPI/0.0.0/",
    "requires_dist": [
      "jsonschema (==3.0.1)",
      "requests (==2.21.0)"
    ],
    "requires_python": "",
    "summary": "Access DeadlineAPI directories or endpoint directly",
    "version": "0.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11120388,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eaecacf596d7ab31360882abc53bec70ef23036408e2314c1524229608c9f468",
          "md5": "4da696e0a7bddd641875564973a24099",
          "sha256": "4896c5e51ce1bcdad42533afc44d9ed98565f9f5193b105d530cbcc1d76746a2"
        },
        "downloads": -1,
        "filename": "pyDeadlineAPI-0.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4da696e0a7bddd641875564973a24099",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9315,
        "upload_time": "2021-08-08T00:31:57",
        "upload_time_iso_8601": "2021-08-08T00:31:57.257338Z",
        "url": "https://files.pythonhosted.org/packages/ea/ec/acf596d7ab31360882abc53bec70ef23036408e2314c1524229608c9f468/pyDeadlineAPI-0.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cc31ed4e9bfefe5c593e6701bee369b5054dbcdca65af482bc931e9308e6cbb1",
          "md5": "8e626cac70d4aa43bf9ccac3ed723628",
          "sha256": "f90ae27f64d4e07a8e79e928ad846adc3ed70a4004d9d5d1af91ee82442df980"
        },
        "downloads": -1,
        "filename": "pyDeadlineAPI-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8e626cac70d4aa43bf9ccac3ed723628",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8559,
        "upload_time": "2021-08-08T00:31:59",
        "upload_time_iso_8601": "2021-08-08T00:31:59.298546Z",
        "url": "https://files.pythonhosted.org/packages/cc/31/ed4e9bfefe5c593e6701bee369b5054dbcdca65af482bc931e9308e6cbb1/pyDeadlineAPI-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "eaecacf596d7ab31360882abc53bec70ef23036408e2314c1524229608c9f468",
        "md5": "4da696e0a7bddd641875564973a24099",
        "sha256": "4896c5e51ce1bcdad42533afc44d9ed98565f9f5193b105d530cbcc1d76746a2"
      },
      "downloads": -1,
      "filename": "pyDeadlineAPI-0.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4da696e0a7bddd641875564973a24099",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 9315,
      "upload_time": "2021-08-08T00:31:57",
      "upload_time_iso_8601": "2021-08-08T00:31:57.257338Z",
      "url": "https://files.pythonhosted.org/packages/ea/ec/acf596d7ab31360882abc53bec70ef23036408e2314c1524229608c9f468/pyDeadlineAPI-0.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cc31ed4e9bfefe5c593e6701bee369b5054dbcdca65af482bc931e9308e6cbb1",
        "md5": "8e626cac70d4aa43bf9ccac3ed723628",
        "sha256": "f90ae27f64d4e07a8e79e928ad846adc3ed70a4004d9d5d1af91ee82442df980"
      },
      "downloads": -1,
      "filename": "pyDeadlineAPI-0.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "8e626cac70d4aa43bf9ccac3ed723628",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8559,
      "upload_time": "2021-08-08T00:31:59",
      "upload_time_iso_8601": "2021-08-08T00:31:59.298546Z",
      "url": "https://files.pythonhosted.org/packages/cc/31/ed4e9bfefe5c593e6701bee369b5054dbcdca65af482bc931e9308e6cbb1/pyDeadlineAPI-0.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}