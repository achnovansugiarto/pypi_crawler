{
  "info": {
    "author": "Michael Hudson-Doyle",
    "author_email": "michael.hudson@ubuntu.com",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3"
    ],
    "description": "# A tool to \"edit\" Ubuntu live server CDs\n\nThere are a few reasons the Ubuntu live server ISOs as shipped may not\nquite be what you want. Here are some examples:\n\n * You want to make an ISO that does a completely automated install\n\n * You want packages that are not in the package repository by default\n   to be available during install, even when there is no network (or\n   only a very isolated network).\n\n * You want to add an argument to the default kernel command line.\n\n * You want to inject a new version of the subiquity snap for testing.\n\nThis script aims to help you making modified versions of the\ndistributed ISOs with changes such as those above.\n\nSome of the things it does probably work on desktop installer ISOs too\nbut I haven't thought very hard about that side of things yet.\n\n## Dependencies\n\nThis script is pretty Linux-dependent and requires `xorriso` and\n`mksquashfs` to be available on `$PATH`.  Some actions require the\n`python3-debian` package to be installed and `gpg` command to be\navailable.\n\nIt needs to be run as root (although possibly using FUSE variants for\nall the mounts would allow it to run as a regular user, maybe).\n\n## General invocation\n\nThe basic idea behind this tool is that you tell it where to find the\nsource ISO, where to put the modified ISO and a list of actions that\nmake up the modifications. So an invocation always looks somewhat like\nthis:\n\n```\n# livefs-edit $source.iso $dest.iso [actions]\n```\n\nActions can be specified two ways: on the command line or in a YAML\nfile. Each action has a name and many of them take arguments.\n\nOn the command line, actions and arguments are specified like:\n\n```\n--action-name arg1 arg2 --next-action-name\n```\n\nArguments that are interpreted as boolean interpret 'on', 'yes',\n'true' (case insensitively) as true.\n\nAlternatively (if shell quoting starts to get painful), the actions\ncan be passed as a YAML file, using the `--action-yaml` flag:\n\n```\n# livefs-edit $source.iso $dest.iso --action-yaml examples/example.yaml\n```\n\nThe YAML file should be a list of mappings. Each mapping names the\nactions with `name` and lists any arguments by name, for example:\n\n```\n- name: add-cmdline-arg\n  arg: autoinstall\n  persist: false\n- name: shell\n- name: add-packages-to-pool\n  packages:\n    - casper\n    - valgrind\n```\n\n## Directory structure\n\nThis script does all its work in a temporary directory. Within that\ndirectory the original ISO is mounted at `old/iso` and what will be\npacked into the new ISO is present at `new/iso` (the script uses a lot\nof `overlayfs` mounts to avoid copying large amounts of data around,\nand also only repack things when there are changes).\n\nMany actions require a writable emulation of the root filesystem that\nthe installer will run in. By default this is created at `rootfs` in\nthe main temporary directory, but this can be customized.\n\nIn general, things from the original ISO are mounted in `old/` and are\neither read-only or should be treated as such. Writable versions for\nthe new ISO live in `new/` (mostly).\n\n## Actions\n\n### setup-rootfs\n\n**argument**: `target` (default: `\"rootfs\"`)\n\nThis action sets up a writable emulation of the root filesystem that\nthe installer will run in at the directory named by `target`. Changes\nto this rootfs will be present in the rootfs used by installer on the\nmodified ISO.\n\nMany actions will do this implicitly but it may be clearer to be\nexplicit about the target directory name if later `shell` or `cp`\nactions refer to paths in the rootfs.\n\n### shell\n\n**argument**: `command` (default: `null`)\n\nRuns a shell (bash) in the main temporary directory. If `command` is\npresent, this is the command that is run. If not, an interactive shell\nis run. If the shell (command or interactive) exits with a non-zero\ncode, that aborts the run.\n\n### cp\n\n**argument**: `source`\n\n**argument**: `dest`\n\nCopy a file. If `source` or `dest` are relative they are assumed to be\nrelative to the main temporary directory. So something like this:\n\n```\n--cp /my/custom/initrd new/iso/casper/initrd\n```\n\nto replace the initrd.\n\n### inject-snap\n\n**argument**: `snap`\n\n**argument**: `channel` (default: `\"stable\"`)\n\nInject the passed snap into the rootfs the installer runs in. This is\nused to test new versions of subiquity. If there is an assert\nalongside the snap, this will be copied into the ISO too and the snap\nset up to track the passed channel, otherwise it is installed\nunasserted.\n\n### add-snap-from-store\n\n**argument**: `snap_name`\n\n**argument**: `channel` (default: `\"stable\"`)\n\nA wrapper around `--inject-snap`` that downloads the specified snap\nfrom the store first.\n\n### edit-squashfs\n\n**argument**: `name`\n\n**argument**: `add_sys_mounts` (default: `true`)\n\nMount the squashfs named `name` at `new/{name}` and arrange for it be\nrepacked if there are any changes before the new ISO is made.\n\n`add_sys_mounts` controls whether the usual chroot setup stuff is done\n(mounting /dev, /proc/ etc, setting up /etc/resolv.conf).\n\n### add-cmdline-arg\n\n**argument**: `arg`\n\n**argument**: `persist` (default: `true`)\n\nAdd an argument to the default kernel command line. If `persist` is\ntrue, it will be present on the default kernel command line of the\ninstalled system as well.\n\n### add-autoinstall-config\n\n**argument**: `autoinstall_config`\n\nAdd the provided autoinstall config to the ISO so it is used by\ndefault. This also adds \"autoinstall\" to the default kernel command\nline.\n\n`autoinstall_config` is the path to a YAML file which can contain\neither the autoinstall config directly or a cloud-init user-data file\n(in which case it can contain other configuration for the live\ninstaller session, such as ssh keys to be used for the `installer`\nuser).\n\n### add-debs-to-pool\n\n**argument**: list of deb files\n\nAdd the passed deb files to the repository on the CD so that they are\navailable for installation while the installer is running, even if the\ninstall is done offline.\n\nThis will generate a new Ed25519 GPG key, sign the package repository\non the ISO with it, arrange for the public part to end up in\n`/etc/apt/trusted.gpg.d/custom-iso-key.gpg` in the installed system,\nand then throw the private part away. You should be aware of this\nchange to the default apt configuration! Deleting this file in an\nautoinstall `late-command` would be a reasonable thing to do, unless\nyou want the option of using the ISO as an apt repository later on.\n\n### add-packages-to-pool\n\n**argument**: list of package names\n\nThis is a wrapper around `add-debs-to-pool` which takes package names\nrather than deb files. It downloads the listed packages and any others\nneeded to satisfy their dependencies from the main Ubuntu archive and\npasses them to `add-debs-to-pool`. Do read the note about GPG in the\ndescription of that action.\n\n### unpack-initrd\n\n**argument**: `target` (default: `\"new/initrd\"`)\n\nUnpack the initrd using unmkinitramfs into `target` (contents will\nlikely end up in subdirectories called things like `early`, `early2`\nand `main`, at least on amd64) and arrange for these to be repacked\ninto a replacement initrd for the modified ISO if any changes are made.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mwhudson/livefs-edit",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "livefs-edit",
    "package_url": "https://pypi.org/project/livefs-edit/",
    "platform": "",
    "project_url": "https://pypi.org/project/livefs-edit/",
    "project_urls": {
      "Bug Tracker": "https://github.com/mwhudson/livefs-edit/issues",
      "Homepage": "https://github.com/mwhudson/livefs-edit"
    },
    "release_url": "https://pypi.org/project/livefs-edit/0.0.4/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Tools for modifying Ubuntu Live ISOs",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11034327,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a39b5f64fa53b50dc55a4dbca71a69c9694ba3162913af58bfa951d78e19ef3b",
          "md5": "6e1d05cd56cedb03af3894bba3a71ad9",
          "sha256": "d48999c557bdedab7b5b06b94398108ec5d15fcb71fcd230b8d3316ec0056e4d"
        },
        "downloads": -1,
        "filename": "livefs_edit-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6e1d05cd56cedb03af3894bba3a71ad9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11098,
        "upload_time": "2021-05-06T00:37:26",
        "upload_time_iso_8601": "2021-05-06T00:37:26.659178Z",
        "url": "https://files.pythonhosted.org/packages/a3/9b/5f64fa53b50dc55a4dbca71a69c9694ba3162913af58bfa951d78e19ef3b/livefs_edit-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0918d1043c50fb408dfdeb682bf621c0ca74772e512276dbadc6bcdee8f32e5f",
          "md5": "5e3c23b71d6e9af798a8f30aabb726cc",
          "sha256": "ebd9ad98fb59bd303a0c0781c24a6c499fb2e3dcf6ba8832253af5de0268289f"
        },
        "downloads": -1,
        "filename": "livefs-edit-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5e3c23b71d6e9af798a8f30aabb726cc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13453,
        "upload_time": "2021-05-06T00:37:28",
        "upload_time_iso_8601": "2021-05-06T00:37:28.886784Z",
        "url": "https://files.pythonhosted.org/packages/09/18/d1043c50fb408dfdeb682bf621c0ca74772e512276dbadc6bcdee8f32e5f/livefs-edit-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ff0626ddf04883261bfb2a5352d04fa0fdc98e3320a99d4291a01cad88a9183c",
          "md5": "655f6582e5214c0ba41811746fcf9cb5",
          "sha256": "3cc99cc3fed5fb4bbe8dc45799bffa87a44acc1a0983da37bec667e6a01dba81"
        },
        "downloads": -1,
        "filename": "livefs_edit-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "655f6582e5214c0ba41811746fcf9cb5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11463,
        "upload_time": "2021-05-11T02:08:10",
        "upload_time_iso_8601": "2021-05-11T02:08:10.195480Z",
        "url": "https://files.pythonhosted.org/packages/ff/06/26ddf04883261bfb2a5352d04fa0fdc98e3320a99d4291a01cad88a9183c/livefs_edit-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d416a3f3970a9c9f5d76fc24012ae4dab20e0716aab3827b7d999f2f777e0daa",
          "md5": "87a7c23fa0ffdbaa19cd4ef2d6980601",
          "sha256": "5a1e8bbf311c340f945b9bfaa24ac97fd6ab04b02537cae27bcf3dee1c7103fe"
        },
        "downloads": -1,
        "filename": "livefs-edit-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "87a7c23fa0ffdbaa19cd4ef2d6980601",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13880,
        "upload_time": "2021-05-11T02:08:12",
        "upload_time_iso_8601": "2021-05-11T02:08:12.097837Z",
        "url": "https://files.pythonhosted.org/packages/d4/16/a3f3970a9c9f5d76fc24012ae4dab20e0716aab3827b7d999f2f777e0daa/livefs-edit-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "efa9151420594597568747cfab18564319321bf01659a78b7d77eab661cc5d22",
          "md5": "19f1abef09a9b9d14cc24a45bba1c3e1",
          "sha256": "617674a07e071ab04d845543bdaf26340d1546207ec60a6a5cb5ab0dd6f18285"
        },
        "downloads": -1,
        "filename": "livefs_edit-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "19f1abef09a9b9d14cc24a45bba1c3e1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11950,
        "upload_time": "2021-07-28T11:14:49",
        "upload_time_iso_8601": "2021-07-28T11:14:49.638425Z",
        "url": "https://files.pythonhosted.org/packages/ef/a9/151420594597568747cfab18564319321bf01659a78b7d77eab661cc5d22/livefs_edit-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b3c5bdef80449a0a955d770fe42d9c95bf30be4028cd727926cc0d23142d22a",
          "md5": "864a3f914ae978f3db56e31f570d0bd8",
          "sha256": "71871b553e428ddffde326180716f67b8e24641f8b2b59b2b9885d8756f762ed"
        },
        "downloads": -1,
        "filename": "livefs-edit-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "864a3f914ae978f3db56e31f570d0bd8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13581,
        "upload_time": "2021-07-28T11:14:51",
        "upload_time_iso_8601": "2021-07-28T11:14:51.079590Z",
        "url": "https://files.pythonhosted.org/packages/2b/3c/5bdef80449a0a955d770fe42d9c95bf30be4028cd727926cc0d23142d22a/livefs-edit-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "79144a6365ea52a4d0ff281db275c334dfb868856cc0566ed75c15a9064486a5",
          "md5": "aaf5cdac46d35ccccccc98beb9a81e93",
          "sha256": "34e2326530d39d42fd1038308de4a9efed2d08a2df1de84d32583d396de7ab4d"
        },
        "downloads": -1,
        "filename": "livefs_edit-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "aaf5cdac46d35ccccccc98beb9a81e93",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11952,
        "upload_time": "2021-07-29T02:13:00",
        "upload_time_iso_8601": "2021-07-29T02:13:00.229910Z",
        "url": "https://files.pythonhosted.org/packages/79/14/4a6365ea52a4d0ff281db275c334dfb868856cc0566ed75c15a9064486a5/livefs_edit-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d134cb757b622ea779636d8b753488aeb665b11b0fb042361a0f7db7774fd9a3",
          "md5": "cbbccf892add36a16f2108c54c30de85",
          "sha256": "3ebf68a6acf44df09762d33a07bde07c2d4d59066a62e66ec902384691ceb8e5"
        },
        "downloads": -1,
        "filename": "livefs-edit-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "cbbccf892add36a16f2108c54c30de85",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13576,
        "upload_time": "2021-07-29T02:13:01",
        "upload_time_iso_8601": "2021-07-29T02:13:01.600934Z",
        "url": "https://files.pythonhosted.org/packages/d1/34/cb757b622ea779636d8b753488aeb665b11b0fb042361a0f7db7774fd9a3/livefs-edit-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "79144a6365ea52a4d0ff281db275c334dfb868856cc0566ed75c15a9064486a5",
        "md5": "aaf5cdac46d35ccccccc98beb9a81e93",
        "sha256": "34e2326530d39d42fd1038308de4a9efed2d08a2df1de84d32583d396de7ab4d"
      },
      "downloads": -1,
      "filename": "livefs_edit-0.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "aaf5cdac46d35ccccccc98beb9a81e93",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 11952,
      "upload_time": "2021-07-29T02:13:00",
      "upload_time_iso_8601": "2021-07-29T02:13:00.229910Z",
      "url": "https://files.pythonhosted.org/packages/79/14/4a6365ea52a4d0ff281db275c334dfb868856cc0566ed75c15a9064486a5/livefs_edit-0.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d134cb757b622ea779636d8b753488aeb665b11b0fb042361a0f7db7774fd9a3",
        "md5": "cbbccf892add36a16f2108c54c30de85",
        "sha256": "3ebf68a6acf44df09762d33a07bde07c2d4d59066a62e66ec902384691ceb8e5"
      },
      "downloads": -1,
      "filename": "livefs-edit-0.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "cbbccf892add36a16f2108c54c30de85",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 13576,
      "upload_time": "2021-07-29T02:13:01",
      "upload_time_iso_8601": "2021-07-29T02:13:01.600934Z",
      "url": "https://files.pythonhosted.org/packages/d1/34/cb757b622ea779636d8b753488aeb665b11b0fb042361a0f7db7774fd9a3/livefs-edit-0.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}