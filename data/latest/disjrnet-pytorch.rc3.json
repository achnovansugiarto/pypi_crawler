{
  "info": {
    "author": "hossay",
    "author_email": "youhs4554@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# DisJR Networks: Disjointed Representation Learning for Better Fall Recognition\n\nDisJR(**Disj**ointing **R**epresentation) is an effective and simple computational unit that disjoints human from unwanted elements(e.g., background) in the video scene without any hints about the human region.\nOur proposed DisJR operation is designed to reflect relations between human and various surrounding contexts from data itself, not preprocessed data.\nIn contrast to the existing methods that uses preprocessed data for the human region, the proposed DisJR operations do not rely on the fixed region.\nInstead, the proposed method learns how to separate representations of human region and unwanted elements through explicit _feature-level_ decomposition, i.e., DisJR.\nIn this way, the model grasps more general representations about the video scene.\n\n## Model overview\n\n![model_overview](imgs/model.png)\n\n## Example\n\nHere is code example for using pip-downloaded DisJRNet:\n\n```\nimport torch\nimport torch.nn as nn\nfrom torch.utils.data import TensorDataset, DataLoader\nfrom disjrnet.model.models import DisJRNet\nfrom disjrnet.model.loss import compute_loss\n\nalpha           =   2.0       # hyperparameter\nfusion_method   =   'gating'   # candidates = 'gating' | 'gconv'\n\n# 2D CNN\nmodel = DisJRNet(num_classes    =   10,\n                base_model      =   'resnet50',\n                dimension       =   2,\n                dropout         =   0.8,\n                margin          =   alpha,\n                fusion_method   =   fusion_method)\n\n# # 3D CNN\n# model = DisJRNet(num_classes    =   10,\n#                 base_model      =   'r2plus1d_18',\n#                 dimension       =   3,\n#                 dropout         =   0.8,\n#                 margin          =   alpha,\n#                 fusion_method   =   fusion_method)\n\n# classification loss = CE\ncriterion = nn.CrossEntropyLoss()\n\n# dummy data example\ninps = torch.randn(10, 3, 112, 112)\ntgts = torch.arange(10, dtype=torch.float32).view(10,-1)\n\ndataset = TensorDataset(inps, tgts)\nloader = DataLoader(dataset, batch_size=8)\nloader_iter = iter(loader)\n\ninputs, target = next(loader_iter)\n\nlogits = model(inputs)\n\nloss = compute_loss(model, criterion, logits, target)\npred = logits.argmax(1)\n\nprint(f\"loss : {loss:.4f}, pred : {pred}, target : {target.view(-1)}\")\n```\n\n## Training scripts\n\nFirst, you need to change directory to disjrnet\n\n```\ncd disjrnet\n```\n\nHere are script examples for training available model in this project:\n\n- DisJRNet\n\n```bash\n# FDD\npython main.py --dataset FDD --root <dataset_root> --output_path <checkpoint_dir> --num_classes 2 --drop_rate 0.8 --base_model r2plus1d_18 --fusion_method gating --n_fold 5 --batch_size 8 --epochs 25 --sample_length 10 --num_workers 8 --monitor val_f1 --lr 1e-4 --c 5.0 --arch DisJRNet\n\n# URFD\npython main.py --dataset URFD --root <dataset_root> --output_path <checkpoint_dir> --num_classes 2 --drop_rate 0.8 --base_model r2plus1d_18 --fusion_method gating --n_fold 5 --batch_size 8 --epochs 25 --sample_length 10 --num_workers 8 --monitor val_f1 --lr 1e-4 --c 2.0 --arch DisJRNet\n```\n\n- Baseline\n\n```bash\n# FDD\npython main.py --dataset FDD --root <dataset_root> --output_path <checkpoint_dir> --num_classes 2 --drop_rate 0.8 --base_model r2plus1d_18 --n_fold 5 --batch_size 8 --epochs 25 --sample_length 10 --num_workers 8 --monitor val_f1 --lr 1e-4 --arch Baseline\n\n# URFD\npython main.py --dataset URFD --root <dataset_root> --output_path <checkpoint_dir> --num_classes 2 --drop_rate 0.8 --base_model r2plus1d_18 --n_fold 5 --batch_size 8 --epochs 25 --sample_length 10 --num_workers 8 --monitor val_f1 --lr 1e-4 --arch Baseline\n```\n\n## Results\n\n![result_table](imgs/result.png)\n\n## Activation Map Visualization\n\n![activation](imgs/activations.png)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/youhs4554/disjrnet-pytorch/archive/refs/tags/v0.1.1.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/youhs4554/disjrnet-pytorch.git",
    "keywords": "representation learning,weakly supervised learning,fall detection",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "disjrnet-pytorch",
    "package_url": "https://pypi.org/project/disjrnet-pytorch/",
    "platform": null,
    "project_url": "https://pypi.org/project/disjrnet-pytorch/",
    "project_urls": {
      "Download": "https://github.com/youhs4554/disjrnet-pytorch/archive/refs/tags/v0.1.1.tar.gz",
      "Homepage": "https://github.com/youhs4554/disjrnet-pytorch.git"
    },
    "release_url": "https://pypi.org/project/disjrnet-pytorch/0.1.2/",
    "requires_dist": [
      "torch",
      "torchvision"
    ],
    "requires_python": ">=3.6",
    "summary": "A small example package",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13648272,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1a253e60787fc5708e84c4fa5514e021184f71cbaff296b65555771165df9d42",
          "md5": "308d4aa85203bc06c680dd352d296308",
          "sha256": "418db20afa02ebbda31ee52997ee9b7ae187c99365db23fbd3938344b28b0a32"
        },
        "downloads": -1,
        "filename": "disjrnet_pytorch-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "308d4aa85203bc06c680dd352d296308",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 12705,
        "upload_time": "2022-04-05T01:45:46",
        "upload_time_iso_8601": "2022-04-05T01:45:46.855303Z",
        "url": "https://files.pythonhosted.org/packages/1a/25/3e60787fc5708e84c4fa5514e021184f71cbaff296b65555771165df9d42/disjrnet_pytorch-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3fa1e74448069539f63aaf1d39318e7610cc3e59f7f30d51c1c0c637f984fc37",
          "md5": "eeedd4e8bc35f38ad35d79dbeb8666de",
          "sha256": "47adaca84bfda4ecffa15fb21161f64f840430423aada482b206706e53cc5362"
        },
        "downloads": -1,
        "filename": "disjrnet_pytorch-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eeedd4e8bc35f38ad35d79dbeb8666de",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 12774,
        "upload_time": "2022-04-05T02:09:10",
        "upload_time_iso_8601": "2022-04-05T02:09:10.722621Z",
        "url": "https://files.pythonhosted.org/packages/3f/a1/e74448069539f63aaf1d39318e7610cc3e59f7f30d51c1c0c637f984fc37/disjrnet_pytorch-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "65971701276171acd008ab3834f5a3b3f0e53feab6a663d2b74c618933db8a03",
          "md5": "ad56491f5e04612c156e2a34a81b030c",
          "sha256": "3d9c385f0a4c5b9fe66523cbdb74ef42032acf64d8037d8b07321779aaa7524d"
        },
        "downloads": -1,
        "filename": "disjrnet_pytorch-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ad56491f5e04612c156e2a34a81b030c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 12821,
        "upload_time": "2022-04-28T05:45:53",
        "upload_time_iso_8601": "2022-04-28T05:45:53.209586Z",
        "url": "https://files.pythonhosted.org/packages/65/97/1701276171acd008ab3834f5a3b3f0e53feab6a663d2b74c618933db8a03/disjrnet_pytorch-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d937711fc8cdea826995438abf40d3b49e9c775fe1341175875f3ea8a8c339b6",
          "md5": "88bf70acea978ec957662a7b9f44cbb5",
          "sha256": "271b39e73f27a05810e528b5181419f0137e982fba581adc5136a1081f236d49"
        },
        "downloads": -1,
        "filename": "disjrnet_pytorch-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "88bf70acea978ec957662a7b9f44cbb5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10748,
        "upload_time": "2022-04-28T05:45:55",
        "upload_time_iso_8601": "2022-04-28T05:45:55.215435Z",
        "url": "https://files.pythonhosted.org/packages/d9/37/711fc8cdea826995438abf40d3b49e9c775fe1341175875f3ea8a8c339b6/disjrnet_pytorch-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "65971701276171acd008ab3834f5a3b3f0e53feab6a663d2b74c618933db8a03",
        "md5": "ad56491f5e04612c156e2a34a81b030c",
        "sha256": "3d9c385f0a4c5b9fe66523cbdb74ef42032acf64d8037d8b07321779aaa7524d"
      },
      "downloads": -1,
      "filename": "disjrnet_pytorch-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ad56491f5e04612c156e2a34a81b030c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 12821,
      "upload_time": "2022-04-28T05:45:53",
      "upload_time_iso_8601": "2022-04-28T05:45:53.209586Z",
      "url": "https://files.pythonhosted.org/packages/65/97/1701276171acd008ab3834f5a3b3f0e53feab6a663d2b74c618933db8a03/disjrnet_pytorch-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d937711fc8cdea826995438abf40d3b49e9c775fe1341175875f3ea8a8c339b6",
        "md5": "88bf70acea978ec957662a7b9f44cbb5",
        "sha256": "271b39e73f27a05810e528b5181419f0137e982fba581adc5136a1081f236d49"
      },
      "downloads": -1,
      "filename": "disjrnet_pytorch-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "88bf70acea978ec957662a7b9f44cbb5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 10748,
      "upload_time": "2022-04-28T05:45:55",
      "upload_time_iso_8601": "2022-04-28T05:45:55.215435Z",
      "url": "https://files.pythonhosted.org/packages/d9/37/711fc8cdea826995438abf40d3b49e9c775fe1341175875f3ea8a8c339b6/disjrnet_pytorch-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}