{
  "info": {
    "author": "Matthew Gudorf",
    "author_email": "matthew.gudorf@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "Intended Audience :: Information Technology",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: Microsoft :: Windows :: Windows 10",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "Investigating Annotation via AutoML and TDA\n===========================================\n\nCreate a MVP as fast as possible. Goal is to investigate whether TDA can be used to create an unsupervised algorithm\nfor automatically producing annotations and labels for relatively simple data. Key features include:\n\n- Find datasets which can be used to for classification and or clustering purposes [X]\n  I am going to use Taskmaster 2 data set.\n\n- Clean and explore the data\n\n- Wrangle the data to get into a form compatible for tools such as word2vec or deepwalk\n  the former most likely accessed via gensim or pytorch\n\n- Use these tools to encode data as vectors.\n\n- Use simple models as baselines for classification and clustering. (KNN, other algs)\n\n- Apply Topological data analysis on these vectors to produce clusters (ToMATo algorithm maybe a custom algorithm)\n\n- Compare TDA results with baselines using statistical/error analysis. Could use external clustering based metrics or\n  more familiar metrics like F-measure.\n\nAs the main goal here is to investigate whether unsupervised and or automated machine learning can be used for the\npurpose of annotation of data, the model will be graded as a classification algorithm.\nSuccess will be defined by\n\n1. The TDA algorithm has better results (in some metric to be determined) than other unsupervised learning algorithms\n2. The clustering/annotation is of sufficient accuracy to be deployed as a business solution. I.e. meets accuracy threshold.\n\nFor speed, this will primarily be done in notebook format.\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://autoanno.readthedocs.io/en/latest/index.html",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "autoanno",
    "package_url": "https://pypi.org/project/autoanno/",
    "platform": "",
    "project_url": "https://pypi.org/project/autoanno/",
    "project_urls": {
      "Homepage": "https://autoanno.readthedocs.io/en/latest/index.html",
      "documentation": "https://autoanno.readthedocs.io/en/latest/index.html",
      "source": "https://github.com/mgudorf/autoanno",
      "tutorials": "https://github.com/mgudorf/autoanno/tree/main/notebooks"
    },
    "release_url": "https://pypi.org/project/autoanno/0.0.1.dev1/",
    "requires_dist": [
      "matplotlib (>=3.1.3)",
      "numpy (>=1.18.1)",
      "scipy (>=1.4.1)",
      "h5py (>=2.10.0)",
      "pyqt5 (>=5.15.4)",
      "gudhi (>=3.3.0)",
      "pot (>=0.7.0)",
      "networkx (>=2.5)",
      "gensim (>=3.8.3)",
      "plotly (>=4.14.3)",
      "pytorch (>=1.6.0)",
      "ipython (>=7.21.0)",
      "ipykernel (>=5.1.4)",
      "jupyterlab (>=1.2.6)",
      "ipython ; extra == 'docs'",
      "sphinx (==3.5.2) ; extra == 'docs'",
      "sphinxcontrib-log-cabinet (==1.0.1) ; extra == 'docs'",
      "sphinx-issues (>=1.2.0) ; extra == 'docs'",
      "sphinx-rtd-theme (==0.5.1) ; extra == 'docs'",
      "sphinx-gallery (==0.8.2) ; extra == 'docs'",
      "numpydoc (>=1.1) ; extra == 'docs'",
      "pillow (>=8.0) ; extra == 'docs'",
      "nb2plots (>=0.6) ; extra == 'docs'",
      "texext (>=0.6.6) ; extra == 'docs'",
      "sphinx-tabs (>=2.1.0) ; extra == 'docs'",
      "pytest (>=5.3.5) ; extra == 'test'"
    ],
    "requires_python": ">=3.7",
    "summary": "Investigation into using AutoML and Topological Data Analysis for Automated Annotation",
    "version": "0.0.1.dev1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9846923,
  "releases": {
    "0.0.1.dev1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "89ec4523c6be0f0ce2c1600f45fc67f8d0ee526a764c6bc2f532997c881525d6",
          "md5": "40ad080678f67a9ac397a1c80159d45b",
          "sha256": "504c75d827111f58b3d84fd7e88267bff04aa81b5d0023213a1b36058b8399a8"
        },
        "downloads": -1,
        "filename": "autoanno-0.0.1.dev1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "40ad080678f67a9ac397a1c80159d45b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 3713,
        "upload_time": "2021-03-22T19:26:25",
        "upload_time_iso_8601": "2021-03-22T19:26:25.862682Z",
        "url": "https://files.pythonhosted.org/packages/89/ec/4523c6be0f0ce2c1600f45fc67f8d0ee526a764c6bc2f532997c881525d6/autoanno-0.0.1.dev1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3d79f9f4adf3efa80a363ada54d78d7d4365c885c52e5bce3e9d9f90c0aea925",
          "md5": "6c3c4325c0377a4b5fa869f4e0ebfb88",
          "sha256": "16a08fe5b97d388ed3158bdea5cff3a8a000d36b1454b297859e64f645567559"
        },
        "downloads": -1,
        "filename": "autoanno-0.0.1.dev1.tar.gz",
        "has_sig": false,
        "md5_digest": "6c3c4325c0377a4b5fa869f4e0ebfb88",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 3717,
        "upload_time": "2021-03-22T19:26:27",
        "upload_time_iso_8601": "2021-03-22T19:26:27.033000Z",
        "url": "https://files.pythonhosted.org/packages/3d/79/f9f4adf3efa80a363ada54d78d7d4365c885c52e5bce3e9d9f90c0aea925/autoanno-0.0.1.dev1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "89ec4523c6be0f0ce2c1600f45fc67f8d0ee526a764c6bc2f532997c881525d6",
        "md5": "40ad080678f67a9ac397a1c80159d45b",
        "sha256": "504c75d827111f58b3d84fd7e88267bff04aa81b5d0023213a1b36058b8399a8"
      },
      "downloads": -1,
      "filename": "autoanno-0.0.1.dev1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "40ad080678f67a9ac397a1c80159d45b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 3713,
      "upload_time": "2021-03-22T19:26:25",
      "upload_time_iso_8601": "2021-03-22T19:26:25.862682Z",
      "url": "https://files.pythonhosted.org/packages/89/ec/4523c6be0f0ce2c1600f45fc67f8d0ee526a764c6bc2f532997c881525d6/autoanno-0.0.1.dev1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3d79f9f4adf3efa80a363ada54d78d7d4365c885c52e5bce3e9d9f90c0aea925",
        "md5": "6c3c4325c0377a4b5fa869f4e0ebfb88",
        "sha256": "16a08fe5b97d388ed3158bdea5cff3a8a000d36b1454b297859e64f645567559"
      },
      "downloads": -1,
      "filename": "autoanno-0.0.1.dev1.tar.gz",
      "has_sig": false,
      "md5_digest": "6c3c4325c0377a4b5fa869f4e0ebfb88",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 3717,
      "upload_time": "2021-03-22T19:26:27",
      "upload_time_iso_8601": "2021-03-22T19:26:27.033000Z",
      "url": "https://files.pythonhosted.org/packages/3d/79/f9f4adf3efa80a363ada54d78d7d4365c885c52e5bce3e9d9f90c0aea925/autoanno-0.0.1.dev1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}