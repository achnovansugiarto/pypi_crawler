{
  "info": {
    "author": "TaeHwan-Jung",
    "author_email": "nlkey2022@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# [matorage](https://matorage.readthedocs.io/en/latest)\n\n<p align=\"center\">\n<a href=\"https://travis-ci.com/github/graykode/matorage\"><img alt=\"Build Status\" src=\"https://travis-ci.com/graykode/matorage.svg?branch=master\"></a>\n<a href=\"https://matorage.readthedocs.io/en/latest/?badge=latest\"><img alt=\"Documentation Status\" src=\"https://readthedocs.org/projects/matorage/badge/?version=latest\"></a>\n<a href=\"https://github.com/graykode/matorage/blob/master/LICENSE\"><img alt=\"License: Apache 2.0\" src=\"https://img.shields.io/badge/License-Apache%202.0-blue.svg\"></a>\n<a href=\"https://pypi.org/project/matorage/\"><img alt=\"PyPI\" src=\"https://img.shields.io/pypi/v/matorage\"></a>\n<a href=\"https://pepy.tech/project/matorage\"><img alt=\"Downloads\" src=\"https://static.pepy.tech/badge/matorage\"></a>\n<a href=\"https://github.com/psf/black\"><img alt=\"Code style: black\" src=\"https://img.shields.io/badge/code%20style-black-000000.svg\"></a>\n</p>\n\n**An efficient way to store/load and manage dataset, model and optimizer for deep learning with matorage!**\n\nMatorage is tensor(multidimensional matrix) object storage manager for deep learning framework(Pytorch, Tensorflow V2, Keras).\n\n## Features\n\n- Boilerplated data pipeline for dataset, model and optimizer.\n- High performance on tensor storage\n\n**For researchers who need to focus on model training**:\n\n- Support storing data in pre-processed Tensor(multidimensional matrix), eliminate training time.\n- Reduce storage space through multiple compression methods.\n- Manage data and models while training\n\n**For AI Developer who need to focus on creating data pipeline:**\n\n- Concurrency data save & load\n- Compatible with object storage such as MinIO, S3\n- Generate pipeline from user endpoints data.\n\n## Quick Start with Pytorch Example\n\nFor an example of tensorflow, refer to the detailed document.\nIf you want to see the full code, see below\n\n- [Pytorch Mnist Example](examples/pytorch/mnist)\n- [Tensorflow Mnist Example](examples/tensorflow/mnist)\n- [SQuAD 1.1/2.0 Example](examples/pytorch/squad)\n\n- Content\n    - [0. Install matorage with pip](https://github.com/graykode/matorage#0-install-matorage-with-pip)\n    - [1. Set up Minio Server with docker](https://github.com/graykode/matorage#1-set-up-minio-server-with-docker)\n    - [2. Save pre-processed dataset](https://github.com/graykode/matorage#2-save-pre-processed-dataset)\n    - [3. Load dataset from matorage](https://github.com/graykode/matorage#3-load-dataset-from-matorage)\n    - [4. Save & Load Model when training](https://github.com/graykode/matorage#4-save--load-model-when-training)\n    - [5. Save & Load Optimizer when training](https://github.com/graykode/matorage#5-save--load-optimizer-when-training)\n- [Unittest](https://github.com/graykode/matorage#unittest)\n\n#### 0. Install matorage with pip\n\n```bash\n$ pip install matorage\n```\n\n\n#### 1. Set up Minio Server with docker\n\nquick start with NAS(network access storage) using docker\nIt can be managed through the web through the address http://127.0.0.1:9000/, and security is managed through ``MINIO_ACCESS_KEY`` and ``MINIO_SECRET_KEY``.\n\n```bash\n$ mkdir ~/shared # create nas storage folder\n$ docker run -it -p 9000:9000 \\\n    --restart always -e \\\n    \"MINIO_ACCESS_KEY=minio\" -e \\\n    \"MINIO_SECRET_KEY=miniosecretkey\" \\\n    -v ~/shared:/container/vol \\\n    minio/minio gateway nas /container/vol\n```\n\n\n#### 2. Save pre-processed dataset\n\nFirst, create a ``DataConfig`` by importing matorage.\nThis is an example of pre-processing mnist and storing it in distributed storage.\n``additional`` is freely in the form of a dict, and records the shape and type of tensor to be stored in ``attributes``.\n\n```python\nfrom matorage import DataConfig\n\ntraindata_config = DataConfig(\n    endpoint='127.0.0.1:9000',\n    access_key='minio',\n    secret_key='miniosecretkey',\n    dataset_name='mnist',\n    additional={\n        \"mode\": \"train\",\n        \"framework\" : \"pytorch\",\n        ...\n        \"blah\" : \"blah\"\n    },\n    attributes=[\n        ('image', 'float32', (1, 28, 28)),\n        ('target', 'int64', (1))\n    ]\n)\n```\n\nNow do a simple pre-processing and save the data.\n\n```python\nfrom matorage import DataSaver\n\ntraindata_saver = DataSaver(config=traindata_config)\ntrain_loader = DataLoader(dataset, batch_size=60, num_workers=8)\nfor (image, target) in tqdm(train_loader):\n    # image shape : torch.Size([64, 1, 28, 28])\n    # target shape : torch.Size([64])\n    traindata_saver({\n        'image': image,\n        'target': target\n    })\ntraindata_saver.disconnect()\n```\n\n\n#### 3. Load dataset from matorage\n\nNow fetch data iteratively from storage with the same config as the saved dataset when training.\n\n```python\nfrom matorage.torch import Dataset\n\ntrain_dataset = Dataset(config=traindata_config, clear=True)\ntrain_loader = DataLoader(\n    train_dataset, batch_size=64, num_workers=8, shuffle=True\n)\n\nfor batch_idx, (image, target) in enumerate(tqdm(train_loader)):\n    image, target = image.to(device), target.to(device)\n```\n\nOnly an index can be fetched through lazy load.\n\n```python\ntrain_dataset = Dataset(config=traindata_config, clear=True)\nprint(train_dataset[0], len(train_dataset))\n```\n\n\n#### 4. Save & Load Model when training\n\nDuring training, you can save and load models of specific steps or epochs in distributed storage through inmemory.\nFirst, make the model config the same as the dataset.\n\n```python\nfrom matorage import ModelConfig\nfrom matorage.torch import ModelManager\n\nmodel_config = ModelConfig(\n    endpoint='127.0.0.1:9000',\n    access_key='minio',\n    secret_key='miniosecretkey',\n    model_name='mnist_simple_training',\n    additional={\n        \"version\" : \"1.0.1\",\n        ...\n        \"blah\" : \"blah\"\n    }\n)\n\nmodel_manager = ModelManager(config=model_config)\nprint(model_manager.get_metadata)\nmodel_manager.save(model, epoch=1)\nprint(model_manager.get_metadata)\n```\n\nWhen an empty model is loaded with specific steps or epochs, the appropriate weight is filled into the model.\n\n```python\nprint(model.state_dict())\nmodel_manager.load(model, epoch=1)\nprint(model.state_dict())\n# load a layer weight.\nprint(model_manager.load('net1.0.weight', step=0))\n```\n\n\n#### 5. Save & Load Optimizer when training\n\nSave and load of optimizer is similar to managing model.\n\n```python\nfrom matorage import OptimizerConfig\nfrom matorage.torch import OptimizerManager\n\noptimizer_config = OptimizerConfig(\n    endpoint='127.0.0.1:9000',\n    access_key='minio',\n    secret_key='miniosecretkey',\n    optimizer_name='adam',\n    additional={\n        \"model\" : \"1.0.1\",\n        ...\n        \"blah\" : \"blah\"\n    }\n)\n\noptimizer_manager = OptimizerManager(config=optimizer_config)\nprint(optimizer_manager.get_metadata)\n# The optimizer contains information about the step.\noptimizer_manager.save(optimizer)\nprint(optimizer_manager.get_metadata)\n```\n\nWhen an empty optimizer is loaded with specific steps, the appropriate weight is filled into the optimizer.\n\n```python\noptimizer = optim.Adam(model.parameters(), lr=0.01)\noptimizer_manager.load(optimizer, step=938)\n```\n\n\n### Unittest\n```bash\n$ git clone https://github.com/graykode/matorage && cd matorage\n$ python -m tests.test_suite\n```\n\n\n### Framework Requirement\n\n- torch(>=1.0.0), torchvision(>=0.2.2)\n- tensorflow(>=2.2), tensorflow_io(>=0.13)\n\n### Author\n\n[Tae Hwan Jung(@graykode)](https://github.com/graykode/matorage>)\nWe are looking for a contributor.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/graykode/matorage",
    "keywords": "",
    "license": "Apache License, Version 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "matorage",
    "package_url": "https://pypi.org/project/matorage/",
    "platform": "any",
    "project_url": "https://pypi.org/project/matorage/",
    "project_urls": {
      "Documentation": "https://matorage.readthedocs.io/en/stable/",
      "Homepage": "https://github.com/graykode/matorage",
      "Source Code": "https://github.com/graykode/matorage"
    },
    "release_url": "https://pypi.org/project/matorage/0.3.0/",
    "requires_dist": [
      "tables (==3.6.1)",
      "minio (==5.0.10)",
      "h5py",
      "pytest",
      "tqdm"
    ],
    "requires_python": ">=3.5",
    "summary": "matorage is Matrix or Tensor(multidimensional matrix) Object Storage with high availability distributed systems for Deep Learning framework.",
    "version": "0.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8296215,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cf39172de046bc2a8cae8fddf557559142f35680a8252841db896fc883f9cfe0",
          "md5": "7e2fe7b69677a5140e8dfabb44f95fe1",
          "sha256": "429143d34a26172ef4f6321d6996dad6d7f2e7cc36f4d58dbe50f19019853452"
        },
        "downloads": -1,
        "filename": "matorage-0.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7e2fe7b69677a5140e8dfabb44f95fe1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 1026,
        "upload_time": "2020-06-21T12:32:17",
        "upload_time_iso_8601": "2020-06-21T12:32:17.662302Z",
        "url": "https://files.pythonhosted.org/packages/cf/39/172de046bc2a8cae8fddf557559142f35680a8252841db896fc883f9cfe0/matorage-0.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a48426fe505c3cf525884608bf4c5ebaadfa2af4df67d0cfe2c0e7faccdd3f8",
          "md5": "e6c8b35d44f1bd2cb1673fbbda846400",
          "sha256": "df8a441ef03ae96efd696ef626b6a2d218a0eeaf672591025f870adea675de1c"
        },
        "downloads": -1,
        "filename": "matorage-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e6c8b35d44f1bd2cb1673fbbda846400",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 657,
        "upload_time": "2020-06-21T12:32:19",
        "upload_time_iso_8601": "2020-06-21T12:32:19.811820Z",
        "url": "https://files.pythonhosted.org/packages/9a/48/426fe505c3cf525884608bf4c5ebaadfa2af4df67d0cfe2c0e7faccdd3f8/matorage-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7459091b9c249bbb5aa08e4cce588d7027c475811a1bd492ccaa866c33f0bee9",
          "md5": "09de3b44b236349166489120b81d21f9",
          "sha256": "819bf6d8e3ac3590577e27a7e0706c2be58965cd4a99e0e4a4dd5f3008dbe936"
        },
        "downloads": -1,
        "filename": "matorage-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "09de3b44b236349166489120b81d21f9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 52323,
        "upload_time": "2020-08-08T16:32:11",
        "upload_time_iso_8601": "2020-08-08T16:32:11.092076Z",
        "url": "https://files.pythonhosted.org/packages/74/59/091b9c249bbb5aa08e4cce588d7027c475811a1bd492ccaa866c33f0bee9/matorage-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0a0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "268f6342f3eff2ac39b503db66f926557b482a0f50506136ca930f992ee77991",
          "md5": "9369036106572fde7b9a18ac916d04b5",
          "sha256": "5b8a7f259c818a7d17c2219df20e419503e6b2d34f9992580edbd827950d75e8"
        },
        "downloads": -1,
        "filename": "matorage-0.1.0a0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9369036106572fde7b9a18ac916d04b5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 71940,
        "upload_time": "2020-08-08T16:44:54",
        "upload_time_iso_8601": "2020-08-08T16:44:54.554989Z",
        "url": "https://files.pythonhosted.org/packages/26/8f/6342f3eff2ac39b503db66f926557b482a0f50506136ca930f992ee77991/matorage-0.1.0a0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b37f3ac76672c3eba5e566d69d1e51488c1566bf0789ef5196c6e8cb7c2bd3d9",
          "md5": "cc8bb82c4561fa0723e0f7cc8b7a65fa",
          "sha256": "50d38fdd2167c6a5cec971506230656f7600c7e8d4ce2b838381a2a4798f8530"
        },
        "downloads": -1,
        "filename": "matorage-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cc8bb82c4561fa0723e0f7cc8b7a65fa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 77189,
        "upload_time": "2020-08-23T16:18:49",
        "upload_time_iso_8601": "2020-08-23T16:18:49.191438Z",
        "url": "https://files.pythonhosted.org/packages/b3/7f/3ac76672c3eba5e566d69d1e51488c1566bf0789ef5196c6e8cb7c2bd3d9/matorage-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "abbb32df156b4b28d2d8e735fc799d7e9e1c43f8549b1c00428c4823156fc19e",
          "md5": "aad029ed065231403b6d70ba08460de2",
          "sha256": "d24129619ab30bcaccd5c8903fb68206f6ebc1eb182e9644615e6c5f8f435652"
        },
        "downloads": -1,
        "filename": "matorage-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "aad029ed065231403b6d70ba08460de2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 41763,
        "upload_time": "2020-08-23T16:18:51",
        "upload_time_iso_8601": "2020-08-23T16:18:51.114779Z",
        "url": "https://files.pythonhosted.org/packages/ab/bb/32df156b4b28d2d8e735fc799d7e9e1c43f8549b1c00428c4823156fc19e/matorage-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3c30d22a55ab7b8e353417c7d135e6132410c75c173b9e9eb27f6e4f6c2860be",
          "md5": "775cfe97c8ec14d7e4bdff1fcc976f65",
          "sha256": "0c0d8b3fc884c8f61c58579c859844f26484c8d7ed96f29e6527327aabcbecb4"
        },
        "downloads": -1,
        "filename": "matorage-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "775cfe97c8ec14d7e4bdff1fcc976f65",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 77204,
        "upload_time": "2020-09-08T02:39:59",
        "upload_time_iso_8601": "2020-09-08T02:39:59.512461Z",
        "url": "https://files.pythonhosted.org/packages/3c/30/d22a55ab7b8e353417c7d135e6132410c75c173b9e9eb27f6e4f6c2860be/matorage-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "39405813fcce4b1a77da82f20a0ad860e8698735c7497627886cc1fbc9ca7143",
          "md5": "edb0ffca6041c0769cecfc497c8ecb5d",
          "sha256": "aee5d5c918b8043d4a10194fb6c19929de349faee7c759de9029709a492682b8"
        },
        "downloads": -1,
        "filename": "matorage-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "edb0ffca6041c0769cecfc497c8ecb5d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 41803,
        "upload_time": "2020-09-08T02:40:00",
        "upload_time_iso_8601": "2020-09-08T02:40:00.971638Z",
        "url": "https://files.pythonhosted.org/packages/39/40/5813fcce4b1a77da82f20a0ad860e8698735c7497627886cc1fbc9ca7143/matorage-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "430788f300a745d1b56d069a8e363f3ff47f8002f78dcd5e96c9e83119fe7edf",
          "md5": "8e8fdece101622d2969f63cd41c14725",
          "sha256": "558826982711e481f93b14310ed96f8c001cfaf1142dd7de367a8b4860b06306"
        },
        "downloads": -1,
        "filename": "matorage-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8e8fdece101622d2969f63cd41c14725",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 80043,
        "upload_time": "2020-09-29T09:38:33",
        "upload_time_iso_8601": "2020-09-29T09:38:33.478783Z",
        "url": "https://files.pythonhosted.org/packages/43/07/88f300a745d1b56d069a8e363f3ff47f8002f78dcd5e96c9e83119fe7edf/matorage-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "69663c1f7cf97067029da5007e2976cac75ae021e2c0c35b2ccfaf6399370c2f",
          "md5": "67fe0b070d31afd220e940dd5310c9a1",
          "sha256": "8bc1901b9a9c7feef6d1e75f322eeff18cbdde5064327b3e62201d2e4adb0674"
        },
        "downloads": -1,
        "filename": "matorage-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "67fe0b070d31afd220e940dd5310c9a1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 42725,
        "upload_time": "2020-09-29T09:38:34",
        "upload_time_iso_8601": "2020-09-29T09:38:34.957473Z",
        "url": "https://files.pythonhosted.org/packages/69/66/3c1f7cf97067029da5007e2976cac75ae021e2c0c35b2ccfaf6399370c2f/matorage-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "430788f300a745d1b56d069a8e363f3ff47f8002f78dcd5e96c9e83119fe7edf",
        "md5": "8e8fdece101622d2969f63cd41c14725",
        "sha256": "558826982711e481f93b14310ed96f8c001cfaf1142dd7de367a8b4860b06306"
      },
      "downloads": -1,
      "filename": "matorage-0.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8e8fdece101622d2969f63cd41c14725",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 80043,
      "upload_time": "2020-09-29T09:38:33",
      "upload_time_iso_8601": "2020-09-29T09:38:33.478783Z",
      "url": "https://files.pythonhosted.org/packages/43/07/88f300a745d1b56d069a8e363f3ff47f8002f78dcd5e96c9e83119fe7edf/matorage-0.3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "69663c1f7cf97067029da5007e2976cac75ae021e2c0c35b2ccfaf6399370c2f",
        "md5": "67fe0b070d31afd220e940dd5310c9a1",
        "sha256": "8bc1901b9a9c7feef6d1e75f322eeff18cbdde5064327b3e62201d2e4adb0674"
      },
      "downloads": -1,
      "filename": "matorage-0.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "67fe0b070d31afd220e940dd5310c9a1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 42725,
      "upload_time": "2020-09-29T09:38:34",
      "upload_time_iso_8601": "2020-09-29T09:38:34.957473Z",
      "url": "https://files.pythonhosted.org/packages/69/66/3c1f7cf97067029da5007e2976cac75ae021e2c0c35b2ccfaf6399370c2f/matorage-0.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}