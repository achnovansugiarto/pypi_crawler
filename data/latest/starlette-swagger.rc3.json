{
  "info": {
    "author": "zpzhou",
    "author_email": "himoker@163.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# starlette-swagger\n\n## requirements:\n* starlette_openapi\n* starlette_pydantic\n\n## usage:\n```python\nfrom typing import Optional\nfrom starlette.routing import Route\nfrom starlette.applications import Starlette\nfrom pydantic import BaseModel, constr\nfrom starlette_pydantic import PydanticEndpoint, BaseForm\nfrom starlette_openapi import OpenApi\nfrom starlette_swagger import SwaggerUI\nfrom starlette.middleware.authentication import AuthenticationMiddleware\nfrom starlette.middleware import Middleware\nfrom starlette.authentication import (\n    AuthenticationBackend, AuthenticationError, SimpleUser, UnauthenticatedUser,\n    AuthCredentials\n)\nfrom starlette_authentication.decorators import requires, token_url\nimport base64\nimport binascii\n\n\nclass RequestBody(BaseModel):\n    name: int\n\n\nclass ResponseBody(BaseModel):\n    age: int\n\n\nclass AuthForm(BaseForm):\n    grant_type: str\n    username: constr(max_length=64, min_length=8)\n    password: constr(max_length=64, min_length=8)\n\n\nclass AuthResponse(BaseModel):\n    access_token: str\n    refresh_token: Optional[str]\n    token_type: str\n\n\nclass BearerAuthBackend(AuthenticationBackend):\n    async def authenticate(self, request):\n        if \"Authorization\" not in request.headers:\n            return\n\n        auth = request.headers[\"Authorization\"]\n        try:\n            scheme, credentials = auth.split()\n            if scheme.lower() != 'bearer':\n                return\n            decoded = base64.b64decode(credentials).decode(\"ascii\")\n        except (ValueError, UnicodeDecodeError, binascii.Error) as exc:\n            raise AuthenticationError('Invalid basic auth credentials')\n\n        username, _, password = decoded.partition(\":\")\n        # TODO: You'd want to verify the username and password here.\n        return AuthCredentials([\"authenticated\"]), SimpleUser(username)\n\n\nclass Auth(PydanticEndpoint):\n    tags = [\"authentication\"]\n\n    @staticmethod\n    @token_url\n    async def post(request, form: AuthForm) -> AuthResponse:\n        return AuthResponse(access_token=\"access token\",\n                            refresh_token=\"refresh token\",\n                            token_type=\"Bearer\")\n\n\nclass UserDetail(PydanticEndpoint):\n    tags = [\"user detail\"]\n\n    @staticmethod\n    @requires('authenticated', status_code=401)\n    async def get(request, username: str = None, page: Optional[str] = None) -> ResponseBody:\n        return ResponseBody(age=11)\n\n\nclass User(PydanticEndpoint):\n    tags = [\"user\"]\n\n    @staticmethod\n    async def post(request, body: RequestBody) -> ResponseBody:\n        return ResponseBody(age=21)\n\n\nroutes = [\n    Route(\"/auth\", Auth),\n    Route(\"/user\", User),\n    Route(\"/user/{username}\", UserDetail),\n]\n\nmiddleware = [\n    Middleware(AuthenticationMiddleware, backend=BearerAuthBackend())\n]\n\napp = Starlette(routes=routes, middleware=middleware)\nopenapi = OpenApi(app, title=\"Demo\", description=\"swagger ui demo.\")\nSwaggerUI(app, openapi)\n\nif __name__ == \"__main__\":\n    import uvicorn\n\n    uvicorn.run(\"test.main:app\", host=\"0.0.0.0\", port=8000, reload=True, debug=True)\n\n```\n\ndocs url: `http://IP:PORT/docs`",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/zpdev/starlette-swagger",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "starlette-swagger",
    "package_url": "https://pypi.org/project/starlette-swagger/",
    "platform": "",
    "project_url": "https://pypi.org/project/starlette-swagger/",
    "project_urls": {
      "Homepage": "https://github.com/zpdev/starlette-swagger"
    },
    "release_url": "https://pypi.org/project/starlette-swagger/0.13/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "swagger ui for starlette",
    "version": "0.13",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9711350,
  "releases": {
    "0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "481bb89bdaee4e9a5f3ca1e1cf45a7fbf710f68535d316a28ca5f17268bcb38d",
          "md5": "a061a0a8d96a4ba82f369145951e41ec",
          "sha256": "cac7e01d97c602f342dc5b79a75b82cc1c51a53e19ac3cccc3d353a9e96b9fed"
        },
        "downloads": -1,
        "filename": "starlette_swagger-0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "a061a0a8d96a4ba82f369145951e41ec",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 340111,
        "upload_time": "2021-03-02T08:54:27",
        "upload_time_iso_8601": "2021-03-02T08:54:27.397153Z",
        "url": "https://files.pythonhosted.org/packages/48/1b/b89bdaee4e9a5f3ca1e1cf45a7fbf710f68535d316a28ca5f17268bcb38d/starlette_swagger-0.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba716f32d98b05fa5289ad29cfc81df15af7218ec360dbfa569c4cd4c139e338",
          "md5": "1b69f5be1a0ea24cca501c663f1fc55e",
          "sha256": "675572001ac05d027f75ff5769996039b55f875ebc9ad2db8effdbc83b32d52d"
        },
        "downloads": -1,
        "filename": "starlette_swagger-0.12.tar.gz",
        "has_sig": false,
        "md5_digest": "1b69f5be1a0ea24cca501c663f1fc55e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 340842,
        "upload_time": "2021-03-02T08:58:29",
        "upload_time_iso_8601": "2021-03-02T08:58:29.576422Z",
        "url": "https://files.pythonhosted.org/packages/ba/71/6f32d98b05fa5289ad29cfc81df15af7218ec360dbfa569c4cd4c139e338/starlette_swagger-0.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d6de301bbbd9f6cd19ad72ec097423fab2ff323b1f788f8f6bc7094ed21f775",
          "md5": "0cf15935485a20da7e0186f3d1973ba1",
          "sha256": "70284c12b490609fac71d73454bf7ce8c90375aaae912ba780e7ba2ff160cba1"
        },
        "downloads": -1,
        "filename": "starlette_swagger-0.13.tar.gz",
        "has_sig": false,
        "md5_digest": "0cf15935485a20da7e0186f3d1973ba1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 342356,
        "upload_time": "2021-03-09T05:47:18",
        "upload_time_iso_8601": "2021-03-09T05:47:18.061288Z",
        "url": "https://files.pythonhosted.org/packages/1d/6d/e301bbbd9f6cd19ad72ec097423fab2ff323b1f788f8f6bc7094ed21f775/starlette_swagger-0.13.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1d6de301bbbd9f6cd19ad72ec097423fab2ff323b1f788f8f6bc7094ed21f775",
        "md5": "0cf15935485a20da7e0186f3d1973ba1",
        "sha256": "70284c12b490609fac71d73454bf7ce8c90375aaae912ba780e7ba2ff160cba1"
      },
      "downloads": -1,
      "filename": "starlette_swagger-0.13.tar.gz",
      "has_sig": false,
      "md5_digest": "0cf15935485a20da7e0186f3d1973ba1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 342356,
      "upload_time": "2021-03-09T05:47:18",
      "upload_time_iso_8601": "2021-03-09T05:47:18.061288Z",
      "url": "https://files.pythonhosted.org/packages/1d/6d/e301bbbd9f6cd19ad72ec097423fab2ff323b1f788f8f6bc7094ed21f775/starlette_swagger-0.13.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}