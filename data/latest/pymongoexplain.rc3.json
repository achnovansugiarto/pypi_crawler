{
  "info": {
    "author": "Julius Park",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Database"
    ],
    "description": "==============\nPyMongoExplain\n==============\n\n:Info: Explain collections in PyMongo. See\n       `GitHub <https://github.com/mongodb-labs/pymongoexplain>`_\n       for the latest source.\n:Author: Julius Park\n\nAbout\n=====\nThis package provides an ``ExplainableCollection`` class that allows PyMongo's Collection methods to be explained_\n\nPyMongoExplain greatly simplifies the amount of effort needed to explain commands.\nFor example, suppose we wanted to explain the following ``update_one``::\n\n    collection.update_one({\"quantity\": 1057, \"category\": \"apparel\"},{\"$set\": {\"reorder\": True}})\n\n\nBefore PyMongoExplain, one would need to convert the update_one into the equivalent MongoDB command::\n\n    collection.database.command(SON([('explain', SON([('update', 'products'), ('updates', [{'q': {'quantity': 1057, 'category': 'apparel'}, 'upsert': False, 'multi': False, 'u': {'$set': {'reorder': True}}}])])), ('verbosity', 'queryPlanner')]))\n\n\nAfter PyMongoExplain::\n\n    ExplainableCollection(collection).update_one({\"quantity\": 1057, \"category\": \"apparel\"},{\"$set\": {\"reorder\": True}})\n\n.. _explained: https://docs.mongodb.com/master/reference/command/explain/#dbcmd.explain.\n\nInstallation\n============\n\nTo install this package simply use pip::\n\n    pip install pymongoexplain\n\nSupport / Feedback\n==================\n\nFor questions, discussions, or general technical support, visit the `MongoDB Community Forums <https://developer.mongodb.com/community/forums/tag/python>`_.\nThe MongoDB Community Forums are a centralized place to connect with other MongoDB users, ask questions, and get answers.\n\nBugs / Feature Requests\n=======================\n\nThink youâ€™ve found a bug? Want to see a new feature in PyMongoExplain?\nPlease open an issue on this `GitHub repository <https://github.com/mongodb-labs/pymongoexplain>`_.\n\nHow To Ask For Help\n-------------------\n\nPlease include all of the following information when opening an issue:\n\n- Detailed steps to reproduce the problem, including full traceback, if possible.\n- The exact python version used, with patch level::\n\n  $ python -c \"import sys; print(sys.version)\"\n\n- The exact version of PyMongo used (if applicable), with patch level::\n\n  $ python -c \"import pymongo; print(pymongo.version); print(pymongo.has_c())\"\n\n- The exact version of PyMongoExplain used::\n\n  $ python -c \"import pymongoexplain; print(pymongoexplain.version)\"\n\n\nDependencies\n============\n\nPyMongoExplain requires CPython 3.5+, and PyPy3.5+.\n\nPyMongoExplain requires `PyMongo>=3.10,<4 <https://github.com/mongodb/mongo-python-driver/>`_\n\nTesting\n=======\n\nThe easiest way to run the tests is to run **python setup.py test** in\nthe root of the distribution.\n\nTutorial\n========\n\nPyMongo operations in existing application code can be explained by swapping ``Collection`` objects with ``ExplainableCollection``\nobjects. The ``ExplainableCollection`` class provides all CRUD API methods provided by PyMongo's ``Collection``,\nbut using this class to run operations runs explain on them, instead of executing them.\n\nTo run explain on a command, first instantiate an ``ExplainableCollection`` from the ``Collection`` object originally used to run the command::\n\n    from pymongoexplain import ExplainableCollection\n\n    collection = client.db.products\n    explain = ExplainableCollection(collection)\n\nIf you wish to configure the options for the explain command itself, pass\nthem to the ``ExplainableCollection`` constructor like so::\n\n    explain = ExplainableCollection(collection, verbosity=\"queryPlanner\",\n                                    comment=\"I'm a comment\")\n\nFor more information see the documentation for the explain_ command.\n\n.. _explain: https://docs.mongodb.com/master/reference/command/explain/#dbcmd.explain.\n\nNow you are ready to explain some commands. Remember that explaining a command does not execute it::\n\n    result = explain.update_one({\"quantity\": 1057, \"category\": \"apparel\"}, {\"$set\": {\"reorder\": True}})\n\nNow ``result`` will contain the output of running explain on the given ``update_one`` command::\n\n    {'ok': 1.0,\n     'operationTime': Timestamp(1595603051, 3),\n     'queryPlanner': {'indexFilterSet': False,\n                      'namespace': 'db.products',\n                      'parsedQuery': {'$and': [{'category': {'$eq': 'apparel'}},\n                                               {'quantity': {'$eq': 1057}}]},\n                      'planCacheKey': 'CD8F6D8F',\n                      'plannerVersion': 1,\n                      'queryHash': 'CD8F6D8F',\n                      'rejectedPlans': [],\n                      'winningPlan': {'inputStage': {'direction': 'forward',\n                                                     'filter': {'$and': [{'category': {'$eq': 'apparel'}},\n                                                                         {'quantity': {'$eq': 1057}}]},\n                                                     'stage': 'COLLSCAN'},\n                                      'stage': 'UPDATE'}},\n     'serverInfo': {'gitVersion': '27f5c1ee9f513f29fe30b8ebefed99581428c6e1',\n                    'host': 'Juliuss-MBP.verizon.net',\n                    'port': 27017,\n                    'version': '4.4.0-rc13'}}\n\n\nSince ``ExplainableCollection`` instances provide all the same methods provided by ``Collection`` instances, explaining operations in your application code is a simple matter of replacing ``Collection`` instances in your application code with ``ExplainableCollection`` instances.\n\n\nExplaining commands in a script\n-------------------------------\n\nYou can also run explain on all commands within a Python script using our CLI tool.\nGiven a script that contains ``pymongo`` commands within it, you can simply run::\n\n    python3 -m pymongoexplain <path/to/your/script.py>\n\nThis will log the explain output for every single command\nwithin the specified script, **in addition to running every command** in the script itself. Do note that because the\nexplain output is generated using the `logging <https://docs.python.org/3/library/logging.html>`_ module,\nif your script configures logging module there are certain things to keep in mind:\n\n- if your script sets the `logging level <https://docs.python.org/3/library/logging.html#logging-levels>`_ higher than INFO, the explain output will be suppressed entirely.\n- the explain output will be sent to whatever stream your script configures the logging module to send output to.\n\nAny positional parameters or arguments required by your script can be\nsimply be appended to the invocation as follows::\n\n    python3 -m pymongoexplain <path/to/your/script.py> [PARAMS] [--optname OPTS]\n\n\nLimitations\n-----------\n\nThis package does not support the fluent `Cursor API <https://pymongo.readthedocs.io/en/stable/api/pymongo/cursor.html>`_,\nso if you attempt to use it like so::\n\n    ExplainableCollection(collection).find({}).sort(...)\n\nInstead pass all the arguments to the find() call, like so::\n\n    ExplainableCollection(collection).find({}, sort=...)\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mongodb-labs/pymongoexplain",
    "keywords": "mongo,mongodb,pymongo",
    "license": "Apache License, Version 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pymongoexplain",
    "package_url": "https://pypi.org/project/pymongoexplain/",
    "platform": "",
    "project_url": "https://pypi.org/project/pymongoexplain/",
    "project_urls": {
      "Homepage": "https://github.com/mongodb-labs/pymongoexplain"
    },
    "release_url": "https://pypi.org/project/pymongoexplain/1.2.0/",
    "requires_dist": [
      "pymongo (>=3.10)"
    ],
    "requires_python": ">=3.5",
    "summary": "Explainable CRUD API for PyMongo",
    "version": "1.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12508656,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b407a33db3aabe6fdbed8eb8f70ccc2c0dc4e55ab51e20c3b0776352b1f23ad",
          "md5": "92d3536d4f018e549fdf71afe1f74c36",
          "sha256": "ae66fbfd05106aa314de5fe557a4b93e7c63e983b3bd2d0fd04f89e3eb161ed5"
        },
        "downloads": -1,
        "filename": "pymongoexplain-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "92d3536d4f018e549fdf71afe1f74c36",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 15005,
        "upload_time": "2020-07-30T18:52:56",
        "upload_time_iso_8601": "2020-07-30T18:52:56.686950Z",
        "url": "https://files.pythonhosted.org/packages/2b/40/7a33db3aabe6fdbed8eb8f70ccc2c0dc4e55ab51e20c3b0776352b1f23ad/pymongoexplain-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b409733dd8c0c539f36b53d02fc9b5ec21a652a6a7a57d4c5d96aa450e4f5ee",
          "md5": "a7a4bc8b7a740962ce5ec625017d43cf",
          "sha256": "71d90dcd8486c78815cd06afd981990f8c27b7f190318124176c4e1146189ba3"
        },
        "downloads": -1,
        "filename": "pymongoexplain-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a7a4bc8b7a740962ce5ec625017d43cf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 11932,
        "upload_time": "2020-07-30T18:52:59",
        "upload_time_iso_8601": "2020-07-30T18:52:59.049122Z",
        "url": "https://files.pythonhosted.org/packages/2b/40/9733dd8c0c539f36b53d02fc9b5ec21a652a6a7a57d4c5d96aa450e4f5ee/pymongoexplain-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "72f694c10ad313e4458b7d25b8c2041aa9e4e3e85b45f09f8fc92b1937e46ea2",
          "md5": "a9fecf14a144cd609ab9539a42bd590f",
          "sha256": "a3f7c933b237693fffdd19ba673406ff01dd5346adace04422b42381242facb1"
        },
        "downloads": -1,
        "filename": "pymongoexplain-1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a9fecf14a144cd609ab9539a42bd590f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 15453,
        "upload_time": "2020-08-13T18:47:43",
        "upload_time_iso_8601": "2020-08-13T18:47:43.486232Z",
        "url": "https://files.pythonhosted.org/packages/72/f6/94c10ad313e4458b7d25b8c2041aa9e4e3e85b45f09f8fc92b1937e46ea2/pymongoexplain-1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa23fe78c8e8f877793fdd4a030d0c3bb7142846052f6af3160ac160aeb4a6c0",
          "md5": "5cf1843f929349a0eb1456c95409f7e9",
          "sha256": "a86c8bebf99e92e7db21c3dce2a959ac2bc0b8969417631273d7a32221b4d427"
        },
        "downloads": -1,
        "filename": "pymongoexplain-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5cf1843f929349a0eb1456c95409f7e9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 13678,
        "upload_time": "2020-08-13T18:47:44",
        "upload_time_iso_8601": "2020-08-13T18:47:44.906777Z",
        "url": "https://files.pythonhosted.org/packages/aa/23/fe78c8e8f877793fdd4a030d0c3bb7142846052f6af3160ac160aeb4a6c0/pymongoexplain-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "63a2948b4ae10a6890725f067a75626d5b4b480ce93d35e2ee26dee43bbfc67d",
          "md5": "86a0b245753c641ecc67088d6173d00a",
          "sha256": "b464a4a6fbc34269e7f61f283c3bd84bb20db10c5dc2ffc954632767b8129e4f"
        },
        "downloads": -1,
        "filename": "pymongoexplain-1.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "86a0b245753c641ecc67088d6173d00a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 15660,
        "upload_time": "2022-01-07T21:23:19",
        "upload_time_iso_8601": "2022-01-07T21:23:19.135183Z",
        "url": "https://files.pythonhosted.org/packages/63/a2/948b4ae10a6890725f067a75626d5b4b480ce93d35e2ee26dee43bbfc67d/pymongoexplain-1.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e364fcef55a6e392cc9ba9e3641de1eca6dda5860fe296cf0bb14d5fc8f2fa4a",
          "md5": "e0cf4cf0ca3b3952569e35a5959b4bb8",
          "sha256": "c6a4743fd1818467f7418363e91a83c2532026869efd820e894ea9f3c32dff5a"
        },
        "downloads": -1,
        "filename": "pymongoexplain-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e0cf4cf0ca3b3952569e35a5959b4bb8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 17370,
        "upload_time": "2022-01-07T21:23:20",
        "upload_time_iso_8601": "2022-01-07T21:23:20.651674Z",
        "url": "https://files.pythonhosted.org/packages/e3/64/fcef55a6e392cc9ba9e3641de1eca6dda5860fe296cf0bb14d5fc8f2fa4a/pymongoexplain-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "63a2948b4ae10a6890725f067a75626d5b4b480ce93d35e2ee26dee43bbfc67d",
        "md5": "86a0b245753c641ecc67088d6173d00a",
        "sha256": "b464a4a6fbc34269e7f61f283c3bd84bb20db10c5dc2ffc954632767b8129e4f"
      },
      "downloads": -1,
      "filename": "pymongoexplain-1.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "86a0b245753c641ecc67088d6173d00a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 15660,
      "upload_time": "2022-01-07T21:23:19",
      "upload_time_iso_8601": "2022-01-07T21:23:19.135183Z",
      "url": "https://files.pythonhosted.org/packages/63/a2/948b4ae10a6890725f067a75626d5b4b480ce93d35e2ee26dee43bbfc67d/pymongoexplain-1.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e364fcef55a6e392cc9ba9e3641de1eca6dda5860fe296cf0bb14d5fc8f2fa4a",
        "md5": "e0cf4cf0ca3b3952569e35a5959b4bb8",
        "sha256": "c6a4743fd1818467f7418363e91a83c2532026869efd820e894ea9f3c32dff5a"
      },
      "downloads": -1,
      "filename": "pymongoexplain-1.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e0cf4cf0ca3b3952569e35a5959b4bb8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 17370,
      "upload_time": "2022-01-07T21:23:20",
      "upload_time_iso_8601": "2022-01-07T21:23:20.651674Z",
      "url": "https://files.pythonhosted.org/packages/e3/64/fcef55a6e392cc9ba9e3641de1eca6dda5860fe296cf0bb14d5fc8f2fa4a/pymongoexplain-1.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}