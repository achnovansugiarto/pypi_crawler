{
  "info": {
    "author": "George Mihaila",
    "author_email": "georgemihaila@my.unt.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "# Machine Learning Things\n\n[![ml_things](https://circleci.com/gh/gmihaila/ml_things.svg?style=shield)](https://app.circleci.com/pipelines/github/gmihaila/ml_things)\n[![Generic badge](https://img.shields.io/badge/Working-Progress-red.svg)]()\n[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)\n[![Generic badge](https://img.shields.io/badge/Updated-July_2021-yellow.svg)]()\n[![Generic badge](https://img.shields.io/badge/Website-Online-green.svg)](https://gmihaila.github.io/ml_things/)\n[![pages-build-deployment](https://github.com/gmihaila/ml_things/actions/workflows/pages/pages-build-deployment/badge.svg)](https://github.com/gmihaila/ml_things/actions/workflows/pages/pages-build-deployment)\n\n\n\n\n\n**Machine Learning Things** is a lightweight python library that contains functions and code snippets that \nI use in my everyday research with Machine Learning, Deep Learning, NLP.\n\nI created this repo because I was tired of always looking up same code from older projects and I wanted to gain some experience in building a Python library. \nBy making this available to everyone it gives me easy access to code I use frequently and it can help others in their machine learning work. \nIf you find any bugs or something doesn't make sense please feel free to open an issue.\n\nThat is not all! This library also contains Python code snippets and notebooks that speed up my Machine Learning workflow.\n\n **Note:** \n * <s> *If I reach 100 stars I will release the first official version and add it to the pip install modules!* </s>\n * **Update:** `July 16, 2021` Thank you all for your support and kidness! As I promissed I will move this repo to pip install modules.\n\n# Table of contents\n\n* **[ML_things](https://github.com/gmihaila/ml_things#ml_things)**: \n    * **[Installation](https://github.com/gmihaila/ml_things#installation)** Details on how to install **ml_things**.\n    * **[Array Functions](https://github.com/gmihaila/ml_things#array-functions)** Details on the **ml_things** array related functions:\n        * [pad_array](https://github.com/gmihaila/ml_things#pad_array-source)\n        * [batch_array](https://github.com/gmihaila/ml_things#batch_array-source)\n    * **[Plot Functions](https://github.com/gmihaila/ml_things#plot-functions)** Details on the **ml_things** plot related functions:\n        * [plot_array](https://github.com/gmihaila/ml_things#plot_array-source)\n        * [plot_dict](https://github.com/gmihaila/ml_things#plot_dict-source)\n        * [plot_confusion_matrix](https://github.com/gmihaila/ml_things#plot_confusion_matrix-source)\n    * **[Text Functions](https://github.com/gmihaila/ml_things#text-functions)** Details on the **ml_things** text related functions:\n        * [clean_text](https://github.com/gmihaila/ml_things#clean_text-source)\n    * **[Web Related](https://github.com/gmihaila/ml_things#web-related)** Details on the **ml_things** web related functions:\n        * [download_from](https://github.com/gmihaila/ml_things#download_from-source)\n\n* **[Snippets](https://github.com/gmihaila/ml_things#snippets)**: Curated list of Python snippets I frequently use.\n\n* **[Comments](https://github.com/gmihaila/ml_things#comments)**: Sample on how I like to comment my code. It is still a work in progress.\n\n* **[Notebooks Tutorials](https://github.com/gmihaila/ml_things#notebooks-tutorials)**: Machine learning projects that I converted to tutorials and posted online.\n\n* **[Final Note](https://github.com/gmihaila/ml_things#final-note)**: Being grateful.\n\n<br/>\n\n# ML_things\n\n## Installation\n\nThis repo is tested with Python 3.6+.\n\nIt's always good practice to install `ml_things` in a [virtual environment](https://docs.python.org/3/library/venv.html). If you guidance on using Python's virtual environments you can check out the user guide [here](https://packaging.python.org/guides/installing-using-pip-and-virtual-environments/).\n\nYou can install `ml_things` with pip from GitHub:\n\n```bash\npip install git+https://github.com/gmihaila/ml_things\n```\n\n## Functions\n\nAll function implemented in the **ml_things** module.\n\n### Array Functions\n\nArray manipulation related function that can be useful when working with machine learning.\n\n#### pad_array [[source]](https://github.com/gmihaila/ml_things/blob/master/src/ml_things/array_functions.py#L21)\n\nPad variable length array to a fixed numpy array. It can handle single arrays [1,2,3] or nested arrays [[1,2],[3]].\n    \nBy default it will padd zeros to the maximum length of row detected:\n\n```python\n>>> from ml_things import pad_array\n>>> pad_array(variable_length_array=[[1,2],[3],[4,5,6]])\narray([[1., 2., 0.],\n       [3., 0., 0.],\n       [4., 5., 6.]])\n```\n\nIt can also pad to a custom size and with cusotm values:\n\n```python\n>>> pad_array(variable_length_array=[[1,2],[3],[4,5,6]], fixed_length=5, pad_value=99)\narray([[ 1.,  2., 99., 99., 99.],\n       [ 3., 99., 99., 99., 99.],\n       [ 4.,  5.,  6., 99., 99.]])\n```\n       \n#### batch_array [[source]](https://github.com/gmihaila/ml_things/blob/master/src/ml_things/array_functions.py#L120)\n\nSplit a list into batches/chunks. Last batch size is remaining of list values.\n**Note:** *This is also called chunking. I call it batches since I use it more in ML.*\n\nThe last batch will be the reamining values:\n\n```python\n>>> from ml_things import batch_array\n>>> batch_array(list_values=[1,2,3,4,5,6,7,8,8,9,8,6,5,4,6], batch_size=4)\n[[1, 2, 3, 4], [5, 6, 7, 8], [8, 9, 8, 6], [5, 4, 6]]\n```\n\n### Plot Functions\n\nPlot related function that can be useful when working with machine learning.\n\n\n#### plot_array [[source]](https://github.com/gmihaila/ml_things/blob/master/src/ml_things/plot_functions.py#L29)\n\nCreate plot from a single array of values.\n\nAll arguments are optimized for quick plots. Change the `magnify` arguments to vary the size of the plot:\n\n```python\n>>> from ml_things import plot_array\n>>> plot_array([1,3,5,3,7,5,8,10], path='plot_array.png', magnify=0.1, use_title='A Random Plot', start_step=0.3, step_size=0.1, points_values=True, use_ylabel='Thid', use_xlabel='This')\n```\n\n![plot_array](https://github.com/gmihaila/ml_things/blob/master/tests/test_samples/plot_array.png)\n\n\n#### plot_dict [[source]](https://github.com/gmihaila/ml_things/blob/master/src/ml_things/plot_functions.py#L275)\n\nCreate plot from a single array of values.\n\nAll arguments are optimized for quick plots. Change the `magnify` arguments to vary the size of the plot:\n\n```python\n>>> from ml_things import plot_dict\n>>> plot_dict({'train_acc':[1,3,5,3,7,5,8,10],\n                'valid_acc':[4,8,9]}, use_linestyles=['-', '--'], magnify=0.1, \n                start_step=0.3, step_size=0.1,path='plot_dict.png', points_values=[True, False], use_title='Title')\n```\n\n![plot_dict](https://github.com/gmihaila/ml_things/blob/master/tests/test_samples/plot_dict.png)\n\n\n#### plot_confusion_matrix [[source]](https://github.com/gmihaila/ml_things/blob/master/src/ml_things/plot_functions.py#L529)\n\nThis function prints and plots the confusion matrix. Normalization can be applied by setting `normalize=True`.\n\nAll arguments are optimized for quick plots. Change the `magnify` arguments to vary the size of the plot:\n\n```python\n>>> from ml_things import plot_confusion_matrix\n>>> plot_confusion_matrix(y_true=[1,0,1,1,0,1], y_pred=[0,1,1,1,0,1], magnify=0.1, use_title='My Confusion Matrix', path='plot_confusion_matrix.png');\nConfusion matrix, without normalization\narray([[1, 1],\n       [1, 3]])\n```\n\n![plot_confusion_matrix](https://github.com/gmihaila/ml_things/blob/master/tests/test_samples/plot_confusion_matrix.png)\n\n### Text Functions\n\nText related function that can be useful when working with machine learning.\n\n\n#### clean_text [[source]](https://github.com/gmihaila/ml_things/blob/master/src/ml_things/text_functions.py#L22)\n\nClean text using various techniques:\n\n```python\n>>> from ml_things import clean_text\n>>> clean_text(\"ThIs is $$$%.  \\t\\t\\n \\\\ so dirtyyy$$ text :'(.   omg!!!\", full_clean=True)\n'this is so dirtyyy text omg'\n```\n\n### Web Related\n\nWeb related function that can be useful when working with machine learning.\n\n#### download_from [[source]](https://github.com/gmihaila/ml_things/blob/master/src/ml_things/web_related.py#L21)\n\nDownload file from url. It will return the path of the downloaded file:\n\n```python\n>>> from ml_things import  download_from\n>>> download_from(url='https://raw.githubusercontent.com/gmihaila/ml_things/master/setup.py', path='.')\n'./setup.py'\n```\n\n<br>\n\n# Snippets\n\nThis is a very large variety of Python snippets without a certain theme. I put them in the most frequently used ones while keeping a logical order.\nI like to have them as simple and as efficient as possible.\n\n| Name | Description |\n|:-|:-|\n| [Read FIle](https://gmihaila.github.io/useful/useful/#read-file)     \t| One liner to read any file.\n| [Write File](https://gmihaila.github.io/useful/useful/#write-file) \t       | One liner to write a string to a file.\n| [Debug](https://gmihaila.github.io/useful/useful/#debug)         \t| Start debugging after this line.\n| [Pip Install GitHub](https://gmihaila.github.io/useful/useful/#pip-install-github)\t| Install library directly from GitHub using `pip`.\n| [Parse Argument](https://gmihaila.github.io/useful/useful/#parse-argument)     | Parse arguments given when running a `.py` file.\n| [Doctest](https://gmihaila.github.io/useful/useful/#doctest)      | How to run a simple unittesc using function documentaiton. Useful when need to do unittest inside notebook.\n| [Fix Text](https://gmihaila.github.io/useful/useful/#fix-text) | Since text data is always messy, I always use it. It is great in fixing any bad Unicode.\n| [Current Date](https://gmihaila.github.io/useful/useful/#current-date)     | How to get current date in Python. I use this when need to name log files.\n| [Current Time](https://gmihaila.github.io/useful/useful/#current-time) | Get current time in Python.\n| [Remove Punctuation](https://gmihaila.github.io/useful/useful/#remove-punctuation)        | The fastest way to remove punctuation in Python3.\n| [PyTorch-Dataset](https://gmihaila.github.io/useful/useful/#dataset)       | Code sample on how to create a PyTorch Dataset.\n| [PyTorch-Device](https://gmihaila.github.io/useful/useful/#pytorch-device)        | How to setup device in PyTorch to detect if GPU is available.\n\n<br>\n\n# Comments\n\nThese are a few snippets of how I like to comment my code. I saw a lot of different ways of how people comment their code. One thing is for sure: *any comment is better than no comment*.\n\nI try to follow as much as I can the [PEP 8 — the Style Guide for Python Code](https://pep8.org/#code-lay-out).\n\nWhen I comment a function or class:\n```python\n# required import for variables type declaration\nfrom typing import List, Optional, Tuple, Dict\n\ndef my_function(function_argument: str, another_argument: Optional[List[int]] = None,\n                another_argument_: bool = True) -> Dict[str, int]\n       r\"\"\"Function/Class main comment. \n\n       More details with enough spacing to make it easy to follow.\n\n       Arguments:\n       \n              function_argument (:obj:`str`):\n                     A function argument description.\n                     \n              another_argument (:obj:`List[int]`, `optional`):\n                     This argument is optional and it will have a None value attributed inside the function.\n                     \n              another_argument_ (:obj:`bool`, `optional`, defaults to :obj:`True`):\n                     This argument is optional and it has a default value.\n                     The variable name has `_` to avoid conflict with similar name.\n                     \n       Returns:\n       \n              :obj:`Dict[str: int]`: The function returns a dicitonary with string keys and int values.\n                     A class will not have a return of course.\n\n       \"\"\"\n       \n       # make sure we keep out promise and return the variable type we described.\n       return {'argument': function_argument}\n```\n\n\n<br>\n\n# Notebooks Tutorials\n\nThis is where I keep notebooks of some previous projects which I turnned them into small tutorials. A lot of times I use them as basis for starting a new project.\n\nAll of the notebooks are in **Google Colab**. Never heard of Google Colab? :scream_cat: You have to check out the [Overview of Colaboratory](https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=&ved=2ahUKEwiD1aD06trrAhVRXK0KHRC4DgQQjBAwBHoECAYQBA&url=https%3A%2F%2Fcolab.research.google.com%2Fnotebooks%2Fbasic_features_overview.ipynb&usg=AOvVaw0gXOkR6JGGFlwsxrkuYm7F), [Introduction to Colab and Python](https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=&ved=2ahUKEwiD1aD06trrAhVRXK0KHRC4DgQQjBAwA3oECAYQCg&url=https%3A%2F%2Fcolab.research.google.com%2Fgithub%2Ftensorflow%2Fexamples%2Fblob%2Fmaster%2Fcourses%2Fudacity_intro_to_tensorflow_for_deep_learning%2Fl01c01_introduction_to_colab_and_python.ipynb&usg=AOvVaw2pr-crqP30RHfDs7hjKNnc) and what I think is a great medium article about it [to configure Google Colab Like a Pro](https://medium.com/@robertbracco1/configuring-google-colab-like-a-pro-d61c253f7573).\n\nIf you check the `/ml_things/notebooks/` a lot of them are not listed here because they are not in a 'polished' form yet. These are the notebooks that are good enough to share with everyone:\n\n| Name \t| Description \t| Links \t|\n|:- |:- |:- |\n| **:grapes: Better Batches with PyTorchText BucketIterator** | *How to use PyTorchText BucketIterator to sort text data for better batching.* |[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/gmihaila/ml_things/blob/master/notebooks/pytorch/pytorchtext_bucketiterator.ipynb) [![Generic badge](https://img.shields.io/badge/GitHub-Source-greensvg)](https://github.com/gmihaila/ml_things/blob/master/notebooks/pytorch/pytorchtext_bucketiterator.ipynb) [![Generic badge](https://img.shields.io/badge/Download-Notebook-red.svg)](https://www.dropbox.com/s/7gyq6qup6y43z9b/pytorchtext_bucketiterator.ipynb?dl=1) [![Generic badge](https://img.shields.io/badge/Article-Medium-black.svg)](https://gmihaila.medium.com/better-batches-with-pytorchtext-bucketiterator-12804a545e2a) [![Generic badge](https://img.shields.io/badge/Blog-Post-blue.svg)](https://gmihaila.github.io/tutorial_notebooks/pytorchtext_bucketiterator/) |\n| **:dog: Pretrain Transformers Models in PyTorch using Hugging Face Transformers** | *Pretrain 67 transformers models on your custom dataset.* |[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/gmihaila/ml_things/blob/master/notebooks/pytorch/pretrain_transformers_pytorch.ipynb) [![Generic badge](https://img.shields.io/badge/GitHub-Source-greensvg)](https://github.com/gmihaila/ml_things/blob/master/notebooks/pytorch/pretrain_transformers_pytorch.ipynb) [![Generic badge](https://img.shields.io/badge/Download-Notebook-red.svg)](https://www.dropbox.com/s/rkq79hwzhqa6x8k/pretrain_transformers_pytorch.ipynb?dl=1) [![Generic badge](https://img.shields.io/badge/Article-Medium-black.svg)](https://gmihaila.medium.com/pretrain-transformers-models-in-pytorch-using-transformers-ecaaec00fbaa) [![Generic badge](https://img.shields.io/badge/Blog-Post-blue.svg)](https://gmihaila.github.io/tutorial_notebooks/pretrain_transformers_pytorch/) |\n| **:violin: Fine-tune Transformers in PyTorch using Hugging Face Transformers** | *Complete tutorial on how to fine-tune 73 transformer models for text classification — no code changes necessary!* |[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/gmihaila/ml_things/blob/master/notebooks/pytorch/finetune_transformers_pytorch.ipynb) [![Generic badge](https://img.shields.io/badge/GitHub-Source-greensvg)](https://github.com/gmihaila/ml_things/blob/master/notebooks/pytorch/finetune_transformers_pytorch.ipynb) [![Generic badge](https://img.shields.io/badge/Download-Notebook-red.svg)](https://www.dropbox.com/s/tsqicfqgt8v87ae/finetune_transformers_pytorch.ipynb?dl=1) [![Generic badge](https://img.shields.io/badge/Article-Medium-black.svg)](https://medium.com/@gmihaila/fine-tune-transformers-in-pytorch-using-transformers-57b40450635) [![Generic badge](https://img.shields.io/badge/Blog-Post-blue.svg)](https://gmihaila.github.io/tutorial_notebooks/finetune_transformers_pytorch/)|\n| **⚙️ Bert Inner Workings in PyTorch using Hugging Face Transformers** | *Complete tutorial on how an input flows through Bert.* |[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/gmihaila/ml_things/blob/master/notebooks/pytorch/bert_inner_workings.ipynb) [![Generic badge](https://img.shields.io/badge/GitHub-Source-greensvg)](https://github.com/gmihaila/ml_things/blob/master/notebooks/pytorch/bert_inner_workings.ipynb) [![Generic badge](https://img.shields.io/badge/Download-Notebook-red.svg)](https://www.dropbox.com/s/jeftyo6cebfkma2/bert_inner_workings.ipynb?dl=1) [![Generic badge](https://img.shields.io/badge/Article-Medium-black.svg)](https://gmihaila.medium.com/%EF%B8%8F-bert-inner-workings-1c3054cd1591) [![Generic badge](https://img.shields.io/badge/Blog-Post-blue.svg)](https://gmihaila.github.io/tutorial_notebooks/bert_inner_workings/)|\n| **🎱 GPT2 For Text Classification using Hugging Face 🤗 Transformers** | *Complete tutorial on how to use GPT2 for text classification.* |[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/gmihaila/ml_things/blob/master/notebooks/pytorch/gpt2_finetune_classification.ipynb) [![Generic badge](https://img.shields.io/badge/GitHub-Source-greensvg)](https://github.com/gmihaila/ml_things/blob/master/notebooks/pytorch/gpt2_finetune_classification.ipynb) [![Generic badge](https://img.shields.io/badge/Download-Notebook-red.svg)](https://www.dropbox.com/s/6t6kvlewoabwxqw/gpt2_finetune_classification.ipynb?dl=1) [![Generic badge](https://img.shields.io/badge/Article-Medium-black.svg)](https://gmihaila.medium.com/gpt2-for-text-classification-using-hugging-face-transformers-574555451832) [![Generic badge](https://img.shields.io/badge/Blog-Post-blue.svg)](https://gmihaila.github.io/tutorial_notebooks/gpt2_finetune_classification/)|\n\n\n<br>\n\n# Final Note\n\nThank you for checking out my repo. I am a perfectionist so I will do a lot of changes when it comes to small details. \n\nIf you see something wrong please let me know by opening an \n**[issue on my ml_things](https://github.com/gmihaila/ml_things/issues/new/choose)** GitHub repository! \n\nA lot of tutorials out there are mostly a one-time thing and are not being maintained. I plan on keeping my \ntutorials up to date as much as I can.\n\n<br>\n\n## **Contact** 🎣\n\n🦊 GitHub: [gmihaila](https://github.com/gmihaila)\n\n🌐 Website: [gmihaila.github.io](https://gmihaila.github.io/)\n\n👔 LinkedIn: [mihailageorge](https://medium.com/r/?url=https%3A%2F%2Fwww.linkedin.com%2Fin%2Fmihailageorge)\n\n📬 Email: [georgemihaila@my.unt.edu.com](mailto:georgemihaila@my.unt.edu.com?subject=GitHub%20Website)\n\n<br>",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/gmihaila/ml_things",
    "keywords": "NLP deep learning pytorch tensorflow numpy",
    "license": "Apache",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ml-things",
    "package_url": "https://pypi.org/project/ml-things/",
    "platform": "",
    "project_url": "https://pypi.org/project/ml-things/",
    "project_urls": {
      "Homepage": "https://github.com/gmihaila/ml_things"
    },
    "release_url": "https://pypi.org/project/ml-things/0.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.6.0",
    "summary": "Useful functions when working with Machine Learning in Python",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12798199,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "94cb8150ebb422e366d9922a0f7281caedfc391f9ec9f5a4a6e830cb331a8859",
          "md5": "89ae2afce8f4564d360379facbd09c9e",
          "sha256": "f642a81eef94f433b5b4a5b9326b7afc69a40c033d6a3edc704ee499bacaa1d2"
        },
        "downloads": -1,
        "filename": "ml_things-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "89ae2afce8f4564d360379facbd09c9e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 8132366,
        "upload_time": "2022-02-05T21:21:57",
        "upload_time_iso_8601": "2022-02-05T21:21:57.434118Z",
        "url": "https://files.pythonhosted.org/packages/94/cb/8150ebb422e366d9922a0f7281caedfc391f9ec9f5a4a6e830cb331a8859/ml_things-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "94cb8150ebb422e366d9922a0f7281caedfc391f9ec9f5a4a6e830cb331a8859",
        "md5": "89ae2afce8f4564d360379facbd09c9e",
        "sha256": "f642a81eef94f433b5b4a5b9326b7afc69a40c033d6a3edc704ee499bacaa1d2"
      },
      "downloads": -1,
      "filename": "ml_things-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "89ae2afce8f4564d360379facbd09c9e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.0",
      "size": 8132366,
      "upload_time": "2022-02-05T21:21:57",
      "upload_time_iso_8601": "2022-02-05T21:21:57.434118Z",
      "url": "https://files.pythonhosted.org/packages/94/cb/8150ebb422e366d9922a0f7281caedfc391f9ec9f5a4a6e830cb331a8859/ml_things-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}