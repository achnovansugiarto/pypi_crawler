{
  "info": {
    "author": "",
    "author_email": "myujiku <myu@myujiku.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Pynary – binary representation of python objects\n\n**Pynary** is a simple library that allows you to represent python objects as binary data. The only module it uses is [struct](https://docs.python.org/3/library/struct.html) from the standard library.\n\nUnlike the [pickle](https://docs.python.org/3/library/pickle.html) module, Pynary doesn't allow arbitraty code execution (by default). This though means that only\na small subset of python objects is supported (by default). Currently this\nincludes:\n- `NoneType`\n- `bool`\n- `int` – u32 by default\n- `float` – 64 bit (default) and 32 bit \n- `str`\n- `tuple`\n- `list`\n- `set`\n- `dict`\n\nAdditional types can be supported with a [custom decoder and encoder](#modifying-the-decoder-and-encoder).\n\n## Basic usage\n\n```python\n# Import the default decoder and encoder set:\nfrom pynary import pyn\n\n# Prepare the object you want to encode\nyour_object: object = ...\n\n# Encode the object\nencoded_object: bytes = pyn.dump(your_object)\n\n# Decode the object\ndecoded_object: object = pyn.load(encoded_object)\n```\n\nIf your input data cannot be parsed, a `pynary.PYNEncoder.TypeMissmatch` is\nraised.\n\n## Modifying the Decoder and Encoder\n\n**WARNING:** Modifying the decoder and the encoder can introduce security risks.\nJust be aware of that and act accordingly.\n\n### Adding types to the default parser\n\nIf you don't want to change the behaviour of existing types you can simply\nuse the `add_type` method of the `PYNEncoder` and `PYNDecoder`.\n\nHere is an example for adding a custom class:\n\n```python\nfrom pynary.pyn import _pyn\n\nclass MyClass:\n    x: int\n\ndef _encode_my_object(enc: dict, my_object: MyClass) -> bytes:\n    return enc[MyClass][\"tag\"] + int.to_bytes(my_object.x, 4, \"big\")\n\ndef _decode_my_object(_, b: bytes) -> (MyClass, int):\n    my_object = MyClass()\n    my_object.x = int.from_bytes(b[:4], \"big\")\n    return my_object, 4\n\n_pyn.encoder.add_type(MyClass, _encode_my_object)\n_pyn.decoder.add_type(_decode_my_object)\n```\n\nThe encode function (which doesn't have to be named like this) always takes two\narguments and has to return a `bytes` object. The first one is the encoding\ntable provided by the `PYNEncoder (_pyn.encoder)` and the second one is the object\nthat is to be encoded. \n\n\nThe decode function works similarly. It needs an encoding table from the `PYNDecoder (_pyn.decoder)` as it's first argument. We only need that if we need \nto identify other types that are contained in our object (e.g. like in a list), so\nwe can omit it here. The second argument is the `bytes` object which contains the\ndata we that corresponds to our object. Instead of only returning one thing here,\nwe have to return two: the decoded python object and how much space it took in the\nencoded data in bytes. Since we gave our x a size of 4 bytes in the encoding function we can just return that.\n\nAfter that we add out encoding function to `_pyn.encoder` and our decoding function to `_pyn.decoder` with the `add_type` method. Note that the encoder's\nmethod also requires us to add the type of the objects we want to encode, which in\nthis case is `MyClass`. For an object to be able to be parsed, `type(object)` must\nreturn `MyClass`. Objects of classes that inherit from `MyClass` will raise an\nerror if not handled seperately.\n\nIt might also be a good idea to define a custom magic byte sequence to ensure\nthat data that is valid for our new format. This can be any sequence of bytes.\n```python\nmagic: bytes = b\"MyMagic\"\n_pyn.encoder.magic = magic\n_pyn.decoder.magic = magic\n```\n\nTo load or dump data use `_pyn.encoder.dump()` or `_pyn.decoder.load()`. If you\nthink that's a bit complicated you can create a `dump` and a `load` variable and\nmake them equal to their respective `_pyn` function.\n\n```python\ndump: callable = _pyn.encoder.dump\nload: callable = _pyn.decoder.load\n```\n\nNow you can use your custom parser just like you would use the default.\n\n```python\nimport my_pyn\n\nmy_object = MyClass()\nmy_object.x = 12\n\nmy_pyn.dump(my_object)\n>>> b'\\x07MyMagic\\t\\x00\\x00\\x00\\x0c'\n\nmy_pyn.load(my_pyn.dump(my_object))\n>>> <__main__.MyClass object at 0x...>\n```\n\n### Change the default behaviour\nDetailed guide soon. If you want to know how now, just take a look at the source code. It's not well documented though...\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pynary",
    "package_url": "https://pypi.org/project/pynary/",
    "platform": null,
    "project_url": "https://pypi.org/project/pynary/",
    "project_urls": {
      "Source": "https://github.com/myu-jiku/pynary/"
    },
    "release_url": "https://pypi.org/project/pynary/1.2.1/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Encode python objects as binary data in a (by default) safe way.",
    "version": "1.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15205023,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b0ba582a957f39adfb511a563a7617e052c6d0f0e053d41ba01bf8908ab302a",
          "md5": "d46f31c694616b52970bd02540318c3c",
          "sha256": "ca9cf1330e098671a842fa25d78b005cf5cd29326fafac7578667b9b4118e14e"
        },
        "downloads": -1,
        "filename": "pynary-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d46f31c694616b52970bd02540318c3c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 7026,
        "upload_time": "2022-09-13T18:08:53",
        "upload_time_iso_8601": "2022-09-13T18:08:53.228699Z",
        "url": "https://files.pythonhosted.org/packages/8b/0b/a582a957f39adfb511a563a7617e052c6d0f0e053d41ba01bf8908ab302a/pynary-1.0.0-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": "not ready"
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8bdaa13b2e6c622876940c0d06a6bb19197c518ceffa0c53bfb0da8a4c654751",
          "md5": "1ec119e548c9fdc495da670187c209c0",
          "sha256": "893c333d072edecb92bd4ad156e58ef03575522f87e8d0aed048ddc2a3348156"
        },
        "downloads": -1,
        "filename": "pynary-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1ec119e548c9fdc495da670187c209c0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 31619,
        "upload_time": "2022-09-13T18:08:54",
        "upload_time_iso_8601": "2022-09-13T18:08:54.912753Z",
        "url": "https://files.pythonhosted.org/packages/8b/da/a13b2e6c622876940c0d06a6bb19197c518ceffa0c53bfb0da8a4c654751/pynary-1.0.0.tar.gz",
        "yanked": true,
        "yanked_reason": "not ready"
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b8f25d6b8ad57479a2372d6c25cf22239f789a225057d3bb9dbb06aaa3ba4168",
          "md5": "32ee765a1633f5ff0098c54512078b81",
          "sha256": "841b2ee1c2a44456868820dcce13384e5b366c55d74ff801ee15e0a783160460"
        },
        "downloads": -1,
        "filename": "pynary-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "32ee765a1633f5ff0098c54512078b81",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 7268,
        "upload_time": "2022-09-13T18:54:47",
        "upload_time_iso_8601": "2022-09-13T18:54:47.245252Z",
        "url": "https://files.pythonhosted.org/packages/b8/f2/5d6b8ad57479a2372d6c25cf22239f789a225057d3bb9dbb06aaa3ba4168/pynary-1.1.0-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": "not ready"
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "23097efa511e90fd0ab6345ad55374ac4863e77e81b3eff8db0bd658cb5dfbc4",
          "md5": "8b05f96667cf9b257614fca394369a9f",
          "sha256": "f75835126f247f9009aa47d918409ab8d077afc2b3bf84c801c555579d2c8fef"
        },
        "downloads": -1,
        "filename": "pynary-1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8b05f96667cf9b257614fca394369a9f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 7259,
        "upload_time": "2022-09-13T23:06:22",
        "upload_time_iso_8601": "2022-09-13T23:06:22.453165Z",
        "url": "https://files.pythonhosted.org/packages/23/09/7efa511e90fd0ab6345ad55374ac4863e77e81b3eff8db0bd658cb5dfbc4/pynary-1.1.1-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": "not ready"
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bb4b162ba4fd2f017a787e3c0521acd81872c79b6c18a876134f7902326cb8f2",
          "md5": "3206bcbfc5b61f9cfef35bdd5942c650",
          "sha256": "68cc20513ea3ff5f37a940e19b9e2aeb97acbd2186273e0528373eaef1b48384"
        },
        "downloads": -1,
        "filename": "pynary-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3206bcbfc5b61f9cfef35bdd5942c650",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 31830,
        "upload_time": "2022-09-13T23:06:24",
        "upload_time_iso_8601": "2022-09-13T23:06:24.259450Z",
        "url": "https://files.pythonhosted.org/packages/bb/4b/162ba4fd2f017a787e3c0521acd81872c79b6c18a876134f7902326cb8f2/pynary-1.1.1.tar.gz",
        "yanked": true,
        "yanked_reason": "not ready"
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2eb8a22cb24d0570ebb36710264328f3f05e4a86717ad373b7d09cea925987cb",
          "md5": "364492fccc58fbb765a48d8ca9bb6005",
          "sha256": "e471f9ea3d183d794b455cb3903ba92311ec9649bc734f459fb6adf9193544af"
        },
        "downloads": -1,
        "filename": "pynary-1.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "364492fccc58fbb765a48d8ca9bb6005",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 9178,
        "upload_time": "2022-09-14T14:52:27",
        "upload_time_iso_8601": "2022-09-14T14:52:27.219616Z",
        "url": "https://files.pythonhosted.org/packages/2e/b8/a22cb24d0570ebb36710264328f3f05e4a86717ad373b7d09cea925987cb/pynary-1.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4dd204ee3b3b691b043b318ca510f1febcfcc1dc5febfd0305892d18d0fb90ca",
          "md5": "9732c0b1742fa87aa39591c2f2fd6c50",
          "sha256": "5f013d21e25b9fecdbbfce7028b3ab8b47a644f0a5473d5964c4392e15ce418d"
        },
        "downloads": -1,
        "filename": "pynary-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9732c0b1742fa87aa39591c2f2fd6c50",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 32789,
        "upload_time": "2022-09-14T14:52:29",
        "upload_time_iso_8601": "2022-09-14T14:52:29.430032Z",
        "url": "https://files.pythonhosted.org/packages/4d/d2/04ee3b3b691b043b318ca510f1febcfcc1dc5febfd0305892d18d0fb90ca/pynary-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "abe9e3c9eec80af9e787ce66a93e5b0e51f682aa35a89f5c025b18a92ab3b945",
          "md5": "37f7a8a3787a24d0bef26594aaa794a7",
          "sha256": "623b24d7505cf5b62eaeb85b519a1fbe8f88ee40551ce48469c8f717f072e2b4"
        },
        "downloads": -1,
        "filename": "pynary-1.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "37f7a8a3787a24d0bef26594aaa794a7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 9571,
        "upload_time": "2022-09-25T14:19:00",
        "upload_time_iso_8601": "2022-09-25T14:19:00.687647Z",
        "url": "https://files.pythonhosted.org/packages/ab/e9/e3c9eec80af9e787ce66a93e5b0e51f682aa35a89f5c025b18a92ab3b945/pynary-1.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b9ea755fe77ed6fa86f59cf924cb35ea0e2b60056558516b65e9661833240aee",
          "md5": "76906be7bdca3e9ff88d3fa7b63707ac",
          "sha256": "62d4fd7a0dd89b0b543b423b853bb4b109aebdd85e16a026d7cd9e7297521d3d"
        },
        "downloads": -1,
        "filename": "pynary-1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "76906be7bdca3e9ff88d3fa7b63707ac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 33070,
        "upload_time": "2022-09-25T14:19:02",
        "upload_time_iso_8601": "2022-09-25T14:19:02.289326Z",
        "url": "https://files.pythonhosted.org/packages/b9/ea/755fe77ed6fa86f59cf924cb35ea0e2b60056558516b65e9661833240aee/pynary-1.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "abe9e3c9eec80af9e787ce66a93e5b0e51f682aa35a89f5c025b18a92ab3b945",
        "md5": "37f7a8a3787a24d0bef26594aaa794a7",
        "sha256": "623b24d7505cf5b62eaeb85b519a1fbe8f88ee40551ce48469c8f717f072e2b4"
      },
      "downloads": -1,
      "filename": "pynary-1.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "37f7a8a3787a24d0bef26594aaa794a7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 9571,
      "upload_time": "2022-09-25T14:19:00",
      "upload_time_iso_8601": "2022-09-25T14:19:00.687647Z",
      "url": "https://files.pythonhosted.org/packages/ab/e9/e3c9eec80af9e787ce66a93e5b0e51f682aa35a89f5c025b18a92ab3b945/pynary-1.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b9ea755fe77ed6fa86f59cf924cb35ea0e2b60056558516b65e9661833240aee",
        "md5": "76906be7bdca3e9ff88d3fa7b63707ac",
        "sha256": "62d4fd7a0dd89b0b543b423b853bb4b109aebdd85e16a026d7cd9e7297521d3d"
      },
      "downloads": -1,
      "filename": "pynary-1.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "76906be7bdca3e9ff88d3fa7b63707ac",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 33070,
      "upload_time": "2022-09-25T14:19:02",
      "upload_time_iso_8601": "2022-09-25T14:19:02.289326Z",
      "url": "https://files.pythonhosted.org/packages/b9/ea/755fe77ed6fa86f59cf924cb35ea0e2b60056558516b65e9661833240aee/pynary-1.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}