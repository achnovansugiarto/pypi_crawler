{
  "info": {
    "author": "John Thorvald Wodder II",
    "author_email": "email2dict@varonathe.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Communications :: Email",
      "Topic :: Utilities",
      "Typing :: Typed"
    ],
    "description": ".. image:: http://www.repostatus.org/badges/latest/active.svg\n    :target: http://www.repostatus.org/#active\n    :alt: Project Status: Active — The project has reached a stable, usable\n          state and is being actively developed.\n\n.. image:: https://github.com/jwodder/email2dict/workflows/Test/badge.svg?branch=master\n    :target: https://github.com/jwodder/email2dict/actions?workflow=Test\n    :alt: CI Status\n\n.. image:: https://codecov.io/gh/jwodder/email2dict/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/jwodder/email2dict\n\n.. image:: https://img.shields.io/pypi/pyversions/email2dict.svg\n    :target: https://pypi.org/project/email2dict/\n\n.. image:: https://img.shields.io/github/license/jwodder/email2dict.svg\n    :target: https://opensource.org/licenses/MIT\n    :alt: MIT License\n\n`GitHub <https://github.com/jwodder/email2dict>`_\n| `PyPI <https://pypi.org/project/email2dict/>`_\n| `Issues <https://github.com/jwodder/email2dict/issues>`_\n\n**Note:** This project has been renamed to mailbits_.  Please see there for all\nfuture updates & new features.\n\n.. _mailbits: https://pypi.org/project/mailbits/\n\n``email2dict`` converts Python ``Message`` & ``EmailMessage`` instances into\nstructured ``dict``\\s.  Need to examine a ``Message`` but find the builtin\nPython API too fiddly?  Need to check that a ``Message`` has the content &\nstructure you expect?  Need to compare two ``Message`` instances for equality?\nNeed to pretty-print the structure of a ``Message``?  Then ``email2dict`` has\nyour back.\n\n\nInstallation\n============\n``email2dict`` requires Python 3.6 or higher.  Just use `pip\n<https://pip.pypa.io>`_ for Python 3 (You have pip, right?) to install it::\n\n    python3 -m pip install email2dict\n\n\nExample\n=======\n\nThe ``email`` `examples page`__ in the Python docs includes an example of\nconstructing an HTML e-mail with an alternative plain text version (It's the\none with the subject \"Ayons asperges pour le déjeuner\").  Passing the resulting\n``EmailMessage`` object to the ``email2dict()`` function produces the following\noutput structure:\n\n__ https://docs.python.org/3/library/email.examples.html\n\n.. code:: python\n\n    {\n        \"unixfrom\": None,\n        \"headers\": {\n            \"subject\": \"Ayons asperges pour le déjeuner\",\n            \"from\": [\n                {\n                    \"display_name\": \"Pepé Le Pew\",\n                    \"address\": \"pepe@example.com\",\n                },\n            ],\n            \"to\": [\n                {\n                    \"display_name\": \"Penelope Pussycat\",\n                    \"address\": \"penelope@example.com\",\n                },\n                {\n                    \"display_name\": \"Fabrette Pussycat\",\n                    \"address\": \"fabrette@example.com\",\n                },\n            ],\n            \"content-type\": {\n                \"content_type\": \"multipart/alternative\",\n                \"params\": {},\n            },\n        },\n        \"preamble\": None,\n        \"content\": [\n            {\n                \"unixfrom\": None,\n                \"headers\": {\n                    \"content-type\": {\n                        \"content_type\": \"text/plain\",\n                        \"params\": {},\n                    },\n                },\n                \"preamble\": None,\n                \"content\": (\n                    \"Salut!\\n\"\n                    \"\\n\"\n                    \"Cela ressemble à un excellent recipie[1] déjeuner.\\n\"\n                    \"\\n\"\n                    \"[1] http://www.yummly.com/recipe/Roasted-Asparagus-Epicurious-203718\\n\"\n                    \"\\n\"\n                    \"--Pepé\\n\"\n                ),\n                \"epilogue\": None,\n            },\n            {\n                \"unixfrom\": None,\n                \"headers\": {\n                    \"content-type\": {\n                        \"content_type\": \"multipart/related\",\n                        \"params\": {},\n                    },\n                },\n                \"preamble\": None,\n                \"content\": [\n                    {\n                        \"unixfrom\": None,\n                        \"headers\": {\n                            \"content-type\": {\n                                \"content_type\": \"text/html\",\n                                \"params\": {},\n                            },\n                        },\n                        \"preamble\": None,\n                        \"content\": (\n                            \"<html>\\n\"\n                            \"  <head></head>\\n\"\n                            \"  <body>\\n\"\n                            \"    <p>Salut!</p>\\n\"\n                            \"    <p>Cela ressemble à un excellent\\n\"\n                            \"        <a href=\\\"http://www.yummly.com/recipe/Roasted-Asparagus-\"\n                            \"Epicurious-203718\\\">\\n\"\n                            \"            recipie\\n\"\n                            \"        </a> déjeuner.\\n\"\n                            \"    </p>\\n\"\n                            \"    <img src=\\\"cid:RANDOM_MESSAGE_ID\\\" />\\n\"\n                            \"  </body>\\n\"\n                            \"</html>\\n\"\n                        ),\n                        \"epilogue\": None,\n                    },\n                    {\n                        \"unixfrom\": None,\n                        \"headers\": {\n                            \"content-type\": {\n                                \"content_type\": \"image/png\",\n                                \"params\": {},\n                            },\n                            \"content-disposition\": {\n                                \"disposition\": \"inline\",\n                                \"params\": {},\n                            },\n                            \"content-id\": [\"<RANDOM_MESSAGE_ID>\"],\n                        },\n                        \"preamble\": None,\n                        \"content\": b'IMAGE BLOB',\n                        \"epilogue\": None,\n                    },\n                ],\n                \"epilogue\": None,\n            },\n        ],\n        \"epilogue\": None,\n    }\n\n\nAPI\n===\n\nThe ``email2dict`` module provides a single function, also named\n``email2dict``:\n\n.. code:: python\n\n    email2dict(msg: email.message.Message, include_all: bool = False) -> Dict[str, Any]\n\nConvert a ``Message`` object to a ``dict``.  All encoded text & bytes are\ndecoded into their natural values.\n\nBy default, any information specific to how the message is encoded (Content-Type\nparameters, Content-Transfer-Encoding, etc.) is not reported, as the focus is\non the actual content rather than the choices made in representing it.  To\ninclude this information anyway, set ``include_all`` to ``True``.\n\nThe output structure has the following fields:\n\n``unixfrom``\n    The \"From \" line marking the start of the message in a mbox, if any\n\n``headers``\n    A ``dict`` mapping lowercased header field names to values.  The following\n    headers have special representations:\n\n    ``subject``\n        A single string\n\n    ``from``, ``to``, ``cc``, ``bcc``, ``resent-from``, ``resent-to``, ``resent-cc``, ``resent-bcc``, ``reply-to``\n        A list of groups and/or addresses.  Addresses are represented as\n        ``dict``\\s with two string fields: ``display_name`` (an empty string if\n        not given) and ``address``.  Groups are represented as ``dict``\\s with\n        a ``group`` field giving the name of the group and an ``addresses``\n        field giving a list of addresses in the group.\n\n    ``message-id``\n        A single string\n\n    ``content-type``\n        A ``dict`` containing a ``content_type`` field (a string of the form\n        ``maintype/subtype``, e.g., ``\"text/plain\"``) and a ``params`` field (a\n        ``dict`` of string keys & values).  The ``charset`` and ``boundary``\n        parameters are discarded unless ``include_all`` is ``True``.\n\n    ``date``\n        A ``datetime.datetime`` instance\n\n    ``orig-date``\n        A ``datetime.datetime`` instance\n\n    ``resent-date``\n        A list of ``datetime.datetime`` instances\n\n    ``sender``\n        A single address ``dict``\n\n    ``resent-sender``\n        A list of address ``dict``\\s\n\n    ``content-disposition``\n        A ``dict`` containing a ``disposition`` field (value either\n        ``\"inline\"`` or ``\"attachment\"``) and a ``params`` field (a ``dict`` of\n        string keys & values)\n\n    ``content-transfer-encoding``\n        A single string.  This header is discarded unless ``include_all`` is\n        ``True``.\n\n    ``mime-version``\n        A single string.  This header is discarded unless ``include_all`` is\n        ``True``.\n\n    All other headers are represented as lists of strings.\n\n``preamble``\n    The message's preamble__\n\n    __ https://docs.python.org/3/library/email.message.html\n       #email.message.EmailMessage.preamble\n\n``content``\n    If the message is multipart, this is a list of message ``dict``\\s,\n    structured the same way as the top-level ``dict``.  If the message's\n    Content-Type is ``message/rfc822`` or ``message/external-body``, this is a\n    single message ``dict``.  If the message's Content-Type is ``text/*``, this\n    is a ``str`` giving the contents of the message.  Otherwise, it is a\n    ``bytes`` giving the contents of the message.\n\n``epilogue``\n    The message's epilogue__\n\n    __ https://docs.python.org/3/library/email.message.html\n       #email.message.EmailMessage.epilogue\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jwodder/email2dict",
    "keywords": "comparison,e-mail,email,inspection,json",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "email2dict",
    "package_url": "https://pypi.org/project/email2dict/",
    "platform": "",
    "project_url": "https://pypi.org/project/email2dict/",
    "project_urls": {
      "Bug Tracker": "https://github.com/jwodder/email2dict/issues",
      "Homepage": "https://github.com/jwodder/email2dict",
      "Source Code": "https://github.com/jwodder/email2dict"
    },
    "release_url": "https://pypi.org/project/email2dict/0.1.0.post1/",
    "requires_dist": null,
    "requires_python": "~=3.6",
    "summary": "Convert EmailMessage objects to dicts",
    "version": "0.1.0.post1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9764255,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c014acd53b5d1a21d3921e3d1a1e3e9fe6b0b4ec0545d2cc36717c1e4b9bcc8d",
          "md5": "e70e5b3257518b21b93aa0e54796c0ba",
          "sha256": "db86ec413d0c0a0f52a074f0121b82936652c3596b35ced4b66f3cf2185930b0"
        },
        "downloads": -1,
        "filename": "email2dict-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e70e5b3257518b21b93aa0e54796c0ba",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.6",
        "size": 7596,
        "upload_time": "2021-03-01T01:46:42",
        "upload_time_iso_8601": "2021-03-01T01:46:42.912868Z",
        "url": "https://files.pythonhosted.org/packages/c0/14/acd53b5d1a21d3921e3d1a1e3e9fe6b0b4ec0545d2cc36717c1e4b9bcc8d/email2dict-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5aaeb62536006b1391e816af905b7dc573e3aaef2b2cbd7db8945d3c5511ca2e",
          "md5": "7be24be3d74853334332e25277a8c84c",
          "sha256": "82232775294937b5d608a6d548ec0b7c2d06c6d45840fd438728984994fa75c0"
        },
        "downloads": -1,
        "filename": "email2dict-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7be24be3d74853334332e25277a8c84c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.6",
        "size": 28183,
        "upload_time": "2021-03-01T01:46:44",
        "upload_time_iso_8601": "2021-03-01T01:46:44.262901Z",
        "url": "https://files.pythonhosted.org/packages/5a/ae/b62536006b1391e816af905b7dc573e3aaef2b2cbd7db8945d3c5511ca2e/email2dict-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0.post1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5e405ea8bd42f83b6be09b2d7cc4788bdbb88275bf78d83b0134c8a9922b73c4",
          "md5": "97e7c1ea7b8c14de569032936f6b840f",
          "sha256": "114f9f1d9dbdab1cfbf285a19bd0a6320e55273605aa317423665917b2f1d8ed"
        },
        "downloads": -1,
        "filename": "email2dict-0.1.0.post1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "97e7c1ea7b8c14de569032936f6b840f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.6",
        "size": 7746,
        "upload_time": "2021-03-14T03:58:58",
        "upload_time_iso_8601": "2021-03-14T03:58:58.394458Z",
        "url": "https://files.pythonhosted.org/packages/5e/40/5ea8bd42f83b6be09b2d7cc4788bdbb88275bf78d83b0134c8a9922b73c4/email2dict-0.1.0.post1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5184000b599c4d6a63dd96db0950d3c9b69f99aa1a49d2c0228409d21ab65872",
          "md5": "60c02a3d6f2ad48e1160fd6f976fdadc",
          "sha256": "67a17a3ca107ca19db09417bfac9091473953abc672c7f3e49d488f05759c7df"
        },
        "downloads": -1,
        "filename": "email2dict-0.1.0.post1.tar.gz",
        "has_sig": false,
        "md5_digest": "60c02a3d6f2ad48e1160fd6f976fdadc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.6",
        "size": 28382,
        "upload_time": "2021-03-14T03:58:59",
        "upload_time_iso_8601": "2021-03-14T03:58:59.559209Z",
        "url": "https://files.pythonhosted.org/packages/51/84/000b599c4d6a63dd96db0950d3c9b69f99aa1a49d2c0228409d21ab65872/email2dict-0.1.0.post1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5e405ea8bd42f83b6be09b2d7cc4788bdbb88275bf78d83b0134c8a9922b73c4",
        "md5": "97e7c1ea7b8c14de569032936f6b840f",
        "sha256": "114f9f1d9dbdab1cfbf285a19bd0a6320e55273605aa317423665917b2f1d8ed"
      },
      "downloads": -1,
      "filename": "email2dict-0.1.0.post1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "97e7c1ea7b8c14de569032936f6b840f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": "~=3.6",
      "size": 7746,
      "upload_time": "2021-03-14T03:58:58",
      "upload_time_iso_8601": "2021-03-14T03:58:58.394458Z",
      "url": "https://files.pythonhosted.org/packages/5e/40/5ea8bd42f83b6be09b2d7cc4788bdbb88275bf78d83b0134c8a9922b73c4/email2dict-0.1.0.post1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5184000b599c4d6a63dd96db0950d3c9b69f99aa1a49d2c0228409d21ab65872",
        "md5": "60c02a3d6f2ad48e1160fd6f976fdadc",
        "sha256": "67a17a3ca107ca19db09417bfac9091473953abc672c7f3e49d488f05759c7df"
      },
      "downloads": -1,
      "filename": "email2dict-0.1.0.post1.tar.gz",
      "has_sig": false,
      "md5_digest": "60c02a3d6f2ad48e1160fd6f976fdadc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "~=3.6",
      "size": 28382,
      "upload_time": "2021-03-14T03:58:59",
      "upload_time_iso_8601": "2021-03-14T03:58:59.559209Z",
      "url": "https://files.pythonhosted.org/packages/51/84/000b599c4d6a63dd96db0950d3c9b69f99aa1a49d2c0228409d21ab65872/email2dict-0.1.0.post1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}