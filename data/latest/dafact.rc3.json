{
  "info": {
    "author": "Brais MuÃ±iz",
    "author_email": "mc.brais@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# dafact\nEncodes data as ASP facts.\n\n```dafact``` solves the reiterative task of encoding a dataset into a set of Answer Set Programming facts. The resulting ASP program, which can be partially personalized, can be encoded as [python clingo](https://github.com/potassco/clingo) objects directly or as plain text, and it handles floating point numbers automatically.\n\nData can be fed into ```dafact``` through CSV files, [numpy](https://github.com/numpy/numpy) arrays, [pandas](https://github.com/pandas-dev/pandas) DataFrames and other typical formats.\n\nIt can be used both as a python library and as a command line tool.\n\n# Installation\nThe tool is easily installable through ```pip```:\n```\npython3 -m pip install dafact\n```\n\n## Short usage\n\n[A more detailed usage guide can be found here](examples/README.md).\n\n### Python\n```Dafacter``` python class provides all the funcionality. Once fed with data, a ```Dafacter``` object provides two main methods for obtaining a logic program:\n```python\nfrom dafact import Dafacter\ndafacter = Dafacter(\"data/haberman.csv\", have_names=True) # Fed data into the object\nclingo_facts = dafacter.as_clingo_facts()  # Returns a list of clingo.Function objects\nprogram_text = dafacter.as_program_string()  # Returns the program as plain text\n```\n\nThe following piece of code loads the [haberman](https://www.kaggle.com/gilsousa/habermans-survival-data-set) dataset from a csv file and encodes it as a logic program.\n```python\n# examples/usage_csv.py\nfrom dafact import Dafacter\n\ndafacter = Dafacter(\"data/haberman.csv\", have_names=True)\nprint(dafacter.as_program_string())\n```\n\nThe result of that code would be:\n\n```\nfeature(\"age\"). feature(\"op_year\"). feature(\"nodes\"). feature(\"survival\").\ninstance(0). value(0,\"age\",30). value(0,\"op_year\",64). value(0,\"nodes\",1). value(0,\"survival\",1).\ninstance(1). value(1,\"age\",30). value(1,\"op_year\",62). value(1,\"nodes\",3). value(1,\"survival\",1).\n(. . .)\n```\n\nThe encoded style can also be tweaked easily, and it accepts different kind of data sources from [numpy](https://github.com/numpy/numpy) arrays to [pandas](https://github.com/pandas-dev/pandas) DataFrames. A more detailed guide on usage of the python library can be found in [examples folder](examples/README.md).\n\n### Command line tool\nOnce installed through ```pip``` users can use ```dafact``` for directly obtain a logic program from csv files through the use of the **command line tool**. The usage of the tool is the same to the use of the ```Dafacter``` python class for csv files.\n\n```\n~/$ dafact --help\nusage: dafact [-h] [--feature-names [FEATURE_NAMES [FEATURE_NAMES ...]]] [--factor FACTOR]\n              [--numerical-columns [NUMERICAL_COLUMNS [NUMERICAL_COLUMNS ...]]] [--have-names] [--omit-names] [--delimiter DELIMITER]\n              infile outfile\n\nDafact CLI Encodes data as ASP facts.\n\npositional arguments:\n  infile                Input csv file.\n  outfile               Ouput ASP program.\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nOptions:\n  --feature-names [FEATURE_NAMES [FEATURE_NAMES ...]]\n                        Feature names for the csv columns.\n  --factor FACTOR       factor help\n  --numerical-columns [NUMERICAL_COLUMNS [NUMERICAL_COLUMNS ...]]\n                        Indexes for numerical columns.\n  --have-names          Must be if csv have the name of the columns in the first line.\n  --omit-names          Used together with --have-names for omitting the names in the file.\n  --delimiter DELIMITER\n                        Field delimiter for the csv file.\n```\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bramucas/dafact",
    "keywords": "logic programming,answer set programming",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dafact",
    "package_url": "https://pypi.org/project/dafact/",
    "platform": null,
    "project_url": "https://pypi.org/project/dafact/",
    "project_urls": {
      "Homepage": "https://github.com/bramucas/dafact"
    },
    "release_url": "https://pypi.org/project/dafact/0.4/",
    "requires_dist": [
      "clingo (>=5.5.0.post3)",
      "numpy",
      "argparse"
    ],
    "requires_python": ">=3.6.0",
    "summary": "Encodes data as ASP facts.",
    "version": "0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14139898,
  "releases": {
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cec6a4836b262437c6386d087977323863da0016855b554ba4e58b6257747ace",
          "md5": "be5e4f2c495eb349e7157464fc75d2a6",
          "sha256": "c7e1a9de2c9d4dd8da8f1769763db0ffd685c49cb252f54f2607ad05f2a27602"
        },
        "downloads": -1,
        "filename": "dafact-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "be5e4f2c495eb349e7157464fc75d2a6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 8306,
        "upload_time": "2021-10-23T08:45:29",
        "upload_time_iso_8601": "2021-10-23T08:45:29.583935Z",
        "url": "https://files.pythonhosted.org/packages/ce/c6/a4836b262437c6386d087977323863da0016855b554ba4e58b6257747ace/dafact-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "94a03b8d933d3eca19d502b03c881e00ef45a41c06d8972f4f067478924f8f64",
          "md5": "aec1e9659257a12cc97ed800b885e902",
          "sha256": "f05b61acced5788aba60ad72be0b9030bcccecb67044c97e6b7199d395e6a582"
        },
        "downloads": -1,
        "filename": "dafact-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "aec1e9659257a12cc97ed800b885e902",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 7684,
        "upload_time": "2021-10-23T08:45:31",
        "upload_time_iso_8601": "2021-10-23T08:45:31.436886Z",
        "url": "https://files.pythonhosted.org/packages/94/a0/3b8d933d3eca19d502b03c881e00ef45a41c06d8972f4f067478924f8f64/dafact-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82ec25fa295e752821459e66639ec4646c4f9d8ce3bd752f1b8e3abbddb79dac",
          "md5": "083b0c3b1148efc00be84c20a4ae3d9e",
          "sha256": "2b550220486c97b5cb282b8562aa30cf6ae7b189d0de0b0234f1021ede747cd2"
        },
        "downloads": -1,
        "filename": "dafact-0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "083b0c3b1148efc00be84c20a4ae3d9e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 8303,
        "upload_time": "2021-11-24T10:52:04",
        "upload_time_iso_8601": "2021-11-24T10:52:04.988190Z",
        "url": "https://files.pythonhosted.org/packages/82/ec/25fa295e752821459e66639ec4646c4f9d8ce3bd752f1b8e3abbddb79dac/dafact-0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "494d7433b0a17702d41b19fe6413bc598ef64adb14f93739dafcf7510d85f0b8",
          "md5": "e4847ce0a9cfef804d4121bccf7ecd23",
          "sha256": "def8f6525fb6c9d5042423bef4f30eb5d389756c12c386f799411ff5ed8b8683"
        },
        "downloads": -1,
        "filename": "dafact-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "e4847ce0a9cfef804d4121bccf7ecd23",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 7701,
        "upload_time": "2021-11-24T10:52:06",
        "upload_time_iso_8601": "2021-11-24T10:52:06.988885Z",
        "url": "https://files.pythonhosted.org/packages/49/4d/7433b0a17702d41b19fe6413bc598ef64adb14f93739dafcf7510d85f0b8/dafact-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "401fe3636497555ba220d94890a908845f9b7b543d33db5d4e43ad0db67b9a58",
          "md5": "f9893b8edac286117c140b31be77e3cb",
          "sha256": "928d416fd3be8c7b954376ccfdaca7509b8ed94abf1789cd37132d661619d125"
        },
        "downloads": -1,
        "filename": "dafact-0.4.linux-x86_64.tar.gz",
        "has_sig": false,
        "md5_digest": "f9893b8edac286117c140b31be77e3cb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 10508,
        "upload_time": "2022-06-15T13:51:33",
        "upload_time_iso_8601": "2022-06-15T13:51:33.168517Z",
        "url": "https://files.pythonhosted.org/packages/40/1f/e3636497555ba220d94890a908845f9b7b543d33db5d4e43ad0db67b9a58/dafact-0.4.linux-x86_64.tar.gz",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee3d08af7cb9723dd9c1e768cbbcec9e13f39b93f0e44c8c380be4e3ea7ef4cf",
          "md5": "e3921595204978da2a60a5afe9ec064c",
          "sha256": "e4b1239cb7359864bc34c243531f05ac04394ed6e00f89f0c2ab93b5a71f3ca0"
        },
        "downloads": -1,
        "filename": "dafact-0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e3921595204978da2a60a5afe9ec064c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 8310,
        "upload_time": "2022-06-15T13:51:31",
        "upload_time_iso_8601": "2022-06-15T13:51:31.197921Z",
        "url": "https://files.pythonhosted.org/packages/ee/3d/08af7cb9723dd9c1e768cbbcec9e13f39b93f0e44c8c380be4e3ea7ef4cf/dafact-0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "401fe3636497555ba220d94890a908845f9b7b543d33db5d4e43ad0db67b9a58",
        "md5": "f9893b8edac286117c140b31be77e3cb",
        "sha256": "928d416fd3be8c7b954376ccfdaca7509b8ed94abf1789cd37132d661619d125"
      },
      "downloads": -1,
      "filename": "dafact-0.4.linux-x86_64.tar.gz",
      "has_sig": false,
      "md5_digest": "f9893b8edac286117c140b31be77e3cb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.0",
      "size": 10508,
      "upload_time": "2022-06-15T13:51:33",
      "upload_time_iso_8601": "2022-06-15T13:51:33.168517Z",
      "url": "https://files.pythonhosted.org/packages/40/1f/e3636497555ba220d94890a908845f9b7b543d33db5d4e43ad0db67b9a58/dafact-0.4.linux-x86_64.tar.gz",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ee3d08af7cb9723dd9c1e768cbbcec9e13f39b93f0e44c8c380be4e3ea7ef4cf",
        "md5": "e3921595204978da2a60a5afe9ec064c",
        "sha256": "e4b1239cb7359864bc34c243531f05ac04394ed6e00f89f0c2ab93b5a71f3ca0"
      },
      "downloads": -1,
      "filename": "dafact-0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e3921595204978da2a60a5afe9ec064c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6.0",
      "size": 8310,
      "upload_time": "2022-06-15T13:51:31",
      "upload_time_iso_8601": "2022-06-15T13:51:31.197921Z",
      "url": "https://files.pythonhosted.org/packages/ee/3d/08af7cb9723dd9c1e768cbbcec9e13f39b93f0e44c8c380be4e3ea7ef4cf/dafact-0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}