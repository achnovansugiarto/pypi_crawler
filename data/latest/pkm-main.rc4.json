{
  "info": {
    "author": "bennylut",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Build Tools",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# Relaxed Poetry\n\n> ℹ️ For installation instructions check the [Wiki](https://github.com/bennylut/relaxed-poetry/wiki/Installation)\n\nThis project is a poetry fork. It serves as a relaxed version of poetry (currently based on version 1.2.0a2).\n\nPoetry is a great tool and was a perfect fit for my team. Over the time, we found several issues where it is a bit too strict, and while most of the time for good reasons, these issues still made poetry unusable for us in many projects.\n\nSince, in my eyes, there is no real alternative to poetry, I choose to fork it and include some relaxations for the issues that we encounter. While I'm at it, I also modified some of poetry's behavior and added some features that suite our workflows and views better.\n\nAll of the changes that were made in this fork are documented in the wiki, the followings are some notable ones:\n- Forced dependency versions\n- Relaxation of version-enforcements\n- Faster dependency-versions resolution (more than 4 times faster on tested projects)\n- Multi-package projects support  \n- virtual environments are built inside the project directory by default\n- Project and other components scaffolding using [protopy](https://github.com/bennylut/protopy)\n- property definition and substitution in pyproject \n- automatic and manual build profiles (override groups of properties in pyproject)\n- install, update and add are merged into a single (install) command\n \nSee wiki for further details.\n\n**Important**: this package is based on alpha staged poetry, changes may be frequent, \nthough it is planed to be used internally for our projects from day one.\n\n**The rest of this README left as is from the original Poetry README**\n\n# Poetry: Dependency Management for Python\n\nPoetry helps you declare, manage and install dependencies of Python projects,\nensuring you have the right stack everywhere.\n\n![Poetry Install](https://raw.githubusercontent.com/python-poetry/poetry/master/assets/install.gif)\n\nIt supports Python 2.7 and 3.5+.\n\n**Note**: Python 2.7 and 3.5 will no longer be supported in the next feature release (1.2).\nYou should consider updating your Python version to a supported one.\n\n[![Tests Status](https://github.com/python-poetry/poetry/workflows/Tests/badge.svg?branch=master&event=push)](https://github.com/python-poetry/poetry/actions?query=workflow%3ATests+branch%3Amaster+event%3Apush)\n\nThe [complete documentation](https://python-poetry.org/docs/) is available on the [official website](https://python-poetry.org).\n\n## Installation\n\nPoetry provides a custom installer that will install `poetry` isolated\nfrom the rest of your system.\n\n### osx / linux / bashonwindows install instructions\n```bash\ncurl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | python -\n```\n### windows powershell install instructions\n```powershell\n(Invoke-WebRequest -Uri https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py -UseBasicParsing).Content | python -\n```\n\n**Warning**: The previous `get-poetry.py` installer is now deprecated, if you are currently using it\nyou should migrate to the new, supported, `install-poetry.py` installer.\n\nThe installer installs the `poetry` tool to Poetry's `bin` directory. This location depends on your system:\n\n- `$HOME/.local/bin` for Unix\n- `%APPDATA%\\Python\\Scripts` on Windows\n\nIf this directory is not on your `PATH`, you will need to add it manually\nif you want to invoke Poetry with simply `poetry`.\n\nAlternatively, you can use the full path to `poetry` to use it.\n\nOnce Poetry is installed you can execute the following:\n\n```bash\npoetry --version\n```\n\nIf you see something like `Poetry (version 1.2.0)` then you are ready to use Poetry.\nIf you decide Poetry isn't your thing, you can completely remove it from your system\nby running the installer again with the `--uninstall` option or by setting\nthe `POETRY_UNINSTALL` environment variable before executing the installer.\n\n```bash\npython install-poetry.py --uninstall\nPOETRY_UNINSTALL=1 python install-poetry.py\n```\n\nBy default, Poetry is installed into the user's platform-specific home directory.\nIf you wish to change this, you may define the `POETRY_HOME` environment variable:\n\n```bash\nPOETRY_HOME=/etc/poetry python install-poetry.py\n```\n\nIf you want to install prerelease versions, you can do so by passing `--preview` option to `install-poetry.py`\nor by using the `POETRY_PREVIEW` environment variable:\n\n```bash\npython install-poetry.py --preview\nPOETRY_PREVIEW=1 python install-poetry.py\n```\n\nSimilarly, if you want to install a specific version, you can use `--version` option or the `POETRY_VERSION`\nenvironment variable:\n\n```bash\npython install-poetry.py --version 1.2.0\nPOETRY_VERSION=1.2.0 python install-poetry.py\n```\n\nYou can also install Poetry for a `git` repository by using the `--git` option:\n\n```bash\npython install-poetry.py --git https://github.com/python-poetry/poetry.git@master\n````\n\n**Note**: Note that the installer does not support Python < 3.6.\n\n## Updating `poetry`\n\nUpdating poetry to the latest stable version is as simple as calling the `self update` command.\n\n**Warning**: Poetry versions installed using the now deprecated `get-poetry.py` installer will not be able to use this\ncommand to update to 1.2 releases or later. Migrate to using the `install-poetry.py` installer or `pipx`.\n\n```bash\npoetry self update\n```\n\nIf you want to install prerelease versions, you can use the `--preview` option.\n\n```bash\npoetry self update --preview\n```\n\nAnd finally, if you want to install a specific version you can pass it as an argument\nto `self update`.\n\n```bash\npoetry self update 1.2.0\n```\n\n\n## Enable tab completion for Bash, Fish, or Zsh\n\n`poetry` supports generating completion scripts for Bash, Fish, and Zsh.\nSee `poetry help completions` for full details, but the gist is as simple as using one of the following:\n\n```bash\n# Bash\npoetry completions bash > /etc/bash_completion.d/poetry.bash-completion\n\n# Bash (Homebrew)\npoetry completions bash > $(brew --prefix)/etc/bash_completion.d/poetry.bash-completion\n\n# Fish\npoetry completions fish > ~/.config/fish/completions/poetry.fish\n\n# Fish (Homebrew)\npoetry completions fish > (brew --prefix)/share/fish/vendor_completions.d/poetry.fish\n\n# Zsh\npoetry completions zsh > ~/.zfunc/_poetry\n\n# Zsh (Homebrew)\npoetry completions zsh > $(brew --prefix)/share/zsh/site-functions/_poetry\n\n# Zsh (Oh-My-Zsh)\nmkdir $ZSH_CUSTOM/plugins/poetry\npoetry completions zsh > $ZSH_CUSTOM/plugins/poetry/_poetry\n\n# Zsh (prezto)\npoetry completions zsh > ~/.zprezto/modules/completion/external/src/_poetry\n```\n\n*Note:* you may need to restart your shell in order for the changes to take\neffect.\n\nFor `zsh`, you must then add the following line in your `~/.zshrc` before\n`compinit` (not for homebrew setup):\n\n```zsh\nfpath+=~/.zfunc\n```\n\n\n## Introduction\n\n`poetry` is a tool to handle dependency installation as well as building and packaging of Python packages.\nIt only needs one file to do all of that: the new, [standardized](https://www.python.org/dev/peps/pep-0518/) `pyproject.toml`.\n\nIn other words, poetry uses `pyproject.toml` to replace `setup.py`, `requirements.txt`, `setup.cfg`, `MANIFEST.in` and the newly added `Pipfile`.\n\n```toml\n[tool.poetry]\nname = \"my-package\"\nversion = \"0.1.0\"\ndescription = \"The description of the package\"\n\nlicense = \"MIT\"\n\nauthors = [\n    \"Sébastien Eustace <sebastien@eustace.io>\"\n]\n\nreadme = 'README.md'  # Markdown files are supported\n\nrepository = \"https://github.com/python-poetry/poetry\"\nhomepage = \"https://github.com/python-poetry/poetry\"\n\nkeywords = ['packaging', 'poetry']\n\n[tool.poetry.dependencies]\npython = \"~2.7 || ^3.2\"  # Compatible python versions must be declared here\ntoml = \"^0.9\"\n# Dependencies with extras\nrequests = { version = \"^2.13\", extras = [ \"security\" ] }\n# Python specific dependencies with prereleases allowed\npathlib2 = { version = \"^2.2\", python = \"~2.7\", allow-prereleases = true }\n# Git dependencies\ncleo = { git = \"https://github.com/sdispater/cleo.git\", branch = \"master\" }\n\n# Optional dependencies (extras)\npendulum = { version = \"^1.4\", optional = true }\n\n[tool.poetry.dev-dependencies]\npytest = \"^3.0\"\npytest-cov = \"^2.4\"\n\n[tool.poetry.scripts]\nmy-script = 'my_package:main'\n```\n\nThere are some things we can notice here:\n\n* It will try to enforce [semantic versioning](<http://semver.org>) as the best practice in version naming.\n* You can specify the readme, included and excluded files: no more `MANIFEST.in`.\n`poetry` will also use VCS ignore files (like `.gitignore`) to populate the `exclude` section.\n* Keywords (up to 5) can be specified and will act as tags on the packaging site.\n* The dependencies sections support caret, tilde, wildcard, inequality and multiple requirements.\n* You must specify the python versions for which your package is compatible.\n\n`poetry` will also detect if you are inside a virtualenv and install the packages accordingly.\nSo, `poetry` can be installed globally and used everywhere.\n\n`poetry` also comes with a full fledged dependency resolution library.\n\n## Why?\n\nPackaging systems and dependency management in Python are rather convoluted and hard to understand for newcomers.\nEven for seasoned developers it might be cumbersome at times to create all files needed in a Python project: `setup.py`,\n`requirements.txt`, `setup.cfg`, `MANIFEST.in` and the newly added `Pipfile`.\n\nSo I wanted a tool that would limit everything to a single configuration file to do:\ndependency management, packaging and publishing.\n\nIt takes inspiration in tools that exist in other languages, like `composer` (PHP) or `cargo` (Rust).\n\nAnd, finally, I started `poetry` to bring another exhaustive dependency resolver to the Python community apart from\n[Conda's](https://conda.io).\n\n### What about Pipenv?\n\nIn short: I do not like the CLI it provides, or some of the decisions made,\nand I think we can make a better and more intuitive one. Here are a few things\nthat I don't like.\n\n#### Dependency resolution\n\nThe dependency resolution is erratic and will fail even if there is a solution. Let's take an example:\n\n```bash\npipenv install oslo.utils==1.4.0\n```\n\nwill fail with this error:\n\n```text\nCould not find a version that matches pbr!=0.7,!=2.1.0,<1.0,>=0.6,>=2.0.0\n```\n\nwhile Poetry will get you the right set of packages:\n\n```bash\npoetry add oslo.utils=1.4.0\n```\n\nresults in :\n\n```text\n  - Installing pytz (2018.3)\n  - Installing netifaces (0.10.6)\n  - Installing netaddr (0.7.19)\n  - Installing oslo.i18n (2.1.0)\n  - Installing iso8601 (0.1.12)\n  - Installing six (1.11.0)\n  - Installing babel (2.5.3)\n  - Installing pbr (0.11.1)\n  - Installing oslo.utils (1.4.0)\n```\n\nThis is possible thanks to the efficient dependency resolver at the heart of Poetry.\n\nHere is a breakdown of what exactly happens here:\n\n`oslo.utils (1.4.0)` depends on:\n\n- `pbr (>=0.6,!=0.7,<1.0)`\n- `Babel (>=1.3)`\n- `six (>=1.9.0)`\n- `iso8601 (>=0.1.9)`\n- `oslo.i18n (>=1.3.0)`\n- `netaddr (>=0.7.12)`\n- `netifaces (>=0.10.4)`\n\nWhat interests us is `pbr (>=0.6,!=0.7,<1.0)`.\n\nAt this point, poetry will choose `pbr==0.11.1` which is the latest version that matches the constraint.\n\nNext it will try to select `oslo.i18n==3.20.0` which is the latest version that matches `oslo.i18n (>=1.3.0)`.\n\nHowever this version requires `pbr (!=2.1.0,>=2.0.0)` which is incompatible with `pbr==0.11.1`,\nso `poetry` will try to find a version of `oslo.i18n` that satisfies `pbr (>=0.6,!=0.7,<1.0)`.\n\nBy analyzing the releases of `oslo.i18n`, it will find `oslo.i18n==2.1.0` which requires `pbr (>=0.11,<2.0)`.\nAt this point the rest of the resolution is straightforward since there is no more conflict.\n\n## Resources\n\n* [Official Website](https://python-poetry.org)\n* [Issue Tracker](https://github.com/python-poetry/poetry/issues)\n* [Discord](https://discord.com/invite/awxPgve)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bennylut/relaxed-poetry",
    "keywords": "packaging,dependency,poetry,relaxed-poetry",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pkm-main",
    "package_url": "https://pypi.org/project/pkm-main/",
    "platform": "",
    "project_url": "https://pypi.org/project/pkm-main/",
    "project_urls": {
      "Documentation": "https://github.com/bennylut/relaxed-poetry",
      "Homepage": "https://github.com/bennylut/relaxed-poetry",
      "Repository": "https://github.com/bennylut/relaxed-poetry"
    },
    "release_url": "https://pypi.org/project/pkm-main/0.2.2/",
    "requires_dist": [
      "pkm-buildsys (>=0.2.2,<0.3.0)",
      "cleo (>=1.0.0a4,<2.0.0)",
      "crashtest (>=0.3.0,<0.4.0)",
      "requests (>=2.18,<3.0)",
      "cachy (>=0.3.0,<0.4.0)",
      "requests-toolbelt (>=0.9.1,<0.10.0)",
      "cachecontrol[filecache] (>=0.12.4,<0.13.0)",
      "pkginfo (>=1.5,<2.0)",
      "html5lib (>=1.0,<2.0)",
      "shellingham (>=1.1,<2.0)",
      "pexpect (>=4.7.0,<5.0.0)",
      "packaging (>=20.4,<21.0)",
      "virtualenv",
      "keyring (>=21.2.0)",
      "entrypoints (>=0.3,<0.4)",
      "importlib-metadata (>=1.6.0,<2.0.0); python_version < \"3.8\"",
      "dataclasses (>=0.8,<0.9); python_version >= \"3.6\" and python_version < \"3.7\"",
      "protopy-lib (>=0.2.0)",
      "typing-extensions (>=3.10.0.2,<4.0.0.0)"
    ],
    "requires_python": ">=3.6,<4.0",
    "summary": "Fork of Poetry (Python dependency management and packaging tool), attempts to be faster and less strict.",
    "version": "0.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11854583,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "74c09436bdda4fb9ff2ece47bcc36e3a2be75663ef373f5746420a8595b830a5",
          "md5": "38656d82d37871c25ea50e7967d88515",
          "sha256": "b07ee22d30dccef97ef635e20782fa9f3a0e85081579ec45ed65bc5c1276e346"
        },
        "downloads": -1,
        "filename": "pkm_main-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "38656d82d37871c25ea50e7967d88515",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 205498,
        "upload_time": "2021-10-27T20:39:56",
        "upload_time_iso_8601": "2021-10-27T20:39:56.860884Z",
        "url": "https://files.pythonhosted.org/packages/74/c0/9436bdda4fb9ff2ece47bcc36e3a2be75663ef373f5746420a8595b830a5/pkm_main-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a52bdf24996547c207f5d35b462b758d076f60270b4643dbfdff545115c09a28",
          "md5": "c724f4c304e119c206b7c1f4ead8cdae",
          "sha256": "00ebeec026eec01fd03cc53f3a79cc357ad24f36533902cd00e571ec5a537922"
        },
        "downloads": -1,
        "filename": "pkm-main-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c724f4c304e119c206b7c1f4ead8cdae",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4.0",
        "size": 343034,
        "upload_time": "2021-10-27T20:39:54",
        "upload_time_iso_8601": "2021-10-27T20:39:54.021331Z",
        "url": "https://files.pythonhosted.org/packages/a5/2b/df24996547c207f5d35b462b758d076f60270b4643dbfdff545115c09a28/pkm-main-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "19fe86af457837d08a584626802cb89288038153e973d54d3a017eaf8d0882d3",
          "md5": "46c091bb1a935f6aaec41f22d4b8f8b3",
          "sha256": "4e5b430fee0ccf86d77d85b7adfc4386e37ca6095b03dd84d01ee682ca15d010"
        },
        "downloads": -1,
        "filename": "pkm_main-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "46c091bb1a935f6aaec41f22d4b8f8b3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 205521,
        "upload_time": "2021-10-28T05:41:21",
        "upload_time_iso_8601": "2021-10-28T05:41:21.832358Z",
        "url": "https://files.pythonhosted.org/packages/19/fe/86af457837d08a584626802cb89288038153e973d54d3a017eaf8d0882d3/pkm_main-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eb9193478492d355fc36f87e5b8eb3bcd53b1b3b0c02d74fbfb5d302e61c9bb7",
          "md5": "131e27a12de2c8a0967d8ca3acaa9b0c",
          "sha256": "19e37b0f45b0bd09cd5a078f4c12c9d064f7228fc077846729e54f905e996dc6"
        },
        "downloads": -1,
        "filename": "pkm-main-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "131e27a12de2c8a0967d8ca3acaa9b0c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4.0",
        "size": 343061,
        "upload_time": "2021-10-28T05:41:18",
        "upload_time_iso_8601": "2021-10-28T05:41:18.947652Z",
        "url": "https://files.pythonhosted.org/packages/eb/91/93478492d355fc36f87e5b8eb3bcd53b1b3b0c02d74fbfb5d302e61c9bb7/pkm-main-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "573e7ccc3d5cd9018b07e4aeca59282be936fb7fd5be83dc021a630b1d8210d7",
          "md5": "e2d81b4b9a19c6d2751c71a6a0d0a8a8",
          "sha256": "247ec7efc0da0432c33731cbb93b478f8340384e30be099f3e9e58693afa54f4"
        },
        "downloads": -1,
        "filename": "pkm_main-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e2d81b4b9a19c6d2751c71a6a0d0a8a8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 205518,
        "upload_time": "2021-10-28T06:03:20",
        "upload_time_iso_8601": "2021-10-28T06:03:20.225778Z",
        "url": "https://files.pythonhosted.org/packages/57/3e/7ccc3d5cd9018b07e4aeca59282be936fb7fd5be83dc021a630b1d8210d7/pkm_main-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e21ebcfb4d789e18e30ae61e5021f5ad45ee8076ab26b8bba3181e58924426a",
          "md5": "b4f4d26b8296cf04c4d97156ed9f56cf",
          "sha256": "a13c400312f93dc7551242eed5ce0b2c3dd0d3b000ff457ada8d17fd6e3577d4"
        },
        "downloads": -1,
        "filename": "pkm-main-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b4f4d26b8296cf04c4d97156ed9f56cf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4.0",
        "size": 343077,
        "upload_time": "2021-10-28T06:03:17",
        "upload_time_iso_8601": "2021-10-28T06:03:17.246229Z",
        "url": "https://files.pythonhosted.org/packages/7e/21/ebcfb4d789e18e30ae61e5021f5ad45ee8076ab26b8bba3181e58924426a/pkm-main-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "350ae9c702e569dc53914f5b4b7501c9b1d93f9bfefad9146b541568698aca8a",
          "md5": "9dde7748230a525e1084a743f2dbdd95",
          "sha256": "4a60a96a5475f3218e24cfdebcff889acd08633897d22406e491ce08fd808af0"
        },
        "downloads": -1,
        "filename": "pkm_main-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9dde7748230a525e1084a743f2dbdd95",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 205520,
        "upload_time": "2021-10-28T07:43:30",
        "upload_time_iso_8601": "2021-10-28T07:43:30.641841Z",
        "url": "https://files.pythonhosted.org/packages/35/0a/e9c702e569dc53914f5b4b7501c9b1d93f9bfefad9146b541568698aca8a/pkm_main-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ac3535014e44102fc3200699011c325c897231ed9bb503c2a6297de1298bd5e4",
          "md5": "c3084a646dc30f5291a83a5c1fc09be3",
          "sha256": "71d73f2f90a39fa08460d03babb29e189c2f020c7038f9deac1460e89384f921"
        },
        "downloads": -1,
        "filename": "pkm-main-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c3084a646dc30f5291a83a5c1fc09be3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4.0",
        "size": 343074,
        "upload_time": "2021-10-28T07:43:28",
        "upload_time_iso_8601": "2021-10-28T07:43:28.628889Z",
        "url": "https://files.pythonhosted.org/packages/ac/35/35014e44102fc3200699011c325c897231ed9bb503c2a6297de1298bd5e4/pkm-main-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "350ae9c702e569dc53914f5b4b7501c9b1d93f9bfefad9146b541568698aca8a",
        "md5": "9dde7748230a525e1084a743f2dbdd95",
        "sha256": "4a60a96a5475f3218e24cfdebcff889acd08633897d22406e491ce08fd808af0"
      },
      "downloads": -1,
      "filename": "pkm_main-0.2.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9dde7748230a525e1084a743f2dbdd95",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6,<4.0",
      "size": 205520,
      "upload_time": "2021-10-28T07:43:30",
      "upload_time_iso_8601": "2021-10-28T07:43:30.641841Z",
      "url": "https://files.pythonhosted.org/packages/35/0a/e9c702e569dc53914f5b4b7501c9b1d93f9bfefad9146b541568698aca8a/pkm_main-0.2.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ac3535014e44102fc3200699011c325c897231ed9bb503c2a6297de1298bd5e4",
        "md5": "c3084a646dc30f5291a83a5c1fc09be3",
        "sha256": "71d73f2f90a39fa08460d03babb29e189c2f020c7038f9deac1460e89384f921"
      },
      "downloads": -1,
      "filename": "pkm-main-0.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "c3084a646dc30f5291a83a5c1fc09be3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6,<4.0",
      "size": 343074,
      "upload_time": "2021-10-28T07:43:28",
      "upload_time_iso_8601": "2021-10-28T07:43:28.628889Z",
      "url": "https://files.pythonhosted.org/packages/ac/35/35014e44102fc3200699011c325c897231ed9bb503c2a6297de1298bd5e4/pkm-main-0.2.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}