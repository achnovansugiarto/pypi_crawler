{
  "info": {
    "author": "The Sqlalchemy-Bigquery Authors",
    "author_email": "googleapis-packages@google.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Database :: Front-Ends"
    ],
    "description": "SQLAlchemy Dialect for BigQuery\n===============================\n\n|beta| |pypi| |versions|\n\n`SQLALchemy Dialects`_\n\n- `Dialect Documentation`_\n- `Product Documentation`_\n\n.. |beta| image:: https://img.shields.io/badge/support-beta-orange.svg\n   :target: https://github.com/googleapis/google-cloud-python/blob/master/README.rst#beta-support\n.. |pypi| image:: https://img.shields.io/pypi/v/sqlalchemy-bigquery.svg\n   :target: https://pypi.org/project/sqlalchemy-bigquery/\n.. |versions| image:: https://img.shields.io/pypi/pyversions/sqlalchemy-bigquery.svg\n   :target: https://pypi.org/project/sqlalchemy-bigquery/\n.. _SQLAlchemy Dialects: https://docs.sqlalchemy.org/en/14/dialects/\n.. _Dialect Documentation: https://googleapis.dev/python/sqlalchemy-bigquery/latest\n.. _Product Documentation: https://cloud.google.com/bigquery/docs/\n\n\nQuick Start\n-----------\n\nIn order to use this library, you first need to go through the following steps:\n\n1. `Select or create a Cloud Platform project.`_\n2. [Optional] `Enable billing for your project.`_\n3. `Enable the BigQuery Storage API.`_\n4. `Setup Authentication.`_\n\n.. _Select or create a Cloud Platform project.: https://console.cloud.google.com/project\n.. _Enable billing for your project.: https://cloud.google.com/billing/docs/how-to/modify-project#enable_billing_for_a_project\n.. _Enable the BigQuery Storage API.: https://console.cloud.google.com/apis/library/bigquery.googleapis.com\n.. _Setup Authentication.: https://googleapis.dev/python/google-api-core/latest/auth.html\n\nInstallation\n------------\n\nInstall this library in a `virtualenv`_ using pip. `virtualenv`_ is a tool to\ncreate isolated Python environments. The basic problem it addresses is one of\ndependencies and versions, and indirectly permissions.\n\nWith `virtualenv`_, it's possible to install this library without needing system\ninstall permissions, and without clashing with the installed system\ndependencies.\n\n.. _`virtualenv`: https://virtualenv.pypa.io/en/latest/\n\n\nSupported Python Versions\n^^^^^^^^^^^^^^^^^^^^^^^^^\nPython >= 3.6\n\nUnsupported Python Versions\n^^^^^^^^^^^^^^^^^^^^^^^^^^^\nPython <= 3.5.\n\n\nMac/Linux\n^^^^^^^^^\n\n.. code-block:: console\n\n    pip install virtualenv\n    virtualenv <your-env>\n    source <your-env>/bin/activate\n    <your-env>/bin/pip install sqlalchemy-bigquery\n\n\nWindows\n^^^^^^^\n\n.. code-block:: console\n\n    pip install virtualenv\n    virtualenv <your-env>\n    <your-env>\\Scripts\\activate\n    <your-env>\\Scripts\\pip.exe install sqlalchemy-bigquery\n\nUsage\n-----\n\nSQLAlchemy\n^^^^^^^^^^\n\n.. code-block:: python\n\n    from sqlalchemy import *\n    from sqlalchemy.engine import create_engine\n    from sqlalchemy.schema import *\n    engine = create_engine('bigquery://project')\n    table = Table('dataset.table', MetaData(bind=engine), autoload=True)\n    print(select([func.count('*')], from_obj=table).scalar())\n\nProject\n^^^^^^^\n\n``project`` in ``bigquery://project`` is used to instantiate BigQuery client with the specific project ID. To infer project from the environment, use ``bigquery://`` – without ``project``\n\nAuthentication\n^^^^^^^^^^^^^^\n\nFollow the `Google Cloud library guide <https://google-cloud-python.readthedocs.io/en/latest/core/auth.html>`_ for authentication. Alternatively, you can provide the path to a service account JSON file in ``create_engine()``:\n\n.. code-block:: python\n\n    engine = create_engine('bigquery://', credentials_path='/path/to/keyfile.json')\n\n\nLocation\n^^^^^^^^\n\nTo specify location of your datasets pass ``location`` to ``create_engine()``:\n\n.. code-block:: python\n\n    engine = create_engine('bigquery://project', location=\"asia-northeast1\")\n\n\nTable names\n^^^^^^^^^^^\n\nTo query tables from non-default projects or datasets, use the following format for the SQLAlchemy schema name: ``[project.]dataset``, e.g.:\n\n.. code-block:: python\n\n    # If neither dataset nor project are the default\n    sample_table_1 = Table('natality', schema='bigquery-public-data.samples')\n    # If just dataset is not the default\n    sample_table_2 = Table('natality', schema='bigquery-public-data')\n\nBatch size\n^^^^^^^^^^\n\nBy default, ``arraysize`` is set to ``5000``. ``arraysize`` is used to set the batch size for fetching results. To change it, pass ``arraysize`` to ``create_engine()``:\n\n.. code-block:: python\n\n    engine = create_engine('bigquery://project', arraysize=1000)\n\nPage size for dataset.list_tables\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nBy default, ``list_tables_page_size`` is set to ``1000``. ``list_tables_page_size`` is used to set the max_results for `dataset.list_tables`_ operation. To change it, pass ``list_tables_page_size`` to ``create_engine()``:\n\n.. _`dataset.list_tables`: https://cloud.google.com/bigquery/docs/reference/rest/v2/tables/list\n.. code-block:: python\n\n    engine = create_engine('bigquery://project', list_tables_page_size=100)\n\nAdding a Default Dataset\n^^^^^^^^^^^^^^^^^^^^^^^^\n\nIf you want to have the ``Client`` use a default dataset, specify it as the \"database\" portion of the connection string.\n\n.. code-block:: python\n\n    engine = create_engine('bigquery://project/dataset')\n\nWhen using a default dataset, don't include the dataset name in the table name, e.g.:\n\n.. code-block:: python\n\n    table = Table('table_name')\n\nNote that specifying a default dataset doesn't restrict execution of queries to that particular dataset when using raw queries, e.g.:\n\n.. code-block:: python\n\n    # Set default dataset to dataset_a\n    engine = create_engine('bigquery://project/dataset_a')\n\n    # This will still execute and return rows from dataset_b\n    engine.execute('SELECT * FROM dataset_b.table').fetchall()\n\n\nConnection String Parameters\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nThere are many situations where you can't call ``create_engine`` directly, such as when using tools like `Flask SQLAlchemy <http://flask-sqlalchemy.pocoo.org/2.3/>`_. For situations like these, or for situations where you want the ``Client`` to have a `default_query_job_config <https://googlecloudplatform.github.io/google-cloud-python/latest/bigquery/generated/google.cloud.bigquery.client.Client.html#google.cloud.bigquery.client.Client>`_, you can pass many arguments in the query of the connection string.\n\nThe ``credentials_path``, ``credentials_info``, ``location``, ``arraysize`` and ``list_tables_page_size`` parameters are used by this library, and the rest are used to create a `QueryJobConfig <https://googlecloudplatform.github.io/google-cloud-python/latest/bigquery/generated/google.cloud.bigquery.job.QueryJobConfig.html#google.cloud.bigquery.job.QueryJobConfig>`_\n\nNote that if you want to use query strings, it will be more reliable if you use three slashes, so ``'bigquery:///?a=b'`` will work reliably, but ``'bigquery://?a=b'`` might be interpreted as having a \"database\" of ``?a=b``, depending on the system being used to parse the connection string.\n\nHere are examples of all the supported arguments. Any not present are either for legacy sql (which isn't supported by this library), or are too complex and are not implemented.\n\n.. code-block:: python\n\n    engine = create_engine(\n        'bigquery://some-project/some-dataset' '?'\n        'credentials_path=/some/path/to.json' '&'\n        'location=some-location' '&'\n        'arraysize=1000' '&'\n        'list_tables_page_size=100' '&'\n        'clustering_fields=a,b,c' '&'\n        'create_disposition=CREATE_IF_NEEDED' '&'\n        'destination=different-project.different-dataset.table' '&'\n        'destination_encryption_configuration=some-configuration' '&'\n        'dry_run=true' '&'\n        'labels=a:b,c:d' '&'\n        'maximum_bytes_billed=1000' '&'\n        'priority=INTERACTIVE' '&'\n        'schema_update_options=ALLOW_FIELD_ADDITION,ALLOW_FIELD_RELAXATION' '&'\n        'use_query_cache=true' '&'\n        'write_disposition=WRITE_APPEND'\n    )\n\n\nCreating tables\n^^^^^^^^^^^^^^^\n\nTo add metadata to a table:\n\n.. code-block:: python\n\n    table = Table('mytable', ..., bigquery_description='my table description', bigquery_friendly_name='my table friendly name')\n\nTo add metadata to a column:\n\n.. code-block:: python\n\n    Column('mycolumn', doc='my column description')\n\n\nThreading and Multiprocessing\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nBecause this client uses the `grpc` library, it's safe to\nshare instances across threads.\n\nIn multiprocessing scenarios, the best\npractice is to create client instances *after* the invocation of\n`os.fork` by `multiprocessing.pool.Pool` or\n`multiprocessing.Process`.\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/googleapis/python-bigquery-sqlalchemy",
    "keywords": "bigquery,sqlalchemy",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sqlalchemy-bigquery-user-cred",
    "package_url": "https://pypi.org/project/sqlalchemy-bigquery-user-cred/",
    "platform": "Posix; MacOS X; Windows",
    "project_url": "https://pypi.org/project/sqlalchemy-bigquery-user-cred/",
    "project_urls": {
      "Homepage": "https://github.com/googleapis/python-bigquery-sqlalchemy"
    },
    "release_url": "https://pypi.org/project/sqlalchemy-bigquery-user-cred/1.0.0a2/",
    "requires_dist": [
      "google-api-core (>=1.30.0)",
      "google-auth (<3.0.0dev,>=1.25.0)",
      "google-cloud-bigquery (>=2.19.0)",
      "sqlalchemy (<1.5.0dev,>=1.2.0)",
      "future"
    ],
    "requires_python": ">=3.6, <3.10",
    "summary": "SQLAlchemy dialect for BigQuery",
    "version": "1.0.0a2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11168442,
  "releases": {
    "1.0.0a2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "31de794eff00d1afe8a11b4cd2b680c155a536859063d83d0b5f68ad8c96d921",
          "md5": "4e451542af05b049b74657fe285e1b80",
          "sha256": "9c15e9f30b484e6c34dd51d25d64d280ccbeb63008663f5399a45d3f53d374b0"
        },
        "downloads": -1,
        "filename": "sqlalchemy_bigquery_user_cred-1.0.0a2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4e451542af05b049b74657fe285e1b80",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6, <3.10",
        "size": 23713,
        "upload_time": "2021-08-13T05:20:23",
        "upload_time_iso_8601": "2021-08-13T05:20:23.300762Z",
        "url": "https://files.pythonhosted.org/packages/31/de/794eff00d1afe8a11b4cd2b680c155a536859063d83d0b5f68ad8c96d921/sqlalchemy_bigquery_user_cred-1.0.0a2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2445a041981d83c513f347b78540b31dd293b2d646723a71f7eb759f7e811507",
          "md5": "a9768d61ba49550069e6328e2aec5cfc",
          "sha256": "7d68ca2f975ab54fcd5e8b6dd899626bccca476db9501fd85c6ee3b79d1b4fff"
        },
        "downloads": -1,
        "filename": "sqlalchemy-bigquery-user-cred-1.0.0a2.tar.gz",
        "has_sig": false,
        "md5_digest": "a9768d61ba49550069e6328e2aec5cfc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <3.10",
        "size": 83871,
        "upload_time": "2021-08-13T05:20:25",
        "upload_time_iso_8601": "2021-08-13T05:20:25.969060Z",
        "url": "https://files.pythonhosted.org/packages/24/45/a041981d83c513f347b78540b31dd293b2d646723a71f7eb759f7e811507/sqlalchemy-bigquery-user-cred-1.0.0a2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "31de794eff00d1afe8a11b4cd2b680c155a536859063d83d0b5f68ad8c96d921",
        "md5": "4e451542af05b049b74657fe285e1b80",
        "sha256": "9c15e9f30b484e6c34dd51d25d64d280ccbeb63008663f5399a45d3f53d374b0"
      },
      "downloads": -1,
      "filename": "sqlalchemy_bigquery_user_cred-1.0.0a2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4e451542af05b049b74657fe285e1b80",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.6, <3.10",
      "size": 23713,
      "upload_time": "2021-08-13T05:20:23",
      "upload_time_iso_8601": "2021-08-13T05:20:23.300762Z",
      "url": "https://files.pythonhosted.org/packages/31/de/794eff00d1afe8a11b4cd2b680c155a536859063d83d0b5f68ad8c96d921/sqlalchemy_bigquery_user_cred-1.0.0a2-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2445a041981d83c513f347b78540b31dd293b2d646723a71f7eb759f7e811507",
        "md5": "a9768d61ba49550069e6328e2aec5cfc",
        "sha256": "7d68ca2f975ab54fcd5e8b6dd899626bccca476db9501fd85c6ee3b79d1b4fff"
      },
      "downloads": -1,
      "filename": "sqlalchemy-bigquery-user-cred-1.0.0a2.tar.gz",
      "has_sig": false,
      "md5_digest": "a9768d61ba49550069e6328e2aec5cfc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6, <3.10",
      "size": 83871,
      "upload_time": "2021-08-13T05:20:25",
      "upload_time_iso_8601": "2021-08-13T05:20:25.969060Z",
      "url": "https://files.pythonhosted.org/packages/24/45/a041981d83c513f347b78540b31dd293b2d646723a71f7eb759f7e811507/sqlalchemy-bigquery-user-cred-1.0.0a2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}