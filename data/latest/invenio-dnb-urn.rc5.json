{
  "info": {
    "author": "University of Münster",
    "author_email": "gressho@uni-muenster.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha"
    ],
    "description": "```\n    Copyright (C) 2022, 2023 University of Münster.\n\n\n    Invenio-DNB-Urn is free software; you can redistribute it and/or\n    modify it under the terms of the MIT License; see LICENSE file for more\n    details.\n```\n\n# Invenio-DNB-Urn\n\nDNB support module for InvenioRDM. It offers a URN PIDProvider and additional metadata formats to be included\nin the OAI-PMH server. Currently these are epicur and xMetaDissPlus.\nIn a later step the epicur format will be replaced by extending the URN PIDProvider by accessing the\nDNB REST-APIs to directly mint new and changed URN's.\n\n## Configuration\n\nAdd the following to invenio.cfg:\n\n```python\nimport idutils\nfrom invenio_dnb_urn import provider\nfrom invenio_rdm_records.services.pids import providers\n\nOAISERVER_METADATA_FORMATS = {\n  \"oai_dc\": {\n    \"serializer\": \"invenio_rdm_records.oai:dublincore_etree\",\n    \"schema\": \"http://www.openarchives.org/OAI/2.0/oai_dc.xsd\",\n    \"namespace\": \"http://www.openarchives.org/OAI/2.0/oai_dc/\"\n  },\n  \"datacite\": {\n    \"serializer\": \"invenio_rdm_records.oai:datacite_etree\",\n    \"schema\": \"http://schema.datacite.org/meta/nonexistant/nonexistant.xsd\",\n    \"namespace\": \"http://datacite.org/schema/nonexistant\"\n  },\n  \"oai_datacite\": {\n    \"serializer\": \"invenio_rdm_records.oai:oai_datacite_etree\",\n    \"schema\": \"http://schema.datacite.org/oai/oai-1.1/oai.xsd\",\n    \"namespace\": \"http://schema.datacite.org/oai/oai-1.1/\"\n  },\n  \"xMetaDiss\": {\n    \"serializer\": \"invenio_dnb_urn.oai:xmetadiss_etree\",\n    \"schema\": \"http://www.d-nb.de/standards/xmetadissplus/xmetadissplus.xsd\",\n    \"namespace\": \"http://www.d-nb.de/standards/xmetadissplus/\"\n  },\n}\n\nURN_DNB_ID_PREFIX = \"urn:nbn:de:hbz:6\"\nXMETADISS_TYPE_DINI_PUBLTYPE = \"openaire_type\"\nXMETADISS_TYPE_DCTERMS_DCMITYPE = \"openaire_type\"\n\n#\n# Persistent identifiers configuration\n#\nRDM_PERSISTENT_IDENTIFIER_PROVIDERS = [\n  # DataCite DOI provider\n  providers.DataCitePIDProvider(\n    \"datacite\",\n    client=providers.DataCiteClient(\"datacite\", config_prefix=\"DATACITE\"),\n    label=_(\"DOI\"),\n  ),\n  # DOI provider for externally managed DOIs\n  providers.ExternalPIDProvider(\n    \"external\",\n    \"doi\",\n    validators=[providers.BlockedPrefixes(config_names=[\"DATACITE_PREFIX\"])],\n    label=_(\"DOI\"),\n  ),\n  # OAI identifier\n  providers.OAIPIDProvider(\n    \"oai\",\n    label=_(\"OAI ID\"),\n  ),\n  # URN identifier\n  provider.DnbUrnProvider(\n    \"urn\",\n    client=provider.DNBUrnClient(\"dnb\"),\n    label=_(\"URN\"),\n  ),\n]\n\"\"\"A list of configured persistent identifier providers.\nATTENTION: All providers (and clients) takes a name as the first parameter.\nThis name is stored in the database and used in the REST API in order to\nidentify the given provider and client.\nThe name is further used to configure the desired persistent identifiers (see\n'RDM_PERSISTENT_IDENTIFIERS' below)\n\"\"\"\n\nRDM_PERSISTENT_IDENTIFIERS = {\n  # DOI automatically removed if DATACITE_ENABLED is False.\n  \"doi\": {\n    \"providers\": [\"datacite\", \"external\"],\n    \"required\": True,\n    \"label\": _(\"DOI\"),\n    \"validator\": idutils.is_doi,\n    \"normalizer\": idutils.normalize_doi,\n  },\n  \"oai\": {\n    \"providers\": [\"oai\"],\n    \"required\": True,\n    \"label\": _(\"OAI\"),\n  },\n  \"urn\": {\n    \"providers\": [\"urn\"],\n    \"required\": True,\n    \"label\": _(\"URN\"),\n  },\n}\n```\n\nIn order to fully implement xMetaDissPlus with  all mandatory fields, the metadata definition has to be expanded by custom\nfields. At first add the file thesis_types.yaml to /app_data/vocabularies, then add\n\n```yaml\nthesis:\n  pid-type: ths\n  data-file: vocabularies/thesis_types.yaml\n```\n\nto the vocabularies.yaml. Next, add\n\n```python\nfrom invenio_records_resources.services.custom_fields import TextCF\nfrom invenio_vocabularies.services.custom_fields import VocabularyCF\n\nRDM_NAMESPACES = {\n  # DNB Thesis\n  \"thesis\": \"https://dnb.de/thesis/\",\n}\n\nRDM_CUSTOM_FIELDS = {\n  VocabularyCF(\n    name=\"thesis:level\",\n    vocabulary_id=\"thesis\",\n    dump_options=True,\n    multiple=False,\n  ),\n  TextCF(\n    name=\"thesis:organisation\",\n  ),\n  TextCF(\n    name=\"thesis:place\",\n  ),\n}\n\nRDM_CUSTOM_FIELDS_UI = [\n  {\n    \"section\": _(\"Hochschulschriftenvermerk\"),\n    \"fields\": [\n      dict(\n        field=\"thesis:level\",\n        ui_widget=\"Dropdown\",\n        props=dict(\n          label=\"Abschluss\",\n          placeholder=\"Grad des Abschlusses\",\n          icon=\"pencil\",\n          description=\"You should fill this field with the thesis degree\",\n          search=True,  # True for autocomplete dropdowns with search functionality\n          multiple=False,   # True for selecting multiple values\n          clearable=True,\n          required=False,\n        )\n      ),\n      dict(\n        field=\"thesis:organisation\",\n        ui_widget=\"Input\",\n        props=dict(\n          label=\"Hochschule\",\n          placeholder=\"Verleihende Hochschule\",\n          icon=\"pencil\",\n          description=\"You should fill this field with the institution that awards the degree\",\n          required=False,\n        )\n      ),\n      dict(\n        field=\"thesis:place\",\n        ui_widget=\"Input\",\n        props=dict(\n          label=\"Ort\",\n          placeholder=\"Ort\",\n          icon=\"pencil\",\n          description=\"Place of the university/institution.\",\n          required=False,\n        )\n      ),\n    ]\n  }\n]\n```\n\nto your invenio.cfg and execute\n\n```commandline\npipenv run invenio rdm-records custom-fields init\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ulbmuenster/invenio-dnb-urn",
    "keywords": "invenio rdm data model",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "invenio-dnb-urn",
    "package_url": "https://pypi.org/project/invenio-dnb-urn/",
    "platform": "any",
    "project_url": "https://pypi.org/project/invenio-dnb-urn/",
    "project_urls": {
      "Homepage": "https://github.com/ulbmuenster/invenio-dnb-urn"
    },
    "release_url": "https://pypi.org/project/invenio-dnb-urn/0.1.3/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "\"InvenioRDM module so support DNB urn registration.\"",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16902900,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1aba33affef2720c72732d599469ab0edcaac606484d925ccdbc8813dcede78a",
          "md5": "9ec5e80704b677eb184405a5a3c3c7eb",
          "sha256": "9ee175e9abda5cf1e84be32dc5886334e7d8b8005c29f9745731c97fc8cb102f"
        },
        "downloads": -1,
        "filename": "invenio-dnb-urn-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9ec5e80704b677eb184405a5a3c3c7eb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 14436,
        "upload_time": "2023-02-13T16:43:17",
        "upload_time_iso_8601": "2023-02-13T16:43:17.135600Z",
        "url": "https://files.pythonhosted.org/packages/1a/ba/33affef2720c72732d599469ab0edcaac606484d925ccdbc8813dcede78a/invenio-dnb-urn-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "202b17442d3522e10c751ccc0f25718000fe0fa49a065102f097e6544ced8292",
          "md5": "feed2bb722d1a400e33ae5fd7b8dd82a",
          "sha256": "5efd9db8f6787bbaf14dffb47f452a7ff82bd248f26dd3ab5aa2950a20fbd922"
        },
        "downloads": -1,
        "filename": "invenio-dnb-urn-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "feed2bb722d1a400e33ae5fd7b8dd82a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 14416,
        "upload_time": "2023-02-13T16:49:24",
        "upload_time_iso_8601": "2023-02-13T16:49:24.379484Z",
        "url": "https://files.pythonhosted.org/packages/20/2b/17442d3522e10c751ccc0f25718000fe0fa49a065102f097e6544ced8292/invenio-dnb-urn-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7166693ac78b80aac723d8d824580175a9a1020ea1901479b87c2ca0aa88ece4",
          "md5": "7a2180784524a232bcd06dc6efe93ef8",
          "sha256": "71ac79aaaefda62fffb2d6ae04d28815ac1c4fee73c18a3d107dc26b69977662"
        },
        "downloads": -1,
        "filename": "invenio-dnb-urn-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7a2180784524a232bcd06dc6efe93ef8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 14399,
        "upload_time": "2023-02-17T09:42:12",
        "upload_time_iso_8601": "2023-02-17T09:42:12.910361Z",
        "url": "https://files.pythonhosted.org/packages/71/66/693ac78b80aac723d8d824580175a9a1020ea1901479b87c2ca0aa88ece4/invenio-dnb-urn-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b42f9c84c0ff2ccd70118e02f44333ae0470d5790dc481dc48693e2ac8d21dad",
          "md5": "fc98cd24dd5902e12bcca4565edb7950",
          "sha256": "0273463d22c168a72802782b3c824eb64d41ae15454b820483c1034b972cca09"
        },
        "downloads": -1,
        "filename": "invenio-dnb-urn-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "fc98cd24dd5902e12bcca4565edb7950",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 14388,
        "upload_time": "2023-02-17T11:26:08",
        "upload_time_iso_8601": "2023-02-17T11:26:08.171291Z",
        "url": "https://files.pythonhosted.org/packages/b4/2f/9c84c0ff2ccd70118e02f44333ae0470d5790dc481dc48693e2ac8d21dad/invenio-dnb-urn-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "81d70d768d212a5f5666244f9a40607664dffee088b61dcc303bfd63c0b99a6f",
          "md5": "3d05a89ed129f27507e7a2598c10ded3",
          "sha256": "5c96088fbf78e91e14c66c9122b4f19629c0dcb28b85a0e54ceb6d7f926cfcc3"
        },
        "downloads": -1,
        "filename": "invenio-dnb-urn-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "3d05a89ed129f27507e7a2598c10ded3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 14374,
        "upload_time": "2023-02-17T13:29:54",
        "upload_time_iso_8601": "2023-02-17T13:29:54.250470Z",
        "url": "https://files.pythonhosted.org/packages/81/d7/0d768d212a5f5666244f9a40607664dffee088b61dcc303bfd63c0b99a6f/invenio-dnb-urn-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "81d70d768d212a5f5666244f9a40607664dffee088b61dcc303bfd63c0b99a6f",
        "md5": "3d05a89ed129f27507e7a2598c10ded3",
        "sha256": "5c96088fbf78e91e14c66c9122b4f19629c0dcb28b85a0e54ceb6d7f926cfcc3"
      },
      "downloads": -1,
      "filename": "invenio-dnb-urn-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "3d05a89ed129f27507e7a2598c10ded3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 14374,
      "upload_time": "2023-02-17T13:29:54",
      "upload_time_iso_8601": "2023-02-17T13:29:54.250470Z",
      "url": "https://files.pythonhosted.org/packages/81/d7/0d768d212a5f5666244f9a40607664dffee088b61dcc303bfd63c0b99a6f/invenio-dnb-urn-0.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}