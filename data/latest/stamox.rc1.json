{
  "info": {
    "author": "Jia Yaobo",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "<h1 align='center'>Stamox</h1>\n\n# Stamox: A Thin Wrapper of `JAX` and `Equinox` for Statistics\n\nJust out of curiosity of Fucntional Programming, I wrote this package. It is a thin wrapper of `JAX` and `Equinox` for statistics. It is not a complete package, and in heavy development.\n\nInspired by many packages from Python and R, I hope to fuse different features of them into one package, like `%>%` in `dplyr`,\nor apis from statsmodels and scipy etc.\n\n\n## Installation\n\n```bash\npip install stamox\n```\n\n## Documentation\n\nNot yet.\n\n## Quick Start\n\n### Similar but faster distribution functions to `R`\n\n```python\nfrom stamox.distribution import *\nimport jax.random as jrandom\n\nkey = jrandom.PRNGKey(20010813)\n\n# random\nx = rnorm(key, sample_shape=(1000, ))\n# cdf\npnorm(x)\n# ppf\nqnorm(x)\n# pdf\ndnorm(x)\n```\n\n### Fearless Pipeable\n\n`>>` is the pipe operator, which is the similar to `|>` in `F#` and `Elixir` or `%>%` in `R`. But `>>` focus on the composition of functions not the data. You must call pipeable functions with `()`.\n\n* Internal Functions Pipeable\n\n```python\nfrom stamox.distribution import *\nimport jax.random as jrandom\n\nkey = jrandom.PRNGKey(20010813)\n\n# random and ppf\npipe = rnorm(sample_shape=(1000, )) >> qnorm\nprint(pipe())\n```\n\n* Custom Functions Pipeable\n\n```python\nfrom stamox.core import make_pipe, make_partial_pipe, Pipeable\nimport jax.numpy as jnp\nimport jax.random as jrandom\n\nx = jnp.ones((1000, ))\n# single input, simply add make pipe\n@make_pipe\ndef f(x):\n    return x ** 2\n\n# multiple input, add make partial pipe\n@make_partial_pipe\ndef g(x, y):\n    return x + y\n\n# Notice Only One Positional Argument Can Be Received Along the pipe\nh = Pipeable(x) >> f >> g(y=2.) >> f >> g(y=3.) >> f\nprint(h())\n```\n\n* Compatible With `JAX` and `Equinox`\n\n```python\nfrom stamox.core import make_pipe, make_partial_pipe, Pipeable\nimport jax.numpy as jnp\nimport equinox as eqx\n\n@make_partial_pipe\n@filter_jit\n@filter_vmap\n@filter_grad\ndef f(x, y):\n    return y * x ** 3\n       \nprint(f(y=3.)(jnp.array([1., 2., 3.])))\n```\n\n## See More\n\n[JAX](https://github.com/google/jax)\n[Equinox](https://github.com/patrick-kidger/equinox#readme)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jiayaobo/stamox",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "stamox",
    "package_url": "https://pypi.org/project/stamox/",
    "platform": null,
    "project_url": "https://pypi.org/project/stamox/",
    "project_urls": {
      "Homepage": "https://github.com/jiayaobo/stamox"
    },
    "release_url": "https://pypi.org/project/stamox/0.0.1/",
    "requires_dist": [
      "jax (>=0.4.4)",
      "jaxtyping (>=0.2.14)",
      "typing-extensions (>=4.5.0)",
      "equinox (>=0.10.1)",
      "jaxopt (>=0.6)",
      "tensorflow-probability (>=0.19.0)",
      "jax (>=0.4.4) ; extra == 'complete'",
      "jaxtyping (>=0.2.14) ; extra == 'complete'",
      "typing-extensions (>=4.5.0) ; extra == 'complete'",
      "equinox (>=0.10.1) ; extra == 'complete'",
      "jaxopt (>=0.6) ; extra == 'complete'",
      "tensorflow-probability (>=0.19.0) ; extra == 'complete'",
      "pytest ; extra == 'complete'",
      "scipy ; extra == 'complete'",
      "numpy ; extra == 'complete'",
      "sklearn ; extra == 'complete'",
      "statsmodels ; extra == 'complete'",
      "pytest ; extra == 'tests'",
      "scipy ; extra == 'tests'",
      "numpy ; extra == 'tests'",
      "sklearn ; extra == 'tests'",
      "statsmodels ; extra == 'tests'"
    ],
    "requires_python": ">=3",
    "summary": "High Performance Statistics Library",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17459563,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2145f49420114d9980aa3a8bd5daa747770c3ef3b8c7ac2e6ef25eb12db25a0b",
          "md5": "318c71605f6b1a38a1944f93acda79dd",
          "sha256": "5f8e803583946da9f43fe6477bb4de8538787165031c49737dbde89282d67785"
        },
        "downloads": -1,
        "filename": "stamox-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "318c71605f6b1a38a1944f93acda79dd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 51255,
        "upload_time": "2023-03-27T10:16:07",
        "upload_time_iso_8601": "2023-03-27T10:16:07.671073Z",
        "url": "https://files.pythonhosted.org/packages/21/45/f49420114d9980aa3a8bd5daa747770c3ef3b8c7ac2e6ef25eb12db25a0b/stamox-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2145f49420114d9980aa3a8bd5daa747770c3ef3b8c7ac2e6ef25eb12db25a0b",
        "md5": "318c71605f6b1a38a1944f93acda79dd",
        "sha256": "5f8e803583946da9f43fe6477bb4de8538787165031c49737dbde89282d67785"
      },
      "downloads": -1,
      "filename": "stamox-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "318c71605f6b1a38a1944f93acda79dd",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3",
      "size": 51255,
      "upload_time": "2023-03-27T10:16:07",
      "upload_time_iso_8601": "2023-03-27T10:16:07.671073Z",
      "url": "https://files.pythonhosted.org/packages/21/45/f49420114d9980aa3a8bd5daa747770c3ef3b8c7ac2e6ef25eb12db25a0b/stamox-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}