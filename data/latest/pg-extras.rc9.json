{
  "info": {
    "author": "Pawel Urbanek",
    "author_email": "contact@pawelurbanek.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Database",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# Python PG Extras [![PyPI version](https://badge.fury.io/py/pg-extras.svg)](https://badge.fury.io/py/pg-extras)\n\nPython port of [Heroku PG Extras](https://github.com/heroku/heroku-pg-extras) with several additions and improvements. The goal of this project is to provide powerful insights into the PostgreSQL database for Python apps that are not using the Heroku PostgreSQL plugin.\n\nQueries can be used to obtain information about a Postgres instance, that may be useful when analyzing performance issues. This includes information about locks, index usage, buffer cache hit ratios and vacuum statistics. Python API enables developers to easily integrate the tool into e.g. automatic monitoring tasks.\n\nYou can check out this blog post for detailed step by step tutorial on how to [optimize PostgreSQL using PG Extras library](https://pawelurbanek.com/postgresql-fix-performance).\n\nAlternative versions:\n\n- [Ruby](https://github.com/pawurb/ruby-pg-extras)\n\n- [Ruby on Rails](https://github.com/pawurb/rails-pg-extras)\n\n- [NodeJS](https://github.com/pawurb/node-postgres-extras)\n\n- [Elixir](https://github.com/pawurb/ecto_psql_extras)\n\n- [Haskell](https://github.com/pawurb/haskell-pg-extras)\n\n## Installation\n\n```bash\npip install pg-extras\n```\n\nSome of the queries (e.g., `calls` and `outliers`) require [pg_stat_statements](https://www.postgresql.org/docs/current/pgstatstatements.html) extension enabled.\n\nYou can check if it is enabled in your database by running:\n\n```python\nPGExtras.query('extensions')\n```\nYou should see the similar line in the output:\n\n```bash\n| pg_stat_statements  | 1.7  | 1.7 | track execution statistics of all SQL statements executed |\n```\n\n## Usage\n\nGem expects the `os.environ['DATABASE_URL']` value in the following format:\n\n```python\n\"postgresql://postgres:secret@localhost:5432/database_name\"\n```\n\nAlternatively you can pass it directly to the method:\n\n```python\nPGExtras.query('cache_hit', database_url=\"postgresql://postgres:secret@localhost:5432/database_name\")\n```\n\nYou can run queries using a simple python API:\n\n```python\nfrom pg_extras import PGExtras\n\nPGExtras.query('cache_hit')\n```\n```bash\n+----------------+------------------------+\n|        Index and table hit rate         |\n+----------------+------------------------+\n| name           | ratio                  |\n+----------------+------------------------+\n| index hit rate | 0.97796610169491525424 |\n| table hit rate | 0.96724294813466787989 |\n+----------------+------------------------+\n```\n\nBy default the ASCII table is displayed. Alternatively you can return the raw query object:\n\n```python\nresult = PGExtras.query('cache_hit', output='raw')\n\ntype(result) # => <class 'sqlalchemy.engine.result.ResultProxy'>\nresult.keys() # => ['name', 'ratio']\nresult.fetchall() # => [('index hit rate', Decimal('0.939...')), ('table hit rate', Decimal('0.986...'))]\n\n```\n\n## Available methods\n\n### `cache_hit`\n\n```python\n\nPGExtras.query('cache_hit')\n\n      name      |         ratio\n----------------+------------------------\n index hit rate | 0.99957765013541945832\n table hit rate |                   1.00\n(2 rows)\n```\n\nThis command provides information on the efficiency of the buffer cache, for both index reads (`index hit rate`) as well as table reads (`table hit rate`). A low buffer cache hit ratio can be a sign that the Postgres instance is too small for the workload.\n\n### `index_cache_hit`\n\n```python\n\nPGExtras.query('index_cache_hit')\n\n| name                  | buffer_hits | block_reads | total_read | ratio             |\n+-----------------------+-------------+-------------+------------+-------------------+\n| teams                 | 187665      | 109         | 187774     | 0.999419514948821 |\n| subscriptions         | 5160        | 6           | 5166       | 0.99883855981417  |\n| plans                 | 5718        | 9           | 5727       | 0.998428496595076 |\n(truncated results for brevity)\n```\n\nThe same as `cache_hit` with each table's indexes cache hit info displayed separately.\n\n### `table_cache_hit`\n\n```python\n\nPGExtras.query('table_cache_hit')\n\n| name                  | buffer_hits | block_reads | total_read | ratio             |\n+-----------------------+-------------+-------------+------------+-------------------+\n| plans                 | 32123       | 2           | 32125      | 0.999937743190662 |\n| subscriptions         | 95021       | 8           | 95029      | 0.999915815172211 |\n| teams                 | 171637      | 200         | 171837     | 0.99883610631005  |\n(truncated results for brevity)\n```\n\nThe same as `cache_hit` with each table's cache hit info displayed seperately.\n\n### `index_usage`\n\n```python\n\nPGExtras.query('index_usage')\n\n       relname       | percent_of_times_index_used | rows_in_table\n---------------------+-----------------------------+---------------\n events              |                          65 |       1217347\n app_infos           |                          74 |        314057\n app_infos_user_info |                           0 |        198848\n user_info           |                           5 |         94545\n delayed_jobs        |                          27 |             0\n(5 rows)\n```\n\nThis command provides information on the efficiency of indexes, represented as what percentage of total scans were index scans. A low percentage can indicate under indexing, or wrong data being indexed.\n\n### `locks`\n\n```python\n\nPGExtras.query('locks')\n\n procpid | relname | transactionid | granted |     query_snippet     | mode             |       age\n---------+---------+---------------+---------+-----------------------+-------------------------------------\n   31776 |         |               | t       | <IDLE> in transaction | ExclusiveLock    |  00:19:29.837898\n   31776 |         |          1294 | t       | <IDLE> in transaction | RowExclusiveLock |  00:19:29.837898\n   31912 |         |               | t       | select * from hello;  | ExclusiveLock    |  00:19:17.94259\n    3443 |         |               | t       |                      +| ExclusiveLock    |  00:00:00\n         |         |               |         |    select            +|                  |\n         |         |               |         |      pg_stat_activi   |                  |\n(4 rows)\n```\n\nThis command displays queries that have taken out an exclusive lock on a relation. Exclusive locks typically prevent other operations on that relation from taking place, and can be a cause of \"hung\" queries that are waiting for a lock to be granted.\n\n### `all_locks`\n\n```python\n\nPGExtras.query('all_locks')\n\n```\n\nThis command displays all the current locks, regardless of their type.\n\n### `outliers`\n\n```python\n\nPGExtras.query('outliers')\n\n                   qry                   |    exec_time     | prop_exec_time |   ncalls    | sync_io_time\n-----------------------------------------+------------------+----------------+-------------+--------------\n SELECT * FROM archivable_usage_events.. | 154:39:26.431466 | 72.2%          | 34,211,877  | 00:00:00\n COPY public.archivable_usage_events (.. | 50:38:33.198418  | 23.6%          | 13          | 13:34:21.00108\n COPY public.usage_events (id, reporte.. | 02:32:16.335233  | 1.2%           | 13          | 00:34:19.784318\n INSERT INTO usage_events (id, retaine.. | 01:42:59.436532  | 0.8%           | 12,328,187  | 00:00:00\n SELECT * FROM usage_events WHERE (alp.. | 01:18:10.754354  | 0.6%           | 102,114,301 | 00:00:00\n UPDATE usage_events SET reporter_id =.. | 00:52:35.683254  | 0.4%           | 23,786,348  | 00:00:00\n INSERT INTO usage_events (id, retaine.. | 00:49:24.952561  | 0.4%           | 21,988,201  | 00:00:00\n(truncated results for brevity)\n```\n\nThis command displays statements, obtained from `pg_stat_statements`, ordered by the amount of time to execute in aggregate. This includes the statement itself, the total execution time for that statement, the proportion of total execution time for all statements that statement has taken up, the number of times that statement has been called, and the amount of time that statement spent on synchronous I/O (reading/writing from the file system).\n\nTypically, an efficient query will have an appropriate ratio of calls to total execution time, with as little time spent on I/O as possible. Queries that have a high total execution time but low call count should be investigated to improve their performance. Queries that have a high proportion of execution time being spent on synchronous I/O should also be investigated.\n\n### `calls`\n\n```python\n\nPGExtras.query('calls')\n\n                   qry                   |    exec_time     | prop_exec_time |   ncalls    | sync_io_time\n-----------------------------------------+------------------+----------------+-------------+--------------\n SELECT * FROM usage_events WHERE (alp.. | 01:18:11.073333  | 0.6%           | 102,120,780 | 00:00:00\n BEGIN                                   | 00:00:51.285988  | 0.0%           | 47,288,662  | 00:00:00\n COMMIT                                  | 00:00:52.31724   | 0.0%           | 47,288,615  | 00:00:00\n SELECT * FROM  archivable_usage_event.. | 154:39:26.431466 | 72.2%          | 34,211,877  | 00:00:00\n UPDATE usage_events SET reporter_id =.. | 00:52:35.986167  | 0.4%           | 23,788,388  | 00:00:00\n INSERT INTO usage_events (id, retaine.. | 00:49:25.260245  | 0.4%           | 21,990,326  | 00:00:00\n INSERT INTO usage_events (id, retaine.. | 01:42:59.436532  | 0.8%           | 12,328,187  | 00:00:00\n(truncated results for brevity)\n```\n\nThis command is much like `pg:outliers`, but ordered by the number of times a statement has been called.\n\n### `blocking`\n\n```python\n\nPGExtras.query('blocking')\n\n blocked_pid |    blocking_statement    | blocking_duration | blocking_pid |                                        blocked_statement                           | blocked_duration\n-------------+--------------------------+-------------------+--------------+------------------------------------------------------------------------------------+------------------\n         461 | select count(*) from app | 00:00:03.838314   |        15682 | UPDATE \"app\" SET \"updated_at\" = '2013-03-04 15:07:04.746688' WHERE \"id\" = 12823149 | 00:00:03.821826\n(1 row)\n```\n\nThis command displays statements that are currently holding locks that other statements are waiting to be released. This can be used in conjunction with `pg:locks` to determine which statements need to be terminated in order to resolve lock contention.\n\n### `total_index_size`\n\n```python\n\nPGExtras.query('total_index_size')\n\n  size\n-------\n 28194 MB\n(1 row)\n```\n\nThis command displays the total size of all indexes on the database, in MB. It is calculated by taking the number of pages (reported in `relpages`) and multiplying it by the page size (8192 bytes).\n\n### `index_size`\n\n```python\n\nPGExtras.query('index_size')\n\n                             name                              |  size\n---------------------------------------------------------------+---------\n idx_activity_attemptable_and_type_lesson_enrollment           | 5196 MB\n index_enrollment_attemptables_by_attempt_and_last_in_group    | 4045 MB\n index_attempts_on_student_id                                  | 2611 MB\n enrollment_activity_attemptables_pkey                         | 2513 MB\n index_attempts_on_student_id_final_attemptable_type           | 2466 MB\n attempts_pkey                                                 | 2466 MB\n index_attempts_on_response_id                                 | 2404 MB\n index_attempts_on_enrollment_id                               | 1957 MB\n index_enrollment_attemptables_by_enrollment_activity_id       | 1789 MB\n enrollment_activities_pkey                                    |  458 MB\n(truncated results for brevity)\n```\n\nThis command displays the size of each each index in the database, in MB. It is calculated by taking the number of pages (reported in `relpages`) and multiplying it by the page size (8192 bytes).\n\n### `table_size`\n\n```python\n\nPGExtras.query('table_size')\n\n                             name                              |  size\n---------------------------------------------------------------+---------\n learning_coaches                                              |  196 MB\n states                                                        |  145 MB\n grade_levels                                                  |  111 MB\n charities_customers                                           |   73 MB\n charities                                                     |   66 MB\n(truncated results for brevity)\n```\n\nThis command displays the size of each table and materialized view in the database, in MB. It is calculated by using the system administration function `pg_table_size()`, which includes the size of the main data fork, free space map, visibility map and TOAST data.\n\n### `table_indexes_size`\n\n```python\n\nPGExtras.query('table_indexes_size')\n\n                             table                             | indexes_size\n---------------------------------------------------------------+--------------\n learning_coaches                                              |    153 MB\n states                                                        |    125 MB\n charities_customers                                           |     93 MB\n charities                                                     |     16 MB\n grade_levels                                                  |     11 MB\n(truncated results for brevity)\n```\n\nThis command displays the total size of indexes for each table and materialized view, in MB. It is calculated by using the system administration function `pg_indexes_size()`.\n\n### `total_table_size`\n\n```python\n\nPGExtras.query('total_table_size')\n\n                             name                              |  size\n---------------------------------------------------------------+---------\n learning_coaches                                              |  349 MB\n states                                                        |  270 MB\n charities_customers                                           |  166 MB\n grade_levels                                                  |  122 MB\n charities                                                     |   82 MB\n(truncated results for brevity)\n```\n\nThis command displays the total size of each table and materialized view in the database, in MB. It is calculated by using the system administration function `pg_total_relation_size()`, which includes table size, total index size and TOAST data.\n\n### `unused_indexes`\n\n```python\n\nPGExtras.query('unused_indexes')\n\n          table      |                       index                | index_size | index_scans\n---------------------+--------------------------------------------+------------+-------------\n public.grade_levels | index_placement_attempts_on_grade_level_id | 97 MB      |           0\n public.observations | observations_attrs_grade_resources         | 33 MB      |           0\n public.messages     | user_resource_id_idx                       | 12 MB      |           0\n(3 rows)\n```\n\nThis command displays indexes that have < 50 scans recorded against them, and are greater than 5 pages in size, ordered by size relative to the number of index scans. This command is generally useful for eliminating indexes that are unused, which can impact write performance, as well as read performance should they occupy space in memory.\n\n### `null_indexes`\n\n```python\n\nPGExtras.query('null_indexes')\n\n   oid   |         index      | index_size | unique | indexed_column | null_frac | expected_saving\n---------+--------------------+------------+--------+----------------+-----------+-----------------\n  183764 | users_reset_token  | 1445 MB    | t      | reset_token    |   97.00%  | 1401 MB\n   88732 | plan_cancelled_at  | 539 MB     | f      | cancelled_at   |    8.30%  | 44 MB\n 9827345 | users_email        | 18 MB      | t      | email          |   28.67%  | 5160 kB\n\n```\n\nThis command displays indexes that contain `NULL` values. A high ratio of `NULL` values means that using a partial index excluding them will be beneficial in case they are not used for searching.\n\n### `seq_scans`\n\n```python\n\nPGExtras.query('seq_scans')\n\n\n               name                |  count\n-----------------------------------+----------\n learning_coaches                  | 44820063\n states                            | 36794975\n grade_levels                      | 13972293\n charities_customers               |  8615277\n charities                         |  4316276\n messages                          |  3922247\n contests_customers                |  2915972\n classroom_goals                   |  2142014\n(truncated results for brevity)\n```\n\nThis command displays the number of sequential scans recorded against all tables, descending by count of sequential scans. Tables that have very high numbers of sequential scans may be under-indexed, and it may be worth investigating queries that read from these tables.\n\n### `long_running_queries`\n\n```python\n\nPGExtras.query('long_running_queries')\n\n\n  pid  |    duration     |                                      query\n-------+-----------------+---------------------------------------------------------------------------------------\n 19578 | 02:29:11.200129 | EXPLAIN SELECT  \"students\".* FROM \"students\"  WHERE \"students\".\"id\" = 1450645 LIMIT 1\n 19465 | 02:26:05.542653 | EXPLAIN SELECT  \"students\".* FROM \"students\"  WHERE \"students\".\"id\" = 1889881 LIMIT 1\n 19632 | 02:24:46.962818 | EXPLAIN SELECT  \"students\".* FROM \"students\"  WHERE \"students\".\"id\" = 1581884 LIMIT 1\n(truncated results for brevity)\n```\n\nThis command displays currently running queries, that have been running for longer than 5 minutes, descending by duration. Very long running queries can be a source of multiple issues, such as preventing DDL statements completing or vacuum being unable to update `relfrozenxid`.\n\n### `records_rank`\n\n```python\n\nPGExtras.query('records_rank')\n\n               name                | estimated_count\n-----------------------------------+-----------------\n tastypie_apiaccess                |          568891\n notifications_event               |          381227\n core_todo                         |          178614\n core_comment                      |          123969\n notifications_notification        |          102101\n django_session                    |           68078\n (truncated results for brevity)\n```\n\nThis command displays an estimated count of rows per table, descending by estimated count. The estimated count is derived from `n_live_tup`, which is updated by vacuum operations. Due to the way `n_live_tup` is populated, sparse vs. dense pages can result in estimations that are significantly out from the real count of rows.\n\n### `bloat`\n\n```python\n\nPGExtras.query('bloat')\n\n\n type  | schemaname |           object_name         | bloat |   waste\n-------+------------+-------------------------------+-------+----------\n table | public     | bloated_table                 |   1.1 | 98 MB\n table | public     | other_bloated_table           |   1.1 | 58 MB\n index | public     | bloated_table::bloated_index  |   3.7 | 34 MB\n table | public     | clean_table                   |   0.2 | 3808 kB\n table | public     | other_clean_table             |   0.3 | 1576 kB\n (truncated results for brevity)\n```\n\nThis command displays an estimation of table \"bloat\" – space allocated to a relation that is full of dead tuples, that has yet to be reclaimed. Tables that have a high bloat ratio, typically 10 or greater, should be investigated to see if vacuuming is aggressive enough, and can be a sign of high table churn.\n\n### `vacuum_stats`\n\n```python\n\nPGExtras.query('vacuum_stats')\n\n schema |         table         | last_vacuum | last_autovacuum  |    rowcount    | dead_rowcount  | autovacuum_threshold | expect_autovacuum\n--------+-----------------------+-------------+------------------+----------------+----------------+----------------------+-------------------\n public | log_table             |             | 2013-04-26 17:37 |         18,030 |              0 |          3,656       |\n public | data_table            |             | 2013-04-26 13:09 |             79 |             28 |             66       |\n public | other_table           |             | 2013-04-26 11:41 |             41 |             47 |             58       |\n public | queue_table           |             | 2013-04-26 17:39 |             12 |          8,228 |             52       | yes\n public | picnic_table          |             |                  |             13 |              0 |             53       |\n (truncated results for brevity)\n```\n\nThis command displays statistics related to vacuum operations for each table, including an estimation of dead rows, last autovacuum and the current autovacuum threshold. This command can be useful when determining if current vacuum thresholds require adjustments, and to determine when the table was last vacuumed.\n\n### `kill_all`\n\n```python\n\nPGExtras.query('kill_all')\n\n```\n\nThis commands kills all the currently active connections to the database. It can be useful as a last resort when your database is stuck in a deadlock.\n\n### `extensions`\n\n```python\n\nPGExtras.query('extensions')\n\n```\n\nThis command lists all the currently installed and available PostgreSQL extensions.\n\n### `mandelbrot`\n\n```python\n\nPGExtras.query('mandelbrot')\n\n```\n\nThis command outputs the Mandelbrot set, calculated through SQL.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pawurb/python-pg-extras",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pg-extras",
    "package_url": "https://pypi.org/project/pg-extras/",
    "platform": "",
    "project_url": "https://pypi.org/project/pg-extras/",
    "project_urls": {
      "Homepage": "https://github.com/pawurb/python-pg-extras"
    },
    "release_url": "https://pypi.org/project/pg-extras/0.1.4/",
    "requires_dist": [
      "SQLAlchemy (>=1.3)",
      "setuptools",
      "tabulate",
      "psycopg2"
    ],
    "requires_python": ">=3.6",
    "summary": "Python PostgreSQL database performance insights. Locks, index usage, buffer cache hit ratios, vacuum stats and more.",
    "version": "0.1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9409950,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a449445a700b29278986eeef98e5714af53323e7d046df07ced44f2f0a381651",
          "md5": "f8c4c4337f66fe5152d9c01b25c9ff9b",
          "sha256": "ca2590d9e937409aa9af8349997dda7333582be93be21e9364ba6cb3fb99352f"
        },
        "downloads": -1,
        "filename": "pg_extras-0.0.1-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "f8c4c4337f66fe5152d9c01b25c9ff9b",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 1381,
        "upload_time": "2020-10-05T22:18:25",
        "upload_time_iso_8601": "2020-10-05T22:18:25.382787Z",
        "url": "https://files.pythonhosted.org/packages/a4/49/445a700b29278986eeef98e5714af53323e7d046df07ced44f2f0a381651/pg_extras-0.0.1-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7243c7b8a225456995744ebfe33f2c2a44954ccb16438e87a828972e83ef2ac9",
          "md5": "065537b84131314522540bcb399dd74c",
          "sha256": "6ee37848760ab27fe2f97c6b5321b9f5725572e6157341fb1af3ef0feef34ae8"
        },
        "downloads": -1,
        "filename": "pg_extras-0.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "065537b84131314522540bcb399dd74c",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 1385,
        "upload_time": "2020-10-05T22:18:34",
        "upload_time_iso_8601": "2020-10-05T22:18:34.630777Z",
        "url": "https://files.pythonhosted.org/packages/72/43/c7b8a225456995744ebfe33f2c2a44954ccb16438e87a828972e83ef2ac9/pg_extras-0.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f501b53e3e11dab2160ba472c61f66b3e20e907556ddb187a5e051ef024b16b1",
          "md5": "cc795510b595a57b4ce42f376d8908d1",
          "sha256": "622df23bb51c10c54cdfbbc58908efecc7579be73985452dd4e0af58d8584c22"
        },
        "downloads": -1,
        "filename": "pg-extras-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "cc795510b595a57b4ce42f376d8908d1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 871,
        "upload_time": "2020-10-05T22:18:36",
        "upload_time_iso_8601": "2020-10-05T22:18:36.482786Z",
        "url": "https://files.pythonhosted.org/packages/f5/01/b53e3e11dab2160ba472c61f66b3e20e907556ddb187a5e051ef024b16b1/pg-extras-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "12ee5ce751780270e009611a391bc2eb30efb4e2f17fd8743144bf3997f7854e",
          "md5": "87eb67cbbbe923b778054b1ea800b04b",
          "sha256": "bfc9ee9df839a36f484c5d1b4c3c2c56a402903f54c9f32887bd83558311b9ec"
        },
        "downloads": -1,
        "filename": "pg_extras-0.0.2-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "87eb67cbbbe923b778054b1ea800b04b",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": ">=3.6",
        "size": 2301,
        "upload_time": "2020-10-07T12:35:21",
        "upload_time_iso_8601": "2020-10-07T12:35:21.259892Z",
        "url": "https://files.pythonhosted.org/packages/12/ee/5ce751780270e009611a391bc2eb30efb4e2f17fd8743144bf3997f7854e/pg_extras-0.0.2-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "87de8f7ca47672b7a2a43a68fd30fe1eb3b03979c33d82ed387000c8cbde36cc",
          "md5": "dc889ea85cff930e8c40125d2e76b100",
          "sha256": "14eb6cbe604470c0437ecfb63eb288554e9df03b43a6b952402de247cab6c42f"
        },
        "downloads": -1,
        "filename": "pg-extras-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "dc889ea85cff930e8c40125d2e76b100",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 1130,
        "upload_time": "2020-10-07T12:35:24",
        "upload_time_iso_8601": "2020-10-07T12:35:24.158567Z",
        "url": "https://files.pythonhosted.org/packages/87/de/8f7ca47672b7a2a43a68fd30fe1eb3b03979c33d82ed387000c8cbde36cc/pg-extras-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c0924c16621e2aee4ca49dc2718cbb3eeb2b206691df084c85496218832f7927",
          "md5": "738f52ede1598cd478f6c27e0284ebf6",
          "sha256": "bdb5f337c42d4be217a3dbc8fa8587616c4306d4bfad83d83f8b55b5020a6608"
        },
        "downloads": -1,
        "filename": "pg_extras-0.0.3-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "738f52ede1598cd478f6c27e0284ebf6",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": ">=3.6",
        "size": 2445,
        "upload_time": "2020-10-07T12:42:27",
        "upload_time_iso_8601": "2020-10-07T12:42:27.937857Z",
        "url": "https://files.pythonhosted.org/packages/c0/92/4c16621e2aee4ca49dc2718cbb3eeb2b206691df084c85496218832f7927/pg_extras-0.0.3-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b3099f65628d631e78c42c4150974c89397f6346e02ac9e5cc24803a22c6e98c",
          "md5": "6763ca8e8905fe2a65a2c40bb8f5c77c",
          "sha256": "d5128ab07ace6b95bb177a9cf50f3b972a780c76b84d4a94fa8ae28215e836c7"
        },
        "downloads": -1,
        "filename": "pg-extras-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "6763ca8e8905fe2a65a2c40bb8f5c77c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 1140,
        "upload_time": "2020-10-07T12:42:30",
        "upload_time_iso_8601": "2020-10-07T12:42:30.719281Z",
        "url": "https://files.pythonhosted.org/packages/b3/09/9f65628d631e78c42c4150974c89397f6346e02ac9e5cc24803a22c6e98c/pg-extras-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82c6d6d98422076e600943f969fb053f8329ef88bd0407978678fa624ae6fc51",
          "md5": "a26cffdd98539e626b9752b7fe6179c7",
          "sha256": "c1f70b3813b0a15ceab6b4ff468f8ea4f12dffe03b3972acfd1cb77be564e811"
        },
        "downloads": -1,
        "filename": "pg_extras-0.0.4-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "a26cffdd98539e626b9752b7fe6179c7",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": ">=3.6",
        "size": 2484,
        "upload_time": "2020-10-07T12:49:54",
        "upload_time_iso_8601": "2020-10-07T12:49:54.875771Z",
        "url": "https://files.pythonhosted.org/packages/82/c6/d6d98422076e600943f969fb053f8329ef88bd0407978678fa624ae6fc51/pg_extras-0.0.4-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d4e4b0e04116061210cd524e49e6055d7947a490f9c1c544b6793bfcb757feb3",
          "md5": "f482d9766b1ecdd7927eaf5d3594f19a",
          "sha256": "3f086c28036b8a53c10c398a80be51e3564ac6d1a244efb8a713b66e23c89a7b"
        },
        "downloads": -1,
        "filename": "pg-extras-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "f482d9766b1ecdd7927eaf5d3594f19a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 1136,
        "upload_time": "2020-10-07T12:49:56",
        "upload_time_iso_8601": "2020-10-07T12:49:56.422791Z",
        "url": "https://files.pythonhosted.org/packages/d4/e4/b0e04116061210cd524e49e6055d7947a490f9c1c544b6793bfcb757feb3/pg-extras-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dd84bb50995d28da50e04cf236f6e77e673f9dd3c8c836e0a04cf1aeae1794cf",
          "md5": "f5ddc54128f59ecd1bfb76c9b2f1f432",
          "sha256": "e8f66e9eac287f1b8538fa8d2360ac2a2d39fbb14c9bc01c15784bcdc0ce058e"
        },
        "downloads": -1,
        "filename": "pg_extras-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f5ddc54128f59ecd1bfb76c9b2f1f432",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 2595,
        "upload_time": "2020-10-07T16:15:23",
        "upload_time_iso_8601": "2020-10-07T16:15:23.541500Z",
        "url": "https://files.pythonhosted.org/packages/dd/84/bb50995d28da50e04cf236f6e77e673f9dd3c8c836e0a04cf1aeae1794cf/pg_extras-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f27252d4814054327bc8bf40dca09ccfd7e7eebfc10015acf04c0698d087018b",
          "md5": "a3f56d6c171d5ebd9bb6390050160874",
          "sha256": "0b643212dacbd8b21fd5499890899202148f88128c33a42d3d0000e430d239d1"
        },
        "downloads": -1,
        "filename": "pg-extras-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "a3f56d6c171d5ebd9bb6390050160874",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 1462,
        "upload_time": "2020-10-07T16:15:27",
        "upload_time_iso_8601": "2020-10-07T16:15:27.214781Z",
        "url": "https://files.pythonhosted.org/packages/f2/72/52d4814054327bc8bf40dca09ccfd7e7eebfc10015acf04c0698d087018b/pg-extras-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "64bdb37eae73889b5cd3f974d208a1763ff9cccb1a3d154172a3e6cbcaf0958a",
          "md5": "def6ee09fd13cc4df3e2a1e9efd727cd",
          "sha256": "ba4057d311744a9ef64b417ecc4ebd634e821e0d9232a1bc6beea8deebf70bf4"
        },
        "downloads": -1,
        "filename": "pg_extras-0.1.0-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "def6ee09fd13cc4df3e2a1e9efd727cd",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": ">=3.6",
        "size": 2272,
        "upload_time": "2020-10-07T12:35:22",
        "upload_time_iso_8601": "2020-10-07T12:35:22.771209Z",
        "url": "https://files.pythonhosted.org/packages/64/bd/b37eae73889b5cd3f974d208a1763ff9cccb1a3d154172a3e6cbcaf0958a/pg_extras-0.1.0-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "584cf784f7279703836508f754323eb0db3056422b41bea3f47a53529cdce588",
          "md5": "fc2cedb084d9b2585eb7489e22d960a0",
          "sha256": "d647ae8e9b019ff2afd2588aa4398462d516151991d7420d645e378400842fe4"
        },
        "downloads": -1,
        "filename": "pg-extras-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fc2cedb084d9b2585eb7489e22d960a0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 1103,
        "upload_time": "2020-10-07T12:35:25",
        "upload_time_iso_8601": "2020-10-07T12:35:25.547834Z",
        "url": "https://files.pythonhosted.org/packages/58/4c/f784f7279703836508f754323eb0db3056422b41bea3f47a53529cdce588/pg-extras-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b5bfefc9385a18f3068bae779ba9c27aaef04a9e84223eae5f019bc76c21d3e8",
          "md5": "c4ab330be7ae9efec7ced9930368fbcc",
          "sha256": "999c2106ba886e9a336b8e586804ae24ba40a9b45460a575b158d896c8968eef"
        },
        "downloads": -1,
        "filename": "pg_extras-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c4ab330be7ae9efec7ced9930368fbcc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8704,
        "upload_time": "2020-10-07T16:15:54",
        "upload_time_iso_8601": "2020-10-07T16:15:54.043472Z",
        "url": "https://files.pythonhosted.org/packages/b5/bf/efc9385a18f3068bae779ba9c27aaef04a9e84223eae5f019bc76c21d3e8/pg_extras-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "13de6a80b3f96a251e783cd243320e0b87766d2945c0d28548848480a2afe43c",
          "md5": "7e5722ff5985fd1966c760dcb2ad31cb",
          "sha256": "ec3d4a65ab064f9316d05a0e8a2b3b644d9ee413c82b08ba6b4b778214a619ee"
        },
        "downloads": -1,
        "filename": "pg-extras-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7e5722ff5985fd1966c760dcb2ad31cb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10541,
        "upload_time": "2020-10-07T16:15:58",
        "upload_time_iso_8601": "2020-10-07T16:15:58.108096Z",
        "url": "https://files.pythonhosted.org/packages/13/de/6a80b3f96a251e783cd243320e0b87766d2945c0d28548848480a2afe43c/pg-extras-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "62110305c627bc156a4f5db61777dfefa9eaf795920a27ad7c706778c6efcf8e",
          "md5": "f7fc12f9f7edad403dda07b2ddda3439",
          "sha256": "9f065cc726ba8e5d9a4a95dcbd680830dff403783fa78671f4dd7abbdd1cb133"
        },
        "downloads": -1,
        "filename": "pg_extras-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f7fc12f9f7edad403dda07b2ddda3439",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8655,
        "upload_time": "2020-10-08T08:33:34",
        "upload_time_iso_8601": "2020-10-08T08:33:34.506779Z",
        "url": "https://files.pythonhosted.org/packages/62/11/0305c627bc156a4f5db61777dfefa9eaf795920a27ad7c706778c6efcf8e/pg_extras-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d4703a630a9c7a1a41ce84c520fc500171ef711e2e43cc0bf0c29134fdc00166",
          "md5": "93b8b8ab4d49ec02245b71dbfb50ea16",
          "sha256": "e0d197044032a5cc87e0f98e1a20a4afd6e8d4744edb83f5ac127945cdf9cc61"
        },
        "downloads": -1,
        "filename": "pg-extras-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "93b8b8ab4d49ec02245b71dbfb50ea16",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10456,
        "upload_time": "2020-10-08T08:33:37",
        "upload_time_iso_8601": "2020-10-08T08:33:37.440629Z",
        "url": "https://files.pythonhosted.org/packages/d4/70/3a630a9c7a1a41ce84c520fc500171ef711e2e43cc0bf0c29134fdc00166/pg-extras-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b827ead2fb63e3fe19f7e1bfcb8fb154d383979de83fb0a67d7b913b912dfbf9",
          "md5": "9c0607efe0528b12936a11969d485ddb",
          "sha256": "358d0ce6fee892ed58a0cabcafbbb85dfe6c50adbbfcb769fc378e69f3a2b867"
        },
        "downloads": -1,
        "filename": "pg_extras-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9c0607efe0528b12936a11969d485ddb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8786,
        "upload_time": "2021-02-13T22:19:33",
        "upload_time_iso_8601": "2021-02-13T22:19:33.061958Z",
        "url": "https://files.pythonhosted.org/packages/b8/27/ead2fb63e3fe19f7e1bfcb8fb154d383979de83fb0a67d7b913b912dfbf9/pg_extras-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ffdc4ed2392194f3dcef74e4ce12d6e8d0c5b57859af1d4ae48ceea07af7dfb2",
          "md5": "ebca3ea9f14508046850c1cec6f868fb",
          "sha256": "50092a501fdcf4f9cd31d9f00152dfc21638c6b132e85e027b363ac70a83617a"
        },
        "downloads": -1,
        "filename": "pg-extras-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "ebca3ea9f14508046850c1cec6f868fb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10975,
        "upload_time": "2021-02-13T22:19:37",
        "upload_time_iso_8601": "2021-02-13T22:19:37.326379Z",
        "url": "https://files.pythonhosted.org/packages/ff/dc/4ed2392194f3dcef74e4ce12d6e8d0c5b57859af1d4ae48ceea07af7dfb2/pg-extras-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b827ead2fb63e3fe19f7e1bfcb8fb154d383979de83fb0a67d7b913b912dfbf9",
        "md5": "9c0607efe0528b12936a11969d485ddb",
        "sha256": "358d0ce6fee892ed58a0cabcafbbb85dfe6c50adbbfcb769fc378e69f3a2b867"
      },
      "downloads": -1,
      "filename": "pg_extras-0.1.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9c0607efe0528b12936a11969d485ddb",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 8786,
      "upload_time": "2021-02-13T22:19:33",
      "upload_time_iso_8601": "2021-02-13T22:19:33.061958Z",
      "url": "https://files.pythonhosted.org/packages/b8/27/ead2fb63e3fe19f7e1bfcb8fb154d383979de83fb0a67d7b913b912dfbf9/pg_extras-0.1.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ffdc4ed2392194f3dcef74e4ce12d6e8d0c5b57859af1d4ae48ceea07af7dfb2",
        "md5": "ebca3ea9f14508046850c1cec6f868fb",
        "sha256": "50092a501fdcf4f9cd31d9f00152dfc21638c6b132e85e027b363ac70a83617a"
      },
      "downloads": -1,
      "filename": "pg-extras-0.1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "ebca3ea9f14508046850c1cec6f868fb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 10975,
      "upload_time": "2021-02-13T22:19:37",
      "upload_time_iso_8601": "2021-02-13T22:19:37.326379Z",
      "url": "https://files.pythonhosted.org/packages/ff/dc/4ed2392194f3dcef74e4ce12d6e8d0c5b57859af1d4ae48ceea07af7dfb2/pg-extras-0.1.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}