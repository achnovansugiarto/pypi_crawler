{
  "info": {
    "author": "David Vartanian",
    "author_email": "davidvartanian@posteo.de",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# TransferWise Python SDK\nAn unofficial Python SDK to facilitate the use of the TransferWise API.\n\n[![Build Status](https://travis-ci.org/davidvartanian/transferwise-python-sdk.svg?branch=master)](https://travis-ci.org/davidvartanian/transferwise-python-sdk)\n\n## Installation\n```bash\n$ pip install transferwise-python-sdk\n```\n\n## Usage\n```python\nimport os\nimport uuid\nfrom decimal import Decimal\nfrom transferwise.client import Client\nfrom transferwise.models import (\n    Account,\n    Profile,\n    Quote,\n    Transfer,\n    TransferRequirements,\n    Fund\n)\n\n\napi_token = os.environ.get('TRANSFERWISE_API_TOKEN')\nprivate_key = os.environ.get('TRANSFERWISE_PRIVATE_KEY')\nclient = Client(api_token, private_key, sandbox=True)\n\n# get profile\nprofile = Profile.get(client)\n\n# create quote\nquote = Quote.create_from_dict({\n    'profile': profile,\n    'source': 'EUR',\n    'target': 'EUR',\n    'target_amount': Decimal('1000')\n})\n\n# quote is updated with server response\nquote.post(client)  \n\n# validate account requirements\naccount_requirements = quote.get_account_requirements(client)\n\n# create account\naccount = Account.create_from_dict({\n    'currency': 'EUR',\n    'type': 'sort_code',\n    'profile': profile,\n    'account_holder_name': 'The Dude Inc.',\n    'legal_type': 'BUSINESS',\n    'details': {\n        'legalType': 'BUSINESS',\n        'iban': 'DE51700111106050000891'\n    }\n})\n\n# verify recipient account\naccount.verify(account_requirements)  # proceed if there are no errors\n\n# account is updated with server response\naccount.post(client)\n\n# create transfer\ntransaction_id = uuid.uuid4()  # required for request idempotency\ntransfer_reference = 'Order XXX reference'\nsource_of_funds = 'verification.source.of.funds.other'\ntransfer = Transfer.create_from_dict({\n    'target_account': account,\n    'quote': quote,\n    'customer_transaction_id': transaction_id,\n    'details': {\n        'reference': transfer_reference,\n        'transfer_purpose': 'verification.transfers.purpose.pay.bills',\n        'source_of_funds': source_of_funds\n    }\n})\n\n# transfer requirements\ntransfer_requirements = TransferRequirements.create_from_dict({\n    'target_account': account,\n    'quote': quote,\n    'details': {\n        'reference': transfer_reference,\n        'source_of_funds': source_of_funds,\n        'source_of_funds_other': 'Trust funds'\n    },\n    'customer_transaction_id': transaction_id\n})\n\ntransfer_requirements.post(client)\ntransfer.verify(transfer_requirements)\ntransfer.post(client)\n\n# fund transfer\nfund = Fund.create_from_dict({\n    'type': 'BALANCE'\n})\nfund.post(client, profile_id=profile._sync.id, transfer_id=transfer._sync.id)\n\n```\n\n## Model Architecture\nWhenever the model is sent to the API as payload, the response populates the `_sync` attribute, which is a dictionary.\n\nThanks to `__getattribute__` magic method, properties coming from the API are available as instance attributes, e.g.: `obj.id` (where `id` is actually in `obj._sync['id']`). This way reading attributes you get the synced version from the server if exists, otherwise the local attribute is returned. In case you want to access the local attribute easily, there's also an `attr` method.\n\nModels have also a class method `get` with an optional `id` parameter. When `id` isn't specified, a list of object will be returned.\n\nIn order to interact with the client, models are able to generate their own API paths through the protected method `_get_path`.\n\n# Client Architecture\nThe client is very simple. To instance it, it needs your API token.\n\nThe `get` and `post` methods accept a path and extra parameters to build and submit a request to the API\n\nRequests are made via the `requests` package using a `Session` instance with a custom `HTTPAdapter`, making possible to add retries if needed.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/davidvartanian/transferwise-python-sdk/archive/v0.0.2.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/davidvartanian/transferwise-python-sdk",
    "keywords": "",
    "license": "gpl-3.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "transferwise-python-sdk",
    "package_url": "https://pypi.org/project/transferwise-python-sdk/",
    "platform": "",
    "project_url": "https://pypi.org/project/transferwise-python-sdk/",
    "project_urls": {
      "Download": "https://github.com/davidvartanian/transferwise-python-sdk/archive/v0.0.2.tar.gz",
      "Homepage": "https://github.com/davidvartanian/transferwise-python-sdk"
    },
    "release_url": "https://pypi.org/project/transferwise-python-sdk/0.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A light TransferWise SDK for Python",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10306964,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "24d127b42bbfc539aaaee57292cd5a78ebf87e95d4e2489e4638bf81871e770d",
          "md5": "b222861a85b0763f93a7d9e5d2b5b851",
          "sha256": "b619afc4906cd1038eadd9c2cf305cdb83b8efc26f9741f72ef4db0eb943fa49"
        },
        "downloads": -1,
        "filename": "transferwise-python-sdk-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b222861a85b0763f93a7d9e5d2b5b851",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 22147,
        "upload_time": "2021-05-10T10:50:07",
        "upload_time_iso_8601": "2021-05-10T10:50:07.600761Z",
        "url": "https://files.pythonhosted.org/packages/24/d1/27b42bbfc539aaaee57292cd5a78ebf87e95d4e2489e4638bf81871e770d/transferwise-python-sdk-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "24d127b42bbfc539aaaee57292cd5a78ebf87e95d4e2489e4638bf81871e770d",
        "md5": "b222861a85b0763f93a7d9e5d2b5b851",
        "sha256": "b619afc4906cd1038eadd9c2cf305cdb83b8efc26f9741f72ef4db0eb943fa49"
      },
      "downloads": -1,
      "filename": "transferwise-python-sdk-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "b222861a85b0763f93a7d9e5d2b5b851",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 22147,
      "upload_time": "2021-05-10T10:50:07",
      "upload_time_iso_8601": "2021-05-10T10:50:07.600761Z",
      "url": "https://files.pythonhosted.org/packages/24/d1/27b42bbfc539aaaee57292cd5a78ebf87e95d4e2489e4638bf81871e770d/transferwise-python-sdk-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}