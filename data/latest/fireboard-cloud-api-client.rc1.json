{
  "info": {
    "author": "gordlea",
    "author_email": "jgordonlea@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Topic :: Home Automation"
    ],
    "description": "# fireboard_cloud_api_client\n\nA rest api client for your fireboard thermometer.\n\n## Note about rate limits\n\nFrom the Fireboard docs:\n> Users will be limited to 200 API calls per hour, if this rate limit is exceeded then user access will be blocked for 30 minutes.\n\nSee [Fireboard API: Rate Limits](https://docs.fireboard.io/app/api.html#Rate-Limits)\n\n## Usage\n\n```python\nimport asyncio\nfrom fireboard_cloud_api_client import FireboardAPI\n\n\n# replace with your fireboard account email\nFIREBOARD_USER_EMAIL = 'someone@example.com' \n# replace with your fireboard account password\nFIREBOARD_USER_PASSWORD = 'somepassword' \n\nasync def initialize_app(email, password):\n    fireboard_client = FireboardAPI(email, password)\n\n    devices = await fireboard_client.list_devices()\n    print(\"devices\", devices)\n\n\nasyncio.run(initialize_app(FIREBOARD_USER_EMAIL, FIREBOARD_USER_PASSWORD))\n\n```\n\n## API Reference\n\n### fireboard_client = FireboardAPI(email, password, base_url, session)\n\nParams:\n* email: the email for your fireboard account.\n* password: the password for your fireboard account.\n* base_url: (optional) the url for the fireboard could api (default: `https://fireboard.io/api`).\n* session: (optional) an [aiohttp ClientSession](https://docs.aiohttp.org/en/stable/client_reference.html#client-session) object to use for requests.\n\nReturns: a fireboard client object\n\n\n### await fireboard_client.list_devices()\n\nParams: none\n\nReturns: all fireboard devices associated with your account.\n\nSee: [Fireboard API: List All Devices](https://docs.fireboard.io/app/api.html#List-All-Devices)\n\n\n### await fireboard_client.get_device(device_uuid)\nParams: \n* device_uuid: the uuid of the device you want details for\n\nReturns: detailed information about a specific device by referencing the Deviceâ€™s UUID.\n\nSee: [Fireboard API: Realtime Temperature](https://docs.fireboard.io/app/api.html#Get-Real-Time-Temperature-From-the-Device)\n\n\n### await fireboard_client.get_realtime_temperature(device_uuid)\nParams: \n* device_uuid: the uuid of the device you want details for\n\nReturns: the latest temperature values per channel from the device using the Temps endpoint. Temperature values are included if they are less than a minute old, otherwise nothing is returned for the channel.\n\nExample:\n```json\n[\n  {\n    \"temp\": 69.9,\n    \"created\": \"2021-12-01T19:07:25Z\",\n    \"degreetype\": 2,\n    \"channel\": 1\n  },\n  {\n    \"temp\": 72.6,\n    \"created\": \"2021-12-01T19:07:25Z\",\n    \"degreetype\": 2,\n    \"channel\": 2\n  },\n  {\n    \"temp\": 71.9,\n    \"created\": \"2021-12-01T19:07:25Z\",\n    \"degreetype\": 2,\n    \"channel\": 3\n  }\n]\n```\n\n### await fireboard_client.get_realtime_drivelog(device_uuid)\n\nParams: \n* device_uuid: the uuid of the device you want details for\n\nReturns: the latest FireBoard Drive log information for your device using the Drivelog endpoint. Drive log information is returned if less than a minute old\n\nSee: [Fireboard API: Realtime Drive Data](https://docs.fireboard.io/app/api.html#Get-Real-Time-Drive-data-From-the-Device)\n\n\n### await fireboard_client.list_sessions()\n\nParams: none\n\nReturns: all sessions associated with your account.\n\nSee: [Fireboard API: List All Sessions](https://docs.fireboard.io/app/api.html#List-All-Sessions)\n\n\n### await fireboard_client.get_session(session_id)\n\nParams:\n* session_id: id of the session to retrieve\n\nReturns: data about a single session\n\nSee: [Fireboard API: Retrieve a Specific Session](https://docs.fireboard.io/app/api.html#Retrieve-a-Specific-Session)\n\n\n### await fireboard_client.get_session_chart(session_id)\n\nParams:\n* session_id: id of the session to retrieve\n* drive: (optional, default = False) True to include drive data \n\nReturns: all temperature data from the session in a format suitable for many charting frameworks.\n\nSee: [Fireboard API: Retrieve a Specific Session](https://docs.fireboard.io/app/api.html#Retrieve-a-Specific-Session)\n\n# External Reference\n[Fireboard Cloud API docs](https://docs.fireboard.io/app/api.html)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/gordlea/python_fireboard_cloud_api_client",
    "keywords": "Fireboard cloud api async",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fireboard-cloud-api-client",
    "package_url": "https://pypi.org/project/fireboard-cloud-api-client/",
    "platform": "",
    "project_url": "https://pypi.org/project/fireboard-cloud-api-client/",
    "project_urls": {
      "Bug Tracker": "https://github.com/gordlea/python_fireboard_cloud_api_client/issues",
      "Homepage": "https://github.com/gordlea/python_fireboard_cloud_api_client"
    },
    "release_url": "https://pypi.org/project/fireboard-cloud-api-client/0.0.1/",
    "requires_dist": [
      "aiohttp (>=3.8.0)"
    ],
    "requires_python": ">=3.4",
    "summary": "A rest api client for your fireboard thermometer",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12180874,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "581e518ff101431222cdcdf1ce40bf35926495cb35e0001b87c4271b60796e22",
          "md5": "57fbf1854664536d53c85d468c172b63",
          "sha256": "2684d59b120971c95ee28ac38dc8c0b9cab5f5dfd1101cd55829b413e7cc6d0d"
        },
        "downloads": -1,
        "filename": "fireboard_cloud_api_client-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "57fbf1854664536d53c85d468c172b63",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.4",
        "size": 5484,
        "upload_time": "2021-12-01T19:53:11",
        "upload_time_iso_8601": "2021-12-01T19:53:11.262820Z",
        "url": "https://files.pythonhosted.org/packages/58/1e/518ff101431222cdcdf1ce40bf35926495cb35e0001b87c4271b60796e22/fireboard_cloud_api_client-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d7d9346e1df8707f1c37493df0d2fa4cef84667e4f8f457d39a2e04defc73607",
          "md5": "e327907f95aff997a13f8373216c9171",
          "sha256": "0ba7fb7eda10ba0ca24c1986635deeb1252fac44f95a3b5ea9f2ded04fb519ff"
        },
        "downloads": -1,
        "filename": "fireboard_cloud_api_client-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e327907f95aff997a13f8373216c9171",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 5035,
        "upload_time": "2021-12-01T19:53:12",
        "upload_time_iso_8601": "2021-12-01T19:53:12.908520Z",
        "url": "https://files.pythonhosted.org/packages/d7/d9/346e1df8707f1c37493df0d2fa4cef84667e4f8f457d39a2e04defc73607/fireboard_cloud_api_client-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "581e518ff101431222cdcdf1ce40bf35926495cb35e0001b87c4271b60796e22",
        "md5": "57fbf1854664536d53c85d468c172b63",
        "sha256": "2684d59b120971c95ee28ac38dc8c0b9cab5f5dfd1101cd55829b413e7cc6d0d"
      },
      "downloads": -1,
      "filename": "fireboard_cloud_api_client-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "57fbf1854664536d53c85d468c172b63",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.4",
      "size": 5484,
      "upload_time": "2021-12-01T19:53:11",
      "upload_time_iso_8601": "2021-12-01T19:53:11.262820Z",
      "url": "https://files.pythonhosted.org/packages/58/1e/518ff101431222cdcdf1ce40bf35926495cb35e0001b87c4271b60796e22/fireboard_cloud_api_client-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d7d9346e1df8707f1c37493df0d2fa4cef84667e4f8f457d39a2e04defc73607",
        "md5": "e327907f95aff997a13f8373216c9171",
        "sha256": "0ba7fb7eda10ba0ca24c1986635deeb1252fac44f95a3b5ea9f2ded04fb519ff"
      },
      "downloads": -1,
      "filename": "fireboard_cloud_api_client-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "e327907f95aff997a13f8373216c9171",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.4",
      "size": 5035,
      "upload_time": "2021-12-01T19:53:12",
      "upload_time_iso_8601": "2021-12-01T19:53:12.908520Z",
      "url": "https://files.pythonhosted.org/packages/d7/d9/346e1df8707f1c37493df0d2fa4cef84667e4f8f457d39a2e04defc73607/fireboard_cloud_api_client-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}