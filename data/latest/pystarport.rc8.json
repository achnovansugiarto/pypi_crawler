{
  "info": {
    "author": "chain-dev-team",
    "author_email": "chain-dev@crypto.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: Other/Proprietary License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "pystarport is like a [cosmos starport](https://github.com/tendermint/starport)\nwithout the scaffolding feature. it's mainly used for development and testing. It's developed for the Crypto.org Chain, but\nit can also be used for any cosmos-sdk based projects.\n\n## Configuration\n\na typical configuration for a devnet is like this:\n\n```\nchainmaind:\n  cmd: chain-maind  # chain binary to use, optional\n  validators:  # genesis validators\n    - coins: 10cro\n      staked: 10cro\n    - coins: 10cro\n      staked: 10cro\n  accounts:  # genesis accounts\n    - name: community\n      coins: 100cro\n    - name: ecosystem\n      coins: 200cro\n    - name: reserve\n      coins: 200cro\n      vesting_coins: 100cro # if not provided, the all of coins will be vested\n      vesting: \"1d\"\n    - name: launch\n      coins: 100cro\n  genesis:  # patch genesis states\n   app_state:\n     staking:\n       params:\n         unbonding_time: \"10s\"\n```\n\nThe `validators` section defines how many nodes to run, for each node, a home directory is initialized in\n`data/node{i}`, and a validator account with specified coins is created.\n\nThe `accounts` defines other non-validator accounts, they are created in `node0`'s keyring.\n\nIn the `genesis` section you can override any genesis configuration with the same json path.\n\n## Usage\n\n```\nNAME\n    pystarport serve - prepare and start a devnet from scatch\n\nSYNOPSIS\n    pystarport serve <flags>\n\nDESCRIPTION\n    prepare and start a devnet from scatch\n\nFLAGS\n    --data=DATA\n        Type: str\n        Default: './data'\n        path to the root data directory\n    --config=CONFIG\n        Type: str\n        Default: './config.yaml'\n        path to the configuration file\n    --base_port=BASE_PORT\n        Type: int\n        Default: 26650\n        the base port to use, the service ports of different nodes are calculated based on this\n    --cmd=CMD\n        Type: str\n        Default: 'chain-maind'\n        the chain binary to use\n```\n\n## Port rules\n\nThe rules to calculate service ports based on base port is defined in the\n[`ports.py`](https://github.com/crypto-org-chain/chain-main/blob/master/pystarport/pystarport/ports.py) module.\n\nFor example, with default base port `26650`, the url of api servers of the nodes would be:\n\n- Node0: http://127.0.0.1:26654\n- Node1: http://127.0.0.1:26664\n\n> The swagger doc of node0 is http://127.0.0.1:26654/swagger/\n>\n> The default rpc port used by `chain-maind` is `26657`, that's the default node0's rpc port, so you can use\n> `chain-maind` without change to access node0's rpc.\n\n## Supervisor\n\n`pystarport` embeded a [supervisor](http://supervisord.org/) to manage processes of multiple nodes, you can use\n`pystarport supervisorctl` to manage the processes:\n\n```\n$ pystarport supervisorctl status\nnode0                            RUNNING   pid 35210, uptime 0:00:29\nnode1                            RUNNING   pid 35211, uptime 0:00:29\n$ pystarport supervisorctl help\n\ndefault commands (type help <topic>):\n=====================================\nadd    exit      open  reload  restart   start   tail\navail  fg        pid   remove  shutdown  status  update\nclear  maintail  quit  reread  signal    stop    version\n```\n\nOr enter an interactive shell:\n\n```\n$ pystarport supervisorctl\nnode0                            RUNNING   pid 35210, uptime 0:01:53\nnode1                            RUNNING   pid 35211, uptime 0:01:53\nsupervisor>\n```\n\n## Cli\n\nAfter started the chain, you can use `chain-maind` cli directly, there are also some wrapper commands provided by\n`pystarport cli`. It understands the directory structure and port rules, also assuming `keyring-backend=test`, and there\nare shortcuts for commonly used commands, so arguments are shorter.\n\n```\n$ pystarport cli - --help\n...\n```\n\n## Transaction Bot\n\nA simple transaction bot that works for cluster created by pystarport as well as a local node\n\nCopy and modify `bot.yaml.sample` to `bot.yaml` with your desired bot configurations.\n\n### If you are running on a pystarport created cluster:\n1. Make sure you have provide the `node` for each job in the `bot.yaml`\n2. Run the command\n```\n$ pystarport bot --chain-id=[cluster_chain_id] - start\n```\n\n### If you are running on a local node\n```\n$ pstarport bot --node_rpc=tcp://127.0.0.1:26657 --data=/path/to/your/local/node/home/ - start\n```\n\n## docker-compose\n\nWhen used with `docker-compose` or multiple machines, you need to config hostnames, and you probabely want to use a same\n`base_port` since you don't have port conflicts, you can config the `validators` like this:\n\n```yaml\nvalidators:\n  - coins: 10cro\n    staked: 10cro\n    base_port: 26650\n    hostname: node0\n  - coins: 10cro\n    staked: 10cro\n    base_port: 26650\n    hostname: node1\n```\n\n`pystarport init --gen_compose_file` will also generate a `docker-compose.yml` file for you.\n\n## IBC\n\nIt can setup multiple devnets at once, and connect them with ibc relayer.\n\n```\nibc-0:\n  validators:\n    - coins: 10cro\n      staked: 10cro\n      base_port: 26650\n    - coins: 10cro\n      staked: 10cro\n  accounts:\n    - name: relayer\n      coins: 100cro\n  genesis:\n    app_state:\n      transfer:\n        params:\n          receive_enabled: true\n          send_enabled: true\nibc-1:\n  validators:\n    - coins: 10cro\n      staked: 10cro\n      base_port: 26750\n    - coins: 10cro\n      staked: 10cro\n      base_port: 26760\n  accounts:\n    - name: relayer\n      coins: 100cro\n  genesis:\n    app_state:\n      transfer:\n        params:\n          receive_enabled: true\n          send_enabled: true\nrelayer: # refer here (https://hermes.informal.systems/config.html) for more configs\n  global:\n    strategy: 'packets'\n    log_level: 'info'\n  chains:\n    - id: \"ibc-0\" # id is needed to match chain id\n      trusting_period: \"20s\"\n    - id: \"ibc-1\" # id is needed to match chain id\n      trusting_period: \"20s\"\n\n```\n\nWith following commands to setup ibc, you are ready to play with ibc functionalities:\n\n```\n# spawn the devnets\npystarport serve --config ibc.yaml\n# setup ibc channel\nhermes -c data/relayer.toml create channel ibc-0 ibc-1 --port-a transfer --port-b transfer\n# start relayer process\nsupervisorctl -c data/tasks.ini start relayer-demo\n```\n\n## Development\n### Set up development environment\nMore about [poetry](https://python-poetry.org/docs/).\n```\npoetry install\n```\n### Recommended VS Code workspace settings\nRemember to run `poetry env info` after `poetry install` and update this `python.defaultInterpreterPath`\n```json\n{\n    \"python.formatting.provider\": \"black\",\n    // after running `poetry env info`, change python.defaultInterpreterPath to Path under Virtualenv\n    \"python.defaultInterpreterPath\": \"~/Library/Caches/pypoetry/virtualenvs/to_be_updated\",\n    \"editor.formatOnSave\": true,\n    \"python.linting.flake8Enabled\": true,\n    \"python.formatting.blackArgs\": [\n        \"--line-length=88\"\n    ],\n    \"python.sortImports.args\": [\n        \"--profile\",\n        \"black\"\n    ],\n    \"[python]\": {\n        \"editor.codeActionsOnSave\": {\n            \"source.organizeImports\": true\n        }\n    }\n}\n```\n\n## Test\n### Install jsonnet\nMore about [jsonnet](https://jsonnet.org).\n```\nmake test\n```\n\n\n## FAQ\n\n### Have this error on Mac: `AF_UNIX path too long´\n\nSet environment variable `TMPPATH=/tmp` to shorten the unix domain socket path.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/crypto-com/pystarport",
    "keywords": "CRO,blockchain,crypto.com,cosmos",
    "license": "Apache",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pystarport",
    "package_url": "https://pypi.org/project/pystarport/",
    "platform": null,
    "project_url": "https://pypi.org/project/pystarport/",
    "project_urls": {
      "Homepage": "https://github.com/crypto-com/pystarport",
      "Repository": "https://github.com/crypto-com/pystarport"
    },
    "release_url": "https://pypi.org/project/pystarport/0.2.5/",
    "requires_dist": [
      "PyYAML (>=5.3.1,<6.0.0)",
      "bech32 (>=1.1.0,<2.0.0)",
      "docker (>=5.0.3,<6.0.0)",
      "durations (>=0.3.3,<0.4.0)",
      "fire (>=0.4.0,<0.5.0)",
      "jsonmerge (>=1.7.0,<2.0.0)",
      "jsonnet (>=0.18.0,<0.19.0)",
      "multitail2 (>=1.5.2,<2.0.0)",
      "python-dateutil (>=2.8.1,<3.0.0)",
      "python-dotenv (>=0.19.2,<0.20.0)",
      "pyyaml-include (>=1.3,<2.0)",
      "supervisor (>=4.2.1,<5.0.0)",
      "tomlkit (>=0.7.0,<0.8.0)"
    ],
    "requires_python": ">=3.8,<4.0",
    "summary": "Spawn local devnets for cosmos-sdk chains",
    "version": "0.2.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16722564,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bcfb8a1703dccc95bc3e8a5470096390c8ef7f5a68a64ba021a64245b9fc71ed",
          "md5": "39d7fa8b8b4c440267008bafe765240f",
          "sha256": "e956ca6a79c51610fa3f79042d7d67165257a54395e6a0c47b6fe0183e8a5ff9"
        },
        "downloads": -1,
        "filename": "pystarport-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "39d7fa8b8b4c440267008bafe765240f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 24207,
        "upload_time": "2021-05-10T23:13:47",
        "upload_time_iso_8601": "2021-05-10T23:13:47.496814Z",
        "url": "https://files.pythonhosted.org/packages/bc/fb/8a1703dccc95bc3e8a5470096390c8ef7f5a68a64ba021a64245b9fc71ed/pystarport-0.1.0-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": "wrong metadata"
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cf6d788bd2125ad0044f722d2a67251935807cb74675e22d2c867c31a0346768",
          "md5": "704a01921f39797b3aa6dfafbec1e7df",
          "sha256": "9c7c7f1186f0f3a290bc098c0fd6aa5d37c4e9fbb3aa0ccca7d215249a4b9c7f"
        },
        "downloads": -1,
        "filename": "pystarport-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "704a01921f39797b3aa6dfafbec1e7df",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 22971,
        "upload_time": "2021-05-10T23:13:49",
        "upload_time_iso_8601": "2021-05-10T23:13:49.790794Z",
        "url": "https://files.pythonhosted.org/packages/cf/6d/788bd2125ad0044f722d2a67251935807cb74675e22d2c867c31a0346768/pystarport-0.1.0.tar.gz",
        "yanked": true,
        "yanked_reason": "wrong metadata"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "306571996acfb707b0260f2e0b42a1c8e61e2e66cb5daee7809d8ed787e7c810",
          "md5": "a43d46e0a3cf2c3d977210975d7ae7ef",
          "sha256": "bdb911c4cc74da4282239268be3e0f00c5f19c07eadec0e298babc60d39d3b65"
        },
        "downloads": -1,
        "filename": "pystarport-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a43d46e0a3cf2c3d977210975d7ae7ef",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 24203,
        "upload_time": "2021-05-10T23:24:57",
        "upload_time_iso_8601": "2021-05-10T23:24:57.867945Z",
        "url": "https://files.pythonhosted.org/packages/30/65/71996acfb707b0260f2e0b42a1c8e61e2e66cb5daee7809d8ed787e7c810/pystarport-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3c48be00391b48313ed9edf89e4929bd335e07862500516bad419c5256a5715a",
          "md5": "5d28dfaa4b6148983ecd3c2ca520dff0",
          "sha256": "b43caf13089b7d6590409b16a77b5b6b5bad9dad79731af28eb8e0dafc264ced"
        },
        "downloads": -1,
        "filename": "pystarport-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5d28dfaa4b6148983ecd3c2ca520dff0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 22967,
        "upload_time": "2021-05-10T23:25:00",
        "upload_time_iso_8601": "2021-05-10T23:25:00.050745Z",
        "url": "https://files.pythonhosted.org/packages/3c/48/be00391b48313ed9edf89e4929bd335e07862500516bad419c5256a5715a/pystarport-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a06a0409fdf371ccb313d69f5d83079ade78c001041214719334862f23015b9b",
          "md5": "2250553f07713182c4a64716a131f445",
          "sha256": "eed8a5ef643929625af7e889f02f59b103d9a9c798bead3d7959d7e54d641f9f"
        },
        "downloads": -1,
        "filename": "pystarport-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2250553f07713182c4a64716a131f445",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 24952,
        "upload_time": "2021-06-09T02:19:11",
        "upload_time_iso_8601": "2021-06-09T02:19:11.330250Z",
        "url": "https://files.pythonhosted.org/packages/a0/6a/0409fdf371ccb313d69f5d83079ade78c001041214719334862f23015b9b/pystarport-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1494e36eee90186f26d0de59a11bc2219692e7357b8368349fd764ee14376eee",
          "md5": "61724faee359d675a448969cfdd417ff",
          "sha256": "2071e5ecf680e5669ab5da00285722fb1fb6c0a9d433a0be1a209ebbfa46fa20"
        },
        "downloads": -1,
        "filename": "pystarport-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "61724faee359d675a448969cfdd417ff",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 24998,
        "upload_time": "2021-06-18T07:32:48",
        "upload_time_iso_8601": "2021-06-18T07:32:48.154668Z",
        "url": "https://files.pythonhosted.org/packages/14/94/e36eee90186f26d0de59a11bc2219692e7357b8368349fd764ee14376eee/pystarport-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4aa388d7fedf4aa68543f194727b0e2c92bd38add2d50f4a4e149743dc439aed",
          "md5": "9b713a2bd45bc76b8d2d4066b7e742c1",
          "sha256": "fbd85a74eac20696f7dcf5c84b1d6bc090b56bebb6fbf1132a3f9c192321d511"
        },
        "downloads": -1,
        "filename": "pystarport-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9b713a2bd45bc76b8d2d4066b7e742c1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 25049,
        "upload_time": "2021-07-07T01:32:06",
        "upload_time_iso_8601": "2021-07-07T01:32:06.808566Z",
        "url": "https://files.pythonhosted.org/packages/4a/a3/88d7fedf4aa68543f194727b0e2c92bd38add2d50f4a4e149743dc439aed/pystarport-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "992579e27764a138eff6cbb2764c7401e50198df98044d9edea9521ae42e1edd",
          "md5": "2245292937a4265cdb4b02b7fdd1c3d6",
          "sha256": "c522b9f5f39fe3d1ab0363a968b163c2de337f48f1ee970ee5ebc756494594dc"
        },
        "downloads": -1,
        "filename": "pystarport-0.2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2245292937a4265cdb4b02b7fdd1c3d6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 32857,
        "upload_time": "2021-12-03T09:43:54",
        "upload_time_iso_8601": "2021-12-03T09:43:54.087386Z",
        "url": "https://files.pythonhosted.org/packages/99/25/79e27764a138eff6cbb2764c7401e50198df98044d9edea9521ae42e1edd/pystarport-0.2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "be5e0f33ddae891eb5d9912cad2dcafb4213c4d9897212a406f8240e4231e673",
          "md5": "5eb8b9987a19fa47d9214bdb46588549",
          "sha256": "b412df8f9aea9a66b579faf142f14fe7b9965c5ebce75f7c8314951eb62c9053"
        },
        "downloads": -1,
        "filename": "pystarport-0.2.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5eb8b9987a19fa47d9214bdb46588549",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 32543,
        "upload_time": "2022-02-18T09:43:40",
        "upload_time_iso_8601": "2022-02-18T09:43:40.247508Z",
        "url": "https://files.pythonhosted.org/packages/be/5e/0f33ddae891eb5d9912cad2dcafb4213c4d9897212a406f8240e4231e673/pystarport-0.2.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f48464328b0b906e5a204a85078304a970af72061a13bc7820733b5872718787",
          "md5": "a2bd8e4a4b4a34ab843eb93391eace13",
          "sha256": "aaaa8f533b9c408218feffb47b2527828a1a9d32394dab8471dc330af1702974"
        },
        "downloads": -1,
        "filename": "pystarport-0.2.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a2bd8e4a4b4a34ab843eb93391eace13",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 35745,
        "upload_time": "2023-02-07T05:19:08",
        "upload_time_iso_8601": "2023-02-07T05:19:08.566234Z",
        "url": "https://files.pythonhosted.org/packages/f4/84/64328b0b906e5a204a85078304a970af72061a13bc7820733b5872718787/pystarport-0.2.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f48464328b0b906e5a204a85078304a970af72061a13bc7820733b5872718787",
        "md5": "a2bd8e4a4b4a34ab843eb93391eace13",
        "sha256": "aaaa8f533b9c408218feffb47b2527828a1a9d32394dab8471dc330af1702974"
      },
      "downloads": -1,
      "filename": "pystarport-0.2.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a2bd8e4a4b4a34ab843eb93391eace13",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<4.0",
      "size": 35745,
      "upload_time": "2023-02-07T05:19:08",
      "upload_time_iso_8601": "2023-02-07T05:19:08.566234Z",
      "url": "https://files.pythonhosted.org/packages/f4/84/64328b0b906e5a204a85078304a970af72061a13bc7820733b5872718787/pystarport-0.2.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}