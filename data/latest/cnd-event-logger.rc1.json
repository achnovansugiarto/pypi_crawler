{
  "info": {
    "author": "Denis FABIEN",
    "author_email": "denis.fabien@changendevops.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent"
    ],
    "description": "# Event and data generator for IaaSInventory\n\n\n# What is CndEventLogger ?\n\nCndEventLogger is a python lib to help you to log IaaS event and inventory in a consul server. Later you can create a script or user CndEyes application to consolidate all data.\n\n# How it's works\n\n## Event logger\n\n```\nevent = CndEvent(host, port, token, protocol)\n```\n\n### Deployment start and finish\n\nWhen a deployment start\n```\nevent.deployment_start(\n    deployment_id=deployment_id, \n    service=service, \n    deployment_name=deployment_name, \n    project=project, \n    source=source\n)\n```\n\nWhen a deployment finish\n```\nevent.deployment_end(\n    success=success, \n    deployment_id=deployment_id, \n    service=service, \n    deployment_name=deployment_name, \n    source=source, \n    project=project\n)\n```\n---\n\n### Host start and finish\n\nWhen a host start to build\n```\nevent.host_start(\n    host_id=host_id, \n    hostname=hostname, \n    tiers=tiers, \n    deployment_id=deployment_id, \n    source=source, \n    domain=domain\n)\n```\n\nWhen a host finish to build\n```\nevent.host_end(\n    success=success,\n    host_id=host_id,\n    hostname=hostname,\n    tiers=tiers,\n    deployment_id=deployment_id,\n    source=source,\n    domain=domain\n)\n```\n---\n### Workflow start and finish\n\nWhen a workflow start to build\n```\nevent.host_workflow_start(\n    workflow_id=workflow_id, \n    application=application,\n    name=name,\n    domain=domain,\n    hostname=hostname\n)\n```\n\nWhen a workflow finish to build\n```\nevent.host_workflow_end(\n    success=success,\n    workflow_id=workflow_id, \n    application=application,\n    name=name,\n    domain=domain,\n    hostname=hostname\n)\n```\n---\n\n## Inventory logger\n\n```\ninv = CndInventory(host, port, token, protocol)\n```\n\n### vRA vm\n```\ninv.vra(\n    uuid=host_uuid, \n    hostname=hostname,\n    domain=domain,\n    tiers=tiers,\n    datacenter=datacenter,\n    deployment_id=deployment_id,\n    source=source,\n    cloud_account=cloud_account,\n    cpu=cpu,\n    memory=memory,\n    os_type=os_type,\n    software_name=software_name,\n    power_state=power_state,\n    tags=tags,\n    item_updated_at=item_updated_at,\n    item_created_at=item_created_at\n)\n```\n---\n### Application\n```\ninv.app(\n    source=source,\n    uuid=uuid, \n    domain=domain,\n    hostname=hostname,\n    deleted=deleted\n)\n```\n---\n# Data from vra/vcenter like\n## Vra\n### Naming\n```\niaas_inventory/hosts/<source>/<hostname>/\n```\n### Content\n```\nuuid: string\ndeleted: boolean\ndatacenter: string\ncloud_account: string\ncpu: integer\nmemory: integer\nos_type: string\nsoftware_name: string\npower_state: boolean\nitem_created_at: datetime\nitem_updated_at: datetime\ntags: array\n```\n\n## Application\n### Naming\n```\niaas_inventory/app/<application-name>/<hostname>/\n```\n### Content\n```\nuuid: string\ndeleted: boolean\n```\n\n# Data from event\n## Host\n### To start event logging\npath\n```\niaas_inventory/events/host/<hostname>/start\n```\ncontent\n```\nstart_at: datetime\ntiers: string\ndeployment_id: string\n```\n\n### To finish event logging\npath\n```\niaas_inventory/events/host/<hostname>/end\n```\ncontent\n```\nend_at: datetime\ntiers: string\ndeployment_id: string\n```\n\n## Deployments\n### To start event logging\npath\n```\niaas_inventory/events/deployment/<deployment-id>/start\n```\ncontent\n```\nstart_at: datetime\nservice: string\ndeployment_name: string\nsource: string\n```\n\n### To finish event logging\npath\n```\niaas_inventory/events/deployment/<deployment-id>/end\n```\ncontent\n```\nend_at: datetime\nservice: string\ndeployment_name: string\nsource: string\n```\n\n## Workflow\n### To start event logging\npath\n```\niaas_inventory/events/workflow/<workflow-id>/start\n```\ncontent\n```\nworkflow_name: string\napplication: string\nstart_at: datetime\ndeployment_id: string\n```\n\n### To finish event logging\npath\n```\niaas_inventory/events/workflow/<workflow-id>/end\n```\ncontent\n```\nworkflow_name: string\napplication: string\nend_at: datetime\ndeployment_id: string\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://changendevops.com",
    "keywords": "",
    "license": "MIT/X11",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cnd-event-logger",
    "package_url": "https://pypi.org/project/cnd-event-logger/",
    "platform": null,
    "project_url": "https://pypi.org/project/cnd-event-logger/",
    "project_urls": {
      "Documentation": "https://changendevops.com",
      "Homepage": "https://changendevops.com",
      "Source": "https://gitlab.com/changendevops/iaasinventory/cndeventlogger.git"
    },
    "release_url": "https://pypi.org/project/cnd-event-logger/0.1.3/",
    "requires_dist": [
      "expects",
      "mockito",
      "python-consul",
      "pyyaml",
      "cndprint",
      "mamba",
      "twine"
    ],
    "requires_python": "",
    "summary": "The definitive tools to log event when you build IaaS",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16645359,
  "releases": {
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "20fa74b96dbfb4bd2741e35c0bcf979f4c3d0244acdc40bdcd82988a475a18d2",
          "md5": "8493dcc6e028a22f59ae70920ddf1080",
          "sha256": "e5792368b460bf89d668c7b290bae6b9f343b5bbc3e33d4877e1008ae288052e"
        },
        "downloads": -1,
        "filename": "cnd_event_logger-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8493dcc6e028a22f59ae70920ddf1080",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5092,
        "upload_time": "2023-02-01T02:12:30",
        "upload_time_iso_8601": "2023-02-01T02:12:30.155277Z",
        "url": "https://files.pythonhosted.org/packages/20/fa/74b96dbfb4bd2741e35c0bcf979f4c3d0244acdc40bdcd82988a475a18d2/cnd_event_logger-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "20fa74b96dbfb4bd2741e35c0bcf979f4c3d0244acdc40bdcd82988a475a18d2",
        "md5": "8493dcc6e028a22f59ae70920ddf1080",
        "sha256": "e5792368b460bf89d668c7b290bae6b9f343b5bbc3e33d4877e1008ae288052e"
      },
      "downloads": -1,
      "filename": "cnd_event_logger-0.1.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8493dcc6e028a22f59ae70920ddf1080",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 5092,
      "upload_time": "2023-02-01T02:12:30",
      "upload_time_iso_8601": "2023-02-01T02:12:30.155277Z",
      "url": "https://files.pythonhosted.org/packages/20/fa/74b96dbfb4bd2741e35c0bcf979f4c3d0244acdc40bdcd82988a475a18d2/cnd_event_logger-0.1.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}