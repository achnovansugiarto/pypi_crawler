{
  "info": {
    "author": "Joseph Martinot-Lagarde",
    "author_email": "contrebasse+pypi@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: MacOS X",
      "Environment :: Win32 (MS Windows)",
      "Environment :: X11 Applications :: Qt",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development",
      "Topic :: System :: Benchmark",
      "Topic :: Utilities"
    ],
    "description": "Line Profiler GUI\n-----------------\n.. image:: https://img.shields.io/github/license/Nodd/lineprofilergui\n  :target: https://github.com/Nodd/lineprofilergui/blob/master/LICENSE.txt\n.. image:: https://img.shields.io/pypi/v/line-profiler-gui.svg\n  :target: https://pypi.python.org/pypi/line-profiler-gui/\n.. image:: https://github.com/Nodd/lineprofilergui/actions/workflows/python-package.yml/badge.svg\n  :target: https://github.com/Nodd/lineprofilergui/actions/workflows/python-package.yml\n.. image:: https://codecov.io/gh/Nodd/lineprofilergui/branch/master/graph/badge.svg?token=9O1RMPUNEU\n  :target: https://codecov.io/gh/Nodd/lineprofilergui\n\nThis is a Qt GUI for the line_profiler_ python utility.\n\nIt allows to run and display the profiling results using an interactive interface.\nIt is functionnaly equivalent to the ``kernprof`` script, which is used to invoque ``line_profiler`` from the command line.\n\n.. image:: https://raw.githubusercontent.com/Nodd/lineprofilergui/master/images/screenshot_main.png\n  :alt: Screenshot of Line Profier GUI main window\n  :align: center\n\n.. contents::\n\n\nFeatures\n========\n\n* **Command line**: Configure and run from the command line, just like ``kernprof``,\n* **GUI**: Configure and run from the GUI, just like ``kernprof`` but with buttons,\n* **Colors**: Highlight lines based on the percentage of time spent on them to easily spot the lines to be optimised,\n* **Configuration**: Setup warmup script, environment variables, and more!\n* **History**: Compare timing with previous profiling runs,\n* **Viewer**: Display data from any .lprof file by ``kernprof``,\n* **Editor**: Double-click on any line to edit it with your favorite editor.\n\n.. image:: https://raw.githubusercontent.com/Nodd/lineprofilergui/master/images/screenshot_config.png\n  :alt: Screenshot of Line Profier GUI profiling configuration window\n  :align: center\n\n.. image:: https://raw.githubusercontent.com/Nodd/lineprofilergui/master/images/screenshot_settings.png\n  :alt: Screenshot of Line Profier GUI application settings window\n  :align: center\n\n\nInstallation\n============\n\nLine Profiler GUI can be installed from pypi using pip::\n\n  $ pip install line-profiler-gui\n\nLine Profiler GUI can use anyon of the Qt python bindings by using QtPy_: PyQt5, PyQt6, PySide2 or PySide6.\nYou can install the Qt python bindings of your choice in one go by specifying it between square brackets::\n\n  $ pip install line-profiler-gui[PySide2]\n  $ pip install line-profiler-gui[PyQt5]\n\nSource releases can be downloaded from PyPI_. To check out the development sources, you can use Git_::\n\n  $ git clone https://github.com/Nodd/lineprofilergui.git\n\n\nUsage\n=====\n\nUsers should be familiar with the line_profiler `line_profiler documentation <https://github.com/pyutils/line_profiler#id2>`_, but here is a quick reminder.\nSince the line by line profiling slown down the execution, not all functions are profiled.\nThe functions to be profiled have to be marked with a ``@profile`` decorator (see the ``example/`` directory for more examples):\n\n.. code-block:: python\n\n    @profile\n    def my_slow_function():\n        ...\n\nNo import is needed, ``profile`` is added to the python builtins for the execution.\nDon't forget to remove the added decorators afterwards!\n\nOnce the profilng is done, the following data will be disaplyed for each line of the decorated functions:\n\n* **Line #**: The line number in the file.\n* **Hits**: The number of times that line was executed.\n* **Time**: The total amount of time spent executing the line.\n* **Per Hit**: The average amount of time spent executing the line once.\n* **% Time**: The percentage of time spent on that line relative to the total\n  amount of recorded time spent in the function.\n* **Line Contents**: The actual source code. Note that this is always read from\n  disk when the formatted results are viewed, *not* when the code was\n  executed. If you have edited the file in the meantime, the lines will not\n  match up, and the formatter may not even be able to locate the function\n  for display.\n\nIn the displayed table, the lines are higlighted depending on their `% Time`.\nThis allows to easily spot the lines to be optimised, and to not be distracted by the rest od the code.\n\n\nCommand line arguments\n======================\n\n.. code:: console\n\n    $ lineprofilergui -h\n    usage: lineprofilergui [-h] [-V] [-l LPROF] [-r] [-o OUTFILE] [-s SETUP]\n                        [script] ...\n\n    Run, profile a python script and display results.\n\n    positional arguments:\n    script                The python script file to run\n    args                  Optional script arguments\n\n    options:\n    -h, --help            show this help message and exit\n    -V, --version         show program's version number and exit\n    -l LPROF, --lprof LPROF\n                            Display data from a .lprof file\n    -r, --run             Profile the python script on launch\n    -o OUTFILE, --outfile OUTFILE\n                            Save stats to OUTFILE (default: 'scriptname.lprof')\n    -s SETUP, --setup SETUP\n                            Python script to execute before the code to profile\n\n\nSee also\n========\n\n* `Spyder plugin <https://github.com/spyder-ide/spyder-line-profiler>`_\n* `PyCharm plugin <https://plugins.jetbrains.com/plugin/16536-line-profiler>`_\n\n\n.. _pypi: http://pypi.python.org/pypi/line-profiler-gui\n.. _line_profiler: https://pypi.org/project/line_profiler/\n.. _QtPy: https://pypi.org/project/QtPy/\n.. _git: http://git-scm.com/\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://pypi.org/project/line-profiler-gui/",
    "keywords": "profiling,profiler,line_profiler,gui,Qt",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "line-profiler-gui",
    "package_url": "https://pypi.org/project/line-profiler-gui/",
    "platform": "",
    "project_url": "https://pypi.org/project/line-profiler-gui/",
    "project_urls": {
      "Bug Tracker": "https://github.com/Nodd/lineprofilergui/issues",
      "Github": "https://github.com/Nodd/lineprofilergui",
      "Homepage": "https://pypi.org/project/line-profiler-gui/"
    },
    "release_url": "https://pypi.org/project/line-profiler-gui/0.2/",
    "requires_dist": [
      "line-profiler",
      "qtpy",
      "pyqt5 ; extra == 'pyqt5'",
      "pyside2 ; extra == 'pyside2'",
      "pytest ; extra == 'test'",
      "pytest-qt ; extra == 'test'",
      "pytest-cov ; extra == 'test'"
    ],
    "requires_python": ">=3.8",
    "summary": "A Qt GUI to run and display line by line profiling data using line_profiler",
    "version": "0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12953334,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3aa20cc3bd550616118ca7ad7a3ad3051ed24058b09da47abaa9f61a7e150034",
          "md5": "34567bfff1d0c86b1a1f2ec9955b8779",
          "sha256": "b6e2d865b3bfe0921970c49186d1cfaad974d68ba110bfb84ce769aa62440bb8"
        },
        "downloads": -1,
        "filename": "line_profiler_gui-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "34567bfff1d0c86b1a1f2ec9955b8779",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 19193,
        "upload_time": "2022-02-07T21:20:45",
        "upload_time_iso_8601": "2022-02-07T21:20:45.923579Z",
        "url": "https://files.pythonhosted.org/packages/3a/a2/0cc3bd550616118ca7ad7a3ad3051ed24058b09da47abaa9f61a7e150034/line_profiler_gui-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3cca555c2c1b6cd6ccac0cf7e6852902f9c5573f1e1f69afdd598956e385200b",
          "md5": "d7b84fa3df2682c9ee728d165ce0b2b8",
          "sha256": "b6f6d5d945721b26ffa0b170af2d8f89377041495c02454cd73ff99527fceb2a"
        },
        "downloads": -1,
        "filename": "line-profiler-gui-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d7b84fa3df2682c9ee728d165ce0b2b8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 16655,
        "upload_time": "2022-02-07T21:20:48",
        "upload_time_iso_8601": "2022-02-07T21:20:48.091664Z",
        "url": "https://files.pythonhosted.org/packages/3c/ca/555c2c1b6cd6ccac0cf7e6852902f9c5573f1e1f69afdd598956e385200b/line-profiler-gui-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f019a57af6c6d23f5b63f6250596de97c380c2f6a74bda73cc3190ceb52833fd",
          "md5": "d38cfbdcf80e6a17c15dbd17958ced5c",
          "sha256": "69a577a037bc4be095d8e172770842007d17724430e8f24e557c56f835eeb97e"
        },
        "downloads": -1,
        "filename": "line_profiler_gui-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d38cfbdcf80e6a17c15dbd17958ced5c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 20712,
        "upload_time": "2022-02-20T21:16:20",
        "upload_time_iso_8601": "2022-02-20T21:16:20.420180Z",
        "url": "https://files.pythonhosted.org/packages/f0/19/a57af6c6d23f5b63f6250596de97c380c2f6a74bda73cc3190ceb52833fd/line_profiler_gui-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "80e35aa92e14dee8e52ead20e802b9064dc68177432160b3d00714cbd85b727f",
          "md5": "11faf1822dedd97c2d3f168511207cb8",
          "sha256": "312ffededced3d2fe253401191047e9d9210045ab631c825cacd310aeb5b2402"
        },
        "downloads": -1,
        "filename": "line-profiler-gui-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "11faf1822dedd97c2d3f168511207cb8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 17644,
        "upload_time": "2022-02-20T21:16:22",
        "upload_time_iso_8601": "2022-02-20T21:16:22.726194Z",
        "url": "https://files.pythonhosted.org/packages/80/e3/5aa92e14dee8e52ead20e802b9064dc68177432160b3d00714cbd85b727f/line-profiler-gui-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f019a57af6c6d23f5b63f6250596de97c380c2f6a74bda73cc3190ceb52833fd",
        "md5": "d38cfbdcf80e6a17c15dbd17958ced5c",
        "sha256": "69a577a037bc4be095d8e172770842007d17724430e8f24e557c56f835eeb97e"
      },
      "downloads": -1,
      "filename": "line_profiler_gui-0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d38cfbdcf80e6a17c15dbd17958ced5c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 20712,
      "upload_time": "2022-02-20T21:16:20",
      "upload_time_iso_8601": "2022-02-20T21:16:20.420180Z",
      "url": "https://files.pythonhosted.org/packages/f0/19/a57af6c6d23f5b63f6250596de97c380c2f6a74bda73cc3190ceb52833fd/line_profiler_gui-0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "80e35aa92e14dee8e52ead20e802b9064dc68177432160b3d00714cbd85b727f",
        "md5": "11faf1822dedd97c2d3f168511207cb8",
        "sha256": "312ffededced3d2fe253401191047e9d9210045ab631c825cacd310aeb5b2402"
      },
      "downloads": -1,
      "filename": "line-profiler-gui-0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "11faf1822dedd97c2d3f168511207cb8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 17644,
      "upload_time": "2022-02-20T21:16:22",
      "upload_time_iso_8601": "2022-02-20T21:16:22.726194Z",
      "url": "https://files.pythonhosted.org/packages/80/e3/5aa92e14dee8e52ead20e802b9064dc68177432160b3d00714cbd85b727f/line-profiler-gui-0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}