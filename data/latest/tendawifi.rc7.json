{
  "info": {
    "author": "Marco Urriola",
    "author_email": "marco.urriola@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# tenda-wifi\n\nA simple Python package that allows to manage tenda router AC15.\n\n## Installation\n\n```bash\n    $ pip install tendawifi\n```\n\n## API\n\nFirst of all, it has to instance a TendaAC15 object:\n\nIf it run with default router ip \"192.168.1.1\":\n\n```python\n>>> t = tendawifi.TendaAC15()\n>>> Password:\n```\n\nIf it run with custom router ip:\n\n```python\n>>> t = tendawifi.TendaAC15(url_base=\"10.0.0.1\")\n>>> Password:\n```\n\nIf it run without asking the password:\n\n```python\n>>> t = tendawifi.TendaAC15(url_base=\"10.0.0.1\", password=\"YOURPASS\")\n```\n\nCurrently, it has the following features:\n\n### Get Parent Control configuration by MAC address\n\n```python\ndef get_parent_control(self, mac: str) -> dict:\n    \"\"\"\n    Return a dictionary of a Client Parent Control configuration.\n    Args:\n        mac:str: Client MAC address ex: \"aa:bb:cc:dd:ee:ff\"\n    Returns:\n        dict: {'enable': 1, 'mac': 'aa:bb:cc:dd:ee:ff', 'url_enable': 0, 'urls': '',\n        'time': '09:00-01:30', 'day': '1,1,1,1,1,1,1', 'limit_type': 1}\n    \"\"\"\n```\n\n### Set Parent Control configuration MAC address\n\n```python\ndef set_parent_control(self, mac: str, status: int, time: str = \"06:00-06:05\", days: str = \"1,1,1,1,1,1,1\", urls_blocked: str = \"\") -> str:\n    \"\"\"\n    Set status of a Client Parent Control configuration.\n    Args:\n        mac:str: Client MAC address ex: \"aa:bb:cc:dd:ee:ff\"\n        status:int: Status of client Parent Control ex: 1 (enable) 0 (disable) \n        time:str: Time between is allowed. ex: \"06:00-06:05\"\n        days:str: Week days between is allowed. ex: \"1,1,1,1,1,1,1\"\n        urls_blocked:str: List of blocked urls. ex: \"xvideos,pornhub\"\n    Returns:\n        str: Request response '{\"errCode\":0}'\n    \"\"\"\n```\n\n### Get Virtual Server configuration\n\n```python\ndef get_vports(self) -> dict:\n    \"\"\"\n    Return a dictionary of Virtual Server configuration.\n    Returns:\n        dict: {'lanIp': '192.168.1.1', 'lanMask': '255.255.255.0',\n            'virtualList': [{'ip': '192.168.1.100', 'inPort': '80', 'outPort': '80', 'protocol': '0'}, ...]}\n    \"\"\"\n```\n\n### Set Virtual Server configuration\n\n```python\ndef set_vports(self, vports_dict: dict) -> str:\n    \"\"\"\n    Set Virtual Server configuration from dictionary returned by get_vports() method.\n    Args:\n        vports_dict:list: List of Virtual Server settings.\n    Returns:\n        str: Request response '{\"errCode\":0}'\n    \"\"\"\n```\n\n### Get Bandwidth Control configuration\n\n```python\ndef get_net_control(self) -> list:\n    \"\"\"\n    Return a list of Bandwidth configuration.\n    Returns:\n        list: [{'netControlEn': '1'}, {'upSpeed': '0', 'downSpeed': '0', 'devType': 'unknown',\n            'hostName': 'ClientName', 'ip': '192.168.1.100', 'mac': 'aa:bb:cc:dd:ee:ff', 'limitUp': '0',\n            'limitDown': '0', 'isControled': '0', 'offline': '0', 'isSet': '0'}, ...]\n        \"\"\"\n```\n\n### Set Bandwidth Control configuration\n\n```python\ndef set_net_control(self, net_control: list) -> str:\n    \"\"\"\n    Set Bandwidth Control configuration from list returned by get_net_control() method.\n    Args:\n        net_control:list: List of Bandwidth settings.\n    Returns:\n        str: Request response '{\"errCode\":0}'\n    \"\"\"\n```\n\n### Get DHCP Reservation configuration by MAC address\n\n```python\ndef get_ipmac_bind(self) -> dict:\n    \"\"\"\n    Return a dictionary of DHCP Reservation configuration.\n    Returns:\n        dict: {'lanIp': '192.168.1.1', 'lanMask': '255.255.255.0', 'dhttpIP': '172.27.175.218', 'dhcpClientList': [],\n            'bindList': [{'ipaddr': '192.168.1.100', 'macaddr': 'aa:bb:cc:dd:ee:ff', 'devname': 'ClientName', 'status': '1'}, ...]}\n    \"\"\"\n```\n\n### Set DHCP Reservation configuration by MAC address\n\n```python\ndef set_ipmac_bind(self, ipmac_bind_dict: dict) -> str:\n    \"\"\"\n    Set DHCP Reservation configuration from dictionary returned by get_ipmac_bind() method.\n    Args:\n        ipmac_bind_dict:dict: List of DHCP Reservation settings.\n    Returns:\n        str: Request response '{\"errCode\":0}'\n    \"\"\"\n```\n\n### Filter DHCP Reservation configuration by 'devname' value\n\n```python\ndef filter_bindlist_by_devname(self, str_in_dev_name: str) -> list:\n    \"\"\"\n    Return a list of DHCP Reservation configuration filtered by 'devname' value if contains the str_in_dev_name param.\n    Returns:\n        list: [{'ipaddr': '192.168.1.100', 'macaddr': 'aa:bb:cc:dd:ee:ff', 'devname': 'ClientName', 'status': '1'}, ...]}\n    \"\"\"\n```\n\n### Get online clients list\n\n```python\ndef get_online_list(self) -> list:\n    \"\"\"\n    Return a list of online clients.\n    Returns:\n        list: [{\"deviceId\": \"aa:bb:cc:dd:ee:ff\", \"ip\": \"192.168.1.100\", \"devName\": \"ClientName\", \"line\": \"2\", \"uploadSpeed\": \"0\",\n                \"downloadSpeed\": \"0\", \"linkType\": \"unknown\", \"black\": 0, \"isGuestClient\": \"false\" }, ...]}\n    \"\"\"\n```\n\n### Filter online clients list by 'devName' value\n\n```python\ndef filter_onlinelist_by_devname(self, str_in_dev_name: str, case_sensitive=True) -> list:\n    \"\"\"\n    Return a list of online clients filtered by 'devname' value if contains the str_in_dev_name param.\n    Args:\n        str_in_dev_name: String to find in devname. ex: \"someone\"\n        case_sensitive:bool: Whether to filter with case sensitive parameter.\n    Returns:\n        list: [{\"deviceId\": \"aa:bb:cc:dd:ee:ff\", \"ip\": \"192.168.1.100\", \"devName\": \"ClientName\", \"line\": \"2\", \"uploadSpeed\": \"0\",\n                \"downloadSpeed\": \"0\", \"linkType\": \"unknown\", \"black\": 0, \"isGuestClient\": \"false\" }, ...]}\n    \"\"\"\n```\n\n### Filter online clients list by ip range\n\n```python\ndef filter_onlinelist_by_iprange(self, ip_from: int, ip_to: int) -> list:\n    \"\"\"\n    Return a list of online clients filtered by 'ip'.\n    Args:\n        ip_from:str: IP from ex: 100\n        ip_to:str: IP to ex: 250\n    Returns:\n        list: [{\"deviceId\": \"aa:bb:cc:dd:ee:ff\", \"ip\": \"192.168.1.100\", \"devName\": \"ClientName\", \"line\": \"2\", \"uploadSpeed\": \"0\",\n                \"downloadSpeed\": \"0\", \"linkType\": \"unknown\", \"black\": 0, \"isGuestClient\": \"false\" }, ...]}\n    \"\"\"\n```\n\n### Reboot the router\n\n```python\ndef reboot(self):\n    \"\"\"\n    Reboot the router\n    \"\"\"\n```\n\n### Set WPS status\n\n```python\ndef set_wps_status(self, status: int) -> str:\n    \"\"\"\n    Set status of WPS configuration.\n    Args:\n        status:int: 1 (enable) 0 (disable)\n    Returns:\n        str: Request response '{\"errCode\":0}'\n    \"\"\"\n```\n\n### Setup WIFI\n\n```python\ndef setup_wifi(self, ssid: str, password: str) -> str:\n    \"\"\"\n    Set up WIFI configuration.\n    Args:\n        ssid:str: WIFI's name ex: \"Mywifi\"\n        password:str: WIFI's password ex: \"12345678\"\n    Returns:\n        str: Request response '{\"errCode\":0}'\n    \"\"\"\n```\n\n### Set Scheduled Autoreboot status \n\n```python\ndef set_autoreboot_status(self, status: int) -> str:\n    \"\"\"\n    Set status of Scheduled Autoreboot configuration.\n    Args:\n        status:int: 1 (enable) 0 (disable)\n    Returns:\n        str: Request response '{\"errCode\":0}'\n    \"\"\"\n```\n\n### Set Router password \n\n```python\ndef set_router_password(self, old_pass: str, new_pass: str) -> str:\n    \"\"\"\n    Set Router password.\n    Args:\n        old_pass:str: Old password.\n        new_pass:str: New password.\n    \"\"\"\n```\n\n### Set initial Internet settings \n\n```python\ndef set_fast_internet(self, mac: str) -> str:\n    \"\"\"\n    Set Fast Internet connection settings.\n    Args:\n        mac:str: Router MAC address.\n    Returns:\n        str: Request response '{\"errCode\":0}'\n    \"\"\"\n```\n\n### Set initial Router settings \n\n```python\ndef set_fast_router(self, ssid: str, wifi_pass: str, router_pass: str) -> str:\n    \"\"\"\n    Set Fast Router settings.\n    Args:\n        ssid:str: WIFI's name ex: \"Mywifi\"\n        wifi_pass:str: WIFI's password ex: \"12345678\"\n        router_pass:str: Router's password ex: \"12345678\"\n    Returns:\n        str: Request response '{\"errCode\":0}'\n    \"\"\"\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/marc0u/tenda-wifi",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tendawifi",
    "package_url": "https://pypi.org/project/tendawifi/",
    "platform": "",
    "project_url": "https://pypi.org/project/tendawifi/",
    "project_urls": {
      "Homepage": "https://github.com/marc0u/tenda-wifi"
    },
    "release_url": "https://pypi.org/project/tendawifi/0.6.0/",
    "requires_dist": [
      "reqtry (<1.0,>=0.0.2)"
    ],
    "requires_python": ">=3.6",
    "summary": "Python package that allows to manage tenda router AC15.",
    "version": "0.6.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12409654,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8aff571816cb9ece1a38560eeae3efc48c9187de308c5d86f63f053c47e4f5a2",
          "md5": "e1e5ebe46c1a91d75e25a85356e450f5",
          "sha256": "9656d7b1194afe002cdad4ff6a58c25f00b7611440746b9028f04e4f7f072ec6"
        },
        "downloads": -1,
        "filename": "tendawifi-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e1e5ebe46c1a91d75e25a85356e450f5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5116,
        "upload_time": "2020-08-03T19:13:35",
        "upload_time_iso_8601": "2020-08-03T19:13:35.940114Z",
        "url": "https://files.pythonhosted.org/packages/8a/ff/571816cb9ece1a38560eeae3efc48c9187de308c5d86f63f053c47e4f5a2/tendawifi-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "360efa3a1bd5f46c80691474d4f0b1a2678b9ec740a63c8c1bc2f616ea26433a",
          "md5": "21db56874f8daeebcc8b3fcdb2e13009",
          "sha256": "437acefa75fa6d9afc060f3c8037ac02776e8f1327007953fffd1b0e62b78dc4"
        },
        "downloads": -1,
        "filename": "tendawifi-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "21db56874f8daeebcc8b3fcdb2e13009",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4002,
        "upload_time": "2020-08-03T19:13:38",
        "upload_time_iso_8601": "2020-08-03T19:13:38.011075Z",
        "url": "https://files.pythonhosted.org/packages/36/0e/fa3a1bd5f46c80691474d4f0b1a2678b9ec740a63c8c1bc2f616ea26433a/tendawifi-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "db0ed300947f4cac3fdd7d02a9a61a1a8f7c8b81aaa51ad44f64f131664d4734",
          "md5": "5267fafb17b6e600c20dacc1aa4e920c",
          "sha256": "26a8bc4e0d8cf92fce3bdf2b60294d52a9d9ce2f42d8852b14912ec92131861d"
        },
        "downloads": -1,
        "filename": "tendawifi-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5267fafb17b6e600c20dacc1aa4e920c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5349,
        "upload_time": "2020-09-17T23:17:07",
        "upload_time_iso_8601": "2020-09-17T23:17:07.024557Z",
        "url": "https://files.pythonhosted.org/packages/db/0e/d300947f4cac3fdd7d02a9a61a1a8f7c8b81aaa51ad44f64f131664d4734/tendawifi-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f67676468aae48090fae2ab4d41a6ce5dd0f0434a931d9b7c311975f29feb320",
          "md5": "1c4cb2fcd7a7e8e64fcfbda8c7d5f971",
          "sha256": "1e6ff05497844ca2e640a7ffc6490083d412609d26d67c96a670e3f009929fbe"
        },
        "downloads": -1,
        "filename": "tendawifi-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1c4cb2fcd7a7e8e64fcfbda8c7d5f971",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4353,
        "upload_time": "2020-09-17T23:17:08",
        "upload_time_iso_8601": "2020-09-17T23:17:08.198784Z",
        "url": "https://files.pythonhosted.org/packages/f6/76/76468aae48090fae2ab4d41a6ce5dd0f0434a931d9b7c311975f29feb320/tendawifi-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e62d8e5204efb68f17efa44d2439faaf550ccb72a8d9e09fbf904d0be23c1ada",
          "md5": "4339fe3fa62248610524808b12b24b53",
          "sha256": "17a25d680ee91b2d6a29e911f7c3f177b67cef70f9568faf1d5f241882e5244a"
        },
        "downloads": -1,
        "filename": "tendawifi-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4339fe3fa62248610524808b12b24b53",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5760,
        "upload_time": "2020-09-27T03:31:59",
        "upload_time_iso_8601": "2020-09-27T03:31:59.614586Z",
        "url": "https://files.pythonhosted.org/packages/e6/2d/8e5204efb68f17efa44d2439faaf550ccb72a8d9e09fbf904d0be23c1ada/tendawifi-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "74cdc78988d937a5367bed9c70f3cb6f5ff3c85d13c56713f6ce6342d418409c",
          "md5": "d8143c8d6c2405174b70f6872301a3c0",
          "sha256": "1bc623e22c176d131d13f6759e991401b2e6a2c20f69fffe4a476543b4b2f390"
        },
        "downloads": -1,
        "filename": "tendawifi-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d8143c8d6c2405174b70f6872301a3c0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5219,
        "upload_time": "2020-09-27T03:32:01",
        "upload_time_iso_8601": "2020-09-27T03:32:01.367069Z",
        "url": "https://files.pythonhosted.org/packages/74/cd/c78988d937a5367bed9c70f3cb6f5ff3c85d13c56713f6ce6342d418409c/tendawifi-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "20bd5f7ef8c9a8f30fe9af1abb96c21a38769d08ab53e7552f9a1ca9f3ce7262",
          "md5": "04efa66aabead6f676288fcce7703093",
          "sha256": "12beea19ef9f99eb7750e78986561ef88458eca105f0521721f5137cd0b391c5"
        },
        "downloads": -1,
        "filename": "tendawifi-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "04efa66aabead6f676288fcce7703093",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6710,
        "upload_time": "2021-07-15T18:26:39",
        "upload_time_iso_8601": "2021-07-15T18:26:39.026580Z",
        "url": "https://files.pythonhosted.org/packages/20/bd/5f7ef8c9a8f30fe9af1abb96c21a38769d08ab53e7552f9a1ca9f3ce7262/tendawifi-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "52429229c4e0a4e3901e46bcec00709dad19558a4f1359822dda1cc53962e5d5",
          "md5": "dc8010ffb35b8868e9ffbce1629d3f9b",
          "sha256": "b8643277a909214d683055e0e5d7405a821ce40776b7d20e9c55f00a94a40ec4"
        },
        "downloads": -1,
        "filename": "tendawifi-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "dc8010ffb35b8868e9ffbce1629d3f9b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6265,
        "upload_time": "2021-07-15T18:26:41",
        "upload_time_iso_8601": "2021-07-15T18:26:41.890300Z",
        "url": "https://files.pythonhosted.org/packages/52/42/9229c4e0a4e3901e46bcec00709dad19558a4f1359822dda1cc53962e5d5/tendawifi-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "349590389b3faca5d2e608d5b29baf542cc03826f21f49299a22ba1d24f57d84",
          "md5": "9d6df5598c06d13c298e07dd270ff8b9",
          "sha256": "f1888262212c7b33e37f8cb2bd7275f9f51aa9266fe260c022f4952dedd6f6f5"
        },
        "downloads": -1,
        "filename": "tendawifi-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9d6df5598c06d13c298e07dd270ff8b9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7122,
        "upload_time": "2021-07-24T01:38:18",
        "upload_time_iso_8601": "2021-07-24T01:38:18.240376Z",
        "url": "https://files.pythonhosted.org/packages/34/95/90389b3faca5d2e608d5b29baf542cc03826f21f49299a22ba1d24f57d84/tendawifi-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "69e3a2ddb2005c5f819d085153fdaec068e4a7f0681a098c43f414a4858a4c13",
          "md5": "e6a4e036611971969bdf52b10fa942bc",
          "sha256": "6df9026c758e649aaa54a723fb80fe2331e10926844d39ceeb88ce38cfb8298e"
        },
        "downloads": -1,
        "filename": "tendawifi-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e6a4e036611971969bdf52b10fa942bc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6916,
        "upload_time": "2021-07-24T01:38:19",
        "upload_time_iso_8601": "2021-07-24T01:38:19.766456Z",
        "url": "https://files.pythonhosted.org/packages/69/e3/a2ddb2005c5f819d085153fdaec068e4a7f0681a098c43f414a4858a4c13/tendawifi-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7069c0e9034097eae91a5f4f8b501c2cc13ed5b8c8e2e5f029ec7021c0132360",
          "md5": "1b5ae7624c89f4015020bee5fe0fe79a",
          "sha256": "06f4b90cfb964ccc7078c2207209e7def2423f19755a59bc51988305f9c71f3f"
        },
        "downloads": -1,
        "filename": "tendawifi-0.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1b5ae7624c89f4015020bee5fe0fe79a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7432,
        "upload_time": "2021-10-10T17:12:08",
        "upload_time_iso_8601": "2021-10-10T17:12:08.897859Z",
        "url": "https://files.pythonhosted.org/packages/70/69/c0e9034097eae91a5f4f8b501c2cc13ed5b8c8e2e5f029ec7021c0132360/tendawifi-0.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f415e6c9c7f74a0d4bfaa8f1e3f8e509ceffb7daa9cb917056f8a2271dffd093",
          "md5": "dad7720ed6ff07c8e0eac538b8e26187",
          "sha256": "4fa2b969bcc74109231bfe411a2190222f62a6bf84c7e4d88b70892a636e002d"
        },
        "downloads": -1,
        "filename": "tendawifi-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "dad7720ed6ff07c8e0eac538b8e26187",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7265,
        "upload_time": "2021-10-10T17:12:11",
        "upload_time_iso_8601": "2021-10-10T17:12:11.604881Z",
        "url": "https://files.pythonhosted.org/packages/f4/15/e6c9c7f74a0d4bfaa8f1e3f8e509ceffb7daa9cb917056f8a2271dffd093/tendawifi-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5ab65981318ab96367ba7d58a82b0b33871e285b0075118ffc7eb22b80d19ee9",
          "md5": "c932c30522cccf50b3c0e170107eadab",
          "sha256": "276b02f0bc2ed7366f17bbb3bff8337dbc5c953bd104e69f4b051dc5bd27abd8"
        },
        "downloads": -1,
        "filename": "tendawifi-0.6.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c932c30522cccf50b3c0e170107eadab",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7689,
        "upload_time": "2021-12-26T19:32:31",
        "upload_time_iso_8601": "2021-12-26T19:32:31.082045Z",
        "url": "https://files.pythonhosted.org/packages/5a/b6/5981318ab96367ba7d58a82b0b33871e285b0075118ffc7eb22b80d19ee9/tendawifi-0.6.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82e30ab4fe77630d5e81e9bea2c1e3894864a715d40afc2e9c28f0a8352110ca",
          "md5": "3d70b7767a7b3d6f9d9fc2bc70bf6c09",
          "sha256": "f7272f2210c563a4da3f49d77ef4adc49f606dc9e5780fc20b11c1691ffdca1c"
        },
        "downloads": -1,
        "filename": "tendawifi-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3d70b7767a7b3d6f9d9fc2bc70bf6c09",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7457,
        "upload_time": "2021-12-26T19:32:33",
        "upload_time_iso_8601": "2021-12-26T19:32:33.112887Z",
        "url": "https://files.pythonhosted.org/packages/82/e3/0ab4fe77630d5e81e9bea2c1e3894864a715d40afc2e9c28f0a8352110ca/tendawifi-0.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5ab65981318ab96367ba7d58a82b0b33871e285b0075118ffc7eb22b80d19ee9",
        "md5": "c932c30522cccf50b3c0e170107eadab",
        "sha256": "276b02f0bc2ed7366f17bbb3bff8337dbc5c953bd104e69f4b051dc5bd27abd8"
      },
      "downloads": -1,
      "filename": "tendawifi-0.6.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c932c30522cccf50b3c0e170107eadab",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 7689,
      "upload_time": "2021-12-26T19:32:31",
      "upload_time_iso_8601": "2021-12-26T19:32:31.082045Z",
      "url": "https://files.pythonhosted.org/packages/5a/b6/5981318ab96367ba7d58a82b0b33871e285b0075118ffc7eb22b80d19ee9/tendawifi-0.6.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "82e30ab4fe77630d5e81e9bea2c1e3894864a715d40afc2e9c28f0a8352110ca",
        "md5": "3d70b7767a7b3d6f9d9fc2bc70bf6c09",
        "sha256": "f7272f2210c563a4da3f49d77ef4adc49f606dc9e5780fc20b11c1691ffdca1c"
      },
      "downloads": -1,
      "filename": "tendawifi-0.6.0.tar.gz",
      "has_sig": false,
      "md5_digest": "3d70b7767a7b3d6f9d9fc2bc70bf6c09",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 7457,
      "upload_time": "2021-12-26T19:32:33",
      "upload_time_iso_8601": "2021-12-26T19:32:33.112887Z",
      "url": "https://files.pythonhosted.org/packages/82/e3/0ab4fe77630d5e81e9bea2c1e3894864a715d40afc2e9c28f0a8352110ca/tendawifi-0.6.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}