{
  "info": {
    "author": "Manfred SCHLAEGL, fst C implementation: Tony Bybell",
    "author_email": "manfred.schlaegl@gmx.at",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "License :: OSI Approved :: MIT License",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Electronic Design Automation (EDA)"
    ],
    "description": "# [Pylibfst](https://github.com/mschlaegl/pylibfst): Handle *Fast Signal Traces* (fst) in Python\n\nFst, like [vcd](https://en.wikipedia.org/wiki/Value_change_dump), is an open format for dumpfiles generated by EDA logic simulation tools.\nUnlike vcd, fst is a compressed binary format that offers much better performance for very large dumpfiles.\nFst was originally developed as part of [gtkwave](http://gtkwave.sourceforge.net).\nFor more details on the format, see [GTKWave 3.3 Wave Analyzer User's Guide](http://gtkwave.sourceforge.net/gtkwave.pdf).\n\nPylibfst is a python cffi wrapper for a slightly extended version of the fst C library contained in gtkwave.\nIt was initially created to add support for fst to [WAL](https://wal-lang.org) (*Waveform Analysis Language*), developed at the [Institute for Complex Systems](https://ics.jku.at/) at Johannes Kepler University, Linz.\n\nMore details on WAL can be found at [https://wal-lang.org](https://wal-lang.org).\n\nThe latest development version of pylibfst is available on [github](https://github.com/mschlaegl/pylibfst).\n\n\n## Build & Install\n\n### Dependencies\nAdditional packages that need to be installed on the system:\n * cmake build environment (cmake, gcc, ...)\n * zlib-dev\n\n### Install using PyPi (pip)\nPylibfst is available from [PyPi](https://pypi.org/project/pylibfst)!\n\n```\npip install pylibfst\n```\n\n### Build & Install from Source\nThe latest development version of pylibfst is available on [github](https://github.com/mschlaegl/pylibfst).\n\nThere are various ways to build and/or install pylibfst:\n * Build from Source using *Python*\n```\npython -m pip install --upgrade build\npython -m build\n```\n * Build from Source using *make*\n```\nmake all\n```\n * Build & Install from Source using *make*\n```\nmake install\n```\n\n## Usage\nA documentation on how to handle the cffi-style interface (calls, arguments, return values, ...) can be found in the [CFFI documentation](https://cffi.readthedocs.io/en/latest/using.html).\n\nAlthough the fst format and library are widely used, there is unfortunately no documentation for the libfst library.\n(more details on this: [FST API documentation · Issue #70 · gtkwave/gtkwave · GitHub](https://github.com/gtkwave/gtkwave/issues/70)).\nHowever, to support development, pylibfst comes with some documented extensions, helper functions and examples.\n\n * **Extensions**: see *fst/fstext.h*\n * **Helper functions**:\n   * *string(..)* .. Converts ffi cdata to a python string\n   * *get_scopes_signals2(..)* .. Iterates the hierarchy and returns a list containing all scope names and a named tuple containing two dictionaries which describe the signals:\nThe *by_name* dictionary maps from signal names, the *by_handle* from signal handles to a corresponding named tuple containing signal name, length and handle.\n    Note that signals with different name may have the same handle, therefore *by_handle* may have less entries than *by_name*.\n   * *fstReaderIterBlocks(..)* and *fstReaderIterBlocks2(..)*: Wrapped versions of corresponding libfst functions. Allow the use of any normal Python function as a callback (with slight overhead).\n * **Examples**\n   * *dumpfst.py* .. Demonstrates the main calls required to implement an fst reader.\n   * *IterBlocks_callback.py* .. Demonstrates the use of *fstReaderIterBlocks* and *fstReaderIterBlocks2* using cffi-style callbacks\n     * Advantage: Most efficient\n     * Disadvantage: Only one callback function per program possible\n   * *IterBlocks_wrapped_callback.py* .. Demonstrates the use of *fstReaderIterBlocks* and *fstReaderIterBlocks2* using pythonic callbacks (helper functions above)\n     * Advantage: \"Normal\" Python functions as callbacks (as many as you want)\n     * Disadvantage: Slightly more overhead due to wrapper function\n\n## Known Problems and TODOs\n * Windows and Mac untested\n\n## libfst Sources\n * Location: fst\n * Taken from\n   * Repo: https://github.com/gtkwave/gtkwave\n   * Path: gtkwave4/src/helpers/fst\n   * Commit: 49a2a53caee83890dff503c15815fb53d5ccde74\n * Licenses: see COPYING\n\n### How to upgrade libfst?\n 1. Copy most recent sources from gtkwave to directory *fst*\n 1. Check and update *fst/CMakeLists.txt* (see comments in file)\n 1. Update above section (e.g. commit hash)\n 1. Update *pylibfst/libfstapi_build.py* and *pylibfst/libfstapi.cdef* according to *fst/fstapi.h*\n 1. Check and update LICENSE files\n 1. Check and update *fst/fstext.h* and *fst/fstext.c*\n 1. Check and update *pylibfst/helpers.py*\n 1. Check build and install\n 1. Check and update examples\n 1. Commit: Must contain the information from section above\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mschlaegl/pylibfst",
    "keywords": "fst,eda,gtkwave,vcd",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pylibfst",
    "package_url": "https://pypi.org/project/pylibfst/",
    "platform": null,
    "project_url": "https://pypi.org/project/pylibfst/",
    "project_urls": {
      "Homepage": "https://github.com/mschlaegl/pylibfst"
    },
    "release_url": "https://pypi.org/project/pylibfst/0.2.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Handling of Fast Signal Traces (fst) in Python",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15435591,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c6e46ccfff3edabe65622a70f17793f1580131199402ebbf30c3b52988894cfb",
          "md5": "4425b4b85d26f2e8301d0eac77a412d5",
          "sha256": "ee863da161267100ab2b9ded2f9b21991791abb931bd0034e9915400d938d61b"
        },
        "downloads": -1,
        "filename": "pylibfst-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4425b4b85d26f2e8301d0eac77a412d5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 84640,
        "upload_time": "2022-07-20T12:57:06",
        "upload_time_iso_8601": "2022-07-20T12:57:06.624703Z",
        "url": "https://files.pythonhosted.org/packages/c6/e4/6ccfff3edabe65622a70f17793f1580131199402ebbf30c3b52988894cfb/pylibfst-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "500e1cab59df009a52d1f994d31af31b2e68487be7cd169866419fc7a502cca6",
          "md5": "5e631a9d9c2146c3f43a7fa3da47d4c7",
          "sha256": "e0be3df6621b9456774949359a0454e06c67b2580af8af0ecdec9fcf9bedb81c"
        },
        "downloads": -1,
        "filename": "pylibfst-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5e631a9d9c2146c3f43a7fa3da47d4c7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 128009,
        "upload_time": "2022-07-20T14:12:23",
        "upload_time_iso_8601": "2022-07-20T14:12:23.185043Z",
        "url": "https://files.pythonhosted.org/packages/50/0e/1cab59df009a52d1f994d31af31b2e68487be7cd169866419fc7a502cca6/pylibfst-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "35a2a88157167f701f303c40a38067532be4ecf8576ea33f7acaf2390f8f5bf2",
          "md5": "2a68863ee11245833576c92c9d8034ec",
          "sha256": "b1d1c4f8dbaecc7a417668f28ca4143c5dfe9065bda4acea265ab12c2c34bcfa"
        },
        "downloads": -1,
        "filename": "pylibfst-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2a68863ee11245833576c92c9d8034ec",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 84742,
        "upload_time": "2022-07-20T14:18:11",
        "upload_time_iso_8601": "2022-07-20T14:18:11.959423Z",
        "url": "https://files.pythonhosted.org/packages/35/a2/a88157167f701f303c40a38067532be4ecf8576ea33f7acaf2390f8f5bf2/pylibfst-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8ea75882ba6eb71d115e0d678b9874fd004df1d6173300ad7d3ad87b9fa0566b",
          "md5": "0038b4b811d44734897867604e01a603",
          "sha256": "20a2673a01c3569a8439a70c55d49081bc8041ed7cb1fd61aee7920ce6baa53b"
        },
        "downloads": -1,
        "filename": "pylibfst-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "0038b4b811d44734897867604e01a603",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 85700,
        "upload_time": "2022-07-25T11:51:57",
        "upload_time_iso_8601": "2022-07-25T11:51:57.827351Z",
        "url": "https://files.pythonhosted.org/packages/8e/a7/5882ba6eb71d115e0d678b9874fd004df1d6173300ad7d3ad87b9fa0566b/pylibfst-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7c2746cca17ea30d117bae4631f0b7b56ad834d43ae16c0a0d0ead622f63004e",
          "md5": "716fb841167451fc27efd44b45187ab1",
          "sha256": "fda0047c6bae26010a42e5e0747ebb3f79a8ef08c505635192c974529d329525"
        },
        "downloads": -1,
        "filename": "pylibfst-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "716fb841167451fc27efd44b45187ab1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 86376,
        "upload_time": "2022-10-17T12:00:05",
        "upload_time_iso_8601": "2022-10-17T12:00:05.439709Z",
        "url": "https://files.pythonhosted.org/packages/7c/27/46cca17ea30d117bae4631f0b7b56ad834d43ae16c0a0d0ead622f63004e/pylibfst-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7c2746cca17ea30d117bae4631f0b7b56ad834d43ae16c0a0d0ead622f63004e",
        "md5": "716fb841167451fc27efd44b45187ab1",
        "sha256": "fda0047c6bae26010a42e5e0747ebb3f79a8ef08c505635192c974529d329525"
      },
      "downloads": -1,
      "filename": "pylibfst-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "716fb841167451fc27efd44b45187ab1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 86376,
      "upload_time": "2022-10-17T12:00:05",
      "upload_time_iso_8601": "2022-10-17T12:00:05.439709Z",
      "url": "https://files.pythonhosted.org/packages/7c/27/46cca17ea30d117bae4631f0b7b56ad834d43ae16c0a0d0ead622f63004e/pylibfst-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}