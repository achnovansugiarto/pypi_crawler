{
  "info": {
    "author": "icdar21-mapseg-contact(at)googlegroups.com",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# ICDAR 21 MapSeg Evaluation Tools\n\nWelcome to the repository of the evaluation tools for ICDAR 2021 Competition in Historical Map Segmentation (MapSeg).\n\nHere you can learn how to install and use the evaluation tools.\nFeel free to report any problem in the issue tracker, and we will fix it as soon as possible.\n\n## Installation\nThe evaluation tools are packaged as a Python package.\n\nYou need Python >= 3.7.1 to run these tools.\n\nYou can install the evaluation tools with the following command:\n```shell\npip install icdar21-mapseg-eval\n```\n\nYou can test your installation by running the following command which should display the online help of the command line tool:\n```shell\nicdar21-mapseg-eval --help\n```\n\n## Usage\nThere is a single command line program to run the evaluation for all 3 tasks.\nTo select the task you want to run the evaluation for, you need to follow this syntax:\n```shell\nicdar21-mapseg-eval {T1,T2,T3} path_to_reference path_to_prediction path_to_outputs\n```\nwhere:\n\n- `{T1,T2,T3}` means select either `T1` or `T2` or `T3`.\n- `path_to_reference` is the path to either a file or a directory.\n- `path_to_prediction` is the path to either a file or a directory.\n- `path_to_outputs` is the path to the directory where results will be stored.\n\nYou will find in the sections below sample usage for each task.\n\n\nShould you need extra features, you may also import the package and use the exported functions.\n```python\n# Example for Task 1\nfrom skimage.io import imread\nfrom icdar21_mapseg_eval import COCO\ntask1_metrics = COCO(imread(ref_seg, as_gray=True), imread(pred_seg, as_gray=True))\nprint(task1_metrics)\n# Example for Task 2\nfrom skimage.io import imread\nfrom icdar21_mapseg_eval import hausdorff\ntask2_metrics = hausdorff(imread(ref_seg, as_gray=True), imread(pred_seg, as_gray=True))\nprint(task2_metrics)\n# Example for Task 3\nimport numpy as np\nfrom icdar21_mapseg_eval import eval_pt_detect\ntask3_metrics = eval_pt_detect(\n        np.loadtxt(ref_det, delimiter=\",\", skiprows=1), \n        np.loadtxt(pred_det, delimiter=\",\", skiprows=1),\n        radius_limit=50, beta=0.5)  # values used for the competition\nprint(task3_metrics)\n```\n\n## Evaluation tool of task 1: Detect building blocks\n*Please refer to https://icdar21-mapseg.github.io/tasks/task1/ for the description of the task.*\n\n### Metric\nThis tool computes the [COCO PQ score](https://cocodataset.org/#panoptic-eval) associated to the instance segmentation returned by your system.\nPlease note that as we have only 1 \"thing\" class and not \"stuff\" class, we provide indicators only for the building blocks class.\nThese simplifications required a custom implementation which is fully compliant with the COCO PQ evaluation code.\nWe report COCO PQ (overall quality), COCO SQ (segmentation quality) and COCO RQ (detection/recognition quality) indicators.\nFor each of those, the values range from 0 (worst) to 1 (best).\n\nFor more details about the metric, please refer to the [evaluation details for task 1](https://icdar21-mapseg.github.io/tasks/task1/#metrics).\n\n### Tool sample usage\nThe script supports comparing either:\n\n* a predicted segmentation to a reference segmentation (as two binary images in PNG or two label maps in TIFF16).\n* a reference directory to a reference segmentation.  \n  In this case, reference files are expected to end with ``-OUTPUT-GT.png``, and prediction files with ``-OUTPUT-PRED.png`` or ``-OUTPUT-*.tiff``.\n\n\nComparing two files:\n\n```\n$ icdar21-mapseg-eval T1 201-OUTPUT-GT.png 201-OUTPUT-PRED.png output_dir\n201-OUTPUT-PRED.png - COCO PQ 1.00 = 1.00 SQ * 1.00 RQ\n```\n\nComparing two directories:\n\n```\n$ icdar21-mapseg-eval T1 1-detbblocks/validation/ mypred/t1/validation/ output_dir\nProcessing |################################| 1/1\n                                       COCO PQ  COCO SQ  COCO RQ\nReference         Prediction                                  \n201-OUTPUT-GT.png 201-OUTPUT-PRED.png      1.0      1.0      1.0\n==============================\nGlobal score for task 1: 1.000\n============================\n```\n\n### Files generated in output folder\nThe output directory will contain something like:\n\n```\n201-OUTPUT-GT.plot.pdf \nglobal_coco.csv        \nglobal_score.json      \n```\n\nDetail:\n- `global_coco.csv`:  \n  COCO metrics for each image.\n- `global_score.json`:  \n  Easy to parse file for global score with a summary of files analyzed.\n- `NNN-OUTPUT-PRED.plot.pdf`:  \n  Plot of the F-score against all IoU thresholds (COCO PQ is the area under the F-score curve + the value of the F-score at 0.5).\n\n\n## Evaluation tool of task 2: Segment map content area\n*Please refer to https://icdar21-mapseg.github.io/tasks/task2/ for the description of the task.*\n\n### Metric\nThis tool computes the 95% [Haussdorff distance](https://en.wikipedia.org/wiki/Hausdorff_distance) (HD95) between two binary images.\nThis measures how the outline of the reference area and the predicted area are distant.\nHD95 values range from 0 (perfect detection) to large values as it is an error measure.\n\nFor more details about the metric, please refer to the [evaluation details for task 2](https://icdar21-mapseg.github.io/tasks/task2/#metrics).\n\n### Tool sample usage\nThe script supports comparing either:\n\n* a predicted segmentation to a reference segmentation (as two binary images)\n* a reference directory to a reference segmentation\n  In this case, reference files are expected to end with ``-OUTPUT-GT.png``, and prediction files with ``-OUTPUT-PRED.png``.\n\n\nComparing two files:\n\n```\n$ icdar21-mapseg-eval T2 201-OUTPUT-GT.png 201-OUTPUT-PRED.png output_dir\n201-OUTPUT-PRED.png - Haussdorff95 = 0.00\n```\n\nComparing two directories:\n\n```\n$ icdar21-mapseg-eval T2 ./2-segmaparea/validation mypred/t2/validation output_dir\n.../PIL/Image.py:2847: DecompressionBombWarning: Image size (137239200 pixels) exceeds limit of 89478485 pixels, could be decompression bomb DOS attack.\nProcessing |################################| 6/6\n                                     Error\nReference         Prediction              \n201-OUTPUT-GT.png 201-OUTPUT-GT.png    0.0\n202-OUTPUT-GT.png 202-OUTPUT-GT.png    0.0\n203-OUTPUT-GT.png 203-OUTPUT-GT.png    0.0\n204-OUTPUT-GT.png 204-OUTPUT-GT.png    0.0\n205-OUTPUT-GT.png 205-OUTPUT-GT.png    0.0\n206-OUTPUT-GT.png 206-OUTPUT-GT.png    0.0\n==============================\nGlobal error for task 2: 0.000\n```\n\n:warning: Because the PNG files are large, you may get a warning from PIP that you can safely ignore:  \n`DecompressionBombWarning: Image size (137239200 pixels) exceeds limit of 89478485 pixels, could be decompression bomb DOS attack.`\n\n### Files generated in output folder\nWhen processing directories, the output directory will contain the following files:\n\n- `global_error.json`:  \n  Easy to parse file for global score with a summary of files analyzed.\n- `global_hd95.csv`:  \n  HD95 metrics for each image.\n\n\n## Evaluation tool for task 3: Locate graticule lines intersections\n*Please refer to https://icdar21-mapseg.github.io/tasks/task3/ for the description of the task.*\n\n### Metric\nThis tool computes an aggregate indicator of detection and localization accuracy for each set of points (map sheet).\nMore precisely, we compute and plot the F-score (with beta=0.5 to penalize false detections more than missed elements) of the correctly detected points across a range of distance thresholds (50 pixels here).\nThe global indicator is the average of all individual scores.\n\nFor more details about the metric, please refer to the [evaluation details for task 3](https://icdar21-mapseg.github.io/tasks/task3/#metrics).\n\n\n### Tool sample usage\nThe script supports comparing either:\n\n* a predicted detection to a reference detection (as two CSV files)\n* a reference directory to a reference detection\n  In this case, reference files are expected to end with ``-OUTPUT-GT.csv``, and prediction files with ``-OUTPUT-PRED.csv``.\n\nComparing two files:\n\n```\n$ icdar21-mapseg-eval T3 201-OUTPUT-GT.csv 201-OUTPUT-PRED.csv output_dir\n201-OUTPUT-PRED.csv - Score: 1.000\n```\n\nComparing two directories:\n\n```\n$ icdar21-mapseg-eval T3 ./3-locglinesinter/validation mypred/t3/validation output_dir\nProcessing |################################| 6/6\n                                       Score\nReference         Predictions               \n201-OUTPUT-GT.csv 201-OUTPUT-PRED.csv    1.0\n202-OUTPUT-GT.csv 202-OUTPUT-PRED.csv    1.0\n203-OUTPUT-GT.csv 203-OUTPUT-PRED.csv    1.0\n204-OUTPUT-GT.csv 204-OUTPUT-PRED.csv    1.0\n205-OUTPUT-GT.csv 205-OUTPUT-PRED.csv    1.0\n206-OUTPUT-GT.csv 206-OUTPUT-PRED.csv    1.0\n==============================\nGlobal score for task 3: 1.000\n==============================\n```\n\n\n### Files generated in output folder\nThe output directory will contain something like:\n```\n201-OUTPUT-PRED.clf.pdf \n201-OUTPUT-PRED.eval.csv\n201-OUTPUT-PRED.plot.csv\n201-OUTPUT-PRED.plot.pdf\n...\nglobal_rad:50_beta:0.50.csv\nglobal_score.json\n```\n\nDetail:\n- `global_rad:50_beta:0.50.csv`:  \n  global score for each pair of files (ground truth, prediction).\n- `global_score.json`:  \n  Easy to parse file for global score with a summary of files analyzed, and values for evaluation parameters.\n- `nnn-OUTPUT-PRED.eval.csv`:  \n  CSV file with all intermediate metrics (precision, recall, f_beta, tps, fns, fps, etc.) computed for each detected point.\n- `nnn-OUTPUT-PRED.plot.csv`:  \n  Source values used to generate the curve to plot.\n- `nnn-OUTPUT-PRED.plot.pdf`:  \n  Plot of the curve used to compute the global metric.\n- `nnn-OUTPUT-PRED.clf.pdf `:  \n  A visualization of predictions and their error classification against the ground truth.\n\nYou can check the [Demo analysis notebook for task 3](https://github.com/icdar21-mapseg/icdar21-mapseg-eval/blob/main/notebooks/task3_point_detect_eval_demo.ipynb) for further details about the evaluation tools for task 3.  \n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://icdar21-mapseg.github.io/",
    "keywords": "evaluation,map,image segmentation,research,icdar21",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "icdar21-mapseg-eval",
    "package_url": "https://pypi.org/project/icdar21-mapseg-eval/",
    "platform": "",
    "project_url": "https://pypi.org/project/icdar21-mapseg-eval/",
    "project_urls": {
      "Bug Tracker": "https://github.com/icdar21-mapseg/icdar21-mapseg-eval/issues",
      "Documentation": "https://github.com/icdar21-mapseg/icdar21-mapseg-eval/blob/main/README.md",
      "Homepage": "https://icdar21-mapseg.github.io/",
      "Repository": "https://github.com/icdar21-mapseg/icdar21-mapseg-eval"
    },
    "release_url": "https://pypi.org/project/icdar21-mapseg-eval/1.0.4/",
    "requires_dist": [
      "PyQt5 (>=5.15.4,<6.0.0); extra == \"visualisation\"",
      "matplotlib (>=3.3.4,<4.0.0)",
      "numpy (>=1.20.1,<2.0.0)",
      "pandas (>=1.1,<2.0)",
      "progress",
      "scikit-image (>=0.18.1,<0.19.0)",
      "scipy (>=1.6.1,<2.0.0)"
    ],
    "requires_python": ">=3.7.1,<4.0",
    "summary": "Evaluation tools for ICDAR21 Competition on Historical Map Segmentation (MapSeg).",
    "version": "1.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10489315,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad27d79313e91404b59a5e631ee128bd978b3c7712cb019fea3382b2928da9d9",
          "md5": "dc360c1bcf9c7579293931ae1850928c",
          "sha256": "e0b22a37fe154d9ecaead8f74ba200f88b1bafda83a52d1b77d5342b78e5b59e"
        },
        "downloads": -1,
        "filename": "icdar21_mapseg_eval-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dc360c1bcf9c7579293931ae1850928c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.1,<4.0",
        "size": 12758,
        "upload_time": "2021-03-18T13:19:07",
        "upload_time_iso_8601": "2021-03-18T13:19:07.338170Z",
        "url": "https://files.pythonhosted.org/packages/ad/27/d79313e91404b59a5e631ee128bd978b3c7712cb019fea3382b2928da9d9/icdar21_mapseg_eval-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cff1502f8d19c81177cc713f77db38051bf74a64da0cdceeda0ea1c8ccaf7015",
          "md5": "bb0f5bf114990180ee9361d15e4810fd",
          "sha256": "a2a1be9e33b9e4c8798b49573838935b86b12452f858fed0060b3abe391e727c"
        },
        "downloads": -1,
        "filename": "icdar21-mapseg-eval-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bb0f5bf114990180ee9361d15e4810fd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.1,<4.0",
        "size": 10664,
        "upload_time": "2021-03-18T13:19:05",
        "upload_time_iso_8601": "2021-03-18T13:19:05.542338Z",
        "url": "https://files.pythonhosted.org/packages/cf/f1/502f8d19c81177cc713f77db38051bf74a64da0cdceeda0ea1c8ccaf7015/icdar21-mapseg-eval-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0b6a0b9b1c1bbf37379f01f454ccb36c296afd6c0153f0fbe61621f1e0069f76",
          "md5": "7d17468159501f011dfcc705c0610f8d",
          "sha256": "f3a93991268811c686577ba9b89c22b8fa906ee13745de291152e7ac83a119ef"
        },
        "downloads": -1,
        "filename": "icdar21_mapseg_eval-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7d17468159501f011dfcc705c0610f8d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.1,<4.0",
        "size": 16068,
        "upload_time": "2021-03-18T14:08:25",
        "upload_time_iso_8601": "2021-03-18T14:08:25.034578Z",
        "url": "https://files.pythonhosted.org/packages/0b/6a/0b9b1c1bbf37379f01f454ccb36c296afd6c0153f0fbe61621f1e0069f76/icdar21_mapseg_eval-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "43ad549900621f494e397fdf055fe00c5887d64896b2564e40b6cec8be9e8cc3",
          "md5": "3d6db3f888345094ab1ae25a5129a75f",
          "sha256": "e129447a016bc78d4000958285618a92ca1d91458ea320952133841c480f7ddb"
        },
        "downloads": -1,
        "filename": "icdar21_mapseg_eval-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3d6db3f888345094ab1ae25a5129a75f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.1,<4.0",
        "size": 15763,
        "upload_time": "2021-04-02T10:21:07",
        "upload_time_iso_8601": "2021-04-02T10:21:07.617387Z",
        "url": "https://files.pythonhosted.org/packages/43/ad/549900621f494e397fdf055fe00c5887d64896b2564e40b6cec8be9e8cc3/icdar21_mapseg_eval-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "028b52f20e6384ddf1ecf72119331ae408bc0ec977829d741fa22ea91d749eb4",
          "md5": "ea219b4f5ed4759fdc2b0a2bf58e06bd",
          "sha256": "2f45e42e876c1d2b8cd5acbb2f9e0ab75ac3f1333a0043afa7f72aefa60ff386"
        },
        "downloads": -1,
        "filename": "icdar21_mapseg_eval-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ea219b4f5ed4759fdc2b0a2bf58e06bd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.1,<4.0",
        "size": 15856,
        "upload_time": "2021-04-02T16:46:25",
        "upload_time_iso_8601": "2021-04-02T16:46:25.609849Z",
        "url": "https://files.pythonhosted.org/packages/02/8b/52f20e6384ddf1ecf72119331ae408bc0ec977829d741fa22ea91d749eb4/icdar21_mapseg_eval-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f3241a73ed62bfe13d1d636871ee1ba2a9aac8326758537011cdc987a2e9ec0",
          "md5": "b1f65c30b474c167d9146183373e40e2",
          "sha256": "fd8b6b0465d2e189b5fc7b90188ad8e9380ba251ad15d6e47b1a89269a0433ac"
        },
        "downloads": -1,
        "filename": "icdar21_mapseg_eval-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b1f65c30b474c167d9146183373e40e2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.1,<4.0",
        "size": 15855,
        "upload_time": "2021-05-27T15:16:23",
        "upload_time_iso_8601": "2021-05-27T15:16:23.948635Z",
        "url": "https://files.pythonhosted.org/packages/5f/32/41a73ed62bfe13d1d636871ee1ba2a9aac8326758537011cdc987a2e9ec0/icdar21_mapseg_eval-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5f3241a73ed62bfe13d1d636871ee1ba2a9aac8326758537011cdc987a2e9ec0",
        "md5": "b1f65c30b474c167d9146183373e40e2",
        "sha256": "fd8b6b0465d2e189b5fc7b90188ad8e9380ba251ad15d6e47b1a89269a0433ac"
      },
      "downloads": -1,
      "filename": "icdar21_mapseg_eval-1.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b1f65c30b474c167d9146183373e40e2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7.1,<4.0",
      "size": 15855,
      "upload_time": "2021-05-27T15:16:23",
      "upload_time_iso_8601": "2021-05-27T15:16:23.948635Z",
      "url": "https://files.pythonhosted.org/packages/5f/32/41a73ed62bfe13d1d636871ee1ba2a9aac8326758537011cdc987a2e9ec0/icdar21_mapseg_eval-1.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}