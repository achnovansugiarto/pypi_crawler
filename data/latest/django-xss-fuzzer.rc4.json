{
  "info": {
    "author": "Anthony Shaw",
    "author_email": "anthonyshaw@apache.org",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Pytest",
      "License :: OSI Approved :: Apache Software License"
    ],
    "description": "# Django XSS Fuzzer\n\nAn XSS vulnerability fuzz tester for Django views.\n\nThis tester will inject XSS patterns into the context data for a template before it is rendered, including:\n\n- Simple strings\n- Attributes of Django ORM objects in QuerySets\n\nThe goal of this tool is to quickly find any XSS vulnerabilities in Django templates.\n\nAny successful injections will write a message to the browser JavaScript console.\n\n## Installation\n\nInstall via pip\n\n```console\n$ pip install django-xss-fuzzer\n```\n\nAdd `ViewFuzzerMiddleware` to your middleware list for a **test environment**.\n\n```python\nMIDDLEWARE = [\n    ...\n    'django_xss_fuzzer.ViewFuzzerMiddleware'\n]\n```\n\n**Do not deploy this to a production server!**\n\n## Configuration\n\nConfigure the middleware via the Django global settings.\n\n* `XSS_PATTERN` : An XSS patterns to try. See [XSS Cheatsheet](https://portswigger.net/web-security/cross-site-scripting/cheat-sheet) for inspiration.\n* `XSS_INJECT_KWARGS` (Default False) : A switch to disable injecting XSS view function keyword arguments\n* `XSS_INJECT_CONTEXT_DATA` (Default True) : A switch to disable injecting XSS into class data\n\n## Automated fuzzing with Pytest and Selenium\n\nThis package comes with a Pytest extension to add a parametrized fixture, `xss_pattern`.\n\nOnce you've restarted Django, it will replace anything \"string-like\" in the context data with a malicious string.\nBy default it will try `<script>throw onerror=eval,\\'=console.log\\x28\\\\\\'{0}\\\\\\'\\x29\\'</script>`.\n\nThe values that will be replaced :\n- Any string variables\n- Any attributes in a model instance that are strings\n- Any attributes in a QuerySet containing data models that are strings\n\n![fuzzer](https://tonybaloney.github.io/img/posts/fuzzer.png)\n\nWhen you browse any of the pages on your site, you should see Django successfully protecting and escaping the strings.\n\n![evil-page](https://tonybaloney.github.io/img/posts/evil-page.png)\n\nWhen you open the JavaScript console, if you see any `--SUCCESS[]--` messages this means your page is vulnerable, the name of the field that it replaced will be inside square brackets.\n\nTo change the malicious string, set the `XSS_PATTERN` variable in your Django settings.\n\nIt's designed to be paired with PyTest, PyTest-Django, and Selenium so that it will try a range of malicious strings until it finds a successful attack vector.\n\nThe selenium integration is required so that each view will be rendered and then processed by Chrome. Once Chrome has loaded the page, the tool will inspect the JavaScript log for any occurences of `--SUCCESS[field]--`\nand then fail the test if one is found.\n\nHere is an example test for the URLs `/` and `/home`:\n\n```python\nimport pytest\n\n\npaths = (\n    '/',\n    '/home'\n)\n\n\n@pytest.mark.django_db()\n@pytest.mark.parametrize('path', paths)\ndef test_xss_patterns(selenium, live_server, settings, xss_pattern, path):\n    setattr(settings, 'XSS_PATTERN', xss_pattern.string)\n    selenium.get('%s%s' % (live_server.url, path), )\n    assert not xss_pattern.succeeded(selenium), xss_pattern.message\n```\n\nThe test function `test_xss_patterns` is a parametrized test that will run a live server using `pytest-django` and open a browser for each test using `pytest-selenium`.\nTo test more views, just add the URIs to `paths`.\n\nTo setup selenium, add the following to your `conftest.py`:\n\n```python\nimport pytest\n\n\n@pytest.fixture(scope='session')\ndef session_capabilities(session_capabilities):\n    session_capabilities['goog:loggingPrefs'] = {'browser': 'ALL'}\n    return session_capabilities\n\n\n@pytest.fixture\ndef chrome_options(chrome_options):\n    chrome_options.headless = True\n    return chrome_options\n```\n\nThis will configure Chrome as headless and enable logging to capture the XSS flaws.\n\nTo run PyTest with this plugin, use the `--driver` flag as Chrome and `--driver-path` to point to a downloaded version of the Chrome Driver for the version of Chrome you have installed.\n\n```console\n $ python -m pytest tests/ --driver Chrome --driver-path /path/to/chromedriver -rs -vv\n```\n\nOnce this is running, you'll see something similar to the following output:\n\n![](https://tonybaloney.github.io/img/posts/django-xss-fuzzer.gif)\n\nFor each failed test, inspect that particular view with the attack string and see where the potential vulnerability is.\n\n## What about Django's builtin XSS protection?\n\nIn 99% of cases, Django will sanitize the injection strings and they will be unsuccessful.\n\nHowever, there are some limitations, such as unquoted expressions of HTML tag attributes\n\n```html\n<style class={{ var }}>...</style>\n```\n\nThis extension would automatically replace `var` with `x onafterscriptexecute=console.log('found attribute-based xss in {0}')`.\n\nDjango would render the following HTML:\n\n```html\n<style class=x onafterscriptexecute=console.log('found attribute-based xss in {0}')>...</style>\n```\n\nThe JavaScript code within the onafterscriptexecute would be run by the browser, demonstrating the vulnerability.\n\nOther examples, would be the use of the `|safe` filter inside the Django template. This filter can be put into Django views without a full-understanding of the ramifications.\n\nFor example, in a permanent XSS attack, the database, or memory state could contain a dangerous string.\n\n## Running in CI/CD\n\nGitHub Actions has Chrome and Chromedriver preinstalled on the `ubuntu-latest` image.\n\nYou can run the tests with the same flag with the environment variable:\n\n```yaml\n    - name: Run Security Tests\n      run: |\n        python -m pytest tests/your_security_tests --driver Chrome --driver-path $CHROMEWEBDRIVER/chromedriver\n```\n\nAzure Pipelines uses the same image, but has a different syntax. You can run using a script task like this:\n\n```yaml\n- script: |\n    pytest tests/your_security_tests --driver Chrome --driver-path $(CHROMEWEBDRIVER)/chromedriver\n  displayName: 'Run Security tests'\n```\n\nAlso use my [pytest-azurepipelines](https://github.com/tonybaloney/pytest-azurepipelines) extension to automate the publishing of test results to the pipelines UI.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/tonybaloney/django-xss-fuzzer",
    "keywords": "django,xss,security,testing",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-xss-fuzzer",
    "package_url": "https://pypi.org/project/django-xss-fuzzer/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-xss-fuzzer/",
    "project_urls": {
      "Homepage": "https://github.com/tonybaloney/django-xss-fuzzer"
    },
    "release_url": "https://pypi.org/project/django-xss-fuzzer/0.3.1/",
    "requires_dist": [
      "Django >= 2.0",
      "pytest >= 5.0.0 ; extra == \"test\"",
      "pytest-django ; extra == \"test\"",
      "selenium ; extra == \"test\"",
      "pytest-selenium ; extra == \"test\"",
      "pytest-pythonpath ; extra == \"test\""
    ],
    "requires_python": ">=3.5",
    "summary": "django-xss-fuzzer: An XSS vulnerability fuzz tester for Django views.",
    "version": "0.3.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7974895,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6597cf5e636f6ac8a4f055777b13faa253e0c88cc5e27ea33df567004f5e19dd",
          "md5": "088496c01d12674960cc75ef0a7c3018",
          "sha256": "d7473d4f6349c18909ff21e69cc9eadec5e9218cc0408e3d99bc76728354ab71"
        },
        "downloads": -1,
        "filename": "django_xss_fuzzer-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "088496c01d12674960cc75ef0a7c3018",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 7383,
        "upload_time": "2020-07-16T05:41:55",
        "upload_time_iso_8601": "2020-07-16T05:41:55.772489Z",
        "url": "https://files.pythonhosted.org/packages/65/97/cf5e636f6ac8a4f055777b13faa253e0c88cc5e27ea33df567004f5e19dd/django_xss_fuzzer-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b462cc3f7205d018fbb5d0db8abf4fbac6d1999bdea7b6602c0a60013542399e",
          "md5": "804e96c48942f8cb403e40440c578eac",
          "sha256": "bef741eb27ef370d0159d2e7666b074fae82d5796e265b612cf23bdba5c766fd"
        },
        "downloads": -1,
        "filename": "django-xss-fuzzer-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "804e96c48942f8cb403e40440c578eac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 6786,
        "upload_time": "2020-07-16T05:42:02",
        "upload_time_iso_8601": "2020-07-16T05:42:02.277104Z",
        "url": "https://files.pythonhosted.org/packages/b4/62/cc3f7205d018fbb5d0db8abf4fbac6d1999bdea7b6602c0a60013542399e/django-xss-fuzzer-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ff6250745237b3caa73ca236c7a9755c336a61788a995602801846193012b51",
          "md5": "4e24d11ed16111a153bf38cfaba07008",
          "sha256": "1a7d55c67a59c9acb9fa84749999a0c8e73c062fb3139d763276f601703d5626"
        },
        "downloads": -1,
        "filename": "django_xss_fuzzer-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4e24d11ed16111a153bf38cfaba07008",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 8655,
        "upload_time": "2020-07-22T04:53:46",
        "upload_time_iso_8601": "2020-07-22T04:53:46.653603Z",
        "url": "https://files.pythonhosted.org/packages/0f/f6/250745237b3caa73ca236c7a9755c336a61788a995602801846193012b51/django_xss_fuzzer-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4d9d02f9f56b0cafb963da038c15c55920db947eabcd360896644802de53a375",
          "md5": "8342f3ce9c20e3b00bfea117d91035d6",
          "sha256": "77094448fd01fcac6f16740cef49abe687f405ea68c1b27632bb5df42594fd48"
        },
        "downloads": -1,
        "filename": "django-xss-fuzzer-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8342f3ce9c20e3b00bfea117d91035d6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 11074,
        "upload_time": "2020-07-22T04:53:51",
        "upload_time_iso_8601": "2020-07-22T04:53:51.401140Z",
        "url": "https://files.pythonhosted.org/packages/4d/9d/02f9f56b0cafb963da038c15c55920db947eabcd360896644802de53a375/django-xss-fuzzer-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "576c6267d714cb472f26ece070cfe55d80b9ea9bea2380e80e2b40a501bf5f94",
          "md5": "8cec9590ce3cdffeb059ada1967dba1f",
          "sha256": "b910870e5cc799ba04e4e549680b002bc61ebd5286f50764c96dcea05ee141d2"
        },
        "downloads": -1,
        "filename": "django_xss_fuzzer-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8cec9590ce3cdffeb059ada1967dba1f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 9889,
        "upload_time": "2020-07-23T04:58:00",
        "upload_time_iso_8601": "2020-07-23T04:58:00.013183Z",
        "url": "https://files.pythonhosted.org/packages/57/6c/6267d714cb472f26ece070cfe55d80b9ea9bea2380e80e2b40a501bf5f94/django_xss_fuzzer-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "964b92ba152f6cf51c9177d32266e1b7b0acb2d81d80034ee281fb5f8910f7ba",
          "md5": "d1d24e73d8d5e747ec1599a12bad2013",
          "sha256": "01c3eb65b483ef5b3b07654616035b94d4b53730075309183070d6e78f9a4604"
        },
        "downloads": -1,
        "filename": "django-xss-fuzzer-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d1d24e73d8d5e747ec1599a12bad2013",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 12099,
        "upload_time": "2020-07-23T04:58:03",
        "upload_time_iso_8601": "2020-07-23T04:58:03.612281Z",
        "url": "https://files.pythonhosted.org/packages/96/4b/92ba152f6cf51c9177d32266e1b7b0acb2d81d80034ee281fb5f8910f7ba/django-xss-fuzzer-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e8b4d8d5ef3e3ecace2ffc4449aa2b3f40ab7e9bf2861543439ac965807d502",
          "md5": "df8f8b3ab5688ce2ad71009b8142eb39",
          "sha256": "4ae78e5352a2acd5e553b96a18c0c839964bd968178549f8c0f92d377ed320cd"
        },
        "downloads": -1,
        "filename": "django_xss_fuzzer-0.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "df8f8b3ab5688ce2ad71009b8142eb39",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 10202,
        "upload_time": "2020-08-17T01:51:32",
        "upload_time_iso_8601": "2020-08-17T01:51:32.149794Z",
        "url": "https://files.pythonhosted.org/packages/7e/8b/4d8d5ef3e3ecace2ffc4449aa2b3f40ab7e9bf2861543439ac965807d502/django_xss_fuzzer-0.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca77d09c65c891d3e0226ce38425e731f752992e7fc031b56a6add1f31682a1d",
          "md5": "bed06849809ed73b535e032f7f177f8a",
          "sha256": "7c6db71cbbad8d6a5d88a4e638f4ef214a832d027ffad0a8ce9fa8d380ed1901"
        },
        "downloads": -1,
        "filename": "django-xss-fuzzer-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "bed06849809ed73b535e032f7f177f8a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 12738,
        "upload_time": "2020-08-17T01:51:38",
        "upload_time_iso_8601": "2020-08-17T01:51:38.996293Z",
        "url": "https://files.pythonhosted.org/packages/ca/77/d09c65c891d3e0226ce38425e731f752992e7fc031b56a6add1f31682a1d/django-xss-fuzzer-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7e8b4d8d5ef3e3ecace2ffc4449aa2b3f40ab7e9bf2861543439ac965807d502",
        "md5": "df8f8b3ab5688ce2ad71009b8142eb39",
        "sha256": "4ae78e5352a2acd5e553b96a18c0c839964bd968178549f8c0f92d377ed320cd"
      },
      "downloads": -1,
      "filename": "django_xss_fuzzer-0.3.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "df8f8b3ab5688ce2ad71009b8142eb39",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 10202,
      "upload_time": "2020-08-17T01:51:32",
      "upload_time_iso_8601": "2020-08-17T01:51:32.149794Z",
      "url": "https://files.pythonhosted.org/packages/7e/8b/4d8d5ef3e3ecace2ffc4449aa2b3f40ab7e9bf2861543439ac965807d502/django_xss_fuzzer-0.3.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ca77d09c65c891d3e0226ce38425e731f752992e7fc031b56a6add1f31682a1d",
        "md5": "bed06849809ed73b535e032f7f177f8a",
        "sha256": "7c6db71cbbad8d6a5d88a4e638f4ef214a832d027ffad0a8ce9fa8d380ed1901"
      },
      "downloads": -1,
      "filename": "django-xss-fuzzer-0.3.1.tar.gz",
      "has_sig": false,
      "md5_digest": "bed06849809ed73b535e032f7f177f8a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 12738,
      "upload_time": "2020-08-17T01:51:38",
      "upload_time_iso_8601": "2020-08-17T01:51:38.996293Z",
      "url": "https://files.pythonhosted.org/packages/ca/77/d09c65c891d3e0226ce38425e731f752992e7fc031b56a6add1f31682a1d/django-xss-fuzzer-0.3.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}