{
  "info": {
    "author": "Yannick Poirier <contact@yannickpoirier.fr>",
    "author_email": "Yannick Poirier <contact@yannickpoirier.fr>",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Programming Language :: Rust"
    ],
    "description": "[![Rust](https://github.com/ypo/flute/actions/workflows/rust.yml/badge.svg)](https://github.com/ypo/flute/actions/workflows/rust.yml)\n[![Python](https://github.com/ypo/flute/actions/workflows/python.yml/badge.svg)](https://github.com/ypo/flute/actions/workflows/python.yml)\n[![Docs.rs](https://docs.rs/flute/badge.svg)](https://docs.rs/crate/flute/)\n[![Crates.io](https://img.shields.io/crates/v/flute)](https://crates.io/crates/flute/)\n[![Rust Dependency](https://deps.rs/repo/github/ypo/flute/status.svg)](https://deps.rs/repo/github/ypo/flute)\n[![codecov](https://codecov.io/gh/ypo/flute/branch/main/graph/badge.svg?token=P4KE639YU8)](https://codecov.io/gh/ypo/flute)\n\n## FLUTE - File Delivery over Unidirectional Transport\n\n\nMassively scalable multicast distribution solution\n\nThe library implements a unidirectional file delivery, without the need of a return channel.\n\n\n## RFC\n\nThis library implements the following RFCs\n\n| RFC      | Title      | Link       |\n| -------- | ---------- | -----------|\n| RFC 6726 | FLUTE - File Delivery over Unidirectional Transport      | <https://www.rfc-editor.org/rfc/rfc6726.html> |\n| RFC 5775 | Asynchronous Layered Coding (ALC) Protocol Instantiation | <https://www.rfc-editor.org/rfc/rfc5775.html> |\n| RFC 5661 | Layered Coding Transport (LCT) Building Block            | <https://www.rfc-editor.org/rfc/rfc5651>      |\n| RFC 5052 | Forward Error Correction (FEC) Building Block            | <https://www.rfc-editor.org/rfc/rfc5052>      |\n| RFC 5510 | Reed-Solomon Forward Error Correction (FEC) Schemes      | <https://www.rfc-editor.org/rfc/rfc5510.html> |\n\n## UDP/IP Multicast files sender\n\nTransfer files over a UDP/IP network\n\n```rust\nuse flute::sender::Sender;\nuse flute::sender::ObjectDesc;\nuse flute::sender::Cenc;\nuse std::net::UdpSocket;\nuse std::time::SystemTime;\n\n// Create UDP Socket\nlet udp_socket = UdpSocket::bind(\"0.0.0.0:0\").unwrap();\nudp_socket.connect(\"224.0.0.1:3400\").expect(\"Connection failed\");\n\n// Create FLUTE Sender\nlet tsi = 1;\nlet oti = Default::default();\nlet config = Default::default();\nlet mut sender = Sender::new(tsi, &oti, &config);\n\n// Add object(s) (files) to the FLUTE sender\nlet obj = ObjectDesc::create_from_buffer(b\"hello world\", \"text/plain\",\n&url::Url::parse(\"file:///hello.txt\").unwrap(), 1, None, Cenc::Null, true, None, true).unwrap();\nsender.add_object(obj);\n\n// Always call publish after adding objects\nsender.publish(SystemTime::now());\n\n// Send FLUTE packets over UDP/IP\nwhile let Some(pkt) = sender.read(SystemTime::now()) {\n    udp_socket.send(&pkt).unwrap();\n    std::thread::sleep(std::time::Duration::from_millis(1));\n}\n\n```\n## UDP/IP Multicast files receiver\n\nReceive files from a UDP/IP network\n\n```rust\nuse flute::receiver::{writer, MultiReceiver};\nuse std::net::UdpSocket;\nuse std::time::SystemTime;\nuse std::rc::Rc;\n\n// Create UDP/IP socket to receive FLUTE pkt\nlet udp_socket = UdpSocket::bind(\"224.0.0.1:3400\").expect(\"Fail to bind\");\n\n// Create a writer able to write received files to the filesystem\nlet writer = Rc::new(writer::ObjectWriterFSBuilder::new(&std::path::Path::new(\"./flute_dir\"))\n    .unwrap_or_else(|_| std::process::exit(0)));\n\n// Create a multi-receiver capable of de-multiplexing several FLUTE sessions\nlet mut receiver = MultiReceiver::new(None, writer, None);\n\n// Receive pkt from UDP/IP socket and push it to the FLUTE receiver\nlet mut buf = [0; 2048];\nloop {\n    let (n, _src) = udp_socket.recv_from(&mut buf).expect(\"Failed to receive data\");\n    let now = SystemTime::now();\n    receiver.push(&buf[..n], now).unwrap();\n    receiver.cleanup(now);\n}\n```\n## Application-Level Forward Erasure Correction (AL-FEC)\n\nThe following error recovery algorithms are supported\n\n- [X] No-code\n- [X] Reed-Solomon GF 2^8\n- [X] Reed-Solomon GF 2^8 Under Specified\n- [ ] Reed-Solomon GF 2^16\n- [ ] Reed-Solomon GF 2^m\n- [X] RaptorQ\n\nThe `Oti` module provides an implementation of the Object Transmission Information (OTI)\nused to configure Forward Error Correction (FEC) encoding in the FLUTE protocol.\n\n```rust\nuse flute::sender::Oti;\nuse flute::sender::Sender;\n\n// Reed Solomon 2^8 with encoding blocks composed of\n// 60 source symbols and 4 repair symbols of 1424 bytes per symbol\nlet oti = Oti::new_reed_solomon_rs28(1424, 60, 4).unwrap();\nlet mut sender = Sender::new(1, &oti, &Default::default());\n```\n\n## Content Encoding (CENC)\n\nThe following schemes are supported during the transmission/reception\n\n- [x] Null (no compression)\n- [x] Deflate\n- [x] Zlib\n- [x] Gzip\n\n## Files multiplex / Blocks interleave\n\nThe FLUTE Sender is able to transfer multiple files in parallel by interleaving packets from each file. For example:\n\n**Pkt file1** -> Pkt file2 -> Pkt file3 -> **Pkt file1** -> Pkt file2 -> Pkt file3 ...\n\nThe Sender can interleave blocks within a single file.\nThe following example shows Encoding Symbols (ES) from different blocks (B) are interleaved. For example:\n\n**(B 1,ES 1)**->(B 2,ES 1)->(B 3,ES 1)->**(B 1,ES 2)**->(B 2,ES 2)...\n\nTo configure the multiplexing, use the `Config` struct as follows:\n\n```rust\nuse flute::sender::Sender;\nuse flute::sender::Config;\n\nlet config = Config {\n    // Transfer a maximum of 3 files in parallel\n    multiplex_files: 3,\n    // Interleave a maximum of 3 blocks within each file\n    interleave_blocks: 3,\n    ..Default::default()\n};\n\nlet mut sender = Sender::new(1, &Default::default(), &config);\n\n```\n\n# Python bindings\n\n[![PyPI version](https://badge.fury.io/py/flute-alc.svg)](https://badge.fury.io/py/flute-alc)\n\n## Installation\n\n```bash\npip install flute-alc\n```\n\n## Example\n\nFlute Sender python example\n\n```python\n    from flute import sender\n\n    # Flute Sender config parameters\n    sender_config = sender.Config()\n\n    # Object transmission parameters (no_code => no FEC)\n    # encoding symbol size : 1400 bytes\n    # Max source block length : 64 encoding symbols\n    oti = sender.Oti.new_no_code(1400, 64)\n\n    # Create FLUTE Sender\n    flute_sender = sender.Sender(1, oti, sender_config)\n\n    # Transfer a file \n    flute_sender.add_file(\"/path/to/file\",  \"application/octet-stream\", None, 0, None)\n    flute_sender.publish()\n\n    while True:\n        alc_pkt = flute_sender.read()\n        if alc_pkt == None:\n            break\n\n        #TODO Send alc_pkt over UDP/IP\n```\n\nFlute Receiver python example\n```python\n    from flute import receiver\n\n    # Write received objects to a destination folder\n    receiver_writer = receiver.FluteWriter(\"/path/to/dest\")\n\n    # FLUTE Receiver configuration parameters\n    receiver_config = receiver.Config()\n\n    tsi = 1\n\n    # Creation of a FLUTE receiver\n    flute_receiver = receiver.Receiver(tsi, receiver_writer, receiver_config)\n\n    while True:\n        # Receive LCT/ALC packet from multicast\n        pkt = receive_from_udp_socket()\n\n        # Push packet to the flute receiver\n        flute_receiver.push(bytes(pkt))\n```\n\n",
    "description_content_type": "text/markdown; charset=UTF-8; variant=GFM",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ypo/flute",
    "keywords": "multicast,network,broadcast,5g,satellite",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "flute-alc",
    "package_url": "https://pypi.org/project/flute-alc/",
    "platform": null,
    "project_url": "https://pypi.org/project/flute-alc/",
    "project_urls": {
      "Homepage": "https://github.com/ypo/flute",
      "Source Code": "https://github.com/ypo/flute"
    },
    "release_url": "https://pypi.org/project/flute-alc/0.6.0/",
    "requires_dist": [
      "cffi"
    ],
    "requires_python": ">=3.7",
    "summary": "File Delivery over Unidirectional Transport (FLUTE)",
    "version": "0.6.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16501887,
  "releases": {
    "0.4.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c3c9c889b55fb0cd4e2806de00dd6bd6c2e6bc79db942aab8853cd0d9208fd6f",
          "md5": "2840d07f5fb882a2579936b01e0d36a7",
          "sha256": "9caff962e2a0ef58188d6218a69366669862a0425e3fff0d0712591cb01cca68"
        },
        "downloads": -1,
        "filename": "flute_alc-0.4.2-cp310-cp310-manylinux_2_34_x86_64.whl",
        "has_sig": false,
        "md5_digest": "2840d07f5fb882a2579936b01e0d36a7",
        "packagetype": "bdist_wheel",
        "python_version": "cp310",
        "requires_python": ">=3.7",
        "size": 1638555,
        "upload_time": "2023-01-09T16:39:13",
        "upload_time_iso_8601": "2023-01-09T16:39:13.518252Z",
        "url": "https://files.pythonhosted.org/packages/c3/c9/c889b55fb0cd4e2806de00dd6bd6c2e6bc79db942aab8853cd0d9208fd6f/flute_alc-0.4.2-cp310-cp310-manylinux_2_34_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "829b3952237c2a218a2ea2c271a74aacf699a3615f92dea5f72957122490034a",
          "md5": "d03b0137513e0a6fd9ca67a9ddd2609d",
          "sha256": "b70947b89a4f8c6ce291369f9ae8b51c98b255d984f705af1fba541a5c7e44c7"
        },
        "downloads": -1,
        "filename": "flute_alc-0.4.4-cp310-cp310-manylinux_2_34_x86_64.whl",
        "has_sig": false,
        "md5_digest": "d03b0137513e0a6fd9ca67a9ddd2609d",
        "packagetype": "bdist_wheel",
        "python_version": "cp310",
        "requires_python": ">=3.7",
        "size": 1645675,
        "upload_time": "2023-01-10T15:21:09",
        "upload_time_iso_8601": "2023-01-10T15:21:09.577132Z",
        "url": "https://files.pythonhosted.org/packages/82/9b/3952237c2a218a2ea2c271a74aacf699a3615f92dea5f72957122490034a/flute_alc-0.4.4-cp310-cp310-manylinux_2_34_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1e2c21fc4f4f28d4f642e9154cd174ad23efa9f3e4833bb703066e6486a25486",
          "md5": "77014e4ecf5369d95b802dbea27ab3ad",
          "sha256": "82061780fc9822310123c748eab5e72f621e45d9a87fc628d09fa06983781160"
        },
        "downloads": -1,
        "filename": "flute_alc-0.5.0-cp310-cp310-manylinux_2_34_x86_64.whl",
        "has_sig": false,
        "md5_digest": "77014e4ecf5369d95b802dbea27ab3ad",
        "packagetype": "bdist_wheel",
        "python_version": "cp310",
        "requires_python": ">=3.7",
        "size": 1860203,
        "upload_time": "2023-01-17T17:36:19",
        "upload_time_iso_8601": "2023-01-17T17:36:19.734015Z",
        "url": "https://files.pythonhosted.org/packages/1e/2c/21fc4f4f28d4f642e9154cd174ad23efa9f3e4833bb703066e6486a25486/flute_alc-0.5.0-cp310-cp310-manylinux_2_34_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "54d4893aced43327250af9d7fef34afda8627b5287332f183e7e619c05da6c7c",
          "md5": "db1bc9e3611ee53ba0ee0a59fcc66436",
          "sha256": "6ba023c99dc088774e37cef0452d77ff98d42a6e71f4504c5fa096e413ab870a"
        },
        "downloads": -1,
        "filename": "flute_alc-0.6.0-cp310-cp310-manylinux_2_34_x86_64.whl",
        "has_sig": false,
        "md5_digest": "db1bc9e3611ee53ba0ee0a59fcc66436",
        "packagetype": "bdist_wheel",
        "python_version": "cp310",
        "requires_python": ">=3.7",
        "size": 1864337,
        "upload_time": "2023-01-20T14:45:13",
        "upload_time_iso_8601": "2023-01-20T14:45:13.580421Z",
        "url": "https://files.pythonhosted.org/packages/54/d4/893aced43327250af9d7fef34afda8627b5287332f183e7e619c05da6c7c/flute_alc-0.6.0-cp310-cp310-manylinux_2_34_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "54d4893aced43327250af9d7fef34afda8627b5287332f183e7e619c05da6c7c",
        "md5": "db1bc9e3611ee53ba0ee0a59fcc66436",
        "sha256": "6ba023c99dc088774e37cef0452d77ff98d42a6e71f4504c5fa096e413ab870a"
      },
      "downloads": -1,
      "filename": "flute_alc-0.6.0-cp310-cp310-manylinux_2_34_x86_64.whl",
      "has_sig": false,
      "md5_digest": "db1bc9e3611ee53ba0ee0a59fcc66436",
      "packagetype": "bdist_wheel",
      "python_version": "cp310",
      "requires_python": ">=3.7",
      "size": 1864337,
      "upload_time": "2023-01-20T14:45:13",
      "upload_time_iso_8601": "2023-01-20T14:45:13.580421Z",
      "url": "https://files.pythonhosted.org/packages/54/d4/893aced43327250af9d7fef34afda8627b5287332f183e7e619c05da6c7c/flute_alc-0.6.0-cp310-cp310-manylinux_2_34_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}