{
  "info": {
    "author": "mzcn Authors:英俊",
    "author_email": "2227495940@qq.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3.6",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "\n# mzcn\n\n中文版本的matchzoo-py\n\n本库包是基于matchzoo-py的库包做的二次开发开源项目，MatchZoo 是一个通用的文本匹配工具包，它旨在方便大家快速的实现、比较、以及分享最新的深度文本匹配模型。\n<br>\n由于matchzoo-py面向英文预处理较为容易，中文处理则需要进行一定的预处理。为此本人在借鉴学习他人成功的基础上，改进了matchzoo-py包，开发mzcn库包。\n<br>\nmzcn库包对中文文本语料进行只保留文本、去除表情、去除空格、去除停用词等操作，使得使用者可以快速进行中文文本语料进行预处理，使用方法和matchzoo-py基本一致。\n\n# 快速入手\n\n## 定义损失函数和指标\n\n\n```python\nimport torch\nimport numpy as np\nimport pandas as pd\nimport mzcn as mz\nprint('matchzoo version', mz.__version__)\nranking_task = mz.tasks.Ranking(losses=mz.losses.RankHingeLoss())\nranking_task.metrics = [\n    mz.metrics.NormalizedDiscountedCumulativeGain(k=3),\n    mz.metrics.NormalizedDiscountedCumulativeGain(k=5),\n    mz.metrics.MeanAveragePrecision()\n]\nprint(\"`ranking_task` initialized with metrics\", ranking_task.metrics)\n```\n\n    C:\\Users\\Administrator\\Anaconda3\\lib\\requests\\__init__.py:80: RequestsDependencyWarning: urllib3 (1.25.11) or chardet (3.0.4) doesn't match a supported version!\n      RequestsDependencyWarning)\n    \n\n    matchzoo version 1.0.1\n    `ranking_task` initialized with metrics [normalized_discounted_cumulative_gain@3(0.0), normalized_discounted_cumulative_gain@5(0.0), mean_average_precision(0.0)]\n    \n\n## 准备输入数据\n\n\n```python\ndef load_data(tmp_data,tmp_task):\n\tdf_data = mz.pack(tmp_data,task=tmp_task)\n\treturn df_data\n##数据集，并且进行相应的预处理\ntrain=pd.read_csv('./data/train_data.csv').sample(100)\ndev=pd.read_csv('./data/dev_data.csv').sample(50)\ntest=pd.read_csv('./data/test_data.csv').sample(30)\ntrain_pack_raw = load_data(train,ranking_task)\ndev_pack_raw = load_data(dev,ranking_task)\ntest_pack_raw=load_data(test,ranking_task)\n```\n\n# 停用表配置\n\n\n```python\nimport os\n```\n\n\n```python\nfolder=mz.__path__[0]+'\\\\preprocessors\\\\units\\\\'\nfile=folder+'stopwords.txt'\nif not os.path.exists(file):\n    print('请将stopwords.txt放置在'+folder+'下面')\nelse:\n    print('停用表配置成功')\n```\n\n    停用表配置成功\n    \n\n## 数据集预处理\n\n\n```python\npreprocessor = mz.models.aNMM.get_default_preprocessor()\n```\n\n\n```python\ntrain_pack_processed = preprocessor.fit_transform(train_pack_raw)\ndev_pack_processed = preprocessor.transform(dev_pack_raw)\ntest_pack_processed = preprocessor.transform(test_pack_raw)\n```\n\n    Processing text_left with chain_transform of ChineseRemoveBlack => ChineseSimplified => ChineseEmotion => IsChinese => ChineseStopRemoval => ChineseTokenizeDemo => Tokenize => Lowercase => PuncRemoval:   0%| | 0/92 [00:00<?, ?it/s]Building prefix dict from the default dictionary ...\n    Loading model from cache C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\jieba.cache\n    Loading model cost 1.260 seconds.\n    Prefix dict has been built succesfully.\n    Processing text_left with chain_transform of ChineseRemoveBlack => ChineseSimplified => ChineseEmotion => IsChinese => ChineseStopRemoval => ChineseTokenizeDemo => Tokenize => Lowercase => PuncRemoval: 100%|█| 92/92 [00:01<00:00, 51.43it/s]\n    Processing text_right with chain_transform of ChineseRemoveBlack => ChineseSimplified => ChineseEmotion => IsChinese => ChineseStopRemoval => ChineseTokenizeDemo => Tokenize => Lowercase => PuncRemoval: 100%|█| 94/94 [00:00<00:00, 183.34it/s]\n    Processing text_right with append: 100%|████████████████████████████████████████████| 94/94 [00:00<00:00, 47020.22it/s]\n    Building FrequencyFilter from a datapack.: 100%|████████████████████████████████████| 94/94 [00:00<00:00, 23511.51it/s]\n    Processing text_right with transform: 100%|█████████████████████████████████████████| 94/94 [00:00<00:00, 23515.72it/s]\n    Processing text_left with extend: 100%|█████████████████████████████████████████████| 92/92 [00:00<00:00, 92182.51it/s]\n    Processing text_right with extend: 100%|████████████████████████████████████████████| 94/94 [00:00<00:00, 23529.76it/s]\n    Building Vocabulary from a datapack.: 100%|████████████████████████████████████| 1003/1003 [00:00<00:00, 501955.25it/s]\n    Processing text_left with chain_transform of ChineseRemoveBlack => ChineseSimplified => ChineseEmotion => IsChinese => ChineseStopRemoval => ChineseTokenizeDemo => Tokenize => Lowercase => PuncRemoval: 100%|█| 92/92 [00:00<00:00, 185.96it/s]\n    Processing text_right with chain_transform of ChineseRemoveBlack => ChineseSimplified => ChineseEmotion => IsChinese => ChineseStopRemoval => ChineseTokenizeDemo => Tokenize => Lowercase => PuncRemoval: 100%|█| 94/94 [00:00<00:00, 187.73it/s]\n    Processing text_right with transform: 100%|█████████████████████████████████████████| 94/94 [00:00<00:00, 94119.02it/s]\n    Processing text_left with transform: 100%|██████████████████████████████████████████| 92/92 [00:00<00:00, 30661.58it/s]\n    Processing text_right with transform: 100%|█████████████████████████████████████████| 94/94 [00:00<00:00, 23519.93it/s]\n    Processing length_left with len: 100%|██████████████████████████████████████████████| 92/92 [00:00<00:00, 23001.67it/s]\n    Processing length_right with len: 100%|█████████████████████████████████████████████| 94/94 [00:00<00:00, 93939.62it/s]\n    Processing text_left with chain_transform of ChineseRemoveBlack => ChineseSimplified => ChineseEmotion => IsChinese => ChineseStopRemoval => ChineseTokenizeDemo => Tokenize => Lowercase => PuncRemoval: 100%|█| 44/44 [00:00<00:00, 174.71it/s]\n    Processing text_right with chain_transform of ChineseRemoveBlack => ChineseSimplified => ChineseEmotion => IsChinese => ChineseStopRemoval => ChineseTokenizeDemo => Tokenize => Lowercase => PuncRemoval: 100%|█| 49/49 [00:00<00:00, 195.33it/s]\n    Processing text_right with transform: 100%|█████████████████████████████████████████| 49/49 [00:00<00:00, 24440.59it/s]\n    Processing text_left with transform: 100%|██████████████████████████████████████████| 44/44 [00:00<00:00, 44097.82it/s]\n    Processing text_right with transform: 100%|█████████████████████████████████████████| 49/49 [00:00<00:00, 24423.16it/s]\n    Processing length_left with len: 100%|██████████████████████████████████████████████| 44/44 [00:00<00:00, 14678.23it/s]\n    Processing length_right with len: 100%|█████████████████████████████████████████████| 49/49 [00:00<00:00, 48910.26it/s]\n    Processing text_left with chain_transform of ChineseRemoveBlack => ChineseSimplified => ChineseEmotion => IsChinese => ChineseStopRemoval => ChineseTokenizeDemo => Tokenize => Lowercase => PuncRemoval: 100%|█| 30/30 [00:00<00:00, 166.77it/s]\n    Processing text_right with chain_transform of ChineseRemoveBlack => ChineseSimplified => ChineseEmotion => IsChinese => ChineseStopRemoval => ChineseTokenizeDemo => Tokenize => Lowercase => PuncRemoval: 100%|█| 30/30 [00:00<00:00, 184.16it/s]\n    Processing text_right with transform: 100%|█████████████████████████████████████████| 30/30 [00:00<00:00, 30124.28it/s]\n    Processing text_left with transform: 100%|███████████████████████████████████████████| 30/30 [00:00<00:00, 5000.16it/s]\n    Processing text_right with transform: 100%|█████████████████████████████████████████| 30/30 [00:00<00:00, 30030.82it/s]\n    Processing length_left with len: 100%|███████████████████████████████████████████████| 30/30 [00:00<00:00, 9986.44it/s]\n    Processing length_right with len: 100%|██████████████████████████████████████████████| 30/30 [00:00<00:00, 7513.98it/s]\n    \n\n## 生成训练数据\n\n\n```python\ntrainset = mz.dataloader.Dataset(\n    data_pack=train_pack_processed,\n    mode='pair',\n    num_dup=2,\n    num_neg=1\n)\ndevset = mz.dataloader.Dataset(\n    data_pack=dev_pack_processed\n)\n```\n\n## 生成管道\n\n\n```python\npadding_callback = mz.models.aNMM.get_default_padding_callback()\n\ntrainloader = mz.dataloader.DataLoader(\n    dataset=trainset,\n    stage='train',\n    callback=padding_callback,\n)\ndevloader = mz.dataloader.DataLoader(\n    dataset=devset,\n    stage='dev',\n    callback=padding_callback,\n)\n```\n\n## 定义模型\n\n\n```python\nmodel = mz.models.aNMM()\nmodel.params['task'] = ranking_task\nmodel.params[\"embedding_output_dim\"]=100\nmodel.params[\"embedding_input_dim\"]=preprocessor.context[\"embedding_input_dim\"]\nmodel.params['dropout_rate'] = 0.1\nmodel.build()\nprint(model)\n```\n\n    aNMM(\n      (embedding): Embedding(348, 100, padding_idx=0)\n      (matching): Matching()\n      (hidden_layers): Sequential(\n        (0): Sequential(\n          (0): Linear(in_features=200, out_features=100, bias=True)\n          (1): ReLU()\n        )\n        (1): Sequential(\n          (0): Linear(in_features=100, out_features=1, bias=True)\n          (1): ReLU()\n        )\n      )\n      (q_attention): Attention(\n        (linear): Linear(in_features=100, out_features=1, bias=False)\n      )\n      (dropout): Dropout(p=0.1, inplace=False)\n      (out): Linear(in_features=1, out_features=1, bias=True)\n    )\n    \n\n## 模型训练\n\n\n```python\noptimizer = torch.optim.Adam(model.parameters(), lr = 3e-4)\n\ntrainer = mz.trainers.Trainer(\n    model=model,\n    optimizer=optimizer,\n    trainloader=trainloader,\n    validloader=devloader,\n    validate_interval=None,\n    epochs=10\n)\n\ntrainer.run()\n```\n\n\n    HBox(children=(IntProgress(value=0, max=1), HTML(value='')))\n\n\n    [Iter-1 Loss-1.003]:\n      Validation: normalized_discounted_cumulative_gain@3(0.0): 0.4154 - normalized_discounted_cumulative_gain@5(0.0): 0.4154 - mean_average_precision(0.0): 0.4107\n    \n    \n\n\n    HBox(children=(IntProgress(value=0, max=1), HTML(value='')))\n\n\n    [Iter-2 Loss-1.003]:\n      Validation: normalized_discounted_cumulative_gain@3(0.0): 0.4154 - normalized_discounted_cumulative_gain@5(0.0): 0.4154 - mean_average_precision(0.0): 0.4107\n    \n    \n\n\n    HBox(children=(IntProgress(value=0, max=1), HTML(value='')))\n\n\n    [Iter-3 Loss-1.001]:\n      Validation: normalized_discounted_cumulative_gain@3(0.0): 0.4154 - normalized_discounted_cumulative_gain@5(0.0): 0.4154 - mean_average_precision(0.0): 0.4107\n    \n    \n\n\n    HBox(children=(IntProgress(value=0, max=1), HTML(value='')))\n\n\n    [Iter-4 Loss-1.002]:\n      Validation: normalized_discounted_cumulative_gain@3(0.0): 0.4154 - normalized_discounted_cumulative_gain@5(0.0): 0.4154 - mean_average_precision(0.0): 0.4107\n    \n    \n\n\n    HBox(children=(IntProgress(value=0, max=1), HTML(value='')))\n\n\n    [Iter-5 Loss-1.001]:\n      Validation: normalized_discounted_cumulative_gain@3(0.0): 0.4286 - normalized_discounted_cumulative_gain@5(0.0): 0.4286 - mean_average_precision(0.0): 0.4286\n    \n    \n\n\n    HBox(children=(IntProgress(value=0, max=1), HTML(value='')))\n\n\n    [Iter-6 Loss-1.001]:\n      Validation: normalized_discounted_cumulative_gain@3(0.0): 0.4286 - normalized_discounted_cumulative_gain@5(0.0): 0.4286 - mean_average_precision(0.0): 0.4286\n    \n    \n\n\n    HBox(children=(IntProgress(value=0, max=1), HTML(value='')))\n\n\n    [Iter-7 Loss-0.998]:\n      Validation: normalized_discounted_cumulative_gain@3(0.0): 0.4286 - normalized_discounted_cumulative_gain@5(0.0): 0.4286 - mean_average_precision(0.0): 0.4286\n    \n    \n\n\n    HBox(children=(IntProgress(value=0, max=1), HTML(value='')))\n\n\n    [Iter-8 Loss-1.000]:\n      Validation: normalized_discounted_cumulative_gain@3(0.0): 0.4286 - normalized_discounted_cumulative_gain@5(0.0): 0.4286 - mean_average_precision(0.0): 0.4286\n    \n    \n\n\n    HBox(children=(IntProgress(value=0, max=1), HTML(value='')))\n\n\n    [Iter-9 Loss-0.999]:\n      Validation: normalized_discounted_cumulative_gain@3(0.0): 0.4286 - normalized_discounted_cumulative_gain@5(0.0): 0.4286 - mean_average_precision(0.0): 0.4286\n    \n    \n\n\n    HBox(children=(IntProgress(value=0, max=1), HTML(value='')))\n\n\n    [Iter-10 Loss-0.999]:\n      Validation: normalized_discounted_cumulative_gain@3(0.0): 0.4286 - normalized_discounted_cumulative_gain@5(0.0): 0.4286 - mean_average_precision(0.0): 0.4286\n    \n    Cost time: 3.331088066101074s\n    \n\n# Install\n\n由于mzcn是依赖于matchzoo-py模型，所以一共有两种途径安装mzcn\n\n### Install MatchZoo-py from Pypi:\npip install mzcn\n\n### Install MatchZoo-py from the Github source:\n\ngit clone https://github.com/yingdajun/mzcn.git\n<br>\ncd mzcn\n<br>\npython setup.py install\n\n# Citation\n\n本人是第一次写库包，水平有限，希望能给大家带来使用的帮助，如果有不足的地方请多指教\n这里是所有引用过的库包\n\n## matchzoo-py\n\n@inproceedings{Guo:2019:MLP:3331184.3331403,\n author = {Guo, Jiafeng and Fan, Yixing and Ji, Xiang and Cheng, Xueqi},\n title = {MatchZoo: A Learning, Practicing, and Developing System for Neural Text Matching},\n booktitle = {Proceedings of the 42Nd International ACM SIGIR Conference on Research and Development in Information Retrieval},\n series = {SIGIR'19},\n year = {2019},\n isbn = {978-1-4503-6172-9},\n location = {Paris, France},\n pages = {1297--1300},\n numpages = {4},\n url = {http://doi.acm.org/10.1145/3331184.3331403},\n doi = {10.1145/3331184.3331403},\n acmid = {3331403},\n publisher = {ACM},\n address = {New York, NY, USA},\n keywords = {matchzoo, neural network, text matching},\n} \n\n## CSDN的作者：SK-Berry的博文\n\nhttps://blog.csdn.net/sk_berry/article/details/104984599\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/yingdajun/mzcn/",
    "keywords": "text matching models",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mzcn",
    "package_url": "https://pypi.org/project/mzcn/",
    "platform": "",
    "project_url": "https://pypi.org/project/mzcn/",
    "project_urls": {
      "Homepage": "https://github.com/yingdajun/mzcn/"
    },
    "release_url": "https://pypi.org/project/mzcn/1.0.8/",
    "requires_dist": [
      "torch (>=1.5.0)",
      "pytorch-transformers (>=1.1.0)",
      "nltk (>=3.4.3)",
      "numpy (>=1.16.4)",
      "tqdm (==4.38.0)",
      "dill (>=0.2.9)",
      "pandas (>=1.3.1)",
      "networkx (>=2.3)",
      "h5py (>=2.9.0)",
      "hyperopt (==0.1.2)",
      "jieba (>=0.39)",
      "opencc (==1.1.1)",
      "coverage (>=4.5.3) ; extra == 'tests'",
      "codecov (>=2.0.15) ; extra == 'tests'",
      "pytest (>=4.6.3) ; extra == 'tests'",
      "pytest-cov (>=2.7.1) ; extra == 'tests'",
      "flake8 (>=3.7.7) ; extra == 'tests'",
      "flake8-docstrings (>=1.3.0) ; extra == 'tests'"
    ],
    "requires_python": "",
    "summary": "matchzoo-py的中文语料改造版本，更合适搭建中文语料的深度学习匹配模型",
    "version": "1.0.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11306615,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e1679148e3598dcb54790cfaa853861e0026ac22bf915685c1520a71a1439c2e",
          "md5": "af8450e8c2731ef8fc841589bf08a35b",
          "sha256": "5ce38a8ad88ae8651ce4e3ce9baf818901570d48a24fdb0e9cbeed7879971ef5"
        },
        "downloads": -1,
        "filename": "mzcn-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "af8450e8c2731ef8fc841589bf08a35b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 149302,
        "upload_time": "2021-08-22T01:16:44",
        "upload_time_iso_8601": "2021-08-22T01:16:44.996135Z",
        "url": "https://files.pythonhosted.org/packages/e1/67/9148e3598dcb54790cfaa853861e0026ac22bf915685c1520a71a1439c2e/mzcn-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e0c198aa09f8b11984ccf80b898742fda780477843f1da14faf29b4d1a409265",
          "md5": "321027025f66e3c62406cea2c58fbbe9",
          "sha256": "936c5a4792ca174ab344bbfaaa845d817292ee21b602a9677fa0ad6297145757"
        },
        "downloads": -1,
        "filename": "mzcn-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "321027025f66e3c62406cea2c58fbbe9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 88135,
        "upload_time": "2021-08-22T01:16:46",
        "upload_time_iso_8601": "2021-08-22T01:16:46.924678Z",
        "url": "https://files.pythonhosted.org/packages/e0/c1/98aa09f8b11984ccf80b898742fda780477843f1da14faf29b4d1a409265/mzcn-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9bdbecf945b5cbefb51fd77cde7e478ccbb04f421794c19aa81fd644b53b3268",
          "md5": "281b0a1b6187ff60d500439fce6d2374",
          "sha256": "ff28ddaa7d68744c02646878eed827f6e2ce497030967be7deebb8702329f0f9"
        },
        "downloads": -1,
        "filename": "mzcn-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "281b0a1b6187ff60d500439fce6d2374",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 149330,
        "upload_time": "2021-08-22T01:30:19",
        "upload_time_iso_8601": "2021-08-22T01:30:19.718164Z",
        "url": "https://files.pythonhosted.org/packages/9b/db/ecf945b5cbefb51fd77cde7e478ccbb04f421794c19aa81fd644b53b3268/mzcn-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "caa244fccbc72b65282d3f029145f0607db0ee0fd65d1fe21f59b301633de819",
          "md5": "32eac4911f9af3eb6b6ee51eef583bb1",
          "sha256": "e24b965fb3acaffafe5979dd302dcf7fb8ca7f6a7831c496888fd865b67f6f7f"
        },
        "downloads": -1,
        "filename": "mzcn-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "32eac4911f9af3eb6b6ee51eef583bb1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 88153,
        "upload_time": "2021-08-22T01:30:21",
        "upload_time_iso_8601": "2021-08-22T01:30:21.785947Z",
        "url": "https://files.pythonhosted.org/packages/ca/a2/44fccbc72b65282d3f029145f0607db0ee0fd65d1fe21f59b301633de819/mzcn-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "84efd550e51261fd8e288b07e737b3bfb0e498663400bbfc3a84c9fb0b222493",
          "md5": "660bafe42e47facfcbdd73cdcda3aa38",
          "sha256": "6e7ce339e045e243e0c4526bfac70722dbbcc41401b153e6734f5351af87b34e"
        },
        "downloads": -1,
        "filename": "mzcn-1.0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "660bafe42e47facfcbdd73cdcda3aa38",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 146171,
        "upload_time": "2021-08-22T02:52:07",
        "upload_time_iso_8601": "2021-08-22T02:52:07.147618Z",
        "url": "https://files.pythonhosted.org/packages/84/ef/d550e51261fd8e288b07e737b3bfb0e498663400bbfc3a84c9fb0b222493/mzcn-1.0.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2c08e989c224f36d67bb79b85b8b36d99eb76e8eb25bdbe823a02aa06fa33314",
          "md5": "d6619d493cb8ee8a7c9a620f45de3c5a",
          "sha256": "6f276fc8e36304701b6217c1e3086b206ea193fe2469633b903bdb99285c28be"
        },
        "downloads": -1,
        "filename": "mzcn-1.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d6619d493cb8ee8a7c9a620f45de3c5a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 147917,
        "upload_time": "2021-08-29T11:18:15",
        "upload_time_iso_8601": "2021-08-29T11:18:15.266817Z",
        "url": "https://files.pythonhosted.org/packages/2c/08/e989c224f36d67bb79b85b8b36d99eb76e8eb25bdbe823a02aa06fa33314/mzcn-1.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f9c690b9f3f62547fa21f83799f9e5b722429d2b808ef6541e2d83f532c092f",
          "md5": "c2ac13ac87aae1a5b1a251a85f5e782d",
          "sha256": "5a1eb8d1c071368f629ac5dc66d07bed091e1067173c60c2081e0dfe5b161253"
        },
        "downloads": -1,
        "filename": "mzcn-1.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c2ac13ac87aae1a5b1a251a85f5e782d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 147914,
        "upload_time": "2021-08-29T11:41:27",
        "upload_time_iso_8601": "2021-08-29T11:41:27.296263Z",
        "url": "https://files.pythonhosted.org/packages/0f/9c/690b9f3f62547fa21f83799f9e5b722429d2b808ef6541e2d83f532c092f/mzcn-1.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eeeb1f67c320e9ed198b4af0f6185b44be5f6a3bec8fdcc2988ec460c49c39a6",
          "md5": "9324bbae2195bf7132c77614e4dc2c46",
          "sha256": "caec35ea0ccfbe2ff09b0602cae7f722797a66ba83674a36be39ba76635bdc43"
        },
        "downloads": -1,
        "filename": "mzcn-1.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9324bbae2195bf7132c77614e4dc2c46",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 147915,
        "upload_time": "2021-08-29T11:47:47",
        "upload_time_iso_8601": "2021-08-29T11:47:47.401454Z",
        "url": "https://files.pythonhosted.org/packages/ee/eb/1f67c320e9ed198b4af0f6185b44be5f6a3bec8fdcc2988ec460c49c39a6/mzcn-1.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "91a24e658f2b09bdf3238bbc8c539c1b0a606709a2ec0d4446518220123fb54a",
          "md5": "116f7217611cfe4f8f71f13de3e46e62",
          "sha256": "5b32ff0811186ea43af3da78f5bc9c71ac480e2b6b71421b1c9b77fa74271192"
        },
        "downloads": -1,
        "filename": "mzcn-1.0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "116f7217611cfe4f8f71f13de3e46e62",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 147792,
        "upload_time": "2021-08-29T11:58:52",
        "upload_time_iso_8601": "2021-08-29T11:58:52.693354Z",
        "url": "https://files.pythonhosted.org/packages/91/a2/4e658f2b09bdf3238bbc8c539c1b0a606709a2ec0d4446518220123fb54a/mzcn-1.0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "91a24e658f2b09bdf3238bbc8c539c1b0a606709a2ec0d4446518220123fb54a",
        "md5": "116f7217611cfe4f8f71f13de3e46e62",
        "sha256": "5b32ff0811186ea43af3da78f5bc9c71ac480e2b6b71421b1c9b77fa74271192"
      },
      "downloads": -1,
      "filename": "mzcn-1.0.8-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "116f7217611cfe4f8f71f13de3e46e62",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 147792,
      "upload_time": "2021-08-29T11:58:52",
      "upload_time_iso_8601": "2021-08-29T11:58:52.693354Z",
      "url": "https://files.pythonhosted.org/packages/91/a2/4e658f2b09bdf3238bbc8c539c1b0a606709a2ec0d4446518220123fb54a/mzcn-1.0.8-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}