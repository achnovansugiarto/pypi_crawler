{
  "info": {
    "author": "Daniel Korat",
    "author_email": "dkorat@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# 3D Neural Network for Lung Cancer Risk Prediction on CT Volumes\n\n## Overview\n\nThis repository contains my implementation of the \"full-volume\" model from the paper:  \n\n[End-to-end lung cancer screening with three-dimensional deep learning on low-dose chest computed tomography.](https://doi.org/10.1038/s41591-019-0447-x)<br/> Ardila, D., Kiraly, A.P., Bharadwaj, S. et al. Nat Med 25, 954–961 (2019).\n\n![Model Workflow](https://raw.githubusercontent.com/danielkorat/Lung-Cancer-Risk-Prediction/master/figures/model_workflow.png)\n\nThe model uses a three-dimensional (3D) CNN to perform end-to-end analysis of whole-CT volumes, using LDCT\nvolumes with pathology-confirmed cancer as training data.\nThe CNN architecture is an Inflated 3D ConvNet (I3D) ([Carreira and\nZisserman](http://openaccess.thecvf.com/content_cvpr_2017/html/Carreira_Quo_Vadis_Action_CVPR_2017_paper.html)).\n\n### Data\n\nWe use the NLST dataset which contains chest LDCT volumes with pathology-confirmed cancer evaluations. For description and access to the dataset refer to the [NCI website](https://biometry.nci.nih.gov/cdas/learn/nlst/images/).\n\n![Example cases](https://raw.githubusercontent.com/danielkorat/Lung-Cancer-Risk-Prediction/master/figures/example_cases.png)\n\n### Setup\n\n```bash\npip install lungs\n```\n\n### Running the code\n\n#### Inference\n\n```python\nimport lungs\nlungs.predict('path/to/data')\n```\n\nFrom command line (with preprocessed data):\n\n```bash\npython main.py --preprocessed --input path/to/preprocessed/data\n```\n\n#### Training\n\nThe inputs to the training procedure are training and validation `.list` files containing coupled data - a volume path and its label in each row.\nThese `.list` files need to be generated beforehand using `preprocess.py`, as described in the next section.\n\n```python\nimport lungs\n# train with default hyperparameters\nlungs.train(train='path/to/train.list', val='path/to/val.list')\n```\n\nThe `main.py` module contains training (fine-tuning) and inference procedures.\nThe inputs are preprocessed CT volumes, as produced by `preprocess.py`.\nFor usage example, refer to the arguments' description and default values in the bottom of `main.py`.\n\n### Data Preprocessing\n\n#### Preprocess volumes\n\nEach CT volume in NLST is a **directory** of DICOM files (each `.dcm` file is one slice of the CT).\nThe `preprocess.py` module accepts a directory `path/to/data` containing **multiple** such directories (volumes).\nIt performs several preprocessing steps, and writes each preprocessed volume as an `.npz` file in `path/to/data_preprocssed`.\nThese steps are based on [this](https://www.kaggle.com/gzuidhof/full-preprocessing-tutorial/notebook) tutorial, and include:\n\n- Resampling to a 1.5mm voxel size (slow)\n- Coarse lung segmentation – used to compute lung center for alignment and reduction of problem space\n\nTo save storage space, the following preprocessing steps are performed online (during training/inference):\n\n- Windowing – clip pixel values to focus on lung volume\n- RGB normalization\n\nExample usage:\n\n```python\nfrom lungs import preprocess\n# Step 1: Preprocess all volumes, will save them to '/path/to/dataset_preprocessed'\npreprocess.preprocess_all('/path/to/dataset')\n```\n\n#### Create train/val `.list` files\n\nOnce the preprocessed data is ready, the next step is to split it randomly into train/val sets,\nand save each set as a `.list` file of paths/labels, required for the training procedure.\n\nExample usage:\n\n```python\nfrom lungs import preprocess\n# Step 2: Split preprocessed data into train/val coupled `.list` files\npreprocess.split(positives='/path/to/dataset_preprocessed/positives',\n                 negatives='/path/to/dataset_preprocessed/negatives',\n                 lists_dir='/path/to/write/lists',\n                 split_ratio=0.7)\n```\n\n### Provided checkpoint\n\nBy default, if the `ckpt` argument is not given, the model is initialized using our best fine-tuned checkpoint.\nDue to limited storage and compute time, our checkpoint was trained on a small subset of NLST containing 1,045 volumes (34% positive).\n\n**Note that in order to obtain a general purpose prediction model, one would have to train on the full NLST dataset. Steps include:**\n\n- Gainng access to the [NLST dataset](https://biometry.nci.nih.gov/cdas/learn/nlst/images/)\n- Downloading ~6TB of positive and negative volumes (requires storage and a few days for downloading)\n- Preprocessing (see Data Preprocessing section above)\n- Training (requires a capable GPU)\n\nEven though we used a samll subset of NLST, we still achieved a state-of-the-art AUC score of 0.892 on a validation set of 448 volumes.\nThis is comparable to the original paper's AUC for the full-volume model (see the paper's supplemtary material), trained on 47,974 volumes (1.34% positive).  \n\nTo train this model we first initialized by bootstrapping the filters from the [ImageNet pre-trained 2D Inception-v1 model]((http://download.tensorflow.org/models/inception_v1_2016_08_28.tar.gz)) into 3D, as described in the I3D paper.\nIt was then fine-tuned on the preprocessed CT volumes to predict cancer within 1 year (binary classification). Each of these volumes was a large region cropped around the center of the bounding box, as determined by lung segmentation in the preprocessing step.\n\nFor the training setup, we set the dropout keep_prob to 0.7, and trained in mini-batches of size of 2 (due to limited GPU memory). We used `tf.train.AdamOptimizer` with a small learning rate of 5e-5, (due to the small batch size) and stopped the training before overfitting started around epoch 37.\nThe focal loss function from the paper is provided in the code, but we did not experience improved results using it, compared to cross-entropy loss which was used instead. The likely reason is that our dataset was more balanced than the original paper's.\n\nThe follwoing plots show loss, AUC, and accuracy progression during training, along with ROC curves for selected epochs:\n\n<img src=\"https://raw.githubusercontent.com/danielkorat/Lung-Cancer-Risk-Prediction/master/figures/loss.png\" width=\"786\" height=\"420\">\n<img src=\"https://raw.githubusercontent.com/danielkorat/Lung-Cancer-Risk-Prediction/master/figures/auc_and_accuracy.png\" width=\"786\" height=\"420\">\n\n<img src=\"https://raw.githubusercontent.com/danielkorat/Lung-Cancer-Risk-Prediction/master/figures/epoch_10.png\" width=\"270\" height=\"270\"><img src=\"https://raw.githubusercontent.com/danielkorat/Lung-Cancer-Risk-Prediction/master/figures/epoch_20.png\" width=\"270\" height=\"270\"><img src=\"https://raw.githubusercontent.com/danielkorat/Lung-Cancer-Risk-Prediction/master/figures/epoch_32.png\" width=\"270\" height=\"270\">\n\n### Acknowledgments\n\nThe author thanks the National Cancer Institute for access to NCI's data collected by the National Screening Trial (NLST).\nThe statements contained herein are solely those of the author and do not represent or imply concurrence or endorsement by NCI.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/danielkorat/Lung-Cancer-Risk-Prediction",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lungs",
    "package_url": "https://pypi.org/project/lungs/",
    "platform": "",
    "project_url": "https://pypi.org/project/lungs/",
    "project_urls": {
      "Homepage": "https://github.com/danielkorat/Lung-Cancer-Risk-Prediction"
    },
    "release_url": "https://pypi.org/project/lungs/0.1.5/",
    "requires_dist": [
      "tensorflow-gpu (==1.14.0)",
      "tensorflow-probability (==0.7.0)",
      "dm-sonnet (==1.34)",
      "tqdm",
      "scipy (==1.4.1)",
      "pydicom (==1.4.2)",
      "scikit-learn (==0.23.1)",
      "scikit-image (==0.16.2)",
      "matplotlib",
      "scikit-plot (==0.3.7)",
      "seaborn (==0.10.1)",
      "gdown (==3.11.1)"
    ],
    "requires_python": ">=3.6",
    "summary": "3D Neural Network for Lung Cancer Risk Prediction on CT Volumes",
    "version": "0.1.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7575196,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1ceccec96e277ce3705a3a133428b76e87d188c8819ee34dd65f83c81048f42e",
          "md5": "bacc742940af7e3a91b657a5aea5d9e0",
          "sha256": "d77f3256e2a588e4530ace5b7888ee5fc9bd6ae71e1aaccaf9bd705fb1963722"
        },
        "downloads": -1,
        "filename": "lungs-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bacc742940af7e3a91b657a5aea5d9e0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 33153,
        "upload_time": "2020-06-24T15:10:54",
        "upload_time_iso_8601": "2020-06-24T15:10:54.978402Z",
        "url": "https://files.pythonhosted.org/packages/1c/ec/cec96e277ce3705a3a133428b76e87d188c8819ee34dd65f83c81048f42e/lungs-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad478a25f9337ff868de95234d63be4b0bcf8b485d5e44ce03028afd07a7b0b6",
          "md5": "f85a5c8edb119e629f30cc5e7df2aa0f",
          "sha256": "61c123c11cdd87f4be314ae203fd077e317016797463cf6b4e2d83236b1197f7"
        },
        "downloads": -1,
        "filename": "lungs-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f85a5c8edb119e629f30cc5e7df2aa0f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 21743,
        "upload_time": "2020-06-24T15:10:57",
        "upload_time_iso_8601": "2020-06-24T15:10:57.278787Z",
        "url": "https://files.pythonhosted.org/packages/ad/47/8a25f9337ff868de95234d63be4b0bcf8b485d5e44ce03028afd07a7b0b6/lungs-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "559dec6d8cabbe7f3b9bb5960cf0139b4fae02f3cc2545a1bcd12788f320f279",
          "md5": "968f70180067072d6334862959059cd9",
          "sha256": "aac11049d3fafa705c800243c327603bb68344fe70b4aa49eb144eedf399fa7e"
        },
        "downloads": -1,
        "filename": "lungs-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "968f70180067072d6334862959059cd9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 33471,
        "upload_time": "2020-06-24T17:21:23",
        "upload_time_iso_8601": "2020-06-24T17:21:23.913699Z",
        "url": "https://files.pythonhosted.org/packages/55/9d/ec6d8cabbe7f3b9bb5960cf0139b4fae02f3cc2545a1bcd12788f320f279/lungs-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e8a2f17890b2499190e0e7a17339f74cc7e9c41f69a424a8be15e96410c4d4ae",
          "md5": "4913c4b74adaed65cccc5febdb9d5800",
          "sha256": "9a0bc4fede67e69bdbcf57ab858d722f64b0f109bd31940fa2e3f7c2b2cc56cf"
        },
        "downloads": -1,
        "filename": "lungs-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4913c4b74adaed65cccc5febdb9d5800",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 22030,
        "upload_time": "2020-06-24T17:21:25",
        "upload_time_iso_8601": "2020-06-24T17:21:25.654619Z",
        "url": "https://files.pythonhosted.org/packages/e8/a2/f17890b2499190e0e7a17339f74cc7e9c41f69a424a8be15e96410c4d4ae/lungs-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "30f893669e35a0d351029c65c41b88b3560dd7e351c7c9c8ec401504ef640727",
          "md5": "65e77bdf116e42d989714813bc97492d",
          "sha256": "6145249cbbf5a98400385e44de579ca006efc9f82a4819800d7f1b384238fa90"
        },
        "downloads": -1,
        "filename": "lungs-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "65e77bdf116e42d989714813bc97492d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 34058,
        "upload_time": "2020-06-25T08:44:47",
        "upload_time_iso_8601": "2020-06-25T08:44:47.214784Z",
        "url": "https://files.pythonhosted.org/packages/30/f8/93669e35a0d351029c65c41b88b3560dd7e351c7c9c8ec401504ef640727/lungs-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e23b7756128eef2a65bca88549812d7fd1fd949f624f189d6a6740eacdcc0b57",
          "md5": "83236149313a50ad3f2b508a0751643a",
          "sha256": "4acc8ec09cb088fd27f5e0918b0383d6e7ea30f89ea19a0a6e945f92ea4367b0"
        },
        "downloads": -1,
        "filename": "lungs-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "83236149313a50ad3f2b508a0751643a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 23113,
        "upload_time": "2020-06-25T08:44:50",
        "upload_time_iso_8601": "2020-06-25T08:44:50.092670Z",
        "url": "https://files.pythonhosted.org/packages/e2/3b/7756128eef2a65bca88549812d7fd1fd949f624f189d6a6740eacdcc0b57/lungs-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c0ede4dd8349ccd79e66bb47265d2ae739296780dd51c43842e09d9fb024e676",
          "md5": "9cc18f59737d3cfe707da7272751f3ab",
          "sha256": "177231249883ca37ad5446e09b66f075dfc90a37f731925bcde95286cf2642b9"
        },
        "downloads": -1,
        "filename": "lungs-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9cc18f59737d3cfe707da7272751f3ab",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 34070,
        "upload_time": "2020-06-25T09:02:51",
        "upload_time_iso_8601": "2020-06-25T09:02:51.763287Z",
        "url": "https://files.pythonhosted.org/packages/c0/ed/e4dd8349ccd79e66bb47265d2ae739296780dd51c43842e09d9fb024e676/lungs-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d834044b9f26d4328f15da668177fac35e5d78736af665261b8389ee7408c201",
          "md5": "ceb95b02d91c24fc2d46c6f28425d56d",
          "sha256": "153146013a67172e98382225dd0a9b5160747afbc383a68395c80c9fc54e7c0d"
        },
        "downloads": -1,
        "filename": "lungs-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "ceb95b02d91c24fc2d46c6f28425d56d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 23126,
        "upload_time": "2020-06-25T09:02:53",
        "upload_time_iso_8601": "2020-06-25T09:02:53.250784Z",
        "url": "https://files.pythonhosted.org/packages/d8/34/044b9f26d4328f15da668177fac35e5d78736af665261b8389ee7408c201/lungs-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9b2df757c5ea93cc68599de5b82c3e90bb21bbd37f30a6e2ec7258d7c8500865",
          "md5": "deca1776817c7cfd262f7d228312e46e",
          "sha256": "8266edda3593258c6d63ed763a5132e0729d9ef0b56b4300385e4a555b297409"
        },
        "downloads": -1,
        "filename": "lungs-0.1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "deca1776817c7cfd262f7d228312e46e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 33565,
        "upload_time": "2020-06-27T09:25:28",
        "upload_time_iso_8601": "2020-06-27T09:25:28.597181Z",
        "url": "https://files.pythonhosted.org/packages/9b/2d/f757c5ea93cc68599de5b82c3e90bb21bbd37f30a6e2ec7258d7c8500865/lungs-0.1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cfbc57d356f30accc9af7e093254f95236d7ae49c34f0c22e28c57e676ac8862",
          "md5": "6e32d509290ea04f2f07f28199000ff6",
          "sha256": "aaabd8d8642566744ffc35d2a504d1abb42e48d52cc4dfd93a854ba3b4591def"
        },
        "downloads": -1,
        "filename": "lungs-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "6e32d509290ea04f2f07f28199000ff6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 21962,
        "upload_time": "2020-06-27T09:25:29",
        "upload_time_iso_8601": "2020-06-27T09:25:29.919684Z",
        "url": "https://files.pythonhosted.org/packages/cf/bc/57d356f30accc9af7e093254f95236d7ae49c34f0c22e28c57e676ac8862/lungs-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9b2df757c5ea93cc68599de5b82c3e90bb21bbd37f30a6e2ec7258d7c8500865",
        "md5": "deca1776817c7cfd262f7d228312e46e",
        "sha256": "8266edda3593258c6d63ed763a5132e0729d9ef0b56b4300385e4a555b297409"
      },
      "downloads": -1,
      "filename": "lungs-0.1.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "deca1776817c7cfd262f7d228312e46e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 33565,
      "upload_time": "2020-06-27T09:25:28",
      "upload_time_iso_8601": "2020-06-27T09:25:28.597181Z",
      "url": "https://files.pythonhosted.org/packages/9b/2d/f757c5ea93cc68599de5b82c3e90bb21bbd37f30a6e2ec7258d7c8500865/lungs-0.1.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cfbc57d356f30accc9af7e093254f95236d7ae49c34f0c22e28c57e676ac8862",
        "md5": "6e32d509290ea04f2f07f28199000ff6",
        "sha256": "aaabd8d8642566744ffc35d2a504d1abb42e48d52cc4dfd93a854ba3b4591def"
      },
      "downloads": -1,
      "filename": "lungs-0.1.5.tar.gz",
      "has_sig": false,
      "md5_digest": "6e32d509290ea04f2f07f28199000ff6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 21962,
      "upload_time": "2020-06-27T09:25:29",
      "upload_time_iso_8601": "2020-06-27T09:25:29.919684Z",
      "url": "https://files.pythonhosted.org/packages/cf/bc/57d356f30accc9af7e093254f95236d7ae49c34f0c22e28c57e676ac8862/lungs-0.1.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}