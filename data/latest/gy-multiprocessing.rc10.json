{
  "info": {
    "author": "Guangyu He",
    "author_email": "me@heguangyu.net",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# gy-multiprocessing\n\n## Installation\n\n### via Github\n\n```bash\npip install git+https://github.com/guangyu-he/gy-multiprocessing\n```\n\n### via PyPI\n\n```bash\npip install gy-multiprocessing\n```\n\n## Usage\n\n- initializing multiprocessing/multithreading instance\n- adding your tasks into the pool, either using loop or sentences\n- running the instance\n\n## Note:\n\n- the multiprocessing must work in a function or entrance, do not use it barely in the script\n- make sure the code does require multiprocessing/multithreading, wrongly using the multiprocessing may even lose\n  performance\n- please attention to the queue implementation when using multiprocessing, details check the example below\n\n## Examples\n\n### Multi Processing\n\n```python\nimport gy_multiprocessing.multiprocessing.multi_process as gymp\nimport time\n\n\ndef your_func(a_string: int, queue):\n    # NOTE! you MUST add an argument for queue and use put() method to fetch the returning value\n\n    print(a_string)\n    if a_string % 5 == 0:\n        time.sleep(2)\n\n    # NOTE! if you are missing this method, there will be None result returned for current process\n    queue.put(a_string)\n\n\nif __name__ == '__main__':\n    # the multiprocessing must work in a function or entrance\n    # do not use it barely\n\n    \"\"\"\n    # initializing the multiprocessing instance\n    # the default max_process are your cpu max cores\n    # max_process could be infinite, but performance will get suffered when the hardware is overloaded\n    \"\"\"\n    mp = gymp.MultiProcess(max_process=8)\n\n    # example for multiprocessing in the loop\n    outer_loop_times = 5\n    for current_loop_index in range(outer_loop_times):\n        # your running arguments, must be tuple\n        args = (current_loop_index,)\n\n        \"\"\"\n        # adding tasks in multiprocessing pool\n        \"\"\"\n        mp.add(your_func, args)\n\n    # it is also possible to add task outside the loop\n    mp.add(your_func, (10,))\n\n    \"\"\"\n    # running tasks in multiprocessing pool (returned values are optional)\n    \"\"\"\n    result = mp.run()\n    print(result)\n```\n\n### Multi Threads\n\n```python\nimport gy_multiprocessing.multithreading.multi_thread as gymt\nimport time\n\n\ndef your_func(a_string):\n    # your single task function\n\n    print(a_string)\n    return a_string + \"!\"\n\n\nif __name__ == '__main__':\n    # the multithreading must work in a function or entrance\n    # do not use it barely\n\n    # timing (optional)\n    start = time.time()\n\n    \"\"\"\n    # initializing the multithreading instance\n    # the default max_threads are your cpu max cores number - 1\n    # max_threads can not larger than your cpu max core number\n    \"\"\"\n    mt = gymt.MultiThread(max_threads=4)\n\n    # example for multithreading in the loop\n    outer_loop_times = 5\n    for current_loop_index in range(outer_loop_times):\n        args = (str(current_loop_index),)\n\n        \"\"\"\n        # adding tasks in multi threading pool\n        \"\"\"\n        mt.add(your_func, args)\n\n    # it is also possible to work without loop\n    args = (str(1),)\n    mt.add(your_func, args)\n    args = (str(2),)\n    mt.add(your_func, args)\n\n    \"\"\"\n    # running tasks in multithreading pool (returned values are optional)\n    \"\"\"\n    results = mt.run()\n    print(results)\n\n    # timing (optional)\n    end = time.time() - start\n    print(\"done in {}s\".format(\"%.2f\" % end))\n```\n\n### Combined Structure\n\n<b>Note: you can not use multiprocessing or sub-multithreading in the multithreading method</b>\n\nIf you want to use such structure, based on your needs, considering using sub-multiprocessing or multithreading in\nmultiprocessing structure.\n\n```python\nimport gy_multiprocessing.multiprocessing.multi_process as gymp\nimport gy_multiprocessing.multithreading.multi_thread as gymt\n\n\ndef your_sub_func(b_string: int, queue=None):\n    # your function that needs to multithreading/multiprocessing\n\n    b_string += 1\n    if queue is not None:\n        queue.put(b_string)\n    return b_string\n\n\ndef your_mt_func(a_string: int, queue):\n    # multithreading in multiprocessing structure\n\n    mt = gymt.MultiThread()\n    for current_loop_index in range(a_string):\n        # your running arguments, must be tuple\n        args = (current_loop_index,)\n        mt.add(your_sub_func, args)\n    result = mt.run()\n\n    # Do not forget queue!\n    queue.put(result)\n\n\ndef your_mp_func(a_string: int, queue):\n    # sub-multiprocessing in multiprocessing structure\n\n    smp = gymp.MultiProcess()\n    for current_loop_index in range(a_string):\n        # your running arguments, must be tuple\n        args = (current_loop_index,)\n        smp.add(your_sub_func, args)\n    result = smp.run()\n\n    # Do not forget queue!\n    queue.put(result)\n\n\nif __name__ == '__main__':\n\n    mp = gymp.MultiProcess()\n\n    outer_loop_times = 10\n    for current_loop_index in range(outer_loop_times):\n        args = (current_loop_index,)\n        mp.add(your_mt_func, args)\n    print(mp.run())\n\n    print(\"\\n-----‚Äù\\n\")\n\n    mp = gymp.MultiProcess()\n\n    for current_loop_index in range(outer_loop_times):\n        args = (current_loop_index,)\n        mp.add(your_mp_func, args)\n    print(mp.run())\n```\n\n## Updates Log\n\n### v0.2.3\n\n#### bug fix\n\n- fixed an issue casing not adding new process to pool until all processed are done in current pool\n\nfeel free to check source code in <a href=\"https://github.com/guangyu-he/gy-multiprocessing\">GitHub</a>, you are welcome\nto leave any comments.\n\n### v0.2.4\n\n#### feature\n\n- a silent mode is added to multiprocessing which is possible not showing messages in console\n- solved multiprocessing not going to the end when there are internal error exceptions in input function\n- solved multiprocessing not going to the end when there are missing queue.put() method in input function\n\n#### improvement\n\n- simplified duplicated codes\n\n2022&copy;Guangyu He, for further support please contact author. <br>\nEmail: <a href=\"mailto:me@heguangyu.net\">me@heguangyu.net</a>\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/guangyu-he/gy-multiprocessing",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "gy-multiprocessing",
    "package_url": "https://pypi.org/project/gy-multiprocessing/",
    "platform": null,
    "project_url": "https://pypi.org/project/gy-multiprocessing/",
    "project_urls": {
      "Homepage": "https://github.com/guangyu-he/gy-multiprocessing"
    },
    "release_url": "https://pypi.org/project/gy-multiprocessing/0.2.4/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Run function in multiple processes",
    "version": "0.2.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16975298,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0d36ef2bb73fed24392c19b9a8a99bdb1e3538e6ed57120d0300a967619bc890",
          "md5": "9692f83bac8c4259f55f6d9393711622",
          "sha256": "99f998eb0202b514a56cf87fad6a7df0eec3ae6559ced26abf9e0177c3b55959"
        },
        "downloads": -1,
        "filename": "gy_multiprocessing-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9692f83bac8c4259f55f6d9393711622",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 3076,
        "upload_time": "2022-10-21T14:43:11",
        "upload_time_iso_8601": "2022-10-21T14:43:11.582397Z",
        "url": "https://files.pythonhosted.org/packages/0d/36/ef2bb73fed24392c19b9a8a99bdb1e3538e6ed57120d0300a967619bc890/gy_multiprocessing-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f1ef6464f5d01288ae0e6539b071824e76a5080eef270515239974a5c9992f3",
          "md5": "c70318b8215c5d5ff5a900be2283929a",
          "sha256": "05db240bc4cc46feefe9aa711d200b42f6866d40dcbe61af70ee6df5bfc1a0db"
        },
        "downloads": -1,
        "filename": "gy_multiprocessing-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c70318b8215c5d5ff5a900be2283929a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 3075,
        "upload_time": "2022-10-21T15:07:06",
        "upload_time_iso_8601": "2022-10-21T15:07:06.406302Z",
        "url": "https://files.pythonhosted.org/packages/1f/1e/f6464f5d01288ae0e6539b071824e76a5080eef270515239974a5c9992f3/gy_multiprocessing-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a040a5fe91fafcb70cee96b35e129560f9d208123e0f4944fbecc8960dae92b5",
          "md5": "4f15cd00b640aedd06e92b70b822d4e8",
          "sha256": "2658ae794e49c9a6d72900f31ec9d2534dfac11e434ffd3361594b1ba3c0f472"
        },
        "downloads": -1,
        "filename": "gy_multiprocessing-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4f15cd00b640aedd06e92b70b822d4e8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 3286,
        "upload_time": "2022-10-21T16:29:04",
        "upload_time_iso_8601": "2022-10-21T16:29:04.380531Z",
        "url": "https://files.pythonhosted.org/packages/a0/40/a5fe91fafcb70cee96b35e129560f9d208123e0f4944fbecc8960dae92b5/gy_multiprocessing-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f206c51fee07dc151e036cc0e2fc4d1fb63990221db3d3ce60251ff63cae162e",
          "md5": "5b952965111c481700a5eb82c37da2f1",
          "sha256": "a6c0e46ae8ddf246ff6e6085d0be7f126d6e8f9a0b68b91ecf7e2de47f9ff1c7"
        },
        "downloads": -1,
        "filename": "gy_multiprocessing-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5b952965111c481700a5eb82c37da2f1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 5026,
        "upload_time": "2022-10-24T10:41:23",
        "upload_time_iso_8601": "2022-10-24T10:41:23.703450Z",
        "url": "https://files.pythonhosted.org/packages/f2/06/c51fee07dc151e036cc0e2fc4d1fb63990221db3d3ce60251ff63cae162e/gy_multiprocessing-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f09b17b5e8b623f84ae7e012625fd211d3ff455202282304f10c6bb5ad6547b",
          "md5": "de2bb878843200663e051fb61d06b759",
          "sha256": "562e7f4fc14909abf9c64b3ac4110dc08218318fafefedc11a9aded5de3a84f2"
        },
        "downloads": -1,
        "filename": "gy_multiprocessing-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "de2bb878843200663e051fb61d06b759",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 5803,
        "upload_time": "2022-10-27T19:26:03",
        "upload_time_iso_8601": "2022-10-27T19:26:03.902836Z",
        "url": "https://files.pythonhosted.org/packages/0f/09/b17b5e8b623f84ae7e012625fd211d3ff455202282304f10c6bb5ad6547b/gy_multiprocessing-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "76ecc6e9ae8f19c05f3e590885d62937656cc52f9251ce4a1c6c84bc5a8fd813",
          "md5": "3d88053bff2cdd332d8fa1aa4d6630f3",
          "sha256": "4db22a104d700ea6d9370be4375e5379c0b91edcb2f96a667d924ea4ad0c36a6"
        },
        "downloads": -1,
        "filename": "gy_multiprocessing-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3d88053bff2cdd332d8fa1aa4d6630f3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 4858,
        "upload_time": "2022-11-09T13:51:11",
        "upload_time_iso_8601": "2022-11-09T13:51:11.647789Z",
        "url": "https://files.pythonhosted.org/packages/76/ec/c6e9ae8f19c05f3e590885d62937656cc52f9251ce4a1c6c84bc5a8fd813/gy_multiprocessing-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad69ecbb79f9edf114d81fb0f4ab3d4c0de07b4658ea414db567f47099b77ced",
          "md5": "369138bb24b0f81c89008eb9a8772729",
          "sha256": "7bf62b9c854dd7a55a7f957035e398fd584716aa3a50d78da6d75b6454bb8c6f"
        },
        "downloads": -1,
        "filename": "gy_multiprocessing-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "369138bb24b0f81c89008eb9a8772729",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 6143,
        "upload_time": "2022-11-09T14:21:00",
        "upload_time_iso_8601": "2022-11-09T14:21:00.419393Z",
        "url": "https://files.pythonhosted.org/packages/ad/69/ecbb79f9edf114d81fb0f4ab3d4c0de07b4658ea414db567f47099b77ced/gy_multiprocessing-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bb95541a185fa21050f9830eec758ef2589c28ed81477a73216e2fc10c493687",
          "md5": "f78d52fdcdaf72d4c8865d8168ca07f0",
          "sha256": "aa294d424115c7d59a370399ea15b95ed188a6da2f8a45615e4d88a65f30cbf6"
        },
        "downloads": -1,
        "filename": "gy_multiprocessing-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f78d52fdcdaf72d4c8865d8168ca07f0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 6198,
        "upload_time": "2022-11-11T14:06:08",
        "upload_time_iso_8601": "2022-11-11T14:06:08.184060Z",
        "url": "https://files.pythonhosted.org/packages/bb/95/541a185fa21050f9830eec758ef2589c28ed81477a73216e2fc10c493687/gy_multiprocessing-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82845bbdefbe0412847f2b2769671786fb91566fc2575b3151870b020208d7a3",
          "md5": "a661a03944280fe2704adc504841fb24",
          "sha256": "18b29a2eaa8072924f4c56fb7af623de6157739b523c7052997e9d55f1eee774"
        },
        "downloads": -1,
        "filename": "gy_multiprocessing-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "a661a03944280fe2704adc504841fb24",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 6319,
        "upload_time": "2022-11-14T10:05:10",
        "upload_time_iso_8601": "2022-11-14T10:05:10.511330Z",
        "url": "https://files.pythonhosted.org/packages/82/84/5bbdefbe0412847f2b2769671786fb91566fc2575b3151870b020208d7a3/gy_multiprocessing-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "310545c30864020f62894ca29dd7087334276bd1b4b579461f7bb7338d5c81ca",
          "md5": "0dc6605f98a37adad2d6c7242b4d022a",
          "sha256": "3e4c46c196bb8cf9267bc3113ca9debdff5d8d9304fcbfdae68efd0e7ced2030"
        },
        "downloads": -1,
        "filename": "gy_multiprocessing-0.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "0dc6605f98a37adad2d6c7242b4d022a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 7076,
        "upload_time": "2023-02-22T11:56:09",
        "upload_time_iso_8601": "2023-02-22T11:56:09.894868Z",
        "url": "https://files.pythonhosted.org/packages/31/05/45c30864020f62894ca29dd7087334276bd1b4b579461f7bb7338d5c81ca/gy_multiprocessing-0.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "310545c30864020f62894ca29dd7087334276bd1b4b579461f7bb7338d5c81ca",
        "md5": "0dc6605f98a37adad2d6c7242b4d022a",
        "sha256": "3e4c46c196bb8cf9267bc3113ca9debdff5d8d9304fcbfdae68efd0e7ced2030"
      },
      "downloads": -1,
      "filename": "gy_multiprocessing-0.2.4.tar.gz",
      "has_sig": false,
      "md5_digest": "0dc6605f98a37adad2d6c7242b4d022a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 7076,
      "upload_time": "2023-02-22T11:56:09",
      "upload_time_iso_8601": "2023-02-22T11:56:09.894868Z",
      "url": "https://files.pythonhosted.org/packages/31/05/45c30864020f62894ca29dd7087334276bd1b4b579461f7bb7338d5c81ca/gy_multiprocessing-0.2.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}