{
  "info": {
    "author": "Samuel López Saura",
    "author_email": "samuellopezsaura@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Awesome Messages Generic PubSub\n\nGeneric Message Listeners and Publishers.\n\nThis module provides interfaces to work with any kind of message\npublisher and consumer.\n\nThis module also provides currently the following implementations:\n\n- RabbitMQ Message Listener\n- RabbbitMQ Message Publisher\n\n\n![Project logo](assets/logo.png)\n\nCurrently only rabbitmq support is implemented but in a future other\ninfrastructure pieces could be supported too.\n\nThe infrastructure of this package rely on abstractions so it is highly\ndecoupled. Apps code should depend only in `MessageHandler`,\n`MessagePublisher` and `MessageListener`.\n\n\n## Installation\n\n`pip install awesome_messages`\n\n\n## Create a MessageHandler to handle the received messages\n\n```python\nfrom awesome_messages.domain.handler import MessageHandler\n\n\nclass PrintRequestHandler(MessageHandler):\n    def on_msg(self, message: dict):\n        print(message)\n\n```\n\n## Configure a listener\n\nI'm using here the RabbitMQ listener implementation.\n\nYou can write your custom listener using `MessageListener` interface.\nif you write your own listener please make a pull request so that the\nrest of the community can use it too.\n\n```python\n# Import infrastructure specific listener\nfrom awesome_messages.infra.rabbitmq.listener import RabbitMessageListener\n\n\nconnection_string = \"amqps://user:password@host/..\"\nqueue = \"my_awesome_queue\"\n\n# Declare our listener with our previously defined MessageHandler\nmsg_listener = RabbitMessageListener(\n    connection_string, queue, PrintRequestHandler()\n)\n\n# Currently RabbitMQ listener is blocking\ntry:\n    msg_listener.start_listening()\nfinally:\n    msg_listener.stop_listening()\n```\n\n## Configure a publisher\n\nI'm using here the RabbitMQ publisher implementation.\n\nYou can write your custom publisher using `MessagePublisher` interface.\nif you write your own publisher please make a pull request so that the\nrest of the community can use it too.\n\n```python\n# Import infrastructure specific publisher\nfrom awesome_messages.infra.rabbitmq.publisher import RabbitMessagePublisher\n\n\nmsg_publisher = RabbitMessagePublisher(connection_string, queue)\ntry:\n    # Publish a message\n    msg_publisher.publish({\"my msg\": \"my msg data\"})\nfinally:\n    msg_publisher.stop_publishing()\n\n```\n\n## Author notes\nThe way this module is structured allows anyone to easily replace one\nimplementation by another without changing the rest of the application\ncode.\n\nThis module invites the developer to use dependency injection to build\ntheir app. Relying on defined interfaces rather than implementations\nallows changes in dependencies be possible without changing the code.\n\n### Best practices in big projects\n\nYou can use a dependency injection library for configure your message\nhandler, listener and publisher like the following one.\n\n- https://python-dependency-injector.ets-labs.org/\n\n## Support my work\n\nIf this module has been useful to you, it would mean a lot to me if you could support my work.\nThis way you help to keep this and other projects alive.\n\n- https://ko-fi.com/elchicodepython\n\n## Contributors\n\n- Samuel López Saura - [Linkedin Contact](https://es.linkedin.com/in/sam-sec)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/elchicodepython/python_awesome_messages",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "awesome-messages",
    "package_url": "https://pypi.org/project/awesome-messages/",
    "platform": null,
    "project_url": "https://pypi.org/project/awesome-messages/",
    "project_urls": {
      "Homepage": "https://github.com/elchicodepython/python_awesome_messages"
    },
    "release_url": "https://pypi.org/project/awesome-messages/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "This module provides interfaces to work with any kind of message publisher and consumer like rabbitmq pubsub.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15194865,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6d3512b4830e6edf4ab37e1287beb4b61b960e7dc04735a082d6c8fd6d89cfc",
          "md5": "db941685d038982301633a471c5264f4",
          "sha256": "534c2e3254cd505cbb5859bb676f720fb62b5824aec8f754d1b13a68dea7a7b7"
        },
        "downloads": -1,
        "filename": "awesome_messages-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "db941685d038982301633a471c5264f4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4336,
        "upload_time": "2022-06-15T11:45:44",
        "upload_time_iso_8601": "2022-06-15T11:45:44.144056Z",
        "url": "https://files.pythonhosted.org/packages/a6/d3/512b4830e6edf4ab37e1287beb4b61b960e7dc04735a082d6c8fd6d89cfc/awesome_messages-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0125a3fbb2d8d11a3655e31e8ee9129147aa4f085ab2712cfc3c851af20969a3",
          "md5": "9e9619c9b284279d1134b403741a5b7f",
          "sha256": "b82297bc7aee342e5c460a92929b04c5f6abb85c0bbe26ec0845de80aef27838"
        },
        "downloads": -1,
        "filename": "awesome_messages-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9e9619c9b284279d1134b403741a5b7f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4452,
        "upload_time": "2022-09-23T22:26:19",
        "upload_time_iso_8601": "2022-09-23T22:26:19.303094Z",
        "url": "https://files.pythonhosted.org/packages/01/25/a3fbb2d8d11a3655e31e8ee9129147aa4f085ab2712cfc3c851af20969a3/awesome_messages-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0125a3fbb2d8d11a3655e31e8ee9129147aa4f085ab2712cfc3c851af20969a3",
        "md5": "9e9619c9b284279d1134b403741a5b7f",
        "sha256": "b82297bc7aee342e5c460a92929b04c5f6abb85c0bbe26ec0845de80aef27838"
      },
      "downloads": -1,
      "filename": "awesome_messages-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "9e9619c9b284279d1134b403741a5b7f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4452,
      "upload_time": "2022-09-23T22:26:19",
      "upload_time_iso_8601": "2022-09-23T22:26:19.303094Z",
      "url": "https://files.pythonhosted.org/packages/01/25/a3fbb2d8d11a3655e31e8ee9129147aa4f085ab2712cfc3c851af20969a3/awesome_messages-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}