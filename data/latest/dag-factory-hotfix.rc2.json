{
  "info": {
    "author": "Adam Boscarino",
    "author_email": "adam@boscarino.me",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "\n# dag-factory\n\n[![Github Actions](https://github.com/ajbosco/dag-factory/workflows/build/badge.svg?branch=master&event=push)](https://github.com/ajbosco/dag-factory/actions?workflow=build)\n[![Coverage](https://codecov.io/github/ajbosco/dag-factory/coverage.svg?branch=master)](https://codecov.io/github/ajbosco/dag-factory?branch=master)\n[![PyPi](https://img.shields.io/pypi/v/dag-factory.svg)](https://pypi.org/project/dag-factory/)\n[![Code Style](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black)\n[![Downloads](https://pepy.tech/badge/dag-factory)](https://pepy.tech/project/dag-factory)\n\n*dag-factory* is a library for dynamically generating [Apache Airflow](https://github.com/apache/incubator-airflow) DAGs from YAML configuration files.\n- [Installation](#installation)\n- [Usage](#usage)\n- [Benefits](#benefits)\n- [Contributing](#contributing)\n\n## Installation\n\nTo install *dag-factory* run `pip install dag-factory`. It requires Python 3.6.0+ and Apache Airflow 1.10+.\n\n## Usage\n\nAfter installing *dag-factory* in your Airflow environment, there are two steps to creating DAGs. First, we need to create a YAML configuration file. For example:\n\n```yaml\nexample_dag1:\n  default_args:\n    owner: 'example_owner'\n    start_date: 2018-01-01  # or '2 days'\n    end_date: 2018-01-05\n    retries: 1\n    retry_delay_sec: 300\n  schedule_interval: '0 3 * * *'\n  concurrency: 1\n  max_active_runs: 1\n  dagrun_timeout_sec: 60\n  default_view: 'tree'  # or 'graph', 'duration', 'gantt', 'landing_times'\n  orientation: 'LR'  # or 'TB', 'RL', 'BT'\n  description: 'this is an example dag!'\n  on_success_callback_name: print_hello\n  on_success_callback_file: /usr/local/airflow/dags/print_hello.py\n  on_failure_callback_name: print_hello\n  on_failure_callback_file: /usr/local/airflow/dags/print_hello.py\n  tasks:\n    task_1:\n      operator: airflow.operators.bash_operator.BashOperator\n      bash_command: 'echo 1'\n    task_2:\n      operator: airflow.operators.bash_operator.BashOperator\n      bash_command: 'echo 2'\n      dependencies: [task_1]\n    task_3:\n      operator: airflow.operators.bash_operator.BashOperator\n      bash_command: 'echo 3'\n      dependencies: [task_1]\n```\n\nThen in the DAGs folder in your Airflow environment you need to create a python file like this:\n\n```python\nfrom airflow import DAG\nimport dagfactory\n\ndag_factory = dagfactory.DagFactory(\"/path/to/dags/config_file.yml\")\n\ndag_factory.clean_dags(globals())\ndag_factory.generate_dags(globals())\n```\n\nAnd this DAG will be generated and ready to run in Airflow!\n\n![screenshot](/img/example_dag.png)\n\n## Notes\n\n### HttpSensor (since 0.10.0)\n\nThe package `airflow.sensors.http_sensor` works with all supported versions of Airflow. In Airflow 2.0+, the new package name can be used in the operator value: `airflow.providers.http.sensors.http`\n\nThe following example shows `response_check` logic in a python file:\n\n```yaml\ntask_2:\n      operator: airflow.sensors.http_sensor.HttpSensor\n      http_conn_id: 'test-http'\n      method: 'GET'\n      response_check_name: check_sensor\n      response_check_file: /path/to/example1/http_conn.py\n      dependencies: [task_1]\n```\n\nThe `response_check` logic can also be provided as a lambda:\n\n```yaml\ntask_2:\n      operator: airflow.sensors.http_sensor.HttpSensor\n      http_conn_id: 'test-http'\n      method: 'GET'\n      response_check_lambda: 'lambda response: \"ok\" in reponse.text'\n      dependencies: [task_1]\n```\n\n## Benefits\n\n* Construct DAGs without knowing Python\n* Construct DAGs without learning Airflow primitives\n* Avoid duplicative code\n* Everyone loves YAML! ;)\n\n## Contributing\n\nContributions are welcome! Just submit a Pull Request or Github Issue.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ajbosco/dag-factory",
    "keywords": "airflow",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dag-factory-hotfix",
    "package_url": "https://pypi.org/project/dag-factory-hotfix/",
    "platform": "",
    "project_url": "https://pypi.org/project/dag-factory-hotfix/",
    "project_urls": {
      "Homepage": "https://github.com/ajbosco/dag-factory"
    },
    "release_url": "https://pypi.org/project/dag-factory-hotfix/0.11.1/",
    "requires_dist": [
      "apache-airflow[http,kubernetes] (>=1.10.0)",
      "pyyaml",
      "packaging",
      "black ; extra == 'dev'",
      "pytest ; extra == 'dev'",
      "pylint ; extra == 'dev'",
      "pytest-cov ; extra == 'dev'",
      "tox ; extra == 'dev'"
    ],
    "requires_python": ">=3.6.0",
    "summary": "Dynamically build Airflow DAGs from YAML files",
    "version": "0.11.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12357615,
  "releases": {
    "0.11.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1a87d21887e696e26317c66d62fc96596473bbc183618d471d077e59d9bcd541",
          "md5": "a407bdc6679abee3aaf3540929eb517a",
          "sha256": "893c5bbfb2bbefae315abd124bed0153329e323a1d7072e52c970311ac784002"
        },
        "downloads": -1,
        "filename": "dag_factory_hotfix-0.11.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a407bdc6679abee3aaf3540929eb517a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 12831,
        "upload_time": "2021-12-01T11:22:48",
        "upload_time_iso_8601": "2021-12-01T11:22:48.634267Z",
        "url": "https://files.pythonhosted.org/packages/1a/87/d21887e696e26317c66d62fc96596473bbc183618d471d077e59d9bcd541/dag_factory_hotfix-0.11.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "85f3bfda4ce3b7a6b220893b9cb54dc878ebbf4d5d10b28fa7a988ebd6bb034d",
          "md5": "a7f5384064648c496123f7be618605ee",
          "sha256": "de8776e0cddca3d272c8420d79ce60fcd2abc5318521bc8038eba9357d7c02aa"
        },
        "downloads": -1,
        "filename": "dag-factory-hotfix-0.11.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a7f5384064648c496123f7be618605ee",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 12286,
        "upload_time": "2021-12-01T11:22:51",
        "upload_time_iso_8601": "2021-12-01T11:22:51.187701Z",
        "url": "https://files.pythonhosted.org/packages/85/f3/bfda4ce3b7a6b220893b9cb54dc878ebbf4d5d10b28fa7a988ebd6bb034d/dag-factory-hotfix-0.11.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.11.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6b46cde647103c4a527753d1157864080204200e5647481a7b114bee80c75ae6",
          "md5": "ed7803852cb03b1b4c6d6a74339e9b27",
          "sha256": "8686a423fde9df4de6a428ea6b35ac9690c98b88f3080b834b0c0679429ccdc8"
        },
        "downloads": -1,
        "filename": "dag_factory_hotfix-0.11.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ed7803852cb03b1b4c6d6a74339e9b27",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 12877,
        "upload_time": "2021-12-20T03:49:38",
        "upload_time_iso_8601": "2021-12-20T03:49:38.119840Z",
        "url": "https://files.pythonhosted.org/packages/6b/46/cde647103c4a527753d1157864080204200e5647481a7b114bee80c75ae6/dag_factory_hotfix-0.11.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b900c75643f1c2a1e1d28a267ea742ea7abca06139bf34092f8e78808f22f400",
          "md5": "df8dbdf412e49ffeb467fcd9a5313ef3",
          "sha256": "40b11f90a24f0f5f70323cd308e24f0f959cf4bac54383a98f47665d4d744d30"
        },
        "downloads": -1,
        "filename": "dag-factory-hotfix-0.11.1.tar.gz",
        "has_sig": false,
        "md5_digest": "df8dbdf412e49ffeb467fcd9a5313ef3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 12336,
        "upload_time": "2021-12-20T03:49:40",
        "upload_time_iso_8601": "2021-12-20T03:49:40.384883Z",
        "url": "https://files.pythonhosted.org/packages/b9/00/c75643f1c2a1e1d28a267ea742ea7abca06139bf34092f8e78808f22f400/dag-factory-hotfix-0.11.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6b46cde647103c4a527753d1157864080204200e5647481a7b114bee80c75ae6",
        "md5": "ed7803852cb03b1b4c6d6a74339e9b27",
        "sha256": "8686a423fde9df4de6a428ea6b35ac9690c98b88f3080b834b0c0679429ccdc8"
      },
      "downloads": -1,
      "filename": "dag_factory_hotfix-0.11.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ed7803852cb03b1b4c6d6a74339e9b27",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6.0",
      "size": 12877,
      "upload_time": "2021-12-20T03:49:38",
      "upload_time_iso_8601": "2021-12-20T03:49:38.119840Z",
      "url": "https://files.pythonhosted.org/packages/6b/46/cde647103c4a527753d1157864080204200e5647481a7b114bee80c75ae6/dag_factory_hotfix-0.11.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b900c75643f1c2a1e1d28a267ea742ea7abca06139bf34092f8e78808f22f400",
        "md5": "df8dbdf412e49ffeb467fcd9a5313ef3",
        "sha256": "40b11f90a24f0f5f70323cd308e24f0f959cf4bac54383a98f47665d4d744d30"
      },
      "downloads": -1,
      "filename": "dag-factory-hotfix-0.11.1.tar.gz",
      "has_sig": false,
      "md5_digest": "df8dbdf412e49ffeb467fcd9a5313ef3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.0",
      "size": 12336,
      "upload_time": "2021-12-20T03:49:40",
      "upload_time_iso_8601": "2021-12-20T03:49:40.384883Z",
      "url": "https://files.pythonhosted.org/packages/b9/00/c75643f1c2a1e1d28a267ea742ea7abca06139bf34092f8e78808f22f400/dag-factory-hotfix-0.11.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}