{
  "info": {
    "author": "Manu Joseph",
    "author_email": "manujosephv@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "![PyTorch Tabular](docs/imgs/pytorch_tabular_logo.png)\n\n[![pypi](https://img.shields.io/pypi/v/pytorch_tabular.svg)](https://pypi.python.org/pypi/pytorch_tabular)\n[![Testing](https://github.com/manujosephv/pytorch_tabular/actions/workflows/testing.yml/badge.svg?event=push)](https://github.com/manujosephv/pytorch_tabular/actions/workflows/testing.yml)\n[![documentation status](https://readthedocs.org/projects/pytorch_tabular/badge/?version=latest)](https://pytorch_tabular.readthedocs.io/en/latest/?badge=latest)\n[![pre-commit.ci status](https://results.pre-commit.ci/badge/github/manujosephv/pytorch_tabular/main.svg)](https://results.pre-commit.ci/latest/github/manujosephv/pytorch_tabular/main)\n[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/manujosephv/pytorch_tabular/blob/main/docs/tutorials/01-Basic_Usage.ipynb)\n\n![PyPI - Downloads](https://img.shields.io/pypi/dm/pytorch_tabular)\n[![DOI](https://zenodo.org/badge/321584367.svg)](https://zenodo.org/badge/latestdoi/321584367)\n[![contributions welcome](https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat-square)](https://github.com/manujosephv/pytorch_tabular/issues)\n\nPyTorch Tabular aims to make Deep Learning with Tabular data easy and accessible to real-world cases and research alike. The core principles behind the design of the library are:\n\n- Low Resistance Useability\n- Easy Customization\n- Scalable and Easier to Deploy\n\nIt has been built on the shoulders of giants like **PyTorch**(obviously), and **PyTorch Lightning**.\n\n## Table of Contents\n\n- [Installation](#installation)\n- [Documentation](#documentation)\n- [Available Models](#available-models)\n- [Usage](#usage)\n- [Blogs](#blogs)\n- [Citation](#citation)\n\n## Installation\n\nAlthough the installation includes PyTorch, the best and recommended way is to first install PyTorch from [here](https://pytorch.org/get-started/locally/), picking up the right CUDA version for your machine.\n\nOnce, you have got Pytorch installed, just use:\n\n```bash\npip install -U pytorch_tabular[extra]\n```\n\nto install the complete library with extra dependencies (Weights&Biases & Plotly).\n\nAnd :\n\n```bash\npip install -U pytorch_tabular\n```\n\nfor the bare essentials.\n\nThe sources for pytorch_tabular can be downloaded from the `Github repo`\\_.\n\nYou can either clone the public repository:\n\n```bash\ngit clone git://github.com/manujosephv/pytorch_tabular\n```\n\nOnce you have a copy of the source, you can install it with:\n\n```bash\ncd pytorch_tabular && pip install .[extra]\n```\n\n## Documentation\n\nFor complete Documentation with tutorials visit [ReadTheDocs](https://pytorch-tabular.readthedocs.io/en/latest/)\n\n## Available Models\n\n- FeedForward Network with Category Embedding is a simple FF network, but with an Embedding layers for the categorical columns.\n- [Neural Oblivious Decision Ensembles for Deep Learning on Tabular Data](https://arxiv.org/abs/1909.06312) is a model presented in ICLR 2020 and according to the authors have beaten well-tuned Gradient Boosting models on many datasets.\n- [TabNet: Attentive Interpretable Tabular Learning](https://arxiv.org/abs/1908.07442) is another model coming out of Google Research which uses Sparse Attention in multiple steps of decision making to model the output.\n- [Mixture Density Networks](https://publications.aston.ac.uk/id/eprint/373/1/NCRG_94_004.pdf) is a regression model which uses gaussian components to approximate the target function and  provide a probabilistic prediction out of the box.\n- [AutoInt: Automatic Feature Interaction Learning via Self-Attentive Neural Networks](https://arxiv.org/abs/1810.11921) is a model which tries to learn interactions between the features in an automated way and create a better representation and then use this representation in downstream task\n- [TabTransformer](https://arxiv.org/abs/2012.06678) is an adaptation of the Transformer model for Tabular Data which creates contextual representations for categorical features.\n- FT Transformer from [Revisiting Deep Learning Models for Tabular Data](https://arxiv.org/abs/2106.11959)\n- [Gated Additive Tree Ensemble](https://arxiv.org/abs/2207.08548) is a novel high-performance, parameter and computationally efficient deep learning architecture for tabular data. GATE uses a gating mechanism, inspired from GRU, as a feature representation learning unit with an in-built feature selection mechanism. We combine it with an ensemble of differentiable, non-linear decision trees, re-weighted with simple self-attention to predict our desired output.\n\n**Semi-Supervised Learning**\n\n- [Denoising AutoEncoder](https://www.kaggle.com/code/faisalalsrheed/denoising-autoencoders-dae-for-tabular-data) is an autoencoder which learns robust feature representation, to compensate any noise in the dataset.\n\nTo implement new models, see the [How to implement new models tutorial](https://github.com/manujosephv/pytorch_tabular/blob/main/docs/tutorials/04-Implementing%20New%20Architectures.ipynb). It covers basic as well as advanced architectures.\n\n## Usage\n\n```python\nfrom pytorch_tabular import TabularModel\nfrom pytorch_tabular.models import CategoryEmbeddingModelConfig\nfrom pytorch_tabular.config import (\n    DataConfig,\n    OptimizerConfig,\n    TrainerConfig,\n    ExperimentConfig,\n)\n\ndata_config = DataConfig(\n    target=[\n        \"target\"\n    ],  # target should always be a list. Multi-targets are only supported for regression. Multi-Task Classification is not implemented\n    continuous_cols=num_col_names,\n    categorical_cols=cat_col_names,\n)\ntrainer_config = TrainerConfig(\n    auto_lr_find=True,  # Runs the LRFinder to automatically derive a learning rate\n    batch_size=1024,\n    max_epochs=100,\n)\noptimizer_config = OptimizerConfig()\n\nmodel_config = CategoryEmbeddingModelConfig(\n    task=\"classification\",\n    layers=\"1024-512-512\",  # Number of nodes in each layer\n    activation=\"LeakyReLU\",  # Activation between each layers\n    learning_rate=1e-3,\n)\n\ntabular_model = TabularModel(\n    data_config=data_config,\n    model_config=model_config,\n    optimizer_config=optimizer_config,\n    trainer_config=trainer_config,\n)\ntabular_model.fit(train=train, validation=val)\nresult = tabular_model.evaluate(test)\npred_df = tabular_model.predict(test)\ntabular_model.save_model(\"examples/basic\")\nloaded_model = TabularModel.load_from_checkpoint(\"examples/basic\")\n```\n\n## Blogs\n\n- [PyTorch Tabular – A Framework for Deep Learning for Tabular Data](https://deep-and-shallow.com/2021/01/27/pytorch-tabular-a-framework-for-deep-learning-for-tabular-data/)\n- [Neural Oblivious Decision Ensembles(NODE) – A State-of-the-Art Deep Learning Algorithm for Tabular Data](https://deep-and-shallow.com/2021/02/25/neural-oblivious-decision-ensemblesnode-a-state-of-the-art-deep-learning-algorithm-for-tabular-data/)\n- [Mixture Density Networks: Probabilistic Regression for Uncertainty Estimation](https://deep-and-shallow.com/2021/03/20/mixture-density-networks-probabilistic-regression-for-uncertainty-estimation/)\n\n## Future Roadmap(Contributions are Welcome)\n\n1. Integrate Optuna Hyperparameter Tuning\n1. Integrate SHAP for interpretability\n1. Add Variable Importance\n1. Add ability to use custom activations in CategoryEmbeddingModel\n1. Add GaussRank as Feature Transformation\n1. ~~Add differential dropouts(layer-wise) in CategoryEmbeddingModel~~\n1. ~~Add Fourier Encoding for cyclic time variables~~\n1. ~~Add Text and Image Modalities for mixed modal problems~~\n\n## Contributors\n<!-- readme: contributors -start -->\n<table>\n<tr>\n    <td align=\"center\">\n        <a href=\"https://github.com/manujosephv\">\n            <img src=\"https://avatars.githubusercontent.com/u/10508493?v=4\" width=\"100;\" alt=\"manujosephv\"/>\n            <br />\n            <sub><b>Manu Joseph</b></sub>\n        </a>\n    </td>\n    <td align=\"center\">\n        <a href=\"https://github.com/wsad1\">\n            <img src=\"https://avatars.githubusercontent.com/u/13963626?v=4\" width=\"100;\" alt=\"wsad1\"/>\n            <br />\n            <sub><b>Jinu Sunil</b></sub>\n        </a>\n    </td>\n    <td align=\"center\">\n        <a href=\"https://github.com/Borda\">\n            <img src=\"https://avatars.githubusercontent.com/u/6035284?v=4\" width=\"100;\" alt=\"Borda\"/>\n            <br />\n            <sub><b>Jirka Borovec</b></sub>\n        </a>\n    </td>\n    <td align=\"center\">\n        <a href=\"https://github.com/fonnesbeck\">\n            <img src=\"https://avatars.githubusercontent.com/u/81476?v=4\" width=\"100;\" alt=\"fonnesbeck\"/>\n            <br />\n            <sub><b>Chris Fonnesbeck</b></sub>\n        </a>\n    </td>\n    <td align=\"center\">\n        <a href=\"https://github.com/jxtrbtk\">\n            <img src=\"https://avatars.githubusercontent.com/u/40494970?v=4\" width=\"100;\" alt=\"jxtrbtk\"/>\n            <br />\n            <sub><b>Null</b></sub>\n        </a>\n    </td>\n    <td align=\"center\">\n        <a href=\"https://github.com/ndrsfel\">\n            <img src=\"https://avatars.githubusercontent.com/u/21068727?v=4\" width=\"100;\" alt=\"ndrsfel\"/>\n            <br />\n            <sub><b>Andreas</b></sub>\n        </a>\n    </td></tr>\n<tr>\n    <td align=\"center\">\n        <a href=\"https://github.com/JulianRein\">\n            <img src=\"https://avatars.githubusercontent.com/u/35046938?v=4\" width=\"100;\" alt=\"JulianRein\"/>\n            <br />\n            <sub><b>Null</b></sub>\n        </a>\n    </td>\n    <td align=\"center\">\n        <a href=\"https://github.com/krshrimali\">\n            <img src=\"https://avatars.githubusercontent.com/u/19997320?v=4\" width=\"100;\" alt=\"krshrimali\"/>\n            <br />\n            <sub><b>Kushashwa Ravi Shrimali</b></sub>\n        </a>\n    </td>\n    <td align=\"center\">\n        <a href=\"https://github.com/Actis92\">\n            <img src=\"https://avatars.githubusercontent.com/u/46601193?v=4\" width=\"100;\" alt=\"Actis92\"/>\n            <br />\n            <sub><b>Luca Actis Grosso</b></sub>\n        </a>\n    </td>\n    <td align=\"center\">\n        <a href=\"https://github.com/sgbaird\">\n            <img src=\"https://avatars.githubusercontent.com/u/45469701?v=4\" width=\"100;\" alt=\"sgbaird\"/>\n            <br />\n            <sub><b>Sterling G. Baird</b></sub>\n        </a>\n    </td>\n    <td align=\"center\">\n        <a href=\"https://github.com/yinyunie\">\n            <img src=\"https://avatars.githubusercontent.com/u/25686434?v=4\" width=\"100;\" alt=\"yinyunie\"/>\n            <br />\n            <sub><b>Yinyu Nie</b></sub>\n        </a>\n    </td></tr>\n</table>\n<!-- readme: contributors -end -->\n\n## Citation\n\nIf you use PyTorch Tabular for a scientific publication, we would appreciate citations to the published software and the following paper:\n\n- [arxiv Paper](https://arxiv.org/abs/2104.13638)\n\n```\n@misc{joseph2021pytorch,\n      title={PyTorch Tabular: A Framework for Deep Learning with Tabular Data},\n      author={Manu Joseph},\n      year={2021},\n      eprint={2104.13638},\n      archivePrefix={arXiv},\n      primaryClass={cs.LG}\n}\n```\n\n- Zenodo Software Citation\n\n```\n@article{manujosephv_2021,\n    title={manujosephv/pytorch_tabular: v0.7.0-alpha},\n    DOI={10.5281/zenodo.5359010},\n    abstractNote={<p>Added a few more SOTA models - TabTransformer, FTTransformer\n        Made improvements in the model save and load capability\n        Made installation less restrictive by unfreezing some dependencies.</p>},\n    publisher={Zenodo},\n    author={manujosephv},\n    year={2021},\n    month={May}\n}\n```\n\n\n# History\n\n## 1.0.1 (2023-01-20)\n\n- Bugfix for default metric for binary classification\n\n\n\n\n## 1.0.0 (2023-01-18)\n\n- Added a new task - Self Supervised Learning (SSL) and a separate training API for it.\n- Added new SOTA model - Gated Additive Tree Ensembles (GATE).\n- Added one SSL model - Denoising AutoEncoder.\n- Added lots of new tutorials and updated entire documentation.\n- Improved code documentation and type hints.\n- Separated a Model into separate Embedding, Backbone, and Head.\n- Refactored all models to separate Backbone as native PyTorch Model(nn.Module).\n- Refactored commonly used modules (layers, activations etc. to a common module).\n- Changed MixedDensityNetworks completely (breaking change). Now MDN is a head you can use with any model.\n- Enabled a low level api for training model.\n- Enabled saving and loading of datamodule.\n- Added trainer_kwargs to pass any trainer argument PyTorch Lightning supports.\n- Added Early Stopping and Model Checkpoint kwargs to use all the arguments in PyTorch Lightining.\n- Enabled prediction using GPUs in predict method.\n- Added `reset_model` to reset model weights to random.\n- Added many save and load functions including ONNX(experimental).\n- Added random seed as a parameter.\n- Switched over completely to Rich progressbars from tqdm.\n- Fixed class-balancing / mu propagation and set default to 1.0.\n- Added PyTorch Profiler for debugging performance issues.\n- Fixed bugs with FTTransformer and TabTransformer.\n- Updated MixedDensityNetworks fixing a bug with lambda_pi.\n- Many CI/CD improvements including complete integration with GitHub Actions.\n- Upgraded all dependencies, including PyTorch Lightning, pandas, to latest versions and added dependabot to manage it going forward.\n- Added pre-commit to ensure code integrity and standardization.\n\n## 0.7.0 (2021-09-01)\n\n- Implemented TabTransformer and FTTransformer models\n- Included capability to save a model using GPU an load in CPU\n- Made the temp folder pytorch tabular specific to avoid conflicts with other tmp folders.\n- Some bug fixes\n- Edited an error out of Advanced Tutorial in docs\n\n## 0.6.0 (2021-06-21)\n\n- Upgraded versions of PyTorch Lightning to 1.3.6\n- Changed the way `gpus` parameter is handled to avoid confusion. `None` is CPU, `-1` is all GPUs, `int` is number of GPUs\n- Added a few more Trainer Params like `deterministic`, `auto_select_gpus`\n- Some bug fixes and changes to docs\n- Added `seed_everything` to the fit method to ensure reproducibility\n- Refactored data_aware_initialization to be part of the BaseModel. Inherited Models can override the method to implement data aware initialization techniques\n\n## 0.5.0 (2021-03-18)\n\n- Added more documentation\n- Added Zenodo citation\n\n## 0.4.0 (2021-03-18)\n\n- Added AutoInt Model\n- Added Mixture Density Networks\n- Refactored the classes to separate backbones from the head of the models\n- Changed the saving and loading model to work for custom parameters that you pass in `fit`\n\n## 0.3.0 (2021-03-02)\n\n- Fixed a bug on inference\n\n## 0.2.0 (2021-02-07)\n\n- Fixed an issue with torch.clip and torch version\n- Fixed an issue with `gpus` parameter in TrainerConfig, by setting default value to `None` for CPU\n- Added feature to use custom sampler in the training dataloader\n- Updated documentation and added a new tutorial for imbalanced classification\n\n## 0.0.1 (2021-01-26)\n\n- First release on PyPI.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/manujosephv/pytorch_tabular",
    "keywords": "pytorch,tabular,pytorch-lightning,neural network",
    "license": "MIT license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pytorch-tabular",
    "package_url": "https://pypi.org/project/pytorch-tabular/",
    "platform": null,
    "project_url": "https://pypi.org/project/pytorch-tabular/",
    "project_urls": {
      "Homepage": "https://github.com/manujosephv/pytorch_tabular"
    },
    "release_url": "https://pypi.org/project/pytorch-tabular/1.0.1/",
    "requires_dist": [
      "torch (>=1.8.1)",
      "category-encoders (==2.5.*)",
      "numpy (>=1.17.2)",
      "pandas (>=1.1.5)",
      "scikit-learn (>=1.0.0)",
      "pytorch-lightning (==1.8.*)",
      "omegaconf (>=2.0.1)",
      "torchmetrics (==0.11.*)",
      "tensorboard (!=2.5.0,>=2.2.0)",
      "protobuf (<=3.20.*)",
      "pytorch-tabnet (==4.0)",
      "PyYAML (<=5.4.1,>=5.1)",
      "matplotlib (>3.1)",
      "ipywidgets",
      "einops (==0.6.*)",
      "rich (>=10.2.2)",
      "dataclasses ; python_version == \"3.6\"",
      "pip (==22.3.1) ; extra == 'dev'",
      "wget ; extra == 'dev'",
      "bump2version (==1.0.1) ; extra == 'dev'",
      "flake8 (>=3.7.8) ; extra == 'dev'",
      "mkdocs-material (==9.0.*) ; extra == 'dev'",
      "mkdocstrings[python] (==0.19.*) ; extra == 'dev'",
      "mknotebooks (==0.7.*) ; extra == 'dev'",
      "pytest (>=5.3.2) ; extra == 'dev'",
      "pytest-runner (>=5.1) ; extra == 'dev'",
      "pre-commit (==2.21.*) ; extra == 'dev'",
      "wandb (==0.13.*) ; extra == 'extra'",
      "plotly (==4.14.*) ; extra == 'extra'",
      "kaleido (==0.2.*) ; extra == 'extra'"
    ],
    "requires_python": ">=3.7",
    "summary": "A standard framework for using Deep Learning for tabular data",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16500597,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "59bfe07bb31373919951460ed0a3f5400459e22112516401085547ebc7bcd1bb",
          "md5": "498ead4e4d63776f5f508cad8835ce7f",
          "sha256": "674c169de4962441523ec6d37a82bc183d1be03983327b048df92f034da917d8"
        },
        "downloads": -1,
        "filename": "pytorch_tabular-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "498ead4e4d63776f5f508cad8835ce7f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 1130474,
        "upload_time": "2021-01-26T15:08:10",
        "upload_time_iso_8601": "2021-01-26T15:08:10.050987Z",
        "url": "https://files.pythonhosted.org/packages/59/bf/e07bb31373919951460ed0a3f5400459e22112516401085547ebc7bcd1bb/pytorch_tabular-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0c852506f04859c828deb8589eace0718399d026ff080730e92d62c347aed142",
          "md5": "bdb4107a8626fa46e575ff075c4a42a2",
          "sha256": "e0188a194319d9319434b6fe09c73e0523615400ae6a5e88337bc9f564250970"
        },
        "downloads": -1,
        "filename": "pytorch_tabular-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bdb4107a8626fa46e575ff075c4a42a2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 1130826,
        "upload_time": "2021-02-07T16:45:27",
        "upload_time_iso_8601": "2021-02-07T16:45:27.865789Z",
        "url": "https://files.pythonhosted.org/packages/0c/85/2506f04859c828deb8589eace0718399d026ff080730e92d62c347aed142/pytorch_tabular-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0.dev0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "79bc1761cd1f5e7b679da3a92ced971a10123cb0200b36dd172e9ba136f8f820",
          "md5": "5fdad9eeaa28698515f081083a900b6b",
          "sha256": "6f5d4c7b9f7562671d3889a1a99314ee6d1643db264a7053d6f2b5b4869c10a0"
        },
        "downloads": -1,
        "filename": "pytorch_tabular-0.2.0.dev0.tar.gz",
        "has_sig": false,
        "md5_digest": "5fdad9eeaa28698515f081083a900b6b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 1130921,
        "upload_time": "2021-02-03T14:36:35",
        "upload_time_iso_8601": "2021-02-03T14:36:35.203334Z",
        "url": "https://files.pythonhosted.org/packages/79/bc/1761cd1f5e7b679da3a92ced971a10123cb0200b36dd172e9ba136f8f820/pytorch_tabular-0.2.0.dev0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d1212134459747114a8af67cf22f0338442d571b1deba9366029c84a56243b11",
          "md5": "b0175650213b9c597d8aee88eb02c4c2",
          "sha256": "1e6505a0873d57cd8f8d93159890ed456c4946910fadae511ea440c5c1986536"
        },
        "downloads": -1,
        "filename": "pytorch_tabular-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b0175650213b9c597d8aee88eb02c4c2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 1130881,
        "upload_time": "2021-03-02T14:16:01",
        "upload_time_iso_8601": "2021-03-02T14:16:01.245313Z",
        "url": "https://files.pythonhosted.org/packages/d1/21/2134459747114a8af67cf22f0338442d571b1deba9366029c84a56243b11/pytorch_tabular-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9458f18ee9d7f2ca7c85054961486062bc06e893029767e3baa44bccf83502cc",
          "md5": "a9e8c503db4bf63f6ee95d0304ec2f2c",
          "sha256": "00111ee9d64406fdba0bdad3fdc171a4578d6b07522568be70286a5722ae13c9"
        },
        "downloads": -1,
        "filename": "pytorch_tabular-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a9e8c503db4bf63f6ee95d0304ec2f2c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 1145068,
        "upload_time": "2021-03-18T07:40:09",
        "upload_time_iso_8601": "2021-03-18T07:40:09.312416Z",
        "url": "https://files.pythonhosted.org/packages/94/58/f18ee9d7f2ca7c85054961486062bc06e893029767e3baa44bccf83502cc/pytorch_tabular-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "806f57d87a1883cb006cdd35aabf7502501f92a13187780b4edc0b62cc35ebc1",
          "md5": "ab50345dfbd479c1ca4efaa79fed7bbe",
          "sha256": "058c085cc7c29e28c566e7c5b29c8921cd13cf02b7774016e25bd1c5daca6a31"
        },
        "downloads": -1,
        "filename": "pytorch_tabular-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ab50345dfbd479c1ca4efaa79fed7bbe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 1146148,
        "upload_time": "2021-05-01T09:06:49",
        "upload_time_iso_8601": "2021-05-01T09:06:49.802681Z",
        "url": "https://files.pythonhosted.org/packages/80/6f/57d87a1883cb006cdd35aabf7502501f92a13187780b4edc0b62cc35ebc1/pytorch_tabular-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "75414c1291cc2499da9df063d6a2a7382d75c423ec99f9a610fc71d19854dd70",
          "md5": "6c76d8a4f269d1cfed593ec4d505d863",
          "sha256": "9b3c3382d1e6b6310cd6479aeeb87897424dc79ca1d544b322bf29115313a01a"
        },
        "downloads": -1,
        "filename": "pytorch_tabular-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6c76d8a4f269d1cfed593ec4d505d863",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 1939001,
        "upload_time": "2021-06-20T06:57:47",
        "upload_time_iso_8601": "2021-06-20T06:57:47.300202Z",
        "url": "https://files.pythonhosted.org/packages/75/41/4c1291cc2499da9df063d6a2a7382d75c423ec99f9a610fc71d19854dd70/pytorch_tabular-0.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf312379794cdf73651de6fa143a079530af906cef9e2b4f8f99a27759a30732",
          "md5": "8d5b6294504137852bcedfef8f642481",
          "sha256": "5454397cdc6ca65597b2ff6926e2a46dfb02d899079a190f2ae88d4b13496679"
        },
        "downloads": -1,
        "filename": "pytorch_tabular-0.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8d5b6294504137852bcedfef8f642481",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 1951362,
        "upload_time": "2021-09-01T11:51:30",
        "upload_time_iso_8601": "2021-09-01T11:51:30.718993Z",
        "url": "https://files.pythonhosted.org/packages/bf/31/2379794cdf73651de6fa143a079530af906cef9e2b4f8f99a27759a30732/pytorch_tabular-0.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "73693eb985df404a2f2d35ece3312ce5e50e5d9f0b62519693c248cf3fc0bdc5",
          "md5": "7157e01507dfca2879d871ebb62bff2b",
          "sha256": "50a771524c380cdbb0a78558635e6b2cc016d95a6f2f1a73991d8ff41bd34642"
        },
        "downloads": -1,
        "filename": "pytorch_tabular-1.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7157e01507dfca2879d871ebb62bff2b",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.7",
        "size": 119588,
        "upload_time": "2023-01-19T04:18:08",
        "upload_time_iso_8601": "2023-01-19T04:18:08.822599Z",
        "url": "https://files.pythonhosted.org/packages/73/69/3eb985df404a2f2d35ece3312ce5e50e5d9f0b62519693c248cf3fc0bdc5/pytorch_tabular-1.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a5014d01ceb8f6bdee749c804ca6ac680101b75c05a470333d30120a49c558b7",
          "md5": "d019f5fd9d82d59d78dcd90934653e96",
          "sha256": "660bad1ff5a42ccd2b7d462f55df95bc514d8e41877bcf38a7179eb6a23b63bd"
        },
        "downloads": -1,
        "filename": "pytorch_tabular-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d019f5fd9d82d59d78dcd90934653e96",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 1841744,
        "upload_time": "2023-01-19T04:18:10",
        "upload_time_iso_8601": "2023-01-19T04:18:10.282736Z",
        "url": "https://files.pythonhosted.org/packages/a5/01/4d01ceb8f6bdee749c804ca6ac680101b75c05a470333d30120a49c558b7/pytorch_tabular-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "14f66e65b02b0da4ec212014b21ca0b5b403ec89ce84abd6f3fa450568d04c81",
          "md5": "c2a7b7d20e8357fcf4ebd06d612089e7",
          "sha256": "b0a32decef1d89ae310f2b3bb46ccb0ce0d815af14d66f2461e86f74b4773929"
        },
        "downloads": -1,
        "filename": "pytorch_tabular-1.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c2a7b7d20e8357fcf4ebd06d612089e7",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.7",
        "size": 119691,
        "upload_time": "2023-01-20T12:08:43",
        "upload_time_iso_8601": "2023-01-20T12:08:43.810169Z",
        "url": "https://files.pythonhosted.org/packages/14/f6/6e65b02b0da4ec212014b21ca0b5b403ec89ce84abd6f3fa450568d04c81/pytorch_tabular-1.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "157546a7c70d8096476a42a6e285f94a3f57e7b812aac8c699cc5b43ff555624",
          "md5": "0e7fc043c5f603a56997484bf992b32d",
          "sha256": "d4c59fbd7053027f4dae52f1d6baf5b98129f67adc39a2ad3b6504264c1ff6e2"
        },
        "downloads": -1,
        "filename": "pytorch_tabular-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0e7fc043c5f603a56997484bf992b32d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 1841999,
        "upload_time": "2023-01-20T12:08:45",
        "upload_time_iso_8601": "2023-01-20T12:08:45.532178Z",
        "url": "https://files.pythonhosted.org/packages/15/75/46a7c70d8096476a42a6e285f94a3f57e7b812aac8c699cc5b43ff555624/pytorch_tabular-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "14f66e65b02b0da4ec212014b21ca0b5b403ec89ce84abd6f3fa450568d04c81",
        "md5": "c2a7b7d20e8357fcf4ebd06d612089e7",
        "sha256": "b0a32decef1d89ae310f2b3bb46ccb0ce0d815af14d66f2461e86f74b4773929"
      },
      "downloads": -1,
      "filename": "pytorch_tabular-1.0.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c2a7b7d20e8357fcf4ebd06d612089e7",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.7",
      "size": 119691,
      "upload_time": "2023-01-20T12:08:43",
      "upload_time_iso_8601": "2023-01-20T12:08:43.810169Z",
      "url": "https://files.pythonhosted.org/packages/14/f6/6e65b02b0da4ec212014b21ca0b5b403ec89ce84abd6f3fa450568d04c81/pytorch_tabular-1.0.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "157546a7c70d8096476a42a6e285f94a3f57e7b812aac8c699cc5b43ff555624",
        "md5": "0e7fc043c5f603a56997484bf992b32d",
        "sha256": "d4c59fbd7053027f4dae52f1d6baf5b98129f67adc39a2ad3b6504264c1ff6e2"
      },
      "downloads": -1,
      "filename": "pytorch_tabular-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "0e7fc043c5f603a56997484bf992b32d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 1841999,
      "upload_time": "2023-01-20T12:08:45",
      "upload_time_iso_8601": "2023-01-20T12:08:45.532178Z",
      "url": "https://files.pythonhosted.org/packages/15/75/46a7c70d8096476a42a6e285f94a3f57e7b812aac8c699cc5b43ff555624/pytorch_tabular-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}