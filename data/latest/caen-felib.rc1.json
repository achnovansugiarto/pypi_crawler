{
  "info": {
    "author": "",
    "author_email": "Giovanni Cerretani <g.cerretani@caen.it>, Daniele Ninci <d.ninci@caen.it>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Physics",
      "Typing :: Typed"
    ],
    "description": "# caen_felib\nThe official Python wrapper for the CAEN FELib.\n\n## Install\nYou need to install both the latest version of CAEN FELib and an implementation like the CAEN Dig2 from [the CAEN website](https://www.caen.it/products/caen-felib-library/).\n\nThen, install this module and have fun.\n\n## Examples\nFew examples may be found on the official documentation and in the function docstrings.\n\nThis example show the simplest way to perform a data acquisition with the scope firmware:\n\n```python\nimport numpy as np\nfrom matplotlib import pyplot as plt\n\nfrom caen_felib import device\n\nwith device.connect(\"dig2://<host>\") as dig:\n    # Reset\n    dig.cmd.Reset()\n\n    # Configuration parameters\n    nch = int(dig.par.NumCh.value)\n    reclen = 4096\n\n    # Set some digitizer parameters\n    dig.par.AcqTriggerSource.value = 'SwTrg'\n    dig.par.RecordLengthS.value = f'{reclen}'\n    dig.par.PreTriggerS.value = f'{128}'\n\n    # Set some channel parameters\n    for ch in dig.ch:\n        ch.par.DCOffset.value = f'{50}'\n\n    # Set enabled endpoint to activate decode\n    dig.endpoint.par.ActiveEndpoint.value = 'scope'\n\n    # Configure endpoint\n    data_format = [\n        {\n            'name': 'TIMESTAMP',\n            'type': 'U64',\n        },\n        {\n            'name': 'WAVEFORM',\n            'type': 'U16',\n            'dim': 2,\n            'shape': [nch, reclen],\n        },\n        {\n            'name': 'WAVEFORM_SIZE',\n            'type': 'U64',\n            'dim': 1,\n            'shape': [nch],\n        },\n    ]\n\n    # set_read_data_format returns allocated buffers\n    data = dig.endpoint.scope.set_read_data_format(data_format)\n    timestamp = data[0].value\n    waveform = data[1].value\n    waveform_size = data[2].value\n\n    # Start acquisition\n    dig.cmd.ArmAcquisition()\n    dig.cmd.SwStartAcquisition()\n\n    # Send trigger and wait for first event\n    dig.cmd.SendSwTrigger()\n    dig.endpoint.scope.read_data(-1, data)\n\n    # Stop acquisition\n    dig.cmd.DisarmAcquisition()\n\n    # Plot waveforms\n    for i in range(nch):\n        size = waveform_size[i]\n        plt.plot(np.arange(size), waveform[i][:size])\n    plt.title(f'Timestamp: {timestamp}')\n    plt.show()\n```\n\n## Documentation\nPython API is described on the CAEN FELib library documentation, starting from CAEN FELib v1.2.3.\n\n## References\nRequirements and documentation can be found at \nhttps://www.caen.it/products/caen-felib-library/.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "caen-felib",
    "package_url": "https://pypi.org/project/caen-felib/",
    "platform": null,
    "project_url": "https://pypi.org/project/caen-felib/",
    "project_urls": {
      "documentation": "https://www.caen.it/products/caen-felib-library/",
      "homepage": "https://www.caen.it"
    },
    "release_url": "https://pypi.org/project/caen-felib/1.0.4/",
    "requires_dist": [
      "numpy (>=1.19)",
      "typing-extensions (>=4.0.0)"
    ],
    "requires_python": ">=3.7",
    "summary": "Official Python wrapper for the CAEN FELib.",
    "version": "1.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16288685,
  "releases": {
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7a9f5f6a3c52529028208ec13d360ddcacbe69fdd091e01978837e974fa13209",
          "md5": "191fa226c03d53b01ba4ec9aecbe4c65",
          "sha256": "7ad2b94cb143d52063bf97b7bf24a28319c6ad2679c4bb9d227a2736fd1da194"
        },
        "downloads": -1,
        "filename": "caen_felib-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "191fa226c03d53b01ba4ec9aecbe4c65",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 13019,
        "upload_time": "2023-01-03T11:27:04",
        "upload_time_iso_8601": "2023-01-03T11:27:04.154582Z",
        "url": "https://files.pythonhosted.org/packages/7a/9f/5f6a3c52529028208ec13d360ddcacbe69fdd091e01978837e974fa13209/caen_felib-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fbd36199a67371d5fdbd69aeb229d34e5128a99136f82417fd0b1bd3254e451e",
          "md5": "56fbbd956f4033e1550bbf26106b25c4",
          "sha256": "17990addc87153f94c1bb5a5393a9e0319ff8e2d8653ff8a4975ab5753263b9a"
        },
        "downloads": -1,
        "filename": "caen_felib-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "56fbbd956f4033e1550bbf26106b25c4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 11675,
        "upload_time": "2023-01-03T11:27:05",
        "upload_time_iso_8601": "2023-01-03T11:27:05.631205Z",
        "url": "https://files.pythonhosted.org/packages/fb/d3/6199a67371d5fdbd69aeb229d34e5128a99136f82417fd0b1bd3254e451e/caen_felib-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7a9f5f6a3c52529028208ec13d360ddcacbe69fdd091e01978837e974fa13209",
        "md5": "191fa226c03d53b01ba4ec9aecbe4c65",
        "sha256": "7ad2b94cb143d52063bf97b7bf24a28319c6ad2679c4bb9d227a2736fd1da194"
      },
      "downloads": -1,
      "filename": "caen_felib-1.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "191fa226c03d53b01ba4ec9aecbe4c65",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 13019,
      "upload_time": "2023-01-03T11:27:04",
      "upload_time_iso_8601": "2023-01-03T11:27:04.154582Z",
      "url": "https://files.pythonhosted.org/packages/7a/9f/5f6a3c52529028208ec13d360ddcacbe69fdd091e01978837e974fa13209/caen_felib-1.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fbd36199a67371d5fdbd69aeb229d34e5128a99136f82417fd0b1bd3254e451e",
        "md5": "56fbbd956f4033e1550bbf26106b25c4",
        "sha256": "17990addc87153f94c1bb5a5393a9e0319ff8e2d8653ff8a4975ab5753263b9a"
      },
      "downloads": -1,
      "filename": "caen_felib-1.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "56fbbd956f4033e1550bbf26106b25c4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 11675,
      "upload_time": "2023-01-03T11:27:05",
      "upload_time_iso_8601": "2023-01-03T11:27:05.631205Z",
      "url": "https://files.pythonhosted.org/packages/fb/d3/6199a67371d5fdbd69aeb229d34e5128a99136f82417fd0b1bd3254e451e/caen_felib-1.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}