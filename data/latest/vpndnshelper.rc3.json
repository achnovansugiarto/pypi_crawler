{
  "info": {
    "author": "Hans-Peter Jansen",
    "author_email": "hans-peter.jansen@suse.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",
      "Operating System :: POSIX",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "VPN DNS Helper\n==============\nThis tool allows local DNS server to coexist with corporate VPN DNS server by\nadjusting the dnsmasq configuration dynamically.\n\nDescription\n-----------\nIf you want to set up a split DNS corporate VPN on a Linux system that is itself\nincluded in an advanced local network environment with its own DNS server, you\nmay encounter an **unpleasant issue**: once the VPN connection is established, you\ncan no longer resolve local systems/services because the VPN **overwrites** the\nlocal nameserver with the **company VPN nameserver**.\n\nA simple solution would be to add the local systems to `/etc/hosts`, but what if\nthere are many, or if they change frequently?\n\nA better solution to this problem is presented here: on the system, that needs\nto access the corporate VPN (*vpn system*), we use `dnsmasq` as a resolver on\nlocalhost, and instruct `dnsmasq` to resolve VPN destinations only with the\nVPN nameserver. This should work even if your corporate DNS uses public domains\nwith private subdomains.\n\nPrerequisites\n-------------\nInstall `dnsmasq` on the *vpn system* in such a way that nameserver changes on VPN\nstart (e.g. triggered by the NetworkManager) do not end up in /etc/resolv.conf\nbut in another file (e.g. `/run/dnsmasq-resolvers.conf`). We do not supply this\nfile directly to `dnsmasq`, but adjust a `dnsmasq` config file dynamically\n(e.g. `/etc/dnsmasq.d/vpndnshelper.conf`).\n\nOn a SUSE system, the network setup is done with `netconfig`. For our specific\nneeds, please check/adjust `/etc/sysconfig/network/config`:\n\n```\nNETCONFIG_DNS_POLICY=\"auto\"\nNETCONFIG_DNS_FORWARDER=\"dnsmasq\"\nNETCONFIG_DNS_FORWARDER_FALLBACK=\"no\"\nNETCONFIG_DNS_STATIC_SEARCHLIST=\"\"\nNETCONFIG_DNS_STATIC_SERVERS=\"\"\n```\n\nInstallation\n------------\nCreate a config file with the name `/etc/dnsmasq.d/vpndnshelper.conf`:\n```\n# force primary interface\ninterface=lo\nbind-interfaces\ndomain-needed\n\n# disable dhcp\nno-dhcp-interface=\n\n# VPN DNS server\n#server=/vpndomain.tld/othervpn.tld/12.34.56.78\n# VPN DNS revres\n\n# local DNS server\nserver=12.34.56.78\n```\n\nIn this file, the section between the VPN DNS comments is adjusted dynamically.\nThe VPN domain names and the local server need to be set up correctly. Before\nthe VPN is started, it's a good idea to keep the VPN DNS server disabled.\n\nThe paths of `/run/dnsmasq-forwarders.conf` and `/etc/dnsmasq.d/vpndnshelper.conf`,\nas well as the `dnsmasq` restart command can be changed via the environment.\nSee `vpndnshelper --help` for further configurability.\n\nAfter installation checks\n-------------------------\nAfter a restart of the *vpn system*, `/etc/resolv.conf` should not contain any\nnameserver entries. That forces the resolver to resolve via `localhost`, which is\nhandled by `dnsmasq`. `/run/dnsmasq-forwarders.conf` should only contain the local\nnameserver, which must be manually assigned to the local DNS server in\n`/etc/dnsmasq.d/vpndnshelper.conf`.\n\nOperation\n---------\nWhen the VPN tunnel is established, netconfig will add the VPN nameserver with\nhigher priority to `/run/dnsmasq-forwarders.conf`. We monitor any changes to this\nfile, adjust `/etc/dnsmasq.d/vpndnshelper.conf` and restart `dnsmasq`.\n\nWhen the VPN is started, we will rewrite VPN DNS `server=` lines. If multiple VPN\nnameserver are supplied, the first `server=` line is used as a template for all\nentries, and the comments are removed.\n\nWhen the VPN is shut down, the `server=` entries are simply commented out again.\n\nIssues and Caveats\n------------------\nWe monitor filesystem changes to `/run/dnsmasq-forwarders.conf` with `pyinotify`.\nDuring development, we noticed a race between `IN_CLOSE_WRITE` and file mtime\nchanges.\n\nAnother option to get noticed from VPN state changes is `dbus`, but this would\nmake us depending harder on `NetworkManager` and comes with its own can of worms.\n\nFor now, we rely on being started with a teared down VPN tunnel in order to\ncollect the local nameserver. If you need to restart `vpndnshelper` during\noperation, tear down the VPN tunnel first. `vpndnshelper` will reset the VPN\nDNS server on restart, but will not be able to catch up with current state with\nan open VPN tunnel.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/frispete/vpndnshelper",
    "keywords": "",
    "license": "GNU GPL v2 - see http://www.gnu.org/licenses/gpl2.txt for details",
    "maintainer": "",
    "maintainer_email": "",
    "name": "vpndnshelper",
    "package_url": "https://pypi.org/project/vpndnshelper/",
    "platform": null,
    "project_url": "https://pypi.org/project/vpndnshelper/",
    "project_urls": {
      "Homepage": "https://github.com/frispete/vpndnshelper"
    },
    "release_url": "https://pypi.org/project/vpndnshelper/0.0.3/",
    "requires_dist": null,
    "requires_python": ">=3",
    "summary": "VPN DNS Helper",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13980175,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "00f890d4f515734d56deaf8a631aa20b31867623ce33aa4b68f45398a12a97ba",
          "md5": "c0cec856d90a375a43ab817ca74a5e00",
          "sha256": "ec31ece605dd85130f64dbd71c83bda54ba0c786466d1f54d024026b8f16e5ed"
        },
        "downloads": -1,
        "filename": "vpndnshelper-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c0cec856d90a375a43ab817ca74a5e00",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 14121,
        "upload_time": "2021-02-28T22:36:09",
        "upload_time_iso_8601": "2021-02-28T22:36:09.174858Z",
        "url": "https://files.pythonhosted.org/packages/00/f8/90d4f515734d56deaf8a631aa20b31867623ce33aa4b68f45398a12a97ba/vpndnshelper-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ab1a69b9b4b4a530078e061fcc0934a5052142f6e3eb29842ffcfaf4ff4f0827",
          "md5": "f6acff3b4be8cf56f77bb3f3afc39b8e",
          "sha256": "4365de675e115cb52820bc3401847644f804fd4d54b710d98f448edc63698f65"
        },
        "downloads": -1,
        "filename": "vpndnshelper-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f6acff3b4be8cf56f77bb3f3afc39b8e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 14307,
        "upload_time": "2021-03-01T16:04:37",
        "upload_time_iso_8601": "2021-03-01T16:04:37.787316Z",
        "url": "https://files.pythonhosted.org/packages/ab/1a/69b9b4b4a530078e061fcc0934a5052142f6e3eb29842ffcfaf4ff4f0827/vpndnshelper-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "61aefef80bdd71ef2fbf5d3f2e4b5daa99a773b86458b313f8fc0803bd7c6f6f",
          "md5": "85726d4eaef85586de4d30f9df86c359",
          "sha256": "7abdd838d5abf10ab52927663aa24a458b94484f00d8fe1ca9291079ee5441ca"
        },
        "downloads": -1,
        "filename": "vpndnshelper-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "85726d4eaef85586de4d30f9df86c359",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 14628,
        "upload_time": "2022-05-30T17:35:31",
        "upload_time_iso_8601": "2022-05-30T17:35:31.314403Z",
        "url": "https://files.pythonhosted.org/packages/61/ae/fef80bdd71ef2fbf5d3f2e4b5daa99a773b86458b313f8fc0803bd7c6f6f/vpndnshelper-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "61aefef80bdd71ef2fbf5d3f2e4b5daa99a773b86458b313f8fc0803bd7c6f6f",
        "md5": "85726d4eaef85586de4d30f9df86c359",
        "sha256": "7abdd838d5abf10ab52927663aa24a458b94484f00d8fe1ca9291079ee5441ca"
      },
      "downloads": -1,
      "filename": "vpndnshelper-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "85726d4eaef85586de4d30f9df86c359",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3",
      "size": 14628,
      "upload_time": "2022-05-30T17:35:31",
      "upload_time_iso_8601": "2022-05-30T17:35:31.314403Z",
      "url": "https://files.pythonhosted.org/packages/61/ae/fef80bdd71ef2fbf5d3f2e4b5daa99a773b86458b313f8fc0803bd7c6f6f/vpndnshelper-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}