{
  "info": {
    "author": "Cone Contributors",
    "author_email": "dev@conestack.org",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Programming Language :: Python",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": ".. image:: https://img.shields.io/pypi/v/cone.sql.svg\n    :target: https://pypi.python.org/pypi/cone.sql\n    :alt: Latest PyPI version\n\n.. image:: https://img.shields.io/pypi/dm/cone.sql.svg\n    :target: https://pypi.python.org/pypi/cone.sql\n    :alt: Number of PyPI downloads\n\n.. image:: https://travis-ci.org/bluedynamics/cone.sql.svg?branch=master\n    :target: https://travis-ci.org/bluedynamics/cone.sql\n\n.. image:: https://coveralls.io/repos/github/bluedynamics/cone.sql/badge.svg?branch=master\n    :target: https://coveralls.io/github/bluedynamics/cone.sql?branch=master\n\nThis package provides SQLAlchemy integration in ``cone.app`` and basic\napplication nodes for publishing SQLAlchemy models.\n\n\nInstallation\n------------\n\nInclude ``cone.sql`` to install dependencies in your application's\n``setup.py``.\n\n\nConfigure Database and WSGI\n---------------------------\n\nAdopt your application config ini file to define database location and hook\nup the related elements to the WSGI pipeline.\n\n.. code-block:: ini\n\n    [app:my_app]\n    use = egg:cone.app#main\n\n    pyramid.includes =\n        pyramid_retry\n        pyramid_tm\n\n    tm.commit_veto = pyramid_tm.default_commit_veto\n\n    cone.plugins =\n        cone.sql\n\n    sql.db.url = sqlite:///%(here)s/var/sqlite/my_db.db\n\n    [filter:remote_addr]\n    # for use behind nginx\n    use = egg:cone.app#remote_addr\n\n    [filter:session]\n    use = egg:cone.sql#session\n\n    [pipeline:main]\n    pipeline =\n        remote_addr\n        session\n        my_app\n\n\nCreate Model and Nodes\n----------------------\n\nDefine the SQLAlchemy model.\n\n.. code-block:: python\n\n    from cone.sql import SQLBase\n    from cone.sql.model import GUID\n    from sqlalchemy import Column\n    from sqlalchemy import String\n\n    class MyRecord(SQLBase):\n        __tablename__ = 'my_table'\n        uid_key = Column(GUID, primary_key=True)\n        field = Column(String)\n\nDefine an application node which represents the SQL row and uses the SQLAlchemy\nmodel. The class holds a reference to the related SQLAlchemy model.\n\n.. code-block:: python\n\n    from cone.sql.model import SQLRowNode\n\n    class MyNode(SQLRowNode):\n        record_class = MyRecord\n\nDefine an application node which represents the table and acts as container for\nthe SQL row nodes. The class holds a reference to the related SQLAlchemy model\nand the related SQLRowNode.\n\n.. code-block:: python\n\n    from cone.sql.model import SQLTableNode\n\n    class MyContainer(SQLTableNode):\n        record_class = MyRecord\n        child_factory = MyNode\n\n\nPrimary key handling\n--------------------\n\nThe node name maps to the primary key of the SQLAlchemy model (currenly no\nmultiple primary keys are supported). Node names are converted to the\nprimary key data type automatically. The conversion factories are defined at\n``SQLTableNode.data_type_converters`` which can be extended by more data types\nif needed.\n\n.. code-block:: python\n\n    >>> SQLTableNode.data_type_converters\n    {<class 'sqlalchemy.sql.sqltypes.String'>: <type 'unicode'>,\n    <class 'cone.sql.model.GUID'>: <class 'uuid.UUID'>,\n    <class 'sqlalchemy.sql.sqltypes.Integer'>: <type 'int'>}\n\n\nIntegrate to the Application Model\n----------------------------------\n\nIn order to publish a SQL table node, the table node must be hooked up to the\napplication model. To hook up the at root level, register it as entry.\n\n.. code-block:: python\n\n    import cone.app\n\n    cone.app.register_entry('container', MyContainer)\n\n\nSession setup handlers\n----------------------\n\nThere exists a ``sql_session_setup`` decorator which can be used to perform\nsession setup tasks like registering SQLAlchemy event listeners.\n\n.. code-block:: python\n\n    from cone.sql import sql_session_setup\n    from sqlalchemy import event\n\n    def after_flush(session, flush_context):\n        \"\"\"Do something after flush.\n        \"\"\"\n\n    @sql_session_setup\n    def bind_session_listener(session):\n        \"\"\"SQL session setup callback.\n        \"\"\"\n        event.listen(session, 'after_flush', after_flush)\n\n\nQuery the database\n------------------\n\nQuerying the database is done via SQLAlchemy. If you are in a request/response\ncycle, you should acquire the session from request via ``get_session`` and\nperform arbitrary operations on it. By reading the session from request we ensure\nthe transaction manager to work properly if configured.\n\n.. code-block:: python\n\n    from cone.sql import get_session\n\n    session = get_session(request)\n    result = session.query(MyRecord).all()\n\nIf you need a session outside a request/response cycle you can create one by using\nthe ``session_factory``.\n\n.. code-block:: python\n\n    from cone.sql import session_factory\n\n    session = session_factory()\n    result = session.query(MyRecord).all()\n    session.close()\n\n\nPrincipal ACL's\n---------------\n\nSQL based Principal ACL's are implemented in ``cone.sql.acl``. The related\ntable gets created as soon as you import from this module.\n\nUsing ``SQLPrincipalACL`` requires the model to implement ``node.interfaces.IUUID``.\n\n.. code-block:: python\n\n    from cone.sql.acl import SQLPrincipalACL\n    from node.base import BaseNode\n    from node.interfaces import IUUID\n    from plumber import plumbing\n    from pyramid.security import Allow\n    from zope.interface import implementer\n    import uuid as uuid_module\n\n    @implementer(IUUID)\n    @plumbing(SQLPrincipalACL)\n    class SQLPrincipalACLNode(BaseNode):\n        uuid = uuid_module.UUID('1a82fa87-08d6-4e48-8bc2-97ee5a52726d')\n\n        @property\n        def __acl__(self):\n            return [\n                (Allow, 'role:editor', ['edit']),\n                (Allow, 'role:manager', ['manage']),\n            ]\n\n\nUser and Group Management\n-------------------------\n\n``cone.sql.ugm`` contains an implementation of the UGM contracts defined at\n``node.ext.ugm.interfaces``, using sql as backend storage:\n\n.. code-block::\n\n                           +------------+\n                           |  Principal |\n                           |(data: JSON)|\n                           +------------+\n                                 ^\n                                 |\n            +-----------------------------------------+\n            |                                         |\n            |                                         |\n         +------+                                 +-------+\n         | User |                                 | Group |\n         +------+                                 +-------+\n             1                                        1\n             |                                        |\n             |                                        |\n             +-------------+            +-------------+\n                           |            |\n                           n            m\n                           |            |\n                        +-----------------+\n                        | GroupAssignment |\n                        +-----------------+\n\nCurrently SQLite and PostgreSQL are supported and tested, other DBs must\nbe evaluated concerning their JSON capabilities since users and groups\nstore additional payload data in a JSON field which brings the flexibility\nto store arbitrary data as a dict in the JSON field.\n\nTo activate SQL based UGM backend, it needs to be configured via the application\nini config file.:\n\n.. code-block:: ini\n\n    ugm.backend = sql\n\n    sql.user_attrs = id, mail, fullname, portrait\n    sql.group_attrs = description\n    sql.binary_attrs = portrait\n    sql.log_auth = True\n    sql.user_expires_attr = expires\n\nUGM users and groups are stored in the same database as defined at\n``sql.db.url`` in the config file.\n\nUGM dedicated config options:\n\n- ``sql.user_attrs`` is a comma separated list of strings defining the\n  available user attributes stored in the user JSON data field.\n\n- ``sql.group_attrs`` is a comma separated list of strings defining the\n  available group attributes stored in the group JSON data field.\n\n- ``sql.binary_attrs`` is a comma separated list of strings defining the\n  attributes which are considered binary and get stored base 64 encoded in the\n  JSON data field of users and groups.\n\n- ``sql.log_auth`` defaults to False. If set, the first login timestamp will\n  be stored during the first authentication and latest login timestamp will be\n  updated for each successful authentication.\n\n- ``sql.user_expires_attr`` defaults to None. If set, user expiration is\n  enabled and the value given is the attribute name of the JSON data field\n  where the expiration timestamp gets stored.\n\nUsers and groups can be managed with ``cone.ugm``. If activated,\n``sql.user_attrs`` and ``sql.group_attrs`` can be omitted, relevant information\ngets extracted from the ``ugm.xml`` config file.\n\n.. code-block:: ini\n\n    ugm.backend = sql\n    ugm.config = %(here)s/ugm.xml\n\n    sql.log_auth = True\n\n    cone.plugins =\n        cone.ugm\n        cone.sql\n\n\nTODO\n----\n\n- Support multiple primary keys.\n\n\nContributors\n============\n\n- Robert Niederreiter (Author)\n- Phil Auersperg\n\n\nChanges\n=======\n\n0.7 (2022-12-05)\n----------------\n\n- Implement ``expires`` and ``expired`` on ``cone.sql.ugm.UserBehavior``.\n  Extend ``cone.sql.ugm.UgmBehavior`` by ``user_expires_attr`` which\n  enables used expiration support.\n  [rnix]\n\n- Add ``TestSQLSessionFactory`` and set to ``cone.sql.session_factory`` in\n  ``SQLLayer.init_sql`` if not present.\n  [rnix, toalba]\n\n\n0.6 (2022-10-06)\n----------------\n\n- Remove usage of ``Nodespaces`` behavior.\n  [rnix]\n\n- Replace deprecated use of ``IStorage`` by ``IMappingStorage``.\n  [rnix]\n\n- Replace deprecated use of ``Nodify`` by ``MappingNode``.\n  [rnix]\n\n- Replace deprecated use of ``Adopt`` by ``MappingAdopt``.\n  [rnix]\n\n- Replace deprecated use of ``NodeChildValidate`` by ``MappingConstraints``.\n  [rnix]\n\n- Replace deprecated use of ``allow_non_node_children`` by ``child_constraints``.\n  [rnix]\n\n\n0.5 (2021-11-08)\n----------------\n\n- Rename deprecated ``SQLPrincipalRoles.allow_non_node_childs`` to\n  ``allow_non_node_children``\n  [rnix]\n\n- Add ``cache_ok`` to ``GUID`` type decorator to prevent warning with\n  SQLAlchemy 1.4\n  [rnix]\n\n\n0.4 (2020-11-12)\n----------------\n\n- Fix typo in ``SqlUGMFactory.__init__``.\n  [rnix]\n\n\n0.3 (2020-07-09)\n----------------\n\n- SQL database URL setting key in ini file changed from ``cone.sql.db.url``\n  to ``sql.db.url``.\n  [rnix]\n\n- Add SQL based UGM implementation.\n  [zworkb, rnix]\n\n- Patch ``maker`` on ``cone.sql.session_factory`` if present in\n  ``cone.sql.testing.SQLLayer`` to ensure working session factory when running\n  tests.\n  [rnix]\n\n\n0.2 (2020-05-30)\n----------------\n\n- Introduce ``cone.sql.SQLSessionFactory``. Gets instanciated at application\n  startup as singleton at ``cone.sql.session_factory``.\n  [rnix]\n\n- SQL database URL setting key in ini file changed from ``cone.sql.dbinit.url``\n  to ``cone.sql.db.url``.\n  [rnix]\n\n- SQL database URL definition is only required once in the ``app`` section of\n  the ini file. ``sqlalchemy.url`` can be removed from session filter.\n  [rnix]\n\n- Add SQL based principal ACL support.\n  [rnix]\n\n- Python 3 compatibility.\n  [rnix]\n\n- Fix hex formatting in ``cone.sql.model.GUID.process_bind_param``.\n  [rnix]\n\n- Register SQL session to transaction manager with ``zope.sqlalchemy.register``.\n  [rnix]\n\n- Use ``pyramid_tm`` instead of ``repoze.tm2``. Disabled by default, must be\n  enabled explicitely via ``pyramid.includes``.\n  [rnix]\n\n- Use ``pyramid_retry`` instead of ``repoze.retry``. Disabled by default, must be\n  enabled explicitely via ``pyramid.includes``.\n  [rnix]\n\n- Upgrade to ``cone.app`` 1.0b1.\n  [rnix]\n\n\n0.1 (2017-03-28)\n----------------\n\n- Initial work.\n  [rnix]\n\n\nLicense\n=======\n\nCopyright (c) 2017-2021, BlueDynamics Alliance, Austria\nCopyright (c) 2021-2022, Cone Contributors\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice, this\n  list of conditions and the following disclaimer in the documentation and/or\n  other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/conestack/cone.sql",
    "keywords": "node pyramid cone web",
    "license": "Simplified BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cone.sql",
    "package_url": "https://pypi.org/project/cone.sql/",
    "platform": null,
    "project_url": "https://pypi.org/project/cone.sql/",
    "project_urls": {
      "Homepage": "http://github.com/conestack/cone.sql"
    },
    "release_url": "https://pypi.org/project/cone.sql/0.7/",
    "requires_dist": [
      "cone.app (>=1.0.3)",
      "node.ext.ugm (>=0.9.13)",
      "pyramid-retry",
      "pyramid-tm",
      "setuptools",
      "zope.sqlalchemy",
      "cone.ugm ; extra == 'test'",
      "zope.testrunner ; extra == 'test'",
      "cone.ugm ; extra == 'ugm'"
    ],
    "requires_python": "",
    "summary": "SQLAlchemy integration for cone.app",
    "version": "0.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15994401,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa4d6fda4a39bc32d6476dffc2c584c19011907e50b678a0a477a447bd13b274",
          "md5": "3d752ce4065e8866f2902193ccdc603e",
          "sha256": "aa761b7bd92b6e9fc34f8cf0d43e9e6115c80caa94ad11df6237e1386865c363"
        },
        "downloads": -1,
        "filename": "cone.sql-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3d752ce4065e8866f2902193ccdc603e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13293,
        "upload_time": "2017-03-28T16:00:28",
        "upload_time_iso_8601": "2017-03-28T16:00:28.785162Z",
        "url": "https://files.pythonhosted.org/packages/aa/4d/6fda4a39bc32d6476dffc2c584c19011907e50b678a0a477a447bd13b274/cone.sql-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e1f106a11ee8022544d83b1d89ab4278d19395c5a77954158fa3438021b49bcd",
          "md5": "18a3cdbed6b966d3951d160d1decd9d8",
          "sha256": "74a2d46db319284e53ff29a7e8f7c721136d46ae1e925cf76f815610727c6af7"
        },
        "downloads": -1,
        "filename": "cone.sql-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "18a3cdbed6b966d3951d160d1decd9d8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15743,
        "upload_time": "2020-05-30T18:30:59",
        "upload_time_iso_8601": "2020-05-30T18:30:59.064660Z",
        "url": "https://files.pythonhosted.org/packages/e1/f1/06a11ee8022544d83b1d89ab4278d19395c5a77954158fa3438021b49bcd/cone.sql-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0d39186869e66bfca37ecc30e8930f4bd0e9901d2f75876b47e0ef517f4750d3",
          "md5": "1d3f9667cd8e7ac9dfed2f9de61da5ef",
          "sha256": "0258c9719372529a99648ba130d0f4e40c41f41c63e1c7caa3b67222bd6da649"
        },
        "downloads": -1,
        "filename": "cone.sql-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "1d3f9667cd8e7ac9dfed2f9de61da5ef",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25823,
        "upload_time": "2020-07-09T10:41:11",
        "upload_time_iso_8601": "2020-07-09T10:41:11.316538Z",
        "url": "https://files.pythonhosted.org/packages/0d/39/186869e66bfca37ecc30e8930f4bd0e9901d2f75876b47e0ef517f4750d3/cone.sql-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "494fe4f39a5b953eac5cea5c6b066beb7e22be62edf5274e33b10046d92e4c94",
          "md5": "7f39606162f1ef46fa0eaf3e96aafbea",
          "sha256": "50295415480b58250bd9c5d1788c25d00c1c9070895e879415c6652360556e08"
        },
        "downloads": -1,
        "filename": "cone.sql-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "7f39606162f1ef46fa0eaf3e96aafbea",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25908,
        "upload_time": "2020-11-12T09:57:53",
        "upload_time_iso_8601": "2020-11-12T09:57:53.024575Z",
        "url": "https://files.pythonhosted.org/packages/49/4f/e4f39a5b953eac5cea5c6b066beb7e22be62edf5274e33b10046d92e4c94/cone.sql-0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3ef85d2b8342f53f8bfbbfa975403466bba9e13aaf923425a34eb47337b6b238",
          "md5": "3ee802fe487990dfc360585187aa2468",
          "sha256": "e6d3a9e886bc19f3edf8e552fe5fbbd66f09b65c9e19cf91177eba1cc93cfbe8"
        },
        "downloads": -1,
        "filename": "cone.sql-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "3ee802fe487990dfc360585187aa2468",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26053,
        "upload_time": "2021-11-08T08:58:10",
        "upload_time_iso_8601": "2021-11-08T08:58:10.936072Z",
        "url": "https://files.pythonhosted.org/packages/3e/f8/5d2b8342f53f8bfbbfa975403466bba9e13aaf923425a34eb47337b6b238/cone.sql-0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8834a487fe875b065562cc7ea5af4a384474eaa712f876c69dfa6a1c4b759227",
          "md5": "1634d69f99fbe13c1c86bd70a772e2a0",
          "sha256": "b960aa8351e0e5e0eddff24b375ff1fbc8ee3a152829d93ec139be3f35570603"
        },
        "downloads": -1,
        "filename": "cone.sql-0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1634d69f99fbe13c1c86bd70a772e2a0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 29118,
        "upload_time": "2022-10-06T07:32:53",
        "upload_time_iso_8601": "2022-10-06T07:32:53.031916Z",
        "url": "https://files.pythonhosted.org/packages/88/34/a487fe875b065562cc7ea5af4a384474eaa712f876c69dfa6a1c4b759227/cone.sql-0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b989c182f6d1f54faf95e19b80745ee7de5349121b97277bec7aec37e072b940",
          "md5": "9b07fb2b7eee6a223b224c92aed6551d",
          "sha256": "616cdb5cd84f5712692615e90f876b92dd1e39fd691f4c882cf7c669a1b3345c"
        },
        "downloads": -1,
        "filename": "cone.sql-0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "9b07fb2b7eee6a223b224c92aed6551d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29108,
        "upload_time": "2022-10-06T07:32:55",
        "upload_time_iso_8601": "2022-10-06T07:32:55.959061Z",
        "url": "https://files.pythonhosted.org/packages/b9/89/c182f6d1f54faf95e19b80745ee7de5349121b97277bec7aec37e072b940/cone.sql-0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4294fd916ce7db88c3c027d338bf8e367d8a8ef122dcece80ec7e00aac04f7f8",
          "md5": "6695e7d26e0bc32ceb9dccb7ab93f622",
          "sha256": "bf95da713f2a21c1f71a02dd373deb4faa5af72a929e2b0319bcb0992d92161c"
        },
        "downloads": -1,
        "filename": "cone.sql-0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6695e7d26e0bc32ceb9dccb7ab93f622",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 29792,
        "upload_time": "2022-12-05T11:43:21",
        "upload_time_iso_8601": "2022-12-05T11:43:21.538472Z",
        "url": "https://files.pythonhosted.org/packages/42/94/fd916ce7db88c3c027d338bf8e367d8a8ef122dcece80ec7e00aac04f7f8/cone.sql-0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b5b14c496cb14b40f61761d87e0c3b41fcab555da69967da147bc35fe532d3a",
          "md5": "a0a58fa12b05a974a2e7adae50523c3c",
          "sha256": "eedfb1f690b5e86d9c5861f91b9bdd5ef59130b21f40614409a2e4cdb4442785"
        },
        "downloads": -1,
        "filename": "cone.sql-0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "a0a58fa12b05a974a2e7adae50523c3c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30770,
        "upload_time": "2022-12-05T11:43:23",
        "upload_time_iso_8601": "2022-12-05T11:43:23.949193Z",
        "url": "https://files.pythonhosted.org/packages/2b/5b/14c496cb14b40f61761d87e0c3b41fcab555da69967da147bc35fe532d3a/cone.sql-0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4294fd916ce7db88c3c027d338bf8e367d8a8ef122dcece80ec7e00aac04f7f8",
        "md5": "6695e7d26e0bc32ceb9dccb7ab93f622",
        "sha256": "bf95da713f2a21c1f71a02dd373deb4faa5af72a929e2b0319bcb0992d92161c"
      },
      "downloads": -1,
      "filename": "cone.sql-0.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6695e7d26e0bc32ceb9dccb7ab93f622",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 29792,
      "upload_time": "2022-12-05T11:43:21",
      "upload_time_iso_8601": "2022-12-05T11:43:21.538472Z",
      "url": "https://files.pythonhosted.org/packages/42/94/fd916ce7db88c3c027d338bf8e367d8a8ef122dcece80ec7e00aac04f7f8/cone.sql-0.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2b5b14c496cb14b40f61761d87e0c3b41fcab555da69967da147bc35fe532d3a",
        "md5": "a0a58fa12b05a974a2e7adae50523c3c",
        "sha256": "eedfb1f690b5e86d9c5861f91b9bdd5ef59130b21f40614409a2e4cdb4442785"
      },
      "downloads": -1,
      "filename": "cone.sql-0.7.tar.gz",
      "has_sig": false,
      "md5_digest": "a0a58fa12b05a974a2e7adae50523c3c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 30770,
      "upload_time": "2022-12-05T11:43:23",
      "upload_time_iso_8601": "2022-12-05T11:43:23.949193Z",
      "url": "https://files.pythonhosted.org/packages/2b/5b/14c496cb14b40f61761d87e0c3b41fcab555da69967da147bc35fe532d3a/cone.sql-0.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}