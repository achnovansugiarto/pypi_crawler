{
  "info": {
    "author": "",
    "author_email": "Joe Courtney <jccourtn@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# **Crayon CloudIQ SDK for Python**\n\nThis project is an SDK for Crayon's CloudIQ API that can be used in Python\nscripts and applications. Provides a simple interface to authenticate with \nthe API using Oauth2. It can be used to create tenants, create licensing subscriptions,\nand monitor billing. Anything that can be done in the Cloud-IQ portal can be automated \nusing this package. \n\nIncludes several pre-configured data schema and API methods.\nCustom blocks of data can be posted to the API as Python dictionaries. REST methods: \nGET, POST, PATCH, PUT, and DELETE can be called with an API endpoint and data dictionary as arguments. \n\n## **Installation**\n\n1. Install the crayon-cloudiq-sdk package with the following command:\n\t```\n\tpip install crayon-cloudiq-sdk\n\t```\n\n## **Setup**\nHow to Create Cloud-IQ API Client Credentials\n\n1. Login to Cloud IQ\n2. Choose Manage -> API Management from the top menu\n3. Press the + Add Client button\n4. Choose a name of the client\n5. Choose Resource Flow as the authentication type\n6. Save the Client ID and the Client Secret \n\n## **Usage**\n\n1. Create a new python script\n\n2. Import the CloudIQ class\n\t```\n\tfrom cloudiq import CloudIQ\n\t```\n\n3. Initialize an instance of the CloudIQ class with valid user credentials:\n\t```\n\tfrom cloudiq import CloudIQ\n\n\tCLIENT_ID = xxxxxxx-xxxx-xxxx-xxxx-xxxxxx\n\tCLIENT_SECRET = xxxxxxx-xxxx-xxxx-xxxx-xxxxxx\n\tUSERNAME = \"example@example.com\"\n\tPASSWORD = \"Password123456\"\n\n\tcrayon_api = CloudIQ(CLIENT_ID,CLIENT_SECRET,USERNAME,PASSWORD)\n\t```\n\t**The prefered way of importing credentials is through ENV variables.**\n\t```\n\tfrom os import getenv\n\tfrom cloudiq import CloudIQ\n\n\tCLIENT_ID = getenv('CLIENT_ID')\n\tCLIENT_SECRET = getenv('CLIENT_SECRET')\n\tUSERNAME = getenv('CLOUDIQ_USER')\n\tPASSWORD = getenv('CLOUDIQ_PW')\n\n\tcrayon_api = CloudIQ(CLIENT_ID,CLIENT_SECRET,USERNAME,PASSWORD)\n\t```\n\tENV variables can be set using various methods including injection if using containers and pipelines or through a secrets manager such as Azure KeyVault. To set them on a local system using bash run the following commands:\n\t```\n\texport CLIENT_ID=\"xxxxxxx-xxxx-xxxx-xxxx-xxxxxx\"\n\texport CLIENT_SECRET=\"xxxxxxx-xxxx-xxxx-xxxx-xxxxxx\"\n\texport USERNAME=\"example@example.com\"\n\texport PASSWORD=\"Password123456\"\n\t```\n\tAn alternative method is to use a config.ini file containing the credentials and retrieve them using the configparser module.\n\t```\n\timport configparser\n\tfrom cloudiq import CloudIQ\n\n\t# Parse configuration file\n\ttry:\n\t\tconfig = configparser.ConfigParser()\n\t\tconfig.read('config.ini')\n\t\tID = config['CRAYON_API']['ID']\n\t\tSECRET = config['CRAYON_API']['SECRET']\n\t\tUSER = config['CRAYON_API']['USER']\n\t\tPASS = config['CRAYON_API']['PASS']\n\texcept configparser.Error:\n\t\tprint(\"Configuration Error...config.ini not found\")\n\t\texit()\n\texcept KeyError:\n\t\tprint(\"Configuration Error...configuration not found in config.ini\")\n\t\texit()\n\n\tcrayon_api = CloudIQ(CLIENT_ID,CLIENT_SECRET,USERNAME,PASSWORD)\n\t```\n\t**See examples folder for authentication demos using configparser, ENV variables, and Azure DevOps Pipelines** \n\n## **Returned Data**\n\nData that is returned by the API is saved into a response object (except for getToken and validateToken). The response object contains values such as the status_code, headers, cookies, and the text returned by the API call.\n\n* To return the json data from the response use response.json() class method\n\n* To return the status code use the response.statuscode variable\n\n* All successful API calls either return **200 OK**, **201 Created**, or **204 No Content**\n\n* Most error responses also provide a detailed error message in JSON form\n\n* If you receive a 500 error, the data Schema payload is most likely the issue. It may be formatted incorrectly or missing required fields.\n\n**Remember to handle error statuses when writing automations**\n\n### Error Handling Example using Return Status Code:\n\n```\nresponse = crayon_api.me()\n\nif(int(response.status_code) == 200):\n\t# Handle JSON data\n    print(response.json())\nelse:\n\t# Handle Error\n\tprint(response.status_code)\n\texit(1)\n```\n\nFor a full explanation of the fields within a response object, please review the information in the following links:\n\n* Official Requests.Response class documentation: https://docs.python-requests.org/en/latest/api/#requests.Response \n\n* W3 Schools: https://www.w3schools.com/PYTHON/ref_requests_response.asp\n\n## **Example calls**\n\n1. Make an unauthenticated test ping to the API\n\t```\n\tresponse = crayon_api.ping()\n\tprint(response,json())\n\t```\n\n2. Get information about the currently authenticated user\n\t```\n\tresponse = crayon_api.me()\n\tprint(response.json())\n\t```\n\n3. Make a raw GET request:\n\t```\n\t# retrieves all products in the Azure Active Directory product family within Org 123456\n\tparams = {\n\t\t'OrganizationId': 123456,\n\t\t'Include.ProductFamilyNames': 'Azure Active Directory'\n\t}\n\t# make a GET request to https://api.crayon.com/api/v1/AgreementProducts\n\tresponse = crayon_api.get(\"https://api.crayon.com/api/v1/AgreementProducts\",params)\n\tprint(response.json())\n\t```\n\t**Data can be sent to the API as a standard Python dictionary object**\n\n4. Retrieve a valid authorization token:\n\t```\n\tresponse = crayon_api.getToken()\n\tprint(response)\n\t```\n\n5. Create a tenant using the CustomerTenantDetailed schema:\n\t```\n\t# Set Unique Tenant Variables\n\ttenant_name = \"tenant_name\"\n\tdomain_prefix = \"domain_prefix\"\n\n\t# Initialize Tenant and Agreement objects\n\ttenant = crayon_api.CustomerTenantDetailed(\n\t\ttenant_name=tenant_name,\n\t\tdomain_prefix=domain_prefix,\n\t\torg_id=111111,\n\t\torg_name=\"Fake Org\",\n\t\tinvoice_profile_id=80408, # Default\n\t\tcontact_firstname=\"First\",\n\t\tcontact_lastname=\"Last\",\n\t\tcontact_email=\"email@example.com\",\n\t\tcontact_phone=\"5555555555\",\n\t\taddress_firstname=\"First\",\n\t\taddress_lastname=\"Last\",\n\t\taddress_address=\"75 NoWhere Lane\",\n\t\taddress_city=\"Boston\",\n\t\taddress_countrycode=\"US\",\n\t\taddress_region=\"MA\",\n\t\taddress_zipcode=\"02109\"\n\t)\n\n\tagreement = crayon_api.CustomerTenantAgreement(\n\t\tfirstname=\"First\",\n\t\tlastname=\"Last\",\n\t\tphone_number=\"5555555555\",\n\t\temail=\"email@example.com\"\n\t)\n\n\t#Create New Tenant\n\tnew_tenant = crayon_api.createTenant(tenant.tenant)\n\tprint(new_tenant.json())\n\n\t# Agree to Microsoft Customer Agreement\n\ttenant_id = new_tenant[\"Tenant\"][\"Id\"]  \n\tagreement = crayon_api.createTenantAgreement(tenant_id,agreement.agreement)\n\tprint(agreement.json())\n\t```\n\n6. Buy a Microsoft license for a tenant using the SubscriptionDetailed schema:\n\t```\n\ttenant_id=123456\n\n\t# Create Subscription objects\n\tazure_subscription = crayon_api.SubscriptionDetailed(\n\t\tname=\"Azure P2 Subscription\",\n\t\ttenant_id=tenant_id,\n\t\tpart_number=\"CFQ7TTC0LFK5:0001\",\n\t\tquantity=1,\n\t\tbilling_cycle=1,\n\t\tduration=\"P1M\"\n\t)\n\n\t# Create Azure P2 Subscription\n\tsubscription = crayon_api.createSubscription(azure_subscription.subscription)\n\tprint(subscription.json)\n\t```\n\n##  **Docstring**\n\n```\nfrom cloudiq import CloudIQ\nhelp(CloudIQ)\n```\n\n## **API Documentation**\n\n1. Crayon API Documentation: https://apidocs.crayon.com/\n2. Swagger UI (includes all valid schemas): https://api.crayon.com/docs/index.html\n\n## **Schema currently implemented in CloudIQ class**\n\n1. CustomerTenantDetailed\n2. CustomerTenantAgreement\n3. SubscriptionDetailed\n\n## **Methods currently implemented in CloudIQ class**\n\n1. get\n2. ping\n3. me\n4. getToken\n5. validateToken\n6. getOrganizations\n7. getOrganization\n8. getOrganizationSalesContact\n9. getAgreementProducts\n10. getActivityLogs\n11. getOrganizationHasAccess\n12. getAddresses\n13. getAddress\n14. getSupportedBillingCycles\n15. getAgreements\n16. getAgreementReports\n17. getCustomerTenants\n18. getCustomerTenant\n19. getCustomerTenantDetails\n20. getCustomerTenantAzurePlan\n21. getCustomerTenantAgreements\n22. getBillingCycles\n23. getProductVariantBillingCycles\n24. getBillingCyclesNameDictionary\n25. getBillingStatements\n26. getGroupedBillingStatements\n27. getBillingStatementExcel\n28. getBillingStatementCSV\n29. getBillingStatementJSON\n30. getBlogItems\n31. getClients\n32. getClient\n33. getConsumers\n34. getConsumer\n35. getCrayonAccounts\n36. getCrayonAccount\n37. getGroupings\n38. getGrouping\n39. getInvoiceProfiles\n40. getInvoiceProfile\n41. getProductContainers\n42. getProductContainer\n43. getProductContainerRowIssues\n44. getProductContainerShoppingCart\n45. getPrograms\n46. getProgram\n47. getPublishers\n48. getPublisher\n49. getRegions\n50. getRegionByCode\n51. getUsers\n52. getUser\n53. getUsername\n54. getUsageCost\n55. delete\n56. patch \n57. post\n58. put\n59. createClient\n60. deleteClient\n61. createTenant\n62. createSubscription\n63. createTenantAgreement\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "crayon-cloudiq-sdk",
    "package_url": "https://pypi.org/project/crayon-cloudiq-sdk/",
    "platform": null,
    "project_url": "https://pypi.org/project/crayon-cloudiq-sdk/",
    "project_urls": {
      "Bug Tracker": "https://github.com/blastomussa/crayon-python-sdk/issues",
      "Homepage": "https://github.com/blastomussa/crayon-python-sdk"
    },
    "release_url": "https://pypi.org/project/crayon-cloudiq-sdk/1.0.0/",
    "requires_dist": [
      "requests (>=2.0)"
    ],
    "requires_python": ">=3.7",
    "summary": "SDK for Crayon's Cloud-IQ API",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17120907,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7890c267e47c7519b4a1083f973ff40d541e890c938f24f5d3a287aad21ab032",
          "md5": "80fca9466fe162fdad834b26d86238f6",
          "sha256": "563fa4d3a760d136f44e59d5c21e79a9f78a2228eeab9bcece0f6ba33902df7d"
        },
        "downloads": -1,
        "filename": "crayon_cloudiq_sdk-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "80fca9466fe162fdad834b26d86238f6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 12583,
        "upload_time": "2023-03-02T01:45:47",
        "upload_time_iso_8601": "2023-03-02T01:45:47.417533Z",
        "url": "https://files.pythonhosted.org/packages/78/90/c267e47c7519b4a1083f973ff40d541e890c938f24f5d3a287aad21ab032/crayon_cloudiq_sdk-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aed30231f1096073d1b357b89c70bd76ee63c933898ce4bf1ef25a284efe9563",
          "md5": "fc2a80072dd2d44f3c993d856f14a271",
          "sha256": "d47ddb1ca22760bc72cdd4106219c2e5120735b544a21bbde3adac92ceae3f4a"
        },
        "downloads": -1,
        "filename": "crayon-cloudiq-sdk-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fc2a80072dd2d44f3c993d856f14a271",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 15371,
        "upload_time": "2023-03-02T01:45:48",
        "upload_time_iso_8601": "2023-03-02T01:45:48.575579Z",
        "url": "https://files.pythonhosted.org/packages/ae/d3/0231f1096073d1b357b89c70bd76ee63c933898ce4bf1ef25a284efe9563/crayon-cloudiq-sdk-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7890c267e47c7519b4a1083f973ff40d541e890c938f24f5d3a287aad21ab032",
        "md5": "80fca9466fe162fdad834b26d86238f6",
        "sha256": "563fa4d3a760d136f44e59d5c21e79a9f78a2228eeab9bcece0f6ba33902df7d"
      },
      "downloads": -1,
      "filename": "crayon_cloudiq_sdk-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "80fca9466fe162fdad834b26d86238f6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 12583,
      "upload_time": "2023-03-02T01:45:47",
      "upload_time_iso_8601": "2023-03-02T01:45:47.417533Z",
      "url": "https://files.pythonhosted.org/packages/78/90/c267e47c7519b4a1083f973ff40d541e890c938f24f5d3a287aad21ab032/crayon_cloudiq_sdk-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "aed30231f1096073d1b357b89c70bd76ee63c933898ce4bf1ef25a284efe9563",
        "md5": "fc2a80072dd2d44f3c993d856f14a271",
        "sha256": "d47ddb1ca22760bc72cdd4106219c2e5120735b544a21bbde3adac92ceae3f4a"
      },
      "downloads": -1,
      "filename": "crayon-cloudiq-sdk-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "fc2a80072dd2d44f3c993d856f14a271",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 15371,
      "upload_time": "2023-03-02T01:45:48",
      "upload_time_iso_8601": "2023-03-02T01:45:48.575579Z",
      "url": "https://files.pythonhosted.org/packages/ae/d3/0231f1096073d1b357b89c70bd76ee63c933898ce4bf1ef25a284efe9563/crayon-cloudiq-sdk-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}