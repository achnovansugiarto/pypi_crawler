{
  "info": {
    "author": "Fuzail Palnak",
    "author_email": "fuzailpalnak@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# py_oneliner\n![Licence](https://img.shields.io/github/license/fuzailpalnak/py_oneliner)\n![Python](https://img.shields.io/badge/python-v3.6+-blue.svg)\n![Contributions welcome](https://img.shields.io/badge/contributions-welcome-orange.svg)\n\nA Library build with a propose, single line console print across project to avoid unnecessary console prints.\nThe Library has the capability to handle all print statements in one line across the project.\n\nWhen there are multiple for loops iterating over a list of task and those task,\nagain run have sub task which again have to be looped over, Therefore knowing their status of each loop during execution\nis essential, or knowing where the code has reached for that matter, keeping all that in mind the library is design,\nto just display a sequence of execution in one line console print, so user is aware  about the progress.\n\n![demo4](https://user-images.githubusercontent.com/24665570/96991506-29e99500-1546-11eb-8180-195bb5334c8b.gif)\n\n## Installation\n    \n    pip install py-oneliner\n\n## Usage\n\n### One Line Print   \n```python\nfrom py_oneliner import one_liner\none_liner.one_line(tag=\"TEST\", tag_data=\"TESTING PRINT\")\n``` \n\n## One Line Print with Reset  \n`to_reset_data` will reset the fused print statement when specified `tag` is encountered\n \n```python\nfrom py_oneliner import one_liner\none_liner.one_line(tag=\"TEST\", tag_data=\"TESTING PRINT\", to_reset_data=True)\n``` \n\n## Example\n\n#### WithOut Color\n\n```python\nfrom py_oneliner import one_liner\nStages = [\"Start\", \"Middle\", \"End\"]\n\nfor s in Stages:\n    one_liner.one_line(tag=\"TEST\", tag_data=\"TESTING PRINT\", to_reset_data=True)\n\n    for i, j1 in enumerate(2 * [1]):\n        one_liner.one_line(\"first_loop\", f\"{i + 1}/{2}\")\n\n    for i, j1 in enumerate(3 * [1]):\n        one_liner.one_line(\n            \"second_loop\", f\"{i + 1}/{3}\"\n        )\n        for x, y in enumerate(2 * [1]):\n            one_liner.one_line(\n                \"second_loop_nested_1\",\n                f\"{x + 1}/{2}\",\n            )\n```\n![demo1](https://user-images.githubusercontent.com/24665570/96997734-f0b62280-154f-11eb-9066-1031f9719599.gif)\n\n\n#### With Color\n\n```python\nfrom py_oneliner import one_liner\nStages = [\"Start\", \"Middle\", \"End\"]\n\nfor s in Stages:\n    one_liner.one_line(tag=\"TEST\", tag_data=\"TESTING PRINT\", to_reset_data=True)\n\n    for i, j1 in enumerate(2 * [1]):\n        one_liner.one_line(\"first_loop\", f\"{i + 1}/{2}\", tag_color=\"red\", tag_data_color=\"green\")\n    for i, j1 in enumerate(3 * [1]):\n        one_liner.one_line(\n            \"second_loop\", f\"{i + 1}/{3}\", tag_color=\"yellow\", tag_data_color=\"grey\"\n        )\n        for x, y in enumerate(2 * [1]):\n            one_liner.one_line(\n                \"second_loop_nested_1\",\n                f\"{x + 1}/{2}\",\n                tag_color=\"magenta\",\n                tag_data_color=\"cyan\"\n            )\n\n```\n![demo2](https://user-images.githubusercontent.com/24665570/96997880-396ddb80-1550-11eb-912f-276a574b09de.gif)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/fuzailpalnak/py_oneliner",
    "keywords": "Python,Print,OneLine Print",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "py-oneliner",
    "package_url": "https://pypi.org/project/py-oneliner/",
    "platform": "",
    "project_url": "https://pypi.org/project/py-oneliner/",
    "project_urls": {
      "Homepage": "https://github.com/fuzailpalnak/py_oneliner"
    },
    "release_url": "https://pypi.org/project/py-oneliner/0.0.1/",
    "requires_dist": null,
    "requires_python": "~=3.6",
    "summary": "Dynamic print statements for Python Projects",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8483565,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "32dce2d7add8452c810b1d308f24edfcaf2b4750cd35b6a5e75fd6adde014534",
          "md5": "5e0188d3fcfc112303bf11fa53d67c26",
          "sha256": "2be3c45b94c9005690460c63e821ead7b9e5e9164fb31892b448bb7429bc719f"
        },
        "downloads": -1,
        "filename": "py_oneliner-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5e0188d3fcfc112303bf11fa53d67c26",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.6",
        "size": 3564,
        "upload_time": "2020-10-23T11:39:00",
        "upload_time_iso_8601": "2020-10-23T11:39:00.548223Z",
        "url": "https://files.pythonhosted.org/packages/32/dc/e2d7add8452c810b1d308f24edfcaf2b4750cd35b6a5e75fd6adde014534/py_oneliner-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "32dce2d7add8452c810b1d308f24edfcaf2b4750cd35b6a5e75fd6adde014534",
        "md5": "5e0188d3fcfc112303bf11fa53d67c26",
        "sha256": "2be3c45b94c9005690460c63e821ead7b9e5e9164fb31892b448bb7429bc719f"
      },
      "downloads": -1,
      "filename": "py_oneliner-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "5e0188d3fcfc112303bf11fa53d67c26",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "~=3.6",
      "size": 3564,
      "upload_time": "2020-10-23T11:39:00",
      "upload_time_iso_8601": "2020-10-23T11:39:00.548223Z",
      "url": "https://files.pythonhosted.org/packages/32/dc/e2d7add8452c810b1d308f24edfcaf2b4750cd35b6a5e75fd6adde014534/py_oneliner-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}