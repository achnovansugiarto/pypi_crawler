{
  "info": {
    "author": "lesclaz",
    "author_email": "lesclaz95@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: MIT License",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3",
      "Topic :: Internet"
    ],
    "description": "# PyLibSuitETECSA\n\n## Una librería escrita en Python para SuitETECSA\n\nPyLibSuitETECSA es una API que interactúa con los servicios ofrecidos\npor [ETECSA](https://www.etecsa.cu/), para facilitar el desarrollo de aplicaciones\nPython dedicadas a la gestión de estos mediante los portales\n[de usuario](https://www.portal.nauta.cu/) y [cautivo](https://secure.etecsa.net:8443/)\nde nauta, ahorrándoles tiempo, esfuerzos y código a los desarrolladores.\n\nHasta el momento PyLibSuitETECSA implementa funciones para:\n\n* En el caso del portal [de usuario](https://www.portal.nauta.cu/) de nauta:\n  * Iniciar sesión.\n  * Obtener información de la cuenta logueada.\n  * Recargar la cuenta logueada.\n  * Transferir saldo a otra cuenta nauta.\n  * Transferir saldo para pago de cuota (`solo para cuentas Nauta Hogar`).\n  * Cambiar la contraseña de la cuenta de acceso.\n  * Cambiar la contraseña de la cuenta de correo asociada.\n  * Obtener las conexiones realizadas en el periódo `año-mes` especificado.\n  * Obtener las recargas realizadas en el periódo `año-mes` especificado.\n  * Obtener las transferencias realizadas en el periódo `año-mes` especificado.\n  * Obtener los pagos de cuotas realizados en el periódo `año-mes` especificado (`solo para cuentas Nauta Hogar`).\n  * Obtener las útimas (`la cantidad puede ser definida por el desarrollador que use la librería; por defecto es 5`) operaciones (`las antes mencionadas`).\n* En el caso del portal [cautivo](https://secure.etecsa.net:8443/) de nauta:\n  * Inicia sesión.\n  * Cierra sesión.\n  * Obtiene el tiempo disponible en la cuenta.\n  * Obtiene el saldo de la cuenta.\n\n## Interactuar con el portal [de usuario](https://www.portal.nauta.cu/) de nauta\n\nPara interactuar con el portal [de usuario](https://www.portal.nauta.cu/) de nauta\nPyLibSuitETECSA proporciona dos clases; la más sencilla de usar es [UserPortalClient](#usando-userportalclient) ubicada en PyLibSuitETECSA.api y es la que se recomienda para\nla mayoria de apps. Igualmente PyLibSuitETECSA proporciona la clase [UserPortal](#usando-userportal)\nubicada en PyLibSuitETECSA.core.protocol, un protocolo que permite a los desarrolladores\ntener \"más control\" a la hora de interactuar con el portal.\n\n### **Usando UserPortalClient**\n\nEjercicio donde:\n\n* Iniciamos sesión en el portal.\n* Tratamos de recargar la cuenta.\n* Tratamos de transferir saldo a otra cuenta.\n* Obtenemos las últimas 5 connexiones de la cuenta y las imprimimos en pantalla.\n\n```python\n#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nfrom PyLibSuitETECSA.api import UserPortalClient\nfrom PyLibSuitETECSA.core.exception import RechargeException,\\\n    TransferException\nfrom PyLibSuitETECSA.utils import Action\n\nuser_portal_cli = UserPortalClient(\n    \"user.name@nauta.com.cu\",   # Cambiar por una cuenta real\n    \"password\"                  # Cambiar por la contraseña de la cuenta\n)\n\n# Crea una sesión que se almacena en la variable\n# user_portal_cli.session\nuser_portal_cli.init_session()\n\n# Obtiene la imagen captcha del portal y la guarda\n# en un archivo llamado 'captcha.png'\nwith open('captcha.png', 'wb') as fp:\n    fp.write(\n        user_portal_cli.captcha_as_bytes\n    )\n\n# Loguea la cuenta en el portal\nuser_portal_cli.login(\n    input('captcha code: ')\n)\n\n# Trata de recargar la cuenta y en caso de error\n# lo imprime en pantalla\ntry:\n    user_portal_cli.recharge(\n        \"1234567890123456\"\n    )\nexcept RechargeException as ex:\n    print(f'Error al recargar :: {ex.args[0]}')\n\n# Trata de transferir saldo a otra cuenta y en caso\n# de errores los inprime en pantalla\ntry:\n    user_portal_cli.transfer(\n        250.25,\n        \"user.name@nauta.co.cu\"\n    )\nexcept TransferException as ex:\n    print(f'Error al transferir :: {ex.args[0]}')\n\n# Obtiene las últimas 5 conexiones realizadas por la cuenta\n# y las imprime en pantalla en formato json\nconnections = user_portal_cli.get_lasts(\n    Action.GET_CONNECTIONS\n)\nfor connection in connections:\n    print(connection.__dict__)\n\n```\n\nSalida:\n\n```console\ncaptcha code: DCYTHZ\nError al recargar :: El código de recarga es incorrecto.\nError al transferir :: ['El campo saldo a transferir debe ser menor o igual que 14761']\n{'start_session': datetime.datetime(2023, 1, 22, 22, 19, 11), 'end_session': datetime.datetime(2023, 1, 22, 22, 24, 8), 'duration': 297, 'uploaded': 275456, 'downloaded': 1782579, 'import_': 0.99}\n{'start_session': datetime.datetime(2023, 1, 22, 11, 26, 8), 'end_session': datetime.datetime(2023, 1, 22, 14, 28, 13), 'duration': 10925, 'uploaded': 17637048, 'downloaded': 244454522, 'import_': 36.42}\n{'start_session': datetime.datetime(2023, 1, 21, 16, 53, 29), 'end_session': datetime.datetime(2023, 1, 22, 1, 36, 8), 'duration': 31359, 'uploaded': 152746065, 'downloaded': 2168958484, 'import_': 104.53}\n{'start_session': datetime.datetime(2023, 1, 20, 18, 19, 56), 'end_session': datetime.datetime(2023, 1, 20, 18, 25, 16), 'duration': 320, 'uploaded': 447488, 'downloaded': 8409579, 'import_': 1.07}\n{'start_session': datetime.datetime(2023, 1, 20, 17, 29, 40), 'end_session': datetime.datetime(2023, 1, 20, 18, 12, 5), 'duration': 2545, 'uploaded': 7140802, 'downloaded': 113592238, 'import_': 8.49}\n```\n\n## Métodos y propiedades de UserPortalClient\n\n### Métodos\n\n<details>\n    <summary>Nauta</summary>\n    <table>\n        <thead>\n            <tr>\n                <td>Método</td>\n                <td>Función</td>\n            </tr>\n        </thead>\n        <tr>\n            <td>init_session</td>\n            <td>Crea la sesión donde se guardan las cookies y datos</td>\n        </tr>\n        <tr>\n            <td>login</td>\n            <td>Loguea al usuario en el portal y carga la información de la cuenta</td>\n        </tr>\n        <tr>\n            <td>recharge</td>\n            <td>Recarga la cuenta logueada</td>\n        </tr>\n        <tr>\n            <td>transfer</td>\n            <td>Transfiere saldo a otra cuenta nauta</td>\n        </tr>\n        <tr>\n            <td>change_password</td>\n            <td>Cambia la contraseña de la cuenta logueada</td>\n        </tr>\n        <tr>\n            <td>change_email_password</td>\n            <td>Cambia la contraseña de la cuenta de correo asociada a la cuenta logueada</td>\n        </tr>\n        <tr>\n            <td>get_lasts</td>\n            <td>Devuelve las últimas <b>large</b> <b>action</b> realizadas, donde <b>large</b> es la cantidad Ex: 5 y <b>action</b> las operaciones realizadas Ex: <b>UserPortal.ACTION_CONNECTIONS</b> (las <b>action</b> disponibles son: <b>UserPortal.ACTION_CONNECTIONS</b>, <b>UserPortal.ACTION_RECHARGES</b>, <b>UserPortal.ACTION_TRANSFER</b> y <b>UserPortal.ACTION_QUOTE_FUNDS</b>, esta última solo para nauta hogar)</td>\n        </tr>\n        <tr>\n            <td>get_connections</td>\n            <td>Devuelve las conexiones realizadas en el mes especificado incluyendo el año (<b>año-mes</b>: 2022-03)</td>\n        </tr>\n        <tr>\n            <td>get_recharges</td>\n            <td>Devuelve las recargas realizadas en el mes especificado incluyendo el año (<b>año-mes</b>: 2022-03)</td>\n        </tr>\n        <tr>\n            <td>get_transfers</td>\n            <td>Devuelve las transferencias realizadas en el mes especificado incluyendo el año (<b>año-mes</b>: 2022-03)</td>\n        </tr>\n    </table>\n</details>\n\n<details>\n    <summary>Nauta Hogar</summary>\n    <table>\n        <thead>\n            <tr>\n                <td>Método</td>\n                <td>Función</td>\n            </tr>\n        </thead>\n    <tr>\n        <td>pay_nauta_home</td>\n        <td>Transfiere saldo a la cuota de nauta hogar.</td>\n    </tr>\n    <tr>\n        <td>get_quotes_fund</td>\n        <td>Devuelve los fondos de cuota realizados en el mes especificado incluyendo el año (<b>año-mes</b>: 2022-03)</td>\n    </tr>\n    </table>\n</details>\n\n### Propiedades\n\n<details>\n    <summary>Nauta</summary>\n    <table>\n        <thead>\n            <tr>\n                <td>Propiedad</td>\n                <td>Dato devuelto</td>\n            </tr>\n        </thead>\n        <tr>\n            <td>captcha_as_bytes</td>\n            <td>Imagen captcha en bytes.</td>\n        </tr>\n        <tr>\n            <td>blocking_date</td>\n            <td>Fecha de bloqueo.</td>\n        </tr>\n        <tr>\n            <td>date_of_elimination</td>\n            <td>Fecha de eliminación.</td>\n        </tr>\n        <tr>\n            <td>account_type</td>\n            <td>Tipo de cuenta.</td>\n        </tr>\n        <tr>\n            <td>service_type</td>\n            <td>Tipo de servicio.</td>\n        </tr>\n        <tr>\n            <td>credit</td>\n            <td>Saldo.</td>\n        </tr>\n        <tr>\n            <td>time</td>\n            <td>Tiempo disponible.</td>\n        </tr>\n        <tr>\n            <td>mail_account</td>\n            <td>Cuenta de correo asociada.</td>\n        </tr>\n    </table>\n</details>\n\n<details>\n    <summary>Nauta Hogar</summary>\n    <table>\n        <thead>\n            <tr>\n                <td>Propiedad</td>\n                <td>Dato devuelto</td>\n            </tr>\n        </thead>\n        <tr>\n            <td>offer</td>\n            <td>Oferta</td>\n        </tr>\n        <tr>\n            <td>monthly_fee</td>\n            <td>Cuota mensual</td>\n        </tr>\n        <tr>\n            <td>download_speeds</td>\n            <td>Velocidad de bajada</td>\n        </tr>\n        <tr>\n            <td>upload_speeds</td>\n            <td>Velocidad de subida</td>\n        </tr>\n        <tr>\n            <td>phone</td>\n            <td>Teléfono</td>\n        </tr>\n        <tr>\n            <td>link_identifiers</td>\n            <td>Identificador del enlace</td>\n        </tr>\n        <tr>\n            <td>link_status</td>\n            <td>Estado del enlace</td>\n        </tr>\n        <tr>\n            <td>activation_date</td>\n            <td>Fecha de activación</td>\n        </tr>\n        <tr>\n            <td>blocking_date_home</td>\n            <td>Fecha de bloqueo</td>\n        </tr>\n        <tr>\n            <td>date_of_elimination_home</td>\n            <td>Fecha de eliminación</td>\n        </tr>\n        <tr>\n            <td>quota_fund</td>\n            <td>Fondo de cuota</td>\n        </tr>\n        <tr>\n            <td>voucher</td>\n            <td>Bono</td>\n        </tr>\n        <tr>\n            <td>debt</td>\n            <td>Deuda</td>\n        </tr>\n    </table>\n</details>\n\n**Nota**: Los `métodos` y `propiedades` disponibles para `Nauta` también lo están para `Nauta Hogar`.\n\n### **Usando UserPortal**\n\nMismo ejercicio que con la clase [UserPortalClient](#usando-nautaclient)\n\n```python\n#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nfrom PyLibSuitETECSA.core.protocol import UserPortal\nfrom PyLibSuitETECSA.core.exception import RechargeException,\\\n    TransferException\nfrom PyLibSuitETECSA.utils import Action\n\n# Crea una sesión que se almacena en la variable\n# session\nsession = UserPortal.create_session()\n\n# Obtiene la imagen captcha del portal y la guarda\n# en un archivo llamado 'captcha.png'\nwith open('captcha.png', 'wb') as fp:\n    fp.write(\n        UserPortal.get_captcha(session)\n    )\n\n# Loguea la cuenta en el portal\nUserPortal.login(\n    session=session,\n    username=\"user.name@nauta.com.cu\",\n    password=\"password\",\n    captcha_code=input('captcha code: ')\n)\n\n# Trata de recargar la cuenta y en caso de error\n# lo imprime en pantalla\ntry:\n    UserPortal.recharge(\n        session=session,\n        recharge_code=\"1234567890123456\"\n    )\nexcept RechargeException as ex:\n    print(f'Error al recargar :: {ex.args[0]}')\n\n# Trata de transferir saldo a otra cuenta y en caso\n# de errores los inprime en pantalla\ntry:\n    UserPortal.transfer(\n        session=session,\n        mount_to_transfer=250.25,\n        account_to_transfer=\"lesly.cintra@nauta.co.cu\"\n    )\nexcept TransferException as ex:\n    print(f'Error al transferir :: {ex.args[0]}')\n\n# Obtiene las últimas 5 conexiones realizadas por la cuenta\n# y las imprime en pantalla en formato json\nconnections = UserPortal.get_lasts(\n    session=session,\n    action=Action.GET_CONNECTIONS\n)\nfor connection in connections:\n    print(connection.__dict__)\n\n```\n\nSalida:\n\n```console\ncaptcha code: 2GH9SV\nError al recargar :: El código de recarga es incorrecto.\nError al transferir :: ['El campo saldo a transferir debe ser menor o igual que 14761']\n{'start_session': datetime.datetime(2023, 1, 22, 22, 19, 11), 'end_session': datetime.datetime(2023, 1, 22, 22, 24, 8), 'duration': 297, 'uploaded': 275456, 'downloaded': 1782579, 'import_': 0.99}\n{'start_session': datetime.datetime(2023, 1, 22, 11, 26, 8), 'end_session': datetime.datetime(2023, 1, 22, 14, 28, 13), 'duration': 10925, 'uploaded': 17637048, 'downloaded': 244454522, 'import_': 36.42}\n{'start_session': datetime.datetime(2023, 1, 21, 16, 53, 29), 'end_session': datetime.datetime(2023, 1, 22, 1, 36, 8), 'duration': 31359, 'uploaded': 152746065, 'downloaded': 2168958484, 'import_': 104.53}\n{'start_session': datetime.datetime(2023, 1, 20, 18, 19, 56), 'end_session': datetime.datetime(2023, 1, 20, 18, 25, 16), 'duration': 320, 'uploaded': 447488, 'downloaded': 8409579, 'import_': 1.07}\n{'start_session': datetime.datetime(2023, 1, 20, 17, 29, 40), 'end_session': datetime.datetime(2023, 1, 20, 18, 12, 5), 'duration': 2545, 'uploaded': 7140802, 'downloaded': 113592238, 'import_': 8.49}\n```\n\n## Usando NautaClient\n\n```python\nimport time\n\nfrom PyLibSuitETECSA.api import NautaClient  # se importa el cliente para el portal cautivo de nauta\n\nnauta_ci = NautaClient(  # se instancia el cliente\n    \"usuario@nauta.com.cu\",\n    \"Contraseña\"\n)\n\nnauta_ci.init_session()  # se inicia la session donde se guardan las cookies y datos\n\nwith nauta_ci.login():  # se inicia sesión en el portal y se mantiene abierta durante un minuto\n    print(nauta_ci.remaining_time)\n    time.sleep(60)\n\n```\n\n## Funciones y propiedades de UserPortalClient\n\n### Funciones\n\n* init_session: Crea la session donde se guardan las cookies y datos\n* login: Loguea al usuario en el portal\n* logout: Cierra la sesión abierta\n* load_last_session: Carga la última session creada\n\n### Propiedades\n\n* is_logged_in: Si se está loagueado en el portal\n* user_credit: Saldo de la cuenta\n* remaining_time: Tiempo restante\n\n## Contribuir\n\n**IMPORTANTE**: PyLibSuitETESA necesita compatibilidad con nauta hogar.\n\nTodas las contribuciones son bienvenidas. Puedes ayudar trabajando en uno de los issues existentes.\nClona el repo, crea una rama para el issue que estés trabajando y cuando estés listo crea un Pull Request.\n\nTambién puedes contribuir difundiendo esta herramienta entre tus amigos y en tus redes. Mientras\nmás grande sea la comunidad más sólido será el proyecto.\n\nSi te gusta el proyecto dale una estrella para que otros lo encuentren más fácilmente.\n\n## Dependencias\n\n```text\nrequests~=2.27.1\nbeautifulsoup4~=4.10.0\npytest~=7.1.2\nsetuptools~=60.2.0\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/SuitETECSA/PyLibSuitETECSA",
    "keywords": "ETECSA nauta tools",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "PyLibSuitETECSA",
    "package_url": "https://pypi.org/project/PyLibSuitETECSA/",
    "platform": "Unix",
    "project_url": "https://pypi.org/project/PyLibSuitETECSA/",
    "project_urls": {
      "Homepage": "https://github.com/SuitETECSA/PyLibSuitETECSA"
    },
    "release_url": "https://pypi.org/project/PyLibSuitETECSA/1.0.0b1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Una API que interactúa con los servicios web de ETECSA.",
    "version": "1.0.0b1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16968708,
  "releases": {
    "1.0.0b1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ad9688a24d19ff710b424f218f332ef88b35f815a4f77803dd1c9001c16d415",
          "md5": "2f0369e9ce07392e1fc77302012ab8dd",
          "sha256": "7b516153bb0921c2c6ce9eb64b9fd364032e427727ff04edf0f52dd185a4392f"
        },
        "downloads": -1,
        "filename": "PyLibSuitETECSA-1.0.0b1.tar.gz",
        "has_sig": false,
        "md5_digest": "2f0369e9ce07392e1fc77302012ab8dd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25926,
        "upload_time": "2023-02-22T00:57:31",
        "upload_time_iso_8601": "2023-02-22T00:57:31.902682Z",
        "url": "https://files.pythonhosted.org/packages/0a/d9/688a24d19ff710b424f218f332ef88b35f815a4f77803dd1c9001c16d415/PyLibSuitETECSA-1.0.0b1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0ad9688a24d19ff710b424f218f332ef88b35f815a4f77803dd1c9001c16d415",
        "md5": "2f0369e9ce07392e1fc77302012ab8dd",
        "sha256": "7b516153bb0921c2c6ce9eb64b9fd364032e427727ff04edf0f52dd185a4392f"
      },
      "downloads": -1,
      "filename": "PyLibSuitETECSA-1.0.0b1.tar.gz",
      "has_sig": false,
      "md5_digest": "2f0369e9ce07392e1fc77302012ab8dd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 25926,
      "upload_time": "2023-02-22T00:57:31",
      "upload_time_iso_8601": "2023-02-22T00:57:31.902682Z",
      "url": "https://files.pythonhosted.org/packages/0a/d9/688a24d19ff710b424f218f332ef88b35f815a4f77803dd1c9001c16d415/PyLibSuitETECSA-1.0.0b1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}