{
  "info": {
    "author": "jarbasAI,Alex",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Py3jsondb\n\nPython dict based database with persistence and search capabilities\n\nFor those times when you need something simple and sql is overkill\n\nsupport add, update, delete in any level nested json tree\n\n## Features\n\n- pure python\n- save and load from file\n- search recursively by key and key/value pairs\n- fuzzy search\n- supports arbitrary objects\n- supports comments in saved files\n- supports operation in any level nested json tree\n\n## Install\n\n```bash\npip3 install py3jsondb\n```\n\n## Usage\n\n### Json Format\n\n```python\n{\n    'table1 name':[\n                    {'entry1_item1_name':'entry1_item1_value,'entry1_item2_name':'entry1_item2_value,....},\n                    {'entry2_item1_name':'entry2_item1_value','entry2_item2_name':'entry2_item2_value',....},\n                    .........\n                    ]\n    'table2 name':[\n                    ........\n                    ]\n}\n```\n\n### JsonDatabase\n\nEver wanted to search a dict?\n\nLet's create a dummy database with users\nand Add some entrys of users\n\n```python\nfrom py3jsondb import JsonDatabase\n\ndb_path = \"users.db\"\n\nwith JsonDatabase(\"users\", db_path) as db:\n    # add some users to the database\n\n    for user in [\n        {\"name\": \"bob\", \"age\": 12},\n        {\"name\": \"bobby\"},\n        {\"name\": [\"joe\", \"jony\"]},\n        {\"name\": \"john\"},\n        {\"name\": \"jones\", \"age\": 35},\n        {\"name\": \"joey\", \"birthday\": \"may 12\"}]:\n        db.add_entry(user)\n        \n    # pretty print database contents\n    db.print()\n\n\n# auto saved when used with context manager\n# db.save()\n\n\n```\n\nadd, change,delete table\n\n```python\nfrom py3jsondb import JsonDatabase\n\ndb_path = \"users.db\"\n\nwith JsonDatabase(\"users\", db_path) as db:\n    \n    db.add_table(\"test\")\n    # add a new table, now you have two tables: users and test\n    # and change the current table to test.\n    db.use_table(\"users\")\n    # change the current table to users.\n    db.delete_table(\"test\")\n    #delete the table test, now have only one table:users.\n\n```\n\nupdating an existing entry and remove entry\n\n```python\n# get database item\nitem = {\"name\": \"bobby\"}\n\nitem_id = db.get_entry_id(item)\n\nif item_id >= 0:\n    new_item = {\"name\": \"don't call me bobby\"}\n    db.update_entry(item_id, new_item)\nelse:\n    print(\"item not found in database\")\n\ndb.remove_entry(item_id)\n# clear changes since last commit\ndb.reload()\n```\n\nadd, update and delete child in entrys\n\n```python\nfrom py3jsondb import JsonDatabase\n\ndb_path = \"users.db\"\n\nwith JsonDatabase(\"users\", db_path) as db:\n    \n    db.add_entry({\"name\":\"john\",\"age\":\"33\"})\n    # add a new entry\n    entry_id = db.get_entry_id({\"name\":\"john\"},strictly=False)\n    # get the entry id\n    db.add_child_to_entry(entry_id,{\"name\":\"bobby\",\"age\":12})\n    # add child to entry\n    db.update_child_of_entry(entry_id,{\"name\":\"bobby\",\"age\":15})\n    # update child of entry to new value\n    db.delete_child_of_entry(entry_id)\n    # delete child of entry\n\n```\n\nadd, update and delete any node  in any nested json tree\n\n```python\nfrom py3jsondb import JsonDatabase\n\ndb_path = \"users.db\"\n\nwith JsonDatabase(\"users\", db_path) as db:\n    \n    entry_id = db.add_entry({\"name\":\"john\",\"age\":\"33\"})\n    # add a new entry\n    db.add_child_to_entry(entry_id,{\"name\":\"bobby\",\"age\":12})\n    # add child to entry\n    child_path = db.get_child_path_of_entry(entry_id)\n    # get the path of entry\n    #child_path = db.get_path_by_key_value(\"name\",\"bobby\")[0]\n    # get the path via name and bobby\n    db.add_child_to_path(child_path,{\"grade\":100})\n    # add child to the path\n    db.delete_child_of_path(child_path)\n    # delete child of path\n\n```\n\n\nsearch entries by key\n\n```python\nfrom py3jsondb import JsonDatabase\n\ndb_path = \"users.db\"\n\ndb = JsonDatabase(\"users\", db_path) # load db created in previous example\n\n# search by exact key match, return a list of result\nusers_with_defined_age = db.search_by_key(\"age\")\n\nfor user in users_with_defined_age:\n    print(user[\"name\"], user[\"age\"])\n    \n# fuzzy search\nusers = db.search_by_key(\"birth\", fuzzy=True)\nfor user, conf in users:\n    print(\"matched with confidence\", conf)\n    print(user[\"name\"], user[\"birthday\"])\n```\n\nsearch by key value pair\n\n```python\n# search by key/value pair\nusers_12years_old = db.search_by_value(\"age\", 12)\n\nfor user in users_12years_old:\n    assert user[\"age\"] == 12\n\n# fuzzy search\njon_users = db.search_by_value(\"name\", \"jon\", fuzzy=True)\nfor user, conf in jon_users:\n    print(user[\"name\"])\n    print(\"matched with confidence\", conf)\n    # NOTE that one of the users has a list instead of a string in the name, it also matches\n```\n\nYou can save arbitrary objects to the database\n\n```python\nfrom py3jsondb import JsonDatabase\n\ndb = JsonDatabase(\"users\", \"~/databases/users.json\")\n\n\nclass User:\n    def __init__(self, email, key=None, data=None):\n        self.email = email\n        self.secret_key = key\n        self.data = data\n\nuser1 = User(\"first@mail.net\", data={\"name\": \"jonas\", \"birthday\": \"12 May\"})\nuser2 = User(\"second@mail.net\", \"secret\", data={\"name\": [\"joe\", \"jony\"], \"age\": 12})\n\n# objects will be \"jsonified\" here, they will no longer be User objects\n# if you need them to be a specific class use some ORM lib instead (SQLAlchemy is great)\ndb.add_entry(user1)\ndb.add_entry(user2)\n\n# search entries with non empty key\nprint(db.search_by_key(\"secret_key\"))\n\n# search in user provided data\nprint(db.search_by_key(\"birth\", fuzzy=True))\n\n# search entries with a certain value\nprint(db.search_by_value(\"age\", 12))\nprint(db.search_by_value(\"name\", \"jon\", fuzzy=True))\n\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/alex-testlab/py3jsondb",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "py3jsondb",
    "package_url": "https://pypi.org/project/py3jsondb/",
    "platform": null,
    "project_url": "https://pypi.org/project/py3jsondb/",
    "project_urls": {
      "Homepage": "https://github.com/alex-testlab/py3jsondb"
    },
    "release_url": "https://pypi.org/project/py3jsondb/1.0.0/",
    "requires_dist": [
      "pyxdg",
      "fasteners"
    ],
    "requires_python": "",
    "summary": "searchable json database, easy to add,update,delete and search in any level nested json tree",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16287946,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "78d1e929ed91cb64729a5bfb28da814e7ab4815c7e38d4009cceee52cb403921",
          "md5": "3a21f575fbcae10f061d3fa43c4c9a17",
          "sha256": "c4ffd380eb26b3aa61ea4becbc8afe52142baf08179bc180dc56ca2ea9abb16c"
        },
        "downloads": -1,
        "filename": "py3jsondb-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3a21f575fbcae10f061d3fa43c4c9a17",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 14135,
        "upload_time": "2023-01-03T10:05:42",
        "upload_time_iso_8601": "2023-01-03T10:05:42.705355Z",
        "url": "https://files.pythonhosted.org/packages/78/d1/e929ed91cb64729a5bfb28da814e7ab4815c7e38d4009cceee52cb403921/py3jsondb-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bc5bb290df1c4b1988ad8c549af480da0bf9dd89d3c7e99c4d1ca50facd3fd6a",
          "md5": "631275a5959b9c0fa937160c0a4d2599",
          "sha256": "2afd2b53de8682b158da993ebf75c0b20c8d2909e338b946e057a00cffc0023e"
        },
        "downloads": -1,
        "filename": "py3jsondb-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "631275a5959b9c0fa937160c0a4d2599",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14165,
        "upload_time": "2023-01-03T10:05:44",
        "upload_time_iso_8601": "2023-01-03T10:05:44.370838Z",
        "url": "https://files.pythonhosted.org/packages/bc/5b/b290df1c4b1988ad8c549af480da0bf9dd89d3c7e99c4d1ca50facd3fd6a/py3jsondb-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "78d1e929ed91cb64729a5bfb28da814e7ab4815c7e38d4009cceee52cb403921",
        "md5": "3a21f575fbcae10f061d3fa43c4c9a17",
        "sha256": "c4ffd380eb26b3aa61ea4becbc8afe52142baf08179bc180dc56ca2ea9abb16c"
      },
      "downloads": -1,
      "filename": "py3jsondb-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3a21f575fbcae10f061d3fa43c4c9a17",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 14135,
      "upload_time": "2023-01-03T10:05:42",
      "upload_time_iso_8601": "2023-01-03T10:05:42.705355Z",
      "url": "https://files.pythonhosted.org/packages/78/d1/e929ed91cb64729a5bfb28da814e7ab4815c7e38d4009cceee52cb403921/py3jsondb-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bc5bb290df1c4b1988ad8c549af480da0bf9dd89d3c7e99c4d1ca50facd3fd6a",
        "md5": "631275a5959b9c0fa937160c0a4d2599",
        "sha256": "2afd2b53de8682b158da993ebf75c0b20c8d2909e338b946e057a00cffc0023e"
      },
      "downloads": -1,
      "filename": "py3jsondb-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "631275a5959b9c0fa937160c0a4d2599",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 14165,
      "upload_time": "2023-01-03T10:05:44",
      "upload_time_iso_8601": "2023-01-03T10:05:44.370838Z",
      "url": "https://files.pythonhosted.org/packages/bc/5b/b290df1c4b1988ad8c549af480da0bf9dd89d3c7e99c4d1ca50facd3fd6a/py3jsondb-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}