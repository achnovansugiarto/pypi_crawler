{
  "info": {
    "author": "Hanson",
    "author_email": "821058392@qq.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "本模块是pyzabbix模块的升级版，结合官方zabbix api实现了更加复杂的功能，但是调用起来相当方便：\n\n1. *根据主机名获取对应的hostID*，对应函数get_hostID\n\n2. *根据模板名获取对应的templateID*，**get_templateID**\n\n3. *根据群组名获取对应的groupID*，get_groupID\n\n4. *根据群组名获取所有主机详情，hostID，主机可见名称，主机名，interfaceid，ip地址*，**get_host_group_name**\n\n5. *根据模板名获取所有主机详情，hostID，主机可见名称，主机名，interfaceid，ip地址，**get_host_template_name**\n\n6. *根据群组名获取所有图形详情，graphid，图名称*，**get_graph_group_name**\n\n7. *根据主机名获取所有主机详情，graphid，图名称*，**get_graph_host_name**\n\n8. *根据群组名获取所有监控项详情，itemid，监控项名称*，**get_item_group_name**\n\n9. *根据主机名获取所有监控项详情，itemid，监控项名称*，**get_item_host_name**\n\n10. *根据图形名获取所有监控项详情，itemid，监控项名称*，**get_item_graph_name**\n\n11. *根据群组名获取所有触发器详情，triggerid，触发器描述*，**get_trigger_group_name**\n\n12. *根据主机名获取所有触发器详情，triggerid，触发器描述*，**get_trigger_host_name**\n\n13. *根据监控项名获取所有触发器详情，triggerid，触发器描述*，**get_trigger_item_name**\n\n14. *根据主机名和接口名称获取对应的接口键值详情*，**get_if_item_key**\n\n15. *增加组信息，如果存在，则返回相应信息*，**add_group**\n\n16. *灵活根据群组和模板创建非代理主机*，**create_host_without_proxy**\n\n17. *根据主机名删除主机*，**delete_host**\n\n18. *根据主机名和监控项名获取历史数据。data_type可能的值：0-数字浮点；1-字符；2-日志；3-无符号数字；4-文本。默认值：3*，**get_history_item_name**\n\n19. *根据itemID获取历史数据。data_type可能的值：0-数字浮点；1-字符；2-日志；3-无符号数字；4-文本。默认值：3*，**get_history_itemID**\n\n20. *根据拓扑图名字获取对应数据*，**get_map**\n\n21. *根据监控项ID获取相应信息*，**get_item_value**\n\n22. *根据设备主机名和监控项ID获取相应值*，**get_item_value_host**\n\n    \n\n以上功能使用首先实例化类，然后调用各个函数调用，也可以根据 需求查看源码进行二次开发使用：\n\n```\nfrom pyzabbixAll import zabbix_api\n\nif __name__==\"__main__\":\n    # 测试zabbix操作\n    url = 'http://###/zabbix'\n    username = \"###\"\n    password = \"###\"\n\n    huabei_zabbix_api = zabbix_api(url, username, password)\n    # aaa = huabei_zabbix_api.get_host_list(48, \"none\")\n    # bbb = huabei_zabbix_api.get_name_ip_all(48, \"none\")\n    # print(aaa)\n    # print(bbb)\n\n    # ccc = huabei_zabbix_api.get_groupID(\"机房-B28\")\n    # ddd = huabei_zabbix_api.get_templateID(\"NOC-HB-Network\")\n    # dd = huabei_zabbix_api.get_hostID(\"2B-B28-F1-H3C-5800-CNC-2698\")\n    # eee = huabei_zabbix_api.get_host_group_name(\"NOC-HB-Network-Group\")\n    # fff = huabei_zabbix_api.get_host_template_name(\"NOC-HB-Network\")\n    # ggg = huabei_zabbix_api.get_host_template_name(\"NOC-HB-Network-Huawei_CloudEngine_8800\")\n    # hhh = huabei_zabbix_api.get_graph_group_name(\"机房-B28\")\n    # iii = huabei_zabbix_api.get_item_group_name(\"机房-B28\")\n    # jjj = huabei_zabbix_api.get_trigger_group_name(\"机房-B28\")\n    # kkk = huabei_zabbix_api.get_graph_host_name(\"2B-B28-F1-H3C-5800-CNC-2698\")\n    # ll = huabei_zabbix_api.get_item_host_name(\"2B-B28-F1-H3C-5800-CNC-2698\")\n    # mm = huabei_zabbix_api.get_item_graph_name(\"2B-B28-F1-H3C-5800-CNC-2698\", \"Interface Ten-GigabitEthernet1/1/4: Network traffic\")\n    # nn = huabei_zabbix_api.get_trigger_host_name(\"2B-B28-F1-H3C-5800-CNC-2698\")\n    # oo = huabei_zabbix_api.get_trigger_item_name(\"2B-B28-F1-H3C-5800-CNC-2698\", \"ICMP response time\")\n    # pp = huabei_zabbix_api.get_history_item_name(\"2B-B28-F1-H3C-5800-CNC-2698\", \"Interface Ten-GigabitEthernet1/1/4: Bits received\", \"2020-09-09 08:00:00\", \"2020-09-09 09:00:00\")\n    # qq = huabei_zabbix_api.get_history_itemID(89557, \"2020-08-01 00:00:00\", \"2020-08-31 23:59:00\")\n    rr = huabei_zabbix_api.get_map(\"网络拓扑图demo1\")\n    # print(ccc, ddd, dd)\n    # print(len(eee), eee)\n    # print(len(fff), fff)\n    # print(len(ggg), ggg)\n    # print(len(hhh), hhh)\n    # print(len(iii), iii)\n    # print(len(jjj), jjj)\n    # print(len(kkk), kkk)\n    # print(len(ll), ll)\n    # print(len(mm), mm)\n    # print(len(nn), nn)\n    # print(len(oo), oo)\n    # print(len(pp), pp)\n    # for i in pp:\n    #     value = i['value']\n    #     last_time = timestamp_to_time(i['clock'])\n    #     print(value, last_time)\n    # print(len(qq), qq)\n    # for i in qq:\n    #     value = i['value']\n    #     last_time = timestamp_to_time(i['clock'])\n    #     print(value, last_time)\n    print(len(rr), rr)\n```\n\n以上是部分测试代码，大家可以放心使用",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://www.haisheng666.xin/user_system/login?next=/robot/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyzabbixAll",
    "package_url": "https://pypi.org/project/pyzabbixAll/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyzabbixAll/",
    "project_urls": {
      "Homepage": "https://www.haisheng666.xin/user_system/login?next=/robot/"
    },
    "release_url": "https://pypi.org/project/pyzabbixAll/1.2.1/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "pyzabbix模块升级版",
    "version": "1.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9241011,
  "releases": {
    "1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a42d74c27119b6a34df48782252806d562f21e1665afb10431aaa7e876723127",
          "md5": "ba5b5aaa840342eb18771b1546cfa3be",
          "sha256": "7a4ddb95205b6334b4ec8dd688f6318c245c44ce5450c550428bf18f723b91a6"
        },
        "downloads": -1,
        "filename": "pyzabbixAll-1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ba5b5aaa840342eb18771b1546cfa3be",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 8456,
        "upload_time": "2021-01-25T07:11:50",
        "upload_time_iso_8601": "2021-01-25T07:11:50.605063Z",
        "url": "https://files.pythonhosted.org/packages/a4/2d/74c27119b6a34df48782252806d562f21e1665afb10431aaa7e876723127/pyzabbixAll-1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "097e1b671bb1985f553035415a54414131b20f962c49497b85ffe1aac03030a7",
          "md5": "afa2ab1403ad4993db129f47a8976381",
          "sha256": "9c961c3edd5e01eeba34d09e9a575b8f1ac3b8acfbeb072ad29c144802cd5210"
        },
        "downloads": -1,
        "filename": "pyzabbixAll-1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "afa2ab1403ad4993db129f47a8976381",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 7841,
        "upload_time": "2021-01-27T06:35:34",
        "upload_time_iso_8601": "2021-01-27T06:35:34.938385Z",
        "url": "https://files.pythonhosted.org/packages/09/7e/1b671bb1985f553035415a54414131b20f962c49497b85ffe1aac03030a7/pyzabbixAll-1.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "097e1b671bb1985f553035415a54414131b20f962c49497b85ffe1aac03030a7",
        "md5": "afa2ab1403ad4993db129f47a8976381",
        "sha256": "9c961c3edd5e01eeba34d09e9a575b8f1ac3b8acfbeb072ad29c144802cd5210"
      },
      "downloads": -1,
      "filename": "pyzabbixAll-1.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "afa2ab1403ad4993db129f47a8976381",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 7841,
      "upload_time": "2021-01-27T06:35:34",
      "upload_time_iso_8601": "2021-01-27T06:35:34.938385Z",
      "url": "https://files.pythonhosted.org/packages/09/7e/1b671bb1985f553035415a54414131b20f962c49497b85ffe1aac03030a7/pyzabbixAll-1.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}