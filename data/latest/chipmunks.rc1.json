{
  "info": {
    "author": "Yuming.Xiao",
    "author_email": "514058722@qq.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# chipmunks\n![Chipmunks Logo](/chipmunks-tail.png)\n\nChipmunks（以下简称munks）是用python开发的基于nginx的轻量级微服务网关。\n\nmunks可以为你监控集群中所有docker节点中服务，并生成nginx配置文件，将到指定服务的访问请求转发到对应的docker节点指定端口上。\n\n## Why\n\nmunks是休闲时候为了不让自己手生的练习之作。在使用python开发时，推行微服务架构其实是不太容易的。python没有java这样完整的微服务生态，非常感谢当时有[nameko](http://github.com/nameko)，解决了基本的服务注册发现和RPC机制（nameko的实现也相当精彩，感兴趣的可以看看）。nameko也有自己的问题，比如服务终端了无法及时发现，导致RPC一直等待。\n\n想为python写一个微服务网关的想法由来已久，我是一个会让工作填满所有时间的人，所以也没有太多的空闲时间来做，趁着2020国庆长假，将这个想法落地了。\n\n## What\n\nmunks的整个结构非常简单。如下图所示：\n\n![Munks archtech](/archtech.drawio.png)\n\nmunks由绿色的agent和黄色的monitor组成。\n\nagent用于和集群（无论是k8s or swarm或其他形式的集群）中的docker节点交互，监控docker中container的生命周期，并将信息保存到指定的etcd集群中。\n\nmonitor利用了etcd3支持watch prefix的特性，监听了/chipmunks这个key prefix，并解析具体的key内容生成了nginx所需要的location的配置文件。\n\n你只需要在nginx的配置文件中include对应的文件即可。\n\n## How\n\n### 0. Requirements\n\n* Docker (in K8S or Swarm)\n* etcd3\n* Python3.2+\n\n### 1. Install munks agent\n\n当前这个阶段Munks并不打算上到pipy仓库中，主要基于为大家负责的出发点。该项目并没有在生产环境有应用，我尽量让我的考虑更加周全，但是未经验证就上到仓库的确是太草率了。\n\n所以注定了这个教程不会给出非常具体的指令，在使用这个工具的时候你需要明确知道你在做什么。\n\n如果你有自己的私服，相信也应该知道如何加入进去，如果你还没有，但是比较感兴趣，可以试试nexus。\n\n首先你需要clone本项目到docker节点上，然后通过pip进行安装即可。\n\n#### Install Munks Service\n\n如果你使用systemd，那么下面的service文件可以帮你快速的建立起启动脚本\n\n##### Agent Service\n```\n[Unit]\nDescription=chipmunks service\nAfter=docker.target\n\n[Service]\nType=simple\n\n## replace with munks install location\n## chip-agents configure file。\nExecStart=/usr/local/bin/munks agent -c /etc/chips-agent.conf\nRestart=on-abort\nTimeoutSec=600\n\n[Install]\nWantedBy=multi-user.target\n```\n\n使用systemd相关命令enable并且start。\n\n#### Munks agent 的配置文件实例\n\n最简化配置munks可以只配置etc3即可。如果需要更详细的个性化配置，可以参考cli.py\n```\n[etcd3]\nport = 2379\nhost = 192.168.77.100\n```\n\n\n### 2. Install Munks monitor\n\n在你的nginx前端机上，同样安装munks。方法也就不在详细给出。\n\n同样如果你使用systemd，那么下面的service文件可以帮出你建立启动脚本\n\n##### Monitor Service\n```\n[Unit]\nDescription=chipmunks service\nAfter=docker.target\n\n[Service]\nType=simple\n\n## replace with munks install location\n## chip-agents configure file。\nExecStart=/usr/local/bin/munks chips -c /etc/chips.conf\nRestart=on-abort\nTimeoutSec=600\n\n[Install]\nWantedBy=multi-user.target\n```\n\n#### 配置monitor\n\n最简化配置monitor你配置etcd和nginx相关配置，如下\n\n```\n[etcd3]\nhost=192.168.77.100\n\n[nginx]\nconfig_path=devops/chipmunks/vagrant-env.d\npid_path=/usr/local/var/run/nginx.pid \n```\n\n其中config_path为nginx配置文件的路径，该了路径需要配置到nginx中，同时需要nginx pid文件的路径，我们需要读取pid文件并发消息给nginx process让nginxreload配置文件。\n\n\n### 3. 配置nginx\nmunks将在config_path中生成两类文件：location.conf和upstream.conf。\n需要在nginx中配置include相应的文件即可。\n\n在http段include *.upstream.conf。\n\n在server段include *.location.conf。\n\n如果你不清楚上面的在说什么，说明你对nginx也不太熟悉，可以先了解一下nginx的配置先。\n\n## vagrant\n\n如果你仅仅想试试munks，并且比较了解vagrant，我也提供了vagrant的脚本，帮你快速的建立起docker swarm模式的集群并且安装好munks。\n\n相关的文件可以参考vagrant目录。\n\n## About Logo\n\nLogo是一只松鼠尾巴，特别强调一下是因为Logo是我自己画的，担心大家认不出来。\n\n至于为什么是松鼠尾巴，那是在国庆旅途中，延川到壶口段，本来有点迷糊长时间车程，突然跃出到公路上的一只小松鼠，点亮了后续旅程，小孩子也兴奋起来，大人也开始活跃起来。\n\n回家后仍然记得那只松鼠，干脆在作为munks的Logo吧。\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://git.lingmao.tech/xiaoym/chipmunks",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "chipmunks",
    "package_url": "https://pypi.org/project/chipmunks/",
    "platform": "",
    "project_url": "https://pypi.org/project/chipmunks/",
    "project_urls": {
      "Homepage": "http://git.lingmao.tech/xiaoym/chipmunks"
    },
    "release_url": "https://pypi.org/project/chipmunks/0.2/",
    "requires_dist": [
      "Jinja2 (>=2.11.2)",
      "etcd3 (>=0.12.0)",
      "docker (>=4.3.1)"
    ],
    "requires_python": ">= 3.5",
    "summary": "Chipmunks is lightweight api gateway based on nginx.",
    "version": "0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9162024,
  "releases": {
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "111a7997fb27aa68dfb144b0aa440ee680a9155dafe38d926f4a1ee7c3b4a1b8",
          "md5": "cee4c8fcba58b032b56a289426be8c43",
          "sha256": "2dd07adf26c0744bb3c3505e72c90892aebc388f70ed63a26de43741f1dfa33a"
        },
        "downloads": -1,
        "filename": "chipmunks-0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cee4c8fcba58b032b56a289426be8c43",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">= 3.5",
        "size": 19115,
        "upload_time": "2021-01-18T10:03:23",
        "upload_time_iso_8601": "2021-01-18T10:03:23.253825Z",
        "url": "https://files.pythonhosted.org/packages/11/1a/7997fb27aa68dfb144b0aa440ee680a9155dafe38d926f4a1ee7c3b4a1b8/chipmunks-0.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "111a7997fb27aa68dfb144b0aa440ee680a9155dafe38d926f4a1ee7c3b4a1b8",
        "md5": "cee4c8fcba58b032b56a289426be8c43",
        "sha256": "2dd07adf26c0744bb3c3505e72c90892aebc388f70ed63a26de43741f1dfa33a"
      },
      "downloads": -1,
      "filename": "chipmunks-0.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "cee4c8fcba58b032b56a289426be8c43",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">= 3.5",
      "size": 19115,
      "upload_time": "2021-01-18T10:03:23",
      "upload_time_iso_8601": "2021-01-18T10:03:23.253825Z",
      "url": "https://files.pythonhosted.org/packages/11/1a/7997fb27aa68dfb144b0aa440ee680a9155dafe38d926f4a1ee7c3b4a1b8/chipmunks-0.2-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}