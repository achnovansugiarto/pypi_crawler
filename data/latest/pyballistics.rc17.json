{
  "info": {
    "author": "Mikhail Tovarnov",
    "author_email": "mtovarnov@mail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: Russian",
      "Operating System :: OS Independent",
      "Programming Language :: C",
      "Programming Language :: Cython",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Mathematics"
    ],
    "description": "# PyBallistics\nPython-библиотека для решения ОЗВБ в термодинамической и газодинамической постановках. \n\n## Установка\nУстановить библиотеку можно через менеджер пакетов [pip](https://ru.wikipedia.org/wiki/Pip_(%D0%BC%D0%B5%D0%BD%D0%B5%D0%B4%D0%B6%D0%B5%D1%80_%D0%BF%D0%B0%D0%BA%D0%B5%D1%82%D0%BE%D0%B2)). Для этого достаточно выполнить в консоли команду\n\n```\npip install --upgrade pyballistics\n```\n\n## Краткая инструкция по использованию\n\nПример расчета ОЗВБ в термодинамической постановке задачи AGARD:\n\n```python\nfrom pyballistics import ozvb_termo, get_options_agard\n\nopts = get_options_agard() # получить словарь с начальными данными задачи AGARD\nresult = ozvb_termo(opts)  # произвести расчет и получить результат\n```\nПеременная ```result``` является [словарем](https://pythonworld.ru/tipy-dannyx-v-python/slovari-dict-funkcii-i-metody-slovarej.html), в котором находятся результаты расчета.\nДля визуализации части результатов можно воспользоваться следующим кодом:\n\n```python\nimport matplotlib.pyplot as plt # если нет библиотеки matplotlib, то установить ее можно при помощи команды pip install matplotlib\n\nplt.plot(result['t'], result['p_m']) # среднебаллистическое давление от времени\nplt.grid()  # сетка на графике\nplt.show()  # показать график\n```\n\nВ результате будет получен следующий график зависимости среднебаллистического давления (Па) от времени (с):\n![](imgs/1.png)\n\nВ словаре ```result``` есть все необходимые данные для дальнейшего анализа:\n\n```python\nimport numpy as np \n\n# максимальное давление\nprint(np.max(result['p_m']))\n>>> 319103989.57\n\n# дульная скорость\nprint(result['v_p'][-1])\n>>> 671.16\n\n# доля сгоревшего пороха\nprint(result['psi_1'][-1])\n>>> 0.932\n```\n\n## Более подробная инструкция\n\nЗа сами расчеты ОЗВБ отвечают две функции: ```ozvb_termo``` и ```ozvb_lagrange```. Они могут быть импортированы непосредственно из библиотеки:\n\n```python\nfrom pyballistics import ozvb_termo, ozvb_lagrange\n```\nФункция ```ozvb_termo``` производит термодинамический расчет, а ```ozvb_lagrange``` - газодинамический в Лагранжевых координатах. \n\nОбе эти функции на вход принимают словари, в которых хранятся все необходимые для расчета начальные данные. Примеры таких словарей можно получить из функций ```get_options_agard``` и ```get_options_sample```:\n\n```python\nfrom pyballistics import get_options_agard, get_options_sample\n\nopts1 = get_options_agard()\nopts2 = get_options_sample()\n\nprint(opts2)\n# {\n#   'powders': [\n#       {'omega': 7, 'dbname': 'ДГ-4 15/1'},\n#       {'omega': 6, 'dbname': '22/7'}],\n#  'init_conditions': {\n#       'q': 51.76,\n#       'd': 0.122,\n#       'W_0': 0.0325,\n#       'phi_1': 1.02,\n#       'p_0': 30000000.0 },\n#  'igniter': {\n#       'p_ign_0': 1000000.0},\n#  'meta_termo': {\n#       'dt': 5e-06, \n#       'method': 'rk2'},\n#  'meta_lagrange': {\n#       'CFL': 0.9, \n#       'n_cells': 150},\n#  'stop_conditions': {\n#       'v_p': 690, \n#       'p_max': 600000000.0, \n#       'x_p': 9}\n# }\n```\nСловарь со входными данными является иерархической структурой данных (словарь словарей, списков и т.д.). Для указания всех данных, однозначно описывающих задачу ОЗВБ, словарь должен быть довольно громоздким и неудобным для формирования. Для упрощения формирования словаря многие входящие в него элементы имеют значения по умолчанию и их, в случае необходимости, можно не указывать. Однако есть ряд элементов и значений, которые указывать обязательно. \nСловарь со входными данными состоит из следующих элементов \"верхнего уровня\":\n - ```'init_conditions'``` - **обязательный раздел**. В данном разделе хранится словарь с начальными данными:\n   - ```'q'``` - масса снаряда в кг.\n   - ```'d'``` - калибр, м.\n   - ```'W_0'``` - начальный объем каморы, м^3.\n   - ```'phi_1'``` - коэффициент, учитывающий силу трения в нарезах (участвует в формуле расчета коэффициента фиктивности массы снаряда).\n   - ```'p_0'``` - давление форсирования, Па.\n   - ```'T_0'```(*опционально*) - начальная температура, К (*значение по умолчанию 293.15 К*).\n   - ```'n_S'```(*опционально*) - коэффициент учета площади нарезов (*значение по умолчанию 1). Площадь поперечного сечения высчитывается по формуле S = n_S pi d^2 / 4 .\n    \n\n - ```'powders'``` - **обязательный раздел**. В данном разделе хранится [список](https://pythonworld.ru/tipy-dannyx-v-python/spiski-list-funkcii-i-metody-spiskov.html) с данными по пороховым навескам, из которых состоит метательный заряд. **Обязательно должен иметь хотя бы один элемент**. Каждый элемент списка отвечает за свою навеску и тоже является словарем со следующими элементами:\n   - ```'omega'``` - масса навески заряда, кг.\n   - ```'dbname'```(*опционально*) - имя пороха в БД. **Если указать, то для остальных элементов будут определены значения по умолчанию. Если не указать, то все остальные элементы будет необходимо инициализировать** (список доступных имен можно получить из функции ```get_powder_names```). Т.е. при желании можно корректировать часть характеристик табличных порохов и брать у них остальные значения стандартными.\n   - ```'I_e'```(*опционально, если указан ```'dbname'```*) - импульс конца горения, Па с.\n   - ```'nu'``` (*опционально, если указан ```'dbname'```*) - показатель в степенном законе горения (*по умолчанию 1*).\n   - ```'b'```(*опционально, если указан ```'dbname'```*) - коволюм пороховых газов, м^3/кг.\n   - ```'delta'```(*опционально, если указан ```'dbname'```*) - плотность пороха, кг/м^3.\n   - ```'f'```(*опционально, если указан ```'dbname'```*) - сила пороха, Дж/кг.\n   - ```'k'```(*опционально, если указан ```'dbname'```*) - коэффициент адиабаты пороховых газов.\n   - ```'T_p'```(*опционально, если указан ```'dbname'```*) - темп. горения пороха, К.\n   - ```'z_e'```(*опционально, если указан ```'dbname'```*) - относительная толщина сгоревшего слоя конца горения.\n   - ```'kappa_1'```(*опционально, если указан ```'dbname'```*) - коэффициент в геометрическом законе горения.\n   - ```'lambda_1'```(*опционально, если указан ```'dbname'```*) - коэффициент в геометрическом законе горения.\n   - ```'mu_1'```(*опционально, если указан ```'dbname'```*) - коэффициент в геометрическом законе горения.\n   - ```'kappa_2'```(*опционально, если указан ```'dbname'```*) - коэффициент в геометрическом законе горения.\n   - ```'lambda_2'```(*опционально, если указан ```'dbname'```*) - коэффициент в геометрическом законе горения.\n   - ```'mu_2'```(*опционально, если указан ```'dbname'```*) - коэффициент в геометрическом законе горения.\n   - ```'k_I'```(*опционально, если указан ```'dbname'```*) - коэффициент для пересчета импульса конца горения для других начальных температур, 1/K.\n   - ```'k_f'```(*опционально, если указан ```'dbname'```*) - коэффициент для пересчета силы пороха для других начальных температур, 1/K.\n - ```'igniter'``` - **обязательный раздел**. В данном разделе хранится словарь с начальными данными, которые относятся к воспламенителю. Словарь имеет следующие элементы:\n   - ```'p_ign_0'``` - давление вспышки, Па.\n   - ```'k_ign'```(*опционально*) - коэффициент адиабаты газов воспламенителя (*значение по умолчанию 1.22*).\n   - ```'T_ign'```(*опционально*) - температура горения воспламенителя, К (*значение по умолчанию 2427*).\n   - ```'f_ign'```(*опционально*) - сила воспламенителя, Дж/кг (*значение по умолчанию 260 000 Дж/кг*).\n   - ```'b_ign'```(*опционально*) - коволюм газов воспламенителя, м^3/кг (*значение по умолчанию 0.0006*).\n - ```'windage'``` - **опциональный раздел**. В данном разделе хранится словарь с начальными данными, которые относятся к силе сопротивления воздуха перед снарядом. Если не указывать этот элемент, то будут использованы значения по умолчанию. Словарь имеет следующие элементы:\n   - ```'shock_wave'```(*опционально*) - флаг ```True/False```, показывающий нужно ли рассчитывать давление ударной волны по формуле, или использовать просто статичное давление ```'p_0a'``` (*значение по умолчанию ```True```*).\n   - ```'p_0a'```(*опционально*) - давление воздуха перед снарядом, Па (*значение по умолчанию 100 000*).\n   - ```'k_air'```(*опционально*) - показатель адиабаты воздуха (*значение по умолчанию 1.4*).\n   - ```'c_0a'```(*опционально*) - скорость звука в воздухе, м/с (*значение по умолчанию 340*).\n - ```'heat'``` - **опциональный раздел**. В данном разделе хранится словарь с начальными данными, которые относятся к теплообмену ГПС со стволом. Если не указывать этот элемент, то будут использованы все значения по умолчанию. Словарь имеет следующие элементы:\n   - ```'enabled'```(*опционально*) - флаг ```True/False```, показывающий нужно ли учитывать теплообмен со стволом (*значение по умолчанию ```True```*).\n   - ```'heat_barrel'```(*опционально*) - флаг ```True/False```, показывающий нужно ли учитывать рассчитвать динамически температуру стенки ствола, или температура стенок ствола не меняется (*значение по умолчанию ```True```*).\n   - ```'F_0'```(*опционально*) - начальная площадь теплоотдачи, м^2 (*значение по умолчанию 4W_0/d*).\n   - ```'Pr'```(*опционально*) - число Прандля (*значение по умолчанию 0.74*).\n   - ```'T_w0'```(*опционально*) - начальная температура стенки, К. Если не указывать - то будет взята начальная температура.\n   - ```'mu_0'```(*опционально*) - коэффициент динамической вязкости пороховых газов для формулы Сазерленда, Па*с (*значение по умолчанию 0.175e-4*).\n   - ```'T_cs'```(*опционально*) - тоже для формулы Сазерленда, К (*значение по умолчанию 628*).\n   - ```'T_0s'```(*опционально*) - тоже для формулы Сазерленда, К (*значение по умолчанию 273*).\n   - ```'c_b'```(*опционально*) - теплоемкость материала ствола, Дж/(кг * град) (*значение по умолчанию 500*).\n   - ```'rho_b'```(*опционально*) - плотность материала ствола, кг/м^3 (*значение по умолчанию 7900*).\n   - ```'lambda_b'```(*опционально*) - теплопроводность материала ствола, Вт/(м·град) (*значение по умолчанию 40*).\n   - ```'lambda_g'```(*опционально*) - теплопроводность пороховых газов, Вт/(м·К) (*значение по умолчанию 0.2218*).\n- ```'stop_conditions'``` - **обязательный раздел**. В данном разделе хранится словарь с начальными данными, которые относятся к условиям конца расчета. **Должен иметь хотя бы один элемент** (любой из нижеперечисленных). Если указано несколько условий, то расчет будет остановлен из-за условия, которое сработало раньше всего. Словарь имеет следующие элементы:\n   - ```'t_max'```(*опционально*) - с, прервать расчет при t > t_max.\n   - ```'steps_max'```(*опционально*) - сделать максимум  steps_max шагов интегрирования.\n   - ```'v_p'```(*опционально*) - м/с, прервать расчет, когда скорость снаряда достигнет v_p.\n   - ```'x_p'```(*опционально*) - м, прервать расчет, когда снаряд пройдет x_p метров (в начальный момент снаряд прошел 0 м).\n   - ```'p_max'```(*опционально*) - Па, прервать расчет, если давление превысит p_max.\n- ```'meta_termo'``` - **обязательный раздел для термодинамического расчета**. В данном разделе хранится словарь с начальными данными, которые относятся к мета-параметрам термодинамического расчета. Словарь имеет следующие элементы:\n   - ```'dt'``` - с, шаг по времени.\n   - ```'method'```(*опционально*) - метод интегрирования. Возможные варианты: Эйлер - 'euler'; Рунге-Кутты 2 порядка -'rk2'; -  Рунге-Кутты 4 порядка - 'rk4' (*значение по умолчанию 'rk2'*).\n- ```'meta_lagrange'``` - **обязательный раздел для газодинамического расчета**. В данном разделе хранится словарь с начальными данными, которые относятся к мета-параметрам газодинамического расчета. Словарь имеет следующие элементы:\n   - ```'n_cells'``` - количество ячеек сетки.\n   - ```'CFL'``` - число Куранта (0 < CFL < 1).\n   - ```'W'```(*опционально*) - дополнительное требование для повышения устойчивости: последующий шаг по времени не может быть больше текущего в W раз.\n\n## Структура результатов термодинамической модели\n\nВ зависимости от результатов расчета, словарь может быть двух видов. Если в результате расчета произошла ошибка, то будет сформирован следующий словарь:\n\n```python\n{\n    'stop_reason': 'error',   # показывает, что в процессе расчета произошла ошибка\n    'error_message': '...',   # описание ошибки\n    'exception': Error('...'),# ссылка на саму ошибку (ее можно вызвать при помощи raise для трассировки) \n    'execution_time': float   # время выполнения функции в секундах\n}\n```\n\nПример:\n\n```python \nresult = ozvb_termo({})  # передаем пустой словарь\nprint(result)\n>>> {\n    'stop_reason': 'error',\n    'error_message': 'В словаре opts обязательно должно быть поле \"powders\", в котором указываются параметры заряда. Пример правильного словаря opts можно получить из функции get_termo_options_sample()',\n    'exception': ValueError('В словаре opts обязательно должно быть поле \"powders\", в котором указываются параметры заряда. Пример правильного словаря opts можно получить из функции get_termo_options_sample()'),\n    'execution_time': 1.7400000047018693e-05\n}\n```\n\nЕсли расчет прошел без ошибок, то словарь с результатами будет следующий:\n\n```python\n{\n    't': np.array([...]),     # numpy-массив с точками по времени в секундах, в которых были рассчитаны остальные значения \n    'p_m': np.array([...]),   # numpy-массив со среднебаллистическим давлением в Па\n    'T': np.array([...]),     # numpy-массив с температурой ГПС в Кельвинах\n    'x_p':np.array([...]),    # numpy-массив с положением снаряда в метрах (в начальный момент x_p==0)\n    'v_p': np.array([...]),   # numpy-массив со скоростью снаряда в м/c (в начальный момент v_p==0)\n    'Q_pa': np.array([...]),  # numpy-массив с суммарной энергией в Дж, потраченной на преодоление сил сопротивления атмосферному давлению перед снарядом\n    'Q_w': np.array([...]),   # numpy-массив с суммарной энергией в Дж, отданной  ГПС на нагрев ствола\n    'W_p': np.array([...]),   # numpy-массив с заснарядным объемом в м^3\n    'W_c': np.array([...]),   # numpy-массив с объемом в м^3, занятым коволюмом ГПС и конденсированной фазой ГПС\n    'T_w': np.array([...]),   # numpy-массив со средней температурой ствола в К\n    'k': np.array([...]),     # numpy-массив с показателями адиабаты ГПС\n    'z_1': np.array([...]),   # numpy-массив с относительной толщиной сгоревшего свода пороха навески №1\n    'psi_1': np.array([...]), # numpy-массив с относительной массой сгоревшего пороха навески №1\n    'z_2': np.array([...]),   # numpy-массив с относительной толщиной сгоревшего свода пороха навески №2\n    'psi_2': np.array([...]), # numpy-массив с относительной массой сгоревшего пороха навески №2\n        ...                   # и так N раз\n    'stop_reason': str,       # причина остановки расчета ('t_max', 'steps_max', 'v_p', 'x_p', 'p_max')\n    'execution_time': float   # время, потраченное на расчет, в секундах\n}\n```\nПример:\n```python\n\nopts = get_options_sample()\nresult = ozvb_termo(opts)\nprint(result)\n>>> {\n    't':    array([0.   , 0.   , ..., 0.027, 0.027]),\n    'p_m':  array([ 1000000.   ,  1002189.433, ..., 90680294.893, 90629603.46 ]),\n    'T':    array([2427.   , 2427.487, ..., 1824.249, 1823.988]),\n    'x_p':  array([0.   , 0.   , ..., 6.394, 6.398]),\n    'v_p':  array([  0.   ,   0.   , ..., 689.994, 690.085]),\n    'Q_pa': array([    0.   ,     0.   , ..., 45159.509, 45195.554]),\n    'Q_w':  array([      0.   ,       0.   , ..., 3447622.549, 3449318.738]),\n    'W_p':  array([0.033, 0.033, ..., 0.107, 0.107]),\n    'W_c':  array([0.008, 0.008, ..., 0.014, 0.014]),\n    'T_w':  array([293.15 , 293.15 , ..., 315.661, 315.661]),\n    'k':    array([1.22 , 1.22 , ..., 1.238, 1.238]),\n    'z_1':  array([0.   , 0.   , ..., 0.954, 0.954]),\n    'psi_1':array([0.   , 0.   , ..., 0.954, 0.954]),\n    'z_2':  array([0.   , 0.   , ..., 1.343, 1.343]),\n    'psi_2':array([0.   , 0.   , ..., 0.987, 0.987]),\n    'stop_reason': 'v_p',\n    'execution_time': 0.21484209999971426\n}\n```\n\n## Структура результатов газодинамической модели\n\n\nВ зависимости от результатов расчета, словарь может быть двух видов. Если в результате расчета произошла ошибка, то будет сформирован следующий словарь:\n\n```python\n{\n    'stop_reason': 'error',   # показывает, что в процессе расчета произошла ошибка\n    'error_message': '...',   # описание ошибки\n    'exception': Error('...'),# ссылка на саму ошибку (ее можно вызвать при помощи raise для трассировки) \n    'execution_time': float   # время выполнения функции в секундах\n}\n```\n\nПример:\n\n```python\nresult = ozvb_lagrange({})  # передаем пустой словарь\nprint(result)\n>>> {\n    'stop_reason': 'error',\n    'error_message': 'В словаре opts обязательно должно быть поле \"powders\", в котором указываются параметры заряда. Пример правильного словаря opts можно получить из функции get_termo_options_sample()',\n    'exception': ValueError('В словаре opts обязательно должно быть поле \"powders\", в котором указываются параметры заряда. Пример правильного словаря opts можно получить из функции get_termo_options_sample()'),\n    'execution_time': 1.7400000047018693e-05\n}\n```\n\n\nЕсли расчет прошел без ошибок, то словарь с результатами будет следующий:\n\n```python\n{\n    'stop_reason': str,     # причина остановки расчета ('t_max', 'steps_max', 'v_p', 'x_p', 'p_max')\n    'execution_time': float,# время выполнения расчета в секундах\n    'layers': [             # список со словарями. В каждом словаре хранятся данные одного временного слоя\n        {                       # Словарь первого временного слоя. Слой состоит из N ячеек\n            't': 0.0,               # время временного слоя в секундах\n            'step_count': 0,         # номер шага по времени\n            'x': np.array([...]),    # numpy-массив координатами по длине узлов сетки в метрах, длина массива N+1\n            'u': np.array([...]),    # numpy-массив со скоростями узлов сетки в м/с, длина массива N+1\n            'T': np.array([...]),    # numpy-массив с температурами ГПС в ячейках в Кельвинах. Длина массива N\n            'rho': np.array([...]),  # numpy-массив с плотностями ГПС в ячейках в кг/м^3. Длина массива N\n            'p': np.array([...]),    # numpy-массив с давлениями ГПС в ячейках в Па. Длина массива N\n            'T_w':np.array([...]),   # numpy-массив с температурами стенок ствола в ячейках в Кельвинах. Длина массива N\n            'k':  np.array([...]),   # numpy-массив с показателями адиабаты ГПС в ячейках. Длина массива N\n            'z_1': np.array([...]),  # numpy-массив с относительными толщинами сгоревшего свода пороха навески №1 по ячейкам. Длина массива N \n            'psi_1': np.array([...]),# numpy-массив с относительными массами сгоревшего пороха навески №1 по ячейкам. Длина массива N \n            'z_2':np.array([...]),   # numpy-массив с относительными толщинами сгоревшего свода пороха навески №2 по ячейкам. Длина массива N \n            'psi_2': np.array([...]),# numpy-массив с относительными массами сгоревшего пороха навески №2 по ячейкам. Длина массива N \n            ... # и так по всем навескам\n        },\n        {...},                 # Словарь второго временного слоя. Слой состоит из N ячеек\n        {...},                 # Словарь третьего временного слоя. Слой состоит из N ячеек\n        ...,                   № и т.д.\n    ]     # конец списка 'layers'\n}\n```\n\nПример:\n\n```python\nopts = get_options_sample()\nresult = ozvb_lagrange(opts)\nprint(result)\n>>> {\n    'stop_reason': 'v_p',\n    'execution_time': 0.167843300000186, \n    'layers': [\n        {\n            't': 0.0,\n            'step_count': 0,\n            'x': array([-2.78 , -2.762, ..., -0.019,  0.   ]),\n            'u': array([0., 0., ..., 0., 0.]),\n            'T': array([2427., 2427., ..., 2427., 2427.]),\n            'rho': array([402.851, 402.851, ..., 402.851, 402.851]),\n            'p': array([1000000., 1000000., ..., 1000000., 1000000.]),\n            'T_w': array([293.15, 293.15, ..., 293.15, 293.15]),\n            'k': array([1.22, 1.22, ..., 1.22, 1.22]),\n            'z_1': array([0., 0., ..., 0., 0.]),\n            'psi_1': array([0., 0., ..., 0., 0.]),\n            'z_2': array([0., 0., ..., 0., 0.]),\n            'psi_2': array([0., 0., ..., 0., 0.])\n        },\n        {\n            't': 0.00026096741712768897,\n            'step_count': 1,\n            'x': array([-2.78 , -2.762, ..., -0.019,  0.   ]),\n            'u': array([0., 0., ..., 0., 0.]),\n            'T': array([2450.216, 2450.216, ..., 2450.216, 2450.216]),\n            'rho': array([402.851, 402.851, ..., 402.851, 402.851]),\n            'p': array([1114231.986, 1114231.986, ..., 1114231.986, 1114231.986]),\n            'T_w': array([293.15, 293.15, ..., 293.15, 293.15]),\n            'k': array([1.222, 1.222, ..., 1.222, 1.222]),\n            'z_1': array([0., 0., ..., 0., 0.]),\n            'psi_1': array([0., 0., ..., 0., 0.]),\n            'z_2': array([0., 0., ..., 0., 0.]),\n            'psi_2': array([0., 0., ..., 0., 0.])\n        },\n        ...\n    ]\n}\n```\n\n## Дополнительные функции\n\nВ библиотеке также есть несколько дополнительных функций, описание к которым есть в их [документации](https://devman.org/qna/13/chto-takoe-docstring-s-chem-ego-edjat/):\n\n```python\nfrom pyballistics import get_full_options, get_db_powder, get_powder_names\n\nprint(get_full_options.__doc__)\nprint(get_db_powder.__doc__)\nprint(get_powder_names.__doc__)\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/TovarnovM/pyballistics",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyballistics",
    "package_url": "https://pypi.org/project/pyballistics/",
    "platform": null,
    "project_url": "https://pypi.org/project/pyballistics/",
    "project_urls": {
      "Code": "https://github.com/TovarnovM/pyballistics",
      "Documentation": "https://github.com/TovarnovM/pyballistics",
      "Homepage": "https://github.com/TovarnovM/pyballistics",
      "Issue tracker": "https://github.com/TovarnovM/pyballistics/issues"
    },
    "release_url": "https://pypi.org/project/pyballistics/1.1.2/",
    "requires_dist": [
      "cymem (>=2.0.3)",
      "numpy (>=1.17)",
      "schema (>=0.7.2)",
      "pytest (>=5.1) ; extra == 'dev'",
      "flake8 (>=3.7) ; extra == 'dev'",
      "schema (>=0.7.2) ; extra == 'dev'",
      "cython (>=0.29.14) ; extra == 'dev'",
      "cymem (>=2.0.3) ; extra == 'dev'",
      "sphinx ; extra == 'docs'",
      "sphinx-rtd-theme ; extra == 'docs'"
    ],
    "requires_python": ">=3.4",
    "summary": "Library for calculating internal ballistics",
    "version": "1.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16615206,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b293d0683f1e1f47f1d61af958c5720111069681fbd1bb9e7291fca1f5113bb1",
          "md5": "8d2105ac4719bd730d3047a6873ae004",
          "sha256": "359a68e4e21bef316eee5b870e7b018d359948aea7c09a1a1570df0558fd8ba8"
        },
        "downloads": -1,
        "filename": "pyballistics-1.0.0-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "8d2105ac4719bd730d3047a6873ae004",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.4",
        "size": 297344,
        "upload_time": "2020-08-07T18:06:18",
        "upload_time_iso_8601": "2020-08-07T18:06:18.196237Z",
        "url": "https://files.pythonhosted.org/packages/b2/93/d0683f1e1f47f1d61af958c5720111069681fbd1bb9e7291fca1f5113bb1/pyballistics-1.0.0-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "af26eb1f9b9344ee4aa36a7b8b0f353283085a9fd5a286415eb50a8e42c8a3ec",
          "md5": "a25593657c74e0ac8d1328c0f5bda3aa",
          "sha256": "f276467b8a25617e99b1a3b5c5ba8ed0807efa85495b758ae515190595f18249"
        },
        "downloads": -1,
        "filename": "pyballistics-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a25593657c74e0ac8d1328c0f5bda3aa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 444310,
        "upload_time": "2020-08-07T18:06:21",
        "upload_time_iso_8601": "2020-08-07T18:06:21.771234Z",
        "url": "https://files.pythonhosted.org/packages/af/26/eb1f9b9344ee4aa36a7b8b0f353283085a9fd5a286415eb50a8e42c8a3ec/pyballistics-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "419f06ba6a22a1877fa1dfcbe1e38cd189332d03045d3cec4314cfd1960d2f78",
          "md5": "055a4b94fa26afe677ef9baac8934a39",
          "sha256": "4adffd0fe6cbbfe96e7f2516159603622b706634331aa6e612193077286c1364"
        },
        "downloads": -1,
        "filename": "pyballistics-1.0.1-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "055a4b94fa26afe677ef9baac8934a39",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.4",
        "size": 303968,
        "upload_time": "2020-08-07T18:08:32",
        "upload_time_iso_8601": "2020-08-07T18:08:32.495127Z",
        "url": "https://files.pythonhosted.org/packages/41/9f/06ba6a22a1877fa1dfcbe1e38cd189332d03045d3cec4314cfd1960d2f78/pyballistics-1.0.1-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d40eb6a5d552c48ff98696d56a7eec19ffb28b4d254d0e22a0e21c44d98129f9",
          "md5": "90f8ebcf23d6941402f7c0541d8f3f01",
          "sha256": "dc5b7a6b48e3df4830bdd036f149854ad4d736a05122558e365a045508167644"
        },
        "downloads": -1,
        "filename": "pyballistics-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "90f8ebcf23d6941402f7c0541d8f3f01",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 444317,
        "upload_time": "2020-08-07T18:08:34",
        "upload_time_iso_8601": "2020-08-07T18:08:34.650062Z",
        "url": "https://files.pythonhosted.org/packages/d4/0e/b6a5d552c48ff98696d56a7eec19ffb28b4d254d0e22a0e21c44d98129f9/pyballistics-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b5dde812333efa6ed340f04dd85cb8e74f45c7a132b42551147361c37d3d7df5",
          "md5": "1d847b08aee77760f94a8fd2b58a95d7",
          "sha256": "99c0591f9db5117a4fbe7871081b127eb232d127e82f0a4c4544db9735f73c9c"
        },
        "downloads": -1,
        "filename": "pyballistics-1.0.10-cp38-cp38-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "1d847b08aee77760f94a8fd2b58a95d7",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.4",
        "size": 755666,
        "upload_time": "2020-08-16T18:33:11",
        "upload_time_iso_8601": "2020-08-16T18:33:11.996834Z",
        "url": "https://files.pythonhosted.org/packages/b5/dd/e812333efa6ed340f04dd85cb8e74f45c7a132b42551147361c37d3d7df5/pyballistics-1.0.10-cp38-cp38-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b1726f135c39d5fb195176adfb32ad4a1e1839d1db76165affb1c5eb73bae788",
          "md5": "5d0b2b0fabe5a0fd6758e83b3d2abceb",
          "sha256": "c9c77e295913c1d5f8791b8171f3b454756a19ac4154e5f37b8052503a026f7b"
        },
        "downloads": -1,
        "filename": "pyballistics-1.0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "5d0b2b0fabe5a0fd6758e83b3d2abceb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 454025,
        "upload_time": "2020-08-16T18:32:25",
        "upload_time_iso_8601": "2020-08-16T18:32:25.670650Z",
        "url": "https://files.pythonhosted.org/packages/b1/72/6f135c39d5fb195176adfb32ad4a1e1839d1db76165affb1c5eb73bae788/pyballistics-1.0.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "95e75aa740702b0c2b66c92e2d7c3e6835c2ce771ed27adb485e85b4522b5262",
          "md5": "088298094a2c298ec7224f95ec99399e",
          "sha256": "9074342e7a1a2f42c520a636e02ea86cbc93eeb4379feb0dc2f4ceb5059658cf"
        },
        "downloads": -1,
        "filename": "pyballistics-1.0.11-cp38-cp38-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "088298094a2c298ec7224f95ec99399e",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.4",
        "size": 336716,
        "upload_time": "2020-08-16T18:40:38",
        "upload_time_iso_8601": "2020-08-16T18:40:38.488722Z",
        "url": "https://files.pythonhosted.org/packages/95/e7/5aa740702b0c2b66c92e2d7c3e6835c2ce771ed27adb485e85b4522b5262/pyballistics-1.0.11-cp38-cp38-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d4f1763aeaa4ab00bed0517fd8c0097acce1a03a5aee936da69a8d1633e0c1c6",
          "md5": "80741e5631fac82d59cf9276646d1727",
          "sha256": "7e6c7d75a02e33da7f43a8c7f336d16385217a36c439bc7e2e2083fb7a4f9ec8"
        },
        "downloads": -1,
        "filename": "pyballistics-1.0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "80741e5631fac82d59cf9276646d1727",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 454022,
        "upload_time": "2020-08-16T18:40:40",
        "upload_time_iso_8601": "2020-08-16T18:40:40.793707Z",
        "url": "https://files.pythonhosted.org/packages/d4/f1/763aeaa4ab00bed0517fd8c0097acce1a03a5aee936da69a8d1633e0c1c6/pyballistics-1.0.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9e92a77c14c1cf13447ae94f65e573ae7549541f3583799cc1457cd962728271",
          "md5": "7ba69411e71a635d1df07bdb039d9b05",
          "sha256": "4dd9c04464ccdd9dd35b3d0ed110329d4440992537bcdfefb1194c82a6087886"
        },
        "downloads": -1,
        "filename": "pyballistics-1.0.12-cp38-cp38-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "7ba69411e71a635d1df07bdb039d9b05",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.4",
        "size": 336615,
        "upload_time": "2020-09-07T09:34:29",
        "upload_time_iso_8601": "2020-09-07T09:34:29.370856Z",
        "url": "https://files.pythonhosted.org/packages/9e/92/a77c14c1cf13447ae94f65e573ae7549541f3583799cc1457cd962728271/pyballistics-1.0.12-cp38-cp38-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "806ca487cf6bb008218368165a75260ba3f27aa40069c6be3a44f024f0e1c799",
          "md5": "04c2da3e5d42d13535d030f62ca55250",
          "sha256": "542c701d137b32c6a3e1a7233913d5b655b763178cfec013f6516cfc351605c6"
        },
        "downloads": -1,
        "filename": "pyballistics-1.0.12.tar.gz",
        "has_sig": false,
        "md5_digest": "04c2da3e5d42d13535d030f62ca55250",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 454067,
        "upload_time": "2020-09-07T09:34:31",
        "upload_time_iso_8601": "2020-09-07T09:34:31.223839Z",
        "url": "https://files.pythonhosted.org/packages/80/6c/a487cf6bb008218368165a75260ba3f27aa40069c6be3a44f024f0e1c799/pyballistics-1.0.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "01c573c160b31a0efec767e6920b0bf257a2637476842422c4876073f6377634",
          "md5": "5c9be50ccd509fedab9664339f0f3dcf",
          "sha256": "1c5d66470973435338ed47a70081eafdf3b7d3b6c1fc81f00a0ea65c3d6a1dc7"
        },
        "downloads": -1,
        "filename": "pyballistics-1.0.13-cp38-cp38-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "5c9be50ccd509fedab9664339f0f3dcf",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.4",
        "size": 336840,
        "upload_time": "2020-09-19T11:50:57",
        "upload_time_iso_8601": "2020-09-19T11:50:57.114127Z",
        "url": "https://files.pythonhosted.org/packages/01/c5/73c160b31a0efec767e6920b0bf257a2637476842422c4876073f6377634/pyballistics-1.0.13-cp38-cp38-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b29f6fc51bdd26ef7bb74ea78339d10bd6039ca0ed932427aef03bbfef4e7afc",
          "md5": "78605b1a4de4e5fa1342210f64eb7ec2",
          "sha256": "9f1f10664aa94210b96cad934ebde998df502c89b58b89874a3e7e612ce7ab96"
        },
        "downloads": -1,
        "filename": "pyballistics-1.0.13.tar.gz",
        "has_sig": false,
        "md5_digest": "78605b1a4de4e5fa1342210f64eb7ec2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 454318,
        "upload_time": "2020-09-19T11:50:59",
        "upload_time_iso_8601": "2020-09-19T11:50:59.474862Z",
        "url": "https://files.pythonhosted.org/packages/b2/9f/6fc51bdd26ef7bb74ea78339d10bd6039ca0ed932427aef03bbfef4e7afc/pyballistics-1.0.13.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.14": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "90a32fa5a0d07cfede1ae48c5aaa6a121fe705a7c66ec7ec24058da5b1baa6a6",
          "md5": "ff12bc68201736662d1b547630482986",
          "sha256": "ce7d6dd76d0229f3b92732dbbc0061db749aa45dd8a05731709dfa19db81c147"
        },
        "downloads": -1,
        "filename": "pyballistics-1.0.14-cp38-cp38-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "ff12bc68201736662d1b547630482986",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.4",
        "size": 446796,
        "upload_time": "2021-05-24T17:06:30",
        "upload_time_iso_8601": "2021-05-24T17:06:30.460098Z",
        "url": "https://files.pythonhosted.org/packages/90/a3/2fa5a0d07cfede1ae48c5aaa6a121fe705a7c66ec7ec24058da5b1baa6a6/pyballistics-1.0.14-cp38-cp38-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "471a7eb16d1cf2439ec7f3b0798d8f42d57b9eee3ea961a50e2d1c22fea345f4",
          "md5": "8e3445ae0b01058da78f063abafd8b3f",
          "sha256": "fc4ba86a8441038cd8006de0d09ff6f666b9a284695977b211dc338f7f834ef4"
        },
        "downloads": -1,
        "filename": "pyballistics-1.0.14.tar.gz",
        "has_sig": false,
        "md5_digest": "8e3445ae0b01058da78f063abafd8b3f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 598772,
        "upload_time": "2021-05-24T17:06:32",
        "upload_time_iso_8601": "2021-05-24T17:06:32.324053Z",
        "url": "https://files.pythonhosted.org/packages/47/1a/7eb16d1cf2439ec7f3b0798d8f42d57b9eee3ea961a50e2d1c22fea345f4/pyballistics-1.0.14.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "572b5d6b5190c7ad568a05fb15c2e9d6c5fc8ed235b929a6a19535ee14579b37",
          "md5": "b8b3e184ea2e7fc1702e58f6a1f4ca58",
          "sha256": "604a0a5185078a20046b57293b3184e77dc3663abb34e4c1205eea51e5c91d83"
        },
        "downloads": -1,
        "filename": "pyballistics-1.0.2-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "b8b3e184ea2e7fc1702e58f6a1f4ca58",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.4",
        "size": 303967,
        "upload_time": "2020-08-08T06:02:53",
        "upload_time_iso_8601": "2020-08-08T06:02:53.987378Z",
        "url": "https://files.pythonhosted.org/packages/57/2b/5d6b5190c7ad568a05fb15c2e9d6c5fc8ed235b929a6a19535ee14579b37/pyballistics-1.0.2-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "491022bfe093fb2d6d47796b6a1a049657d23ef33bc56ba745a1fbd8b5829a8e",
          "md5": "c67e138fe523a333072cd0c881c709db",
          "sha256": "f46b8f6061e45e2817b97b662ecee0204aeaf9013d7284232412811137deae70"
        },
        "downloads": -1,
        "filename": "pyballistics-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c67e138fe523a333072cd0c881c709db",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 444335,
        "upload_time": "2020-08-08T06:02:57",
        "upload_time_iso_8601": "2020-08-08T06:02:57.271586Z",
        "url": "https://files.pythonhosted.org/packages/49/10/22bfe093fb2d6d47796b6a1a049657d23ef33bc56ba745a1fbd8b5829a8e/pyballistics-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "31f0ddf894c0022eb3457be69f1d7b6a36dfc10621ca4d8d15efafc3219d1283",
          "md5": "09153e7cd4533f410915b546133cc242",
          "sha256": "0937704cb82cf784ca56a6c2a71b8a57edd2946f75475a32cc86eba1ea20e6f0"
        },
        "downloads": -1,
        "filename": "pyballistics-1.0.3-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "09153e7cd4533f410915b546133cc242",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.4",
        "size": 306815,
        "upload_time": "2020-08-08T06:10:51",
        "upload_time_iso_8601": "2020-08-08T06:10:51.357969Z",
        "url": "https://files.pythonhosted.org/packages/31/f0/ddf894c0022eb3457be69f1d7b6a36dfc10621ca4d8d15efafc3219d1283/pyballistics-1.0.3-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bc2427a3dc1192266000b3e653724b237b685e2872a18929c013ff59117c78d5",
          "md5": "2505db9e4b3371db9a71faf47ab458da",
          "sha256": "7b338c866120ed30b028c917af02784d70ef1830cd76ea21dba6863be7b0a046"
        },
        "downloads": -1,
        "filename": "pyballistics-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "2505db9e4b3371db9a71faf47ab458da",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 447137,
        "upload_time": "2020-08-08T06:10:53",
        "upload_time_iso_8601": "2020-08-08T06:10:53.432861Z",
        "url": "https://files.pythonhosted.org/packages/bc/24/27a3dc1192266000b3e653724b237b685e2872a18929c013ff59117c78d5/pyballistics-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "858f4cbae1e48896d3da6b7ceababe5fbdf3c5c9edec0aac59fe4bf318a6e847",
          "md5": "8a1f11ebc48aa34e40d41db40f38ae47",
          "sha256": "acaac66c5f646d5634ebe2d3f9214f66b9667338145ee5e9e6d5284fe6971523"
        },
        "downloads": -1,
        "filename": "pyballistics-1.0.4-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "8a1f11ebc48aa34e40d41db40f38ae47",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.4",
        "size": 306816,
        "upload_time": "2020-08-08T06:16:02",
        "upload_time_iso_8601": "2020-08-08T06:16:02.516471Z",
        "url": "https://files.pythonhosted.org/packages/85/8f/4cbae1e48896d3da6b7ceababe5fbdf3c5c9edec0aac59fe4bf318a6e847/pyballistics-1.0.4-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ed8497c0c8366c0c6f0d177676861eb10e201c7642f61f47386b8a40b8f5bd4a",
          "md5": "c399af73fdc28db1c6778d5fa942222c",
          "sha256": "128f98c7fef62111982114f99dbd12b1b0d26b315ebc8be926b66c3901cd0eb1"
        },
        "downloads": -1,
        "filename": "pyballistics-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "c399af73fdc28db1c6778d5fa942222c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 447148,
        "upload_time": "2020-08-08T06:16:04",
        "upload_time_iso_8601": "2020-08-08T06:16:04.890116Z",
        "url": "https://files.pythonhosted.org/packages/ed/84/97c0c8366c0c6f0d177676861eb10e201c7642f61f47386b8a40b8f5bd4a/pyballistics-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ff00e6dd03cd833ec77daa419dffd80113dd8b85976e3fa8f1ecf99412076a37",
          "md5": "079419411b25d474b48d35c82b30594b",
          "sha256": "6ae14132d4cbf5868f3518b500862e77bdfa04707f8d7c176951e9de2f833edf"
        },
        "downloads": -1,
        "filename": "pyballistics-1.0.5-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "079419411b25d474b48d35c82b30594b",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.4",
        "size": 306815,
        "upload_time": "2020-08-08T06:24:59",
        "upload_time_iso_8601": "2020-08-08T06:24:59.916155Z",
        "url": "https://files.pythonhosted.org/packages/ff/00/e6dd03cd833ec77daa419dffd80113dd8b85976e3fa8f1ecf99412076a37/pyballistics-1.0.5-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "be2868653017e09c6a52ff977f870c6a8b6fc529ae4955c440c4e74ec136d083",
          "md5": "6c337f87ce49ec5dbe309da26cde65d1",
          "sha256": "b70f7de39f6b5c34c63d3ac4df37310db6bb2f1603f9133b580bf6ac5eff1d94"
        },
        "downloads": -1,
        "filename": "pyballistics-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "6c337f87ce49ec5dbe309da26cde65d1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 447135,
        "upload_time": "2020-08-08T06:25:02",
        "upload_time_iso_8601": "2020-08-08T06:25:02.016405Z",
        "url": "https://files.pythonhosted.org/packages/be/28/68653017e09c6a52ff977f870c6a8b6fc529ae4955c440c4e74ec136d083/pyballistics-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e07ecc407e52657146b739e85e267985d849e9f010bd917dafd8627dc5c1c723",
          "md5": "285bc54474bc4df476227596e818af0c",
          "sha256": "4820477bdc5bbfc7615a2928a3f867f09debeba4412da40ee8c9e2f554e63112"
        },
        "downloads": -1,
        "filename": "pyballistics-1.0.6-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "285bc54474bc4df476227596e818af0c",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.4",
        "size": 303963,
        "upload_time": "2020-08-08T06:27:41",
        "upload_time_iso_8601": "2020-08-08T06:27:41.864239Z",
        "url": "https://files.pythonhosted.org/packages/e0/7e/cc407e52657146b739e85e267985d849e9f010bd917dafd8627dc5c1c723/pyballistics-1.0.6-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4f433e0559b24b233ef7a8d854b429187f25b6afbcb83fd320c8c9bba9a4b55c",
          "md5": "f147196a6b1c2d1cd77d6c398f7888fc",
          "sha256": "2084d666bcee865f935f7877697c66cfb4e7eb8b8927aecb345a9189916b3726"
        },
        "downloads": -1,
        "filename": "pyballistics-1.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "f147196a6b1c2d1cd77d6c398f7888fc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 447132,
        "upload_time": "2020-08-08T06:27:44",
        "upload_time_iso_8601": "2020-08-08T06:27:44.888419Z",
        "url": "https://files.pythonhosted.org/packages/4f/43/3e0559b24b233ef7a8d854b429187f25b6afbcb83fd320c8c9bba9a4b55c/pyballistics-1.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "12111038ec5d9484900a57bb80ec7cf7e223b92eefc3d779311dce915b6cf6bb",
          "md5": "ec7b30fdfcdba5ff4e0dacf93880f467",
          "sha256": "e9e9e7410ab7e50adae503104056087f7a3f99dea538fcb36b8ca49b9f78b8f9"
        },
        "downloads": -1,
        "filename": "pyballistics-1.0.7-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "ec7b30fdfcdba5ff4e0dacf93880f467",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.4",
        "size": 322787,
        "upload_time": "2020-08-08T06:34:33",
        "upload_time_iso_8601": "2020-08-08T06:34:33.791116Z",
        "url": "https://files.pythonhosted.org/packages/12/11/1038ec5d9484900a57bb80ec7cf7e223b92eefc3d779311dce915b6cf6bb/pyballistics-1.0.7-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6aae9b2e485de56c60cb6794c245399d4bd1b513193c3d3d7875ae1c566cfd62",
          "md5": "e557d234970a9a14a59db121fdd28bad",
          "sha256": "d69e322cb76859e5c86fd3b394ad222a26c5d921e990edf9b0b1d860985ffc2a"
        },
        "downloads": -1,
        "filename": "pyballistics-1.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "e557d234970a9a14a59db121fdd28bad",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 447147,
        "upload_time": "2020-08-08T06:34:36",
        "upload_time_iso_8601": "2020-08-08T06:34:36.447930Z",
        "url": "https://files.pythonhosted.org/packages/6a/ae/9b2e485de56c60cb6794c245399d4bd1b513193c3d3d7875ae1c566cfd62/pyballistics-1.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e4d26d4e27a6b275ef03b14b08ef902acef5e782d38ef3215bffe0358b60d409",
          "md5": "ed4574b4fa0312ac5bf27f98ef543b27",
          "sha256": "cd24857728d727127b6aced5024040c86bca1fa16a1b0c70b9afff109260f00f"
        },
        "downloads": -1,
        "filename": "pyballistics-1.0.8-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "ed4574b4fa0312ac5bf27f98ef543b27",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.4",
        "size": 735838,
        "upload_time": "2020-08-08T06:42:11",
        "upload_time_iso_8601": "2020-08-08T06:42:11.411038Z",
        "url": "https://files.pythonhosted.org/packages/e4/d2/6d4e27a6b275ef03b14b08ef902acef5e782d38ef3215bffe0358b60d409/pyballistics-1.0.8-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "56706bfec80d9e50f2a5b4c9ee8a396c4487820c3ee217ec4c9fc07aa8fe4c2e",
          "md5": "b3d104035b7ab196c06334ffec7ae888",
          "sha256": "69102fb2df4b5f9976a55a9c0b10ec81b4fded1f1ca69df6ad5a14ab421d9210"
        },
        "downloads": -1,
        "filename": "pyballistics-1.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "b3d104035b7ab196c06334ffec7ae888",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 447104,
        "upload_time": "2020-08-08T06:42:14",
        "upload_time_iso_8601": "2020-08-08T06:42:14.370619Z",
        "url": "https://files.pythonhosted.org/packages/56/70/6bfec80d9e50f2a5b4c9ee8a396c4487820c3ee217ec4c9fc07aa8fe4c2e/pyballistics-1.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f119d90ba39b1003aad3df9189122b7b4a171a3b8881c0263a844e17c712cc83",
          "md5": "8f33ba96ef639ff7195b8830b0cff4d0",
          "sha256": "92ce1fe70c82a2f52f9b8eeea1215165b3cb0ec90718523fdae07a6d27760bc8"
        },
        "downloads": -1,
        "filename": "pyballistics-1.0.9-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "8f33ba96ef639ff7195b8830b0cff4d0",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.4",
        "size": 748513,
        "upload_time": "2020-08-11T13:18:30",
        "upload_time_iso_8601": "2020-08-11T13:18:30.186784Z",
        "url": "https://files.pythonhosted.org/packages/f1/19/d90ba39b1003aad3df9189122b7b4a171a3b8881c0263a844e17c712cc83/pyballistics-1.0.9-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "612313e8c5972b59778054400f9d4d0f9024e763c35bab7ae7bd6a396ac9905f",
          "md5": "f009fa2889439065a87e4dc808c88b17",
          "sha256": "6c79e6c2d24b887a6b03a14b11f62d7e26839b0c328be5801931552be3e70a7d"
        },
        "downloads": -1,
        "filename": "pyballistics-1.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "f009fa2889439065a87e4dc808c88b17",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 453408,
        "upload_time": "2020-08-11T13:18:32",
        "upload_time_iso_8601": "2020-08-11T13:18:32.560848Z",
        "url": "https://files.pythonhosted.org/packages/61/23/13e8c5972b59778054400f9d4d0f9024e763c35bab7ae7bd6a396ac9905f/pyballistics-1.0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "018ada5380e3a3acae31f42afd43f67d972242937ebf87f228ae91a993bb5e60",
          "md5": "009f3946c8e3921dc3b9a6e1c508a504",
          "sha256": "0b5e22666fdbf22083ec6c6beca9ccf3a95b4092c4def1b9b945173d9b55c135"
        },
        "downloads": -1,
        "filename": "pyballistics-1.1.0-cp38-cp38-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "009f3946c8e3921dc3b9a6e1c508a504",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.4",
        "size": 336795,
        "upload_time": "2021-09-13T12:01:43",
        "upload_time_iso_8601": "2021-09-13T12:01:43.478043Z",
        "url": "https://files.pythonhosted.org/packages/01/8a/da5380e3a3acae31f42afd43f67d972242937ebf87f228ae91a993bb5e60/pyballistics-1.1.0-cp38-cp38-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3c773a1fc377d91de3df939b2bf791dfff61232b401f1b154a9e50b49dba0933",
          "md5": "22dccf64f7139bc034ec1178c2c70a39",
          "sha256": "928524c393a821edcfa4ed88f7f6420b7c57cf3fa32a96ab69162a31009bf684"
        },
        "downloads": -1,
        "filename": "pyballistics-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "22dccf64f7139bc034ec1178c2c70a39",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 454380,
        "upload_time": "2021-09-13T12:01:45",
        "upload_time_iso_8601": "2021-09-13T12:01:45.866257Z",
        "url": "https://files.pythonhosted.org/packages/3c/77/3a1fc377d91de3df939b2bf791dfff61232b401f1b154a9e50b49dba0933/pyballistics-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ab6c46a3cf12e774716744359c13863f56432c98fe8a24424f3d133c58248a40",
          "md5": "c30214f53d3ba4eee347b8b807b42ab5",
          "sha256": "25e7034882263fc2f69914c6a7986a379e8f2e897af1c1e3562a0bfd7a0d3876"
        },
        "downloads": -1,
        "filename": "pyballistics-1.1.2-cp39-cp39-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "c30214f53d3ba4eee347b8b807b42ab5",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": ">=3.4",
        "size": 716492,
        "upload_time": "2023-01-30T05:10:23",
        "upload_time_iso_8601": "2023-01-30T05:10:23.514885Z",
        "url": "https://files.pythonhosted.org/packages/ab/6c/46a3cf12e774716744359c13863f56432c98fe8a24424f3d133c58248a40/pyballistics-1.1.2-cp39-cp39-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "55e0269957c336ac86f822b12dc1ff5b5fbd34138850e628f9f4f3be92d17225",
          "md5": "e9454bff7ab65b845a1a6265b89233f1",
          "sha256": "9fd3eb569aa522829e8266ac932e7047e79f9e4aed447337b04872aa95d119cf"
        },
        "downloads": -1,
        "filename": "pyballistics-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e9454bff7ab65b845a1a6265b89233f1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 459097,
        "upload_time": "2023-01-30T05:10:28",
        "upload_time_iso_8601": "2023-01-30T05:10:28.692403Z",
        "url": "https://files.pythonhosted.org/packages/55/e0/269957c336ac86f822b12dc1ff5b5fbd34138850e628f9f4f3be92d17225/pyballistics-1.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ab6c46a3cf12e774716744359c13863f56432c98fe8a24424f3d133c58248a40",
        "md5": "c30214f53d3ba4eee347b8b807b42ab5",
        "sha256": "25e7034882263fc2f69914c6a7986a379e8f2e897af1c1e3562a0bfd7a0d3876"
      },
      "downloads": -1,
      "filename": "pyballistics-1.1.2-cp39-cp39-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "c30214f53d3ba4eee347b8b807b42ab5",
      "packagetype": "bdist_wheel",
      "python_version": "cp39",
      "requires_python": ">=3.4",
      "size": 716492,
      "upload_time": "2023-01-30T05:10:23",
      "upload_time_iso_8601": "2023-01-30T05:10:23.514885Z",
      "url": "https://files.pythonhosted.org/packages/ab/6c/46a3cf12e774716744359c13863f56432c98fe8a24424f3d133c58248a40/pyballistics-1.1.2-cp39-cp39-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "55e0269957c336ac86f822b12dc1ff5b5fbd34138850e628f9f4f3be92d17225",
        "md5": "e9454bff7ab65b845a1a6265b89233f1",
        "sha256": "9fd3eb569aa522829e8266ac932e7047e79f9e4aed447337b04872aa95d119cf"
      },
      "downloads": -1,
      "filename": "pyballistics-1.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "e9454bff7ab65b845a1a6265b89233f1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.4",
      "size": 459097,
      "upload_time": "2023-01-30T05:10:28",
      "upload_time_iso_8601": "2023-01-30T05:10:28.692403Z",
      "url": "https://files.pythonhosted.org/packages/55/e0/269957c336ac86f822b12dc1ff5b5fbd34138850e628f9f4f3be92d17225/pyballistics-1.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}