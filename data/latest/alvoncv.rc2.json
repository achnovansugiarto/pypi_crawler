{
  "info": {
    "author": "Deepak Singh",
    "author_email": "deepaksinghgs30@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# Computer Vision Helper Packages\n\n---\n\n- Face Detection\n- Face Mesh\n\n## Install the package\n```sh\npip install alvonCV\n```\n\n## Demo Code for Face Detection\n\n```c\nimport alvonCV\nimport cv2\nimport time\n\ncap = cv2.VideoCapture(0)\npTime = 0\n# here you use the alvonCV package\nfaceDetectorObj = alvonCV.FaceDetector()\n\nwhile True:\n    success, img = cap.read()\n    img, bboxs = faceDetectorObj.findFaces(img, draw=True)\n    cTime = time.time()\n    fps = 1 / (cTime - pTime)\n    pTime = cTime\n    cv2.putText(img, f'FPS: {int(fps)}', (20, 70), cv2.FONT_HERSHEY_PLAIN, 3, (0, 255, 0), 2)\n    cv2.imshow(\"Image\", img)\n    cv2.waitKey(1)\n```\n\n## Demo Code for Face Mesh\n\n```c\nimport alvonCV\nimport cv2\nimport time\n\ncap = cv2.VideoCapture(0)\npTime = 0\nfaceDetectorObj = alvonCV.FaceMeshDetector()\n\nwhile True:\n    success, img = cap.read()\n    img = faceDetectorObj.findFaceMesh(img, draw=True)\n    cTime = time.time()\n    fps = 1 / (cTime - pTime)\n    pTime = cTime\n    cv2.putText(img, f'FPS: {int(fps)}', (20, 70), cv2.FONT_HERSHEY_PLAIN, 3, (0, 255, 0), 2)\n    cv2.imshow(\"Image\", img)\n    cv2.waitKey(1)\n\n```\n\n## Demo Code for Hand Detector\n\n```c\nimport alvonCV\nimport cv2\nimport time\n\ncap = cv2.VideoCapture(0)\ndetector = alvonCV.HandDetector(detectionCon=0.8, maxHands=1)\nwhile True:\n    # Get image frame\n    success, img = cap.read()\n    \n    # Find the hand and its landmarks\n    img = detector.findHands(img)\n    lmList, bbox = detector.findPosition(img)\n    fingersUp = detector.fingersUp()\n    print(fingersUp)\n\n    # Display\n    cv2.imshow(\"Image\", img)\n    cv2.waitKey(1)\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/alvon-X/alvonCV/archive/refs/tags/v_02_01.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/alvon-X/alvonCV",
    "keywords": "Computer Vision,Face Mesh,Face Detection,alvon",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "alvonCV",
    "package_url": "https://pypi.org/project/alvonCV/",
    "platform": "",
    "project_url": "https://pypi.org/project/alvonCV/",
    "project_urls": {
      "Download": "https://github.com/alvon-X/alvonCV/archive/refs/tags/v_02_01.tar.gz",
      "Homepage": "https://github.com/alvon-X/alvonCV"
    },
    "release_url": "https://pypi.org/project/alvonCV/0.2.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Computer Vision Helper Package",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10296691,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2d0d97be47b965be2e986391810ac7a63de66d4a0b1f8f62989b6b1b8085dd48",
          "md5": "7772701e83be4cb2c039ada8ee3a4362",
          "sha256": "f849960f4f79eee93bf3b1b8bbb5cf031ca14ff1c423f62a2e2223afee19c600"
        },
        "downloads": -1,
        "filename": "alvonCV-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7772701e83be4cb2c039ada8ee3a4362",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2854,
        "upload_time": "2021-05-08T19:17:48",
        "upload_time_iso_8601": "2021-05-08T19:17:48.069198Z",
        "url": "https://files.pythonhosted.org/packages/2d/0d/97be47b965be2e986391810ac7a63de66d4a0b1f8f62989b6b1b8085dd48/alvonCV-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc2ac14b71b07f82cf7789949e58d2deb5ebc48af620bbe1bfb27351b10130ba",
          "md5": "cbcfda80fdb77a3f2abb0581e2e2ca4f",
          "sha256": "b234407497300596f61200522315fc5bec8e2bcd5ea9944aad5c29bcd48a9cf4"
        },
        "downloads": -1,
        "filename": "alvonCV-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "cbcfda80fdb77a3f2abb0581e2e2ca4f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5890,
        "upload_time": "2021-05-08T21:00:07",
        "upload_time_iso_8601": "2021-05-08T21:00:07.804858Z",
        "url": "https://files.pythonhosted.org/packages/dc/2a/c14b71b07f82cf7789949e58d2deb5ebc48af620bbe1bfb27351b10130ba/alvonCV-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dc2ac14b71b07f82cf7789949e58d2deb5ebc48af620bbe1bfb27351b10130ba",
        "md5": "cbcfda80fdb77a3f2abb0581e2e2ca4f",
        "sha256": "b234407497300596f61200522315fc5bec8e2bcd5ea9944aad5c29bcd48a9cf4"
      },
      "downloads": -1,
      "filename": "alvonCV-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "cbcfda80fdb77a3f2abb0581e2e2ca4f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5890,
      "upload_time": "2021-05-08T21:00:07",
      "upload_time_iso_8601": "2021-05-08T21:00:07.804858Z",
      "url": "https://files.pythonhosted.org/packages/dc/2a/c14b71b07f82cf7789949e58d2deb5ebc48af620bbe1bfb27351b10130ba/alvonCV-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}