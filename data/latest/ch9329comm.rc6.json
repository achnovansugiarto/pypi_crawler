{
  "info": {
    "author": "北极小狐",
    "author_email": "yuhao888123@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# ch9329_comm\r\n\r\n这是一个 Python 包，其提供了对 CH9329 芯片的快捷通信方法\r\n\r\n> CH9329 芯片是由沁恒生产的一种串口转HID键盘鼠标芯片。它可以将上位机发送的串口数据转换为标准的USB键鼠设备信号，并将其发送给下位机，从而实现硬件级别的键鼠模拟。\r\n\r\n[![ch9329Comm version](https://badge.fury.io/py/ch9329Comm.svg)](https://badge.fury.io/py/ch9329Comm)\r\n\r\n导入包：\r\n\r\n```bash\r\npip install ch9329Comm\r\n```\r\n\r\n\r\n\r\n> **注意！**\r\n>\r\n> 在开始之前，您需要自行将 CH9329 芯片参数修改为：波特率：`115200` 、串口包间隔：`1ms`，否则某些方法不能正常工作。\r\n>\r\n> ~（可以参考协议文档向串口发送数据包修改，也可以使用厂商的上位机软件修改，注意修改配置后在下一次上电时才会生效）~\r\n\r\n## 发送键盘数据包\r\n\r\n`keyboard` 模块的 `DataComm` 类中提供了向串口快速发送键盘数据包的方法：`send_data()`\r\n\r\n### 初始化\r\n\r\n语法：\r\n\r\n```python\r\nch9329Comm.keyboard.DataComm()\r\n```\r\n\r\n参数：无\r\n\r\n返回：\r\n\r\n- 一个 keyboard 模块 DataComm 类的实例\r\n\r\n示例：\r\n\r\n```python\r\nimport ch9329Comm\r\n\r\nkeyboard = ch9329Comm.keyboard.DataComm()\r\n```\r\n\r\n### send_data()\r\n\r\n语法：\r\n\r\n```python\r\nsend_data(data, [ctrl], [port])\r\n```\r\n\r\n参数:\r\n- data (str): 要发送的按键信息，一次最多发送6个按键信息。<br>\r\n  按键信息包含在字典中，默认仅包含了26个字母按键，比如按键`C`对应`CC`，如需要使用其它按键可以自行根据协议文档扩充\r\n- ctrl (str): 可选，要发送的控制键，不填则默认不按下控制键。\r\n- port (serial): 可选，要发送数据的串口，如果不填则默认为serial。\r\n\r\n返回:\r\n- bool: 如果数据成功发送，则为True，否则为False。\r\n\r\n示例：\r\n\r\n```python\r\nimport serial\r\nimport ch9329Comm\r\n\r\nserial.ser = serial.Serial('COM4', 115200)  # 开启串口\r\n\r\n# 键盘输出helloworld\r\nkeyboard = ch9329Comm.keyboard.DataComm()\r\nkeyboard.send_data('HHEELLLLOO')  # 按下HELLO\r\nkeyboard.release()  # 松开\r\nkeyboard.send_data('WWOORRLLDD')  # 按下WORLD\r\nkeyboard.release()  # 松开\r\n\r\nserial.ser.close()  # 关闭串口\r\n```\r\n\r\n\r\n\r\n> 注意！\r\n> 无法同时按下多个普通按键，后按下的按键会覆盖原来的按键，哪怕是一次发送多个按键\r\n\r\n控制键的可选值：\r\n\r\n| 可选值  | 含义        |\r\n| ------- | ----------- |\r\n| R_WIN   | 右Winodws键 |\r\n| R_ALT   | 右Alt键     |\r\n| R_SHIFT | 右Shift键   |\r\n| R_CTRL  | 右Ctrl键    |\r\n| L_WIN   | 左Winodws键 |\r\n| L_ALT   | 左Alt键     |\r\n| L_SHIFT | 左Shift键   |\r\n| L_CTRL  | 左Ctrl键    |\r\n\r\n你也可以传入一个16进制的数值以发送组合键，形如`0x00`，关于数值的定义与通信协议文档中相同\r\n\r\n示例：\r\n\r\n```python\r\nimport serial\r\nimport ch9329Comm\r\n\r\nserial.ser = serial.Serial('COM4', 115200)  # 开启串口\r\n\r\nkeyboard = ch9329Comm.keyboard.DataComm()\r\nkeyboard.send_data('',0x03) # 同时按下ctrl+shift\r\nkeyboard.release()  # 松开\r\n\r\nserial.ser.close()  # 关闭串口\r\n```\r\n## 发送鼠标数据包\r\n\r\n`mouse` 模块的 `DataComm` 类中提供了向串口快速发送鼠标数据包的四个方法：\r\n\r\n- `send_data_absolute()`：绝对移动，将鼠标闪现到相对于屏幕左上角距离x,y的位置\r\n\r\n- `send_data_relatively()`：相对移动，将鼠标闪现到以鼠标当前位置为原点的坐标系上点(x,y)的位置\r\n- `move_to_basic()`：基于`send_data_relatively()`，其会自动生成随机路径，将鼠标指针沿轨迹移动到点(x,y)的位置\r\n- `move_to()`（推荐）:对于 `move_to()` 的改进方法，添加了自动误差校正\r\n\r\n### 初始化\r\n\r\n语法：\r\n\r\n```python\r\nch9329Comm.mouse.DataComm([screen_width],[screen_height])\r\n```\r\n\r\n参数：\r\n\r\n- screen_width：可选，屏幕的宽度，默认为3840\r\n- screen_height：可选，屏幕的高度，默认为2160\r\n\r\n返回：\r\n\r\n- 一个 mouse 模块 DataComm 类的实例\r\n\r\n示例：\r\n\r\n```python\r\nimport ch9329Comm\r\n\r\nmouse = ch9329Comm.mouse.DataComm(1920,1080) # 屏幕分辨率为1920*1080\r\n```\r\n\r\n\r\n\r\n### send_data_absolute()\r\n\r\n将鼠标闪现到相对于屏幕左上角距离x,y的位置\r\n\r\n语法：\r\n\r\n```python\r\nsend_data_absolute(x, y, [ctrl], [port])\r\n```\r\n\r\n参数：\r\n- x (int)：鼠标光标的x坐标。\r\n- y (int)：鼠标光标的y坐标。\r\n- ctrl (str)：可选，按下的控制键，如果省略则默认为NU，即只移动鼠标，不按下任何按键。\r\n  > 注意！这表示按住鼠标控制键并移动鼠标，\r\n- port (serial)：可选，要发送数据的串口，如果不填则默认为serial。\r\n\r\n返回：\r\n- 如果成功发送数据，则返回True，否则返回False。\r\n\r\n示例：\r\n\r\n```python\r\nimport serial\r\nimport ch9329Comm\r\n\r\nserial.ser = serial.Serial('COM4', 115200)  # 开启串口\r\n\r\nmouse = ch9329Comm.mouse.DataComm()\r\nmouse.send_data_absolute(100, 100) # （绝对）鼠标移动到屏幕的左上100*100的位置\r\n\r\nserial.ser.close()  # 关闭串口\r\n```\r\n\r\n控制键的可选值：\r\n\r\n| 可选值 | 含义 |\r\n| ------ | ---- |\r\n| NU     |      |\r\n| LE     | 左键 |\r\n| RI     | 右键 |\r\n| CE     | 中键 |\r\n\r\n你也可以传入一个16进制的数值以发送组合键，形如`0x00`，关于数值的定义与通信协议文档中相同\r\n\r\n\r\n\r\n### send_data_relatively()\r\n\r\n将鼠标闪现到以鼠标当前位置为原点的坐标系上点(x,y)的位置\r\n\r\n语法：\r\n\r\n```python\r\nsend_data_relatively(x, y, [ctrl], [port])\r\n```\r\n参数：\r\n- x (int)：相对的x坐标。\r\n- y (int)：相对的y坐标。\r\n- ctrl (str)：可选，按下的控制键，如果省略则默认为NU，即只移动鼠标，不按下任何按键。\r\n  > 注意！这表示按住鼠标控制键并移动鼠标，\r\n- port (Serial)：可选，要发送数据的串口，如果不填则默认为serial。\r\n\r\n返回：\r\n- bool：如果成功发送数据，则返回True，否则返回False。\r\n\r\n示例：\r\n\r\n```python\r\nimport serial\r\nimport ch9329Comm\r\n\r\nserial.ser = serial.Serial('COM4', 115200)  # 开启串口\r\n\r\n# （相对）鼠标右移100px 下移100px并单击左键\r\nmouse = ch9329Comm.mouse.DataComm()\r\nmouse.send_data_relatively(100, -100)\r\nmouse.click()  # 单击左键\r\n\r\nserial.ser.close()  # 关闭串口\r\n```\r\n\r\n控制键的可选值：\r\n\r\n| 可选值 | 含义 |\r\n| ------ | ---- |\r\n| NU     |      |\r\n| LE     | 左键 |\r\n| RI     | 右键 |\r\n| CE     | 中键 |\r\n\r\n你也可以传入一个16进制的数值以发送组合键，形如`0x00`，关于数值的定义与通信协议文档中相同\r\n\r\n### move_to_basic()\r\n\r\n将鼠标沿随机生成的轨迹移动到以鼠标当前位置为原点的坐标系上点(x,y)的位置\r\n\r\n其会调用`BezierTrajectory`类中的方法，自动生成随机路径，并将路径分解为步长 0 ~ 2px 的路径点的集合，\r\n\r\n其以每 1.6ms 一个的频率发送数据包，指针每1.6ms最多会在屏幕上移动两个像素点（大部分时间只会移动1个像素点）\r\n\r\n语法：\r\n\r\n```python\r\nmove_to_basic(x, y, ctrl, port)\r\n```\r\n\r\n参数：\r\n- x：目标的x坐标。\r\n- y：目标的y坐标。\r\n- ctrl：鼠标移动的控制字符（默认为空字符串）。\r\n- port：串口（默认为serial）。\r\n\r\n返回：\r\n- None\r\n\r\n控制键的可选值：\r\n\r\n| 可选值 | 含义 |\r\n| ------ | ---- |\r\n| NU     |      |\r\n| LE     | 左键 |\r\n| RI     | 右键 |\r\n| CE     | 中键 |\r\n\r\n你也可以传入一个16进制的数值以发送组合键，形如`0x00`，关于数值的定义与通信协议文档中相同\r\n\r\n### move_to()（推荐）\r\n\r\n将鼠标沿随机生成的轨迹移动到以鼠标当前位置为原点的坐标系上点(x,y)的位置\r\n\r\n其是对于 `move_to_basic()` 的改进方法，添加了自动误差校正\r\n\r\n> **注意初始化：**\r\n>\r\n> 第一次调用该方法时，其会自动在项目路径下新建 `\\corrector\\information.json` 文件，\r\n>\r\n> 然后自动多次调用 `check_difference_ratio()` 方法，检查当前环境中鼠标指针在屏幕上的移动理论值和实际值之间的差异，\r\n>\r\n> 并根据差异的平均值对目标(x,y)进行修正，在此期间鼠标指针会自动在屏幕上跳跃或者移动，请不要触碰你的实际物理鼠标以免影响检查。\r\n>\r\n> 其会将在修正值存储在 `\\corrector\\information.json`中，以后调用该方法时会自动到文件中读取修正值，如果需要重新生成校正值，请手动删除 `\\corrector\\information.json` 文件\r\n\r\n语法：\r\n\r\n```python\r\nmove_to(dest_x, dest_y, ctrl, port)\r\n```\r\n\r\n参数：\r\n\r\n- dest_x (int)：目标的x坐标。\r\n- dest_y (int)：目标的y坐标。\r\n- ctrl (str, optional)：要发送到串口的控制字符。默认为''。\r\n- port (serial, optional)：要使用的串口。默认为serial。\r\n\r\n返回：\r\n\r\n- difference_ratio：鼠标指针实际移动量与目标移动量的比值（0 ~ 1）\r\n\r\n示例：\r\n\r\n```python\r\nimport serial\r\nimport ch9329Comm\r\n\r\nserial.ser = serial.Serial('COM4', 115200)  # 开启串口\r\n\r\nmouse = ch9329Comm.mouse.DataComm()\r\nmouse.move_to(-230,-480) # 生成路径并沿路径移动到(-230,-480)\r\n\r\nserial.ser.close()  # 关闭串口\r\n```\r\n\r\n控制键的可选值：\r\n\r\n| 可选值 | 含义 |\r\n| ------ | ---- |\r\n| NU     |      |\r\n| LE     | 左键 |\r\n| RI     | 右键 |\r\n| CE     | 中键 |\r\n\r\n你也可以传入一个16进制的数值以发送组合键，形如`0x00`，关于数值的定义与通信协议文档中相同\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ch9329Comm",
    "package_url": "https://pypi.org/project/ch9329Comm/",
    "platform": null,
    "project_url": "https://pypi.org/project/ch9329Comm/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/ch9329Comm/1.0.9/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "提供CH9329芯片的键盘/鼠标串口快捷通信方法",
    "version": "1.0.9",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17441347,
  "releases": {
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b5ccbf3c284a946b48d034f9f23a80b88f362cf469183cb35de655a8e86ea543",
          "md5": "63827c8fe4bc76f9ea8bb02ea29d86d7",
          "sha256": "4231f710dcfe8ab18daacca290607a0df03f6c1bc39368353ef3de6eb5abf090"
        },
        "downloads": -1,
        "filename": "ch9329Comm-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "63827c8fe4bc76f9ea8bb02ea29d86d7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9889,
        "upload_time": "2023-03-24T07:29:45",
        "upload_time_iso_8601": "2023-03-24T07:29:45.176932Z",
        "url": "https://files.pythonhosted.org/packages/b5/cc/bf3c284a946b48d034f9f23a80b88f362cf469183cb35de655a8e86ea543/ch9329Comm-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6770145aa1f003d8d935ac0b033f61fb3a95db7871f3268896db7c425850e479",
          "md5": "fbe7fcf1b55fc78be048ca3368e587fd",
          "sha256": "50fdcc8b04760d8aff96107a8e2db7144085b9d89d5253c45ee46eff6be70cb3"
        },
        "downloads": -1,
        "filename": "ch9329Comm-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "fbe7fcf1b55fc78be048ca3368e587fd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9892,
        "upload_time": "2023-03-24T07:44:50",
        "upload_time_iso_8601": "2023-03-24T07:44:50.094043Z",
        "url": "https://files.pythonhosted.org/packages/67/70/145aa1f003d8d935ac0b033f61fb3a95db7871f3268896db7c425850e479/ch9329Comm-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1dbd3d0cadf8d5a2df25a56c825590d04ce615c325eb8464256a025fcd70df09",
          "md5": "4170e3a8c9fa054325587ce11f1ca2ab",
          "sha256": "d0a4eb6a45c80712eebca51cca5d80a907a607d699f781a1954665a2d72b4623"
        },
        "downloads": -1,
        "filename": "ch9329Comm-1.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "4170e3a8c9fa054325587ce11f1ca2ab",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9893,
        "upload_time": "2023-03-24T08:03:06",
        "upload_time_iso_8601": "2023-03-24T08:03:06.763959Z",
        "url": "https://files.pythonhosted.org/packages/1d/bd/3d0cadf8d5a2df25a56c825590d04ce615c325eb8464256a025fcd70df09/ch9329Comm-1.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b1746a2bfa4eab0095b9708a259cb58e0162db61fb5288ac85f62586ad1d1beb",
          "md5": "ff84cda7f20a64ca8afedbcdd368899c",
          "sha256": "0aad2c007faedeccc9a3b0d04142e1bf73d3c78e109ac83a624fe893f4f46937"
        },
        "downloads": -1,
        "filename": "ch9329Comm-1.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "ff84cda7f20a64ca8afedbcdd368899c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9859,
        "upload_time": "2023-03-24T15:59:35",
        "upload_time_iso_8601": "2023-03-24T15:59:35.678919Z",
        "url": "https://files.pythonhosted.org/packages/b1/74/6a2bfa4eab0095b9708a259cb58e0162db61fb5288ac85f62586ad1d1beb/ch9329Comm-1.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a95c4aa66aa743c245d97c61752fc741aaf29df4603f4025596c13d6b0d21688",
          "md5": "08f617a287beaa08a04bed0001bb9cf5",
          "sha256": "065e7844a6b286e80adeb01fc63577458e77efbab46078a164e82856ac5ffc30"
        },
        "downloads": -1,
        "filename": "ch9329Comm-1.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "08f617a287beaa08a04bed0001bb9cf5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12512,
        "upload_time": "2023-03-24T16:44:45",
        "upload_time_iso_8601": "2023-03-24T16:44:45.113247Z",
        "url": "https://files.pythonhosted.org/packages/a9/5c/4aa66aa743c245d97c61752fc741aaf29df4603f4025596c13d6b0d21688/ch9329Comm-1.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4e8665ac6818b06066eeb6947856d8cae360fe79e9de5c4bf32eaa531ec99091",
          "md5": "c80f773bedaef8cf3fc96db7a9d4889f",
          "sha256": "7b4b3d87901eff593585961bee017d226730b2cb59a28c39a1c6f13b3ee435c6"
        },
        "downloads": -1,
        "filename": "ch9329Comm-1.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "c80f773bedaef8cf3fc96db7a9d4889f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12851,
        "upload_time": "2023-03-25T10:56:06",
        "upload_time_iso_8601": "2023-03-25T10:56:06.382939Z",
        "url": "https://files.pythonhosted.org/packages/4e/86/65ac6818b06066eeb6947856d8cae360fe79e9de5c4bf32eaa531ec99091/ch9329Comm-1.0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4e8665ac6818b06066eeb6947856d8cae360fe79e9de5c4bf32eaa531ec99091",
        "md5": "c80f773bedaef8cf3fc96db7a9d4889f",
        "sha256": "7b4b3d87901eff593585961bee017d226730b2cb59a28c39a1c6f13b3ee435c6"
      },
      "downloads": -1,
      "filename": "ch9329Comm-1.0.9.tar.gz",
      "has_sig": false,
      "md5_digest": "c80f773bedaef8cf3fc96db7a9d4889f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12851,
      "upload_time": "2023-03-25T10:56:06",
      "upload_time_iso_8601": "2023-03-25T10:56:06.382939Z",
      "url": "https://files.pythonhosted.org/packages/4e/86/65ac6818b06066eeb6947856d8cae360fe79e9de5c4bf32eaa531ec99091/ch9329Comm-1.0.9.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}