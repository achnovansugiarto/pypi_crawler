{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "MotionHistoryImage Python Library\n===================================\nImage-Processing library built in Python 3.7 allowing developers to easily\ngenerate MHI images from from a list of frames. A motion history image (MHI) is a static image template\nthat helps in understanding the motion location and path as it progresses. Using MHI, moving parts of a video\nsequence can be engraved within a single image, from where the motion flow can be predicted.\n<br>\n\nEssentially this library is concatenating a series of frames into one single image, where brighter values correspond\nto a more recent motion\n\n<h5>Example:</h5>\n<p align=\"center\">\n     <img src=\"https://i.imgur.com/JthsG7X.png?1\">\n</p>\n\n<p align=\"center\">\n    <img src=\"https://i.imgur.com/WEeijLL.png?1\">\n</p>\n\n I'd recommend using OpenCV to perform background subtraction on frames being processed.\n I'll add a code snippet below to demonstrate how I got the above background subtraction images from raw frames.\n\n```python\nimport cv2 as cv\nIMG_SIZE = 224\nframe = cv.resize(frame, (IMG_SIZE, IMG_SIZE))\n\n# Filters tend to provide smoother subtraction with less background noise\nframe = cv.medianBlur(frame, 5)\nframe = cv.filter2D(frame, -1, kernel)\n\nfgbg = cv.createBackgroundSubtractorMOG2()\nmask = fgbg.apply(image)\n```\n\nSetup\n==========   \n\nYou can either setup this library by cloning this repo and running setup.py from the install directory.\n\n```\n$  git clone https://github.com/larrett/mhi.git\n$  cd mhi\n$  python setup.py install\n```\n\nAlternatively, use this command to install via pip:\n\n```\n$ sudo pip install easy-mhi\n```\n\nUsage\n==========\n* Import the MotionHistoryImage library\n\n```python\nfrom easy-mhi import generate_mhi\n```\n\n* Below is an demonstration of how I used the library to generate MHI's from \n        a directory containing background subtracted images I wanted to combine in incremental order, \n        and saving them.\n\n\n```python\nfrom PIL import Image\nimport os\nimport shutil\nfrom easy-mhi import generate_mhi\n\n\ndef generate_mhi_frames(\n    file_dir,\n    num_frames_per_mhi,\n    start_index=1,\n    output_dir='mhi_output',\n    ):\n\n    all_frames = []  # Create list of frames\n    i = start_index\n    while True:  # For all files\n        file = file_dir + '/' + str(i) + '.jpg'  # File from starting index\n        try:\n            img_pixels = Image.open(file).convert('RGB').load()  # Open and load the file\n            all_frames.append(img_pixels)  # Append file to list of frames\n            print('Loaded frame ' + file)\n        except IOError:\n            print('Assuming all images are loaded... (next sequential file ' \\\n                + file + ' does not exist)')\n            break\n        i += 1  # Increment index\n    print('Loaded ' + str(len(all_frames)) + ' raw motion frames!')\n\n    # Generate each MHI frame\n    num_mhis = len(all_frames) - num_frames_per_mhi + 1  # Calculation how many MHI images should be generated\n    for i in range(num_mhis):\n\n        # Compile list of frames to be used for this MHI\n        mhi_frames = []  # Create a list of MHI frames\n        for j in range(num_frames_per_mhi):  # Loop for amount of frames inside each MHI\n            mhi_frames.append(all_frames[i + j])  # Specify which frames to get added to MHI\n\n        # Generate MHI\n        img = generate_mhi(mhi_frames, 224, 224)  # Generate 224x224 MHI based on frames in mhi_frames list\n        output_path = output_dir + '/' + str(i + 1) + '.png'  # Create string for outputPath\n        img.save(output_path)  # Save new MHI to outputPath\n        print('MHI ' + str(i + 1) + ' saved to ' + output_path)\n        # Return to top of loop, generate next MHI for the frames\n\n    print('Generated and saved a total of ' + str(num_mhis) \\\n        + ' MHI frames to ' + file_dir + '/mhi_output/')\n```\n\n<sup>Use this project for whatever you want, I built this for my machine-learning thesis on fall detection.<sup>\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/larrett/mhi",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "easy-mhi",
    "package_url": "https://pypi.org/project/easy-mhi/",
    "platform": "",
    "project_url": "https://pypi.org/project/easy-mhi/",
    "project_urls": {
      "Bug Reports": "https://github.com/larrett/mhi/issues",
      "Homepage": "https://github.com/larrett/mhi"
    },
    "release_url": "https://pypi.org/project/easy-mhi/1.3/",
    "requires_dist": [
      "Pillow (~=8.0)"
    ],
    "requires_python": "",
    "summary": "Simple library that can be used to generate motion history images from video frames",
    "version": "1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8570717,
  "releases": {
    "1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8f86e335707579490443f81957476f678f95e8fe386eac81dd69d7d5361e4355",
          "md5": "293b6769f50df65988244deb023eec33",
          "sha256": "84f8e18b754ac5b4226bdee63fdfba0a6f353e14338157fe546780317c74552f"
        },
        "downloads": -1,
        "filename": "easy_mhi-1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "293b6769f50df65988244deb023eec33",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4131,
        "upload_time": "2020-11-03T13:37:31",
        "upload_time_iso_8601": "2020-11-03T13:37:31.639830Z",
        "url": "https://files.pythonhosted.org/packages/8f/86/e335707579490443f81957476f678f95e8fe386eac81dd69d7d5361e4355/easy_mhi-1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9cd0c3285f34701c0b403afd51d8aa6a33d54af80d0448659c24f92e2ad4a39a",
          "md5": "30743e9ff567bdb54c8fb4e7811beecf",
          "sha256": "8bc8ea3c0ede9e5d4c0094ae78e29c1ce81f5faca59b424777cfd60c25f3fc15"
        },
        "downloads": -1,
        "filename": "easy-mhi-1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "30743e9ff567bdb54c8fb4e7811beecf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3635,
        "upload_time": "2020-11-03T13:37:38",
        "upload_time_iso_8601": "2020-11-03T13:37:38.454105Z",
        "url": "https://files.pythonhosted.org/packages/9c/d0/c3285f34701c0b403afd51d8aa6a33d54af80d0448659c24f92e2ad4a39a/easy-mhi-1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8f86e335707579490443f81957476f678f95e8fe386eac81dd69d7d5361e4355",
        "md5": "293b6769f50df65988244deb023eec33",
        "sha256": "84f8e18b754ac5b4226bdee63fdfba0a6f353e14338157fe546780317c74552f"
      },
      "downloads": -1,
      "filename": "easy_mhi-1.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "293b6769f50df65988244deb023eec33",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 4131,
      "upload_time": "2020-11-03T13:37:31",
      "upload_time_iso_8601": "2020-11-03T13:37:31.639830Z",
      "url": "https://files.pythonhosted.org/packages/8f/86/e335707579490443f81957476f678f95e8fe386eac81dd69d7d5361e4355/easy_mhi-1.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9cd0c3285f34701c0b403afd51d8aa6a33d54af80d0448659c24f92e2ad4a39a",
        "md5": "30743e9ff567bdb54c8fb4e7811beecf",
        "sha256": "8bc8ea3c0ede9e5d4c0094ae78e29c1ce81f5faca59b424777cfd60c25f3fc15"
      },
      "downloads": -1,
      "filename": "easy-mhi-1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "30743e9ff567bdb54c8fb4e7811beecf",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3635,
      "upload_time": "2020-11-03T13:37:38",
      "upload_time_iso_8601": "2020-11-03T13:37:38.454105Z",
      "url": "https://files.pythonhosted.org/packages/9c/d0/c3285f34701c0b403afd51d8aa6a33d54af80d0448659c24f92e2ad4a39a/easy-mhi-1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}