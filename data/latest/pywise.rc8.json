{
  "info": {
    "author": "Malcolm Greaves",
    "author_email": "greaves.malcolm@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# `pywise`\n[![PyPI version](https://badge.fury.io/py/pywise.svg)](https://badge.fury.io/py/pywise) [![CircleCI](https://circleci.com/gh/malcolmgreaves/pywise/tree/main.svg?style=svg)](https://circleci.com/gh/malcolmgreaves/pywise/tree/main) [![Coverage Status](https://coveralls.io/repos/github/malcolmgreaves/pywise/badge.svg?branch=main)](https://coveralls.io/github/malcolmgreaves/pywise?branch=main)\n\nContains functions that provide general utility and build upon the Python 3 standard library. It has no external dependencies.\n  - `serialization`: serialization & deserialization for `NamedTuple`-deriving & `@dataclass` decorated classes\n  - `archives`: uncompress tar archives\n  - `common`: utilities\n  - `schema`: obtain a `dict`-like structure describing the fields & types for any serialzable type (helpful to view as JSON)\n\nThis project's most notable functionality are the `serialize` and `deserialize` funtions of `core_utils.serialization`.\nTake a look at the end of this document for example use.\n\n\n\n## Development Setup\nThis project uses [`poetry`](https://python-poetry.org/) for virtualenv and dependency management. We recommend using [`brew`](https://brew.sh/) to install `poetry` system-wide.\n\nTo install the project's dependencies, perform:\n```\npoetry install\n```\n\nEvery command must be run within the `poetry`-managed environment.\nFor instance, to open a Python shell, you would execute:\n```\npoetry run python\n```\nAlternatively, you may activate the environment by performing `poetry shell` and directly invoke Python programs.\n\n\n#### Testing\nTo run tests, execute:\n```\npoetry run pytest -v\n```\nTo run tests against all supported environments, use [`tox`](https://tox.readthedocs.io/en/latest/):\n```\npoetry run tox -p\n```\nNOTE: To run `tox`, you must have all necessary Python interpreters available.\n      We recommend using [`pyenv`](https://github.com/pyenv/pyenv) to manage your Python versions.\n\n\n#### Dev Tools\nThis project uses `black` for code formatting, `flake8` for linting, and\n`mypy` for type checking. Use the following commands to ensure code quality:\n```\n# formats all code in-place\nblack .\n\n# typechecks\nmypy --ignore-missing-imports --follow-imports=silent --show-column-numbers --warn-unreachable .\n\n# lints code\nflake8 --max-line-length=100 --ignore=E501,W293,E303,W291,W503,E203,E731,E231,E721,E722,E741 .\n```\n\n\n## Documentation via Examples\n\n#### Nested @dataclass and NamedTuple\nLets say you have an address book that you want to write to and from JSON.\nWe'll define our data types for our `AddressBook`:\n\n```python\nfrom typing import Optional, Union, Sequence\nfrom dataclasses import dataclass\nfrom enum import Enum, auto\n\n@dataclass(frozen=True)\nclass Name:\n    first: str\n    last: str\n    middle: Optional[str] = None\n\nclass PhoneNumber(NamedTuple):\n    area_code: int\n    number: int\n    extension: Optional[int] = None\n\n@dataclass(frozen=True)\nclass EmailAddress:\n    name: str\n    domain: str\n\nclass ContactType(Enum):\n    personal, professional = auto(), auto()\n\nclass Emergency(NamedTuple):\n    full_name: str\n    contact: Union[PhoneNumber, EmailAddress]\n\n@dataclass(frozen=True)\nclass Entry:\n    name: Name\n    number: PhoneNumber\n    email: EmailAddress\n    contact_type: ContactType\n    emergency_contact: Emergency\n\n@dataclass(frozen=True)\nclass AddressBook:\n    entries: Sequence[Entry]\n```\n\nFor illustration, let's consider the following instantiated `AddressBook`:\n```python\nab = AddressBook([\n    Entry(Name('Malcolm', 'Greaves', middle='W'), \n          PhoneNumber(510,3452113),\n          EmailAddress('malcolm','world.com'),\n          contact_type=ContactType.professional,\n          emergency_contact=Emergency(\"Superman\", PhoneNumber(262,1249865,extension=1))\n    ),\n])\n```\n\nWe can convert our `AddressBook` data type into a JSON-formatted string using `serialize`:\n```python\nfrom core_utils.serialization import serialize\nimport json\n\ns = serialize(ab)\nj = json.dumps(s, indent=2)\nprint(j)\n```\n\nAnd we can easily convert the JSON string back into a new instanitated `AddressBook` using `deserialize`:\n```python\nfrom core_utils.serialization import deserialize\n\nd = json.loads(j)\nnew_ab = deserialize(AddressBook, d)\nprint(ab == new_ab)\n# NOTE: The @dataclass(frozen=True) is only needed to make this equality work.\n#       Any @dataclass decorated type is serializable. \n```\n\nNote that the `deserialize` function needs the type to deserialize the data into. The deserizliation\ntype-matching is _structural_: it will work so long as the data type's structure (of field names and\nassociated types) is compatible with the supplied data.\n\n\n#### Custom Serialization\nIn the event that one desires to use `serialize` and `deserialize` with data types from third-party libraries (e.g. `numpy` arrays) or custom-defined `class`es that are not decorated with `@dataclass` or derive from `NamedTuple`, one may supply a `CustomFormat`.\n\n`CustomFormat` is a mapping that associates precise types with custom serialization functions. When supplied to `serialize`, the values in the mapping accept an instance of the exact type and produces a serializable representation. In the `deserialize` function, they convert such a serialized representation into a bonafide instance of the type.\n\nTo illustrate their use, we'll deine `CustomFormat` `dict`s that allow us to serialize `numpy` multi-dimensional arrays:\n```python\nimport numpy as np\nfrom core_utils.serialization import *\n\n\ncustom_serialization: CustomFormat = {\n    np.ndarray: lambda arr: arr.tolist()\n}\n\ncustom_deserialization: CustomFormat = {\n    np.ndarray: lambda lst: np.array(lst)\n}\n```\n\nNow, we may supply `custom_{serialization,deserialization}` to our functions. We'll use them to perform a \"round-trip\" serialization of a four-dimensional array of floating point numbers to and from a JSON-formatted `str`:\n```python\nimport json\n\nv_original = np.random.random((1,2,3,4))\ns = serialize(v_original, custom=custom_serialization)\nj = json.dumps(s)\n\nd = json.loads(j)\nv_deser = deserialize(np.ndarray, d, custom=custom_deserialization)\n\nprint((v_original == v_deser).all())\n```\n\nIt's important to note that, when supplying a `CustomFormat` the serialization functions take priority over the default behavior (except for `Any`, as it is _always_ considered a pass-through). Moreover, types must match **exactly** to the keys in the mapping. Thus, if using a generic type, you must supply separate key-value entires for each distinct type parameterization.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/malcolmgreaves/pywise",
    "keywords": "",
    "license": "Apache-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pywise",
    "package_url": "https://pypi.org/project/pywise/",
    "platform": null,
    "project_url": "https://pypi.org/project/pywise/",
    "project_urls": {
      "Homepage": "https://github.com/malcolmgreaves/pywise"
    },
    "release_url": "https://pypi.org/project/pywise/0.4.0/",
    "requires_dist": null,
    "requires_python": ">=3.7,<4.0",
    "summary": "Robust serialization support for NamedTuple & @dataclass data types.",
    "version": "0.4.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13120466,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0b5b610a98bc9ad4452166931a1df9a17e3f665c154cb05dc5b0376fb575ee4b",
          "md5": "74be39c0401eb0849d7548c4772e645f",
          "sha256": "d723b796ccce47a48d6d60c2930cb0be107c88246f1ab8cc8c95655a1003910a"
        },
        "downloads": -1,
        "filename": "pywise-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "74be39c0401eb0849d7548c4772e645f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 11940,
        "upload_time": "2020-06-26T03:00:39",
        "upload_time_iso_8601": "2020-06-26T03:00:39.186851Z",
        "url": "https://files.pythonhosted.org/packages/0b/5b/610a98bc9ad4452166931a1df9a17e3f665c154cb05dc5b0376fb575ee4b/pywise-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "26f0699f8d38b00adbf9f288f6174980027426034fcc6684238a9a7f5947d51f",
          "md5": "ae43629b546f389a30f17df0a6554854",
          "sha256": "adc7cabbc357578fc82f03d2b9eec94954b0af61ec9fcf82a34f81429ef4cdd8"
        },
        "downloads": -1,
        "filename": "pywise-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ae43629b546f389a30f17df0a6554854",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 13392,
        "upload_time": "2020-06-26T03:00:42",
        "upload_time_iso_8601": "2020-06-26T03:00:42.007782Z",
        "url": "https://files.pythonhosted.org/packages/26/f0/699f8d38b00adbf9f288f6174980027426034fcc6684238a9a7f5947d51f/pywise-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "20f00a065d8916f4b5c06dae9f6bf11ab53d8602ac6df5a6bd72cd86ff359bb8",
          "md5": "094e04bdb4e5cb23a7bf7bc08f59ec29",
          "sha256": "428e8dd2c5e9bb4bdf3f18d475189d402a9154773eedb2ed99441c92eac0b56b"
        },
        "downloads": -1,
        "filename": "pywise-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "094e04bdb4e5cb23a7bf7bc08f59ec29",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 12173,
        "upload_time": "2020-08-11T00:45:01",
        "upload_time_iso_8601": "2020-08-11T00:45:01.882248Z",
        "url": "https://files.pythonhosted.org/packages/20/f0/0a065d8916f4b5c06dae9f6bf11ab53d8602ac6df5a6bd72cd86ff359bb8/pywise-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3a6c69b5e99a44a52ab6e03c0878507ba1e3d5b2390f1f6fc9197fef2baf0530",
          "md5": "58a70e953695542f78484d72a32d5f79",
          "sha256": "26efacab4cbe5de965b2acb1f104dc1fabe0ec81470e2b290db1f5d232f09ec8"
        },
        "downloads": -1,
        "filename": "pywise-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "58a70e953695542f78484d72a32d5f79",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 13838,
        "upload_time": "2020-08-11T00:45:03",
        "upload_time_iso_8601": "2020-08-11T00:45:03.143030Z",
        "url": "https://files.pythonhosted.org/packages/3a/6c/69b5e99a44a52ab6e03c0878507ba1e3d5b2390f1f6fc9197fef2baf0530/pywise-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e84867ebddd1006aac1803e650673fa07b9dfac89a4cbc4303a0664a0cd15e72",
          "md5": "2e6abb95f70f1d0d60092a339adaf0e0",
          "sha256": "a83f4de680fc22dc145c0545627c69b5573fe8a9ab9866d7961cf6a2b0663e4d"
        },
        "downloads": -1,
        "filename": "pywise-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2e6abb95f70f1d0d60092a339adaf0e0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 12163,
        "upload_time": "2020-08-24T06:34:15",
        "upload_time_iso_8601": "2020-08-24T06:34:15.574654Z",
        "url": "https://files.pythonhosted.org/packages/e8/48/67ebddd1006aac1803e650673fa07b9dfac89a4cbc4303a0664a0cd15e72/pywise-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5796a64814001d9e1a724f0325d111be067d50726068a93a7eee7a724aff93ff",
          "md5": "fd9b8150c522997c35b0af15e274855b",
          "sha256": "5bd9fc38354dc098a9e360b5e406cd7672ef12464960ddb0b801543acec2ad73"
        },
        "downloads": -1,
        "filename": "pywise-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "fd9b8150c522997c35b0af15e274855b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 13840,
        "upload_time": "2020-08-24T06:34:17",
        "upload_time_iso_8601": "2020-08-24T06:34:17.403852Z",
        "url": "https://files.pythonhosted.org/packages/57/96/a64814001d9e1a724f0325d111be067d50726068a93a7eee7a724aff93ff/pywise-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e1994e066c4d3d6261e90e67a59be937c5b13546956e28911cb2ec019bbb9300",
          "md5": "2b662e48e26c7447c6e569510c630c97",
          "sha256": "1122d2c0ff3b7b7bdf45e47de674275ef832b156ab4dc5b03a1b6f152f5a8d40"
        },
        "downloads": -1,
        "filename": "pywise-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2b662e48e26c7447c6e569510c630c97",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 12363,
        "upload_time": "2020-08-25T19:47:45",
        "upload_time_iso_8601": "2020-08-25T19:47:45.759172Z",
        "url": "https://files.pythonhosted.org/packages/e1/99/4e066c4d3d6261e90e67a59be937c5b13546956e28911cb2ec019bbb9300/pywise-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "02dab1ec9473cf01b7ab655c53ea92cd0f674bab9be48d04eeb9e658d4ca53c4",
          "md5": "9ee5582cac212a6c15cb20450db34061",
          "sha256": "f4872475f6d43a26a7982fb2eaba156ab1672c4c5ef99edfe78eabaf13342d7e"
        },
        "downloads": -1,
        "filename": "pywise-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9ee5582cac212a6c15cb20450db34061",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 13977,
        "upload_time": "2020-08-25T19:47:47",
        "upload_time_iso_8601": "2020-08-25T19:47:47.814967Z",
        "url": "https://files.pythonhosted.org/packages/02/da/b1ec9473cf01b7ab655c53ea92cd0f674bab9be48d04eeb9e658d4ca53c4/pywise-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d287c1f18bc6ffda1b82b3beda32c203dfa45c8db20cdb4692643c6f66716fac",
          "md5": "bfc642a6ec3efa66a76fee49c9a40e86",
          "sha256": "96c170d0eddbab900150ce39d0a9abe8a0d09ecc50d4aad00b755f1827946ae3"
        },
        "downloads": -1,
        "filename": "pywise-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bfc642a6ec3efa66a76fee49c9a40e86",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 13372,
        "upload_time": "2020-09-09T04:32:44",
        "upload_time_iso_8601": "2020-09-09T04:32:44.036815Z",
        "url": "https://files.pythonhosted.org/packages/d2/87/c1f18bc6ffda1b82b3beda32c203dfa45c8db20cdb4692643c6f66716fac/pywise-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "db1ec5d08d27b866754d502413e65f2af18948eb9786ccf6ffc87a8b739d597f",
          "md5": "aef74571e675d1fd45c440472d768f7f",
          "sha256": "40a453797585356c72e393c7594c1986180985b12eb1f967500c93edd5b6278a"
        },
        "downloads": -1,
        "filename": "pywise-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "aef74571e675d1fd45c440472d768f7f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 14976,
        "upload_time": "2020-09-09T04:32:45",
        "upload_time_iso_8601": "2020-09-09T04:32:45.234613Z",
        "url": "https://files.pythonhosted.org/packages/db/1e/c5d08d27b866754d502413e65f2af18948eb9786ccf6ffc87a8b739d597f/pywise-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c1bdc5762d035da7de8b8360de59960ea7545b54e2ea9340b18d12806e40188b",
          "md5": "6d8305c245f3a7b99e358f781d902a15",
          "sha256": "642f8c478d950d04ceb6565bd62bbdfb6559289ecf42e94818cdab33840aef4c"
        },
        "downloads": -1,
        "filename": "pywise-0.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6d8305c245f3a7b99e358f781d902a15",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 13402,
        "upload_time": "2020-09-09T06:26:21",
        "upload_time_iso_8601": "2020-09-09T06:26:21.777741Z",
        "url": "https://files.pythonhosted.org/packages/c1/bd/c5762d035da7de8b8360de59960ea7545b54e2ea9340b18d12806e40188b/pywise-0.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5ace22b6345b3b047b4ff3d50aff2b285816caed65796134ec76baf54c9845c5",
          "md5": "55ce2009ab805d32475277200eb27b4c",
          "sha256": "57ef31ffbb2eca5415ab452aa564c443322f594cd7774272444d78fd0f52e746"
        },
        "downloads": -1,
        "filename": "pywise-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "55ce2009ab805d32475277200eb27b4c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 14989,
        "upload_time": "2020-09-09T06:26:22",
        "upload_time_iso_8601": "2020-09-09T06:26:22.998778Z",
        "url": "https://files.pythonhosted.org/packages/5a/ce/22b6345b3b047b4ff3d50aff2b285816caed65796134ec76baf54c9845c5/pywise-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d70819024c0e205377f51a387f602b370e37c2bd2a76000a543b89ff258ab389",
          "md5": "facf0aa6f2e8ac2458edef1ecef7bb40",
          "sha256": "7eef4a05e501e7e4a357c2a1274d0f2e6f395a974c8c1294e0a150e0fd76bbb0"
        },
        "downloads": -1,
        "filename": "pywise-0.3.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "facf0aa6f2e8ac2458edef1ecef7bb40",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 13623,
        "upload_time": "2022-01-20T06:24:12",
        "upload_time_iso_8601": "2022-01-20T06:24:12.908863Z",
        "url": "https://files.pythonhosted.org/packages/d7/08/19024c0e205377f51a387f602b370e37c2bd2a76000a543b89ff258ab389/pywise-0.3.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5bbf90a70cebd94894c4bded760b0206d6acdb0b49027bad876d5bca6a13d307",
          "md5": "d4cbd7b44516915915ee45d8c1c109ef",
          "sha256": "d9f3eabe0046592a560e96a02de0e48e69cefc16852cf7636d81b59f5af24016"
        },
        "downloads": -1,
        "filename": "pywise-0.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d4cbd7b44516915915ee45d8c1c109ef",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 15187,
        "upload_time": "2022-01-20T06:24:14",
        "upload_time_iso_8601": "2022-01-20T06:24:14.282435Z",
        "url": "https://files.pythonhosted.org/packages/5b/bf/90a70cebd94894c4bded760b0206d6acdb0b49027bad876d5bca6a13d307/pywise-0.3.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "11957c7c257be8786fd75b8689f79495019a597b5a279067a205415fb6a670ad",
          "md5": "f52ce8c56704227d91e5a1145d033a8e",
          "sha256": "2e3a48e0c45f9bbe759c8a992fa9af54f77dd77aec68fe38e435e321d2d04af2"
        },
        "downloads": -1,
        "filename": "pywise-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f52ce8c56704227d91e5a1145d033a8e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 14057,
        "upload_time": "2022-03-09T03:26:17",
        "upload_time_iso_8601": "2022-03-09T03:26:17.624295Z",
        "url": "https://files.pythonhosted.org/packages/11/95/7c7c257be8786fd75b8689f79495019a597b5a279067a205415fb6a670ad/pywise-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "62611209c4713732779e4875dff9d6c86e2be39a7f4ba7480f1262625cdbfe87",
          "md5": "22ce818cfb6bb191e8ac2f13205994b0",
          "sha256": "3666a84925810c3b0b375e1945b08f3285f0aaf3bc9ccf7685acfdda3c193072"
        },
        "downloads": -1,
        "filename": "pywise-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "22ce818cfb6bb191e8ac2f13205994b0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 15659,
        "upload_time": "2022-03-09T03:26:20",
        "upload_time_iso_8601": "2022-03-09T03:26:20.138840Z",
        "url": "https://files.pythonhosted.org/packages/62/61/1209c4713732779e4875dff9d6c86e2be39a7f4ba7480f1262625cdbfe87/pywise-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "11957c7c257be8786fd75b8689f79495019a597b5a279067a205415fb6a670ad",
        "md5": "f52ce8c56704227d91e5a1145d033a8e",
        "sha256": "2e3a48e0c45f9bbe759c8a992fa9af54f77dd77aec68fe38e435e321d2d04af2"
      },
      "downloads": -1,
      "filename": "pywise-0.4.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f52ce8c56704227d91e5a1145d033a8e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<4.0",
      "size": 14057,
      "upload_time": "2022-03-09T03:26:17",
      "upload_time_iso_8601": "2022-03-09T03:26:17.624295Z",
      "url": "https://files.pythonhosted.org/packages/11/95/7c7c257be8786fd75b8689f79495019a597b5a279067a205415fb6a670ad/pywise-0.4.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "62611209c4713732779e4875dff9d6c86e2be39a7f4ba7480f1262625cdbfe87",
        "md5": "22ce818cfb6bb191e8ac2f13205994b0",
        "sha256": "3666a84925810c3b0b375e1945b08f3285f0aaf3bc9ccf7685acfdda3c193072"
      },
      "downloads": -1,
      "filename": "pywise-0.4.0.tar.gz",
      "has_sig": false,
      "md5_digest": "22ce818cfb6bb191e8ac2f13205994b0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7,<4.0",
      "size": 15659,
      "upload_time": "2022-03-09T03:26:20",
      "upload_time_iso_8601": "2022-03-09T03:26:20.138840Z",
      "url": "https://files.pythonhosted.org/packages/62/61/1209c4713732779e4875dff9d6c86e2be39a7f4ba7480f1262625cdbfe87/pywise-0.4.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}