{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3"
    ],
    "description": "<a href=\"https://github.com/hypothesis/pip-sync-faster/actions/workflows/ci.yml?query=branch%3Amain\"><img src=\"https://img.shields.io/github/workflow/status/hypothesis/pip-sync-faster/CI/main\"></a>\n<a href=\"https://pypi.org/project/pip-sync-faster\"><img src=\"https://img.shields.io/pypi/v/pip-sync-faster\"></a>\n<a><img src=\"https://img.shields.io/badge/python-3.10 | 3.9 | 3.8 | 3.7-success\"></a>\n<a href=\"https://github.com/hypothesis/pip-sync-faster/blob/main/LICENSE\"><img src=\"https://img.shields.io/badge/license-BSD--2--Clause-success\"></a>\n<a href=\"https://github.com/hypothesis/cookiecutters/tree/main/pypackage\"><img src=\"https://img.shields.io/badge/cookiecutter-pypackage-success\"></a>\n<a href=\"https://black.readthedocs.io/en/stable/\"><img src=\"https://img.shields.io/badge/code%20style-black-000000\"></a>\n\n# pip-sync-faster\n\nA wrapper that makes pip-sync faster.\n\npip-sync-faster makes\n[pip-sync](https://pip-tools.readthedocs.io/en/latest/#example-usage-for-pip-sync)\nrun faster in the case where there's nothing to do because the virtualenv is\nalready up to date with the requirements files. On my machine, with my\nrequirements files, it shaves off over 500ms in the time taken to run pip-sync:\n\n```terminal\n$ time pip-sync requirements/foo.txt\nEverything up-to-date\n\nreal    0m0.569s\nuser    0m0.525s\nsys     0m0.045s\n\n$ time pip-sync-faster requirements/foo.txt\n\nreal    0m0.037s\nuser    0m0.029s\nsys     0m0.008s\n```\n\n`pip-sync-faster` does this by saving hashes of the given requirements files in a\nJSON file within the virtualenv and not calling pip-sync if the hashes haven't\nchanged.\nIf any of the given requirements files doesn't have a matching cached hash then\npip-sync-faster calls pip-sync forwarding all command line arguments and\noptions.\n\n## You need to add `pip-sync-faster` to your requirements file\n\nA command like `pip-sync-faster requirements.txt` will call\n`pip-sync requirements.txt` which will uninstall anything not in\n`requirements.txt` from the active venv, including `pip-sync-faster` itself!\n\nYou can add `pip-sync-faster` to `requirements.txt` so that it doesn't get\nuninstalled.\n\n### Running `pip-sync-faster` directly instead\n\nAlternatively as long as `pip-tools` is installed in the active venv you can\nrun `pip-sync-faster` directly with a command like:\n\n```bash\nPYTHONPATH=/path/to/pip-sync-faster/src python3 -m pip_sync_faster requirements.txt\n```\n\nThis doesn't rely on `pip-sync-faster` being installed so there's no issue with\n`pip-sync` uninstalling it.\n\n## pip-sync-faster doesn't sync modified virtualenvs\n\nIf you modify your requirements files pip-sync-faster will notice the change\nand call pip-sync. But if you modify your virtualenv without modifying your\nrequirements files (for example by running a manual `pip install` command in\nthe virtualenv) pip-sync-faster will *not* call pip-sync because the\nrequirements files haven't changed and still match their cached hashes.\n\nCalling pip-sync directly in this case would re-sync your virtualenv with your\nrequirements files, but calling pip-sync-faster won't.\n\nIf you can live with this limitation then you can use pip-sync-faster and save\nyourself a few hundred milliseconds. If not you should just use pip-sync.\n\n## Installing\n\nWe recommend using [pipx](https://pypa.github.io/pipx/) to install\npip-sync-faster.\nFirst [install pipx](https://pypa.github.io/pipx/#install-pipx) then run:\n\n```terminal\npipx install pip-sync-faster\n```\n\nYou now have pip-sync-faster installed! For some help run:\n\n```\npip-sync-faster --help\n```\n\n## Upgrading\n\nTo upgrade to the latest version run:\n\n```terminal\npipx upgrade pip-sync-faster\n```\n\nTo see what version you have run:\n\n```terminal\npip-sync-faster --version\n```\n\n## Uninstalling\n\nTo uninstall run:\n\n```\npipx uninstall pip-sync-faster\n```\n\n## Setting up Your pip-sync-faster Development Environment\n\nFirst you'll need to install:\n\n* [Git](https://git-scm.com/).\n  On Ubuntu: `sudo apt install git`, on macOS: `brew install git`.\n* [GNU Make](https://www.gnu.org/software/make/).\n  This is probably already installed, run `make --version` to check.\n* [pyenv](https://github.com/pyenv/pyenv).\n  Follow the instructions in pyenv's README to install it.\n  The **Homebrew** method works best on macOS.\n  The **Basic GitHub Checkout** method works best on Ubuntu.\n  You _don't_ need to set up pyenv's shell integration (\"shims\"), you can\n  [use pyenv without shims](https://github.com/pyenv/pyenv#using-pyenv-without-shims).\n\nThen to set up your development environment:\n\n```terminal\ngit clone https://github.com/hypothesis/pip-sync-faster.git\ncd pip_sync_faster\nmake help\n```\n\n## Releasing a New Version of the Project\n\n1. First, to get PyPI publishing working you need to go to:\n   <https://github.com/organizations/hypothesis/settings/secrets/actions/PYPI_TOKEN>\n   and add pip-sync-faster to the `PYPI_TOKEN` secret's selected\n   repositories.\n\n2. Now that the pip-sync-faster project has access to the `PYPI_TOKEN` secret\n   you can release a new version by just [creating a new GitHub release](https://docs.github.com/en/repositories/releasing-projects-on-github/managing-releases-in-a-repository).\n   Publishing a new GitHub release will automatically trigger\n   [a GitHub Actions workflow](.github/workflows/pypi.yml)\n   that will build the new version of your Python package and upload it to\n   <https://pypi.org/project/pip-sync-faster>.\n\n## Changing the Project's Python Versions\n\nTo change what versions of Python the project uses:\n\n1. Change the Python versions in the\n   [cookiecutter.json](.cookiecutter/cookiecutter.json) file. For example:\n\n   ```json\n   \"python_versions\": \"3.10.4, 3.9.12\",\n   ```\n\n2. Re-run the cookiecutter template:\n\n   ```terminal\n   make template\n   ```\n\n3. Commit everything to git and send a pull request\n\n## Changing the Project's Python Dependencies\n\nTo change the production dependencies in the `setup.cfg` file:\n\n1. Change the dependencies in the [`.cookiecutter/includes/setuptools/install_requires`](.cookiecutter/includes/setuptools/install_requires) file.\n   If this file doesn't exist yet create it and add some dependencies to it.\n   For example:\n\n   ```\n   pyramid\n   sqlalchemy\n   celery\n   ```\n\n2. Re-run the cookiecutter template:\n\n   ```terminal\n   make template\n   ```\n\n3. Commit everything to git and send a pull request\n\nTo change the project's formatting, linting and test dependencies:\n\n1. Change the dependencies in the [`.cookiecutter/includes/tox/deps`](.cookiecutter/includes/tox/deps) file.\n   If this file doesn't exist yet create it and add some dependencies to it.\n   Use tox's [factor-conditional settings](https://tox.wiki/en/latest/config.html#factors-and-factor-conditional-settings)\n   to limit which environment(s) each dependency is used in.\n   For example:\n\n   ```\n   lint: flake8,\n   format: autopep8,\n   lint,tests: pytest-faker,\n   ```\n\n2. Re-run the cookiecutter template:\n\n   ```terminal\n   make template\n   ```\n\n3. Commit everything to git and send a pull request\n\nTesting Manually\n----------------\n\nNormally if you wanted to test a command manually in dev you'd do so through\ntox, for example:\n\n```terminal\n$ tox -qe dev --run-command 'pip-sync-faster --help'\nusage: pip-sync-faster [-h] [-v]\n\noptions:\n  -h, --help     show this help message and exit\n  -v, --version\n```\n\nBut there's a problem with running `pip-sync-faster` commands in this way: a\ncommand like `tox -e dev --run-command 'pip-sync-faster requirements.txt'` will\nrun `pip-sync requirements.txt` and `pip-sync` will sync the\ncurrent virtualenv (`.tox/dev/`) with the `requirements.txt` file. Everything\nin `requirements.txt` will get installed into `.tox/dev/`, which you probably\ndon't want. Even worse everything _not_ in `requirements.txt` will get\n_removed_ from `.tox/dev/` including `pip-sync-faster` itself!\n\nTo avoid this problem run `pip-sync-faster` in a temporary virtualenv instead.\nThis installs the contents of `requirements.txt` into the temporary venv so\nyour `.tox/dev/` env doesn't get messed up. And it does not install\n`pip-sync-faster` into the temporary venv so there's no issue with `pip-sync`\nuninstalling `pip-sync-faster`:\n\n```terminal\n# Make a temporary directory.\ntempdir=$(mktemp -d)\n\n# Create a virtualenv in the temporary directory.\npython3 -m venv $tempdir\n\n# Activate the virtualenv.\nsource $tempdir/bin/activate\n\n# Install pip-tools in the virtualenv (pip-sync-faster needs pip-tools).\npip install pip-tools\n\n# Call pip-sync-faster to install a requirements file into the temporary virtualenv.\nPYTHONPATH=src python3 -m pip_sync_faster /path/to/requirements.txt\n\n# When you're done testing deactivate the temporary virtualenv.\ndeactivate\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hypothesis/pip-sync-faster",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pip-sync-faster",
    "package_url": "https://pypi.org/project/pip-sync-faster/",
    "platform": null,
    "project_url": "https://pypi.org/project/pip-sync-faster/",
    "project_urls": {
      "Bug Tracker": "https://github.com/hypothesis/pip-sync-faster/issues",
      "Changelog": "https://github.com/hypothesis/pip-sync-faster/releases",
      "Homepage": "https://github.com/hypothesis/pip-sync-faster"
    },
    "release_url": "https://pypi.org/project/pip-sync-faster/0.0.3/",
    "requires_dist": [
      "pip-tools",
      "importlib-metadata ; python_version < \"3.8.\""
    ],
    "requires_python": ">=3.7",
    "summary": "A wrapper that makes pip-sync faster.",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14950456,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "757fed9381bd93cb69e4f92130aaf8405d21565013e2184e4982eea442e91dae",
          "md5": "814f2655616ffd25d0a25e4d41498f20",
          "sha256": "bb0f0db31b44f3c9ce45e27f7a7eb13eb1d922ced6e55bed4b31e696716e1223"
        },
        "downloads": -1,
        "filename": "pip_sync_faster-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "814f2655616ffd25d0a25e4d41498f20",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 4644,
        "upload_time": "2022-07-06T15:26:35",
        "upload_time_iso_8601": "2022-07-06T15:26:35.375672Z",
        "url": "https://files.pythonhosted.org/packages/75/7f/ed9381bd93cb69e4f92130aaf8405d21565013e2184e4982eea442e91dae/pip_sync_faster-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f50c1b064ff1148947b070646dbf21f10e6458c6591617e9831ed23407eabe5",
          "md5": "0db56a8a0c3d0dd60bca3464c4ee0e33",
          "sha256": "41f6ce4edcaec27f724651dad77fbfbbba5b7ee30138b9d135f9997a686100ed"
        },
        "downloads": -1,
        "filename": "pip-sync-faster-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0db56a8a0c3d0dd60bca3464c4ee0e33",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 12364,
        "upload_time": "2022-07-06T15:26:37",
        "upload_time_iso_8601": "2022-07-06T15:26:37.168095Z",
        "url": "https://files.pythonhosted.org/packages/0f/50/c1b064ff1148947b070646dbf21f10e6458c6591617e9831ed23407eabe5/pip-sync-faster-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c28b5e42bfb982cda39ad504edcbe0895aa99ac7578857dc6836c059bce2fde5",
          "md5": "f391eacd370263714255c03c9b0ab42e",
          "sha256": "210b1713122d191f56107b045a629eec2793bf4ae8dc467d2f7ba30a07e44bdd"
        },
        "downloads": -1,
        "filename": "pip_sync_faster-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f391eacd370263714255c03c9b0ab42e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 5429,
        "upload_time": "2022-07-30T16:00:37",
        "upload_time_iso_8601": "2022-07-30T16:00:37.225583Z",
        "url": "https://files.pythonhosted.org/packages/c2/8b/5e42bfb982cda39ad504edcbe0895aa99ac7578857dc6836c059bce2fde5/pip_sync_faster-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0fe1e2ee11d8781c865c80720fab40c0065855ad670c6873523970bc4dc1039f",
          "md5": "acb7d13ab673204c06ef084eef7b0919",
          "sha256": "90c5350de66bb74fb61a14457fa4ac727263877ba75407da8752b299c5a8ba86"
        },
        "downloads": -1,
        "filename": "pip-sync-faster-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "acb7d13ab673204c06ef084eef7b0919",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 17287,
        "upload_time": "2022-07-30T16:00:38",
        "upload_time_iso_8601": "2022-07-30T16:00:38.695740Z",
        "url": "https://files.pythonhosted.org/packages/0f/e1/e2ee11d8781c865c80720fab40c0065855ad670c6873523970bc4dc1039f/pip-sync-faster-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1e479cf3c7281701d803b13d0560106f898a09d63baae0861077f2f95540f153",
          "md5": "4cdf68075f0ea8070d798b14c5bc05f4",
          "sha256": "6a7ca67b86e5c2880a83f495429831219d8a577c24b4be54a6d5771bf00a9dbc"
        },
        "downloads": -1,
        "filename": "pip_sync_faster-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4cdf68075f0ea8070d798b14c5bc05f4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 7206,
        "upload_time": "2022-08-31T14:11:42",
        "upload_time_iso_8601": "2022-08-31T14:11:42.803214Z",
        "url": "https://files.pythonhosted.org/packages/1e/47/9cf3c7281701d803b13d0560106f898a09d63baae0861077f2f95540f153/pip_sync_faster-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d7c245363c89af8575bd85d85373bf4e624aa31d49cfe6cd71c105b3b74b2fe9",
          "md5": "97ba444048f53ce22f707726700f66fe",
          "sha256": "087e56696948a90baf49eff3bd0576e4c8ea40a7d273f9ebcd81cdfe3e359dfa"
        },
        "downloads": -1,
        "filename": "pip-sync-faster-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "97ba444048f53ce22f707726700f66fe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 19106,
        "upload_time": "2022-08-31T14:11:44",
        "upload_time_iso_8601": "2022-08-31T14:11:44.749711Z",
        "url": "https://files.pythonhosted.org/packages/d7/c2/45363c89af8575bd85d85373bf4e624aa31d49cfe6cd71c105b3b74b2fe9/pip-sync-faster-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1e479cf3c7281701d803b13d0560106f898a09d63baae0861077f2f95540f153",
        "md5": "4cdf68075f0ea8070d798b14c5bc05f4",
        "sha256": "6a7ca67b86e5c2880a83f495429831219d8a577c24b4be54a6d5771bf00a9dbc"
      },
      "downloads": -1,
      "filename": "pip_sync_faster-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4cdf68075f0ea8070d798b14c5bc05f4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 7206,
      "upload_time": "2022-08-31T14:11:42",
      "upload_time_iso_8601": "2022-08-31T14:11:42.803214Z",
      "url": "https://files.pythonhosted.org/packages/1e/47/9cf3c7281701d803b13d0560106f898a09d63baae0861077f2f95540f153/pip_sync_faster-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d7c245363c89af8575bd85d85373bf4e624aa31d49cfe6cd71c105b3b74b2fe9",
        "md5": "97ba444048f53ce22f707726700f66fe",
        "sha256": "087e56696948a90baf49eff3bd0576e4c8ea40a7d273f9ebcd81cdfe3e359dfa"
      },
      "downloads": -1,
      "filename": "pip-sync-faster-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "97ba444048f53ce22f707726700f66fe",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 19106,
      "upload_time": "2022-08-31T14:11:44",
      "upload_time_iso_8601": "2022-08-31T14:11:44.749711Z",
      "url": "https://files.pythonhosted.org/packages/d7/c2/45363c89af8575bd85d85373bf4e624aa31d49cfe6cd71c105b3b74b2fe9/pip-sync-faster-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}