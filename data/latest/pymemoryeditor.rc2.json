{
  "info": {
    "author": "Jean Loui Bernard Silva de Jesus",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Win32 (MS Windows)",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: Microsoft :: Windows",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# PyMemoryEditor\n\nA Python library developed with [ctypes](https://docs.python.org/3/library/ctypes.html) to manipulate Windows processes (32 bits and 64 bits), <br>\nreading and writing values in the process memory.\n\n[![Python Package](https://github.com/JeanExtreme002/PyMemoryEditor/actions/workflows/python-package.yml/badge.svg)](https://github.com/JeanExtreme002/PyMemoryEditor/actions/workflows/python-package.yml)\n[![Pypi](https://img.shields.io/pypi/v/PyMemoryEditor)](https://pypi.org/project/PyMemoryEditor/)\n[![License](https://img.shields.io/pypi/l/PyMemoryEditor)](https://pypi.org/project/PyMemoryEditor/)\n[![Python Version](https://img.shields.io/badge/python-3.6%20%7C%203.7%20%7C%203.8-blue)](https://pypi.org/project/PyMemoryEditor/)\n\n# Installing PyMemoryEditor:\n```\npip3 install PyMemoryEditor\n```\n\n# Basic Usage:\n\nImport `PyMemoryEditor` and open a process using the `OpenProcess` class, passing a window title, process name <br>\nor PID as an argument. You can use the context manager to do this.\n\n```\nfrom PyMemoryEditor import OpenProcess\n\nwith OpenProcess(process_name = \"example.exe\") as process:\n    # Do something...\n```\n\nAfter that, use the functions `read_process_memory` and `write_process_memory` to manipulate the process <br>\nmemory, passing in the function call the memory address, data type and its size. See the example below:\n\n```\nfrom PyMemoryEditor import OpenProcess\n\ntitle = \"Window title of an example program\"\naddress = 0x0005000C\n\nwith OpenProcess(window_title = title) as process:\n\n    # Getting value from the process memory.\n    value = process.read_process_memory(address, int, 4)\n\n    # Writing to the process memory.\n    process.write_process_memory(address, int, 4, value + 7)\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/JeanExtreme002/PyMemoryEditor",
    "keywords": "memory writer reader",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "PyMemoryEditor",
    "package_url": "https://pypi.org/project/PyMemoryEditor/",
    "platform": "",
    "project_url": "https://pypi.org/project/PyMemoryEditor/",
    "project_urls": {
      "Homepage": "https://github.com/JeanExtreme002/PyMemoryEditor"
    },
    "release_url": "https://pypi.org/project/PyMemoryEditor/1.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Process memory reader and writer.",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9584517,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d8f5f7aa65f0ad10fdc93e76075922d4c6e92100a763eb0a7237f06ef74d646",
          "md5": "8737c4de9acdbbdde87b6fa126f78329",
          "sha256": "7382f832841047a7707b96821224fb42a4f7c78cc0db35c4cea5240fe538b7d4"
        },
        "downloads": -1,
        "filename": "PyMemoryEditor-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8737c4de9acdbbdde87b6fa126f78329",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8789,
        "upload_time": "2021-03-02T03:24:18",
        "upload_time_iso_8601": "2021-03-02T03:24:18.520070Z",
        "url": "https://files.pythonhosted.org/packages/1d/8f/5f7aa65f0ad10fdc93e76075922d4c6e92100a763eb0a7237f06ef74d646/PyMemoryEditor-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "74815c8d3976b2848dd53ea727d223e5d4eab3eb006cdf416857d69fcf4b03c2",
          "md5": "b6b363345a3e5bdf91ad6d02c8b3e4a4",
          "sha256": "780317b41a217b08fadc9c676aa177f90ca86bdb5a930e73c1a8e9ce6ac147ea"
        },
        "downloads": -1,
        "filename": "PyMemoryEditor-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b6b363345a3e5bdf91ad6d02c8b3e4a4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8874,
        "upload_time": "2021-03-02T03:43:00",
        "upload_time_iso_8601": "2021-03-02T03:43:00.050892Z",
        "url": "https://files.pythonhosted.org/packages/74/81/5c8d3976b2848dd53ea727d223e5d4eab3eb006cdf416857d69fcf4b03c2/PyMemoryEditor-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "74815c8d3976b2848dd53ea727d223e5d4eab3eb006cdf416857d69fcf4b03c2",
        "md5": "b6b363345a3e5bdf91ad6d02c8b3e4a4",
        "sha256": "780317b41a217b08fadc9c676aa177f90ca86bdb5a930e73c1a8e9ce6ac147ea"
      },
      "downloads": -1,
      "filename": "PyMemoryEditor-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "b6b363345a3e5bdf91ad6d02c8b3e4a4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8874,
      "upload_time": "2021-03-02T03:43:00",
      "upload_time_iso_8601": "2021-03-02T03:43:00.050892Z",
      "url": "https://files.pythonhosted.org/packages/74/81/5c8d3976b2848dd53ea727d223e5d4eab3eb006cdf416857d69fcf4b03c2/PyMemoryEditor-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}