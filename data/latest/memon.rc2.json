{
  "info": {
    "author": "TU Wien",
    "author_email": "remote.sensing@geo.tuwien.ac.at",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Programming Language :: Python"
    ],
    "description": "=====\nmemon\n=====\n\n.. image:: https://travis-ci.org/TUW-GEO/memon.svg?branch=master\n    :target: https://travis-ci.org/TUW-GEO/memon\n\n.. image:: https://coveralls.io/repos/github/TUW-GEO/memon/badge.svg?branch=master\n    :target: https://coveralls.io/github/TUW-GEO/memon?branch=master\n\n.. image:: https://badge.fury.io/py/memon.svg\n    :target: https://badge.fury.io/py/memon\n\n.. image:: https://readthedocs.org/projects/memon/badge/?version=latest\n    :target: http://memon.readthedocs.io/en/latest/?badge=latest\n\nVery simple memory monitor that records the percent of memory used. This can be\nuseful if you want to dump data to disk if memory consumptions becomes too high.\n\nInstallation\n============\n\nThis package should be installable through pip:\n\n.. code::\n\n    pip install memon\n\nDescription and Usage\n=====================\n\nThe MemoryMonitor class takes an interval and a memory_limit in percent.\n\nTo start recording memory usage:\n\n.. code::\n\n    from memon import MemoryMonitor\n    import time\n    memmon = MemoryMonitor(interval=0.1)\n    memmon.start()\n    memmon.start_recording()\n    time.sleep(1)\n    memmon.stop_recording()\n    assert len(memmon.history) == 10\n\nIf historical data is recorded this can be used to query if memory usage will\nkeep under the memory limit. This is done by calling:\n\n.. code::\n\n    memmon.memory_available()\n\nThis function makes some assumptions:\n\n- The Python process is the main memory user on the system.\n- Any big fluctuations in memory usage are because of memory\n  allocation/deallocation of the process running the memon.\n- We want to fit the average fluctuation that occurs during processing under the\n  memory limit.\n\nBecause of these assumptions the ``memory_available()`` function calculates:\n\n.. code::\n\n   delta = max(history) - min(history)\n   level = mean(history) + delta\n   level < memory_limit\n\nContribute\n==========\n\nWe are happy if you want to contribute. Please raise an issue explaining what\nis missing or if you find a bug. We will also gladly accept pull requests\nagainst our master branch for new features or bug fixes.\n\nDevelopment setup\n-----------------\n\nFor Development we recommend a ``conda`` environment\n\nGuidelines\n----------\n\nIf you want to contribute please follow these steps:\n\n- Fork the memon repository to your account\n- make a new feature branch from the memon master branch\n- Add your feature\n- Please include tests for your contributions in one of the test directories.\n  We use py.test so a simple function called test_my_feature is enough\n- submit a pull request to our master branch\n\nNote\n====\n\nThis project has been set up using PyScaffold 3.2.3. For details and usage\ninformation on PyScaffold see https://pyscaffold.org/.",
    "description_content_type": "text/x-rst; charset=UTF-8",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://www.geo.tuwien.ac.at/",
    "keywords": "",
    "license": "mit",
    "maintainer": "",
    "maintainer_email": "",
    "name": "memon",
    "package_url": "https://pypi.org/project/memon/",
    "platform": "any",
    "project_url": "https://pypi.org/project/memon/",
    "project_urls": {
      "Documentation": "http://memon.readthedocs.io/",
      "Homepage": "https://www.geo.tuwien.ac.at/"
    },
    "release_url": "https://pypi.org/project/memon/0.2.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Simple Memory Monitor that helps to decide if it is time to dump data to disk",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7146951,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3fba584cb98878479d39a08d1ef042f6838fb90703ee2f53e7b2b2b407d82bbd",
          "md5": "6da8d6b6b2089ab31fcaa6900fb7d7d1",
          "sha256": "dd40cc1c922d39953efbc71dbd95b9282dbc89ea308ed1dd715da2cfbdaa3e56"
        },
        "downloads": -1,
        "filename": "memon-0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6da8d6b6b2089ab31fcaa6900fb7d7d1",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 5427,
        "upload_time": "2017-03-29T14:36:41",
        "upload_time_iso_8601": "2017-03-29T14:36:41.883222Z",
        "url": "https://files.pythonhosted.org/packages/3f/ba/584cb98878479d39a08d1ef042f6838fb90703ee2f53e7b2b2b407d82bbd/memon-0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "736a2b36bae40a3fd55ecfb78d7b7f66bbd5d51c8755fde044645791bded703b",
          "md5": "f5135a16a7a3d916e78d187803cd1e93",
          "sha256": "6b5201f0a4655448e7d1ae42a4c1d3b640d1c9d60178482524edbebf915757fb"
        },
        "downloads": -1,
        "filename": "memon-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f5135a16a7a3d916e78d187803cd1e93",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12582,
        "upload_time": "2017-03-29T14:36:43",
        "upload_time_iso_8601": "2017-03-29T14:36:43.640295Z",
        "url": "https://files.pythonhosted.org/packages/73/6a/2b36bae40a3fd55ecfb78d7b7f66bbd5d51c8755fde044645791bded703b/memon-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4d1d9e870f81ff3396093ba496054734a30e6621b4a359ea043df28854dbe86c",
          "md5": "b2419bee3d0454b5cba824a650fe57cc",
          "sha256": "913a3ba65e33703bdc950c53212d66c17f643a10e36bb8249797475c1bec0ef4"
        },
        "downloads": -1,
        "filename": "memon-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b2419bee3d0454b5cba824a650fe57cc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14112,
        "upload_time": "2020-05-01T18:28:37",
        "upload_time_iso_8601": "2020-05-01T18:28:37.518437Z",
        "url": "https://files.pythonhosted.org/packages/4d/1d/9e870f81ff3396093ba496054734a30e6621b4a359ea043df28854dbe86c/memon-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4d1d9e870f81ff3396093ba496054734a30e6621b4a359ea043df28854dbe86c",
        "md5": "b2419bee3d0454b5cba824a650fe57cc",
        "sha256": "913a3ba65e33703bdc950c53212d66c17f643a10e36bb8249797475c1bec0ef4"
      },
      "downloads": -1,
      "filename": "memon-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "b2419bee3d0454b5cba824a650fe57cc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 14112,
      "upload_time": "2020-05-01T18:28:37",
      "upload_time_iso_8601": "2020-05-01T18:28:37.518437Z",
      "url": "https://files.pythonhosted.org/packages/4d/1d/9e870f81ff3396093ba496054734a30e6621b4a359ea043df28854dbe86c/memon-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}