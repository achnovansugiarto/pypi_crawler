{
  "info": {
    "author": "Improve AI",
    "author_email": "support@improve.ai",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: End Users/Desktop",
      "Intended Audience :: Science/Research",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Cython",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Adaptive Technologies",
      "Topic :: Scientific/Engineering",
      "Topic :: Software Development"
    ],
    "description": "# AI Decisions, Ranking, Scoring & Multivariate Optimization for Python\n\nImprove AI is a machine learning platform for quickly implementing app optimization, personalization, and recommendations for [Python](https://improve.ai/python-sdk/), [iOS](https://improve.ai/ios-sdk/), and [Android](https://improve.ai/android-sdk/).\n\nThe SDKs provide simple APIs for AI [decisions](https://improve.ai/decisions/), [ranking](https://improve.ai/ranking/), [scoring](https://improve.ai/scoring/), and [multivariate optimization](https://improve.ai/multivariate-optimization/) that execute immediately, on-device, with zero network latency. Decisions and rewards are tracked in the cloud with the [Improve AI Gym](https://github.com/improve-ai/gym/) and updated models are trained regularly on AWS SageMaker.\n\n## Installation\n\n```console\npip3 install improveai\n```\n\n## Initialization\n\n```python\nimport improveai\n```\n\n```python\n# track and model urls are obtained from your Improve AI Gym configuration\ntrack_url = 'https://xxxx.lambda-url.us-east-1.on.aws/'\nmodel_url = 'https://xxxx.s3.amazonaws.com/models/latest/greetings.xgb.gz'\n\ngreetings_model = improveai.load_model(model_url, track_url)\n```\n\n## Usage\n\nThe heart of Improve AI is the *which()* statement. *which()* is like an AI *if/then* statement.\n\n```python\ngreeting, decision_id = greetings_model.which('Hello', 'Howdy', 'Hola')\n```\n\n*which()* takes a list of *variants* and returns the best - the \"best\" being the variant that provides the highest expected reward given the current conditions.\n\nDecision models are easily trained with [reinforcement learning](https://improve.ai/reinforcement-learning/):\n\n```python\nif success:\n   greetings_model.add_reward(1.0, decision_id)\n```\n\nWith reinforcement learning, positive rewards are assigned for positive outcomes (a \"carrot\") and negative rewards are assigned for undesirable outcomes (a \"stick\").\n\n*which()* automatically tracks it's decision with the [Improve AI Gym](https://github.com/improve-ai/gym/).\n\n## Contextual Decisions\n\nUnlike A/B testing or feature flags, Improve AI uses *context* to make the best decision. \n\nContext can be provided via *given()*:\n\n```python\n\ngreeting, decision_id = greetings_model.given({\"language\": \"cowboy\"}) \\\n                                       .which(\"Hello\", \"Howdy\", \"Hola\")\n```\n\nGiven the language is *cowboy*, the variant with the highest expected reward should be *\"Howdy\"* and the model would learn to make that choice.\n\n\n## Ranking\n\n[Ranking](https://improve.ai/ranking/) is a fundamental task in recommender systems, search engines, and social media feeds. Fast ranking can be performed on-device in a single line of code:\n\n```python\nranked_wines = sommelier_model.given(entree).rank(wines)\n```\n\n**Note**: Decisions are not tracked when calling *rank()*. *which()* or *decide()* must be used to train models for ranking.\n\n## Scoring\n\n[Scoring](https://improve.ai/scoring/) makes it easy to turn any database table into a recommendation engine.\n\nSimply add a *score* column to the database and update the score for each row.\n\n```python\nscores = conversion_rate_model.score(rows)\n```\n\nAt query time, sort the query results descending by the *score* column and the first results will be the top recommendations.\n\n*score()* is also useful for crafting custom optimization algorithms or providing supplemental metrics in a multi-stage recommendation system.\n\n**Note**: Decisions are not tracked when calling *score()*. *which()*, *decide()*, or *optimize()* must be used to train models for scoring.\n\n## Multivariate Optimization\n\n[Multivariate optimization](https://improve.ai/multivariate-optimization/) is the joint optimization of multiple variables simultaneously. This is often useful for app configuration and performance tuning.\n\n```swift\nconfig, decision_id = config_model.optimize({\"buffer_size\": [1024, 2048, 4096, 8192],\n                                             \"video_bitrate\": [256000, 384000, 512000]})\n```\n\nThis example decides multiple variables simultaneously.  Notice that instead of a single list of variants, a dictionary mapping keys to lists of variants is provided. This multi-variate mode jointly optimizes all variables for the highest expected reward.  \n\n*optimize()* automatically tracks it's decision with the [Improve AI Gym](https://github.com/improve-ai/gym/). Rewards are credited to the most recent decision made by the model, including from a previous app session.\n\n## Variant Types\n\nVariants can be any JSON encodeable data structure of arbitrary complexity, including nested dicts, lists, strings, numbers, and None. Object properties and nested items within collections are automatically encoded as machine learning features to assist in the decision making process.\n\nThe following are all valid:\n\n```python\ngreeting, decision_id = greetings_model.which('Hello', 'Howdy', 'Hola')\n\ndiscount, decision_id = discounts_model.which(0.1, 0.2, 0.3)\n\nenabled, decision_id = feature_flag_model.which(True, False)\n\nitem, decision_id = filter_model.which(item, None)\n\nthemes = [{\"font\": \"Helvetica\", \"size\": 12, \"color\": \"#000000\"},\n          {\"font\": \"Comic Sans\", \"size\": 16, \"color\": \"#F0F0F0\"}]\n\ntheme, decision_id = themes_model.which(themes)\n```\n\n## Privacy\n  \nIt is strongly recommended to never include Personally Identifiable Information (PII) in variants or givens so that it is never tracked, persisted, or used as training data.\n\n## Resources\n\n- [Quick Start Guide](https://improve.ai/quick-start/)\n- [Python SDK API Docs](https://improve.ai/python-sdk/)\n- [Improve AI Gym](https://github.com/improve-ai/gym/)\n- [Improve AI Trainer (FREE)](https://aws.amazon.com/marketplace/pp/prodview-pyqrpf5j6xv6g)\n- [Improve AI Trainer (PRO)](https://aws.amazon.com/marketplace/pp/prodview-adchtrf2zyvow)\n- [Reinforcement Learning](https://improve.ai/reinforcement-learning/)\n- [Decisions](https://improve.ai/multivariate-optimization/)\n- [Ranking](https://improve.ai/ranking/)\n- [Scoring](https://improve.ai/scoring/)\n- [Multivariate optimization](https://improve.ai/multivariate-optimization/)\n\n## Help Improve Our World\n\nThe mission of Improve AI is to make our corner of the world a little bit better each day. When each of us improve our corner of the world, the whole world becomes better. If your product or work does not make the world better, do not use Improve AI. Otherwise, welcome, I hope you find value in my labor of love. \n\n-- Justin Chapweske\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://improve.ai/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "improveai",
    "package_url": "https://pypi.org/project/improveai/",
    "platform": null,
    "project_url": "https://pypi.org/project/improveai/",
    "project_urls": {
      "Code": "https://github.com/improve-ai/python-sdk",
      "Documentation": "https://improve.ai/python-sdk/",
      "Homepage": "https://improve.ai/",
      "Issue tracker": "https://github.com/improve-ai/python-sdk/issues"
    },
    "release_url": "https://pypi.org/project/improveai/7.2.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Improve AI: Build self-improving apps that optimize their own variables and data structures.",
    "version": "7.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15767776,
  "releases": {
    "7.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3db2055746b6984f2cec1e669e104d2dca6ec55ff4381d655339ea3f6b3d5a94",
          "md5": "ca50a2ef2b0ef02c4e5d7bdd2b62a02c",
          "sha256": "b165e2a6573755403a17d1ca99e8603efcac0315cc697855ad213ac27553e5a5"
        },
        "downloads": -1,
        "filename": "improveai-7.0.0-cp38-cp38-macosx_10_14_x86_64.whl",
        "has_sig": false,
        "md5_digest": "ca50a2ef2b0ef02c4e5d7bdd2b62a02c",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": null,
        "size": 655771,
        "upload_time": "2022-03-23T23:30:57",
        "upload_time_iso_8601": "2022-03-23T23:30:57.761959Z",
        "url": "https://files.pythonhosted.org/packages/3d/b2/055746b6984f2cec1e669e104d2dca6ec55ff4381d655339ea3f6b3d5a94/improveai-7.0.0-cp38-cp38-macosx_10_14_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "28bb6f568746a59d0e6a38d55f03dcb9e288054ea172b98f20609ff10d10bd50",
          "md5": "576be0127bc24ac8d3e4c17d5b4671a3",
          "sha256": "8ce7596d5aea33a60bc4e423f5baeea9169d0a115ce80c9c176dc91cbce56f34"
        },
        "downloads": -1,
        "filename": "improveai-7.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "576be0127bc24ac8d3e4c17d5b4671a3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 300426,
        "upload_time": "2022-03-23T23:31:00",
        "upload_time_iso_8601": "2022-03-23T23:31:00.603924Z",
        "url": "https://files.pythonhosted.org/packages/28/bb/6f568746a59d0e6a38d55f03dcb9e288054ea172b98f20609ff10d10bd50/improveai-7.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "7.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a399ca8a2ebde35ee4f035e7a4564baacc9163952b6f7bb9254d4fcf13a0c024",
          "md5": "fb2fde805711184911d97d625c68e99d",
          "sha256": "a4f05d1a099561d98005890152ef6d752384d50769e6dc48a49c19a5e0d8c892"
        },
        "downloads": -1,
        "filename": "improveai-7.0.1-cp38-cp38-macosx_10_14_x86_64.whl",
        "has_sig": false,
        "md5_digest": "fb2fde805711184911d97d625c68e99d",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": null,
        "size": 357627,
        "upload_time": "2022-04-05T19:44:40",
        "upload_time_iso_8601": "2022-04-05T19:44:40.466472Z",
        "url": "https://files.pythonhosted.org/packages/a3/99/ca8a2ebde35ee4f035e7a4564baacc9163952b6f7bb9254d4fcf13a0c024/improveai-7.0.1-cp38-cp38-macosx_10_14_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba8b7728662f5e4545ff94b5c64acc3313f4b29a0eb03a132fe49b3e18fcd19d",
          "md5": "5f101179ffd8d2ad3558fa7c5fa49b5a",
          "sha256": "733a0b6d96d814eb7c2c789b46dbb82ba98f7ed5157f1ba47c1580a7467829a2"
        },
        "downloads": -1,
        "filename": "improveai-7.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5f101179ffd8d2ad3558fa7c5fa49b5a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 32307,
        "upload_time": "2022-04-05T19:44:41",
        "upload_time_iso_8601": "2022-04-05T19:44:41.900338Z",
        "url": "https://files.pythonhosted.org/packages/ba/8b/7728662f5e4545ff94b5c64acc3313f4b29a0eb03a132fe49b3e18fcd19d/improveai-7.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "7.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eb9a56561fb2358fcff747d43cb93ddc3488db2a45b8ad98d421a475ddcf0694",
          "md5": "6965bffdecff796a1dd4681980da6181",
          "sha256": "68414cbd25f34b1c24755be42bca127613d9599b789e2faebe92782211cf0512"
        },
        "downloads": -1,
        "filename": "improveai-7.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6965bffdecff796a1dd4681980da6181",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 35294,
        "upload_time": "2022-05-09T17:51:15",
        "upload_time_iso_8601": "2022-05-09T17:51:15.907814Z",
        "url": "https://files.pythonhosted.org/packages/eb/9a/56561fb2358fcff747d43cb93ddc3488db2a45b8ad98d421a475ddcf0694/improveai-7.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "7.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4aef66e7381d9bd6f38889aeed46024821e8e185603ba629c2452288c59ce9a6",
          "md5": "06bb9e94e7c7d26fd918ab5d673288fa",
          "sha256": "02f19d95c6af4082a3ab19b74ede27b9296c16f686c31a6663dc92220a0104b3"
        },
        "downloads": -1,
        "filename": "improveai-7.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "06bb9e94e7c7d26fd918ab5d673288fa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 38475,
        "upload_time": "2022-11-14T22:07:41",
        "upload_time_iso_8601": "2022-11-14T22:07:41.759413Z",
        "url": "https://files.pythonhosted.org/packages/4a/ef/66e7381d9bd6f38889aeed46024821e8e185603ba629c2452288c59ce9a6/improveai-7.2.0.tar.gz",
        "yanked": true,
        "yanked_reason": null
      }
    ],
    "7.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6115596a4fd375f6af1b897906a498347b0cd82e5abffc5c2c20f7fa4ac352fc",
          "md5": "b466b9309341291719d57dc26627a965",
          "sha256": "b3b5c0061b03aee7d1dfc6365a756c0e70304009f98aa98bf3cd6828aa59e3da"
        },
        "downloads": -1,
        "filename": "improveai-7.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b466b9309341291719d57dc26627a965",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 38678,
        "upload_time": "2022-11-14T22:17:45",
        "upload_time_iso_8601": "2022-11-14T22:17:45.109795Z",
        "url": "https://files.pythonhosted.org/packages/61/15/596a4fd375f6af1b897906a498347b0cd82e5abffc5c2c20f7fa4ac352fc/improveai-7.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6115596a4fd375f6af1b897906a498347b0cd82e5abffc5c2c20f7fa4ac352fc",
        "md5": "b466b9309341291719d57dc26627a965",
        "sha256": "b3b5c0061b03aee7d1dfc6365a756c0e70304009f98aa98bf3cd6828aa59e3da"
      },
      "downloads": -1,
      "filename": "improveai-7.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "b466b9309341291719d57dc26627a965",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 38678,
      "upload_time": "2022-11-14T22:17:45",
      "upload_time_iso_8601": "2022-11-14T22:17:45.109795Z",
      "url": "https://files.pythonhosted.org/packages/61/15/596a4fd375f6af1b897906a498347b0cd82e5abffc5c2c20f7fa4ac352fc/improveai-7.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}