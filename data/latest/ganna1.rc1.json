{
  "info": {
    "author": "",
    "author_email": "Stiv Llenga <stiv.llenga@h-its.org>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Generative Algorithm for N-Doped Novel Aromatics\n\nThis algorithm can be used to generate nitrogen-doped polycyclic aromatic compounds whose geometry is optimised using the MMFF94s force field. The application of this algorithm is very straightforward to understand. The users are required to create a folder with the aromatic structures that they want to be doped with nitrogen atoms, specify the number of nitrogen atoms that they want in the structure, and provide the folder on which the MMFF94s optimised structures should be saved.  Please contact the author via email with any questions or concerns about the code (stiv.llenga@h-its.org).\n\n## Setting the input variables:\n\nThe idea behind this code is to keep it simple so that anyone working in the field of doped PAH compounds can use it to generate their compounds in a combinatorial fashion. Users are required to provide the following information: \n\nINPUT:\n   \n* --inp_dir -> (Str) The directory that houses all of the PAH xyz files;\n   \n* --out_dir -> (Str) The directory where the N-doped PAH must be saved;\n   \n* --hetero_nr -> (Int) The total amount of dopants (Nitrogen atoms);\n\n* --iters -> (Int) The maximum iteration value of the force field.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "GANNA1",
    "package_url": "https://pypi.org/project/GANNA1/",
    "platform": null,
    "project_url": "https://pypi.org/project/GANNA1/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/GANNA1/0.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Generative Algorithm for N-Doped Novel Aromatics",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17173543,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f69c7710591a4f42e945cda9d63133ed0bf58c50c68dcfc81c80562a0f0f6aef",
          "md5": "b8cf459100468a400fe8c9c0e2a34192",
          "sha256": "0116eabb6fec1c4495b0a0012b367ec9b9105707aad2ab3d9369f987d9d0ab63"
        },
        "downloads": -1,
        "filename": "ganna1-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b8cf459100468a400fe8c9c0e2a34192",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 5990,
        "upload_time": "2023-03-06T11:28:17",
        "upload_time_iso_8601": "2023-03-06T11:28:17.786226Z",
        "url": "https://files.pythonhosted.org/packages/f6/9c/7710591a4f42e945cda9d63133ed0bf58c50c68dcfc81c80562a0f0f6aef/ganna1-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "011b7a74c60a2d6d0f2026c231f2a1dbb5b2088e5f33d7be7d5c5c5999f4f869",
          "md5": "1dc50bc791c3e424771b047f9596ffe8",
          "sha256": "a7653e25dc3a114c8f94172d559ca59356956cb4c33d94a92e5c417ff9c2977d"
        },
        "downloads": -1,
        "filename": "ganna1-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1dc50bc791c3e424771b047f9596ffe8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 3396,
        "upload_time": "2023-03-06T11:28:19",
        "upload_time_iso_8601": "2023-03-06T11:28:19.644714Z",
        "url": "https://files.pythonhosted.org/packages/01/1b/7a74c60a2d6d0f2026c231f2a1dbb5b2088e5f33d7be7d5c5c5999f4f869/ganna1-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f69c7710591a4f42e945cda9d63133ed0bf58c50c68dcfc81c80562a0f0f6aef",
        "md5": "b8cf459100468a400fe8c9c0e2a34192",
        "sha256": "0116eabb6fec1c4495b0a0012b367ec9b9105707aad2ab3d9369f987d9d0ab63"
      },
      "downloads": -1,
      "filename": "ganna1-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b8cf459100468a400fe8c9c0e2a34192",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 5990,
      "upload_time": "2023-03-06T11:28:17",
      "upload_time_iso_8601": "2023-03-06T11:28:17.786226Z",
      "url": "https://files.pythonhosted.org/packages/f6/9c/7710591a4f42e945cda9d63133ed0bf58c50c68dcfc81c80562a0f0f6aef/ganna1-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "011b7a74c60a2d6d0f2026c231f2a1dbb5b2088e5f33d7be7d5c5c5999f4f869",
        "md5": "1dc50bc791c3e424771b047f9596ffe8",
        "sha256": "a7653e25dc3a114c8f94172d559ca59356956cb4c33d94a92e5c417ff9c2977d"
      },
      "downloads": -1,
      "filename": "ganna1-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "1dc50bc791c3e424771b047f9596ffe8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 3396,
      "upload_time": "2023-03-06T11:28:19",
      "upload_time_iso_8601": "2023-03-06T11:28:19.644714Z",
      "url": "https://files.pythonhosted.org/packages/01/1b/7a74c60a2d6d0f2026c231f2a1dbb5b2088e5f33d7be7d5c5c5999f4f869/ganna1-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}