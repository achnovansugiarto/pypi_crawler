{
  "info": {
    "author": "Yoann Berenguer",
    "author_email": "yoyoberenguer@hotmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: Microsoft :: Windows",
      "Programming Language :: C",
      "Programming Language :: Cython",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Build Tools",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# IndexMapping \n\nThis library contains tools that helps indexing arrays from \n`1d array` (C buffer data type) to 3d array and reciprocally.\nThe functions `to1d` and `to3d` are complementary and can be\nresume with the following statment :\n```\nIf we know the index value of a buffer (index), find the \nequivalent position in a 3d array (x, y, z) and reciprocally; \nsuch as :\n```\n\n- `to3d` buffer[index]     --> 3d array[x, y, z]\n- `to1d` 3d array[x, y, z] --> buffer[index]\n\n`to1d & to3d` can also be used to convert 1d array -> 3d array\nand vice versa. The library also includes functions to transpose\nC buffer data type like the numpy transpose function used for \nmulti-dimensional arrays.\n\nHow can we transpose row and columns in a 1d array since \na buffer is a contiguous or non-contiguous adjacent set of data?\n\n1) reshape the 1d array to a 3d equivalent format \n2) swap row and column of the equivalent 3d array (transposed) \n3) Convert the 3d array back to 1d array type (flatten)\n\nThis library provide functions such as` vfb_rgb` & `vfb_rgba` \n(for transparency) to transpose the array directly.\n\n```\nBelow a good example with 9 pixels buffer:\n// Original 9 pixels buffer (length = 27), pixel format RGB \n(contiguous values)\nbuffer = [RGB1, RGB2, *RGB3, RGB4, RGB5, RGB6, RGB7, RGB8, \nRGB9]\n\nEquivalent reshape model (w, h, depth) would be (3x3x3):\n3d model = [RGB1 RGB2 *RGB3*]\n           [RGB4 RGB5  RGB6 ]\n           [RGB7 RGB8  RGB9 ]\n\n// Same 1d buffer after transposing the values (swapped \nrow and column)\nbuffer = [RGB1, RGB4, *RGB7*, RGB2, RGB5, RGB8, RGB3, RGB6, \nRGB9]\n\nEquivalent reshape model (w, h, depth) after transposing the\noriginal buffer\n3D model = [RGB1, RGB4, RGB7]\n           [RGB2, RGB5, RGB8]\n           [RGB3, RGB6, RGB9]\n```\nAfter transposing the buffer we can observed that the 3d \nequivalent model is an array with `row & columns swapped`. \nThis operation would be identical to a numpy transpose \nfunction such as : 3darray `transpose(1, 0, 2)`\n\n\n\n\n## Installation \n```\npip install Mapping\n```\n\n## Methods\n```` cython\n# MAP BUFFER INDEX VALUE INTO 3D INDEXING\ncpdef tuple to3d(unsigned int index, unsigned int width, unsigned short int depth):\n   \n    use_pygments=false\n    \"\"\"\n    Index mapping (buffer indexing --> 3d array)\n    \n    :param index : python int; buffer index    \n    :param width : python int; width (3d array columns number) \n    :param depth : python int; depth (RGB = 3) | (RGBA = 4) \n    :return      : Return a python tuple containing x, y, z index values \n    \"\"\"\n    \n    cdef xyz v = to3d_c(index, width, depth)\n    return v.x, v.y, v.z\n````\n\n\n``` cython\n# MAP 3D INDEX VALUE INTO BUFFER INDEXING\ncpdef unsigned int to1d(unsigned int x, unsigned int y, unsigned int z, unsigned int width, unsigned short int depth):\n    \n    use_pygments=false\n    \"\"\"\n    Index mapping (3d array indexing --> buffer)\n    \n    :param x     : python int; index x of the array \n    :param y     : python int; index y of the array \n    :param z     : python int; index z of the array \n    :param width : python int; width of the 3d array (number of columns)\n    :param depth : python int; depth, either RGB (depth = 3) or RGBA (depth = 4)\n    :return      : python int; return the index value (1d array)\n     corresponding to a 3d array with index position  (x, y, z) \n    \"\"\"\n    return to1d_c(x, y, z, width, depth)\n```\n``` cython\n# VERTICALLY FLIP A SINGLE BUFFER VALUE\ncpdef vmap_buffer(unsigned int index, unsigned int width, unsigned int height, unsigned short int depth):\n                  \n    use_pygments=false\n    \"\"\"\n    Vertically flipped a single buffer value.\n\n    Flip a C-buffer value vertically\n    Re-sample a buffer value in order to swap rows and columns of\n    its equivalent 3d model\n\n    :param index  : integer; index value to convert  \n    :param width  : integer; Original image width \n    :param height : integer; Original image height   \n    :param depth  : integer; Original image depth=3 for RGB or 4 for RGBA\n    :return       : integer value pointing to the pixel in\n     the buffer (traversed vertically). \n    \"\"\"\n    return vmap_buffer_c(index, width, height, depth)\n```\n\n``` cython\n# FLIP VERTICALLY A BUFFER (TYPE RGB)\ncpdef np.ndarray[np.uint8_t, ndim=1] vfb_rgb(unsigned char [:] source, unsigned char [:] target,\n        int width, int height):\n     \n    use_pygments=false\n    \"\"\"\n    Vertically flipped buffer containing any format of RGB colors\n    \n    :param source   : 1d buffer to flip vertically (unsigned char \n    values). The array length is known with (width * height *\n    depth). The buffer represent  image 's pixels RGB.      \n    :param target   : Target buffer must have same length than source  buffer)\n    :param width    : integer; Source array's width (image width). \n    :param height   : integer; source array's height (image width). \n    :return         : Return a vertically flipped 1D RGB buffer \n    (swapped rows and columns of the 2d model) \n    \n    \"\"\"\n    return numpy.asarray(vfb_rgb_c(source, target, width, height))\n```\n``` cython\n# FLIP VERTICALLY A BUFFER (TYPE RGBA)\ncpdef np.ndarray[np.uint8_t, ndim=1] vfb_rgba(unsigned char [:] source, unsigned char [:] target,\n        int width, int height):\n        \n    use_pygments=false\n    \"\"\"\n    Vertically flipped buffer containing any format of RGBA colors\n        \n    :param source   : 1d buffer to flip vertically (unsigned \n    char values). The array length is known with (width * height\n     * depth). The buffer represent image 's pixels RGBA.     \n    :param target   : Target buffer must have same length than source buffer)\n    :param width    : integer; Source array's width (image width)\n    :param height   : integer; source array's height (image height)\n    :return         : Return a vertically flipped 1D RGBA buffer \n    (swapped rows and columns of the 2d model) \n    \"\"\"\n    return numpy.asarray(vfb_rgba_c(source, target, width, height))\n\n```\n\n``` cython\n#  FLIP VERTICALLY A BUFFER (TYPE ALPHA, (WIDTH, HEIGHT))\ncpdef unsigned char [::1] vfb(unsigned char [:] source, unsigned char [::1] target, int width,\n    int height):\n    \n    use_pygments=false\n    \"\"\"\n    Flip vertically the content (e.g alpha values) of an 1d buffer\n    structure. buffer representing an array type (w, h) \n\n    :param source : 1d buffer created from array type(w, h) \n    :param target : 1d buffer numpy.empty(ax_ * ay_, dtype=numpy.uint8) \n    that will be the equivalentof the source array but flipped vertically \n    :param width  : source width. \n    :param height : source height. \n    :return       : return 1d buffer (source array flipped)\n    \"\"\"\n    return vfb_c(source, target, width, height)\n```   \n\n``` python\nEXAMPLE :\n\nimport IndexMapping\nfrom IndexMapping.mapping import to1d\nimport pygame\nimport numpy\nimport os\n\nPROJECT_PATH = IndexMapping.__path__\nos.chdir(PROJECT_PATH[0] + \"\\\\test\")\n\nwidth, height = 800, 1024\nscreen = pygame.display.set_mode((width, height))\nbackground = pygame.image.load('../Assets/A1.png').convert()\nw, h = background.get_size()\nrgb_array = pygame.surfarray.pixels3d(background)\nc_buffer = numpy.empty(w * h * 3, dtype=numpy.uint8)\n\n# Convert 3d array (rgb_array) into a C buffer (1d)\nfor i in range(w):\n    for j in range(h):\n        for k in range(3):\n            index = to1d(i, j, k, w, 3)\n            c_buffer[index] = rgb_array[i, j, k]       \n```\n\n```python\n\nimport IndexMapping\nfrom IndexMapping.mapping import to3d\nimport pygame\nfrom pygame.surfarray import pixels3d\nimport numpy\nimport os\n\nPROJECT_PATH = IndexMapping.__path__\nos.chdir(PROJECT_PATH[0] + \"\\\\test\")\n\nwidth, height = 800, 1024\nscreen = pygame.display.set_mode((width, height))\nbackground = pygame.image.load('../Assets/A1.png').convert()\nw, h = background.get_size()\n\nrgb_array = pixels3d(background).transpose(1, 0, 2)\nc_buffer = rgb_array.flatten()\n\nlength = c_buffer.size\nassert length == w * h * 3, \\\n    \"C buffer has an incorrect length, got %s instead of %s \" \\ \n% (length, w * h * 3)\n\nrgb_array = numpy.zeros((w, h, 3), numpy.uint8)\n        \n# Build a 3d array using the function to3d\nfor i in range(length):\n    x, y, z = to3d(i, w, 3)\n    rgb_array[x, y, z] = c_buffer[i]\n```\n```python\nimport IndexMapping\nimport numpy\nfrom IndexMapping.mapping import vfb_rgb\nimport pygame\nfrom pygame.surfarray import pixels3d\nimport os\n\nPROJECT_PATH = IndexMapping.__path__\nos.chdir(PROJECT_PATH[0] + \"\\\\test\")\n\nwidth, height = 800, 1024\nscreen = pygame.display.set_mode((width, height))\nbackground = pygame.image.load('../Assets/A1.png').convert()\nbackground = pygame.transform.smoothscale(background, (640, 480))\nw, h = background.get_size()\nrgb_array = pixels3d(background)\n\nrgb_buffer = rgb_array.flatten()\ntarget_buffer = numpy.empty(w * h * 3, numpy.uint8)\nrgb_buffer_transpose = vfb_rgb(rgb_buffer, target_buffer, w, h)\n```\n\n## Building cython code\n```\nIf you need to compile the Cython code after any changes in the \nfile Mapping.pyx:\n\n1) open a terminal window\n2) Go in the main project directory where (mapping.pyx & \n   mapping.pxd files are located)\n3) run : python setup_Mapping.py build_ext --inplace\n\nIf you have to compile the code with a specific python \nversion, make sure to reference the right python version \nin (python38 setup_mapping.py build_ext --inplace)\n\nIf the compilation fail, refers to the requirement section and \nmake sure cython and a C-compiler are correctly install on your\n system.\n- A compiler such visual studio, MSVC, CGYWIN setup correctly on \n  your system.\n  - a C compiler for windows (Visual Studio, MinGW etc) install \n  on your system and linked to your windows environment.\n  Note that some adjustment might be needed once a compiler is \n  install on your system, refer to external documentation or \n  tutorial in order to setup this process.e.g https://devblogs.\n  microsoft.com/python/unable-to-find-vcvarsall-bat/\n```\n\n## Credit\nYoann Berenguer \n\n## Dependencies :\n```\npython >= 3.0\ncython >= 0.28\n```\n\n## License :\n```\nMIT License\n\nCopyright (c) 2019 Yoann Berenguer\n\nPermission is hereby granted, free of charge, to any person \nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without \nrestriction, including without limitation the rights to use, \ncopy, modify, merge, publish, distribute, sublicense, and/or \nsell copies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following \nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES \nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND \nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT \nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, \nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING \nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n```\n## Testing: \n```python\n>>>from IndexMapping.test.test_mapping import run_test\n>>>run_test()\n```\n\n\n## Timing :\n```C:\\>python profiling.py```\n\n```\nTesting to1d        per call 2.627551e-07 overall time 0.2627551 for 1000000\nTesting to3d        per call 1.217256e-07 overall time 0.1217255 for 1000000\nTesting vfb_rgb     per call 0.0015129453 overall time 1.5129453 for 1000 --> image 800x800x3\nTesting vmap_buffer per call 1.189032e-07 overall time 0.1189032 for 1000000\nTesting vfb_rgba    per call 0.001878 overall time 1.8783595 for 1000     --> image 800x800x4\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/yoyoberenguer/IndexMapping",
    "keywords": "Buffer,transpose,Array indexing,1D array to 3D array,3D array to 1D array",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "IndexMapping",
    "package_url": "https://pypi.org/project/IndexMapping/",
    "platform": "any",
    "project_url": "https://pypi.org/project/IndexMapping/",
    "project_urls": {
      "Bug Reports": "https://github.com/yoyoberenguer/IndexMapping/issues",
      "Homepage": "https://github.com/yoyoberenguer/IndexMapping",
      "Source": "https://github.com/yoyoberenguer/IndexMapping"
    },
    "release_url": "https://pypi.org/project/IndexMapping/1.0.2/",
    "requires_dist": [
      "setuptools (>=49.2.1)",
      "Cython (>=0.28)"
    ],
    "requires_python": ">=3.0",
    "summary": "1D array transpose/conversion",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11953362,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "91cd3dcfc9836b9349ceeec22e396aa67ebffc90cd544f6d34e31c5924082c22",
          "md5": "1f4a3eb2f6c22e45854fdf0f72490d13",
          "sha256": "700e80683b196aaedcc3003259ea17326369f6ee50b8273d9322def289e7ae75"
        },
        "downloads": -1,
        "filename": "IndexMapping-1.0.0-cp310-cp310-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "1f4a3eb2f6c22e45854fdf0f72490d13",
        "packagetype": "bdist_wheel",
        "python_version": "cp310",
        "requires_python": ">=3.0",
        "size": 1192801,
        "upload_time": "2021-11-05T04:50:32",
        "upload_time_iso_8601": "2021-11-05T04:50:32.821215Z",
        "url": "https://files.pythonhosted.org/packages/91/cd/3dcfc9836b9349ceeec22e396aa67ebffc90cd544f6d34e31c5924082c22/IndexMapping-1.0.0-cp310-cp310-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "258770691d801455ee99da8df69f5f395082f5d5135b9a4cd123baed8b903424",
          "md5": "a78fa73615d0008e3ad854ea4758cd0c",
          "sha256": "ee47fd83f5832de65921ba309523a88053dbff0f1b8ee08128459a783786327d"
        },
        "downloads": -1,
        "filename": "IndexMapping-1.0.0-cp36-cp36m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "a78fa73615d0008e3ad854ea4758cd0c",
        "packagetype": "bdist_wheel",
        "python_version": "cp36",
        "requires_python": ">=3.0",
        "size": 1191337,
        "upload_time": "2021-11-05T04:50:35",
        "upload_time_iso_8601": "2021-11-05T04:50:35.553251Z",
        "url": "https://files.pythonhosted.org/packages/25/87/70691d801455ee99da8df69f5f395082f5d5135b9a4cd123baed8b903424/IndexMapping-1.0.0-cp36-cp36m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5edc41bc6357bf130a99c3403c27b6885a781185c269b29d4f25bdb44ce0fc07",
          "md5": "6a0694600d51005d5047becb8430ee49",
          "sha256": "1bbdaacee5e0ecbd30487a3ce828ed7d51aecf97a1b7910b2e049ef3cf6406c6"
        },
        "downloads": -1,
        "filename": "IndexMapping-1.0.0-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "6a0694600d51005d5047becb8430ee49",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.0",
        "size": 1191387,
        "upload_time": "2021-11-05T04:50:38",
        "upload_time_iso_8601": "2021-11-05T04:50:38.636264Z",
        "url": "https://files.pythonhosted.org/packages/5e/dc/41bc6357bf130a99c3403c27b6885a781185c269b29d4f25bdb44ce0fc07/IndexMapping-1.0.0-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "450021541f11c4396035036194a2fe058a5c796fbfc3fd9da3ab76fe69752f26",
          "md5": "ed9dd1fa1277dbd32086ae9d492e43d0",
          "sha256": "2bfc3045784c6779ddb6b8aa70be7932d4e42f818928dda71e629dbdeb692f42"
        },
        "downloads": -1,
        "filename": "IndexMapping-1.0.0-cp38-cp38-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "ed9dd1fa1277dbd32086ae9d492e43d0",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.0",
        "size": 1193022,
        "upload_time": "2021-11-05T04:50:41",
        "upload_time_iso_8601": "2021-11-05T04:50:41.479522Z",
        "url": "https://files.pythonhosted.org/packages/45/00/21541f11c4396035036194a2fe058a5c796fbfc3fd9da3ab76fe69752f26/IndexMapping-1.0.0-cp38-cp38-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "57dc34a73a3c81e7c6ea3a84fbf1324a759b94b09cf76f25f5219fb7af38b702",
          "md5": "f7536a036d96599c43bca8e50e955007",
          "sha256": "bd25c25cfe4c23b94d86658e2621eaf98e79f151727b5b9b2d8d108ff8cdfc50"
        },
        "downloads": -1,
        "filename": "IndexMapping-1.0.0-cp39-cp39-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "f7536a036d96599c43bca8e50e955007",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": ">=3.0",
        "size": 1192832,
        "upload_time": "2021-11-05T04:50:44",
        "upload_time_iso_8601": "2021-11-05T04:50:44.295555Z",
        "url": "https://files.pythonhosted.org/packages/57/dc/34a73a3c81e7c6ea3a84fbf1324a759b94b09cf76f25f5219fb7af38b702/IndexMapping-1.0.0-cp39-cp39-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ed922aeb517398c5637884d3aea22ef8ddf51a7309fd0d89b39c56db1cf2e77e",
          "md5": "e58769110fe16be88e9b44964edf3db1",
          "sha256": "464da0a8397d8c10ae2a33327b1fe68c03f0b5e0d092e07e004d2f0b7c9ab429"
        },
        "downloads": -1,
        "filename": "IndexMapping-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e58769110fe16be88e9b44964edf3db1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.0",
        "size": 1284462,
        "upload_time": "2021-11-05T04:50:47",
        "upload_time_iso_8601": "2021-11-05T04:50:47.356384Z",
        "url": "https://files.pythonhosted.org/packages/ed/92/2aeb517398c5637884d3aea22ef8ddf51a7309fd0d89b39c56db1cf2e77e/IndexMapping-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b26fc0b3e237c70c00cadfbf5c74e46c727eccbaf8c1d55cee35fdbf1f4bf03e",
          "md5": "86b798ea045ad24d51620a7a2a928128",
          "sha256": "9c4b37abf47d238ae2c11d9eaf8218aae5f485a3967e5f6e2258a16e416e480f"
        },
        "downloads": -1,
        "filename": "IndexMapping-1.0.1-cp310-cp310-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "86b798ea045ad24d51620a7a2a928128",
        "packagetype": "bdist_wheel",
        "python_version": "cp310",
        "requires_python": ">=3.0",
        "size": 1195122,
        "upload_time": "2021-11-05T17:54:05",
        "upload_time_iso_8601": "2021-11-05T17:54:05.793354Z",
        "url": "https://files.pythonhosted.org/packages/b2/6f/c0b3e237c70c00cadfbf5c74e46c727eccbaf8c1d55cee35fdbf1f4bf03e/IndexMapping-1.0.1-cp310-cp310-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5192612a0ad99691c6938f3eafced618c1fbfc87dc4aac9d0579b2e4c6fa2b5e",
          "md5": "9d9a1325a6cfc95255915b6150b16488",
          "sha256": "fd744ab950f6c2ecee90cc6318b6ab5a396a28b41e30d04cf4e4c75fe908e30c"
        },
        "downloads": -1,
        "filename": "IndexMapping-1.0.1-cp36-cp36m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "9d9a1325a6cfc95255915b6150b16488",
        "packagetype": "bdist_wheel",
        "python_version": "cp36",
        "requires_python": ">=3.0",
        "size": 1193641,
        "upload_time": "2021-11-05T17:54:08",
        "upload_time_iso_8601": "2021-11-05T17:54:08.893926Z",
        "url": "https://files.pythonhosted.org/packages/51/92/612a0ad99691c6938f3eafced618c1fbfc87dc4aac9d0579b2e4c6fa2b5e/IndexMapping-1.0.1-cp36-cp36m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c72c4bfda2490afa700740fb8f4d1d348f2453df48cfc9668c050aa88a849b88",
          "md5": "8f1eb6de08b972517807719a0baed9d9",
          "sha256": "577718218571185f9299412ae3aeb87ea89f476b48860b68705f539d01755a0e"
        },
        "downloads": -1,
        "filename": "IndexMapping-1.0.1-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "8f1eb6de08b972517807719a0baed9d9",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.0",
        "size": 1193686,
        "upload_time": "2021-11-05T17:54:11",
        "upload_time_iso_8601": "2021-11-05T17:54:11.544833Z",
        "url": "https://files.pythonhosted.org/packages/c7/2c/4bfda2490afa700740fb8f4d1d348f2453df48cfc9668c050aa88a849b88/IndexMapping-1.0.1-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6552ca6a067219d9823aa831a5b2714ca763c6b7f98db285338c4982fa53fcb8",
          "md5": "21ae37e7609a69813d21a71711d543bc",
          "sha256": "1dedc91bc2e31ba4ad0c65fe945e2e2bbb830782d6cf46e4e2c513aa68f005c2"
        },
        "downloads": -1,
        "filename": "IndexMapping-1.0.1-cp38-cp38-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "21ae37e7609a69813d21a71711d543bc",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.0",
        "size": 1195328,
        "upload_time": "2021-11-05T17:54:14",
        "upload_time_iso_8601": "2021-11-05T17:54:14.443936Z",
        "url": "https://files.pythonhosted.org/packages/65/52/ca6a067219d9823aa831a5b2714ca763c6b7f98db285338c4982fa53fcb8/IndexMapping-1.0.1-cp38-cp38-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c1f3c1adcebad6e44ff60c7c5556e8defb733aebd2591c9deb954870bc6f5604",
          "md5": "0153bc5be269ee59a7c21649afac6de1",
          "sha256": "b6451f3c6084220ab3f239b4ed022ffd8bd71d2d6bdcb28b342364d1f4b3bae6"
        },
        "downloads": -1,
        "filename": "IndexMapping-1.0.1-cp39-cp39-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "0153bc5be269ee59a7c21649afac6de1",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": ">=3.0",
        "size": 1195115,
        "upload_time": "2021-11-05T17:54:16",
        "upload_time_iso_8601": "2021-11-05T17:54:16.939548Z",
        "url": "https://files.pythonhosted.org/packages/c1/f3/c1adcebad6e44ff60c7c5556e8defb733aebd2591c9deb954870bc6f5604/IndexMapping-1.0.1-cp39-cp39-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "63d39d6cf9af4770043d18e5ed792d4ae1621b4ef75361bac029c1d7858ebae0",
          "md5": "ab1df043421046790f892a93b60d4d1a",
          "sha256": "c178e13e07bc8d120f692d9686ccbdf53f2491c446acbb70125f8e33afa8c8a4"
        },
        "downloads": -1,
        "filename": "IndexMapping-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ab1df043421046790f892a93b60d4d1a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.0",
        "size": 1293824,
        "upload_time": "2021-11-05T17:54:19",
        "upload_time_iso_8601": "2021-11-05T17:54:19.701102Z",
        "url": "https://files.pythonhosted.org/packages/63/d3/9d6cf9af4770043d18e5ed792d4ae1621b4ef75361bac029c1d7858ebae0/IndexMapping-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6922b8bc1d6a2204d375c441ea41ab827b3b33666581e76e299ca9205c57d82",
          "md5": "b6afc0c0afac281cf7c0350be94ae65f",
          "sha256": "c6ef6eff81b417d0814a4b380c06310ab4fc8d787d073af85748e75e7f41d11f"
        },
        "downloads": -1,
        "filename": "IndexMapping-1.0.2-cp310-cp310-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "b6afc0c0afac281cf7c0350be94ae65f",
        "packagetype": "bdist_wheel",
        "python_version": "cp310",
        "requires_python": ">=3.0",
        "size": 1211093,
        "upload_time": "2021-11-07T17:18:31",
        "upload_time_iso_8601": "2021-11-07T17:18:31.476170Z",
        "url": "https://files.pythonhosted.org/packages/a6/92/2b8bc1d6a2204d375c441ea41ab827b3b33666581e76e299ca9205c57d82/IndexMapping-1.0.2-cp310-cp310-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b04d0a39d922dc26a85eb5342f2e31d91814db59efb13d3cb5b7aa5e98cf5145",
          "md5": "e09076043d8d26c6982098a8ce4398b2",
          "sha256": "f3b3182ab12268f074bebe17443ceb805625d6810bdb982c98bcef3c63760a3a"
        },
        "downloads": -1,
        "filename": "IndexMapping-1.0.2-cp36-cp36m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "e09076043d8d26c6982098a8ce4398b2",
        "packagetype": "bdist_wheel",
        "python_version": "cp36",
        "requires_python": ">=3.0",
        "size": 1209511,
        "upload_time": "2021-11-07T17:18:34",
        "upload_time_iso_8601": "2021-11-07T17:18:34.205128Z",
        "url": "https://files.pythonhosted.org/packages/b0/4d/0a39d922dc26a85eb5342f2e31d91814db59efb13d3cb5b7aa5e98cf5145/IndexMapping-1.0.2-cp36-cp36m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "681ac7db611d5b0c1c037c0de387092c14006949b50e9080d753ae54dd39d4d6",
          "md5": "77be20bc889fbd3af4837ef32982df8f",
          "sha256": "e8a3238796e3456431c77a67584d315ccb009a4f7abf2bcde7c6a9821610f0ce"
        },
        "downloads": -1,
        "filename": "IndexMapping-1.0.2-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "77be20bc889fbd3af4837ef32982df8f",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.0",
        "size": 1209605,
        "upload_time": "2021-11-07T17:18:36",
        "upload_time_iso_8601": "2021-11-07T17:18:36.818410Z",
        "url": "https://files.pythonhosted.org/packages/68/1a/c7db611d5b0c1c037c0de387092c14006949b50e9080d753ae54dd39d4d6/IndexMapping-1.0.2-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a61027e996cefe0d44ed451beea52f21092f5ab1c046e13889a728c146b42676",
          "md5": "699f3625aa36e33dff4990d585fb62cf",
          "sha256": "8e66fe9092373645a408d715b6f2b12bc15ad7f54be9d0cff57015805892ec80"
        },
        "downloads": -1,
        "filename": "IndexMapping-1.0.2-cp38-cp38-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "699f3625aa36e33dff4990d585fb62cf",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.0",
        "size": 1211233,
        "upload_time": "2021-11-07T17:18:39",
        "upload_time_iso_8601": "2021-11-07T17:18:39.549206Z",
        "url": "https://files.pythonhosted.org/packages/a6/10/27e996cefe0d44ed451beea52f21092f5ab1c046e13889a728c146b42676/IndexMapping-1.0.2-cp38-cp38-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "34e0a0e854fbc102633981a0c4f7ccb18d513fbe15ae8d4b72db776327fed25e",
          "md5": "86b2d38b906577cd82c3b679c3e9581f",
          "sha256": "791c8acfd272e0bcd79892feb6d6f5e0e10b316c92762471841b1a7e7086bb37"
        },
        "downloads": -1,
        "filename": "IndexMapping-1.0.2-cp39-cp39-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "86b2d38b906577cd82c3b679c3e9581f",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": ">=3.0",
        "size": 1211052,
        "upload_time": "2021-11-07T17:18:42",
        "upload_time_iso_8601": "2021-11-07T17:18:42.450702Z",
        "url": "https://files.pythonhosted.org/packages/34/e0/a0e854fbc102633981a0c4f7ccb18d513fbe15ae8d4b72db776327fed25e/IndexMapping-1.0.2-cp39-cp39-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0d4fe88c1b2373cfde3020fb6b6e3a535c73ddf5d7597fa8b1b0574bba0ee882",
          "md5": "12bca605a3eaefe63aaa55e46aaab633",
          "sha256": "fdff2963e84d6f8d19c337b0182f6cfca90f4092df531bb530c35f805ab4f482"
        },
        "downloads": -1,
        "filename": "IndexMapping-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "12bca605a3eaefe63aaa55e46aaab633",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.0",
        "size": 1302309,
        "upload_time": "2021-11-07T17:18:45",
        "upload_time_iso_8601": "2021-11-07T17:18:45.287347Z",
        "url": "https://files.pythonhosted.org/packages/0d/4f/e88c1b2373cfde3020fb6b6e3a535c73ddf5d7597fa8b1b0574bba0ee882/IndexMapping-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a6922b8bc1d6a2204d375c441ea41ab827b3b33666581e76e299ca9205c57d82",
        "md5": "b6afc0c0afac281cf7c0350be94ae65f",
        "sha256": "c6ef6eff81b417d0814a4b380c06310ab4fc8d787d073af85748e75e7f41d11f"
      },
      "downloads": -1,
      "filename": "IndexMapping-1.0.2-cp310-cp310-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "b6afc0c0afac281cf7c0350be94ae65f",
      "packagetype": "bdist_wheel",
      "python_version": "cp310",
      "requires_python": ">=3.0",
      "size": 1211093,
      "upload_time": "2021-11-07T17:18:31",
      "upload_time_iso_8601": "2021-11-07T17:18:31.476170Z",
      "url": "https://files.pythonhosted.org/packages/a6/92/2b8bc1d6a2204d375c441ea41ab827b3b33666581e76e299ca9205c57d82/IndexMapping-1.0.2-cp310-cp310-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b04d0a39d922dc26a85eb5342f2e31d91814db59efb13d3cb5b7aa5e98cf5145",
        "md5": "e09076043d8d26c6982098a8ce4398b2",
        "sha256": "f3b3182ab12268f074bebe17443ceb805625d6810bdb982c98bcef3c63760a3a"
      },
      "downloads": -1,
      "filename": "IndexMapping-1.0.2-cp36-cp36m-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "e09076043d8d26c6982098a8ce4398b2",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=3.0",
      "size": 1209511,
      "upload_time": "2021-11-07T17:18:34",
      "upload_time_iso_8601": "2021-11-07T17:18:34.205128Z",
      "url": "https://files.pythonhosted.org/packages/b0/4d/0a39d922dc26a85eb5342f2e31d91814db59efb13d3cb5b7aa5e98cf5145/IndexMapping-1.0.2-cp36-cp36m-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "681ac7db611d5b0c1c037c0de387092c14006949b50e9080d753ae54dd39d4d6",
        "md5": "77be20bc889fbd3af4837ef32982df8f",
        "sha256": "e8a3238796e3456431c77a67584d315ccb009a4f7abf2bcde7c6a9821610f0ce"
      },
      "downloads": -1,
      "filename": "IndexMapping-1.0.2-cp37-cp37m-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "77be20bc889fbd3af4837ef32982df8f",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.0",
      "size": 1209605,
      "upload_time": "2021-11-07T17:18:36",
      "upload_time_iso_8601": "2021-11-07T17:18:36.818410Z",
      "url": "https://files.pythonhosted.org/packages/68/1a/c7db611d5b0c1c037c0de387092c14006949b50e9080d753ae54dd39d4d6/IndexMapping-1.0.2-cp37-cp37m-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a61027e996cefe0d44ed451beea52f21092f5ab1c046e13889a728c146b42676",
        "md5": "699f3625aa36e33dff4990d585fb62cf",
        "sha256": "8e66fe9092373645a408d715b6f2b12bc15ad7f54be9d0cff57015805892ec80"
      },
      "downloads": -1,
      "filename": "IndexMapping-1.0.2-cp38-cp38-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "699f3625aa36e33dff4990d585fb62cf",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.0",
      "size": 1211233,
      "upload_time": "2021-11-07T17:18:39",
      "upload_time_iso_8601": "2021-11-07T17:18:39.549206Z",
      "url": "https://files.pythonhosted.org/packages/a6/10/27e996cefe0d44ed451beea52f21092f5ab1c046e13889a728c146b42676/IndexMapping-1.0.2-cp38-cp38-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "34e0a0e854fbc102633981a0c4f7ccb18d513fbe15ae8d4b72db776327fed25e",
        "md5": "86b2d38b906577cd82c3b679c3e9581f",
        "sha256": "791c8acfd272e0bcd79892feb6d6f5e0e10b316c92762471841b1a7e7086bb37"
      },
      "downloads": -1,
      "filename": "IndexMapping-1.0.2-cp39-cp39-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "86b2d38b906577cd82c3b679c3e9581f",
      "packagetype": "bdist_wheel",
      "python_version": "cp39",
      "requires_python": ">=3.0",
      "size": 1211052,
      "upload_time": "2021-11-07T17:18:42",
      "upload_time_iso_8601": "2021-11-07T17:18:42.450702Z",
      "url": "https://files.pythonhosted.org/packages/34/e0/a0e854fbc102633981a0c4f7ccb18d513fbe15ae8d4b72db776327fed25e/IndexMapping-1.0.2-cp39-cp39-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0d4fe88c1b2373cfde3020fb6b6e3a535c73ddf5d7597fa8b1b0574bba0ee882",
        "md5": "12bca605a3eaefe63aaa55e46aaab633",
        "sha256": "fdff2963e84d6f8d19c337b0182f6cfca90f4092df531bb530c35f805ab4f482"
      },
      "downloads": -1,
      "filename": "IndexMapping-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "12bca605a3eaefe63aaa55e46aaab633",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.0",
      "size": 1302309,
      "upload_time": "2021-11-07T17:18:45",
      "upload_time_iso_8601": "2021-11-07T17:18:45.287347Z",
      "url": "https://files.pythonhosted.org/packages/0d/4f/e88c1b2373cfde3020fb6b6e3a535c73ddf5d7597fa8b1b0574bba0ee882/IndexMapping-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}