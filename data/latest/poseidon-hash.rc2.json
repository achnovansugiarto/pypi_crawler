{
  "info": {
    "author": "Ingonyama",
    "author_email": "ekaterina@ingonyama.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Poseidon\n\n[![PyPI version](https://badge.fury.io/py/poseidon-hash.svg)](https://badge.fury.io/py/poseidon-hash)\n\nThis repository contains a reference implementations for the original version of Poseidon [1] and the instantiation as a hash\nfunction tuned for Filecoin [2].\nMoreover, scripts to calculate the round numbers, the round constants, and the MDS matrices are also included.\n\n\n## Theoretical introduction\n\nThe set of parameters (`t`, `M`, `p`, `alpha`) fully specify a unique instance of Poseidon\nAll other Poseidon parameters and constants are derived from these parameters.\n\nThe optimized Poseidon hash function is instantiated in the same way as the un-optimized algorithm, however the optimized\nPoseidon algorithm requires the additional pre-computation of round constants, pre-sparse matrix and sparse matrices.\nWe implemented the pre-computation steps according to [2].\n\nThe hash function takes as input a list of elements from a certain field `F` and outputs o single field\nelement.\nIn addition, for this implementation the `input_rate` (size of input) parameter is required, which can take any value\nfrom `1` to `t`. A longer input size is possible and it is a work in progress.\n\n\n## Usage: generate new instance with pre-generated parameters\n\nTo create a new hash instance, you can use ready-made functions in [parameters.py](poseidon/parameters.py) that have all\nthe necessary parameters,\nor you can set your own parameters that have already been generated.\n\nFor matrices and round constants, use the hex representation.\n\n```python\nimport poseidon\n\ndef main():\n    poseidon_simple, t = poseidon.parameters.case_simple()\n\n    input_vec = [x for x in range(0, t)]\n    print(\"Input: \", input_vec)\n    poseidon_digest = poseidon_simple.run_hash(input_vec)\n    print(\"Output: \", hex(int(poseidon_digest)))\n\n    security_level = 128\n    input_rate = 3\n    t_opt = 4\n    full_round = 8\n    partial_round = 56\n    alpha = 5\n    poseidon_pre_generated = poseidon.OptimizedPoseidon(poseidon.HashType.CONSTINPUTLEN, poseidon.parameters.prime_255, \n                                                    security_level, alpha, input_rate, t_opt,\n                                                    full_round=full_round, partial_round=partial_round,\n                                                    rc_list=poseidon.parameters.round_constants_neptune, \n                                                    mds_matrix=poseidon.parameters.matrix_neptune)\n\n    input_vec_2 = [x for x in range(0, t_opt - 1)]\n    print(\"Input: \", input_vec_2)\n    poseidon_output = poseidon_pre_generated.run_hash(input_vec_2)\n    print(\"Output: \", hex(int(poseidon_output)))\n\n\nif __name__ == \"__main__\":\n    main()\n```\n\n## Usage: generate new instance without pre-generated parameters\n\nThe number of rounds, roound constants and matrices are optional parameters;\nif they are not specified, they will be generated automatically.\nFor the same required input parameters the same optional parameters will always be generated.\n\n```python\nimport poseidon\n\ndef main():\n    security_level = 128\n    input_rate = 3\n    t = 4\n    alpha = 5\n    poseidon_new = poseidon.Poseidon(poseidon.parameters.prime_255, security_level, alpha, input_rate, t)\n\n    input_vec = [x for x in range(0, t)]\n    print(\"Input: \", input_vec)\n    poseidon_output = poseidon_new.run_hash(input_vec)\n    print(\"Output: \", hex(int(poseidon_output)))\n\n\nif __name__ == \"__main__\":\n    main()\n```\n\n## Running tests\n\nTest vectors and parameters for non-optimised implementation are taken from [3].\n\nParameter generation for the optimized Poseidon is checked using test vectors that are taken (in some cases generated) from\nthe implementation of [2].\n\nRunning all tests\n\n```commandline\npython3 -m pytest tests/ \n```\n\nRunning tests by file\n\n```commandline\npython3 -m pytest tests/test_hash.py \n```\n\nRunning a specific test. After `::` you must enter the name of the specific test in the corresponding file\n\n```commandline\npython3 -m pytest tests/test_hash.py::test_not_optimized_poseidon\n```\n\n## License\n\nThe code is released under the MIT license. See [LICENSE](LICENSE) for more information.\n\n## Contact\n\nFeel free to [reach out](mailto:hi@ingonyama.com)! \n\n\n[1] *Poseidon: A New Hash Function for Zero-Knowledge Proof Systems. Cryptology ePrint Archive, Report 2019/458.\nhttps://eprint.iacr.org/2019/458. Accepted at USENIX'21.*\n\n[2] *Neptune specification https://github.com/filecoin-project/neptune/tree/master/spec*\n\n[3] *Reference Implementations for Various Versions of Starkad and\nPoseidon https://extgit.iaik.tugraz.at/krypto/hadeshash*\n \n\n\n# CHANGELOG\n\n## Version 0.1.0 07/18/2022\n1. First major release of the code, includes implementation of hash function and its optimization.\n2. Add generator of round constants, round numbers and MDS matrix with correspond tests.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ingonyama-zk/poseidon-hash",
    "keywords": "Hash Function,Cryptography",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "poseidon-hash",
    "package_url": "https://pypi.org/project/poseidon-hash/",
    "platform": null,
    "project_url": "https://pypi.org/project/poseidon-hash/",
    "project_urls": {
      "Homepage": "https://github.com/ingonyama-zk/poseidon-hash"
    },
    "release_url": "https://pypi.org/project/poseidon-hash/0.1.1/",
    "requires_dist": [
      "pytest (~=7.1.2)",
      "galois (~=0.0.30)",
      "numpy (>=1.18.4)",
      "setuptools (>=42.0)"
    ],
    "requires_python": "",
    "summary": "Reference implementation in Python of Poseidon and optimized Poseidon (Neptune) hash functions",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16110288,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0dd7da8a6df3e6c0edffb705789e674a3e1244b8ae61303f73963a0887f5eb7c",
          "md5": "cf2e25af7a241ea0487f791fa2b41c89",
          "sha256": "ac49acf0ac369576456f2ea93efb06772c33d74f5c51df0a7cb218667cc9e34b"
        },
        "downloads": -1,
        "filename": "poseidon_hash-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cf2e25af7a241ea0487f791fa2b41c89",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6043,
        "upload_time": "2022-07-22T06:56:04",
        "upload_time_iso_8601": "2022-07-22T06:56:04.780756Z",
        "url": "https://files.pythonhosted.org/packages/0d/d7/da8a6df3e6c0edffb705789e674a3e1244b8ae61303f73963a0887f5eb7c/poseidon_hash-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5368336f6917352ad6aa1e702ba41d09c64f12c4224a75b8f42e22ae88ca8dd3",
          "md5": "94878812a8aa0fca83084a27950ac002",
          "sha256": "69c5c0a77c80c7b4a738ba259959047fe2b2c83bee0083f2e34c3b7b7e55f7ec"
        },
        "downloads": -1,
        "filename": "poseidon-hash-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "94878812a8aa0fca83084a27950ac002",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 95004,
        "upload_time": "2022-07-22T06:56:07",
        "upload_time_iso_8601": "2022-07-22T06:56:07.078790Z",
        "url": "https://files.pythonhosted.org/packages/53/68/336f6917352ad6aa1e702ba41d09c64f12c4224a75b8f42e22ae88ca8dd3/poseidon-hash-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f260d096856d898d98389e8c1e8b51cfa7e7ae3b14cce63005f4bd9148fec9f",
          "md5": "5c53d319cdf0fd85777bd0fd70664a44",
          "sha256": "2d7cd5839d45bd3daf51dd669711d032e532ca842f943f4f0bfd27b103cc0d84"
        },
        "downloads": -1,
        "filename": "poseidon_hash-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5c53d319cdf0fd85777bd0fd70664a44",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 92838,
        "upload_time": "2022-12-15T07:43:08",
        "upload_time_iso_8601": "2022-12-15T07:43:08.889898Z",
        "url": "https://files.pythonhosted.org/packages/1f/26/0d096856d898d98389e8c1e8b51cfa7e7ae3b14cce63005f4bd9148fec9f/poseidon_hash-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "77425b822f68aea4fa121adcc3f4c0eaec362a9b44915d5e87a0447db9240c93",
          "md5": "36b0239a0f409ba0e53e8b10731ccc2f",
          "sha256": "5155f523cf821f94854a276bbec3da7aff36245b732860706f06bc62de50d82a"
        },
        "downloads": -1,
        "filename": "poseidon-hash-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "36b0239a0f409ba0e53e8b10731ccc2f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6011489,
        "upload_time": "2022-12-15T07:43:39",
        "upload_time_iso_8601": "2022-12-15T07:43:39.922864Z",
        "url": "https://files.pythonhosted.org/packages/77/42/5b822f68aea4fa121adcc3f4c0eaec362a9b44915d5e87a0447db9240c93/poseidon-hash-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1f260d096856d898d98389e8c1e8b51cfa7e7ae3b14cce63005f4bd9148fec9f",
        "md5": "5c53d319cdf0fd85777bd0fd70664a44",
        "sha256": "2d7cd5839d45bd3daf51dd669711d032e532ca842f943f4f0bfd27b103cc0d84"
      },
      "downloads": -1,
      "filename": "poseidon_hash-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5c53d319cdf0fd85777bd0fd70664a44",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 92838,
      "upload_time": "2022-12-15T07:43:08",
      "upload_time_iso_8601": "2022-12-15T07:43:08.889898Z",
      "url": "https://files.pythonhosted.org/packages/1f/26/0d096856d898d98389e8c1e8b51cfa7e7ae3b14cce63005f4bd9148fec9f/poseidon_hash-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "77425b822f68aea4fa121adcc3f4c0eaec362a9b44915d5e87a0447db9240c93",
        "md5": "36b0239a0f409ba0e53e8b10731ccc2f",
        "sha256": "5155f523cf821f94854a276bbec3da7aff36245b732860706f06bc62de50d82a"
      },
      "downloads": -1,
      "filename": "poseidon-hash-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "36b0239a0f409ba0e53e8b10731ccc2f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6011489,
      "upload_time": "2022-12-15T07:43:39",
      "upload_time_iso_8601": "2022-12-15T07:43:39.922864Z",
      "url": "https://files.pythonhosted.org/packages/77/42/5b822f68aea4fa121adcc3f4c0eaec362a9b44915d5e87a0447db9240c93/poseidon-hash-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}