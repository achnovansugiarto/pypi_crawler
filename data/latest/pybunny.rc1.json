{
  "info": {
    "author": "Suliman Sharif",
    "author_email": "sharifsuliman1@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "PyBunny - Your SSH-Jupyter Proxy Hop Friend!\n============================================\n\n![Python](https://img.shields.io/badge/python-3.6-blue.svg)\n[![PEP8](https://img.shields.io/badge/code%20style-pep8-orange.svg)](https://www.python.org/dev/peps/pep-0008/)\n[![License: MPL 2.0](https://img.shields.io/badge/License-MPL%202.0-brightgreen.svg)](https://opensource.org/licenses/MPL-2.0)\n[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square)](http://makeapullrequest.com)\n[![saythanks](https://img.shields.io/badge/Lab-Shen%20Group-ff69b4.svg)](https://www.computchem.org/)\n\n<p align=\"center\">\n  <img width=\"800\" height=\"600\" src=\"images/bunny.gif\">\n</p>\n\n\nBunny is a ssh proxy jumping for jupyter notebooks. If you are in a situation similar to mine where you want to port\nforward a jupyter notebook from your mini cluster machine but is not ssh accessible so you need a gateway that is SSH\naccessible and you are going to port forward through several machines. Well I wrote a python package for it. \n\n```\n    HOST A (local machine) -> HOST B (gateway) -> HOST C (execute jupyter)\n    \n```\n**Note**: you must have authorized keys in your SSH between every Host added into the Bunny.\n\nQuick Start\n===========\n\nRunning the bunny is pretty easy. To initialize a class you pass the `python_env` variable to dictate which python env\nis going to be running the jupyter notebook. The `notebook_launch_command` is your exact launch command to run the jupyter \nnotebook - mine is exampled down below and the `port` you execute your notebook on.\n\n    \n```\n    from pybunny.bunny import Bunny\n    \n    bunny = Bunny(\n        python_env='/path/to/env/python',\n        notebook_launch_command='jupyter notebook --no-browser --NotebookApp.token=\"\"',\n        port='8889'\n    )\n    \n```\n\nNext add your hops between the bunnies, with the user, hostname, and the name of the gateway. If this is the last server\nin your chain to run the notebook then add the `proxy_jump` argument if\n\n```\n\n    bunny.add_hop('hop1', hostname='XX.XX.XXX.XXX', user='poor_graduate_student')\n    bunny.add_hop('notebook', hostname='fakeemail@someuniversity.edu', user='poor_graduate_student', proxy_jump = True)\n    \n```\n\nWhen your configurations are set then write the SSH Config, this is a local `bunny_config` file generated that contains\nthe bunny configuration. \n\n```\n\n    bunny.write()\n\n```\n\nwhich generates something like this:\n\n```\n    \n    Host hop1\n    \n      HostName XX.XXX.XXX.XXX\n      User poor_graduate_student\n    \n    Host notebook\n      HostName fakeemail@someuniversity.edu\n      User poor_graduate_student\n      ProxyJump XX.XX.XXX.XXX\n      RequestTTY force\n      LocalForward 8889 127.0.0.1:8889\n      RemoteCommand /path/to/env/python jupyter notebook --no-browser --NotebookApp.token=\"\" --port=8889\n\n```\n\nThe last command will be the `run()` function which will execute the `SSH` connection across your gateways. Under the hood\nit runs the ```SSH -F bunny_config name``` so as long as your have `SSH` installed we should be good and your process will run.\n\n\n```\n    \n    bunny.run()\n    \n```\n\nIf all successful we should be generating something like this:\n\n```\n\n[I 20:46:00.555 NotebookApp] JupyterLab extension loaded from anaconda3/lib/python3.7/site-packages/jupyterlab\n[I 20:46:00.555 NotebookApp] JupyterLab application directory is /jupyter/lab\n[I 20:46:00.557 NotebookApp] Serving notebooks from local directory: /rotation\n[I 20:46:00.557 NotebookApp] The Jupyter Notebook is running at:\n[I 20:46:00.557 NotebookApp] http://localhost:8889/\n[I 20:46:00.557 NotebookApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).\n[I 20:46:04.084 NotebookApp] 302 GET / (127.0.0.1) 1.00ms\n[E 20:46:04.166 NotebookApp] Could not open static file ''\n[W 20:46:04.503 NotebookApp] 404 GET /static/components/react/react-dom.production.min.js (127.0.0.1) 14.90ms referer=http://localhost:8889/tree?\n```\n\nAnnouncements\n=============\n\n-   Work has began Jan 9th\n\nInstallation \n============\n\nBunny is going to be distribute via PyPi and as the content store grows we can expand it to other pieces of software\nmaking it accessible to all regardless of what you use. Alternatively, you could have a glance at the source code and copy/paste\nit yourself.\n\nTo install the reader \n\n```\n\npython -m pip install bunny\n\n```\n\nStructure of Bunny\n==================\n\nCurrently, the main subpackages are:\n\n- **bunny**: Bunny Main Class\n\n\nGenesis\n=======\n\nBunny was created because I am forced to port forward my jupyter notebooks through a gateway server and there is no way \naround it due to bureaucracy.\n\n- Lead Developer [Suliman Sharif](http://sulstice.github.io/)\n\n\n* * * * *\n\nExternal links\n==============",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sulstice/Bunny",
    "keywords": "bunny ssh jupyter notebook",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pybunny",
    "package_url": "https://pypi.org/project/pybunny/",
    "platform": "",
    "project_url": "https://pypi.org/project/pybunny/",
    "project_urls": {
      "Homepage": "https://github.com/sulstice/Bunny"
    },
    "release_url": "https://pypi.org/project/pybunny/0.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9095536,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "977363c40bbb1c1bb88bda6cbf01628be125c30faf66eb3f82b6d63b2ccc6be6",
          "md5": "008583dee445a12783c9d1512c43e3d5",
          "sha256": "ac2a2e47fcbff30dd9bf5ff591533a1a6389f960e1cf52584ea298596072f0ac"
        },
        "downloads": -1,
        "filename": "pybunny-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "008583dee445a12783c9d1512c43e3d5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5167,
        "upload_time": "2021-01-10T02:25:40",
        "upload_time_iso_8601": "2021-01-10T02:25:40.737010Z",
        "url": "https://files.pythonhosted.org/packages/97/73/63c40bbb1c1bb88bda6cbf01628be125c30faf66eb3f82b6d63b2ccc6be6/pybunny-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "977363c40bbb1c1bb88bda6cbf01628be125c30faf66eb3f82b6d63b2ccc6be6",
        "md5": "008583dee445a12783c9d1512c43e3d5",
        "sha256": "ac2a2e47fcbff30dd9bf5ff591533a1a6389f960e1cf52584ea298596072f0ac"
      },
      "downloads": -1,
      "filename": "pybunny-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "008583dee445a12783c9d1512c43e3d5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5167,
      "upload_time": "2021-01-10T02:25:40",
      "upload_time_iso_8601": "2021-01-10T02:25:40.737010Z",
      "url": "https://files.pythonhosted.org/packages/97/73/63c40bbb1c1bb88bda6cbf01628be125c30faf66eb3f82b6d63b2ccc6be6/pybunny-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}