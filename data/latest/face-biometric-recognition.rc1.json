{
  "info": {
    "author": "Ransom Voke Anighoro",
    "author_email": "voke.anighoro@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# Facial Recognition\n\nRecognize and manipulate faces from Python. This is a fork from https://github.com/ageitgey/face_recognition.\n\nBuilt using [dlib](http://dlib.net/)'s state-of-the-art face recognition\nbuilt with deep learning. The model has an accuracy of 99.38% on the\n[Labeled Faces in the Wild](http://vis-www.cs.umass.edu/lfw/) benchmark.\n\n\n## Features\n\n#### Find faces in pictures\n\nFind all the faces that appear in a picture:\n\n![](https://cloud.githubusercontent.com/assets/896692/23625227/42c65360-025d-11e7-94ea-b12f28cb34b4.png)\n\n```python\nimport face_biometric_recognition\nimage = face_biometric_recognition.load_image_file(\"your_file.jpg\")\nface_locations = face_biometric_recognition.face_locations(image)\n```\n\n#### Find and manipulate facial features in pictures\n\nGet the locations and outlines of each person's eyes, nose, mouth and chin.\n\n![](https://cloud.githubusercontent.com/assets/896692/23625282/7f2d79dc-025d-11e7-8728-d8924596f8fa.png)\n\n```python\nimport face_biometric_recognition\nimage = face_biometric_recognition.load_image_file(\"your_file.jpg\")\nface_landmarks_list = face_biometric_recognition.face_landmarks(image)\n```\n\n#### Identify faces in pictures\n\nRecognize who appears in each photo.\n\n![](https://cloud.githubusercontent.com/assets/896692/23625229/45e049b6-025d-11e7-89cc-8a71cf89e713.png)\n\n```python\nimport face_biometric_recognition\nknown_image = face_biometric_recognition.load_image_file(\"biden.jpg\")\nunknown_image = face_biometric_recognition.load_image_file(\"unknown.jpg\")\n\nbiden_encoding = face_biometric_recognition.face_encodings(known_image)[0]\nunknown_encoding = face_biometric_recognition.face_encodings(unknown_image)[0]\n\nresults = face_biometric_recognition.compare_faces([biden_encoding], unknown_encoding)\n```\n\n## Installation\n\n### Requirements\n\n  * Python 3.3+ or Python 2.7\n  * macOS or Linux (Windows not officially supported, but might work)\n\n### Installation Options:\n\n#### Installing on Mac or Linux\n\nFirst, make sure you have dlib already installed with Python bindings:\n\n  * [How to install dlib from source on macOS or Ubuntu](https://gist.github.com/ageitgey/629d75c1baac34dfa5ca2a1928a7aeaf)\n\nThen, make sure you have cmake installed:  \n\n```brew install cmake```\n\nFinally, install this module from pypi using `pip3` (or `pip2` for Python 2):\n\n```bash\npip3 install face_biometric_recognition --no-index --find-links file:/path/to/face_biometric_recognition\n```\n\n## Usage\n\n#### Python Module\n\nYou can import the `face_biometric_recognition` module and then easily manipulate\nfaces with just a couple of lines of code. It's super easy!\n\n##### Automatically find all the faces in an image\n\n```python\nimport face_biometric_recognition\n\nimage = face_biometric_recognition.load_image_file(\"my_picture.jpg\")\nface_locations = face_biometric_recognition.face_locations(image)\n\n# face_locations is now an array listing the co-ordinates of each face!\n```\n\nYou can also opt-in to a somewhat more accurate deep-learning-based face detection model.\n\nNote: GPU acceleration (via NVidia's CUDA library) is required for good\nperformance with this model. You'll also want to enable CUDA support\nwhen compliling `dlib`.\n\n```python\nimport face_biometric_recognition\n\nimage = face_biometric_recognition.load_image_file(\"my_picture.jpg\")\nface_locations = face_biometric_recognition.face_locations(image, model=\"cnn\")\n\n# face_locations is now an array listing the co-ordinates of each face!\n```\n\n##### Automatically locate the facial features of a person in an image\n\n```python\nimport face_biometric_recognition\n\nimage = face_biometric_recognition.load_image_file(\"my_picture.jpg\")\nface_landmarks_list = face_biometric_recognition.face_landmarks(image)\n\n# face_landmarks_list is now an array with the locations of each facial feature in each face.\n# face_landmarks_list[0]['left_eye'] would be the location and outline of the first person's left eye.\n```\n\n##### Recognize faces in images and identify who they are\n\n```python\nimport face_biometric_recognition\n\npicture_of_me = face_biometric_recognition.load_image_file(\"me.jpg\")\nmy_face_encoding = face_biometric_recognition.face_encodings(picture_of_me)[0]\n\n# my_face_encoding now contains a universal 'encoding' of my facial features\n# that can be compared to any other picture of a face!\n\nunknown_picture = face_biometric_recognition.load_image_file(\"unknown.jpg\")\nunknown_face_encoding = face_biometric_recognition.face_encodings(unknown_picture)[0]\n\n# Now we can see the two face encodings\n# are of the same person with `compare_faces`!\n\nresults = face_biometric_recognition.compare_faces(\n    [my_face_encoding], unknown_face_encoding\n)\n\nif results[0] is True:\n    print(\"It's a picture of me!\")\nelse:\n    print(\"It's not a picture of me!\")\n```\n\n## Articles and Guides that cover `face_biometric_recognition`\n\n- Adam Geitgey's article on how Face Recognition works: [Modern Face Recognition with Deep Learning](https://medium.com/@ageitgey/machine-learning-is-fun-part-4-modern-face-recognition-with-deep-learning-c3cffc121d78)\n  - Covers the algorithms and how they generally work\n- [Face recognition with OpenCV, Python, and deep learning](https://www.pyimagesearch.com/2018/06/18/face-recognition-with-opencv-python-and-deep-learning/) by Adrian Rosebrock\n  - Covers how to use face recognition in practice\n- [Raspberry Pi Face Recognition](https://www.pyimagesearch.com/2018/06/25/raspberry-pi-face-recognition/) by Adrian Rosebrock\n  - Covers how to use this on a Raspberry Pi\n- [Face clustering with Python](https://www.pyimagesearch.com/2018/07/09/face-clustering-with-python/) by Adrian Rosebrock\n  - Covers how to automatically cluster photos based on who appears in each photo using unsupervised learning\n\n## How Face Recognition Works\n\nIf you want to learn how face location and recognition work instead of\ndepending on a black box library, [read Adam Geitgey's article](https://medium.com/@ageitgey/machine-learning-is-fun-part-4-modern-face-recognition-with-deep-learning-c3cffc121d78).\n\n## Caveats\n\n* The facial recognition model is trained on adults and does not work very well on children. It tends to mix\n  up children quite easy using the default comparison threshold of 0.6.\n* Accuracy may vary between ethnic groups. Please see [this wiki page](https://github.com/ageitgey/face_recognition/wiki/Face-Recognition-Accuracy-Problems#question-face-recognition-works-well-with-european-individuals-but-overall-accuracy-is-lower-with-asian-individuals) for more details.\n\n## Thanks\n\n* Many thanks to [Adam Geitgey](https://github.com/ageitgey) for putting together such an amazing project and allowing public access to it.\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/vokeanighoro/facial_recognition",
    "keywords": "face_biometric_recognition",
    "license": "MIT license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "face-biometric-recognition",
    "package_url": "https://pypi.org/project/face-biometric-recognition/",
    "platform": "",
    "project_url": "https://pypi.org/project/face-biometric-recognition/",
    "project_urls": {
      "Homepage": "https://gitlab.com/vokeanighoro/facial_recognition"
    },
    "release_url": "https://pypi.org/project/face-biometric-recognition/0.0.1/",
    "requires_dist": [
      "face-recognition-models (>=0.3.0)",
      "Click (>=6.0)",
      "dlib (<=19.21.0,>=19.7)",
      "numpy",
      "Pillow"
    ],
    "requires_python": "",
    "summary": "Recognize faces from Python",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10239586,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ccc4c814224dd4dc4f789ac5238676b08a89d916275b0a1e5dbfce204890cf4b",
          "md5": "b5a5b5863379c709f80881cf1d38a69c",
          "sha256": "c6d1dfa74705c6da9c685a70af725473eb35bf2ee5a1df1a0b2bd410ff99a208"
        },
        "downloads": -1,
        "filename": "face_biometric_recognition-0.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b5a5b5863379c709f80881cf1d38a69c",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 9875,
        "upload_time": "2021-05-03T11:40:58",
        "upload_time_iso_8601": "2021-05-03T11:40:58.596767Z",
        "url": "https://files.pythonhosted.org/packages/cc/c4/c814224dd4dc4f789ac5238676b08a89d916275b0a1e5dbfce204890cf4b/face_biometric_recognition-0.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "872d800bc67731c74474412bd01861cd4991edc32d3be298394d2dc22768ea36",
          "md5": "1f7fd11307299e984a71435b8a036b1e",
          "sha256": "548e985c08fbc0e82358375e69c669a21cfbc9cde616bce9ce8e98e7aeecc4a7"
        },
        "downloads": -1,
        "filename": "face_biometric_recognition-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1f7fd11307299e984a71435b8a036b1e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10725,
        "upload_time": "2021-05-03T11:40:59",
        "upload_time_iso_8601": "2021-05-03T11:40:59.605381Z",
        "url": "https://files.pythonhosted.org/packages/87/2d/800bc67731c74474412bd01861cd4991edc32d3be298394d2dc22768ea36/face_biometric_recognition-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ccc4c814224dd4dc4f789ac5238676b08a89d916275b0a1e5dbfce204890cf4b",
        "md5": "b5a5b5863379c709f80881cf1d38a69c",
        "sha256": "c6d1dfa74705c6da9c685a70af725473eb35bf2ee5a1df1a0b2bd410ff99a208"
      },
      "downloads": -1,
      "filename": "face_biometric_recognition-0.0.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b5a5b5863379c709f80881cf1d38a69c",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 9875,
      "upload_time": "2021-05-03T11:40:58",
      "upload_time_iso_8601": "2021-05-03T11:40:58.596767Z",
      "url": "https://files.pythonhosted.org/packages/cc/c4/c814224dd4dc4f789ac5238676b08a89d916275b0a1e5dbfce204890cf4b/face_biometric_recognition-0.0.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "872d800bc67731c74474412bd01861cd4991edc32d3be298394d2dc22768ea36",
        "md5": "1f7fd11307299e984a71435b8a036b1e",
        "sha256": "548e985c08fbc0e82358375e69c669a21cfbc9cde616bce9ce8e98e7aeecc4a7"
      },
      "downloads": -1,
      "filename": "face_biometric_recognition-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "1f7fd11307299e984a71435b8a036b1e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10725,
      "upload_time": "2021-05-03T11:40:59",
      "upload_time_iso_8601": "2021-05-03T11:40:59.605381Z",
      "url": "https://files.pythonhosted.org/packages/87/2d/800bc67731c74474412bd01861cd4991edc32d3be298394d2dc22768ea36/face_biometric_recognition-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}