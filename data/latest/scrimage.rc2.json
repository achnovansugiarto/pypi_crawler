{
  "info": {
    "author": "Martin Fitzpatrick",
    "author_email": "martin.fitzpatrick@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# SAM Coupe Image Reader/Writer\n\nThis package contains two command-line converters for SAM Coupe MODE 4 SCREEN$: one for\nconverting from SAM screens to images (any format supported by Pillow) and the other\nto convert images (any format supported by Pillow) to a SAM Coupe screen.\n\nInstall with `pip install scrimage` to access two command line utilities:\n\n* `sam2img` converts a SAM Coupe MODE 4 SCREEN$ to an image.\n* `img2sam` converts an image to a SAM Coupe MODE 4 SCREEN$\n\nSee [this writeup for more information on how the conversion works](https://www.mfitzp.com/article/sam-coupe-image/).\n\n## SAM2IMG\n\n```\nusage: sam2img [-h] [--format {png,bmp,gif}] [--outfile OUTFILE]\n               screen [screen ...]\n\nConvert SAM Coupe SCREEN$ files to image (PNG, BMP or GIF formats).\n\npositional arguments:\n  screen                source SCREEN$ file(s) to process.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --format {png,bmp,gif}, -f {png,bmp,gif}\n                        Output file format, one of (PNG, BMP, GIF).\n  --outfile OUTFILE, -o OUTFILE\n                        Output file. Will output to {filename}.ext if not\n                        provided.\n```\n\nThe format for the output is taken from the filename extension by default. This supports\nany file type recognised by Pillow. The format can be overridden (to PNG, BMP or GIF) by passing the `-f` argument.\n\nSAM Coupe SCREEN$ contain two palettes, which are alternated between to create flashing effects. Normally,\nthese palettes are identical (no flashing). If you try and export a SCREEN$ containing flashing palettes to\na static image format (PNG, BMP, etc.) you will see a warning. To capture the flash animation export to GIF.\n\n## IMG2SAM\n\n```\nusage: img2sam [-h] [--interrupts] [--dither] [--outfile OUTFILE]\n               image [image ...]\n\nConvert Image to SAM Coupe SCREEN$ format. Optional interrupt optimizations.\n\npositional arguments:\n  image                 source image file(s) to process.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --interrupts, -i      Add (automatic) interrupts to maximise image colors.\n  --dither, -d          Dither image using SAM palette before reducing colors.\n  --outfile OUTFILE, -o OUTFILE\n                        Output file. Will output to {filename}.scr if not\n                        provided.\n```\n\nConverts the input image file to a SAM Coupe MODE SCREEN$ file. The provided image\nis resized and cropped to fill the 256x192 screen with no border, you can pre-size images or\ncrop them before passing to control the resulting image better.\n\nPassing `-d` or `--dither` will apply a dither to the image, using the SAM Coupe 127 color\npalette. This is usually a good idea for photographic images, although it will reduce\nthe effectiveness of the line interrupts.\n\nPassing `-i` or `--interrupts` will add line interrupts to change palette colors at specific\ny locations in the image, resulting in > 16 color images. This is an automatic optimization,\nwhich re-generates the image with more and more colors, compressing them with interrupts and\nseeing if it fits. Works best on images with gradients or well-separated regions of colour\ndown the image.\n\n## Examples\n\nBelow are some example images generated by the converter, each has a link to the SAM SCREEN$ file.\nYou can download [a SAM Coupe disk image containing these example images](http://download.mfitzp.com/scrimage.dsk).\n\n![Leia](./examples/leia.png)\nLeia 26 colors, 15 interrupts\n\n![Pool](./examples/pool.png)\nPool 24 colors, 12 interrupts\n\n![Tully](./examples/tully.png)\nTully 22 colors, 15 interrupts\n\n![Isla](./examples/isla.png)\nIsla 18 colors, 6 interrupts\n\n![Tully (2)](./examples/tully2.png)\nTully (2) 18 colors, 5 interrupts\n\n![Dana](./examples/dana-d.png)\nDana 17 colors, 2 interrupts\n\n![Interstellar](./examples/interstellar.png)\nInterstellar 17 colors, 3 interrupts\n\n![Blade Runner](./examples/bladerunner2.png)\nBlade Runner 16 colors (11 used), 18 interrupts\n\n\nThe following two GIFs are examples of export from SAM Coupe SCREEN$ when using\nflashing alternate palettes.\n\n![Flashing palette](./examples/flash.gif)\nFlashing palette\n\n![Flashing palette](./examples/flashi.gif)\nFlashing palette and flashing Line interrupts",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mfitzp/scrimage",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "scrimage",
    "package_url": "https://pypi.org/project/scrimage/",
    "platform": "",
    "project_url": "https://pypi.org/project/scrimage/",
    "project_urls": {
      "Homepage": "https://github.com/mfitzp/scrimage"
    },
    "release_url": "https://pypi.org/project/scrimage/0.0.3/",
    "requires_dist": null,
    "requires_python": ">=3.4",
    "summary": "Convert SAM SCREEN$ to Image files, and vice versa.",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9265561,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a2cb67348e89edfde12462e018617eed1191c674154b735e265769bc26f8aefc",
          "md5": "622c17e4892720e3468d794f4ef1fea2",
          "sha256": "4d9080cbd86ef435b59051baa32ad1e41175448c50b617ab8223a59750883d0c"
        },
        "downloads": -1,
        "filename": "scrimage-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "622c17e4892720e3468d794f4ef1fea2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 3028,
        "upload_time": "2021-01-28T08:46:52",
        "upload_time_iso_8601": "2021-01-28T08:46:52.118260Z",
        "url": "https://files.pythonhosted.org/packages/a2/cb/67348e89edfde12462e018617eed1191c674154b735e265769bc26f8aefc/scrimage-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "09e06dffa30566fc65bbeb7f6c66d6b1f9a5a671f07c99ccda33f24d32d66c6e",
          "md5": "336bf316f931002f77e08604a2637c68",
          "sha256": "1a69d5955cd549e0286bff756bf7e32b569dea5b1494235a66118abbc1bc6a5c"
        },
        "downloads": -1,
        "filename": "scrimage-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "336bf316f931002f77e08604a2637c68",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 3095,
        "upload_time": "2021-01-29T14:59:10",
        "upload_time_iso_8601": "2021-01-29T14:59:10.301139Z",
        "url": "https://files.pythonhosted.org/packages/09/e0/6dffa30566fc65bbeb7f6c66d6b1f9a5a671f07c99ccda33f24d32d66c6e/scrimage-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "09e06dffa30566fc65bbeb7f6c66d6b1f9a5a671f07c99ccda33f24d32d66c6e",
        "md5": "336bf316f931002f77e08604a2637c68",
        "sha256": "1a69d5955cd549e0286bff756bf7e32b569dea5b1494235a66118abbc1bc6a5c"
      },
      "downloads": -1,
      "filename": "scrimage-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "336bf316f931002f77e08604a2637c68",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.4",
      "size": 3095,
      "upload_time": "2021-01-29T14:59:10",
      "upload_time_iso_8601": "2021-01-29T14:59:10.301139Z",
      "url": "https://files.pythonhosted.org/packages/09/e0/6dffa30566fc65bbeb7f6c66d6b1f9a5a671f07c99ccda33f24d32d66c6e/scrimage-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}