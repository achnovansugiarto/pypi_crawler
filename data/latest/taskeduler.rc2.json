{
  "info": {
    "author": "@alexgcarretero",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Taskeduler: schedule your tasks, easily\nThis module is a tool written in python built to automate tasks.\n\nWrite a python function and configure the task in a yaml file. Then it is going to be executed following the programed scheduler.\n\n## How to schedule a task\nThere are two main ways to use the Taskeduler: describing the tasks in a yaml file and running the module passing the file as an argument, or embeding the module in another python project, importing the `TaskManager` and adding the tasks manually.\n\nThere are examples of both usages in the [example file](./examples).\n\n### Via YAML file\nThere are 3 main elements that are reperented in the yaml file: the *task name*, the *task entrypoint* and the *task schedule*.\n\n```yaml\nmy_task:\n  # Here goes the entrypoint information.\n  script:\n    # The path to the file where the entrypoint function is defined.\n    file: ${SCRIPTS_DIR}/here/lies/the/entrypoint.py\n    # The proper name of the entrypoint function.\n    entrypoint: my_entrypoint_function\n    # The entrypoint args and kwargs if wanted.\n    args:\n        - first_argument\n        - ...\n    kwargs:\n        kwarg_name: kwarg_value\n        ...\n  # Here goes the schedule information.\n  repeat:\n    # How often the task will be repeated.\n    frequency: ['daily']\n    # Some additional rules about when will the task be executed.\n    execution_rules:\n      week_day: [\"mon\", \"tue\", \"wed\", \"thu\", \"fri\"]\n      time: [\"10:00\"]\n```\nYou may note that the parsing of the YAML file will resolve environment variables if enclosed into braces, preceded with the dollar sign: `${ENV_VARIABLE}`.\n\nAll the fields shown above are mandatory except of\nAll the fields shown in the previous example are mandatory except `args`, `kwargs` and the proper execution rules. To read more about the execution rules, go to the [scheduler rules section](#scheduler-rules).\n\nThe frecuency and all the execution rules are ment to be iterables in the YAML definition, there will be created a task for each defined frecuency, named as *`task_name`_`frequency`*.\n\n### Via Python code\nTo build the `Task` object, first is needed to create a `Scheduler`. Then, to execute the task is required to add the task to a `TaskManager`, and run the loop.\n\n```python\n>>> from taskeduler.scheduler import ExecutionRulesManager, Scheduler\n>>> from taskeduler.task import Task, TaskManager\n>>>\n>>> # Define the entrypoint function\n>>> def my_entrypoint_function(name: str) -> None:\n...     print(f\"Hello {name}! What's up?\")\n>>>\n>>> # Create the Scheduler and the ExecutionRulesManager\n>>> scheduler = Scheduler(\n...     frecuency=\"daily\",\n...     execution_rules_manager=ExecutionRulesManager(\n...         week_days=[\"mon\", \"tue\", \"wed\", \"thu\", \"fri\"],\n...         time=[\"10:00\"]\n...     )\n... )\n>>>\n>>> # Create the task\n>>> task = Task(\n...     scheduler=scheduler,\n...     task=greet,\n...     args=(\"Peter\",)\n... )\n>>>\n>>> # Setup the TaskManager and run the loop\n>>> task_manager = TaskManager()\n>>> task_manager.add_task(\"test_taskeduler\", task)\n>>> task_manager.loop.start()\n```\n\nYou can also load a YAML from the python code!\n\n```python\n>>> from taskeduler import schedule\n>>> my_yaml = \"/path/to/my/file.yaml\"\n>>> task_manager = schedule(yaml_file=my_yaml)\n>>> task_manager.loop.start()\n```\n\nEven with an already existing `task_manager`:\n\n```python\n>>> from taskeduler import TaskManager, schedule\n>>> task_manager = TaskManager()\n>>> my_yaml = \"/path/to/my/file.yaml\"\n>>> schedule(yaml_file=my_yaml, task_manager=task_manager)\n>>> task_manager.loop.start()\n```\n\n## Scheduler rules\nThe **frequencies** determine the period of wait between the task executions. The **execution rules** determine some aditional *\"checks\"* that must be met, represented by a list of possible values.\n\nThere are 6 scheduler *frequencies* and 4 *execution rules* available:\n- Scheduler Frecuencies:\n    - **minutely**: Repeat every minute.\n        *i.e: 10:10 => 10:11*\n    - **hourly**: Repeat every hour.\n        *i.e: 10:10 => 11:10*\n    - **daily**: Repeat every day.\n        *i.e: 11 jul => 12 jul*\n    - **weekly**: Repeat every week (based on the week day).\n        *i.e: monday 1 => monday 8*\n    - **monthly**: Repeat every month (based on the month day).\n        *i.e: January 27 => February 27; January 29 => February 29 (leap year)// March 1*\n    - **yearly**: Repeat every year (based on the month day and month).\n        *i.e: 20 aug 2019 => 20 aug 2020*\n- Execution Rules:\n    - **time**: This restriction determines the *hour* and *minute* when the task can be executed in a *HH:MM* format.\n    - **month_days**: This restriction determines the *number of day in the month* when the task can be executed.\n    - **week_days**: This restriction determines the *week day* when the task can be executed, in any of the following formats:\n        - *full name*: monday, tuesday, ...\n        - *short name*: mon, tue, ...\n        - *number*: 0, 1, ...\n    - **month**: This restriction determines the *month* when the task can be executed, in any of the following formats:\n        - *full name*: january, february, ...\n        - *short name*: jan, feb, ...\n        - *number*: 1, 2, ...\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/alexgcarretero/taskeduler",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "taskeduler",
    "package_url": "https://pypi.org/project/taskeduler/",
    "platform": "",
    "project_url": "https://pypi.org/project/taskeduler/",
    "project_urls": {
      "Homepage": "https://github.com/alexgcarretero/taskeduler"
    },
    "release_url": "https://pypi.org/project/taskeduler/1.0.1/",
    "requires_dist": [
      "PyYAML"
    ],
    "requires_python": "",
    "summary": "Schedule your tasks, easily",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12581814,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "22e5025b4527a599747fe982af2bf8c25b7d29ce61e5540d6df2e27021b44a70",
          "md5": "34863a52e3caab6d4b548c84ed878836",
          "sha256": "3c15ff52033665df44224e2254fb3d7062147454e006bb098a3b8bd5a2525bcd"
        },
        "downloads": -1,
        "filename": "taskeduler-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "34863a52e3caab6d4b548c84ed878836",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12031,
        "upload_time": "2021-10-05T17:52:06",
        "upload_time_iso_8601": "2021-10-05T17:52:06.135188Z",
        "url": "https://files.pythonhosted.org/packages/22/e5/025b4527a599747fe982af2bf8c25b7d29ce61e5540d6df2e27021b44a70/taskeduler-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9e9af67a44d3457be1fb1dae7653ecfa99187ca1f44e9996963b64682981012e",
          "md5": "7f726759803bd42facbb062622ffeea2",
          "sha256": "62e45f03ed7d73b66840ede5f986c7681ced97a2be1a1857ca1ede0f9ac9a2e3"
        },
        "downloads": -1,
        "filename": "taskeduler-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7f726759803bd42facbb062622ffeea2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10601,
        "upload_time": "2021-10-05T17:52:07",
        "upload_time_iso_8601": "2021-10-05T17:52:07.984577Z",
        "url": "https://files.pythonhosted.org/packages/9e/9a/f67a44d3457be1fb1dae7653ecfa99187ca1f44e9996963b64682981012e/taskeduler-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1adf893d99162b16e6c0e84867a297e7f1012cfd3048919e4ed99808e32b9a44",
          "md5": "edf7641bf5238776b7b5008433297a19",
          "sha256": "42069046a37c941d9dfc6e77963b52b87ee386ec71f75ad3141e3a2662c008f0"
        },
        "downloads": -1,
        "filename": "taskeduler-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "edf7641bf5238776b7b5008433297a19",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12798,
        "upload_time": "2022-01-15T11:50:19",
        "upload_time_iso_8601": "2022-01-15T11:50:19.125712Z",
        "url": "https://files.pythonhosted.org/packages/1a/df/893d99162b16e6c0e84867a297e7f1012cfd3048919e4ed99808e32b9a44/taskeduler-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f3d495e050fb3f08f4266777cb3e338bde9d066911dea9cf52da1d96d58b3ea4",
          "md5": "b86a7c7d6a5ad79bee3cf59db0fb364a",
          "sha256": "1d4ee6c21b9772070f5232e3e651d461d75bfbdff884ea9a2fe5a3b19c8977a4"
        },
        "downloads": -1,
        "filename": "taskeduler-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b86a7c7d6a5ad79bee3cf59db0fb364a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11226,
        "upload_time": "2022-01-15T11:50:20",
        "upload_time_iso_8601": "2022-01-15T11:50:20.884301Z",
        "url": "https://files.pythonhosted.org/packages/f3/d4/95e050fb3f08f4266777cb3e338bde9d066911dea9cf52da1d96d58b3ea4/taskeduler-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1adf893d99162b16e6c0e84867a297e7f1012cfd3048919e4ed99808e32b9a44",
        "md5": "edf7641bf5238776b7b5008433297a19",
        "sha256": "42069046a37c941d9dfc6e77963b52b87ee386ec71f75ad3141e3a2662c008f0"
      },
      "downloads": -1,
      "filename": "taskeduler-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "edf7641bf5238776b7b5008433297a19",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 12798,
      "upload_time": "2022-01-15T11:50:19",
      "upload_time_iso_8601": "2022-01-15T11:50:19.125712Z",
      "url": "https://files.pythonhosted.org/packages/1a/df/893d99162b16e6c0e84867a297e7f1012cfd3048919e4ed99808e32b9a44/taskeduler-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f3d495e050fb3f08f4266777cb3e338bde9d066911dea9cf52da1d96d58b3ea4",
        "md5": "b86a7c7d6a5ad79bee3cf59db0fb364a",
        "sha256": "1d4ee6c21b9772070f5232e3e651d461d75bfbdff884ea9a2fe5a3b19c8977a4"
      },
      "downloads": -1,
      "filename": "taskeduler-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "b86a7c7d6a5ad79bee3cf59db0fb364a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11226,
      "upload_time": "2022-01-15T11:50:20",
      "upload_time_iso_8601": "2022-01-15T11:50:20.884301Z",
      "url": "https://files.pythonhosted.org/packages/f3/d4/95e050fb3f08f4266777cb3e338bde9d066911dea9cf52da1d96d58b3ea4/taskeduler-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}