{
  "info": {
    "author": "Taskiq team",
    "author_email": "taskiq@no-reply.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: Other/Proprietary License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: System :: Networking",
      "Typing :: Typed"
    ],
    "description": "# Taskiq + FastAPI\n\nThis repository has a code to integrate FastAPI with taskiq easily.\n\nTaskiq and FastAPI both have dependencies and this library makes it possible to depend on\n`fastapi.Request` or `starlette.requests.HTTPConnection` in taskiq tasks.\n\nWith this library you can easily re-use your fastapi dependencies in taskiq functions.\n\n## How does it work?\n\nIt adds startup functions to broker so it imports your fastapi application\nand creates a single worker-wide Request and HTTPConnection objects that you depend on.\n\nTHIS REQUEST IS NOT RELATED TO THE ACTUAL REQUESTS IN FASTAPI!\nThis request won't have actual data about the request you were handling while sending task.\n\n## Usage\n\nHere we have an example of function that is being used by both taskiq's task and\nfastapi's handler function.\n\nI have a script called `test_script.py` so my app can be found at `test_script:app`.\nWe use strings to resolve application to bypass circular imports.\n\nAlso, as you can see, we use `TaskiqDepends` for Request. That's because\ntaskiq dependency resolver must know that this type must be injected. FastAPI disallow\nDepends for Request type. That's why we use `TaskiqDepends`.\n\n```python\nfrom fastapi import FastAPI, Request\nfrom pydantic import BaseModel\nfrom redis.asyncio import ConnectionPool, Redis\nfrom fastapi import Depends as FastAPIDepends\nfrom taskiq import TaskiqDepends\nimport taskiq_fastapi\nfrom taskiq import ZeroMQBroker\n\nbroker = ZeroMQBroker()\n\napp = FastAPI()\n\n\n@app.on_event(\"startup\")\nasync def app_startup():\n    #####################\n    # IMPORTANT NOTE    #\n    #####################\n    # If you won't check that this is not\n    # a worker process, you'll\n    # create an infinite recursion. Because in worker processes\n    # fastapi startup will be called.\n    if not broker.is_worker_process:\n        print(\"Starting broker\")\n        await broker.startup()\n    print(\"Creating redis pool\")\n    app.state.redis_pool = ConnectionPool.from_url(\"redis://localhost\")\n\n\n@app.on_event(\"shutdown\")\nasync def app_shutdown():\n    #####################\n    # IMPORTANT NOTE    #\n    #####################\n    # If you won't check that this is not\n    # a worker process, you'll\n    # create an infinite recursion. Because in worker processes\n    # fastapi startup will be called.\n    if not broker.is_worker_process:\n        print(\"Shutting down broker\")\n        await broker.shutdown()\n    print(\"Stopping redis pool\")\n    await app.state.redis_pool.disconnect()\n\n\n# Here we call our magic function.\ntaskiq_fastapi.init(broker, \"test_script:app\")\n\n\n# We use TaskiqDepends here, becuase if we use FastAPIDepends fastapi\n# initilization will fail.\ndef get_redis_pool(request: Request = TaskiqDepends()) -> ConnectionPool:\n    return request.app.state.redis_pool\n\n\n@broker.task\nasync def my_redis_task(\n    key: str,\n    val: str,\n    # Here we depend using TaskiqDepends.\n    # Please use TaskiqDepends for all tasks to be resolved correctly.\n    # Or dependencies won't be injected.\n    pool: ConnectionPool = TaskiqDepends(get_redis_pool),\n):\n    async with Redis(connection_pool=pool) as redis:\n        await redis.set(key, val)\n        print(\"Value set.\")\n\n\nclass MyVal(BaseModel):\n    key: str\n    val: str\n\n\n@app.post(\"/val\")\nasync def setval_endpoint(val: MyVal) -> None:\n    await my_redis_task.kiq(\n        key=val.key,\n        val=val.val,\n    )\n    print(\"Task sent\")\n\n\n@app.get(\"/val\")\nasync def getval_endpoint(\n    key: str,\n    pool: ConnectionPool = FastAPIDepends(get_redis_pool),\n) -> str:\n    async with Redis(connection_pool=pool, decode_responses=True) as redis:\n        return await redis.get(key)\n\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "taskiq,tasks,distributed,async,fastapi",
    "license": "LICENSE",
    "maintainer": "Taskiq team",
    "maintainer_email": "taskiq@no-reply.com",
    "name": "taskiq-fastapi",
    "package_url": "https://pypi.org/project/taskiq-fastapi/",
    "platform": null,
    "project_url": "https://pypi.org/project/taskiq-fastapi/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/taskiq-fastapi/0.1.1/",
    "requires_dist": [
      "taskiq (>=0.3.1,<1)",
      "fastapi"
    ],
    "requires_python": ">=3.7,<4.0",
    "summary": "FastAPI integration for taskiq",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17446366,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e58b37b7e2b4c9c033647af11cad8c02ce84c0629e074151c707b6db0e92770e",
          "md5": "08453c0f19e80fa635eae3c11ed2dcb3",
          "sha256": "95e7744b41ba162742739a56940acdd2449f2a3a170dc3c83fec25eb833a2576"
        },
        "downloads": -1,
        "filename": "taskiq_fastapi-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "08453c0f19e80fa635eae3c11ed2dcb3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 4313,
        "upload_time": "2023-03-26T01:29:03",
        "upload_time_iso_8601": "2023-03-26T01:29:03.373223Z",
        "url": "https://files.pythonhosted.org/packages/e5/8b/37b7e2b4c9c033647af11cad8c02ce84c0629e074151c707b6db0e92770e/taskiq_fastapi-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "445872fbf984c620faf6be0cb86e6f81a7765632291eaa80af61f5a205f9a5e8",
          "md5": "8610c18ab0cc5965c20b82601a0efbab",
          "sha256": "212b34426fa44d72d9c137b6c171ddedfe5fb1a6f6802c8b8cf345a3b3fa9f3e"
        },
        "downloads": -1,
        "filename": "taskiq_fastapi-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8610c18ab0cc5965c20b82601a0efbab",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 3851,
        "upload_time": "2023-03-26T01:29:04",
        "upload_time_iso_8601": "2023-03-26T01:29:04.670374Z",
        "url": "https://files.pythonhosted.org/packages/44/58/72fbf984c620faf6be0cb86e6f81a7765632291eaa80af61f5a205f9a5e8/taskiq_fastapi-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "584a2a127fa1121a0c73fc019b931a6317a525fb7729b593b10ff4b3041bf3b8",
          "md5": "1fc0fdf54c62d6a2af974eafd417069e",
          "sha256": "b5f5c743cea06f33b530e3dbc53830417b70cf03044ab1e061a65ffac540cd29"
        },
        "downloads": -1,
        "filename": "taskiq_fastapi-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1fc0fdf54c62d6a2af974eafd417069e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 4492,
        "upload_time": "2023-03-26T01:41:28",
        "upload_time_iso_8601": "2023-03-26T01:41:28.128762Z",
        "url": "https://files.pythonhosted.org/packages/58/4a/2a127fa1121a0c73fc019b931a6317a525fb7729b593b10ff4b3041bf3b8/taskiq_fastapi-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3a925540c53734def5c7271c4004ed026e6eee2714dd53df11f685b0c068abdb",
          "md5": "af4dd20c1ad9cae963065a493d47ec43",
          "sha256": "ed5af521f18983887763de0342ea09ee3170e96720234b59fdcf824aa4e316f0"
        },
        "downloads": -1,
        "filename": "taskiq_fastapi-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "af4dd20c1ad9cae963065a493d47ec43",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 4031,
        "upload_time": "2023-03-26T01:41:29",
        "upload_time_iso_8601": "2023-03-26T01:41:29.797617Z",
        "url": "https://files.pythonhosted.org/packages/3a/92/5540c53734def5c7271c4004ed026e6eee2714dd53df11f685b0c068abdb/taskiq_fastapi-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "584a2a127fa1121a0c73fc019b931a6317a525fb7729b593b10ff4b3041bf3b8",
        "md5": "1fc0fdf54c62d6a2af974eafd417069e",
        "sha256": "b5f5c743cea06f33b530e3dbc53830417b70cf03044ab1e061a65ffac540cd29"
      },
      "downloads": -1,
      "filename": "taskiq_fastapi-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1fc0fdf54c62d6a2af974eafd417069e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<4.0",
      "size": 4492,
      "upload_time": "2023-03-26T01:41:28",
      "upload_time_iso_8601": "2023-03-26T01:41:28.128762Z",
      "url": "https://files.pythonhosted.org/packages/58/4a/2a127fa1121a0c73fc019b931a6317a525fb7729b593b10ff4b3041bf3b8/taskiq_fastapi-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3a925540c53734def5c7271c4004ed026e6eee2714dd53df11f685b0c068abdb",
        "md5": "af4dd20c1ad9cae963065a493d47ec43",
        "sha256": "ed5af521f18983887763de0342ea09ee3170e96720234b59fdcf824aa4e316f0"
      },
      "downloads": -1,
      "filename": "taskiq_fastapi-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "af4dd20c1ad9cae963065a493d47ec43",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7,<4.0",
      "size": 4031,
      "upload_time": "2023-03-26T01:41:29",
      "upload_time_iso_8601": "2023-03-26T01:41:29.797617Z",
      "url": "https://files.pythonhosted.org/packages/3a/92/5540c53734def5c7271c4004ed026e6eee2714dd53df11f685b0c068abdb/taskiq_fastapi-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}