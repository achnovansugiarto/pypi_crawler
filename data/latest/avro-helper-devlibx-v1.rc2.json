{
  "info": {
    "author": "devlibx",
    "author_email": "devlibxgithub@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "### How to use\n\nInstall ```pip install avro-helper-devlibx```\n\n# Quick example - V1\n\n### Debug what data I have\n\n```python\nfrom devlibx_avro_helper.month_data_v1 import MonthDataAvroHelperV1\n\ninput = '''{\"updated_at\":1663665518937,\"days\":{\"9-17\":1,\"9-4\":1,\"9-18\":1,\"9-5\":1,\"9-15\":1,\"9-6\":1,\"9-16\":1}}'''\nhelper = MonthDataAvroHelperV1(input)\nhelper.dump_to_debug()\n\n# Print the data\n# -------------------------------------- Start: Data --------------------------------------------------\n# Day Aggregations\n# {'9-17': 1, '9-4': 1, '9-18': 1, '9-5': 1, '9-15': 1, '9-6': 1, '9-16': 1}\n# -------------------------------------- End: Data ----------------------------------------------------\n```\n\n### Get data for this month (from today to start of this month)\n\n```python\nfrom devlibx_avro_helper.month_data_v1 import MonthDataAvroHelperV1\n\n\ndef test__get_current_month_numeric_aggregation_from_now_for_readme(self):\n    # This is the data you will get from DB or some other place\n    inputDataFromDB = '''\n                  {\"updated_at\":1663665518937,\"days\":{\"9-1\":3,\"9-2\":1,\"9-3\":2, \"9-4\":1, \"9-5\":1}}\n                  '''\n    helper = MonthDataAvroHelperV1(inputDataFromDB)\n\n    # Check with aggregate=True\n    result = helper.get_current_month_numeric_aggregation_from_now()\n    print(result)\n    # >> 8\n\n    self.assertEqual(8, result)\n```\n\n### Get data for last N days (from today to last n days - including today)\n\n```python\nfrom devlibx_avro_helper.month_data_v1 import MonthDataAvroHelperV1\nfrom datetime import datetime\n\n\ndef test__get_last_n_days_numeric_aggregation_from_given_time(self):\n    # This is the data you will get from DB or some other place\n    inputDataFromDB = '''\n                      {\"updated_at\":1663665518937,\"days\":{\"9-1\":3,\"9-2\":2,\"9-3\":7, \"9-4\":3, \"9-5\":11}}\n                      '''\n    helper = MonthDataAvroHelperV1(inputDataFromDB)\n\n    # Check with aggregate=True\n    result = helper.get_last_n_days_numeric_aggregation_from_given_time(datetime.now(), 4)\n    print(result)\n    # >> 23\n    self.assertEqual(23, result)\n```\n\n---\n\n#### Quick example\n\n```python\nfrom devlibx_avro_helper.month_data import MonthDataAvroHelper\n\nbase64Str = \"BgY3LTMCBjYtNgIGNy01BAAAAAI=\"\nhelper = MonthDataAvroHelper()\nresult = helper.process(base64Str)\nprint(result)\n\n# Result\n# {'days': {'8-16': 110, '8-17': 111, '8-14': 108, '8-15': 109, '8-18': 112, '8-19': 113, '8-30': 124, '8-31': 125, '8-12': 106, '8-13': 107, '8-10': 104, '8-11': 105, '9-1': 126, '9-2': 127, '9-3': 128, '8-27': 121, '9-4': 129, '8-6': 100, '8-28': 122, '8-7': 101, '8-25': 119, '8-8': 102, '8-26': 120, '8-9': 103, '8-29': 123, '8-20': 114, '8-23': 117, '8-24': 118, '8-21': 115, '8-22': 116}, 'entity_id': 'harish_1'}\n```\n\n### Get data for this month\n\nIn this example we would have data in base 64 encoding. We will get aggregated data for this month\n\n```python\nfrom devlibx_avro_helper.month_data import MonthDataAvroHelper\nfrom datetime import datetime\n\n\ndef test_process_and_return_aggregation_for_month(self):\n    base64Str = \"AgoGNy0xAgY3LTICBjctMwIGNy00AgY3LTUKAAAAAAI=\"\n    helper = MonthDataAvroHelper()\n    result = helper.process(base64Str)\n    print(result)\n    # Output = {'days': {'7-1': 1, '7-2': 1, '7-3': 1, '7-4': 1, '7-5': 5}, 'days_str': None, 'entity_id': None, 'sub_entity_id': None, 'version': 1}\n\n    date_time_str = '05/07/22 01:55:19'\n    date_time_obj = datetime.strptime(date_time_str, '%d/%m/%y %H:%M:%S')\n\n    # if you are looking for data for this month then use can use\n    # helper.process_and_return_aggregation_for_this_month(base64Str)\n    result = helper.process_and_return_aggregation_for_month(date_time_obj, base64Str)\n    self.assertEqual(9, result, \"result should be 9\")\n    # Output = 9\n```\n\n### Get data for this week (last 7 days)\n\n```python\nfrom devlibx_avro_helper.month_data import MonthDataAvroHelper\nfrom datetime import datetime\n\n\ndef test_process_and_return_aggregation_for_week(self):\n    # Test 1 - data from generateDataFor_test_parsing_Test_2\n    base64Str = \"Ag4INi0yOQIGNy0xAgY3LTICCDYtMzACBjctMwIGNy00AgY3LTUKAAAAAAI==\"\n    helper = MonthDataAvroHelper()\n    result = helper.process(base64Str)\n    print(result)\n    # Output = {'days': {'6-29': 1, '7-1': 1, '7-2': 1, '6-30': 1, '7-3': 1, '7-4': 1, '7-5': 5}, 'days_str': None, 'entity_id': None, 'sub_entity_id': None, 'version': 1}\n\n    date_time_str = '05/07/22 01:55:19'\n    date_time_obj = datetime.strptime(date_time_str, '%d/%m/%y %H:%M:%S')\n\n    # if you are looking for data for this month then use can use\n    # helper.process_and_return_aggregation_for_this_week(base64Str)\n    result = helper.process_and_return_aggregation_for_week(date_time_obj, base64Str)\n    self.assertEqual(11, result, \"result should be 9\")\n    # Output = 11\n```\n\n### Get data for day\n\n```python\nfrom devlibx_avro_helper.month_data import MonthDataAvroHelper\nfrom datetime import datetime\n\n\ndef test_process_and_return_for_day(self):\n    # Test 1 - data from generateDataFor_test_parsing_Test_2\n    base64Str = \"Ag4INi0yOQIGNy0xAgY3LTICCDYtMzACBjctMwIGNy00AgY3LTUKAAAAAAI==\"\n    helper = MonthDataAvroHelper()\n    result = helper.process(base64Str)\n    print(result)\n    # Output = {'days': {'6-29': 1, '7-1': 1, '7-2': 1, '6-30': 1, '7-3': 1, '7-4': 1, '7-5': 5}, 'days_str': None, 'entity_id': None, 'sub_entity_id': None, 'version': 1}\n\n    date_time_str = '05/07/22 01:55:19'\n    date_time_obj = datetime.strptime(date_time_str, '%d/%m/%y %H:%M:%S')\n\n    # if you are looking for data for this month then use can use\n    # helper.process_and_return_aggregation_for_this_month(base64Str)\n    result = helper.process_and_return_for_today(date_time_obj, base64Str)\n    self.assertEqual(5, result, \"result should be 9\")\n    # Output = 5\n```\n\n### Get string data for this month\n\n```python\nfrom devlibx_avro_helper.month_data import MonthDataAvroHelper\nfrom datetime import datetime\n\n\ndef test_process_and_return_string_data_for_month(self):\n    # Test 1 - data from generateDataFor_test_parsing_Test_2\n    base64Str = \"AAIOCDYtMjkCAgKamZmZmZnxPwAAAg5tLTE7bS0zAAAAAAAGNy0xAgYCMzMzMzMzC0AAAAIWbS0zO20tNDttLTYAAAAAAAY3LTICCALNzMzMzMwQQAAAAhZtLTQ7bS03O20tOAAAAAAACDYtMzACBAJmZmZmZmYCQAAAAhhtLTI7bS0xO20tMTEAAAAAAAY3LTMCCgJmZmZmZmYWQAAAAhZtLTM7bS02O20tOAAAAAAABjctNAIMAjMzMzMzMx9AAAACGG0tMjttLTc7bS0xMAAAAAAABjctNQIOAs3MzMzMzCFAAAACIG0tMjttLTU7bS03O20tMTAAAAAAAAAC\"\n    helper = MonthDataAvroHelper()\n    result = helper.process(base64Str)\n    print(result)\n    # Output = {'ParentContainer': [], 'data': {'6-29': {'counter': 1, 'aggregate': 1.1, 'counter_secondary': None, 'aggregate_secondary': None, 'str': 'm-1;m-3', 'udf1': None, 'udf2': None, 'udf3': None, 'udf4': None, 'udf5': None}, '7-1': {'counter': 3, 'aggregate': 3.4, 'counter_secondary': None, 'aggregate_secondary': None, 'str': 'm-3;m-4;m-6', 'udf1': None, 'udf2': None, 'udf3': None, 'udf4': None, 'udf5': None}, '7-2': {'counter': 4, 'aggregate': 4.2, 'counter_secondary': None, 'aggregate_secondary': None, 'str': 'm-1;m-4;m-7;m-8', 'udf1': None, 'udf2': None, 'udf3': None, 'udf4': None, 'udf5': None}, '6-30': {'counter': 2, 'aggregate': 2.3, 'counter_secondary': None, 'aggregate_secondary': None, 'str': 'm-2;m-1', 'udf1': None, 'udf2': None, 'udf3': None, 'udf4': None, 'udf5': None}, '7-3': {'counter': 5, 'aggregate': 5.6, 'counter_secondary': None, 'aggregate_secondary': None, 'str': 'm-3;m-6;m-8', 'udf1': None, 'udf2': None, 'udf3': None, 'udf4': None, 'udf5': None}, '7-4': {'counter': 6, 'aggregate': 7.8, 'counter_secondary': None, 'aggregate_secondary': None, 'str': 'm-2;m-7;m-10', 'udf1': None, 'udf2': None, 'udf3': None, 'udf4': None, 'udf5': None}, '7-5': {'counter': 7, 'aggregate': 8.9, 'counter_secondary': None, 'aggregate_secondary': None, 'str': 'm-1;m-2;m-5;m-7;m-10', 'udf1': None, 'udf2': None, 'udf3': None, 'udf4': None, 'udf5': None}}, 'version': 1}\n\n    date_time_str = '05/07/22 01:55:19'\n    date_time_obj = datetime.strptime(date_time_str, '%d/%m/%y %H:%M:%S')\n\n    # if you are looking for data for this month then use can use\n    # helper.process_and_return_aggregation_for_this_month(base64Str)\n    result = helper.process_and_return_string_data_for_month(date_time_obj, base64Str)\n    self.assertEqual(8, result, \"result should be 8\")\n    # Output = 8\n\n    date_time_str = '30/06/22 01:55:19'\n    date_time_obj = datetime.strptime(date_time_str, '%d/%m/%y %H:%M:%S')\n\n    result = helper.process_and_return_string_data_for_month(date_time_obj, base64Str)\n    self.assertEqual(4, result, \"result should be 4\")\n    # Output = 8\n```\n\n### Get string data for this week\n\n```python\nfrom devlibx_avro_helper.month_data import MonthDataAvroHelper\nfrom datetime import datetime\n\n\ndef test_process_and_return_string_data_for_week(self):\n    # Test 1 - data from generateDataFor_test_parsing_Test_2\n    base64Str = \"AAIOCDYtMjkCAgKamZmZmZnxPwAAAg5tLTE7bS0zAAAAAAAGNy0xAgYCMzMzMzMzC0AAAAIWbS0zO20tNDttLTYAAAAAAAY3LTICCALNzMzMzMwQQAAAAhZtLTQ7bS03O20tOAAAAAAACDYtMzACBAJmZmZmZmYCQAAAAhhtLTI7bS0xO20tMTEAAAAAAAY3LTMCCgJmZmZmZmYWQAAAAhZtLTM7bS02O20tOAAAAAAABjctNAIMAjMzMzMzMx9AAAACGG0tMjttLTc7bS0xMAAAAAAABjctNQIOAs3MzMzMzCFAAAACIG0tMjttLTU7bS03O20tMTAAAAAAAAAC\"\n    helper = MonthDataAvroHelper()\n    result = helper.process(base64Str)\n    print(result)\n    # Output = {'ParentContainer': [], 'data': {'6-29': {'counter': 1, 'aggregate': 1.1, 'counter_secondary': None, 'aggregate_secondary': None, 'str': 'm-1;m-3', 'udf1': None, 'udf2': None, 'udf3': None, 'udf4': None, 'udf5': None}, '7-1': {'counter': 3, 'aggregate': 3.4, 'counter_secondary': None, 'aggregate_secondary': None, 'str': 'm-3;m-4;m-6', 'udf1': None, 'udf2': None, 'udf3': None, 'udf4': None, 'udf5': None}, '7-2': {'counter': 4, 'aggregate': 4.2, 'counter_secondary': None, 'aggregate_secondary': None, 'str': 'm-1;m-4;m-7;m-8', 'udf1': None, 'udf2': None, 'udf3': None, 'udf4': None, 'udf5': None}, '6-30': {'counter': 2, 'aggregate': 2.3, 'counter_secondary': None, 'aggregate_secondary': None, 'str': 'm-2;m-1', 'udf1': None, 'udf2': None, 'udf3': None, 'udf4': None, 'udf5': None}, '7-3': {'counter': 5, 'aggregate': 5.6, 'counter_secondary': None, 'aggregate_secondary': None, 'str': 'm-3;m-6;m-8', 'udf1': None, 'udf2': None, 'udf3': None, 'udf4': None, 'udf5': None}, '7-4': {'counter': 6, 'aggregate': 7.8, 'counter_secondary': None, 'aggregate_secondary': None, 'str': 'm-2;m-7;m-10', 'udf1': None, 'udf2': None, 'udf3': None, 'udf4': None, 'udf5': None}, '7-5': {'counter': 7, 'aggregate': 8.9, 'counter_secondary': None, 'aggregate_secondary': None, 'str': 'm-1;m-2;m-5;m-7;m-10', 'udf1': None, 'udf2': None, 'udf3': None, 'udf4': None, 'udf5': None}}, 'version': 1}\n\n    date_time_str = '05/07/22 01:55:19'\n    date_time_obj = datetime.strptime(date_time_str, '%d/%m/%y %H:%M:%S')\n\n    # if you are looking for data for this month then use can use\n    # helper.process_and_return_aggregation_for_this_month(base64Str)\n    result = helper.process_and_return_string_data_for_week(date_time_obj, base64Str)\n    print(result)\n    self.assertEqual(10, result, \"result should be 10\")\n    # Output = 10\n```\n\n### Get string data for the day\n\n```python\nfrom devlibx_avro_helper.month_data import MonthDataAvroHelper\nfrom datetime import datetime\n\n\ndef test_process_and_return_string_data_for_day(self):\n    # Test 1 - data from generateDataFor_test_parsing_Test_2\n    base64Str = \"AAIOCDYtMjkCAgKamZmZmZnxPwAAAg5tLTE7bS0zAAAAAAAGNy0xAgYCMzMzMzMzC0AAAAIWbS0zO20tNDttLTYAAAAAAAY3LTICCALNzMzMzMwQQAAAAhZtLTQ7bS03O20tOAAAAAAACDYtMzACBAJmZmZmZmYCQAAAAhhtLTI7bS0xO20tMTEAAAAAAAY3LTMCCgJmZmZmZmYWQAAAAhZtLTM7bS02O20tOAAAAAAABjctNAIMAjMzMzMzMx9AAAACGG0tMjttLTc7bS0xMAAAAAAABjctNQIOAs3MzMzMzCFAAAACIG0tMjttLTU7bS03O20tMTAAAAAAAAAC\"\n    helper = MonthDataAvroHelper()\n    result = helper.process(base64Str)\n    print(result)\n    # Output = {'ParentContainer': [], 'data': {'6-29': {'counter': 1, 'aggregate': 1.1, 'counter_secondary': None, 'aggregate_secondary': None, 'str': 'm-1;m-3', 'udf1': None, 'udf2': None, 'udf3': None, 'udf4': None, 'udf5': None}, '7-1': {'counter': 3, 'aggregate': 3.4, 'counter_secondary': None, 'aggregate_secondary': None, 'str': 'm-3;m-4;m-6', 'udf1': None, 'udf2': None, 'udf3': None, 'udf4': None, 'udf5': None}, '7-2': {'counter': 4, 'aggregate': 4.2, 'counter_secondary': None, 'aggregate_secondary': None, 'str': 'm-1;m-4;m-7;m-8', 'udf1': None, 'udf2': None, 'udf3': None, 'udf4': None, 'udf5': None}, '6-30': {'counter': 2, 'aggregate': 2.3, 'counter_secondary': None, 'aggregate_secondary': None, 'str': 'm-2;m-1', 'udf1': None, 'udf2': None, 'udf3': None, 'udf4': None, 'udf5': None}, '7-3': {'counter': 5, 'aggregate': 5.6, 'counter_secondary': None, 'aggregate_secondary': None, 'str': 'm-3;m-6;m-8', 'udf1': None, 'udf2': None, 'udf3': None, 'udf4': None, 'udf5': None}, '7-4': {'counter': 6, 'aggregate': 7.8, 'counter_secondary': None, 'aggregate_secondary': None, 'str': 'm-2;m-7;m-10', 'udf1': None, 'udf2': None, 'udf3': None, 'udf4': None, 'udf5': None}, '7-5': {'counter': 7, 'aggregate': 8.9, 'counter_secondary': None, 'aggregate_secondary': None, 'str': 'm-1;m-2;m-5;m-7;m-10', 'udf1': None, 'udf2': None, 'udf3': None, 'udf4': None, 'udf5': None}}, 'version': 1}\n\n    date_time_str = '05/07/22 01:55:19'\n    date_time_obj = datetime.strptime(date_time_str, '%d/%m/%y %H:%M:%S')\n\n    # if you are looking for data for this month then use can use\n    # helper.process_and_return_aggregation_for_this_month(base64Str)\n    result = helper.process_and_return_string_data_for_day(date_time_obj, base64Str)\n    self.assertEqual(4, result, \"result should be 4\")\n    # Output = 4\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/devlibx/avro-helper-py",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "avro-helper-devlibx-v1",
    "package_url": "https://pypi.org/project/avro-helper-devlibx-v1/",
    "platform": null,
    "project_url": "https://pypi.org/project/avro-helper-devlibx-v1/",
    "project_urls": {
      "Homepage": "https://github.com/devlibx/avro-helper-py"
    },
    "release_url": "https://pypi.org/project/avro-helper-devlibx-v1/0.2.1/",
    "requires_dist": [
      "avro"
    ],
    "requires_python": "",
    "summary": "Python DSL for setting up Flask app CDC",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17522577,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1af7faafae2b74850f5de58d7e8b21bb611b1bbbf75879416d373900d3ecf4db",
          "md5": "215db5e4c5e5e27d8f67ad8823971730",
          "sha256": "3f395ae4d1d60ca80de9e54c039f4b53f4c60f2c544f35fd2a245fa2b3ab06e1"
        },
        "downloads": -1,
        "filename": "avro_helper_devlibx_v1-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "215db5e4c5e5e27d8f67ad8823971730",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10099,
        "upload_time": "2023-03-31T06:46:44",
        "upload_time_iso_8601": "2023-03-31T06:46:44.279327Z",
        "url": "https://files.pythonhosted.org/packages/1a/f7/faafae2b74850f5de58d7e8b21bb611b1bbbf75879416d373900d3ecf4db/avro_helper_devlibx_v1-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "79be278316f3ec97d998afe61a05074ac256800437523dd5fe4343e84282dfe9",
          "md5": "9ec5a9b94795af1de44a7f1431ecb81e",
          "sha256": "8246c85707cbf6b7670aa7255011aba673556fbf48d3f578c924757db0577ab1"
        },
        "downloads": -1,
        "filename": "avro-helper-devlibx-v1-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9ec5a9b94795af1de44a7f1431ecb81e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9182,
        "upload_time": "2023-03-31T06:46:46",
        "upload_time_iso_8601": "2023-03-31T06:46:46.253920Z",
        "url": "https://files.pythonhosted.org/packages/79/be/278316f3ec97d998afe61a05074ac256800437523dd5fe4343e84282dfe9/avro-helper-devlibx-v1-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fb16dbff46e5d2732a5990062c8c9a4a91ccbf156ae2607d59045c427b9bc085",
          "md5": "d332249a7d79b1240ce49a0e66841817",
          "sha256": "3a7e3e5679e6445c82a5b5bbc9ee3b75aa7ae83832a327d7f48d5a0c9ae6bc96"
        },
        "downloads": -1,
        "filename": "avro_helper_devlibx_v1-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d332249a7d79b1240ce49a0e66841817",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10096,
        "upload_time": "2023-03-31T06:53:41",
        "upload_time_iso_8601": "2023-03-31T06:53:41.569552Z",
        "url": "https://files.pythonhosted.org/packages/fb/16/dbff46e5d2732a5990062c8c9a4a91ccbf156ae2607d59045c427b9bc085/avro_helper_devlibx_v1-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9b225ccae786f05b195391286d0c8c7827cf56327c03eb515a7687657cd1608e",
          "md5": "6f4804068f2b281a1cdec4bbea8faf1e",
          "sha256": "b2b272b0a5f5323694347e80184c0a040c894c3ee5fa398525fd85896adb4916"
        },
        "downloads": -1,
        "filename": "avro-helper-devlibx-v1-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6f4804068f2b281a1cdec4bbea8faf1e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9184,
        "upload_time": "2023-03-31T06:53:43",
        "upload_time_iso_8601": "2023-03-31T06:53:43.613843Z",
        "url": "https://files.pythonhosted.org/packages/9b/22/5ccae786f05b195391286d0c8c7827cf56327c03eb515a7687657cd1608e/avro-helper-devlibx-v1-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fb16dbff46e5d2732a5990062c8c9a4a91ccbf156ae2607d59045c427b9bc085",
        "md5": "d332249a7d79b1240ce49a0e66841817",
        "sha256": "3a7e3e5679e6445c82a5b5bbc9ee3b75aa7ae83832a327d7f48d5a0c9ae6bc96"
      },
      "downloads": -1,
      "filename": "avro_helper_devlibx_v1-0.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d332249a7d79b1240ce49a0e66841817",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 10096,
      "upload_time": "2023-03-31T06:53:41",
      "upload_time_iso_8601": "2023-03-31T06:53:41.569552Z",
      "url": "https://files.pythonhosted.org/packages/fb/16/dbff46e5d2732a5990062c8c9a4a91ccbf156ae2607d59045c427b9bc085/avro_helper_devlibx_v1-0.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9b225ccae786f05b195391286d0c8c7827cf56327c03eb515a7687657cd1608e",
        "md5": "6f4804068f2b281a1cdec4bbea8faf1e",
        "sha256": "b2b272b0a5f5323694347e80184c0a040c894c3ee5fa398525fd85896adb4916"
      },
      "downloads": -1,
      "filename": "avro-helper-devlibx-v1-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "6f4804068f2b281a1cdec4bbea8faf1e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9184,
      "upload_time": "2023-03-31T06:53:43",
      "upload_time_iso_8601": "2023-03-31T06:53:43.613843Z",
      "url": "https://files.pythonhosted.org/packages/9b/22/5ccae786f05b195391286d0c8c7827cf56327c03eb515a7687657cd1608e/avro-helper-devlibx-v1-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}