{
  "info": {
    "author": "kkkumar2",
    "author_email": "kmohankumar123456@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# ANN - Implementation using tensorflow\n\nINTRODUCTION\nIn this article, I will explain to you the basics of neural networks and their code. Nowadays many students just learn how to code for neural networks without understanding the core concepts behind it and how it internally works. First,  Understand what is Neural Networks?\n\nWhat is Neural Network?\nNeural Network is a series of algorithms that are trying to mimic the human brain and find the relationship between the sets of data. It is being used in various use-cases like in regression, classification, Image Recognition and many more.\n\nAs we have talked above that neural networks tries to mimic the human brain then there might be the difference as well as the similarity between them. Let us talk in brief about it.\n\nSome major differences between them are biological neural network does parallel processing whereas the Artificial neural network does series processing also in the former one processing is slower (in millisecond) while in the latter one processing is faster (in a nanosecond).\n\nArchitecture Of ANN\nA neural network has many layers and each layer performs a specific function, and as the complexity of the model increases, the number of layers also increases that why it is known as the multi-layer perceptron.\n\nThe purest form of a neural network has three layers input layer, the hidden layer, and the output layer. The input layer picks up the input signals and transfers them to the next layer and finally, the output layer gives the final prediction and these neural networks have to be trained with some training data as well like machine learning algorithms before providing a particular problem. Now, let’s understand more about perceptron.\n\nAbout Perceptron\nAs discussed above multi-layered perceptron these are basically the hidden or the dense layers. They are made up of many neurons and neurons are the primary unit that works together to form perceptron. In simple words, as you can see in the above picture each circle represents neurons and a vertical combination of neurons represents perceptrons which is basically a dense layer.\n\nAbout Perceptron ANN\n\nNow in the above picture, you can see each neuron’s detailed view. Here, each neurons have some weights (in above picture w1, w2, w3) and biases and based on this computations are done as, combination = bias + weights * input (F = w1*x1 + w2*x2 + w3*x3) and finally activation function is applied output = activation(combination) in above picture activation is sigmoid represented by      1/(1 + e-F). There are some other activation functions as well like ReLU, Leaky ReLU, tanh, and many more.\n\nWorking Of ANN\nAt First, information is feed into the input layer which then transfers it to the hidden layers, and interconnection between these two layers assign weights to each input randomly at the initial point. and then bias is added to each input neuron and after this, the weighted sum which is a combination of weights and bias is passed through the activation function. Activation Function has the responsibility of which node to fire for feature extraction and finally output is calculated. This whole process is known as Foreward Propagation. After getting the output model to compare it with the original output and the error is known and finally, weights are updated in backward propagation to reduce the error and this process continues for a certain number of epochs (iteration). Finally, model weights get updated and prediction is done.\n\n\n# How to use this Module\n\n## The Coding is done in a way that u don't have to build the code, u just need to change the data in the configuration file(yaml)\n\n### A glimpse of what is present in the configuration file is mentioned below\n\n```yaml\n\nparams:\n  epochs: 5\n  batch_size: 32\n  no_classes: 10\n  input_shape: [28,28]\n  loss_function: sparse_categorical_crossentropy\n  metrics: accuracy\n  optimizer: SGD\n  validation_datasize: 5000\n\n\n\nartifacts:\n  artifacts_dir: artifacts\n  model_dir: model\n  plots_dir: plots\n  checkoint_dir: checkpoints\n  model_name: model.h5\n  plots_name: plot.png\n\nlogs:\n  logs_dir: logs_dir\n  general_logs: general_logs\n  tensorboard_logs: tensorboard_logs\n\n```\n\n## A glimpse of the Layers\n\n```python\n\n    LAYERS = [\n          tf.keras.layers.Flatten(input_shape=[28,28], name=\"inputlayer\"),\n          tf.keras.layers.Dense(300,activation=\"relu\", name=\"hiddenlayer1\"),\n          tf.keras.layers.Dense(100,activation=\"relu\", name=\"hiddenlayer2\"),\n          tf.keras.layers.Dense(OUTPUT_CLASSES,activation=\"softmax\", name=\"outputlayer\")] \n\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/kkkumar2/ANN---Implementation",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ANN-Implementation-kkkumar2",
    "package_url": "https://pypi.org/project/ANN-Implementation-kkkumar2/",
    "platform": "",
    "project_url": "https://pypi.org/project/ANN-Implementation-kkkumar2/",
    "project_urls": {
      "Bug Tracker": "https://github.com/kkkumar2/ANN---Implementation",
      "Homepage": "https://github.com/kkkumar2/ANN---Implementation"
    },
    "release_url": "https://pypi.org/project/ANN-Implementation-kkkumar2/0.0.2/",
    "requires_dist": [
      "numpy",
      "tqdm",
      "pandas",
      "matplotlib",
      "tensorflow",
      "seaborn"
    ],
    "requires_python": ">=3.7",
    "summary": "This is a ANN using Tensorflow package",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11675711,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "66c8c5db53a913db51f40d01731256c88c3120035bb48bad9d51cbff3ba7bb09",
          "md5": "8f170f0cc74f2b3d847b8338d607adef",
          "sha256": "42ea497ce8fc1c9a527f5a3f4bca218b3a0ebb0a1b1f382cff80913b6c1a1d73"
        },
        "downloads": -1,
        "filename": "ANN_Implementation_kkkumar2-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8f170f0cc74f2b3d847b8338d607adef",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 8897,
        "upload_time": "2021-10-04T22:17:24",
        "upload_time_iso_8601": "2021-10-04T22:17:24.077531Z",
        "url": "https://files.pythonhosted.org/packages/66/c8/c5db53a913db51f40d01731256c88c3120035bb48bad9d51cbff3ba7bb09/ANN_Implementation_kkkumar2-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3a723ba2af75f102cae83eae870b4ac5e53b9d51b79e3f3828094d798e53e4d2",
          "md5": "03f58d6c5c7d7e7676547dbc7971dd98",
          "sha256": "b144d38b46717e974426bfbfee933c89fe3af120f343ecd976850a1ae267d8b4"
        },
        "downloads": -1,
        "filename": "ANN---Implementation-kkkumar2-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "03f58d6c5c7d7e7676547dbc7971dd98",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 7978,
        "upload_time": "2021-10-04T22:17:26",
        "upload_time_iso_8601": "2021-10-04T22:17:26.864880Z",
        "url": "https://files.pythonhosted.org/packages/3a/72/3ba2af75f102cae83eae870b4ac5e53b9d51b79e3f3828094d798e53e4d2/ANN---Implementation-kkkumar2-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4575a2d2fd259b9ea26fff8b2cc6601cc766001e712e59ff658bfb6ff474d48b",
          "md5": "1271ea50d50177cabe6b78073b87a56d",
          "sha256": "ae1f2ad0f55b3c75381800b340ccde0a350bb2d3fedcdde8ec362e3de257c303"
        },
        "downloads": -1,
        "filename": "ANN_Implementation_kkkumar2-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1271ea50d50177cabe6b78073b87a56d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 9091,
        "upload_time": "2021-10-09T15:05:18",
        "upload_time_iso_8601": "2021-10-09T15:05:18.129736Z",
        "url": "https://files.pythonhosted.org/packages/45/75/a2d2fd259b9ea26fff8b2cc6601cc766001e712e59ff658bfb6ff474d48b/ANN_Implementation_kkkumar2-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b8ea95512580144d0363326a4df1bc78d145c3700be0554bda417924189d9090",
          "md5": "bb88a4fb4dc722057e4e18ead8725805",
          "sha256": "b9461555d9df639f32a1d70cbc05efae5e71ba9406fe08ce937b8e2a9e3d854a"
        },
        "downloads": -1,
        "filename": "ANN---Implementation-kkkumar2-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "bb88a4fb4dc722057e4e18ead8725805",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 8145,
        "upload_time": "2021-10-09T15:05:19",
        "upload_time_iso_8601": "2021-10-09T15:05:19.759922Z",
        "url": "https://files.pythonhosted.org/packages/b8/ea/95512580144d0363326a4df1bc78d145c3700be0554bda417924189d9090/ANN---Implementation-kkkumar2-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4575a2d2fd259b9ea26fff8b2cc6601cc766001e712e59ff658bfb6ff474d48b",
        "md5": "1271ea50d50177cabe6b78073b87a56d",
        "sha256": "ae1f2ad0f55b3c75381800b340ccde0a350bb2d3fedcdde8ec362e3de257c303"
      },
      "downloads": -1,
      "filename": "ANN_Implementation_kkkumar2-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1271ea50d50177cabe6b78073b87a56d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 9091,
      "upload_time": "2021-10-09T15:05:18",
      "upload_time_iso_8601": "2021-10-09T15:05:18.129736Z",
      "url": "https://files.pythonhosted.org/packages/45/75/a2d2fd259b9ea26fff8b2cc6601cc766001e712e59ff658bfb6ff474d48b/ANN_Implementation_kkkumar2-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b8ea95512580144d0363326a4df1bc78d145c3700be0554bda417924189d9090",
        "md5": "bb88a4fb4dc722057e4e18ead8725805",
        "sha256": "b9461555d9df639f32a1d70cbc05efae5e71ba9406fe08ce937b8e2a9e3d854a"
      },
      "downloads": -1,
      "filename": "ANN---Implementation-kkkumar2-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "bb88a4fb4dc722057e4e18ead8725805",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 8145,
      "upload_time": "2021-10-09T15:05:19",
      "upload_time_iso_8601": "2021-10-09T15:05:19.759922Z",
      "url": "https://files.pythonhosted.org/packages/b8/ea/95512580144d0363326a4df1bc78d145c3700be0554bda417924189d9090/ANN---Implementation-kkkumar2-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}