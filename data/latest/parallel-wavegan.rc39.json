{
  "info": {
    "author": "Tomoki Hayashi",
    "author_email": "hayashi.tomoki@g.sp.m.is.nagoya-u.ac.jp",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# Parallel WaveGAN implementation with Pytorch\n\n![](https://github.com/kan-bayashi/ParallelWaveGAN/workflows/CI/badge.svg) [![](https://img.shields.io/pypi/v/parallel-wavegan)](https://pypi.org/project/parallel-wavegan/) ![](https://img.shields.io/pypi/pyversions/parallel-wavegan) ![](https://img.shields.io/pypi/l/parallel-wavegan) [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/espnet/notebook/blob/master/espnet2_tts_realtime_demo.ipynb)\n\nThis repository provides **UNOFFICIAL** pytorch implementations of the following models:\n- [Parallel WaveGAN](https://arxiv.org/abs/1910.11480)\n- [MelGAN](https://arxiv.org/abs/1910.06711)\n- [Multiband-MelGAN](https://arxiv.org/abs/2005.05106)\n- [HiFi-GAN](https://arxiv.org/abs/2010.05646)\n- [StyleMelGAN](https://arxiv.org/abs/2011.01557)\n\nYou can combine these state-of-the-art non-autoregressive models to build your own great vocoder!\n\nPlease check our samples in [our demo HP](https://kan-bayashi.github.io/ParallelWaveGAN).\n\n![](https://user-images.githubusercontent.com/22779813/68081503-4b8fcf00-fe52-11e9-8791-e02851220355.png)\n\n> Source of the figure: https://arxiv.org/pdf/1910.11480.pdf\n\nThe goal of this repository is to provide real-time neural vocoder, which is compatible with [ESPnet-TTS](https://github.com/espnet/espnet).  \nAlso, this repository can be combined with [NVIDIA/tacotron2](https://github.com/NVIDIA/tacotron2)-based implementation (See [this comment](https://github.com/kan-bayashi/ParallelWaveGAN/issues/169#issuecomment-649320778)).\n\nYou can try the real-time end-to-end text-to-speech and singing voice synthesis demonstration in Google Colab!\n- Real-time demonstration with ESPnet2  [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/espnet/notebook/blob/master/espnet2_tts_realtime_demo.ipynb)\n- Real-time demonstration with ESPnet1  [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/espnet/notebook/blob/master/tts_realtime_demo.ipynb)\n- Real-time demonstration with Muskits [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/SJTMusicTeam/svs_demo/blob/master/muskit_svs_realtime.ipynb)\n\n## What's new\n\n- 2022/02/27 Support singing voice vocoder [egs/{kiritan, opencpop, oniku\\_kurumi\\_utagoe\\_db, ofuton\\_p\\_utagoe\\_db, csd, kising}/voc1]\n- 2021/10/21 Single-speaker Korean recipe [egs/kss/voc1] is available.\n- 2021/08/24 Add more pretrained models of StyleMelGAN and HiFi-GAN.\n- 2021/08/07 Add initial pretrained models of StyleMelGAN and HiFi-GAN.\n- 2021/08/03 Support [StyleMelGAN](https://arxiv.org/abs/2011.01557) generator and discriminator!\n- 2021/08/02 Support [HiFi-GAN](https://arxiv.org/abs/2010.05646) generator and discriminator!\n- 2020/10/07 [JSSS](https://sites.google.com/site/shinnosuketakamichi/research-topics/jsss_corpus) recipe is available!\n- 2020/08/19 [Real-time demo with ESPnet2](https://colab.research.google.com/github/espnet/notebook/blob/master/espnet2_tts_realtime_demo.ipynb) is available!\n- 2020/05/29 [VCTK, JSUT, and CSMSC multi-band MelGAN pretrained model](#Results) is available!\n- 2020/05/27 [New LJSpeech multi-band MelGAN pretrained model](#Results) is available!\n- 2020/05/24 [LJSpeech full-band MelGAN pretrained model](#Results) is available!\n- 2020/05/22 [LJSpeech multi-band MelGAN pretrained model](#Results) is available!\n- 2020/05/16 [Multi-band MelGAN](https://arxiv.org/abs/2005.05106) is available!\n- 2020/03/25 [LibriTTS pretrained models](#Results) are available!\n- 2020/03/17 [Tensorflow conversion example notebook](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/notebooks/convert_melgan_from_pytorch_to_tensorflow.ipynb) is available (Thanks, [@dathudeptrai](https://github.com/dathudeptrai))!\n- 2020/03/16 [LibriTTS recipe](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/libritts/voc1) is available!\n- 2020/03/12 [PWG G + MelGAN D + STFT-loss samples](#Results) are available!\n- 2020/03/12 Multi-speaker English recipe [egs/vctk/voc1](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/vctk/voc1) is available!\n- 2020/02/22 [MelGAN G + MelGAN D + STFT-loss samples](#Results) are available!\n- 2020/02/12 Support [MelGAN](https://arxiv.org/abs/1910.06711)'s discriminator!\n- 2020/02/08 Support [MelGAN](https://arxiv.org/abs/1910.06711)'s generator!\n\n## Requirements\n\nThis repository is tested on Ubuntu 20.04 with a GPU Titan V.\n\n- Python 3.7+\n- Cuda 10.0+\n- CuDNN 7+\n- NCCL 2+ (for distributed multi-gpu training)\n- libsndfile (you can install via `sudo apt install libsndfile-dev` in ubuntu)\n- jq (you can install via `sudo apt install jq` in ubuntu)\n- sox (you can install via `sudo apt install sox` in ubuntu)\n\nDifferent cuda version should be working but not explicitly tested.  \nAll of the codes are tested on Pytorch 1.4, 1.5.1, 1.7.1, 1.8.1, 1.9, 1.10.2, and 1.11.0.\n\nPytorch 1.6 works but there are some issues in cpu mode (See #198).\n\n## Setup\n\nYou can select the installation method from two alternatives.\n\n### A. Use pip\n\n```bash\n$ git clone https://github.com/kan-bayashi/ParallelWaveGAN.git\n$ cd ParallelWaveGAN\n$ pip install -e .\n# If you want to use distributed training, please install\n# apex manually by following https://github.com/NVIDIA/apex\n$ ...\n```\nNote that your cuda version must be exactly matched with the version used for the pytorch binary to install apex.  \nTo install pytorch compiled with different cuda version, see `tools/Makefile`.\n\n### B. Make virtualenv\n\n```bash\n$ git clone https://github.com/kan-bayashi/ParallelWaveGAN.git\n$ cd ParallelWaveGAN/tools\n$ make\n# If you want to use distributed training, please run following\n# command to install apex.\n$ make apex\n```\n\nNote that we specify cuda version used to compile pytorch wheel.  \nIf you want to use different cuda version, please check `tools/Makefile` to change the pytorch wheel to be installed.\n\n## Recipe\n\nThis repository provides [Kaldi](https://github.com/kaldi-asr/kaldi)-style recipes, as the same as [ESPnet](https://github.com/espnet/espnet).  \nCurrently, the following recipes are supported.\n\n- [LJSpeech](https://keithito.com/LJ-Speech-Dataset/): English female speaker\n- [JSUT](https://sites.google.com/site/shinnosuketakamichi/publication/jsut): Japanese female speaker\n- [JSSS](https://sites.google.com/site/shinnosuketakamichi/research-topics/jsss_corpus): Japanese female speaker\n- [CSMSC](https://www.data-baker.com/open_source.html): Mandarin female speaker\n- [CMU Arctic](http://www.festvox.org/cmu_arctic/): English speakers\n- [JNAS](http://research.nii.ac.jp/src/en/JNAS.html): Japanese multi-speaker\n- [VCTK](https://homepages.inf.ed.ac.uk/jyamagis/page3/page58/page58.html): English multi-speaker\n- [LibriTTS](https://arxiv.org/abs/1904.02882): English multi-speaker\n- [YesNo](https://arxiv.org/abs/1904.02882): English speaker (For debugging)\n- [KSS](https://www.kaggle.com/bryanpark/korean-single-speaker-speech-dataset): Single Korean female speaker\n- [Oniku\\_kurumi\\_utagoe\\_db/](http://onikuru.info/db-download/): Single Japanese female singer (singing voice)\n- [Kiritan](https://zunko.jp/kiridev/login.php): Single Japanese male singer (singing voice)\n- [Ofuton\\_p\\_utagoe\\_db](https://sites.google.com/view/oftn-utagoedb/%E3%83%9B%E3%83%BC%E3%83%A0): Single Japanese female singer (singing voice)\n- [Opencpop](https://wenet.org.cn/opencpop/download/): Single Mandarin female singer (singing voice)\n- [CSD](https://zenodo.org/record/4785016/): Single Korean/English female singer (singing voice)\n- [KiSing](http://shijt.site/index.php/2021/05/16/kising-the-first-open-source-mandarin-singing-voice-synthesis-corpus/): Single Mandarin female singer (singing voice)\n\nTo run the recipe, please follow the below instruction.\n\n```bash\n# Let us move on the recipe directory\n$ cd egs/ljspeech/voc1\n\n# Run the recipe from scratch\n$ ./run.sh\n\n# You can change config via command line\n$ ./run.sh --conf <your_customized_yaml_config>\n\n# You can select the stage to start and stop\n$ ./run.sh --stage 2 --stop_stage 2\n\n# If you want to specify the gpu\n$ CUDA_VISIBLE_DEVICES=1 ./run.sh --stage 2\n\n# If you want to resume training from 10000 steps checkpoint\n$ ./run.sh --stage 2 --resume <path>/<to>/checkpoint-10000steps.pkl\n```\n\nSee more info about the recipes in [this README](./egs/README.md).\n\n## Speed\n\nThe decoding speed is RTF = 0.016 with TITAN V, much faster than the real-time.\n\n```bash\n[decode]: 100%|██████████| 250/250 [00:30<00:00,  8.31it/s, RTF=0.0156]\n2019-11-03 09:07:40,480 (decode:127) INFO: finished generation of 250 utterances (RTF = 0.016).\n```\n\nEven on the CPU (Intel(R) Xeon(R) Gold 6154 CPU @ 3.00GHz 16 threads), it can generate less than the real-time.\n\n```bash\n[decode]: 100%|██████████| 250/250 [22:16<00:00,  5.35s/it, RTF=0.841]\n2019-11-06 09:04:56,697 (decode:129) INFO: finished generation of 250 utterances (RTF = 0.734).\n```\n\nIf you use MelGAN's generator, the decoding speed will be further faster.\n\n```bash\n# On CPU (Intel(R) Xeon(R) Gold 6154 CPU @ 3.00GHz 16 threads)\n[decode]: 100%|██████████| 250/250 [04:00<00:00,  1.04it/s, RTF=0.0882]\n2020-02-08 10:45:14,111 (decode:142) INFO: Finished generation of 250 utterances (RTF = 0.137).\n\n# On GPU (TITAN V)\n[decode]: 100%|██████████| 250/250 [00:06<00:00, 36.38it/s, RTF=0.00189]\n2020-02-08 05:44:42,231 (decode:142) INFO: Finished generation of 250 utterances (RTF = 0.002).\n```\n\nIf you use Multi-band MelGAN's generator, the decoding speed will be much further faster.\n\n```bash\n# On CPU (Intel(R) Xeon(R) Gold 6154 CPU @ 3.00GHz 16 threads)\n[decode]: 100%|██████████| 250/250 [01:47<00:00,  2.95it/s, RTF=0.048]\n2020-05-22 15:37:19,771 (decode:151) INFO: Finished generation of 250 utterances (RTF = 0.059).\n\n# On GPU (TITAN V)\n[decode]: 100%|██████████| 250/250 [00:05<00:00, 43.67it/s, RTF=0.000928]\n2020-05-22 15:35:13,302 (decode:151) INFO: Finished generation of 250 utterances (RTF = 0.001).\n```\n\nIf you want to accelerate the inference more, it is worthwhile to try the conversion from pytorch to tensorflow.  \nThe example of the conversion is available in [the notebook](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/notebooks/convert_melgan_from_pytorch_to_tensorflow.ipynb) (Provided by [@dathudeptrai](https://github.com/dathudeptrai)).  \n\n## Results\n\nHere the results are summarized in the table.  \nYou can listen to the samples and download pretrained models from the link to our google drive.\n\n| Model                                                                                                        | Conf                                                                                                                        | Lang  | Fs [Hz] | Mel range [Hz] | FFT / Hop / Win [pt] | # iters |\n| :----------------------------------------------------------------------------------------------------------- | :-------------------------------------------------------------------------------------------------------------------------: | :---: | :-----: | :------------: | :------------------: | :-----: |\n| [ljspeech_parallel_wavegan.v1](https://drive.google.com/open?id=1wdHr1a51TLeo4iKrGErVKHVFyq6D17TU)           | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/ljspeech/voc1/conf/parallel_wavegan.v1.yaml)          | EN    | 22.05k  | 80-7600        | 1024 / 256 / None    | 400k    |\n| [ljspeech_parallel_wavegan.v1.long](https://drive.google.com/open?id=1XRn3s_wzPF2fdfGshLwuvNHrbgD0hqVS)      | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/ljspeech/voc1/conf/parallel_wavegan.v1.long.yaml)     | EN    | 22.05k  | 80-7600        | 1024 / 256 / None    | 1M      |\n| [ljspeech_parallel_wavegan.v1.no_limit](https://drive.google.com/open?id=1NoD3TCmKIDHHtf74YsScX8s59aZFOFJA)  | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/ljspeech/voc1/conf/parallel_wavegan.v1.no_limit.yaml) | EN    | 22.05k  | None           | 1024 / 256 / None    | 400k    |\n| [ljspeech_parallel_wavegan.v3](https://drive.google.com/open?id=1a5Q2KiJfUQkVFo5Bd1IoYPVicJGnm7EL)           | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/ljspeech/voc1/conf/parallel_wavegan.v3.yaml)          | EN    | 22.05k  | 80-7600        | 1024 / 256 / None    | 3M      |\n| [ljspeech_melgan.v1](https://drive.google.com/open?id=1z0vO1UMFHyeCdCLAmd7Moewi4QgCb07S)                     | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/ljspeech/voc1/conf/melgan.v1.yaml)                    | EN    | 22.05k  | 80-7600        | 1024 / 256 / None    | 400k    |\n| [ljspeech_melgan.v1.long](https://drive.google.com/open?id=1RqNGcFO7Geb6-4pJtMbC9-ph_WiWA14e)                | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/ljspeech/voc1/conf/melgan.v1.long.yaml)               | EN    | 22.05k  | 80-7600        | 1024 / 256 / None    | 1M      |\n| [ljspeech_melgan_large.v1](https://drive.google.com/open?id=1KQt-gyxbG6iTZ4aVn9YjQuaGYjAleYs8)               | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/ljspeech/voc1/conf/melgan_large.v1.yaml)              | EN    | 22.05k  | 80-7600        | 1024 / 256 / None    | 400k    |\n| [ljspeech_melgan_large.v1.long](https://drive.google.com/open?id=1ogEx-wiQS7HVtdU0_TmlENURIe4v2erC)          | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/ljspeech/voc1/conf/melgan_large.v1.long.yaml)         | EN    | 22.05k  | 80-7600        | 1024 / 256 / None    | 1M      |\n| [ljspeech_melgan.v3](https://drive.google.com/open?id=1eXkm_Wf1YVlk5waP4Vgqd0GzMaJtW3y5)                     | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/ljspeech/voc1/conf/melgan.v3.yaml)                    | EN    | 22.05k  | 80-7600        | 1024 / 256 / None    | 2M      |\n| [ljspeech_melgan.v3.long](https://drive.google.com/open?id=1u1w4RPefjByX8nfsL59OzU2KgEksBhL1)                | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/ljspeech/voc1/conf/melgan.v3.long.yaml)               | EN    | 22.05k  | 80-7600        | 1024 / 256 / None    | 4M      |\n| [ljspeech_full_band_melgan.v1](https://drive.google.com/open?id=1RQqkbnoow0srTDYJNYA7RJ5cDRC5xB-t)           | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/ljspeech/voc1/conf/full_band_melgan.v1.yaml)          | EN    | 22.05k  | 80-7600        | 1024 / 256 / None    | 1M      |\n| [ljspeech_full_band_melgan.v2](https://drive.google.com/open?id=1d9DWOzwOyxT1K5lPnyMqr2nED62vlHaX)           | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/ljspeech/voc1/conf/full_band_melgan.v2.yaml)          | EN    | 22.05k  | 80-7600        | 1024 / 256 / None    | 1M      |\n| [ljspeech_multi_band_melgan.v1](https://drive.google.com/open?id=1ls_YxCccQD-v6ADbG6qXlZ8f30KrrhLT)          | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/ljspeech/voc1/conf/multi_band_melgan.v1.yaml)         | EN    | 22.05k  | 80-7600        | 1024 / 256 / None    | 1M      |\n| [ljspeech_multi_band_melgan.v2](https://drive.google.com/open?id=1wevYP2HQ7ec2fSixTpZIX0sNBtYZJz_I)          | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/ljspeech/voc1/conf/multi_band_melgan.v2.yaml)         | EN    | 22.05k  | 80-7600        | 1024 / 256 / None    | 1M      |\n| [ljspeech_hifigan.v1](https://drive.google.com/open?id=18_R5-pGHDIbIR1QvrtBZwVRHHpBy5xiZ)                    | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/ljspeech/voc1/conf/hifigan.v1.yaml)                   | EN    | 22.05k  | 80-7600        | 1024 / 256 / None    | 2.5M    |\n| [ljspeech_style_melgan.v1](https://drive.google.com/open?id=1WFlVknhyeZhTT5R6HznVJCJ4fwXKtb3B)               | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/ljspeech/voc1/conf/style_melgan.v1.yaml)              | EN    | 22.05k  | 80-7600        | 1024 / 256 / None    | 1.5M    |\n| [jsut_parallel_wavegan.v1](https://drive.google.com/open?id=1UDRL0JAovZ8XZhoH0wi9jj_zeCKb-AIA)               | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/jsut/voc1/conf/parallel_wavegan.v1.yaml)              | JP    | 24k     | 80-7600        | 2048 / 300 / 1200    | 400k    |\n| [jsut_multi_band_melgan.v2](https://drive.google.com/open?id=1E4fe0c5gMLtmSS0Hrzj-9nUbMwzke4PS)              | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/jsut/voc1/conf/multi_band_melgan.v2.yaml)             | JP    | 24k     | 80-7600        | 2048 / 300 / 1200    | 1M      |\n| [just_hifigan.v1](https://drive.google.com/open?id=1TY88141UWzQTAQXIPa8_g40QshuqVj6Y)                        | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/jsut/voc1/conf/hifigan.v1.yaml)                       | JP    | 24k     | 80-7600        | 2048 / 300 / 1200    | 2.5M    |\n| [just_style_melgan.v1](https://drive.google.com/open?id=1-qKAC0zLya6iKMngDERbSzBYD4JHmGdh)                   | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/jsut/voc1/conf/style_melgan.v1.yaml)                  | JP    | 24k     | 80-7600        | 2048 / 300 / 1200    | 1.5M    |\n| [csmsc_parallel_wavegan.v1](https://drive.google.com/open?id=1C2nu9nOFdKcEd-D9xGquQ0bCia0B2v_4)              | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/csmsc/voc1/conf/parallel_wavegan.v1.yaml)             | ZH    | 24k     | 80-7600        | 2048 / 300 / 1200    | 400k    |\n| [csmsc_multi_band_melgan.v2](https://drive.google.com/open?id=1F7FwxGbvSo1Rnb5kp0dhGwimRJstzCrz)             | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/csmsc/voc1/conf/multi_band_melgan.v2.yaml)            | ZH    | 24k     | 80-7600        | 2048 / 300 / 1200    | 1M      |\n| [csmsc_hifigan.v1](https://drive.google.com/open?id=1gTkVloMqteBfSRhTrZGdOBBBRsGd3qt8)                       | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/csmsc/voc1/conf/hifigan.v1.yaml)                      | ZH    | 24k     | 80-7600        | 2048 / 300 / 1200    | 2.5M    |\n| [csmsc_style_melgan.v1](https://drive.google.com/open?id=1gl4P5W_ST_nnv0vjurs7naVm5UJqkZIn)                  | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/csmsc/voc1/conf/style_melgan.v1.yaml)                 | ZH    | 24k     | 80-7600        | 2048 / 300 / 1200    | 1.5M    |\n| [arctic_slt_parallel_wavegan.v1](https://drive.google.com/open?id=1xG9CmSED2TzFdklD6fVxzf7kFV2kPQAJ)         | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/arctic/voc1/conf/parallel_wavegan.v1.yaml)            | EN    | 16k     | 80-7600        | 1024 / 256 / None    | 400k    |\n| [jnas_parallel_wavegan.v1](https://drive.google.com/open?id=1n_hkxPxryVXbp6oHM1NFm08q0TcoDXz1)               | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/jnas/voc1/conf/parallel_wavegan.v1.yaml)              | JP    | 16k     | 80-7600        | 1024 / 256 / None    | 400k    |\n| [vctk_parallel_wavegan.v1](https://drive.google.com/open?id=1dGTu-B7an2P5sEOepLPjpOaasgaSnLpi)               | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/vctk/voc1/conf/parallel_wavegan.v1.yaml)              | EN    | 24k     | 80-7600        | 2048 / 300 / 1200    | 400k    |\n| [vctk_parallel_wavegan.v1.long](https://drive.google.com/open?id=1qoocM-VQZpjbv5B-zVJpdraazGcPL0So)          | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/vctk/voc1/conf/parallel_wavegan.v1.long.yaml)         | EN    | 24k     | 80-7600        | 2048 / 300 / 1200    | 1M      |\n| [vctk_multi_band_melgan.v2](https://drive.google.com/open?id=17EkB4hSKUEDTYEne-dNHtJT724hdivn4)              | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/vctk/voc1/conf/multi_band_melgan.v2.yaml)             | EN    | 24k     | 80-7600        | 2048 / 300 / 1200    | 1M      |\n| [vctk_hifigan.v1](https://drive.google.com/open?id=17fu7ukS97m-8StXPc6ltW8a3hr0fsQBP)                        | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/vctk/voc1/conf/hifigan.v1.yaml)                       | EN    | 24k     | 80-7600        | 2048 / 300 / 1200    | 2.5M    |\n| [vctk_style_melgan.v1](https://drive.google.com/open?id=1kfJgzDgrOFYxTfVTNbTHcnyq--cc6plo)                   | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/vctk/voc1/conf/style_melgan.v1.yaml)                  | EN    | 24k     | 80-7600        | 2048 / 300 / 1200    | 1.5M    |\n| [libritts_parallel_wavegan.v1](https://drive.google.com/open?id=1pb18Nd2FCYWnXfStszBAEEIMe_EZUJV0)           | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/libritts/voc1/conf/parallel_wavegan.v1.yaml)          | EN    | 24k     | 80-7600        | 2048 / 300 / 1200    | 400k    |\n| [libritts_parallel_wavegan.v1.long](https://drive.google.com/open?id=15ibzv-uTeprVpwT946Hl1XUYDmg5Afwz)      | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/libritts/voc1/conf/parallel_wavegan.v1.long.yaml)     | EN    | 24k     | 80-7600        | 2048 / 300 / 1200    | 1M      |\n| [libritts_multi_band_melgan.v2](https://drive.google.com/open?id=1jfB15igea6tOQ0hZJGIvnpf3QyNhTLnq)          | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/libritts/voc1/conf/multi_band_melgan.v2.yaml)         | EN    | 24k     | 80-7600        | 2048 / 300 / 1200    | 1M      |\n| [libritts_hifigan.v1](https://drive.google.com/open?id=10jBLsjQT3LvR-3GgPZpRvWIWvpGjzDnM)                    | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/libritts/voc1/conf/hifigan.v1.yaml)                   | EN    | 24k     | 80-7600        | 2048 / 300 / 1200    | 2.5M    |\n| [libritts_style_melgan.v1](https://drive.google.com/open?id=1OPpYbrqYOJ_hHNGSQHzUxz_QZWWBwV9r)               | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/libritts/voc1/conf/style_melgan.v1.yaml)              | EN    | 24k     | 80-7600        | 2048 / 300 / 1200    | 1.5M    |\n| [kss_parallel_wavegan.v1](https://drive.google.com/open?id=1n5kitXZqPHUr-veoUKCyfJvb3p1g0VlY)                | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/libritts/voc1/conf/parallel_wavegan.v1.yaml)          | KO    | 24k     | 80-7600        | 2048 / 300 / 1200    | 400k    |\n| [hui_acg_hokuspokus_parallel_wavegan.v1](https://drive.google.com/open?id=1rwzpIwb65xbW5fFPsqPWdforsk4U-vDg) | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/libritts/voc1/conf/parallel_wavegan.v1.yaml)          | DE    | 24k     | 80-7600        | 2048 / 300 / 1200    | 400k    |\n| [ruslan_parallel_wavegan.v1](https://drive.google.com/open?id=1QGuesaRKGful0bUTTaFZdbjqHNhy2LpE)             | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/libritts/voc1/conf/parallel_wavegan.v1.yaml)          | RU    | 24k     | 80-7600        | 2048 / 300 / 1200    | 400k    |\n| [oniku_hifigan.v1](https://drive.google.com/open?id=1K1WNqmZVJaZqTwWNVcucZNeGKHu8-LVm)                       | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/oniku_kurumi_utagoe_db/voc1/conf/hifigan.v1.yaml)     | JP    | 24k     | 80-7600        | 2048 / 300 / 1200    | 250k    |\n| [kiritan_hifigan.v1](https://drive.google.com/open?id=1FHUUF5uUnlJ9-D7HmXw3_Sn_GRS48I36)                     | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/kiritan/voc1/conf/hifigan.v1.yaml)                    | JP    | 24k     | 80-7600        | 2048 / 300 / 1200    | 300k    |\n| [ofuton_hifigan.v1](https://drive.google.com/open?id=1fq8ITA2KpdtrzzD2hOlroParMg-qKjr7)                      | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/ofuton_p_utagoe_db/voc1/conf/hifigan.v1.yaml)         | JP    | 24k     | 80-7600        | 2048 / 300 / 1200    | 300k    |\n| [opencpop_hifigan.v1](https://drive.google.com/open?id=1hMf5yew_MrbPW0qy5qzXn0mxqbfHTadC)                    | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/opencpop/voc1/conf/hifigan.v1.yaml)                   | ZH    | 24k     | 80-7600        | 2048 / 300 / 1200    | 250k    |\n| [csd_english_hifigan.v1](https://drive.google.com/open?id=1NACjfBqmaecwh4dZMl714RukEkV8XLAi)                 | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/csd/voc1/conf/hifigan.v1.yaml)                        | EN    | 24k     | 80-7600        | 2048 / 300 / 1200    | 300k    |\n| [csd_korean_hifigan.v1](https://drive.google.com/open?id=1BGxIoRg4VgXcX0G-4Dwea030-qQ_Ynyp)                  | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/csd/voc1/conf/hifigan.v1.yaml)                        | EN    | 24k     | 80-7600        | 2048 / 300 / 1200    | 250k    |\n| [kising_hifigan.v1](https://drive.google.com/open?id=1GGu3pW89qxmJapd0Vm1aqp6lqgZARLO9)                      | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/kising/voc1/conf/hifigan.v1.yaml)                     | ZH    | 24k     | 80-7600        | 2048 / 300 / 1200    | 300k    |\n\n\n\nPlease access at [our google drive](https://drive.google.com/open?id=1sd_QzcUNnbiaWq7L0ykMP7Xmk-zOuxTi) to check more results.\n\nPlease check the license of database (e.g., whether it is proper for commercial usage) before using the pre-trained model.   \nThe authors will not be responsible for any loss due to the use of the model and legal disputes regarding the use of the dataset.\n\n## How-to-use pretrained models\n\n### Analysis-synthesis\n\nHere the minimal code is shown to perform analysis-synthesis using the pretrained model.\n\n```bash\n# Please make sure you installed `parallel_wavegan`\n# If not, please install via pip\n$ pip install parallel_wavegan\n\n# You can download the pretrained model from terminal\n$ python << EOF\nfrom parallel_wavegan.utils import download_pretrained_model\ndownload_pretrained_model(\"<pretrained_model_tag>\", \"pretrained_model\")\nEOF\n\n# You can get all of available pretrained models as follows:\n$ python << EOF\nfrom parallel_wavegan.utils import PRETRAINED_MODEL_LIST\nprint(PRETRAINED_MODEL_LIST.keys())\nEOF\n\n# Now you can find downloaded pretrained model in `pretrained_model/<pretrain_model_tag>/`\n$ ls pretrain_model/<pretrain_model_tag>\n  checkpoint-400000steps.pkl    config.yml    stats.h5\n\n# These files can also be downloaded manually from the above results\n\n# Please put an audio file in `sample` directory to perform analysis-synthesis\n$ ls sample/\n  sample.wav\n\n# Then perform feature extraction -> feature normalization -> synthesis\n$ parallel-wavegan-preprocess \\\n    --config pretrain_model/<pretrain_model_tag>/config.yml \\\n    --rootdir sample \\\n    --dumpdir dump/sample/raw\n100%|████████████████████████████████████████| 1/1 [00:00<00:00, 914.19it/s]\n$ parallel-wavegan-normalize \\\n    --config pretrain_model/<pretrain_model_tag>/config.yml \\\n    --rootdir dump/sample/raw \\\n    --dumpdir dump/sample/norm \\\n    --stats pretrain_model/<pretrain_model_tag>/stats.h5\n2019-11-13 13:44:29,574 (normalize:87) INFO: the number of files = 1.\n100%|████████████████████████████████████████| 1/1 [00:00<00:00, 513.13it/s]\n$ parallel-wavegan-decode \\\n    --checkpoint pretrain_model/<pretrain_model_tag>/checkpoint-400000steps.pkl \\\n    --dumpdir dump/sample/norm \\\n    --outdir sample\n2019-11-13 13:44:31,229 (decode:91) INFO: the number of features to be decoded = 1.\n[decode]: 100%|███████████████████| 1/1 [00:00<00:00, 18.33it/s, RTF=0.0146]\n2019-11-13 13:44:37,132 (decode:129) INFO: finished generation of 1 utterances (RTF = 0.015).\n\n# You can skip normalization step (on-the-fly normalization, feature extraction -> synthesis)\n$ parallel-wavegan-preprocess \\\n    --config pretrain_model/<pretrain_model_tag>/config.yml \\\n    --rootdir sample \\\n    --dumpdir dump/sample/raw\n100%|████████████████████████████████████████| 1/1 [00:00<00:00, 914.19it/s]\n$ parallel-wavegan-decode \\\n    --checkpoint pretrain_model/<pretrain_model_tag>/checkpoint-400000steps.pkl \\\n    --dumpdir dump/sample/raw \\\n    --normalize-before \\\n    --outdir sample\n2019-11-13 13:44:31,229 (decode:91) INFO: the number of features to be decoded = 1.\n[decode]: 100%|███████████████████| 1/1 [00:00<00:00, 18.33it/s, RTF=0.0146]\n2019-11-13 13:44:37,132 (decode:129) INFO: finished generation of 1 utterances (RTF = 0.015).\n\n# you can find the generated speech in `sample` directory\n$ ls sample\n  sample.wav    sample_gen.wav\n```\n\n### Decoding with ESPnet-TTS model's features\n\nHere, I show the procedure to generate waveforms with features generated by [ESPnet-TTS](https://github.com/espnet/espnet) models.\n\n```bash\n# Make sure you already finished running the recipe of ESPnet-TTS.\n# You must use the same feature settings for both Text2Mel and Mel2Wav models.\n# Let us move on \"ESPnet\" recipe directory\n$ cd /path/to/espnet/egs/<recipe_name>/tts1\n$ pwd\n/path/to/espnet/egs/<recipe_name>/tts1\n\n# If you use ESPnet2, move on `egs2/`\n$ cd /path/to/espnet/egs2/<recipe_name>/tts1\n$ pwd\n/path/to/espnet/egs2/<recipe_name>/tts1\n\n# Please install this repository in ESPnet conda (or virtualenv) environment\n$ . ./path.sh && pip install -U parallel_wavegan\n\n# You can download the pretrained model from terminal\n$ python << EOF\nfrom parallel_wavegan.utils import download_pretrained_model\ndownload_pretrained_model(\"<pretrained_model_tag>\", \"pretrained_model\")\nEOF\n\n# You can get all of available pretrained models as follows:\n$ python << EOF\nfrom parallel_wavegan.utils import PRETRAINED_MODEL_LIST\nprint(PRETRAINED_MODEL_LIST.keys())\nEOF\n\n# You can find downloaded pretrained model in `pretrained_model/<pretrain_model_tag>/`\n$ ls pretrain_model/<pretrain_model_tag>\n  checkpoint-400000steps.pkl    config.yml    stats.h5\n\n# These files can also be downloaded manually from the above results\n```\n\n**Case 1**: If you use the same dataset for both Text2Mel and Mel2Wav\n\n```bash\n# In this case, you can directly use generated features for decoding.\n# Please specify `feats.scp` path for `--feats-scp`, which is located in\n# exp/<your_model_dir>/outputs_*_decode/<set_name>/feats.scp.\n# Note that do not use outputs_*decode_denorm/<set_name>/feats.scp since\n# it is de-normalized features (the input for PWG is normalized features).\n$ parallel-wavegan-decode \\\n    --checkpoint pretrain_model/<pretrain_model_tag>/checkpoint-400000steps.pkl \\\n    --feats-scp exp/<your_model_dir>/outputs_*_decode/<set_name>/feats.scp \\\n    --outdir <path_to_outdir>\n\n# In the case of ESPnet2, the generated feature can be found in\n# exp/<your_model_dir>/decode_*/<set_name>/norm/feats.scp.\n$ parallel-wavegan-decode \\\n    --checkpoint pretrain_model/<pretrain_model_tag>/checkpoint-400000steps.pkl \\\n    --feats-scp exp/<your_model_dir>/decode_*/<set_name>/norm/feats.scp \\\n    --outdir <path_to_outdir>\n\n# You can find the generated waveforms in <path_to_outdir>/.\n$ ls <path_to_outdir>\n  utt_id_1_gen.wav    utt_id_2_gen.wav  ...    utt_id_N_gen.wav\n```\n\n**Case 2**: If you use different datasets for Text2Mel and Mel2Wav models\n\n```bash\n# In this case, you must provide `--normalize-before` option additionally.\n# And use `feats.scp` of de-normalized generated features.\n\n# ESPnet1 case\n$ parallel-wavegan-decode \\\n    --checkpoint pretrain_model/<pretrain_model_tag>/checkpoint-400000steps.pkl \\\n    --feats-scp exp/<your_model_dir>/outputs_*_decode_denorm/<set_name>/feats.scp \\\n    --outdir <path_to_outdir> \\\n    --normalize-before\n\n# ESPnet2 case\n$ parallel-wavegan-decode \\\n    --checkpoint pretrain_model/<pretrain_model_tag>/checkpoint-400000steps.pkl \\\n    --feats-scp exp/<your_model_dir>/decode_*/<set_name>/denorm/feats.scp \\\n    --outdir <path_to_outdir> \\\n    --normalize-before\n\n# You can find the generated waveforms in <path_to_outdir>/.\n$ ls <path_to_outdir>\n  utt_id_1_gen.wav    utt_id_2_gen.wav  ...    utt_id_N_gen.wav\n```\n\nIf you want to combine these models in python, you can try the real-time demonstration in Google Colab!\n- Real-time demonstration with ESPnet2  [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/espnet/notebook/blob/master/espnet2_tts_realtime_demo.ipynb)\n- Real-time demonstration with ESPnet1  [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/espnet/notebook/blob/master/tts_realtime_demo.ipynb)\n\n### Decoding with dumped npy files\n\nSometimes we want to decode with dumped npy files, which are mel-spectrogram generated by TTS models.\nPlease make sure you used the same feature extraction settings of the pretrained vocoder (`fs`, `fft_size`, `hop_size`, `win_length`, `fmin`, and `fmax`).  \nOnly the difference of `log_base` can be changed with some post-processings (we use log 10 instead of natural log as a default).\nSee detail in [the comment](https://github.com/kan-bayashi/ParallelWaveGAN/issues/169#issuecomment-649320778).\n\n```bash\n# Generate dummy npy file of mel-spectrogram\n$ ipython\n[ins] In [1]: import numpy as np\n[ins] In [2]: x = np.random.randn(512, 80)  # (#frames, #mels)\n[ins] In [3]: np.save(\"dummy_1.npy\", x)\n[ins] In [4]: y = np.random.randn(256, 80)  # (#frames, #mels)\n[ins] In [5]: np.save(\"dummy_2.npy\", y)\n[ins] In [6]: exit\n\n# Make scp file (key-path format)\n$ find -name \"*.npy\" | awk '{print \"dummy_\" NR \" \" $1}' > feats.scp\n\n# Check (<utt_id> <path>)\n$ cat feats.scp\ndummy_1 ./dummy_1.npy\ndummy_2 ./dummy_2.npy\n\n# Decode without feature normalization\n# This case assumes that the input mel-spectrogram is normalized with the same statistics of the pretrained model.\n$ parallel-wavegan-decode \\\n    --checkpoint /path/to/checkpoint-400000steps.pkl \\\n    --feats-scp ./feats.scp \\\n    --outdir wav\n2021-08-10 09:13:07,624 (decode:140) INFO: The number of features to be decoded = 2.\n[decode]: 100%|████████████████████████████████████████| 2/2 [00:00<00:00, 13.84it/s, RTF=0.00264]\n2021-08-10 09:13:29,660 (decode:174) INFO: Finished generation of 2 utterances (RTF = 0.005).\n\n# Decode with feature normalization\n# This case assumes that the input mel-spectrogram is not normalized.\n$ parallel-wavegan-decode \\\n    --checkpoint /path/to/checkpoint-400000steps.pkl \\\n    --feats-scp ./feats.scp \\\n    --normalize-before \\\n    --outdir wav\n2021-08-10 09:13:07,624 (decode:140) INFO: The number of features to be decoded = 2.\n[decode]: 100%|████████████████████████████████████████| 2/2 [00:00<00:00, 13.84it/s, RTF=0.00264]\n2021-08-10 09:13:29,660 (decode:174) INFO: Finished generation of 2 utterances (RTF = 0.005).\n```\n\n## Notes\n\nThe terms of use of the pretrained model follow that of each corpus used for the training. Please carefully check by yourself.  \n\n## References\n\n- [Parallel WaveGAN](https://arxiv.org/abs/1910.11480)\n- [r9y9/wavenet_vocoder](https://github.com/r9y9/wavenet_vocoder)\n- [LiyuanLucasLiu/RAdam](https://github.com/LiyuanLucasLiu/RAdam)\n- [MelGAN](https://arxiv.org/abs/1910.06711)\n- [descriptinc/melgan-neurips](https://github.com/descriptinc/melgan-neurips)\n- [Multi-band MelGAN](https://arxiv.org/abs/2005.05106)\n- [HiFi-GAN](https://arxiv.org/abs/2010.05646)\n- [jik876/hifi-gan](https://github.com/jik876/hifi-gan)\n- [StyleMelGAN](https://arxiv.org/abs/2011.01557)\n\n## Acknowledgement\n\nThe author would like to thank Ryuichi Yamamoto ([@r9y9](https://github.com/r9y9)) for his great repository, paper, and valuable discussions.\n\n## Author\n\nTomoki Hayashi ([@kan-bayashi](https://github.com/kan-bayashi))  \nE-mail: `hayashi.tomoki<at>g.sp.m.is.nagoya-u.ac.jp`",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/kan-bayashi/ParallelWaveGAN",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "parallel-wavegan",
    "package_url": "https://pypi.org/project/parallel-wavegan/",
    "platform": null,
    "project_url": "https://pypi.org/project/parallel-wavegan/",
    "project_urls": {
      "Homepage": "http://github.com/kan-bayashi/ParallelWaveGAN"
    },
    "release_url": "https://pypi.org/project/parallel-wavegan/0.5.5/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Parallel WaveGAN implementation",
    "version": "0.5.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13836037,
  "releases": {
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f1404d8142efd3bcd4519753a2c17d154efae4abe858ea8ab9dccd07d9443a38",
          "md5": "cab57fd5176f234f44326778679feefb",
          "sha256": "73a0726fdda89379e667bfbff9d35853b331cc753248912331b3c8010f593194"
        },
        "downloads": -1,
        "filename": "parallel_wavegan-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "cab57fd5176f234f44326778679feefb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13241,
        "upload_time": "2019-11-04T01:43:29",
        "upload_time_iso_8601": "2019-11-04T01:43:29.352054Z",
        "url": "https://files.pythonhosted.org/packages/f1/40/4d8142efd3bcd4519753a2c17d154efae4abe858ea8ab9dccd07d9443a38/parallel_wavegan-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1.post2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad0f43b3af9c253514bec377f6ab17cdaf5ad4626c09c009dd2c68f355dba62c",
          "md5": "454da469163b58a91b984462766d2a13",
          "sha256": "3e72502356603d517bb14935ca581181b70f7d91af1e7cd5afa1b91bda2be3e8"
        },
        "downloads": -1,
        "filename": "parallel_wavegan-0.2.1.post2.tar.gz",
        "has_sig": false,
        "md5_digest": "454da469163b58a91b984462766d2a13",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21602,
        "upload_time": "2019-11-04T02:23:30",
        "upload_time_iso_8601": "2019-11-04T02:23:30.104146Z",
        "url": "https://files.pythonhosted.org/packages/ad/0f/43b3af9c253514bec377f6ab17cdaf5ad4626c09c009dd2c68f355dba62c/parallel_wavegan-0.2.1.post2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1.post3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bb13fd16ce23b8e17d784e939ad8dae8fe16e17f10bf191ba22f3e3083c1a089",
          "md5": "03d9946e8dbddcc73ce006ac1a3ee51a",
          "sha256": "29f21bebe78f1bc1782818306dfdc6e182bdee6a178b57de6a18761961798432"
        },
        "downloads": -1,
        "filename": "parallel_wavegan-0.2.1.post3.tar.gz",
        "has_sig": false,
        "md5_digest": "03d9946e8dbddcc73ce006ac1a3ee51a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 22076,
        "upload_time": "2019-11-05T01:54:57",
        "upload_time_iso_8601": "2019-11-05T01:54:57.232749Z",
        "url": "https://files.pythonhosted.org/packages/bb/13/fd16ce23b8e17d784e939ad8dae8fe16e17f10bf191ba22f3e3083c1a089/parallel_wavegan-0.2.1.post3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "feb61b28407c2c80b15272e44d250e1ff7edc57e4dd1096e8aacce7f1db1f37a",
          "md5": "4b31308371be32d58aa5163c4167e3f1",
          "sha256": "3e9c4c03e5cd454eb024689540aecc92586307efd8560346fa606c26aabda8ea"
        },
        "downloads": -1,
        "filename": "parallel_wavegan-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4b31308371be32d58aa5163c4167e3f1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 22421,
        "upload_time": "2019-11-05T08:13:20",
        "upload_time_iso_8601": "2019-11-05T08:13:20.294571Z",
        "url": "https://files.pythonhosted.org/packages/fe/b6/1b28407c2c80b15272e44d250e1ff7edc57e4dd1096e8aacce7f1db1f37a/parallel_wavegan-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2.post1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "31039a8cb0253272d83ae43b494e55016b37fd6100bd3863d89308e0951bc7be",
          "md5": "4e4fad55a36d4ed672069db0b394bafe",
          "sha256": "cc199481dc795f2f4dc50b63077b7d8cc0a01a61600c0330492d62999fc6b8d0"
        },
        "downloads": -1,
        "filename": "parallel_wavegan-0.2.2.post1.tar.gz",
        "has_sig": false,
        "md5_digest": "4e4fad55a36d4ed672069db0b394bafe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 22435,
        "upload_time": "2019-11-06T02:25:09",
        "upload_time_iso_8601": "2019-11-06T02:25:09.561799Z",
        "url": "https://files.pythonhosted.org/packages/31/03/9a8cb0253272d83ae43b494e55016b37fd6100bd3863d89308e0951bc7be/parallel_wavegan-0.2.2.post1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "efbc5df47e06260272f42cb7275a4a8a8494468d5bef55c2bb17a546266426ef",
          "md5": "58afcb2c0ee49c26530be7d40626c298",
          "sha256": "aee3272b7c68502ce26714bd66c444069f659d9209f0f875dd7ccabdad020a96"
        },
        "downloads": -1,
        "filename": "parallel_wavegan-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "58afcb2c0ee49c26530be7d40626c298",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 22818,
        "upload_time": "2019-11-08T08:05:32",
        "upload_time_iso_8601": "2019-11-08T08:05:32.798308Z",
        "url": "https://files.pythonhosted.org/packages/ef/bc/5df47e06260272f42cb7275a4a8a8494468d5bef55c2bb17a546266426ef/parallel_wavegan-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d835d2247b4012d3cce0db1bd33adc30b550ec289d45eca7dad874ec8b9b8a7e",
          "md5": "796237242b3ff14fffb8b977c24b25d7",
          "sha256": "1514a699d46a6a14a20b90668d2c5f3c1025e1a7757d2982f232620708e4ef2b"
        },
        "downloads": -1,
        "filename": "parallel_wavegan-0.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "796237242b3ff14fffb8b977c24b25d7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25882,
        "upload_time": "2019-11-11T16:27:47",
        "upload_time_iso_8601": "2019-11-11T16:27:47.572238Z",
        "url": "https://files.pythonhosted.org/packages/d8/35/d2247b4012d3cce0db1bd33adc30b550ec289d45eca7dad874ec8b9b8a7e/parallel_wavegan-0.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.4.post1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fca6cd37560884be16cd63cedae0cf2970ddf0f1523a84e9e035484e225f7a10",
          "md5": "9c878e2f27d2162e2731e0fb504982e6",
          "sha256": "b89ec349693f51c96ebc6ee0c735d2790456d19c816024391473a101fc4d39ad"
        },
        "downloads": -1,
        "filename": "parallel_wavegan-0.2.4.post1.tar.gz",
        "has_sig": false,
        "md5_digest": "9c878e2f27d2162e2731e0fb504982e6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26285,
        "upload_time": "2019-11-12T04:02:29",
        "upload_time_iso_8601": "2019-11-12T04:02:29.338155Z",
        "url": "https://files.pythonhosted.org/packages/fc/a6/cd37560884be16cd63cedae0cf2970ddf0f1523a84e9e035484e225f7a10/parallel_wavegan-0.2.4.post1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.4.post2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8d82af68f104054cbe5638a12b69cf6295dd3411287e4381fc8581a6c183aa97",
          "md5": "500cb2445b4b5ad5bbd558c7c1a9c53e",
          "sha256": "5de11a4e55a4456bebd85561cc1ba573efdd8b7f21123d8e13530a61211cfdd5"
        },
        "downloads": -1,
        "filename": "parallel_wavegan-0.2.4.post2.tar.gz",
        "has_sig": false,
        "md5_digest": "500cb2445b4b5ad5bbd558c7c1a9c53e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26194,
        "upload_time": "2019-11-12T04:08:56",
        "upload_time_iso_8601": "2019-11-12T04:08:56.100607Z",
        "url": "https://files.pythonhosted.org/packages/8d/82/af68f104054cbe5638a12b69cf6295dd3411287e4381fc8581a6c183aa97/parallel_wavegan-0.2.4.post2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9bd822260afeb6a66c327e4126d3c16079fdc908549e8aebfd69493df0a8d090",
          "md5": "9d851de4a76495427f7d2777a9f18c5b",
          "sha256": "4f7448ae5105946bbd947dee25e17e10cb7f310050a47b5bd1aef706e06ed06c"
        },
        "downloads": -1,
        "filename": "parallel_wavegan-0.2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "9d851de4a76495427f7d2777a9f18c5b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 27839,
        "upload_time": "2019-11-13T06:17:56",
        "upload_time_iso_8601": "2019-11-13T06:17:56.737509Z",
        "url": "https://files.pythonhosted.org/packages/9b/d8/22260afeb6a66c327e4126d3c16079fdc908549e8aebfd69493df0a8d090/parallel_wavegan-0.2.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.5.post1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "448752d89ff1697e30acbbe00b1d3380903e1731b4d886fa095eb25263d86779",
          "md5": "892553a5a32c1271a80e63a8f54e3c78",
          "sha256": "3328a5e1debe15269ef4aa60b10c35e427e63ada4b31eee9cddd93b786598613"
        },
        "downloads": -1,
        "filename": "parallel_wavegan-0.2.5.post1.tar.gz",
        "has_sig": false,
        "md5_digest": "892553a5a32c1271a80e63a8f54e3c78",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 27837,
        "upload_time": "2019-11-24T01:31:42",
        "upload_time_iso_8601": "2019-11-24T01:31:42.560400Z",
        "url": "https://files.pythonhosted.org/packages/44/87/52d89ff1697e30acbbe00b1d3380903e1731b4d886fa095eb25263d86779/parallel_wavegan-0.2.5.post1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.5.post2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "73f5df7491ac1d0958776320b227c01fef9ae54855379863a6189f758fb13966",
          "md5": "f0e2c7e9ce2d3d0d9750061164d5b8c5",
          "sha256": "58d0667c9d4b28c0cacc2630a957a688bf738dfc045fe24712588ccfd9fcae4f"
        },
        "downloads": -1,
        "filename": "parallel_wavegan-0.2.5.post2.tar.gz",
        "has_sig": false,
        "md5_digest": "f0e2c7e9ce2d3d0d9750061164d5b8c5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 27846,
        "upload_time": "2019-11-25T03:03:20",
        "upload_time_iso_8601": "2019-11-25T03:03:20.994866Z",
        "url": "https://files.pythonhosted.org/packages/73/f5/df7491ac1d0958776320b227c01fef9ae54855379863a6189f758fb13966/parallel_wavegan-0.2.5.post2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82fa56fe659428f00f6b728ad54b7a864ee57bac5837acf4c82be703f3bb1280",
          "md5": "b9365c1aa0c8e7b12133e435a8821b17",
          "sha256": "cc4f3e826a054475a9a87058cd88b8ed78aa72f371bb340fe59c61e3420afaac"
        },
        "downloads": -1,
        "filename": "parallel_wavegan-0.2.6.tar.gz",
        "has_sig": false,
        "md5_digest": "b9365c1aa0c8e7b12133e435a8821b17",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28573,
        "upload_time": "2019-12-25T09:26:42",
        "upload_time_iso_8601": "2019-12-25T09:26:42.797549Z",
        "url": "https://files.pythonhosted.org/packages/82/fa/56fe659428f00f6b728ad54b7a864ee57bac5837acf4c82be703f3bb1280/parallel_wavegan-0.2.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.6.post1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc4c866ea57f4c29c1110518556fd78ab93385f33134d6f1cbbd5b65aaeebbc9",
          "md5": "20cef8bb1d0158f818e13e2f5efe85d1",
          "sha256": "a569a044d132eb53c44affa3d54d9b6519f5c10e4e6244d76ad58b97b02d31f1"
        },
        "downloads": -1,
        "filename": "parallel_wavegan-0.2.6.post1.tar.gz",
        "has_sig": false,
        "md5_digest": "20cef8bb1d0158f818e13e2f5efe85d1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28545,
        "upload_time": "2019-12-26T05:12:24",
        "upload_time_iso_8601": "2019-12-26T05:12:24.691141Z",
        "url": "https://files.pythonhosted.org/packages/dc/4c/866ea57f4c29c1110518556fd78ab93385f33134d6f1cbbd5b65aaeebbc9/parallel_wavegan-0.2.6.post1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e681555f0370413ce731276f3b802fc5df070fd2b72e79314a20647ce0e361f3",
          "md5": "fc46d53524d1a480c24e7ebff3db95ec",
          "sha256": "574275f5512882809f0207793acaa32ec79a7e377290a97578b1a091b1a81a81"
        },
        "downloads": -1,
        "filename": "parallel_wavegan-0.2.7.tar.gz",
        "has_sig": false,
        "md5_digest": "fc46d53524d1a480c24e7ebff3db95ec",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29427,
        "upload_time": "2020-01-14T06:21:38",
        "upload_time_iso_8601": "2020-01-14T06:21:38.233017Z",
        "url": "https://files.pythonhosted.org/packages/e6/81/555f0370413ce731276f3b802fc5df070fd2b72e79314a20647ce0e361f3/parallel_wavegan-0.2.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.7.post1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e004e862485d2bd4ba6fc0854e1838dc0f4267a06ae0c9f1f39f307143edb67f",
          "md5": "43daae9ddafbb8118a032511fc5a52a5",
          "sha256": "4ec00727a8329f73c5d61579876a9717b9f222e78467e2904ee65ef1c7713f2e"
        },
        "downloads": -1,
        "filename": "parallel_wavegan-0.2.7.post1.tar.gz",
        "has_sig": false,
        "md5_digest": "43daae9ddafbb8118a032511fc5a52a5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 31289,
        "upload_time": "2020-01-14T07:03:52",
        "upload_time_iso_8601": "2020-01-14T07:03:52.029664Z",
        "url": "https://files.pythonhosted.org/packages/e0/04/e862485d2bd4ba6fc0854e1838dc0f4267a06ae0c9f1f39f307143edb67f/parallel_wavegan-0.2.7.post1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.8.post1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4aa90099fd305180acaf59e9eff75087360d02eb64271c9188684cb1c264955b",
          "md5": "23be022d8d7ad2531c3d26fbd47974c2",
          "sha256": "2f0cb5821495dc35e299518b44701c93f516a73c7bb827e7bad5b9434e5e9467"
        },
        "downloads": -1,
        "filename": "parallel_wavegan-0.2.8.post1.tar.gz",
        "has_sig": false,
        "md5_digest": "23be022d8d7ad2531c3d26fbd47974c2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 34349,
        "upload_time": "2020-02-08T03:15:22",
        "upload_time_iso_8601": "2020-02-08T03:15:22.433698Z",
        "url": "https://files.pythonhosted.org/packages/4a/a9/0099fd305180acaf59e9eff75087360d02eb64271c9188684cb1c264955b/parallel_wavegan-0.2.8.post1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "923a7be6395952d77b6fac953d422e58a45ccdde59ff097ef34013cfc2f95fdd",
          "md5": "aa656af018c8ce3dc8b3dc75f632b56b",
          "sha256": "35456b0287e5df91c8508de51e8e339d7616ce3273fba0bb66ce95048105d264"
        },
        "downloads": -1,
        "filename": "parallel_wavegan-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "aa656af018c8ce3dc8b3dc75f632b56b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 36869,
        "upload_time": "2020-02-15T10:43:30",
        "upload_time_iso_8601": "2020-02-15T10:43:30.599597Z",
        "url": "https://files.pythonhosted.org/packages/92/3a/7be6395952d77b6fac953d422e58a45ccdde59ff097ef34013cfc2f95fdd/parallel_wavegan-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cb8d2db623b5ed19180746a3595b9567ac10663fd4dd779fbdc72166c5680f84",
          "md5": "7e7edcc00bc34ba4dd0d1cc47d6886e5",
          "sha256": "19105c404db2485f564de1311ddb366a8728152e549e6017f76cc7f4159c4ff4"
        },
        "downloads": -1,
        "filename": "parallel_wavegan-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7e7edcc00bc34ba4dd0d1cc47d6886e5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 37804,
        "upload_time": "2020-02-26T14:40:58",
        "upload_time_iso_8601": "2020-02-26T14:40:58.882357Z",
        "url": "https://files.pythonhosted.org/packages/cb/8d/2db623b5ed19180746a3595b9567ac10663fd4dd779fbdc72166c5680f84/parallel_wavegan-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1.post1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "db40245b61bc8bc78c4ddeda585be21b7edbe8e326bed71f39269fa541a35a4c",
          "md5": "7925b1f0571da8b04dd4e3b3da990bcf",
          "sha256": "aebd1922128924a0015382eb4430f05cf83218d3df23009fd8a0eea9ca812ef6"
        },
        "downloads": -1,
        "filename": "parallel_wavegan-0.3.1.post1.tar.gz",
        "has_sig": false,
        "md5_digest": "7925b1f0571da8b04dd4e3b3da990bcf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 37821,
        "upload_time": "2020-02-28T14:38:31",
        "upload_time_iso_8601": "2020-02-28T14:38:31.579813Z",
        "url": "https://files.pythonhosted.org/packages/db/40/245b61bc8bc78c4ddeda585be21b7edbe8e326bed71f39269fa541a35a4c/parallel_wavegan-0.3.1.post1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "668526ecb5f8169b468a298c7e7860967fd77890d56580c8661c245c85bedec7",
          "md5": "41c384836321ede009bdacfc2b04ccf2",
          "sha256": "2f78afc4b08544849b2a3e1bf6f37b714f10a3852c1f3622fa75f583bb41952d"
        },
        "downloads": -1,
        "filename": "parallel_wavegan-0.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "41c384836321ede009bdacfc2b04ccf2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 37708,
        "upload_time": "2020-03-06T18:20:06",
        "upload_time_iso_8601": "2020-03-06T18:20:06.880723Z",
        "url": "https://files.pythonhosted.org/packages/66/85/26ecb5f8169b468a298c7e7860967fd77890d56580c8661c245c85bedec7/parallel_wavegan-0.3.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3461b5540e9448974d2bf38a557e6d6b19abf616b98fae68db9931758ce26d37",
          "md5": "cd232078dc130953eed4465f1a6b5478",
          "sha256": "3758cab564f69bf8d80694171dfba344b9d82c354561572d96f0589be1244635"
        },
        "downloads": -1,
        "filename": "parallel_wavegan-0.3.3.tar.gz",
        "has_sig": false,
        "md5_digest": "cd232078dc130953eed4465f1a6b5478",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 38690,
        "upload_time": "2020-03-07T07:35:50",
        "upload_time_iso_8601": "2020-03-07T07:35:50.628488Z",
        "url": "https://files.pythonhosted.org/packages/34/61/b5540e9448974d2bf38a557e6d6b19abf616b98fae68db9931758ce26d37/parallel_wavegan-0.3.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5b264281e991aaebc2a64e90a00e8ff3150a503863c4d2361b24f3b3f2480dfc",
          "md5": "6678ae0b967973df6a649b4528de5077",
          "sha256": "abe9608de3c387107d31164f5e5794befe3a75eb52130ef038f83644a6e50d09"
        },
        "downloads": -1,
        "filename": "parallel_wavegan-0.3.4.tar.gz",
        "has_sig": false,
        "md5_digest": "6678ae0b967973df6a649b4528de5077",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 39145,
        "upload_time": "2020-03-09T07:14:05",
        "upload_time_iso_8601": "2020-03-09T07:14:05.922777Z",
        "url": "https://files.pythonhosted.org/packages/5b/26/4281e991aaebc2a64e90a00e8ff3150a503863c4d2361b24f3b3f2480dfc/parallel_wavegan-0.3.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "81ba7018a0c68064604d72fd362516a6697e3bead99c24ab36a210ec0d0e2b11",
          "md5": "63553e3ec8031da74b3ebea602c2ec5f",
          "sha256": "13f8b025ab5601df6478ce053e5ed9f9fe8edff51f19150bd8b01a39694d9396"
        },
        "downloads": -1,
        "filename": "parallel_wavegan-0.3.5.tar.gz",
        "has_sig": false,
        "md5_digest": "63553e3ec8031da74b3ebea602c2ec5f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 41812,
        "upload_time": "2020-04-24T10:27:38",
        "upload_time_iso_8601": "2020-04-24T10:27:38.449889Z",
        "url": "https://files.pythonhosted.org/packages/81/ba/7018a0c68064604d72fd362516a6697e3bead99c24ab36a210ec0d0e2b11/parallel_wavegan-0.3.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6a147099dea1ed33aebefa37d22d30618b0089aee90d38847da0fea7326545fa",
          "md5": "f9ecf7d641acedbb09be47f90261bbdf",
          "sha256": "2d5fe4cca731e1d82141497d4cbd966dc4da70c67a4f364c606acdc1b2912b6e"
        },
        "downloads": -1,
        "filename": "parallel_wavegan-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f9ecf7d641acedbb09be47f90261bbdf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 46033,
        "upload_time": "2020-05-22T07:21:17",
        "upload_time_iso_8601": "2020-05-22T07:21:17.602781Z",
        "url": "https://files.pythonhosted.org/packages/6a/14/7099dea1ed33aebefa37d22d30618b0089aee90d38847da0fea7326545fa/parallel_wavegan-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "113bbae8f494a18d80ecde2481a34affaef4a5b42e82e5c1d5845fc3ed5689f5",
          "md5": "14d7131f3b85e59962008e66c1855909",
          "sha256": "46faed82985e1caa64af4514ec7bf02ddee6fcad70cbdc26b5189bb9e990edb8"
        },
        "downloads": -1,
        "filename": "parallel_wavegan-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "14d7131f3b85e59962008e66c1855909",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 47187,
        "upload_time": "2020-06-28T13:02:38",
        "upload_time_iso_8601": "2020-06-28T13:02:38.841165Z",
        "url": "https://files.pythonhosted.org/packages/11/3b/bae8f494a18d80ecde2481a34affaef4a5b42e82e5c1d5845fc3ed5689f5/parallel_wavegan-0.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70a1d41cb742a565a1bd8aa2c0329bac09118addaacccb36b835b47813460379",
          "md5": "6eb225a2753a1f7eea89ad41898961fc",
          "sha256": "2919b17c51f9b5770d0b90ddd8cdce5b82ebdf04f6f28d7cdf072be1efb5a6b5"
        },
        "downloads": -1,
        "filename": "parallel_wavegan-0.4.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6eb225a2753a1f7eea89ad41898961fc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 47420,
        "upload_time": "2020-08-15T09:20:50",
        "upload_time_iso_8601": "2020-08-15T09:20:50.735867Z",
        "url": "https://files.pythonhosted.org/packages/70/a1/d41cb742a565a1bd8aa2c0329bac09118addaacccb36b835b47813460379/parallel_wavegan-0.4.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "db385159c3f71a3d1f7f441901e7233c9c6bddea250193d982c302ce3bea421a",
          "md5": "7edbe7c84cfc1b87e611bf7a11980c1e",
          "sha256": "f8e0588318cac8be743c902eb0b8eedc3d23d4a07fd3be6b83f617f2d7a841ad"
        },
        "downloads": -1,
        "filename": "parallel_wavegan-0.4.3.tar.gz",
        "has_sig": false,
        "md5_digest": "7edbe7c84cfc1b87e611bf7a11980c1e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 47787,
        "upload_time": "2020-08-16T13:06:25",
        "upload_time_iso_8601": "2020-08-16T13:06:25.690958Z",
        "url": "https://files.pythonhosted.org/packages/db/38/5159c3f71a3d1f7f441901e7233c9c6bddea250193d982c302ce3bea421a/parallel_wavegan-0.4.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b14331793cf670460a87cf1a7d1f3be932f58368df005b137380651f19cc7bbf",
          "md5": "bb8cc81c169e3000a4e02a5fab5344ce",
          "sha256": "4ed79b37df9a078c301c5ed9b112c5bebe443874c96d8280fa6b7025c9de9b65"
        },
        "downloads": -1,
        "filename": "parallel_wavegan-0.4.4.tar.gz",
        "has_sig": false,
        "md5_digest": "bb8cc81c169e3000a4e02a5fab5344ce",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 47941,
        "upload_time": "2020-08-18T06:03:16",
        "upload_time_iso_8601": "2020-08-18T06:03:16.398422Z",
        "url": "https://files.pythonhosted.org/packages/b1/43/31793cf670460a87cf1a7d1f3be932f58368df005b137380651f19cc7bbf/parallel_wavegan-0.4.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6299968202d72f7c36453ac19299bb286e8c5ba9eaf04c66acb66720ad364919",
          "md5": "30a25a374ba60ee8d32e1a73edb8c0a2",
          "sha256": "5caaf6b7d7fcb992d959e25a99c0927224e5fdf0c5eb323dd00424ab99bd636d"
        },
        "downloads": -1,
        "filename": "parallel_wavegan-0.4.5.tar.gz",
        "has_sig": false,
        "md5_digest": "30a25a374ba60ee8d32e1a73edb8c0a2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 49025,
        "upload_time": "2020-08-18T12:11:15",
        "upload_time_iso_8601": "2020-08-18T12:11:15.602416Z",
        "url": "https://files.pythonhosted.org/packages/62/99/968202d72f7c36453ac19299bb286e8c5ba9eaf04c66acb66720ad364919/parallel_wavegan-0.4.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3643218a1908a3286592bed9976ec51119ceb9a1fe1f7ff43cb33bdc364c3028",
          "md5": "7fc92b986ff1f2bfe3b8ff0c3f172419",
          "sha256": "5763e0ec1038aed95fa75c9ebe3690883ecb445c3c088bce073181cb6206c94c"
        },
        "downloads": -1,
        "filename": "parallel_wavegan-0.4.6.tar.gz",
        "has_sig": false,
        "md5_digest": "7fc92b986ff1f2bfe3b8ff0c3f172419",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 50124,
        "upload_time": "2020-08-31T05:37:20",
        "upload_time_iso_8601": "2020-08-31T05:37:20.546040Z",
        "url": "https://files.pythonhosted.org/packages/36/43/218a1908a3286592bed9976ec51119ceb9a1fe1f7ff43cb33bdc364c3028/parallel_wavegan-0.4.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d4dd907f654ec08506af8a6a23dc2fcb2c911ae41a3b0a2fc3d97a3e82b69546",
          "md5": "7827972bd0023575957024be87f5ec81",
          "sha256": "1ab4a86d35b6f53a060ec3d882088935e5103d6c703c501b493bfa81ffd502ad"
        },
        "downloads": -1,
        "filename": "parallel_wavegan-0.4.7.tar.gz",
        "has_sig": false,
        "md5_digest": "7827972bd0023575957024be87f5ec81",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 50081,
        "upload_time": "2020-10-06T00:12:39",
        "upload_time_iso_8601": "2020-10-06T00:12:39.454792Z",
        "url": "https://files.pythonhosted.org/packages/d4/dd/907f654ec08506af8a6a23dc2fcb2c911ae41a3b0a2fc3d97a3e82b69546/parallel_wavegan-0.4.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a0f7cee319213f4a2691194d7d73d0d1308c16a6a1f0641ba4c640aa03422557",
          "md5": "d95c6ba8b021fc622bc3b3d78e22801c",
          "sha256": "5cce4f61e723e03757101c967166a9f3debb73d577296e31d712267a70073fb6"
        },
        "downloads": -1,
        "filename": "parallel_wavegan-0.4.8.tar.gz",
        "has_sig": false,
        "md5_digest": "d95c6ba8b021fc622bc3b3d78e22801c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 50277,
        "upload_time": "2020-11-02T02:31:13",
        "upload_time_iso_8601": "2020-11-02T02:31:13.098871Z",
        "url": "https://files.pythonhosted.org/packages/a0/f7/cee319213f4a2691194d7d73d0d1308c16a6a1f0641ba4c640aa03422557/parallel_wavegan-0.4.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7ca13afde03dec18b1e1d2f0b9ee9532c591a5cbc60a468dd225b3e45a454c26",
          "md5": "49df869782535cfe4a67d6196ad95062",
          "sha256": "b224b9b9fdad47248fea18bf70f2c1e3d7daa07016cb1c906cbeb009b467d205"
        },
        "downloads": -1,
        "filename": "parallel_wavegan-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "49df869782535cfe4a67d6196ad95062",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 59373,
        "upload_time": "2021-08-07T12:56:36",
        "upload_time_iso_8601": "2021-08-07T12:56:36.953739Z",
        "url": "https://files.pythonhosted.org/packages/7c/a1/3afde03dec18b1e1d2f0b9ee9532c591a5cbc60a468dd225b3e45a454c26/parallel_wavegan-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "92a6e0209e9ec5a9524a9840e682fc476410c28c7d37b07ed385723001ed2baa",
          "md5": "687a530a261d2887e98402568d41a423",
          "sha256": "4e30d087dd8ec125e2058327442b44f2ef8cdd16ce6738efa876c667fd8165b6"
        },
        "downloads": -1,
        "filename": "parallel_wavegan-0.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "687a530a261d2887e98402568d41a423",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 59877,
        "upload_time": "2021-08-08T12:46:33",
        "upload_time_iso_8601": "2021-08-08T12:46:33.134785Z",
        "url": "https://files.pythonhosted.org/packages/92/a6/e0209e9ec5a9524a9840e682fc476410c28c7d37b07ed385723001ed2baa/parallel_wavegan-0.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "41dfc3c447e91dc1b09288016116740dd3b9e1bae43ff286f4e0a0b9c172d90b",
          "md5": "c7a29babd4c3dfdd137144c10d9ca6c8",
          "sha256": "abbcd3e5ee04da6c73a458ce9fb89046d77c7eb608e24ba2914bdd540a988637"
        },
        "downloads": -1,
        "filename": "parallel_wavegan-0.5.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c7a29babd4c3dfdd137144c10d9ca6c8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 67596,
        "upload_time": "2021-08-24T07:26:40",
        "upload_time_iso_8601": "2021-08-24T07:26:40.645787Z",
        "url": "https://files.pythonhosted.org/packages/41/df/c3c447e91dc1b09288016116740dd3b9e1bae43ff286f4e0a0b9c172d90b/parallel_wavegan-0.5.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "00d79bf579b0649a599437ae7ae7dd09ae51a8ff91da948bf62de952b0824c47",
          "md5": "85af03bf2f77fb622993bcaef0442d97",
          "sha256": "164a9f7797f1ae2e0eb0644c537ecddeb2c1ce52d82fbb7c73c682fb01b1c88a"
        },
        "downloads": -1,
        "filename": "parallel_wavegan-0.5.3.tar.gz",
        "has_sig": false,
        "md5_digest": "85af03bf2f77fb622993bcaef0442d97",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 68135,
        "upload_time": "2021-08-26T00:58:26",
        "upload_time_iso_8601": "2021-08-26T00:58:26.471904Z",
        "url": "https://files.pythonhosted.org/packages/00/d7/9bf579b0649a599437ae7ae7dd09ae51a8ff91da948bf62de952b0824c47/parallel_wavegan-0.5.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "660b5a5d22447da45fa65faad60cc22c6fd35a8ac8f50b026fe5023ca7fcf385",
          "md5": "27e9b6c643a12da36eceab2f582aeb69",
          "sha256": "44c5da8fff514ae4cbd86885611c5e0564220d246422b12512911119aa170804"
        },
        "downloads": -1,
        "filename": "parallel_wavegan-0.5.4.tar.gz",
        "has_sig": false,
        "md5_digest": "27e9b6c643a12da36eceab2f582aeb69",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 68960,
        "upload_time": "2022-02-10T00:50:51",
        "upload_time_iso_8601": "2022-02-10T00:50:51.131850Z",
        "url": "https://files.pythonhosted.org/packages/66/0b/5a5d22447da45fa65faad60cc22c6fd35a8ac8f50b026fe5023ca7fcf385/parallel_wavegan-0.5.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "165ba1b594076db3883a798d721293ed21e20fc571e0d576c1203924648567c0",
          "md5": "83712e3a256c7a0740ed9f0d24a9a173",
          "sha256": "3b40b854d9b878a1c1a614a7f08950a68d453e913461b1f5d0446d48500963ea"
        },
        "downloads": -1,
        "filename": "parallel_wavegan-0.5.5.tar.gz",
        "has_sig": false,
        "md5_digest": "83712e3a256c7a0740ed9f0d24a9a173",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 72114,
        "upload_time": "2022-05-17T01:34:03",
        "upload_time_iso_8601": "2022-05-17T01:34:03.970855Z",
        "url": "https://files.pythonhosted.org/packages/16/5b/a1b594076db3883a798d721293ed21e20fc571e0d576c1203924648567c0/parallel_wavegan-0.5.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "165ba1b594076db3883a798d721293ed21e20fc571e0d576c1203924648567c0",
        "md5": "83712e3a256c7a0740ed9f0d24a9a173",
        "sha256": "3b40b854d9b878a1c1a614a7f08950a68d453e913461b1f5d0446d48500963ea"
      },
      "downloads": -1,
      "filename": "parallel_wavegan-0.5.5.tar.gz",
      "has_sig": false,
      "md5_digest": "83712e3a256c7a0740ed9f0d24a9a173",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 72114,
      "upload_time": "2022-05-17T01:34:03",
      "upload_time_iso_8601": "2022-05-17T01:34:03.970855Z",
      "url": "https://files.pythonhosted.org/packages/16/5b/a1b594076db3883a798d721293ed21e20fc571e0d576c1203924648567c0/parallel_wavegan-0.5.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}