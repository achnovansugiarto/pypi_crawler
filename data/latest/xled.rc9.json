{
  "info": {
    "author": "Pavol Babinčák",
    "author_email": "scroolik@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "==================================================================\nXLED - unofficial control of Twinkly - Smart Decoration LED lights\n==================================================================\n\nXLED is a python library and command line interface (CLI) to control\n`Twinkly`_ - Smart Decoration LED lights for Christmas.\n\nOfficial materials says:\n\n    Twinkly is a LED light device that you can control via smartphone. It\n    allows you to play with colouful and animated effects, or create new ones.\n    Decoration lights, not suitable for household illumination.\n\nSince its `Kickstarter project`_ in 2016 many products were introduced with\nvarying properties and features. Most notably products released since September\n2019 are identified as Generation II. Older products are since then referred as\nGeneration I.\n\nLibrary and CLI are free software available under MIT license.\n\n\nInstallation\n------------\n\nBoth library and CLI tool are supported on Linux, primarily Fedora.\n\n1. First make sure that you have `pip installed`_. E.g. for Fedora:\n\n.. code-block::\n\n    $ sudo dnf install python3-pip python3-wheel\n\n2. You might want to `create and activate a virtual environment`_. E.g.:\n\n.. code-block::\n\n    $ mkdir -p ~/.virtualenvs\n    $ python3 -m venv ~/.virtualenvs/xled\n    $ source ~/.virtualenvs/xled/bin/activate\n\n3. Install `xled from PyPI`_:\n\n.. code-block::\n\n   $ python3 -m pip install --upgrade xled\n\nUsage\n-----\n\nIf you have installed the project into virtual environment, activate it first. E.g.\n\n.. code-block::\n\n    $ source ~/.virtualenvs/xled/bin/activate\n\nUse of the library:\n\n.. code-block:: python\n\n    >>> import xled\n    >>> discovered_device = xled.discover.discover()\n    >>> discovered_device.id\n    'Twinkly_33AAFF'\n    >>> control = xled.ControlInterface(discovered_device.ip_address, discovered_device.hw_address)\n    >>> control.set_mode('movie')\n    <ApplicationResponse [1000]>\n    >>> control.get_mode()['mode']\n    'movie'\n    >>> control.get_device_info()['number_of_led']\n    210\n\n`Documentation for the library can be found online`_.\n\nUse of the CLI:\n\n.. code-block:: console\n\n    $ xled on\n    Looking for any device...\n    Working on device: Twinkly_33AAFF\n    Turned on.\n\nFor more commands and options see `xled --help`.\n\n\nWhy?\n----\n\nMy first Twinkly was 105 LEDs starter light set. That was the latest available\nmodel in 2017: TW105S-EU. As of December 2017 there are only two ways to\ncontrol lights: mobile app on Android or iOS or hardware button on the cord.\n\nAndroid application didn't work as advertised on my Xiaomi Redmi 3S phone. On\nfirst start it connected and disconnected in very fast pace (like every 1-2\nseconds) to the hardware. I wasn't able to control anything at all. Later I\nwanted to connect it to my local WiFi network. But popup dialog that shouldn't\nhave appear never did so.\n\nPublic API was `promised around Christmas 2016`_ for next season. Later update\nfrom October 2016 it seems `API won't be available any time soon`_:\n\n    API for external control are on our dev check list, we definitely need some\n    feedback from the community to understand which could be a proper core set\n    to start with.\n\nIt turned out that application uses HTTP to control lights. I ended up with\ncapturing network traffic and `documented this private API`_. In the end I'm\nable to configure the device pretty easilly.\n\nAs of 2020 Twinkly devices can be controlled by Amazon Alexa and Google\nAssistant as well. Mobile application now requires an account to operate lights\neven locally. No sign of public API for local devices though. Therefore with my\nsecond device - Twinkly 210 RGB+W Wall I keep improving this library and CLI\ndocumentation to be able to operate my devices locally and not rely on\navailability of manufacturer's servers.\n\nReferences\n----------\n\nUnofficial documentation of private protocol and API is `available online`_.\n\nThere are other projects that might be more suitable for your needs:\n\n* `Twinkly integration in Home Assistant`_\n* SmartThings:\n\n  * `Twinkly integration in SmartThings by StevenJonSmith`_\n  * `Twinkly integration in SmartThings by Dameon87`_\n\n* `TwinklyTree Binding`_ for openHAB\n* `Twinkly HomeKit Hub for Mongoose OS`_ using `Twinkly library for Mongoose OS`_\n* `TwinklyWPF`_ - .net 5 GUI and API library\n* `ioBroker.twinkly`_ - twinkly adapter for ioBroker to communicate with the Twinkly lights\n* `Twinkly.vb for HomeSeer`_\n* `thingzi-logic-twinkly`_ - Twinkly lights integration for node red\n* Python class to interact with generation I device and IDA Pro loader of firmware binary in `Twinkly Twinkly Little Star by F-Secure LABS`_.\n\nCredits\n---------\n\nThis package was created with Cookiecutter_ and the\n`audreyr/cookiecutter-pypackage`_ project template.\n\n.. _`Twinkly`: https://www.twinkly.com/\n.. _`Kickstarter project`: https://www.kickstarter.com/projects/twinkly/twinkly-smart-decoration-for-your-christmas\n.. _`available online`: https://xled-docs.readthedocs.io\n.. _`documented this private API`: https://xled-docs.readthedocs.io\n.. _`promised around Christmas 2016`: https://www.kickstarter.com/projects/twinkly/twinkly-smart-decoration-for-your-christmas/comments?cursor=15497325#comment-15497324\n.. _`API won't be available any time soon`: https://www.kickstarter.com/projects/twinkly/twinkly-smart-decoration-for-your-christmas/comments?cursor=14619713#comment-14619712\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`documented this private API`: https://xled-docs.readthedocs.io\n.. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage\n.. _`Twinkly library for Mongoose OS`: https://github.com/d4rkmen/twinkly\n.. _`Twinkly HomeKit Hub for Mongoose OS`: https://github.com/d4rkmen/twinkly-homekit\n.. _`TwinklyWPF`: https://github.com/MarkAlanJones/TwinklyWPF\n.. _`Twinkly integration in Home Assistant`: https://www.home-assistant.io/integrations/twinkly/\n.. _`ioBroker.twinkly`: https://www.npmjs.com/package/iobroker.twinkly\n.. _`Twinkly.vb for HomeSeer`: https://forums.homeseer.com/forum/developer-support/scripts-plug-ins-development-and-libraries/script-plug-in-library/1348314-twinkly-vb-christmas-tree-lights-with-predefined-and-custom-animations\n.. _`TwinklyTree Binding`: https://github.com/mvanhulsentop/openhab-addons/tree/twinklytree/bundles/org.openhab.binding.twinklytree\n.. _`Twinkly Twinkly Little Star by F-Secure LABS`: https://labs.f-secure.com/blog/twinkly-twinkly-little-star/\n.. _`Twinkly integration in SmartThings by StevenJonSmith`: https://github.com/StevenJonSmith/SmartThings\n.. _`Twinkly integration in SmartThings by Dameon87`: https://github.com/Dameon87/SmartThings\n.. _`thingzi-logic-twinkly`: https://www.npmjs.com/package/thingzi-logic-twinkly\n.. _`pip installed`: https://packaging.python.org/guides/installing-using-linux-tools/\n.. _`create and activate a virtual environment`: https://packaging.python.org/tutorials/installing-packages/#creating-virtual-environments\n.. _`xled from PyPI`: https://pypi.org/project/xled/\n.. _`Documentation for the library can be found online`: https://xled.readthedocs.io\n\n.. image:: https://badges.gitter.im/xled-community/chat.svg\n   :alt: Join the chat at https://gitter.im/xled-community/chat\n   :target: https://gitter.im/xled-community/chat?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\n\n\n=======\nHistory\n=======\n\n0.7.0 (2021-11-28)\n------------------\n* Major changes:\n\n  * Add realtime UDP protocol including unit tests\n  * Add several missing rest calls in ControlInterface\n  * Unit test all methods in ControlInterface\n\n* Other bugfixes and improvements:\n\n  * Provide a short guide how to install packages from PyPI\n  * Provide `python_requires` in setup.py\n  * Add project URLs to metadata\n  * Corrected import of security, and removed some old comments\n  * Make encrypt_wifi_password work also with python3\n  * More flexible parameters to set_mqtt_config\n  * Enable options in set_network_mode_ap and _station\n  * Enable relative values in set_brightness\n  * Make firmware_update compatible with Generation II\n  * Fix error in `python setup.py install` (fix #82)\n  * Use generic Exception in discover module\n  * On Python 2.7 ignore VCR deprecation warning\n  * On Python 2.7 ignore cryptography deprecation warning\n  * Fix dependencies for python 2.7\n  * Don't debug log reapped devices\n  * Time format as hardcoded value instead of locale specific\n  * Raise an exception with a error message firmware update failed\n  * Get MAC address from gestalt API call\n  * Always UTF-8 decode response from JOINED event in discovery\n  * Log instead of print in discovery interface and return on unknown event\n  * If hw_address wasn't possible to resolve don't use None as a peer\n  * Configure all loggers used by CLI with cli_log.basic_config()\n  * Make response assertions less strict\n  * Reformat setup py so tox tests pass\n\n* Documentation updates:\n\n  * Update example in README to use reflect change in API\n  * Add Gitter badge\n  * Update of xled and xled-docs should be done hand in hand\n  * Remove Enhancement section from Contributing as there is no such thing\n  * Write down support for OS, devices, python and guide to CLI\n  * Rewrite README file\n  * Fix documentation for set_led_movie_config\n\n* Changes in CI/CD:\n\n  * Run linters as GitHub action\n  * Use generic python3 in black pre-commit config\n  * Configure pytest to collect tests only from tests/\n  * Use GitHub action for PyPI publish\n  * Update URL for CI from Travis to GitHub actions\n  * One more place to update supported python versions\n  * Make Travis environment python again\n  * Remove non-deploy section from travis.yml\n  * Fix typo in travis.yml dep install\n  * Ignore Flake8 error on Sphinx configuration file\n  * Run pytest directly from Tox\n  * Add bug report template for GitHub issues and reference it\n  * Switch to token authentication for deployment to pypi through Travis\n\n* Changes in dependencies and python versions:\n\n  * Add 3.10 to supported Python versions\n  * Update coverage from 4.4.2 to 5.5\n  * Update pip from 20.2.3 to 21.1\n  * Update travis.yaml: remove python 3.5 and add 3.8 and 3.9\n  * Add 3.9 to supported Python versions\n  * Drop Python 3.5 support\n  * Drop compatibility code for Python version 3.4\n  * Add Python 3.8 as a supported language\n  * Update pip from 19.0.3 to 20.2.3\n  * Update sphinx from 1.6.5 to 3.0.4\n\n0.6.1 (2020-01-17)\n------------------\n* Make tests with tox pass again so release can be automatically deployed:\n\n  * Add Black reformatter to tox linter envs\n  * Tox config: new linters env to run Flake8\n  * Tox config update: Flake8 against tests/ and setup.py as well\n  * Make xled.compat pass Flake8 for F821 undefined names\n  * Refactor beacon processing of seen/new peer into separate methods\n  * Reformat test_control test with black\n  * Make tox install test-only requires\n  * Use conditional deployment to pypi with travis only from master\n\n0.6.0 (2020-01-15)\n------------------\n* Drop support for python 3.4\n* Explicitly specify Linux as only operating system\n* Automatically refresh token if expired\n* Add brightness management\n* Check response is OK before trying to decode JSON from body\n* Use id instead of name in discovery\n* Device class representing the device\n* Get network status in control interface\n* Use response from alive device to check if we reached discover timeout\n* Provide generator xdiscover() to return all or specific devices\n* Support timeout for discovery\n* When agent stops stop ping task and processing responses\n* Provide close() for UDPClient and use it on DiscoveryInterface.stop()\n* Do not continue receiving more data if UDP recv timeouts\n* Other bugfixes and improvements:\n\n  * Fix assertions\n  * Expose HighControlInterface on package level\n  * If ApplicationError is raised, store value of response attribute\n  * Allow disable/enable of brightness without value change\n  * Update wheel from 0.30.0 to 0.33.1\n  * Update pip from 9.0.1 to 19.0.3\n  * Add python 3.6 and 3.7 to Travis config\n\n0.5.0 (2018-12-09)\n------------------\n\n* CLI to update firmware\n* Example of library call and CLI usage\n* Option to select device by hostname in CLI and ping in discovery\n* New HighControlInterface() to aggregate and abstract low-level calls\n* CLI and HighControlInterface way to set static single color\n* Other bugfixes and improvements:\n\n  * Fix typo in CLI error message\n  * Print message before discovery on CLI\n  * Refactor: join consecutive strings on same line\n  * Print better message after device has been discovered over CLI\n  * Regenerate documentation index of a package\n  * Fix typo in control.set_mode() documentation\n  * Return named tuple in discover.discover()\n  * Use discovery and named tuple in example of library use\n  * Do not assert return value in ControlInterface.set_led_movie_full()\n  * Return ApplicationResponse for ControlInterface.set_led_movie_config()\n  * Return ApplicationResponse for control.ControlInterface.led_reset()\n  * Remove unneeded debug message from DiscoveryInterface.__init__()\n\n0.4.0 (2018-12-03)\n------------------\n\n* Support Python 3.6 and 3.7 including tests and documentation\n* Python 3 support with pyzmq >= 17.0 and Tornado 5\n* Remove redundant udplib\n* Other Python 3 compatibility:\n\n  * In Python 3+ import Mapping from collections.abc\n  * Python 3 compatible encoding of discovered IP and HW address and name\n  * Make xled.security.xor_strings() compatible with Python 2 and 3\n  * Treat PING_MESSAGE as bytes to simplify handling Python 2 and 3\n\n* Other bugfixes and improvements:\n\n  * Remove mention of PyPy from docs as it wasn't ever tested on it\n  * Improve robustness with sending messages from agent to interface\n  * Escape display of binary challenge in debug log of xled.auth\n  * Ignore (usually own) PING_MESSAGE on network when handling responses\n\n0.3.1 (2018-11-27)\n------------------\n\n* Update changelog for version 0.3.0\n* Update description in setup.py to refer to CLI\n* Fix JSON payload sent to server for firmware update.\n\n0.3.0 (2018-11-27)\n------------------\n\n* CLI interface\n* Discovery interface - currently works only on Python 2\n* Add support for API led/movie/full and corresponding CLI upload-movie\n* New Authentication mechanism - use session\n* Rename authentication module from long challenge_response_auth to auth\n* Change interface of ApplicationResponse to collections.Mapping\n* Python files reformatted with Black\n* Other bugfixes and improvements:\n\n  * Really show ApplicationResponse status in repr() when available\n  * Catch JSONDecodeError in Python 3.5+ in ApplicationResponse\n  * New shortcut method ok() of ApplicationResponse\n  * Make ApplicationResponse's attribute status_code @property\n  * Improve error reporting during parsing of ApplicationResponse\n  * If repr() of ApplicationResponse is called parse response first\n  * Check status of underlying requests' Response if requested\n  * Accept requests' response as attribute to class ApplicationResponse\n  * Move generate_challenge to security module\n  * Unit tests for control interface\n  * Run unit tests on supported python versions with tox and Travis\n  * Configuration for pre-commit-hooks\n  * Initial pyup configuration\n  * Don't run Tox on Travis on Python 3.3\n  * Update coverage\n\n0.2.1 (2018-01-02)\n------------------\n\n* Add missing MANIFEST.in\n* Configure Travis for automatic deployment to PyPI\n\n0.2.0 (2018-01-02)\n------------------\n\n* First Python control interface.\n\n0.1.0 (2017-12-17)\n------------------\n\n* Low level control interface.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/scrool/xled",
    "keywords": "xled,twinkly",
    "license": "MIT license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "xled",
    "package_url": "https://pypi.org/project/xled/",
    "platform": "",
    "project_url": "https://pypi.org/project/xled/",
    "project_urls": {
      "Chanelog": "https://xled.readthedocs.io/en/latest/history.html",
      "Documentation": "https://xled.readthedocs.io/",
      "Homepage": "https://github.com/scrool/xled",
      "Source": "https://github.com/scrool/xled"
    },
    "release_url": "https://pypi.org/project/xled/0.7.0/",
    "requires_dist": [
      "click-log",
      "cryptography",
      "requests-toolbelt",
      "requests",
      "tornado (>=5.0.0)",
      "pyzmq (>=17)",
      "Click (>=6.0)",
      "netaddr",
      "vcrpy-unittest ; extra == 'tests'"
    ],
    "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2,!=3.3,!=3.4,!=3.5",
    "summary": "Python library and command line interface to control Twinkly - Smart Decoration LED lights for Christmas.",
    "version": "0.7.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12145544,
  "releases": {
    "0.2.0": [],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aeec342a332e459d3379a2accd1f736cb68ab69fb33fe2d2f9dfa99d04e102d1",
          "md5": "780b79f48ece42796ee843323da52147",
          "sha256": "31afd9dadbbb7f237803741370c92bcee0f88631f4d5d2960669b11ad2eb4fa3"
        },
        "downloads": -1,
        "filename": "xled-0.2.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "780b79f48ece42796ee843323da52147",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 13037,
        "upload_time": "2018-01-02T20:07:29",
        "upload_time_iso_8601": "2018-01-02T20:07:29.816830Z",
        "url": "https://files.pythonhosted.org/packages/ae/ec/342a332e459d3379a2accd1f736cb68ab69fb33fe2d2f9dfa99d04e102d1/xled-0.2.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bfd45265995746b74652dc1c8a02a0f845da623608a5eb4b1917d547b37208b1",
          "md5": "598695a1765562f08cc8af2ab1690245",
          "sha256": "6782de632a048e77112e2d8301b6dd4f42fbbcbd539029f705baa1cd8fd5e1d7"
        },
        "downloads": -1,
        "filename": "xled-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "598695a1765562f08cc8af2ab1690245",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 22790,
        "upload_time": "2018-01-02T20:07:34",
        "upload_time_iso_8601": "2018-01-02T20:07:34.161431Z",
        "url": "https://files.pythonhosted.org/packages/bf/d4/5265995746b74652dc1c8a02a0f845da623608a5eb4b1917d547b37208b1/xled-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7383be6f011dec932f5a87b1dc7fb008546bcc4939b10b2e5e83623cb6d101d6",
          "md5": "e86df66e8b38114c1371c797bf706974",
          "sha256": "97807222385d9f0803b412deee4d624432ff93bb38f2054b635f06699302d3df"
        },
        "downloads": -1,
        "filename": "xled-0.3.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e86df66e8b38114c1371c797bf706974",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 23271,
        "upload_time": "2018-11-27T00:59:41",
        "upload_time_iso_8601": "2018-11-27T00:59:41.303221Z",
        "url": "https://files.pythonhosted.org/packages/73/83/be6f011dec932f5a87b1dc7fb008546bcc4939b10b2e5e83623cb6d101d6/xled-0.3.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "612f62d14faaf91edab6534033b3bea5b790dbcdf2f935b20e73b442fab944f0",
          "md5": "374480d1afffdeed6714e3d03d3774c4",
          "sha256": "2bf636f55951b6d08f6a597a16765b809831bc62f46c670b7a8726aa6fd08a2c"
        },
        "downloads": -1,
        "filename": "xled-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "374480d1afffdeed6714e3d03d3774c4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30384,
        "upload_time": "2018-11-27T00:59:42",
        "upload_time_iso_8601": "2018-11-27T00:59:42.674066Z",
        "url": "https://files.pythonhosted.org/packages/61/2f/62d14faaf91edab6534033b3bea5b790dbcdf2f935b20e73b442fab944f0/xled-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4956483b820a4a6364a0415a5322a3adf68f559ffd0f549e0f47fac0c8e18f76",
          "md5": "081ac8e60040b1b1cc96d7f419a4db80",
          "sha256": "d8b9e8b32680ffa432bc520b3c4e42f40df42dce297657608922ac36967d711c"
        },
        "downloads": -1,
        "filename": "xled-0.3.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "081ac8e60040b1b1cc96d7f419a4db80",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 23857,
        "upload_time": "2018-11-27T18:46:59",
        "upload_time_iso_8601": "2018-11-27T18:46:59.152632Z",
        "url": "https://files.pythonhosted.org/packages/49/56/483b820a4a6364a0415a5322a3adf68f559ffd0f549e0f47fac0c8e18f76/xled-0.3.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9bca53d04ea257d38c07a0df033144cc943e47e33a1b596d29f070399950f3b9",
          "md5": "7aa5b8c189b72ba2a3d74ae2e292dc76",
          "sha256": "d50bae69de9f0cf9cfd1b24574268ee1d196b2dc22ad73d65801222951aa5c2d"
        },
        "downloads": -1,
        "filename": "xled-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7aa5b8c189b72ba2a3d74ae2e292dc76",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 31644,
        "upload_time": "2018-11-27T18:47:00",
        "upload_time_iso_8601": "2018-11-27T18:47:00.523031Z",
        "url": "https://files.pythonhosted.org/packages/9b/ca/53d04ea257d38c07a0df033144cc943e47e33a1b596d29f070399950f3b9/xled-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "899d78fb535dff83d6d679a0c506c0679619613cc927e0c57fd6580f3d27304a",
          "md5": "7ed40066cfcf466c9ec60267e7191d85",
          "sha256": "e7387f023b1269564d05ffdf5add5de2709ddfc39b7a489fd690981eae892de4"
        },
        "downloads": -1,
        "filename": "xled-0.4.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7ed40066cfcf466c9ec60267e7191d85",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 23902,
        "upload_time": "2018-12-03T01:09:54",
        "upload_time_iso_8601": "2018-12-03T01:09:54.764880Z",
        "url": "https://files.pythonhosted.org/packages/89/9d/78fb535dff83d6d679a0c506c0679619613cc927e0c57fd6580f3d27304a/xled-0.4.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "42ba5958aeb4c1b28d2c770c7edf32300ce96226f6ac22e487ce4f2d301431c2",
          "md5": "ed620bab11f6b60c994cd151b9c4f11a",
          "sha256": "ea28d074f8b20e10fa065a42695cf864e8c5ac16dc886b980c00716c4640bc1f"
        },
        "downloads": -1,
        "filename": "xled-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ed620bab11f6b60c994cd151b9c4f11a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 33263,
        "upload_time": "2018-12-03T01:09:56",
        "upload_time_iso_8601": "2018-12-03T01:09:56.214721Z",
        "url": "https://files.pythonhosted.org/packages/42/ba/5958aeb4c1b28d2c770c7edf32300ce96226f6ac22e487ce4f2d301431c2/xled-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "22ee5cc1ac2704c97df34d6ac932a068d0ab9bf79bf50cd7f25e848d53e418ed",
          "md5": "8eaa710d74c7df06a247852c10147d37",
          "sha256": "4ee90a76a3ac3bbaf76fe175b9ccd695fd6cb3fb7ba8761f1a22cd8c8fa0aaf1"
        },
        "downloads": -1,
        "filename": "xled-0.5.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8eaa710d74c7df06a247852c10147d37",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 26499,
        "upload_time": "2018-12-09T22:55:46",
        "upload_time_iso_8601": "2018-12-09T22:55:46.066378Z",
        "url": "https://files.pythonhosted.org/packages/22/ee/5cc1ac2704c97df34d6ac932a068d0ab9bf79bf50cd7f25e848d53e418ed/xled-0.5.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef6baa51e86c75c178c4fd49e8c75f03c887a7120a42b1bc59c892a1f57db085",
          "md5": "2ebf0ecf02d01352ebb7d699f319e527",
          "sha256": "b45cca2161c47b1a6d8ea272cd5ca252d0b1a6408ea8390234336fcdc5100410"
        },
        "downloads": -1,
        "filename": "xled-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2ebf0ecf02d01352ebb7d699f319e527",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 37413,
        "upload_time": "2018-12-09T22:55:47",
        "upload_time_iso_8601": "2018-12-09T22:55:47.958735Z",
        "url": "https://files.pythonhosted.org/packages/ef/6b/aa51e86c75c178c4fd49e8c75f03c887a7120a42b1bc59c892a1f57db085/xled-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0c0ca36ac96b1f73139ed32c609e3fc9c9871269685b162d39978b518084128c",
          "md5": "72b0b9e88abdd86ea1315894db14f35c",
          "sha256": "c40a865ac6f4a1ed7b2ccc177472511503107f8d182b0f9186392a27b2ae8ab4"
        },
        "downloads": -1,
        "filename": "xled-0.6.0.linux-x86_64.tar.gz",
        "has_sig": false,
        "md5_digest": "72b0b9e88abdd86ea1315894db14f35c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 52708,
        "upload_time": "2020-01-17T17:23:24",
        "upload_time_iso_8601": "2020-01-17T17:23:24.156787Z",
        "url": "https://files.pythonhosted.org/packages/0c/0c/a36ac96b1f73139ed32c609e3fc9c9871269685b162d39978b518084128c/xled-0.6.0.linux-x86_64.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "01609afe66d8c417caa1cffae6204076d1abb80063e235b2d55da08ec0ce2700",
          "md5": "8426b86c82469cd5a36e80bd1746cf6b",
          "sha256": "a1784bf9b102ac2fbf886fff9b53a9dd4ff885b559b06eff4885fc7724988cc0"
        },
        "downloads": -1,
        "filename": "xled-0.6.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8426b86c82469cd5a36e80bd1746cf6b",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 30397,
        "upload_time": "2020-01-17T17:02:30",
        "upload_time_iso_8601": "2020-01-17T17:02:30.730546Z",
        "url": "https://files.pythonhosted.org/packages/01/60/9afe66d8c417caa1cffae6204076d1abb80063e235b2d55da08ec0ce2700/xled-0.6.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "750d5aebd44945a638edd71ca03288cbd00688589eae7ec46b24a28669e7df87",
          "md5": "f293b2b7f005046c849ab36495b0795e",
          "sha256": "4aeac22e13f0378dc6c7e7f7591fcbb612413371078615856c8e6c33aa997666"
        },
        "downloads": -1,
        "filename": "xled-0.6.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f293b2b7f005046c849ab36495b0795e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 41576,
        "upload_time": "2020-01-17T17:02:32",
        "upload_time_iso_8601": "2020-01-17T17:02:32.523869Z",
        "url": "https://files.pythonhosted.org/packages/75/0d/5aebd44945a638edd71ca03288cbd00688589eae7ec46b24a28669e7df87/xled-0.6.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "452a9b567fec6b108154372e963220451902741e2b34fc1b3c285725dce883ee",
          "md5": "27573e576b961d0642d1353b941fd42b",
          "sha256": "38ec359a3574548e6f4165ffe8e58fb87f61bd6c4c5dff2ed16930340f1fdb33"
        },
        "downloads": -1,
        "filename": "xled-0.7.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "27573e576b961d0642d1353b941fd42b",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2,!=3.3,!=3.4,!=3.5",
        "size": 35894,
        "upload_time": "2021-11-28T12:50:39",
        "upload_time_iso_8601": "2021-11-28T12:50:39.832585Z",
        "url": "https://files.pythonhosted.org/packages/45/2a/9b567fec6b108154372e963220451902741e2b34fc1b3c285725dce883ee/xled-0.7.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6a02bbc920a74d6302a5bd4a02dd806169c355d00f4f965a410bba0a7730898d",
          "md5": "92682e477084f85e8c23d250d386c1c1",
          "sha256": "da7e46475003e810addd662866e9295d5c6959e8f5537df8177826e7fe2e0ff8"
        },
        "downloads": -1,
        "filename": "xled-0.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "92682e477084f85e8c23d250d386c1c1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2,!=3.3,!=3.4,!=3.5",
        "size": 66785,
        "upload_time": "2021-11-28T12:50:41",
        "upload_time_iso_8601": "2021-11-28T12:50:41.531473Z",
        "url": "https://files.pythonhosted.org/packages/6a/02/bbc920a74d6302a5bd4a02dd806169c355d00f4f965a410bba0a7730898d/xled-0.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "452a9b567fec6b108154372e963220451902741e2b34fc1b3c285725dce883ee",
        "md5": "27573e576b961d0642d1353b941fd42b",
        "sha256": "38ec359a3574548e6f4165ffe8e58fb87f61bd6c4c5dff2ed16930340f1fdb33"
      },
      "downloads": -1,
      "filename": "xled-0.7.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "27573e576b961d0642d1353b941fd42b",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2,!=3.3,!=3.4,!=3.5",
      "size": 35894,
      "upload_time": "2021-11-28T12:50:39",
      "upload_time_iso_8601": "2021-11-28T12:50:39.832585Z",
      "url": "https://files.pythonhosted.org/packages/45/2a/9b567fec6b108154372e963220451902741e2b34fc1b3c285725dce883ee/xled-0.7.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6a02bbc920a74d6302a5bd4a02dd806169c355d00f4f965a410bba0a7730898d",
        "md5": "92682e477084f85e8c23d250d386c1c1",
        "sha256": "da7e46475003e810addd662866e9295d5c6959e8f5537df8177826e7fe2e0ff8"
      },
      "downloads": -1,
      "filename": "xled-0.7.0.tar.gz",
      "has_sig": false,
      "md5_digest": "92682e477084f85e8c23d250d386c1c1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2,!=3.3,!=3.4,!=3.5",
      "size": 66785,
      "upload_time": "2021-11-28T12:50:41",
      "upload_time_iso_8601": "2021-11-28T12:50:41.531473Z",
      "url": "https://files.pythonhosted.org/packages/6a/02/bbc920a74d6302a5bd4a02dd806169c355d00f4f965a410bba0a7730898d/xled-0.7.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}