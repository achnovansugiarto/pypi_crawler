{
  "info": {
    "author": "Jannis Vamvas",
    "author_email": "vamvas@cl.uzh.ch",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# NMTScore\n![Master](https://github.com/ZurichNLP/nmtscore/workflows/unittest/badge.svg?branch=master&event=push)\n[![PyPI](https://img.shields.io/pypi/v/nmtscore)](https://pypi.python.org/pypi/nmtscore/)\n\nA library of translation-based text similarity measures.\n\nTo learn more about how these measures work, have a look at [Jannis' blog post](https://vamvas.ch/nmtscore-text-similarity-via-translation). Also, read our paper, [\"NMTScore: A Multilingual Analysis of Translation-based Text Similarity Measures\"](https://aclanthology.org/2022.findings-emnlp.15/) (Findings of EMNLP).\n\n<img src=\"img/figure1.png\" alt=\"Three text similarity measures implemented in this library\" width=\"500\">\n\n## Installation\n\n- Requires Python >= 3.7 and PyTorch\n- `pip install nmtscore`\n- Extra requirements for the Prism model: `pip install nmtscore[prism]`\n\n## Usage\n\n### NMTScorer\nInstantiate a scorer and start scoring short sentence pairs.\n\n```python\nfrom nmtscore import NMTScorer\n\nscorer = NMTScorer()\n\nscorer.score(\"This is a sentence.\", \"This is another sentence.\")\n# 0.45572562294591235\n```\n\n#### Different similarity measures\nThe library implements three different measures:\n\n```python\n# Translation cross-likelihood (default)\nscorer.score_cross_likelihood(a, b, tgt_lang=\"en\", normalize=True, both_directions=True)\n\n# Direct translation probability\nscorer.score_direct(a, b, a_lang=\"en\", b_lang=\"en\", normalize=True, both_directions=True)\n\n# Pivot translation probability\nscorer.score_pivot(a, b, a_lang=\"en\", b_lang=\"en\", pivot_lang=\"en\", normalize=True, both_directions=True)\n```\n\nThe `score` method is a shortcut for cross-likelihood.\n\n#### Batch processing\nThe scoring methods also accept lists of strings:\n\n```python\nscorer.score(\n    [\"This is a sentence.\", \"This is a sentence.\", \"This is another sentence.\"],\n    [\"This is another sentence.\", \"This sentence is completely unrelated.\", \"This is another sentence.\"],\n)\n# [0.45572545262642583, 0.13128832336168145, 0.99999993180868]\n```\n\nThe sentences in the first list are compared element-wise to the sentences in the second list.\n\nThe default batch size is 8.\nAn alternative batch size can be specified as follows (independently for translating and scoring):\n\n```python\nscorer.score_direct(\n    a, b, a_lang=\"en\", b_lang=\"en\",\n    score_kwargs={\"batch_size\": 16}\n)\n\nscorer.score_cross_likelihood(\n    a, b,\n    translate_kwargs={\"batch_size\": 16},\n    score_kwargs={\"batch_size\": 16}\n)\n```\n\n#### Different NMT models\nThis library currently supports four NMT models:\n- [`small100`](https://huggingface.co/alirezamsh/small100) by [Mohammadshahi et al. (2022)](https://aclanthology.org/2022.emnlp-main.571/)\n- [`m2m100_418M`](https://huggingface.co/facebook/m2m100_418M) and [`m2m100_1.2B`](https://huggingface.co/facebook/m2m100_1.2B) by [Fan et al. (2021)](https://www.jmlr.org/papers/volume22/20-1307/)\n- [`prism`](https://github.com/thompsonb/prism) by [Thompson and Post (2020)](https://aclanthology.org/2020.emnlp-main.8/)\n\nBy default, the leanest model (`small100`) is loaded. The main results in the paper are based on the Prism model, which has some extra dependencies (see \"Installation\" above).\n\n```python\nscorer = NMTScorer(\"small100\", device=None)  # default\nscorer = NMTScorer(\"small100\", device=\"cuda:0\")  # Enable faster inference on GPU\nscorer = NMTScorer(\"m2m100_418M\", device=\"cuda:0\")\nscorer = NMTScorer(\"m2m100_1.2B\", device=\"cuda:0\")\nscorer = NMTScorer(\"prism\", device=\"cuda:0\")\n```\n\n**Which model should I choose?**\n\nThe page [experiments/results/summary.md](experiments/results/summary.md) compares the models regarding their accuracy and latency.\n- Generally, we recommend Prism because it tends to have the highest accuracy. Also, Prism's implementation currently translates up 10x faster on GPU than the other models do, so we highly recommend to use Prism for the measures that require translation (`score_pivot()` and `score_cross_likelihood()`).\n- `small100` is 3.4x faster for `score_direct()` and has 94–98% of Prism's accuracy.\n\n#### Enable caching of NMT output\nIt can make sense to cache the translations and scores if they are needed repeatedly, e.g. in reference-based evaluation.\n\n```python\nscorer.score_direct(\n    a, b, a_lang=\"en\", b_lang=\"en\",\n    score_kwargs={\"use_cache\": True}  # default: False\n)\n\nscorer.score_cross_likelihood(\n    a, b,\n    translate_kwargs={\"use_cache\": True},  # default: False\n    score_kwargs={\"use_cache\": True}  # default: False\n)\n```\n\nActivating this option will create an SQLite database in the ~/.cache directory. The directory can be overriden via the `NMTSCORE_CACHE` environment variable.\n\n#### Print a version signature (à la [SacreBLEU](https://github.com/mjpost/sacrebleu))\n```python\nscorer.score(a, b, print_signature=True)\n# NMTScore-cross|tgt-lang:en|model:alirezamsh/small100|normalized|both-directions|v0.3.0|hf4.26.1\n```\n\n### Direct usage of NMT models\n\nThe NMT models also provide a direct interface for translating and scoring.\n\n```python\nfrom nmtscore.models import load_translation_model\n\nmodel = load_translation_model(\"small100\")\n\nmodel.translate(\"de\", [\"This is a test.\"])\n# [\"Das ist ein Test.\"]\n\nmodel.score(\"de\", [\"This is a test.\"], [\"Das ist ein Test.\"])\n# [0.8286197781562805]\n```\n\n## Experiments\nSee [experiments/README.md](experiments/README.md)\n\n## Citation\n```bibtex\n@inproceedings{vamvas-sennrich-2022-nmtscore,\n    title = \"{NMTS}core: A Multilingual Analysis of Translation-based Text Similarity Measures\",\n    author = \"Vamvas, Jannis  and\n      Sennrich, Rico\",\n    booktitle = \"Findings of the Association for Computational Linguistics: EMNLP 2022\",\n    month = dec,\n    year = \"2022\",\n    address = \"Abu Dhabi, United Arab Emirates\",\n    publisher = \"Association for Computational Linguistics\",\n    url = \"https://aclanthology.org/2022.findings-emnlp.15\",\n    pages = \"198--213\"\n}\n```\n\n## License\n- Code: MIT License\n- Data: See data subdirectories\n\n## Changelog\n- v0.3.1\n  - Implement the distilled [`small100`](https://huggingface.co/alirezamsh/small100) model by [Mohammadshahi et al. (2022)](https://aclanthology.org/2022.emnlp-main.571/) and use this model by default.\n  - Enable half-precision inference for `m2m100` models and `small100` by default; see (/experiments/results/summary.md) for benchmark results\n\n- v0.2.0\n  - Bugfix: Provide source language to `m2m100` models (#2). The fix is backwards-compatible but a warning is now raised if `m2m100` is used without specifying the input language.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ZurichNLP/nmtscore",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "nmtscore",
    "package_url": "https://pypi.org/project/nmtscore/",
    "platform": null,
    "project_url": "https://pypi.org/project/nmtscore/",
    "project_urls": {
      "Bug Tracker": "https://github.com/ZurichNLP/nmtscore/issues",
      "Homepage": "https://github.com/ZurichNLP/nmtscore"
    },
    "release_url": "https://pypi.org/project/nmtscore/0.3.1/",
    "requires_dist": [
      "transformers",
      "sentencepiece",
      "tqdm",
      "sqlitedict",
      "fairseq (<=0.10.0) ; extra == 'prism'",
      "numpy (<1.24) ; extra == 'prism'"
    ],
    "requires_python": ">=3.7",
    "summary": "A library of translation-based text similarity measures",
    "version": "0.3.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16788144,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "79ef478cf70549b723bb692adb7f878ca7ec548efe3865e0264c8b0a35bfacc3",
          "md5": "800f065b1faeb37a527af1f519fbe17f",
          "sha256": "b46616f8b56c316a537a1d7958adebe0db93dd5f291a0c122cc98cf75f52dcd1"
        },
        "downloads": -1,
        "filename": "nmtscore-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "800f065b1faeb37a527af1f519fbe17f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 14797,
        "upload_time": "2022-04-27T12:13:55",
        "upload_time_iso_8601": "2022-04-27T12:13:55.693820Z",
        "url": "https://files.pythonhosted.org/packages/79/ef/478cf70549b723bb692adb7f878ca7ec548efe3865e0264c8b0a35bfacc3/nmtscore-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "754834a8227a21fc4aefecd350d7713f746552ae012e4436203c4902b1cbbffb",
          "md5": "8e91c7e0ee3bc98fae9e0ad9661bae36",
          "sha256": "9a3eb55c1916fd22c723ae9336685624f16bfb893441e5b9842b8c6a358698b7"
        },
        "downloads": -1,
        "filename": "nmtscore-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8e91c7e0ee3bc98fae9e0ad9661bae36",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13619,
        "upload_time": "2022-04-27T12:13:58",
        "upload_time_iso_8601": "2022-04-27T12:13:58.866631Z",
        "url": "https://files.pythonhosted.org/packages/75/48/34a8227a21fc4aefecd350d7713f746552ae012e4436203c4902b1cbbffb/nmtscore-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9fc8305b443960614fba5056e08d173e53ae0d25d2ed573d4a4c1a526a14f31a",
          "md5": "79010e6adae7a060b2ca395cf78dcbe9",
          "sha256": "b3af91dd5d5496b204496d79bf8e3874fde3ce5ae2b91ca1b09a7041081e3b9d"
        },
        "downloads": -1,
        "filename": "nmtscore-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "79010e6adae7a060b2ca395cf78dcbe9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 15863,
        "upload_time": "2022-10-18T04:37:04",
        "upload_time_iso_8601": "2022-10-18T04:37:04.768116Z",
        "url": "https://files.pythonhosted.org/packages/9f/c8/305b443960614fba5056e08d173e53ae0d25d2ed573d4a4c1a526a14f31a/nmtscore-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "161575b9c893ffb491a386d1bb6198356443ccdb94f41c12135f30ed7b31d59a",
          "md5": "cc71f821aaf9715c3f0120acd766eb7a",
          "sha256": "dcb57f01d9f832454e1c54cb837e93414e57dff03eb96f74dedc0467e020e9eb"
        },
        "downloads": -1,
        "filename": "nmtscore-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "cc71f821aaf9715c3f0120acd766eb7a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 14946,
        "upload_time": "2022-10-18T04:37:06",
        "upload_time_iso_8601": "2022-10-18T04:37:06.926531Z",
        "url": "https://files.pythonhosted.org/packages/16/15/75b9c893ffb491a386d1bb6198356443ccdb94f41c12135f30ed7b31d59a/nmtscore-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "243ae73590a240a8e969a6a66d5121360c4f0af5a906033ef6285150e8008b04",
          "md5": "dfee1cf9fa65939916c3cebe85d8958d",
          "sha256": "00432e01891e1d8160a3d9a268ab3d4ad78ba5abfcaf7c8380606ffa776d5c50"
        },
        "downloads": -1,
        "filename": "nmtscore-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dfee1cf9fa65939916c3cebe85d8958d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 22204,
        "upload_time": "2023-01-09T09:00:18",
        "upload_time_iso_8601": "2023-01-09T09:00:18.900548Z",
        "url": "https://files.pythonhosted.org/packages/24/3a/e73590a240a8e969a6a66d5121360c4f0af5a906033ef6285150e8008b04/nmtscore-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d711cc1211b06094ee8d6a74aeb53ce767e0d1fc2999ee68e26f40f525364a5a",
          "md5": "cb59f66324074c6327aa4ac344032809",
          "sha256": "9c00fad63fad9ab0867ffb586bf6ceffae8734f3967118c7c59d32fb7863d8e4"
        },
        "downloads": -1,
        "filename": "nmtscore-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "cb59f66324074c6327aa4ac344032809",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 21345,
        "upload_time": "2023-01-09T09:00:20",
        "upload_time_iso_8601": "2023-01-09T09:00:20.842607Z",
        "url": "https://files.pythonhosted.org/packages/d7/11/cc1211b06094ee8d6a74aeb53ce767e0d1fc2999ee68e26f40f525364a5a/nmtscore-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "94607d752666cf835f6cc62ca955164a562c57a8ed31bd8bde71df40a3071973",
          "md5": "2202d9035033fa2a2122c5485b11c078",
          "sha256": "401aa518196bed893087e3d9016abbde8703d8050fae48ce851a9f649ae6db68"
        },
        "downloads": -1,
        "filename": "nmtscore-0.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2202d9035033fa2a2122c5485b11c078",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 22216,
        "upload_time": "2023-02-10T11:30:13",
        "upload_time_iso_8601": "2023-02-10T11:30:13.337222Z",
        "url": "https://files.pythonhosted.org/packages/94/60/7d752666cf835f6cc62ca955164a562c57a8ed31bd8bde71df40a3071973/nmtscore-0.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "caf79818fdcb31978d0283d76e5471b3cc1d3b9a5d544acfc09130bb85e6e8a1",
          "md5": "82642f322a2555965e00e7d4a040a946",
          "sha256": "45016cc30298b614a13ec8a65b63d47063ec66cbddbf3b3fad5395793874ef5c"
        },
        "downloads": -1,
        "filename": "nmtscore-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "82642f322a2555965e00e7d4a040a946",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 21391,
        "upload_time": "2023-02-10T11:30:15",
        "upload_time_iso_8601": "2023-02-10T11:30:15.145144Z",
        "url": "https://files.pythonhosted.org/packages/ca/f7/9818fdcb31978d0283d76e5471b3cc1d3b9a5d544acfc09130bb85e6e8a1/nmtscore-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "94607d752666cf835f6cc62ca955164a562c57a8ed31bd8bde71df40a3071973",
        "md5": "2202d9035033fa2a2122c5485b11c078",
        "sha256": "401aa518196bed893087e3d9016abbde8703d8050fae48ce851a9f649ae6db68"
      },
      "downloads": -1,
      "filename": "nmtscore-0.3.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2202d9035033fa2a2122c5485b11c078",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 22216,
      "upload_time": "2023-02-10T11:30:13",
      "upload_time_iso_8601": "2023-02-10T11:30:13.337222Z",
      "url": "https://files.pythonhosted.org/packages/94/60/7d752666cf835f6cc62ca955164a562c57a8ed31bd8bde71df40a3071973/nmtscore-0.3.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "caf79818fdcb31978d0283d76e5471b3cc1d3b9a5d544acfc09130bb85e6e8a1",
        "md5": "82642f322a2555965e00e7d4a040a946",
        "sha256": "45016cc30298b614a13ec8a65b63d47063ec66cbddbf3b3fad5395793874ef5c"
      },
      "downloads": -1,
      "filename": "nmtscore-0.3.1.tar.gz",
      "has_sig": false,
      "md5_digest": "82642f322a2555965e00e7d4a040a946",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 21391,
      "upload_time": "2023-02-10T11:30:15",
      "upload_time_iso_8601": "2023-02-10T11:30:15.145144Z",
      "url": "https://files.pythonhosted.org/packages/ca/f7/9818fdcb31978d0283d76e5471b3cc1d3b9a5d544acfc09130bb85e6e8a1/nmtscore-0.3.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}