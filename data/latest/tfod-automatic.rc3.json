{
  "info": {
    "author": "Lohit Sundaramahalingam",
    "author_email": "lohit.cs19@bitsathy.ac.in",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: Microsoft :: Windows :: Windows 10",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "**TFOD_Automatic**\n\nTensorflow object detection automatically from user input.\n\nTFOD_Automatic Setup\n\nIn this we going to setup requirements for object detection\nautomatically using TFOD_Automatic.setup.\n\n.. code:: python\n\n   from TFOD_Automatic import setup\n\n\n\n**start_download()**\n\n\nstart_download is used to download the tensorflow model garden from the\ngithub.If the model garden is present already in the working\ndirectory.it automatically skip this process.\n\n.. code:: python\n\n   from TFOD_Automatic.setup import start_download\n   start_download()\n\n\n\n**check_model()**\n\ncheck_model is used to check whether the model garden folder is present\nor not.if the folder is present it return True and else it return False.\n\n.. code:: python\n\n   from TFOD_Automatic.setup import check_model\n   check_model()\n\n\n\n**protobuf_setup()**\n\n\nprotobuf_setup is used to setup the protobuf.Protobufs to configure\nmodel and training parameters.The Protobuf version is 3.19.\n\nSteps: - Protobuf is downloaded successfully and saved in folder\nprotobuf. - Now copy the folder protobuf folder and Go to C:/Program\nFile and paste it inside - Now copy the location of the file like\n“C:/Program File /protobuf/bin” - Now open Edit envirnoment variable and\ngo to Enviroment Variable and paste the location inside Path and save. -\nFinaly the open new Anaconda comment prompt and start project.\n\nTo Check whether the protobuf is set or not use check_protobuf() method.\n\n.. code:: python\n\n   from TFOD_Automatic.setup import protobuf_setup\n   protobuf_setup()\n\n\n\n**check_protobuf()**\n\n\ncheck_protobuf is used to check whether the protobuf is setup is\ncompleted or not.Returns true if the setup is correct and False if the\nsetup is incorrect.\n\n.. code:: python\n\n   from TFOD_Automatic.setup import check_protobuf\n   check_protobuf()\n\nNote: - Now the tensorflow object detection setup is completed.Next we\nare going to install the require package automaticaly\n\n\n\nTFOD_Automatic Install Package\n\n\nIn this we going to install the require package for tensorflow object\ndetection automatically using TFOD_Automatic.install.\n\n.. code:: python\n\n   from TFOD_Automatic import install\n\n**install_packages()**\n\n\ninstall_packages is used to install the required Packages like\ncython,cocoapi,labelImg,pycocotools-windows.To install these package we\nneed visual studio c++ build support.If the visual studio c++ build\nsupport is not install then first install it then only we can install\nthe package. All require package get installed.\n\n.. code:: python\n\n   from TFOD_Automatic.install import install_packages\n   install_packages()\n\n**check_installed()**\n\n\nCheck the all packages are installed or not.If the require package is\nnot install it show the error.\n\n.. code:: python\n\n   from TFOD_Automatic.install import check_installed\n   check_installed()\n\n**install_all()**\n\n\ninstall_packages is used to install the required Packages like\ncython,cocoapi,labelImg,pycocotools-windows.To install these package we\nneed visual studio c++ build support.If the visual studio c++ build\nsupport is not install then first install it then only we can install\nthe package. All require package get installed and check all the\npackages are installed.\n\n.. code:: python\n\n   from TFOD_Automatic.install import install_all\n   install_all()\n\nNote:\n\n\n-  Now the tensorflow object detection setup is completed and every\n   package is installed.Now we are going to create the object detection\n   model.\n\nTo create the tensorflow object detection model there are two method in TFOD_Automatic they are CreateModel and BuildModel:\n\n\n-  BuildModel: It is beginner-friendly.Example one command is used to\n   create model and complete the training.\n-  CreateModel: It is some advance method. It has many command to create\n   ,train, export the model.\n\nBuildModel:\n\n\nDownload The Tensorflow model garden and Build object Detect model\nautomaticaly.\n\n.. code:: python\n\n   from TFOD_Automatic import model\n\n**ModelSetup()**:\n\n\nModelSetup class is used to automatically create the Folder setup in\nworking directory.And also check every package are installed and setup\nis completed or not.\n\n.. code:: python\n\n   from TFOD_Automatic.model import ModelSetup\n   model_setup=ModelSetup()\n\n\n**BuildModel()**:\n\n\nBuildModel is used to automatical create the model.BuildModel complete\nGenerate the data file,Download the pretrained model,Create Pipeline\nfile,export the model.\n\nGenerate the data file:\n\n\nIt generate record file from the input image.\n\nDownload the pretrained model:\n\n\nIt download the model from the tensorflow model zoo.It is pretrained\nmodel.\n\nCreate Pipeline file:\n\n\nPipeline file contains of the number of training steps,batch size,train\nand test folder path also the record file path etc.\n\nExport the model:\n\n\nFinally we need to export the model for future use.\n\nParameter:\n\n\n-  number_of_class:int default:NO DEFAULT VALUE Number of training set\n-  pretrained_model_name:string\n   default:ssd_mobilenet_v2_320x320_coco17_tpu Please copy pretrained\n   model name from the tensorflow model zoo\n-  modelUrl:string\n   default:http://download.tensorflow.org/models/object_detection/tf2/20200711/ssd_mobilenet_v2_320x320_coco17_tpu-8.tar.gz\n   Pretrained model is downloaded from here.Copy url from tensorflow\n   model zoo\n-  batch_size_for_train:int default:8 batch while training the model\n-  train_steps:int default:2000 Training epochs\n\n.. code:: python\n\n   from TFOD_Automatic.model import BuildModel\n   build_model=BuildModel(number_of_class)\n\nNotes\n\n\n-  It creates the model with number_of_class with batch_size of 8 and\n   train_step of 2000.\n-  It takes some time. so be patient.\n-  After the training is completed their will be the folder called\n   ->workspace->training_demo->exported-models. You will find the\n   exported model.It can used for future use.\n\nCreateModel\n\n-  number_of_class:int default:NO DEFAULT VALUE Number of training set\n-  pretrained_model_name:string\n   default:ssd_mobilenet_v2_320x320_coco17_tpu Please copy pretrained\n   model name from the tensorflow model zoo\n-  modelUrl:string\n   default:http://download.tensorflow.org/models/object_detection/tf2/20200711/ssd_mobilenet_v2_320x320_coco17_tpu-8.tar.gz\n   Pretrained model is downloaded from here.Copy url from tensorflow\n   model zoo\n-  batch_size_for_train:int default:8 batch while training the model\n-  train_steps:int default:2000 Training epochs\n\n.. code:: python\n\n   from TFOD_Automatic.model import CreateModel\n   # create the class instance\n   createmodel=CreateModel()\n\n   # model_setup() is used to check whether the package is installed and setup is correct completed.\n   createmodel.model_setup()\n\n   # create_folder() is used to create the require folder in the working directory\n   createmodel.create_folder()\n\n   # image_data() is used to generate the label map in .pbtxt format\n   createmodel.image_data()\n\n   # generate_file() is used to generate the .record file for the train and test image\n   createmodel.generate_file()\n\n   # download_model() is used to Download the pretrained model from tensorflow model zoo.\n   createmodel.download_model()\n\n   # configure_pipeline() used to create Pipeline file:Pipeline file contains of the number of training steps,batch size, train and test folder path also the record file path etc.\n   createmodel.configure_pipeline()\n\n   #export_model() is used to export the model.Finally we need to export the model for future use.\n   createmodel.export_model()\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://TFOD-Automatic.readthedocs.io/",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "TFOD-Automatic",
    "package_url": "https://pypi.org/project/TFOD-Automatic/",
    "platform": "",
    "project_url": "https://pypi.org/project/TFOD-Automatic/",
    "project_urls": {
      "Homepage": "https://TFOD-Automatic.readthedocs.io/"
    },
    "release_url": "https://pypi.org/project/TFOD-Automatic/1.4/",
    "requires_dist": [
      "oauth2client (==4.1.3)",
      "absl-py (==0.12.0)",
      "apache-beam (==2.33.0)",
      "argon2-cffi (==21.1.0)",
      "astunparse (==1.6.3)",
      "attrs (==21.2.0)",
      "avro-python3 (==1.9.2.1)",
      "backcall (==0.2.0)",
      "bleach (==4.1.0)",
      "cachetools (==4.2.2)",
      "certifi (==2021.5.30)",
      "cffi (==1.14.6)",
      "charset-normalizer (==2.0.4)",
      "clang (==5.0)",
      "colorama (==0.4.4)",
      "contextlib2 (==21.6.0)",
      "crcmod (==1.7)",
      "cycler (==0.10.0)",
      "Cython (==0.29.24)",
      "debugpy (==1.4.1)",
      "decorator (==5.0.9)",
      "defusedxml (==0.7.1)",
      "dill (==0.3.1.1)",
      "distlib (==0.3.4)",
      "dm-tree (==0.1.6)",
      "docopt (==0.6.2)",
      "entrypoints (==0.3)",
      "fastavro (==1.4.7)",
      "filelock (==3.4.2)",
      "flatbuffers (==1.12)",
      "future (==0.18.2)",
      "gast (==0.4.0)",
      "gin-config (==0.4.0)",
      "gitdb (==4.0.7)",
      "GitPython (==3.1.24)",
      "google-api-core (==2.0.1)",
      "google-api-python-client (==2.27.0)",
      "google-auth (==1.35.0)",
      "google-auth-httplib2 (==0.1.0)",
      "google-auth-oauthlib (==0.4.6)",
      "google-pasta (==0.2.0)",
      "googleapis-common-protos (==1.53.0)",
      "grpcio (==1.39.0)",
      "h5py (==3.1.0)",
      "hdfs (==2.6.0)",
      "httplib2 (==0.19.1)",
      "idna (==3.2)",
      "importlib-resources (==5.2.2)",
      "ipykernel (==6.3.1)",
      "ipython (==7.27.0)",
      "ipython-genutils (==0.2.0)",
      "ipywidgets (==7.6.4)",
      "jedi (==0.18.0)",
      "Jinja2 (==3.0.1)",
      "joblib (==1.0.1)",
      "jsonschema (==3.2.0)",
      "jupyter (==1.0.0)",
      "jupyter-client (==7.0.2)",
      "jupyter-console (==6.4.0)",
      "jupyter-core (==4.7.1)",
      "jupyterlab-pygments (==0.1.2)",
      "jupyterlab-widgets (==1.0.1)",
      "kaggle (==1.5.12)",
      "keras (==2.6.0)",
      "Keras-Preprocessing (==1.1.2)",
      "kiwisolver (==1.3.2)",
      "labelImg (==1.8.5)",
      "lvis (==0.5.3)",
      "lxml (==4.6.3)",
      "Markdown (==3.3.4)",
      "MarkupSafe (==2.0.1)",
      "matplotlib (==3.4.3)",
      "matplotlib-inline (==0.1.2)",
      "mistune (==0.8.4)",
      "nbclient (==0.5.4)",
      "nbconvert (==6.1.0)",
      "nbformat (==5.1.3)",
      "nest-asyncio (==1.5.1)",
      "notebook (==6.4.3)",
      "numpy (==1.19.5)",
      "oauthlib (==3.1.1)",
      "opencv-python (==4.5.3.56)",
      "opencv-python-headless (==4.5.4.58)",
      "opt-einsum (==3.3.0)",
      "orjson (==3.6.4)",
      "packaging (==21.0)",
      "pandas (==1.3.2)",
      "pandocfilters (==1.4.3)",
      "parso (==0.8.2)",
      "pickleshare (==0.7.5)",
      "Pillow (==8.3.2)",
      "platformdirs (==2.4.1)",
      "portalocker (==2.3.2)",
      "prometheus-client (==0.11.0)",
      "promise (==2.3)",
      "prompt-toolkit (==3.0.20)",
      "protobuf (==3.17.3)",
      "psutil (==5.8.0)",
      "py-cpuinfo (==8.0.0)",
      "pyarrow (==4.0.1)",
      "pyasn1 (==0.4.8)",
      "pyasn1-modules (==0.2.8)",
      "pycocotools-windows (==2.0.0.2)",
      "pycparser (==2.20)",
      "pydot (==1.4.2)",
      "Pygments (==2.10.0)",
      "pyparsing (==2.4.7)",
      "PyQt5 (==5.15.4)",
      "PyQt5-Qt5 (==5.15.2)",
      "PyQt5-sip (==12.9.0)",
      "pyrsistent (==0.18.0)",
      "python-dateutil (==2.8.2)",
      "python-slugify (==5.0.2)",
      "pytz (==2021.1)",
      "pywin32 (==301)",
      "pywinpty (==1.1.4)",
      "PyYAML (==5.4.1)",
      "pyzmq (==22.2.1)",
      "qtconsole (==5.1.1)",
      "QtPy (==1.11.0)",
      "regex (==2021.8.28)",
      "requests (==2.26.0)",
      "requests-oauthlib (==1.3.0)",
      "rsa (==4.7.2)",
      "sacrebleu (==2.0.0)",
      "scikit-learn (==0.24.2)",
      "scipy (==1.7.1)",
      "Send2Trash (==1.8.0)",
      "sentencepiece (==0.1.96)",
      "seqeval (==1.2.2)",
      "six (==1.15.0)",
      "smmap (==4.0.0)",
      "tabulate (==0.8.9)",
      "tensorboard (==2.6.0)",
      "tensorboard-data-server (==0.6.1)",
      "tensorboard-plugin-wit (==1.8.0)",
      "tensorflow (==2.6.0)",
      "tensorflow-addons (==0.14.0)",
      "tensorflow-datasets (==4.4.0)",
      "tensorflow-estimator (==2.6.0)",
      "tensorflow-hub (==0.12.0)",
      "tensorflow-io (==0.23.1)",
      "tensorflow-io-gcs-filesystem (==0.23.1)",
      "tensorflow-metadata (==1.2.0)",
      "tensorflow-model-optimization (==0.6.0)",
      "tensorflow-text (==2.6.0)",
      "termcolor (==1.1.0)",
      "terminado (==0.11.1)",
      "testpath (==0.5.0)",
      "text-unidecode (==1.3)",
      "tf-models-official (==2.6.0)",
      "tf-slim (==1.1.0)",
      "threadpoolctl (==2.2.0)",
      "tornado (==6.1)",
      "tqdm (==4.62.2)",
      "traitlets (==5.1.0)",
      "typeguard (==2.12.1)",
      "typing-extensions (==3.7.4.3)",
      "uritemplate (==3.0.1)",
      "urllib3 (==1.26.6)",
      "virtualenv (==20.13.0)",
      "wcwidth (==0.2.5)",
      "webencodings (==0.5.1)",
      "Werkzeug (==2.0.1)",
      "wget (==3.2)",
      "widgetsnbextension (==3.5.1)",
      "wincertstore (==0.2)",
      "wrapt (==1.12.1)",
      "zipp (==3.5.0)"
    ],
    "requires_python": "",
    "summary": "Automated Object detection for Beginner using python and Tensorflow",
    "version": "1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12811636,
  "releases": {
    "1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "edd92931c7d161a1106ac89fd66cb6da9482554ebf24a3f5c12786a9dbc4acc8",
          "md5": "2f5f9f6d835a0f7601a629ab8cca524f",
          "sha256": "d09897ad38352899663f0c0b31d3065ad4699a90eae9e7cbf0f4d9b4256fe2d7"
        },
        "downloads": -1,
        "filename": "TFOD_Automatic-1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2f5f9f6d835a0f7601a629ab8cca524f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5124,
        "upload_time": "2022-02-07T10:32:55",
        "upload_time_iso_8601": "2022-02-07T10:32:55.327346Z",
        "url": "https://files.pythonhosted.org/packages/ed/d9/2931c7d161a1106ac89fd66cb6da9482554ebf24a3f5c12786a9dbc4acc8/TFOD_Automatic-1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7bdcacc4dfecd6e4d57b6f1b8039d497cd66c478d655840c6d2d4f93a56c3880",
          "md5": "b60dabebd6348465f446bda78a808793",
          "sha256": "29b377fce0bdab4a50db01fc71d65ddfb89dbfdc687f930e6ef95a6758674779"
        },
        "downloads": -1,
        "filename": "TFOD-Automatic-1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b60dabebd6348465f446bda78a808793",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6564,
        "upload_time": "2022-02-07T10:32:58",
        "upload_time_iso_8601": "2022-02-07T10:32:58.609575Z",
        "url": "https://files.pythonhosted.org/packages/7b/dc/acc4dfecd6e4d57b6f1b8039d497cd66c478d655840c6d2d4f93a56c3880/TFOD-Automatic-1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1bd0292f8b4ee1f6366611714e7d344ae9a4a80d66768d51e24d32e1c2e8dafa",
          "md5": "b3b26e11763ac0521d896bc5d3838e34",
          "sha256": "eebbd17711c330a26ecfe0cb31ebda7c71271e8efeec3535cf77dd0149001ee9"
        },
        "downloads": -1,
        "filename": "TFOD_Automatic-1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b3b26e11763ac0521d896bc5d3838e34",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5269,
        "upload_time": "2022-02-07T10:44:25",
        "upload_time_iso_8601": "2022-02-07T10:44:25.646155Z",
        "url": "https://files.pythonhosted.org/packages/1b/d0/292f8b4ee1f6366611714e7d344ae9a4a80d66768d51e24d32e1c2e8dafa/TFOD_Automatic-1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "840074210f34c0570987fe656c3b3ea1fb1c2fbc2d12376c608939305ebd72d1",
          "md5": "c184e0deb630ba654b6f149f5f78fa7b",
          "sha256": "df5177520e2ba44204c6bf04c96b1b29092011e69d802c9c8ca2d18d5c13e886"
        },
        "downloads": -1,
        "filename": "TFOD_Automatic-1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "c184e0deb630ba654b6f149f5f78fa7b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6574,
        "upload_time": "2022-02-07T10:44:29",
        "upload_time_iso_8601": "2022-02-07T10:44:29.648200Z",
        "url": "https://files.pythonhosted.org/packages/84/00/74210f34c0570987fe656c3b3ea1fb1c2fbc2d12376c608939305ebd72d1/TFOD_Automatic-1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "933731577045526c873e36bddedd9be13ee7968f4d2203e41411d019fa3431e7",
          "md5": "f3ea688bce1ab5527d1a04830d050070",
          "sha256": "e58928720f5a0efab41ba68d0895b3f2a22d65f9561fe0f81e703ae6cb05a9c9"
        },
        "downloads": -1,
        "filename": "TFOD_Automatic-1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f3ea688bce1ab5527d1a04830d050070",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 15281,
        "upload_time": "2022-02-07T11:37:30",
        "upload_time_iso_8601": "2022-02-07T11:37:30.581522Z",
        "url": "https://files.pythonhosted.org/packages/93/37/31577045526c873e36bddedd9be13ee7968f4d2203e41411d019fa3431e7/TFOD_Automatic-1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "30c460324e88122cac2d6a82730cf4d123e286b9acffad82a97952c0e277a127",
          "md5": "cf55e395083989362b14c2e2750c7b39",
          "sha256": "4bab7c3eb663ca3e1759f33180544588e6e5df311f5417096bb4b48bdad2ed24"
        },
        "downloads": -1,
        "filename": "TFOD_Automatic-1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "cf55e395083989362b14c2e2750c7b39",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12847,
        "upload_time": "2022-02-07T11:37:33",
        "upload_time_iso_8601": "2022-02-07T11:37:33.834165Z",
        "url": "https://files.pythonhosted.org/packages/30/c4/60324e88122cac2d6a82730cf4d123e286b9acffad82a97952c0e277a127/TFOD_Automatic-1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "933731577045526c873e36bddedd9be13ee7968f4d2203e41411d019fa3431e7",
        "md5": "f3ea688bce1ab5527d1a04830d050070",
        "sha256": "e58928720f5a0efab41ba68d0895b3f2a22d65f9561fe0f81e703ae6cb05a9c9"
      },
      "downloads": -1,
      "filename": "TFOD_Automatic-1.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f3ea688bce1ab5527d1a04830d050070",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 15281,
      "upload_time": "2022-02-07T11:37:30",
      "upload_time_iso_8601": "2022-02-07T11:37:30.581522Z",
      "url": "https://files.pythonhosted.org/packages/93/37/31577045526c873e36bddedd9be13ee7968f4d2203e41411d019fa3431e7/TFOD_Automatic-1.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "30c460324e88122cac2d6a82730cf4d123e286b9acffad82a97952c0e277a127",
        "md5": "cf55e395083989362b14c2e2750c7b39",
        "sha256": "4bab7c3eb663ca3e1759f33180544588e6e5df311f5417096bb4b48bdad2ed24"
      },
      "downloads": -1,
      "filename": "TFOD_Automatic-1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "cf55e395083989362b14c2e2750c7b39",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12847,
      "upload_time": "2022-02-07T11:37:33",
      "upload_time_iso_8601": "2022-02-07T11:37:33.834165Z",
      "url": "https://files.pythonhosted.org/packages/30/c4/60324e88122cac2d6a82730cf4d123e286b9acffad82a97952c0e277a127/TFOD_Automatic-1.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}