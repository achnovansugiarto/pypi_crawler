{
  "info": {
    "author": "Takahiro Nakamura",
    "author_email": "a41757@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# GauInt: Gaussian integers\n```\nGG(x=0, y=0):\nconstruct gaussian integer x+iy\nwhere x and y are ordinary integers and i is imaginary unit.\n|x| and |y| can be arbitrarily large.\n\nAddition a+b, subtraction a-b, multiplication a*b,\ndivision a/b, remainder a%b, division with remainder divmod(a,b),\nequality testing a==b, inequality testing a!=b\ncan be performed on two GG objects a and b. On these operations,\none of a and b can be an ordinary integer (built in python).\nDivision with remainder q,r = a/b,a%b is such that a = b*q + r\nand norm(r) <= norm(b)/2, where norm(a) = Re(a)**2 + Im(a)**2.\nExponentiation a**e can be performed on GG object a and\nnon-negative ordinary integer e.\n-------------------------------------------------------------\nUtility functions:\n\nreal(a): real part Re(a) of a\nimag(a): imaginary part Im(a) of a\nnorm(a): norm Re(a)**2 + Im(a)**2 of a\nconj(a): conjugate Re(a) - i*Im(a) of a\nIsUnit(a): test if norm(a)==1\nmul_i(a): a*i\ndiv_i(a): a/i\nmul_ipow(a,e): a*i**e\n\ncomplex(a):\nconvert GG object to floating-point complex number.\n\nIsAssoc(a, b, exponent=False):\ntest if a==b*i**e for some e (e=0,1,2,3).\nIf exponent is False, return True or False,\nelse if a is associate of b, return e,\nelse return -1.\n\nquadrant(a):\nreturn -1 if a==0,\nreturn 0 if Re(a)>0 and Im(a)>=0,\nreturn 1 if Re(a)<=0 and Im(a)>0,\nreturn 2 if Re(a)<0 and Im(a)<=0,\nreturn 3 if Re(a)>=0 and Im(a)<0.\n\nFirstQuad(a, exponent=False):\nreturn b = a*i^e for some e (e=0,1,2,3)\nin first quadrant Re(b)>0 and Im(b)>=0.\nIf exponent is True, return b and e.\nIf a is zero, then b=0 and e=0.\n\nGCD(a,b):\nreturn d = greatest common divisor of a and b\nin first quadrant Re(d)>0 and Im(d)>=0.\nIf a and b are both zero, then d=0.\n\nXGCD(a,b):\ncompute d = greatest common divisor of a and b\nin first quadrant Re(d)>0 and Im(d)>=0,\nand return d,s,t such that d = s*a + t*b.\nIf a and b are both zero, then d,s,t=0,1,0.\n\nfactor(a):\nfactorize a into gaussian primes, and\nreturn dictionary of (prime, exponent) pair\nsuch that product of p**e is associate of a.\nReal factors are positive and\nimaginary factors are in first quadrant.\n\nGenPrime(l):\ngenerate random gaussian prime p\nsuch that bit length of norm(p) is l and\np is in first quadrant Re(p)>0 and Im(p)>0.\nl must be larger than 1.\n```\n# example usage:\n```\n>>> from GG import *\n>>> a,b,c = GG(2,3), GG(4,5), GG(6,7)\n>>> a *= c; b *= c\n>>> d = GCD(a,b)\n>>> print(d)\n(6+7j)\n>>> d,s,t = XGCD(a,b)\n>>> print(d == s*a + t*b)\nTrue\n```\n# example usage:\n```\n>>> from GG import *\n>>> a,b,c = GenPrime(8), GenPrime(8), GenPrime(8)\n>>> a = a**2 * b**3 * c**4\n>>> print(a)\n(-12320219833+13665386778j)\n>>> f = factor(a)\n>>> print(f)\n{(11+6j): 3, (14+1j): 4, (15+4j): 2}\n>>> b = 1\n>>> for k in f: b *= k**f[k]\n...\n>>> print(IsAssoc(a,b))\nTrue\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/tt-nakamura/GG",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "GauInt",
    "package_url": "https://pypi.org/project/GauInt/",
    "platform": null,
    "project_url": "https://pypi.org/project/GauInt/",
    "project_urls": {
      "Bug Tracker": "https://github.com/tt-nakamura/GG/issues",
      "Homepage": "https://github.com/tt-nakamura/GG"
    },
    "release_url": "https://pypi.org/project/GauInt/0.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Gaussian integer x+iy and its prime factorization",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17446613,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "758434dc5cb7ca52f8550090820799fe66a44db9c75faa7e58e6e872370fd800",
          "md5": "5db277df8d3f1e94157cf11eabecf482",
          "sha256": "0c4c438a9a4d6e64aece5878db7cd9a63df19592b551aa3152bf96767f879543"
        },
        "downloads": -1,
        "filename": "GauInt-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5db277df8d3f1e94157cf11eabecf482",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5533,
        "upload_time": "2023-03-26T02:45:14",
        "upload_time_iso_8601": "2023-03-26T02:45:14.263475Z",
        "url": "https://files.pythonhosted.org/packages/75/84/34dc5cb7ca52f8550090820799fe66a44db9c75faa7e58e6e872370fd800/GauInt-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "19f9fc4581715a86f78427aebbc669c62f9357b6a1c4faee7b773011f7d43ee0",
          "md5": "e3eaf4c297a62e63b26269b5401e86ac",
          "sha256": "537f9a7db2a69000ad73dde04e50ea36e29252316053c02c1290cbc87215ced5"
        },
        "downloads": -1,
        "filename": "GauInt-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e3eaf4c297a62e63b26269b5401e86ac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4895,
        "upload_time": "2023-03-26T02:45:17",
        "upload_time_iso_8601": "2023-03-26T02:45:17.275458Z",
        "url": "https://files.pythonhosted.org/packages/19/f9/fc4581715a86f78427aebbc669c62f9357b6a1c4faee7b773011f7d43ee0/GauInt-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "758434dc5cb7ca52f8550090820799fe66a44db9c75faa7e58e6e872370fd800",
        "md5": "5db277df8d3f1e94157cf11eabecf482",
        "sha256": "0c4c438a9a4d6e64aece5878db7cd9a63df19592b551aa3152bf96767f879543"
      },
      "downloads": -1,
      "filename": "GauInt-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5db277df8d3f1e94157cf11eabecf482",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 5533,
      "upload_time": "2023-03-26T02:45:14",
      "upload_time_iso_8601": "2023-03-26T02:45:14.263475Z",
      "url": "https://files.pythonhosted.org/packages/75/84/34dc5cb7ca52f8550090820799fe66a44db9c75faa7e58e6e872370fd800/GauInt-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "19f9fc4581715a86f78427aebbc669c62f9357b6a1c4faee7b773011f7d43ee0",
        "md5": "e3eaf4c297a62e63b26269b5401e86ac",
        "sha256": "537f9a7db2a69000ad73dde04e50ea36e29252316053c02c1290cbc87215ced5"
      },
      "downloads": -1,
      "filename": "GauInt-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "e3eaf4c297a62e63b26269b5401e86ac",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 4895,
      "upload_time": "2023-03-26T02:45:17",
      "upload_time_iso_8601": "2023-03-26T02:45:17.275458Z",
      "url": "https://files.pythonhosted.org/packages/19/f9/fc4581715a86f78427aebbc669c62f9357b6a1c4faee7b773011f7d43ee0/GauInt-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}