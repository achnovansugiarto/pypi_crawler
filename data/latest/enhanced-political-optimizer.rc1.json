{
  "info": {
    "author": "Danial Saleem",
    "author_email": "danialsaleem2010@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "## How to use the package.\n\nTo use the package you need to provide four things to the PO methods\n\n- Optimization function, which the is function that you are trying to optimize. Our method can cater to constraints as well by using static penalty. An example is given below.\n- Number of dimensions of the problem\n- Lower boundary\n- Upper boundary\n\n**Note** The boundaries can be scalars or arrays. The example below uses arrays because the\nboundaries are different for different variables, if they are same, use scalar values.\n\n```\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\n## optimization function.\ndef TCSD(x: np.ndarray):\n    x1 = x[0]\n    x2 = x[1]\n    x3 = x[2]\n    z = (x3 + 2) * x2 * (x1 * x1)\n\n    c = [\n        1 - ((x2 * x2 * x2 * x3)) / (71785 * x1 * x1 * x1 * x1),\n        ((4 * x2 * x2 - (x1 * x2)) / (12566 * (x2 * x1 * x1 * x1 - (x1 ** 4))))\n        + (1 / (5108 * x1 * x1))\n        - 1,\n        1 - ((140.45 * x1) / (x2 * x2 * x3)),\n        ((x1 + x2) / 1.5) - 1,\n    ]\n    cmaxes = [x if x > 0 else 0 for x in c]\n    c_np_array = np.array(cmaxes)\n    c_np_array = np.power(c_np_array, 2)\n    c_np_array = (10 ** 10) * c_np_array\n    sumofarray = np.sum(c_np_array)\n    return z + sumofarray\n\n\nscores = [0 for x in range(RUNS)]\n\nfor i in range(RUNS):\n    # matlab's rng(\"shuffle\") seeds with the system's default time, python's random.seed has that as default val\n    np.random.seed(1)\n    # implement political optimizer.\n\n    objectiveFunction = TCSD\n    dim = 3 # dimentions\n    lb = [0.05, 0.25, 2.00] # upper boundary\n    ub = [2.00, 1.30, 15.00] # lower boundary\n    (leaderScore, leaderPosition, convergenceCurve) = PO(lb, ub, dim, objectiveFunction)\n    print(leaderScore)\n    print(leaderPosition)\n\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/realpython/enhanced-political-optimizer",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "enhanced-political-optimizer",
    "package_url": "https://pypi.org/project/enhanced-political-optimizer/",
    "platform": "",
    "project_url": "https://pypi.org/project/enhanced-political-optimizer/",
    "project_urls": {
      "Homepage": "https://github.com/realpython/enhanced-political-optimizer"
    },
    "release_url": "https://pypi.org/project/enhanced-political-optimizer/1.0.0/",
    "requires_dist": [
      "numpy",
      "keras"
    ],
    "requires_python": "",
    "summary": "Solve global optimization problems.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11002212,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d9e9d419e329c04ac4d85807933cb629dfcdf2a8c23899939d8f472777745491",
          "md5": "c70cd158eb4bdfb52911c9007534d878",
          "sha256": "59b915c2b135900895a5f1d8a8fbe8524969eb83e30fe17231fb54bdf1f1e5ef"
        },
        "downloads": -1,
        "filename": "enhanced_political_optimizer-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c70cd158eb4bdfb52911c9007534d878",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 2468,
        "upload_time": "2021-07-26T05:03:02",
        "upload_time_iso_8601": "2021-07-26T05:03:02.763217Z",
        "url": "https://files.pythonhosted.org/packages/d9/e9/d419e329c04ac4d85807933cb629dfcdf2a8c23899939d8f472777745491/enhanced_political_optimizer-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a26eac0972f7c28d0dc1404651a932741fdddb3e02a4252c791a504812cbc2c0",
          "md5": "67c8211fc199d54f3742358e5f502f76",
          "sha256": "14353d7b002c18e57756a9cb18e91ca9787207848fcd20921435906df7346d65"
        },
        "downloads": -1,
        "filename": "enhanced-political-optimizer-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "67c8211fc199d54f3742358e5f502f76",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2499,
        "upload_time": "2021-07-26T05:03:04",
        "upload_time_iso_8601": "2021-07-26T05:03:04.627325Z",
        "url": "https://files.pythonhosted.org/packages/a2/6e/ac0972f7c28d0dc1404651a932741fdddb3e02a4252c791a504812cbc2c0/enhanced-political-optimizer-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d9e9d419e329c04ac4d85807933cb629dfcdf2a8c23899939d8f472777745491",
        "md5": "c70cd158eb4bdfb52911c9007534d878",
        "sha256": "59b915c2b135900895a5f1d8a8fbe8524969eb83e30fe17231fb54bdf1f1e5ef"
      },
      "downloads": -1,
      "filename": "enhanced_political_optimizer-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c70cd158eb4bdfb52911c9007534d878",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 2468,
      "upload_time": "2021-07-26T05:03:02",
      "upload_time_iso_8601": "2021-07-26T05:03:02.763217Z",
      "url": "https://files.pythonhosted.org/packages/d9/e9/d419e329c04ac4d85807933cb629dfcdf2a8c23899939d8f472777745491/enhanced_political_optimizer-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a26eac0972f7c28d0dc1404651a932741fdddb3e02a4252c791a504812cbc2c0",
        "md5": "67c8211fc199d54f3742358e5f502f76",
        "sha256": "14353d7b002c18e57756a9cb18e91ca9787207848fcd20921435906df7346d65"
      },
      "downloads": -1,
      "filename": "enhanced-political-optimizer-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "67c8211fc199d54f3742358e5f502f76",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 2499,
      "upload_time": "2021-07-26T05:03:04",
      "upload_time_iso_8601": "2021-07-26T05:03:04.627325Z",
      "url": "https://files.pythonhosted.org/packages/a2/6e/ac0972f7c28d0dc1404651a932741fdddb3e02a4252c791a504812cbc2c0/enhanced-political-optimizer-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}