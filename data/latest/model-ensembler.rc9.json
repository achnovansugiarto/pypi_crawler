{
  "info": {
    "author": "James Byrne",
    "author_email": "jambyr@bas.ac.uk",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Intended Audience :: Science/Research",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: MIT License",
      "Operating System :: POSIX",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: System :: Distributed Computing"
    ],
    "description": "# Model Ensembler\n\n## Introduction\n\nThis is a tool to assist users in running model ensembles on HPCs, potentially \nin conjunction with other external systems. It will be easy to be extend for \nvarious other HPC backends (currently just SLURM is supported), as well as \nbeing easy to extend code wise for new tasks that support the ensemble \nworkflows.\n\n## Installation\n\nRefit the instructions to match however you like created virtual \nenvironments! Python3.8 is the development Python I'm currently using but \nanything above that is likely to work, as well as possibly 3.7, but 3.6 won't. \n\n```\npython3.8 -m venv venv\nsource venv/bin/activate\npip install --upgrade pip setuptools wheel\npip install model-ensembler\n```\n\n### Checking it works\n\nYou can run the sanity checker with the following command, choosing either \nthe dummy executor or slurm as appropriate.\n\n**TODO: v0.5.4: in the meantime you can run the examples**\n\n```\nmodel_ensemble_check [dummy|slurm]\n```\n\n\n## Basic Usage\n\nThere are some examples under \"example\" that can be run on a local machine (you \ncan switch off slurm submission via the CLI `-s` switch)\n\nThe basic pattern for using this toolkit is\n\n1. Create the execution environment (see previous section)\n1. Adapt a job/model run\n1. YAML Configuration\n1. Running the job\n\n### Adapt a job/model run\n\nThe core component of any slurm_batch run is a working cluster job. If not \ndesigning from scratch, think about the following in order to adapt the job \nto a batch configuration:\n\n* What source data/processing do you need before the whole batch and how do you \n  get/do it\n* What source data/processing do you need before each run and how do you get/do \n  it\n* What checks are needed before each run is submitted to slurm\n* What needs to change in the job for each run\n* What happens afterwards: what needs checking, where is the data going, what \n  cleanup is required\n\nBreaking each activity down should allow you to consider what pre and post \nprocessing you need to implement AS SINGLE ACTIVITIES. \n\nQuite a common issue with jobs is that people have a monolithic script doing \neverything that doesn't lend itself to batching. This monolith should be \nbroken down into activities that can be templated out (to provide per-run \nvariance) and individually assessed prior to moving on. \n\nThese activities are then all stitched together with the configuration.\n\n### YAML Configuration\n\nTo make up a set of runs we use a YAML configuration file which is clear to \nread and simple to manage. \n\nThe idea is that you can define a batch, or set of batches, containing \nindividual runs that are individually templated and run. These runs are done \naccording to a common configuration defined for the batch.\n\nThe configuration is split up into the following sections: \n\n* `vars`: global configuration defaults\n* `pre_process`/`post_process`: tasks to be run before any batches commence, or \n  after they've completed\n* `batches`: a list of batches to be run concurrently\n\nEach batch is then split into the following sections (**please note this is \nlikely to be changed during development**): \n\n* configuration: there are numerous options that control how the batch operates\n  * `name`: an identifier that's used as the prefix for the run ID\n  * `templatedir`: directory that will be copied as run directories, can contain \n    both templates and symlinks\n  * `templates`: a list of templates to be processed by Jinja (can be any text \n    file)\n  * `job_file`: the file to be used to submit to SLURM\n  * `cluster`/`basedir`/`email`/`nodes`/`ntasks`/`length`: job_file parameters \n    for SLURM\n  * `maxruns`: the maximum amount of runs to be processing (pre_run, actual run \n    and post_run  activities) at once\n  * `maxjobs`: the maximum amount of jobs to have running in the HPC at once\n* `pre_batch`/`post_batch`: tasks to be run before or after the batch\n* `pre_run`/`post_run`: tasks to be run prior to or after each run within the \n  batch\n\n#### Tasks\n\nThere are numerous tasks that can be defined within the pre_ and post_ sections, \nwhich allow you to specify actions to take place throughout the execution \nlifetime. \n\nTasks are either **checks**, which block until a condition is satisfied, or \n**processing**, which are activities that will do something and result in \nfailure if not completed successfully.\n\n* `jobs` (check): allows you to manually check that there aren't too many jobs \n  running in the HPC.  \n* `submit` (processing): manually submit a task to the HPC backend - in \n  addition to the core submission specified by the configuration. \n* `quota` (check): allows you to check that you have enough user quota space \n  to progress.\n* `check` (check): run a script that returns a success/failure error code. This \n  can be failure tolerant (check will be  repeated) or intolerant (failure \n  will cause the run to fail)\n* `execute` (processing): run a script until completion\n* `move` (processing): copy (using rsync) run directory contents to another \n  destination\n* `remove` (processing): remove either the run directory or another (specified) \n  directory\n\n#### Variables\n\nVariables are available in templates with increasing, overridden, granularity. \nDefaults are specified from `vars` at the top level and then the `run` \ndictionaries, in addition to the batch level configurations, are all available \nwithin the templates.  \n\n### Running the job / CLI reference\n\n```\nusage: model_ensemble [-h] [-n] [-v] [-c] [-s] [-p] [-k SKIPS] [-i INDEXES]\n                   [-ct CHECK_TIMEOUT] [-st SUBMIT_TIMEOUT]\n                   [-rt RUNNING_TIMEOUT] [-et ERROR_TIMEOUT]\n                   configuration\n```\n\n## Contributing\n\nThis program is still under development and is in its infancy, though it's \nprogressed from a one-off tool to reusable (at the British Antarctic Survey \nit's been used for running [WRF][1] ensembles numerous times and will help \npower future [IceNet][3] and Digital Twin pipeline.) \n\nContributions now this is in the public domain are welcome!\n\nI'm now trying to keep to the [Google Style Guide][2] for documentation\n\n## Testimonials\n\nSome lovely folk in the British Antarctic Survey have provided testimonials \ndescribing their use of the ensembler...\n\n__Clare Allen, running significant WRF batches, original motivator \nfor the tool__\n\n```\nThe model-ensembler is a fantastic tool that saves time, reduces stress and \nsignificantly decreases the chance of human error when running many model \nconfigurations.\n\nThe model-ensembler was invaluable for my work as a postdoc at BAS while I was \ninvestigating many (Weather Research and Forecasting) WRF model configurations. \nThe model parameters I wanted to change were stated in a file in a simple and \nintuitive format along with my model running requirements such as number of \nnodes to run the model. The model-ensembler only needed to be submitted once, \nand it would only submit the model runs after checking that there was enough \nspace for the model data and that I had not exceeded my fair usage at that \nmoment while using the academic supercomputer. Once a model run had completed, \nthe model-ensembler automatically transferred the data to an archive space, \nfreeing up space for the next model run. Altogether, this saved me a \nconsiderable amount of time, at least 1 hour per run, if not more, and this \nsoon mounts up when you are submitting tens and hundreds of individual model \nruns. I did not have to set up each model directory, or model setup files. I \ndid not have to check for space, nor submit each model run separately. Nor did \nI have to check or worry about space running out. As this is fully automated, \nthere was much less chance that I would make a mistake and modify the model \nsetup in an unintended way. Using the model-ensembler tool freed up my time, and \nenabled to focus more on the science without being interrupted due to the need \nto set more runs going. The model-ensembler tool is very versatile and can be \nutilised by many models or other computational processes (for example plotting \na lot of data). The model-ensembler is an exceptional tool and I recommend to \nanyone who needs to submit batches of model runs.\n```\n\n__Rosie Williams, using for [WAVI][5] workflow executions__\n\n```\n  I'd say that it would take maybe one day to get an ensemble of 100 WAVI \n  runs up and running, and less than an hour with the model ensembler. Then \n  the resubmitting and monitoring of jobs would have taken up human time and \n  led to down time, when jobs that had timed out were not resubmitted.... \n  it's hard to estimate. Maybe if it was say one month of running time per 100 \n  jobs,  with them all running nicely the whole time in the model ensembler, \n  that might have ended up taking an extra week maybe if the jobs had to be \n  monitored and resubmitted manually (especially if they needed resubmitting \n  on Friday nights!)... It's hard to put a number on how much time it saves. \n  It certainly saves a lot of frustrating and tedium too.....!\n\n  In terms of human hours. With model ensembler: 1h set up, minimal monitoring. \n  Max 1h/week checking everything is running. 3-5 hours maximum total. Without \n  model-ensembler: 8h set up, 2-3 hours for 5 weeks checking and \n  resubmitting jobs: approx 18-25 hours.\n\n  With the manual method, running say 1000 runs would be really horrible. \n  With the ensembler, it'd be easy.\n```\n\n__Tom Andersson, used for [IceNet][6] drop and relearn parameter analysis__\n\n```\n  In terms of the drop-and-relearn experiment it would comprise about 2,000 \n  individual training runs, assuming we use 5 random seeds per run. Assuming \n  it's 1 hour per training run (which I can't remember exactly but is the \n  right order of magnitude) that's a bit over 2 months to compelte with no \n  model ensembler parallelisation.\n\n  It would also have be be finickily set up with SLURM to stop the single job \n  after N runs and resubmit or something. All that bespoke stuff could have \n  taken me 2 weeks or so to get my head around. With the parallelisation of \n  the model ensembler, say 4 job running at a time, we'd get the run-time \n  down to 2 weeks, as well as removing the overhead of me having to fiddle \n  around with submitting the SLURM jobs, which isn't my area of expertise.\n\n  So around 2.5 months to around 2 weeks\n```\n\n## Future plans\n\nCurrent plans are captured now in the github issues. There's nothing in the \nlong term that I'm focusing on for this tool, except to maintain it and see \nif I can promote the usage a bit more. \n\nThis tool was merely to help out with a single support ticket for a weather \nmodel run, but the concept had potential and it was easier than deploying \nsomething more substantial! If there are better approaches or tools that do \nsomething similar, very keen to look at them! \n\nCertainly, things like Airflow and job arrays have similar concepts, but are \neither more heavyweight/less suitable deployment wise or not abstracted enough \nfor simplifying lives, respectively!!!\n\n### Cycl\n\nRecently we noticed at Cycl [4], so in the medium term it's worth evaluating this \ntool and compare it to model\\_ensembler, as it seems pretty lightweight (which\nis the reason many others are a pain to use) and could be a good tool to use in \nplace. model\\_ensembler is just quick and easy, so moving to a decent graph based\nworkflow executor is preferable if you're thinking of long term implementation and\neducation. \n\n## Further documentation\n\nWherever this repository is, there should be a WIKI also. This will go into \nfurther details about the configuration structure and operation.\n\n## Copyright\n\n[MIT LICENSE](LICENSE)\n\n&copy; British Antarctic Survey 2021 \n \n[1]: https://github.com/wrf-model/WRF\n[2]: https://www.sphinx-doc.org/en/master/usage/extensions/example_google.html#example-google\n[3]: https://github.com/antarctica/IceNet-Pipeline\n[4]: https://cylc.github.io/\n[5]: https://github.com/RJArthern/WAVI.jl\n[6]: https://www.nature.com/articles/s41467-021-25257-4\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://www.github.com/jimcircadian/model-ensembler",
    "keywords": "slurm,hpc,tools,batch,model,ensemble,local",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "model-ensembler",
    "package_url": "https://pypi.org/project/model-ensembler/",
    "platform": null,
    "project_url": "https://pypi.org/project/model-ensembler/",
    "project_urls": {
      "Bug Tracker": "https://github.com/jimcircadian/model-ensembler/issues",
      "Homepage": "https://www.github.com/jimcircadian/model-ensembler"
    },
    "release_url": "https://pypi.org/project/model-ensembler/0.5.5/",
    "requires_dist": [
      "jinja2",
      "jsonschema",
      "pyyaml"
    ],
    "requires_python": ">=3.7, <4",
    "summary": "Model Ensembler for managed batch workflows",
    "version": "0.5.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15152968,
  "releases": {
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7d43a281fdb5f2be4632c2f888e01ab7846e38a222817eaebe667d5061a6de45",
          "md5": "bb963f73bfdffe8ebdea8546cc423765",
          "sha256": "e7c4b8f89ad213a915810da69c91889d230306b51a7ab86d51c76dd9507d3d78"
        },
        "downloads": -1,
        "filename": "model_ensembler-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bb963f73bfdffe8ebdea8546cc423765",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6, <4",
        "size": 17247,
        "upload_time": "2021-02-06T18:26:16",
        "upload_time_iso_8601": "2021-02-06T18:26:16.467976Z",
        "url": "https://files.pythonhosted.org/packages/7d/43/a281fdb5f2be4632c2f888e01ab7846e38a222817eaebe667d5061a6de45/model_ensembler-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bc06965e69773ca5ae9736b0a55ee2a21c3cd945feaf98b2482812f3a1520fc0",
          "md5": "45c3e1974aa0ffd2e608f15027fa6726",
          "sha256": "7e25b5bb81d5b19b9861adf70692a1d517e5ca062968870ad3ada2b12a9e4d7f"
        },
        "downloads": -1,
        "filename": "model-ensembler-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "45c3e1974aa0ffd2e608f15027fa6726",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 15550,
        "upload_time": "2021-02-06T18:26:17",
        "upload_time_iso_8601": "2021-02-06T18:26:17.857417Z",
        "url": "https://files.pythonhosted.org/packages/bc/06/965e69773ca5ae9736b0a55ee2a21c3cd945feaf98b2482812f3a1520fc0/model-ensembler-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "281295dff3dc5b87583b25a02431848f6f99eeb8eea94bbd2cb96b541214fe20",
          "md5": "0a7b9bb4491e17ad51f001f642f7d335",
          "sha256": "954a0bf66c9ad57472965c07081d9b2b2211fecac8cd32d78b02e2ef59739943"
        },
        "downloads": -1,
        "filename": "model_ensembler-0.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0a7b9bb4491e17ad51f001f642f7d335",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6, <4",
        "size": 22925,
        "upload_time": "2021-10-07T21:06:19",
        "upload_time_iso_8601": "2021-10-07T21:06:19.373820Z",
        "url": "https://files.pythonhosted.org/packages/28/12/95dff3dc5b87583b25a02431848f6f99eeb8eea94bbd2cb96b541214fe20/model_ensembler-0.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6d52ce9cc00422459103a20941f75008938bfda26141642b7ce3e8c39d70db21",
          "md5": "5eda2c39c7fee9a979c3b4dc34392c61",
          "sha256": "b0e07434a08f3291edece72915c896401599f6c9e847d783bbf56f84c684d55f"
        },
        "downloads": -1,
        "filename": "model-ensembler-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5eda2c39c7fee9a979c3b4dc34392c61",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 18787,
        "upload_time": "2021-10-07T21:06:20",
        "upload_time_iso_8601": "2021-10-07T21:06:20.361995Z",
        "url": "https://files.pythonhosted.org/packages/6d/52/ce9cc00422459103a20941f75008938bfda26141642b7ce3e8c39d70db21/model-ensembler-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0a1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3d9b9344a33002ea86bc951888fe70703d61ce0983135de9622a464b1d1a6542",
          "md5": "45c594545d3b6a793615d5aa3d2207df",
          "sha256": "d66fe47fda5dd3ff90fa9c32091f52d9a3c4a22dc5e5514857eccc00522cb4cf"
        },
        "downloads": -1,
        "filename": "model_ensembler-0.5.0a1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "45c594545d3b6a793615d5aa3d2207df",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6, <4",
        "size": 22698,
        "upload_time": "2021-09-28T16:10:41",
        "upload_time_iso_8601": "2021-09-28T16:10:41.020883Z",
        "url": "https://files.pythonhosted.org/packages/3d/9b/9344a33002ea86bc951888fe70703d61ce0983135de9622a464b1d1a6542/model_ensembler-0.5.0a1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c319d7eec4c2fb3d54f932867febcf382ab683fefca0c00b53277d120609200a",
          "md5": "6f7047d7d567f731c7e78255f0e3985d",
          "sha256": "d683b35ee875db5c897f9c753be7cf7d4c983a327f6a19750cd516cfcb377015"
        },
        "downloads": -1,
        "filename": "model-ensembler-0.5.0a1.tar.gz",
        "has_sig": false,
        "md5_digest": "6f7047d7d567f731c7e78255f0e3985d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 21803,
        "upload_time": "2021-09-28T16:10:42",
        "upload_time_iso_8601": "2021-09-28T16:10:42.392884Z",
        "url": "https://files.pythonhosted.org/packages/c3/19/d7eec4c2fb3d54f932867febcf382ab683fefca0c00b53277d120609200a/model-ensembler-0.5.0a1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0a2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a86bffe1e1b57a4280695bb84133107c8157048a1569060aeac2eb8897cd6e4",
          "md5": "e2a2640241b2b2c635ee2e195e018e29",
          "sha256": "3581c95ea1c539b4b1428ca5383945b34a2bc99ec38be211f9fc1b403f56be1b"
        },
        "downloads": -1,
        "filename": "model_ensembler-0.5.0a2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e2a2640241b2b2c635ee2e195e018e29",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6, <4",
        "size": 22890,
        "upload_time": "2021-10-07T20:40:20",
        "upload_time_iso_8601": "2021-10-07T20:40:20.577222Z",
        "url": "https://files.pythonhosted.org/packages/9a/86/bffe1e1b57a4280695bb84133107c8157048a1569060aeac2eb8897cd6e4/model_ensembler-0.5.0a2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "158f18afe8db511b4ff4822705fa1bbf2dd557d215f23bc6e84e7aad1f4d5dba",
          "md5": "dbed4be8e1c861e735c3420c6fe5c1df",
          "sha256": "802882fbec5dc8b1d6f97ebc126f701f183b0c0d316af9b438cb49db6c65fa4d"
        },
        "downloads": -1,
        "filename": "model-ensembler-0.5.0a2.tar.gz",
        "has_sig": false,
        "md5_digest": "dbed4be8e1c861e735c3420c6fe5c1df",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 18654,
        "upload_time": "2021-10-07T20:40:21",
        "upload_time_iso_8601": "2021-10-07T20:40:21.618967Z",
        "url": "https://files.pythonhosted.org/packages/15/8f/18afe8db511b4ff4822705fa1bbf2dd557d215f23bc6e84e7aad1f4d5dba/model-ensembler-0.5.0a2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9c806c1380fa629c09db1281ac845f801b482ecc5b6cb1534031eff285313ef2",
          "md5": "cc01fa5cafd34568d004da7c2b88c451",
          "sha256": "f7acae671c16417a0ce84686de3c7dda72ea87afa6335db33f206be56a451bcf"
        },
        "downloads": -1,
        "filename": "model_ensembler-0.5.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cc01fa5cafd34568d004da7c2b88c451",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <4",
        "size": 23926,
        "upload_time": "2021-10-31T23:00:01",
        "upload_time_iso_8601": "2021-10-31T23:00:01.875961Z",
        "url": "https://files.pythonhosted.org/packages/9c/80/6c1380fa629c09db1281ac845f801b482ecc5b6cb1534031eff285313ef2/model_ensembler-0.5.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cac9bcb4f7eea9c1be9b3e90dd64ed65b2b7ed18806099564a322f76d4cfe76b",
          "md5": "63ff048ce489bffe027cb72a544350d7",
          "sha256": "d577897efab0512f2396760d2334ed63c5c992f68fe530b18c3ef38c68f9b11c"
        },
        "downloads": -1,
        "filename": "model-ensembler-0.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "63ff048ce489bffe027cb72a544350d7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 19538,
        "upload_time": "2021-10-31T23:00:02",
        "upload_time_iso_8601": "2021-10-31T23:00:02.788316Z",
        "url": "https://files.pythonhosted.org/packages/ca/c9/bcb4f7eea9c1be9b3e90dd64ed65b2b7ed18806099564a322f76d4cfe76b/model-ensembler-0.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "51b7e2ae55a7724f89714afcadf67b2d91776721e69de34c07d66ffbda53a654",
          "md5": "09ace4f488ca4fd20779443a45be70dd",
          "sha256": "cbc12e78f845cda569118c23644711b7f176501bb5bd9c6d8b84c03844c24609"
        },
        "downloads": -1,
        "filename": "model_ensembler-0.5.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "09ace4f488ca4fd20779443a45be70dd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <4",
        "size": 23619,
        "upload_time": "2021-12-13T21:50:36",
        "upload_time_iso_8601": "2021-12-13T21:50:36.693195Z",
        "url": "https://files.pythonhosted.org/packages/51/b7/e2ae55a7724f89714afcadf67b2d91776721e69de34c07d66ffbda53a654/model_ensembler-0.5.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0dd68a8c4b3d59e3fbf0ccd2927de94c8fec9da43b2c31e0eadc891a4796d20e",
          "md5": "6ec33bcd458ca232bf3fa53f8ac7126a",
          "sha256": "4e424c9fbf0f053729bb0d02c8abf9ab7f5449298c154298e426cbecfc1b769e"
        },
        "downloads": -1,
        "filename": "model-ensembler-0.5.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6ec33bcd458ca232bf3fa53f8ac7126a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 23116,
        "upload_time": "2021-12-13T21:50:37",
        "upload_time_iso_8601": "2021-12-13T21:50:37.617396Z",
        "url": "https://files.pythonhosted.org/packages/0d/d6/8a8c4b3d59e3fbf0ccd2927de94c8fec9da43b2c31e0eadc891a4796d20e/model-ensembler-0.5.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "769e6499939c6a958d886e11b2752f92fbb917a6b803dd1e8c8853bdc15515b6",
          "md5": "c94e7b14a1ab567c9e4d9c003c794f7f",
          "sha256": "059b226a21e410cd2eacd7dfeae91fb238cd139b8b31175b8d2747f70d684e88"
        },
        "downloads": -1,
        "filename": "model_ensembler-0.5.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c94e7b14a1ab567c9e4d9c003c794f7f",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.7, <4",
        "size": 25728,
        "upload_time": "2022-03-19T01:19:32",
        "upload_time_iso_8601": "2022-03-19T01:19:32.747704Z",
        "url": "https://files.pythonhosted.org/packages/76/9e/6499939c6a958d886e11b2752f92fbb917a6b803dd1e8c8853bdc15515b6/model_ensembler-0.5.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "32cd972901be9f66e1a88127a181f3d5c82a6e9b352a33a8c4f0f1ee7f3fad3e",
          "md5": "48ed34eb80967985d4b153a406e022f8",
          "sha256": "ecba5772fd3bc929c55e10bfaadf0d25b1f775f5bcda9b5d9bf82dbfba36e8ad"
        },
        "downloads": -1,
        "filename": "model-ensembler-0.5.3.tar.gz",
        "has_sig": false,
        "md5_digest": "48ed34eb80967985d4b153a406e022f8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 21645,
        "upload_time": "2022-03-19T01:19:34",
        "upload_time_iso_8601": "2022-03-19T01:19:34.211333Z",
        "url": "https://files.pythonhosted.org/packages/32/cd/972901be9f66e1a88127a181f3d5c82a6e9b352a33a8c4f0f1ee7f3fad3e/model-ensembler-0.5.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70bb830100ccd4107182851606de89816ef9f869a9bf7d34cf5e7ce62a3743e5",
          "md5": "9e00fbdc1f2c702af600e4f013a9a93f",
          "sha256": "0260f70abcb1f0e005a0b10e7e02ea556b8ec9d850eb5c2fcd3d726f186679e8"
        },
        "downloads": -1,
        "filename": "model_ensembler-0.5.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9e00fbdc1f2c702af600e4f013a9a93f",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.7, <4",
        "size": 27718,
        "upload_time": "2022-04-07T17:20:37",
        "upload_time_iso_8601": "2022-04-07T17:20:37.610203Z",
        "url": "https://files.pythonhosted.org/packages/70/bb/830100ccd4107182851606de89816ef9f869a9bf7d34cf5e7ce62a3743e5/model_ensembler-0.5.4-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "25fe8a3aa4e88a38e10db107f014ee6b83a978030cd0d8334ba6f25d29f9b27b",
          "md5": "10f975b25e2736843fc72d1573b175c7",
          "sha256": "32bbd982bde9aa77fc2cbca9b05c48be7af81ccd385151d121c31c158a9af0e6"
        },
        "downloads": -1,
        "filename": "model-ensembler-0.5.4.tar.gz",
        "has_sig": false,
        "md5_digest": "10f975b25e2736843fc72d1573b175c7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 22760,
        "upload_time": "2022-04-07T17:20:38",
        "upload_time_iso_8601": "2022-04-07T17:20:38.590687Z",
        "url": "https://files.pythonhosted.org/packages/25/fe/8a3aa4e88a38e10db107f014ee6b83a978030cd0d8334ba6f25d29f9b27b/model-ensembler-0.5.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ed791f6cd797571f6fb008062308bcfc5b6637480bc124ccdea4ff5910721fa3",
          "md5": "698dd81964eb5427bdb4122cde5e5dc3",
          "sha256": "5ca5ddcf13a682c6f611aebe032a0689b1af7a74df8101ca1a764c93ebfa004e"
        },
        "downloads": -1,
        "filename": "model_ensembler-0.5.5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "698dd81964eb5427bdb4122cde5e5dc3",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.7, <4",
        "size": 27731,
        "upload_time": "2022-09-20T10:06:37",
        "upload_time_iso_8601": "2022-09-20T10:06:37.166399Z",
        "url": "https://files.pythonhosted.org/packages/ed/79/1f6cd797571f6fb008062308bcfc5b6637480bc124ccdea4ff5910721fa3/model_ensembler-0.5.5-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dba550f9f8e4cc3eed39e46cdb4deee3e4362389b11eadd8e8897d3ee8ae4cb2",
          "md5": "b1150dfa23596ffa380d257c9a347b6f",
          "sha256": "3d2a56d0b7dadded70a8c8b25984b3e2835554ebe4af3ec4961f349692fbc144"
        },
        "downloads": -1,
        "filename": "model-ensembler-0.5.5.tar.gz",
        "has_sig": false,
        "md5_digest": "b1150dfa23596ffa380d257c9a347b6f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 28141,
        "upload_time": "2022-09-20T10:06:38",
        "upload_time_iso_8601": "2022-09-20T10:06:38.462080Z",
        "url": "https://files.pythonhosted.org/packages/db/a5/50f9f8e4cc3eed39e46cdb4deee3e4362389b11eadd8e8897d3ee8ae4cb2/model-ensembler-0.5.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ed791f6cd797571f6fb008062308bcfc5b6637480bc124ccdea4ff5910721fa3",
        "md5": "698dd81964eb5427bdb4122cde5e5dc3",
        "sha256": "5ca5ddcf13a682c6f611aebe032a0689b1af7a74df8101ca1a764c93ebfa004e"
      },
      "downloads": -1,
      "filename": "model_ensembler-0.5.5-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "698dd81964eb5427bdb4122cde5e5dc3",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.7, <4",
      "size": 27731,
      "upload_time": "2022-09-20T10:06:37",
      "upload_time_iso_8601": "2022-09-20T10:06:37.166399Z",
      "url": "https://files.pythonhosted.org/packages/ed/79/1f6cd797571f6fb008062308bcfc5b6637480bc124ccdea4ff5910721fa3/model_ensembler-0.5.5-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dba550f9f8e4cc3eed39e46cdb4deee3e4362389b11eadd8e8897d3ee8ae4cb2",
        "md5": "b1150dfa23596ffa380d257c9a347b6f",
        "sha256": "3d2a56d0b7dadded70a8c8b25984b3e2835554ebe4af3ec4961f349692fbc144"
      },
      "downloads": -1,
      "filename": "model-ensembler-0.5.5.tar.gz",
      "has_sig": false,
      "md5_digest": "b1150dfa23596ffa380d257c9a347b6f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7, <4",
      "size": 28141,
      "upload_time": "2022-09-20T10:06:38",
      "upload_time_iso_8601": "2022-09-20T10:06:38.462080Z",
      "url": "https://files.pythonhosted.org/packages/db/a5/50f9f8e4cc3eed39e46cdb4deee3e4362389b11eadd8e8897d3ee8ae4cb2/model-ensembler-0.5.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}