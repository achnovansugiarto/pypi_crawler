{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "**Burrows Wheeler Transform (BWT) search**\n\nImport the `BWT` class into your namespace for convenience:\n\n```\nfrom BWTsearch import BWT\n```\n\nInitialize a BWT of text with instantiating the BWT class:\n\n```\ntext = \"AGATA\"\n```\n\n```\nbwt = BWT(text)\n```\n\nThe instance bwt now will contain all necessary indices for efficiently searching:\n\n- `bwt.bwt` ... contains the BWT string\n- `bwt.position_list` ... contains the start positions of the rotations for each character of bwt\n- `bwt.ranks` ... contains rank indices for each character of the alphabet in bwt\n- `bwt.cnums` ... contains number of character occurances of the alphabet in bwt\n\nUse the `search()` function to obtain a list of positions of exact matches for pattern in text:\n\n```\npattern = \"AT\"\n```\n\n```\nbwt.search(pattern)\n```\n\nThis returns a list with indexes into text where an exact match occurs. Empty list if none.\nThe pattern will be searched case-sensitive and should not contain $.\n\nUse the `get_text()` function to retrieve the original text from the BWT instance:\n\n```\nbwt.get_text()\n```\n\nIf a sequence file is available, a genome can be loaded from a FASTA file:\n\n```\nphix = BWT.from_fast_file(\"phix.fa\")\n```\n\n```\nphix.search(\"AGATA\")\n```",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "BWTsearch",
    "package_url": "https://pypi.org/project/BWTsearch/",
    "platform": "",
    "project_url": "https://pypi.org/project/BWTsearch/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/BWTsearch/0.1.15/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Burrows Wheeler Transform (BWT) search",
    "version": "0.1.15",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11803547,
  "releases": {
    "0.1.15": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "895622f87fc38ec7ba7d741c25e7e3536de0399fe07cd501514437107ad0c3bd",
          "md5": "b6a086ddaf55cd3f18f989098ad4ded4",
          "sha256": "7efec890feda41669b3b978605a82077e8cad36a643151537b1218ce98d68255"
        },
        "downloads": -1,
        "filename": "BWTsearch-0.1.15.tar.gz",
        "has_sig": false,
        "md5_digest": "b6a086ddaf55cd3f18f989098ad4ded4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2048,
        "upload_time": "2021-10-22T14:01:51",
        "upload_time_iso_8601": "2021-10-22T14:01:51.111200Z",
        "url": "https://files.pythonhosted.org/packages/89/56/22f87fc38ec7ba7d741c25e7e3536de0399fe07cd501514437107ad0c3bd/BWTsearch-0.1.15.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "895622f87fc38ec7ba7d741c25e7e3536de0399fe07cd501514437107ad0c3bd",
        "md5": "b6a086ddaf55cd3f18f989098ad4ded4",
        "sha256": "7efec890feda41669b3b978605a82077e8cad36a643151537b1218ce98d68255"
      },
      "downloads": -1,
      "filename": "BWTsearch-0.1.15.tar.gz",
      "has_sig": false,
      "md5_digest": "b6a086ddaf55cd3f18f989098ad4ded4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 2048,
      "upload_time": "2021-10-22T14:01:51",
      "upload_time_iso_8601": "2021-10-22T14:01:51.111200Z",
      "url": "https://files.pythonhosted.org/packages/89/56/22f87fc38ec7ba7d741c25e7e3536de0399fe07cd501514437107ad0c3bd/BWTsearch-0.1.15.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}