{
  "info": {
    "author": "Niko JÃ¤rvinen",
    "author_email": "nbjarvinen@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Libraries",
      "Topic :: Utilities"
    ],
    "description": "**Dynamic input-output caching for deterministic functions**\n\n|pypi| |docs| |license|\n\nFeatures\n========\n\n* Keep It Simple, Stupid: A single decorator that does everything for you\n* Automagically detects if the decorated function is changed and transparently\n  updates cache accordingly without ever returning cached results of the old\n  function.\n\nInstallation\n============\n\n:code:`pip3 install dyncache`\n\nExamples\n========\n\n.. code:: python3\n   \n   # Import the class\n   from dyncache import Cache\n\n\n   # Use with default options. It will create a file \"circle_area.dyncache\" into\n   # the current directory.\n   @Cache()\n   def circle_area(radius):\n       return 3.14159 * (radius ** 2)\n       \n\n   # Empty parentheses are not required for the decorator.\n   @Cache\n   def circle_area(radius):\n       return 3.14159 * (radius ** 2)\n\n\n   circle_area(2)  # Calculates and returns\n   circle_area(3)  # Calculates and returns\n   circle_area(2)  # Returns from cache\n\n\n   # Saves the cache to /tmp/hello.world.\n   @Cache(root=\"/tmp\", filename=\"hello.world\")\n   def circle_area(radius):\n       ...\n\n\n   # Use for function with large input/output -values.\n   @Cache(largeitems=True)\n   def load_all_api_data_for_a_day(day):\n       ...\n\n\n   # When items are small and cache would update too often, setting autowrite to\n   # False lets you control when the cached data is written to the file.\n   cache = Cache(autowrite=False)\n   @cache\n   def really_frequent_function(a, b):\n       ...\n   ...\n   cache.write()  # Write cache data to the file\n   sys.exit(0)\n\n\nContributing\n============\n\n* Send any issues to GitHub's issue tracker.\n* Before sending a pull request, format it with `Black`_ (-Sl79)\n* Any changes must be updated to the documentation\n* All pull requests must be tested with tox (if you are using pyenv, add the installed versions for py35-py38 and pypy3 to .python-version at the root of this repository before running tox)\n\n\n.. _`Black`: https://github.com/psf/black\n\n.. |pypi| image:: https://img.shields.io/pypi/v/dyncache.svg\n    :alt: PyPI\n    :target: https://pypi.org/project/dyncache/\n.. |docs| image:: https://readthedocs.org/projects/dyncache/badge/?version=latest\n    :alt: Read the Docs\n    :target: http://dyncache.readthedocs.io/en/latest/\n.. |license| image:: https://img.shields.io/github/license/b10011/dyncache.svg\n    :alt: License\n    :target: https://github.com/b10011/dyncache/blob/master/LICENSE\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/b10011/dyncache",
    "keywords": "function,cache,dataset,ai,machine learning",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dyncache",
    "package_url": "https://pypi.org/project/dyncache/",
    "platform": "",
    "project_url": "https://pypi.org/project/dyncache/",
    "project_urls": {
      "Documentation": "https://dyncache.readthedocs.io/en/latest/",
      "Homepage": "https://github.com/b10011/dyncache",
      "Repository": "https://github.com/b10011/dyncache"
    },
    "release_url": "https://pypi.org/project/dyncache/0.1.1/",
    "requires_dist": [
      "cloudpickle (>=1.3.0,<2.0.0)",
      "click (>=7.1.1,<8.0.0)"
    ],
    "requires_python": ">=3.5,<4.0",
    "summary": "Dynamic input-output caching for deterministic functions",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7020187,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "22eca96f6925159347cb51a9a83705630ce33072332869f57b4b9d6d05ed0742",
          "md5": "69fc0b1aa8f5a14d20a66ada59734508",
          "sha256": "63d15582077d8861bfc8b46072fe94320c0e7431db51669e8ad773ec939f2941"
        },
        "downloads": -1,
        "filename": "dyncache-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "69fc0b1aa8f5a14d20a66ada59734508",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5,<4.0",
        "size": 8406,
        "upload_time": "2020-04-14T02:13:11",
        "upload_time_iso_8601": "2020-04-14T02:13:11.587271Z",
        "url": "https://files.pythonhosted.org/packages/22/ec/a96f6925159347cb51a9a83705630ce33072332869f57b4b9d6d05ed0742/dyncache-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef94828eb9acef25a018a21fddbfb0b0e15b493acfbfe599bd64ad57ed4b6a08",
          "md5": "39db6654c812917b680efbd845b05864",
          "sha256": "b76346662a9295758d79a610386062654752d7bc3a013e5b555a6ffedbf79859"
        },
        "downloads": -1,
        "filename": "dyncache-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "39db6654c812917b680efbd845b05864",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5,<4.0",
        "size": 8497,
        "upload_time": "2020-04-14T02:13:13",
        "upload_time_iso_8601": "2020-04-14T02:13:13.854819Z",
        "url": "https://files.pythonhosted.org/packages/ef/94/828eb9acef25a018a21fddbfb0b0e15b493acfbfe599bd64ad57ed4b6a08/dyncache-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d78124c0f5ea0672f2cc87064139f30df2d11051e067b18078de5df5242bdbc9",
          "md5": "4e080947db26d6c4970bea45cbd9eead",
          "sha256": "f4474789165136f99005b4bc0031b0358cd5ba264b97f2428ffd77605596e66d"
        },
        "downloads": -1,
        "filename": "dyncache-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4e080947db26d6c4970bea45cbd9eead",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5,<4.0",
        "size": 5780,
        "upload_time": "2020-04-14T21:03:23",
        "upload_time_iso_8601": "2020-04-14T21:03:23.472781Z",
        "url": "https://files.pythonhosted.org/packages/d7/81/24c0f5ea0672f2cc87064139f30df2d11051e067b18078de5df5242bdbc9/dyncache-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "af5ac19422aca8d88244ba7cfe54ed463b78c712b5e54a6dee06e1306e730bac",
          "md5": "c5e7641c0273a149f8d37e68042bea6d",
          "sha256": "ae6e8c4fdad8dc04003bf5ad1011ac42b9123b1cabcea72908739ae5a6f4a761"
        },
        "downloads": -1,
        "filename": "dyncache-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c5e7641c0273a149f8d37e68042bea6d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5,<4.0",
        "size": 5527,
        "upload_time": "2020-04-14T21:03:24",
        "upload_time_iso_8601": "2020-04-14T21:03:24.939597Z",
        "url": "https://files.pythonhosted.org/packages/af/5a/c19422aca8d88244ba7cfe54ed463b78c712b5e54a6dee06e1306e730bac/dyncache-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d78124c0f5ea0672f2cc87064139f30df2d11051e067b18078de5df5242bdbc9",
        "md5": "4e080947db26d6c4970bea45cbd9eead",
        "sha256": "f4474789165136f99005b4bc0031b0358cd5ba264b97f2428ffd77605596e66d"
      },
      "downloads": -1,
      "filename": "dyncache-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4e080947db26d6c4970bea45cbd9eead",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5,<4.0",
      "size": 5780,
      "upload_time": "2020-04-14T21:03:23",
      "upload_time_iso_8601": "2020-04-14T21:03:23.472781Z",
      "url": "https://files.pythonhosted.org/packages/d7/81/24c0f5ea0672f2cc87064139f30df2d11051e067b18078de5df5242bdbc9/dyncache-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "af5ac19422aca8d88244ba7cfe54ed463b78c712b5e54a6dee06e1306e730bac",
        "md5": "c5e7641c0273a149f8d37e68042bea6d",
        "sha256": "ae6e8c4fdad8dc04003bf5ad1011ac42b9123b1cabcea72908739ae5a6f4a761"
      },
      "downloads": -1,
      "filename": "dyncache-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "c5e7641c0273a149f8d37e68042bea6d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5,<4.0",
      "size": 5527,
      "upload_time": "2020-04-14T21:03:24",
      "upload_time_iso_8601": "2020-04-14T21:03:24.939597Z",
      "url": "https://files.pythonhosted.org/packages/af/5a/c19422aca8d88244ba7cfe54ed463b78c712b5e54a6dee06e1306e730bac/dyncache-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}