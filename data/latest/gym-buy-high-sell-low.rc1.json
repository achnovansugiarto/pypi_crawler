{
  "info": {
    "author": "tjkemp",
    "author_email": "tero.kemppi@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Gym Buy High Sell Low\n\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/gym-buy-high-sell-low)\n![License](https://img.shields.io/github/license/tjkemp/gym-buy-high-sell-low)\n![GitHub last commit](https://img.shields.io/github/last-commit/tjkemp/gym-buy-high-sell-low)\n\n*Gym Buy High Sell Low is* an OpenAI Gym simulated stock market environment that allows training agents to do favorable trades on a hypothetical stock market. Please, don't use this for serious purposes. The goal for this project is personal learning. I feel trying to beat the stock market is a rite of passage when you're getting into reinforcement learning.\n\nObviously, \"buy high, sell low\" is an attempt at humour and a horrible way to do trading.\n\n## Prerequisites\n\n- Python >= 3.7 (tested with latest 3.7, 3.8 and 3.9)\n\n## Getting started\n\nInstall the package either from Pypi or from the repository.\n\n```bash\npip istall gym-buy-high-sell-low\n```\n\nTo install from the repository, follow these steps:\n\nLinux and macOS:\n\n```bash\ngit clone https://github.com/tjkemp/gym-buy-high-sell-low\n\n# create and enter a Python environment here before proceeding\n\npip install requirements/requirements.txt\npip install -e .\n```\n\nAfter installing the package to create an instance of the environment first import both `gym_bhsl` and OpenAI's `gym` package:\n\n```python\n>>> import gym_bhsl\n>>> import gym\n>>> env = gym.make('BuyHighSellLow-v0')\n```\n\nThe environment instance implements the usual OpenAI Gym environment methods.\n\nTo see the observation space and the action space of the environment, use the `env.observation_space` and `env.action_space` properties:\n\n```python\n>>> env.observation_space\nTuple(Box(0.0, 100.0, (1,), float32), Box(0.0, 100.0, (90,), float32))\n\n>>> env.action_space\nDiscrete(3)\n```\n\nThe observation space is a tuple of two `Box` objects, one for the price of the bought stock (or `0.0` if no stock is owned. The second object is the price history for the last 90 days (timesteps).\n\nThe action space is a discrete space of size 3. Integer `0` means hold/wait, `1` means buy, `2` means sell.\n\n`render()` prints out the current state of the environment in a simplified human readable format.\n\n```python\n> env.reset()\n> env.render()\n0. 90d avg: 9.224 7d avg: 8.857. No stocks. Current price 8.192.\n> env.action(1); env.render()  # Buy stocks\n1. 90d avg: 9.212 7d avg: 8.742. Bought at 8.802. Current price 8.946.\n> env.action(0); env.render()  # Hold\n2. 90d avg: 9.185 7d avg: 8.684. Bought at 8.802. Current price 9.918.\n> env.action(2); env.render()  # Sell stocks\n3. 90d avg: 9.185 7d avg: 8.684. Sold with a profit of 0.166 %. Current price 10.264.\n```\n\nThe reward is the profit/loss made from the last trade in percentage. Sell actions are executed on the next timesteps price. You can only buy and hold one stock at a time.\n\n## The simulation\n\nThe stock market is simulated as an Ornstein-Uhlenbeck process. The process is a random walk with a constant mean and a constant standard deviation. At the start of a new task (or at `reset()`) the process is initialized with 90 timesteps of random stock price and the price is updated after each timestep.\n\n## Author\n\n* tjkemp\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/tjkemp/gym-buy-high-sell-low",
    "keywords": "gym environment,reinforcement learning",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "gym-buy-high-sell-low",
    "package_url": "https://pypi.org/project/gym-buy-high-sell-low/",
    "platform": "",
    "project_url": "https://pypi.org/project/gym-buy-high-sell-low/",
    "project_urls": {
      "Bug Tracker": "https://github.com/tpjkemp/gym-buy-high-sell-low/issues",
      "Homepage": "https://github.com/tjkemp/gym-buy-high-sell-low"
    },
    "release_url": "https://pypi.org/project/gym-buy-high-sell-low/0.2.1/",
    "requires_dist": [
      "gym",
      "numpy"
    ],
    "requires_python": ">=3.7",
    "summary": "An OpenAI Gym stock market environment",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11101455,
  "releases": {
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eab9c6a3ef417030389b4509e9e1fb26beef954d475dc3a16af79fee7ea33410",
          "md5": "ff32f10c5e0f79543286e1e8b0852518",
          "sha256": "76c96ca86c895bc00f4937e7bc97316d71fa6158f1531533aa2780db7b5978ec"
        },
        "downloads": -1,
        "filename": "gym_buy_high_sell_low-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ff32f10c5e0f79543286e1e8b0852518",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 9308,
        "upload_time": "2021-08-05T15:19:13",
        "upload_time_iso_8601": "2021-08-05T15:19:13.482784Z",
        "url": "https://files.pythonhosted.org/packages/ea/b9/c6a3ef417030389b4509e9e1fb26beef954d475dc3a16af79fee7ea33410/gym_buy_high_sell_low-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "eab9c6a3ef417030389b4509e9e1fb26beef954d475dc3a16af79fee7ea33410",
        "md5": "ff32f10c5e0f79543286e1e8b0852518",
        "sha256": "76c96ca86c895bc00f4937e7bc97316d71fa6158f1531533aa2780db7b5978ec"
      },
      "downloads": -1,
      "filename": "gym_buy_high_sell_low-0.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ff32f10c5e0f79543286e1e8b0852518",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 9308,
      "upload_time": "2021-08-05T15:19:13",
      "upload_time_iso_8601": "2021-08-05T15:19:13.482784Z",
      "url": "https://files.pythonhosted.org/packages/ea/b9/c6a3ef417030389b4509e9e1fb26beef954d475dc3a16af79fee7ea33410/gym_buy_high_sell_low-0.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}