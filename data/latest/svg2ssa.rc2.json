{
  "info": {
    "author": "8day",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: End Users/Desktop",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Multimedia :: Graphics :: Graphics Conversion",
      "Topic :: Utilities"
    ],
    "description": "# Warning\n\nSVG generated by Inkscape changed so much since svg2ssa was first written, that default output of modern Inkscape versions is more likely to be broken than before. E.g., svg2ssa doesn't understand elements like `circle` which in previous versions were stored as `path` (in this particular example it will suffice to select such objects and execute this command: `Menu > Path > Object to Path`). It still may be useful as an alternative to ASSDraw, but it's much less convenient than before. I guess someone could write accompanying Inkscape script to use Inkscape's own logic to simplify this, or even turn svg2ssa into Inkscape extension, but it won't be me... Esp. not now when Russians plan to continue their invasion in Ukraine.\n\n# About\nsvg2ssa is a converter written in Python 3 that is intended to convert *vector graphics* from SVG produced by Inkscape (although there's a possibility that it can chew SVG from other editors as well) to SSA used by *VSFilter* (mainly because of handling progressive collisions with \\\\org(0,0) w/o the need of change of sub's z-layer value).\n\nThe main audience of this software is \"advanced\" anime typesetters. svg2ssa will help them to create their graphics inside more neat, usable & specifically designed editor like Inkscape. It's hard to enumerate all possible uses and benefits: for some they are minor and not worth it, but for others they may be almost infinite. E.g., Inkscape's feature to trace bitmaps (despite some limits), render 3D objects from Wavefront \\*.OBJ files produced by Blender, convert text to shapes. BTW, conversion of text to shapes means that there's no need to embed fonts for a few titles containing a few letters, maybe even drop font embedding altogether.\n\n# How to use\n1. acquire version of `svg2ssa`:\n\tI. install from PyPI:\n\t\ta. `pip install svg2ssa` - for use with safe XML parser `defusedxml`.\n\t\tb. `pip install svg2ssa[fast-parsing]` - for use with fast XML parser `lxml`. Note that for it to be used, you'll have to add explicit flag `-p lxml.etree`.\n\tII. download one of the standalone executables for Windows at https://github.com/8day/svg2ssa/releases.\n2. convert SVG to SSA: `python -m svg2ssa -i \"c:\\path to dir\\with\\file.svg\" -o \"c:\\path to another dir\\with\\file.ass\"`.\n3. for more info: `python -m svg2ssa --help`.\n\n# Misc info\n### The most notable features of Inkscape & svg2ssa combo\n* [bitmap tracing][1]:\n    * load & select raster image;\n    * go to `Menu > Path > Trace Bitmap...`;\n    * apply filter with desired settings (try `Mode > Multiple scans > Colors`).\n* [rendering of 3D objects][2] (plain models w/o smoothing since it'll require rasterization):\n    * build your own model with Blender;\n    * while in Blender, export it to Wevefront \\*.OBJ by going to `Menu > File > Export > Wevefront (.obj)`;\n    * in Inkscape go to `Menu > Extensions > Render > 3D Polyhedron > Model file > Object > Load from file`;\n    * in `Filename` edit-box paste path to \\*.OBJ file;\n    * in `Style > Z-sort faces by` you *may* want to select `Centroid`.\n* conversion of text to shape:\n    * create some text inside Inkscape;\n    * select it;\n    * go to `Menu > Path > Object to Path`.\n\n### The most notable features of svg2ssa\n* subpixel precision by changing the size of coordinate system (\\\\pN along with hardcoded scaling of drawings; S2S key: `-m {int}`);\n* ability to choose whether to hardcode trafos or convert them to SSA equivalents (S2S key: `-t {scale, translate, rotate}`);\n* other features and how-to can be found by typing `python -m svg2ssa --help` in your terminal.\n\n### What you may want to know\n* as Aegisub, both svg2ssa and Inkscape are cross-platform;\n* stroke rendering in SVG & SSA are a bit different (see `Inkscape > Menu > Object > Fill and Stroke... > Stroke style > Join/Cap`):\n    * in SVG you can set types of segment's joining & capping, but in SSA/VSFilter it's always `Round join` & `Round cap`;\n    * see difference in how SVG & SSA lay down stroke in [s2s-stroke-preservation.svg][3] or [rendered PNG][4]: SVG lays down its stroke in the middle of shape's contour, but SSA lays it down outside.\n* VSFilter always uses SVG's analogue of `fill-rule: nonzero`, so select it inside Inkscape so that your SSA drawings looked the same as SVG (`Inkscape > Menu > Object > Fill and Stroke... > Fill > *two V-like black shapes at the top right corner of the tab*`, select the one that is completely black);\n* it may have some issues with relatively highlevel SVG concepts (especially raster images, text, clipping, masking, compositing etc.), but it should suffice as a replacement for ASSDraw/Aegisub: to draw graphics easier & faster;\n* it supports only subset of drawing commands: M, L, H, V, C, S, Q, T and not Z or A (A may be converted to C/S by selecting object in question and executing `Menu > Path > Simplify`; doesn't always work as expected);\n* it supports only `path` elements. Some other elements, like `circle`, can be converted to `path` by selecting them and executing `Menu > Path > Object to Path`;\n* `viewBox` attribute will mess up rendering (likely to be smaller than expected) -- make sure it's not used.\n* there might be erroneous conversions, especially with color and opacity (they are rear, but still they are present; in this case simplify your graphics/SVG structure by collapsing groups etc.);\n* there's no support for \\*.gzip files;\n* there are similar to this scripts, but which are not \"standalone\": tophf's [AegiDrawing][5] for CorelDRAW and torque's [AI2ASS][6] for Illustrator.\n\n### What you must know\n* this app has no Graphical User Interface, only Command Line Interface;\n* in order for it to work you need to have some version of Python 3 installed on your computer (worked with [3.2.5][7]), or if you use Windows you can download [standalone app][8] (you can download either `s2s-xml.etree.7z` or `s2s-lxml.7z`, but latter *should* be faster);\n* [XML can be dangerous][9], so you may want to use package `defusedxml` instead of either built-in `xml` or fast `lxml`. When installing `svg2ssa` through `pip`, you may want to use this command `pip install svg2ssa[safe-parsing]` to install `defusedxml` as well.\n* since SVG is very complex, this software was made to work with SVGs generated by Inkscape. Illustrator won't work, also some other browser-based editors might not work;\n* the initial purpose was to bridge the gap between fansubbers and a world of more advanced vector editing, but not to be a converter that supports SVG by a 100% (there's probably no such software at all (!));\n* probably will work as intended only with VSFilter.\n\n[1]: https://github.com/8day/svg2ssa/blob/pub/examples/traced-2d/liberty-leading-the-people.jpg.svg.ass.png         \"Bitmap tracing\"\n[2]: https://github.com/8day/svg2ssa/blob/pub/examples/rendered-3d/eva-new-uvs-blender.fbx.blend.obj.svg.ass.png    \"Rendering of 3D objects\"\n[3]: https://github.com/8day/svg2ssa/blob/pub/examples/s2s-stroke-preservation.svg                                  \"s2s-stroke-preservation.svg\"\n[4]: https://github.com/8day/svg2ssa/blob/pub/examples/s2s-stroke-preservation.png                                  \"s2s-stroke-preservation.png\"\n[5]: http://www.fansubs.ru/forum/viewtopic.php?p=523046&sid=1312f5ed191ccf05e7af622a9e053f01#523046                 \"tophf's AegiDrawing\"\n[6]: http://github.com/torque/AI2ASS                                                                                \"torque's AI2ASS\"\n[7]: http://www.python.org/download/releases/3.2.5/                                                                 \"Python 3.2.5\"\n[8]: https://github.com/8day/svg2ssa/releases                                                                       \"cx_Freeze'd binaries for Windows\"\n[9]: https://pypi.org/project/defusedxml/0.7.1/#description\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/8day/svg2ssa",
    "keywords": "",
    "license": "BSD-3-Clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "svg2ssa",
    "package_url": "https://pypi.org/project/svg2ssa/",
    "platform": null,
    "project_url": "https://pypi.org/project/svg2ssa/",
    "project_urls": {
      "Homepage": "https://github.com/8day/svg2ssa"
    },
    "release_url": "https://pypi.org/project/svg2ssa/2022.12.23.0/",
    "requires_dist": [
      "ply (>=3.4,<4.0)",
      "defusedxml (>=0.7,<0.8)",
      "lxml (>=4.0,<5.0) ; extra == \"fast-parsing\""
    ],
    "requires_python": ">=3.7,<4.0",
    "summary": "Converts subset of SVG 1.1 to SSA v4+",
    "version": "2022.12.23.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16199730,
  "releases": {
    "2022.12.22.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "62ff5419cfddd6cae9162fdecd6bb07798f6f43c019214a635a092c755c90af4",
          "md5": "86610da94cb6057ce4a070da4cccf6a5",
          "sha256": "8b964b59ef1be1adce03a40e4035e30fa3bc62acad003c328600f84b7fc38417"
        },
        "downloads": -1,
        "filename": "svg2ssa-2022.12.22.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "86610da94cb6057ce4a070da4cccf6a5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 25959,
        "upload_time": "2022-12-23T11:46:01",
        "upload_time_iso_8601": "2022-12-23T11:46:01.877170Z",
        "url": "https://files.pythonhosted.org/packages/62/ff/5419cfddd6cae9162fdecd6bb07798f6f43c019214a635a092c755c90af4/svg2ssa-2022.12.22.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9b72b6895ec1dc2a53a49d6bb3a536a4601319597c3f0a93712380bac84f1eb2",
          "md5": "458d1b9d640edef5629e75f2705a1ecc",
          "sha256": "5cd14c248aedf3c4eb356d83b1b721fc83cbb43f59359fe6ef4778bdcef461a8"
        },
        "downloads": -1,
        "filename": "svg2ssa-2022.12.22.0.tar.gz",
        "has_sig": false,
        "md5_digest": "458d1b9d640edef5629e75f2705a1ecc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 25109,
        "upload_time": "2022-12-23T11:46:03",
        "upload_time_iso_8601": "2022-12-23T11:46:03.535524Z",
        "url": "https://files.pythonhosted.org/packages/9b/72/b6895ec1dc2a53a49d6bb3a536a4601319597c3f0a93712380bac84f1eb2/svg2ssa-2022.12.22.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2022.12.23.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c512f551ee41693b6efaf2bece12bed6fb33fe1812674ae8fabee3ff1c063765",
          "md5": "073b6299e36a4e77b2bb52b58a45a8d7",
          "sha256": "4b57a2487dc71860a58df02672c0f0ab944fcf56cfd90e90686cbf83ab3be095"
        },
        "downloads": -1,
        "filename": "svg2ssa-2022.12.23.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "073b6299e36a4e77b2bb52b58a45a8d7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 26110,
        "upload_time": "2022-12-23T19:14:48",
        "upload_time_iso_8601": "2022-12-23T19:14:48.579167Z",
        "url": "https://files.pythonhosted.org/packages/c5/12/f551ee41693b6efaf2bece12bed6fb33fe1812674ae8fabee3ff1c063765/svg2ssa-2022.12.23.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "45ff57a9d30810462d51f7dd628e6a58f4ecf6b8dba3443e1e9d8936b2562631",
          "md5": "05eedf449465e55f4bf3c701292f3dad",
          "sha256": "e85238e7f4eb7ed2a6765f29a225f96b9af816b8d6584e6618842af00b8a5202"
        },
        "downloads": -1,
        "filename": "svg2ssa-2022.12.23.0.tar.gz",
        "has_sig": false,
        "md5_digest": "05eedf449465e55f4bf3c701292f3dad",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 25408,
        "upload_time": "2022-12-23T19:14:49",
        "upload_time_iso_8601": "2022-12-23T19:14:49.889480Z",
        "url": "https://files.pythonhosted.org/packages/45/ff/57a9d30810462d51f7dd628e6a58f4ecf6b8dba3443e1e9d8936b2562631/svg2ssa-2022.12.23.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c512f551ee41693b6efaf2bece12bed6fb33fe1812674ae8fabee3ff1c063765",
        "md5": "073b6299e36a4e77b2bb52b58a45a8d7",
        "sha256": "4b57a2487dc71860a58df02672c0f0ab944fcf56cfd90e90686cbf83ab3be095"
      },
      "downloads": -1,
      "filename": "svg2ssa-2022.12.23.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "073b6299e36a4e77b2bb52b58a45a8d7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<4.0",
      "size": 26110,
      "upload_time": "2022-12-23T19:14:48",
      "upload_time_iso_8601": "2022-12-23T19:14:48.579167Z",
      "url": "https://files.pythonhosted.org/packages/c5/12/f551ee41693b6efaf2bece12bed6fb33fe1812674ae8fabee3ff1c063765/svg2ssa-2022.12.23.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "45ff57a9d30810462d51f7dd628e6a58f4ecf6b8dba3443e1e9d8936b2562631",
        "md5": "05eedf449465e55f4bf3c701292f3dad",
        "sha256": "e85238e7f4eb7ed2a6765f29a225f96b9af816b8d6584e6618842af00b8a5202"
      },
      "downloads": -1,
      "filename": "svg2ssa-2022.12.23.0.tar.gz",
      "has_sig": false,
      "md5_digest": "05eedf449465e55f4bf3c701292f3dad",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7,<4.0",
      "size": 25408,
      "upload_time": "2022-12-23T19:14:49",
      "upload_time_iso_8601": "2022-12-23T19:14:49.889480Z",
      "url": "https://files.pythonhosted.org/packages/45/ff/57a9d30810462d51f7dd628e6a58f4ecf6b8dba3443e1e9d8936b2562631/svg2ssa-2022.12.23.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}