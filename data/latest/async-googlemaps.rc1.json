{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Internet"
    ],
    "description": "Asynchronous Python Client for Google Maps Services\n====================================\n\n## Description\n\nThis library is essentially an async \"wrapper\" (not really wrapping anything, but not sure what better term to use)\nof the [google-maps-services-python](https://github.com/googlemaps/google-maps-services-python) library\n\nIt includes all APIs used in [google-maps-services-python](https://github.com/googlemaps/google-maps-services-python)\n\n - Directions API\n - Distance Matrix API\n - Elevation API\n - Geocoding API\n - Geolocation API\n - Time Zone API\n - Roads API\n - Places API\n - Maps Static API\n\n## Key Differences\n\n - At time of writing, [aiohttp](https://github.com/aio-libs/aiohttp) is used for making asynchronous http requests \nand (for now) can't be substituted.\n   - When creating the `async_googlemaps.AsyncClient` object, an `aiohttp.ClientSession` object is a required argument.\n   - The synchronous `googlemaps.Client` has an optional parameter, `requests_session`, which is the synchronous version.\n   - It's required here because (to my knowledge) there's no way to (internally) ensure the async client can be properly closed \n   before the event-loop is closed, therefore it must be handled on the user's end.\n   - If you're unfamiliar with `aiohttp`, you should go read the Client quickstart guide\n   in the [aiohttp docs]('https://docs.aiohttp.org/')\n   - See Usage for details\n## Requirements\n\n - Python 3.5 or later.\n - A Google Maps API key.\n\n## API Keys\n\nEach Google Maps Web Service request requires an API key or client ID. API keys\nare generated in the 'Credentials' page of the 'APIs & Services' tab of [Google Cloud console](https://console.cloud.google.com/apis/credentials).\n\nFor even more information on getting started with Google Maps Platform and generating/restricting an API key, see [Get Started with Google Maps Platform](https://developers.google.com/maps/gmp-get-started) in our docs.\n\n**Important:** This key should be kept secret on your server.\n\n## Installation\n \n    $ pip install -U async_googlemaps\n\n## Usage\n\nThere are basically two ways to create the `async_googlemaps.AsyncClient`\n\nThese examples use the Geocoding API and the Directions API with an API key:\n\n1. ('Preferred' usage) Use an async context manager for the `aiohttp.ClientSession` that will be passed to the\n`async_googlemaps.AsyncClient`\n```python\nfrom async_googlemaps import AsyncClient\nimport aiohttp\nfrom datetime import datetime\n\nasync def main():\n   async with aiohttp.ClientSession() as maps_session:\n      gmaps = AsyncClient(maps_session, key='Add Your Key here')\n\n      # Then use the APIs just as you would with the synchronous version,\n      # but with an await keyword prefacing the method\n      \n      # Geocoding an address\n      geocode_result = await gmaps.geocode('1600 Amphitheatre Parkway, Mountain View, CA')\n          \n      # Look up an address with reverse geocoding\n      reverse_geocode_result = await gmaps.reverse_geocode((40.714224, -73.961452))\n          \n      # Request directions via public transit\n      now = datetime.now()\n      directions_result = await gmaps.directions(\"Sydney Town Hall\",\n                                                   \"Parramatta, NSW\",\n                                                   mode=\"transit\",\n                                                   departure_time=now)\n```\n2. (More flexible) Create your `aiohttp.ClientSession` object without a context-manager, and manually close the ClientSession.\n\n```python\nfrom async_googlemaps import AsyncClient\nimport aiohttp\n\n\nasync def main():\n  session = aiohttp.ClientSession()\n  gmaps = AsyncClient(session, key='Add Your Key here')\n\n  # Geocoding an address\n  geocode_result = await gmaps.geocode('1600 Amphitheatre Parkway, Mountain View, CA')\n  \n  reverse_geocode_result = await gmaps.reverse_geocode((40.714224, -73.961452))\n  \n  # aio_client must be closed manually\n  await session.close()\n```\n\n[//]: # (For more usage examples, check out [the tests]&#40;https://github.com/googlemaps/google-maps-services-python/tree/master/tests&#41;.)\n\n## Features\n\n### Retry on Failure\n\nAutomatically retry when intermittent failures occur. That is, when any of the retriable 5xx errors\nare returned from the API.\n\n\n[//]: # (## Building the Project)\n\n[//]: # ()\n[//]: # ()\n[//]: # (    # Installing nox)\n\n[//]: # (    $ pip install nox)\n\n[//]: # ()\n[//]: # (    # Running tests)\n\n[//]: # (    $ nox)\n\n[//]: # ()\n[//]: # (    # Generating documentation)\n\n[//]: # (    $ nox -e docs)\n\n[//]: # ()\n[//]: # (    # Copy docs to gh-pages)\n\n[//]: # (    $ nox -e docs && mv docs/_build/html generated_docs && git clean -Xdi && git checkout gh-pages)\n\n## Documentation & resources\n\n[Documentation for the `google-maps-services-python` library](https://googlemaps.github.io/google-maps-services-python/docs/index.html)\n\n### Getting started\n- [Get Started with Google Maps Platform](https://developers.google.com/maps/gmp-get-started)\n- [Generating/restricting an API key](https://developers.google.com/maps/gmp-get-started#api-key)\n- [Authenticating with a client ID](https://developers.google.com/maps/documentation/directions/get-api-key#client-id)\n\n### API docs\n- [Google Maps Platform web services](https://developers.google.com/maps/apis-by-platform#web_service_apis)\n- [Directions API](https://developers.google.com/maps/documentation/directions/)\n- [Distance Matrix API](https://developers.google.com/maps/documentation/distancematrix/)\n- [Elevation API](https://developers.google.com/maps/documentation/elevation/)\n- [Geocoding API](https://developers.google.com/maps/documentation/geocoding/)\n- [Geolocation API](https://developers.google.com/maps/documentation/geolocation/)\n- [Time Zone API](https://developers.google.com/maps/documentation/timezone/)\n- [Roads API](https://developers.google.com/maps/documentation/roads/)\n- [Places API](https://developers.google.com/places/)\n- [Maps Static API](https://developers.google.com/maps/documentation/maps-static/)\n\n[//]: # (### Support)\n\n[//]: # (- [Report an issue]&#40;https://github.com/googlemaps/google-maps-services-python/issues&#41;)\n\n[//]: # (- [Contribute]&#40;https://github.com/googlemaps/google-maps-services-python/blob/master/CONTRIB.md&#41;)\n\n[//]: # (- [StackOverflow]&#40;http://stackoverflow.com/questions/tagged/google-maps&#41;)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/shane806/async_googlemaps",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "async-googlemaps",
    "package_url": "https://pypi.org/project/async-googlemaps/",
    "platform": "Posix; MacOS X; Windows",
    "project_url": "https://pypi.org/project/async-googlemaps/",
    "project_urls": {
      "Homepage": "https://github.com/shane806/async_googlemaps"
    },
    "release_url": "https://pypi.org/project/async-googlemaps/0.0.10/",
    "requires_dist": [
      "requests",
      "aiohttp"
    ],
    "requires_python": ">=3.5",
    "summary": "Asynchronous Python client library for Google Maps Platform",
    "version": "0.0.10",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13312686,
  "releases": {
    "0.0.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "be7eab64a62f222b25f567d5e79ff252a53f24c17fb9231dd303111f01ce2572",
          "md5": "6c2675acc14fd8e2c0947791bc74de1f",
          "sha256": "9abcc40aa2e145821f420013d4b6b374efc288619ed6c4461d378b912253bb13"
        },
        "downloads": -1,
        "filename": "async_googlemaps-0.0.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6c2675acc14fd8e2c0947791bc74de1f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 34123,
        "upload_time": "2022-03-27T18:32:40",
        "upload_time_iso_8601": "2022-03-27T18:32:40.581588Z",
        "url": "https://files.pythonhosted.org/packages/be/7e/ab64a62f222b25f567d5e79ff252a53f24c17fb9231dd303111f01ce2572/async_googlemaps-0.0.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea5d549cad8935c76500200a839222c99fa22068025c55f5073b1f0128e6538e",
          "md5": "943e783c99bd0283e53891954f387da0",
          "sha256": "c982e333d3be1900f22cfb3fe6a7bca422d2d741f918ad45f8fc3afa4cb645d1"
        },
        "downloads": -1,
        "filename": "async_googlemaps-0.0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "943e783c99bd0283e53891954f387da0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 26690,
        "upload_time": "2022-03-27T18:32:42",
        "upload_time_iso_8601": "2022-03-27T18:32:42.744213Z",
        "url": "https://files.pythonhosted.org/packages/ea/5d/549cad8935c76500200a839222c99fa22068025c55f5073b1f0128e6538e/async_googlemaps-0.0.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "be7eab64a62f222b25f567d5e79ff252a53f24c17fb9231dd303111f01ce2572",
        "md5": "6c2675acc14fd8e2c0947791bc74de1f",
        "sha256": "9abcc40aa2e145821f420013d4b6b374efc288619ed6c4461d378b912253bb13"
      },
      "downloads": -1,
      "filename": "async_googlemaps-0.0.10-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6c2675acc14fd8e2c0947791bc74de1f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 34123,
      "upload_time": "2022-03-27T18:32:40",
      "upload_time_iso_8601": "2022-03-27T18:32:40.581588Z",
      "url": "https://files.pythonhosted.org/packages/be/7e/ab64a62f222b25f567d5e79ff252a53f24c17fb9231dd303111f01ce2572/async_googlemaps-0.0.10-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ea5d549cad8935c76500200a839222c99fa22068025c55f5073b1f0128e6538e",
        "md5": "943e783c99bd0283e53891954f387da0",
        "sha256": "c982e333d3be1900f22cfb3fe6a7bca422d2d741f918ad45f8fc3afa4cb645d1"
      },
      "downloads": -1,
      "filename": "async_googlemaps-0.0.10.tar.gz",
      "has_sig": false,
      "md5_digest": "943e783c99bd0283e53891954f387da0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 26690,
      "upload_time": "2022-03-27T18:32:42",
      "upload_time_iso_8601": "2022-03-27T18:32:42.744213Z",
      "url": "https://files.pythonhosted.org/packages/ea/5d/549cad8935c76500200a839222c99fa22068025c55f5073b1f0128e6538e/async_googlemaps-0.0.10.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}