{
  "info": {
    "author": "origliante",
    "author_email": "please.visit.github@page.nowhere",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# ethcc\nEthereum smart contracts interface on top of web3py\n\nIn `example.py` you can find a definition for a `flag map` smart contract where you have two methods, `updateFlagCoords` and `flagIdToCoords`. Those two methods are said to accept and return an array of two ints, and in the model you can see how that is handled, so by defining an `encode` method and a `decode` method: those two will be automatically picked up - if defined - by the contract interface (`ethcc/contract_interface.py`).\n\nTODO:\n* add contract creation\n* add logging\n* add tests",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/origliante/ethcc",
    "keywords": "eth,ethereum,smart contracts,web3py,web3.py",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ethcc",
    "package_url": "https://pypi.org/project/ethcc/",
    "platform": "",
    "project_url": "https://pypi.org/project/ethcc/",
    "project_urls": {
      "Homepage": "https://github.com/origliante/ethcc"
    },
    "release_url": "https://pypi.org/project/ethcc/0.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Ethereum smart contracts interface on top of web3py",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7970843,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b2becb07fefb11d1a33d5589e672e6d9402cd8cc4ab375fa30bb2aa8b3082ade",
          "md5": "48334524c0d5b1eb04bb86cb9aefd0e9",
          "sha256": "6ca2128ff2ee3c0a1abbffc5344d7b83e4bb48b2e3bd0c2f9e71983bae192194"
        },
        "downloads": -1,
        "filename": "ethcc-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "48334524c0d5b1eb04bb86cb9aefd0e9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2954,
        "upload_time": "2020-08-16T09:09:15",
        "upload_time_iso_8601": "2020-08-16T09:09:15.532070Z",
        "url": "https://files.pythonhosted.org/packages/b2/be/cb07fefb11d1a33d5589e672e6d9402cd8cc4ab375fa30bb2aa8b3082ade/ethcc-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b2becb07fefb11d1a33d5589e672e6d9402cd8cc4ab375fa30bb2aa8b3082ade",
        "md5": "48334524c0d5b1eb04bb86cb9aefd0e9",
        "sha256": "6ca2128ff2ee3c0a1abbffc5344d7b83e4bb48b2e3bd0c2f9e71983bae192194"
      },
      "downloads": -1,
      "filename": "ethcc-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "48334524c0d5b1eb04bb86cb9aefd0e9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 2954,
      "upload_time": "2020-08-16T09:09:15",
      "upload_time_iso_8601": "2020-08-16T09:09:15.532070Z",
      "url": "https://files.pythonhosted.org/packages/b2/be/cb07fefb11d1a33d5589e672e6d9402cd8cc4ab375fa30bb2aa8b3082ade/ethcc-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}