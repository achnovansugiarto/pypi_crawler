{
  "info": {
    "author": "Diego Palma",
    "author_email": "dipalma@udec.cl",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Education :: Computer Aided Instruction (CAI)"
    ],
    "description": "# TRUNAJOD: A text complexity library for text analysis built on spaCy\n\n``TRUNAJOD`` is a Python library for text complexity analysis build on the \nhigh-performance [spaCy](https://spacy.io/) library. With all the basic NLP capabilities provided by\nspaCy (dependency parsing, POS tagging, tokenizing), ``TRUNAJOD`` focuses on extracting\nmeasurements from texts that might be interesting for different applications and use cases.\nCurrently we only support Spanish.\n\n<p align=\"center\">\n<a href=\"https://travis-ci.com/dpalmasan/TRUNAJOD2.0\"><img alt=\"Build Status\" src=\"https://travis-ci.com/dpalmasan/TRUNAJOD2.0.svg?branch=master\"></a>\n<a href=\"https://trunajod20.readthedocs.io/en/latest/?badge=latest\"><img alt=\"Documentation Status\" src=\"https://readthedocs.org/projects/trunajod20/badge/?version=latest\"></a>\n<a href=\"https://github.com/dpalmasan/TRUNAJOD2.0/blob/master/LICENSE\"><img alt=\"License: MIT\" src=\"https://img.shields.io/github/license/dpalmasan/TRUNAJOD2.0\"></a>\n<a href=\"https://pypi.org/project/TRUNAJOD/\"><img alt=\"PyPI\" src=\"https://img.shields.io/pypi/v/TRUNAJOD\"></a>\n<a href=\"https://pepy.tech/project/trunajod\"><img alt=\"Downloads\" src=\"https://static.pepy.tech/badge/TRUNAJOD\"></a>\n</p>\n\n## Features\n\n* Utilities for text processing such as lemmatization, POS checkings.\n* Semantic measurements from text such as average coherence between sentences and average synonym overlap.\n* Giveness measurements such as pronoun density and pronoun noun ratio.\n* Built-in emotion lexicon to compute emotion calculations based on words in the text.\n* Lexico-semantic norm dataset to compute lexico-semantic variables from text.\n* Type token ratio (TTR) based metrics, and tunnable TTR metrics.\n* A built-in syllabizer (currently only for spanish).\n* Discourse markers based measurements to obtain measures of connectivity inside the text.\n* Plenty of surface proxies of text readability that can be computed directly from text.\n* Measurements of parse tree similarity as an approximation to syntactic complexity.\n* Parse tree correction to add periphrasis and heuristics for clause count, all based on linguistics experience.\n* Entity Grid and entity graphs model implementation as a measure of coherence.\n* An easy to use and user-friendly API.\n\n## Installation\n\nTo install the package:\n\n```\npip install TRUNAJOD\n```\n\n## Getting Started\n\nUsing this package has some other pre-requisites. It assumes that you already have your model set up on spacy. If not, please first install or download a model (for Spanish users, a spanish model). Then you can get started with the following code snippet.\n\nYou can download pre-build `TRUNAJOD` models from the repo, under the `models` directory.\n\nBelow is a small snippet of code that can help you in getting started with this lib. Don´t forget to take a look at the [documentation](https://trunajod20.readthedocs.io/en/latest).\n\n```python\nfrom TRUNAJOD import surface_proxies\nfrom TRUNAJOD.entity_grid import EntityGrid\nfrom TRUNAJOD.lexico_semantic_norms import LexicoSemanticNorm\nimport pickle\nimport spacy\nimport tarfile\n\n\nclass ModelLoader(object):\n    \"\"\"Class to load model.\"\"\"\n    def __init__(self, model_file):\n        tar = tarfile.open(model_file, \"r:gz\")\n        self.crea_frequency = {}\n        self.infinitive_map = {}\n        self.lemmatizer = {}\n        self.spanish_lexicosemantic_norms = {}\n        self.stopwords = {}\n        self.wordnet_noun_synsets = {}\n        self.wordnet_verb_synsets = {}\n\n        for member in tar.getmembers():\n            f = tar.extractfile(member)\n            if \"crea_frequency\" in member.name:\n                self.crea_frequency = pickle.loads(f.read())\n            if \"infinitive_map\" in member.name:\n                self.infinitive_map = pickle.loads(f.read())\n            if \"lemmatizer\" in member.name:\n                self.lemmatizer = pickle.loads(f.read())\n            if \"spanish_lexicosemantic_norms\" in member.name:\n                self.spanish_lexicosemantic_norms = pickle.loads(f.read())\n            if \"stopwords\" in member.name:\n                self.stopwords = pickle.loads(f.read())\n            if \"wordnet_noun_synsets\" in member.name:\n                self.wordnet_noun_synsets = pickle.loads(f.read())\n            if \"wordnet_verb_synsets\" in member.name:\n                self.wordnet_verb_synsets = pickle.loads(f.read())\n\n\n# Load TRUNAJOD models\nmodel = ModelLoader(\"trunajod_models_v0.1.tar.gz\")\n\n# Load spaCy model\nnlp = spacy.load(\"es\", disable=[\"ner\", \"textcat\"])\n\nexample_text = (\n    \"El espectáculo del cielo nocturno cautiva la mirada y suscita preguntas\"\n    \"sobre el universo, su origen y su funcionamiento. No es sorprendente que \"\n    \"todas las civilizaciones y culturas hayan formado sus propias \"\n    \"cosmologías. Unas relatan, por ejemplo, que el universo ha\"\n    \"sido siempre tal como es, con ciclos que inmutablemente se repiten; \"\n    \"otras explican que este universo ha tenido un principio, \"\n    \"que ha aparecido por obra creadora de una divinidad.\"\n)\n\ndoc = nlp(example_text)\n\n# Lexico-semantic norms\nlexico_semantic_norms = LexicoSemanticNorm(\n    doc,\n    model.spanish_lexicosemantic_norms,\n    model.lemmatizer\n)\n\n# Frequency index\nfreq_index = surface_proxies.frequency_index(doc, model.crea_frequency)\n\n# Clause count (heurístically)\nclause_count = surface_proxies.clause_count(doc, model.infinitive_map)\n\n# Compute Entity Grid\negrid = EntityGrid(doc)\n\nprint(\"Concreteness: {}\".format(lexico_semantic_norms.get_concreteness()))\nprint(\"Frequency Index: {}\".format(freq_index))\nprint(\"Clause count: {}\".format(clause_count))\nprint(\"Entity grid:\")\nprint(egrid.get_egrid())\n```\n\nThis should output:\n\n```\nConcreteness: 1.95\nFrequency Index: -0.7684649336888104\nClause count: 10\nEntity grid:\n{'ESPECTÁCULO': ['S', '-', '-'], 'CIELO': ['X', '-', '-'], 'MIRADA': ['O', '-', '-'], 'UNIVERSO': ['O', '-', 'S'], 'ORIGEN': ['X', '-', '-'], 'FUNCIONAMIENTO': ['X', '-', '-'], 'CIVILIZACIONES': ['-', 'S', '-'], 'CULTURAS': ['-', 'X', '-'], 'COSMOLOGÍAS': ['-', 'O', '-'], 'EJEMPLO': ['-', '-', 'X'], 'TAL': ['-', '-', 'X'], 'CICLOS': ['-', '-', 'X'], 'QUE': ['-', '-', 'S'], 'SE': ['-', '-', 'O'], 'OTRAS': ['-', '-', 'S'], 'PRINCIPIO': ['-', '-', 'O'], 'OBRA': ['-', '-', 'X'], 'DIVINIDAD': ['-', '-', 'X']}\n```\n\n\n## References\n\nIf you find anything of this useful, feel free to cite the following papers, from which a lot of this python library was made for (I am also in the process of submitting this lib to an open software journal):\n\n1. [Palma, D., & Atkinson, J. (2018). Coherence-based automatic essay assessment. IEEE Intelligent Systems, 33(5), 26-36.](https://ieeexplore.ieee.org/abstract/document/8506398/)\n2. [Palma, D., Soto, C., Veliz, M., Riffo, B., & Gutiérrez, A. (2019, August). A Data-Driven Methodology to Assess Text Complexity Based on Syntactic and Semantic Measurements. In International Conference on Human Interaction and Emerging Technologies (pp. 509-515). Springer, Cham.](https://link.springer.com/chapter/10.1007/978-3-030-25629-6_79)\n\n```\n@article{palma2018coherence,\n  title={Coherence-based automatic essay assessment},\n  author={Palma, Diego and Atkinson, John},\n  journal={IEEE Intelligent Systems},\n  volume={33},\n  number={5},\n  pages={26--36},\n  year={2018},\n  publisher={IEEE}\n}\n\n@inproceedings{palma2019data,\n  title={A Data-Driven Methodology to Assess Text Complexity Based on Syntactic and Semantic Measurements},\n  author={Palma, Diego and Soto, Christian and Veliz, M{\\'o}nica and Riffo, Bernardo and Guti{\\'e}rrez, Antonio},\n  booktitle={International Conference on Human Interaction and Emerging Technologies},\n  pages={509--515},\n  year={2019},\n  organization={Springer}\n}\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/dpalmasan/TRUNAJOD2.0/archive/refs/tags/v0.1.1.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dpalmasan/TRUNAJOD2.0",
    "keywords": "NLP,readability,entity grid,linguistics,nlp,text complexity",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "TRUNAJOD",
    "package_url": "https://pypi.org/project/TRUNAJOD/",
    "platform": "",
    "project_url": "https://pypi.org/project/TRUNAJOD/",
    "project_urls": {
      "Bug Tracker": "https://github.com/dpalmasan/TRUNAJOD2.0/issues",
      "Documentation": "https://trunajod20.readthedocs.io/en/latest/",
      "Download": "https://github.com/dpalmasan/TRUNAJOD2.0/archive/refs/tags/v0.1.1.tar.gz",
      "Homepage": "https://github.com/dpalmasan/TRUNAJOD2.0",
      "Source Code": "https://github.com/dpalmasan/TRUNAJOD2.0"
    },
    "release_url": "https://pypi.org/project/TRUNAJOD/0.1.1/",
    "requires_dist": [
      "spacy (>=2.3.2)"
    ],
    "requires_python": ">=3.6",
    "summary": "A python lib for readability analyses.",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10033597,
  "releases": {
    "0.1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "abcaef16e4599654e1bf1cfd290562d1e13af957c1ac9685c26928cadb72fc35",
          "md5": "8220219f3ecbe1e2b3e3dfc0d77de0ad",
          "sha256": "c42737f8dc5ddb1225d2bdc4449ff42773c975ab3a56d05564fe2c6cb7b522b5"
        },
        "downloads": -1,
        "filename": "TRUNAJOD-0.1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8220219f3ecbe1e2b3e3dfc0d77de0ad",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 116411,
        "upload_time": "2020-04-11T06:39:58",
        "upload_time_iso_8601": "2020-04-11T06:39:58.178492Z",
        "url": "https://files.pythonhosted.org/packages/ab/ca/ef16e4599654e1bf1cfd290562d1e13af957c1ac9685c26928cadb72fc35/TRUNAJOD-0.1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ccaea79f183154da620c36481b819982040f7a8e1269bfe6590415c06ff4f093",
          "md5": "267ba8c8ead8260348eabdf023282a03",
          "sha256": "21fea9dfed300ff9ba412f4d799bc0a9b35c0563016288611b60d424ea79c93a"
        },
        "downloads": -1,
        "filename": "TRUNAJOD-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "267ba8c8ead8260348eabdf023282a03",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 121975,
        "upload_time": "2021-04-11T20:03:29",
        "upload_time_iso_8601": "2021-04-11T20:03:29.972547Z",
        "url": "https://files.pythonhosted.org/packages/cc/ae/a79f183154da620c36481b819982040f7a8e1269bfe6590415c06ff4f093/TRUNAJOD-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1b0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ece97f667f43aed97621ad304269cc34e9df4f361eafb14433e886a385543a7a",
          "md5": "9dcc3971272153a3ea9abfa07f2f84bf",
          "sha256": "3fca81eb8202b3d03e4458cf3282cdba07a62b8e003e9e72055a78e7704b6229"
        },
        "downloads": -1,
        "filename": "TRUNAJOD-0.1.1b0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9dcc3971272153a3ea9abfa07f2f84bf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 121999,
        "upload_time": "2021-04-11T20:04:39",
        "upload_time_iso_8601": "2021-04-11T20:04:39.292234Z",
        "url": "https://files.pythonhosted.org/packages/ec/e9/7f667f43aed97621ad304269cc34e9df4f361eafb14433e886a385543a7a/TRUNAJOD-0.1.1b0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "41344121934169fd3493e3ebaf498df0a82d564203b1d09a2117660264e1e0b9",
          "md5": "0c5858ad9761d7e87d3d3093a5b1214c",
          "sha256": "92bdaa8174c127f90a1b1689724b35e02548ffead2239dee111986a12a404ddb"
        },
        "downloads": -1,
        "filename": "TRUNAJOD-0.1.1b0.tar.gz",
        "has_sig": false,
        "md5_digest": "0c5858ad9761d7e87d3d3093a5b1214c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 123419,
        "upload_time": "2021-04-11T20:04:40",
        "upload_time_iso_8601": "2021-04-11T20:04:40.916016Z",
        "url": "https://files.pythonhosted.org/packages/41/34/4121934169fd3493e3ebaf498df0a82d564203b1d09a2117660264e1e0b9/TRUNAJOD-0.1.1b0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ccaea79f183154da620c36481b819982040f7a8e1269bfe6590415c06ff4f093",
        "md5": "267ba8c8ead8260348eabdf023282a03",
        "sha256": "21fea9dfed300ff9ba412f4d799bc0a9b35c0563016288611b60d424ea79c93a"
      },
      "downloads": -1,
      "filename": "TRUNAJOD-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "267ba8c8ead8260348eabdf023282a03",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 121975,
      "upload_time": "2021-04-11T20:03:29",
      "upload_time_iso_8601": "2021-04-11T20:03:29.972547Z",
      "url": "https://files.pythonhosted.org/packages/cc/ae/a79f183154da620c36481b819982040f7a8e1269bfe6590415c06ff4f093/TRUNAJOD-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}