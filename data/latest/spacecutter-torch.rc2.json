{
  "info": {
    "author": "Soof Golan",
    "author_email": "pypi@soofgolan.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# spacecutter-torch\n\n`spacecutter-torch` is a library for implementing ordinal regression models in PyTorch. The library consists of models and loss functions.\n\n## Installation\n\n```bash\npip install spacecutter-torch\n```\n\n## Usage\n\n### Models\n\nDefine any PyTorch model you want that generates a single, scalar prediction value. This will be our `predictor` model. This model can then be wrapped with `spacecutter.models.OrdinalLogisticModel` which will convert the output of the `predictor` from a single number to an array of ordinal class probabilities. The following example shows how to do this for a two layer neural network `predictor` for a problem with three ordinal classes.\n\n```python\nimport torch\nfrom torch import nn\n\nfrom spacecutter.models import OrdinalLogisticHead\n\n\nX = torch.tensor([[0.5, 0.1, -0.1],\n              [1.0, 0.2, 0.6],\n              [-2.0, 0.4, 0.8]]).float()\n\ny = torch.tensor([0, 1, 2]).reshape(-1, 1).long()\n\nnum_features = X.shape[1]\nnum_classes = len(torch.unique(y))\n\nmodel = nn.Sequential(\n    nn.Linear(num_features, num_features),\n    nn.ReLU(),\n    nn.Linear(num_features, 1),\n    OrdinalLogisticHead(num_classes),\n)\n\ny_pred = model(X)\n\nprint(y_pred)\n\n# tensor([[0.2325, 0.2191, 0.5485],\n#         [0.2324, 0.2191, 0.5485],\n#         [0.2607, 0.2287, 0.5106]], grad_fn=<CatBackward>)\n\n```\n\n### Training\n\nThe following shows how to train the model from the previous section using cumulative link loss:\n\n```python\nimport torch\nfrom spacecutter.callbacks import AscensionCallback\nfrom spacecutter.losses import CumulativeLinkLoss\n\ndef train(model, optimizer, X, y, num_epochs = 10) -> list:\n    \"\"\"\n    you can bring your own training loop if you want, but we provide a very simple one here. \n    \"\"\"\n    model.train()\n    on_batch_end_callbacks = [AscensionCallback()]\n    loss_fn = CumulativeLinkLoss()\n    losses = []\n    for epoch in range(num_epochs):\n        optimizer.zero_grad()\n        y_pred = model(X)\n        loss = loss_fn(y_pred, y)\n        loss.backward()\n        optimizer.step()\n        losses.append(loss.item())\n        with torch.no_grad():\n            for callback in on_batch_end_callbacks:\n                model.apply(callback)\n    return losses\n\noptimizer = torch.optim.Adam(model.parameters(), lr=0.01)\nlosses = train(model, optimizer, X, y)\n\n```\n\nNote that we must add the `AscensionCallback`. This ensures that the ordinal cutpoints stay in ascending order. While ideally this constraint would be factored directly into the model optimization, `spacecutter` currently hacks an SGD-compatible solution by utilizing a post-backwards-pass callback to clip the cutpoint values.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "spacecutter-torch",
    "package_url": "https://pypi.org/project/spacecutter-torch/",
    "platform": null,
    "project_url": "https://pypi.org/project/spacecutter-torch/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/spacecutter-torch/0.4.1/",
    "requires_dist": [
      "torch (>=1.1.0,<2.0.0)"
    ],
    "requires_python": ">=3.8,<4.0",
    "summary": "Ordinal regression models in PyTorch",
    "version": "0.4.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17077323,
  "releases": {
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7f9dcc360dcd5051b3d1915ca02d3edfe33e60ff5e45f8f8147aa0193bd42cc4",
          "md5": "d5eb5da3d1b9117a4f56b664fc39d4c1",
          "sha256": "5013912747c9bbccec7f0f0063d9b9137268cc5a3da8a7efb941a70326f19aca"
        },
        "downloads": -1,
        "filename": "spacecutter_torch-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d5eb5da3d1b9117a4f56b664fc39d4c1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 6574,
        "upload_time": "2023-02-27T20:20:03",
        "upload_time_iso_8601": "2023-02-27T20:20:03.427999Z",
        "url": "https://files.pythonhosted.org/packages/7f/9d/cc360dcd5051b3d1915ca02d3edfe33e60ff5e45f8f8147aa0193bd42cc4/spacecutter_torch-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7d2b979bff426b4f7952c71b6672fcaac1e65df0c32798ecafaec8597806196d",
          "md5": "4d34cfdd56c7b94213dd1d6ebe53dad6",
          "sha256": "7954fd2843658e31da833ca159c36d4c1ae5baae369dcb720130338a4c464078"
        },
        "downloads": -1,
        "filename": "spacecutter_torch-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4d34cfdd56c7b94213dd1d6ebe53dad6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 5287,
        "upload_time": "2023-02-27T20:20:05",
        "upload_time_iso_8601": "2023-02-27T20:20:05.208838Z",
        "url": "https://files.pythonhosted.org/packages/7d/2b/979bff426b4f7952c71b6672fcaac1e65df0c32798ecafaec8597806196d/spacecutter_torch-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e2f09efaa65a82912f3a925eeb65de4ca0ddfbbbc8eee82a73661b99edd41ca3",
          "md5": "cf56843fb5fdce633b1da5ce28f8bad9",
          "sha256": "09596ec8655aa8e3d733c5bd818d6b831e227654107cb4a0f22e8b133a5a6cb7"
        },
        "downloads": -1,
        "filename": "spacecutter_torch-0.4.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cf56843fb5fdce633b1da5ce28f8bad9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 6576,
        "upload_time": "2023-02-28T04:28:32",
        "upload_time_iso_8601": "2023-02-28T04:28:32.686642Z",
        "url": "https://files.pythonhosted.org/packages/e2/f0/9efaa65a82912f3a925eeb65de4ca0ddfbbbc8eee82a73661b99edd41ca3/spacecutter_torch-0.4.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "71d14130c5e8d27ef92559f450d436bb2051326b0e1778d60152c579701066ec",
          "md5": "c5cc5276851d98bc5216cab8075b07a4",
          "sha256": "6006147dd21696e2c02840c3312f3fe01a77c55fea6490722433259a4a6cecf4"
        },
        "downloads": -1,
        "filename": "spacecutter_torch-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c5cc5276851d98bc5216cab8075b07a4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 5293,
        "upload_time": "2023-02-28T04:28:34",
        "upload_time_iso_8601": "2023-02-28T04:28:34.175644Z",
        "url": "https://files.pythonhosted.org/packages/71/d1/4130c5e8d27ef92559f450d436bb2051326b0e1778d60152c579701066ec/spacecutter_torch-0.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e2f09efaa65a82912f3a925eeb65de4ca0ddfbbbc8eee82a73661b99edd41ca3",
        "md5": "cf56843fb5fdce633b1da5ce28f8bad9",
        "sha256": "09596ec8655aa8e3d733c5bd818d6b831e227654107cb4a0f22e8b133a5a6cb7"
      },
      "downloads": -1,
      "filename": "spacecutter_torch-0.4.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "cf56843fb5fdce633b1da5ce28f8bad9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<4.0",
      "size": 6576,
      "upload_time": "2023-02-28T04:28:32",
      "upload_time_iso_8601": "2023-02-28T04:28:32.686642Z",
      "url": "https://files.pythonhosted.org/packages/e2/f0/9efaa65a82912f3a925eeb65de4ca0ddfbbbc8eee82a73661b99edd41ca3/spacecutter_torch-0.4.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "71d14130c5e8d27ef92559f450d436bb2051326b0e1778d60152c579701066ec",
        "md5": "c5cc5276851d98bc5216cab8075b07a4",
        "sha256": "6006147dd21696e2c02840c3312f3fe01a77c55fea6490722433259a4a6cecf4"
      },
      "downloads": -1,
      "filename": "spacecutter_torch-0.4.1.tar.gz",
      "has_sig": false,
      "md5_digest": "c5cc5276851d98bc5216cab8075b07a4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<4.0",
      "size": 5293,
      "upload_time": "2023-02-28T04:28:34",
      "upload_time_iso_8601": "2023-02-28T04:28:34.175644Z",
      "url": "https://files.pythonhosted.org/packages/71/d1/4130c5e8d27ef92559f450d436bb2051326b0e1778d60152c579701066ec/spacecutter_torch-0.4.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}