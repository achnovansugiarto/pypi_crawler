{
  "info": {
    "author": "Arian Jamasb",
    "author_email": "arian@jamasb.io",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# graphtype\n\nType hinting for networkx Graphs\n\n## Installation\n\n```thon\npip install graphtype\n```\n\n## Usage\n\nThere are two parts in graphtype: the type-hinting part, and the validation. You can use type-hinting with the provided class to indicate attributes graphs should possess, and the validation decorator to additionally ensure the format is respected in every function call.\n\n### Type-Hinting `Graph`\n\n```thon\nfrom graphtype import Graph\n\ndef do_something_to_graph(g: Graph)\n    pass\n```\n\n### Type-Hinting Graph Attributes `GraphData`\n\n```thon\nfrom graphtype import Graph, GraphData\n\n\ndef do_something_to_graph(g: Graph[GraphData[\"name\"]])\n    pass\n\n# Each node must have a \"name\" attribute\n\ndef do_something_to_graph(g: Graph[GraphData[\"name\": str]])\n    pass\n\n# type(g.graph[\"name\"]) == str must be True\n```\n\n### Type-Hinting Graph Attributes `NodeData`\n\n```thon\nfrom graphtype import Graph, NodeData\n\ndef do_something_to_graph(g: Graph[NodeData[\"feature\"]])\n    pass\n\n# Each node must have a \"feature\" attribute\n\ndef do_something_to_graph(g: Graph[NodeData[\"feature\": np.ndarray]])\n    pass\n\n# for n, d in g.nodes(data=True):\n#   type(d[\"feature\"]) == np.ndarray must be True\n```\n\n### Type-Hinting Graph Attributes `NodeData`\n\n```thon\nfrom graphtype import Graph, EdgeData\n\ndef do_something_to_graph(g: Graph[EdgeData[\"feature\"]])\n    pass\n\n# Each edge must have a \"feature\" attribute\n\ndef do_something_to_graph(g: Graph[EdgeData[\"feature\": pd.DataFrame]])\n    pass\n\n# for u, v, d in g.edges(data=True):\n#   type(d[\"feature\"]) == pd.DataFrame must be True\n```\n\n## Enforcing: `@validate`\n\nThe `@validate` decorator ensures that input `Graphs` have the right format when the function is called, otherwise raises `TypeError`.\n\n```thon\n@validate\ndef func(g: Graph[NodeData[\"feature1\": pd.DataFrame, \"feature2\": int],\n                  EdgeData[\"length\": float, \"counts\": np.ndarray],\n                  GraphData[\"name\": str]],\n         h: Graph[NodeData[\"feature1\": pd.DataFrame, \"feature2\": int]],\n         ):\n    pass\n```\n\nThis package is heavily inspired by [Dataenforce](https://github.com/CedricFR/dataenforce).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/a-r-j/graphtype",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "graphtype",
    "package_url": "https://pypi.org/project/graphtype/",
    "platform": null,
    "project_url": "https://pypi.org/project/graphtype/",
    "project_urls": {
      "Homepage": "https://github.com/a-r-j/graphtype"
    },
    "release_url": "https://pypi.org/project/graphtype/0.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Enforce graph, node and edge attribute types on NetworkX Graphs.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14421480,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7d5b6ea3003a96d6d37bae8d996edb5e5c5a32e7844835295d4cfcde487f672a",
          "md5": "fa01f780f7b3d0d0a321533a9f5690aa",
          "sha256": "c2f4ffd618e47e81f58d46fc28fdc299372113d37dafbc8b3323f6695e70aba8"
        },
        "downloads": -1,
        "filename": "graphtype-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "fa01f780f7b3d0d0a321533a9f5690aa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7834,
        "upload_time": "2022-07-12T20:12:33",
        "upload_time_iso_8601": "2022-07-12T20:12:33.845591Z",
        "url": "https://files.pythonhosted.org/packages/7d/5b/6ea3003a96d6d37bae8d996edb5e5c5a32e7844835295d4cfcde487f672a/graphtype-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0456e6703057114e1d3e5cb8626032ab68cfdab039f64174e94f8c1c8d0acb16",
          "md5": "a37cc45b201c6c936ca1d2c9e6486400",
          "sha256": "d4a68ca80b97a306451458a6297acaa4bf196cc39d3d2603bdc1365ffcb8d330"
        },
        "downloads": -1,
        "filename": "graphtype-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a37cc45b201c6c936ca1d2c9e6486400",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9109,
        "upload_time": "2022-07-13T11:51:13",
        "upload_time_iso_8601": "2022-07-13T11:51:13.067984Z",
        "url": "https://files.pythonhosted.org/packages/04/56/e6703057114e1d3e5cb8626032ab68cfdab039f64174e94f8c1c8d0acb16/graphtype-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0456e6703057114e1d3e5cb8626032ab68cfdab039f64174e94f8c1c8d0acb16",
        "md5": "a37cc45b201c6c936ca1d2c9e6486400",
        "sha256": "d4a68ca80b97a306451458a6297acaa4bf196cc39d3d2603bdc1365ffcb8d330"
      },
      "downloads": -1,
      "filename": "graphtype-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "a37cc45b201c6c936ca1d2c9e6486400",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9109,
      "upload_time": "2022-07-13T11:51:13",
      "upload_time_iso_8601": "2022-07-13T11:51:13.067984Z",
      "url": "https://files.pythonhosted.org/packages/04/56/e6703057114e1d3e5cb8626032ab68cfdab039f64174e94f8c1c8d0acb16/graphtype-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}