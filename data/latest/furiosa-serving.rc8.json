{
  "info": {
    "author": null,
    "author_email": "\"FurioaAI, Inc.\" <pkg@furiosa.ai>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "Furiosa Serving\n-------------\nFuriosa serving is a lightweight library based on [FastAPI](https://fastapi.tiangolo.com/) to make a model server running on a Furiosa NPU.\n\n## Dependency\nFuriosa serving depends on followings:\n\n- Furiosa NPU\n- [furiosa-server](https://github.com/furiosa-ai/furiosa-sdk/tree/main/python/furiosa-server)\n- [furiosa-registry](https://github.com/furiosa-ai/furiosa-sdk/tree/main/python/furiosa-registry)\n\n## Installation\n`furiosa-serving` can be installed from PyPI using `pip` (note that the package name is different from the importable name)::\n\n```sh\npip install 'furiosa-sdk[serving]'\n```\n\n## Getting started\nThere is one main API called `ServeAPI`. You can think of `ServeAPI` as a kind of `FastAPI` wrapper.\n\n\n### Run server\n\n```python\n# main.py\nfrom fastapi import FastAPI\nfrom furiosa.serving import ServeAPI\n\nserve = ServeAPI()\n\n# This is FastAPI instance\napp: FastAPI = serve.app\n```\n\nYou can run [uvicorn](https://www.uvicorn.org/) server via internal `app` variable from `ServeAPI` instance like [normal FastAPI application](https://fastapi.tiangolo.com/tutorial/first-steps/#first-steps)\n\n```sh\n$ uvicorn main:app # or uvicorn main:serve.app\n```\n\n### Load model\n\nFrom `ServeAPI`, you can load your model binary which will be running on a Furiosa NPU. You should specify model name and URI where to load the model. URI can be one of them below\n\n- Local file\n- HTTP\n- [S3](https://docs.aws.amazon.com/s3/index.html)\n\nNote that model binary which is now supported by Furiosa NPU should be one of them below\n\n- [Tensorflow lite (tflite)](https://www.tensorflow.org/lite/)\n- [ONNX](https://github.com/onnx/onnx)\n\n```python\nfrom furiosa.common.thread import synchronous\nfrom furiosa.serving import ServeAPI, ServeModel\n\n\nserve = ServeAPI()\n\n\n# Load model from local disk\nimagenet: ServeModel = synchronous(serve.model(\"nux\"))(\n    'imagenet',\n    location='./examples/assets/models/image_classification.onnx'\n)\n\n# Load model from HTTP\nresnet: ServeModel = synchronous(serve.model(\"nux\"))(\n    'imagenet',\n     location='https://raw.githubusercontent.com/onnx/models/main/vision/classification/resnet/model/resnet50-v1-12.onnx'\n)\n\n# Load model from S3 (Auth environment variable for aioboto library required)\ndensenet: ServeModel = synchronous(serve.model(\"nux\"))(\n    'imagenet',\n     location='s3://furiosa/models/93d63f654f0f192cc4ff5691be60fb9379e9d7fd'\n)\n```\n\n### Define API\n\nFrom a model you just created, you can define [FastAPI path operation decorator](https://fastapi.tiangolo.com/tutorial/first-steps/#define-a-path-operation-decorator) like `post()`, `get()` to expose API endpoints.\n\nYou should follow [FastAPI Request Body concept](https://fastapi.tiangolo.com/tutorial/body/) to correctly define payload.\n\n> :warning: This example below is not actually working as you have to define your own preprocess(), postprocess() functions first.\n\n```python\nfrom typing import Dict\n\nfrom fastapi import File, UploadFile\nfrom furiosa.common.thread import synchronous\nfrom furiosa.serving import ServeAPI, ServeModel\nimport numpy as np\n\n\nserve = ServeAPI()\n\n\nmodel: ServeModel = synchronous(serve.model(\"nux\"))(\n    'imagenet',\n    location='./examples/assets/models/image_classification.onnx'\n)\n\n@model.post(\"/models/imagenet/infer\")\nasync def infer(image: UploadFile = File(...)) -> Dict:\n    # Convert image to Numpy array with your preprocess() function\n    tensors: List[np.ndarray] = preprocess(image)\n\n    # Infer from ServeModel\n    result: List[np.ndarray] = await model.predict(tensors)\n\n    # Classify model from numpy array with your postprocess() function\n    response: Dict = postprocess(result)\n\n    return response\n```\n\nAfter running uvicorn server, you can find [documentations](https://fastapi.tiangolo.com/#interactive-api-docs) provided by FastAPI at localhost:8000/docs\n\n\n### Use sub applications\n\nFuriosa serving provides predefined [FastAPI sub applications](https://fastapi.tiangolo.com/advanced/sub-applications/) to give you additional functionalities out of box.\n\nYou can mount the _sub applications_ using `mount()`. We provides several _sub applications_ like below\n\n- **Repository**: model repository to list models and load/unload a model dynamically\n- **Model**: model metadata, model readiness\n- **Health**: server health, server readiness\n\n```python\nfrom fastapi import FastAPI\nfrom furiosa.serving import ServeAPI\nfrom furiosa.serving.apps import health, model, repository\n\n\n# Create ServeAPI with Repository instance. This repository maintains models\nserve = ServeAPI(repository.repository)\n\napp: FastAPI = serve.app\n\napp.mount(\"/repository\", repository.app)\napp.mount(\"/models\", model.app)\napp.mount(\"/health\", health.app)\n```\n\nYou can also find documentations for the _sub applications_ at `localhost:8000/{application}/docs`. Note that `model` _sub application_ has different default doc API like `localhost:8000/{application}/api/docs` since default doc URL conflicts model API.\n\n### Use processors for pre/post processing\n\nFuriosa serving provides several _processors_ which are predefined pre/post process functions to convert your data for each model.\n\nYou can directly use the `preprocess()`, `postprocess()` from `Processor` instance or use the `Processor` in the form of decorator. When used as a decorator, `Processor` call `preprocess()` and `postprocess()` before and after your function respectively.\n\n```python\nimport numpy as np\nfrom furiosa.common.thread import synchronous\nfrom furiosa.serving import ServeModel, ServeAPI\nfrom furiosa.serving.processors import ImageNet\n\n\nserve = ServeAPI()\n\nmodel: ServeModel = synchronous(serve.model(\"nux\"))(\n    'imagenet',\n    location='./examples/assets/models/image_classification.onnx'\n)\n\n@model.post(\"/models/imagenet/infer\")\n@ImageNet(model=model, label='./examples/assets/labels/ImageNetLabels.txt')  # This makes infer() Callable[[UploadFile], Dict]\nasync def infer(tensor: np.ndarray) -> np.ndarray:\n    return await model.predict(tensor)\n```\n\nFor better understanding, this approximately describes how `infer()` function works internally\n\n```python\n# Create processor\nprocessor = ImageNet(model=model, label='./examples/assets/labels/ImageNetLabels.txt')\n\n# API endpoint signature replaced with ImageNet.preprocess()\ndef infer(image: PIL.image) -> Dict:\n\n    # Preprocess image from API client from processor\n    tensor: np.ndarray = processor.preprocess(image)\n\n    # Call your function from tensor above\n    output: np.ndarray = infer(tensor)\n\n    # Postprocess output above from processor\n    response: Dict = processor.postprocess(output)\n\n    # Return response in the form of Dict which is defined at ImageNet.postprocess()\n    return response\n```\n\nNote that you **must** call _processor_ decorator first to pass correct function signature to FastAPI route decoartor which will be used argument validation.\n\n```python\n# Correct:\n@model.post(\"/models/imagenet/infer\")\n@ImageNet(tensor=model.inputs[0], label='./examples/assets/labels/ImageNetLabels.txt')  # This makes infer() Callable[[UploadFile], Dict]\nasync def infer(tensor: np.ndarray) -> np.ndarray:\n    ...\n\n# Wrong:\n@ImageNet(tensor=model.inputs[0], label='./examples/assets/labels/ImageNetLabels.txt')  # This makes infer() Callable[[UploadFile], Dict]\n@model.post(\"/models/imagenet/infer\")\nasync def infer(tensor: np.ndarray) -> np.ndarray:\n    ...\n```\n\n### Compose models\n\nYou can composite multiple models using [FastAPI dependency injection](https://fastapi.tiangolo.com/tutorial/dependencies/).\n\n> :warning: This example below is not actually working as there is no SegmentNet in processors yet\n\n```python\nfrom fastapi import Depends\nfrom furiosa.common.thread import synchronous\nfrom furiosa.serving import ServeModel, ServeAPI\nfrom furiosa.serving.processors import ImageNet, SegmentNet\n\n\nserve = ServeAPI()\n\nimagenet: ServeModel = synchronous(serve.model(\"nux\"))(\n    'imagenet',\n    location='./examples/assets/models/image_classification.onnx'\n)\n\nsegmentnet: ServeModel = synchronous(serve.model(\"nux\"))(\n    'segmentnet',\n    location='./examples/assets/models/image_segmentation.onnx'\n)\n\n# Note that no \"imagenet.post()\" here not to expose the endpoint\nasync def classify(image: UploadFile = File(...)) -> List[np.ndarray]:\n    tensors: List[np.arrary] = ImageNet(tensor=imagenet.inputs[0]).preprocess(image)\n    return await imagenet.predict(tensors)\n\n@segmentnet.post(\"/models/composed/infer\")\nasync def segment(tensors: List[np.ndarray] = Depends(classify)) -> Dict:\n    tensors = await model.predict(tensors)\n    return SegmentNet(tensor=segmentnet.inputs[0]).postprocess(tensors)\n```\n\n### Example 1\n\nYou can find a complete example at `examples/image_classify.py`\n\n```sh\ncd examples\n\nexamples$ python image_classify.py\nINFO:furiosa_sdk_runtime._api.v1:loaded dynamic library /home/ys/Furiosa/compiler/npu-tools/target/x86_64-unknown-linux-gnu/debug/libnux.so (0.4.0-dev d1720b938)\nINFO:     Started server process [984608]\nINFO:uvicorn.error:Started server process [984608]\nINFO:     Waiting for application startup.\nINFO:uvicorn.error:Waiting for application startup.\n[1/6] 🔍   Compiling from tflite to dfg\nDone in 0.27935523s\n[2/6] 🔍   Compiling from dfg to ldfg\n▪▪▪▪▪ [1/3] Splitting graph...Done in 1079.9143s\n▪▪▪▪▪ [2/3] Lowering...Done in 93.315895s\n▪▪▪▪▪ [3/3] Precalculating operators...Done in 45.07178s\nDone in 1218.3285s\n[3/6] 🔍   Compiling from ldfg to cdfg\nDone in 0.002127793s\n[4/6] 🔍   Compiling from cdfg to gir\nDone in 0.096237786s\n[5/6] 🔍   Compiling from gir to lir\nDone in 0.03271749s\n[6/6] 🔍   Compiling from lir to enf\nDone in 0.48739022s\n✨  Finished in 1219.4524s\nINFO:     Application startup complete.\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\n```\n\nYou can find available API in http://localhost:8000/docs#/\n\nSend image to classify a image from server you just launched.\n\n```sh\nexamples$ curl -X 'POST' \\\n  'http://127.0.0.1:8000/imagenet/infer' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: multipart/form-data' \\\n  -F 'image=@assets/images/car.jpg'\n\n```\n\n### Example 2\n\nIn many user scenarios, for each request users may want to split a large image into a number of small images, and process all of them at a time.\nIn this use cases, using multiple devices will be able to boost the throughput, eventually leading to lower latency.\nThis example `examples/number_classify.py` shows how to implement this usecase with session pool and Python async/await/gather.\n\n```sh\ncd examples\n\nexamples$ python number_classify.py\nINFO:     Started server process [57892]\nINFO:     Waiting for application startup.\n2022-10-28T05:36:42.468215Z  INFO nux::npu: Npu (npu0pe0-1) is being initialized\n2022-10-28T05:36:42.473084Z  INFO nux: NuxInner create with pes: [PeId(0)]\n2022-10-28T05:36:42.503103Z  INFO nux::npu: Npu (npu1pe0-1) is being initialized\n2022-10-28T05:36:42.507724Z  INFO nux: NuxInner create with pes: [PeId(0)]\nINFO:     Application startup complete.\nINFO:     Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit)\n\n\n```\n\nYou can find available API in http://localhost:8000/docs#/\n\nSend image to classify a image from server you just launched.\n\n```sh\nexamples$ curl -X 'POST' \\\n  'http://127.0.0.1:8000/infer' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: multipart/form-data' \\\n  -F 'image=@assets/images/1234567890.jpg'\n\n```\n\n## Code\n\nThe code and issue tracker are hosted on GitHub:\\\nhttps://github.com/furiosa-ai/furiosa-sdk\n\n## Contributing\n\nWe welcome many types of contributions - bug reports, pull requests (code, infrastructure or documentation fixes). For more information about how to contribute to the project, see the ``CONTRIBUTING.md`` file in the repository.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": null,
    "keywords": null,
    "license": null,
    "maintainer": null,
    "maintainer_email": null,
    "name": "furiosa-serving",
    "package_url": "https://pypi.org/project/furiosa-serving/",
    "platform": null,
    "project_url": "https://pypi.org/project/furiosa-serving/",
    "project_urls": {
      "Bug Tracker": "https://github.com/furiosa-ai/furiosa-sdk/issues",
      "Documentation": "https://furiosa-ai.github.io/docs",
      "Home": "https://furiosa.ai",
      "Source Code": "https://github.com/furiosa-ai/furiosa-sdk"
    },
    "release_url": "https://pypi.org/project/furiosa-serving/0.8.0/",
    "requires_dist": [
      "furiosa-server == 0.8.*",
      "furiosa-registry == 0.8.*",
      "Pillow",
      "python-multipart",
      "prometheus-client",
      "opentelemetry-instrumentation-fastapi",
      "opentelemetry-instrumentation-logging",
      "opentelemetry-exporter-otlp",
      "opentelemetry-api",
      "opentelemetry-sdk",
      "furiosa-server[openvino] == 0.8.* ; extra == \"openvino\"",
      "transformers ; extra == \"openvino\"",
      "pytest ; extra == \"test\"",
      "pytest-asyncio ~= 0.17.2 ; extra == \"test\""
    ],
    "requires_python": "~=3.7",
    "summary": "Furiosa serving framework, easy to use inference server.",
    "version": "0.8.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15661351,
  "releases": {
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "082f45ea456a4234416075242b8c0373ee4b4ffa2e39aa74b5758efff3f8e13c",
          "md5": "6f7d2686cc125a6804ce849c9f53b68d",
          "sha256": "1ca2987b2c6ac3b4f26ac8b83e37d91472bda6f3ba6d07562dc8889515d79026"
        },
        "downloads": -1,
        "filename": "furiosa_serving-0.6.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6f7d2686cc125a6804ce849c9f53b68d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "==3.*,~=3.7",
        "size": 11310,
        "upload_time": "2022-03-15T02:26:15",
        "upload_time_iso_8601": "2022-03-15T02:26:15.406978Z",
        "url": "https://files.pythonhosted.org/packages/08/2f/45ea456a4234416075242b8c0373ee4b4ffa2e39aa74b5758efff3f8e13c/furiosa_serving-0.6.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a1e77365d29e5bc43c309d683cbc599224933eda4576992ab6eff492113021b",
          "md5": "54ab958433cef05d77498e7342c90265",
          "sha256": "d1282f66633d5a98a90881f46d432306d8c8e9e4eb31b066e999b499c81c7211"
        },
        "downloads": -1,
        "filename": "furiosa-serving-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "54ab958433cef05d77498e7342c90265",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "==3.*,~=3.7",
        "size": 13462,
        "upload_time": "2022-03-15T02:26:17",
        "upload_time_iso_8601": "2022-03-15T02:26:17.231091Z",
        "url": "https://files.pythonhosted.org/packages/8a/1e/77365d29e5bc43c309d683cbc599224933eda4576992ab6eff492113021b/furiosa-serving-0.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "02c2422d172da2de542faa397aac85174c71e65d8931693a5cc70876afd8937b",
          "md5": "f7eedb9defb481e01d6385dc61aa1f71",
          "sha256": "ff25ea5331a14d0d8d2c8e52082d846a6b12fbd052b3cdccadfef0f3bafa467e"
        },
        "downloads": -1,
        "filename": "furiosa_serving-0.6.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f7eedb9defb481e01d6385dc61aa1f71",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "==3.*,~=3.7",
        "size": 11300,
        "upload_time": "2022-03-25T00:58:20",
        "upload_time_iso_8601": "2022-03-25T00:58:20.525191Z",
        "url": "https://files.pythonhosted.org/packages/02/c2/422d172da2de542faa397aac85174c71e65d8931693a5cc70876afd8937b/furiosa_serving-0.6.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "49684069e51b5a464018e2491957c59772369de0a4520c01f196b565987ea62a",
          "md5": "f454fdde499f911d5aaa6064b43e89c3",
          "sha256": "1e291e2179922a8f7a4363fa81db545ff6bd008c3af6ec78884770639bdbba1a"
        },
        "downloads": -1,
        "filename": "furiosa-serving-0.6.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f454fdde499f911d5aaa6064b43e89c3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "==3.*,~=3.7",
        "size": 13644,
        "upload_time": "2022-03-25T00:58:22",
        "upload_time_iso_8601": "2022-03-25T00:58:22.747717Z",
        "url": "https://files.pythonhosted.org/packages/49/68/4069e51b5a464018e2491957c59772369de0a4520c01f196b565987ea62a/furiosa-serving-0.6.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "67e8e7b222e49cadcf28d76072ac5089742754289981b5cc84d061c7dd1c8f53",
          "md5": "b16de9025c4dd8e12d39dc645d5206ef",
          "sha256": "8a40c1e4d1e6819d4b40df40788d96dce5b8e74663ddfe2df3b8d0d0a04cd16b"
        },
        "downloads": -1,
        "filename": "furiosa_serving-0.6.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b16de9025c4dd8e12d39dc645d5206ef",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "==3.*,~=3.7",
        "size": 11295,
        "upload_time": "2022-05-03T02:00:40",
        "upload_time_iso_8601": "2022-05-03T02:00:40.462063Z",
        "url": "https://files.pythonhosted.org/packages/67/e8/e7b222e49cadcf28d76072ac5089742754289981b5cc84d061c7dd1c8f53/furiosa_serving-0.6.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "78ae0905c466fa1c0fa6bcb74615cc5f9f082dfd933e7bf4c20db6784836cbf8",
          "md5": "7f3112c5fd4906071c5036e64c2f9ad9",
          "sha256": "91e5cf0c043841eebcb577c9e2beb65a2b27c1e89c180c505f9f8421190f7360"
        },
        "downloads": -1,
        "filename": "furiosa-serving-0.6.3.tar.gz",
        "has_sig": false,
        "md5_digest": "7f3112c5fd4906071c5036e64c2f9ad9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "==3.*,~=3.7",
        "size": 13683,
        "upload_time": "2022-05-03T02:00:42",
        "upload_time_iso_8601": "2022-05-03T02:00:42.357295Z",
        "url": "https://files.pythonhosted.org/packages/78/ae/0905c466fa1c0fa6bcb74615cc5f9f082dfd933e7bf4c20db6784836cbf8/furiosa-serving-0.6.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3d4feaa7628f792a3e5ffbe0bfda61fe9016c3060b5f2fd9fefe53e94300b1f4",
          "md5": "5029e14f3650e299a19249dc87b60dee",
          "sha256": "14adb5a8daeafba3504feab382d6cc391deb39294004ffbf8752e0c80eeb2a04"
        },
        "downloads": -1,
        "filename": "furiosa_serving-0.6.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5029e14f3650e299a19249dc87b60dee",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "==3.*,~=3.7",
        "size": 11293,
        "upload_time": "2022-05-04T05:28:18",
        "upload_time_iso_8601": "2022-05-04T05:28:18.941657Z",
        "url": "https://files.pythonhosted.org/packages/3d/4f/eaa7628f792a3e5ffbe0bfda61fe9016c3060b5f2fd9fefe53e94300b1f4/furiosa_serving-0.6.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4b4f25e92e3d5309b057e5a4f886a1a5c4033be82cb33299217ab5f8893cd34a",
          "md5": "2e13ecc1a9437b50a7782a1361d70cb7",
          "sha256": "c33c9b4adf21cbfafa2480543d90df453590d755520aea22e24f5a73ef28a606"
        },
        "downloads": -1,
        "filename": "furiosa-serving-0.6.4.tar.gz",
        "has_sig": false,
        "md5_digest": "2e13ecc1a9437b50a7782a1361d70cb7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "==3.*,~=3.7",
        "size": 13652,
        "upload_time": "2022-05-04T05:28:20",
        "upload_time_iso_8601": "2022-05-04T05:28:20.581025Z",
        "url": "https://files.pythonhosted.org/packages/4b/4f/25e92e3d5309b057e5a4f886a1a5c4033be82cb33299217ab5f8893cd34a/furiosa-serving-0.6.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.0": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "986c9de3b5af197eaf3d49a133c326dbc7682d883d27ea43e5ac6bf89ec3d806",
          "md5": "21dc542a10600b389a75b97f84690d11",
          "sha256": "054f6eec93b1d399e4d0086f4008088ca43e25233eb42c5fab196aad4f65e8c1"
        },
        "downloads": -1,
        "filename": "furiosa_serving-0.7.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "21dc542a10600b389a75b97f84690d11",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": "~=3.7",
        "size": 11107,
        "upload_time": "2022-06-17T01:25:21",
        "upload_time_iso_8601": "2022-06-17T01:25:21.792610Z",
        "url": "https://files.pythonhosted.org/packages/98/6c/9de3b5af197eaf3d49a133c326dbc7682d883d27ea43e5ac6bf89ec3d806/furiosa_serving-0.7.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "cde0dd06cbecae7351087032fd1c8aea04b965f7b6518e282b97d3f35dc80444",
          "md5": "3bad0e95b84092b32e94402e9b92f1ac",
          "sha256": "6d5afd0778fc444af7675833368e621876140e1b019ae1b1c51a583ddc74be9c"
        },
        "downloads": -1,
        "filename": "furiosa-serving-0.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3bad0e95b84092b32e94402e9b92f1ac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.7",
        "size": 3176496,
        "upload_time": "2022-06-17T01:25:24",
        "upload_time_iso_8601": "2022-06-17T01:25:24.575935Z",
        "url": "https://files.pythonhosted.org/packages/cd/e0/dd06cbecae7351087032fd1c8aea04b965f7b6518e282b97d3f35dc80444/furiosa-serving-0.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.1": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "0d2c3787548d3c00feacd1869c1f23fc8b68c4c3d2afb2a07019ff7c4a0217a6",
          "md5": "1e5c54b68bd65654bf63278f2fb37e6f",
          "sha256": "3817388ee3ecba9d1f9ba47ec8b3618270d6a7f089e0981b15c1a3dc723b43f8"
        },
        "downloads": -1,
        "filename": "furiosa_serving-0.7.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1e5c54b68bd65654bf63278f2fb37e6f",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": "~=3.7",
        "size": 11310,
        "upload_time": "2022-07-01T05:03:22",
        "upload_time_iso_8601": "2022-07-01T05:03:22.377694Z",
        "url": "https://files.pythonhosted.org/packages/0d/2c/3787548d3c00feacd1869c1f23fc8b68c4c3d2afb2a07019ff7c4a0217a6/furiosa_serving-0.7.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "8ca3e855f03c5971ae805099ad0e140547ece99c5d2d9851f6973f27ef08c4d3",
          "md5": "c864a0f8f10f30c30b657d47748b3fe5",
          "sha256": "a7726718bae4046b025fd82ae99ad7c666a2449cd934119f82d9756127dffef0"
        },
        "downloads": -1,
        "filename": "furiosa-serving-0.7.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c864a0f8f10f30c30b657d47748b3fe5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.7",
        "size": 3176368,
        "upload_time": "2022-07-01T05:03:25",
        "upload_time_iso_8601": "2022-07-01T05:03:25.697081Z",
        "url": "https://files.pythonhosted.org/packages/8c/a3/e855f03c5971ae805099ad0e140547ece99c5d2d9851f6973f27ef08c4d3/furiosa-serving-0.7.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.4": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "13eb7f0c203dbae8cd4a77d125f771c0b4b63f6575de406f4bbb39ff220b253e",
          "md5": "e846cd673c80ce553a6de83097bb572b",
          "sha256": "e80bd12aecd9f52191c5549e8c24559c38bb8577b601d473f3fd174e4ce9e6c5"
        },
        "downloads": -1,
        "filename": "furiosa_serving-0.7.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e846cd673c80ce553a6de83097bb572b",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": "~=3.7",
        "size": 11315,
        "upload_time": "2022-09-22T03:57:03",
        "upload_time_iso_8601": "2022-09-22T03:57:03.872135Z",
        "url": "https://files.pythonhosted.org/packages/13/eb/7f0c203dbae8cd4a77d125f771c0b4b63f6575de406f4bbb39ff220b253e/furiosa_serving-0.7.4-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "a89121de736b3e3f3ad56a23238830cc191735b076ac3db2a936e66729a6ffb3",
          "md5": "39e98621f5b26e0a4f355f0b3b6d2dec",
          "sha256": "39b41e2a27b662ea3fb05bb06458af9faf7ffb30777a68ccd02f49a147410aa0"
        },
        "downloads": -1,
        "filename": "furiosa-serving-0.7.4.tar.gz",
        "has_sig": false,
        "md5_digest": "39e98621f5b26e0a4f355f0b3b6d2dec",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.7",
        "size": 3176308,
        "upload_time": "2022-09-22T03:57:07",
        "upload_time_iso_8601": "2022-09-22T03:57:07.229892Z",
        "url": "https://files.pythonhosted.org/packages/a8/91/21de736b3e3f3ad56a23238830cc191735b076ac3db2a936e66729a6ffb3/furiosa-serving-0.7.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.0": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "7fc4d54c87ab08a3e0181c64de8c3eb3c0bb5be1599b602d3f824f624b9e1cae",
          "md5": "42baf72d7c1f77fb763f9fef32f7a3d1",
          "sha256": "db8fdc658634ecb4b02b3e2831ea21c2ca7129d2b5bb19f7a1a778da6c290112"
        },
        "downloads": -1,
        "filename": "furiosa_serving-0.8.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "42baf72d7c1f77fb763f9fef32f7a3d1",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": "~=3.7",
        "size": 16027,
        "upload_time": "2022-11-05T00:14:38",
        "upload_time_iso_8601": "2022-11-05T00:14:38.746543Z",
        "url": "https://files.pythonhosted.org/packages/7f/c4/d54c87ab08a3e0181c64de8c3eb3c0bb5be1599b602d3f824f624b9e1cae/furiosa_serving-0.8.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "208937ba61c66dbd09ffff3c311af8aa7d578195bb685a79a2dc143f0bd07143",
          "md5": "2f2497d23470a3afbf631d11d07be0bd",
          "sha256": "b6952cceba5a6f80182169e7e74bb77a58fc99cfe49166aef4d03261c29f47b5"
        },
        "downloads": -1,
        "filename": "furiosa-serving-0.8.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2f2497d23470a3afbf631d11d07be0bd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.7",
        "size": 3201817,
        "upload_time": "2022-11-05T00:14:42",
        "upload_time_iso_8601": "2022-11-05T00:14:42.461977Z",
        "url": "https://files.pythonhosted.org/packages/20/89/37ba61c66dbd09ffff3c311af8aa7d578195bb685a79a2dc143f0bd07143/furiosa-serving-0.8.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "7fc4d54c87ab08a3e0181c64de8c3eb3c0bb5be1599b602d3f824f624b9e1cae",
        "md5": "42baf72d7c1f77fb763f9fef32f7a3d1",
        "sha256": "db8fdc658634ecb4b02b3e2831ea21c2ca7129d2b5bb19f7a1a778da6c290112"
      },
      "downloads": -1,
      "filename": "furiosa_serving-0.8.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "42baf72d7c1f77fb763f9fef32f7a3d1",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": "~=3.7",
      "size": 16027,
      "upload_time": "2022-11-05T00:14:38",
      "upload_time_iso_8601": "2022-11-05T00:14:38.746543Z",
      "url": "https://files.pythonhosted.org/packages/7f/c4/d54c87ab08a3e0181c64de8c3eb3c0bb5be1599b602d3f824f624b9e1cae/furiosa_serving-0.8.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "208937ba61c66dbd09ffff3c311af8aa7d578195bb685a79a2dc143f0bd07143",
        "md5": "2f2497d23470a3afbf631d11d07be0bd",
        "sha256": "b6952cceba5a6f80182169e7e74bb77a58fc99cfe49166aef4d03261c29f47b5"
      },
      "downloads": -1,
      "filename": "furiosa-serving-0.8.0.tar.gz",
      "has_sig": false,
      "md5_digest": "2f2497d23470a3afbf631d11d07be0bd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "~=3.7",
      "size": 3201817,
      "upload_time": "2022-11-05T00:14:42",
      "upload_time_iso_8601": "2022-11-05T00:14:42.461977Z",
      "url": "https://files.pythonhosted.org/packages/20/89/37ba61c66dbd09ffff3c311af8aa7d578195bb685a79a2dc143f0bd07143/furiosa-serving-0.8.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}