{
  "info": {
    "author": "Dirk Gorissen, Stephen Rauch",
    "author_email": "dgorissen@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "Pycel\n=====\n\n|build-state| |coverage| |requirements|\n\n|pypi| |pypi-pyversions| |repo-size| |code-size|\n\nPycel is a small python library that can translate an Excel spreadsheet into\nexecutable python code which can be run independently of Excel.\n\nThe python code is based on a graph and uses caching & lazy evaluation to\nensure (relatively) fast execution.  The graph can be exported and analyzed\nusing tools like `Gephi <http://www.gephi.org>`_. See the contained example\nfor an illustration.\n\nRequired python libraries:\n    `dateutil <https://dateutil.readthedocs.io/en/stable/>`_,\n    `networkx <https://networkx.github.io/>`_,\n    `numpy <https://www.numpy.org/>`_,\n    `openpyxl <https://openpyxl.readthedocs.io/en/stable/>`_,\n    `ruamel.yaml <https://yaml.readthedocs.io/en/latest/>`_, and optionally:\n    `matplotlib <https://matplotlib.org/>`_,\n    `pydot <https://github.com/pydot/pydot>`_\n\nThe full motivation behind pycel including some examples & screenshots is\ndescribed in this `blog post <http://www.dirkgorissen.com/2011/10/19/\npycel-compiling-excel-spreadsheets-to-python-and-making-pretty-pictures/>`_.\n\nUsage\n======\n\nDownload the library and run the example file.\n\n**Quick start:**\nYou can use binder to see and explore the tool quickly and interactively in the\nbrowser: |notebook|\n\n**The good:**\n\nAll the main mathematical functions (sin, cos, atan2, ...) and operators\n(+,/,^, ...) are supported as are ranges (A5:D7), and functions like\nMIN, MAX, INDEX, LOOKUP, and LINEST.\n\nThe codebase is small, relatively fast and should be easy to understand\nand extend.\n\nI have tested it extensively on spreadsheets with 10 sheets & more than\n10000 formulae.  In that case calculation of the equations takes about 50ms\nand agrees with Excel up to 5 decimal places.\n\n**The bad:**\n\nMy development is driven by the particular spreadsheets I need to handle so\nI have only added support for functions that I need.  However, it is should be\nstraightforward to add support for others.\n\nThe code does currently not support cell references so a function like OFFSET\nwould take some more work to implement.  Not inherently difficult, its just\nthat I have had no need for references yet.  Also, for obvious reasons, any\nVBA code is not compiled but needs to be re-implemented manually on the\npython side.\n\n**The Ugly:**\n\nThe resulting graph-based code is fast enough for my purposes but to make it\ntruly fast you would probably replace the graph with a dependency tracker\nbased on sparse matrices or something similar.\n\nExcel Addin\n===========\n\nIt's possible to run pycel as an excel addin using\n`PyXLL <http://www.pyxll.com/>`_. Simply place pyxll.xll and pyxll.py in the\nlib directory and add the xll file to the Excel Addins list as explained in\nthe pyxll documentation.\n\nAcknowledgements\n================\n\nThis code was originally made possible thanks to the python port of\nEric Bachtal's `Excel formula parsing code\n<http://ewbi.blogs.com/develops/popular/excelformulaparsing.html>`_\nby Robin Macharg.\n\nThe code currently uses a tokenizer of similar origin from the\n`openpyxl library.\n<https://bitbucket.org/openpyxl/openpyxl/src/default/openpyxl/formula/>`_\n\n.. Image links\n\n.. |build-state| image:: https://travis-ci.com/stephenrauch/pycel.svg?branch=master\n  :target: https://travis-ci.com/stephenrauch/pycel\n  :alt: Build Status\n\n.. |coverage| image:: https://codecov.io/gh/stephenrauch/pycel/branch/master/graph/badge.svg\n  :target: https://codecov.io/gh/stephenrauch/pycel/list/master\n  :alt: Code Coverage\n\n.. |pypi| image:: https://img.shields.io/pypi/v/pycel.svg\n  :target: https://pypi.org/project/pycel/\n  :alt: Latest Release\n\n.. |pypi-pyversions| image:: https://img.shields.io/pypi/pyversions/pycel.svg\n    :target: https://pypi.python.org/pypi/pycel\n\n.. |requirements| image:: https://requires.io/github/stephenrauch/pycel/requirements.svg?branch=master\n  :target: https://requires.io/github/stephenrauch/pycel/requirements/?branch=master\n  :alt: Requirements Status\n\n.. |repo-size| image:: https://img.shields.io/github/repo-size/stephenrauch/pycel.svg\n  :target: https://github.com/stephenrauch/pycel\n  :alt: Repo Size\n\n.. |code-size| image:: https://img.shields.io/github/languages/code-size/stephenrauch/pycel.svg\n  :target: https://github.com/stephenrauch/pycel\n  :alt: Code Size\n\n.. |notebook| image:: https://mybinder.org/badge.svg\n  :target: https://mybinder.org/v2/gh/stephenrauch/pycel/master?filepath=notebooks%2Fexample.ipynb\n  :alt: Open Notebook\n\n\n\nChange Log\n==========\n\n\n1.0b27 (Unreleased)\n===================\n\n* Greetings from Customs.\n\n\n1.0b26 (Unreleased)\n===================\n\nMajor Changes\n-------------\n\n* Update to Python 3.9, drop support for Python 3.5\n\nChanges\n-------\n\n* Add bitwise functions: bitand, bitor, bitxor, bitlshift and bitrshift (Thanks, bogdan-oprescu-nxp)\n* Add PV function (Thanks, estandiaa-marain)\n\nFixes\n-----\n* Fix Openpyxl > 3.0.4 (Thanks, ckp95)\n* Fix HLOOKUP row_index_num validation to use num rows (Thanks, nanaposo)\n* Fix #86, tokenize.TokenError: ('EOF in multi-line statement',\n* Fix #88, Handle calcPR in workbook (Thanks, andreif)\n* Fix #89, NPV function fails when passed range of cashflows (Thanks, jpp-0)\n* Fix #93, AssertionError during set_value(), by adding a better error message\n* Fix #99, Pycel raises NotImplementedError on rectangular ranges (Thanks, rmorel)\n* Fix #103, build_operator_operand_fixup() throws #VALUE error when concatenating AddressCell objects (Thanks, nboukraa)\n* Fix #104, Insufficient coverage and testing after recent merges\n* Fix #105, Incorrect RPN for expressions with consecutive negations (Thanks, victorjmarin)\n* Fix #109, String concatenation fails for particular cases (Thanks, bogdan-oprescu-nxp)\n* Fix issue in =IF() when comparing to numpy result\n* Fix MID() and REPLACE() and LEN() in a CSE context\n* Fix INDEX() error handling\n\n\n1.0b23-1.0b25\n=============\n\n*Skipped*\n\n\n1.0b22 (2019-10-17)\n===================\n\nFixes\n-----\n* Fix #80, incompatible w/ networkx 2.4\n\n\n1.0b21 (2019-10-13)\n===================\n\nChanges\n-------\n\n* Speed up compile\n* Implement defined names in multicolon ranges\n* Tokenize ':' when adjoining functions as infix operator\n* Various changes in prep to improve references, including\n* Add reference expansion to function helpers\n* Add sheet to indirect() and ref_param=0 to offset()\n* Implement is_address() helper\n* Implement intersection and union for AddressCell\n\nFixes\n-----\n* Fix #77, empty arg in IFERROR()\n* Fix #78, None compare and cleanup error handling for various IFS() funcs\n\n\n1.0b20 (2019-09-22)\n===================\n\nChanges\n-------\n\n* Implement multi colon ranges\n* Add support for missing (empty) function parameters\n\nFixes\n-----\n* Fix threading issue in iterative evaluator\n* Fix range intersection with null result for ROW and COLUMN\n* Fix #74 - Count not working for ranges\n\n\n1.0b19 (2019-09-12)\n===================\n\nChanges\n-------\n\n* Implement INDIRECT & OFFSET\n* Implement SMALL, LARGE & ROUNDDOWN  (Thanks, nanaposo)\n* Add error message for unhandled missing function parameter\n\nFixes\n-----\n* Fix threading issue w/ CSE evaluator\n\n\n1.0b18 (2019-09-07)\n===================\n\nChanges\n-------\n\n* Implement CEILING_MATH, CEILING_PRECISION, FLOOR_MATH & FLOOR_PRECISION\n* Implement FACT & FACTDOUBLE\n* Implement AVERAGEIF, MAXIFS, MINIFS\n* Implement ODD, EVEN, ISODD, ISEVEN, SIGN\n\nFixes\n-----\n* Fix #67 - Evaluation with unbounded range\n* Fix bugs w/ single cells for xIFS functions\n\n\n1.0b17 (2019-09-02)\n===================\n\nChanges\n-------\n* Add Formula Support for Multi Area Ranges from defined names\n* Allow ExcelCompiler init from openpyxl workbook\n* Implement LOWER(), REPLACE(), TRIM() & UPPER()\n* Implement DATEVALUE(), IFS() and ISERR()  (Thanks, int128t)\n\n* Reorganized time and time utils and text functions\n* Add excelutil.AddressMultiAreaRange.\n* Add abs_coordinate() property to AddressRange and AddressCell\n* Cleanup import statements\n\nFixes\n-----\n* Resolved tox version issue on travis\n* Fix defined names with Multi Area Range\n\n\n1.0b16 (2019-07-07)\n===================\n\nChanges\n-------\n* Add twelve date and time functions\n* Serialize workbook filename and use it instead of the serialization filename (Thanks, nanaposo)\n\n\n1.0b15 (2019-06-30)\n===================\n\nChanges\n-------\n* Implement AVERAGEIFS()\n* Take Iterative Calc Parameter defaults from workbook\n\nBug Fixes\n---------\n* #60, Binder Notebook Example not Working\n\n\n1.0b14 (2019-06-16)\n===================\n\nChanges\n-------\n* Added method to evaluate the conditional format (formulas) for a cell or cells\n* Added ExcelCompiler(..., cycles=True) to allow Excel iterative calculations\n\n\n1.0b13 (2019-05-10)\n===================\n\nChanges\n-------\n* Implement VALUE()\n* Improve compile performance reversion from CSE work\n\nBug Fixes\n---------\n* #54, In normalize_year(), month % 12 can be 0 -> IllegalMonthError\n\n\n1.0b12 (2019-04-22)\n===================\n\nChanges\n-------\n* Add library plugin support\n* Improve evaluate of unbounded row/col (ie: A:B)\n* Fix some regressions from 1.0b11\n\n\n1.0b11 (2019-04-21)\n===================\n\nMajor Changes\n-------------\n\n* Refactored ExcelWrapper, ExcelFormula & ExcelCompiler to allow...\n* Added considerable extensions to CSE Array Formula Support\n* Refactored function_helpers to add decorators for excelizing library functions\n* Added a dozen new functions\n* Improved various messages and exceptions in validate_calcs() and trim_graph()\n\nChanges\n-------\n\n* Implement LEFT()\n* Implement ISERROR()\n* Implement FIND()\n* Implement ISNUMBER()\n* Implement SUMPRODUCT()\n* Implement CEILING()\n* Implement TRUNC() and FLOOR()\n* Add support for LOG()\n* Improve ABS(), INT() and ROUND()\n\n* Add quoted_address() method to AddressRange and AddressCell\n* Add public interface to get list of formula_cells()\n* Improve Some NotImplementedError() messages\n* Add NotImplementedError for \"linked\" sheet names\n* Fix function info for paired functions from same line\n* Add reference URL to function info\n* Only build compiler eval context once\n* Address Range Union and Intersection need sheet_name\n\nCSE Array Changes\n-----------------\n\n* Add CSE Array handling to excelformula and excelcompiler\n* Change Row, Column & Index to rectangular arrays only\n* Add in_array_formula_context\n* Add cse_array_wrapper() to allow calling functions in array context\n* Add error_string_wrapper() to check for excel errors\n* Move math_wrap() to function_helpers.\n* Handle Direct CSE Array in cell\n* Reorganize CSE Array Formula handling in excelwrapper\n* For CSE Arrays that are smaller than target fill w/ None\n* Trim oversize array results to fit target range\n* Improve needed addresses parser from python code\n* Improve _coerce_to_number() and _numerics() for CSE arrays\n* Remove formulas from excelwrapper._OpxRange()\n\nBug Fixes\n---------\n\n* Fix Range Intersection\n* Fix Unary Minus on Empty cell\n* Fix ISNA()\n* Fix AddressCell create from tuple\n* Power(0,-1) now returns DIV0\n* Cleanup index()\n\n\n1.0b8 (2019-03-20)\n==================\n\nChanges\n-------\n\n* Implement operators for Array Formulas\n* Implement concatenate and concat\n* Implement subtotal\n* Add support for expanding array formulas\n* Fix column and row for array formulas\n* Add support for table relative references\n* Add function information methods\n* Improve messages for validate_calcs and not implemented functions\n\n\n1.0b7 (2019-03-10)\n==================\n\nChanges\n-------\n\n* Implement Array (CSE) Formulas\n\nBug Fixes\n---------\n\n* Fix #45 - Unbounded Range Addresses (ie: A:B or 1:2) broken\n\n\n1.0b6 (2019-03-03)\n==================\n\nBug Fixes\n---------\n\n* Fix #42 - 'ReadOnlyWorksheet' object has no attribute 'iter_cols'\n* Fix #43 - Fix error with leading/trailing whitespace\n\n\n1.0b5 (2019-02-24)\n==================\n\nChanges\n-------\n\n* Implement XOR(), NOT(), TRUE(), FALSE()\n* Improve error handling for AND(), OR()\n* Implement POWER() function\n\n\n1.0b4 (2019-02-17)\n==================\n\nChanges\n-------\n\n* Move to openpyxl 2.6+\n* Remove support for Python 3.4\n\n\n1.0b3 (2019-02-02)\n==================\n\nChanges\n-------\n\n* Work around openpyxl returning datetimes\n* Pin to openpyxl 2.5.12 to avoid bug in 2.5.14 (fixed in PR #315)\n\n\n1.0b2 (2019-01-05)\n==================\n\nChanges\n-------\n\n* Much work to better match Excel error processing\n* Extend validate_calcs() to allow testing entire workbook\n* Improvements to match(), including wildcard support\n* Finished implementing match(), lookup(), vlookup() and hlookup()\n* Implement COLUMN() and ROW()\n* Implement % operator\n* Implement len()\n* Implement binary base number Excel functions (hex2dec, etc.)\n* Fix PI()\n\n\n1.0b0 (2018-12-25)\n===================\n\nMajor changes\n-------------\n\n* Converted to Python 3.4+\n* Removed Windows Excel COM driver (openpyxl is used for all xlsx reading)\n* Add support for defined names\n* Add support for structured references\n* Fix support for relative formulas\n* set_value() and evaluate() support ranges and lists\n* Add several more library functions\n* Add AddressRange and AddressCell classes to encapsulate address calcs\n* Add validate_calcs() to aid debugging excellib functions\n* Add `build` feature which can limit recompile to only when excel file changes\n* Improved handling for #DIV0! and #VALUE!\n\n\nCompatibility\n-------------\n\n* Tests run on Python 3.4, 3.5, 3.6, 3.7 (via tox)\n* Python 2 no longer supported\n\n\nOther Changes\n-------------\n\n* Heavily refactored ExcelCompiler\n* Moved all formula evaluation, parsing, etc, code to ExcelFormula class\n* Convert to using openpyxl tokenizer\n* Converted prints to logging calls\n* Convert to using pytest\n* Add support for travis and codecov.io\n* 100% unit test coverage (mostly)\n* Add debuggable formula evaluation\n* Cleanup generated Python code to make easier to read\n* Add a text format (yaml or json) serialization format\n* flake8 (pep8) checks added\n* pip now handles which Python versions can be used\n* Release to PyPI\n* Docs updated\n\n\nBugfixes\n--------\n\n* Numerous\n\n\n0.0.1 (unreleased)\n===================\n\n* Original version available from `Dirk Ggorissen's Pycel Github Page`_.\n* Supports Python 2\n\n.. _Dirk Ggorissen's Pycel Github Page: https://github.com/dgorissen/pycel/tree/33c1370d499c629476c5506c7da308713b5842dc\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/stephenrauch/pycel",
    "keywords": "excel compiler formula parser",
    "license": "",
    "maintainer": "Stephen Rauch",
    "maintainer_email": "stephen.rauch+pycel@gmail.com",
    "name": "pycel-fixed",
    "package_url": "https://pypi.org/project/pycel-fixed/",
    "platform": "",
    "project_url": "https://pypi.org/project/pycel-fixed/",
    "project_urls": {
      "Homepage": "https://github.com/stephenrauch/pycel"
    },
    "release_url": "https://pypi.org/project/pycel-fixed/1.0b27/",
    "requires_dist": [
      "networkx (<2.6,>=2.0)",
      "numpy",
      "openpyxl (>=2.6.2)",
      "python-dateutil",
      "ruamel.yaml"
    ],
    "requires_python": ">=3.5",
    "summary": "A library for compiling excel spreadsheets to python code & visualizing them as a graph",
    "version": "1.0b27",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10671749,
  "releases": {
    "1.0b24": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "24ff12463e331f5285a5e8bfb8d4c829238dad72c28dee05e89838765442d95a",
          "md5": "4b52e0ec3e1a8f1182153168c57c716f",
          "sha256": "2914be43f76faac00133acc11e2db8237b787cdc6436e10704961d3d3e5efb65"
        },
        "downloads": -1,
        "filename": "pycel_fixed-1.0b24-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4b52e0ec3e1a8f1182153168c57c716f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 96218,
        "upload_time": "2020-09-23T21:08:08",
        "upload_time_iso_8601": "2020-09-23T21:08:08.707442Z",
        "url": "https://files.pythonhosted.org/packages/24/ff/12463e331f5285a5e8bfb8d4c829238dad72c28dee05e89838765442d95a/pycel_fixed-1.0b24-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6a49dd66aaff53b17ae96814377c94a971685522e8e9af5069197e6feb4cfd09",
          "md5": "dcdb6fb7f09d4f2c4fed1bd2d20d4b5e",
          "sha256": "0377f7a424d01cfa269cea3da242c2e3260e601af0ed5502a534aa85f92fa8bb"
        },
        "downloads": -1,
        "filename": "pycel-fixed-1.0b24.tar.gz",
        "has_sig": false,
        "md5_digest": "dcdb6fb7f09d4f2c4fed1bd2d20d4b5e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 97395,
        "upload_time": "2020-09-23T21:08:12",
        "upload_time_iso_8601": "2020-09-23T21:08:12.483992Z",
        "url": "https://files.pythonhosted.org/packages/6a/49/dd66aaff53b17ae96814377c94a971685522e8e9af5069197e6feb4cfd09/pycel-fixed-1.0b24.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0b25": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "025622ce99a76a578ec2fd2ef40b26ade4f161df04ef0ddb1f456a8e76997cdd",
          "md5": "efdc10c1125d2479933c9e00f868ee34",
          "sha256": "a25c0474dd7bec702324ce18cdcce69a5aa86006f63c86f9de609099fa2fed47"
        },
        "downloads": -1,
        "filename": "pycel_fixed-1.0b25-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "efdc10c1125d2479933c9e00f868ee34",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 96217,
        "upload_time": "2020-11-30T17:52:37",
        "upload_time_iso_8601": "2020-11-30T17:52:37.299049Z",
        "url": "https://files.pythonhosted.org/packages/02/56/22ce99a76a578ec2fd2ef40b26ade4f161df04ef0ddb1f456a8e76997cdd/pycel_fixed-1.0b25-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b69313d1a1535361a046c636d51b02f2d436019f911d5aa4be7912ab334513c0",
          "md5": "a72fdc7b8772baee3f8f437dc8444d09",
          "sha256": "076548053c96234bc0c3d638fd5c41f92fedc86fba30178ea995b75eddef6f0a"
        },
        "downloads": -1,
        "filename": "pycel-fixed-1.0b25.tar.gz",
        "has_sig": false,
        "md5_digest": "a72fdc7b8772baee3f8f437dc8444d09",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 97384,
        "upload_time": "2020-11-30T17:52:38",
        "upload_time_iso_8601": "2020-11-30T17:52:38.998263Z",
        "url": "https://files.pythonhosted.org/packages/b6/93/13d1a1535361a046c636d51b02f2d436019f911d5aa4be7912ab334513c0/pycel-fixed-1.0b25.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0b27": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eed3b339a009fd80e7ec986fede765a68cf921dec5c370edc57f0fa9c29cefd8",
          "md5": "bad63242257773ed214c40247078a6e6",
          "sha256": "db1309e46881dc4a8a9abbe5c300cfdcb3080f05f42075ca594b2772789d8f2b"
        },
        "downloads": -1,
        "filename": "pycel_fixed-1.0b27-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bad63242257773ed214c40247078a6e6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 98810,
        "upload_time": "2021-06-17T08:49:47",
        "upload_time_iso_8601": "2021-06-17T08:49:47.411732Z",
        "url": "https://files.pythonhosted.org/packages/ee/d3/b339a009fd80e7ec986fede765a68cf921dec5c370edc57f0fa9c29cefd8/pycel_fixed-1.0b27-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f63caf0f9b2517c6220ffcc1221d77c29bd895311b858c73ae74a0488f067cda",
          "md5": "c026213b1854d302030c48c099b521a4",
          "sha256": "b13485fa5836556523e0eca73858ccd212c8a83e8040a184ef489a67ee03a3f3"
        },
        "downloads": -1,
        "filename": "pycel-fixed-1.0b27.tar.gz",
        "has_sig": false,
        "md5_digest": "c026213b1854d302030c48c099b521a4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 102781,
        "upload_time": "2021-06-17T08:49:49",
        "upload_time_iso_8601": "2021-06-17T08:49:49.428343Z",
        "url": "https://files.pythonhosted.org/packages/f6/3c/af0f9b2517c6220ffcc1221d77c29bd895311b858c73ae74a0488f067cda/pycel-fixed-1.0b27.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "eed3b339a009fd80e7ec986fede765a68cf921dec5c370edc57f0fa9c29cefd8",
        "md5": "bad63242257773ed214c40247078a6e6",
        "sha256": "db1309e46881dc4a8a9abbe5c300cfdcb3080f05f42075ca594b2772789d8f2b"
      },
      "downloads": -1,
      "filename": "pycel_fixed-1.0b27-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "bad63242257773ed214c40247078a6e6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 98810,
      "upload_time": "2021-06-17T08:49:47",
      "upload_time_iso_8601": "2021-06-17T08:49:47.411732Z",
      "url": "https://files.pythonhosted.org/packages/ee/d3/b339a009fd80e7ec986fede765a68cf921dec5c370edc57f0fa9c29cefd8/pycel_fixed-1.0b27-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f63caf0f9b2517c6220ffcc1221d77c29bd895311b858c73ae74a0488f067cda",
        "md5": "c026213b1854d302030c48c099b521a4",
        "sha256": "b13485fa5836556523e0eca73858ccd212c8a83e8040a184ef489a67ee03a3f3"
      },
      "downloads": -1,
      "filename": "pycel-fixed-1.0b27.tar.gz",
      "has_sig": false,
      "md5_digest": "c026213b1854d302030c48c099b521a4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 102781,
      "upload_time": "2021-06-17T08:49:49",
      "upload_time_iso_8601": "2021-06-17T08:49:49.428343Z",
      "url": "https://files.pythonhosted.org/packages/f6/3c/af0f9b2517c6220ffcc1221d77c29bd895311b858c73ae74a0488f067cda/pycel-fixed-1.0b27.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}