{
  "info": {
    "author": "Garrett Fairburn",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Other Environment",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Artificial Life"
    ],
    "description": "# clcell \n\n**clcell** is an OpenCL-accelerated cellular automata simulator for Python 3.\n\n## Features\n\n- OpenCL-based hardware acceleration\n- Custom rulesets via `clcell.RuleSet`\n- Parallel simulations via `clcell.CASimulator.batch_simulate`\n\n## Limitations\n\n- Only binary cell states\n- No support for infinite grids\n- Grid boundary cells must be unpopulated\n\n## Installation\n\nRegardless of the installation method you choose, you will need\n[OpenCL](https://www.khronos.org/opencl/) drivers for your hardware.\n\n### Using pip\n\n```\n$ pip install --user clcell\n```\n\n### Building from Source\n\nRequirements:\n- [GNU Make](https://www.gnu.org/software/make/)\n- [Futhark](https://futhark-lang.org/)\n- [setuptools](https://pypi.org/project/setuptools/)\n\nClone this repository:\n\n```\n$ git clone https://github.com/Foxbud/clcell.git\n```\n\nEnter the project directory:\n\n```\n$ cd clcell\n```\n\nBuild and install this package:\n\n```\n$ make install\n```\n\n##  Usage\n\n```Python\nimport numpy as np\nimport clcell\n\n# Instantiate a simulator using Conway's Game of Life as the ruleset.\nsim = clcell.CASimulator(clcell.LIFE)\n\n# Create a randomized game state to use as a seed.\nseed_state = np.random.randint(0, 2, (1023, 1023), dtype=np.int8)\n# Pad state with zeros (required for now).\nseed_state = np.pad(seed_state, 1, constant_values=0)\n\n# Simulate 10,000 generations based on that seed.\nfinal_state = sim.simulate(10000, seed_state)\n\n# Create a batch of 1,000 randomized, padded game states to use as seeds.\nseed_states = np.array([\n  np.pad(\n    np.random.randint(0, 2, (127, 127), dtype=np.int8),\n    1,\n    constant_values=0\n  )\n  for num\n  in range(1000)\n])\n\n# Simulate 1,000 generations based on each of those seeds.\nfinal_states = sim.batch_simulate(1000, seed_states)\n```\n\n## Changelog\n\n**v1.0.1**\n- Simplified how the device code checks for boundary cells.\n- Refactored device code to use grids of 8-bit cells as opposed to 32-bit.\n- Fixed incorrectly placed size annotations in one device function.\n\n**v1.0.0**\n- Initial release.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Foxbud/clcell",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "clcell",
    "package_url": "https://pypi.org/project/clcell/",
    "platform": "",
    "project_url": "https://pypi.org/project/clcell/",
    "project_urls": {
      "Homepage": "https://github.com/Foxbud/clcell"
    },
    "release_url": "https://pypi.org/project/clcell/1.0.1/",
    "requires_dist": [
      "pyopencl (>=2015.2)",
      "numpy"
    ],
    "requires_python": "",
    "summary": "OpenCL-accelerated cellular automata simulator",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6393253,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2717bb8b9f91826ae33e121305e5f1b8f4adfa82408d8f6d2a2ab6649cb71487",
          "md5": "bbbfaea8782f6cad65c0e9c190094cac",
          "sha256": "ff921b8050d0cb94c218d44bc6de24e7c19e07ffbbc7b03dabce9fd00d7be2cc"
        },
        "downloads": -1,
        "filename": "clcell-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bbbfaea8782f6cad65c0e9c190094cac",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 27966,
        "upload_time": "2020-01-02T23:25:19",
        "upload_time_iso_8601": "2020-01-02T23:25:19.784291Z",
        "url": "https://files.pythonhosted.org/packages/27/17/bb8b9f91826ae33e121305e5f1b8f4adfa82408d8f6d2a2ab6649cb71487/clcell-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8290e1d6301075a812ae2019e95dae85f585883d900313a8703dc9a155947080",
          "md5": "f534f3be28d77b00d304d3b2dbfda74d",
          "sha256": "e5ee1c48430226f566213968dc77c7e563d8a248cba82478e2d92ed7b2d74694"
        },
        "downloads": -1,
        "filename": "clcell-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f534f3be28d77b00d304d3b2dbfda74d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19555,
        "upload_time": "2020-01-03T23:56:20",
        "upload_time_iso_8601": "2020-01-03T23:56:20.352011Z",
        "url": "https://files.pythonhosted.org/packages/82/90/e1d6301075a812ae2019e95dae85f585883d900313a8703dc9a155947080/clcell-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8290e1d6301075a812ae2019e95dae85f585883d900313a8703dc9a155947080",
        "md5": "f534f3be28d77b00d304d3b2dbfda74d",
        "sha256": "e5ee1c48430226f566213968dc77c7e563d8a248cba82478e2d92ed7b2d74694"
      },
      "downloads": -1,
      "filename": "clcell-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f534f3be28d77b00d304d3b2dbfda74d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 19555,
      "upload_time": "2020-01-03T23:56:20",
      "upload_time_iso_8601": "2020-01-03T23:56:20.352011Z",
      "url": "https://files.pythonhosted.org/packages/82/90/e1d6301075a812ae2019e95dae85f585883d900313a8703dc9a155947080/clcell-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}