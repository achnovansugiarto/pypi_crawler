{
  "info": {
    "author": "Andrea F. Daniele",
    "author_email": "afdaniele@ttic.edu",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "# `datalite3`\n\n[![PyPI version shields.io](https://img.shields.io/pypi/v/datalite3.svg)](https://pypi.python.org/pypi/datalite3/)\n[![PyPI license](https://img.shields.io/pypi/l/datalite3.svg)](https://pypi.python.org/pypi/datalite3/)\n[![Documentation Status](https://readthedocs.org/projects/datalite3/badge/?version=latest)](https://datalite3.readthedocs.io/en/latest/?badge=latest)\n\nIt should be noted that Datalite is not suitable for secure web applications, it really is only suitable for cases when you can trust user input.\n\nDatalite is a simple Python\npackage that binds your dataclasses to a table in a sqlite3 database,\nusing it is extremely simple, say that you have a dataclass definition,\njust add the decorator `@datalite(\"mydb.db\")` to the top of the\ndefinition, and the dataclass will now be bound to the file `mydb.db`\n\n[Detailed API reference](https://datalite3.readthedocs.io/en/latest/)\n\n## Download and Install\n\nYou can install `datalite3` simply by\n\n```shell script\npip install datalite3\n```\n\nOr you can clone the repository and run\n\n```shell script\npython setup.py\n```\n\nDatalite has no dependencies! As it is built on Python 3.6+ standard library. Albeit, its tests require `unittest` library.\n\n## Datalite in Action\n\n```python\nfrom dataclasses import dataclass\nfrom datalite3 import datalite\n\n\n@datalite(db=\"mydb.db\")\n@dataclass\nclass Student:\n    student_id: int\n    student_name: str = \"John Smith\"\n```\n\nThis snippet will generate a table in the sqlite3 database file `mydb.db` with\ntable name `student` and columns `student_id`, `student_name` with SQL types\n`INTEGER` and `TEXT`, respectively. The default value for `student_name` is\n`John Smith`. A third column `__id__` will be automatically added to hold the\nprimary key for the records.\n\n##Basic Usage\n\n### Entry manipulation\n\nAfter creating an object traditionally, given that you used the `datalite` decorator,\nthe object has three new methods: `.create_entry()`, `.update_entry()`\nand `.remove_entry()`, you can add the object to its associated table \nusing the former, and remove it using the later. You can also update a record using\nthe middle.\n\n```python\nstudent = Student(10, \"Albert Einstein\")\nstudent.create_entry()  # Adds the entry to the table associated in db.db.\nstudent.student_id = 20 # Update an object on memory.\nstudent.update_entry()  # Update the corresponding record in the database.\nstudent.remove_entry()  # Removes from the table.\n```\n\n\n## Custom primary key\n\nIf you we want to declare one or more of the fields as part of the primary key for our\nrecords, we can just annotate them with `Primary[type]`, where `type` can be one of \n`int`, `float`, `str`, `bytes`.\n\n```python\nfrom dataclasses import dataclass\nfrom datalite3 import datalite, Primary\n\n\n@datalite(db=\"mydb.db\")\n@dataclass\nclass Student:\n    student_id: Primary[int]\n    student_name: str = \"John Smith\"\n```\n\nThis snippet will generate a table in the sqlite3 database file `mydb.db` with\ntable name `student` and columns `student_id`, `student_name` with SQL types\n`INTEGER` and `TEXT`, respectively. The column `student_id` will be also the primary\nkey and no `__id__` column will be added.\n\n\n\n## Fetching Records\n> :warning: **Limitation! Fetch can only fetch limited classes correctly**: int, float, bytes and str!\n\nFinally, you may wish to recreate objects from a table that already exists, for\nthis purpose we have the `fetch` module, from this you can import `\nfetch_from(class_, key)` as well as `is_fetchable(className, key)` \nformer fetches a record from the SQL database given its unique key \nwhereas the latter checks if it is fetchable (most likely to check if it exists.)\n\n```python\n>>> fetch_from(Student, 20)\nStudent(student_id=20, student_name='Albert Einstein')\n```\n\nWe also have three helper methods:\n- `fetch_all(class_)`: fetches all records of a given class. Returns a tuple of `class_` objects;\n- `fetch_if(class_, condition)`: fetches all the records of type `class_` that satisfy the given \ncondition. Here conditions must be written is SQL syntax;\n- `fetch_equals(class_, field, value)`: fetches all the records of type `class_` that have the \ncolumn `field` set to `value`;\n\n#### Pagination\n\n`datalite` also supports pagination on `fetch_if`, `fetch_all` and `fetch_where`,\nyou can specify `page` number and `element_count` for each page (default 10), for\nthese functions in order to get a subgroup of records.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/afdaniele/datalite3",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "datalite3",
    "package_url": "https://pypi.org/project/datalite3/",
    "platform": "",
    "project_url": "https://pypi.org/project/datalite3/",
    "project_urls": {
      "Homepage": "https://github.com/afdaniele/datalite3"
    },
    "release_url": "https://pypi.org/project/datalite3/1.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A small package that binds dataclasses to an sqlite3 database",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12636667,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4dbc214b4b5b571e5fa94f8dc84fe748f1f176515ce56ba2edbe882d3ad4c794",
          "md5": "8ce9d3d6350cf359904e0329390eff0f",
          "sha256": "a1a49c79fb05575f031d17ce0339d23ea004a47d64f2280c7d66cd1a1d8e5d3c"
        },
        "downloads": -1,
        "filename": "datalite3-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8ce9d3d6350cf359904e0329390eff0f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 15236,
        "upload_time": "2021-12-10T03:38:52",
        "upload_time_iso_8601": "2021-12-10T03:38:52.551048Z",
        "url": "https://files.pythonhosted.org/packages/4d/bc/214b4b5b571e5fa94f8dc84fe748f1f176515ce56ba2edbe882d3ad4c794/datalite3-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d638f3bd1b095a0d1fc6dcc1779568adbc1232c71243a806b047982fafe800f7",
          "md5": "0ba24ca4d2db4208c7276a611b2d94a5",
          "sha256": "49d590e1eb62668809cc8e7cea28c1c629b3f63f4234292401e18c1e6f5f609d"
        },
        "downloads": -1,
        "filename": "datalite3-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0ba24ca4d2db4208c7276a611b2d94a5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 16457,
        "upload_time": "2022-01-20T20:50:39",
        "upload_time_iso_8601": "2022-01-20T20:50:39.282868Z",
        "url": "https://files.pythonhosted.org/packages/d6/38/f3bd1b095a0d1fc6dcc1779568adbc1232c71243a806b047982fafe800f7/datalite3-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d638f3bd1b095a0d1fc6dcc1779568adbc1232c71243a806b047982fafe800f7",
        "md5": "0ba24ca4d2db4208c7276a611b2d94a5",
        "sha256": "49d590e1eb62668809cc8e7cea28c1c629b3f63f4234292401e18c1e6f5f609d"
      },
      "downloads": -1,
      "filename": "datalite3-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "0ba24ca4d2db4208c7276a611b2d94a5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 16457,
      "upload_time": "2022-01-20T20:50:39",
      "upload_time_iso_8601": "2022-01-20T20:50:39.282868Z",
      "url": "https://files.pythonhosted.org/packages/d6/38/f3bd1b095a0d1fc6dcc1779568adbc1232c71243a806b047982fafe800f7/datalite3-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}