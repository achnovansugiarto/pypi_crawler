{
  "info": {
    "author": "brainelectronics",
    "author_email": "info@brainelectronics.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: Implementation :: MicroPython"
    ],
    "description": "# MicroPython EEPROM\n\n[![Downloads](https://pepy.tech/badge/micropython-eeprom)](https://pepy.tech/project/micropython-eeprom)\n![Release](https://img.shields.io/github/v/release/brainelectronics/micropython-eeprom?include_prereleases&color=success)\n![MicroPython](https://img.shields.io/badge/micropython-Ok-green.svg)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n[![codecov](https://codecov.io/github/brainelectronics/micropython-eeprom/branch/main/graph/badge.svg)](https://app.codecov.io/github/brainelectronics/micropython-eeprom)\n[![CI](https://github.com/brainelectronics/micropython-eeprom/actions/workflows/release.yml/badge.svg)](https://github.com/brainelectronics/micropython-eeprom/actions/workflows/release.yml)\n\nMicroPython driveer for AT24Cxx EEPROM\n\n---------------\n\n## General\n\nMicroPython driveer for AT24Cxx EEPROM\n\nðŸ“š The latest documentation is available at\n[MicroPython EEPROM ReadTheDocs][ref-rtd-micropython-eeprom] ðŸ“š\n\n<!-- MarkdownTOC -->\n\n- [Installation](#installation)\n\t- [Install required tools](#install-required-tools)\n- [Setup](#setup)\n\t- [Install package with upip](#install-package-with-upip)\n\t\t- [General](#general)\n\t\t- [Specific version](#specific-version)\n\t\t- [Test version](#test-version)\n\t- [Manually](#manually)\n\t\t- [Upload files to board](#upload-files-to-board)\n- [Usage](#usage)\n- [Contributing](#contributing)\n\t- [Unittests](#unittests)\n- [Credits](#credits)\n\n<!-- /MarkdownTOC -->\n\n## Installation\n\n### Install required tools\n\nPython3 must be installed on your system. Check the current Python version\nwith the following command\n\n```bash\npython --version\npython3 --version\n```\n\nDepending on which command `Python 3.x.y` (with x.y as some numbers) is\nreturned, use that command to proceed.\n\n```bash\npython3 -m venv .venv\nsource .venv/bin/activate\n\npip install -r requirements.txt\n```\n\n## Setup\n\n### Install package with upip\n\nConnect the MicroPython device to a network (if possible)\n\n```python\nimport network\nstation = network.WLAN(network.STA_IF)\nstation.connect('SSID', 'PASSWORD')\nstation.isconnected()\n```\n\n#### General\n\nInstall the latest package version of this lib on the MicroPython device\n\n```python\nimport mip\nmip.install(\"github:brainelectronics/micropython-eeprom\")\n```\n\nFor MicroPython versions below 1.19.1 use the `upip` package instead of `mip`\n\n```python\nimport upip\nupip.install('micropython-eeprom')\n```\n\n#### Specific version\n\nInstall a specific, fixed package version of this lib on the MicroPython device\n\n```python\nimport mip\n# install a verions of a specific branch\nmip.install(\"github:brainelectronics/micropython-eeprom\", version=\"feature/initial-implementation\")\n# install a tag version\nmip.install(\"github:brainelectronics/micropython-eeprom\", version=\"0.1.0\")\n```\n\nFor MicroPython versions below 1.19.1 use the `upip` package instead of `mip`\n\n```python\nimport upip\nupip.install('micropython-eeprom')\n```\n\n#### Test version\n\nInstall a specific release candidate version uploaded to\n[Test Python Package Index](https://test.pypi.org/) on every PR on the\nMicroPython device. If no specific version is set, the latest stable version\nwill be used.\n\n```python\nimport mip\nmip.install(\"github:brainelectronics/micropython-eeprom\", version=\"0.1.0-rc1.dev1\")\n```\n\nFor MicroPython versions below 1.19.1 use the `upip` package instead of `mip`\n\n```python\nimport upip\n# overwrite index_urls to only take artifacts from test.pypi.org\nupip.index_urls = ['https://test.pypi.org/pypi']\nupip.install('micropython-eeprom')\n```\n\nSee also [brainelectronics Test PyPi Server in Docker][ref-brainelectronics-test-pypiserver]\nfor a test PyPi server running on Docker.\n\n### Manually\n\n#### Upload files to board\n\nCopy the module to the MicroPython board and import them as shown below\nusing [Remote MicroPython shell][ref-remote-upy-shell]\n\nOpen the remote shell with the following command. Additionally use `-b 115200`\nin case no CP210x is used but a CH34x.\n\n```bash\nrshell --port /dev/tty.SLAB_USBtoUART --editor nano\n```\n\nPerform the following command inside the `rshell` to copy all files and\nfolders to the device\n\n```bash\nmkdir /pyboard/lib\nmkdir /pyboard/lib/eeprom\n\ncp eeprom/* /pyboard/lib/eeprom\n\ncp examples/main.py /pyboard\ncp examples/boot.py /pyboard\n```\n\n## Usage\n\n```python\nfrom eeprom import EEPROM\nfrom machine import I2C, Pin\n\nI2C_ADDR = 0x50\nEEPROM_SIZE = 32\t# AT24C32 on 0x50\n\n# define custom I2C interface, default is 'I2C(0)'\n# check the docs of your device for further details and pin infos\ni2c = I2C(0, scl=Pin(13), sda=Pin(12), freq=800000)\neeprom = EEPROM(addr=I2C_ADDR, at24x=EEPROM_SIZE, i2c=i2c)\n\n# write 'micropython' to address 10\neeprom.write(10, 'micropython')\n\n# read 11 bytes starting at address 10\neeprom.read(10, 11)\n\n# update content at address 10 with 'MicroPython'\n# only changed values are written, here 'm' -> 'M' and 'p' -> 'P'\neeprom.write(10, 'MicroPython')\n```\n\n## Contributing\n\n### Unittests\n\nRun the unittests locally with the following command after installing this\npackage in a virtual environment\n\n```bash\n# run all tests\nnose2 --config tests/unittest.cfg\n\n# run only one specific tests\nnose2 tests.test_eeprom.TestEEPROM.test_addr\n```\n\nGenerate the coverage files with\n\n```bash\npython create_report_dirs.py\ncoverage html\n```\n\nThe coverage report is placed at `reports/coverage/html/index.html`\n\n## Credits\n\nBased on\n[Mike Causer's MicroPython TinyRTC I2C module][ref-micropython-tinyrtc-i2c]\nand the [PyPa sample project][ref-pypa-sample]\n\n<!-- Links -->\n[ref-rtd-micropython-eeprom]: https://micropython-eeprom.readthedocs.io/en/latest/\n[ref-remote-upy-shell]: https://github.com/dhylands/rshell\n[ref-brainelectronics-test-pypiserver]: https://github.com/brainelectronics/test-pypiserver\n[ref-micropython-tinyrtc-i2c]: https://github.com/mcauser/micropython-tinyrtc-i2c\n[ref-pypa-sample]: https://github.com/pypa/sampleproject\n[ref-test-pypi]: https://test.pypi.org/\n[ref-pypi]: https://pypi.org/\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/brainelectronics/micropython-eeprom",
    "keywords": "micropython,i2c,eeprom,driver",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "micropython-eeprom",
    "package_url": "https://pypi.org/project/micropython-eeprom/",
    "platform": null,
    "project_url": "https://pypi.org/project/micropython-eeprom/",
    "project_urls": {
      "Bug Reports": "https://github.com/brainelectronics/micropython-eeprom/issues",
      "Homepage": "https://github.com/brainelectronics/micropython-eeprom",
      "Source": "https://github.com/brainelectronics/micropython-eeprom"
    },
    "release_url": "https://pypi.org/project/micropython-eeprom/0.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "MicroPython driver for AT24Cxx EEPROM",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17492803,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7f027d8cf2e29b51db089eb8648f1f20c1e3610fa9000e964dd2ca3c02962917",
          "md5": "207351c14e9b2a0470f83d59779f5aad",
          "sha256": "7dd3b85b5e7ea55e987df5ee960b8e3859e8ca9e8a493ddfbcff63c7c4b39d4c"
        },
        "downloads": -1,
        "filename": "micropython-eeprom-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "207351c14e9b2a0470f83d59779f5aad",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5579,
        "upload_time": "2023-03-29T11:34:01",
        "upload_time_iso_8601": "2023-03-29T11:34:01.628530Z",
        "url": "https://files.pythonhosted.org/packages/7f/02/7d8cf2e29b51db089eb8648f1f20c1e3610fa9000e964dd2ca3c02962917/micropython-eeprom-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7f027d8cf2e29b51db089eb8648f1f20c1e3610fa9000e964dd2ca3c02962917",
        "md5": "207351c14e9b2a0470f83d59779f5aad",
        "sha256": "7dd3b85b5e7ea55e987df5ee960b8e3859e8ca9e8a493ddfbcff63c7c4b39d4c"
      },
      "downloads": -1,
      "filename": "micropython-eeprom-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "207351c14e9b2a0470f83d59779f5aad",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5579,
      "upload_time": "2023-03-29T11:34:01",
      "upload_time_iso_8601": "2023-03-29T11:34:01.628530Z",
      "url": "https://files.pythonhosted.org/packages/7f/02/7d8cf2e29b51db089eb8648f1f20c1e3610fa9000e964dd2ca3c02962917/micropython-eeprom-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}