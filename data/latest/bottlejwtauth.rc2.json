{
  "info": {
    "author": "gunville",
    "author_email": "rk13088@yahoo.com",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Bottle",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "\n## bottleJwtAuth - JWT Authentication for Bottle\n\n**bottleJwtAuth** provides JWT Bearer token authentication and authorization for [Bottle web Framework](https://bottlepy.org) web apps.\n\n\n## Installation\n\n```bash\n# pip install bottleJwtAuth\n```\n\n### Using bottleJwtAuth\n```python\nfrom bottle import Bottle\nfrom JwtAuth import JwtAuth\nfrom config import issuer, audience\n\n\napp = Bottle()\n\n# Create a restriction on any route with a prefix of '/api/'\naud=JwtAuth(jwt_config={issuer=issuer, audience=audience, url_prefix='/api/')\n\napp.install(aud)\n\n# Basic JWT authentication and validation required to access this view:\n@app.route('/api/whoami')\ndef whoami():\n    return ...\n\n# Specific claim requirements to access this view:\n@app.route('/api/adduser/<user>', claim={'role':['appadmin', 'usradmin']})\ndef add_user(user=None):\n    ....\n\n# No JWT or any other feature is required to access this route\n@app.route('/info)\ndef info():\n    return '....'\n\nif __name__ == '__main__:\n    app.run()\n\n```\n#### Signature and Parameters\n\n```\nauth = JwtAuth(jwt_config=jwt_conf, issuer=issuer, audience=audience, url_prefix='/')\n```\n\n**`jwt_config`** A python `dict` used to configure a JWT Authorizor.  Discussed below in more detail. Default: a symmetric HS256 key is generated.\n\n**`issuer`** The issuer URN (generally a URL) used for the JWT `iss` on encode and used to verify on decode.  Default is `None`\n\n**`audience`** The audience URN used for verification of the JWT `aud` on decode.  You will need to add this to the payload on encode operations.\n\n**`url_prefix`** The prefix path component used to match route rules where JwtAuth will impose a JWT requirement and verification.  The default is '/' - the whole app.\n\n### Prefix-based JwtAuth\n\nAny bottle routes that matches the **`url_prefix`** of a JwtAuth plugin will have middleware added to retrieve and verify the JWT bearer token form the HTTP `Authentication` header.\nThe plugin verifies:\n* The request has a valid authentication header with a bearer token.\n* The token signature is correct\n* The iss field matches the expected issuer\n* The aud field matches the expected audience\n* The token has not expired.\n\nThis applies to all routes and subordinate routes defined, unless the route itself disables the JwtAuth plugin.  This is done with the `skip` config in the bottle route statement.\n\n```python\n@app.route('/dontcheckjwt', skip=['/api/'])\n```\nNote the plugin `name` is identical to the `url_prefix`, in the example, `'/api/'`\n\nMultiple JwtAuth plugins can be added to the same app as long as the `url_prefix` of each plugin do not overlap. \n\n### Specific route restrictions\n\nAdditional requirements can be placed on specific routes:\n* you can define a **`scope`** (or **`scp`**) restriction on a given view in the route definition.\n* you can define **`claim`** restrictions on a given view in the route definition.\n* this only applies to routes with the url_prefix applied.\n* **`scope`** and **`claim`** requirements can be combined.\n\nConsider an example with a scope requirement:\n```python\nauth = JwtAuth(config, issuer='urn:xyz', audience='api:testapi', url_prefix='/api')\n\n# Verify JWT and scope\n@app.route('/api/test/3', scp='email')\ndef test3():\n    return 'test3 - JWT verified, and scope of email verified'\n```\n* if more than one scope is specified, the token must contain all of these.  e.g.\n```python\n@app.route('/api/test/3/, scp=['email', 'User.write'])\ndef viewx():\n    ...\n```\n\nWith a claim requirement, multiple claims can be required, and the token much be able to satisfy each claim. \n\nHowever, only one matching value per claim is required. For example, for a request to access viewy, the token must contain a claim call `name` that contains either 'bob' or 'alice', and must have the `role` of `appadmin` as well.\n\n```python\n@app.route('/api/test/4/', claim={'name': ['bob', 'alice'], 'role':'appadmin'})\ndef viewy():\n    ...\n```\n\n## *jwt_config* configuration details\n\nThe `jwt_config` option is a dict that can take multiple forms, depending on how **JwtAuth** is deployed. This `dict` is provided to an underlying class **JwtEncoder** that itself uses the **PyJWT** module to implement both encoding and decoding of JWT's - though **bottleJwtAuth** is only concerned with decoding of JWTs.\n\nDetails on configuring **jwt_config** are [available in the readme.](https://github.com/Glocktober/JwtEncoder)\n**JwtEncoder** provides a configuration interface to support a few different JST encryption methods, depending on what your needs are.  These include:\n* shared key\n* providing a public and private key\n* providing an X509 RSA certificate\n* JWKS url\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Glocktober/JwtAuth",
    "keywords": "'bottle jwt oidc plugin'",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "BottleJwtAuth",
    "package_url": "https://pypi.org/project/BottleJwtAuth/",
    "platform": "",
    "project_url": "https://pypi.org/project/BottleJwtAuth/",
    "project_urls": {
      "Homepage": "https://github.com/Glocktober/JwtAuth",
      "overview": "https://github.com/Glocktober/JwtAuth/blob/main/README.md",
      "repo": "https://github.com/Glocktober/JwtAuth"
    },
    "release_url": "https://pypi.org/project/BottleJwtAuth/21.9.1/",
    "requires_dist": [
      "JwtEncoder (>=21.8)",
      "bottle (>=0.12.0)"
    ],
    "requires_python": ">=3.6",
    "summary": "JWT authentication plugin for Bottle",
    "version": "21.9.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11341301,
  "releases": {
    "21.8.30": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9ef0b26226bac63051cecbd730d323cbf85b5723e913f63a24b0d88b9fa37b8a",
          "md5": "6a4c50413e35b2e57b4c37230a4c3331",
          "sha256": "07fb7887c0b30f71691b947a336a0d1c8c5a5dd6c5bd1636204c7f61102302a3"
        },
        "downloads": -1,
        "filename": "BottleJwtAuth-21.8.30-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6a4c50413e35b2e57b4c37230a4c3331",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11850,
        "upload_time": "2021-08-29T22:04:16",
        "upload_time_iso_8601": "2021-08-29T22:04:16.713259Z",
        "url": "https://files.pythonhosted.org/packages/9e/f0/b26226bac63051cecbd730d323cbf85b5723e913f63a24b0d88b9fa37b8a/BottleJwtAuth-21.8.30-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f92573952a0fe6750f800e4ae19e1c0470ac7588a9c27c0abf9a4ed7b7c0d004",
          "md5": "f15b2c3b39e7e320992cb827fd7ac37b",
          "sha256": "e1b58ee8e65cdcac6fbabce1e4238efc7a382074b8a95f15d0187bfe4157548d"
        },
        "downloads": -1,
        "filename": "BottleJwtAuth-21.8.30.tar.gz",
        "has_sig": false,
        "md5_digest": "f15b2c3b39e7e320992cb827fd7ac37b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10099,
        "upload_time": "2021-08-29T22:04:18",
        "upload_time_iso_8601": "2021-08-29T22:04:18.260726Z",
        "url": "https://files.pythonhosted.org/packages/f9/25/73952a0fe6750f800e4ae19e1c0470ac7588a9c27c0abf9a4ed7b7c0d004/BottleJwtAuth-21.8.30.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "21.9.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b9c68b35250d98aefe7b05fb88999e87d51015b70d877ba0c86836ff0dd801f7",
          "md5": "b48f32662d0d6d87b4fb2408d6dc9bad",
          "sha256": "93f328aa3f09e325b290e72a300b52759f2a9b56a03b99af040cf14475fccfee"
        },
        "downloads": -1,
        "filename": "BottleJwtAuth-21.9.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b48f32662d0d6d87b4fb2408d6dc9bad",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 9693,
        "upload_time": "2021-09-01T21:30:14",
        "upload_time_iso_8601": "2021-09-01T21:30:14.103117Z",
        "url": "https://files.pythonhosted.org/packages/b9/c6/8b35250d98aefe7b05fb88999e87d51015b70d877ba0c86836ff0dd801f7/BottleJwtAuth-21.9.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "28928c9d5fa70f3633894d3bba4288956edd165628d3a9f8f7f8ac6e9642c3d0",
          "md5": "e7a06064b6a291e89a96537fde4f9774",
          "sha256": "8a68dbbb2da4ea2fd2281f1721501bc62b8d3cdff264ccdc02e750305c3756bb"
        },
        "downloads": -1,
        "filename": "BottleJwtAuth-21.9.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e7a06064b6a291e89a96537fde4f9774",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8602,
        "upload_time": "2021-09-01T21:30:15",
        "upload_time_iso_8601": "2021-09-01T21:30:15.539724Z",
        "url": "https://files.pythonhosted.org/packages/28/92/8c9d5fa70f3633894d3bba4288956edd165628d3a9f8f7f8ac6e9642c3d0/BottleJwtAuth-21.9.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b9c68b35250d98aefe7b05fb88999e87d51015b70d877ba0c86836ff0dd801f7",
        "md5": "b48f32662d0d6d87b4fb2408d6dc9bad",
        "sha256": "93f328aa3f09e325b290e72a300b52759f2a9b56a03b99af040cf14475fccfee"
      },
      "downloads": -1,
      "filename": "BottleJwtAuth-21.9.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b48f32662d0d6d87b4fb2408d6dc9bad",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 9693,
      "upload_time": "2021-09-01T21:30:14",
      "upload_time_iso_8601": "2021-09-01T21:30:14.103117Z",
      "url": "https://files.pythonhosted.org/packages/b9/c6/8b35250d98aefe7b05fb88999e87d51015b70d877ba0c86836ff0dd801f7/BottleJwtAuth-21.9.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "28928c9d5fa70f3633894d3bba4288956edd165628d3a9f8f7f8ac6e9642c3d0",
        "md5": "e7a06064b6a291e89a96537fde4f9774",
        "sha256": "8a68dbbb2da4ea2fd2281f1721501bc62b8d3cdff264ccdc02e750305c3756bb"
      },
      "downloads": -1,
      "filename": "BottleJwtAuth-21.9.1.tar.gz",
      "has_sig": false,
      "md5_digest": "e7a06064b6a291e89a96537fde4f9774",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 8602,
      "upload_time": "2021-09-01T21:30:15",
      "upload_time_iso_8601": "2021-09-01T21:30:15.539724Z",
      "url": "https://files.pythonhosted.org/packages/28/92/8c9d5fa70f3633894d3bba4288956edd165628d3a9f8f7f8ac6e9642c3d0/BottleJwtAuth-21.9.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}