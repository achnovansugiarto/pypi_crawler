{
  "info": {
    "author": "Diederick Vermetten",
    "author_email": "d.l.vermetten@liacs.leidenuniv.nl",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Modular DE \n\nThis work-in-progress repository contains the code used to create a modular version of differential evolution. \n\n## Basic use-case: L-SHADE\n\nTo instantiate L-SHADE using modDE and optimize a function (using iohexperimenter), the following code can be used:\n\n```python\nfrom modularde import ModularDE\nimport ioh\nimport numpy as np\n\nf = ioh.get_problem(23, 1, 5)\nlshade = ModularDE(f, base_sampler='uniform', mutation_base='target', mutation_reference='pbest', bound_correction='expc_center', crossover='bin', lpsr=True, lambda_ = 18*5, memory_size = 6, use_archive=True, init_stats=True, adaptation_method_F='shade', adaptation_method_CR='shade')\nlshade.run()\n```\n\nTo perform a larger benchmark experiment which includes tracking of internal parameters, the following can be used (note that running the full experiment with detailed tracking will use a significant amount of storage):\n\n```python\nclass LSHADE_interface():\n    def __init__(self, bound_corr):\n        self.bound_corr = bound_corr\n        self.lshade = None\n        \n    def __call__(self, f):\n        self.lshade = ModularDE(f, base_sampler='uniform', mutation_base='target', mutation_reference='pbest', bound_correction = self.bound_corr, crossover='bin', lpsr=True, lambda_ = 18*f.meta_data.n_variables, memory_size = 6, use_archive=True, init_stats = True, adaptation_method_F='shade', adaptation_method_CR='shade')\n        self.lshade.run()\n        \n    @property\n    def F(self):\n        if self.lshade is None:\n            return 0\n        return self.lshade.parameters.stats.curr_F\n    \n    @property\n    def CR(self):\n        if self.lshade is None:\n            return 0\n        return self.lshade.parameters.stats.curr_CR\n\n    @property\n    def CS(self):\n        if self.lshade is None:\n            return 0\n        return self.lshade.parameters.stats.CS\n    \n    @property\n    def ED(self):\n        if self.lshade is None:\n            return 0\n        return self.lshade.parameters.stats.ED\n    \n    @property\n    def cumulative_corrected(self):\n        if self.lshade is None:\n            return 0\n        return self.lshade.parameters.stats.corr_so_far\n    \n    @property\n    def corrected(self):\n        if self.lshade is None:\n            return 0\n        return self.lshade.parameters.stats.corrected\n        \nobj = LSHADE_interface('saturate')\n\nexp = ioh.Experiment(algorithm = obj, #Set the optimization algorithm\n  fids = range(1,25), iids = [1,2,3,4,5], dims = [5,30], reps = 5, problem_type = 'Real', #Problem definitions\n  njobs = 12, logger_triggers = [ioh.logger.trigger.ALWAYS],#Enable paralellization\n  logged = True, folder_name = f'L-SHADE_sat', algorithm_name = f'L-SHADE', store_positions = True, #Logging specifications\n  experiment_attributes = {'SDIS' : 'Saturate'}, logged_attributes = ['corrected', 'cumulative_corrected', 'F', 'CR', 'CS', 'ED'], #Attribute tracking\n  merge_output = True, zip_output = True, remove_data = True #Only keep data as a single zip-file\n)\n\nexp()\n```\n\nThe design of this package is heavily based on the Modular CMA-ES package: https://github.com/IOHprofiler/ModularCMAES\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "modde",
    "package_url": "https://pypi.org/project/modde/",
    "platform": null,
    "project_url": "https://pypi.org/project/modde/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/modde/0.0.1/",
    "requires_dist": [
      "numpy",
      "scipy",
      "ioh",
      "numba"
    ],
    "requires_python": "",
    "summary": "Package Containing Modular DE optimizer",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16195601,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0431a0c2fb19585c33be74ed32177fe8aa80dfefa535e8f3690f36ca6cd6042d",
          "md5": "a919076903fe2a3eb527d4be8e548d00",
          "sha256": "135f7820d283f6303ce31ecbae3f5811fd46801c3248187bad1e90f8196a101a"
        },
        "downloads": -1,
        "filename": "modde-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a919076903fe2a3eb527d4be8e548d00",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 21381,
        "upload_time": "2022-12-23T09:21:42",
        "upload_time_iso_8601": "2022-12-23T09:21:42.061542Z",
        "url": "https://files.pythonhosted.org/packages/04/31/a0c2fb19585c33be74ed32177fe8aa80dfefa535e8f3690f36ca6cd6042d/modde-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ce41d681f9ff41d83148015ffb338b2eccdb5c6404f75e01e20b02da8042d7b8",
          "md5": "6bf3af88fd10668ab210abefee23dfaf",
          "sha256": "d1f8f4d04711f394e6742c1b5bf9ef8a4f237390551878aa39f3e63f289fea2f"
        },
        "downloads": -1,
        "filename": "modde-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6bf3af88fd10668ab210abefee23dfaf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19655,
        "upload_time": "2022-12-23T09:21:44",
        "upload_time_iso_8601": "2022-12-23T09:21:44.228333Z",
        "url": "https://files.pythonhosted.org/packages/ce/41/d681f9ff41d83148015ffb338b2eccdb5c6404f75e01e20b02da8042d7b8/modde-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0431a0c2fb19585c33be74ed32177fe8aa80dfefa535e8f3690f36ca6cd6042d",
        "md5": "a919076903fe2a3eb527d4be8e548d00",
        "sha256": "135f7820d283f6303ce31ecbae3f5811fd46801c3248187bad1e90f8196a101a"
      },
      "downloads": -1,
      "filename": "modde-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a919076903fe2a3eb527d4be8e548d00",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 21381,
      "upload_time": "2022-12-23T09:21:42",
      "upload_time_iso_8601": "2022-12-23T09:21:42.061542Z",
      "url": "https://files.pythonhosted.org/packages/04/31/a0c2fb19585c33be74ed32177fe8aa80dfefa535e8f3690f36ca6cd6042d/modde-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ce41d681f9ff41d83148015ffb338b2eccdb5c6404f75e01e20b02da8042d7b8",
        "md5": "6bf3af88fd10668ab210abefee23dfaf",
        "sha256": "d1f8f4d04711f394e6742c1b5bf9ef8a4f237390551878aa39f3e63f289fea2f"
      },
      "downloads": -1,
      "filename": "modde-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "6bf3af88fd10668ab210abefee23dfaf",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 19655,
      "upload_time": "2022-12-23T09:21:44",
      "upload_time_iso_8601": "2022-12-23T09:21:44.228333Z",
      "url": "https://files.pythonhosted.org/packages/ce/41/d681f9ff41d83148015ffb338b2eccdb5c6404f75e01e20b02da8042d7b8/modde-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}