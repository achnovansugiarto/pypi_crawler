{
  "info": {
    "author": "Sara Althubaiti",
    "author_email": "sara.althubaiti@kaust.edu.sa",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# DeepMOCCA - Deep Multi Omics CanCer Analysis\n\nDeepMOCCA is a method to predict survival time in individual cancer samples. DeepMOCCA also learns representations of the multi-scale activities and interactions within a cell from multi-omics data associated with these samples.\n\nOur tool takes as input data derived from individual sample, in particular the absolute gene expression, differential expression, absolute methylation, differential methylation, type of the copy number variants, and pathogenicity scores for the set of germline and somatic variants; it also has as input the cancer type and anatomical location of the tumor. We use this information to determine the cell type of origin.\n\n## Datasets\n\n* All multi-omics data for the 33 cancer types (i.e. gene expression, DNA methylation, copy number variation (CNV), single nucleotide variation (SNV) and clinical data) have been downloaded from the [The Cancer Genome Atlas (TCGA)](http://cancergenome.nih.gov) via their [Data Transfer Tool Client](https://gdc.cancer.gov/access-data/gdc-data-transfer-tool). Approval is required to access individual level data.\n\n* The protein-protein interactions network is from [STRING](https://string-db.org/cgi/download.pl?sessionId=VKCYtvc7YJch&species_text=Homo+sapiens).\n\n## Dependencies\n\n* To install python dependencies run: `pip install -r requirements.txt`\n\n* Note: the `torch` and `torch geometric cuda` need to have the same version, we suggest to follow the instructions [here](https://pytorch-geometric.readthedocs.io/en/latest/notes/installation.html)\n\n## Installation\n\n`pip install deepmocca` should work in most cases.\n\n## Running\n\n* Download all the files in [data.tar.gz](https://github.com/bio-ontology-research-group/DeepMOCCA/raw/master/data.tar.gz) and place them into data folder\n* `deepmocca -dr <path_to_data_folder> -if <input_filename> -ct <cancer_type> -ap <anatomical_location>`\n* Run `deepmocca --help` to display a description for the parameters:\n```\nUsage: deepmocca [OPTIONS]\n\nOptions:\n  -dr, --data-root TEXT           Data root folder  [required]\n  -if, --in-file TEXT             Input file  [required]\n  -mf, --model-file TEXT          Pytorch model file\n  -ct, --cancer-type-flag TEXT    Cancer type flag  [required]\n  -ap, --anatomical-part-flag TEXT\n                                  Anatomical part flag  [required]\n  -of, --out-file TEXT            Output result file\n  --help                          Show this message and exit.\n  ```\n  \n* `example_file.txt` - An example file to test one sample\n  \n#### Cancer types and Anatomical locations parameters\n```\n-ct, --cancer-type-flag <number_correspoing_to_cancer_type>\n \n1\tBreast Invasive Carcinoma (TCGA-BRCA)\n2\tAdrenocortical Carcinoma (TCGA-ACC)\n3\tBladder Urothelial Carcinoma (TCGA-BLCA)\n4\tCervical Squamous Cell Carcinoma and Endocervical Adenocarcinoma (TCGA-CESC)\n5\tCholangiocarcinoma (TCGA-CHOL)\n6\tColon Adenocarcinoma (TCGA-COAD)\n7\tLymphoid Neoplasm Diffuse Large B-cell Lymphoma (TCGA-DLBC)\n8\tEsophageal Carcinoma (TCGA-ESCA)\n9\tGlioblastoma Multiforme (TCGA-GBM)\n10\tHead and Neck Squamous Cell Carcinoma (TCGA-HNSC)\n11\tKidney Chromophobe (TCGA-KICH)\n12\tKidney Renal Clear Cell Carcinoma (TCGA-KIRC)\n13\tKidney Renal Papillary Cell Carcinoma (TCGA-KIRP)\n14\tAcute Myeloid Leukemia (TCGA-LAML)\n15\tBrain Lower Grade Glioma (TCGA-LGG)\n16\tLiver Hepatocellular Carcinoma (TCGA-LIHC)\n17\tLung Adenocarcinoma (TCGA-LUAD)\n18\tLung Squamous Cell Carcinoma (TCGA-LUSC)\n19\tMesothelioma (TCGA-MESO)\n20\tOvarian Serous Cystadenocarcinoma (TCGA-OV)\n21\tPancreatic Adenocarcinoma (TCGA-PAAD)\n22\tPheochromocytoma and Paraganglioma (TCGA-PCPG)\n23\tProstate Adenocarcinoma (TCGA-PRAD)\n24\tRectum Adenocarcinoma (TCGA-READ)\n25\tSarcoma (TCGA-SARC)\n26\tSkin Cutaneous Melanoma (TCGA-SKCM)\n27\tStomach Adenocarcinoma (TCGA-STAD)\n28\tTesticular Germ Cell Tumors (TCGA-TGCT)\n29\tThyroid Carcinoma (TCGA-THCA)\n30\tThymoma (TCGA-THYM)\n31\tUterine Corpus Endometrial Carcinoma (TCGA-UCEC)\n32\tUterine Carcinosarcoma (TCGA-UCS)\n33\tUveal Melanoma (TCGA-UVM)\n \n-ap, --anatomical-part-flag <number_correspoing_to_anatomical_part> \n \n1\tBreast\n2\tAdrenal gland\n3\tBladder\n4\tCervix uteri\n5\tGallbladder\n6\tLiver and intrahepatic bile ducts\n7\tColon\n8\tRectosigmoid junction\n9\tBones, joints and articular cartilage of other and unspecified sites\n10\tBrain\n11\tConnective, subcutaneous and other soft tissues\n12\tHeart, mediastinum, and pleura\n13\tHematopoietic and reticuloendothelial systems\n14\tLymph nodes\n15\tOther and unspecified major salivary glands\n16\tRetroperitoneum and peritoneum\n17\tSmall intestine\n18\tStomach\n19\tTestis\n20\tThyroid gland\n21\tEsophagus\n22\tBase of tongue\n23\tFloor of mouth\n24\tGum\n25\tHypopharynx\n26\tLarynx\n27\tLip\n28\tOropharynx\n29\tOther and ill-defined sites in lip, oral cavity and pharynx\n30\tOther and unspecified parts of mouth\n31\tOther and unspecified parts of tongue\n32\tPalate\n33\tTonsil\n34\tKidney\n35\tBronchus and lung\n36\tOvary\n37\tPancreas\n38\tOther and ill-defined sites\n39\tOther endocrine glands and related structures\n40\tSpinal cord, cranial nerves, and other parts of central nervous system\n41\tProstate gland\n42\tRectum\n43\tBones, joints and articular cartilage of limbs\n44\tCorpus uteri\n45\tMeninges\n46\tOther and unspecified male genital organs\n47\tPeripheral nerves and autonomic nervous system\n48\tUterus, NOS\n49\tSkin\n50\tThymus\n51\tEye and adnexa\n```\n \n#### Output\nThe model will output:\n- A tab separated file has the same name as input file with **_results** extension which contains:\n    * Sample_ID\n    * Predicted survival time for a sample, for the selected cancer type and anatomical part\n    * A vector representation for the sample based on the internal representation of the model\n \n## Scripts\n\n* `preprocess_gene_expression.py` - This script is used to preprocess and normalize gene expression data.\n* `preprocess_methylation.py` - This script is used to preprocess the DNA methylation data.\n* `preprocess_CNV.py` - This script is used to preprocess the copy number variation (CNV) data.\n* `process_vcf.sh` and `process_vcf.py` - These scripts are used to preprocess the single-nucleotide variation (SNV) data.\n* `deepmocca_training.py` - This script is used to train and save the trained model.\n\n## Results\n\nWe have some [results](https://github.com/bio-ontology-research-group/DeepMOCCA/tree/master/results) pre-generated:\n\n- `patients_representations.txt` - The representation of features for each patient generated after the 2nd `Conv2` layer.\n- `Top_10_ranked_genes_all_samples.tar.gz` - The top 10 ranked genes for each patient genrated from the attention mechanism which specifiy wheather a gene is:\n  * `Driver in the same cancer` -> `0` if yes and `1` if no.\n  * `Driver in other cancer` -> `0` if yes and `1` if no.\n  * `Prognostic in the same cancer` -> `0` if yes and `1` if no.\n  * `Prognostic in other cancer` -> `0` if yes and `1` if no.\n      \n## Final notes\n\nFor any comments or help, please use the issue tracker or send an email to sara.althubaiti@kaust.edu.sa.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/bio-ontology-research-group/deepmocca/archive/v1.0.1.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "deepmocca",
    "package_url": "https://pypi.org/project/deepmocca/",
    "platform": "",
    "project_url": "https://pypi.org/project/deepmocca/",
    "project_urls": {
      "Download": "https://github.com/bio-ontology-research-group/deepmocca/archive/v1.0.1.tar.gz"
    },
    "release_url": "https://pypi.org/project/deepmocca/1.0.1/",
    "requires_dist": null,
    "requires_python": "<3.8",
    "summary": "DeepMOCCA",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9713880,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c9fa6655bae8fdf6a21ec11504629740ae9545b9888cbfafe3e1776dcbf26dcb",
          "md5": "226cdc7cb520454978817950a6afbbec",
          "sha256": "260469ee895110b5aee0cbf54ebd0b6e24c4dd985a0580cb996f3e4aec0a3712"
        },
        "downloads": -1,
        "filename": "deepmocca-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "226cdc7cb520454978817950a6afbbec",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "<3.8",
        "size": 19662,
        "upload_time": "2020-12-22T07:47:49",
        "upload_time_iso_8601": "2020-12-22T07:47:49.194889Z",
        "url": "https://files.pythonhosted.org/packages/c9/fa/6655bae8fdf6a21ec11504629740ae9545b9888cbfafe3e1776dcbf26dcb/deepmocca-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c5ce0fb3aff37e2455b355bd05cda7cccb4757ba86804c51df0607f4511bc445",
          "md5": "6c6d45c26d2d8e1bcc215f6ceab3557b",
          "sha256": "5eb509ad6baf69b225a2e3d93ba214f96d4e263eb8292b1f8810cd9a565ddba0"
        },
        "downloads": -1,
        "filename": "deepmocca-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6c6d45c26d2d8e1bcc215f6ceab3557b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "<3.8",
        "size": 7478,
        "upload_time": "2020-12-22T07:47:50",
        "upload_time_iso_8601": "2020-12-22T07:47:50.770329Z",
        "url": "https://files.pythonhosted.org/packages/c5/ce/0fb3aff37e2455b355bd05cda7cccb4757ba86804c51df0607f4511bc445/deepmocca-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e18ceb98bea59b9d3fe677e4631d90e5954b5464b66fc16cd78b15fff0576b43",
          "md5": "5dbbcdc3514b642d1f3129fb480da993",
          "sha256": "aa6148c00f82d8c15b337dc960010223064a6a67e68c46e55cc4ac103245704d"
        },
        "downloads": -1,
        "filename": "deepmocca-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5dbbcdc3514b642d1f3129fb480da993",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "<3.8",
        "size": 8051,
        "upload_time": "2021-03-09T09:27:14",
        "upload_time_iso_8601": "2021-03-09T09:27:14.155547Z",
        "url": "https://files.pythonhosted.org/packages/e1/8c/eb98bea59b9d3fe677e4631d90e5954b5464b66fc16cd78b15fff0576b43/deepmocca-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e18ceb98bea59b9d3fe677e4631d90e5954b5464b66fc16cd78b15fff0576b43",
        "md5": "5dbbcdc3514b642d1f3129fb480da993",
        "sha256": "aa6148c00f82d8c15b337dc960010223064a6a67e68c46e55cc4ac103245704d"
      },
      "downloads": -1,
      "filename": "deepmocca-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "5dbbcdc3514b642d1f3129fb480da993",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "<3.8",
      "size": 8051,
      "upload_time": "2021-03-09T09:27:14",
      "upload_time_iso_8601": "2021-03-09T09:27:14.155547Z",
      "url": "https://files.pythonhosted.org/packages/e1/8c/eb98bea59b9d3fe677e4631d90e5954b5464b66fc16cd78b15fff0576b43/deepmocca-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}