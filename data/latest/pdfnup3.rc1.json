{
  "info": {
    "author": "Dinu Gherman",
    "author_email": "gherman@darwin.in-berlin.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: End Users/Desktop",
      "License :: OSI Approved :: GNU General Public License (GPL)",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Programming Language :: Python",
      "Topic :: Printing",
      "Topic :: Utilities"
    ],
    "description": "`Pdfnup` is a Python module and command-line tool for layouting multiple \npages per sheet of a PDF document. Using it you can take a PDF document \nand create a new PDF document from it where each page contains a number\nof minimized pages from the original PDF file. \n\nRight now `pdfnup` should be used on documents with all pages the same \nsize, and half square page numbers per sheet work best on paper sizes\nof the ISO A series.\n\nBasically, `pdfnup` wrapps `pyPdf <http://pypi.python.org/pypi/pyPdf>`_, \na package written by Mathieu Fenniak, which does not provide tools like \nthis for using the core functionality easily from the command-line or \nfrom a Python module. `Pdfnup` itself was much inspired from some code \nwritten by Henning von Bargen - thanks, Henning!\n\nThis release provides full support for file objects and StringIO objects\nfor input as well as output documents and fixes a nasty buglet in the \ncommand-line invocation script.\n\n\nFeatures\n++++++++\n\n- save minimized pages of a given PDF document in a new PDF document\n- place n pages per sheet, with n being square or half square\n- customize layout order, both horizontally and vertically\n- turn rotated pages to make them all have the same format \n- allow patterns for output files\n- supports file-like objects for input and output documents\n- install a Python module named ``pdfnup.py``\n- install a Python command-line script named ``pdfnup``\n- provide a Unittest test suite\n\n\nExamples\n++++++++\n\nYou can use `pdfnup` as a Python module e.g. like in the following\ninteractive Python session::\n\n    >>> from pdfnup import generateNup\n    >>>\n    >>> generateNup(\"file.pdf\", 8, verbose=True)\n    written: file-8up.pdf\n    >>>\n    >>> generateNup(\"file.pdf\", 8, dirs=\"LD\", verbose=True)\n    written: file-8up.pdf\n    >>>\n    >>> f = open(\"file.pdf\")\n    >>> generateNup(f, 8, outPathPatternOrFile=\"out-%(n)dup.pdf\", verbose=True)\n    written: out-8up.pdf\n\nIn addition there is a script named ``pdfnup``, which can be used \nmore easily from the system command-line like this (you can see many \nmore examples when typing ``pdfnup -h`` on the command-line)::\n\n    $ pdfnup -V file.pdf\n    written: file-4up.pdf\n    $ pdfnup -V -n 8 file.pdf\n    written: file-8up.pdf\n    $ pdfnup -V -n 8 -l LD file.pdf\n    written: file-8up.pdf\n    $ pdfnup -V -n 9 /path/file[12].pdf  \n    written: /path/file1-9up.pdf\n    written: /path/file2-9up.pdf\n    $ pdfnup -V -n 8 -o \"%(dirname)s/foo.pdf\" /path/file.pdf\n    written: /path/foo.pdf\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "http://www.dinu-gherman.net/tmp/pdfnup-1.0.0.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://www.dinu-gherman.net/",
    "keywords": "PDF,minimizig pages",
    "license": "GPL 3",
    "maintainer": "Dinu Gherman",
    "maintainer_email": "gherman@darwin.in-berlin.de",
    "name": "pdfnup3",
    "package_url": "https://pypi.org/project/pdfnup3/",
    "platform": "Posix",
    "project_url": "https://pypi.org/project/pdfnup3/",
    "project_urls": {
      "Download": "http://www.dinu-gherman.net/tmp/pdfnup-1.0.0.tar.gz",
      "Homepage": "http://www.dinu-gherman.net/"
    },
    "release_url": "https://pypi.org/project/pdfnup3/1.0.0/",
    "requires_dist": [
      "PyPDF2"
    ],
    "requires_python": "",
    "summary": "Layout multiple pages per sheet of a PDF document.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8922425,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba413f5162aee05cda42fcb417337a79d65aa6637f01bf4169903732b7d10876",
          "md5": "aec44719df92e44d04d16176fed075c7",
          "sha256": "ee3ec5f6b184bb515bd93154d4d77b766ba5f1e1a9053da67168e6a1da49c226"
        },
        "downloads": -1,
        "filename": "pdfnup3-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "aec44719df92e44d04d16176fed075c7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 20736,
        "upload_time": "2020-12-17T10:08:32",
        "upload_time_iso_8601": "2020-12-17T10:08:32.092441Z",
        "url": "https://files.pythonhosted.org/packages/ba/41/3f5162aee05cda42fcb417337a79d65aa6637f01bf4169903732b7d10876/pdfnup3-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "51004d475e03c99c0f5ee70a5d10cdea7c0dd630918bb35821a4b31b68508efa",
          "md5": "96f2727447f4c41aad93dd2b5b21ec5b",
          "sha256": "39c423d1c6d4adc269fbc600c309da9bbd2e4aa28d36e4e041a4080247a67c4b"
        },
        "downloads": -1,
        "filename": "pdfnup3-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "96f2727447f4c41aad93dd2b5b21ec5b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 58910,
        "upload_time": "2020-12-17T10:08:33",
        "upload_time_iso_8601": "2020-12-17T10:08:33.770660Z",
        "url": "https://files.pythonhosted.org/packages/51/00/4d475e03c99c0f5ee70a5d10cdea7c0dd630918bb35821a4b31b68508efa/pdfnup3-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ba413f5162aee05cda42fcb417337a79d65aa6637f01bf4169903732b7d10876",
        "md5": "aec44719df92e44d04d16176fed075c7",
        "sha256": "ee3ec5f6b184bb515bd93154d4d77b766ba5f1e1a9053da67168e6a1da49c226"
      },
      "downloads": -1,
      "filename": "pdfnup3-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "aec44719df92e44d04d16176fed075c7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 20736,
      "upload_time": "2020-12-17T10:08:32",
      "upload_time_iso_8601": "2020-12-17T10:08:32.092441Z",
      "url": "https://files.pythonhosted.org/packages/ba/41/3f5162aee05cda42fcb417337a79d65aa6637f01bf4169903732b7d10876/pdfnup3-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "51004d475e03c99c0f5ee70a5d10cdea7c0dd630918bb35821a4b31b68508efa",
        "md5": "96f2727447f4c41aad93dd2b5b21ec5b",
        "sha256": "39c423d1c6d4adc269fbc600c309da9bbd2e4aa28d36e4e041a4080247a67c4b"
      },
      "downloads": -1,
      "filename": "pdfnup3-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "96f2727447f4c41aad93dd2b5b21ec5b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 58910,
      "upload_time": "2020-12-17T10:08:33",
      "upload_time_iso_8601": "2020-12-17T10:08:33.770660Z",
      "url": "https://files.pythonhosted.org/packages/51/00/4d475e03c99c0f5ee70a5d10cdea7c0dd630918bb35821a4b31b68508efa/pdfnup3-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}