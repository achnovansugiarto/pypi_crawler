{
  "info": {
    "author": "Olga Bystrova",
    "author_email": "bystrovaolgavl@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# InstructionNER: A Multi-Task Instruction-Based Generative Framework for Few-shot NER\n\n[![tests](https://github.com/ovbystrova/InstructionNER/actions/workflows/tests.yml/badge.svg)](https://github.com/ovbystrova/InstructionNER/actions/workflows/tests.yml)\n[![codecov](https://codecov.io/gh/ovbystrova/InstructionNER/branch/main/graph/badge.svg?token=L2OOZKLPJL)](https://codecov.io/gh/ovbystrova/InstructionNER)\n[![python 3.8](https://img.shields.io/badge/python-3.8-blue.svg)](https://github.com/ovbystrova/InstructionNER#requirements)\n[![license](https://img.shields.io/github/license/ovbystrova/InstructionNER?color=blue)](https://github.com/ovbystrova/InstructionNER/blob/main/LICENSE)\n\nUnofficial implementation of [InstructionNER](https://arxiv.org/pdf/2203.03903v1.pdf).\n\n![Screenshot](resources/overall_intro.jpg)\n\n## Requirements\nPython >=3.8\n\n## Installation\n```shell\npip install instruction-ner\n```\n\n(Alternative via requirements)\n```shell\npip install -r requirements/requirements.in # for training purposes\npip install -r requirements/requirements_test.in # for tests\npip install -r requirements/requirements_dev.in # for inference only\n```\n\n## Data Preparation\nIn order to make a unified training interface, \nyou can convert your raw input data (supported dataset formats: **conll**, **spacy**, **mit**)\nwith the following script:\n```\ninstruction_ner-prepare-data \\\n--path_to_file 'data/conll2003/train.txt' \\\n--dataset_type 'conll2003' \\\n--output_folder 'data/conll2003' \\\n```\n\nThis script converts every dataset to a list of sentences.\nEvery sentence is like this:\n```\n{\n    \"context\": \"SOCCER - JAPAN GET LUCKY WIN , CHINA IN SURPRISE DEFEAT .\",\n    \"entity_values\": {\n            \"LOC\": [\n                \"JAPAN\"\n            ],\n            \"PER\": [\n                \"CHINA\"\n            ]\n        },\n    \"entity_spans\": [\n            {\n                \"start\": 9,\n                \"end\": 14,\n                \"label\": \"LOC\"\n            },\n            {\n                \"start\": 31,\n                \"end\": 36,\n                \"label\": \"PER\"\n            }\n        ]\n}\n```\n\n## Training\nScript for training T5 model:\n```\ninstruction_ner-train \\\n--path_to_instructions 'instructions.json' \\\n--path_to_options 'options.json' \\\n--log_dir 'runs/test_run' \\\n--eval_every_n_batches 200 \\\n--pred_every_n_batches 200 \\\n--path_to_model_config 'config.yaml' \\\n--path_to_model_save 'runs/model/' \\\n```\n\nArguments:\n- **--path_to_instructions** - file with instruction prompts\n- **--path_to_options** - file with mapping dataset to its entities\n- **--log_dir** - where to log tensorboard\n- **--eval_every_n_batches** - do evaluation every n batches\n- **--pred_every_n_batches** - write n sample prediction every n batches\n- **--path_to_model_config** - path to all necessary information for model\n- **--path_to_model_save** - where to save model\n\n## Evaluation\nScript for evaluation of the trained model:\n```\ninstruction_ner-evaluate \\\n--model_path_or_name 'olgaduchovny/t5-base-qa-ner-conll' \\\n--path_to_model_config 'config.yaml' \\\n--path_to_instructions 'instructions.json' \\\n--path_to_options 'options.json' \\\n```\n\nArguments:\n- **--model_path_or_name** - path to trained model or HF model name\n- **--path_to_model_config** - path to all necessary information for model\n- **--path_to_instructions** - file with instruction prompts\n- **--path_to_options** - file with mapping dataset to its entities\n\n## Evaluation Results\n\n\n\nDataset | Precision | Recall | F1-Score (weighted)\n--- | --- | --- | --- | \nCONLL-2003 | 0.862 | 0.843 | 0.852 \nMIT MOVIE | 0.792 | 0.845 | 0.809 | \nMIT REST | 0.766 | 0.771 | 0.768 | \n\n## Prediction Sample\n```\nSentence: The protest , which attracted several thousand supporters , coincided with the 18th anniversary of Spain 's constitution .\nInstruction: please extract entities and their types from the input sentence, all entity types are in options\nOptions: ORG, PER, LOC\n\nPrediction (raw text): Spain is a LOC.\n```\n## Inference \n\n### Models\n[t5-base-ner-conll](https://huggingface.co/olgaduchovny/t5-base-ner-conll)\n\n[t5-base-ner-mit-restaurant](https://huggingface.co/olgaduchovny/t5-base-ner-mit-restaurant)\n\n[t5-base-ner-mit-movie](https://huggingface.co/olgaduchovny/t5-base-ner-mit-movie)\n\n### Code\n```python\nfrom instruction_ner.model import Model\n\nmodel = Model(\n    model_path_or_name=\"olgaduchovny/t5-base-ner-conll\",\n    tokenizer_path_or_name=\"olgaduchovny/t5-base-ner-conll\"\n)\n\noptions = [\"LOC\", \"PER\", \"ORG\", \"MISC\"]\n\ninstruction = \"please extract entities and their types from the input sentence, \" \\\n              \"all entity types are in options\"\n\ntext = \"My name is Olga. I am 24 years old. I live in Moscow and work at Sber AI Center as a Senior NLP Data Scientist.\" \\\n        \"This is my reporitory to test generative NER problem with T5 model.\"\n\ngeneration_kwargs = {\n    \"num_beams\": 2,\n    \"max_length\": 128\n}\n\npred_text, pred_spans = model.predict(\n    text=text,\n    generation_kwargs=generation_kwargs,\n    instruction=instruction,\n    options=options\n)\n\n>>> ('Olga is a PER, Moscow is a LOC, Sber AI Center is an ORG, NLP is a MISC.',\n [(11, 15, 'PER'), (46, 52, 'LOC'), (65, 79, 'ORG'), (92, 95, 'MISC')])\n```\n\n\n\n# Citation\n```bibtex\n@article{wang2022instructionner,\n  title={Instructionner: A multi-task instruction-based generative framework for few-shot ner},\n  author={Wang, Liwen and Li, Rumei and Yan, Yang and Yan, Yuanmeng and Wang, Sirui and Wu, Wei and Xu, Weiran},\n  journal={arXiv preprint arXiv:2203.03903},\n  year={2022}\n}\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ovbystrova/InstructionNER",
    "keywords": "python,nlp,deep learning,ner,t5",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "instruction-ner",
    "package_url": "https://pypi.org/project/instruction-ner/",
    "platform": null,
    "project_url": "https://pypi.org/project/instruction-ner/",
    "project_urls": {
      "Homepage": "https://github.com/ovbystrova/InstructionNER"
    },
    "release_url": "https://pypi.org/project/instruction-ner/0.1.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Unofficial implementation of InstructionNER",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14938957,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e2129948043b296498dbcfd6b8cd4687d40549f086f30ebeeb8c0c0c4d7f146b",
          "md5": "5f225dfbc8c98e17a6868f3900774a1b",
          "sha256": "d1f402aff7cd78d9c8f37c87590da49b5c83eaa73c6f07718bc5c5c333b7050a"
        },
        "downloads": -1,
        "filename": "instruction_ner-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5f225dfbc8c98e17a6868f3900774a1b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12987,
        "upload_time": "2022-08-20T12:01:56",
        "upload_time_iso_8601": "2022-08-20T12:01:56.202690Z",
        "url": "https://files.pythonhosted.org/packages/e2/12/9948043b296498dbcfd6b8cd4687d40549f086f30ebeeb8c0c0c4d7f146b/instruction_ner-0.1.tar.gz",
        "yanked": true,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4079bc70fb35e1a91705c8398dec0d1b8136ebcd3bcc8dd9ce463aaeadc3f6cd",
          "md5": "69946caaf7fd18413342f5bf3cae78ea",
          "sha256": "b99e9db1c9c841cb5594ee5f91e9fece1e99e6f0c3cdc30fe59b0e2d4c003b90"
        },
        "downloads": -1,
        "filename": "instruction_ner-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "69946caaf7fd18413342f5bf3cae78ea",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12973,
        "upload_time": "2022-08-20T12:11:13",
        "upload_time_iso_8601": "2022-08-20T12:11:13.797218Z",
        "url": "https://files.pythonhosted.org/packages/40/79/bc70fb35e1a91705c8398dec0d1b8136ebcd3bcc8dd9ce463aaeadc3f6cd/instruction_ner-0.1.1.tar.gz",
        "yanked": true,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "af4e4a9c9c0768b3889e407cf840a77fefe35f35fa4099426970bba5bd853d18",
          "md5": "02d4321bf06a3d7e8261f7653186b972",
          "sha256": "ba6ca7704ba852849fb46e3ccc636508bea3540de8b32321b286cfb8c682c927"
        },
        "downloads": -1,
        "filename": "instruction_ner-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "02d4321bf06a3d7e8261f7653186b972",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23035,
        "upload_time": "2022-08-30T18:52:33",
        "upload_time_iso_8601": "2022-08-30T18:52:33.076338Z",
        "url": "https://files.pythonhosted.org/packages/af/4e/4a9c9c0768b3889e407cf840a77fefe35f35fa4099426970bba5bd853d18/instruction_ner-0.1.2.tar.gz",
        "yanked": true,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9da84f9212103d8a98bf53f9788c92dad79a434f975a36042185f3e13def81d9",
          "md5": "15c4ec11fb86c3c2b27ceac75a87e4c7",
          "sha256": "71d3f9d9cdb9a4758316acce5ffa67e3ba47d9f87c1c9347d0de534792a6ea24"
        },
        "downloads": -1,
        "filename": "instruction_ner-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "15c4ec11fb86c3c2b27ceac75a87e4c7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23082,
        "upload_time": "2022-08-30T18:58:02",
        "upload_time_iso_8601": "2022-08-30T18:58:02.751175Z",
        "url": "https://files.pythonhosted.org/packages/9d/a8/4f9212103d8a98bf53f9788c92dad79a434f975a36042185f3e13def81d9/instruction_ner-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9da84f9212103d8a98bf53f9788c92dad79a434f975a36042185f3e13def81d9",
        "md5": "15c4ec11fb86c3c2b27ceac75a87e4c7",
        "sha256": "71d3f9d9cdb9a4758316acce5ffa67e3ba47d9f87c1c9347d0de534792a6ea24"
      },
      "downloads": -1,
      "filename": "instruction_ner-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "15c4ec11fb86c3c2b27ceac75a87e4c7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 23082,
      "upload_time": "2022-08-30T18:58:02",
      "upload_time_iso_8601": "2022-08-30T18:58:02.751175Z",
      "url": "https://files.pythonhosted.org/packages/9d/a8/4f9212103d8a98bf53f9788c92dad79a434f975a36042185f3e13def81d9/instruction_ner-0.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}