{
  "info": {
    "author": "Xavier Canton",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3 :: Only"
    ],
    "description": "# img2table\n\n`img2table` is a simple, easy to use, table identification and extraction Python Library based on [OpenCV](https://opencv.org/) image \nprocessing that supports most common image file formats as well as PDF files.\n\nThanks to its design, it provides a practical and lighter alternative to Neural Networks based solutions, especially for usage on CPU.\n\n## Table of contents\n* [Installation](#installation)\n* [Features](#features)\n* [Supported file formats](#supported-file-formats)\n   * [Images](#images-formats)\n   * [PDF](#pdf-formats)\n* [Usage](#usage)\n   * [Documents](#documents)\n      * [Images](#images-doc)\n      * [PDF](#pdf-doc)\n   * [OCR](#ocr)\n      * [Tesseract](#tesseract)\n      * [PaddleOCR](#paddle)\n      * [Google Vision](#vision)\n      * [AWS Textract](#textract)\n      * [Azure Cognitive Services](#azure)\n   * [Table extraction](#table-extract)\n   * [Excel export](#xlsx)\n* [Examples](#examples)\n* [Caveats / FYI](#fyi)\n\n\n## Installation <a name=\"installation\"></a>\nThe library can be installed via pip.\n```python\n# Standard installation, supporting Tesseract\npip install img2table\n\n# For usage with Paddle OCR (Python <= 3.10 only)\npip install img2table[paddle]\n# For usage with Paddle OCR - GPU (CUDA 9 / CUDA 10) (Python <= 3.10 only)\npip install img2table[paddle-gpu]\n\n# For usage with Google Vision OCR\npip install img2table[gcp]\n\n# For usage with AWS Textract OCR\npip install img2table[aws]\n\n# For usage with Azure Cognitive Services OCR\npip install img2table[azure]\n```\n\n## Features <a name=\"features\"></a>\n\n* Table identification for images and PDF files, including bounding boxes at the table cell level\n* Handling of complex table structures such as merged cells\n* Handling of implicit rows - see [example](/examples/Implicit_rows.ipynb)\n* Table content extraction by providing support for OCR services / tools\n* Extracted tables are returned as a simple object, including a Pandas DataFrame representation\n* Export extracted tables to an Excel file, preserving their original structure\n\n## Supported file formats <a name=\"supported-file-formats\"></a>\n\n### Images <a name=\"images-formats\"></a>\n\nImages are loaded using the `opencv-python` library, supported formats are listed below.\n\n<blockquote>\n<ul>\n<li>Windows bitmaps - <em>.bmp, </em>.dib</li>\n<li>JPEG files - <em>.jpeg, </em>.jpg, *.jpe</li>\n<li>JPEG 2000 files - *.jp2</li>\n<li>Portable Network Graphics - *.png</li>\n<li>WebP - *.webp</li>\n<li>Portable image format - <em>.pbm, </em>.pgm, <em>.ppm </em>.pxm, *.pnm</li>\n<li>PFM files - *.pfm</li>\n<li>Sun rasters - <em>.sr, </em>.ras</li>\n<li>TIFF files - <em>.tiff, </em>.tif</li>\n<li>OpenEXR Image files - *.exr</li>\n<li>Radiance HDR - <em>.hdr, </em>.pic</li>\n<li>Raster and Vector geospatial data supported by GDAL<br>\n<cite><a href=\"https://docs.opencv.org/4.x/d4/da8/group__imgcodecs.html#ga288b8b3da0892bd651fce07b3bbd3a56\">OpenCV: Image file reading and writing</a></cite></li>\n</ul>\n</blockquote>\n\nMulti-page images are not supported.\n\n---\n\n### PDF <a name=\"pdf-formats\"></a>\n\nSearchable and non-searchable PDF files are supported.\n\n## Usage <a name=\"usage\"></a>\n\n### Documents <a name=\"documents\"></a>\n\n#### Images <a name=\"images-doc\"></a>\nImages are instantiated as follows :\n```python\nfrom img2table.document import Image\n\nimage = Image(src, \n              dpi=200,\n              detect_rotation=False)\n```\n\n> <h4>Parameters</h4>\n><dl>\n>    <dt>src : str, <code>pathlib.Path</code>, bytes or <code>io.BytesIO</code>, required</dt>\n>    <dd style=\"font-style: italic;\">Image source</dd>\n>    <dt>dpi : int, optional, default <code>200</code></dt>\n>    <dd style=\"font-style: italic;\">Estimated image dpi, used to adapt OpenCV algorithm parameters</dd>\n>    <dt>detect_rotation : bool, optional, default <code>False</code></dt>\n>    <dd style=\"font-style: italic;\">Detect and correct skew/rotation of the image</dd>\n></dl>\n\n<br>\n\n:warning::warning::warning: **Disclaimer** <br>\nThe implemented method to handle skewed/rotated images is approximate and might not work on every image. \nIt is preferable to pass well-oriented images as inputs.<br>\nMoreover, when setting the `detect_rotation` parameter to `True`, image coordinates and bounding boxes returned by other \nmethods might not correspond to the original image.\n\n#### PDF <a name=\"pdf-doc\"></a>\nPDF files are instantiated as follows :\n```python\nfrom img2table.document import PDF\n\npdf = PDF(src, dpi=200, pages=[0, 2])\n```\n\n> <h4>Parameters</h4>\n><dl>\n>    <dt>src : str, <code>pathlib.Path</code>, bytes or <code>io.BytesIO</code>, required</dt>\n>    <dd style=\"font-style: italic;\">PDF source</dd>\n>    <dt>dpi : int, optional, default <code>200</code></dt>\n>    <dd style=\"font-style: italic;\">Dpi used for conversion of PDF pages to images</dd>\n>    <dt>pages : list, optional, default <code>None</code></dt>\n>    <dd style=\"font-style: italic;\">List of PDF page indexes to be processed. If None, all pages are processed</dd>\n></dl>\n\n---\n\n### OCR <a name=\"ocr\"></a>\n\n`img2table` provides an interface for several OCR services and tools in order to parse table content.<br>\nIf possible (i.e for searchable PDF), PDF text will be extracted directly from the file and the OCR service/tool will not be called.\n\n#### Tesseract <a name=\"tesseract\"></a>\n\n```python\nfrom img2table.ocr import TesseractOCR\n\nocr = TesseractOCR(n_threads=1, \n                   lang=\"eng\", \n                   psm=11,\n                   tessdata_dir=\"...\")\n```\n\n> <h4>Parameters</h4>\n><dl>\n>    <dt>n_threads : int, optional, default <code>1</code></dt>\n>    <dd style=\"font-style: italic;\">Number of concurrent threads used to call Tesseract</dd>\n>    <dt>lang : str, optional, default <code>\"eng\"</code></dt>\n>    <dd style=\"font-style: italic;\">Lang parameter used in Tesseract for text extraction</dd>\n>    <dt>psm : int, optional, default <code>11</code></dt>\n>    <dd style=\"font-style: italic;\">PSM parameter used in Tesseract, run <code>tesseract --help-psm</code> for details</dd>\n>    <dt>tessdata_dir : str, optional, default <code>None</code></dt>\n>    <dd style=\"font-style: italic;\">Directory containing Tesseract traineddata files. If None, the <code>TESSDATA_PREFIX</code> env variable is used.</dd>\n></dl>\n\n\n*Usage of [Tesseract-OCR](https://github.com/tesseract-ocr/tesseract) requires prior installation. \nCheck [documentation](https://tesseract-ocr.github.io/tessdoc/) for instructions.*\n\n\n#### <a href=\"https://github.com/PaddlePaddle/PaddleOCR\">PaddleOCR</a> <a name=\"paddle\"></a>\n\n*Available for Python versions <= 3.10*\n\nPaddleOCR is an open-source OCR based on Deep Learning models.<br>\nAt first use, relevant languages models will be downloaded.\n\n```python\nfrom img2table.ocr import PaddleOCR\n\nocr = PaddleOCR(lang=\"en\")\n```\n\n> <h4>Parameters</h4>\n><dl>\n>    <dt>lang : str, optional, default <code>\"en\"</code></dt>\n>    <dd style=\"font-style: italic;\">Lang parameter used in Paddle for text extraction, check <a href=\"https://github.com/Mushroomcat9998/PaddleOCR/blob/main/doc/doc_en/multi_languages_en.md#5-support-languages-and-abbreviations\">documentation for available languages</a></dd>\n></dl>\n\n*Released in version 0.0.13*\n\n#### Google Vision <a name=\"vision\"></a>\n\nAuthentication to GCP can be done by setting the standard `GOOGLE_APPLICATION_CREDENTIALS` environment variable.<br>\nIf this variable is missing, an API key should be provided via the `api_key` parameter.\n\n```python\nfrom img2table.ocr import VisionOCR\n\nocr = VisionOCR(api_key=\"api_key\", timeout=15)\n```\n\n> <h4>Parameters</h4>\n><dl>\n>    <dt>api_key : str, optional, default <code>None</code></dt>\n>    <dd style=\"font-style: italic;\">Google Vision API key</dd>\n>    <dt>timeout : int, optional, default <code>15</code></dt>\n>    <dd style=\"font-style: italic;\">API requests timeout, in seconds</dd>\n></dl>\n\n#### AWS Textract <a name=\"textract\"></a>\n\nWhen using AWS Textract, the DetectDocumentText API is exclusively called.\n\nAuthentication to AWS can be done by passing credentials to the `TextractOCR` class.<br>\nIf credentials are not provided, authentication is done using environment variables or configuration files. \nCheck `boto3` [documentation](https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) for more details.\n\n```python\nfrom img2table.ocr import TextractOCR\n\nocr = TextractOCR(aws_access_key_id=\"***\",\n                  aws_secret_access_key=\"***\",\n                  aws_session_token=\"***\",\n                  region=\"eu-west-1\")\n```\n\n> <h4>Parameters</h4>\n><dl>\n>    <dt>aws_access_key_id : str, optional, default <code>None</code></dt>\n>    <dd style=\"font-style: italic;\">AWS access key id</dd>\n>    <dt>aws_secret_access_key : str, optional, default <code>None</code></dt>\n>    <dd style=\"font-style: italic;\">AWS secret access key</dd>\n>    <dt>aws_session_token : str, optional, default <code>None</code></dt>\n>    <dd style=\"font-style: italic;\">AWS temporary session token</dd>\n>    <dt>region : str, optional, default <code>None</code></dt>\n>    <dd style=\"font-style: italic;\">AWS server region</dd>\n></dl>\n\n\n#### Azure Cognitive Services <a name=\"azure\"></a>\n\n```python\nfrom img2table.ocr import AzureOCR\n\nocr = AzureOCR(endpoint=\"abc.azure.com\",\n               subscription_key=\"***\")\n```\n\n> <h4>Parameters</h4>\n><dl>\n>    <dt>endpoint : str, optional, default <code>None</code></dt>\n>    <dd style=\"font-style: italic;\">Azure Cognitive Services endpoint. If None, inferred from the <code>COMPUTER_VISION_ENDPOINT</code> environment variable.</dd>\n>    <dt>subscription_key : str, optional, default <code>None</code></dt>\n>    <dd style=\"font-style: italic;\">Azure Cognitive Services subscription key. If None, inferred from the <code>COMPUTER_VISION_SUBSCRIPTION_KEY</code> environment variable.</dd>\n></dl>\n\n\n---\n\n### Table extraction <a name=\"table-extract\"></a>\n\nMultiple tables can be extracted at once from a PDF page/ an image using the `extract_tables` method of a document.\n\n```python\nfrom img2table.ocr import TesseractOCR\nfrom img2table.document import Image\n\n# Instantiation of OCR\nocr = TesseractOCR(n_threads=1, lang=\"eng\")\n\n# Instantiation of document, either an image or a PDF\ndoc = Image(src, dpi=200)\n\n# Table extraction\nextracted_tables = doc.extract_tables(ocr=ocr,\n                                      implicit_rows=True,\n                                      borderless_tables=False,\n                                      min_confidence=50)\n```\n> <h4>Parameters</h4>\n><dl>\n>    <dt>ocr : OCRInstance, optional, default <code>None</code></dt>\n>    <dd style=\"font-style: italic;\">OCR instance used to parse document text. If None, cells content will not be extracted</dd>\n>    <dt>implicit_rows : bool, optional, default <code>True</code></dt>\n>    <dd style=\"font-style: italic;\">Boolean indicating if implicit rows should be identified - check related <a href=\"/examples/Implicit_rows.ipynb\" target=\"_self\">example</a></dd>\n>    <dt>borderless_tables : bool, optional, default <code>False</code></dt>\n>    <dd style=\"font-style: italic;\">Boolean indicating if <a href=\"/examples/borderless.ipynb\" target=\"_self\">borderless tables</a> are extracted. It requires to provide an OCR to the method in order to be performed - <b>feature in alpha version</b></dd>\n>    <dt>min_confidence : int, optional, default <code>50</code></dt>\n>    <dd style=\"font-style: italic;\">Minimum confidence level from OCR in order to process text, from 0 (worst) to 99 (best)</dd>\n></dl>\n\n*Borderless table extraction released in version 0.0.14*\n\n**NB**: the implemented method for extraction of borderless tables heavily relies on OCR quality. In order to achieve \ndecent results, it is recommended to use PaddleOCR or one of the supported commercial solutions.\n\n#### Method return\n\nThe [`ExtractedTable`](/src/img2table/tables/objects/extraction.py#L35) class is used to model extracted tables from documents.\n\n> <h4>Attributes</h4>\n><dl>\n>    <dt>bbox : <code><a href=\"/src/img2table/tables/objects/extraction.py#L12\" target=\"_self\">BBox</a></code></dt>\n>    <dd style=\"font-style: italic;\">Table bounding box</dd>\n>    <dt>title : str</dt>\n>    <dd style=\"font-style: italic;\">Extracted title of the table</dd>\n>    <dt>content : <code>OrderedDict</code></dt>\n>    <dd style=\"font-style: italic;\">Dict with with row indexes as keys and list of <code><a href=\"/src/img2table/tables/objects/extraction.py#L20\" target=\"_self\">TableCell</a></code> objects as values</dd>\n>    <dt>df : <code>pd.DataFrame</code></dt>\n>    <dd style=\"font-style: italic;\">Pandas DataFrame representation of the table</dd>\n></dl>\n\n<h5 style=\"color:grey\">Images</h5>\n\n`extract_tables` method from the `Image` class returns a list of `ExtractedTable` objects. \n```Python\noutput = [ExtractedTable(...), ExtractedTable(...), ...]\n```\n\n<h5 style=\"color:grey\">PDF</h5>\n\n`extract_tables` method from the `PDF` class returns an `OrderedDict` object with page indexes as keys and lists of `ExtractedTable` objects. \n```Python\noutput = {\n    0: [ExtractedTable(...), ...],\n    1: [],\n    ...\n    last_page: [ExtractedTable(...), ...]\n}\n```\n\n\n### Excel export <a name=\"xlsx\"></a>\n\nTables extracted from a document can be exported to a xlsx file. The resulting file is composed of one worksheet per extracted table.<br>\nMethod arguments are mostly common with the `extract_tables` method.\n\n```python\nfrom img2table.ocr import TesseractOCR\nfrom img2table.document import Image\n\n# Instantiation of OCR\nocr = TesseractOCR(n_threads=1, lang=\"eng\")\n\n# Instantiation of document, either an image or a PDF\ndoc = Image(src, dpi=200)\n\n# Extraction of tables and creation of an xlsx file containing tables\ndoc.to_xlsx(dest=dest,\n            ocr=ocr,\n            implicit_rows=True,\n            borderless_tables=False,\n            min_confidence=50)\n```\n> <h4>Parameters</h4>\n><dl>\n>    <dt>dest : str, <code>pathlib.Path</code> or <code>io.BytesIO</code>, required</dt>\n>    <dd style=\"font-style: italic;\">Destination for xlsx file</dd>\n>    <dt>ocr : OCRInstance, optional, default <code>None</code></dt>\n>    <dd style=\"font-style: italic;\">OCR instance used to parse document text. If None, cells content will not be extracted</dd>\n>    <dt>implicit_rows : bool, optional, default <code>True</code></dt>\n>    <dd style=\"font-style: italic;\">Boolean indicating if implicit rows should be identified - check related <a href=\"/examples/Implicit_rows.ipynb\" target=\"_self\">example</a></dd>\n>    <dt>borderless_tables : bool, optional, default <code>False</code></dt>\n>    <dd style=\"font-style: italic;\">Boolean indicating if <a href=\"/examples/borderless.ipynb\" target=\"_self\">borderless tables</a> are extracted. It requires to provide an OCR to the method in order to be performed - <b>feature in alpha version</b></dd>\n>    <dt>min_confidence : int, optional, default <code>50</code></dt>\n>    <dd style=\"font-style: italic;\">Minimum confidence level from OCR in order to process text, from 0 (worst) to 99 (best)</dd>\n></dl>\n> <h4>Returns</h4>\n> If a <code>io.BytesIO</code> buffer is passed as dest arg, it is returned containing xlsx data\n\n\n\n## Examples <a name=\"examples\"></a>\n\nSeveral Jupyter notebooks with examples are available :\n<ul>\n<li>\n<a href=\"/examples/Basic_usage.ipynb\" target=\"_self\">Basic usage</a>: generic library usage, including examples with images, PDF and OCRs\n</li>\n<li>\n<a href=\"/examples/borderless.ipynb\" target=\"_self\">Borderless tables</a>: specific examples dedicated to the extraction of borderless tables\n</li>\n<li>\n<a href=\"/examples/Implicit_rows.ipynb\" target=\"_self\">Implicit rows</a>: illustrated effect \nof the parameter <code>implicit_rows</code> of the <code>extract_tables</code> method\n</li>\n</ul>\n\n## Caveats / FYI <a name=\"fyi\"></a>\n\n<ul>\n<li>\nFor table extraction, results are highly dependent on OCR quality. By design, tables where no OCR data \ncan be found are not returned.\n</li>\n<li>\nThe library is tailored for usage on documents with white/light background. \nEffectiveness can not be guaranteed on other type of documents. \n</li>\n<li>\nBorderless tables extraction is still in alpha stage and might be inconsistent on complex cases.\nAs an example, tables with multi-lines cells can cause troubles.<br>\nImprovements to the algorithm will be released in future versions.\n</li>\n</ul>\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/xavctn/img2table",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "img2table",
    "package_url": "https://pypi.org/project/img2table/",
    "platform": null,
    "project_url": "https://pypi.org/project/img2table/",
    "project_urls": {
      "Homepage": "https://github.com/xavctn/img2table"
    },
    "release_url": "https://pypi.org/project/img2table/0.0.20/",
    "requires_dist": [
      "polars[pandas]",
      "pyarrow (>=7)",
      "numpy",
      "pymupdf (>=1.19.1)",
      "opencv-python",
      "bs4",
      "xlsxwriter (>=3.0.6)",
      "boto3 ; extra == 'aws'",
      "azure-cognitiveservices-vision-computervision ; extra == 'azure'",
      "google-cloud-vision ; extra == 'gcp'",
      "paddlepaddle ; ((python_version<'3.11')) and extra == 'paddle'",
      "paddleocr (>=2.0.6) ; ((python_version<'3.11')) and extra == 'paddle'",
      "paddlepaddle-gpu ; ((python_version<'3.11')) and extra == 'paddle_gpu'",
      "paddleocr (>=2.0.6) ; ((python_version<'3.11')) and extra == 'paddle_gpu'"
    ],
    "requires_python": ">=3.7, <3.12",
    "summary": "img2table is a table identification and extraction Python Library for PDF and images, based on OpenCV image processing",
    "version": "0.0.20",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17483759,
  "releases": {
    "0.0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ed8bada0b7f04a1a2efad26e5dc3b3ca15bc247f35b5c51c274f7424d5f54b4b",
          "md5": "10b02cc1e1d862b0ee3deb152727914c",
          "sha256": "72c6e50409ff3b05b9d35b186a6c3c76a0d41eab5491a4729e68296e275cc284"
        },
        "downloads": -1,
        "filename": "img2table-0.0.11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "10b02cc1e1d862b0ee3deb152727914c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 43620,
        "upload_time": "2023-02-10T11:31:38",
        "upload_time_iso_8601": "2023-02-10T11:31:38.619244Z",
        "url": "https://files.pythonhosted.org/packages/ed/8b/ada0b7f04a1a2efad26e5dc3b3ca15bc247f35b5c51c274f7424d5f54b4b/img2table-0.0.11-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "20ea771f3b5e5ddc7b77493ef2ef1fac28d2c53bb3b1b2b61d189c95094f8875",
          "md5": "cce123145d882843778395ffc2db07e3",
          "sha256": "fd3165b58853e9d2e86642752f3adae9ecb3951ad87362cee74564cdfe979f37"
        },
        "downloads": -1,
        "filename": "img2table-0.0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "cce123145d882843778395ffc2db07e3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 999088,
        "upload_time": "2023-02-10T11:31:39",
        "upload_time_iso_8601": "2023-02-10T11:31:39.879088Z",
        "url": "https://files.pythonhosted.org/packages/20/ea/771f3b5e5ddc7b77493ef2ef1fac28d2c53bb3b1b2b61d189c95094f8875/img2table-0.0.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4609d711ab9579b4102b0f5d90246fc8bc2f5792b932189d4762bdf3e6236ad2",
          "md5": "f2329d22297f3592bf67b8afb6877b62",
          "sha256": "281b3f8becabbe73e26326f0b34be6e9ce9b797d59dfabfe450c4946185f60d8"
        },
        "downloads": -1,
        "filename": "img2table-0.0.12-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f2329d22297f3592bf67b8afb6877b62",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 43654,
        "upload_time": "2023-02-10T19:15:25",
        "upload_time_iso_8601": "2023-02-10T19:15:25.108600Z",
        "url": "https://files.pythonhosted.org/packages/46/09/d711ab9579b4102b0f5d90246fc8bc2f5792b932189d4762bdf3e6236ad2/img2table-0.0.12-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2ac24defebb5918c7f75a0ee5dccf7b6011a1caf5795d0e16d3502a6303a199f",
          "md5": "4e3f69f61e12e8a568981c1691cc06cf",
          "sha256": "9991ed4eb94ffbe1947bcbfd36e11e5ecd90ab19ca924f12eee15f2504530ca0"
        },
        "downloads": -1,
        "filename": "img2table-0.0.12.tar.gz",
        "has_sig": false,
        "md5_digest": "4e3f69f61e12e8a568981c1691cc06cf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 1000353,
        "upload_time": "2023-02-10T19:15:26",
        "upload_time_iso_8601": "2023-02-10T19:15:26.963045Z",
        "url": "https://files.pythonhosted.org/packages/2a/c2/4defebb5918c7f75a0ee5dccf7b6011a1caf5795d0e16d3502a6303a199f/img2table-0.0.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c0e146b2b328f92e9c5e3179213628931d8d71ac06b9e214a30f9ca1f495f956",
          "md5": "9506f5655d2ccd1cb691f240911b9fb3",
          "sha256": "b51b3430ddbf8bcd9c5a7b44916640d7ad9528537d0034b3bb6c0a0f36664343"
        },
        "downloads": -1,
        "filename": "img2table-0.0.13-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9506f5655d2ccd1cb691f240911b9fb3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <=3.10",
        "size": 45156,
        "upload_time": "2023-02-13T23:00:59",
        "upload_time_iso_8601": "2023-02-13T23:00:59.331653Z",
        "url": "https://files.pythonhosted.org/packages/c0/e1/46b2b328f92e9c5e3179213628931d8d71ac06b9e214a30f9ca1f495f956/img2table-0.0.13-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3c4a8d41383f574aaa6f9d6a89833dee30be9bdb1c7d87126c3cd21c04b04cef",
          "md5": "10f86e6e5145da47500afed3c74eff9e",
          "sha256": "4c5179d6ad18ec3f3976368ebda0c3000e8fde78e8f1b6a87315470e179c47ac"
        },
        "downloads": -1,
        "filename": "img2table-0.0.13.tar.gz",
        "has_sig": false,
        "md5_digest": "10f86e6e5145da47500afed3c74eff9e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <=3.10",
        "size": 1003518,
        "upload_time": "2023-02-13T23:01:01",
        "upload_time_iso_8601": "2023-02-13T23:01:01.226038Z",
        "url": "https://files.pythonhosted.org/packages/3c/4a/8d41383f574aaa6f9d6a89833dee30be9bdb1c7d87126c3cd21c04b04cef/img2table-0.0.13.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.14": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6aea035fca7cd7765f8bc27207b9e3d2ea10ed2ee6ec3bef31a00c32bbb77475",
          "md5": "b04c12723fb6a1aa178b5ef2dba342b4",
          "sha256": "488f8c1663ca8a2473b937d654fc681460c0a6f7a2d444e2e4a5f419e95e6b90"
        },
        "downloads": -1,
        "filename": "img2table-0.0.14-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b04c12723fb6a1aa178b5ef2dba342b4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <=3.10",
        "size": 57090,
        "upload_time": "2023-02-15T22:00:41",
        "upload_time_iso_8601": "2023-02-15T22:00:41.440382Z",
        "url": "https://files.pythonhosted.org/packages/6a/ea/035fca7cd7765f8bc27207b9e3d2ea10ed2ee6ec3bef31a00c32bbb77475/img2table-0.0.14-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4b023f8a87732bf7a22edeb25e4cc34acdd63f3526d659db220d0143f7fd8d42",
          "md5": "4fcc6ceac972f8635cfc2c8cb14e7bfe",
          "sha256": "ae8e1e1b8ce10ddc2471af93ad1f02eeb2a95b20f1a0e08f8895a6cd4d346fa3"
        },
        "downloads": -1,
        "filename": "img2table-0.0.14.tar.gz",
        "has_sig": false,
        "md5_digest": "4fcc6ceac972f8635cfc2c8cb14e7bfe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <=3.10",
        "size": 1967688,
        "upload_time": "2023-02-15T22:00:42",
        "upload_time_iso_8601": "2023-02-15T22:00:42.966347Z",
        "url": "https://files.pythonhosted.org/packages/4b/02/3f8a87732bf7a22edeb25e4cc34acdd63f3526d659db220d0143f7fd8d42/img2table-0.0.14.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.15": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5bebf6016261f7e8c6e4e2f60347a1c2e449120276313c4cfacc52a08bb096ba",
          "md5": "cf4459f87d8aec4825563127dd9ac23a",
          "sha256": "16491c08bd1801121fa2992b47741248e68bcff07ef2e1caadb7126736814690"
        },
        "downloads": -1,
        "filename": "img2table-0.0.15-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cf4459f87d8aec4825563127dd9ac23a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <=3.10",
        "size": 61944,
        "upload_time": "2023-02-22T23:16:03",
        "upload_time_iso_8601": "2023-02-22T23:16:03.757980Z",
        "url": "https://files.pythonhosted.org/packages/5b/eb/f6016261f7e8c6e4e2f60347a1c2e449120276313c4cfacc52a08bb096ba/img2table-0.0.15-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0c11f4d250b83eed2259702ba354703f81a08a931b41ab230810d486fde1ea46",
          "md5": "efdc2025823ec27275f8631ff6a8cbf0",
          "sha256": "47f14012c90326ddf36e6345697c47cb17bcdb525e65bfb5afcd7e101ed1ac27"
        },
        "downloads": -1,
        "filename": "img2table-0.0.15.tar.gz",
        "has_sig": false,
        "md5_digest": "efdc2025823ec27275f8631ff6a8cbf0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <=3.10",
        "size": 1673199,
        "upload_time": "2023-02-22T23:16:06",
        "upload_time_iso_8601": "2023-02-22T23:16:06.079552Z",
        "url": "https://files.pythonhosted.org/packages/0c/11/f4d250b83eed2259702ba354703f81a08a931b41ab230810d486fde1ea46/img2table-0.0.15.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.16": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4a8586d51a047d143c816c2d4e3a1839b464ae48b3bc2ad28e7f973ef0422d5f",
          "md5": "a2968270167a13368a724e1ea9c366da",
          "sha256": "2118be120008fc4a4670a05f740b19a06dbe5fdcdaf332ad5b76ebf50022e17b"
        },
        "downloads": -1,
        "filename": "img2table-0.0.16-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a2968270167a13368a724e1ea9c366da",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <=3.10",
        "size": 62068,
        "upload_time": "2023-02-26T17:01:35",
        "upload_time_iso_8601": "2023-02-26T17:01:35.443685Z",
        "url": "https://files.pythonhosted.org/packages/4a/85/86d51a047d143c816c2d4e3a1839b464ae48b3bc2ad28e7f973ef0422d5f/img2table-0.0.16-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9e6dd58e799b5bde819f77a6e5395c238680eba7360efb3bfc6e88842a7e9f5a",
          "md5": "f536e08b193052f059909e8b166c3e25",
          "sha256": "87b57f851255f2b06d1df3b7293496da0c85428b36be131c5a8d0899404c2cc7"
        },
        "downloads": -1,
        "filename": "img2table-0.0.16.tar.gz",
        "has_sig": false,
        "md5_digest": "f536e08b193052f059909e8b166c3e25",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <=3.10",
        "size": 1673319,
        "upload_time": "2023-02-26T17:01:37",
        "upload_time_iso_8601": "2023-02-26T17:01:37.134014Z",
        "url": "https://files.pythonhosted.org/packages/9e/6d/d58e799b5bde819f77a6e5395c238680eba7360efb3bfc6e88842a7e9f5a/img2table-0.0.16.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.17": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b5b8d90752a1a411acaa82eb5affe963a39d5ad4ecd29ebbd01048e2eea07856",
          "md5": "b0c80b66b40729fd6fadc588449b6ff3",
          "sha256": "c47cf0430c1ab5bee131852c85cc6f4013237a31dac93367b776ceb52b294073"
        },
        "downloads": -1,
        "filename": "img2table-0.0.17-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b0c80b66b40729fd6fadc588449b6ff3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <3.12",
        "size": 62130,
        "upload_time": "2023-02-27T22:06:54",
        "upload_time_iso_8601": "2023-02-27T22:06:54.796738Z",
        "url": "https://files.pythonhosted.org/packages/b5/b8/d90752a1a411acaa82eb5affe963a39d5ad4ecd29ebbd01048e2eea07856/img2table-0.0.17-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f6f5b32c366b9fbac1f3f5d257500499072d54ce080cdac0b7a7199974f4951",
          "md5": "beb56d55179e82b0910bff77f671736d",
          "sha256": "50c628b10fc56660dab0aedede1278467100d07cfd9a62c63bd4ebc0520ddc35"
        },
        "downloads": -1,
        "filename": "img2table-0.0.17.tar.gz",
        "has_sig": false,
        "md5_digest": "beb56d55179e82b0910bff77f671736d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <3.12",
        "size": 1673197,
        "upload_time": "2023-02-27T22:06:56",
        "upload_time_iso_8601": "2023-02-27T22:06:56.620953Z",
        "url": "https://files.pythonhosted.org/packages/0f/6f/5b32c366b9fbac1f3f5d257500499072d54ce080cdac0b7a7199974f4951/img2table-0.0.17.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.18": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b7af715ea10a4423544894a63d803ef94e5e794c4cceddd3ec6fc098db223ccb",
          "md5": "f69dd5602fe4c78c222bb5d385bb91b2",
          "sha256": "dfd3c331e3cdc5adbbbb202fc32ab4811c4241974e915861e87297029aa6774e"
        },
        "downloads": -1,
        "filename": "img2table-0.0.18-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f69dd5602fe4c78c222bb5d385bb91b2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <3.12",
        "size": 62137,
        "upload_time": "2023-03-06T20:42:25",
        "upload_time_iso_8601": "2023-03-06T20:42:25.420312Z",
        "url": "https://files.pythonhosted.org/packages/b7/af/715ea10a4423544894a63d803ef94e5e794c4cceddd3ec6fc098db223ccb/img2table-0.0.18-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "52cb39ad64b68f245b50bc2be0995e0605c70d7a4cf6d922317a9ba9b6e8f689",
          "md5": "6f9463885f418d71130cd64fda3a615b",
          "sha256": "6d8c0a3872f3e471fda6b3fe5ce8ad5d5454b5f5365facf3a7dd07a5916faae3"
        },
        "downloads": -1,
        "filename": "img2table-0.0.18.tar.gz",
        "has_sig": false,
        "md5_digest": "6f9463885f418d71130cd64fda3a615b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <3.12",
        "size": 1673294,
        "upload_time": "2023-03-06T20:42:27",
        "upload_time_iso_8601": "2023-03-06T20:42:27.195453Z",
        "url": "https://files.pythonhosted.org/packages/52/cb/39ad64b68f245b50bc2be0995e0605c70d7a4cf6d922317a9ba9b6e8f689/img2table-0.0.18.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.19": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "533ce4500df9b1e099976953934c62095e6b067cd6bc2ff774d3eb6d42cfbff8",
          "md5": "1ed53540617ba2a47d57057f430735d3",
          "sha256": "fc4d3f11d124f411f0685bee8992445566250cf722d9dab6e2ca9b11c98d0c39"
        },
        "downloads": -1,
        "filename": "img2table-0.0.19-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1ed53540617ba2a47d57057f430735d3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <3.12",
        "size": 62450,
        "upload_time": "2023-03-12T18:18:30",
        "upload_time_iso_8601": "2023-03-12T18:18:30.988240Z",
        "url": "https://files.pythonhosted.org/packages/53/3c/e4500df9b1e099976953934c62095e6b067cd6bc2ff774d3eb6d42cfbff8/img2table-0.0.19-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fc2291333f59f2102ffab2c6ee1744f059e7d65dec8fe5b545c2654f2af51b8f",
          "md5": "dd9b904d90b1f3d94abedbba4413ce67",
          "sha256": "3376bb0b02a7c4a8e35aacff417c48e3117626cb9bd2e39a5b4010a5111eae35"
        },
        "downloads": -1,
        "filename": "img2table-0.0.19.tar.gz",
        "has_sig": false,
        "md5_digest": "dd9b904d90b1f3d94abedbba4413ce67",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <3.12",
        "size": 1672071,
        "upload_time": "2023-03-12T18:18:32",
        "upload_time_iso_8601": "2023-03-12T18:18:32.758150Z",
        "url": "https://files.pythonhosted.org/packages/fc/22/91333f59f2102ffab2c6ee1744f059e7d65dec8fe5b545c2654f2af51b8f/img2table-0.0.19.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.20": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5794299f1dbfdfd89575086a320cdc5b132e1b9c6a5c0b6de6897f6f9a2e693a",
          "md5": "800056855c6343ae31253cd388d6f393",
          "sha256": "7f24774f6aac005cd13746265b02094f35afef607fb5c686dbe9a904eaada4a6"
        },
        "downloads": -1,
        "filename": "img2table-0.0.20-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "800056855c6343ae31253cd388d6f393",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <3.12",
        "size": 62552,
        "upload_time": "2023-03-28T21:36:09",
        "upload_time_iso_8601": "2023-03-28T21:36:09.799636Z",
        "url": "https://files.pythonhosted.org/packages/57/94/299f1dbfdfd89575086a320cdc5b132e1b9c6a5c0b6de6897f6f9a2e693a/img2table-0.0.20-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e9f005db0942c68dd06efa73d036b514ed9193c8b55bd22354c66c093568f06a",
          "md5": "2071c222c902ab935e4212eaf2595c86",
          "sha256": "b3ceae4ced8b8fd93c3f0a6880b4d9bef66cadb86a9bd56e617a6ee08e17912a"
        },
        "downloads": -1,
        "filename": "img2table-0.0.20.tar.gz",
        "has_sig": false,
        "md5_digest": "2071c222c902ab935e4212eaf2595c86",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <3.12",
        "size": 1625765,
        "upload_time": "2023-03-28T21:36:11",
        "upload_time_iso_8601": "2023-03-28T21:36:11.967153Z",
        "url": "https://files.pythonhosted.org/packages/e9/f0/05db0942c68dd06efa73d036b514ed9193c8b55bd22354c66c093568f06a/img2table-0.0.20.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5794299f1dbfdfd89575086a320cdc5b132e1b9c6a5c0b6de6897f6f9a2e693a",
        "md5": "800056855c6343ae31253cd388d6f393",
        "sha256": "7f24774f6aac005cd13746265b02094f35afef607fb5c686dbe9a904eaada4a6"
      },
      "downloads": -1,
      "filename": "img2table-0.0.20-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "800056855c6343ae31253cd388d6f393",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7, <3.12",
      "size": 62552,
      "upload_time": "2023-03-28T21:36:09",
      "upload_time_iso_8601": "2023-03-28T21:36:09.799636Z",
      "url": "https://files.pythonhosted.org/packages/57/94/299f1dbfdfd89575086a320cdc5b132e1b9c6a5c0b6de6897f6f9a2e693a/img2table-0.0.20-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e9f005db0942c68dd06efa73d036b514ed9193c8b55bd22354c66c093568f06a",
        "md5": "2071c222c902ab935e4212eaf2595c86",
        "sha256": "b3ceae4ced8b8fd93c3f0a6880b4d9bef66cadb86a9bd56e617a6ee08e17912a"
      },
      "downloads": -1,
      "filename": "img2table-0.0.20.tar.gz",
      "has_sig": false,
      "md5_digest": "2071c222c902ab935e4212eaf2595c86",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7, <3.12",
      "size": 1625765,
      "upload_time": "2023-03-28T21:36:11",
      "upload_time_iso_8601": "2023-03-28T21:36:11.967153Z",
      "url": "https://files.pythonhosted.org/packages/e9/f0/05db0942c68dd06efa73d036b514ed9193c8b55bd22354c66c093568f06a/img2table-0.0.20.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}