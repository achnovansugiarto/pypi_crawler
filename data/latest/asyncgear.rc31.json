{
  "info": {
    "author": "Antas",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# AsyncGear\n\nThink about such a scene, some object has different states or periods, well we call periods. Among these periods, there\ncan be only one that could be the present period. For example, a human can only be in one period among baby, youth, adult,\nold man and dead.\n\nSo now not only can you get the exact period, but also await inside the period, await outside the period, await the\ninstant when the object enters the period and await the instant when the object exits the period.\n\nRemember to distribute different periods for one object.\n\n## uvloop is highly recommended!\n\n\n### tip\nFor convenience, remember that the python codes below are extracted from this wrapper:\n\n```python\nimport asyncio\n# As recommend, use uvloop\nimport uvloop\n\nasyncio.set_event_loop_policy(uvloop.EventLoopPolicy())\nfrom AsyncGear import Gear,DataShine,run_when_enter, run_when_exit, run_when_inside, run_when_outside, when_enter, when_exit, when_inside, when_outside\n\n\nasync def main():\n    # This is the place where these codes are extracted away.\n    pass\n\n\nloop = asyncio.get_event_loop()\nloop.create_task(main())\nloop.run_forever()\n# clear\nto_cancel = asyncio.all_tasks(loop)\nfor task in to_cancel:\n    task.cancel()\nloop.run_until_complete(\n    asyncio.gather(*to_cancel, return_exceptions=True)\n)\nloop.run_until_complete(loop.shutdown_asyncgens())\n```\n\nSo if you want to run these codes, you must wrap them back respectively.\n\nOr if you are familiar with asyncio REPL(type 'python -m asyncio' in terminal for python3.8 and above), you can migrate\nthese codes to run in a terminal.\n\n---\n\n### [Install](#Install) · [Usage](#Usage) ·\n\n---\n\n## Install\n\n[AsyncGear in **PyPI**](https://pypi.org/project/AsyncGear/)\n\n```shell\npip install AsyncGear\n```\n\n---\n\n## Usage\n\nThis module provides methods as follows:\n\n```python\nfrom AsyncGear import Gear, run_when_enter, run_when_exit, run_when_inside, run_when_outside, when_enter, when_exit, when_inside, when_outside\n```\n\n\n### Gear\n\nGear is the core usage, which provides an interface for an object to manipulate the bounded gear.\n\n```python\n# to be simple, the target object is a string\nGear('Tom').add_periods('sleep', 'awaken')  # the first added period would be the default.\nGear('Tom').add_periods('sleepwalking')  # add_periods could be dynamic.\n# show the present period.\nprint(Gear('Tom').get_present_period())\n# show all possible periods\nprint(Gear('Tom').get_period_names())\n\n# beforehand wait the target time of the target period\nasync def wait_enter(gear: Gear, period):\n    await asyncio.create_task(gear.wait_enter_period(period))\n    print(f'enter {period}')\n\nasyncio.create_task(wait_enter(Gear('Tom'), 'awaken'))\n\nasync def wait_exit(gear: Gear, period):\n    await asyncio.create_task(gear.wait_exit_period(period))\n    print(f'exit {period}')\n\nasyncio.create_task(wait_exit(Gear('Tom'), 'sleep'))\n\nasync def wait_outside(gear: Gear, period):\n    while True:\n        await asyncio.create_task(gear.wait_outside_period(period))\n        await asyncio.sleep(0.3)\n        print(f'outside {period}')\n\nasyncio.create_task(wait_outside(Gear('Tom'), 'sleep'))\n\nasync def wait_inside(gear: Gear, period):\n    while True:\n        await asyncio.create_task(gear.wait_inside_period(period))\n        await asyncio.sleep(0.3)\n        print(f'inside {period}')\n\nasyncio.create_task(wait_inside(Gear('Tom'), 'awaken'))\nawait asyncio.create_task(Gear('Tom').set_period('awaken'))\n# stay in awaken for 1 seconds\nawait asyncio.sleep(1)\nloop.stop()\n```\nResult\n```shell\n2021-01-05 17:15:23.600 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set 'Tom' to period sleep.\n2021-01-05 17:15:23.601 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set 'Tom' to period awaken.\n2021-01-05 17:15:23.601 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set 'Tom' to period awaken.\n2021-01-05 17:15:23.601 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set 'Tom' to period awaken.\nsleep\ndict_keys(['sleep', 'awaken', 'sleepwalking'])\nexit sleep\nenter awaken\noutside sleep\ninside awaken\noutside sleep\ninside awaken\noutside sleep\ninside awaken\n```\n\n### Gear(obj).wait_change_period\n\nWait for the event that any period is set.\n\n### Gear(obj).lock\nYou could lock the gear period. If locked, the gear could no more be changed the period, or raise PermissionError. \nOf course, you could wait the gear unlocked.\n```python\nimport traceback\n\nGear('Tom').add_periods('sleep', 'awaken')\nGear('Tom').lock()\ntry:\n    await asyncio.create_task(Gear('Tom').set_period('awaken'))\nexcept:\n    print(traceback.format_exc())\n\nasync def wait2set_awaken():\n    await Gear('Tom').wait_unlock()\n    await asyncio.create_task(Gear('Tom').set_period('awaken'))\n    loop.stop()\n\nasyncio.create_task(wait2set_awaken())\n\nawait asyncio.sleep(1)\nGear('Tom').unlock()\n```\n```shell\n2021-04-13 12:05:06.650 | DEBUG    | AsyncGear.AsyncPeriod:filled_slots_num:43 - set 'Tom' to period sleep.\nTraceback (most recent call last):\n  File \"<console>\", line 2, in <module>\n  ...\n    raise PermissionError('The gear is locked.')\nPermissionError: The gear is locked.\n2021-04-13 12:05:07.652 | DEBUG    | AsyncGear.AsyncPeriod:filled_slots_num:43 - set 'Tom' to period awaken.\n```\n### Gear(obj).prev_period\nGet the previously set period name, or None.\n```python\nGear('Tom').add_periods('sleep', 'awaken')  # the first added period would be the default.\nprint(Gear('Tom').prev_period)\nawait asyncio.create_task(Gear('Tom').set_period('awaken'))\nprint(Gear('Tom').prev_period)\n\nloop.stop()\n```\nResult:\n```shell\n2021-04-17 18:13:54.257 | DEBUG    | AsyncGear.AsyncPeriod:filled_slots_num:45 - set 'Tom' to period sleep.\n2021-04-17 18:13:54.258 | DEBUG    | AsyncGear.AsyncPeriod:filled_slots_num:45 - set 'Tom' to period awaken.\nNone\nsleep\n```\n\n### Gear(obj).current_set_datetime\nGet the UTC datetime when the present period is set.\n\n```python\nGear('Tom').add_periods('sleep', 'awaken')  # the first added period would be the default.\nprint(Gear('Tom').current_set_datetime())\nawait asyncio.sleep(1)\nawait asyncio.create_task(Gear('Tom').set_period('awaken'))\nprint(Gear('Tom').current_set_datetime())\n\nloop.stop()\n```\nResult\n```shell\n2021-04-17 18:23:02.738 | DEBUG    | AsyncGear.AsyncPeriod:filled_slots_num:45 - set 'Tom' to period sleep.\n2021-04-17 10:23:02.738709\n2021-04-17 10:23:03.741432\n2021-04-17 18:23:03.741 | DEBUG    | AsyncGear.AsyncPeriod:filled_slots_num:45 - set 'Tom' to period awaken.\n```\n\n\n### Gear(obj).delete\nWhen you no more need a gear, you'd better delete it to save RAM. Especially when you dynamically keep creating new gears, you must keep\ndeleting the old gears.\n```python\nGear('Tom').add_periods('sleep', 'awaken') \nGear('Tom').delete()\n```\n\n### DataShine\nDataShine is a class inherited from AsyncGear. It is designed to set a gear to bear data and notify all monitors.\n```python\nds = DataShine()\n\nasync def waiter(name: str):\n    for _ in range(3):\n        print(f'{name}:{await ds.wait_data_shine()}')\n\nasyncio.create_task(waiter('John'))\nasyncio.create_task(waiter('Tom'))\nfor i in range(3):\n    await asyncio.create_task(ds.push_data(i))\n    \nds.delete()\n    \nasyncio.get_running_loop().stop()\n```\n```shell\nJohn:0\nTom:0\nJohn:1\nTom:1\nJohn:2\nTom:2\n```\nYou'd better delete the instance when it is no more used. \n\n### run_when_enter\nrun_when_enter is to decorate a function or coroutine function to be run when just entering the designated period of \nthe designated object gear.\n```python\nGear('Tom').add_periods('sleep', 'awaken')\n\n@run_when_enter('Tom', 'awaken')\ndef enter_test():\n    print('synchronous callback')\n\n@run_when_enter('Tom', 'awaken')\nasync def async_enter_test():\n    print('asynchronous callback')\n\nawait asyncio.create_task(Gear('Tom').set_period('awaken'))\n\nloop.stop()\n```\nResult\n```shell\nsynchronous callback\nasynchronous callback\n2021-01-05 17:20:34.636 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set 'Tom' to period sleep.\n2021-01-05 17:20:34.636 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set 'Tom' to period awaken.\n2021-01-05 17:20:34.636 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set 'Tom' to period awaken.\n```\n### run_when_exit\nrun_when_exit is to decorate a function or coroutine function to be run when just exiting the designated period of \nthe designated object gear.\n```python\nGear('Tom').add_periods('sleep', 'awaken')\n\n@run_when_exit('Tom', 'sleep')\ndef enter_test():\n    print('synchronous callback')\n\n@run_when_exit('Tom', 'sleep')\nasync def async_enter_test():\n    print('asynchronous callback')\n\nawait asyncio.create_task(Gear('Tom').set_period('awaken'))\n\nloop.stop()\n```\nResult\n```shell\nsynchronous callback\nasynchronous callback\n2021-01-05 17:23:13.993 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set 'Tom' to period sleep.\n2021-01-05 17:23:13.994 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set 'Tom' to period awaken.\n2021-01-05 17:23:13.994 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set 'Tom' to period awaken.\n```\n### run_when_inside\nrun_when_inside is to decorate a function or coroutine function to be run when being inside the designated period of \nthe designated object gear.\n\nLogically, 'inside' is a time slot, so the condition is frequently awaited and the decorated is frequently run. To make \nsense, this must not happen. Therefore we set a 'queue blocking' style -- 'abandon', which means abandoning the new activated if the \nprevious one has not completed yet.\n\n'queue blocking' is talked later.\n```python\nGear('Tom').add_periods('sleep', 'awaken')\n\n@run_when_inside('Tom', 'awaken')\nasync def inside_test():\n    await asyncio.create_task(asyncio.sleep(1))\n    print(f'inside awaken')\n\nawait asyncio.create_task(Gear('Tom').set_period('awaken'))\nawait asyncio.create_task(asyncio.sleep(2.5))\nawait asyncio.create_task(Gear('Tom').set_period('sleep'))\nawait asyncio.create_task(asyncio.sleep(1))\nloop.stop()\n```\nResult\n```shell\n2021-01-05 17:38:29.518 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set 'Tom' to period sleep.\n2021-01-05 17:38:29.519 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set 'Tom' to period awaken.\n2021-01-05 17:38:29.519 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set 'Tom' to period awaken.\ninside awaken\ninside awaken\n2021-01-05 17:38:32.021 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set 'Tom' to period sleep.\n2021-01-05 17:38:32.021 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set 'Tom' to period sleep.\ninside awaken\n```\nSee? In 2.5 seconds, there could be only 3 inside_test run and when the period was set \nto 'sleep' the last inside_test had not completed yet.\n### run_when_outside\nYou can understand 'run_when_outside' according to ['run_when_inside'](#run_when_inside)\n\n### when_enter\nThis decorator is similar to run_when_enter. However it is used in class definition.\n\n#### decorate instance method\n```python\nclass C:\n    def __init__(self):\n        Gear(self).add_periods('sleep', 'awaken')\n\n    @when_enter('awaken')\n    def f(self):\n        print('synchronous enter awaken callback')\n\n    @when_enter('awaken')\n    async def f1(self):\n        print('Asynchronous enter awaken callback')\n\n    @when_enter('sleep')\n    def f2(self):\n        print('synchronous enter sleep callback')\n\nc = C()\nawait asyncio.create_task(Gear(c).set_period('awaken'))\nawait asyncio.sleep(1)\nawait asyncio.create_task(Gear(c).set_period('sleep'))\nloop.stop()\n```\nResult\n```shell\nsynchronous enter awaken callback\nAsynchronous enter awaken callback\n2021-01-05 18:23:43.974 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set <__main__.main.<locals>.C object at 0x7fcedae93350> to period sleep.\n2021-01-05 18:23:43.974 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set <__main__.main.<locals>.C object at 0x7fcedae93350> to period awaken.\n2021-01-05 18:23:43.975 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set <__main__.main.<locals>.C object at 0x7fcedae93350> to period awaken.\n2021-01-05 18:23:44.976 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set <__main__.main.<locals>.C object at 0x7fcedae93350> to period sleep.\n2021-01-05 18:23:44.976 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set <__main__.main.<locals>.C object at 0x7fcedae93350> to period sleep.\nsynchronous enter sleep callback\n```\n#### decorate class method\n```python\nclass C:\n    @when_enter('awaken')\n    @classmethod\n    def f(cls):\n        print('synchronous enter awaken callback')\n\n    @when_enter('awaken')\n    @classmethod\n    async def f1(cls):\n        print('asynchronous enter awaken callback')\n\n    @when_enter('sleep')\n    @classmethod\n    def f2(cls):\n        print('synchronous enter sleep callback')\n\nGear(C).add_periods('sleep', 'awaken')\nawait asyncio.create_task(Gear(C).set_period('awaken'))\nawait asyncio.sleep(1)\nawait asyncio.create_task(Gear(C).set_period('sleep'))\n\nloop.stop()\n```\nResult\n```shell\nsynchronous enter awaken callback\nasynchronous enter awaken callback\n2021-01-05 18:29:28.379 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set <class '__main__.main.<locals>.C'> to period sleep.\n2021-01-05 18:29:28.380 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set <class '__main__.main.<locals>.C'> to period awaken.\n2021-01-05 18:29:28.380 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set <class '__main__.main.<locals>.C'> to period awaken.\nsynchronous enter sleep callback\n2021-01-05 18:29:29.383 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set <class '__main__.main.<locals>.C'> to period sleep.\n2021-01-05 18:29:29.383 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set <class '__main__.main.<locals>.C'> to period sleep.\n```\n### when_exit\nYou can understand according to ['when_enter'](#when_enter)\n### when_inside\nThis decorator is similar to run_when_inside. However it is used in class definition.\n```python\nclass C:\n    def __init__(self):\n        Gear(self).add_periods('sleep', 'awaken')\n\n    @when_inside('awaken')\n    async def f1(self):\n        await asyncio.create_task(asyncio.sleep(1))\n        print('Aynchronous inside awaken callback')\n\nc = C()\nawait asyncio.create_task(Gear(c).set_period('awaken'))\nawait asyncio.create_task(asyncio.sleep(2.5))\nawait asyncio.create_task(Gear(c).set_period('sleep'))\nawait asyncio.create_task(asyncio.sleep(1))\n\nloop.stop()\n```\nResult\n```shell\n2021-01-06 13:40:15.688 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set <__main__.main.<locals>.C object at 0x7faba315e450> to period sleep.\n2021-01-06 13:40:15.689 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set <__main__.main.<locals>.C object at 0x7faba315e450> to period awaken.\n2021-01-06 13:40:15.689 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set <__main__.main.<locals>.C object at 0x7faba315e450> to period awaken.\nAynchronous inside awaken callback\nAynchronous inside awaken callback\n2021-01-06 13:40:18.192 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set <__main__.main.<locals>.C object at 0x7faba315e450> to period sleep.\n2021-01-06 13:40:18.193 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set <__main__.main.<locals>.C object at 0x7faba315e450> to period sleep.\nAynchronous inside awaken callback\n```\n### when_outside\nYou can understand according to ['when_inside'](#when_inside)\n### high level parameters\n#### queue blocking\nDecorators below have an optional parameter queue_blocking for the asynchronous decorated functions:\n```python\nrun_when_enter, run_when_exit, when_enter, when_exit\n```\n'queue_blocking' is to decide the style to run the decorated when the condition is high frequently awaited. For example:\n```python\n@run_when_enter('Tom', 'awaken')\nasync def enter_test():\n    await asyncio.create_task(asyncio.sleep(0.1))\n    print('enter')\n\nGear('Tom').add_periods('sleep', 'awaken')\nawait asyncio.create_task(Gear('Tom').set_period('awaken'))\nawait asyncio.create_task(Gear('Tom').set_period('sleep'))\nawait asyncio.create_task(Gear('Tom').set_period('awaken'))\nawait asyncio.create_task(Gear('Tom').set_period('sleep'))\nawait asyncio.sleep(1)\nloop.stop()\n```\nResult\n```shell\n2021-01-05 18:53:05.436 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set 'Tom' to period sleep.\n2021-01-05 18:53:05.437 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set 'Tom' to period awaken.\n2021-01-05 18:53:05.437 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set 'Tom' to period awaken.\n2021-01-05 18:53:05.437 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set 'Tom' to period sleep.\n2021-01-05 18:53:05.437 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set 'Tom' to period sleep.\n2021-01-05 18:53:05.438 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set 'Tom' to period awaken.\n2021-01-05 18:53:05.438 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set 'Tom' to period awaken.\n2021-01-05 18:53:05.438 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set 'Tom' to period sleep.\n2021-01-05 18:53:05.439 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set 'Tom' to period sleep.\nenter\n```\nWe high frequently set 'Tom' to enter 'awaken', so enter_test was high frequently run for twice. \nBut why we got only one 'enter' printed?\n\nThis is because run_when_enter parameter queue_blocking is set to 'abandon' as default, which means abandoning the new activated if the \nprevious one has not completed yet.\n\nIf it is set to 'non_block':\n```python\n@run_when_enter('Tom', 'awaken', queue_blocking='non_block')\nasync def enter_test():\n    await asyncio.create_task(asyncio.sleep(0.1))\n    print('enter')\n\nGear('Tom').add_periods('sleep', 'awaken')\nawait asyncio.create_task(Gear('Tom').set_period('awaken'))\nawait asyncio.create_task(Gear('Tom').set_period('sleep'))\nawait asyncio.create_task(Gear('Tom').set_period('awaken'))\nawait asyncio.create_task(Gear('Tom').set_period('sleep'))\nawait asyncio.sleep(1)\nloop.stop()\n```\nResult\n```shell\n2021-01-05 19:01:21.706 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set 'Tom' to period sleep.\n2021-01-05 19:01:21.706 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set 'Tom' to period awaken.\n2021-01-05 19:01:21.707 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set 'Tom' to period awaken.\n2021-01-05 19:01:21.707 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set 'Tom' to period sleep.\n2021-01-05 19:01:21.707 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set 'Tom' to period sleep.\n2021-01-05 19:01:21.708 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set 'Tom' to period awaken.\n2021-01-05 19:01:21.708 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set 'Tom' to period awaken.\n2021-01-05 19:01:21.709 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set 'Tom' to period sleep.\n2021-01-05 19:01:21.709 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set 'Tom' to period sleep.\nenter\nenter\n```\nThe two 'enter' were printed at the same time, because the twice enter_test run is non-block.\n\nIf it is set to 'queue':\n```python\n@run_when_enter('Tom', 'awaken', queue_blocking='queue')\nasync def enter_test():\n    await asyncio.create_task(asyncio.sleep(0.1))\n    print('enter')\n\nGear('Tom').add_periods('sleep', 'awaken')\nawait asyncio.create_task(Gear('Tom').set_period('awaken'))\nawait asyncio.create_task(Gear('Tom').set_period('sleep'))\nawait asyncio.create_task(Gear('Tom').set_period('awaken'))\nawait asyncio.create_task(Gear('Tom').set_period('sleep'))\nawait asyncio.sleep(1)\nloop.stop()\n```\nResult\n```shell\n2021-01-05 19:04:03.460 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set 'Tom' to period sleep.\n2021-01-05 19:04:03.461 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set 'Tom' to period awaken.\n2021-01-05 19:04:03.461 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set 'Tom' to period awaken.\n2021-01-05 19:04:03.462 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set 'Tom' to period sleep.\n2021-01-05 19:04:03.462 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set 'Tom' to period sleep.\n2021-01-05 19:04:03.463 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set 'Tom' to period awaken.\n2021-01-05 19:04:03.463 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set 'Tom' to period awaken.\n2021-01-05 19:04:03.464 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set 'Tom' to period sleep.\n2021-01-05 19:04:03.464 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set 'Tom' to period sleep.\nenter\nenter\n```\nThe two 'enter' were printed one by one, because among the twice enter_test the latter is blocked by the former but \nenqueued to wait to run.\n#### slot_num\n```python\nGear(obj).set_period\n```\nhas a parameter -- slot_num.\n\n*Attention! Do not use it before you do understand the parameter!* \n\nThis parameter is used in such a scene, object 'Tom' enters 'sleep' activating 2 friends to be ready to call him 'awaken'\n9 hours later. So 9 hours later, 'Tom' would have to be set twice to 'awaken' then could really be awaken. It's hard to \nawake him, haha. \n\nslot_num means that only after slot_num times Gear(obj)\n.set_period(period_name,slot_num) call with the same parameters, the period of Gear(obj) could really be set to \nperiod_name, which is interrupted \nif among these times set_period run, the same period_name with a different slot_num is given. Then the procedure for \nperiod_name is refreshed, the count would be reset. For demostration:\n```python\nGear('Tom').add_periods('sleep', 'awaken')\nawait asyncio.create_task(Gear('Tom').set_period('awaken', slot_num=2))\nprint(Gear('Tom').get_present_period())\nawait asyncio.create_task(Gear('Tom').set_period('awaken', slot_num=2))\nprint(Gear('Tom').get_present_period())\nloop.stop()\n```\nResult\n```shell\nsleep\nawaken\n2021-01-05 19:18:36.340 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set 'Tom' to period sleep.\n2021-01-05 19:18:36.341 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set 'Tom' to period awaken.\n2021-01-05 19:18:36.341 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set 'Tom' to period awaken.\n```\nSee? Twice 'set_period' set period to 'awaken' finally.\n```python\nGear('Tom').add_periods('sleep', 'awaken')\nawait asyncio.create_task(Gear('Tom').set_period('awaken', slot_num=2))\nprint(Gear('Tom').get_present_period())\nawait asyncio.create_task(Gear('Tom').set_period('awaken', slot_num=3))\nprint(Gear('Tom').get_present_period())\nawait asyncio.create_task(Gear('Tom').set_period('awaken', slot_num=3))\nprint(Gear('Tom').get_present_period())\nawait asyncio.create_task(Gear('Tom').set_period('awaken', slot_num=3))\nprint(Gear('Tom').get_present_period())\nloop.stop()\n```\nResult\n```shell\nsleep\nsleep\nsleep\nawaken\n2021-01-05 19:21:32.711 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set 'Tom' to period sleep.\n2021-01-05 19:21:32.713 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set 'Tom' to period awaken.\n2021-01-05 19:21:32.713 | DEBUG    | AsyncGear.AsyncGear:_set_obj_period:74 - set 'Tom' to period awaken.\n```\n'slot_num=2' is interrupted and the count is reset.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/monk-after-90s/AsyncGear",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "AsyncGear",
    "package_url": "https://pypi.org/project/AsyncGear/",
    "platform": "",
    "project_url": "https://pypi.org/project/AsyncGear/",
    "project_urls": {
      "Homepage": "https://github.com/monk-after-90s/AsyncGear"
    },
    "release_url": "https://pypi.org/project/AsyncGear/4.7.2/",
    "requires_dist": [
      "loguru",
      "ensureTaskCanceled (==1.1)"
    ],
    "requires_python": ">=3.7",
    "summary": "Think about such scene, some object has different state or periods, well we call periods.Among these periods, there can't be any two that could be both the present period. The object could be in only one period. For example, a human can only be one period of baby, youth, adult, old man and dead..",
    "version": "4.7.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11674182,
  "releases": {
    "1.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "58f0ab9e5989330bb72aba2a6496c659e478ab3bbabf5e5fec294270ed1b1422",
          "md5": "0ede94a2923aaf0c255668dc9d8f53da",
          "sha256": "e4f11d54800888333cfffee3c9fb61803d9c787ae777d5f97be4f9e68dd2209b"
        },
        "downloads": -1,
        "filename": "AsyncGear-1.12-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0ede94a2923aaf0c255668dc9d8f53da",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 2826,
        "upload_time": "2020-12-23T06:25:38",
        "upload_time_iso_8601": "2020-12-23T06:25:38.085737Z",
        "url": "https://files.pythonhosted.org/packages/58/f0/ab9e5989330bb72aba2a6496c659e478ab3bbabf5e5fec294270ed1b1422/AsyncGear-1.12-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6c5d1e8e6d6533e929498ea01b217e56282b1ae71107cb9423098f95356414e9",
          "md5": "471fc3cc0eb5d178b93ef228982af8a6",
          "sha256": "2fb24755219d5c8fcbd890a4218297e4ab7c5c0ffb26382d346dae2da2b21e64"
        },
        "downloads": -1,
        "filename": "AsyncGear-1.12.tar.gz",
        "has_sig": false,
        "md5_digest": "471fc3cc0eb5d178b93ef228982af8a6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 2360,
        "upload_time": "2020-12-23T06:25:39",
        "upload_time_iso_8601": "2020-12-23T06:25:39.500560Z",
        "url": "https://files.pythonhosted.org/packages/6c/5d/1e8e6d6533e929498ea01b217e56282b1ae71107cb9423098f95356414e9/AsyncGear-1.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4b33cb48a2ddc212a5b633f9197e95857a99b019b4af362fdb5c8790a08e16cb",
          "md5": "d5309c63c55650414bccc4b0d53ed1ca",
          "sha256": "f56e985f2180891e0c63dcef8a5771eaed219ee3f19b1d761b255a7eeaf29203"
        },
        "downloads": -1,
        "filename": "AsyncGear-1.13-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d5309c63c55650414bccc4b0d53ed1ca",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 2825,
        "upload_time": "2020-12-23T06:28:54",
        "upload_time_iso_8601": "2020-12-23T06:28:54.213477Z",
        "url": "https://files.pythonhosted.org/packages/4b/33/cb48a2ddc212a5b633f9197e95857a99b019b4af362fdb5c8790a08e16cb/AsyncGear-1.13-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "000643ca05986b78a1db5146d193afa51a5bc9152a5fdd92d992767730777a95",
          "md5": "a7545359b4ee9e18fad2e98666208b8f",
          "sha256": "eb046844815438a31c9fae285e61c2d105ef9db8d9677744809b717f9b524e68"
        },
        "downloads": -1,
        "filename": "AsyncGear-1.13.tar.gz",
        "has_sig": false,
        "md5_digest": "a7545359b4ee9e18fad2e98666208b8f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 2355,
        "upload_time": "2020-12-23T06:28:55",
        "upload_time_iso_8601": "2020-12-23T06:28:55.397791Z",
        "url": "https://files.pythonhosted.org/packages/00/06/43ca05986b78a1db5146d193afa51a5bc9152a5fdd92d992767730777a95/AsyncGear-1.13.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "387815143f4febf4f93651c7c47234fd7ba10d0bf8c43a94e6789e9289ed4709",
          "md5": "d8041ea43241383cc7076502e527a68c",
          "sha256": "b968dda39b995d696235f70e1de74c090b753e88878852a074fa648c84953c0b"
        },
        "downloads": -1,
        "filename": "AsyncGear-1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d8041ea43241383cc7076502e527a68c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 4236,
        "upload_time": "2020-12-31T14:18:50",
        "upload_time_iso_8601": "2020-12-31T14:18:50.266419Z",
        "url": "https://files.pythonhosted.org/packages/38/78/15143f4febf4f93651c7c47234fd7ba10d0bf8c43a94e6789e9289ed4709/AsyncGear-1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8fd071f16c6bd4c9bdfb722c7be5fd3205414c6eeac86c2d450d753c52a8236c",
          "md5": "c48ad0f891ec0b2100b828dbb3a3dfaf",
          "sha256": "dec20ed440f15cd7509267791803a45cbb8d0ae815d0e77ffb963ddc3e26c0ce"
        },
        "downloads": -1,
        "filename": "AsyncGear-1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c48ad0f891ec0b2100b828dbb3a3dfaf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 3312,
        "upload_time": "2020-12-31T14:18:51",
        "upload_time_iso_8601": "2020-12-31T14:18:51.476466Z",
        "url": "https://files.pythonhosted.org/packages/8f/d0/71f16c6bd4c9bdfb722c7be5fd3205414c6eeac86c2d450d753c52a8236c/AsyncGear-1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.21": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ccd906d470458c863e534eee8ed190e9ad7ef095bac6bad0a6f663f4d5c8f1e7",
          "md5": "7c7c236f23120295c6837f102207b1d7",
          "sha256": "b0987dda7affd5361427f4e535b483c0b0d71c6a517a2bbea26953daabf3cfd4"
        },
        "downloads": -1,
        "filename": "AsyncGear-1.21-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7c7c236f23120295c6837f102207b1d7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 4245,
        "upload_time": "2021-01-01T01:45:18",
        "upload_time_iso_8601": "2021-01-01T01:45:18.737695Z",
        "url": "https://files.pythonhosted.org/packages/cc/d9/06d470458c863e534eee8ed190e9ad7ef095bac6bad0a6f663f4d5c8f1e7/AsyncGear-1.21-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "49a02999bfc6d7e3d6530c9857338f031589863bc4266b8fb7c0f702a811c62b",
          "md5": "e6b51631803c9ec5b52beb95e44f1173",
          "sha256": "de43c1b604753346cc890b0aad6c56e9ac67897acb06f04db0f85bab5146dfa8"
        },
        "downloads": -1,
        "filename": "AsyncGear-1.21.tar.gz",
        "has_sig": false,
        "md5_digest": "e6b51631803c9ec5b52beb95e44f1173",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 3320,
        "upload_time": "2021-01-01T01:45:19",
        "upload_time_iso_8601": "2021-01-01T01:45:19.856020Z",
        "url": "https://files.pythonhosted.org/packages/49/a0/2999bfc6d7e3d6530c9857338f031589863bc4266b8fb7c0f702a811c62b/AsyncGear-1.21.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "da67992985625d9c0f0732ce539aa3a49c9f2ca9c46671e24d3061a6c876e903",
          "md5": "64c4d73ff202f6262f8daba45e3c9699",
          "sha256": "bf0cbc2a2bd27fbf0d2b1da34c0e2b859a75c56a99c76d7d7b6782af708d01bb"
        },
        "downloads": -1,
        "filename": "AsyncGear-2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "64c4d73ff202f6262f8daba45e3c9699",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 4555,
        "upload_time": "2021-01-01T14:56:03",
        "upload_time_iso_8601": "2021-01-01T14:56:03.737325Z",
        "url": "https://files.pythonhosted.org/packages/da/67/992985625d9c0f0732ce539aa3a49c9f2ca9c46671e24d3061a6c876e903/AsyncGear-2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "99966e57ad01e52bf32cdbcf177ebfd2280e76b5a0c3f411ec0dc33d552f488d",
          "md5": "6ef9786cb6809c51a74281ea21bbbec1",
          "sha256": "fde47fb37e941a4ec1ea6f6c2757e48e52ccd98521d564901b2b2a1a43c13b0b"
        },
        "downloads": -1,
        "filename": "AsyncGear-2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6ef9786cb6809c51a74281ea21bbbec1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 3505,
        "upload_time": "2021-01-01T14:56:04",
        "upload_time_iso_8601": "2021-01-01T14:56:04.674806Z",
        "url": "https://files.pythonhosted.org/packages/99/96/6e57ad01e52bf32cdbcf177ebfd2280e76b5a0c3f411ec0dc33d552f488d/AsyncGear-2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c8fa5fb457e65ee158fb85e6bbafd2000e8305676a856e3969fda1015bd2b544",
          "md5": "0db79af2752674783f30a9f23d57e050",
          "sha256": "17f82aa976f9efd308be690cb8ae4c34c756390300c1e6995640a754476529b8"
        },
        "downloads": -1,
        "filename": "AsyncGear-3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0db79af2752674783f30a9f23d57e050",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 5299,
        "upload_time": "2021-01-02T10:36:55",
        "upload_time_iso_8601": "2021-01-02T10:36:55.465728Z",
        "url": "https://files.pythonhosted.org/packages/c8/fa/5fb457e65ee158fb85e6bbafd2000e8305676a856e3969fda1015bd2b544/AsyncGear-3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1ddb21b08a8ae7fe35e21b95fad0462922aae6a4527aae6034a5aafa5d28adb8",
          "md5": "86635d319ff905d2d09e12a1d4f27394",
          "sha256": "5581cd2585c248bb92200027e569a8a3830fa51ef2cf1ec2a4cd75d564cab5c7"
        },
        "downloads": -1,
        "filename": "AsyncGear-3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "86635d319ff905d2d09e12a1d4f27394",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 4045,
        "upload_time": "2021-01-02T10:36:56",
        "upload_time_iso_8601": "2021-01-02T10:36:56.409054Z",
        "url": "https://files.pythonhosted.org/packages/1d/db/21b08a8ae7fe35e21b95fad0462922aae6a4527aae6034a5aafa5d28adb8/AsyncGear-3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bc29db9c63d8adf5e36aea535e36e45bdf043f7fa5cfd197d5a029c76acc87f9",
          "md5": "ee59a5e2f146498ff66fb7cdeea7e123",
          "sha256": "a2adceba79cf26ab337848e0b0b7e0b1f9009693f55e16465d70894f0745fe09"
        },
        "downloads": -1,
        "filename": "AsyncGear-3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ee59a5e2f146498ff66fb7cdeea7e123",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 5298,
        "upload_time": "2021-01-02T10:56:47",
        "upload_time_iso_8601": "2021-01-02T10:56:47.054987Z",
        "url": "https://files.pythonhosted.org/packages/bc/29/db9c63d8adf5e36aea535e36e45bdf043f7fa5cfd197d5a029c76acc87f9/AsyncGear-3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f60e287d1a746103ff364f1325a3b5404516955c0c44043d1af252940818eee",
          "md5": "13700615bd8bfbb1ef49e25b159f91f5",
          "sha256": "5c2ebcb2b2c969b8f9b63feb98fbb801c53089b5ea49ad1544038c10e92996d7"
        },
        "downloads": -1,
        "filename": "AsyncGear-3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "13700615bd8bfbb1ef49e25b159f91f5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 4046,
        "upload_time": "2021-01-02T10:56:48",
        "upload_time_iso_8601": "2021-01-02T10:56:48.210318Z",
        "url": "https://files.pythonhosted.org/packages/9f/60/e287d1a746103ff364f1325a3b5404516955c0c44043d1af252940818eee/AsyncGear-3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d9e8a1d4a81756ee6ce2a52772f00cf76a78706df175f6ff5a723cea835320a3",
          "md5": "18bfb997cb0f189f876606f687efd709",
          "sha256": "371fbe4a00294935e0025b0486121d59e5b1a35295ce162eb8aff17314386629"
        },
        "downloads": -1,
        "filename": "AsyncGear-4.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "18bfb997cb0f189f876606f687efd709",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 10232,
        "upload_time": "2021-01-05T11:44:22",
        "upload_time_iso_8601": "2021-01-05T11:44:22.795583Z",
        "url": "https://files.pythonhosted.org/packages/d9/e8/a1d4a81756ee6ce2a52772f00cf76a78706df175f6ff5a723cea835320a3/AsyncGear-4.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f3ca11b53b6b380d5780ab6fc4a61f06f23278fbb512f5b2fce94f01a42fa639",
          "md5": "21b6217e726fe787020f1322a4b1827c",
          "sha256": "f45f650a5b5e1ec2c9d179f899e5bf3fc809c5c65ee7b611e009be3809a312b2"
        },
        "downloads": -1,
        "filename": "AsyncGear-4.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "21b6217e726fe787020f1322a4b1827c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9763,
        "upload_time": "2021-01-05T11:44:24",
        "upload_time_iso_8601": "2021-01-05T11:44:24.400304Z",
        "url": "https://files.pythonhosted.org/packages/f3/ca/11b53b6b380d5780ab6fc4a61f06f23278fbb512f5b2fce94f01a42fa639/AsyncGear-4.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7dd42da21244274af70dddb91b2ee14993fecfeb77a0b53f6f08e7825019975b",
          "md5": "db612b5097e7410603bc64178603525f",
          "sha256": "df9693b00cac2eca18b4124ab38b71001f30708cc62576f9c3022f077d93149b"
        },
        "downloads": -1,
        "filename": "AsyncGear-4.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "db612b5097e7410603bc64178603525f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 10255,
        "upload_time": "2021-01-06T05:59:27",
        "upload_time_iso_8601": "2021-01-06T05:59:27.803524Z",
        "url": "https://files.pythonhosted.org/packages/7d/d4/2da21244274af70dddb91b2ee14993fecfeb77a0b53f6f08e7825019975b/AsyncGear-4.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ddb9bd6eda068716e076e8c6b185b8639908de9b14184c6f3023cbd935699a0c",
          "md5": "583b3883d860b2dff86f1dded695e22d",
          "sha256": "d5dbe1575b72678ce56aa096e8010bbd32f3c7e9a1e52ab76980e6b624488756"
        },
        "downloads": -1,
        "filename": "AsyncGear-4.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "583b3883d860b2dff86f1dded695e22d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9804,
        "upload_time": "2021-01-06T05:59:29",
        "upload_time_iso_8601": "2021-01-06T05:59:29.576062Z",
        "url": "https://files.pythonhosted.org/packages/dd/b9/bd6eda068716e076e8c6b185b8639908de9b14184c6f3023cbd935699a0c/AsyncGear-4.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "af1f0ccef42cb6526289232870eb8a817356490934a09b20f757ba79e923498a",
          "md5": "a404e62c828b495daf92c63ac0d899df",
          "sha256": "9c92cb88a57a0a99f0cc560ac76ec7ea035056818863f6d2c0f60b247606e3dc"
        },
        "downloads": -1,
        "filename": "AsyncGear-4.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a404e62c828b495daf92c63ac0d899df",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 10608,
        "upload_time": "2021-01-06T14:09:30",
        "upload_time_iso_8601": "2021-01-06T14:09:30.619778Z",
        "url": "https://files.pythonhosted.org/packages/af/1f/0ccef42cb6526289232870eb8a817356490934a09b20f757ba79e923498a/AsyncGear-4.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "15b25cf6a4fdc052e791be2722bf4aef7438751e6313d85df8e47caf875e56bf",
          "md5": "46c5ef2a45ecf62467f6f2ee35ee7288",
          "sha256": "2fceb3cfdea58c08953c9fb15c1a56009d2b41db21e2b06e66a3f95119a17aa3"
        },
        "downloads": -1,
        "filename": "AsyncGear-4.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "46c5ef2a45ecf62467f6f2ee35ee7288",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 10113,
        "upload_time": "2021-01-06T14:09:32",
        "upload_time_iso_8601": "2021-01-06T14:09:32.265922Z",
        "url": "https://files.pythonhosted.org/packages/15/b2/5cf6a4fdc052e791be2722bf4aef7438751e6313d85df8e47caf875e56bf/AsyncGear-4.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0077e9b199d5c388f56c4894364de7b8bdb1d9d2c90839e2cf51d5eeac6d1a3e",
          "md5": "2197cf6c16b39a28b58b283669a960a3",
          "sha256": "54cbce8c2a246da7ecf02729617a9c8485420cead6eab017674bdc9aec0e434a"
        },
        "downloads": -1,
        "filename": "AsyncGear-4.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2197cf6c16b39a28b58b283669a960a3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 10622,
        "upload_time": "2021-01-07T02:21:38",
        "upload_time_iso_8601": "2021-01-07T02:21:38.029693Z",
        "url": "https://files.pythonhosted.org/packages/00/77/e9b199d5c388f56c4894364de7b8bdb1d9d2c90839e2cf51d5eeac6d1a3e/AsyncGear-4.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d1613bd6cdc7419320d5550b559d8d58d85cf332706c9a4c5af50821536eaabd",
          "md5": "5f5f79e29123d206204f9ed0d95b77e3",
          "sha256": "1ef6ab9deabe075b9b793ff3023f2f3304386fe23cdfe66c19a3fd2be7fc4640"
        },
        "downloads": -1,
        "filename": "AsyncGear-4.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5f5f79e29123d206204f9ed0d95b77e3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 10132,
        "upload_time": "2021-01-07T02:21:39",
        "upload_time_iso_8601": "2021-01-07T02:21:39.516411Z",
        "url": "https://files.pythonhosted.org/packages/d1/61/3bd6cdc7419320d5550b559d8d58d85cf332706c9a4c5af50821536eaabd/AsyncGear-4.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d2918e027cbdda79c02a4806fb61d0c5d90e53d6582603345f6bc9d9ae7e2dd0",
          "md5": "dd1b3ca7a1e914017e7805a7c3f7bdc9",
          "sha256": "3a9c502d9ecfa15c235ba80c3f654b097997d07f8531883e62b37cce63d843ef"
        },
        "downloads": -1,
        "filename": "AsyncGear-4.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dd1b3ca7a1e914017e7805a7c3f7bdc9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 10761,
        "upload_time": "2021-01-14T12:33:06",
        "upload_time_iso_8601": "2021-01-14T12:33:06.046049Z",
        "url": "https://files.pythonhosted.org/packages/d2/91/8e027cbdda79c02a4806fb61d0c5d90e53d6582603345f6bc9d9ae7e2dd0/AsyncGear-4.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a1a504222b2a47196bf46479f6e3866a786106bf496025e6b3e9cc94078cd9c9",
          "md5": "185e588fdee8fc43fafcfaf6ccac3e58",
          "sha256": "94d691ade0b01131c5e4963b39bd1cfa4536c219e10071e9cb0e794916c80122"
        },
        "downloads": -1,
        "filename": "AsyncGear-4.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "185e588fdee8fc43fafcfaf6ccac3e58",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 10256,
        "upload_time": "2021-01-14T12:33:07",
        "upload_time_iso_8601": "2021-01-14T12:33:07.601071Z",
        "url": "https://files.pythonhosted.org/packages/a1/a5/04222b2a47196bf46479f6e3866a786106bf496025e6b3e9cc94078cd9c9/AsyncGear-4.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ed1cbef0da6cfc7415e484902c99d5df4e76dbbc24d25adac21864e947e45413",
          "md5": "0d541da283c53c4503d860458ab738b8",
          "sha256": "5b1452bc6342a83783ce9ed3da8709adac6dd94b13effc8629df3df29d5f6202"
        },
        "downloads": -1,
        "filename": "AsyncGear-4.2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0d541da283c53c4503d860458ab738b8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 10851,
        "upload_time": "2021-01-15T12:45:08",
        "upload_time_iso_8601": "2021-01-15T12:45:08.756310Z",
        "url": "https://files.pythonhosted.org/packages/ed/1c/bef0da6cfc7415e484902c99d5df4e76dbbc24d25adac21864e947e45413/AsyncGear-4.2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6bed5523b4a70e3633d70759a0252642303266928c98a38b3900b39a99668fe7",
          "md5": "c955d3887a60e7cf8cd6d6476009acc1",
          "sha256": "702afc898f6e68f5647a22bd8e65f33c2835205a51d2dc575905428df7e04038"
        },
        "downloads": -1,
        "filename": "AsyncGear-4.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "c955d3887a60e7cf8cd6d6476009acc1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 10360,
        "upload_time": "2021-01-15T12:45:11",
        "upload_time_iso_8601": "2021-01-15T12:45:11.045530Z",
        "url": "https://files.pythonhosted.org/packages/6b/ed/5523b4a70e3633d70759a0252642303266928c98a38b3900b39a99668fe7/AsyncGear-4.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4532e627793f926690e031e18c8188fa7f47a310c7bba97309247f6a4f08ff86",
          "md5": "39b984cde56b55abd51f60c740dafb04",
          "sha256": "4e6622f58e23e28ad09efe06559f5b1e6b248919426f184c7386ebfc770a483a"
        },
        "downloads": -1,
        "filename": "AsyncGear-4.2.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "39b984cde56b55abd51f60c740dafb04",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 11664,
        "upload_time": "2021-01-21T08:10:57",
        "upload_time_iso_8601": "2021-01-21T08:10:57.555117Z",
        "url": "https://files.pythonhosted.org/packages/45/32/e627793f926690e031e18c8188fa7f47a310c7bba97309247f6a4f08ff86/AsyncGear-4.2.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e3ec01c7bf91a1bd9e71fee833b0e4388fa859b62c846565d267ea3c8bb64231",
          "md5": "5c4efc2472155b7faf184eb259d6715a",
          "sha256": "1aaaf9b240a792566d3ca65f0f8a665ed2b752d9697b956e4ef356164e4b5ea3"
        },
        "downloads": -1,
        "filename": "AsyncGear-4.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "5c4efc2472155b7faf184eb259d6715a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 10371,
        "upload_time": "2021-01-21T08:10:59",
        "upload_time_iso_8601": "2021-01-21T08:10:59.369088Z",
        "url": "https://files.pythonhosted.org/packages/e3/ec/01c7bf91a1bd9e71fee833b0e4388fa859b62c846565d267ea3c8bb64231/AsyncGear-4.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d57e488f57651c6fd4afe79431a1ed71e64b07edceca72495fece250cc3e162a",
          "md5": "8e2d23b6ccdfb4226fc59ea0f4a3671c",
          "sha256": "2836638e3f84c20018c287263050b0c3adbd0ec7661b7c3eff6ce73e490d908f"
        },
        "downloads": -1,
        "filename": "AsyncGear-4.2.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8e2d23b6ccdfb4226fc59ea0f4a3671c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 11663,
        "upload_time": "2021-01-21T08:12:35",
        "upload_time_iso_8601": "2021-01-21T08:12:35.134858Z",
        "url": "https://files.pythonhosted.org/packages/d5/7e/488f57651c6fd4afe79431a1ed71e64b07edceca72495fece250cc3e162a/AsyncGear-4.2.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a182c09a29bf7c4d312122558239f093b69102bab7d4c875d420f602b20020de",
          "md5": "297ae80d7ea8ec53c9167eca768f060e",
          "sha256": "25242c60d200a62781bfb1df9efbe8b7f2d0967f458af9a18d9fa6058f908435"
        },
        "downloads": -1,
        "filename": "AsyncGear-4.2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "297ae80d7ea8ec53c9167eca768f060e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 10366,
        "upload_time": "2021-01-21T08:12:49",
        "upload_time_iso_8601": "2021-01-21T08:12:49.941438Z",
        "url": "https://files.pythonhosted.org/packages/a1/82/c09a29bf7c4d312122558239f093b69102bab7d4c875d420f602b20020de/AsyncGear-4.2.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bebd41b4b8bb854a2e2758ad4a69933517ec292ebe531896ae766005e8763d84",
          "md5": "9a30035b32b76c57250b9f3927cf8ae0",
          "sha256": "7a7361ca6868455d8abb76a19077dccee0d07fe3def24971f946d12a6c4fc74e"
        },
        "downloads": -1,
        "filename": "AsyncGear-4.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9a30035b32b76c57250b9f3927cf8ae0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 11698,
        "upload_time": "2021-04-12T06:07:21",
        "upload_time_iso_8601": "2021-04-12T06:07:21.555162Z",
        "url": "https://files.pythonhosted.org/packages/be/bd/41b4b8bb854a2e2758ad4a69933517ec292ebe531896ae766005e8763d84/AsyncGear-4.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c20d83afb2f200b15aa0144fa2ebf41013fc360b98bfdd276742c8c781128eeb",
          "md5": "6dd6154b45cb004cd12c2c7934e51d68",
          "sha256": "ddfe705fa427ee0a7eb96615087dcccc17f1f6a98ba62919c11b2e7eb874aab8"
        },
        "downloads": -1,
        "filename": "AsyncGear-4.3.tar.gz",
        "has_sig": false,
        "md5_digest": "6dd6154b45cb004cd12c2c7934e51d68",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 10380,
        "upload_time": "2021-04-12T06:07:23",
        "upload_time_iso_8601": "2021-04-12T06:07:23.201715Z",
        "url": "https://files.pythonhosted.org/packages/c2/0d/83afb2f200b15aa0144fa2ebf41013fc360b98bfdd276742c8c781128eeb/AsyncGear-4.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "054984fc022ce218c62e70450b20b74847419c91a7aba99a9fe002b7700159f5",
          "md5": "90cd104f2f31bcd61328aeff26015b93",
          "sha256": "5a9352d68f2d62f2f795c190dc65d5075de240f0330efcd5d271384a93156a7b"
        },
        "downloads": -1,
        "filename": "AsyncGear-4.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "90cd104f2f31bcd61328aeff26015b93",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 12002,
        "upload_time": "2021-04-13T04:10:17",
        "upload_time_iso_8601": "2021-04-13T04:10:17.330297Z",
        "url": "https://files.pythonhosted.org/packages/05/49/84fc022ce218c62e70450b20b74847419c91a7aba99a9fe002b7700159f5/AsyncGear-4.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "59a6979df12c79d146a98be9b5fca1b082eec0b06d24865b56b5dc702ffeac95",
          "md5": "45e41c55f6b63010c015db1ee37100b9",
          "sha256": "cd566d5e884b9a7ec243589cbfddc8135e8c234a136a3c6872eb0c443168c770"
        },
        "downloads": -1,
        "filename": "AsyncGear-4.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "45e41c55f6b63010c015db1ee37100b9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 10763,
        "upload_time": "2021-04-13T04:10:19",
        "upload_time_iso_8601": "2021-04-13T04:10:19.096514Z",
        "url": "https://files.pythonhosted.org/packages/59/a6/979df12c79d146a98be9b5fca1b082eec0b06d24865b56b5dc702ffeac95/AsyncGear-4.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "836488036a99e2f60aac547b0751a23d1fe1b05192f68bc66a3f2b5698c8b0e1",
          "md5": "b503be122c37ee8aca9b1d70b265a452",
          "sha256": "386083617ca14aadd9767ef8dd837073e40567ecf7fd7f8e3f9c601d853d5822"
        },
        "downloads": -1,
        "filename": "AsyncGear-4.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b503be122c37ee8aca9b1d70b265a452",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 12237,
        "upload_time": "2021-04-17T10:27:26",
        "upload_time_iso_8601": "2021-04-17T10:27:26.116572Z",
        "url": "https://files.pythonhosted.org/packages/83/64/88036a99e2f60aac547b0751a23d1fe1b05192f68bc66a3f2b5698c8b0e1/AsyncGear-4.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bfc15e45b055d2dc298927d6dd7f2c8648ec53f0cbea84a5e8ed15c84e771a88",
          "md5": "6580ccaaf57456d46502c7c110c2f704",
          "sha256": "c9b1b3c5a947b316968032783916055f8508457b63b9afec2b6cb8c6c89885ee"
        },
        "downloads": -1,
        "filename": "AsyncGear-4.4.tar.gz",
        "has_sig": false,
        "md5_digest": "6580ccaaf57456d46502c7c110c2f704",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 14165,
        "upload_time": "2021-04-17T10:27:28",
        "upload_time_iso_8601": "2021-04-17T10:27:28.131453Z",
        "url": "https://files.pythonhosted.org/packages/bf/c1/5e45b055d2dc298927d6dd7f2c8648ec53f0cbea84a5e8ed15c84e771a88/AsyncGear-4.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "df8ce4500a14a3f565b130e9737388fd559b6d7b190b4b17b680499f14c70ed6",
          "md5": "9b8dc2b70d7d9da8384d3e178ded9f4b",
          "sha256": "aa6659ec211e2db943e70000d95159db257262756e77f6f1c2dc93d08ab6f10e"
        },
        "downloads": -1,
        "filename": "AsyncGear-4.4.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9b8dc2b70d7d9da8384d3e178ded9f4b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 12070,
        "upload_time": "2021-04-18T04:08:40",
        "upload_time_iso_8601": "2021-04-18T04:08:40.168139Z",
        "url": "https://files.pythonhosted.org/packages/df/8c/e4500a14a3f565b130e9737388fd559b6d7b190b4b17b680499f14c70ed6/AsyncGear-4.4.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a0275d076373719ecaa72ac80e8998fb083a6cae2e2af2082854dce870380e00",
          "md5": "e7208a9129ea5a19837d4f60a1ff74e6",
          "sha256": "0e908aa2bea11e51df121a0ba49180a78ac1eb613a3238bc84588bb1aa5fa0f6"
        },
        "downloads": -1,
        "filename": "AsyncGear-4.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e7208a9129ea5a19837d4f60a1ff74e6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 10827,
        "upload_time": "2021-04-18T04:08:42",
        "upload_time_iso_8601": "2021-04-18T04:08:42.249013Z",
        "url": "https://files.pythonhosted.org/packages/a0/27/5d076373719ecaa72ac80e8998fb083a6cae2e2af2082854dce870380e00/AsyncGear-4.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd50d306351c4504ee63eae51cf5975e1d7aa712a789606875c2db911b3939e7",
          "md5": "52ad0c6f1da3e9dd0bfce0f62592e6d5",
          "sha256": "0dd55f15a651d98cc223e709b54fa728e903b8b0fa91edb52a3a1010ec5e4faa"
        },
        "downloads": -1,
        "filename": "AsyncGear-4.5.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "52ad0c6f1da3e9dd0bfce0f62592e6d5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 12107,
        "upload_time": "2021-07-17T12:11:56",
        "upload_time_iso_8601": "2021-07-17T12:11:56.578192Z",
        "url": "https://files.pythonhosted.org/packages/cd/50/d306351c4504ee63eae51cf5975e1d7aa712a789606875c2db911b3939e7/AsyncGear-4.5.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f7fdf9bdb77af7cd6c277a3c734caa0a1300284616c033b7d115a8ffd3b39db5",
          "md5": "6a4e8acf154f94b8f9e6824914522f61",
          "sha256": "2bbbae8b2ae66f526c7f825168ba2f34b8a92d7b6aecf871276e3ad31713083e"
        },
        "downloads": -1,
        "filename": "AsyncGear-4.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6a4e8acf154f94b8f9e6824914522f61",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 10863,
        "upload_time": "2021-07-17T12:11:58",
        "upload_time_iso_8601": "2021-07-17T12:11:58.484478Z",
        "url": "https://files.pythonhosted.org/packages/f7/fd/f9bdb77af7cd6c277a3c734caa0a1300284616c033b7d115a8ffd3b39db5/AsyncGear-4.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.5.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "939ae630a48e0f0512935dce86926ef65d7885c48b9ee19d949047f6883c997c",
          "md5": "e314751401cfdba1af92cd1108f81163",
          "sha256": "00daf67875158107f38144eaac522351473f949acabf86f15668d6f5c111de45"
        },
        "downloads": -1,
        "filename": "AsyncGear-4.5.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e314751401cfdba1af92cd1108f81163",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 12108,
        "upload_time": "2021-07-17T12:52:47",
        "upload_time_iso_8601": "2021-07-17T12:52:47.637345Z",
        "url": "https://files.pythonhosted.org/packages/93/9a/e630a48e0f0512935dce86926ef65d7885c48b9ee19d949047f6883c997c/AsyncGear-4.5.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "017d4f28f3110073a78bc23bdcc0d225156a3e78923707dbe042154376f44eec",
          "md5": "1bbbe3e4d55cdd68ce06c2e99b7f40ed",
          "sha256": "029fa8015d9d26dc96e16a4283b0532ff0fce7a49380e9a9caeae024bcc99dcb"
        },
        "downloads": -1,
        "filename": "AsyncGear-4.5.2.tar.gz",
        "has_sig": false,
        "md5_digest": "1bbbe3e4d55cdd68ce06c2e99b7f40ed",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 10867,
        "upload_time": "2021-07-17T12:52:49",
        "upload_time_iso_8601": "2021-07-17T12:52:49.234977Z",
        "url": "https://files.pythonhosted.org/packages/01/7d/4f28f3110073a78bc23bdcc0d225156a3e78923707dbe042154376f44eec/AsyncGear-4.5.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.5.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd5cef0438d17f59557ee0d6e353f6d3e1bb149218fab6c6f4f1f00102766f29",
          "md5": "2e7676ab84fc4a1b232dbb2e5d1428b4",
          "sha256": "cdee9b278a26b7f0f44fe43c3d8be8e89b8b90f965f3069c5bcbf6eca6fad7c5"
        },
        "downloads": -1,
        "filename": "AsyncGear-4.5.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2e7676ab84fc4a1b232dbb2e5d1428b4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 12111,
        "upload_time": "2021-07-20T04:04:14",
        "upload_time_iso_8601": "2021-07-20T04:04:14.198863Z",
        "url": "https://files.pythonhosted.org/packages/bd/5c/ef0438d17f59557ee0d6e353f6d3e1bb149218fab6c6f4f1f00102766f29/AsyncGear-4.5.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "163a98cb6b20420a55bf77a1d224448a694f547c1d702254c0288ebb3949af96",
          "md5": "ab7afd64fe1144bc27453b5283786537",
          "sha256": "2a6d5ff2571f8060df061d31f54c1262712660d12966ecbb902001bd4680fa69"
        },
        "downloads": -1,
        "filename": "AsyncGear-4.5.3.tar.gz",
        "has_sig": false,
        "md5_digest": "ab7afd64fe1144bc27453b5283786537",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 10870,
        "upload_time": "2021-07-20T04:04:15",
        "upload_time_iso_8601": "2021-07-20T04:04:15.790407Z",
        "url": "https://files.pythonhosted.org/packages/16/3a/98cb6b20420a55bf77a1d224448a694f547c1d702254c0288ebb3949af96/AsyncGear-4.5.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c47e50b7dddc7eb999aac22aa9cb7c9d1530971babaf9c934b4f821d765e0507",
          "md5": "05ab3e579b4720549e786aa8070aa3c6",
          "sha256": "f238a0dbf6537ecaae0db8e32de82185e4b478ba680d4fa1354df01804d7437f"
        },
        "downloads": -1,
        "filename": "AsyncGear-4.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "05ab3e579b4720549e786aa8070aa3c6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 12175,
        "upload_time": "2021-08-12T02:41:32",
        "upload_time_iso_8601": "2021-08-12T02:41:32.234002Z",
        "url": "https://files.pythonhosted.org/packages/c4/7e/50b7dddc7eb999aac22aa9cb7c9d1530971babaf9c934b4f821d765e0507/AsyncGear-4.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c343c8236c67cc9a1335bdfa7e5123662cdcf6a99430f8b350e8605282d5f1c2",
          "md5": "16e50831000490061b604fa857074ca1",
          "sha256": "a201ef70c091baaf41249e9d849d1db003684ae24830c76ed970abdabebf64f2"
        },
        "downloads": -1,
        "filename": "AsyncGear-4.6.tar.gz",
        "has_sig": false,
        "md5_digest": "16e50831000490061b604fa857074ca1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 10928,
        "upload_time": "2021-08-12T02:41:33",
        "upload_time_iso_8601": "2021-08-12T02:41:33.651268Z",
        "url": "https://files.pythonhosted.org/packages/c3/43/c8236c67cc9a1335bdfa7e5123662cdcf6a99430f8b350e8605282d5f1c2/AsyncGear-4.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.6.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "acf4c1f87b3afcacb6f0ebc70c581d2cfd3f9ab01479a84d1534fe85d09dc261",
          "md5": "c87be418633c33fc60217ce5013f4552",
          "sha256": "d434da2d6ac54569dc2ea98df379a4e0879bf9af82bd4c35f011071698be3d4c"
        },
        "downloads": -1,
        "filename": "AsyncGear-4.6.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c87be418633c33fc60217ce5013f4552",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 12222,
        "upload_time": "2021-08-12T02:58:40",
        "upload_time_iso_8601": "2021-08-12T02:58:40.418064Z",
        "url": "https://files.pythonhosted.org/packages/ac/f4/c1f87b3afcacb6f0ebc70c581d2cfd3f9ab01479a84d1534fe85d09dc261/AsyncGear-4.6.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c95eaf132c9ad7942835465eb84e215a4cdedd87535228f719c57c1c95a4448e",
          "md5": "5053fee20fe0f9ce0efe0ced4aeafe4b",
          "sha256": "41eca7d5929a8da08cd67a8af2aa36b38c5b303bae4f7b8c80222a9ae80c6b5e"
        },
        "downloads": -1,
        "filename": "AsyncGear-4.6.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5053fee20fe0f9ce0efe0ced4aeafe4b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 10964,
        "upload_time": "2021-08-12T02:58:42",
        "upload_time_iso_8601": "2021-08-12T02:58:42.081557Z",
        "url": "https://files.pythonhosted.org/packages/c9/5e/af132c9ad7942835465eb84e215a4cdedd87535228f719c57c1c95a4448e/AsyncGear-4.6.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.6.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "32524232ac339bf9e79ff9c596dc393feab496734a7a8896fc56282fa236926f",
          "md5": "94ed5550ab0c6f9e4833863f96e27948",
          "sha256": "0ce819a4a759d54151779b46230e74b3e541ffbcd3ecb0359f56a78789408c60"
        },
        "downloads": -1,
        "filename": "AsyncGear-4.6.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "94ed5550ab0c6f9e4833863f96e27948",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 12256,
        "upload_time": "2021-08-31T01:52:46",
        "upload_time_iso_8601": "2021-08-31T01:52:46.484843Z",
        "url": "https://files.pythonhosted.org/packages/32/52/4232ac339bf9e79ff9c596dc393feab496734a7a8896fc56282fa236926f/AsyncGear-4.6.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "38ff84807c6b607063491501e7b6e83068eecf2ceb5fc7ea494c230de2f12eb3",
          "md5": "a8610f475e298f7ed3b34b43f1b29885",
          "sha256": "b3a9da60bf48284060c414bcce26d9e1435bb559b553cc893dba01e35ba52420"
        },
        "downloads": -1,
        "filename": "AsyncGear-4.6.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a8610f475e298f7ed3b34b43f1b29885",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 11004,
        "upload_time": "2021-08-31T01:52:48",
        "upload_time_iso_8601": "2021-08-31T01:52:48.336606Z",
        "url": "https://files.pythonhosted.org/packages/38/ff/84807c6b607063491501e7b6e83068eecf2ceb5fc7ea494c230de2f12eb3/AsyncGear-4.6.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.6.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a33bbbf65f76293eeb7aff5e4971cdd4c8d12d999ff1719d5bc4debd5b58d3b5",
          "md5": "480a49cb56b6927f083615e0e2afb0cd",
          "sha256": "b33571368c4e62da9a54dd9981945775b357a73d281fb1fd659a4202c6599d2d"
        },
        "downloads": -1,
        "filename": "AsyncGear-4.6.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "480a49cb56b6927f083615e0e2afb0cd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 12302,
        "upload_time": "2021-08-31T07:17:58",
        "upload_time_iso_8601": "2021-08-31T07:17:58.689926Z",
        "url": "https://files.pythonhosted.org/packages/a3/3b/bbf65f76293eeb7aff5e4971cdd4c8d12d999ff1719d5bc4debd5b58d3b5/AsyncGear-4.6.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "76bfe7558b4a931adff04adda7454ca10f6639d7cf0567eecda99e914c4d95fc",
          "md5": "00a2db9f6829ea56a78c9474a012a24c",
          "sha256": "3646d1a27ef8a77adc7fa0b7c43d8ccc2468678d77d9e72a35fbf8d2ce9182dd"
        },
        "downloads": -1,
        "filename": "AsyncGear-4.6.4.tar.gz",
        "has_sig": false,
        "md5_digest": "00a2db9f6829ea56a78c9474a012a24c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 10734,
        "upload_time": "2021-08-31T07:18:00",
        "upload_time_iso_8601": "2021-08-31T07:18:00.849338Z",
        "url": "https://files.pythonhosted.org/packages/76/bf/e7558b4a931adff04adda7454ca10f6639d7cf0567eecda99e914c4d95fc/AsyncGear-4.6.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.6.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c92013d08236b04d9b4f4d40a7d3b833255591cf1ee0f90282d9972a43ae4ed8",
          "md5": "c34f4160a76f673e97162d5b30626a89",
          "sha256": "0d3bf36ba87928517d52cb7159348aa0570a4a09ffe24cfa50d38af85f9ff767"
        },
        "downloads": -1,
        "filename": "AsyncGear-4.6.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c34f4160a76f673e97162d5b30626a89",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 12303,
        "upload_time": "2021-08-31T07:19:11",
        "upload_time_iso_8601": "2021-08-31T07:19:11.208402Z",
        "url": "https://files.pythonhosted.org/packages/c9/20/13d08236b04d9b4f4d40a7d3b833255591cf1ee0f90282d9972a43ae4ed8/AsyncGear-4.6.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c9837e768de067a103350cd3d51c2e4becfd7dea6aa026b115ebf58137839dd3",
          "md5": "165a28b49e4b3230a55dd5a279bbe46a",
          "sha256": "c105028e2ed011ee2154194da3036616190b39f1c010c3c7aa4d94ce07011f43"
        },
        "downloads": -1,
        "filename": "AsyncGear-4.6.5.tar.gz",
        "has_sig": false,
        "md5_digest": "165a28b49e4b3230a55dd5a279bbe46a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 10740,
        "upload_time": "2021-08-31T07:19:13",
        "upload_time_iso_8601": "2021-08-31T07:19:13.057507Z",
        "url": "https://files.pythonhosted.org/packages/c9/83/7e768de067a103350cd3d51c2e4becfd7dea6aa026b115ebf58137839dd3/AsyncGear-4.6.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.6.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cc0e253555530513d2b0e6da83b23aef6aa8acfd6f5d64ac3b2408695ffd3804",
          "md5": "54844af5a61a72f632ae6003cce33b32",
          "sha256": "49af0158dc26d82a1497f06829889125f899f9e1da5c323bc1cdeb6ce3c05bb0"
        },
        "downloads": -1,
        "filename": "AsyncGear-4.6.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "54844af5a61a72f632ae6003cce33b32",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 12294,
        "upload_time": "2021-08-31T07:32:06",
        "upload_time_iso_8601": "2021-08-31T07:32:06.482782Z",
        "url": "https://files.pythonhosted.org/packages/cc/0e/253555530513d2b0e6da83b23aef6aa8acfd6f5d64ac3b2408695ffd3804/AsyncGear-4.6.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9bc2e8396244c653fc158f5e92c7f443e8de164cca62ac95548635e61c5cc617",
          "md5": "fdbc75216cdedaf7c4eb821d9642c288",
          "sha256": "648f0cb42574a83c2c688dae9be3bbd5ebaf75752fee8467523b562f7f77095f"
        },
        "downloads": -1,
        "filename": "AsyncGear-4.6.6.tar.gz",
        "has_sig": false,
        "md5_digest": "fdbc75216cdedaf7c4eb821d9642c288",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 10723,
        "upload_time": "2021-08-31T07:32:08",
        "upload_time_iso_8601": "2021-08-31T07:32:08.575023Z",
        "url": "https://files.pythonhosted.org/packages/9b/c2/e8396244c653fc158f5e92c7f443e8de164cca62ac95548635e61c5cc617/AsyncGear-4.6.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ed9f608d02d429ac1d3f533bbf5aaf9e39014c775d384f92a7f90dd7384b4617",
          "md5": "54775b0bfb17dc9cb85a4219caa3688a",
          "sha256": "e0dd6c11f32b009df13abc3c55cae822003b4694e4b300d4ad41f5c51dd2198c"
        },
        "downloads": -1,
        "filename": "AsyncGear-4.7.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "54775b0bfb17dc9cb85a4219caa3688a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 13263,
        "upload_time": "2021-09-13T09:11:14",
        "upload_time_iso_8601": "2021-09-13T09:11:14.740747Z",
        "url": "https://files.pythonhosted.org/packages/ed/9f/608d02d429ac1d3f533bbf5aaf9e39014c775d384f92a7f90dd7384b4617/AsyncGear-4.7.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6270111600fbc241165f2ba27d68a20c2dfa0c5f5e96344530ca1723b2b7eec1",
          "md5": "bf6e5edc26fcc803f6c4b024c9265f48",
          "sha256": "009d5f9faaaf74801b89ec58b7893657474b5ecf3b26178380a4fb5637a89b4c"
        },
        "downloads": -1,
        "filename": "AsyncGear-4.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bf6e5edc26fcc803f6c4b024c9265f48",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 11417,
        "upload_time": "2021-09-13T09:11:16",
        "upload_time_iso_8601": "2021-09-13T09:11:16.674804Z",
        "url": "https://files.pythonhosted.org/packages/62/70/111600fbc241165f2ba27d68a20c2dfa0c5f5e96344530ca1723b2b7eec1/AsyncGear-4.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.7.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dd02478453f89e5e9df16b67fb26d89160dfc7e01e9511fa8192255fff5ea8cd",
          "md5": "81f30f65879dfa338fce9d6c11839279",
          "sha256": "bdb0e1e90f3052692642bb82797e4ffcede8b2be058c435443d976f16b3d2dd9"
        },
        "downloads": -1,
        "filename": "AsyncGear-4.7.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "81f30f65879dfa338fce9d6c11839279",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 13342,
        "upload_time": "2021-10-09T09:04:41",
        "upload_time_iso_8601": "2021-10-09T09:04:41.589494Z",
        "url": "https://files.pythonhosted.org/packages/dd/02/478453f89e5e9df16b67fb26d89160dfc7e01e9511fa8192255fff5ea8cd/AsyncGear-4.7.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f46b58511f865339a576ca10407e3a774a919bbe5495e73fa78d9f255e899b47",
          "md5": "33e2629f713e681e2d3e49a5e0bd42de",
          "sha256": "f895693e327eca8e3ab47042eb5e822642b534be8d718134e69f73df7f4ce178"
        },
        "downloads": -1,
        "filename": "AsyncGear-4.7.1.tar.gz",
        "has_sig": false,
        "md5_digest": "33e2629f713e681e2d3e49a5e0bd42de",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 11438,
        "upload_time": "2021-10-09T09:04:43",
        "upload_time_iso_8601": "2021-10-09T09:04:43.337037Z",
        "url": "https://files.pythonhosted.org/packages/f4/6b/58511f865339a576ca10407e3a774a919bbe5495e73fa78d9f255e899b47/AsyncGear-4.7.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.7.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "573d73c1d7f2160c605e6fcae1eff66c09ac2ccbb9646840717e9f226bf630a3",
          "md5": "7fa31aa2f1869a14dc43f99932105089",
          "sha256": "16af3bdc4d1502643dea4ceb14c26dd0628006126b8452c858fa644c590081e9"
        },
        "downloads": -1,
        "filename": "AsyncGear-4.7.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7fa31aa2f1869a14dc43f99932105089",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 13368,
        "upload_time": "2021-10-09T09:10:30",
        "upload_time_iso_8601": "2021-10-09T09:10:30.779495Z",
        "url": "https://files.pythonhosted.org/packages/57/3d/73c1d7f2160c605e6fcae1eff66c09ac2ccbb9646840717e9f226bf630a3/AsyncGear-4.7.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9050361643b5eac43739a0d2dcb507dc41486ca749000db9ed7313c9d742d00c",
          "md5": "74f629f997940b4585b554c7a4f26da4",
          "sha256": "6bf0ac270017bd45d8b8cb4f173d28b5ccbf3fd6bb576b0903a5f03279f20b19"
        },
        "downloads": -1,
        "filename": "AsyncGear-4.7.2.tar.gz",
        "has_sig": false,
        "md5_digest": "74f629f997940b4585b554c7a4f26da4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 11458,
        "upload_time": "2021-10-09T09:10:32",
        "upload_time_iso_8601": "2021-10-09T09:10:32.560792Z",
        "url": "https://files.pythonhosted.org/packages/90/50/361643b5eac43739a0d2dcb507dc41486ca749000db9ed7313c9d742d00c/AsyncGear-4.7.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "573d73c1d7f2160c605e6fcae1eff66c09ac2ccbb9646840717e9f226bf630a3",
        "md5": "7fa31aa2f1869a14dc43f99932105089",
        "sha256": "16af3bdc4d1502643dea4ceb14c26dd0628006126b8452c858fa644c590081e9"
      },
      "downloads": -1,
      "filename": "AsyncGear-4.7.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7fa31aa2f1869a14dc43f99932105089",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 13368,
      "upload_time": "2021-10-09T09:10:30",
      "upload_time_iso_8601": "2021-10-09T09:10:30.779495Z",
      "url": "https://files.pythonhosted.org/packages/57/3d/73c1d7f2160c605e6fcae1eff66c09ac2ccbb9646840717e9f226bf630a3/AsyncGear-4.7.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9050361643b5eac43739a0d2dcb507dc41486ca749000db9ed7313c9d742d00c",
        "md5": "74f629f997940b4585b554c7a4f26da4",
        "sha256": "6bf0ac270017bd45d8b8cb4f173d28b5ccbf3fd6bb576b0903a5f03279f20b19"
      },
      "downloads": -1,
      "filename": "AsyncGear-4.7.2.tar.gz",
      "has_sig": false,
      "md5_digest": "74f629f997940b4585b554c7a4f26da4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 11458,
      "upload_time": "2021-10-09T09:10:32",
      "upload_time_iso_8601": "2021-10-09T09:10:32.560792Z",
      "url": "https://files.pythonhosted.org/packages/90/50/361643b5eac43739a0d2dcb507dc41486ca749000db9ed7313c9d742d00c/AsyncGear-4.7.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}