{
  "info": {
    "author": "Jaime Victoria",
    "author_email": "jaime@michelada.io",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Vexbi Python Library\n====================\n\n|Coverage Status| |Build Status| |PyPI version|\n\nPython library for `Vexbi <https://www.vexbi.com/>`__ API. Please read\nour `documentation <#>`__ for instructions on how to start using the\nAPI.\n\nRequirements\n------------\n\n-  Python 2.7.0+\n-  Git 1.7.0+\n\nGetting started\n---------------\n\ninstall dependencies:\n~~~~~~~~~~~~~~~~~~~~~\n\n::\n\n    pip install -r requirements.txt\n\nUsage\n-----\n\n#create\\_order\n~~~~~~~~~~~~~~\n\n/v2/orders\n~~~~~~~~~~\n\n***POST***\n''''''''''\n\n**Summary:** Create a Sell/Buy order. **Description:** Create a Sell/Buy\norder.\n\n**Parameters**\n\n+-------+-------------+--------------+-----------+-------+\n| Name  | Located in  | Description  | Required  | Schem |\n|       |             |              |           | a     |\n+=======+=============+==============+===========+=======+\n| marke | formData    | Unique       | Yes       | strin |\n| t     |             | market id.   |           | g     |\n|       |             | It's always  |           |       |\n|       |             | in the form  |           |       |\n|       |             | of xxxyyy,   |           |       |\n|       |             | where xxx is |           |       |\n|       |             | the base     |           |       |\n|       |             | currency     |           |       |\n|       |             | code, yyy is |           |       |\n|       |             | the quote    |           |       |\n|       |             | currency     |           |       |\n|       |             | code, e.g.   |           |       |\n|       |             | 'btcusd'.    |           |       |\n|       |             | All          |           |       |\n|       |             | available    |           |       |\n|       |             | markets can  |           |       |\n|       |             | be found at  |           |       |\n|       |             | /api/v2/mark |           |       |\n|       |             | ets.         |           |       |\n+-------+-------------+--------------+-----------+-------+\n| side  | formData    | Either       | Yes       | strin |\n|       |             | 'sell' or    |           | g     |\n|       |             | 'buy'.       |           |       |\n+-------+-------------+--------------+-----------+-------+\n| volum | formData    | The amount   | Yes       | strin |\n| e     |             | user want to |           | g     |\n|       |             | sell/buy. An |           |       |\n|       |             | order could  |           |       |\n|       |             | be partially |           |       |\n|       |             | executed,    |           |       |\n|       |             | e.g. an      |           |       |\n|       |             | order sell 5 |           |       |\n|       |             | btc can be   |           |       |\n|       |             | matched with |           |       |\n|       |             | a buy 3 btc  |           |       |\n|       |             | order, left  |           |       |\n|       |             | 2 btc to be  |           |       |\n|       |             | sold; in     |           |       |\n|       |             | this case    |           |       |\n|       |             | the order's  |           |       |\n|       |             | volume would |           |       |\n|       |             | be '5.0',    |           |       |\n|       |             | its          |           |       |\n|       |             | remaining\\_v |           |       |\n|       |             | olume        |           |       |\n|       |             | would be     |           |       |\n|       |             | '2.0', its   |           |       |\n|       |             | executed     |           |       |\n|       |             | volume is    |           |       |\n|       |             | '3.0'.       |           |       |\n+-------+-------------+--------------+-----------+-------+\n| price | formData    | Price for    | No        | strin |\n|       |             | each unit.   |           | g     |\n|       |             | e.g. If you  |           |       |\n|       |             | want to      |           |       |\n|       |             | sell/buy 1   |           |       |\n|       |             | btc at 3000  |           |       |\n|       |             | usd, the     |           |       |\n|       |             | price is     |           |       |\n|       |             | '3000.0'     |           |       |\n+-------+-------------+--------------+-----------+-------+\n| ord\\_ | formData    | The type of  | No        | strin |\n| type  |             | order, can   | (defaults | g     |\n|       |             | be           | to        |       |\n|       |             | ``market``   | ``limit`` |       |\n|       |             | or ``limit`` |           |       |\n+-------+-------------+--------------+-----------+-------+\n\n**Responses**\n\n+--------+----------------------------+\n| Code   | Description                |\n+========+============================+\n| 201    | Create a Sell/Buy order.   |\n+--------+----------------------------+\n\n#delete\\_order\n~~~~~~~~~~~~~~\n\n/v2/order/delete\n~~~~~~~~~~~~~~~~\n\n***POST***\n''''''''''\n\n**Summary:** Cancel an order. **Description:** Cancel an order.\n\n**Parameters**\n\n+--------+--------------+--------------------+------------+-----------+\n| Name   | Located in   | Description        | Required   | Schema    |\n+========+==============+====================+============+===========+\n| id     | formData     | Unique order id.   | Yes        | integer   |\n+--------+--------------+--------------------+------------+-----------+\n\n**Responses**\n\n+--------+--------------------+\n| Code   | Description        |\n+========+====================+\n| 201    | Cancel an order.   |\n+--------+--------------------+\n\n#clear\\_all\n~~~~~~~~~~~\n\n/v2/orders/clear\n~~~~~~~~~~~~~~~~\n\n***POST***\n''''''''''\n\n**Summary:** Cancel all my orders. **Description:** Cancel all my\norders.\n\n**Parameters**\n\n+-------+-------------+--------------+-----------+-------+\n| Name  | Located in  | Description  | Required  | Schem |\n|       |             |              |           | a     |\n+=======+=============+==============+===========+=======+\n| side  | formData    | If present,  | No        | strin |\n|       |             | only sell    |           | g     |\n|       |             | orders       |           |       |\n|       |             | (asks) or    |           |       |\n|       |             | buy orders   |           |       |\n|       |             | (bids) will  |           |       |\n|       |             | be           |           |       |\n|       |             | canncelled.  |           |       |\n+-------+-------------+--------------+-----------+-------+\n\n**Responses**\n\n+--------+-------------------------+\n| Code   | Description             |\n+========+=========================+\n| 201    | Cancel all my orders.   |\n+--------+-------------------------+\n\n#get\\_orders\n~~~~~~~~~~~~\n\n/v2/orders\n~~~~~~~~~~\n\n***GET***\n'''''''''\n\n**Summary:** Get your orders, results is paginated. **Description:** Get\nyour orders, results is paginated.\n\n**Parameters**\n\n+-------+-------------+--------------+-----------+-------+\n| Name  | Located in  | Description  | Required  | Schem |\n|       |             |              |           | a     |\n+=======+=============+==============+===========+=======+\n| marke | query       | Unique       | Yes       | strin |\n| t     |             | market id.   |           | g     |\n|       |             | It's always  |           |       |\n|       |             | in the form  |           |       |\n|       |             | of xxxyyy,   |           |       |\n|       |             | where xxx is |           |       |\n|       |             | the base     |           |       |\n|       |             | currency     |           |       |\n|       |             | code, yyy is |           |       |\n|       |             | the quote    |           |       |\n|       |             | currency     |           |       |\n|       |             | code, e.g.   |           |       |\n|       |             | 'btcusd'.    |           |       |\n|       |             | All          |           |       |\n|       |             | available    |           |       |\n|       |             | markets can  |           |       |\n|       |             | be found at  |           |       |\n|       |             | /api/v2/mark |           |       |\n|       |             | ets.         |           |       |\n+-------+-------------+--------------+-----------+-------+\n| state | query       | Filter order | No        | strin |\n|       |             | by state,    |           | g     |\n|       |             | default to   |           |       |\n|       |             | 'wait'       |           |       |\n|       |             | (active      |           |       |\n|       |             | orders).     |           |       |\n+-------+-------------+--------------+-----------+-------+\n| limit | query       | Limit the    | No        | integ |\n|       |             | number of    |           | er    |\n|       |             | returned     |           |       |\n|       |             | orders,      |           |       |\n|       |             | default to   |           |       |\n|       |             | 100.         |           |       |\n+-------+-------------+--------------+-----------+-------+\n| page  | query       | Specify the  | No        | integ |\n|       |             | page of      |           | er    |\n|       |             | paginated    |           |       |\n|       |             | results.     |           |       |\n+-------+-------------+--------------+-----------+-------+\n| order | query       | If set,      | No        | strin |\n| \\_by  |             | returned     |           | g     |\n|       |             | orders will  |           |       |\n|       |             | be sorted in |           |       |\n|       |             | specific     |           |       |\n|       |             | order,       |           |       |\n|       |             | default to   |           |       |\n|       |             | 'asc'.       |           |       |\n+-------+-------------+--------------+-----------+-------+\n\n**Responses**\n\n+--------+------------------------------------------+\n| Code   | Description                              |\n+========+==========================================+\n| 200    | Get your orders, results is paginated.   |\n+--------+------------------------------------------+\n\n#get\\_order\n~~~~~~~~~~~\n\n/v2/order\n~~~~~~~~~\n\n***GET***\n'''''''''\n\n**Summary:** Get information of specified order. **Description:** Get\ninformation of specified order.\n\n**Parameters**\n\n+--------+--------------+--------------------+------------+-----------+\n| Name   | Located in   | Description        | Required   | Schema    |\n+========+==============+====================+============+===========+\n| id     | query        | Unique order id.   | Yes        | integer   |\n+--------+--------------+--------------------+------------+-----------+\n\n#get\\_account\\_info\n~~~~~~~~~~~~~~~~~~~\n\n/v2/members/me\n~~~~~~~~~~~~~~\n\n***GET***\n'''''''''\n\n**Summary:** Get your profile and accounts info. **Description:** Get\nyour profile and accounts info.\n\n**Responses**\n\n+--------+---------------------------------------+\n| Code   | Description                           |\n+========+=======================================+\n| 200    | Get your profile and accounts info.   |\n+--------+---------------------------------------+\n\n#get\\_available\\_markets\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n/v2/markets\n~~~~~~~~~~~\n\n***GET***\n'''''''''\n\n**Summary:** Get all available markets.\n\n**Description:** Get all available markets.\n\n**Responses**\n\n+--------+------------------------------+\n| Code   | Description                  |\n+========+==============================+\n| 200    | Get all available markets.   |\n+--------+------------------------------+\n\n#tickers\n~~~~~~~~\n\n/v2/tickers\n~~~~~~~~~~~\n\n***GET***\n'''''''''\n\n**Summary:** Get ticker of all markets. **Description:** Get ticker of\nall markets.\n\n**Responses**\n\n+--------+------------------------------+\n| Code   | Description                  |\n+========+==============================+\n| 200    | Get ticker of all markets.   |\n+--------+------------------------------+\n\n#trades\n~~~~~~~\n\n/v2/trades\n~~~~~~~~~~\n\n***GET***\n'''''''''\n\n**Summary:** Get recent trades on market, each trade is included only\nonce. Trades are sorted in reverse creation order. **Description:** Get\nrecent trades on market, each trade is included only once. Trades are\nsorted in reverse creation order.\n\n**Parameters**\n\n+-------+-------------+--------------+-----------+-------+\n| Name  | Located in  | Description  | Required  | Schem |\n|       |             |              |           | a     |\n+=======+=============+==============+===========+=======+\n| marke | query       | Unique       | Yes       | strin |\n| t     |             | market id.   |           | g     |\n|       |             | It's always  |           |       |\n|       |             | in the form  |           |       |\n|       |             | of xxxyyy,   |           |       |\n|       |             | where xxx is |           |       |\n|       |             | the base     |           |       |\n|       |             | currency     |           |       |\n|       |             | code, yyy is |           |       |\n|       |             | the quote    |           |       |\n|       |             | currency     |           |       |\n|       |             | code, e.g.   |           |       |\n|       |             | 'btcusd'.    |           |       |\n|       |             | All          |           |       |\n|       |             | available    |           |       |\n|       |             | markets can  |           |       |\n|       |             | be found at  |           |       |\n|       |             | /api/v2/mark |           |       |\n|       |             | ets.         |           |       |\n+-------+-------------+--------------+-----------+-------+\n| limit | query       | Limit the    | No        | integ |\n|       |             | number of    |           | er    |\n|       |             | returned     |           |       |\n|       |             | trades.      |           |       |\n|       |             | Default to   |           |       |\n|       |             | 50.          |           |       |\n+-------+-------------+--------------+-----------+-------+\n| times | query       | An integer   | No        | integ |\n| tamp  |             | represents   |           | er    |\n|       |             | the seconds  |           |       |\n|       |             | elapsed      |           |       |\n|       |             | since Unix   |           |       |\n|       |             | epoch. If    |           |       |\n|       |             | set, only    |           |       |\n|       |             | trades       |           |       |\n|       |             | executed     |           |       |\n|       |             | before the   |           |       |\n|       |             | time will be |           |       |\n|       |             | returned.    |           |       |\n+-------+-------------+--------------+-----------+-------+\n| from  | query       | Trade id. If | No        | integ |\n|       |             | set, only    |           | er    |\n|       |             | trades       |           |       |\n|       |             | created      |           |       |\n|       |             | after the    |           |       |\n|       |             | trade will   |           |       |\n|       |             | be returned. |           |       |\n+-------+-------------+--------------+-----------+-------+\n| to    | query       | Trade id. If | No        | integ |\n|       |             | set, only    |           | er    |\n|       |             | trades       |           |       |\n|       |             | created      |           |       |\n|       |             | before the   |           |       |\n|       |             | trade will   |           |       |\n|       |             | be returned. |           |       |\n+-------+-------------+--------------+-----------+-------+\n| order | query       | If set,      | No        | strin |\n| \\_by  |             | returned     |           | g     |\n|       |             | trades will  |           |       |\n|       |             | be sorted in |           |       |\n|       |             | specific     |           |       |\n|       |             | order,       |           |       |\n|       |             | default to   |           |       |\n|       |             | 'desc'.      |           |       |\n+-------+-------------+--------------+-----------+-------+\n\n**Responses**\n\n+-------+--------------+\n| Code  | Description  |\n+=======+==============+\n| 200   | Get recent   |\n|       | trades on    |\n|       | market, each |\n|       | trade is     |\n|       | included     |\n|       | only once.   |\n|       | Trades are   |\n|       | sorted in    |\n|       | reverse      |\n|       | creation     |\n|       | order.       |\n+-------+--------------+\n\n#my\\_trades\n~~~~~~~~~~~\n\n/v2/trades/my\n~~~~~~~~~~~~~\n\n***GET***\n'''''''''\n\n**Summary:** Get your executed trades. Trades are sorted in reverse\ncreation order. **Description:** Get your executed trades. Trades are\nsorted in reverse creation order.\n\n**Parameters**\n\n+-------+-------------+--------------+-----------+-------+\n| Name  | Located in  | Description  | Required  | Schem |\n|       |             |              |           | a     |\n+=======+=============+==============+===========+=======+\n| marke | query       | Unique       | Yes       | strin |\n| t     |             | market id.   |           | g     |\n|       |             | It's always  |           |       |\n|       |             | in the form  |           |       |\n|       |             | of xxxyyy,   |           |       |\n|       |             | where xxx is |           |       |\n|       |             | the base     |           |       |\n|       |             | currency     |           |       |\n|       |             | code, yyy is |           |       |\n|       |             | the quote    |           |       |\n|       |             | currency     |           |       |\n|       |             | code, e.g.   |           |       |\n|       |             | 'btcusd'.    |           |       |\n|       |             | All          |           |       |\n|       |             | available    |           |       |\n|       |             | markets can  |           |       |\n|       |             | be found at  |           |       |\n|       |             | /api/v2/mark |           |       |\n|       |             | ets.         |           |       |\n+-------+-------------+--------------+-----------+-------+\n| limit | query       | Limit the    | No        | integ |\n|       |             | number of    |           | er    |\n|       |             | returned     |           |       |\n|       |             | trades.      |           |       |\n|       |             | Default to   |           |       |\n|       |             | 50.          |           |       |\n+-------+-------------+--------------+-----------+-------+\n| times | query       | An integer   | No        | integ |\n| tamp  |             | represents   |           | er    |\n|       |             | the seconds  |           |       |\n|       |             | elapsed      |           |       |\n|       |             | since Unix   |           |       |\n|       |             | epoch. If    |           |       |\n|       |             | set, only    |           |       |\n|       |             | trades       |           |       |\n|       |             | executed     |           |       |\n|       |             | before the   |           |       |\n|       |             | time will be |           |       |\n|       |             | returned.    |           |       |\n+-------+-------------+--------------+-----------+-------+\n| from  | query       | Trade id. If | No        | integ |\n|       |             | set, only    |           | er    |\n|       |             | trades       |           |       |\n|       |             | created      |           |       |\n|       |             | after the    |           |       |\n|       |             | trade will   |           |       |\n|       |             | be returned. |           |       |\n+-------+-------------+--------------+-----------+-------+\n| to    | query       | Trade id. If | No        | integ |\n|       |             | set, only    |           | er    |\n|       |             | trades       |           |       |\n|       |             | created      |           |       |\n|       |             | before the   |           |       |\n|       |             | trade will   |           |       |\n|       |             | be returned. |           |       |\n+-------+-------------+--------------+-----------+-------+\n| order | query       | If set,      | No        | strin |\n| \\_by  |             | returned     |           | g     |\n|       |             | trades will  |           |       |\n|       |             | be sorted in |           |       |\n|       |             | specific     |           |       |\n|       |             | order,       |           |       |\n|       |             | default to   |           |       |\n|       |             | 'desc'.      |           |       |\n+-------+-------------+--------------+-----------+-------+\n\n**Responses**\n\n+-------+--------------+\n| Code  | Description  |\n+=======+==============+\n| 200   | Get your     |\n|       | executed     |\n|       | trades.      |\n|       | Trades are   |\n|       | sorted in    |\n|       | reverse      |\n|       | creation     |\n|       | order.       |\n+-------+--------------+\n\nTest\n----\n\nJust clone the repo, install dependencies as you would in development\nand run ``nose2`` or ``python setup.py test``\n\nContributing\n------------\n\n1. Fork it ( https://github.com/vexbiexchange/python-api-client/fork )\n2. Create your feature branch (``git checkout -b my-new-feature``)\n3. Commit your changes (``git commit -am 'Add some feature'``)\n4. Push to the branch (``git push origin my-new-feature``)\n5. Create a new Pull Request\n\n.. |Coverage Status| image:: https://coveralls.io/repos/github/vexbiexchange/python-api-client/badge.svg?branch=master\n   :target: https://coveralls.io/github/vexbiexchange/python-api-client?branch=master\n.. |Build Status| image:: https://travis-ci.org/vexbiexchange/python-api-client.svg?branch=master\n   :target: https://travis-ci.org/vexbiexchange/python-api-client\n.. |PyPI version| image:: https://badge.fury.io/py/vexbi.svg\n   :target: https://badge.fury.io/py/vexbi\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "https://github.com/vexbiexchange/python-api-client/tarball/v0.0.6",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/vexbiexchange/python-api-client",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "vexbi",
    "package_url": "https://pypi.org/project/vexbi/",
    "platform": "",
    "project_url": "https://pypi.org/project/vexbi/",
    "project_urls": {
      "Download": "https://github.com/vexbiexchange/python-api-client/tarball/v0.0.6",
      "Homepage": "https://github.com/vexbiexchange/python-api-client"
    },
    "release_url": "https://pypi.org/project/vexbi/0.0.1/",
    "requires_dist": [
      "requests"
    ],
    "requires_python": "",
    "summary": "Python API Client library for Vexbi.com",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4752810,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c1cb81407624d8eac846b04c5639bcd9b00eb0227c7541bafb9120d506180bf4",
          "md5": "d635422a2f303d84cd50f85620168f3d",
          "sha256": "3f27f5a87e202cc1fe222aa80697d11cd755e6127504ee27747435b9d823afac"
        },
        "downloads": -1,
        "filename": "vexbi-0.0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d635422a2f303d84cd50f85620168f3d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9014,
        "upload_time": "2019-01-29T01:35:33",
        "upload_time_iso_8601": "2019-01-29T01:35:33.116791Z",
        "url": "https://files.pythonhosted.org/packages/c1/cb/81407624d8eac846b04c5639bcd9b00eb0227c7541bafb9120d506180bf4/vexbi-0.0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "044fa828e0e5b63c3d040293c5b5d5632340cf34cb3e5d043cc752e8ed09ace9",
          "md5": "7b61f636649238664fc56a005e7c3b29",
          "sha256": "1d0b0c69550bfb0946c6867ab34fa6abca15db78f35e595132e3861617e16502"
        },
        "downloads": -1,
        "filename": "vexbi-0.0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7b61f636649238664fc56a005e7c3b29",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10784,
        "upload_time": "2019-01-29T01:35:34",
        "upload_time_iso_8601": "2019-01-29T01:35:34.513563Z",
        "url": "https://files.pythonhosted.org/packages/04/4f/a828e0e5b63c3d040293c5b5d5632340cf34cb3e5d043cc752e8ed09ace9/vexbi-0.0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c1cb81407624d8eac846b04c5639bcd9b00eb0227c7541bafb9120d506180bf4",
        "md5": "d635422a2f303d84cd50f85620168f3d",
        "sha256": "3f27f5a87e202cc1fe222aa80697d11cd755e6127504ee27747435b9d823afac"
      },
      "downloads": -1,
      "filename": "vexbi-0.0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d635422a2f303d84cd50f85620168f3d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 9014,
      "upload_time": "2019-01-29T01:35:33",
      "upload_time_iso_8601": "2019-01-29T01:35:33.116791Z",
      "url": "https://files.pythonhosted.org/packages/c1/cb/81407624d8eac846b04c5639bcd9b00eb0227c7541bafb9120d506180bf4/vexbi-0.0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "044fa828e0e5b63c3d040293c5b5d5632340cf34cb3e5d043cc752e8ed09ace9",
        "md5": "7b61f636649238664fc56a005e7c3b29",
        "sha256": "1d0b0c69550bfb0946c6867ab34fa6abca15db78f35e595132e3861617e16502"
      },
      "downloads": -1,
      "filename": "vexbi-0.0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "7b61f636649238664fc56a005e7c3b29",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10784,
      "upload_time": "2019-01-29T01:35:34",
      "upload_time_iso_8601": "2019-01-29T01:35:34.513563Z",
      "url": "https://files.pythonhosted.org/packages/04/4f/a828e0e5b63c3d040293c5b5d5632340cf34cb3e5d043cc752e8ed09ace9/vexbi-0.0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}