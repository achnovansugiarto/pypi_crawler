{
  "info": {
    "author": "",
    "author_email": "Oriol Alfonso <oriol@oalfonso.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Framework :: AsyncIO",
      "Framework :: aiohttp",
      "Intended Audience :: Developers",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# FastGET\n\n<p align=\"center\">\n    <em>Easy parallel and concurrent GET requests</em>\n</p>\n\n<p align=\"center\">\n<a href=\"https://github.com/oalfonso-o/fastget/actions?query=workflow%3ACI+event%3Apush+branch%3Amain\" target=\"_blank\">\n    <img src=\"https://github.com/oalfonso-o/fastget/workflows/CI/badge.svg?event=push&branch=main\" alt=\"Test\">\n</a>\n<!-- <a href=\"https://coverage-badge.samuelcolvin.workers.dev/redirect/tiangolo/fastapi\" target=\"_blank\">\n    <img src=\"https://coverage-badge.samuelcolvin.workers.dev/tiangolo/fastapi.svg\" alt=\"Coverage\">\n</a> -->\n<a href=\"https://pypi.org/project/fastget\" target=\"_blank\">\n    <img src=\"https://img.shields.io/pypi/v/fastget?color=%2334D058&label=pypi%20package\" alt=\"Package version\">\n</a>\n<a href=\"https://pypi.org/project/fastget\" target=\"_blank\">\n    <img src=\"https://img.shields.io/pypi/pyversions/fastget.svg?color=%2334D058\" alt=\"Supported Python versions\">\n</a>\n</p>\n\nThe idea of this package is to wrap `multiprocessing` and `async` concurrency and allow the user to perform thousands of requests in parallel and concurrently without having to worry about pools of processes and async event loops.\n\nIt only supports GET requests. More methods could be implemented but this initial version is as simple as it. Also implementing other methods will break the beauty of the name.\n\nThe input is an iterable and the output is a generator. As soon as the requests get answer they are yielded until all the requests of the input are done.\n\nEach element of the iterable is a tuple with `Id` and `URL`.\nEach element yielded is a tuple with the same `Id` and the json response. With the `Id` you can\nlater map the responses.\n\nThis is useful for cases where you have a huge amount of requests to perform to an API and you\nneed to do them as fast as possible.\n\nThe client by default detects the number of CPUs available and starts one process per each CPU.\nThen chunks the input iterator to provide requests to all the processes.\nEach process for each task opens an event loop and performs all those requests concurrently. Once\nall requests are awaited, the chunk with all the responses is returned back to the main process.\nThis is why we can see that our generator is receiving the responses un bulks.\n\n## Install:\n\nFrom PyPi:\n```\npip install fastget\n```\n\n## Usage:\n\nUse always context manager:\n\n``` python\n>>> from fastget import FastGET\n>>> with FastGET() as client:\n...     responses = client.get([(1, \"http://localhost:12345\"), (2, \"http://localhost:12345\")])\n...     for response in responses:\n...         print(response)\n... \nfastget             INFO      Start processing requests with FastGET parameters:\nfastget             INFO        num_workers:        8\nfastget             INFO        single_submit_size: 5000\nfastget             INFO        pool_submit_size:   50000\nfastget             INFO        queue_max_size:     100000\n(2, {'message': 'Hello World!'})\n(1, {'message': 'Hello World!'})\nfastget             INFO      All requests processed:\nfastget             INFO        Total requests: 2\nfastget             INFO        Total time:     0.05\nfastget             INFO        Requests/s:     34.16\n```\n\nYou can provide a generator to don't blow up the memory:\n``` python\n>>> from fastget import FastGET\n>>> from collections import deque\n>>> \n>>> def mygen():\n...     for i in range(100_000):\n...          yield (i, \"http://localhost:12345\")\n... \n>>> with FastGET() as client:\n...     responses = client.get(mygen())\n...     _ = deque(responses)\n... \nfastget             INFO      Start processing requests with FastGET parameters:\nfastget             INFO        num_workers:        8\nfastget             INFO        queue_max_size:     100000\nfastget             INFO        input_chunk_size:   10000\nfastget             INFO        pool_submit_size:   1000\nfastget             INFO      All requests processed:\nfastget             INFO        Total requests:     100000\nfastget             INFO        Total time (s):     36.35\nfastget             INFO        Requests/s:         2750.93\n```\n\n## Parameters\n\nYou can configure some parameters like the amount of workers or how the client chunks the input:\n\n[fastget.FastGET](https://github.com/oalfonso-o/FastGET/blob/main/fastget/client.py#L24) parameters:\n\n- `num_workers`:\n    - type: int\n    - default: os.cpu_count()\n    - description: Number of processes to open with multiprocessing\n- `queue_max_size`:\n    - type: int\n    - default: 100.000\n    - description: Maximum number of items that can be enqueued. This default number proved to not blow up the memory and to have enough items in the queue to have always work to do with 8 processes. Feel free to adjust it, just watch out the memory usage.\n- `input_chunk_size`:\n    - type: int\n    - default: 10.000\n    - description: This is the size of the chunks for the input. We will be reading the input iterator in chunks of this size up to `queue_max_size`.\n- `pool_submit_size`:\n    - type: int\n    - default: 1.000\n    - description: Each chunk of `input_chunk_size` will also be chunked to minor chunks of this size before being submited to the pool. The workers will be consuming chunks of this size and each of these chunks will be requested in an event loop.\n\n\n[fastget.FastGET.get](https://github.com/oalfonso-o/FastGET/blob/main/fastget/client.py#L42)\n\nParameters:\n\n- `ids_and_urls`:\n    - type: Iterable[Tuple[int, str]]\n    - required: True\n    - description: Provide the tuples containing the ID of the request and the URL to be requested.\n\nResponse: Generator[Tuple[int, str], None, None]. For each input tuple an output tuple will be returned containing the same ID + the json of the response.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT License  Copyright (c) 2023 Oriol Alfonso Riba  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fastget",
    "package_url": "https://pypi.org/project/fastget/",
    "platform": null,
    "project_url": "https://pypi.org/project/fastget/",
    "project_urls": {
      "documentation": "https://github.com/oalfonso-o/FastGET/blob/main/README.md",
      "repository": "https://github.com/oalfonso-o/FastGET"
    },
    "release_url": "https://pypi.org/project/fastget/0.6.0/",
    "requires_dist": [
      "aiohttp<4,>=3.8.4",
      "importlib-metadata; python_version < '3.9'"
    ],
    "requires_python": ">=3.8",
    "summary": "Simple lightweight HTTP client to perform GET requests in parallel with multiprocessing and in each process use aiohttp to do them concurrently and maximize the throughtput.",
    "version": "0.6.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17413184,
  "releases": {
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e68303beb01cd02558098b1ef87ff21fab3fca4f622166063736a305cc9abf96",
          "md5": "2c4db0940d9f282b1115588edc5550d5",
          "sha256": "27ab822adf13feeb5e7aabfa79006508ab845f6f273b6acfa819c366cc0703e3"
        },
        "downloads": -1,
        "filename": "fastget-0.5.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2c4db0940d9f282b1115588edc5550d5",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 6647,
        "upload_time": "2023-03-22T17:12:57",
        "upload_time_iso_8601": "2023-03-22T17:12:57.790517Z",
        "url": "https://files.pythonhosted.org/packages/e6/83/03beb01cd02558098b1ef87ff21fab3fca4f622166063736a305cc9abf96/fastget-0.5.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6e2110113f1aaf691676fdf98b2375b550db74f239e264a9c5cd056a528f4439",
          "md5": "6ec95d7a8ce9ac2e5f0a74e5a016dfe9",
          "sha256": "c06ab1ffebda0bc6888ff7ae2ee053725df22a8c5ee685f9fd979b16ec82eb61"
        },
        "downloads": -1,
        "filename": "fastget-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6ec95d7a8ce9ac2e5f0a74e5a016dfe9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5792,
        "upload_time": "2023-03-22T17:12:59",
        "upload_time_iso_8601": "2023-03-22T17:12:59.807108Z",
        "url": "https://files.pythonhosted.org/packages/6e/21/10113f1aaf691676fdf98b2375b550db74f239e264a9c5cd056a528f4439/fastget-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a39fe3e09b65422bd67942927ce1feb682e14e94a23b1ac1d218ebb9571d1d47",
          "md5": "d94c868283ed9d3b78e926a30f83f1fe",
          "sha256": "ff8d437684965e323e1599d4600d1dd39b76b560a0cc24489fcc48b66ea11a2f"
        },
        "downloads": -1,
        "filename": "fastget-0.5.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d94c868283ed9d3b78e926a30f83f1fe",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 6699,
        "upload_time": "2023-03-22T17:20:13",
        "upload_time_iso_8601": "2023-03-22T17:20:13.401126Z",
        "url": "https://files.pythonhosted.org/packages/a3/9f/e3e09b65422bd67942927ce1feb682e14e94a23b1ac1d218ebb9571d1d47/fastget-0.5.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f39d296523bcfd81f612f97130fb7f84e27b9c57a180f4242d95581420fe1aa1",
          "md5": "61f59b6d1dc16db10238fce0d9a26917",
          "sha256": "0235f1095793aefbb8e0455d0569ea56f552f392802f9fb9793795a2103c4f25"
        },
        "downloads": -1,
        "filename": "fastget-0.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "61f59b6d1dc16db10238fce0d9a26917",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5852,
        "upload_time": "2023-03-22T17:20:14",
        "upload_time_iso_8601": "2023-03-22T17:20:14.864040Z",
        "url": "https://files.pythonhosted.org/packages/f3/9d/296523bcfd81f612f97130fb7f84e27b9c57a180f4242d95581420fe1aa1/fastget-0.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8168f891b54019b54696d00466dd6fbc1636a73e7fc7d819512d6321e0f3b929",
          "md5": "e1d568b676538a84c73df3bac7046f93",
          "sha256": "134b3c02778946f7bb80456825118bc37b7807477034272bb11144dcfe7f7d06"
        },
        "downloads": -1,
        "filename": "fastget-0.6.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e1d568b676538a84c73df3bac7046f93",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 6980,
        "upload_time": "2023-03-23T09:36:54",
        "upload_time_iso_8601": "2023-03-23T09:36:54.508821Z",
        "url": "https://files.pythonhosted.org/packages/81/68/f891b54019b54696d00466dd6fbc1636a73e7fc7d819512d6321e0f3b929/fastget-0.6.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9d0ff36bbcde6a049e889d940c1edd93e201fd495ce1f811873c42f225b84316",
          "md5": "33e3edebc5cf5234ca5544a805a08f05",
          "sha256": "93924b9a41699d2669016cab4d9ed19e918f1db94a4ccc015e84d35dcbd511ab"
        },
        "downloads": -1,
        "filename": "fastget-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "33e3edebc5cf5234ca5544a805a08f05",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 6547,
        "upload_time": "2023-03-23T09:36:56",
        "upload_time_iso_8601": "2023-03-23T09:36:56.560551Z",
        "url": "https://files.pythonhosted.org/packages/9d/0f/f36bbcde6a049e889d940c1edd93e201fd495ce1f811873c42f225b84316/fastget-0.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8168f891b54019b54696d00466dd6fbc1636a73e7fc7d819512d6321e0f3b929",
        "md5": "e1d568b676538a84c73df3bac7046f93",
        "sha256": "134b3c02778946f7bb80456825118bc37b7807477034272bb11144dcfe7f7d06"
      },
      "downloads": -1,
      "filename": "fastget-0.6.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e1d568b676538a84c73df3bac7046f93",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 6980,
      "upload_time": "2023-03-23T09:36:54",
      "upload_time_iso_8601": "2023-03-23T09:36:54.508821Z",
      "url": "https://files.pythonhosted.org/packages/81/68/f891b54019b54696d00466dd6fbc1636a73e7fc7d819512d6321e0f3b929/fastget-0.6.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9d0ff36bbcde6a049e889d940c1edd93e201fd495ce1f811873c42f225b84316",
        "md5": "33e3edebc5cf5234ca5544a805a08f05",
        "sha256": "93924b9a41699d2669016cab4d9ed19e918f1db94a4ccc015e84d35dcbd511ab"
      },
      "downloads": -1,
      "filename": "fastget-0.6.0.tar.gz",
      "has_sig": false,
      "md5_digest": "33e3edebc5cf5234ca5544a805a08f05",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 6547,
      "upload_time": "2023-03-23T09:36:56",
      "upload_time_iso_8601": "2023-03-23T09:36:56.560551Z",
      "url": "https://files.pythonhosted.org/packages/9d/0f/f36bbcde6a049e889d940c1edd93e201fd495ce1f811873c42f225b84316/fastget-0.6.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}