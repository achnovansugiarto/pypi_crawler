{
  "info": {
    "author": "Danny Hoskin",
    "author_email": "contact@nihsko.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Reading Image Python Package\n\nReading Image is a text analysis tool for images files (png, jpg, jpeg) and pdf. The system will preform OCR on the document and return details of the text within. Examples of analysis include text strings, page location and entity analysis. Advanced OCR will also read and understand table formats, and translation is available to English from French.\n\n### Installation\n\nTo use the python package you will need to be a registered user of Reading Image, which is free and available at [readingimage.com](http://www.readingimage.com/register).\n\nThe package is avaiable from [PyPI](https://pypi.org/project/reading-image/) and can be installed via pip.\n\n```\n$ pip install reading-image\n```\n\n### Usage\n\nAll interactions with Reading Image are through the Session object. This is initialised by passing through the user specific Python Key that is available after registering.\n\n```\n>>> import reading_image\n>>> reading_image_session = reading_image.Session(python_key=\"5FA7527DABA74ACDA96164814AE54E61\")\n```\nA Reading Image session uses the standard Python requests session object which is stored as an attribute of reading_image.Session and available as .session. This means that more advanced features of requests.Session are still available, for example to set a proxy,\n\n```\n>>> proxies = {'http': 'http://xx.xx.x.xxx:xxxx'}\n>>> reading_image_session.session.proxies.update(proxies)\n```\n\n##### Demos\n\nReading Image has preprocessed demonstration responses. These vary with file-type and also processes that were requested.\n\n```\n>>> reading_image_session.getDemos()\n[<reading_image.Processed.Processed object at 0x7fa6d701e050>, <reading_image.Processed.Processed object at 0x7fa6d756e8d0>, <reading_image.Processed.Processed object at 0x7fa6d7deb910>]\n```\nNotice that we have a list of reading_image.Processed objects. Each of these Processed objects are the result of a file that has been analysed.\n\n##### Processed Objects\n\nEach file that is analysed returns a reading_image.Processed object. The main properties of the Processed object are listed below,\n\n```\n>>> processed_object = reading_image_session.getDemos()[0]\n>>> processed_object.name # Returns the name of the original file (string)\n>>> processed_object.entities # Returns a pandas DataFrame with text entity data\n>>> processed_object.basicOCR # Returns a pandas DataFrame with text ocr data\n>>> processed_object.translation # Returns a pandas DataFrame with text translation data\n>>> processed_object.advancedOCR # Returns a pandas DataFrame with table data\n```\n\n##### Analyse New Files\n\nFiles can be sent for analysis through the Session. Entity analysis and basic OCR are preformed on all files, advanced OCR and translation are optional.\n\n```\n>>> filepath = r“/home/user/myfile.pdf”\n>>> reading_image_session.analyseFile(filepath)\n<reading_image.Processed.Processed object at 0x7f430542fa50>\n>>> reading_image_session.analyseFile(filepath, advanced_ocr = True, translation = True)\n<reading_image.Processed.Processed object at 0x7f4302ce3050>\n```\n\nEach Processed object that has been returned via the analyseFile method exists for the lifetime of the current python session. They can be saved to your personal Reading Image online storage via the saveAnalysis method.\n\n```\n>>> analysis = reading_image_session.analyseFile(filepath)\n>>> reading_image_session.saveAnalysis(analysis, file_name = “My File”, folder_name = “My Saved Files”)\n```\n\nThere is no requirement for uniqueness for file_name, if you duplicate names then you will not overwrite a previous named analysis but will create additional analysis with the the same name. Folders and analysis files can be managed [online](http://www.readingimage.com/files) and is not currently manageable through this package. By default all new users will be given an empty folder, “My Saved Files”. All processed files are allocated to folders. The active folders associated with the current user can be listed,\n\n```\n>>> reading_image_session.listFolders()\n[\"My Saved Files\"]\n```\n\n##### Retrieving Previous Analysis\n\nThe listSaved method returns a list of dictionaries, where each dictionary contains meta-data for a saved analysis.\n\n```\n>>> for f in reading_image_session.listSaved(): print(f)\n{'datetime': '2020-03-21 14:40:12.224949+00:00', 'advanced_ocr': False, 'translation': False, 'filetype': 'png', 'file_ref': '90bf9987-4786-429d-bc2e-54375c637976', 'cost': 0.0, 'folder': 'My Saved Files', 'saved_name': 'My File'}\n{'datetime': '2020-03-21 14:41:13.939670+00:00', 'advanced_ocr': False, 'translation': True, 'filetype': 'png', 'file_ref': '31386bbe-c427-4b54-97e8-d6eb1838aae5', 'cost': 0.02, 'folder': 'My Saved Files', 'saved_name': 'My Second File'}\n```\nTo create a reading_image.Processed object from previously saved analysis use the ‘file_ref’ from the meta-data and use getAnalysis.\n\n```\n>>> reading_image_session.getAnalysis('31386bbe-c427-4b54-97e8-d6eb1838aae5')\n<reading_image.Processed.Processed object at 0x7f579afbda10>\n```\n\n##### Parse Downloaded Json\n\nThe Processed class has the method fromJson() which can be used to create a Processed object without the need of a Session object if the analysis json has already been downloaded from the website.\n\n```\n>>> downloaded_json = r\"/home/user/20200321154411kIylDy.json\"\n>>> reading_image.Processed.fromJson(downloaded_json)\n<reading_image.Processed.Processed object at 0x7fbf11293590>\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://bitbucket.org/DannyHoskin/reading_image_python",
    "keywords": "ReadingImage text analysis ocr nlp pdf image extraction table entity recognition translation",
    "license": "Nihsko",
    "maintainer": "",
    "maintainer_email": "",
    "name": "reading-image",
    "package_url": "https://pypi.org/project/reading-image/",
    "platform": "",
    "project_url": "https://pypi.org/project/reading-image/",
    "project_urls": {
      "Homepage": "http://bitbucket.org/DannyHoskin/reading_image_python"
    },
    "release_url": "https://pypi.org/project/reading-image/1.0.1/",
    "requires_dist": [
      "pandas"
    ],
    "requires_python": "",
    "summary": "Reading Image is a text analysis tool for images files (png, jpg, jpeg) and pdf. The system will preform OCR on the document and return details of the text within. Examples of analysis include text strings, page location and entity analysis. Advanced OCR will also read and understand table formats, and translation is available to English from French.",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7280691,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5d1f1816cad2dc8d1d4b02d46666211cf52ca38b837b23764fc9ad20ad536f99",
          "md5": "bf1a8bcf3eb4e3dccf7e2655a388a88c",
          "sha256": "102904c1db849fd1569e1b0936642a9cc05800f249b38f20aa0110b3e5ef24c5"
        },
        "downloads": -1,
        "filename": "reading_image-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bf1a8bcf3eb4e3dccf7e2655a388a88c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 2104,
        "upload_time": "2018-09-09T20:26:44",
        "upload_time_iso_8601": "2018-09-09T20:26:44.683587Z",
        "url": "https://files.pythonhosted.org/packages/5d/1f/1816cad2dc8d1d4b02d46666211cf52ca38b837b23764fc9ad20ad536f99/reading_image-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e7d557c9be20ea7de675aed94c3054b246a35e34e3864c7a8df85be9bcf34fe8",
          "md5": "f5342b448e7af500734d4ea95c226d6d",
          "sha256": "a7f1788e5133a6154a2aeceea69cea010279112b226c1db18502b8f7ed577c85"
        },
        "downloads": -1,
        "filename": "reading_image-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f5342b448e7af500734d4ea95c226d6d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 920,
        "upload_time": "2018-09-09T20:26:45",
        "upload_time_iso_8601": "2018-09-09T20:26:45.712676Z",
        "url": "https://files.pythonhosted.org/packages/e7/d5/57c9be20ea7de675aed94c3054b246a35e34e3864c7a8df85be9bcf34fe8/reading_image-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d419c658fc448bf759d5f7ed1ad53703d42f635126271322709680fd793871ff",
          "md5": "35ff682380ff6d099a626d1708973078",
          "sha256": "79daf01ef11c0d629dadcf621c7b70622666a6a640d9575f9560f6f01ad1cf2b"
        },
        "downloads": -1,
        "filename": "reading_image-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "35ff682380ff6d099a626d1708973078",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 2067,
        "upload_time": "2018-09-09T20:54:40",
        "upload_time_iso_8601": "2018-09-09T20:54:40.704414Z",
        "url": "https://files.pythonhosted.org/packages/d4/19/c658fc448bf759d5f7ed1ad53703d42f635126271322709680fd793871ff/reading_image-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f9f99e1d1977f6268da658ea78687d5e78f6f23435f8a90abe692e6d41f8046",
          "md5": "49d2b50ec5a884e0a1155a69bd9bd4d6",
          "sha256": "8f8b73494523947c999a3dcbd97cee0e503ea69c60d1abf32ceec4f9711dfdad"
        },
        "downloads": -1,
        "filename": "reading_image-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "49d2b50ec5a884e0a1155a69bd9bd4d6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 926,
        "upload_time": "2018-09-09T20:54:42",
        "upload_time_iso_8601": "2018-09-09T20:54:42.935230Z",
        "url": "https://files.pythonhosted.org/packages/1f/9f/99e1d1977f6268da658ea78687d5e78f6f23435f8a90abe692e6d41f8046/reading_image-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2c9f25477767db8254eef46784df14f50335318bf34c21b0623e56a7846a7c1c",
          "md5": "924aa3c003ec6e4e59da426db204b296",
          "sha256": "5745d27647432e7ea235dd7df0ae93477d87067399951787eedc45b8003afd0e"
        },
        "downloads": -1,
        "filename": "reading_image-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "924aa3c003ec6e4e59da426db204b296",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7548,
        "upload_time": "2020-05-19T20:09:52",
        "upload_time_iso_8601": "2020-05-19T20:09:52.492871Z",
        "url": "https://files.pythonhosted.org/packages/2c/9f/25477767db8254eef46784df14f50335318bf34c21b0623e56a7846a7c1c/reading_image-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "30005df6698104d457456f397b51b7d3dfa1b4a2e80b4dffd8e8271c726743ff",
          "md5": "69744b74d463246227e7f1d3ca14f245",
          "sha256": "f2a097aa0e5f194898103ef6bd2bc042053ba537446378f597d8dde36edd55c6"
        },
        "downloads": -1,
        "filename": "reading_image-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "69744b74d463246227e7f1d3ca14f245",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6904,
        "upload_time": "2020-05-19T20:09:53",
        "upload_time_iso_8601": "2020-05-19T20:09:53.843536Z",
        "url": "https://files.pythonhosted.org/packages/30/00/5df6698104d457456f397b51b7d3dfa1b4a2e80b4dffd8e8271c726743ff/reading_image-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2c9f25477767db8254eef46784df14f50335318bf34c21b0623e56a7846a7c1c",
        "md5": "924aa3c003ec6e4e59da426db204b296",
        "sha256": "5745d27647432e7ea235dd7df0ae93477d87067399951787eedc45b8003afd0e"
      },
      "downloads": -1,
      "filename": "reading_image-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "924aa3c003ec6e4e59da426db204b296",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 7548,
      "upload_time": "2020-05-19T20:09:52",
      "upload_time_iso_8601": "2020-05-19T20:09:52.492871Z",
      "url": "https://files.pythonhosted.org/packages/2c/9f/25477767db8254eef46784df14f50335318bf34c21b0623e56a7846a7c1c/reading_image-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "30005df6698104d457456f397b51b7d3dfa1b4a2e80b4dffd8e8271c726743ff",
        "md5": "69744b74d463246227e7f1d3ca14f245",
        "sha256": "f2a097aa0e5f194898103ef6bd2bc042053ba537446378f597d8dde36edd55c6"
      },
      "downloads": -1,
      "filename": "reading_image-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "69744b74d463246227e7f1d3ca14f245",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6904,
      "upload_time": "2020-05-19T20:09:53",
      "upload_time_iso_8601": "2020-05-19T20:09:53.843536Z",
      "url": "https://files.pythonhosted.org/packages/30/00/5df6698104d457456f397b51b7d3dfa1b4a2e80b4dffd8e8271c726743ff/reading_image-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}