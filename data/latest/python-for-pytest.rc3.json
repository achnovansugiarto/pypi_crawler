{
  "info": {
    "author": "SunXiuWen",
    "author_email": "xiuwensun@163.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Utilities"
    ],
    "description": "---\n我的开源小脚本-愉快的写单元测试\n# 人生苦短，我用Python！\n---\n\n\n### 一、简介\n    用于python3版本依赖pytest框架构建单元测试之接口测试用例数据模板excel生成与读取，并提供用于api接口通用测试方法，使用简单，即插即用。\n\n### 二、怎么使用？\n#### 1. 安装包\n```shell script\npip install python-for-pytest\n```\n\n#### 2. 在您的项目工程根目录下创建test包，您的测试用例文件就可以写在其中\n```shell script\n# 目录结构大概如下\nyour_project_dir\n|-- app\n|-- test\n  |--__init__.py\n```\n\n#### 3. 本工具提供关于flask和sanic框架通用的单元测试样例脚本，可自动生成测试样例脚本供参考，代码如下\n```python\n# 在test包下的__init__.py文件中调用如下代码，会生成一个参考样例脚本\nfrom pathlib import Path\nfrom python_for_pytest import init_pytest_for_flask\n# from python_for_pytest import init_pytest_for_sanic\n\n\nbase_path = Path(__file__).resolve().parent\n\ninit_pytest_for_flask(base_path,\"custom_script_name.py\")\n\n```\n\n#### 4. 根据测试样例脚本的提示，准备您预测试的接口json报文样例,并按要求在报文根节点下添加uri、method、result、message节点，例如下面示例\n```shell script\n# 单个接口\napi={\n    \"uri\": \"/test/get\",  # 接口的访问资源路径\n    \"method\": \"get\",     # 接口的请求方法\n    \"result\":\"0\", # 预期结果\n    \"message\":\"操作成功，符合预期\", # 对预期结果的说明\n    \"head\": {\n        \"sysCode\": \"S20160\",\n        \"appCode\": \"A01009\",\n        \"sign\": \"99999999\"\n    }\n}\n\n# 多个接口，将每个接口样例添加到列表中\napi = [\n    {\n        \"uri\": \"/test/get\",\n        \"method\": \"get\",\n        \"result\":\"0\", # 预期结果\n        \"message\":\"操作成功，符合预期\", # 对预期结果的说明\n        \"head\": {\n            \"sysCode\": \"S20160\"\n        },\n        \"biz\": {\n            \"phoneNumber\": \"1111111111\",\n            \"developPerson\": \"1232221\",\n            \"prod_info\": [\n                {\n                    \"prod_nbr\": \"444444\"\n                }\n            ]\n        }\n    },\n    {\n        \"uri\": \"/test/post\",\n        \"method\": \"post\",\n        \"result\":\"0\", # 预期结果\n        \"message\":\"操作成功，符合预期\", # 对预期结果的说明\n        \"head\": {\n            \"reqTime\": \"2015-01-23 15:32:03\",\n            \"sign\": \"3333\"\n        },\n        \"biz\": {\n            \"serialnum\": \"12\",\n            \"prod_info\": [\n                {\n                    \"prod_nbr\": \"1111\"\n                },\n                {\n                    \"prod_nbr\": \"2222\"\n                }\n            ]\n        }\n    }\n]\n```\n\n#### 5. 报文及测试样例写好后，就可以在terminal下执行如下命令，进行单元测试\n```shell script\ncd test\npytest\n```\n#### 6. 版本更新说明\n1. 支持只需要测试用例报文，如果未添加uri、method、result、message字段，生成excel时自动补全\n2. 支持分布式并发执行用例\n3. 安装pytest相关依赖包\n4. 修复sanic脚本，模拟测试客户端调用http请求返回的是一个元祖类型(request,response)\n\n### 备注\n```\n本工具初始化会自动生成测试用例数据源excel文件，pytest.ini配置文件，单元测试脚本模板文件\n\n保存测试数据到excel表\n表格式说明如下：\n1. 每个sheet【标签页】代表一个接口\n2. 每列表示请求报文中的字段，如果涉及到层级关系需要以点分隔，如biz.dataObject.code，如果是列表将增加数字代表列表index\n3. 测试数据文件名默认为:mock_data.xls,支持自定义\n4. 提供的报文必须在json一级中增加字段：uri【接口资源路劲】，method【接口请求方法】,result【预期结果】,message【对预期结果的说明】\n5. 如果一次提交多个接口，以列表包裹字典，每个字典代表一个接口\n6. 支持自定字段是存在每列，或每行\n7. 用户可以编辑excel文件，为每个excel添加多组数据，测试不同的预期结果\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "python-for-pytest",
    "package_url": "https://pypi.org/project/python-for-pytest/",
    "platform": null,
    "project_url": "https://pypi.org/project/python-for-pytest/",
    "project_urls": {
      "Homepage": "http://github.com"
    },
    "release_url": "https://pypi.org/project/python-for-pytest/0.0.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "It is simple and fast to use unit testing",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16801621,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "faf04882d75e1ae56e5cecf71113b1d1f249b3355fcba69eceae9a39cbe3f048",
          "md5": "39597240e5db1334386f2c2cbb3886a0",
          "sha256": "1513aba4b6148cef42f31aa24b27d2c4ce35010f3b37529739a52c7e75eb782c"
        },
        "downloads": -1,
        "filename": "python_for_pytest-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "39597240e5db1334386f2c2cbb3886a0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9685,
        "upload_time": "2022-09-19T13:54:02",
        "upload_time_iso_8601": "2022-09-19T13:54:02.774716Z",
        "url": "https://files.pythonhosted.org/packages/fa/f0/4882d75e1ae56e5cecf71113b1d1f249b3355fcba69eceae9a39cbe3f048/python_for_pytest-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "db7dee11bb227b35b43c053d01c7450038a5a701de92aa913638992cf8ec0209",
          "md5": "f130360281c0864f802e8e4da7c07b3e",
          "sha256": "9ac53ca0bda8a3a3829e5255f6b9574cc5819d43042f8a824655b5e18b2a111a"
        },
        "downloads": -1,
        "filename": "python_for_pytest-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f130360281c0864f802e8e4da7c07b3e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9871,
        "upload_time": "2022-09-23T15:24:30",
        "upload_time_iso_8601": "2022-09-23T15:24:30.082108Z",
        "url": "https://files.pythonhosted.org/packages/db/7d/ee11bb227b35b43c053d01c7450038a5a701de92aa913638992cf8ec0209/python_for_pytest-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3e760ba16bc4f78179ccab53bdc0849a8e76de6751eda10941f02fa99323c545",
          "md5": "83534cde004bc530b82200436d9a004e",
          "sha256": "54d279f208027966cf804c11e5275cfdc42ef61c7c927a5d11cbb15265b96112"
        },
        "downloads": -1,
        "filename": "python_for_pytest-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "83534cde004bc530b82200436d9a004e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10061,
        "upload_time": "2023-02-11T00:36:06",
        "upload_time_iso_8601": "2023-02-11T00:36:06.651561Z",
        "url": "https://files.pythonhosted.org/packages/3e/76/0ba16bc4f78179ccab53bdc0849a8e76de6751eda10941f02fa99323c545/python_for_pytest-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3e760ba16bc4f78179ccab53bdc0849a8e76de6751eda10941f02fa99323c545",
        "md5": "83534cde004bc530b82200436d9a004e",
        "sha256": "54d279f208027966cf804c11e5275cfdc42ef61c7c927a5d11cbb15265b96112"
      },
      "downloads": -1,
      "filename": "python_for_pytest-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "83534cde004bc530b82200436d9a004e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10061,
      "upload_time": "2023-02-11T00:36:06",
      "upload_time_iso_8601": "2023-02-11T00:36:06.651561Z",
      "url": "https://files.pythonhosted.org/packages/3e/76/0ba16bc4f78179ccab53bdc0849a8e76de6751eda10941f02fa99323c545/python_for_pytest-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}