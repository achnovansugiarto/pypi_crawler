{
  "info": {
    "author": "Carl Levine, Sunny Gleason, Cole Tuininga",
    "author_email": "clevine@dyn.com",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3",
      "Topic :: Internet :: Name Service (DNS)",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# Dyn Python SDK - Developer Preview\n\n\nNOTE: This is a developer preview - we welcome your feedback!\nPlease reach out via pull request or GitHub issue.\n\n\nMaking DNS Updates as easy as:\n\n    from dyn.traffic import DynTraffic\n\n    # create a new instance of the API client\n    dyn = DynTraffic('customername', 'username', 'password').with_zone('example.com')\n\n    # establish an API connection\n    dyn.session.create()\n\n\n    # create an A record\n    dyn.record.create('A', 'www.example.com.', {'address':'1.2.3.4'})\n\n    # create a CNAME record\n    dyn.record.create('CNAME', 'www2.example.com.', {'cname':'www.example.com'})\n\n\n    # delete one A record\n    dyn.record.delete('A', 'www.example.com', <record_id>)\n\n    # delete all A record\n    dyn.record.delete('A', 'www.example.com')\n\n    # delete a CNAME record\n    dyn.record.delete('CNAME', 'www2.example.com')\n\n\n    # publish changes\n    dyn.zone.publish()\n\n    #Get all records from the zone\n    dyn.zone.list()\n\n    #Get all records from the node\n    dyn.zone.list('www.example.com')\n\n\n    # log out to finish session\n    dyn.session.destroy()\n\nWorking with Messaging is as easy as:\n\n    import sys\n    from dyn.messaging import DynMessaging\n    import json\n    \n    def show(message, result):\n        sys.stderr.write(message + \": \" + json.dumps(result) + '\\n\\n')\n    \n    client = DynMessaging('yourapikey')\n    client._client.verbose = False\n    \n    # accounts (create, list, list_xheaders, update, update_headers, destroy)\n    show(\"ACCOUNTS LIST\", client.accounts.list())\n    show(\"ACCOUNTS CREATE\", client.accounts.create(\"some@address.com\", \"secretword\", \"some company\", \"1234567890\", \"123 main st\", \"big city\", \"MA\", \"12345\", \"USA\", \"east\", \"bounces.com\", \"spam.com\", \"unsubscribe.com\", \"trackopens.com\", \"tracelinks.com\", \"trackunsubscribes.com\", \"generatenewapikey.com\"))\n    show(\"ACCOUNTS UPDATE\", client.accounts.update(\"some@address.com\", \"secretword\", \"some company\", \"1234567890\", \"123 main st\", \"big city\", \"MA\", \"12345\", \"USA\", \"east\", \"bounces.com\", \"spam.com\", \"unsubscribe.com\", \"trackopens.com\", \"tracelinks.com\", \"trackunsubscribes.com\", \"generatenewapikey.com\"))\n    show(\"ACCOUNTS DESTROY\", client.accounts.destroy(\"some@address.com\"))\n    show(\"XHEADERS LIST\", client.accounts.list_xheaders())\n    show(\"XHEADERS UPDATE\", client.accounts.update_xheaders('X-MyExample1','X-AnotherExample2','X-Interesting3','X-Important4'))\n    \n    # senders (list, details, status, create, update, dkim, destroy)\n    show(\"SENDERS LIST\", client.senders.list())\n    show(\"SENDERS DETAILS\", client.senders.details(\"some@address.com\"))\n    show(\"SENDERS STATUS\", client.senders.status(\"some@address.com\"))\n    show(\"SENDERS CREATE\", client.senders.create(\"some@address.com\"))\n    show(\"SENDERS UPDATE\", client.senders.update(\"some@address.com\"))\n    show(\"SENDERS DKIM\", client.senders.dkim(\"some@address.com\", \"123dkim\"))\n    show(\"SENDERS DESTROY\", client.senders.destroy(\"some@address.com\"))\n    \n    # recipients (status, activate)\n    show(\"RECIPIENTS STATUS\", client.recipients.status(\"some@address.com\"))\n    show(\"RECIPIENTS ACTIVATE\", client.recipients.activate(\"some@address.com\"))\n    \n    # suppressions (list, count, create, activate)\n    show(\"SUPPRESSIONS LIST\", client.suppressions.list())\n    show(\"SUPPRESSIONS COUNT\", client.suppressions.count())\n    show(\"SUPPRESSIONS CREATE\", client.suppressions.create(\"something@address.com\"))\n    show(\"SUPPRESSIONS ACTIVATE\", client.suppressions.activate(\"something@address.com\"))\n    \n    # send mail (send)\n    show(\"SEND MAIL\", client.send_mail.send(\"from@somedomain.com\", \"to@someotherdomain.com\", 'hello', 'from python api', \"<html><body>'hi from python api'</body></html>\", \"somecc@address.com\", \"somereply@address.com\"))\n\n    # report - delivery (list, count)\n    show(\"DELIVERY REPORT\", client.delivery.list('2014-01-01','2014-08-01'))\n    show(\"DELIVERY COUNTS\", client.delivery.count('2014-01-01','2014-08-01'))\n\n\n# Examples\n\nFor more comprehensive examples, check out the \"examples\" folder.\n\n# API Endpoints Supported\n\n* Traffic - Session API: create/destroy\n* Traffic - Record API: AAAA A CNAME DNSKEY DS KEY LOC MX NS PTR RP SOA SRV TXT\n* Traffic - Zone API: list/get/publish/freeze/thaw\n* Traffic - Http Redirect API: create/update/list/destroy\n* Messaging - All Endpoints Supported\n\n# Known Issues\n\n* None yet",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dyninc/dyn-python",
    "keywords": "dyn,dynect,api,dns,traffic,email,messaging",
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "dyn-python",
    "package_url": "https://pypi.org/project/dyn-python/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/dyn-python/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/dyninc/dyn-python"
    },
    "release_url": "https://pypi.org/project/dyn-python/1.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Dyn Python SDK",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1157306,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e081f2874acd3d4b66af71477dc664459871bc99c41f76d7af8cac5e987882fb",
          "md5": "a601c1b069694929e0d56857fc837ee5",
          "sha256": "c05b53ca1fb3e05860f4d49fd76534afd2f647df77db956b0525360f289d6317"
        },
        "downloads": -1,
        "filename": "dyn-python-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a601c1b069694929e0d56857fc837ee5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6771,
        "upload_time": "2014-07-14T16:13:41",
        "upload_time_iso_8601": "2014-07-14T16:13:41.107617Z",
        "url": "https://files.pythonhosted.org/packages/e0/81/f2874acd3d4b66af71477dc664459871bc99c41f76d7af8cac5e987882fb/dyn-python-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e081f2874acd3d4b66af71477dc664459871bc99c41f76d7af8cac5e987882fb",
        "md5": "a601c1b069694929e0d56857fc837ee5",
        "sha256": "c05b53ca1fb3e05860f4d49fd76534afd2f647df77db956b0525360f289d6317"
      },
      "downloads": -1,
      "filename": "dyn-python-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "a601c1b069694929e0d56857fc837ee5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6771,
      "upload_time": "2014-07-14T16:13:41",
      "upload_time_iso_8601": "2014-07-14T16:13:41.107617Z",
      "url": "https://files.pythonhosted.org/packages/e0/81/f2874acd3d4b66af71477dc664459871bc99c41f76d7af8cac5e987882fb/dyn-python-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}