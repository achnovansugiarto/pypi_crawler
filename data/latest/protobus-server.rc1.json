{
  "info": {
    "author": "The protobus developers",
    "author_email": "protobus-dev@googlegroups.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3"
    ],
    "description": "# protobus-server\n\nA minimalistic daemon providing a partitioned log message bus.\n\n## Project goals\n\nThe aim of this project is to provide a lightweight alternative to existing log-based message brokers such as Apache Kafka, Amazon Kinesis Streams, or Twitter's DistributedLog. At this stage of the project we explicitly aim to support only a subset of the features of those enterprise systems, which should make it easier to understand, get started, deploy, and operate.\n\nThe main features we are aiming for are:\n\n- topic-based publish/subscribe messaging system\n- persistent, partitioned storage of messages on a local filesystem\n  - configurable pattern matching rules define which topics go into which files\n  - files may be auto-rotated at a configurable UTC offset and/or if exceeding a size limit\n- opaque message payloads with a minimal set of properties to support filtering and observability\n  - timestamps: client-specified event and transmit times, server-filled reception time; all three with nanosecond granularity\n  - tags: an associative array (string keys, string values); for offline filtering\n  - size: payload size; for observability\n- in a single stream, subscribers may subscribe to multiple topics via pattern matching\n- subscribers may start from a previous position in the history of a topic\n- language-agnostic protocol definition\n\nTo keep the system simple we explicitly do *not* aim to support enterprise features such as:\n\n- replication\n- sharding\n\n## Architecture\n\n- the server spawns one thread for each subscription and each publishing channel\n- each subscription\n  - forwards the last known messages matching the subscription pattern to the subscriber\n  - sets up a queue and forwards incoming messages to the subscriber (taking care to avoid race conditions)\n- when a message is published it is pushed down all matching queues\n- persistent storage is handled via the same mechanism: for each configured partition, a queue is setup with an associated writer thread\n\nTo limit process resources, a bounded thread pool is used. Since both publishers and subscribers may be long-lived processes, the size of the thread pool limits the maximum number of topics the server may handle.\n\n## Installation\n\nThe latest version of protobus-server is published on the [Python package index](https://pypi.org/project/protobus-server/). You may use `pip3` to install or upgrade to the latest version:\n\n```\npip3 install --user --upgrade protobus-server\n```\n\nIf the location of the `protobus-server` executable is not in your shell's `PATH` environment variable, `pip` will emit a warning informing you where it has been installed. You can either launch `protobus-server` using its full path or add the parent `bin` directory to `PATH`.\n\n## Usage\n\n`protobus-server` may be started with the following arguments:\n\n```\n-h, --help            show this help message and exit\n--log-level {DEBUG,INFO,WARNING,ERROR,CRITICAL}\n--address ADDRESS:PORT\n                      bind on ADDRESS and listen for gRPC connections on PORT; if ADDRESS is omitted, listen on all interfaces (default: listen on port 42000 on local interfaces)\n--store-root PATH     use PATH for the destination of the persistent data store; PATH is considered relative to the current working directory (which is also the default destination)\n--store-pattern FILE_PREFIX:TOPIC_REGEX [FILE_PREFIX:TOPIC_REGEX ...]\n                      store topics matching the regular expression into a file with the given prefix (default: one file per topic); any occurence of {topic} in FILE_PREFIX will be\n                      replaced with the actual message topic; the argument may be specified multiple times\n--max-threads N       serve up to N channels; this limits the active publishers, subscriptions, and file writers (default: 101)\n```\n\n## Technological choices & limitations\n\nThe project is currently in a prototyping stage. The following choices have been made to minimise effort to reach an MVP:\n\n- Google Protocol Buffers as serialisation framework (even though it adds considerable allocation overhead by design)\n- gRPC as transport protocol (even though its HTTP transport adds considerable overhead and complexity)\n- Python 3 as implementation language (even though its current gRPC implementation lacks parallelism)\n\nThe combination of these choices will likely limit the performance of the MVP to the order of 10,000 messages/s. For all of these technologies, more efficient alternatives existâ€”at a later stage, these will be considered.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/protobus/protobus-server",
    "keywords": "",
    "license": "MIT/Apache-2.0",
    "maintainer": "Felix Werner",
    "maintainer_email": "protobus-maintainers@googlegroups.com",
    "name": "protobus-server",
    "package_url": "https://pypi.org/project/protobus-server/",
    "platform": "",
    "project_url": "https://pypi.org/project/protobus-server/",
    "project_urls": {
      "Homepage": "https://github.com/protobus/protobus-server"
    },
    "release_url": "https://pypi.org/project/protobus-server/0.1.4/",
    "requires_dist": [
      "grpcio (<=1.31,>=1.30.0)"
    ],
    "requires_python": ">=3.6",
    "summary": "A minimalistic daemon providing a partitioned log message bus.",
    "version": "0.1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7776359,
  "releases": {
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "74a803632b57d7db83eebf7189c6eba36c0d500bf6efd90f4173f0fc1920dc41",
          "md5": "bdc3a0a8e9a5525eacfcd87fa9c53f8f",
          "sha256": "f353fd80cb412fb8da816053187f4a396102ab4e0624a980feb6dfb5136df4b2"
        },
        "downloads": -1,
        "filename": "protobus_server-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bdc3a0a8e9a5525eacfcd87fa9c53f8f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 18815,
        "upload_time": "2020-07-24T07:47:43",
        "upload_time_iso_8601": "2020-07-24T07:47:43.633101Z",
        "url": "https://files.pythonhosted.org/packages/74/a8/03632b57d7db83eebf7189c6eba36c0d500bf6efd90f4173f0fc1920dc41/protobus_server-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4a6057f04d46223438164c6d65a317e8454f1e3cc44e091c5223032443dae9a6",
          "md5": "3892217a41a72f8c9022c094c4e5dba5",
          "sha256": "f0b953649c05584f3642ba100ccbdccca9fe061beaf7fdeff36815f46525ce64"
        },
        "downloads": -1,
        "filename": "protobus-server-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "3892217a41a72f8c9022c094c4e5dba5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13700,
        "upload_time": "2020-07-24T07:47:44",
        "upload_time_iso_8601": "2020-07-24T07:47:44.796972Z",
        "url": "https://files.pythonhosted.org/packages/4a/60/57f04d46223438164c6d65a317e8454f1e3cc44e091c5223032443dae9a6/protobus-server-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "74a803632b57d7db83eebf7189c6eba36c0d500bf6efd90f4173f0fc1920dc41",
        "md5": "bdc3a0a8e9a5525eacfcd87fa9c53f8f",
        "sha256": "f353fd80cb412fb8da816053187f4a396102ab4e0624a980feb6dfb5136df4b2"
      },
      "downloads": -1,
      "filename": "protobus_server-0.1.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "bdc3a0a8e9a5525eacfcd87fa9c53f8f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 18815,
      "upload_time": "2020-07-24T07:47:43",
      "upload_time_iso_8601": "2020-07-24T07:47:43.633101Z",
      "url": "https://files.pythonhosted.org/packages/74/a8/03632b57d7db83eebf7189c6eba36c0d500bf6efd90f4173f0fc1920dc41/protobus_server-0.1.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4a6057f04d46223438164c6d65a317e8454f1e3cc44e091c5223032443dae9a6",
        "md5": "3892217a41a72f8c9022c094c4e5dba5",
        "sha256": "f0b953649c05584f3642ba100ccbdccca9fe061beaf7fdeff36815f46525ce64"
      },
      "downloads": -1,
      "filename": "protobus-server-0.1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "3892217a41a72f8c9022c094c4e5dba5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 13700,
      "upload_time": "2020-07-24T07:47:44",
      "upload_time_iso_8601": "2020-07-24T07:47:44.796972Z",
      "url": "https://files.pythonhosted.org/packages/4a/60/57f04d46223438164c6d65a317e8454f1e3cc44e091c5223032443dae9a6/protobus-server-0.1.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}