{
  "info": {
    "author": "",
    "author_email": "Arista Ansible Team <ansible@arista.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Software Development :: Testing"
    ],
    "description": "[![GitHub license](https://badgen.net/github/license/aristanetworks/j2lint)](https://github.com/aristanetworks/j2lint/blob/devel/LICENSE)\n[![PyPI version fury.io](https://badge.fury.io/py/j2lint.svg)](https://pypi.python.org/pypi/j2lint/)\n[![PyPI pyversions](https://img.shields.io/pypi/pyversions/j2lint.svg)](https://pypi.python.org/pypi/j2lint/)\n[![PyPI status](https://img.shields.io/pypi/status/j2lint.svg)](https://pypi.python.org/pypi/j2lint/)\n[![Maintenance](https://img.shields.io/badge/Maintained%3F-yes-green.svg)](https://github.com/aristanetworks/j2lint/graphs/commit-activity)\n\n# Jinja2-Linter\n\nAVD Ecosystem - Jinja2 Linter\n\n## Project Goals\n\nBuild a Jinja2 linter that will provide the following capabilities:\n\n- Validate syntax according to [AVD style guide](https://avd.sh/en/stable/docs/contribution/style-guide.html).\n- Capability to run as part of a CI pipeline to enforce j2lint rules.\n- Develop an extension that works with VSCode and potentially other IDEs i.e PyCharm.\n\n## Syntax and code style issues\n\n| Code | Short Description | Description |\n|------|-------------------|-------------|\n| S0   | `jinja-syntax-error`            | Jinja2 syntax should be correct |\n| S1   | `single-space-decorator`        | A single space shall be added between Jinja2 curly brackets and a variable's name |\n| S2   | `operator-enclosed-by-spaces`   | When variables are used in combination with an operator, the operator shall be enclosed by space |\n| S3   | `jinja-statements-indentation`  | Nested jinja code block shall follow next rules:<br>- All J2 statements must be enclosed by 1 space<br>- All J2 statements must be indented by 4 more spaces within jinja delimiter<br>- To close a control, end tag must have same indentation level |\n| S4   | `jinja-statements-single-space` | Jinja statement should have a single space before and after |\n| S5   | `jinja-statements-no-tabs`      | Indentation are 4 spaces and NOT tabulation |\n| S6   | `jinja-statements-delimiter`    | Jinja statements should not have {%- or {%+ or -%} as delimiters |\n| S7   | `single-statement-per-line`     | Jinja statements should be on separate lines |\n| V1   | `jinja-variable-lower-case`     | All variables shall use lower case |\n| V2   | `jinja-variable-format`         | If variable is multi-words, underscore _ shall be used as a separator |\n\n## Getting Started\n\n### Requirements\n\nPython version 3.8+\n\n### Install with pip\n\nTo get started, you can use Python pip to install j2lint:\n\n**Install the latest stable version:**\n\n```bash\npip3 install j2lint\n```\n\n**Install the latest development version:**\n\n```bash\npip3 install git+https://github.com/aristanetworks/j2lint.git\n```\n\n### Install with Git approach\n\n1. Create a virtual environment and activate it\n\n    ```bash\n    python3 -m venv myenv\n    source myenv/bin/activate\n    ```\n\n2. Install pip, jinja2 and jinja2-linter\n\n    ```bash\n    sudo apt-get install python3-pip\n    pip3 install jinja2\n    git clone https://github.com/aristanetworks/j2lint\n    cd j2lint\n    python setup.py install\n    ```\n\n## Running the linter\n\n```bash\nj2lint <path-to-directory-of-templates>\n```\n\n### Running the linter on a specific file\n\n```bash\nj2lint <path-to-directory-of-templates>/template.j2\n```\n\n### Listing linting rules\n\n```bash\nj2lint --list\n```\n\n### Running the linter with verbose linter error output\n\n```bash\nj2lint <path-to-directory-of-templates> --verbose\n```\n\n### Running the linter with logs enabled. Logs saved in jinja2-linter.log in the current directory\n\n```bash\nj2lint <path-to-directory-of-templates> --log\n```\n\nTo enable debug logs, use both options:\n\n```bash\nj2lint <path-to-directory-of-templates> --log --debug\n```\n\n### Running the linter with JSON format for linter error output\n\n```bash\nj2lint <path-to-directory-of-templates> --json\n```\n\n### Ignoring rules\n\n1. The --ignore option can have one or more of these values: syntax-error, single-space-decorator, filter-enclosed-by-spaces, jinja-statement-single-space, jinja-statements-indentation, no-tabs, single-statement-per-line, jinja-delimiter, jinja-variable-lower-case, jinja-variable-format.\n\n2. If multiple rules are to be ignored, use the --ignore option along with rule descriptions separated by space.\n\n    ```bash\n    j2lint <path-to-directory-of-templates> --ignore <rule_description1> <rule_desc>\n    ```\n\n3. If one or more linting rules are to be ignored only for a specific jinja template file, add a Jinja comment at the top of the file. The rule can be disabled using the short description of the rule or the id of the rule.\n\n    ```jinja2\n    {# j2lint: disable=S6}\n\n    # OR\n    {# j2lint: disable=jinja-delimiter #}\n    ```\n\n4. Disabling multiple rules\n\n    ```jinja2\n    {# j2lint: disable=jinja-delimiter j2lint: disable=S1 #}\n    ```\n\n### Adding custom rules\n\n1. Create a new rules directory under j2lint folder.\n2. Add custom rule classes which are similar to classes in j2lint/rules directory:\n    The file name of rules should be in snake_case and the class name should be the PascalCase version of the file name. For example:\n    - File name: `jinja_operator_has_spaces_rule.py`\n    - Class name: `JinjaOperatorHasSpacesRule`\n\n3. Run the jinja2 linter using --rules-dir option\n\n    ```bash\n    j2lint <path-to-directory-of-templates> --rules_dir <custom-rules-directory>\n    ```\n\n> **Note**\n> This runs the custom linting rules in addition to the default linting rules.\n\n### Running jinja2 linter help command\n\n```bash\nj2lint --help\n```\n\n### Running jinja2 linter on STDIN template. This option can be used with VS Code.\n\n```bash\nj2lint --stdin\n```\n\n### Using j2lint as a pre-commit-hook\n\n1. Add j2lint pre-commit hook inside your repository in .pre-commit-config.yaml.\n\n    ```bash\n    - repo: https://github.com/aristanetworks/j2lint.git\n        rev: <release_tag/sha>\n        hooks:\n        - id: j2lint\n    ```\n\n2. Run pre-commit -> `pre-commit run --all-files`\n\n## Acknowledgments\n\nThis project is based on [salt-lint](https://github.com/warpnet/salt-lint) and [jinjalint](https://github.com/motet-a/jinjalint)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "j2lint,linter,jinja,lint",
    "license": "MIT License Copyright (c) 2021 Arista Networks Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "maintainer": "",
    "maintainer_email": "",
    "name": "j2lint",
    "package_url": "https://pypi.org/project/j2lint/",
    "platform": null,
    "project_url": "https://pypi.org/project/j2lint/",
    "project_urls": {
      "Bug Tracker": "https://github.com/aristanetworks/j2lint/issues",
      "Homepage": "https://github.com/aristanetworks/j2lint.git"
    },
    "release_url": "https://pypi.org/project/j2lint/1.0.0/",
    "requires_dist": [
      "jinja2",
      "pytest ; extra == 'dev'",
      "pre-commit ; extra == 'dev'",
      "bumpver ; extra == 'dev'"
    ],
    "requires_python": ">=3.8",
    "summary": "Command-line utility that validates jinja2 syntax according to Arista's AVD style guide.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14641704,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "661cf21b90c793a4022fd9cefa75cc8db818ebeecd3ba3d9fe2c8a09cd83798c",
          "md5": "c8afe8ef19cba1bfcc1bd60b0a7910ff",
          "sha256": "2dfe866e875dd4ac8b53d25de54f5b4ac64509653b9365c65523f8e7958680a8"
        },
        "downloads": -1,
        "filename": "j2lint-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c8afe8ef19cba1bfcc1bd60b0a7910ff",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 25739,
        "upload_time": "2022-07-29T16:02:40",
        "upload_time_iso_8601": "2022-07-29T16:02:40.032381Z",
        "url": "https://files.pythonhosted.org/packages/66/1c/f21b90c793a4022fd9cefa75cc8db818ebeecd3ba3d9fe2c8a09cd83798c/j2lint-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f631236cf60e34b83dcd17bdb6555bc6e800ea0aec401d93233df49a762f015",
          "md5": "b9d887f608b4ea97be1ec9c4915a66c7",
          "sha256": "67991321d5be6a8c6fe13862a2105d169f55f5023eb7e90e1f0203431fc7b06b"
        },
        "downloads": -1,
        "filename": "j2lint-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b9d887f608b4ea97be1ec9c4915a66c7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 20808,
        "upload_time": "2022-07-29T16:02:51",
        "upload_time_iso_8601": "2022-07-29T16:02:51.120390Z",
        "url": "https://files.pythonhosted.org/packages/5f/63/1236cf60e34b83dcd17bdb6555bc6e800ea0aec401d93233df49a762f015/j2lint-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "661cf21b90c793a4022fd9cefa75cc8db818ebeecd3ba3d9fe2c8a09cd83798c",
        "md5": "c8afe8ef19cba1bfcc1bd60b0a7910ff",
        "sha256": "2dfe866e875dd4ac8b53d25de54f5b4ac64509653b9365c65523f8e7958680a8"
      },
      "downloads": -1,
      "filename": "j2lint-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c8afe8ef19cba1bfcc1bd60b0a7910ff",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 25739,
      "upload_time": "2022-07-29T16:02:40",
      "upload_time_iso_8601": "2022-07-29T16:02:40.032381Z",
      "url": "https://files.pythonhosted.org/packages/66/1c/f21b90c793a4022fd9cefa75cc8db818ebeecd3ba3d9fe2c8a09cd83798c/j2lint-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5f631236cf60e34b83dcd17bdb6555bc6e800ea0aec401d93233df49a762f015",
        "md5": "b9d887f608b4ea97be1ec9c4915a66c7",
        "sha256": "67991321d5be6a8c6fe13862a2105d169f55f5023eb7e90e1f0203431fc7b06b"
      },
      "downloads": -1,
      "filename": "j2lint-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "b9d887f608b4ea97be1ec9c4915a66c7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 20808,
      "upload_time": "2022-07-29T16:02:51",
      "upload_time_iso_8601": "2022-07-29T16:02:51.120390Z",
      "url": "https://files.pythonhosted.org/packages/5f/63/1236cf60e34b83dcd17bdb6555bc6e800ea0aec401d93233df49a762f015/j2lint-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}