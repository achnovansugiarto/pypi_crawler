{
  "info": {
    "author": "A.L.I Technologies",
    "author_email": "benjamin.ioller@ali.jp",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# COSMOS API client\n\nThis is a simple client package to help you connect your drone to COSMOS API by:\n- Generating End-Points.\n- Generating and processing Post-Request to the End-point.\n- Parsing Operation content.\n\nFor a complete API description, please refer to [COSMOS-API](https://dmtest.cosmos.ali.jp/docapi).\n\n## How to use\nAfter getting the token from COSMOS: ```api_token_example```, you can connect and update the telemetry with:\n```python\nimport cosmos_api\n\napi_token = \"api_token_example\"\ntelemetry_updater = cosmos_api.Telemetry(api_token)\nvehicle_state = {\"activity\": \"idle\", --- ,\"battery\": \"90%\"}\nresponse = telemetry_updater.send_telemetry(vehicle_state)\n```\n\n## How to build your **vehicle_state**\n\n**vehicle_state** is a *python dict* variable which include the essential telemetry from the drone.\nThis variable will be passed to the server as a json dump.\n\nA basic template can be:\n```python\nvehicle_state = {\n        \"activity\": \"idle\",\n        \"stamp\": 1602,\n        \"gps_0\": {\n            \"fix\": 3,\n            \"numsat\": 10},\n        \"mode\": \"STABILIZE\",\n        \"velocity\": [0.0, -0.01, 0.0],\n        \"battery\": {\n            \"level\": 100,\n            \"current\": 0.0,\n            \"voltage\": 12.587},\n        \"state\": \"STANDBY\",\n        \"location\": {\n            \"global_frame\": {\n                \"lat\": 35.9341147,\n                \"lon\": 139.5689006,\n                \"alt\": 0}},\n        \"ground_speed\": 0.0,\n        \"attitude\": {\n            \"pitch\": 0.0004752922395709902,\n            \"roll\": 0.0007311428198590875,\n            \"yaw\": -3.1402206420898438},\n        \"armed\": False,\n        \"order_feedback\": {\n            \"message\": \"\",\n            \"type\": \"\"},\n        \"heading\": 180}\n```\n\n## Operation\nCosmos provide operation information to the drone via ```/api/drone/myoperation``` endpoint.\nYou can get all the information with:\n```python\noperation = self.telemetry_updater.get_operation()\noperation.display()\n\n# Extract Waypoint with slug:\nwp = operation.get_wp(\"A\")\nwp.display()\nlat, lon, alt = wp.coordinates()\n```\n\n# API description\n\n## ```constructor```\n\n- Description\n```shell\nSend the telemetry to COSMOS server, .\n\nParameters\n----------\napi_token : str\n    A string of the shared api token obtained from the server.\n\nReturns\n-------\ncosmos_api.Telemetry Object\n    A helper to send drone telemetry to cosmos server.\n```\n\n- Use with:\n```python\ntelemetry_updater = cosmos_api.Telemetry(api_token)\n```\n\n## ```send_telemetry```\n- Description\n```shell\nPost the telemetry to COSMOS server, to the correct EndPoint with a functional header generated with the shared token.\n\nParameters\n----------\nvehicle_state : dict\n    vehicle_state a dictionary including drone telemetry field.\n\nReturns\n-------\nrequests.Response Object\n    The response to the post request. Please refer to requests documentation and bellow for error codes.\n```\n\n- Use with:\n```python\nresponse = telemetry_updater.send_telemetry(vehicle_state)\n```\n\n- Server Code:\n```\nOK = 200: Telemetry posted correctly.\nWRONGTELEMETRY = 400: Wrong or incomplete telemetry format.\nWRONGTOKEN = 401: No drone registered under the used token.\n```\n\n## ```get_operation```\n- Description\n```shell\nGet the information of the active operation of the drone. This helper will report error code, and parse the operation content.\n\nParameters\n----------\nNone\n\nReturns\n-------\ncosmos_api.Operation Object\n    The content of the operation parsed under Operation-Object attribute. (see Operation Object documentation)\n```\n\n- Use with:\n```python\noperation = telemetry_updater.get_operation()\n```\n\n## class ```Operation```\n\n- Description\nA class used to access operation content.\n\n### Attributes\n----------\n- ```status_code``` : int \\\n    server status code error.\n- ```MOCA``` : int \\\n    Minimun Obstacle Cleared Altitude of the operation in meter.\n- ```waypoints``` : list of WayPoint object \\\n    List of all the waypoint formated under the WayPoint Object.\n- ```mission``` : json \\\n    Specific mission content. (TODO)\n\n### Methods\n-------\n- ```display()```:\\\nPrints the operation content.\n- ```get_wp(waypoint_slug)```:\\\nRetrieve Waypoint by slug.\nArgs: waypoint_slug (string)\nReturn: waypoint (WayPoint object).\n\n\n- Use with:\n```python\noperation = telemetry_updater.get_operation()\noperation.display()\nwp = operation.get_wp(\"A\")\nwp.display()\nlat, lon, alt = wp.coordinates()\n```\n\n## class ```WayPoint```\n\n- Description\nA class used to acces Waypoint information.\n\n### Attributes\n----------\n- ```name``` : str\\\n    Waypoint name on the MAP.\n- ```slug``` : str\\\n    Short name of the Waypoint.\\\n- ```latitude``` : double\\\n    latitude of the waypoint in °.\n- ```longitude``` : double\\\n    longitude of the waypoint in °.\n- ```altitude``` : float\\\n    altitude of the waypoint in meter.\n\n### Methods\n-------\n- ```display()```\\\nPrints the waypoint content.\n\n- ```coordinates()```\\\nReturn a tuple containing (latitude, longitude, altitude).\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://dmtest.cosmos.ali.jp/docapi",
    "keywords": "cosmos,pycosmos",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pycosmosapi",
    "package_url": "https://pypi.org/project/pycosmosapi/",
    "platform": "",
    "project_url": "https://pypi.org/project/pycosmosapi/",
    "project_urls": {
      "Homepage": "https://dmtest.cosmos.ali.jp/docapi"
    },
    "release_url": "https://pypi.org/project/pycosmosapi/0.0.3/",
    "requires_dist": [
      "requests (>=2.23.0)"
    ],
    "requires_python": ">=3.5",
    "summary": "Telemetry helper for Cosmos API.",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9138643,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c00921627aa9f7ba125b15e39b74ad81d9a9dac481dc22cd38851698e80320d6",
          "md5": "c9dd8ebc1f028bc0b8d1abfdc9b5c104",
          "sha256": "00221df63793645ff77fff7755d2bca1317ba1a9e2722a0add4504b72ffd2d48"
        },
        "downloads": -1,
        "filename": "pycosmosapi-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c9dd8ebc1f028bc0b8d1abfdc9b5c104",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6637,
        "upload_time": "2020-12-28T09:02:44",
        "upload_time_iso_8601": "2020-12-28T09:02:44.259335Z",
        "url": "https://files.pythonhosted.org/packages/c0/09/21627aa9f7ba125b15e39b74ad81d9a9dac481dc22cd38851698e80320d6/pycosmosapi-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2e710b2331cdd913434619d857bca1b943301cbac7721d1f0f56fdd409cf6843",
          "md5": "e2dd595fded96a4ea4f8df87c8c0c4c2",
          "sha256": "58c32577b9590034718afd942af151f5765b8cb73ccf51e4885b99afcdd3f50b"
        },
        "downloads": -1,
        "filename": "pycosmosapi-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e2dd595fded96a4ea4f8df87c8c0c4c2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 2231,
        "upload_time": "2020-12-28T09:02:45",
        "upload_time_iso_8601": "2020-12-28T09:02:45.395506Z",
        "url": "https://files.pythonhosted.org/packages/2e/71/0b2331cdd913434619d857bca1b943301cbac7721d1f0f56fdd409cf6843/pycosmosapi-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "78b57893368a0c7155101fa2f8679583fcfeef4b3f37c15d518bb1d06229358e",
          "md5": "04f4eac7aa3bcf4b4b5721620dda7390",
          "sha256": "1dfaa7cfda620cd3a4d289a9b4c5d539207b82d6ba4ac9a939a2d55de4b8b01f"
        },
        "downloads": -1,
        "filename": "pycosmosapi-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "04f4eac7aa3bcf4b4b5721620dda7390",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7875,
        "upload_time": "2021-01-07T00:56:18",
        "upload_time_iso_8601": "2021-01-07T00:56:18.821195Z",
        "url": "https://files.pythonhosted.org/packages/78/b5/7893368a0c7155101fa2f8679583fcfeef4b3f37c15d518bb1d06229358e/pycosmosapi-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1695c366d9f5cabbb652d01307f4e7a76edbdd8a71960d2167cbcbc6759cad0c",
          "md5": "ef5a92a41490176da0a5c4425f1429ef",
          "sha256": "4efcbde6becb73e4543c0b7e06e83d7e7372f52fa8e06122bd4500abb7b50548"
        },
        "downloads": -1,
        "filename": "pycosmosapi-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ef5a92a41490176da0a5c4425f1429ef",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3758,
        "upload_time": "2021-01-07T00:56:20",
        "upload_time_iso_8601": "2021-01-07T00:56:20.303563Z",
        "url": "https://files.pythonhosted.org/packages/16/95/c366d9f5cabbb652d01307f4e7a76edbdd8a71960d2167cbcbc6759cad0c/pycosmosapi-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1c32aebbd9f9ee4c9cd33297d4479fb6de843587e7a0c95824adf7aa99333d75",
          "md5": "716c2d55725df008e77fa3f3591b478d",
          "sha256": "b601616bc0ad9f46c8340570b1a689d9ceb495821964d8ed107677fc79042884"
        },
        "downloads": -1,
        "filename": "pycosmosapi-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "716c2d55725df008e77fa3f3591b478d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 8940,
        "upload_time": "2021-01-15T00:33:55",
        "upload_time_iso_8601": "2021-01-15T00:33:55.234788Z",
        "url": "https://files.pythonhosted.org/packages/1c/32/aebbd9f9ee4c9cd33297d4479fb6de843587e7a0c95824adf7aa99333d75/pycosmosapi-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7567df25393e329fc126c1bfd27e2dee8027e84a9ee382386e004a8fbbbcb73a",
          "md5": "4a9efefdfb68a27c4930dfb653705e78",
          "sha256": "7add6fa89e5e2092cc4d99eeff90a9c1b84549c71757038408169f032110b73f"
        },
        "downloads": -1,
        "filename": "pycosmosapi-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "4a9efefdfb68a27c4930dfb653705e78",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 5110,
        "upload_time": "2021-01-15T00:33:56",
        "upload_time_iso_8601": "2021-01-15T00:33:56.901302Z",
        "url": "https://files.pythonhosted.org/packages/75/67/df25393e329fc126c1bfd27e2dee8027e84a9ee382386e004a8fbbbcb73a/pycosmosapi-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1c32aebbd9f9ee4c9cd33297d4479fb6de843587e7a0c95824adf7aa99333d75",
        "md5": "716c2d55725df008e77fa3f3591b478d",
        "sha256": "b601616bc0ad9f46c8340570b1a689d9ceb495821964d8ed107677fc79042884"
      },
      "downloads": -1,
      "filename": "pycosmosapi-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "716c2d55725df008e77fa3f3591b478d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 8940,
      "upload_time": "2021-01-15T00:33:55",
      "upload_time_iso_8601": "2021-01-15T00:33:55.234788Z",
      "url": "https://files.pythonhosted.org/packages/1c/32/aebbd9f9ee4c9cd33297d4479fb6de843587e7a0c95824adf7aa99333d75/pycosmosapi-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7567df25393e329fc126c1bfd27e2dee8027e84a9ee382386e004a8fbbbcb73a",
        "md5": "4a9efefdfb68a27c4930dfb653705e78",
        "sha256": "7add6fa89e5e2092cc4d99eeff90a9c1b84549c71757038408169f032110b73f"
      },
      "downloads": -1,
      "filename": "pycosmosapi-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "4a9efefdfb68a27c4930dfb653705e78",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 5110,
      "upload_time": "2021-01-15T00:33:56",
      "upload_time_iso_8601": "2021-01-15T00:33:56.901302Z",
      "url": "https://files.pythonhosted.org/packages/75/67/df25393e329fc126c1bfd27e2dee8027e84a9ee382386e004a8fbbbcb73a/pycosmosapi-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}