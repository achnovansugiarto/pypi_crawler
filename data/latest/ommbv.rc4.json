{
  "info": {
    "author": "Russell A. Stoneback",
    "author_email": "github@stoneris.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Physics"
    ],
    "description": "<div align=\"center\">\n        <img height=\"0\" width=\"0px\">\n        <img width=\"20%\" src=\"docs/images/logo_high_res.png\" alt=\"OMMBV\" title=\"OMMBV\"</img>\n</div>\n\n# Orthogonal Multipole Magnetic Basis Vectors (OMMBV)\n[![Build Status](https://github.com/rstoneback/OMMBV/actions/workflows/main.yml/badge.svg)](https://github.com/rstoneback/OMMBV/actions/workflows/main.yml/badge.svg)\n[![Coverage Status](https://coveralls.io/repos/github/rstoneback/OMMBV/badge.svg?branch=main)](https://coveralls.io/github/rstoneback/OMMBV?branch=main)\n[![Documentation Status](https://readthedocs.org/projects/ommbv/badge/?version=latest)](https://ommbv.readthedocs.io/en/latest/?badge=latest)\n[![DOI](https://zenodo.org/badge/138220240.svg)](https://zenodo.org/badge/latestdoi/138220240)\n\nThe motion of plasma in the ionosphere is the result of forcing from neutral \nwinds, electric fields, as well as the orientation of those fields and forces\nrelative to the background magnetic field. OMMBV (Orthogonal Multipole \nMagnetic Basis Vectors) calculates directions (unit vectors) based upon the \ngeomagnetic field that are optimized for understanding the movement of plasma,\nthe mapping of electric fields, and coupling with the neutral atmosphere. \nThis system is the first to remain orthogonal for multipole magnetic fields\nas well as when including a geodetic reference surface (Earth). \n \nOMMBV also includes methods for scaling ion drifts and electric fields \nat one location to any other location along the same field line, though\ntypically the mapping is either the magnetic footpoint or to the \nmagnetic equator. Scaling to the footpoint is critical for understanding \nhow neutral atmosphere winds at low altitudes (120 km for coupling with\nE-region ionosphere) will be \nexpressed either at the satellite location or at the magnetic equator. \nScaling to the magnetic equator can be particularly effective when creating a \ncommon basis for integrating measurements from multiple platforms as\nthe scaling reduces a 4-dimensional data distribution (local time,\nlongitude, latitude, altitude) down to three (local time,\nlongitude, apex height). This feature may also be used by numerical models\nto reduce memory requirements and runtime. Calculations may be performed\nat the magnetic equator and then mapped throughout the magnetosphere, as needed.\n\nOMMBV is used by the NASA Ionospheric Connections (ICON) Explorer \nMission to understand how remote measurements of neutral motions at 120 km \nimpacts the motion of plasma measured in-situ (at the satellite location). \nThis package is also being used by the NOAA/NSPO COSMIC-2 \nconstellation to express plasma measurements made at the satellite locations \nin a more geophysically useful basis. OMMBV is currently being incorporated \ninto analysis routines suitable for integrating physics-based models (TIEGCM) \nand measurements from the Communications/Navigation Outage Forecasting System \n(C/NOFS) satellite.\n\nThe development of the multipole software has been supported, in part, by \nmultiple agencies under the following grants:\nNaval Research Laboratory N00173-19-1-G016 and NASA 80NSSC18K1203.\n\nPrevious versions of this software that provided an 'average' basis were \nfunded by: National Aeronautics and Space Agency (NASA NNG12FA45C), \nNational Oceanic and Atmospheric Administration (NOAA NSF AGS-1033112), \nand the National Science Foundation (NSF 1651393).\n\n# Geomagnetic Unit Vectors\nPlasma in the ionosphere is constrained by the geomagnetic field. Motion \nalong magnetic field lines is easy while motion across field lines is \ncomparatively hard. To understand the motion of ions it is generally \nbest to do so along these directions. Though there are an infinite number\nof vector pairs orthogonal to the geomagnetic field, OMMBV produces a vector\nbasis optimized for ion-neutral coupling investigations, the major driver of\nthe ionosphere.\n\n - Field Aligned: Along the geomagnetic field, pointing generally from south \nto north at the equator.\n\n - Zonal: Perpendicular to the field aligned vector and points to a \nneighboring field line that has no change in apex height at the geomagnetic\nequator. The apex height is the highest altitude of a magnetic field\nline above a reference surface.\n\n - Meridional: Perpendicular to the zonal and field aligned directions. \nThis vector is positive upward and is vertical at the geomagnetic equator. \nTo remain perpendicular to the field, the meridional vector has a poleward \ncomponent when away from the magnetic equator. Note that meridional may \nsometimes be used in other contexts to be north/south. Here, the vector \nis generally up/down.\n\n# Performance\nOMMBV is able to characterize its uncertainty in determining an accurate\nvector basis. There are two potential calculation paths within OMMBV. The \ndefault path uses information from the calculated zonal vector and field-aligned\nvector to obtain the corresponding meridional vector. Alternately, OMMBV can\ncalculate the meridional vector and obtain the corresponding zonal vector.\nIf the magnetic field has an underlying orthogonal vector basis, and if\nOMMBV is operating correctly, OMMBV's two calculation paths will \nyield the same result. \n\nThe figures linked below provide direct numerical evidence that OMMBV is calculating\na valid orthogonal vector basis. OMMBV's normalized uncertainty \nwhen applied to a [pure dipole magnetic field with a spherical Earth](docs/images/dipole_uncertainty.png), and\nthe uncertainty when [applied to the Earth](docs/images/igrf_uncertainty.png) using the\n[International Geomagnetic Reference Field](https://geomag.bgs.ac.uk/research/modelling/IGRF.html),\nare effectively the same. Both systems have an expected maximum uncertainty\nof around 0.0001% between +/- 50 degrees latitude. Both figures are calculated\nat an altitude of 550 km and use an OMMBV calculation step size of 5 km.\nThe default step size for OMMBV and IGRF is 0.5 km which offers improved \nperformance.\n\n# Electric Field and Ion Drift Mapping\nOMMBV provides scalars for mapping ion motions or electric fields\nexpressed along geomagnetic unit vectors to other locations along the\nsame field line, though typically the scaling is to either the \nmagnetic footpoint or to the magnetic equator. \nThese scalars are determined assuming that magnetic \nfield lines are equipotential, thus the electric field associated with \nion motion will vary as the distance between two geomagnetic field lines \nchanges. Note that there is no mixing of 'zonal' or 'meridional' directions\nwhen mapping along a field line. While the orientation for both directions\nvaries along a field line, the zonal and meridional directions are always\northogonal.\n\n# Field-Line Tracing\nOMMBV uses the apex locations of field lines to determine both the unit vectors\nas well as the mapping vectors for both ion drifts and electric fields.\nTo determine the apex location of field lines, the International Geomagnetic \nReference Field (IGRF) is coupled into SciPy's odeint to produce an \naccurate field line tracing algorithm. The SciPy integrator is an adaptive\nmethod that internally determines an appropriate step size thus the \nperformance of the technique is both robust and accurate. The sensitivity \nof the field line tracing and other quantities in this package have been \nestablished via direct comparison (when possible) as well as sensitivity \nand consistency tests.\n\n# Coordinate Transformations\nSupports the conversion of geographic and geodetic (WGS84) into each other \nand into Earth Centered Earth Fixed (ECEF). ECEF coordinates are fixed with \nrespect to the Earth, x points from the center towards 0 degrees longitude \nat the geographic equator, y similarly points to 90 degrees east, while z \npoints along the Earth's rotation axis.\n\n# Vector Transformations\nSupports expressing a vector known in one basis into the same vector \nexpressed in another basis. This supports translating measurements made in a \nspacecraft frame into frames more relevant for scientific analysis.\n\n# Change Log\nAll notable changes to this project will be documented in this file.\nThis project adheres to [Semantic Versioning](http://semver.org/).\n\n## [1.0.1] - 2022-01-04\n- Added pyproject.toml to support systems without numpy.\n- Modified manifest.ini to include version.txt\n- Corrected bad link in build status badge\n- Corrected BSD license classifier\n\n## [1.0.0] - 2021-12-24\n- Updated vector basis algorithm and reduced uncertainty when \nscaling ion drifts and electric fields for multipole fields by four orders of magnitude.\n- Added support for multiple unit test magnetic fields, from dipole up to octupole. \n- Added support for testing vector basis determination with a spherical Earth.\n- Improved tolerance checks on vector basis during iteration so outputs better\nreflect user settings.\n- Improved robustness of vector basis calculation at higher latitudes.\n- Updated IGRF step method to slow integration when reaching target altitude\n  to use user provided step size.\n- Allow automatic expansion of `field_line_trace` step_size after many iterations.\n- Improved robustness of `apex_location_info` to unreported changes in \n`field_line_trace` step_size.\n- Added `pole_tol` keyword which specifies how close to vertical local\n  magnetic field must be to be considered a pole.\n- Added `utils.datetimes_to_doubles` a method to calculate year and \n  fractional day of year for IGRF calls.\n- Added keyword `max_steps` to `apex_location_info`\n- Corrected normalization error in `magnetic_vector`.\n- Deprecated `scalar` input for basis vectors.\n- Reduced number of allowed recursive calls for `field_line_trace`\n- Moved vector functions to `OMMBV.vector`\n- Moved transformation functions to `OMMBV.trans`\n- Moved tracing functions to `OMMBV.trace`\n- Moved older algorithms not needed for current outputs to `OMMBV.heritage`\n- Moved supporting Fortran functions from `OMMBV.igrf13` to `OMMBV.sources`\n- Improved robustness of `apex_location_info` to `full_field_line` tracing failures.\n- Added support for GitHub Workflows\n- Refactored unit testing\n- Moved to `setup.cfg`\n- Added `.zenodo.json`\n- Improved documentation\n- Updated docstrings\n- Added logo\n- Updated testing versions\n\n## [0.5.5] - 2021-06-16\n- Updated setup.py\n- Added compatibility with pysat v3.x\n\n## [0.5.4] - 2020-03-03\n- Updated to latest IGRF reference code\n\n## [0.5.3] - 2020-06-19\n- Metadata clarity improvements\n\n## [0.5.2] - 2020-06-04\n- Fixed bugs coupling the code repo to community services related to the name \n  change from pysatMagvect to OMMBV\n\n## [0.5.0] - 2020-02-01\n- Added community documents\n- Implemented new algorithm for basis vectors. First system valid for multipole fields.\n- Implemented new E and D scaling vectors similar to Richmond (apexpy)\n- Implemented high accuracy numerical path that minimizes geodetic transformations\n- Reviewed and updated default parameters based upon observed peformance\n- Validated meridional vector along maximum apex height gradient\n- Retained previous basis methods, identified by heritage or integrated\n- Improved accuracy and robustness of heritage techniques though new methods recommended\n- Validated accuracy of scaling methods\n- Incorporated IGRF13\n- Expanded and organized unit tests\n- Removed pysat as a dependency\n- Docstring improvements\n\n## [0.4.0] - 2018-11-26\n- Testing routines have been expanded significantly.\n- Default parameters have been updated based upon this testing.\n- Numerous corrections have been implemented.\n\n## [0.3.1] - 2018-08-06\n- Improved use of ECEF and ENU vectors.\n\n## [0.3.0] - 2018-07-24\n- Improved robustness of setup.py\n- Corrected Earth Centered Earth Fixed (ECEF) and East, North, Up (ENU) conversion routines.\n\n## [0.2.0] - 2018-07-05\n- Improved documentation and metadata.\n\n## [0.1.6] - 2018-06-29\n- Improved installation process\n\n## [0.1.0] - 2018-06-27\n- Initial release",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/rstoneback/OMMBV",
    "keywords": "vector-basis,geomagnetic-field,magnetic-fields,field-line-tracing,meridional,zonal,field-aligned,satellite,electric-field-mapping,ion-drift-mapping,multipole",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "OMMBV",
    "package_url": "https://pypi.org/project/OMMBV/",
    "platform": "",
    "project_url": "https://pypi.org/project/OMMBV/",
    "project_urls": {
      "Homepage": "https://github.com/rstoneback/OMMBV"
    },
    "release_url": "https://pypi.org/project/OMMBV/1.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.5",
    "summary": "'Orthogonal geomagnetic vector basis and field-line mapping for multipole magnetic fields.'",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12478942,
  "releases": {
    "0.5.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f2429a4b63c91e2fed67749bde313fbe68f086e5f57f21fe8bdd4ba27862de9e",
          "md5": "d5ff2631bcaabb4e1b133cdf627d8dd5",
          "sha256": "d43e1ea3e97ce69d60fe697737533b552ebda8edec89997c1af90bb0098f6aba"
        },
        "downloads": -1,
        "filename": "OMMBV-0.5.4.tar.gz",
        "has_sig": false,
        "md5_digest": "d5ff2631bcaabb4e1b133cdf627d8dd5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 63257,
        "upload_time": "2021-03-02T22:01:56",
        "upload_time_iso_8601": "2021-03-02T22:01:56.919418Z",
        "url": "https://files.pythonhosted.org/packages/f2/42/9a4b63c91e2fed67749bde313fbe68f086e5f57f21fe8bdd4ba27862de9e/OMMBV-0.5.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "90e2b4d8fd59b7e5d2397fb801d6f4d64f68524d0ef68a889d72e82b4974b5aa",
          "md5": "d1ee95dcff3241527b690cfa9c79b934",
          "sha256": "64ac41cf7e1b30268f468e966a9b4b3372d3a75700fbe4c90dfe9b21bc54b828"
        },
        "downloads": -1,
        "filename": "OMMBV-0.5.5.tar.gz",
        "has_sig": false,
        "md5_digest": "d1ee95dcff3241527b690cfa9c79b934",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 63426,
        "upload_time": "2021-06-15T22:27:47",
        "upload_time_iso_8601": "2021-06-15T22:27:47.352513Z",
        "url": "https://files.pythonhosted.org/packages/90/e2/b4d8fd59b7e5d2397fb801d6f4d64f68524d0ef68a889d72e82b4974b5aa/OMMBV-0.5.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "325c1b0c07b88b391459bda6eec1f29720cf6b3324bb57718e2a74463714d725",
          "md5": "edf1693c72b47c45cf71b79d92b4ce9d",
          "sha256": "451b88604de7bb401a2f99e09338ced8abf029a38332f94d57ab8d2fe6db4ec7"
        },
        "downloads": -1,
        "filename": "OMMBV-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "edf1693c72b47c45cf71b79d92b4ce9d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 66851,
        "upload_time": "2022-01-03T16:56:06",
        "upload_time_iso_8601": "2022-01-03T16:56:06.819441Z",
        "url": "https://files.pythonhosted.org/packages/32/5c/1b0c07b88b391459bda6eec1f29720cf6b3324bb57718e2a74463714d725/OMMBV-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c7f3b85d78e1a2e936c3cf23ba30d914cb5fcb8811bbdf8db50463355c3d944f",
          "md5": "f0077003fab473ae130e037a0c3ad38c",
          "sha256": "ccb5beb786abc0db84c7859105895ca223fc3398b49350eb7d4c67c843e9a214"
        },
        "downloads": -1,
        "filename": "OMMBV-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f0077003fab473ae130e037a0c3ad38c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 67074,
        "upload_time": "2022-01-04T23:09:16",
        "upload_time_iso_8601": "2022-01-04T23:09:16.057699Z",
        "url": "https://files.pythonhosted.org/packages/c7/f3/b85d78e1a2e936c3cf23ba30d914cb5fcb8811bbdf8db50463355c3d944f/OMMBV-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c7f3b85d78e1a2e936c3cf23ba30d914cb5fcb8811bbdf8db50463355c3d944f",
        "md5": "f0077003fab473ae130e037a0c3ad38c",
        "sha256": "ccb5beb786abc0db84c7859105895ca223fc3398b49350eb7d4c67c843e9a214"
      },
      "downloads": -1,
      "filename": "OMMBV-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "f0077003fab473ae130e037a0c3ad38c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 67074,
      "upload_time": "2022-01-04T23:09:16",
      "upload_time_iso_8601": "2022-01-04T23:09:16.057699Z",
      "url": "https://files.pythonhosted.org/packages/c7/f3/b85d78e1a2e936c3cf23ba30d914cb5fcb8811bbdf8db50463355c3d944f/OMMBV-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}