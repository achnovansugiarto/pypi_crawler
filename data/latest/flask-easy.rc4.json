{
  "info": {
    "author": "Joseph Maclean Arhin",
    "author_email": "me@josephmaclean.dev",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
      "Topic :: Internet :: WWW/HTTP :: WSGI",
      "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",
      "Topic :: Software Development :: Libraries :: Application Frameworks"
    ],
    "description": "# FLASK EASY\nFlask easy is a battery included framework built on top of flask that helps with easy project scaffolding and project setup. Taking inspirations from other frameworks such as Django, SpringBoot and Laravel, flask-easy takes care of setting up your flask application with all the necessary dependencies, structure so that all you need to think of is churn out your precious features.\n\n## Installation\n\n    pip install flask-easy\n\n## Getting Started\nOnce installed, run the scaffolding command and follow the prompt by selecting your desired setup\n```\neasy-admin scaffold <project-path>\n```\n\nWhen the command is run, the project will be spawned in the specified directory with the directory structure below\n\n## Directory Structure\n\n```\n├── app\n│   ├── __init__.py\n│   ├── models\n│   │   ├── README.md\n│   │   └── __init__.py\n│   ├── repositories\n│   │   ├── README.md\n│   │   └── __init__.py\n│   ├── schemas\n│   │   ├── README.md\n│   │   └── __init__.py\n│   ├── services\n│   │   ├── README.md\n│   │   └── __init__.py\n│   ├── urls.py\n│   └── views\n│       ├── README.md\n│       └── __init__.py\n├── config.py\n└── tests\n    └── __init__.py\n\n```\n\n### app\nThis contains the main app. This in addition to the config.py file is what will be deployed in production\n\n#### app/__init__.py\nThis file contains all main instance of your app. This is the entry point to the project\n\n### models\nBattery included directory. This is where your models should be.\nAll models generated using the `flask easy generate model <model_name>` command will be spawned in this directory and\nautomatically imported in the `__init__.py` file here\n\nThe snippets below are sample codes generated for sql and mongodb respectively using the `generate model` command\n```python\n# SQL\nfrom flask_easy import db, fields\n\n\nclass User(db.Model):\n    pass\n\n```\n\n```python\n# Mongodb\nimport mongoengine as me\n\n\nclass User(me.Document):\n    id = me.IntField(primary_key=True)\n   ```\n\n\n### repositories\nBattery included directory. This is where your repositories should be. We advise that you extract all database logic\ninto this directory. You can also inherit from Repository classes that take care of basic queries so you don't have to\ndo it yourself. These classes can be overridden.\n\nRepositories generate generated using the `flask easy generate repository <repository_name>` command will be spawned in this directory and\nautomatically imported in the `__init__.py` file here\n\nThe snippets below are sample codes generated for sql and mongodb respectively using the `generate repository `command\n\n```python\n# note that this is for sql\n\nfrom flask_easy.repository.sql import Repository\nfrom app.models import User\n\n\nclass UserRepository(Repository):\n    model = User\n\n    # other peewee sql query logic goes here\n\n\n```\n\n```python\n# for mongodb\n\nfrom flask_easy.repository.mongo import Repository\nfrom app.models import User\n\n\nclass UserRepository(Repository):\n    model = User\n\n    # Other mongengine query logic goes here\n\n```\n\n### schemas\nNot battery included. The `schemas` directory contains all your marshmallow schema for validating,\nserializing and deserializing your data\n\n### services\nNot battery included. The `services` directory contains all your business logic. This directory can be deleted but it\nis advised that you keep your business logic here for clean code\n\n### tests\nThis directory contains all your test cases. This is where your tests should be.\n\n# Features\n\n## Routing\nFlask easy is built on top of flask as it's name suggests so routing is basically the same with one caveat ``urls.py``\n#### urls.py\nWhen a project is generated, it is accompanied by a urls.py file.\n\n```python\nfrom flask_easy import route\n\nroutes = []\n```\nThis is where you register all your views/blueprints.\n\ne.g\n\n```python\n# views/user_view.py\nfrom flask_easy import ResponseEntity, Blueprint\n\nuser = Blueprint(\"user\", __name__)\n\n\n@user.get(\"/user/hello\")\ndef hello_user():\n    return ResponseEntity.ok({\"greeting\": \"hello\"})\n\n```\n\n\n```python\n# urls.py\n\nfrom flask_easy import Route\nfrom app.views import user # Note that user is a blueprint\nfrom app.views import otherview\n\nroutes = [\n    Route(user),\n    Route(otherview, url_prefix=\"api/v1/example\") # add url prefixes to all routes in this view\n]\n```\n\n## Config.py\nWhenever a new project is spawned using the `easy-admin scaffold <path>` command, a new `config.py` file is created in addition.\nThis file is created for configuration handling as described in the [flask documentation](https://flask.palletsprojects.com/en/2.1.x/config/).\n\n```python\nclass Config:\n    APP_NAME = \"My Awesome App\"\n\n    DB_HOST = \"\"\n    DB_USER = \"\"\n    DB_NAME = \"\"\n    DB_PASSWORD = \"\"\n    DB_ENGINE = \"postgres\"\n\n\nclass DevelopmentConfig(Config):\n    pass\n\n\nclass ProductionConfig(Config):\n    pass\n\n\nclass TestingConfig(Config):\n    pass\n\n ```\n\nWith the database connections already taken care for you, it's important to make sure that your database preference\nand credentials are set properly. You can change your database using the `DB_ENGINE` variable. Below are a list of the supported databases\n\n1. postgres\n2. sqlite\n3. mysql\n4. mongodb\n\nThe `APP_NAME` variable should be changed to your preferred name. This will also reflect in Swagger UI\n\n\n## Database Support\nFlask-Easy banks on [Peewee ORM](http://docs.peewee-orm.com/en/latest/) and [MongoEngine ODM](http://mongoengine.org/)\nfor database connectivity and support and has a thin wrapper around these packages just to take off the stress of setting\nyour database up from your shoulders. Although you can select your database when scaffolding your app, you can change it\nat anytime in the `config.py` file.\n\n### Migration(SQL Only)\n1. Make migration: `flask easy make:migration`\n2. Migrate database: `flask easy migrate`\n3. Rollback database migration: `flask easy migrate:rollback`\n\nAll migrations are taken care of by the Peewee library.\n\n## Authentication & Authorization\nFlask easy provides a mechanism for you to easily authenticate and authorize your routes.\n\n## Seeding\nFlask easy provides an inbuilt mechanism for you to easily seed your databases with dummy data for easier and faster\ntesting.\n\n```python\n# models/job.py\n\nimport uuid\nimport mongoengine as me\n\n\nclass Job(me.Document):\n    id = me.UUIDField(default=uuid.uuid4, primary_key=True)\n    title = me.StringField()\n    summary = me.StringField()\n    requirements = me.ListField()\n    skills = me.ListField()\n\n```\n```python\n# factory/job_seeder.py\n\nfrom flask_easy.factory import Seeder\nfrom app.models import Job\n\n\nclass JobSeeder(Seeder):\n    @classmethod\n    def run(cls):\n        job = Job(\n            title=cls.fake.name(),\n            summary=cls.fake.sentence(),\n            requirements=[cls.fake.sentence()],\n            skills=[cls.fake.sentence()],\n\n        )\n        job.save()\n\n```\nwith the help of the command `flask easy db:seed --class_name=JobSeeder`, you can seed your database with the data you need.\nTo seed the database 10 times is as easy as `flask easy db:seed 10 --class_name=JobSeeder`\n\n\n## Swagger UI\nFlask Easy comes with swagger UI integrated with the help of the excellent [flasgger library](https://github.com/flasgger/flasgger)\nAll the documentation required on its usage is available [here](https://github.com/flasgger/flasgger)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Flask-Easy",
    "package_url": "https://pypi.org/project/Flask-Easy/",
    "platform": null,
    "project_url": "https://pypi.org/project/Flask-Easy/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/Flask-Easy/0.1.3/",
    "requires_dist": [
      "Flask (>=2.1.3)",
      "marshmallow (>=3.14.1)",
      "blinker (>=1.4)",
      "flasgger (>=0.9.5)",
      "peewee (>=3.14.0)",
      "peewee-migrate (>=1.4.8)",
      "watchdog (>=2.1.2)",
      "cookiecutter (>=1.7.3)",
      "apispec (>=5.2.2)",
      "faker (>=13.12.0)"
    ],
    "requires_python": ">=3.8",
    "summary": "",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14496576,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f248a2dbeaa40f61b80ff253160933e692cbfb3ce53ce426ba518935fc592de7",
          "md5": "92ddca2e71afada88d6e39f84d3f9865",
          "sha256": "e7ce17b72a73f0182d182f0c6b9b8621e535efa9f5878698ca12b16e3c2e0879"
        },
        "downloads": -1,
        "filename": "Flask_Easy-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "92ddca2e71afada88d6e39f84d3f9865",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 10291,
        "upload_time": "2021-12-28T01:57:08",
        "upload_time_iso_8601": "2021-12-28T01:57:08.763427Z",
        "url": "https://files.pythonhosted.org/packages/f2/48/a2dbeaa40f61b80ff253160933e692cbfb3ce53ce426ba518935fc592de7/Flask_Easy-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c2423490ab9e4a7094bfc25656ec60a8d8c7868dc64cb225d5f562bd07c06c48",
          "md5": "6b801420feff7b79cdb4ce0f80cfbd2f",
          "sha256": "9de355f8ee6ebf0acdd9ee634f8c99c041620f2b054f5398e6339d34caa122c6"
        },
        "downloads": -1,
        "filename": "Flask-Easy-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6b801420feff7b79cdb4ce0f80cfbd2f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 7303,
        "upload_time": "2021-12-28T01:57:10",
        "upload_time_iso_8601": "2021-12-28T01:57:10.162502Z",
        "url": "https://files.pythonhosted.org/packages/c2/42/3490ab9e4a7094bfc25656ec60a8d8c7868dc64cb225d5f562bd07c06c48/Flask-Easy-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e04fe6452417731b3867159fc0609240f5ddcf2cb7ab4eb36492312ce1d00ab0",
          "md5": "d889dd8c251989bea9360829845e1826",
          "sha256": "7babaa70a1c9150cb6ffef177e1a51c96a3f4a1d48d70ffb05f7dde0f60d9c0a"
        },
        "downloads": -1,
        "filename": "Flask_Easy-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d889dd8c251989bea9360829845e1826",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 10528,
        "upload_time": "2021-12-30T04:15:21",
        "upload_time_iso_8601": "2021-12-30T04:15:21.944330Z",
        "url": "https://files.pythonhosted.org/packages/e0/4f/e6452417731b3867159fc0609240f5ddcf2cb7ab4eb36492312ce1d00ab0/Flask_Easy-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "07fc09de589f232b5b1473f2d623a900bd62bf4f25f60715db294b97f3f3afbb",
          "md5": "feaed9fa04a94dca928e1017f3a79b5f",
          "sha256": "6dcedc2ab9525e667ee25b832c7fa1c61976cf3441ad796f68d120becc9fb703"
        },
        "downloads": -1,
        "filename": "Flask-Easy-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "feaed9fa04a94dca928e1017f3a79b5f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 7685,
        "upload_time": "2021-12-30T04:15:22",
        "upload_time_iso_8601": "2021-12-30T04:15:22.862186Z",
        "url": "https://files.pythonhosted.org/packages/07/fc/09de589f232b5b1473f2d623a900bd62bf4f25f60715db294b97f3f3afbb/Flask-Easy-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c96351c2adb8a0dba2ce8de82c265ec37da5f8137776f0f9a62da81e62171bc4",
          "md5": "59571e25f31b8e568def91ff7d73e88c",
          "sha256": "a43352e1b23ef26a9d096349f0ce4515558695da2696305ba77b41f80b359f0d"
        },
        "downloads": -1,
        "filename": "Flask_Easy-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "59571e25f31b8e568def91ff7d73e88c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 23711,
        "upload_time": "2022-07-17T00:55:04",
        "upload_time_iso_8601": "2022-07-17T00:55:04.319765Z",
        "url": "https://files.pythonhosted.org/packages/c9/63/51c2adb8a0dba2ce8de82c265ec37da5f8137776f0f9a62da81e62171bc4/Flask_Easy-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "121582d32ffec257bad223c518bb17dff1bf5cb2f9992d2fbffdd7d704b9c140",
          "md5": "3d6b090b17679024f577fe154f1168a5",
          "sha256": "eddba0704e4a98f2194205bbe0b749e2b47bc304b6ec3c4dd76622e17029cb85"
        },
        "downloads": -1,
        "filename": "Flask-Easy-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "3d6b090b17679024f577fe154f1168a5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 16957,
        "upload_time": "2022-07-17T00:55:05",
        "upload_time_iso_8601": "2022-07-17T00:55:05.911806Z",
        "url": "https://files.pythonhosted.org/packages/12/15/82d32ffec257bad223c518bb17dff1bf5cb2f9992d2fbffdd7d704b9c140/Flask-Easy-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b078b827214be6b8b17b3efae2b5949fb2f6bec9a02552e27211a756b60bd296",
          "md5": "392e3ce12832f61e53f2b7c4ff8f8f12",
          "sha256": "eee3124c0904d73f84b913c0d838ffdf517544e6d3902ea67ab1892d12152fdf"
        },
        "downloads": -1,
        "filename": "Flask_Easy-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "392e3ce12832f61e53f2b7c4ff8f8f12",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 23468,
        "upload_time": "2022-07-20T16:40:35",
        "upload_time_iso_8601": "2022-07-20T16:40:35.337441Z",
        "url": "https://files.pythonhosted.org/packages/b0/78/b827214be6b8b17b3efae2b5949fb2f6bec9a02552e27211a756b60bd296/Flask_Easy-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "41adc9953837f051d207f592a95358a1b83e8f38d6af9fafdb6e5ea7425595a4",
          "md5": "2e42acb80e7a75c14b824f5822cb950d",
          "sha256": "8eef6ce7666a0d1f6d54cbc6d63aecb2a7b8a5a68fd7bbb424d01bfb82423fef"
        },
        "downloads": -1,
        "filename": "Flask-Easy-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "2e42acb80e7a75c14b824f5822cb950d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 16730,
        "upload_time": "2022-07-20T16:40:37",
        "upload_time_iso_8601": "2022-07-20T16:40:37.345708Z",
        "url": "https://files.pythonhosted.org/packages/41/ad/c9953837f051d207f592a95358a1b83e8f38d6af9fafdb6e5ea7425595a4/Flask-Easy-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b078b827214be6b8b17b3efae2b5949fb2f6bec9a02552e27211a756b60bd296",
        "md5": "392e3ce12832f61e53f2b7c4ff8f8f12",
        "sha256": "eee3124c0904d73f84b913c0d838ffdf517544e6d3902ea67ab1892d12152fdf"
      },
      "downloads": -1,
      "filename": "Flask_Easy-0.1.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "392e3ce12832f61e53f2b7c4ff8f8f12",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 23468,
      "upload_time": "2022-07-20T16:40:35",
      "upload_time_iso_8601": "2022-07-20T16:40:35.337441Z",
      "url": "https://files.pythonhosted.org/packages/b0/78/b827214be6b8b17b3efae2b5949fb2f6bec9a02552e27211a756b60bd296/Flask_Easy-0.1.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "41adc9953837f051d207f592a95358a1b83e8f38d6af9fafdb6e5ea7425595a4",
        "md5": "2e42acb80e7a75c14b824f5822cb950d",
        "sha256": "8eef6ce7666a0d1f6d54cbc6d63aecb2a7b8a5a68fd7bbb424d01bfb82423fef"
      },
      "downloads": -1,
      "filename": "Flask-Easy-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "2e42acb80e7a75c14b824f5822cb950d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 16730,
      "upload_time": "2022-07-20T16:40:37",
      "upload_time_iso_8601": "2022-07-20T16:40:37.345708Z",
      "url": "https://files.pythonhosted.org/packages/41/ad/c9953837f051d207f592a95358a1b83e8f38d6af9fafdb6e5ea7425595a4/Flask-Easy-0.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}