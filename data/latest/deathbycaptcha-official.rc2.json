{
  "info": {
    "author": "DBC Developers Team",
    "author_email": "deathbycaptcha@protonmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# [DeathByCaptcha](https://deathbycaptcha.com/)\n## Introduction\nDeathByCaptcha offers APIs of two types — HTTP and socket-based, with the latter being recommended for having faster responses and overall better performance. Switching between different APIs is usually as easy as changing the client class and/or package name, the interface stays the same.\nWhen using the socket API, please make sure that outgoing TCP traffic to *api.dbcapi.me* to the ports range *8123–8130* is not blocked on your side.\n## How to Use DBC API Clients\n### Thread-safety notes\n*Python* client are thread-safe, means it is perfectly fine to share a client between multiple threads (although in a heavily multithreaded applications it is a better idea to keep a pool of clients).\n### Common Clients' Interface\nAll clients have to be instantiated with two string arguments: your DeathByCaptcha account's *username* and *password*.\nAll clients provides a few methods to handle your CAPTCHAs and your DBC account. Below you will find those methods' short summary and signatures in pseudo-code. Check the example scripts and the clients' source code for more details.\n#### Upload()\nUploads a CAPTCHA to the DBC service for solving, returns uploaded CAPTCHA details on success, `NULL` otherwise. Here are the signatures in pseudo-code:\n```python\ndict deathbycaptcha.Client.upload(file imageFile)\ndict deathbycaptcha.Client.upload(str imageFileName)\n```  \n#### GetCaptcha()\nFetches uploaded CAPTCHA details, returns `NULL` on failures.\n```python\ndict deathbycaptcha.Client.get_captcha(dict imageFileName)\n```\n#### Report()\nReports incorrectly solved CAPTCHA for refund, returns `true` on success, `false` otherwise.\nPlease make sure the CAPTCHA you're reporting was in fact incorrectly solved, do not just report them thoughtlessly, or else you'll be flagged as abuser and banned.\n```python\nbool deathbycaptcha.Client.report(int captchaId)\n```\n#### Decode()\nThis method uploads a CAPTCHA, then polls for its status until it's solved or times out; returns solved CAPTCHA details on success, `NULL` otherwise.\n```python\ndict deathbycaptcha.Client.decode(file imageFile, int timeout)\ndict deathbycaptcha.Client.decode(str imageFileName, int timeout)\n```\n#### GetBalance()\nFetches your current DBC credit balance (in US cents).\n```python\nfloat deathbycaptcha.Client.get_balance()\n```\n### CAPTCHA objects/details hashes\nUse simple hashes (dictionaries, associative arrays etc.) to store CAPTCHA details, keeping numeric IDs under \"captcha\" key, CAPTCHA text under \"text\" key, and the correctness flag under \"is_correct\" key.\n### Example\nBelow you can find a DBC API client usage examples.\n```python\nimport deathbycaptcha\n# Put your DBC account username and password here.\n# Use deathbycaptcha.HttpClient for HTTP API.\nclient = deathbycaptcha.SocketClient(username, password)\ntry:\n    balance = client.get_balance()\n    # Put your CAPTCHA file name or file-like object, and optional\n    # solving timeout (in seconds) here:\n    captcha = client.decode(captcha_file_name, timeout)\n    if captcha:\n        # The CAPTCHA was solved; captcha[\"captcha\"] item holds its\n        # numeric ID, and captcha[\"text\"] item its text.\n        print (\"CAPTCHA %s solved: %s\" % (captcha[\"captcha\"], captcha[\"text\"]))\n        if ...:  # check if the CAPTCHA was incorrectly solved\n            client.report(captcha[\"captcha\"])\nexcept deathbycaptcha.AccessDeniedException:\n    # Access to DBC API denied, check your credentials and/or balance\n```\n# New Recaptcha API support\n## What's \"new reCAPTCHA/noCAPTCHA\"?\nThey're new reCAPTCHA challenges that typically require the user to identify and click on certain images. They're not to be confused with traditional word/number reCAPTCHAs (those have no images).\nFor your convinience, we implemented support for New Recaptcha API. If your software works with it, and supports minimal configuration, you should be able to decode captchas using New Recaptcha API in no time.\nWe provide two different types of New Recaptcha API:\n-   **Coordinates API**: Provided a screenshot, the API returns a group of coordinates to click.\n-   **Image Group API**: Provided a group of (base64-encoded) images, the API returns the indexes of the images to click.\n## Coordinates API FAQ:\n**What's the Coordinates API URL?**  \nTo use the **Coordinates API** you will have to send a HTTP POST Request to <http://api.dbcapi.me/api/captcha>\nWhat are the POST parameters for the **Coordinates API**?  \n-   **`username`**: Your DBC account username\n-   **`password`**: Your DBC account password\n-   **`captchafile`**: a Base64 encoded or Multipart file contents with a valid New Recaptcha screenshot\n-   **`type`=2**: Type 2 specifies this is a New Recaptcha **Coordinates API**\n**What's the response from the Coordinates API?**  \n-   **`captcha`**: id of the provided captcha, if the **text** field is null, you will have to pool the url <http://api.dbcapi.me/api/captcha/captcha_id> until it becomes available\n-   **`is\\_correct`**: (0 or 1) specifying if the captcha was marked as incorrect or unreadable\n-   **`text`**: a json-like nested list, with all the coordinates (x, y) to click relative to the image, for example:\n                  [[23.21, 82.11]]\n              \n    where the X coordinate is 23.21 and the Y coordinate is 82.11\n****\n## Image Group API FAQ:\n**What's the Image Group API URL?**  \nTo use the **Image Group API** you will have to send a HTTP POST Request to <http://api.dbcapi.me/api/captcha>\n**What are the POST parameters for the Image Group API?** \n-   **`username`**: Your DBC account username\n-   **`password`**: Your DBC account password\n-   **`captchafile`**: the Base64 encoded file contents with a valid New Recaptcha screenshot. You must send each image in a single \"captchafile\" parameter. The order you send them matters\n-   **`banner`**: the Base64 encoded banner image (the example image that appears on the upper right)\n-   **`banner\\_text`**: the banner text (the text that appears on the upper left)\n-   **`type`=3**: Type 3 specifies this is a New Recaptcha **Image Group API**\n-   **`grid`**: Optional grid parameter specifies what grid individual images in captcha are aligned to (string, width+\"x\"+height, Ex.: \"2x4\", if images aligned to 4 rows with 2 images in each. If not supplied, dbc will attempt to autodetect the grid.\n**What's the response from the Image Group API?**  \n-   **`captcha`**: id of the provided captcha, if the **`text`** field is null, you will have to pool the url <http://api.dbcapi.me/api/captcha/captcha_id> until it becomes available\n-   **`is\\_correct`**: (0 or 1) specifying if the captcha was marked as incorrect or unreadable\n-   **`text`**: a json-like list of the index for each image that should be clicked. for example:\n                  [1, 4, 6]\n              \n    where the images that should be clicked are the first, the fourth and the six, counting from left to right and up to bottom\n# New Recaptcha by Token API support (reCAPTCHA v2 and reCAPTCHA v3)\n## What's \"new reCAPTCHA by Token\"?\nThey're new reCAPTCHA challenges that typically require the user to identify and click on certain images. They're not to be confused with traditional word/number reCAPTCHAs (those have no images).\nFor your convenience, we implemented support for New Recaptcha by Token API. If your software works with it, and supports minimal configuration, you should be able to decode captchas using Death By Captcha in no time.\n-   **Token Image API**: Provided a site url and site key, the API returns a token that you will use to submit the form in the page with the reCaptcha challenge.\n## reCAPTCHA v2 API FAQ:\n**What's the Token Image API URL?**   \nTo use the Token Image API you will have to send a HTTP POST Request to <http://api.dbcapi.me/api/captcha>\n**What are the POST parameters for the Token image API?**\n-   **`username`**: Your DBC account username\n-   **`password`**: Your DBC account password\n-   **`type`=4**: Type 4 specifies this is a New Recaptcha Token Image API\n-   **`token_params`=json(payload)**: the data to access the recaptcha challenge\njson payload structure:\n    -   **`proxy`**: your proxy url and credentials (if any). Examples:\n        -   <http://127.0.0.1:3128>\n        -   <http://user:password@127.0.0.1:3128>\n    \n    -   **`proxytype`**: your proxy connection protocol. For supported proxy types refer to Which proxy types are supported?. Example:\n        -   HTTP\n    \n    -   **`googlekey`**: the google recaptcha site key of the website with the recaptcha. For more details about the site key refer to What is a recaptcha site key?. Example:\n        -   6Le-wvkSAAAAAPBMRTvw0Q4Muexq9bi0DJwx_mJ-\n    \n    -   **`pageurl`**: the url of the page with the recaptcha challenges. This url has to include the path in which the recaptcha is loaded. Example: if the recaptcha you want to solve is in <http://test.com/path1>, pageurl has to be <http://test.com/path1> and not <http://test.com>.\n    -   **`data-s`**: This parameter is only required for solve the google search tokens, the ones visible, while google search trigger the robot protection. Use the data-s value inside the google search response html. For regulars tokens don't use this parameter.\n    \nThe **`proxy`** parameter is optional, but we strongly recommend to use one to prevent token rejection by the provided page due to inconsistencies between the IP that solved the captcha (ours if no proxy is provided) and the IP that submitted the token for verification (yours).\n**Note**: If **`proxy`** is provided, **`proxytype`** is a required parameter.\nFull example of **`token_params`**:\n```json\n{\n  \"proxy\": \"http://127.0.0.1:3128\",\n  \"proxytype\": \"HTTP\",\n  \"googlekey\": \"6Le-wvkSAAAAAPBMRTvw0Q4Muexq9bi0DJwx_mJ-\",\n  \"pageurl\": \"http://test.com/path_with_recaptcha\"\n}\n```\nExample of **`token_params`** for google search captchas:\n```json\n{\n  \"googlekey\": \"6Le-wvkSA...\",\n  \"pageurl\": \"...\",\n  \"data-s\": \"IUdfh4rh0sd...\"\n}\n```\n**What's the response from the Token image API?**  \nThe token image API response has the same structure as regular captchas' response. Refer to Polling for uploaded CAPTCHA status for details about the response. The token will come in the text key of the response. It's valid for one use and has a 2 minute lifespan. It will be a string like the following:\n```bash\n\"03AOPBWq_RPO2vLzyk0h8gH0cA2X4v3tpYCPZR6Y4yxKy1s3Eo7CHZRQntxrdsaD2H0e6S3547xi1FlqJB4rob46J0-wfZMj6YpyVa0WGCfpWzBWcLn7tO_EYsvEC_3kfLNINWa5LnKrnJTDXTOz-JuCKvEXx0EQqzb0OU4z2np4uyu79lc_NdvL0IRFc3Cslu6UFV04CIfqXJBWCE5MY0Ag918r14b43ZdpwHSaVVrUqzCQMCybcGq0yxLQf9eSexFiAWmcWLI5nVNA81meTXhQlyCn5bbbI2IMSEErDqceZjf1mX3M67BhIb4\"\n```\n## What's \"new reCAPTCHA v3\"?\nThis API is quite similar to the tokens(reCAPTCHA v2) API. Only 2 new parameters were added, one for the `action` and other for the **minimal score(`min-score`)**\nreCAPTCHA v3 returns a score from each user, that evaluate if user is a bot or human. Then the website uses the score value that could range from 0 to 1 to decide if will accept or not the requests. Lower scores near to 0 are identified as bot.\nThe `action` parameter at reCAPTCHA v3 is an additional data used to separate different captcha validations like for example **login**, **register**, **sales**, **etc**.\n## reCAPTCHA v3 API FAQ:\n**What is `action` in reCAPTCHA v3?**  \nIs a new parameter that allows processing user actions on the website differently.\nTo find this we need to inspect the javascript code of the website looking for call of grecaptcha.execute function. Example: \n```javascript\ngrecaptcha.execute('6Lc2fhwTAAAAAGatXTzFYfvlQMI2T7B6ji8UVV_f', {action: something})\n```\nSometimes it's really hard to find it and we need to look through all javascript files. We may also try to find the value of action parameter inside ___grecaptcha_cfg configuration object. Also we can call grecaptcha.execute and inspect javascript code. The API will use \"verify\" default value it if we won't provide action in our request.\n**What is `min-score` in reCAPTCHA v3 API?**  \nThe minimal score needed for the captcha resolution. We recommend using the 0.3 min-score value, scores highers than 0.3 are hard to get.\n**What are the POST parameters for the reCAPTCHA v3 API?**\n-   **`username`**: Your DBC account username\n-   **`password`**: Your DBC account password\n-   **`type`=5**: Type 5 specifies this is reCAPTCHA v3 API\n-   **`token_params`**=json(payload): the data to access the recaptcha challenge\njson payload structure:\n    -   **`proxy`**: your proxy url and credentials (if any).Examples:\n        -   <http://127.0.0.1:3128>\n        -   <http://user:password@127.0.0.1:3128>\n    \n    -   **`proxytype`**: your proxy connection protocol. For supported proxy types refer to Which proxy types are supported?. Example: \n        -   HTTP\n    \n    -   **`googlekey`**: the google recaptcha site key of the website with the recaptcha. For more details about the site key refer to What is a recaptcha site key?. Example:\n        -   6Le-wvkSAAAAAPBMRTvw0Q4Muexq9bi0DJwx_mJ-\n    \n    -   **`pageurl`**: the url of the page with the recaptcha challenges. This url has to include the path in which the recaptcha is loaded. Example: if the recaptcha you want to solve is in <http://test.com/path1>, pageurl has to be <http://test.com/path1> and not <http://test.com>.\n    \n    -   **`action`**: The action name.\n    \n    -   **`min_score`**: The minimal score, usually 0.3\n    \nThe **`proxy`** parameter is optional, but we strongly recommend to use one to prevent rejection by the provided page due to inconsistencies between the IP that solved the captcha (ours if no proxy is provided) and the IP that submitted the solution for verification (yours).\n**Note**: If **`proxy`** is provided, **`proxytype`** is a required parameter.\nFull example of **`token_params`**:\n```json\n{\n  \"proxy\": \"http://127.0.0.1:3128\",\n  \"proxytype\": \"HTTP\",\n  \"googlekey\": \"6Le-wvkSAAAAAPBMRTvw0Q4Muexq9bi0DJwx_mJ-\",\n  \"pageurl\": \"http://test.com/path_with_recaptcha\",\n  \"action\": \"example/action\",\n  \"min_score\": 0.3\n}\n```\n**What's the response from reCAPTCHA v3 API?**  \nThe response has the same structure as regular captcha. Refer to [Polling for uploaded CAPTCHA status](https://deathbycaptcha.com/api#polling-captcha) for details about the response. The solution will come in the **text** key of the response. It's valid for one use and has a 1 minute lifespan.\n    \n# New Funcaptcha\n## What's \"new Funcaptcha\"?\nThey're challenges that typically require the user to align and click on certain images.\nFor your convenience, we implemented support for Funcaptcha API. If your software works with it, and supports minimal configuration, you should be able to decode Funcaptchas using Death By Captcha in no time.\n-   **Funcaptcha API**: Provided a site url and Funcaptcha public key, the API returns a token that you will use to submit the form in the page with the Funcaptcha challenge.\n## Funcaptcha API FAQ:\n**What's the Funcaptcha API URL?**  \nTo use the **Funcaptcha API** you will have to send a HTTP POST Request to <http://api.dbcapi.me/api/captcha>\n**What are the POST parameters for the Token image API?**\n-   **`username`**: Your DBC account username\n-   **`password`**: Your DBC account password\n-   **`type`=6**: Type 6 specifies this is a Funcaptcha API\n-   **`funcaptcha_params`=json(payload)**: the data to access the funcaptcha challenge\njson payload structure:\n    -   **`proxy`**: your proxy url and credentials (if any).Examples:\n        -   <http://127.0.0.1:3128>\n        -   <http://user:password@127.0.0.1:3128>\n    -   **`proxytype`**: your proxy connection protocol. For supported proxy types refer to Which proxy types are supported?. Example:\n        -   HTTP\n    -   **`publickey`**: the funcaptcha site key of the website with the recaptcha.\nExample:\n        You need to locate public key of FunCaptcha. There are two ways to find it: you can locate funcaptcha's div element and check the value of data-pkey parameter or you can find the input element with name fc-token and then extract the key indicated after pk from the value of this element.\n        -   029EF0D3-41DE-03E1-6971-466539B47725\n    -   **`pageurl`**: the url of the page with the Funcaptcha challenges. This url has to include the path in which the Funcaptcha is loaded. Example: if the Funcaptcha you want to solve is in <http://test.com/path1>, pageurl has to be <http://test.com/path1> and not <http://test.com>.\nThe **`proxy`** parameter is optional, but we strongly recommend to use one to prevent token rejection by the provided page due to inconsistencies between the IP that solved the captcha (ours if no proxy is provided) and the IP that submitted the Funcaptcha for verification (yours).\n**Note**: If **`proxy`** is provided, **`proxytype`** is a required parameter.\nFull example of **`funcaptcha_params`**:\n```json\n{\n    \"proxy\": \"http://user:password@127.0.0.1:1234\",\n    \"proxytype\": \"HTTP\",\n    \"publickey\": \"029EF0D3-41DE-03E1-6971-466539B47725\",\n    \"pageurl\": \"https://testsite.com/xxx-test\"\n}\n```\n**What's the response from the Funcaptcha API?**   \nThe Funcaptcha API response has the following structure. It's valid for one use and has a 2 minute lifespan. It will be a string like the following:\n```bash\n\"CAPTCHA 1537354005 solved: 10005cc22946667676.7969450405|\nr=eu-west-1|metabgclr=transparent|guitextcolor=%23000000|\nmetaiconclr=%23cccccc|meta=5|lang=en|pk=0\"\n```\n# New Hcaptcha\n## What's \"new Hcaptcha\"?\nThey're challenges that typically require the user to align and click on certain images.\nFor your convenience, we implemented support for Hcaptcha API. If your software works with it, and supports minimal configuration, you should be able to decode Hcaptchas using Death By Captcha in no time.\n-   **Hcaptcha API**: Provided a site url and Hcaptcha site key, the API returns a token that you will use to submit the form in the page with the Hcaptcha challenge.\n## Hcaptcha API FAQ:\n**What's the Hcaptcha API URL?**  \nTo use the **Hcaptcha API** you will have to send a HTTP POST Request to <http://api.dbcapi.me/api/captcha>\n**What are the POST parameters for the Token image API?**\n-   **`username`**: Your DBC account username\n-   **`password`**: Your DBC account password\n-   **`type`=7**: Type 7 specifies this is a Hcaptcha API\n-   **`hcaptcha_params`=json(payload)**: the data to access the hcaptcha challenge\njson payload structure:\n    -   **`proxy`**: your proxy url and credentials (if any).Examples:\n        -   <http://127.0.0.1:3128>\n        -   <http://user:password@127.0.0.1:3128>\n    -   **`proxytype`**: your proxy connection protocol. For supported proxy types refer to Which proxy types are supported?. Example:\n        -   HTTP\n    -   **`sitekey`**: the hcaptcha site key of the website with the hcaptcha.\n        Example:\n        \n        You need to locate site key of HCaptcha. You can locate hcaptcha's div element and check the value of data-sitekey parameter.\n        -   56489210-0c02-58c0-00e5-1763b63dc9d4        \n    -   **`pageurl`**: the url of the page with the Hcaptcha challenges. This url has to include the path in which the Hcaptcha is loaded. Example: if the Hcaptcha you want to solve is in <http://test.com/path1>, pageurl has to be <http://test.com/path1> and not <http://test.com>.\n    \nThe **`proxy`** parameter is optional, but we strongly recommend to use one to prevent token rejection by the provided page due to inconsistencies between the IP that solved the captcha (ours if no proxy is provided) and the IP that submitted the Hcaptcha for verification (yours).\n**Note**: If **`proxy`** is provided, **`proxytype`** is a required parameter.\nFull example of **`hcaptcha_params`**:\n```json\n{\n    \"proxy\": \"http://user:password@127.0.0.1:1234\",\n    \"proxytype\": \"HTTP\",\n    \"sitekey\": \"56489210-0c02-58c0-00e5-1763b63dc9d4\",\n    \"pageurl\": \"https://testsite.com/xxx-test\"\n}\n```\n**What's the response from the Hcaptcha API?**   \nThe Hcaptcha API response has the following structure. It's valid for one use and has a 2 minute lifespan. It will be a string like the following:\n```bash\n\"P0_eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJwYXNza2V5IjoiSm1LUHhreDdsVElwaWc5cEFuay81cjJ0NE5yVWxrT2lNV0VZQUJ6dmpobkJid29sbFNWKzJiQ0h6cmZ4TGRLU\nWw1NEdxcFN0ZzEzT01id1VROXhqYTVDa2d2NjFXSG9YOFNzS2twZU45M0gwRG1RTlQ0Vnlhdnp2T2QxcThFSGlNcVJ1VTZXVEZOMXdGYkdleVpQbllXZ1NRL2FXcjlhUkQyZHNTK2NnL0V\n1VGJUam96RWtjMHR3a2tJTk9GcTVuMUdVVXh6b1k0NGpsUHJPaTAyWWRSZ2p3TVFrZXFGQVJFUEFJY3NDbjJEc2Flbzk0V0YzbmtBVWxQd3QxNTdHNUk1ZjFLbnN0S0FLRzVWNy8yUmY4d\nGdxaTRJZVAwT3o0S200bmlqVC92SHkxdEpQT3Y1N2tMUkVDdzNDU1VMOTc3NXZvdEpuUVBkeUdZVmNxOFptQUZaRTlzQXB2QjllSDE3MTRXcFlhQW1aS1ZZc1B0OHN1Rk0vY1hYVjJabHJ\nqY1pUeHFONmRPNUFwK0krNVQrZlRQaHBvS0VQeUtWWUI3Rmpkc3BQNWlFeDlIb3ZGWkJqOUpQVHBUa2JNNHJjM0hMVm4zbC9HTmwwRkM5VUM0SzAyVnhjekZnZ2ZlbmprZDdpU3N6dVMva\nHp0OFY3elFxYW42cTlGMEpmL01wT3J2cHZDQU9rSnAyb2hiQmx0QlhLSzBGZUt1U2VjQXZnQ2N5Ty9PdWRuWWdvZXFLTTAvVEdnUjByMk10bVZpRlJFZnJ6cVFGNzlNcGE0NkdpMk ...\"\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/deathbycaptcha/python_client_library",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "deathbycaptcha-official",
    "package_url": "https://pypi.org/project/deathbycaptcha-official/",
    "platform": null,
    "project_url": "https://pypi.org/project/deathbycaptcha-official/",
    "project_urls": {
      "Bug Tracker": "https://github.com/deathbycaptcha/python_client_library/issues",
      "Homepage": "https://github.com/deathbycaptcha/python_client_library",
      "repository": "https://github.com/deathbycaptcha/python_client_library"
    },
    "release_url": "https://pypi.org/project/deathbycaptcha-official/4.6.1/",
    "requires_dist": [
      "requests (>=2.25.1)",
      "simplejson (>=3.17.2)"
    ],
    "requires_python": ">=3.6",
    "summary": "Official DeathByCaptcha API Client Library",
    "version": "4.6.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14047210,
  "releases": {
    "4.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4894a93d352b47c4879ff136e250d49eb7e1aa9460d6576321f99243f9bec77c",
          "md5": "5a2da5cc9064c6fb7c8a2272c9961c18",
          "sha256": "e8f1bdfa8ed9fdf0cacbf8819f7e872f55cb27272d3b822998ab9b61dee8de61"
        },
        "downloads": -1,
        "filename": "deathbycaptcha_official-4.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5a2da5cc9064c6fb7c8a2272c9961c18",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 18268,
        "upload_time": "2022-06-03T17:06:15",
        "upload_time_iso_8601": "2022-06-03T17:06:15.448768Z",
        "url": "https://files.pythonhosted.org/packages/48/94/a93d352b47c4879ff136e250d49eb7e1aa9460d6576321f99243f9bec77c/deathbycaptcha_official-4.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad7506e41a7b88d32a0c813115d8f4e9774473bdffe2db3db61f0e2dd46415a8",
          "md5": "63d208b0507f87969571618a7dd7f702",
          "sha256": "cca75b6279952314909269a235d011735aa4616077aef4bea83b91e83cf05b1e"
        },
        "downloads": -1,
        "filename": "deathbycaptcha-official-4.6.tar.gz",
        "has_sig": false,
        "md5_digest": "63d208b0507f87969571618a7dd7f702",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19489,
        "upload_time": "2022-06-03T17:06:18",
        "upload_time_iso_8601": "2022-06-03T17:06:18.927706Z",
        "url": "https://files.pythonhosted.org/packages/ad/75/06e41a7b88d32a0c813115d8f4e9774473bdffe2db3db61f0e2dd46415a8/deathbycaptcha-official-4.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.6.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0008c65b6fd8d9a9c8ddf29f39d47f22c63b9a969f3011cba7dd07806e57a742",
          "md5": "01caf46fac5212242842dce200ba34fb",
          "sha256": "bffc94a70ebd5f973988ae3c51c71cbb879b6639f7f2c359c0b0f2a40a96e4e1"
        },
        "downloads": -1,
        "filename": "deathbycaptcha_official-4.6.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "01caf46fac5212242842dce200ba34fb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 18292,
        "upload_time": "2022-06-06T16:36:38",
        "upload_time_iso_8601": "2022-06-06T16:36:38.030187Z",
        "url": "https://files.pythonhosted.org/packages/00/08/c65b6fd8d9a9c8ddf29f39d47f22c63b9a969f3011cba7dd07806e57a742/deathbycaptcha_official-4.6.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9eb3213c3f1a9b20eb88f0c13d1066fe2f7bef4d2acb4918ed8bb5870999e808",
          "md5": "d6dc105a1d765017a1f477c72fe74c1b",
          "sha256": "59e368eb15c35a9f64163079ce7e217ea7acebf97c6fe83c54860def3876907d"
        },
        "downloads": -1,
        "filename": "deathbycaptcha-official-4.6.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d6dc105a1d765017a1f477c72fe74c1b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19497,
        "upload_time": "2022-06-06T16:36:39",
        "upload_time_iso_8601": "2022-06-06T16:36:39.891752Z",
        "url": "https://files.pythonhosted.org/packages/9e/b3/213c3f1a9b20eb88f0c13d1066fe2f7bef4d2acb4918ed8bb5870999e808/deathbycaptcha-official-4.6.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0008c65b6fd8d9a9c8ddf29f39d47f22c63b9a969f3011cba7dd07806e57a742",
        "md5": "01caf46fac5212242842dce200ba34fb",
        "sha256": "bffc94a70ebd5f973988ae3c51c71cbb879b6639f7f2c359c0b0f2a40a96e4e1"
      },
      "downloads": -1,
      "filename": "deathbycaptcha_official-4.6.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "01caf46fac5212242842dce200ba34fb",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 18292,
      "upload_time": "2022-06-06T16:36:38",
      "upload_time_iso_8601": "2022-06-06T16:36:38.030187Z",
      "url": "https://files.pythonhosted.org/packages/00/08/c65b6fd8d9a9c8ddf29f39d47f22c63b9a969f3011cba7dd07806e57a742/deathbycaptcha_official-4.6.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9eb3213c3f1a9b20eb88f0c13d1066fe2f7bef4d2acb4918ed8bb5870999e808",
        "md5": "d6dc105a1d765017a1f477c72fe74c1b",
        "sha256": "59e368eb15c35a9f64163079ce7e217ea7acebf97c6fe83c54860def3876907d"
      },
      "downloads": -1,
      "filename": "deathbycaptcha-official-4.6.1.tar.gz",
      "has_sig": false,
      "md5_digest": "d6dc105a1d765017a1f477c72fe74c1b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 19497,
      "upload_time": "2022-06-06T16:36:39",
      "upload_time_iso_8601": "2022-06-06T16:36:39.891752Z",
      "url": "https://files.pythonhosted.org/packages/9e/b3/213c3f1a9b20eb88f0c13d1066fe2f7bef4d2acb4918ed8bb5870999e808/deathbycaptcha-official-4.6.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}