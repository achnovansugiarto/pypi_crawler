{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.7",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Scientific/Engineering :: Bio-Informatics",
      "Topic :: Scientific/Engineering :: Image Processing",
      "Topic :: Scientific/Engineering :: Image Recognition",
      "Topic :: Scientific/Engineering :: Information Analysis"
    ],
    "description": "# cytoself\n\n\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/python/black)\n[![PyPI](https://img.shields.io/pypi/v/cytoself.svg)](https://pypi.org/project/cytoself)\n[![Python Version](https://img.shields.io/pypi/pyversions/cytoself.svg)](https://python.org)\n[![DOI](http://img.shields.io/badge/DOI-10.1101/2021.03.29.437595-B31B1B.svg)](https://doi.org/10.1101/2021.03.29.437595)\n[![License](https://img.shields.io/badge/License-BSD%203--Clause-green.svg)](https://opensource.org/licenses/BSD-3-Clause)\n\n\n![A rotating 3D UMAP](images/3DUMAP.gif)\n\n### Self-supervised deep learning encodes high-resolution features of protein subcellular localization\n\ncytoself is a self-supervised model that we developed for learning features of protein subcellular localization from microscopy images. \nThis model is described in detail in our paper [[1]](https://www.nature.com/articles/s41592-022-01541-z).\nThe image representations derived from cytoself encapsulate highly specific features that can derive functional insights for \nproteins on the sole basis of their localization.\n\nApplying cytoself to images of endogenously labeled proteins from the recently released \n[OpenCell](https://opencell.czbiohub.org) database creates a highly resolved protein localization atlas\n[[2]](https://www.science.org/doi/10.1126/science.abi6983). \n\n[1] Kobayashi, Hirofumi, _et al._ \"Self-Supervised Deep-Learning Encodes High-Resolution Features of Protein \nSubcellular Localization.\" _Nature Methods_ (2022).\nhttps://www.nature.com/articles/s41592-022-01541-z <br />\n[2] Cho, Nathan H., _et al._ \"OpenCell: Endogenous tagging for the cartography of human cellular organization.\" \n_Science_ 375.6585 (2022): eabi6983.\nhttps://www.science.org/doi/10.1126/science.abi6983\n\n\n## How cytoself works\ncytoself uses images and an associated identity information (ID) as a label to learn the localization patterns of proteins.\nWhen applied to OpenCell we used cell images where individual proteins are endogenously tagged per image. For each image we know which \nprotein is tagged and that is the ID used. Our model implicitely learns to ignore image differences for images that \nare associated to the same ID, and tries its best to tell images apart if they are associated to different IDs. In practice cytoself\ncan resolve very fine textural differences between image classes but also can ignore very complex sources of image variability \nsuch as cell shapes, states, etc...\n\n![A schematic of cytoself](images/workflow.jpg)\n\n\n## What's in this repository\nThis repository offers three main components: \n[`DataManager`](https://github.com/royerlab/cytoself/blob/df0e421aa291879275582c51119cbd0319b2a004/cytoself/data_loader/data_manager.py#L6), \n[`cytoself.models`](https://github.com/royerlab/cytoself/tree/main/cytoself/models), \nand \n[`Analytics`](https://github.com/royerlab/cytoself/blob/df0e421aa291879275582c51119cbd0319b2a004/cytoself/analysis/analytics.py#L18).\n\n[`DataManager`](https://github.com/royerlab/cytoself/blob/df0e421aa291879275582c51119cbd0319b2a004/cytoself/data_loader/data_manager.py#L6) \nis a simple module to handle train, validate and test data. \nYou may want to modify it to adapt to your own data structure.\nThis module is in \n[`cytoself.data_loader.data_manager`](https://github.com/royerlab/cytoself/blob/main/cytoself/data_loader/data_manager.py).\n\n[`cytoself.models` ](https://github.com/royerlab/cytoself/tree/main/cytoself/models)\ncontains modules for three different variants of the cytoself model: \na model without split-quantization, a model without the pretext task, and the 'full' model (refer to our preprint for details about these variants). \nThere is a submodule for each model variant that provides methods for constructing, compiling, and training the models (which are built using tensorflow).\n\n`Analytics` is a simple module to perform analytic processes such as dimension reduction and plotting. \nYou may want to modify it too to perform your own analysis. This module is in \n[`cytoself.analysis.analytics`](https://github.com/royerlab/cytoself/blob/main/cytoself/analysis/analytics.py). \n[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/royerlab/cytoself/blob/main/examples/simple_example.ipynb)\n\nPre-trained model weights are included in the [example script](\nhttps://github.com/royerlab/cytoself/blob/02b52fd4c2ab0db12fbd9d68314252e63d73e2e4/examples/simple_example.py#L16-L20\n).\n\n**Note: Cytoself will migrate to pytorch implementation in the near future.**\n\n\n## Installation\nRecommended: create a new environment and install cytoself on the environment from pypi\n```shell script\nconda create -y -n cytoself python=3.7\nconda activate cytoself\npip install cytoself\n```\n\n### (Option) Install TensorFlow GPU\nIf your computer is equipped with GPUs that support Tensorflow 1.15, you can install Tensorflow-gpu to utilize GPUs.\nInstall the following packages before cytoself, or uninstall the existing CPU versions and reinstall the GPU versions \nagain with conda.\n```shell script\nconda install -y h5py=2.10.0 tensorflow-gpu=1.15\n```\n\n### For developers\n\nYou can also install cytoself from this GitHub repository.\n\n```shell script\ngit clone https://github.com/royerlab/cytoself.git\npip install .\n```\n\n### Troubleshooting\n\nIn case of getting errors in the installation, run the following code inside the cytoself folder to manually install \nthe dependencies.\n\n```shell\npip install -r requirements.txt\n```\n\nAs a reference for a complete dependency, a snapshot of a working environment can be found in \n[`environment.yml`](https://github.com/royerlab/cytoself/blob/main/environment.yml)\n\n\n## Example script (How to use cytoself)\nA minimal example script is in \n[`example/simple_training.py`](https://github.com/royerlab/cytoself/blob/main/examples/simple_example.py).\nLearn how to use cytoself through \n[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/royerlab/cytoself/blob/main/examples/simple_example.ipynb)\n\nTest if this package runs in your computer with command \n```shell script\npython examples/simple_example.py\n```\n\n\n## Computational resources\nIt is highly recommended to use a GPU to run cytoself. \nFor example, a full model with image shape of (100, 100, 2) and batch size 64 can take ~9GB of GPU memory.\n\n\n## Tested Environment\nGoogle Colab (CPU/GPU/TPU)\n\nmacOS 10.14.6, RAM 32GB (CPU)\n\nWindows10 Pro 64bit, RTX 1080Ti, CUDA 11.6 (CPU/GPU)\n\nUbuntu 18.04.6 LTS, RTX 2080Ti, CUDA 11.2 (CPU/GPU)\n\n\n## Data Availability\n\n### Pretrained model\nPre-trained models used in the [paper](https://www.nature.com/articles/s41592-022-01541-z). \nPlease follow the [example script](https://github.com/royerlab/cytoself/blob/main/examples/simple_example.py) \nor [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/royerlab/cytoself/blob/main/examples/simple_example.ipynb)\nto lean how to use a pre-trained model.\n\n[model_protein_nucleardistance.h5](https://drive.google.com/file/d/1gkiEMKdadOel4Xh6KoS2U603JTkZhgDw/view?usp=sharing)\n: The model trained on target protein and nuclear distance. <br/>\n[model_protein.h5](https://drive.google.com/file/d/1mgfWlqcS0gWtu7FrAywcwmdvme856d4v/view?usp=sharing)\n: The model trained on target protein alone.  <br/>\n[model_protein_nucleus.h5](https://drive.google.com/file/d/1p69hDlIw4DKeNIFhuwoLRWoOeoLDsLoB/view?usp=sharing)\n: The model trained on target protein and nucleus.\n\nThe full data of image and protein label used in this work can be found here.\nThe image data have the shape of `[batch, 100, 100, 4]`, in which the last channel dimension corresponds to `[target \nprotein, nucleus, nuclear distance, nuclear segmentation]`.\n\n\n### Embeddings\n\nThe embedding vectors of global representations and their labels are available from the following links.\nDue to their large size, only embeddings extracted from test data are provided.\n\n[Global_representation.npy](https://drive.google.com/file/d/1s9TL72912HH947SFWcO6tClF91xDOEEi/view?usp=sharing)  In the shape of 114,806 images x 9,216 latent dimensions. (3.9 GB) <br/>\n[label.csv](https://drive.google.com/file/d/1fl0lcrZCOkdN2vwXQSHe7i1MC04RXCiE/view?usp=sharing)  114,806 rows x 7 columns. (6.2 MB)\n\n### Image and label data\n\nDue to the large size, the whole data is split to 10 files. The files are intended to be concatenated together to \nform one large numpy file or one large csv.\n\n[Image_data00.npy](https://drive.google.com/file/d/15_CHBPT-p5JG44acP6D2hKd8jAacZatp/view?usp=sharing)  \n[Image_data01.npy](https://drive.google.com/file/d/1m7Cj2OALiZTIiHpvb9zFPG_I3j1wRnzK/view?usp=sharing)  \n[Image_data02.npy](https://drive.google.com/file/d/17nknzqlcYO3n9bAe4FwGVPkU-mJAhQ4j/view?usp=sharing)  \n[Image_data03.npy](https://drive.google.com/file/d/1vEsddF68dyOda-hwI-ptAL4vShBGl98Y/view?usp=sharing)  \n[Image_data04.npy](https://drive.google.com/file/d/1aB7WaRuhobG_IDl0l_PPeSJAxCYy-Pye/view?usp=sharing)  \n[Image_data05.npy](https://drive.google.com/file/d/1qb0waKcLprDtuFAdCec3WegWkmd-U45A/view?usp=sharing)  \n[Image_data06.npy](https://drive.google.com/file/d/1y-1vlfZ4eNhvTvpuqTZVL8DvSwYX3CH_/view?usp=sharing)  \n[Image_data07.npy](https://drive.google.com/file/d/1ejcPdh-d5lB1OcZ6x8SJx61pEUioZvB2/view?usp=sharing)  \n[Image_data08.npy](https://drive.google.com/file/d/1DOicAkruNsU5F4DWLzO2QrV6xU4kuVxs/view?usp=sharing)  \n[Image_data09.npy](https://drive.google.com/file/d/1a5YyHeRSRdJStG3KnFe2vsNjrsit9zbf/view?usp=sharing)  \n[Label_data00.csv](https://drive.google.com/file/d/1CVwvXW2KhVBbTBixwRXIIiMhrlGDXz-4/view?usp=sharing)  \n[Label_data01.csv](https://drive.google.com/file/d/1mTYe5icvWXNfY5wEsuQUhSwgtefBJpjg/view?usp=sharing)  \n[Label_data02.csv](https://drive.google.com/file/d/1HckmktklyPo6qbakrwtERsCT34mRdn7l/view?usp=sharing)  \n[Label_data03.csv](https://drive.google.com/file/d/1GBxDmWcl_o49i4lGujA8EgIn5G4htkBr/view?usp=sharing)  \n[Label_data04.csv](https://drive.google.com/file/d/1G4FpJnlqB3ejmdw3SF2w3DFYt8Wnq0fT/view?usp=sharing)  \n[Label_data05.csv](https://drive.google.com/file/d/1Vo1J09qP2TAoXwltCF84socz2TPV92JU/view?usp=sharing)  \n[Label_data06.csv](https://drive.google.com/file/d/1d7gJjLTQhOw-e9KZJY9pr6KOCIN8NBvp/view?usp=sharing)  \n[Label_data07.csv](https://drive.google.com/file/d/1kr5EF0RA3ZwSXmoaBFwFDVnrokh2EaOE/view?usp=sharing)  \n[Label_data08.csv](https://drive.google.com/file/d/1mXyedmLezzty2LSSH3asw0LQeu-ie9mz/view?usp=sharing)  \n[Label_data09.csv](https://drive.google.com/file/d/1Vdv1cD75VhvC3FdKTen-5rqLJnWpHvmb/view?usp=sharing)  \n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/royerlab/cytoself",
    "keywords": "",
    "license": "BSD 3-Clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cytoself",
    "package_url": "https://pypi.org/project/cytoself/",
    "platform": null,
    "project_url": "https://pypi.org/project/cytoself/",
    "project_urls": {
      "Bug Tracker": "https://github.com/royerlab/cytoself/issues",
      "Homepage": "https://github.com/royerlab/cytoself"
    },
    "release_url": "https://pypi.org/project/cytoself/0.0.1.4/",
    "requires_dist": [
      "numpy (>=1.19)",
      "pandas (>1.1)",
      "joblib (==1.0.1)",
      "tensorflow (==1.15.*)",
      "matplotlib (==3.1.3)",
      "umap-learn (==0.5.1)",
      "gdown (==4.3.0)",
      "tqdm (==4.55.1)",
      "colorcet (==2.0.6)",
      "seaborn (==0.10.1)",
      "h5py (==2.10.0)"
    ],
    "requires_python": ">=3.7, <3.8",
    "summary": "An image feature extractor with self-supervised learning",
    "version": "0.0.1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15260546,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f16a7804d05c917d2c3eb4ca9b2cd6bf77562b88ac379ecdb99e3ba43be7a19d",
          "md5": "36450197efd49705ff978fa865f2781b",
          "sha256": "a9ae4680cb15f201eb0893557a24e1afc9d51d521d97e11245593db86c07a3dc"
        },
        "downloads": -1,
        "filename": "cytoself-0.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "36450197efd49705ff978fa865f2781b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 2233,
        "upload_time": "2021-04-12T05:25:39",
        "upload_time_iso_8601": "2021-04-12T05:25:39.403392Z",
        "url": "https://files.pythonhosted.org/packages/f1/6a/7804d05c917d2c3eb4ca9b2cd6bf77562b88ac379ecdb99e3ba43be7a19d/cytoself-0.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4a98b6524ed0c28525a2f795fc8828195211d9381c4f1c588ca512efc54a33ed",
          "md5": "d78879236ccb79d0d6863e7b0310b00a",
          "sha256": "b989f586347881536a2e7a6fdea3af58f195f35129beee205d9c6a34c2fc44ed"
        },
        "downloads": -1,
        "filename": "cytoself-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d78879236ccb79d0d6863e7b0310b00a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 1879,
        "upload_time": "2021-04-12T05:25:40",
        "upload_time_iso_8601": "2021-04-12T05:25:40.501891Z",
        "url": "https://files.pythonhosted.org/packages/4a/98/b6524ed0c28525a2f795fc8828195211d9381c4f1c588ca512efc54a33ed/cytoself-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "71601d356d74a75f70e8005af2ccd6d1d8a38e9b68269580054b7ba412ee2c16",
          "md5": "3da24344c311a27bd3c931859b4288fd",
          "sha256": "5a23ee42a23c9949a4d6d114175bafc0c0722fa4f85219f136fdd8eff1646fe6"
        },
        "downloads": -1,
        "filename": "cytoself-0.0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3da24344c311a27bd3c931859b4288fd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6, <3.8",
        "size": 58016,
        "upload_time": "2021-06-24T00:12:17",
        "upload_time_iso_8601": "2021-06-24T00:12:17.517682Z",
        "url": "https://files.pythonhosted.org/packages/71/60/1d356d74a75f70e8005af2ccd6d1d8a38e9b68269580054b7ba412ee2c16/cytoself-0.0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8814bad0d8929aef7fd83b4d4bb81f2e2c907efe6b76eeb60dde5fce7845e862",
          "md5": "aa972dda49e8f1d65a75884427bf7ceb",
          "sha256": "6cb883938c0a0304c5512e3d289664ef5cfd7716b568579be9e12aca3d2d1e7a"
        },
        "downloads": -1,
        "filename": "cytoself-0.0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "aa972dda49e8f1d65a75884427bf7ceb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <3.8",
        "size": 42674,
        "upload_time": "2021-06-24T00:12:18",
        "upload_time_iso_8601": "2021-06-24T00:12:18.820341Z",
        "url": "https://files.pythonhosted.org/packages/88/14/bad0d8929aef7fd83b4d4bb81f2e2c907efe6b76eeb60dde5fce7845e862/cytoself-0.0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "254e2789846dd58294e00ef0c70a8c6f29e8fe8c1bb96c5432ba405b33263100",
          "md5": "336f3605360ddac8ec8d7349312dd079",
          "sha256": "3b8f46c4c57e9a200743fd8131ef0dd8d5681f0a4377c8f59e7598da9d2c67ed"
        },
        "downloads": -1,
        "filename": "cytoself-0.0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "336f3605360ddac8ec8d7349312dd079",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <3.8",
        "size": 58472,
        "upload_time": "2022-02-18T20:24:17",
        "upload_time_iso_8601": "2022-02-18T20:24:17.218220Z",
        "url": "https://files.pythonhosted.org/packages/25/4e/2789846dd58294e00ef0c70a8c6f29e8fe8c1bb96c5432ba405b33263100/cytoself-0.0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "67eb2be00d45fe359411b7a6a2cbeec1797a2aa7c0921696834e358e8ae166ec",
          "md5": "0c8551c44364e5ae2427a4a5c90ef813",
          "sha256": "b006483b25a9d5feda073e96c98698bd6cfb3a2b6511123727c40467656e9628"
        },
        "downloads": -1,
        "filename": "cytoself-0.0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0c8551c44364e5ae2427a4a5c90ef813",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <3.8",
        "size": 44221,
        "upload_time": "2022-02-18T20:24:18",
        "upload_time_iso_8601": "2022-02-18T20:24:18.600085Z",
        "url": "https://files.pythonhosted.org/packages/67/eb/2be00d45fe359411b7a6a2cbeec1797a2aa7c0921696834e358e8ae166ec/cytoself-0.0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c7d43a0557ea8b7ad454ef282831b9f890540678a9e15fd89e65a2435a071772",
          "md5": "0bd685206d82d680f5051f15848b5440",
          "sha256": "c196d3df97e8af364f95a8409c2ae738a6380a20d0aefce1f66b15226ab30718"
        },
        "downloads": -1,
        "filename": "cytoself-0.0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0bd685206d82d680f5051f15848b5440",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <3.8",
        "size": 58483,
        "upload_time": "2022-02-19T00:28:21",
        "upload_time_iso_8601": "2022-02-19T00:28:21.187378Z",
        "url": "https://files.pythonhosted.org/packages/c7/d4/3a0557ea8b7ad454ef282831b9f890540678a9e15fd89e65a2435a071772/cytoself-0.0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "efb0191af50db510eddd0df62fba3602b2cfa4836337979384828c7a5842cfdf",
          "md5": "162d986c6fbad8926f6be9561a80596d",
          "sha256": "e30016f7723700b5b45d23080d17ffd3016491c7529e2425e7dc788ce0a0ec53"
        },
        "downloads": -1,
        "filename": "cytoself-0.0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "162d986c6fbad8926f6be9561a80596d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <3.8",
        "size": 44240,
        "upload_time": "2022-02-19T00:28:22",
        "upload_time_iso_8601": "2022-02-19T00:28:22.610016Z",
        "url": "https://files.pythonhosted.org/packages/ef/b0/191af50db510eddd0df62fba3602b2cfa4836337979384828c7a5842cfdf/cytoself-0.0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c8dcc4bf8e63314c94cb8bd683c2bc7bd834b98ae43077fd280a6020609ff8f3",
          "md5": "cfba582b9b4a0e5be6829caf4528c838",
          "sha256": "9849c38fa53e62c46f09c2fce6a859d3464c2410a2ff866570be4ec0e0ee817c"
        },
        "downloads": -1,
        "filename": "cytoself-0.0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cfba582b9b4a0e5be6829caf4528c838",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <3.8",
        "size": 60287,
        "upload_time": "2022-09-29T21:23:01",
        "upload_time_iso_8601": "2022-09-29T21:23:01.486659Z",
        "url": "https://files.pythonhosted.org/packages/c8/dc/c4bf8e63314c94cb8bd683c2bc7bd834b98ae43077fd280a6020609ff8f3/cytoself-0.0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "463383e92b7277081bae443add8b0b2da9f73aa05cb1017f04aba843ebc262b7",
          "md5": "dd8007250699343129e455d21e7d212a",
          "sha256": "046d892821d7b2e66d07546f30dc6d2b2ff8918b3271f2374e76cec40b6a84fa"
        },
        "downloads": -1,
        "filename": "cytoself-0.0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "dd8007250699343129e455d21e7d212a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <3.8",
        "size": 47939,
        "upload_time": "2022-09-29T21:23:03",
        "upload_time_iso_8601": "2022-09-29T21:23:03.752807Z",
        "url": "https://files.pythonhosted.org/packages/46/33/83e92b7277081bae443add8b0b2da9f73aa05cb1017f04aba843ebc262b7/cytoself-0.0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c8dcc4bf8e63314c94cb8bd683c2bc7bd834b98ae43077fd280a6020609ff8f3",
        "md5": "cfba582b9b4a0e5be6829caf4528c838",
        "sha256": "9849c38fa53e62c46f09c2fce6a859d3464c2410a2ff866570be4ec0e0ee817c"
      },
      "downloads": -1,
      "filename": "cytoself-0.0.1.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "cfba582b9b4a0e5be6829caf4528c838",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7, <3.8",
      "size": 60287,
      "upload_time": "2022-09-29T21:23:01",
      "upload_time_iso_8601": "2022-09-29T21:23:01.486659Z",
      "url": "https://files.pythonhosted.org/packages/c8/dc/c4bf8e63314c94cb8bd683c2bc7bd834b98ae43077fd280a6020609ff8f3/cytoself-0.0.1.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "463383e92b7277081bae443add8b0b2da9f73aa05cb1017f04aba843ebc262b7",
        "md5": "dd8007250699343129e455d21e7d212a",
        "sha256": "046d892821d7b2e66d07546f30dc6d2b2ff8918b3271f2374e76cec40b6a84fa"
      },
      "downloads": -1,
      "filename": "cytoself-0.0.1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "dd8007250699343129e455d21e7d212a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7, <3.8",
      "size": 47939,
      "upload_time": "2022-09-29T21:23:03",
      "upload_time_iso_8601": "2022-09-29T21:23:03.752807Z",
      "url": "https://files.pythonhosted.org/packages/46/33/83e92b7277081bae443add8b0b2da9f73aa05cb1017f04aba843ebc262b7/cytoself-0.0.1.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}