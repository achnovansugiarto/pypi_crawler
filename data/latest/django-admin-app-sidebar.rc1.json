{
  "info": {
    "author": "zencore",
    "author_email": "dobetter@zencore.cn",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# django-admin-app-sidebar\n\nA django application that add portlets in right sidebar at app level.\n\n\n## Install\n\n```shell\npip install django-admin-app-sidebar\n```\n\n## Usage\n\n**pro/settings.py**\n\n**Note:**\n\n- We used template override in django_admin_app_sidebar, so we MUST include django_admin_app_sidebar in INSTALLED_APPS.\n- The app django_static_fontawesome is optional choice. If you are using icon in sidebar portlet you may need it.\n\n```python\nINSTALLED_APPS = [\n    ...\n    'django_static_fontawesome', # Optional, and install by yourself\n    'django_admin_app_sidebar',\n    ...\n]\n```\n\n**app/__init__.py**\n\n**Note:**\n\n- We are going to set an example portlet in AppConfig.ready\n\n```python\ndefault_app_config = \"django_admin_app_sidebar_example.apps.DjangoAdminAppSidebarExampleConfig\"\n```\n\n**app/apps.py**\n\n**Note:**\n\n- By default, django_admin_app_sidebar provides an simple navigation portlet. Just init a navigation instance, and register it as a portlet.\n- Navigation item config\n    - `title`: required. the navigation link title.\n    - `url`: required. the navigation link url.\n    - `icon`: optional. icon class just before link title.\n    - `target`: optional. link target, target=_blank means open in new window or tab.\n    - `depth`: optional. depth=2 will add 20px indent to the link item. And depth=3 will add 40px.\n    - if item==\"-\", then display a seperator.\n\n```python\nfrom django.apps import AppConfig\nfrom django_admin_app_sidebar.portlets import register_portlet\nfrom django_admin_app_sidebar.portlets import SidebarNavigation\nfrom django.utils.translation import ugettext_lazy as _\nfrom django.urls import reverse_lazy\n\nclass DjangoAdminAppSidebarExampleConfig(AppConfig):\n    name = 'django_admin_app_sidebar_example'\n\n    def ready(self):\n        navigation = SidebarNavigation(\"Navigation\", [{\n            \"title\": \"Home\",\n            \"url\": \"/admin/\",\n            \"icon\": \"fas fa-home\",\n        },\"-\",{\n            \"title\": \"Example Index\",\n            \"url\": reverse_lazy(\"admin:app_list\", kwargs={\"app_label\": self.name}),\n            \"icon\": \"fas fa-building\",\n        },{\n            \"title\": \"Category Manager\",\n            \"url\": reverse_lazy(\"admin:{0}_{1}_changelist\".format(self.name, \"category\")),\n            \"icon\": \"fas fa-tree\",\n            \"depth\": 2,\n        },{\n            \"title\": \"Book Manager\",\n            \"url\": reverse_lazy(\"admin:{0}_{1}_changelist\".format(self.name, \"book\")),\n            \"icon\": \"fas fa-file\",\n            \"depth\": 2,\n        }])\n        register_portlet(navigation, app_label=self.name, extra_css=[\n            \"fontawesome/css/all.min.css\",\n        ])\n```\n\n## Exported APIs\n\n- django_admin_app_sidebar.portlets.Portlet\n\n    It is a portlet base class. You can use any callable function instead of Portlet, simply take a context parameter and return rendered html string.\n\n- django_admin_app_sidebar.portlets.SidebarNavigation\n\n    A simple navigation portlet.\n\n- django_admin_app_sidebar.portlets.register_portlet\n\n    Register a portlet to the system.\n\n## Detail of django_admin_app_sidebar.portlets.register_portlet \n\n```python\ndef register_portlet(render, order=0, app_label=None, model_name=None,\n        show_in_app=True,\n        show_in_app_index=False,\n        show_in_model_site=False,\n        show_in_model_changelist=False,\n        show_in_model_change=False,\n        show_in_model_add=False,\n        show_in_model_history=False,\n        extra_css=None,\n        extra_js=None):\n        ...\n```\n\n**Parameters:**\n\n- `render`: required, it is a Portlet instance or a equivalent callable function.\n- `order`: portlet display order\n- `app_label`: in which application views the portlet will be displayed\n    - if None, the portlet will be displayed in all application.\n- `model_name`: in which model related view the portlet will be diplayed\n    - if None, the portlet will be displayed in all views of the application\n- `show_in_app`: default to True. show the portlet in all views under the application.\n- `show_in_app_index`: default to False. show the portlet in app index view. app_label is required.\n- `show_in_model_site`: default to False. show the portlet in all views related to the model\n- `show_in_model_changelist`: default to False. show the portlet in changelist view.\n- `show_in_model_change`: default to False. show the portlet in change view.\n- `show_in_model_add`: default to False. show the portlet in add view.\n- `show_in_model_history`: default to False. show the portlet in history view. **Not implemented yet**\n\n\n## Releases\n\n### v0.1.0 @todo\n\n- First release.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "django admin extentions,django admin app sidebar",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-admin-app-sidebar",
    "package_url": "https://pypi.org/project/django-admin-app-sidebar/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-admin-app-sidebar/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/django-admin-app-sidebar/0.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A django application that add portlets in right sidebar at app level.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6854117,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7bcecea1ce5e0ddc6594c8338cc595590c81ba4d9b72673c5b8938aa352a611d",
          "md5": "64040fb1458d9adbff2249fb940b3e17",
          "sha256": "243312a2040c031e5a36c1fcaffdb402654873ed470455170cd4f93e5058b9c1"
        },
        "downloads": -1,
        "filename": "django-admin-app-sidebar-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "64040fb1458d9adbff2249fb940b3e17",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9183,
        "upload_time": "2020-03-21T06:11:06",
        "upload_time_iso_8601": "2020-03-21T06:11:06.894784Z",
        "url": "https://files.pythonhosted.org/packages/7b/ce/cea1ce5e0ddc6594c8338cc595590c81ba4d9b72673c5b8938aa352a611d/django-admin-app-sidebar-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7bcecea1ce5e0ddc6594c8338cc595590c81ba4d9b72673c5b8938aa352a611d",
        "md5": "64040fb1458d9adbff2249fb940b3e17",
        "sha256": "243312a2040c031e5a36c1fcaffdb402654873ed470455170cd4f93e5058b9c1"
      },
      "downloads": -1,
      "filename": "django-admin-app-sidebar-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "64040fb1458d9adbff2249fb940b3e17",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9183,
      "upload_time": "2020-03-21T06:11:06",
      "upload_time_iso_8601": "2020-03-21T06:11:06.894784Z",
      "url": "https://files.pythonhosted.org/packages/7b/ce/cea1ce5e0ddc6594c8338cc595590c81ba4d9b72673c5b8938aa352a611d/django-admin-app-sidebar-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}