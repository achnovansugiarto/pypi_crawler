{
  "info": {
    "author": "Alexander Schillemans",
    "author_email": "alexander.schillemans@hotmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# DHL Parcel API\r\nBasic wrapper for the DHL Parcel API (v1).\r\n\r\n## Disclaimer\r\nThis wrapper does **not** include all API endpoints. I will extend this package as I go and as I need.\r\n\r\nThis package is in **active development** and is the reason why there is no stable version yet.\r\n\r\n## Getting started\r\n\r\n### Install\r\nThis package is published on PyPi: https://pypi.org/project/python-dhlparcel-api/\r\n\r\nInstall with pip\r\n\r\n```python\r\npip install python-dhlparcel-api\r\n```\r\n\r\n### Import\r\nImport the package and the DHLParcel_API.\r\n```python\r\nfrom dhlparcel.api import DHLParcel_API\r\n```\r\n\r\n### Create connection\r\nYou will need your user ID, user key and account number to create a connection.\r\nFind out how you can obtain these here: https://dhlparcel.github.io/api-gtw-docs/#12-services\r\n\r\n```python\r\napi = DHLParcel_API(user_id, user_key, account_number)\r\n```\r\n\r\n### Authentication\r\nAuthentication will happen automatically. \r\n\r\nDuring a first request, the ```user_id``` and ```user_key``` will be used to obtain an access token and a request token. These tokens will be cached and used for other requests. Once an access token expires, a new one will automatically be retrieved by using the refresh token. If the access token and the refresh token has expired, or are not available inside the cache, the ```user_id``` and ```user_key``` will once again be used to obtain new tokens.\r\n\r\n### Retrieving data\r\nYou can retrieve data by using the ```.get(id)``` or ```.list()``` functions on a given endpoint. The ```.get()``` function will return a single object and will contain all the returned fields as attributes. The ```.list()``` function will return a list of objects. You can loop over a list by calling ```.items()``` on it.\r\n\r\nYou can consult the API documentation to know what returned fields to expect.\r\n\r\n```python\r\nfrom dhlparcel.api import DHLParcel_API\r\napi = DHLParcel_API(user_id, user_key, account_number)\r\nparcelshops = api.parcelshops.list('BE', zipCode='2000')\r\n\r\nfor shop in parcelshops.items():\r\n    print(shop.name)\r\n```\r\n\r\n### Creating\r\nSome endpoints allow you to create new objects, such as a label or a shipment.\r\nThese endpoints have the ```.create()``` functions available.\r\n\r\nConsider the following request needed to create a shipment:\r\n\r\n```json\r\n{\r\n  \"shipmentId\": \"15916857-2a31-4238-a45b-e7ba32e0e320\",\r\n  \"orderReference\": \"myReference\",\r\n  \"receiver\": {\r\n    \"name\": {\r\n      \"firstName\": \"John\",\r\n      \"lastName\": \"Doe\",\r\n      \"companyName\": \"ACME Corp.\",\r\n      \"additionalName\": \"Benelux\"\r\n    },\r\n    \"address\": {\r\n      \"countryCode\": \"NL\",\r\n      \"postalCode\": \"3542AD\",\r\n      \"city\": \"Utrecht\",\r\n      \"street\": \"Reactorweg\",\r\n      \"additionalAddressLine\": \"Street part 2 (not applicable for DHL Parcel Benelux)\",\r\n      \"number\": \"25\",\r\n      \"isBusiness\": true,\r\n      \"addition\": \"A\"\r\n    },\r\n    \"email\": \"mrparcel@dhlparcel.nl\",\r\n    \"phoneNumber\": \"0031612345678\",\r\n    \"vatNumber\": \"NL007096100B01\",\r\n    \"eoriNumber\": \"NL123456789\",\r\n    \"reference\": \"Customer reference\"\r\n  },\r\n  \"shipper\": {\r\n    \"name\": {\r\n      \"firstName\": \"John\",\r\n      \"lastName\": \"Doe\",\r\n      \"companyName\": \"ACME Corp.\",\r\n      \"additionalName\": \"Benelux\"\r\n    },\r\n    \"address\": {\r\n      \"countryCode\": \"NL\",\r\n      \"postalCode\": \"3542AD\",\r\n      \"city\": \"Utrecht\",\r\n      \"street\": \"Reactorweg\",\r\n      \"additionalAddressLine\": \"Street part 2 (not applicable for DHL Parcel Benelux)\",\r\n      \"number\": \"25\",\r\n      \"isBusiness\": true,\r\n      \"addition\": \"A\"\r\n    },\r\n    \"email\": \"mrparcel@dhlparcel.nl\",\r\n    \"phoneNumber\": \"0031612345678\",\r\n    \"vatNumber\": \"NL007096100B01\",\r\n    \"eoriNumber\": \"NL123456789\"\r\n  },\r\n  \"accountId\": \"01234567\",\r\n  \"options\": [\r\n    {\r\n      \"key\": \"PS\",\r\n      \"input\": \"8004-NL-132825\"\r\n    }\r\n  ],\r\n  \"pieces\": [\r\n    {\r\n      \"parcelType\": \"SMALL\",\r\n      \"quantity\": 1,\r\n      \"weight\": 1,\r\n      \"dimensions\": {\r\n        \"length\": 20,\r\n        \"width\": 25,\r\n        \"height\": 30\r\n      }\r\n    }\r\n  ]\r\n}\r\n```\r\nThe top-level attributes: ```shipmentId```, ```orderReference```, ```receiver```, ```shipper```, ```options```, etc. are available as **arguments** to the function. These arguments contain either a ```list``` or a ```dict``` of data, depending on what is expected.\r\n\r\nWe can then create above shipment request as follows:\r\n\r\n```python\r\nnew_shipment = api.shipments.create(\r\n  shipmentId = \"15916857-2a31-4238-a45b-e7ba32e0e320\",\r\n  orderReference = \"myReference\",\r\n  receiver =  {\r\n    \"name\": {\r\n      \"firstName\": \"John\",\r\n      \"lastName\": \"Doe\",\r\n      \"companyName\": \"ACME Corp.\",\r\n      \"additionalName\": \"Benelux\"\r\n    },\r\n    \"address\": {\r\n      \"countryCode\": \"NL\",\r\n      \"postalCode\": \"3542AD\",\r\n      \"city\": \"Utrecht\",\r\n      \"street\": \"Reactorweg\",\r\n      \"additionalAddressLine\": \"Street part 2 (not applicable for DHL Parcel Benelux)\",\r\n      \"number\": \"25\",\r\n      \"isBusiness\": true,\r\n      \"addition\": \"A\"\r\n    },\r\n    \"email\": \"mrparcel@dhlparcel.nl\",\r\n    \"phoneNumber\": \"0031612345678\",\r\n    \"vatNumber\": \"NL007096100B01\",\r\n    \"eoriNumber\": \"NL123456789\",\r\n    \"reference\": \"Customer reference\"\r\n  },\r\n  shipper = {\r\n    \"name\": {\r\n      \"firstName\": \"John\",\r\n      \"lastName\": \"Doe\",\r\n      \"companyName\": \"ACME Corp.\",\r\n      \"additionalName\": \"Benelux\"\r\n    },\r\n    \"address\": {\r\n      \"countryCode\": \"NL\",\r\n      \"postalCode\": \"3542AD\",\r\n      \"city\": \"Utrecht\",\r\n      \"street\": \"Reactorweg\",\r\n      \"additionalAddressLine\": \"Street part 2 (not applicable for DHL Parcel Benelux)\",\r\n      \"number\": \"25\",\r\n      \"isBusiness\": true,\r\n      \"addition\": \"A\"\r\n    },\r\n    \"email\": \"mrparcel@dhlparcel.nl\",\r\n    \"phoneNumber\": \"0031612345678\",\r\n    \"vatNumber\": \"NL007096100B01\",\r\n    \"eoriNumber\": \"NL123456789\"\r\n  },\r\n  accountId = \"01234567\",\r\n  options = [\r\n    {\r\n      \"key\": \"PS\",\r\n      \"input\": \"8004-NL-132825\"\r\n    }\r\n  ],\r\n  pieces = [\r\n    {\r\n      \"parcelType\": \"SMALL\",\r\n      \"quantity\": 1,\r\n      \"weight\": 1,\r\n      \"dimensions\": {\r\n        \"length\": 20,\r\n        \"width\": 25,\r\n        \"height\": 30\r\n      }\r\n    }\r\n  ]\r\n)\r\n```\r\n\r\nThe response will be put in the ```new_shipment``` object.\r\n\r\n### Error handling\r\n\r\nBasic error handling has been added. You can check if an error has occured during a call by checking the ```has_error``` attribute on an object. If the ```has_error``` has been set to ```True```, an ```Error``` object will be attached to the ```error``` attribute of the same object. The ```Error``` object contains two attributes: ```returned_content``` and ```status```. ```returned_content``` can be empty as not all errors return something.\r\n\r\n```python\r\nshipment = api.shipments.get(id)\r\n\r\nif shipment.has_error:\r\n    print(shipment.error.status) # status code\r\n    print(shipment.error.returned_content) # returned content, if any. Can be empty.\r\n```\r\n\r\n## Available endpoints & functions\r\n\r\nFollowing endpoints are available:\r\n\r\n- capabilities\r\n- shipments\r\n- labels\r\n- parcel_types\r\n- products\r\n- pickup_availablity\r\n- parcelshops\r\n\r\nFollowing functions are available:\r\n- get()\r\n- list()\r\n- create()\r\n\r\nUse them as follows:\r\n\r\n```python\r\napi.endpoint.function()\r\n\r\n# example:\r\n# api.products.get(id)\r\n# api.products.list()\r\n# api.parcelshops.list()\r\n# api.parcelshops.get(id)\r\n# api.shipments.create()\r\n```\r\n\r\nAll functions are type-hinted and thus should tell you what each function for each endpoints expects. A function that retrieves only one object will always return a ```BaseModel``` object with the returned fields from the response attached as attributes. A list will always return a ```ObjectListModel```, which you can iterate over using the ```.items()``` function. This will return a list of ```BaseModel``` objects.\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/alexander-schillemans/python-dhlparcel-api/archive/refs/tags/0.0.3.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/alexander-schillemans/python-dhlparcel-api",
    "keywords": "dhl,dhl parcel",
    "license": "GPL-3.0-or-later",
    "maintainer": "",
    "maintainer_email": "",
    "name": "python-dhlparcel-api",
    "package_url": "https://pypi.org/project/python-dhlparcel-api/",
    "platform": null,
    "project_url": "https://pypi.org/project/python-dhlparcel-api/",
    "project_urls": {
      "Download": "https://github.com/alexander-schillemans/python-dhlparcel-api/archive/refs/tags/0.0.3.tar.gz",
      "Homepage": "https://github.com/alexander-schillemans/python-dhlparcel-api"
    },
    "release_url": "https://pypi.org/project/python-dhlparcel-api/0.0.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Wrapper for the DHL Parcel API endpoints",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17188813,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "83b3d7dfa33f44d4729756ada4437a4044f591831a4bcfbdcd4a6703bf9bb74f",
          "md5": "250626e3d4509e489f5b3cf1f90eba2b",
          "sha256": "fee0c393dc9baddf7863347efb5ef940d5b43323b9b73f46eef53c7f07896dd5"
        },
        "downloads": -1,
        "filename": "python-dhlparcel-api-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "250626e3d4509e489f5b3cf1f90eba2b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 22694,
        "upload_time": "2023-02-20T07:55:27",
        "upload_time_iso_8601": "2023-02-20T07:55:27.602482Z",
        "url": "https://files.pythonhosted.org/packages/83/b3/d7dfa33f44d4729756ada4437a4044f591831a4bcfbdcd4a6703bf9bb74f/python-dhlparcel-api-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e56d8568077c6ef73e52a0f57ea6ad6a10c82a939f97373e7c2f02702b963f0e",
          "md5": "2da4bee3ed8a7b33abc21dc73469f308",
          "sha256": "1254b4964f307706c4105ffebcdf49031f422d58c845984c5c0a7f82103bdd1b"
        },
        "downloads": -1,
        "filename": "python-dhlparcel-api-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2da4bee3ed8a7b33abc21dc73469f308",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 22700,
        "upload_time": "2023-03-07T08:06:38",
        "upload_time_iso_8601": "2023-03-07T08:06:38.566095Z",
        "url": "https://files.pythonhosted.org/packages/e5/6d/8568077c6ef73e52a0f57ea6ad6a10c82a939f97373e7c2f02702b963f0e/python-dhlparcel-api-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "73901843a6aede4524709c49544a55afb5f8ab7bc95fbdab756a4ac97cb911fc",
          "md5": "7fc32b405af6db8637d2dfb34089d4cc",
          "sha256": "1da84ff8522f5132180ba1c16aaf71e0e376021b740d09941ae6513b68f0203b"
        },
        "downloads": -1,
        "filename": "python-dhlparcel-api-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "7fc32b405af6db8637d2dfb34089d4cc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 22664,
        "upload_time": "2023-03-07T09:55:35",
        "upload_time_iso_8601": "2023-03-07T09:55:35.185420Z",
        "url": "https://files.pythonhosted.org/packages/73/90/1843a6aede4524709c49544a55afb5f8ab7bc95fbdab756a4ac97cb911fc/python-dhlparcel-api-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "73901843a6aede4524709c49544a55afb5f8ab7bc95fbdab756a4ac97cb911fc",
        "md5": "7fc32b405af6db8637d2dfb34089d4cc",
        "sha256": "1da84ff8522f5132180ba1c16aaf71e0e376021b740d09941ae6513b68f0203b"
      },
      "downloads": -1,
      "filename": "python-dhlparcel-api-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "7fc32b405af6db8637d2dfb34089d4cc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 22664,
      "upload_time": "2023-03-07T09:55:35",
      "upload_time_iso_8601": "2023-03-07T09:55:35.185420Z",
      "url": "https://files.pythonhosted.org/packages/73/90/1843a6aede4524709c49544a55afb5f8ab7bc95fbdab756a4ac97cb911fc/python-dhlparcel-api-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}