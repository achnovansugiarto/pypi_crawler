{
  "info": {
    "author": "DeltaX",
    "author_email": "delta@deltax.dev",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Internet",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Utilities"
    ],
    "description": "<div align=\"center\">\n    <div>\n        <h1>SlashPaginator</h1>\n        <span> <a href=\"https://pypi.org/project/discord-py-slash-command/\"><img src=\"https://raw.githubusercontent.com/discord-py-slash-commands/discord-py-interactions/goverfl0w-new-readme/.github/banner_transparent.png\" alt=\"discord-py-interactions\" height=\"128\"></a></span>\n    </div>\n    <div>\n    </div>\n    <div>\n        <h3>Button paginator using discord-py-interactions</h3>\n    </div>\n</div>\n\n## Welcome!\nIt's a very simple paginator for discord-py-interactions!\n\nThis project is open source ⭐.\n\n## Install\n```\npip install --upgrade SlashPaginator\n```\n\n# Example\n\n```py\n@slash.slash(name=\"example\")\nasync def _example(ctx):\n    embed1 = discord.Embed(color=ctx.author.color).add_field(name=\"Example\", value=\"Page 1\")\n    embed2 = discord.Embed(color=ctx.author.color).add_field(name=\"Example\", value=\"Page 2\")\n    embed3 = discord.Embed(color=ctx.author.color).add_field(name=\"Example\", value=\"Page 3\")\n    paginator = SlashPaginator.AutoSlashEmbedPaginator(ctx)\n    embeds = [embed1, embed2, embed3]\n    await paginator.run(embeds)\n\n```\n\nThe `AutoSlashEmbedPaginator` uses the lib's buttons to scroll.\nIf given only one page, it just acts as a glorified ctx.send(embed=embeds) message.\n\nThe `CustomAutoSlashPaginator` is a subclass of `AutoSlashEmbedPaginator` that lets you:\n  - Customise what buttons you want to use, instead of the default.\n  - Customize what functions the buttons should use instead.\n\nThe caveat with the custom object is that it requires learning about how to use components in the lib.\nYou may refer [here](https://discord-py-slash-command.readthedocs.io/en/latest/components.html#responding-to-interactions) to learn more.\n\n## Custom example (Reimplementing AutoSlashEmbedPaginator without the freeze page button):\n\n```py\nclass MyOwnPaginator(SlashPaginator.CustomAutoSlashPaginator):\n    def __init__(self, *args, **kwargs):\n        super().__init__(*args, **kwargs)\n        \n    async def button_1_action(self, button_ctx):\n        \"\"\"Seeks to the first page.\"\"\"\n        self.current_page = 0\n        if self.remove_reactions:\n            try:\n                await button_ctx.edit_origin(components=[])\n            except:\n                pass\n        if self.auto_footer:\n            self.embeds[0].set_footer(\n                text=f\"({self.current_page + 1}/{len(self.embeds)})\"\n            )\n        await button_ctx.edit_origin(embed=self.embeds[0])\n    async def button_2_action(self, button_ctx):\n        \"\"\"Seeks to the previous page.\"\"\"\n        self.current_page = self.current_page - 1\n        self.current_page = (\n            0 if self.current_page < 0 else self.current_page\n        )\n        if self.remove_reactions:\n            try:\n                await button_ctx.edit_origin(components=[])\n            except:\n                pass\n        if self.auto_footer:\n            self.embeds[self.current_page].set_footer(\n                text=f\"({self.current_page + 1}/{len(self.embeds)})\"\n            )\n        await button_ctx.edit_origin(embed=self.embeds[self.current_page])\n    async def button_3_action(self, button_ctx):\n        \"\"\"Seeks to the next page.\"\"\"\n        self.current_page = self.current_page + 1\n        self.current_page = (\n            len(self.embeds) - 1\n            if self.current_page > len(self.embeds) - 1\n            else self.current_page\n        )\n        if self.remove_reactions:\n            try:\n                await button_ctx.edit_origin(components=[])\n            except:\n                pass\n        if self.auto_footer:\n            self.embeds[self.current_page].set_footer(\n                text=f\"({self.current_page + 1}/{len(self.embeds)})\"\n            )\n        await button_ctx.edit_origin(embed=self.embeds[self.current_page])\n    async def button_4_action(self, button_ctx):\n        \"\"\"Seeks to the last page.\"\"\"\n        self.current_page = len(self.embeds) - 1\n        if self.remove_reactions:\n            try:\n                await button_ctx.edit_origin(components=[])\n            except:\n                pass\n        if self.auto_footer:\n            self.embeds[len(self.embeds) - 1].set_footer(\n                text=f\"({self.current_page + 1}/{len(self.embeds)})\"\n            )\n        await button_ctx.edit_origin(\n            embed=self.embeds[len(self.embeds) - 1]\n        )\n        \n\n@slash.slash(name=\"example\")\nasync def _example(ctx):\n    embed1 = discord.Embed(color=ctx.author.color).add_field(name=\"Example\", value=\"Page 1\")\n    embed2 = discord.Embed(color=ctx.author.color).add_field(name=\"Example\", value=\"Page 2\")\n    embed3 = discord.Embed(color=ctx.author.color).add_field(name=\"Example\", value=\"Page 3\")\n    emojis = [\"⏮️\", \"◀\", \"▶\", \"⏭️\"]  # first page, prev page, next page, last page\n    embeds = [embed1, embed2, embed3]\n    paginator = MyOwnPaginator(ctx, control_emojis=emojis)\n    \n    await paginator.run(embeds)\n\n```\n\n## Custom Example #2\n(Redoing the look of the buttons, but keep the functionality intact.)\n\n```py\n@slash.slash(name=\"example\")\nasync def _example(ctx):\n    embed1 = discord.Embed(color=ctx.author.color).add_field(name=\"Example\", value=\"Page 1\")\n    embed2 = discord.Embed(color=ctx.author.color).add_field(name=\"Example\", value=\"Page 2\")\n    embed3 = discord.Embed(color=ctx.author.color).add_field(name=\"Example\", value=\"Page 3\")\n    emojis = [\"⏮️\", \"◀\", \"⏹️\", \"▶\", \"⏭️\"]  # first page, prev page, stop, next page, last page\n    embeds = [embed1, embed2, embed3]\n    paginator = SlashPaginator.CustomAutoSlashPaginator(ctx, control_emojis=emojis, default_run=True)\n    \n    await paginator.run(embeds)\n\n\n```\n\n\n\n\n\n\n## License\nThis project is under the MIT License.\n\n## Contribute\nAnyone can contribute to this by forking the repository, making a change, and create a pull request!\n\nMake sure you run it under the black formatter first :)\n\n## Credits to:\n\n+ [decave27](https://github.com/decave27/ButtonPaginator/) for the README layout\n+ [toxicrecker](https://github.com/toxicrecker/DiscordUtils) for the basis of this paginator\n+ Everyone that maintains the [discord-py-interactions](https://github.com/discord-py-slash-commands/discord-py-interactions) lib.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/DeltaXWizard/ButtonPaginator",
    "keywords": "discord.py,pagination,button,components,slash,discord_slash_commands",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "SlashPaginator",
    "package_url": "https://pypi.org/project/SlashPaginator/",
    "platform": "",
    "project_url": "https://pypi.org/project/SlashPaginator/",
    "project_urls": {
      "Homepage": "https://github.com/DeltaXWizard/ButtonPaginator"
    },
    "release_url": "https://pypi.org/project/SlashPaginator/0.0.3/",
    "requires_dist": [
      "discord.py",
      "discord-py-slash-command"
    ],
    "requires_python": ">=3.6",
    "summary": "Button paginator using discord-py-interactions",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11132565,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "07908eb6ae76dd2894c8717f850377299936d3d8fe09e12dde55db1c67d4e437",
          "md5": "09925d1c865e02d222082e565a00160c",
          "sha256": "f0fd61431f6c53404d614bed50e6ce388c5acdaab925dad664b4147d8b9fa8c8"
        },
        "downloads": -1,
        "filename": "SlashPaginator-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "09925d1c865e02d222082e565a00160c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4142,
        "upload_time": "2021-07-13T20:08:37",
        "upload_time_iso_8601": "2021-07-13T20:08:37.178180Z",
        "url": "https://files.pythonhosted.org/packages/07/90/8eb6ae76dd2894c8717f850377299936d3d8fe09e12dde55db1c67d4e437/SlashPaginator-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "746bc746706d131205c9b0ec3e2ea5cf792ec612e4c4ca383c2eea318df92493",
          "md5": "a6b8cb8b26604307aaf4d5ed9d1b72e2",
          "sha256": "c193144e04fc7768c88ad0afcb841d6b24030c926046b1a59b8120c0d27a79b5"
        },
        "downloads": -1,
        "filename": "SlashPaginator-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a6b8cb8b26604307aaf4d5ed9d1b72e2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4298,
        "upload_time": "2021-08-08T15:53:04",
        "upload_time_iso_8601": "2021-08-08T15:53:04.922512Z",
        "url": "https://files.pythonhosted.org/packages/74/6b/c746706d131205c9b0ec3e2ea5cf792ec612e4c4ca383c2eea318df92493/SlashPaginator-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bb17572265d85d9efb040964868bbc588c21aaf4312993e0f2f8fe66e2647236",
          "md5": "e5cbbe7e8f0867e2e28141fc299bc22e",
          "sha256": "bb629823305ff09b9cf6296061e5620859c1196afadce44fb02114b9016aac1e"
        },
        "downloads": -1,
        "filename": "SlashPaginator-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e5cbbe7e8f0867e2e28141fc299bc22e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5187,
        "upload_time": "2021-08-08T15:53:06",
        "upload_time_iso_8601": "2021-08-08T15:53:06.771668Z",
        "url": "https://files.pythonhosted.org/packages/bb/17/572265d85d9efb040964868bbc588c21aaf4312993e0f2f8fe66e2647236/SlashPaginator-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "04cf73d49d125288af611d48d82e27d57dfd29c21c7ff79ce22f010eb6a93689",
          "md5": "a0fe600b4b634cf04e773d34dbdf0da5",
          "sha256": "903ff7e233dcc387b85cf91e1fb4e454aa6b6c5de8eb360e7bec14cb1877103a"
        },
        "downloads": -1,
        "filename": "SlashPaginator-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a0fe600b4b634cf04e773d34dbdf0da5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6142,
        "upload_time": "2021-08-09T19:26:02",
        "upload_time_iso_8601": "2021-08-09T19:26:02.902379Z",
        "url": "https://files.pythonhosted.org/packages/04/cf/73d49d125288af611d48d82e27d57dfd29c21c7ff79ce22f010eb6a93689/SlashPaginator-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea943e4c38a23a58bd87ea1bd169b6cd07f31b62ddde1f5e34b08ccc82264fd3",
          "md5": "39752620a96f5b0379f450324260b577",
          "sha256": "5058c887b6b2225c02b14cdd24e009163854b1dd10a7a02e34cd92c45fd620dc"
        },
        "downloads": -1,
        "filename": "SlashPaginator-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "39752620a96f5b0379f450324260b577",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6179,
        "upload_time": "2021-08-09T19:26:05",
        "upload_time_iso_8601": "2021-08-09T19:26:05.950378Z",
        "url": "https://files.pythonhosted.org/packages/ea/94/3e4c38a23a58bd87ea1bd169b6cd07f31b62ddde1f5e34b08ccc82264fd3/SlashPaginator-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "04cf73d49d125288af611d48d82e27d57dfd29c21c7ff79ce22f010eb6a93689",
        "md5": "a0fe600b4b634cf04e773d34dbdf0da5",
        "sha256": "903ff7e233dcc387b85cf91e1fb4e454aa6b6c5de8eb360e7bec14cb1877103a"
      },
      "downloads": -1,
      "filename": "SlashPaginator-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a0fe600b4b634cf04e773d34dbdf0da5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 6142,
      "upload_time": "2021-08-09T19:26:02",
      "upload_time_iso_8601": "2021-08-09T19:26:02.902379Z",
      "url": "https://files.pythonhosted.org/packages/04/cf/73d49d125288af611d48d82e27d57dfd29c21c7ff79ce22f010eb6a93689/SlashPaginator-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ea943e4c38a23a58bd87ea1bd169b6cd07f31b62ddde1f5e34b08ccc82264fd3",
        "md5": "39752620a96f5b0379f450324260b577",
        "sha256": "5058c887b6b2225c02b14cdd24e009163854b1dd10a7a02e34cd92c45fd620dc"
      },
      "downloads": -1,
      "filename": "SlashPaginator-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "39752620a96f5b0379f450324260b577",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 6179,
      "upload_time": "2021-08-09T19:26:05",
      "upload_time_iso_8601": "2021-08-09T19:26:05.950378Z",
      "url": "https://files.pythonhosted.org/packages/ea/94/3e4c38a23a58bd87ea1bd169b6cd07f31b62ddde1f5e34b08ccc82264fd3/SlashPaginator-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}