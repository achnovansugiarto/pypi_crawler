{
  "info": {
    "author": "Yonatan Tarazona",
    "author_email": "geoyons@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "<!-- #region -->\n[![License: MIT](https://img.shields.io/badge/licence-MIT-blue)](https://opensource.org/licenses/MIT)\n[![Donate](https://img.shields.io/badge/Donate-PayPal-green.svg)](https://paypal.me/APROGIS?locale.x=es_XC)\n[![PyPI version](https://badge.fury.io/py/forestools.svg)](https://badge.fury.io/py/forestools)\n\n# forestools\n\n**forestools** is a Python package that was created to provide tools for monitoring and mapping vegetation cover, especially detecting deforestation. The [**PVts-Beta**](https://www.sciencedirect.com/science/article/abs/pii/S1470160X18305326) approach, a non-seasonal detection approach (time-series-based), is implemented in this package. \n\n<img src=\"forestools/figures/img_readme.png\">\n\n# IEEE Geoscience and Remote Sensing Letters\n\n## Citation\n\nThis repository is part of the paper *Mapping deforestation using fractions indices and the PVts-beta approach* submitted to **IEEE Geoscience and Remote Sensing Letters**.\n\nPlease, to cite the forestools package in publications, use this paper:\n\nTarazona, Y. (2022). Mapping deforestation using fractions indices and the PVts-beta approach, *IEEE Geoscience and Remote Sensing Letters*, DOI: [10.1109/LGRS.2021.3137277](10.1109/LGRS.2021.3137277).\n\n\n# Introduction\n\n**forestools** is a Python package mainly focused on mapping and monitoring deforestation, although it can be used for monitoring forest degradation or detecting early warnings. The detection algorithm embedded in this package is a non-seasonal detection approach - unlike seasonal algorithms - that does not model the seasonal component of a time series, is intuitive, has only one calibration parameter, and can be run with vegetation indices such as NDVI and EVI, photosynthetic vegetation from CLASlite software, with radar polarizations, and with NDFI fraction indices. In fact, this package includes an algorithm that is capable of obtaining NDFI indices, which until now was only possible to obtain from Google Earth Engine.\n\n**forestools** is intended for students, professionals, researchers, and organizations dedicated to forest monitoring and assessment, and any public interested in mapping the changes experienced by the different forests on the planet due to anthropogenic disturbances but also to minor natural disturbances.\n\n# Installation\n\nTo used **forestools** it is necessary to install first. There are three options:\n\n## 1. From PyPI\n\n**forestools** is available on [PyPI](https://pypi.org/project/forestools/), so to install it, run this command in your terminal:\n\n    pip install forestools\n\n## 2. Installing from source\n\nIt is also possible to install the latest development version directly from the GitHub repository with:\n    \n    pip install git+git://github.com/ytarazona/forestools.git\n\n# Examples\n\n## 1. Obtaining NDFI index\n\nLandsat 8 OLI (Operational Land Imager) was used to obtain the NDFI index in this example. This image contain bands: B2, B3, B4, B5, B6, B7. This image will be downloaded using the following codes:\n<!-- #endregion -->\n\n```python\nimport requests, zipfile\nfrom io import BytesIO\n\n# Defining the zip file URL\nurl = 'https://github.com/ytarazona/ft_data/raw/main/data/LC08_232066_20190727.zip'\n\n# Split URL to get the file name\nfilename = url.split('/')[-1]\n\n# Downloading the file by sending the request to the URL\nreq = requests.get(url)\n\n# extracting the zip file contents\nfile = zipfile.ZipFile(BytesIO(req.content))\nfile.extractall()\n```\n\nOnce it has been done, letÂ´s obtain NDFI index.\n\n```python\nfrom forestools.ndfiSMA import ndfiSMA\nimport rasterio\nimport matplotlib.pyplot as plt\nimport matplotlib as mpl\nimport numpy as np\nnp.seterr(divide='ignore', invalid='ignore')\n\n# Read raster bands\nimgRas = rasterio.open('LC08_232066_20190727.jp2')\n    \n# Raster to Numpay arrays\nimage = imgRas.read()\n    \n# Obtaining NDFI from Surface Reflectance\nndfi = ndfiSMA(x = image, procesLevel = 'SR')\n\n# Let's define the color palette\npalette = mpl.colors.ListedColormap([\n            \"#FFFFFF\",\"#FFFCFF\",\"#FFF9FF\",\"#FFF7FF\",\"#FFF4FF\",\"#FFF2FF\",\"#FFEFFF\",\"#FFECFF\",\"#FFEAFF\",\"#FFE7FF\",\n            \"#FFE5FF\",\"#FFE2FF\",\"#FFE0FF\",\"#FFDDFF\",\"#FFDAFF\",\"#FFD8FF\",\"#FFD5FF\",\"#FFD3FF\",\"#FFD0FF\",\"#FFCEFF\",\n            \"#FFCBFF\",\"#FFC8FF\",\"#FFC6FF\",\"#FFC3FF\",\"#FFC1FF\",\"#FFBEFF\",\"#FFBCFF\",\"#FFB9FF\",\"#FFB6FF\",\"#FFB4FF\",\n            \"#FFB1FF\",\"#FFAFFF\",\"#FFACFF\",\"#FFAAFF\",\"#FFA7FF\",\"#FFA4FF\",\"#FFA2FF\",\"#FF9FFF\",\"#FF9DFF\",\"#FF9AFF\",\n            \"#FF97FF\",\"#FF95FF\",\"#FF92FF\",\"#FF90FF\",\"#FF8DFF\",\"#FF8BFF\",\"#FF88FF\",\"#FF85FF\",\"#FF83FF\",\"#FF80FF\",\n            \"#FF7EFF\",\"#FF7BFF\",\"#FF79FF\",\"#FF76FF\",\"#FF73FF\",\"#FF71FF\",\"#FF6EFF\",\"#FF6CFF\",\"#FF69FF\",\"#FF67FF\",\n            \"#FF64FF\",\"#FF61FF\",\"#FF5FFF\",\"#FF5CFF\",\"#FF5AFF\",\"#FF57FF\",\"#FF55FF\",\"#FF52FF\",\"#FF4FFF\",\"#FF4DFF\",\n            \"#FF4AFF\",\"#FF48FF\",\"#FF45FF\",\"#FF42FF\",\"#FF40FF\",\"#FF3DFF\",\"#FF3BFF\",\"#FF38FF\",\"#FF36FF\",\"#FF33FF\",\n            \"#FF30FF\",\"#FF2EFF\",\"#FF2BFF\",\"#FF29FF\",\"#FF26FF\",\"#FF24FF\",\"#FF21FF\",\"#FF1EFF\",\"#FF1CFF\",\"#FF19FF\",\n            \"#FF17FF\",\"#FF14FF\",\"#FF12FF\",\"#FF0FFF\",\"#FF0CFF\",\"#FF0AFF\",\"#FF07FF\",\"#FF05FF\",\"#FF02FF\",\"#FF00FF\",\n            \"#FF00FF\",\"#FF0AF4\",\"#FF15E9\",\"#FF1FDF\",\"#FF2AD4\",\"#FF35C9\",\"#FF3FBF\",\"#FF4AB4\",\"#FF55AA\",\"#FF5F9F\",\n            \"#FF6A94\",\"#FF748A\",\"#FF7F7F\",\"#FF8A74\",\"#FF946A\",\"#FF9F5F\",\"#FFAA55\",\"#FFB44A\",\"#FFBF3F\",\"#FFC935\",\n            \"#FFD42A\",\"#FFDF1F\",\"#FFE915\",\"#FFF40A\",\"#FFFF00\",\"#FFFF00\",\"#FFFB00\",\"#FFF700\",\"#FFF300\",\"#FFF000\",\n            \"#FFEC00\",\"#FFE800\",\"#FFE400\",\"#FFE100\",\"#FFDD00\",\"#FFD900\",\"#FFD500\",\"#FFD200\",\"#FFCE00\",\"#FFCA00\",\n            \"#FFC600\",\"#FFC300\",\"#FFBF00\",\"#FFBB00\",\"#FFB700\",\"#FFB400\",\"#FFB000\",\"#FFAC00\",\"#FFA800\",\"#FFA500\",\n            \"#FFA500\",\"#F7A400\",\"#F0A300\",\"#E8A200\",\"#E1A200\",\"#D9A100\",\"#D2A000\",\"#CA9F00\",\"#C39F00\",\"#BB9E00\",\n            \"#B49D00\",\"#AC9C00\",\"#A59C00\",\"#9D9B00\",\"#969A00\",\"#8E9900\",\"#879900\",\"#7F9800\",\"#789700\",\"#709700\",\n            \"#699600\",\"#619500\",\"#5A9400\",\"#529400\",\"#4B9300\",\"#439200\",\"#349100\",\"#2D9000\",\"#258F00\",\"#1E8E00\",\n            \"#168E00\",\"#0F8D00\",\"#078C00\",\"#008C00\",\"#008C00\",\"#008700\",\"#008300\",\"#007F00\",\"#007A00\",\"#007600\",\n            \"#007200\",\"#006E00\",\"#006900\",\"#006500\",\"#006100\",\"#005C00\",\"#005800\",\"#005400\",\"#005000\",\"#004C00\"])\n            \n# Displaying the index\nfig, axes = plt.subplots(figsize = (12,12))\nimg = axes.imshow(ndfi, cmap = palette)\naxes.set(title = 'NDFI - Landsat-8 OLI')\nplt.colorbar(img, fraction = 0.035, pad = 0.05)\nplt.show()\n```\n<img src=\"forestools/figures/readme_fig1.png\" width = 100%/>\n\n\n## 2. Breakpoint in an NDFI series\n\nHere an NDFI series between 2000 and 2019 from -1 to 1.\n\n```python\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set()\n\n# NDFI series\nserie = np.array([0.84, 0.93, 0.89, 0.75, 0.87, 0.89, 0.845, 0.8425, 0.70, 0.89, 0.95,\n0.90, 0.94, 0.95, 0.89, 0.805, 0.8025, 0.80, 0.20, -0.40])\n              \n# Index between 2000 - 2019\ntime = np.arange('2000', '2020', dtype = 'datetime64[Y]')\n\n# Displaying the series\nfig, axes = plt.subplots(figsize = (11,6))\naxes.plot(time, serie, marker = '.', ms = 7, linewidth = 0.7, color = 'gray', \n          label ='NDFI series')\naxes.set(xlabel = 'Time', ylabel = 'NDFI Value')\naxes.legend(loc = \"lower left\", fontsize = 20)\nplt.show()\n```\n<img src=\"forestools/figures/readme_fig2.png\" width = 95%/>\n\n\n### 2.1 Applying a smoothing\n\nBefore detecting a breakpoint, it is necessary to apply a smoothing to remove outliers. So, we'll use the **smootH** function from the **forestools** package. This function accepts 1d array and 2d array, so that if we are working with time series we will need to convert to array -> **serie.to_numpy()**.\n\n```python\nfrom forestools.smootH import smootH\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Apply a smoothing\nndfi_smooth = smootH(x = serie)\ntime = np.arange('2000', '2020', dtype='datetime64[Y]')\n\n# Displaying the series\n# Series without smoothing\nfig, axes = plt.subplots(figsize = (11,6))\naxes.plot(time, serie, marker='.', ms = 7, linewidth = 0.7, color = 'silver', \n          label='NDFI series')\n# Series with smoothing\naxes.plot(time, ndfi_smooth, marker='.', ms = 7, linewidth = 1, color = 'blue', \n          label='NDFI series - smoothed')\naxes.set(xlabel = 'Time', ylabel = 'NDFI Value')\naxes.legend(loc=\"lower left\", fontsize = 20)\nplt.show()\n```\n<img src=\"forestools/figures/readme_fig3.png\" width = 95%/>\n\n\n### 2.2 Detecting a change\n\nLet's detect change in 2018. For this, we will used the **pvts** function. First, *numpy.ndarray* will be used to detect change, and then we will do the same using *pandas.core.series.Series*.\n\n**_<div class=\"alert alert-warning\"><font color='darkblue'> Although detecting changes using *numpy.ndarray* is recommended and avoid indexing confusion.</font></div>_**\n\n#### 2.2.1 Using *numpy.ndarray* \n\nLet's use the output of the *smootH* function (**ndfi_smooth**), but we'll need to convert to 1d array with *ravel()*.\n\nParameters:\n- **x**: smoothed series preferably to optimize detections.\n- **startm**: monitoring year, index 18 (i.e., year 2018)\n- **endm**: year of final monitoring, index 18 (i.e., also year 2018)\n- **threshold**: detection threshold (for NDFI series we will use 5). If you are using PV series, NDVI or EVI series you can use 5, 3 or 3 respectively. Please see [Tarazona et al. (2018)](https://www.sciencedirect.com/science/article/abs/pii/S1470160X18305326) for more details.\n\n> **Note**: You can change the detection threshold if you need to. \n\n```python\nfrom forestools.pvts import pvts\n\n# Let's detect change\ncd = pvts(x = ndfi_smooth.ravel(), startm = 18, endm = 18, threshold = 5)\n\n# The output\ncd\n```\n\nThen, we can visualize the breakpoint in an graphic using the *plot* function of the *forestools* package.\n\n```python\nfrom forestools.plot import plot\n\n# LetÂ´s plot the graphic\nplt.figure(figsize=(11, 6))\nplot(cd, xlabel = 'Index', ylabel = 'NDFI')\nplt.show()\n```\n<img src=\"forestools/figures/readme_fig4.png\" width = 95%/>\n\n\nIf you need to save the image, you can follow these codes.\n\n\n```\n# Saving the graphic\ngra = plot(cd, xlabel = 'Index', ylabel = 'NDFI')\nfig = gra.get_figure()\nfig.savefig('name.png')\n```\n\n\n#### Example of Breakpoint not detected\n\n```python\n# Let's detect change\ncd = pvts(x = ndfi_smooth.ravel(), startm = 17, endm = 17, threshold = 5) # No change in 2017\n\n# The output is a dictionary\ncd\n```\n\n```python\nfrom forestools.plot import plot\n\n# LetÂ´s plot the graphic\nplt.figure(figsize=(11, 6))\nplot(cd, xlabel = 'Index', ylabel = 'NDFI')\nplt.show()\n```\n\n<img src=\"forestools/figures/readme_fig5.png\" width = 95%/>\n\n\n#### 2.2.2 Using *pandas.core.series.Series* \n\nLet's use again the output of the smootH function (**ndfi_smooth**), but we'll need to convert to time series.\n\nParameters:\n- **x**: smoothed series preferably to optimize detections.\n- **startm**: monitoring year, '2018-12-31' (i.e., year 2018).\n- **endm**: year of final monitoring '2018-12-31' (i.e., also year 2018).\n- **threshold**: for NDFI series we will use $5$.\n\n> **IMPORTANTE NOTE**: Whenever we use *pandas.core.series.Series* to detect change, we must put both *start* and *end* on the last day of the last month of the year. For example, if our monitoring year is 2010, then **`start = '2010-12-31'`** and **`end = '2010-12-31'`**. If our monitoring period is from 2000 to 2010, then **`start = '2000-12-31'`** and **`end = '2010-12-31'`**.\n\n```python\nfrom forestools.pvts import pvts\nimport pandas as pd\n\n# Serie between 2000 - 2019\nindex = pd.date_range('2000', '2020', freq ='A')\nndfi_serie = pd.Series(ndfi_smooth.ravel(), index = index)\n\n# Let's detect change\ncd = pvts(x = ndfi_serie, startm = '2018-12-31', endm = '2018-12-31', threshold = 5)\n\n# The output\ncd\n```\n\nThen, we can visualize the breakpoint in an graphic using the *plot* function.\n\n```python\nfrom forestools.plot import plot\n\n# LetÂ´s plot the graphic\nplt.figure(figsize=(11, 6))\nplot(cd, xlabel = 'Index', ylabel = 'NDFI')\nplt.show()\n```\n\n<img src=\"forestools/figures/readme_fig6.png\" width = 95%/>\n\n\n#### Example of Breakpoint not detected\n\n```python\n# Let's detect change - No change in 2017\ncd = pvts(x = ndfi_serie, startm = '2015-12-31', endm = '2015-12-31', threshold = 5) \n\n# The output is a dictionary\ncd\n```\n\n```python\nfrom forestools.plot import plot\n\n# LetÂ´s plot the graphic\nplt.figure(figsize=(11, 6))\nplot(cd, xlabel = 'Index', ylabel = 'NDFI')\nplt.show()\n```\n\n<img src=\"forestools/figures/readme_fig7.png\" width = 95%/>",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ytarazona/forestools",
    "keywords": "forestools",
    "license": "MIT license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "forestools",
    "package_url": "https://pypi.org/project/forestools/",
    "platform": "",
    "project_url": "https://pypi.org/project/forestools/",
    "project_urls": {
      "Homepage": "https://github.com/ytarazona/forestools"
    },
    "release_url": "https://pypi.org/project/forestools/0.1.8/",
    "requires_dist": null,
    "requires_python": ">=3.5",
    "summary": "Tools for detecting deforestation and forest degradation",
    "version": "0.1.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12711715,
  "releases": {
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "33baf766d12188528d640debc9079be49af24098f4d6cfc610ccb439dc435c03",
          "md5": "67d7636db956a2338a8697fbc298317c",
          "sha256": "7f454d6ca132d7dc47a6a7118a2facd211f70138d1cd8cb5e7b0c41b328bfd5b"
        },
        "downloads": -1,
        "filename": "forestools-0.0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "67d7636db956a2338a8697fbc298317c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 8689,
        "upload_time": "2020-08-19T20:56:14",
        "upload_time_iso_8601": "2020-08-19T20:56:14.978876Z",
        "url": "https://files.pythonhosted.org/packages/33/ba/f766d12188528d640debc9079be49af24098f4d6cfc610ccb439dc435c03/forestools-0.0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c69679f1e0dcc7ec3c0240abfe665605cbfd95552aba33c960bc4e618d78b757",
          "md5": "005ffa5125863bc427424f85fc58cfc9",
          "sha256": "cf26063aa60cb6433a89a1dcccacf7f1705d5759c6890d556cfd43ff49493357"
        },
        "downloads": -1,
        "filename": "forestools-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "005ffa5125863bc427424f85fc58cfc9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 13446667,
        "upload_time": "2020-08-19T20:56:57",
        "upload_time_iso_8601": "2020-08-19T20:56:57.473733Z",
        "url": "https://files.pythonhosted.org/packages/c6/96/79f1e0dcc7ec3c0240abfe665605cbfd95552aba33c960bc4e618d78b757/forestools-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5328d83464c80c5bfc7df25a4e0bcf7ea1f52cb1c6bedadbfb1c5994b47213fb",
          "md5": "55a57f6c1a09308a0b7639ca21608deb",
          "sha256": "249e906ec1a6611a7403f3a9db72cd19cee0d9201a918e5916ecbd6ad33aded3"
        },
        "downloads": -1,
        "filename": "forestools-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "55a57f6c1a09308a0b7639ca21608deb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 10979,
        "upload_time": "2020-09-15T16:38:54",
        "upload_time_iso_8601": "2020-09-15T16:38:54.880891Z",
        "url": "https://files.pythonhosted.org/packages/53/28/d83464c80c5bfc7df25a4e0bcf7ea1f52cb1c6bedadbfb1c5994b47213fb/forestools-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "52c8bb171c4a0ba8c696b3b55746c348a51a981bc9c1dd7a097200f2a3683091",
          "md5": "c0e373546d46b5bfc84b2e38ea464d5e",
          "sha256": "46b9bb75be5e09268e481d2eb90e62e492b56cdbe428f9e258d13dfda2f6de6d"
        },
        "downloads": -1,
        "filename": "forestools-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c0e373546d46b5bfc84b2e38ea464d5e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 12584204,
        "upload_time": "2020-09-15T16:39:14",
        "upload_time_iso_8601": "2020-09-15T16:39:14.900984Z",
        "url": "https://files.pythonhosted.org/packages/52/c8/bb171c4a0ba8c696b3b55746c348a51a981bc9c1dd7a097200f2a3683091/forestools-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "223511c39a4ffaef67786fa51b00ae8ad6b0e7e263336ddc2ec2f73c297b1a88",
          "md5": "63a584e2a60088078d7a6b32aa5ab0d9",
          "sha256": "362d99c4f5bee22ef0a26d394a273453caa1ef5cc248d560243b34d5db3bdd61"
        },
        "downloads": -1,
        "filename": "forestools-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "63a584e2a60088078d7a6b32aa5ab0d9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 10990,
        "upload_time": "2020-09-15T17:07:09",
        "upload_time_iso_8601": "2020-09-15T17:07:09.060514Z",
        "url": "https://files.pythonhosted.org/packages/22/35/11c39a4ffaef67786fa51b00ae8ad6b0e7e263336ddc2ec2f73c297b1a88/forestools-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d8e95db2097090a43d80d5c170771fb0ea4c277385891793600342f79e14956d",
          "md5": "ea8d563a7b174cfde7ebb96d2974ff0c",
          "sha256": "4e465eeeb914df6e70cf033189507e0f837ada6b14b82e2acb5dc7af34ea3f81"
        },
        "downloads": -1,
        "filename": "forestools-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ea8d563a7b174cfde7ebb96d2974ff0c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 12584229,
        "upload_time": "2020-09-15T17:07:31",
        "upload_time_iso_8601": "2020-09-15T17:07:31.478713Z",
        "url": "https://files.pythonhosted.org/packages/d8/e9/5db2097090a43d80d5c170771fb0ea4c277385891793600342f79e14956d/forestools-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d94cfb3a95e3d059200044b387eea2a35e3518f29030d68d190cff90f7620410",
          "md5": "6a10722749bbf5c418f648d598ca7f20",
          "sha256": "d01c7168e5ea22d90d6fab3e5a727efe1d882bc4551f504d8068273134ab4574"
        },
        "downloads": -1,
        "filename": "forestools-0.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "6a10722749bbf5c418f648d598ca7f20",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 12627,
        "upload_time": "2022-01-01T23:30:08",
        "upload_time_iso_8601": "2022-01-01T23:30:08.102852Z",
        "url": "https://files.pythonhosted.org/packages/d9/4c/fb3a95e3d059200044b387eea2a35e3518f29030d68d190cff90f7620410/forestools-0.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c9a70f32614f4ff8b45f0564054dcc0274864b4ab8f0c7294f481bb1594970c6",
          "md5": "1278de74eb6ff13c956bc3ba3cd71840",
          "sha256": "b248965241ca13cdc67dfb1bb6408828a59adf80058acc3a76c6579a6a775e44"
        },
        "downloads": -1,
        "filename": "forestools-0.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "1278de74eb6ff13c956bc3ba3cd71840",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 12674,
        "upload_time": "2022-01-27T16:00:58",
        "upload_time_iso_8601": "2022-01-27T16:00:58.305042Z",
        "url": "https://files.pythonhosted.org/packages/c9/a7/0f32614f4ff8b45f0564054dcc0274864b4ab8f0c7294f481bb1594970c6/forestools-0.1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c9a70f32614f4ff8b45f0564054dcc0274864b4ab8f0c7294f481bb1594970c6",
        "md5": "1278de74eb6ff13c956bc3ba3cd71840",
        "sha256": "b248965241ca13cdc67dfb1bb6408828a59adf80058acc3a76c6579a6a775e44"
      },
      "downloads": -1,
      "filename": "forestools-0.1.8.tar.gz",
      "has_sig": false,
      "md5_digest": "1278de74eb6ff13c956bc3ba3cd71840",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 12674,
      "upload_time": "2022-01-27T16:00:58",
      "upload_time_iso_8601": "2022-01-27T16:00:58.305042Z",
      "url": "https://files.pythonhosted.org/packages/c9/a7/0f32614f4ff8b45f0564054dcc0274864b4ab8f0c7294f481bb1594970c6/forestools-0.1.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}