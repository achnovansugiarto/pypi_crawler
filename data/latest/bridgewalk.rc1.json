{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Topic :: Games/Entertainment",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "# BridgeWalk\n\n[![PyPI](https://img.shields.io/pypi/v/bridgewalk.svg)](https://pypi.python.org/pypi/bridgewalk/#history)\n\nBridgeWalk is a partially-observed reinforcement learning environment with\ndynamics of varying stochasticity. The player needs to walk along a bridge to\nreach a goal location. When the player walks off the bridge into the water, the\ncurrent will move it randomly until it gets washed back on the shore. A good\nagent in this environment avoids this stochastic trap. The implementation of\nBridgeWalk is based on the [Crafter][crafter] environment.\n\n![Bridge Walk Video](https://github.com/danijar/bridgewalk/raw/main/media/video.gif)\n\n[crafter]: https://github.com/danijar/crafter\n\n## Play Yourself\n\nYou can play the game yourself with an interactive window and keyboard input.\nThe mapping from keys to actions, health level, and inventory state are printed\nto the terminal.\n\n```sh\n# Install with GUI\npip3 install 'bridgewalk[gui]'\n\n# Start the game\nbridgewalk\n\n# Alternative way to start the game\npython3 -m bridgewalk.run_gui\n```\n\nThe following optional command line flags are available:\n\n| Flag | Default | Description |\n| :--- | :-----: | :---------- |\n| `--window <width> <height>` | 800 800 | Window size in pixels, used as width and height. |\n| `--fps <integer>` | 5 | How many times to update the environment per second. |\n| `--record <filename>.mp4` | None | Record a video of the trajectory. |\n| `--view <width> <height>` | 7 7 | The layout size in cells; determines view distance. |\n| `--length <integer>` | None | Time limit for the episode. |\n| `--seed <integer>` | None | Determines world generation and creatures. |\n\n## Training Agents\n\nInstallation: `pip3 install -U bridgewalk`\n\nThe environment follows the [OpenAI Gym][gym] interface:\n\n```py\nimport bridgewalk\n\nenv = bridgewalk.Env(seed=0)\nobs = env.reset()\nassert obs.shape == (64, 64, 3)\n\ndone = False\nwhile not done:\n  action = env.action_space.sample()\n  obs, reward, done, info = env.step(action)\n```\n\n[gym]: https://github.com/openai/gym\n\n## Environment Details\n\n### Reward\n\nA reward of +1 is given the first time in each episode when the agent reaches\nthe island at the end of the bridge.\n\n### Termination\n\nEpisodes terminate after 250 steps.\n\n### Observation Space\n\nEach observation is an RGB image that shows a local view of the world around\nthe player, as well as the inventory state of the agent.\n\n### Action Space\n\nThe action space is categorical. Each action is an integer index representing\none of the possible actions:\n\n| Integer | Name | Description |\n| :-----: | :--- | :---------- |\n| 0 | `noop` | Do nothing. |\n| 1 | `move_left` | Walk left. |\n| 2 | `move_right` | Walk right. |\n| 3 | `move_up` | Walk up. |\n| 4 | `move_down` | Walk down. |\n\n## Questions\n\nPlease [open an issue][issues] on Github.\n\n[issues]: https://github.com/danijar/bridgewalk/issues",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/danijar/bridgewalk",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "bridgewalk",
    "package_url": "https://pypi.org/project/bridgewalk/",
    "platform": "",
    "project_url": "https://pypi.org/project/bridgewalk/",
    "project_urls": {
      "Homepage": "http://github.com/danijar/bridgewalk"
    },
    "release_url": "https://pypi.org/project/bridgewalk/0.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Visual reinforcement learning benchmark for controllability.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10658463,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7ba9b383fca4f4ea03bbae835020f68c44081e6a2724437015cd58cebb1a1075",
          "md5": "4aebfc2d2f0afbc5f909b909ea57fda6",
          "sha256": "57ca59c82d597753f9ff58075f25d423481bb3fe539893ed2560394aaf1ba048"
        },
        "downloads": -1,
        "filename": "bridgewalk-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4aebfc2d2f0afbc5f909b909ea57fda6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30041,
        "upload_time": "2021-06-16T00:31:53",
        "upload_time_iso_8601": "2021-06-16T00:31:53.451583Z",
        "url": "https://files.pythonhosted.org/packages/7b/a9/b383fca4f4ea03bbae835020f68c44081e6a2724437015cd58cebb1a1075/bridgewalk-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7ba9b383fca4f4ea03bbae835020f68c44081e6a2724437015cd58cebb1a1075",
        "md5": "4aebfc2d2f0afbc5f909b909ea57fda6",
        "sha256": "57ca59c82d597753f9ff58075f25d423481bb3fe539893ed2560394aaf1ba048"
      },
      "downloads": -1,
      "filename": "bridgewalk-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "4aebfc2d2f0afbc5f909b909ea57fda6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 30041,
      "upload_time": "2021-06-16T00:31:53",
      "upload_time_iso_8601": "2021-06-16T00:31:53.451583Z",
      "url": "https://files.pythonhosted.org/packages/7b/a9/b383fca4f4ea03bbae835020f68c44081e6a2724437015cd58cebb1a1075/bridgewalk-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}