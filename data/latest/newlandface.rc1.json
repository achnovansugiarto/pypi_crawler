{
  "info": {
    "author": "fjndfazp",
    "author_email": "gyyzp@qq.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "---\ntypora-copy-images-to: upload\n---\n\n# newlandface\n[TOC]\n\nnewlandface 是一个轻量级的人脸检测和多属性分析（年龄、性别、标签）分析工具，使用python语言，集成了部分开源库Dlib、mtcnn等工具，该库主要是基于Keras和TensorFlow来进行开发的。\n\n## Installation 安装\n\nThe easiest way to install newlandface is to download it from [`PyPI`](https://pypi.org/project/newlandface/).\n\n```python\npip install newlandface\n```\n\n## 文件结构\n> │  README.md\n> │  requirements.txt\n> │  setup.py\n> │  \n> ├─newlandface\n> │  │  nlface.py\n> │  │  __init__.py\n> │  │  \n> │  ├─basemodels\n> │  │  │  DeepID.py\n> │  │  │  DlibResNet.py\n> │  │  │  Facenet.py\n> │  │  │  FbDeepFace.py\n> │  │  │  OpenFace.py\n> │  │  │  VGGFace.py\n> │  │  │  __init__.py\n> │  │          \n> │  ├─commons\n> │  │  │  distance.py\n> │  │  │  functions.py\n> │  │  │  realtime.py\n> │  │  │  __init__.py\n> │  │          \n> │  ├─extendedmodels\n> │  │  │  Age.py\n> │  │  │  Emotion.py\n> │  │  │  Gender.py\n> │  │  │  Race.py\n> │  │  │  __init__.py\n> │  │          \n> │  ├─models\n> │  │      face-recognition-ensemble-model.txt\n> │  │      __init__.py\n> │      \n> └─tests\n>     │  testFaceAttr_video.py\n>     │  testFaceDetect_img.py\n>     │  testFacePoints_img.py\n>     │  \n>     └─dataset\n>             img1.jpg\n>             img13.jpg\n>             img14.jpg\n>             ...\n\n## 测试代码\n\n### 1.1 人脸检测代码\n\n```python\nfrom newlandface import nlface\nimport cv2\n# 模型加载\nnlface.load_model()\nimage = cv2.imread(\"./dataset/test1.jpg\")\n# 人脸检测\nfaceObjs = nlface.detect_face(image)\n# 显示人脸框\nif faceObjs is not 0:\n    for idx, rect in enumerate(faceObjs):\n        image = nlface.show_face(image,rect)\nelse:\n    print(\"no face detect\")\n    os._exit(0)\ncv2.imshow(\"test\",image)\ncv2.waitKey()\n```\n\n![facedetect](https://gitee.com/fjndfazp/picgo/raw/master/img/20201102193344.jpg)\n\n\n\n### 1.2 人脸68点检测\n\n#### 1.2.1 直接调用show_face_points函数进行显示\n\n核心函数：***detect_face、show_face_points***\n\n```python\nfrom newlandface import nlface\nimport cv2\ncv2.namedWindow(\"test\",0)\n# 模型加载\nnlface.load_model()\nimage = cv2.imread(\"./dataset/test1.jpg\")\n# 人脸检测\nfaceObjs = nlface.detect_face(image)\n# 显示人脸框\nif faceObjs is not 0:\n    for idx, rect in enumerate(faceObjs):\n        image = nlface.show_face_points(image,rect)\nelse:\n    print(\"no face detect\")\n    os._exit(0)\ncv2.imshow(\"test\",image)\ncv2.waitKey()\n```\n\n#### 1.2.2 调用点检测模块，自行画图\n\n核心函数：***detect_face、detect_points、show_face***\n\n```python\nfrom newlandface import nlface\nimport cv2\ncv2.namedWindow(\"test\",0)\n# 模型加载\nnlface.load_model()\nimage = cv2.imread(\"./dataset/test1.jpg\")\n# 人脸检测\nfaceObjs = nlface.detect_face(image)\nif faceObjs is not 0:\n    for idx, rect in enumerate(faceObjs):\n        # 人脸68点检测\n\t\tpoints = nlface.detect_points(image,rect)\n        # 显示人脸框、68点\n\t\timage = nlface.show_face(image,rect)\n        for i,point in enumerate(points):\n            cv2.circle(image,(point[0],point[1]),2,(0,0,255),-1)\n            cv2.imshow(\"test\",image)\n        cv2.waitKey(1)    \nelse:\n    print(\"no face detect\")\n    os._exit(0)\ncv2.imshow(\"test\",image)\ncv2.waitKey()\n```\n\n\n\n![facepoints_test](https://gitee.com/fjndfazp/picgo/raw/master/img/20201102193336.jpg)\n\n\n\n### 1.3 人脸属性分析\n\n核心函数：***detect_face、detect_points、show_face***\n\n属性开放：**emotion(表情)、age（年龄）、gender（性别）**\n\n|    属性     | 检测耗时 |                           标签类型                           |\n| :---------: | :------: | :----------------------------------------------------------: |\n| emotion表情 |   30ms   | ['angry', 'disgust', 'fear', 'happy', 'sad', 'surprise', 'neutral'] |\n|   age年龄   |  130ms   |                            1-100                             |\n| gender性别  |  170ms   |                          woman、man                          |\n\n注意：不同的模块耗时不一，所以如果调用摄像头的时候，要注意实时性上的要求。\n\n```python\nfrom newlandface import nlface\nimport cv2\ncv2.namedWindow(\"test\",0)\n# 模型加载\nnlface.load_model()\nimage = cv2.imread(\"./dataset/test1.jpg\")\n# 人脸检测\nfaceObjs = nlface.detect_face(image)\nif faceObjs is not 0:\n    for idx, rect in enumerate(faceObjs):\n        # 人脸属性分析\n        actions = ['emotion', 'age', 'gender']\n        attribute = nlface.analyze(image, faceObjs[idex],actions = actions)\n        # 显示人脸框\\属性\n\t\timage = nlface.show_face(image,rect)\n        image = nlface.show_face_attr(image, faceObjs[idex], attribute, actions)\n        cv2.imshow(\"test\",image)\n        cv2.waitKey(1)    \nelse:\n    print(\"no face detect\")\n    os._exit(0)\ncv2.imshow(\"test\",image)\ncv2.waitKey()\n```\n\n![faceAttr](https://gitee.com/fjndfazp/picgo/raw/master/img/20201102193325.jpg)\n\n\n\n\n\n\n\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/fjndfazp/newlandface",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "newlandface",
    "package_url": "https://pypi.org/project/newlandface/",
    "platform": "",
    "project_url": "https://pypi.org/project/newlandface/",
    "project_urls": {
      "Homepage": "https://github.com/fjndfazp/newlandface"
    },
    "release_url": "https://pypi.org/project/newlandface/1.0.3/",
    "requires_dist": [
      "numpy (>=1.14.0)",
      "pandas (>=0.23.4)",
      "gdown (>=3.10.1)",
      "tqdm (>=4.30.0)",
      "Pillow (>=5.2.0)",
      "opencv-python (>=3.4.4)",
      "tensorflow (>=1.9.0)",
      "keras (>=2.2.0)",
      "Flask (>=1.1.2)",
      "mtcnn (>=0.1.0)"
    ],
    "requires_python": ">=3.5.5",
    "summary": "A Lightweight Face Detection and Facial Attribute Analysis Framework (Age, Gender, Emotion) for Python",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8559394,
  "releases": {
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c89c33e1313aae95d638dce5230893f87ac31e43122d151d19c16cfa70d7d740",
          "md5": "92b2d62d7a2e3f6ea9eaf88920480521",
          "sha256": "e3aad86204b6a09ea7ca715b043b4df37f427072bc91c75b03a23c495b1be1f7"
        },
        "downloads": -1,
        "filename": "newlandface-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "92b2d62d7a2e3f6ea9eaf88920480521",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5.5",
        "size": 31421,
        "upload_time": "2020-11-02T11:42:05",
        "upload_time_iso_8601": "2020-11-02T11:42:05.954780Z",
        "url": "https://files.pythonhosted.org/packages/c8/9c/33e1313aae95d638dce5230893f87ac31e43122d151d19c16cfa70d7d740/newlandface-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a455e6476f5bd0d8822c542bf676deed154f4010c920ba32f3beb96999676502",
          "md5": "a2453e3283a30bf552347569ed185bc9",
          "sha256": "e01e3d1cb959727f26212e5bacc993266be7767f2eb44831bb16829c21c5540f"
        },
        "downloads": -1,
        "filename": "newlandface-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "a2453e3283a30bf552347569ed185bc9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5.5",
        "size": 26147,
        "upload_time": "2020-11-02T11:42:07",
        "upload_time_iso_8601": "2020-11-02T11:42:07.732242Z",
        "url": "https://files.pythonhosted.org/packages/a4/55/e6476f5bd0d8822c542bf676deed154f4010c920ba32f3beb96999676502/newlandface-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c89c33e1313aae95d638dce5230893f87ac31e43122d151d19c16cfa70d7d740",
        "md5": "92b2d62d7a2e3f6ea9eaf88920480521",
        "sha256": "e3aad86204b6a09ea7ca715b043b4df37f427072bc91c75b03a23c495b1be1f7"
      },
      "downloads": -1,
      "filename": "newlandface-1.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "92b2d62d7a2e3f6ea9eaf88920480521",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5.5",
      "size": 31421,
      "upload_time": "2020-11-02T11:42:05",
      "upload_time_iso_8601": "2020-11-02T11:42:05.954780Z",
      "url": "https://files.pythonhosted.org/packages/c8/9c/33e1313aae95d638dce5230893f87ac31e43122d151d19c16cfa70d7d740/newlandface-1.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a455e6476f5bd0d8822c542bf676deed154f4010c920ba32f3beb96999676502",
        "md5": "a2453e3283a30bf552347569ed185bc9",
        "sha256": "e01e3d1cb959727f26212e5bacc993266be7767f2eb44831bb16829c21c5540f"
      },
      "downloads": -1,
      "filename": "newlandface-1.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "a2453e3283a30bf552347569ed185bc9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5.5",
      "size": 26147,
      "upload_time": "2020-11-02T11:42:07",
      "upload_time_iso_8601": "2020-11-02T11:42:07.732242Z",
      "url": "https://files.pythonhosted.org/packages/a4/55/e6476f5bd0d8822c542bf676deed154f4010c920ba32f3beb96999676502/newlandface-1.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}