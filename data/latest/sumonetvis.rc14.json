{
  "info": {
    "author": "Patrick Malcolm",
    "author_email": "patmalcolm91@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Scientific/Engineering"
    ],
    "description": "# SumoNetVis\nA Python library for visualizing a Sumo network and trajectories with matplotlib or as an OBJ file.\n\n**Network and Trajectory Plotting**\n\n![Example plot of an intersection with trajectory colored by speed](Example_Plot.png)\n\n**Highly Customizable**\n\n![Example plot showing USA and EUR style lane markings](Line_Stripe_Styles_Animation.gif)\n\n**Trajectory Animation**\n\n![Example animation](Example_Animation.gif)\n\nBasic trajectory plotting from FCD outputs is built in, but it is also possible to plot custom data and graphics on\ntop of the network with the full flexibility and power of matplotlib and other compatible libraries, such as seaborn.\n\n3D geometry for a network can be generated and saved as a Wavefront-OBJ file.\n![Example_rendering of OBJ export of an intersection](Example_OBJ_Export.png)\n\n## Installation\nThis package can be installed via pip with the command ```pip install SumoNetVis```.\nYou can then import the library with:\n\n```python\nimport SumoNetVis\n```\n\n### Dependencies\n* shapely (>=1.7.0 for stop lines and OBJ export)\n* triangle (for OBJ terrain export)\n* matplotlib\n* numpy\n\n## Usage\nTo plot a Sumo net file and trajectories, you can use the following code:\n\n```python\nimport SumoNetVis\nimport matplotlib.pyplot as plt\n# Plot Sumo Network\nnet = SumoNetVis.Net(\"path/to/yourfile.net.xml\")\nnet.plot()\n# Plot trajectories\ntrajectories = SumoNetVis.Trajectories(\"path/to/fcd-output.xml\")\ntrajectories[\"vehicle_id\"].assign_colors_speed()\ntrajectories[\"vehicle_id\"].plot()\n# Show figure\nplt.show()\n```\n\nthe ```Net.plot()``` function takes the following optional parameters:\n* ax: matplotlib Axes object (defaults to currently active Axes)\n* clip_to_limits: if True, only objects visible in the current view extents will be drawn\n* zoom_to_extents: auto-zoom to Net extents (defaults to True)\n* style: lane marking style to use (\"USA\" or \"EUR\")\n* stripe_width_scale: scale factor for lane marking widths (defaults to 1)\n* plot_stop_lines: whether to plot stop lines\n* apply_netOffset: whether to translate the network by the inverse of the netOffset value\n* lane_kwargs: dict of kwargs to pass to the lane plotting function (matplotlib.patches.Polygon()), for example alpha\n* lane_marking_kwargs: dict of kwargs to pass to the lane markings plotting function (matplotlib.lines.Line2D())\n* junction_kwargs: dict of kwargs to pass to the junction plotting function (matplotlib.patches.Polygon())\n\nAny kwargs passed directly to ```Net.plot()``` will be passed to each of the plotting functions. These will, however,\nbe overridden by any object-type-specific kwargs (```lane_kwargs```, etc.).\n\nTo plot all junctions at 50% opacity and all other objects at 80% opacity, for example, one can use:\n```python\nnet.plot(junction_kwargs={\"alpha\": 0.5}, alpha=0.8)\n```\n\nThe color scheme of junctions and various lane types can be customized by modifying entries in the global variable\n```COLOR_SCHEME```. For example, to plot bike lanes as dark green instead of dark red, do the following:\n```python\nSumoNetVis.COLOR_SCHEME[\"bicycle\"] = \"#006600\"\n```\nAny color specification supported by matplotlib can be given here, such as RGB and RGBA hex strings and float tuples, as\nwell as color names and abbreviations. See the matplotlib documentation for more detailed information.\n\n### Trajectory Colorization\nWhen using the various \"assign_colors\" functions, when applicable, a corresponding matplotlib ```ScalarMappable``` will\nbe stored in the ```Trajectory.mappable``` property. The ```Trajectories``` class also contains a property,\n```mappables```, which contains a dict of ```vehID: ScalarMappable``` pairs. Therefore, to automatically generate a\ncolorbar, one of the two following (equivalent) methods can be used:\n\n```python\nplt.colorbar(trajectories[\"vehicle_id\"].mappable)\n# OR\nplt.colorbar(trajectories.mappables[\"vehicle_id\"])\n```\n\n### Animation\nInstead of visualizing Trajectories as lines, an animation can be generated using the ```matplotlib.animation``` module.\n\n```python\nimport matplotlib.animation as animation\ntrajectories = SumoNetVis.Trajectories(\"path/to/fcd-output.xml\")\nfig, ax = plt.subplots()\na = animation.FuncAnimation(fig, trajectories.plot_points, frames=trajectories.timestep_range(), repeat=False,\n                            interval=1000*trajectories.timestep, fargs=(ax,), blit=True)\nplt.show()\n```\n\nThe plot settings for each vehicle can be customized and the color of each point can be animated, as shown in the\nfollowing example.\n\n```python\nfor trajectory in trajectories:\n        trajectory.assign_colors_speed()\n        trajectory.point_plot_kwargs[\"ms\"] = 8  # set marker size. Can set any kwargs taken by matplotlib.pyplot.plot().\n```\n\nIn order to animate the color of the points based on the assigned color scheme, an additional farg must be passed\nwhen creating the animation.\n\n```python\na = animation.FuncAnimation(fig, trajectories.plot_points, frames=trajectories.timestep_range(), repeat=False,\n                            interval=1000*trajectories.timestep, fargs=(ax, True), blit=True)\n```\n\n### Additional Files\nCurrently, polygons, POIs, and bus stops are supported. Sumo additional files can be loaded and plotted in one of\ntwo ways:\n\n**Load directly with Network**\n```python\nnet = SumoNetVis.Net(\"path/to/yourfile.net.xml\", additional_files=\"path/to/additionals_file.add.xml\")\n```\n\n**Load and handle additional files separately**\n```python\naddls = SumoNetVis.Additionals(\"path/to/additionals_file.add.xml\", reference_net=net)\naddls.plot()\n```\nThe ```reference_net``` argument is optional, and only necessary for bus stops and for POIs whose position is defined\nrelative to a lane in the network.\n\n#### Bus stop styles\nSeveral styles of bus stop are supported. The style can be changed using the function\n```SumoNetVis.set_bus_stop_style()```. See documentation for further details\n\n### Generic Parameters\nGeneric parameter values are loaded for supported objects (edges, lanes, junctions, vehicles, polys) and are stored in\nan attribute called ```params``` in each of the respective object classes. These can be used to aid in implementing\ncustom functionality on top of SumoNetVis. There are also some built-in features which can make use of these parameters.\nFor example:\n* trajectory colorization\n* OBJ export material\n* OBJ export extrude height\n\nSee the Sumo documentation on generic parameters as well as the full SumoNetVis documentation for more information.\n\n### OBJ Export\n\nThe Wavefront-OBJ format is a text-based file format. The ```Net.generate_obj_text()``` method generates the contents\nof this file for the given Sumo network. In order to save an OBJ file, do the following:\n\n```python\n# Save a network as an OBJ file\nwith open(\"model.obj\", \"w\") as f:\n    f.write(net.generate_obj_text())\n\n# Save bus stops and polygons from an additional file as an OBJ file\nwith open(\"busstops.obj\", \"w\") as f:\n    f.write(addls.generate_bus_stops_obj_text())\n```\n\nThe axis configuration in the generated file is Y-Forward, Z-Up. Check these settings if the orientation of the model\nis incorrect when importing the file into a 3D modelling program.\n\nA flat planar \"terrain\" mesh can optionally be generated for all areas within a given distance of a network object.\nSee full documentation for further information.\n\nEach type of object is defined with a corresponding material (i.e. all bike lanes have the same material, all sidewalks,\nand so on), making it easy to quickly set the desired material properties before rendering. These can also be mapped\nto user-defined material names if desired (see full documentation). Default material names are of the following forms:\nfor markings, \"\\[c\\]\\_marking\", where \\[c\\] is the marking color (\"w\" for white, \"y\" for yellow, etc.);\nfor lanes, \"\\[type\\]\\_lane\", where \\[type\\] is the lane type (\"pedestrian\", \"bicycle\", \"no_passenger\", \"none\", \"other\");\nfor junctions, \"junction\"; for terrain, \"terrain\".\n\n### Extensibility\nTo aid in extensibility, each plotting function returns an iterable object consisting of all matplotlib Artist objects\ngenerated by that function. Trajectory plotting functions return simple lists or tuples. Net and Additionals plotting\nfunctions return an ```ArtistCollection``` object which is iterable just like a normal list, but also contains a list\nattribute for each object type. Each artist is also given an attribute ```sumo_object``` which contains a reference to\nthe SumoNetVis object that generated it. The artists can then be acted on as desired, for example to create custom\nanimations or to make an interactive plot. An illustrative example of the latter is shown below. In the example,\nwhen a user clicks on a lane, that lane's id and speed properties are printed out.\n\n```python\ndef onpick(event):\n    sumo_object = event.artist.sumo_object\n    print(\"Lane \", sumo_object.id, \"clicked. Speed limit: \", sumo_object.speed)\n\nartists = net.plot()\nfor lane_artist in artists.lanes:\n    lane_artist.set_picker(True)\nfig.canvas.mpl_connect(\"pick_event\", onpick)\nplt.show()\n```\n\n## Documentation\nAPI documentation can be found [here](https://patmalcolm91.github.io/SumoNetVis/SumoNetVis.html)\n\n## Contribution\nIssues and pull requests are welcome.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/patmalcolm91/SumoNetVis/archive/v1.6.0.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/patmalcolm91/SumoNetVis",
    "keywords": "sumo,network,visualize,plot,matplotlib,traffic",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "SumoNetVis",
    "package_url": "https://pypi.org/project/SumoNetVis/",
    "platform": "",
    "project_url": "https://pypi.org/project/SumoNetVis/",
    "project_urls": {
      "Download": "https://github.com/patmalcolm91/SumoNetVis/archive/v1.6.0.tar.gz",
      "Homepage": "https://github.com/patmalcolm91/SumoNetVis"
    },
    "release_url": "https://pypi.org/project/SumoNetVis/1.6.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A python library to render Sumo network files and trajectories with matplotlib or as an OBJ file.",
    "version": "1.6.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8517889,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d348a5de962da28efd162dc442a7f555e681504b278987ec22185473b4fd2b58",
          "md5": "493495119341f828152ad48edaf239cf",
          "sha256": "b87e31fc548b095fcb791d959933970e63af276c27ebfbc2b4ca2d8349813f8b"
        },
        "downloads": -1,
        "filename": "SumoNetVis-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "493495119341f828152ad48edaf239cf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6779,
        "upload_time": "2019-11-20T22:59:57",
        "upload_time_iso_8601": "2019-11-20T22:59:57.791752Z",
        "url": "https://files.pythonhosted.org/packages/d3/48/a5de962da28efd162dc442a7f555e681504b278987ec22185473b4fd2b58/SumoNetVis-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c795090634a5a60eee0c7e34134091e60fe54710a66a7e451dcb809b19295940",
          "md5": "5d45384d5d819588ae1ed285e6b7fbc9",
          "sha256": "908439f410b9e16ae0e8cd833b0e9098d9055413e49c028edd4247611e92a153"
        },
        "downloads": -1,
        "filename": "SumoNetVis-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5d45384d5d819588ae1ed285e6b7fbc9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8495,
        "upload_time": "2019-11-27T13:51:56",
        "upload_time_iso_8601": "2019-11-27T13:51:56.662370Z",
        "url": "https://files.pythonhosted.org/packages/c7/95/090634a5a60eee0c7e34134091e60fe54710a66a7e451dcb809b19295940/SumoNetVis-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5c2320dc321e628c8ffaa7eb9a3a5b6ff44baa8cc47f27a41d93eaf1b9017f6e",
          "md5": "5c1d3b998ae4ff31260dcb7881d8ca78",
          "sha256": "33183d1e478a4026912b978d673bf6a7bdf758fef87d1fd2a49b204cd5904d3a"
        },
        "downloads": -1,
        "filename": "SumoNetVis-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5c1d3b998ae4ff31260dcb7881d8ca78",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10692,
        "upload_time": "2020-02-05T17:06:56",
        "upload_time_iso_8601": "2020-02-05T17:06:56.973414Z",
        "url": "https://files.pythonhosted.org/packages/5c/23/20dc321e628c8ffaa7eb9a3a5b6ff44baa8cc47f27a41d93eaf1b9017f6e/SumoNetVis-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4137bdee455b75115dad0befff2b15b1dfd138491d00e5d0dcb8b0ed29185a7a",
          "md5": "4b1d10fca1f954db6327b63b5c28f53f",
          "sha256": "46d03a2640c5a44b064d1db74c000a1170d6f2cd4426957dbc96817bd0a67831"
        },
        "downloads": -1,
        "filename": "SumoNetVis-1.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4b1d10fca1f954db6327b63b5c28f53f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13994,
        "upload_time": "2020-02-20T21:35:17",
        "upload_time_iso_8601": "2020-02-20T21:35:17.572168Z",
        "url": "https://files.pythonhosted.org/packages/41/37/bdee455b75115dad0befff2b15b1dfd138491d00e5d0dcb8b0ed29185a7a/SumoNetVis-1.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "12b8df02f96533a0d59869b66fa3549d644c1427ed8d068b3e942c6870d6d6f9",
          "md5": "ea8010eea67a9c72059a9c51de6ebcde",
          "sha256": "942a6a34aa480fbd7719e6443dc2cc6ddf66afa58d81d04c7df5c5c297db3862"
        },
        "downloads": -1,
        "filename": "SumoNetVis-1.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ea8010eea67a9c72059a9c51de6ebcde",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15072,
        "upload_time": "2020-03-26T17:08:53",
        "upload_time_iso_8601": "2020-03-26T17:08:53.168698Z",
        "url": "https://files.pythonhosted.org/packages/12/b8/df02f96533a0d59869b66fa3549d644c1427ed8d068b3e942c6870d6d6f9/SumoNetVis-1.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "524664e9b240f39f03ffd2342740f4a71693bae5a5ba70751322f405ec704787",
          "md5": "28b6ce025b87b8041aaeebab1181383d",
          "sha256": "69c0653a8a9f2888ebeb3862f4a32637f7003ca17dadb5ebb84b77401a66b544"
        },
        "downloads": -1,
        "filename": "SumoNetVis-1.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "28b6ce025b87b8041aaeebab1181383d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 22981,
        "upload_time": "2020-05-04T18:30:19",
        "upload_time_iso_8601": "2020-05-04T18:30:19.703468Z",
        "url": "https://files.pythonhosted.org/packages/52/46/64e9b240f39f03ffd2342740f4a71693bae5a5ba70751322f405ec704787/SumoNetVis-1.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "708d1dde1b70867d9fad6410e2d5019d4821dac5b91a0f47ef7c6ceaaef002ad",
          "md5": "471b57ace2b5b1d59621b993c2f4a4ae",
          "sha256": "c59d646cfc9e24caaf21c040c9c60f79df2addacd6639955f005f918ac28731f"
        },
        "downloads": -1,
        "filename": "SumoNetVis-1.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "471b57ace2b5b1d59621b993c2f4a4ae",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23010,
        "upload_time": "2020-05-07T17:23:43",
        "upload_time_iso_8601": "2020-05-07T17:23:43.757149Z",
        "url": "https://files.pythonhosted.org/packages/70/8d/1dde1b70867d9fad6410e2d5019d4821dac5b91a0f47ef7c6ceaaef002ad/SumoNetVis-1.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5cd660cd07c99afa12a9b1a6b5c202c7b3517a44a5ec0ce2fc099dfcadcce5c5",
          "md5": "ae15ed8ac48ad2ade987d4cbb13566c2",
          "sha256": "accb872c798a102152ea9e2c6f80e71746a411e8458bd74e97a3a675c2cb3e7a"
        },
        "downloads": -1,
        "filename": "SumoNetVis-1.4.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ae15ed8ac48ad2ade987d4cbb13566c2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23548,
        "upload_time": "2020-06-30T06:56:26",
        "upload_time_iso_8601": "2020-06-30T06:56:26.549298Z",
        "url": "https://files.pythonhosted.org/packages/5c/d6/60cd07c99afa12a9b1a6b5c202c7b3517a44a5ec0ce2fc099dfcadcce5c5/SumoNetVis-1.4.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3dc17e6b10b71f45f7413db6a320578e8131a1d7c4d4378ea4fad7d8de2cd352",
          "md5": "07562fc2dedc1c9f8db4a4584b66d39a",
          "sha256": "79311dae81fcbea9db6d2e1a9923e6f4dedc85c85e32e145c2bcaf92328f2d03"
        },
        "downloads": -1,
        "filename": "SumoNetVis-1.4.3.tar.gz",
        "has_sig": false,
        "md5_digest": "07562fc2dedc1c9f8db4a4584b66d39a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25595,
        "upload_time": "2020-07-24T09:28:36",
        "upload_time_iso_8601": "2020-07-24T09:28:36.536832Z",
        "url": "https://files.pythonhosted.org/packages/3d/c1/7e6b10b71f45f7413db6a320578e8131a1d7c4d4378ea4fad7d8de2cd352/SumoNetVis-1.4.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4e9a9dd64c09c11d49bc88aa5ff03db0094dab05021116aa8f212bd7a1a65d96",
          "md5": "d9c3422f3d4ec1a2d8cfb1018e6c406a",
          "sha256": "998b5c89280a981e8b4cf7fe3f8daaef04d9b5439e7d7c0cf5ce8442d5cc1bfb"
        },
        "downloads": -1,
        "filename": "SumoNetVis-1.4.4.tar.gz",
        "has_sig": false,
        "md5_digest": "d9c3422f3d4ec1a2d8cfb1018e6c406a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25676,
        "upload_time": "2020-07-31T07:56:45",
        "upload_time_iso_8601": "2020-07-31T07:56:45.174784Z",
        "url": "https://files.pythonhosted.org/packages/4e/9a/9dd64c09c11d49bc88aa5ff03db0094dab05021116aa8f212bd7a1a65d96/SumoNetVis-1.4.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e6d4ba96f8d25191eccb2347894534503330dc650a4ac6f1a76431813ab29d85",
          "md5": "b6a5d2438ead4a6535362e31acb72e27",
          "sha256": "d35e45f42f6411829c7d6714fa9ec3b9c3dd590d8f3dfc5b0be0eb73f8e69775"
        },
        "downloads": -1,
        "filename": "SumoNetVis-1.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b6a5d2438ead4a6535362e31acb72e27",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29765,
        "upload_time": "2020-08-04T17:39:27",
        "upload_time_iso_8601": "2020-08-04T17:39:27.866963Z",
        "url": "https://files.pythonhosted.org/packages/e6/d4/ba96f8d25191eccb2347894534503330dc650a4ac6f1a76431813ab29d85/SumoNetVis-1.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "76dd61e2b50bb2695f2b355ba2e88400a28ae0843ced7f0f2c405875997e3ad9",
          "md5": "06be4975f3da572c0f3990b753b65e6f",
          "sha256": "a9ae4f6251955e4ccaeed35d05711c6de111d3aef53fa6ef18bacc7abba31afd"
        },
        "downloads": -1,
        "filename": "SumoNetVis-1.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "06be4975f3da572c0f3990b753b65e6f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30783,
        "upload_time": "2020-09-01T11:31:15",
        "upload_time_iso_8601": "2020-09-01T11:31:15.000035Z",
        "url": "https://files.pythonhosted.org/packages/76/dd/61e2b50bb2695f2b355ba2e88400a28ae0843ced7f0f2c405875997e3ad9/SumoNetVis-1.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "49c259100d0c0ac22838224d6959778919016e683d9d411d01e2b0d35bbe4428",
          "md5": "e7db48069b3d754eedad191280b6fa94",
          "sha256": "b1361ca5207cd248b773d62f0970b9a54206108270cb7df4d5c66cf8f306b616"
        },
        "downloads": -1,
        "filename": "SumoNetVis-1.5.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e7db48069b3d754eedad191280b6fa94",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30207,
        "upload_time": "2020-10-26T15:01:06",
        "upload_time_iso_8601": "2020-10-26T15:01:06.964268Z",
        "url": "https://files.pythonhosted.org/packages/49/c2/59100d0c0ac22838224d6959778919016e683d9d411d01e2b0d35bbe4428/SumoNetVis-1.5.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3dc14fa7896176d182c52acecbb07ff21c26540ef823814de0e9a6102c62171a",
          "md5": "45ef0d03841d375bc63dc195b6bdfccf",
          "sha256": "4df0854536a7c1b84ab08cd30409454d2543e59c0acffab1b7634e116a945dec"
        },
        "downloads": -1,
        "filename": "SumoNetVis-1.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "45ef0d03841d375bc63dc195b6bdfccf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 31171,
        "upload_time": "2020-10-27T21:55:14",
        "upload_time_iso_8601": "2020-10-27T21:55:14.025179Z",
        "url": "https://files.pythonhosted.org/packages/3d/c1/4fa7896176d182c52acecbb07ff21c26540ef823814de0e9a6102c62171a/SumoNetVis-1.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3dc14fa7896176d182c52acecbb07ff21c26540ef823814de0e9a6102c62171a",
        "md5": "45ef0d03841d375bc63dc195b6bdfccf",
        "sha256": "4df0854536a7c1b84ab08cd30409454d2543e59c0acffab1b7634e116a945dec"
      },
      "downloads": -1,
      "filename": "SumoNetVis-1.6.0.tar.gz",
      "has_sig": false,
      "md5_digest": "45ef0d03841d375bc63dc195b6bdfccf",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 31171,
      "upload_time": "2020-10-27T21:55:14",
      "upload_time_iso_8601": "2020-10-27T21:55:14.025179Z",
      "url": "https://files.pythonhosted.org/packages/3d/c1/4fa7896176d182c52acecbb07ff21c26540ef823814de0e9a6102c62171a/SumoNetVis-1.6.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}