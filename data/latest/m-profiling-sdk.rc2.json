{
  "info": {
    "author": "MOBIO",
    "author_email": "contact@mobio.vn",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development"
    ],
    "description": "- **Thư viện Consumer của Profiling** :\n* Tự động tạo kafka topics\n```python\nfrom mobio.libs.kafka_consumer_lib.helpers.ensure_kafka_topic import create_kafka_topics\ncreate_kafka_topics(['test1'])\n```\n* Kafka Python Consumer\n    \n```python\nfrom mobio.libs.kafka_consumer_lib.helpers.kafka_python_consumer_manager_v2 import KafkaPythonConsumerManagerV2, KafkaPythonMessageQueue\nfrom mobio.libs.kafka_consumer_lib import ConsumerGroup\nimport os\nfrom pymongo import MongoClient\n\n# Đây là function khởi tạo client-mongo\ndef create_db():\n    print(\"create_db: ok\")\n\n    try:\n        url_connection = os.getenv('PROFILING_MONGODB_URI')\n        client = MongoClient(url_connection, connect=False)\n    except Exception as ex:\n        print('ERROR BaseModel::create_db: %r', ex)\n        client = None\n\n    return client\n\n# Đây là class xử lý message\nclass KafkaPythonConsumer(KafkaPythonMessageQueue):\n    def __init__(self, mongo_client, topic_name, num_worker, group_id):\n        super().__init__(mongo_client, topic_name, num_worker, group_id)\n\n    def process_msg(self, payload):\n        try:\n            print('payload: {}'.format(payload))\n        except Exception as e:\n            print(\"ThreadMergeConsumer::ERR: {}\".format(e))\n\n# Đây là function khởi tạo consumers\ndef start_kafka_python():\n    mongo_client = create_db()\n    # FORMAT: CLASS, CLIENT-MONGO, TOPIC, NUMBER_CONSUMER, GROUP_NAME\n    consumer_list = [(KafkaPythonConsumer, mongo_client, 'test1', 1, ConsumerGroup.DEFAULT_CONSUMER_GROUP_ID)]\n\n    if consumer_list:\n        manager = KafkaPythonConsumerManagerV2(consumer_list)\nif __name__ == \"__main__\":\n    start_kafka_python()\n```\n    \n* Confluent Kafka Consumer\n\n```python\nimport os\nfrom mobio.libs.kafka_consumer_lib import ConsumerGroup\nfrom pymongo import MongoClient \nfrom mobio.libs.kafka_consumer_lib.helpers.confulent_consumer_manager import ConfluentConsumerManager, ConfluentMessageQueue\n\n# Đây là function khởi tạo client-mongo\ndef create_db():\n    print(\"create_db: ok\")\n\n    try:\n        url_connection = os.getenv('PROFILING_MONGODB_URI')\n        client = MongoClient(url_connection, connect=False)\n    except Exception as ex:\n        print('ERROR BaseModel::create_db: %r', ex)\n        client = None\n\n    return client\n\nclass ConfluentKafkaConsumer(ConfluentMessageQueue):\n\n    def __init__(self, mongo_client, topic_name, num_worker, group_id):\n        super().__init__(mongo_client, topic_name, num_worker, group_id)\n\n    def process_msg(self, payload):\n        print('payload: {}'.format(payload))\n        raise Exception('test')\n\ndef start_confluent_consumer():\n    mongo_client = create_db()\n    consumer_list = [(ConfluentKafkaConsumer, mongo_client, 'test1', 1, ConsumerGroup.DEFAULT_CONSUMER_GROUP_ID)]\n\n    if consumer_list:\n        manager = ConfluentConsumerManager(consumer_list)\n\n\nif __name__ == \"__main__\":\n    # test_create_topic()\n    # start_kafka_python()\n    start_confluent_consumer()\n```\n        \n** Update version 0.1.1\n* support Enable/Disable retry consumer",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mobiovn",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "m-profiling-sdk",
    "package_url": "https://pypi.org/project/m-profiling-sdk/",
    "platform": "",
    "project_url": "https://pypi.org/project/m-profiling-sdk/",
    "project_urls": {
      "Homepage": "https://github.com/mobiovn"
    },
    "release_url": "https://pypi.org/project/m-profiling-sdk/0.1.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Mobio Profiling Libs",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8819598,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "397d6d3d2e6c97acc0a67d3f776677ec4d324e255bbf033513386c106b6e411c",
          "md5": "13ccc08007e6f2eb5310d261d0fcb27a",
          "sha256": "a7b79b0adf736352a8b4b1d46c3475f126c2e0798d419819dc62d1c6951e65d4"
        },
        "downloads": -1,
        "filename": "m-profiling-sdk-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "13ccc08007e6f2eb5310d261d0fcb27a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7792,
        "upload_time": "2020-10-14T20:17:31",
        "upload_time_iso_8601": "2020-10-14T20:17:31.413630Z",
        "url": "https://files.pythonhosted.org/packages/39/7d/6d3d2e6c97acc0a67d3f776677ec4d324e255bbf033513386c106b6e411c/m-profiling-sdk-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b99ad32459a9ab9ec73ecee190ebb62d757a08e1289678da56a6bcbaec883e6f",
          "md5": "34310fb1957fe7a9ff8fd0552d33c975",
          "sha256": "54639421fce9eb4b1fb7fb624696cde3c887d0d2ee44ed2d712ba52ba867be5d"
        },
        "downloads": -1,
        "filename": "m-profiling-sdk-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "34310fb1957fe7a9ff8fd0552d33c975",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7066,
        "upload_time": "2020-12-04T08:00:16",
        "upload_time_iso_8601": "2020-12-04T08:00:16.187134Z",
        "url": "https://files.pythonhosted.org/packages/b9/9a/d32459a9ab9ec73ecee190ebb62d757a08e1289678da56a6bcbaec883e6f/m-profiling-sdk-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b99ad32459a9ab9ec73ecee190ebb62d757a08e1289678da56a6bcbaec883e6f",
        "md5": "34310fb1957fe7a9ff8fd0552d33c975",
        "sha256": "54639421fce9eb4b1fb7fb624696cde3c887d0d2ee44ed2d712ba52ba867be5d"
      },
      "downloads": -1,
      "filename": "m-profiling-sdk-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "34310fb1957fe7a9ff8fd0552d33c975",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7066,
      "upload_time": "2020-12-04T08:00:16",
      "upload_time_iso_8601": "2020-12-04T08:00:16.187134Z",
      "url": "https://files.pythonhosted.org/packages/b9/9a/d32459a9ab9ec73ecee190ebb62d757a08e1289678da56a6bcbaec883e6f/m-profiling-sdk-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}