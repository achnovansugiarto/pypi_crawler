{
  "info": {
    "author": "Jérôme Bon",
    "author_email": "jerome@hellowatt.fr",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.0",
      "Framework :: Django :: 3.1",
      "Framework :: Django :: 3.2",
      "Framework :: Django :: 4.0",
      "Framework :: Django :: 4.1",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "# Django Compose Tag\n\n[![ci-status-image]][ci-status]\n[![pypi-version]][pypi]\n\n**Compose templates easily**\n\nDjango Compose tags provide the tags to ease templates composition, \nwith an api close to the `include` template tag.\n\nThe api is thought to ease the implementation and usage of design systems in django.  \n\n---\n\n# Overview\n\nWrite your template as you would for the `include` tag:\n\n```jinja\n<!-- card.html -->\n\n<article class=\"card\">\n    <div class=\"card-body\">{{ children }}</div>\n    <footer class=\"card-footer\">{{ footer }}</footer>\n</article>\n```\n\n## The `compose` tag\n\nThe `compose` template tag behave similarly to [django's `include`][django-include-doc].\nThe main difference is that the content between `{% compose %}` and `{% endcompose %}` is regular django template that's accessible withing the composed template as the `{{ children }}` variable.\n\n```jinja\n{% load compose %}\n\n{% compose \"card.html\" footer=\"My footer\" %}\n    <p>card.html receive this as the {{ children }} variable</p>\n    <p>You can use {{ context_varialbe }} in here.</p>\n{% endcompose %}\n```\n\nBy default the composed template doesn't have access to the context, if you need access to the context set the takes_context option `{% compose \"card.html\" takes_context %}`. `takes_context` is the opposite of the `only` \n\n## The `define` tag\n\n### define\n\nThe `define` template tag allows you to set a new variable from within a template. That's a convenient way to use template rendered variables for any tag parameter.\n\n```jinja\n{% define mylink %}<a href={{ link.url }}>Go to {{ link.name }}{% enddefine %}\n\n{% include \"card.html\" children=\"Card body\" footer=mylink %}\n{% compose \"card.html\" footer=mylink %}\nCard body with {{ context_variable }}\n{% endcompose %}\n```\n\n## Custom composition tag\n\n`composition_tag` is to `compose` what [`inclustion_tag`][django-inclusiontag-doc] is to the `include` tag.\n\nDefine you tag function and decorate it with `composition_tag`, the decorator takes care of passing the children as the first argument of your custom tag.\n\n```python\n# mydesignsystem/templatetags/mydesignsystem.py\n\nfrom django.template import Library\nfrom compose_tags import composition_tag\n\nregister = Library()\n\n@register.tag\n@composition_tag('card.html', takes_context=True)\ndef card(children, context, next, cancelable=False):\n    return {\n        \"children\": children,\n        \"footer\": create_footer(next, cancelable),\n    }\n```\n\nThen use it in your templates, by default the tag is named after your function name.\n\n```jinja\n{% load mydesignsystem %}\n\n{% card next=someurl cancelable=True %}My card children{% endcard %}\n```\n\n### Declaring composition_tag\n\nThere are multiple ways to use composition_tag. The first is as a decorator:\n\n```python\n@register.tag\n@composition_tag('template.html')\ndef mytag(children, **kwargs):\n    # Usage: {% mytag %}children{% endmytag %} \n    ...\n\n@register.tag(\"customname\")\n@composition_tag('template.html')\ndef mytag(children, **kwargs):\n    # Usage: {% customname %}children{% endcustomname %} \n    ...\n```\n\nWhen you don't need to do any python processing, there is a default implementation that forward all parameters as is.\nWhen you rely on that default implementation the default tag name is derived from the template name.\n\nWhich mean `register.tag(composition_tag(\"button.html\"))` is equivalent to\n```python\n@register.tag\n@composition_tag('button.html')\ndef button(children, **kwargs):\n    return {\n        **kwargs,\n        \"children\": children\n    }\n```\n\nAs with the decorator usage, you can override the tag name: `register.tag(\"mybutton\", composition_tag(\"button.html\"))`\n\n----\n\n# Requirements\n\n* Python (3.6, 3.7, 3.8, 3.9, 3.10, 3.11)\n* Django (2.2, 3.0, 3.1, 3.2, 4.0, 4.1)\n\nWe **highly recommend** and only officially support the latest patch release of\neach Python and Django series.\n\n# Installation\n\nInstall using `pip install django-compose-tags`\n\nAdd `'compose_tags'` to your `INSTALLED_APPS` setting.\n```python\nINSTALLED_APPS = [\n    ...\n    'compose_tags',\n]\n```\n\nIf you use `compose` a lot we recommend you add it to your builtins:\n\n```python\nTEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"OPTIONS\": {\n            # ...\n            \"builtins\": [\"compose_tags.templatetags.compose\"],\n        }\n    }\n]\n```\n\n---\n\n# Alternatives\n\nDjango Compose Tag purposely provide a simple api based solely on templates.\n\nIf Django Compose Tag doesn't cover your requirements we recommend you take a look at [jinja][jinja-homepage].\n\n[ci-status-image]: https://github.com/HelloWatt/django-compose-tags/actions/workflows/main.yml/badge.svg\n[ci-status]: https://github.com/HelloWatt/django-compose-tags/actions/workflows/main.yml\n[pypi-version]: https://img.shields.io/pypi/v/django-compose-tags.svg\n[pypi]: https://pypi.org/project/django-compose-tags/\n\n\n[jinja-homepage]: https://jinja.palletsprojects.com\n[django-include-doc]: https://docs.djangoproject.com/en/dev/ref/templates/builtins/#include\n[django-inclusiontag-doc]: https://docs.djangoproject.com/en/dev/howto/custom-template-tags/#inclusion-tags\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/HelloWatt/django-compose-tags",
    "keywords": "",
    "license": "BSD-3-Clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-compose-tags",
    "package_url": "https://pypi.org/project/django-compose-tags/",
    "platform": null,
    "project_url": "https://pypi.org/project/django-compose-tags/",
    "project_urls": {
      "Changelog": "https://github.com/HelloWatt/django-compose-tags/blob/main/CHANGELOG.md",
      "Homepage": "https://github.com/HelloWatt/django-compose-tags",
      "Source": "https://github.com/HelloWatt/django-compose-tags"
    },
    "release_url": "https://pypi.org/project/django-compose-tags/0.0.2/",
    "requires_dist": [
      "Django (>=2.2)"
    ],
    "requires_python": ">=3.6",
    "summary": "Composition for django templates.",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15674412,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "99c12d9174e6f3075162b5c2c4dfa64a178051f4748c1d19ce471431bf10e628",
          "md5": "e4ed62fec9f6928660cebb42923a4b22",
          "sha256": "d73f526e3c8ad43464453562c7b0153a2ee5478326a80c97e0f5b24ad80104ce"
        },
        "downloads": -1,
        "filename": "django_compose_tags-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e4ed62fec9f6928660cebb42923a4b22",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 9141,
        "upload_time": "2022-11-05T19:10:50",
        "upload_time_iso_8601": "2022-11-05T19:10:50.048903Z",
        "url": "https://files.pythonhosted.org/packages/99/c1/2d9174e6f3075162b5c2c4dfa64a178051f4748c1d19ce471431bf10e628/django_compose_tags-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b1c087f703378108828f9281eeef341b213aeb1f6996b253a8ac9e4649313b5c",
          "md5": "93f60fc33ff43960b1ecc47fde82ae5a",
          "sha256": "a668b2ea27b774fec2f1e5e86747ca655b7101a6547167722f3a310ff6391ef8"
        },
        "downloads": -1,
        "filename": "django-compose-tags-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "93f60fc33ff43960b1ecc47fde82ae5a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10478,
        "upload_time": "2022-11-05T19:10:51",
        "upload_time_iso_8601": "2022-11-05T19:10:51.723246Z",
        "url": "https://files.pythonhosted.org/packages/b1/c0/87f703378108828f9281eeef341b213aeb1f6996b253a8ac9e4649313b5c/django-compose-tags-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e92631b525d61ff1bd5ceecd7a68797a464941acc71fdcbcf34bd0d7b0d8b10f",
          "md5": "cc19d8159b64414027c964d4dabb531f",
          "sha256": "a8543cafab8bcee706bcce96d9f3a2203ddb432c48e7b15afacf61e50941f174"
        },
        "downloads": -1,
        "filename": "django_compose_tags-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cc19d8159b64414027c964d4dabb531f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 9871,
        "upload_time": "2022-11-06T13:11:13",
        "upload_time_iso_8601": "2022-11-06T13:11:13.267670Z",
        "url": "https://files.pythonhosted.org/packages/e9/26/31b525d61ff1bd5ceecd7a68797a464941acc71fdcbcf34bd0d7b0d8b10f/django_compose_tags-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b6534f9dd925fe58e0896467b765c0f8817f3e3323991af5fe6693e8efa536e0",
          "md5": "ccf29911f3422cfb90919ed26f04a921",
          "sha256": "5e47a3ab612db6164ddb509b257de4c913022e102f4bf83b06f5a9c08af0338b"
        },
        "downloads": -1,
        "filename": "django-compose-tags-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ccf29911f3422cfb90919ed26f04a921",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11901,
        "upload_time": "2022-11-06T13:11:16",
        "upload_time_iso_8601": "2022-11-06T13:11:16.130188Z",
        "url": "https://files.pythonhosted.org/packages/b6/53/4f9dd925fe58e0896467b765c0f8817f3e3323991af5fe6693e8efa536e0/django-compose-tags-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e92631b525d61ff1bd5ceecd7a68797a464941acc71fdcbcf34bd0d7b0d8b10f",
        "md5": "cc19d8159b64414027c964d4dabb531f",
        "sha256": "a8543cafab8bcee706bcce96d9f3a2203ddb432c48e7b15afacf61e50941f174"
      },
      "downloads": -1,
      "filename": "django_compose_tags-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "cc19d8159b64414027c964d4dabb531f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 9871,
      "upload_time": "2022-11-06T13:11:13",
      "upload_time_iso_8601": "2022-11-06T13:11:13.267670Z",
      "url": "https://files.pythonhosted.org/packages/e9/26/31b525d61ff1bd5ceecd7a68797a464941acc71fdcbcf34bd0d7b0d8b10f/django_compose_tags-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b6534f9dd925fe58e0896467b765c0f8817f3e3323991af5fe6693e8efa536e0",
        "md5": "ccf29911f3422cfb90919ed26f04a921",
        "sha256": "5e47a3ab612db6164ddb509b257de4c913022e102f4bf83b06f5a9c08af0338b"
      },
      "downloads": -1,
      "filename": "django-compose-tags-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "ccf29911f3422cfb90919ed26f04a921",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 11901,
      "upload_time": "2022-11-06T13:11:16",
      "upload_time_iso_8601": "2022-11-06T13:11:16.130188Z",
      "url": "https://files.pythonhosted.org/packages/b6/53/4f9dd925fe58e0896467b765c0f8817f3e3323991af5fe6693e8efa536e0/django-compose-tags-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}