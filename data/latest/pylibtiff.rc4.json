{
  "info": {
    "author": "Pearu Peterson",
    "author_email": "pearu.peterson@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering",
      "Topic :: Software Development"
    ],
    "description": "\n[![Build Status](https://github.com/pearu/pylibtiff/actions/workflows/ci.yaml/badge.svg)](https://github.com/pearu/pylibtiff/actions/workflows/ci.yaml)\n\nPyLibTiff is a package that provides:\n\n* a wrapper to the [libtiff](http://www.simplesystems.org/libtiff/)\n    library to [Python](http://www.python.org) using\n    [ctypes](http://docs.python.org/library/ctypes.html).\n\n* a pure Python module for reading and writing TIFF and LSM files. The\n  images are read as `numpy.memmap` objects so that it is possible to\n  open images that otherwise would not fit to computers RAM. Both TIFF\n  strips and tiles are supported for low-level data storage.\n\nThere exists many Python packages such as\n[PIL](http://www.pythonware.com/products/pil/),\n[FreeImagePy](http://freeimagepy.sourceforge.net/) that support\nreading and writing TIFF files. The PyLibTiff project was started to\nhave an efficient and direct way to read and write TIFF files using\nthe libtiff library without the need to install any unnecessary\npackages or libraries. The pure Python module was created for reading\n\"broken\" TIFF files such as LSM files that in some places use\ndifferent interpretation of TIFF tags than what specified in the TIFF\nspecification document. The libtiff library would just fail reading\nsuch files. In addition, the pure Python module is more memory\nefficient as the arrays are returned as memory maps. Support for\ncompressed files is not implemented yet.\n\n[tifffile.py](http://www.lfd.uci.edu/~gohlke/code/tifffile.py.html) by\nChristoph Gohlke is an excellent module for reading TIFF as well as\nLSM files, it is as fast as libtiff.py by using numpy.\n\n\n# Usage example (libtiff wrapper) #\n\n```\n>>> from libtiff import TIFF\n>>> # to open a tiff file for reading:\n>>> tif = TIFF.open('filename.tif', mode='r')\n>>> # to read an image in the currect TIFF directory and return it as numpy array:\n>>> image = tif.read_image()\n>>> # to read all images in a TIFF file:\n>>> for image in tif.iter_images(): # do stuff with image\n>>> # to open a tiff file for writing:\n>>> tif = TIFF.open('filename.tif', mode='w')\n>>> # to write a image to tiff file\n>>> tif.write_image(image)\n```\n\n# Usage example (pure Python module) #\n\n```\n>>> from libtiff import TIFFfile, TIFFimage\n>>> # to open a tiff file for reading\n>>> tif = TIFFfile('filename.tif')\n>>> # to return memmaps of images and sample names (eg channel names, SamplesPerPixel>=1)\n>>> samples, sample_names = tiff.get_samples()\n>>> # to create a tiff structure from image data\n>>> tiff = TIFFimage(data, description='')\n>>> # to write tiff structure to file\n>>> tiff.write_file('filename.tif', compression='none') # or 'lzw'\n>>> del tiff # flushes data to disk\n```\n\n# Script usage examples #\n\n```\n$ libtiff.info -i result_0.tif --no-gui\nIFDEntry(tag=ImageWidth, value=512, count=1, offset=None)\nIFDEntry(tag=ImageLength, value=512, count=1, offset=None)\nIFDEntry(tag=BitsPerSample, value=32, count=1, offset=None)\nIFDEntry(tag=Compression, value=1, count=1, offset=None)\nIFDEntry(tag=PhotometricInterpretation, value=1, count=1, offset=None)\nIFDEntry(tag=StripOffsets, value=8, count=1, offset=None)\nIFDEntry(tag=Orientation, value=6, count=1, offset=None)\nIFDEntry(tag=StripByteCounts, value=1048576, count=1, offset=None)\nIFDEntry(tag=PlanarConfiguration, value=1, count=1, offset=None)\nIFDEntry(tag=SampleFormat, value=3, count=1, offset=None)\nUse --ifd to see the rest of 31 IFD entries\ndata is contiguous: False\nmemory usage is ok: True\nsample data shapes and names:\n\nwidth : 512\nlength : 512\nsamples_per_pixel : 1\nplanar_config : 1\nbits_per_sample : 32\nstrip_length : 1048576\n\n[('memmap', (32, 512, 512), dtype('float32'))] ['sample0']\n```\n\n```\n$ libtiff.info --no-gui -i psf_1024_z5_airy1_set1.lsm\nIFDEntry(tag=NewSubfileType, value=0, count=1, offset=None)\nIFDEntry(tag=ImageWidth, value=1024, count=1, offset=None)\nIFDEntry(tag=ImageLength, value=1024, count=1, offset=None)\nIFDEntry(tag=BitsPerSample, value=8, count=1, offset=None)\nIFDEntry(tag=Compression, value=1, count=1, offset=None)\nIFDEntry(tag=PhotometricInterpretation, value=1, count=1, offset=None)\nIFDEntry(tag=StripOffsets, value=97770, count=1, offset=None)\nIFDEntry(tag=SamplesPerPixel, value=1, count=1, offset=None)\nIFDEntry(tag=StripByteCounts, value=1048576, count=1, offset=None)\nIFDEntry(tag=PlanarConfiguration, value=2, count=1, offset=None)\nIFDEntry(tag=CZ_LSMInfo, value=CZ_LSMInfo276(\n  MagicNumber=[67127628], \n  StructureSize=[500], \n  DimensionX=[1024], \n  DimensionY=[1024], \n  DimensionZ=[20], \n  DimensionChannels=[1], \n  DimensionTime=[1], \n  SDataType=[1], \n  ThumbnailX=[128], \n  ThumbnailY=[128], \n  VoxelSizeX=[  2.79017865e-08], \n  VoxelSizeY=[  2.79017865e-08], \n  VoxelSizeZ=[  3.60105263e-07], \n  OriginX=[ -2.22222228e-07], \n  OriginY=[  1.90476196e-07], \n  OriginZ=[ 0.], \n  ScanType=[0], \n  SpectralScan=[0], \n  DataType=[0], \n  OffsetVectorOverlay->DrawingElement(name='OffsetVectorOverlay', size=200, offset=6560), \n  OffsetInputLut->LookupTable(name='OffsetInputLut', size=8388, subblocks=6, channels=1, offset=7560), \n  OffsetOutputLut->LookupTable(name='OffsetOutputLut', size=24836, subblocks=3, channels=3, offset=15948), \n  OffsetChannelColors->ChannelColors (names=['Ch3'], colors=[(255, 0, 0, 0)]), \n  TimeInterval=[ 0.], \n  OffsetChannelDataTypes->None, \n  OffsetScanInformation->recording[size=3535]\n   name = 'psf_1024_z5_airy1_set1'\n   description = ' '\n   notes = ' '\n   objective = 'C-Apochromat 63x/1.20 W Korr UV-VIS-IR M27'\n   special scan mode = 'FocusStep'\n   scan type = ''\n   scan mode = 'Stack'\n   number of stacks = 10\n   lines per plane = 1024\n   samples per line = 1024\n   planes per volume = 20\n   images width = 1024\n   images height = 1024\n   images number planes = 20\n   images number stacks = 1\n   images number channels = 1\n   linescan xy size = 512\n   scan direction = 0\n   scan directionz = 0\n   time series = 0\n   original scan data = 1\n   zoom x = 5.0000000000000009\n   zoom y = 5.0000000000000009\n   zoom z = 1.0\n   sample 0x = -0.22200000000000006\n   sample 0y = 0.19000000000000006\n   sample 0z = 6.8420000000000014\n   sample spacing = 0.028000000000000008\n   line spacing = 0.028000000000000008\n   plane spacing = 0.3600000000000001\n   rotation = 0.0\n   nutation = 0.0\n   precession = 0.0\n   sample 0time = 39583.598368055624\n   start scan trigger in = ''\n   start scan trigger out = ''\n   start scan event = 0\n   start scan time = 0.0\n   stop scan trigger in = ''\n   stop scan trigger out = ''\n   stop scan event = 0\n   start scan time = 0.0\n   use rois = 0\n   use reduced memory rois = 0\n   user = 'User Name'\n   usebccorrection = 0\n   positionbccorrection1 = 0.0\n   positionbccorrection2 = 0.0\n   interpolationy = 1\n   camera binning = 1\n   camera supersampling = 0\n   camera frame width = 1388\n   camera frame height = 1040\n   camera offsetx = 0.0\n   camera offsety = 0.0\n   rt binning = 1\n  ENTRY0x10000064L = 1\n   rt frame width = 512\n   rt frame height = 512\n   rt region width = 512\n   rt region height = 512\n   rt offsetx = 0.0\n   rt offsety = 0.0\n   rt zoom = 1.0000000000000004\n   rt lineperiod = 112.43300000000002\n   prescan = 0\n  lasers[size=188]\n    laser[size=80]\n       name = 'HeNe633'\n       acquire = 1\n       power = 5.0000000000000009\n    end laser\n    laser[size=84]\n       name = 'DPSS 532-75'\n       acquire = 1\n       power = 75.000000000000014\n    end laser\n  end lasers\n  tracks[size=2071]\n    track[size=2047]\n       pixel time = 1.5980000000000003\n       time between stacks = 1.0\n       multiplex type = 1\n       multiplex order = 1\n       sampling mode = 2\n       sampling method = 1\n       sampling number = 8\n       acquire = 1\n       name = 'Track'\n       collimator1 position = 16\n       collimator1 name = 'IR/Vis'\n       collimator2 position = 66\n       collimator2 name = 'UV/Vis'\n       is bleach track = 0\n       is bleach after scan number = 0\n       bleach scan number = 0\n       trigger in = ''\n       trigger out = ''\n       is ratio track = 0\n       bleach count = 0\n       spi center wavelength = 582.53000000000009\n       id condensor aperture = 'KAB1'\n       condensor aperture = 0.55000000000000016\n       id condensor revolver = 'FW2'\n       condensor filter = 'HF'\n       id tubelens = 'Tubelens'\n       id tubelens position = 'Lens LSM'\n       transmitted light = 0.0\n       reflected light = -1.0000000000000002\n      detection channels[size=695]\n        detection channel[size=671]\n           detector gain first = 700.00000000000011\n           detector gain last = 700.00000000000011\n           amplifier gain first = 1.0000000000000002\n           amplifier gain last = 1.0000000000000002\n           amplifier offs first = 0.10000000000000002\n           amplifier offs last = 0.10000000000000002\n           pinhole diameter = 144.00000000000003\n           counting trigger = 5.0\n           acquire = 1\n           integration mode = 0\n           special mode = 0\n           detector name = 'Pmt3'\n           amplifier name = 'Amplifier1'\n           pinhole name = 'PH3'\n           filter set name = 'EF3'\n           filter name = 'LP 650'\n          ENTRY0x70000011L = ''\n          ENTRY0x70000012L = ''\n           integrator name = 'Integrator3'\n           detection channel name = 'Ch3'\n           detector gain bc1 = 0.0\n           detector gain bc2 = 0.0\n           amplifier gain bc1 = 0.0\n           amplifier gain bc2 = 0.0\n           amplifier offs bc1 = 0.0\n           amplifier offs bc2 = 0.0\n           spectral scan channels = 32\n           spi wavelength start = 415.0\n           spi wavelength end = 735.0\n          ENTRY0x70000024L = 575.0\n          ENTRY0x70000025L = 575.0\n           dye name = ''\n           dye folder = ''\n          ENTRY0x70000028L = 1.0000000000000004\n          ENTRY0x70000029L = 0.0\n        end detection channel\n      end detection channels\n      beam splitters[size=330]\n        beam splitter[size=82]\n           filter set = 'HT'\n           filter = 'HFT 405/514/633'\n           name = 'HT'\n        end beam splitter\n        beam splitter[size=75]\n           filter set = 'NT1'\n           filter = 'Mirror'\n           name = 'NT1'\n        end beam splitter\n        beam splitter[size=76]\n           filter set = 'NT2'\n           filter = 'NFT 565'\n           name = 'NT2'\n        end beam splitter\n        beam splitter[size=73]\n           filter set = 'FW1'\n           filter = 'None'\n           name = 'FW1'\n        end beam splitter\n      end beam splitters\n      illumination channels[size=160]\n        illumination channel[size=136]\n           name = '633'\n           power = 0.30000000000000004\n           wavelength = 633.0\n           aquire = 1\n           power bc1 = 0.0\n           power bc2 = 0.0\n        end illumination channel\n      end illumination channels\n      data channels[size=338]\n        data channel[size=314]\n           name = 'Ch3'\n           acquire = 1\n           acquire = 0\n           color = 255\n           sampletype = 1\n           bitspersample = 8\n           ratio type = 0\n           ratio track1 = 0\n           ratio track2 = 0\n           ratio channel1 = ''\n           ratio channel2 = ''\n           ratio const1 = 0.0\n           ratio const2 = 0.0\n           ratio const3 = 1.0\n           ratio const4 = 0.0\n           ratio const5 = 0.0\n           ratio const6 = 0.0\n        end data channel\n      end data channels\n    end track\n  end tracks\n  timers[size=24]\n  end timers\n  markers[size=24]\n  end markers\nend recording, \n  OffsetKsData->OffsetData(name='OffsetKsData', size=8, offset=48590), \n  OffsetTimeStamps->TimeStamps(stamps=[ 2335.75582836]), \n  OffsetEventList->EventList(events=[]), \n  OffsetRoi->DrawingElement(name='OffsetRoi', size=200, offset=6160), \n  OffsetBleachRoi->DrawingElement(name='OffsetBleachRoi', size=200, offset=6360), \n  OffsetNextRecording->None, \n  DisplayAspectX=[ 1.], \n  DisplayAspectY=[ 1.], \n  DisplayAspectZ=[ 1.], \n  DisplayAspectTime=[ 1.], \n  OffsetMeanOfRoisOverlay->DrawingElement(name='OffsetMeanOfRoisOverlay', size=200, offset=6760), \n  OffsetTopoIsolineOverlay->DrawingElement(name='OffsetTopoIsolineOverlay', size=200, offset=7160), \n  OffsetTopoProfileOverlay->DrawingElement(name='OffsetTopoProfileOverlay', size=200, offset=7360), \n  OffsetLinescanOverlay->DrawingElement(name='OffsetLinescanOverlay', size=200, offset=6960), \n  ToolbarFlags=[0], \n  OffsetChannelWavelength->ChannelWavelength (ranges=[(-1.0, -1.0)]), \n  OffsetChannelFactors->ChannelFactors(size=36, offset=40836), \n  ObjectiveSphereCorrection=[ 0.], \n  OffsetUnmixParameters->OffsetData(name='OffsetUnmixParameters', size=124, offset=48466), \n  Reserved=[[40896 44726     0     0     0     0     0     0     0     0     0     0\n      0     0     0     0     0     0     0     0     0     0     0     0\n      0     0     0     0     0     0     0     0     0     0     0     0\n      0     0     0     0     0     0     0     0     0     0     0     0\n      0     0     0     0     0     0     0     0     0     0     0     0\n      0     0     0     0     0     0     0     0     0]]))\nUse --ifd to see the rest of 39 IFD entries\ndata is contiguous: False\nmemory usage is ok: True\nsample data shapes and names:\n\nwidth : 1024\nlength : 1024\nsamples_per_pixel : 1\nplanar_config : 2\nbits_per_sample : 8\nstrip_length : 1048576\n\n[('memmap', (20, 1024, 1024), dtype('uint8'))] ['Ch3']\n[((20, 128, 128), dtype('uint8')), ((20, 128, 128), dtype('uint8')), ((20, 128, 128), dtype('uint8'))] ['red', 'green', 'blue']\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pearu/pylibtiff",
    "keywords": "",
    "license": "https://github.com/pearu/pylibtiff/blob/master/LICENSE",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pylibtiff",
    "package_url": "https://pypi.org/project/pylibtiff/",
    "platform": null,
    "project_url": "https://pypi.org/project/pylibtiff/",
    "project_urls": {
      "Homepage": "https://github.com/pearu/pylibtiff"
    },
    "release_url": "https://pypi.org/project/pylibtiff/0.5.1/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "PyLibTiff: a Python tiff library.",
    "version": "0.5.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16251357,
  "releases": {
    "0.4.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3ebd95bbb2df650460b8886abcb51339e22d17a2f1f0e77f6502820463e9ced1",
          "md5": "32b55d9f97b80668f18e88333ea79dfb",
          "sha256": "0b72ef22a5c301c268d7f5729822038d3a04daeef7464c5e3fd6aea3f4dfe64f"
        },
        "downloads": -1,
        "filename": "pylibtiff-0.4.4.tar.gz",
        "has_sig": false,
        "md5_digest": "32b55d9f97b80668f18e88333ea79dfb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 119740,
        "upload_time": "2021-10-03T18:46:57",
        "upload_time_iso_8601": "2021-10-03T18:46:57.673557Z",
        "url": "https://files.pythonhosted.org/packages/3e/bd/95bbb2df650460b8886abcb51339e22d17a2f1f0e77f6502820463e9ced1/pylibtiff-0.4.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "47df28aa382620ae6cfc2f3edef51431f36be5b70e6a80949f52f9559689ff61",
          "md5": "084fde587f459b040f43b103717f3bcd",
          "sha256": "8364f8c31b54d25ada2cebe94be077e5330a3b598b00b79f37b25d9cd8b518ba"
        },
        "downloads": -1,
        "filename": "pylibtiff-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "084fde587f459b040f43b103717f3bcd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 96451,
        "upload_time": "2022-12-13T03:38:22",
        "upload_time_iso_8601": "2022-12-13T03:38:22.838166Z",
        "url": "https://files.pythonhosted.org/packages/47/df/28aa382620ae6cfc2f3edef51431f36be5b70e6a80949f52f9559689ff61/pylibtiff-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0.post0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fb06ab5d79b26f5f890632f5cb686a391be6439b8607e7f3bdf949d98fdbe02a",
          "md5": "8606cf3b0dc2f0127ddc2305c415609e",
          "sha256": "82bee948f885966af2d8f26ca5350bc33bc4f5635c1cd28bc604ca2b82e36ea9"
        },
        "downloads": -1,
        "filename": "pylibtiff-0.5.0.post0.tar.gz",
        "has_sig": false,
        "md5_digest": "8606cf3b0dc2f0127ddc2305c415609e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 96778,
        "upload_time": "2022-12-13T12:43:33",
        "upload_time_iso_8601": "2022-12-13T12:43:33.749559Z",
        "url": "https://files.pythonhosted.org/packages/fb/06/ab5d79b26f5f890632f5cb686a391be6439b8607e7f3bdf949d98fdbe02a/pylibtiff-0.5.0.post0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a86954ba239f08f527b2a8535239bb764596b089d11c364e0b12e14183ff9b4",
          "md5": "bfd4883c8d6cc2235a1a11d3dddabd47",
          "sha256": "52d3e00edbb7aecddabeeb4dff76a6c974b7c90a51a7963ddcefee67453633c4"
        },
        "downloads": -1,
        "filename": "pylibtiff-0.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "bfd4883c8d6cc2235a1a11d3dddabd47",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 98307,
        "upload_time": "2022-12-29T19:21:20",
        "upload_time_iso_8601": "2022-12-29T19:21:20.020535Z",
        "url": "https://files.pythonhosted.org/packages/9a/86/954ba239f08f527b2a8535239bb764596b089d11c364e0b12e14183ff9b4/pylibtiff-0.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9a86954ba239f08f527b2a8535239bb764596b089d11c364e0b12e14183ff9b4",
        "md5": "bfd4883c8d6cc2235a1a11d3dddabd47",
        "sha256": "52d3e00edbb7aecddabeeb4dff76a6c974b7c90a51a7963ddcefee67453633c4"
      },
      "downloads": -1,
      "filename": "pylibtiff-0.5.1.tar.gz",
      "has_sig": false,
      "md5_digest": "bfd4883c8d6cc2235a1a11d3dddabd47",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 98307,
      "upload_time": "2022-12-29T19:21:20",
      "upload_time_iso_8601": "2022-12-29T19:21:20.020535Z",
      "url": "https://files.pythonhosted.org/packages/9a/86/954ba239f08f527b2a8535239bb764596b089d11c364e0b12e14183ff9b4/pylibtiff-0.5.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}