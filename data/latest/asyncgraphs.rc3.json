{
  "info": {
    "author": "",
    "author_email": "Sam Vermeulen <sam.verm@yahoo.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Typing :: Typed"
    ],
    "description": "# AsyncGraphs\n\nAsyncGraphs is a tiny ETL framework that leverages asyncio to make the execution more efficient.\n\n\n## Installation\n\n```commandline\npip install asyncgraphs\n```\n\n## Basic usage\n\n```python\nimport asyncio\nimport datetime\nfrom random import random\n\nimport pytz\nfrom asyncgraphs import Graph, run\n\n\nasync def my_extract():\n    while True:\n        await asyncio.sleep(1)\n        yield {\"timestamp\": datetime.datetime.now(tz=pytz.UTC), \"value\": random()}\n\n\ndef my_transform(in_doc):\n    if in_doc[\"value\"] < 0.5:\n        in_doc[\"value\"] = None\n    return in_doc\n\n\nclass MyForwardFill:\n    def __init__(self):\n        self.last_value = None\n\n    def __call__(self, in_doc):\n        if in_doc[\"value\"] is None:\n            in_doc[\"value\"] = self.last_value\n        else:\n            self.last_value = in_doc[\"value\"]\n        return in_doc\n\n\nasync def main():\n    g = Graph()\n    g | my_extract() | my_transform | MyForwardFill() | print\n    await run(g)\n\nif __name__ == '__main__':\n    asyncio.run(main())\n```\n\nThe example above shows some dummy extract/transform/load steps.\nIn the example most are synchronous, but regular applications should use async libraries as often as possible.\n\n\n## Features\n\n### Typed\n\nThis library is typed. Checking the types of chained operations is also supported.\n\nIn the following example, the source outputs strings. \nAdding a transformer that expects an integer is thus not supported\n\nThis is indicated when using a type checker.\n\n```python\n# tests/test_examples/typed.py\n\nimport asyncio\nimport random\nimport string\nfrom typing import AsyncGenerator\n\nfrom asyncgraphs import Graph, run\n\ngraph = Graph()\n\n\nasync def random_strings(\n    value_count: int, character_count: int\n) -> AsyncGenerator[str, None]:\n    for i in range(value_count):\n        yield \"\".join(\n            random.choice(string.ascii_lowercase) for _ in range(character_count)\n        )\n        await asyncio.sleep(0)\n\n\ndef add_one(value: int) -> int:\n    return value + 1\n\n\ndef prefix_hello(value: str) -> str:\n    return f\"Hello {value}\"\n\n\nasync def main() -> None:\n    g = Graph()\n    g | random_strings(20, 5) \\\n      | add_one \\\n      | print\n    await run(g)\n\n    g = Graph()\n    g | random_strings(20, 5) \\\n      | prefix_hello \\\n      | print\n    await run(g)\n\n\nif __name__ == \"__main__\":\n    asyncio.run(main())\n```\n\n```commandline\n$ mypy tests/test_examples/typed.py\ntests/test_examples/typed.py:32: error: Unsupported operand types for | (\"Source[str]\" and \"Callable[[int], int]\")  [operator]\nFound 1 error in 1 file (checked 1 source file)\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "asyncgraphs",
    "package_url": "https://pypi.org/project/asyncgraphs/",
    "platform": null,
    "project_url": "https://pypi.org/project/asyncgraphs/",
    "project_urls": {
      "Source": "https://github.com/SamVermeulen42/asyncgraphs"
    },
    "release_url": "https://pypi.org/project/asyncgraphs/0.0.3/",
    "requires_dist": [
      "sentinel<1.1.0,>=1.0.0",
      "black==23.1.0; extra == 'dev'",
      "coverage<8.0,>=7.1.0; extra == 'dev'",
      "isort==5.12.0; extra == 'dev'",
      "mypy==1.0.1; extra == 'dev'",
      "pytest-asyncio<0.21.0,>=0.20.0; extra == 'dev'",
      "pytest<8.0.0,>=7.2.1; extra == 'dev'",
      "ruff==0.0.247; extra == 'dev'",
      "mkdocs-material<10.0.0,>=9.0.15; extra == 'docs'",
      "mkdocs<2.0.0,>=1.4.2; extra == 'docs'"
    ],
    "requires_python": ">=3.10",
    "summary": "",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17100741,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d8429cbd9d6fefc0a49085f9b56467ac5533e9dcd0a677a3655fd2d229c86c0c",
          "md5": "d9b1c541f7f0ed6663e9171da006c0fd",
          "sha256": "1c6ee30eda89e34f67ce229248da32ec6bbc05049ab48245644ab4526fd97a86"
        },
        "downloads": -1,
        "filename": "asyncgraphs-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d9b1c541f7f0ed6663e9171da006c0fd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 3907,
        "upload_time": "2023-02-25T15:52:29",
        "upload_time_iso_8601": "2023-02-25T15:52:29.143539Z",
        "url": "https://files.pythonhosted.org/packages/d8/42/9cbd9d6fefc0a49085f9b56467ac5533e9dcd0a677a3655fd2d229c86c0c/asyncgraphs-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d8068de5bc6389df049a630a3e7aa64ffa9a1931d68ecec4ddcb8ca851cd9034",
          "md5": "0361c2db058c4b44a058f4d93c029202",
          "sha256": "1978fdb960020d63865734e86ff652f72f15d47ac6be2795d906621fa0222fbf"
        },
        "downloads": -1,
        "filename": "asyncgraphs-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0361c2db058c4b44a058f4d93c029202",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 4962,
        "upload_time": "2023-02-25T15:52:30",
        "upload_time_iso_8601": "2023-02-25T15:52:30.755012Z",
        "url": "https://files.pythonhosted.org/packages/d8/06/8de5bc6389df049a630a3e7aa64ffa9a1931d68ecec4ddcb8ca851cd9034/asyncgraphs-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f3ff0a2934210311319edd9af101e0c9a1790ccbc2db55faa76a6e84c27e0c71",
          "md5": "7f3220c6b2739412d533e8c353f43156",
          "sha256": "1d35cd1c6279bf0ad2f1262471abebb407c4223d1ade8fe4660a03ba5ea2f728"
        },
        "downloads": -1,
        "filename": "asyncgraphs-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7f3220c6b2739412d533e8c353f43156",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 4430,
        "upload_time": "2023-02-25T21:50:27",
        "upload_time_iso_8601": "2023-02-25T21:50:27.564027Z",
        "url": "https://files.pythonhosted.org/packages/f3/ff/0a2934210311319edd9af101e0c9a1790ccbc2db55faa76a6e84c27e0c71/asyncgraphs-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5bd9930a3942176f1b7c5a0c93a62546d55fff542c24d52e079d603529bfd392",
          "md5": "1adce5caeb0d1d6c2664be6cbb8134f3",
          "sha256": "16b18e035079db219e028ddc41726e33c376eca5a17081a4c04568d0a576d32c"
        },
        "downloads": -1,
        "filename": "asyncgraphs-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "1adce5caeb0d1d6c2664be6cbb8134f3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 5431,
        "upload_time": "2023-02-25T21:50:29",
        "upload_time_iso_8601": "2023-02-25T21:50:29.154131Z",
        "url": "https://files.pythonhosted.org/packages/5b/d9/930a3942176f1b7c5a0c93a62546d55fff542c24d52e079d603529bfd392/asyncgraphs-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b018bb08601220b8ad789a2ba16c89ed7488793ec0aee4e1a0e59a1bf1b27bf",
          "md5": "be6ab657d70923df6757639874b08def",
          "sha256": "f101ebc5d365f99a33f44ac115c74429c67a41da2504c5638b5e6cd802057187"
        },
        "downloads": -1,
        "filename": "asyncgraphs-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "be6ab657d70923df6757639874b08def",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 5140,
        "upload_time": "2023-02-28T20:02:39",
        "upload_time_iso_8601": "2023-02-28T20:02:39.885452Z",
        "url": "https://files.pythonhosted.org/packages/8b/01/8bb08601220b8ad789a2ba16c89ed7488793ec0aee4e1a0e59a1bf1b27bf/asyncgraphs-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "adb15efd905e1cb4e53f3584003400fae5bcb0bd20cb633efe516805536615aa",
          "md5": "ad7f650a0b2d590f5064c290fa21cf32",
          "sha256": "ed82eb09e08417c2a61a46b83c9ee055bca739edbe648473919f76c097f0909d"
        },
        "downloads": -1,
        "filename": "asyncgraphs-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "ad7f650a0b2d590f5064c290fa21cf32",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 7278,
        "upload_time": "2023-02-28T20:02:41",
        "upload_time_iso_8601": "2023-02-28T20:02:41.488144Z",
        "url": "https://files.pythonhosted.org/packages/ad/b1/5efd905e1cb4e53f3584003400fae5bcb0bd20cb633efe516805536615aa/asyncgraphs-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8b018bb08601220b8ad789a2ba16c89ed7488793ec0aee4e1a0e59a1bf1b27bf",
        "md5": "be6ab657d70923df6757639874b08def",
        "sha256": "f101ebc5d365f99a33f44ac115c74429c67a41da2504c5638b5e6cd802057187"
      },
      "downloads": -1,
      "filename": "asyncgraphs-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "be6ab657d70923df6757639874b08def",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10",
      "size": 5140,
      "upload_time": "2023-02-28T20:02:39",
      "upload_time_iso_8601": "2023-02-28T20:02:39.885452Z",
      "url": "https://files.pythonhosted.org/packages/8b/01/8bb08601220b8ad789a2ba16c89ed7488793ec0aee4e1a0e59a1bf1b27bf/asyncgraphs-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "adb15efd905e1cb4e53f3584003400fae5bcb0bd20cb633efe516805536615aa",
        "md5": "ad7f650a0b2d590f5064c290fa21cf32",
        "sha256": "ed82eb09e08417c2a61a46b83c9ee055bca739edbe648473919f76c097f0909d"
      },
      "downloads": -1,
      "filename": "asyncgraphs-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "ad7f650a0b2d590f5064c290fa21cf32",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10",
      "size": 7278,
      "upload_time": "2023-02-28T20:02:41",
      "upload_time_iso_8601": "2023-02-28T20:02:41.488144Z",
      "url": "https://files.pythonhosted.org/packages/ad/b1/5efd905e1cb4e53f3584003400fae5bcb0bd20cb633efe516805536615aa/asyncgraphs-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}