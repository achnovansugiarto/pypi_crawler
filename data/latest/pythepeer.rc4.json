{
  "info": {
    "author": "Osagie Iyayi",
    "author_email": "iyayiemmanuel1@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Build Tools",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# Thepeer python-sdk\n\n![example workflow](https://github.com/thepeerstack/python-sdk/actions/workflows/pytests.yml/badge.svg) ![PyPI - Downloads](https://img.shields.io/pypi/dm/pythepeer?style=flat-square) ![PyPI - License](https://img.shields.io/pypi/l/pythepeer) ![PyPI](https://img.shields.io/pypi/v/pythepeer) ![Codecov](https://img.shields.io/codecov/c/gh/E-wave112/py-thepeer?token=gYijsI9TCm)\n\n> Thepeer's official python sdk for developers to use in their python projects.\n\n- To start using this sdk, create an account at https://thepeer.co/ if you haven't already.\n- You can then retrieve your API keys from your [dashboard](https://dashboard.thepeer.co/)\n\n## Installation\nTo install this sdk, run the command:\n```bash\npip install pythepeer\n```\n\n## Usage\nInstantiate ```Thepeer``` class like so:\n```python\nimport thepeer\nfrom thepeer import Thepeer\n\n# create an instance of ThepeerInit class\n\nthepeer_instance = Thepeer(\"YOUR_API_KEY_HERE\")\n\n```\n\n## Available methods exposed by the sdk\n\n**Note:**\n - For more info about the exposed methods, please refer to the general [documentation](https://docs.thepeer.co/)\n - Be sure to keep your API Credentials securely in [environment variables](https://www.twilio.com/blog/environment-variables-python)\n### Indexing a user\nThis describes how to index a user on your account (this is usually the first step before using other methods)\n\n```python\ntest = thepeer_instance.index_user(\"Osagie Iyayi\", \"iyayiemmanuel1@gmail.com\", \"iyayiemmanuel1@gmail.com\")\n```\n\n#### Parameters supported\n\n| Parameters           | Data type                 | Required | Description                                                                                                                                                                                                                                         |\n|----------------------|---------------------------|----------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| ```name```        | ```string```                   | ```true```     | ```The name of user to be indexed```.\n| ```identifier```            | ```string```                   |  ```true```    | ```the identifier of the account(either email or username).```\n| ```email```        | ```string```                   | ```true```     | ```the email of the user```                                                                        |\n\n### Validating a HMAC signature\nThis method validates incoming an [hmac](https://www.okta.com/identity-101/hmac/) signature with the payload and credentials that was passed with it\n\n**Pro Tip:** it is used to verify that an incoming webhook event/response is coming from thepeer's servers\n\n```python\ntest = thepeer_instance.validate_signature(data,signature)\n```\n#### Parameters supported\n\n| Parameters           | Data type                 | Required | Description                                                                                                                                                                                                                                         |\n|----------------------|---------------------------|----------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| ```data```           | ```dictionary```                  |  ```true```    | ```the payload containing the data to be authenticated```\n|  ```signature```       | ```string```                   | ```true```     | ```The HMAC signature```                                                                        |\n\n### Get an indexed user\nThis method gets the information of an indexed user\n\n```python\ntest = thepeer_instance.view_user(\"3bbb0fbf-82fa-48a0-80eb-d2c0338fe7dd\")\n```\n\n#### Parameters supported\n\n\n| Parameters           | Data type                 | Required | Description                                                                                                                                                                                                                                         |\n|----------------------|---------------------------|----------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| ```reference```            | ```string```                  |  ```true```    | ```the unique reference returned when the user was indexed```\n\n### Get all indexed users\nThis method returns all indexed users for a specific account\n\n```python\ntest = thepeer_instance.all_users(1,15)\n```\n\n#### Parameters supported\n\n| Parameters           | Data type                 | Required | Description                                                                                                                                                                                                                                         |\n|----------------------|---------------------------|----------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| ```page```            | ```integer```               |  ```false```    | ```the first page displaying all the indexed users. defaults to 1```\n|  ```per_page```      | ```integer```                  | ```false```     | ```The number of users to display per page. defaults to 15          ```                                                          |\n\n\n### Update an indexed user\nThis methods helps to update the details of an indexed user\n\n```python\ntest = thepeer_instance.update_user(reference,**data)\n```\n#### Parameters supported\n\n| Parameters           | Data type                 | Required | Description                                                                                                                                                                                                                                         |\n|----------------------|---------------------------|----------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| ```reference```            | ```string```               |  ```true```    | ```the unique reference returned when the user was indexed```\n|  ```data```      | ```Any```                  | ```true```    | ```A keyword argument which contains on or more of the indexed user's email, name or identifier```                                                                   |\n\n### Sample\n```python\ntest = thepeer_instance.update_user(\"3bbb0fbf-82fa-48a0-80eb-d2c0338fe7dd\", identifier=\"dwave101@yahoo.com\",\n    name=\"Edmond Kirsch\",\n    email=\"dwave101@gmail.com\")\n```\n### Remove an indexed user\nThis methods helps to remove the details of an indexed user from a specific account\n\n```python\ntest = thepeer_instance.delete_user(\"3bbb0fbf-82fa-48a0-80eb-d2c0338fe7dd\")\n```\n\n#### Parameters supported\n\n| Parameters           | Data type                 | Required | Description                                                                                                                                                                                                                                         |\n|----------------------|---------------------------|----------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| ```reference```            | ```string```                  |  ```true```    | ```the unique reference returned when the user was indexed```\n\n### Get user links\n\nThis method gets all payment links associated to an indexed user\n```python\ntest = thepeer_instance.get_user_links(\"3bbb0fbf-82fa-48a0-80eb-d2c0338fe7dd\")\n```\n#### Parameters required\n\n| Parameters           | Data type                 | Required | Description                                                                                                                                                                                                                                         |\n|----------------------|---------------------------|----------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| ```reference```            | ```string```                  |  ```true```    | ```the unique reference returned when the user was indexed```\n\n\n### Get single link\n\nThis method gets the payment information located in a payment link\n\n```python\ntest = thepeer_instance.get_single_link(\"da14a90c-61c2-4cf7-a837-e3112a2d0c3d\")\n```\n\n#### Parameters required\n\n| Parameters           | Data type                 | Required | Description                                                                                                                                                                                                                                         |\n|----------------------|---------------------------|----------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| ```link_id```           | ```string```                  |  ```true```    | ```the unique link_id containing the payment information```\n\n\n### Charge a link\nThis method allows a business to charge a user via their linked account\n```python\ntest = thepeer_instance.charge_link(link_id, amount, remark, currency)\n```\n\n#### Parameters required\n\n| Parameters           | Data type                 | Required | Description                                                                                                                                                                                                                                         |\n|----------------------|---------------------------|----------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| ```link_id```        | ```string```                   | ```true```     | ```the unique link_id containing the payment information```\n| ```amount```            | ```integer```               |  ```true```    | ```the amount of the whole transaction```\n| ```remark```        | ```string```                   | ```true```     | ```short detail about the transaction```                                                                     |\n| ```currency```               | ```string```                    | ```false```    | ```The denomination medium of paying (either one of NGN and USD). defaults to NGN```\n\n### Authorize charge\nThis method allows a business to authorize a direct charge request made by a user\n\n```python\ntest = thepeer_instance.authorize_charge(charge_reference, event)\n```\n#### Parameters required\n\n| Parameters           | Data type                 | Required | Description                                                                                                                                                                                                                                         |\n|----------------------|---------------------------|----------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| ```charge_reference```            | ```string```          |  ```true```   | ```the reference associated to a pending charge request```\n|  ```event```     | ```string```                | ```true```     | ```the type of webhook event```                                              |\n\n**Pro Tip:** the various types of webhook events are available [here](https://docs.thepeer.co/authorization/process-authorization-requests#supported-events)\n\n\n### Get transaction detail\nThis method gets the details of a transaction\n```python\ntest = thepeer_instance.get_transaction_detail(\"eda58ee3-4f2c-4aa4-9da7-10a2b8ced453\")\n```\n\n#### Parameters required\n\n| Parameters           | Data type                 | Required | Description                                                                                                                                                                                                                                         |\n|----------------------|---------------------------|----------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| ```transaction_id```           | ```string```                  |  ```true```    | ```the unique transaction identifier```\n\n### Refund transaction\nThis method allows a business to refund a transaction back to the user for obvious reasons\n```python\ntest = thepeer_instance.refund_transaction(\"28e52edf-16d9-4921-8a54-ef34d7029707\", \"possible threat actor\"):\n```\n\n#### Parameters required\n| Parameters           | Data type                 | Required | Description                                                                                                                                                                                                                                         |\n|----------------------|---------------------------|----------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| ```transaction_id```            | ```string```          |  ```true```   | ```the unique transaction identifier```\n|  ```reason```     | ```string```                | ```false```    | ```a short sentence explaining reasons for the refund```                                              |\n\n\n\n <!-- ## License\nThis project is MIT Licensed (MIT). Please see the [License File](https://github.com/thepeerstack/python-sdk/blob/main/LICENSE) for more information. -->\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/thepeerstack/python-sdk",
    "keywords": "python,fintech,peer-to-peer",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pythepeer",
    "package_url": "https://pypi.org/project/pythepeer/",
    "platform": null,
    "project_url": "https://pypi.org/project/pythepeer/",
    "project_urls": {
      "Homepage": "https://github.com/thepeerstack/python-sdk"
    },
    "release_url": "https://pypi.org/project/pythepeer/0.0.4/",
    "requires_dist": [
      "httpx"
    ],
    "requires_python": "",
    "summary": "official python sdk for interacting with thepeer payment processing     infrastructure",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14500053,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4cb6128a044db161df054bea58c7a2de5b71166141ea3e8fa84c2bd4d26f541f",
          "md5": "fd3f63c79c22928255a980525012696f",
          "sha256": "1bb73d1d57a9ae7a4c58582ff3d17f66f24dfcfdefe0c0a18431d1f59cb505c8"
        },
        "downloads": -1,
        "filename": "pythepeer-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fd3f63c79c22928255a980525012696f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12902,
        "upload_time": "2022-05-18T21:21:02",
        "upload_time_iso_8601": "2022-05-18T21:21:02.846194Z",
        "url": "https://files.pythonhosted.org/packages/4c/b6/128a044db161df054bea58c7a2de5b71166141ea3e8fa84c2bd4d26f541f/pythepeer-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e78083a3f7d8d9c85d2605e8a875d5b11460855d9e81825c4836f41c43eafa41",
          "md5": "3854ea7e9031ad5c954dbed7ee19ba59",
          "sha256": "0d3b56ffec1f391356b6fa17b53cb589c398ac8c2524f417f4452b94b4858814"
        },
        "downloads": -1,
        "filename": "pythepeer-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3854ea7e9031ad5c954dbed7ee19ba59",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11148,
        "upload_time": "2022-05-18T21:21:08",
        "upload_time_iso_8601": "2022-05-18T21:21:08.363359Z",
        "url": "https://files.pythonhosted.org/packages/e7/80/83a3f7d8d9c85d2605e8a875d5b11460855d9e81825c4836f41c43eafa41/pythepeer-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f11547be7431b7bb548634bb6cdc4ddd7add882df7d5919d5a74ba0e5920931",
          "md5": "ba8df18c85f76d85acdc7909bbc5dee0",
          "sha256": "33b723df4d537fc10b46198e8318b7f9477952c3841267a8c22b51e253e469cb"
        },
        "downloads": -1,
        "filename": "pythepeer-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ba8df18c85f76d85acdc7909bbc5dee0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12023,
        "upload_time": "2022-05-26T23:26:06",
        "upload_time_iso_8601": "2022-05-26T23:26:06.323128Z",
        "url": "https://files.pythonhosted.org/packages/2f/11/547be7431b7bb548634bb6cdc4ddd7add882df7d5919d5a74ba0e5920931/pythepeer-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "907756dfbddef9419eb1b0f239834b945d8d064b66ae3425bcb6fd5c7929b93e",
          "md5": "989fc10764382d0a3dc18f5c4b98d82a",
          "sha256": "cee7bc522a92c177170abf2a1891642b1b3c044dbffa29d442b9f726905eafec"
        },
        "downloads": -1,
        "filename": "pythepeer-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "989fc10764382d0a3dc18f5c4b98d82a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10476,
        "upload_time": "2022-05-26T23:26:08",
        "upload_time_iso_8601": "2022-05-26T23:26:08.851585Z",
        "url": "https://files.pythonhosted.org/packages/90/77/56dfbddef9419eb1b0f239834b945d8d064b66ae3425bcb6fd5c7929b93e/pythepeer-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d6ef1d9c714d0dfede3294281b961ebe86291d135ee1fc55b53a2f079f741e8a",
          "md5": "72979de8a5b784dbce594009db972801",
          "sha256": "47ae4981b4ee91b5e6d02f9418d96a1553736efa65adb0d4b564d9f3eb730139"
        },
        "downloads": -1,
        "filename": "pythepeer-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "72979de8a5b784dbce594009db972801",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12028,
        "upload_time": "2022-06-22T14:45:48",
        "upload_time_iso_8601": "2022-06-22T14:45:48.915936Z",
        "url": "https://files.pythonhosted.org/packages/d6/ef/1d9c714d0dfede3294281b961ebe86291d135ee1fc55b53a2f079f741e8a/pythepeer-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "219dcbe46c2f4e6a71eb269dcf20b42cf0e74c3589513c598ad54d9958dfc251",
          "md5": "be1020a53c8a5fc62e209e73fcb3439f",
          "sha256": "9f881b1a21e15c5c2125b187e7f5eac94d00a7a6c6ad0f17cf6b89ecd0b0b0ee"
        },
        "downloads": -1,
        "filename": "pythepeer-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "be1020a53c8a5fc62e209e73fcb3439f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10475,
        "upload_time": "2022-06-22T14:45:58",
        "upload_time_iso_8601": "2022-06-22T14:45:58.281693Z",
        "url": "https://files.pythonhosted.org/packages/21/9d/cbe46c2f4e6a71eb269dcf20b42cf0e74c3589513c598ad54d9958dfc251/pythepeer-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e5ba574e6b07342e11a944e9dbef55d43ac2be74237407e2bbe47870e73c3e19",
          "md5": "4dcc57353b6ddbf133ed3faa2ceacbb7",
          "sha256": "6a6717d8a409a532e8d659c25ce0e188bce44a194f15d73aafeddf1bfe88af4d"
        },
        "downloads": -1,
        "filename": "pythepeer-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4dcc57353b6ddbf133ed3faa2ceacbb7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10823,
        "upload_time": "2022-07-20T23:47:49",
        "upload_time_iso_8601": "2022-07-20T23:47:49.355798Z",
        "url": "https://files.pythonhosted.org/packages/e5/ba/574e6b07342e11a944e9dbef55d43ac2be74237407e2bbe47870e73c3e19/pythepeer-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "260e4429b16bae2b67aa0941a2900938cbea34df44c16114f8bee8c314ec2afd",
          "md5": "acf5a9ae9a8b32e289ec88ad03d4ece5",
          "sha256": "4e0958c86642587449020af59f6c10a72478d75dacae3cdf28ef30336721de88"
        },
        "downloads": -1,
        "filename": "pythepeer-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "acf5a9ae9a8b32e289ec88ad03d4ece5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9610,
        "upload_time": "2022-07-20T23:47:51",
        "upload_time_iso_8601": "2022-07-20T23:47:51.437739Z",
        "url": "https://files.pythonhosted.org/packages/26/0e/4429b16bae2b67aa0941a2900938cbea34df44c16114f8bee8c314ec2afd/pythepeer-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e5ba574e6b07342e11a944e9dbef55d43ac2be74237407e2bbe47870e73c3e19",
        "md5": "4dcc57353b6ddbf133ed3faa2ceacbb7",
        "sha256": "6a6717d8a409a532e8d659c25ce0e188bce44a194f15d73aafeddf1bfe88af4d"
      },
      "downloads": -1,
      "filename": "pythepeer-0.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4dcc57353b6ddbf133ed3faa2ceacbb7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 10823,
      "upload_time": "2022-07-20T23:47:49",
      "upload_time_iso_8601": "2022-07-20T23:47:49.355798Z",
      "url": "https://files.pythonhosted.org/packages/e5/ba/574e6b07342e11a944e9dbef55d43ac2be74237407e2bbe47870e73c3e19/pythepeer-0.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "260e4429b16bae2b67aa0941a2900938cbea34df44c16114f8bee8c314ec2afd",
        "md5": "acf5a9ae9a8b32e289ec88ad03d4ece5",
        "sha256": "4e0958c86642587449020af59f6c10a72478d75dacae3cdf28ef30336721de88"
      },
      "downloads": -1,
      "filename": "pythepeer-0.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "acf5a9ae9a8b32e289ec88ad03d4ece5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9610,
      "upload_time": "2022-07-20T23:47:51",
      "upload_time_iso_8601": "2022-07-20T23:47:51.437739Z",
      "url": "https://files.pythonhosted.org/packages/26/0e/4429b16bae2b67aa0941a2900938cbea34df44c16114f8bee8c314ec2afd/pythepeer-0.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}