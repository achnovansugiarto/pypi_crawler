{
  "info": {
    "author": "Renato Alves",
    "author_email": "alves.rjc@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Interface Engine/Protocol Translator",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Software Development :: Testing"
    ],
    "description": "\nSimpleTAP\n=========\n\n``simpletap`` is a test runner that integrates with the unittest framework to\nproduce `TAP (Test Anything Protocol) <https://en.wikipedia.org/wiki/Test_Anything_Protocol>`__ compatible output.\n\n.. image:: https://github.com/unode/simpletap/actions/workflows/main.yml/badge.svg\n    :target: https://github.com/unode/simpletap/actions/\n\nUsage\n-----\n\nIn your test scripts, instead of:\n\n.. code:: python\n\n    if __name__ == \"__main__\":\n        unittest.main()\n\nuse:\n\n.. code:: python\n\n    if __name__ == \"__main__\":\n        from simpletap import TAPTestRunner\n        unittest.main(testRunner=TAPTestRunner(buffer=True))\n\n\nA small test case like:\n\n.. code:: python\n\n    import unittest\n\n    class IntegerArithmeticTestCase(unittest.TestCase):\n        def testAdd(self):  # test method names begin 'test*'\n            \"test adding values\"\n            self.assertEqual((1 + 2), 3)\n            self.assertEqual(0 + 1, 1)\n\n        def testMultiply(self):\n            \"test multiplying values\"\n            self.assertEqual((0 * 10), 0)\n            self.assertEqual((5 * 8), 40)\n\n        def testFail(self):\n            \"a failing test\"\n            self.assertEqual(0, 1)\n\n        @unittest.expectedFailure\n        def testExpectFail(self):\n            \"we saw this coming\"\n            self.assertEqual(0, 1)\n\n        @unittest.expectedFailure\n        def testUnexpectFail(self):\n            \"someone fixed it already\"\n            self.assertEqual(0, 0)\n\n        @unittest.skipIf(True, \"Skipping this one\")\n        def testSkip(self):\n            \"pending a fix\"\n            self.assertEqual(0, 1)\n\n        def testError(self):\n            \"oops something went wrong\"\n            no_such_variable + 1  # Oops!\n\n    if __name__ == \"__main__\":\n        from simpletap import TAPTestRunner\n        unittest.main(testRunner=TAPTestRunner(buffer=True))\n\nWhen saved in a file called ``test.py`` and executed would produce:\n\n.. code:: TAP\n\n    1..7\n    ok 1 - test.py: test adding values\n    not ok 2 - test.py: oops something went wrong\n    # ERROR: NameError on file test.py line 38 in testError: 'no_such_variable + 1  # Oops!':\n    #        name 'no_such_variable' is not defined\n    ok 3 - test.py: we saw this coming # TODO\n    # EXPECTED_FAILURE: AssertionError on file test.py line 24 in testExpectFail: 'self.assertEqual(0, 1)':\n    #                   0 != 1\n    not ok 4 - test.py: a failing test\n    # FAIL: AssertionError on file test.py line 19 in testFail: 'self.assertEqual(0, 1)':\n    #       0 != 1\n    ok 5 - test.py: test multiplying values\n    ok 6 - test.py: pending a fix # skip\n    # SKIP:\n    #       Skipping this one\n    not ok 7 - test.py: someone fixed it already # FIXED\n    # UNEXPECTED_SUCCESS:\n    #                     testUnexpectFail (__main__.IntegerArithmeticTestCase)\n\nYou can also launch ``simpletap`` directly from the command line in much the same way you do with unittest:\n\n.. code::\n\n    python -m simpletap test.IntegerArithmeticTestCase\n\nTesting\n-------\n\nThe test suite is configured to run via `tox <http://tox.readthedocs.io/>`__.\n\n\nProjects\n--------\n\n``simpletap`` is currently being used by:\n\n- `taskwarrior <https://github.com/taskwarrior/task/>`__\n- `firefox_decrypt <https://github.com/unode/firefox_decrypt/>`__\n\n\nChangelog\n---------\n\n2.0.0\n^^^^^\n\n- `skip` keyword is no longer used. Now fully compliant with `TAP <https://en.wikipedia.org/wiki/Test_Anything_Protocol>`__ using `ok`/`not ok`\n- `SKIP` now results in `ok`\n- `EXPECTED_FAILURE` now results in `ok`\n- `UNEXPECTED_SUCCESS` is now explicitly handled and results in `not ok`\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Unode/simpletap",
    "keywords": "",
    "license": "MIT",
    "maintainer": "Renato Alves",
    "maintainer_email": "",
    "name": "simpletap",
    "package_url": "https://pypi.org/project/simpletap/",
    "platform": "any",
    "project_url": "https://pypi.org/project/simpletap/",
    "project_urls": {
      "Homepage": "https://github.com/Unode/simpletap"
    },
    "release_url": "https://pypi.org/project/simpletap/2.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Unittest runner producing Test Anything Protocol (TAP) output",
    "version": "2.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10066910,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "247c24fa38ab4ffadd86bee3aa3f00574337d95d2d6ecc6ca6bdf45e1aef87e3",
          "md5": "ab913a7ed26a0879235656912f3129bc",
          "sha256": "dc029d10372d270eb26410698495cefa32460090c47b7f984342c84941fed1e7"
        },
        "downloads": -1,
        "filename": "simpletap-1.0.1-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "ab913a7ed26a0879235656912f3129bc",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 13994,
        "upload_time": "2016-05-16T02:23:40",
        "upload_time_iso_8601": "2016-05-16T02:23:40.405186Z",
        "url": "https://files.pythonhosted.org/packages/24/7c/24fa38ab4ffadd86bee3aa3f00574337d95d2d6ecc6ca6bdf45e1aef87e3/simpletap-1.0.1-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9647897c92791698536b52cd43af7264ceb3ebb9093657623445842757cdef51",
          "md5": "74dae38acdf234172353f8cf056635c1",
          "sha256": "2eb8e32c0d5e178963f531977f116ef0df51bfa45795a64b4be39ac8d247ec55"
        },
        "downloads": -1,
        "filename": "simpletap-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "74dae38acdf234172353f8cf056635c1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13997,
        "upload_time": "2016-05-16T02:23:45",
        "upload_time_iso_8601": "2016-05-16T02:23:45.917301Z",
        "url": "https://files.pythonhosted.org/packages/96/47/897c92791698536b52cd43af7264ceb3ebb9093657623445842757cdef51/simpletap-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c735eda4156198c65c46e162fb8e87f5ca670535419753447cc9abcad6d7ce50",
          "md5": "7bddca2645e5b94b9ce173723c33cba9",
          "sha256": "5d48c407119df29b824f404de8c45881e73ee99b4eb57a993fb5725872a3acbc"
        },
        "downloads": -1,
        "filename": "simpletap-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7bddca2645e5b94b9ce173723c33cba9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15573,
        "upload_time": "2016-05-16T02:23:50",
        "upload_time_iso_8601": "2016-05-16T02:23:50.929877Z",
        "url": "https://files.pythonhosted.org/packages/c7/35/eda4156198c65c46e162fb8e87f5ca670535419753447cc9abcad6d7ce50/simpletap-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0358ae45c10d17eb462309a958a02ede7dcf03918a52369845b08f37a12eebf6",
          "md5": "f2ea9420c09ea567db8fc4ca1620a15b",
          "sha256": "b38fa0564678146db147b772edef0984cf3e960c7032049c3198d4fe886d016b"
        },
        "downloads": -1,
        "filename": "simpletap-2.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f2ea9420c09ea567db8fc4ca1620a15b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12641,
        "upload_time": "2021-04-14T21:39:33",
        "upload_time_iso_8601": "2021-04-14T21:39:33.564747Z",
        "url": "https://files.pythonhosted.org/packages/03/58/ae45c10d17eb462309a958a02ede7dcf03918a52369845b08f37a12eebf6/simpletap-2.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "448060f008ab565d111923928b208dc319207be3d77a7cceb1d10f40f925ec20",
          "md5": "9eec2409b84fcdd7063684941d8f2df7",
          "sha256": "d8e12a5783d097ab0e5f394391647a20fface8aace61e2fe28e96a941e52f391"
        },
        "downloads": -1,
        "filename": "simpletap-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9eec2409b84fcdd7063684941d8f2df7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11566,
        "upload_time": "2021-04-14T21:39:35",
        "upload_time_iso_8601": "2021-04-14T21:39:35.806884Z",
        "url": "https://files.pythonhosted.org/packages/44/80/60f008ab565d111923928b208dc319207be3d77a7cceb1d10f40f925ec20/simpletap-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0358ae45c10d17eb462309a958a02ede7dcf03918a52369845b08f37a12eebf6",
        "md5": "f2ea9420c09ea567db8fc4ca1620a15b",
        "sha256": "b38fa0564678146db147b772edef0984cf3e960c7032049c3198d4fe886d016b"
      },
      "downloads": -1,
      "filename": "simpletap-2.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f2ea9420c09ea567db8fc4ca1620a15b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 12641,
      "upload_time": "2021-04-14T21:39:33",
      "upload_time_iso_8601": "2021-04-14T21:39:33.564747Z",
      "url": "https://files.pythonhosted.org/packages/03/58/ae45c10d17eb462309a958a02ede7dcf03918a52369845b08f37a12eebf6/simpletap-2.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "448060f008ab565d111923928b208dc319207be3d77a7cceb1d10f40f925ec20",
        "md5": "9eec2409b84fcdd7063684941d8f2df7",
        "sha256": "d8e12a5783d097ab0e5f394391647a20fface8aace61e2fe28e96a941e52f391"
      },
      "downloads": -1,
      "filename": "simpletap-2.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "9eec2409b84fcdd7063684941d8f2df7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11566,
      "upload_time": "2021-04-14T21:39:35",
      "upload_time_iso_8601": "2021-04-14T21:39:35.806884Z",
      "url": "https://files.pythonhosted.org/packages/44/80/60f008ab565d111923928b208dc319207be3d77a7cceb1d10f40f925ec20/simpletap-2.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}