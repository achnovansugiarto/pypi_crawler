{
  "info": {
    "author": "Giacomo Furlan",
    "author_email": "opensource@giacomofurlan.name",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# CursedUI\n\n[![License: LGPL v3](https://img.shields.io/badge/License-LGPL%20v3-blue.svg)](https://www.gnu.org/licenses/lgpl-3.0)\n[![PEP8](https://img.shields.io/badge/code%20style-pep8-orange.svg)](https://www.python.org/dev/peps/pep-0008/)\n[![Typing](https://img.shields.io/badge/Typing-Fully%20typed-brightgreen)](https://realpython.com/lessons/pros-and-cons-type-hints/)\n![PyPI](https://img.shields.io/pypi/v/cursedui)\n![PyPI - Status](https://img.shields.io/pypi/status/cursedui)\n\nThis is a python graphic library based on the curses library.\n\nIt hides the complexity of the basic library and offers a class-first approach to UI.\n\n## Index\n\n- [CursedUI](#cursedui)\n  - [Index](#index)\n  - [Examples](#examples)\n  - [Available tiles](#available-tiles)\n    - [Split](#split)\n    - [Text](#text)\n    - [Log](#log)\n  - [Extending (creating new tiles)](#extending-creating-new-tiles)\n  - [Tile decorators](#tile-decorators)\n    - [fixed_height](#fixed_height)\n    - [fixed_width](#fixed_width)\n\n## Examples\n\n- Basic: [example.py](example.py)\n- Layout example: [playground.py](playground.py)\n\nYou can run the example files simply by running `python [filename].py`\n\n## Available tiles\n\n### [Split](cursedui/tiles/split.py)\n\nEqually vertically splits the available space between its child tiles.\n\n\n```python\nfrom cursedui import Split\n\nsplitTile = Split(tile1, tile2, ...)\n```\n\n### [Text](cursedui/tiles/text.py)\n\nShows the string subject in the available canvas. `offsetX` and `offsetY` attributes allow to move the pane of the visible text.\n\nInvalid offset values will be reset either to 0 (if offset &lt; 0) or to the calculated maximum offset (if offset &gt; maximum offset).\n\n```python\nfrom cursedui import Text\n\ntextSubject = Subject('myText')\nsplitTile = Text(title='My title', bordered=True, subject=textSubject)\n\nsplitTile.offsetY = 27 # might default to the maximum possible offset\nsplitTile.offsetX = -1 # defaults to 0\n```\n\n### [Log](cursedui/tiles/log.py)\n\nDerived from `Text`. The key difference is the auto-scroll feature, which disables itself whenever the vertical offset (`offsetY`) is not aligned with the last line of the subject (i.e. when manual offset control is used).\n\n```python\nfrom cursedui import Log\n\nlogSubject = Subject('Log line 0')\nsplitTile = Log(title='My scrolling log', bordered=True, subject=logSubject)\n\nfor i in range(100):\n  logSubject(f'{logSubject.value}\\nLog line {i}')\n```\n\n## Extending (creating new tiles)\n\nThe library is made to be easily enhanced with new tiles.\n\nTo create a new tile, you need to extend the `cursedui.Tile` class and implement its abstract `render` method.\n\nSee the [tile.py](cursedui/tile.py) file to see the rest of the overrideable methods.\n\nSee [tiles](cursedui/tiles) folder for a list of tiles available out-of-the-box.\n\nOther than the `render` method, you might want to override the following methods:\n\n- `Tile.onBeforeWindowRefresh` - used to access the curses' window (it should be used for particular cases only). See the [Split tile](cursedui/tiles/split.py) for an example.\n- `Tile.shouldRender` - which should be overwritten returning the super's result and the new tile's particular logic. See the [Text tile](cursedui/tiles/text.py) for an example.\n\n```python\nfrom typing import List\n\nfrom cursedui import Tile, Subject\n\n\nclass Dumb(Tile[str]):\n    def render(self, canvas: Canvas) -> None:\n        lines = [self.subject * canvas.width for _ in range(canvas.height)]\n        canvas.lines = lines\n\n        return canvas\n```\n## Tile decorators\nTile decorators allow to extend their graphical representation without adding complexity to the normal usage. All the available decorators are written in the [tile_decorators.py](cursedui/tile_decorators.py) file.\n\n### fixed_height\nAllows to define a fixed height tile, rather than following the mainstram logic to split the view equally between tiles.\n\nIt will attempt to get the required vertical space, but it will be limited to the main UI's available space. Also notice that this might preclude other views to show (for example if the remaining available space is not sufficient to show the remaining tiles).\n\nCurrently only the main UI class ([CursedUI](cursedui/cursedui.py)) supports this decorator.\n\n```python\nfrom cursedui import Text\nfrom cursedui.tile_decorators import fixed_height\n\nmyTile = fixed_height(maxHeight=20)(Text(...))\n```\n\n### fixed_width\nAllows to define a fixed width tile (absolute, percentage), rather than following the mainstream logic (CursedUI: full width; Split: equally divided).\n\nIt wil lattempt to get the required horizontal space, but it will be limited to the available width. Also notice that if misused, this might prevent other tiles to be shown.\n\nAllowable parents:\n- [CursedUI](cursedui/cursedui.py)\n- [Split](cursedui/tiles/split.py)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/elegos/python-cursedui",
    "keywords": "",
    "license": "LGPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cursedui",
    "package_url": "https://pypi.org/project/cursedui/",
    "platform": "",
    "project_url": "https://pypi.org/project/cursedui/",
    "project_urls": {
      "Homepage": "https://github.com/elegos/python-cursedui"
    },
    "release_url": "https://pypi.org/project/cursedui/0.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Graphic library based on curses",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8641366,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "820803b0b558feb7ebadd65f3beecd67c51eb38068cd4f1c1f6ebb74ad938819",
          "md5": "43288f0b5d527114ed66bc4ce3b64c81",
          "sha256": "1d0f82b80bce632ae89e4d750cf95f94c2f39c563f4bd0a18cc406fd2c46f58c"
        },
        "downloads": -1,
        "filename": "cursedui-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "43288f0b5d527114ed66bc4ce3b64c81",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3624,
        "upload_time": "2020-11-12T12:29:48",
        "upload_time_iso_8601": "2020-11-12T12:29:48.332316Z",
        "url": "https://files.pythonhosted.org/packages/82/08/03b0b558feb7ebadd65f3beecd67c51eb38068cd4f1c1f6ebb74ad938819/cursedui-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "820803b0b558feb7ebadd65f3beecd67c51eb38068cd4f1c1f6ebb74ad938819",
        "md5": "43288f0b5d527114ed66bc4ce3b64c81",
        "sha256": "1d0f82b80bce632ae89e4d750cf95f94c2f39c563f4bd0a18cc406fd2c46f58c"
      },
      "downloads": -1,
      "filename": "cursedui-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "43288f0b5d527114ed66bc4ce3b64c81",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 3624,
      "upload_time": "2020-11-12T12:29:48",
      "upload_time_iso_8601": "2020-11-12T12:29:48.332316Z",
      "url": "https://files.pythonhosted.org/packages/82/08/03b0b558feb7ebadd65f3beecd67c51eb38068cd4f1c1f6ebb74ad938819/cursedui-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}