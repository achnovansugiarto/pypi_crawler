{
  "info": {
    "author": "Aref Mousakhani",
    "author_email": "aref.mousakhani@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Django Rest Structure\n\nThis app make your rest api application simple\n\n# Document\n\n## 1. Install by running\n`pip install django-rest-structure`\n___\n## 2. Add middleware to your `MIDDLEWARE` (or `MIDDLEWARE_CLASSES`) setting like this:\n\n```python\nMIDDLEWARE = (\n   'django_structure.middlewares.middleware.RequestHandlerMiddleware',\n   ...\n)\n```\n___\n## 3. Add exception handler to your `REST_FRAMEWORK` setting like this:\n\n```python\nREST_FRAMEWORK = {\n    ...\n    'EXCEPTION_HANDLER': 'django_structure.results.exception.exception_handler'\n    ...\n}\n```\n###### then add to `YOUR-PROJECT/urls.py`\n```python\nhandler404 = 'django_structure.api.views.error_view_404'\nhandler500 = 'django_structure.api.views.error_view_500'\nhandler403 = 'django_structure.api.views.error_view_403'\nhandler400 = 'django_structure.api.views.error_view_400'\n\n```\n___\n\n\n## 4. Create your result messages like:\n\n```python\nfrom django_structure.results.codes import ResultMessageStructure\nfrom django_structure.results.exception import ResultMessages\n\nclass MyCustomResultMessages(ResultMessages):\n    CUSTOM_ERROR = ResultMessageStructure(1, 'My Custom Error', False, 500)\n    # `1` is your result code\n    # `My Custom Error` is your result message\n    # `False` define result is success or not\n    # `500` is http response code\n```\n___\n\n## 5. Create your custom exception like:\n\n```python\nfrom django_structure.results.exception import Err\n\nclass MyCustomError(MyCustomResultMessages, Err):\n    def __init__(self, *args, **kwargs):\n        super(MyCustomError, self).__init__(*args, **kwargs)\n\n```\n___\n## 6. Now you should create your views like:\n\n```python\nfrom django_structure.api.views import BaseApiView\n\nclass MyView(BaseApiView):\n    def post_method(self, request, *args, **kwargs):\n        result = {}\n        return ResponseStructure(ResultMessages.GET_SUCCESSFULLY, result)\n```\n#### sample 1:\n###### request data: \n\n```json\n{}\n```\n###### response data: \n```json\n{\n    \"status\": {\n        \"code\": 200,\n        \"message\": \"Done\",\n        \"is_success\": true\n    },\n    \"result\": {}\n}\n```\n\n## 7. Create your serializers like:\n\n### 1. simple serializers\n\n```python\nfrom django_structure.api.views import BaseApiView\nfrom django_structure.api.serializers import BaseSerializer\nfrom rest_framework import serializers\n\nclass MySerializer(BaseSerializer):\n    my_field = serializers.CharField()\n\n    def get_response(self):\n        # the request available on self.request\n        response_data = {\n            'my_field': self.validated_data['my_field']\n        }\n        return ResponseStructure(ResultMessages.GET_SUCCESSFULLY, response_data)\n\n\n\nclass MyView(BaseApiView):\n    def post_method(self, request, *args, **kwargs):\n        return MySerializer(request.data, check_is_valid=True, request=request).get_response()\n\n\n```\n#### sample 1:\n###### request data: \n```json\n{\n    \"my_field\": \"test\"\n}\n```\n###### response data: \n```json\n{\n    \"status\": {\n        \"code\": 200,\n        \"message\": \"Done\",\n        \"is_success\": true\n    },\n    \"result\": {\n        \"my_field\": \"test\"\n    }\n}\n```\n### 2. serializer with custom validation\n\n```python\nfrom django_structure.api.views import BaseApiView\nfrom django_structure.api.serializers import BaseSerializer\nfrom django_structure.api.validations import StrFieldValidation\nfrom rest_framework import serializers\n\ndef my_field_vld(value, **extra_params):\n    return value.upper()\n\n\nclass MySerializer(BaseSerializer):\n    # returned object from StrFieldValidation is available on validated_data\n    my_field = serializers.CharField(validators=[StrFieldValidation(\n        regex=r'^[A-Za-z]+$',\n        error_message='just enter alphabet',\n        extra_function=my_field_vld\n    )])\n\n    def get_response(self):\n        # the request available on self.request\n        response_data = {\n            'my_field': self.validated_data['my_field']\n        }\n        return ResponseStructure(ResultMessages.GET_SUCCESSFULLY, response_data)\n\n\nclass MyView(BaseApiView):\n    def post_method(self, request, *args, **kwargs):\n        return MySerializer(request.data, check_is_valid=True, request=request).get_response()\n\n```\n#### sample 1:\n###### request data: \n```json\n{\n    \"my_field\": \"@\"\n}\n```\n###### response data: \n```json\n{\n    \"status\": {\n        \"code\": 406,\n        \"message\": \"Entered Data Is Not Valid\",\n        \"is_success\": false\n    },\n    \"result\": {\n        \"my_field\": [\n            \"enter just alphabet\"\n        ]\n    }\n}\n```\n#### sample 2:\n###### request data: \n```json\n{\n    \"my_field\": \"Test\"\n}\n```\n###### response data: \n```json\n{\n    \"status\": {\n        \"code\": 200,\n        \"message\": \"Done\",\n        \"is_success\": true\n    },\n    \"result\": {\n        \"my_field\": \"TEST\"\n    }\n}\n```\n### 3. list serializer\n\n```python\nfrom django_structure.api.views import BaseApiView\nfrom django_structure.api.serializers import MyListSerializer\n\nclass MySerializer(MyListSerializer):\n\n    def get_response(self):\n        # the request available on self.request\n        my_list = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l']\n        response_data = self.paging_structure(\n            *self.paging(my_list)\n        )\n        return ResponseStructure(ResultMessages.GET_SUCCESSFULLY, response_data)\n\n\nclass MyView(BaseApiView):\n    def post_method(self, request, *args, **kwargs):\n        return MySerializer(request.data, check_is_valid=True, request=request).get_response()\n\n```\n#### sample 1:\n###### request data: \n```json\n{\n    \"page\": 1,\n    \"count\": 5\n}\n```\n###### response data: \n```json\n{\n    \"status\": {\n        \"code\": 200,\n        \"message\": \"Done\",\n        \"is_success\": true\n    },\n    \"result\": {\n        \"list\": [\n            \"a\",\n            \"b\",\n            \"c\",\n            \"d\",\n            \"e\"\n        ],\n        \"page\": 1,\n        \"count_in_page\": 5,\n        \"total_count\": 12\n    }\n}\n```\n\n## 8. Config your settings\n\n##### change structure response function by adding to your `settings.py`\n```python\n\nREST_STRUCTURE_CONF = {\n    'response_handler': 'django_structure.results.structure.response_structure'\n}\n\n```\n###### define your custom function like:\n```python\n\ndef response_structure(response):\n    return {\n        'status': {\n            'code': response.message.code,\n            'message': response.message.message,\n            'is_success': response.message.is_success_result,\n\n        },\n        'result': response.body\n    }\n\n```\n\n##### change logging handler function by adding to your `settings.py`\n```python\n\nREST_STRUCTURE_CONF = {\n        'log_handler': 'django_structure.logs.console.emmit',\n}\n\n```\n###### define your custom function like:\n```python\n\nimport logging\nlogger = logging.Logger('console')\n\n\n\ndef emmit(request, response, error, request_time, response_time):\n    if error is not None:\n        logger.debug(error)\n\n\n```\n## 9. You can see the simple project that use from this package at: [django_rest_structure_sample](https://github.com/ArefMousakhani/django_rest_structure_sample)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ArefMousakhani/django-structure",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-structure",
    "package_url": "https://pypi.org/project/django-structure/",
    "platform": null,
    "project_url": "https://pypi.org/project/django-structure/",
    "project_urls": {
      "Homepage": "https://github.com/ArefMousakhani/django-structure"
    },
    "release_url": "https://pypi.org/project/django-structure/1.4/",
    "requires_dist": [
      "djangorestframework (>=3.12.4)",
      "django (>=3.0.0)"
    ],
    "requires_python": ">=3.8",
    "summary": "Structure for django.",
    "version": "1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15710171,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "264951f0885b33db16455a017d90a40d5a98af4ac5be3d1854a51738c0706db8",
          "md5": "a74b3823453bd9943e6d6c3fd926c421",
          "sha256": "ad22826b2c50ec7398d9ab067b2779c68dd6c5431189fb0451d5cab33cdfe645"
        },
        "downloads": -1,
        "filename": "django_structure-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a74b3823453bd9943e6d6c3fd926c421",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 21494,
        "upload_time": "2022-11-09T09:07:03",
        "upload_time_iso_8601": "2022-11-09T09:07:03.742343Z",
        "url": "https://files.pythonhosted.org/packages/26/49/51f0885b33db16455a017d90a40d5a98af4ac5be3d1854a51738c0706db8/django_structure-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d9aed8809cba7b92763c04d2ae3cd4d4d4da3677ac2c6aa68c6daa349b6d967c",
          "md5": "7599de0f7827124f677f04c5e27e011f",
          "sha256": "56bd35450ebdd45885701eeaa920ed66f1237fb2e0680d02f8c4f08b96b99d3f"
        },
        "downloads": -1,
        "filename": "django-structure-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7599de0f7827124f677f04c5e27e011f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 9885,
        "upload_time": "2022-11-09T09:07:07",
        "upload_time_iso_8601": "2022-11-09T09:07:07.817291Z",
        "url": "https://files.pythonhosted.org/packages/d9/ae/d8809cba7b92763c04d2ae3cd4d4d4da3677ac2c6aa68c6daa349b6d967c/django-structure-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e664864ce448f0870725eda69fcaba907e1fbe94cbac265e0324873bd71a6c49",
          "md5": "4d6619312e105558a35b235d41100b5d",
          "sha256": "d925cf73c78e067803cdb446e4058dd7d84e16cb2cd8658469a0c3404e5f6025"
        },
        "downloads": -1,
        "filename": "django_structure-1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4d6619312e105558a35b235d41100b5d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 21557,
        "upload_time": "2022-11-09T10:29:26",
        "upload_time_iso_8601": "2022-11-09T10:29:26.213559Z",
        "url": "https://files.pythonhosted.org/packages/e6/64/864ce448f0870725eda69fcaba907e1fbe94cbac265e0324873bd71a6c49/django_structure-1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d8bb73434aefa38f0e9a5bb43605c465cef49d961eae9dea458a5d64be876d42",
          "md5": "1f75ec5b3fdc05db04691f19624f2c61",
          "sha256": "190cc36867ca03046015806cb411e6270764e4f10728054913b62c8a5bf2b29b"
        },
        "downloads": -1,
        "filename": "django-structure-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1f75ec5b3fdc05db04691f19624f2c61",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 9911,
        "upload_time": "2022-11-09T10:29:29",
        "upload_time_iso_8601": "2022-11-09T10:29:29.751729Z",
        "url": "https://files.pythonhosted.org/packages/d8/bb/73434aefa38f0e9a5bb43605c465cef49d961eae9dea458a5d64be876d42/django-structure-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c774e4615449b4cfd9f43cc6a560149de4b8b93066d679fcb21f76f691490fae",
          "md5": "9e1d128eb597cecf7913eddc3d5dfa0a",
          "sha256": "3f86bbb66ef46345cffbf1833902da05313ba025d0cc84da503066d4ee12491c"
        },
        "downloads": -1,
        "filename": "django_structure-1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9e1d128eb597cecf7913eddc3d5dfa0a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 21563,
        "upload_time": "2022-11-09T10:31:17",
        "upload_time_iso_8601": "2022-11-09T10:31:17.817554Z",
        "url": "https://files.pythonhosted.org/packages/c7/74/e4615449b4cfd9f43cc6a560149de4b8b93066d679fcb21f76f691490fae/django_structure-1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "37702a4a7c6ce75b7ea333d43ce056516261c3a35002ab754d340f3dcf9cc23d",
          "md5": "96547ad9635f527ee18240a8108488eb",
          "sha256": "929706822de6bf7c525644cdeb96ad73a5ed63eb4846e85e9c67deabbb97fefa"
        },
        "downloads": -1,
        "filename": "django-structure-1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "96547ad9635f527ee18240a8108488eb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 9924,
        "upload_time": "2022-11-09T10:31:25",
        "upload_time_iso_8601": "2022-11-09T10:31:25.578694Z",
        "url": "https://files.pythonhosted.org/packages/37/70/2a4a7c6ce75b7ea333d43ce056516261c3a35002ab754d340f3dcf9cc23d/django-structure-1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cae0c8f2112b08abbb69fff46e9687b0f570bb27944ff8697570f6c63868e005",
          "md5": "6ceeda81828840a48d9cf8dcf75885ea",
          "sha256": "92e8ca2b44dd09bebf62b8bd346dc12166fd960220625246d541c6d8e448660c"
        },
        "downloads": -1,
        "filename": "django_structure-1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6ceeda81828840a48d9cf8dcf75885ea",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 21568,
        "upload_time": "2022-11-09T10:32:49",
        "upload_time_iso_8601": "2022-11-09T10:32:49.069099Z",
        "url": "https://files.pythonhosted.org/packages/ca/e0/c8f2112b08abbb69fff46e9687b0f570bb27944ff8697570f6c63868e005/django_structure-1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f0169d0da5c313a7a555d5bcdfddebce079b87495feefe4747c3c66cc2107d9e",
          "md5": "dc5d95ff2360d7ae750ae31e7c339c84",
          "sha256": "a021c8d9fbef89068939c1c5fbc0d1eacdc53cf6e1c9f1f5e24de2c6600732b8"
        },
        "downloads": -1,
        "filename": "django-structure-1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "dc5d95ff2360d7ae750ae31e7c339c84",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 9920,
        "upload_time": "2022-11-09T10:32:55",
        "upload_time_iso_8601": "2022-11-09T10:32:55.077389Z",
        "url": "https://files.pythonhosted.org/packages/f0/16/9d0da5c313a7a555d5bcdfddebce079b87495feefe4747c3c66cc2107d9e/django-structure-1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "754898d2206cb876ea2a31ca8ac5ef16696fd2002c04a1674896ca2331fec628",
          "md5": "f26896ab5d1faa982a02b40810fddf64",
          "sha256": "bc10f60c21a0099be7655d85692c7fa76a79ece21c0c441298d9f01dbeb84d36"
        },
        "downloads": -1,
        "filename": "django_structure-1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f26896ab5d1faa982a02b40810fddf64",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 21588,
        "upload_time": "2022-11-09T10:39:41",
        "upload_time_iso_8601": "2022-11-09T10:39:41.045385Z",
        "url": "https://files.pythonhosted.org/packages/75/48/98d2206cb876ea2a31ca8ac5ef16696fd2002c04a1674896ca2331fec628/django_structure-1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e6a130018b76143afd5f015e25caa2efa2363845f7da695ec49dfccdb939be68",
          "md5": "a9c95ff625fae04471dc3e302cd357c9",
          "sha256": "a8900e9a66f59f543bcfdf3bc51a3af1a075ce0d21079aef09d0f37ebd976dc1"
        },
        "downloads": -1,
        "filename": "django-structure-1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "a9c95ff625fae04471dc3e302cd357c9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 9951,
        "upload_time": "2022-11-09T10:40:04",
        "upload_time_iso_8601": "2022-11-09T10:40:04.220144Z",
        "url": "https://files.pythonhosted.org/packages/e6/a1/30018b76143afd5f015e25caa2efa2363845f7da695ec49dfccdb939be68/django-structure-1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "754898d2206cb876ea2a31ca8ac5ef16696fd2002c04a1674896ca2331fec628",
        "md5": "f26896ab5d1faa982a02b40810fddf64",
        "sha256": "bc10f60c21a0099be7655d85692c7fa76a79ece21c0c441298d9f01dbeb84d36"
      },
      "downloads": -1,
      "filename": "django_structure-1.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f26896ab5d1faa982a02b40810fddf64",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 21588,
      "upload_time": "2022-11-09T10:39:41",
      "upload_time_iso_8601": "2022-11-09T10:39:41.045385Z",
      "url": "https://files.pythonhosted.org/packages/75/48/98d2206cb876ea2a31ca8ac5ef16696fd2002c04a1674896ca2331fec628/django_structure-1.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e6a130018b76143afd5f015e25caa2efa2363845f7da695ec49dfccdb939be68",
        "md5": "a9c95ff625fae04471dc3e302cd357c9",
        "sha256": "a8900e9a66f59f543bcfdf3bc51a3af1a075ce0d21079aef09d0f37ebd976dc1"
      },
      "downloads": -1,
      "filename": "django-structure-1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "a9c95ff625fae04471dc3e302cd357c9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 9951,
      "upload_time": "2022-11-09T10:40:04",
      "upload_time_iso_8601": "2022-11-09T10:40:04.220144Z",
      "url": "https://files.pythonhosted.org/packages/e6/a1/30018b76143afd5f015e25caa2efa2363845f7da695ec49dfccdb939be68/django-structure-1.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}