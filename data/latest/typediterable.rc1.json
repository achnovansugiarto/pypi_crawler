{
  "info": {
    "author": "osoken",
    "author_email": "osoken.devel@outlook.jp",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# typediterable\n\n`typediterable` is a simple python package for the actual typing of each element of an iterable with type hint notation.\n\n## Install\n\n```\npip install git+ssh://git@github.com/osoken/typediterable.git\n```\n\n## Features and Examples\n\n### Actual Typing with Type Hint Notation\n\nThe following example shows how the main component `typediterable.TypedIterable` works:\n\n```py\nfrom dataclasses import dataclass\nfrom typediterable import TypedIterable\n\n@dataclass\nclass User:\n    id: int\n    name: str\n\nraw_data = [{\"id\": 0, \"name\": \"Alice\"}, {\"id\": 1, \"name\": \"Bob\"}]\nfor d in TypedIterable[User](raw_data):\n    assert isinstance(d, User)\n```\n\nIt is equivalent to write:\n\n```py\nfrom dataclasses import dataclass\nfrom typediterable import TypedIterable\n\n@dataclass\nclass User:\n    id: int\n    name: str\n\nraw_data = [{\"id\": 0, \"name\": \"Alice\"}, {\"id\": 1, \"name\": \"Bob\"}]\nfor d in (User(**d) for d in raw_data):\n    assert isinstance(d, User)\n```\n\n### Error Handling\n\n`typediterable.TypedIterable` also has the error handling feature.\n\n```py\nfrom dataclasses import dataclass\nfrom typediterable import TypedIterable\nfrom collections.abc import Mapping\nfrom typing import Union\n\n@dataclass\nclass User:\n    id: int\n    name: str\n\ndef error_handler(d: Mapping[str, Union[int, str]], i: int, e: Exception) -> None:\n    print(f\"{i}th element `{d}` is invalid due to the following error: {e}\")\n\nraw_data = [{\"id\": 0, \"name\": \"Alice\"}, {\"name\": \"lack of id\"}, {\"id\": 1, \"name\": \"Bob\"}]\nfor d in TypedIterable[User](raw_data, on_error=error_handler):\n    assert isinstance(d, User)\n```\n\nThe above example prints the following string:\n\n```\n1th element `{'name': 'lack of id'}` is invalid due to the following error: User.__init__() missing 1 required positional argument: 'id'\n```\n\nand it doesn't stop iterating.\nThe example is equivalent to write:\n\n```py\nfrom dataclasses import dataclass\nfrom typediterable import TypedIterable\nfrom collections.abc import Mapping\nfrom typing import Union\n\n@dataclass\nclass User:\n    id: int\n    name: str\n\nraw_data = [{\"id\": 0, \"name\": \"Alice\"}, {\"name\": \"lack of id\"}, {\"id\": 1, \"name\": \"Bob\"}]\nfor i, raw_d in enumerate(raw_data):\n    try:\n        d = User(**raw_d)\n    except Exception as e:\n        print(f\"{i}th element `{raw_d}` is invalid due to the following error: {e}\")\n    assert isinstance(d, User)\n```\n\n### Automatic Unpacking Arguments\n\n`typediterable.TypedIterable` checks the signature and automatically unpacks the arguments.\nFor functions which takes multiple positional arguments or multiple keyword arguments, such as `dataclass` and `pydantic.BaseModel`, it unpacks just like the above example.\nIf the function is single-argument, no unpacking is done.\n\n```py\nfrom typediterable import TypedIterable\n\nraw_data = [\"1\", \"2\", \"3\", \"4\"]\nfor d in TypedIterable[int](raw_data):\n    assert isinstance(d, int)\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/osoken/typediterable",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "typediterable",
    "package_url": "https://pypi.org/project/typediterable/",
    "platform": null,
    "project_url": "https://pypi.org/project/typediterable/",
    "project_urls": {
      "Homepage": "https://github.com/osoken/typediterable"
    },
    "release_url": "https://pypi.org/project/typediterable/0.0.1/",
    "requires_dist": [
      "flake8 ; extra == 'dev'",
      "pytest ; extra == 'dev'",
      "black ; extra == 'dev'",
      "mypy ; extra == 'dev'",
      "tox ; extra == 'dev'",
      "isort ; extra == 'dev'",
      "pytest-mock ; extra == 'dev'",
      "mkdocs ; extra == 'docs'",
      "mkdocs-material ; extra == 'docs'",
      "mkdocs-include-markdown-plugin ; extra == 'docs'"
    ],
    "requires_python": "",
    "summary": "A Simple python package to apply typing to iterables.",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16855991,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5a1da726f13e03a6f6bd1371408f3460ea8c69e69b10371bbc248e4075b38f48",
          "md5": "4ad149bc4550beca0e9e077909e3b9b2",
          "sha256": "ac4620232e866cc25744482f4a01aa5c7e817458d3feb9e626193f9ff3425811"
        },
        "downloads": -1,
        "filename": "typediterable-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4ad149bc4550beca0e9e077909e3b9b2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5192,
        "upload_time": "2023-02-14T13:36:35",
        "upload_time_iso_8601": "2023-02-14T13:36:35.186972Z",
        "url": "https://files.pythonhosted.org/packages/5a/1d/a726f13e03a6f6bd1371408f3460ea8c69e69b10371bbc248e4075b38f48/typediterable-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "559135be14b46624361386806bc46ba3675aaaa24df77102b3a194da6ed8a9e1",
          "md5": "b1e2440011e4de4c759f01da90fa438b",
          "sha256": "fc6539a30d22660d537750db2e8947b45039c9c9b9766bbebb1842c320e3417e"
        },
        "downloads": -1,
        "filename": "typediterable-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b1e2440011e4de4c759f01da90fa438b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7971,
        "upload_time": "2023-02-14T13:36:37",
        "upload_time_iso_8601": "2023-02-14T13:36:37.386753Z",
        "url": "https://files.pythonhosted.org/packages/55/91/35be14b46624361386806bc46ba3675aaaa24df77102b3a194da6ed8a9e1/typediterable-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5a1da726f13e03a6f6bd1371408f3460ea8c69e69b10371bbc248e4075b38f48",
        "md5": "4ad149bc4550beca0e9e077909e3b9b2",
        "sha256": "ac4620232e866cc25744482f4a01aa5c7e817458d3feb9e626193f9ff3425811"
      },
      "downloads": -1,
      "filename": "typediterable-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4ad149bc4550beca0e9e077909e3b9b2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 5192,
      "upload_time": "2023-02-14T13:36:35",
      "upload_time_iso_8601": "2023-02-14T13:36:35.186972Z",
      "url": "https://files.pythonhosted.org/packages/5a/1d/a726f13e03a6f6bd1371408f3460ea8c69e69b10371bbc248e4075b38f48/typediterable-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "559135be14b46624361386806bc46ba3675aaaa24df77102b3a194da6ed8a9e1",
        "md5": "b1e2440011e4de4c759f01da90fa438b",
        "sha256": "fc6539a30d22660d537750db2e8947b45039c9c9b9766bbebb1842c320e3417e"
      },
      "downloads": -1,
      "filename": "typediterable-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "b1e2440011e4de4c759f01da90fa438b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7971,
      "upload_time": "2023-02-14T13:36:37",
      "upload_time_iso_8601": "2023-02-14T13:36:37.386753Z",
      "url": "https://files.pythonhosted.org/packages/55/91/35be14b46624361386806bc46ba3675aaaa24df77102b3a194da6ed8a9e1/typediterable-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}