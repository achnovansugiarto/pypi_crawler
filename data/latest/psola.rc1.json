{
  "info": {
    "author": "Max Morrison",
    "author_email": "maxrmorrison@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Time-domain pitch-synchronous overlap-add (TD-PSOLA)\n[![PyPI](https://img.shields.io/pypi/v/psola.svg)](https://pypi.python.org/pypi/psola)\n[![License: GPL v3](https://img.shields.io/badge/License-GPLv3-blue.svg)](https://www.gnu.org/licenses/gpl-3.0)\n<!-- [![Downloads](https://pepy.tech/badge/psola)](https://pepy.tech/project/psola) -->\n\nThis module permits contant- and variable-rate pitch-shifting and\ntime-stretching of speech. It is a wrapper around the\n[`parselmouth`](https://github.com/YannickJadoul/Parselmouth) [1]\nwrapper around the Praat [2] implementation of TD-PSOLA [3]. Pitch-shifting\nis performed by providing a numpy array of target pitch values equally spaced\nover time. Variable-rate time stretching uses forced phoneme alignment via\n[`pypar`](https://github.com/maxrmorrison/pypar).\n\nIf you need to extract pitch features or phoneme alignments, see\n[`torchcrepe`](https://github.com/maxrmorrison/torchcrepe) for pitch estimation\nand [`pyfoal`](https://github.com/maxrmorrison/pyfoal) for forced alignment.\nIf you only want to perform pitch-shifting, you do not need to extract\nforced alignments. If you want to do variable-rate time stretching, you do not\nneed to perform pitch estimation.\n\n\n## Installation\n\n`pip install psola`\n\n\n## Usage\n\nIf you want to perform pitch-shifting or time-stretching on audio already\nloaded into memory, use `psola.vocode`. If you want to do this with audio\nsaved in a file, use `psola.from_file`. You can use `psola.to_file` or\n`psola.from_file_to_file` to save the results to a file. To process many\nfiles at once with multiprocessing, use `psola.from_files_to_files`.\nEach of these functions is documented below. The command-line interface\nwraps the arguments of `psola.from_files_to_files` and is described in\nthe next section.\n\n\n### `psola.vocode`\n\n```python\n\"\"\"Performs pitch vocoding using Praat\n\nArguments\n    audio : np.array(shape=(samples,))\n        The speech signal to process\n    sample_rate : int\n        The audio sampling rate.\n    source_alignment : pypar.Alignment\n        The current alignment if performing time-stretching\n    target_alignment : pypar.Alignment\n        The target alignment if performing time-stretching\n    target_pitch : np.array(shape=(frames,))\n        The target pitch contour\n    constant_stretch : float or None\n        A constant value for time-stretching\n    fmin : int\n        The minimum allowable frequency in Hz.\n    fmax : int\n        The maximum allowable frequency in Hz.\n\nReturns\n    audio : np.array(shape=(samples,))\n        The vocoded audio\n\"\"\"\n```\n\n\n### `psola.from_file`\n\n```python\n\"\"\"Performs vocoding using Praat\n\nArguments\n    audio_file : string\n        The file containing the speech signal to process\n    source_alignment_file : string or None\n        The file containing the original alignment\n    target_alignment_file : string or None\n        The file containing the target alignment\n    target_pitch_file : string or None\n        The file containing the target pitch\n    constant_stretch : float or None\n        A constant value for time-stretching\n    fmin : int\n        The minimum allowable frequency in Hz.\n    fmax : int\n        The maximum allowable frequency in Hz.\n\nReturns\n    audio : np.array(shape=(samples,))\n        The vocoded audio\n    sample_rate : int\n        The audio sampling rate\n\"\"\"\n```\n\n\n### `psola.to_file`\n\n```python\n\"\"\"Performs pitch vocoding and saves audio to disk\n\nArguments\n    audio : np.array(shape=(samples,))\n        The speech signal to process\n    sample_rate : int\n        The audio sampling rate\n    output_file : string\n        The file to save the vocoded speech\n    source_alignment : pypar.Alignment\n        The current alignment if performing time-stretching\n    target_alignment : pypar.Alignment\n        The target alignment if performing time-stretching\n    target_pitch : np.array(shape=(frames,))\n        The target pitch contour\n    constant_stretch : float or None\n        A constant value for time-stretching\n    fmin : int\n        The minimum allowable frequency in Hz.\n    fmax : int\n        The maximum allowable frequency in Hz.\n\"\"\"\n```\n\n\n### `psola.from_file_to_file`\n\n```python\n\"\"\"Performs vocoding using Praat and save to disk\n\nArguments\n    audio_file : string\n        The file containing the speech signal to process\n    output_file : string\n        The file to save the vocoded speech\n    source_alignment_file : string or None\n        The file containing the original alignment\n    target_alignment_file : string or None\n        The file containing the target alignment\n    target_pitch_file : string or None\n        The file containing the target pitch\n    constant_stretch : float or None\n        A constant value for time-stretching\n    fmin : int\n        The minimum allowable frequency in Hz.\n    fmax : int\n        The maximum allowable frequency in Hz.\n\"\"\"\n```\n\n\n### `psola.from_files_to_files`\n\n```python\n\"\"\"Performs vocoding using Praat and save to disk\n\nArguments\n    audio_files : list\n        The files containing the speech signals to process\n    output_files : list\n        The files to save the vocoded speech\n    source_alignment_files : string or None\n        The files containing the original alignments\n    target_alignment_files : list or None\n        The files containing the target alignments\n    target_pitch_files : list or None\n        The files containing the target pitch\n    constant_stretch : float or None\n        A constant value for time-stretching\n    fmin : int\n        The minimum allowable frequency in Hz.\n    fmax : int\n        The maximum allowable frequency in Hz.\n\"\"\"\n```\n\n\n## Command-line interface\n\n```\nusage: python -m psola\n    [-h]\n    [--audio_files AUDIO_FILES [AUDIO_FILES ...]]\n    [--source_alignment_files SOURCE_ALIGNMENT_FILES [SOURCE_ALIGNMENT_FILES ...]]\n    [--target_alignment_files TARGET_ALIGNMENT_FILES [TARGET_ALIGNMENT_FILES ...]]\n    [--constant_stretch CONSTANT_STRETCH]\n    [--target_pitch_files TARGET_PITCH_FILES [TARGET_PITCH_FILES ...]]\n    [--fmin FMIN]\n    [--fmax FMAX]\n    [--output_files OUTPUT_FILES [OUTPUT_FILES ...]]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --audio_files AUDIO_FILES [AUDIO_FILES ...]\n                        The speech signal to process\n  --source_alignment_files SOURCE_ALIGNMENT_FILES [SOURCE_ALIGNMENT_FILES ...]\n                        The files containing the original alignments\n  --target_alignment_files TARGET_ALIGNMENT_FILES [TARGET_ALIGNMENT_FILES ...]\n                        The files containing the target alignments\n  --constant_stretch CONSTANT_STRETCH\n                        A constant value for time-stretching\n  --target_pitch_files TARGET_PITCH_FILES [TARGET_PITCH_FILES ...]\n                        The target pitch contour\n  --fmin FMIN           The minimum allowable frequency in Hz\n  --fmax FMAX           The maximum allowable frequency in Hz\n  --output_files OUTPUT_FILES [OUTPUT_FILES ...]\n                        Where to save the vocoded audio\n```\n\n\n## References\n\n[1] Y. Jadoul, B. Thompson, and B. De Boer, \"Introducing parselmouth: A python interface to praat,\" Journal of Phonetics, vol. 71, pp. 1â€“15, 2018.\n\n[2] P. Boersma, \"Praat: doing phonetics by computer\", http://www.praat.org/, 2006.\n\n[3] E. Moulines and F. Charpentier, \"Pitch-synchronous waveform processing techniques for text-to-speech synthesis using diphones,\" Speech communication, 1990.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/maxrmorrison/psola",
    "keywords": "audio,duration,pitch,speech,stretch,vocode",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "psola",
    "package_url": "https://pypi.org/project/psola/",
    "platform": "",
    "project_url": "https://pypi.org/project/psola/",
    "project_urls": {
      "Homepage": "https://github.com/maxrmorrison/psola"
    },
    "release_url": "https://pypi.org/project/psola/0.0.1/",
    "requires_dist": [
      "numpy",
      "pypar",
      "soundfile",
      "tqdm",
      "praat-parselmouth"
    ],
    "requires_python": "",
    "summary": "Time-domain pitch-synchronous overlap-add",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9939786,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "42ca7bb639f4c51acdcb94795eb80bde6b7a32697724b706841bbabb36a94861",
          "md5": "2f7eaf877be31494912d649cf354bc1c",
          "sha256": "34874c442398640b01fbaffe385959f3a1c30e94dbde8a138dd3dfd36858a5e3"
        },
        "downloads": -1,
        "filename": "psola-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2f7eaf877be31494912d649cf354bc1c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19193,
        "upload_time": "2021-03-31T20:04:55",
        "upload_time_iso_8601": "2021-03-31T20:04:55.875282Z",
        "url": "https://files.pythonhosted.org/packages/42/ca/7bb639f4c51acdcb94795eb80bde6b7a32697724b706841bbabb36a94861/psola-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6b80595fe228e5d785328567ad9a4354260c21f27465c032b8ede6f665c3fd1a",
          "md5": "7712a0c093966c7094a939a6f778516a",
          "sha256": "a09edebc0dc1bcaff1cfd6fa98b8f294ae2a0732d71befa8a27f2cb094081d1f"
        },
        "downloads": -1,
        "filename": "psola-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7712a0c093966c7094a939a6f778516a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7144,
        "upload_time": "2021-03-31T20:04:56",
        "upload_time_iso_8601": "2021-03-31T20:04:56.815579Z",
        "url": "https://files.pythonhosted.org/packages/6b/80/595fe228e5d785328567ad9a4354260c21f27465c032b8ede6f665c3fd1a/psola-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "42ca7bb639f4c51acdcb94795eb80bde6b7a32697724b706841bbabb36a94861",
        "md5": "2f7eaf877be31494912d649cf354bc1c",
        "sha256": "34874c442398640b01fbaffe385959f3a1c30e94dbde8a138dd3dfd36858a5e3"
      },
      "downloads": -1,
      "filename": "psola-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2f7eaf877be31494912d649cf354bc1c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 19193,
      "upload_time": "2021-03-31T20:04:55",
      "upload_time_iso_8601": "2021-03-31T20:04:55.875282Z",
      "url": "https://files.pythonhosted.org/packages/42/ca/7bb639f4c51acdcb94795eb80bde6b7a32697724b706841bbabb36a94861/psola-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6b80595fe228e5d785328567ad9a4354260c21f27465c032b8ede6f665c3fd1a",
        "md5": "7712a0c093966c7094a939a6f778516a",
        "sha256": "a09edebc0dc1bcaff1cfd6fa98b8f294ae2a0732d71befa8a27f2cb094081d1f"
      },
      "downloads": -1,
      "filename": "psola-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "7712a0c093966c7094a939a6f778516a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7144,
      "upload_time": "2021-03-31T20:04:56",
      "upload_time_iso_8601": "2021-03-31T20:04:56.815579Z",
      "url": "https://files.pythonhosted.org/packages/6b/80/595fe228e5d785328567ad9a4354260c21f27465c032b8ede6f665c3fd1a/psola-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}