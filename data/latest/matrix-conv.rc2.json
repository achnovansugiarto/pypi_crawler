{
  "info": {
    "author": "shobrook",
    "author_email": "shobrookj@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# MatrixConv\n\n`MatrixConv` is a graph convolutional filter for graphs where the node features are n-dimensional matrices, such as 2D or 3D images, such as a [scene graph](https://en.wikipedia.org/wiki/Scene_graph). The filter applies a (non-graph) convolution, i.e. `torch.nn.Conv{1/2/3}d`, to transform the node features. Node embeddings are updated like so:\n\n<p align=\"center\">\n    <img src=\"assets/equation.png\" width=\"47%\" />\n</p>\n\nWhere _&phi;<sub>r</sub>_ and _&phi;<sub>m</sub>_ are CNNs ([`torch.nn.Conv{1/2/3}d`](https://pytorch.org/docs/stable/nn.html#torch.nn.Conv1d)), and _W<sub>e</sub>_ is a weight matrix.\n\n## Installation\n\nThis module can be installed with `pip`:\n\n```bash\n$ pip install matrix_conv\n```\n\n## Usage\n\n`MatrixConv` is built on PyTorch Geometric and derives from the [`MessagePassing`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.message_passing.MessagePassing) module. It expects an input graph where each node's \"features\" is a matrix (either 1D, 2D, or 3D). `MatrixConv`, similarly to [`NNConv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.NNConv), also incorporates any available edge features when collecting messages from a node's neighbors.\n\n**Parameters:**\n\n- **in_channels** (_int_): Number of channels in the input node matrix (e.g. if each node's features is a 3x5 matrix with 2 input channels, then `in_channels=2`)\n- **out_channels** (_int_): Number of channels in the output node embedding\n- **matrix_dims** (_list_ or _tuple_): Dimensions of matrix associated with node (e.g. if each node's features is a 3x5 matrix, then `matrix_dims=[3, 5]`)\n- **num_edge_attr** (_int_): Number of edge attributes/features\n- **kernel_dims** (_list_ or _tuple_): Dimensions of the convolving kernel in the CNN\n- **aggr** (_string_, _optional_): The message aggregation scheme to use (\"add\", \"mean\", \"max\")\n- **root_cnn** (_bool_, _optional_): If set to `False`, the layer will not add the CNN-transformed root node features to the output\n- **bias** (_bool_, _optional_): If set to `False`, the layer will not learn an additive bias\n- **\\*\\*kwargs** (_optional_): Additional arguments for `torch.nn.Conv{1/2/3}d`\n\n**Example Usage:**\n\n```python\nimport torch\nfrom matrix_conv import MatrixConv\n\n# Convolutional layer\nconv_layer = MatrixConv(\n    in_channels=1,\n    out_channels=10,\n    matrix_dims=[5, 5, 5],\n    num_edge_attr=3,\n    kernel_dims=[2, 3, 3]\n)\n\n# Your input graph (see: https://pytorch-geometric.readthedocs.io/en/latest/notes/introduction.html#data-handling-of-graphs)\nx = torch.randn((3, 1, 5, 5, 5), dtype=torch.float) # Shape is [num_nodes, in_channels, *matrix_dims]\nedge_index = torch.tensor([\n    [0, 1, 1, 2],\n    [1, 0, 2, 1]\n], dtype=torch.long)\nedge_attr = torch.randn((4, 3), dtype=torch.float)\n\n# Your output graph\nx = conv_layer(x, edge_index, edge_attr) # Shape is now [3, 10, 4, 3, 3]\n```\n\n**To-Do:** Show example of using this in a graph classifier (include stacking)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/shobrook/MatrixConv",
    "keywords": "gnn,graph-neural-network,convolution,pytorch,graph,cnn,matrix,image",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "matrix-conv",
    "package_url": "https://pypi.org/project/matrix-conv/",
    "platform": "",
    "project_url": "https://pypi.org/project/matrix-conv/",
    "project_urls": {
      "Homepage": "https://github.com/shobrook/MatrixConv"
    },
    "release_url": "https://pypi.org/project/matrix-conv/1.0.1/",
    "requires_dist": null,
    "requires_python": ">=3",
    "summary": "Graph convolutional operator that uses a CNN as a filter",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7931965,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8873be0507a0684c2ead86610b098eed33478be5b91c57f953bc7ba202477e59",
          "md5": "84cfd2c72a7c21bc74bdcc043195fd81",
          "sha256": "05743718f2882854eb8a843a3948487272f5ebf88d2a16ebd0b10f24ef8c914d"
        },
        "downloads": -1,
        "filename": "matrix_conv-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "84cfd2c72a7c21bc74bdcc043195fd81",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 3849,
        "upload_time": "2020-07-27T02:50:15",
        "upload_time_iso_8601": "2020-07-27T02:50:15.838489Z",
        "url": "https://files.pythonhosted.org/packages/88/73/be0507a0684c2ead86610b098eed33478be5b91c57f953bc7ba202477e59/matrix_conv-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "12e445391edd9c7075b73d46279215ee02bf42527ad451e2ed422b0a0a322923",
          "md5": "0f9a4448a2fa60a7e32d90dd40a7ad28",
          "sha256": "98b140165a995b692485190cff45d352ccc571a444385c04d09614f563680930"
        },
        "downloads": -1,
        "filename": "matrix_conv-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0f9a4448a2fa60a7e32d90dd40a7ad28",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 3641,
        "upload_time": "2020-08-11T04:27:00",
        "upload_time_iso_8601": "2020-08-11T04:27:00.009010Z",
        "url": "https://files.pythonhosted.org/packages/12/e4/45391edd9c7075b73d46279215ee02bf42527ad451e2ed422b0a0a322923/matrix_conv-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "12e445391edd9c7075b73d46279215ee02bf42527ad451e2ed422b0a0a322923",
        "md5": "0f9a4448a2fa60a7e32d90dd40a7ad28",
        "sha256": "98b140165a995b692485190cff45d352ccc571a444385c04d09614f563680930"
      },
      "downloads": -1,
      "filename": "matrix_conv-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "0f9a4448a2fa60a7e32d90dd40a7ad28",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3",
      "size": 3641,
      "upload_time": "2020-08-11T04:27:00",
      "upload_time_iso_8601": "2020-08-11T04:27:00.009010Z",
      "url": "https://files.pythonhosted.org/packages/12/e4/45391edd9c7075b73d46279215ee02bf42527ad451e2ed422b0a0a322923/matrix_conv-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}