{
  "info": {
    "author": "Jean-Benoist Leger",
    "author_email": "jb@leger.tf",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3 :: Only"
    ],
    "description": "A tool for automatic assignments of students to timeslot.\n\n## Installation\n\n - From pypi: \n   ```\n   pip install assignator\n   ```\n\n - Dev version:\n   ```\n   git clone https://github.com/jb-leger/assignator\n   cd assignator/\n   pip install -e .\n   ```\n\n\n## Python module\n### `assignments(bmat, order=1, ntry=10)`\n```\nMake assignments between rows and columns.\n\n    The objective is to have assigments following the following conditions:\n     - all association are allowed in bmat,\n     - each row is associated with a unique column,\n     - each column is associated with a unique row,\n     - all rows are associated.\n\n    A classical use case is to assign students to defense schedule.\n\n    Parameters\n    ----------\n    bmat : array of bool or int\n        Binary matrix indicating which assignments are allowed.\n    order : int, optional\n        Order of the greedy search. Default: 1. A higher oreder can be used for\n        small dataset if a solution can not be found with oreder 1.\n    ntry : int\n        Number of random tries to use to solve the assignments problem.\n\n    Returns\n    -------\n    AssignmentResult\n        Attributes are:\n          - ``best_assignments`` contains the assigments that solve the problem\n            or aith the higher number of associated rows.\n          - ``not_assigned_rows`` contains the indexes of not assignated rows in\n            the ``best_assignments`` (empty if the problem is solved)\n          - ``problematic_rows`` contains tuples of problematics rows indexes\n            and scores. A higher score indicating a row is problematic for the\n            assignement problem.\n\n```\n## Cli usage\n```\nusage: assignator [-h] [-e TIMESLOT_FILE] [-o OUTPUT_FILE] [-t TIMESLOT_FILE]\n                  [-g GROUPS_FILE]\n                  INPUT_FILE\n\nA tool to assign students to time slots.\n\nWith allowed assignments provided in a csv (e.g. from a survey),\nprovide a acceptable solution.\n\npositional arguments:\n  INPUT_FILE            Input CSV file with headers. Encoding and CSV dialect\n                        are autodetected. This file must contain a header. The\n                        firsts columns contains a student identifier (e.g. the\n                        name or the name and the email address). Following\n                        columns are timeslots. the column name must identify\n                        the timeslot and therefore must be unique.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -e TIMESLOT_FILE, --export-timeslots TIMESLOT_FILE\n                        Export in TIMESLOT_FILE all timeslots from the input\n                        csv.\n  -o OUTPUT_FILE, --output OUTPUT_FILE\n                        Output CSV file where to write assignments. The\n                        encoding and CSV dialect is the same than the input.\n  -t TIMESLOT_FILE, --timeslots TIMESLOT_FILE\n                        Restrict allowed timeslots to timeslots provided in\n                        TIMESLOT_FILE. All line beginning with a '#' is\n                        ignored. See -e to generate a version of this file. If\n                        not provided, all timeslots are allowed.\n  -g GROUPS_FILE, --groups GROUPS_FILE\n                        Students are in groups, and the assignments must be\n                        done by groups. The GROUPS_FILE must be a CSV with a\n                        header and two columns, the first must be a column\n                        identifying the student and must have exactly the same\n                        name than one of the columns provided in the\n                        INPUT_FILE, and values must corresponds (order or rows\n                        doesn't matter), and the second column must be a group\n                        identifier (whatever its name). If more than one\n                        student answer for a group, the intersection is made\n                        to build allowed timeslots for the group.\n\nWorkflow example:\n  - Give a survey to your students providing a little bit more time\n    slots than student number. Export the survey result in CSV.\n  - To have a fist allocation, run the command:\n      assignator survey.csv -o output.csv\n    If you have not assigned students, contact all the students\n    marked as problematic (not only the not assigned) to extend\n    their choices. Once a allocation can be made go to next step.\n  - If you have more time slots than student, you can try to choice\n    the time slot you want to free.\n     1. First, export the timeslot list from the csv:\n         assignator survey.csv -e timeslots.txt\n     2. Edit the timeslots file, adding a '#' in the begining of the\n        timeslots you want to free.\n     3. Run the command with the timeslots\n         assignator -t timeslots.txt survey.csv -o output.csv\n\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jb-leger/assignator",
    "keywords": "csv",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "assignator",
    "package_url": "https://pypi.org/project/assignator/",
    "platform": "",
    "project_url": "https://pypi.org/project/assignator/",
    "project_urls": {
      "Homepage": "https://github.com/jb-leger/assignator"
    },
    "release_url": "https://pypi.org/project/assignator/0.4/",
    "requires_dist": [
      "argparse",
      "argcomplete",
      "numpy",
      "cchardet"
    ],
    "requires_python": ">=3.6",
    "summary": "A tool assignate students to timeslots.",
    "version": "0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7360993,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e6ac754b2cad5b9674916d13e432f9261cdf0f97e3dd6d9d8739381f8717511a",
          "md5": "f4fa4f788a2be59b5f95e98f816379ff",
          "sha256": "c182ddda3c994b1254a629d936520dec06b6227308eb5c8e5b81afa59c046de2"
        },
        "downloads": -1,
        "filename": "assignator-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f4fa4f788a2be59b5f95e98f816379ff",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10883,
        "upload_time": "2020-05-30T19:30:59",
        "upload_time_iso_8601": "2020-05-30T19:30:59.480157Z",
        "url": "https://files.pythonhosted.org/packages/e6/ac/754b2cad5b9674916d13e432f9261cdf0f97e3dd6d9d8739381f8717511a/assignator-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "23ca171464a4465d992ed3784ca21cdaccc997b84699e107a40cedd037e1d0c7",
          "md5": "39987a2ef978fc152ef85b721d878082",
          "sha256": "98028bb389fbcdb40938a3c75bffe6d0687ddf598a00c1abddb340cb6f5132f7"
        },
        "downloads": -1,
        "filename": "assignator-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "39987a2ef978fc152ef85b721d878082",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10045,
        "upload_time": "2020-05-30T19:31:01",
        "upload_time_iso_8601": "2020-05-30T19:31:01.769439Z",
        "url": "https://files.pythonhosted.org/packages/23/ca/171464a4465d992ed3784ca21cdaccc997b84699e107a40cedd037e1d0c7/assignator-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d9c84201c487b0e8d24fa996ae7766d2fe697ebed7b7afb16d57050d8c7283b",
          "md5": "85d5c7a059fdc54b6885009f925db3ca",
          "sha256": "a499d629d562f19394b519e260aa05759e95789227e10ef8db4784b5242d908c"
        },
        "downloads": -1,
        "filename": "assignator-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "85d5c7a059fdc54b6885009f925db3ca",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10880,
        "upload_time": "2020-05-30T19:36:46",
        "upload_time_iso_8601": "2020-05-30T19:36:46.471971Z",
        "url": "https://files.pythonhosted.org/packages/1d/9c/84201c487b0e8d24fa996ae7766d2fe697ebed7b7afb16d57050d8c7283b/assignator-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "78f4146afeca4408e04200722b5ef76bd212de4d1b8aeb1de7e9e25c24d5d515",
          "md5": "6a3a19d6400c61cdcf5c9154a1f53e38",
          "sha256": "aef8562e5cbcf761000b5bcf4ef3c88bb496b3c7a76dce7f8aef697b826b3a6d"
        },
        "downloads": -1,
        "filename": "assignator-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6a3a19d6400c61cdcf5c9154a1f53e38",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10060,
        "upload_time": "2020-05-30T19:36:47",
        "upload_time_iso_8601": "2020-05-30T19:36:47.834084Z",
        "url": "https://files.pythonhosted.org/packages/78/f4/146afeca4408e04200722b5ef76bd212de4d1b8aeb1de7e9e25c24d5d515/assignator-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f73cd0257d7fff5b39c19ff90600c4838a19f42457009b00f82da38ea5ac16ba",
          "md5": "604815546da27cf792d3245a45543041",
          "sha256": "42a9cec16d571a6a995ffc1e22d19803f0da6343d4d2f43877a4a77c8041bf5b"
        },
        "downloads": -1,
        "filename": "assignator-0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "604815546da27cf792d3245a45543041",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10878,
        "upload_time": "2020-05-30T19:38:56",
        "upload_time_iso_8601": "2020-05-30T19:38:56.129836Z",
        "url": "https://files.pythonhosted.org/packages/f7/3c/d0257d7fff5b39c19ff90600c4838a19f42457009b00f82da38ea5ac16ba/assignator-0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "22b6c2d35e4cde2c5e5739913601037632e4e013cd3f7d661e771e7615402bde",
          "md5": "857e7a743788519226309b29ccd4a93d",
          "sha256": "640c1e5b816c9a4d09c339ced8f20512d9659b32065a9cb54899e1ace79cda45"
        },
        "downloads": -1,
        "filename": "assignator-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "857e7a743788519226309b29ccd4a93d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10052,
        "upload_time": "2020-05-30T19:38:57",
        "upload_time_iso_8601": "2020-05-30T19:38:57.713680Z",
        "url": "https://files.pythonhosted.org/packages/22/b6/c2d35e4cde2c5e5739913601037632e4e013cd3f7d661e771e7615402bde/assignator-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e562552744549c661b6e9fa895f120dc22fe202e6f7b48682866c161f872afba",
          "md5": "e4db3256972ce13e36daad2e2a94ef90",
          "sha256": "f7cc949f68fa215df8704a1e2c77b6b11335efa4f8211d0c041bc6d7a1eb2e35"
        },
        "downloads": -1,
        "filename": "assignator-0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e4db3256972ce13e36daad2e2a94ef90",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10918,
        "upload_time": "2020-05-30T20:03:35",
        "upload_time_iso_8601": "2020-05-30T20:03:35.455247Z",
        "url": "https://files.pythonhosted.org/packages/e5/62/552744549c661b6e9fa895f120dc22fe202e6f7b48682866c161f872afba/assignator-0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8aea64e20f032da5d788665fcfb2324fde7bb33ac3412f017478036b13d6954c",
          "md5": "b10c14772283842713eec26109492d7c",
          "sha256": "47d9c27cec15f0d711da29a4ec7fd228275babdd692e785160f5b369931ab374"
        },
        "downloads": -1,
        "filename": "assignator-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "b10c14772283842713eec26109492d7c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10085,
        "upload_time": "2020-05-30T20:03:36",
        "upload_time_iso_8601": "2020-05-30T20:03:36.873301Z",
        "url": "https://files.pythonhosted.org/packages/8a/ea/64e20f032da5d788665fcfb2324fde7bb33ac3412f017478036b13d6954c/assignator-0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e562552744549c661b6e9fa895f120dc22fe202e6f7b48682866c161f872afba",
        "md5": "e4db3256972ce13e36daad2e2a94ef90",
        "sha256": "f7cc949f68fa215df8704a1e2c77b6b11335efa4f8211d0c041bc6d7a1eb2e35"
      },
      "downloads": -1,
      "filename": "assignator-0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e4db3256972ce13e36daad2e2a94ef90",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 10918,
      "upload_time": "2020-05-30T20:03:35",
      "upload_time_iso_8601": "2020-05-30T20:03:35.455247Z",
      "url": "https://files.pythonhosted.org/packages/e5/62/552744549c661b6e9fa895f120dc22fe202e6f7b48682866c161f872afba/assignator-0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8aea64e20f032da5d788665fcfb2324fde7bb33ac3412f017478036b13d6954c",
        "md5": "b10c14772283842713eec26109492d7c",
        "sha256": "47d9c27cec15f0d711da29a4ec7fd228275babdd692e785160f5b369931ab374"
      },
      "downloads": -1,
      "filename": "assignator-0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "b10c14772283842713eec26109492d7c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 10085,
      "upload_time": "2020-05-30T20:03:36",
      "upload_time_iso_8601": "2020-05-30T20:03:36.873301Z",
      "url": "https://files.pythonhosted.org/packages/8a/ea/64e20f032da5d788665fcfb2324fde7bb33ac3412f017478036b13d6954c/assignator-0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}