{
  "info": {
    "author": "Ather Abbas",
    "author_email": "ather_abbas786@yahoo.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "Natural Language :: English",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "\n[![Codacy Badge](https://app.codacy.com/project/badge/Grade/d11c4520bf514a3094dc2c13659d0bc5)](https://www.codacy.com/gh/AtrCheema/SeqMetrics/dashboard?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=AtrCheema/SeqMetrics&amp;utm_campaign=Badge_Grade)\n[![License: GPL v3](https://img.shields.io/badge/License-GPL%20v3-blue.svg)](https://www.gnu.org/licenses/gpl-3.0)\n[![HitCount](http://hits.dwyl.com/AtrCheema/SeqMetrics.svg)](http://hits.dwyl.com/AtrCheema/SeqMetrics)\n[![Downloads](https://pepy.tech/badge/SeqMetrics)](https://pepy.tech/project/SeqMetrics)\n[![Documentation Status](https://readthedocs.org/projects/seqmetrics/badge/?version=latest)](https://seqmetrics.readthedocs.io/en/latest/?badge=latest)\n[![PyPI version](https://badge.fury.io/py/SeqMetrics.svg)](https://badge.fury.io/py/SeqMetrics)\n![GitHub code size in bytes](https://img.shields.io/github/languages/code-size/AtrCheema/SeqMetrics)\n![GitHub contributors](https://img.shields.io/github/contributors/AtrCheema/SeqMetrics)\n![GitHub last commit (branch)](https://img.shields.io/github/last-commit/AtrCheema/SeqMetrics/master)\n\nThe purpose of this repository to collect various classification and regression \nperformance metrics or errors which can be calculated for time-series/sequential/tabular data, \nat one place. Currently only 1-dimensional data is supported.\n\n## How to Install\n\nYou can install SeqMetrics using `pip`\n\n    pip install SeqMetrics\n\nor using GitHub link for the latest code\n\n\tpython -m pip install git+https://github.com/AtrCheema/SeqMetrics.git\n\nor using setup file, go to folder where repo is downloaded\n\n    python setup.py install\n\n\n## How to Use\nSeqMetrics provides a uniform API for calculation of both regression and classification metrics.\n\n### RegressionMetrics\n\n```python\nimport numpy as np\nfrom SeqMetrics import RegressionMetrics\n\ntrue = np.random.random((20, 1))\npred = np.random.random((20, 1))\n\ner = RegressionMetrics(true, pred)\n\nfor m in er.all_methods: print(\"{:20}\".format(m)) # get names of all availabe methods\n\ner.nse()   # calculate Nash Sutcliff efficiency\n\ner.calculate_all(verbose=True)  # or calculate errors using all available methods \n```\n\nWe can visualize the calcuated performance metrics if we have [easy_mpl](https://easy-mpl.readthedocs.io) package installed.\n```python\nimport numpy as np\nfrom SeqMetrics import RegressionMetrics, plot_metrics\n\nnp.random.seed(313)\ntrue = np.random.random((20, 1))\npred = np.random.random((20, 1))\n\ner = RegressionMetrics(true, pred)\n\nplot_metrics(er.calculate_all(),  color=\"Blues\")\n```\n\n<p float=\"left\">\n  <img src=\"/docs/source/imgs/reg1.png\" width=\"500\" />\n  <img src=\"/docs/source/imgs/reg2.png\" width=\"500\" />\n</p>\n\n<p float=\"left\">\n  <img src=\"/docs/source/imgs/reg3.png\" width=\"500\" />\n  <img src=\"/docs/source/imgs/reg4.png\" width=\"500\" />\n</p>\n\n\n`RegressionMetrics` currently, calculates following performane metrics for regression.\n\n| Name                          | Name in this repository  |\n| -------------------------- | ------------- |\n| Absolute Percent Bias | `abs_pbias` |\n| Agreement Index | `agreement_index` |\n| Aitchison Distance | `aitchison` |\n| Alpha decomposition of the NSE | `nse_alpha` |\n| Anomaly correction coefficient | `acc` |\n| Bias | `bias` |\n| Beta decomposition of NSE | `nse_beta` |\n| Bounded NSE | `nse_bound` |\n| Bounded KGE | `kge_bound` |\n| Brier Score | `brier_score` |\n| Correlation Coefficient | `corr_coeff` |\n| Coefficient of Determination | `r2` |\n| Centered Root Mean Square Deviation | `centered_rms_dev` |\n| Covariances | `covariance` |\n| Decomposed Mean Square Error | `decomposed_mse` |\n| Explained variance score | `exp_var_score` |\n| Euclid Distance | `euclid_distance` |\n| Geometric Mean Difference | `gmaen_diff` |\n| Geometric Mean Absolute Error | `gmae` |\n| Geometric Mean Relative Absolute Error | `gmrae` |\n| Inertial Root Squared Error | `irmse` |\n| Integral Normalized Root Squared Error | `inrse` |\n| Inter-percentile Normalized Root Mean Squared Error | `nrmse_ipercentile` |\n| Jensen-shannon divergence | `JS` |\n| Kling-Gupta Efficiency | `kge` |\n| Legate-McCabe Efficiency Index | `lm_index` |\n| Logrithmic Nash Sutcliff Efficiency | `log_nse` |\n| Logrithmic probability distribution | `log_prob` |\n| maximum error | `max_error` |\n| Mean Absolute Error | `mae` |\n| Mean Absolute Percentage Deviation | `mapd` |\n| Mean Absolute Percentage Error | `mape` |\n| Mean Absolute Relative Error | `mare` |\n| Mean Absolute Scaled Error | `mase` |\n| Mean Arctangle Absolute Percentage Error | `maape` |\n| Mean Bias Error | `mean_bias_error` |\n| Mean Bounded relative Absolute Error | `mbrae` |\n| Mean Errors | `me` |\n| Mean Gamma Deviances | `mean_gamma_deviance` |\n| Mean Log Error | `mle` |\n| Mean Normalized Root Mean Square Error | `nrmse_mean` |\n| Mean Percentage Error | `mpe` |\n| Mean Poisson Deviance | `mean_poisson_deviance` |\n| Mean Relative Absolute Error | `mrae` |\n| Mean Square Error | `mse` |\n| Mean Square Logrithmic Errors | `mean_square_log_error` |\n| Mean Variance | `mean_var` |\n| Median Absolute Error | `median_abs_error` |\n| Median Absolute Percentage Error | `mdape` |\n| Median Dictionary Accuracy | |\n| Median Error | `mde` |\n| Median Relative Absolute Error | `mdrae` |\n| Median Squared Error | `med_seq_error` |\n| Mielke-Berry R | `mb_r` |\n| Modified Agreement of Index | `mod_agreement_index` |\n| Modified Kling-Gupta Efficiency | `kge_mod` |\n| Modified Nash-Sutcliff Efficiency | `nse_mod` |\n| Nash-Sutcliff Efficiency | `nse` |\n| Non parametric Kling-Gupta Efficiency | `kge_np` |\n| Normalized Absolute Error | `norm_ae` |\n| Normalized Absolute Percentage Error | `norm_ape` |\n| Normalized Euclid Distance | `norm_euclid_distance` |\n| Normalized Root Mean Square Error | `nrmse` |\n| Peak flow bias of the flow duration curve | `fdc_fhv` |\n| Pearson correlation coefficient | `person_r` |\n| Percent Bias | `pbias` |\n| Range Normalized root mean square | `nrmse_range` |\n| Refined Agreement of Index | `ref_agreement_index` |\n| Relative Agreement of Index | `rel_agreement_index` |\n| Relative Absolute Error | `rae` |\n| Relative Root Mean Squared Error | `relative_rmse` |\n| Relative Nash-Sutcliff Efficiency | `nse_rel` |\n| Root Mean Square Errors | `rmse` |\n| Root Mean Square Log Error | `rmsle` |\n| Root Mean Square Percentage Error | `rmspe` |\n| Root Mean Squared Scaled Error | `rmsse` |\n| Root Median Squared Scaled Error | `rmsse` |\n| Root Relative Squared Error | `rrse` |\n| RSR | `rsr` |\n| Separmann correlation coefficient | `spearmann_corr` |\n| Skill Score of Murphy | `skill_score_murphy` |\n| Spectral Angle | `sa` |\n| Spectral Correlation | `sc` |\n| Spectral Gradient Angle | `sga` |\n| Spectral Information Divergence | `sid` |\n| Symmetric kullback-leibler divergence | `KLsym` |\n| Symmetric Mean Absolute Percentage Error | `smape` |\n| Symmetric Median Absolute Percentage Error | `smdape` |\n| sum of squared errors | `sse` | \n| Volume Errors | `volume_error` |\n| Volumetric Efficiency | `ve` |\n| Unscaled Mean Bounded Relative Absolute Error | `umbrae` |\n| Watterson's M | `watt_m` |\n| Weighted Mean Absolute Percent Errors | `wmape` |\n| Weighted Absolute Percentage Error | `wape` |\n\n### ClassificationMetrics\n\nThe API is same for performance metrics of classification problem.\n\n```python\nimport numpy as np\nfrom SeqMetrics import ClassificationMetrics\n\n# boolean array\n\nt = np.array([True, False, False, False])\np = np.array([True, True, True, True])\nmetrics = ClassificationMetrics(t, p)\nprint(metrics.calculate_all())\n\n# binary classification with numerical labels\n\ntrue = np.array([1, 0, 0, 0])\npred = np.array([1, 1, 1, 1])\nmetrics = ClassificationMetrics(true, pred)\nprint(metrics.calculate_all())\n\n# multiclass classification with numerical labels\n\ntrue = np.random.randint(1, 4, 100)\npred = np.random.randint(1, 4, 100)\nmetrics = ClassificationMetrics(true, pred)\nprint(metrics.calculate_all())\n\n# You can also provide logits instead of labels.\n\npredictions = np.array([[0.25, 0.25, 0.25, 0.25],\n                       [0.01, 0.01, 0.01, 0.96]])\ntargets = np.array([[0, 0, 0, 1],\n                    [0, 0, 0, 1]])\nmetrics = ClassificationMetrics(targets, predictions, multiclass=True)\nprint(metrics.calculate_all())\n\n# Working with categorical values is seamless\n\ntrue = np.array(['a', 'b', 'b', 'b']) \npred = np.array(['a', 'a', 'a', 'a'])\nmetrics = ClassificationMetrics(true, pred)\nprint(metrics.calculate_all())\n\n# same goes for multiclass categorical labels\n\nt = np.array(['car', 'truck', 'truck', 'car', 'bike', 'truck'])\np = np.array(['car', 'car',   'bike',  'car', 'bike', 'truck'])\nmetrics = ClassificationMetrics(targets, predictions, multiclass=True)\nprint(metrics.calculate_all())\n```\n\nSeqMetrics library currently calculates following performance metrics\nof classification.\n\n| Name                          | Name in this repository  |\n| -------------------------- | ------------- |\n| Accuracy | `accuracy` |\n| Balanced Accuracy | `balanced_accuracy` |\n| Error Rate | `error_rate` |\n| Recall | `recall` |\n| Precision | `precision` |\n| F1 score | `f1_score` |\n| F2 score | `f2_score` |\n| Specificity | `specificity` |\n| Cross Entropy | `cross_entropy` |\n| False Positive Rate | `false_positive_rate` |\n| False Negative Rate | `false_negative_rate` |\n| False Discovery Rate | `false_discovery_rate` |\n| False Omission Rate | `false_omission_rate` |\n| Negative Predictive Value | `negative_predictive_value` |\n| Positive Likelihood Ratio | `positive_likelihood_ratio` |\n| Negative Likelihood Ratio | `negative_likelihood_ratio` |\n| Prevalence Threshold | `prevalence_threshold` |\n| Youden Index | `youden_index` |\n| Confusion Matrix | `confusion_matrix` |\n| Fowlkes Mallows Index | `fowlkes_mallows_index` |\n| Mathews correlation Coefficient | `mathews_corr_coeff` |\n\n\n## Related\n\n[forecasting_metrics](https://gist.github.com/bshishov/5dc237f59f019b26145648e2124ca1c9)\n\n[hydroeval](https://github.com/ThibHlln/hydroeval)\n\n[SkillMetrics](https://github.com/PeterRochford/SkillMetrics)\n\n[HydroErr](https://github.com/BYU-Hydroinformatics/HydroErr)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/AtrCheema/SeqMetrics",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "SeqMetrics",
    "package_url": "https://pypi.org/project/SeqMetrics/",
    "platform": null,
    "project_url": "https://pypi.org/project/SeqMetrics/",
    "project_urls": {
      "Homepage": "https://github.com/AtrCheema/SeqMetrics"
    },
    "release_url": "https://pypi.org/project/SeqMetrics/1.3.4/",
    "requires_dist": [
      "numpy",
      "scipy",
      "numpy ; extra == 'all'",
      "scipy ; extra == 'all'",
      "easy-mpl ; extra == 'all'"
    ],
    "requires_python": "",
    "summary": "SeqMetrics: Various errors for sequential data",
    "version": "1.3.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15634830,
  "releases": {
    "1.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b87f632d7532f8dbe18193b491ede4964e0c8273b6848d9089039c7cab9c387c",
          "md5": "98577b0d630d8f64e8b1797fe4a2884a",
          "sha256": "3cf0b8ee571021902913bb986846fa972d43c7c31d749f722da4bc8d65f43d35"
        },
        "downloads": -1,
        "filename": "SeqMetrics-1.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "98577b0d630d8f64e8b1797fe4a2884a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 33159,
        "upload_time": "2022-02-19T06:46:50",
        "upload_time_iso_8601": "2022-02-19T06:46:50.409550Z",
        "url": "https://files.pythonhosted.org/packages/b8/7f/632d7532f8dbe18193b491ede4964e0c8273b6848d9089039c7cab9c387c/SeqMetrics-1.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "71dd86d4880351bb5c2277cd5c9a8d2336adb7c8fa90e312a5fbc96e58cfb4b0",
          "md5": "349aff06b8c1b20cb5cc8cddca1a6a03",
          "sha256": "36828660446aadc0e4a3293d6583296024c06d06e0e5202a4b944baca1852e48"
        },
        "downloads": -1,
        "filename": "SeqMetrics-1.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "349aff06b8c1b20cb5cc8cddca1a6a03",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 33139,
        "upload_time": "2022-02-19T08:53:21",
        "upload_time_iso_8601": "2022-02-19T08:53:21.356448Z",
        "url": "https://files.pythonhosted.org/packages/71/dd/86d4880351bb5c2277cd5c9a8d2336adb7c8fa90e312a5fbc96e58cfb4b0/SeqMetrics-1.3.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "50d9ebdfed76d096e2023252da89e6fbef18c67cadf713e03cb1e2aed0980adf",
          "md5": "b8a25ea16d8aebff8b3aa30de1f13949",
          "sha256": "5c21f9432490265d29fbf202fe94659634b5b5204bc0f81f6813558b6ad6c000"
        },
        "downloads": -1,
        "filename": "SeqMetrics-1.3.3.tar.gz",
        "has_sig": false,
        "md5_digest": "b8a25ea16d8aebff8b3aa30de1f13949",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 33387,
        "upload_time": "2022-04-29T06:23:43",
        "upload_time_iso_8601": "2022-04-29T06:23:43.321148Z",
        "url": "https://files.pythonhosted.org/packages/50/d9/ebdfed76d096e2023252da89e6fbef18c67cadf713e03cb1e2aed0980adf/SeqMetrics-1.3.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "04ce4ff4d9aa622b44e47a606199f95f790df72ed0f7bd1cb2f45902f3c31a7a",
          "md5": "1d697ea128b715440a0a87ddda0fec97",
          "sha256": "e9e1c6ab1fc57a4e0aab5ac95a810b544f957602e1a8755a53c9e656aec69afb"
        },
        "downloads": -1,
        "filename": "SeqMetrics-1.3.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1d697ea128b715440a0a87ddda0fec97",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 48419,
        "upload_time": "2022-11-03T00:46:23",
        "upload_time_iso_8601": "2022-11-03T00:46:23.735191Z",
        "url": "https://files.pythonhosted.org/packages/04/ce/4ff4d9aa622b44e47a606199f95f790df72ed0f7bd1cb2f45902f3c31a7a/SeqMetrics-1.3.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c2fdf9bfb196e20ca594eb9602c71763a59eea9e1a760e4ee204d333b107e102",
          "md5": "cb3165405c62960d8f6def1d2925384d",
          "sha256": "993e20f1706defa01e58818cf54ffc3d7e46f690c616bff3e9646679dddf8f6c"
        },
        "downloads": -1,
        "filename": "SeqMetrics-1.3.4.tar.gz",
        "has_sig": false,
        "md5_digest": "cb3165405c62960d8f6def1d2925384d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 37488,
        "upload_time": "2022-11-03T00:46:25",
        "upload_time_iso_8601": "2022-11-03T00:46:25.493121Z",
        "url": "https://files.pythonhosted.org/packages/c2/fd/f9bfb196e20ca594eb9602c71763a59eea9e1a760e4ee204d333b107e102/SeqMetrics-1.3.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "04ce4ff4d9aa622b44e47a606199f95f790df72ed0f7bd1cb2f45902f3c31a7a",
        "md5": "1d697ea128b715440a0a87ddda0fec97",
        "sha256": "e9e1c6ab1fc57a4e0aab5ac95a810b544f957602e1a8755a53c9e656aec69afb"
      },
      "downloads": -1,
      "filename": "SeqMetrics-1.3.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1d697ea128b715440a0a87ddda0fec97",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 48419,
      "upload_time": "2022-11-03T00:46:23",
      "upload_time_iso_8601": "2022-11-03T00:46:23.735191Z",
      "url": "https://files.pythonhosted.org/packages/04/ce/4ff4d9aa622b44e47a606199f95f790df72ed0f7bd1cb2f45902f3c31a7a/SeqMetrics-1.3.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c2fdf9bfb196e20ca594eb9602c71763a59eea9e1a760e4ee204d333b107e102",
        "md5": "cb3165405c62960d8f6def1d2925384d",
        "sha256": "993e20f1706defa01e58818cf54ffc3d7e46f690c616bff3e9646679dddf8f6c"
      },
      "downloads": -1,
      "filename": "SeqMetrics-1.3.4.tar.gz",
      "has_sig": false,
      "md5_digest": "cb3165405c62960d8f6def1d2925384d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 37488,
      "upload_time": "2022-11-03T00:46:25",
      "upload_time_iso_8601": "2022-11-03T00:46:25.493121Z",
      "url": "https://files.pythonhosted.org/packages/c2/fd/f9bfb196e20ca594eb9602c71763a59eea9e1a760e4ee204d333b107e102/SeqMetrics-1.3.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}